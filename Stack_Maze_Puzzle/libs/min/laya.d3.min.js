(function (_0x1f405c, _0x442335) {
    'use strict';
    class _0xc6f01 {
        constructor() {
        }
        static ['isZero'](_0x23aeea) {
            return Math['abs'](_0x23aeea) < _0xc6f01['zeroTolera' + 'nce'];
        }
        static ['nearEqual'](_0x39e760, _0x3932b0) {
            if (_0xc6f01['isZero'](_0x39e760 - _0x3932b0))
                return !![];
            return ![];
        }
        static ['fastInvSqr' + 't'](_0x4e227f) {
            if (_0xc6f01['isZero'](_0x4e227f))
                return _0x4e227f;
            return 0x1 / Math['sqrt'](_0x4e227f);
        }
    }
    _0xc6f01['zeroTolera' + 'nce'] = 0.000001, _0xc6f01['MaxValue'] = 0xffffff048ff9e8000000000000000000, _0xc6f01['MinValue'] = -0xffffff048ff9e8000000000000000000, _0xc6f01['Deg2Rad'] = Math['PI'] / 0xb4;
    class _0x378045 {
        constructor(_0x2aab24 = 0x0, _0x11b9a5 = 0x0) {
            this['x'] = _0x2aab24, this['y'] = _0x11b9a5;
        }
        ['setValue'](_0x429d1c, _0x193f2f) {
            this['x'] = _0x429d1c, this['y'] = _0x193f2f;
        }
        static ['scale'](_0x5c8fd7, _0x5c3781, _0x31c818) {
            _0x31c818['x'] = _0x5c8fd7['x'] * _0x5c3781, _0x31c818['y'] = _0x5c8fd7['y'] * _0x5c3781;
        }
        ['fromArray'](_0x54f866, _0x1cecb4 = 0x0) {
            this['x'] = _0x54f866[_0x1cecb4 + 0x0], this['y'] = _0x54f866[_0x1cecb4 + 0x1];
        }
        ['cloneTo'](_0x2fe9f0) {
            var _0x418d88 = _0x2fe9f0;
            _0x418d88['x'] = this['x'], _0x418d88['y'] = this['y'];
        }
        static ['dot'](_0x900007, _0x53c659) {
            return _0x900007['x'] * _0x53c659['x'] + _0x900007['y'] * _0x53c659['y'];
        }
        static ['normalize'](_0x32ee94, _0x4081f5) {
            var _0x45c6a0 = _0x32ee94['x'], _0x1368b0 = _0x32ee94['y'], _0x1bc545 = _0x45c6a0 * _0x45c6a0 + _0x1368b0 * _0x1368b0;
            _0x1bc545 > 0x0 && (_0x1bc545 = 0x1 / Math['sqrt'](_0x1bc545), _0x4081f5['x'] = _0x45c6a0 * _0x1bc545, _0x4081f5['y'] = _0x1368b0 * _0x1bc545);
        }
        static ['scalarLeng' + 'th'](_0x34eeb1) {
            var _0xccedd2 = _0x34eeb1['x'], _0xc2f819 = _0x34eeb1['y'];
            return Math['sqrt'](_0xccedd2 * _0xccedd2 + _0xc2f819 * _0xc2f819);
        }
        ['clone']() {
            var _0xd1829b = new _0x378045();
            return this['cloneTo'](_0xd1829b), _0xd1829b;
        }
        ['forNativeE' + 'lement'](_0x4458a3 = null) {
            _0x4458a3 ? (this['elements'] = _0x4458a3, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y']) : this['elements'] = new Float32Array([
                this['x'],
                this['y']
            ]), _0x378045['rewriteNum' + 'Property'](this, 'x', 0x0), _0x378045['rewriteNum' + 'Property'](this, 'y', 0x1);
        }
        static ['rewriteNum' + 'Property'](_0x16fa87, _0x4b16f2, _0x3c503f) {
            Object['defineProp' + 'erty'](_0x16fa87, _0x4b16f2, {
                'get': function () {
                    return this['elements'][_0x3c503f];
                },
                'set': function (_0x49fb14) {
                    this['elements'][_0x3c503f] = _0x49fb14;
                }
            });
        }
    }
    _0x378045['ZERO'] = new _0x378045(0x0, 0x0), _0x378045['ONE'] = new _0x378045(0x1, 0x1);
    class _0x18425e {
        constructor(_0x94006d = 0x0, _0x629250 = 0x0, _0x1ca658 = 0x0, _0x227eac = 0x0) {
            this['x'] = _0x94006d, this['y'] = _0x629250, this['z'] = _0x1ca658, this['w'] = _0x227eac;
        }
        ['setValue'](_0x5de890, _0xb02865, _0xd24d39, _0x1064b1) {
            this['x'] = _0x5de890, this['y'] = _0xb02865, this['z'] = _0xd24d39, this['w'] = _0x1064b1;
        }
        ['fromArray'](_0x87f59c, _0x13038c = 0x0) {
            this['x'] = _0x87f59c[_0x13038c + 0x0], this['y'] = _0x87f59c[_0x13038c + 0x1], this['z'] = _0x87f59c[_0x13038c + 0x2], this['w'] = _0x87f59c[_0x13038c + 0x3];
        }
        ['cloneTo'](_0x2c62de) {
            var _0x46fbfa = _0x2c62de;
            _0x46fbfa['x'] = this['x'], _0x46fbfa['y'] = this['y'], _0x46fbfa['z'] = this['z'], _0x46fbfa['w'] = this['w'];
        }
        ['clone']() {
            var _0x5f19e7 = new _0x18425e();
            return this['cloneTo'](_0x5f19e7), _0x5f19e7;
        }
        static ['lerp'](_0x2ee119, _0x149836, _0x255e8f, _0xdf327c) {
            var _0x1d514c = _0x2ee119['x'], _0x1d0fab = _0x2ee119['y'], _0x36ab72 = _0x2ee119['z'], _0xcefff1 = _0x2ee119['w'];
            _0xdf327c['x'] = _0x1d514c + _0x255e8f * (_0x149836['x'] - _0x1d514c), _0xdf327c['y'] = _0x1d0fab + _0x255e8f * (_0x149836['y'] - _0x1d0fab), _0xdf327c['z'] = _0x36ab72 + _0x255e8f * (_0x149836['z'] - _0x36ab72), _0xdf327c['w'] = _0xcefff1 + _0x255e8f * (_0x149836['w'] - _0xcefff1);
        }
        static ['transformB' + 'yM4x4'](_0x34b0e3, _0x562461, _0x256186) {
            var _0x19f7d8 = _0x34b0e3['x'], _0x186209 = _0x34b0e3['y'], _0x2a9505 = _0x34b0e3['z'], _0x12ce96 = _0x34b0e3['w'], _0x4a56ed = _0x562461['elements'];
            _0x256186['x'] = _0x19f7d8 * _0x4a56ed[0x0] + _0x186209 * _0x4a56ed[0x4] + _0x2a9505 * _0x4a56ed[0x8] + _0x12ce96 * _0x4a56ed[0xc], _0x256186['y'] = _0x19f7d8 * _0x4a56ed[0x1] + _0x186209 * _0x4a56ed[0x5] + _0x2a9505 * _0x4a56ed[0x9] + _0x12ce96 * _0x4a56ed[0xd], _0x256186['z'] = _0x19f7d8 * _0x4a56ed[0x2] + _0x186209 * _0x4a56ed[0x6] + _0x2a9505 * _0x4a56ed[0xa] + _0x12ce96 * _0x4a56ed[0xe], _0x256186['w'] = _0x19f7d8 * _0x4a56ed[0x3] + _0x186209 * _0x4a56ed[0x7] + _0x2a9505 * _0x4a56ed[0xb] + _0x12ce96 * _0x4a56ed[0xf];
        }
        static ['equals'](_0x11eb22, _0x266f8d) {
            return _0xc6f01['nearEqual'](Math['abs'](_0x11eb22['x']), Math['abs'](_0x266f8d['x'])) && _0xc6f01['nearEqual'](Math['abs'](_0x11eb22['y']), Math['abs'](_0x266f8d['y'])) && _0xc6f01['nearEqual'](Math['abs'](_0x11eb22['z']), Math['abs'](_0x266f8d['z'])) && _0xc6f01['nearEqual'](Math['abs'](_0x11eb22['w']), Math['abs'](_0x266f8d['w']));
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x273f36, _0x300ce3) {
            var _0x10805b = _0x273f36['length']();
            if (_0x10805b > 0x0) {
                var _0x5a6270 = 0x1 / _0x10805b;
                _0x300ce3['x'] = _0x273f36['x'] * _0x5a6270, _0x300ce3['y'] = _0x273f36['y'] * _0x5a6270, _0x300ce3['z'] = _0x273f36['z'] * _0x5a6270, _0x300ce3['w'] = _0x273f36['w'] * _0x5a6270;
            }
        }
        static ['add'](_0x1c2786, _0x7f576f, _0x4798dc) {
            _0x4798dc['x'] = _0x1c2786['x'] + _0x7f576f['x'], _0x4798dc['y'] = _0x1c2786['y'] + _0x7f576f['y'], _0x4798dc['z'] = _0x1c2786['z'] + _0x7f576f['z'], _0x4798dc['w'] = _0x1c2786['w'] + _0x7f576f['w'];
        }
        static ['subtract'](_0x25bc4f, _0x297ecc, _0xf51972) {
            _0xf51972['x'] = _0x25bc4f['x'] - _0x297ecc['x'], _0xf51972['y'] = _0x25bc4f['y'] - _0x297ecc['y'], _0xf51972['z'] = _0x25bc4f['z'] - _0x297ecc['z'], _0xf51972['w'] = _0x25bc4f['w'] - _0x297ecc['w'];
        }
        static ['multiply'](_0x4f338b, _0xda2459, _0x1bce3a) {
            _0x1bce3a['x'] = _0x4f338b['x'] * _0xda2459['x'], _0x1bce3a['y'] = _0x4f338b['y'] * _0xda2459['y'], _0x1bce3a['z'] = _0x4f338b['z'] * _0xda2459['z'], _0x1bce3a['w'] = _0x4f338b['w'] * _0xda2459['w'];
        }
        static ['scale'](_0x8cb1dc, _0x1d63b2, _0x3ff518) {
            _0x3ff518['x'] = _0x8cb1dc['x'] * _0x1d63b2, _0x3ff518['y'] = _0x8cb1dc['y'] * _0x1d63b2, _0x3ff518['z'] = _0x8cb1dc['z'] * _0x1d63b2, _0x3ff518['w'] = _0x8cb1dc['w'] * _0x1d63b2;
        }
        static ['Clamp'](_0x35fdf4, _0x3cb711, _0x21000f, _0x5e7f01) {
            var _0x248fc8 = _0x35fdf4['x'], _0x25959e = _0x35fdf4['y'], _0x1ac1ce = _0x35fdf4['z'], _0x44d667 = _0x35fdf4['w'], _0x49ce5c = _0x3cb711['x'], _0x1987ef = _0x3cb711['y'], _0x1a699a = _0x3cb711['z'], _0x2ab36f = _0x3cb711['w'], _0x3d446b = _0x21000f['x'], _0x31c3ff = _0x21000f['y'], _0x540b7f = _0x21000f['z'], _0x3eba2a = _0x21000f['w'];
            _0x248fc8 = _0x248fc8 > _0x3d446b ? _0x3d446b : _0x248fc8, _0x248fc8 = _0x248fc8 < _0x49ce5c ? _0x49ce5c : _0x248fc8, _0x25959e = _0x25959e > _0x31c3ff ? _0x31c3ff : _0x25959e, _0x25959e = _0x25959e < _0x1987ef ? _0x1987ef : _0x25959e, _0x1ac1ce = _0x1ac1ce > _0x540b7f ? _0x540b7f : _0x1ac1ce, _0x1ac1ce = _0x1ac1ce < _0x1a699a ? _0x1a699a : _0x1ac1ce, _0x44d667 = _0x44d667 > _0x3eba2a ? _0x3eba2a : _0x44d667, _0x44d667 = _0x44d667 < _0x2ab36f ? _0x2ab36f : _0x44d667, _0x5e7f01['x'] = _0x248fc8, _0x5e7f01['y'] = _0x25959e, _0x5e7f01['z'] = _0x1ac1ce, _0x5e7f01['w'] = _0x44d667;
        }
        static ['distanceSq' + 'uared'](_0xe5b5cf, _0x5a2eda) {
            var _0x35ff22 = _0xe5b5cf['x'] - _0x5a2eda['x'], _0x3e85df = _0xe5b5cf['y'] - _0x5a2eda['y'], _0x27b546 = _0xe5b5cf['z'] - _0x5a2eda['z'], _0x133e44 = _0xe5b5cf['w'] - _0x5a2eda['w'];
            return _0x35ff22 * _0x35ff22 + _0x3e85df * _0x3e85df + _0x27b546 * _0x27b546 + _0x133e44 * _0x133e44;
        }
        static ['distance'](_0x1821e6, _0x4a7c5f) {
            var _0x384f00 = _0x1821e6['x'] - _0x4a7c5f['x'], _0x494f0b = _0x1821e6['y'] - _0x4a7c5f['y'], _0x360ba8 = _0x1821e6['z'] - _0x4a7c5f['z'], _0x4185f0 = _0x1821e6['w'] - _0x4a7c5f['w'];
            return Math['sqrt'](_0x384f00 * _0x384f00 + _0x494f0b * _0x494f0b + _0x360ba8 * _0x360ba8 + _0x4185f0 * _0x4185f0);
        }
        static ['dot'](_0x1f1353, _0x20af75) {
            return _0x1f1353['x'] * _0x20af75['x'] + _0x1f1353['y'] * _0x20af75['y'] + _0x1f1353['z'] * _0x20af75['z'] + _0x1f1353['w'] * _0x20af75['w'];
        }
        static ['min'](_0x26e35d, _0x50fabe, _0x101c86) {
            _0x101c86['x'] = Math['min'](_0x26e35d['x'], _0x50fabe['x']), _0x101c86['y'] = Math['min'](_0x26e35d['y'], _0x50fabe['y']), _0x101c86['z'] = Math['min'](_0x26e35d['z'], _0x50fabe['z']), _0x101c86['w'] = Math['min'](_0x26e35d['w'], _0x50fabe['w']);
        }
        static ['max'](_0x320be4, _0x131d00, _0x9d5fad) {
            _0x9d5fad['x'] = Math['max'](_0x320be4['x'], _0x131d00['x']), _0x9d5fad['y'] = Math['max'](_0x320be4['y'], _0x131d00['y']), _0x9d5fad['z'] = Math['max'](_0x320be4['z'], _0x131d00['z']), _0x9d5fad['w'] = Math['max'](_0x320be4['w'], _0x131d00['w']);
        }
        ['forNativeE' + 'lement'](_0x404234 = null) {
            _0x404234 ? (this['elements'] = _0x404234, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z'], this['elements'][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x378045['rewriteNum' + 'Property'](this, 'x', 0x0), _0x378045['rewriteNum' + 'Property'](this, 'y', 0x1), _0x378045['rewriteNum' + 'Property'](this, 'z', 0x2), _0x378045['rewriteNum' + 'Property'](this, 'w', 0x3);
        }
    }
    _0x18425e['ZERO'] = new _0x18425e(), _0x18425e['ONE'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), _0x18425e['UnitX'] = new _0x18425e(0x1, 0x0, 0x0, 0x0), _0x18425e['UnitY'] = new _0x18425e(0x0, 0x1, 0x0, 0x0), _0x18425e['UnitZ'] = new _0x18425e(0x0, 0x0, 0x1, 0x0), _0x18425e['UnitW'] = new _0x18425e(0x0, 0x0, 0x0, 0x1);
    class _0x352206 {
        constructor(_0x1fe163 = 0x0, _0xe8ac74 = 0x0, _0x49690b = 0x0, _0x2a0ad3 = null) {
            this['x'] = _0x1fe163, this['y'] = _0xe8ac74, this['z'] = _0x49690b;
        }
        static ['distanceSq' + 'uared'](_0x5756be, _0x1b88f1) {
            var _0x1d0076 = _0x5756be['x'] - _0x1b88f1['x'], _0x47f376 = _0x5756be['y'] - _0x1b88f1['y'], _0x1f4347 = _0x5756be['z'] - _0x1b88f1['z'];
            return _0x1d0076 * _0x1d0076 + _0x47f376 * _0x47f376 + _0x1f4347 * _0x1f4347;
        }
        static ['distance'](_0x4c14ee, _0x33598f) {
            var _0x76b4ea = _0x4c14ee['x'] - _0x33598f['x'], _0xcbe638 = _0x4c14ee['y'] - _0x33598f['y'], _0x160500 = _0x4c14ee['z'] - _0x33598f['z'];
            return Math['sqrt'](_0x76b4ea * _0x76b4ea + _0xcbe638 * _0xcbe638 + _0x160500 * _0x160500);
        }
        static ['min'](_0x266b55, _0x573a8c, _0x3fef2e) {
            _0x3fef2e['x'] = Math['min'](_0x266b55['x'], _0x573a8c['x']), _0x3fef2e['y'] = Math['min'](_0x266b55['y'], _0x573a8c['y']), _0x3fef2e['z'] = Math['min'](_0x266b55['z'], _0x573a8c['z']);
        }
        static ['max'](_0x461966, _0x38b6df, _0xa84919) {
            _0xa84919['x'] = Math['max'](_0x461966['x'], _0x38b6df['x']), _0xa84919['y'] = Math['max'](_0x461966['y'], _0x38b6df['y']), _0xa84919['z'] = Math['max'](_0x461966['z'], _0x38b6df['z']);
        }
        static ['transformQ' + 'uat'](_0x3bc7a8, _0x2d720a, _0x4411b5) {
            var _0x45a0e2 = _0x3bc7a8['x'], _0x400b32 = _0x3bc7a8['y'], _0x48160b = _0x3bc7a8['z'], _0x5a0150 = _0x2d720a['x'], _0x14cb1e = _0x2d720a['y'], _0x25ad98 = _0x2d720a['z'], _0x32686d = _0x2d720a['w'], _0xe87229 = _0x32686d * _0x45a0e2 + _0x14cb1e * _0x48160b - _0x25ad98 * _0x400b32, _0x40deb9 = _0x32686d * _0x400b32 + _0x25ad98 * _0x45a0e2 - _0x5a0150 * _0x48160b, _0x27504e = _0x32686d * _0x48160b + _0x5a0150 * _0x400b32 - _0x14cb1e * _0x45a0e2, _0x4f8dfc = -_0x5a0150 * _0x45a0e2 - _0x14cb1e * _0x400b32 - _0x25ad98 * _0x48160b;
            _0x4411b5['x'] = _0xe87229 * _0x32686d + _0x4f8dfc * -_0x5a0150 + _0x40deb9 * -_0x25ad98 - _0x27504e * -_0x14cb1e, _0x4411b5['y'] = _0x40deb9 * _0x32686d + _0x4f8dfc * -_0x14cb1e + _0x27504e * -_0x5a0150 - _0xe87229 * -_0x25ad98, _0x4411b5['z'] = _0x27504e * _0x32686d + _0x4f8dfc * -_0x25ad98 + _0xe87229 * -_0x14cb1e - _0x40deb9 * -_0x5a0150;
        }
        static ['scalarLeng' + 'th'](_0x236b0b) {
            var _0x3ead5d = _0x236b0b['x'], _0x32c8cd = _0x236b0b['y'], _0x25bace = _0x236b0b['z'];
            return Math['sqrt'](_0x3ead5d * _0x3ead5d + _0x32c8cd * _0x32c8cd + _0x25bace * _0x25bace);
        }
        static ['scalarLeng' + 'thSquared'](_0x235d30) {
            var _0x37502c = _0x235d30['x'], _0x292c4a = _0x235d30['y'], _0x230516 = _0x235d30['z'];
            return _0x37502c * _0x37502c + _0x292c4a * _0x292c4a + _0x230516 * _0x230516;
        }
        static ['normalize'](_0x2eebae, _0x2d1d69) {
            var _0x17c979 = _0x2eebae['x'], _0x704b00 = _0x2eebae['y'], _0x2d4484 = _0x2eebae['z'], _0x10d79c = _0x17c979 * _0x17c979 + _0x704b00 * _0x704b00 + _0x2d4484 * _0x2d4484;
            _0x10d79c > 0x0 && (_0x10d79c = 0x1 / Math['sqrt'](_0x10d79c), _0x2d1d69['x'] = _0x17c979 * _0x10d79c, _0x2d1d69['y'] = _0x704b00 * _0x10d79c, _0x2d1d69['z'] = _0x2d4484 * _0x10d79c);
        }
        static ['multiply'](_0x2c20b0, _0x8896fe, _0x5aa060) {
            _0x5aa060['x'] = _0x2c20b0['x'] * _0x8896fe['x'], _0x5aa060['y'] = _0x2c20b0['y'] * _0x8896fe['y'], _0x5aa060['z'] = _0x2c20b0['z'] * _0x8896fe['z'];
        }
        static ['scale'](_0x41b39b, _0x44881f, _0x15266f) {
            _0x15266f['x'] = _0x41b39b['x'] * _0x44881f, _0x15266f['y'] = _0x41b39b['y'] * _0x44881f, _0x15266f['z'] = _0x41b39b['z'] * _0x44881f;
        }
        static ['lerp'](_0x1ac8c8, _0x4b48da, _0x6a4792, _0x36491c) {
            var _0x1903b7 = _0x1ac8c8['x'], _0x41432b = _0x1ac8c8['y'], _0x16f983 = _0x1ac8c8['z'];
            _0x36491c['x'] = _0x1903b7 + _0x6a4792 * (_0x4b48da['x'] - _0x1903b7), _0x36491c['y'] = _0x41432b + _0x6a4792 * (_0x4b48da['y'] - _0x41432b), _0x36491c['z'] = _0x16f983 + _0x6a4792 * (_0x4b48da['z'] - _0x16f983);
        }
        static ['transformV' + '3ToV3'](_0x1b3fa4, _0x34c997, _0x3a3503) {
            var _0x2d27f1 = _0x352206['_tempVecto' + 'r4'];
            _0x352206['transformV' + '3ToV4'](_0x1b3fa4, _0x34c997, _0x2d27f1), _0x3a3503['x'] = _0x2d27f1['x'], _0x3a3503['y'] = _0x2d27f1['y'], _0x3a3503['z'] = _0x2d27f1['z'];
        }
        static ['transformV' + '3ToV4'](_0xab56ba, _0x586652, _0x2f433c) {
            var _0x1c05b2 = _0xab56ba['x'], _0xcfe54c = _0xab56ba['y'], _0x18c64f = _0xab56ba['z'], _0x57d3e7 = _0x586652['elements'];
            _0x2f433c['x'] = _0x1c05b2 * _0x57d3e7[0x0] + _0xcfe54c * _0x57d3e7[0x4] + _0x18c64f * _0x57d3e7[0x8] + _0x57d3e7[0xc], _0x2f433c['y'] = _0x1c05b2 * _0x57d3e7[0x1] + _0xcfe54c * _0x57d3e7[0x5] + _0x18c64f * _0x57d3e7[0x9] + _0x57d3e7[0xd], _0x2f433c['z'] = _0x1c05b2 * _0x57d3e7[0x2] + _0xcfe54c * _0x57d3e7[0x6] + _0x18c64f * _0x57d3e7[0xa] + _0x57d3e7[0xe], _0x2f433c['w'] = _0x1c05b2 * _0x57d3e7[0x3] + _0xcfe54c * _0x57d3e7[0x7] + _0x18c64f * _0x57d3e7[0xb] + _0x57d3e7[0xf];
        }
        static ['TransformN' + 'ormal'](_0x2636bc, _0x2c31bc, _0x4e3a09) {
            var _0x46a4c6 = _0x2636bc['x'], _0x138e87 = _0x2636bc['y'], _0x2d2511 = _0x2636bc['z'], _0x31a7a7 = _0x2c31bc['elements'];
            _0x4e3a09['x'] = _0x46a4c6 * _0x31a7a7[0x0] + _0x138e87 * _0x31a7a7[0x4] + _0x2d2511 * _0x31a7a7[0x8], _0x4e3a09['y'] = _0x46a4c6 * _0x31a7a7[0x1] + _0x138e87 * _0x31a7a7[0x5] + _0x2d2511 * _0x31a7a7[0x9], _0x4e3a09['z'] = _0x46a4c6 * _0x31a7a7[0x2] + _0x138e87 * _0x31a7a7[0x6] + _0x2d2511 * _0x31a7a7[0xa];
        }
        static ['transformC' + 'oordinate'](_0x3932b8, _0xa90c85, _0xe8eeb7) {
            var _0x3dd897 = _0x3932b8['x'], _0x3c214b = _0x3932b8['y'], _0x143840 = _0x3932b8['z'], _0x446548 = _0xa90c85['elements'], _0x7b9797 = _0x3dd897 * _0x446548[0x3] + _0x3c214b * _0x446548[0x7] + _0x143840 * _0x446548[0xb] + _0x446548[0xf];
            _0xe8eeb7['x'] = (_0x3dd897 * _0x446548[0x0] + _0x3c214b * _0x446548[0x4] + _0x143840 * _0x446548[0x8] + _0x446548[0xc]) / _0x7b9797, _0xe8eeb7['y'] = (_0x3dd897 * _0x446548[0x1] + _0x3c214b * _0x446548[0x5] + _0x143840 * _0x446548[0x9] + _0x446548[0xd]) / _0x7b9797, _0xe8eeb7['z'] = (_0x3dd897 * _0x446548[0x2] + _0x3c214b * _0x446548[0x6] + _0x143840 * _0x446548[0xa] + _0x446548[0xe]) / _0x7b9797;
        }
        static ['Clamp'](_0x59e1d3, _0x55ad30, _0x49545b, _0x211951) {
            var _0x1926f3 = _0x59e1d3['x'], _0x531b85 = _0x59e1d3['y'], _0x423b46 = _0x59e1d3['z'], _0x712c1 = _0x55ad30['x'], _0x37b9f3 = _0x55ad30['y'], _0x28f1a2 = _0x55ad30['z'], _0x49e7af = _0x49545b['x'], _0x480887 = _0x49545b['y'], _0x1a79fa = _0x49545b['z'];
            _0x1926f3 = _0x1926f3 > _0x49e7af ? _0x49e7af : _0x1926f3, _0x1926f3 = _0x1926f3 < _0x712c1 ? _0x712c1 : _0x1926f3, _0x531b85 = _0x531b85 > _0x480887 ? _0x480887 : _0x531b85, _0x531b85 = _0x531b85 < _0x37b9f3 ? _0x37b9f3 : _0x531b85, _0x423b46 = _0x423b46 > _0x1a79fa ? _0x1a79fa : _0x423b46, _0x423b46 = _0x423b46 < _0x28f1a2 ? _0x28f1a2 : _0x423b46, _0x211951['x'] = _0x1926f3, _0x211951['y'] = _0x531b85, _0x211951['z'] = _0x423b46;
        }
        static ['add'](_0xc6da8d, _0x166a49, _0x35b755) {
            _0x35b755['x'] = _0xc6da8d['x'] + _0x166a49['x'], _0x35b755['y'] = _0xc6da8d['y'] + _0x166a49['y'], _0x35b755['z'] = _0xc6da8d['z'] + _0x166a49['z'];
        }
        static ['subtract'](_0x27c897, _0x2b673f, _0x4c2759) {
            _0x4c2759['x'] = _0x27c897['x'] - _0x2b673f['x'], _0x4c2759['y'] = _0x27c897['y'] - _0x2b673f['y'], _0x4c2759['z'] = _0x27c897['z'] - _0x2b673f['z'];
        }
        static ['cross'](_0x1231c2, _0x1d8800, _0x3bd015) {
            var _0x381bfd = _0x1231c2['x'], _0x395b1a = _0x1231c2['y'], _0x2a5f7e = _0x1231c2['z'], _0x29cd86 = _0x1d8800['x'], _0x3c84b7 = _0x1d8800['y'], _0x5cc873 = _0x1d8800['z'];
            _0x3bd015['x'] = _0x395b1a * _0x5cc873 - _0x2a5f7e * _0x3c84b7, _0x3bd015['y'] = _0x2a5f7e * _0x29cd86 - _0x381bfd * _0x5cc873, _0x3bd015['z'] = _0x381bfd * _0x3c84b7 - _0x395b1a * _0x29cd86;
        }
        static ['dot'](_0x340abe, _0x6aa7f4) {
            return _0x340abe['x'] * _0x6aa7f4['x'] + _0x340abe['y'] * _0x6aa7f4['y'] + _0x340abe['z'] * _0x6aa7f4['z'];
        }
        static ['equals'](_0x2d1379, _0x18c896) {
            return _0xc6f01['nearEqual'](_0x2d1379['x'], _0x18c896['x']) && _0xc6f01['nearEqual'](_0x2d1379['y'], _0x18c896['y']) && _0xc6f01['nearEqual'](_0x2d1379['z'], _0x18c896['z']);
        }
        ['setValue'](_0x318487, _0x20414c, _0x21c04b) {
            this['x'] = _0x318487, this['y'] = _0x20414c, this['z'] = _0x21c04b;
        }
        ['fromArray'](_0x59b9b3, _0x2ddb40 = 0x0) {
            this['x'] = _0x59b9b3[_0x2ddb40 + 0x0], this['y'] = _0x59b9b3[_0x2ddb40 + 0x1], this['z'] = _0x59b9b3[_0x2ddb40 + 0x2];
        }
        ['cloneTo'](_0x2a70da) {
            var _0x4e9b58 = _0x2a70da;
            _0x4e9b58['x'] = this['x'], _0x4e9b58['y'] = this['y'], _0x4e9b58['z'] = this['z'];
        }
        ['clone']() {
            var _0x8ece44 = new _0x352206();
            return this['cloneTo'](_0x8ece44), _0x8ece44;
        }
        ['toDefault']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0;
        }
        ['forNativeE' + 'lement'](_0xb6918e = null) {
            _0xb6918e ? (this['elements'] = _0xb6918e, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z']
            ]), _0x378045['rewriteNum' + 'Property'](this, 'x', 0x0), _0x378045['rewriteNum' + 'Property'](this, 'y', 0x1), _0x378045['rewriteNum' + 'Property'](this, 'z', 0x2);
        }
    }
    _0x352206['_tempVecto' + 'r4'] = new _0x18425e(), _0x352206['_ZERO'] = new _0x352206(0x0, 0x0, 0x0), _0x352206['_ONE'] = new _0x352206(0x1, 0x1, 0x1), _0x352206['_NegativeU' + 'nitX'] = new _0x352206(-0x1, 0x0, 0x0), _0x352206['_UnitX'] = new _0x352206(0x1, 0x0, 0x0), _0x352206['_UnitY'] = new _0x352206(0x0, 0x1, 0x0), _0x352206['_UnitZ'] = new _0x352206(0x0, 0x0, 0x1), _0x352206['_ForwardRH'] = new _0x352206(0x0, 0x0, -0x1), _0x352206['_ForwardLH'] = new _0x352206(0x0, 0x0, 0x1), _0x352206['_Up'] = new _0x352206(0x0, 0x1, 0x0), function (_0x416220) {
        _0x416220[_0x416220['High'] = 0x0] = 'High', _0x416220[_0x416220['Low'] = 0x1] = 'Low';
    }(_0x1f405c['PBRRenderQ' + 'uality'] || (_0x1f405c['PBRRenderQ' + 'uality'] = {}));
    class _0x11be5a {
        constructor() {
            var _0x112d99 = this['elements'] = new Float32Array(0x9);
            _0x112d99[0x0] = 0x1, _0x112d99[0x1] = 0x0, _0x112d99[0x2] = 0x0, _0x112d99[0x3] = 0x0, _0x112d99[0x4] = 0x1, _0x112d99[0x5] = 0x0, _0x112d99[0x6] = 0x0, _0x112d99[0x7] = 0x0, _0x112d99[0x8] = 0x1;
        }
        static ['createRota' + 'tionQuater' + 'nion'](_0xcd047d, _0xac66f0) {
            var _0x242952 = _0xcd047d['x'], _0x511fdc = _0xcd047d['y'], _0x5b3b04 = _0xcd047d['z'], _0x2d595d = _0xcd047d['w'], _0xba413d = _0x242952 * _0x242952, _0x1ac308 = _0x511fdc * _0x511fdc, _0x5b0c63 = _0x5b3b04 * _0x5b3b04, _0x49a43a = _0x242952 * _0x511fdc, _0x33ce79 = _0x5b3b04 * _0x2d595d, _0x952c61 = _0x5b3b04 * _0x242952, _0x25e6be = _0x511fdc * _0x2d595d, _0x3c9f60 = _0x511fdc * _0x5b3b04, _0xaea56a = _0x242952 * _0x2d595d, _0x4a802e = _0xac66f0['elements'];
            _0x4a802e[0x0] = 0x1 - 0x2 * (_0x1ac308 + _0x5b0c63), _0x4a802e[0x1] = 0x2 * (_0x49a43a + _0x33ce79), _0x4a802e[0x2] = 0x2 * (_0x952c61 - _0x25e6be), _0x4a802e[0x3] = 0x2 * (_0x49a43a - _0x33ce79), _0x4a802e[0x4] = 0x1 - 0x2 * (_0x5b0c63 + _0xba413d), _0x4a802e[0x5] = 0x2 * (_0x3c9f60 + _0xaea56a), _0x4a802e[0x6] = 0x2 * (_0x952c61 + _0x25e6be), _0x4a802e[0x7] = 0x2 * (_0x3c9f60 - _0xaea56a), _0x4a802e[0x8] = 0x1 - 0x2 * (_0x1ac308 + _0xba413d);
        }
        static ['createFrom' + 'Translatio' + 'n'](_0x40a3e2, _0x137192) {
            var _0x46d270 = _0x137192['elements'];
            _0x46d270[0x0] = 0x1, _0x46d270[0x1] = 0x0, _0x46d270[0x2] = 0x0, _0x46d270[0x3] = 0x0, _0x46d270[0x4] = 0x1, _0x46d270[0x5] = 0x0, _0x46d270[0x6] = _0x40a3e2['x'], _0x46d270[0x7] = _0x40a3e2['y'], _0x46d270[0x8] = 0x1;
        }
        static ['createFrom' + 'Rotation'](_0x2c578a, _0x50f4d6) {
            var _0x33ccbd = _0x50f4d6['elements'], _0xb31e98 = Math['sin'](_0x2c578a), _0x530774 = Math['cos'](_0x2c578a);
            _0x33ccbd[0x0] = _0x530774, _0x33ccbd[0x1] = _0xb31e98, _0x33ccbd[0x2] = 0x0, _0x33ccbd[0x3] = -_0xb31e98, _0x33ccbd[0x4] = _0x530774, _0x33ccbd[0x5] = 0x0, _0x33ccbd[0x6] = 0x0, _0x33ccbd[0x7] = 0x0, _0x33ccbd[0x8] = 0x1;
        }
        static ['createFrom' + 'Scaling'](_0x218c85, _0x385f10) {
            var _0x46901b = _0x385f10['elements'];
            _0x46901b[0x0] = _0x218c85['x'], _0x46901b[0x1] = 0x0, _0x46901b[0x2] = 0x0, _0x46901b[0x3] = 0x0, _0x46901b[0x4] = _0x218c85['y'], _0x46901b[0x5] = 0x0, _0x46901b[0x6] = 0x0, _0x46901b[0x7] = 0x0, _0x46901b[0x8] = _0x218c85['z'];
        }
        static ['createFrom' + 'Matrix4x4'](_0x20e12e, _0x506b90) {
            var _0x3e7f00 = _0x20e12e['elements'], _0x2d3df9 = _0x506b90['elements'];
            _0x2d3df9[0x0] = _0x3e7f00[0x0], _0x2d3df9[0x1] = _0x3e7f00[0x1], _0x2d3df9[0x2] = _0x3e7f00[0x2], _0x2d3df9[0x3] = _0x3e7f00[0x4], _0x2d3df9[0x4] = _0x3e7f00[0x5], _0x2d3df9[0x5] = _0x3e7f00[0x6], _0x2d3df9[0x6] = _0x3e7f00[0x8], _0x2d3df9[0x7] = _0x3e7f00[0x9], _0x2d3df9[0x8] = _0x3e7f00[0xa];
        }
        static ['multiply'](_0x547aff, _0x4e34bf, _0x2131e9) {
            var _0x44c0fe = _0x547aff['elements'], _0x16f085 = _0x4e34bf['elements'], _0x559943 = _0x2131e9['elements'], _0x16d502 = _0x44c0fe[0x0], _0x110bcf = _0x44c0fe[0x1], _0x4db141 = _0x44c0fe[0x2], _0x1ff75f = _0x44c0fe[0x3], _0x5d37d0 = _0x44c0fe[0x4], _0x3ac5ff = _0x44c0fe[0x5], _0x4bb808 = _0x44c0fe[0x6], _0x549a13 = _0x44c0fe[0x7], _0x841958 = _0x44c0fe[0x8], _0xc934a6 = _0x16f085[0x0], _0x595bd8 = _0x16f085[0x1], _0xe8cfbf = _0x16f085[0x2], _0x5e40dc = _0x16f085[0x3], _0x1e633e = _0x16f085[0x4], _0x55baf0 = _0x16f085[0x5], _0x544961 = _0x16f085[0x6], _0xfde73f = _0x16f085[0x7], _0x4e9123 = _0x16f085[0x8];
            _0x559943[0x0] = _0xc934a6 * _0x16d502 + _0x595bd8 * _0x1ff75f + _0xe8cfbf * _0x4bb808, _0x559943[0x1] = _0xc934a6 * _0x110bcf + _0x595bd8 * _0x5d37d0 + _0xe8cfbf * _0xfde73f, _0x559943[0x2] = _0xc934a6 * _0x4db141 + _0x595bd8 * _0x3ac5ff + _0xe8cfbf * _0x841958, _0x559943[0x3] = _0x5e40dc * _0x16d502 + _0x1e633e * _0x1ff75f + _0x55baf0 * _0x4bb808, _0x559943[0x4] = _0x5e40dc * _0x110bcf + _0x1e633e * _0x5d37d0 + _0x55baf0 * _0x549a13, _0x559943[0x5] = _0x5e40dc * _0x4db141 + _0x1e633e * _0x3ac5ff + _0x55baf0 * _0x841958, _0x559943[0x6] = _0x544961 * _0x16d502 + _0xfde73f * _0x1ff75f + _0x4e9123 * _0x4bb808, _0x559943[0x7] = _0x544961 * _0x110bcf + _0xfde73f * _0x5d37d0 + _0x4e9123 * _0x549a13, _0x559943[0x8] = _0x544961 * _0x4db141 + _0xfde73f * _0x3ac5ff + _0x4e9123 * _0x841958;
        }
        ['determinan' + 't']() {
            var _0x59e899 = this['elements'], _0x1d70f9 = _0x59e899[0x0], _0x188f30 = _0x59e899[0x1], _0x290171 = _0x59e899[0x2], _0x32a6b8 = _0x59e899[0x3], _0x28a683 = _0x59e899[0x4], _0x4a2711 = _0x59e899[0x5], _0xf349ac = _0x59e899[0x6], _0x1f26d9 = _0x59e899[0x7], _0x2b848b = _0x59e899[0x8];
            return _0x1d70f9 * (_0x2b848b * _0x28a683 - _0x4a2711 * _0x1f26d9) + _0x188f30 * (-_0x2b848b * _0x32a6b8 + _0x4a2711 * _0xf349ac) + _0x290171 * (_0x1f26d9 * _0x32a6b8 - _0x28a683 * _0xf349ac);
        }
        ['translate'](_0x40f3bc, _0x1298e6) {
            var _0x143a86 = _0x1298e6['elements'], _0x117108 = this['elements'], _0x1c1ffb = _0x117108[0x0], _0xb33e76 = _0x117108[0x1], _0x1c35bd = _0x117108[0x2], _0x2161ba = _0x117108[0x3], _0x461c94 = _0x117108[0x4], _0x5f15a0 = _0x117108[0x5], _0x547c9b = _0x117108[0x6], _0x3b51c4 = _0x117108[0x7], _0x3e8638 = _0x117108[0x8], _0x12701a = _0x40f3bc['x'], _0x2e5a02 = _0x40f3bc['y'];
            _0x143a86[0x0] = _0x1c1ffb, _0x143a86[0x1] = _0xb33e76, _0x143a86[0x2] = _0x1c35bd, _0x143a86[0x3] = _0x2161ba, _0x143a86[0x4] = _0x461c94, _0x143a86[0x5] = _0x5f15a0, _0x143a86[0x6] = _0x12701a * _0x1c1ffb + _0x2e5a02 * _0x2161ba + _0x547c9b, _0x143a86[0x7] = _0x12701a * _0xb33e76 + _0x2e5a02 * _0x461c94 + _0x3b51c4, _0x143a86[0x8] = _0x12701a * _0x1c35bd + _0x2e5a02 * _0x5f15a0 + _0x3e8638;
        }
        ['rotate'](_0x3cb152, _0x24364f) {
            var _0x59fb73 = _0x24364f['elements'], _0x2d161f = this['elements'], _0x25c9ec = _0x2d161f[0x0], _0x2e0033 = _0x2d161f[0x1], _0xb37d88 = _0x2d161f[0x2], _0xdda43b = _0x2d161f[0x3], _0x2997e5 = _0x2d161f[0x4], _0x2f04c5 = _0x2d161f[0x5], _0x5c406c = _0x2d161f[0x6], _0x471acf = _0x2d161f[0x7], _0x4fc9f6 = _0x2d161f[0x8], _0x51918d = Math['sin'](_0x3cb152), _0x1ed739 = Math['cos'](_0x3cb152);
            _0x59fb73[0x0] = _0x1ed739 * _0x25c9ec + _0x51918d * _0xdda43b, _0x59fb73[0x1] = _0x1ed739 * _0x2e0033 + _0x51918d * _0x2997e5, _0x59fb73[0x2] = _0x1ed739 * _0xb37d88 + _0x51918d * _0x2f04c5, _0x59fb73[0x3] = _0x1ed739 * _0xdda43b - _0x51918d * _0x25c9ec, _0x59fb73[0x4] = _0x1ed739 * _0x2997e5 - _0x51918d * _0x2e0033, _0x59fb73[0x5] = _0x1ed739 * _0x2f04c5 - _0x51918d * _0xb37d88, _0x59fb73[0x6] = _0x5c406c, _0x59fb73[0x7] = _0x471acf, _0x59fb73[0x8] = _0x4fc9f6;
        }
        ['scale'](_0x31a19d, _0x45ff2b) {
            var _0x350223 = _0x45ff2b['elements'], _0x3bfb84 = this['elements'], _0xdf35f1 = _0x31a19d['x'], _0x2ba619 = _0x31a19d['y'];
            _0x350223[0x0] = _0xdf35f1 * _0x3bfb84[0x0], _0x350223[0x1] = _0xdf35f1 * _0x3bfb84[0x1], _0x350223[0x2] = _0xdf35f1 * _0x3bfb84[0x2], _0x350223[0x3] = _0x2ba619 * _0x3bfb84[0x3], _0x350223[0x4] = _0x2ba619 * _0x3bfb84[0x4], _0x350223[0x5] = _0x2ba619 * _0x3bfb84[0x5], _0x350223[0x6] = _0x3bfb84[0x6], _0x350223[0x7] = _0x3bfb84[0x7], _0x350223[0x8] = _0x3bfb84[0x8];
        }
        ['invert'](_0x386b44) {
            var _0x2a237f = _0x386b44['elements'], _0xc9c489 = this['elements'], _0x112437 = _0xc9c489[0x0], _0x3e9122 = _0xc9c489[0x1], _0x220b52 = _0xc9c489[0x2], _0x3fd858 = _0xc9c489[0x3], _0x49aad3 = _0xc9c489[0x4], _0x2b976a = _0xc9c489[0x5], _0x2fc31e = _0xc9c489[0x6], _0x23550a = _0xc9c489[0x7], _0x1b4e6c = _0xc9c489[0x8], _0x3f413f = _0x1b4e6c * _0x49aad3 - _0x2b976a * _0x23550a, _0x4fcc46 = -_0x1b4e6c * _0x3fd858 + _0x2b976a * _0x2fc31e, _0x4c7d2c = _0x23550a * _0x3fd858 - _0x49aad3 * _0x2fc31e, _0x3536bd = _0x112437 * _0x3f413f + _0x3e9122 * _0x4fcc46 + _0x220b52 * _0x4c7d2c;
            !_0x3536bd && (_0x386b44 = null), _0x3536bd = 0x1 / _0x3536bd, _0x2a237f[0x0] = _0x3f413f * _0x3536bd, _0x2a237f[0x1] = (-_0x1b4e6c * _0x3e9122 + _0x220b52 * _0x23550a) * _0x3536bd, _0x2a237f[0x2] = (_0x2b976a * _0x3e9122 - _0x220b52 * _0x49aad3) * _0x3536bd, _0x2a237f[0x3] = _0x4fcc46 * _0x3536bd, _0x2a237f[0x4] = (_0x1b4e6c * _0x112437 - _0x220b52 * _0x2fc31e) * _0x3536bd, _0x2a237f[0x5] = (-_0x2b976a * _0x112437 + _0x220b52 * _0x3fd858) * _0x3536bd, _0x2a237f[0x6] = _0x4c7d2c * _0x3536bd, _0x2a237f[0x7] = (-_0x23550a * _0x112437 + _0x3e9122 * _0x2fc31e) * _0x3536bd, _0x2a237f[0x8] = (_0x49aad3 * _0x112437 - _0x3e9122 * _0x3fd858) * _0x3536bd;
        }
        ['transpose'](_0x1c0c40) {
            var _0x126249 = _0x1c0c40['elements'], _0x256645 = this['elements'];
            if (_0x1c0c40 === this) {
                var _0x3b9284 = _0x256645[0x1], _0x2cc8db = _0x256645[0x2], _0x591719 = _0x256645[0x5];
                _0x126249[0x1] = _0x256645[0x3], _0x126249[0x2] = _0x256645[0x6], _0x126249[0x3] = _0x3b9284, _0x126249[0x5] = _0x256645[0x7], _0x126249[0x6] = _0x2cc8db, _0x126249[0x7] = _0x591719;
            } else
                _0x126249[0x0] = _0x256645[0x0], _0x126249[0x1] = _0x256645[0x3], _0x126249[0x2] = _0x256645[0x6], _0x126249[0x3] = _0x256645[0x1], _0x126249[0x4] = _0x256645[0x4], _0x126249[0x5] = _0x256645[0x7], _0x126249[0x6] = _0x256645[0x2], _0x126249[0x7] = _0x256645[0x5], _0x126249[0x8] = _0x256645[0x8];
        }
        ['identity']() {
            var _0x1112e1 = this['elements'];
            _0x1112e1[0x0] = 0x1, _0x1112e1[0x1] = 0x0, _0x1112e1[0x2] = 0x0, _0x1112e1[0x3] = 0x0, _0x1112e1[0x4] = 0x1, _0x1112e1[0x5] = 0x0, _0x1112e1[0x6] = 0x0, _0x1112e1[0x7] = 0x0, _0x1112e1[0x8] = 0x1;
        }
        ['cloneTo'](_0x3a932d) {
            var _0x1dfced, _0x25740d, _0xe21dce;
            _0x25740d = this['elements'], _0xe21dce = _0x3a932d['elements'];
            if (_0x25740d === _0xe21dce)
                return;
            for (_0x1dfced = 0x0; _0x1dfced < 0x9; ++_0x1dfced) {
                _0xe21dce[_0x1dfced] = _0x25740d[_0x1dfced];
            }
        }
        ['clone']() {
            var _0x46e0c6 = new _0x11be5a();
            return this['cloneTo'](_0x46e0c6), _0x46e0c6;
        }
        static ['lookAt'](_0x405dc3, _0x17328d, _0x5d3553, _0x2289b5) {
            _0x352206['subtract'](_0x405dc3, _0x17328d, _0x11be5a['_tempV30']), _0x352206['normalize'](_0x11be5a['_tempV30'], _0x11be5a['_tempV30']), _0x352206['cross'](_0x5d3553, _0x11be5a['_tempV30'], _0x11be5a['_tempV31']), _0x352206['normalize'](_0x11be5a['_tempV31'], _0x11be5a['_tempV31']), _0x352206['cross'](_0x11be5a['_tempV30'], _0x11be5a['_tempV31'], _0x11be5a['_tempV32']);
            var _0x4c3445 = _0x11be5a['_tempV30'], _0x35a30b = _0x11be5a['_tempV31'], _0x1bacb8 = _0x11be5a['_tempV32'], _0x171d80 = _0x2289b5['elements'];
            _0x171d80[0x0] = _0x35a30b['x'], _0x171d80[0x3] = _0x35a30b['y'], _0x171d80[0x6] = _0x35a30b['z'], _0x171d80[0x1] = _0x1bacb8['x'], _0x171d80[0x4] = _0x1bacb8['y'], _0x171d80[0x7] = _0x1bacb8['z'], _0x171d80[0x2] = _0x4c3445['x'], _0x171d80[0x5] = _0x4c3445['y'], _0x171d80[0x8] = _0x4c3445['z'];
        }
    }
    _0x11be5a['DEFAULT'] = new _0x11be5a(), _0x11be5a['_tempV30'] = new _0x352206(), _0x11be5a['_tempV31'] = new _0x352206(), _0x11be5a['_tempV32'] = new _0x352206();
    class _0x207eb6 {
    }
    _0x207eb6['Shader3D'] = null, _0x207eb6['Scene3D'] = null, _0x207eb6['MeshRender' + 'StaticBatc' + 'hManager'] = null, _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager'] = null, _0x207eb6['SubMeshDyn' + 'amicBatch'] = null, _0x207eb6['Laya3D'] = null, _0x207eb6['Matrix4x4'] = null, _0x207eb6['Physics3D'] = null, _0x207eb6['ShadowLigh' + 'tType'] = null;
    class _0x388291 {
        constructor(_0x22d8a0 = 0x0, _0x219bc7 = 0x0, _0x444b90 = 0x0, _0x2fa073 = 0x1, _0x431350 = null) {
            this['x'] = _0x22d8a0, this['y'] = _0x219bc7, this['z'] = _0x444b90, this['w'] = _0x2fa073;
        }
        static ['createFrom' + 'YawPitchRo' + 'll'](_0x5bb56e, _0x2dce80, _0xf7e50a, _0x56a860) {
            var _0x30938f = _0xf7e50a * 0.5, _0x37e7df = _0x2dce80 * 0.5, _0x514bc3 = _0x5bb56e * 0.5, _0x142eca = Math['sin'](_0x30938f), _0x14f700 = Math['cos'](_0x30938f), _0x2c89af = Math['sin'](_0x37e7df), _0x91e8c2 = Math['cos'](_0x37e7df), _0x3073ae = Math['sin'](_0x514bc3), _0x1c896b = Math['cos'](_0x514bc3);
            _0x56a860['x'] = _0x1c896b * _0x2c89af * _0x14f700 + _0x3073ae * _0x91e8c2 * _0x142eca, _0x56a860['y'] = _0x3073ae * _0x91e8c2 * _0x14f700 - _0x1c896b * _0x2c89af * _0x142eca, _0x56a860['z'] = _0x1c896b * _0x91e8c2 * _0x142eca - _0x3073ae * _0x2c89af * _0x14f700, _0x56a860['w'] = _0x1c896b * _0x91e8c2 * _0x14f700 + _0x3073ae * _0x2c89af * _0x142eca;
        }
        static ['multiply'](_0x47e5d5, _0x5c9111, _0x5e3c99) {
            var _0xea54ed = _0x47e5d5['x'], _0x35d375 = _0x47e5d5['y'], _0x35971f = _0x47e5d5['z'], _0x518592 = _0x47e5d5['w'], _0x251915 = _0x5c9111['x'], _0x9f517f = _0x5c9111['y'], _0x1e6bb5 = _0x5c9111['z'], _0x53cca3 = _0x5c9111['w'], _0x1efc35 = _0x35d375 * _0x1e6bb5 - _0x35971f * _0x9f517f, _0xe7391a = _0x35971f * _0x251915 - _0xea54ed * _0x1e6bb5, _0x48dc6c = _0xea54ed * _0x9f517f - _0x35d375 * _0x251915, _0x55dcf3 = _0xea54ed * _0x251915 + _0x35d375 * _0x9f517f + _0x35971f * _0x1e6bb5;
            _0x5e3c99['x'] = _0xea54ed * _0x53cca3 + _0x251915 * _0x518592 + _0x1efc35, _0x5e3c99['y'] = _0x35d375 * _0x53cca3 + _0x9f517f * _0x518592 + _0xe7391a, _0x5e3c99['z'] = _0x35971f * _0x53cca3 + _0x1e6bb5 * _0x518592 + _0x48dc6c, _0x5e3c99['w'] = _0x518592 * _0x53cca3 - _0x55dcf3;
        }
        static ['arcTanAngl' + 'e'](_0x5cc4dc, _0x18bae1) {
            if (_0x5cc4dc == 0x0) {
                if (_0x18bae1 == 0x1)
                    return Math['PI'] / 0x2;
                return -Math['PI'] / 0x2;
            }
            if (_0x5cc4dc > 0x0)
                return Math['atan'](_0x18bae1 / _0x5cc4dc);
            if (_0x5cc4dc < 0x0) {
                if (_0x18bae1 > 0x0)
                    return Math['atan'](_0x18bae1 / _0x5cc4dc) + Math['PI'];
                return Math['atan'](_0x18bae1 / _0x5cc4dc) - Math['PI'];
            }
            return 0x0;
        }
        static ['angleTo'](_0xf9dfdc, _0x3d990d, _0x40002a) {
            _0x352206['subtract'](_0x3d990d, _0xf9dfdc, _0x388291['TEMPVector' + '30']), _0x352206['normalize'](_0x388291['TEMPVector' + '30'], _0x388291['TEMPVector' + '30']), _0x40002a['x'] = Math['asin'](_0x388291['TEMPVector' + '30']['y']), _0x40002a['y'] = _0x388291['arcTanAngl' + 'e'](-_0x388291['TEMPVector' + '30']['z'], -_0x388291['TEMPVector' + '30']['x']);
        }
        static ['createFrom' + 'AxisAngle'](_0x36a60b, _0x8a1084, _0x7c583d) {
            _0x8a1084 = _0x8a1084 * 0.5;
            var _0x28f0e8 = Math['sin'](_0x8a1084);
            _0x7c583d['x'] = _0x28f0e8 * _0x36a60b['x'], _0x7c583d['y'] = _0x28f0e8 * _0x36a60b['y'], _0x7c583d['z'] = _0x28f0e8 * _0x36a60b['z'], _0x7c583d['w'] = Math['cos'](_0x8a1084);
        }
        static ['createFrom' + 'Matrix4x4'](_0x3d3271, _0x424e7c) {
            var _0x4832f1 = _0x3d3271['elements'], _0x3a005b, _0x3b5aec, _0x322924 = _0x4832f1[0x0] + _0x4832f1[0x5] + _0x4832f1[0xa];
            if (_0x322924 > 0x0)
                _0x3a005b = Math['sqrt'](_0x322924 + 0x1), _0x424e7c['w'] = _0x3a005b * 0.5, _0x3a005b = 0.5 / _0x3a005b, _0x424e7c['x'] = (_0x4832f1[0x6] - _0x4832f1[0x9]) * _0x3a005b, _0x424e7c['y'] = (_0x4832f1[0x8] - _0x4832f1[0x2]) * _0x3a005b, _0x424e7c['z'] = (_0x4832f1[0x1] - _0x4832f1[0x4]) * _0x3a005b;
            else {
                if (_0x4832f1[0x0] >= _0x4832f1[0x5] && _0x4832f1[0x0] >= _0x4832f1[0xa])
                    _0x3a005b = Math['sqrt'](0x1 + _0x4832f1[0x0] - _0x4832f1[0x5] - _0x4832f1[0xa]), _0x3b5aec = 0.5 / _0x3a005b, _0x424e7c['x'] = 0.5 * _0x3a005b, _0x424e7c['y'] = (_0x4832f1[0x1] + _0x4832f1[0x4]) * _0x3b5aec, _0x424e7c['z'] = (_0x4832f1[0x2] + _0x4832f1[0x8]) * _0x3b5aec, _0x424e7c['w'] = (_0x4832f1[0x6] - _0x4832f1[0x9]) * _0x3b5aec;
                else
                    _0x4832f1[0x5] > _0x4832f1[0xa] ? (_0x3a005b = Math['sqrt'](0x1 + _0x4832f1[0x5] - _0x4832f1[0x0] - _0x4832f1[0xa]), _0x3b5aec = 0.5 / _0x3a005b, _0x424e7c['x'] = (_0x4832f1[0x4] + _0x4832f1[0x1]) * _0x3b5aec, _0x424e7c['y'] = 0.5 * _0x3a005b, _0x424e7c['z'] = (_0x4832f1[0x9] + _0x4832f1[0x6]) * _0x3b5aec, _0x424e7c['w'] = (_0x4832f1[0x8] - _0x4832f1[0x2]) * _0x3b5aec) : (_0x3a005b = Math['sqrt'](0x1 + _0x4832f1[0xa] - _0x4832f1[0x0] - _0x4832f1[0x5]), _0x3b5aec = 0.5 / _0x3a005b, _0x424e7c['x'] = (_0x4832f1[0x8] + _0x4832f1[0x2]) * _0x3b5aec, _0x424e7c['y'] = (_0x4832f1[0x9] + _0x4832f1[0x6]) * _0x3b5aec, _0x424e7c['z'] = 0.5 * _0x3a005b, _0x424e7c['w'] = (_0x4832f1[0x1] - _0x4832f1[0x4]) * _0x3b5aec);
            }
        }
        static ['slerp'](_0x242813, _0x108d38, _0xca858, _0x536c3d) {
            var _0x5417b5 = _0x242813['x'], _0x2f546c = _0x242813['y'], _0x6e28b7 = _0x242813['z'], _0xf1073e = _0x242813['w'], _0x575882 = _0x108d38['x'], _0x4e31ae = _0x108d38['y'], _0x16c849 = _0x108d38['z'], _0x2f7950 = _0x108d38['w'], _0x2725f3, _0x3cd0b1, _0x510e8b, _0x5e6f19, _0x25a56a;
            return _0x3cd0b1 = _0x5417b5 * _0x575882 + _0x2f546c * _0x4e31ae + _0x6e28b7 * _0x16c849 + _0xf1073e * _0x2f7950, _0x3cd0b1 < 0x0 && (_0x3cd0b1 = -_0x3cd0b1, _0x575882 = -_0x575882, _0x4e31ae = -_0x4e31ae, _0x16c849 = -_0x16c849, _0x2f7950 = -_0x2f7950), 0x1 - _0x3cd0b1 > 0.000001 ? (_0x2725f3 = Math['acos'](_0x3cd0b1), _0x510e8b = Math['sin'](_0x2725f3), _0x5e6f19 = Math['sin']((0x1 - _0xca858) * _0x2725f3) / _0x510e8b, _0x25a56a = Math['sin'](_0xca858 * _0x2725f3) / _0x510e8b) : (_0x5e6f19 = 0x1 - _0xca858, _0x25a56a = _0xca858), _0x536c3d['x'] = _0x5e6f19 * _0x5417b5 + _0x25a56a * _0x575882, _0x536c3d['y'] = _0x5e6f19 * _0x2f546c + _0x25a56a * _0x4e31ae, _0x536c3d['z'] = _0x5e6f19 * _0x6e28b7 + _0x25a56a * _0x16c849, _0x536c3d['w'] = _0x5e6f19 * _0xf1073e + _0x25a56a * _0x2f7950, _0x536c3d;
        }
        static ['lerp'](_0x2cb74f, _0x19dfc8, _0x19d7d6, _0x2cdf80) {
            var _0x1d1f62 = 0x1 - _0x19d7d6;
            _0x388291['dot'](_0x2cb74f, _0x19dfc8) >= 0x0 ? (_0x2cdf80['x'] = _0x1d1f62 * _0x2cb74f['x'] + _0x19d7d6 * _0x19dfc8['x'], _0x2cdf80['y'] = _0x1d1f62 * _0x2cb74f['y'] + _0x19d7d6 * _0x19dfc8['y'], _0x2cdf80['z'] = _0x1d1f62 * _0x2cb74f['z'] + _0x19d7d6 * _0x19dfc8['z'], _0x2cdf80['w'] = _0x1d1f62 * _0x2cb74f['w'] + _0x19d7d6 * _0x19dfc8['w']) : (_0x2cdf80['x'] = _0x1d1f62 * _0x2cb74f['x'] - _0x19d7d6 * _0x19dfc8['x'], _0x2cdf80['y'] = _0x1d1f62 * _0x2cb74f['y'] - _0x19d7d6 * _0x19dfc8['y'], _0x2cdf80['z'] = _0x1d1f62 * _0x2cb74f['z'] - _0x19d7d6 * _0x19dfc8['z'], _0x2cdf80['w'] = _0x1d1f62 * _0x2cb74f['w'] - _0x19d7d6 * _0x19dfc8['w']), _0x2cdf80['normalize'](_0x2cdf80);
        }
        static ['add'](_0x5efeab, _0x47d916, _0x2e3acf) {
            _0x2e3acf['x'] = _0x5efeab['x'] + _0x47d916['x'], _0x2e3acf['y'] = _0x5efeab['y'] + _0x47d916['y'], _0x2e3acf['z'] = _0x5efeab['z'] + _0x47d916['z'], _0x2e3acf['w'] = _0x5efeab['w'] + _0x47d916['w'];
        }
        static ['dot'](_0x350b48, _0xf7eb8d) {
            return _0x350b48['x'] * _0xf7eb8d['x'] + _0x350b48['y'] * _0xf7eb8d['y'] + _0x350b48['z'] * _0xf7eb8d['z'] + _0x350b48['w'] * _0xf7eb8d['w'];
        }
        ['scaling'](_0x4f028c, _0x33c9a3) {
            _0x33c9a3['x'] = this['x'] * _0x4f028c, _0x33c9a3['y'] = this['y'] * _0x4f028c, _0x33c9a3['z'] = this['z'] * _0x4f028c, _0x33c9a3['w'] = this['w'] * _0x4f028c;
        }
        ['normalize'](_0x4e6eec) {
            var _0x101c08 = this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
            _0x101c08 > 0x0 && (_0x101c08 = 0x1 / Math['sqrt'](_0x101c08), _0x4e6eec['x'] = this['x'] * _0x101c08, _0x4e6eec['y'] = this['y'] * _0x101c08, _0x4e6eec['z'] = this['z'] * _0x101c08, _0x4e6eec['w'] = this['w'] * _0x101c08);
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['rotateX'](_0x5912f3, _0x22ae6d) {
            _0x5912f3 *= 0.5;
            var _0x4ae33b = Math['sin'](_0x5912f3), _0x270688 = Math['cos'](_0x5912f3);
            _0x22ae6d['x'] = this['x'] * _0x270688 + this['w'] * _0x4ae33b, _0x22ae6d['y'] = this['y'] * _0x270688 + this['z'] * _0x4ae33b, _0x22ae6d['z'] = this['z'] * _0x270688 - this['y'] * _0x4ae33b, _0x22ae6d['w'] = this['w'] * _0x270688 - this['x'] * _0x4ae33b;
        }
        ['rotateY'](_0x4c18af, _0x4c8b5e) {
            _0x4c18af *= 0.5;
            var _0x15f1c5 = Math['sin'](_0x4c18af), _0x2b5f24 = Math['cos'](_0x4c18af);
            _0x4c8b5e['x'] = this['x'] * _0x2b5f24 - this['z'] * _0x15f1c5, _0x4c8b5e['y'] = this['y'] * _0x2b5f24 + this['w'] * _0x15f1c5, _0x4c8b5e['z'] = this['z'] * _0x2b5f24 + this['x'] * _0x15f1c5, _0x4c8b5e['w'] = this['w'] * _0x2b5f24 - this['y'] * _0x15f1c5;
        }
        ['rotateZ'](_0x1017db, _0x332b2a) {
            _0x1017db *= 0.5;
            var _0x56c5e5 = Math['sin'](_0x1017db), _0x1ff26f = Math['cos'](_0x1017db);
            _0x332b2a['x'] = this['x'] * _0x1ff26f + this['y'] * _0x56c5e5, _0x332b2a['y'] = this['y'] * _0x1ff26f - this['x'] * _0x56c5e5, _0x332b2a['z'] = this['z'] * _0x1ff26f + this['w'] * _0x56c5e5, _0x332b2a['w'] = this['w'] * _0x1ff26f - this['z'] * _0x56c5e5;
        }
        ['getYawPitc' + 'hRoll'](_0x2e941a) {
            _0x352206['transformQ' + 'uat'](_0x352206['_ForwardRH'], this, _0x388291['TEMPVector' + '31']), _0x352206['transformQ' + 'uat'](_0x352206['_Up'], this, _0x388291['TEMPVector' + '32']);
            var _0x569a8e = _0x388291['TEMPVector' + '32'];
            _0x388291['angleTo'](_0x352206['_ZERO'], _0x388291['TEMPVector' + '31'], _0x388291['TEMPVector' + '33']);
            var _0x3edc68 = _0x388291['TEMPVector' + '33'];
            if (_0x3edc68['x'] == Math['PI'] / 0x2)
                _0x3edc68['y'] = _0x388291['arcTanAngl' + 'e'](_0x569a8e['z'], _0x569a8e['x']), _0x3edc68['z'] = 0x0;
            else
                _0x3edc68['x'] == -Math['PI'] / 0x2 ? (_0x3edc68['y'] = _0x388291['arcTanAngl' + 'e'](-_0x569a8e['z'], -_0x569a8e['x']), _0x3edc68['z'] = 0x0) : (_0x207eb6['Matrix4x4']['createRota' + 'tionY'](-_0x3edc68['y'], _0x207eb6['Matrix4x4']['TEMPMatrix' + '0']), _0x207eb6['Matrix4x4']['createRota' + 'tionX'](-_0x3edc68['x'], _0x207eb6['Matrix4x4']['TEMPMatrix' + '1']), _0x352206['transformC' + 'oordinate'](_0x388291['TEMPVector' + '32'], _0x207eb6['Matrix4x4']['TEMPMatrix' + '0'], _0x388291['TEMPVector' + '32']), _0x352206['transformC' + 'oordinate'](_0x388291['TEMPVector' + '32'], _0x207eb6['Matrix4x4']['TEMPMatrix' + '1'], _0x388291['TEMPVector' + '32']), _0x3edc68['z'] = _0x388291['arcTanAngl' + 'e'](_0x569a8e['y'], -_0x569a8e['x']));
            if (_0x3edc68['y'] <= -Math['PI'])
                _0x3edc68['y'] = Math['PI'];
            if (_0x3edc68['z'] <= -Math['PI'])
                _0x3edc68['z'] = Math['PI'];
            _0x3edc68['y'] >= Math['PI'] && _0x3edc68['z'] >= Math['PI'] && (_0x3edc68['y'] = 0x0, _0x3edc68['z'] = 0x0, _0x3edc68['x'] = Math['PI'] - _0x3edc68['x']);
            var _0x475049 = _0x2e941a;
            _0x475049['x'] = _0x3edc68['y'], _0x475049['y'] = _0x3edc68['x'], _0x475049['z'] = _0x3edc68['z'];
        }
        ['invert'](_0x493d85) {
            var _0x3c78cc = this['x'], _0x33e7d6 = this['y'], _0xc07163 = this['z'], _0x90e5c2 = this['w'], _0x539e5b = _0x3c78cc * _0x3c78cc + _0x33e7d6 * _0x33e7d6 + _0xc07163 * _0xc07163 + _0x90e5c2 * _0x90e5c2, _0x5ced53 = _0x539e5b ? 0x1 / _0x539e5b : 0x0;
            _0x493d85['x'] = -_0x3c78cc * _0x5ced53, _0x493d85['y'] = -_0x33e7d6 * _0x5ced53, _0x493d85['z'] = -_0xc07163 * _0x5ced53, _0x493d85['w'] = _0x90e5c2 * _0x5ced53;
        }
        ['identity']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0, this['w'] = 0x1;
        }
        ['fromArray'](_0x4dde55, _0x3dbd72 = 0x0) {
            this['x'] = _0x4dde55[_0x3dbd72 + 0x0], this['y'] = _0x4dde55[_0x3dbd72 + 0x1], this['z'] = _0x4dde55[_0x3dbd72 + 0x2], this['w'] = _0x4dde55[_0x3dbd72 + 0x3];
        }
        ['cloneTo'](_0x1411ea) {
            if (this === _0x1411ea)
                return;
            _0x1411ea['x'] = this['x'], _0x1411ea['y'] = this['y'], _0x1411ea['z'] = this['z'], _0x1411ea['w'] = this['w'];
        }
        ['clone']() {
            var _0xcc75e6 = new _0x388291();
            return this['cloneTo'](_0xcc75e6), _0xcc75e6;
        }
        ['equals'](_0x2bb46d) {
            return _0xc6f01['nearEqual'](this['x'], _0x2bb46d['x']) && _0xc6f01['nearEqual'](this['y'], _0x2bb46d['y']) && _0xc6f01['nearEqual'](this['z'], _0x2bb46d['z']) && _0xc6f01['nearEqual'](this['w'], _0x2bb46d['w']);
        }
        static ['rotationLo' + 'okAt'](_0x2c13a3, _0x285578, _0x5a53ba) {
            _0x388291['lookAt'](_0x352206['_ZERO'], _0x2c13a3, _0x285578, _0x5a53ba);
        }
        static ['lookAt'](_0x3d85cc, _0x47939c, _0x27bf28, _0x1157e0) {
            _0x11be5a['lookAt'](_0x3d85cc, _0x47939c, _0x27bf28, _0x388291['_tempMatri' + 'x3x3']), _0x388291['rotationMa' + 'trix'](_0x388291['_tempMatri' + 'x3x3'], _0x1157e0);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['invert'](_0x5c7682, _0x4cb54c) {
            var _0x24f3e2 = _0x5c7682['lengthSqua' + 'red']();
            !_0xc6f01['isZero'](_0x24f3e2) && (_0x24f3e2 = 0x1 / _0x24f3e2, _0x4cb54c['x'] = -_0x5c7682['x'] * _0x24f3e2, _0x4cb54c['y'] = -_0x5c7682['y'] * _0x24f3e2, _0x4cb54c['z'] = -_0x5c7682['z'] * _0x24f3e2, _0x4cb54c['w'] = _0x5c7682['w'] * _0x24f3e2);
        }
        static ['rotationMa' + 'trix'](_0x1ce8eb, _0x29739a) {
            var _0x3be4c3 = _0x1ce8eb['elements'], _0x26ab7b = _0x3be4c3[0x0], _0x39c6ce = _0x3be4c3[0x1], _0x4ee30e = _0x3be4c3[0x2], _0x20b9ec = _0x3be4c3[0x3], _0x5823dd = _0x3be4c3[0x4], _0x87a6ed = _0x3be4c3[0x5], _0x4b4739 = _0x3be4c3[0x6], _0x35d401 = _0x3be4c3[0x7], _0x407d06 = _0x3be4c3[0x8], _0x5b68f9, _0x1d3719, _0x5503d9 = _0x26ab7b + _0x5823dd + _0x407d06;
            if (_0x5503d9 > 0x0)
                _0x5b68f9 = Math['sqrt'](_0x5503d9 + 0x1), _0x29739a['w'] = _0x5b68f9 * 0.5, _0x5b68f9 = 0.5 / _0x5b68f9, _0x29739a['x'] = (_0x87a6ed - _0x35d401) * _0x5b68f9, _0x29739a['y'] = (_0x4b4739 - _0x4ee30e) * _0x5b68f9, _0x29739a['z'] = (_0x39c6ce - _0x20b9ec) * _0x5b68f9;
            else {
                if (_0x26ab7b >= _0x5823dd && _0x26ab7b >= _0x407d06)
                    _0x5b68f9 = Math['sqrt'](0x1 + _0x26ab7b - _0x5823dd - _0x407d06), _0x1d3719 = 0.5 / _0x5b68f9, _0x29739a['x'] = 0.5 * _0x5b68f9, _0x29739a['y'] = (_0x39c6ce + _0x20b9ec) * _0x1d3719, _0x29739a['z'] = (_0x4ee30e + _0x4b4739) * _0x1d3719, _0x29739a['w'] = (_0x87a6ed - _0x35d401) * _0x1d3719;
                else
                    _0x5823dd > _0x407d06 ? (_0x5b68f9 = Math['sqrt'](0x1 + _0x5823dd - _0x26ab7b - _0x407d06), _0x1d3719 = 0.5 / _0x5b68f9, _0x29739a['x'] = (_0x20b9ec + _0x39c6ce) * _0x1d3719, _0x29739a['y'] = 0.5 * _0x5b68f9, _0x29739a['z'] = (_0x35d401 + _0x87a6ed) * _0x1d3719, _0x29739a['w'] = (_0x4b4739 - _0x4ee30e) * _0x1d3719) : (_0x5b68f9 = Math['sqrt'](0x1 + _0x407d06 - _0x26ab7b - _0x5823dd), _0x1d3719 = 0.5 / _0x5b68f9, _0x29739a['x'] = (_0x4b4739 + _0x4ee30e) * _0x1d3719, _0x29739a['y'] = (_0x35d401 + _0x87a6ed) * _0x1d3719, _0x29739a['z'] = 0.5 * _0x5b68f9, _0x29739a['w'] = (_0x39c6ce - _0x20b9ec) * _0x1d3719);
            }
        }
        ['forNativeE' + 'lement'](_0x4089ea = null) {
            _0x4089ea ? (this['elements'] = _0x4089ea, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z'], this['elements'][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x378045['rewriteNum' + 'Property'](this, 'x', 0x0), _0x378045['rewriteNum' + 'Property'](this, 'y', 0x1), _0x378045['rewriteNum' + 'Property'](this, 'z', 0x2), _0x378045['rewriteNum' + 'Property'](this, 'w', 0x3);
        }
    }
    _0x388291['TEMPVector' + '30'] = new _0x352206(), _0x388291['TEMPVector' + '31'] = new _0x352206(), _0x388291['TEMPVector' + '32'] = new _0x352206(), _0x388291['TEMPVector' + '33'] = new _0x352206(), _0x388291['_tempMatri' + 'x3x3'] = new _0x11be5a(), _0x388291['DEFAULT'] = new _0x388291(), _0x388291['NAN'] = new _0x388291(NaN, NaN, NaN, NaN);
    class _0x4c2288 {
        constructor(_0x4948aa = 0x1, _0x3a1aaf = 0x0, _0x5e0242 = 0x0, _0x112aa5 = 0x0, _0x352e77 = 0x0, _0x3e7388 = 0x1, _0x82ca48 = 0x0, _0x2deeb7 = 0x0, _0x5729b3 = 0x0, _0x410209 = 0x0, _0x43d08f = 0x1, _0x286172 = 0x0, _0x19b6a7 = 0x0, _0x29372a = 0x0, _0x2f1117 = 0x0, _0x3a266f = 0x1, _0x1ccc00 = null) {
            var _0x1e41b2 = _0x1ccc00 ? this['elements'] = _0x1ccc00 : this['elements'] = new Float32Array(0x10);
            _0x1e41b2[0x0] = _0x4948aa, _0x1e41b2[0x1] = _0x3a1aaf, _0x1e41b2[0x2] = _0x5e0242, _0x1e41b2[0x3] = _0x112aa5, _0x1e41b2[0x4] = _0x352e77, _0x1e41b2[0x5] = _0x3e7388, _0x1e41b2[0x6] = _0x82ca48, _0x1e41b2[0x7] = _0x2deeb7, _0x1e41b2[0x8] = _0x5729b3, _0x1e41b2[0x9] = _0x410209, _0x1e41b2[0xa] = _0x43d08f, _0x1e41b2[0xb] = _0x286172, _0x1e41b2[0xc] = _0x19b6a7, _0x1e41b2[0xd] = _0x29372a, _0x1e41b2[0xe] = _0x2f1117, _0x1e41b2[0xf] = _0x3a266f;
        }
        static ['createRota' + 'tionX'](_0x1d9884, _0x1a3b50) {
            var _0x2e69a6 = _0x1a3b50['elements'], _0x1687cd = Math['sin'](_0x1d9884), _0x1b6486 = Math['cos'](_0x1d9884);
            _0x2e69a6[0x1] = _0x2e69a6[0x2] = _0x2e69a6[0x3] = _0x2e69a6[0x4] = _0x2e69a6[0x7] = _0x2e69a6[0x8] = _0x2e69a6[0xb] = _0x2e69a6[0xc] = _0x2e69a6[0xd] = _0x2e69a6[0xe] = 0x0, _0x2e69a6[0x0] = _0x2e69a6[0xf] = 0x1, _0x2e69a6[0x5] = _0x2e69a6[0xa] = _0x1b6486, _0x2e69a6[0x6] = _0x1687cd, _0x2e69a6[0x9] = -_0x1687cd;
        }
        static ['createRota' + 'tionY'](_0x1a3e2f, _0x12fe41) {
            var _0x14e542 = _0x12fe41['elements'], _0x42e3a5 = Math['sin'](_0x1a3e2f), _0x26f587 = Math['cos'](_0x1a3e2f);
            _0x14e542[0x1] = _0x14e542[0x3] = _0x14e542[0x4] = _0x14e542[0x6] = _0x14e542[0x7] = _0x14e542[0x9] = _0x14e542[0xb] = _0x14e542[0xc] = _0x14e542[0xd] = _0x14e542[0xe] = 0x0, _0x14e542[0x5] = _0x14e542[0xf] = 0x1, _0x14e542[0x0] = _0x14e542[0xa] = _0x26f587, _0x14e542[0x2] = -_0x42e3a5, _0x14e542[0x8] = _0x42e3a5;
        }
        static ['createRota' + 'tionZ'](_0x2aea84, _0x32f91f) {
            var _0x5671f0 = _0x32f91f['elements'], _0x3e9c31 = Math['sin'](_0x2aea84), _0x4ced36 = Math['cos'](_0x2aea84);
            _0x5671f0[0x2] = _0x5671f0[0x3] = _0x5671f0[0x6] = _0x5671f0[0x7] = _0x5671f0[0x8] = _0x5671f0[0x9] = _0x5671f0[0xb] = _0x5671f0[0xc] = _0x5671f0[0xd] = _0x5671f0[0xe] = 0x0, _0x5671f0[0xa] = _0x5671f0[0xf] = 0x1, _0x5671f0[0x0] = _0x5671f0[0x5] = _0x4ced36, _0x5671f0[0x1] = _0x3e9c31, _0x5671f0[0x4] = -_0x3e9c31;
        }
        static ['createRota' + 'tionYawPit' + 'chRoll'](_0xd5f60d, _0x51d38a, _0x1fc067, _0x2c6904) {
            _0x388291['createFrom' + 'YawPitchRo' + 'll'](_0xd5f60d, _0x51d38a, _0x1fc067, _0x4c2288['_tempQuate' + 'rnion']), _0x4c2288['createRota' + 'tionQuater' + 'nion'](_0x4c2288['_tempQuate' + 'rnion'], _0x2c6904);
        }
        static ['createRota' + 'tionAxis'](_0x491d3e, _0x25ca2f, _0x3c98d2) {
            var _0x4d2d2d = _0x491d3e['x'], _0x309045 = _0x491d3e['y'], _0x2ebafe = _0x491d3e['z'], _0x5a0b13 = Math['cos'](_0x25ca2f), _0x29a73c = Math['sin'](_0x25ca2f), _0x1c18de = _0x4d2d2d * _0x4d2d2d, _0x256fce = _0x309045 * _0x309045, _0x564422 = _0x2ebafe * _0x2ebafe, _0x2dc82d = _0x4d2d2d * _0x309045, _0x26b1e7 = _0x4d2d2d * _0x2ebafe, _0x47d181 = _0x309045 * _0x2ebafe, _0x418d94 = _0x3c98d2['elements'];
            _0x418d94[0x3] = _0x418d94[0x7] = _0x418d94[0xb] = _0x418d94[0xc] = _0x418d94[0xd] = _0x418d94[0xe] = 0x0, _0x418d94[0xf] = 0x1, _0x418d94[0x0] = _0x1c18de + _0x5a0b13 * (0x1 - _0x1c18de), _0x418d94[0x1] = _0x2dc82d - _0x5a0b13 * _0x2dc82d + _0x29a73c * _0x2ebafe, _0x418d94[0x2] = _0x26b1e7 - _0x5a0b13 * _0x26b1e7 - _0x29a73c * _0x309045, _0x418d94[0x4] = _0x2dc82d - _0x5a0b13 * _0x2dc82d - _0x29a73c * _0x2ebafe, _0x418d94[0x5] = _0x256fce + _0x5a0b13 * (0x1 - _0x256fce), _0x418d94[0x6] = _0x47d181 - _0x5a0b13 * _0x47d181 + _0x29a73c * _0x4d2d2d, _0x418d94[0x8] = _0x26b1e7 - _0x5a0b13 * _0x26b1e7 + _0x29a73c * _0x309045, _0x418d94[0x9] = _0x47d181 - _0x5a0b13 * _0x47d181 - _0x29a73c * _0x4d2d2d, _0x418d94[0xa] = _0x564422 + _0x5a0b13 * (0x1 - _0x564422);
        }
        ['setRotatio' + 'n'](_0x3dcd69) {
            var _0x51cba4 = _0x3dcd69['x'], _0x554e85 = _0x3dcd69['y'], _0x3d23cc = _0x3dcd69['z'], _0x3b34d5 = _0x3dcd69['w'], _0x4cfaed = _0x51cba4 * _0x51cba4, _0x5a20f = _0x554e85 * _0x554e85, _0x4daec4 = _0x3d23cc * _0x3d23cc, _0xb31c0d = _0x51cba4 * _0x554e85, _0x545e07 = _0x3d23cc * _0x3b34d5, _0xd622cc = _0x3d23cc * _0x51cba4, _0x15a421 = _0x554e85 * _0x3b34d5, _0x5e732a = _0x554e85 * _0x3d23cc, _0x1192a0 = _0x51cba4 * _0x3b34d5, _0x31d884 = this['elements'];
            _0x31d884[0x0] = 0x1 - 0x2 * (_0x5a20f + _0x4daec4), _0x31d884[0x1] = 0x2 * (_0xb31c0d + _0x545e07), _0x31d884[0x2] = 0x2 * (_0xd622cc - _0x15a421), _0x31d884[0x4] = 0x2 * (_0xb31c0d - _0x545e07), _0x31d884[0x5] = 0x1 - 0x2 * (_0x4daec4 + _0x4cfaed), _0x31d884[0x6] = 0x2 * (_0x5e732a + _0x1192a0), _0x31d884[0x8] = 0x2 * (_0xd622cc + _0x15a421), _0x31d884[0x9] = 0x2 * (_0x5e732a - _0x1192a0), _0x31d884[0xa] = 0x1 - 0x2 * (_0x5a20f + _0x4cfaed);
        }
        ['setPositio' + 'n'](_0xdbef67) {
            var _0x3b2dbf = this['elements'];
            _0x3b2dbf[0xc] = _0xdbef67['x'], _0x3b2dbf[0xd] = _0xdbef67['y'], _0x3b2dbf[0xe] = _0xdbef67['z'];
        }
        static ['createRota' + 'tionQuater' + 'nion'](_0x92f9d9, _0x16da01) {
            var _0x236313 = _0x16da01['elements'], _0x4bb822 = _0x92f9d9['x'], _0x5b2701 = _0x92f9d9['y'], _0x6c4c7a = _0x92f9d9['z'], _0x22dd00 = _0x92f9d9['w'], _0x2650c9 = _0x4bb822 * _0x4bb822, _0xd775ba = _0x5b2701 * _0x5b2701, _0x1eca3a = _0x6c4c7a * _0x6c4c7a, _0xc017b2 = _0x4bb822 * _0x5b2701, _0x3b997b = _0x6c4c7a * _0x22dd00, _0x427ab9 = _0x6c4c7a * _0x4bb822, _0xa9024f = _0x5b2701 * _0x22dd00, _0x15510c = _0x5b2701 * _0x6c4c7a, _0x3f8671 = _0x4bb822 * _0x22dd00;
            _0x236313[0x3] = _0x236313[0x7] = _0x236313[0xb] = _0x236313[0xc] = _0x236313[0xd] = _0x236313[0xe] = 0x0, _0x236313[0xf] = 0x1, _0x236313[0x0] = 0x1 - 0x2 * (_0xd775ba + _0x1eca3a), _0x236313[0x1] = 0x2 * (_0xc017b2 + _0x3b997b), _0x236313[0x2] = 0x2 * (_0x427ab9 - _0xa9024f), _0x236313[0x4] = 0x2 * (_0xc017b2 - _0x3b997b), _0x236313[0x5] = 0x1 - 0x2 * (_0x1eca3a + _0x2650c9), _0x236313[0x6] = 0x2 * (_0x15510c + _0x3f8671), _0x236313[0x8] = 0x2 * (_0x427ab9 + _0xa9024f), _0x236313[0x9] = 0x2 * (_0x15510c - _0x3f8671), _0x236313[0xa] = 0x1 - 0x2 * (_0xd775ba + _0x2650c9);
        }
        static ['createTran' + 'slate'](_0x16fbef, _0x3a67e8) {
            var _0xe1b00c = _0x3a67e8['elements'];
            _0xe1b00c[0x4] = _0xe1b00c[0x8] = _0xe1b00c[0x1] = _0xe1b00c[0x9] = _0xe1b00c[0x2] = _0xe1b00c[0x6] = _0xe1b00c[0x3] = _0xe1b00c[0x7] = _0xe1b00c[0xb] = 0x0, _0xe1b00c[0x0] = _0xe1b00c[0x5] = _0xe1b00c[0xa] = _0xe1b00c[0xf] = 0x1, _0xe1b00c[0xc] = _0x16fbef['x'], _0xe1b00c[0xd] = _0x16fbef['y'], _0xe1b00c[0xe] = _0x16fbef['z'];
        }
        static ['createScal' + 'ing'](_0x5e40a1, _0x4f6b35) {
            var _0x1570ec = _0x4f6b35['elements'];
            _0x1570ec[0x0] = _0x5e40a1['x'], _0x1570ec[0x5] = _0x5e40a1['y'], _0x1570ec[0xa] = _0x5e40a1['z'], _0x1570ec[0x1] = _0x1570ec[0x4] = _0x1570ec[0x8] = _0x1570ec[0xc] = _0x1570ec[0x9] = _0x1570ec[0xd] = _0x1570ec[0x2] = _0x1570ec[0x6] = _0x1570ec[0xe] = _0x1570ec[0x3] = _0x1570ec[0x7] = _0x1570ec[0xb] = 0x0, _0x1570ec[0xf] = 0x1;
        }
        static ['multiply'](_0x587196, _0x4f032d, _0x2d3aa4) {
            var _0x2ee18e = _0x4f032d['elements'], _0x340efd = _0x587196['elements'], _0x33d454 = _0x2d3aa4['elements'], _0x28f90c = _0x2ee18e[0x0], _0xe36ca1 = _0x2ee18e[0x1], _0x3c6bf0 = _0x2ee18e[0x2], _0x57f5af = _0x2ee18e[0x3], _0x27d44b = _0x2ee18e[0x4], _0x156caa = _0x2ee18e[0x5], _0x3487c7 = _0x2ee18e[0x6], _0x42b73e = _0x2ee18e[0x7], _0x54e222 = _0x2ee18e[0x8], _0x4acd58 = _0x2ee18e[0x9], _0x1ec450 = _0x2ee18e[0xa], _0x4b37ad = _0x2ee18e[0xb], _0x3502d4 = _0x2ee18e[0xc], _0x327898 = _0x2ee18e[0xd], _0x37c513 = _0x2ee18e[0xe], _0x141ad8 = _0x2ee18e[0xf], _0x40e78e = _0x340efd[0x0], _0x497df2 = _0x340efd[0x1], _0x275e4d = _0x340efd[0x2], _0x5287c4 = _0x340efd[0x3], _0x3efcdb = _0x340efd[0x4], _0x12bd10 = _0x340efd[0x5], _0x41dfc8 = _0x340efd[0x6], _0xfd8ccb = _0x340efd[0x7], _0x188fa6 = _0x340efd[0x8], _0x107ad9 = _0x340efd[0x9], _0x1abcc7 = _0x340efd[0xa], _0x5d6fe0 = _0x340efd[0xb], _0x3461be = _0x340efd[0xc], _0x55128d = _0x340efd[0xd], _0x51a37e = _0x340efd[0xe], _0x2405f3 = _0x340efd[0xf];
            _0x33d454[0x0] = _0x28f90c * _0x40e78e + _0xe36ca1 * _0x3efcdb + _0x3c6bf0 * _0x188fa6 + _0x57f5af * _0x3461be, _0x33d454[0x1] = _0x28f90c * _0x497df2 + _0xe36ca1 * _0x12bd10 + _0x3c6bf0 * _0x107ad9 + _0x57f5af * _0x55128d, _0x33d454[0x2] = _0x28f90c * _0x275e4d + _0xe36ca1 * _0x41dfc8 + _0x3c6bf0 * _0x1abcc7 + _0x57f5af * _0x51a37e, _0x33d454[0x3] = _0x28f90c * _0x5287c4 + _0xe36ca1 * _0xfd8ccb + _0x3c6bf0 * _0x5d6fe0 + _0x57f5af * _0x2405f3, _0x33d454[0x4] = _0x27d44b * _0x40e78e + _0x156caa * _0x3efcdb + _0x3487c7 * _0x188fa6 + _0x42b73e * _0x3461be, _0x33d454[0x5] = _0x27d44b * _0x497df2 + _0x156caa * _0x12bd10 + _0x3487c7 * _0x107ad9 + _0x42b73e * _0x55128d, _0x33d454[0x6] = _0x27d44b * _0x275e4d + _0x156caa * _0x41dfc8 + _0x3487c7 * _0x1abcc7 + _0x42b73e * _0x51a37e, _0x33d454[0x7] = _0x27d44b * _0x5287c4 + _0x156caa * _0xfd8ccb + _0x3487c7 * _0x5d6fe0 + _0x42b73e * _0x2405f3, _0x33d454[0x8] = _0x54e222 * _0x40e78e + _0x4acd58 * _0x3efcdb + _0x1ec450 * _0x188fa6 + _0x4b37ad * _0x3461be, _0x33d454[0x9] = _0x54e222 * _0x497df2 + _0x4acd58 * _0x12bd10 + _0x1ec450 * _0x107ad9 + _0x4b37ad * _0x55128d, _0x33d454[0xa] = _0x54e222 * _0x275e4d + _0x4acd58 * _0x41dfc8 + _0x1ec450 * _0x1abcc7 + _0x4b37ad * _0x51a37e, _0x33d454[0xb] = _0x54e222 * _0x5287c4 + _0x4acd58 * _0xfd8ccb + _0x1ec450 * _0x5d6fe0 + _0x4b37ad * _0x2405f3, _0x33d454[0xc] = _0x3502d4 * _0x40e78e + _0x327898 * _0x3efcdb + _0x37c513 * _0x188fa6 + _0x141ad8 * _0x3461be, _0x33d454[0xd] = _0x3502d4 * _0x497df2 + _0x327898 * _0x12bd10 + _0x37c513 * _0x107ad9 + _0x141ad8 * _0x55128d, _0x33d454[0xe] = _0x3502d4 * _0x275e4d + _0x327898 * _0x41dfc8 + _0x37c513 * _0x1abcc7 + _0x141ad8 * _0x51a37e, _0x33d454[0xf] = _0x3502d4 * _0x5287c4 + _0x327898 * _0xfd8ccb + _0x37c513 * _0x5d6fe0 + _0x141ad8 * _0x2405f3;
        }
        static ['multiplyFo' + 'rNative'](_0x1ba923, _0x4f97d0, _0x571b47) {
            _0x442335['LayaGL']['instance']['matrix4x4M' + 'ultiply'](_0x1ba923['elements'], _0x4f97d0['elements'], _0x571b47['elements']);
        }
        static ['createFrom' + 'Quaternion'](_0x7036af, _0x4786c0) {
            var _0x17019a = _0x4786c0['elements'], _0xf2d3e4 = _0x7036af['x'], _0x1e9bba = _0x7036af['y'], _0x2b5fcf = _0x7036af['z'], _0x1ec52b = _0x7036af['w'], _0x3bd588 = _0xf2d3e4 + _0xf2d3e4, _0x4436cc = _0x1e9bba + _0x1e9bba, _0xb6a0a8 = _0x2b5fcf + _0x2b5fcf, _0x5010f7 = _0xf2d3e4 * _0x3bd588, _0xbb03bf = _0x1e9bba * _0x3bd588, _0x1b675e = _0x1e9bba * _0x4436cc, _0x55c3c9 = _0x2b5fcf * _0x3bd588, _0x507c9c = _0x2b5fcf * _0x4436cc, _0x3bb3d6 = _0x2b5fcf * _0xb6a0a8, _0x38d16e = _0x1ec52b * _0x3bd588, _0x24f56a = _0x1ec52b * _0x4436cc, _0x23155c = _0x1ec52b * _0xb6a0a8;
            _0x17019a[0x0] = 0x1 - _0x1b675e - _0x3bb3d6, _0x17019a[0x1] = _0xbb03bf + _0x23155c, _0x17019a[0x2] = _0x55c3c9 - _0x24f56a, _0x17019a[0x3] = 0x0, _0x17019a[0x4] = _0xbb03bf - _0x23155c, _0x17019a[0x5] = 0x1 - _0x5010f7 - _0x3bb3d6, _0x17019a[0x6] = _0x507c9c + _0x38d16e, _0x17019a[0x7] = 0x0, _0x17019a[0x8] = _0x55c3c9 + _0x24f56a, _0x17019a[0x9] = _0x507c9c - _0x38d16e, _0x17019a[0xa] = 0x1 - _0x5010f7 - _0x1b675e, _0x17019a[0xb] = 0x0, _0x17019a[0xc] = 0x0, _0x17019a[0xd] = 0x0, _0x17019a[0xe] = 0x0, _0x17019a[0xf] = 0x1;
        }
        static ['createAffi' + 'neTransfor' + 'mation'](_0x33de85, _0x4b2b07, _0x11a096, _0x532b4d) {
            var _0x53d2e4 = _0x532b4d['elements'], _0x485e4a = _0x4b2b07['x'], _0x35390b = _0x4b2b07['y'], _0x68b0b8 = _0x4b2b07['z'], _0x700245 = _0x4b2b07['w'], _0x470833 = _0x485e4a + _0x485e4a, _0x226109 = _0x35390b + _0x35390b, _0x2df15d = _0x68b0b8 + _0x68b0b8, _0x177195 = _0x485e4a * _0x470833, _0x5de475 = _0x485e4a * _0x226109, _0x39b13f = _0x485e4a * _0x2df15d, _0x211fc3 = _0x35390b * _0x226109, _0x5aa7bc = _0x35390b * _0x2df15d, _0x1493b1 = _0x68b0b8 * _0x2df15d, _0x339b6a = _0x700245 * _0x470833, _0x1a6e22 = _0x700245 * _0x226109, _0x2367bf = _0x700245 * _0x2df15d, _0x544346 = _0x11a096['x'], _0x20cf83 = _0x11a096['y'], _0x5f4185 = _0x11a096['z'];
            _0x53d2e4[0x0] = (0x1 - (_0x211fc3 + _0x1493b1)) * _0x544346, _0x53d2e4[0x1] = (_0x5de475 + _0x2367bf) * _0x544346, _0x53d2e4[0x2] = (_0x39b13f - _0x1a6e22) * _0x544346, _0x53d2e4[0x3] = 0x0, _0x53d2e4[0x4] = (_0x5de475 - _0x2367bf) * _0x20cf83, _0x53d2e4[0x5] = (0x1 - (_0x177195 + _0x1493b1)) * _0x20cf83, _0x53d2e4[0x6] = (_0x5aa7bc + _0x339b6a) * _0x20cf83, _0x53d2e4[0x7] = 0x0, _0x53d2e4[0x8] = (_0x39b13f + _0x1a6e22) * _0x5f4185, _0x53d2e4[0x9] = (_0x5aa7bc - _0x339b6a) * _0x5f4185, _0x53d2e4[0xa] = (0x1 - (_0x177195 + _0x211fc3)) * _0x5f4185, _0x53d2e4[0xb] = 0x0, _0x53d2e4[0xc] = _0x33de85['x'], _0x53d2e4[0xd] = _0x33de85['y'], _0x53d2e4[0xe] = _0x33de85['z'], _0x53d2e4[0xf] = 0x1;
        }
        static ['createLook' + 'At'](_0x204386, _0x140dfe, _0x47a7f2, _0x52ad12) {
            var _0x17c8f7 = _0x52ad12['elements'], _0x51139e = _0x4c2288['_tempVecto' + 'r0'], _0x53a07b = _0x4c2288['_tempVecto' + 'r1'], _0x3a0376 = _0x4c2288['_tempVecto' + 'r2'];
            _0x352206['subtract'](_0x204386, _0x140dfe, _0x3a0376), _0x352206['normalize'](_0x3a0376, _0x3a0376), _0x352206['cross'](_0x47a7f2, _0x3a0376, _0x51139e), _0x352206['normalize'](_0x51139e, _0x51139e), _0x352206['cross'](_0x3a0376, _0x51139e, _0x53a07b), _0x17c8f7[0x3] = _0x17c8f7[0x7] = _0x17c8f7[0xb] = 0x0, _0x17c8f7[0xf] = 0x1, _0x17c8f7[0x0] = _0x51139e['x'], _0x17c8f7[0x4] = _0x51139e['y'], _0x17c8f7[0x8] = _0x51139e['z'], _0x17c8f7[0x1] = _0x53a07b['x'], _0x17c8f7[0x5] = _0x53a07b['y'], _0x17c8f7[0x9] = _0x53a07b['z'], _0x17c8f7[0x2] = _0x3a0376['x'], _0x17c8f7[0x6] = _0x3a0376['y'], _0x17c8f7[0xa] = _0x3a0376['z'], _0x17c8f7[0xc] = -_0x352206['dot'](_0x51139e, _0x204386), _0x17c8f7[0xd] = -_0x352206['dot'](_0x53a07b, _0x204386), _0x17c8f7[0xe] = -_0x352206['dot'](_0x3a0376, _0x204386);
        }
        static ['createPers' + 'pective'](_0x436521, _0x4cb029, _0x5c6572, _0x228583, _0x22d415) {
            var _0x2063c1 = 0x1 / Math['tan'](_0x436521 * 0.5), _0x87802 = _0x2063c1 / _0x4cb029, _0x3ee532 = _0x5c6572 / _0x87802, _0x2edfee = _0x5c6572 / _0x2063c1;
            _0x4c2288['createPers' + 'pectiveOff' + 'Center'](-_0x3ee532, _0x3ee532, -_0x2edfee, _0x2edfee, _0x5c6572, _0x228583, _0x22d415);
        }
        static ['createPers' + 'pectiveOff' + 'Center'](_0x347396, _0x2d1c21, _0x24d3c8, _0x54da5, _0xe5023d, _0xda4d73, _0x38f83e) {
            var _0x3ae609 = _0x38f83e['elements'], _0x58582f = _0xda4d73 / (_0xda4d73 - _0xe5023d);
            _0x3ae609[0x1] = _0x3ae609[0x2] = _0x3ae609[0x3] = _0x3ae609[0x4] = _0x3ae609[0x6] = _0x3ae609[0x7] = _0x3ae609[0xc] = _0x3ae609[0xd] = _0x3ae609[0xf] = 0x0, _0x3ae609[0x0] = 0x2 * _0xe5023d / (_0x2d1c21 - _0x347396), _0x3ae609[0x5] = 0x2 * _0xe5023d / (_0x54da5 - _0x24d3c8), _0x3ae609[0x8] = (_0x347396 + _0x2d1c21) / (_0x2d1c21 - _0x347396), _0x3ae609[0x9] = (_0x54da5 + _0x24d3c8) / (_0x54da5 - _0x24d3c8), _0x3ae609[0xa] = -_0x58582f, _0x3ae609[0xb] = -0x1, _0x3ae609[0xe] = -_0xe5023d * _0x58582f;
        }
        static ['createOrth' + 'oOffCenter'](_0x463af4, _0x4339e1, _0x1760d6, _0xe7112, _0x3f3ba6, _0xb82f04, _0x2adfbe) {
            var _0x169eef = _0x2adfbe['elements'], _0x1427b5 = 0x1 / (_0xb82f04 - _0x3f3ba6);
            _0x169eef[0x1] = _0x169eef[0x2] = _0x169eef[0x3] = _0x169eef[0x4] = _0x169eef[0x6] = _0x169eef[0x8] = _0x169eef[0x7] = _0x169eef[0x9] = _0x169eef[0xb] = 0x0, _0x169eef[0xf] = 0x1, _0x169eef[0x0] = 0x2 / (_0x4339e1 - _0x463af4), _0x169eef[0x5] = 0x2 / (_0xe7112 - _0x1760d6), _0x169eef[0xa] = -_0x1427b5, _0x169eef[0xc] = (_0x463af4 + _0x4339e1) / (_0x463af4 - _0x4339e1), _0x169eef[0xd] = (_0xe7112 + _0x1760d6) / (_0x1760d6 - _0xe7112), _0x169eef[0xe] = -_0x3f3ba6 * _0x1427b5;
        }
        ['getElement' + 'ByRowColum' + 'n'](_0x28304c, _0x514be4) {
            if (_0x28304c < 0x0 || _0x28304c > 0x3)
                throw new Error('row\x20Rows\x20a' + 'nd\x20columns' + '\x20for\x20matri' + 'ces\x20run\x20fr' + 'om\x200\x20to\x203,' + '\x20inclusive' + '.');
            if (_0x514be4 < 0x0 || _0x514be4 > 0x3)
                throw new Error('column\x20Row' + 's\x20and\x20colu' + 'mns\x20for\x20ma' + 'trices\x20run' + '\x20from\x200\x20to' + '\x203,\x20inclus' + 'ive.');
            return this['elements'][_0x28304c * 0x4 + _0x514be4];
        }
        ['setElement' + 'ByRowColum' + 'n'](_0x502654, _0x5874f6, _0x3cbf73) {
            if (_0x502654 < 0x0 || _0x502654 > 0x3)
                throw new Error('row\x20Rows\x20a' + 'nd\x20columns' + '\x20for\x20matri' + 'ces\x20run\x20fr' + 'om\x200\x20to\x203,' + '\x20inclusive' + '.');
            if (_0x5874f6 < 0x0 || _0x5874f6 > 0x3)
                throw new Error('column\x20Row' + 's\x20and\x20colu' + 'mns\x20for\x20ma' + 'trices\x20run' + '\x20from\x200\x20to' + '\x203,\x20inclus' + 'ive.');
            this['elements'][_0x502654 * 0x4 + _0x5874f6] = _0x3cbf73;
        }
        ['equalsOthe' + 'rMatrix'](_0xdcfe5f) {
            var _0x30ebc7 = this['elements'], _0x311d89 = _0xdcfe5f['elements'];
            return _0xc6f01['nearEqual'](_0x30ebc7[0x0], _0x311d89[0x0]) && _0xc6f01['nearEqual'](_0x30ebc7[0x1], _0x311d89[0x1]) && _0xc6f01['nearEqual'](_0x30ebc7[0x2], _0x311d89[0x2]) && _0xc6f01['nearEqual'](_0x30ebc7[0x3], _0x311d89[0x3]) && _0xc6f01['nearEqual'](_0x30ebc7[0x4], _0x311d89[0x4]) && _0xc6f01['nearEqual'](_0x30ebc7[0x5], _0x311d89[0x5]) && _0xc6f01['nearEqual'](_0x30ebc7[0x6], _0x311d89[0x6]) && _0xc6f01['nearEqual'](_0x30ebc7[0x7], _0x311d89[0x7]) && _0xc6f01['nearEqual'](_0x30ebc7[0x8], _0x311d89[0x8]) && _0xc6f01['nearEqual'](_0x30ebc7[0x9], _0x311d89[0x9]) && _0xc6f01['nearEqual'](_0x30ebc7[0xa], _0x311d89[0xa]) && _0xc6f01['nearEqual'](_0x30ebc7[0xb], _0x311d89[0xb]) && _0xc6f01['nearEqual'](_0x30ebc7[0xc], _0x311d89[0xc]) && _0xc6f01['nearEqual'](_0x30ebc7[0xd], _0x311d89[0xd]) && _0xc6f01['nearEqual'](_0x30ebc7[0xe], _0x311d89[0xe]) && _0xc6f01['nearEqual'](_0x30ebc7[0xf], _0x311d89[0xf]);
        }
        ['decomposeT' + 'ransRotSca' + 'le'](_0x9dc21d, _0x132af9, _0xd7bc00) {
            var _0x2d902f = _0x4c2288['_tempMatri' + 'x4x4'];
            return this['decomposeT' + 'ransRotMat' + 'Scale'](_0x9dc21d, _0x2d902f, _0xd7bc00) ? (_0x388291['createFrom' + 'Matrix4x4'](_0x2d902f, _0x132af9), !![]) : (_0x132af9['identity'](), ![]);
        }
        ['decomposeT' + 'ransRotMat' + 'Scale'](_0x2eebaf, _0x3ffe06, _0x35b173) {
            var _0x5b230b = this['elements'], _0x24a23f = _0x2eebaf, _0x5b7ec1 = _0x3ffe06['elements'], _0x2de71e = _0x35b173;
            _0x24a23f['x'] = _0x5b230b[0xc], _0x24a23f['y'] = _0x5b230b[0xd], _0x24a23f['z'] = _0x5b230b[0xe];
            var _0x3743f6 = _0x5b230b[0x0], _0x336116 = _0x5b230b[0x1], _0x15072a = _0x5b230b[0x2], _0x44c91c = _0x5b230b[0x4], _0x54a62a = _0x5b230b[0x5], _0x2ee5a6 = _0x5b230b[0x6], _0x310128 = _0x5b230b[0x8], _0x4821a3 = _0x5b230b[0x9], _0x295398 = _0x5b230b[0xa], _0x223b84 = _0x2de71e['x'] = Math['sqrt'](_0x3743f6 * _0x3743f6 + _0x336116 * _0x336116 + _0x15072a * _0x15072a), _0x279939 = _0x2de71e['y'] = Math['sqrt'](_0x44c91c * _0x44c91c + _0x54a62a * _0x54a62a + _0x2ee5a6 * _0x2ee5a6), _0x2a3838 = _0x2de71e['z'] = Math['sqrt'](_0x310128 * _0x310128 + _0x4821a3 * _0x4821a3 + _0x295398 * _0x295398);
            if (_0xc6f01['isZero'](_0x223b84) || _0xc6f01['isZero'](_0x279939) || _0xc6f01['isZero'](_0x2a3838))
                return _0x5b7ec1[0x1] = _0x5b7ec1[0x2] = _0x5b7ec1[0x3] = _0x5b7ec1[0x4] = _0x5b7ec1[0x6] = _0x5b7ec1[0x7] = _0x5b7ec1[0x8] = _0x5b7ec1[0x9] = _0x5b7ec1[0xb] = _0x5b7ec1[0xc] = _0x5b7ec1[0xd] = _0x5b7ec1[0xe] = 0x0, _0x5b7ec1[0x0] = _0x5b7ec1[0x5] = _0x5b7ec1[0xa] = _0x5b7ec1[0xf] = 0x1, ![];
            var _0x576b99 = _0x4c2288['_tempVecto' + 'r0'];
            _0x576b99['x'] = _0x310128 / _0x2a3838, _0x576b99['y'] = _0x4821a3 / _0x2a3838, _0x576b99['z'] = _0x295398 / _0x2a3838;
            var _0x3da0e0 = _0x4c2288['_tempVecto' + 'r1'];
            _0x3da0e0['x'] = _0x3743f6 / _0x223b84, _0x3da0e0['y'] = _0x336116 / _0x223b84, _0x3da0e0['z'] = _0x15072a / _0x223b84;
            var _0x4d7be6 = _0x4c2288['_tempVecto' + 'r2'];
            _0x352206['cross'](_0x576b99, _0x3da0e0, _0x4d7be6);
            var _0x133b83 = _0x4c2288['_tempVecto' + 'r1'];
            return _0x352206['cross'](_0x4d7be6, _0x576b99, _0x133b83), _0x5b7ec1[0x3] = _0x5b7ec1[0x7] = _0x5b7ec1[0xb] = _0x5b7ec1[0xc] = _0x5b7ec1[0xd] = _0x5b7ec1[0xe] = 0x0, _0x5b7ec1[0xf] = 0x1, _0x5b7ec1[0x0] = _0x133b83['x'], _0x5b7ec1[0x1] = _0x133b83['y'], _0x5b7ec1[0x2] = _0x133b83['z'], _0x5b7ec1[0x4] = _0x4d7be6['x'], _0x5b7ec1[0x5] = _0x4d7be6['y'], _0x5b7ec1[0x6] = _0x4d7be6['z'], _0x5b7ec1[0x8] = _0x576b99['x'], _0x5b7ec1[0x9] = _0x576b99['y'], _0x5b7ec1[0xa] = _0x576b99['z'], _0x5b7ec1[0x0] * _0x3743f6 + _0x5b7ec1[0x1] * _0x336116 + _0x5b7ec1[0x2] * _0x15072a < 0x0 && (_0x2de71e['x'] = -_0x223b84), _0x5b7ec1[0x4] * _0x44c91c + _0x5b7ec1[0x5] * _0x54a62a + _0x5b7ec1[0x6] * _0x2ee5a6 < 0x0 && (_0x2de71e['y'] = -_0x279939), _0x5b7ec1[0x8] * _0x310128 + _0x5b7ec1[0x9] * _0x4821a3 + _0x5b7ec1[0xa] * _0x295398 < 0x0 && (_0x2de71e['z'] = -_0x2a3838), !![];
        }
        ['decomposeY' + 'awPitchRol' + 'l'](_0xebf409) {
            var _0x40b464 = Math['asin'](-this['elements'][0x9]);
            _0xebf409['y'] = _0x40b464;
            var _0x18cce2 = Math['cos'](_0x40b464);
            _0x18cce2 > _0xc6f01['zeroTolera' + 'nce'] ? (_0xebf409['z'] = Math['atan2'](this['elements'][0x1], this['elements'][0x5]), _0xebf409['x'] = Math['atan2'](this['elements'][0x8], this['elements'][0xa])) : (_0xebf409['z'] = Math['atan2'](-this['elements'][0x4], this['elements'][0x0]), _0xebf409['x'] = 0x0);
        }
        ['normalize']() {
            var _0x27cbd4 = this['elements'], _0x4a1026 = _0x27cbd4[0x0], _0x3e0131 = _0x27cbd4[0x1], _0x7799b3 = _0x27cbd4[0x2], _0x31e2c6 = Math['sqrt'](_0x4a1026 * _0x4a1026 + _0x3e0131 * _0x3e0131 + _0x7799b3 * _0x7799b3);
            if (_0x31e2c6) {
                if (_0x31e2c6 == 0x1)
                    return;
            } else {
                _0x27cbd4[0x0] = 0x0, _0x27cbd4[0x1] = 0x0, _0x27cbd4[0x2] = 0x0;
                return;
            }
            _0x31e2c6 = 0x1 / _0x31e2c6, _0x27cbd4[0x0] = _0x4a1026 * _0x31e2c6, _0x27cbd4[0x1] = _0x3e0131 * _0x31e2c6, _0x27cbd4[0x2] = _0x7799b3 * _0x31e2c6;
        }
        ['transpose']() {
            var _0x3b470e, _0x5d0db0;
            return _0x3b470e = this['elements'], _0x5d0db0 = _0x3b470e[0x1], _0x3b470e[0x1] = _0x3b470e[0x4], _0x3b470e[0x4] = _0x5d0db0, _0x5d0db0 = _0x3b470e[0x2], _0x3b470e[0x2] = _0x3b470e[0x8], _0x3b470e[0x8] = _0x5d0db0, _0x5d0db0 = _0x3b470e[0x3], _0x3b470e[0x3] = _0x3b470e[0xc], _0x3b470e[0xc] = _0x5d0db0, _0x5d0db0 = _0x3b470e[0x6], _0x3b470e[0x6] = _0x3b470e[0x9], _0x3b470e[0x9] = _0x5d0db0, _0x5d0db0 = _0x3b470e[0x7], _0x3b470e[0x7] = _0x3b470e[0xd], _0x3b470e[0xd] = _0x5d0db0, _0x5d0db0 = _0x3b470e[0xb], _0x3b470e[0xb] = _0x3b470e[0xe], _0x3b470e[0xe] = _0x5d0db0, this;
        }
        ['invert'](_0xc21d19) {
            var _0xa12507 = this['elements'], _0x11f64a = _0xc21d19['elements'], _0x102b8f = _0xa12507[0x0], _0x5d4a1d = _0xa12507[0x1], _0x4fb31b = _0xa12507[0x2], _0x1b00c5 = _0xa12507[0x3], _0xc29cc8 = _0xa12507[0x4], _0x3c27d6 = _0xa12507[0x5], _0xcc827 = _0xa12507[0x6], _0x52c6b3 = _0xa12507[0x7], _0x59d451 = _0xa12507[0x8], _0x37765f = _0xa12507[0x9], _0x3c13c8 = _0xa12507[0xa], _0x4881bd = _0xa12507[0xb], _0x5c2e3a = _0xa12507[0xc], _0x55f1d9 = _0xa12507[0xd], _0x1aef5f = _0xa12507[0xe], _0x12cc98 = _0xa12507[0xf], _0x2bdfc2 = _0x102b8f * _0x3c27d6 - _0x5d4a1d * _0xc29cc8, _0xbad57f = _0x102b8f * _0xcc827 - _0x4fb31b * _0xc29cc8, _0x215b91 = _0x102b8f * _0x52c6b3 - _0x1b00c5 * _0xc29cc8, _0x57404e = _0x5d4a1d * _0xcc827 - _0x4fb31b * _0x3c27d6, _0x12f038 = _0x5d4a1d * _0x52c6b3 - _0x1b00c5 * _0x3c27d6, _0x50b996 = _0x4fb31b * _0x52c6b3 - _0x1b00c5 * _0xcc827, _0x4c16c1 = _0x59d451 * _0x55f1d9 - _0x37765f * _0x5c2e3a, _0x8d222a = _0x59d451 * _0x1aef5f - _0x3c13c8 * _0x5c2e3a, _0x4dcf59 = _0x59d451 * _0x12cc98 - _0x4881bd * _0x5c2e3a, _0x9e541e = _0x37765f * _0x1aef5f - _0x3c13c8 * _0x55f1d9, _0x18041a = _0x37765f * _0x12cc98 - _0x4881bd * _0x55f1d9, _0x3d994a = _0x3c13c8 * _0x12cc98 - _0x4881bd * _0x1aef5f, _0x50fc53 = _0x2bdfc2 * _0x3d994a - _0xbad57f * _0x18041a + _0x215b91 * _0x9e541e + _0x57404e * _0x4dcf59 - _0x12f038 * _0x8d222a + _0x50b996 * _0x4c16c1;
            if (Math['abs'](_0x50fc53) === 0x0)
                return;
            _0x50fc53 = 0x1 / _0x50fc53, _0x11f64a[0x0] = (_0x3c27d6 * _0x3d994a - _0xcc827 * _0x18041a + _0x52c6b3 * _0x9e541e) * _0x50fc53, _0x11f64a[0x1] = (_0x4fb31b * _0x18041a - _0x5d4a1d * _0x3d994a - _0x1b00c5 * _0x9e541e) * _0x50fc53, _0x11f64a[0x2] = (_0x55f1d9 * _0x50b996 - _0x1aef5f * _0x12f038 + _0x12cc98 * _0x57404e) * _0x50fc53, _0x11f64a[0x3] = (_0x3c13c8 * _0x12f038 - _0x37765f * _0x50b996 - _0x4881bd * _0x57404e) * _0x50fc53, _0x11f64a[0x4] = (_0xcc827 * _0x4dcf59 - _0xc29cc8 * _0x3d994a - _0x52c6b3 * _0x8d222a) * _0x50fc53, _0x11f64a[0x5] = (_0x102b8f * _0x3d994a - _0x4fb31b * _0x4dcf59 + _0x1b00c5 * _0x8d222a) * _0x50fc53, _0x11f64a[0x6] = (_0x1aef5f * _0x215b91 - _0x5c2e3a * _0x50b996 - _0x12cc98 * _0xbad57f) * _0x50fc53, _0x11f64a[0x7] = (_0x59d451 * _0x50b996 - _0x3c13c8 * _0x215b91 + _0x4881bd * _0xbad57f) * _0x50fc53, _0x11f64a[0x8] = (_0xc29cc8 * _0x18041a - _0x3c27d6 * _0x4dcf59 + _0x52c6b3 * _0x4c16c1) * _0x50fc53, _0x11f64a[0x9] = (_0x5d4a1d * _0x4dcf59 - _0x102b8f * _0x18041a - _0x1b00c5 * _0x4c16c1) * _0x50fc53, _0x11f64a[0xa] = (_0x5c2e3a * _0x12f038 - _0x55f1d9 * _0x215b91 + _0x12cc98 * _0x2bdfc2) * _0x50fc53, _0x11f64a[0xb] = (_0x37765f * _0x215b91 - _0x59d451 * _0x12f038 - _0x4881bd * _0x2bdfc2) * _0x50fc53, _0x11f64a[0xc] = (_0x3c27d6 * _0x8d222a - _0xc29cc8 * _0x9e541e - _0xcc827 * _0x4c16c1) * _0x50fc53, _0x11f64a[0xd] = (_0x102b8f * _0x9e541e - _0x5d4a1d * _0x8d222a + _0x4fb31b * _0x4c16c1) * _0x50fc53, _0x11f64a[0xe] = (_0x55f1d9 * _0xbad57f - _0x5c2e3a * _0x57404e - _0x1aef5f * _0x2bdfc2) * _0x50fc53, _0x11f64a[0xf] = (_0x59d451 * _0x57404e - _0x37765f * _0xbad57f + _0x3c13c8 * _0x2bdfc2) * _0x50fc53;
        }
        static ['billboard'](_0x1b4b2f, _0x5b9e3d, _0x24dd22, _0x1d6bcd, _0x3cc911, _0x905f91) {
            _0x352206['subtract'](_0x1b4b2f, _0x5b9e3d, _0x4c2288['_tempVecto' + 'r0']);
            var _0x3b79be = _0x352206['scalarLeng' + 'thSquared'](_0x4c2288['_tempVecto' + 'r0']);
            _0xc6f01['isZero'](_0x3b79be) ? (_0x352206['scale'](_0x3cc911, -0x1, _0x4c2288['_tempVecto' + 'r1']), _0x4c2288['_tempVecto' + 'r1']['cloneTo'](_0x4c2288['_tempVecto' + 'r0'])) : _0x352206['scale'](_0x4c2288['_tempVecto' + 'r0'], 0x1 / Math['sqrt'](_0x3b79be), _0x4c2288['_tempVecto' + 'r0']);
            _0x352206['cross'](_0x1d6bcd, _0x4c2288['_tempVecto' + 'r0'], _0x4c2288['_tempVecto' + 'r2']), _0x352206['normalize'](_0x4c2288['_tempVecto' + 'r2'], _0x4c2288['_tempVecto' + 'r2']), _0x352206['cross'](_0x4c2288['_tempVecto' + 'r0'], _0x4c2288['_tempVecto' + 'r2'], _0x4c2288['_tempVecto' + 'r3']);
            var _0x16d21f = _0x4c2288['_tempVecto' + 'r2'], _0x178bcb = _0x4c2288['_tempVecto' + 'r3'], _0x1b8824 = _0x4c2288['_tempVecto' + 'r0'], _0x33958a = _0x1b4b2f, _0x4b383f = _0x905f91['elements'];
            _0x4b383f[0x0] = _0x16d21f['x'], _0x4b383f[0x1] = _0x16d21f['y'], _0x4b383f[0x2] = _0x16d21f['z'], _0x4b383f[0x3] = 0x0, _0x4b383f[0x4] = _0x178bcb['x'], _0x4b383f[0x5] = _0x178bcb['y'], _0x4b383f[0x6] = _0x178bcb['z'], _0x4b383f[0x7] = 0x0, _0x4b383f[0x8] = _0x1b8824['x'], _0x4b383f[0x9] = _0x1b8824['y'], _0x4b383f[0xa] = _0x1b8824['z'], _0x4b383f[0xb] = 0x0, _0x4b383f[0xc] = _0x33958a['x'], _0x4b383f[0xd] = _0x33958a['y'], _0x4b383f[0xe] = _0x33958a['z'], _0x4b383f[0xf] = 0x1;
        }
        ['identity']() {
            var _0x44b923 = this['elements'];
            _0x44b923[0x1] = _0x44b923[0x2] = _0x44b923[0x3] = _0x44b923[0x4] = _0x44b923[0x6] = _0x44b923[0x7] = _0x44b923[0x8] = _0x44b923[0x9] = _0x44b923[0xb] = _0x44b923[0xc] = _0x44b923[0xd] = _0x44b923[0xe] = 0x0, _0x44b923[0x0] = _0x44b923[0x5] = _0x44b923[0xa] = _0x44b923[0xf] = 0x1;
        }
        ['cloneTo'](_0x38db50) {
            var _0x35f2da, _0x56a8b5, _0x152fec;
            _0x56a8b5 = this['elements'], _0x152fec = _0x38db50['elements'];
            if (_0x56a8b5 === _0x152fec)
                return;
            for (_0x35f2da = 0x0; _0x35f2da < 0x10; ++_0x35f2da) {
                _0x152fec[_0x35f2da] = _0x56a8b5[_0x35f2da];
            }
        }
        ['clone']() {
            var _0x979a21 = new _0x4c2288();
            return this['cloneTo'](_0x979a21), _0x979a21;
        }
        static ['translatio' + 'n'](_0x283cb6, _0x1365d4) {
            var _0x38f9da = _0x1365d4['elements'];
            _0x38f9da[0x0] = _0x38f9da[0x5] = _0x38f9da[0xa] = _0x38f9da[0xf] = 0x1, _0x38f9da[0xc] = _0x283cb6['x'], _0x38f9da[0xd] = _0x283cb6['y'], _0x38f9da[0xe] = _0x283cb6['z'];
        }
        ['getTransla' + 'tionVector'](_0x1e45c7) {
            var _0x2dc337 = this['elements'];
            _0x1e45c7['x'] = _0x2dc337[0xc], _0x1e45c7['y'] = _0x2dc337[0xd], _0x1e45c7['z'] = _0x2dc337[0xe];
        }
        ['setTransla' + 'tionVector'](_0x1460b0) {
            var _0x3e424e = this['elements'], _0x4a29f6 = _0x1460b0;
            _0x3e424e[0xc] = _0x4a29f6['x'], _0x3e424e[0xd] = _0x4a29f6['y'], _0x3e424e[0xe] = _0x4a29f6['z'];
        }
        ['getForward'](_0x36352a) {
            var _0x433638 = this['elements'];
            _0x36352a['x'] = -_0x433638[0x8], _0x36352a['y'] = -_0x433638[0x9], _0x36352a['z'] = -_0x433638[0xa];
        }
        ['setForward'](_0x2ed5e0) {
            var _0x4ce23b = this['elements'];
            _0x4ce23b[0x8] = -_0x2ed5e0['x'], _0x4ce23b[0x9] = -_0x2ed5e0['y'], _0x4ce23b[0xa] = -_0x2ed5e0['z'];
        }
        ['getInvertF' + 'ront']() {
            this['decomposeT' + 'ransRotSca' + 'le'](_0x4c2288['_tempVecto' + 'r0'], _0x4c2288['_tempQuate' + 'rnion'], _0x4c2288['_tempVecto' + 'r1']);
            var _0x469b62 = _0x4c2288['_tempVecto' + 'r1'], _0xf255ee = _0x469b62['x'] < 0x0;
            return _0x469b62['y'] < 0x0 && (_0xf255ee = !_0xf255ee), _0x469b62['z'] < 0x0 && (_0xf255ee = !_0xf255ee), _0xf255ee;
        }
    }
    _0x4c2288['_tempMatri' + 'x4x4'] = new _0x4c2288(), _0x4c2288['TEMPMatrix' + '0'] = new _0x4c2288(), _0x4c2288['TEMPMatrix' + '1'] = new _0x4c2288(), _0x4c2288['_tempVecto' + 'r0'] = new _0x352206(), _0x4c2288['_tempVecto' + 'r1'] = new _0x352206(), _0x4c2288['_tempVecto' + 'r2'] = new _0x352206(), _0x4c2288['_tempVecto' + 'r3'] = new _0x352206(), _0x4c2288['_tempQuate' + 'rnion'] = new _0x388291(), _0x4c2288['DEFAULT'] = new _0x4c2288(), _0x4c2288['ZERO'] = new _0x4c2288(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0);
    class _0x11d2cc {
        constructor() {
            this['_scale'] = new _0x352206(0x1, 0x1, 0x1), this['_centerMat' + 'rix'] = new _0x4c2288(), this['_attatched'] = ![], this['_indexInCo' + 'mpound'] = -0x1, this['_compoundP' + 'arent'] = null, this['_attatched' + 'CollisionO' + 'bject'] = null, this['_reference' + 'Count'] = 0x0, this['_localOffs' + 'et'] = new _0x352206(0x0, 0x0, 0x0), this['_localRota' + 'tion'] = new _0x388291(0x0, 0x0, 0x0, 0x1), this['needsCusto' + 'mCollision' + 'Callback'] = ![];
        }
        static ['__init__']() {
            var _0x37b3e2 = _0x207eb6['Physics3D']['_bullet'];
            _0x11d2cc['_btScale'] = _0x37b3e2['btVector3_' + 'create'](0x1, 0x1, 0x1), _0x11d2cc['_btVector3' + '0'] = _0x37b3e2['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x11d2cc['_btQuatern' + 'ion0'] = _0x37b3e2['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x11d2cc['_btTransfo' + 'rm0'] = _0x37b3e2['btTransfor' + 'm_create']();
        }
        static ['_createAff' + 'ineTransfo' + 'rmation'](_0x734f81, _0x29db17, _0x471e8c) {
            var _0x37a41a = _0x29db17['x'], _0x49f099 = _0x29db17['y'], _0x5f01fb = _0x29db17['z'], _0x35c963 = _0x29db17['w'], _0xaa9b91 = _0x37a41a + _0x37a41a, _0x1a40c7 = _0x49f099 + _0x49f099, _0x4796da = _0x5f01fb + _0x5f01fb, _0xb4c644 = _0x37a41a * _0xaa9b91, _0x1567c = _0x37a41a * _0x1a40c7, _0x11bcc9 = _0x37a41a * _0x4796da, _0xbcebf = _0x49f099 * _0x1a40c7, _0x5d404b = _0x49f099 * _0x4796da, _0x1b886f = _0x5f01fb * _0x4796da, _0x3f56a6 = _0x35c963 * _0xaa9b91, _0x5e6a48 = _0x35c963 * _0x1a40c7, _0x255334 = _0x35c963 * _0x4796da;
            _0x471e8c[0x0] = 0x1 - (_0xbcebf + _0x1b886f), _0x471e8c[0x1] = _0x1567c + _0x255334, _0x471e8c[0x2] = _0x11bcc9 - _0x5e6a48, _0x471e8c[0x3] = 0x0, _0x471e8c[0x4] = _0x1567c - _0x255334, _0x471e8c[0x5] = 0x1 - (_0xb4c644 + _0x1b886f), _0x471e8c[0x6] = _0x5d404b + _0x3f56a6, _0x471e8c[0x7] = 0x0, _0x471e8c[0x8] = _0x11bcc9 + _0x5e6a48, _0x471e8c[0x9] = _0x5d404b - _0x3f56a6, _0x471e8c[0xa] = 0x1 - (_0xb4c644 + _0xbcebf), _0x471e8c[0xb] = 0x0, _0x471e8c[0xc] = _0x734f81['x'], _0x471e8c[0xd] = _0x734f81['y'], _0x471e8c[0xe] = _0x734f81['z'], _0x471e8c[0xf] = 0x1;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['localOffse' + 't']() {
            return this['_localOffs' + 'et'];
        }
        set ['localOffse' + 't'](_0x1649cb) {
            this['_localOffs' + 'et'] = _0x1649cb;
            if (this['_compoundP' + 'arent'])
                this['_compoundP' + 'arent']['_updateChi' + 'ldTransfor' + 'm'](this);
        }
        get ['localRotat' + 'ion']() {
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x24b655) {
            this['_localRota' + 'tion'] = _0x24b655;
            if (this['_compoundP' + 'arent'])
                this['_compoundP' + 'arent']['_updateChi' + 'ldTransfor' + 'm'](this);
        }
        ['_setScale'](_0x1e07e3) {
            if (this['_compoundP' + 'arent'])
                this['updateLoca' + 'lTransform' + 'ations']();
            else {
                var _0xe45f15 = _0x207eb6['Physics3D']['_bullet'];
                _0xe45f15['btVector3_' + 'setValue'](_0x11d2cc['_btScale'], _0x1e07e3['x'], _0x1e07e3['y'], _0x1e07e3['z']), _0xe45f15['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x11d2cc['_btScale']);
            }
        }
        ['_addRefere' + 'nce']() {
            this['_reference' + 'Count']++;
        }
        ['_removeRef' + 'erence']() {
            this['_reference' + 'Count']--;
        }
        ['updateLoca' + 'lTransform' + 'ations']() {
            if (this['_compoundP' + 'arent']) {
                var _0x1e819b = _0x11d2cc['_tempVecto' + 'r30'];
                _0x352206['multiply'](this['localOffse' + 't'], this['_scale'], _0x1e819b), _0x11d2cc['_createAff' + 'ineTransfo' + 'rmation'](_0x1e819b, this['localRotat' + 'ion'], this['_centerMat' + 'rix']['elements']);
            } else
                _0x11d2cc['_createAff' + 'ineTransfo' + 'rmation'](this['localOffse' + 't'], this['localRotat' + 'ion'], this['_centerMat' + 'rix']['elements']);
        }
        ['cloneTo'](_0x45e336) {
            var _0x3612df = _0x45e336;
            this['_localOffs' + 'et']['cloneTo'](_0x3612df['localOffse' + 't']), this['_localRota' + 'tion']['cloneTo'](_0x3612df['localRotat' + 'ion']), _0x3612df['localOffse' + 't'] = _0x3612df['localOffse' + 't'], _0x3612df['localRotat' + 'ion'] = _0x3612df['localRotat' + 'ion'];
        }
        ['clone']() {
            return null;
        }
        ['destroy']() {
            this['_btShape'] && (_0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), this['_btShape'] = null);
        }
    }
    _0x11d2cc['SHAPEORIEN' + 'TATION_UPX'] = 0x0, _0x11d2cc['SHAPEORIEN' + 'TATION_UPY'] = 0x1, _0x11d2cc['SHAPEORIEN' + 'TATION_UPZ'] = 0x2, _0x11d2cc['SHAPETYPES' + '_BOX'] = 0x0, _0x11d2cc['SHAPETYPES' + '_SPHERE'] = 0x1, _0x11d2cc['SHAPETYPES' + '_CYLINDER'] = 0x2, _0x11d2cc['SHAPETYPES' + '_CAPSULE'] = 0x3, _0x11d2cc['SHAPETYPES' + '_CONVEXHUL' + 'L'] = 0x4, _0x11d2cc['SHAPETYPES' + '_COMPOUND'] = 0x5, _0x11d2cc['SHAPETYPES' + '_STATICPLA' + 'NE'] = 0x6, _0x11d2cc['SHAPETYPES' + '_CONE'] = 0x7, _0x11d2cc['_tempVecto' + 'r30'] = new _0x352206();
    class _0x417ed1 extends _0x11d2cc {
        constructor(_0x4db080, _0x363251) {
            super(), this['_normal'] = _0x4db080, this['_offset'] = _0x363251, this['_type'] = _0x11d2cc['SHAPETYPES' + '_STATICPLA' + 'NE'];
            var _0x51553e = _0x207eb6['Physics3D']['_bullet'];
            _0x51553e['btVector3_' + 'setValue'](_0x417ed1['_btNormal'], -_0x4db080['x'], _0x4db080['y'], _0x4db080['z']), this['_btShape'] = _0x51553e['btStaticPl' + 'aneShape_c' + 'reate'](_0x417ed1['_btNormal'], _0x363251);
        }
        static ['__init__']() {
            _0x417ed1['_btNormal'] = _0x207eb6['Physics3D']['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        ['clone']() {
            var _0x6c9113 = new _0x417ed1(this['_normal'], this['_offset']);
            return this['cloneTo'](_0x6c9113), _0x6c9113;
        }
    }
    class _0x3aa64c extends _0x11d2cc {
        constructor() {
            super(), this['_childColl' + 'iderShapes'] = [], this['_type'] = _0x11d2cc['SHAPETYPES' + '_COMPOUND'], this['_btShape'] = _0x207eb6['Physics3D']['_bullet']['btCompound' + 'Shape_crea' + 'te']();
        }
        static ['__init__']() {
            var _0x1de955 = _0x207eb6['Physics3D']['_bullet'];
            _0x3aa64c['_btVector3' + 'One'] = _0x1de955['btVector3_' + 'create'](0x1, 0x1, 0x1), _0x3aa64c['_btTransfo' + 'rm'] = _0x1de955['btTransfor' + 'm_create'](), _0x3aa64c['_btOffset'] = _0x1de955['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x3aa64c['_btRotatio' + 'n'] = _0x1de955['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1);
        }
        ['_clearChil' + 'dShape'](_0x41dc09) {
            _0x41dc09['_attatched'] = ![], _0x41dc09['_compoundP' + 'arent'] = null, _0x41dc09['_indexInCo' + 'mpound'] = -0x1;
        }
        ['_addRefere' + 'nce']() {
        }
        ['_removeRef' + 'erence']() {
        }
        ['_updateChi' + 'ldTransfor' + 'm'](_0x58efa1) {
            var _0x3e1d6 = _0x207eb6['Physics3D']['_bullet'], _0x4506ed = _0x58efa1['localOffse' + 't'], _0xa9c10f = _0x58efa1['localRotat' + 'ion'], _0x27ff81 = _0x11d2cc['_btVector3' + '0'], _0x13eb4a = _0x11d2cc['_btQuatern' + 'ion0'], _0x61983b = _0x11d2cc['_btTransfo' + 'rm0'];
            _0x3e1d6['btVector3_' + 'setValue'](_0x27ff81, -_0x4506ed['x'], _0x4506ed['y'], _0x4506ed['z']), _0x3e1d6['btQuaterni' + 'on_setValu' + 'e'](_0x13eb4a, -_0xa9c10f['x'], _0xa9c10f['y'], _0xa9c10f['z'], -_0xa9c10f['w']), _0x3e1d6['btTransfor' + 'm_setOrigi' + 'n'](_0x61983b, _0x27ff81), _0x3e1d6['btTransfor' + 'm_setRotat' + 'ion'](_0x61983b, _0x13eb4a), _0x3e1d6['btCompound' + 'Shape_upda' + 'teChildTra' + 'nsform'](this['_btShape'], _0x58efa1['_indexInCo' + 'mpound'], _0x61983b, !![]);
        }
        ['addChildSh' + 'ape'](_0x25c5a7) {
            if (_0x25c5a7['_attatched'])
                throw 'CompoundCo' + 'lliderShap' + 'e:\x20this\x20sh' + 'ape\x20has\x20at' + 'tatched\x20to' + '\x20other\x20ent' + 'ity.';
            _0x25c5a7['_attatched'] = !![], _0x25c5a7['_compoundP' + 'arent'] = this, _0x25c5a7['_indexInCo' + 'mpound'] = this['_childColl' + 'iderShapes']['length'], this['_childColl' + 'iderShapes']['push'](_0x25c5a7);
            var _0x58b556 = _0x25c5a7['localOffse' + 't'], _0x166526 = _0x25c5a7['localRotat' + 'ion'], _0x494276 = _0x207eb6['Physics3D']['_bullet'];
            _0x494276['btVector3_' + 'setValue'](_0x3aa64c['_btOffset'], -_0x58b556['x'], _0x58b556['y'], _0x58b556['z']), _0x494276['btQuaterni' + 'on_setValu' + 'e'](_0x3aa64c['_btRotatio' + 'n'], -_0x166526['x'], _0x166526['y'], _0x166526['z'], -_0x166526['w']), _0x494276['btTransfor' + 'm_setOrigi' + 'n'](_0x3aa64c['_btTransfo' + 'rm'], _0x3aa64c['_btOffset']), _0x494276['btTransfor' + 'm_setRotat' + 'ion'](_0x3aa64c['_btTransfo' + 'rm'], _0x3aa64c['_btRotatio' + 'n']);
            var _0x538f72 = _0x494276['btCollisio' + 'nShape_get' + 'LocalScali' + 'ng'](this['_btShape']);
            _0x494276['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x3aa64c['_btVector3' + 'One']), _0x494276['btCompound' + 'Shape_addC' + 'hildShape'](this['_btShape'], _0x3aa64c['_btTransfo' + 'rm'], _0x25c5a7['_btShape']), _0x494276['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x538f72), this['_attatched' + 'CollisionO' + 'bject'] && (this['_attatched' + 'CollisionO' + 'bject']['colliderSh' + 'ape'] = this);
        }
        ['removeChil' + 'dShape'](_0x265065) {
            if (_0x265065['_compoundP' + 'arent'] === this) {
                var _0x32d3bc = _0x265065['_indexInCo' + 'mpound'];
                this['_clearChil' + 'dShape'](_0x265065);
                var _0x255e98 = this['_childColl' + 'iderShapes'][this['_childColl' + 'iderShapes']['length'] - 0x1];
                _0x255e98['_indexInCo' + 'mpound'] = _0x32d3bc, this['_childColl' + 'iderShapes'][_0x32d3bc] = _0x255e98, this['_childColl' + 'iderShapes']['pop'](), _0x207eb6['Physics3D']['_bullet']['btCompound' + 'Shape_remo' + 'veChildSha' + 'peByIndex'](this['_btShape'], _0x32d3bc);
            }
        }
        ['clearChild' + 'Shape']() {
            for (var _0x29902b = 0x0, _0x34f1da = this['_childColl' + 'iderShapes']['length']; _0x29902b < _0x34f1da; _0x29902b++) {
                this['_clearChil' + 'dShape'](this['_childColl' + 'iderShapes'][_0x29902b]), _0x207eb6['Physics3D']['_bullet']['btCompound' + 'Shape_remo' + 'veChildSha' + 'peByIndex'](this['_btShape'], 0x0);
            }
            this['_childColl' + 'iderShapes']['length'] = 0x0;
        }
        ['getChildSh' + 'apeCount']() {
            return this['_childColl' + 'iderShapes']['length'];
        }
        ['cloneTo'](_0x2564f2) {
            var _0x17eeae = _0x2564f2;
            _0x17eeae['clearChild' + 'Shape']();
            for (var _0x427809 = 0x0, _0x1a6550 = this['_childColl' + 'iderShapes']['length']; _0x427809 < _0x1a6550; _0x427809++)
                _0x17eeae['addChildSh' + 'ape'](this['_childColl' + 'iderShapes'][_0x427809]['clone']());
        }
        ['clone']() {
            var _0x49ec79 = new _0x3aa64c();
            return this['cloneTo'](_0x49ec79), _0x49ec79;
        }
        ['destroy']() {
            super['destroy']();
            for (var _0x5bdfcb = 0x0, _0x297c39 = this['_childColl' + 'iderShapes']['length']; _0x5bdfcb < _0x297c39; _0x5bdfcb++) {
                var _0x2715c5 = this['_childColl' + 'iderShapes'][_0x5bdfcb];
                if (_0x2715c5['_reference' + 'Count'] === 0x0)
                    _0x2715c5['destroy']();
            }
        }
    }
    class _0x203c65 extends _0x442335['EventDispa' + 'tcher'] {
        constructor(_0x5bafcb) {
            super(), this['_localPosi' + 'tion'] = new _0x352206(0x0, 0x0, 0x0), this['_localRota' + 'tion'] = new _0x388291(0x0, 0x0, 0x0, 0x1), this['_localScal' + 'e'] = new _0x352206(0x1, 0x1, 0x1), this['_localRota' + 'tionEuler'] = new _0x352206(0x0, 0x0, 0x0), this['_localMatr' + 'ix'] = new _0x4c2288(), this['_position'] = new _0x352206(0x0, 0x0, 0x0), this['_rotation'] = new _0x388291(0x0, 0x0, 0x0, 0x1), this['_scale'] = new _0x352206(0x1, 0x1, 0x1), this['_rotationE' + 'uler'] = new _0x352206(0x0, 0x0, 0x0), this['_worldMatr' + 'ix'] = new _0x4c2288(), this['_children'] = null, this['_parent'] = null, this['_dummy'] = null, this['_transform' + 'Flag'] = 0x0, this['_owner'] = _0x5bafcb, this['_children'] = [], this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'LOCALEULER'] | _0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], ![]), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDEULER'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'] | _0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'], !![]);
        }
        get ['_isFrontFa' + 'ceInvert']() {
            var _0x237123 = this['getWorldLo' + 'ssyScale'](), _0xf0de62 = _0x237123['x'] < 0x0;
            return _0x237123['y'] < 0x0 && (_0xf0de62 = !_0xf0de62), _0x237123['z'] < 0x0 && (_0xf0de62 = !_0xf0de62), _0xf0de62;
        }
        get ['owner']() {
            return this['_owner'];
        }
        get ['worldNeedU' + 'pdate']() {
            return this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']);
        }
        get ['localPosit' + 'ionX']() {
            return this['_localPosi' + 'tion']['x'];
        }
        set ['localPosit' + 'ionX'](_0x41c256) {
            this['_localPosi' + 'tion']['x'] = _0x41c256, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ionY']() {
            return this['_localPosi' + 'tion']['y'];
        }
        set ['localPosit' + 'ionY'](_0x41c97f) {
            this['_localPosi' + 'tion']['y'] = _0x41c97f, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ionZ']() {
            return this['_localPosi' + 'tion']['z'];
        }
        set ['localPosit' + 'ionZ'](_0x2e9d2e) {
            this['_localPosi' + 'tion']['z'] = _0x2e9d2e, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ion']() {
            return this['_localPosi' + 'tion'];
        }
        set ['localPosit' + 'ion'](_0x5f0c14) {
            if (this['_localPosi' + 'tion'] !== _0x5f0c14)
                _0x5f0c14['cloneTo'](this['_localPosi' + 'tion']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], !![]), this['_onWorldPo' + 'sitionTran' + 'sform']();
        }
        get ['localRotat' + 'ionX']() {
            return this['localRotat' + 'ion']['x'];
        }
        set ['localRotat' + 'ionX'](_0x1169f6) {
            this['_localRota' + 'tion']['x'] = _0x1169f6, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionY']() {
            return this['localRotat' + 'ion']['y'];
        }
        set ['localRotat' + 'ionY'](_0x2447bf) {
            this['_localRota' + 'tion']['y'] = _0x2447bf, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionZ']() {
            return this['localRotat' + 'ion']['z'];
        }
        set ['localRotat' + 'ionZ'](_0x4bb849) {
            this['_localRota' + 'tion']['z'] = _0x4bb849, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionW']() {
            return this['localRotat' + 'ion']['w'];
        }
        set ['localRotat' + 'ionW'](_0xde1c1) {
            this['_localRota' + 'tion']['w'] = _0xde1c1, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ion']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALQUATE' + 'RNION'])) {
                var _0x3e175a = this['_localRota' + 'tionEuler'];
                _0x388291['createFrom' + 'YawPitchRo' + 'll'](_0x3e175a['y'] / _0x203c65['_angleToRa' + 'ndin'], _0x3e175a['x'] / _0x203c65['_angleToRa' + 'ndin'], _0x3e175a['z'] / _0x203c65['_angleToRa' + 'ndin'], this['_localRota' + 'tion']), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALQUATE' + 'RNION'], ![]);
            }
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0xa2875e) {
            if (this['_localRota' + 'tion'] !== _0xa2875e)
                _0xa2875e['cloneTo'](this['_localRota' + 'tion']);
            this['_localRota' + 'tion']['normalize'](this['_localRota' + 'tion']), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALEULER'] | _0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], !![]), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALQUATE' + 'RNION'], ![]), this['_onWorldRo' + 'tationTran' + 'sform']();
        }
        get ['localScale' + 'X']() {
            return this['_localScal' + 'e']['x'];
        }
        set ['localScale' + 'X'](_0x472c97) {
            this['_localScal' + 'e']['x'] = _0x472c97, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale' + 'Y']() {
            return this['_localScal' + 'e']['y'];
        }
        set ['localScale' + 'Y'](_0x2e43d1) {
            this['_localScal' + 'e']['y'] = _0x2e43d1, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale' + 'Z']() {
            return this['_localScal' + 'e']['z'];
        }
        set ['localScale' + 'Z'](_0x356ab2) {
            this['_localScal' + 'e']['z'] = _0x356ab2, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale']() {
            return this['_localScal' + 'e'];
        }
        set ['localScale'](_0x29d120) {
            if (this['_localScal' + 'e'] !== _0x29d120)
                _0x29d120['cloneTo'](this['_localScal' + 'e']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], !![]), this['_onWorldSc' + 'aleTransfo' + 'rm']();
        }
        get ['localRotat' + 'ionEulerX']() {
            return this['localRotat' + 'ionEuler']['x'];
        }
        set ['localRotat' + 'ionEulerX'](_0x4cf33b) {
            this['_localRota' + 'tionEuler']['x'] = _0x4cf33b, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEulerY']() {
            return this['localRotat' + 'ionEuler']['y'];
        }
        set ['localRotat' + 'ionEulerY'](_0x23d7dd) {
            this['_localRota' + 'tionEuler']['y'] = _0x23d7dd, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEulerZ']() {
            return this['localRotat' + 'ionEuler']['z'];
        }
        set ['localRotat' + 'ionEulerZ'](_0x41ab25) {
            this['_localRota' + 'tionEuler']['z'] = _0x41ab25, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEuler']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALEULER'])) {
                this['_localRota' + 'tion']['getYawPitc' + 'hRoll'](_0x203c65['_tempVecto' + 'r30']);
                var _0x5e6439 = _0x203c65['_tempVecto' + 'r30'], _0x13dc66 = this['_localRota' + 'tionEuler'];
                _0x13dc66['x'] = _0x5e6439['y'] * _0x203c65['_angleToRa' + 'ndin'], _0x13dc66['y'] = _0x5e6439['x'] * _0x203c65['_angleToRa' + 'ndin'], _0x13dc66['z'] = _0x5e6439['z'] * _0x203c65['_angleToRa' + 'ndin'], this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALEULER'], ![]);
            }
            return this['_localRota' + 'tionEuler'];
        }
        set ['localRotat' + 'ionEuler'](_0x5191d1) {
            if (this['_localRota' + 'tionEuler'] !== _0x5191d1)
                _0x5191d1['cloneTo'](this['_localRota' + 'tionEuler']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALEULER'], ![]), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], !![]), this['_onWorldRo' + 'tationTran' + 'sform']();
        }
        get ['localMatri' + 'x']() {
            return this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X']) && (_0x4c2288['createAffi' + 'neTransfor' + 'mation'](this['_localPosi' + 'tion'], this['localRotat' + 'ion'], this['_localScal' + 'e'], this['_localMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], ![])), this['_localMatr' + 'ix'];
        }
        set ['localMatri' + 'x'](_0x252d17) {
            if (this['_localMatr' + 'ix'] !== _0x252d17)
                _0x252d17['cloneTo'](this['_localMatr' + 'ix']);
            this['_localMatr' + 'ix']['decomposeT' + 'ransRotSca' + 'le'](this['_localPosi' + 'tion'], this['_localRota' + 'tion'], this['_localScal' + 'e']), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALEULER'], !![]), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'], ![]), this['_onWorldTr' + 'ansform']();
        }
        get ['position']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                if (this['_parent'] != null) {
                    var _0x763ddd = this['worldMatri' + 'x']['elements'];
                    this['_position']['x'] = _0x763ddd[0xc], this['_position']['y'] = _0x763ddd[0xd], this['_position']['z'] = _0x763ddd[0xe];
                } else
                    this['_localPosi' + 'tion']['cloneTo'](this['_position']);
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], ![]);
            }
            return this['_position'];
        }
        set ['position'](_0xf9412d) {
            if (this['_parent'] != null) {
                var _0x45095c = _0x203c65['_tempMatri' + 'x0'];
                this['_parent']['worldMatri' + 'x']['invert'](_0x45095c), _0x352206['transformC' + 'oordinate'](_0xf9412d, _0x45095c, this['_localPosi' + 'tion']);
            } else
                _0xf9412d['cloneTo'](this['_localPosi' + 'tion']);
            this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
            if (this['_position'] !== _0xf9412d)
                _0xf9412d['cloneTo'](this['_position']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], ![]);
        }
        get ['rotation']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'])) {
                if (this['_parent'] != null)
                    _0x388291['multiply'](this['_parent']['rotation'], this['localRotat' + 'ion'], this['_rotation']);
                else
                    this['localRotat' + 'ion']['cloneTo'](this['_rotation']);
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], ![]);
            }
            return this['_rotation'];
        }
        set ['rotation'](_0xca8e13) {
            this['_parent'] != null ? (this['_parent']['rotation']['invert'](_0x203c65['_tempQuate' + 'rnion0']), _0x388291['multiply'](_0x203c65['_tempQuate' + 'rnion0'], _0xca8e13, this['_localRota' + 'tion'])) : _0xca8e13['cloneTo'](this['_localRota' + 'tion']);
            this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
            if (_0xca8e13 !== this['_rotation'])
                _0xca8e13['cloneTo'](this['_rotation']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], ![]);
        }
        get ['rotationEu' + 'ler']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDEULER'])) {
                this['rotation']['getYawPitc' + 'hRoll'](_0x203c65['_tempVecto' + 'r30']);
                var _0x52f9c1 = _0x203c65['_tempVecto' + 'r30'], _0x41ed33 = this['_rotationE' + 'uler'];
                _0x41ed33['x'] = _0x52f9c1['y'] * _0x203c65['_angleToRa' + 'ndin'], _0x41ed33['y'] = _0x52f9c1['x'] * _0x203c65['_angleToRa' + 'ndin'], _0x41ed33['z'] = _0x52f9c1['z'] * _0x203c65['_angleToRa' + 'ndin'], this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDEULER'], ![]);
            }
            return this['_rotationE' + 'uler'];
        }
        set ['rotationEu' + 'ler'](_0xbb9190) {
            _0x388291['createFrom' + 'YawPitchRo' + 'll'](_0xbb9190['y'] / _0x203c65['_angleToRa' + 'ndin'], _0xbb9190['x'] / _0x203c65['_angleToRa' + 'ndin'], _0xbb9190['z'] / _0x203c65['_angleToRa' + 'ndin'], this['_rotation']), this['rotation'] = this['_rotation'];
            if (this['_rotationE' + 'uler'] !== _0xbb9190)
                _0xbb9190['cloneTo'](this['_rotationE' + 'uler']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDEULER'], ![]);
        }
        get ['worldMatri' + 'x']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'])) {
                if (this['_parent'] != null)
                    _0x4c2288['multiply'](this['_parent']['worldMatri' + 'x'], this['localMatri' + 'x'], this['_worldMatr' + 'ix']);
                else
                    this['localMatri' + 'x']['cloneTo'](this['_worldMatr' + 'ix']);
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'], ![]);
            }
            return this['_worldMatr' + 'ix'];
        }
        set ['worldMatri' + 'x'](_0x9d970c) {
            this['_parent'] === null ? _0x9d970c['cloneTo'](this['_localMatr' + 'ix']) : (this['_parent']['worldMatri' + 'x']['invert'](this['_localMatr' + 'ix']), _0x4c2288['multiply'](this['_localMatr' + 'ix'], _0x9d970c, this['_localMatr' + 'ix']));
            this['localMatri' + 'x'] = this['_localMatr' + 'ix'];
            if (this['_worldMatr' + 'ix'] !== _0x9d970c)
                _0x9d970c['cloneTo'](this['_worldMatr' + 'ix']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'], ![]);
        }
        ['_getScaleM' + 'atrix']() {
            var _0x4cb5f3 = _0x203c65['_tempQuate' + 'rnion0'], _0x4fcb1b = _0x203c65['_tempMatri' + 'x3x30'], _0x3b10a6 = _0x203c65['_tempMatri' + 'x3x31'], _0xacabe0 = _0x203c65['_tempMatri' + 'x3x32'];
            return _0x11be5a['createFrom' + 'Matrix4x4'](this['worldMatri' + 'x'], _0x3b10a6), this['rotation']['invert'](_0x4cb5f3), _0x11be5a['createRota' + 'tionQuater' + 'nion'](_0x4cb5f3, _0x4fcb1b), _0x11be5a['multiply'](_0x4fcb1b, _0x3b10a6, _0xacabe0), _0xacabe0;
        }
        ['_setTransf' + 'ormFlag'](_0x59f5d9, _0x1742ef) {
            if (_0x1742ef)
                this['_transform' + 'Flag'] |= _0x59f5d9;
            else
                this['_transform' + 'Flag'] &= ~_0x59f5d9;
        }
        ['_getTransf' + 'ormFlag'](_0x2a439b) {
            return (this['_transform' + 'Flag'] & _0x2a439b) != 0x0;
        }
        ['_setParent'](_0x448d2a) {
            if (this['_parent'] !== _0x448d2a) {
                if (this['_parent']) {
                    var _0x4a2bc1 = this['_parent']['_children'], _0x496a56 = _0x4a2bc1['indexOf'](this);
                    _0x4a2bc1['splice'](_0x496a56, 0x1);
                }
                _0x448d2a && (_0x448d2a['_children']['push'](this), _0x448d2a && this['_onWorldTr' + 'ansform']()), this['_parent'] = _0x448d2a;
            }
        }
        ['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']() {
            if (!this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDEULER'])) {
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDEULER'], !![]), this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x2bb2cf = 0x0, _0x171dd4 = this['_children']['length']; _0x2bb2cf < _0x171dd4; _0x2bb2cf++)
                    this['_children'][_0x2bb2cf]['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']();
            }
        }
        ['_onWorldPo' + 'sitionScal' + 'eTransform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'], !![]), this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x2228d6 = 0x0, _0x4ea720 = this['_children']['length']; _0x2228d6 < _0x4ea720; _0x2228d6++)
                    this['_children'][_0x2228d6]['_onWorldPo' + 'sitionScal' + 'eTransform']();
            }
        }
        ['_onWorldPo' + 'sitionTran' + 'sform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !![]), this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x381b1d = 0x0, _0x47cbd1 = this['_children']['length']; _0x381b1d < _0x47cbd1; _0x381b1d++)
                    this['_children'][_0x381b1d]['_onWorldPo' + 'sitionTran' + 'sform']();
            }
        }
        ['_onWorldRo' + 'tationTran' + 'sform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDEULER'])) {
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDEULER'], !![]), this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x119eb5 = 0x0, _0x23c935 = this['_children']['length']; _0x119eb5 < _0x23c935; _0x119eb5++)
                    this['_children'][_0x119eb5]['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']();
            }
        }
        ['_onWorldSc' + 'aleTransfo' + 'rm']() {
            if (!this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'], !![]), this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x5ab3a6 = 0x0, _0x17c5f7 = this['_children']['length']; _0x5ab3a6 < _0x17c5f7; _0x5ab3a6++)
                    this['_children'][_0x5ab3a6]['_onWorldPo' + 'sitionScal' + 'eTransform']();
            }
        }
        ['_onWorldTr' + 'ansform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDEULER']) || !this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDEULER'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'], !![]), this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x3f0e2c = 0x0, _0x332f6e = this['_children']['length']; _0x3f0e2c < _0x332f6e; _0x3f0e2c++)
                    this['_children'][_0x3f0e2c]['_onWorldTr' + 'ansform']();
            }
        }
        ['translate'](_0x40db36, _0x15fd7a = !![]) {
            _0x15fd7a ? (_0x4c2288['createFrom' + 'Quaternion'](this['localRotat' + 'ion'], _0x203c65['_tempMatri' + 'x0']), _0x352206['transformC' + 'oordinate'](_0x40db36, _0x203c65['_tempMatri' + 'x0'], _0x203c65['_tempVecto' + 'r30']), _0x352206['add'](this['localPosit' + 'ion'], _0x203c65['_tempVecto' + 'r30'], this['_localPosi' + 'tion']), this['localPosit' + 'ion'] = this['_localPosi' + 'tion']) : (_0x352206['add'](this['position'], _0x40db36, this['_position']), this['position'] = this['_position']);
        }
        ['rotate'](_0x2e31b8, _0x5489fd = !![], _0x4e13f9 = !![]) {
            var _0x20be0b;
            _0x4e13f9 ? _0x20be0b = _0x2e31b8 : (_0x352206['scale'](_0x2e31b8, Math['PI'] / 0xb4, _0x203c65['_tempVecto' + 'r30']), _0x20be0b = _0x203c65['_tempVecto' + 'r30']), _0x388291['createFrom' + 'YawPitchRo' + 'll'](_0x20be0b['y'], _0x20be0b['x'], _0x20be0b['z'], _0x203c65['_tempQuate' + 'rnion0']), _0x5489fd ? (_0x388291['multiply'](this['_localRota' + 'tion'], _0x203c65['_tempQuate' + 'rnion0'], this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion']) : (_0x388291['multiply'](_0x203c65['_tempQuate' + 'rnion0'], this['rotation'], this['_rotation']), this['rotation'] = this['_rotation']);
        }
        ['getForward'](_0x183b94) {
            var _0x4c8255 = this['worldMatri' + 'x']['elements'];
            _0x183b94['x'] = -_0x4c8255[0x8], _0x183b94['y'] = -_0x4c8255[0x9], _0x183b94['z'] = -_0x4c8255[0xa];
        }
        ['getUp'](_0x8d77a) {
            var _0x3415a1 = this['worldMatri' + 'x']['elements'];
            _0x8d77a['x'] = _0x3415a1[0x4], _0x8d77a['y'] = _0x3415a1[0x5], _0x8d77a['z'] = _0x3415a1[0x6];
        }
        ['getRight'](_0x2241da) {
            var _0x30f2a9 = this['worldMatri' + 'x']['elements'];
            _0x2241da['x'] = _0x30f2a9[0x0], _0x2241da['y'] = _0x30f2a9[0x1], _0x2241da['z'] = _0x30f2a9[0x2];
        }
        ['lookAt'](_0x54ad2a, _0x1b52c1, _0x1f58d1 = ![]) {
            var _0xefd300;
            if (_0x1f58d1) {
                _0xefd300 = this['_localPosi' + 'tion'];
                if (Math['abs'](_0xefd300['x'] - _0x54ad2a['x']) < _0xc6f01['zeroTolera' + 'nce'] && Math['abs'](_0xefd300['y'] - _0x54ad2a['y']) < _0xc6f01['zeroTolera' + 'nce'] && Math['abs'](_0xefd300['z'] - _0x54ad2a['z']) < _0xc6f01['zeroTolera' + 'nce'])
                    return;
                _0x388291['lookAt'](this['_localPosi' + 'tion'], _0x54ad2a, _0x1b52c1, this['_localRota' + 'tion']), this['_localRota' + 'tion']['invert'](this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
            } else {
                var _0x45b161 = this['position'];
                _0xefd300 = _0x45b161;
                if (Math['abs'](_0xefd300['x'] - _0x54ad2a['x']) < _0xc6f01['zeroTolera' + 'nce'] && Math['abs'](_0xefd300['y'] - _0x54ad2a['y']) < _0xc6f01['zeroTolera' + 'nce'] && Math['abs'](_0xefd300['z'] - _0x54ad2a['z']) < _0xc6f01['zeroTolera' + 'nce'])
                    return;
                _0x388291['lookAt'](_0x45b161, _0x54ad2a, _0x1b52c1, this['_rotation']), this['_rotation']['invert'](this['_rotation']), this['rotation'] = this['_rotation'];
            }
        }
        ['getWorldLo' + 'ssyScale']() {
            if (this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'])) {
                if (this['_parent'] !== null) {
                    var _0xac5d68 = this['_getScaleM' + 'atrix']()['elements'];
                    this['_scale']['x'] = _0xac5d68[0x0], this['_scale']['y'] = _0xac5d68[0x4], this['_scale']['z'] = _0xac5d68[0x8];
                } else
                    this['_localScal' + 'e']['cloneTo'](this['_scale']);
                this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'], ![]);
            }
            return this['_scale'];
        }
        ['setWorldLo' + 'ssyScale'](_0x327840) {
            if (this['_parent'] !== null) {
                var _0x2711a4 = _0x203c65['_tempMatri' + 'x3x33'], _0x16c350 = _0x203c65['_tempMatri' + 'x3x33'], _0x5e454b = _0x16c350['elements'], _0x5e529d = this['_parent']['_getScaleM' + 'atrix']();
                _0x5e529d['invert'](_0x5e529d), _0x11be5a['createFrom' + 'Scaling'](_0x327840, _0x2711a4), _0x11be5a['multiply'](_0x5e529d, _0x2711a4, _0x16c350), this['_localScal' + 'e']['x'] = _0x5e454b[0x0], this['_localScal' + 'e']['y'] = _0x5e454b[0x4], this['_localScal' + 'e']['z'] = _0x5e454b[0x8];
            } else
                _0x327840['cloneTo'](this['_localScal' + 'e']);
            this['localScale'] = this['_localScal' + 'e'];
            if (this['_scale'] !== _0x327840)
                _0x327840['cloneTo'](this['_scale']);
            this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'], ![]);
        }
        get ['scale']() {
            return console['warn']('Transfrm3D' + ':\x20discard\x20' + 'function,p' + 'lease\x20use\x20' + 'getWorldLo' + 'ssyScale\x20i' + 'nstead.'), this['getWorldLo' + 'ssyScale']();
        }
        set ['scale'](_0x57984e) {
            console['warn']('Transfrm3D' + ':\x20discard\x20' + 'function,p' + 'lease\x20use\x20' + 'setWorldLo' + 'ssyScale\x20i' + 'nstead.'), this['setWorldLo' + 'ssyScale'](_0x57984e);
        }
    }
    _0x203c65['_tempVecto' + 'r30'] = new _0x352206(), _0x203c65['_tempQuate' + 'rnion0'] = new _0x388291(), _0x203c65['_tempMatri' + 'x0'] = new _0x4c2288(), _0x203c65['_tempMatri' + 'x3x30'] = new _0x11be5a(), _0x203c65['_tempMatri' + 'x3x31'] = new _0x11be5a(), _0x203c65['_tempMatri' + 'x3x32'] = new _0x11be5a(), _0x203c65['_tempMatri' + 'x3x33'] = new _0x11be5a(), _0x203c65['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] = 0x1, _0x203c65['TRANSFORM_' + 'LOCALEULER'] = 0x2, _0x203c65['TRANSFORM_' + 'LOCALMATRI' + 'X'] = 0x4, _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] = 0x8, _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] = 0x10, _0x203c65['TRANSFORM_' + 'WORLDSCALE'] = 0x20, _0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'] = 0x40, _0x203c65['TRANSFORM_' + 'WORLDEULER'] = 0x80, _0x203c65['_angleToRa' + 'ndin'] = 0xb4 / Math['PI'];
    class _0x3b8f98 {
        constructor() {
        }
        static ['setCollide' + 'rCollision'](_0x3f5e86, _0x3b3f53, _0x287790) {
        }
        static ['getICollid' + 'erCollisio' + 'n'](_0x3a6380, _0x40aa3f) {
            return ![];
        }
    }
    _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'] = 0x1, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_STATICFIL' + 'TER'] = 0x2, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_KINEMATIC' + 'FILTER'] = 0x4, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_DEBRISFIL' + 'TER'] = 0x8, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_SENSORTRI' + 'GGER'] = 0x10, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CHARACTER' + 'FILTER'] = 0x20, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER1'] = 0x40, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER2'] = 0x80, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER3'] = 0x100, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER4'] = 0x200, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER5'] = 0x400, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER6'] = 0x800, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER7'] = 0x1000, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER8'] = 0x2000, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER9'] = 0x4000, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER10'] = 0x8000, _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'] = -0x1, _0x3b8f98['gravity'] = new _0x352206(0x0, -9.81, 0x0);
    class _0x5a842b extends _0x11d2cc {
        constructor(_0x16c9c8 = 0x1, _0x25fb17 = 0x1, _0x4f2679 = 0x1) {
            super(), this['_sizeX'] = _0x16c9c8, this['_sizeY'] = _0x25fb17, this['_sizeZ'] = _0x4f2679, this['_type'] = _0x11d2cc['SHAPETYPES' + '_BOX'];
            var _0x5d1ad8 = _0x207eb6['Physics3D']['_bullet'];
            _0x5d1ad8['btVector3_' + 'setValue'](_0x5a842b['_btSize'], _0x16c9c8 / 0x2, _0x25fb17 / 0x2, _0x4f2679 / 0x2), this['_btShape'] = _0x5d1ad8['btBoxShape' + '_create'](_0x5a842b['_btSize']);
        }
        static ['__init__']() {
            _0x5a842b['_btSize'] = _0x207eb6['Physics3D']['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['sizeX']() {
            return this['_sizeX'];
        }
        get ['sizeY']() {
            return this['_sizeY'];
        }
        get ['sizeZ']() {
            return this['_sizeZ'];
        }
        ['clone']() {
            var _0x2ea79d = new _0x5a842b(this['_sizeX'], this['_sizeY'], this['_sizeZ']);
            return this['cloneTo'](_0x2ea79d), _0x2ea79d;
        }
    }
    class _0x566a16 extends _0x11d2cc {
        constructor(_0x329185 = 0.5, _0x428bf7 = 1.25, _0x64d4e = _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = _0x329185, this['_length'] = _0x428bf7, this['_orientati' + 'on'] = _0x64d4e, this['_type'] = _0x11d2cc['SHAPETYPES' + '_CAPSULE'];
            var _0x1085b2 = _0x207eb6['Physics3D']['_bullet'];
            switch (_0x64d4e) {
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPX']:
                this['_btShape'] = _0x1085b2['btCapsuleS' + 'hapeX_crea' + 'te'](_0x329185, _0x428bf7 - _0x329185 * 0x2);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']:
                this['_btShape'] = _0x1085b2['btCapsuleS' + 'hape_creat' + 'e'](_0x329185, _0x428bf7 - _0x329185 * 0x2);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPZ']:
                this['_btShape'] = _0x1085b2['btCapsuleS' + 'hapeZ_crea' + 'te'](_0x329185, _0x428bf7 - _0x329185 * 0x2);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['length']() {
            return this['_length'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['_setScale'](_0x5a6215) {
            var _0xb69021 = _0x566a16['_tempVecto' + 'r30'];
            switch (this['orientatio' + 'n']) {
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPX']:
                _0xb69021['x'] = _0x5a6215['x'], _0xb69021['y'] = _0xb69021['z'] = Math['max'](_0x5a6215['y'], _0x5a6215['z']);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']:
                _0xb69021['y'] = _0x5a6215['y'], _0xb69021['x'] = _0xb69021['z'] = Math['max'](_0x5a6215['x'], _0x5a6215['z']);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPZ']:
                _0xb69021['z'] = _0x5a6215['z'], _0xb69021['x'] = _0xb69021['y'] = Math['max'](_0x5a6215['x'], _0x5a6215['y']);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
            super['_setScale'](_0xb69021);
        }
        ['clone']() {
            var _0x4febaa = new _0x566a16(this['_radius'], this['_length'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x4febaa), _0x4febaa;
        }
    }
    _0x566a16['_tempVecto' + 'r30'] = new _0x352206();
    class _0x5f19d4 extends _0x11d2cc {
        constructor(_0x2706b4 = 0.5, _0x1382cd = 0x1, _0x5e46c9 = _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = 0x1, this['_height'] = 0.5, this['_radius'] = _0x2706b4, this['_height'] = _0x1382cd, this['_orientati' + 'on'] = _0x5e46c9, this['_type'] = _0x11d2cc['SHAPETYPES' + '_CYLINDER'];
            var _0x163945 = _0x207eb6['Physics3D']['_bullet'];
            switch (_0x5e46c9) {
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPX']:
                this['_btShape'] = _0x163945['btConeShap' + 'eX_create'](_0x2706b4, _0x1382cd);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']:
                this['_btShape'] = _0x163945['btConeShap' + 'e_create'](_0x2706b4, _0x1382cd);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPZ']:
                this['_btShape'] = _0x163945['btConeShap' + 'eZ_create'](_0x2706b4, _0x1382cd);
                break;
            default:
                throw 'ConeCollid' + 'erShape:un' + 'known\x20orie' + 'ntation.';
            }
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['height']() {
            return this['_height'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['clone']() {
            var _0x395cd0 = new _0x5f19d4(this['_radius'], this['_height'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x395cd0), _0x395cd0;
        }
    }
    class _0x5bd42f extends _0x11d2cc {
        constructor(_0x33e45e = 0.5, _0xb426b9 = 0x1, _0x58408c = _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = 0x1, this['_height'] = 0.5, this['_radius'] = _0x33e45e, this['_height'] = _0xb426b9, this['_orientati' + 'on'] = _0x58408c, this['_type'] = _0x11d2cc['SHAPETYPES' + '_CYLINDER'];
            var _0x4011c8 = _0x207eb6['Physics3D']['_bullet'];
            switch (_0x58408c) {
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPX']:
                _0x4011c8['btVector3_' + 'setValue'](_0x5bd42f['_btSize'], _0xb426b9 / 0x2, _0x33e45e, _0x33e45e), this['_btShape'] = _0x4011c8['btCylinder' + 'ShapeX_cre' + 'ate'](_0x5bd42f['_btSize']);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPY']:
                _0x4011c8['btVector3_' + 'setValue'](_0x5bd42f['_btSize'], _0x33e45e, _0xb426b9 / 0x2, _0x33e45e), this['_btShape'] = _0x4011c8['btCylinder' + 'Shape_crea' + 'te'](_0x5bd42f['_btSize']);
                break;
            case _0x11d2cc['SHAPEORIEN' + 'TATION_UPZ']:
                _0x4011c8['btVector3_' + 'setValue'](_0x5bd42f['_btSize'], _0x33e45e, _0x33e45e, _0xb426b9 / 0x2), this['_btShape'] = _0x4011c8['btCylinder' + 'ShapeZ_cre' + 'ate'](_0x5bd42f['_btSize']);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
        }
        static ['__init__']() {
            _0x5bd42f['_btSize'] = _0x207eb6['Physics3D']['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['height']() {
            return this['_height'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['clone']() {
            var _0x8aa4e4 = new _0x5bd42f(this['_radius'], this['_height'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x8aa4e4), _0x8aa4e4;
        }
    }
    class _0x460569 extends _0x11d2cc {
        constructor() {
            super(), this['_mesh'] = null, this['_convex'] = ![];
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0xbb7986) {
            if (this['_mesh'] !== _0xbb7986) {
                var _0x49cb91 = _0x207eb6['Physics3D']['_bullet'];
                this['_mesh'] && _0x49cb91['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), _0xbb7986 && (this['_btShape'] = _0x49cb91['btGImpactM' + 'eshShape_c' + 'reate'](_0xbb7986['_getPhysic' + 'Mesh']()), _0x49cb91['btGImpactS' + 'hapeInterf' + 'ace_update' + 'Bound'](this['_btShape'])), this['_mesh'] = _0xbb7986;
            }
        }
        get ['convex']() {
            return this['_convex'];
        }
        set ['convex'](_0x1482a7) {
            this['_convex'] = _0x1482a7;
        }
        ['_setScale'](_0x2b81aa) {
            if (this['_compoundP' + 'arent'])
                this['updateLoca' + 'lTransform' + 'ations']();
            else {
                var _0x556e75 = _0x207eb6['Physics3D']['_bullet'];
                _0x556e75['btVector3_' + 'setValue'](_0x11d2cc['_btScale'], _0x2b81aa['x'], _0x2b81aa['y'], _0x2b81aa['z']), _0x556e75['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x11d2cc['_btScale']), _0x556e75['btGImpactS' + 'hapeInterf' + 'ace_update' + 'Bound'](this['_btShape']);
            }
        }
        ['cloneTo'](_0x391160) {
            var _0x15467d = _0x391160;
            _0x15467d['convex'] = this['_convex'], _0x15467d['mesh'] = this['_mesh'], super['cloneTo'](_0x391160);
        }
        ['clone']() {
            var _0x21cb9e = new _0x460569();
            return this['cloneTo'](_0x21cb9e), _0x21cb9e;
        }
        ['destroy']() {
            this['_btShape'] && (_0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), this['_btShape'] = null);
        }
    }
    class _0x50ccce extends _0x11d2cc {
        constructor(_0x46cb7b = 0.5) {
            super(), this['_radius'] = _0x46cb7b, this['_type'] = _0x11d2cc['SHAPETYPES' + '_SPHERE'], this['_btShape'] = _0x207eb6['Physics3D']['_bullet']['btSphereSh' + 'ape_create'](_0x46cb7b);
        }
        get ['radius']() {
            return this['_radius'];
        }
        ['clone']() {
            var _0x3d79ca = new _0x50ccce(this['_radius']);
            return this['cloneTo'](_0x3d79ca), _0x3d79ca;
        }
    }
    class _0x3e3f17 extends _0x442335['Component'] {
        constructor(_0x321281, _0x5575b4) {
            super(), this['_restituti' + 'on'] = 0x0, this['_friction'] = 0.5, this['_rollingFr' + 'iction'] = 0x0, this['_ccdMotion' + 'Threshold'] = 0x0, this['_ccdSweptS' + 'phereRadiu' + 's'] = 0x0, this['_collision' + 'Group'] = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], this['_canCollid' + 'eWith'] = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], this['_colliderS' + 'hape'] = null, this['_transform' + 'Flag'] = 0x7fffffff, this['_controlBy' + 'Simulation'] = ![], this['_enablePro' + 'cessCollis' + 'ions'] = !![], this['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1, this['canScaleSh' + 'ape'] = !![], this['_collision' + 'Group'] = _0x321281, this['_canCollid' + 'eWith'] = _0x5575b4, _0x3e3f17['_physicObj' + 'ectsMap'][this['id']] = this;
        }
        static ['__init__']() {
            var _0x15b3f3 = _0x207eb6['Physics3D']['_bullet'];
            _0x3e3f17['_btVector3' + '0'] = _0x15b3f3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x3e3f17['_btQuatern' + 'ion0'] = _0x15b3f3['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1);
        }
        static ['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](_0x534427, _0x14437a, _0x3a5c9e, _0x48fe19, _0x58610b, _0x484eec, _0x36d54e, _0x4e9e83, _0x3f2d39) {
            var _0x27a8ea = _0x48fe19 + _0x48fe19, _0x4ecd50 = _0x58610b + _0x58610b, _0x3fbf41 = _0x484eec + _0x484eec, _0x5da64d = _0x48fe19 * _0x27a8ea, _0x308e33 = _0x48fe19 * _0x4ecd50, _0x40b4eb = _0x48fe19 * _0x3fbf41, _0xd0fc12 = _0x58610b * _0x4ecd50, _0x438310 = _0x58610b * _0x3fbf41, _0x42f0bc = _0x484eec * _0x3fbf41, _0x2c29ac = _0x36d54e * _0x27a8ea, _0x692f70 = _0x36d54e * _0x4ecd50, _0x33a889 = _0x36d54e * _0x3fbf41, _0x12c8df = _0x4e9e83[0x0], _0x3bf5d0 = _0x4e9e83[0x1], _0x26d581 = _0x4e9e83[0x2];
            _0x3f2d39[0x0] = (0x1 - (_0xd0fc12 + _0x42f0bc)) * _0x12c8df, _0x3f2d39[0x1] = (_0x308e33 + _0x33a889) * _0x12c8df, _0x3f2d39[0x2] = (_0x40b4eb - _0x692f70) * _0x12c8df, _0x3f2d39[0x3] = 0x0, _0x3f2d39[0x4] = (_0x308e33 - _0x33a889) * _0x3bf5d0, _0x3f2d39[0x5] = (0x1 - (_0x5da64d + _0x42f0bc)) * _0x3bf5d0, _0x3f2d39[0x6] = (_0x438310 + _0x2c29ac) * _0x3bf5d0, _0x3f2d39[0x7] = 0x0, _0x3f2d39[0x8] = (_0x40b4eb + _0x692f70) * _0x26d581, _0x3f2d39[0x9] = (_0x438310 - _0x2c29ac) * _0x26d581, _0x3f2d39[0xa] = (0x1 - (_0x5da64d + _0xd0fc12)) * _0x26d581, _0x3f2d39[0xb] = 0x0, _0x3f2d39[0xc] = _0x534427, _0x3f2d39[0xd] = _0x14437a, _0x3f2d39[0xe] = _0x3a5c9e, _0x3f2d39[0xf] = 0x1;
        }
        static ['_creatShap' + 'e'](_0x589f8e) {
            var _0x384cf3;
            switch (_0x589f8e['type']) {
            case 'BoxCollide' + 'rShape':
                var _0xe737df = _0x589f8e['size'];
                _0x384cf3 = _0xe737df ? new _0x5a842b(_0xe737df[0x0], _0xe737df[0x1], _0xe737df[0x2]) : new _0x5a842b();
                break;
            case 'SphereColl' + 'iderShape':
                _0x384cf3 = new _0x50ccce(_0x589f8e['radius']);
                break;
            case 'CapsuleCol' + 'liderShape':
                _0x384cf3 = new _0x566a16(_0x589f8e['radius'], _0x589f8e['height'], _0x589f8e['orientatio' + 'n']);
                break;
            case 'MeshCollid' + 'erShape':
                var _0x5ff30a = new _0x460569();
                _0x589f8e['mesh'] && (_0x5ff30a['mesh'] = _0x442335['Loader']['getRes'](_0x589f8e['mesh'])), _0x384cf3 = _0x5ff30a;
                break;
            case 'ConeCollid' + 'erShape':
                _0x384cf3 = new _0x5f19d4(_0x589f8e['radius'], _0x589f8e['height'], _0x589f8e['orientatio' + 'n']);
                break;
            case 'CylinderCo' + 'lliderShap' + 'e':
                _0x384cf3 = new _0x5bd42f(_0x589f8e['radius'], _0x589f8e['height'], _0x589f8e['orientatio' + 'n']);
                break;
            default:
                throw 'unknown\x20sh' + 'ape\x20type.';
            }
            if (_0x589f8e['center']) {
                var _0x992ee7 = _0x384cf3['localOffse' + 't'];
                _0x992ee7['fromArray'](_0x589f8e['center']), _0x384cf3['localOffse' + 't'] = _0x992ee7;
            }
            return _0x384cf3;
        }
        static ['physicVect' + 'or3Transfo' + 'rmQuat'](_0x9fa742, _0x4f2384, _0x504db5, _0x32dfd2, _0x2ae522, _0x546449) {
            var _0xa011c7 = _0x9fa742['x'], _0x376c00 = _0x9fa742['y'], _0x4d210b = _0x9fa742['z'], _0x87956 = _0x2ae522 * _0xa011c7 + _0x504db5 * _0x4d210b - _0x32dfd2 * _0x376c00, _0x45f40e = _0x2ae522 * _0x376c00 + _0x32dfd2 * _0xa011c7 - _0x4f2384 * _0x4d210b, _0x200b67 = _0x2ae522 * _0x4d210b + _0x4f2384 * _0x376c00 - _0x504db5 * _0xa011c7, _0x55ed7a = -_0x4f2384 * _0xa011c7 - _0x504db5 * _0x376c00 - _0x32dfd2 * _0x4d210b;
            _0x546449['x'] = _0x87956 * _0x2ae522 + _0x55ed7a * -_0x4f2384 + _0x45f40e * -_0x32dfd2 - _0x200b67 * -_0x504db5, _0x546449['y'] = _0x45f40e * _0x2ae522 + _0x55ed7a * -_0x504db5 + _0x200b67 * -_0x4f2384 - _0x87956 * -_0x32dfd2, _0x546449['z'] = _0x200b67 * _0x2ae522 + _0x55ed7a * -_0x32dfd2 + _0x87956 * -_0x504db5 - _0x45f40e * -_0x4f2384;
        }
        static ['physicQuat' + 'ernionMult' + 'iply'](_0x11f867, _0x4ae3dc, _0x2ef6fe, _0x4299c8, _0x1ade96, _0x112ac7) {
            var _0x57725e = _0x1ade96['x'], _0x226de1 = _0x1ade96['y'], _0x1a8700 = _0x1ade96['z'], _0x29e775 = _0x1ade96['w'], _0x16fa98 = _0x4ae3dc * _0x1a8700 - _0x2ef6fe * _0x226de1, _0x1bf7b4 = _0x2ef6fe * _0x57725e - _0x11f867 * _0x1a8700, _0x1e67ca = _0x11f867 * _0x226de1 - _0x4ae3dc * _0x57725e, _0x996827 = _0x11f867 * _0x57725e + _0x4ae3dc * _0x226de1 + _0x2ef6fe * _0x1a8700;
            _0x112ac7['x'] = _0x11f867 * _0x29e775 + _0x57725e * _0x4299c8 + _0x16fa98, _0x112ac7['y'] = _0x4ae3dc * _0x29e775 + _0x226de1 * _0x4299c8 + _0x1bf7b4, _0x112ac7['z'] = _0x2ef6fe * _0x29e775 + _0x1a8700 * _0x4299c8 + _0x1e67ca, _0x112ac7['w'] = _0x4299c8 * _0x29e775 - _0x996827;
        }
        get ['restitutio' + 'n']() {
            return this['_restituti' + 'on'];
        }
        set ['restitutio' + 'n'](_0x27d7c7) {
            this['_restituti' + 'on'] = _0x27d7c7, this['_btCollide' + 'rObject'] && _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tRestituti' + 'on'](this['_btCollide' + 'rObject'], _0x27d7c7);
        }
        get ['friction']() {
            return this['_friction'];
        }
        set ['friction'](_0x18f446) {
            this['_friction'] = _0x18f446, this['_btCollide' + 'rObject'] && _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tFriction'](this['_btCollide' + 'rObject'], _0x18f446);
        }
        get ['rollingFri' + 'ction']() {
            return this['_rollingFr' + 'iction'];
        }
        set ['rollingFri' + 'ction'](_0x1754a2) {
            this['_rollingFr' + 'iction'] = _0x1754a2, this['_btCollide' + 'rObject'] && _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tRollingFr' + 'iction'](this['_btCollide' + 'rObject'], _0x1754a2);
        }
        get ['ccdMotionT' + 'hreshold']() {
            return this['_ccdMotion' + 'Threshold'];
        }
        set ['ccdMotionT' + 'hreshold'](_0x1122f2) {
            this['_ccdMotion' + 'Threshold'] = _0x1122f2, this['_btCollide' + 'rObject'] && _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tCcdMotion' + 'Threshold'](this['_btCollide' + 'rObject'], _0x1122f2);
        }
        get ['ccdSweptSp' + 'hereRadius']() {
            return this['_ccdSweptS' + 'phereRadiu' + 's'];
        }
        set ['ccdSweptSp' + 'hereRadius'](_0x199d4b) {
            this['_ccdSweptS' + 'phereRadiu' + 's'] = _0x199d4b, this['_btCollide' + 'rObject'] && _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tCcdSweptS' + 'phereRadiu' + 's'](this['_btCollide' + 'rObject'], _0x199d4b);
        }
        get ['isActive']() {
            return this['_btCollide' + 'rObject'] ? _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_is' + 'Active'](this['_btCollide' + 'rObject']) : ![];
        }
        get ['colliderSh' + 'ape']() {
            return this['_colliderS' + 'hape'];
        }
        set ['colliderSh' + 'ape'](_0x385da3) {
            var _0x374d93 = this['_colliderS' + 'hape'];
            _0x374d93 && (_0x374d93['_attatched'] = ![], _0x374d93['_attatched' + 'CollisionO' + 'bject'] = null);
            this['_colliderS' + 'hape'] = _0x385da3;
            if (_0x385da3) {
                if (_0x385da3['_attatched'])
                    throw 'PhysicsCom' + 'ponent:\x20th' + 'is\x20shape\x20h' + 'as\x20attatch' + 'ed\x20to\x20othe' + 'r\x20entity.';
                else
                    _0x385da3['_attatched'] = !![], _0x385da3['_attatched' + 'CollisionO' + 'bject'] = this;
                if (this['_btCollide' + 'rObject']) {
                    _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tCollision' + 'Shape'](this['_btCollide' + 'rObject'], _0x385da3['_btShape']);
                    var _0x5e31c6 = this['_simulatio' + 'n'] && this['_enabled'];
                    _0x5e31c6 && _0x374d93 && this['_removeFro' + 'mSimulatio' + 'n'](), this['_onShapeCh' + 'ange'](_0x385da3), _0x5e31c6 && (this['_derivePhy' + 'sicsTransf' + 'ormation'](!![]), this['_addToSimu' + 'lation']());
                }
            } else {
                if (this['_simulatio' + 'n'] && this['_enabled'])
                    _0x374d93 && this['_removeFro' + 'mSimulatio' + 'n']();
            }
        }
        get ['simulation']() {
            return this['_simulatio' + 'n'];
        }
        get ['collisionG' + 'roup']() {
            return this['_collision' + 'Group'];
        }
        set ['collisionG' + 'roup'](_0x1b7265) {
            this['_collision' + 'Group'] !== _0x1b7265 && (this['_collision' + 'Group'] = _0x1b7265, this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_addToSimu' + 'lation']()));
        }
        get ['canCollide' + 'With']() {
            return this['_canCollid' + 'eWith'];
        }
        set ['canCollide' + 'With'](_0x4f87ed) {
            this['_canCollid' + 'eWith'] !== _0x4f87ed && (this['_canCollid' + 'eWith'] = _0x4f87ed, this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_addToSimu' + 'lation']()));
        }
        ['_parseShap' + 'e'](_0x46fe7d) {
            var _0x4a17ee = _0x46fe7d['length'];
            if (_0x4a17ee === 0x1) {
                var _0x15dd60 = _0x3e3f17['_creatShap' + 'e'](_0x46fe7d[0x0]);
                this['colliderSh' + 'ape'] = _0x15dd60;
            } else {
                var _0x4b4a41 = new _0x3aa64c();
                for (var _0x1e1cce = 0x0; _0x1e1cce < _0x4a17ee; _0x1e1cce++) {
                    _0x15dd60 = _0x3e3f17['_creatShap' + 'e'](_0x46fe7d[_0x1e1cce]), _0x4b4a41['addChildSh' + 'ape'](_0x15dd60);
                }
                this['colliderSh' + 'ape'] = _0x4b4a41;
            }
        }
        ['_onScaleCh' + 'ange'](_0xe412c9) {
            this['_colliderS' + 'hape']['_setScale'](_0xe412c9);
        }
        ['_onEnable']() {
            this['_simulatio' + 'n'] = this['owner']['_scene']['physicsSim' + 'ulation'], _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_se' + 'tContactPr' + 'ocessingTh' + 'reshold'](this['_btCollide' + 'rObject'], 0xc9f2c9cd04675000000000000), this['_colliderS' + 'hape'] && (this['_derivePhy' + 'sicsTransf' + 'ormation'](!![]), this['_addToSimu' + 'lation']());
        }
        ['_onDisable']() {
            this['_colliderS' + 'hape'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_inPhysicU' + 'pdateListI' + 'ndex'] !== -0x1 && this['_simulatio' + 'n']['_physicsUp' + 'dateList']['remove'](this)), this['_simulatio' + 'n'] = null;
        }
        ['_onDestroy']() {
            delete _0x3e3f17['_physicObj' + 'ectsMap'][this['id']], _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_de' + 'stroy'](this['_btCollide' + 'rObject']), this['_colliderS' + 'hape']['destroy'](), super['_onDestroy'](), this['_btCollide' + 'rObject'] = null, this['_colliderS' + 'hape'] = null, this['_simulatio' + 'n'] = null, this['owner']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        ['_isValid']() {
            return this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'];
        }
        ['_parse'](_0x278a68) {
            _0x278a68['collisionG' + 'roup'] != null && (this['collisionG' + 'roup'] = _0x278a68['collisionG' + 'roup']), _0x278a68['canCollide' + 'With'] != null && (this['canCollide' + 'With'] = _0x278a68['canCollide' + 'With']), _0x278a68['ccdMotionT' + 'hreshold'] != null && (this['ccdMotionT' + 'hreshold'] = _0x278a68['ccdMotionT' + 'hreshold']), _0x278a68['ccdSweptSp' + 'hereRadius'] != null && (this['ccdSweptSp' + 'hereRadius'] = _0x278a68['ccdSweptSp' + 'hereRadius']);
        }
        ['_setTransf' + 'ormFlag'](_0x3be7dd, _0x27431d) {
            if (_0x27431d)
                this['_transform' + 'Flag'] |= _0x3be7dd;
            else
                this['_transform' + 'Flag'] &= ~_0x3be7dd;
        }
        ['_getTransf' + 'ormFlag'](_0x12d592) {
            return (this['_transform' + 'Flag'] & _0x12d592) != 0x0;
        }
        ['_addToSimu' + 'lation']() {
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
        }
        ['_derivePhy' + 'sicsTransf' + 'ormation'](_0x3889a8) {
            var _0x3cd139 = _0x207eb6['Physics3D']['_bullet'], _0x168fa1 = this['_btCollide' + 'rObject'], _0x2a190a = _0x3cd139['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x168fa1);
            this['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x2a190a, _0x3889a8), _0x3cd139['btCollisio' + 'nObject_se' + 'tWorldTran' + 'sform'](_0x168fa1, _0x2a190a);
        }
        ['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x2d35d4, _0x414067) {
            var _0x15d69f = _0x207eb6['Physics3D']['_bullet'], _0x1a0e07 = this['owner']['_transform'];
            if (_0x414067 || this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                var _0x22ba69 = this['_colliderS' + 'hape']['localOffse' + 't'], _0x16dffd = _0x1a0e07['position'], _0x5811c4 = _0x3e3f17['_btVector3' + '0'];
                if (_0x22ba69['x'] !== 0x0 || _0x22ba69['y'] !== 0x0 || _0x22ba69['z'] !== 0x0) {
                    var _0x4baef8 = _0x3e3f17['_tempVecto' + 'r30'], _0x5562fd = _0x1a0e07['worldMatri' + 'x'];
                    _0x352206['transformC' + 'oordinate'](_0x22ba69, _0x5562fd, _0x4baef8), _0x15d69f['btVector3_' + 'setValue'](_0x5811c4, -_0x4baef8['x'], _0x4baef8['y'], _0x4baef8['z']);
                } else
                    _0x15d69f['btVector3_' + 'setValue'](_0x5811c4, -_0x16dffd['x'], _0x16dffd['y'], _0x16dffd['z']);
                _0x15d69f['btTransfor' + 'm_setOrigi' + 'n'](_0x2d35d4, _0x5811c4), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], ![]);
            }
            if (_0x414067 || this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'])) {
                var _0x13b8b0 = this['_colliderS' + 'hape']['localRotat' + 'ion'], _0x7c9cbe = _0x3e3f17['_btQuatern' + 'ion0'], _0x41b11b = _0x1a0e07['rotation'];
                if (_0x13b8b0['x'] !== 0x0 || _0x13b8b0['y'] !== 0x0 || _0x13b8b0['z'] !== 0x0 || _0x13b8b0['w'] !== 0x1) {
                    var _0x13bdc9 = _0x3e3f17['_tempQuate' + 'rnion0'];
                    _0x3e3f17['physicQuat' + 'ernionMult' + 'iply'](_0x41b11b['x'], _0x41b11b['y'], _0x41b11b['z'], _0x41b11b['w'], _0x13b8b0, _0x13bdc9), _0x15d69f['btQuaterni' + 'on_setValu' + 'e'](_0x7c9cbe, -_0x13bdc9['x'], _0x13bdc9['y'], _0x13bdc9['z'], -_0x13bdc9['w']);
                } else
                    _0x15d69f['btQuaterni' + 'on_setValu' + 'e'](_0x7c9cbe, -_0x41b11b['x'], _0x41b11b['y'], _0x41b11b['z'], -_0x41b11b['w']);
                _0x15d69f['btTransfor' + 'm_setRotat' + 'ion'](_0x2d35d4, _0x7c9cbe), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], ![]);
            }
            (_0x414067 || this['_getTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'])) && (this['_onScaleCh' + 'ange'](_0x1a0e07['getWorldLo' + 'ssyScale']()), this['_setTransf' + 'ormFlag'](_0x203c65['TRANSFORM_' + 'WORLDSCALE'], ![]));
        }
        ['_updateTra' + 'nsformComp' + 'onent'](_0x1d6d9b) {
            var _0x4cf415 = _0x207eb6['Physics3D']['_bullet'], _0x3bd9a9 = this['_colliderS' + 'hape'], _0x1c5344 = _0x3bd9a9['localOffse' + 't'], _0x472efe = _0x3bd9a9['localRotat' + 'ion'], _0x543992 = this['owner']['_transform'], _0x16f5d1 = _0x543992['position'], _0x45b8ab = _0x543992['rotation'], _0x128b53 = _0x4cf415['btTransfor' + 'm_getOrigi' + 'n'](_0x1d6d9b), _0x463bba = _0x4cf415['btTransfor' + 'm_getRotat' + 'ion'](_0x1d6d9b), _0x5cd6aa = -_0x4cf415['btQuaterni' + 'on_x'](_0x463bba), _0x547c9c = _0x4cf415['btQuaterni' + 'on_y'](_0x463bba), _0x216d04 = _0x4cf415['btQuaterni' + 'on_z'](_0x463bba), _0x17931c = -_0x4cf415['btQuaterni' + 'on_w'](_0x463bba);
            if (_0x472efe['x'] !== 0x0 || _0x472efe['y'] !== 0x0 || _0x472efe['z'] !== 0x0 || _0x472efe['w'] !== 0x1) {
                var _0x3c8673 = _0x3e3f17['_tempQuate' + 'rnion0'];
                _0x472efe['invert'](_0x3c8673), _0x3e3f17['physicQuat' + 'ernionMult' + 'iply'](_0x5cd6aa, _0x547c9c, _0x216d04, _0x17931c, _0x3c8673, _0x45b8ab);
            } else
                _0x45b8ab['x'] = _0x5cd6aa, _0x45b8ab['y'] = _0x547c9c, _0x45b8ab['z'] = _0x216d04, _0x45b8ab['w'] = _0x17931c;
            _0x543992['rotation'] = _0x45b8ab;
            if (_0x1c5344['x'] !== 0x0 || _0x1c5344['y'] !== 0x0 || _0x1c5344['z'] !== 0x0) {
                var _0x535a72 = _0x4cf415['btCollisio' + 'nShape_get' + 'LocalScali' + 'ng'](_0x3bd9a9['_btShape']), _0x3ef599 = _0x3e3f17['_tempVecto' + 'r30'];
                _0x3ef599['x'] = _0x1c5344['x'] * _0x4cf415['btVector3_' + 'x'](_0x535a72), _0x3ef599['y'] = _0x1c5344['y'] * _0x4cf415['btVector3_' + 'y'](_0x535a72), _0x3ef599['z'] = _0x1c5344['z'] * _0x4cf415['btVector3_' + 'z'](_0x535a72), _0x352206['transformQ' + 'uat'](_0x3ef599, _0x45b8ab, _0x3ef599), _0x16f5d1['x'] = -_0x4cf415['btVector3_' + 'x'](_0x128b53) - _0x3ef599['x'], _0x16f5d1['y'] = _0x4cf415['btVector3_' + 'y'](_0x128b53) - _0x3ef599['y'], _0x16f5d1['z'] = _0x4cf415['btVector3_' + 'z'](_0x128b53) - _0x3ef599['z'];
            } else
                _0x16f5d1['x'] = -_0x4cf415['btVector3_' + 'x'](_0x128b53), _0x16f5d1['y'] = _0x4cf415['btVector3_' + 'y'](_0x128b53), _0x16f5d1['z'] = _0x4cf415['btVector3_' + 'z'](_0x128b53);
            _0x543992['position'] = _0x16f5d1;
        }
        ['_onShapeCh' + 'ange'](_0x597d83) {
            var _0x100270 = this['_btCollide' + 'rObject'], _0x1d1162 = _0x207eb6['Physics3D']['_bullet'], _0x569562 = _0x1d1162['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x100270);
            if (_0x597d83['needsCusto' + 'mCollision' + 'Callback']) {
                if ((_0x569562 & _0x3e3f17['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) === 0x0)
                    _0x1d1162['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x100270, _0x569562 | _0x3e3f17['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']);
            } else {
                if ((_0x569562 & _0x3e3f17['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) > 0x0)
                    _0x1d1162['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x100270, _0x569562 ^ _0x3e3f17['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']);
            }
        }
        ['_onAdded']() {
            this['enabled'] = this['_enabled'], this['restitutio' + 'n'] = this['_restituti' + 'on'], this['friction'] = this['_friction'], this['rollingFri' + 'ction'] = this['_rollingFr' + 'iction'], this['ccdMotionT' + 'hreshold'] = this['_ccdMotion' + 'Threshold'], this['ccdSweptSp' + 'hereRadius'] = this['_ccdSweptS' + 'phereRadiu' + 's'], this['owner']['transform']['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        ['_onTransfo' + 'rmChanged'](_0x348e3b) {
            if (_0x3e3f17['_addUpdate' + 'List'] || !this['_controlBy' + 'Simulation']) {
                _0x348e3b &= _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'];
                if (_0x348e3b) {
                    this['_transform' + 'Flag'] |= _0x348e3b;
                    if (this['_isValid']() && this['_inPhysicU' + 'pdateListI' + 'ndex'] === -0x1)
                        this['_simulatio' + 'n']['_physicsUp' + 'dateList']['add'](this);
                }
            }
        }
        ['_cloneTo'](_0x520930) {
            var _0x499e23 = _0x520930;
            _0x499e23['restitutio' + 'n'] = this['_restituti' + 'on'], _0x499e23['friction'] = this['_friction'], _0x499e23['rollingFri' + 'ction'] = this['_rollingFr' + 'iction'], _0x499e23['ccdMotionT' + 'hreshold'] = this['_ccdMotion' + 'Threshold'], _0x499e23['ccdSweptSp' + 'hereRadius'] = this['_ccdSweptS' + 'phereRadiu' + 's'], _0x499e23['collisionG' + 'roup'] = this['_collision' + 'Group'], _0x499e23['canCollide' + 'With'] = this['_canCollid' + 'eWith'], _0x499e23['canScaleSh' + 'ape'] = this['canScaleSh' + 'ape'], this['_colliderS' + 'hape'] && (_0x499e23['colliderSh' + 'ape'] = this['_colliderS' + 'hape']['clone']());
        }
    }
    _0x3e3f17['ACTIVATION' + 'STATE_ACTI' + 'VE_TAG'] = 0x1, _0x3e3f17['ACTIVATION' + 'STATE_ISLA' + 'ND_SLEEPIN' + 'G'] = 0x2, _0x3e3f17['ACTIVATION' + 'STATE_WANT' + 'S_DEACTIVA' + 'TION'] = 0x3, _0x3e3f17['ACTIVATION' + 'STATE_DISA' + 'BLE_DEACTI' + 'VATION'] = 0x4, _0x3e3f17['ACTIVATION' + 'STATE_DISA' + 'BLE_SIMULA' + 'TION'] = 0x5, _0x3e3f17['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT'] = 0x1, _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'] = 0x2, _0x3e3f17['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE'] = 0x4, _0x3e3f17['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK'] = 0x8, _0x3e3f17['COLLISIONF' + 'LAGS_CHARA' + 'CTER_OBJEC' + 'T'] = 0x10, _0x3e3f17['COLLISIONF' + 'LAGS_DISAB' + 'LE_VISUALI' + 'ZE_OBJECT'] = 0x20, _0x3e3f17['COLLISIONF' + 'LAGS_DISAB' + 'LE_SPU_COL' + 'LISION_PRO' + 'CESSING'] = 0x40, _0x3e3f17['_tempVecto' + 'r30'] = new _0x352206(), _0x3e3f17['_tempQuate' + 'rnion0'] = new _0x388291(), _0x3e3f17['_tempQuate' + 'rnion1'] = new _0x388291(), _0x3e3f17['_tempMatri' + 'x4x40'] = new _0x4c2288(), _0x3e3f17['_physicObj' + 'ectsMap'] = {}, _0x3e3f17['_addUpdate' + 'List'] = !![];
    class _0x4a730f {
        constructor() {
            this['elements'] = [], this['length'] = 0x0;
        }
        ['_add'](_0x3051b2) {
            if (this['length'] === this['elements']['length'])
                this['elements']['push'](_0x3051b2);
            else
                this['elements'][this['length']] = _0x3051b2;
        }
        ['add'](_0x5971a5) {
            if (this['length'] === this['elements']['length'])
                this['elements']['push'](_0x5971a5);
            else
                this['elements'][this['length']] = _0x5971a5;
            this['length']++;
        }
    }
    class _0x28920a extends _0x4a730f {
        constructor() {
            super();
        }
        ['add'](_0x4d00ed) {
            var _0x17082b = _0x4d00ed['_inPhysicU' + 'pdateListI' + 'ndex'];
            if (_0x17082b !== -0x1)
                throw 'PhysicsUpd' + 'ateList:el' + 'ement\x20has\x20' + '\x20in\x20\x20Physi' + 'csUpdateLi' + 'st.';
            this['_add'](_0x4d00ed), _0x4d00ed['_inPhysicU' + 'pdateListI' + 'ndex'] = this['length']++;
        }
        ['remove'](_0xfde72a) {
            var _0xf6cdd2 = _0xfde72a['_inPhysicU' + 'pdateListI' + 'ndex'];
            this['length']--;
            if (_0xf6cdd2 !== this['length']) {
                var _0x336bf8 = this['elements'][this['length']];
                this['elements'][_0xf6cdd2] = _0x336bf8, _0x336bf8['_inPhysicU' + 'pdateListI' + 'ndex'] = _0xf6cdd2;
            }
            _0xfde72a['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1;
        }
    }
    class _0x48c2fd {
        constructor() {
            this['_idCounter'] = 0x0, this['colliderA'] = null, this['colliderB'] = null, this['distance'] = 0x0, this['normal'] = new _0x352206(), this['positionOn' + 'A'] = new _0x352206(), this['positionOn' + 'B'] = new _0x352206(), this['_id'] = ++this['_idCounter'];
        }
    }
    class _0x20f43d {
        constructor() {
            this['succeeded'] = ![], this['collider'] = null, this['point'] = new _0x352206(), this['normal'] = new _0x352206(), this['hitFractio' + 'n'] = 0x0;
        }
    }
    class _0x327cc8 {
        constructor() {
            this['_lastUpdat' + 'eFrame'] = -0x80000000, this['_updateFra' + 'me'] = -0x80000000, this['_isTrigger'] = ![], this['contacts'] = [];
        }
        ['_setUpdate' + 'Frame'](_0x1ec9f4) {
            this['_lastUpdat' + 'eFrame'] = this['_updateFra' + 'me'], this['_updateFra' + 'me'] = _0x1ec9f4;
        }
    }
    class _0x175f77 {
        constructor() {
            this['_hitResult' + 'sPoolIndex'] = 0x0, this['_hitResult' + 'sPool'] = [], this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0, this['_contactPo' + 'intsPool'] = [], this['_collision' + 'sPool'] = [], this['_collision' + 's'] = {};
        }
        ['getHitResu' + 'lt']() {
            var _0xdd5cbe = this['_hitResult' + 'sPool'][this['_hitResult' + 'sPoolIndex']++];
            return !_0xdd5cbe && (_0xdd5cbe = new _0x20f43d(), this['_hitResult' + 'sPool']['push'](_0xdd5cbe)), _0xdd5cbe;
        }
        ['recoverAll' + 'HitResults' + 'Pool']() {
            this['_hitResult' + 'sPoolIndex'] = 0x0;
        }
        ['getContact' + 'Points']() {
            var _0x12ce74 = this['_contactPo' + 'intsPool'][this['_contactPo' + 'nintsPoolI' + 'ndex']++];
            return !_0x12ce74 && (_0x12ce74 = new _0x48c2fd(), this['_contactPo' + 'intsPool']['push'](_0x12ce74)), _0x12ce74;
        }
        ['recoverAll' + 'ContactPoi' + 'ntsPool']() {
            this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0;
        }
        ['getCollisi' + 'on'](_0x28a61b, _0x4ba3bd) {
            var _0x27502c, _0x33e4a0 = _0x28a61b['id'], _0x25bf3d = _0x4ba3bd['id'], _0x1b5375 = this['_collision' + 's'][_0x33e4a0];
            if (_0x1b5375)
                _0x27502c = _0x1b5375[_0x25bf3d];
            return !_0x27502c && (!_0x1b5375 && (_0x1b5375 = {}, this['_collision' + 's'][_0x33e4a0] = _0x1b5375), _0x27502c = this['_collision' + 'sPool']['length'] === 0x0 ? new _0x327cc8() : this['_collision' + 'sPool']['pop'](), _0x27502c['_colliderA'] = _0x28a61b, _0x27502c['_colliderB'] = _0x4ba3bd, _0x1b5375[_0x25bf3d] = _0x27502c), _0x27502c;
        }
        ['recoverCol' + 'lision'](_0x5c2a28) {
            var _0x3aaa9a = _0x5c2a28['_colliderA']['id'], _0x35ebc7 = _0x5c2a28['_colliderB']['id'];
            this['_collision' + 's'][_0x3aaa9a][_0x35ebc7] = null, this['_collision' + 'sPool']['push'](_0x5c2a28);
        }
        ['garbageCol' + 'lection']() {
            this['_hitResult' + 'sPoolIndex'] = 0x0, this['_hitResult' + 'sPool']['length'] = 0x0, this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0, this['_contactPo' + 'intsPool']['length'] = 0x0, this['_collision' + 'sPool']['length'] = 0x0;
            for (var _0xbeb9f5 in this['_collision' + 'sPool']) {
                var _0x16b9c2 = this['_collision' + 'sPool'][_0xbeb9f5], _0x48f8c2 = !![];
                for (var _0x5df6d5 in _0x16b9c2) {
                    if (_0x16b9c2[_0x5df6d5])
                        _0x48f8c2 = ![];
                    else
                        delete _0x16b9c2[_0x5df6d5];
                }
                if (_0x48f8c2)
                    delete this['_collision' + 'sPool'][_0xbeb9f5];
            }
        }
    }
    class _0x101776 {
        constructor(_0x561456, _0x50e0d4 = 0x0) {
            this['_gravity'] = new _0x352206(0x0, -0xa, 0x0), this['_btVector3' + 'Zero'] = _0x207eb6['Physics3D']['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0), this['_btDefault' + 'Quaternion'] = _0x207eb6['Physics3D']['_bullet']['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, -0x1), this['_collision' + 'sUtils'] = new _0x175f77(), this['_previousF' + 'rameCollis' + 'ions'] = [], this['_currentFr' + 'ameCollisi' + 'ons'] = [], this['_currentCo' + 'nstraint'] = {}, this['_physicsUp' + 'dateList'] = new _0x28920a(), this['_character' + 's'] = [], this['_updatedRi' + 'gidbodies'] = 0x0, this['maxSubStep' + 's'] = 0x1, this['fixedTimeS' + 'tep'] = 0x1 / 0x3c, this['maxSubStep' + 's'] = _0x561456['maxSubStep' + 's'], this['fixedTimeS' + 'tep'] = _0x561456['fixedTimeS' + 'tep'];
            var _0x4e0b09 = _0x207eb6['Physics3D']['_bullet'];
            this['_btCollisi' + 'onConfigur' + 'ation'] = _0x4e0b09['btDefaultC' + 'ollisionCo' + 'nfiguratio' + 'n_create'](), this['_btDispatc' + 'her'] = _0x4e0b09['btCollisio' + 'nDispatche' + 'r_create'](this['_btCollisi' + 'onConfigur' + 'ation']), this['_btBroadph' + 'ase'] = _0x4e0b09['btDbvtBroa' + 'dphase_cre' + 'ate'](), _0x4e0b09['btOverlapp' + 'ingPairCac' + 'he_setInte' + 'rnalGhostP' + 'airCallbac' + 'k'](_0x4e0b09['btDbvtBroa' + 'dphase_get' + 'Overlappin' + 'gPairCache'](this['_btBroadph' + 'ase']), _0x4e0b09['btGhostPai' + 'rCallback_' + 'create']());
            var _0x3a6a09 = _0x561456['flags'];
            if (_0x3a6a09 & _0x101776['PHYSICSENG' + 'INEFLAGS_C' + 'OLLISIONSO' + 'NLY'])
                this['_btCollisi' + 'onWorld'] = new _0x4e0b09['btCollisio' + 'nWorld'](this['_btDispatc' + 'her'], this['_btBroadph' + 'ase'], this['_btCollisi' + 'onConfigur' + 'ation']);
            else {
                if (_0x3a6a09 & _0x101776['PHYSICSENG' + 'INEFLAGS_S' + 'OFTBODYSUP' + 'PORT'])
                    throw 'PhysicsSim' + 'ulation:So' + 'ftBody\x20pro' + 'cessing\x20is' + '\x20not\x20yet\x20a' + 'vailable';
                else {
                    var _0x48edc4 = _0x4e0b09['btSequenti' + 'alImpulseC' + 'onstraintS' + 'olver_crea' + 'te']();
                    this['_btDiscret' + 'eDynamicsW' + 'orld'] = _0x4e0b09['btDiscrete' + 'DynamicsWo' + 'rld_create'](this['_btDispatc' + 'her'], this['_btBroadph' + 'ase'], _0x48edc4, this['_btCollisi' + 'onConfigur' + 'ation']), this['_btCollisi' + 'onWorld'] = this['_btDiscret' + 'eDynamicsW' + 'orld'];
                }
            }
            this['_btDiscret' + 'eDynamicsW' + 'orld'] && (this['_btSolverI' + 'nfo'] = _0x4e0b09['btDynamics' + 'World_getS' + 'olverInfo'](this['_btDiscret' + 'eDynamicsW' + 'orld']), this['_btDispatc' + 'hInfo'] = _0x4e0b09['btCollisio' + 'nWorld_get' + 'DispatchIn' + 'fo'](this['_btDiscret' + 'eDynamicsW' + 'orld'])), this['_btClosest' + 'RayResultC' + 'allback'] = _0x4e0b09['ClosestRay' + 'ResultCall' + 'back_creat' + 'e'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btAllHits' + 'RayResultC' + 'allback'] = _0x4e0b09['AllHitsRay' + 'ResultCall' + 'back_creat' + 'e'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btClosest' + 'ConvexResu' + 'ltCallback'] = _0x4e0b09['ClosestCon' + 'vexResultC' + 'allback_cr' + 'eate'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btAllConv' + 'exResultCa' + 'llback'] = _0x4e0b09['AllConvexR' + 'esultCallb' + 'ack_create'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['setHitsRay' + 'ResultCall' + 'backFlag'](), _0x4e0b09['btGImpactC' + 'ollisionAl' + 'gorithm_Re' + 'gisterAlgo' + 'rithm'](this['_btDispatc' + 'her']);
        }
        static ['__init__']() {
            var _0xd5c5ac = _0x207eb6['Physics3D']['_bullet'];
            _0x101776['_btTempVec' + 'tor30'] = _0xd5c5ac['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x101776['_btTempVec' + 'tor31'] = _0xd5c5ac['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x101776['_btTempQua' + 'ternion0'] = _0xd5c5ac['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x101776['_btTempQua' + 'ternion1'] = _0xd5c5ac['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x101776['_btTempTra' + 'nsform0'] = _0xd5c5ac['btTransfor' + 'm_create'](), _0x101776['_btTempTra' + 'nsform1'] = _0xd5c5ac['btTransfor' + 'm_create']();
        }
        static ['createCons' + 'traint']() {
        }
        get ['continuous' + 'CollisionD' + 'etection']() {
            return _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nWorld_get' + '_m_useCont' + 'inuous'](this['_btDispatc' + 'hInfo']);
        }
        set ['continuous' + 'CollisionD' + 'etection'](_0x66a9f0) {
            _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nWorld_set' + '_m_useCont' + 'inuous'](this['_btDispatc' + 'hInfo'], _0x66a9f0);
        }
        get ['gravity']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            return this['_gravity'];
        }
        set ['gravity'](_0x3e6aa4) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            this['_gravity'] = _0x3e6aa4;
            var _0x9d071c = _0x207eb6['Physics3D']['_bullet'], _0x1763d0 = _0x101776['_btTempVec' + 'tor30'];
            _0x9d071c['btVector3_' + 'setValue'](_0x1763d0, -_0x3e6aa4['x'], _0x3e6aa4['y'], _0x3e6aa4['z']), _0x9d071c['btDiscrete' + 'DynamicsWo' + 'rld_setGra' + 'vity'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x1763d0);
        }
        get ['speculativ' + 'eContactRe' + 'stitution']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20Ca' + 'nnot\x20perfo' + 'rm\x20this\x20ac' + 'tion\x20when\x20' + 'the\x20physic' + 's\x20engine\x20i' + 's\x20set\x20to\x20C' + 'ollisionsO' + 'nly';
            return _0x207eb6['Physics3D']['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_getApp' + 'lySpeculat' + 'iveContact' + 'Restitutio' + 'n'](this['_btDiscret' + 'eDynamicsW' + 'orld']);
        }
        set ['speculativ' + 'eContactRe' + 'stitution'](_0x21cabf) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20Ca' + 'nnot\x20perfo' + 'rm\x20this\x20ac' + 'tion\x20when\x20' + 'the\x20physic' + 's\x20engine\x20i' + 's\x20set\x20to\x20C' + 'ollisionsO' + 'nly';
            _0x207eb6['Physics3D']['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_setApp' + 'lySpeculat' + 'iveContact' + 'Restitutio' + 'n'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x21cabf);
        }
        ['_simulate'](_0x538489) {
            this['_updatedRi' + 'gidbodies'] = 0x0;
            var _0x42c840 = _0x207eb6['Physics3D']['_bullet'];
            if (this['_btDiscret' + 'eDynamicsW' + 'orld'])
                _0x42c840['btDiscrete' + 'DynamicsWo' + 'rld_stepSi' + 'mulation'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x538489, this['maxSubStep' + 's'], this['fixedTimeS' + 'tep']);
            else
                _0x42c840['PerformDis' + 'creteColli' + 'sionDetect' + 'ion'](this['_btCollisi' + 'onWorld']);
        }
        ['_destroy']() {
            var _0x23654c = _0x207eb6['Physics3D']['_bullet'];
            this['_btDiscret' + 'eDynamicsW' + 'orld'] ? (_0x23654c['btCollisio' + 'nWorld_des' + 'troy'](this['_btDiscret' + 'eDynamicsW' + 'orld']), this['_btDiscret' + 'eDynamicsW' + 'orld'] = null) : (_0x23654c['btCollisio' + 'nWorld_des' + 'troy'](this['_btCollisi' + 'onWorld']), this['_btCollisi' + 'onWorld'] = null), _0x23654c['btDbvtBroa' + 'dphase_des' + 'troy'](this['_btBroadph' + 'ase']), this['_btBroadph' + 'ase'] = null, _0x23654c['btCollisio' + 'nDispatche' + 'r_destroy'](this['_btDispatc' + 'her']), this['_btDispatc' + 'her'] = null, _0x23654c['btDefaultC' + 'ollisionCo' + 'nfiguratio' + 'n_destroy'](this['_btCollisi' + 'onConfigur' + 'ation']), this['_btCollisi' + 'onConfigur' + 'ation'] = null;
        }
        ['_addPhysic' + 'sCollider'](_0x3ac049, _0x293f16, _0x3d1c40) {
            _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nWorld_add' + 'CollisionO' + 'bject'](this['_btCollisi' + 'onWorld'], _0x3ac049['_btCollide' + 'rObject'], _0x293f16, _0x3d1c40);
        }
        ['_removePhy' + 'sicsCollid' + 'er'](_0x134635) {
            _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nWorld_rem' + 'oveCollisi' + 'onObject'](this['_btCollisi' + 'onWorld'], _0x134635['_btCollide' + 'rObject']);
        }
        ['_addRigidB' + 'ody'](_0x4ca47b, _0x126cdb, _0x12194b) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            _0x207eb6['Physics3D']['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_addRig' + 'idBody'](this['_btCollisi' + 'onWorld'], _0x4ca47b['_btCollide' + 'rObject'], _0x126cdb, _0x12194b);
        }
        ['_removeRig' + 'idBody'](_0x2c4d3a) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            _0x207eb6['Physics3D']['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_remove' + 'RigidBody'](this['_btCollisi' + 'onWorld'], _0x2c4d3a['_btCollide' + 'rObject']);
        }
        ['_addCharac' + 'ter'](_0x3a9e0b, _0x89657c, _0x2678fd) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            var _0x295222 = _0x207eb6['Physics3D']['_bullet'];
            _0x295222['btCollisio' + 'nWorld_add' + 'CollisionO' + 'bject'](this['_btCollisi' + 'onWorld'], _0x3a9e0b['_btCollide' + 'rObject'], _0x89657c, _0x2678fd), _0x295222['btDynamics' + 'World_addA' + 'ction'](this['_btCollisi' + 'onWorld'], _0x3a9e0b['_btKinemat' + 'icCharacte' + 'r']);
        }
        ['_removeCha' + 'racter'](_0x26e088) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            var _0x57b8ab = _0x207eb6['Physics3D']['_bullet'];
            _0x57b8ab['btCollisio' + 'nWorld_rem' + 'oveCollisi' + 'onObject'](this['_btCollisi' + 'onWorld'], _0x26e088['_btCollide' + 'rObject']), _0x57b8ab['btDynamics' + 'World_remo' + 'veAction'](this['_btCollisi' + 'onWorld'], _0x26e088['_btKinemat' + 'icCharacte' + 'r']);
        }
        ['raycastFro' + 'mTo'](_0x59e9d1, _0x4609ad, _0x23a3fc = null, _0x41ce9d = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x55bb22 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x2b2a77 = _0x207eb6['Physics3D']['_bullet'], _0x441d1c = this['_btClosest' + 'RayResultC' + 'allback'], _0x4b9fa1 = _0x101776['_btTempVec' + 'tor30'], _0x99c5ce = _0x101776['_btTempVec' + 'tor31'];
            _0x2b2a77['btVector3_' + 'setValue'](_0x4b9fa1, -_0x59e9d1['x'], _0x59e9d1['y'], _0x59e9d1['z']), _0x2b2a77['btVector3_' + 'setValue'](_0x99c5ce, -_0x4609ad['x'], _0x4609ad['y'], _0x4609ad['z']), _0x2b2a77['ClosestRay' + 'ResultCall' + 'back_set_m' + '_rayFromWo' + 'rld'](_0x441d1c, _0x4b9fa1), _0x2b2a77['ClosestRay' + 'ResultCall' + 'back_set_m' + '_rayToWorl' + 'd'](_0x441d1c, _0x99c5ce), _0x2b2a77['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterG' + 'roup'](_0x441d1c, _0x41ce9d), _0x2b2a77['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterM' + 'ask'](_0x441d1c, _0x55bb22), _0x2b2a77['RayResultC' + 'allback_se' + 't_m_collis' + 'ionObject'](_0x441d1c, null), _0x2b2a77['RayResultC' + 'allback_se' + 't_m_closes' + 'tHitFracti' + 'on'](_0x441d1c, 0x1), _0x2b2a77['btCollisio' + 'nWorld_ray' + 'Test'](this['_btCollisi' + 'onWorld'], _0x4b9fa1, _0x99c5ce, _0x441d1c);
            if (_0x2b2a77['RayResultC' + 'allback_ha' + 'sHit'](_0x441d1c)) {
                if (_0x23a3fc) {
                    _0x23a3fc['succeeded'] = !![], _0x23a3fc['collider'] = _0x3e3f17['_physicObj' + 'ectsMap'][_0x2b2a77['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x2b2a77['RayResultC' + 'allback_ge' + 't_m_collis' + 'ionObject'](_0x441d1c))], _0x23a3fc['hitFractio' + 'n'] = _0x2b2a77['RayResultC' + 'allback_ge' + 't_m_closes' + 'tHitFracti' + 'on'](_0x441d1c);
                    var _0x2226c5 = _0x2b2a77['ClosestRay' + 'ResultCall' + 'back_get_m' + '_hitPointW' + 'orld'](_0x441d1c), _0x2a1945 = _0x23a3fc['point'];
                    _0x2a1945['x'] = -_0x2b2a77['btVector3_' + 'x'](_0x2226c5), _0x2a1945['y'] = _0x2b2a77['btVector3_' + 'y'](_0x2226c5), _0x2a1945['z'] = _0x2b2a77['btVector3_' + 'z'](_0x2226c5);
                    var _0x1a5ba8 = _0x2b2a77['ClosestRay' + 'ResultCall' + 'back_get_m' + '_hitNormal' + 'World'](_0x441d1c), _0x43e33c = _0x23a3fc['normal'];
                    _0x43e33c['x'] = -_0x2b2a77['btVector3_' + 'x'](_0x1a5ba8), _0x43e33c['y'] = _0x2b2a77['btVector3_' + 'y'](_0x1a5ba8), _0x43e33c['z'] = _0x2b2a77['btVector3_' + 'z'](_0x1a5ba8);
                }
                return !![];
            } else {
                if (_0x23a3fc)
                    _0x23a3fc['succeeded'] = ![];
                return ![];
            }
        }
        ['raycastAll' + 'FromTo'](_0x2ed437, _0x365a9e, _0x331b13, _0x5bbb56 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x343faf = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x595550 = _0x207eb6['Physics3D']['_bullet'], _0x380db9 = this['_btAllHits' + 'RayResultC' + 'allback'], _0x318402 = _0x101776['_btTempVec' + 'tor30'], _0x1d7c7c = _0x101776['_btTempVec' + 'tor31'];
            _0x331b13['length'] = 0x0, _0x595550['btVector3_' + 'setValue'](_0x318402, -_0x2ed437['x'], _0x2ed437['y'], _0x2ed437['z']), _0x595550['btVector3_' + 'setValue'](_0x1d7c7c, -_0x365a9e['x'], _0x365a9e['y'], _0x365a9e['z']), _0x595550['AllHitsRay' + 'ResultCall' + 'back_set_m' + '_rayFromWo' + 'rld'](_0x380db9, _0x318402), _0x595550['AllHitsRay' + 'ResultCall' + 'back_set_m' + '_rayToWorl' + 'd'](_0x380db9, _0x1d7c7c), _0x595550['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterG' + 'roup'](_0x380db9, _0x5bbb56), _0x595550['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterM' + 'ask'](_0x380db9, _0x343faf);
            var _0x45e71f = _0x595550['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_collision' + 'Objects'](_0x380db9), _0x12f48b = _0x595550['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitPointW' + 'orld'](_0x380db9), _0x1341d7 = _0x595550['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitNormal' + 'World'](_0x380db9), _0x1d0def = _0x595550['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitFracti' + 'ons'](_0x380db9);
            _0x595550['tBtCollisi' + 'onObjectAr' + 'ray_clear'](_0x45e71f), _0x595550['tVector3Ar' + 'ray_clear'](_0x12f48b), _0x595550['tVector3Ar' + 'ray_clear'](_0x1341d7), _0x595550['tScalarArr' + 'ay_clear'](_0x1d0def), _0x595550['btCollisio' + 'nWorld_ray' + 'Test'](this['_btCollisi' + 'onWorld'], _0x318402, _0x1d7c7c, _0x380db9);
            var _0x177cc9 = _0x595550['tBtCollisi' + 'onObjectAr' + 'ray_size'](_0x45e71f);
            if (_0x177cc9 > 0x0) {
                this['_collision' + 'sUtils']['recoverAll' + 'HitResults' + 'Pool']();
                for (var _0x5b615e = 0x0; _0x5b615e < _0x177cc9; _0x5b615e++) {
                    var _0x465dc2 = this['_collision' + 'sUtils']['getHitResu' + 'lt']();
                    _0x331b13['push'](_0x465dc2), _0x465dc2['succeeded'] = !![], _0x465dc2['collider'] = _0x3e3f17['_physicObj' + 'ectsMap'][_0x595550['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x595550['tBtCollisi' + 'onObjectAr' + 'ray_at'](_0x45e71f, _0x5b615e))], _0x465dc2['hitFractio' + 'n'] = _0x595550['tScalarArr' + 'ay_at'](_0x1d0def, _0x5b615e);
                    var _0x1edea7 = _0x595550['tVector3Ar' + 'ray_at'](_0x12f48b, _0x5b615e), _0x2cb6fe = _0x465dc2['point'];
                    _0x2cb6fe['x'] = -_0x595550['btVector3_' + 'x'](_0x1edea7), _0x2cb6fe['y'] = _0x595550['btVector3_' + 'y'](_0x1edea7), _0x2cb6fe['z'] = _0x595550['btVector3_' + 'z'](_0x1edea7);
                    var _0x52a8c1 = _0x595550['tVector3Ar' + 'ray_at'](_0x1341d7, _0x5b615e), _0x4c087f = _0x465dc2['normal'];
                    _0x4c087f['x'] = -_0x595550['btVector3_' + 'x'](_0x52a8c1), _0x4c087f['y'] = _0x595550['btVector3_' + 'y'](_0x52a8c1), _0x4c087f['z'] = _0x595550['btVector3_' + 'z'](_0x52a8c1);
                }
                return !![];
            } else
                return ![];
        }
        ['rayCast'](_0x2a0c7c, _0x51ef2f = null, _0x3b0386 = 0x7fffffff, _0x297240 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x2d7feb = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x1b83cb = _0x2a0c7c['origin'], _0x155620 = _0x101776['_tempVecto' + 'r30'];
            return _0x352206['normalize'](_0x2a0c7c['direction'], _0x155620), _0x352206['scale'](_0x155620, _0x3b0386, _0x155620), _0x352206['add'](_0x1b83cb, _0x155620, _0x155620), this['raycastFro' + 'mTo'](_0x1b83cb, _0x155620, _0x51ef2f, _0x297240, _0x2d7feb);
        }
        ['rayCastAll'](_0xf6a04, _0x1eac79, _0x265f80 = 0x7fffffff, _0x19b344 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x392552 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x58f38a = _0xf6a04['origin'], _0x59bdb0 = _0x101776['_tempVecto' + 'r30'];
            return _0x352206['normalize'](_0xf6a04['direction'], _0x59bdb0), _0x352206['scale'](_0x59bdb0, _0x265f80, _0x59bdb0), _0x352206['add'](_0x58f38a, _0x59bdb0, _0x59bdb0), this['raycastAll' + 'FromTo'](_0x58f38a, _0x59bdb0, _0x1eac79, _0x19b344, _0x392552);
        }
        ['shapeCast'](_0x132fb9, _0x1c555f, _0x27c3b9, _0x1e5a67 = null, _0x509659 = null, _0xc3373e = null, _0x50ae7b = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x53ff39 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x17b8b2 = 0x0) {
            var _0x3dd1d1 = _0x207eb6['Physics3D']['_bullet'], _0x1458bb = this['_btClosest' + 'ConvexResu' + 'ltCallback'], _0x498291 = _0x101776['_btTempVec' + 'tor30'], _0x4cbc18 = _0x101776['_btTempVec' + 'tor31'], _0x29b992 = _0x101776['_btTempQua' + 'ternion0'], _0x175084 = _0x101776['_btTempQua' + 'ternion1'], _0x4e9852 = _0x101776['_btTempTra' + 'nsform0'], _0x477bf6 = _0x101776['_btTempTra' + 'nsform1'], _0x54765d = _0x132fb9['_btShape'];
            _0x3dd1d1['btVector3_' + 'setValue'](_0x498291, -_0x1c555f['x'], _0x1c555f['y'], _0x1c555f['z']), _0x3dd1d1['btVector3_' + 'setValue'](_0x4cbc18, -_0x27c3b9['x'], _0x27c3b9['y'], _0x27c3b9['z']), _0x3dd1d1['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erGroup'](_0x1458bb, _0x50ae7b), _0x3dd1d1['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erMask'](_0x1458bb, _0x53ff39), _0x3dd1d1['btTransfor' + 'm_setOrigi' + 'n'](_0x4e9852, _0x498291), _0x3dd1d1['btTransfor' + 'm_setOrigi' + 'n'](_0x477bf6, _0x4cbc18);
            _0x509659 ? (_0x3dd1d1['btQuaterni' + 'on_setValu' + 'e'](_0x29b992, -_0x509659['x'], _0x509659['y'], _0x509659['z'], -_0x509659['w']), _0x3dd1d1['btTransfor' + 'm_setRotat' + 'ion'](_0x4e9852, _0x29b992)) : _0x3dd1d1['btTransfor' + 'm_setRotat' + 'ion'](_0x4e9852, this['_btDefault' + 'Quaternion']);
            _0xc3373e ? (_0x3dd1d1['btQuaterni' + 'on_setValu' + 'e'](_0x175084, -_0xc3373e['x'], _0xc3373e['y'], _0xc3373e['z'], -_0xc3373e['w']), _0x3dd1d1['btTransfor' + 'm_setRotat' + 'ion'](_0x477bf6, _0x175084)) : _0x3dd1d1['btTransfor' + 'm_setRotat' + 'ion'](_0x477bf6, this['_btDefault' + 'Quaternion']);
            _0x3dd1d1['ClosestCon' + 'vexResultC' + 'allback_se' + 't_m_hitCol' + 'lisionObje' + 'ct'](_0x1458bb, null), _0x3dd1d1['ConvexResu' + 'ltCallback' + '_set_m_clo' + 'sestHitFra' + 'ction'](_0x1458bb, 0x1), _0x3dd1d1['btCollisio' + 'nWorld_con' + 'vexSweepTe' + 'st'](this['_btCollisi' + 'onWorld'], _0x54765d, _0x4e9852, _0x477bf6, _0x1458bb, _0x17b8b2);
            if (_0x3dd1d1['ConvexResu' + 'ltCallback' + '_hasHit'](_0x1458bb)) {
                if (_0x1e5a67) {
                    _0x1e5a67['succeeded'] = !![], _0x1e5a67['collider'] = _0x3e3f17['_physicObj' + 'ectsMap'][_0x3dd1d1['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x3dd1d1['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitCol' + 'lisionObje' + 'ct'](_0x1458bb))], _0x1e5a67['hitFractio' + 'n'] = _0x3dd1d1['ConvexResu' + 'ltCallback' + '_get_m_clo' + 'sestHitFra' + 'ction'](_0x1458bb);
                    var _0x3df222 = _0x3dd1d1['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitPoi' + 'ntWorld'](_0x1458bb), _0x5791e4 = _0x3dd1d1['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitNor' + 'malWorld'](_0x1458bb), _0x1af883 = _0x1e5a67['point'], _0x59782f = _0x1e5a67['normal'];
                    _0x1af883['x'] = -_0x3dd1d1['btVector3_' + 'x'](_0x3df222), _0x1af883['y'] = _0x3dd1d1['btVector3_' + 'y'](_0x3df222), _0x1af883['z'] = _0x3dd1d1['btVector3_' + 'z'](_0x3df222), _0x59782f['x'] = -_0x3dd1d1['btVector3_' + 'x'](_0x5791e4), _0x59782f['y'] = _0x3dd1d1['btVector3_' + 'y'](_0x5791e4), _0x59782f['z'] = _0x3dd1d1['btVector3_' + 'z'](_0x5791e4);
                }
                return !![];
            } else {
                if (_0x1e5a67)
                    _0x1e5a67['succeeded'] = ![];
                return ![];
            }
        }
        ['shapeCastA' + 'll'](_0x2b3f32, _0xbbd523, _0xb41d0c, _0x46487a, _0x1b1510 = null, _0x21479c = null, _0x2d9a77 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x2e98b3 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x194bf9 = 0x0) {
            var _0x3e760a = _0x207eb6['Physics3D']['_bullet'], _0x4b7362 = this['_btAllConv' + 'exResultCa' + 'llback'], _0x549847 = _0x101776['_btTempVec' + 'tor30'], _0x1751fb = _0x101776['_btTempVec' + 'tor31'], _0xaf8be2 = _0x101776['_btTempQua' + 'ternion0'], _0x41e9eb = _0x101776['_btTempQua' + 'ternion1'], _0x9f7fa7 = _0x101776['_btTempTra' + 'nsform0'], _0x271b98 = _0x101776['_btTempTra' + 'nsform1'], _0xa8fa9e = _0x2b3f32['_btShape'];
            _0x46487a['length'] = 0x0, _0x3e760a['btVector3_' + 'setValue'](_0x549847, -_0xbbd523['x'], _0xbbd523['y'], _0xbbd523['z']), _0x3e760a['btVector3_' + 'setValue'](_0x1751fb, -_0xb41d0c['x'], _0xb41d0c['y'], _0xb41d0c['z']), _0x3e760a['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erGroup'](_0x4b7362, _0x2d9a77), _0x3e760a['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erMask'](_0x4b7362, _0x2e98b3), _0x3e760a['btTransfor' + 'm_setOrigi' + 'n'](_0x9f7fa7, _0x549847), _0x3e760a['btTransfor' + 'm_setOrigi' + 'n'](_0x271b98, _0x1751fb);
            _0x1b1510 ? (_0x3e760a['btQuaterni' + 'on_setValu' + 'e'](_0xaf8be2, -_0x1b1510['x'], _0x1b1510['y'], _0x1b1510['z'], -_0x1b1510['w']), _0x3e760a['btTransfor' + 'm_setRotat' + 'ion'](_0x9f7fa7, _0xaf8be2)) : _0x3e760a['btTransfor' + 'm_setRotat' + 'ion'](_0x9f7fa7, this['_btDefault' + 'Quaternion']);
            _0x21479c ? (_0x3e760a['btQuaterni' + 'on_setValu' + 'e'](_0x41e9eb, -_0x21479c['x'], _0x21479c['y'], _0x21479c['z'], -_0x21479c['w']), _0x3e760a['btTransfor' + 'm_setRotat' + 'ion'](_0x271b98, _0x41e9eb)) : _0x3e760a['btTransfor' + 'm_setRotat' + 'ion'](_0x271b98, this['_btDefault' + 'Quaternion']);
            var _0x4be221 = _0x3e760a['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'collisionO' + 'bjects'](_0x4b7362), _0x127d62 = _0x3e760a['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitPointWo' + 'rld'](_0x4b7362), _0x4e8a1f = _0x3e760a['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitNormalW' + 'orld'](_0x4b7362), _0x54cde4 = _0x3e760a['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitFractio' + 'ns'](_0x4b7362);
            _0x3e760a['tVector3Ar' + 'ray_clear'](_0x127d62), _0x3e760a['tVector3Ar' + 'ray_clear'](_0x4e8a1f), _0x3e760a['tScalarArr' + 'ay_clear'](_0x54cde4), _0x3e760a['tBtCollisi' + 'onObjectAr' + 'ray_clear'](_0x4be221), _0x3e760a['btCollisio' + 'nWorld_con' + 'vexSweepTe' + 'st'](this['_btCollisi' + 'onWorld'], _0xa8fa9e, _0x9f7fa7, _0x271b98, _0x4b7362, _0x194bf9);
            var _0x53e8d0 = _0x3e760a['tBtCollisi' + 'onObjectAr' + 'ray_size'](_0x4be221);
            if (_0x53e8d0 > 0x0) {
                this['_collision' + 'sUtils']['recoverAll' + 'HitResults' + 'Pool']();
                for (var _0x4660c8 = 0x0; _0x4660c8 < _0x53e8d0; _0x4660c8++) {
                    var _0x2aec60 = this['_collision' + 'sUtils']['getHitResu' + 'lt']();
                    _0x46487a['push'](_0x2aec60), _0x2aec60['succeeded'] = !![], _0x2aec60['collider'] = _0x3e3f17['_physicObj' + 'ectsMap'][_0x3e760a['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x3e760a['tBtCollisi' + 'onObjectAr' + 'ray_at'](_0x4be221, _0x4660c8))], _0x2aec60['hitFractio' + 'n'] = _0x3e760a['tScalarArr' + 'ay_at'](_0x54cde4, _0x4660c8);
                    var _0x55561c = _0x3e760a['tVector3Ar' + 'ray_at'](_0x127d62, _0x4660c8), _0x1f7351 = _0x2aec60['point'];
                    _0x1f7351['x'] = -_0x3e760a['btVector3_' + 'x'](_0x55561c), _0x1f7351['y'] = _0x3e760a['btVector3_' + 'y'](_0x55561c), _0x1f7351['z'] = _0x3e760a['btVector3_' + 'z'](_0x55561c);
                    var _0x4e3272 = _0x3e760a['tVector3Ar' + 'ray_at'](_0x4e8a1f, _0x4660c8), _0x2b79f0 = _0x2aec60['normal'];
                    _0x2b79f0['x'] = -_0x3e760a['btVector3_' + 'x'](_0x4e3272), _0x2b79f0['y'] = _0x3e760a['btVector3_' + 'y'](_0x4e3272), _0x2b79f0['z'] = _0x3e760a['btVector3_' + 'z'](_0x4e3272);
                }
                return !![];
            } else
                return ![];
        }
        ['addConstra' + 'int'](_0x5a9035, _0x10d713 = ![]) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nWorld_add' + 'Constraint'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x5a9035['_btConstra' + 'int'], _0x10d713), this['_currentCo' + 'nstraint'][_0x5a9035['id']] = _0x5a9035;
        }
        ['removeCons' + 'traint'](_0x597c66) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nWorld_rem' + 'oveConstra' + 'int'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x597c66['_btConstra' + 'int']), delete this['_currentCo' + 'nstraint'][_0x597c66['id']];
        }
        ['setHitsRay' + 'ResultCall' + 'backFlag'](_0x46a88c = 0x1) {
            var _0x178982 = _0x207eb6['Physics3D']['_bullet'];
            _0x178982['RayResultC' + 'allback_se' + 't_m_flags'](this['_btAllHits' + 'RayResultC' + 'allback'], _0x46a88c), _0x178982['RayResultC' + 'allback_se' + 't_m_flags'](this['_btClosest' + 'RayResultC' + 'allback'], _0x46a88c);
        }
        ['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der']() {
            var _0x426181 = this['_physicsUp' + 'dateList']['elements'];
            for (var _0x3e8cab = 0x0, _0x2f8656 = this['_physicsUp' + 'dateList']['length']; _0x3e8cab < _0x2f8656; _0x3e8cab++) {
                var _0x43bd6f = _0x426181[_0x3e8cab];
                _0x43bd6f['_derivePhy' + 'sicsTransf' + 'ormation'](![]), _0x43bd6f['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1;
            }
            this['_physicsUp' + 'dateList']['length'] = 0x0;
        }
        ['_updateCha' + 'racters']() {
            for (var _0xd83078 = 0x0, _0x3997f4 = this['_character' + 's']['length']; _0xd83078 < _0x3997f4; _0xd83078++) {
                var _0x245936 = this['_character' + 's'][_0xd83078];
                _0x245936['_updateTra' + 'nsformComp' + 'onent'](_0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x245936['_btCollide' + 'rObject']));
            }
        }
        ['_updateCol' + 'lisions']() {
            this['_collision' + 'sUtils']['recoverAll' + 'ContactPoi' + 'ntsPool']();
            var _0x4cd664 = this['_currentFr' + 'ameCollisi' + 'ons'];
            this['_currentFr' + 'ameCollisi' + 'ons'] = this['_previousF' + 'rameCollis' + 'ions'], this['_currentFr' + 'ameCollisi' + 'ons']['length'] = 0x0, this['_previousF' + 'rameCollis' + 'ions'] = _0x4cd664;
            var _0x187a56 = _0x442335['Stat']['loopCount'], _0x544a5c = _0x207eb6['Physics3D']['_bullet'], _0x30140a = _0x544a5c['btDispatch' + 'er_getNumM' + 'anifolds'](this['_btDispatc' + 'her']);
            for (var _0x2af461 = 0x0; _0x2af461 < _0x30140a; _0x2af461++) {
                var _0x4f804f = _0x544a5c['btDispatch' + 'er_getMani' + 'foldByInde' + 'xInternal'](this['_btDispatc' + 'her'], _0x2af461), _0x144206 = _0x3e3f17['_physicObj' + 'ectsMap'][_0x544a5c['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x544a5c['btPersiste' + 'ntManifold' + '_getBody0'](_0x4f804f))], _0x3d1f35 = _0x3e3f17['_physicObj' + 'ectsMap'][_0x544a5c['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x544a5c['btPersiste' + 'ntManifold' + '_getBody1'](_0x4f804f))], _0x28af1f = null, _0x15e0c2, _0x5e617a = null, _0x1335c4 = _0x144206['isTrigger'] || _0x3d1f35['isTrigger'];
                if (_0x1335c4 && (_0x144206['owner']['_needProce' + 'ssTriggers'] || _0x3d1f35['owner']['_needProce' + 'ssTriggers'])) {
                    var _0xaedfd0 = _0x544a5c['btPersiste' + 'ntManifold' + '_getNumCon' + 'tacts'](_0x4f804f);
                    for (var _0x1b1ab2 = 0x0; _0x1b1ab2 < _0xaedfd0; _0x1b1ab2++) {
                        var _0x25f4b0 = _0x544a5c['btPersiste' + 'ntManifold' + '_getContac' + 'tPoint'](_0x4f804f, _0x1b1ab2), _0xa3ac08 = _0x544a5c['btManifold' + 'Point_getD' + 'istance'](_0x25f4b0);
                        if (_0xa3ac08 <= 0x0) {
                            _0x28af1f = this['_collision' + 'sUtils']['getCollisi' + 'on'](_0x144206, _0x3d1f35), _0x5e617a = _0x28af1f['contacts'], _0x15e0c2 = _0x28af1f['_updateFra' + 'me'] !== _0x187a56;
                            _0x15e0c2 && (_0x28af1f['_isTrigger'] = !![], _0x5e617a['length'] = 0x0);
                            break;
                        }
                    }
                } else {
                    if (_0x144206['owner']['_needProce' + 'ssCollisio' + 'ns'] || _0x3d1f35['owner']['_needProce' + 'ssCollisio' + 'ns']) {
                        if (_0x144206['_enablePro' + 'cessCollis' + 'ions'] || _0x3d1f35['_enablePro' + 'cessCollis' + 'ions']) {
                            _0xaedfd0 = _0x544a5c['btPersiste' + 'ntManifold' + '_getNumCon' + 'tacts'](_0x4f804f);
                            for (_0x1b1ab2 = 0x0; _0x1b1ab2 < _0xaedfd0; _0x1b1ab2++) {
                                _0x25f4b0 = _0x544a5c['btPersiste' + 'ntManifold' + '_getContac' + 'tPoint'](_0x4f804f, _0x1b1ab2), _0xa3ac08 = _0x544a5c['btManifold' + 'Point_getD' + 'istance'](_0x25f4b0);
                                if (_0xa3ac08 <= 0x0) {
                                    var _0x48a613 = this['_collision' + 'sUtils']['getContact' + 'Points']();
                                    _0x48a613['colliderA'] = _0x144206, _0x48a613['colliderB'] = _0x3d1f35, _0x48a613['distance'] = _0xa3ac08;
                                    var _0x590929 = _0x544a5c['btManifold' + 'Point_get_' + 'm_normalWo' + 'rldOnB'](_0x25f4b0), _0x278e34 = _0x48a613['normal'];
                                    _0x278e34['x'] = -_0x544a5c['btVector3_' + 'x'](_0x590929), _0x278e34['y'] = _0x544a5c['btVector3_' + 'y'](_0x590929), _0x278e34['z'] = _0x544a5c['btVector3_' + 'z'](_0x590929);
                                    var _0x336e20 = _0x544a5c['btManifold' + 'Point_get_' + 'm_position' + 'WorldOnA'](_0x25f4b0), _0x1b23aa = _0x48a613['positionOn' + 'A'];
                                    _0x1b23aa['x'] = -_0x544a5c['btVector3_' + 'x'](_0x336e20), _0x1b23aa['y'] = _0x544a5c['btVector3_' + 'y'](_0x336e20), _0x1b23aa['z'] = _0x544a5c['btVector3_' + 'z'](_0x336e20);
                                    var _0x3c825a = _0x544a5c['btManifold' + 'Point_get_' + 'm_position' + 'WorldOnB'](_0x25f4b0), _0x41b5d5 = _0x48a613['positionOn' + 'B'];
                                    _0x41b5d5['x'] = -_0x544a5c['btVector3_' + 'x'](_0x3c825a), _0x41b5d5['y'] = _0x544a5c['btVector3_' + 'y'](_0x3c825a), _0x41b5d5['z'] = _0x544a5c['btVector3_' + 'z'](_0x3c825a), !_0x28af1f && (_0x28af1f = this['_collision' + 'sUtils']['getCollisi' + 'on'](_0x144206, _0x3d1f35), _0x5e617a = _0x28af1f['contacts'], _0x15e0c2 = _0x28af1f['_updateFra' + 'me'] !== _0x187a56, _0x15e0c2 && (_0x28af1f['_isTrigger'] = ![], _0x5e617a['length'] = 0x0)), _0x5e617a['push'](_0x48a613);
                                }
                            }
                        }
                    }
                }
                _0x28af1f && _0x15e0c2 && (this['_currentFr' + 'ameCollisi' + 'ons']['push'](_0x28af1f), _0x28af1f['_setUpdate' + 'Frame'](_0x187a56));
            }
        }
        ['_eventScri' + 'pts']() {
            var _0x93fa1f = _0x442335['Stat']['loopCount'];
            for (var _0x2b0306 = 0x0, _0x594c99 = this['_currentFr' + 'ameCollisi' + 'ons']['length']; _0x2b0306 < _0x594c99; _0x2b0306++) {
                var _0x57d308 = this['_currentFr' + 'ameCollisi' + 'ons'][_0x2b0306], _0x47eca8 = _0x57d308['_colliderA'], _0x3097cf = _0x57d308['_colliderB'];
                if (_0x47eca8['destroyed'] || _0x3097cf['destroyed'])
                    continue;
                if (_0x93fa1f - _0x57d308['_lastUpdat' + 'eFrame'] === 0x1) {
                    var _0x7d28ad = _0x47eca8['owner'], _0x44b546 = _0x7d28ad['_scripts'];
                    if (_0x44b546) {
                        if (_0x57d308['_isTrigger']) {
                            if (_0x7d28ad['_needProce' + 'ssTriggers']) {
                                for (var _0x14ef98 = 0x0, _0x580296 = _0x44b546['length']; _0x14ef98 < _0x580296; _0x14ef98++)
                                    _0x44b546[_0x14ef98]['onTriggerS' + 'tay'](_0x3097cf);
                            }
                        } else {
                            if (_0x7d28ad['_needProce' + 'ssCollisio' + 'ns'])
                                for (_0x14ef98 = 0x0, _0x580296 = _0x44b546['length']; _0x14ef98 < _0x580296; _0x14ef98++) {
                                    _0x57d308['other'] = _0x3097cf, _0x44b546[_0x14ef98]['onCollisio' + 'nStay'](_0x57d308);
                                }
                        }
                    }
                    var _0x418368 = _0x3097cf['owner'], _0x420cb2 = _0x418368['_scripts'];
                    if (_0x420cb2) {
                        if (_0x57d308['_isTrigger']) {
                            if (_0x418368['_needProce' + 'ssTriggers']) {
                                for (_0x14ef98 = 0x0, _0x580296 = _0x420cb2['length']; _0x14ef98 < _0x580296; _0x14ef98++)
                                    _0x420cb2[_0x14ef98]['onTriggerS' + 'tay'](_0x47eca8);
                            }
                        } else {
                            if (_0x418368['_needProce' + 'ssCollisio' + 'ns'])
                                for (_0x14ef98 = 0x0, _0x580296 = _0x420cb2['length']; _0x14ef98 < _0x580296; _0x14ef98++) {
                                    _0x57d308['other'] = _0x47eca8, _0x420cb2[_0x14ef98]['onCollisio' + 'nStay'](_0x57d308);
                                }
                        }
                    }
                } else {
                    _0x7d28ad = _0x47eca8['owner'], _0x44b546 = _0x7d28ad['_scripts'];
                    if (_0x44b546) {
                        if (_0x57d308['_isTrigger']) {
                            if (_0x7d28ad['_needProce' + 'ssTriggers']) {
                                for (_0x14ef98 = 0x0, _0x580296 = _0x44b546['length']; _0x14ef98 < _0x580296; _0x14ef98++)
                                    _0x44b546[_0x14ef98]['onTriggerE' + 'nter'](_0x3097cf);
                            }
                        } else {
                            if (_0x7d28ad['_needProce' + 'ssCollisio' + 'ns'])
                                for (_0x14ef98 = 0x0, _0x580296 = _0x44b546['length']; _0x14ef98 < _0x580296; _0x14ef98++) {
                                    _0x57d308['other'] = _0x3097cf, _0x44b546[_0x14ef98]['onCollisio' + 'nEnter'](_0x57d308);
                                }
                        }
                    }
                    _0x418368 = _0x3097cf['owner'], _0x420cb2 = _0x418368['_scripts'];
                    if (_0x420cb2) {
                        if (_0x57d308['_isTrigger']) {
                            if (_0x418368['_needProce' + 'ssTriggers']) {
                                for (_0x14ef98 = 0x0, _0x580296 = _0x420cb2['length']; _0x14ef98 < _0x580296; _0x14ef98++)
                                    _0x420cb2[_0x14ef98]['onTriggerE' + 'nter'](_0x47eca8);
                            }
                        } else {
                            if (_0x418368['_needProce' + 'ssCollisio' + 'ns'])
                                for (_0x14ef98 = 0x0, _0x580296 = _0x420cb2['length']; _0x14ef98 < _0x580296; _0x14ef98++) {
                                    _0x57d308['other'] = _0x47eca8, _0x420cb2[_0x14ef98]['onCollisio' + 'nEnter'](_0x57d308);
                                }
                        }
                    }
                }
            }
            for (_0x2b0306 = 0x0, _0x594c99 = this['_previousF' + 'rameCollis' + 'ions']['length']; _0x2b0306 < _0x594c99; _0x2b0306++) {
                var _0x6d1fc1 = this['_previousF' + 'rameCollis' + 'ions'][_0x2b0306], _0x5a342d = _0x6d1fc1['_colliderA'], _0x1083cf = _0x6d1fc1['_colliderB'];
                if (_0x5a342d['destroyed'] || _0x1083cf['destroyed'])
                    continue;
                if (_0x93fa1f - _0x6d1fc1['_updateFra' + 'me'] === 0x1) {
                    this['_collision' + 'sUtils']['recoverCol' + 'lision'](_0x6d1fc1), _0x7d28ad = _0x5a342d['owner'], _0x44b546 = _0x7d28ad['_scripts'];
                    if (_0x44b546) {
                        if (_0x6d1fc1['_isTrigger']) {
                            if (_0x7d28ad['_needProce' + 'ssTriggers']) {
                                for (_0x14ef98 = 0x0, _0x580296 = _0x44b546['length']; _0x14ef98 < _0x580296; _0x14ef98++)
                                    _0x44b546[_0x14ef98]['onTriggerE' + 'xit'](_0x1083cf);
                            }
                        } else {
                            if (_0x7d28ad['_needProce' + 'ssCollisio' + 'ns'])
                                for (_0x14ef98 = 0x0, _0x580296 = _0x44b546['length']; _0x14ef98 < _0x580296; _0x14ef98++) {
                                    _0x6d1fc1['other'] = _0x1083cf, _0x44b546[_0x14ef98]['onCollisio' + 'nExit'](_0x6d1fc1);
                                }
                        }
                    }
                    _0x418368 = _0x1083cf['owner'], _0x420cb2 = _0x418368['_scripts'];
                    if (_0x420cb2) {
                        if (_0x6d1fc1['_isTrigger']) {
                            if (_0x418368['_needProce' + 'ssTriggers']) {
                                for (_0x14ef98 = 0x0, _0x580296 = _0x420cb2['length']; _0x14ef98 < _0x580296; _0x14ef98++)
                                    _0x420cb2[_0x14ef98]['onTriggerE' + 'xit'](_0x5a342d);
                            }
                        } else {
                            if (_0x418368['_needProce' + 'ssCollisio' + 'ns'])
                                for (_0x14ef98 = 0x0, _0x580296 = _0x420cb2['length']; _0x14ef98 < _0x580296; _0x14ef98++) {
                                    _0x6d1fc1['other'] = _0x5a342d, _0x420cb2[_0x14ef98]['onCollisio' + 'nExit'](_0x6d1fc1);
                                }
                        }
                    }
                }
            }
            for (var _0x31d476 in this['_currentCo' + 'nstraint']) {
                var _0x3d111a = this['_currentCo' + 'nstraint'][_0x31d476], _0x48380a = _0x3d111a['owner']['_scripts'];
                if (_0x3d111a['enabled'] && _0x3d111a['_isBreakCo' + 'nstrained']() && !!_0x48380a) {
                    if (_0x48380a['length'] != 0x0)
                        for (_0x2b0306 = 0x0, _0x594c99 = _0x48380a['length']; _0x2b0306 < _0x594c99; _0x2b0306++) {
                            _0x48380a[_0x2b0306]['onJointBre' + 'ak']();
                        }
                }
            }
        }
        ['clearForce' + 's']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0x207eb6['Physics3D']['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_clearF' + 'orces'](this['_btDiscret' + 'eDynamicsW' + 'orld']);
        }
    }
    _0x101776['PHYSICSENG' + 'INEFLAGS_N' + 'ONE'] = 0x0, _0x101776['PHYSICSENG' + 'INEFLAGS_C' + 'OLLISIONSO' + 'NLY'] = 0x1, _0x101776['PHYSICSENG' + 'INEFLAGS_S' + 'OFTBODYSUP' + 'PORT'] = 0x2, _0x101776['PHYSICSENG' + 'INEFLAGS_M' + 'ULTITHREAD' + 'ED'] = 0x4, _0x101776['PHYSICSENG' + 'INEFLAGS_U' + 'SEHARDWARE' + 'WHENPOSSIB' + 'LE'] = 0x8, _0x101776['SOLVERMODE' + '_RANDMIZE_' + 'ORDER'] = 0x1, _0x101776['SOLVERMODE' + '_FRICTION_' + 'SEPARATE'] = 0x2, _0x101776['SOLVERMODE' + '_USE_WARMS' + 'TARTING'] = 0x4, _0x101776['SOLVERMODE' + '_USE_2_FRI' + 'CTION_DIRE' + 'CTIONS'] = 0x10, _0x101776['SOLVERMODE' + '_ENABLE_FR' + 'ICTION_DIR' + 'ECTION_CAC' + 'HING'] = 0x20, _0x101776['SOLVERMODE' + '_DISABLE_V' + 'ELOCITY_DE' + 'PENDENT_FR' + 'ICTION_DIR' + 'ECTION'] = 0x40, _0x101776['SOLVERMODE' + '_CACHE_FRI' + 'ENDLY'] = 0x80, _0x101776['SOLVERMODE' + '_SIMD'] = 0x100, _0x101776['SOLVERMODE' + '_INTERLEAV' + 'E_CONTACT_' + 'AND_FRICTI' + 'ON_CONSTRA' + 'INTS'] = 0x200, _0x101776['SOLVERMODE' + '_ALLOW_ZER' + 'O_LENGTH_F' + 'RICTION_DI' + 'RECTIONS'] = 0x400, _0x101776['HITSRAYRES' + 'ULTCALLBAC' + 'K_FLAG_NON' + 'E'] = 0x0, _0x101776['HITSRAYRES' + 'ULTCALLBAC' + 'K_FLAG_FIL' + 'TERBACKFAC' + 'ESS'] = 0x1, _0x101776['HITSRAYRES' + 'ULTCALLBAC' + 'K_FLAG_KEE' + 'PUNFILIPPE' + 'DNORMAL'] = 0x2, _0x101776['HITSRAYRES' + 'ULTCALLBAC' + 'K_FLAG_USE' + 'SUBSIMPLEX' + 'CONVEXCAST' + 'RAYTEST'] = 0x4, _0x101776['HITSRAYRES' + 'ULTCALLBAC' + 'K_FLAG_USE' + 'GJKCONVEXC' + 'ASTRAYTEST'] = 0x8, _0x101776['HITSRAYRES' + 'ULTCALLBAC' + 'K_FLAG_TER' + 'MINATOR'] = 0xffffffff, _0x101776['_tempVecto' + 'r30'] = new _0x352206(), _0x101776['disableSim' + 'ulation'] = ![];
    class _0x59e616 {
        constructor() {
        }
        static ['lightAtten' + 'Texture'](_0x44beb3, _0x575ac6, _0xe70ed4, _0x480c0e, _0x4ff2a0, _0xecd4b5) {
            var _0x1b6782 = _0x44beb3 / _0xe70ed4, _0x2e46ab = 0x1 / (0x1 + 0x19 * _0x1b6782);
            _0x1b6782 >= 0.64 && (_0x1b6782 > 0x1 ? _0x2e46ab = 0x0 : _0x2e46ab *= 0x1 - (_0x1b6782 - 0.64) / (0x1 - 0.64)), _0xecd4b5[_0x4ff2a0] = Math['floor'](_0x2e46ab * 0xff + 0.5);
        }
        static ['haloTextur' + 'e'](_0x4dbc6b, _0x2bd727, _0x438bdd, _0x5cdec9, _0x3ba898, _0x426b49) {
            _0x438bdd >>= 0x1, _0x5cdec9 >>= 0x1;
            var _0x3b798a = (_0x4dbc6b - _0x438bdd) / _0x438bdd, _0x2bfe4d = (_0x2bd727 - _0x5cdec9) / _0x5cdec9, _0x50c7d3 = _0x3b798a * _0x3b798a + _0x2bfe4d * _0x2bfe4d;
            _0x50c7d3 > 0x1 && (_0x50c7d3 = 0x1), _0x426b49[_0x3ba898] = Math['floor']((0x1 - _0x50c7d3) * 0xff + 0.5);
        }
        static ['_generateT' + 'exture2D'](_0x3acb1d, _0xf8c94d, _0x787c1, _0x1e2507) {
            var _0x95f5df = 0x0, _0x10247c = 0x0;
            switch (_0x3acb1d['format']) {
            case _0x442335['TextureFor' + 'mat']['R8G8B8']:
                _0x10247c = 0x3;
                break;
            case _0x442335['TextureFor' + 'mat']['R8G8B8A8']:
                _0x10247c = 0x4;
                break;
            case _0x442335['TextureFor' + 'mat']['Alpha8']:
                _0x10247c = 0x1;
                break;
            default:
                throw 'GeneratedT' + 'exture._ge' + 'nerateText' + 'ure:\x20unkon' + 'w\x20texture\x20' + 'format.';
            }
            var _0x12047e = new Uint8Array(_0xf8c94d * _0x787c1 * _0x10247c);
            for (var _0x53bd8e = 0x0; _0x53bd8e < _0x787c1; _0x53bd8e++) {
                for (var _0x81f694 = 0x0; _0x81f694 < _0xf8c94d; _0x81f694++) {
                    _0x1e2507(_0x81f694, _0x53bd8e, _0xf8c94d, _0x787c1, _0x95f5df, _0x12047e), _0x95f5df += _0x10247c;
                }
            }
            _0x3acb1d['setPixels'](_0x12047e);
        }
    }
    class _0x47bed9 {
        static ['_createFlo' + 'atTextureB' + 'uffer'](_0x27088c, _0x3877ca) {
            var _0x505543 = new _0x442335['Texture2D'](_0x27088c, _0x3877ca, _0x442335['TextureFor' + 'mat']['R32G32B32A' + '32'], ![], ![]);
            return _0x505543['filterMode'] = _0x442335['FilterMode']['Point'], _0x505543['wrapModeU'] = _0x442335['WarpMode']['Clamp'], _0x505543['wrapModeV'] = _0x442335['WarpMode']['Clamp'], _0x505543['anisoLevel'] = 0x0, _0x505543;
        }
        static ['_convertTo' + 'LayaVec3'](_0x3c40ea, _0x5559c5, _0xf14c46) {
            var _0x4567d6 = _0x207eb6['Physics3D']['_bullet'];
            _0x5559c5['x'] = _0xf14c46 ? -_0x4567d6['btVector3_' + 'x'](_0x3c40ea) : _0x4567d6['btVector3_' + 'x'](_0x3c40ea), _0x5559c5['y'] = _0x4567d6['btVector3_' + 'y'](_0x3c40ea), _0x5559c5['z'] = _0x4567d6['btVector3_' + 'z'](_0x3c40ea);
        }
        static ['_convertTo' + 'BulletVec3'](_0x34cf86, _0x381c6e, _0x531b21) {
            _0x207eb6['Physics3D']['_bullet']['btVector3_' + 'setValue'](_0x381c6e, _0x531b21 ? -_0x34cf86['x'] : _0x34cf86['x'], _0x34cf86['y'], _0x34cf86['z']);
        }
        static ['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x37c71f, _0x1f690e, _0x19d2b5, _0x13e5c4, _0x894118, _0x420fb3, _0x18ae20, _0x3a1528, _0x307e3a, _0x168d04, _0x1e27c0, _0x44b3e0) {
            var _0x16de99 = _0x47bed9['_tempArray' + '16_0'], _0x1195df = _0x47bed9['_tempArray' + '16_1'], _0x27ecfa = _0x47bed9['_tempArray' + '16_2'], _0xb0644 = _0x13e5c4 + _0x13e5c4, _0x51d4bc = _0x894118 + _0x894118, _0x1752fd = _0x420fb3 + _0x420fb3, _0x3d297b = _0x13e5c4 * _0xb0644, _0x22ed33 = _0x894118 * _0xb0644, _0x509b75 = _0x894118 * _0x51d4bc, _0x1dae4b = _0x420fb3 * _0xb0644, _0x5641cd = _0x420fb3 * _0x51d4bc, _0x3a9c7a = _0x420fb3 * _0x1752fd, _0x1d316a = _0x18ae20 * _0xb0644, _0x515153 = _0x18ae20 * _0x51d4bc, _0x279b6b = _0x18ae20 * _0x1752fd;
            _0x16de99[0xf] = 0x1, _0x16de99[0x0] = 0x1 - _0x509b75 - _0x3a9c7a, _0x16de99[0x1] = _0x22ed33 + _0x279b6b, _0x16de99[0x2] = _0x1dae4b - _0x515153, _0x16de99[0x4] = _0x22ed33 - _0x279b6b, _0x16de99[0x5] = 0x1 - _0x3d297b - _0x3a9c7a, _0x16de99[0x6] = _0x5641cd + _0x1d316a, _0x16de99[0x8] = _0x1dae4b + _0x515153, _0x16de99[0x9] = _0x5641cd - _0x1d316a, _0x16de99[0xa] = 0x1 - _0x3d297b - _0x509b75, _0x1195df[0xf] = 0x1, _0x1195df[0x0] = _0x3a1528, _0x1195df[0x5] = _0x307e3a, _0x1195df[0xa] = _0x168d04;
            var _0x392363, _0x36a619, _0x45ad44, _0x34f1c0, _0x585223;
            for (_0x392363 = 0x0; _0x392363 < 0x4; _0x392363++) {
                _0x36a619 = _0x16de99[_0x392363], _0x45ad44 = _0x16de99[_0x392363 + 0x4], _0x34f1c0 = _0x16de99[_0x392363 + 0x8], _0x585223 = _0x16de99[_0x392363 + 0xc], _0x27ecfa[_0x392363] = _0x36a619, _0x27ecfa[_0x392363 + 0x4] = _0x45ad44, _0x27ecfa[_0x392363 + 0x8] = _0x34f1c0, _0x27ecfa[_0x392363 + 0xc] = _0x36a619 * _0x37c71f + _0x45ad44 * _0x1f690e + _0x34f1c0 * _0x19d2b5 + _0x585223;
            }
            for (_0x392363 = 0x0; _0x392363 < 0x4; _0x392363++) {
                _0x36a619 = _0x27ecfa[_0x392363], _0x45ad44 = _0x27ecfa[_0x392363 + 0x4], _0x34f1c0 = _0x27ecfa[_0x392363 + 0x8], _0x585223 = _0x27ecfa[_0x392363 + 0xc], _0x1e27c0[_0x392363 + _0x44b3e0] = _0x36a619 * _0x1195df[0x0] + _0x45ad44 * _0x1195df[0x1] + _0x34f1c0 * _0x1195df[0x2] + _0x585223 * _0x1195df[0x3], _0x1e27c0[_0x392363 + _0x44b3e0 + 0x4] = _0x36a619 * _0x1195df[0x4] + _0x45ad44 * _0x1195df[0x5] + _0x34f1c0 * _0x1195df[0x6] + _0x585223 * _0x1195df[0x7], _0x1e27c0[_0x392363 + _0x44b3e0 + 0x8] = _0x36a619 * _0x1195df[0x8] + _0x45ad44 * _0x1195df[0x9] + _0x34f1c0 * _0x1195df[0xa] + _0x585223 * _0x1195df[0xb], _0x1e27c0[_0x392363 + _0x44b3e0 + 0xc] = _0x36a619 * _0x1195df[0xc] + _0x45ad44 * _0x1195df[0xd] + _0x34f1c0 * _0x1195df[0xe] + _0x585223 * _0x1195df[0xf];
            }
        }
        static ['_computeBo' + 'neAndAnima' + 'tionDatasB' + 'yBindPoseM' + 'atrxix'](_0x51cb2e, _0x53425b, _0x8b5465, _0x46b790, _0x70ca0c, _0x54f47f) {
            var _0x3992fe = 0x0, _0x4fd571 = 0x0, _0x3cd04c, _0xbacbe8, _0x50a131 = _0x51cb2e['length'];
            for (_0x3cd04c = 0x0; _0x3cd04c < _0x50a131; _0x3992fe += _0x51cb2e[_0x3cd04c]['keyframeWi' + 'dth'], _0x4fd571 += 0x10, _0x3cd04c++) {
                _0x47bed9['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x53425b[_0x3992fe + 0x0], _0x53425b[_0x3992fe + 0x1], _0x53425b[_0x3992fe + 0x2], _0x53425b[_0x3992fe + 0x3], _0x53425b[_0x3992fe + 0x4], _0x53425b[_0x3992fe + 0x5], _0x53425b[_0x3992fe + 0x6], _0x53425b[_0x3992fe + 0x7], _0x53425b[_0x3992fe + 0x8], _0x53425b[_0x3992fe + 0x9], _0x46b790, _0x4fd571), _0x3cd04c != 0x0 && (_0xbacbe8 = _0x51cb2e[_0x3cd04c]['parentInde' + 'x'] * 0x10, _0x47bed9['mulMatrixB' + 'yArray'](_0x46b790, _0xbacbe8, _0x46b790, _0x4fd571, _0x46b790, _0x4fd571));
            }
            var _0x28cb62 = _0x8b5465['length'];
            for (_0x3cd04c = 0x0; _0x3cd04c < _0x28cb62; _0x3cd04c++) {
                _0x47bed9['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x46b790, _0x54f47f[_0x3cd04c] * 0x10, _0x8b5465[_0x3cd04c], _0x70ca0c, _0x3cd04c * 0x10);
            }
        }
        static ['_computeAn' + 'imationDat' + 'asByArrayA' + 'ndMatrixFa' + 'st'](_0x27d99c, _0x47ebc6, _0x5668b1, _0x181dbf) {
            for (var _0x202afb = 0x0, _0xba94af = _0x27d99c['length']; _0x202afb < _0xba94af; _0x202afb++)
                _0x47bed9['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x47ebc6, _0x181dbf[_0x202afb] * 0x10, _0x27d99c[_0x202afb], _0x5668b1, _0x202afb * 0x10);
        }
        static ['_computeBo' + 'neAndAnima' + 'tionDatasB' + 'yBindPoseM' + 'atrxixOld'](_0x476c9b, _0x351dfb, _0x189263, _0x18d7c, _0x270272) {
            var _0x33cb8b = 0x0, _0x290690 = 0x0, _0x1dcafa, _0x3ded61, _0x588dd0 = _0x476c9b['length'];
            for (_0x1dcafa = 0x0; _0x1dcafa < _0x588dd0; _0x33cb8b += _0x476c9b[_0x1dcafa]['keyframeWi' + 'dth'], _0x290690 += 0x10, _0x1dcafa++) {
                _0x47bed9['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x351dfb[_0x33cb8b + 0x7], _0x351dfb[_0x33cb8b + 0x8], _0x351dfb[_0x33cb8b + 0x9], _0x351dfb[_0x33cb8b + 0x3], _0x351dfb[_0x33cb8b + 0x4], _0x351dfb[_0x33cb8b + 0x5], _0x351dfb[_0x33cb8b + 0x6], _0x351dfb[_0x33cb8b + 0x0], _0x351dfb[_0x33cb8b + 0x1], _0x351dfb[_0x33cb8b + 0x2], _0x18d7c, _0x290690), _0x1dcafa != 0x0 && (_0x3ded61 = _0x476c9b[_0x1dcafa]['parentInde' + 'x'] * 0x10, _0x47bed9['mulMatrixB' + 'yArray'](_0x18d7c, _0x3ded61, _0x18d7c, _0x290690, _0x18d7c, _0x290690));
            }
            var _0x327b92 = _0x189263['length'];
            for (_0x1dcafa = 0x0; _0x1dcafa < _0x327b92; _0x1dcafa++) {
                var _0x1f07da = _0x1dcafa * 0x10;
                _0x47bed9['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x18d7c, _0x1f07da, _0x189263[_0x1dcafa], _0x270272, _0x1f07da);
            }
        }
        static ['_computeAn' + 'imationDat' + 'asByArrayA' + 'ndMatrixFa' + 'stOld'](_0x272d0c, _0x35dc28, _0x438f96) {
            var _0xe13fe5 = _0x272d0c['length'];
            for (var _0x471224 = 0x0; _0x471224 < _0xe13fe5; _0x471224++) {
                var _0x56cc93 = _0x471224 * 0x10;
                _0x47bed9['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x35dc28, _0x56cc93, _0x272d0c[_0x471224], _0x438f96, _0x56cc93);
            }
        }
        static ['_computeRo' + 'otAnimatio' + 'nData'](_0x5c954a, _0x550598, _0x1be167) {
            for (var _0xffaf8f = 0x0, _0x120e7e = 0x0, _0x5cd9f2 = 0x0, _0x1fc8d4 = _0x5c954a['length']; _0xffaf8f < _0x1fc8d4; _0x120e7e += _0x5c954a[_0xffaf8f]['keyframeWi' + 'dth'], _0x5cd9f2 += 0x10, _0xffaf8f++)
                _0x47bed9['createAffi' + 'neTransfor' + 'mationArra' + 'y'](_0x550598[_0x120e7e + 0x0], _0x550598[_0x120e7e + 0x1], _0x550598[_0x120e7e + 0x2], _0x550598[_0x120e7e + 0x3], _0x550598[_0x120e7e + 0x4], _0x550598[_0x120e7e + 0x5], _0x550598[_0x120e7e + 0x6], _0x550598[_0x120e7e + 0x7], _0x550598[_0x120e7e + 0x8], _0x550598[_0x120e7e + 0x9], _0x1be167, _0x5cd9f2);
        }
        static ['transformV' + 'ector3Arra' + 'yByQuat'](_0x4b3d36, _0x15b215, _0x58d4a9, _0x2ec1e4, _0x3d12cb) {
            var _0x20bdcc = _0x4b3d36[_0x15b215], _0x5f163a = _0x4b3d36[_0x15b215 + 0x1], _0x31250d = _0x4b3d36[_0x15b215 + 0x2], _0x1dbd7c = _0x58d4a9['x'], _0x24a72e = _0x58d4a9['y'], _0x3e3ff5 = _0x58d4a9['z'], _0x780302 = _0x58d4a9['w'], _0x492801 = _0x780302 * _0x20bdcc + _0x24a72e * _0x31250d - _0x3e3ff5 * _0x5f163a, _0x226a75 = _0x780302 * _0x5f163a + _0x3e3ff5 * _0x20bdcc - _0x1dbd7c * _0x31250d, _0x436e45 = _0x780302 * _0x31250d + _0x1dbd7c * _0x5f163a - _0x24a72e * _0x20bdcc, _0x23d75d = -_0x1dbd7c * _0x20bdcc - _0x24a72e * _0x5f163a - _0x3e3ff5 * _0x31250d;
            _0x2ec1e4[_0x3d12cb] = _0x492801 * _0x780302 + _0x23d75d * -_0x1dbd7c + _0x226a75 * -_0x3e3ff5 - _0x436e45 * -_0x24a72e, _0x2ec1e4[_0x3d12cb + 0x1] = _0x226a75 * _0x780302 + _0x23d75d * -_0x24a72e + _0x436e45 * -_0x1dbd7c - _0x492801 * -_0x3e3ff5, _0x2ec1e4[_0x3d12cb + 0x2] = _0x436e45 * _0x780302 + _0x23d75d * -_0x3e3ff5 + _0x492801 * -_0x24a72e - _0x226a75 * -_0x1dbd7c;
        }
        static ['mulMatrixB' + 'yArray'](_0x3be3e8, _0x185ad3, _0x495146, _0x5c5729, _0xf5699e, _0x387b72) {
            var _0x5de56e, _0x16105b, _0x514b7e, _0x360a4a, _0x1f8791;
            if (_0xf5699e === _0x495146) {
                _0x495146 = _0x47bed9['_tempArray' + '16_3'];
                for (_0x5de56e = 0x0; _0x5de56e < 0x10; ++_0x5de56e) {
                    _0x495146[_0x5de56e] = _0xf5699e[_0x387b72 + _0x5de56e];
                }
                _0x5c5729 = 0x0;
            }
            for (_0x5de56e = 0x0; _0x5de56e < 0x4; _0x5de56e++) {
                _0x16105b = _0x3be3e8[_0x185ad3 + _0x5de56e], _0x514b7e = _0x3be3e8[_0x185ad3 + _0x5de56e + 0x4], _0x360a4a = _0x3be3e8[_0x185ad3 + _0x5de56e + 0x8], _0x1f8791 = _0x3be3e8[_0x185ad3 + _0x5de56e + 0xc], _0xf5699e[_0x387b72 + _0x5de56e] = _0x16105b * _0x495146[_0x5c5729 + 0x0] + _0x514b7e * _0x495146[_0x5c5729 + 0x1] + _0x360a4a * _0x495146[_0x5c5729 + 0x2] + _0x1f8791 * _0x495146[_0x5c5729 + 0x3], _0xf5699e[_0x387b72 + _0x5de56e + 0x4] = _0x16105b * _0x495146[_0x5c5729 + 0x4] + _0x514b7e * _0x495146[_0x5c5729 + 0x5] + _0x360a4a * _0x495146[_0x5c5729 + 0x6] + _0x1f8791 * _0x495146[_0x5c5729 + 0x7], _0xf5699e[_0x387b72 + _0x5de56e + 0x8] = _0x16105b * _0x495146[_0x5c5729 + 0x8] + _0x514b7e * _0x495146[_0x5c5729 + 0x9] + _0x360a4a * _0x495146[_0x5c5729 + 0xa] + _0x1f8791 * _0x495146[_0x5c5729 + 0xb], _0xf5699e[_0x387b72 + _0x5de56e + 0xc] = _0x16105b * _0x495146[_0x5c5729 + 0xc] + _0x514b7e * _0x495146[_0x5c5729 + 0xd] + _0x360a4a * _0x495146[_0x5c5729 + 0xe] + _0x1f8791 * _0x495146[_0x5c5729 + 0xf];
            }
        }
        static ['mulMatrixB' + 'yArrayFast'](_0x4b4577, _0x228d0f, _0xc20c17, _0x3544c3, _0x183210, _0x2b7a58) {
            var _0x421ba9, _0x1e7d04, _0x44129c, _0x4267ed, _0x51fa5a;
            for (_0x421ba9 = 0x0; _0x421ba9 < 0x4; _0x421ba9++) {
                _0x1e7d04 = _0x4b4577[_0x228d0f + _0x421ba9], _0x44129c = _0x4b4577[_0x228d0f + _0x421ba9 + 0x4], _0x4267ed = _0x4b4577[_0x228d0f + _0x421ba9 + 0x8], _0x51fa5a = _0x4b4577[_0x228d0f + _0x421ba9 + 0xc], _0x183210[_0x2b7a58 + _0x421ba9] = _0x1e7d04 * _0xc20c17[_0x3544c3 + 0x0] + _0x44129c * _0xc20c17[_0x3544c3 + 0x1] + _0x4267ed * _0xc20c17[_0x3544c3 + 0x2] + _0x51fa5a * _0xc20c17[_0x3544c3 + 0x3], _0x183210[_0x2b7a58 + _0x421ba9 + 0x4] = _0x1e7d04 * _0xc20c17[_0x3544c3 + 0x4] + _0x44129c * _0xc20c17[_0x3544c3 + 0x5] + _0x4267ed * _0xc20c17[_0x3544c3 + 0x6] + _0x51fa5a * _0xc20c17[_0x3544c3 + 0x7], _0x183210[_0x2b7a58 + _0x421ba9 + 0x8] = _0x1e7d04 * _0xc20c17[_0x3544c3 + 0x8] + _0x44129c * _0xc20c17[_0x3544c3 + 0x9] + _0x4267ed * _0xc20c17[_0x3544c3 + 0xa] + _0x51fa5a * _0xc20c17[_0x3544c3 + 0xb], _0x183210[_0x2b7a58 + _0x421ba9 + 0xc] = _0x1e7d04 * _0xc20c17[_0x3544c3 + 0xc] + _0x44129c * _0xc20c17[_0x3544c3 + 0xd] + _0x4267ed * _0xc20c17[_0x3544c3 + 0xe] + _0x51fa5a * _0xc20c17[_0x3544c3 + 0xf];
            }
        }
        static ['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x59f503, _0x1af28c, _0xd6892f, _0x25a1bd, _0x1a833f) {
            var _0x26593a, _0xc14779, _0x3ea553, _0x56c398, _0x13f2d1, _0x2496ba = _0xd6892f['elements'], _0x508171 = _0x2496ba[0x0], _0x3aca96 = _0x2496ba[0x1], _0x2fe487 = _0x2496ba[0x2], _0x29b175 = _0x2496ba[0x3], _0xe1e400 = _0x2496ba[0x4], _0x3beb68 = _0x2496ba[0x5], _0x10ed8f = _0x2496ba[0x6], _0x31cb60 = _0x2496ba[0x7], _0x3822b7 = _0x2496ba[0x8], _0x2e1a24 = _0x2496ba[0x9], _0x4192b5 = _0x2496ba[0xa], _0x26666e = _0x2496ba[0xb], _0x5c9f8a = _0x2496ba[0xc], _0x4d0cfd = _0x2496ba[0xd], _0x5b9d8f = _0x2496ba[0xe], _0x152955 = _0x2496ba[0xf], _0x35f042 = _0x1af28c, _0x4e89ae = _0x1af28c + 0x4, _0x18d707 = _0x1af28c + 0x8, _0x4eb3d = _0x1af28c + 0xc, _0x28e00a = _0x1a833f, _0x55cf37 = _0x1a833f + 0x4, _0x30d9c8 = _0x1a833f + 0x8, _0x4b7ae4 = _0x1a833f + 0xc;
            for (_0x26593a = 0x0; _0x26593a < 0x4; _0x26593a++) {
                _0xc14779 = _0x59f503[_0x35f042 + _0x26593a], _0x3ea553 = _0x59f503[_0x4e89ae + _0x26593a], _0x56c398 = _0x59f503[_0x18d707 + _0x26593a], _0x13f2d1 = _0x59f503[_0x4eb3d + _0x26593a], _0x25a1bd[_0x28e00a + _0x26593a] = _0xc14779 * _0x508171 + _0x3ea553 * _0x3aca96 + _0x56c398 * _0x2fe487 + _0x13f2d1 * _0x29b175, _0x25a1bd[_0x55cf37 + _0x26593a] = _0xc14779 * _0xe1e400 + _0x3ea553 * _0x3beb68 + _0x56c398 * _0x10ed8f + _0x13f2d1 * _0x31cb60, _0x25a1bd[_0x30d9c8 + _0x26593a] = _0xc14779 * _0x3822b7 + _0x3ea553 * _0x2e1a24 + _0x56c398 * _0x4192b5 + _0x13f2d1 * _0x26666e, _0x25a1bd[_0x4b7ae4 + _0x26593a] = _0xc14779 * _0x5c9f8a + _0x3ea553 * _0x4d0cfd + _0x56c398 * _0x5b9d8f + _0x13f2d1 * _0x152955;
            }
        }
        static ['createAffi' + 'neTransfor' + 'mationArra' + 'y'](_0x4bc695, _0x163bf4, _0x119e39, _0x1a03f4, _0x37a5cb, _0x6b1d59, _0x3fb195, _0x52cfab, _0x4ea8c3, _0x227a69, _0x4faf80, _0x4f8852) {
            var _0x337171 = _0x1a03f4 + _0x1a03f4, _0x3d88cf = _0x37a5cb + _0x37a5cb, _0x43340b = _0x6b1d59 + _0x6b1d59, _0x804fad = _0x1a03f4 * _0x337171, _0x3ee6d7 = _0x1a03f4 * _0x3d88cf, _0x2bb2fd = _0x1a03f4 * _0x43340b, _0x3372e4 = _0x37a5cb * _0x3d88cf, _0x217c8a = _0x37a5cb * _0x43340b, _0x3dffbf = _0x6b1d59 * _0x43340b, _0x263812 = _0x3fb195 * _0x337171, _0x465a5d = _0x3fb195 * _0x3d88cf, _0x1b2be7 = _0x3fb195 * _0x43340b;
            _0x4faf80[_0x4f8852 + 0x0] = (0x1 - (_0x3372e4 + _0x3dffbf)) * _0x52cfab, _0x4faf80[_0x4f8852 + 0x1] = (_0x3ee6d7 + _0x1b2be7) * _0x52cfab, _0x4faf80[_0x4f8852 + 0x2] = (_0x2bb2fd - _0x465a5d) * _0x52cfab, _0x4faf80[_0x4f8852 + 0x3] = 0x0, _0x4faf80[_0x4f8852 + 0x4] = (_0x3ee6d7 - _0x1b2be7) * _0x4ea8c3, _0x4faf80[_0x4f8852 + 0x5] = (0x1 - (_0x804fad + _0x3dffbf)) * _0x4ea8c3, _0x4faf80[_0x4f8852 + 0x6] = (_0x217c8a + _0x263812) * _0x4ea8c3, _0x4faf80[_0x4f8852 + 0x7] = 0x0, _0x4faf80[_0x4f8852 + 0x8] = (_0x2bb2fd + _0x465a5d) * _0x227a69, _0x4faf80[_0x4f8852 + 0x9] = (_0x217c8a - _0x263812) * _0x227a69, _0x4faf80[_0x4f8852 + 0xa] = (0x1 - (_0x804fad + _0x3372e4)) * _0x227a69, _0x4faf80[_0x4f8852 + 0xb] = 0x0, _0x4faf80[_0x4f8852 + 0xc] = _0x4bc695, _0x4faf80[_0x4f8852 + 0xd] = _0x163bf4, _0x4faf80[_0x4f8852 + 0xe] = _0x119e39, _0x4faf80[_0x4f8852 + 0xf] = 0x1;
        }
        static ['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x4da05c, _0x2979fa, _0x29f201, _0x35eae6, _0x3fe512) {
            var _0x5509df = _0x4da05c[_0x2979fa + 0x0], _0x37e3e3 = _0x4da05c[_0x2979fa + 0x1], _0x3b8856 = _0x4da05c[_0x2979fa + 0x2], _0x771cd0 = _0x29f201['elements'], _0x354a76 = _0x5509df * _0x771cd0[0x3] + _0x37e3e3 * _0x771cd0[0x7] + _0x3b8856 * _0x771cd0[0xb] + _0x771cd0[0xf];
            _0x35eae6[_0x3fe512] = _0x5509df * _0x771cd0[0x0] + _0x37e3e3 * _0x771cd0[0x4] + _0x3b8856 * _0x771cd0[0x8] + _0x771cd0[0xc] / _0x354a76, _0x35eae6[_0x3fe512 + 0x1] = _0x5509df * _0x771cd0[0x1] + _0x37e3e3 * _0x771cd0[0x5] + _0x3b8856 * _0x771cd0[0x9] + _0x771cd0[0xd] / _0x354a76, _0x35eae6[_0x3fe512 + 0x2] = _0x5509df * _0x771cd0[0x2] + _0x37e3e3 * _0x771cd0[0x6] + _0x3b8856 * _0x771cd0[0xa] + _0x771cd0[0xe] / _0x354a76;
        }
        static ['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x2656ab, _0x56134e, _0x50f08f, _0x2f4a76, _0x449639) {
            var _0x367094 = _0x2656ab[_0x56134e + 0x0], _0x38d63f = _0x2656ab[_0x56134e + 0x1], _0x4a0bc2 = _0x2656ab[_0x56134e + 0x2], _0x24cb9e = _0x50f08f['elements'];
            _0x2f4a76[_0x449639] = _0x367094 * _0x24cb9e[0x0] + _0x38d63f * _0x24cb9e[0x4] + _0x4a0bc2 * _0x24cb9e[0x8], _0x2f4a76[_0x449639 + 0x1] = _0x367094 * _0x24cb9e[0x1] + _0x38d63f * _0x24cb9e[0x5] + _0x4a0bc2 * _0x24cb9e[0x9], _0x2f4a76[_0x449639 + 0x2] = _0x367094 * _0x24cb9e[0x2] + _0x38d63f * _0x24cb9e[0x6] + _0x4a0bc2 * _0x24cb9e[0xa];
        }
        static ['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x52ba8e, _0x4f4108, _0x1dc6ac, _0x229ef3, _0x53794a) {
            _0x229ef3[_0x53794a + 0x0] = _0x52ba8e[_0x4f4108 + 0x0] * _0x1dc6ac['x'] + _0x1dc6ac['z'], _0x229ef3[_0x53794a + 0x1] = 0x1 - ((0x1 - _0x52ba8e[_0x4f4108 + 0x1]) * _0x1dc6ac['y'] + _0x1dc6ac['w']);
        }
        static ['getURLVeri' + 'on'](_0x270618) {
            var _0x17647f = _0x270618['indexOf']('?');
            return _0x17647f >= 0x0 ? _0x270618['substr'](_0x17647f) : null;
        }
        static ['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](_0x2e533b, _0x1de87e, _0xfa813c, _0x1cf5ef) {
            var _0x1940e0 = _0x1de87e['x'], _0x143e03 = _0x1de87e['y'], _0xe1c014 = _0x1de87e['z'], _0x36f721 = _0x1de87e['w'], _0x33a20a = _0x1940e0 + _0x1940e0, _0x2f21c1 = _0x143e03 + _0x143e03, _0x278383 = _0xe1c014 + _0xe1c014, _0x340377 = _0x1940e0 * _0x33a20a, _0x32e827 = _0x1940e0 * _0x2f21c1, _0x21b5f4 = _0x1940e0 * _0x278383, _0xec1497 = _0x143e03 * _0x2f21c1, _0x2fe77d = _0x143e03 * _0x278383, _0x189273 = _0xe1c014 * _0x278383, _0x99702f = _0x36f721 * _0x33a20a, _0x1d47ec = _0x36f721 * _0x2f21c1, _0x1913ad = _0x36f721 * _0x278383, _0x50a50c = _0xfa813c['x'], _0x3593f8 = _0xfa813c['y'], _0x4c7300 = _0xfa813c['z'];
            _0x1cf5ef[0x0] = (0x1 - (_0xec1497 + _0x189273)) * _0x50a50c, _0x1cf5ef[0x1] = (_0x32e827 + _0x1913ad) * _0x50a50c, _0x1cf5ef[0x2] = (_0x21b5f4 - _0x1d47ec) * _0x50a50c, _0x1cf5ef[0x3] = 0x0, _0x1cf5ef[0x4] = (_0x32e827 - _0x1913ad) * _0x3593f8, _0x1cf5ef[0x5] = (0x1 - (_0x340377 + _0x189273)) * _0x3593f8, _0x1cf5ef[0x6] = (_0x2fe77d + _0x99702f) * _0x3593f8, _0x1cf5ef[0x7] = 0x0, _0x1cf5ef[0x8] = (_0x21b5f4 + _0x1d47ec) * _0x4c7300, _0x1cf5ef[0x9] = (_0x2fe77d - _0x99702f) * _0x4c7300, _0x1cf5ef[0xa] = (0x1 - (_0x340377 + _0xec1497)) * _0x4c7300, _0x1cf5ef[0xb] = 0x0, _0x1cf5ef[0xc] = _0x2e533b['x'], _0x1cf5ef[0xd] = _0x2e533b['y'], _0x1cf5ef[0xe] = _0x2e533b['z'], _0x1cf5ef[0xf] = 0x1;
        }
        static ['_mulMatrix' + 'Array'](_0x167f04, _0x2076d5, _0x1f7535, _0x42e345, _0x404c14) {
            var _0x4f4824 = _0x2076d5, _0x517257 = _0x167f04, _0x30ea99 = _0x42e345, _0x24628c = _0x4f4824[_0x1f7535], _0xda5b70 = _0x4f4824[_0x1f7535 + 0x1], _0x24fa29 = _0x4f4824[_0x1f7535 + 0x2], _0x4e499d = _0x4f4824[_0x1f7535 + 0x3], _0x50a0d8 = _0x4f4824[_0x1f7535 + 0x4], _0x3e31b2 = _0x4f4824[_0x1f7535 + 0x5], _0x5743dd = _0x4f4824[_0x1f7535 + 0x6], _0x4cc50b = _0x4f4824[_0x1f7535 + 0x7], _0x2cc8b4 = _0x4f4824[_0x1f7535 + 0x8], _0xa2ffa5 = _0x4f4824[_0x1f7535 + 0x9], _0x39bb55 = _0x4f4824[_0x1f7535 + 0xa], _0x151166 = _0x4f4824[_0x1f7535 + 0xb], _0x58db98 = _0x4f4824[_0x1f7535 + 0xc], _0x4d38f3 = _0x4f4824[_0x1f7535 + 0xd], _0x5ea84f = _0x4f4824[_0x1f7535 + 0xe], _0x5022b5 = _0x4f4824[_0x1f7535 + 0xf], _0xf53779 = _0x517257[0x0], _0x1f35c6 = _0x517257[0x1], _0x36ca35 = _0x517257[0x2], _0x612ec3 = _0x517257[0x3], _0x57b524 = _0x517257[0x4], _0x5eff16 = _0x517257[0x5], _0x32b1b0 = _0x517257[0x6], _0x66c456 = _0x517257[0x7], _0x4a20db = _0x517257[0x8], _0x862575 = _0x517257[0x9], _0x11d453 = _0x517257[0xa], _0x510154 = _0x517257[0xb], _0x5223f1 = _0x517257[0xc], _0x28ad7b = _0x517257[0xd], _0x3e6f16 = _0x517257[0xe], _0x46a07a = _0x517257[0xf];
            _0x30ea99[_0x404c14] = _0x24628c * _0xf53779 + _0xda5b70 * _0x57b524 + _0x24fa29 * _0x4a20db + _0x4e499d * _0x5223f1, _0x30ea99[_0x404c14 + 0x1] = _0x24628c * _0x1f35c6 + _0xda5b70 * _0x5eff16 + _0x24fa29 * _0x862575 + _0x4e499d * _0x28ad7b, _0x30ea99[_0x404c14 + 0x2] = _0x24628c * _0x36ca35 + _0xda5b70 * _0x32b1b0 + _0x24fa29 * _0x11d453 + _0x4e499d * _0x3e6f16, _0x30ea99[_0x404c14 + 0x3] = _0x24628c * _0x612ec3 + _0xda5b70 * _0x66c456 + _0x24fa29 * _0x510154 + _0x4e499d * _0x46a07a, _0x30ea99[_0x404c14 + 0x4] = _0x50a0d8 * _0xf53779 + _0x3e31b2 * _0x57b524 + _0x5743dd * _0x4a20db + _0x4cc50b * _0x5223f1, _0x30ea99[_0x404c14 + 0x5] = _0x50a0d8 * _0x1f35c6 + _0x3e31b2 * _0x5eff16 + _0x5743dd * _0x862575 + _0x4cc50b * _0x28ad7b, _0x30ea99[_0x404c14 + 0x6] = _0x50a0d8 * _0x36ca35 + _0x3e31b2 * _0x32b1b0 + _0x5743dd * _0x11d453 + _0x4cc50b * _0x3e6f16, _0x30ea99[_0x404c14 + 0x7] = _0x50a0d8 * _0x612ec3 + _0x3e31b2 * _0x66c456 + _0x5743dd * _0x510154 + _0x4cc50b * _0x46a07a, _0x30ea99[_0x404c14 + 0x8] = _0x2cc8b4 * _0xf53779 + _0xa2ffa5 * _0x57b524 + _0x39bb55 * _0x4a20db + _0x151166 * _0x5223f1, _0x30ea99[_0x404c14 + 0x9] = _0x2cc8b4 * _0x1f35c6 + _0xa2ffa5 * _0x5eff16 + _0x39bb55 * _0x862575 + _0x151166 * _0x28ad7b, _0x30ea99[_0x404c14 + 0xa] = _0x2cc8b4 * _0x36ca35 + _0xa2ffa5 * _0x32b1b0 + _0x39bb55 * _0x11d453 + _0x151166 * _0x3e6f16, _0x30ea99[_0x404c14 + 0xb] = _0x2cc8b4 * _0x612ec3 + _0xa2ffa5 * _0x66c456 + _0x39bb55 * _0x510154 + _0x151166 * _0x46a07a, _0x30ea99[_0x404c14 + 0xc] = _0x58db98 * _0xf53779 + _0x4d38f3 * _0x57b524 + _0x5ea84f * _0x4a20db + _0x5022b5 * _0x5223f1, _0x30ea99[_0x404c14 + 0xd] = _0x58db98 * _0x1f35c6 + _0x4d38f3 * _0x5eff16 + _0x5ea84f * _0x862575 + _0x5022b5 * _0x28ad7b, _0x30ea99[_0x404c14 + 0xe] = _0x58db98 * _0x36ca35 + _0x4d38f3 * _0x32b1b0 + _0x5ea84f * _0x11d453 + _0x5022b5 * _0x3e6f16, _0x30ea99[_0x404c14 + 0xf] = _0x58db98 * _0x612ec3 + _0x4d38f3 * _0x66c456 + _0x5ea84f * _0x510154 + _0x5022b5 * _0x46a07a;
        }
        static ['arcTanAngl' + 'e'](_0x527e76, _0x456464) {
            if (_0x527e76 == 0x0) {
                if (_0x456464 == 0x1)
                    return Math['PI'] / 0x2;
                return -Math['PI'] / 0x2;
            }
            if (_0x527e76 > 0x0)
                return Math['atan'](_0x456464 / _0x527e76);
            if (_0x527e76 < 0x0) {
                if (_0x456464 > 0x0)
                    return Math['atan'](_0x456464 / _0x527e76) + Math['PI'];
                return Math['atan'](_0x456464 / _0x527e76) - Math['PI'];
            }
            return 0x0;
        }
        static ['angleTo'](_0x146ca6, _0x4811ce, _0x52250b) {
            _0x352206['subtract'](_0x4811ce, _0x146ca6, _0x388291['TEMPVector' + '30']), _0x352206['normalize'](_0x388291['TEMPVector' + '30'], _0x388291['TEMPVector' + '30']), _0x52250b['x'] = Math['asin'](_0x388291['TEMPVector' + '30']['y']), _0x52250b['y'] = _0x47bed9['arcTanAngl' + 'e'](-_0x388291['TEMPVector' + '30']['z'], -_0x388291['TEMPVector' + '30']['x']);
        }
        static ['transformQ' + 'uat'](_0x47739f, _0x2d4d1a, _0xf485b1) {
            var _0x486001 = _0x2d4d1a, _0x3c4b4c = _0x47739f['x'], _0x99e06 = _0x47739f['y'], _0x4929e = _0x47739f['z'], _0x13600e = _0x486001[0x0], _0x912098 = _0x486001[0x1], _0x41f138 = _0x486001[0x2], _0xd4bdab = _0x486001[0x3], _0x4e1b3d = _0xd4bdab * _0x3c4b4c + _0x912098 * _0x4929e - _0x41f138 * _0x99e06, _0x3789ab = _0xd4bdab * _0x99e06 + _0x41f138 * _0x3c4b4c - _0x13600e * _0x4929e, _0x20ce03 = _0xd4bdab * _0x4929e + _0x13600e * _0x99e06 - _0x912098 * _0x3c4b4c, _0x19dd38 = -_0x13600e * _0x3c4b4c - _0x912098 * _0x99e06 - _0x41f138 * _0x4929e;
            _0xf485b1['x'] = _0x4e1b3d * _0xd4bdab + _0x19dd38 * -_0x13600e + _0x3789ab * -_0x41f138 - _0x20ce03 * -_0x912098, _0xf485b1['y'] = _0x3789ab * _0xd4bdab + _0x19dd38 * -_0x912098 + _0x20ce03 * -_0x13600e - _0x4e1b3d * -_0x41f138, _0xf485b1['z'] = _0x20ce03 * _0xd4bdab + _0x19dd38 * -_0x41f138 + _0x4e1b3d * -_0x912098 - _0x3789ab * -_0x13600e;
        }
        static ['quaternion' + 'Weight'](_0x200324, _0x30e791, _0x16c1e6) {
            _0x16c1e6['x'] = _0x200324['x'] * _0x30e791, _0x16c1e6['y'] = _0x200324['y'] * _0x30e791, _0x16c1e6['z'] = _0x200324['z'] * _0x30e791, _0x16c1e6['w'] = _0x200324['w'];
        }
        static ['quaternion' + 'Conjugate'](_0x570141, _0x2219c7) {
            _0x2219c7['x'] = -_0x570141['x'], _0x2219c7['y'] = -_0x570141['y'], _0x2219c7['z'] = -_0x570141['z'], _0x2219c7['w'] = _0x570141['w'];
        }
        static ['scaleWeigh' + 't'](_0x1eac37, _0x12caac, _0x2eb759) {
            var _0x2e7a5e = _0x1eac37['x'], _0x5d62b9 = _0x1eac37['y'], _0x43c00f = _0x1eac37['z'];
            _0x2eb759['x'] = _0x2e7a5e > 0x0 ? Math['pow'](Math['abs'](_0x2e7a5e), _0x12caac) : -Math['pow'](Math['abs'](_0x2e7a5e), _0x12caac), _0x2eb759['y'] = _0x5d62b9 > 0x0 ? Math['pow'](Math['abs'](_0x5d62b9), _0x12caac) : -Math['pow'](Math['abs'](_0x5d62b9), _0x12caac), _0x2eb759['z'] = _0x43c00f > 0x0 ? Math['pow'](Math['abs'](_0x43c00f), _0x12caac) : -Math['pow'](Math['abs'](_0x43c00f), _0x12caac);
        }
        static ['scaleBlend'](_0x529679, _0x1957a2, _0x1facab, _0x8149ef) {
            var _0x2b5793 = _0x47bed9['_tempVecto' + 'r3_0'], _0x55e48d = _0x47bed9['_tempVecto' + 'r3_1'];
            _0x47bed9['scaleWeigh' + 't'](_0x529679, 0x1 - _0x1facab, _0x2b5793), _0x47bed9['scaleWeigh' + 't'](_0x1957a2, _0x1facab, _0x55e48d);
            var _0x252d4c = _0x1facab > 0.5 ? _0x1957a2 : _0x529679;
            _0x8149ef['x'] = _0x252d4c['x'] > 0x0 ? Math['abs'](_0x2b5793['x'] * _0x55e48d['x']) : -Math['abs'](_0x2b5793['x'] * _0x55e48d['x']), _0x8149ef['y'] = _0x252d4c['y'] > 0x0 ? Math['abs'](_0x2b5793['y'] * _0x55e48d['y']) : -Math['abs'](_0x2b5793['y'] * _0x55e48d['y']), _0x8149ef['z'] = _0x252d4c['z'] > 0x0 ? Math['abs'](_0x2b5793['z'] * _0x55e48d['z']) : -Math['abs'](_0x2b5793['z'] * _0x55e48d['z']);
        }
        static ['matrix4x4M' + 'ultiplyFFF'](_0x4345b8, _0x582d65, _0x14b6a3) {
            var _0x167749, _0xb9d6f, _0x242f0e, _0x31eb2d, _0x24dbb9;
            if (_0x14b6a3 === _0x582d65) {
                _0x582d65 = new Float32Array(0x10);
                for (_0x167749 = 0x0; _0x167749 < 0x10; ++_0x167749) {
                    _0x582d65[_0x167749] = _0x14b6a3[_0x167749];
                }
            }
            var _0x1e4a2e = _0x582d65[0x0], _0x35ac04 = _0x582d65[0x1], _0x35bb47 = _0x582d65[0x2], _0x699ac1 = _0x582d65[0x3], _0x32113a = _0x582d65[0x4], _0x5ac757 = _0x582d65[0x5], _0xe38e2a = _0x582d65[0x6], _0x2151d7 = _0x582d65[0x7], _0x2984eb = _0x582d65[0x8], _0x27f6a6 = _0x582d65[0x9], _0x51ed89 = _0x582d65[0xa], _0x474bf5 = _0x582d65[0xb], _0x380685 = _0x582d65[0xc], _0x1365a8 = _0x582d65[0xd], _0x161b71 = _0x582d65[0xe], _0x554870 = _0x582d65[0xf];
            for (_0x167749 = 0x0; _0x167749 < 0x4; _0x167749++) {
                _0xb9d6f = _0x4345b8[_0x167749], _0x242f0e = _0x4345b8[_0x167749 + 0x4], _0x31eb2d = _0x4345b8[_0x167749 + 0x8], _0x24dbb9 = _0x4345b8[_0x167749 + 0xc], _0x14b6a3[_0x167749] = _0xb9d6f * _0x1e4a2e + _0x242f0e * _0x35ac04 + _0x31eb2d * _0x35bb47 + _0x24dbb9 * _0x699ac1, _0x14b6a3[_0x167749 + 0x4] = _0xb9d6f * _0x32113a + _0x242f0e * _0x5ac757 + _0x31eb2d * _0xe38e2a + _0x24dbb9 * _0x2151d7, _0x14b6a3[_0x167749 + 0x8] = _0xb9d6f * _0x2984eb + _0x242f0e * _0x27f6a6 + _0x31eb2d * _0x51ed89 + _0x24dbb9 * _0x474bf5, _0x14b6a3[_0x167749 + 0xc] = _0xb9d6f * _0x380685 + _0x242f0e * _0x1365a8 + _0x31eb2d * _0x161b71 + _0x24dbb9 * _0x554870;
            }
        }
        static ['matrix4x4M' + 'ultiplyFFF' + 'ForNative'](_0x205965, _0x27e79d, _0x2ebb8f) {
            _0x442335['LayaGL']['instance']['matrix4x4M' + 'ultiply'](_0x205965, _0x27e79d, _0x2ebb8f);
        }
        static ['matrix4x4M' + 'ultiplyMFM'](_0x3fbde2, _0x4780c1, _0x3977ae) {
            _0x47bed9['matrix4x4M' + 'ultiplyFFF'](_0x3fbde2['elements'], _0x4780c1, _0x3977ae['elements']);
        }
        static ['_buildText' + 'ure2D'](_0x49f200, _0x4d9b20, _0x50c7f3, _0x1bfb40, _0x33a1b4 = ![]) {
            var _0x54aeec = new _0x442335['Texture2D'](_0x49f200, _0x4d9b20, _0x50c7f3, _0x33a1b4, !![]);
            return _0x54aeec['anisoLevel'] = 0x1, _0x54aeec['filterMode'] = _0x442335['FilterMode']['Point'], _0x59e616['_generateT' + 'exture2D'](_0x54aeec, _0x49f200, _0x4d9b20, _0x1bfb40), _0x54aeec;
        }
        static ['_drawBound'](_0x326224, _0x441eaf, _0x4676f6) {
            if (_0x326224['lineCount'] + 0xc > _0x326224['maxLineCou' + 'nt'])
                _0x326224['maxLineCou' + 'nt'] += 0xc;
            var _0x39ba26 = _0x47bed9['_tempVecto' + 'r3_0'], _0x2a19ba = _0x47bed9['_tempVecto' + 'r3_1'], _0x32554d = _0x441eaf['min'], _0x4a7783 = _0x441eaf['max'];
            _0x39ba26['setValue'](_0x32554d['x'], _0x32554d['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x32554d['y'], _0x32554d['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x32554d['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x32554d['x'], _0x32554d['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x4a7783['x'], _0x32554d['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x32554d['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x32554d['y'], _0x4a7783['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x32554d['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x32554d['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x32554d['x'], _0x4a7783['y'], _0x32554d['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x32554d['y'], _0x4a7783['z']), _0x2a19ba['setValue'](_0x32554d['x'], _0x4a7783['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x4a7783['x'], _0x32554d['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x4a7783['y'], _0x32554d['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x4a7783['x'], _0x32554d['y'], _0x4a7783['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x4a7783['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x4a7783['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x4a7783['y'], _0x32554d['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x4a7783['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x32554d['x'], _0x4a7783['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x4a7783['x'], _0x4a7783['y'], _0x32554d['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x4a7783['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6), _0x39ba26['setValue'](_0x32554d['x'], _0x4a7783['y'], _0x4a7783['z']), _0x2a19ba['setValue'](_0x4a7783['x'], _0x4a7783['y'], _0x4a7783['z']), _0x326224['addLine'](_0x39ba26, _0x2a19ba, _0x4676f6, _0x4676f6);
        }
        static ['_getHierar' + 'chyPath'](_0x929277, _0x497c79, _0x9dfdc8) {
            _0x9dfdc8['length'] = 0x0;
            var _0x23fa89 = _0x497c79;
            while (_0x23fa89 !== _0x929277) {
                var _0x27ef6d = _0x23fa89['_parent'];
                if (_0x27ef6d)
                    _0x9dfdc8['push'](_0x27ef6d['getChildIn' + 'dex'](_0x23fa89));
                else
                    return null;
                _0x23fa89 = _0x27ef6d;
            }
            return _0x9dfdc8;
        }
        static ['_getNodeBy' + 'HierarchyP' + 'ath'](_0x2f8d82, _0x25869c) {
            var _0x23e225 = _0x2f8d82;
            for (var _0x16b81d = _0x25869c['length'] - 0x1; _0x16b81d >= 0x0; _0x16b81d--) {
                _0x23e225 = _0x23e225['getChildAt'](_0x25869c[_0x16b81d]);
            }
            return _0x23e225;
        }
    }
    _0x47bed9['_tempVecto' + 'r3_0'] = new _0x352206(), _0x47bed9['_tempVecto' + 'r3_1'] = new _0x352206(), _0x47bed9['_tempArray' + '16_0'] = new Float32Array(0x10), _0x47bed9['_tempArray' + '16_1'] = new Float32Array(0x10), _0x47bed9['_tempArray' + '16_2'] = new Float32Array(0x10), _0x47bed9['_tempArray' + '16_3'] = new Float32Array(0x10), _0x47bed9['_compIdToN' + 'ode'] = new Object();
    class _0x4cc0ca extends _0x3e3f17 {
        constructor(_0x1963b3 = 0.1, _0x12e87d = null, _0x2d7bd5 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x2373aa = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x2d7bd5, _0x2373aa), this['_upAxis'] = new _0x352206(0x0, 0x1, 0x0), this['_maxSlope'] = 0x2d, this['_jumpSpeed'] = 0xa, this['_fallSpeed'] = 0x37, this['_gravity'] = new _0x352206(0x0, -9.8 * 0x3, 0x0), this['_btKinemat' + 'icCharacte' + 'r'] = null, this['_stepHeigh' + 't'] = _0x1963b3, _0x12e87d && (this['_upAxis'] = _0x12e87d), this['_controlBy' + 'Simulation'] = !![];
        }
        static ['__init__']() {
            _0x4cc0ca['_btTempVec' + 'tor30'] = _0x207eb6['Physics3D']['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['fallSpeed']() {
            return this['_fallSpeed'];
        }
        set ['fallSpeed'](_0x3ddafe) {
            this['_fallSpeed'] = _0x3ddafe, _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setFallSp' + 'eed'](this['_btKinemat' + 'icCharacte' + 'r'], _0x3ddafe);
        }
        get ['jumpSpeed']() {
            return this['_jumpSpeed'];
        }
        set ['jumpSpeed'](_0x5a96c0) {
            this['_jumpSpeed'] = _0x5a96c0, _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setJumpSp' + 'eed'](this['_btKinemat' + 'icCharacte' + 'r'], _0x5a96c0);
        }
        get ['gravity']() {
            return this['_gravity'];
        }
        set ['gravity'](_0x29b0bf) {
            this['_gravity'] = _0x29b0bf;
            var _0x448bc9 = _0x207eb6['Physics3D']['_bullet'], _0x5cf92a = _0x4cc0ca['_btTempVec' + 'tor30'];
            _0x448bc9['btVector3_' + 'setValue'](_0x5cf92a, -_0x29b0bf['x'], _0x29b0bf['y'], _0x29b0bf['z']), _0x448bc9['btKinemati' + 'cCharacter' + 'Controller' + '_setGravit' + 'y'](this['_btKinemat' + 'icCharacte' + 'r'], _0x5cf92a);
        }
        get ['maxSlope']() {
            return this['_maxSlope'];
        }
        set ['maxSlope'](_0x597a48) {
            this['_maxSlope'] = _0x597a48, _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setMaxSlo' + 'pe'](this['_btKinemat' + 'icCharacte' + 'r'], _0x597a48 / 0xb4 * Math['PI']);
        }
        get ['isGrounded']() {
            return _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_onGround'](this['_btKinemat' + 'icCharacte' + 'r']);
        }
        get ['stepHeight']() {
            return this['_stepHeigh' + 't'];
        }
        set ['stepHeight'](_0x1ef18e) {
            this['_stepHeigh' + 't'] = _0x1ef18e, _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setStepHe' + 'ight'](this['_btKinemat' + 'icCharacte' + 'r'], _0x1ef18e);
        }
        get ['upAxis']() {
            return this['_upAxis'];
        }
        set ['upAxis'](_0x21db7e) {
            this['_upAxis'] = _0x21db7e;
            var _0x34edd8 = _0x4cc0ca['_btTempVec' + 'tor30'];
            _0x47bed9['_convertTo' + 'BulletVec3'](_0x21db7e, _0x34edd8, ![]), _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setUp'](this['_btKinemat' + 'icCharacte' + 'r'], _0x34edd8);
        }
        ['_construct' + 'Character']() {
            var _0x2d9927 = _0x207eb6['Physics3D']['_bullet'];
            if (this['_btKinemat' + 'icCharacte' + 'r'])
                _0x2d9927['btKinemati' + 'cCharacter' + 'Controller' + '_destroy'](this['_btKinemat' + 'icCharacte' + 'r']);
            var _0x3a7611 = _0x4cc0ca['_btTempVec' + 'tor30'];
            _0x2d9927['btVector3_' + 'setValue'](_0x3a7611, this['_upAxis']['x'], this['_upAxis']['y'], this['_upAxis']['z']), this['_btKinemat' + 'icCharacte' + 'r'] = _0x2d9927['btKinemati' + 'cCharacter' + 'Controller' + '_create'](this['_btCollide' + 'rObject'], this['_colliderS' + 'hape']['_btShape'], this['_stepHeigh' + 't'], _0x3a7611), this['fallSpeed'] = this['_fallSpeed'], this['maxSlope'] = this['_maxSlope'], this['jumpSpeed'] = this['_jumpSpeed'], this['gravity'] = this['_gravity'];
        }
        ['_onShapeCh' + 'ange'](_0x156b22) {
            super['_onShapeCh' + 'ange'](_0x156b22), this['_construct' + 'Character']();
        }
        ['_onAdded']() {
            var _0x402c73 = _0x207eb6['Physics3D']['_bullet'], _0x5862f1 = _0x402c73['btPairCach' + 'ingGhostOb' + 'ject_creat' + 'e']();
            _0x402c73['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x5862f1, this['id']), _0x402c73['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x5862f1, _0x3e3f17['COLLISIONF' + 'LAGS_CHARA' + 'CTER_OBJEC' + 'T']), this['_btCollide' + 'rObject'] = _0x5862f1, this['_colliderS' + 'hape'] && this['_construct' + 'Character'](), super['_onAdded']();
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_character' + 's']['push'](this), this['_simulatio' + 'n']['_addCharac' + 'ter'](this, this['_collision' + 'Group'], this['_canCollid' + 'eWith']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removeCha' + 'racter'](this);
            var _0x458e8f = this['_simulatio' + 'n']['_character' + 's'];
            _0x458e8f['splice'](_0x458e8f['indexOf'](this), 0x1);
        }
        ['_cloneTo'](_0x4646c2) {
            super['_cloneTo'](_0x4646c2);
            var _0x74443f = _0x4646c2;
            _0x74443f['stepHeight'] = this['_stepHeigh' + 't'], _0x74443f['upAxis'] = this['_upAxis'], _0x74443f['maxSlope'] = this['_maxSlope'], _0x74443f['jumpSpeed'] = this['_jumpSpeed'], _0x74443f['fallSpeed'] = this['_fallSpeed'], _0x74443f['gravity'] = this['_gravity'];
        }
        ['_onDestroy']() {
            _0x207eb6['Physics3D']['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_destroy'](this['_btKinemat' + 'icCharacte' + 'r']), super['_onDestroy'](), this['_btKinemat' + 'icCharacte' + 'r'] = null;
        }
        ['move'](_0x841f2c) {
            var _0x4ce953 = _0x4cc0ca['_btVector3' + '0'], _0x355708 = _0x207eb6['Physics3D']['_bullet'];
            _0x355708['btVector3_' + 'setValue'](_0x4ce953, -_0x841f2c['x'], _0x841f2c['y'], _0x841f2c['z']), _0x355708['btKinemati' + 'cCharacter' + 'Controller' + '_setWalkDi' + 'rection'](this['_btKinemat' + 'icCharacte' + 'r'], _0x4ce953);
        }
        ['jump'](_0x4dbfa9 = null) {
            var _0x1ef856 = _0x207eb6['Physics3D']['_bullet'], _0x1acc22 = _0x4cc0ca['_btVector3' + '0'];
            _0x4dbfa9 ? (_0x47bed9['_convertTo' + 'BulletVec3'](_0x4dbfa9, _0x1acc22, !![]), _0x1ef856['btKinemati' + 'cCharacter' + 'Controller' + '_jump'](this['_btKinemat' + 'icCharacte' + 'r'], _0x1acc22)) : (_0x1ef856['btVector3_' + 'setValue'](_0x1acc22, 0x0, 0x0, 0x0), _0x1ef856['btKinemati' + 'cCharacter' + 'Controller' + '_jump'](this['_btKinemat' + 'icCharacte' + 'r'], _0x1acc22));
        }
    }
    _0x4cc0ca['UPAXIS_X'] = 0x0, _0x4cc0ca['UPAXIS_Y'] = 0x1, _0x4cc0ca['UPAXIS_Z'] = 0x2;
    class _0x3c647b extends _0x3e3f17 {
        constructor(_0x254c5e, _0x493c4e) {
            super(_0x254c5e, _0x493c4e), this['_isTrigger'] = ![];
        }
        get ['isTrigger']() {
            return this['_isTrigger'];
        }
        set ['isTrigger'](_0x4f0b98) {
            this['_isTrigger'] = _0x4f0b98;
            var _0x28b639 = _0x207eb6['Physics3D']['_bullet'];
            if (this['_btCollide' + 'rObject']) {
                var _0x3a2cf4 = _0x28b639['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject']);
                if (_0x4f0b98) {
                    if ((_0x3a2cf4 & _0x3e3f17['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) === 0x0)
                        _0x28b639['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject'], _0x3a2cf4 | _0x3e3f17['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']);
                } else {
                    if ((_0x3a2cf4 & _0x3e3f17['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) !== 0x0)
                        _0x28b639['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject'], _0x3a2cf4 ^ _0x3e3f17['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']);
                }
            }
        }
        ['_onAdded']() {
            super['_onAdded'](), this['isTrigger'] = this['_isTrigger'];
        }
        ['_cloneTo'](_0x21341a) {
            super['_cloneTo'](_0x21341a), _0x21341a['isTrigger'] = this['_isTrigger'];
        }
    }
    class _0x392471 extends _0x3c647b {
        constructor(_0x4432e6 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x44eb49 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x4432e6, _0x44eb49), this['_isKinemat' + 'ic'] = ![], this['_mass'] = 0x1, this['_gravity'] = new _0x352206(0x0, -0xa, 0x0), this['_angularDa' + 'mping'] = 0x0, this['_linearDam' + 'ping'] = 0x0, this['_overrideG' + 'ravity'] = ![], this['_totalTorq' + 'ue'] = new _0x352206(0x0, 0x0, 0x0), this['_totalForc' + 'e'] = new _0x352206(0x0, 0x0, 0x0), this['_linearVel' + 'ocity'] = new _0x352206(), this['_angularVe' + 'locity'] = new _0x352206(), this['_linearFac' + 'tor'] = new _0x352206(0x1, 0x1, 0x1), this['_angularFa' + 'ctor'] = new _0x352206(0x1, 0x1, 0x1), this['_detectCol' + 'lisions'] = !![], this['_controlBy' + 'Simulation'] = !![];
        }
        static ['__init__']() {
            var _0x5adb4c = _0x207eb6['Physics3D']['_bullet'];
            _0x392471['_btTempVec' + 'tor30'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btTempVec' + 'tor31'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btVector3' + 'Zero'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btInertia'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btImpulse'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btImpulse' + 'Offset'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btGravity'] = _0x5adb4c['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x392471['_btTransfo' + 'rm0'] = _0x5adb4c['btTransfor' + 'm_create']();
        }
        get ['mass']() {
            return this['_mass'];
        }
        set ['mass'](_0x5ce0e0) {
            _0x5ce0e0 = Math['max'](_0x5ce0e0, 1e-7), this['_mass'] = _0x5ce0e0, this['_isKinemat' + 'ic'] || this['_updateMas' + 's'](_0x5ce0e0);
        }
        get ['isKinemati' + 'c']() {
            return this['_isKinemat' + 'ic'];
        }
        set ['isKinemati' + 'c'](_0xefc0a9) {
            this['_isKinemat' + 'ic'] = _0xefc0a9, this['_controlBy' + 'Simulation'] = !_0xefc0a9;
            var _0x3cef8a = _0x207eb6['Physics3D']['_bullet'], _0x4db030 = !!(this['_simulatio' + 'n'] && this['_enabled'] && this['_colliderS' + 'hape']);
            _0x4db030 && this['_removeFro' + 'mSimulatio' + 'n']();
            var _0x4a233c = this['_btCollide' + 'rObject'], _0x2860c5 = _0x3cef8a['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x4a233c);
            if (_0xefc0a9)
                _0x2860c5 = _0x2860c5 | _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'], _0x3cef8a['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x4a233c, _0x2860c5), _0x3cef8a['btCollisio' + 'nObject_fo' + 'rceActivat' + 'ionState'](this['_btCollide' + 'rObject'], _0x3e3f17['ACTIVATION' + 'STATE_DISA' + 'BLE_DEACTI' + 'VATION']), this['_enablePro' + 'cessCollis' + 'ions'] = ![], this['_updateMas' + 's'](0x0);
            else {
                if ((_0x2860c5 & _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']) > 0x0)
                    _0x2860c5 = _0x2860c5 ^ _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'];
                _0x3cef8a['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x4a233c, _0x2860c5), _0x3cef8a['btCollisio' + 'nObject_se' + 'tActivatio' + 'nState'](this['_btCollide' + 'rObject'], _0x3e3f17['ACTIVATION' + 'STATE_ACTI' + 'VE_TAG']), this['_enablePro' + 'cessCollis' + 'ions'] = !![], this['_updateMas' + 's'](this['_mass']);
            }
            var _0x3b94c6 = _0x392471['_btVector3' + 'Zero'];
            _0x3cef8a['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionLinear' + 'Velocity'](_0x4a233c, _0x3b94c6), _0x3cef8a['btRigidBod' + 'y_setLinea' + 'rVelocity'](_0x4a233c, _0x3b94c6), _0x3cef8a['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionAngula' + 'rVelocity'](_0x4a233c, _0x3b94c6), _0x3cef8a['btRigidBod' + 'y_setAngul' + 'arVelocity'](_0x4a233c, _0x3b94c6), _0x4db030 && this['_addToSimu' + 'lation']();
        }
        get ['linearDamp' + 'ing']() {
            return this['_linearDam' + 'ping'];
        }
        set ['linearDamp' + 'ing'](_0x1c6937) {
            this['_linearDam' + 'ping'] = _0x1c6937;
            if (this['_btCollide' + 'rObject'])
                _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_setDampi' + 'ng'](this['_btCollide' + 'rObject'], _0x1c6937, this['_angularDa' + 'mping']);
        }
        get ['angularDam' + 'ping']() {
            return this['_angularDa' + 'mping'];
        }
        set ['angularDam' + 'ping'](_0x5e3e65) {
            this['_angularDa' + 'mping'] = _0x5e3e65;
            if (this['_btCollide' + 'rObject'])
                _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_setDampi' + 'ng'](this['_btCollide' + 'rObject'], this['_linearDam' + 'ping'], _0x5e3e65);
        }
        get ['overrideGr' + 'avity']() {
            return this['_overrideG' + 'ravity'];
        }
        set ['overrideGr' + 'avity'](_0x53ba1f) {
            this['_overrideG' + 'ravity'] = _0x53ba1f;
            var _0x21cca3 = _0x207eb6['Physics3D']['_bullet'];
            if (this['_btCollide' + 'rObject']) {
                var _0x295193 = _0x21cca3['btRigidBod' + 'y_getFlags'](this['_btCollide' + 'rObject']);
                if (_0x53ba1f) {
                    if ((_0x295193 & _0x392471['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) === 0x0)
                        _0x21cca3['btRigidBod' + 'y_setFlags'](this['_btCollide' + 'rObject'], _0x295193 | _0x392471['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']);
                } else {
                    if ((_0x295193 & _0x392471['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) > 0x0)
                        _0x21cca3['btRigidBod' + 'y_setFlags'](this['_btCollide' + 'rObject'], _0x295193 ^ _0x392471['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']);
                }
            }
        }
        get ['gravity']() {
            var _0x16b334 = _0x207eb6['Physics3D']['_bullet'];
            return _0x392471['_btGravity'] = _0x16b334['btRigidBod' + 'y_getGravi' + 'ty'](this['_btCollide' + 'rObject']), _0x47bed9['_convertTo' + 'LayaVec3'](_0x392471['_btGravity'], this['_gravity'], !![]), this['_gravity'];
        }
        set ['gravity'](_0x1a7027) {
            this['_gravity'] = _0x1a7027;
            var _0x7d85a4 = _0x207eb6['Physics3D']['_bullet'];
            _0x7d85a4['btVector3_' + 'setValue'](_0x392471['_btGravity'], -_0x1a7027['x'], _0x1a7027['y'], _0x1a7027['z']), _0x7d85a4['btRigidBod' + 'y_setGravi' + 'ty'](this['_btCollide' + 'rObject'], _0x392471['_btGravity']);
        }
        get ['totalForce']() {
            if (this['_btCollide' + 'rObject']) {
                var _0x384555 = _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_getTotal' + 'Force'](this['_btCollide' + 'rObject']);
                return _0x47bed9['_convertTo' + 'LayaVec3'](_0x384555, this['_totalForc' + 'e'], !![]), this['_totalForc' + 'e'];
            }
            return null;
        }
        get ['linearFact' + 'or']() {
            return this['_linearFac' + 'tor'];
        }
        set ['linearFact' + 'or'](_0x4683ca) {
            this['_linearFac' + 'tor'] = _0x4683ca;
            var _0x2eb597 = _0x392471['_btTempVec' + 'tor30'];
            _0x47bed9['_convertTo' + 'BulletVec3'](_0x4683ca, _0x2eb597, ![]), _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_setLinea' + 'rFactor'](this['_btCollide' + 'rObject'], _0x2eb597);
        }
        get ['linearVelo' + 'city']() {
            if (this['_btCollide' + 'rObject'])
                _0x47bed9['_convertTo' + 'LayaVec3'](_0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_getLinea' + 'rVelocity'](this['_btCollide' + 'rObject']), this['_linearVel' + 'ocity'], !![]);
            return this['_linearVel' + 'ocity'];
        }
        set ['linearVelo' + 'city'](_0x4b69ac) {
            this['_linearVel' + 'ocity'] = _0x4b69ac;
            if (this['_btCollide' + 'rObject']) {
                var _0x1b8339 = _0x392471['_btTempVec' + 'tor30'];
                _0x47bed9['_convertTo' + 'BulletVec3'](_0x4b69ac, _0x1b8339, !![]), this['isSleeping'] && this['wakeUp'](), _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_setLinea' + 'rVelocity'](this['_btCollide' + 'rObject'], _0x1b8339);
            }
        }
        get ['angularFac' + 'tor']() {
            return this['_angularFa' + 'ctor'];
        }
        set ['angularFac' + 'tor'](_0xdcc34b) {
            this['_angularFa' + 'ctor'] = _0xdcc34b;
            var _0x7f72e1 = _0x392471['_btTempVec' + 'tor30'];
            _0x47bed9['_convertTo' + 'BulletVec3'](_0xdcc34b, _0x7f72e1, ![]), _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_setAngul' + 'arFactor'](this['_btCollide' + 'rObject'], _0x7f72e1);
        }
        get ['angularVel' + 'ocity']() {
            if (this['_btCollide' + 'rObject'])
                _0x47bed9['_convertTo' + 'LayaVec3'](_0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_getAngul' + 'arVelocity'](this['_btCollide' + 'rObject']), this['_angularVe' + 'locity'], !![]);
            return this['_angularVe' + 'locity'];
        }
        set ['angularVel' + 'ocity'](_0x25f3e0) {
            this['_angularVe' + 'locity'] = _0x25f3e0;
            if (this['_btCollide' + 'rObject']) {
                var _0x3c419d = _0x392471['_btTempVec' + 'tor30'];
                _0x47bed9['_convertTo' + 'BulletVec3'](_0x25f3e0, _0x3c419d, !![]), this['isSleeping'] && this['wakeUp'](), _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_setAngul' + 'arVelocity'](this['_btCollide' + 'rObject'], _0x3c419d);
            }
        }
        get ['totalTorqu' + 'e']() {
            if (this['_btCollide' + 'rObject']) {
                var _0x6f7a7b = _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_getTotal' + 'Torque'](this['_btCollide' + 'rObject']);
                return _0x47bed9['_convertTo' + 'LayaVec3'](_0x6f7a7b, this['_totalTorq' + 'ue'], !![]), this['_totalTorq' + 'ue'];
            }
            return null;
        }
        get ['detectColl' + 'isions']() {
            return this['_detectCol' + 'lisions'];
        }
        set ['detectColl' + 'isions'](_0x2a8ac4) {
            this['_detectCol' + 'lisions'] !== _0x2a8ac4 && (this['_detectCol' + 'lisions'] = _0x2a8ac4, this['_colliderS' + 'hape'] && this['_enabled'] && this['_simulatio' + 'n'] && (this['_simulatio' + 'n']['_removeRig' + 'idBody'](this), this['_simulatio' + 'n']['_addRigidB' + 'ody'](this, this['_collision' + 'Group'], _0x2a8ac4 ? this['_canCollid' + 'eWith'] : 0x0)));
        }
        get ['isSleeping']() {
            if (this['_btCollide' + 'rObject'])
                return _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_ge' + 'tActivatio' + 'nState'](this['_btCollide' + 'rObject']) === _0x3e3f17['ACTIVATION' + 'STATE_ISLA' + 'ND_SLEEPIN' + 'G'];
            return ![];
        }
        get ['sleepLinea' + 'rVelocity']() {
            return _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_getLinea' + 'rSleepingT' + 'hreshold'](this['_btCollide' + 'rObject']);
        }
        set ['sleepLinea' + 'rVelocity'](_0x28389d) {
            var _0x42dcfe = _0x207eb6['Physics3D']['_bullet'];
            _0x42dcfe['btRigidBod' + 'y_setSleep' + 'ingThresho' + 'lds'](this['_btCollide' + 'rObject'], _0x28389d, _0x42dcfe['btRigidBod' + 'y_getAngul' + 'arSleeping' + 'Threshold'](this['_btCollide' + 'rObject']));
        }
        get ['sleepAngul' + 'arVelocity']() {
            return _0x207eb6['Physics3D']['_bullet']['btRigidBod' + 'y_getAngul' + 'arSleeping' + 'Threshold'](this['_btCollide' + 'rObject']);
        }
        set ['sleepAngul' + 'arVelocity'](_0x538a4d) {
            var _0x3bc740 = _0x207eb6['Physics3D']['_bullet'];
            _0x3bc740['btRigidBod' + 'y_setSleep' + 'ingThresho' + 'lds'](this['_btCollide' + 'rObject'], _0x3bc740['btRigidBod' + 'y_getLinea' + 'rSleepingT' + 'hreshold'](this['_btCollide' + 'rObject']), _0x538a4d);
        }
        get ['btCollider' + 'Object']() {
            return this['_btCollide' + 'rObject'];
        }
        set ['constaintR' + 'igidbodyA'](_0x50e2d2) {
            this['_constaint' + 'RigidbodyA'] = _0x50e2d2;
        }
        get ['constaintR' + 'igidbodyA']() {
            return this['_constaint' + 'RigidbodyA'];
        }
        set ['constaintR' + 'igidbodyB'](_0x4e6a2e) {
            this['_constaint' + 'RigidbodyB'] = _0x4e6a2e;
        }
        get ['constaintR' + 'igidbodyB']() {
            return this['_constaint' + 'RigidbodyB'];
        }
        ['_updateMas' + 's'](_0xa8564e) {
            if (this['_btCollide' + 'rObject'] && this['_colliderS' + 'hape']) {
                var _0x58b142 = _0x207eb6['Physics3D']['_bullet'];
                _0x58b142['btCollisio' + 'nShape_cal' + 'culateLoca' + 'lInertia'](this['_colliderS' + 'hape']['_btShape'], _0xa8564e, _0x392471['_btInertia']), _0x58b142['btRigidBod' + 'y_setMassP' + 'rops'](this['_btCollide' + 'rObject'], _0xa8564e, _0x392471['_btInertia']), _0x58b142['btRigidBod' + 'y_updateIn' + 'ertiaTenso' + 'r'](this['_btCollide' + 'rObject']);
            }
        }
        ['_onScaleCh' + 'ange'](_0x30e604) {
            super['_onScaleCh' + 'ange'](_0x30e604), this['_updateMas' + 's'](this['_isKinemat' + 'ic'] ? 0x0 : this['_mass']);
        }
        ['_derivePhy' + 'sicsTransf' + 'ormation'](_0x21797b) {
            var _0x183976 = _0x207eb6['Physics3D']['_bullet'], _0x536181 = this['_btCollide' + 'rObject'], _0x4b9b56 = _0x183976['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x536181), _0x3b3dd0 = _0x392471['_btTransfo' + 'rm0'];
            _0x183976['btTransfor' + 'm_equal'](_0x3b3dd0, _0x4b9b56), this['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x3b3dd0, _0x21797b), _0x183976['btRigidBod' + 'y_setCente' + 'rOfMassTra' + 'nsform'](_0x536181, _0x3b3dd0);
        }
        ['_onAdded']() {
            var _0x1f6e8d = _0x207eb6['Physics3D']['_bullet'], _0x2e562a = _0x1f6e8d['layaMotion' + 'State_crea' + 'te']();
            _0x1f6e8d['layaMotion' + 'State_set_' + 'rigidBodyI' + 'D'](_0x2e562a, this['_id']), this['_btLayaMot' + 'ionState'] = _0x2e562a;
            var _0x462a62 = _0x1f6e8d['btRigidBod' + 'yConstruct' + 'ionInfo_cr' + 'eate'](0x0, _0x2e562a, null, _0x392471['_btVector3' + 'Zero']), _0x2af2e3 = _0x1f6e8d['btRigidBod' + 'y_create'](_0x462a62);
            _0x1f6e8d['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x2af2e3, this['id']), this['_btCollide' + 'rObject'] = _0x2af2e3, super['_onAdded'](), this['mass'] = this['_mass'], this['linearFact' + 'or'] = this['_linearFac' + 'tor'], this['angularFac' + 'tor'] = this['_angularFa' + 'ctor'], this['linearDamp' + 'ing'] = this['_linearDam' + 'ping'], this['angularDam' + 'ping'] = this['_angularDa' + 'mping'], this['overrideGr' + 'avity'] = this['_overrideG' + 'ravity'], this['gravity'] = this['_gravity'], this['isKinemati' + 'c'] = this['_isKinemat' + 'ic'], _0x1f6e8d['btRigidBod' + 'yConstruct' + 'ionInfo_de' + 'stroy'](_0x462a62);
        }
        ['_onEnable']() {
            super['_onEnable'](), this['_constaint' + 'RigidbodyA'] && (this['_constaint' + 'RigidbodyA']['connectedB' + 'ody']['_simulatio' + 'n'] && (this['_constaint' + 'RigidbodyA']['_createCon' + 'straint'](), this['_constaint' + 'RigidbodyA']['_onEnable']())), this['_constaint' + 'RigidbodyB'] && (this['_constaint' + 'RigidbodyB']['ownBody']['_simulatio' + 'n'] && (this['_constaint' + 'RigidbodyB']['_createCon' + 'straint'](), this['_constaint' + 'RigidbodyB']['_onEnable']()));
        }
        ['_onShapeCh' + 'ange'](_0x198a72) {
            super['_onShapeCh' + 'ange'](_0x198a72);
            if (this['_isKinemat' + 'ic'])
                this['_updateMas' + 's'](0x0);
            else {
                var _0xbf59ce = _0x207eb6['Physics3D']['_bullet'];
                _0xbf59ce['btRigidBod' + 'y_setCente' + 'rOfMassTra' + 'nsform'](this['_btCollide' + 'rObject'], _0xbf59ce['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](this['_btCollide' + 'rObject'])), this['_updateMas' + 's'](this['_mass']);
            }
        }
        ['_parse'](_0x1a891e) {
            _0x1a891e['friction'] != null && (this['friction'] = _0x1a891e['friction']), _0x1a891e['rollingFri' + 'ction'] != null && (this['rollingFri' + 'ction'] = _0x1a891e['rollingFri' + 'ction']), _0x1a891e['restitutio' + 'n'] != null && (this['restitutio' + 'n'] = _0x1a891e['restitutio' + 'n']), _0x1a891e['isTrigger'] != null && (this['isTrigger'] = _0x1a891e['isTrigger']), _0x1a891e['mass'] != null && (this['mass'] = _0x1a891e['mass']), _0x1a891e['linearDamp' + 'ing'] != null && (this['linearDamp' + 'ing'] = _0x1a891e['linearDamp' + 'ing']), _0x1a891e['angularDam' + 'ping'] != null && (this['angularDam' + 'ping'] = _0x1a891e['angularDam' + 'ping']), _0x1a891e['overrideGr' + 'avity'] != null && (this['overrideGr' + 'avity'] = _0x1a891e['overrideGr' + 'avity']);
            if (_0x1a891e['linearFact' + 'or'] != null) {
                var _0x74c7b = this['linearFact' + 'or'];
                _0x74c7b['fromArray'](_0x1a891e['linearFact' + 'or']), this['linearFact' + 'or'] = _0x74c7b;
            }
            if (_0x1a891e['angularFac' + 'tor'] != null) {
                var _0x300f64 = this['angularFac' + 'tor'];
                _0x300f64['fromArray'](_0x1a891e['angularFac' + 'tor']), this['angularFac' + 'tor'] = _0x300f64;
            }
            _0x1a891e['gravity'] && (this['gravity']['fromArray'](_0x1a891e['gravity']), this['gravity'] = this['gravity']), super['_parse'](_0x1a891e), this['_parseShap' + 'e'](_0x1a891e['shapes']), _0x1a891e['isKinemati' + 'c'] != null && (this['isKinemati' + 'c'] = _0x1a891e['isKinemati' + 'c']);
        }
        ['_onDestroy']() {
            _0x207eb6['Physics3D']['_bullet']['btMotionSt' + 'ate_destro' + 'y'](this['_btLayaMot' + 'ionState']), super['_onDestroy'](), this['_btLayaMot' + 'ionState'] = null, this['_gravity'] = null, this['_totalTorq' + 'ue'] = null, this['_linearVel' + 'ocity'] = null, this['_angularVe' + 'locity'] = null, this['_linearFac' + 'tor'] = null, this['_angularFa' + 'ctor'] = null;
            if (this['constaintR' + 'igidbodyA'])
                this['constaintR' + 'igidbodyA']['_breakCons' + 'trained']();
            this['constaintR' + 'igidbodyB'] && (this['constaintR' + 'igidbodyB']['connectedB' + 'ody'] = null, this['constaintR' + 'igidbodyB']['_onDisable']());
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_addRigidB' + 'ody'](this, this['_collision' + 'Group'], this['_detectCol' + 'lisions'] ? this['_canCollid' + 'eWith'] : 0x0);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removeRig' + 'idBody'](this);
        }
        ['_cloneTo'](_0x1a8675) {
            super['_cloneTo'](_0x1a8675);
            var _0x63a30d = _0x1a8675;
            _0x63a30d['isKinemati' + 'c'] = this['_isKinemat' + 'ic'], _0x63a30d['mass'] = this['_mass'], _0x63a30d['gravity'] = this['_gravity'], _0x63a30d['angularDam' + 'ping'] = this['_angularDa' + 'mping'], _0x63a30d['linearDamp' + 'ing'] = this['_linearDam' + 'ping'], _0x63a30d['overrideGr' + 'avity'] = this['_overrideG' + 'ravity'], _0x63a30d['linearVelo' + 'city'] = this['_linearVel' + 'ocity'], _0x63a30d['angularVel' + 'ocity'] = this['_angularVe' + 'locity'], _0x63a30d['linearFact' + 'or'] = this['_linearFac' + 'tor'], _0x63a30d['angularFac' + 'tor'] = this['_angularFa' + 'ctor'], _0x63a30d['detectColl' + 'isions'] = this['_detectCol' + 'lisions'];
        }
        ['applyForce'](_0x33a664, _0x3608a1 = null) {
            if (this['_btCollide' + 'rObject'] == null)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x2a8a80 = _0x207eb6['Physics3D']['_bullet'], _0x36a839 = _0x392471['_btTempVec' + 'tor30'];
            _0x2a8a80['btVector3_' + 'setValue'](_0x36a839, -_0x33a664['x'], _0x33a664['y'], _0x33a664['z']);
            if (_0x3608a1) {
                var _0x2af727 = _0x392471['_btTempVec' + 'tor31'];
                _0x2a8a80['btVector3_' + 'setValue'](_0x2af727, -_0x3608a1['x'], _0x3608a1['y'], _0x3608a1['z']), _0x2a8a80['btRigidBod' + 'y_applyFor' + 'ce'](this['_btCollide' + 'rObject'], _0x36a839, _0x2af727);
            } else
                _0x2a8a80['btRigidBod' + 'y_applyCen' + 'tralForce'](this['_btCollide' + 'rObject'], _0x36a839);
        }
        ['applyTorqu' + 'e'](_0x283dfc) {
            if (this['_btCollide' + 'rObject'] == null)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0xa5842d = _0x207eb6['Physics3D']['_bullet'], _0x26a045 = _0x392471['_btTempVec' + 'tor30'];
            _0xa5842d['btVector3_' + 'setValue'](_0x26a045, -_0x283dfc['x'], _0x283dfc['y'], _0x283dfc['z']), _0xa5842d['btRigidBod' + 'y_applyTor' + 'que'](this['_btCollide' + 'rObject'], _0x26a045);
        }
        ['applyImpul' + 'se'](_0xbc9eee, _0x4a3b66 = null) {
            if (this['_btCollide' + 'rObject'] == null)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x51a853 = _0x207eb6['Physics3D']['_bullet'];
            _0x51a853['btVector3_' + 'setValue'](_0x392471['_btImpulse'], -_0xbc9eee['x'], _0xbc9eee['y'], _0xbc9eee['z']), _0x4a3b66 ? (_0x51a853['btVector3_' + 'setValue'](_0x392471['_btImpulse' + 'Offset'], -_0x4a3b66['x'], _0x4a3b66['y'], _0x4a3b66['z']), _0x51a853['btRigidBod' + 'y_applyImp' + 'ulse'](this['_btCollide' + 'rObject'], _0x392471['_btImpulse'], _0x392471['_btImpulse' + 'Offset'])) : _0x51a853['btRigidBod' + 'y_applyCen' + 'tralImpuls' + 'e'](this['_btCollide' + 'rObject'], _0x392471['_btImpulse']);
        }
        ['applyTorqu' + 'eImpulse'](_0x4430f2) {
            if (this['_btCollide' + 'rObject'] == null)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x5ebf4b = _0x207eb6['Physics3D']['_bullet'], _0x24c7bc = _0x392471['_btTempVec' + 'tor30'];
            _0x5ebf4b['btVector3_' + 'setValue'](_0x24c7bc, -_0x4430f2['x'], _0x4430f2['y'], _0x4430f2['z']), _0x5ebf4b['btRigidBod' + 'y_applyTor' + 'queImpulse'](this['_btCollide' + 'rObject'], _0x24c7bc);
        }
        ['wakeUp']() {
            this['_btCollide' + 'rObject'] && _0x207eb6['Physics3D']['_bullet']['btCollisio' + 'nObject_ac' + 'tivate'](this['_btCollide' + 'rObject'], ![]);
        }
        ['clearForce' + 's']() {
            var _0x259037 = this['_btCollide' + 'rObject'];
            if (_0x259037 == null)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x510939 = _0x207eb6['Physics3D']['_bullet'];
            _0x510939['btRigidBod' + 'y_clearFor' + 'ces'](_0x259037);
            var _0x28ab39 = _0x392471['_btVector3' + 'Zero'];
            _0x510939['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionLinear' + 'Velocity'](_0x259037, _0x28ab39), _0x510939['btRigidBod' + 'y_setLinea' + 'rVelocity'](_0x259037, _0x28ab39), _0x510939['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionAngula' + 'rVelocity'](_0x259037, _0x28ab39), _0x510939['btRigidBod' + 'y_setAngul' + 'arVelocity'](_0x259037, _0x28ab39);
        }
    }
    _0x392471['TYPE_STATI' + 'C'] = 0x0, _0x392471['TYPE_DYNAM' + 'IC'] = 0x1, _0x392471['TYPE_KINEM' + 'ATIC'] = 0x2, _0x392471['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY'] = 0x1, _0x392471['_BT_ENABLE' + '_GYROPSCOP' + 'IC_FORCE'] = 0x2;
    class _0x3c230b {
        static ['__bulletin' + 'it__']() {
            this['_bullet'] = window['Physics3D'], this['_bullet'] && (_0x417ed1['__init__'](), _0x11d2cc['__init__'](), _0x3aa64c['__init__'](), _0x3e3f17['__init__'](), _0x101776['__init__'](), _0x5a842b['__init__'](), _0x5bd42f['__init__'](), _0x4cc0ca['__init__'](), _0x392471['__init__']());
        }
        static ['__cannonin' + 'it__']() {
            this['_cannon'] = window['CANNON'];
            if (!this['_cannon'])
                return;
            _0x442335['CannonColl' + 'iderShape']['__init__'](), _0x442335['CannonPhys' + 'icsCompone' + 'nt']['__init__'](), _0x442335['CannonPhys' + 'icsSimulat' + 'ion']['__init__'](), _0x442335['CannonBoxC' + 'olliderSha' + 'pe']['__init__'](), _0x442335['CannonRigi' + 'dbody3D']['__init__']();
        }
    }
    _0x3c230b['_bullet'] = null, _0x3c230b['_cannon'] = null, _0x3c230b['_enablePhy' + 'sics'] = ![];
    class _0x1a3b39 {
        constructor() {
            this['_defaultPh' + 'ysicsMemor' + 'y'] = 0x10, this['_maxLightC' + 'ount'] = 0x20, this['_lightClus' + 'terCount'] = new _0x352206(0xc, 0xc, 0xc), this['_editerEnv' + 'ironment'] = ![], this['isAntialia' + 's'] = !![], this['isAlpha'] = ![], this['premultipl' + 'iedAlpha'] = !![], this['isStencil'] = !![], this['enableMult' + 'iLight'] = !![], this['octreeCull' + 'ing'] = ![], this['octreeInit' + 'ialSize'] = 0x40, this['octreeInit' + 'ialCenter'] = new _0x352206(0x0, 0x0, 0x0), this['octreeMinN' + 'odeSize'] = 0x2, this['octreeLoos' + 'eness'] = 1.25, this['debugFrust' + 'umCulling'] = ![], this['pbrRenderQ' + 'uality'] = _0x1f405c['PBRRenderQ' + 'uality']['High'], this['isUseCanno' + 'nPhysicsEn' + 'gine'] = ![], this['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] = Math['min'](Math['floor'](0x800 / this['_lightClus' + 'terCount']['z'] - 0x1) * 0x4, this['_maxLightC' + 'ount']);
        }
        static get ['useCannonP' + 'hysics']() {
            return _0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine'];
        }
        static set ['useCannonP' + 'hysics'](_0x1dfc9e) {
            _0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine'] = _0x1dfc9e;
            if (_0x1dfc9e) {
                _0x3c230b['__cannonin' + 'it__']();
                if (!_0x207eb6['Scene3D']['cannonPhys' + 'icsSetting' + 's'])
                    _0x207eb6['Scene3D']['cannonPhys' + 'icsSetting' + 's'] = new _0x442335['CannonPhys' + 'icsSetting' + 's']();
            }
        }
        get ['defaultPhy' + 'sicsMemory']() {
            return this['_defaultPh' + 'ysicsMemor' + 'y'];
        }
        set ['defaultPhy' + 'sicsMemory'](_0x3eb89a) {
            if (_0x3eb89a < 0x10)
                throw 'defaultPhy' + 'sicsMemory' + '\x20must\x20larg' + 'e\x20than\x2016M';
            this['_defaultPh' + 'ysicsMemor' + 'y'] = _0x3eb89a;
        }
        get ['maxLightCo' + 'unt']() {
            return this['_maxLightC' + 'ount'];
        }
        set ['maxLightCo' + 'unt'](_0x193e23) {
            _0x193e23 > 0x800 ? (this['_maxLightC' + 'ount'] = 0x800, console['warn']('Config3D:\x20' + 'maxLightCo' + 'unt\x20must\x20l' + 'ess\x20equal\x20' + '2048.')) : this['_maxLightC' + 'ount'] = _0x193e23;
        }
        get ['lightClust' + 'erCount']() {
            return this['_lightClus' + 'terCount'];
        }
        set ['lightClust' + 'erCount'](_0x39e6f0) {
            _0x39e6f0['x'] > 0x80 || _0x39e6f0['y'] > 0x80 || _0x39e6f0['z'] > 0x80 ? (this['_lightClus' + 'terCount']['setValue'](Math['min'](_0x39e6f0['x'], 0x80), Math['min'](_0x39e6f0['y'], 0x80), Math['min'](_0x39e6f0['z'], 0x80)), console['warn']('Config3D:\x20' + 'lightClust' + 'erCount\x20X\x20' + 'and\x20Y、Z\x20mu' + 'st\x20less\x20eq' + 'ual\x20128.')) : _0x39e6f0['cloneTo'](this['_lightClus' + 'terCount']);
            var _0x1994cc = Math['floor'](0x800 / this['_lightClus' + 'terCount']['z'] - 0x1) * 0x4;
            if (_0x1994cc < this['_maxLightC' + 'ount'])
                console['warn']('Config3D:\x20' + 'if\x20the\x20are' + 'a\x20light(Po' + 'intLight、S' + 'potLight)\x20' + 'count\x20is\x20l' + 'arge\x20than\x20' + _0x1994cc + (',maybe\x20the' + '\x20far\x20away\x20' + 'culster\x20wi' + 'll\x20ingonre' + '\x20some\x20ligh' + 't.'));
            this['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] = Math['min'](_0x1994cc, this['_maxLightC' + 'ount']);
        }
        ['cloneTo'](_0x1a2f30) {
            var _0x5cb3d4 = _0x1a2f30;
            _0x5cb3d4['_defaultPh' + 'ysicsMemor' + 'y'] = this['_defaultPh' + 'ysicsMemor' + 'y'], _0x5cb3d4['_editerEnv' + 'ironment'] = this['_editerEnv' + 'ironment'], _0x5cb3d4['isAntialia' + 's'] = this['isAntialia' + 's'], _0x5cb3d4['isAlpha'] = this['isAlpha'], _0x5cb3d4['premultipl' + 'iedAlpha'] = this['premultipl' + 'iedAlpha'], _0x5cb3d4['isStencil'] = this['isStencil'], _0x5cb3d4['octreeCull' + 'ing'] = this['octreeCull' + 'ing'], this['octreeInit' + 'ialCenter']['cloneTo'](_0x5cb3d4['octreeInit' + 'ialCenter']), _0x5cb3d4['octreeInit' + 'ialSize'] = this['octreeInit' + 'ialSize'], _0x5cb3d4['octreeMinN' + 'odeSize'] = this['octreeMinN' + 'odeSize'], _0x5cb3d4['octreeLoos' + 'eness'] = this['octreeLoos' + 'eness'], _0x5cb3d4['debugFrust' + 'umCulling'] = this['debugFrust' + 'umCulling'], _0x5cb3d4['maxLightCo' + 'unt'] = this['maxLightCo' + 'unt'], _0x5cb3d4['enableMult' + 'iLight'] = this['enableMult' + 'iLight'];
            var _0x2ab858 = _0x5cb3d4['lightClust' + 'erCount'];
            this['lightClust' + 'erCount']['cloneTo'](_0x2ab858), _0x5cb3d4['lightClust' + 'erCount'] = _0x2ab858, _0x5cb3d4['pbrRenderQ' + 'uality'] = this['pbrRenderQ' + 'uality'];
        }
        ['clone']() {
            var _0xd7a7a7 = new _0x1a3b39();
            return this['cloneTo'](_0xd7a7a7), _0xd7a7a7;
        }
    }
    _0x1a3b39['_config'] = new _0x1a3b39(), window['Config3D'] = _0x1a3b39;
    class _0x3f9891 {
        constructor() {
            this['_ownerPath'] = [], this['_propertys'] = [], this['_keyFrames'] = [];
        }
        get ['ownerPathC' + 'ount']() {
            return this['_ownerPath']['length'];
        }
        get ['propertyCo' + 'unt']() {
            return this['_propertys']['length'];
        }
        get ['keyFramesC' + 'ount']() {
            return this['_keyFrames']['length'];
        }
        ['_setOwnerP' + 'athCount'](_0x58318d) {
            this['_ownerPath']['length'] = _0x58318d;
        }
        ['_setOwnerP' + 'athByIndex'](_0x93faed, _0x3fe5f2) {
            this['_ownerPath'][_0x93faed] = _0x3fe5f2;
        }
        ['_joinOwner' + 'Path'](_0x34fb1c) {
            return this['_ownerPath']['join'](_0x34fb1c);
        }
        ['_setProper' + 'tyCount'](_0x120f1e) {
            this['_propertys']['length'] = _0x120f1e;
        }
        ['_setProper' + 'tyByIndex'](_0x1b603f, _0x366f75) {
            this['_propertys'][_0x1b603f] = _0x366f75;
        }
        ['_joinPrope' + 'rty'](_0x53f83f) {
            return this['_propertys']['join'](_0x53f83f);
        }
        ['_setKeyfra' + 'meCount'](_0x306dbb) {
            this['_keyFrames']['length'] = _0x306dbb;
        }
        ['_setKeyfra' + 'meByIndex'](_0x82f150, _0x48b160) {
            this['_keyFrames'][_0x82f150] = _0x48b160;
        }
        ['getOwnerPa' + 'thByIndex'](_0x3d9d90) {
            return this['_ownerPath'][_0x3d9d90];
        }
        ['getPropert' + 'yByIndex'](_0x517d3d) {
            return this['_propertys'][_0x517d3d];
        }
        ['getKeyfram' + 'eByIndex'](_0x42f7ea) {
            return this['_keyFrames'][_0x42f7ea];
        }
    }
    class _0x500da2 {
        constructor() {
        }
    }
    class _0x39f079 {
        constructor() {
        }
        ['cloneTo'](_0x353798) {
            var _0x22091c = _0x353798;
            _0x22091c['time'] = this['time'];
        }
        ['clone']() {
            var _0x908c62 = new _0x39f079();
            return this['cloneTo'](_0x908c62), _0x908c62;
        }
    }
    class _0x2d9b18 extends _0x39f079 {
        constructor() {
            super();
        }
        ['cloneTo'](_0x2d52d7) {
            super['cloneTo'](_0x2d52d7);
            var _0xd287f4 = _0x2d52d7;
            _0xd287f4['inTangent'] = this['inTangent'], _0xd287f4['outTangent'] = this['outTangent'], _0xd287f4['value'] = this['value'];
        }
    }
    class _0xfe02a7 extends _0x39f079 {
        constructor() {
            super(), this['inTangent'] = new _0x18425e(), this['outTangent'] = new _0x18425e(), this['value'] = new _0x388291();
        }
        ['cloneTo'](_0xa0663) {
            super['cloneTo'](_0xa0663);
            var _0x213a04 = _0xa0663;
            this['inTangent']['cloneTo'](_0x213a04['inTangent']), this['outTangent']['cloneTo'](_0x213a04['outTangent']), this['value']['cloneTo'](_0x213a04['value']);
        }
    }
    class _0x4adfd9 extends _0x39f079 {
        constructor() {
            super(), this['inTangent'] = new _0x352206(), this['outTangent'] = new _0x352206(), this['value'] = new _0x352206();
        }
        ['cloneTo'](_0x46cf4e) {
            super['cloneTo'](_0x46cf4e);
            var _0x49f6b6 = _0x46cf4e;
            this['inTangent']['cloneTo'](_0x49f6b6['inTangent']), this['outTangent']['cloneTo'](_0x49f6b6['outTangent']), this['value']['cloneTo'](_0x49f6b6['value']);
        }
    }
    class _0x4ade33 {
        static ['READ_DATA']() {
            _0x4ade33['_DATA']['offset'] = _0x4ade33['_reader']['getUint32'](), _0x4ade33['_DATA']['size'] = _0x4ade33['_reader']['getUint32']();
        }
        static ['READ_BLOCK']() {
            var _0x7ba376 = _0x4ade33['_BLOCK']['count'] = _0x4ade33['_reader']['getUint16'](), _0x2367ca = _0x4ade33['_BLOCK']['blockStart' + 's'] = [], _0x5c5630 = _0x4ade33['_BLOCK']['blockLengt' + 'hs'] = [];
            for (var _0x36e75b = 0x0; _0x36e75b < _0x7ba376; _0x36e75b++) {
                _0x2367ca['push'](_0x4ade33['_reader']['getUint32']()), _0x5c5630['push'](_0x4ade33['_reader']['getUint32']());
            }
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x45196f = _0x4ade33['_reader']['getUint32'](), _0x899eb4 = _0x4ade33['_reader']['getUint16'](), _0x30463b = _0x4ade33['_reader']['pos'];
            _0x4ade33['_reader']['pos'] = _0x45196f + _0x4ade33['_DATA']['offset'];
            for (var _0x2648ad = 0x0; _0x2648ad < _0x899eb4; _0x2648ad++)
                _0x4ade33['_strings'][_0x2648ad] = _0x4ade33['_reader']['readUTFStr' + 'ing']();
            _0x4ade33['_reader']['pos'] = _0x30463b;
        }
        static ['parse'](_0x546b23, _0x373bce) {
            _0x4ade33['_animation' + 'Clip'] = _0x546b23, _0x4ade33['_reader'] = _0x373bce;
            var _0x55e88d = _0x373bce['__getBuffe' + 'r']();
            _0x4ade33['READ_DATA'](), _0x4ade33['READ_BLOCK'](), _0x4ade33['READ_STRIN' + 'GS']();
            for (var _0x29c1b6 = 0x0, _0x3433bf = _0x4ade33['_BLOCK']['count']; _0x29c1b6 < _0x3433bf; _0x29c1b6++) {
                var _0x1f0702 = _0x373bce['getUint16'](), _0x4bcb2b = _0x4ade33['_strings'][_0x1f0702], _0x2b0f7c = _0x4ade33['READ_' + _0x4bcb2b];
                if (_0x2b0f7c == null)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x1f0702 + '\x20' + _0x4bcb2b);
                else
                    _0x2b0f7c['call'](null);
            }
        }
        static ['READ_ANIMA' + 'TIONS']() {
            var _0x5b2a19, _0x1c1089, _0x155224, _0x59eab5 = _0x4ade33['_reader'], _0x2139d6 = _0x59eab5['__getBuffe' + 'r'](), _0xea0c01 = [], _0x3c2bd0 = _0x59eab5['getUint16']();
            _0xea0c01['length'] = _0x3c2bd0;
            for (_0x5b2a19 = 0x0; _0x5b2a19 < _0x3c2bd0; _0x5b2a19++)
                _0xea0c01[_0x5b2a19] = _0x59eab5['getFloat32']();
            var _0x36fa4a = _0x4ade33['_animation' + 'Clip'];
            _0x36fa4a['name'] = _0x4ade33['_strings'][_0x59eab5['getUint16']()];
            var _0xcfa258 = _0x36fa4a['_duration'] = _0x59eab5['getFloat32']();
            _0x36fa4a['islooping'] = !!_0x59eab5['getByte'](), _0x36fa4a['_frameRate'] = _0x59eab5['getInt16']();
            var _0x5421a9 = _0x59eab5['getInt16'](), _0x52f6f9 = _0x36fa4a['_nodes'];
            _0x52f6f9['count'] = _0x5421a9;
            var _0x317d2a = _0x36fa4a['_nodesMap'] = {}, _0x337ad0 = _0x36fa4a['_nodesDic'] = {};
            for (_0x5b2a19 = 0x0; _0x5b2a19 < _0x5421a9; _0x5b2a19++) {
                _0x155224 = new _0x3f9891(), _0x52f6f9['setNodeByI' + 'ndex'](_0x5b2a19, _0x155224), _0x155224['_indexInLi' + 'st'] = _0x5b2a19;
                var _0x3dc40c = _0x155224['type'] = _0x59eab5['getUint8'](), _0x228878 = _0x59eab5['getUint16']();
                _0x155224['_setOwnerP' + 'athCount'](_0x228878);
                for (_0x1c1089 = 0x0; _0x1c1089 < _0x228878; _0x1c1089++)
                    _0x155224['_setOwnerP' + 'athByIndex'](_0x1c1089, _0x4ade33['_strings'][_0x59eab5['getUint16']()]);
                var _0x3a8937 = _0x155224['_joinOwner' + 'Path']('/'), _0xc1745c = _0x317d2a[_0x3a8937];
                _0xc1745c || (_0x317d2a[_0x3a8937] = _0xc1745c = []), _0xc1745c['push'](_0x155224), _0x155224['propertyOw' + 'ner'] = _0x4ade33['_strings'][_0x59eab5['getUint16']()];
                var _0x3d4297 = _0x59eab5['getUint16']();
                _0x155224['_setProper' + 'tyCount'](_0x3d4297);
                for (_0x1c1089 = 0x0; _0x1c1089 < _0x3d4297; _0x1c1089++)
                    _0x155224['_setProper' + 'tyByIndex'](_0x1c1089, _0x4ade33['_strings'][_0x59eab5['getUint16']()]);
                var _0x1ae8e8 = _0x3a8937 + '.' + _0x155224['propertyOw' + 'ner'] + '.' + _0x155224['_joinPrope' + 'rty']('.');
                _0x337ad0[_0x1ae8e8] = _0x155224, _0x155224['fullPath'] = _0x1ae8e8;
                var _0x1f716e = _0x59eab5['getUint16']();
                _0x155224['_setKeyfra' + 'meCount'](_0x1f716e);
                var _0x5de259;
                for (_0x1c1089 = 0x0; _0x1c1089 < _0x1f716e; _0x1c1089++) {
                    switch (_0x3dc40c) {
                    case 0x0:
                        var _0x514f24 = new _0x2d9b18();
                        _0x155224['_setKeyfra' + 'meByIndex'](_0x1c1089, _0x514f24), _0x5de259 = _0x514f24['time'] = _0xea0c01[_0x59eab5['getUint16']()], _0x514f24['inTangent'] = _0x59eab5['getFloat32'](), _0x514f24['outTangent'] = _0x59eab5['getFloat32'](), _0x514f24['value'] = _0x59eab5['getFloat32']();
                        break;
                    case 0x1:
                    case 0x3:
                    case 0x4:
                        var _0x5acb7a = new _0x4adfd9();
                        _0x155224['_setKeyfra' + 'meByIndex'](_0x1c1089, _0x5acb7a), _0x5de259 = _0x5acb7a['time'] = _0xea0c01[_0x59eab5['getUint16']()];
                        var _0x4744e3 = _0x5acb7a['inTangent'], _0x4b7401 = _0x5acb7a['outTangent'], _0x35ee80 = _0x5acb7a['value'];
                        _0x4744e3['x'] = _0x59eab5['getFloat32'](), _0x4744e3['y'] = _0x59eab5['getFloat32'](), _0x4744e3['z'] = _0x59eab5['getFloat32'](), _0x4b7401['x'] = _0x59eab5['getFloat32'](), _0x4b7401['y'] = _0x59eab5['getFloat32'](), _0x4b7401['z'] = _0x59eab5['getFloat32'](), _0x35ee80['x'] = _0x59eab5['getFloat32'](), _0x35ee80['y'] = _0x59eab5['getFloat32'](), _0x35ee80['z'] = _0x59eab5['getFloat32']();
                        break;
                    case 0x2:
                        var _0x29d8b7 = new _0xfe02a7();
                        _0x155224['_setKeyfra' + 'meByIndex'](_0x1c1089, _0x29d8b7), _0x5de259 = _0x29d8b7['time'] = _0xea0c01[_0x59eab5['getUint16']()];
                        var _0x4f9ef9 = _0x29d8b7['inTangent'], _0x4a2127 = _0x29d8b7['outTangent'], _0x5a466c = _0x29d8b7['value'];
                        _0x4f9ef9['x'] = _0x59eab5['getFloat32'](), _0x4f9ef9['y'] = _0x59eab5['getFloat32'](), _0x4f9ef9['z'] = _0x59eab5['getFloat32'](), _0x4f9ef9['w'] = _0x59eab5['getFloat32'](), _0x4a2127['x'] = _0x59eab5['getFloat32'](), _0x4a2127['y'] = _0x59eab5['getFloat32'](), _0x4a2127['z'] = _0x59eab5['getFloat32'](), _0x4a2127['w'] = _0x59eab5['getFloat32'](), _0x5a466c['x'] = _0x59eab5['getFloat32'](), _0x5a466c['y'] = _0x59eab5['getFloat32'](), _0x5a466c['z'] = _0x59eab5['getFloat32'](), _0x5a466c['w'] = _0x59eab5['getFloat32']();
                        break;
                    default:
                        throw 'AnimationC' + 'lipParser0' + '3:unknown\x20' + 'type.';
                    }
                }
            }
            var _0x524978 = _0x59eab5['getUint16']();
            for (_0x5b2a19 = 0x0; _0x5b2a19 < _0x524978; _0x5b2a19++) {
                var _0x4e75dd = new _0x500da2();
                _0x4e75dd['time'] = Math['min'](_0xcfa258, _0x59eab5['getFloat32']()), _0x4e75dd['eventName'] = _0x4ade33['_strings'][_0x59eab5['getUint16']()];
                var _0x388fc8, _0x93d36a = _0x59eab5['getUint16']();
                _0x93d36a > 0x0 && (_0x4e75dd['params'] = _0x388fc8 = []);
                for (_0x1c1089 = 0x0; _0x1c1089 < _0x93d36a; _0x1c1089++) {
                    var _0x15052b = _0x59eab5['getByte']();
                    switch (_0x15052b) {
                    case 0x0:
                        _0x388fc8['push'](!!_0x59eab5['getByte']());
                        break;
                    case 0x1:
                        _0x388fc8['push'](_0x59eab5['getInt32']());
                        break;
                    case 0x2:
                        _0x388fc8['push'](_0x59eab5['getFloat32']());
                        break;
                    case 0x3:
                        _0x388fc8['push'](_0x4ade33['_strings'][_0x59eab5['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20ty' + 'pe.');
                    }
                }
                _0x36fa4a['addEvent'](_0x4e75dd);
            }
        }
    }
    _0x4ade33['_strings'] = [], _0x4ade33['_BLOCK'] = { 'count': 0x0 }, _0x4ade33['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x2634e4 {
        static ['READ_DATA']() {
            _0x2634e4['_DATA']['offset'] = _0x2634e4['_reader']['getUint32'](), _0x2634e4['_DATA']['size'] = _0x2634e4['_reader']['getUint32']();
        }
        static ['READ_BLOCK']() {
            var _0x362fae = _0x2634e4['_BLOCK']['count'] = _0x2634e4['_reader']['getUint16'](), _0x1e7d52 = _0x2634e4['_BLOCK']['blockStart' + 's'] = [], _0x59f56b = _0x2634e4['_BLOCK']['blockLengt' + 'hs'] = [];
            for (var _0x420ab5 = 0x0; _0x420ab5 < _0x362fae; _0x420ab5++) {
                _0x1e7d52['push'](_0x2634e4['_reader']['getUint32']()), _0x59f56b['push'](_0x2634e4['_reader']['getUint32']());
            }
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x8074cf = _0x2634e4['_reader']['getUint32'](), _0x5b45b7 = _0x2634e4['_reader']['getUint16'](), _0x454f5f = _0x2634e4['_reader']['pos'];
            _0x2634e4['_reader']['pos'] = _0x8074cf + _0x2634e4['_DATA']['offset'];
            for (var _0xca631d = 0x0; _0xca631d < _0x5b45b7; _0xca631d++)
                _0x2634e4['_strings'][_0xca631d] = _0x2634e4['_reader']['readUTFStr' + 'ing']();
            _0x2634e4['_reader']['pos'] = _0x454f5f;
        }
        static ['parse'](_0x473484, _0x2ea691, _0x31df7a) {
            _0x2634e4['_animation' + 'Clip'] = _0x473484, _0x2634e4['_reader'] = _0x2ea691, _0x2634e4['_version'] = _0x31df7a, _0x2634e4['READ_DATA'](), _0x2634e4['READ_BLOCK'](), _0x2634e4['READ_STRIN' + 'GS']();
            for (var _0x5e6bf2 = 0x0, _0x826792 = _0x2634e4['_BLOCK']['count']; _0x5e6bf2 < _0x826792; _0x5e6bf2++) {
                var _0x378826 = _0x2ea691['getUint16'](), _0x434416 = _0x2634e4['_strings'][_0x378826], _0xde2ce1 = _0x2634e4['READ_' + _0x434416];
                if (_0xde2ce1 == null)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x378826 + '\x20' + _0x434416);
                else
                    _0xde2ce1['call'](null);
            }
            _0x2634e4['_version'] = null, _0x2634e4['_reader'] = null, _0x2634e4['_animation' + 'Clip'] = null;
        }
        static ['READ_ANIMA' + 'TIONS']() {
            var _0x4ba002, _0x32dcf6, _0xfba79e, _0x5b52b8 = _0x2634e4['_reader'], _0x8f30e3 = _0x5b52b8['__getBuffe' + 'r'](), _0x5b5791 = [], _0x4c3f28 = _0x5b52b8['getUint16']();
            _0x5b5791['length'] = _0x4c3f28;
            for (_0x4ba002 = 0x0; _0x4ba002 < _0x4c3f28; _0x4ba002++)
                _0x5b5791[_0x4ba002] = _0x5b52b8['getFloat32']();
            var _0xcb4c21 = _0x2634e4['_animation' + 'Clip'];
            _0xcb4c21['name'] = _0x2634e4['_strings'][_0x5b52b8['getUint16']()];
            var _0x57cc92 = _0xcb4c21['_duration'] = _0x5b52b8['getFloat32']();
            _0xcb4c21['islooping'] = !!_0x5b52b8['getByte'](), _0xcb4c21['_frameRate'] = _0x5b52b8['getInt16']();
            var _0x4ccdaa = _0x5b52b8['getInt16'](), _0xc5d2c1 = _0xcb4c21['_nodes'];
            _0xc5d2c1['count'] = _0x4ccdaa;
            var _0x4f5732 = _0xcb4c21['_nodesMap'] = {}, _0x3c7dba = _0xcb4c21['_nodesDic'] = {};
            for (_0x4ba002 = 0x0; _0x4ba002 < _0x4ccdaa; _0x4ba002++) {
                _0xfba79e = new _0x3f9891(), _0xc5d2c1['setNodeByI' + 'ndex'](_0x4ba002, _0xfba79e), _0xfba79e['_indexInLi' + 'st'] = _0x4ba002;
                var _0x32c510 = _0xfba79e['type'] = _0x5b52b8['getUint8'](), _0x160c30 = _0x5b52b8['getUint16']();
                _0xfba79e['_setOwnerP' + 'athCount'](_0x160c30);
                for (_0x32dcf6 = 0x0; _0x32dcf6 < _0x160c30; _0x32dcf6++)
                    _0xfba79e['_setOwnerP' + 'athByIndex'](_0x32dcf6, _0x2634e4['_strings'][_0x5b52b8['getUint16']()]);
                var _0x5dbf64 = _0xfba79e['_joinOwner' + 'Path']('/'), _0x46ef61 = _0x4f5732[_0x5dbf64];
                _0x46ef61 || (_0x4f5732[_0x5dbf64] = _0x46ef61 = []), _0x46ef61['push'](_0xfba79e), _0xfba79e['propertyOw' + 'ner'] = _0x2634e4['_strings'][_0x5b52b8['getUint16']()];
                var _0x3095a8 = _0x5b52b8['getUint16']();
                _0xfba79e['_setProper' + 'tyCount'](_0x3095a8);
                for (_0x32dcf6 = 0x0; _0x32dcf6 < _0x3095a8; _0x32dcf6++)
                    _0xfba79e['_setProper' + 'tyByIndex'](_0x32dcf6, _0x2634e4['_strings'][_0x5b52b8['getUint16']()]);
                var _0x30edb4 = _0x5dbf64 + '.' + _0xfba79e['propertyOw' + 'ner'] + '.' + _0xfba79e['_joinPrope' + 'rty']('.');
                _0x3c7dba[_0x30edb4] = _0xfba79e, _0xfba79e['fullPath'] = _0x30edb4;
                var _0x3e5dd8 = _0x5b52b8['getUint16']();
                _0xfba79e['_setKeyfra' + 'meCount'](_0x3e5dd8);
                var _0x117ce9;
                switch (_0x2634e4['_version']) {
                case 'LAYAANIMAT' + 'ION:04':
                    for (_0x32dcf6 = 0x0; _0x32dcf6 < _0x3e5dd8; _0x32dcf6++) {
                        switch (_0x32c510) {
                        case 0x0:
                            var _0x10efed = new _0x2d9b18();
                            _0xfba79e['_setKeyfra' + 'meByIndex'](_0x32dcf6, _0x10efed), _0x117ce9 = _0x10efed['time'] = _0x5b5791[_0x5b52b8['getUint16']()], _0x10efed['inTangent'] = _0x5b52b8['getFloat32'](), _0x10efed['outTangent'] = _0x5b52b8['getFloat32'](), _0x10efed['value'] = _0x5b52b8['getFloat32']();
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            var _0x52a65c = new _0x4adfd9();
                            _0xfba79e['_setKeyfra' + 'meByIndex'](_0x32dcf6, _0x52a65c), _0x117ce9 = _0x52a65c['time'] = _0x5b5791[_0x5b52b8['getUint16']()];
                            var _0x5ecd20 = _0x52a65c['inTangent'], _0xe42983 = _0x52a65c['outTangent'], _0x2e2ed9 = _0x52a65c['value'];
                            _0x5ecd20['x'] = _0x5b52b8['getFloat32'](), _0x5ecd20['y'] = _0x5b52b8['getFloat32'](), _0x5ecd20['z'] = _0x5b52b8['getFloat32'](), _0xe42983['x'] = _0x5b52b8['getFloat32'](), _0xe42983['y'] = _0x5b52b8['getFloat32'](), _0xe42983['z'] = _0x5b52b8['getFloat32'](), _0x2e2ed9['x'] = _0x5b52b8['getFloat32'](), _0x2e2ed9['y'] = _0x5b52b8['getFloat32'](), _0x2e2ed9['z'] = _0x5b52b8['getFloat32']();
                            break;
                        case 0x2:
                            var _0x152fbc = new _0xfe02a7();
                            _0xfba79e['_setKeyfra' + 'meByIndex'](_0x32dcf6, _0x152fbc), _0x117ce9 = _0x152fbc['time'] = _0x5b5791[_0x5b52b8['getUint16']()];
                            var _0x42d46d = _0x152fbc['inTangent'], _0x4d3c2c = _0x152fbc['outTangent'], _0x5eb8e4 = _0x152fbc['value'];
                            _0x42d46d['x'] = _0x5b52b8['getFloat32'](), _0x42d46d['y'] = _0x5b52b8['getFloat32'](), _0x42d46d['z'] = _0x5b52b8['getFloat32'](), _0x42d46d['w'] = _0x5b52b8['getFloat32'](), _0x4d3c2c['x'] = _0x5b52b8['getFloat32'](), _0x4d3c2c['y'] = _0x5b52b8['getFloat32'](), _0x4d3c2c['z'] = _0x5b52b8['getFloat32'](), _0x4d3c2c['w'] = _0x5b52b8['getFloat32'](), _0x5eb8e4['x'] = _0x5b52b8['getFloat32'](), _0x5eb8e4['y'] = _0x5b52b8['getFloat32'](), _0x5eb8e4['z'] = _0x5b52b8['getFloat32'](), _0x5eb8e4['w'] = _0x5b52b8['getFloat32']();
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                    }
                    break;
                case 'LAYAANIMAT' + 'ION:COMPRE' + 'SSION_04':
                    for (_0x32dcf6 = 0x0; _0x32dcf6 < _0x3e5dd8; _0x32dcf6++) {
                        switch (_0x32c510) {
                        case 0x0:
                            _0x10efed = new _0x2d9b18(), _0xfba79e['_setKeyfra' + 'meByIndex'](_0x32dcf6, _0x10efed), _0x117ce9 = _0x10efed['time'] = _0x5b5791[_0x5b52b8['getUint16']()], _0x10efed['inTangent'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x10efed['outTangent'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x10efed['value'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']());
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x52a65c = new _0x4adfd9(), _0xfba79e['_setKeyfra' + 'meByIndex'](_0x32dcf6, _0x52a65c), _0x117ce9 = _0x52a65c['time'] = _0x5b5791[_0x5b52b8['getUint16']()], _0x5ecd20 = _0x52a65c['inTangent'], _0xe42983 = _0x52a65c['outTangent'], _0x2e2ed9 = _0x52a65c['value'], _0x5ecd20['x'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x5ecd20['y'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x5ecd20['z'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0xe42983['x'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0xe42983['y'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0xe42983['z'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x2e2ed9['x'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x2e2ed9['y'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x2e2ed9['z'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']());
                            break;
                        case 0x2:
                            _0x152fbc = new _0xfe02a7(), _0xfba79e['_setKeyfra' + 'meByIndex'](_0x32dcf6, _0x152fbc), _0x117ce9 = _0x152fbc['time'] = _0x5b5791[_0x5b52b8['getUint16']()], _0x42d46d = _0x152fbc['inTangent'], _0x4d3c2c = _0x152fbc['outTangent'], _0x5eb8e4 = _0x152fbc['value'], _0x42d46d['x'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x42d46d['y'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x42d46d['z'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x42d46d['w'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x4d3c2c['x'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x4d3c2c['y'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x4d3c2c['z'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x4d3c2c['w'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x5eb8e4['x'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x5eb8e4['y'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x5eb8e4['z'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']()), _0x5eb8e4['w'] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x5b52b8['getUint16']());
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                    }
                    break;
                }
            }
            var _0x114c9b = _0x5b52b8['getUint16']();
            for (_0x4ba002 = 0x0; _0x4ba002 < _0x114c9b; _0x4ba002++) {
                var _0xc746b2 = new _0x500da2();
                _0xc746b2['time'] = Math['min'](_0x57cc92, _0x5b52b8['getFloat32']()), _0xc746b2['eventName'] = _0x2634e4['_strings'][_0x5b52b8['getUint16']()];
                var _0x17c1b2, _0xd219fe = _0x5b52b8['getUint16']();
                _0xd219fe > 0x0 && (_0xc746b2['params'] = _0x17c1b2 = []);
                for (_0x32dcf6 = 0x0; _0x32dcf6 < _0xd219fe; _0x32dcf6++) {
                    var _0x5cf085 = _0x5b52b8['getByte']();
                    switch (_0x5cf085) {
                    case 0x0:
                        _0x17c1b2['push'](!!_0x5b52b8['getByte']());
                        break;
                    case 0x1:
                        _0x17c1b2['push'](_0x5b52b8['getInt32']());
                        break;
                    case 0x2:
                        _0x17c1b2['push'](_0x5b52b8['getFloat32']());
                        break;
                    case 0x3:
                        _0x17c1b2['push'](_0x2634e4['_strings'][_0x5b52b8['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20ty' + 'pe.');
                    }
                }
                _0xcb4c21['addEvent'](_0xc746b2);
            }
        }
    }
    _0x2634e4['_strings'] = [], _0x2634e4['_BLOCK'] = { 'count': 0x0 }, _0x2634e4['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x199e45 {
        constructor() {
            this['_nodes'] = [];
        }
        get ['count']() {
            return this['_nodes']['length'];
        }
        set ['count'](_0x41f8ac) {
            this['_nodes']['length'] = _0x41f8ac;
        }
        ['getNodeByI' + 'ndex'](_0xefcf8b) {
            return this['_nodes'][_0xefcf8b];
        }
        ['setNodeByI' + 'ndex'](_0x41523d, _0x818f08) {
            this['_nodes'][_0x41523d] = _0x818f08;
        }
    }
    class _0x3bbac0 extends _0x442335['Resource'] {
        constructor() {
            super(), this['_nodes'] = new _0x199e45(), this['_animation' + 'Events'] = [];
        }
        static ['_parse'](_0x2c598f, _0x445483 = null, _0x1f170e = null) {
            var _0x119509 = new _0x3bbac0(), _0x429ac6 = new _0x442335['Byte'](_0x2c598f), _0x481cb8 = _0x429ac6['readUTFStr' + 'ing']();
            switch (_0x481cb8) {
            case 'LAYAANIMAT' + 'ION:03':
                _0x4ade33['parse'](_0x119509, _0x429ac6);
                break;
            case 'LAYAANIMAT' + 'ION:04':
            case 'LAYAANIMAT' + 'ION:COMPRE' + 'SSION_04':
                _0x2634e4['parse'](_0x119509, _0x429ac6, _0x481cb8);
                break;
            default:
                throw 'unknown\x20an' + 'imationCli' + 'p\x20version.';
            }
            return _0x119509;
        }
        static ['load'](_0x2e8c70, _0x1470b3) {
            _0x442335['ILaya']['loader']['create'](_0x2e8c70, _0x1470b3, null, _0x3bbac0['ANIMATIONC' + 'LIP']);
        }
        ['duration']() {
            return this['_duration'];
        }
        ['_hermiteIn' + 'terpolate'](_0xc32963, _0x32f433, _0xec9415, _0x998b6b) {
            var _0x5358e9 = _0xc32963['outTangent'], _0x198693 = _0x32f433['inTangent'];
            if (Number['isFinite'](_0x5358e9) && Number['isFinite'](_0x198693)) {
                var _0x12a0de = _0xec9415 * _0xec9415, _0x5bee8f = _0x12a0de * _0xec9415, _0x2dc6ef = 0x2 * _0x5bee8f - 0x3 * _0x12a0de + 0x1, _0x4c6be4 = _0x5bee8f - 0x2 * _0x12a0de + _0xec9415, _0x1cb9cf = _0x5bee8f - _0x12a0de, _0xadb65c = -0x2 * _0x5bee8f + 0x3 * _0x12a0de;
                return _0x2dc6ef * _0xc32963['value'] + _0x4c6be4 * _0x5358e9 * _0x998b6b + _0x1cb9cf * _0x198693 * _0x998b6b + _0xadb65c * _0x32f433['value'];
            } else
                return _0xc32963['value'];
        }
        ['_hermiteIn' + 'terpolateV' + 'ector3'](_0x53f574, _0x17310c, _0x1b33a9, _0x3780c2, _0x264e98) {
            var _0x1ad059 = _0x53f574['value'], _0x1b1187 = _0x53f574['outTangent'], _0xc8db1b = _0x17310c['value'], _0x29e459 = _0x17310c['inTangent'], _0x1e588f = _0x1b33a9 * _0x1b33a9, _0x524d45 = _0x1e588f * _0x1b33a9, _0x57a720 = 0x2 * _0x524d45 - 0x3 * _0x1e588f + 0x1, _0x17e2bb = _0x524d45 - 0x2 * _0x1e588f + _0x1b33a9, _0x49028e = _0x524d45 - _0x1e588f, _0x5f5345 = -0x2 * _0x524d45 + 0x3 * _0x1e588f, _0x1f22c6 = _0x1b1187['x'], _0x1c6d4a = _0x29e459['x'];
            if (Number['isFinite'](_0x1f22c6) && Number['isFinite'](_0x1c6d4a))
                _0x264e98['x'] = _0x57a720 * _0x1ad059['x'] + _0x17e2bb * _0x1f22c6 * _0x3780c2 + _0x49028e * _0x1c6d4a * _0x3780c2 + _0x5f5345 * _0xc8db1b['x'];
            else
                _0x264e98['x'] = _0x1ad059['x'];
            _0x1f22c6 = _0x1b1187['y'], _0x1c6d4a = _0x29e459['y'];
            if (Number['isFinite'](_0x1f22c6) && Number['isFinite'](_0x1c6d4a))
                _0x264e98['y'] = _0x57a720 * _0x1ad059['y'] + _0x17e2bb * _0x1f22c6 * _0x3780c2 + _0x49028e * _0x1c6d4a * _0x3780c2 + _0x5f5345 * _0xc8db1b['y'];
            else
                _0x264e98['y'] = _0x1ad059['y'];
            _0x1f22c6 = _0x1b1187['z'], _0x1c6d4a = _0x29e459['z'];
            if (Number['isFinite'](_0x1f22c6) && Number['isFinite'](_0x1c6d4a))
                _0x264e98['z'] = _0x57a720 * _0x1ad059['z'] + _0x17e2bb * _0x1f22c6 * _0x3780c2 + _0x49028e * _0x1c6d4a * _0x3780c2 + _0x5f5345 * _0xc8db1b['z'];
            else
                _0x264e98['z'] = _0x1ad059['z'];
        }
        ['_hermiteIn' + 'terpolateQ' + 'uaternion'](_0x51e85b, _0x35758e, _0x43865d, _0x3ef084, _0x465fcb) {
            var _0xe0b4d3 = _0x51e85b['value'], _0x19f9b9 = _0x51e85b['outTangent'], _0x2f9fc5 = _0x35758e['value'], _0x53346b = _0x35758e['inTangent'], _0x56a143 = _0x43865d * _0x43865d, _0x39187d = _0x56a143 * _0x43865d, _0x423b9c = 0x2 * _0x39187d - 0x3 * _0x56a143 + 0x1, _0x12651a = _0x39187d - 0x2 * _0x56a143 + _0x43865d, _0x4d8b47 = _0x39187d - _0x56a143, _0x4c1902 = -0x2 * _0x39187d + 0x3 * _0x56a143, _0x44e963 = _0x19f9b9['x'], _0x5d15c5 = _0x53346b['x'];
            if (Number['isFinite'](_0x44e963) && Number['isFinite'](_0x5d15c5))
                _0x465fcb['x'] = _0x423b9c * _0xe0b4d3['x'] + _0x12651a * _0x44e963 * _0x3ef084 + _0x4d8b47 * _0x5d15c5 * _0x3ef084 + _0x4c1902 * _0x2f9fc5['x'];
            else
                _0x465fcb['x'] = _0xe0b4d3['x'];
            _0x44e963 = _0x19f9b9['y'], _0x5d15c5 = _0x53346b['y'];
            if (Number['isFinite'](_0x44e963) && Number['isFinite'](_0x5d15c5))
                _0x465fcb['y'] = _0x423b9c * _0xe0b4d3['y'] + _0x12651a * _0x44e963 * _0x3ef084 + _0x4d8b47 * _0x5d15c5 * _0x3ef084 + _0x4c1902 * _0x2f9fc5['y'];
            else
                _0x465fcb['y'] = _0xe0b4d3['y'];
            _0x44e963 = _0x19f9b9['z'], _0x5d15c5 = _0x53346b['z'];
            if (Number['isFinite'](_0x44e963) && Number['isFinite'](_0x5d15c5))
                _0x465fcb['z'] = _0x423b9c * _0xe0b4d3['z'] + _0x12651a * _0x44e963 * _0x3ef084 + _0x4d8b47 * _0x5d15c5 * _0x3ef084 + _0x4c1902 * _0x2f9fc5['z'];
            else
                _0x465fcb['z'] = _0xe0b4d3['z'];
            _0x44e963 = _0x19f9b9['w'], _0x5d15c5 = _0x53346b['w'];
            if (Number['isFinite'](_0x44e963) && Number['isFinite'](_0x5d15c5))
                _0x465fcb['w'] = _0x423b9c * _0xe0b4d3['w'] + _0x12651a * _0x44e963 * _0x3ef084 + _0x4d8b47 * _0x5d15c5 * _0x3ef084 + _0x4c1902 * _0x2f9fc5['w'];
            else
                _0x465fcb['w'] = _0xe0b4d3['w'];
        }
        ['_evaluateC' + 'lipDatasRe' + 'alTime'](_0x4eecb7, _0x598954, _0x45eb65, _0x20c95d, _0x316a8f, _0x49d085) {
            for (var _0x2c5ee0 = 0x0, _0x2a1d06 = _0x4eecb7['count']; _0x2c5ee0 < _0x2a1d06; _0x2c5ee0++) {
                var _0x16450d = _0x4eecb7['getNodeByI' + 'ndex'](_0x2c5ee0), _0x31cae4 = _0x16450d['type'], _0x219d94, _0xc22b0e = _0x16450d['_keyFrames'], _0x2ef78d = _0xc22b0e['length'], _0x46d22c = _0x45eb65[_0x2c5ee0];
                if (_0x316a8f) {
                    _0x46d22c !== -0x1 && _0x598954 < _0xc22b0e[_0x46d22c]['time'] && (_0x46d22c = -0x1, _0x45eb65[_0x2c5ee0] = _0x46d22c);
                    _0x219d94 = _0x46d22c + 0x1;
                    while (_0x219d94 < _0x2ef78d) {
                        if (_0xc22b0e[_0x219d94]['time'] > _0x598954)
                            break;
                        _0x46d22c++, _0x219d94++, _0x45eb65[_0x2c5ee0] = _0x46d22c;
                    }
                } else {
                    _0x219d94 = _0x46d22c + 0x1;
                    _0x219d94 !== _0x2ef78d && _0x598954 > _0xc22b0e[_0x219d94]['time'] && (_0x46d22c = _0x2ef78d - 0x1, _0x45eb65[_0x2c5ee0] = _0x46d22c);
                    _0x219d94 = _0x46d22c + 0x1;
                    while (_0x46d22c > -0x1) {
                        if (_0xc22b0e[_0x46d22c]['time'] < _0x598954)
                            break;
                        _0x46d22c--, _0x219d94--, _0x45eb65[_0x2c5ee0] = _0x46d22c;
                    }
                }
                var _0x13fbdf = _0x219d94 === _0x2ef78d;
                switch (_0x31cae4) {
                case 0x0:
                    if (_0x46d22c !== -0x1) {
                        var _0x4af43a = _0xc22b0e[_0x46d22c];
                        if (_0x13fbdf)
                            _0x49d085[_0x2c5ee0] = _0x4af43a['value'];
                        else {
                            var _0x150a4f = _0xc22b0e[_0x219d94], _0x56f021 = _0x150a4f['time'] - _0x4af43a['time'], _0x2ce408;
                            if (_0x56f021 !== 0x0)
                                _0x2ce408 = (_0x598954 - _0x4af43a['time']) / _0x56f021;
                            else
                                _0x2ce408 = 0x0;
                            _0x49d085[_0x2c5ee0] = this['_hermiteIn' + 'terpolate'](_0x4af43a, _0x150a4f, _0x2ce408, _0x56f021);
                        }
                    } else
                        _0x49d085[_0x2c5ee0] = _0xc22b0e[0x0]['value'];
                    if (_0x20c95d)
                        _0x49d085[_0x2c5ee0] = _0x49d085[_0x2c5ee0] - _0xc22b0e[0x0]['value'];
                    break;
                case 0x1:
                case 0x4:
                    var _0x58e1e5 = _0x49d085[_0x2c5ee0];
                    this['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0xc22b0e, _0x46d22c, _0x13fbdf, _0x598954, _0x58e1e5);
                    if (_0x20c95d) {
                        var _0x294ed5 = _0xc22b0e[0x0]['value'];
                        _0x58e1e5['x'] -= _0x294ed5['x'], _0x58e1e5['y'] -= _0x294ed5['y'], _0x58e1e5['z'] -= _0x294ed5['z'];
                    }
                    break;
                case 0x2:
                    var _0x1f44b5 = _0x49d085[_0x2c5ee0];
                    this['_evaluateF' + 'rameNodeQu' + 'aternionDa' + 'tasRealTim' + 'e'](_0xc22b0e, _0x46d22c, _0x13fbdf, _0x598954, _0x1f44b5);
                    if (_0x20c95d) {
                        var _0x3ba793 = _0x3bbac0['_tempQuate' + 'rnion0'], _0x3877af = _0xc22b0e[0x0]['value'];
                        _0x47bed9['quaternion' + 'Conjugate'](_0x3877af, _0x3ba793), _0x388291['multiply'](_0x3ba793, _0x1f44b5, _0x1f44b5);
                    }
                    break;
                case 0x3:
                    _0x58e1e5 = _0x49d085[_0x2c5ee0], this['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0xc22b0e, _0x46d22c, _0x13fbdf, _0x598954, _0x58e1e5);
                    _0x20c95d && (_0x294ed5 = _0xc22b0e[0x0]['value'], _0x58e1e5['x'] /= _0x294ed5['x'], _0x58e1e5['y'] /= _0x294ed5['y'], _0x58e1e5['z'] /= _0x294ed5['z']);
                    break;
                default:
                    throw 'AnimationC' + 'lip:unknow' + 'n\x20node\x20typ' + 'e.';
                }
            }
        }
        ['_evaluateC' + 'lipDatasRe' + 'alTimeForN' + 'ative'](_0x3df36a, _0x421782, _0x500fb0, _0x53894e) {
            _0x442335['LayaGL']['instance']['evaluateCl' + 'ipDatasRea' + 'lTime'](_0x3df36a['_nativeObj'], _0x421782, _0x500fb0, _0x53894e);
        }
        ['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x33f982, _0x2f4c26, _0x403322, _0xd9310f, _0x48faf2) {
            if (_0x2f4c26 !== -0x1) {
                var _0x373584 = _0x33f982[_0x2f4c26];
                if (_0x403322) {
                    var _0x54ce14 = _0x373584['value'];
                    _0x48faf2['x'] = _0x54ce14['x'], _0x48faf2['y'] = _0x54ce14['y'], _0x48faf2['z'] = _0x54ce14['z'];
                } else {
                    var _0x46ab4d = _0x33f982[_0x2f4c26 + 0x1], _0x2760b7, _0x3c2094 = _0x373584['time'], _0x57422d = _0x46ab4d['time'] - _0x3c2094;
                    if (_0x57422d !== 0x0)
                        _0x2760b7 = (_0xd9310f - _0x3c2094) / _0x57422d;
                    else
                        _0x2760b7 = 0x0;
                    this['_hermiteIn' + 'terpolateV' + 'ector3'](_0x373584, _0x46ab4d, _0x2760b7, _0x57422d, _0x48faf2);
                }
            } else {
                var _0x40c350 = _0x33f982[0x0]['value'];
                _0x48faf2['x'] = _0x40c350['x'], _0x48faf2['y'] = _0x40c350['y'], _0x48faf2['z'] = _0x40c350['z'];
            }
        }
        ['_evaluateF' + 'rameNodeQu' + 'aternionDa' + 'tasRealTim' + 'e'](_0x18e064, _0x1f2795, _0x247d71, _0x4bf86c, _0x212f25) {
            if (_0x1f2795 !== -0x1) {
                var _0x1a484d = _0x18e064[_0x1f2795];
                if (_0x247d71) {
                    var _0x32f198 = _0x1a484d['value'];
                    _0x212f25['x'] = _0x32f198['x'], _0x212f25['y'] = _0x32f198['y'], _0x212f25['z'] = _0x32f198['z'], _0x212f25['w'] = _0x32f198['w'];
                } else {
                    var _0x3f747b = _0x18e064[_0x1f2795 + 0x1], _0x533dfa, _0xdc87f8 = _0x1a484d['time'], _0x213bea = _0x3f747b['time'] - _0xdc87f8;
                    if (_0x213bea !== 0x0)
                        _0x533dfa = (_0x4bf86c - _0xdc87f8) / _0x213bea;
                    else
                        _0x533dfa = 0x0;
                    this['_hermiteIn' + 'terpolateQ' + 'uaternion'](_0x1a484d, _0x3f747b, _0x533dfa, _0x213bea, _0x212f25);
                }
            } else {
                var _0x33c647 = _0x18e064[0x0]['value'];
                _0x212f25['x'] = _0x33c647['x'], _0x212f25['y'] = _0x33c647['y'], _0x212f25['z'] = _0x33c647['z'], _0x212f25['w'] = _0x33c647['w'];
            }
        }
        ['_binarySea' + 'rchEventIn' + 'dex'](_0xeb8187) {
            var _0x3a1286 = 0x0, _0x2ed510 = this['_animation' + 'Events']['length'] - 0x1, _0x12896c;
            while (_0x3a1286 <= _0x2ed510) {
                _0x12896c = Math['floor']((_0x3a1286 + _0x2ed510) / 0x2);
                var _0x4cda9d = this['_animation' + 'Events'][_0x12896c]['time'];
                if (_0x4cda9d == _0xeb8187)
                    return _0x12896c;
                else {
                    if (_0x4cda9d > _0xeb8187)
                        _0x2ed510 = _0x12896c - 0x1;
                    else
                        _0x3a1286 = _0x12896c + 0x1;
                }
            }
            return _0x3a1286;
        }
        ['addEvent'](_0xf705d1) {
            var _0x17a02c = this['_binarySea' + 'rchEventIn' + 'dex'](_0xf705d1['time']);
            this['_animation' + 'Events']['splice'](_0x17a02c, 0x0, _0xf705d1);
        }
        ['_disposeRe' + 'source']() {
            this['_nodes'] = null, this['_nodesMap'] = null;
        }
    }
    _0x3bbac0['ANIMATIONC' + 'LIP'] = 'ANIMATIONC' + 'LIP', _0x3bbac0['_tempQuate' + 'rnion0'] = new _0x388291();
    class _0x2a8b4d {
        constructor() {
            this['_currentSt' + 'ate'] = null;
        }
        get ['normalized' + 'Time']() {
            return this['_normalize' + 'dTime'];
        }
        get ['duration']() {
            return this['_duration'];
        }
        get ['animatorSt' + 'ate']() {
            return this['_currentSt' + 'ate'];
        }
        ['_resetPlay' + 'State'](_0x37b67d) {
            this['_finish'] = ![], this['_startPlay' + 'Time'] = _0x37b67d, this['_elapsedTi' + 'me'] = _0x37b67d, this['_playEvent' + 'Index'] = 0x0, this['_lastIsFro' + 'nt'] = !![];
        }
        ['_cloneTo'](_0x269057) {
            _0x269057['_finish'] = this['_finish'], _0x269057['_startPlay' + 'Time'] = this['_startPlay' + 'Time'], _0x269057['_elapsedTi' + 'me'] = this['_elapsedTi' + 'me'], _0x269057['_normalize' + 'dTime'] = this['_normalize' + 'dTime'], _0x269057['_normalize' + 'dPlayTime'] = this['_normalize' + 'dPlayTime'], _0x269057['_playEvent' + 'Index'] = this['_playEvent' + 'Index'], _0x269057['_lastIsFro' + 'nt'] = this['_lastIsFro' + 'nt'];
        }
    }
    class _0x6ba2ab {
        constructor(_0x48d05a) {
            this['_defaultSt' + 'ate'] = null, this['_reference' + 'Count'] = 0x0, this['_playType'] = -0x1, this['_crossDura' + 'tion'] = -0x1, this['_crossMark'] = 0x0, this['_crossNode' + 'sOwnersCou' + 'nt'] = 0x0, this['_crossNode' + 'sOwners'] = [], this['_crossNode' + 'sOwnersInd' + 'icesMap'] = {}, this['_srcCrossC' + 'lipNodeInd' + 'ices'] = [], this['_destCross' + 'ClipNodeIn' + 'dices'] = [], this['_statesMap'] = {}, this['_states'] = [], this['_playState' + 'Info'] = new _0x2a8b4d(), this['_crossPlay' + 'StateInfo'] = new _0x2a8b4d(), this['blendingMo' + 'de'] = _0x6ba2ab['BLENDINGMO' + 'DE_OVERRID' + 'E'], this['defaultWei' + 'ght'] = 0x1, this['playOnWake'] = !![], this['name'] = _0x48d05a;
        }
        get ['defaultSta' + 'te']() {
            return this['_defaultSt' + 'ate'];
        }
        set ['defaultSta' + 'te'](_0x2e9582) {
            this['_defaultSt' + 'ate'] = _0x2e9582, this['_statesMap'][_0x2e9582['name']] = _0x2e9582;
        }
        ['_removeCli' + 'p'](_0x5b43b4, _0x1700da, _0x5ec6eb, _0x3f3c9e) {
            var _0x37819a = _0x3f3c9e['_clip'], _0x3df4c4 = _0x5b43b4[_0x5ec6eb];
            _0x5b43b4['splice'](_0x5ec6eb, 0x1), delete _0x1700da[_0x3f3c9e['name']];
            if (this['_animator']) {
                var _0xb1b00f = _0x37819a['_nodes'], _0x57d8e1 = _0x3df4c4['_nodeOwner' + 's'];
                _0x37819a['_removeRef' + 'erence']();
                for (var _0x303772 = 0x0, _0x34a200 = _0xb1b00f['count']; _0x303772 < _0x34a200; _0x303772++)
                    this['_animator']['_removeKey' + 'frameNodeO' + 'wner'](_0x57d8e1, _0xb1b00f['getNodeByI' + 'ndex'](_0x303772));
            }
        }
        ['_getRefere' + 'nceCount']() {
            return this['_reference' + 'Count'];
        }
        ['_addRefere' + 'nce'](_0x4f4d9f = 0x1) {
            for (var _0x955e1d = 0x0, _0x14dd87 = this['_states']['length']; _0x955e1d < _0x14dd87; _0x955e1d++)
                this['_states'][_0x955e1d]['_addRefere' + 'nce'](_0x4f4d9f);
            this['_reference' + 'Count'] += _0x4f4d9f;
        }
        ['_removeRef' + 'erence'](_0x32145a = 0x1) {
            for (var _0x40bb85 = 0x0, _0x5c1939 = this['_states']['length']; _0x40bb85 < _0x5c1939; _0x40bb85++)
                this['_states'][_0x40bb85]['_removeRef' + 'erence'](_0x32145a);
            this['_reference' + 'Count'] -= _0x32145a;
        }
        ['_clearRefe' + 'rence']() {
            this['_removeRef' + 'erence'](-this['_reference' + 'Count']);
        }
        ['getCurrent' + 'PlayState']() {
            return this['_playState' + 'Info'];
        }
        ['getAnimato' + 'rState'](_0xce571a) {
            var _0x296c19 = this['_statesMap'][_0xce571a];
            return _0x296c19 ? _0x296c19 : null;
        }
        ['addState'](_0x2fd324) {
            var _0x43645f = _0x2fd324['name'];
            if (this['_statesMap'][_0x43645f])
                throw 'AnimatorCo' + 'ntrollerLa' + 'yer:this\x20s' + 'tat\x27s\x20name' + '\x20has\x20exist' + '.';
            else
                this['_statesMap'][_0x43645f] = _0x2fd324, this['_states']['push'](_0x2fd324), this['_animator'] && (_0x2fd324['_clip']['_addRefere' + 'nce'](), this['_animator']['_getOwners' + 'ByClip'](_0x2fd324));
        }
        ['removeStat' + 'e'](_0x57148f) {
            var _0x2f5b9c = this['_states'], _0x5060d3 = -0x1;
            for (var _0x3dfc87 = 0x0, _0x3d2180 = _0x2f5b9c['length']; _0x3dfc87 < _0x3d2180; _0x3dfc87++) {
                if (_0x2f5b9c[_0x3dfc87] === _0x57148f) {
                    _0x5060d3 = _0x3dfc87;
                    break;
                }
            }
            if (_0x5060d3 !== -0x1)
                this['_removeCli' + 'p'](_0x2f5b9c, this['_statesMap'], _0x5060d3, _0x57148f);
        }
        ['destroy']() {
            this['_clearRefe' + 'rence'](), this['_statesMap'] = null, this['_states'] = null, this['_playState' + 'Info'] = null, this['_crossPlay' + 'StateInfo'] = null, this['_defaultSt' + 'ate'] = null;
        }
        ['cloneTo'](_0x4421f5) {
            var _0x160c5a = _0x4421f5;
            _0x160c5a['name'] = this['name'], _0x160c5a['blendingMo' + 'de'] = this['blendingMo' + 'de'], _0x160c5a['defaultWei' + 'ght'] = this['defaultWei' + 'ght'], _0x160c5a['playOnWake'] = this['playOnWake'];
        }
        ['clone']() {
            var _0x3ea0c2 = new _0x6ba2ab(this['name']);
            return this['cloneTo'](_0x3ea0c2), _0x3ea0c2;
        }
    }
    _0x6ba2ab['BLENDINGMO' + 'DE_OVERRID' + 'E'] = 0x0, _0x6ba2ab['BLENDINGMO' + 'DE_ADDTIVE'] = 0x1;
    class _0x2f4cdc {
        constructor() {
            this['_reference' + 'Count'] = 0x0, this['_clip'] = null, this['_nodeOwner' + 's'] = [], this['_currentFr' + 'ameIndices'] = null, this['_realtimeD' + 'atas'] = [], this['_scripts'] = null, this['speed'] = 0x1, this['clipStart'] = 0x0, this['clipEnd'] = 0x1;
        }
        get ['clip']() {
            return this['_clip'];
        }
        set ['clip'](_0x2280fa) {
            if (this['_clip'] !== _0x2280fa) {
                if (this['_clip'])
                    this['_reference' + 'Count'] > 0x0 && this['_clip']['_removeRef' + 'erence'](this['_reference' + 'Count']);
                if (_0x2280fa) {
                    var _0x4e5013 = this['_realtimeD' + 'atas'], _0x4e47c1 = _0x2280fa['_nodes'], _0x48fa6a = _0x4e47c1['count'];
                    this['_currentFr' + 'ameIndices'] = new Int16Array(_0x48fa6a), this['_resetFram' + 'eIndices'](), this['_reference' + 'Count'] > 0x0 && _0x2280fa['_addRefere' + 'nce'](this['_reference' + 'Count']), this['_realtimeD' + 'atas']['length'] = _0x48fa6a;
                    for (var _0x31a5ab = 0x0; _0x31a5ab < _0x48fa6a; _0x31a5ab++) {
                        switch (_0x4e47c1['getNodeByI' + 'ndex'](_0x31a5ab)['type']) {
                        case 0x0:
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x4e5013[_0x31a5ab] = new _0x352206();
                            break;
                        case 0x2:
                            _0x4e5013[_0x31a5ab] = new _0x388291();
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                    }
                }
                this['_clip'] = _0x2280fa;
            }
        }
        ['_getRefere' + 'nceCount']() {
            return this['_reference' + 'Count'];
        }
        ['_addRefere' + 'nce'](_0x4807c7 = 0x1) {
            this['_clip'] && this['_clip']['_addRefere' + 'nce'](_0x4807c7), this['_reference' + 'Count'] += _0x4807c7;
        }
        ['_removeRef' + 'erence'](_0x3d66e6 = 0x1) {
            this['_clip'] && this['_clip']['_removeRef' + 'erence'](_0x3d66e6), this['_reference' + 'Count'] -= _0x3d66e6;
        }
        ['_clearRefe' + 'rence']() {
            this['_removeRef' + 'erence'](-this['_reference' + 'Count']);
        }
        ['_resetFram' + 'eIndices']() {
            for (var _0x563c3a = 0x0, _0x3131f3 = this['_currentFr' + 'ameIndices']['length']; _0x563c3a < _0x3131f3; _0x563c3a++)
                this['_currentFr' + 'ameIndices'][_0x563c3a] = -0x1;
        }
        ['addScript'](_0x1998d1) {
            var _0x2668b9 = new _0x1998d1();
            return this['_scripts'] = this['_scripts'] || [], this['_scripts']['push'](_0x2668b9), _0x2668b9;
        }
        ['getScript'](_0x7931e6) {
            if (this['_scripts'])
                for (var _0x305aca = 0x0, _0x1de1a1 = this['_scripts']['length']; _0x305aca < _0x1de1a1; _0x305aca++) {
                    var _0x2fb832 = this['_scripts'][_0x305aca];
                    if (_0x2fb832 instanceof _0x7931e6)
                        return _0x2fb832;
                }
            return null;
        }
        ['getScripts'](_0x11394b) {
            var _0x1b781d;
            if (this['_scripts'])
                for (var _0x193f03 = 0x0, _0x5980f7 = this['_scripts']['length']; _0x193f03 < _0x5980f7; _0x193f03++) {
                    var _0x34094d = this['_scripts'][_0x193f03];
                    _0x34094d instanceof _0x11394b && (_0x1b781d = _0x1b781d || [], _0x1b781d['push'](_0x34094d));
                }
            return _0x1b781d;
        }
        ['cloneTo'](_0x159e9e) {
            var _0x5b0fb1 = _0x159e9e;
            _0x5b0fb1['name'] = this['name'], _0x5b0fb1['speed'] = this['speed'], _0x5b0fb1['clipStart'] = this['clipStart'], _0x5b0fb1['clipEnd'] = this['clipEnd'], _0x5b0fb1['clip'] = this['_clip'];
        }
        ['clone']() {
            var _0x478088 = new _0x2f4cdc();
            return this['cloneTo'](_0x478088), _0x478088;
        }
    }
    class _0xaeca25 {
        constructor() {
            this['indexInLis' + 't'] = -0x1, this['referenceC' + 'ount'] = 0x0, this['updateMark'] = -0x1, this['type'] = -0x1, this['fullPath'] = null, this['propertyOw' + 'ner'] = null, this['property'] = null, this['defaultVal' + 'ue'] = null, this['value'] = null, this['crossFixed' + 'Value'] = null;
        }
        ['saveCrossF' + 'ixedValue']() {
            var _0xdef7c8 = this['propertyOw' + 'ner'];
            if (_0xdef7c8)
                switch (this['type']) {
                case 0x0:
                    this['crossFixed' + 'Value'] = this['value'];
                    break;
                case 0x1:
                case 0x3:
                case 0x4:
                    this['value']['cloneTo'](this['crossFixed' + 'Value']);
                    break;
                case 0x2:
                    this['value']['cloneTo'](this['crossFixed' + 'Value']);
                    break;
                default:
                    throw 'Animator:u' + 'nknown\x20typ' + 'e.';
                }
        }
    }
    class _0x331cef extends _0x442335['Component'] {
        constructor() {
            super(), this['_keyframeN' + 'odeOwners'] = [], this['_linkAvata' + 'rSpritesDa' + 'ta'] = {}, this['_linkAvata' + 'rSprites'] = [], this['_renderabl' + 'eSprites'] = [], this['cullingMod' + 'e'] = _0x331cef['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY'], this['_controlle' + 'rLayers'] = [], this['_linkSprit' + 'es'] = {}, this['_speed'] = 0x1, this['_keyframeN' + 'odeOwnerMa' + 'p'] = {}, this['_updateMar' + 'k'] = 0x0;
        }
        static ['_update'](_0xc766f3) {
            var _0x38cd6d = _0xc766f3['_animatorP' + 'ool'], _0x4da7e4 = _0x38cd6d['elements'];
            for (var _0x3ef4b5 = 0x0, _0x20d1d6 = _0x38cd6d['length']; _0x3ef4b5 < _0x20d1d6; _0x3ef4b5++) {
                var _0x519809 = _0x4da7e4[_0x3ef4b5];
                _0x519809 && _0x519809['enabled'] && _0x519809['_update']();
            }
        }
        get ['speed']() {
            return this['_speed'];
        }
        set ['speed'](_0x4add41) {
            this['_speed'] = _0x4add41;
        }
        ['_linkToSpr' + 'ites'](_0xaff1b0) {
            for (var _0x34beb3 in _0xaff1b0) {
                var _0x3939c8 = this['owner'], _0x4a0e5f = _0xaff1b0[_0x34beb3];
                for (var _0x1efb24 = 0x0, _0x18e2db = _0x4a0e5f['length']; _0x1efb24 < _0x18e2db; _0x1efb24++) {
                    var _0x12ae17 = _0x4a0e5f[_0x1efb24];
                    if (_0x12ae17 === '')
                        break;
                    else {
                        _0x3939c8 = _0x3939c8['getChildBy' + 'Name'](_0x12ae17);
                        if (!_0x3939c8)
                            break;
                    }
                }
                _0x3939c8 && this['linkSprite' + '3DToAvatar' + 'Node'](_0x34beb3, _0x3939c8);
            }
        }
        ['_addKeyfra' + 'meNodeOwne' + 'r'](_0x547c18, _0x1935de, _0x322758) {
            var _0x4b1b0d = _0x1935de['_indexInLi' + 'st'], _0x5042f7 = _0x1935de['fullPath'], _0x1b6c06 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x5042f7];
            if (_0x1b6c06)
                _0x1b6c06['referenceC' + 'ount']++, _0x547c18[_0x4b1b0d] = _0x1b6c06;
            else {
                var _0x2b719c = _0x322758;
                for (var _0x33ab58 = 0x0, _0x180194 = _0x1935de['propertyCo' + 'unt']; _0x33ab58 < _0x180194; _0x33ab58++) {
                    _0x2b719c = _0x2b719c[_0x1935de['getPropert' + 'yByIndex'](_0x33ab58)];
                    if (!_0x2b719c)
                        break;
                }
                _0x1b6c06 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x5042f7] = new _0xaeca25(), _0x1b6c06['fullPath'] = _0x5042f7, _0x1b6c06['indexInLis' + 't'] = this['_keyframeN' + 'odeOwners']['length'], _0x1b6c06['referenceC' + 'ount'] = 0x1, _0x1b6c06['propertyOw' + 'ner'] = _0x322758;
                var _0x563665 = _0x1935de['propertyCo' + 'unt'], _0x2fea2d = [];
                for (_0x33ab58 = 0x0; _0x33ab58 < _0x563665; _0x33ab58++)
                    _0x2fea2d[_0x33ab58] = _0x1935de['getPropert' + 'yByIndex'](_0x33ab58);
                _0x1b6c06['property'] = _0x2fea2d, _0x1b6c06['type'] = _0x1935de['type'];
                if (_0x2b719c) {
                    if (_0x1935de['type'] === 0x0)
                        _0x1b6c06['defaultVal' + 'ue'] = _0x2b719c;
                    else {
                        var _0x224872 = new _0x2b719c['constructo' + 'r']();
                        _0x2b719c['cloneTo'](_0x224872), _0x1b6c06['defaultVal' + 'ue'] = _0x224872, _0x1b6c06['value'] = new _0x2b719c['constructo' + 'r'](), _0x1b6c06['crossFixed' + 'Value'] = new _0x2b719c['constructo' + 'r']();
                    }
                }
                this['_keyframeN' + 'odeOwners']['push'](_0x1b6c06), _0x547c18[_0x4b1b0d] = _0x1b6c06;
            }
        }
        ['_removeKey' + 'frameNodeO' + 'wner'](_0x802625, _0x57318a) {
            var _0x4f6eb4 = _0x57318a['fullPath'], _0x48cdc2 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x4f6eb4];
            _0x48cdc2 && (_0x48cdc2['referenceC' + 'ount']--, _0x48cdc2['referenceC' + 'ount'] === 0x0 && (delete this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x4f6eb4], this['_keyframeN' + 'odeOwners']['splice'](this['_keyframeN' + 'odeOwners']['indexOf'](_0x48cdc2), 0x1)), _0x802625[_0x57318a['_indexInLi' + 'st']] = null);
        }
        ['_getOwners' + 'ByClip'](_0x32d294) {
            var _0x5ef176 = _0x32d294['_clip']['_nodes'], _0x81f445 = _0x5ef176['count'], _0x2b8bd5 = _0x32d294['_nodeOwner' + 's'];
            _0x2b8bd5['length'] = _0x81f445;
            for (var _0x245add = 0x0; _0x245add < _0x81f445; _0x245add++) {
                var _0x1a86fe = _0x5ef176['getNodeByI' + 'ndex'](_0x245add), _0x5a3126 = this['_avatar'] ? this['_avatarNod' + 'eMap'][this['_avatar']['_rootNode']['name']] : this['owner'];
                for (var _0x2550ea = 0x0, _0x2a7959 = _0x1a86fe['ownerPathC' + 'ount']; _0x2550ea < _0x2a7959; _0x2550ea++) {
                    var _0x438d61 = _0x1a86fe['getOwnerPa' + 'thByIndex'](_0x2550ea);
                    if (_0x438d61 === '')
                        break;
                    else {
                        _0x5a3126 = _0x5a3126['getChildBy' + 'Name'](_0x438d61);
                        if (!_0x5a3126)
                            break;
                    }
                }
                if (_0x5a3126) {
                    var _0x24fb35 = _0x1a86fe['propertyOw' + 'ner'];
                    _0x24fb35 && (_0x5a3126 = _0x5a3126[_0x24fb35]), _0x5a3126 && this['_addKeyfra' + 'meNodeOwne' + 'r'](_0x2b8bd5, _0x1a86fe, _0x5a3126);
                }
            }
        }
        ['_updatePla' + 'yer'](_0x3b9a8e, _0x596b44, _0x278695, _0x50908e) {
            var _0x591266 = _0x3b9a8e['_clip']['_duration'] * (_0x3b9a8e['clipEnd'] - _0x3b9a8e['clipStart']), _0x56db8c = _0x596b44['_elapsedTi' + 'me'], _0x50d98f = _0x56db8c + _0x278695;
            _0x596b44['_lastElaps' + 'edTime'] = _0x56db8c, _0x596b44['_elapsedTi' + 'me'] = _0x50d98f;
            var _0x4ae3d9 = _0x50d98f / _0x591266;
            _0x596b44['_normalize' + 'dTime'] = _0x4ae3d9;
            var _0x2d2f59 = _0x4ae3d9 % 0x1;
            _0x596b44['_normalize' + 'dPlayTime'] = _0x2d2f59 < 0x0 ? _0x2d2f59 + 0x1 : _0x2d2f59, _0x596b44['_duration'] = _0x591266;
            var _0x3594a7 = _0x3b9a8e['_scripts'];
            if (!_0x50908e && _0x50d98f >= _0x591266) {
                _0x596b44['_finish'] = !![], _0x596b44['_elapsedTi' + 'me'] = _0x591266, _0x596b44['_normalize' + 'dPlayTime'] = 0x1;
                if (_0x3594a7) {
                    for (var _0xde32a1 = 0x0, _0x5c80e7 = _0x3594a7['length']; _0xde32a1 < _0x5c80e7; _0xde32a1++)
                        _0x3594a7[_0xde32a1]['onStateExi' + 't']();
                }
                return;
            }
            if (_0x3594a7) {
                for (_0xde32a1 = 0x0, _0x5c80e7 = _0x3594a7['length']; _0xde32a1 < _0x5c80e7; _0xde32a1++)
                    _0x3594a7[_0xde32a1]['onStateUpd' + 'ate']();
            }
        }
        ['_eventScri' + 'pt'](_0x3360e4, _0x3abc77, _0x5677f6, _0x1e6a1b, _0x2ab312) {
            if (_0x2ab312)
                for (var _0x30103e = _0x3abc77['length']; _0x5677f6 < _0x30103e; _0x5677f6++) {
                    var _0x747063 = _0x3abc77[_0x5677f6];
                    if (_0x747063['time'] <= _0x1e6a1b)
                        for (var _0x33e937 = 0x0, _0x171473 = _0x3360e4['length']; _0x33e937 < _0x171473; _0x33e937++) {
                            var _0x4ff2f6 = _0x3360e4[_0x33e937], _0x142df7 = _0x4ff2f6[_0x747063['eventName']];
                            _0x142df7 && _0x142df7['apply'](_0x4ff2f6, _0x747063['params']);
                        }
                    else
                        break;
                }
            else
                for (; _0x5677f6 >= 0x0; _0x5677f6--) {
                    _0x747063 = _0x3abc77[_0x5677f6];
                    if (_0x747063['time'] >= _0x1e6a1b)
                        for (_0x33e937 = 0x0, _0x171473 = _0x3360e4['length']; _0x33e937 < _0x171473; _0x33e937++) {
                            _0x4ff2f6 = _0x3360e4[_0x33e937], _0x142df7 = _0x4ff2f6[_0x747063['eventName']], _0x142df7 && _0x142df7['apply'](_0x4ff2f6, _0x747063['params']);
                        }
                    else
                        break;
                }
            return _0x5677f6;
        }
        ['_updateEve' + 'ntScript'](_0x2e6dae, _0x3c4f58) {
            var _0x428ed9 = this['owner']['_scripts'];
            if (_0x428ed9) {
                var _0x528391 = _0x2e6dae['_clip'], _0x4e02c2 = _0x528391['_animation' + 'Events'], _0x3240b7 = _0x528391['_duration'], _0x452a2c = _0x3c4f58['_elapsedTi' + 'me'], _0x201534 = _0x452a2c % _0x3240b7, _0x19f49f = Math['abs'](Math['floor'](_0x452a2c / _0x3240b7) - Math['floor'](_0x3c4f58['_lastElaps' + 'edTime'] / _0x3240b7)), _0x26f12b = _0x3c4f58['_elapsedTi' + 'me'] >= _0x3c4f58['_lastElaps' + 'edTime'];
                if (_0x3c4f58['_lastIsFro' + 'nt'] !== _0x26f12b) {
                    if (_0x26f12b)
                        _0x3c4f58['_playEvent' + 'Index']++;
                    else
                        _0x3c4f58['_playEvent' + 'Index']--;
                    _0x3c4f58['_lastIsFro' + 'nt'] = _0x26f12b;
                }
                var _0x99b72 = _0x3c4f58['_playEvent' + 'Index'];
                if (_0x26f12b) {
                    var _0x1e7657 = this['_eventScri' + 'pt'](_0x428ed9, _0x4e02c2, _0x3c4f58['_playEvent' + 'Index'], _0x19f49f > 0x0 ? _0x3240b7 : _0x201534, !![]);
                    _0x99b72 === _0x3c4f58['_playEvent' + 'Index'] && (_0x3c4f58['_playEvent' + 'Index'] = _0x1e7657);
                    for (var _0x48de79 = 0x0, _0xa14109 = _0x19f49f - 0x1; _0x48de79 < _0xa14109; _0x48de79++)
                        this['_eventScri' + 'pt'](_0x428ed9, _0x4e02c2, 0x0, _0x3240b7, !![]);
                    _0x19f49f > 0x0 && _0x201534 > 0x0 && (_0x3c4f58['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x428ed9, _0x4e02c2, 0x0, _0x201534, !![]));
                } else {
                    var _0x1e7657 = this['_eventScri' + 'pt'](_0x428ed9, _0x4e02c2, _0x3c4f58['_playEvent' + 'Index'], _0x19f49f > 0x0 ? 0x0 : _0x201534, ![]);
                    _0x99b72 === _0x3c4f58['_playEvent' + 'Index'] && (_0x3c4f58['_playEvent' + 'Index'] = _0x1e7657);
                    var _0x2bcc5a = _0x4e02c2['length'] - 0x1;
                    for (_0x48de79 = 0x0, _0xa14109 = _0x19f49f - 0x1; _0x48de79 < _0xa14109; _0x48de79++)
                        this['_eventScri' + 'pt'](_0x428ed9, _0x4e02c2, _0x2bcc5a, 0x0, ![]);
                    _0x19f49f > 0x0 && _0x201534 > 0x0 && (_0x3c4f58['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x428ed9, _0x4e02c2, _0x2bcc5a, _0x201534, ![]));
                }
            }
        }
        ['_updateCli' + 'pDatas'](_0x2ff849, _0x19ca82, _0xb93d8a, _0x1169a8) {
            var _0x29ab05 = _0x2ff849['_clip'], _0x136050 = _0x29ab05['_duration'], _0x14e8ec = _0x2ff849['clipStart'] * _0x136050 + _0xb93d8a['_normalize' + 'dPlayTime'] * _0xb93d8a['_duration'], _0x88ef70 = _0x2ff849['_currentFr' + 'ameIndices'], _0x5d6b49 = _0xb93d8a['_elapsedTi' + 'me'] > _0xb93d8a['_lastElaps' + 'edTime'];
            _0x29ab05['_evaluateC' + 'lipDatasRe' + 'alTime'](_0x29ab05['_nodes'], _0x14e8ec, _0x88ef70, _0x19ca82, _0x5d6b49, _0x2ff849['_realtimeD' + 'atas']);
        }
        ['_applyFloa' + 't'](_0x378854, _0x509c74, _0x1ad0ee, _0x15f970, _0x10f77e, _0x4c2ebe, _0xc57211) {
            if (_0x1ad0ee['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x15f970)
                    _0x378854[_0x509c74] += _0x10f77e * _0xc57211;
                else {
                    var _0xe98fd5 = _0x378854[_0x509c74];
                    _0x378854[_0x509c74] = _0xe98fd5 + _0x10f77e * (_0xc57211 - _0xe98fd5);
                }
            } else {
                if (_0x4c2ebe) {
                    if (_0x15f970)
                        _0x378854[_0x509c74] = _0x1ad0ee['defaultVal' + 'ue'] + _0xc57211;
                    else
                        _0x378854[_0x509c74] = _0xc57211;
                } else {
                    if (_0x15f970)
                        _0x378854[_0x509c74] = _0x1ad0ee['defaultVal' + 'ue'] + _0x10f77e * _0xc57211;
                    else {
                        var _0x37c3b3 = _0x1ad0ee['defaultVal' + 'ue'];
                        _0x378854[_0x509c74] = _0x37c3b3 + _0x10f77e * (_0xc57211 - _0x37c3b3);
                    }
                }
            }
        }
        ['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x536d03, _0x4e6881, _0x3dade2, _0x46b86b, _0x2ef75d, _0x588e70) {
            if (_0x536d03['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x4e6881)
                    _0x588e70['x'] += _0x3dade2 * _0x2ef75d['x'], _0x588e70['y'] += _0x3dade2 * _0x2ef75d['y'], _0x588e70['z'] += _0x3dade2 * _0x2ef75d['z'];
                else {
                    var _0x33307f = _0x588e70['x'], _0x5ed885 = _0x588e70['y'], _0x208ee6 = _0x588e70['z'];
                    _0x588e70['x'] = _0x33307f + _0x3dade2 * (_0x2ef75d['x'] - _0x33307f), _0x588e70['y'] = _0x5ed885 + _0x3dade2 * (_0x2ef75d['y'] - _0x5ed885), _0x588e70['z'] = _0x208ee6 + _0x3dade2 * (_0x2ef75d['z'] - _0x208ee6);
                }
            } else {
                if (_0x46b86b) {
                    if (_0x4e6881) {
                        var _0x4d6193 = _0x536d03['defaultVal' + 'ue'];
                        _0x588e70['x'] = _0x4d6193['x'] + _0x2ef75d['x'], _0x588e70['y'] = _0x4d6193['y'] + _0x2ef75d['y'], _0x588e70['z'] = _0x4d6193['z'] + _0x2ef75d['z'];
                    } else
                        _0x588e70['x'] = _0x2ef75d['x'], _0x588e70['y'] = _0x2ef75d['y'], _0x588e70['z'] = _0x2ef75d['z'];
                } else {
                    _0x4d6193 = _0x536d03['defaultVal' + 'ue'];
                    if (_0x4e6881)
                        _0x588e70['x'] = _0x4d6193['x'] + _0x3dade2 * _0x2ef75d['x'], _0x588e70['y'] = _0x4d6193['y'] + _0x3dade2 * _0x2ef75d['y'], _0x588e70['z'] = _0x4d6193['z'] + _0x3dade2 * _0x2ef75d['z'];
                    else {
                        var _0x4bfa4d = _0x4d6193['x'], _0x1edad7 = _0x4d6193['y'], _0x5e1d5e = _0x4d6193['z'];
                        _0x588e70['x'] = _0x4bfa4d + _0x3dade2 * (_0x2ef75d['x'] - _0x4bfa4d), _0x588e70['y'] = _0x1edad7 + _0x3dade2 * (_0x2ef75d['y'] - _0x1edad7), _0x588e70['z'] = _0x5e1d5e + _0x3dade2 * (_0x2ef75d['z'] - _0x5e1d5e);
                    }
                }
            }
        }
        ['_applyRota' + 'tion'](_0x5a488a, _0x3b3bc8, _0xb2c0d5, _0x5ad31a, _0x30d8a2, _0x46707f) {
            if (_0x5a488a['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x3b3bc8) {
                    var _0x17d4ac = _0x331cef['_tempQuate' + 'rnion1'];
                    _0x47bed9['quaternion' + 'Weight'](_0x30d8a2, _0xb2c0d5, _0x17d4ac), _0x17d4ac['normalize'](_0x17d4ac), _0x388291['multiply'](_0x46707f, _0x17d4ac, _0x46707f);
                } else
                    _0x388291['lerp'](_0x46707f, _0x30d8a2, _0xb2c0d5, _0x46707f);
            } else {
                if (_0x5ad31a) {
                    if (_0x3b3bc8) {
                        var _0x23e9c9 = _0x5a488a['defaultVal' + 'ue'];
                        _0x388291['multiply'](_0x23e9c9, _0x30d8a2, _0x46707f);
                    } else
                        _0x46707f['x'] = _0x30d8a2['x'], _0x46707f['y'] = _0x30d8a2['y'], _0x46707f['z'] = _0x30d8a2['z'], _0x46707f['w'] = _0x30d8a2['w'];
                } else
                    _0x23e9c9 = _0x5a488a['defaultVal' + 'ue'], _0x3b3bc8 ? (_0x17d4ac = _0x331cef['_tempQuate' + 'rnion1'], _0x47bed9['quaternion' + 'Weight'](_0x30d8a2, _0xb2c0d5, _0x17d4ac), _0x17d4ac['normalize'](_0x17d4ac), _0x388291['multiply'](_0x23e9c9, _0x17d4ac, _0x46707f)) : _0x388291['lerp'](_0x23e9c9, _0x30d8a2, _0xb2c0d5, _0x46707f);
            }
        }
        ['_applyScal' + 'e'](_0x12e39f, _0x52832c, _0x46d166, _0x10da0c, _0x27308b, _0x148c2d) {
            if (_0x12e39f['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x52832c) {
                    var _0x142e92 = _0x331cef['_tempVecto' + 'r31'];
                    _0x47bed9['scaleWeigh' + 't'](_0x27308b, _0x46d166, _0x142e92), _0x148c2d['x'] = _0x148c2d['x'] * _0x142e92['x'], _0x148c2d['y'] = _0x148c2d['y'] * _0x142e92['y'], _0x148c2d['z'] = _0x148c2d['z'] * _0x142e92['z'];
                } else
                    _0x47bed9['scaleBlend'](_0x148c2d, _0x27308b, _0x46d166, _0x148c2d);
            } else {
                if (_0x10da0c) {
                    if (_0x52832c) {
                        var _0x2b27ba = _0x12e39f['defaultVal' + 'ue'];
                        _0x148c2d['x'] = _0x2b27ba['x'] * _0x27308b['x'], _0x148c2d['y'] = _0x2b27ba['y'] * _0x27308b['y'], _0x148c2d['z'] = _0x2b27ba['z'] * _0x27308b['z'];
                    } else
                        _0x148c2d['x'] = _0x27308b['x'], _0x148c2d['y'] = _0x27308b['y'], _0x148c2d['z'] = _0x27308b['z'];
                } else
                    _0x2b27ba = _0x12e39f['defaultVal' + 'ue'], _0x52832c ? (_0x142e92 = _0x331cef['_tempVecto' + 'r31'], _0x47bed9['scaleWeigh' + 't'](_0x27308b, _0x46d166, _0x142e92), _0x148c2d['x'] = _0x2b27ba['x'] * _0x142e92['x'], _0x148c2d['y'] = _0x2b27ba['y'] * _0x142e92['y'], _0x148c2d['z'] = _0x2b27ba['z'] * _0x142e92['z']) : _0x47bed9['scaleBlend'](_0x2b27ba, _0x27308b, _0x46d166, _0x148c2d);
            }
        }
        ['_applyCros' + 'sData'](_0x1e1332, _0x35fe8f, _0xf05ee3, _0x56dcdc, _0x553871, _0x77a9c1, _0x26783a) {
            var _0x5a6815 = _0x1e1332['propertyOw' + 'ner'];
            if (_0x5a6815) {
                switch (_0x1e1332['type']) {
                case 0x0:
                    var _0x2bf373 = _0x1e1332['property'], _0x2b59a1 = _0x2bf373['length'] - 0x1;
                    for (var _0x9a2ced = 0x0; _0x9a2ced < _0x2b59a1; _0x9a2ced++) {
                        _0x5a6815 = _0x5a6815[_0x2bf373[_0x9a2ced]];
                        if (!_0x5a6815)
                            break;
                    }
                    var _0x52190f = _0x553871 + _0x26783a * (_0x77a9c1 - _0x553871);
                    _0x1e1332['value'] = _0x52190f, this['_applyFloa' + 't'](_0x5a6815, _0x2bf373[_0x2b59a1], _0x1e1332, _0x35fe8f, _0xf05ee3, _0x56dcdc, _0x52190f);
                    break;
                case 0x1:
                    var _0x34a21a = _0x5a6815['localPosit' + 'ion'], _0x3e77b5 = _0x1e1332['value'], _0x53d15c = _0x553871['x'], _0x55ce89 = _0x553871['y'], _0x2fe182 = _0x553871['z'];
                    _0x3e77b5['x'] = _0x53d15c + _0x26783a * (_0x77a9c1['x'] - _0x53d15c), _0x3e77b5['y'] = _0x55ce89 + _0x26783a * (_0x77a9c1['y'] - _0x55ce89), _0x3e77b5['z'] = _0x2fe182 + _0x26783a * (_0x77a9c1['z'] - _0x2fe182), this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x1e1332, _0x35fe8f, _0xf05ee3, _0x56dcdc, _0x3e77b5, _0x34a21a), _0x5a6815['localPosit' + 'ion'] = _0x34a21a;
                    break;
                case 0x2:
                    var _0x776ce5 = _0x5a6815['localRotat' + 'ion'], _0x580e8e = _0x1e1332['value'];
                    _0x388291['lerp'](_0x553871, _0x77a9c1, _0x26783a, _0x580e8e), this['_applyRota' + 'tion'](_0x1e1332, _0x35fe8f, _0xf05ee3, _0x56dcdc, _0x580e8e, _0x776ce5), _0x5a6815['localRotat' + 'ion'] = _0x776ce5;
                    break;
                case 0x3:
                    var _0x24bd39 = _0x5a6815['localScale'], _0x52a5f8 = _0x1e1332['value'];
                    _0x47bed9['scaleBlend'](_0x553871, _0x77a9c1, _0x26783a, _0x52a5f8), this['_applyScal' + 'e'](_0x1e1332, _0x35fe8f, _0xf05ee3, _0x56dcdc, _0x52a5f8, _0x24bd39), _0x5a6815['localScale'] = _0x24bd39;
                    break;
                case 0x4:
                    var _0x49cc81 = _0x5a6815['localRotat' + 'ionEuler'], _0x781c33 = _0x1e1332['value'];
                    _0x53d15c = _0x553871['x'], _0x55ce89 = _0x553871['y'], _0x2fe182 = _0x553871['z'], _0x781c33['x'] = _0x53d15c + _0x26783a * (_0x77a9c1['x'] - _0x53d15c), _0x781c33['y'] = _0x55ce89 + _0x26783a * (_0x77a9c1['y'] - _0x55ce89), _0x781c33['z'] = _0x2fe182 + _0x26783a * (_0x77a9c1['z'] - _0x2fe182), this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x1e1332, _0x35fe8f, _0xf05ee3, _0x56dcdc, _0x781c33, _0x49cc81), _0x5a6815['localRotat' + 'ionEuler'] = _0x49cc81;
                    break;
                }
                _0x1e1332['updateMark'] = this['_updateMar' + 'k'];
            }
        }
        ['_setClipDa' + 'tasToNode'](_0x5c1aa7, _0x516d7c, _0x301b7f, _0x34b16a) {
            var _0x1c76f1 = _0x5c1aa7['_realtimeD' + 'atas'], _0x42e017 = _0x5c1aa7['_clip']['_nodes'], _0x13b139 = _0x5c1aa7['_nodeOwner' + 's'];
            for (var _0x3b42fe = 0x0, _0x36b6c9 = _0x42e017['count']; _0x3b42fe < _0x36b6c9; _0x3b42fe++) {
                var _0x1beb5a = _0x13b139[_0x3b42fe];
                if (_0x1beb5a) {
                    var _0x412325 = _0x1beb5a['propertyOw' + 'ner'];
                    if (_0x412325) {
                        switch (_0x1beb5a['type']) {
                        case 0x0:
                            var _0xe63228 = _0x1beb5a['property'], _0x5217fa = _0xe63228['length'] - 0x1;
                            for (var _0x427536 = 0x0; _0x427536 < _0x5217fa; _0x427536++) {
                                _0x412325 = _0x412325[_0xe63228[_0x427536]];
                                if (!_0x412325)
                                    break;
                            }
                            this['_applyFloa' + 't'](_0x412325, _0xe63228[_0x5217fa], _0x1beb5a, _0x516d7c, _0x301b7f, _0x34b16a, _0x1c76f1[_0x3b42fe]);
                            break;
                        case 0x1:
                            var _0x5abde3 = _0x412325['localPosit' + 'ion'];
                            this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x1beb5a, _0x516d7c, _0x301b7f, _0x34b16a, _0x1c76f1[_0x3b42fe], _0x5abde3), _0x412325['localPosit' + 'ion'] = _0x5abde3;
                            break;
                        case 0x2:
                            var _0x29d9bd = _0x412325['localRotat' + 'ion'];
                            this['_applyRota' + 'tion'](_0x1beb5a, _0x516d7c, _0x301b7f, _0x34b16a, _0x1c76f1[_0x3b42fe], _0x29d9bd), _0x412325['localRotat' + 'ion'] = _0x29d9bd;
                            break;
                        case 0x3:
                            var _0x25f2b4 = _0x412325['localScale'];
                            this['_applyScal' + 'e'](_0x1beb5a, _0x516d7c, _0x301b7f, _0x34b16a, _0x1c76f1[_0x3b42fe], _0x25f2b4), _0x412325['localScale'] = _0x25f2b4;
                            break;
                        case 0x4:
                            var _0x2bcadd = _0x412325['localRotat' + 'ionEuler'];
                            this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x1beb5a, _0x516d7c, _0x301b7f, _0x34b16a, _0x1c76f1[_0x3b42fe], _0x2bcadd), _0x412325['localRotat' + 'ionEuler'] = _0x2bcadd;
                            break;
                        }
                        _0x1beb5a['updateMark'] = this['_updateMar' + 'k'];
                    }
                }
            }
        }
        ['_setCrossC' + 'lipDatasTo' + 'Node'](_0x124768, _0x2e7098, _0x3784c6, _0x55b888, _0x1e45fa) {
            var _0x59f7c6 = _0x124768['_crossNode' + 'sOwners'], _0x311643 = _0x124768['_crossNode' + 'sOwnersCou' + 'nt'], _0x2f9238 = _0x124768['blendingMo' + 'de'] !== _0x6ba2ab['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x3274be = _0x124768['defaultWei' + 'ght'], _0x4856f9 = _0x3784c6['_realtimeD' + 'atas'], _0x371eeb = _0x124768['_destCross' + 'ClipNodeIn' + 'dices'], _0x42f1c0 = _0x3784c6['_nodeOwner' + 's'], _0x229c93 = _0x2e7098['_realtimeD' + 'atas'], _0xbfa5de = _0x124768['_srcCrossC' + 'lipNodeInd' + 'ices'], _0x51bfb5 = _0x2e7098['_nodeOwner' + 's'];
            for (var _0x514271 = 0x0; _0x514271 < _0x311643; _0x514271++) {
                var _0x2a96cf = _0x59f7c6[_0x514271];
                if (_0x2a96cf) {
                    var _0x1895ea = _0xbfa5de[_0x514271], _0x49c774 = _0x371eeb[_0x514271], _0x3cb150 = _0x1895ea !== -0x1 ? _0x229c93[_0x1895ea] : _0x42f1c0[_0x49c774]['defaultVal' + 'ue'], _0x161e26 = _0x49c774 !== -0x1 ? _0x4856f9[_0x49c774] : _0x51bfb5[_0x1895ea]['defaultVal' + 'ue'];
                    this['_applyCros' + 'sData'](_0x2a96cf, _0x2f9238, _0x3274be, _0x1e45fa, _0x3cb150, _0x161e26, _0x55b888);
                }
            }
        }
        ['_setFixedC' + 'rossClipDa' + 'tasToNode'](_0x211631, _0x53527a, _0x255752, _0x133dcf) {
            var _0x14e2fe = _0x211631['_crossNode' + 'sOwners'], _0x4a9d8a = _0x211631['_crossNode' + 'sOwnersCou' + 'nt'], _0x10d57f = _0x211631['blendingMo' + 'de'] !== _0x6ba2ab['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x11b2ed = _0x211631['defaultWei' + 'ght'], _0x2f873b = _0x53527a['_realtimeD' + 'atas'], _0x6e220c = _0x211631['_destCross' + 'ClipNodeIn' + 'dices'];
            for (var _0x30ef7a = 0x0; _0x30ef7a < _0x4a9d8a; _0x30ef7a++) {
                var _0x43d40f = _0x14e2fe[_0x30ef7a];
                if (_0x43d40f) {
                    var _0x355069 = _0x6e220c[_0x30ef7a], _0x42e8c0 = _0x43d40f['crossFixed' + 'Value'], _0x20438d = _0x355069 !== -0x1 ? _0x2f873b[_0x355069] : _0x43d40f['defaultVal' + 'ue'];
                    this['_applyCros' + 'sData'](_0x43d40f, _0x10d57f, _0x11b2ed, _0x133dcf, _0x42e8c0, _0x20438d, _0x255752);
                }
            }
        }
        ['_revertDef' + 'aultKeyfra' + 'meNodes'](_0x91340e) {
            var _0x59a86f = _0x91340e['_nodeOwner' + 's'];
            for (var _0x719819 = 0x0, _0x491ceb = _0x59a86f['length']; _0x719819 < _0x491ceb; _0x719819++) {
                var _0x543538 = _0x59a86f[_0x719819];
                if (_0x543538) {
                    var _0x4ca055 = _0x543538['propertyOw' + 'ner'];
                    if (_0x4ca055)
                        switch (_0x543538['type']) {
                        case 0x0:
                            var _0x3acdf2 = _0x543538['property'], _0xfa08b = _0x3acdf2['length'] - 0x1;
                            for (var _0x3ca95a = 0x0; _0x3ca95a < _0xfa08b; _0x3ca95a++) {
                                _0x4ca055 = _0x4ca055[_0x3acdf2[_0x3ca95a]];
                                if (!_0x4ca055)
                                    break;
                            }
                            _0x4ca055[_0x3acdf2[_0xfa08b]] = _0x543538['defaultVal' + 'ue'];
                            break;
                        case 0x1:
                            var _0xbefca2 = _0x4ca055['localPosit' + 'ion'], _0x3d103a = _0x543538['defaultVal' + 'ue'];
                            _0xbefca2['x'] = _0x3d103a['x'], _0xbefca2['y'] = _0x3d103a['y'], _0xbefca2['z'] = _0x3d103a['z'], _0x4ca055['localPosit' + 'ion'] = _0xbefca2;
                            break;
                        case 0x2:
                            var _0x215b09 = _0x4ca055['localRotat' + 'ion'], _0x2c0fcf = _0x543538['defaultVal' + 'ue'];
                            _0x215b09['x'] = _0x2c0fcf['x'], _0x215b09['y'] = _0x2c0fcf['y'], _0x215b09['z'] = _0x2c0fcf['z'], _0x215b09['w'] = _0x2c0fcf['w'], _0x4ca055['localRotat' + 'ion'] = _0x215b09;
                            break;
                        case 0x3:
                            var _0x248bec = _0x4ca055['localScale'];
                            _0x3d103a = _0x543538['defaultVal' + 'ue'], _0x248bec['x'] = _0x3d103a['x'], _0x248bec['y'] = _0x3d103a['y'], _0x248bec['z'] = _0x3d103a['z'], _0x4ca055['localScale'] = _0x248bec;
                            break;
                        case 0x4:
                            var _0x5c217b = _0x4ca055['localRotat' + 'ionEuler'];
                            _0x3d103a = _0x543538['defaultVal' + 'ue'], _0x5c217b['x'] = _0x3d103a['x'], _0x5c217b['y'] = _0x3d103a['y'], _0x5c217b['z'] = _0x3d103a['z'], _0x4ca055['localRotat' + 'ionEuler'] = _0x5c217b;
                            break;
                        default:
                            throw 'Animator:u' + 'nknown\x20typ' + 'e.';
                        }
                }
            }
        }
        ['_onAdded']() {
            var _0x2265e0 = this['owner']['_parent'];
            this['owner']['_setHierar' + 'chyAnimato' + 'r'](this, _0x2265e0 ? _0x2265e0['_hierarchy' + 'Animator'] : null), this['owner']['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](this, !![], []);
        }
        ['_onDestroy']() {
            for (var _0xbd7a80 = 0x0, _0x5cc6a4 = this['_controlle' + 'rLayers']['length']; _0xbd7a80 < _0x5cc6a4; _0xbd7a80++)
                this['_controlle' + 'rLayers'][_0xbd7a80]['_removeRef' + 'erence']();
            var _0x5e55ba = this['owner']['_parent'];
            this['owner']['_clearHier' + 'archyAnima' + 'tor'](this, _0x5e55ba ? _0x5e55ba['_hierarchy' + 'Animator'] : null);
        }
        ['_onEnable']() {
            this['owner']['_scene']['_animatorP' + 'ool']['add'](this);
            for (var _0x3c06bc = 0x0, _0x28632a = this['_controlle' + 'rLayers']['length']; _0x3c06bc < _0x28632a; _0x3c06bc++) {
                if (this['_controlle' + 'rLayers'][_0x3c06bc]['playOnWake']) {
                    var _0x367edc = this['getDefault' + 'State'](_0x3c06bc);
                    _0x367edc && this['play'](null, _0x3c06bc, 0x0);
                }
            }
        }
        ['_onDisable']() {
            this['owner']['_scene']['_animatorP' + 'ool']['remove'](this);
        }
        ['_handleSpr' + 'iteOwnersB' + 'ySprite'](_0x12dcae, _0x1de90f, _0x340b2a) {
            for (var _0x4d6021 = 0x0, _0x588bc9 = this['_controlle' + 'rLayers']['length']; _0x4d6021 < _0x588bc9; _0x4d6021++) {
                var _0x225e65 = this['_controlle' + 'rLayers'][_0x4d6021]['_states'];
                for (var _0x5eca8d = 0x0, _0x1d1a6e = _0x225e65['length']; _0x5eca8d < _0x1d1a6e; _0x5eca8d++) {
                    var _0x4557e3 = _0x225e65[_0x5eca8d], _0x21ca51 = _0x4557e3['_clip'], _0x2e5b92 = _0x1de90f['join']('/'), _0x3fbe60 = _0x21ca51['_nodesMap'][_0x2e5b92];
                    if (_0x3fbe60) {
                        var _0x169db4 = _0x4557e3['_nodeOwner' + 's'];
                        for (var _0x3b8c65 = 0x0, _0x1e2d80 = _0x3fbe60['length']; _0x3b8c65 < _0x1e2d80; _0x3b8c65++) {
                            if (_0x12dcae)
                                this['_addKeyfra' + 'meNodeOwne' + 'r'](_0x169db4, _0x3fbe60[_0x3b8c65], _0x340b2a);
                            else
                                this['_removeKey' + 'frameNodeO' + 'wner'](_0x169db4, _0x3fbe60[_0x3b8c65]);
                        }
                    }
                }
            }
        }
        ['_parse'](_0x18d90d) {
            var _0x26a96e = _0x18d90d['avatar'];
            if (_0x26a96e) {
                this['avatar'] = _0x442335['Loader']['getRes'](_0x26a96e['path']);
                var _0x87c832 = _0x26a96e['linkSprite' + 's'];
                this['_linkSprit' + 'es'] = _0x87c832, this['_linkToSpr' + 'ites'](_0x87c832);
            }
            var _0x4f5e12 = _0x18d90d['clipPaths'], _0x2e862a = _0x18d90d['playOnWake'], _0xd64400 = _0x18d90d['layers'];
            for (var _0x55f812 = 0x0; _0x55f812 < _0xd64400['length']; _0x55f812++) {
                var _0x5d2bef = _0xd64400[_0x55f812], _0xb8b058 = new _0x6ba2ab(_0x5d2bef['name']);
                if (_0x55f812 === 0x0)
                    _0xb8b058['defaultWei' + 'ght'] = 0x1;
                else
                    _0xb8b058['defaultWei' + 'ght'] = _0x5d2bef['weight'];
                var _0x4f7c09 = _0x5d2bef['blendingMo' + 'de'];
                _0x4f7c09 && (_0xb8b058['blendingMo' + 'de'] = _0x4f7c09), this['addControl' + 'lerLayer'](_0xb8b058);
                var _0x3e2d47 = _0x5d2bef['states'];
                for (var _0x269d82 = 0x0, _0x5c49f2 = _0x3e2d47['length']; _0x269d82 < _0x5c49f2; _0x269d82++) {
                    var _0x4009fe = _0x3e2d47[_0x269d82], _0x5eac58 = _0x4009fe['clipPath'];
                    if (_0x5eac58) {
                        var _0x36715e = _0x4009fe['name'], _0x57e263;
                        _0x57e263 = _0x442335['Loader']['getRes'](_0x5eac58);
                        if (_0x57e263) {
                            var _0x1076cb = new _0x2f4cdc();
                            _0x1076cb['name'] = _0x36715e, _0x1076cb['clip'] = _0x57e263, _0xb8b058['addState'](_0x1076cb), _0x269d82 === 0x0 && (this['getControl' + 'lerLayer'](_0x55f812)['defaultSta' + 'te'] = _0x1076cb);
                        }
                    }
                }
                _0x2e862a !== undefined && (_0xb8b058['playOnWake'] = _0x2e862a);
            }
            var _0x324e6e = _0x18d90d['cullingMod' + 'e'];
            _0x324e6e !== undefined && (this['cullingMod' + 'e'] = _0x324e6e);
        }
        ['_update']() {
            var _0x4c3fc4 = this['owner']['_scene']['timer'], _0x3dd8a7 = _0x4c3fc4['_delta'] / 0x3e8;
            if (this['_speed'] === 0x0 || _0x3dd8a7 === 0x0)
                return;
            var _0x5f0458;
            if (this['cullingMod' + 'e'] === _0x331cef['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY']) {
                _0x5f0458 = ![];
                for (var _0x4d1a58 = 0x0, _0x4274bb = this['_renderabl' + 'eSprites']['length']; _0x4d1a58 < _0x4274bb; _0x4d1a58++) {
                    if (this['_renderabl' + 'eSprites'][_0x4d1a58]['_render']['isRender']) {
                        _0x5f0458 = !![];
                        break;
                    }
                }
            } else
                _0x5f0458 = !![];
            this['_updateMar' + 'k']++;
            var _0x33fc66 = _0x4c3fc4['scale'];
            for (_0x4d1a58 = 0x0, _0x4274bb = this['_controlle' + 'rLayers']['length']; _0x4d1a58 < _0x4274bb; _0x4d1a58++) {
                var _0x187891 = this['_controlle' + 'rLayers'][_0x4d1a58], _0x42900a = _0x187891['_playState' + 'Info'], _0x387875 = _0x187891['_crossPlay' + 'StateInfo'];
                _0x151729 = _0x187891['blendingMo' + 'de'] !== _0x6ba2ab['BLENDINGMO' + 'DE_OVERRID' + 'E'];
                switch (_0x187891['_playType']) {
                case 0x0:
                    var _0x1194e5 = _0x42900a['_currentSt' + 'ate'], _0x3a994b = _0x1194e5['_clip'], _0x33e9fe = this['_speed'] * _0x1194e5['speed'], _0x4056c6 = _0x42900a['_finish'];
                    _0x4056c6 || this['_updatePla' + 'yer'](_0x1194e5, _0x42900a, _0x3dd8a7 * _0x33e9fe, _0x3a994b['islooping']);
                    if (_0x5f0458) {
                        var _0x151729 = _0x187891['blendingMo' + 'de'] !== _0x6ba2ab['BLENDINGMO' + 'DE_OVERRID' + 'E'];
                        this['_updateCli' + 'pDatas'](_0x1194e5, _0x151729, _0x42900a, _0x33fc66 * _0x33e9fe), this['_setClipDa' + 'tasToNode'](_0x1194e5, _0x151729, _0x187891['defaultWei' + 'ght'], _0x4d1a58 === 0x0), _0x4056c6 || this['_updateEve' + 'ntScript'](_0x1194e5, _0x42900a);
                    }
                    break;
                case 0x1:
                    _0x1194e5 = _0x42900a['_currentSt' + 'ate'], _0x3a994b = _0x1194e5['_clip'];
                    var _0x1c1d58 = _0x187891['_crossPlay' + 'State'], _0x4e2d51 = _0x1c1d58['_clip'], _0x1616f6 = _0x187891['_crossDura' + 'tion'], _0x15b241 = _0x387875['_startPlay' + 'Time'], _0x3c746a = _0x4e2d51['_duration'] - _0x15b241, _0x51b46d = _0x1616f6 > _0x3c746a ? _0x3c746a / _0x1616f6 : 0x1, _0x3bd61c = this['_speed'] * _0x1c1d58['speed'];
                    this['_updatePla' + 'yer'](_0x1c1d58, _0x387875, _0x3dd8a7 * _0x51b46d * _0x3bd61c, _0x4e2d51['islooping']);
                    var _0xcb39d2 = (_0x387875['_elapsedTi' + 'me'] - _0x15b241) / _0x51b46d / _0x1616f6;
                    if (_0xcb39d2 >= 0x1)
                        _0x5f0458 && (this['_updateCli' + 'pDatas'](_0x1c1d58, _0x151729, _0x387875, _0x33fc66 * _0x3bd61c), this['_setClipDa' + 'tasToNode'](_0x1c1d58, _0x151729, _0x187891['defaultWei' + 'ght'], _0x4d1a58 === 0x0), _0x187891['_playType'] = 0x0, _0x42900a['_currentSt' + 'ate'] = _0x1c1d58, _0x387875['_cloneTo'](_0x42900a));
                    else {
                        if (!_0x42900a['_finish']) {
                            _0x33e9fe = this['_speed'] * _0x1194e5['speed'], this['_updatePla' + 'yer'](_0x1194e5, _0x42900a, _0x3dd8a7 * _0x33e9fe, _0x3a994b['islooping']);
                            if (_0x5f0458)
                                this['_updateCli' + 'pDatas'](_0x1194e5, _0x151729, _0x42900a, _0x33fc66 * _0x33e9fe);
                        }
                        _0x5f0458 && (this['_updateCli' + 'pDatas'](_0x1c1d58, _0x151729, _0x387875, _0x33fc66 * _0x51b46d * _0x3bd61c), this['_setCrossC' + 'lipDatasTo' + 'Node'](_0x187891, _0x1194e5, _0x1c1d58, _0xcb39d2, _0x4d1a58 === 0x0));
                    }
                    _0x5f0458 && (this['_updateEve' + 'ntScript'](_0x1194e5, _0x42900a), this['_updateEve' + 'ntScript'](_0x1c1d58, _0x387875));
                    break;
                case 0x2:
                    _0x1c1d58 = _0x187891['_crossPlay' + 'State'], _0x4e2d51 = _0x1c1d58['_clip'], _0x1616f6 = _0x187891['_crossDura' + 'tion'], _0x15b241 = _0x387875['_startPlay' + 'Time'], _0x3c746a = _0x4e2d51['_duration'] - _0x15b241, _0x51b46d = _0x1616f6 > _0x3c746a ? _0x3c746a / _0x1616f6 : 0x1, _0x3bd61c = this['_speed'] * _0x1c1d58['speed'], this['_updatePla' + 'yer'](_0x1c1d58, _0x387875, _0x3dd8a7 * _0x51b46d * _0x3bd61c, _0x4e2d51['islooping']);
                    _0x5f0458 && (_0xcb39d2 = (_0x387875['_elapsedTi' + 'me'] - _0x15b241) / _0x51b46d / _0x1616f6, _0xcb39d2 >= 0x1 ? (this['_updateCli' + 'pDatas'](_0x1c1d58, _0x151729, _0x387875, _0x33fc66 * _0x3bd61c), this['_setClipDa' + 'tasToNode'](_0x1c1d58, _0x151729, 0x1, _0x4d1a58 === 0x0), _0x187891['_playType'] = 0x0, _0x42900a['_currentSt' + 'ate'] = _0x1c1d58, _0x387875['_cloneTo'](_0x42900a)) : (this['_updateCli' + 'pDatas'](_0x1c1d58, _0x151729, _0x387875, _0x33fc66 * _0x51b46d * _0x3bd61c), this['_setFixedC' + 'rossClipDa' + 'tasToNode'](_0x187891, _0x1c1d58, _0xcb39d2, _0x4d1a58 === 0x0)), this['_updateEve' + 'ntScript'](_0x1c1d58, _0x387875));
                    break;
                }
            }
            _0x5f0458 && (this['_avatar'] && this['_updateAva' + 'tarNodesTo' + 'Sprite']());
        }
        ['_cloneTo'](_0x4cd5b3) {
            var _0x3b4466 = _0x4cd5b3;
            _0x3b4466['avatar'] = this['avatar'], _0x3b4466['cullingMod' + 'e'] = this['cullingMod' + 'e'];
            for (var _0xd0ef91 = 0x0, _0x5cf9f7 = this['_controlle' + 'rLayers']['length']; _0xd0ef91 < _0x5cf9f7; _0xd0ef91++) {
                var _0x1de1af = this['_controlle' + 'rLayers'][_0xd0ef91];
                _0x3b4466['addControl' + 'lerLayer'](_0x1de1af['clone']());
                var _0x18d082 = _0x1de1af['_states'];
                for (var _0xaba6af = 0x0, _0x51b457 = _0x18d082['length']; _0xaba6af < _0x51b457; _0xaba6af++) {
                    var _0x1a6c5d = _0x18d082[_0xaba6af]['clone'](), _0x994376 = _0x3b4466['getControl' + 'lerLayer'](_0xd0ef91);
                    _0x994376['addState'](_0x1a6c5d), _0xaba6af == 0x0 && (_0x994376['defaultSta' + 'te'] = _0x1a6c5d);
                }
            }
            _0x3b4466['_linkSprit' + 'es'] = this['_linkSprit' + 'es'], _0x3b4466['_linkToSpr' + 'ites'](this['_linkSprit' + 'es']);
        }
        ['getDefault' + 'State'](_0x211ba2 = 0x0) {
            var _0x2d47b3 = this['_controlle' + 'rLayers'][_0x211ba2];
            return _0x2d47b3['defaultSta' + 'te'];
        }
        ['addState'](_0x440cee, _0x268679 = 0x0) {
            var _0x3a45c3 = this['_controlle' + 'rLayers'][_0x268679];
            _0x3a45c3['addState'](_0x440cee), console['warn']('Animator:t' + 'his\x20functi' + 'on\x20is\x20disc' + 'ard,please' + '\x20use\x20anima' + 'torControl' + 'lerLayer.a' + 'ddState()\x20' + 'instead.');
        }
        ['removeStat' + 'e'](_0x285abc, _0x1bd375 = 0x0) {
            var _0xc6d167 = this['_controlle' + 'rLayers'][_0x1bd375];
            _0xc6d167['removeStat' + 'e'](_0x285abc), console['warn']('Animator:t' + 'his\x20functi' + 'on\x20is\x20disc' + 'ard,please' + '\x20use\x20anima' + 'torControl' + 'lerLayer.r' + 'emoveState' + '()\x20instead' + '.');
        }
        ['addControl' + 'lerLayer'](_0x7c5045) {
            this['_controlle' + 'rLayers']['push'](_0x7c5045), _0x7c5045['_animator'] = this, _0x7c5045['_addRefere' + 'nce']();
            var _0x2be717 = _0x7c5045['_states'];
            for (var _0x474f5c = 0x0, _0x2995ef = _0x2be717['length']; _0x474f5c < _0x2995ef; _0x474f5c++)
                this['_getOwners' + 'ByClip'](_0x2be717[_0x474f5c]);
        }
        ['getControl' + 'lerLayer'](_0x1a587c = 0x0) {
            return this['_controlle' + 'rLayers'][_0x1a587c];
        }
        ['play'](_0x235e72 = null, _0x5bbbc3 = 0x0, _0x5ce417 = Number['NEGATIVE_I' + 'NFINITY']) {
            var _0x1a18db = this['_controlle' + 'rLayers'][_0x5bbbc3];
            if (_0x1a18db) {
                var _0x37af81 = _0x1a18db['defaultSta' + 'te'];
                if (!_0x235e72 && !_0x37af81)
                    throw new Error('Animator:m' + 'ust\x20have\x20d' + 'efault\x20cli' + 'p\x20value,pl' + 'ease\x20set\x20c' + 'lip\x20proper' + 'ty.');
                var _0x27427b = _0x1a18db['_playState' + 'Info'], _0x4c149e = _0x27427b['_currentSt' + 'ate'], _0xf3d8f9 = _0x235e72 ? _0x1a18db['_statesMap'][_0x235e72] : _0x37af81, _0x529b72 = _0xf3d8f9['_clip']['_duration'];
                if (_0x4c149e !== _0xf3d8f9) {
                    if (_0x5ce417 !== Number['NEGATIVE_I' + 'NFINITY'])
                        _0x27427b['_resetPlay' + 'State'](_0x529b72 * _0x5ce417);
                    else
                        _0x27427b['_resetPlay' + 'State'](0x0);
                    _0x4c149e !== null && _0x4c149e !== _0xf3d8f9 && this['_revertDef' + 'aultKeyfra' + 'meNodes'](_0x4c149e), _0x1a18db['_playType'] = 0x0, _0x27427b['_currentSt' + 'ate'] = _0xf3d8f9;
                } else
                    _0x5ce417 !== Number['NEGATIVE_I' + 'NFINITY'] && (_0x27427b['_resetPlay' + 'State'](_0x529b72 * _0x5ce417), _0x1a18db['_playType'] = 0x0);
                var _0x535630 = _0xf3d8f9['_scripts'];
                if (_0x535630) {
                    for (var _0x19e3f8 = 0x0, _0x43872f = _0x535630['length']; _0x19e3f8 < _0x43872f; _0x19e3f8++)
                        _0x535630[_0x19e3f8]['onStateEnt' + 'er']();
                }
            } else
                console['warn']('Invalid\x20la' + 'yerIndex\x20' + _0x5bbbc3 + '.');
        }
        ['crossFade'](_0x2ff2de, _0xb3142b, _0x5cf2df = 0x0, _0x559413 = Number['NEGATIVE_I' + 'NFINITY']) {
            var _0x2f4901 = this['_controlle' + 'rLayers'][_0x5cf2df];
            if (_0x2f4901) {
                var _0x207af6 = _0x2f4901['_statesMap'][_0x2ff2de];
                if (_0x207af6) {
                    var _0x10f520 = _0x2f4901['_playType'];
                    if (_0x10f520 === -0x1) {
                        this['play'](_0x2ff2de, _0x5cf2df, _0x559413);
                        return;
                    }
                    var _0x45e712 = _0x2f4901['_crossPlay' + 'StateInfo'], _0xb0d18b = _0x2f4901['_crossNode' + 'sOwners'], _0x39870a = _0x2f4901['_crossNode' + 'sOwnersInd' + 'icesMap'], _0x4e5989 = _0x2f4901['_playState' + 'Info']['_currentSt' + 'ate'], _0x36b738 = _0x207af6['_nodeOwner' + 's'], _0x4af182 = _0x2f4901['_destCross' + 'ClipNodeIn' + 'dices'], _0x48cb78 = _0x207af6['_clip'], _0x5aa601 = _0x48cb78['_nodes'], _0xf02ae8 = _0x48cb78['_nodesDic'];
                    switch (_0x10f520) {
                    case 0x0:
                        var _0x39014b = _0x4e5989['_nodeOwner' + 's'], _0x50e8fb = _0x2f4901['_srcCrossC' + 'lipNodeInd' + 'ices'], _0x57771a = _0x4e5989['_clip'], _0x54115d = _0x57771a['_nodes'], _0x340385 = _0x57771a['_nodesDic'];
                        _0x2f4901['_playType'] = 0x1;
                        var _0x318d83 = ++_0x2f4901['_crossMark'], _0x42b55a = _0x2f4901['_crossNode' + 'sOwnersCou' + 'nt'] = 0x0;
                        for (var _0x21e55c = 0x0, _0x661d43 = _0x54115d['count']; _0x21e55c < _0x661d43; _0x21e55c++) {
                            var _0x45dac0 = _0x54115d['getNodeByI' + 'ndex'](_0x21e55c), _0x467490 = _0x45dac0['_indexInLi' + 'st'], _0x2c3160 = _0x39014b[_0x467490];
                            if (_0x2c3160) {
                                var _0x162de2 = _0x45dac0['fullPath'];
                                _0x50e8fb[_0x42b55a] = _0x467490;
                                var _0x2cde2a = _0xf02ae8[_0x162de2];
                                if (_0x2cde2a)
                                    _0x4af182[_0x42b55a] = _0x2cde2a['_indexInLi' + 'st'];
                                else
                                    _0x4af182[_0x42b55a] = -0x1;
                                _0x39870a[_0x162de2] = _0x318d83, _0xb0d18b[_0x42b55a] = _0x2c3160, _0x42b55a++;
                            }
                        }
                        for (_0x21e55c = 0x0, _0x661d43 = _0x5aa601['count']; _0x21e55c < _0x661d43; _0x21e55c++) {
                            _0x2cde2a = _0x5aa601['getNodeByI' + 'ndex'](_0x21e55c);
                            var _0x4be91a = _0x2cde2a['_indexInLi' + 'st'], _0x86a0a6 = _0x36b738[_0x4be91a];
                            if (_0x86a0a6) {
                                var _0x2c3467 = _0x2cde2a['fullPath'];
                                !_0x340385[_0x2c3467] && (_0x50e8fb[_0x42b55a] = -0x1, _0x4af182[_0x42b55a] = _0x4be91a, _0x39870a[_0x2c3467] = _0x318d83, _0xb0d18b[_0x42b55a] = _0x86a0a6, _0x42b55a++);
                            }
                        }
                        break;
                    case 0x1:
                    case 0x2:
                        _0x2f4901['_playType'] = 0x2;
                        for (_0x21e55c = 0x0, _0x661d43 = _0xb0d18b['length']; _0x21e55c < _0x661d43; _0x21e55c++) {
                            var _0x305047 = _0xb0d18b[_0x21e55c];
                            _0x305047['saveCrossF' + 'ixedValue'](), _0x2cde2a = _0xf02ae8[_0x305047['fullPath']];
                            if (_0x2cde2a)
                                _0x4af182[_0x21e55c] = _0x2cde2a['_indexInLi' + 'st'];
                            else
                                _0x4af182[_0x21e55c] = -0x1;
                        }
                        _0x42b55a = _0x2f4901['_crossNode' + 'sOwnersCou' + 'nt'], _0x318d83 = _0x2f4901['_crossMark'];
                        for (_0x21e55c = 0x0, _0x661d43 = _0x5aa601['count']; _0x21e55c < _0x661d43; _0x21e55c++) {
                            _0x2cde2a = _0x5aa601['getNodeByI' + 'ndex'](_0x21e55c), _0x4be91a = _0x2cde2a['_indexInLi' + 'st'], _0x86a0a6 = _0x36b738[_0x4be91a], _0x86a0a6 && (_0x2c3467 = _0x2cde2a['fullPath'], _0x39870a[_0x2c3467] !== _0x318d83 && (_0x4af182[_0x42b55a] = _0x4be91a, _0x39870a[_0x2c3467] = _0x318d83, _0x305047 = _0x36b738[_0x4be91a], _0xb0d18b[_0x42b55a] = _0x305047, _0x305047['saveCrossF' + 'ixedValue'](), _0x42b55a++));
                        }
                        break;
                    default:
                    }
                    _0x2f4901['_crossNode' + 'sOwnersCou' + 'nt'] = _0x42b55a, _0x2f4901['_crossPlay' + 'State'] = _0x207af6, _0x2f4901['_crossDura' + 'tion'] = _0x4e5989['_clip']['_duration'] * _0xb3142b;
                    if (_0x559413 !== Number['NEGATIVE_I' + 'NFINITY'])
                        _0x45e712['_resetPlay' + 'State'](_0x48cb78['_duration'] * _0x559413);
                    else
                        _0x45e712['_resetPlay' + 'State'](0x0);
                    var _0x20558a = _0x207af6['_scripts'];
                    if (_0x20558a) {
                        for (_0x21e55c = 0x0, _0x661d43 = _0x20558a['length']; _0x21e55c < _0x661d43; _0x21e55c++)
                            _0x20558a[_0x21e55c]['onStateEnt' + 'er']();
                    }
                } else
                    console['warn']('Invalid\x20na' + 'me\x20' + _0x5cf2df + '.');
            } else
                console['warn']('Invalid\x20la' + 'yerIndex\x20' + _0x5cf2df + '.');
        }
        ['getCurrent' + 'AnimatorPl' + 'ayState'](_0x1a12f6 = 0x0) {
            return this['_controlle' + 'rLayers'][_0x1a12f6]['_playState' + 'Info'];
        }
        get ['avatar']() {
            return this['_avatar'];
        }
        set ['avatar'](_0x23802b) {
            if (this['_avatar'] !== _0x23802b) {
                this['_avatar'] = _0x23802b;
                if (_0x23802b)
                    this['_getAvatar' + 'OwnersAndI' + 'nitDatasAs' + 'ync'](), this['owner']['_changeHie' + 'rarchyAnim' + 'atorAvatar'](this, _0x23802b);
                else {
                    var _0x25bf53 = this['owner']['_parent'];
                    this['owner']['_changeHie' + 'rarchyAnim' + 'atorAvatar'](this, _0x25bf53 ? _0x25bf53['_hierarchy' + 'Animator']['_avatar'] : null);
                }
            }
        }
        ['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x2f7a5b, _0x2c63ee, _0x557761) {
            var _0x8230ac = this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x2c63ee];
            if (_0x557761)
                _0x8230ac || (this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x2c63ee] = _0x8230ac = []), _0x8230ac['push'](_0x2f7a5b);
            else {
                var _0x337b63 = _0x8230ac['indexOf'](_0x2f7a5b);
                _0x8230ac['splice'](_0x337b63, 0x1);
            }
        }
        ['_getAvatar' + 'OwnersAndI' + 'nitDatasAs' + 'ync']() {
            for (var _0x52f5b7 = 0x0, _0x5978f0 = this['_controlle' + 'rLayers']['length']; _0x52f5b7 < _0x5978f0; _0x52f5b7++) {
                var _0x442e46 = this['_controlle' + 'rLayers'][_0x52f5b7]['_states'];
                for (var _0x4347fa = 0x0, _0x183265 = _0x442e46['length']; _0x4347fa < _0x183265; _0x4347fa++)
                    this['_getOwners' + 'ByClip'](_0x442e46[_0x4347fa]);
            }
            this['_avatar']['_cloneData' + 'sToAnimato' + 'r'](this);
            for (var _0x4ab160 in this['_linkAvata' + 'rSpritesDa' + 'ta']) {
                var _0x12614c = this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x4ab160];
                if (_0x12614c) {
                    for (var _0x189dd8 = 0x0, _0x369c92 = _0x12614c['length']; _0x189dd8 < _0x369c92; _0x189dd8++)
                        this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x12614c[_0x189dd8], _0x4ab160, !![]);
                }
            }
        }
        ['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x4da336, _0x3f3f53, _0x30d2ec) {
            if (this['_avatar']) {
                var _0x102613 = this['_avatarNod' + 'eMap'][_0x3f3f53];
                if (_0x102613) {
                    if (_0x30d2ec) {
                        _0x4da336['_transform']['_dummy'] = _0x102613['transform'], this['_linkAvata' + 'rSprites']['push'](_0x4da336);
                        var _0x2b0b2c = _0x102613['transform'], _0x4c1c94 = _0x4da336['transform'];
                        if (!_0x4c1c94['owner']['isStatic'] && _0x2b0b2c) {
                            var _0x2a8618 = _0x4c1c94['worldMatri' + 'x'], _0x1013ab = this['owner']['_transform']['_parent'];
                            if (_0x1013ab)
                                _0x47bed9['matrix4x4M' + 'ultiplyMFM'](_0x1013ab['worldMatri' + 'x'], _0x2b0b2c['getWorldMa' + 'trix'](), _0x2a8618);
                            else {
                                var _0x2b8d0c = _0x2a8618['elements'], _0x1bdcab = _0x2b0b2c['getWorldMa' + 'trix']();
                                for (var _0x24bddd = 0x0; _0x24bddd < 0x10; _0x24bddd++)
                                    _0x2b8d0c[_0x24bddd] = _0x1bdcab[_0x24bddd];
                            }
                            _0x4c1c94['worldMatri' + 'x'] = _0x2a8618;
                        }
                    } else
                        _0x4da336['_transform']['_dummy'] = null, this['_linkAvata' + 'rSprites']['splice'](this['_linkAvata' + 'rSprites']['indexOf'](_0x4da336), 0x1);
                }
            }
        }
        ['_updateAva' + 'tarNodesTo' + 'Sprite']() {
            for (var _0x588472 = 0x0, _0x4ee9cf = this['_linkAvata' + 'rSprites']['length']; _0x588472 < _0x4ee9cf; _0x588472++) {
                var _0x355c21 = this['_linkAvata' + 'rSprites'][_0x588472], _0x6c507b = _0x355c21['transform']['_dummy'], _0x53cda6 = _0x355c21['transform'];
                if (!_0x53cda6['owner']['isStatic'] && _0x6c507b) {
                    var _0x4be412 = _0x53cda6['worldMatri' + 'x'], _0xbb7309 = this['owner']['_transform'];
                    _0x47bed9['matrix4x4M' + 'ultiplyMFM'](_0xbb7309['worldMatri' + 'x'], _0x6c507b['getWorldMa' + 'trix'](), _0x4be412), _0x53cda6['worldMatri' + 'x'] = _0x4be412;
                }
            }
        }
        ['linkSprite' + '3DToAvatar' + 'Node'](_0x5eb4f3, _0x11f109) {
            return this['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x11f109, _0x5eb4f3, !![]), this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x11f109, _0x5eb4f3, !![]), !![];
        }
        ['unLinkSpri' + 'te3DToAvat' + 'arNode'](_0x46b8d2) {
            var _0x7c5ea8 = _0x46b8d2['transform']['_dummy'];
            if (_0x7c5ea8) {
                var _0x1ba045 = _0x7c5ea8['_owner']['name'];
                return this['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x46b8d2, _0x1ba045, ![]), this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x46b8d2, _0x1ba045, ![]), !![];
            } else
                return ![];
        }
        ['_updateAni' + 'mationNode' + 'WorldMatix'](_0x1ce7dd, _0x3bdbb7, _0x5e229d, _0x206fee, _0x2ba8e6) {
            _0x442335['LayaGL']['instance']['updateAnim' + 'ationNodeW' + 'orldMatix'](_0x1ce7dd, _0x3bdbb7, _0x5e229d, _0x2ba8e6, _0x206fee);
        }
    }
    _0x331cef['_tempVecto' + 'r30'] = new _0x352206(), _0x331cef['_tempVecto' + 'r31'] = new _0x352206(), _0x331cef['_tempQuate' + 'rnion0'] = new _0x388291(), _0x331cef['_tempQuate' + 'rnion1'] = new _0x388291(), _0x331cef['CULLINGMOD' + 'E_ALWAYSAN' + 'IMATE'] = 0x0, _0x331cef['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY'] = 0x2;
    class _0x514492 {
        constructor() {
            this['invertY'] = ![];
        }
    }
    _0x514492['_instance'] = new _0x514492();
    class _0x40e7a5 extends _0x442335['BaseTextur' + 'e'] {
        constructor(_0x3982fe, _0xf0da3e, _0x5f120c = _0x442335['RenderText' + 'ureFormat']['R8G8B8'], _0x54140c = _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']) {
            super(_0x5f120c, ![]), this['_inPool'] = ![], this['_isCameraT' + 'arget'] = ![], this['_glTexture' + 'Type'] = _0x442335['LayaGL']['instance']['TEXTURE_2D'], this['_width'] = _0x3982fe, this['_height'] = _0xf0da3e, this['_depthSten' + 'cilFormat'] = _0x54140c, this['_mipmapCou' + 'nt'] = 0x1, this['_create'](_0x3982fe, _0xf0da3e);
        }
        static get ['currentAct' + 'ive']() {
            return _0x40e7a5['_currentAc' + 'tive'];
        }
        static ['createFrom' + 'Pool'](_0x236bcc, _0x3fd0df, _0x13e492 = _0x442335['RenderText' + 'ureFormat']['R8G8B8'], _0x5cfeba = _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']) {
            var _0x260287;
            for (var _0x183ace = 0x0, _0x3e300b = _0x40e7a5['_pool']['length']; _0x183ace < _0x3e300b; _0x183ace++) {
                _0x260287 = _0x40e7a5['_pool'][_0x183ace];
                if (_0x260287['_width'] == _0x236bcc && _0x260287['_height'] == _0x3fd0df && _0x260287['_format'] == _0x13e492 && _0x260287['_depthSten' + 'cilFormat'] == _0x5cfeba) {
                    _0x260287['_inPool'] = ![];
                    var _0x13cf0b = _0x40e7a5['_pool'][_0x3e300b - 0x1];
                    return _0x40e7a5['_pool'][_0x183ace] = _0x13cf0b, _0x40e7a5['_pool']['length'] -= 0x1, _0x260287;
                }
            }
            return _0x260287 = new _0x40e7a5(_0x236bcc, _0x3fd0df, _0x13e492, _0x5cfeba), _0x260287['lock'] = !![], _0x260287;
        }
        static ['recoverToP' + 'ool'](_0x584b13) {
            if (_0x584b13['_inPool'])
                return;
            _0x40e7a5['_pool']['push'](_0x584b13), _0x584b13['_inPool'] = !![];
        }
        get ['depthStenc' + 'ilFormat']() {
            return this['_depthSten' + 'cilFormat'];
        }
        get ['defaulteTe' + 'xture']() {
            return _0x442335['Texture2D']['grayTextur' + 'e'];
        }
        ['_create'](_0x4fc4fb, _0x1af760) {
            var _0x168a4b = _0x442335['LayaGL']['instance'], _0x31ffc7 = _0x168a4b, _0x54e874 = this['_glTexture' + 'Type'], _0x1a3eb3 = _0x442335['LayaGL']['layaGPUIns' + 'tance'], _0x303a7a = _0x1a3eb3['_isWebGL2'], _0x1723c3 = this['_format'];
            this['_frameBuff' + 'er'] = _0x168a4b['createFram' + 'ebuffer'](), _0x168a4b['bindFrameb' + 'uffer'](_0x168a4b['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']);
            if (_0x1723c3 !== _0x442335['RenderText' + 'ureFormat']['Depth'] && _0x1723c3 !== _0x442335['RenderText' + 'ureFormat']['ShadowMap']) {
                _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x168a4b, _0x54e874, this['_glTexture']);
                switch (_0x1723c3) {
                case _0x442335['RenderText' + 'ureFormat']['R8G8B8']:
                    if (_0x303a7a)
                        _0x31ffc7['texStorage' + '2D'](_0x54e874, this['_mipmapCou' + 'nt'], _0x31ffc7['RGB8'], _0x4fc4fb, _0x1af760);
                    else
                        _0x168a4b['texImage2D'](_0x54e874, 0x0, _0x168a4b['RGB'], _0x4fc4fb, _0x1af760, 0x0, _0x168a4b['RGB'], _0x168a4b['UNSIGNED_B' + 'YTE'], null);
                    break;
                case _0x442335['RenderText' + 'ureFormat']['R8G8B8A8']:
                    if (_0x303a7a)
                        _0x31ffc7['texStorage' + '2D'](_0x54e874, this['_mipmapCou' + 'nt'], _0x31ffc7['RGBA8'], _0x4fc4fb, _0x1af760);
                    else
                        _0x168a4b['texImage2D'](_0x54e874, 0x0, _0x168a4b['RGBA'], _0x4fc4fb, _0x1af760, 0x0, _0x168a4b['RGBA'], _0x168a4b['UNSIGNED_B' + 'YTE'], null);
                    break;
                case _0x442335['RenderText' + 'ureFormat']['Alpha8']:
                    if (_0x303a7a)
                        _0x31ffc7['texStorage' + '2D'](_0x54e874, 0x0, _0x31ffc7['R8'], _0x4fc4fb, _0x1af760);
                    else
                        _0x168a4b['texImage2D'](_0x54e874, 0x0, _0x168a4b['ALPHA'], _0x4fc4fb, _0x1af760, 0x0, _0x168a4b['ALPHA'], _0x168a4b['UNSIGNED_B' + 'YTE'], null);
                    break;
                case _0x442335['RenderText' + 'ureFormat']['R16G16B16A' + '16']:
                    if (_0x303a7a)
                        _0x31ffc7['texStorage' + '2D'](_0x54e874, this['_mipmapCou' + 'nt'], _0x31ffc7['RGBA16F'], _0x4fc4fb, _0x1af760);
                    else
                        _0x168a4b['texImage2D'](_0x54e874, 0x0, _0x168a4b['RGBA'], _0x4fc4fb, _0x1af760, 0x0, _0x168a4b['RGBA'], _0x1a3eb3['_oesTextur' + 'eHalfFloat']['HALF_FLOAT' + '_OES'], null);
                    break;
                }
                _0x168a4b['framebuffe' + 'rTexture2D'](_0x168a4b['FRAMEBUFFE' + 'R'], _0x168a4b['COLOR_ATTA' + 'CHMENT0'], _0x168a4b['TEXTURE_2D'], this['_glTexture'], 0x0);
            }
            if (_0x1723c3 == _0x442335['RenderText' + 'ureFormat']['Depth'] || _0x1723c3 == _0x442335['RenderText' + 'ureFormat']['ShadowMap']) {
                _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x168a4b, _0x54e874, this['_glTexture']);
                switch (this['_depthSten' + 'cilFormat']) {
                case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                    if (_0x303a7a)
                        _0x31ffc7['texStorage' + '2D'](_0x54e874, this['_mipmapCou' + 'nt'], _0x31ffc7['DEPTH_COMP' + 'ONENT16'], _0x4fc4fb, _0x1af760);
                    else
                        _0x168a4b['texImage2D'](_0x54e874, 0x0, _0x168a4b['DEPTH_COMP' + 'ONENT'], _0x4fc4fb, _0x1af760, 0x0, _0x168a4b['DEPTH_COMP' + 'ONENT'], _0x168a4b['UNSIGNED_S' + 'HORT'], null);
                    _0x168a4b['framebuffe' + 'rTexture2D'](_0x168a4b['FRAMEBUFFE' + 'R'], _0x168a4b['DEPTH_ATTA' + 'CHMENT'], _0x168a4b['TEXTURE_2D'], this['_glTexture'], 0x0);
                    break;
                case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                    if (_0x303a7a)
                        _0x31ffc7['texStorage' + '2D'](_0x54e874, this['_mipmapCou' + 'nt'], _0x31ffc7['DEPTH24_ST' + 'ENCIL8'], _0x4fc4fb, _0x1af760);
                    else
                        _0x168a4b['texImage2D'](_0x54e874, 0x0, _0x168a4b['DEPTH_STEN' + 'CIL'], _0x4fc4fb, _0x1af760, 0x0, _0x168a4b['DEPTH_STEN' + 'CIL'], _0x1a3eb3['_webgl_dep' + 'th_texture']['UNSIGNED_I' + 'NT_24_8_WE' + 'BGL'], null);
                    _0x168a4b['framebuffe' + 'rTexture2D'](_0x168a4b['FRAMEBUFFE' + 'R'], _0x168a4b['DEPTH_STEN' + 'CIL_ATTACH' + 'MENT'], _0x168a4b['TEXTURE_2D'], this['_glTexture'], 0x0);
                    break;
                default:
                    throw 'RenderText' + 'ure:\x20depth' + '\x20format\x20Re' + 'nderTextur' + 'e\x20must\x20use' + '\x20depthForm' + 'at\x20with\x20DE' + 'PTH_16\x20and' + '\x20DEPTHSTEN' + 'CIL_16_8.';
                }
                if (_0x303a7a && _0x1723c3 == _0x442335['RenderText' + 'ureFormat']['ShadowMap'])
                    _0x31ffc7['texParamet' + 'eri'](_0x54e874, _0x31ffc7['TEXTURE_CO' + 'MPARE_MODE'], _0x31ffc7['COMPARE_RE' + 'F_TO_TEXTU' + 'RE']);
            } else {
                if (this['_depthSten' + 'cilFormat'] !== _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']) {
                    this['_depthSten' + 'cilBuffer'] = _0x168a4b['createRend' + 'erbuffer'](), _0x168a4b['bindRender' + 'buffer'](_0x168a4b['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                    switch (this['_depthSten' + 'cilFormat']) {
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x168a4b['renderbuff' + 'erStorage'](_0x168a4b['RENDERBUFF' + 'ER'], _0x168a4b['DEPTH_COMP' + 'ONENT16'], _0x4fc4fb, _0x1af760), _0x168a4b['framebuffe' + 'rRenderbuf' + 'fer'](_0x168a4b['FRAMEBUFFE' + 'R'], _0x168a4b['DEPTH_ATTA' + 'CHMENT'], _0x168a4b['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                        break;
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x168a4b['renderbuff' + 'erStorage'](_0x168a4b['RENDERBUFF' + 'ER'], _0x168a4b['STENCIL_IN' + 'DEX8'], _0x4fc4fb, _0x1af760), _0x168a4b['framebuffe' + 'rRenderbuf' + 'fer'](_0x168a4b['FRAMEBUFFE' + 'R'], _0x168a4b['STENCIL_AT' + 'TACHMENT'], _0x168a4b['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                        break;
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                        _0x168a4b['renderbuff' + 'erStorage'](_0x168a4b['RENDERBUFF' + 'ER'], _0x168a4b['DEPTH_STEN' + 'CIL'], _0x4fc4fb, _0x1af760), _0x168a4b['framebuffe' + 'rRenderbuf' + 'fer'](_0x168a4b['FRAMEBUFFE' + 'R'], _0x168a4b['DEPTH_STEN' + 'CIL_ATTACH' + 'MENT'], _0x168a4b['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                        break;
                    default:
                        throw 'RenderText' + 'ure:\x20unkon' + 'w\x20depth\x20fo' + 'rmat.';
                    }
                    _0x168a4b['bindRender' + 'buffer'](_0x168a4b['RENDERBUFF' + 'ER'], null);
                }
            }
            _0x168a4b['bindFrameb' + 'uffer'](_0x168a4b['FRAMEBUFFE' + 'R'], null), this['_setWarpMo' + 'de'](_0x168a4b['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x168a4b['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_setAnisot' + 'ropy'](this['_anisoLeve' + 'l']), this['_readyed'] = !![], this['_activeRes' + 'ource'](), this['_setGPUMem' + 'ory'](_0x4fc4fb * _0x1af760 * 0x4);
        }
        ['_start']() {
            var _0x5097b7 = _0x442335['LayaGL']['instance'];
            _0x5097b7['bindFrameb' + 'uffer'](_0x5097b7['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x40e7a5['_currentAc' + 'tive'] = this, this['_isCameraT' + 'arget'] && (_0x514492['_instance']['invertY'] = !![]), this['_readyed'] = ![];
        }
        ['_end']() {
            var _0x494180 = _0x442335['LayaGL']['instance'];
            _0x494180['bindFrameb' + 'uffer'](_0x494180['FRAMEBUFFE' + 'R'], null), _0x40e7a5['_currentAc' + 'tive'] = null, this['_isCameraT' + 'arget'] && (_0x514492['_instance']['invertY'] = ![]), this['_readyed'] = !![];
        }
        ['getData'](_0x56dd4e, _0x36fa0c, _0xe91782, _0x2c6c92, _0x2e2433) {
            if (_0x442335['Render']['isConchApp'] && window['conchConfi' + 'g']['threadMode'] == 0x2)
                throw 'native\x202\x20t' + 'hread\x20mode' + '\x20use\x20getDa' + 'taAsync';
            var _0x3cf70 = _0x442335['LayaGL']['instance'];
            _0x3cf70['bindFrameb' + 'uffer'](_0x3cf70['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']);
            var _0x50ab7c = _0x3cf70['checkFrame' + 'bufferStat' + 'us'](_0x3cf70['FRAMEBUFFE' + 'R']) === _0x3cf70['FRAMEBUFFE' + 'R_COMPLETE'];
            if (!_0x50ab7c)
                return _0x3cf70['bindFrameb' + 'uffer'](_0x3cf70['FRAMEBUFFE' + 'R'], null), null;
            return _0x3cf70['readPixels'](_0x56dd4e, _0x36fa0c, _0xe91782, _0x2c6c92, _0x3cf70['RGBA'], _0x3cf70['UNSIGNED_B' + 'YTE'], _0x2e2433), _0x3cf70['bindFrameb' + 'uffer'](_0x3cf70['FRAMEBUFFE' + 'R'], null), _0x2e2433;
        }
        ['_disposeRe' + 'source']() {
            if (this['_frameBuff' + 'er']) {
                var _0x66dde8 = _0x442335['LayaGL']['instance'];
                _0x66dde8['deleteText' + 'ure'](this['_glTexture']), _0x66dde8['deleteFram' + 'ebuffer'](this['_frameBuff' + 'er']), _0x66dde8['deleteRend' + 'erbuffer'](this['_depthSten' + 'cilBuffer']), this['_glTexture'] = null, this['_frameBuff' + 'er'] = null, this['_depthSten' + 'cilBuffer'] = null, this['_setGPUMem' + 'ory'](0x0);
            }
        }
        ['getDataAsy' + 'nc'](_0x399a0b, _0x154959, _0x2ce8d2, _0x3749a5, _0x5ba9fb) {
            var _0x523e90 = _0x442335['LayaGL']['instance'];
            _0x523e90['bindFrameb' + 'uffer'](_0x523e90['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x523e90['readPixels' + 'Async'](_0x399a0b, _0x154959, _0x2ce8d2, _0x3749a5, _0x523e90['RGBA'], _0x523e90['UNSIGNED_B' + 'YTE'], function (_0x2d51e4) {
                _0x5ba9fb(new Uint8Array(_0x2d51e4));
            }), _0x523e90['bindFrameb' + 'uffer'](_0x523e90['FRAMEBUFFE' + 'R'], null);
        }
    }
    _0x40e7a5['_pool'] = [];
    class _0x1445c0 {
        constructor() {
            this['_mask'] = [], this['_length'] = 0x0;
        }
        ['_intersect' + 'ionDefineD' + 'atas'](_0x231255) {
            var _0x3aa4eb = _0x231255['_mask'], _0x25c446 = this['_mask'];
            for (var _0x5111f8 = this['_length'] - 0x1; _0x5111f8 >= 0x0; _0x5111f8--) {
                var _0x49eeb5 = _0x25c446[_0x5111f8] & _0x3aa4eb[_0x5111f8];
                if (_0x49eeb5 == 0x0 && _0x5111f8 == this['_length'] - 0x1)
                    this['_length']--;
                else
                    _0x25c446[_0x5111f8] = _0x49eeb5;
            }
        }
        ['add'](_0x3ca4ac) {
            var _0x5f4362 = _0x3ca4ac['_index'], _0x58af93 = _0x5f4362 + 0x1, _0x5c1139 = this['_mask'], _0xf4f2e = this['_length'];
            if (_0xf4f2e < _0x58af93) {
                _0x5c1139['length'] < _0x58af93 && (_0x5c1139['length'] = _0x58af93);
                for (; _0xf4f2e < _0x5f4362; _0xf4f2e++)
                    _0x5c1139[_0xf4f2e] = 0x0;
                _0x5c1139[_0x5f4362] = _0x3ca4ac['_value'], this['_length'] = _0x58af93;
            } else
                _0x5c1139[_0x5f4362] |= _0x3ca4ac['_value'];
        }
        ['remove'](_0x5a1fa8) {
            var _0x3612cf = _0x5a1fa8['_index'], _0x555952 = this['_mask'], _0x203e92 = this['_length'] - 0x1;
            if (_0x3612cf > _0x203e92)
                return;
            var _0x1ceba1 = _0x555952[_0x3612cf] & ~_0x5a1fa8['_value'];
            if (_0x3612cf == _0x203e92 && _0x1ceba1 === 0x0)
                this['_length']--;
            else
                _0x555952[_0x3612cf] = _0x1ceba1;
        }
        ['addDefineD' + 'atas'](_0x5d5bab) {
            var _0x1deca1 = _0x5d5bab['_mask'], _0x306eac = _0x5d5bab['_length'], _0x882e25 = this['_mask'], _0x3031bd = this['_length'];
            if (_0x3031bd < _0x306eac) {
                _0x882e25['length'] = _0x306eac;
                for (var _0x53a7f2 = 0x0; _0x53a7f2 < _0x3031bd; _0x53a7f2++)
                    _0x882e25[_0x53a7f2] |= _0x1deca1[_0x53a7f2];
                for (; _0x53a7f2 < _0x306eac; _0x53a7f2++)
                    _0x882e25[_0x53a7f2] = _0x1deca1[_0x53a7f2];
                this['_length'] = _0x306eac;
            } else
                for (var _0x53a7f2 = 0x0; _0x53a7f2 < _0x306eac; _0x53a7f2++) {
                    _0x882e25[_0x53a7f2] |= _0x1deca1[_0x53a7f2];
                }
        }
        ['removeDefi' + 'neDatas'](_0xd511c8) {
            var _0x3562c0 = _0xd511c8['_mask'], _0x54f9f9 = this['_mask'], _0x378218 = this['_length'] - 0x1, _0x4b6362 = Math['min'](_0xd511c8['_length'], _0x378218);
            for (; _0x4b6362 >= 0x0; _0x4b6362--) {
                var _0x28e3a4 = _0x54f9f9[_0x4b6362] & ~_0x3562c0[_0x4b6362];
                _0x4b6362 == _0x378218 && _0x28e3a4 === 0x0 ? (_0x378218--, this['_length']--) : _0x54f9f9[_0x4b6362] = _0x28e3a4;
            }
        }
        ['has'](_0x21a3f6) {
            var _0x1468bc = _0x21a3f6['_index'];
            if (_0x1468bc >= this['_length'])
                return ![];
            return (this['_mask'][_0x1468bc] & _0x21a3f6['_value']) !== 0x0;
        }
        ['clear']() {
            this['_length'] = 0x0;
        }
        ['cloneTo'](_0x51bd12) {
            var _0x1cc6e7 = _0x51bd12, _0x31d7eb = _0x1cc6e7['_mask'], _0x40e412 = this['_mask'], _0x2c5f52 = this['_length'];
            _0x31d7eb['length'] = _0x2c5f52;
            for (var _0x1c8602 = 0x0; _0x1c8602 < _0x2c5f52; _0x1c8602++)
                _0x31d7eb[_0x1c8602] = _0x40e412[_0x1c8602];
            _0x1cc6e7['_length'] = _0x2c5f52;
        }
        ['clone']() {
            var _0x2ae875 = new _0x1445c0();
            return this['cloneTo'](_0x2ae875), _0x2ae875;
        }
    }
    class _0x251441 extends _0x442335['Buffer'] {
        constructor(_0x1a777f, _0x5b7cab, _0x476993 = ![]) {
            super(), this['_vertexDec' + 'laration'] = null, this['_float32Re' + 'ader'] = null;
            var _0x3837d3 = _0x442335['LayaGL']['instance'];
            this['_bufferUsa' + 'ge'] = _0x5b7cab, this['_bufferTyp' + 'e'] = _0x3837d3['ARRAY_BUFF' + 'ER'], this['_canRead'] = _0x476993, this['_byteLengt' + 'h'] = _0x1a777f, this['bind'](), _0x3837d3['bufferData'](this['_bufferTyp' + 'e'], this['_byteLengt' + 'h'], this['_bufferUsa' + 'ge']), _0x476993 && (this['_buffer'] = new Uint8Array(_0x1a777f), this['_float32Re' + 'ader'] = new Float32Array(this['_buffer']['buffer']));
        }
        get ['vertexDecl' + 'aration']() {
            return this['_vertexDec' + 'laration'];
        }
        set ['vertexDecl' + 'aration'](_0x53e087) {
            this['_vertexDec' + 'laration'] = _0x53e087;
        }
        get ['canRead']() {
            return this['_canRead'];
        }
        ['bind']() {
            if (_0x442335['Buffer']['_bindedVer' + 'texBuffer'] !== this['_glBuffer']) {
                var _0x5c7478 = _0x442335['LayaGL']['instance'];
                return _0x5c7478['bindBuffer'](_0x5c7478['ARRAY_BUFF' + 'ER'], this['_glBuffer']), _0x442335['Buffer']['_bindedVer' + 'texBuffer'] = this['_glBuffer'], !![];
            } else
                return ![];
        }
        ['orphanStor' + 'age']() {
            this['bind'](), _0x442335['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], this['_byteLengt' + 'h'], this['_bufferUsa' + 'ge']);
        }
        ['setData'](_0x8ea7e9, _0x597cd9 = 0x0, _0x2e44ea = 0x0, _0x2d2029 = Number['MAX_SAFE_I' + 'NTEGER']) {
            this['bind']();
            var _0x1ece63 = _0x2e44ea !== 0x0 || _0x2d2029 !== Number['MAX_SAFE_I' + 'NTEGER'];
            if (_0x1ece63) {
                var _0x4c8a99 = new Uint8Array(_0x8ea7e9, _0x2e44ea, _0x2d2029);
                _0x442335['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x597cd9, _0x4c8a99);
                if (this['_canRead'])
                    this['_buffer']['set'](_0x4c8a99, _0x597cd9);
            } else {
                _0x442335['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x597cd9, _0x8ea7e9);
                if (this['_canRead'])
                    this['_buffer']['set'](new Uint8Array(_0x8ea7e9), _0x597cd9);
            }
        }
        ['getUint8Da' + 'ta']() {
            if (this['_canRead'])
                return this['_buffer'];
            else
                throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['getFloat32' + 'Data']() {
            if (this['_canRead'])
                return this['_float32Re' + 'ader'];
            else
                throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['markAsUnre' + 'adbale']() {
            this['_canRead'] = ![], this['_buffer'] = null, this['_float32Re' + 'ader'] = null;
        }
        ['destroy']() {
            super['destroy'](), this['_buffer'] = null, this['_float32Re' + 'ader'] = null, this['_vertexDec' + 'laration'] = null, this['_byteLengt' + 'h'] = 0x0;
        }
    }
    _0x251441['DATATYPE_F' + 'LOAT32ARRA' + 'Y'] = 0x0, _0x251441['DATATYPE_U' + 'INT8ARRAY'] = 0x1;
    class _0x5cc56b {
        static ['__init__']() {
            var _0x592d12 = _0x442335['LayaGL']['instance'];
            _0x5cc56b['_elementIn' + 'fos'] = {
                'single': [
                    0x1,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'vector2': [
                    0x2,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'vector3': [
                    0x3,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'vector4': [
                    0x4,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'color': [
                    0x4,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'byte4': [
                    0x4,
                    _0x592d12['UNSIGNED_B' + 'YTE'],
                    0x0
                ],
                'short2': [
                    0x2,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'short4': [
                    0x4,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'normalizedshort2': [
                    0x2,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'normalizedshort4': [
                    0x4,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'halfvector2': [
                    0x2,
                    _0x592d12['FLOAT'],
                    0x0
                ],
                'halfvector4': [
                    0x4,
                    _0x592d12['FLOAT'],
                    0x0
                ]
            };
        }
        static ['getElement' + 'Infos'](_0xf23638) {
            var _0x4f22dd = _0x5cc56b['_elementIn' + 'fos'][_0xf23638];
            if (_0x4f22dd)
                return _0x4f22dd;
            else
                throw 'VertexElem' + 'entFormat:' + '\x20this\x20vert' + 'exElementF' + 'ormat\x20is\x20n' + 'ot\x20impleme' + 'nt.';
        }
    }
    _0x5cc56b['Single'] = 'single', _0x5cc56b['Vector2'] = 'vector2', _0x5cc56b['Vector3'] = 'vector3', _0x5cc56b['Vector4'] = 'vector4', _0x5cc56b['Color'] = 'color', _0x5cc56b['Byte4'] = 'byte4', _0x5cc56b['Short2'] = 'short2', _0x5cc56b['Short4'] = 'short4', _0x5cc56b['Normalized' + 'Short2'] = 'normalized' + 'short2', _0x5cc56b['Normalized' + 'Short4'] = 'normalized' + 'short4', _0x5cc56b['HalfVector' + '2'] = 'halfvector' + '2', _0x5cc56b['HalfVector' + '4'] = 'halfvector' + '4';
    class _0x1634f4 {
        constructor(_0x4af41d = null) {
            this['_ownerReso' + 'urce'] = null, this['_data'] = null, this['_defineDat' + 'as'] = new _0x1445c0(), this['_runtimeCo' + 'pyValues'] = [], this['_ownerReso' + 'urce'] = _0x4af41d, this['_initData']();
        }
        ['_initData']() {
            this['_data'] = new Object();
        }
        ['getData']() {
            return this['_data'];
        }
        ['addDefine'](_0x432c90) {
            this['_defineDat' + 'as']['add'](_0x432c90);
        }
        ['removeDefi' + 'ne'](_0xec47e3) {
            this['_defineDat' + 'as']['remove'](_0xec47e3);
        }
        ['hasDefine'](_0x254fb) {
            return this['_defineDat' + 'as']['has'](_0x254fb);
        }
        ['clearDefin' + 'e']() {
            this['_defineDat' + 'as']['clear']();
        }
        ['getBool'](_0x4a65b3) {
            return this['_data'][_0x4a65b3];
        }
        ['setBool'](_0x2f555b, _0x40b752) {
            this['_data'][_0x2f555b] = _0x40b752;
        }
        ['getInt'](_0x503d93) {
            return this['_data'][_0x503d93];
        }
        ['setInt'](_0x2e17cd, _0x557445) {
            this['_data'][_0x2e17cd] = _0x557445;
        }
        ['getNumber'](_0x49d942) {
            return this['_data'][_0x49d942];
        }
        ['setNumber'](_0x4cb29d, _0x178c51) {
            this['_data'][_0x4cb29d] = _0x178c51;
        }
        ['getVector2'](_0x12de38) {
            return this['_data'][_0x12de38];
        }
        ['setVector2'](_0x4663ad, _0x2007fa) {
            this['_data'][_0x4663ad] = _0x2007fa;
        }
        ['getVector3'](_0xcb8ac9) {
            return this['_data'][_0xcb8ac9];
        }
        ['setVector3'](_0x1e6f99, _0x179a22) {
            this['_data'][_0x1e6f99] = _0x179a22;
        }
        ['getVector'](_0x407345) {
            return this['_data'][_0x407345];
        }
        ['setVector'](_0x52a297, _0x1ab097) {
            this['_data'][_0x52a297] = _0x1ab097;
        }
        ['getQuatern' + 'ion'](_0x56e5d2) {
            return this['_data'][_0x56e5d2];
        }
        ['setQuatern' + 'ion'](_0x5ec4ce, _0x34b2c5) {
            this['_data'][_0x5ec4ce] = _0x34b2c5;
        }
        ['getMatrix4' + 'x4'](_0xb780bb) {
            return this['_data'][_0xb780bb];
        }
        ['setMatrix4' + 'x4'](_0x4d86ad, _0x13a962) {
            this['_data'][_0x4d86ad] = _0x13a962;
        }
        ['getBuffer'](_0x3fdd4e) {
            return this['_data'][_0x3fdd4e];
        }
        ['setBuffer'](_0xc44c76, _0x4f46e1) {
            this['_data'][_0xc44c76] = _0x4f46e1;
        }
        ['setTexture'](_0x1d6691, _0x175ce0) {
            var _0x219d15 = this['_data'][_0x1d6691];
            this['_data'][_0x1d6691] = _0x175ce0, this['_ownerReso' + 'urce'] && this['_ownerReso' + 'urce']['referenceC' + 'ount'] > 0x0 && (_0x219d15 && _0x219d15['_removeRef' + 'erence'](), _0x175ce0 && _0x175ce0['_addRefere' + 'nce']());
        }
        ['getTexture'](_0x1dc75b) {
            return this['_data'][_0x1dc75b];
        }
        ['setAttribu' + 'te'](_0x42e184, _0xc3b800) {
            this['_data'][_0x42e184] = _0xc3b800;
        }
        ['getAttribu' + 'te'](_0x237b56) {
            return this['_data'][_0x237b56];
        }
        ['getLength']() {
            return this['_data']['length'];
        }
        ['setLength'](_0x2c56a4) {
            this['_data']['length'] = _0x2c56a4;
        }
        ['cloneTo'](_0x31dc6b) {
            var _0x16d398 = _0x31dc6b, _0x277069 = _0x16d398['_data'];
            for (var _0x4eaad9 in this['_data']) {
                var _0xb095eb = this['_data'][_0x4eaad9];
                if (_0xb095eb != null) {
                    if (typeof _0xb095eb == 'number')
                        _0x277069[_0x4eaad9] = _0xb095eb;
                    else {
                        if (typeof _0xb095eb == 'number')
                            _0x277069[_0x4eaad9] = _0xb095eb;
                        else {
                            if (typeof _0xb095eb == 'boolean')
                                _0x277069[_0x4eaad9] = _0xb095eb;
                            else {
                                if (_0xb095eb instanceof _0x378045) {
                                    var _0x165a77 = _0x277069[_0x4eaad9] || (_0x277069[_0x4eaad9] = new _0x378045());
                                    _0xb095eb['cloneTo'](_0x165a77), _0x277069[_0x4eaad9] = _0x165a77;
                                } else {
                                    if (_0xb095eb instanceof _0x352206) {
                                        var _0x1600c2 = _0x277069[_0x4eaad9] || (_0x277069[_0x4eaad9] = new _0x352206());
                                        _0xb095eb['cloneTo'](_0x1600c2), _0x277069[_0x4eaad9] = _0x1600c2;
                                    } else {
                                        if (_0xb095eb instanceof _0x18425e) {
                                            var _0x3a0adf = _0x277069[_0x4eaad9] || (_0x277069[_0x4eaad9] = new _0x18425e());
                                            _0xb095eb['cloneTo'](_0x3a0adf), _0x277069[_0x4eaad9] = _0x3a0adf;
                                        } else {
                                            if (_0xb095eb instanceof _0x4c2288) {
                                                var _0x2b8360 = _0x277069[_0x4eaad9] || (_0x277069[_0x4eaad9] = new _0x4c2288());
                                                _0xb095eb['cloneTo'](_0x2b8360), _0x277069[_0x4eaad9] = _0x2b8360;
                                            } else
                                                _0xb095eb instanceof _0x442335['BaseTextur' + 'e'] && (_0x277069[_0x4eaad9] = _0xb095eb);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDat' + 'as']['cloneTo'](_0x16d398['_defineDat' + 'as']);
        }
        ['clone']() {
            var _0x5772b5 = new _0x1634f4();
            return this['cloneTo'](_0x5772b5), _0x5772b5;
        }
        ['cloneToFor' + 'Native'](_0xf3451) {
            var _0xe00ac9 = _0xf3451, _0x380a05 = this['_int32Data']['length'] - _0xe00ac9['_int32Data']['length'];
            _0x380a05 > 0x0 && _0xe00ac9['needRenewA' + 'rrayBuffer' + 'ForNative'](this['_int32Data']['length']);
            _0xe00ac9['_int32Data']['set'](this['_int32Data'], 0x0);
            var _0x293671 = _0xe00ac9['_nativeArr' + 'ay'], _0x4f63b = this['_nativeArr' + 'ay']['length'];
            _0x293671['length'] = _0x4f63b;
            for (var _0x4d141d = 0x0; _0x4d141d < _0x4f63b; _0x4d141d++) {
                var _0x19c532 = this['_nativeArr' + 'ay'][_0x4d141d];
                if (_0x19c532) {
                    if (typeof _0x19c532 == 'number')
                        _0x293671[_0x4d141d] = _0x19c532, _0xe00ac9['setNumber'](_0x4d141d, _0x19c532);
                    else {
                        if (typeof _0x19c532 == 'number')
                            _0x293671[_0x4d141d] = _0x19c532, _0xe00ac9['setInt'](_0x4d141d, _0x19c532);
                        else {
                            if (typeof _0x19c532 == 'boolean')
                                _0x293671[_0x4d141d] = _0x19c532, _0xe00ac9['setBool'](_0x4d141d, _0x19c532);
                            else {
                                if (_0x19c532 instanceof _0x378045) {
                                    var _0x54d7ba = _0x293671[_0x4d141d] || (_0x293671[_0x4d141d] = new _0x378045());
                                    _0x19c532['cloneTo'](_0x54d7ba), _0x293671[_0x4d141d] = _0x54d7ba, _0xe00ac9['setVector2'](_0x4d141d, _0x54d7ba);
                                } else {
                                    if (_0x19c532 instanceof _0x352206) {
                                        var _0x5ae212 = _0x293671[_0x4d141d] || (_0x293671[_0x4d141d] = new _0x352206());
                                        _0x19c532['cloneTo'](_0x5ae212), _0x293671[_0x4d141d] = _0x5ae212, _0xe00ac9['setVector3'](_0x4d141d, _0x5ae212);
                                    } else {
                                        if (_0x19c532 instanceof _0x18425e) {
                                            var _0x2a3e31 = _0x293671[_0x4d141d] || (_0x293671[_0x4d141d] = new _0x18425e());
                                            _0x19c532['cloneTo'](_0x2a3e31), _0x293671[_0x4d141d] = _0x2a3e31, _0xe00ac9['setVector'](_0x4d141d, _0x2a3e31);
                                        } else {
                                            if (_0x19c532 instanceof _0x4c2288) {
                                                var _0x39a7c3 = _0x293671[_0x4d141d] || (_0x293671[_0x4d141d] = new _0x4c2288());
                                                _0x19c532['cloneTo'](_0x39a7c3), _0x293671[_0x4d141d] = _0x39a7c3, _0xe00ac9['setMatrix4' + 'x4'](_0x4d141d, _0x39a7c3);
                                            } else
                                                _0x19c532 instanceof _0x442335['BaseTextur' + 'e'] && (_0x293671[_0x4d141d] = _0x19c532, _0xe00ac9['setTexture'](_0x4d141d, _0x19c532));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDat' + 'as']['cloneTo'](_0xe00ac9['_defineDat' + 'as']);
        }
        ['_initDataF' + 'orNative']() {
            var _0x547adb = 0x8;
            this['_frameCoun' + 't'] = -0x1, this['_runtimeCo' + 'pyValues']['length'] = 0x0, this['_nativeArr' + 'ay'] = [], this['_data'] = new ArrayBuffer(_0x547adb * 0x4), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Da' + 'ta'] = new Float32Array(this['_data']), _0x442335['LayaGL']['instance']['createArra' + 'yBufferRef'](this['_data'], _0x442335['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !![]);
        }
        ['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x306524) {
            if (_0x306524 >= this['_int32Data']['length']) {
                var _0x287883 = (_0x306524 + 0x1) * 0x4, _0x42a85b = this['_int32Data'], _0x5cea11 = this['_data']['conchRef'], _0x4eded7 = this['_data']['_ptrID'];
                this['_data'] = new ArrayBuffer(_0x287883), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Da' + 'ta'] = new Float32Array(this['_data']), this['_data']['conchRef'] = _0x5cea11, this['_data']['_ptrID'] = _0x4eded7, _0x42a85b && this['_int32Data']['set'](_0x42a85b, 0x0);
                var _0x588a99 = _0x442335['LayaGL']['instance'];
                _0x588a99['updateArra' + 'yBufferRef'] ? _0x588a99['updateArra' + 'yBufferRef'](this['_data']['_ptrID'], _0x5cea11['isSyncToRe' + 'nder'](), this['_data']) : window['conch']['updateArra' + 'yBufferRef'](this['_data']['_ptrID'], _0x5cea11['isSyncToRe' + 'nder'](), this['_data']);
            }
        }
        ['getDataFor' + 'Native']() {
            return this['_nativeArr' + 'ay'];
        }
        ['getIntForN' + 'ative'](_0x1f67f9) {
            return this['_int32Data'][_0x1f67f9];
        }
        ['setIntForN' + 'ative'](_0x402d81, _0x39a6f8) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x402d81), this['_int32Data'][_0x402d81] = _0x39a6f8, this['_nativeArr' + 'ay'][_0x402d81] = _0x39a6f8;
        }
        ['getBoolFor' + 'Native'](_0x51a102) {
            return this['_int32Data'][_0x51a102] == 0x1;
        }
        ['setBoolFor' + 'Native'](_0x20d858, _0x2508a1) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x20d858), this['_int32Data'][_0x20d858] = _0x2508a1 ? 0x1 : 0x0, this['_nativeArr' + 'ay'][_0x20d858] = _0x2508a1;
        }
        ['getNumberF' + 'orNative'](_0x2f58f9) {
            return this['_float32Da' + 'ta'][_0x2f58f9];
        }
        ['setNumberF' + 'orNative'](_0x3ae442, _0x264fed) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x3ae442), this['_float32Da' + 'ta'][_0x3ae442] = _0x264fed, this['_nativeArr' + 'ay'][_0x3ae442] = _0x264fed;
        }
        ['getMatrix4' + 'x4ForNativ' + 'e'](_0x440b0e) {
            return this['_nativeArr' + 'ay'][_0x440b0e];
        }
        ['setMatrix4' + 'x4ForNativ' + 'e'](_0x2d3ac5, _0x492cfc) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x2d3ac5), this['_nativeArr' + 'ay'][_0x2d3ac5] = _0x492cfc;
            var _0x254f45 = this['setReferen' + 'ceForNativ' + 'e'](_0x492cfc['elements']);
            this['_int32Data'][_0x2d3ac5] = _0x254f45;
        }
        ['getVectorF' + 'orNative'](_0x5918b6) {
            return this['_nativeArr' + 'ay'][_0x5918b6];
        }
        ['setVectorF' + 'orNative'](_0x1ee2f4, _0x2d7d4d) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x1ee2f4), this['_nativeArr' + 'ay'][_0x1ee2f4] = _0x2d7d4d;
            !_0x2d7d4d['elements'] && _0x2d7d4d['forNativeE' + 'lement']();
            var _0x2399ac = this['setReferen' + 'ceForNativ' + 'e'](_0x2d7d4d['elements']);
            this['_int32Data'][_0x1ee2f4] = _0x2399ac;
        }
        ['getVector2' + 'ForNative'](_0x38e102) {
            return this['_nativeArr' + 'ay'][_0x38e102];
        }
        ['setVector2' + 'ForNative'](_0x3239cd, _0x5277e3) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x3239cd), this['_nativeArr' + 'ay'][_0x3239cd] = _0x5277e3;
            !_0x5277e3['elements'] && _0x5277e3['forNativeE' + 'lement']();
            var _0x1a82c1 = this['setReferen' + 'ceForNativ' + 'e'](_0x5277e3['elements']);
            this['_int32Data'][_0x3239cd] = _0x1a82c1;
        }
        ['getVector3' + 'ForNative'](_0xc218f0) {
            return this['_nativeArr' + 'ay'][_0xc218f0];
        }
        ['setVector3' + 'ForNative'](_0x363383, _0x3666f7) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x363383), this['_nativeArr' + 'ay'][_0x363383] = _0x3666f7;
            !_0x3666f7['elements'] && _0x3666f7['forNativeE' + 'lement']();
            var _0x227c0e = this['setReferen' + 'ceForNativ' + 'e'](_0x3666f7['elements']);
            this['_int32Data'][_0x363383] = _0x227c0e;
        }
        ['getQuatern' + 'ionForNati' + 've'](_0x4f363b) {
            return this['_nativeArr' + 'ay'][_0x4f363b];
        }
        ['setQuatern' + 'ionForNati' + 've'](_0x576052, _0x296e73) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x576052), this['_nativeArr' + 'ay'][_0x576052] = _0x296e73;
            !_0x296e73['elements'] && _0x296e73['forNativeE' + 'lement']();
            var _0x5da7f9 = this['setReferen' + 'ceForNativ' + 'e'](_0x296e73['elements']);
            this['_int32Data'][_0x576052] = _0x5da7f9;
        }
        ['getBufferF' + 'orNative'](_0x4a2de7) {
            return this['_nativeArr' + 'ay'][_0x4a2de7];
        }
        ['setBufferF' + 'orNative'](_0x35063c, _0x285991) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x35063c), this['_nativeArr' + 'ay'][_0x35063c] = _0x285991;
            var _0x15e8d7 = this['setReferen' + 'ceForNativ' + 'e'](_0x285991);
            this['_int32Data'][_0x35063c] = _0x15e8d7;
        }
        ['getAttribu' + 'teForNativ' + 'e'](_0x58b183) {
            return this['_nativeArr' + 'ay'][_0x58b183];
        }
        ['setAttribu' + 'teForNativ' + 'e'](_0x120b20, _0x3a02c7) {
            this['_nativeArr' + 'ay'][_0x120b20] = _0x3a02c7, !_0x3a02c7['_ptrID'] && _0x442335['LayaGL']['instance']['createArra' + 'yBufferRef'](_0x3a02c7, _0x442335['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !![]), _0x442335['LayaGL']['instance']['syncBuffer' + 'ToRenderTh' + 'read'](_0x3a02c7), this['_int32Data'][_0x120b20] = _0x3a02c7['_ptrID'];
        }
        ['getTexture' + 'ForNative'](_0x4c59ff) {
            return this['_nativeArr' + 'ay'][_0x4c59ff];
        }
        ['setTexture' + 'ForNative'](_0x3e8666, _0x1e76a6) {
            if (!_0x1e76a6)
                return;
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x3e8666);
            var _0x2d8713 = this['_nativeArr' + 'ay'][_0x3e8666];
            this['_nativeArr' + 'ay'][_0x3e8666] = _0x1e76a6;
            var _0x583a5e = _0x1e76a6['_getSource']() || _0x1e76a6['defaulteTe' + 'xture']['_getSource']();
            this['_int32Data'][_0x3e8666] = _0x583a5e['id'], this['_ownerReso' + 'urce'] && this['_ownerReso' + 'urce']['referenceC' + 'ount'] > 0x0 && (_0x2d8713 && _0x2d8713['_removeRef' + 'erence'](), _0x1e76a6 && _0x1e76a6['_addRefere' + 'nce']());
        }
        ['setReferen' + 'ceForNativ' + 'e'](_0x21aa22) {
            this['clearRunti' + 'meCopyArra' + 'y']();
            var _0x373686 = 0x0, _0x3d05a7 = 0x0;
            return _0x1634f4['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] ? (_0x442335['LayaGL']['instance']['createArra' + 'yBufferRef' + 's'](_0x21aa22, _0x442335['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !![], _0x442335['LayaGL']['ARRAY_BUFF' + 'ER_REF_REF' + 'ERENCE']), _0x373686 = 0x0, _0x3d05a7 = _0x21aa22['getPtrID'](_0x373686)) : (_0x442335['LayaGL']['instance']['createArra' + 'yBufferRef' + 's'](_0x21aa22, _0x442335['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !![], _0x442335['LayaGL']['ARRAY_BUFF' + 'ER_REF_COP' + 'Y']), _0x373686 = _0x21aa22['getRefNum']() - 0x1, _0x3d05a7 = _0x21aa22['getPtrID'](_0x373686), this['_runtimeCo' + 'pyValues']['push']({
                'obj': _0x21aa22,
                'refID': _0x373686,
                'ptrID': _0x3d05a7
            })), _0x442335['LayaGL']['instance']['syncBuffer' + 'ToRenderTh' + 'read'](_0x21aa22, _0x373686), _0x3d05a7;
        }
        static ['setRuntime' + 'ValueMode'](_0x4bab45) {
            _0x1634f4['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] = _0x4bab45;
        }
        ['clearRunti' + 'meCopyArra' + 'y']() {
            var _0x1d8987 = _0x442335['Stat']['loopCount'];
            if (this['_frameCoun' + 't'] != _0x1d8987) {
                this['_frameCoun' + 't'] = _0x1d8987;
                for (var _0x63783e = 0x0, _0x47768f = this['_runtimeCo' + 'pyValues']['length']; _0x63783e < _0x47768f; _0x63783e++) {
                    var _0x426e3f = this['_runtimeCo' + 'pyValues'][_0x63783e];
                    _0x426e3f['obj']['clearRefNu' + 'm']();
                }
                this['_runtimeCo' + 'pyValues']['length'] = 0x0;
            }
        }
    }
    _0x1634f4['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] = !![];
    class _0x19d0a5 {
        constructor(_0x377d46, _0x2f0ad6) {
            this['_id'] = ++_0x19d0a5['_uniqueIDC' + 'ounter'], this['_vertexEle' + 'mentsDic'] = {}, this['_vertexStr' + 'ide'] = _0x377d46, this['_vertexEle' + 'ments'] = _0x2f0ad6;
            var _0x531a11 = _0x2f0ad6['length'];
            this['_shaderVal' + 'ues'] = new _0x1634f4(null);
            for (var _0x28c550 = 0x0; _0x28c550 < _0x531a11; _0x28c550++) {
                var _0x12d492 = _0x2f0ad6[_0x28c550], _0x42df76 = _0x12d492['_elementUs' + 'age'];
                this['_vertexEle' + 'mentsDic'][_0x42df76] = _0x12d492;
                var _0x20856f = new Int32Array(0x5), _0x1a7a33 = _0x5cc56b['getElement' + 'Infos'](_0x12d492['_elementFo' + 'rmat']);
                _0x20856f[0x0] = _0x1a7a33[0x0], _0x20856f[0x1] = _0x1a7a33[0x1], _0x20856f[0x2] = _0x1a7a33[0x2], _0x20856f[0x3] = this['_vertexStr' + 'ide'], _0x20856f[0x4] = _0x12d492['_offset'], this['_shaderVal' + 'ues']['setAttribu' + 'te'](_0x42df76, _0x20856f);
            }
        }
        get ['id']() {
            return this['_id'];
        }
        get ['vertexStri' + 'de']() {
            return this['_vertexStr' + 'ide'];
        }
        get ['vertexElem' + 'entCount']() {
            return this['_vertexEle' + 'ments']['length'];
        }
        ['getVertexE' + 'lementByIn' + 'dex'](_0x38ea60) {
            return this['_vertexEle' + 'ments'][_0x38ea60];
        }
        ['getVertexE' + 'lementByUs' + 'age'](_0x5296d7) {
            return this['_vertexEle' + 'mentsDic'][_0x5296d7];
        }
    }
    _0x19d0a5['_uniqueIDC' + 'ounter'] = 0x1;
    class _0x549a90 {
        constructor(_0xff51d2, _0x365275, _0x17d139) {
            this['_offset'] = _0xff51d2, this['_elementFo' + 'rmat'] = _0x365275, this['_elementUs' + 'age'] = _0x17d139;
        }
        get ['offset']() {
            return this['_offset'];
        }
        get ['elementFor' + 'mat']() {
            return this['_elementFo' + 'rmat'];
        }
        get ['elementUsa' + 'ge']() {
            return this['_elementUs' + 'age'];
        }
    }
    class _0x2f0542 extends _0x442335['BufferStat' + 'eBase'] {
        constructor() {
            super();
        }
        ['applyVerte' + 'xBuffer'](_0x2569bb) {
            if (_0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] === this) {
                var _0xa9832 = _0x442335['LayaGL']['instance'], _0x321494 = _0x2569bb['vertexDecl' + 'aration'], _0x211151 = _0x321494['_shaderVal' + 'ues']['getData']();
                this['vertexDecl' + 'aration'] = _0x321494, _0x2569bb['bind']();
                for (var _0x3f528f in _0x211151) {
                    var _0x5da9e4 = parseInt(_0x3f528f), _0x3d2de3 = _0x211151[_0x3f528f];
                    _0xa9832['enableVert' + 'exAttribAr' + 'ray'](_0x5da9e4), _0xa9832['vertexAttr' + 'ibPointer'](_0x5da9e4, _0x3d2de3[0x0], _0x3d2de3[0x1], !!_0x3d2de3[0x2], _0x3d2de3[0x3], _0x3d2de3[0x4]);
                }
            } else
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
        }
        ['applyVerte' + 'xBuffers'](_0x549599) {
            if (_0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] === this) {
                var _0xb29717 = _0x442335['LayaGL']['instance'];
                for (var _0x540847 = 0x0, _0x171b81 = _0x549599['length']; _0x540847 < _0x171b81; _0x540847++) {
                    var _0x5d0e3f = _0x549599[_0x540847], _0x164b37 = _0x5d0e3f['vertexDecl' + 'aration'], _0x2e3045 = _0x164b37['_shaderVal' + 'ues']['getData']();
                    _0x5d0e3f['bind']();
                    for (var _0x297298 in _0x2e3045) {
                        var _0xea8933 = parseInt(_0x297298), _0x5dc859 = _0x2e3045[_0x297298];
                        _0xb29717['enableVert' + 'exAttribAr' + 'ray'](_0xea8933), _0xb29717['vertexAttr' + 'ibPointer'](_0xea8933, _0x5dc859[0x0], _0x5dc859[0x1], !!_0x5dc859[0x2], _0x5dc859[0x3], _0x5dc859[0x4]);
                    }
                }
            } else
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
        }
        ['applyInsta' + 'nceVertexB' + 'uffer'](_0x54537f) {
            if (_0x442335['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']()) {
                if (_0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] === this) {
                    var _0x5c058b = _0x442335['LayaGL']['instance'], _0x31538e = _0x54537f['vertexDecl' + 'aration'], _0x383d70 = _0x31538e['_shaderVal' + 'ues']['getData']();
                    _0x54537f['bind']();
                    for (var _0x331568 in _0x383d70) {
                        var _0x2ccd41 = parseInt(_0x331568), _0x4b4b15 = _0x383d70[_0x331568];
                        _0x5c058b['enableVert' + 'exAttribAr' + 'ray'](_0x2ccd41), _0x5c058b['vertexAttr' + 'ibPointer'](_0x2ccd41, _0x4b4b15[0x0], _0x4b4b15[0x1], !!_0x4b4b15[0x2], _0x4b4b15[0x3], _0x4b4b15[0x4]), _0x442335['LayaGL']['layaGPUIns' + 'tance']['vertexAttr' + 'ibDivisor'](_0x2ccd41, 0x1);
                    }
                } else
                    throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            }
        }
        ['applyIndex' + 'Buffer'](_0x485310) {
            if (_0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] === this)
                this['_bindedInd' + 'exBuffer'] !== _0x485310 && (_0x485310['_bindForVA' + 'O'](), this['_bindedInd' + 'exBuffer'] = _0x485310);
            else
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
        }
    }
    class _0x267d58 extends _0x442335['Resource'] {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x2f0542(), this['_bufferSta' + 'teInvertUV'] = new _0x2f0542();
            var _0x1a232d = _0x442335['LayaGL']['instance'];
            this['_vertexBuf' + 'fer'] = new _0x251441(0x10 * 0x4, _0x1a232d['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x267d58['_vertexDec' + 'laration'], this['_vertexBuf' + 'fer']['setData'](_0x267d58['_vertices']['buffer']), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind'](), this['_vertexBuf' + 'ferInvertU' + 'V'] = new _0x251441(0x10 * 0x4, _0x1a232d['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'ferInvertU' + 'V']['vertexDecl' + 'aration'] = _0x267d58['_vertexDec' + 'laration'], this['_vertexBuf' + 'ferInvertU' + 'V']['setData'](_0x267d58['_verticesI' + 'nvertUV']['buffer']), this['_bufferSta' + 'teInvertUV']['bind'](), this['_bufferSta' + 'teInvertUV']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'ferInvertU' + 'V']), this['_bufferSta' + 'teInvertUV']['unBind'](), this['_setGPUMem' + 'ory'](this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_vertexBuf' + 'ferInvertU' + 'V']['_byteLengt' + 'h']);
        }
        static ['__init__']() {
            _0x267d58['_vertexDec' + 'laration'] = new _0x19d0a5(0x10, [new _0x549a90(0x0, _0x5cc56b['Vector4'], _0x267d58['SCREENQUAD' + '_POSITION_' + 'UV'])]), _0x267d58['instance'] = new _0x267d58(), _0x267d58['instance']['lock'] = !![];
        }
        ['render']() {
            var _0x2ec933 = _0x442335['LayaGL']['instance'];
            this['_bufferSta' + 'te']['bind'](), _0x2ec933['drawArrays'](_0x2ec933['TRIANGLE_S' + 'TRIP'], 0x0, 0x4), _0x442335['Stat']['renderBatc' + 'hes']++;
        }
        ['renderInve' + 'rtUV']() {
            var _0x5a117c = _0x442335['LayaGL']['instance'];
            this['_bufferSta' + 'teInvertUV']['bind'](), _0x5a117c['drawArrays'](_0x5a117c['TRIANGLE_S' + 'TRIP'], 0x0, 0x4), _0x442335['Stat']['renderBatc' + 'hes']++;
        }
        ['destroy']() {
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'teInvertUV']['destroy'](), this['_vertexBuf' + 'ferInvertU' + 'V']['destroy'](), this['_setGPUMem' + 'ory'](0x0);
        }
    }
    _0x267d58['SCREENQUAD' + '_POSITION_' + 'UV'] = 0x0, _0x267d58['_vertices'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        -0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        -0x1,
        0x0,
        0x0
    ]), _0x267d58['_verticesI' + 'nvertUV'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        0x0,
        -0x1,
        -0x1,
        0x0,
        0x1
    ]);
    class _0x410733 extends _0x442335['Resource'] {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x2f0542(), this['_bufferSta' + 'teInvertUV'] = new _0x2f0542();
            var _0x496bf8 = _0x442335['LayaGL']['instance'];
            this['_vertexBuf' + 'fer'] = new _0x251441(0xc * 0x4, _0x496bf8['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x410733['_vertexDec' + 'laration'], this['_vertexBuf' + 'fer']['setData'](_0x410733['_vertices']['buffer']), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind'](), this['_vertexBuf' + 'ferInvertU' + 'V'] = new _0x251441(0xc * 0x4, _0x496bf8['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'ferInvertU' + 'V']['vertexDecl' + 'aration'] = _0x410733['_vertexDec' + 'laration'], this['_vertexBuf' + 'ferInvertU' + 'V']['setData'](_0x410733['_verticesI' + 'nvertUV']['buffer']), this['_bufferSta' + 'teInvertUV']['bind'](), this['_bufferSta' + 'teInvertUV']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'ferInvertU' + 'V']), this['_bufferSta' + 'teInvertUV']['unBind'](), this['_setGPUMem' + 'ory'](this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_vertexBuf' + 'ferInvertU' + 'V']['_byteLengt' + 'h']);
        }
        static ['__init__']() {
            _0x410733['_vertexDec' + 'laration'] = new _0x19d0a5(0x10, [new _0x549a90(0x0, _0x5cc56b['Vector4'], _0x410733['SCREENTRIA' + 'NGLE_POSIT' + 'ION_UV'])]), _0x410733['instance'] = new _0x410733(), _0x410733['instance']['lock'] = !![];
        }
        ['render']() {
            var _0x38a33f = _0x442335['LayaGL']['instance'];
            this['_bufferSta' + 'te']['bind'](), _0x38a33f['drawArrays'](_0x38a33f['TRIANGLES'], 0x0, 0x3), _0x442335['Stat']['renderBatc' + 'hes']++;
        }
        ['renderInve' + 'rtUV']() {
            var _0x301747 = _0x442335['LayaGL']['instance'];
            this['_bufferSta' + 'teInvertUV']['bind'](), _0x301747['drawArrays'](_0x301747['TRIANGLES'], 0x0, 0x3), _0x442335['Stat']['renderBatc' + 'hes']++;
        }
        ['destroy']() {
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'teInvertUV']['destroy'](), this['_vertexBuf' + 'ferInvertU' + 'V']['destroy'](), this['_setGPUMem' + 'ory'](0x0);
        }
    }
    _0x410733['SCREENTRIA' + 'NGLE_POSIT' + 'ION_UV'] = 0x0, _0x410733['_vertices'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x0,
        -0x1,
        0x3,
        0x0,
        0x2,
        0x3,
        -0x1,
        0x2,
        0x0
    ]), _0x410733['_verticesI' + 'nvertUV'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x1,
        -0x1,
        0x3,
        0x0,
        -0x1,
        0x3,
        -0x1,
        0x2,
        0x1
    ]);
    class _0x2d7ab8 {
        constructor(_0x40c8e8, _0x230ee9) {
            this['_index'] = _0x40c8e8, this['_value'] = _0x230ee9;
        }
    }
    class _0x2977cc {
        constructor(_0x2d28a0, _0x480f96, _0x9f05ee, _0x190410) {
            this['_subShader' + 'Index'] = 0x0, this['_passIndex'] = 0x0, this['setValue'](_0x2d28a0, _0x480f96, _0x9f05ee, _0x190410);
        }
        get ['shader']() {
            return this['_shader'];
        }
        get ['subShaderI' + 'ndex']() {
            return this['_subShader' + 'Index'];
        }
        get ['passIndex']() {
            return this['_passIndex'];
        }
        get ['defineName' + 's']() {
            return this['_defineNam' + 'es'];
        }
        ['setValue'](_0x194653, _0x4d9744, _0x1fbd0d, _0x2ea390) {
            if (_0x194653) {
                var _0x3aed14 = _0x194653['getSubShad' + 'erAt'](_0x4d9744);
                if (_0x3aed14) {
                    var _0x41632c = _0x3aed14['_passes'][_0x1fbd0d];
                    if (_0x41632c) {
                        var _0x3140e2 = _0x41632c['_validDefi' + 'ne'];
                        for (var _0x251dbd = 0x0, _0x564c5f = _0x2ea390['length']; _0x251dbd < _0x564c5f; _0x251dbd++) {
                            var _0x2e7a7b = _0x2ea390[_0x251dbd];
                            if (!_0x3140e2['has'](_0x207eb6['Shader3D']['getDefineB' + 'yName'](_0x2e7a7b)))
                                throw 'ShaderVari' + 'antInfo:In' + 'valid\x20defi' + 'neName\x20' + _0x2e7a7b + '\x20in\x20' + _0x194653['_name'] + ('\x20subShader' + 'Index\x20of\x20') + _0x4d9744 + ('\x20passIndex' + '\x20of\x20') + _0x1fbd0d + '.';
                        }
                    } else
                        throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20don\x27t' + '\x20have\x20pass' + 'Index\x20of\x20' + _0x1fbd0d + '.';
                } else
                    throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20don\x27t' + '\x20have\x20subS' + 'haderIndex' + '\x20of\x20' + _0x4d9744 + '.';
            } else
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20can\x27t' + '\x20be\x20null.';
            this['_shader'] = _0x194653, this['_subShader' + 'Index'] = _0x4d9744, this['_passIndex'] = _0x1fbd0d, this['_defineNam' + 'es'] = _0x2ea390;
        }
        ['equal'](_0x3df960) {
            if (this['_shader'] !== _0x3df960['_shader'] || this['_subShader' + 'Index'] !== _0x3df960['_subShader' + 'Index'] || this['_passIndex'] !== _0x3df960['_passIndex'])
                return ![];
            var _0x2c84f0 = this['_defineNam' + 'es'], _0x5ac7e8 = _0x3df960['_defineNam' + 'es'];
            if (_0x2c84f0['length'] !== _0x5ac7e8['length'])
                return ![];
            for (var _0x360f33 = 0x0, _0x33574c = this['_defineNam' + 'es']['length']; _0x360f33 < _0x33574c; _0x360f33++) {
                if (_0x2c84f0[_0x360f33] !== _0x5ac7e8[_0x360f33])
                    return ![];
            }
            return !![];
        }
        ['clone']() {
            var _0x2888eb = new _0x2977cc(this['_shader'], this['_subShader' + 'Index'], this['_passIndex'], this['_defineNam' + 'es']['slice']());
            return _0x2888eb;
        }
    }
    class _0x25d333 {
        constructor() {
            this['_allCompil' + 'ed'] = ![], this['_variants'] = [];
        }
        get ['allCompile' + 'd']() {
            return this['_allCompil' + 'ed'];
        }
        get ['variantCou' + 'nt']() {
            return this['_variants']['length'];
        }
        ['add'](_0x4d9d59) {
            for (var _0x497804 = 0x0, _0xa5bcb3 = this['_variants']['length']; _0x497804 < _0xa5bcb3; _0x497804++) {
                if (this['_variants'][_0x497804]['equal'](_0x4d9d59))
                    return ![];
            }
            return this['_variants']['push'](_0x4d9d59['clone']()), this['_allCompil' + 'ed'] = ![], !![];
        }
        ['remove'](_0x2e6c5c) {
            for (var _0x2ac363 = 0x0, _0x4c2ec4 = this['_variants']['length']; _0x2ac363 < _0x4c2ec4; _0x2ac363++) {
                if (this['_variants'][_0x2ac363]['equal'](_0x2e6c5c))
                    return this['_variants']['splice'](_0x2ac363, 0x1), !![];
            }
            return ![];
        }
        ['contatins'](_0x411777) {
            for (var _0x3f243e = 0x0, _0x73bde8 = this['_variants']['length']; _0x3f243e < _0x73bde8; _0x3f243e++) {
                if (this['_variants'][_0x3f243e]['equal'](_0x411777))
                    return !![];
            }
            return ![];
        }
        ['getByIndex'](_0x438eaf) {
            return this['_variants'][_0x438eaf];
        }
        ['clear']() {
            this['_variants']['length'] = 0x0;
        }
        ['compile']() {
            if (!this['_allCompil' + 'ed']) {
                var _0x4a4cf3 = this['_variants'];
                for (var _0x44e918 = 0x0, _0x7535ad = _0x4a4cf3['length']; _0x44e918 < _0x7535ad; _0x44e918++) {
                    var _0x4f30d6 = _0x4a4cf3[_0x44e918];
                    _0x207eb6['Shader3D']['compileSha' + 'derByDefin' + 'eNames'](_0x4f30d6['_shader']['_name'], _0x4f30d6['_subShader' + 'Index'], _0x4f30d6['_passIndex'], _0x4f30d6['_defineNam' + 'es']);
                }
                this['_allCompil' + 'ed'] = !![];
            }
        }
    }
    class _0x18824e {
        constructor(_0x57392f, _0x174f22, _0x317f70, _0x52e976, _0x46885c) {
            this['_attribute' + 'Map'] = null, this['_uniformMa' + 'p'] = null, this['_enableIns' + 'tancing'] = ![], this['_supportRe' + 'flectionPr' + 'obe'] = ![], this['_subShader' + 's'] = [], this['_name'] = _0x57392f, this['_attribute' + 'Map'] = _0x174f22, this['_uniformMa' + 'p'] = _0x317f70, this['_enableIns' + 'tancing'] = _0x52e976, this['_supportRe' + 'flectionPr' + 'obe'] = _0x46885c;
        }
        static ['_getNamesB' + 'yDefineDat' + 'a'](_0x12414c, _0x55b120) {
            var _0x32da66 = _0x18824e['_maskMap'], _0xd50db4 = _0x12414c['_mask'];
            _0x55b120['length'] = 0x0;
            for (var _0x591d2f = 0x0, _0x3e19c6 = _0x12414c['_length']; _0x591d2f < _0x3e19c6; _0x591d2f++) {
                var _0x276b5b = _0x32da66[_0x591d2f], _0x1729a0 = _0xd50db4[_0x591d2f];
                for (var _0x43f462 = 0x0; _0x43f462 < 0x20; _0x43f462++) {
                    var _0x1f8d60 = 0x1 << _0x43f462;
                    if (_0x1729a0 > 0x0 && _0x1f8d60 > _0x1729a0)
                        break;
                    if (_0x1729a0 & _0x1f8d60)
                        _0x55b120['push'](_0x276b5b[_0x1f8d60]);
                }
            }
        }
        static ['getDefineB' + 'yName'](_0x4edf4b) {
            var _0x407f0b = _0x18824e['_defineMap'][_0x4edf4b];
            if (!_0x407f0b) {
                var _0x513dc2 = _0x18824e['_maskMap'], _0x130451 = _0x18824e['_defineCou' + 'nter'], _0x409ddc = Math['floor'](_0x130451 / 0x20), _0x42b35d = 0x1 << _0x130451 % 0x20;
                _0x407f0b = new _0x2d7ab8(_0x409ddc, _0x42b35d), _0x18824e['_defineMap'][_0x4edf4b] = _0x407f0b, _0x409ddc == _0x513dc2['length'] && (_0x513dc2['length']++, _0x513dc2[_0x409ddc] = {}), _0x513dc2[_0x409ddc][_0x42b35d] = _0x4edf4b, _0x18824e['_defineCou' + 'nter']++;
            }
            return _0x407f0b;
        }
        static ['propertyNa' + 'meToID'](_0x2b3a89) {
            if (_0x18824e['_propertyN' + 'ameMap'][_0x2b3a89] != null)
                return _0x18824e['_propertyN' + 'ameMap'][_0x2b3a89];
            else {
                var _0x12dab6 = _0x18824e['_propertyN' + 'ameCounter']++;
                return _0x18824e['_propertyN' + 'ameMap'][_0x2b3a89] = _0x12dab6, _0x12dab6;
            }
        }
        static ['getAttribu' + 'teMapByDef' + 'ine'](_0x180e91, _0x2d9eeb) {
            var _0x2105f9 = {};
            for (var _0x3d97a6 in _0x2d9eeb) {
                _0x2105f9[_0x3d97a6] = _0x2d9eeb[_0x3d97a6];
            }
            for (var _0x3fb862 = 0x0, _0x5e68a3 = _0x180e91['length']; _0x3fb862 < _0x5e68a3; _0x3fb862++) {
                var _0x4ed5d6 = _0x180e91[_0x3fb862];
                switch (_0x4ed5d6) {
                case 'SIMPLEBONE':
                    _0x2d9eeb['a_Texcoord' + '1'] && (_0x2105f9['a_SimpleTe' + 'xtureParam' + 's'] = _0x2d9eeb['a_Texcoord' + '1'], delete _0x2105f9['a_Texcoord' + '1']);
                    _0x2105f9['a_SimpleTe' + 'xtureParam' + 's'] = 0x7;
                    break;
                }
            }
            return _0x2105f9;
        }
        static ['addInclude'](_0x5d3161, _0x489259) {
            _0x489259 = _0x489259['replace'](_0x442335['ShaderComp' + 'ile']['_clearCR'], ''), _0x442335['ShaderComp' + 'ile']['addInclude'](_0x5d3161, _0x489259);
        }
        static ['compileSha' + 'derByDefin' + 'eNames'](_0x43af64, _0x1d8b5b, _0x1eb6da, _0x1f8c61) {
            var _0x3fe077 = _0x18824e['find'](_0x43af64);
            if (_0x3fe077) {
                var _0x529bc1 = _0x3fe077['getSubShad' + 'erAt'](_0x1d8b5b);
                if (_0x529bc1) {
                    var _0x48b17f = _0x529bc1['_passes'][_0x1eb6da];
                    if (_0x48b17f) {
                        var _0x4d6007 = _0x18824e['_compileDe' + 'fineDatas'];
                        _0x4d6007['clear']();
                        for (var _0x7512ca = 0x0, _0x54015a = _0x1f8c61['length']; _0x7512ca < _0x54015a; _0x7512ca++)
                            _0x4d6007['add'](_0x18824e['getDefineB' + 'yName'](_0x1f8c61[_0x7512ca]));
                        _0x48b17f['withCompil' + 'e'](_0x4d6007);
                    } else
                        console['warn']('Shader3D:\x20' + 'unknown\x20pa' + 'ssIndex.');
                } else
                    console['warn']('Shader3D:\x20' + 'unknown\x20su' + 'bShaderInd' + 'ex.');
            } else
                console['warn']('Shader3D:\x20' + 'unknown\x20sh' + 'ader\x20name.');
        }
        static ['add'](_0x11c067, _0x4e9c2d = null, _0x78c465 = null, _0x3b440e = ![], _0x50f3d6 = ![]) {
            return _0x18824e['_preCompil' + 'eShader'][_0x11c067] = new _0x18824e(_0x11c067, _0x4e9c2d, _0x78c465, _0x3b440e, _0x50f3d6);
        }
        static ['find'](_0x44f159) {
            return _0x18824e['_preCompil' + 'eShader'][_0x44f159];
        }
        get ['name']() {
            return this['_name'];
        }
        ['addSubShad' + 'er'](_0x3589f9) {
            this['_subShader' + 's']['push'](_0x3589f9), _0x3589f9['_owner'] = this;
        }
        ['getSubShad' + 'erAt'](_0x37c445) {
            return this['_subShader' + 's'][_0x37c445];
        }
        static ['compileSha' + 'der'](_0x4effce, _0x478922, _0x341945, ..._0x52c197) {
            var _0x45b0d1 = _0x18824e['find'](_0x4effce);
            if (_0x45b0d1) {
                var _0x4f3a18 = _0x45b0d1['getSubShad' + 'erAt'](_0x478922);
                if (_0x4f3a18) {
                    var _0x4b92c8 = _0x4f3a18['_passes'][_0x341945];
                    if (_0x4b92c8) {
                        var _0xd85b0b = _0x18824e['_compileDe' + 'fineDatas'], _0x1a0bb8 = _0xd85b0b['_mask'];
                        _0x1a0bb8['length'] = 0x0;
                        for (var _0x48a27f = 0x0, _0x9cbb3 = _0x52c197['length']; _0x48a27f < _0x9cbb3; _0x48a27f++)
                            _0x1a0bb8['push'](_0x52c197[_0x48a27f]);
                        _0xd85b0b['_length'] = _0x52c197['length'], _0x4b92c8['withCompil' + 'e'](_0xd85b0b);
                    } else
                        console['warn']('Shader3D:\x20' + 'unknown\x20pa' + 'ssIndex.');
                } else
                    console['warn']('Shader3D:\x20' + 'unknown\x20su' + 'bShaderInd' + 'ex.');
            } else
                console['warn']('Shader3D:\x20' + 'unknown\x20sh' + 'ader\x20name.');
        }
    }
    _0x18824e['_compileDe' + 'fineDatas'] = new _0x1445c0(), _0x18824e['RENDER_STA' + 'TE_CULL'] = 0x0, _0x18824e['RENDER_STA' + 'TE_BLEND'] = 0x1, _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'] = 0x2, _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'] = 0x3, _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC_RGB'] = 0x4, _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST_RGB'] = 0x5, _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC_ALPHA'] = 0x6, _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST_ALPHA'] = 0x7, _0x18824e['RENDER_STA' + 'TE_BLEND_C' + 'ONST_COLOR'] = 0x8, _0x18824e['RENDER_STA' + 'TE_BLEND_E' + 'QUATION'] = 0x9, _0x18824e['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_RG' + 'B'] = 0xa, _0x18824e['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_AL' + 'PHA'] = 0xb, _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'] = 0xc, _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE'] = 0xd, _0x18824e['PERIOD_CUS' + 'TOM'] = 0x0, _0x18824e['PERIOD_MAT' + 'ERIAL'] = 0x1, _0x18824e['PERIOD_SPR' + 'ITE'] = 0x2, _0x18824e['PERIOD_CAM' + 'ERA'] = 0x3, _0x18824e['PERIOD_SCE' + 'NE'] = 0x4, _0x18824e['_propertyN' + 'ameCounter'] = 0x0, _0x18824e['_propertyN' + 'ameMap'] = {}, _0x18824e['_defineCou' + 'nter'] = 0x0, _0x18824e['_defineMap'] = {}, _0x18824e['_preCompil' + 'eShader'] = {}, _0x18824e['_maskMap'] = [], _0x18824e['debugMode'] = ![], _0x18824e['debugShade' + 'rVariantCo' + 'llection'] = new _0x25d333();
    class _0xf86ce5 {
        constructor() {
            this['_commandBu' + 'ffer'] = null;
        }
        static ['__init__']() {
            _0xf86ce5['_screenSha' + 'derData'] = new _0x1634f4(), _0xf86ce5['_screenSha' + 'der'] = _0x18824e['find']('BlitScreen');
        }
        ['run']() {
        }
        ['recover']() {
            this['_commandBu' + 'ffer'] = null;
        }
        ['setContext'](_0x5d7a63) {
            this['_context'] = _0x5d7a63;
        }
    }
    _0xf86ce5['SCREENTEXT' + 'URE_NAME'] = 'u_MainTex', _0xf86ce5['SCREENTEXT' + 'UREOFFSETS' + 'CALE_NAME'] = 'u_OffsetSc' + 'ale', _0xf86ce5['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_NAME'] = 'u_MainTex_' + 'TexelSize', _0xf86ce5['SCREENTEXT' + 'URE_ID'] = _0x18824e['propertyNa' + 'meToID'](_0xf86ce5['SCREENTEXT' + 'URE_NAME']), _0xf86ce5['SCREENTEXT' + 'UREOFFSETS' + 'CALE_ID'] = _0x18824e['propertyNa' + 'meToID'](_0xf86ce5['SCREENTEXT' + 'UREOFFSETS' + 'CALE_NAME']), _0xf86ce5['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_ID'] = _0x18824e['propertyNa' + 'meToID'](_0xf86ce5['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_NAME']);
    class _0x477064 extends _0xf86ce5 {
        constructor() {
            super(...arguments), this['_source'] = null, this['_dest'] = null, this['_offsetSca' + 'le'] = null, this['_shader'] = null, this['_shaderDat' + 'a'] = null, this['_subShader'] = 0x0, this['_sourceTex' + 'elSize'] = new _0x18425e(), this['_screenTyp' + 'e'] = 0x0, this['_drawDefin' + 'eCavans'] = ![];
        }
        static ['create'](_0x50ab17, _0x3ed60f, _0xebba9a = null, _0x293741 = null, _0x131fc2 = null, _0x52e9d0 = 0x0, _0x360f34 = _0x477064['_SCREENTYP' + 'E_QUAD'], _0x24719e = null, _0x3d49bd = ![]) {
            var _0x58c7ae;
            return _0x58c7ae = _0x477064['_pool']['length'] > 0x0 ? _0x477064['_pool']['pop']() : new _0x477064(), _0x58c7ae['_source'] = _0x50ab17, _0x58c7ae['_dest'] = _0x3ed60f, _0x58c7ae['_offsetSca' + 'le'] = _0xebba9a, _0x58c7ae['_shader'] = _0x293741, _0x58c7ae['_shaderDat' + 'a'] = _0x131fc2, _0x58c7ae['_subShader'] = _0x52e9d0, _0x58c7ae['_screenTyp' + 'e'] = _0x360f34, _0x58c7ae['_commandBu' + 'ffer'] = _0x24719e, _0x58c7ae['_drawDefin' + 'eCavans'] = _0x3d49bd, _0x58c7ae;
        }
        ['run']() {
            var _0x154d1a;
            if (!this['_source']) {
                if (!this['_commandBu' + 'ffer']['_camera']['_internalR' + 'enderTextu' + 're'])
                    throw 'camera\x20int' + 'ernalRende' + 'rTexture\x20i' + 's\x20null,ple' + 'ase\x20set\x20ca' + 'mera\x20enabl' + 'eBuiltInRe' + 'nderTextur' + 'e';
                _0x154d1a = this['_commandBu' + 'ffer']['_camera']['_internalR' + 'enderTextu' + 're'];
            } else
                _0x154d1a = this['_source'];
            var _0x4d3149 = this['_shader'] || _0xf86ce5['_screenSha' + 'der'], _0xb60faa = this['_shaderDat' + 'a'] || _0xf86ce5['_screenSha' + 'derData'], _0x5f1518 = this['_dest'] ? this['_dest'] : this['_drawDefin' + 'eCavans'] ? this['_dest'] : this['_commandBu' + 'ffer']['_camera']['_internalR' + 'enderTextu' + 're'];
            _0x442335['LayaGL']['instance']['viewport'](0x0, 0x0, _0x5f1518 ? _0x5f1518['width'] : _0x514492['clientWidt' + 'h'], _0x5f1518 ? _0x5f1518['height'] : _0x514492['clientHeig' + 'ht']), _0xb60faa['setTexture'](_0xf86ce5['SCREENTEXT' + 'URE_ID'], _0x154d1a), _0xb60faa['setVector'](_0xf86ce5['SCREENTEXT' + 'UREOFFSETS' + 'CALE_ID'], this['_offsetSca' + 'le'] || _0x477064['_defaultOf' + 'fsetScale']), this['_sourceTex' + 'elSize']['setValue'](0x1 / _0x154d1a['width'], 0x1 / _0x154d1a['height'], _0x154d1a['width'], _0x154d1a['height']), _0xb60faa['setVector'](_0xf86ce5['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_ID'], this['_sourceTex' + 'elSize']), _0x40e7a5['currentAct' + 'ive'] && _0x40e7a5['currentAct' + 'ive']['_end'](), _0x5f1518 && _0x5f1518['_start']();
            var _0x4bfb28 = _0x4d3149['getSubShad' + 'erAt'](this['_subShader']), _0x101c0f = _0x4bfb28['_passes'];
            for (var _0x2545fa = 0x0, _0xf6e51e = _0x101c0f['length']; _0x2545fa < _0xf6e51e; _0x2545fa++) {
                var _0xc42014 = _0x477064['_compileDe' + 'fine'];
                _0xb60faa['_defineDat' + 'as']['cloneTo'](_0xc42014);
                var _0x5ef61e = _0x101c0f[_0x2545fa]['withCompil' + 'e'](_0xc42014);
                _0x5ef61e['bind'](), _0x5ef61e['uploadUnif' + 'orms'](_0x5ef61e['_materialU' + 'niformPara' + 'msMap'], _0xb60faa, !![]), _0x5ef61e['uploadRend' + 'erStateBle' + 'ndDepth'](_0xb60faa), _0x5ef61e['uploadRend' + 'erStateFro' + 'ntFace'](_0xb60faa, ![], null);
                switch (this['_screenTyp' + 'e']) {
                case _0x477064['_SCREENTYP' + 'E_QUAD']:
                    _0x514492['_instance']['invertY'] ? _0x267d58['instance']['renderInve' + 'rtUV']() : _0x267d58['instance']['render']();
                    break;
                case _0x477064['_SCREENTYP' + 'E_TRIANGLE']:
                    _0x514492['_instance']['invertY'] ? _0x410733['instance']['renderInve' + 'rtUV']() : _0x410733['instance']['render']();
                    break;
                default:
                    throw 'BlitScreen' + 'QuadCMD:un' + 'known\x20scre' + 'en\x20Type.';
                }
            }
            _0x5f1518 && _0x5f1518['_end']();
        }
        ['recover']() {
            _0x477064['_pool']['push'](this), this['_source'] = null, this['_dest'] = null, this['_offsetSca' + 'le'] = null, this['_shader'] = null, this['_shaderDat' + 'a'] = null, this['_drawDefin' + 'eCavans'] = ![], super['recover']();
        }
    }
    _0x477064['_SCREENTYP' + 'E_QUAD'] = 0x0, _0x477064['_SCREENTYP' + 'E_TRIANGLE'] = 0x1, _0x477064['_compileDe' + 'fine'] = new _0x1445c0(), _0x477064['_pool'] = [], _0x477064['_defaultOf' + 'fsetScale'] = new _0x18425e(0x0, 0x0, 0x1, 0x1);
    class _0x2f3393 extends _0xf86ce5 {
        constructor() {
            super(...arguments), this['_renderTex' + 'ture'] = null;
        }
        static ['create'](_0xc7f31a) {
            var _0xd5827a;
            return _0xd5827a = _0x2f3393['_pool']['length'] > 0x0 ? _0x2f3393['_pool']['pop']() : new _0x2f3393(), _0xd5827a['_renderTex' + 'ture'] = _0xc7f31a, _0xd5827a;
        }
        ['run']() {
            _0x40e7a5['currentAct' + 'ive'] && _0x40e7a5['currentAct' + 'ive']['_end'](), _0x442335['LayaGL']['instance']['viewport'](0x0, 0x0, this['_renderTex' + 'ture']['width'], this['_renderTex' + 'ture']['height']), this['_renderTex' + 'ture']['_start']();
        }
        ['recover']() {
            _0x2f3393['_pool']['push'](this), this['_renderTex' + 'ture'] = null;
        }
    }
    _0x2f3393['_pool'] = [], function (_0x173daf) {
        _0x173daf[_0x173daf['Int'] = 0x0] = 'Int', _0x173daf[_0x173daf['Bool'] = 0x1] = 'Bool', _0x173daf[_0x173daf['Number'] = 0x2] = 'Number', _0x173daf[_0x173daf['Vector2'] = 0x3] = 'Vector2', _0x173daf[_0x173daf['Vector3'] = 0x4] = 'Vector3', _0x173daf[_0x173daf['Vector'] = 0x5] = 'Vector', _0x173daf[_0x173daf['Quaternion'] = 0x6] = 'Quaternion', _0x173daf[_0x173daf['Matrix4x4'] = 0x7] = 'Matrix4x4', _0x173daf[_0x173daf['Buffer'] = 0x8] = 'Buffer', _0x173daf[_0x173daf['Texture'] = 0x9] = 'Texture';
    }(_0x1f405c['ShaderData' + 'Type'] || (_0x1f405c['ShaderData' + 'Type'] = {}));
    class _0x26bf81 extends _0xf86ce5 {
        constructor() {
            super(...arguments), this['_shaderDat' + 'a'] = null, this['_nameID'] = 0x0, this['_value'] = null, this['_dataType'] = -0x1;
        }
        static ['create'](_0x2ed528, _0x1c8df8, _0x2fb5c4, _0x4c0684, _0x4acd82) {
            var _0x3f0912;
            return _0x3f0912 = _0x26bf81['_pool']['length'] > 0x0 ? _0x26bf81['_pool']['pop']() : new _0x26bf81(), _0x3f0912['_shaderDat' + 'a'] = _0x2ed528, _0x3f0912['_nameID'] = _0x1c8df8, _0x3f0912['_value'] = _0x2fb5c4, _0x3f0912['_dataType'] = _0x4c0684, _0x3f0912['_commandBu' + 'ffer'] = _0x4acd82, _0x3f0912;
        }
        ['run']() {
            switch (this['_dataType']) {
            case _0x1f405c['ShaderData' + 'Type']['Int']:
                this['_shaderDat' + 'a']['setInt'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Number']:
                this['_shaderDat' + 'a']['setNumber'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Bool']:
                this['_shaderDat' + 'a']['setBool'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Matrix4x4']:
                this['_shaderDat' + 'a']['setMatrix4' + 'x4'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Quaternion']:
                this['_shaderDat' + 'a']['setQuatern' + 'ion'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Texture']:
                this['_shaderDat' + 'a']['setTexture'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector']:
                this['_shaderDat' + 'a']['setVector'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector2']:
                this['_shaderDat' + 'a']['setVector2'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector3']:
                this['_shaderDat' + 'a']['setVector3'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Buffer']:
                this['_shaderDat' + 'a']['setBuffer'](this['_nameID'], this['_value']);
                break;
            default:
                throw 'no\x20type\x20sh' + 'aderValue\x20' + 'on\x20this\x20Co' + 'mmendBuffe' + 'r';
            }
        }
        ['recover']() {
            _0x26bf81['_pool']['push'](this), this['_shaderDat' + 'a'] = null, this['_nameID'] = 0x0, this['_value'] = null, this['_dataType'] = -0x1;
        }
    }
    _0x26bf81['_pool'] = [];
    class _0x49f2b6 extends _0x442335['Node'] {
        constructor(_0x1bc918 = null, _0x4a7ca9 = ![]) {
            super(), this['_needProce' + 'ssCollisio' + 'ns'] = ![], this['_needProce' + 'ssTriggers'] = ![], this['_id'] = ++_0x49f2b6['_uniqueIDC' + 'ounter'], this['_transform'] = new _0x203c65(this), this['_isStatic'] = _0x4a7ca9, this['layer'] = 0x0, this['name'] = _0x1bc918 ? _0x1bc918 : 'New\x20Sprite' + '3D';
        }
        static ['__init__']() {
        }
        static ['instantiat' + 'e'](_0x1300c4, _0x3676d1 = null, _0x1e0438 = !![], _0xae7dc3 = null, _0x47e5c2 = null) {
            var _0x289e87 = _0x1300c4['clone']();
            _0x3676d1 && _0x3676d1['addChild'](_0x289e87);
            var _0x47ad35 = _0x289e87['transform'];
            if (_0x1e0438) {
                var _0x6c3e01 = _0x47ad35['worldMatri' + 'x'];
                _0x1300c4['transform']['worldMatri' + 'x']['cloneTo'](_0x6c3e01), _0x47ad35['worldMatri' + 'x'] = _0x6c3e01;
            } else
                _0xae7dc3 && (_0x47ad35['position'] = _0xae7dc3), _0x47e5c2 && (_0x47ad35['rotation'] = _0x47e5c2);
            return _0x289e87;
        }
        static ['load'](_0x20ebef, _0x9e55cb) {
            _0x442335['Laya']['loader']['create'](_0x20ebef, _0x9e55cb, null, _0x49f2b6['HIERARCHY']);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['layer']() {
            return this['_layer'];
        }
        set ['layer'](_0x41776b) {
            if (this['_layer'] !== _0x41776b) {
                if (_0x41776b >= 0x0 && _0x41776b <= 0x1e)
                    this['_layer'] = _0x41776b;
                else
                    throw new Error('Layer\x20valu' + 'e\x20must\x20be\x20' + '0-30.');
            }
        }
        get ['url']() {
            return this['_url'];
        }
        get ['isStatic']() {
            return this['_isStatic'];
        }
        get ['transform']() {
            return this['_transform'];
        }
        ['_setCreate' + 'URL'](_0x443aad) {
            this['_url'] = _0x442335['URL']['formatURL'](_0x443aad);
        }
        ['_changeAni' + 'matorsToLi' + 'nkSprite3D'](_0x52ba46, _0x4dfc41, _0x343bed) {
            var _0x1e1917 = this['getCompone' + 'nt'](_0x331cef);
            if (_0x1e1917) {
                if (!_0x1e1917['avatar'])
                    _0x52ba46['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0x1e1917, _0x4dfc41, _0x343bed);
            }
            if (this['_parent'] && this['_parent'] instanceof _0x49f2b6) {
                _0x343bed['unshift'](this['_parent']['name']);
                var _0x45b938 = this['_parent'];
                _0x45b938['_hierarchy' + 'Animator'] && _0x45b938['_changeAni' + 'matorsToLi' + 'nkSprite3D'](_0x52ba46, _0x4dfc41, _0x343bed);
            }
        }
        ['_setHierar' + 'chyAnimato' + 'r'](_0x2ba502, _0x3336f9) {
            this['_changeHie' + 'rarchyAnim' + 'ator'](_0x2ba502), this['_changeAni' + 'matorAvata' + 'r'](_0x2ba502['avatar']);
            for (var _0x5affac = 0x0, _0xf1a3c1 = this['_children']['length']; _0x5affac < _0xf1a3c1; _0x5affac++) {
                var _0x500b7d = this['_children'][_0x5affac];
                _0x500b7d['_hierarchy' + 'Animator'] == _0x3336f9 && _0x500b7d['_setHierar' + 'chyAnimato' + 'r'](_0x2ba502, _0x3336f9);
            }
        }
        ['_clearHier' + 'archyAnima' + 'tor'](_0x25fcd1, _0x4b9258) {
            this['_changeHie' + 'rarchyAnim' + 'ator'](_0x4b9258), this['_changeAni' + 'matorAvata' + 'r'](_0x4b9258 ? _0x4b9258['avatar'] : null);
            for (var _0x173668 = 0x0, _0x2361dd = this['_children']['length']; _0x173668 < _0x2361dd; _0x173668++) {
                var _0x3a9d8d = this['_children'][_0x173668];
                _0x3a9d8d['_hierarchy' + 'Animator'] == _0x25fcd1 && _0x3a9d8d['_clearHier' + 'archyAnima' + 'tor'](_0x25fcd1, _0x4b9258);
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'atorAvatar'](_0x2dd581, _0x2089f1) {
            this['_changeAni' + 'matorAvata' + 'r'](_0x2089f1);
            for (var _0x1e6164 = 0x0, _0x3c9277 = this['_children']['length']; _0x1e6164 < _0x3c9277; _0x1e6164++) {
                var _0x320703 = this['_children'][_0x1e6164];
                _0x320703['_hierarchy' + 'Animator'] == _0x2dd581 && _0x320703['_changeHie' + 'rarchyAnim' + 'atorAvatar'](_0x2dd581, _0x2089f1);
            }
        }
        ['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0xbeff7e, _0x34e6a2, _0xa17975) {
            _0xbeff7e['_handleSpr' + 'iteOwnersB' + 'ySprite'](_0x34e6a2, _0xa17975, this);
            for (var _0x4bb8f0 = 0x0, _0x14c1b6 = this['_children']['length']; _0x4bb8f0 < _0x14c1b6; _0x4bb8f0++) {
                var _0x41ea72 = this['_children'][_0x4bb8f0], _0x6edfb2 = _0xa17975['length'];
                _0xa17975['push'](_0x41ea72['name']), _0x41ea72['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0xbeff7e, _0x34e6a2, _0xa17975), _0xa17975['splice'](_0x6edfb2, 0x1);
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x4a1cb3) {
            this['_hierarchy' + 'Animator'] = _0x4a1cb3;
        }
        ['_changeAni' + 'matorAvata' + 'r'](_0x539bdd) {
        }
        ['_onAdded']() {
            if (this['_parent'] instanceof _0x49f2b6) {
                var _0x2fac4f = this['_parent'];
                this['transform']['_setParent'](_0x2fac4f['transform']), _0x2fac4f['_hierarchy' + 'Animator'] && (!this['_hierarchy' + 'Animator'] && this['_setHierar' + 'chyAnimato' + 'r'](_0x2fac4f['_hierarchy' + 'Animator'], null), _0x2fac4f['_changeAni' + 'matorsToLi' + 'nkSprite3D'](this, !![], [this['name']]));
            }
            super['_onAdded']();
        }
        ['_onRemoved']() {
            super['_onRemoved']();
            if (this['_parent'] instanceof _0x49f2b6) {
                var _0x505c47 = this['_parent'];
                this['transform']['_setParent'](null), _0x505c47['_hierarchy' + 'Animator'] && (this['_hierarchy' + 'Animator'] == _0x505c47['_hierarchy' + 'Animator'] && this['_clearHier' + 'archyAnima' + 'tor'](_0x505c47['_hierarchy' + 'Animator'], null), _0x505c47['_changeAni' + 'matorsToLi' + 'nkSprite3D'](this, ![], [this['name']]));
            }
        }
        ['_parse'](_0x5e8299, _0x424b77) {
            _0x5e8299['isStatic'] !== undefined && (this['_isStatic'] = _0x5e8299['isStatic']), _0x5e8299['active'] !== undefined && (this['active'] = _0x5e8299['active']), _0x5e8299['name'] != undefined && (this['name'] = _0x5e8299['name']);
            if (_0x5e8299['position'] !== undefined) {
                var _0x202d00 = this['transform']['localPosit' + 'ion'];
                _0x202d00['fromArray'](_0x5e8299['position']), this['transform']['localPosit' + 'ion'] = _0x202d00;
            }
            if (_0x5e8299['rotationEu' + 'ler'] !== undefined) {
                var _0x5257d6 = this['transform']['localRotat' + 'ionEuler'];
                _0x5257d6['fromArray'](_0x5e8299['rotationEu' + 'ler']), this['transform']['localRotat' + 'ionEuler'] = _0x5257d6;
            }
            if (_0x5e8299['rotation'] !== undefined) {
                var _0x8065cc = this['transform']['localRotat' + 'ion'];
                _0x8065cc['fromArray'](_0x5e8299['rotation']), this['transform']['localRotat' + 'ion'] = _0x8065cc;
            }
            if (_0x5e8299['scale'] !== undefined) {
                var _0x5a035d = this['transform']['localScale'];
                _0x5a035d['fromArray'](_0x5e8299['scale']), this['transform']['localScale'] = _0x5a035d;
            }
            _0x5e8299['layer'] != undefined && (this['layer'] = _0x5e8299['layer']);
        }
        ['_cloneTo'](_0x406473, _0x3fc9a7, _0x2d4d5f) {
            if (this['destroyed'])
                throw new Error('Sprite3D:\x20' + 'Can\x27t\x20be\x20c' + 'loned\x20if\x20t' + 'he\x20Sprite3' + 'D\x20has\x20dest' + 'royed.');
            var _0x428551 = _0x406473, _0x31cf7a = this['_transform'], _0x504dd7 = _0x428551['_transform'];
            _0x428551['name'] = this['name'], _0x428551['destroyed'] = this['destroyed'], _0x428551['active'] = this['active'], _0x504dd7['localPosit' + 'ion'] = _0x31cf7a['localPosit' + 'ion'], _0x504dd7['localRotat' + 'ion'] = _0x31cf7a['localRotat' + 'ion'], _0x504dd7['localScale'] = _0x31cf7a['localScale'], _0x428551['_isStatic'] = this['_isStatic'], _0x428551['layer'] = this['layer'], super['_cloneTo'](_0x428551, _0x3fc9a7, _0x2d4d5f);
        }
        static ['_createSpr' + 'ite3DInsta' + 'nce'](_0x2aa12d) {
            var _0x41df05 = _0x2aa12d['_create'](), _0x596e42 = _0x2aa12d['_children'];
            for (var _0x258f01 = 0x0, _0x1734da = _0x596e42['length']; _0x258f01 < _0x1734da; _0x258f01++) {
                var _0x14e2a9 = _0x49f2b6['_createSpr' + 'ite3DInsta' + 'nce'](_0x596e42[_0x258f01]);
                _0x41df05['addChild'](_0x14e2a9);
            }
            return _0x41df05;
        }
        static ['_parseSpri' + 'te3DInstan' + 'ce'](_0x42ebba, _0x375cb5, _0x3be830, _0x4d6df9) {
            var _0x3f8cba = _0x3be830['_children'], _0x2decd2 = _0x4d6df9['_children'];
            for (var _0x5698e3 = 0x0, _0x204f66 = _0x3f8cba['length']; _0x5698e3 < _0x204f66; _0x5698e3++)
                _0x49f2b6['_parseSpri' + 'te3DInstan' + 'ce'](_0x42ebba, _0x375cb5, _0x3f8cba[_0x5698e3], _0x2decd2[_0x5698e3]);
            _0x3be830['_cloneTo'](_0x4d6df9, _0x42ebba, _0x375cb5);
        }
        ['clone']() {
            var _0x7835ba = _0x49f2b6['_createSpr' + 'ite3DInsta' + 'nce'](this);
            return _0x49f2b6['_parseSpri' + 'te3DInstan' + 'ce'](this, _0x7835ba, this, _0x7835ba), _0x7835ba;
        }
        ['destroy'](_0x3ecd34 = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x3ecd34), this['_transform'] = null, this['_scripts'] = null, this['_url'] && _0x442335['Loader']['clearRes'](this['_url']);
        }
        ['_create']() {
            return new _0x49f2b6();
        }
    }
    _0x49f2b6['HIERARCHY'] = 'HIERARCHY', _0x49f2b6['WORLDMATRI' + 'X'] = _0x18824e['propertyNa' + 'meToID']('u_WorldMat'), _0x49f2b6['MVPMATRIX'] = _0x18824e['propertyNa' + 'meToID']('u_MvpMatri' + 'x'), _0x49f2b6['_uniqueIDC' + 'ounter'] = 0x0;
    class _0xc20e76 extends _0xf86ce5 {
        constructor() {
            super(), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x4c2288(), this['_renderSha' + 'derValue'] = new _0x1634f4(), this['_renderSha' + 'derValue'] = new _0x1634f4(null);
        }
        static ['create'](_0x55eb25, _0x4d613f, _0x44a2ac, _0x5ecb0d, _0x32fdda, _0xf4d19b) {
            var _0x4b792d;
            return _0x4b792d = _0xc20e76['_pool']['length'] > 0x0 ? _0xc20e76['_pool']['pop']() : new _0xc20e76(), _0x4b792d['_mesh'] = _0x55eb25, _0x4b792d['_matrix'] = _0x4d613f, _0x4b792d['_material'] = _0x44a2ac, _0x4b792d['_subMeshIn' + 'dex'] = _0x5ecb0d, _0x4b792d['_subShader' + 'Index'] = _0x32fdda, _0x4b792d['_commandBu' + 'ffer'] = _0xf4d19b, _0x4b792d;
        }
        ['run']() {
            var _0x2806bf = this['_material']['_shader']['getSubShad' + 'erAt'](this['_subShader' + 'Index']);
            this['setContext'](this['_commandBu' + 'ffer']['_context']);
            var _0x52a439 = this['_context'], _0x3be8e2 = _0x52a439['invertY'], _0x3586db = _0x52a439['scene'], _0x46d3c0 = _0x52a439['cameraShad' + 'erValue'], _0x5f0cea = _0x52a439['projection' + 'ViewMatrix'];
            _0x4c2288['multiply'](_0x5f0cea, this['_matrix'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_renderSha' + 'derValue']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], this['_matrix']), this['_renderSha' + 'derValue']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
            var _0x2d43d9 = _0x52a439['pipelineMo' + 'de'], _0x16f3f8 = _0x2806bf['_passes'];
            for (var _0x5d2016 = 0x0, _0xb2d6d1 = _0x16f3f8['length']; _0x5d2016 < _0xb2d6d1; _0x5d2016++) {
                var _0x2329c6 = _0x16f3f8[_0x5d2016];
                if (_0x2329c6['_pipelineM' + 'ode'] !== _0x2d43d9)
                    continue;
                var _0x4c8c7b = _0xc20e76['_compileDe' + 'fine'];
                _0x3586db['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x4c8c7b), _0x4c8c7b['addDefineD' + 'atas'](this['_renderSha' + 'derValue']['_defineDat' + 'as']), _0x4c8c7b['addDefineD' + 'atas'](this['_material']['_shaderVal' + 'ues']['_defineDat' + 'as']);
                var _0x1f6649 = _0x52a439['shader'] = _0x2329c6['withCompil' + 'e'](_0x4c8c7b), _0xfb8eb7 = _0x1f6649['bind']();
                _0x1f6649['uploadUnif' + 'orms'](_0x1f6649['_sceneUnif' + 'ormParamsM' + 'ap'], _0x3586db['_shaderVal' + 'ues'], !![]), _0x1f6649['uploadUnif' + 'orms'](_0x1f6649['_spriteUni' + 'formParams' + 'Map'], this['_renderSha' + 'derValue'], !![]), _0x1f6649['uploadUnif' + 'orms'](_0x1f6649['_cameraUni' + 'formParams' + 'Map'], _0x46d3c0, !![]);
                var _0x2d8e5c = this['_material']['_shaderVal' + 'ues'];
                _0x1f6649['uploadUnif' + 'orms'](_0x1f6649['_materialU' + 'niformPara' + 'msMap'], _0x2d8e5c, !![]), _0x1f6649['uploadRend' + 'erStateBle' + 'ndDepth'](_0x2d8e5c), _0x1f6649['uploadRend' + 'erStateFro' + 'ntFace'](_0x2d8e5c, _0x3be8e2, this['_matrix']['getInvertF' + 'ront']());
            }
            var _0x3e5336 = this['_mesh']['_subMeshes'], _0x25ef78;
            if (this['_subMeshIn' + 'dex'] == -0x1)
                for (var _0x3e0b63 = 0x0, _0x1d3833 = _0x3e5336['length']; _0x3e0b63 < _0x1d3833; _0x3e0b63++) {
                    _0x25ef78 = _0x3e5336[_0x3e0b63], _0x25ef78['_prepareRe' + 'nder'](_0x52a439) && _0x25ef78['_render'](_0x52a439);
                }
            else {
                var _0x3e5336 = this['_mesh']['_subMeshes'];
                _0x25ef78 = _0x3e5336[this['_subMeshIn' + 'dex']], _0x25ef78['_prepareRe' + 'nder'](_0x52a439) && _0x25ef78['_render'](_0x52a439);
            }
        }
        ['recover']() {
            _0xc20e76['_pool']['push'](this), this['_renderSha' + 'derValue']['clearDefin' + 'e'](), this['_renderSha' + 'derValue']['_initData']();
        }
    }
    _0xc20e76['_pool'] = [], _0xc20e76['_compileDe' + 'fine'] = new _0x1445c0();
    class _0x56b135 extends _0xf86ce5 {
        constructor() {
            super(...arguments), this['_clearColo' + 'r'] = ![], this['_clearDept' + 'h'] = ![], this['_backgroun' + 'dColor'] = new _0x18425e(), this['_depth'] = 0x1;
        }
        static ['create'](_0x47a98f, _0x2fea1e, _0x5a245a, _0x1ac514 = 0x1, _0x22fc6a) {
            var _0x3ed1e9;
            return _0x3ed1e9 = _0x56b135['_pool']['length'] > 0x0 ? _0x56b135['_pool']['pop']() : new _0x56b135(), _0x3ed1e9['_clearColo' + 'r'] = _0x47a98f, _0x3ed1e9['_clearDept' + 'h'] = _0x2fea1e, _0x5a245a['cloneTo'](_0x3ed1e9['_backgroun' + 'dColor']), _0x3ed1e9['_depth'] = _0x1ac514, _0x3ed1e9['_commandBu' + 'ffer'] = _0x22fc6a, _0x3ed1e9;
        }
        ['run']() {
            var _0x1ab0d1 = _0x442335['LayaGL']['instance'], _0x3c0092, _0x571d64 = this['_backgroun' + 'dColor'];
            this['_clearColo' + 'r'] && (_0x1ab0d1['clearColor'](_0x571d64['x'], _0x571d64['y'], _0x571d64['z'], _0x571d64['w']), _0x3c0092 |= _0x1ab0d1['COLOR_BUFF' + 'ER_BIT']), this['_clearDept' + 'h'] && (_0x1ab0d1['clearDepth'](this['_depth']), _0x3c0092 |= _0x1ab0d1['DEPTH_BUFF' + 'ER_BIT']), (this['_clearColo' + 'r'] || this['_clearDept' + 'h']) && _0x1ab0d1['clear'](_0x3c0092);
        }
        ['recover']() {
        }
    }
    _0x56b135['_pool'] = [];
    class _0x1e83b9 {
    }
    class _0x1125c0 {
        constructor() {
            this['updateMark'] = -0x1, this['pointLight' + 'Count'] = 0x0, this['spotLightC' + 'ount'] = 0x0, this['indices'] = [];
        }
    }
    class _0x1f70a4 {
        constructor(_0x5aac78, _0x2274e9, _0x1ead9f, _0x13b7f2) {
            this['_updateMar' + 'k'] = 0x0, this['_depthSlic' + 'eParam'] = new _0x378045(), this['_xSlices'] = _0x5aac78, this['_ySlices'] = _0x2274e9, this['_zSlices'] = _0x1ead9f;
            var _0x189c45 = _0x5aac78 * _0x2274e9, _0x12e352 = _0x1ead9f * (0x1 + Math['ceil'](_0x13b7f2 / 0x4));
            this['_clusterTe' + 'xture'] = _0x47bed9['_createFlo' + 'atTextureB' + 'uffer'](_0x189c45, _0x12e352), this['_clusterTe' + 'xture']['lock'] = !![], this['_clusterPi' + 'xels'] = new Float32Array(_0x189c45 * _0x12e352 * 0x4);
            var _0x435d48 = new Array(this['_zSlices']);
            for (var _0x5661bc = 0x0; _0x5661bc < this['_zSlices']; _0x5661bc++) {
                _0x435d48[_0x5661bc] = new Array(this['_ySlices']);
                for (var _0x52be75 = 0x0; _0x52be75 < this['_ySlices']; _0x52be75++) {
                    _0x435d48[_0x5661bc][_0x52be75] = new Array(this['_xSlices']);
                    for (var _0x3d466a = 0x0; _0x3d466a < this['_xSlices']; _0x3d466a++)
                        _0x435d48[_0x5661bc][_0x52be75][_0x3d466a] = new _0x1125c0();
                }
            }
            this['_clusterDa' + 'tas'] = _0x435d48;
        }
        ['_insertSpo' + 'tLightSphe' + 're'](_0x23678e, _0x515b90, _0x111a34, _0x16a964, _0x50aaac) {
            var _0x56e77a = _0x1f70a4['_tempVecto' + 'r35'];
            _0x56e77a['x'] = _0x50aaac['x'] - _0x23678e['x'], _0x56e77a['y'] = _0x50aaac['y'] - _0x23678e['y'], _0x56e77a['z'] = _0x50aaac['z'] - _0x23678e['z'];
            var _0x54087d = _0x352206['dot'](_0x56e77a, _0x56e77a), _0x1cf123 = _0x50aaac['w'], _0x5971a4 = _0x54087d > _0x1cf123 * _0x1cf123;
            if (!_0x5971a4)
                return ![];
            var _0x540d06 = _0x352206['dot'](_0x56e77a, _0x515b90), _0x2c34d9 = Math['cos'](_0x16a964) * Math['sqrt'](_0x54087d - _0x540d06 * _0x540d06) - _0x540d06 * Math['sin'](_0x16a964), _0x452d73 = _0x2c34d9 > _0x1cf123, _0x2c61a9 = _0x540d06 > _0x1cf123 + _0x111a34, _0x3821d4 = _0x540d06 < -_0x1cf123;
            return !(_0x452d73 || _0x2c61a9 || _0x3821d4);
        }
        ['_placePoin' + 'tLightToCl' + 'usters'](_0x29cee1, _0x3e3675) {
            var _0x5aec95 = this['_clusterDa' + 'tas'], _0x55f0e6 = this['_updateMar' + 'k'];
            for (var _0x50f855 = _0x3e3675['zMin'], _0x486540 = _0x3e3675['zMax']; _0x50f855 < _0x486540; _0x50f855++) {
                for (var _0x3d453b = _0x3e3675['yMin'], _0x19c87e = _0x3e3675['yMax']; _0x3d453b < _0x19c87e; _0x3d453b++) {
                    for (var _0x48916e = _0x3e3675['xMin'], _0xfbf5b7 = _0x3e3675['xMax']; _0x48916e < _0xfbf5b7; _0x48916e++) {
                        var _0x3ed619 = _0x5aec95[_0x50f855][_0x3d453b][_0x48916e];
                        _0x3ed619['updateMark'] != _0x55f0e6 && (_0x3ed619['pointLight' + 'Count'] = 0x0, _0x3ed619['spotLightC' + 'ount'] = 0x0, _0x3ed619['updateMark'] = _0x55f0e6);
                        var _0x35c8e8 = _0x3ed619['indices'], _0x2565f0 = _0x3ed619['pointLight' + 'Count']++;
                        if (_0x2565f0 < _0x35c8e8['length'])
                            _0x35c8e8[_0x2565f0] = _0x29cee1;
                        else
                            _0x35c8e8['push'](_0x29cee1);
                    }
                }
            }
        }
        ['_placeSpot' + 'LightToClu' + 'sters'](_0x284914, _0x4c1186) {
            var _0x124f0e = this['_clusterDa' + 'tas'], _0x3af759 = this['_updateMar' + 'k'];
            for (var _0x1f8fe9 = _0x4c1186['zMin'], _0x1940a7 = _0x4c1186['zMax']; _0x1f8fe9 < _0x1940a7; _0x1f8fe9++) {
                for (var _0x2418c1 = _0x4c1186['yMin'], _0x27519e = _0x4c1186['yMax']; _0x2418c1 < _0x27519e; _0x2418c1++) {
                    for (var _0x5be9de = _0x4c1186['xMin'], _0x4a4333 = _0x4c1186['xMax']; _0x5be9de < _0x4a4333; _0x5be9de++) {
                        var _0x3518d8 = _0x124f0e[_0x1f8fe9][_0x2418c1][_0x5be9de];
                        _0x3518d8['updateMark'] != _0x3af759 && (_0x3518d8['pointLight' + 'Count'] = 0x0, _0x3518d8['spotLightC' + 'ount'] = 0x0, _0x3518d8['updateMark'] = _0x3af759);
                        var _0x4279b2 = _0x3518d8['indices'], _0x27e036 = _0x3518d8['pointLight' + 'Count'] + _0x3518d8['spotLightC' + 'ount']++;
                        if (_0x27e036 < _0x4279b2['length'])
                            _0x4279b2[_0x27e036] = _0x284914;
                        else
                            _0x4279b2['push'](_0x284914);
                    }
                }
            }
        }
        ['_insertCon' + 'ePlane'](_0x1f711f, _0xe48745, _0x3321ad, _0x361afe, _0x309c47) {
            var _0x4259ee = _0x1f70a4['_tempVecto' + 'r36'], _0x1c4588 = _0x1f70a4['_tempVecto' + 'r37'];
            _0x352206['cross'](_0x309c47, _0xe48745, _0x4259ee), _0x352206['cross'](_0x4259ee, _0xe48745, _0x1c4588), _0x352206['normalize'](_0x1c4588, _0x1c4588);
            var _0x29ef51 = _0x3321ad * Math['tan'](_0x361afe), _0x5a1d40 = _0x1f711f['x'] + _0x3321ad * _0xe48745['x'] + _0x29ef51 * _0x1c4588['x'], _0x1d1b9d = _0x1f711f['y'] + _0x3321ad * _0xe48745['y'] + _0x29ef51 * _0x1c4588['y'], _0x57e266 = _0x1f711f['z'] + _0x3321ad * _0xe48745['z'] + _0x29ef51 * _0x1c4588['z'];
            return _0x5a1d40 * _0x309c47['x'] + _0x1d1b9d * _0x309c47['y'] + _0x57e266 * _0x309c47['z'] <= 0x0 || _0x1f711f['x'] * _0x309c47['x'] + _0x1f711f['y'] * _0x309c47['y'] + _0x1f711f['z'] * _0x309c47['z'] <= 0x0;
        }
        ['_shrinkSph' + 'ereLightZP' + 'erspective'](_0x43c9d2, _0x22f1ce, _0x5cc2a4, _0x397b4e, _0x854d8e) {
            var _0x533a31 = _0x5cc2a4['z'], _0x4cfe07 = _0x533a31 - _0x397b4e, _0x25f269 = _0x533a31 + _0x397b4e;
            if (_0x4cfe07 > _0x22f1ce || _0x25f269 <= _0x43c9d2)
                return ![];
            var _0x3eb2f8 = this['_depthSlic' + 'eParam'];
            return _0x854d8e['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x4cfe07, _0x43c9d2)) * _0x3eb2f8['x'] - _0x3eb2f8['y']), _0x854d8e['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x25f269) * _0x3eb2f8['x'] - _0x3eb2f8['y']), this['_zSlices']), !![];
        }
        ['_shrinkSpo' + 'tLightZPer' + 'spective'](_0x2989be, _0x1cb916, _0x45660d, _0x309ee0, _0x20b84f, _0x2b3e04, _0xbf2380) {
            var _0x2e5fe1 = _0x309ee0['x'], _0xd4bab6 = _0x309ee0['y'], _0x5b92c3 = _0x309ee0['z'], _0x5baa1c = Math['tan'](_0x2b3e04) * _0x20b84f, _0x512885 = _0x45660d['x'], _0xaaffa6 = _0x45660d['y'], _0x17555a = _0x45660d['z'], _0x4fb79b = _0x2e5fe1 - _0x512885, _0x36c527 = _0xd4bab6 - _0xaaffa6, _0x168e3a = _0x5b92c3 - _0x17555a, _0x5717db = _0x4fb79b * _0x4fb79b + _0x36c527 * _0x36c527 + _0x168e3a * _0x168e3a, _0x49956c = Math['sqrt'](0x1 - _0x168e3a * _0x168e3a / _0x5717db), _0x363df9 = Math['max'](Math['min'](_0x17555a, _0x5b92c3 - _0x49956c * _0x5baa1c), _0x45660d['z'] - _0x20b84f), _0x432f7c = Math['min'](Math['max'](_0x17555a, _0x5b92c3 + _0x49956c * _0x5baa1c), _0x45660d['z'] + _0x20b84f);
            if (_0x363df9 > _0x1cb916 || _0x432f7c <= _0x2989be)
                return ![];
            var _0x1696ad = this['_depthSlic' + 'eParam'];
            return _0xbf2380['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x363df9, _0x2989be)) * _0x1696ad['x'] - _0x1696ad['y']), _0xbf2380['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x432f7c) * _0x1696ad['x'] - _0x1696ad['y']), this['_zSlices']), !![];
        }
        ['_shrinkSph' + 'ereLightBy' + 'BoundOrth'](_0x26882f, _0x2c34ba, _0xfa1fd1, _0x4d7947, _0x3071e2, _0x5e60ac, _0xdd4eed) {
            var _0x381179 = _0x3071e2['z'], _0x210014 = _0x381179 - _0x5e60ac, _0x59c31f = _0x381179 + _0x5e60ac;
            if (_0x210014 > _0x4d7947 || _0x59c31f <= _0xfa1fd1)
                return ![];
            var _0x1284e4 = _0x3071e2['x'], _0x17a6b7 = _0x1284e4 - _0x5e60ac, _0x41a786 = _0x1284e4 + _0x5e60ac;
            if (_0x17a6b7 > _0x26882f || _0x41a786 <= -_0x26882f)
                return ![];
            var _0x4ebb5f = _0x3071e2['y'], _0x50b3ef = _0x4ebb5f - _0x5e60ac, _0x517fd8 = _0x4ebb5f + _0x5e60ac;
            if (_0x50b3ef > _0x2c34ba || _0x517fd8 <= -_0x2c34ba)
                return ![];
            var _0x22ed59 = this['_xSlices'], _0xd32791 = this['_ySlices'], _0x1cb11a = this['_depthSlic' + 'eParam'], _0x3b7572 = _0x26882f * 0x2 / _0x22ed59, _0x5e387a = _0x2c34ba * 0x2 / _0xd32791;
            return _0xdd4eed['xMin'] = Math['max'](Math['floor']((_0x17a6b7 + _0x26882f) / _0x3b7572), 0x0), _0xdd4eed['xMax'] = Math['min'](Math['ceil']((_0x41a786 + _0x26882f) / _0x3b7572), _0x22ed59), _0xdd4eed['yMin'] = Math['max'](Math['floor']((_0x2c34ba - _0x517fd8) / _0x5e387a), 0x0), _0xdd4eed['yMax'] = Math['min'](Math['ceil']((_0x2c34ba - _0x50b3ef) / _0x5e387a), _0xd32791), _0xdd4eed['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x210014, _0xfa1fd1)) * _0x1cb11a['x'] - _0x1cb11a['y']), _0xdd4eed['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x59c31f) * _0x1cb11a['x'] - _0x1cb11a['y']), this['_zSlices']), !![];
        }
        ['_shrinkSpo' + 'tLightByBo' + 'undOrth'](_0x359482, _0x5cbde5, _0x547c6f, _0x1dd035, _0x25b8a7, _0x268cc6, _0x4eff2b, _0x46fcc5, _0x5caa1a) {
            var _0x3d6fc1 = _0x268cc6['x'], _0x15d658 = _0x268cc6['y'], _0x191cf3 = _0x268cc6['z'], _0x289d8f = Math['tan'](_0x46fcc5) * _0x4eff2b, _0x346a1d = _0x25b8a7['x'], _0x572672 = _0x25b8a7['y'], _0x1a49bf = _0x25b8a7['z'], _0x5ac98e = _0x3d6fc1 - _0x346a1d, _0x421c9b = _0x15d658 - _0x572672, _0xefc626 = _0x191cf3 - _0x1a49bf, _0x4db12f = _0x5ac98e * _0x5ac98e + _0x421c9b * _0x421c9b + _0xefc626 * _0xefc626, _0x32a6d7 = Math['sqrt'](0x1 - _0xefc626 * _0xefc626 / _0x4db12f), _0x60c4da = Math['max'](Math['min'](_0x1a49bf, _0x191cf3 - _0x32a6d7 * _0x289d8f), _0x25b8a7['z'] - _0x4eff2b), _0x311da7 = Math['min'](Math['max'](_0x1a49bf, _0x191cf3 + _0x32a6d7 * _0x289d8f), _0x25b8a7['z'] + _0x4eff2b);
            if (_0x60c4da > _0x1dd035 || _0x311da7 <= _0x547c6f)
                return ![];
            var _0x3dad18 = Math['sqrt'](0x1 - _0x5ac98e * _0x5ac98e / _0x4db12f), _0x1b0ab2 = Math['max'](Math['min'](_0x346a1d, _0x3d6fc1 - _0x3dad18 * _0x289d8f), _0x25b8a7['x'] - _0x4eff2b), _0xa4dc1c = Math['min'](Math['max'](_0x346a1d, _0x3d6fc1 + _0x3dad18 * _0x289d8f), _0x25b8a7['x'] + _0x4eff2b);
            if (_0x1b0ab2 > _0x359482 || _0xa4dc1c <= -_0x359482)
                return ![];
            var _0x2a9876 = Math['sqrt'](0x1 - _0x421c9b * _0x421c9b / _0x4db12f), _0x2e7a0c = Math['max'](Math['min'](_0x572672, _0x15d658 - _0x2a9876 * _0x289d8f), _0x25b8a7['y'] - _0x4eff2b), _0x1e77dd = Math['min'](Math['max'](_0x572672, _0x15d658 + _0x2a9876 * _0x289d8f), _0x25b8a7['y'] + _0x4eff2b);
            if (_0x2e7a0c > _0x5cbde5 || _0x1e77dd <= -_0x5cbde5)
                return ![];
            var _0x1713af = this['_xSlices'], _0x2b359b = this['_ySlices'], _0x849ad9 = this['_depthSlic' + 'eParam'], _0x143e96 = _0x359482 * 0x2 / _0x1713af, _0x762ba1 = _0x5cbde5 * 0x2 / _0x2b359b;
            return _0x5caa1a['xMin'] = Math['max'](Math['floor']((_0x1b0ab2 + _0x359482) / _0x143e96), 0x0), _0x5caa1a['xMax'] = Math['min'](Math['ceil']((_0xa4dc1c + _0x359482) / _0x143e96), _0x1713af), _0x5caa1a['yMin'] = Math['max'](Math['floor']((_0x5cbde5 - _0x1e77dd) / _0x762ba1), 0x0), _0x5caa1a['yMax'] = Math['min'](Math['ceil']((_0x5cbde5 - _0x2e7a0c) / _0x762ba1), _0x2b359b), _0x5caa1a['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x60c4da, _0x547c6f)) * _0x849ad9['x'] - _0x849ad9['y']), _0x5caa1a['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x311da7) * _0x849ad9['x'] - _0x849ad9['y']), this['_zSlices']), !![];
        }
        ['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x2a8d94, _0x3bd0e7, _0x267fa0, _0x2ac373, _0x3d18da) {
            var _0x5bd09c, _0x1ea248, _0xfe5763, _0x4cefb3, _0x259cb3 = _0x2a8d94['x'], _0x58bc37 = _0x2a8d94['y'], _0xd54680 = _0x2a8d94['z'], _0x203148, _0x57cc10 = this['_ySlices'] + 0x1;
            for (_0x203148 = 0x0; _0x203148 < _0x57cc10; _0x203148++) {
                var _0x2e86c1 = _0x3d18da[_0x203148];
                if (_0x58bc37 * _0x2e86c1['y'] + _0xd54680 * _0x2e86c1['z'] < _0x3bd0e7) {
                    _0x1ea248 = Math['max'](0x0, _0x203148 - 0x1);
                    break;
                }
            }
            if (_0x203148 == _0x57cc10)
                return ![];
            _0x4cefb3 = this['_ySlices'];
            for (_0x203148 = _0x1ea248 + 0x1; _0x203148 < _0x57cc10; _0x203148++) {
                var _0x2e86c1 = _0x3d18da[_0x203148];
                if (_0x58bc37 * _0x2e86c1['y'] + _0xd54680 * _0x2e86c1['z'] <= -_0x3bd0e7) {
                    _0x4cefb3 = Math['max'](0x0, _0x203148);
                    break;
                }
            }
            _0x57cc10 = this['_xSlices'] + 0x1;
            for (_0x203148 = 0x0; _0x203148 < _0x57cc10; _0x203148++) {
                var _0x2e86c1 = _0x2ac373[_0x203148];
                if (_0x259cb3 * _0x2e86c1['x'] + _0xd54680 * _0x2e86c1['z'] < _0x3bd0e7) {
                    _0x5bd09c = Math['max'](0x0, _0x203148 - 0x1);
                    break;
                }
            }
            _0xfe5763 = this['_xSlices'];
            for (_0x203148 = _0x5bd09c + 0x1; _0x203148 < _0x57cc10; _0x203148++) {
                var _0x2e86c1 = _0x2ac373[_0x203148];
                if (_0x259cb3 * _0x2e86c1['x'] + _0xd54680 * _0x2e86c1['z'] <= -_0x3bd0e7) {
                    _0xfe5763 = Math['max'](0x0, _0x203148);
                    break;
                }
            }
            return _0x267fa0['xMin'] = _0x5bd09c, _0x267fa0['xMax'] = _0xfe5763, _0x267fa0['yMin'] = _0x1ea248, _0x267fa0['yMax'] = _0x4cefb3, !![];
        }
        ['_shrinkSpo' + 'tXYByConeP' + 'erspective'](_0x267b4b, _0x24e839, _0xb45adc, _0x383458, _0x46611b, _0x46119c, _0xefa9ca) {
            var _0x589d51, _0x25354b, _0xdaf5f8, _0x508947, _0x59971e = _0x1f70a4['_tempVecto' + 'r32'], _0x44dd08 = _0x46611b['yMax'] + 0x1;
            for (var _0x5abd9d = _0x46611b['yMin'] + 0x1; _0x5abd9d < _0x44dd08; _0x5abd9d++) {
                if (this['_insertCon' + 'ePlane'](_0x267b4b, _0x24e839, _0xb45adc, _0x383458, _0xefa9ca[_0x5abd9d])) {
                    _0x25354b = Math['max'](0x0, _0x5abd9d - 0x1);
                    break;
                }
            }
            _0x508947 = _0x46611b['yMax'];
            for (var _0x5abd9d = _0x25354b + 0x1; _0x5abd9d < _0x44dd08; _0x5abd9d++) {
                var _0x5da6d8 = _0xefa9ca[_0x5abd9d];
                _0x59971e['setValue'](0x0, -_0x5da6d8['y'], -_0x5da6d8['z']);
                if (!this['_insertCon' + 'ePlane'](_0x267b4b, _0x24e839, _0xb45adc, _0x383458, _0x59971e)) {
                    _0x508947 = Math['max'](0x0, _0x5abd9d);
                    break;
                }
            }
            _0x44dd08 = _0x46611b['xMax'] + 0x1;
            for (var _0x5abd9d = _0x46611b['xMin'] + 0x1; _0x5abd9d < _0x44dd08; _0x5abd9d++) {
                if (this['_insertCon' + 'ePlane'](_0x267b4b, _0x24e839, _0xb45adc, _0x383458, _0x46119c[_0x5abd9d])) {
                    _0x589d51 = Math['max'](0x0, _0x5abd9d - 0x1);
                    break;
                }
            }
            _0xdaf5f8 = _0x46611b['xMax'];
            for (var _0x5abd9d = _0x589d51 + 0x1; _0x5abd9d < _0x44dd08; _0x5abd9d++) {
                var _0x5da6d8 = _0x46119c[_0x5abd9d];
                _0x59971e['setValue'](-_0x5da6d8['x'], 0x0, -_0x5da6d8['z']);
                if (!this['_insertCon' + 'ePlane'](_0x267b4b, _0x24e839, _0xb45adc, _0x383458, _0x59971e)) {
                    _0xdaf5f8 = Math['max'](0x0, _0x5abd9d);
                    break;
                }
            }
            _0x46611b['xMin'] = _0x589d51, _0x46611b['xMax'] = _0xdaf5f8, _0x46611b['yMin'] = _0x25354b, _0x46611b['yMax'] = _0x508947;
        }
        ['_updatePoi' + 'ntLightPer' + 'spective'](_0x205d8e, _0x2b310c, _0x5037e6, _0x1774ac, _0x15cfc0, _0xa801ab, _0x4dba6b) {
            var _0x35eaec = _0x1f70a4['_tempLight' + 'Bound'], _0x4f4043 = _0x1f70a4['_tempVecto' + 'r30'];
            _0x352206['transformV' + '3ToV3'](_0x1774ac['_transform']['position'], _0x5037e6, _0x4f4043), _0x4f4043['z'] *= -0x1;
            if (!this['_shrinkSph' + 'ereLightZP' + 'erspective'](_0x205d8e, _0x2b310c, _0x4f4043, _0x1774ac['range'], _0x35eaec))
                return;
            if (!this['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x4f4043, _0x1774ac['range'], _0x35eaec, _0xa801ab, _0x4dba6b))
                return;
            this['_placePoin' + 'tLightToCl' + 'usters'](_0x15cfc0, _0x35eaec);
        }
        ['_updateSpo' + 'tLightPers' + 'pective'](_0x4fa643, _0x4cf5ba, _0x4383da, _0x2d1749, _0x5f1033, _0x4728a7, _0x5d7c3c) {
            var _0x32a1f0 = _0x1f70a4['_tempLight' + 'Bound'], _0x5eca6c = _0x1f70a4['_tempVecto' + 'r30'], _0x5f576b = _0x1f70a4['_tempVecto' + 'r31'], _0x74bdf1 = _0x1f70a4['_tempVecto' + 'r34'], _0x174706 = _0x2d1749['_transform']['position'], _0x30ab48 = _0x2d1749['range'];
            _0x2d1749['_transform']['worldMatri' + 'x']['getForward'](_0x5f576b), _0x352206['normalize'](_0x5f576b, _0x5f576b), _0x352206['scale'](_0x5f576b, _0x30ab48, _0x74bdf1), _0x352206['add'](_0x174706, _0x74bdf1, _0x74bdf1), _0x352206['transformV' + '3ToV3'](_0x174706, _0x4383da, _0x5eca6c), _0x352206['transformV' + '3ToV3'](_0x74bdf1, _0x4383da, _0x74bdf1), _0x5eca6c['z'] *= -0x1, _0x74bdf1['z'] *= -0x1;
            var _0x2fb78d = _0x2d1749['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            if (!this['_shrinkSpo' + 'tLightZPer' + 'spective'](_0x4fa643, _0x4cf5ba, _0x5eca6c, _0x74bdf1, _0x30ab48, _0x2fb78d, _0x32a1f0))
                return;
            if (!this['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x5eca6c, _0x30ab48, _0x32a1f0, _0x4728a7, _0x5d7c3c))
                return;
            var _0xe7cc9c = _0x1f70a4['_tempVecto' + 'r33'];
            _0xe7cc9c['x'] = _0x74bdf1['x'] - _0x5eca6c['x'], _0xe7cc9c['y'] = _0x74bdf1['y'] - _0x5eca6c['y'], _0xe7cc9c['z'] = _0x74bdf1['z'] - _0x5eca6c['z'], _0x352206['normalize'](_0xe7cc9c, _0xe7cc9c), this['_shrinkSpo' + 'tXYByConeP' + 'erspective'](_0x5eca6c, _0xe7cc9c, _0x30ab48, _0x2fb78d, _0x32a1f0, _0x4728a7, _0x5d7c3c), this['_placeSpot' + 'LightToClu' + 'sters'](_0x5f1033, _0x32a1f0);
        }
        ['_updatePoi' + 'ntLightOrt' + 'h'](_0x320750, _0x4b5e9a, _0x445dcc, _0x5d179d, _0x30087e, _0x51279a, _0x38a665) {
            var _0x113db9 = _0x1f70a4['_tempLight' + 'Bound'], _0x18fcb2 = _0x1f70a4['_tempVecto' + 'r30'];
            _0x352206['transformV' + '3ToV3'](_0x51279a['_transform']['position'], _0x30087e, _0x18fcb2), _0x18fcb2['z'] *= -0x1;
            if (!this['_shrinkSph' + 'ereLightBy' + 'BoundOrth'](_0x320750, _0x4b5e9a, _0x445dcc, _0x5d179d, _0x18fcb2, _0x51279a['range'], _0x113db9))
                return;
            this['_placePoin' + 'tLightToCl' + 'usters'](_0x38a665, _0x113db9);
        }
        ['_updateSpo' + 'tLightOrth'](_0x3d46bd, _0x1d8cd4, _0x532ea8, _0x7b92fe, _0x538d26, _0x34d71e, _0x2d5f34) {
            var _0x3b9c9d = _0x1f70a4['_tempLight' + 'Bound'], _0x3f0b16 = _0x1f70a4['_tempVecto' + 'r30'], _0x2e4f73 = _0x1f70a4['_tempVecto' + 'r31'], _0xfbddb2 = _0x1f70a4['_tempVecto' + 'r34'], _0x2c97a1 = _0x34d71e['_transform']['position'], _0x225206 = _0x34d71e['range'];
            _0x34d71e['_transform']['worldMatri' + 'x']['getForward'](_0x2e4f73), _0x352206['normalize'](_0x2e4f73, _0x2e4f73), _0x352206['scale'](_0x2e4f73, _0x225206, _0xfbddb2), _0x352206['add'](_0x2c97a1, _0xfbddb2, _0xfbddb2), _0x352206['transformV' + '3ToV3'](_0x2c97a1, _0x538d26, _0x3f0b16), _0x352206['transformV' + '3ToV3'](_0xfbddb2, _0x538d26, _0xfbddb2), _0x3f0b16['z'] *= -0x1, _0xfbddb2['z'] *= -0x1;
            var _0x52e4a2 = _0x34d71e['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            if (!this['_shrinkSpo' + 'tLightByBo' + 'undOrth'](_0x3d46bd, _0x1d8cd4, _0x532ea8, _0x7b92fe, _0x3f0b16, _0xfbddb2, _0x225206, _0x52e4a2, _0x3b9c9d))
                return;
            this['_placeSpot' + 'LightToClu' + 'sters'](_0x2d5f34, _0x3b9c9d);
        }
        ['update'](_0x287d69, _0x249312) {
            this['_updateMar' + 'k']++;
            var _0x452c7a = _0x287d69['nearPlane'];
            this['_depthSlic' + 'eParam']['x'] = _0x1a3b39['_config']['lightClust' + 'erCount']['z'] / Math['log2'](_0x287d69['farPlane'] / _0x452c7a), this['_depthSlic' + 'eParam']['y'] = Math['log2'](_0x452c7a) * this['_depthSlic' + 'eParam']['x'];
            var _0x53781f = _0x287d69['nearPlane'], _0x499910 = _0x287d69['farPlane'], _0x5d0fa6 = _0x287d69['viewMatrix'], _0x5b656b = _0x249312['_direction' + 'Lights']['_length'], _0x141407 = _0x249312['_pointLigh' + 'ts'], _0x141f01 = _0x141407['_length'], _0x26a893 = _0x141407['_elements'], _0x2f32a3 = _0x249312['_spotLight' + 's'], _0x330d46 = _0x2f32a3['_length'], _0x134037 = _0x2f32a3['_elements'];
            if (_0x287d69['orthograph' + 'ic']) {
                var _0x84513 = _0x287d69['orthograph' + 'icVertical' + 'Size'] / 0x2, _0x1fe8c8 = _0x84513 * _0x287d69['aspectRati' + 'o'];
                for (var _0x328149 = 0x0; _0x328149 < _0x141f01; _0x328149++, _0x5b656b++)
                    this['_updatePoi' + 'ntLightOrt' + 'h'](_0x1fe8c8, _0x84513, _0x53781f, _0x499910, _0x5d0fa6, _0x26a893[_0x328149], _0x5b656b);
                for (var _0x328149 = 0x0; _0x328149 < _0x330d46; _0x328149++, _0x5b656b++)
                    this['_updateSpo' + 'tLightOrth'](_0x1fe8c8, _0x84513, _0x53781f, _0x499910, _0x5d0fa6, _0x134037[_0x328149], _0x5b656b);
            } else {
                _0x287d69['_updateClu' + 'sterPlaneX' + 'Y']();
                var _0x42fd09 = _0x287d69['_clusterXP' + 'lanes'], _0x357551 = _0x287d69['_clusterYP' + 'lanes'];
                for (var _0x328149 = 0x0; _0x328149 < _0x141f01; _0x328149++, _0x5b656b++)
                    this['_updatePoi' + 'ntLightPer' + 'spective'](_0x53781f, _0x499910, _0x5d0fa6, _0x26a893[_0x328149], _0x5b656b, _0x42fd09, _0x357551);
                for (var _0x328149 = 0x0; _0x328149 < _0x330d46; _0x328149++, _0x5b656b++)
                    this['_updateSpo' + 'tLightPers' + 'pective'](_0x53781f, _0x499910, _0x5d0fa6, _0x134037[_0x328149], _0x5b656b, _0x42fd09, _0x357551);
            }
            if (_0x141f01 + _0x330d46 > 0x0) {
                var _0x193abf = this['_xSlices'], _0xbb8c29 = this['_ySlices'], _0x5e1a1a = this['_zSlices'], _0x378b30 = _0x193abf * _0xbb8c29 * 0x4, _0x5deac1 = _0x378b30 * _0x5e1a1a, _0x46e471 = this['_clusterPi' + 'xels'], _0x38aab1 = _0x46e471['length'], _0x37a29d = this['_clusterDa' + 'tas'], _0x859497 = this['_updateMar' + 'k'], _0x52d90e = !![];
                for (var _0x397b87 = 0x0; _0x397b87 < _0x5e1a1a; _0x397b87++) {
                    for (var _0x43527d = 0x0; _0x43527d < _0xbb8c29; _0x43527d++) {
                        for (var _0x3d1539 = 0x0; _0x3d1539 < _0x193abf; _0x3d1539++) {
                            var _0x39196e = _0x37a29d[_0x397b87][_0x43527d][_0x3d1539], _0x328fbf = (_0x3d1539 + _0x43527d * _0x193abf + _0x397b87 * _0x193abf * _0xbb8c29) * 0x4;
                            if (_0x39196e['updateMark'] !== _0x859497)
                                _0x46e471[_0x328fbf] = 0x0, _0x46e471[_0x328fbf + 0x1] = 0x0;
                            else {
                                if (_0x52d90e) {
                                    var _0x58d81b = _0x39196e['indices'], _0x35af79 = _0x39196e['pointLight' + 'Count'], _0x479af0 = _0x39196e['spotLightC' + 'ount'], _0x14e755 = _0x35af79 + _0x479af0;
                                    if (_0x5deac1 + _0x14e755 < _0x38aab1) {
                                        _0x46e471[_0x328fbf] = _0x35af79, _0x46e471[_0x328fbf + 0x1] = _0x479af0, _0x46e471[_0x328fbf + 0x2] = Math['floor'](_0x5deac1 / _0x378b30), _0x46e471[_0x328fbf + 0x3] = _0x5deac1 % _0x378b30;
                                        for (var _0x328149 = 0x0; _0x328149 < _0x14e755; _0x328149++)
                                            _0x46e471[_0x5deac1++] = _0x58d81b[_0x328149];
                                    } else {
                                        _0x14e755 = _0x38aab1 - (_0x5deac1 + _0x14e755), _0x35af79 = Math['min'](_0x35af79, _0x14e755), _0x46e471[_0x328fbf] = _0x35af79, _0x46e471[_0x328fbf + 0x1] = Math['min'](_0x479af0, _0x14e755 - _0x35af79), _0x46e471[_0x328fbf + 0x2] = Math['floor'](_0x5deac1 / _0x378b30), _0x46e471[_0x328fbf + 0x3] = _0x5deac1 % _0x378b30;
                                        for (var _0x328149 = 0x0; _0x328149 < _0x14e755; _0x328149++)
                                            _0x46e471[_0x5deac1++] = _0x58d81b[_0x328149];
                                        _0x52d90e = ![];
                                    }
                                }
                            }
                        }
                    }
                }
                var _0x3a84a5 = this['_clusterTe' + 'xture']['width'];
                this['_clusterTe' + 'xture']['setSubPixe' + 'ls'](0x0, 0x0, _0x3a84a5, Math['ceil'](_0x5deac1 / (0x4 * _0x3a84a5)), _0x46e471);
            }
        }
    }
    _0x1f70a4['_tempVecto' + 'r30'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r31'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r32'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r33'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r34'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r35'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r36'] = new _0x352206(), _0x1f70a4['_tempVecto' + 'r37'] = new _0x352206(), _0x1f70a4['_tempLight' + 'Bound'] = new _0x1e83b9();
    class _0x1fee56 {
        constructor(_0x342449, _0x2eccd7 = 0x0) {
            this['normal'] = _0x342449, this['distance'] = _0x2eccd7;
        }
        static ['createPlan' + 'eBy3P'](_0x13a4b5, _0x21e45e, _0x2b7ae9, _0x38130d) {
            var _0x1a1b9c = _0x21e45e['x'] - _0x13a4b5['x'], _0x1eabaa = _0x21e45e['y'] - _0x13a4b5['y'], _0x5c41d9 = _0x21e45e['z'] - _0x13a4b5['z'], _0x299be6 = _0x2b7ae9['x'] - _0x13a4b5['x'], _0x8fd819 = _0x2b7ae9['y'] - _0x13a4b5['y'], _0x360527 = _0x2b7ae9['z'] - _0x13a4b5['z'], _0x15fa87 = _0x1eabaa * _0x360527 - _0x5c41d9 * _0x8fd819, _0x3da939 = _0x5c41d9 * _0x299be6 - _0x1a1b9c * _0x360527, _0x26a7c1 = _0x1a1b9c * _0x8fd819 - _0x1eabaa * _0x299be6, _0x4fa7e8 = 0x1 / Math['sqrt'](_0x15fa87 * _0x15fa87 + _0x3da939 * _0x3da939 + _0x26a7c1 * _0x26a7c1), _0x47ef89 = _0x15fa87 * _0x4fa7e8, _0x48a921 = _0x3da939 * _0x4fa7e8, _0x3a040c = _0x26a7c1 * _0x4fa7e8, _0x54c62a = _0x38130d['normal'];
            _0x54c62a['x'] = _0x47ef89, _0x54c62a['y'] = _0x48a921, _0x54c62a['z'] = _0x3a040c, _0x38130d['distance'] = -(_0x47ef89 * _0x13a4b5['x'] + _0x48a921 * _0x13a4b5['y'] + _0x3a040c * _0x13a4b5['z']);
        }
        ['normalize']() {
            var _0x437367 = this['normal']['x'], _0x52add5 = this['normal']['y'], _0x7430a1 = this['normal']['z'], _0x110c44 = 0x1 / Math['sqrt'](_0x437367 * _0x437367 + _0x52add5 * _0x52add5 + _0x7430a1 * _0x7430a1);
            this['normal']['x'] = _0x437367 * _0x110c44, this['normal']['y'] = _0x52add5 * _0x110c44, this['normal']['z'] = _0x7430a1 * _0x110c44, this['distance'] *= _0x110c44;
        }
        ['cloneTo'](_0x28c216) {
            var _0x4e673d = _0x28c216;
            this['normal']['cloneTo'](_0x4e673d['normal']), _0x4e673d['distance'] = this['distance'];
        }
        ['clone']() {
            var _0x4192c8 = new _0x1fee56(new _0x352206());
            return this['cloneTo'](_0x4192c8), _0x4192c8;
        }
    }
    _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'] = 0x0, _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'] = 0x1, _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'] = 0x2;
    class _0x24d745 {
        constructor(_0x199968, _0x40b2a5) {
            this['origin'] = _0x199968, this['direction'] = _0x40b2a5;
        }
    }
    class _0x93aded {
    }
    _0x93aded['Disjoint'] = 0x0, _0x93aded['Contains'] = 0x1, _0x93aded['Intersects'] = 0x2;
    class _0xefe37 {
        constructor() {
        }
        static ['distancePl' + 'aneToPoint'](_0x58b19f, _0x3e78b0) {
            var _0x4cb37c = _0x352206['dot'](_0x58b19f['normal'], _0x3e78b0);
            return _0x4cb37c - _0x58b19f['distance'];
        }
        static ['distanceBo' + 'xToPoint'](_0x2e9037, _0xd7196a) {
            var _0x15e85c = _0x2e9037['min'], _0x59ad2a = _0x15e85c['x'], _0x21b00c = _0x15e85c['y'], _0x4cab28 = _0x15e85c['z'], _0x32a9f9 = _0x2e9037['max'], _0x1bf71a = _0x32a9f9['x'], _0x24b167 = _0x32a9f9['y'], _0x4528d8 = _0x32a9f9['z'], _0x29bd3a = _0xd7196a['x'], _0x1ad340 = _0xd7196a['y'], _0x42a7c3 = _0xd7196a['z'], _0x54fe49 = 0x0;
            if (_0x29bd3a < _0x59ad2a)
                _0x54fe49 += (_0x59ad2a - _0x29bd3a) * (_0x59ad2a - _0x29bd3a);
            if (_0x29bd3a > _0x1bf71a)
                _0x54fe49 += (_0x1bf71a - _0x29bd3a) * (_0x1bf71a - _0x29bd3a);
            if (_0x1ad340 < _0x21b00c)
                _0x54fe49 += (_0x21b00c - _0x1ad340) * (_0x21b00c - _0x1ad340);
            if (_0x1ad340 > _0x24b167)
                _0x54fe49 += (_0x24b167 - _0x1ad340) * (_0x24b167 - _0x1ad340);
            if (_0x42a7c3 < _0x4cab28)
                _0x54fe49 += (_0x4cab28 - _0x42a7c3) * (_0x4cab28 - _0x42a7c3);
            if (_0x42a7c3 > _0x4528d8)
                _0x54fe49 += (_0x4528d8 - _0x42a7c3) * (_0x4528d8 - _0x42a7c3);
            return Math['sqrt'](_0x54fe49);
        }
        static ['distanceBo' + 'xToBox'](_0x4e7cb4, _0x1b4da9) {
            var _0x2a8899 = _0x4e7cb4['min'], _0x412a26 = _0x2a8899['x'], _0x2f35af = _0x2a8899['y'], _0x222e6c = _0x2a8899['z'], _0x109732 = _0x4e7cb4['max'], _0x4df840 = _0x109732['x'], _0x4faee7 = _0x109732['y'], _0x3d4986 = _0x109732['z'], _0x1bb74f = _0x1b4da9['min'], _0x3dbfc9 = _0x1bb74f['x'], _0x95db69 = _0x1bb74f['y'], _0x590823 = _0x1bb74f['z'], _0x2be9f = _0x1b4da9['max'], _0x46e596 = _0x2be9f['x'], _0x2d21f8 = _0x2be9f['y'], _0x791135 = _0x2be9f['z'], _0x4afc00 = 0x0, _0x30023b;
            if (_0x412a26 > _0x46e596)
                _0x30023b = _0x412a26 - _0x46e596, _0x4afc00 += _0x30023b * _0x30023b;
            else
                _0x3dbfc9 > _0x4df840 && (_0x30023b = _0x3dbfc9 - _0x4df840, _0x4afc00 += _0x30023b * _0x30023b);
            if (_0x2f35af > _0x2d21f8)
                _0x30023b = _0x2f35af - _0x2d21f8, _0x4afc00 += _0x30023b * _0x30023b;
            else
                _0x95db69 > _0x4faee7 && (_0x30023b = _0x95db69 - _0x4faee7, _0x4afc00 += _0x30023b * _0x30023b);
            if (_0x222e6c > _0x791135)
                _0x30023b = _0x222e6c - _0x791135, _0x4afc00 += _0x30023b * _0x30023b;
            else
                _0x590823 > _0x3d4986 && (_0x30023b = _0x590823 - _0x3d4986, _0x4afc00 += _0x30023b * _0x30023b);
            return Math['sqrt'](_0x4afc00);
        }
        static ['distanceSp' + 'hereToPoin' + 't'](_0xc3f1c4, _0x45a5a8) {
            var _0x48737e = Math['sqrt'](_0x352206['distanceSq' + 'uared'](_0xc3f1c4['center'], _0x45a5a8));
            return _0x48737e -= _0xc3f1c4['radius'], Math['max'](_0x48737e, 0x0);
        }
        static ['distanceSp' + 'hereToSphe' + 're'](_0x564525, _0x11a53d) {
            var _0x1c5392 = Math['sqrt'](_0x352206['distanceSq' + 'uared'](_0x564525['center'], _0x11a53d['center']));
            return _0x1c5392 -= _0x564525['radius'] + _0x11a53d['radius'], Math['max'](_0x1c5392, 0x0);
        }
        static ['intersects' + 'RayAndTria' + 'ngleRD'](_0x35eff5, _0x5cb9e0, _0x1ba326, _0x182c5c, _0x2a2f38) {
            var _0x4e3c7c = _0x35eff5['origin'], _0x4a91a3 = _0x4e3c7c['x'], _0x1ac8ef = _0x4e3c7c['y'], _0x44f53a = _0x4e3c7c['z'], _0x8c52e5 = _0x35eff5['direction'], _0x29c3a4 = _0x8c52e5['x'], _0x16fdf0 = _0x8c52e5['y'], _0x1519be = _0x8c52e5['z'], _0x4fb630 = _0x5cb9e0['x'], _0x171c25 = _0x5cb9e0['y'], _0x31b5df = _0x5cb9e0['z'], _0xf76058 = _0x1ba326['x'], _0x526119 = _0x1ba326['y'], _0x28188f = _0x1ba326['z'], _0x3e9aed = _0x182c5c['x'], _0x233f6c = _0x182c5c['y'], _0x29f832 = _0x182c5c['z'], _0x4f1e56 = _0xefe37['_tempV30']['x'], _0x5d3816 = _0xefe37['_tempV30']['y'], _0x482fca = _0xefe37['_tempV30']['z'];
            _0x4f1e56 = _0xf76058 - _0x4fb630, _0x5d3816 = _0x526119 - _0x171c25, _0x482fca = _0x28188f - _0x31b5df;
            var _0x41e984 = _0xefe37['_tempV31']['x'], _0xf83fe6 = _0xefe37['_tempV31']['y'], _0x3533c9 = _0xefe37['_tempV31']['z'];
            _0x41e984 = _0x3e9aed - _0x4fb630, _0xf83fe6 = _0x233f6c - _0x171c25, _0x3533c9 = _0x29f832 - _0x31b5df;
            var _0x304a56 = _0xefe37['_tempV32']['x'], _0x34813f = _0xefe37['_tempV32']['y'], _0x36427d = _0xefe37['_tempV32']['z'];
            _0x304a56 = _0x16fdf0 * _0x3533c9 - _0x1519be * _0xf83fe6, _0x34813f = _0x1519be * _0x41e984 - _0x29c3a4 * _0x3533c9, _0x36427d = _0x29c3a4 * _0xf83fe6 - _0x16fdf0 * _0x41e984;
            var _0x2190b5 = _0x4f1e56 * _0x304a56 + _0x5d3816 * _0x34813f + _0x482fca * _0x36427d;
            if (_0xc6f01['isZero'](_0x2190b5))
                return ![];
            var _0x587ca4 = 0x1 / _0x2190b5, _0x35b744 = _0xefe37['_tempV33']['x'], _0xa70f84 = _0xefe37['_tempV33']['y'], _0x533faa = _0xefe37['_tempV33']['z'];
            _0x35b744 = _0x4a91a3 - _0x4fb630, _0xa70f84 = _0x1ac8ef - _0x171c25, _0x533faa = _0x44f53a - _0x31b5df;
            var _0x1e2cd6 = _0x35b744 * _0x304a56 + _0xa70f84 * _0x34813f + _0x533faa * _0x36427d;
            _0x1e2cd6 *= _0x587ca4;
            if (_0x1e2cd6 < 0x0 || _0x1e2cd6 > 0x1)
                return ![];
            var _0x4444dc = _0xefe37['_tempV34']['x'], _0x49530d = _0xefe37['_tempV34']['y'], _0x2187a5 = _0xefe37['_tempV34']['z'];
            _0x4444dc = _0xa70f84 * _0x482fca - _0x533faa * _0x5d3816, _0x49530d = _0x533faa * _0x4f1e56 - _0x35b744 * _0x482fca, _0x2187a5 = _0x35b744 * _0x5d3816 - _0xa70f84 * _0x4f1e56;
            var _0x149727 = _0x29c3a4 * _0x4444dc + _0x16fdf0 * _0x49530d + _0x1519be * _0x2187a5;
            _0x149727 *= _0x587ca4;
            if (_0x149727 < 0x0 || _0x1e2cd6 + _0x149727 > 0x1)
                return ![];
            var _0xc9edd = _0x41e984 * _0x4444dc + _0xf83fe6 * _0x49530d + _0x3533c9 * _0x2187a5;
            _0xc9edd *= _0x587ca4;
            if (_0xc9edd < 0x0)
                return ![];
            return !![];
        }
        static ['intersects' + 'RayAndTria' + 'ngleRP'](_0x45ac39, _0x30683e, _0xdc64a7, _0x26b041, _0x12baac) {
            var _0x578962;
            if (!_0xefe37['intersects' + 'RayAndTria' + 'ngleRD'](_0x45ac39, _0x30683e, _0xdc64a7, _0x26b041, _0x578962))
                return _0x12baac = _0x352206['_ZERO'], ![];
            return _0x352206['scale'](_0x45ac39['direction'], _0x578962, _0xefe37['_tempV30']), _0x352206['add'](_0x45ac39['origin'], _0xefe37['_tempV30'], _0x12baac), !![];
        }
        static ['intersects' + 'RayAndPoin' + 't'](_0x251eb4, _0x2b7359) {
            _0x352206['subtract'](_0x251eb4['origin'], _0x2b7359, _0xefe37['_tempV30']);
            var _0x32eb53 = _0x352206['dot'](_0xefe37['_tempV30'], _0x251eb4['direction']), _0x3fec40 = _0x352206['dot'](_0xefe37['_tempV30'], _0xefe37['_tempV30']) - _0xc6f01['zeroTolera' + 'nce'];
            if (_0x3fec40 > 0x0 && _0x32eb53 > 0x0)
                return ![];
            var _0x4be214 = _0x32eb53 * _0x32eb53 - _0x3fec40;
            if (_0x4be214 < 0x0)
                return ![];
            return !![];
        }
        static ['intersects' + 'RayAndRay'](_0xec8b6a, _0x138aa8, _0xbe6caf) {
            var _0x45c65c = _0xec8b6a['origin'], _0x3bdeaa = _0x45c65c['x'], _0x50ace7 = _0x45c65c['y'], _0x436ae8 = _0x45c65c['z'], _0x42d5a3 = _0xec8b6a['direction'], _0x2bb4d1 = _0x42d5a3['x'], _0x5ca12f = _0x42d5a3['y'], _0x327c2c = _0x42d5a3['z'], _0x5309bc = _0x138aa8['origin'], _0x413725 = _0x5309bc['x'], _0x505e50 = _0x5309bc['y'], _0x639f6d = _0x5309bc['z'], _0x3cb8aa = _0x138aa8['direction'], _0x5eaa90 = _0x3cb8aa['x'], _0x5bc6aa = _0x3cb8aa['y'], _0x15d264 = _0x3cb8aa['z'];
            _0x352206['cross'](_0x42d5a3, _0x3cb8aa, _0xefe37['_tempV30']);
            var _0x72d198 = _0xefe37['_tempV30'], _0xbf0e27 = _0x352206['scalarLeng' + 'th'](_0xefe37['_tempV30']);
            if (_0xc6f01['isZero'](_0xbf0e27)) {
                if (_0xc6f01['nearEqual'](_0x413725, _0x3bdeaa) && _0xc6f01['nearEqual'](_0x505e50, _0x50ace7) && _0xc6f01['nearEqual'](_0x639f6d, _0x436ae8))
                    return !![];
            }
            _0xbf0e27 = _0xbf0e27 * _0xbf0e27;
            var _0x4c317b = _0x413725 - _0x3bdeaa, _0x28b4e1 = _0x505e50 - _0x50ace7, _0x1c5fba = _0x639f6d - _0x436ae8, _0x4ac9ec = _0x5eaa90, _0x2193c5 = _0x5bc6aa, _0xf6d3b5 = _0x15d264, _0x911a22 = _0x72d198['x'], _0x23cc59 = _0x72d198['y'], _0xe3ce39 = _0x72d198['z'], _0x1ad67e = _0x4c317b * _0x2193c5 * _0xe3ce39 + _0x28b4e1 * _0xf6d3b5 * _0x911a22 + _0x1c5fba * _0x4ac9ec * _0x23cc59 - _0x4c317b * _0xf6d3b5 * _0x23cc59 - _0x28b4e1 * _0x4ac9ec * _0xe3ce39 - _0x1c5fba * _0x2193c5 * _0x911a22;
            _0x4ac9ec = _0x2bb4d1, _0x2193c5 = _0x5ca12f, _0xf6d3b5 = _0x327c2c;
            var _0x58aec4 = _0x1ad67e / _0xbf0e27;
            _0x352206['scale'](_0x42d5a3, _0x58aec4, _0xefe37['_tempV30']), _0x352206['scale'](_0x3cb8aa, _0x58aec4, _0xefe37['_tempV31']), _0x352206['add'](_0x45c65c, _0xefe37['_tempV30'], _0xefe37['_tempV32']), _0x352206['add'](_0x5309bc, _0xefe37['_tempV31'], _0xefe37['_tempV33']);
            var _0x19bba6 = _0xefe37['_tempV32'], _0x399c32 = _0xefe37['_tempV33'];
            if (!_0xc6f01['nearEqual'](_0x399c32['x'], _0x19bba6['x']) || !_0xc6f01['nearEqual'](_0x399c32['y'], _0x19bba6['y']) || !_0xc6f01['nearEqual'](_0x399c32['z'], _0x19bba6['z']))
                return ![];
            return !![];
        }
        static ['intersects' + 'PlaneAndTr' + 'iangle'](_0x33518b, _0x8a680b, _0x20dbc2, _0x4f9584) {
            var _0x4077bf = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](_0x33518b, _0x8a680b), _0x3e344d = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](_0x33518b, _0x20dbc2), _0x38438f = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](_0x33518b, _0x4f9584);
            if (_0x4077bf == _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'] && _0x3e344d == _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'] && _0x38438f == _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'])
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'];
            if (_0x4077bf == _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'] && _0x3e344d == _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'] && _0x38438f == _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'])
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'];
            return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'RayAndPlan' + 'eRD'](_0x1cf459, _0x29d882) {
            var _0x1f09f1 = _0x29d882['normal'], _0x428940 = _0x352206['dot'](_0x1f09f1, _0x1cf459['direction']);
            if (Math['abs'](_0x428940) < _0xc6f01['zeroTolera' + 'nce'])
                return -0x1;
            var _0x36965c = _0x352206['dot'](_0x1f09f1, _0x1cf459['origin']), _0x121852 = (-_0x29d882['distance'] - _0x36965c) / _0x428940;
            if (_0x121852 < 0x0) {
                if (_0x121852 < -_0xc6f01['zeroTolera' + 'nce'])
                    return -0x1;
                _0x121852 = 0x0;
            }
            return _0x121852;
        }
        static ['intersects' + 'RayAndPlan' + 'eRP'](_0x4eaac1, _0x26696a, _0x5f3988) {
            var _0x1fed29 = _0xefe37['intersects' + 'RayAndPlan' + 'eRD'](_0x4eaac1, _0x26696a);
            if (_0x1fed29 == -0x1)
                return _0x5f3988['setValue'](0x0, 0x0, 0x0), ![];
            var _0x371055 = _0xefe37['_tempV30'];
            return _0x352206['scale'](_0x4eaac1['direction'], _0x1fed29, _0x371055), _0x352206['add'](_0x4eaac1['origin'], _0x371055, _0x5f3988), !![];
        }
        static ['intersects' + 'RayAndBoxR' + 'D'](_0x165ef4, _0x30737c) {
            var _0x259e5b = _0x165ef4['origin'], _0x54dc4a = _0x259e5b['x'], _0x221407 = _0x259e5b['y'], _0x509294 = _0x259e5b['z'], _0x4dce7f = _0x165ef4['direction'], _0xbd9f23 = _0x4dce7f['x'], _0x52b027 = _0x4dce7f['y'], _0x3f4587 = _0x4dce7f['z'], _0x2dbec9 = _0x30737c['min'], _0x47f3bb = _0x2dbec9['x'], _0x5ac86d = _0x2dbec9['y'], _0x53e73f = _0x2dbec9['z'], _0x4475de = _0x30737c['max'], _0x59f828 = _0x4475de['x'], _0x251186 = _0x4475de['y'], _0x179649 = _0x4475de['z'], _0x1d2200 = 0x0, _0x49367c = _0xc6f01['MaxValue'];
            if (_0xc6f01['isZero'](_0xbd9f23)) {
                if (_0x54dc4a < _0x47f3bb || _0x54dc4a > _0x59f828)
                    return -0x1;
            } else {
                var _0x27885e = 0x1 / _0xbd9f23, _0x3610d4 = (_0x47f3bb - _0x54dc4a) * _0x27885e, _0x1bda06 = (_0x59f828 - _0x54dc4a) * _0x27885e;
                if (_0x3610d4 > _0x1bda06) {
                    var _0x4a9b10 = _0x3610d4;
                    _0x3610d4 = _0x1bda06, _0x1bda06 = _0x4a9b10;
                }
                _0x1d2200 = Math['max'](_0x3610d4, _0x1d2200), _0x49367c = Math['min'](_0x1bda06, _0x49367c);
                if (_0x1d2200 > _0x49367c)
                    return -0x1;
            }
            if (_0xc6f01['isZero'](_0x52b027)) {
                if (_0x221407 < _0x5ac86d || _0x221407 > _0x251186)
                    return -0x1;
            } else {
                var _0x5c39a1 = 0x1 / _0x52b027, _0x409633 = (_0x5ac86d - _0x221407) * _0x5c39a1, _0x1b301a = (_0x251186 - _0x221407) * _0x5c39a1;
                if (_0x409633 > _0x1b301a) {
                    var _0x3a76c0 = _0x409633;
                    _0x409633 = _0x1b301a, _0x1b301a = _0x3a76c0;
                }
                _0x1d2200 = Math['max'](_0x409633, _0x1d2200), _0x49367c = Math['min'](_0x1b301a, _0x49367c);
                if (_0x1d2200 > _0x49367c)
                    return -0x1;
            }
            if (_0xc6f01['isZero'](_0x3f4587)) {
                if (_0x509294 < _0x53e73f || _0x509294 > _0x179649)
                    return -0x1;
            } else {
                var _0x5ec109 = 0x1 / _0x3f4587, _0x548b3c = (_0x53e73f - _0x509294) * _0x5ec109, _0x70ba2 = (_0x179649 - _0x509294) * _0x5ec109;
                if (_0x548b3c > _0x70ba2) {
                    var _0x4c9e04 = _0x548b3c;
                    _0x548b3c = _0x70ba2, _0x70ba2 = _0x4c9e04;
                }
                _0x1d2200 = Math['max'](_0x548b3c, _0x1d2200), _0x49367c = Math['min'](_0x70ba2, _0x49367c);
                if (_0x1d2200 > _0x49367c)
                    return -0x1;
            }
            return _0x1d2200;
        }
        static ['intersects' + 'RayAndBoxR' + 'P'](_0x250476, _0x393bd1, _0x155ed9) {
            var _0x30da1d = _0xefe37['intersects' + 'RayAndBoxR' + 'D'](_0x250476, _0x393bd1);
            if (_0x30da1d === -0x1)
                return _0x352206['_ZERO']['cloneTo'](_0x155ed9), _0x30da1d;
            return _0x352206['scale'](_0x250476['direction'], _0x30da1d, _0xefe37['_tempV30']), _0x352206['add'](_0x250476['origin'], _0xefe37['_tempV30'], _0xefe37['_tempV31']), _0xefe37['_tempV31']['cloneTo'](_0x155ed9), _0x30da1d;
        }
        static ['intersects' + 'RayAndSphe' + 'reRD'](_0x38452a, _0x37a886) {
            var _0x11333f = _0x37a886['radius'];
            _0x352206['subtract'](_0x38452a['origin'], _0x37a886['center'], _0xefe37['_tempV30']);
            var _0x14b260 = _0x352206['dot'](_0xefe37['_tempV30'], _0x38452a['direction']), _0x137782 = _0x352206['dot'](_0xefe37['_tempV30'], _0xefe37['_tempV30']) - _0x11333f * _0x11333f;
            if (_0x137782 > 0x0 && _0x14b260 > 0x0)
                return -0x1;
            var _0x18ee66 = _0x14b260 * _0x14b260 - _0x137782;
            if (_0x18ee66 < 0x0)
                return -0x1;
            var _0x26b9d2 = -_0x14b260 - Math['sqrt'](_0x18ee66);
            if (_0x26b9d2 < 0x0)
                _0x26b9d2 = 0x0;
            return _0x26b9d2;
        }
        static ['intersects' + 'RayAndSphe' + 'reRP'](_0x19c5d2, _0x115f25, _0x408b41) {
            var _0x2668ab = _0xefe37['intersects' + 'RayAndSphe' + 'reRD'](_0x19c5d2, _0x115f25);
            if (_0x2668ab === -0x1)
                return _0x352206['_ZERO']['cloneTo'](_0x408b41), _0x2668ab;
            return _0x352206['scale'](_0x19c5d2['direction'], _0x2668ab, _0xefe37['_tempV30']), _0x352206['add'](_0x19c5d2['origin'], _0xefe37['_tempV30'], _0xefe37['_tempV31']), _0xefe37['_tempV31']['cloneTo'](_0x408b41), _0x2668ab;
        }
        static ['intersects' + 'SphereAndT' + 'riangle'](_0x54e8ef, _0x102737, _0x180ede, _0x33964b) {
            var _0x4fd1b8 = _0x54e8ef['center'], _0x455e60 = _0x54e8ef['radius'];
            _0xefe37['closestPoi' + 'ntPointTri' + 'angle'](_0x4fd1b8, _0x102737, _0x180ede, _0x33964b, _0xefe37['_tempV30']), _0x352206['subtract'](_0xefe37['_tempV30'], _0x4fd1b8, _0xefe37['_tempV31']);
            var _0x130dee = _0x352206['dot'](_0xefe37['_tempV31'], _0xefe37['_tempV31']);
            return _0x130dee <= _0x455e60 * _0x455e60;
        }
        static ['intersects' + 'PlaneAndPo' + 'int'](_0x52f91b, _0x39d67d) {
            var _0x27f102 = _0x352206['dot'](_0x52f91b['normal'], _0x39d67d) + _0x52f91b['distance'];
            if (_0x27f102 > 0x0)
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'];
            if (_0x27f102 < 0x0)
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'];
            return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'PlaneAndPl' + 'ane'](_0xc4e9d8, _0x37c0c7) {
            _0x352206['cross'](_0xc4e9d8['normal'], _0x37c0c7['normal'], _0xefe37['_tempV30']);
            var _0x7560fb = _0x352206['dot'](_0xefe37['_tempV30'], _0xefe37['_tempV30']);
            if (_0xc6f01['isZero'](_0x7560fb))
                return ![];
            return !![];
        }
        static ['intersects' + 'PlaneAndPl' + 'aneRL'](_0x216e5d, _0x5e015b, _0x4f3968) {
            var _0x423dc4 = _0x216e5d['normal'], _0x41ae34 = _0x5e015b['normal'];
            _0x352206['cross'](_0x423dc4, _0x41ae34, _0xefe37['_tempV34']);
            var _0x2cbfa0 = _0x352206['dot'](_0xefe37['_tempV34'], _0xefe37['_tempV34']);
            if (_0xc6f01['isZero'](_0x2cbfa0))
                return ![];
            return _0x352206['scale'](_0x41ae34, _0x216e5d['distance'], _0xefe37['_tempV30']), _0x352206['scale'](_0x423dc4, _0x5e015b['distance'], _0xefe37['_tempV31']), _0x352206['subtract'](_0xefe37['_tempV30'], _0xefe37['_tempV31'], _0xefe37['_tempV32']), _0x352206['cross'](_0xefe37['_tempV32'], _0xefe37['_tempV34'], _0xefe37['_tempV33']), _0x352206['normalize'](_0xefe37['_tempV34'], _0xefe37['_tempV34']), !![];
        }
        static ['intersects' + 'PlaneAndBo' + 'x'](_0x59e940, _0x2fd82d) {
            var _0x342da6 = _0x59e940['distance'], _0x34453f = _0x59e940['normal'], _0x531502 = _0x34453f['x'], _0x423577 = _0x34453f['y'], _0x4d7d79 = _0x34453f['z'], _0x3234cf = _0x2fd82d['min'], _0xb7a188 = _0x3234cf['x'], _0xbedfd8 = _0x3234cf['y'], _0x21ae15 = _0x3234cf['z'], _0x242287 = _0x2fd82d['max'], _0x22aa2c = _0x242287['x'], _0xe1672 = _0x242287['y'], _0x17db48 = _0x242287['z'];
            _0xefe37['_tempV30']['x'] = _0x531502 > 0x0 ? _0xb7a188 : _0x22aa2c, _0xefe37['_tempV30']['y'] = _0x423577 > 0x0 ? _0xbedfd8 : _0xe1672, _0xefe37['_tempV30']['z'] = _0x4d7d79 > 0x0 ? _0x21ae15 : _0x17db48, _0xefe37['_tempV31']['x'] = _0x531502 > 0x0 ? _0x22aa2c : _0xb7a188, _0xefe37['_tempV31']['y'] = _0x423577 > 0x0 ? _0xe1672 : _0xbedfd8, _0xefe37['_tempV31']['z'] = _0x4d7d79 > 0x0 ? _0x17db48 : _0x21ae15;
            var _0x5e89ea = _0x352206['dot'](_0x34453f, _0xefe37['_tempV30']);
            if (_0x5e89ea + _0x342da6 > 0x0)
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'];
            _0x5e89ea = _0x352206['dot'](_0x34453f, _0xefe37['_tempV31']);
            if (_0x5e89ea + _0x342da6 < 0x0)
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'];
            return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'PlaneAndSp' + 'here'](_0x39018d, _0xae8bef) {
            var _0xf4ead4 = _0xae8bef['radius'], _0x5d0d38 = _0x352206['dot'](_0x39018d['normal'], _0xae8bef['center']) + _0x39018d['distance'];
            if (_0x5d0d38 > _0xf4ead4)
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'];
            if (_0x5d0d38 < -_0xf4ead4)
                return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'];
            return _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'BoxAndBox'](_0x16ab3d, _0x42cb7b) {
            var _0x3efe4d = _0x16ab3d['min'], _0x2cd923 = _0x16ab3d['max'], _0x521bbc = _0x42cb7b['min'], _0x58de1e = _0x42cb7b['max'];
            if (_0x3efe4d['x'] > _0x58de1e['x'] || _0x521bbc['x'] > _0x2cd923['x'])
                return ![];
            if (_0x3efe4d['y'] > _0x58de1e['y'] || _0x521bbc['y'] > _0x2cd923['y'])
                return ![];
            if (_0x3efe4d['z'] > _0x58de1e['z'] || _0x521bbc['z'] > _0x2cd923['z'])
                return ![];
            return !![];
        }
        static ['intersects' + 'BoxAndSphe' + 're'](_0x3f400a, _0x55bcf5) {
            var _0x186f30 = _0x55bcf5['center'], _0x48c1d4 = _0x55bcf5['radius'], _0x3faff4 = _0xefe37['_tempV30'];
            _0x352206['Clamp'](_0x186f30, _0x3f400a['min'], _0x3f400a['max'], _0x3faff4);
            var _0x5a40df = _0x352206['distanceSq' + 'uared'](_0x186f30, _0x3faff4);
            return _0x5a40df <= _0x48c1d4 * _0x48c1d4;
        }
        static ['intersects' + 'SphereAndS' + 'phere'](_0x2d3458, _0x20d434) {
            var _0x5cf21c = _0x2d3458['radius'] + _0x20d434['radius'];
            return _0x352206['distanceSq' + 'uared'](_0x2d3458['center'], _0x20d434['center']) <= _0x5cf21c * _0x5cf21c;
        }
        static ['boxContain' + 'sPoint'](_0x5dee77, _0x10b707) {
            var _0x196c62 = _0x5dee77['min'], _0x25e534 = _0x5dee77['max'];
            if (_0x196c62['x'] <= _0x10b707['x'] && _0x25e534['x'] >= _0x10b707['x'] && _0x196c62['y'] <= _0x10b707['y'] && _0x25e534['y'] >= _0x10b707['y'] && _0x196c62['z'] <= _0x10b707['z'] && _0x25e534['z'] >= _0x10b707['z'])
                return _0x93aded['Contains'];
            return _0x93aded['Disjoint'];
        }
        static ['boxContain' + 'sBox'](_0x366223, _0x5aedbb) {
            var _0x221683 = _0x366223['min'], _0x57f331 = _0x221683['x'], _0x557ea0 = _0x221683['y'], _0x1db2b8 = _0x221683['z'], _0x1423c7 = _0x366223['max'], _0x465b62 = _0x1423c7['x'], _0x565aad = _0x1423c7['y'], _0x190441 = _0x1423c7['z'], _0x646777 = _0x5aedbb['min'], _0x92231a = _0x646777['x'], _0x36e6a6 = _0x646777['y'], _0x57490b = _0x646777['z'], _0x303d9d = _0x5aedbb['max'], _0xf202dc = _0x303d9d['x'], _0x584822 = _0x303d9d['y'], _0x5acdc8 = _0x303d9d['z'];
            if (_0x465b62 < _0x92231a || _0x57f331 > _0xf202dc)
                return _0x93aded['Disjoint'];
            if (_0x565aad < _0x36e6a6 || _0x557ea0 > _0x584822)
                return _0x93aded['Disjoint'];
            if (_0x190441 < _0x57490b || _0x1db2b8 > _0x5acdc8)
                return _0x93aded['Disjoint'];
            if (_0x57f331 <= _0x92231a && _0xf202dc <= _0x465b62 && _0x557ea0 <= _0x36e6a6 && _0x584822 <= _0x565aad && _0x1db2b8 <= _0x57490b && _0x5acdc8 <= _0x190441)
                return _0x93aded['Contains'];
            return _0x93aded['Intersects'];
        }
        static ['boxContain' + 'sSphere'](_0x19f6c4, _0xcc0aa6) {
            var _0x324a00 = _0x19f6c4['min'], _0x44a973 = _0x324a00['x'], _0x5da8d2 = _0x324a00['y'], _0x2d42c9 = _0x324a00['z'], _0x1bf8b1 = _0x19f6c4['max'], _0x31a0ef = _0x1bf8b1['x'], _0x44c3f3 = _0x1bf8b1['y'], _0x562319 = _0x1bf8b1['z'], _0x373a15 = _0xcc0aa6['center'], _0x2b9de4 = _0x373a15['x'], _0x1c1c94 = _0x373a15['y'], _0x15ee58 = _0x373a15['z'], _0x545b77 = _0xcc0aa6['radius'];
            _0x352206['Clamp'](_0x373a15, _0x324a00, _0x1bf8b1, _0xefe37['_tempV30']);
            var _0x38d671 = _0x352206['distanceSq' + 'uared'](_0x373a15, _0xefe37['_tempV30']);
            if (_0x38d671 > _0x545b77 * _0x545b77)
                return _0x93aded['Disjoint'];
            if (_0x44a973 + _0x545b77 <= _0x2b9de4 && _0x2b9de4 <= _0x31a0ef - _0x545b77 && (_0x31a0ef - _0x44a973 > _0x545b77 && _0x5da8d2 + _0x545b77 <= _0x1c1c94) && (_0x1c1c94 <= _0x44c3f3 - _0x545b77 && _0x44c3f3 - _0x5da8d2 > _0x545b77 && (_0x2d42c9 + _0x545b77 <= _0x15ee58 && _0x15ee58 <= _0x562319 - _0x545b77 && _0x562319 - _0x2d42c9 > _0x545b77)))
                return _0x93aded['Contains'];
            return _0x93aded['Intersects'];
        }
        static ['sphereCont' + 'ainsPoint'](_0x53fb25, _0x358d03) {
            if (_0x352206['distanceSq' + 'uared'](_0x358d03, _0x53fb25['center']) <= _0x53fb25['radius'] * _0x53fb25['radius'])
                return _0x93aded['Contains'];
            return _0x93aded['Disjoint'];
        }
        static ['sphereCont' + 'ainsTriang' + 'le'](_0x750592, _0x59b8b9, _0x53cb1f, _0x331545) {
            var _0x1a1602 = _0xefe37['sphereCont' + 'ainsPoint'](_0x750592, _0x59b8b9), _0x4858d2 = _0xefe37['sphereCont' + 'ainsPoint'](_0x750592, _0x53cb1f), _0x50104b = _0xefe37['sphereCont' + 'ainsPoint'](_0x750592, _0x331545);
            if (_0x1a1602 == _0x93aded['Contains'] && _0x4858d2 == _0x93aded['Contains'] && _0x50104b == _0x93aded['Contains'])
                return _0x93aded['Contains'];
            if (_0xefe37['intersects' + 'SphereAndT' + 'riangle'](_0x750592, _0x59b8b9, _0x53cb1f, _0x331545))
                return _0x93aded['Intersects'];
            return _0x93aded['Disjoint'];
        }
        static ['sphereCont' + 'ainsBox'](_0x3b5a97, _0x167d60) {
            var _0x1e4b54 = _0x3b5a97['center'], _0x511661 = _0x1e4b54['x'], _0x116375 = _0x1e4b54['y'], _0x3ab23d = _0x1e4b54['z'], _0x628823 = _0x3b5a97['radius'], _0x295104 = _0x167d60['min'], _0xff4929 = _0x295104['x'], _0x536e64 = _0x295104['y'], _0x165df7 = _0x295104['z'], _0x5b7a91 = _0x167d60['max'], _0x10e759 = _0x5b7a91['x'], _0x4fafc8 = _0x5b7a91['y'], _0x38eb89 = _0x5b7a91['z'], _0x21777e = _0xefe37['_tempV30'], _0x54ff36 = _0x21777e['x'], _0x5a4631 = _0x21777e['y'], _0x1c0e59 = _0x21777e['z'];
            if (!_0xefe37['intersects' + 'BoxAndSphe' + 're'](_0x167d60, _0x3b5a97))
                return _0x93aded['Disjoint'];
            var _0x23ebc1 = _0x628823 * _0x628823;
            _0x54ff36 = _0x511661 - _0xff4929, _0x5a4631 = _0x116375 - _0x4fafc8, _0x1c0e59 = _0x3ab23d - _0x38eb89;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0x10e759, _0x5a4631 = _0x116375 - _0x4fafc8, _0x1c0e59 = _0x3ab23d - _0x38eb89;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0x10e759, _0x5a4631 = _0x116375 - _0x536e64, _0x1c0e59 = _0x3ab23d - _0x38eb89;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0xff4929, _0x5a4631 = _0x116375 - _0x536e64, _0x1c0e59 = _0x3ab23d - _0x38eb89;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0xff4929, _0x5a4631 = _0x116375 - _0x4fafc8, _0x1c0e59 = _0x3ab23d - _0x165df7;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0x10e759, _0x5a4631 = _0x116375 - _0x4fafc8, _0x1c0e59 = _0x3ab23d - _0x165df7;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0x10e759, _0x5a4631 = _0x116375 - _0x536e64, _0x1c0e59 = _0x3ab23d - _0x165df7;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            _0x54ff36 = _0x511661 - _0xff4929, _0x5a4631 = _0x116375 - _0x536e64, _0x1c0e59 = _0x3ab23d - _0x165df7;
            if (_0x352206['scalarLeng' + 'thSquared'](_0xefe37['_tempV30']) > _0x23ebc1)
                return _0x93aded['Intersects'];
            return _0x93aded['Contains'];
        }
        static ['sphereCont' + 'ainsSphere'](_0x5806a5, _0x4ce45b) {
            var _0x47cfb2 = _0x5806a5['radius'], _0x1ac81d = _0x4ce45b['radius'], _0x44f937 = _0x352206['distance'](_0x5806a5['center'], _0x4ce45b['center']);
            if (_0x47cfb2 + _0x1ac81d < _0x44f937)
                return _0x93aded['Disjoint'];
            if (_0x47cfb2 - _0x1ac81d < _0x44f937)
                return _0x93aded['Intersects'];
            return _0x93aded['Contains'];
        }
        static ['closestPoi' + 'ntPointTri' + 'angle'](_0xb4b843, _0x6c0bdf, _0x22b637, _0x3459d5, _0x5c8bca) {
            _0x352206['subtract'](_0x22b637, _0x6c0bdf, _0xefe37['_tempV30']), _0x352206['subtract'](_0x3459d5, _0x6c0bdf, _0xefe37['_tempV31']), _0x352206['subtract'](_0xb4b843, _0x6c0bdf, _0xefe37['_tempV32']), _0x352206['subtract'](_0xb4b843, _0x22b637, _0xefe37['_tempV33']), _0x352206['subtract'](_0xb4b843, _0x3459d5, _0xefe37['_tempV34']);
            var _0x2fdcac = _0x352206['dot'](_0xefe37['_tempV30'], _0xefe37['_tempV32']), _0x460481 = _0x352206['dot'](_0xefe37['_tempV31'], _0xefe37['_tempV32']), _0x244e2b = _0x352206['dot'](_0xefe37['_tempV30'], _0xefe37['_tempV33']), _0xde3fd = _0x352206['dot'](_0xefe37['_tempV31'], _0xefe37['_tempV33']), _0x2e8dc4 = _0x352206['dot'](_0xefe37['_tempV30'], _0xefe37['_tempV34']), _0x1dc5a7 = _0x352206['dot'](_0xefe37['_tempV31'], _0xefe37['_tempV34']);
            if (_0x2fdcac <= 0x0 && _0x460481 <= 0x0) {
                _0x6c0bdf['cloneTo'](_0x5c8bca);
                return;
            }
            if (_0x244e2b >= 0x0 && _0xde3fd <= _0x244e2b) {
                _0x22b637['cloneTo'](_0x5c8bca);
                return;
            }
            var _0x1ef8cc = _0x2fdcac * _0xde3fd - _0x244e2b * _0x460481;
            if (_0x1ef8cc <= 0x0 && _0x2fdcac >= 0x0 && _0x244e2b <= 0x0) {
                var _0x2279ad = _0x2fdcac / (_0x2fdcac - _0x244e2b);
                _0x352206['scale'](_0xefe37['_tempV30'], _0x2279ad, _0x5c8bca), _0x352206['add'](_0x6c0bdf, _0x5c8bca, _0x5c8bca);
                return;
            }
            if (_0x1dc5a7 >= 0x0 && _0x2e8dc4 <= _0x1dc5a7) {
                _0x3459d5['cloneTo'](_0x5c8bca);
                return;
            }
            var _0x8d4768 = _0x2e8dc4 * _0x460481 - _0x2fdcac * _0x1dc5a7;
            if (_0x8d4768 <= 0x0 && _0x460481 >= 0x0 && _0x1dc5a7 <= 0x0) {
                var _0x42fcb8 = _0x460481 / (_0x460481 - _0x1dc5a7);
                _0x352206['scale'](_0xefe37['_tempV31'], _0x42fcb8, _0x5c8bca), _0x352206['add'](_0x6c0bdf, _0x5c8bca, _0x5c8bca);
                return;
            }
            var _0x67e1f3 = _0x244e2b * _0x1dc5a7 - _0x2e8dc4 * _0xde3fd;
            if (_0x67e1f3 <= 0x0 && _0xde3fd - _0x244e2b >= 0x0 && _0x2e8dc4 - _0x1dc5a7 >= 0x0) {
                var _0xabf861 = (_0xde3fd - _0x244e2b) / (_0xde3fd - _0x244e2b + (_0x2e8dc4 - _0x1dc5a7));
                _0x352206['subtract'](_0x3459d5, _0x22b637, _0x5c8bca), _0x352206['scale'](_0x5c8bca, _0xabf861, _0x5c8bca), _0x352206['add'](_0x22b637, _0x5c8bca, _0x5c8bca);
                return;
            }
            var _0x1ba1e2 = 0x1 / (_0x67e1f3 + _0x8d4768 + _0x1ef8cc), _0x2c47d2 = _0x8d4768 * _0x1ba1e2, _0x48d157 = _0x1ef8cc * _0x1ba1e2;
            _0x352206['scale'](_0xefe37['_tempV30'], _0x2c47d2, _0xefe37['_tempV35']), _0x352206['scale'](_0xefe37['_tempV31'], _0x48d157, _0xefe37['_tempV36']), _0x352206['add'](_0xefe37['_tempV35'], _0xefe37['_tempV36'], _0x5c8bca), _0x352206['add'](_0x6c0bdf, _0x5c8bca, _0x5c8bca);
        }
        static ['closestPoi' + 'ntPlanePoi' + 'nt'](_0x555639, _0x27d321, _0x5d929b) {
            var _0x570bcf = _0x555639['normal'], _0x88f514 = _0x352206['dot'](_0x570bcf, _0x27d321) - _0x555639['distance'];
            _0x352206['scale'](_0x570bcf, _0x88f514, _0xefe37['_tempV30']), _0x352206['subtract'](_0x27d321, _0xefe37['_tempV30'], _0x5d929b);
        }
        static ['closestPoi' + 'ntBoxPoint'](_0x3614a2, _0x225f80, _0x4e3c76) {
            _0x352206['max'](_0x225f80, _0x3614a2['min'], _0xefe37['_tempV30']), _0x352206['min'](_0xefe37['_tempV30'], _0x3614a2['max'], _0x4e3c76);
        }
        static ['closestPoi' + 'ntSpherePo' + 'int'](_0x44670c, _0x4cc811, _0x5d15ba) {
            var _0x491034 = _0x44670c['center'];
            _0x352206['subtract'](_0x4cc811, _0x491034, _0x5d15ba), _0x352206['normalize'](_0x5d15ba, _0x5d15ba), _0x352206['scale'](_0x5d15ba, _0x44670c['radius'], _0x5d15ba), _0x352206['add'](_0x5d15ba, _0x491034, _0x5d15ba);
        }
        static ['closestPoi' + 'ntSphereSp' + 'here'](_0x257722, _0xd71178, _0x26361c) {
            var _0x4ca3be = _0x257722['center'];
            _0x352206['subtract'](_0xd71178['center'], _0x4ca3be, _0x26361c), _0x352206['normalize'](_0x26361c, _0x26361c), _0x352206['scale'](_0x26361c, _0x257722['radius'], _0x26361c), _0x352206['add'](_0x26361c, _0x4ca3be, _0x26361c);
        }
    }
    _0xefe37['_tempV30'] = new _0x352206(), _0xefe37['_tempV31'] = new _0x352206(), _0xefe37['_tempV32'] = new _0x352206(), _0xefe37['_tempV33'] = new _0x352206(), _0xefe37['_tempV34'] = new _0x352206(), _0xefe37['_tempV35'] = new _0x352206(), _0xefe37['_tempV36'] = new _0x352206(), function (_0x1248dc) {
        _0x1248dc[_0x1248dc['FarBottomL' + 'eft'] = 0x0] = 'FarBottomL' + 'eft', _0x1248dc[_0x1248dc['FarTopLeft'] = 0x1] = 'FarTopLeft', _0x1248dc[_0x1248dc['FarTopRigh' + 't'] = 0x2] = 'FarTopRigh' + 't', _0x1248dc[_0x1248dc['FarBottomR' + 'ight'] = 0x3] = 'FarBottomR' + 'ight', _0x1248dc[_0x1248dc['nearBottom' + 'Left'] = 0x4] = 'nearBottom' + 'Left', _0x1248dc[_0x1248dc['nearTopLef' + 't'] = 0x5] = 'nearTopLef' + 't', _0x1248dc[_0x1248dc['nearTopRig' + 'ht'] = 0x6] = 'nearTopRig' + 'ht', _0x1248dc[_0x1248dc['nearBottom' + 'Right'] = 0x7] = 'nearBottom' + 'Right', _0x1248dc[_0x1248dc['unknown'] = 0x8] = 'unknown';
    }(_0x1f405c['FrustumCor' + 'ner'] || (_0x1f405c['FrustumCor' + 'ner'] = {}));
    class _0x4fa1ff {
        constructor(_0xe10a0a) {
            this['_matrix'] = _0xe10a0a, this['_near'] = new _0x1fee56(new _0x352206()), this['_far'] = new _0x1fee56(new _0x352206()), this['_left'] = new _0x1fee56(new _0x352206()), this['_right'] = new _0x1fee56(new _0x352206()), this['_top'] = new _0x1fee56(new _0x352206()), this['_bottom'] = new _0x1fee56(new _0x352206()), _0x4fa1ff['getPlanesF' + 'romMatrix'](this['_matrix'], this['_near'], this['_far'], this['_left'], this['_right'], this['_top'], this['_bottom']);
        }
        static ['getPlanesF' + 'romMatrix'](_0x38a890, _0x1a242e, _0xf314f7, _0x1cb553, _0x4e6d55, _0x1a5d60, _0x4200ad) {
            var _0x7085f = _0x38a890['elements'], _0x59fefe = _0x7085f[0x0], _0x5b8849 = _0x7085f[0x1], _0x1f8e71 = _0x7085f[0x2], _0x4387ca = _0x7085f[0x3], _0x57039d = _0x7085f[0x4], _0x16118a = _0x7085f[0x5], _0x709f26 = _0x7085f[0x6], _0x663b09 = _0x7085f[0x7], _0x5b0e30 = _0x7085f[0x8], _0x3cad8f = _0x7085f[0x9], _0x28a294 = _0x7085f[0xa], _0x8542c1 = _0x7085f[0xb], _0x20c79e = _0x7085f[0xc], _0x28c1ab = _0x7085f[0xd], _0x2a2d41 = _0x7085f[0xe], _0x549674 = _0x7085f[0xf], _0x140824 = _0x1a242e['normal'];
            _0x140824['x'] = _0x1f8e71, _0x140824['y'] = _0x709f26, _0x140824['z'] = _0x28a294, _0x1a242e['distance'] = _0x2a2d41, _0x1a242e['normalize']();
            var _0x4a0b8b = _0xf314f7['normal'];
            _0x4a0b8b['x'] = _0x4387ca - _0x1f8e71, _0x4a0b8b['y'] = _0x663b09 - _0x709f26, _0x4a0b8b['z'] = _0x8542c1 - _0x28a294, _0xf314f7['distance'] = _0x549674 - _0x2a2d41, _0xf314f7['normalize']();
            var _0x139cdd = _0x1cb553['normal'];
            _0x139cdd['x'] = _0x4387ca + _0x59fefe, _0x139cdd['y'] = _0x663b09 + _0x57039d, _0x139cdd['z'] = _0x8542c1 + _0x5b0e30, _0x1cb553['distance'] = _0x549674 + _0x20c79e, _0x1cb553['normalize']();
            var _0x38c8fd = _0x4e6d55['normal'];
            _0x38c8fd['x'] = _0x4387ca - _0x59fefe, _0x38c8fd['y'] = _0x663b09 - _0x57039d, _0x38c8fd['z'] = _0x8542c1 - _0x5b0e30, _0x4e6d55['distance'] = _0x549674 - _0x20c79e, _0x4e6d55['normalize']();
            var _0x56623f = _0x1a5d60['normal'];
            _0x56623f['x'] = _0x4387ca - _0x5b8849, _0x56623f['y'] = _0x663b09 - _0x16118a, _0x56623f['z'] = _0x8542c1 - _0x3cad8f, _0x1a5d60['distance'] = _0x549674 - _0x28c1ab, _0x1a5d60['normalize']();
            var _0x16fd47 = _0x4200ad['normal'];
            _0x16fd47['x'] = _0x4387ca + _0x5b8849, _0x16fd47['y'] = _0x663b09 + _0x16118a, _0x16fd47['z'] = _0x8542c1 + _0x3cad8f, _0x4200ad['distance'] = _0x549674 + _0x28c1ab, _0x4200ad['normalize']();
        }
        get ['matrix']() {
            return this['_matrix'];
        }
        set ['matrix'](_0x2122d9) {
            _0x2122d9['cloneTo'](this['_matrix']), _0x4fa1ff['getPlanesF' + 'romMatrix'](this['_matrix'], this['_near'], this['_far'], this['_left'], this['_right'], this['_top'], this['_bottom']);
        }
        get ['near']() {
            return this['_near'];
        }
        get ['far']() {
            return this['_far'];
        }
        get ['left']() {
            return this['_left'];
        }
        get ['right']() {
            return this['_right'];
        }
        get ['top']() {
            return this['_top'];
        }
        get ['bottom']() {
            return this['_bottom'];
        }
        ['equalsBoun' + 'dFrustum'](_0x42496b) {
            return this['_matrix']['equalsOthe' + 'rMatrix'](_0x42496b['matrix']);
        }
        ['equalsObj'](_0xea1052) {
            if (_0xea1052 instanceof _0x4fa1ff) {
                var _0x409a95 = _0xea1052;
                return this['equalsBoun' + 'dFrustum'](_0x409a95);
            }
            return ![];
        }
        ['getPlane'](_0x1b0aed) {
            switch (_0x1b0aed) {
            case 0x0:
                return this['_near'];
            case 0x1:
                return this['_far'];
            case 0x2:
                return this['_left'];
            case 0x3:
                return this['_right'];
            case 0x4:
                return this['_top'];
            case 0x5:
                return this['_bottom'];
            default:
                return null;
            }
        }
        static ['get3PlaneI' + 'nterPoint'](_0x4ddf7a, _0x3e300f, _0x4061e0, _0x13898e) {
            var _0x36986b = _0x4ddf7a['normal'], _0x566d03 = _0x3e300f['normal'], _0x1fbda3 = _0x4061e0['normal'];
            _0x352206['cross'](_0x566d03, _0x1fbda3, _0x4fa1ff['_tempV30']), _0x352206['cross'](_0x1fbda3, _0x36986b, _0x4fa1ff['_tempV31']), _0x352206['cross'](_0x36986b, _0x566d03, _0x4fa1ff['_tempV32']);
            var _0x33058a = _0x352206['dot'](_0x36986b, _0x4fa1ff['_tempV30']), _0x5c90d3 = _0x352206['dot'](_0x566d03, _0x4fa1ff['_tempV31']), _0x1e0cda = _0x352206['dot'](_0x1fbda3, _0x4fa1ff['_tempV32']);
            _0x352206['scale'](_0x4fa1ff['_tempV30'], -_0x4ddf7a['distance'] / _0x33058a, _0x4fa1ff['_tempV33']), _0x352206['scale'](_0x4fa1ff['_tempV31'], -_0x3e300f['distance'] / _0x5c90d3, _0x4fa1ff['_tempV34']), _0x352206['scale'](_0x4fa1ff['_tempV32'], -_0x4061e0['distance'] / _0x1e0cda, _0x4fa1ff['_tempV35']), _0x352206['add'](_0x4fa1ff['_tempV33'], _0x4fa1ff['_tempV34'], _0x4fa1ff['_tempV36']), _0x352206['add'](_0x4fa1ff['_tempV35'], _0x4fa1ff['_tempV36'], _0x13898e);
        }
        ['getCorners'](_0x1de747) {
            _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_near'], this['_bottom'], this['_right'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_near'], this['_top'], this['_right'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_near'], this['_top'], this['_left'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_near'], this['_bottom'], this['_left'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_far'], this['_bottom'], this['_right'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_far'], this['_top'], this['_right'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_far'], this['_top'], this['_left'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['FarTopLeft']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](this['_far'], this['_bottom'], this['_left'], _0x1de747[_0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft']]);
        }
        ['containsPo' + 'int'](_0x25d7d5) {
            var _0x29cb01 = _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x48ba24 = _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'];
            for (var _0x26214c = 0x0; _0x26214c < 0x6; _0x26214c++) {
                switch (_0x26214c) {
                case 0x0:
                    _0x48ba24 = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](this['_near'], _0x25d7d5);
                    break;
                case 0x1:
                    _0x48ba24 = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](this['_far'], _0x25d7d5);
                    break;
                case 0x2:
                    _0x48ba24 = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](this['_left'], _0x25d7d5);
                    break;
                case 0x3:
                    _0x48ba24 = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](this['_right'], _0x25d7d5);
                    break;
                case 0x4:
                    _0x48ba24 = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](this['_top'], _0x25d7d5);
                    break;
                case 0x5:
                    _0x48ba24 = _0xefe37['intersects' + 'PlaneAndPo' + 'int'](this['_bottom'], _0x25d7d5);
                    break;
                }
                switch (_0x48ba24) {
                case _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back']:
                    return _0x93aded['Disjoint'];
                case _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                    _0x29cb01 = _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
                    break;
                }
            }
            switch (_0x29cb01) {
            case _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                return _0x93aded['Intersects'];
            default:
                return _0x93aded['Contains'];
            }
        }
        ['intersects'](_0x33c6f2) {
            var _0x5ea731 = _0x33c6f2['min'], _0x46e0f1 = _0x33c6f2['max'], _0x257abe = _0x5ea731['x'], _0x31c408 = _0x5ea731['y'], _0xcb518a = _0x5ea731['z'], _0x4f4fc5 = _0x46e0f1['x'], _0x44c656 = _0x46e0f1['y'], _0xea374b = _0x46e0f1['z'], _0x4f6619 = this['_near']['normal'];
            if (this['_near']['distance'] + _0x4f6619['x'] * (_0x4f6619['x'] < 0x0 ? _0x257abe : _0x4f4fc5) + _0x4f6619['y'] * (_0x4f6619['y'] < 0x0 ? _0x31c408 : _0x44c656) + _0x4f6619['z'] * (_0x4f6619['z'] < 0x0 ? _0xcb518a : _0xea374b) < 0x0)
                return ![];
            var _0x533c9c = this['_left']['normal'];
            if (this['_left']['distance'] + _0x533c9c['x'] * (_0x533c9c['x'] < 0x0 ? _0x257abe : _0x4f4fc5) + _0x533c9c['y'] * (_0x533c9c['y'] < 0x0 ? _0x31c408 : _0x44c656) + _0x533c9c['z'] * (_0x533c9c['z'] < 0x0 ? _0xcb518a : _0xea374b) < 0x0)
                return ![];
            var _0x3ae670 = this['_right']['normal'];
            if (this['_right']['distance'] + _0x3ae670['x'] * (_0x3ae670['x'] < 0x0 ? _0x257abe : _0x4f4fc5) + _0x3ae670['y'] * (_0x3ae670['y'] < 0x0 ? _0x31c408 : _0x44c656) + _0x3ae670['z'] * (_0x3ae670['z'] < 0x0 ? _0xcb518a : _0xea374b) < 0x0)
                return ![];
            var _0x2068af = this['_bottom']['normal'];
            if (this['_bottom']['distance'] + _0x2068af['x'] * (_0x2068af['x'] < 0x0 ? _0x257abe : _0x4f4fc5) + _0x2068af['y'] * (_0x2068af['y'] < 0x0 ? _0x31c408 : _0x44c656) + _0x2068af['z'] * (_0x2068af['z'] < 0x0 ? _0xcb518a : _0xea374b) < 0x0)
                return ![];
            var _0x575144 = this['_top']['normal'];
            if (this['_top']['distance'] + _0x575144['x'] * (_0x575144['x'] < 0x0 ? _0x257abe : _0x4f4fc5) + _0x575144['y'] * (_0x575144['y'] < 0x0 ? _0x31c408 : _0x44c656) + _0x575144['z'] * (_0x575144['z'] < 0x0 ? _0xcb518a : _0xea374b) < 0x0)
                return ![];
            var _0x213493 = this['_far']['normal'];
            if (this['_far']['distance'] + _0x213493['x'] * (_0x213493['x'] < 0x0 ? _0x257abe : _0x4f4fc5) + _0x213493['y'] * (_0x213493['y'] < 0x0 ? _0x31c408 : _0x44c656) + _0x213493['z'] * (_0x213493['z'] < 0x0 ? _0xcb518a : _0xea374b) < 0x0)
                return ![];
            return !![];
        }
        ['containsBo' + 'undBox'](_0x52ea5c) {
            var _0x450148 = _0x4fa1ff['_tempV30'], _0x3cb549 = _0x4fa1ff['_tempV31'], _0x3fdb46 = _0x52ea5c['min'], _0x4b9f36 = _0x52ea5c['max'], _0xb8f28a = _0x93aded['Contains'];
            for (var _0x42f085 = 0x0; _0x42f085 < 0x6; _0x42f085++) {
                var _0x306a5f = this['getPlane'](_0x42f085), _0x13053f = _0x306a5f['normal'];
                _0x13053f['x'] >= 0x0 ? (_0x450148['x'] = _0x4b9f36['x'], _0x3cb549['x'] = _0x3fdb46['x']) : (_0x450148['x'] = _0x3fdb46['x'], _0x3cb549['x'] = _0x4b9f36['x']);
                _0x13053f['y'] >= 0x0 ? (_0x450148['y'] = _0x4b9f36['y'], _0x3cb549['y'] = _0x3fdb46['y']) : (_0x450148['y'] = _0x3fdb46['y'], _0x3cb549['y'] = _0x4b9f36['y']);
                _0x13053f['z'] >= 0x0 ? (_0x450148['z'] = _0x4b9f36['z'], _0x3cb549['z'] = _0x3fdb46['z']) : (_0x450148['z'] = _0x3fdb46['z'], _0x3cb549['z'] = _0x4b9f36['z']);
                if (_0xefe37['intersects' + 'PlaneAndPo' + 'int'](_0x306a5f, _0x450148) === _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'])
                    return _0x93aded['Disjoint'];
                if (_0xefe37['intersects' + 'PlaneAndPo' + 'int'](_0x306a5f, _0x3cb549) === _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back'])
                    _0xb8f28a = _0x93aded['Intersects'];
            }
            return _0xb8f28a;
        }
        ['containsBo' + 'undSphere'](_0x306281) {
            var _0x2c3b1c = _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'], _0xbe1763 = _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Front'];
            for (var _0x5cc596 = 0x0; _0x5cc596 < 0x6; _0x5cc596++) {
                switch (_0x5cc596) {
                case 0x0:
                    _0xbe1763 = _0xefe37['intersects' + 'PlaneAndSp' + 'here'](this['_near'], _0x306281);
                    break;
                case 0x1:
                    _0xbe1763 = _0xefe37['intersects' + 'PlaneAndSp' + 'here'](this['_far'], _0x306281);
                    break;
                case 0x2:
                    _0xbe1763 = _0xefe37['intersects' + 'PlaneAndSp' + 'here'](this['_left'], _0x306281);
                    break;
                case 0x3:
                    _0xbe1763 = _0xefe37['intersects' + 'PlaneAndSp' + 'here'](this['_right'], _0x306281);
                    break;
                case 0x4:
                    _0xbe1763 = _0xefe37['intersects' + 'PlaneAndSp' + 'here'](this['_top'], _0x306281);
                    break;
                case 0x5:
                    _0xbe1763 = _0xefe37['intersects' + 'PlaneAndSp' + 'here'](this['_bottom'], _0x306281);
                    break;
                }
                switch (_0xbe1763) {
                case _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Back']:
                    return _0x93aded['Disjoint'];
                case _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                    _0x2c3b1c = _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
                    break;
                }
            }
            switch (_0x2c3b1c) {
            case _0x1fee56['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                return _0x93aded['Intersects'];
            default:
                return _0x93aded['Contains'];
            }
        }
    }
    _0x4fa1ff['_tempV30'] = new _0x352206(), _0x4fa1ff['_tempV31'] = new _0x352206(), _0x4fa1ff['_tempV32'] = new _0x352206(), _0x4fa1ff['_tempV33'] = new _0x352206(), _0x4fa1ff['_tempV34'] = new _0x352206(), _0x4fa1ff['_tempV35'] = new _0x352206(), _0x4fa1ff['_tempV36'] = new _0x352206();
    class _0x2b4b54 {
        constructor(_0x286028, _0x23e400, _0xc1fab4, _0x526e17) {
            this['minDepth'] = 0x0, this['maxDepth'] = 0x1, this['x'] = _0x286028, this['y'] = _0x23e400, this['width'] = _0xc1fab4, this['height'] = _0x526e17;
        }
        ['project'](_0x47bc82, _0x1fa49d, _0x295028) {
            _0x352206['transformV' + '3ToV4'](_0x47bc82, _0x1fa49d, _0x295028);
            var _0x3c7e5d = _0x295028['x'], _0x3a920c = _0x295028['y'], _0xf15ffd = _0x295028['z'], _0x164ac9 = _0x295028['w'];
            _0x164ac9 !== 0x1 && (_0x3c7e5d = _0x3c7e5d / _0x164ac9, _0x3a920c = _0x3a920c / _0x164ac9, _0xf15ffd = _0xf15ffd / _0x164ac9), _0x295028['x'] = (_0x3c7e5d + 0x1) * 0.5 * this['width'] + this['x'], _0x295028['y'] = (-_0x3a920c + 0x1) * 0.5 * this['height'] + this['y'], _0x295028['z'] = _0xf15ffd * (this['maxDepth'] - this['minDepth']) + this['minDepth'];
        }
        ['unprojectF' + 'romMat'](_0x3c5c63, _0x310f20, _0x5e39f6) {
            var _0x209828 = _0x310f20['elements'];
            _0x5e39f6['x'] = (_0x3c5c63['x'] - this['x']) / this['width'] * 0x2 - 0x1, _0x5e39f6['y'] = -((_0x3c5c63['y'] - this['y']) / this['height'] * 0x2 - 0x1), _0x5e39f6['z'] = (_0x3c5c63['z'] - this['minDepth']) / (this['maxDepth'] - this['minDepth']);
            var _0x283092 = _0x5e39f6['x'] * _0x209828[0x3] + _0x5e39f6['y'] * _0x209828[0x7] + _0x5e39f6['z'] * _0x209828[0xb] + _0x209828[0xf];
            _0x352206['transformV' + '3ToV3'](_0x5e39f6, _0x310f20, _0x5e39f6), _0x283092 !== 0x1 && (_0x5e39f6['x'] = _0x5e39f6['x'] / _0x283092, _0x5e39f6['y'] = _0x5e39f6['y'] / _0x283092, _0x5e39f6['z'] = _0x5e39f6['z'] / _0x283092);
        }
        ['unprojectF' + 'romWVP'](_0x524e11, _0x5026f1, _0x6c185c, _0x8a2e01, _0x1cdd89) {
            _0x4c2288['multiply'](_0x5026f1, _0x6c185c, _0x2b4b54['_tempMatri' + 'x4x4']), _0x8a2e01 && _0x4c2288['multiply'](_0x2b4b54['_tempMatri' + 'x4x4'], _0x8a2e01, _0x2b4b54['_tempMatri' + 'x4x4']), _0x2b4b54['_tempMatri' + 'x4x4']['invert'](_0x2b4b54['_tempMatri' + 'x4x4']), this['unprojectF' + 'romMat'](_0x524e11, _0x2b4b54['_tempMatri' + 'x4x4'], _0x1cdd89);
        }
        ['cloneTo'](_0x66da3c) {
            _0x66da3c['x'] = this['x'], _0x66da3c['y'] = this['y'], _0x66da3c['width'] = this['width'], _0x66da3c['height'] = this['height'], _0x66da3c['minDepth'] = this['minDepth'], _0x66da3c['maxDepth'] = this['maxDepth'];
        }
    }
    _0x2b4b54['_tempMatri' + 'x4x4'] = new _0x4c2288();
    class _0x42fa6d {
        constructor() {
        }
        static ['calculateC' + 'ursorRay'](_0xbac3c4, _0x101a9a, _0x576f38, _0x437102, _0x1a2836, _0x29671e) {
            var _0x171ac9 = _0xbac3c4['x'], _0x5288cf = _0xbac3c4['y'], _0x27334a = _0x42fa6d['_tempVecto' + 'r30'], _0xe22fb8 = _0x27334a;
            _0xe22fb8['x'] = _0x171ac9, _0xe22fb8['y'] = _0x5288cf, _0xe22fb8['z'] = _0x101a9a['minDepth'];
            var _0x5c2380 = _0x42fa6d['_tempVecto' + 'r31'], _0x50c621 = _0x5c2380;
            _0x50c621['x'] = _0x171ac9, _0x50c621['y'] = _0x5288cf, _0x50c621['z'] = _0x101a9a['maxDepth'];
            var _0x13e935 = _0x29671e['origin'], _0x14b61d = _0x42fa6d['_tempVecto' + 'r32'];
            _0x101a9a['unprojectF' + 'romWVP'](_0x27334a, _0x576f38, _0x437102, _0x1a2836, _0x13e935), _0x101a9a['unprojectF' + 'romWVP'](_0x5c2380, _0x576f38, _0x437102, _0x1a2836, _0x14b61d);
            var _0x24c1d8 = _0x29671e['direction'];
            _0x24c1d8['x'] = _0x14b61d['x'] - _0x13e935['x'], _0x24c1d8['y'] = _0x14b61d['y'] - _0x13e935['y'], _0x24c1d8['z'] = _0x14b61d['z'] - _0x13e935['z'], _0x352206['normalize'](_0x29671e['direction'], _0x29671e['direction']);
        }
        static ['rayInterse' + 'ctsTriangl' + 'e'](_0x512a2f, _0xff2f42, _0x3d8b7a, _0x12a0e8) {
            var _0x396fce, _0x50afa8 = _0x42fa6d['_tempVecto' + 'r30'], _0x52e316 = _0x42fa6d['_tempVecto' + 'r31'];
            _0x352206['subtract'](_0x3d8b7a, _0xff2f42, _0x50afa8), _0x352206['subtract'](_0x12a0e8, _0xff2f42, _0x52e316);
            var _0x3e438d = _0x42fa6d['_tempVecto' + 'r32'];
            _0x352206['cross'](_0x512a2f['direction'], _0x52e316, _0x3e438d);
            var _0xd8280a;
            _0xd8280a = _0x352206['dot'](_0x50afa8, _0x3e438d);
            if (_0xd8280a > -Number['MIN_VALUE'] && _0xd8280a < Number['MIN_VALUE'])
                return _0x396fce = Number['NaN'], _0x396fce;
            var _0x4af55e = 0x1 / _0xd8280a, _0x4ec32b = _0x42fa6d['_tempVecto' + 'r33'];
            _0x352206['subtract'](_0x512a2f['origin'], _0xff2f42, _0x4ec32b);
            var _0x5efcdd;
            _0x5efcdd = _0x352206['dot'](_0x4ec32b, _0x3e438d), _0x5efcdd *= _0x4af55e;
            if (_0x5efcdd < 0x0 || _0x5efcdd > 0x1)
                return _0x396fce = Number['NaN'], _0x396fce;
            var _0x2a34a7 = _0x42fa6d['_tempVecto' + 'r34'];
            _0x352206['cross'](_0x4ec32b, _0x50afa8, _0x2a34a7);
            var _0x3256ac;
            _0x3256ac = _0x352206['dot'](_0x512a2f['direction'], _0x2a34a7), _0x3256ac *= _0x4af55e;
            if (_0x3256ac < 0x0 || _0x5efcdd + _0x3256ac > 0x1)
                return _0x396fce = Number['NaN'], _0x396fce;
            var _0x58c448;
            _0x58c448 = _0x352206['dot'](_0x52e316, _0x2a34a7), _0x58c448 *= _0x4af55e;
            if (_0x58c448 < 0x0)
                return _0x396fce = Number['NaN'], _0x396fce;
            return _0x396fce = _0x58c448, _0x396fce;
        }
    }
    _0x42fa6d['_tempVecto' + 'r30'] = new _0x352206(), _0x42fa6d['_tempVecto' + 'r31'] = new _0x352206(), _0x42fa6d['_tempVecto' + 'r32'] = new _0x352206(), _0x42fa6d['_tempVecto' + 'r33'] = new _0x352206(), _0x42fa6d['_tempVecto' + 'r34'] = new _0x352206(), function (_0x1c03f2) {
        _0x1c03f2[_0x1c03f2['UInt8'] = 0x0] = 'UInt8', _0x1c03f2[_0x1c03f2['UInt16'] = 0x1] = 'UInt16', _0x1c03f2[_0x1c03f2['UInt32'] = 0x2] = 'UInt32';
    }(_0x1f405c['IndexForma' + 't'] || (_0x1f405c['IndexForma' + 't'] = {}));
    class _0x197184 extends _0x442335['Buffer'] {
        constructor(_0x130754, _0x3eb978, _0x29c340 = 0x88e4, _0x3a592c = ![]) {
            super(), this['_indexType'] = _0x130754, this['_indexCoun' + 't'] = _0x3eb978, this['_bufferUsa' + 'ge'] = _0x29c340, this['_bufferTyp' + 'e'] = _0x442335['LayaGL']['instance']['ELEMENT_AR' + 'RAY_BUFFER'], this['_canRead'] = _0x3a592c;
            switch (_0x130754) {
            case _0x1f405c['IndexForma' + 't']['UInt32']:
                this['_indexType' + 'ByteCount'] = 0x4;
                break;
            case _0x1f405c['IndexForma' + 't']['UInt16']:
                this['_indexType' + 'ByteCount'] = 0x2;
                break;
            case _0x1f405c['IndexForma' + 't']['UInt8']:
                this['_indexType' + 'ByteCount'] = 0x1;
                break;
            default:
                throw new Error('unidentifi' + 'cation\x20ind' + 'ex\x20type.');
            }
            var _0x1aa9e9 = this['_indexType' + 'ByteCount'] * _0x3eb978, _0x1bb297 = _0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'];
            this['_byteLengt' + 'h'] = _0x1aa9e9;
            _0x1bb297 ? _0x1bb297['_bindedInd' + 'exBuffer'] === this ? _0x442335['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x1aa9e9, this['_bufferUsa' + 'ge']) : (_0x1bb297['unBind'](), this['bind'](), _0x442335['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x1aa9e9, this['_bufferUsa' + 'ge']), _0x1bb297['bind']()) : (this['bind'](), _0x442335['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x1aa9e9, this['_bufferUsa' + 'ge']));
            if (_0x3a592c)
                switch (_0x130754) {
                case _0x1f405c['IndexForma' + 't']['UInt32']:
                    this['_buffer'] = new Uint32Array(_0x3eb978);
                    break;
                case _0x1f405c['IndexForma' + 't']['UInt16']:
                    this['_buffer'] = new Uint16Array(_0x3eb978);
                    break;
                case _0x1f405c['IndexForma' + 't']['UInt8']:
                    this['_buffer'] = new Uint8Array(_0x3eb978);
                    break;
                }
        }
        get ['indexType']() {
            return this['_indexType'];
        }
        get ['indexTypeB' + 'yteCount']() {
            return this['_indexType' + 'ByteCount'];
        }
        get ['indexCount']() {
            return this['_indexCoun' + 't'];
        }
        get ['canRead']() {
            return this['_canRead'];
        }
        ['_bindForVA' + 'O']() {
            if (_0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e']) {
                var _0x3627f4 = _0x442335['LayaGL']['instance'];
                _0x3627f4['bindBuffer'](_0x3627f4['ELEMENT_AR' + 'RAY_BUFFER'], this['_glBuffer']);
            } else
                throw 'IndexBuffe' + 'r3D:\x20must\x20' + 'bind\x20curre' + 'nt\x20BufferS' + 'tate.';
        }
        ['bind']() {
            if (_0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'])
                throw 'IndexBuffe' + 'r3D:\x20must\x20' + 'unbind\x20cur' + 'rent\x20Buffe' + 'rState.';
            else {
                if (_0x442335['Buffer']['_bindedInd' + 'exBuffer'] !== this['_glBuffer']) {
                    var _0x41aab9 = _0x442335['LayaGL']['instance'];
                    return _0x41aab9['bindBuffer'](_0x41aab9['ELEMENT_AR' + 'RAY_BUFFER'], this['_glBuffer']), _0x442335['Buffer']['_bindedInd' + 'exBuffer'] = this['_glBuffer'], !![];
                } else
                    return ![];
            }
        }
        ['setData'](_0x34a131, _0x44741d = 0x0, _0x48f4b4 = 0x0, _0x16f3b7 = 0xffffffff) {
            var _0x569d12 = this['_indexType' + 'ByteCount'];
            if (_0x48f4b4 !== 0x0 || _0x16f3b7 !== 0xffffffff)
                switch (this['_indexType']) {
                case _0x1f405c['IndexForma' + 't']['UInt32']:
                    _0x34a131 = new Uint32Array(_0x34a131['buffer'], _0x48f4b4 * _0x569d12, _0x16f3b7);
                    break;
                case _0x1f405c['IndexForma' + 't']['UInt16']:
                    _0x34a131 = new Uint16Array(_0x34a131['buffer'], _0x48f4b4 * _0x569d12, _0x16f3b7);
                    break;
                case _0x1f405c['IndexForma' + 't']['UInt8']:
                    _0x34a131 = new Uint8Array(_0x34a131['buffer'], _0x48f4b4 * _0x569d12, _0x16f3b7);
                    break;
                }
            var _0x39c33d = _0x442335['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'];
            _0x39c33d ? _0x39c33d['_bindedInd' + 'exBuffer'] === this ? _0x442335['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x44741d * _0x569d12, _0x34a131) : (_0x39c33d['unBind'](), this['bind'](), _0x442335['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x44741d * _0x569d12, _0x34a131), _0x39c33d['bind']()) : (this['bind'](), _0x442335['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x44741d * _0x569d12, _0x34a131));
            if (this['_canRead']) {
                if (_0x44741d !== 0x0 || _0x48f4b4 !== 0x0 || _0x16f3b7 !== 0xffffffff) {
                    var _0x1060d8 = this['_buffer']['length'] - _0x44741d;
                    if (_0x16f3b7 > _0x1060d8)
                        _0x16f3b7 = _0x1060d8;
                    for (var _0x3577aa = 0x0; _0x3577aa < _0x16f3b7; _0x3577aa++)
                        this['_buffer'][_0x44741d + _0x3577aa] = _0x34a131[_0x3577aa];
                } else
                    this['_buffer'] = _0x34a131;
            }
        }
        ['getData']() {
            if (this['_canRead'])
                return this['_buffer'];
            else
                throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['destroy']() {
            super['destroy'](), this['_buffer'] = null, this['_byteLengt' + 'h'] = 0x0, this['_indexCoun' + 't'] = 0x0;
        }
    }
    class _0x2a7b2f {
        static ['__init__']() {
            _0x2a7b2f['instanceWo' + 'rldMatrixD' + 'eclaration'] = new _0x19d0a5(0x40, [
                new _0x549a90(0x0, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '0']),
                new _0x549a90(0x10, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '1']),
                new _0x549a90(0x20, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '2']),
                new _0x549a90(0x30, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '3'])
            ]), _0x2a7b2f['instanceMV' + 'PMatrixDec' + 'laration'] = new _0x19d0a5(0x40, [
                new _0x549a90(0x0, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0']),
                new _0x549a90(0x10, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW1']),
                new _0x549a90(0x20, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW2']),
                new _0x549a90(0x30, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW3'])
            ]), _0x2a7b2f['instanceSi' + 'mpleAnimat' + 'orDeclarat' + 'ion'] = new _0x19d0a5(0x10, [new _0x549a90(0x0, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_SIMPL' + 'EANIMATOR'])]);
        }
        static ['getVertexD' + 'eclaration'](_0x3f0e2b, _0x20522a = !![]) {
            var _0x1af6e6 = _0x2a7b2f['_vertexDec' + 'larationMa' + 'p'][_0x3f0e2b + (_0x20522a ? '_0' : '_1')];
            if (!_0x1af6e6) {
                var _0xdd1b7f = _0x3f0e2b['split'](','), _0x3151e8 = 0x0, _0x58a828 = [];
                for (var _0x25006d = 0x0, _0x57d09b = _0xdd1b7f['length']; _0x25006d < _0x57d09b; _0x25006d++) {
                    var _0x1f6d60;
                    switch (_0xdd1b7f[_0x25006d]) {
                    case 'POSITION':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector3'], _0x2a7b2f['MESH_POSIT' + 'ION0']), _0x3151e8 += 0xc;
                        break;
                    case 'NORMAL':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector3'], _0x2a7b2f['MESH_NORMA' + 'L0']), _0x3151e8 += 0xc;
                        break;
                    case 'COLOR':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_COLOR' + '0']), _0x3151e8 += 0x10;
                        break;
                    case 'UV':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector2'], _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']), _0x3151e8 += 0x8;
                        break;
                    case 'UV1':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector2'], _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']), _0x3151e8 += 0x8;
                        break;
                    case 'BLENDWEIGH' + 'T':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_BLEND' + 'WEIGHT0']), _0x3151e8 += 0x10;
                        break;
                    case 'BLENDINDIC' + 'ES':
                        _0x20522a ? (_0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_BLEND' + 'INDICES0']), _0x3151e8 += 0x10) : (_0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Byte4'], _0x2a7b2f['MESH_BLEND' + 'INDICES0']), _0x3151e8 += 0x4);
                        break;
                    case 'TANGENT':
                        _0x1f6d60 = new _0x549a90(_0x3151e8, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_TANGE' + 'NT0']), _0x3151e8 += 0x10;
                        break;
                    default:
                        throw 'VertexMesh' + ':\x20unknown\x20' + 'vertex\x20fla' + 'g.';
                    }
                    _0x58a828['push'](_0x1f6d60);
                }
                _0x1af6e6 = new _0x19d0a5(_0x3151e8, _0x58a828), _0x2a7b2f['_vertexDec' + 'larationMa' + 'p'][_0x3f0e2b + (_0x20522a ? '_0' : '_1')] = _0x1af6e6;
            }
            return _0x1af6e6;
        }
    }
    _0x2a7b2f['MESH_POSIT' + 'ION0'] = 0x0, _0x2a7b2f['MESH_COLOR' + '0'] = 0x1, _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'] = 0x2, _0x2a7b2f['MESH_NORMA' + 'L0'] = 0x3, _0x2a7b2f['MESH_TANGE' + 'NT0'] = 0x4, _0x2a7b2f['MESH_BLEND' + 'INDICES0'] = 0x5, _0x2a7b2f['MESH_BLEND' + 'WEIGHT0'] = 0x6, _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1'] = 0x7, _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '0'] = 0x8, _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '1'] = 0x9, _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '2'] = 0xa, _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '3'] = 0xb, _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0'] = 0xc, _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW1'] = 0xd, _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW2'] = 0xe, _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW3'] = 0xf, _0x2a7b2f['MESH_SIMPL' + 'EANIMATOR'] = 0x7, _0x2a7b2f['_vertexDec' + 'larationMa' + 'p'] = {};
    class _0x422ea2 {
        constructor() {
        }
        ['_render'](_0x3a098c) {
        }
    }
    class _0x2be899 extends _0x422ea2 {
        constructor() {
            super();
            var _0x58500e = _0x442335['LayaGL']['instance'], _0x53615e = 0x1, _0x3cd8af = 0x1, _0x4d48ab = 0x1, _0x238067 = new Float32Array([
                    -_0x4d48ab,
                    _0x53615e,
                    -_0x3cd8af,
                    _0x4d48ab,
                    _0x53615e,
                    -_0x3cd8af,
                    _0x4d48ab,
                    _0x53615e,
                    _0x3cd8af,
                    -_0x4d48ab,
                    _0x53615e,
                    _0x3cd8af,
                    -_0x4d48ab,
                    -_0x53615e,
                    -_0x3cd8af,
                    _0x4d48ab,
                    -_0x53615e,
                    -_0x3cd8af,
                    _0x4d48ab,
                    -_0x53615e,
                    _0x3cd8af,
                    -_0x4d48ab,
                    -_0x53615e,
                    _0x3cd8af
                ]), _0x4aa035 = new Uint8Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x0,
                    0x3,
                    0x7,
                    0x7,
                    0x4,
                    0x0,
                    0x1,
                    0x5,
                    0x6,
                    0x6,
                    0x2,
                    0x1,
                    0x3,
                    0x2,
                    0x6,
                    0x6,
                    0x7,
                    0x3,
                    0x0,
                    0x4,
                    0x5,
                    0x5,
                    0x1,
                    0x0
                ]), _0x18af25 = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION');
            this['_vertexBuf' + 'fer'] = new _0x251441(_0x18af25['vertexStri' + 'de'] * 0x8, _0x58500e['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x18af25, this['_indexBuff' + 'er'] = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt8'], 0x24, _0x58500e['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['setData'](_0x238067['buffer']), this['_indexBuff' + 'er']['setData'](_0x4aa035);
            var _0x5c385a = new _0x2f0542();
            _0x5c385a['bind'](), _0x5c385a['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0x5c385a['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0x5c385a['unBind'](), this['_bufferSta' + 'te'] = _0x5c385a;
        }
        static ['__init__']() {
            _0x2be899['instance'] = new _0x2be899();
        }
        ['_render'](_0x29f19a) {
            var _0x496221 = _0x442335['LayaGL']['instance'];
            _0x496221['drawElemen' + 'ts'](_0x496221['TRIANGLES'], 0x24, _0x496221['UNSIGNED_B' + 'YTE'], 0x0), _0x442335['Stat']['trianglesF' + 'aces'] += 0xc, _0x442335['Stat']['renderBatc' + 'hes']++;
        }
    }
    class _0x37201d {
        constructor() {
            this['_mesh'] = _0x2be899['instance'];
        }
        get ['material']() {
            return this['_material'];
        }
        set ['material'](_0x3d3176) {
            this['_material'] !== _0x3d3176 && (this['_material'] && this['_material']['_removeRef' + 'erence'](), _0x3d3176 && _0x3d3176['_addRefere' + 'nce'](), this['_material'] = _0x3d3176);
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x52c49c) {
            this['_mesh'] !== _0x52c49c && (this['_mesh'] = _0x52c49c);
        }
        ['_isAvailab' + 'le']() {
            return this['_material'] && this['_mesh'] ? !![] : ![];
        }
        ['_render'](_0x425d21) {
            if (this['_material'] && this['_mesh']) {
                var _0x121107 = _0x442335['LayaGL']['instance'], _0x18440d = _0x425d21['scene'], _0x3496a4 = _0x425d21['cameraShad' + 'erValue'], _0x5a9c82 = _0x425d21['camera'], _0x4f727d = _0x1634f4['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'];
                _0x442335['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x1634f4['setRuntime' + 'ValueMode'](![]), _0x442335['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x121107, ![]), _0x442335['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x121107, _0x121107['LEQUAL']), _0x442335['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x121107, ![]);
                var _0x14d3fd = _0x37201d['_compileDe' + 'fine'];
                this['_material']['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x14d3fd);
                var _0x5b3af7 = _0x425d21['shader'] = this['_material']['_shader']['getSubShad' + 'erAt'](0x0)['_passes'][0x0]['withCompil' + 'e'](_0x14d3fd), _0x546078 = _0x5b3af7['bind'](), _0x5369d4 = _0x442335['Stat']['loopCount'] !== _0x5b3af7['_uploadMar' + 'k'], _0x597077 = _0x5b3af7['_uploadSce' + 'ne'] !== _0x18440d || _0x5369d4;
                (_0x597077 || _0x546078) && (_0x5b3af7['uploadUnif' + 'orms'](_0x5b3af7['_sceneUnif' + 'ormParamsM' + 'ap'], _0x18440d['_shaderVal' + 'ues'], _0x597077), _0x5b3af7['_uploadSce' + 'ne'] = _0x18440d);
                var _0x5c4e53 = _0x5a9c82['_getRender' + 'Texture'](), _0x18a9cb = _0x5b3af7['_uploadCam' + 'eraShaderV' + 'alue'] !== _0x3496a4 || _0x5369d4;
                if (_0x18a9cb || _0x546078) {
                    var _0x29960c = _0x37201d['_tempMatri' + 'x0'], _0x24b776 = _0x37201d['_tempMatri' + 'x1'];
                    _0x5a9c82['viewMatrix']['cloneTo'](_0x29960c), _0x5a9c82['projection' + 'Matrix']['cloneTo'](_0x24b776), _0x29960c['setTransla' + 'tionVector'](_0x352206['_ZERO']);
                    if (_0x5a9c82['orthograph' + 'ic'])
                        _0x4c2288['createPers' + 'pective'](_0x5a9c82['fieldOfVie' + 'w'], _0x5a9c82['aspectRati' + 'o'], _0x5a9c82['nearPlane'], _0x5a9c82['farPlane'], _0x24b776);
                    var _0xe86018 = 0.000001, _0x4f2ccb = 0x1 / Math['tan'](3.1416 * _0x5a9c82['fieldOfVie' + 'w'] / 0xb4 * 0.5);
                    _0x24b776['elements'][0x0] = _0x4f2ccb / _0x5a9c82['aspectRati' + 'o'], _0x24b776['elements'][0x5] = _0x4f2ccb, _0x24b776['elements'][0xa] = _0xe86018 - 0x1, _0x24b776['elements'][0xb] = -0x1, _0x24b776['elements'][0xe] = -0x0, _0x5a9c82['_applyView' + 'Project'](_0x425d21, _0x29960c, _0x24b776), _0x5b3af7['uploadUnif' + 'orms'](_0x5b3af7['_cameraUni' + 'formParams' + 'Map'], _0x3496a4, _0x18a9cb), _0x5b3af7['_uploadCam' + 'eraShaderV' + 'alue'] = _0x3496a4;
                }
                var _0x9de40d = _0x5b3af7['_uploadMat' + 'erial'] !== this['_material'] || _0x5369d4;
                (_0x9de40d || _0x546078) && (_0x5b3af7['uploadUnif' + 'orms'](_0x5b3af7['_materialU' + 'niformPara' + 'msMap'], this['_material']['_shaderVal' + 'ues'], _0x9de40d), _0x5b3af7['_uploadMat' + 'erial'] = this['_material']), this['_mesh']['_bufferSta' + 'te']['bind'](), this['_mesh']['_render'](_0x425d21), _0x442335['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x1634f4['setRuntime' + 'ValueMode'](_0x4f727d), _0x442335['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x121107, _0x121107['LESS']), _0x442335['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x121107, !![]), _0x5a9c82['_applyView' + 'Project'](_0x425d21, _0x5a9c82['viewMatrix'], _0x5a9c82['projection' + 'Matrix']);
            }
        }
        ['destroy']() {
            this['_material'] && (this['_material']['_removeRef' + 'erence'](), this['_material'] = null);
        }
    }
    _0x37201d['_tempMatri' + 'x0'] = new _0x4c2288(), _0x37201d['_tempMatri' + 'x1'] = new _0x4c2288(), _0x37201d['_compileDe' + 'fine'] = new _0x1445c0();
    class _0x307038 extends _0x49f2b6 {
        constructor(_0x4caf67 = 0.3, _0x280ac7 = 0x3e8) {
            super(), this['_skyRender' + 'er'] = new _0x37201d(), this['_forward'] = new _0x352206(), this['_up'] = new _0x352206(), this['clearColor'] = new _0x18425e(0x64 / 0xff, 0x95 / 0xff, 0xed / 0xff, 0xff / 0xff), this['_shaderVal' + 'ues'] = new _0x1634f4(null), this['_fieldOfVi' + 'ew'] = 0x3c, this['_useUserPr' + 'ojectionMa' + 'trix'] = ![], this['_orthograp' + 'hic'] = ![], this['_orthograp' + 'hicVertica' + 'lSize'] = 0xa, this['renderingO' + 'rder'] = 0x0, this['_nearPlane'] = _0x4caf67, this['_farPlane'] = _0x280ac7, this['cullingMas' + 'k'] = 0x7fffffff, this['useOcclusi' + 'onCulling'] = !![];
        }
        get ['skyRendere' + 'r']() {
            return this['_skyRender' + 'er'];
        }
        get ['fieldOfVie' + 'w']() {
            return this['_fieldOfVi' + 'ew'];
        }
        set ['fieldOfVie' + 'w'](_0x45f32b) {
            this['_fieldOfVi' + 'ew'] = _0x45f32b, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['nearPlane']() {
            return this['_nearPlane'];
        }
        set ['nearPlane'](_0x1f33b0) {
            this['_nearPlane'] = _0x1f33b0, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['farPlane']() {
            return this['_farPlane'];
        }
        set ['farPlane'](_0xe17331) {
            this['_farPlane'] = _0xe17331, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['orthograph' + 'ic']() {
            return this['_orthograp' + 'hic'];
        }
        set ['orthograph' + 'ic'](_0x1df8c6) {
            this['_orthograp' + 'hic'] = _0x1df8c6, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['orthograph' + 'icVertical' + 'Size']() {
            return this['_orthograp' + 'hicVertica' + 'lSize'];
        }
        set ['orthograph' + 'icVertical' + 'Size'](_0xf5062d) {
            this['_orthograp' + 'hicVertica' + 'lSize'] = _0xf5062d, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['renderingO' + 'rder']() {
            return this['_rendering' + 'Order'];
        }
        set ['renderingO' + 'rder'](_0x215ad5) {
            this['_rendering' + 'Order'] = _0x215ad5, this['_sortCamer' + 'asByRender' + 'ingOrder']();
        }
        ['_sortCamer' + 'asByRender' + 'ingOrder']() {
            if (this['displayedI' + 'nStage']) {
                var _0xdc4e7d = this['scene']['_cameraPoo' + 'l'], _0xa059ba = _0xdc4e7d['length'] - 0x1;
                for (var _0x43d446 = 0x0; _0x43d446 < _0xa059ba; _0x43d446++) {
                    if (_0xdc4e7d[_0x43d446]['renderingO' + 'rder'] > _0xdc4e7d[_0xa059ba]['renderingO' + 'rder']) {
                        var _0x51b0b0 = _0xdc4e7d[_0x43d446];
                        _0xdc4e7d[_0x43d446] = _0xdc4e7d[_0xa059ba], _0xdc4e7d[_0xa059ba] = _0x51b0b0;
                    }
                }
            }
        }
        ['_calculate' + 'Projection' + 'Matrix']() {
        }
        ['_onScreenS' + 'izeChanged']() {
            this['_calculate' + 'Projection' + 'Matrix']();
        }
        ['_prepareCa' + 'meraToRend' + 'er']() {
            var _0x401ec2 = this['_shaderVal' + 'ues'];
            this['transform']['getForward'](this['_forward']), this['transform']['getUp'](this['_up']), _0x401ec2['setVector3'](_0x307038['CAMERAPOS'], this['transform']['position']), _0x401ec2['setVector3'](_0x307038['CAMERADIRE' + 'CTION'], this['_forward']), _0x401ec2['setVector3'](_0x307038['CAMERAUP'], this['_up']);
        }
        ['render'](_0x2f9901 = null, _0x50f4c0 = null) {
        }
        ['addLayer'](_0x3c432d) {
            this['cullingMas' + 'k'] |= Math['pow'](0x2, _0x3c432d);
        }
        ['removeLaye' + 'r'](_0x4a1285) {
            this['cullingMas' + 'k'] &= ~Math['pow'](0x2, _0x4a1285);
        }
        ['addAllLaye' + 'rs']() {
            this['cullingMas' + 'k'] = 0x7fffffff;
        }
        ['removeAllL' + 'ayers']() {
            this['cullingMas' + 'k'] = 0x0;
        }
        ['resetProje' + 'ctionMatri' + 'x']() {
            this['_useUserPr' + 'ojectionMa' + 'trix'] = ![], this['_calculate' + 'Projection' + 'Matrix']();
        }
        ['_onActive']() {
            this['_scene']['_addCamera'](this), super['_onActive']();
        }
        ['_onInActiv' + 'e']() {
            this['_scene']['_removeCam' + 'era'](this), super['_onInActiv' + 'e']();
        }
        ['_parse'](_0x50aba0, _0x525146) {
            super['_parse'](_0x50aba0, _0x525146), this['orthograph' + 'ic'] = _0x50aba0['orthograph' + 'ic'], _0x50aba0['orthograph' + 'icVertical' + 'Size'] !== undefined && (this['orthograph' + 'icVertical' + 'Size'] = _0x50aba0['orthograph' + 'icVertical' + 'Size']), _0x50aba0['fieldOfVie' + 'w'] !== undefined && (this['fieldOfVie' + 'w'] = _0x50aba0['fieldOfVie' + 'w']), this['nearPlane'] = _0x50aba0['nearPlane'], this['farPlane'] = _0x50aba0['farPlane'];
            var _0x13601a = _0x50aba0['clearColor'];
            this['clearColor'] = new _0x18425e(_0x13601a[0x0], _0x13601a[0x1], _0x13601a[0x2], _0x13601a[0x3]);
            var _0x5becee = _0x50aba0['skyboxMate' + 'rial'];
            _0x5becee && (this['_skyRender' + 'er']['material'] = _0x442335['Loader']['getRes'](_0x5becee['path']));
        }
        ['destroy'](_0x39d57f = !![]) {
            this['_skyRender' + 'er']['destroy'](), this['_skyRender' + 'er'] = null, _0x442335['Laya']['stage']['off'](_0x442335['Event']['RESIZE'], this, this['_onScreenS' + 'izeChanged']), super['destroy'](_0x39d57f);
        }
        ['_create']() {
            return new _0x307038();
        }
    }
    _0x307038['_tempMatri' + 'x4x40'] = new _0x4c2288(), _0x307038['CAMERAPOS'] = _0x18824e['propertyNa' + 'meToID']('u_CameraPo' + 's'), _0x307038['VIEWMATRIX'] = _0x18824e['propertyNa' + 'meToID']('u_View'), _0x307038['PROJECTMAT' + 'RIX'] = _0x18824e['propertyNa' + 'meToID']('u_Projecti' + 'on'), _0x307038['VIEWPROJEC' + 'TMATRIX'] = _0x18824e['propertyNa' + 'meToID']('u_ViewProj' + 'ection'), _0x307038['CAMERADIRE' + 'CTION'] = _0x18824e['propertyNa' + 'meToID']('u_CameraDi' + 'rection'), _0x307038['CAMERAUP'] = _0x18824e['propertyNa' + 'meToID']('u_CameraUp'), _0x307038['VIEWPORT'] = _0x18824e['propertyNa' + 'meToID']('u_Viewport'), _0x307038['PROJECTION' + '_PARAMS'] = _0x18824e['propertyNa' + 'meToID']('u_Projecti' + 'onParams'), _0x307038['RENDERINGT' + 'YPE_DEFERR' + 'EDLIGHTING'] = 'DEFERREDLI' + 'GHTING', _0x307038['RENDERINGT' + 'YPE_FORWAR' + 'DRENDERING'] = 'FORWARDREN' + 'DERING', _0x307038['_invertYSc' + 'aleMatrix'] = new _0x4c2288(0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), _0x307038['_invertYPr' + 'ojectionMa' + 'trix'] = new _0x4c2288(), _0x307038['_invertYPr' + 'ojectionVi' + 'ewMatrix'] = new _0x4c2288(), _0x307038['CLEARFLAG_' + 'SOLIDCOLOR'] = 0x0, _0x307038['CLEARFLAG_' + 'SKY'] = 0x1, _0x307038['CLEARFLAG_' + 'DEPTHONLY'] = 0x2, _0x307038['CLEARFLAG_' + 'NONE'] = 0x3, function (_0x417764) {
        _0x417764[_0x417764['None'] = 0x0] = 'None', _0x417764[_0x417764['Hard'] = 0x1] = 'Hard', _0x417764[_0x417764['SoftLow'] = 0x2] = 'SoftLow', _0x417764[_0x417764['SoftHigh'] = 0x3] = 'SoftHigh';
    }(_0x1f405c['ShadowMode'] || (_0x1f405c['ShadowMode'] = {}));
    class _0x3b7520 {
    }
    (function (_0xf79b47) {
        _0xf79b47[_0xf79b47['Directiona' + 'l'] = 0x0] = 'Directiona' + 'l', _0xf79b47[_0xf79b47['Spot'] = 0x1] = 'Spot', _0xf79b47[_0xf79b47['Point'] = 0x2] = 'Point';
    }(_0x1f405c['LightType'] || (_0x1f405c['LightType'] = {})));
    class _0x594385 extends _0x49f2b6 {
        constructor() {
            super(), this['_shadowMod' + 'e'] = _0x1f405c['ShadowMode']['None'], this['_isAlterna' + 'te'] = ![], this['_shadowRes' + 'olution'] = 0x800, this['_shadowDis' + 'tance'] = 0x32, this['_shadowDep' + 'thBias'] = 0x1, this['_shadowNor' + 'malBias'] = 0x1, this['_shadowNea' + 'rPlane'] = 0.1, this['_shadowStr' + 'ength'] = 0x1, this['_lightWold' + 'Matrix'] = new _0x4c2288(), this['_intensity'] = 0x1, this['_intensity' + 'Color'] = new _0x352206(), this['color'] = new _0x352206(0x1, 0x1, 0x1), this['_lightmapB' + 'akedType'] = _0x594385['LIGHTMAPBA' + 'KEDTYPE_RE' + 'ALTIME'];
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0xe558c) {
            this['_intensity'] = _0xe558c;
        }
        get ['shadowMode']() {
            return this['_shadowMod' + 'e'];
        }
        set ['shadowMode'](_0x1267e9) {
            this['_shadowMod' + 'e'] = _0x1267e9;
        }
        get ['shadowDist' + 'ance']() {
            return this['_shadowDis' + 'tance'];
        }
        set ['shadowDist' + 'ance'](_0x337de1) {
            this['_shadowDis' + 'tance'] = _0x337de1;
        }
        get ['shadowReso' + 'lution']() {
            return this['_shadowRes' + 'olution'];
        }
        set ['shadowReso' + 'lution'](_0x7f067b) {
            this['_shadowRes' + 'olution'] = _0x7f067b;
        }
        get ['shadowDept' + 'hBias']() {
            return this['_shadowDep' + 'thBias'];
        }
        set ['shadowDept' + 'hBias'](_0x34d0a3) {
            this['_shadowDep' + 'thBias'] = _0x34d0a3;
        }
        get ['shadowNorm' + 'alBias']() {
            return this['_shadowNor' + 'malBias'];
        }
        set ['shadowNorm' + 'alBias'](_0x101655) {
            this['_shadowNor' + 'malBias'] = _0x101655;
        }
        get ['shadowStre' + 'ngth']() {
            return this['_shadowStr' + 'ength'];
        }
        set ['shadowStre' + 'ngth'](_0x1da442) {
            this['_shadowStr' + 'ength'] = _0x1da442;
        }
        get ['shadowNear' + 'Plane']() {
            return this['_shadowNea' + 'rPlane'];
        }
        set ['shadowNear' + 'Plane'](_0x259057) {
            this['_shadowNea' + 'rPlane'] = _0x259057;
        }
        get ['lightmapBa' + 'kedType']() {
            return this['_lightmapB' + 'akedType'];
        }
        set ['lightmapBa' + 'kedType'](_0x14c8b0) {
            if (this['_lightmapB' + 'akedType'] !== _0x14c8b0) {
                this['_lightmapB' + 'akedType'] = _0x14c8b0;
                if (this['activeInHi' + 'erarchy']) {
                    if (_0x14c8b0 !== _0x594385['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'])
                        this['_addToScen' + 'e']();
                    else
                        this['_removeFro' + 'mScene']();
                }
            }
        }
        get ['lightWorld' + 'Matrix']() {
            var _0x572121 = this['transform']['position'], _0x14dd22 = this['transform']['rotation'];
            return _0x4c2288['createAffi' + 'neTransfor' + 'mation'](_0x572121, _0x14dd22, _0x352206['_ONE'], this['_lightWold' + 'Matrix']), this['_lightWold' + 'Matrix'];
        }
        ['_parse'](_0x2b708f, _0x191977) {
            super['_parse'](_0x2b708f, _0x191977);
            var _0xcbf8fd = _0x2b708f['color'];
            this['color']['fromArray'](_0xcbf8fd), this['intensity'] = _0x2b708f['intensity'], this['lightmapBa' + 'kedType'] = _0x2b708f['lightmapBa' + 'kedType'];
        }
        ['_cloneTo'](_0x298843, _0x2dd56d, _0x1bf97d) {
            super['_cloneTo'](_0x298843, _0x2dd56d, _0x1bf97d);
            var _0x580583 = _0x298843;
            _0x580583['color'] = this['color']['clone'](), _0x580583['intensity'] = this['intensity'], _0x580583['lightmapBa' + 'kedType'] = this['lightmapBa' + 'kedType'];
        }
        ['_addToScen' + 'e']() {
            var _0x573485 = this['_scene'], _0x23e647 = _0x1a3b39['_config']['maxLightCo' + 'unt'];
            _0x573485['_lightCoun' + 't'] < _0x23e647 ? (_0x573485['_lightCoun' + 't']++, this['_addToLigh' + 'tQueue'](), this['_isAlterna' + 'te'] = ![]) : (_0x573485['_alternate' + 'Lights']['add'](this), this['_isAlterna' + 'te'] = !![], console['warn']('LightSprit' + 'e:light\x20co' + 'unt\x20has\x20la' + 'rge\x20than\x20m' + 'axLightCou' + 'nt,the\x20lat' + 'est\x20added\x20' + 'light\x20will' + '\x20be\x20ignore' + '.'));
        }
        ['_removeFro' + 'mScene']() {
            var _0x4ec021 = this['_scene'];
            if (this['_isAlterna' + 'te'])
                _0x4ec021['_alternate' + 'Lights']['remove'](this);
            else {
                _0x4ec021['_lightCoun' + 't']--, this['_removeFro' + 'mLightQueu' + 'e']();
                if (_0x4ec021['_alternate' + 'Lights']['_length'] > 0x0) {
                    var _0xf70dc6 = _0x4ec021['_alternate' + 'Lights']['shift']();
                    _0xf70dc6['_addToLigh' + 'tQueue'](), _0xf70dc6['_isAlterna' + 'te'] = ![], _0x4ec021['_lightCoun' + 't']++;
                }
            }
        }
        ['_addToLigh' + 'tQueue']() {
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
        }
        ['_onActive']() {
            super['_onActive'](), this['lightmapBa' + 'kedType'] !== _0x594385['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] && this['_addToScen' + 'e']();
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e'](), this['lightmapBa' + 'kedType'] !== _0x594385['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] && this['_removeFro' + 'mScene']();
        }
        ['_create']() {
            return new _0x594385();
        }
        get ['diffuseCol' + 'or']() {
            return console['log']('LightSprit' + 'e:\x20discard' + '\x20property,' + 'please\x20use' + '\x20color\x20pro' + 'perty\x20inst' + 'ead.'), this['color'];
        }
        set ['diffuseCol' + 'or'](_0x4f4c51) {
            console['log']('LightSprit' + 'e:\x20discard' + '\x20property,' + 'please\x20use' + '\x20color\x20pro' + 'perty\x20inst' + 'ead.'), this['color'] = _0x4f4c51;
        }
    }
    _0x594385['LIGHTMAPBA' + 'KEDTYPE_RE' + 'ALTIME'] = 0x0, _0x594385['LIGHTMAPBA' + 'KEDTYPE_MI' + 'XED'] = 0x1, _0x594385['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] = 0x2, function (_0x4a47b5) {
        _0x4a47b5[_0x4a47b5['NoCascades'] = 0x0] = 'NoCascades', _0x4a47b5[_0x4a47b5['TwoCascade' + 's'] = 0x1] = 'TwoCascade' + 's', _0x4a47b5[_0x4a47b5['FourCascad' + 'es'] = 0x2] = 'FourCascad' + 'es';
    }(_0x1f405c['ShadowCasc' + 'adesMode'] || (_0x1f405c['ShadowCasc' + 'adesMode'] = {}));
    var _0x1abdc0;
    (function (_0x292a3) {
        _0x292a3[_0x292a3['Near'] = 0x0] = 'Near', _0x292a3[_0x292a3['Far'] = 0x1] = 'Far', _0x292a3[_0x292a3['Left'] = 0x2] = 'Left', _0x292a3[_0x292a3['Right'] = 0x3] = 'Right', _0x292a3[_0x292a3['Bottom'] = 0x4] = 'Bottom', _0x292a3[_0x292a3['Top'] = 0x5] = 'Top';
    }(_0x1abdc0 || (_0x1abdc0 = {})));
    class _0x12f0cf {
        static ['supportSha' + 'dow']() {
            return _0x442335['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] || _0x442335['SystemUtil' + 's']['supportRen' + 'derTexture' + 'Format'](_0x442335['RenderText' + 'ureFormat']['Depth']);
        }
        static ['init']() {
            if (_0x442335['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'])
                _0x12f0cf['_shadowTex' + 'tureFormat'] = _0x442335['RenderText' + 'ureFormat']['ShadowMap'];
            else
                _0x12f0cf['_shadowTex' + 'tureFormat'] = _0x442335['RenderText' + 'ureFormat']['Depth'];
        }
        static ['getTempora' + 'ryShadowTe' + 'xture'](_0x48d32d, _0x79b563, _0x1a27b4) {
            var _0xefae0 = _0x40e7a5['createFrom' + 'Pool'](_0x48d32d, _0x79b563, _0x12f0cf['_shadowTex' + 'tureFormat'], _0x1a27b4);
            return _0xefae0['filterMode'] = _0x442335['FilterMode']['Bilinear'], _0xefae0['wrapModeU'] = _0x442335['WarpMode']['Clamp'], _0xefae0['wrapModeV'] = _0x442335['WarpMode']['Clamp'], _0xefae0;
        }
        static ['getShadowB' + 'ias'](_0xeb8560, _0x2eb96e, _0x596332, _0x318a31) {
            var _0x2cceed;
            if (_0xeb8560['_lightType'] == _0x1f405c['LightType']['Directiona' + 'l'])
                _0x2cceed = 0x2 / _0x2eb96e['elements'][0x0];
            else
                _0xeb8560['_lightType'] == _0x1f405c['LightType']['Spot'] ? _0x2cceed = Math['tan'](_0xeb8560['spotAngle'] * 0.5 * _0xc6f01['Deg2Rad']) * _0xeb8560['range'] : (console['warn']('ShadowUtil' + 's:Only\x20spo' + 't\x20and\x20dire' + 'ctional\x20sh' + 'adow\x20caste' + 'rs\x20are\x20sup' + 'ported\x20now' + '.'), _0x2cceed = 0x0);
            var _0x3fe8b7 = _0x2cceed / _0x596332, _0x5f407c = -_0xeb8560['_shadowDep' + 'thBias'] * _0x3fe8b7, _0x4f0c32 = -_0xeb8560['_shadowNor' + 'malBias'] * _0x3fe8b7;
            if (_0xeb8560['shadowMode'] == _0x1f405c['ShadowMode']['SoftHigh']) {
                const _0x4b47d0 = 2.5;
                _0x5f407c *= _0x4b47d0, _0x4f0c32 *= _0x4b47d0;
            }
            _0x318a31['setValue'](_0x5f407c, _0x4f0c32, 0x0, 0x0);
        }
        static ['getCameraF' + 'rustumPlan' + 'es'](_0x29e876, _0x20ebbf) {
            _0x4fa1ff['getPlanesF' + 'romMatrix'](_0x29e876, _0x20ebbf[_0x1abdc0['Near']], _0x20ebbf[_0x1abdc0['Far']], _0x20ebbf[_0x1abdc0['Left']], _0x20ebbf[_0x1abdc0['Right']], _0x20ebbf[_0x1abdc0['Top']], _0x20ebbf[_0x1abdc0['Bottom']]);
        }
        static ['getFarWith' + 'Radius'](_0x2324a9, _0x5ede2f) {
            return Math['sqrt'](_0x2324a9 * _0x2324a9 / _0x5ede2f);
        }
        static ['getCascade' + 'sSplitDist' + 'ance'](_0x29dac3, _0x39ee10, _0x1fcaf8, _0x65c88d, _0x56fef4, _0x591900, _0x347034, _0xdc0c65) {
            _0xdc0c65[0x0] = _0x1fcaf8;
            var _0xc327d9 = _0x65c88d - _0x1fcaf8, _0x474aa4 = Math['tan'](_0x56fef4 * 0.5), _0x2561cb = 0x1 + _0x474aa4 * _0x474aa4 * (_0x591900 * _0x591900 + 0x1);
            switch (_0x347034) {
            case _0x1f405c['ShadowCasc' + 'adesMode']['NoCascades']:
                _0xdc0c65[0x1] = _0x12f0cf['getFarWith' + 'Radius'](_0x65c88d, _0x2561cb);
                break;
            case _0x1f405c['ShadowCasc' + 'adesMode']['TwoCascade' + 's']:
                _0xdc0c65[0x1] = _0x12f0cf['getFarWith' + 'Radius'](_0x1fcaf8 + _0xc327d9 * _0x29dac3, _0x2561cb), _0xdc0c65[0x2] = _0x12f0cf['getFarWith' + 'Radius'](_0x65c88d, _0x2561cb);
                break;
            case _0x1f405c['ShadowCasc' + 'adesMode']['FourCascad' + 'es']:
                _0xdc0c65[0x1] = _0x12f0cf['getFarWith' + 'Radius'](_0x1fcaf8 + _0xc327d9 * _0x39ee10['x'], _0x2561cb), _0xdc0c65[0x2] = _0x12f0cf['getFarWith' + 'Radius'](_0x1fcaf8 + _0xc327d9 * _0x39ee10['y'], _0x2561cb), _0xdc0c65[0x3] = _0x12f0cf['getFarWith' + 'Radius'](_0x1fcaf8 + _0xc327d9 * _0x39ee10['z'], _0x2561cb), _0xdc0c65[0x4] = _0x12f0cf['getFarWith' + 'Radius'](_0x65c88d, _0x2561cb);
                break;
            }
        }
        static ['applySlice' + 'Transform'](_0x1c715c, _0x26d62e, _0x41e6bf, _0x19f0f7, _0x587b59) {
            var _0x3b2182 = _0x12f0cf['_tempMatri' + 'x0']['elements'], _0x372f26 = 0x1 / _0x26d62e, _0x5b8e8c = 0x1 / _0x41e6bf;
            _0x3b2182[0x0] = _0x1c715c['resolution'] * _0x372f26, _0x3b2182[0x5] = _0x1c715c['resolution'] * _0x5b8e8c, _0x3b2182[0xc] = _0x1c715c['offsetX'] * _0x372f26, _0x3b2182[0xd] = _0x1c715c['offsetY'] * _0x5b8e8c, _0x3b2182[0x1] = _0x3b2182[0x2] = _0x3b2182[0x2] = _0x3b2182[0x4] = _0x3b2182[0x6] = _0x3b2182[0x7] = _0x3b2182[0x8] = _0x3b2182[0x9] = _0x3b2182[0xb] = _0x3b2182[0xe] = 0x0, _0x3b2182[0xa] = _0x3b2182[0xf] = 0x1;
            var _0x521832 = _0x19f0f7 * 0x10;
            _0x47bed9['_mulMatrix' + 'Array'](_0x3b2182, _0x587b59, _0x521832, _0x587b59, _0x521832);
        }
        static ['getDirecti' + 'onLightSha' + 'dowCullPla' + 'nes'](_0x1ca6bc, _0x383089, _0xa49107, _0x3c6c83, _0x2ae415, _0x5a2635) {
            var _0x5273fd = _0x12f0cf['_frustumCo' + 'rners'], _0x4a878f = _0x12f0cf['_backPlane' + 'Faces'], _0x47fcff = _0x12f0cf['_frustumPl' + 'aneNeighbo' + 'rs'], _0x5dbef4 = _0x12f0cf['_frustumTw' + 'oPlaneCorn' + 'ers'], _0xb19c56 = _0x12f0cf['_edgePlane' + 'Point2'], _0x437fa8 = _0x5a2635['cullPlanes'], _0x3a9688 = _0x1ca6bc[_0x1abdc0['Near']], _0x585d72 = _0x1ca6bc[_0x1abdc0['Far']], _0x29031e = _0x1ca6bc[_0x1abdc0['Left']], _0x362b13 = _0x1ca6bc[_0x1abdc0['Right']], _0x40c98e = _0x1ca6bc[_0x1abdc0['Bottom']], _0x4718ca = _0x1ca6bc[_0x1abdc0['Top']], _0x5bf970 = _0xa49107[_0x383089] - _0x3c6c83, _0xddafec = _0x12f0cf['_adjustNea' + 'rPlane'], _0xfc75d4 = _0x12f0cf['_adjustFar' + 'Plane'];
            _0x3a9688['normal']['cloneTo'](_0xddafec['normal']), _0x585d72['normal']['cloneTo'](_0xfc75d4['normal']), _0xddafec['distance'] = _0x3a9688['distance'] - _0x5bf970, _0xfc75d4['distance'] = Math['min'](-_0x3a9688['distance'] + _0x5a2635['sphereCent' + 'erZ'] + _0x5a2635['splitBound' + 'Sphere']['radius'], _0x585d72['distance']), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xddafec, _0x40c98e, _0x362b13, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xddafec, _0x4718ca, _0x362b13, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xddafec, _0x4718ca, _0x29031e, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xddafec, _0x40c98e, _0x29031e, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xfc75d4, _0x40c98e, _0x362b13, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xfc75d4, _0x4718ca, _0x362b13, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xfc75d4, _0x4718ca, _0x29031e, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['FarTopLeft']]), _0x4fa1ff['get3PlaneI' + 'nterPoint'](_0xfc75d4, _0x40c98e, _0x29031e, _0x5273fd[_0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft']]);
            var _0x408cd4 = 0x0;
            for (var _0x1a4d52 = 0x0; _0x1a4d52 < 0x6; _0x1a4d52++) {
                var _0x11990f;
                switch (_0x1a4d52) {
                case _0x1abdc0['Near']:
                    _0x11990f = _0xddafec;
                    break;
                case _0x1abdc0['Far']:
                    _0x11990f = _0xfc75d4;
                    break;
                default:
                    _0x11990f = _0x1ca6bc[_0x1a4d52];
                    break;
                }
                _0x352206['dot'](_0x11990f['normal'], _0x2ae415) < 0x0 && (_0x11990f['cloneTo'](_0x437fa8[_0x408cd4]), _0x4a878f[_0x408cd4] = _0x1a4d52, _0x408cd4++);
            }
            var _0x49705e = _0x408cd4;
            for (var _0x1a4d52 = 0x0; _0x1a4d52 < _0x408cd4; _0x1a4d52++) {
                var _0xe91903 = _0x4a878f[_0x1a4d52], _0x3072bf = _0x47fcff[_0xe91903];
                for (var _0x88feaa = 0x0; _0x88feaa < 0x4; _0x88feaa++) {
                    var _0x4067c9 = _0x3072bf[_0x88feaa], _0xaf0d10 = !![];
                    for (var _0x237a8b = 0x0; _0x237a8b < _0x408cd4; _0x237a8b++)
                        if (_0x4067c9 == _0x4a878f[_0x237a8b]) {
                            _0xaf0d10 = ![];
                            break;
                        }
                    if (_0xaf0d10) {
                        var _0xc0fb69 = _0x5dbef4[_0xe91903][_0x4067c9], _0x69f7c2 = _0x5273fd[_0xc0fb69[0x0]], _0x1e41f8 = _0x5273fd[_0xc0fb69[0x1]];
                        _0x352206['add'](_0x69f7c2, _0x2ae415, _0xb19c56), _0x1fee56['createPlan' + 'eBy3P'](_0x69f7c2, _0x1e41f8, _0xb19c56, _0x437fa8[_0x49705e++]);
                    }
                }
            }
            _0x5a2635['cullPlaneC' + 'ount'] = _0x49705e;
        }
        static ['getBoundSp' + 'hereByFrus' + 'tum'](_0x14fd0, _0x1e1046, _0x1e4301, _0xf4b8cb, _0x319442, _0x48dcbf, _0x5731a7) {
            var _0x3240f0, _0x2c77b1, _0x231878 = Math['sqrt'](0x1 + _0xf4b8cb * _0xf4b8cb) * Math['tan'](_0x1e4301 / 0x2), _0x12a804 = _0x231878 * _0x231878, _0x4abaa2 = _0x1e1046 - _0x14fd0, _0x5bd2a5 = _0x1e1046 + _0x14fd0;
            _0x12a804 > _0x4abaa2 / _0x5bd2a5 ? (_0x3240f0 = _0x1e1046, _0x2c77b1 = _0x1e1046 * _0x231878) : (_0x3240f0 = 0.5 * _0x5bd2a5 * (0x1 + _0x12a804), _0x2c77b1 = 0.5 * Math['sqrt'](_0x4abaa2 * _0x4abaa2 + 0x2 * (_0x1e1046 * _0x1e1046 + _0x14fd0 * _0x14fd0) * _0x12a804 + _0x5bd2a5 * _0x5bd2a5 * _0x12a804 * _0x12a804));
            var _0x36b065 = _0x5731a7['center'];
            return _0x5731a7['radius'] = _0x2c77b1, _0x352206['scale'](_0x48dcbf, _0x3240f0, _0x36b065), _0x352206['add'](_0x319442, _0x36b065, _0x36b065), _0x3240f0;
        }
        static ['getMaxTile' + 'Resolution' + 'InAtlas'](_0x32e469, _0x40e13c, _0x2f953d) {
            var _0x1adadc = Math['min'](_0x32e469, _0x40e13c), _0x5d2f39 = Math['floor'](_0x32e469 / _0x1adadc) * Math['floor'](_0x40e13c / _0x1adadc);
            while (_0x5d2f39 < _0x2f953d) {
                _0x1adadc = Math['floor'](_0x1adadc >> 0x1), _0x5d2f39 = Math['floor'](_0x32e469 / _0x1adadc) * Math['floor'](_0x40e13c / _0x1adadc);
            }
            return _0x1adadc;
        }
        static ['getDirecti' + 'onalLightM' + 'atrices'](_0x18fd5c, _0x479443, _0x4641d6, _0x155843, _0x1aa547, _0x2516ed, _0x577f6f, _0x1e7654) {
            var _0x1bfa55 = _0x577f6f['splitBound' + 'Sphere'], _0x5674d8 = _0x1bfa55['center'], _0x218931 = _0x1bfa55['radius'], _0x59ab53 = _0x2516ed / 0x2, _0x45503 = _0x218931 * _0x59ab53 / (_0x59ab53 - _0x12f0cf['atlasBorde' + 'rSize']), _0x1fe1c8 = _0x45503 * 0x2, _0x3c6ebc = _0x2516ed / _0x1fe1c8, _0x31d42d = _0x1fe1c8 / _0x2516ed, _0x223524 = Math['ceil'](_0x352206['dot'](_0x5674d8, _0x18fd5c) * _0x3c6ebc) * _0x31d42d, _0x4e3921 = Math['ceil'](_0x352206['dot'](_0x5674d8, _0x479443) * _0x3c6ebc) * _0x31d42d, _0x82ae77 = _0x352206['dot'](_0x5674d8, _0x4641d6);
            _0x5674d8['x'] = _0x18fd5c['x'] * _0x223524 + _0x479443['x'] * _0x4e3921 + _0x4641d6['x'] * _0x82ae77, _0x5674d8['y'] = _0x18fd5c['y'] * _0x223524 + _0x479443['y'] * _0x4e3921 + _0x4641d6['y'] * _0x82ae77, _0x5674d8['z'] = _0x18fd5c['z'] * _0x223524 + _0x479443['z'] * _0x4e3921 + _0x4641d6['z'] * _0x82ae77;
            var _0x18739d = _0x577f6f['position'], _0x6371ca = _0x577f6f['viewMatrix'], _0x53b135 = _0x577f6f['projection' + 'Matrix'], _0x41a001 = _0x577f6f['viewProjec' + 'tMatrix'];
            _0x577f6f['resolution'] = _0x2516ed, _0x577f6f['offsetX'] = _0x155843 % 0x2 * _0x2516ed, _0x577f6f['offsetY'] = Math['floor'](_0x155843 / 0x2) * _0x2516ed, _0x352206['scale'](_0x4641d6, _0x218931 + _0x1aa547, _0x18739d), _0x352206['subtract'](_0x5674d8, _0x18739d, _0x18739d), _0x4c2288['createLook' + 'At'](_0x18739d, _0x5674d8, _0x18fd5c, _0x6371ca), _0x4c2288['createOrth' + 'oOffCenter'](-_0x45503, _0x45503, -_0x45503, _0x45503, 0x0, _0x218931 * 0x2 + _0x1aa547, _0x53b135), _0x4c2288['multiply'](_0x53b135, _0x6371ca, _0x41a001), _0x47bed9['_mulMatrix' + 'Array'](_0x12f0cf['_shadowMap' + 'ScaleOffse' + 'tMatrix']['elements'], _0x41a001['elements'], 0x0, _0x1e7654, _0x155843 * 0x10);
        }
        static ['getSpotLig' + 'htShadowDa' + 'ta'](_0x3dbf98, _0x1e1bba, _0x479ca9, _0x43be34, _0x49108b, _0x203e24) {
            var _0x1faafd = _0x3dbf98['position'] = _0x1e1bba['transform']['position'];
            _0x3dbf98['resolution'] = _0x479ca9, _0x203e24['setValue'](0x1 / _0x479ca9, 0x1 / _0x479ca9, _0x479ca9, _0x479ca9), _0x3dbf98['offsetX'] = 0x0, _0x3dbf98['offsetY'] = 0x0;
            var _0xb867d9 = _0x1e1bba['lightWorld' + 'Matrix'], _0x4b281c = _0x3dbf98['viewMatrix'], _0x75037c = _0x3dbf98['projection' + 'Matrix'], _0x571177 = _0x3dbf98['viewProjec' + 'tMatrix'], _0x2bcafc = _0x3dbf98['cameraCull' + 'Info']['boundFrust' + 'um'];
            _0xb867d9['invert'](_0x4b281c), _0x4c2288['createPers' + 'pective'](3.1416 * _0x1e1bba['spotAngle'] / 0xb4, 0x1, 0.1, _0x1e1bba['range'], _0x75037c), _0x43be34['y'] = _0x1e1bba['shadowStre' + 'ngth'], _0x4c2288['multiply'](_0x75037c, _0x4b281c, _0x571177), _0x2bcafc['matrix'] = _0x571177, _0x571177['cloneTo'](_0x49108b), _0x3dbf98['cameraCull' + 'Info']['position'] = _0x1faafd;
        }
        static ['prepareSha' + 'dowReceive' + 'rShaderVal' + 'ues'](_0x4ebcfd, _0xd00afb, _0x4b303d, _0x1a2501, _0x2f46c8, _0x131bc0, _0x1df039, _0x42a0e8, _0xe53af5) {
            _0x131bc0['setValue'](0x1 / _0xd00afb, 0x1 / _0x4b303d, _0xd00afb, _0x4b303d), _0x1df039['setValue'](_0x4ebcfd['_shadowStr' + 'ength'], 0x0, 0x0, 0x0);
            if (_0x2f46c8 > 0x1) {
                const _0x5e0aff = 0x10;
                for (var _0x432218 = _0x2f46c8 * _0x5e0aff, _0x4369f9 = 0x4 * _0x5e0aff; _0x432218 < _0x4369f9; _0x432218++)
                    _0x42a0e8[_0x432218] = 0x0;
                for (var _0x432218 = 0x0; _0x432218 < _0x2f46c8; _0x432218++) {
                    var _0x1da5f0 = _0x1a2501[_0x432218]['splitBound' + 'Sphere'], _0x3c6057 = _0x1da5f0['center'], _0x56004d = _0x1da5f0['radius'], _0x49a3f4 = _0x432218 * 0x4;
                    _0xe53af5[_0x49a3f4] = _0x3c6057['x'], _0xe53af5[_0x49a3f4 + 0x1] = _0x3c6057['y'], _0xe53af5[_0x49a3f4 + 0x2] = _0x3c6057['z'], _0xe53af5[_0x49a3f4 + 0x3] = _0x56004d * _0x56004d;
                }
                const _0x5b2d72 = 0x4;
                for (var _0x432218 = _0x2f46c8 * _0x5b2d72, _0x4369f9 = 0x4 * _0x5b2d72; _0x432218 < _0x4369f9; _0x432218++)
                    _0xe53af5[_0x432218] = 0x0;
            }
        }
    }
    _0x12f0cf['_tempMatri' + 'x0'] = new _0x4c2288(), _0x12f0cf['_shadowMap' + 'ScaleOffse' + 'tMatrix'] = new _0x4c2288(0.5, 0x0, 0x0, 0x0, 0x0, 0.5, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1), _0x12f0cf['_frustumCo' + 'rners'] = [
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206()
    ], _0x12f0cf['_adjustNea' + 'rPlane'] = new _0x1fee56(new _0x352206()), _0x12f0cf['_adjustFar' + 'Plane'] = new _0x1fee56(new _0x352206()), _0x12f0cf['_backPlane' + 'Faces'] = new Array(0x5), _0x12f0cf['_edgePlane' + 'Point2'] = new _0x352206(), _0x12f0cf['_frustumPl' + 'aneNeighbo' + 'rs'] = [
        [
            _0x1abdc0['Left'],
            _0x1abdc0['Right'],
            _0x1abdc0['Top'],
            _0x1abdc0['Bottom']
        ],
        [
            _0x1abdc0['Left'],
            _0x1abdc0['Right'],
            _0x1abdc0['Top'],
            _0x1abdc0['Bottom']
        ],
        [
            _0x1abdc0['Near'],
            _0x1abdc0['Far'],
            _0x1abdc0['Top'],
            _0x1abdc0['Bottom']
        ],
        [
            _0x1abdc0['Near'],
            _0x1abdc0['Far'],
            _0x1abdc0['Top'],
            _0x1abdc0['Bottom']
        ],
        [
            _0x1abdc0['Near'],
            _0x1abdc0['Far'],
            _0x1abdc0['Left'],
            _0x1abdc0['Right']
        ],
        [
            _0x1abdc0['Near'],
            _0x1abdc0['Far'],
            _0x1abdc0['Left'],
            _0x1abdc0['Right']
        ]
    ], _0x12f0cf['_frustumTw' + 'oPlaneCorn' + 'ers'] = [
        [
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left'],
                _0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht'],
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right'],
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't'],
                _0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht']
            ]
        ],
        [
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarTopLeft'],
                _0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight'],
                _0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft'],
                _0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't'],
                _0x1f405c['FrustumCor' + 'ner']['FarTopLeft']
            ]
        ],
        [
            [
                _0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't'],
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft'],
                _0x1f405c['FrustumCor' + 'ner']['FarTopLeft']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left'],
                _0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarTopLeft'],
                _0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't']
            ]
        ],
        [
            [
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right'],
                _0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't'],
                _0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight'],
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht'],
                _0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't']
            ]
        ],
        [
            [
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left'],
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight'],
                _0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarBottomL' + 'eft'],
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Left']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearBottom' + 'Right'],
                _0x1f405c['FrustumCor' + 'ner']['FarBottomR' + 'ight']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ]
        ],
        [
            [
                _0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht'],
                _0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarTopLeft'],
                _0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['nearTopLef' + 't'],
                _0x1f405c['FrustumCor' + 'ner']['FarTopLeft']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['FarTopRigh' + 't'],
                _0x1f405c['FrustumCor' + 'ner']['nearTopRig' + 'ht']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0x1f405c['FrustumCor' + 'ner']['unknown'],
                _0x1f405c['FrustumCor' + 'ner']['unknown']
            ]
        ]
    ], _0x12f0cf['atlasBorde' + 'rSize'] = 0x4, function (_0x7bb6ae) {
        _0x7bb6ae[_0x7bb6ae['SolidColor'] = 0x0] = 'SolidColor', _0x7bb6ae[_0x7bb6ae['Sky'] = 0x1] = 'Sky', _0x7bb6ae[_0x7bb6ae['DepthOnly'] = 0x2] = 'DepthOnly', _0x7bb6ae[_0x7bb6ae['Nothing'] = 0x3] = 'Nothing';
    }(_0x1f405c['CameraClea' + 'rFlags'] || (_0x1f405c['CameraClea' + 'rFlags'] = {})), function (_0xe66647) {
        _0xe66647[_0xe66647['BeforeForw' + 'ardOpaque'] = 0x0] = 'BeforeForw' + 'ardOpaque', _0xe66647[_0xe66647['BeforeSkyB' + 'ox'] = 0x2] = 'BeforeSkyB' + 'ox', _0xe66647[_0xe66647['BeforeTran' + 'sparent'] = 0x4] = 'BeforeTran' + 'sparent', _0xe66647[_0xe66647['BeforeImag' + 'eEffect'] = 0x6] = 'BeforeImag' + 'eEffect', _0xe66647[_0xe66647['AfterEvery' + 'Thing'] = 0x8] = 'AfterEvery' + 'Thing';
    }(_0x1f405c['CameraEven' + 'tFlags'] || (_0x1f405c['CameraEven' + 'tFlags'] = {}));
    class _0x53b337 extends _0x307038 {
        constructor(_0x2593c2 = 0x0, _0x5728ab = 0.3, _0x235964 = 0x3e8) {
            super(_0x5728ab, _0x235964), this['_updateVie' + 'wMatrix'] = !![], this['_postProce' + 'ss'] = null, this['_enableHDR'] = ![], this['_viewportP' + 'arams'] = new _0x18425e(), this['_projectio' + 'nParams'] = new _0x18425e(), this['_needBuilt' + 'InRenderTe' + 'xture'] = ![], this['_offScreen' + 'RenderText' + 'ure'] = null, this['_internalR' + 'enderTextu' + 're'] = null, this['_cameraEve' + 'ntCommandB' + 'uffer'] = {}, this['_clusterPl' + 'aneCacheFl' + 'ag'] = new _0x378045(-0x1, -0x1), this['_screenOff' + 'setScale'] = new _0x18425e(), this['enableRend' + 'er'] = !![], this['clearFlag'] = _0x1f405c['CameraClea' + 'rFlags']['SolidColor'], this['_viewMatri' + 'x'] = new _0x4c2288(), this['_projectio' + 'nMatrix'] = new _0x4c2288(), this['_projectio' + 'nViewMatri' + 'x'] = new _0x4c2288(), this['_viewport'] = new _0x2b4b54(0x0, 0x0, 0x0, 0x0), this['_normalize' + 'dViewport'] = new _0x2b4b54(0x0, 0x0, 0x1, 0x1), this['_aspectRat' + 'io'] = _0x2593c2, this['_boundFrus' + 'tum'] = new _0x4fa1ff(new _0x4c2288()), this['_calculate' + 'Projection' + 'Matrix'](), _0x442335['Laya']['stage']['on'](_0x442335['Event']['RESIZE'], this, this['_onScreenS' + 'izeChanged']), this['transform']['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        get ['aspectRati' + 'o']() {
            if (this['_aspectRat' + 'io'] === 0x0) {
                var _0xa24ce6 = this['viewport'];
                return _0xa24ce6['width'] / _0xa24ce6['height'];
            }
            return this['_aspectRat' + 'io'];
        }
        set ['aspectRati' + 'o'](_0x176e33) {
            if (_0x176e33 < 0x0)
                throw new Error('Camera:\x20th' + 'e\x20aspect\x20r' + 'atio\x20has\x20t' + 'o\x20be\x20a\x20pos' + 'itive\x20real' + '\x20number.');
            this['_aspectRat' + 'io'] = _0x176e33, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['viewport']() {
            if (this['_offScreen' + 'RenderText' + 'ure'])
                this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], this['_offScreen' + 'RenderText' + 'ure']['width'], this['_offScreen' + 'RenderText' + 'ure']['height']);
            else
                this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], _0x514492['clientWidt' + 'h'], _0x514492['clientHeig' + 'ht']);
            return this['_viewport'];
        }
        set ['viewport'](_0x49e03a) {
            var _0x1624ca, _0xe0736e;
            this['_offScreen' + 'RenderText' + 'ure'] ? (_0x1624ca = this['_offScreen' + 'RenderText' + 'ure']['width'], _0xe0736e = this['_offScreen' + 'RenderText' + 'ure']['height']) : (_0x1624ca = _0x514492['clientWidt' + 'h'], _0xe0736e = _0x514492['clientHeig' + 'ht']), this['_normalize' + 'dViewport']['x'] = _0x49e03a['x'] / _0x1624ca, this['_normalize' + 'dViewport']['y'] = _0x49e03a['y'] / _0xe0736e, this['_normalize' + 'dViewport']['width'] = _0x49e03a['width'] / _0x1624ca, this['_normalize' + 'dViewport']['height'] = _0x49e03a['height'] / _0xe0736e, this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], _0x1624ca, _0xe0736e), this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['normalized' + 'Viewport']() {
            return this['_normalize' + 'dViewport'];
        }
        set ['normalized' + 'Viewport'](_0x136193) {
            var _0x2ffada, _0x34cbed;
            this['_offScreen' + 'RenderText' + 'ure'] ? (_0x2ffada = this['_offScreen' + 'RenderText' + 'ure']['width'], _0x34cbed = this['_offScreen' + 'RenderText' + 'ure']['height']) : (_0x2ffada = _0x514492['clientWidt' + 'h'], _0x34cbed = _0x514492['clientHeig' + 'ht']);
            if (this['_normalize' + 'dViewport'] !== _0x136193)
                _0x136193['cloneTo'](this['_normalize' + 'dViewport']);
            this['_calculati' + 'onViewport'](_0x136193, _0x2ffada, _0x34cbed), this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['viewMatrix']() {
            if (this['_updateVie' + 'wMatrix']) {
                var _0xa99be3 = this['transform']['getWorldLo' + 'ssyScale'](), _0x1c1022 = _0xa99be3['x'], _0x343622 = _0xa99be3['y'], _0x5046b3 = _0xa99be3['z'], _0x1bbaac = this['_viewMatri' + 'x']['elements'];
                this['transform']['worldMatri' + 'x']['cloneTo'](this['_viewMatri' + 'x']), _0x1bbaac[0x0] /= _0x1c1022, _0x1bbaac[0x1] /= _0x1c1022, _0x1bbaac[0x2] /= _0x1c1022, _0x1bbaac[0x4] /= _0x343622, _0x1bbaac[0x5] /= _0x343622, _0x1bbaac[0x6] /= _0x343622, _0x1bbaac[0x8] /= _0x5046b3, _0x1bbaac[0x9] /= _0x5046b3, _0x1bbaac[0xa] /= _0x5046b3, this['_viewMatri' + 'x']['invert'](this['_viewMatri' + 'x']), this['_updateVie' + 'wMatrix'] = ![];
            }
            return this['_viewMatri' + 'x'];
        }
        get ['projection' + 'Matrix']() {
            return this['_projectio' + 'nMatrix'];
        }
        set ['projection' + 'Matrix'](_0x4168f7) {
            this['_projectio' + 'nMatrix'] = _0x4168f7, this['_useUserPr' + 'ojectionMa' + 'trix'] = !![];
        }
        get ['projection' + 'ViewMatrix']() {
            return _0x4c2288['multiply'](this['projection' + 'Matrix'], this['viewMatrix'], this['_projectio' + 'nViewMatri' + 'x']), this['_projectio' + 'nViewMatri' + 'x'];
        }
        get ['boundFrust' + 'um']() {
            return this['_boundFrus' + 'tum']['matrix'] = this['projection' + 'ViewMatrix'], this['_boundFrus' + 'tum'];
        }
        get ['renderTarg' + 'et']() {
            return this['_offScreen' + 'RenderText' + 'ure'];
        }
        set ['renderTarg' + 'et'](_0x43fc43) {
            var _0x2e4bb2 = this['_offScreen' + 'RenderText' + 'ure'];
            _0x2e4bb2 !== _0x43fc43 && (_0x2e4bb2 && (_0x2e4bb2['_isCameraT' + 'arget'] = ![]), _0x43fc43 && (_0x43fc43['_isCameraT' + 'arget'] = !![]), this['_offScreen' + 'RenderText' + 'ure'] = _0x43fc43, this['_calculate' + 'Projection' + 'Matrix']());
        }
        get ['postProces' + 's']() {
            return this['_postProce' + 'ss'];
        }
        set ['postProces' + 's'](_0xd68152) {
            this['_postProce' + 'ss'] = _0xd68152;
            if (!_0xd68152)
                return;
            _0xd68152 && _0xd68152['_init'](this);
        }
        get ['enableHDR']() {
            return this['_enableHDR'];
        }
        set ['enableHDR'](_0x6a85ad) {
            if (_0x6a85ad && !_0x442335['SystemUtil' + 's']['supportRen' + 'derTexture' + 'Format'](_0x442335['RenderText' + 'ureFormat']['R16G16B16A' + '16'])) {
                console['warn']('Camera:can' + '\x27t\x20enable\x20' + 'HDR\x20in\x20thi' + 's\x20device.');
                return;
            }
            this['_enableHDR'] = _0x6a85ad;
        }
        get ['enableBuil' + 'tInRenderT' + 'exture']() {
            return this['_needBuilt' + 'InRenderTe' + 'xture'];
        }
        set ['enableBuil' + 'tInRenderT' + 'exture'](_0x2aa498) {
            this['_needBuilt' + 'InRenderTe' + 'xture'] = _0x2aa498;
        }
        ['_calculati' + 'onViewport'](_0x94c605, _0x4d32c9, _0x5f52b3) {
            var _0x590754 = _0x94c605['x'] * _0x4d32c9, _0x31ea4f = _0x94c605['y'] * _0x5f52b3, _0x4391a6 = _0x590754 + Math['max'](_0x94c605['width'] * _0x4d32c9, 0x0), _0x20911d = _0x31ea4f + Math['max'](_0x94c605['height'] * _0x5f52b3, 0x0), _0x17230d = Math['ceil'](_0x590754), _0x5df712 = Math['ceil'](_0x31ea4f), _0x102d04 = Math['floor'](_0x4391a6), _0x42483e = Math['floor'](_0x20911d), _0x2e47bb = _0x17230d - _0x590754 >= 0.5 ? Math['floor'](_0x590754) : _0x17230d, _0x3f1410 = _0x5df712 - _0x31ea4f >= 0.5 ? Math['floor'](_0x31ea4f) : _0x5df712, _0x46290c = _0x4391a6 - _0x102d04 >= 0.5 ? Math['ceil'](_0x4391a6) : _0x102d04, _0x352cb3 = _0x20911d - _0x42483e >= 0.5 ? Math['ceil'](_0x20911d) : _0x42483e;
            this['_viewport']['x'] = _0x2e47bb, this['_viewport']['y'] = _0x3f1410, this['_viewport']['width'] = _0x46290c - _0x2e47bb, this['_viewport']['height'] = _0x352cb3 - _0x3f1410;
        }
        ['_calculate' + 'Projection' + 'Matrix']() {
            if (!this['_useUserPr' + 'ojectionMa' + 'trix']) {
                if (this['_orthograp' + 'hic']) {
                    var _0x4541f2 = this['orthograph' + 'icVertical' + 'Size'] * 0.5, _0x2052d5 = _0x4541f2 * this['aspectRati' + 'o'];
                    _0x4c2288['createOrth' + 'oOffCenter'](-_0x2052d5, _0x2052d5, -_0x4541f2, _0x4541f2, this['nearPlane'], this['farPlane'], this['_projectio' + 'nMatrix']);
                } else
                    _0x4c2288['createPers' + 'pective'](3.1416 * this['fieldOfVie' + 'w'] / 0xb4, this['aspectRati' + 'o'], this['nearPlane'], this['farPlane'], this['_projectio' + 'nMatrix']);
            }
        }
        ['_isLayerVi' + 'sible'](_0x930998) {
            return (Math['pow'](0x2, _0x930998) & this['cullingMas' + 'k']) != 0x0;
        }
        ['_onTransfo' + 'rmChanged'](_0x5c4005) {
            _0x5c4005 &= _0x203c65['TRANSFORM_' + 'WORLDMATRI' + 'X'], _0x5c4005 && (this['_updateVie' + 'wMatrix'] = !![]);
        }
        ['_parse'](_0x567985, _0x3ca077) {
            super['_parse'](_0x567985, _0x3ca077);
            var _0x3564ee = _0x567985['clearFlag'];
            _0x3564ee !== undefined && (this['clearFlag'] = _0x3564ee);
            var _0x56a08f = _0x567985['viewport'];
            this['normalized' + 'Viewport'] = new _0x2b4b54(_0x56a08f[0x0], _0x56a08f[0x1], _0x56a08f[0x2], _0x56a08f[0x3]);
            var _0x3e2053 = _0x567985['enableHDR'];
            _0x3e2053 !== undefined && (this['enableHDR'] = _0x3e2053);
        }
        ['_getCanvas' + 'Width']() {
            if (this['_offScreen' + 'RenderText' + 'ure'])
                return this['_offScreen' + 'RenderText' + 'ure']['width'];
            else
                return _0x514492['clientWidt' + 'h'];
        }
        ['_getCanvas' + 'Height']() {
            if (this['_offScreen' + 'RenderText' + 'ure'])
                return this['_offScreen' + 'RenderText' + 'ure']['height'];
            else
                return _0x514492['clientHeig' + 'ht'];
        }
        ['_getRender' + 'Texture']() {
            return this['_internalR' + 'enderTextu' + 're'] || this['_offScreen' + 'RenderText' + 'ure'];
        }
        ['_needInter' + 'nalRenderT' + 'exture']() {
            return this['_postProce' + 'ss'] || this['_enableHDR'] || this['_needBuilt' + 'InRenderTe' + 'xture'] ? !![] : ![];
        }
        ['_getRender' + 'TextureFor' + 'mat']() {
            if (this['_enableHDR'])
                return _0x442335['RenderText' + 'ureFormat']['R16G16B16A' + '16'];
            else
                return _0x442335['RenderText' + 'ureFormat']['R8G8B8'];
        }
        ['_prepareCa' + 'meraToRend' + 'er']() {
            super['_prepareCa' + 'meraToRend' + 'er']();
            var _0x56e0a2 = this['viewport'];
            this['_viewportP' + 'arams']['setValue'](_0x56e0a2['x'], _0x56e0a2['y'], _0x56e0a2['width'], _0x56e0a2['height']), this['_projectio' + 'nParams']['setValue'](this['_nearPlane'], this['_farPlane'], _0x514492['_instance']['invertY'] ? -0x1 : 0x1, 0x0), this['_shaderVal' + 'ues']['setVector'](_0x307038['VIEWPORT'], this['_viewportP' + 'arams']), this['_shaderVal' + 'ues']['setVector'](_0x307038['PROJECTION' + '_PARAMS'], this['_projectio' + 'nParams']);
        }
        ['_applyView' + 'Project'](_0x34ac79, _0x254f25, _0x7a6d38) {
            var _0xc72e86, _0xfa691b = this['_shaderVal' + 'ues'];
            _0x34ac79['invertY'] ? (_0x4c2288['multiply'](_0x307038['_invertYSc' + 'aleMatrix'], _0x7a6d38, _0x307038['_invertYPr' + 'ojectionMa' + 'trix']), _0x4c2288['multiply'](_0x307038['_invertYPr' + 'ojectionMa' + 'trix'], _0x254f25, _0x307038['_invertYPr' + 'ojectionVi' + 'ewMatrix']), _0x7a6d38 = _0x307038['_invertYPr' + 'ojectionMa' + 'trix'], _0xc72e86 = _0x307038['_invertYPr' + 'ojectionVi' + 'ewMatrix']) : (_0x4c2288['multiply'](_0x7a6d38, _0x254f25, this['_projectio' + 'nViewMatri' + 'x']), _0xc72e86 = this['_projectio' + 'nViewMatri' + 'x']), _0x34ac79['viewMatrix'] = _0x254f25, _0x34ac79['projection' + 'Matrix'] = _0x7a6d38, _0x34ac79['projection' + 'ViewMatrix'] = _0xc72e86, _0xfa691b['setMatrix4' + 'x4'](_0x307038['VIEWMATRIX'], _0x254f25), _0xfa691b['setMatrix4' + 'x4'](_0x307038['PROJECTMAT' + 'RIX'], _0x7a6d38), _0xfa691b['setMatrix4' + 'x4'](_0x307038['VIEWPROJEC' + 'TMATRIX'], _0xc72e86);
        }
        ['_updateClu' + 'sterPlaneX' + 'Y']() {
            var _0x14644d = this['fieldOfVie' + 'w'], _0x2064ca = this['aspectRati' + 'o'];
            if (this['_clusterPl' + 'aneCacheFl' + 'ag']['x'] !== _0x14644d || this['_clusterPl' + 'aneCacheFl' + 'ag']['y'] !== _0x2064ca) {
                var _0x1cbff7 = _0x1a3b39['_config']['lightClust' + 'erCount'], _0x3cf208 = _0x1cbff7['x'], _0x7371b2 = _0x1cbff7['y'], _0x481a49 = _0x3cf208 + 0x1, _0x3de70d = _0x7371b2 + 0x1, _0x4f0196 = this['_clusterXP' + 'lanes'], _0x1009f8 = this['_clusterYP' + 'lanes'];
                if (!_0x4f0196) {
                    _0x4f0196 = this['_clusterXP' + 'lanes'] = new Array(_0x481a49), _0x1009f8 = this['_clusterYP' + 'lanes'] = new Array(_0x3de70d);
                    for (var _0x58855f = 0x0; _0x58855f < _0x481a49; _0x58855f++)
                        _0x4f0196[_0x58855f] = new _0x352206();
                    for (var _0x58855f = 0x0; _0x58855f < _0x3de70d; _0x58855f++)
                        _0x1009f8[_0x58855f] = new _0x352206();
                }
                var _0x6a849d = Math['tan'](this['fieldOfVie' + 'w'] / 0x2 * Math['PI'] / 0xb4), _0x55273f = this['aspectRati' + 'o'] * _0x6a849d, _0x25c230 = 0x2 * _0x6a849d / _0x3cf208, _0xf470ee = 0x2 * _0x55273f / _0x7371b2;
                for (var _0x58855f = 0x0; _0x58855f < _0x481a49; _0x58855f++) {
                    var _0x3558ac = -_0x55273f + _0xf470ee * _0x58855f, _0x161703 = Math['sqrt'](0x1 + _0x3558ac * _0x3558ac), _0x42d733 = 0x1 / _0x161703, _0x172f37 = _0x4f0196[_0x58855f];
                    _0x172f37['setValue'](_0x42d733, 0x0, -_0x3558ac * _0x42d733);
                }
                for (var _0x58855f = 0x0; _0x58855f < _0x3de70d; _0x58855f++) {
                    var _0x3558ac = _0x6a849d - _0x25c230 * _0x58855f, _0x161703 = Math['sqrt'](0x1 + _0x3558ac * _0x3558ac), _0x4de5be = -0x1 / _0x161703, _0x521023 = _0x1009f8[_0x58855f];
                    _0x521023['setValue'](0x0, _0x4de5be, -_0x3558ac * _0x4de5be);
                }
                this['_clusterPl' + 'aneCacheFl' + 'ag']['x'] = _0x14644d, this['_clusterPl' + 'aneCacheFl' + 'ag']['y'] = _0x2064ca;
            }
        }
        ['_applyComm' + 'andBuffer'](_0x40ccaf, _0x4daea3) {
            var _0x10fb54 = _0x442335['LayaGL']['instance'], _0x30aea6 = this['_cameraEve' + 'ntCommandB' + 'uffer'][_0x40ccaf];
            if (!_0x30aea6 || _0x30aea6['length'] == 0x0)
                return;
            if (this['_internalR' + 'enderTextu' + 're'])
                this['_internalR' + 'enderTextu' + 're']['_end']();
            _0x30aea6['forEach'](function (_0x3a8c97) {
                _0x3a8c97['_context'] = _0x4daea3, _0x3a8c97['_apply']();
            }), _0x40e7a5['currentAct' + 'ive'] && _0x40e7a5['currentAct' + 'ive']['_end']();
            if (this['_internalR' + 'enderTextu' + 're'])
                this['_internalR' + 'enderTextu' + 're']['_start']();
            else
                _0x10fb54['bindFrameb' + 'uffer'](_0x10fb54['FRAMEBUFFE' + 'R'], null);
            _0x10fb54['viewport'](0x0, 0x0, _0x4daea3['viewport']['width'], _0x4daea3['viewport']['height']);
        }
        ['render'](_0x544cfb = null, _0x325192 = null) {
            if (!this['activeInHi' + 'erarchy'])
                return;
            var _0x1407b9 = this['viewport'], _0x2e2b72 = this['_needInter' + 'nalRenderT' + 'exture'](), _0x2d2d60 = _0x442335['LayaGL']['instance'], _0x1861a3 = _0x514492['_instance'], _0x37a251 = _0x1861a3['scene'] = this['_scene'];
            _0x1861a3['pipelineMo' + 'de'] = 'Forward';
            _0x2e2b72 ? (this['_internalR' + 'enderTextu' + 're'] = _0x40e7a5['createFrom' + 'Pool'](_0x1407b9['width'], _0x1407b9['height'], this['_getRender' + 'TextureFor' + 'mat'](), _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']), this['_internalR' + 'enderTextu' + 're']['filterMode'] = _0x442335['FilterMode']['Bilinear']) : this['_internalR' + 'enderTextu' + 're'] = null;
            var _0x3e9c4b, _0x1ad609 = _0x37a251['_mainDirec' + 'tionLight'], _0x5a6ce9 = _0x1ad609 && _0x1ad609['shadowMode'] !== _0x1f405c['ShadowMode']['None'] && _0x12f0cf['supportSha' + 'dow']();
            _0x5a6ce9 ? (_0x37a251['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT']), _0x37a251['_shaderVal' + 'ues']['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW']), _0x3e9c4b = _0x207eb6['Scene3D']['_shadowCas' + 'terPass'], _0x3e9c4b['update'](this, _0x1ad609, _0x207eb6['ShadowLigh' + 'tType']['DirectionL' + 'ight']), _0x3e9c4b['render'](_0x1861a3, _0x37a251, _0x207eb6['ShadowLigh' + 'tType']['DirectionL' + 'ight'])) : _0x37a251['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW']);
            var _0x5d0a79 = _0x37a251['_mainSpotL' + 'ight'], _0x4b3b96 = _0x5d0a79 && _0x5d0a79['shadowMode'] !== _0x1f405c['ShadowMode']['None'] && _0x12f0cf['supportSha' + 'dow']();
            _0x4b3b96 ? (_0x37a251['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW']), _0x37a251['_shaderVal' + 'ues']['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT']), _0x3e9c4b = _0x207eb6['Scene3D']['_shadowCas' + 'terPass'], _0x3e9c4b['update'](this, _0x5d0a79, _0x207eb6['ShadowLigh' + 'tType']['SpotLight']), _0x3e9c4b['render'](_0x1861a3, _0x37a251, _0x207eb6['ShadowLigh' + 'tType']['SpotLight'])) : _0x37a251['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT']);
            if (_0x5a6ce9)
                _0x37a251['_shaderVal' + 'ues']['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW']);
            if (_0x4b3b96)
                _0x37a251['_shaderVal' + 'ues']['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT']);
            _0x1861a3['camera'] = this, _0x1861a3['cameraShad' + 'erValue'] = this['_shaderVal' + 'ues'], _0x53b337['_updateMar' + 'k']++, _0x37a251['_preRender' + 'Script']();
            if (_0x2e2b72 && !this['_offScreen' + 'RenderText' + 'ure'] && (this['clearFlag'] == _0x1f405c['CameraClea' + 'rFlags']['DepthOnly'] || this['clearFlag'] == _0x1f405c['CameraClea' + 'rFlags']['Nothing'])) {
                if (this['_enableHDR']) {
                    var _0x964b26 = _0x40e7a5['createFrom' + 'Pool'](_0x1407b9['width'], _0x1407b9['height'], _0x442335['RenderText' + 'ureFormat']['R8G8B8'], _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']);
                    _0x964b26['filterMode'] = _0x442335['FilterMode']['Bilinear'], _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2d2d60, _0x2d2d60['TEXTURE_2D'], _0x964b26['_getSource']()), _0x2d2d60['copyTexSub' + 'Image2D'](_0x2d2d60['TEXTURE_2D'], 0x0, 0x0, 0x0, _0x1407b9['x'], _0x514492['clientHeig' + 'ht'] - (_0x1407b9['y'] + _0x1407b9['height']), _0x1407b9['width'], _0x1407b9['height']);
                    var _0x1e3276 = _0x477064['create'](_0x964b26, this['_internalR' + 'enderTextu' + 're']);
                    _0x1e3276['run'](), _0x1e3276['recover'](), _0x40e7a5['recoverToP' + 'ool'](_0x964b26);
                } else
                    _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2d2d60, _0x2d2d60['TEXTURE_2D'], this['_internalR' + 'enderTextu' + 're']['_getSource']()), _0x2d2d60['copyTexSub' + 'Image2D'](_0x2d2d60['TEXTURE_2D'], 0x0, 0x0, 0x0, _0x1407b9['x'], _0x514492['clientHeig' + 'ht'] - (_0x1407b9['y'] + _0x1407b9['height']), _0x1407b9['width'], _0x1407b9['height']);
            }
            var _0x2537a0 = this['_getRender' + 'Texture']();
            _0x2537a0 && _0x2537a0['_start'](), _0x1861a3['viewport'] = _0x1407b9, this['_prepareCa' + 'meraToRend' + 'er']();
            var _0x212f67 = _0x1a3b39['_config']['_multiLigh' + 'ting'];
            _0x212f67 && _0x1f70a4['instance']['update'](this, this['_scene']), this['_applyView' + 'Project'](_0x1861a3, this['viewMatrix'], this['_projectio' + 'nMatrix']), _0x37a251['_preCullin' + 'g'](_0x1861a3, this, _0x544cfb, _0x325192), _0x37a251['_clear'](_0x2d2d60, _0x1861a3), this['_applyComm' + 'andBuffer'](_0x1f405c['CameraEven' + 'tFlags']['BeforeForw' + 'ardOpaque'], _0x1861a3), _0x37a251['_renderSce' + 'ne'](_0x1861a3, _0x207eb6['Scene3D']['SCENERENDE' + 'RFLAG_REND' + 'ERQPAQUE']), this['_applyComm' + 'andBuffer'](_0x1f405c['CameraEven' + 'tFlags']['BeforeSkyB' + 'ox'], _0x1861a3), _0x37a251['_renderSce' + 'ne'](_0x1861a3, _0x207eb6['Scene3D']['SCENERENDE' + 'RFLAG_SKYB' + 'OX']), this['_applyComm' + 'andBuffer'](_0x1f405c['CameraEven' + 'tFlags']['BeforeTran' + 'sparent'], _0x1861a3), _0x37a251['_renderSce' + 'ne'](_0x1861a3, _0x207eb6['Scene3D']['SCENERENDE' + 'RFLAG_REND' + 'ERTRANSPAR' + 'ENT']), _0x37a251['_postRende' + 'rScript'](), this['_applyComm' + 'andBuffer'](_0x1f405c['CameraEven' + 'tFlags']['BeforeImag' + 'eEffect'], _0x1861a3), _0x2537a0 && _0x2537a0['_end']();
            if (_0x2e2b72) {
                if (this['_postProce' + 'ss'])
                    this['_postProce' + 'ss']['_render'](), this['_postProce' + 'ss']['_applyPost' + 'ProcessCom' + 'mandBuffer' + 's']();
                else {
                    if (this['_enableHDR'] || this['_needBuilt' + 'InRenderTe' + 'xture']) {
                        var _0x559aab = this['_getCanvas' + 'Width'](), _0x273412 = this['_getCanvas' + 'Height']();
                        this['_screenOff' + 'setScale']['setValue'](_0x1407b9['x'] / _0x559aab, _0x1407b9['y'] / _0x273412, _0x1407b9['width'] / _0x559aab, _0x1407b9['height'] / _0x273412);
                        var _0x1e3276 = _0x477064['create'](this['_internalR' + 'enderTextu' + 're'], this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure'] : null, this['_screenOff' + 'setScale'], null, null, 0x0, _0x477064['_SCREENTYP' + 'E_QUAD'], null, !![]);
                        _0x1e3276['run'](), _0x1e3276['recover']();
                    }
                }
                _0x40e7a5['recoverToP' + 'ool'](this['_internalR' + 'enderTextu' + 're']);
            }
            this['_applyComm' + 'andBuffer'](_0x1f405c['CameraEven' + 'tFlags']['AfterEvery' + 'Thing'], _0x1861a3);
            if (_0x5a6ce9 || _0x4b3b96)
                _0x3e9c4b['cleanUp']();
        }
        ['viewportPo' + 'intToRay'](_0x2afcbe, _0x35c280) {
            _0x42fa6d['calculateC' + 'ursorRay'](_0x2afcbe, this['viewport'], this['_projectio' + 'nMatrix'], this['viewMatrix'], null, _0x35c280);
        }
        ['normalized' + 'ViewportPo' + 'intToRay'](_0x11dd11, _0x48ad3b) {
            var _0x4a0589 = _0x53b337['_tempVecto' + 'r20'], _0x164b7c = this['viewport'];
            _0x4a0589['x'] = _0x11dd11['x'] * _0x164b7c['width'], _0x4a0589['y'] = _0x11dd11['y'] * _0x164b7c['height'], _0x42fa6d['calculateC' + 'ursorRay'](_0x4a0589, this['viewport'], this['_projectio' + 'nMatrix'], this['viewMatrix'], null, _0x48ad3b);
        }
        ['worldToVie' + 'wportPoint'](_0x2763d7, _0x41960d) {
            _0x4c2288['multiply'](this['_projectio' + 'nMatrix'], this['_viewMatri' + 'x'], this['_projectio' + 'nViewMatri' + 'x']), this['viewport']['project'](_0x2763d7, this['_projectio' + 'nViewMatri' + 'x'], _0x41960d), _0x41960d['x'] = _0x41960d['x'] / _0x442335['Laya']['stage']['clientScal' + 'eX'], _0x41960d['y'] = _0x41960d['y'] / _0x442335['Laya']['stage']['clientScal' + 'eY'];
        }
        ['worldToNor' + 'malizedVie' + 'wportPoint'](_0xfb0a38, _0x20f154) {
            _0x4c2288['multiply'](this['_projectio' + 'nMatrix'], this['_viewMatri' + 'x'], this['_projectio' + 'nViewMatri' + 'x']), this['normalized' + 'Viewport']['project'](_0xfb0a38, this['_projectio' + 'nViewMatri' + 'x'], _0x20f154), _0x20f154['x'] = _0x20f154['x'] / _0x442335['Laya']['stage']['clientScal' + 'eX'], _0x20f154['y'] = _0x20f154['y'] / _0x442335['Laya']['stage']['clientScal' + 'eY'];
        }
        ['convertScr' + 'eenCoordTo' + 'Orthograph' + 'icCoord'](_0x25165d, _0x270dc1) {
            if (this['_orthograp' + 'hic']) {
                var _0x552f80 = _0x514492['clientWidt' + 'h'], _0x44e8d1 = _0x514492['clientHeig' + 'ht'], _0xd00dcf = this['orthograph' + 'icVertical' + 'Size'] * this['aspectRati' + 'o'] / _0x552f80, _0x134e31 = this['orthograph' + 'icVertical' + 'Size'] / _0x44e8d1;
                return _0x270dc1['x'] = (-_0x552f80 / 0x2 + _0x25165d['x'] * _0x442335['Laya']['stage']['clientScal' + 'eX']) * _0xd00dcf, _0x270dc1['y'] = (_0x44e8d1 / 0x2 - _0x25165d['y'] * _0x442335['Laya']['stage']['clientScal' + 'eY']) * _0x134e31, _0x270dc1['z'] = (this['nearPlane'] - this['farPlane']) * (_0x25165d['z'] + 0x1) / 0x2 - this['nearPlane'], _0x352206['transformC' + 'oordinate'](_0x270dc1, this['transform']['worldMatri' + 'x'], _0x270dc1), !![];
            } else
                return ![];
        }
        ['destroy'](_0x3cf80b = !![]) {
            this['_offScreen' + 'RenderText' + 'ure'] = null, this['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']), super['destroy'](_0x3cf80b);
        }
        ['addCommand' + 'Buffer'](_0x2e7766, _0xbeff20) {
            var _0x574fec = this['_cameraEve' + 'ntCommandB' + 'uffer'][_0x2e7766];
            if (!_0x574fec)
                _0x574fec = this['_cameraEve' + 'ntCommandB' + 'uffer'][_0x2e7766] = [];
            if (_0x574fec['indexOf'](_0xbeff20) < 0x0)
                _0x574fec['push'](_0xbeff20);
            _0xbeff20['_camera'] = this;
        }
        ['removeComm' + 'andBuffer'](_0x4d57fd, _0x5c7a71) {
            var _0x10bbb0 = this['_cameraEve' + 'ntCommandB' + 'uffer'][_0x4d57fd];
            if (_0x10bbb0) {
                var _0x5a10ed = _0x10bbb0['indexOf'](_0x5c7a71);
                if (_0x5a10ed != -0x1)
                    _0x10bbb0['splice'](_0x5a10ed, 0x1);
            } else
                throw 'Camera:unk' + 'nown\x20event' + '.';
        }
        ['removeComm' + 'andBuffers'](_0x45c45d) {
            if (this['_cameraEve' + 'ntCommandB' + 'uffer'][_0x45c45d])
                this['_cameraEve' + 'ntCommandB' + 'uffer'][_0x45c45d]['length'] = 0x0;
        }
        ['_create']() {
            return new _0x53b337();
        }
    }
    _0x53b337['_tempVecto' + 'r20'] = new _0x378045(), _0x53b337['_updateMar' + 'k'] = 0x0;
    class _0x5ca4bd {
        constructor() {
            this['renderSubS' + 'hader'] = null, this['renderType'] = _0x5ca4bd['RENDERTYPE' + '_NORMAL'];
        }
        ['getInvertF' + 'ront']() {
            return this['_transform']['_isFrontFa' + 'ceInvert'];
        }
        ['setTransfo' + 'rm'](_0x57866b) {
            this['_transform'] = _0x57866b;
        }
        ['setGeometr' + 'y'](_0x44a025) {
            this['_geometry'] = _0x44a025;
        }
        ['addToOpaqu' + 'eRenderQue' + 'ue'](_0x4ed5d0, _0x42e954) {
            _0x42e954['elements']['add'](this);
        }
        ['addToTrans' + 'parentRend' + 'erQueue'](_0x183bab, _0x3048ef) {
            _0x3048ef['elements']['add'](this), _0x3048ef['lastTransp' + 'arentBatch' + 'ed'] = ![], _0x3048ef['lastTransp' + 'arentRende' + 'rElement'] = this;
        }
        ['_update'](_0x203d55, _0xef83e, _0x26b87c, _0x1cc6d8, _0x23b46c = 0x0) {
            if (this['material']) {
                var _0x370cb4 = this['material']['_shader']['getSubShad' + 'erAt'](0x0);
                this['renderSubS' + 'hader'] = null;
                if (_0x26b87c) {
                    if (_0x1cc6d8) {
                        var _0x264c70 = _0x370cb4['getFlag'](_0x1cc6d8);
                        if (_0x264c70) {
                            var _0x49250f = _0x26b87c['_subShader' + 's'];
                            for (var _0x51065 = 0x0, _0x57a360 = _0x49250f['length']; _0x51065 < _0x57a360; _0x51065++) {
                                var _0x19c7e5 = _0x49250f[_0x51065];
                                if (_0x264c70 === _0x19c7e5['getFlag'](_0x1cc6d8)) {
                                    this['renderSubS' + 'hader'] = _0x19c7e5;
                                    break;
                                }
                            }
                            if (!this['renderSubS' + 'hader'])
                                return;
                        } else
                            return;
                    } else
                        this['renderSubS' + 'hader'] = _0x26b87c['getSubShad' + 'erAt'](_0x23b46c);
                } else
                    this['renderSubS' + 'hader'] = _0x370cb4;
                var _0x43a947 = _0x203d55['_getRender' + 'Queue'](this['material']['renderQueu' + 'e']);
                if (_0x43a947['isTranspar' + 'ent'])
                    this['addToTrans' + 'parentRend' + 'erQueue'](_0xef83e, _0x43a947);
                else
                    this['addToOpaqu' + 'eRenderQue' + 'ue'](_0xef83e, _0x43a947);
            }
        }
        ['_render'](_0x2648cc) {
            var _0x5decbc = _0x2648cc['invertY'], _0x279dd1, _0xab2a5f, _0x5c02c6, _0x4769f8 = _0x53b337['_updateMar' + 'k'], _0xe18c33 = _0x2648cc['scene'], _0x498cc4 = _0x2648cc['cameraShad' + 'erValue'], _0x1f0ac1 = this['_transform'], _0x1ab451 = this['_geometry'];
            _0x2648cc['renderElem' + 'ent'] = this;
            var _0x484f2e = _0x4769f8 !== this['render']['_updateMar' + 'k'] || this['renderType'] !== this['render']['_updateRen' + 'derType'];
            _0x484f2e ? (this['render']['_renderUpd' + 'ate'](_0x2648cc, _0x1f0ac1), this['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x2648cc, _0x1f0ac1), this['render']['_updateMar' + 'k'] = _0x4769f8, this['render']['_updateRen' + 'derType'] = this['renderType']) : this['renderType'] == _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] && (this['render']['_renderUpd' + 'ate'](_0x2648cc, _0x1f0ac1), this['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x2648cc, _0x1f0ac1));
            var _0x51720b = _0x2648cc['pipelineMo' + 'de'];
            if (_0x1ab451['_prepareRe' + 'nder'](_0x2648cc)) {
                var _0x48eb9e = this['renderSubS' + 'hader']['_passes'];
                for (var _0x36a873 = 0x0, _0x5ae21e = _0x48eb9e['length']; _0x36a873 < _0x5ae21e; _0x36a873++) {
                    var _0x30db9b = _0x48eb9e[_0x36a873];
                    if (_0x30db9b['_pipelineM' + 'ode'] !== _0x51720b)
                        continue;
                    var _0x1f07b4 = _0x5ca4bd['_compileDe' + 'fine'];
                    _0xe18c33['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x1f07b4), _0x1f07b4['addDefineD' + 'atas'](this['render']['_shaderVal' + 'ues']['_defineDat' + 'as']), _0x1f07b4['addDefineD' + 'atas'](this['material']['_shaderVal' + 'ues']['_defineDat' + 'as']);
                    var _0xcc22ad = _0x2648cc['shader'] = _0x30db9b['withCompil' + 'e'](_0x1f07b4), _0x124752 = _0xcc22ad['bind'](), _0x50a8e3 = _0x4769f8 !== _0xcc22ad['_uploadMar' + 'k'], _0x61050e = _0xcc22ad['_uploadSce' + 'ne'] !== _0xe18c33 || _0x50a8e3;
                    (_0x61050e || _0x124752) && (_0xcc22ad['uploadUnif' + 'orms'](_0xcc22ad['_sceneUnif' + 'ormParamsM' + 'ap'], _0xe18c33['_shaderVal' + 'ues'], _0x61050e), _0xcc22ad['_uploadSce' + 'ne'] = _0xe18c33);
                    var _0x5a153f = _0xcc22ad['_uploadRen' + 'der'] !== this['render'] || _0xcc22ad['_uploadRen' + 'derType'] !== this['renderType'] || _0x50a8e3;
                    (_0x5a153f || _0x124752) && (_0xcc22ad['uploadUnif' + 'orms'](_0xcc22ad['_spriteUni' + 'formParams' + 'Map'], this['render']['_shaderVal' + 'ues'], _0x5a153f), _0xcc22ad['_uploadRen' + 'der'] = this['render'], _0xcc22ad['_uploadRen' + 'derType'] = this['renderType']);
                    var _0x33875b = _0xcc22ad['_uploadCam' + 'eraShaderV' + 'alue'] !== _0x498cc4 || _0x50a8e3;
                    (_0x33875b || _0x124752) && (_0xcc22ad['uploadUnif' + 'orms'](_0xcc22ad['_cameraUni' + 'formParams' + 'Map'], _0x498cc4, _0x33875b), _0xcc22ad['_uploadCam' + 'eraShaderV' + 'alue'] = _0x498cc4);
                    var _0x50371a = _0xcc22ad['_uploadMat' + 'erial'] !== this['material'] || _0x50a8e3;
                    (_0x50371a || _0x124752) && (_0xcc22ad['uploadUnif' + 'orms'](_0xcc22ad['_materialU' + 'niformPara' + 'msMap'], this['material']['_shaderVal' + 'ues'], _0x50371a), _0xcc22ad['_uploadMat' + 'erial'] = this['material']);
                    var _0x35fc47 = this['material']['_shaderVal' + 'ues'];
                    _0x279dd1 !== this['material'] || _0xab2a5f !== _0xcc22ad ? (_0xcc22ad['uploadRend' + 'erStateBle' + 'ndDepth'](_0x35fc47), _0xcc22ad['uploadRend' + 'erStateFro' + 'ntFace'](_0x35fc47, _0x5decbc, this['getInvertF' + 'ront']()), _0x279dd1 = this['material'], _0xab2a5f = _0xcc22ad, _0x5c02c6 = this['render']) : _0x5c02c6 !== this['render'] && (_0xcc22ad['uploadRend' + 'erStateFro' + 'ntFace'](_0x35fc47, _0x5decbc, this['getInvertF' + 'ront']()), _0x5c02c6 = this['render']), _0x1ab451['_render'](_0x2648cc), _0xcc22ad['_uploadMar' + 'k'] = _0x4769f8;
                }
            }
            if (this['renderType'] !== _0x5ca4bd['RENDERTYPE' + '_NORMAL'])
                this['render']['_revertBat' + 'chRenderUp' + 'date'](_0x2648cc);
        }
        ['destroy']() {
            this['_transform'] = null, this['_geometry'] = null, this['material'] = null, this['render'] = null;
        }
    }
    _0x5ca4bd['RENDERTYPE' + '_NORMAL'] = 0x0, _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH'] = 0x1, _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] = 0x2, _0x5ca4bd['RENDERTYPE' + '_VERTEXBAT' + 'CH'] = 0x3, _0x5ca4bd['_compileDe' + 'fine'] = new _0x1445c0();
    class _0x223429 extends _0xf86ce5 {
        static ['create'](_0x2462c5, _0x185b32, _0x1559dc, _0x2fe1ce) {
            var _0x5535cf;
            return _0x5535cf = _0x223429['_pool']['length'] > 0x0 ? _0x223429['_pool']['pop']() : new _0x223429(), _0x5535cf['_render'] = _0x2462c5, _0x5535cf['_material'] = _0x185b32, _0x5535cf['_subShader' + 'Index'] = _0x1559dc, _0x5535cf['_commandBu' + 'ffer'] = _0x2fe1ce, _0x5535cf;
        }
        ['_elementRe' + 'nder'](_0x3dac62, _0x6ef15b) {
            var _0x34e0b0 = _0x6ef15b['invertY'], _0x239041, _0x3cf4fe, _0xfe894c, _0x388470 = _0x53b337['_updateMar' + 'k'], _0x3f8d86 = _0x6ef15b['scene'], _0x54e80d = _0x6ef15b['cameraShad' + 'erValue'], _0x3aaa7a = _0x3dac62['_transform'], _0x3ba656 = _0x3dac62['_geometry'];
            _0x6ef15b['renderElem' + 'ent'] = _0x3dac62;
            var _0x1feca9 = _0x388470 !== _0x3dac62['render']['_updateMar' + 'k'] || _0x3dac62['renderType'] !== _0x3dac62['render']['_updateRen' + 'derType'];
            _0x1feca9 ? (_0x3dac62['render']['_renderUpd' + 'ate'](_0x6ef15b, _0x3aaa7a), _0x3dac62['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x6ef15b, _0x3aaa7a), _0x3dac62['render']['_updateMar' + 'k'] = _0x388470, _0x3dac62['render']['_updateRen' + 'derType'] = _0x3dac62['renderType']) : _0x3dac62['renderType'] == _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] && (_0x3dac62['render']['_renderUpd' + 'ate'](_0x6ef15b, _0x3aaa7a), _0x3dac62['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x6ef15b, _0x3aaa7a));
            var _0x8f9a37 = _0x6ef15b['pipelineMo' + 'de'];
            if (_0x3ba656['_prepareRe' + 'nder'](_0x6ef15b)) {
                var _0x1b4060 = _0x3dac62['renderSubS' + 'hader']['_passes'];
                for (var _0x226c22 = 0x0, _0x20816f = _0x1b4060['length']; _0x226c22 < _0x20816f; _0x226c22++) {
                    var _0x362526 = _0x1b4060[_0x226c22];
                    if (_0x362526['_pipelineM' + 'ode'] !== _0x8f9a37)
                        continue;
                    var _0x4c91be = _0x223429['_compileDe' + 'fine'];
                    _0x3f8d86['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x4c91be), _0x4c91be['addDefineD' + 'atas'](_0x3dac62['render']['_shaderVal' + 'ues']['_defineDat' + 'as']), _0x4c91be['addDefineD' + 'atas'](this['_material']['_shaderVal' + 'ues']['_defineDat' + 'as']);
                    var _0x7a553a = _0x6ef15b['shader'] = _0x362526['withCompil' + 'e'](_0x4c91be), _0x426e02 = _0x7a553a['bind'](), _0x34cf11 = _0x388470 !== _0x7a553a['_uploadMar' + 'k'], _0x422b91 = _0x7a553a['_uploadSce' + 'ne'] !== _0x3f8d86 || _0x34cf11;
                    (_0x422b91 || _0x426e02) && (_0x7a553a['uploadUnif' + 'orms'](_0x7a553a['_sceneUnif' + 'ormParamsM' + 'ap'], _0x3f8d86['_shaderVal' + 'ues'], _0x422b91), _0x7a553a['_uploadSce' + 'ne'] = _0x3f8d86);
                    var _0x10ed90 = _0x7a553a['_uploadRen' + 'der'] !== _0x3dac62['render'] || _0x7a553a['_uploadRen' + 'derType'] !== _0x3dac62['renderType'] || _0x34cf11;
                    (_0x10ed90 || _0x426e02) && (_0x7a553a['uploadUnif' + 'orms'](_0x7a553a['_spriteUni' + 'formParams' + 'Map'], _0x3dac62['render']['_shaderVal' + 'ues'], _0x10ed90), _0x7a553a['_uploadRen' + 'der'] = _0x3dac62['render'], _0x7a553a['_uploadRen' + 'derType'] = _0x3dac62['renderType']);
                    var _0x34e43c = _0x7a553a['_uploadCam' + 'eraShaderV' + 'alue'] !== _0x54e80d || _0x34cf11;
                    (_0x34e43c || _0x426e02) && (_0x7a553a['uploadUnif' + 'orms'](_0x7a553a['_cameraUni' + 'formParams' + 'Map'], _0x54e80d, _0x34e43c), _0x7a553a['_uploadCam' + 'eraShaderV' + 'alue'] = _0x54e80d);
                    var _0x73e189 = _0x7a553a['_uploadMat' + 'erial'] !== this['_material'] || _0x34cf11;
                    (_0x73e189 || _0x426e02) && (_0x7a553a['uploadUnif' + 'orms'](_0x7a553a['_materialU' + 'niformPara' + 'msMap'], this['_material']['_shaderVal' + 'ues'], _0x73e189), _0x7a553a['_uploadMat' + 'erial'] = this['_material']);
                    var _0xb73ce7 = this['_material']['_shaderVal' + 'ues'];
                    _0x239041 !== this['_material'] || _0x3cf4fe !== _0x7a553a ? (_0x7a553a['uploadRend' + 'erStateBle' + 'ndDepth'](_0xb73ce7), _0x7a553a['uploadRend' + 'erStateFro' + 'ntFace'](_0xb73ce7, _0x34e0b0, _0x3dac62['getInvertF' + 'ront']()), _0x239041 = this['_material'], _0x3cf4fe = _0x7a553a, _0xfe894c = _0x3dac62['render']) : _0xfe894c !== _0x3dac62['render'] && (_0x7a553a['uploadRend' + 'erStateFro' + 'ntFace'](_0xb73ce7, _0x34e0b0, _0x3dac62['getInvertF' + 'ront']()), _0xfe894c = _0x3dac62['render']), _0x3ba656['_render'](_0x6ef15b), _0x7a553a['_uploadMar' + 'k'] = _0x388470;
                }
            }
            if (_0x3dac62['renderType'] !== _0x5ca4bd['RENDERTYPE' + '_NORMAL'])
                _0x3dac62['render']['_revertBat' + 'chRenderUp' + 'date'](_0x6ef15b);
        }
        ['run']() {
            if (!this['_material'])
                throw 'This\x20rende' + 'r\x20command\x20' + 'material\x20c' + 'annot\x20be\x20e' + 'mpty';
            this['setContext'](this['_commandBu' + 'ffer']['_context']);
            var _0x4979c4 = this['_context'], _0x50cc49 = _0x4979c4['scene'], _0x8654de = this['_render']['_renderEle' + 'ments'];
            for (var _0x141b21 = 0x0, _0x37332b = _0x8654de['length']; _0x141b21 < _0x37332b; _0x141b21++) {
                var _0xc29b42 = _0x8654de[_0x141b21];
                _0xc29b42['_update'](_0x50cc49, _0x4979c4, this['_material']['_shader'], null, this['_subShader' + 'Index']), this['_elementRe' + 'nder'](_0xc29b42, _0x4979c4);
            }
        }
        ['recover']() {
            _0x223429['_pool']['push'](this);
        }
    }
    _0x223429['_pool'] = [], _0x223429['_compileDe' + 'fine'] = new _0x1445c0();
    class _0x1dede6 extends _0xf86ce5 {
        constructor() {
            super(...arguments), this['_nameID'] = 0x0, this['_value'] = null, this['_dataType'] = -0x1;
        }
        static ['create'](_0x162327, _0x574578, _0x231009, _0x5c3a17) {
            var _0x5da00a;
            return _0x5da00a = _0x1dede6['_pool']['length'] > 0x0 ? _0x1dede6['_pool']['pop']() : new _0x1dede6(), _0x5da00a['_nameID'] = _0x162327, _0x5da00a['_value'] = _0x574578, _0x5da00a['_dataType'] = _0x231009, _0x5da00a['_commandBu' + 'ffer'] = _0x5c3a17, _0x5da00a;
        }
        ['run']() {
            var _0x19aac8 = this['_commandBu' + 'ffer']['_camera']['scene']['_shaderVal' + 'ues'];
            switch (this['_dataType']) {
            case _0x1f405c['ShaderData' + 'Type']['Int']:
                _0x19aac8['setInt'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Number']:
                _0x19aac8['setNumber'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Bool']:
                _0x19aac8['setBool'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Matrix4x4']:
                _0x19aac8['setMatrix4' + 'x4'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Quaternion']:
                _0x19aac8['setQuatern' + 'ion'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Texture']:
                _0x19aac8['setTexture'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector']:
                _0x19aac8['setVector'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector2']:
                _0x19aac8['setVector2'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector3']:
                _0x19aac8['setVector3'](this['_nameID'], this['_value']);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Buffer']:
                _0x19aac8['setBuffer'](this['_nameID'], this['_value']);
                break;
            default:
                throw 'no\x20type\x20sh' + 'aderValue\x20' + 'on\x20this\x20Co' + 'mmendBuffe' + 'r';
            }
        }
        ['recover']() {
            _0x1dede6['_pool']['push'](this), this['_nameID'] = 0x0, this['_value'] = null, this['_dataType'] = -0x1;
        }
    }
    _0x1dede6['_pool'] = [];
    class _0x1b5fd0 {
        constructor() {
            this['_camera'] = null, this['_commands'] = [];
        }
        ['_apply']() {
            for (var _0x4a2790 = 0x0, _0x2a52b1 = this['_commands']['length']; _0x4a2790 < _0x2a52b1; _0x4a2790++)
                this['_commands'][_0x4a2790]['run']();
        }
        ['setShaderD' + 'ataTexture'](_0x3acb0a, _0x22eadc, _0x54b7f1) {
            this['_commands']['push'](_0x26bf81['create'](_0x3acb0a, _0x22eadc, _0x54b7f1, _0x1f405c['ShaderData' + 'Type']['Texture'], this));
        }
        ['setGlobalT' + 'exture'](_0x20ea42, _0x175d15) {
            this['_commands']['push'](_0x1dede6['create'](_0x20ea42, _0x175d15, _0x1f405c['ShaderData' + 'Type']['Texture'], this));
        }
        ['setShaderD' + 'ataVector'](_0x4be0c3, _0x3fb344, _0x5ce4f5) {
            this['_commands']['push'](_0x26bf81['create'](_0x4be0c3, _0x3fb344, _0x5ce4f5, _0x1f405c['ShaderData' + 'Type']['Vector'], this));
        }
        ['setGlobalV' + 'ector'](_0x31a74c, _0x82c32f) {
            this['_commands']['push'](_0x1dede6['create'](_0x31a74c, _0x82c32f, _0x1f405c['ShaderData' + 'Type']['Vector'], this));
        }
        ['setShaderD' + 'ataVector3'](_0x26784f, _0x339544, _0x4af902) {
            this['_commands']['push'](_0x26bf81['create'](_0x26784f, _0x339544, _0x4af902, _0x1f405c['ShaderData' + 'Type']['Vector3'], this));
        }
        ['setGlobalV' + 'ector3'](_0x4cba50, _0x3d1cf9) {
            this['_commands']['push'](_0x1dede6['create'](_0x4cba50, _0x3d1cf9, _0x1f405c['ShaderData' + 'Type']['Vector3'], this));
        }
        ['setShaderD' + 'ataVector2'](_0x453307, _0x1de7f0, _0x175e3b) {
            this['_commands']['push'](_0x26bf81['create'](_0x453307, _0x1de7f0, _0x175e3b, _0x1f405c['ShaderData' + 'Type']['Vector2'], this));
        }
        ['setGlobalV' + 'ector2'](_0x55f7d9, _0x357867) {
            this['_commands']['push'](_0x1dede6['create'](_0x55f7d9, _0x357867, _0x1f405c['ShaderData' + 'Type']['Vector2'], this));
        }
        ['setShaderD' + 'ataNumber'](_0x4e0966, _0x12e7f1, _0x337b53) {
            this['_commands']['push'](_0x26bf81['create'](_0x4e0966, _0x12e7f1, _0x337b53, _0x1f405c['ShaderData' + 'Type']['Number'], this));
        }
        ['setGlobalN' + 'umber'](_0x5ebd80, _0x524313) {
            this['_commands']['push'](_0x1dede6['create'](_0x5ebd80, _0x524313, _0x1f405c['ShaderData' + 'Type']['Number'], this));
        }
        ['setShaderD' + 'ataInt'](_0x335101, _0xd0b252, _0x3160e5) {
            this['_commands']['push'](_0x26bf81['create'](_0x335101, _0xd0b252, _0x3160e5, _0x1f405c['ShaderData' + 'Type']['Int'], this));
        }
        ['setGlobalI' + 'nt'](_0x2e1e71, _0x1ed57a) {
            this['_commands']['push'](_0x1dede6['create'](_0x2e1e71, _0x1ed57a, _0x1f405c['ShaderData' + 'Type']['Int'], this));
        }
        ['setShaderD' + 'ataMatrix'](_0x109556, _0x10a195, _0x555638) {
            this['_commands']['push'](_0x26bf81['create'](_0x109556, _0x10a195, _0x555638, _0x1f405c['ShaderData' + 'Type']['Matrix4x4'], this));
        }
        ['setGlobalM' + 'atrix'](_0x38de58, _0x392a04) {
            this['_commands']['push'](_0x1dede6['create'](_0x38de58, _0x392a04, _0x1f405c['ShaderData' + 'Type']['Matrix4x4'], this));
        }
        ['blitScreen' + 'Quad'](_0x1fbb1b, _0x5108f8, _0x1d6303 = null, _0x3ecb68 = null, _0x3bb24e = null, _0xf01d39 = 0x0) {
            this['_commands']['push'](_0x477064['create'](_0x1fbb1b, _0x5108f8, _0x1d6303, _0x3ecb68, _0x3bb24e, _0xf01d39, _0x477064['_SCREENTYP' + 'E_QUAD'], this));
        }
        ['blitScreen' + 'QuadByMate' + 'rial'](_0x202c0f, _0x3cd70d, _0xa2a85 = null, _0x5801f9 = null, _0x57e48d = 0x0) {
            var _0x6c8f82, _0x2300ec;
            _0x5801f9 && (_0x6c8f82 = _0x5801f9['_shader'], _0x2300ec = _0x5801f9['shaderData']), this['_commands']['push'](_0x477064['create'](_0x202c0f, _0x3cd70d, _0xa2a85, _0x6c8f82, _0x2300ec, _0x57e48d, _0x477064['_SCREENTYP' + 'E_QUAD'], this));
        }
        ['blitScreen' + 'Triangle'](_0x48bdee, _0xed5875, _0x26aa0b = null, _0x25cfe3 = null, _0x4db74d = null, _0x28cb77 = 0x0, _0x251746 = ![]) {
            this['_commands']['push'](_0x477064['create'](_0x48bdee, _0xed5875, _0x26aa0b, _0x25cfe3, _0x4db74d, _0x28cb77, _0x477064['_SCREENTYP' + 'E_TRIANGLE'], this, _0x251746));
        }
        ['setRenderT' + 'arget'](_0x4e19d3) {
            this['_commands']['push'](_0x2f3393['create'](_0x4e19d3));
        }
        ['clearRende' + 'rTarget'](_0x22cfdb, _0x18fad8, _0x255559, _0x36122f = 0x1) {
            this['_commands']['push'](_0x56b135['create'](_0x22cfdb, _0x18fad8, _0x255559, _0x36122f, this));
        }
        ['drawMesh'](_0x424d49, _0x389322, _0x23c033, _0x268d39, _0x13b87d) {
            this['_commands']['push'](_0xc20e76['create'](_0x424d49, _0x389322, _0x23c033, _0x268d39, _0x13b87d, this));
        }
        ['drawRender'](_0x31c805, _0x3e288f, _0x1ecad6) {
            this['_commands']['push'](_0x223429['create'](_0x31c805, _0x3e288f, _0x1ecad6, this));
        }
        ['clear']() {
            for (var _0x12fc97 = 0x0, _0xbcde2 = this['_commands']['length']; _0x12fc97 < _0xbcde2; _0x12fc97++)
                this['_commands'][_0x12fc97]['recover']();
            this['_commands']['length'] = 0x0;
        }
    }
    class _0x4a7a35 {
        constructor() {
            this['source'] = null, this['destinatio' + 'n'] = null, this['camera'] = null, this['compositeS' + 'haderData'] = null, this['command'] = null, this['deferredRe' + 'leaseTextu' + 'res'] = [];
        }
    }
    class _0x4835e1 {
        constructor() {
            this['_composite' + 'Shader'] = _0x18824e['find']('PostProces' + 'sComposite'), this['_composite' + 'ShaderData'] = new _0x1634f4(), this['_effects'] = [], this['_context'] = null, this['_context'] = new _0x4a7a35(), this['_context']['compositeS' + 'haderData'] = this['_composite' + 'ShaderData'], this['_context']['command'] = new _0x1b5fd0();
        }
        static ['__init__']() {
            _0x4835e1['SHADERDEFI' + 'NE_BLOOM_L' + 'OW'] = _0x18824e['getDefineB' + 'yName']('BLOOM_LOW'), _0x4835e1['SHADERDEFI' + 'NE_BLOOM'] = _0x18824e['getDefineB' + 'yName']('BLOOM'), _0x4835e1['SHADERDEFI' + 'NE_FINALPA' + 'SS'] = _0x18824e['getDefineB' + 'yName']('FINALPASS');
        }
        ['_init'](_0x443cca) {
            this['_context']['camera'] = _0x443cca, this['_context']['command']['_camera'] = _0x443cca;
        }
        ['_render']() {
            var _0x4e61bf = _0x1634f4['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'];
            _0x442335['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x1634f4['setRuntime' + 'ValueMode'](![]);
            var _0x49ab68 = this['_context']['camera'], _0xcdf876 = _0x49ab68['viewport'], _0x273d5b = _0x49ab68['_internalR' + 'enderTextu' + 're'], _0x121252 = _0x273d5b;
            this['_context']['command']['clear'](), this['_context']['source'] = _0x121252, this['_context']['destinatio' + 'n'] = _0x273d5b, this['_context']['compositeS' + 'haderData']['clearDefin' + 'e'](), this['_context']['compositeS' + 'haderData']['setTexture'](_0x4835e1['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'], _0x442335['Texture2D']['whiteTextu' + 're']);
            for (var _0x4c2d05 = 0x0, _0x559428 = this['_effects']['length']; _0x4c2d05 < _0x559428; _0x4c2d05++)
                this['_effects'][_0x4c2d05]['render'](this['_context']);
            this['_composite' + 'ShaderData']['addDefine'](_0x4835e1['SHADERDEFI' + 'NE_FINALPA' + 'SS']);
            var _0x355d51 = _0x49ab68['_offScreen' + 'RenderText' + 'ure'], _0x13b439 = _0x355d51 ? _0x355d51 : null;
            this['_context']['destinatio' + 'n'] = _0x13b439;
            var _0x7d62db = _0x49ab68['_getCanvas' + 'Width'](), _0x176e46 = _0x49ab68['_getCanvas' + 'Height']();
            _0x49ab68['_screenOff' + 'setScale']['setValue'](_0xcdf876['x'] / _0x7d62db, _0xcdf876['y'] / _0x176e46, _0xcdf876['width'] / _0x7d62db, _0xcdf876['height'] / _0x176e46), this['_context']['command']['blitScreen' + 'Triangle'](this['_context']['source'], _0x13b439, _0x49ab68['_screenOff' + 'setScale'], this['_composite' + 'Shader'], this['_composite' + 'ShaderData'], 0x0, !![]), _0x40e7a5['recoverToP' + 'ool'](_0x121252);
            var _0xb7e1d = this['_context']['deferredRe' + 'leaseTextu' + 'res'];
            for (_0x4c2d05 = 0x0, _0x559428 = _0xb7e1d['length']; _0x4c2d05 < _0x559428; _0x4c2d05++)
                _0x40e7a5['recoverToP' + 'ool'](_0xb7e1d[_0x4c2d05]);
            _0xb7e1d['length'] = 0x0, _0x442335['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x1634f4['setRuntime' + 'ValueMode'](_0x4e61bf);
        }
        ['addEffect'](_0x12a280) {
            this['_effects']['push'](_0x12a280);
        }
        ['removeEffe' + 'ct'](_0x453b3b) {
            var _0xcd7679 = this['_effects']['indexOf'](_0x453b3b);
            if (_0xcd7679 !== -0x1)
                this['_effects']['splice'](_0xcd7679, 0x1);
        }
        ['_applyPost' + 'ProcessCom' + 'mandBuffer' + 's']() {
            this['_context']['command']['_apply']();
        }
    }
    _0x4835e1['SHADERVALU' + 'E_MAINTEX'] = _0x18824e['propertyNa' + 'meToID']('u_MainTex'), _0x4835e1['SHADERVALU' + 'E_BLOOMTEX'] = _0x18824e['propertyNa' + 'meToID']('u_BloomTex'), _0x4835e1['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'] = _0x18824e['propertyNa' + 'meToID']('u_AutoExpo' + 'sureTex'), _0x4835e1['SHADERVALU' + 'E_BLOOM_DI' + 'RTTEX'] = _0x18824e['propertyNa' + 'meToID']('u_Bloom_Di' + 'rtTex'), _0x4835e1['SHADERVALU' + 'E_BLOOMTEX' + '_TEXELSIZE'] = _0x18824e['propertyNa' + 'meToID']('u_BloomTex' + '_TexelSize'), _0x4835e1['SHADERVALU' + 'E_BLOOM_DI' + 'RTTILEOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_Bloom_Di' + 'rtTileOffs' + 'et'), _0x4835e1['SHADERVALU' + 'E_BLOOM_SE' + 'TTINGS'] = _0x18824e['propertyNa' + 'meToID']('u_Bloom_Se' + 'ttings'), _0x4835e1['SHADERVALU' + 'E_BLOOM_CO' + 'LOR'] = _0x18824e['propertyNa' + 'meToID']('u_Bloom_Co' + 'lor');
    class _0xd6c41a extends _0x442335['EventDispa' + 'tcher'] {
        constructor(_0x1c5bee, _0x1dbe2b = null, _0x298208 = null, _0x29f594 = null, _0x1f12c9 = null) {
            super(), this['_owner'] = _0x1c5bee, this['_children'] = [], this['_localMatr' + 'ix'] = new Float32Array(0x10), this['_localPosi' + 'tion'] = new _0x352206(), this['_localRota' + 'tion'] = new _0x388291(), this['_localScal' + 'e'] = new _0x352206(), this['_worldMatr' + 'ix'] = new Float32Array(0x10), this['_localQuat' + 'ernionUpda' + 'te'] = ![], this['_locaEuler' + 'lUpdate'] = ![], this['_localUpda' + 'te'] = ![], this['_worldUpda' + 'te'] = !![];
        }
        ['_getlocalM' + 'atrix']() {
            return this['_localUpda' + 'te'] && (_0x47bed9['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](this['_localPosi' + 'tion'], this['_localRota' + 'tion'], this['_localScal' + 'e'], this['_localMatr' + 'ix']), this['_localUpda' + 'te'] = ![]), this['_localMatr' + 'ix'];
        }
        ['_onWorldTr' + 'ansform']() {
            if (!this['_worldUpda' + 'te']) {
                this['_worldUpda' + 'te'] = !![], this['event'](_0x442335['Event']['TRANSFORM_' + 'CHANGED']);
                for (var _0x28c025 = 0x0, _0x5ec55e = this['_children']['length']; _0x28c025 < _0x5ec55e; _0x28c025++)
                    this['_children'][_0x28c025]['_onWorldTr' + 'ansform']();
            }
        }
        get ['localPosit' + 'ion']() {
            return this['_localPosi' + 'tion'];
        }
        set ['localPosit' + 'ion'](_0x16d529) {
            this['_localPosi' + 'tion'] = _0x16d529, this['_localUpda' + 'te'] = !![], this['_onWorldTr' + 'ansform']();
        }
        get ['localRotat' + 'ion']() {
            if (this['_localQuat' + 'ernionUpda' + 'te']) {
                var _0x2d3ef3 = this['_localRota' + 'tionEuler'];
                _0x388291['createFrom' + 'YawPitchRo' + 'll'](_0x2d3ef3['y'] / _0xd6c41a['_angleToRa' + 'ndin'], _0x2d3ef3['x'] / _0xd6c41a['_angleToRa' + 'ndin'], _0x2d3ef3['z'] / _0xd6c41a['_angleToRa' + 'ndin'], this['_localRota' + 'tion']), this['_localQuat' + 'ernionUpda' + 'te'] = ![];
            }
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x21fd89) {
            this['_localRota' + 'tion'] = _0x21fd89, this['_locaEuler' + 'lUpdate'] = !![], this['_localQuat' + 'ernionUpda' + 'te'] = ![], this['_localUpda' + 'te'] = !![], this['_onWorldTr' + 'ansform']();
        }
        get ['localScale']() {
            return this['_localScal' + 'e'];
        }
        set ['localScale'](_0x5e5bdf) {
            this['_localScal' + 'e'] = _0x5e5bdf, this['_localUpda' + 'te'] = !![], this['_onWorldTr' + 'ansform']();
        }
        get ['localRotat' + 'ionEuler']() {
            if (this['_locaEuler' + 'lUpdate']) {
                this['_localRota' + 'tion']['getYawPitc' + 'hRoll'](_0xd6c41a['_tempVecto' + 'r3']);
                var _0x2d687b = _0xd6c41a['_tempVecto' + 'r3'], _0x5df6f9 = this['_localRota' + 'tionEuler'];
                _0x5df6f9['x'] = _0x2d687b['y'] * _0xd6c41a['_angleToRa' + 'ndin'], _0x5df6f9['y'] = _0x2d687b['x'] * _0xd6c41a['_angleToRa' + 'ndin'], _0x5df6f9['z'] = _0x2d687b['z'] * _0xd6c41a['_angleToRa' + 'ndin'], this['_locaEuler' + 'lUpdate'] = ![];
            }
            return this['_localRota' + 'tionEuler'];
        }
        set ['localRotat' + 'ionEuler'](_0x4fc8f1) {
            this['_localRota' + 'tionEuler'] = _0x4fc8f1, this['_locaEuler' + 'lUpdate'] = ![], this['_localQuat' + 'ernionUpda' + 'te'] = !![], this['_localUpda' + 'te'] = !![], this['_onWorldTr' + 'ansform']();
        }
        ['getWorldMa' + 'trix']() {
            if (this['_worldUpda' + 'te']) {
                if (this['_parent'] != null)
                    _0x47bed9['matrix4x4M' + 'ultiplyFFF'](this['_parent']['getWorldMa' + 'trix'](), this['_getlocalM' + 'atrix'](), this['_worldMatr' + 'ix']);
                else {
                    var _0x36da42 = this['_worldMatr' + 'ix'];
                    _0x36da42[0x1] = _0x36da42[0x2] = _0x36da42[0x3] = _0x36da42[0x4] = _0x36da42[0x6] = _0x36da42[0x7] = _0x36da42[0x8] = _0x36da42[0x9] = _0x36da42[0xb] = _0x36da42[0xc] = _0x36da42[0xd] = _0x36da42[0xe] = 0x0, _0x36da42[0x0] = _0x36da42[0x5] = _0x36da42[0xa] = _0x36da42[0xf] = 0x1;
                }
                this['_worldUpda' + 'te'] = ![];
            }
            return this['_worldMatr' + 'ix'];
        }
        ['setParent'](_0x46b100) {
            if (this['_parent'] !== _0x46b100) {
                if (this['_parent']) {
                    var _0x1d142b = this['_parent']['_children'], _0x2ee433 = _0x1d142b['indexOf'](this);
                    _0x1d142b['splice'](_0x2ee433, 0x1);
                }
                _0x46b100 && (_0x46b100['_children']['push'](this), _0x46b100 && this['_onWorldTr' + 'ansform']()), this['_parent'] = _0x46b100;
            }
        }
    }
    _0xd6c41a['_tempVecto' + 'r3'] = new _0x352206(), _0xd6c41a['_angleToRa' + 'ndin'] = 0xb4 / Math['PI'];
    class _0x161103 {
        constructor(_0x306d8f = null, _0x4250aa = null, _0x4207d9 = null, _0x4b0a75 = null) {
            this['_children'] = [], this['transform'] = new _0xd6c41a(this, _0x306d8f, _0x4250aa, _0x4207d9, _0x4b0a75);
        }
        ['addChild'](_0x44f56b) {
            _0x44f56b['_parent'] = this, _0x44f56b['transform']['setParent'](this['transform']), this['_children']['push'](_0x44f56b);
        }
        ['removeChil' + 'd'](_0xd70d31) {
            var _0x591ae7 = this['_children']['indexOf'](_0xd70d31);
            _0x591ae7 !== -0x1 && this['_children']['splice'](_0x591ae7, 0x1);
        }
        ['getChildBy' + 'Name'](_0x2a6bc0) {
            for (var _0x12c90e = 0x0, _0x389ff5 = this['_children']['length']; _0x12c90e < _0x389ff5; _0x12c90e++) {
                var _0x58a91b = this['_children'][_0x12c90e];
                if (_0x58a91b['name'] === _0x2a6bc0)
                    return _0x58a91b;
            }
            return null;
        }
        ['getChildBy' + 'Index'](_0x55e9cd) {
            return this['_children'][_0x55e9cd];
        }
        ['getChildCo' + 'unt']() {
            return this['_children']['length'];
        }
        ['cloneTo'](_0x23ad87) {
            var _0x4e5443 = _0x23ad87;
            _0x4e5443['name'] = this['name'];
            for (var _0x41422d = 0x0, _0x1041bb = this['_children']['length']; _0x41422d < _0x1041bb; _0x41422d++) {
                var _0x267c0b = this['_children'][_0x41422d], _0x14158d = _0x267c0b['clone']();
                _0x4e5443['addChild'](_0x14158d);
                var _0x3d72c5 = _0x267c0b['transform'], _0x2181c1 = _0x14158d['transform'], _0x7156bf = _0x2181c1['localPosit' + 'ion'], _0x4cc66d = _0x2181c1['localRotat' + 'ion'], _0x38aa54 = _0x2181c1['localScale'];
                _0x3d72c5['localPosit' + 'ion']['cloneTo'](_0x7156bf), _0x3d72c5['localRotat' + 'ion']['cloneTo'](_0x4cc66d), _0x3d72c5['localScale']['cloneTo'](_0x38aa54), _0x2181c1['localPosit' + 'ion'] = _0x7156bf, _0x2181c1['localRotat' + 'ion'] = _0x4cc66d, _0x2181c1['localScale'] = _0x38aa54;
            }
        }
        ['clone']() {
            var _0x2e09e6 = new _0x161103();
            return this['cloneTo'](_0x2e09e6), _0x2e09e6;
        }
        ['_cloneNati' + 've'](_0x3015c7, _0x310a87, _0xe93440, _0x3b9ccb, _0x5d25d2, _0x190c59, _0x363a62) {
            var _0x5d8b3a = _0x363a62['_nativeCur' + 'CloneCount'];
            _0x5d25d2[_0x5d8b3a] = _0x190c59;
            var _0x560f9c = new Float32Array(_0x3015c7['buffer'], _0x5d8b3a * 0x3 * 0x4, 0x3), _0x443bab = new Float32Array(_0x310a87['buffer'], _0x5d8b3a * 0x4 * 0x4, 0x4), _0xd6c36 = new Float32Array(_0xe93440['buffer'], _0x5d8b3a * 0x3 * 0x4, 0x3), _0x5391a4 = new Float32Array(_0x3b9ccb['buffer'], _0x5d8b3a * 0x10 * 0x4, 0x10), _0x53d02c = new _0x161103(_0x560f9c, _0x443bab, _0xd6c36, _0x5391a4);
            return _0x53d02c['_worldMatr' + 'ixIndex'] = _0x5d8b3a, this['_cloneToNa' + 'tive'](_0x53d02c, _0x3015c7, _0x310a87, _0xe93440, _0x3b9ccb, _0x5d25d2, _0x5d8b3a, _0x363a62), _0x53d02c;
        }
        ['_cloneToNa' + 'tive'](_0x61e065, _0x4c573a, _0xea303e, _0x1aae25, _0x4e6f0b, _0x499650, _0x507f99, _0x794b15) {
            var _0x7f18eb = _0x61e065;
            _0x7f18eb['name'] = this['name'];
            for (var _0x273747 = 0x0, _0x3a2ed9 = this['_children']['length']; _0x273747 < _0x3a2ed9; _0x273747++) {
                var _0x4bc882 = this['_children'][_0x273747];
                _0x794b15['_nativeCur' + 'CloneCount']++;
                var _0x14e980 = _0x4bc882['_cloneNati' + 've'](_0x4c573a, _0xea303e, _0x1aae25, _0x4e6f0b, _0x499650, _0x507f99, _0x794b15);
                _0x7f18eb['addChild'](_0x14e980);
                var _0x71d9ca = _0x4bc882['transform'], _0x2d8a85 = _0x14e980['transform'], _0x203a0f = _0x2d8a85['localPosit' + 'ion'], _0x4ca988 = _0x2d8a85['localRotat' + 'ion'], _0x37762e = _0x2d8a85['localScale'];
                _0x71d9ca['localPosit' + 'ion']['cloneTo'](_0x203a0f), _0x71d9ca['localRotat' + 'ion']['cloneTo'](_0x4ca988), _0x71d9ca['localScale']['cloneTo'](_0x37762e), _0x2d8a85['localPosit' + 'ion'] = _0x203a0f, _0x2d8a85['localRotat' + 'ion'] = _0x4ca988, _0x2d8a85['localScale'] = _0x37762e;
            }
        }
    }
    class _0x20f476 extends _0x442335['Resource'] {
        constructor() {
            super(), this['_nativeNod' + 'eCount'] = 0x0, this['_nativeCur' + 'CloneCount'] = 0x0;
        }
        static ['_parse'](_0x42ea51, _0x40dfbf = null, _0x461002 = null) {
            var _0x23927c = new _0x20f476();
            _0x23927c['_rootNode'] = new _0x161103(new Float32Array(0x3), new Float32Array(0x4), new Float32Array(0x3), new Float32Array(0x10));
            if (_0x42ea51['version']) {
                var _0x5a8f69 = _0x42ea51['rootNode'];
                _0x5a8f69 && _0x23927c['_parseNode'](_0x5a8f69, _0x23927c['_rootNode']);
            }
            return _0x23927c;
        }
        static ['load'](_0x31f061, _0x25e345) {
            _0x442335['ILaya']['loader']['create'](_0x31f061, _0x25e345, null, _0x20f476['AVATAR']);
        }
        ['_initClone' + 'ToAnimator'](_0x55c407, _0x5f2b8c) {
            _0x5f2b8c['_avatarNod' + 'eMap'][_0x55c407['name']] = _0x55c407;
            for (var _0x1b07cf = 0x0, _0x341724 = _0x55c407['getChildCo' + 'unt'](); _0x1b07cf < _0x341724; _0x1b07cf++)
                this['_initClone' + 'ToAnimator'](_0x55c407['getChildBy' + 'Index'](_0x1b07cf), _0x5f2b8c);
        }
        ['_parseNode'](_0x598f3f, _0x8112e0) {
            var _0x582b3b = _0x598f3f['props']['name'];
            _0x8112e0['name'] = _0x582b3b;
            var _0x14f977 = _0x598f3f['props'], _0x37d37f = _0x8112e0['transform'], _0x2604b1 = _0x37d37f['localPosit' + 'ion'], _0x2f42a8 = _0x37d37f['localRotat' + 'ion'], _0x5ee25d = _0x37d37f['localScale'];
            _0x2604b1['fromArray'](_0x14f977['translate']), _0x2f42a8['fromArray'](_0x14f977['rotation']), _0x5ee25d['fromArray'](_0x14f977['scale']), _0x37d37f['localPosit' + 'ion'] = _0x2604b1, _0x37d37f['localRotat' + 'ion'] = _0x2f42a8, _0x37d37f['localScale'] = _0x5ee25d;
            var _0x1c5102 = _0x598f3f['child'];
            for (var _0x1f4a6e = 0x0, _0x45c176 = _0x1c5102['length']; _0x1f4a6e < _0x45c176; _0x1f4a6e++) {
                var _0x283c07 = _0x1c5102[_0x1f4a6e], _0x51bda4 = new _0x161103(new Float32Array(0x3), new Float32Array(0x4), new Float32Array(0x3), new Float32Array(0x10));
                _0x8112e0['addChild'](_0x51bda4), this['_parseNode'](_0x283c07, _0x51bda4);
            }
        }
        ['_cloneData' + 'sToAnimato' + 'r'](_0x47cb3d) {
            var _0x4aad33;
            _0x4aad33 = this['_rootNode']['clone']();
            var _0x185258 = this['_rootNode']['transform'], _0xd49c8b = _0x4aad33['transform'], _0x2dc10e = _0xd49c8b['localPosit' + 'ion'], _0x57ceb3 = _0xd49c8b['localRotat' + 'ion'], _0x38e4b9 = _0xd49c8b['localScale'];
            _0x185258['localPosit' + 'ion']['cloneTo'](_0x2dc10e), _0x185258['localRotat' + 'ion']['cloneTo'](_0x57ceb3), _0x185258['localScale']['cloneTo'](_0x38e4b9), _0xd49c8b['localPosit' + 'ion'] = _0x2dc10e, _0xd49c8b['localRotat' + 'ion'] = _0x57ceb3, _0xd49c8b['localScale'] = _0x38e4b9, _0x47cb3d['_avatarNod' + 'eMap'] = {}, this['_initClone' + 'ToAnimator'](_0x4aad33, _0x47cb3d);
        }
        ['cloneTo'](_0x39f8bb) {
            var _0x38572b = _0x39f8bb, _0x5632dd = this['_rootNode']['clone']();
            _0x38572b['_rootNode'] = _0x5632dd;
        }
        ['clone']() {
            var _0x1f43d1 = new _0x20f476();
            return this['cloneTo'](_0x1f43d1), _0x1f43d1;
        }
        ['_cloneData' + 'sToAnimato' + 'rNative'](_0x35fd97) {
            var _0x1768e6 = new Float32Array(this['_nativeNod' + 'eCount'] * 0x3), _0x1257cf = new Float32Array(this['_nativeNod' + 'eCount'] * 0x4), _0x299e7e = new Float32Array(this['_nativeNod' + 'eCount'] * 0x3), _0x33b242 = new Float32Array(this['_nativeNod' + 'eCount'] * 0x10), _0x500ef1 = new Int16Array(this['_nativeNod' + 'eCount']);
            _0x35fd97['_animation' + 'NodeLocalP' + 'ositions'] = _0x1768e6, _0x35fd97['_animation' + 'NodeLocalR' + 'otations'] = _0x1257cf, _0x35fd97['_animation' + 'NodeLocalS' + 'cales'] = _0x299e7e, _0x35fd97['_animation' + 'NodeWorldM' + 'atrixs'] = _0x33b242, _0x35fd97['_animation' + 'NodeParent' + 'Indices'] = _0x500ef1, this['_nativeCur' + 'CloneCount'] = 0x0;
            var _0x58fb75 = this['_rootNode']['_cloneNati' + 've'](_0x1768e6, _0x1257cf, _0x299e7e, _0x33b242, _0x500ef1, -0x1, this), _0x292c46 = this['_rootNode']['transform'], _0x1cb068 = _0x58fb75['transform'], _0x15af16 = _0x1cb068['localPosit' + 'ion'], _0x7ca42c = _0x1cb068['localRotat' + 'ion'], _0x4f9fff = _0x1cb068['localScale'];
            _0x292c46['localPosit' + 'ion']['cloneTo'](_0x15af16), _0x292c46['localRotat' + 'ion']['cloneTo'](_0x7ca42c), _0x292c46['localScale']['cloneTo'](_0x4f9fff), _0x1cb068['localPosit' + 'ion'] = _0x15af16, _0x1cb068['localRotat' + 'ion'] = _0x7ca42c, _0x1cb068['localScale'] = _0x4f9fff, _0x35fd97['_avatarNod' + 'eMap'] = {}, this['_initClone' + 'ToAnimator'](_0x58fb75, _0x35fd97);
        }
    }
    _0x20f476['AVATAR'] = 'AVATAR';
    class _0x2b6b33 extends _0x442335['Resource'] {
        constructor() {
            super(), this['_shaderVal' + 'ues'] = null, this['_shaderVal' + 'ues'] = new _0x1634f4(this), this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'], this['_alphaTest'] = ![];
        }
        static ['load'](_0x47096d, _0x191f00) {
            _0x442335['Laya']['loader']['create'](_0x47096d, _0x191f00, null, _0x2b6b33['MATERIAL']);
        }
        static ['__initDefi' + 'ne__']() {
            _0x2b6b33['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = _0x18824e['getDefineB' + 'yName']('ALPHATEST');
        }
        static ['_parse'](_0x172a1a, _0x4946c0 = null, _0x305400 = null) {
            var _0x1ed817 = _0x172a1a, _0x2153c2 = _0x1ed817['props'], _0x10f191, _0x1850e9 = _0x2153c2['type'], _0x2246b3 = _0x442335['ClassUtils']['getRegClas' + 's'](_0x1850e9);
            if (_0x2246b3)
                _0x10f191 = new _0x2246b3();
            else
                throw '_getSprite' + '3DHierarch' + 'yInnerUrls' + '\x20错误:\x20' + _0x172a1a['type'] + '\x20不是类';
            switch (_0x1ed817['version']) {
            case 'LAYAMATERI' + 'AL:01':
            case 'LAYAMATERI' + 'AL:02':
                var _0x1c8a8a, _0x45c974;
                for (var _0x1c16cf in _0x2153c2) {
                    switch (_0x1c16cf) {
                    case 'type':
                        break;
                    case 'vectors':
                        var _0x36eb37 = _0x2153c2[_0x1c16cf];
                        for (_0x1c8a8a = 0x0, _0x45c974 = _0x36eb37['length']; _0x1c8a8a < _0x45c974; _0x1c8a8a++) {
                            var _0x54a98f = _0x36eb37[_0x1c8a8a], _0x42f03b = _0x54a98f['value'];
                            switch (_0x42f03b['length']) {
                            case 0x2:
                                _0x10f191[_0x54a98f['name']] = new _0x378045(_0x42f03b[0x0], _0x42f03b[0x1]);
                                break;
                            case 0x3:
                                _0x10f191[_0x54a98f['name']] = new _0x352206(_0x42f03b[0x0], _0x42f03b[0x1], _0x42f03b[0x2]);
                                break;
                            case 0x4:
                                _0x10f191[_0x54a98f['name']] = new _0x18425e(_0x42f03b[0x0], _0x42f03b[0x1], _0x42f03b[0x2], _0x42f03b[0x3]);
                                break;
                            default:
                                throw new Error('BaseMateri' + 'al:unkonwn' + '\x20color\x20len' + 'gth.');
                            }
                        }
                        break;
                    case 'textures':
                        var _0x38eb66 = _0x2153c2[_0x1c16cf];
                        for (_0x1c8a8a = 0x0, _0x45c974 = _0x38eb66['length']; _0x1c8a8a < _0x45c974; _0x1c8a8a++) {
                            var _0x583ed4 = _0x38eb66[_0x1c8a8a], _0x578aea = _0x583ed4['path'];
                            _0x578aea && (_0x10f191[_0x583ed4['name']] = _0x442335['Loader']['getRes'](_0x578aea));
                        }
                        break;
                    case 'defines':
                        var _0x223572 = _0x2153c2[_0x1c16cf];
                        for (_0x1c8a8a = 0x0, _0x45c974 = _0x223572['length']; _0x1c8a8a < _0x45c974; _0x1c8a8a++) {
                            var _0x1dd761 = _0x18824e['getDefineB' + 'yName'](_0x223572[_0x1c8a8a]);
                            _0x10f191['_shaderVal' + 'ues']['addDefine'](_0x1dd761);
                        }
                        break;
                    case 'renderStat' + 'es':
                        var _0x14e8fa = _0x2153c2[_0x1c16cf], _0x1787db = _0x14e8fa[0x0], _0x8a3921 = _0x10f191;
                        _0x8a3921['blend'] = _0x1787db['blend'], _0x8a3921['cull'] = _0x1787db['cull'], _0x8a3921['depthTest'] = _0x1787db['depthTest'], _0x8a3921['depthWrite'] = _0x1787db['depthWrite'], _0x8a3921['blendSrc'] = _0x1787db['srcBlend'], _0x8a3921['blendDst'] = _0x1787db['dstBlend'];
                        break;
                    case 'cull':
                        _0x10f191['cull'] = _0x2153c2[_0x1c16cf];
                        break;
                    case 'blend':
                        _0x10f191['blend'] = _0x2153c2[_0x1c16cf];
                        break;
                    case 'depthWrite':
                        _0x10f191['depthWrite'] = _0x2153c2[_0x1c16cf];
                        break;
                    case 'srcBlend':
                        _0x10f191['blendSrc'] = _0x2153c2[_0x1c16cf];
                        break;
                    case 'dstBlend':
                        _0x10f191['blendDst'] = _0x2153c2[_0x1c16cf];
                        break;
                    default:
                        _0x10f191[_0x1c16cf] = _0x2153c2[_0x1c16cf];
                    }
                }
                break;
            default:
                throw new Error('BaseMateri' + 'al:unkonwn' + '\x20version.');
            }
            return _0x10f191;
        }
        get ['shaderData']() {
            return this['_shaderVal' + 'ues'];
        }
        get ['alphaTestV' + 'alue']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x2b6b33['ALPHATESTV' + 'ALUE']);
        }
        set ['alphaTestV' + 'alue'](_0x2c4988) {
            this['_shaderVal' + 'ues']['setNumber'](_0x2b6b33['ALPHATESTV' + 'ALUE'], _0x2c4988);
        }
        get ['alphaTest']() {
            return this['_alphaTest'];
        }
        set ['alphaTest'](_0x224d61) {
            this['_alphaTest'] = _0x224d61;
            if (_0x224d61)
                this['_shaderVal' + 'ues']['addDefine'](_0x2b6b33['SHADERDEFI' + 'NE_ALPHATE' + 'ST']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2b6b33['SHADERDEFI' + 'NE_ALPHATE' + 'ST']);
        }
        ['_removeTet' + 'xureRefere' + 'nce']() {
            var _0x8d5571 = this['_shaderVal' + 'ues']['getData']();
            for (var _0x160171 in _0x8d5571) {
                var _0x17cd42 = _0x8d5571[_0x160171];
                if (_0x17cd42 && _0x17cd42 instanceof _0x442335['BaseTextur' + 'e'])
                    _0x17cd42['_removeRef' + 'erence']();
            }
        }
        ['_disposeRe' + 'source']() {
            if (this['_reference' + 'Count'] > 0x0)
                this['_removeTet' + 'xureRefere' + 'nce']();
            this['_shaderVal' + 'ues'] = null;
        }
        ['_addRefere' + 'nce'](_0x5b4ac2 = 0x1) {
            super['_addRefere' + 'nce'](_0x5b4ac2);
            var _0x26b9b3 = this['_shaderVal' + 'ues']['getData']();
            for (var _0x234c64 in _0x26b9b3) {
                var _0x145b1a = _0x26b9b3[_0x234c64];
                if (_0x145b1a && _0x145b1a instanceof _0x442335['BaseTextur' + 'e'])
                    _0x145b1a['_addRefere' + 'nce']();
            }
        }
        ['_removeRef' + 'erence'](_0x7382fe = 0x1) {
            super['_removeRef' + 'erence'](_0x7382fe), this['_removeTet' + 'xureRefere' + 'nce']();
        }
        ['setShaderN' + 'ame'](_0x444838) {
            this['_shader'] = _0x18824e['find'](_0x444838);
            if (!this['_shader'])
                throw new Error('BaseMateri' + 'al:\x20unknow' + 'n\x20shader\x20n' + 'ame.');
        }
        ['cloneTo'](_0x4c47fa) {
            var _0x475d94 = _0x4c47fa;
            _0x475d94['name'] = this['name'], _0x475d94['renderQueu' + 'e'] = this['renderQueu' + 'e'], this['_shaderVal' + 'ues']['cloneTo'](_0x475d94['_shaderVal' + 'ues']);
        }
        ['clone']() {
            var _0x575e65 = new _0x2b6b33();
            return this['cloneTo'](_0x575e65), _0x575e65;
        }
        get ['_defineDat' + 'as']() {
            return this['_shaderVal' + 'ues']['_defineDat' + 'as'];
        }
    }
    _0x2b6b33['MATERIAL'] = 'MATERIAL', _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'] = 0x7d0, _0x2b6b33['RENDERQUEU' + 'E_ALPHATES' + 'T'] = 0x992, _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'] = 0xbb8, _0x2b6b33['ALPHATESTV' + 'ALUE'] = _0x18824e['propertyNa' + 'meToID']('u_AlphaTes' + 'tValue'), _0x2b6b33['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = null;
    class _0x231956 {
        static ['load'](_0x2ebb71, _0x5217be) {
            _0x442335['Laya']['loader']['create'](_0x2ebb71, _0x5217be, null, _0x2b6b33['MATERIAL']);
        }
        static ['__initDefi' + 'ne__']() {
            _0x231956['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = _0x2b6b33['SHADERDEFI' + 'NE_ALPHATE' + 'ST'];
        }
    }
    _0x231956['MATERIAL'] = 'MATERIAL', _0x231956['RENDERQUEU' + 'E_OPAQUE'] = 0x7d0, _0x231956['RENDERQUEU' + 'E_ALPHATES' + 'T'] = 0x992, _0x231956['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'] = 0xbb8, _0x231956['ALPHATESTV' + 'ALUE'] = _0x18824e['propertyNa' + 'meToID']('u_AlphaTes' + 'tValue'), _0x231956['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = null;
    class _0x5c0fbd {
        constructor() {
            this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['srcBlend'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['dstBlend'] = _0x5c0fbd['BLENDPARAM' + '_ZERO'], this['srcBlendRG' + 'B'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['dstBlendRG' + 'B'] = _0x5c0fbd['BLENDPARAM' + '_ZERO'], this['srcBlendAl' + 'pha'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['dstBlendAl' + 'pha'] = _0x5c0fbd['BLENDPARAM' + '_ZERO'], this['blendConst' + 'Color'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['blendEquat' + 'ion'] = _0x5c0fbd['BLENDEQUAT' + 'ION_ADD'], this['blendEquat' + 'ionRGB'] = _0x5c0fbd['BLENDEQUAT' + 'ION_ADD'], this['blendEquat' + 'ionAlpha'] = _0x5c0fbd['BLENDEQUAT' + 'ION_ADD'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LEQUAL'], this['depthWrite'] = !![];
        }
        ['cloneTo'](_0x1711d9) {
            var _0x38de21 = _0x1711d9;
            _0x38de21['cull'] = this['cull'], _0x38de21['blend'] = this['blend'], _0x38de21['srcBlend'] = this['srcBlend'], _0x38de21['dstBlend'] = this['dstBlend'], _0x38de21['srcBlendRG' + 'B'] = this['srcBlendRG' + 'B'], _0x38de21['dstBlendRG' + 'B'] = this['dstBlendRG' + 'B'], _0x38de21['srcBlendAl' + 'pha'] = this['srcBlendAl' + 'pha'], _0x38de21['dstBlendAl' + 'pha'] = this['dstBlendAl' + 'pha'], this['blendConst' + 'Color']['cloneTo'](_0x38de21['blendConst' + 'Color']), _0x38de21['blendEquat' + 'ion'] = this['blendEquat' + 'ion'], _0x38de21['blendEquat' + 'ionRGB'] = this['blendEquat' + 'ionRGB'], _0x38de21['blendEquat' + 'ionAlpha'] = this['blendEquat' + 'ionAlpha'], _0x38de21['depthTest'] = this['depthTest'], _0x38de21['depthWrite'] = this['depthWrite'];
        }
        ['clone']() {
            var _0x39ba8e = new _0x5c0fbd();
            return this['cloneTo'](_0x39ba8e), _0x39ba8e;
        }
    }
    _0x5c0fbd['CULL_NONE'] = 0x0, _0x5c0fbd['CULL_FRONT'] = 0x1, _0x5c0fbd['CULL_BACK'] = 0x2, _0x5c0fbd['BLEND_DISA' + 'BLE'] = 0x0, _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'] = 0x1, _0x5c0fbd['BLEND_ENAB' + 'LE_SEPERAT' + 'E'] = 0x2, _0x5c0fbd['BLENDPARAM' + '_ZERO'] = 0x0, _0x5c0fbd['BLENDPARAM' + '_ONE'] = 0x1, _0x5c0fbd['BLENDPARAM' + '_SRC_COLOR'] = 0x300, _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_COLOR'] = 0x301, _0x5c0fbd['BLENDPARAM' + '_DST_COLOR'] = 0x306, _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_DST_COLOR'] = 0x307, _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'] = 0x302, _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'] = 0x303, _0x5c0fbd['BLENDPARAM' + '_DST_ALPHA'] = 0x304, _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_DST_ALPHA'] = 0x305, _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA' + '_SATURATE'] = 0x308, _0x5c0fbd['BLENDEQUAT' + 'ION_ADD'] = 0x8006, _0x5c0fbd['BLENDEQUAT' + 'ION_SUBTRA' + 'CT'] = 0x800a, _0x5c0fbd['BLENDEQUAT' + 'ION_REVERS' + 'E_SUBTRACT'] = 0x800b, _0x5c0fbd['DEPTHTEST_' + 'OFF'] = 0x0, _0x5c0fbd['DEPTHTEST_' + 'NEVER'] = 0x200, _0x5c0fbd['DEPTHTEST_' + 'LESS'] = 0x201, _0x5c0fbd['DEPTHTEST_' + 'EQUAL'] = 0x202, _0x5c0fbd['DEPTHTEST_' + 'LEQUAL'] = 0x203, _0x5c0fbd['DEPTHTEST_' + 'GREATER'] = 0x204, _0x5c0fbd['DEPTHTEST_' + 'NOTEQUAL'] = 0x205, _0x5c0fbd['DEPTHTEST_' + 'GEQUAL'] = 0x206, _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'] = 0x207;
    class _0x523e5f extends _0x2b6b33 {
        constructor() {
            super(), this['_enableVer' + 'texColor'] = ![], this['setShaderN' + 'ame']('BLINNPHONG'), this['_albedoInt' + 'ensity'] = 0x1, this['_albedoCol' + 'or'] = new _0x18425e(0x1, 0x1, 0x1, 0x1);
            var _0x38990d = this['_shaderVal' + 'ues'];
            _0x38990d['setVector'](_0x523e5f['ALBEDOCOLO' + 'R'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), _0x38990d['setVector'](_0x523e5f['MATERIALSP' + 'ECULAR'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), _0x38990d['setNumber'](_0x523e5f['SHININESS'], 0.078125), _0x38990d['setNumber'](_0x2b6b33['ALPHATESTV' + 'ALUE'], 0.5), _0x38990d['setVector'](_0x523e5f['TILINGOFFS' + 'ET'], new _0x18425e(0x1, 0x1, 0x0, 0x0)), this['_enableLig' + 'hting'] = !![], this['renderMode'] = _0x523e5f['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x523e5f['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP'] = _0x18824e['getDefineB' + 'yName']('DIFFUSEMAP'), _0x523e5f['SHADERDEFI' + 'NE_NORMALM' + 'AP'] = _0x18824e['getDefineB' + 'yName']('NORMALMAP'), _0x523e5f['SHADERDEFI' + 'NE_SPECULA' + 'RMAP'] = _0x18824e['getDefineB' + 'yName']('SPECULARMA' + 'P'), _0x523e5f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x18824e['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x523e5f['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR'] = _0x18824e['getDefineB' + 'yName']('ENABLEVERT' + 'EXCOLOR');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x185860) {
            this['_albedoCol' + 'or']['x'] = _0x185860, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x5234fa) {
            this['_albedoCol' + 'or']['y'] = _0x5234fa, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x3743a1) {
            this['_albedoCol' + 'or']['z'] = _0x3743a1, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x504eda) {
            this['_albedoCol' + 'or']['w'] = _0x504eda, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_Color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['ALBEDOCOLO' + 'R']);
        }
        set ['_Color'](_0x1d50f1) {
            this['albedoColo' + 'r'] = _0x1d50f1;
        }
        get ['_SpecColor' + 'R']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['x'];
        }
        set ['_SpecColor' + 'R'](_0x41fe8b) {
            this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['x'] = _0x41fe8b;
        }
        get ['_SpecColor' + 'G']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['y'];
        }
        set ['_SpecColor' + 'G'](_0x26ae8a) {
            this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['y'] = _0x26ae8a;
        }
        get ['_SpecColor' + 'B']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['z'];
        }
        set ['_SpecColor' + 'B'](_0x237ac8) {
            this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['z'] = _0x237ac8;
        }
        get ['_SpecColor' + 'A']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['w'];
        }
        set ['_SpecColor' + 'A'](_0x238a3a) {
            this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR'])['w'] = _0x238a3a;
        }
        get ['_SpecColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR']);
        }
        set ['_SpecColor'](_0x5e9976) {
            this['specularCo' + 'lor'] = _0x5e9976;
        }
        get ['_AlbedoInt' + 'ensity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['_AlbedoInt' + 'ensity'](_0x51193b) {
            if (this['_albedoInt' + 'ensity'] !== _0x51193b) {
                var _0x4dba36 = this['_shaderVal' + 'ues']['getVector'](_0x523e5f['ALBEDOCOLO' + 'R']);
                _0x18425e['scale'](this['_albedoCol' + 'or'], _0x51193b, _0x4dba36), this['_albedoInt' + 'ensity'] = _0x51193b, this['_shaderVal' + 'ues']['setVector'](_0x523e5f['ALBEDOCOLO' + 'R'], _0x4dba36);
            }
        }
        get ['_Shininess']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x523e5f['SHININESS']);
        }
        set ['_Shininess'](_0x75332) {
            _0x75332 = Math['max'](0x0, Math['min'](0x1, _0x75332)), this['_shaderVal' + 'ues']['setNumber'](_0x523e5f['SHININESS'], _0x75332);
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0xee1d75) {
            var _0x4e8a44 = this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET']);
            _0x4e8a44['x'] = _0xee1d75, this['tilingOffs' + 'et'] = _0x4e8a44;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x374570) {
            var _0x3d890d = this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET']);
            _0x3d890d['y'] = _0x374570, this['tilingOffs' + 'et'] = _0x3d890d;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x3ec9cf) {
            var _0x27106f = this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET']);
            _0x27106f['z'] = _0x3ec9cf, this['tilingOffs' + 'et'] = _0x27106f;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x51f48d) {
            var _0x2ab0f4 = this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET']);
            _0x2ab0f4['w'] = _0x51f48d, this['tilingOffs' + 'et'] = _0x2ab0f4;
        }
        get ['_MainTex_S' + 'T']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET']);
        }
        set ['_MainTex_S' + 'T'](_0x350e46) {
            this['tilingOffs' + 'et'] = _0x350e46;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x164cc3) {
            this['alphaTestV' + 'alue'] = _0x164cc3;
        }
        set ['renderMode'](_0xdfee16) {
            switch (_0xdfee16) {
            case _0x523e5f['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = ![], this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            case _0x523e5f['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !![], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            case _0x523e5f['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            default:
                throw new Error('Material:r' + 'enderMode\x20' + 'value\x20erro' + 'r.');
            }
        }
        get ['enableVert' + 'exColor']() {
            return this['_enableVer' + 'texColor'];
        }
        set ['enableVert' + 'exColor'](_0x44ce75) {
            this['_enableVer' + 'texColor'] = _0x44ce75;
            if (_0x44ce75)
                this['_shaderVal' + 'ues']['addDefine'](_0x523e5f['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x523e5f['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x14a8b4) {
            this['_MainTex_S' + 'TX'] = _0x14a8b4;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x401a6b) {
            this['_MainTex_S' + 'TY'] = _0x401a6b;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x4a09f0) {
            this['_MainTex_S' + 'TZ'] = _0x4a09f0;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x503f38) {
            this['_MainTex_S' + 'TW'] = _0x503f38;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0xe65d09) {
            if (_0xe65d09) {
                if (_0xe65d09['x'] != 0x1 || _0xe65d09['y'] != 0x1 || _0xe65d09['z'] != 0x0 || _0xe65d09['w'] != 0x0)
                    this['_shaderVal' + 'ues']['addDefine'](_0x523e5f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x523e5f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x523e5f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            this['_shaderVal' + 'ues']['setVector'](_0x523e5f['TILINGOFFS' + 'ET'], _0xe65d09);
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x309294) {
            this['_ColorR'] = _0x309294;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x219cbf) {
            this['_ColorG'] = _0x219cbf;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x468bdc) {
            this['_ColorB'] = _0x468bdc;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0x3176ae) {
            this['_ColorA'] = _0x3176ae;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x316f4a) {
            var _0x581802 = this['_shaderVal' + 'ues']['getVector'](_0x523e5f['ALBEDOCOLO' + 'R']);
            _0x18425e['scale'](_0x316f4a, this['_albedoInt' + 'ensity'], _0x581802), this['_albedoCol' + 'or'] = _0x316f4a, this['_shaderVal' + 'ues']['setVector'](_0x523e5f['ALBEDOCOLO' + 'R'], _0x581802);
        }
        get ['albedoInte' + 'nsity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['albedoInte' + 'nsity'](_0x29c138) {
            this['_AlbedoInt' + 'ensity'] = _0x29c138;
        }
        get ['specularCo' + 'lorR']() {
            return this['_SpecColor' + 'R'];
        }
        set ['specularCo' + 'lorR'](_0x31780b) {
            this['_SpecColor' + 'R'] = _0x31780b;
        }
        get ['specularCo' + 'lorG']() {
            return this['_SpecColor' + 'G'];
        }
        set ['specularCo' + 'lorG'](_0x5995c8) {
            this['_SpecColor' + 'G'] = _0x5995c8;
        }
        get ['specularCo' + 'lorB']() {
            return this['_SpecColor' + 'B'];
        }
        set ['specularCo' + 'lorB'](_0x3384c0) {
            this['_SpecColor' + 'B'] = _0x3384c0;
        }
        get ['specularCo' + 'lorA']() {
            return this['_SpecColor' + 'A'];
        }
        set ['specularCo' + 'lorA'](_0x228a5f) {
            this['_SpecColor' + 'A'] = _0x228a5f;
        }
        get ['specularCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x523e5f['MATERIALSP' + 'ECULAR']);
        }
        set ['specularCo' + 'lor'](_0x47444d) {
            this['_shaderVal' + 'ues']['setVector'](_0x523e5f['MATERIALSP' + 'ECULAR'], _0x47444d);
        }
        get ['shininess']() {
            return this['_Shininess'];
        }
        set ['shininess'](_0xae3c99) {
            this['_Shininess'] = _0xae3c99;
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x523e5f['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x5b920c) {
            if (_0x5b920c)
                this['_shaderVal' + 'ues']['addDefine'](_0x523e5f['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x523e5f['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']);
            this['_shaderVal' + 'ues']['setTexture'](_0x523e5f['ALBEDOTEXT' + 'URE'], _0x5b920c);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x523e5f['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x5aa75b) {
            if (_0x5aa75b)
                this['_shaderVal' + 'ues']['addDefine'](_0x523e5f['SHADERDEFI' + 'NE_NORMALM' + 'AP']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x523e5f['SHADERDEFI' + 'NE_NORMALM' + 'AP']);
            this['_shaderVal' + 'ues']['setTexture'](_0x523e5f['NORMALTEXT' + 'URE'], _0x5aa75b);
        }
        get ['specularTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x523e5f['SPECULARTE' + 'XTURE']);
        }
        set ['specularTe' + 'xture'](_0xa9076a) {
            if (_0xa9076a)
                this['_shaderVal' + 'ues']['addDefine'](_0x523e5f['SHADERDEFI' + 'NE_SPECULA' + 'RMAP']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x523e5f['SHADERDEFI' + 'NE_SPECULA' + 'RMAP']);
            this['_shaderVal' + 'ues']['setTexture'](_0x523e5f['SPECULARTE' + 'XTURE'], _0xa9076a);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x523e5f['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x1df2b8) {
            this['_shaderVal' + 'ues']['setBool'](_0x523e5f['DEPTH_WRIT' + 'E'], _0x1df2b8);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x523e5f['CULL']);
        }
        set ['cull'](_0x16d1ac) {
            this['_shaderVal' + 'ues']['setInt'](_0x523e5f['CULL'], _0x16d1ac);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x523e5f['BLEND']);
        }
        set ['blend'](_0x56d500) {
            this['_shaderVal' + 'ues']['setInt'](_0x523e5f['BLEND'], _0x56d500);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x523e5f['BLEND_SRC']);
        }
        set ['blendSrc'](_0x53c3bc) {
            this['_shaderVal' + 'ues']['setInt'](_0x523e5f['BLEND_SRC'], _0x53c3bc);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x523e5f['BLEND_DST']);
        }
        set ['blendDst'](_0x575b75) {
            this['_shaderVal' + 'ues']['setInt'](_0x523e5f['BLEND_DST'], _0x575b75);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x523e5f['DEPTH_TEST']);
        }
        set ['depthTest'](_0x169f40) {
            this['_shaderVal' + 'ues']['setInt'](_0x523e5f['DEPTH_TEST'], _0x169f40);
        }
        ['clone']() {
            var _0x374f4b = new _0x523e5f();
            return this['cloneTo'](_0x374f4b), _0x374f4b;
        }
        ['cloneTo'](_0x316a1) {
            super['cloneTo'](_0x316a1);
            var _0x1bb1c9 = _0x316a1;
            _0x1bb1c9['_enableLig' + 'hting'] = this['_enableLig' + 'hting'], _0x1bb1c9['_albedoInt' + 'ensity'] = this['_albedoInt' + 'ensity'], _0x1bb1c9['_enableVer' + 'texColor'] = this['_enableVer' + 'texColor'], this['_albedoCol' + 'or']['cloneTo'](_0x1bb1c9['_albedoCol' + 'or']);
        }
    }
    _0x523e5f['RENDERMODE' + '_OPAQUE'] = 0x0, _0x523e5f['RENDERMODE' + '_CUTOUT'] = 0x1, _0x523e5f['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x523e5f['ALBEDOTEXT' + 'URE'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseT' + 'exture'), _0x523e5f['NORMALTEXT' + 'URE'] = _0x18824e['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x523e5f['SPECULARTE' + 'XTURE'] = _0x18824e['propertyNa' + 'meToID']('u_Specular' + 'Texture'), _0x523e5f['ALBEDOCOLO' + 'R'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseC' + 'olor'), _0x523e5f['MATERIALSP' + 'ECULAR'] = _0x18824e['propertyNa' + 'meToID']('u_Material' + 'Specular'), _0x523e5f['SHININESS'] = _0x18824e['propertyNa' + 'meToID']('u_Shinines' + 's'), _0x523e5f['TILINGOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x523e5f['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x523e5f['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x523e5f['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x523e5f['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x523e5f['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x523e5f['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x2a0fbb extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('Effect'), this['_color'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0x2a0fbb['TINTCOLOR'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x2a0fbb['RENDERMODE' + '_ADDTIVE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x2a0fbb['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x18824e['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x2a0fbb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x18824e['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x2a0fbb['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x18824e['getDefineB' + 'yName']('ADDTIVEFOG');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x58a004) {
            this['_color']['x'] = _0x58a004, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x785def) {
            this['_color']['y'] = _0x785def, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x4a4550) {
            this['_color']['z'] = _0x4a4550, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x4ac565) {
            this['_color']['w'] = _0x4ac565, this['color'] = this['_color'];
        }
        get ['_TintColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TINTCOLOR']);
        }
        set ['_TintColor'](_0x312307) {
            this['color'] = _0x312307;
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x2540b3) {
            var _0x3a4a6d = this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET']);
            _0x3a4a6d['x'] = _0x2540b3, this['tilingOffs' + 'et'] = _0x3a4a6d;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x1be0d1) {
            var _0x1f1d55 = this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET']);
            _0x1f1d55['y'] = _0x1be0d1, this['tilingOffs' + 'et'] = _0x1f1d55;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x3cd42b) {
            var _0xfe7b11 = this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET']);
            _0xfe7b11['z'] = _0x3cd42b, this['tilingOffs' + 'et'] = _0xfe7b11;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x49f009) {
            var _0x573cc5 = this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET']);
            _0x573cc5['w'] = _0x49f009, this['tilingOffs' + 'et'] = _0x573cc5;
        }
        get ['_MainTex_S' + 'T']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET']);
        }
        set ['_MainTex_S' + 'T'](_0x10ed6b) {
            this['tilingOffs' + 'et'] = _0x10ed6b;
        }
        set ['renderMode'](_0x2d2045) {
            switch (_0x2d2045) {
            case _0x2a0fbb['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_NONE'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x2a0fbb['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x2a0fbb['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_NONE'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2a0fbb['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('MeshEffect' + 'Material\x20:' + '\x20renderMod' + 'e\x20value\x20er' + 'ror.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x33f47c) {
            this['_TintColor' + 'R'] = _0x33f47c;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x1a0420) {
            this['_TintColor' + 'G'] = _0x1a0420;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x3a259b) {
            this['_TintColor' + 'B'] = _0x3a259b;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x20c93b) {
            this['_TintColor' + 'A'] = _0x20c93b;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TINTCOLOR']);
        }
        set ['color'](_0x6fb2a1) {
            this['_shaderVal' + 'ues']['setVector'](_0x2a0fbb['TINTCOLOR'], _0x6fb2a1);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x2a0fbb['MAINTEXTUR' + 'E']);
        }
        set ['texture'](_0x34c0a0) {
            if (_0x34c0a0)
                this['_shaderVal' + 'ues']['addDefine'](_0x2a0fbb['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2a0fbb['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x2a0fbb['MAINTEXTUR' + 'E'], _0x34c0a0);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x1fa938) {
            this['_MainTex_S' + 'TX'] = _0x1fa938;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x6f06fd) {
            this['_MainTex_S' + 'TY'] = _0x6f06fd;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x5e5018) {
            this['_MainTex_S' + 'TZ'] = _0x5e5018;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x47c6d1) {
            this['_MainTex_S' + 'TW'] = _0x47c6d1;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2a0fbb['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x2db40a) {
            if (_0x2db40a) {
                if (_0x2db40a['x'] != 0x1 || _0x2db40a['y'] != 0x1 || _0x2db40a['z'] != 0x0 || _0x2db40a['w'] != 0x0)
                    this['_shaderVal' + 'ues']['addDefine'](_0x2a0fbb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2a0fbb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2a0fbb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            this['_shaderVal' + 'ues']['setVector'](_0x2a0fbb['TILINGOFFS' + 'ET'], _0x2db40a);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x2a0fbb['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x55e8c4) {
            this['_shaderVal' + 'ues']['setBool'](_0x2a0fbb['DEPTH_WRIT' + 'E'], _0x55e8c4);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2a0fbb['CULL']);
        }
        set ['cull'](_0x22ef82) {
            this['_shaderVal' + 'ues']['setInt'](_0x2a0fbb['CULL'], _0x22ef82);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2a0fbb['BLEND']);
        }
        set ['blend'](_0x484ab5) {
            this['_shaderVal' + 'ues']['setInt'](_0x2a0fbb['BLEND'], _0x484ab5);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2a0fbb['BLEND_SRC']);
        }
        set ['blendSrc'](_0x79875) {
            this['_shaderVal' + 'ues']['setInt'](_0x2a0fbb['BLEND_SRC'], _0x79875);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2a0fbb['BLEND_DST']);
        }
        set ['blendDst'](_0x23d982) {
            this['_shaderVal' + 'ues']['setInt'](_0x2a0fbb['BLEND_DST'], _0x23d982);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2a0fbb['DEPTH_TEST']);
        }
        set ['depthTest'](_0x30db41) {
            this['_shaderVal' + 'ues']['setInt'](_0x2a0fbb['DEPTH_TEST'], _0x30db41);
        }
        ['clone']() {
            var _0x48ff73 = new _0x2a0fbb();
            return this['cloneTo'](_0x48ff73), _0x48ff73;
        }
    }
    _0x2a0fbb['RENDERMODE' + '_ADDTIVE'] = 0x0, _0x2a0fbb['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x1, _0x2a0fbb['MAINTEXTUR' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x2a0fbb['TINTCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x2a0fbb['TILINGOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x2a0fbb['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x2a0fbb['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x2a0fbb['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x2a0fbb['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x2a0fbb['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x2a0fbb['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0xf19750 extends _0x2b6b33 {
        constructor() {
            super(), this['_enableLig' + 'hting'] = !![], this['setShaderN' + 'ame']('ExtendTerr' + 'ain'), this['renderMode'] = _0xf19750['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1'] = _0x18824e['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM1'), _0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2'] = _0x18824e['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM2'), _0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3'] = _0x18824e['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM3'), _0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4'] = _0x18824e['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM4'), _0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5'] = _0x18824e['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM5');
        }
        get ['splatAlpha' + 'Texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xf19750['SPLATALPHA' + 'TEXTURE']);
        }
        set ['splatAlpha' + 'Texture'](_0x1b9667) {
            this['_shaderVal' + 'ues']['setTexture'](_0xf19750['SPLATALPHA' + 'TEXTURE'], _0x1b9667);
        }
        get ['diffuseTex' + 'ture1']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xf19750['DIFFUSETEX' + 'TURE1']);
        }
        set ['diffuseTex' + 'ture1'](_0x27fc68) {
            this['_shaderVal' + 'ues']['setTexture'](_0xf19750['DIFFUSETEX' + 'TURE1'], _0x27fc68), this['_setDetail' + 'Num'](0x1);
        }
        get ['diffuseTex' + 'ture2']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xf19750['DIFFUSETEX' + 'TURE2']);
        }
        set ['diffuseTex' + 'ture2'](_0x3edd7a) {
            this['_shaderVal' + 'ues']['setTexture'](_0xf19750['DIFFUSETEX' + 'TURE2'], _0x3edd7a), this['_setDetail' + 'Num'](0x2);
        }
        get ['diffuseTex' + 'ture3']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xf19750['DIFFUSETEX' + 'TURE3']);
        }
        set ['diffuseTex' + 'ture3'](_0x3da84b) {
            this['_shaderVal' + 'ues']['setTexture'](_0xf19750['DIFFUSETEX' + 'TURE3'], _0x3da84b), this['_setDetail' + 'Num'](0x3);
        }
        get ['diffuseTex' + 'ture4']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xf19750['DIFFUSETEX' + 'TURE4']);
        }
        set ['diffuseTex' + 'ture4'](_0x2e70e0) {
            this['_shaderVal' + 'ues']['setTexture'](_0xf19750['DIFFUSETEX' + 'TURE4'], _0x2e70e0), this['_setDetail' + 'Num'](0x4);
        }
        get ['diffuseTex' + 'ture5']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xf19750['DIFFUSETEX' + 'TURE5']);
        }
        set ['diffuseTex' + 'ture5'](_0x3adfe5) {
            this['_shaderVal' + 'ues']['setTexture'](_0xf19750['DIFFUSETEX' + 'TURE5'], _0x3adfe5), this['_setDetail' + 'Num'](0x5);
        }
        set ['diffuseSca' + 'leOffset1'](_0x5fb4f3) {
            this['_shaderVal' + 'ues']['setVector'](_0xf19750['DIFFUSESCA' + 'LEOFFSET1'], _0x5fb4f3);
        }
        set ['diffuseSca' + 'leOffset2'](_0x560e7f) {
            this['_shaderVal' + 'ues']['setVector'](_0xf19750['DIFFUSESCA' + 'LEOFFSET2'], _0x560e7f);
        }
        set ['diffuseSca' + 'leOffset3'](_0x39dcd5) {
            this['_shaderVal' + 'ues']['setVector'](_0xf19750['DIFFUSESCA' + 'LEOFFSET3'], _0x39dcd5);
        }
        set ['diffuseSca' + 'leOffset4'](_0x1e7971) {
            this['_shaderVal' + 'ues']['setVector'](_0xf19750['DIFFUSESCA' + 'LEOFFSET4'], _0x1e7971);
        }
        set ['diffuseSca' + 'leOffset5'](_0x3fe6b1) {
            this['_shaderVal' + 'ues']['setVector'](_0xf19750['DIFFUSESCA' + 'LEOFFSET5'], _0x3fe6b1);
        }
        set ['renderMode'](_0x357b2e) {
            switch (_0x357b2e) {
            case _0xf19750['RENDERMODE' + '_OPAQUE']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            case _0xf19750['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LEQUAL'];
                break;
            default:
                throw new Error('ExtendTerr' + 'ainMateria' + 'l:renderMo' + 'de\x20value\x20e' + 'rror.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0xf19750['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x354a2c) {
            this['_shaderVal' + 'ues']['setBool'](_0xf19750['DEPTH_WRIT' + 'E'], _0x354a2c);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xf19750['CULL']);
        }
        set ['cull'](_0x245e2c) {
            this['_shaderVal' + 'ues']['setInt'](_0xf19750['CULL'], _0x245e2c);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xf19750['BLEND']);
        }
        set ['blend'](_0x12ceb6) {
            this['_shaderVal' + 'ues']['setInt'](_0xf19750['BLEND'], _0x12ceb6);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xf19750['BLEND_SRC']);
        }
        set ['blendSrc'](_0x1e1a0d) {
            this['_shaderVal' + 'ues']['setInt'](_0xf19750['BLEND_SRC'], _0x1e1a0d);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xf19750['BLEND_DST']);
        }
        set ['blendDst'](_0x49fd13) {
            this['_shaderVal' + 'ues']['setInt'](_0xf19750['BLEND_DST'], _0x49fd13);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xf19750['DEPTH_TEST']);
        }
        set ['depthTest'](_0x3ef1de) {
            this['_shaderVal' + 'ues']['setInt'](_0xf19750['DEPTH_TEST'], _0x3ef1de);
        }
        ['_setDetail' + 'Num'](_0x199a4e) {
            switch (_0x199a4e) {
            case 0x1:
                this['_shaderVal' + 'ues']['addDefine'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x2:
                this['_shaderVal' + 'ues']['addDefine'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x3:
                this['_shaderVal' + 'ues']['addDefine'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x4:
                this['_shaderVal' + 'ues']['addDefine'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x5:
                this['_shaderVal' + 'ues']['addDefine'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xf19750['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']);
                break;
            }
        }
        ['clone']() {
            var _0x5550e8 = new _0xf19750();
            return this['cloneTo'](_0x5550e8), _0x5550e8;
        }
    }
    _0xf19750['RENDERMODE' + '_OPAQUE'] = 0x1, _0xf19750['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0xf19750['SPLATALPHA' + 'TEXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_SplatAlp' + 'haTexture'), _0xf19750['DIFFUSETEX' + 'TURE1'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseT' + 'exture1'), _0xf19750['DIFFUSETEX' + 'TURE2'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseT' + 'exture2'), _0xf19750['DIFFUSETEX' + 'TURE3'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseT' + 'exture3'), _0xf19750['DIFFUSETEX' + 'TURE4'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseT' + 'exture4'), _0xf19750['DIFFUSETEX' + 'TURE5'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseT' + 'exture5'), _0xf19750['DIFFUSESCA' + 'LEOFFSET1'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '1'), _0xf19750['DIFFUSESCA' + 'LEOFFSET2'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '2'), _0xf19750['DIFFUSESCA' + 'LEOFFSET3'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '3'), _0xf19750['DIFFUSESCA' + 'LEOFFSET4'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '4'), _0xf19750['DIFFUSESCA' + 'LEOFFSET5'] = _0x18824e['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '5'), _0xf19750['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0xf19750['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0xf19750['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0xf19750['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0xf19750['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0xf19750['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te'), function (_0x5e7c73) {
        _0x5e7c73[_0x5e7c73['Opaque'] = 0x0] = 'Opaque', _0x5e7c73[_0x5e7c73['Cutout'] = 0x1] = 'Cutout', _0x5e7c73[_0x5e7c73['Fade'] = 0x2] = 'Fade', _0x5e7c73[_0x5e7c73['Transparen' + 't'] = 0x3] = 'Transparen' + 't';
    }(_0x1f405c['PBRRenderM' + 'ode'] || (_0x1f405c['PBRRenderM' + 'ode'] = {}));
    class _0x460fe4 extends _0x2b6b33 {
        constructor() {
            super(), this['_enableEmi' + 'ssion'] = ![], this['_shaderVal' + 'ues']['setVector'](_0x460fe4['ALBEDOCOLO' + 'R'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), this['_shaderVal' + 'ues']['setVector'](_0x460fe4['EMISSIONCO' + 'LOR'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['SMOOTHNESS'], 0.5), this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['SMOOTHNESS' + 'SCALE'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['OCCLUSIONS' + 'TRENGTH'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['NORMALSCAL' + 'E'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['PARALLAXSC' + 'ALE'], 0.001), this['_shaderVal' + 'ues']['setNumber'](_0x2b6b33['ALPHATESTV' + 'ALUE'], 0.5), this['renderMode'] = _0x1f405c['PBRRenderM' + 'ode']['Opaque'];
        }
        static ['__init__']() {
            _0x460fe4['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x18824e['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0x460fe4['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x18824e['getDefineB' + 'yName']('NORMALTEXT' + 'URE'), _0x460fe4['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE'] = _0x18824e['getDefineB' + 'yName']('PARALLAXTE' + 'XTURE'), _0x460fe4['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE'] = _0x18824e['getDefineB' + 'yName']('OCCLUSIONT' + 'EXTURE'), _0x460fe4['SHADERDEFI' + 'NE_EMISSIO' + 'N'] = _0x18824e['getDefineB' + 'yName']('EMISSION'), _0x460fe4['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE'] = _0x18824e['getDefineB' + 'yName']('EMISSIONTE' + 'XTURE'), _0x460fe4['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x18824e['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x460fe4['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND'] = _0x18824e['getDefineB' + 'yName']('TRANSPAREN' + 'TBLEND'), _0x460fe4['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_HIG' + 'H'] = _0x18824e['getDefineB' + 'yName']('LAYA_PBR_B' + 'RDF_HIGH'), _0x460fe4['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_LOW'] = _0x18824e['getDefineB' + 'yName']('LAYA_PBR_B' + 'RDF_LOW');
        }
        get ['albedoColo' + 'r']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x460fe4['ALBEDOCOLO' + 'R']);
        }
        set ['albedoColo' + 'r'](_0x4651e6) {
            this['_shaderVal' + 'ues']['setVector'](_0x460fe4['ALBEDOCOLO' + 'R'], _0x4651e6);
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x460fe4['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x33ac15) {
            if (_0x33ac15)
                this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x460fe4['ALBEDOTEXT' + 'URE'], _0x33ac15);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x460fe4['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x4f8fb3) {
            _0x4f8fb3 ? this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x460fe4['NORMALTEXT' + 'URE'], _0x4f8fb3);
        }
        get ['normalText' + 'ureScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x460fe4['NORMALSCAL' + 'E']);
        }
        set ['normalText' + 'ureScale'](_0x148923) {
            this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['NORMALSCAL' + 'E'], _0x148923);
        }
        get ['parallaxTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x460fe4['PARALLAXTE' + 'XTURE']);
        }
        set ['parallaxTe' + 'xture'](_0x2e70c8) {
            if (_0x2e70c8)
                this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x460fe4['PARALLAXTE' + 'XTURE'], _0x2e70c8);
        }
        get ['parallaxTe' + 'xtureScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x460fe4['PARALLAXSC' + 'ALE']);
        }
        set ['parallaxTe' + 'xtureScale'](_0x24afe2) {
            this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['PARALLAXSC' + 'ALE'], Math['max'](0.005, Math['min'](0.08, _0x24afe2)));
        }
        get ['occlusionT' + 'exture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x460fe4['OCCLUSIONT' + 'EXTURE']);
        }
        set ['occlusionT' + 'exture'](_0x482cfb) {
            if (_0x482cfb)
                this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x460fe4['OCCLUSIONT' + 'EXTURE'], _0x482cfb);
        }
        get ['occlusionT' + 'extureStre' + 'ngth']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x460fe4['OCCLUSIONS' + 'TRENGTH']);
        }
        set ['occlusionT' + 'extureStre' + 'ngth'](_0x1486e4) {
            this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['OCCLUSIONS' + 'TRENGTH'], Math['max'](0x0, Math['min'](0x1, _0x1486e4)));
        }
        get ['smoothness']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x460fe4['SMOOTHNESS']);
        }
        set ['smoothness'](_0xc7b53b) {
            this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['SMOOTHNESS'], Math['max'](0x0, Math['min'](0x1, _0xc7b53b)));
        }
        get ['smoothness' + 'TextureSca' + 'le']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x460fe4['SMOOTHNESS' + 'SCALE']);
        }
        set ['smoothness' + 'TextureSca' + 'le'](_0x484e1a) {
            this['_shaderVal' + 'ues']['setNumber'](_0x460fe4['SMOOTHNESS' + 'SCALE'], Math['max'](0x0, Math['min'](0x1, _0x484e1a)));
        }
        get ['enableEmis' + 'sion']() {
            return this['_enableEmi' + 'ssion'];
        }
        set ['enableEmis' + 'sion'](_0x41a594) {
            if (_0x41a594)
                this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_EMISSIO' + 'N']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_EMISSIO' + 'N']);
            this['_enableEmi' + 'ssion'] = _0x41a594;
        }
        get ['emissionCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x460fe4['EMISSIONCO' + 'LOR']);
        }
        set ['emissionCo' + 'lor'](_0x568ae5) {
            this['_shaderVal' + 'ues']['setVector'](_0x460fe4['EMISSIONCO' + 'LOR'], _0x568ae5);
        }
        get ['emissionTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x460fe4['EMISSIONTE' + 'XTURE']);
        }
        set ['emissionTe' + 'xture'](_0x393824) {
            if (_0x393824)
                this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x460fe4['EMISSIONTE' + 'XTURE'], _0x393824);
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x460fe4['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x29a912) {
            if (_0x29a912) {
                if (_0x29a912['x'] != 0x1 || _0x29a912['y'] != 0x1 || _0x29a912['z'] != 0x0 || _0x29a912['w'] != 0x0)
                    this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            this['_shaderVal' + 'ues']['setVector'](_0x460fe4['TILINGOFFS' + 'ET'], _0x29a912);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x460fe4['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x25a312) {
            this['_shaderVal' + 'ues']['setBool'](_0x460fe4['DEPTH_WRIT' + 'E'], _0x25a312);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x460fe4['CULL']);
        }
        set ['cull'](_0x76251c) {
            this['_shaderVal' + 'ues']['setInt'](_0x460fe4['CULL'], _0x76251c);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x460fe4['BLEND']);
        }
        set ['blend'](_0x2925d0) {
            this['_shaderVal' + 'ues']['setInt'](_0x460fe4['BLEND'], _0x2925d0);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x460fe4['BLEND_SRC']);
        }
        set ['blendSrc'](_0x3ef49b) {
            this['_shaderVal' + 'ues']['setInt'](_0x460fe4['BLEND_SRC'], _0x3ef49b);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x460fe4['BLEND_DST']);
        }
        set ['blendDst'](_0x392447) {
            this['_shaderVal' + 'ues']['setInt'](_0x460fe4['BLEND_DST'], _0x392447);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x460fe4['DEPTH_TEST']);
        }
        set ['depthTest'](_0x49636c) {
            this['_shaderVal' + 'ues']['setInt'](_0x460fe4['DEPTH_TEST'], _0x49636c);
        }
        set ['renderMode'](_0x251baa) {
            switch (_0x251baa) {
            case _0x1f405c['PBRRenderM' + 'ode']['Opaque']:
                this['alphaTest'] = ![], this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            case _0x1f405c['PBRRenderM' + 'ode']['Cutout']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !![], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            case _0x1f405c['PBRRenderM' + 'ode']['Fade']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x460fe4['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            case _0x1f405c['PBRRenderM' + 'ode']['Transparen' + 't']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x460fe4['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            default:
                throw new Error('PBRMateria' + 'l:unknown\x20' + 'renderMode' + '\x20value.');
            }
        }
        get ['enableRefl' + 'ection']() {
            return !![];
        }
        set ['enableRefl' + 'ection'](_0x21c690) {
        }
    }
    _0x460fe4['ALBEDOTEXT' + 'URE'] = _0x18824e['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x460fe4['ALBEDOCOLO' + 'R'] = _0x18824e['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x460fe4['TILINGOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x460fe4['NORMALTEXT' + 'URE'] = _0x18824e['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x460fe4['NORMALSCAL' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_NormalSc' + 'ale'), _0x460fe4['SMOOTHNESS'] = _0x18824e['propertyNa' + 'meToID']('u_Smoothne' + 'ss'), _0x460fe4['SMOOTHNESS' + 'SCALE'] = _0x18824e['propertyNa' + 'meToID']('u_Smoothne' + 'ssScale'), _0x460fe4['OCCLUSIONT' + 'EXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_Occlusio' + 'nTexture'), _0x460fe4['OCCLUSIONS' + 'TRENGTH'] = _0x18824e['propertyNa' + 'meToID']('u_occlusio' + 'nStrength'), _0x460fe4['PARALLAXTE' + 'XTURE'] = _0x18824e['propertyNa' + 'meToID']('u_Parallax' + 'Texture'), _0x460fe4['PARALLAXSC' + 'ALE'] = _0x18824e['propertyNa' + 'meToID']('u_Parallax' + 'Scale'), _0x460fe4['EMISSIONTE' + 'XTURE'] = _0x18824e['propertyNa' + 'meToID']('u_Emission' + 'Texture'), _0x460fe4['EMISSIONCO' + 'LOR'] = _0x18824e['propertyNa' + 'meToID']('u_Emission' + 'Color'), _0x460fe4['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x460fe4['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x460fe4['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x460fe4['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x460fe4['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x460fe4['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te'), _0x460fe4['renderQual' + 'ity'] = _0x1f405c['PBRRenderQ' + 'uality']['High'];
    var _0x56350f = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#de' + 'fine\x20SETUP' + '_BRDF_INPU' + 'T\x20specular' + 'Setup\x0d\x0a\x0d\x0a#' + 'include\x20\x22L' + 'ighting.gl' + 'sl\x22;\x0d\x0a#inc' + 'lude\x20\x22PBRF' + 'SInput.gls' + 'l\x22;\x0d\x0a#incl' + 'ude\x20\x22LayaP' + 'BRBRDF.gls' + 'l\x22;\x0d\x0a#incl' + 'ude\x20\x22Globa' + 'lIlluminat' + 'ion.glsl\x22;' + '\x0d\x0a#include' + '\x20\x22Shadow.g' + 'lsl\x22\x0d\x0a#inc' + 'lude\x20\x22PBRC' + 'ore.glsl\x22;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09fragmentF' + 'orward();\x0d' + '\x0a}', _0x22de33 = '#include\x20\x22' + 'PBRVSInput' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22L' + 'ighting.gl' + 'sl\x22;\x0d\x0a#inc' + 'lude\x20\x22PBRV' + 'ertex.glsl' + '\x22;\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vertexF' + 'orward();\x0d' + '\x0a\x09gl_Posit' + 'ion=remapG' + 'LPositionZ' + '(gl_Positi' + 'on);\x0d\x0a}', _0x4919d8 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dowCasterF' + 'S.glsl\x22\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x0d\x0a{\x0d\x0a\x09gl' + '_FragColor' + '=shadowCas' + 'terFragmen' + 't();\x0d\x0a}', _0x2b60a0 = '#include\x20\x22' + 'ShadowCast' + 'erVS.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tionCS\x20=\x20\x20' + 'shadowCast' + 'erVertex()' + ';\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(positio' + 'nCS);\x0d\x0a}';
    class _0x1d9513 {
        constructor() {
            this['textureID'] = -0x1;
        }
    }
    class _0x3ec46b extends _0x442335['Resource'] {
        constructor(_0x2c382c, _0x5cd748, _0x4b5f75, _0x1fd41f, _0x5bae28) {
            super(), this['_statePara' + 'msMap'] = [], this['_uploadMar' + 'k'] = -0x1, this['_uploadRen' + 'derType'] = -0x1, this['_vs'] = _0x2c382c, this['_ps'] = _0x5cd748, this['_attribute' + 'Map'] = _0x4b5f75, this['_uniformMa' + 'p'] = _0x1fd41f, this['_shaderPas' + 's'] = _0x5bae28, this['_globaluni' + 'formMap'] = [], this['_create'](), this['lock'] = !![];
        }
        ['_create']() {
            var _0x2c9819 = _0x442335['LayaGL']['instance'];
            this['_program'] = _0x2c9819['createProg' + 'ram'](), this['_vshader'] = this['_createSha' + 'der'](_0x2c9819, this['_vs'], _0x2c9819['VERTEX_SHA' + 'DER']), this['_pshader'] = this['_createSha' + 'der'](_0x2c9819, this['_ps'], _0x2c9819['FRAGMENT_S' + 'HADER']), _0x2c9819['attachShad' + 'er'](this['_program'], this['_vshader']), _0x2c9819['attachShad' + 'er'](this['_program'], this['_pshader']);
            for (var _0x5d8cb1 in this['_attribute' + 'Map'])
                _0x2c9819['bindAttrib' + 'Location'](this['_program'], this['_attribute' + 'Map'][_0x5d8cb1], _0x5d8cb1);
            _0x2c9819['linkProgra' + 'm'](this['_program']);
            if (!_0x442335['Render']['isConchApp'] && _0x18824e['debugMode'] && !_0x2c9819['getProgram' + 'Parameter'](this['_program'], _0x2c9819['LINK_STATU' + 'S']))
                throw _0x2c9819['getProgram' + 'InfoLog'](this['_program']);
            var _0x431985 = [], _0x8b7b96 = [], _0xba1f71 = [], _0x5b4e02 = [], _0x38cc3e = [];
            this['_customUni' + 'formParams' + 'Map'] = [];
            var _0x2a1a86 = _0x2c9819['getProgram' + 'Parameter'](this['_program'], _0x2c9819['ACTIVE_UNI' + 'FORMS']);
            _0x442335['WebGLConte' + 'xt']['useProgram'](_0x2c9819, this['_program']), this['_curActTex' + 'Index'] = 0x0;
            var _0x3fd9fd, _0x32ab28, _0x455de7;
            for (_0x32ab28 = 0x0; _0x32ab28 < _0x2a1a86; _0x32ab28++) {
                var _0x38d05b = _0x2c9819['getActiveU' + 'niform'](this['_program'], _0x32ab28), _0x55dae7 = _0x38d05b['name'];
                _0x3fd9fd = new _0x1d9513(), _0x3fd9fd['location'] = _0x2c9819['getUniform' + 'Location'](this['_program'], _0x55dae7);
                _0x55dae7['indexOf']('[0]') > 0x0 ? (_0x3fd9fd['name'] = _0x55dae7 = _0x55dae7['substr'](0x0, _0x55dae7['length'] - 0x3), _0x3fd9fd['isArray'] = !![]) : (_0x3fd9fd['name'] = _0x55dae7, _0x3fd9fd['isArray'] = ![]);
                _0x3fd9fd['type'] = _0x38d05b['type'], this['_addShader' + 'UnifiormFu' + 'n'](_0x3fd9fd);
                var _0x118e18 = this['_uniformMa' + 'p'][_0x55dae7];
                if (_0x118e18 != null) {
                    _0x3fd9fd['dataOffset'] = _0x18824e['propertyNa' + 'meToID'](_0x55dae7);
                    switch (_0x118e18) {
                    case _0x18824e['PERIOD_CUS' + 'TOM']:
                        _0x38cc3e['push'](_0x3fd9fd);
                        break;
                    case _0x18824e['PERIOD_MAT' + 'ERIAL']:
                        _0x5b4e02['push'](_0x3fd9fd);
                        break;
                    case _0x18824e['PERIOD_SPR' + 'ITE']:
                        _0xba1f71['push'](_0x3fd9fd);
                        break;
                    case _0x18824e['PERIOD_CAM' + 'ERA']:
                        _0x8b7b96['push'](_0x3fd9fd);
                        break;
                    case _0x18824e['PERIOD_SCE' + 'NE']:
                        _0x431985['push'](_0x3fd9fd);
                        break;
                    default:
                        throw new Error('Shader3D:\x20' + 'period\x20is\x20' + 'unkonw.');
                    }
                } else
                    _0x3fd9fd['dataOffset'] = _0x18824e['propertyNa' + 'meToID'](_0x55dae7), this['_globaluni' + 'formMap'][_0x55dae7] = _0x18824e['PERIOD_SCE' + 'NE'], _0x431985['push'](_0x3fd9fd);
            }
            this['_sceneUnif' + 'ormParamsM' + 'ap'] = _0x442335['LayaGL']['instance']['createComm' + 'andEncoder'](_0x431985['length'] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x32ab28 = 0x0, _0x455de7 = _0x431985['length']; _0x32ab28 < _0x455de7; _0x32ab28++)
                this['_sceneUnif' + 'ormParamsM' + 'ap']['addShaderU' + 'niform'](_0x431985[_0x32ab28]);
            this['_cameraUni' + 'formParams' + 'Map'] = _0x442335['LayaGL']['instance']['createComm' + 'andEncoder'](_0x8b7b96['length'] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x32ab28 = 0x0, _0x455de7 = _0x8b7b96['length']; _0x32ab28 < _0x455de7; _0x32ab28++)
                this['_cameraUni' + 'formParams' + 'Map']['addShaderU' + 'niform'](_0x8b7b96[_0x32ab28]);
            this['_spriteUni' + 'formParams' + 'Map'] = _0x442335['LayaGL']['instance']['createComm' + 'andEncoder'](_0xba1f71['length'] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x32ab28 = 0x0, _0x455de7 = _0xba1f71['length']; _0x32ab28 < _0x455de7; _0x32ab28++)
                this['_spriteUni' + 'formParams' + 'Map']['addShaderU' + 'niform'](_0xba1f71[_0x32ab28]);
            this['_materialU' + 'niformPara' + 'msMap'] = _0x442335['LayaGL']['instance']['createComm' + 'andEncoder'](_0x5b4e02['length'] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x32ab28 = 0x0, _0x455de7 = _0x5b4e02['length']; _0x32ab28 < _0x455de7; _0x32ab28++)
                this['_materialU' + 'niformPara' + 'msMap']['addShaderU' + 'niform'](_0x5b4e02[_0x32ab28]);
            this['_customUni' + 'formParams' + 'Map']['length'] = _0x38cc3e['length'];
            for (_0x32ab28 = 0x0, _0x455de7 = _0x38cc3e['length']; _0x32ab28 < _0x455de7; _0x32ab28++) {
                var _0x44774c = _0x38cc3e[_0x32ab28];
                this['_customUni' + 'formParams' + 'Map'][_0x44774c['dataOffset']] = _0x44774c;
            }
            var _0x1f5e8f = this['_shaderPas' + 's']['_stateMap'];
            for (var _0x49747a in _0x1f5e8f)
                this['_statePara' + 'msMap'][_0x1f5e8f[_0x49747a]] = _0x18824e['propertyNa' + 'meToID'](_0x49747a);
        }
        ['_getRender' + 'State'](_0x20e4da, _0x148751) {
            var _0x3bb366 = this['_statePara' + 'msMap'][_0x148751];
            if (_0x3bb366 == null)
                return null;
            else
                return _0x20e4da[_0x3bb366];
        }
        ['_disposeRe' + 'source']() {
            _0x442335['LayaGL']['instance']['deleteShad' + 'er'](this['_vshader']), _0x442335['LayaGL']['instance']['deleteShad' + 'er'](this['_pshader']), _0x442335['LayaGL']['instance']['deleteProg' + 'ram'](this['_program']), this['_vshader'] = this['_pshader'] = this['_program'] = null, this['_setGPUMem' + 'ory'](0x0), this['_curActTex' + 'Index'] = 0x0;
        }
        ['_addShader' + 'UnifiormFu' + 'n'](_0x1cf6a2) {
            var _0x5d9374 = _0x442335['LayaGL']['instance'];
            _0x1cf6a2['caller'] = this;
            var _0xc69ff9 = _0x1cf6a2['isArray'];
            switch (_0x1cf6a2['type']) {
            case _0x5d9374['BOOL']:
                _0x1cf6a2['fun'] = this['_uniform1i'], _0x1cf6a2['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x5d9374['INT']:
                _0x1cf6a2['fun'] = _0xc69ff9 ? this['_uniform1i' + 'v'] : this['_uniform1i'], _0x1cf6a2['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x5d9374['FLOAT']:
                _0x1cf6a2['fun'] = _0xc69ff9 ? this['_uniform1f' + 'v'] : this['_uniform1f'], _0x1cf6a2['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x5d9374['FLOAT_VEC2']:
                _0x1cf6a2['fun'] = _0xc69ff9 ? this['_uniform_v' + 'ec2v'] : this['_uniform_v' + 'ec2'], _0x1cf6a2['uploadedVa' + 'lue'] = new Array(0x2);
                break;
            case _0x5d9374['FLOAT_VEC3']:
                _0x1cf6a2['fun'] = _0xc69ff9 ? this['_uniform_v' + 'ec3v'] : this['_uniform_v' + 'ec3'], _0x1cf6a2['uploadedVa' + 'lue'] = new Array(0x3);
                break;
            case _0x5d9374['FLOAT_VEC4']:
                _0x1cf6a2['fun'] = _0xc69ff9 ? this['_uniform_v' + 'ec4v'] : this['_uniform_v' + 'ec4'], _0x1cf6a2['uploadedVa' + 'lue'] = new Array(0x4);
                break;
            case _0x5d9374['FLOAT_MAT2']:
                _0x1cf6a2['fun'] = this['_uniformMa' + 'trix2fv'];
                break;
            case _0x5d9374['FLOAT_MAT3']:
                _0x1cf6a2['fun'] = this['_uniformMa' + 'trix3fv'];
                break;
            case _0x5d9374['FLOAT_MAT4']:
                _0x1cf6a2['fun'] = _0xc69ff9 ? this['_uniformMa' + 'trix4fv'] : this['_uniformMa' + 'trix4f'];
                break;
            case _0x5d9374['SAMPLER_2D']:
            case _0x5d9374['SAMPLER_2D' + '_SHADOW']:
                _0x5d9374['uniform1i'](_0x1cf6a2['location'], this['_curActTex' + 'Index']), _0x1cf6a2['textureID'] = _0x442335['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x1cf6a2['fun'] = this['_uniform_s' + 'ampler2D'];
                break;
            case 0x8b5f:
                _0x5d9374['uniform1i'](_0x1cf6a2['location'], this['_curActTex' + 'Index']), _0x1cf6a2['textureID'] = _0x442335['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x1cf6a2['fun'] = this['_uniform_s' + 'ampler3D'];
                break;
            case _0x5d9374['SAMPLER_CU' + 'BE']:
                _0x5d9374['uniform1i'](_0x1cf6a2['location'], this['_curActTex' + 'Index']), _0x1cf6a2['textureID'] = _0x442335['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x1cf6a2['fun'] = this['_uniform_s' + 'amplerCube'];
                break;
            default:
                throw new Error('compile\x20sh' + 'ader\x20err!');
                break;
            }
        }
        ['_createSha' + 'der'](_0x2e0e5b, _0xce5727, _0xeec083) {
            var _0xb09081 = _0x2e0e5b['createShad' + 'er'](_0xeec083);
            _0x2e0e5b['shaderSour' + 'ce'](_0xb09081, _0xce5727), _0x2e0e5b['compileSha' + 'der'](_0xb09081);
            if (_0x18824e['debugMode'] && !_0x2e0e5b['getShaderP' + 'arameter'](_0xb09081, _0x2e0e5b['COMPILE_ST' + 'ATUS']))
                throw _0x2e0e5b['getShaderI' + 'nfoLog'](_0xb09081);
            return _0xb09081;
        }
        ['_uniform1f'](_0x18d8fa, _0x55bcf6) {
            var _0x2a5d1a = _0x18d8fa['uploadedVa' + 'lue'];
            if (_0x2a5d1a[0x0] !== _0x55bcf6)
                return _0x442335['LayaGL']['instance']['uniform1f'](_0x18d8fa['location'], _0x2a5d1a[0x0] = _0x55bcf6), 0x1;
            return 0x0;
        }
        ['_uniform1f' + 'v'](_0x5725aa, _0x3d8bbd) {
            if (_0x3d8bbd['length'] < 0x4) {
                var _0x479ba4 = _0x5725aa['uploadedVa' + 'lue'];
                if (_0x479ba4[0x0] !== _0x3d8bbd[0x0] || _0x479ba4[0x1] !== _0x3d8bbd[0x1] || _0x479ba4[0x2] !== _0x3d8bbd[0x2] || _0x479ba4[0x3] !== _0x3d8bbd[0x3])
                    return _0x442335['LayaGL']['instance']['uniform1fv'](_0x5725aa['location'], _0x3d8bbd), _0x479ba4[0x0] = _0x3d8bbd[0x0], _0x479ba4[0x1] = _0x3d8bbd[0x1], _0x479ba4[0x2] = _0x3d8bbd[0x2], _0x479ba4[0x3] = _0x3d8bbd[0x3], 0x1;
                return 0x0;
            } else
                return _0x442335['LayaGL']['instance']['uniform1fv'](_0x5725aa['location'], _0x3d8bbd), 0x1;
        }
        ['_uniform_v' + 'ec2'](_0x164008, _0x41815d) {
            var _0x58549f = _0x164008['uploadedVa' + 'lue'];
            if (_0x58549f[0x0] !== _0x41815d['x'] || _0x58549f[0x1] !== _0x41815d['y'])
                return _0x442335['LayaGL']['instance']['uniform2f'](_0x164008['location'], _0x58549f[0x0] = _0x41815d['x'], _0x58549f[0x1] = _0x41815d['y']), 0x1;
            return 0x0;
        }
        ['_uniform_v' + 'ec2v'](_0x1abc31, _0x40c2b2) {
            if (_0x40c2b2['length'] < 0x2) {
                var _0x134d14 = _0x1abc31['uploadedVa' + 'lue'];
                if (_0x134d14[0x0] !== _0x40c2b2[0x0] || _0x134d14[0x1] !== _0x40c2b2[0x1] || _0x134d14[0x2] !== _0x40c2b2[0x2] || _0x134d14[0x3] !== _0x40c2b2[0x3])
                    return _0x442335['LayaGL']['instance']['uniform2fv'](_0x1abc31['location'], _0x40c2b2), _0x134d14[0x0] = _0x40c2b2[0x0], _0x134d14[0x1] = _0x40c2b2[0x1], _0x134d14[0x2] = _0x40c2b2[0x2], _0x134d14[0x3] = _0x40c2b2[0x3], 0x1;
                return 0x0;
            } else
                return _0x442335['LayaGL']['instance']['uniform2fv'](_0x1abc31['location'], _0x40c2b2), 0x1;
        }
        ['_uniform_v' + 'ec3'](_0x401c18, _0x299743) {
            var _0x4ed1e0 = _0x401c18['uploadedVa' + 'lue'];
            if (_0x4ed1e0[0x0] !== _0x299743['x'] || _0x4ed1e0[0x1] !== _0x299743['y'] || _0x4ed1e0[0x2] !== _0x299743['z'])
                return _0x442335['LayaGL']['instance']['uniform3f'](_0x401c18['location'], _0x4ed1e0[0x0] = _0x299743['x'], _0x4ed1e0[0x1] = _0x299743['y'], _0x4ed1e0[0x2] = _0x299743['z']), 0x1;
            return 0x0;
        }
        ['_uniform_v' + 'ec3v'](_0x2ea023, _0x4de5d9) {
            return _0x442335['LayaGL']['instance']['uniform3fv'](_0x2ea023['location'], _0x4de5d9), 0x1;
        }
        ['_uniform_v' + 'ec4'](_0x49549e, _0x34e446) {
            var _0x56b5af = _0x49549e['uploadedVa' + 'lue'];
            if (_0x56b5af[0x0] !== _0x34e446['x'] || _0x56b5af[0x1] !== _0x34e446['y'] || _0x56b5af[0x2] !== _0x34e446['z'] || _0x56b5af[0x3] !== _0x34e446['w'])
                return _0x442335['LayaGL']['instance']['uniform4f'](_0x49549e['location'], _0x56b5af[0x0] = _0x34e446['x'], _0x56b5af[0x1] = _0x34e446['y'], _0x56b5af[0x2] = _0x34e446['z'], _0x56b5af[0x3] = _0x34e446['w']), 0x1;
            return 0x0;
        }
        ['_uniform_v' + 'ec4v'](_0x8d6855, _0x37296d) {
            return _0x442335['LayaGL']['instance']['uniform4fv'](_0x8d6855['location'], _0x37296d), 0x1;
        }
        ['_uniformMa' + 'trix2fv'](_0x1f2491, _0x5c23f7) {
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix2fv'](_0x1f2491['location'], ![], _0x5c23f7), 0x1;
        }
        ['_uniformMa' + 'trix3fv'](_0x450f5a, _0xfd0986) {
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix3fv'](_0x450f5a['location'], ![], _0xfd0986), 0x1;
        }
        ['_uniformMa' + 'trix4f'](_0x17c21f, _0x2af6ac) {
            var _0x4a783d = _0x2af6ac['elements'];
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix4fv'](_0x17c21f['location'], ![], _0x4a783d), 0x1;
        }
        ['_uniformMa' + 'trix4fv'](_0x68cd14, _0x4f47f4) {
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix4fv'](_0x68cd14['location'], ![], _0x4f47f4), 0x1;
        }
        ['_uniform1i'](_0x5853a3, _0x2046d0) {
            var _0x1580ee = _0x5853a3['uploadedVa' + 'lue'];
            if (_0x1580ee[0x0] !== _0x2046d0)
                return _0x442335['LayaGL']['instance']['uniform1i'](_0x5853a3['location'], _0x1580ee[0x0] = _0x2046d0), 0x1;
            return 0x0;
        }
        ['_uniform1i' + 'v'](_0x597da2, _0x3c5ef6) {
            return _0x442335['LayaGL']['instance']['uniform1iv'](_0x597da2['location'], _0x3c5ef6), 0x1;
        }
        ['_uniform_i' + 'vec2'](_0x3a14bd, _0x29477a) {
            var _0x48fc2c = _0x3a14bd['uploadedVa' + 'lue'];
            if (_0x48fc2c[0x0] !== _0x29477a[0x0] || _0x48fc2c[0x1] !== _0x29477a[0x1])
                return _0x442335['LayaGL']['instance']['uniform2i'](_0x3a14bd['location'], _0x48fc2c[0x0] = _0x29477a[0x0], _0x48fc2c[0x1] = _0x29477a[0x1]), 0x1;
            return 0x0;
        }
        ['_uniform_i' + 'vec2v'](_0x1a94ec, _0x21f4a3) {
            return _0x442335['LayaGL']['instance']['uniform2iv'](_0x1a94ec['location'], _0x21f4a3), 0x1;
        }
        ['_uniform_v' + 'ec3i'](_0x2e98e8, _0x21bb79) {
            var _0x18b68d = _0x2e98e8['uploadedVa' + 'lue'];
            if (_0x18b68d[0x0] !== _0x21bb79[0x0] || _0x18b68d[0x1] !== _0x21bb79[0x1] || _0x18b68d[0x2] !== _0x21bb79[0x2])
                return _0x442335['LayaGL']['instance']['uniform3i'](_0x2e98e8['location'], _0x18b68d[0x0] = _0x21bb79[0x0], _0x18b68d[0x1] = _0x21bb79[0x1], _0x18b68d[0x2] = _0x21bb79[0x2]), 0x1;
            return 0x0;
        }
        ['_uniform_v' + 'ec3vi'](_0x2d13f7, _0x365246) {
            return _0x442335['LayaGL']['instance']['uniform3iv'](_0x2d13f7['location'], _0x365246), 0x1;
        }
        ['_uniform_v' + 'ec4i'](_0x127aa3, _0x291720) {
            var _0x3afc66 = _0x127aa3['uploadedVa' + 'lue'];
            if (_0x3afc66[0x0] !== _0x291720[0x0] || _0x3afc66[0x1] !== _0x291720[0x1] || _0x3afc66[0x2] !== _0x291720[0x2] || _0x3afc66[0x3] !== _0x291720[0x3])
                return _0x442335['LayaGL']['instance']['uniform4i'](_0x127aa3['location'], _0x3afc66[0x0] = _0x291720[0x0], _0x3afc66[0x1] = _0x291720[0x1], _0x3afc66[0x2] = _0x291720[0x2], _0x3afc66[0x3] = _0x291720[0x3]), 0x1;
            return 0x0;
        }
        ['_uniform_v' + 'ec4vi'](_0x4eba18, _0x182c54) {
            return _0x442335['LayaGL']['instance']['uniform4iv'](_0x4eba18['location'], _0x182c54), 0x1;
        }
        ['_uniform_s' + 'ampler2D'](_0x29eed7, _0x2ddf9a) {
            var _0x229c29 = _0x2ddf9a['_getSource']() || _0x2ddf9a['defaulteTe' + 'xture']['_getSource'](), _0x3f99b4 = _0x442335['LayaGL']['instance'];
            return _0x442335['WebGLConte' + 'xt']['activeText' + 'ure'](_0x3f99b4, _0x29eed7['textureID']), _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x3f99b4, _0x3f99b4['TEXTURE_2D'], _0x229c29), 0x0;
        }
        ['_uniform_s' + 'ampler3D'](_0x404a3f, _0x3f9942) {
            var _0x96c834 = _0x3f9942['_getSource']() || _0x3f9942['defaulteTe' + 'xture']['_getSource'](), _0x526c64 = _0x442335['LayaGL']['instance'];
            return _0x442335['WebGLConte' + 'xt']['activeText' + 'ure'](_0x526c64, _0x404a3f['textureID']), _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x526c64, WebGL2RenderingContext['TEXTURE_3D'], _0x96c834), 0x0;
        }
        ['_uniform_s' + 'amplerCube'](_0x4692a3, _0x5cde0b) {
            var _0x2c7ea4 = _0x5cde0b['_getSource']() || _0x5cde0b['defaulteTe' + 'xture']['_getSource'](), _0x129a45 = _0x442335['LayaGL']['instance'];
            return _0x442335['WebGLConte' + 'xt']['activeText' + 'ure'](_0x129a45, _0x4692a3['textureID']), _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x129a45, _0x129a45['TEXTURE_CU' + 'BE_MAP'], _0x2c7ea4), 0x0;
        }
        ['bind']() {
            return _0x442335['WebGLConte' + 'xt']['useProgram'](_0x442335['LayaGL']['instance'], this['_program']);
        }
        ['uploadUnif' + 'orms'](_0x57d976, _0x5dab48, _0x3e05c5) {
            _0x442335['Stat']['shaderCall'] += _0x442335['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms'](_0x442335['LayaGL']['instance'], _0x57d976, _0x5dab48, _0x3e05c5);
        }
        ['uploadRend' + 'erStateBle' + 'ndDepth'](_0x7204d6) {
            var _0x2a8d6d = _0x442335['LayaGL']['instance'], _0x454361 = this['_shaderPas' + 's']['renderStat' + 'e'], _0x4b641c = _0x7204d6['getData'](), _0x183cbe = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']), _0x59fd94 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST']), _0x13b9b4 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND']);
            _0x183cbe == null && (_0x183cbe = _0x454361['depthWrite']), _0x59fd94 == null && (_0x59fd94 = _0x454361['depthTest']), _0x13b9b4 == null && (_0x13b9b4 = _0x454361['blend']), _0x442335['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x2a8d6d, _0x183cbe);
            if (_0x59fd94 === _0x5c0fbd['DEPTHTEST_' + 'OFF'])
                _0x442335['WebGLConte' + 'xt']['setDepthTe' + 'st'](_0x2a8d6d, ![]);
            else
                _0x442335['WebGLConte' + 'xt']['setDepthTe' + 'st'](_0x2a8d6d, !![]), _0x442335['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x2a8d6d, _0x59fd94);
            switch (_0x13b9b4) {
            case _0x5c0fbd['BLEND_DISA' + 'BLE']:
                _0x442335['WebGLConte' + 'xt']['setBlend'](_0x2a8d6d, ![]);
                break;
            case _0x5c0fbd['BLEND_ENAB' + 'LE_ALL']:
                var _0x5936be = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_E' + 'QUATION']), _0xa3cdfb = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC']), _0x3b0d0f = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST']);
                _0x5936be == null && (_0x5936be = _0x454361['blendEquat' + 'ion']), _0xa3cdfb == null && (_0xa3cdfb = _0x454361['srcBlend']), _0x3b0d0f == null && (_0x3b0d0f = _0x454361['dstBlend']), _0x442335['WebGLConte' + 'xt']['setBlend'](_0x2a8d6d, !![]), _0x442335['WebGLConte' + 'xt']['setBlendEq' + 'uation'](_0x2a8d6d, _0x5936be), _0x442335['WebGLConte' + 'xt']['setBlendFu' + 'nc'](_0x2a8d6d, _0xa3cdfb, _0x3b0d0f);
                break;
            case _0x5c0fbd['BLEND_ENAB' + 'LE_SEPERAT' + 'E']:
                var _0x121dd1 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_RG' + 'B']), _0x341145 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_AL' + 'PHA']), _0x5a8ae8 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC_RGB']), _0x18b139 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST_RGB']), _0xf83258 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC_ALPHA']), _0x21cdf8 = this['_getRender' + 'State'](_0x4b641c, _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST_ALPHA']);
                _0x121dd1 == null && (_0x121dd1 = _0x454361['blendEquat' + 'ionRGB']), _0x341145 == null && (_0x341145 = _0x454361['blendEquat' + 'ionAlpha']), _0x5a8ae8 == null && (_0x5a8ae8 = _0x454361['srcBlendRG' + 'B']), _0x18b139 == null && (_0x18b139 = _0x454361['dstBlendRG' + 'B']), _0xf83258 == null && (_0xf83258 = _0x454361['srcBlendAl' + 'pha']), _0x21cdf8 == null && (_0x21cdf8 = _0x454361['dstBlendAl' + 'pha']), _0x442335['WebGLConte' + 'xt']['setBlend'](_0x2a8d6d, !![]), _0x442335['WebGLConte' + 'xt']['setBlendEq' + 'uationSepa' + 'rate'](_0x2a8d6d, _0x121dd1, _0x341145), _0x442335['WebGLConte' + 'xt']['setBlendFu' + 'ncSeperate'](_0x2a8d6d, _0x5a8ae8, _0x18b139, _0xf83258, _0x21cdf8);
                break;
            }
        }
        ['uploadRend' + 'erStateFro' + 'ntFace'](_0x38dc11, _0x2a4f28, _0x59b063) {
            var _0x42d8c5 = _0x442335['LayaGL']['instance'], _0x4e917c = this['_shaderPas' + 's']['renderStat' + 'e'], _0x352b93 = _0x38dc11['getData'](), _0x536e57 = this['_getRender' + 'State'](_0x352b93, _0x18824e['RENDER_STA' + 'TE_CULL']);
            _0x536e57 == null && (_0x536e57 = _0x4e917c['cull']);
            var _0x8c099c;
            switch (_0x536e57) {
            case _0x5c0fbd['CULL_NONE']:
                _0x442335['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x42d8c5, ![]);
                break;
            case _0x5c0fbd['CULL_FRONT']:
                _0x442335['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x42d8c5, !![]);
                if (_0x2a4f28) {
                    if (_0x59b063)
                        _0x8c099c = _0x42d8c5['CCW'];
                    else
                        _0x8c099c = _0x42d8c5['CW'];
                } else {
                    if (_0x59b063)
                        _0x8c099c = _0x42d8c5['CW'];
                    else
                        _0x8c099c = _0x42d8c5['CCW'];
                }
                _0x442335['WebGLConte' + 'xt']['setFrontFa' + 'ce'](_0x42d8c5, _0x8c099c);
                break;
            case _0x5c0fbd['CULL_BACK']:
                _0x442335['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x42d8c5, !![]);
                if (_0x2a4f28) {
                    if (_0x59b063)
                        _0x8c099c = _0x42d8c5['CW'];
                    else
                        _0x8c099c = _0x42d8c5['CCW'];
                } else {
                    if (_0x59b063)
                        _0x8c099c = _0x42d8c5['CCW'];
                    else
                        _0x8c099c = _0x42d8c5['CW'];
                }
                _0x442335['WebGLConte' + 'xt']['setFrontFa' + 'ce'](_0x42d8c5, _0x8c099c);
                break;
            }
        }
        ['uploadCust' + 'omUniform'](_0x3f4285, _0x342dda) {
            _0x442335['Stat']['shaderCall'] += _0x442335['LayaGLRunn' + 'er']['uploadCust' + 'omUniform'](_0x442335['LayaGL']['instance'], this['_customUni' + 'formParams' + 'Map'], _0x3f4285, _0x342dda);
        }
        ['_uniformMa' + 'trix2fvFor' + 'Native'](_0x50aba8, _0x85dd2b) {
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix2fvEx'](_0x50aba8['location'], ![], _0x85dd2b), 0x1;
        }
        ['_uniformMa' + 'trix3fvFor' + 'Native'](_0x5d560a, _0x104d92) {
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix3fvEx'](_0x5d560a['location'], ![], _0x104d92), 0x1;
        }
        ['_uniformMa' + 'trix4fvFor' + 'Native'](_0x23d64e, _0x14d04c) {
            return _0x442335['LayaGL']['instance']['uniformMat' + 'rix4fvEx'](_0x23d64e['location'], ![], _0x14d04c), 0x1;
        }
    }
    class _0x53809e extends _0x4a730f {
        constructor() {
            super();
        }
        ['add'](_0x1454c3) {
            var _0x215242 = _0x1454c3['_getIndexI' + 'nList']();
            if (_0x215242 !== -0x1)
                throw 'SimpleSing' + 'letonList:' + _0x1454c3 + ('\x20has\x20\x20in\x20\x20' + 'SingletonL' + 'ist.');
            this['_add'](_0x1454c3), _0x1454c3['_setIndexI' + 'nList'](this['length']++);
        }
        ['remove'](_0x40df83) {
            var _0x4a0678 = _0x40df83['_getIndexI' + 'nList']();
            this['length']--;
            if (_0x4a0678 !== this['length']) {
                var _0x24da60 = this['elements'][this['length']];
                this['elements'][_0x4a0678] = _0x24da60, _0x24da60['_setIndexI' + 'nList'](_0x4a0678);
            }
            _0x40df83['_setIndexI' + 'nList'](-0x1);
        }
        ['clear']() {
            var _0xd659d5 = this['elements'];
            for (var _0x59c7a0 = 0x0, _0x123f73 = this['length']; _0x59c7a0 < _0x123f73; _0x59c7a0++)
                _0xd659d5[_0x59c7a0]['_setIndexI' + 'nList'](-0x1);
            this['length'] = 0x0;
        }
    }
    class _0x5525ce {
        constructor(_0x49762f = 0x1, _0x122cb5 = 0x1, _0x21faec = 0x1, _0xd5e5b7 = 0x1) {
            this['r'] = _0x49762f, this['g'] = _0x122cb5, this['b'] = _0x21faec, this['a'] = _0xd5e5b7;
        }
        static ['gammaToLin' + 'earSpace'](_0x5cdd29) {
            if (_0x5cdd29 <= 0.04045)
                return _0x5cdd29 / 12.92;
            else {
                if (_0x5cdd29 < 0x1)
                    return Math['pow']((_0x5cdd29 + 0.055) / 1.055, 2.4);
                else
                    return Math['pow'](_0x5cdd29, 2.4);
            }
        }
        static ['linearToGa' + 'mmaSpace'](_0x5755f7) {
            if (_0x5755f7 <= 0x0)
                return 0x0;
            else {
                if (_0x5755f7 <= 0.0031308)
                    return 12.92 * _0x5755f7;
                else {
                    if (_0x5755f7 <= 0x1)
                        return 1.055 * Math['pow'](_0x5755f7, 0.41666) - 0.055;
                    else
                        return Math['pow'](_0x5755f7, 0.41666);
                }
            }
        }
        ['toLinear'](_0x44ef8c) {
            _0x44ef8c['r'] = _0x5525ce['gammaToLin' + 'earSpace'](this['r']), _0x44ef8c['g'] = _0x5525ce['gammaToLin' + 'earSpace'](this['g']), _0x44ef8c['b'] = _0x5525ce['gammaToLin' + 'earSpace'](this['b']);
        }
        ['toGamma'](_0x8c889f) {
            _0x8c889f['r'] = _0x5525ce['linearToGa' + 'mmaSpace'](this['r']), _0x8c889f['g'] = _0x5525ce['linearToGa' + 'mmaSpace'](this['g']), _0x8c889f['b'] = _0x5525ce['linearToGa' + 'mmaSpace'](this['b']);
        }
        ['cloneTo'](_0x191863) {
            var _0x13a474 = _0x191863;
            _0x13a474['r'] = this['r'], _0x13a474['g'] = this['g'], _0x13a474['b'] = this['b'], _0x13a474['a'] = this['a'];
        }
        ['clone']() {
            var _0x18e0a0 = new _0x5525ce();
            return this['cloneTo'](_0x18e0a0), _0x18e0a0;
        }
        ['forNativeE' + 'lement']() {
        }
    }
    _0x5525ce['RED'] = new _0x5525ce(0x1, 0x0, 0x0, 0x1), _0x5525ce['GREEN'] = new _0x5525ce(0x0, 0x1, 0x0, 0x1), _0x5525ce['BLUE'] = new _0x5525ce(0x0, 0x0, 0x1, 0x1), _0x5525ce['CYAN'] = new _0x5525ce(0x0, 0x1, 0x1, 0x1), _0x5525ce['YELLOW'] = new _0x5525ce(0x1, 0.92, 0.016, 0x1), _0x5525ce['MAGENTA'] = new _0x5525ce(0x1, 0x0, 0x1, 0x1), _0x5525ce['GRAY'] = new _0x5525ce(0.5, 0.5, 0.5, 0x1), _0x5525ce['WHITE'] = new _0x5525ce(0x1, 0x1, 0x1, 0x1), _0x5525ce['BLACK'] = new _0x5525ce(0x0, 0x0, 0x0, 0x1);
    class _0x3e5f9a {
    }
    class _0x37d063 {
    }
    class _0x28101b {
        static ['__init__']() {
        }
        static ['_drawTrave' + 'rsalCullin' + 'gBound'](_0x220273, _0x202ebe) {
            var _0x182c5d = _0x220273['elements'];
            for (var _0x4b59ac = 0x0, _0x3ab6c5 = _0x220273['length']; _0x4b59ac < _0x3ab6c5; _0x4b59ac++) {
                var _0x8ca38e = _0x28101b['_tempColor' + '0'];
                _0x8ca38e['r'] = 0x0, _0x8ca38e['g'] = 0x1, _0x8ca38e['b'] = 0x0, _0x8ca38e['a'] = 0x1, _0x47bed9['_drawBound'](_0x202ebe, _0x182c5d[_0x4b59ac]['bounds']['_getBoundB' + 'ox'](), _0x8ca38e);
            }
        }
        static ['_traversal' + 'Culling'](_0x44f741, _0xec468c, _0x138966, _0x1e3f29, _0x719027, _0x29c2ad, _0x54429c) {
            var _0x457c29 = _0x1e3f29['elements'], _0x40af41 = _0x44f741['boundFrust' + 'um'], _0x3bd718 = _0x44f741['position'], _0x5bb500 = _0x44f741['cullingMas' + 'k'], _0x2bb5b7 = _0x442335['Stat']['loopCount'];
            for (var _0xd2cdc3 = 0x0, _0x5571cb = _0x1e3f29['length']; _0xd2cdc3 < _0x5571cb; _0xd2cdc3++) {
                var _0x352b44 = _0x457c29[_0xd2cdc3], _0xf81361;
                if (_0x54429c)
                    _0xf81361 = _0x352b44['_castShado' + 'w'] && _0x352b44['_enable'];
                else
                    _0xf81361 = (Math['pow'](0x2, _0x352b44['_owner']['_layer']) & _0x5bb500) != 0x0 && _0x352b44['_enable'];
                if (_0xf81361) {
                    _0x442335['Stat']['frustumCul' + 'ling']++;
                    if (!_0x44f741['useOcclusi' + 'onCulling'] || _0x352b44['_needRende' + 'r'](_0x40af41, _0x138966)) {
                        _0x352b44['_renderMar' + 'k'] = _0x2bb5b7, _0x352b44['_distanceF' + 'orSort'] = _0x352206['distance'](_0x352b44['bounds']['getCenter'](), _0x3bd718);
                        var _0x27bb21 = _0x352b44['_renderEle' + 'ments'];
                        for (var _0x2fe680 = 0x0, _0x43966 = _0x27bb21['length']; _0x2fe680 < _0x43966; _0x2fe680++)
                            _0x27bb21[_0x2fe680]['_update'](_0xec468c, _0x138966, _0x719027, _0x29c2ad);
                    }
                }
            }
        }
        static ['renderObje' + 'ctCulling'](_0x483238, _0x34625b, _0x16ef01, _0x56aae3, _0x194ec1, _0x3804cf) {
            var _0x2da344 = _0x34625b['_opaqueQue' + 'ue'], _0x1643c7 = _0x34625b['_transpare' + 'ntQueue'], _0x594c7f = _0x34625b['_renders'];
            _0x34625b['_clearRend' + 'erQueue']();
            var _0x1c458d = _0x34625b['_octree'];
            _0x1c458d && (_0x1c458d['updateMoti' + 'onObjects'](), _0x1c458d['shrinkRoot' + 'IfPossible'](), _0x1c458d['getCollidi' + 'ngWithFrus' + 'tum'](_0x483238, _0x16ef01, _0x56aae3, _0x194ec1, _0x3804cf));
            _0x28101b['_traversal' + 'Culling'](_0x483238, _0x34625b, _0x16ef01, _0x594c7f, _0x56aae3, _0x194ec1, _0x3804cf);
            if (_0x28101b['debugFrust' + 'umCulling']) {
                var _0xc416ef = _0x34625b['_debugTool'];
                _0xc416ef['clear'](), _0x1c458d && (_0x1c458d['drawAllBou' + 'nds'](_0xc416ef), _0x1c458d['drawAllObj' + 'ects'](_0xc416ef)), _0x28101b['_drawTrave' + 'rsalCullin' + 'gBound'](_0x594c7f, _0xc416ef);
            }
            var _0x1f8876 = _0x2da344['elements']['length'];
            _0x1f8876 > 0x0 && _0x2da344['_quickSort'](0x0, _0x1f8876 - 0x1), _0x1f8876 = _0x1643c7['elements']['length'], _0x1f8876 > 0x0 && _0x1643c7['_quickSort'](0x0, _0x1f8876 - 0x1);
        }
        static ['cullingSha' + 'dow'](_0x3bb034, _0x35b7a4, _0x927fb1) {
            var _0x2146c4 = _0x35b7a4['_renders'];
            _0x35b7a4['_clearRend' + 'erQueue']();
            var _0x330b00 = _0x35b7a4['_opaqueQue' + 'ue'], _0x40ee07 = _0x3bb034['position'], _0x3d0b1c = _0x3bb034['cullPlaneC' + 'ount'], _0x114114 = _0x3bb034['cullPlanes'], _0xbe28fb = _0x3bb034['cullSphere'], _0x14c176 = _0x3bb034['direction'], _0x58b540 = _0x2146c4['elements'], _0x5e0107 = _0x442335['Stat']['loopCount'];
            for (var _0x488d9a = 0x0, _0x59f3b5 = _0x2146c4['length']; _0x488d9a < _0x59f3b5; _0x488d9a++) {
                var _0x36331f = _0x58b540[_0x488d9a], _0x369404 = _0x36331f['_castShado' + 'w'] && _0x36331f['_enable'];
                if (_0x369404) {
                    _0x442335['Stat']['frustumCul' + 'ling']++;
                    var _0x53e339 = _0x36331f['bounds'], _0x5b9df9 = _0x53e339['getMin'](), _0x3ac473 = _0x53e339['getMax'](), _0x30a5b6 = _0x5b9df9['x'], _0x405a26 = _0x5b9df9['y'], _0x1ecfc6 = _0x5b9df9['z'], _0x51aea7 = _0x3ac473['x'], _0x3e5d33 = _0x3ac473['y'], _0x3b7bd0 = _0x3ac473['z'], _0x31d103 = !![];
                    for (var _0x3df65e = 0x0; _0x3df65e < _0x3d0b1c; _0x3df65e++) {
                        var _0x2a4f84 = _0x114114[_0x3df65e], _0x1daa28 = _0x2a4f84['normal'];
                        if (_0x2a4f84['distance'] + _0x1daa28['x'] * (_0x1daa28['x'] < 0x0 ? _0x30a5b6 : _0x51aea7) + _0x1daa28['y'] * (_0x1daa28['y'] < 0x0 ? _0x405a26 : _0x3e5d33) + _0x1daa28['z'] * (_0x1daa28['z'] < 0x0 ? _0x1ecfc6 : _0x3b7bd0) < 0x0) {
                            _0x31d103 = ![];
                            break;
                        }
                    }
                    if (_0x31d103) {
                        _0x36331f['_renderMar' + 'k'] = _0x5e0107, _0x36331f['_distanceF' + 'orSort'] = _0x352206['distance'](_0x53e339['getCenter'](), _0x40ee07);
                        var _0x406e6f = _0x36331f['_renderEle' + 'ments'];
                        for (var _0x3df65e = 0x0, _0x3632b2 = _0x406e6f['length']; _0x3df65e < _0x3632b2; _0x3df65e++)
                            _0x406e6f[_0x3df65e]['_update'](_0x35b7a4, _0x927fb1, null, null);
                    }
                }
            }
            return _0x330b00['elements']['length'] > 0x0 ? !![] : ![];
        }
        static ['cullingSpo' + 'tShadow'](_0x33be82, _0x1fae38, _0x62c597) {
            var _0x1e5636 = _0x1fae38['_renders'];
            _0x1fae38['_clearRend' + 'erQueue']();
            var _0x485ac3 = _0x1fae38['_opaqueQue' + 'ue'], _0x5eac38 = _0x1e5636['elements'], _0x4d608d = _0x442335['Stat']['loopCount'];
            for (var _0x3d6248 = 0x0, _0x36266c = _0x1e5636['length']; _0x3d6248 < _0x36266c; _0x3d6248++) {
                var _0x3a71cb = _0x5eac38[_0x3d6248], _0x5deaf5 = _0x3a71cb['_castShado' + 'w'] && _0x3a71cb['_enable'];
                if (_0x5deaf5) {
                    if (_0x3a71cb['_needRende' + 'r'](_0x33be82['boundFrust' + 'um'], _0x62c597)) {
                        var _0x57afb5 = _0x3a71cb['bounds'];
                        _0x3a71cb['_renderMar' + 'k'] = _0x4d608d, _0x3a71cb['_distanceF' + 'orSort'] = _0x352206['distance'](_0x57afb5['getCenter'](), _0x33be82['position']);
                        var _0x2dac43 = _0x3a71cb['_renderEle' + 'ments'];
                        for (var _0x1e5580 = 0x0, _0x4b71cf = _0x2dac43['length']; _0x1e5580 < _0x4b71cf; _0x1e5580++)
                            _0x2dac43[_0x1e5580]['_update'](_0x1fae38, _0x62c597, null, null);
                    }
                }
            }
            return _0x485ac3['elements']['length'] > 0x0 ? !![] : ![];
        }
        static ['renderObje' + 'ctCullingN' + 'ative'](_0x1b0ce7, _0x2c7577, _0x4f3ba5, _0x12f3cf, _0x1f5110, _0x6bc52f) {
            var _0x1466e8, _0x2e0c30, _0x2620f7, _0x445681 = _0x2c7577['_opaqueQue' + 'ue'], _0x10a64f = _0x2c7577['_transpare' + 'ntQueue'];
            _0x2c7577['_clearRend' + 'erQueue']();
            var _0x3fcad7 = _0x12f3cf['length'], _0x1db1fa = _0x12f3cf['elements'];
            for (_0x1466e8 = 0x0; _0x1466e8 < _0x3fcad7; _0x1466e8++) {
                _0x1db1fa[_0x1466e8]['bounds'], _0x1db1fa[_0x1466e8]['_updateFor' + 'Native'] && _0x1db1fa[_0x1466e8]['_updateFor' + 'Native'](_0x4f3ba5);
            }
            var _0x3020fc = _0x1b0ce7['boundFrust' + 'um'];
            _0x28101b['cullingNat' + 'ive'](_0x1b0ce7['_boundFrus' + 'tumBuffer'], _0x28101b['_cullingBu' + 'ffer'], _0x2c7577['_cullingBu' + 'fferIndice' + 's'], _0x3fcad7, _0x2c7577['_cullingBu' + 'fferResult']);
            var _0x1b2850 = _0x442335['Stat']['loopCount'], _0x33ab40 = _0x4f3ba5['camera']['_transform']['position'];
            for (_0x1466e8 = 0x0; _0x1466e8 < _0x3fcad7; _0x1466e8++) {
                var _0x313258 = _0x1db1fa[_0x1466e8];
                if (!_0x1b0ce7['useOcclusi' + 'onCulling'] || _0x1b0ce7['_isLayerVi' + 'sible'](_0x313258['_owner']['_layer']) && _0x313258['_enable'] && _0x2c7577['_cullingBu' + 'fferResult'][_0x1466e8]) {
                    _0x313258['_renderMar' + 'k'] = _0x1b2850, _0x313258['_distanceF' + 'orSort'] = _0x352206['distance'](_0x313258['bounds']['getCenter'](), _0x33ab40);
                    var _0x39f8a1 = _0x313258['_renderEle' + 'ments'];
                    for (_0x2e0c30 = 0x0, _0x2620f7 = _0x39f8a1['length']; _0x2e0c30 < _0x2620f7; _0x2e0c30++) {
                        var _0x490319 = _0x39f8a1[_0x2e0c30];
                        _0x490319['_update'](_0x2c7577, _0x4f3ba5, _0x1f5110, _0x6bc52f);
                    }
                }
            }
            var _0x5d4689 = _0x445681['elements']['length'];
            _0x5d4689 > 0x0 && _0x445681['_quickSort'](0x0, _0x5d4689 - 0x1), _0x5d4689 = _0x10a64f['elements']['length'], _0x5d4689 > 0x0 && _0x10a64f['_quickSort'](0x0, _0x5d4689 - 0x1);
        }
        static ['cullingNat' + 'ive'](_0x2e1382, _0x3fcbcf, _0x8a9c15, _0x11ac2e, _0xa2dabf) {
            return _0x442335['LayaGL']['instance']['culling'](_0x2e1382, _0x3fcbcf, _0x8a9c15, _0x11ac2e, _0xa2dabf);
        }
    }
    _0x28101b['_tempColor' + '0'] = new _0x5525ce(), _0x28101b['_tempVecto' + 'r0'] = new _0x352206(), _0x28101b['_cameraCul' + 'lInfo'] = new _0x3e5f9a(), _0x28101b['_shadowCul' + 'lInfo'] = new _0x37d063(), _0x28101b['debugFrust' + 'umCulling'] = ![];
    class _0x1a99bf {
        constructor() {
            this['_coefficie' + 'nts'] = new Float32Array(0x1b);
        }
        ['getCoeffic' + 'ient'](_0x327baf, _0x2fb246) {
            return this['_coefficie' + 'nts'][_0x327baf * 0x9 + _0x2fb246];
        }
        ['setCoeffic' + 'ient'](_0x17d3ea, _0x42c1cf, _0x3ed596) {
            this['_coefficie' + 'nts'][_0x17d3ea * 0x9 + _0x42c1cf] = _0x3ed596;
        }
        ['setCoeffic' + 'ients'](_0x2bdf0b, _0x25d25e, _0x3d348c, _0x49e9b2, _0x3b3173, _0x4a536b, _0x286c66, _0x1b55f5, _0x674886, _0x3b3586) {
            var _0x23a23a = _0x2bdf0b * 0x9;
            this['_coefficie' + 'nts'][_0x23a23a] = _0x25d25e, this['_coefficie' + 'nts'][++_0x23a23a] = _0x3d348c, this['_coefficie' + 'nts'][++_0x23a23a] = _0x49e9b2, this['_coefficie' + 'nts'][++_0x23a23a] = _0x3b3173, this['_coefficie' + 'nts'][++_0x23a23a] = _0x4a536b, this['_coefficie' + 'nts'][++_0x23a23a] = _0x286c66, this['_coefficie' + 'nts'][++_0x23a23a] = _0x1b55f5, this['_coefficie' + 'nts'][++_0x23a23a] = _0x674886, this['_coefficie' + 'nts'][++_0x23a23a] = _0x3b3586;
        }
        ['cloneTo'](_0x2b292a) {
            if (this === _0x2b292a)
                return;
            var _0x3db02b = this['_coefficie' + 'nts'], _0x1a015f = _0x2b292a['_coefficie' + 'nts'];
            for (var _0x53744d = 0x0; _0x53744d < 0x1b; _0x53744d++)
                _0x1a015f[_0x53744d] = _0x3db02b[_0x53744d];
        }
    }
    _0x1a99bf['_default'] = new _0x1a99bf();
    class _0x1a438e {
        constructor() {
            this['_pressedSp' + 'rite'] = null, this['_pressedLo' + 'opCount'] = -0x1, this['sprite'] = null, this['mousePosit' + 'ionX'] = 0x0, this['mousePosit' + 'ionY'] = 0x0;
        }
    }
    class _0x17641e {
        constructor() {
            this['_indexInLi' + 'st'] = -0x1, this['_identifie' + 'r'] = -0x1, this['_position'] = new _0x378045();
        }
        get ['identifier']() {
            return this['_identifie' + 'r'];
        }
        get ['position']() {
            return this['_position'];
        }
        ['_getIndexI' + 'nList']() {
            return this['_indexInLi' + 'st'];
        }
        ['_setIndexI' + 'nList'](_0x1ec7aa) {
            this['_indexInLi' + 'st'] = _0x1ec7aa;
        }
    }
    class _0x405d9a {
        constructor() {
            this['_eventList'] = [], this['_mouseTouc' + 'h'] = new _0x1a438e(), this['_touchPool'] = [], this['_touches'] = new _0x53809e(), this['_multiTouc' + 'hEnabled'] = !![], this['_pushEvent' + 'List'] = (_0x371d1c => {
                _0x371d1c['cancelable'] && _0x371d1c['preventDef' + 'ault'](), this['_eventList']['push'](_0x371d1c);
            })['bind'](this);
        }
        ['__init__'](_0x2a2b8d, _0x17b8d7) {
            this['_scene'] = _0x17b8d7, _0x2a2b8d['oncontextm' + 'enu'] = function (_0x551e4c) {
                return ![];
            };
        }
        ['_onCanvasE' + 'vent'](_0x5860c9) {
            _0x5860c9['addEventLi' + 'stener']('mousedown', this['_pushEvent' + 'List']), _0x5860c9['addEventLi' + 'stener']('mouseup', this['_pushEvent' + 'List'], !![]), _0x5860c9['addEventLi' + 'stener']('mousemove', this['_pushEvent' + 'List'], !![]), _0x5860c9['addEventLi' + 'stener']('touchstart', this['_pushEvent' + 'List']), _0x5860c9['addEventLi' + 'stener']('touchend', this['_pushEvent' + 'List'], !![]), _0x5860c9['addEventLi' + 'stener']('touchmove', this['_pushEvent' + 'List'], !![]), _0x5860c9['addEventLi' + 'stener']('touchcance' + 'l', this['_pushEvent' + 'List'], !![]);
        }
        ['_offCanvas' + 'Event'](_0xf971b7) {
            _0xf971b7['removeEven' + 'tListener']('mousedown', this['_pushEvent' + 'List']), _0xf971b7['removeEven' + 'tListener']('mouseup', this['_pushEvent' + 'List'], !![]), _0xf971b7['removeEven' + 'tListener']('mousemove', this['_pushEvent' + 'List'], !![]), _0xf971b7['removeEven' + 'tListener']('touchstart', this['_pushEvent' + 'List']), _0xf971b7['removeEven' + 'tListener']('touchend', this['_pushEvent' + 'List'], !![]), _0xf971b7['removeEven' + 'tListener']('touchmove', this['_pushEvent' + 'List'], !![]), _0xf971b7['removeEven' + 'tListener']('touchcance' + 'l', this['_pushEvent' + 'List'], !![]), this['_eventList']['length'] = 0x0, this['_touches']['clear']();
        }
        ['touchCount']() {
            return this['_touches']['length'];
        }
        get ['multiTouch' + 'Enabled']() {
            return this['_multiTouc' + 'hEnabled'];
        }
        set ['multiTouch' + 'Enabled'](_0x5c7bf5) {
            this['_multiTouc' + 'hEnabled'] = _0x5c7bf5;
        }
        ['_getTouch'](_0x34947f, _0x522bad) {
            var _0x21449e = this['_touchPool'][_0x34947f];
            if (_0x522bad == 0x0 && _0x21449e && _0x21449e['_getIndexI' + 'nList']() != -0x1)
                return null;
            if (_0x522bad == 0x1 && _0x21449e && _0x21449e['_getIndexI' + 'nList']() == -0x1)
                return null;
            return !_0x21449e && (_0x21449e = new _0x17641e(), this['_touchPool'][_0x34947f] = _0x21449e, _0x21449e['_identifie' + 'r'] = _0x34947f), _0x21449e;
        }
        ['_mouseTouc' + 'hDown']() {
            var _0x39ccad = this['_mouseTouc' + 'h'], _0x4e810e = _0x39ccad['sprite'];
            _0x39ccad['_pressedSp' + 'rite'] = _0x4e810e, _0x39ccad['_pressedLo' + 'opCount'] = _0x442335['Stat']['loopCount'];
            if (_0x4e810e) {
                var _0x405e87 = _0x4e810e['_scripts'];
                if (_0x405e87) {
                    for (var _0x194b98 = 0x0, _0xa97f9d = _0x405e87['length']; _0x194b98 < _0xa97f9d; _0x194b98++)
                        _0x405e87[_0x194b98]['onMouseDow' + 'n']();
                }
            }
        }
        ['_mouseTouc' + 'hUp']() {
            var _0x28a18a, _0x409c6f, _0x407665 = this['_mouseTouc' + 'h'], _0x37cbc5 = _0x407665['_pressedSp' + 'rite'];
            _0x407665['_pressedSp' + 'rite'] = null, _0x407665['_pressedLo' + 'opCount'] = -0x1;
            var _0x6ab084 = _0x407665['sprite'];
            if (_0x6ab084) {
                if (_0x6ab084 === _0x37cbc5) {
                    var _0x2db875 = _0x6ab084['_scripts'];
                    if (_0x2db875) {
                        for (_0x28a18a = 0x0, _0x409c6f = _0x2db875['length']; _0x28a18a < _0x409c6f; _0x28a18a++)
                            _0x2db875[_0x28a18a]['onMouseCli' + 'ck']();
                    }
                }
            }
            if (_0x37cbc5) {
                var _0xc70501 = _0x37cbc5['_scripts'];
                if (_0xc70501) {
                    for (_0x28a18a = 0x0, _0x409c6f = _0xc70501['length']; _0x28a18a < _0x409c6f; _0x28a18a++)
                        _0xc70501[_0x28a18a]['onMouseUp']();
                }
            }
        }
        ['_mouseTouc' + 'hRayCast'](_0x5979a6) {
            var _0x596c21 = _0x405d9a['_tempHitRe' + 'sult0'], _0x3b485c = _0x405d9a['_tempVecto' + 'r20'], _0x299fd3 = _0x405d9a['_tempRay0'];
            _0x596c21['succeeded'] = ![];
            var _0x5d2b25 = this['_mouseTouc' + 'h']['mousePosit' + 'ionX'], _0x456a5c = this['_mouseTouc' + 'h']['mousePosit' + 'ionY'];
            _0x3b485c['x'] = _0x5d2b25, _0x3b485c['y'] = _0x456a5c;
            for (var _0x32c11b = _0x5979a6['length'] - 0x1; _0x32c11b >= 0x0; _0x32c11b--) {
                var _0x1af976 = _0x5979a6[_0x32c11b], _0x50424d = _0x1af976['viewport'];
                if (_0x3b485c['x'] >= _0x50424d['x'] && _0x3b485c['y'] >= _0x50424d['y'] && _0x3b485c['x'] <= _0x50424d['width'] && _0x3b485c['y'] <= _0x50424d['height']) {
                    _0x1af976['viewportPo' + 'intToRay'](_0x3b485c, _0x299fd3);
                    var _0x8a27eb = this['_scene']['_physicsSi' + 'mulation']['rayCast'](_0x299fd3, _0x596c21);
                    if (_0x8a27eb || (_0x1af976['clearFlag'] === _0x1f405c['CameraClea' + 'rFlags']['SolidColor'] || _0x1af976['clearFlag'] === _0x1f405c['CameraClea' + 'rFlags']['Sky']))
                        break;
                }
            }
            var _0x1beab5 = this['_mouseTouc' + 'h'], _0x1dc835 = _0x1beab5['sprite'];
            if (_0x596c21['succeeded']) {
                var _0x34b7b0 = _0x596c21['collider']['owner'];
                _0x1beab5['sprite'] = _0x34b7b0;
                var _0x4f2fc4 = _0x34b7b0['_scripts'];
                if (_0x1dc835 !== _0x34b7b0) {
                    if (_0x4f2fc4) {
                        for (var _0x2d54ca = 0x0, _0x5ca412 = _0x4f2fc4['length']; _0x2d54ca < _0x5ca412; _0x2d54ca++)
                            _0x4f2fc4[_0x2d54ca]['onMouseEnt' + 'er']();
                    }
                }
            } else
                _0x1beab5['sprite'] = null;
            if (_0x1dc835 && _0x1dc835 !== _0x34b7b0) {
                var _0x5dff16 = _0x1dc835['_scripts'];
                if (_0x5dff16) {
                    for (_0x2d54ca = 0x0, _0x5ca412 = _0x5dff16['length']; _0x2d54ca < _0x5ca412; _0x2d54ca++)
                        _0x5dff16[_0x2d54ca]['onMouseOut']();
                }
            }
        }
        ['_changeTou' + 'ches'](_0x51ff91, _0x341408) {
            var _0xdd1663 = 0x0, _0x152b77 = 0x0, _0x27c27f = this['_touches']['length'];
            for (var _0x3f68d4 = 0x0, _0x8bc56a = _0x51ff91['length']; _0x3f68d4 < _0x8bc56a; _0x3f68d4++) {
                var _0x55dbec = _0x51ff91[_0x3f68d4], _0x14f3c5 = _0x55dbec['identifier'];
                if (!this['_multiTouc' + 'hEnabled'] && _0x14f3c5 !== 0x0)
                    continue;
                var _0x74f3bd = this['_getTouch'](_0x14f3c5, _0x341408), _0x2ef25a = this['_touchPool'][_0x14f3c5]['_position'], _0x3ca80f = _0x405d9a['_tempPoint'];
                _0x3ca80f['setTo'](_0x55dbec['pageX'], _0x55dbec['pageY']), _0x442335['ILaya']['stage']['_canvasTra' + 'nsform']['invertTran' + 'sformPoint'](_0x3ca80f);
                var _0x2bd7c0 = _0x3ca80f['x'], _0x11bb7b = _0x3ca80f['y'];
                switch (_0x341408) {
                case 0x0:
                    if (!!_0x74f3bd)
                        this['_touches']['add'](_0x74f3bd);
                    _0xdd1663 += _0x2bd7c0, _0x152b77 += _0x11bb7b;
                    break;
                case 0x1:
                    if (!!_0x74f3bd)
                        this['_touches']['remove'](_0x74f3bd);
                    _0xdd1663 -= _0x2bd7c0, _0x152b77 -= _0x11bb7b;
                    break;
                case 0x2:
                    _0xdd1663 = _0x2bd7c0 - _0x2ef25a['x'], _0x152b77 = _0x11bb7b - _0x2ef25a['y'];
                    break;
                }
                _0x2ef25a['x'] = _0x2bd7c0, _0x2ef25a['y'] = _0x11bb7b;
            }
            var _0x27641e = this['_touches']['length'];
            _0x27641e === 0x0 ? (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = 0x0, this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = 0x0) : (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] * _0x27c27f + _0xdd1663) / _0x27641e, this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = (this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] * _0x27c27f + _0x152b77) / _0x27641e);
        }
        ['_update']() {
            var _0x5c1582 = _0x3c230b['_enablePhy' + 'sics'] && !_0x101776['disableSim' + 'ulation'], _0x459743, _0x5d2399, _0x1159ea, _0x39eb46;
            _0x5d2399 = this['_eventList']['length'];
            var _0x451e2c = this['_scene']['_cameraPoo' + 'l'];
            if (_0x5d2399 > 0x0) {
                var _0x1ab8db = ![];
                for (_0x459743 = 0x0; _0x459743 < _0x5d2399; _0x459743++) {
                    var _0x6fa009 = this['_eventList'][_0x459743];
                    switch (_0x6fa009['type']) {
                    case 'mousedown':
                        _0x5c1582 && this['_mouseTouc' + 'hDown']();
                        break;
                    case 'mouseup':
                        _0x5c1582 && this['_mouseTouc' + 'hUp']();
                        break;
                    case 'mousemove':
                        var _0x4c5df9 = _0x405d9a['_tempPoint'];
                        _0x4c5df9['setTo'](_0x6fa009['pageX'], _0x6fa009['pageY']), _0x442335['ILaya']['stage']['_canvasTra' + 'nsform']['invertTran' + 'sformPoint'](_0x4c5df9), this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = _0x4c5df9['x'], this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = _0x4c5df9['y'], _0x5c1582 && (_0x1ab8db = !![]);
                        break;
                    case 'touchstart':
                        var _0x3559df = this['_touches']['length'];
                        this['_changeTou' + 'ches'](_0x6fa009['changedTou' + 'ches'], 0x0);
                        _0x5c1582 && (!_0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine'] && this['_mouseTouc' + 'hRayCast'](_0x451e2c), _0x3559df === 0x0 && this['_mouseTouc' + 'hDown']());
                        break;
                    case 'touchend':
                    case 'touchcance' + 'l':
                        this['_changeTou' + 'ches'](_0x6fa009['changedTou' + 'ches'], 0x1), _0x5c1582 && this['_touches']['length'] === 0x0 && this['_mouseTouc' + 'hUp']();
                        break;
                    case 'touchmove':
                        this['_changeTou' + 'ches'](_0x6fa009['changedTou' + 'ches'], 0x2), _0x5c1582 && (_0x1ab8db = !![]);
                        break;
                    default:
                        throw 'Input3D:un' + 'konwn\x20even' + 't\x20type.';
                    }
                }
                _0x1ab8db && !_0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine'] && this['_mouseTouc' + 'hRayCast'](_0x451e2c), this['_eventList']['length'] = 0x0;
            }
            if (_0x5c1582) {
                var _0x3b703f = this['_mouseTouc' + 'h'], _0x4ba855 = _0x3b703f['_pressedSp' + 'rite'];
                if (_0x4ba855 && _0x442335['Stat']['loopCount'] > _0x3b703f['_pressedLo' + 'opCount']) {
                    var _0x6ff815 = _0x4ba855['_scripts'];
                    if (_0x6ff815) {
                        for (_0x1159ea = 0x0, _0x39eb46 = _0x6ff815['length']; _0x1159ea < _0x39eb46; _0x1159ea++)
                            _0x6ff815[_0x1159ea]['onMouseDra' + 'g']();
                    }
                }
                var _0x172d84 = _0x3b703f['sprite'];
                if (_0x172d84) {
                    var _0x56ca1a = _0x172d84['_scripts'];
                    if (_0x56ca1a) {
                        for (_0x1159ea = 0x0, _0x39eb46 = _0x56ca1a['length']; _0x1159ea < _0x39eb46; _0x1159ea++)
                            _0x56ca1a[_0x1159ea]['onMouseOve' + 'r']();
                    }
                }
            }
        }
        ['getTouch'](_0x300168) {
            return _0x300168 < this['_touches']['length'] ? this['_touches']['elements'][_0x300168] : null;
        }
    }
    _0x405d9a['_tempPoint'] = new _0x442335['Point'](), _0x405d9a['_tempVecto' + 'r20'] = new _0x378045(), _0x405d9a['_tempRay0'] = new _0x24d745(new _0x352206(), new _0x352206()), _0x405d9a['_tempHitRe' + 'sult0'] = new _0x20f43d();
    class _0x4c00fb {
        constructor() {
            this['flags'] = 0x0, this['maxSubStep' + 's'] = 0x1, this['fixedTimeS' + 'tep'] = 0x1 / 0x3c;
        }
    }
    class _0x4acb3c {
        constructor(_0x145ecb, _0x4ba3ed) {
            this['_position'] = _0x145ecb, this['_textureCo' + 'ordinate0'] = _0x4ba3ed;
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x4acb3c['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x4acb3c['_vertexDec' + 'laration'] = new _0x19d0a5(0x14, [
                new _0x549a90(0x0, _0x5cc56b['Vector3'], _0x2a7b2f['MESH_POSIT' + 'ION0']),
                new _0x549a90(0xc, _0x5cc56b['Vector2'], _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'])
            ]);
        }
        get ['position']() {
            return this['_position'];
        }
        get ['textureCoo' + 'rdinate0']() {
            return this['_textureCo' + 'ordinate0'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x4acb3c['_vertexDec' + 'laration'];
        }
    }
    class _0x21eee2 extends _0x422ea2 {
        constructor(_0x462db4 = 0x30, _0x4b40d2 = 0x30) {
            super();
            var _0x375f8f = _0x442335['LayaGL']['instance'];
            this['_stacks'] = _0x462db4, this['_slices'] = _0x4b40d2;
            var _0x7a865 = _0x4acb3c['vertexDecl' + 'aration'], _0x16ab86 = _0x7a865['vertexStri' + 'de'] / 0x4, _0x2724cc = (this['_stacks'] + 0x1) * (this['_slices'] + 0x1), _0x530876 = 0x3 * this['_stacks'] * (this['_slices'] + 0x1) * 0x2, _0x6ce9d3 = new Float32Array(_0x2724cc * _0x16ab86), _0x3812a6 = new Uint16Array(_0x530876), _0x55f07d = Math['PI'] / this['_stacks'], _0x4102d3 = Math['PI'] * 0x2 / this['_slices'], _0x1d65d3 = 0x0, _0x4d527e = 0x0, _0x10f6fc = 0x0;
            for (var _0x3eaacb = 0x0; _0x3eaacb < this['_stacks'] + 0x1; _0x3eaacb++) {
                var _0x2ad827 = Math['sin'](_0x3eaacb * _0x55f07d), _0x409d97 = Math['cos'](_0x3eaacb * _0x55f07d);
                for (var _0xb3bdc = 0x0; _0xb3bdc < this['_slices'] + 0x1; _0xb3bdc++) {
                    var _0x367431 = _0x2ad827 * Math['sin'](_0xb3bdc * _0x4102d3), _0x19c6e0 = _0x2ad827 * Math['cos'](_0xb3bdc * _0x4102d3);
                    _0x6ce9d3[_0x4d527e + 0x0] = _0x367431 * _0x21eee2['_radius'], _0x6ce9d3[_0x4d527e + 0x1] = _0x409d97 * _0x21eee2['_radius'], _0x6ce9d3[_0x4d527e + 0x2] = _0x19c6e0 * _0x21eee2['_radius'], _0x6ce9d3[_0x4d527e + 0x3] = -(_0xb3bdc / this['_slices']) + 0.75, _0x6ce9d3[_0x4d527e + 0x4] = _0x3eaacb / this['_stacks'], _0x4d527e += _0x16ab86, _0x3eaacb != this['_stacks'] - 0x1 && (_0x3812a6[_0x10f6fc++] = _0x1d65d3 + 0x1, _0x3812a6[_0x10f6fc++] = _0x1d65d3, _0x3812a6[_0x10f6fc++] = _0x1d65d3 + (this['_slices'] + 0x1), _0x3812a6[_0x10f6fc++] = _0x1d65d3 + (this['_slices'] + 0x1), _0x3812a6[_0x10f6fc++] = _0x1d65d3, _0x3812a6[_0x10f6fc++] = _0x1d65d3 + this['_slices'], _0x1d65d3++);
                }
            }
            this['_vertexBuf' + 'fer'] = new _0x251441(_0x6ce9d3['length'] * 0x4, _0x375f8f['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x7a865, this['_indexBuff' + 'er'] = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], _0x3812a6['length'], _0x375f8f['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['setData'](_0x6ce9d3['buffer']), this['_indexBuff' + 'er']['setData'](_0x3812a6);
            var _0xc20d9f = new _0x2f0542();
            _0xc20d9f['bind'](), _0xc20d9f['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0xc20d9f['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0xc20d9f['unBind'](), this['_bufferSta' + 'te'] = _0xc20d9f;
        }
        static ['__init__']() {
            _0x21eee2['instance'] = new _0x21eee2();
        }
        get ['stacks']() {
            return this['_stacks'];
        }
        get ['slices']() {
            return this['_slices'];
        }
        ['_render'](_0x3fec22) {
            var _0x3cd9c5 = _0x442335['LayaGL']['instance'], _0x3aac61 = this['_indexBuff' + 'er']['indexCount'];
            _0x3cd9c5['drawElemen' + 'ts'](_0x3cd9c5['TRIANGLES'], _0x3aac61, _0x3cd9c5['UNSIGNED_S' + 'HORT'], 0x0), _0x442335['Stat']['trianglesF' + 'aces'] += _0x3aac61 / 0x3, _0x442335['Stat']['renderBatc' + 'hes']++;
        }
    }
    _0x21eee2['_radius'] = 0x1, function (_0x55aef4) {
        _0x55aef4[_0x55aef4['PositiveX'] = 0x0] = 'PositiveX', _0x55aef4[_0x55aef4['NegativeX'] = 0x1] = 'NegativeX', _0x55aef4[_0x55aef4['PositiveY'] = 0x2] = 'PositiveY', _0x55aef4[_0x55aef4['NegativeY'] = 0x3] = 'NegativeY', _0x55aef4[_0x55aef4['PositiveZ'] = 0x4] = 'PositiveZ', _0x55aef4[_0x55aef4['NegativeZ'] = 0x5] = 'NegativeZ';
    }(_0x1f405c['TextureCub' + 'eFace'] || (_0x1f405c['TextureCub' + 'eFace'] = {}));
    class _0x4b21e5 extends _0x442335['BaseTextur' + 'e'] {
        constructor(_0x4c61e4, _0x4c6278 = _0x442335['TextureFor' + 'mat']['R8G8B8'], _0x1964ca = ![]) {
            super(_0x4c6278, _0x1964ca), this['_glTexture' + 'Type'] = _0x442335['LayaGL']['instance']['TEXTURE_CU' + 'BE_MAP'], this['_width'] = _0x4c61e4, this['_height'] = _0x4c61e4;
            var _0x210a66 = _0x442335['LayaGL']['instance'];
            this['_setWarpMo' + 'de'](_0x210a66['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x210a66['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_setAnisot' + 'ropy'](this['_anisoLeve' + 'l']);
            if (this['_mipmap']) {
                this['_mipmapCou' + 'nt'] = Math['ceil'](Math['log2'](_0x4c61e4)) + 0x1;
                for (var _0x191ef1 = 0x0; _0x191ef1 < this['_mipmapCou' + 'nt']; _0x191ef1++)
                    this['_setPixels']([], _0x191ef1, Math['max'](_0x4c61e4 >> _0x191ef1, 0x1), Math['max'](_0x4c61e4 >> _0x191ef1, 0x1));
                this['_setGPUMem' + 'ory'](_0x4c61e4 * _0x4c61e4 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6);
            } else
                this['_mipmapCou' + 'nt'] = 0x1, this['_setGPUMem' + 'ory'](_0x4c61e4 * _0x4c61e4 * 0x4 * 0x6);
        }
        static get ['blackTextu' + 're']() {
            return _0x4b21e5['_blackText' + 'ure'];
        }
        static get ['grayTextur' + 'e']() {
            return _0x4b21e5['_grayTextu' + 're'];
        }
        static ['__init__']() {
            var _0x2abd8f = new _0x4b21e5(0x1, _0x442335['TextureFor' + 'mat']['R8G8B8'], ![]), _0x18ba26 = new _0x4b21e5(0x1, _0x442335['TextureFor' + 'mat']['R8G8B8'], ![]), _0x3dd5c7 = new Uint8Array(0x3);
            _0x3dd5c7[0x0] = 0x0, _0x3dd5c7[0x1] = 0x0, _0x3dd5c7[0x2] = 0x0, _0x2abd8f['setSixSide' + 'Pixels']([
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7
            ]), _0x2abd8f['lock'] = !![], (_0x3dd5c7[0x0] = 0x80, _0x3dd5c7[0x1] = 0x80, _0x3dd5c7[0x2] = 0x80), _0x18ba26['setSixSide' + 'Pixels']([
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7,
                _0x3dd5c7
            ]), _0x18ba26['lock'] = !![], _0x4b21e5['_grayTextu' + 're'] = _0x18ba26, _0x4b21e5['_blackText' + 'ure'] = _0x2abd8f;
        }
        static ['_parse'](_0x54c7ef, _0x1daeda = null, _0x546a02 = null) {
            var _0x158e64 = _0x546a02 ? new _0x4b21e5(0x0, _0x546a02[0x0], _0x546a02[0x1]) : new _0x4b21e5(0x0);
            return _0x158e64['setSixSide' + 'ImageSourc' + 'es'](_0x54c7ef), _0x158e64;
        }
        static ['_parseBin'](_0x499920, _0x260d74 = null, _0x336952 = null) {
            var _0x2a7c1b = _0x336952 ? new _0x4b21e5(0x0, _0x336952[0x0], _0x336952[0x1]) : new _0x4b21e5(0x0);
            return _0x2a7c1b['setSixSide' + 'ImageSourc' + 'es'](_0x499920), _0x2a7c1b;
        }
        static ['load'](_0x4c9027, _0x3cf18a) {
            var _0x5acb43 = _0x442335['LoaderMana' + 'ger']['createMap'][_0x442335['Utils']['getFilecom' + 'patibleExt' + 'ension'](_0x4c9027)] ? _0x442335['Utils']['getFilecom' + 'patibleExt' + 'ension'](_0x4c9027) : _0x442335['Utils']['getFileExt' + 'ension'](_0x4c9027), _0x5a147f = _0x442335['LoaderMana' + 'ger']['createMap'][_0x5acb43] ? _0x442335['LoaderMana' + 'ger']['createMap'][_0x5acb43][0x0] : null;
            _0x442335['ILaya']['loader']['create'](_0x4c9027, _0x3cf18a, null, _0x5a147f);
        }
        get ['defaulteTe' + 'xture']() {
            return _0x4b21e5['grayTextur' + 'e'];
        }
        ['_setPixels'](_0x545542, _0x466bbd, _0x4c233b, _0x517f0c) {
            var _0x2b9c4a = _0x442335['LayaGL']['instance'], _0x1b941e = this['_getGLForm' + 'at']();
            _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2b9c4a, this['_glTexture' + 'Type'], this['_glTexture']), this['format'] === _0x442335['TextureFor' + 'mat']['R8G8B8'] ? (_0x2b9c4a['pixelStore' + 'i'](_0x2b9c4a['UNPACK_ALI' + 'GNMENT'], 0x1), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x0]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x1]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x2]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x3]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x4]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x5]), _0x2b9c4a['pixelStore' + 'i'](_0x2b9c4a['UNPACK_ALI' + 'GNMENT'], 0x4)) : (_0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x0]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x1]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x2]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x3]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x4]), _0x2b9c4a['texImage2D'](_0x2b9c4a['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x466bbd, _0x1b941e, _0x4c233b, _0x517f0c, 0x0, _0x1b941e, _0x2b9c4a['UNSIGNED_B' + 'YTE'], _0x545542[0x5]));
        }
        ['setSixSide' + 'ImageSourc' + 'es'](_0x2ef254, _0x4367b3 = ![]) {
            var _0x29be31, _0x15a9b0;
            for (var _0x4c6532 = 0x0; _0x4c6532 < 0x6; _0x4c6532++) {
                var _0x142f41 = _0x2ef254[_0x4c6532];
                if (!_0x142f41) {
                    console['log']('TextureCub' + 'e:\x20image\x20S' + 'ource\x20can\x27' + 't\x20be\x20null.');
                    return;
                }
                var _0x1ec9ff = _0x142f41['width'], _0x40b8f1 = _0x142f41['height'];
                if (_0x4c6532 > 0x0) {
                    if (_0x29be31 !== _0x1ec9ff) {
                        console['log']('TextureCub' + 'e:\x20each\x20si' + 'de\x20image\x27s' + '\x20width\x20and' + '\x20height\x20mu' + 'st\x20same.');
                        return;
                    }
                }
                _0x29be31 = _0x1ec9ff, _0x15a9b0 = _0x40b8f1;
                if (_0x29be31 !== _0x15a9b0) {
                    console['log']('TextureCub' + 'e:\x20each\x20si' + 'de\x20image\x27s' + '\x20width\x20and' + '\x20height\x20mu' + 'st\x20same.');
                    return;
                }
            }
            this['_width'] = _0x29be31, this['_height'] = _0x15a9b0;
            var _0x3246c8 = _0x442335['LayaGL']['instance'];
            _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x3246c8, this['_glTexture' + 'Type'], this['_glTexture']);
            var _0x4318b1 = this['_getGLForm' + 'at']();
            if (!_0x442335['Render']['isConchApp'])
                _0x4367b3 && _0x3246c8['pixelStore' + 'i'](_0x3246c8['UNPACK_PRE' + 'MULTIPLY_A' + 'LPHA_WEBGL'], !![]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], 0x0, _0x4318b1, _0x4318b1, _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x0]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], 0x0, _0x4318b1, _0x4318b1, _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x1]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], 0x0, _0x4318b1, _0x4318b1, _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x2]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], 0x0, _0x4318b1, _0x4318b1, _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x3]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], 0x0, _0x4318b1, _0x4318b1, _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x4]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], 0x0, _0x4318b1, _0x4318b1, _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x5]), _0x4367b3 && _0x3246c8['pixelStore' + 'i'](_0x3246c8['UNPACK_PRE' + 'MULTIPLY_A' + 'LPHA_WEBGL'], ![]);
            else {
                if (_0x4367b3 == !![]) {
                    for (var _0x51a277 = 0x0; _0x51a277 < 0x6; _0x51a277++)
                        _0x2ef254[_0x51a277]['setPremult' + 'iplyAlpha'](_0x4367b3);
                }
                _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], 0x0, _0x3246c8['RGBA'], _0x3246c8['RGBA'], _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x0]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], 0x0, _0x3246c8['RGBA'], _0x3246c8['RGBA'], _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x1]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], 0x0, _0x3246c8['RGBA'], _0x3246c8['RGBA'], _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x2]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], 0x0, _0x3246c8['RGBA'], _0x3246c8['RGBA'], _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x3]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], 0x0, _0x3246c8['RGBA'], _0x3246c8['RGBA'], _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x4]), _0x3246c8['texImage2D'](_0x3246c8['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], 0x0, _0x3246c8['RGBA'], _0x3246c8['RGBA'], _0x3246c8['UNSIGNED_B' + 'YTE'], _0x2ef254[0x5]);
            }
            this['_mipmap'] && this['_isPot'](_0x29be31) && this['_isPot'](_0x15a9b0) ? (_0x3246c8['generateMi' + 'pmap'](this['_glTexture' + 'Type']), this['_setGPUMem' + 'ory'](_0x29be31 * _0x15a9b0 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this['_setGPUMem' + 'ory'](_0x29be31 * _0x15a9b0 * 0x4 * 0x6), this['_setWarpMo' + 'de'](_0x3246c8['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x3246c8['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_readyed'] = !![], this['_activeRes' + 'ource']();
        }
        ['setSixSide' + 'Pixels'](_0xbfdaa7, _0x8fcd63 = 0x0) {
            if (!_0xbfdaa7)
                throw new Error('TextureCub' + 'e:pixels\x20c' + 'an\x27t\x20be\x20nu' + 'll.');
            var _0x113d23 = Math['max'](this['_width'] >> _0x8fcd63, 0x1), _0x40cacb = Math['max'](this['_height'] >> _0x8fcd63, 0x1), _0x257618 = _0x113d23 * _0x40cacb * this['_getFormat' + 'ByteCount']();
            if (_0xbfdaa7[0x0]['length'] < _0x257618)
                throw 'TextureCub' + 'e:pixels\x20l' + 'ength\x20shou' + 'ld\x20at\x20leas' + 't\x20' + _0x257618 + '.';
            this['_setPixels'](_0xbfdaa7, _0x8fcd63, _0x113d23, _0x40cacb);
            if (_0x8fcd63 === 0x0) {
                var _0xe75556 = _0x442335['LayaGL']['instance'];
                this['_setWarpMo' + 'de'](_0xe75556['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0xe75556['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']);
            }
            this['_readyed'] = !![], this['_activeRes' + 'ource']();
        }
        ['setImageSo' + 'urce'](_0x1d4f27, _0x253d67, _0x5cd4ca = 0x0) {
            var _0x12549f = this['_width'], _0x114b2f = this['_height'];
            if (_0x253d67) {
                if (_0x12549f !== _0x253d67['width'] || _0x114b2f !== _0x253d67['height']) {
                    console['log']('TextureCub' + 'e:\x20imageSo' + 'urce\x27s\x20wid' + 'th\x20and\x20hei' + 'ght\x20must\x20s' + 'ame.');
                    return;
                }
            }
            var _0x1d9220 = _0x442335['LayaGL']['instance'];
            _0x442335['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x1d9220, this['_glTexture' + 'Type'], this['_glTexture']);
            var _0x1e7758 = this['_getGLForm' + 'at']();
            switch (_0x1d4f27) {
            case _0x1f405c['TextureCub' + 'eFace']['NegativeX']:
                _0x1d9220['texImage2D'](_0x1d9220['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x5cd4ca, _0x1e7758, _0x1e7758, _0x1d9220['UNSIGNED_B' + 'YTE'], _0x253d67);
                break;
            case _0x1f405c['TextureCub' + 'eFace']['PositiveX']:
                _0x1d9220['texImage2D'](_0x1d9220['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x5cd4ca, _0x1e7758, _0x1e7758, _0x1d9220['UNSIGNED_B' + 'YTE'], _0x253d67);
                break;
            case _0x1f405c['TextureCub' + 'eFace']['NegativeY']:
                _0x1d9220['texImage2D'](_0x1d9220['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x5cd4ca, _0x1e7758, _0x1e7758, _0x1d9220['UNSIGNED_B' + 'YTE'], _0x253d67);
                break;
            case _0x1f405c['TextureCub' + 'eFace']['PositiveY']:
                _0x1d9220['texImage2D'](_0x1d9220['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x5cd4ca, _0x1e7758, _0x1e7758, _0x1d9220['UNSIGNED_B' + 'YTE'], _0x253d67);
                break;
            case _0x1f405c['TextureCub' + 'eFace']['NegativeZ']:
                _0x1d9220['texImage2D'](_0x1d9220['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x5cd4ca, _0x1e7758, _0x1e7758, _0x1d9220['UNSIGNED_B' + 'YTE'], _0x253d67);
                break;
            case _0x1f405c['TextureCub' + 'eFace']['PositiveZ']:
                _0x1d9220['texImage2D'](_0x1d9220['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x5cd4ca, _0x1e7758, _0x1e7758, _0x1d9220['UNSIGNED_B' + 'YTE'], _0x253d67);
                break;
            }
            this['_mipmap'] && this['_isPot'](_0x12549f) && this['_isPot'](_0x114b2f) ? (_0x1d9220['generateMi' + 'pmap'](this['_glTexture' + 'Type']), this['_setGPUMem' + 'ory'](_0x12549f * _0x114b2f * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this['_setGPUMem' + 'ory'](_0x12549f * _0x114b2f * 0x4 * 0x6), this['_setWarpMo' + 'de'](_0x1d9220['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x1d9220['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_readyed'] = !![];
        }
    }
    _0x4b21e5['TEXTURECUB' + 'E'] = 'TEXTURECUB' + 'E', _0x4b21e5['TEXTURECUB' + 'EBIN'] = 'TEXTURECUB' + 'EBIN';
    class _0x1935cd {
        constructor() {
            this['_length'] = 0x0, this['_elements'] = [];
        }
        ['add'](_0x4cfbd4) {
            if (this['_length'] === this['_elements']['length'])
                this['_elements']['push'](_0x4cfbd4);
            else
                this['_elements'][this['_length']] = _0x4cfbd4;
            this['_length']++;
        }
        ['remove'](_0x4ebba8) {
            var _0x2e426d = this['_elements']['indexOf'](_0x4ebba8);
            this['_length']--;
            if (_0x2e426d !== this['_length']) {
                var _0x2190d6 = this['_elements'][this['_length']];
                this['_elements'][_0x2e426d] = _0x2190d6;
            }
        }
        ['shift']() {
            return this['_length']--, this['_elements']['shift']();
        }
        ['getBrighte' + 'stLight']() {
            var _0x4fa33d, _0x28956d = -0x1, _0x46863d = this['_elements'];
            for (var _0x5586bd = 0x0; _0x5586bd < this['_length']; _0x5586bd++) {
                var _0x1636c8 = _0x46863d[_0x5586bd]['_intensity'];
                _0x28956d < _0x1636c8 && (_0x28956d = _0x1636c8, _0x4fa33d = _0x5586bd);
            }
            return _0x4fa33d;
        }
        ['normalLigh' + 'tOrdering'](_0x98e36f) {
            var _0x1fc239 = this['_elements'], _0x274767 = this['_elements'][0x0];
            this['_elements'][0x0] = this['_elements'][_0x98e36f], this['_elements'][_0x98e36f] = _0x274767;
        }
    }
    class _0x1d8e03 extends _0x1935cd {
        ['remove'](_0x5f235d) {
            var _0x390d65 = this['_elements']['indexOf'](_0x5f235d);
            this['_elements']['splice'](_0x390d65, 0x1), this['_length']--;
        }
    }
    class _0x4ce9d0 extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('LineShader'), this['_shaderVal' + 'ues']['setVector'](_0x4ce9d0['COLOR'], new _0x18425e(0x1, 0x1, 0x1, 0x1));
        }
        static ['__initDefi' + 'ne__']() {
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4ce9d0['COLOR']);
        }
        set ['color'](_0x31ab9b) {
            this['_shaderVal' + 'ues']['setVector'](_0x4ce9d0['COLOR'], _0x31ab9b);
        }
        set ['depthWrite'](_0x368c13) {
            this['_shaderVal' + 'ues']['setBool'](_0x4ce9d0['DEPTH_WRIT' + 'E'], _0x368c13);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x4ce9d0['DEPTH_WRIT' + 'E']);
        }
        set ['cull'](_0x465956) {
            this['_shaderVal' + 'ues']['setInt'](_0x4ce9d0['CULL'], _0x465956);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4ce9d0['CULL']);
        }
        set ['blend'](_0x52e02a) {
            this['_shaderVal' + 'ues']['setInt'](_0x4ce9d0['BLEND'], _0x52e02a);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4ce9d0['BLEND']);
        }
        set ['blendSrc'](_0x4be53d) {
            this['_shaderVal' + 'ues']['setInt'](_0x4ce9d0['BLEND_SRC'], _0x4be53d);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4ce9d0['BLEND_SRC']);
        }
        set ['blendDst'](_0x371a02) {
            this['_shaderVal' + 'ues']['setInt'](_0x4ce9d0['BLEND_DST'], _0x371a02);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4ce9d0['BLEND_DST']);
        }
        set ['depthTest'](_0xad2888) {
            this['_shaderVal' + 'ues']['setInt'](_0x4ce9d0['DEPTH_TEST'], _0xad2888);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4ce9d0['DEPTH_TEST']);
        }
        ['clone']() {
            var _0x25b572 = new _0x4ce9d0();
            return this['cloneTo'](_0x25b572), _0x25b572;
        }
    }
    _0x4ce9d0['COLOR'] = _0x18824e['propertyNa' + 'meToID']('u_Color'), _0x4ce9d0['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x4ce9d0['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x4ce9d0['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x4ce9d0['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x4ce9d0['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x4ce9d0['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x2bd0ec {
        constructor(_0x3a28d6, _0x550847) {
            this['min'] = _0x3a28d6, this['max'] = _0x550847;
        }
        ['_rotateExt' + 'ents'](_0x3be092, _0x479e9c, _0x1e9df0) {
            var _0x18809e = _0x3be092['x'], _0x501b57 = _0x3be092['y'], _0x1798a6 = _0x3be092['z'], _0x32d26e = _0x479e9c['elements'];
            _0x1e9df0['x'] = Math['abs'](_0x32d26e[0x0] * _0x18809e) + Math['abs'](_0x32d26e[0x4] * _0x501b57) + Math['abs'](_0x32d26e[0x8] * _0x1798a6), _0x1e9df0['y'] = Math['abs'](_0x32d26e[0x1] * _0x18809e) + Math['abs'](_0x32d26e[0x5] * _0x501b57) + Math['abs'](_0x32d26e[0x9] * _0x1798a6), _0x1e9df0['z'] = Math['abs'](_0x32d26e[0x2] * _0x18809e) + Math['abs'](_0x32d26e[0x6] * _0x501b57) + Math['abs'](_0x32d26e[0xa] * _0x1798a6);
        }
        ['getCorners'](_0x48a408) {
            _0x48a408['length'] = 0x8;
            var _0x2dac0c = this['min']['x'], _0x343b6e = this['min']['y'], _0x339497 = this['min']['z'], _0x129262 = this['max']['x'], _0x33604a = this['max']['y'], _0x13a96e = this['max']['z'];
            _0x48a408[0x0] = new _0x352206(_0x2dac0c, _0x33604a, _0x13a96e), _0x48a408[0x1] = new _0x352206(_0x129262, _0x33604a, _0x13a96e), _0x48a408[0x2] = new _0x352206(_0x129262, _0x343b6e, _0x13a96e), _0x48a408[0x3] = new _0x352206(_0x2dac0c, _0x343b6e, _0x13a96e), _0x48a408[0x4] = new _0x352206(_0x2dac0c, _0x33604a, _0x339497), _0x48a408[0x5] = new _0x352206(_0x129262, _0x33604a, _0x339497), _0x48a408[0x6] = new _0x352206(_0x129262, _0x343b6e, _0x339497), _0x48a408[0x7] = new _0x352206(_0x2dac0c, _0x343b6e, _0x339497);
        }
        ['getCenter'](_0x1e3416) {
            _0x352206['add'](this['min'], this['max'], _0x1e3416), _0x352206['scale'](_0x1e3416, 0.5, _0x1e3416);
        }
        ['getExtent'](_0x100cfc) {
            _0x352206['subtract'](this['max'], this['min'], _0x100cfc), _0x352206['scale'](_0x100cfc, 0.5, _0x100cfc);
        }
        ['setCenterA' + 'ndExtent'](_0xf60339, _0x3e16d9) {
            _0x352206['subtract'](_0xf60339, _0x3e16d9, this['min']), _0x352206['add'](_0xf60339, _0x3e16d9, this['max']);
        }
        ['tranform'](_0x5c9a8e, _0x17d2af) {
            var _0x2c2cba = _0x2bd0ec['_tempVecto' + 'r30'], _0x26de27 = _0x2bd0ec['_tempVecto' + 'r31'];
            this['getCenter'](_0x2c2cba), this['getExtent'](_0x26de27), _0x352206['transformC' + 'oordinate'](_0x2c2cba, _0x5c9a8e, _0x2c2cba), this['_rotateExt' + 'ents'](_0x26de27, _0x5c9a8e, _0x26de27), _0x17d2af['setCenterA' + 'ndExtent'](_0x2c2cba, _0x26de27);
        }
        ['toDefault']() {
            this['min']['toDefault'](), this['max']['toDefault']();
        }
        static ['createfrom' + 'Points'](_0x5b760e, _0x37bffc) {
            if (_0x5b760e == null)
                throw new Error('points');
            var _0x31d332 = _0x37bffc['min'], _0x39f061 = _0x37bffc['max'];
            _0x31d332['x'] = Number['MAX_VALUE'], _0x31d332['y'] = Number['MAX_VALUE'], _0x31d332['z'] = Number['MAX_VALUE'], _0x39f061['x'] = -Number['MAX_VALUE'], _0x39f061['y'] = -Number['MAX_VALUE'], _0x39f061['z'] = -Number['MAX_VALUE'];
            for (var _0x31eb99 = 0x0, _0x51b498 = _0x5b760e['length']; _0x31eb99 < _0x51b498; ++_0x31eb99) {
                _0x352206['min'](_0x31d332, _0x5b760e[_0x31eb99], _0x31d332), _0x352206['max'](_0x39f061, _0x5b760e[_0x31eb99], _0x39f061);
            }
        }
        static ['merge'](_0x154f79, _0x191425, _0x40f528) {
            _0x352206['min'](_0x154f79['min'], _0x191425['min'], _0x40f528['min']), _0x352206['max'](_0x154f79['max'], _0x191425['max'], _0x40f528['max']);
        }
        ['cloneTo'](_0x7dae5f) {
            var _0x8df45a = _0x7dae5f;
            this['min']['cloneTo'](_0x8df45a['min']), this['max']['cloneTo'](_0x8df45a['max']);
        }
        ['clone']() {
            var _0x59c464 = new _0x2bd0ec(new _0x352206(), new _0x352206());
            return this['cloneTo'](_0x59c464), _0x59c464;
        }
    }
    _0x2bd0ec['_tempVecto' + 'r30'] = new _0x352206(), _0x2bd0ec['_tempVecto' + 'r31'] = new _0x352206();
    class _0x1f1598 {
        constructor(_0x1a3051, _0x551fa9) {
            this['_updateFla' + 'g'] = 0x0, this['_center'] = new _0x352206(), this['_extent'] = new _0x352206(), this['_boundBox'] = new _0x2bd0ec(new _0x352206(), new _0x352206()), _0x1a3051['cloneTo'](this['_boundBox']['min']), _0x551fa9['cloneTo'](this['_boundBox']['max']), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_CE' + 'NTER'] | _0x1f1598['_UPDATE_EX' + 'TENT'], !![]);
        }
        ['setMin'](_0x11931a) {
            var _0xf31e42 = this['_boundBox']['min'];
            if (_0x11931a !== _0xf31e42)
                _0x11931a['cloneTo'](_0xf31e42);
            this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_CE' + 'NTER'] | _0x1f1598['_UPDATE_EX' + 'TENT'], !![]), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MI' + 'N'], ![]);
        }
        ['getMin']() {
            var _0x4e9c5a = this['_boundBox']['min'];
            return this['_getUpdate' + 'Flag'](_0x1f1598['_UPDATE_MI' + 'N']) && (this['_getMin'](this['getCenter'](), this['getExtent'](), _0x4e9c5a), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MI' + 'N'], ![])), _0x4e9c5a;
        }
        ['setMax'](_0x3bd06f) {
            var _0x235e5b = this['_boundBox']['max'];
            if (_0x3bd06f !== _0x235e5b)
                _0x3bd06f['cloneTo'](_0x235e5b);
            this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_CE' + 'NTER'] | _0x1f1598['_UPDATE_EX' + 'TENT'], !![]), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MA' + 'X'], ![]);
        }
        ['getMax']() {
            var _0x107f6a = this['_boundBox']['max'];
            return this['_getUpdate' + 'Flag'](_0x1f1598['_UPDATE_MA' + 'X']) && (this['_getMax'](this['getCenter'](), this['getExtent'](), _0x107f6a), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MA' + 'X'], ![])), _0x107f6a;
        }
        ['setCenter'](_0x18d1ce) {
            if (_0x18d1ce !== this['_center'])
                _0x18d1ce['cloneTo'](this['_center']);
            this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MI' + 'N'] | _0x1f1598['_UPDATE_MA' + 'X'], !![]), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_CE' + 'NTER'], ![]);
        }
        ['getCenter']() {
            return this['_getUpdate' + 'Flag'](_0x1f1598['_UPDATE_CE' + 'NTER']) && (this['_getCenter'](this['getMin'](), this['getMax'](), this['_center']), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_CE' + 'NTER'], ![])), this['_center'];
        }
        ['setExtent'](_0x1d5be8) {
            if (_0x1d5be8 !== this['_extent'])
                _0x1d5be8['cloneTo'](this['_extent']);
            this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MI' + 'N'] | _0x1f1598['_UPDATE_MA' + 'X'], !![]), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_EX' + 'TENT'], ![]);
        }
        ['getExtent']() {
            return this['_getUpdate' + 'Flag'](_0x1f1598['_UPDATE_EX' + 'TENT']) && (this['_getExtent'](this['getMin'](), this['getMax'](), this['_extent']), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_EX' + 'TENT'], ![])), this['_extent'];
        }
        ['_getUpdate' + 'Flag'](_0x4d4ae6) {
            return (this['_updateFla' + 'g'] & _0x4d4ae6) != 0x0;
        }
        ['_setUpdate' + 'Flag'](_0x589639, _0x451869) {
            if (_0x451869)
                this['_updateFla' + 'g'] |= _0x589639;
            else
                this['_updateFla' + 'g'] &= ~_0x589639;
        }
        ['_getCenter'](_0x3b844c, _0x3782d1, _0x3e1b18) {
            _0x352206['add'](_0x3b844c, _0x3782d1, _0x3e1b18), _0x352206['scale'](_0x3e1b18, 0.5, _0x3e1b18);
        }
        ['_getExtent'](_0x2473e5, _0x207783, _0x1a5d5f) {
            _0x352206['subtract'](_0x207783, _0x2473e5, _0x1a5d5f), _0x352206['scale'](_0x1a5d5f, 0.5, _0x1a5d5f);
        }
        ['_getMin'](_0x5d88bf, _0x1fb4ca, _0x35793f) {
            _0x352206['subtract'](_0x5d88bf, _0x1fb4ca, _0x35793f);
        }
        ['_getMax'](_0x285b43, _0x340468, _0x1ff11a) {
            _0x352206['add'](_0x285b43, _0x340468, _0x1ff11a);
        }
        ['_rotateExt' + 'ents'](_0x3db8a4, _0x39ff24, _0x1cbb02) {
            var _0x24a62f = _0x3db8a4['x'], _0x552703 = _0x3db8a4['y'], _0x4ca836 = _0x3db8a4['z'], _0x101ad6 = _0x39ff24['elements'];
            _0x1cbb02['x'] = Math['abs'](_0x101ad6[0x0] * _0x24a62f) + Math['abs'](_0x101ad6[0x4] * _0x552703) + Math['abs'](_0x101ad6[0x8] * _0x4ca836), _0x1cbb02['y'] = Math['abs'](_0x101ad6[0x1] * _0x24a62f) + Math['abs'](_0x101ad6[0x5] * _0x552703) + Math['abs'](_0x101ad6[0x9] * _0x4ca836), _0x1cbb02['z'] = Math['abs'](_0x101ad6[0x2] * _0x24a62f) + Math['abs'](_0x101ad6[0x6] * _0x552703) + Math['abs'](_0x101ad6[0xa] * _0x4ca836);
        }
        ['_tranform'](_0x51f5ea, _0x44249f) {
            var _0x57bfac = _0x44249f['_center'], _0x3be51a = _0x44249f['_extent'];
            _0x352206['transformC' + 'oordinate'](this['getCenter'](), _0x51f5ea, _0x57bfac), this['_rotateExt' + 'ents'](this['getExtent'](), _0x51f5ea, _0x3be51a), _0x44249f['_boundBox']['setCenterA' + 'ndExtent'](_0x57bfac, _0x3be51a), _0x44249f['_updateFla' + 'g'] = 0x0;
        }
        ['_getBoundB' + 'ox']() {
            if (this['_updateFla' + 'g'] & _0x1f1598['_UPDATE_MI' + 'N']) {
                var _0x33f32b = this['_boundBox']['min'];
                this['_getMin'](this['getCenter'](), this['getExtent'](), _0x33f32b), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MI' + 'N'], ![]);
            }
            if (this['_updateFla' + 'g'] & _0x1f1598['_UPDATE_MA' + 'X']) {
                var _0x19d50e = this['_boundBox']['max'];
                this['_getMax'](this['getCenter'](), this['getExtent'](), _0x19d50e), this['_setUpdate' + 'Flag'](_0x1f1598['_UPDATE_MA' + 'X'], ![]);
            }
            return this['_boundBox'];
        }
        ['calculateB' + 'oundsinter' + 'section'](_0x116e3f) {
            var _0x226dcf = this['getMax'](), _0x52ad5b = this['getMin'](), _0x358c42 = _0x116e3f['getMax'](), _0x382d9e = _0x116e3f['getMin'](), _0x217297 = _0x1f1598['TEMP_VECTO' + 'R3_MAX0'], _0x38bf5d = _0x1f1598['TEMP_VECTO' + 'R3_MAX1'], _0x176c9e = this['getExtent'](), _0x534178 = _0x116e3f['getExtent']();
            _0x217297['setValue'](Math['max'](_0x226dcf['x'], _0x358c42['x']) - Math['min'](_0x52ad5b['x'], _0x382d9e['x']), Math['max'](_0x226dcf['y'], _0x358c42['y']) - Math['min'](_0x52ad5b['y'], _0x382d9e['y']), Math['max'](_0x226dcf['z'], _0x358c42['z']) - Math['min'](_0x52ad5b['z'], _0x382d9e['z'])), _0x38bf5d['setValue']((_0x176c9e['x'] + _0x534178['x']) * 0x2, (_0x176c9e['y'] + _0x534178['y']) * 0x2, (_0x176c9e['z'] + _0x534178['z']) * 0x2);
            if (_0x217297['x'] > _0x38bf5d['x'])
                return -0x1;
            if (_0x217297['y'] > _0x38bf5d['y'])
                return -0x1;
            if (_0x217297['z'] > _0x38bf5d['z'])
                return -0x1;
            return (_0x38bf5d['x'] - _0x217297['x']) * (_0x38bf5d['y'] - _0x217297['y']) * (_0x38bf5d['z'] - _0x217297['z']);
        }
        ['cloneTo'](_0x556b0c) {
            var _0x346aef = _0x556b0c;
            this['getMin']()['cloneTo'](_0x346aef['_boundBox']['min']), this['getMax']()['cloneTo'](_0x346aef['_boundBox']['max']), this['getCenter']()['cloneTo'](_0x346aef['_center']), this['getExtent']()['cloneTo'](_0x346aef['_extent']), _0x346aef['_updateFla' + 'g'] = 0x0;
        }
        ['clone']() {
            var _0x1e068e = new _0x1f1598(new _0x352206(), new _0x352206());
            return this['cloneTo'](_0x1e068e), _0x1e068e;
        }
    }
    _0x1f1598['_UPDATE_MI' + 'N'] = 0x1, _0x1f1598['_UPDATE_MA' + 'X'] = 0x2, _0x1f1598['_UPDATE_CE' + 'NTER'] = 0x4, _0x1f1598['_UPDATE_EX' + 'TENT'] = 0x8, _0x1f1598['TEMP_VECTO' + 'R3_MAX0'] = new _0x352206(), _0x1f1598['TEMP_VECTO' + 'R3_MAX1'] = new _0x352206();
    class _0x355f63 {
        constructor() {
            this['_destroyed'] = ![];
        }
        get ['destroyed']() {
            return this['_destroyed'];
        }
        ['_getType']() {
            throw 'GeometryEl' + 'ement:must' + '\x20override\x20' + 'it.';
        }
        ['_prepareRe' + 'nder'](_0x4057d3) {
            return !![];
        }
        ['_render'](_0x170f55) {
            throw 'GeometryEl' + 'ement:must' + '\x20override\x20' + 'it.';
        }
        ['destroy']() {
            if (this['_destroyed'])
                return;
            this['_destroyed'] = !![];
        }
    }
    _0x355f63['_typeCount' + 'er'] = 0x0;
    class _0x40bf38 {
        constructor() {
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x40bf38['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x40bf38['_vertexDec' + 'laration'] = new _0x19d0a5(0x1c, [
                new _0x549a90(0x0, _0x5cc56b['Vector3'], _0x2a7b2f['MESH_POSIT' + 'ION0']),
                new _0x549a90(0xc, _0x5cc56b['Vector4'], _0x2a7b2f['MESH_COLOR' + '0'])
            ]);
        }
        get ['vertexDecl' + 'aration']() {
            return _0x40bf38['_vertexDec' + 'laration'];
        }
    }
    class _0x350bde extends _0x355f63 {
        constructor(_0x3cc4e1, _0x161b96) {
            super(), this['_floatCoun' + 'tPerVertic' + 'es'] = 0x7, this['_minUpdate'] = Number['MAX_VALUE'], this['_maxUpdate'] = Number['MIN_VALUE'], this['_bufferSta' + 'te'] = new _0x2f0542(), this['_floatBoun' + 'd'] = new Float32Array(0x6), this['_calculate' + 'Bound'] = ![], this['_maxLineCo' + 'unt'] = 0x0, this['_lineCount'] = 0x0;
            var _0x2b0707 = _0x161b96 * 0x2;
            this['_owner'] = _0x3cc4e1, this['_maxLineCo' + 'unt'] = _0x161b96, this['_vertices'] = new Float32Array(_0x2b0707 * this['_floatCoun' + 'tPerVertic' + 'es']), this['_vertexBuf' + 'fer'] = new _0x251441(_0x40bf38['vertexDecl' + 'aration']['vertexStri' + 'de'] * _0x2b0707, _0x442335['LayaGL']['instance']['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x40bf38['vertexDecl' + 'aration'], this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind']();
            var _0x553256 = _0x350bde['_tempVecto' + 'r0'], _0x480dcf = _0x350bde['_tempVecto' + 'r1'];
            _0x553256['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0x480dcf['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), this['_bounds'] = new _0x1f1598(_0x553256, _0x480dcf);
        }
        ['_getType']() {
            return _0x350bde['_type'];
        }
        ['_resizeLin' + 'eData'](_0x2d4d00) {
            var _0x51b9d7 = _0x2d4d00 * 0x2, _0x223f17 = this['_vertices'];
            this['_vertexBuf' + 'fer']['destroy'](), this['_maxLineCo' + 'unt'] = _0x2d4d00;
            var _0x3f4c07 = _0x51b9d7 * this['_floatCoun' + 'tPerVertic' + 'es'];
            this['_vertices'] = new Float32Array(_0x3f4c07), this['_vertexBuf' + 'fer'] = new _0x251441(_0x40bf38['vertexDecl' + 'aration']['vertexStri' + 'de'] * _0x51b9d7, _0x442335['LayaGL']['instance']['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x40bf38['vertexDecl' + 'aration'], _0x3f4c07 < _0x223f17['length'] ? (this['_vertices']['set'](new Float32Array(_0x223f17['buffer'], 0x0, _0x3f4c07)), this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, _0x3f4c07 * 0x4)) : (this['_vertices']['set'](_0x223f17), this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, _0x223f17['length'] * 0x4)), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind']();
        }
        ['_updateLin' + 'eVertices'](_0x19dbc3, _0x8048d, _0x1015c3, _0x14731f, _0x11c9c9) {
            _0x8048d && (this['_vertices'][_0x19dbc3 + 0x0] = _0x8048d['x'], this['_vertices'][_0x19dbc3 + 0x1] = _0x8048d['y'], this['_vertices'][_0x19dbc3 + 0x2] = _0x8048d['z']);
            _0x14731f && (this['_vertices'][_0x19dbc3 + 0x3] = _0x14731f['r'], this['_vertices'][_0x19dbc3 + 0x4] = _0x14731f['g'], this['_vertices'][_0x19dbc3 + 0x5] = _0x14731f['b'], this['_vertices'][_0x19dbc3 + 0x6] = _0x14731f['a']);
            _0x1015c3 && (this['_vertices'][_0x19dbc3 + 0x7] = _0x1015c3['x'], this['_vertices'][_0x19dbc3 + 0x8] = _0x1015c3['y'], this['_vertices'][_0x19dbc3 + 0x9] = _0x1015c3['z']);
            _0x11c9c9 && (this['_vertices'][_0x19dbc3 + 0xa] = _0x11c9c9['r'], this['_vertices'][_0x19dbc3 + 0xb] = _0x11c9c9['g'], this['_vertices'][_0x19dbc3 + 0xc] = _0x11c9c9['b'], this['_vertices'][_0x19dbc3 + 0xd] = _0x11c9c9['a']);
            this['_minUpdate'] = Math['min'](this['_minUpdate'], _0x19dbc3), this['_maxUpdate'] = Math['max'](this['_maxUpdate'], _0x19dbc3 + this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2);
            var _0x13d224 = this['_bounds'], _0x2547f4 = this['_floatBoun' + 'd'], _0x1ba068 = _0x13d224['getMin'](), _0x4b0876 = _0x13d224['getMax']();
            _0x352206['min'](_0x1ba068, _0x8048d, _0x1ba068), _0x352206['min'](_0x1ba068, _0x1015c3, _0x1ba068), _0x352206['max'](_0x4b0876, _0x8048d, _0x4b0876), _0x352206['max'](_0x4b0876, _0x1015c3, _0x4b0876), _0x13d224['setMin'](_0x1ba068), _0x13d224['setMax'](_0x4b0876), (_0x2547f4[0x0] = _0x1ba068['x'], _0x2547f4[0x1] = _0x1ba068['y'], _0x2547f4[0x2] = _0x1ba068['z']), (_0x2547f4[0x3] = _0x4b0876['x'], _0x2547f4[0x4] = _0x4b0876['y'], _0x2547f4[0x5] = _0x4b0876['z']);
        }
        ['_reCalcula' + 'teBound']() {
            if (this['_calculate' + 'Bound']) {
                var _0x4f2017 = this['_vertices'], _0x180b47 = _0x350bde['_tempVecto' + 'r0'], _0xee22c2 = _0x350bde['_tempVecto' + 'r1'];
                _0x180b47['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0xee22c2['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']);
                for (var _0x1ab4e7 = 0x0; _0x1ab4e7 < this['_lineCount'] * 0x2; ++_0x1ab4e7) {
                    var _0x3f7bec = this['_floatCoun' + 'tPerVertic' + 'es'] * _0x1ab4e7, _0xd2f9f2 = _0x4f2017[_0x3f7bec + 0x0], _0x7001b7 = _0x4f2017[_0x3f7bec + 0x1], _0x5de594 = _0x4f2017[_0x3f7bec + 0x2];
                    _0x180b47['x'] = Math['min'](_0xd2f9f2, _0x180b47['x']), _0x180b47['y'] = Math['min'](_0x7001b7, _0x180b47['y']), _0x180b47['z'] = Math['min'](_0x5de594, _0x180b47['z']), _0xee22c2['x'] = Math['max'](_0xd2f9f2, _0xee22c2['x']), _0xee22c2['y'] = Math['max'](_0x7001b7, _0xee22c2['y']), _0xee22c2['z'] = Math['max'](_0x5de594, _0xee22c2['z']);
                }
                this['_bounds']['setMin'](_0x180b47), this['_bounds']['setMax'](_0xee22c2);
                var _0xc59070 = this['_floatBoun' + 'd'];
                _0xc59070[0x0] = _0x180b47['x'], _0xc59070[0x1] = _0x180b47['y'], _0xc59070[0x2] = _0x180b47['z'], (_0xc59070[0x3] = _0xee22c2['x'], _0xc59070[0x4] = _0xee22c2['y'], _0xc59070[0x5] = _0xee22c2['z']), this['_calculate' + 'Bound'] = ![];
            }
        }
        ['_removeLin' + 'eData'](_0x31b317) {
            var _0x5bf0bf = this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2, _0x42e0f4 = _0x31b317 + 0x1, _0x4b7c08 = _0x31b317 * _0x5bf0bf, _0x16fb19 = this['_vertices'], _0xdde5aa = new Float32Array(_0x16fb19['buffer'], _0x42e0f4 * _0x5bf0bf * 0x4, (this['_lineCount'] - _0x42e0f4) * _0x5bf0bf);
            _0x16fb19['set'](_0xdde5aa, _0x4b7c08), this['_minUpdate'] = Math['min'](this['_minUpdate'], _0x4b7c08), this['_maxUpdate'] = Math['max'](this['_maxUpdate'], _0x4b7c08 + _0xdde5aa['length']), this['_lineCount']--;
            var _0x24991e = this['_floatBoun' + 'd'], _0x43583d = _0x16fb19[_0x4b7c08], _0x22faa2 = _0x16fb19[_0x4b7c08 + 0x1], _0x51f4fb = _0x16fb19[_0x4b7c08 + 0x2], _0x81b7d9 = _0x16fb19[_0x4b7c08 + 0x7], _0x1d9b69 = _0x16fb19[_0x4b7c08 + 0x8], _0x4def7f = _0x16fb19[_0x4b7c08 + 0x9], _0x3510ef = _0x24991e[0x0], _0x47fbf7 = _0x24991e[0x1], _0x15986f = _0x24991e[0x2], _0x49316e = _0x24991e[0x3], _0x309897 = _0x24991e[0x4], _0x5d6572 = _0x24991e[0x5];
            if (_0x43583d === _0x3510ef || _0x43583d === _0x49316e || _0x22faa2 === _0x47fbf7 || _0x22faa2 === _0x309897 || _0x51f4fb === _0x15986f || _0x51f4fb === _0x5d6572 || _0x81b7d9 === _0x3510ef || _0x81b7d9 === _0x49316e || _0x1d9b69 === _0x47fbf7 || _0x1d9b69 === _0x309897 || _0x4def7f === _0x15986f || _0x4def7f === _0x5d6572)
                this['_calculate' + 'Bound'] = !![];
        }
        ['_updateLin' + 'eData'](_0x24083d, _0x1ed806, _0x27189d, _0x432978, _0x5de210) {
            var _0x56df08 = this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2;
            this['_updateLin' + 'eVertices'](_0x24083d * _0x56df08, _0x1ed806, _0x27189d, _0x432978, _0x5de210);
        }
        ['_updateLin' + 'eDatas'](_0x5972af, _0x35b246) {
            var _0x54a0f6 = this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2, _0xdbe37c = _0x35b246['length'];
            for (var _0x4e711a = 0x0; _0x4e711a < _0xdbe37c; _0x4e711a++) {
                var _0x2d54a7 = _0x35b246[_0x4e711a];
                this['_updateLin' + 'eVertices']((_0x5972af + _0x4e711a) * _0x54a0f6, _0x2d54a7['startPosit' + 'ion'], _0x2d54a7['endPositio' + 'n'], _0x2d54a7['startColor'], _0x2d54a7['endColor']);
            }
        }
        ['_getLineDa' + 'ta'](_0x4ff386, _0x3d25ce) {
            var _0x1d85ce = _0x3d25ce['startPosit' + 'ion'], _0x440898 = _0x3d25ce['startColor'], _0x500330 = _0x3d25ce['endPositio' + 'n'], _0x4ec145 = _0x3d25ce['endColor'], _0x2a43b0 = this['_vertices'], _0x1c06be = _0x4ff386 * this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2;
            _0x1d85ce['x'] = _0x2a43b0[_0x1c06be + 0x0], _0x1d85ce['y'] = _0x2a43b0[_0x1c06be + 0x1], _0x1d85ce['z'] = _0x2a43b0[_0x1c06be + 0x2], _0x440898['r'] = _0x2a43b0[_0x1c06be + 0x3], _0x440898['g'] = _0x2a43b0[_0x1c06be + 0x4], _0x440898['b'] = _0x2a43b0[_0x1c06be + 0x5], _0x440898['a'] = _0x2a43b0[_0x1c06be + 0x6], _0x500330['x'] = _0x2a43b0[_0x1c06be + 0x7], _0x500330['y'] = _0x2a43b0[_0x1c06be + 0x8], _0x500330['z'] = _0x2a43b0[_0x1c06be + 0x9], _0x4ec145['r'] = _0x2a43b0[_0x1c06be + 0xa], _0x4ec145['g'] = _0x2a43b0[_0x1c06be + 0xb], _0x4ec145['b'] = _0x2a43b0[_0x1c06be + 0xc], _0x4ec145['a'] = _0x2a43b0[_0x1c06be + 0xd];
        }
        ['_prepareRe' + 'nder'](_0x3afd1b) {
            return !![];
        }
        ['_render'](_0x26deeb) {
            this['_minUpdate'] !== Number['MAX_VALUE'] && this['_maxUpdate'] !== Number['MIN_VALUE'] && (this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], this['_minUpdate'] * 0x4, this['_minUpdate'] * 0x4, (this['_maxUpdate'] - this['_minUpdate']) * 0x4), this['_minUpdate'] = Number['MAX_VALUE'], this['_maxUpdate'] = Number['MIN_VALUE']);
            if (this['_lineCount'] > 0x0) {
                this['_bufferSta' + 'te']['bind']();
                var _0x34195c = _0x442335['LayaGL']['instance'];
                _0x34195c['drawArrays'](_0x34195c['LINES'], 0x0, this['_lineCount'] * 0x2), _0x442335['Stat']['renderBatc' + 'hes']++;
            }
        }
        ['destroy']() {
            if (this['_destroyed'])
                return;
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertexBuf' + 'fer'] = null, this['_vertices'] = null;
        }
    }
    _0x350bde['_tempVecto' + 'r0'] = new _0x352206(), _0x350bde['_tempVecto' + 'r1'] = new _0x352206(), _0x350bde['_type'] = _0x355f63['_typeCount' + 'er']++;
    class _0x22d3a2 extends _0x49f2b6 {
        constructor(_0x489c62) {
            super(_0x489c62);
        }
        static ['__init__']() {
            _0x22d3a2['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW'] = _0x18824e['getDefineB' + 'yName']('RECEIVESHA' + 'DOW'), _0x22d3a2['SAHDERDEFI' + 'NE_LIGHTMA' + 'P'] = _0x18824e['getDefineB' + 'yName']('LIGHTMAP'), _0x22d3a2['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL'] = _0x18824e['getDefineB' + 'yName']('LIGHTMAP_D' + 'IRECTIONAL');
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e'](), this['_scene']['_removeRen' + 'derObject'](this['_render']);
        }
        ['_onActive']() {
            super['_onActive'](), this['_scene']['_addRender' + 'Object'](this['_render']);
        }
        ['_onActiveI' + 'nScene']() {
            super['_onActiveI' + 'nScene']();
            if (_0x207eb6['Laya3D']['_editerEnv' + 'ironment']) {
                var _0x9437c2 = this['_scene'], _0x657001 = new _0x18425e();
                _0x9437c2['_allotPick' + 'ColorByID'](this['id'], _0x657001), _0x9437c2['_pickIdToS' + 'prite'][this['id']] = this, this['_render']['_shaderVal' + 'ues']['setVector'](_0x22d3a2['PICKCOLOR'], _0x657001);
            }
        }
        ['_addToInit' + 'StaticBatc' + 'hManager']() {
        }
        ['_setBelong' + 'Scene'](_0x6a8286) {
            super['_setBelong' + 'Scene'](_0x6a8286), this['_render']['_setBelong' + 'Scene'](_0x6a8286);
        }
        ['_setUnBelo' + 'ngScene']() {
            this['_render']['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x22d3a2['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), super['_setUnBelo' + 'ngScene']();
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x312684) {
            if (this['_hierarchy' + 'Animator']) {
                var _0x4e87f2 = this['_hierarchy' + 'Animator']['_renderabl' + 'eSprites'];
                _0x4e87f2['splice'](_0x4e87f2['indexOf'](this), 0x1);
            }
            if (_0x312684)
                _0x312684['_renderabl' + 'eSprites']['push'](this);
            super['_changeHie' + 'rarchyAnim' + 'ator'](_0x312684);
        }
        ['destroy'](_0x6ed2f5 = !![]) {
            super['destroy'](_0x6ed2f5), this['_render']['_destroy'](), this['_render'] = null;
        }
        ['_create']() {
            return new _0x22d3a2(this['name']);
        }
    }
    _0x22d3a2['LIGHTMAPSC' + 'ALEOFFSET'] = _0x18824e['propertyNa' + 'meToID']('u_Lightmap' + 'ScaleOffse' + 't'), _0x22d3a2['LIGHTMAP'] = _0x18824e['propertyNa' + 'meToID']('u_LightMap'), _0x22d3a2['LIGHTMAP_D' + 'IRECTION'] = _0x18824e['propertyNa' + 'meToID']('u_LightMap' + 'Direction'), _0x22d3a2['PICKCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_PickColo' + 'r'), _0x22d3a2['REFLECTION' + 'TEXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_ReflectT' + 'exture'), _0x22d3a2['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'] = _0x18824e['propertyNa' + 'meToID']('u_ReflectC' + 'ubeHDRPara' + 'ms'), _0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'POSITION'] = _0x18824e['propertyNa' + 'meToID']('u_SpecCube' + 'ProbePosit' + 'ion'), _0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'BOXMAX'] = _0x18824e['propertyNa' + 'meToID']('u_SpecCube' + 'BoxMax'), _0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'BOXMIN'] = _0x18824e['propertyNa' + 'meToID']('u_SpecCube' + 'BoxMin');
    class _0x36391b {
        constructor() {
            this['updateMark'] = -0x1, this['indexInLis' + 't'] = -0x1, this['batched'] = ![];
        }
    }
    class _0x2247dd extends _0x355f63 {
        constructor() {
            super(), this['maxInstanc' + 'eCount'] = 0x400, this['instanceWo' + 'rldMatrixD' + 'ata'] = new Float32Array(this['maxInstanc' + 'eCount'] * 0x10), this['instanceMV' + 'PMatrixDat' + 'a'] = new Float32Array(this['maxInstanc' + 'eCount'] * 0x10), this['instanceSi' + 'mpleAnimat' + 'orData'] = new Float32Array(this['maxInstanc' + 'eCount'] * 0x4);
            var _0x50ac94 = _0x442335['LayaGL']['instance'];
            this['instanceWo' + 'rldMatrixB' + 'uffer'] = new _0x251441(this['instanceWo' + 'rldMatrixD' + 'ata']['length'] * 0x4, _0x50ac94['DYNAMIC_DR' + 'AW']), this['instanceMV' + 'PMatrixBuf' + 'fer'] = new _0x251441(this['instanceMV' + 'PMatrixDat' + 'a']['length'] * 0x4, _0x50ac94['DYNAMIC_DR' + 'AW']), this['instanceWo' + 'rldMatrixB' + 'uffer']['vertexDecl' + 'aration'] = _0x2a7b2f['instanceWo' + 'rldMatrixD' + 'eclaration'], this['instanceMV' + 'PMatrixBuf' + 'fer']['vertexDecl' + 'aration'] = _0x2a7b2f['instanceMV' + 'PMatrixDec' + 'laration'], this['instanceSi' + 'mpleAnimat' + 'orBuffer'] = new _0x251441(this['instanceSi' + 'mpleAnimat' + 'orData']['length'] * 0x4, _0x50ac94['DYNAMIC_DR' + 'AW']), this['instanceSi' + 'mpleAnimat' + 'orBuffer']['vertexDecl' + 'aration'] = _0x2a7b2f['instanceSi' + 'mpleAnimat' + 'orDeclarat' + 'ion'];
        }
        static ['__init__']() {
            _0x2247dd['instance'] = new _0x2247dd();
        }
        ['_render'](_0x1ca276) {
            var _0x9c0201 = _0x442335['LayaGL']['instance'], _0x4765f9 = _0x1ca276['renderElem' + 'ent'], _0xf06a1f = _0x4765f9['instanceSu' + 'bMesh'], _0x3359d7 = _0x4765f9['instanceBa' + 'tchElement' + 'List']['length'], _0xb58172 = _0xf06a1f['_indexCoun' + 't'];
            _0xf06a1f['_mesh']['_instanceB' + 'ufferState']['bind'](), _0x442335['LayaGL']['layaGPUIns' + 'tance']['drawElemen' + 'tsInstance' + 'd'](_0x9c0201['TRIANGLES'], _0xb58172, _0x9c0201['UNSIGNED_S' + 'HORT'], _0xf06a1f['_indexStar' + 't'] * 0x2, _0x3359d7), _0x442335['Stat']['renderBatc' + 'hes']++, _0x442335['Stat']['savedRende' + 'rBatches'] += _0x3359d7 - 0x1, _0x442335['Stat']['trianglesF' + 'aces'] += _0xb58172 * _0x3359d7 / 0x3;
        }
    }
    class _0x5d8926 extends _0x5ca4bd {
        constructor() {
            super(), this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !![];
        }
        ['_onWorldMa' + 'trixChange' + 'd']() {
            this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !![];
        }
        ['_computeWo' + 'rldPositio' + 'nsAndNorma' + 'ls'](_0x1d21cc, _0x58cbcf, _0x30b59e, _0x237dae) {
            if (this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate']) {
                var _0x414243 = this['_geometry'], _0x2d69ed = _0x414243['_vertexBuf' + 'fer'], _0x472c99 = _0x2d69ed['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x3a6e60 = _0x2d69ed['getFloat32' + 'Data'](), _0x1193fc = this['_transform']['worldMatri' + 'x'], _0x4cd406 = this['_transform']['rotation'], _0x36fb33 = _0x414243['_indices'];
                for (var _0x3ed8f2 = 0x0; _0x3ed8f2 < _0x237dae; _0x3ed8f2++) {
                    var _0x343a03 = _0x30b59e ? _0x36fb33[_0x3ed8f2] : _0x3ed8f2, _0x5175f9 = _0x343a03 * _0x472c99, _0x56bcf2 = _0x3ed8f2 * 0x3;
                    _0x47bed9['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x3a6e60, _0x5175f9 + _0x1d21cc, _0x1193fc, this['_dynamicWo' + 'rldPositio' + 'ns'], _0x56bcf2), _0x58cbcf !== -0x1 && _0x47bed9['transformV' + 'ector3Arra' + 'yByQuat'](_0x3a6e60, _0x5175f9 + _0x58cbcf, _0x4cd406, this['_dynamicWo' + 'rldNormals'], _0x56bcf2);
                }
                this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = ![];
            }
        }
        ['setTransfo' + 'rm'](_0x42ae9f) {
            this['_transform'] !== _0x42ae9f && (this['_transform'] && this['_transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'trixChange' + 'd']), _0x42ae9f && _0x42ae9f['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'trixChange' + 'd']), this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !![], this['_transform'] = _0x42ae9f);
        }
        ['setGeometr' + 'y'](_0x1dc95) {
            if (this['_geometry'] !== _0x1dc95) {
                var _0x3bb04a = _0x1dc95, _0xcff08a = _0x3bb04a['_mesh'];
                if (_0xcff08a) {
                    var _0x30b957 = _0xcff08a['_subMeshes']['length'] > 0x1, _0x539f11 = _0x30b957 ? _0x3bb04a['_indexCoun' + 't'] : _0xcff08a['_vertexCou' + 'nt'];
                    if (_0x539f11 <= _0x207eb6['SubMeshDyn' + 'amicBatch']['maxAllowVe' + 'rtexCount']) {
                        var _0x730cb3 = _0x539f11 * 0x3;
                        this['_dynamicVe' + 'rtexBatch'] = !![], this['_dynamicWo' + 'rldPositio' + 'ns'] = new Float32Array(_0x730cb3), this['_dynamicWo' + 'rldNormals'] = new Float32Array(_0x730cb3), this['_dynamicVe' + 'rtexCount'] = _0x539f11, this['_dynamicMu' + 'ltiSubMesh'] = _0x30b957;
                    } else
                        this['_dynamicVe' + 'rtexBatch'] = ![];
                }
                this['_geometry'] = _0x1dc95;
            }
        }
        ['addToOpaqu' + 'eRenderQue' + 'ue'](_0x56abbe, _0x4bf84e) {
            var _0x8c77b3 = this['staticBatc' + 'h'], _0x17f817 = _0x4bf84e['elements'], _0x252cfa = _0x17f817['elements'];
            if (_0x8c77b3 && (!this['render']['_probRefle' + 'ction'] || this['render']['_probRefle' + 'ction']['_isScene'])) {
                var _0xce0f37 = _0x207eb6['MeshRender' + 'StaticBatc' + 'hManager']['instance'], _0x369708 = _0xce0f37['getBatchOp' + 'aquaMark'](this['render']['lightmapIn' + 'dex'] + 0x1, this['render']['receiveSha' + 'dow'], this['material']['id'], _0x8c77b3['_batchID']);
                if (_0xce0f37['_updateCou' + 'ntMark'] === _0x369708['updateMark']) {
                    var _0x547a06 = _0x369708['indexInLis' + 't'];
                    if (_0x369708['batched'])
                        _0x252cfa[_0x547a06]['staticBatc' + 'hElementLi' + 'st']['add'](this);
                    else {
                        var _0x2d21f7 = _0x252cfa[_0x547a06], _0x2ada95 = _0x2d21f7['render'], _0x5da805 = _0xce0f37['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                        _0x5da805['renderType'] = _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH'], _0x5da805['setGeometr' + 'y'](_0x8c77b3), _0x5da805['material'] = _0x2d21f7['material'];
                        var _0x4b1dc5 = _0x8c77b3['batchOwner'], _0x187e50 = _0x4b1dc5 ? _0x4b1dc5['_transform'] : null;
                        _0x5da805['setTransfo' + 'rm'](_0x187e50), _0x5da805['render'] = _0x2ada95, _0x5da805['renderSubS' + 'hader'] = _0x2d21f7['renderSubS' + 'hader'];
                        var _0x1a909c = _0x5da805['staticBatc' + 'hElementLi' + 'st'];
                        _0x1a909c['length'] = 0x0, _0x1a909c['add'](_0x2d21f7), _0x1a909c['add'](this), _0x252cfa[_0x547a06] = _0x5da805, _0x369708['batched'] = !![];
                    }
                } else
                    _0x369708['updateMark'] = _0xce0f37['_updateCou' + 'ntMark'], _0x369708['indexInLis' + 't'] = _0x17f817['length'], _0x369708['batched'] = ![], _0x17f817['add'](this);
            } else {
                if (this['renderSubS' + 'hader']['_owner']['_enableIns' + 'tancing'] && _0x442335['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']() && this['render']['lightmapIn' + 'dex'] < 0x0 && (!this['render']['_probRefle' + 'ction'] || this['render']['_probRefle' + 'ction']['_isScene'])) {
                    var _0x3d5472 = this['_geometry'], _0x395f19 = _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x3b6e12 = _0x395f19['getInstanc' + 'eBatchOpaq' + 'uaMark'](this['render']['receiveSha' + 'dow'], this['material']['id'], _0x3d5472['_id'], this['_transform']['_isFrontFa' + 'ceInvert']);
                    if (_0x395f19['_updateCou' + 'ntMark'] === _0x3b6e12['updateMark']) {
                        var _0x186fa8 = _0x3b6e12['indexInLis' + 't'];
                        if (_0x3b6e12['batched']) {
                            var _0x2e91a6 = _0x252cfa[_0x186fa8]['instanceBa' + 'tchElement' + 'List'];
                            _0x2e91a6['length'] === _0x2247dd['instance']['maxInstanc' + 'eCount'] ? (_0x3b6e12['updateMark'] = _0x395f19['_updateCou' + 'ntMark'], _0x3b6e12['indexInLis' + 't'] = _0x17f817['length'], _0x3b6e12['batched'] = ![], _0x17f817['add'](this)) : _0x2e91a6['add'](this);
                        } else {
                            var _0xb6ad8c = _0x252cfa[_0x186fa8], _0x932ffe = _0xb6ad8c['render'], _0x358f1f = _0x395f19['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                            _0x358f1f['renderType'] = _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH'], _0x358f1f['setGeometr' + 'y'](_0x2247dd['instance']), _0x358f1f['material'] = _0xb6ad8c['material'], _0x358f1f['setTransfo' + 'rm'](null), _0x358f1f['render'] = _0x932ffe, _0x358f1f['instanceSu' + 'bMesh'] = _0x3d5472, _0x358f1f['renderSubS' + 'hader'] = _0xb6ad8c['renderSubS' + 'hader'];
                            var _0x3e8baa = _0x358f1f['instanceBa' + 'tchElement' + 'List'];
                            _0x3e8baa['length'] = 0x0, _0x3e8baa['add'](_0xb6ad8c), _0x3e8baa['add'](this), _0x252cfa[_0x186fa8] = _0x358f1f, _0x3b6e12['batched'] = !![];
                        }
                    } else
                        _0x3b6e12['updateMark'] = _0x395f19['_updateCou' + 'ntMark'], _0x3b6e12['indexInLis' + 't'] = _0x17f817['length'], _0x3b6e12['batched'] = ![], _0x17f817['add'](this);
                } else {
                    if (this['_dynamicVe' + 'rtexBatch']) {
                        var _0x28577f = this['_geometry']['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x40263e = _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x5227ea = _0x40263e['getVertexB' + 'atchOpaqua' + 'Mark'](this['render']['lightmapIn' + 'dex'] + 0x1, this['render']['receiveSha' + 'dow'], this['material']['id'], _0x28577f['id']);
                        if (_0x40263e['_updateCou' + 'ntMark'] === _0x5227ea['updateMark']) {
                            var _0x45df8c = _0x5227ea['indexInLis' + 't'];
                            if (_0x5227ea['batched'])
                                _0x252cfa[_0x45df8c]['vertexBatc' + 'hElementLi' + 'st']['add'](this);
                            else {
                                var _0x8b8abb = _0x252cfa[_0x45df8c], _0x4ef374 = _0x8b8abb['render'], _0x39c546 = _0x40263e['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                _0x39c546['renderType'] = _0x5ca4bd['RENDERTYPE' + '_VERTEXBAT' + 'CH'], _0x39c546['setGeometr' + 'y'](_0x207eb6['SubMeshDyn' + 'amicBatch']['instance']), _0x39c546['material'] = _0x8b8abb['material'], _0x39c546['setTransfo' + 'rm'](null), _0x39c546['render'] = _0x4ef374, _0x39c546['vertexBatc' + 'hVertexDec' + 'laration'] = _0x28577f, _0x39c546['renderSubS' + 'hader'] = _0x8b8abb['renderSubS' + 'hader'];
                                var _0x250dc2 = _0x39c546['vertexBatc' + 'hElementLi' + 'st'];
                                _0x250dc2['length'] = 0x0, _0x250dc2['add'](_0x8b8abb), _0x250dc2['add'](this), _0x252cfa[_0x45df8c] = _0x39c546, _0x5227ea['batched'] = !![];
                            }
                        } else
                            _0x5227ea['updateMark'] = _0x40263e['_updateCou' + 'ntMark'], _0x5227ea['indexInLis' + 't'] = _0x17f817['length'], _0x5227ea['batched'] = ![], _0x17f817['add'](this);
                    } else
                        _0x17f817['add'](this);
                }
            }
        }
        ['addToTrans' + 'parentRend' + 'erQueue'](_0x3eafe7, _0xc53cdf) {
            var _0x52f6f1 = this['staticBatc' + 'h'], _0x242d5f = _0xc53cdf['elements'], _0x12e21c = _0x242d5f['elements'];
            if (_0x52f6f1) {
                var _0x5cd37d = _0x207eb6['MeshRender' + 'StaticBatc' + 'hManager']['instance'], _0x441c12 = _0xc53cdf['lastTransp' + 'arentRende' + 'rElement'];
                if (_0x441c12) {
                    var _0x4088af = _0x441c12['render'];
                    if (_0x441c12['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x441c12['staticBatc' + 'h'] !== _0x52f6f1 || _0x441c12['material'] !== this['material'] || _0x4088af['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'] || _0x4088af['lightmapIn' + 'dex'] !== this['render']['lightmapIn' + 'dex'])
                        _0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![];
                    else {
                        if (_0xc53cdf['lastTransp' + 'arentBatch' + 'ed'])
                            _0x12e21c[_0x242d5f['length'] - 0x1]['staticBatc' + 'hElementLi' + 'st']['add'](this);
                        else {
                            var _0x3dbbc2 = _0x5cd37d['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                            _0x3dbbc2['renderType'] = _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH'], _0x3dbbc2['setGeometr' + 'y'](_0x52f6f1), _0x3dbbc2['material'] = _0x441c12['material'];
                            var _0x24045d = _0x52f6f1['batchOwner'], _0x320f8d = _0x24045d ? _0x24045d['_transform'] : null;
                            _0x3dbbc2['setTransfo' + 'rm'](_0x320f8d), _0x3dbbc2['render'] = this['render'], _0x3dbbc2['renderSubS' + 'hader'] = _0x441c12['renderSubS' + 'hader'];
                            var _0x2c2626 = _0x3dbbc2['staticBatc' + 'hElementLi' + 'st'];
                            _0x2c2626['length'] = 0x0, _0x2c2626['add'](_0x441c12), _0x2c2626['add'](this), _0x12e21c[_0x242d5f['length'] - 0x1] = _0x3dbbc2;
                        }
                        _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = !![];
                    }
                } else
                    _0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![];
            } else {
                if (this['renderSubS' + 'hader']['_owner']['_enableIns' + 'tancing'] && _0x442335['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']() && this['render']['lightmapIn' + 'dex'] < 0x0 && (!this['render']['_probRefle' + 'ction'] || this['render']['_probRefle' + 'ction']['_isScene'])) {
                    var _0x1d4edf = this['_geometry'], _0x1dcb51 = _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x59eba4 = _0xc53cdf['lastTransp' + 'arentRende' + 'rElement'];
                    if (_0x59eba4) {
                        var _0x48947a = _0x59eba4['render'];
                        if (_0x59eba4['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x59eba4['_geometry'] !== _0x1d4edf || _0x59eba4['material'] !== this['material'] || _0x48947a['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'])
                            _0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![];
                        else {
                            if (_0xc53cdf['lastTransp' + 'arentBatch' + 'ed']) {
                                var _0x5dea20 = _0x12e21c[_0x242d5f['length'] - 0x1]['instanceBa' + 'tchElement' + 'List'];
                                _0x5dea20['length'] === _0x2247dd['instance']['maxInstanc' + 'eCount'] ? (_0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![]) : (_0x5dea20['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = !![]);
                            } else {
                                var _0x2c4886 = _0x1dcb51['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                _0x2c4886['renderType'] = _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH'], _0x2c4886['setGeometr' + 'y'](_0x2247dd['instance']), _0x2c4886['material'] = _0x59eba4['material'], _0x2c4886['setTransfo' + 'rm'](null), _0x2c4886['render'] = this['render'], _0x2c4886['instanceSu' + 'bMesh'] = _0x1d4edf, _0x2c4886['renderSubS' + 'hader'] = _0x59eba4['renderSubS' + 'hader'];
                                var _0x59a854 = _0x2c4886['instanceBa' + 'tchElement' + 'List'];
                                _0x59a854['length'] = 0x0, _0x59a854['add'](_0x59eba4), _0x59a854['add'](this), _0x12e21c[_0x242d5f['length'] - 0x1] = _0x2c4886, _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = !![];
                            }
                        }
                    } else
                        _0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![];
                } else {
                    if (this['_dynamicVe' + 'rtexBatch']) {
                        var _0x126f0e = this['_geometry']['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x28141f = _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0xe6d70f = _0xc53cdf['lastTransp' + 'arentRende' + 'rElement'];
                        if (_0xe6d70f) {
                            var _0xc8ad05 = _0xe6d70f['render'];
                            if (!_0xe6d70f['_dynamicVe' + 'rtexBatch'] || _0xe6d70f['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0xe6d70f['_geometry']['_vertexBuf' + 'fer']['_vertexDec' + 'laration'] !== _0x126f0e || _0xe6d70f['material'] !== this['material'] || _0xc8ad05['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'] || _0xc8ad05['lightmapIn' + 'dex'] !== this['render']['lightmapIn' + 'dex'])
                                _0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![];
                            else {
                                if (_0xc53cdf['lastTransp' + 'arentBatch' + 'ed'])
                                    _0x12e21c[_0x242d5f['length'] - 0x1]['vertexBatc' + 'hElementLi' + 'st']['add'](this);
                                else {
                                    var _0x447e14 = _0x28141f['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                    _0x447e14['renderType'] = _0x5ca4bd['RENDERTYPE' + '_VERTEXBAT' + 'CH'], _0x447e14['setGeometr' + 'y'](_0x207eb6['SubMeshDyn' + 'amicBatch']['instance']), _0x447e14['material'] = _0xe6d70f['material'], _0x447e14['setTransfo' + 'rm'](null), _0x447e14['render'] = this['render'], _0x447e14['vertexBatc' + 'hVertexDec' + 'laration'] = _0x126f0e, _0x447e14['renderSubS' + 'hader'] = _0xe6d70f['renderSubS' + 'hader'];
                                    var _0xe2cec1 = _0x447e14['vertexBatc' + 'hElementLi' + 'st'];
                                    _0xe2cec1['length'] = 0x0, _0xe2cec1['add'](_0xe6d70f), _0xe2cec1['add'](this), _0x12e21c[_0x242d5f['length'] - 0x1] = _0x447e14;
                                }
                                _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = !![];
                            }
                        } else
                            _0x242d5f['add'](this), _0xc53cdf['lastTransp' + 'arentBatch' + 'ed'] = ![];
                    } else
                        _0x242d5f['add'](this);
                }
            }
            _0xc53cdf['lastTransp' + 'arentRende' + 'rElement'] = this;
        }
        ['getInvertF' + 'ront']() {
            switch (this['renderType']) {
            case _0x5ca4bd['RENDERTYPE' + '_NORMAL']:
                return this['_transform']['_isFrontFa' + 'ceInvert'];
            case _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH']:
            case _0x5ca4bd['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                return ![];
            case _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                return this['instanceBa' + 'tchElement' + 'List']['elements'][0x0]['_transform']['_isFrontFa' + 'ceInvert'];
            default:
                throw 'SubMeshRen' + 'derElement' + ':\x20unknown\x20' + 'renderType';
            }
        }
        ['destroy']() {
            super['destroy'](), this['_dynamicWo' + 'rldPositio' + 'ns'] = null, this['_dynamicWo' + 'rldNormals'] = null, this['staticBatc' + 'h'] = null, this['staticBatc' + 'hElementLi' + 'st'] = null, this['vertexBatc' + 'hElementLi' + 'st'] = null, this['vertexBatc' + 'hVertexDec' + 'laration'] = null;
        }
    }
    class _0x435c23 {
        constructor() {
            this['_initBatch' + 'Sprites'] = [], this['_staticBat' + 'ches'] = {}, this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0, this['_batchRend' + 'erElementP' + 'ool'] = [];
        }
        static ['_addToStat' + 'icBatchQue' + 'ue'](_0x1f4e33, _0x2d833e) {
            if (_0x1f4e33 instanceof _0x22d3a2)
                _0x2d833e['push'](_0x1f4e33);
            for (var _0x48abfa = 0x0, _0x50ec7a = _0x1f4e33['numChildre' + 'n']; _0x48abfa < _0x50ec7a; _0x48abfa++)
                _0x435c23['_addToStat' + 'icBatchQue' + 'ue'](_0x1f4e33['_children'][_0x48abfa], _0x2d833e);
        }
        static ['_registerM' + 'anager'](_0x21a7c5) {
            _0x435c23['_managers']['push'](_0x21a7c5);
        }
        static ['combine'](_0x510792, _0x408d59 = null) {
            if (!_0x408d59) {
                _0x408d59 = [];
                if (_0x510792)
                    _0x435c23['_addToStat' + 'icBatchQue' + 'ue'](_0x510792, _0x408d59);
            }
            var _0x1b1862 = _0x408d59['length'];
            if (_0x1b1862 > 0x0) {
                for (var _0x3baf06 = 0x0; _0x3baf06 < _0x1b1862; _0x3baf06++) {
                    var _0x46831c = _0x408d59[_0x3baf06];
                    if (!_0x46831c['destroyed']) {
                        if (_0x46831c['_render']['_isPartOfS' + 'taticBatch'])
                            console['warn']('StaticBatc' + 'hManager:\x20' + 'Sprite\x20' + _0x46831c['name'] + ('\x20has\x20a\x20par' + 't\x20of\x20Stati' + 'c\x20Batch,it' + '\x20will\x20be\x20i' + 'gnore.'));
                        else
                            _0x46831c['_addToInit' + 'StaticBatc' + 'hManager']();
                    }
                }
                for (var _0x2ecab2 = 0x0, _0x94b913 = _0x435c23['_managers']['length']; _0x2ecab2 < _0x94b913; _0x2ecab2++) {
                    var _0x2aaaae = _0x435c23['_managers'][_0x2ecab2];
                    _0x2aaaae['_initStati' + 'cBatchs'](_0x510792);
                }
            }
        }
        ['_partition'](_0x5557e0, _0x132e4a, _0x5b9653) {
            var _0x5a3226 = _0x5557e0[Math['floor']((_0x5b9653 + _0x132e4a) / 0x2)];
            while (_0x132e4a <= _0x5b9653) {
                while (this['_compare'](_0x5557e0[_0x132e4a], _0x5a3226) < 0x0)
                    _0x132e4a++;
                while (this['_compare'](_0x5557e0[_0x5b9653], _0x5a3226) > 0x0)
                    _0x5b9653--;
                if (_0x132e4a < _0x5b9653) {
                    var _0x1f169b = _0x5557e0[_0x132e4a];
                    _0x5557e0[_0x132e4a] = _0x5557e0[_0x5b9653], _0x5557e0[_0x5b9653] = _0x1f169b, _0x132e4a++, _0x5b9653--;
                } else {
                    if (_0x132e4a === _0x5b9653) {
                        _0x132e4a++;
                        break;
                    }
                }
            }
            return _0x132e4a;
        }
        ['_quickSort'](_0x42a4fd, _0x5c7c88, _0x2b92cb) {
            if (_0x42a4fd['length'] > 0x1) {
                var _0x2cc848 = this['_partition'](_0x42a4fd, _0x5c7c88, _0x2b92cb), _0x2fe01d = _0x2cc848 - 0x1;
                if (_0x5c7c88 < _0x2fe01d)
                    this['_quickSort'](_0x42a4fd, _0x5c7c88, _0x2fe01d);
                if (_0x2cc848 < _0x2b92cb)
                    this['_quickSort'](_0x42a4fd, _0x2cc848, _0x2b92cb);
            }
        }
        ['_compare'](_0x192ebb, _0x58cafc) {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_initStati' + 'cBatchs'](_0x3fa28c) {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_addBatchS' + 'prite'](_0x2d65bc) {
            this['_initBatch' + 'Sprites']['push'](_0x2d65bc);
        }
        ['_clear']() {
            this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0;
        }
        ['_garbageCo' + 'llection']() {
            throw 'StaticBatc' + 'hManager:\x20' + 'must\x20overr' + 'ide\x20it.';
        }
        ['dispose']() {
            this['_staticBat' + 'ches'] = null;
        }
    }
    _0x435c23['_managers'] = [];
    class _0x18b0fe extends _0x355f63 {
        constructor(_0xee836b, _0x1a589e) {
            super(), this['_bufferSta' + 'te'] = new _0x2f0542(), this['_batchID'] = _0x18b0fe['_batchIDCo' + 'unter']++, this['_batchElem' + 'ents'] = [], this['_currentBa' + 'tchVertexC' + 'ount'] = 0x0, this['_currentBa' + 'tchIndexCo' + 'unt'] = 0x0, this['_vertexDec' + 'laration'] = _0x1a589e, this['batchOwner'] = _0xee836b;
        }
        ['_getStatic' + 'BatchBaked' + 'Vertexs'](_0xd5f9c7, _0x484cbc, _0x49c952, _0x284f5e, _0x38fb43, _0x175bb0) {
            var _0x215db9 = _0x175bb0['_vertexBuf' + 'fer'], _0x189b00 = _0x215db9['vertexDecl' + 'aration'], _0x56f204 = _0x189b00['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_POSIT' + 'ION0'])['_offset'] / 0x4, _0x171ab9 = _0x189b00['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_NORMA' + 'L0']), _0x38b30c = _0x171ab9 ? _0x171ab9['_offset'] / 0x4 : -0x1, _0x31388b = _0x189b00['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_COLOR' + '0']), _0x2015a7 = _0x31388b ? _0x31388b['_offset'] / 0x4 : -0x1, _0x10ecfe = _0x189b00['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']), _0x268d4c = _0x10ecfe ? _0x10ecfe['_offset'] / 0x4 : -0x1, _0x6f1e92 = _0x189b00['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']), _0x2b1fee = _0x6f1e92 ? _0x6f1e92['_offset'] / 0x4 : -0x1, _0x4b9be9 = _0x189b00['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TANGE' + 'NT0']), _0x1c66d0 = _0x4b9be9 ? _0x4b9be9['_offset'] / 0x4 : -0x1, _0x20c9bd = 0x12, _0x189b4c = _0x189b00['vertexStri' + 'de'] / 0x4, _0x5123ac = _0x215db9['getFloat32' + 'Data'](), _0x358be4;
            if (_0x49c952) {
                var _0x44e0cd = _0x49c952['worldMatri' + 'x'];
                _0x44e0cd['invert'](_0x18b0fe['_tempMatri' + 'x4x40']), _0x358be4 = _0x18b0fe['_tempMatri' + 'x4x41'], _0x4c2288['multiply'](_0x18b0fe['_tempMatri' + 'x4x40'], _0x284f5e['worldMatri' + 'x'], _0x358be4);
            } else
                _0x358be4 = _0x284f5e['worldMatri' + 'x'];
            var _0x963ed9 = _0x18b0fe['_tempMatri' + 'x4x42'];
            _0x358be4['invert'](_0x963ed9), _0x963ed9['transpose']();
            var _0x2a84f2 = _0x18b0fe['_tempQuate' + 'rnion0'];
            _0x358be4['decomposeT' + 'ransRotSca' + 'le'](_0x18b0fe['_tempVecto' + 'r30'], _0x2a84f2, _0x18b0fe['_tempVecto' + 'r31']);
            var _0x53d8cc = _0x38fb43['lightmapSc' + 'aleOffset'], _0x4ecaec = _0x175bb0['vertexCoun' + 't'];
            for (var _0xe5c693 = 0x0; _0xe5c693 < _0x4ecaec; _0xe5c693++) {
                var _0x4eff3b = _0xe5c693 * _0x189b4c, _0x56f68e = (_0xe5c693 + _0x484cbc) * _0x20c9bd;
                _0x47bed9['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x5123ac, _0x4eff3b + _0x56f204, _0x358be4, _0xd5f9c7, _0x56f68e + 0x0);
                if (_0x38b30c !== -0x1)
                    _0x47bed9['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x5123ac, _0x4eff3b + _0x38b30c, _0x963ed9, _0xd5f9c7, _0x56f68e + 0x3);
                var _0x20a913, _0x40dfb0, _0x3025b1 = _0x56f68e + 0x6;
                if (_0x2015a7 !== -0x1) {
                    var _0x300f2c = _0x4eff3b + _0x2015a7;
                    for (_0x20a913 = 0x0, _0x40dfb0 = 0x4; _0x20a913 < _0x40dfb0; _0x20a913++)
                        _0xd5f9c7[_0x3025b1 + _0x20a913] = _0x5123ac[_0x300f2c + _0x20a913];
                } else {
                    for (_0x20a913 = 0x0, _0x40dfb0 = 0x4; _0x20a913 < _0x40dfb0; _0x20a913++)
                        _0xd5f9c7[_0x3025b1 + _0x20a913] = 0x1;
                }
                if (_0x268d4c !== -0x1) {
                    var _0x4145f8 = _0x4eff3b + _0x268d4c;
                    _0xd5f9c7[_0x56f68e + 0xa] = _0x5123ac[_0x4145f8], _0xd5f9c7[_0x56f68e + 0xb] = _0x5123ac[_0x4145f8 + 0x1];
                }
                if (_0x53d8cc) {
                    if (_0x2b1fee !== -0x1)
                        _0x47bed9['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x5123ac, _0x4eff3b + _0x2b1fee, _0x53d8cc, _0xd5f9c7, _0x56f68e + 0xc);
                    else
                        _0x47bed9['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x5123ac, _0x4eff3b + _0x268d4c, _0x53d8cc, _0xd5f9c7, _0x56f68e + 0xc);
                }
                if (_0x1c66d0 !== -0x1) {
                    var _0x598fb0 = _0x4eff3b + _0x1c66d0;
                    _0x47bed9['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x5123ac, _0x598fb0, _0x963ed9, _0xd5f9c7, _0x56f68e + 0xe), _0xd5f9c7[_0x56f68e + 0x11] = _0x5123ac[_0x598fb0 + 0x3];
                }
            }
            return _0x4ecaec;
        }
        ['addTest'](_0x529d2a) {
            var _0x15ad40, _0x42d6d9 = _0x529d2a['meshFilter']['sharedMesh']['vertexCoun' + 't'];
            _0x15ad40 = this['_currentBa' + 'tchVertexC' + 'ount'] + _0x42d6d9;
            if (_0x15ad40 > _0x18b0fe['maxBatchVe' + 'rtexCount'])
                return ![];
            return !![];
        }
        ['add'](_0x4b3f0a) {
            var _0x164edb = _0x4b3f0a['meshFilter']['sharedMesh'], _0x14b824 = _0x164edb['vertexCoun' + 't'];
            this['_batchElem' + 'ents']['push'](_0x4b3f0a);
            var _0x1f4f1b = _0x4b3f0a['_render'];
            _0x1f4f1b['_isPartOfS' + 'taticBatch'] = !![], _0x1f4f1b['_staticBat' + 'ch'] = this;
            var _0x1a3f06 = _0x1f4f1b['_renderEle' + 'ments'];
            for (var _0x3d0829 = 0x0, _0x5cfa90 = _0x1a3f06['length']; _0x3d0829 < _0x5cfa90; _0x3d0829++)
                _0x1a3f06[_0x3d0829]['staticBatc' + 'h'] = this;
            this['_currentBa' + 'tchIndexCo' + 'unt'] += _0x164edb['_indexBuff' + 'er']['indexCount'], this['_currentBa' + 'tchVertexC' + 'ount'] += _0x14b824;
        }
        ['remove'](_0xe4fe07) {
            var _0x4abc56 = _0xe4fe07['meshFilter']['sharedMesh'], _0x1d9771 = this['_batchElem' + 'ents']['indexOf'](_0xe4fe07);
            if (_0x1d9771 !== -0x1) {
                this['_batchElem' + 'ents']['splice'](_0x1d9771, 0x1);
                var _0x552a33 = _0xe4fe07['_render']['_renderEle' + 'ments'];
                for (var _0x5c3ebd = 0x0, _0x43edbd = _0x552a33['length']; _0x5c3ebd < _0x43edbd; _0x5c3ebd++)
                    _0x552a33[_0x5c3ebd]['staticBatc' + 'h'] = null;
                this['_currentBa' + 'tchIndexCo' + 'unt'] = this['_currentBa' + 'tchIndexCo' + 'unt'] - _0x4abc56['_indexBuff' + 'er']['indexCount'], this['_currentBa' + 'tchVertexC' + 'ount'] = this['_currentBa' + 'tchVertexC' + 'ount'] - _0x4abc56['vertexCoun' + 't'], _0xe4fe07['_render']['_isPartOfS' + 'taticBatch'] = ![];
            }
        }
        ['finishInit']() {
            this['_vertexBuf' + 'fer'] && (this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), _0x442335['Resource']['_addGPUMem' + 'ory'](-(this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'])));
            var _0x2acc1d = _0x442335['LayaGL']['instance'], _0x58b8bc = 0x0, _0xbb7513 = 0x0, _0x484caa = this['batchOwner'], _0x47069f = this['_vertexDec' + 'laration']['vertexStri' + 'de'] / 0x4, _0x2c4f60 = new Float32Array(_0x47069f * this['_currentBa' + 'tchVertexC' + 'ount']), _0x1022e4 = new Uint16Array(this['_currentBa' + 'tchIndexCo' + 'unt']);
            this['_vertexBuf' + 'fer'] = new _0x251441(this['_vertexDec' + 'laration']['vertexStri' + 'de'] * this['_currentBa' + 'tchVertexC' + 'ount'], _0x2acc1d['STATIC_DRA' + 'W']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = this['_vertexDec' + 'laration'], this['_indexBuff' + 'er'] = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], this['_currentBa' + 'tchIndexCo' + 'unt'], _0x2acc1d['STATIC_DRA' + 'W']);
            for (var _0xae426f = 0x0, _0x2f2a0b = this['_batchElem' + 'ents']['length']; _0xae426f < _0x2f2a0b; _0xae426f++) {
                var _0x51bdbb = this['_batchElem' + 'ents'][_0xae426f], _0x38d8cd = _0x51bdbb['meshFilter']['sharedMesh'], _0x1e422f = this['_getStatic' + 'BatchBaked' + 'Vertexs'](_0x2c4f60, _0x58b8bc, _0x484caa ? _0x484caa['_transform'] : null, _0x51bdbb['_transform'], _0x51bdbb['_render'], _0x38d8cd), _0x19c2bb = _0x38d8cd['_indexBuff' + 'er']['getData'](), _0x511e5b = _0x58b8bc, _0xe29762 = _0xbb7513 + _0x19c2bb['length'], _0x3b7f79 = _0x51bdbb['_render']['_renderEle' + 'ments'];
                for (var _0x1e6d84 = 0x0, _0x1472a7 = _0x38d8cd['subMeshCou' + 'nt']; _0x1e6d84 < _0x1472a7; _0x1e6d84++) {
                    var _0x25527c = _0x38d8cd['_subMeshes'][_0x1e6d84], _0x13a227 = _0xbb7513 + _0x25527c['_indexStar' + 't'], _0x2ff24f = _0x3b7f79[_0x1e6d84];
                    _0x2ff24f['staticBatc' + 'hIndexStar' + 't'] = _0x13a227, _0x2ff24f['staticBatc' + 'hIndexEnd'] = _0x13a227 + _0x25527c['_indexCoun' + 't'];
                }
                _0x1022e4['set'](_0x19c2bb, _0xbb7513);
                var _0x48eaf5, _0x3eeaf8 = _0x484caa ? _0x51bdbb['_transform']['_isFrontFa' + 'ceInvert'] !== _0x484caa['transform']['_isFrontFa' + 'ceInvert'] : _0x51bdbb['_transform']['_isFrontFa' + 'ceInvert'];
                if (_0x3eeaf8)
                    for (_0x48eaf5 = _0xbb7513; _0x48eaf5 < _0xe29762; _0x48eaf5 += 0x3) {
                        _0x1022e4[_0x48eaf5] = _0x511e5b + _0x1022e4[_0x48eaf5];
                        var _0x5ebb86 = _0x1022e4[_0x48eaf5 + 0x1], _0x36ffef = _0x1022e4[_0x48eaf5 + 0x2];
                        _0x1022e4[_0x48eaf5 + 0x1] = _0x511e5b + _0x36ffef, _0x1022e4[_0x48eaf5 + 0x2] = _0x511e5b + _0x5ebb86;
                    }
                else
                    for (_0x48eaf5 = _0xbb7513; _0x48eaf5 < _0xe29762; _0x48eaf5 += 0x3) {
                        _0x1022e4[_0x48eaf5] = _0x511e5b + _0x1022e4[_0x48eaf5], _0x1022e4[_0x48eaf5 + 0x1] = _0x511e5b + _0x1022e4[_0x48eaf5 + 0x1], _0x1022e4[_0x48eaf5 + 0x2] = _0x511e5b + _0x1022e4[_0x48eaf5 + 0x2];
                    }
                _0xbb7513 += _0x19c2bb['length'], _0x58b8bc += _0x1e422f;
            }
            this['_vertexBuf' + 'fer']['setData'](_0x2c4f60['buffer']), this['_indexBuff' + 'er']['setData'](_0x1022e4);
            var _0x1e40bd = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x442335['Resource']['_addGPUMem' + 'ory'](_0x1e40bd), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
        }
        ['_render'](_0x38906f) {
            this['_bufferSta' + 'te']['bind']();
            var _0x344422 = _0x442335['LayaGL']['instance'], _0x4a0271 = _0x38906f['renderElem' + 'ent'], _0x22eae8 = _0x4a0271['staticBatc' + 'hElementLi' + 'st'], _0x58e646 = _0x22eae8['elements'], _0x33b0b6 = 0x0, _0x3e42c2 = 0x0, _0x564a3e = _0x22eae8['length'];
            for (var _0x2c824c = 0x1; _0x2c824c < _0x564a3e; _0x2c824c++) {
                var _0x55fef4 = _0x58e646[_0x2c824c - 0x1];
                if (_0x55fef4['staticBatc' + 'hIndexEnd'] === _0x58e646[_0x2c824c]['staticBatc' + 'hIndexStar' + 't']) {
                    _0x3e42c2++;
                    continue;
                } else {
                    var _0x3ecc20 = _0x58e646[_0x33b0b6]['staticBatc' + 'hIndexStar' + 't'], _0x336e54 = _0x58e646[_0x3e42c2]['staticBatc' + 'hIndexEnd'] - _0x3ecc20;
                    _0x344422['drawElemen' + 'ts'](_0x344422['TRIANGLES'], _0x336e54, _0x344422['UNSIGNED_S' + 'HORT'], _0x3ecc20 * 0x2), _0x33b0b6 = ++_0x3e42c2, _0x442335['Stat']['trianglesF' + 'aces'] += _0x336e54 / 0x3;
                }
            }
            _0x3ecc20 = _0x58e646[_0x33b0b6]['staticBatc' + 'hIndexStar' + 't'], _0x336e54 = _0x58e646[_0x3e42c2]['staticBatc' + 'hIndexEnd'] - _0x3ecc20, _0x344422['drawElemen' + 'ts'](_0x344422['TRIANGLES'], _0x336e54, _0x344422['UNSIGNED_S' + 'HORT'], _0x3ecc20 * 0x2), _0x442335['Stat']['renderBatc' + 'hes']++, _0x442335['Stat']['savedRende' + 'rBatches'] += _0x564a3e - 0x1, _0x442335['Stat']['trianglesF' + 'aces'] += _0x336e54 / 0x3;
        }
        ['dispose']() {
            var _0x5c9601 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x442335['Resource']['_addGPUMem' + 'ory'](-_0x5c9601), this['_batchElem' + 'ents'] = null, this['batchOwner'] = null, this['_vertexDec' + 'laration'] = null, this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_bufferSta' + 'te'] = null;
        }
    }
    _0x18b0fe['_tempVecto' + 'r30'] = new _0x352206(), _0x18b0fe['_tempVecto' + 'r31'] = new _0x352206(), _0x18b0fe['_tempQuate' + 'rnion0'] = new _0x388291(), _0x18b0fe['_tempMatri' + 'x4x40'] = new _0x4c2288(), _0x18b0fe['_tempMatri' + 'x4x41'] = new _0x4c2288(), _0x18b0fe['_tempMatri' + 'x4x42'] = new _0x4c2288(), _0x18b0fe['maxBatchVe' + 'rtexCount'] = 0xffff, _0x18b0fe['_batchIDCo' + 'unter'] = 0x0;
    class _0xb90358 extends _0x435c23 {
        constructor() {
            super(), this['_opaqueBat' + 'chMarks'] = [], this['_updateCou' + 'ntMark'] = 0x0;
        }
        static ['__init__']() {
            _0xb90358['_verDec'] = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,COLO' + 'R,UV,UV1,T' + 'ANGENT');
        }
        ['_compare'](_0x2c0202, _0x42a884) {
            var _0x4310e4 = _0x2c0202['_render'], _0x28bffc = _0x42a884['_render'], _0x480a11 = _0x2c0202['meshFilter']['sharedMesh'], _0x3fd2e9 = _0x42a884['meshFilter']['sharedMesh'], _0x506953 = _0x4310e4['lightmapIn' + 'dex'] - _0x28bffc['lightmapIn' + 'dex'];
            if (_0x506953 === 0x0) {
                var _0x32c148 = (_0x4310e4['receiveSha' + 'dow'] ? 0x1 : 0x0) - (_0x28bffc['receiveSha' + 'dow'] ? 0x1 : 0x0);
                if (_0x32c148 === 0x0) {
                    var _0x5b97e0 = _0x4310e4['sharedMate' + 'rial'] && _0x28bffc['sharedMate' + 'rial'] ? _0x4310e4['sharedMate' + 'rial']['id'] - _0x28bffc['sharedMate' + 'rial']['id'] : 0x0;
                    if (_0x5b97e0 === 0x0) {
                        var _0x519b79 = _0x480a11['_vertexBuf' + 'fer']['vertexDecl' + 'aration']['id'] - _0x3fd2e9['_vertexBuf' + 'fer']['vertexDecl' + 'aration']['id'];
                        return _0x519b79 === 0x0 ? _0x3fd2e9['_indexBuff' + 'er']['indexCount'] - _0x480a11['_indexBuff' + 'er']['indexCount'] : _0x519b79;
                    } else
                        return _0x5b97e0;
                } else
                    return _0x32c148;
            } else
                return _0x506953;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            var _0x59d792 = this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex']++];
            return !_0x59d792 && (_0x59d792 = new _0x5d8926(), this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex'] - 0x1] = _0x59d792, _0x59d792['staticBatc' + 'hElementLi' + 'st'] = new _0x4a730f()), _0x59d792;
        }
        ['_getStatic' + 'Batch'](_0x4ba1ee, _0x5a0fc1, _0x59313c) {
            var _0x366564 = _0x4ba1ee[_0x59313c];
            return !_0x366564 && (_0x366564 = _0x4ba1ee[_0x59313c] = new _0x18b0fe(_0x5a0fc1, _0xb90358['_verDec']), this['_staticBat' + 'ches'][_0x366564['_batchID']] = _0x366564), _0x366564;
        }
        ['_initStati' + 'cBatchs'](_0x148e8d) {
            var _0x37bb36 = this['_initBatch' + 'Sprites'];
            this['_quickSort'](_0x37bb36, 0x0, _0x37bb36['length'] - 0x1);
            var _0x3d9da3 = [], _0xa64fe2 = ![], _0x241375, _0x1d94f0 = 0x0;
            for (var _0x199916 = 0x0, _0x570cdc = _0x37bb36['length']; _0x199916 < _0x570cdc; _0x199916++) {
                var _0x3a3305 = _0x37bb36[_0x199916];
                if (_0xa64fe2)
                    _0x241375['addTest'](_0x3a3305) ? _0x241375['add'](_0x3a3305) : (_0xa64fe2 = ![], _0x1d94f0++);
                else {
                    var _0x51493c = _0x570cdc - 0x1;
                    _0x199916 !== _0x51493c && (_0x241375 = this['_getStatic' + 'Batch'](_0x3d9da3, _0x148e8d, _0x1d94f0), _0x241375['add'](_0x3a3305), _0xa64fe2 = !![]);
                }
            }
            for (_0x199916 = 0x0, _0x570cdc = _0x3d9da3['length']; _0x199916 < _0x570cdc; _0x199916++) {
                var _0x1b2dec = _0x3d9da3[_0x199916];
                _0x1b2dec && _0x1b2dec['finishInit']();
            }
            this['_initBatch' + 'Sprites']['length'] = 0x0;
        }
        ['_removeRen' + 'derSprite'](_0x585c73) {
            var _0x4c5999 = _0x585c73['_render'], _0x364f00 = _0x4c5999['_staticBat' + 'ch'], _0x3cf9ce = _0x364f00['_batchElem' + 'ents'], _0x1811ad = _0x3cf9ce['indexOf'](_0x585c73);
            if (_0x1811ad !== -0x1) {
                _0x3cf9ce['splice'](_0x1811ad, 0x1), _0x4c5999['_staticBat' + 'ch'] = null;
                var _0x43dad2 = _0x4c5999['_renderEle' + 'ments'];
                for (var _0x51dcd1 = 0x0, _0x708e21 = _0x43dad2['length']; _0x51dcd1 < _0x708e21; _0x51dcd1++)
                    _0x43dad2[_0x51dcd1]['staticBatc' + 'h'] = null;
            }
            _0x3cf9ce['length'] === 0x0 && (delete this['_staticBat' + 'ches'][_0x364f00['_batchID']], _0x364f00['dispose']());
        }
        ['_clear']() {
            super['_clear'](), this['_updateCou' + 'ntMark']++;
        }
        ['_garbageCo' + 'llection']() {
            for (var _0x1f4abd in this['_staticBat' + 'ches']) {
                var _0x3cb77f = this['_staticBat' + 'ches'][_0x1f4abd];
                _0x3cb77f['_batchElem' + 'ents']['length'] === 0x0 && (_0x3cb77f['dispose'](), delete this['_staticBat' + 'ches'][_0x1f4abd]);
            }
        }
        ['getBatchOp' + 'aquaMark'](_0x3c014b, _0x21c7ab, _0x155588, _0x2af26e) {
            var _0x15f54a = _0x21c7ab ? 0x1 : 0x0, _0x4947bd = this['_opaqueBat' + 'chMarks'][_0x3c014b] || (this['_opaqueBat' + 'chMarks'][_0x3c014b] = []), _0x403a95 = _0x4947bd[_0x15f54a] || (_0x4947bd[_0x15f54a] = []), _0x1c5f51 = _0x403a95[_0x155588] || (_0x403a95[_0x155588] = []);
            return _0x1c5f51[_0x2af26e] || (_0x1c5f51[_0x2af26e] = new _0x36391b());
        }
    }
    _0xb90358['instance'] = new _0xb90358(), function (_0x31ce4f) {
        _0x31ce4f[_0x31ce4f['off'] = 0x0] = 'off', _0x31ce4f[_0x31ce4f['simple'] = 0x1] = 'simple';
    }(_0x1f405c['Reflection' + 'ProbeMode'] || (_0x1f405c['Reflection' + 'ProbeMode'] = {}));
    class _0x542d3e extends _0x49f2b6 {
        constructor() {
            super(), this['_boxProjec' + 'tion'] = ![], this['_size'] = new _0x352206(), this['_offset'] = new _0x352206(), this['_reflectio' + 'nHDRParams'] = new _0x18425e(), this['_reflectio' + 'nDecodeFor' + 'mat'] = _0x442335['TextureDec' + 'odeFormat']['Normal'], this['_isScene'] = ![];
        }
        get ['boxProject' + 'ion']() {
            return this['_boxProjec' + 'tion'];
        }
        set ['boxProject' + 'ion'](_0x2c63af) {
            this['_boxProjec' + 'tion'] = _0x2c63af;
        }
        get ['importance']() {
            return this['_importanc' + 'e'];
        }
        set ['importance'](_0xedd8ab) {
            this['_importanc' + 'e'] = _0xedd8ab;
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0x2ecdde) {
            _0x2ecdde = Math['max'](Math['min'](_0x2ecdde, 0x1), 0x0), this['_reflectio' + 'nHDRParams']['x'] = _0x2ecdde;
            if (this['_reflectio' + 'nDecodeFor' + 'mat'] == _0x442335['TextureDec' + 'odeFormat']['RGBM'])
                this['_reflectio' + 'nHDRParams']['x'] *= 0x5;
            this['_intensity'] = _0x2ecdde;
        }
        get ['reflection' + 'Texture']() {
            return this['_reflectio' + 'nTexture'];
        }
        set ['reflection' + 'Texture'](_0x54eedd) {
            this['_reflectio' + 'nTexture'] = _0x54eedd, this['_reflectio' + 'nTexture']['_addRefere' + 'nce']();
        }
        get ['bounds']() {
            return this['_bounds'];
        }
        set ['bounds'](_0x6d8981) {
            this['_bounds'] = _0x6d8981;
        }
        get ['boundsMax']() {
            return this['_bounds']['getMax']();
        }
        get ['boundsMin']() {
            return this['_bounds']['getMin']();
        }
        get ['probePosit' + 'ion']() {
            return this['transform']['position'];
        }
        get ['reflection' + 'HDRParams']() {
            return this['_reflectio' + 'nHDRParams'];
        }
        set ['reflection' + 'HDRParams'](_0x670d1b) {
            this['_reflectio' + 'nHDRParams'] = _0x670d1b;
        }
        ['_parse'](_0x3affae, _0x1daeee) {
            super['_parse'](_0x3affae, _0x1daeee), this['_boxProjec' + 'tion'] = _0x3affae['boxProject' + 'ion'], this['_importanc' + 'e'] = _0x3affae['importance'], this['_reflectio' + 'nTexture'] = _0x442335['Loader']['getRes'](_0x3affae['reflection']);
            var _0x5a3c1e = this['transform']['position'];
            this['_size']['fromArray'](_0x3affae['boxSize']), _0x352206['scale'](this['_size'], 0.5, _0x542d3e['TEMPVECTOR' + '3']), this['_offset']['fromArray'](_0x3affae['boxOffset']);
            var _0x517ec2 = new _0x352206(), _0x498eda = new _0x352206();
            _0x352206['add'](_0x5a3c1e, _0x542d3e['TEMPVECTOR' + '3'], _0x498eda), _0x352206['add'](_0x498eda, this['_offset'], _0x498eda), _0x352206['subtract'](_0x5a3c1e, _0x542d3e['TEMPVECTOR' + '3'], _0x517ec2), _0x352206['add'](_0x517ec2, this['_offset'], _0x517ec2), this['_reflectio' + 'nDecodeFor' + 'mat'] = _0x3affae['reflection' + 'DecodingFo' + 'rmat'], this['intensity'] = _0x3affae['intensity'];
            if (!this['_bounds'])
                this['bounds'] = new _0x1f1598(_0x517ec2, _0x498eda);
            else
                this['_bounds']['setMin'](_0x517ec2), this['_bounds']['setMax'](_0x498eda);
        }
        ['_setIndexI' + 'nReflectio' + 'nList'](_0x113317) {
            this['_indexInRe' + 'flectProbL' + 'ist'] = _0x113317;
        }
        ['_getIndexI' + 'nReflectio' + 'nList']() {
            return this['_indexInRe' + 'flectProbL' + 'ist'];
        }
        ['_onActive']() {
            super['_onActive']();
            if (this['_reflectio' + 'nTexture'])
                this['scene']['_reflectio' + 'nProbeMana' + 'ger']['add'](this);
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e']();
            if (this['reflection' + 'Texture'])
                this['scene']['_reflectio' + 'nProbeMana' + 'ger']['remove'](this);
        }
        ['destroy'](_0x5db3e5 = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x5db3e5), this['_reflectio' + 'nTexture'] && this['_reflectio' + 'nTexture']['_removeRef' + 'erence'](), this['_reflectio' + 'nTexture'] = null, this['_bounds'] = null;
        }
        ['_cloneTo'](_0x3922b1, _0x57a7ec, _0x2992b3) {
            var _0x518832 = _0x3922b1;
            _0x518832['bounds'] = this['bounds'], _0x518832['boxProject' + 'ion'] = this['boxProject' + 'ion'], _0x518832['importance'] = this['importance'], _0x518832['_size'] = this['_size'], _0x518832['_offset'] = this['_offset'], _0x518832['intensity'] = this['intensity'], _0x518832['reflection' + 'HDRParams'] = this['reflection' + 'HDRParams'], super['_cloneTo'](_0x3922b1, _0x57a7ec, _0x2992b3);
        }
    }
    _0x542d3e['TEMPVECTOR' + '3'] = new _0x352206(), _0x542d3e['defaultTex' + 'tureHDRDec' + 'odeValues'] = new _0x18425e(0x1, 0x1, 0x0, 0x0);
    class _0x590787 extends _0x442335['EventDispa' + 'tcher'] {
        constructor(_0x64373f) {
            super(), this['_lightmapS' + 'caleOffset'] = new _0x18425e(0x1, 0x1, 0x0, 0x0), this['_indexInLi' + 'st'] = -0x1, this['_indexInCa' + 'stShadowLi' + 'st'] = -0x1, this['_boundsCha' + 'nge'] = !![], this['_castShado' + 'w'] = ![], this['_supportOc' + 'tree'] = !![], this['_sharedMat' + 'erials'] = [], this['_renderMar' + 'k'] = -0x1, this['_indexInOc' + 'treeMotion' + 'List'] = -0x1, this['_reflectio' + 'nMode'] = _0x1f405c['Reflection' + 'ProbeMode']['simple'], this['_updateMar' + 'k'] = -0x1, this['_updateRen' + 'derType'] = -0x1, this['_isPartOfS' + 'taticBatch'] = ![], this['_staticBat' + 'ch'] = null, this['_id'] = ++_0x590787['_uniqueIDC' + 'ounter'], this['_indexInCa' + 'stShadowLi' + 'st'] = -0x1, this['_bounds'] = new _0x1f1598(_0x352206['_ZERO'], _0x352206['_ZERO']), this['_renderEle' + 'ments'] = [], this['_owner'] = _0x64373f, this['_enable'] = !![], this['_materials' + 'Instance'] = [], this['_shaderVal' + 'ues'] = new _0x1634f4(null), this['lightmapIn' + 'dex'] = -0x1, this['receiveSha' + 'dow'] = ![], this['sortingFud' + 'ge'] = 0x0, _0x64373f && this['_owner']['transform']['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['lightmapIn' + 'dex']() {
            return this['_lightmapI' + 'ndex'];
        }
        set ['lightmapIn' + 'dex'](_0x25c4fb) {
            this['_lightmapI' + 'ndex'] = _0x25c4fb;
        }
        get ['lightmapSc' + 'aleOffset']() {
            return this['_lightmapS' + 'caleOffset'];
        }
        set ['lightmapSc' + 'aleOffset'](_0x4ec01e) {
            if (!_0x4ec01e)
                throw 'BaseRender' + ':\x20lightmap' + 'ScaleOffse' + 't\x20can\x27t\x20be' + '\x20null.';
            this['_lightmapS' + 'caleOffset'] = _0x4ec01e, this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['LIGHTMAPSC' + 'ALEOFFSET'], _0x4ec01e);
        }
        get ['enable']() {
            return this['_enable'];
        }
        set ['enable'](_0x13293a) {
            this['_enable'] = !!_0x13293a;
        }
        get ['material']() {
            var _0x4451ab = this['_sharedMat' + 'erials'][0x0];
            if (_0x4451ab && !this['_materials' + 'Instance'][0x0]) {
                var _0x5ec844 = this['_getInstan' + 'ceMaterial'](_0x4451ab, 0x0), _0x156ca1 = this['_renderEle' + 'ments'][0x0];
                _0x156ca1 && (_0x156ca1['material'] = _0x5ec844);
            }
            return this['_sharedMat' + 'erials'][0x0];
        }
        set ['material'](_0x347c3d) {
            this['sharedMate' + 'rial'] = _0x347c3d, this['_isSupport' + 'Reflection']();
        }
        get ['materials']() {
            for (var _0x28e581 = 0x0, _0x4b75df = this['_sharedMat' + 'erials']['length']; _0x28e581 < _0x4b75df; _0x28e581++) {
                if (!this['_materials' + 'Instance'][_0x28e581]) {
                    var _0x526b81 = this['_getInstan' + 'ceMaterial'](this['_sharedMat' + 'erials'][_0x28e581], _0x28e581), _0x290744 = this['_renderEle' + 'ments'][_0x28e581];
                    _0x290744 && (_0x290744['material'] = _0x526b81);
                }
            }
            return this['_sharedMat' + 'erials']['slice']();
        }
        set ['materials'](_0x1c2761) {
            this['sharedMate' + 'rials'] = _0x1c2761, this['_isSupport' + 'Reflection']();
        }
        get ['sharedMate' + 'rial']() {
            return this['_sharedMat' + 'erials'][0x0];
        }
        set ['sharedMate' + 'rial'](_0x4e633c) {
            var _0x5b2789 = this['_sharedMat' + 'erials'][0x0];
            if (_0x5b2789 !== _0x4e633c) {
                this['_sharedMat' + 'erials'][0x0] = _0x4e633c, this['_materials' + 'Instance'][0x0] = ![], this['_changeMat' + 'erialRefer' + 'ence'](_0x5b2789, _0x4e633c);
                var _0x2f0d10 = this['_renderEle' + 'ments'][0x0];
                _0x2f0d10 && (_0x2f0d10['material'] = _0x4e633c);
            }
            this['_isSupport' + 'Reflection']();
        }
        get ['sharedMate' + 'rials']() {
            return this['_sharedMat' + 'erials']['slice']();
        }
        set ['sharedMate' + 'rials'](_0x2eb39) {
            var _0x1a1427 = this['_materials' + 'Instance'], _0x1ff707 = this['_sharedMat' + 'erials'];
            for (var _0x28b1c1 = 0x0, _0x827739 = _0x1ff707['length']; _0x28b1c1 < _0x827739; _0x28b1c1++) {
                var _0xc6d2e4 = _0x1ff707[_0x28b1c1];
                _0xc6d2e4 && _0xc6d2e4['_removeRef' + 'erence']();
            }
            if (_0x2eb39) {
                var _0x36f6b2 = _0x2eb39['length'];
                _0x1a1427['length'] = _0x36f6b2, _0x1ff707['length'] = _0x36f6b2;
                for (_0x28b1c1 = 0x0; _0x28b1c1 < _0x36f6b2; _0x28b1c1++) {
                    _0xc6d2e4 = _0x1ff707[_0x28b1c1];
                    var _0x16b187 = _0x2eb39[_0x28b1c1];
                    if (_0xc6d2e4 !== _0x16b187) {
                        _0x1a1427[_0x28b1c1] = ![];
                        var _0x531d39 = this['_renderEle' + 'ments'][_0x28b1c1];
                        _0x531d39 && (_0x531d39['material'] = _0x16b187);
                    }
                    _0x16b187 && _0x16b187['_addRefere' + 'nce'](), _0x1ff707[_0x28b1c1] = _0x16b187;
                }
            } else
                throw new Error('BaseRender' + ':\x20shadredM' + 'aterials\x20v' + 'alue\x20can\x27t' + '\x20be\x20null.');
            this['_isSupport' + 'Reflection']();
        }
        get ['bounds']() {
            return this['_boundsCha' + 'nge'] && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = ![]), this['_bounds'];
        }
        set ['receiveSha' + 'dow'](_0x26d26a) {
            if (this['_receiveSh' + 'adow'] !== _0x26d26a) {
                this['_receiveSh' + 'adow'] = _0x26d26a;
                if (_0x26d26a)
                    this['_shaderVal' + 'ues']['addDefine'](_0x22d3a2['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x22d3a2['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW']);
            }
        }
        get ['receiveSha' + 'dow']() {
            return this['_receiveSh' + 'adow'];
        }
        get ['castShadow']() {
            return this['_castShado' + 'w'];
        }
        set ['castShadow'](_0x2ceeca) {
            this['_castShado' + 'w'] = _0x2ceeca;
        }
        get ['isPartOfSt' + 'aticBatch']() {
            return this['_isPartOfS' + 'taticBatch'];
        }
        get ['isRender']() {
            return this['_renderMar' + 'k'] == -0x1 || this['_renderMar' + 'k'] == _0x442335['Stat']['loopCount'] - 0x1;
        }
        set ['reflection' + 'Mode'](_0xd89c60) {
            this['_reflectio' + 'nMode'] = _0xd89c60;
        }
        get ['reflection' + 'Mode']() {
            return this['_reflectio' + 'nMode'];
        }
        ['_getOctree' + 'Node']() {
            return this['_octreeNod' + 'e'];
        }
        ['_setOctree' + 'Node'](_0x3fe094) {
            !_0x3fe094 && (this['_indexInOc' + 'treeMotion' + 'List'] !== -0x1 && this['_octreeNod' + 'e']['_octree']['removeMoti' + 'onObject'](this)), this['_octreeNod' + 'e'] = _0x3fe094;
        }
        ['_getIndexI' + 'nMotionLis' + 't']() {
            return this['_indexInOc' + 'treeMotion' + 'List'];
        }
        ['_setIndexI' + 'nMotionLis' + 't'](_0x217ff9) {
            this['_indexInOc' + 'treeMotion' + 'List'] = _0x217ff9;
        }
        ['_changeMat' + 'erialRefer' + 'ence'](_0x59146d, _0xbf1c1) {
            _0x59146d && _0x59146d['_removeRef' + 'erence'](), _0xbf1c1['_addRefere' + 'nce']();
        }
        ['_getInstan' + 'ceMaterial'](_0x3f2baa, _0x579657) {
            var _0x36b6ac = _0x3f2baa['clone']();
            return _0x36b6ac['name'] = _0x36b6ac['name'] + '(Instance)', this['_materials' + 'Instance'][_0x579657] = !![], this['_changeMat' + 'erialRefer' + 'ence'](this['_sharedMat' + 'erials'][_0x579657], _0x36b6ac), this['_sharedMat' + 'erials'][_0x579657] = _0x36b6ac, _0x36b6ac;
        }
        ['_isSupport' + 'Reflection']() {
            this['_surportRe' + 'flectionPr' + 'obe'] = ![];
            var _0x4751a9 = this['_sharedMat' + 'erials'];
            for (var _0x32be12 = 0x0, _0x8b9020 = _0x4751a9['length']; _0x32be12 < _0x8b9020; _0x32be12++) {
                var _0x36344d = _0x4751a9[_0x32be12];
                this['_surportRe' + 'flectionPr' + 'obe'] = this['_surportRe' + 'flectionPr' + 'obe'] || _0x36344d && _0x36344d['_shader']['_supportRe' + 'flectionPr' + 'obe'];
            }
        }
        ['_addReflec' + 'tionProbeU' + 'pdate']() {
            this['_surportRe' + 'flectionPr' + 'obe'] && this['_reflectio' + 'nMode'] == 0x1 && this['_scene']['_reflectio' + 'nProbeMana' + 'ger']['addMotionO' + 'bject'](this);
        }
        ['_applyLigh' + 'tMapParams']() {
            var _0x56f219 = this['_scene']['lightmaps'], _0x46f145 = this['_shaderVal' + 'ues'], _0x52bf26 = this['_lightmapI' + 'ndex'];
            if (_0x52bf26 >= 0x0 && _0x52bf26 < _0x56f219['length']) {
                var _0x51d8b2 = _0x56f219[_0x52bf26];
                _0x46f145['setTexture'](_0x22d3a2['LIGHTMAP'], _0x51d8b2['lightmapCo' + 'lor']), _0x46f145['addDefine'](_0x22d3a2['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), _0x51d8b2['lightmapDi' + 'rection'] ? (_0x46f145['setTexture'](_0x22d3a2['LIGHTMAP_D' + 'IRECTION'], _0x51d8b2['lightmapDi' + 'rection']), _0x46f145['addDefine'](_0x22d3a2['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL'])) : _0x46f145['removeDefi' + 'ne'](_0x22d3a2['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL']);
            } else
                _0x46f145['removeDefi' + 'ne'](_0x22d3a2['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), _0x46f145['removeDefi' + 'ne'](_0x22d3a2['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL']);
        }
        ['_onWorldMa' + 'tNeedChang' + 'e'](_0x399cca) {
            this['_boundsCha' + 'nge'] = !![];
            if (this['_octreeNod' + 'e']) {
                _0x399cca &= _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'];
                if (_0x399cca) {
                    if (this['_indexInOc' + 'treeMotion' + 'List'] === -0x1)
                        this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this);
                }
            }
            this['_addReflec' + 'tionProbeU' + 'pdate']();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            throw 'BaseRender' + ':\x20must\x20ove' + 'rride\x20it.';
        }
        ['_getIndexI' + 'nList']() {
            return this['_indexInLi' + 'st'];
        }
        ['_setIndexI' + 'nList'](_0x4538f8) {
            this['_indexInLi' + 'st'] = _0x4538f8;
        }
        ['_setBelong' + 'Scene'](_0x54cac1) {
            this['_scene'] = _0x54cac1;
        }
        ['_needRende' + 'r'](_0x100d82, _0xd3fdc2) {
            return !![];
        }
        ['_renderUpd' + 'ate'](_0x323fec, _0x3dd16a) {
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x3fc436, _0x1e5997) {
        }
        ['_revertBat' + 'chRenderUp' + 'date'](_0x3860cb) {
        }
        ['_destroy']() {
            this['_indexInOc' + 'treeMotion' + 'List'] !== -0x1 && this['_octreeNod' + 'e']['_octree']['removeMoti' + 'onObject'](this), this['offAll']();
            var _0x5a0f13 = 0x0, _0x4e2538 = 0x0;
            for (_0x5a0f13 = 0x0, _0x4e2538 = this['_renderEle' + 'ments']['length']; _0x5a0f13 < _0x4e2538; _0x5a0f13++)
                this['_renderEle' + 'ments'][_0x5a0f13]['destroy']();
            for (_0x5a0f13 = 0x0, _0x4e2538 = this['_sharedMat' + 'erials']['length']; _0x5a0f13 < _0x4e2538; _0x5a0f13++)
                this['_sharedMat' + 'erials'][_0x5a0f13]['destroyed'] || this['_sharedMat' + 'erials'][_0x5a0f13]['_removeRef' + 'erence']();
            this['_renderEle' + 'ments'] = null, this['_owner'] = null, this['_sharedMat' + 'erials'] = null, this['_bounds'] = null, this['_lightmapS' + 'caleOffset'] = null;
        }
        ['markAsUnSt' + 'atic']() {
            this['_isPartOfS' + 'taticBatch'] && (_0xb90358['instance']['_removeRen' + 'derSprite'](this['_owner']), this['_isPartOfS' + 'taticBatch'] = ![]);
        }
    }
    _0x590787['_tempBound' + 'BoxCorners'] = [
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206(),
        new _0x352206()
    ], _0x590787['_uniqueIDC' + 'ounter'] = 0x0, _0x590787['_defaultLi' + 'ghtmapScal' + 'eOffset'] = new _0x18425e(0x1, 0x1, 0x0, 0x0);
    class _0x308e99 extends _0x590787 {
        constructor(_0x46e603) {
            super(_0x46e603), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x4c2288();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x1c369b = this['_owner']['transform']['worldMatri' + 'x'], _0xcef5a5 = this['_owner']['_geometryF' + 'ilter'];
            _0xcef5a5['_reCalcula' + 'teBound'](), _0xcef5a5['_bounds']['_tranform'](_0x1c369b, this['_bounds']);
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x1c192d, _0x2ccbff) {
            var _0x37a8d0 = _0x1c192d['projection' + 'ViewMatrix'], _0xcc1d8f = this['_shaderVal' + 'ues'];
            if (_0x2ccbff) {
                var _0x1431d7 = _0x2ccbff['worldMatri' + 'x'];
                _0xcc1d8f['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x1431d7), _0x4c2288['multiply'](_0x37a8d0, _0x1431d7, this['_projectio' + 'nViewWorld' + 'Matrix']), _0xcc1d8f['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
            } else
                _0xcc1d8f['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x4c2288['DEFAULT']), _0xcc1d8f['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], _0x37a8d0);
        }
    }
    class _0x2a91dd extends _0x22d3a2 {
        constructor(_0x567619 = 0x2, _0xf18ce = null) {
            super(_0xf18ce), this['_isRenderA' + 'ctive'] = ![], this['_isInRende' + 'rs'] = ![], this['_geometryF' + 'ilter'] = new _0x350bde(this, _0x567619), this['_render'] = new _0x308e99(this), this['_changeRen' + 'derObjects'](this['_render'], 0x0, _0x4ce9d0['defaultMat' + 'erial']);
        }
        get ['maxLineCou' + 'nt']() {
            return this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'];
        }
        set ['maxLineCou' + 'nt'](_0x32e7bd) {
            this['_geometryF' + 'ilter']['_resizeLin' + 'eData'](_0x32e7bd), this['_geometryF' + 'ilter']['_lineCount'] = Math['min'](this['_geometryF' + 'ilter']['_lineCount'], _0x32e7bd);
        }
        get ['lineCount']() {
            return this['_geometryF' + 'ilter']['_lineCount'];
        }
        set ['lineCount'](_0x5ae7a5) {
            if (_0x5ae7a5 > this['maxLineCou' + 'nt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20c' + 'an\x27t\x20large' + '\x20than\x20maxL' + 'ineCount';
            else
                this['_geometryF' + 'ilter']['_lineCount'] = _0x5ae7a5;
        }
        get ['pixelLineR' + 'enderer']() {
            return this['_render'];
        }
        ['_onInActiv' + 'e']() {
            _0x442335['Stat']['spriteCoun' + 't']--, this['_geometryF' + 'ilter']['_lineCount'] != 0x0 && this['_isRenderA' + 'ctive'] && (this['_scene']['_removeRen' + 'derObject'](this['_render']), this['_isInRende' + 'rs'] = ![]), this['_isRenderA' + 'ctive'] = ![];
        }
        ['_onActive']() {
            _0x442335['Stat']['spriteCoun' + 't']++, this['_isRenderA' + 'ctive'] = !![], this['_geometryF' + 'ilter']['_lineCount'] != 0x0 && (this['_scene']['_addRender' + 'Object'](this['_render']), this['_isInRende' + 'rs'] = !![]);
        }
        ['_changeRen' + 'derObjects'](_0x11d9f5, _0x566c45, _0x48272f) {
            var _0x425964 = this['_render']['_renderEle' + 'ments'];
            _0x48272f || (_0x48272f = _0x4ce9d0['defaultMat' + 'erial']);
            var _0x1bf28b = _0x425964[_0x566c45];
            _0x1bf28b || (_0x1bf28b = _0x425964[_0x566c45] = new _0x5ca4bd()), _0x1bf28b['setTransfo' + 'rm'](this['_transform']), _0x1bf28b['setGeometr' + 'y'](this['_geometryF' + 'ilter']), _0x1bf28b['render'] = this['_render'], _0x1bf28b['material'] = _0x48272f;
        }
        ['addLine'](_0x4d0bf2, _0x37ac6e, _0x332aca, _0x936690) {
            if (this['_geometryF' + 'ilter']['_lineCount'] !== this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'])
                this['_geometryF' + 'ilter']['_updateLin' + 'eData'](this['_geometryF' + 'ilter']['_lineCount']++, _0x4d0bf2, _0x37ac6e, _0x332aca, _0x936690);
            else
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20h' + 'as\x20equal\x20w' + 'ith\x20maxLin' + 'eCount.';
            this['_isRenderA' + 'ctive'] && !this['_isInRende' + 'rs'] && this['_geometryF' + 'ilter']['_lineCount'] > 0x0 && (this['_scene']['_addRender' + 'Object'](this['_render']), this['_isInRende' + 'rs'] = !![]);
        }
        ['addLines'](_0x5ad7c2) {
            var _0x4fda48 = this['_geometryF' + 'ilter']['_lineCount'], _0x4c9587 = _0x5ad7c2['length'];
            if (_0x4fda48 + _0x4c9587 > this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20p' + 'lus\x20lines\x20' + 'count\x20must' + '\x20less\x20than' + '\x20maxLineCo' + 'unt.';
            else
                this['_geometryF' + 'ilter']['_updateLin' + 'eDatas'](_0x4fda48, _0x5ad7c2), this['_geometryF' + 'ilter']['_lineCount'] += _0x4c9587;
            this['_isRenderA' + 'ctive'] && !this['_isInRende' + 'rs'] && this['_geometryF' + 'ilter']['_lineCount'] > 0x0 && (this['_scene']['_addRender' + 'Object'](this['_render']), this['_isInRende' + 'rs'] = !![]);
        }
        ['removeLine'](_0x36e0b0) {
            if (_0x36e0b0 < this['_geometryF' + 'ilter']['_lineCount'])
                this['_geometryF' + 'ilter']['_removeLin' + 'eData'](_0x36e0b0);
            else
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_isRenderA' + 'ctive'] && this['_isInRende' + 'rs'] && this['_geometryF' + 'ilter']['_lineCount'] == 0x0 && (this['_scene']['_removeRen' + 'derObject'](this['_render']), this['_isInRende' + 'rs'] = ![]);
        }
        ['setLine'](_0x169228, _0x3887ce, _0x2ff1ca, _0x451b5e, _0x39db89) {
            if (_0x169228 < this['_geometryF' + 'ilter']['_lineCount'])
                this['_geometryF' + 'ilter']['_updateLin' + 'eData'](_0x169228, _0x3887ce, _0x2ff1ca, _0x451b5e, _0x39db89);
            else
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
        }
        ['getLine'](_0x4be52d, _0xa83de0) {
            if (_0x4be52d < this['lineCount'])
                this['_geometryF' + 'ilter']['_getLineDa' + 'ta'](_0x4be52d, _0xa83de0);
            else
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
        }
        ['clear']() {
            this['_geometryF' + 'ilter']['_lineCount'] = 0x0, this['_isRenderA' + 'ctive'] && this['_isInRende' + 'rs'] && (this['_scene']['_removeRen' + 'derObject'](this['_render']), this['_isInRende' + 'rs'] = ![]);
        }
        ['_create']() {
            return new _0x2a91dd();
        }
    }
    class _0x185a54 {
        constructor(_0x45088a = ![]) {
            this['isTranspar' + 'ent'] = ![], this['elements'] = new _0x4a730f(), this['lastTransp' + 'arentRende' + 'rElement'] = null, this['lastTransp' + 'arentBatch' + 'ed'] = ![], this['isTranspar' + 'ent'] = _0x45088a;
        }
        ['_compare'](_0x4c1215, _0x588d19) {
            var _0x7a1b62 = _0x4c1215['material']['renderQueu' + 'e'] - _0x588d19['material']['renderQueu' + 'e'];
            if (_0x7a1b62 === 0x0) {
                var _0x2cd001 = this['isTranspar' + 'ent'] ? _0x588d19['render']['_distanceF' + 'orSort'] - _0x4c1215['render']['_distanceF' + 'orSort'] : _0x4c1215['render']['_distanceF' + 'orSort'] - _0x588d19['render']['_distanceF' + 'orSort'];
                return _0x2cd001 + _0x588d19['render']['sortingFud' + 'ge'] - _0x4c1215['render']['sortingFud' + 'ge'];
            } else
                return _0x7a1b62;
        }
        ['_partition' + 'RenderObje' + 'ct'](_0x381b1c, _0x3ebe43) {
            var _0x500c63 = this['elements']['elements'], _0x144580 = _0x500c63[Math['floor']((_0x3ebe43 + _0x381b1c) / 0x2)];
            while (_0x381b1c <= _0x3ebe43) {
                while (this['_compare'](_0x500c63[_0x381b1c], _0x144580) < 0x0)
                    _0x381b1c++;
                while (this['_compare'](_0x500c63[_0x3ebe43], _0x144580) > 0x0)
                    _0x3ebe43--;
                if (_0x381b1c < _0x3ebe43) {
                    var _0x14f345 = _0x500c63[_0x381b1c];
                    _0x500c63[_0x381b1c] = _0x500c63[_0x3ebe43], _0x500c63[_0x3ebe43] = _0x14f345, _0x381b1c++, _0x3ebe43--;
                } else {
                    if (_0x381b1c === _0x3ebe43) {
                        _0x381b1c++;
                        break;
                    }
                }
            }
            return _0x381b1c;
        }
        ['_quickSort'](_0x31fa9d, _0x25d218) {
            if (this['elements']['length'] > 0x1) {
                var _0x20cd3f = this['_partition' + 'RenderObje' + 'ct'](_0x31fa9d, _0x25d218), _0x309973 = _0x20cd3f - 0x1;
                if (_0x31fa9d < _0x309973)
                    this['_quickSort'](_0x31fa9d, _0x309973);
                if (_0x20cd3f < _0x25d218)
                    this['_quickSort'](_0x20cd3f, _0x25d218);
            }
        }
        ['_render'](_0x7969ea) {
            var _0x3454c0 = this['elements']['elements'];
            for (var _0x1759e2 = 0x0, _0x5337b5 = this['elements']['length']; _0x1759e2 < _0x5337b5; _0x1759e2++)
                _0x3454c0[_0x1759e2]['_render'](_0x7969ea);
        }
        ['clear']() {
            this['elements']['length'] = 0x0, this['lastTransp' + 'arentRende' + 'rElement'] = null, this['lastTransp' + 'arentBatch' + 'ed'] = ![];
        }
    }
    class _0xabc37b {
        constructor(_0x96e8e1, _0x2f912, _0x2fad07, _0x477a9a) {
            this['_bounds'] = new _0x2bd0ec(new _0x352206(), new _0x352206()), this['_objects'] = [], this['_isContaio' + 'n'] = ![], this['center'] = new _0x352206(), this['baseLength'] = 0x0, this['_setValues'](_0x96e8e1, _0x2f912, _0x2fad07, _0x477a9a);
        }
        static ['_encapsula' + 'tes'](_0x430270, _0x2a456e) {
            return _0xefe37['boxContain' + 'sBox'](_0x430270, _0x2a456e) == _0x93aded['Contains'];
        }
        ['_setValues'](_0x1a233a, _0x3e09ae, _0x20144d, _0x3d8826) {
            this['_octree'] = _0x1a233a, this['_parent'] = _0x3e09ae, this['baseLength'] = _0x20144d, _0x3d8826['cloneTo'](this['center']);
            var _0x1527c7 = this['_bounds']['min'], _0x474a63 = this['_bounds']['max'], _0x19a178 = _0x1a233a['_looseness'] * _0x20144d / 0x2;
            _0x1527c7['setValue'](_0x3d8826['x'] - _0x19a178, _0x3d8826['y'] - _0x19a178, _0x3d8826['z'] - _0x19a178), _0x474a63['setValue'](_0x3d8826['x'] + _0x19a178, _0x3d8826['y'] + _0x19a178, _0x3d8826['z'] + _0x19a178);
        }
        ['_getChildB' + 'ound'](_0x16bcb7) {
            if (this['_children'] != null && this['_children'][_0x16bcb7])
                return this['_children'][_0x16bcb7]['_bounds'];
            else {
                var _0x4789ec = this['baseLength'] / 0x4, _0x3bb0fc = this['baseLength'] / 0x2 * this['_octree']['_looseness'] / 0x2, _0x2dc1b5 = _0xabc37b['_tempBound' + 'Box'], _0x3fe15a = _0x2dc1b5['min'], _0x136eba = _0x2dc1b5['max'];
                switch (_0x16bcb7) {
                case 0x0:
                    _0x3fe15a['x'] = this['center']['x'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] - _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] - _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] + _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] - _0x4789ec + _0x3bb0fc;
                    break;
                case 0x1:
                    _0x3fe15a['x'] = this['center']['x'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] - _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] + _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] + _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] - _0x4789ec + _0x3bb0fc;
                    break;
                case 0x2:
                    _0x3fe15a['x'] = this['center']['x'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] + _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] - _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] + _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] + _0x4789ec + _0x3bb0fc;
                    break;
                case 0x3:
                    _0x3fe15a['x'] = this['center']['x'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] + _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] + _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] + _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] + _0x4789ec + _0x3bb0fc;
                    break;
                case 0x4:
                    _0x3fe15a['x'] = this['center']['x'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] - _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] - _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] - _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] - _0x4789ec + _0x3bb0fc;
                    break;
                case 0x5:
                    _0x3fe15a['x'] = this['center']['x'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] - _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] + _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] - _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] - _0x4789ec + _0x3bb0fc;
                    break;
                case 0x6:
                    _0x3fe15a['x'] = this['center']['x'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] + _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] - _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] - _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] + _0x4789ec + _0x3bb0fc;
                    break;
                case 0x7:
                    _0x3fe15a['x'] = this['center']['x'] + _0x4789ec - _0x3bb0fc, _0x3fe15a['y'] = this['center']['y'] - _0x4789ec - _0x3bb0fc, _0x3fe15a['z'] = this['center']['z'] + _0x4789ec - _0x3bb0fc, _0x136eba['x'] = this['center']['x'] + _0x4789ec + _0x3bb0fc, _0x136eba['y'] = this['center']['y'] - _0x4789ec + _0x3bb0fc, _0x136eba['z'] = this['center']['z'] + _0x4789ec + _0x3bb0fc;
                    break;
                default:
                }
                return _0x2dc1b5;
            }
        }
        ['_getChildC' + 'enter'](_0x20133c) {
            if (this['_children'] != null)
                return this['_children'][_0x20133c]['center'];
            else {
                var _0x2e2c70 = this['baseLength'] / 0x4, _0x102256 = _0xabc37b['_tempVecto' + 'r30'];
                switch (_0x20133c) {
                case 0x0:
                    _0x102256['x'] = this['center']['x'] - _0x2e2c70, _0x102256['y'] = this['center']['y'] + _0x2e2c70, _0x102256['z'] = this['center']['z'] - _0x2e2c70;
                    break;
                case 0x1:
                    _0x102256['x'] = this['center']['x'] + _0x2e2c70, _0x102256['y'] = this['center']['y'] + _0x2e2c70, _0x102256['z'] = this['center']['z'] - _0x2e2c70;
                    break;
                case 0x2:
                    _0x102256['x'] = this['center']['x'] - _0x2e2c70, _0x102256['y'] = this['center']['y'] + _0x2e2c70, _0x102256['z'] = this['center']['z'] + _0x2e2c70;
                    break;
                case 0x3:
                    _0x102256['x'] = this['center']['x'] + _0x2e2c70, _0x102256['y'] = this['center']['y'] + _0x2e2c70, _0x102256['z'] = this['center']['z'] + _0x2e2c70;
                    break;
                case 0x4:
                    _0x102256['x'] = this['center']['x'] - _0x2e2c70, _0x102256['y'] = this['center']['y'] - _0x2e2c70, _0x102256['z'] = this['center']['z'] - _0x2e2c70;
                    break;
                case 0x5:
                    _0x102256['x'] = this['center']['x'] + _0x2e2c70, _0x102256['y'] = this['center']['y'] - _0x2e2c70, _0x102256['z'] = this['center']['z'] - _0x2e2c70;
                    break;
                case 0x6:
                    _0x102256['x'] = this['center']['x'] - _0x2e2c70, _0x102256['y'] = this['center']['y'] - _0x2e2c70, _0x102256['z'] = this['center']['z'] + _0x2e2c70;
                    break;
                case 0x7:
                    _0x102256['x'] = this['center']['x'] + _0x2e2c70, _0x102256['y'] = this['center']['y'] - _0x2e2c70, _0x102256['z'] = this['center']['z'] + _0x2e2c70;
                    break;
                default:
                }
                return _0x102256;
            }
        }
        ['_getChild'](_0x2a87df) {
            var _0x36109d = this['baseLength'] / 0x4;
            this['_children'] || (this['_children'] = []);
            switch (_0x2a87df) {
            case 0x0:
                return this['_children'][0x0] || (this['_children'][0x0] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] + -_0x36109d, this['center']['y'] + _0x36109d, this['center']['z'] - _0x36109d)));
            case 0x1:
                return this['_children'][0x1] || (this['_children'][0x1] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] + _0x36109d, this['center']['y'] + _0x36109d, this['center']['z'] - _0x36109d)));
            case 0x2:
                return this['_children'][0x2] || (this['_children'][0x2] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] - _0x36109d, this['center']['y'] + _0x36109d, this['center']['z'] + _0x36109d)));
            case 0x3:
                return this['_children'][0x3] || (this['_children'][0x3] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] + _0x36109d, this['center']['y'] + _0x36109d, this['center']['z'] + _0x36109d)));
            case 0x4:
                return this['_children'][0x4] || (this['_children'][0x4] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] - _0x36109d, this['center']['y'] - _0x36109d, this['center']['z'] - _0x36109d)));
            case 0x5:
                return this['_children'][0x5] || (this['_children'][0x5] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] + _0x36109d, this['center']['y'] - _0x36109d, this['center']['z'] - _0x36109d)));
            case 0x6:
                return this['_children'][0x6] || (this['_children'][0x6] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] - _0x36109d, this['center']['y'] - _0x36109d, this['center']['z'] + _0x36109d)));
            case 0x7:
                return this['_children'][0x7] || (this['_children'][0x7] = new _0xabc37b(this['_octree'], this, this['baseLength'] / 0x2, new _0x352206(this['center']['x'] + _0x36109d, this['center']['y'] - _0x36109d, this['center']['z'] + _0x36109d)));
            default:
                throw 'BoundsOctr' + 'eeNode:\x20un' + 'known\x20inde' + 'x.';
            }
        }
        ['_shouldMer' + 'ge']() {
            var _0x111526 = this['_objects']['length'];
            for (var _0x98d3ef = 0x0; _0x98d3ef < 0x8; _0x98d3ef++) {
                var _0x26d703 = this['_children'][_0x98d3ef];
                if (_0x26d703) {
                    if (_0x26d703['_children'] != null)
                        return ![];
                    _0x111526 += _0x26d703['_objects']['length'];
                }
            }
            return _0x111526 <= _0xabc37b['_NUM_OBJEC' + 'TS_ALLOWED'];
        }
        ['_mergeChil' + 'dren']() {
            for (var _0x11c593 = 0x0; _0x11c593 < 0x8; _0x11c593++) {
                var _0x89e718 = this['_children'][_0x11c593];
                if (_0x89e718) {
                    _0x89e718['_parent'] = null;
                    var _0x5277d5 = _0x89e718['_objects'];
                    for (var _0x43dd09 = _0x5277d5['length'] - 0x1; _0x43dd09 >= 0x0; _0x43dd09--) {
                        var _0x2d308f = _0x5277d5[_0x43dd09];
                        this['_objects']['push'](_0x2d308f), _0x2d308f['_setOctree' + 'Node'](this);
                    }
                }
            }
            this['_children'] = null;
        }
        ['_merge']() {
            if (this['_children'] === null) {
                var _0x1f94cc = this['_parent'];
                _0x1f94cc && _0x1f94cc['_shouldMer' + 'ge']() && (_0x1f94cc['_mergeChil' + 'dren'](), _0x1f94cc['_merge']());
            }
        }
        ['_checkAddN' + 'ode'](_0x1ebbda) {
            if (this['_children'] == null) {
                if (this['_objects']['length'] < _0xabc37b['_NUM_OBJEC' + 'TS_ALLOWED'] || this['baseLength'] / 0x2 < this['_octree']['_minSize'])
                    return this;
                for (var _0x266574 = this['_objects']['length'] - 0x1; _0x266574 >= 0x0; _0x266574--) {
                    var _0x135b01 = this['_objects'][_0x266574], _0x11a0d4 = this['_bestFitCh' + 'ild'](_0x135b01['bounds']['getCenter']());
                    _0xabc37b['_encapsula' + 'tes'](this['_getChildB' + 'ound'](_0x11a0d4), _0x135b01['bounds']['_getBoundB' + 'ox']()) && (this['_objects']['splice'](this['_objects']['indexOf'](_0x135b01), 0x1), this['_getChild'](_0x11a0d4)['_add'](_0x135b01));
                }
            }
            var _0x3255f1 = this['_bestFitCh' + 'ild'](_0x1ebbda['bounds']['getCenter']());
            if (_0xabc37b['_encapsula' + 'tes'](this['_getChildB' + 'ound'](_0x3255f1), _0x1ebbda['bounds']['_getBoundB' + 'ox']()))
                return this['_getChild'](_0x3255f1)['_checkAddN' + 'ode'](_0x1ebbda);
            else
                return this;
        }
        ['_add'](_0x583d83) {
            var _0x497c68 = this['_checkAddN' + 'ode'](_0x583d83);
            _0x497c68['_objects']['push'](_0x583d83), _0x583d83['_setOctree' + 'Node'](_0x497c68);
        }
        ['_remove'](_0x46d1f5) {
            var _0x491af6 = this['_objects']['indexOf'](_0x46d1f5);
            this['_objects']['splice'](_0x491af6, 0x1), _0x46d1f5['_setOctree' + 'Node'](null), this['_merge']();
        }
        ['_addUp'](_0xf7db8b) {
            if (_0xefe37['boxContain' + 'sBox'](this['_bounds'], _0xf7db8b['bounds']['_getBoundB' + 'ox']()) === _0x93aded['Contains'])
                return this['_add'](_0xf7db8b), !![];
            else {
                if (this['_parent'])
                    return this['_parent']['_addUp'](_0xf7db8b);
                else
                    return ![];
            }
        }
        ['_getCollid' + 'ingWithFru' + 'stum'](_0x535cb7, _0x2389d0, _0x546245, _0x137c38, _0x514db, _0x572c68) {
            var _0x3117c2 = _0x535cb7['boundFrust' + 'um'], _0x8c1c43 = _0x535cb7['position'], _0x5ddd76 = _0x535cb7['cullingMas' + 'k'];
            if (_0x546245) {
                var _0x3349bd = _0x3117c2['containsBo' + 'undBox'](this['_bounds']);
                _0x442335['Stat']['octreeNode' + 'Culling']++;
                if (_0x3349bd === _0x93aded['Disjoint'])
                    return;
                _0x546245 = _0x3349bd === _0x93aded['Intersects'];
            }
            this['_isContaio' + 'n'] = !_0x546245;
            var _0x1f5088 = _0x2389d0['scene'], _0x209dc3 = _0x442335['Stat']['loopCount'];
            for (var _0x2f5abb = 0x0, _0x4ef6d6 = this['_objects']['length']; _0x2f5abb < _0x4ef6d6; _0x2f5abb++) {
                var _0x1b545f = this['_objects'][_0x2f5abb], _0x446e24;
                if (_0x572c68)
                    _0x446e24 = _0x1b545f['_castShado' + 'w'] && _0x1b545f['_enable'];
                else
                    _0x446e24 = (Math['pow'](0x2, _0x1b545f['_owner']['_layer']) & _0x5ddd76) != 0x0 && _0x1b545f['_enable'];
                if (_0x446e24) {
                    if (_0x546245) {
                        _0x442335['Stat']['frustumCul' + 'ling']++;
                        if (!_0x1b545f['_needRende' + 'r'](_0x3117c2, _0x2389d0))
                            continue;
                    }
                    _0x1b545f['_renderMar' + 'k'] = _0x209dc3, _0x1b545f['_distanceF' + 'orSort'] = _0x352206['distance'](_0x1b545f['bounds']['getCenter'](), _0x8c1c43);
                    var _0x2f86e5 = _0x1b545f['_renderEle' + 'ments'];
                    for (var _0x26d4d0 = 0x0, _0x10525d = _0x2f86e5['length']; _0x26d4d0 < _0x10525d; _0x26d4d0++) {
                        var _0x402317 = _0x2f86e5[_0x26d4d0];
                        _0x402317['_update'](_0x1f5088, _0x2389d0, _0x137c38, _0x514db);
                    }
                }
            }
            if (this['_children'] != null)
                for (_0x2f5abb = 0x0; _0x2f5abb < 0x8; _0x2f5abb++) {
                    var _0xe6e1f6 = this['_children'][_0x2f5abb];
                    _0xe6e1f6 && _0xe6e1f6['_getCollid' + 'ingWithFru' + 'stum'](_0x535cb7, _0x2389d0, _0x546245, _0x137c38, _0x514db, _0x572c68);
                }
        }
        ['_getCollid' + 'ingWithBou' + 'ndBox'](_0x5f59a7, _0x31c9c2, _0x440d79) {
            if (_0x31c9c2) {
                var _0x462691 = _0xefe37['boxContain' + 'sBox'](this['_bounds'], _0x5f59a7);
                if (_0x462691 === _0x93aded['Disjoint'])
                    return;
                _0x31c9c2 = _0x462691 === _0x93aded['Intersects'];
            }
            if (_0x31c9c2)
                for (var _0x4afc81 = 0x0, _0x378d6c = this['_objects']['length']; _0x4afc81 < _0x378d6c; _0x4afc81++) {
                    var _0x22f4ac = this['_objects'][_0x4afc81];
                    _0xefe37['intersects' + 'BoxAndBox'](_0x22f4ac['bounds']['_getBoundB' + 'ox'](), _0x5f59a7) && _0x440d79['push'](_0x22f4ac);
                }
            if (this['_children'] != null)
                for (_0x4afc81 = 0x0; _0x4afc81 < 0x8; _0x4afc81++) {
                    var _0x4c7314 = this['_children'][_0x4afc81];
                    _0x4c7314['_getCollid' + 'ingWithBou' + 'ndBox'](_0x5f59a7, _0x31c9c2, _0x440d79);
                }
        }
        ['_bestFitCh' + 'ild'](_0x119344) {
            return (_0x119344['x'] <= this['center']['x'] ? 0x0 : 0x1) + (_0x119344['y'] >= this['center']['y'] ? 0x0 : 0x4) + (_0x119344['z'] <= this['center']['z'] ? 0x0 : 0x2);
        }
        ['_update'](_0x4e5821) {
            if (_0xefe37['boxContain' + 'sBox'](this['_bounds'], _0x4e5821['bounds']['_getBoundB' + 'ox']()) === _0x93aded['Contains']) {
                var _0x5441a7 = this['_checkAddN' + 'ode'](_0x4e5821);
                if (_0x5441a7 !== _0x4e5821['_getOctree' + 'Node']()) {
                    _0x5441a7['_objects']['push'](_0x4e5821), _0x4e5821['_setOctree' + 'Node'](_0x5441a7);
                    var _0x81ac5b = this['_objects']['indexOf'](_0x4e5821);
                    this['_objects']['splice'](_0x81ac5b, 0x1), this['_merge']();
                }
                return !![];
            } else {
                if (this['_parent']) {
                    var _0x55eea7 = this['_parent']['_addUp'](_0x4e5821);
                    return _0x55eea7 && (_0x81ac5b = this['_objects']['indexOf'](_0x4e5821), this['_objects']['splice'](_0x81ac5b, 0x1), this['_merge']()), _0x55eea7;
                } else
                    return ![];
            }
        }
        ['add'](_0x27fe87) {
            if (!_0xabc37b['_encapsula' + 'tes'](this['_bounds'], _0x27fe87['bounds']['_getBoundB' + 'ox']()))
                return ![];
            return this['_add'](_0x27fe87), !![];
        }
        ['remove'](_0x4e1d77) {
            if (_0x4e1d77['_getOctree' + 'Node']() !== this)
                return ![];
            return this['_remove'](_0x4e1d77), !![];
        }
        ['update'](_0x30c711) {
            if (_0x30c711['_getOctree' + 'Node']() !== this)
                return ![];
            return this['_update'](_0x30c711);
        }
        ['shrinkIfPo' + 'ssible'](_0x4062e1) {
            if (this['baseLength'] < _0x4062e1 * 0x2)
                return this;
            var _0x4a9684 = -0x1;
            for (var _0x5cb275 = 0x0, _0x234e83 = this['_objects']['length']; _0x5cb275 < _0x234e83; _0x5cb275++) {
                var _0x23f0f1 = this['_objects'][_0x5cb275], _0x23e8ac = this['_bestFitCh' + 'ild'](_0x23f0f1['bounds']['getCenter']());
                if (_0x5cb275 == 0x0 || _0x23e8ac == _0x4a9684) {
                    var _0x29e971 = this['_getChildB' + 'ound'](_0x23e8ac);
                    if (_0xabc37b['_encapsula' + 'tes'](_0x29e971, _0x23f0f1['bounds']['_getBoundB' + 'ox']()))
                        _0x5cb275 == 0x0 && (_0x4a9684 = _0x23e8ac);
                    else
                        return this;
                } else
                    return this;
            }
            if (this['_children'] != null) {
                var _0x3ce749 = ![];
                for (_0x5cb275 = 0x0, _0x234e83 = this['_children']['length']; _0x5cb275 < _0x234e83; _0x5cb275++) {
                    var _0x26f65f = this['_children'][_0x5cb275];
                    if (_0x26f65f && _0x26f65f['hasAnyObje' + 'cts']()) {
                        if (_0x3ce749)
                            return this;
                        if (_0x4a9684 >= 0x0 && _0x4a9684 != _0x5cb275)
                            return this;
                        _0x3ce749 = !![], _0x4a9684 = _0x5cb275;
                    }
                }
            } else {
                if (_0x4a9684 != -0x1) {
                    var _0x2b77ca = this['_getChildC' + 'enter'](_0x4a9684);
                    this['_setValues'](this['_octree'], null, this['baseLength'] / 0x2, _0x2b77ca);
                }
                return this;
            }
            if (_0x4a9684 != -0x1) {
                var _0x44d631 = this['_children'][_0x4a9684];
                return _0x44d631['_parent'] = null, _0x44d631;
            } else
                return this;
        }
        ['hasAnyObje' + 'cts']() {
            if (this['_objects']['length'] > 0x0)
                return !![];
            if (this['_children'] != null)
                for (var _0x37c87e = 0x0; _0x37c87e < 0x8; _0x37c87e++) {
                    var _0x4e43b0 = this['_children'][_0x37c87e];
                    if (_0x4e43b0 && _0x4e43b0['hasAnyObje' + 'cts']())
                        return !![];
                }
            return ![];
        }
        ['getCollidi' + 'ngWithBoun' + 'dBox'](_0xe423f7, _0x35ef2d) {
            this['_getCollid' + 'ingWithBou' + 'ndBox'](_0xe423f7, !![], _0x35ef2d);
        }
        ['getCollidi' + 'ngWithRay'](_0x1c38ed, _0x40d81b, _0xc26588 = Number['MAX_VALUE']) {
            var _0x371e02 = _0xefe37['intersects' + 'RayAndBoxR' + 'D'](_0x1c38ed, this['_bounds']);
            if (_0x371e02 == -0x1 || _0x371e02 > _0xc26588)
                return;
            for (var _0xf5b082 = 0x0, _0x4641b9 = this['_objects']['length']; _0xf5b082 < _0x4641b9; _0xf5b082++) {
                var _0x3ebb88 = this['_objects'][_0xf5b082];
                _0x371e02 = _0xefe37['intersects' + 'RayAndBoxR' + 'D'](_0x1c38ed, _0x3ebb88['bounds']['_getBoundB' + 'ox']());
                if (_0x371e02 !== -0x1 && _0x371e02 <= _0xc26588)
                    _0x40d81b['push'](_0x3ebb88);
            }
            if (this['_children'] != null)
                for (_0xf5b082 = 0x0; _0xf5b082 < 0x8; _0xf5b082++) {
                    var _0x222e4b = this['_children'][_0xf5b082];
                    _0x222e4b['getCollidi' + 'ngWithRay'](_0x1c38ed, _0x40d81b, _0xc26588);
                }
        }
        ['getCollidi' + 'ngWithFrus' + 'tum'](_0x5453f8, _0x598a3f, _0x16bf61, _0x396e85, _0x51c7e5) {
            this['_getCollid' + 'ingWithFru' + 'stum'](_0x5453f8, _0x598a3f, !![], _0x16bf61, _0x396e85, _0x51c7e5);
        }
        ['isCollidin' + 'gWithBound' + 'Box'](_0xf37c9d) {
            if (!_0xefe37['intersects' + 'BoxAndBox'](this['_bounds'], _0xf37c9d))
                return ![];
            for (var _0x157557 = 0x0, _0x8f0b0a = this['_objects']['length']; _0x157557 < _0x8f0b0a; _0x157557++) {
                var _0x2d9061 = this['_objects'][_0x157557];
                if (_0xefe37['intersects' + 'BoxAndBox'](_0x2d9061['bounds']['_getBoundB' + 'ox'](), _0xf37c9d))
                    return !![];
            }
            if (this['_children'] != null)
                for (_0x157557 = 0x0; _0x157557 < 0x8; _0x157557++) {
                    var _0x1c37fc = this['_children'][_0x157557];
                    if (_0x1c37fc['isCollidin' + 'gWithBound' + 'Box'](_0xf37c9d))
                        return !![];
                }
            return ![];
        }
        ['isCollidin' + 'gWithRay'](_0x1cc819, _0x220335 = Number['MAX_VALUE']) {
            var _0x3bb9a5 = _0xefe37['intersects' + 'RayAndBoxR' + 'D'](_0x1cc819, this['_bounds']);
            if (_0x3bb9a5 == -0x1 || _0x3bb9a5 > _0x220335)
                return ![];
            for (var _0x54e008 = 0x0, _0x446c17 = this['_objects']['length']; _0x54e008 < _0x446c17; _0x54e008++) {
                var _0x4dd295 = this['_objects'][_0x54e008];
                _0x3bb9a5 = _0xefe37['intersects' + 'RayAndBoxR' + 'D'](_0x1cc819, _0x4dd295['bounds']['_getBoundB' + 'ox']());
                if (_0x3bb9a5 !== -0x1 && _0x3bb9a5 <= _0x220335)
                    return !![];
            }
            if (this['_children'] != null)
                for (_0x54e008 = 0x0; _0x54e008 < 0x8; _0x54e008++) {
                    var _0x3e9d86 = this['_children'][_0x54e008];
                    if (_0x3e9d86['isCollidin' + 'gWithRay'](_0x1cc819, _0x220335))
                        return !![];
                }
            return ![];
        }
        ['getBound']() {
            return this['_bounds'];
        }
        ['drawAllBou' + 'nds'](_0x4749ff, _0x3dd8f4, _0x586bb0) {
            if (this['_children'] === null && this['_objects']['length'] == 0x0)
                return;
            _0x3dd8f4++;
            var _0x3c9ece = _0xabc37b['_tempColor' + '0'];
            if (this['_isContaio' + 'n'])
                _0x3c9ece['r'] = 0x0, _0x3c9ece['g'] = 0x0, _0x3c9ece['b'] = 0x1;
            else {
                var _0x16de29 = _0x586bb0 ? _0x3dd8f4 / _0x586bb0 : 0x0;
                _0x3c9ece['r'] = 0x1 - _0x16de29, _0x3c9ece['g'] = _0x16de29, _0x3c9ece['b'] = 0x0;
            }
            _0x3c9ece['a'] = 0.3, _0x47bed9['_drawBound'](_0x4749ff, this['_bounds'], _0x3c9ece);
            if (this['_children'] != null)
                for (var _0x106ec9 = 0x0; _0x106ec9 < 0x8; _0x106ec9++) {
                    var _0x34a99a = this['_children'][_0x106ec9];
                    _0x34a99a && _0x34a99a['drawAllBou' + 'nds'](_0x4749ff, _0x3dd8f4, _0x586bb0);
                }
        }
        ['drawAllObj' + 'ects'](_0x5b12e7, _0x1dced2, _0x1ab066) {
            _0x1dced2++;
            var _0x4cd694 = _0xabc37b['_tempColor' + '0'];
            if (this['_isContaio' + 'n'])
                _0x4cd694['r'] = 0x0, _0x4cd694['g'] = 0x0, _0x4cd694['b'] = 0x1;
            else {
                var _0xfb92c1 = _0x1ab066 ? _0x1dced2 / _0x1ab066 : 0x0;
                _0x4cd694['r'] = 0x1 - _0xfb92c1, _0x4cd694['g'] = _0xfb92c1, _0x4cd694['b'] = 0x0;
            }
            _0x4cd694['a'] = 0x1;
            for (var _0x3c68db = 0x0, _0x5ba051 = this['_objects']['length']; _0x3c68db < _0x5ba051; _0x3c68db++)
                _0x47bed9['_drawBound'](_0x5b12e7, this['_objects'][_0x3c68db]['bounds']['_getBoundB' + 'ox'](), _0x4cd694);
            if (this['_children'] != null)
                for (_0x3c68db = 0x0; _0x3c68db < 0x8; _0x3c68db++) {
                    var _0x25d4b7 = this['_children'][_0x3c68db];
                    _0x25d4b7 && _0x25d4b7['drawAllObj' + 'ects'](_0x5b12e7, _0x1dced2, _0x1ab066);
                }
        }
    }
    _0xabc37b['_tempVecto' + 'r3'] = new _0x352206(), _0xabc37b['_tempVecto' + 'r30'] = new _0x352206(), _0xabc37b['_tempVecto' + 'r31'] = new _0x352206(), _0xabc37b['_tempColor' + '0'] = new _0x5525ce(), _0xabc37b['_tempBound' + 'Box'] = new _0x2bd0ec(new _0x352206(), new _0x352206()), _0xabc37b['_NUM_OBJEC' + 'TS_ALLOWED'] = 0x8;
    class _0x3ceeb3 extends _0x4a730f {
        constructor() {
            super();
        }
        ['add'](_0x4aa0e) {
            var _0x52ec50 = _0x4aa0e['_getIndexI' + 'nMotionLis' + 't']();
            if (_0x52ec50 !== -0x1)
                throw 'OctreeMoti' + 'onList:ele' + 'ment\x20has\x20\x20' + 'in\x20\x20Physic' + 'sUpdateLis' + 't.';
            this['_add'](_0x4aa0e), _0x4aa0e['_setIndexI' + 'nMotionLis' + 't'](this['length']++);
        }
        ['remove'](_0x38bd82) {
            var _0x3b2c57 = _0x38bd82['_getIndexI' + 'nMotionLis' + 't']();
            this['length']--;
            if (_0x3b2c57 !== this['length']) {
                var _0x56bd9b = this['elements'][this['length']];
                this['elements'][_0x3b2c57] = _0x56bd9b, _0x56bd9b['_setIndexI' + 'nMotionLis' + 't'](_0x3b2c57);
            }
            _0x38bd82['_setIndexI' + 'nMotionLis' + 't'](-0x1);
        }
    }
    class _0x1f4309 {
        constructor(_0x51e638, _0x2825bd, _0x527ce0, _0x18204f) {
            this['_motionObj' + 'ects'] = new _0x3ceeb3(), this['count'] = 0x0, _0x527ce0 > _0x51e638 && (console['warn']('Minimum\x20no' + 'de\x20size\x20mu' + 'st\x20be\x20at\x20l' + 'east\x20as\x20bi' + 'g\x20as\x20the\x20i' + 'nitial\x20wor' + 'ld\x20size.\x20W' + 'as:\x20' + _0x527ce0 + ('\x20Adjusted\x20' + 'to:\x20') + _0x51e638), _0x527ce0 = _0x51e638), this['_initialSi' + 'ze'] = _0x51e638, this['_minSize'] = _0x527ce0, this['_looseness'] = Math['min'](Math['max'](_0x18204f, 0x1), 0x2), this['_rootNode'] = new _0xabc37b(this, null, _0x51e638, _0x2825bd);
        }
        ['_getMaxDep' + 'th'](_0x47962b, _0x3c8248) {
            _0x3c8248++;
            var _0x1a153a = _0x47962b['_children'];
            if (_0x1a153a != null) {
                var _0x2d7ac3 = _0x3c8248;
                for (var _0x3f5916 = 0x0, _0x242934 = _0x1a153a['length']; _0x3f5916 < _0x242934; _0x3f5916++) {
                    var _0x33af6b = _0x1a153a[_0x3f5916];
                    _0x33af6b && (_0x3c8248 = Math['max'](this['_getMaxDep' + 'th'](_0x33af6b, _0x2d7ac3), _0x3c8248));
                }
            }
            return _0x3c8248;
        }
        ['_grow'](_0x3eba1d) {
            var _0x14c605 = _0x3eba1d['x'] >= 0x0 ? 0x1 : -0x1, _0x1c4188 = _0x3eba1d['y'] >= 0x0 ? 0x1 : -0x1, _0x4c1858 = _0x3eba1d['z'] >= 0x0 ? 0x1 : -0x1, _0x1f9f80 = this['_rootNode'], _0x109005 = this['_rootNode']['baseLength'] / 0x2, _0x286fe3 = this['_rootNode']['baseLength'] * 0x2, _0x3c85ce = this['_rootNode']['center'], _0x5f4973 = new _0x352206(_0x3c85ce['x'] + _0x14c605 * _0x109005, _0x3c85ce['y'] + _0x1c4188 * _0x109005, _0x3c85ce['z'] + _0x4c1858 * _0x109005);
            this['_rootNode'] = new _0xabc37b(this, null, _0x286fe3, _0x5f4973);
            if (_0x1f9f80['hasAnyObje' + 'cts']()) {
                var _0x29d4f9 = this['_rootNode']['_bestFitCh' + 'ild'](_0x1f9f80['center']), _0x3e5225 = [];
                for (var _0x21c8f9 = 0x0; _0x21c8f9 < 0x8; _0x21c8f9++) {
                    _0x21c8f9 == _0x29d4f9 && (_0x1f9f80['_parent'] = this['_rootNode'], _0x3e5225[_0x21c8f9] = _0x1f9f80);
                }
                this['_rootNode']['_children'] = _0x3e5225;
            }
        }
        ['add'](_0x5759ab) {
            var _0x20aff5 = 0x0;
            while (!this['_rootNode']['add'](_0x5759ab)) {
                var _0x4e0dbc = _0x1f4309['_tempVecto' + 'r30'];
                _0x352206['subtract'](_0x5759ab['bounds']['getCenter'](), this['_rootNode']['center'], _0x4e0dbc), this['_grow'](_0x4e0dbc);
                if (++_0x20aff5 > 0x14)
                    throw 'Aborted\x20Ad' + 'd\x20operatio' + 'n\x20as\x20it\x20se' + 'emed\x20to\x20be' + '\x20going\x20on\x20' + 'forever\x20(' + (_0x20aff5 - 0x1) + (')\x20attempts' + '\x20at\x20growin' + 'g\x20the\x20octr' + 'ee.');
            }
            this['count']++;
        }
        ['remove'](_0x162278) {
            var _0x313353 = _0x162278['_getOctree' + 'Node']()['remove'](_0x162278);
            return _0x313353 && this['count']--, _0x313353;
        }
        ['update'](_0x187260) {
            var _0x537d4e = 0x0, _0x2beb68 = _0x187260['_getOctree' + 'Node']();
            if (_0x2beb68) {
                while (!_0x2beb68['_update'](_0x187260)) {
                    var _0x54047c = _0x1f4309['_tempVecto' + 'r30'];
                    _0x352206['subtract'](_0x187260['bounds']['getCenter'](), this['_rootNode']['center'], _0x54047c), this['_grow'](_0x54047c);
                    if (++_0x537d4e > 0x14)
                        throw 'Aborted\x20Ad' + 'd\x20operatio' + 'n\x20as\x20it\x20se' + 'emed\x20to\x20be' + '\x20going\x20on\x20' + 'forever\x20(' + (_0x537d4e - 0x1) + (')\x20attempts' + '\x20at\x20growin' + 'g\x20the\x20octr' + 'ee.');
                }
                return !![];
            } else
                return ![];
        }
        ['shrinkRoot' + 'IfPossible']() {
            this['_rootNode'] = this['_rootNode']['shrinkIfPo' + 'ssible'](this['_initialSi' + 'ze']);
        }
        ['addMotionO' + 'bject'](_0x64db13) {
            this['_motionObj' + 'ects']['add'](_0x64db13);
        }
        ['removeMoti' + 'onObject'](_0x2dbb6d) {
            this['_motionObj' + 'ects']['remove'](_0x2dbb6d);
        }
        ['updateMoti' + 'onObjects']() {
            var _0x3e695d = this['_motionObj' + 'ects']['elements'];
            for (var _0xa17ce5 = 0x0, _0x3b5e3a = this['_motionObj' + 'ects']['length']; _0xa17ce5 < _0x3b5e3a; _0xa17ce5++) {
                var _0x152797 = _0x3e695d[_0xa17ce5];
                this['update'](_0x152797), _0x152797['_setIndexI' + 'nMotionLis' + 't'](-0x1);
            }
            this['_motionObj' + 'ects']['length'] = 0x0;
        }
        ['isCollidin' + 'gWithBound' + 'Box'](_0x2c2eb6) {
            return this['_rootNode']['isCollidin' + 'gWithBound' + 'Box'](_0x2c2eb6);
        }
        ['isCollidin' + 'gWithRay'](_0x5b9b24, _0x41d019 = Number['MAX_VALUE']) {
            return this['_rootNode']['isCollidin' + 'gWithRay'](_0x5b9b24, _0x41d019);
        }
        ['getCollidi' + 'ngWithBoun' + 'dBox'](_0x473154, _0x338191) {
            this['_rootNode']['getCollidi' + 'ngWithBoun' + 'dBox'](_0x473154, _0x338191);
        }
        ['getCollidi' + 'ngWithRay'](_0x5dd326, _0x4147fc, _0x4e8992 = Number['MAX_VALUE']) {
            this['_rootNode']['getCollidi' + 'ngWithRay'](_0x5dd326, _0x4147fc, _0x4e8992);
        }
        ['getCollidi' + 'ngWithFrus' + 'tum'](_0x2df165, _0x4e109f, _0x519463, _0x1f3450, _0x181607) {
            this['_rootNode']['getCollidi' + 'ngWithFrus' + 'tum'](_0x2df165, _0x4e109f, _0x519463, _0x1f3450, _0x181607);
        }
        ['getMaxBoun' + 'ds']() {
            return this['_rootNode']['getBound']();
        }
        ['drawAllBou' + 'nds'](_0x49ae48) {
            var _0x4fb010 = this['_getMaxDep' + 'th'](this['_rootNode'], -0x1);
            this['_rootNode']['drawAllBou' + 'nds'](_0x49ae48, -0x1, _0x4fb010);
        }
        ['drawAllObj' + 'ects'](_0x38405d) {
            var _0x2b33b4 = this['_getMaxDep' + 'th'](this['_rootNode'], -0x1);
            this['_rootNode']['drawAllObj' + 'ects'](_0x38405d, -0x1, _0x2b33b4);
        }
    }
    _0x1f4309['_tempVecto' + 'r30'] = new _0x352206();
    class _0x338f4f {
    }
    class _0x2b2d11 {
        constructor(_0x93ae36, _0x51f3c7) {
            this['center'] = _0x93ae36, this['radius'] = _0x51f3c7;
        }
        ['toDefault']() {
            this['center']['toDefault'](), this['radius'] = 0x0;
        }
        static ['createFrom' + 'SubPoints'](_0x48b876, _0x191f39, _0x3e0c1c, _0x33ff48) {
            if (_0x48b876 == null)
                throw new Error('points');
            if (_0x191f39 < 0x0 || _0x191f39 >= _0x48b876['length'])
                throw new Error('start' + _0x191f39 + ('Must\x20be\x20in' + '\x20the\x20range' + '\x20[0,\x20') + (_0x48b876['length'] - 0x1) + ']');
            if (_0x3e0c1c < 0x0 || _0x191f39 + _0x3e0c1c > _0x48b876['length'])
                throw new Error('count' + _0x3e0c1c + ('Must\x20be\x20in' + '\x20the\x20range' + '\x20<=\x20') + _0x48b876['length'] + '}');
            var _0x476555 = _0x191f39 + _0x3e0c1c, _0x36f822 = _0x2b2d11['_tempVecto' + 'r3'];
            _0x36f822['x'] = 0x0, _0x36f822['y'] = 0x0, _0x36f822['z'] = 0x0;
            for (var _0x3165a0 = _0x191f39; _0x3165a0 < _0x476555; ++_0x3165a0) {
                _0x352206['add'](_0x48b876[_0x3165a0], _0x36f822, _0x36f822);
            }
            var _0x120661 = _0x33ff48['center'];
            _0x352206['scale'](_0x36f822, 0x1 / _0x3e0c1c, _0x120661);
            var _0x6a2593 = 0x0;
            for (_0x3165a0 = _0x191f39; _0x3165a0 < _0x476555; ++_0x3165a0) {
                var _0x10f647 = _0x352206['distanceSq' + 'uared'](_0x120661, _0x48b876[_0x3165a0]);
                if (_0x10f647 > _0x6a2593)
                    _0x6a2593 = _0x10f647;
            }
            _0x33ff48['radius'] = Math['sqrt'](_0x6a2593);
        }
        static ['createfrom' + 'Points'](_0x6fa4be, _0x48ae43) {
            if (_0x6fa4be == null)
                throw new Error('points');
            _0x2b2d11['createFrom' + 'SubPoints'](_0x6fa4be, 0x0, _0x6fa4be['length'], _0x48ae43);
        }
        ['intersects' + 'RayDistanc' + 'e'](_0x58d46a) {
            return _0xefe37['intersects' + 'RayAndSphe' + 'reRD'](_0x58d46a, this);
        }
        ['intersects' + 'RayPoint'](_0x3df9a3, _0x1a0e77) {
            return _0xefe37['intersects' + 'RayAndSphe' + 'reRP'](_0x3df9a3, this, _0x1a0e77);
        }
        ['cloneTo'](_0x565128) {
            var _0x453ca9 = _0x565128;
            this['center']['cloneTo'](_0x453ca9['center']), _0x453ca9['radius'] = this['radius'];
        }
        ['clone']() {
            var _0x3fd9ad = new _0x2b2d11(new _0x352206(), 0x0);
            return this['cloneTo'](_0x3fd9ad), _0x3fd9ad;
        }
    }
    _0x2b2d11['_tempVecto' + 'r3'] = new _0x352206();
    class _0x2ab34b {
        constructor() {
            this['cameraShad' + 'erValue'] = new _0x1634f4(), this['position'] = new _0x352206(), this['viewMatrix'] = new _0x4c2288(), this['projection' + 'Matrix'] = new _0x4c2288(), this['viewProjec' + 'tMatrix'] = new _0x4c2288(), this['cullPlanes'] = [
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206()),
                new _0x1fee56(new _0x352206())
            ], this['splitBound' + 'Sphere'] = new _0x2b2d11(new _0x352206(), 0x0);
        }
    }
    class _0x44fdee {
        constructor() {
            this['cameraShad' + 'erValue'] = new _0x1634f4(), this['position'] = new _0x352206(), this['viewMatrix'] = new _0x4c2288(), this['projection' + 'Matrix'] = new _0x4c2288(), this['viewProjec' + 'tMatrix'] = new _0x4c2288(), this['cameraCull' + 'Info'] = new _0x3e5f9a();
        }
    }
    (function (_0x41490d) {
        _0x41490d[_0x41490d['DirectionL' + 'ight'] = 0x0] = 'DirectionL' + 'ight', _0x41490d[_0x41490d['SpotLight'] = 0x1] = 'SpotLight', _0x41490d[_0x41490d['PointLight'] = 0x2] = 'PointLight';
    }(_0x1f405c['ShadowLigh' + 'tType'] || (_0x1f405c['ShadowLigh' + 'tType'] = {})));
    class _0x4fb93b {
        constructor() {
            this['_shadowBia' + 's'] = new _0x18425e(), this['_shadowPar' + 'ams'] = new _0x18425e(), this['_shadowMap' + 'Size'] = new _0x18425e(), this['_shadowMat' + 'rices'] = new Float32Array(0x10 * _0x4fb93b['_maxCascad' + 'es']), this['_shadowSpo' + 'tMatrices'] = new _0x4c2288(), this['_splitBoun' + 'dSpheres'] = new Float32Array(_0x4fb93b['_maxCascad' + 'es'] * 0x4), this['_cascadeCo' + 'unt'] = 0x0, this['_shadowMap' + 'Width'] = 0x0, this['_shadowMap' + 'Height'] = 0x0, this['_shadowSli' + 'ceDatas'] = [
                new _0x2ab34b(),
                new _0x2ab34b(),
                new _0x2ab34b(),
                new _0x2ab34b()
            ], this['_shadowSpo' + 'tData'] = new _0x44fdee(), this['_lightUp'] = new _0x352206(), this['_lightSide'] = new _0x352206(), this['_lightForw' + 'ard'] = new _0x352206(), this['_shadowSpo' + 'tData']['cameraCull' + 'Info']['boundFrust' + 'um'] = new _0x4fa1ff(new _0x4c2288());
        }
        ['_setupShad' + 'owCasterSh' + 'aderValues'](_0x5b467f, _0x3b984b, _0x39cf9a, _0x57158b, _0xb4d887, _0x1b6029, _0x4bd4a0) {
            _0x3b984b['setVector'](_0x4fb93b['SHADOW_BIA' + 'S'], _0x1b6029);
            switch (_0x4bd4a0) {
            case _0x1f405c['LightType']['Directiona' + 'l']:
                _0x3b984b['setVector3'](_0x4fb93b['SHADOW_LIG' + 'HT_DIRECTI' + 'ON'], _0x57158b);
                break;
            case _0x1f405c['LightType']['Spot']:
                _0x3b984b['setVector'](_0x4fb93b['SHADOW_PAR' + 'AMS'], _0xb4d887);
                break;
            case _0x1f405c['LightType']['Point']:
                break;
            }
            var _0x36d810 = _0x39cf9a['cameraShad' + 'erValue'];
            _0x36d810['setMatrix4' + 'x4'](_0x307038['VIEWMATRIX'], _0x39cf9a['viewMatrix']), _0x36d810['setMatrix4' + 'x4'](_0x307038['PROJECTMAT' + 'RIX'], _0x39cf9a['projection' + 'Matrix']), _0x36d810['setMatrix4' + 'x4'](_0x307038['VIEWPROJEC' + 'TMATRIX'], _0x39cf9a['viewProjec' + 'tMatrix']), _0x5b467f['viewMatrix'] = _0x39cf9a['viewMatrix'], _0x5b467f['projection' + 'Matrix'] = _0x39cf9a['projection' + 'Matrix'], _0x5b467f['projection' + 'ViewMatrix'] = _0x39cf9a['viewProjec' + 'tMatrix'];
        }
        ['_setupShad' + 'owReceiver' + 'ShaderValu' + 'es'](_0x31d5b0) {
            var _0x3dfc45 = this['_light'];
            if (_0x3dfc45['shadowCasc' + 'adesMode'] !== _0x1f405c['ShadowCasc' + 'adesMode']['NoCascades'])
                _0x31d5b0['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'CASCADE']);
            else
                _0x31d5b0['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'CASCADE']);
            switch (_0x3dfc45['shadowMode']) {
            case _0x1f405c['ShadowMode']['Hard']:
                _0x31d5b0['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW']), _0x31d5b0['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH']);
                break;
            case _0x1f405c['ShadowMode']['SoftLow']:
                _0x31d5b0['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW']), _0x31d5b0['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH']);
                break;
            case _0x1f405c['ShadowMode']['SoftHigh']:
                _0x31d5b0['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH']), _0x31d5b0['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW']);
                break;
            }
            _0x31d5b0['setTexture'](_0x4fb93b['SHADOW_MAP'], this['_shadowDir' + 'ectLightMa' + 'p']), _0x31d5b0['setBuffer'](_0x4fb93b['SHADOW_MAT' + 'RICES'], this['_shadowMat' + 'rices']), _0x31d5b0['setVector'](_0x4fb93b['SHADOW_MAP' + '_SIZE'], this['_shadowMap' + 'Size']), _0x31d5b0['setVector'](_0x4fb93b['SHADOW_PAR' + 'AMS'], this['_shadowPar' + 'ams']), _0x31d5b0['setBuffer'](_0x4fb93b['SHADOW_SPL' + 'IT_SPHERES'], this['_splitBoun' + 'dSpheres']);
        }
        ['_setupSpot' + 'ShadowRece' + 'iverShader' + 'Values'](_0x242197) {
            var _0x41d4cc = this['_light'];
            switch (_0x41d4cc['shadowMode']) {
            case _0x1f405c['ShadowMode']['Hard']:
                _0x242197['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_HIG' + 'H']), _0x242197['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_LOW']);
                break;
            case _0x1f405c['ShadowMode']['SoftLow']:
                _0x242197['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_LOW']), _0x242197['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_HIG' + 'H']);
                break;
            case _0x1f405c['ShadowMode']['SoftHigh']:
                _0x242197['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_HIG' + 'H']), _0x242197['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_LOW']);
                break;
            }
            _0x242197['setTexture'](_0x4fb93b['SHADOW_SPO' + 'TMAP'], this['_shadowSpo' + 'tLightMap']), _0x242197['setMatrix4' + 'x4'](_0x4fb93b['SHADOW_SPO' + 'TMATRICES'], this['_shadowSpo' + 'tMatrices']), _0x242197['setVector'](_0x4fb93b['SHADOW_MAP' + '_SIZE'], this['_shadowMap' + 'Size']), _0x242197['setVector'](_0x4fb93b['SHADOW_PAR' + 'AMS'], this['_shadowPar' + 'ams']);
        }
        ['update'](_0x14c550, _0x17dcdb, _0xbc553d) {
            switch (_0xbc553d) {
            case _0x1f405c['ShadowLigh' + 'tType']['DirectionL' + 'ight']:
                this['_light'] = _0x17dcdb;
                var _0xbe0a46 = _0x4fb93b['_tempMatri' + 'x0'], _0x469d16 = _0xbe0a46['elements'], _0x379dba = this['_lightUp'], _0x50c96c = this['_lightSide'], _0x1acc84 = this['_lightForw' + 'ard'];
                _0x4c2288['createFrom' + 'Quaternion'](_0x17dcdb['_transform']['rotation'], _0xbe0a46), _0x50c96c['setValue'](_0x469d16[0x0], _0x469d16[0x1], _0x469d16[0x2]), _0x379dba['setValue'](_0x469d16[0x4], _0x469d16[0x5], _0x469d16[0x6]), _0x1acc84['setValue'](-_0x469d16[0x8], -_0x469d16[0x9], -_0x469d16[0xa]);
                var _0x2c0af2 = _0x17dcdb['_shadowRes' + 'olution'], _0x47b81b = _0x17dcdb['_shadowCas' + 'cadesMode'], _0x550782, _0x2c6d75, _0x5b6bf6, _0xe238e0;
                _0x47b81b == _0x1f405c['ShadowCasc' + 'adesMode']['NoCascades'] ? (_0x550782 = 0x1, _0x2c6d75 = _0x2c0af2, _0x5b6bf6 = _0x2c0af2, _0xe238e0 = _0x2c0af2) : (_0x550782 = _0x47b81b == _0x1f405c['ShadowCasc' + 'adesMode']['TwoCascade' + 's'] ? 0x2 : 0x4, _0x2c6d75 = _0x12f0cf['getMaxTile' + 'Resolution' + 'InAtlas'](_0x2c0af2, _0x2c0af2, _0x550782), _0x5b6bf6 = _0x2c6d75 * 0x2, _0xe238e0 = _0x47b81b == _0x1f405c['ShadowCasc' + 'adesMode']['TwoCascade' + 's'] ? _0x2c6d75 : _0x2c6d75 * 0x2);
                this['_cascadeCo' + 'unt'] = _0x550782, this['_shadowMap' + 'Width'] = _0x5b6bf6, this['_shadowMap' + 'Height'] = _0xe238e0;
                var _0x27869c = _0x4fb93b['_cascadesS' + 'plitDistan' + 'ce'], _0x3fe8da = _0x4fb93b['_frustumPl' + 'anes'], _0x5a5027 = _0x14c550['nearPlane'], _0x2bcb05 = Math['min'](_0x14c550['farPlane'], _0x17dcdb['_shadowDis' + 'tance']), _0x1ef450 = this['_shadowMat' + 'rices'], _0x10872a = this['_splitBoun' + 'dSpheres'];
                _0x12f0cf['getCascade' + 'sSplitDist' + 'ance'](_0x17dcdb['_shadowTwo' + 'CascadeSpl' + 'its'], _0x17dcdb['_shadowFou' + 'rCascadeSp' + 'lits'], _0x5a5027, _0x2bcb05, _0x14c550['fieldOfVie' + 'w'] * _0xc6f01['Deg2Rad'], _0x14c550['aspectRati' + 'o'], _0x47b81b, _0x27869c), _0x12f0cf['getCameraF' + 'rustumPlan' + 'es'](_0x14c550['projection' + 'ViewMatrix'], _0x3fe8da);
                var _0xc39dc = _0x4fb93b['_tempVecto' + 'r30'];
                _0x14c550['_transform']['getForward'](_0xc39dc), _0x352206['normalize'](_0xc39dc, _0xc39dc);
                for (var _0x209863 = 0x0; _0x209863 < _0x550782; _0x209863++) {
                    var _0x2109cc = this['_shadowSli' + 'ceDatas'][_0x209863];
                    _0x2109cc['sphereCent' + 'erZ'] = _0x12f0cf['getBoundSp' + 'hereByFrus' + 'tum'](_0x27869c[_0x209863], _0x27869c[_0x209863 + 0x1], _0x14c550['fieldOfVie' + 'w'] * _0xc6f01['Deg2Rad'], _0x14c550['aspectRati' + 'o'], _0x14c550['_transform']['position'], _0xc39dc, _0x2109cc['splitBound' + 'Sphere']), _0x12f0cf['getDirecti' + 'onLightSha' + 'dowCullPla' + 'nes'](_0x3fe8da, _0x209863, _0x27869c, _0x5a5027, _0x1acc84, _0x2109cc), _0x12f0cf['getDirecti' + 'onalLightM' + 'atrices'](_0x379dba, _0x50c96c, _0x1acc84, _0x209863, _0x17dcdb['_shadowNea' + 'rPlane'], _0x2c6d75, _0x2109cc, _0x1ef450);
                    if (_0x550782 > 0x1)
                        _0x12f0cf['applySlice' + 'Transform'](_0x2109cc, _0x5b6bf6, _0xe238e0, _0x209863, _0x1ef450);
                }
                _0x12f0cf['prepareSha' + 'dowReceive' + 'rShaderVal' + 'ues'](_0x17dcdb, _0x5b6bf6, _0xe238e0, this['_shadowSli' + 'ceDatas'], _0x550782, this['_shadowMap' + 'Size'], this['_shadowPar' + 'ams'], _0x1ef450, _0x10872a);
                break;
            case _0x1f405c['ShadowLigh' + 'tType']['SpotLight']:
                this['_light'] = _0x17dcdb;
                var _0xbe0a46 = _0x4fb93b['_tempMatri' + 'x0'], _0x1acc84 = this['_lightForw' + 'ard'], _0x1e3076 = this['_light']['_shadowRes' + 'olution'];
                this['_shadowMap' + 'Width'] = _0x1e3076, this['_shadowMap' + 'Height'] = _0x1e3076;
                var _0x1ad18b = this['_shadowSpo' + 'tData'];
                _0x12f0cf['getSpotLig' + 'htShadowDa' + 'ta'](_0x1ad18b, this['_light'], _0x1e3076, this['_shadowPar' + 'ams'], this['_shadowSpo' + 'tMatrices'], this['_shadowMap' + 'Size']);
                break;
            case _0x1f405c['ShadowLigh' + 'tType']['PointLight']:
                break;
            default:
                throw 'There\x20is\x20n' + 'o\x20shadow\x20o' + 'f\x20this\x20typ' + 'e';
                break;
            }
        }
        ['render'](_0xecd554, _0x367dd7, _0x2b69e8) {
            switch (_0x2b69e8) {
            case _0x1f405c['ShadowLigh' + 'tType']['DirectionL' + 'ight']:
                var _0x1bb83f = _0x367dd7['_shaderVal' + 'ues'];
                _0xecd554['pipelineMo' + 'de'] = 'ShadowCast' + 'er', _0x1634f4['setRuntime' + 'ValueMode'](![]);
                var _0x317648 = this['_shadowDir' + 'ectLightMa' + 'p'] = _0x12f0cf['getTempora' + 'ryShadowTe' + 'xture'](this['_shadowMap' + 'Width'], this['_shadowMap' + 'Height'], _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']);
                _0x317648['_start']();
                var _0x1abda8 = this['_light'];
                for (var _0x1df124 = 0x0, _0x33fb47 = this['_cascadeCo' + 'unt']; _0x1df124 < _0x33fb47; _0x1df124++) {
                    var _0x1693c6 = this['_shadowSli' + 'ceDatas'][_0x1df124];
                    _0x12f0cf['getShadowB' + 'ias'](_0x1abda8, _0x1693c6['projection' + 'Matrix'], _0x1693c6['resolution'], this['_shadowBia' + 's']), this['_setupShad' + 'owCasterSh' + 'aderValues'](_0xecd554, _0x1bb83f, _0x1693c6, this['_lightForw' + 'ard'], this['_shadowPar' + 'ams'], this['_shadowBia' + 's'], _0x1f405c['LightType']['Directiona' + 'l']);
                    var _0x5abb72 = _0x28101b['_shadowCul' + 'lInfo'];
                    _0x5abb72['position'] = _0x1693c6['position'], _0x5abb72['cullPlanes'] = _0x1693c6['cullPlanes'], _0x5abb72['cullPlaneC' + 'ount'] = _0x1693c6['cullPlaneC' + 'ount'], _0x5abb72['cullSphere'] = _0x1693c6['splitBound' + 'Sphere'], _0x5abb72['direction'] = this['_lightForw' + 'ard'];
                    var _0x5169b7 = _0x28101b['cullingSha' + 'dow'](_0x5abb72, _0x367dd7, _0xecd554);
                    _0xecd554['cameraShad' + 'erValue'] = _0x1693c6['cameraShad' + 'erValue'], _0x53b337['_updateMar' + 'k']++;
                    var _0x232872 = _0x442335['LayaGL']['instance'], _0x23394e = _0x1693c6['resolution'], _0x2329e3 = _0x1693c6['offsetX'], _0x255cc2 = _0x1693c6['offsetY'];
                    _0x232872['enable'](_0x232872['SCISSOR_TE' + 'ST']), _0x232872['viewport'](_0x2329e3, _0x255cc2, _0x23394e, _0x23394e), _0x232872['scissor'](_0x2329e3, _0x255cc2, _0x23394e, _0x23394e), _0x232872['clear'](_0x232872['DEPTH_BUFF' + 'ER_BIT']), _0x5169b7 && (_0x232872['scissor'](_0x2329e3 + 0x1, _0x255cc2 + 0x1, _0x23394e - 0x2, _0x23394e - 0x2), _0x367dd7['_opaqueQue' + 'ue']['_render'](_0xecd554));
                }
                _0x317648['_end'](), this['_setupShad' + 'owReceiver' + 'ShaderValu' + 'es'](_0x1bb83f), _0x1634f4['setRuntime' + 'ValueMode'](!![]), _0xecd554['pipelineMo' + 'de'] = 'Forward';
                break;
            case _0x1f405c['ShadowLigh' + 'tType']['SpotLight']:
                var _0x1bb83f = _0x367dd7['_shaderVal' + 'ues'];
                _0xecd554['pipelineMo' + 'de'] = 'ShadowCast' + 'er', _0x1634f4['setRuntime' + 'ValueMode'](![]);
                var _0x46c4dc = this['_light'], _0x317648 = this['_shadowSpo' + 'tLightMap'] = _0x12f0cf['getTempora' + 'ryShadowTe' + 'xture'](this['_shadowMap' + 'Width'], this['_shadowMap' + 'Height'], _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']);
                _0x317648['_start']();
                var _0x6ff53f = this['_shadowSpo' + 'tData'];
                _0x12f0cf['getShadowB' + 'ias'](_0x46c4dc, _0x6ff53f['projection' + 'Matrix'], _0x6ff53f['resolution'], this['_shadowBia' + 's']), this['_setupShad' + 'owCasterSh' + 'aderValues'](_0xecd554, _0x1bb83f, _0x6ff53f, this['_light']['transform']['position'], this['_shadowPar' + 'ams'], this['_shadowBia' + 's'], _0x1f405c['LightType']['Spot']);
                var _0x5169b7 = _0x28101b['cullingSpo' + 'tShadow'](_0x6ff53f['cameraCull' + 'Info'], _0x367dd7, _0xecd554);
                _0xecd554['cameraShad' + 'erValue'] = _0x6ff53f['cameraShad' + 'erValue'], _0x53b337['_updateMar' + 'k']++;
                var _0x232872 = _0x442335['LayaGL']['instance'];
                _0x232872['enable'](_0x232872['SCISSOR_TE' + 'ST']), _0x232872['viewport'](_0x6ff53f['offsetX'], _0x6ff53f['offsetY'], _0x6ff53f['resolution'], _0x6ff53f['resolution']), _0x232872['scissor'](_0x6ff53f['offsetX'], _0x6ff53f['offsetY'], _0x6ff53f['resolution'], _0x6ff53f['resolution']), _0x232872['clear'](_0x232872['DEPTH_BUFF' + 'ER_BIT']);
                _0x5169b7 && (_0x232872['scissor'](_0x6ff53f['offsetX'], _0x6ff53f['offsetY'], _0x6ff53f['resolution'], _0x6ff53f['resolution']), _0x367dd7['_opaqueQue' + 'ue']['_render'](_0xecd554));
                _0x317648['_end'](), this['_setupSpot' + 'ShadowRece' + 'iverShader' + 'Values'](_0x1bb83f), _0x1634f4['setRuntime' + 'ValueMode'](!![]), _0xecd554['pipelineMo' + 'de'] = 'Forward';
                break;
            case _0x1f405c['ShadowLigh' + 'tType']['PointLight']:
                break;
            default:
                throw 'There\x20is\x20n' + 'o\x20shadow\x20o' + 'f\x20this\x20typ' + 'e';
                break;
            }
        }
        ['cleanUp']() {
            this['_shadowDir' + 'ectLightMa' + 'p'] && _0x40e7a5['recoverToP' + 'ool'](this['_shadowDir' + 'ectLightMa' + 'p']), this['_shadowSpo' + 'tLightMap'] && _0x40e7a5['recoverToP' + 'ool'](this['_shadowSpo' + 'tLightMap']), this['_shadowDir' + 'ectLightMa' + 'p'] = null, this['_shadowSpo' + 'tLightMap'] = null, this['_light'] = null;
        }
    }
    _0x4fb93b['_tempVecto' + 'r30'] = new _0x352206(), _0x4fb93b['_tempMatri' + 'x0'] = new _0x4c2288(), _0x4fb93b['SHADOW_BIA' + 'S'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowBi' + 'as'), _0x4fb93b['SHADOW_LIG' + 'HT_DIRECTI' + 'ON'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowLi' + 'ghtDirecti' + 'on'), _0x4fb93b['SHADOW_SPL' + 'IT_SPHERES'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowSp' + 'litSpheres'), _0x4fb93b['SHADOW_MAT' + 'RICES'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowMa' + 'trices'), _0x4fb93b['SHADOW_MAP' + '_SIZE'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowMa' + 'pSize'), _0x4fb93b['SHADOW_MAP'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowMa' + 'p'), _0x4fb93b['SHADOW_PAR' + 'AMS'] = _0x18824e['propertyNa' + 'meToID']('u_ShadowPa' + 'rams'), _0x4fb93b['SHADOW_SPO' + 'TMAP'] = _0x18824e['propertyNa' + 'meToID']('u_SpotShad' + 'owMap'), _0x4fb93b['SHADOW_SPO' + 'TMATRICES'] = _0x18824e['propertyNa' + 'meToID']('u_SpotView' + 'ProjectMat' + 'rix'), _0x4fb93b['_maxCascad' + 'es'] = 0x4, _0x4fb93b['_cascadesS' + 'plitDistan' + 'ce'] = new Array(_0x4fb93b['_maxCascad' + 'es'] + 0x1), _0x4fb93b['_frustumPl' + 'anes'] = new Array(new _0x1fee56(new _0x352206()), new _0x1fee56(new _0x352206()), new _0x1fee56(new _0x352206()), new _0x1fee56(new _0x352206()), new _0x1fee56(new _0x352206()), new _0x1fee56(new _0x352206()));
    class _0x32586c {
        constructor() {
            this['_batchRend' + 'erElementP' + 'ool'] = [];
        }
        static ['_registerM' + 'anager'](_0x5570b9) {
            _0x32586c['_managers']['push'](_0x5570b9);
        }
        ['_clear']() {
            this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['dispose']() {
        }
    }
    _0x32586c['_managers'] = [];
    class _0x26db5a extends _0x4a730f {
        constructor() {
            super();
        }
        ['add'](_0x4cfa78) {
            this['_add'](_0x4cfa78), _0x4cfa78['_setIndexI' + 'nReflectio' + 'nList'](this['length']++);
        }
        ['remove'](_0x424b8c) {
            var _0x7e797c = _0x424b8c['_getIndexI' + 'nReflectio' + 'nList']();
            this['length']--;
            if (_0x7e797c !== this['length']) {
                var _0x3c761a = this['elements'][this['length']];
                this['elements'][_0x7e797c] = _0x3c761a, _0x3c761a['_setIndexI' + 'nReflectio' + 'nList'](_0x7e797c);
            }
            _0x424b8c['_setIndexI' + 'nReflectio' + 'nList'](-0x1);
        }
    }
    class _0x3e1252 {
        constructor() {
            this['_reflectio' + 'nProbes'] = new _0x26db5a(), this['_motionObj' + 'ects'] = new _0x4a730f(), this['_needUpdat' + 'eAllRender'] = ![], this['_sceneRefl' + 'ectionProb' + 'e'] = new _0x542d3e(), this['_sceneRefl' + 'ectionProb' + 'e']['bounds'] = new _0x1f1598(new _0x352206(0x0, 0x0, 0x0), new _0x352206(0x0, 0x0, 0x0)), this['_sceneRefl' + 'ectionProb' + 'e']['boxProject' + 'ion'] = ![], this['_sceneRefl' + 'ectionProb' + 'e']['_isScene'] = !![];
        }
        set ['sceneRefle' + 'ctionProbe'](_0x4bfa8f) {
            this['_sceneRefl' + 'ectionProb' + 'e']['reflection' + 'Texture'] = _0x4bfa8f;
        }
        set ['sceneRefle' + 'ctionCubeH' + 'DRParam'](_0x5597b4) {
            this['_sceneRefl' + 'ectionProb' + 'e']['reflection' + 'HDRParams'] = _0x5597b4;
        }
        ['_updateMot' + 'ionObjects'](_0x4043b1) {
            if (this['_reflectio' + 'nProbes']['length'] == 0x0) {
                _0x4043b1['_probRefle' + 'ction'] = this['_sceneRefl' + 'ectionProb' + 'e'];
                return;
            }
            var _0x21ac6e = this['_reflectio' + 'nProbes']['elements'], _0xc4c6e6 = 0x0, _0x167375, _0x233914 = _0x4043b1['bounds'], _0x255824;
            for (var _0x28d927 = 0x0, _0x47ae0c = this['_reflectio' + 'nProbes']['length']; _0x28d927 < _0x47ae0c; _0x28d927++) {
                var _0x41dd22 = _0x21ac6e[_0x28d927];
                if (!_0x167375) {
                    _0x255824 = _0x233914['calculateB' + 'oundsinter' + 'section'](_0x41dd22['bounds']);
                    if (_0x255824 < _0xc4c6e6)
                        continue;
                } else {
                    if (_0x167375['importance'] > _0x41dd22['importance'])
                        continue;
                    _0x255824 = _0x233914['calculateB' + 'oundsinter' + 'section'](_0x41dd22['bounds']);
                    if (_0x255824 < _0xc4c6e6 && _0x167375['importance'] == _0x41dd22['importance'])
                        continue;
                }
                _0x167375 = _0x41dd22, _0xc4c6e6 = _0x255824;
            }
            if (!_0x167375 && this['_sceneRefl' + 'ectionProb' + 'e'])
                _0x167375 = this['_sceneRefl' + 'ectionProb' + 'e'];
            _0x4043b1['_probRefle' + 'ction'] = _0x167375;
        }
        ['add'](_0x253aa8) {
            this['_reflectio' + 'nProbes']['add'](_0x253aa8), this['_needUpdat' + 'eAllRender'] = !![];
        }
        ['remove'](_0x3dc8d8) {
            this['_reflectio' + 'nProbes']['remove'](_0x3dc8d8), this['_needUpdat' + 'eAllRender'] = !![];
        }
        ['addMotionO' + 'bject'](_0x2dbbdf) {
            this['_motionObj' + 'ects']['add'](_0x2dbbdf);
        }
        ['update']() {
            var _0x2b58db = this['_motionObj' + 'ects']['elements'];
            for (var _0x49b27b = 0x0, _0x4a30c1 = this['_motionObj' + 'ects']['length']; _0x49b27b < _0x4a30c1; _0x49b27b++) {
                this['_updateMot' + 'ionObjects'](_0x2b58db[_0x49b27b]);
            }
            this['clearMotio' + 'nObjects']();
        }
        ['updateAllR' + 'enderObjec' + 'ts'](_0xec15e8) {
            var _0x2aed99 = _0xec15e8['elements'];
            for (var _0x21e6db = 0x0, _0x423d2a = _0xec15e8['length']; _0x21e6db < _0x423d2a; _0x21e6db++) {
                this['_updateMot' + 'ionObjects'](_0x2aed99[_0x21e6db]);
            }
            this['_needUpdat' + 'eAllRender'] = ![];
        }
        ['clearMotio' + 'nObjects']() {
            this['_motionObj' + 'ects']['length'] = 0x0;
        }
        ['destroy']() {
        }
    }
    (function (_0xb7d99b) {
        _0xb7d99b[_0xb7d99b['SolidColor'] = 0x0] = 'SolidColor', _0xb7d99b[_0xb7d99b['SphericalH' + 'armonics'] = 0x1] = 'SphericalH' + 'armonics';
    }(_0x1f405c['AmbientMod' + 'e'] || (_0x1f405c['AmbientMod' + 'e'] = {})));
    class _0x397862 extends _0x442335['Sprite'] {
        constructor() {
            super(), this['_lightCoun' + 't'] = 0x0, this['_pointLigh' + 'ts'] = new _0x1935cd(), this['_spotLight' + 's'] = new _0x1935cd(), this['_direction' + 'Lights'] = new _0x1935cd(), this['_alternate' + 'Lights'] = new _0x1d8e03(), this['_lightmaps'] = [], this['_skyRender' + 'er'] = new _0x37201d(), this['_input'] = new _0x405d9a(), this['_timer'] = _0x442335['ILaya']['timer'], this['_time'] = 0x0, this['_shCoeffic' + 'ients'] = new Array(0x7), this['_ambientMo' + 'de'] = _0x1f405c['AmbientMod' + 'e']['SolidColor'], this['_ambientSp' + 'hericalHar' + 'monics'] = new _0x1a99bf(), this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'] = 0x1, this['_reflectio' + 'nDecodeFor' + 'mat'] = _0x442335['TextureDec' + 'odeFormat']['Normal'], this['_reflectio' + 'nIntensity'] = 0x1, this['_collsionT' + 'estList'] = [], this['_renders'] = new _0x53809e(), this['_opaqueQue' + 'ue'] = new _0x185a54(![]), this['_transpare' + 'ntQueue'] = new _0x185a54(!![]), this['_cameraPoo' + 'l'] = [], this['_animatorP' + 'ool'] = new _0x53809e(), this['_scriptPoo' + 'l'] = new Array(), this['_tempScrip' + 'tPool'] = new Array(), this['_needClear' + 'ScriptPool'] = ![], this['_reflectio' + 'nCubeHDRPa' + 'rams'] = new _0x18425e(), this['_reflectio' + 'nProbeMana' + 'ger'] = new _0x3e1252(), this['currentCre' + 'ationLayer'] = Math['pow'](0x2, 0x0), this['enableLigh' + 't'] = !![], this['_key'] = new _0x442335['SubmitKey'](), this['_pickIdToS' + 'prite'] = new Object(), this['_reflectio' + 'nMode'] = 0x0;
            if (!_0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine'] && _0x3c230b['_bullet'])
                this['_physicsSi' + 'mulation'] = new _0x101776(_0x397862['physicsSet' + 'tings']);
            else
                _0x3c230b['_cannon'] && (this['_cannonPhy' + 'sicsSimula' + 'tion'] = new _0x442335['CannonPhys' + 'icsSimulat' + 'ion'](_0x397862['cannonPhys' + 'icsSetting' + 's']));
            this['_shaderVal' + 'ues'] = new _0x1634f4(null), this['enableFog'] = ![], this['fogStart'] = 0x12c, this['fogRange'] = 0x3e8, this['fogColor'] = new _0x352206(0.7, 0.7, 0.7), this['ambientCol' + 'or'] = new _0x352206(0.212, 0.227, 0.259), this['reflection' + 'Intensity'] = 0x1, this['reflection'] = _0x4b21e5['blackTextu' + 're'];
            for (var _0x569628 = 0x0; _0x569628 < 0x7; _0x569628++)
                this['_shCoeffic' + 'ients'][_0x569628] = new _0x18425e();
            this['_reflectio' + 'nProbeMana' + 'ger']['sceneRefle' + 'ctionCubeH' + 'DRParam'] = this['_reflectio' + 'nCubeHDRPa' + 'rams'], this['_scene'] = this, this['_input']['__init__'](_0x442335['Render']['canvas'], this);
            if (_0x397862['octreeCull' + 'ing'])
                this['_octree'] = new _0x1f4309(_0x397862['octreeInit' + 'ialSize'], _0x397862['octreeInit' + 'ialCenter'], _0x397862['octreeMinN' + 'odeSize'], _0x397862['octreeLoos' + 'eness']);
            if (_0x28101b['debugFrust' + 'umCulling']) {
                this['_debugTool'] = new _0x2a91dd();
                var _0x2277e1 = new _0x4ce9d0();
                _0x2277e1['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], _0x2277e1['alphaTest'] = ![], _0x2277e1['depthWrite'] = ![], _0x2277e1['cull'] = _0x5c0fbd['CULL_BACK'], _0x2277e1['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], _0x2277e1['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], _0x2277e1['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], _0x2277e1['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_debugTool']['pixelLineR' + 'enderer']['sharedMate' + 'rial'] = _0x2277e1;
            }
        }
        static ['__init__']() {
            var _0xf542d = _0x1a3b39['_config'], _0x340e9a = _0xf542d['_multiLigh' + 'ting'];
            if (_0x340e9a) {
                const _0x15ee25 = 0x4;
                var _0xfdbb1a = _0xf542d['maxLightCo' + 'unt'], _0x3fdc34 = _0xf542d['lightClust' + 'erCount'];
                _0x1f70a4['instance'] = new _0x1f70a4(_0x3fdc34['x'], _0x3fdc34['y'], _0x3fdc34['z'], Math['min'](_0xf542d['maxLightCo' + 'unt'], _0xf542d['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'])), _0x397862['_lightText' + 'ure'] = _0x47bed9['_createFlo' + 'atTextureB' + 'uffer'](_0x15ee25, _0xfdbb1a), _0x397862['_lightText' + 'ure']['lock'] = !![], _0x397862['_lightPixl' + 'es'] = new Float32Array(_0xfdbb1a * _0x15ee25 * 0x4);
            }
            _0x3b7520['SHADERDEFI' + 'NE_FOG'] = _0x18824e['getDefineB' + 'yName']('FOG'), _0x3b7520['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'] = _0x18824e['getDefineB' + 'yName']('DIRECTIONL' + 'IGHT'), _0x3b7520['SHADERDEFI' + 'NE_POINTLI' + 'GHT'] = _0x18824e['getDefineB' + 'yName']('POINTLIGHT'), _0x3b7520['SHADERDEFI' + 'NE_SPOTLIG' + 'HT'] = _0x18824e['getDefineB' + 'yName']('SPOTLIGHT'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW'] = _0x18824e['getDefineB' + 'yName']('SHADOW'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'CASCADE'] = _0x18824e['getDefineB' + 'yName']('SHADOW_CAS' + 'CADE'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW'] = _0x18824e['getDefineB' + 'yName']('SHADOW_SOF' + 'T_SHADOW_L' + 'OW'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH'] = _0x18824e['getDefineB' + 'yName']('SHADOW_SOF' + 'T_SHADOW_H' + 'IGH'), _0x3b7520['SHADERDEFI' + 'NE_GI_AMBI' + 'ENT_SH'] = _0x18824e['getDefineB' + 'yName']('GI_AMBIENT' + '_SH'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT'] = _0x18824e['getDefineB' + 'yName']('SHADOW_SPO' + 'T'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_LOW'] = _0x18824e['getDefineB' + 'yName']('SHADOW_SPO' + 'T_SOFT_SHA' + 'DOW_LOW'), _0x3b7520['SHADERDEFI' + 'NE_SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_HIG' + 'H'] = _0x18824e['getDefineB' + 'yName']('SHADOW_SPO' + 'T_SOFT_SHA' + 'DOW_HIGH');
            var _0x477fab = _0x1a3b39['_config'], _0x36b383 = _0x397862['_configDef' + 'ineValues'];
            _0x477fab['_multiLigh' + 'ting'] || _0x36b383['add'](_0x18824e['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING']);
            if (_0x442335['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'])
                _0x36b383['add'](_0x18824e['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '3']);
            else
                _0x36b383['add'](_0x18824e['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '2']);
            switch (_0x477fab['pbrRenderQ' + 'uality']) {
            case _0x1f405c['PBRRenderQ' + 'uality']['High']:
                _0x36b383['add'](_0x460fe4['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_HIG' + 'H']);
                break;
            case _0x1f405c['PBRRenderQ' + 'uality']['Low']:
                _0x36b383['add'](_0x460fe4['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_LOW']);
                break;
            default:
                throw 'Scene3D:un' + 'known\x20shad' + 'er\x20quality' + '.';
            }
            _0x477fab['isUseCanno' + 'nPhysicsEn' + 'gine'] ? _0x397862['cannonPhys' + 'icsSetting' + 's'] = new _0x442335['CannonPhys' + 'icsSetting' + 's']() : _0x397862['physicsSet' + 'tings'] = new _0x4c00fb();
        }
        static ['load'](_0x280bde, _0x523c23) {
            _0x442335['ILaya']['loader']['create'](_0x280bde, _0x523c23, null, _0x397862['HIERARCHY']);
        }
        get ['url']() {
            return this['_url'];
        }
        get ['enableFog']() {
            return this['_enableFog'];
        }
        set ['enableFog'](_0x3c060c) {
            if (this['_enableFog'] !== _0x3c060c) {
                this['_enableFog'] = _0x3c060c;
                if (_0x3c060c)
                    this['_shaderVal' + 'ues']['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_FOG']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_FOG']);
            }
        }
        get ['fogColor']() {
            return this['_shaderVal' + 'ues']['getVector3'](_0x397862['FOGCOLOR']);
        }
        set ['fogColor'](_0x4e542a) {
            this['_shaderVal' + 'ues']['setVector3'](_0x397862['FOGCOLOR'], _0x4e542a);
        }
        get ['fogStart']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x397862['FOGSTART']);
        }
        set ['fogStart'](_0x246cd8) {
            this['_shaderVal' + 'ues']['setNumber'](_0x397862['FOGSTART'], _0x246cd8);
        }
        get ['fogRange']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x397862['FOGRANGE']);
        }
        set ['fogRange'](_0x1f7c9c) {
            this['_shaderVal' + 'ues']['setNumber'](_0x397862['FOGRANGE'], _0x1f7c9c);
        }
        get ['ambientMod' + 'e']() {
            return this['_ambientMo' + 'de'];
        }
        set ['ambientMod' + 'e'](_0x46bbbe) {
            if (this['_ambientMo' + 'de'] !== _0x46bbbe) {
                switch (_0x46bbbe) {
                case _0x1f405c['AmbientMod' + 'e']['SolidColor']:
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_GI_AMBI' + 'ENT_SH']);
                    break;
                case _0x1f405c['AmbientMod' + 'e']['SphericalH' + 'armonics']:
                    this['_shaderVal' + 'ues']['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_GI_AMBI' + 'ENT_SH']);
                    break;
                default:
                    throw 'Scene3D:\x20u' + 'nknown\x20amb' + 'ientMode.';
                }
                this['_ambientMo' + 'de'] = _0x46bbbe;
            }
        }
        get ['ambientCol' + 'or']() {
            return this['_shaderVal' + 'ues']['getVector3'](_0x397862['AMBIENTCOL' + 'OR']);
        }
        set ['ambientCol' + 'or'](_0x17eef9) {
            this['_shaderVal' + 'ues']['setVector3'](_0x397862['AMBIENTCOL' + 'OR'], _0x17eef9);
        }
        get ['ambientSph' + 'ericalHarm' + 'onics']() {
            return this['_ambientSp' + 'hericalHar' + 'monics'];
        }
        set ['ambientSph' + 'ericalHarm' + 'onics'](_0x3946e4) {
            var _0x30d40c = _0x3946e4 || _0x1a99bf['_default'];
            this['_applySHCo' + 'efficients'](_0x30d40c, Math['pow'](this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'], 2.2));
            if (this['_ambientSp' + 'hericalHar' + 'monics'] != _0x3946e4)
                _0x3946e4['cloneTo'](this['_ambientSp' + 'hericalHar' + 'monics']);
        }
        get ['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity']() {
            return this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'];
        }
        set ['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity'](_0x11455e) {
            _0x11455e = Math['max'](Math['min'](_0x11455e, 0x8), 0x0);
            if (this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'] !== _0x11455e) {
                var _0x536379 = this['_ambientSp' + 'hericalHar' + 'monics'] || _0x1a99bf['_default'];
                this['_applySHCo' + 'efficients'](_0x536379, Math['pow'](_0x11455e, 2.2)), this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'] = _0x11455e;
            }
        }
        get ['reflection']() {
            return this['_reflectio' + 'n'];
        }
        set ['reflection'](_0x3bdefd) {
            this['_reflectio' + 'n'] != _0x3bdefd && (_0x3bdefd['_addRefere' + 'nce'](), this['_reflectio' + 'nProbeMana' + 'ger']['sceneRefle' + 'ctionProbe'] = _0x3bdefd, this['_reflectio' + 'n'] = _0x3bdefd || _0x4b21e5['blackTextu' + 're'], this['_reflectio' + 'nProbeMana' + 'ger']['_needUpdat' + 'eAllRender'] = !![]);
        }
        get ['reflection' + 'DecodingFo' + 'rmat']() {
            return this['_reflectio' + 'nDecodeFor' + 'mat'];
        }
        set ['reflection' + 'DecodingFo' + 'rmat'](_0x1f3d7f) {
            if (this['_reflectio' + 'nDecodeFor' + 'mat'] != _0x1f3d7f) {
                this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] = this['_reflectio' + 'nIntensity'];
                if (this['_reflectio' + 'nDecodeFor' + 'mat'] == _0x442335['TextureDec' + 'odeFormat']['RGBM'])
                    this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] *= 0x5;
                this['_reflectio' + 'nDecodeFor' + 'mat'] = _0x1f3d7f, this['_reflectio' + 'nProbeMana' + 'ger']['sceneRefle' + 'ctionCubeH' + 'DRParam'] = this['_reflectio' + 'nCubeHDRPa' + 'rams'];
            }
        }
        get ['reflection' + 'Intensity']() {
            return this['_reflectio' + 'nIntensity'];
        }
        set ['reflection' + 'Intensity'](_0x1d5698) {
            _0x1d5698 = Math['max'](Math['min'](_0x1d5698, 0x1), 0x0), this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] = _0x1d5698;
            if (this['_reflectio' + 'nDecodeFor' + 'mat'] == _0x442335['TextureDec' + 'odeFormat']['RGBM'])
                this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] *= 0x5;
            this['_reflectio' + 'nIntensity'] = _0x1d5698, this['_reflectio' + 'nProbeMana' + 'ger']['sceneRefle' + 'ctionCubeH' + 'DRParam'] = this['_reflectio' + 'nCubeHDRPa' + 'rams'];
        }
        get ['skyRendere' + 'r']() {
            return this['_skyRender' + 'er'];
        }
        get ['physicsSim' + 'ulation']() {
            return this['_physicsSi' + 'mulation'];
        }
        get ['cannonPhys' + 'icsSimulat' + 'ion']() {
            return this['_cannonPhy' + 'sicsSimula' + 'tion'];
        }
        get ['timer']() {
            return this['_timer'];
        }
        set ['timer'](_0xd77af4) {
            this['_timer'] = _0xd77af4;
        }
        get ['input']() {
            return this['_input'];
        }
        get ['lightmaps']() {
            return this['_lightmaps']['slice']();
        }
        set ['lightmaps'](_0x54243d) {
            var _0x3ea783 = this['_lightmaps'];
            if (_0x3ea783)
                for (var _0x22da4e = 0x0, _0x50e803 = _0x3ea783['length']; _0x22da4e < _0x50e803; _0x22da4e++) {
                    var _0x2ab80b = _0x3ea783[_0x22da4e];
                    _0x2ab80b['lightmapCo' + 'lor']['_removeRef' + 'erence'](), _0x2ab80b['lightmapDi' + 'rection']['_removeRef' + 'erence']();
                }
            if (_0x54243d) {
                var _0x5b9c04 = _0x54243d['length'];
                _0x3ea783['length'] = _0x5b9c04;
                for (_0x22da4e = 0x0; _0x22da4e < _0x5b9c04; _0x22da4e++) {
                    var _0x2ab80b = _0x54243d[_0x22da4e];
                    _0x2ab80b['lightmapCo' + 'lor'] && _0x2ab80b['lightmapCo' + 'lor']['_addRefere' + 'nce'](), _0x2ab80b['lightmapDi' + 'rection'] && _0x2ab80b['lightmapDi' + 'rection']['_addRefere' + 'nce'](), _0x3ea783[_0x22da4e] = _0x2ab80b;
                }
            } else
                _0x3ea783['length'] = 0x0;
        }
        ['_applySHCo' + 'efficients'](_0x2e8920, _0x2e9a85) {
            var _0x57787c = this['_shCoeffic' + 'ients'];
            for (var _0x242865 = 0x0; _0x242865 < 0x3; _0x242865++) {
                var _0xf68f29 = _0x57787c[_0x242865], _0x23b87b = _0x57787c[_0x242865 + 0x3];
                _0xf68f29['setValue'](_0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x3) * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x1) * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x2) * _0x2e9a85, (_0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x0) - _0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x6)) * _0x2e9a85), _0x23b87b['setValue'](_0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x4) * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x5) * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x6) * 0x3 * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](_0x242865, 0x7) * _0x2e9a85);
            }
            _0x57787c[0x6]['setValue'](_0x2e8920['getCoeffic' + 'ient'](0x0, 0x8) * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](0x1, 0x8) * _0x2e9a85, _0x2e8920['getCoeffic' + 'ient'](0x2, 0x8) * _0x2e9a85, 0x1);
            var _0x5a7f0c = this['_shaderVal' + 'ues'];
            _0x5a7f0c['setVector'](_0x397862['AMBIENTSHA' + 'R'], _0x57787c[0x0]), _0x5a7f0c['setVector'](_0x397862['AMBIENTSHA' + 'G'], _0x57787c[0x1]), _0x5a7f0c['setVector'](_0x397862['AMBIENTSHA' + 'B'], _0x57787c[0x2]), _0x5a7f0c['setVector'](_0x397862['AMBIENTSHB' + 'R'], _0x57787c[0x3]), _0x5a7f0c['setVector'](_0x397862['AMBIENTSHB' + 'G'], _0x57787c[0x4]), _0x5a7f0c['setVector'](_0x397862['AMBIENTSHB' + 'B'], _0x57787c[0x5]), _0x5a7f0c['setVector'](_0x397862['AMBIENTSHC'], _0x57787c[0x6]);
        }
        ['_update']() {
            var _0x2a431d = this['timer']['_delta'] / 0x3e8;
            this['_time'] += _0x2a431d, this['_shaderVal' + 'ues']['setNumber'](_0x397862['TIME'], this['_time']);
            var _0x2d828d = this['_physicsSi' + 'mulation'];
            _0x3c230b['_enablePhy' + 'sics'] && !_0x101776['disableSim' + 'ulation'] && !_0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine'] && (_0x2d828d['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der'](), _0x3e3f17['_addUpdate' + 'List'] = ![], _0x2d828d['_simulate'](_0x2a431d), _0x2d828d['_updateCha' + 'racters'](), _0x3e3f17['_addUpdate' + 'List'] = !![], _0x2d828d['_updateCol' + 'lisions'](), _0x2d828d['_eventScri' + 'pts']());
            if (_0x3c230b['_cannon'] && _0x1a3b39['_config']['isUseCanno' + 'nPhysicsEn' + 'gine']) {
                var _0x4e1be7 = this['_cannonPhy' + 'sicsSimula' + 'tion'];
                _0x4e1be7['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der'](), _0x442335['CannonPhys' + 'icsCompone' + 'nt']['_addUpdate' + 'List'] = ![], _0x4e1be7['_simulate'](_0x2a431d), _0x442335['CannonPhys' + 'icsCompone' + 'nt']['_addUpdate' + 'List'] = !![], _0x4e1be7['_updateCol' + 'lisions'](), _0x4e1be7['_eventScri' + 'pts']();
            }
            this['_input']['_update'](), this['_clearScri' + 'pt'](), this['_updateScr' + 'ipt'](), _0x331cef['_update'](this), _0x442335['VideoTextu' + 're']['_update']();
            if (this['_reflectio' + 'nProbeMana' + 'ger']['_needUpdat' + 'eAllRender'])
                this['_reflectio' + 'nProbeMana' + 'ger']['updateAllR' + 'enderObjec' + 'ts'](this['_renders']);
            else
                this['_reflectio' + 'nProbeMana' + 'ger']['update']();
            this['_lateUpdat' + 'eScript']();
        }
        ['_binarySea' + 'rchIndexIn' + 'CameraPool'](_0xfb69f5) {
            var _0x31933c = 0x0, _0x22b9de = this['_cameraPoo' + 'l']['length'] - 0x1, _0x3785d9;
            while (_0x31933c <= _0x22b9de) {
                _0x3785d9 = Math['floor']((_0x31933c + _0x22b9de) / 0x2);
                var _0x2d5444 = this['_cameraPoo' + 'l'][_0x3785d9]['_rendering' + 'Order'];
                if (_0x2d5444 == _0xfb69f5['_rendering' + 'Order'])
                    return _0x3785d9;
                else {
                    if (_0x2d5444 > _0xfb69f5['_rendering' + 'Order'])
                        _0x22b9de = _0x3785d9 - 0x1;
                    else
                        _0x31933c = _0x3785d9 + 0x1;
                }
            }
            return _0x31933c;
        }
        ['_allotPick' + 'ColorByID'](_0x5a2669, _0x40e159) {
            var _0x575c8c = Math['floor'](_0x5a2669 / (0xff * 0xff));
            _0x5a2669 -= _0x575c8c * 0xff * 0xff;
            var _0x2f48a7 = Math['floor'](_0x5a2669 / 0xff);
            _0x5a2669 -= _0x2f48a7 * 0xff;
            var _0x2f5735 = _0x5a2669;
            _0x40e159['x'] = _0x575c8c / 0xff, _0x40e159['y'] = _0x2f48a7 / 0xff, _0x40e159['z'] = _0x2f5735 / 0xff, _0x40e159['w'] = 0x1;
        }
        ['_searchIDB' + 'yPickColor'](_0x32ddc9) {
            var _0x849faf = _0x32ddc9['x'] * 0xff * 0xff + _0x32ddc9['y'] * 0xff + _0x32ddc9['z'];
            return _0x849faf;
        }
        ['onEnable']() {
            this['_input']['_onCanvasE' + 'vent'](_0x442335['Render']['canvas']);
        }
        ['onDisable']() {
            this['_input']['_offCanvas' + 'Event'](_0x442335['Render']['canvas']);
        }
        ['_setCreate' + 'URL'](_0x100116) {
            this['_url'] = _0x442335['URL']['formatURL'](_0x100116);
        }
        ['_getGroup']() {
            return this['_group'];
        }
        ['_setGroup'](_0x213da9) {
            this['_group'] = _0x213da9;
        }
        ['_clearScri' + 'pt']() {
            if (this['_needClear' + 'ScriptPool']) {
                var _0x569b9a = this['_scriptPoo' + 'l'];
                for (var _0x4eb0fc = 0x0, _0x274ab2 = _0x569b9a['length']; _0x4eb0fc < _0x274ab2; _0x4eb0fc++) {
                    var _0x338444 = _0x569b9a[_0x4eb0fc];
                    _0x338444 && (_0x338444['_indexInPo' + 'ol'] = this['_tempScrip' + 'tPool']['length'], this['_tempScrip' + 'tPool']['push'](_0x338444));
                }
                this['_scriptPoo' + 'l'] = this['_tempScrip' + 'tPool'], _0x569b9a['length'] = 0x0, this['_tempScrip' + 'tPool'] = _0x569b9a, this['_needClear' + 'ScriptPool'] = ![];
            }
        }
        ['_updateScr' + 'ipt']() {
            var _0x54a9e3 = this['_scriptPoo' + 'l'];
            for (var _0x3d9d4c = 0x0, _0x385959 = _0x54a9e3['length']; _0x3d9d4c < _0x385959; _0x3d9d4c++) {
                var _0xbce15a = _0x54a9e3[_0x3d9d4c];
                _0xbce15a && _0xbce15a['enabled'] && _0xbce15a['onUpdate']();
            }
        }
        ['_lateUpdat' + 'eScript']() {
            var _0x3483b3 = this['_scriptPoo' + 'l'];
            for (var _0x503c80 = 0x0, _0xf31638 = _0x3483b3['length']; _0x503c80 < _0xf31638; _0x503c80++) {
                var _0x15ced7 = _0x3483b3[_0x503c80];
                _0x15ced7 && _0x15ced7['enabled'] && _0x15ced7['onLateUpda' + 'te']();
            }
        }
        ['_onActive']() {
            super['_onActive'](), _0x442335['ILaya']['stage']['_scene3Ds']['push'](this);
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e']();
            var _0x903160 = _0x442335['ILaya']['stage']['_scene3Ds'];
            _0x903160['splice'](_0x903160['indexOf'](this), 0x1);
        }
        ['_prepareSc' + 'eneToRende' + 'r']() {
            var _0x1b3bee = this['_shaderVal' + 'ues'], _0x3b5c3c = _0x1a3b39['_config']['_multiLigh' + 'ting'];
            if (_0x3b5c3c) {
                var _0x34698c = _0x397862['_lightText' + 'ure'], _0x26ea86 = _0x397862['_lightPixl' + 'es'];
                const _0xa029d9 = _0x34698c['width'], _0x55cf3d = _0xa029d9 * 0x4;
                var _0x63f623 = 0x0, _0x538352 = this['_direction' + 'Lights']['_length'], _0x5df46b = this['_direction' + 'Lights']['_elements'];
                if (_0x538352 > 0x0) {
                    var _0x203420 = this['_direction' + 'Lights']['getBrighte' + 'stLight']();
                    this['_mainDirec' + 'tionLight'] = _0x5df46b[_0x203420], this['_direction' + 'Lights']['normalLigh' + 'tOrdering'](_0x203420);
                    for (var _0x971a0 = 0x0; _0x971a0 < _0x538352; _0x971a0++, _0x63f623++) {
                        var _0x656e10 = _0x5df46b[_0x971a0], _0x2440b2 = _0x656e10['_direction'], _0x919a04 = _0x656e10['_intensity' + 'Color'], _0x3197e8 = _0x55cf3d * _0x63f623;
                        _0x352206['scale'](_0x656e10['color'], _0x656e10['_intensity'], _0x919a04), _0x656e10['transform']['worldMatri' + 'x']['getForward'](_0x2440b2), _0x352206['normalize'](_0x2440b2, _0x2440b2), _0x26ea86[_0x3197e8] = _0x919a04['x'], _0x26ea86[_0x3197e8 + 0x1] = _0x919a04['y'], _0x26ea86[_0x3197e8 + 0x2] = _0x919a04['z'], _0x26ea86[_0x3197e8 + 0x4] = _0x2440b2['x'], _0x26ea86[_0x3197e8 + 0x5] = _0x2440b2['y'], _0x26ea86[_0x3197e8 + 0x6] = _0x2440b2['z'], _0x971a0 == 0x0 && (_0x1b3bee['setVector3'](_0x397862['SUNLIGHTDI' + 'RCOLOR'], _0x919a04), _0x1b3bee['setVector3'](_0x397862['SUNLIGHTDI' + 'RECTION'], _0x2440b2));
                    }
                    _0x1b3bee['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                } else
                    _0x1b3bee['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                var _0x24e68f = this['_pointLigh' + 'ts']['_length'];
                if (_0x24e68f > 0x0) {
                    var _0x513af3 = this['_pointLigh' + 'ts']['_elements'], _0x2caf7a = this['_pointLigh' + 'ts']['getBrighte' + 'stLight']();
                    this['_mainPoint' + 'Light'] = _0x513af3[_0x2caf7a], this['_pointLigh' + 'ts']['normalLigh' + 'tOrdering'](_0x2caf7a);
                    for (var _0x971a0 = 0x0; _0x971a0 < _0x24e68f; _0x971a0++, _0x63f623++) {
                        var _0x274073 = _0x513af3[_0x971a0], _0x32f234 = _0x274073['transform']['position'], _0x919a04 = _0x274073['_intensity' + 'Color'], _0x3197e8 = _0x55cf3d * _0x63f623;
                        _0x352206['scale'](_0x274073['color'], _0x274073['_intensity'], _0x919a04), _0x26ea86[_0x3197e8] = _0x919a04['x'], _0x26ea86[_0x3197e8 + 0x1] = _0x919a04['y'], _0x26ea86[_0x3197e8 + 0x2] = _0x919a04['z'], _0x26ea86[_0x3197e8 + 0x3] = _0x274073['range'], _0x26ea86[_0x3197e8 + 0x4] = _0x32f234['x'], _0x26ea86[_0x3197e8 + 0x5] = _0x32f234['y'], _0x26ea86[_0x3197e8 + 0x6] = _0x32f234['z'];
                    }
                    _0x1b3bee['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                } else
                    _0x1b3bee['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                var _0x221a62 = this['_spotLight' + 's']['_length'];
                if (_0x221a62 > 0x0) {
                    var _0x3327bb = this['_spotLight' + 's']['_elements'], _0xb29cdf = this['_spotLight' + 's']['getBrighte' + 'stLight']();
                    this['_mainSpotL' + 'ight'] = _0x3327bb[_0xb29cdf], this['_spotLight' + 's']['normalLigh' + 'tOrdering'](_0xb29cdf);
                    for (var _0x971a0 = 0x0; _0x971a0 < _0x221a62; _0x971a0++, _0x63f623++) {
                        var _0x2a91cc = _0x3327bb[_0x971a0], _0x2440b2 = _0x2a91cc['_direction'], _0x32f234 = _0x2a91cc['transform']['position'], _0x919a04 = _0x2a91cc['_intensity' + 'Color'], _0x3197e8 = _0x55cf3d * _0x63f623;
                        _0x352206['scale'](_0x2a91cc['color'], _0x2a91cc['_intensity'], _0x919a04), _0x2a91cc['transform']['worldMatri' + 'x']['getForward'](_0x2440b2), _0x352206['normalize'](_0x2440b2, _0x2440b2), _0x26ea86[_0x3197e8] = _0x919a04['x'], _0x26ea86[_0x3197e8 + 0x1] = _0x919a04['y'], _0x26ea86[_0x3197e8 + 0x2] = _0x919a04['z'], _0x26ea86[_0x3197e8 + 0x3] = _0x2a91cc['range'], _0x26ea86[_0x3197e8 + 0x4] = _0x32f234['x'], _0x26ea86[_0x3197e8 + 0x5] = _0x32f234['y'], _0x26ea86[_0x3197e8 + 0x6] = _0x32f234['z'], _0x26ea86[_0x3197e8 + 0x7] = _0x2a91cc['spotAngle'] * Math['PI'] / 0xb4, _0x26ea86[_0x3197e8 + 0x8] = _0x2440b2['x'], _0x26ea86[_0x3197e8 + 0x9] = _0x2440b2['y'], _0x26ea86[_0x3197e8 + 0xa] = _0x2440b2['z'];
                    }
                    _0x1b3bee['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                } else
                    _0x1b3bee['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                _0x63f623 > 0x0 && _0x34698c['setSubPixe' + 'ls'](0x0, 0x0, _0xa029d9, _0x63f623, _0x26ea86, 0x0), _0x1b3bee['setTexture'](_0x397862['LIGHTBUFFE' + 'R'], _0x34698c), _0x1b3bee['setInt'](_0x397862['DIRECTIONL' + 'IGHTCOUNT'], this['_direction' + 'Lights']['_length']), _0x1b3bee['setTexture'](_0x397862['CLUSTERBUF' + 'FER'], _0x1f70a4['instance']['_clusterTe' + 'xture']);
            } else {
                if (this['_direction' + 'Lights']['_length'] > 0x0) {
                    var _0x656e10 = this['_direction' + 'Lights']['_elements'][0x0];
                    this['_mainDirec' + 'tionLight'] = _0x656e10, _0x352206['scale'](_0x656e10['color'], _0x656e10['_intensity'], _0x656e10['_intensity' + 'Color']), _0x656e10['transform']['worldMatri' + 'x']['getForward'](_0x656e10['_direction']), _0x352206['normalize'](_0x656e10['_direction'], _0x656e10['_direction']), _0x1b3bee['setVector3'](_0x397862['LIGHTDIRCO' + 'LOR'], _0x656e10['_intensity' + 'Color']), _0x1b3bee['setVector3'](_0x397862['LIGHTDIREC' + 'TION'], _0x656e10['_direction']), _0x1b3bee['setVector3'](_0x397862['SUNLIGHTDI' + 'RCOLOR'], _0x656e10['_intensity' + 'Color']), _0x1b3bee['setVector3'](_0x397862['SUNLIGHTDI' + 'RECTION'], _0x656e10['_direction']), _0x1b3bee['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                } else
                    _0x1b3bee['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                if (this['_pointLigh' + 'ts']['_length'] > 0x0) {
                    var _0x274073 = this['_pointLigh' + 'ts']['_elements'][0x0];
                    this['_mainPoint' + 'Light'] = _0x274073, _0x352206['scale'](_0x274073['color'], _0x274073['_intensity'], _0x274073['_intensity' + 'Color']), _0x1b3bee['setVector3'](_0x397862['POINTLIGHT' + 'COLOR'], _0x274073['_intensity' + 'Color']), _0x1b3bee['setVector3'](_0x397862['POINTLIGHT' + 'POS'], _0x274073['transform']['position']), _0x1b3bee['setNumber'](_0x397862['POINTLIGHT' + 'RANGE'], _0x274073['range']), _0x1b3bee['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                } else
                    _0x1b3bee['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                if (this['_spotLight' + 's']['_length'] > 0x0) {
                    var _0x2c16b2 = this['_spotLight' + 's']['_elements'][0x0];
                    this['_mainSpotL' + 'ight'] = _0x2c16b2, _0x352206['scale'](_0x2c16b2['color'], _0x2c16b2['_intensity'], _0x2c16b2['_intensity' + 'Color']), _0x1b3bee['setVector3'](_0x397862['SPOTLIGHTC' + 'OLOR'], _0x2c16b2['_intensity' + 'Color']), _0x1b3bee['setVector3'](_0x397862['SPOTLIGHTP' + 'OS'], _0x2c16b2['transform']['position']), _0x2c16b2['transform']['worldMatri' + 'x']['getForward'](_0x2c16b2['_direction']), _0x352206['normalize'](_0x2c16b2['_direction'], _0x2c16b2['_direction']), _0x1b3bee['setVector3'](_0x397862['SPOTLIGHTD' + 'IRECTION'], _0x2c16b2['_direction']), _0x1b3bee['setNumber'](_0x397862['SPOTLIGHTR' + 'ANGE'], _0x2c16b2['range']), _0x1b3bee['setNumber'](_0x397862['SPOTLIGHTS' + 'POTANGLE'], _0x2c16b2['spotAngle'] * Math['PI'] / 0xb4), _0x1b3bee['addDefine'](_0x3b7520['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                } else
                    _0x1b3bee['removeDefi' + 'ne'](_0x3b7520['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
            }
        }
        ['_addScript'](_0x423552) {
            var _0x4b3529 = this['_scriptPoo' + 'l'];
            _0x423552['_indexInPo' + 'ol'] = _0x4b3529['length'], _0x4b3529['push'](_0x423552);
        }
        ['_removeScr' + 'ipt'](_0x3cb2ef) {
            this['_scriptPoo' + 'l'][_0x3cb2ef['_indexInPo' + 'ol']] = null, _0x3cb2ef['_indexInPo' + 'ol'] = -0x1, this['_needClear' + 'ScriptPool'] = !![];
        }
        ['_preRender' + 'Script']() {
            var _0x3a8ad9 = this['_scriptPoo' + 'l'];
            for (var _0x239e27 = 0x0, _0x6d20da = _0x3a8ad9['length']; _0x239e27 < _0x6d20da; _0x239e27++) {
                var _0x346825 = _0x3a8ad9[_0x239e27];
                _0x346825 && _0x346825['enabled'] && _0x346825['onPreRende' + 'r']();
            }
        }
        ['_postRende' + 'rScript']() {
            var _0x47a99e = this['_scriptPoo' + 'l'];
            for (var _0xb48667 = 0x0, _0x20b5a5 = _0x47a99e['length']; _0xb48667 < _0x20b5a5; _0xb48667++) {
                var _0x4b7398 = _0x47a99e[_0xb48667];
                _0x4b7398 && _0x4b7398['enabled'] && _0x4b7398['onPostRend' + 'er']();
            }
        }
        ['_addCamera'](_0x41f248) {
            var _0x26cfd6 = this['_binarySea' + 'rchIndexIn' + 'CameraPool'](_0x41f248), _0x2003d6 = _0x41f248['_rendering' + 'Order'], _0x39a1d4 = this['_cameraPoo' + 'l']['length'];
            while (_0x26cfd6 < _0x39a1d4 && this['_cameraPoo' + 'l'][_0x26cfd6]['_rendering' + 'Order'] <= _0x2003d6)
                _0x26cfd6++;
            this['_cameraPoo' + 'l']['splice'](_0x26cfd6, 0x0, _0x41f248);
        }
        ['_removeCam' + 'era'](_0x33c0e7) {
            this['_cameraPoo' + 'l']['splice'](this['_cameraPoo' + 'l']['indexOf'](_0x33c0e7), 0x1);
        }
        ['_preCullin' + 'g'](_0x26ece4, _0x514761, _0x44f784, _0x3c3428) {
            var _0x402ff0 = _0x28101b['_cameraCul' + 'lInfo'];
            _0x402ff0['position'] = _0x514761['_transform']['position'], _0x402ff0['cullingMas' + 'k'] = _0x514761['cullingMas' + 'k'], _0x402ff0['boundFrust' + 'um'] = _0x514761['boundFrust' + 'um'], _0x402ff0['useOcclusi' + 'onCulling'] = _0x514761['useOcclusi' + 'onCulling'], _0x28101b['renderObje' + 'ctCulling'](_0x402ff0, this, _0x26ece4, _0x44f784, _0x3c3428, ![]);
        }
        ['_clear'](_0x478058, _0x370579) {
            var _0x412d90 = _0x370579['viewport'], _0x5b4d5e = _0x370579['camera'], _0x4c0a91 = _0x5b4d5e['_getRender' + 'Texture'](), _0x3c785e, _0x18a798, _0x1cd70d = _0x412d90['width'], _0x516fc7 = _0x412d90['height'];
            _0x5b4d5e['_needInter' + 'nalRenderT' + 'exture']() ? (_0x3c785e = 0x0, _0x18a798 = 0x0) : (_0x3c785e = _0x412d90['x'], _0x18a798 = _0x5b4d5e['_getCanvas' + 'Height']() - _0x412d90['y'] - _0x516fc7);
            _0x478058['viewport'](_0x3c785e, _0x18a798, _0x1cd70d, _0x516fc7);
            var _0x40ca49, _0x41ce48 = _0x5b4d5e['clearFlag'];
            if (_0x41ce48 === _0x1f405c['CameraClea' + 'rFlags']['Sky'] && !(_0x5b4d5e['skyRendere' + 'r']['_isAvailab' + 'le']() || this['_skyRender' + 'er']['_isAvailab' + 'le']()))
                _0x41ce48 = _0x1f405c['CameraClea' + 'rFlags']['SolidColor'];
            switch (_0x41ce48) {
            case _0x1f405c['CameraClea' + 'rFlags']['SolidColor']:
                var _0x20461a = _0x5b4d5e['clearColor'];
                _0x478058['enable'](_0x478058['SCISSOR_TE' + 'ST']), _0x478058['scissor'](_0x3c785e, _0x18a798, _0x1cd70d, _0x516fc7);
                if (_0x20461a)
                    _0x478058['clearColor'](_0x20461a['x'], _0x20461a['y'], _0x20461a['z'], _0x20461a['w']);
                else
                    _0x478058['clearColor'](0x0, 0x0, 0x0, 0x0);
                if (_0x4c0a91) {
                    _0x40ca49 = _0x478058['COLOR_BUFF' + 'ER_BIT'];
                    switch (_0x4c0a91['depthStenc' + 'ilFormat']) {
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x40ca49 |= _0x478058['DEPTH_BUFF' + 'ER_BIT'];
                        break;
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x40ca49 |= _0x478058['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                        _0x40ca49 |= _0x478058['DEPTH_BUFF' + 'ER_BIT'], _0x40ca49 |= _0x478058['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    }
                } else
                    _0x40ca49 = _0x478058['COLOR_BUFF' + 'ER_BIT'] | _0x478058['DEPTH_BUFF' + 'ER_BIT'];
                _0x442335['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x478058, !![]), _0x478058['clear'](_0x40ca49), _0x478058['disable'](_0x478058['SCISSOR_TE' + 'ST']);
                break;
            case _0x1f405c['CameraClea' + 'rFlags']['Sky']:
            case _0x1f405c['CameraClea' + 'rFlags']['DepthOnly']:
                _0x478058['enable'](_0x478058['SCISSOR_TE' + 'ST']), _0x478058['scissor'](_0x3c785e, _0x18a798, _0x1cd70d, _0x516fc7);
                if (_0x4c0a91)
                    switch (_0x4c0a91['depthStenc' + 'ilFormat']) {
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x40ca49 = _0x478058['DEPTH_BUFF' + 'ER_BIT'];
                        break;
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x40ca49 = _0x478058['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    case _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                        _0x40ca49 = _0x478058['DEPTH_BUFF' + 'ER_BIT'] | _0x478058['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    }
                else
                    _0x40ca49 = _0x478058['DEPTH_BUFF' + 'ER_BIT'];
                _0x442335['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x478058, !![]), _0x478058['clear'](_0x40ca49), _0x478058['disable'](_0x478058['SCISSOR_TE' + 'ST']);
                break;
            case _0x1f405c['CameraClea' + 'rFlags']['Nothing']:
                break;
            default:
                throw new Error('Scene3D:ca' + 'mera\x20clear' + 'Flag\x20inval' + 'id.');
            }
        }
        ['_renderSce' + 'ne'](_0x1595b3, _0x4c1c7a) {
            var _0x1b9049 = _0x1595b3['camera'];
            switch (_0x4c1c7a) {
            case _0x397862['SCENERENDE' + 'RFLAG_REND' + 'ERQPAQUE']:
                this['_opaqueQue' + 'ue']['_render'](_0x1595b3);
                break;
            case _0x397862['SCENERENDE' + 'RFLAG_SKYB' + 'OX']:
                if (_0x1b9049['clearFlag'] === _0x1f405c['CameraClea' + 'rFlags']['Sky']) {
                    if (_0x1b9049['skyRendere' + 'r']['_isAvailab' + 'le']())
                        _0x1b9049['skyRendere' + 'r']['_render'](_0x1595b3);
                    else {
                        if (this['_skyRender' + 'er']['_isAvailab' + 'le']())
                            this['_skyRender' + 'er']['_render'](_0x1595b3);
                    }
                }
                break;
            case _0x397862['SCENERENDE' + 'RFLAG_REND' + 'ERTRANSPAR' + 'ENT']:
                this['_transpare' + 'ntQueue']['_render'](_0x1595b3);
                if (_0x28101b['debugFrust' + 'umCulling']) {
                    var _0x3bc21a = this['_debugTool']['_render']['_renderEle' + 'ments'];
                    for (var _0xbd87c4 = 0x0, _0x58c340 = _0x3bc21a['length']; _0xbd87c4 < _0x58c340; _0xbd87c4++) {
                        _0x3bc21a[_0xbd87c4]['_update'](this, _0x1595b3, null, null), _0x3bc21a[_0xbd87c4]['_render'](_0x1595b3);
                    }
                }
                break;
            }
        }
        ['_parse'](_0x337b7b, _0x59d6fe) {
            var _0x3ec4df = _0x337b7b['lightmaps'];
            if (_0x3ec4df) {
                var _0x46092d = _0x3ec4df['length'], _0x27b804 = new Array(_0x46092d);
                for (var _0x38cf41 = 0x0; _0x38cf41 < _0x46092d; _0x38cf41++) {
                    var _0x46642c = new _0x338f4f(), _0x46826e = _0x3ec4df[_0x38cf41];
                    if (_0x46826e['path'])
                        _0x46642c['lightmapCo' + 'lor'] = _0x442335['Loader']['getRes'](_0x46826e['path']);
                    else {
                        _0x46642c['lightmapCo' + 'lor'] = _0x442335['Loader']['getRes'](_0x46826e['color']['path']);
                        if (_0x46826e['direction'])
                            _0x46642c['lightmapDi' + 'rection'] = _0x442335['Loader']['getRes'](_0x46826e['direction']['path']);
                    }
                    _0x27b804[_0x38cf41] = _0x46642c;
                }
                this['lightmaps'] = _0x27b804;
            }
            var _0x1cc54a = _0x337b7b['ambientCol' + 'or'];
            if (_0x1cc54a) {
                var _0x2b88a8 = this['ambientCol' + 'or'];
                _0x2b88a8['fromArray'](_0x1cc54a), this['ambientCol' + 'or'] = _0x2b88a8;
            }
            var _0x5c0717 = _0x337b7b['sky'];
            if (_0x5c0717) {
                this['_skyRender' + 'er']['material'] = _0x442335['Loader']['getRes'](_0x5c0717['material']['path']);
                switch (_0x5c0717['mesh']) {
                case 'SkyBox':
                    this['_skyRender' + 'er']['mesh'] = _0x2be899['instance'];
                    break;
                case 'SkyDome':
                    this['_skyRender' + 'er']['mesh'] = _0x21eee2['instance'];
                    break;
                default:
                    this['skyRendere' + 'r']['mesh'] = _0x2be899['instance'];
                }
            }
            this['enableFog'] = _0x337b7b['enableFog'], this['fogStart'] = _0x337b7b['fogStart'], this['fogRange'] = _0x337b7b['fogRange'];
            var _0x128694 = _0x337b7b['fogColor'];
            if (_0x128694) {
                var _0x162500 = this['fogColor'];
                _0x162500['fromArray'](_0x128694), this['fogColor'] = _0x162500;
            }
            var _0x4477fc = _0x337b7b['ambientSph' + 'ericalHarm' + 'onics'];
            if (_0x4477fc) {
                var _0x370456 = this['ambientSph' + 'ericalHarm' + 'onics'];
                for (var _0x38cf41 = 0x0; _0x38cf41 < 0x3; _0x38cf41++) {
                    var _0x42eaca = _0x38cf41 * 0x9;
                    _0x370456['setCoeffic' + 'ients'](_0x38cf41, _0x4477fc[_0x42eaca], _0x4477fc[_0x42eaca + 0x1], _0x4477fc[_0x42eaca + 0x2], _0x4477fc[_0x42eaca + 0x3], _0x4477fc[_0x42eaca + 0x4], _0x4477fc[_0x42eaca + 0x5], _0x4477fc[_0x42eaca + 0x6], _0x4477fc[_0x42eaca + 0x7], _0x4477fc[_0x42eaca + 0x8]);
                }
                this['ambientSph' + 'ericalHarm' + 'onics'] = _0x370456;
            }
            var _0x15be08 = _0x337b7b['reflection'];
            _0x15be08 != undefined && (this['reflection'] = _0x442335['Loader']['getRes'](_0x15be08));
            var _0x1b9f3b = _0x337b7b['reflection' + 'DecodingFo' + 'rmat'];
            _0x1b9f3b != undefined && (this['reflection' + 'DecodingFo' + 'rmat'] = _0x1b9f3b);
            var _0x206a43 = _0x337b7b['ambientMod' + 'e'];
            _0x206a43 != undefined && (this['ambientMod' + 'e'] = _0x206a43);
            var _0x7cd05e = _0x337b7b['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity'];
            _0x7cd05e != undefined && (this['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity'] = _0x7cd05e);
            var _0x4462eb = _0x337b7b['reflection' + 'Intensity'];
            _0x4462eb != undefined && (this['reflection' + 'Intensity'] = _0x4462eb);
        }
        ['_addRender' + 'Object'](_0x4369c6) {
            this['_octree'] && _0x4369c6['_supportOc' + 'tree'] ? this['_octree']['add'](_0x4369c6) : this['_renders']['add'](_0x4369c6), _0x4369c6['_addReflec' + 'tionProbeU' + 'pdate']();
        }
        ['_removeRen' + 'derObject'](_0x148149) {
            this['_octree'] && _0x148149['_supportOc' + 'tree'] ? this['_octree']['remove'](_0x148149) : this['_renders']['remove'](_0x148149);
        }
        ['_getRender' + 'Queue'](_0x33ce65) {
            if (_0x33ce65 <= 0x9c4)
                return this['_opaqueQue' + 'ue'];
            else
                return this['_transpare' + 'ntQueue'];
        }
        ['_clearRend' + 'erQueue']() {
            this['_opaqueQue' + 'ue']['clear'](), this['_transpare' + 'ntQueue']['clear']();
            var _0x17f412 = _0x435c23['_managers'];
            for (var _0x4451a7 = 0x0, _0x52bd92 = _0x17f412['length']; _0x4451a7 < _0x52bd92; _0x4451a7++)
                _0x17f412[_0x4451a7]['_clear']();
            var _0x40e9c3 = _0x32586c['_managers'];
            for (var _0x4451a7 = 0x0, _0x52bd92 = _0x40e9c3['length']; _0x4451a7 < _0x52bd92; _0x4451a7++)
                _0x40e9c3[_0x4451a7]['_clear']();
        }
        ['destroy'](_0x36f49c = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x36f49c), this['_skyRender' + 'er']['destroy'](), this['_skyRender' + 'er'] = null, this['_direction' + 'Lights'] = null, this['_pointLigh' + 'ts'] = null, this['_spotLight' + 's'] = null, this['_alternate' + 'Lights'] = null, this['_shaderVal' + 'ues'] = null, this['_renders'] = null, this['_cameraPoo' + 'l'] = null, this['_octree'] = null, this['_physicsSi' + 'mulation'] && this['_physicsSi' + 'mulation']['_destroy'](), this['_reflectio' + 'n']['_removeRef' + 'erence'](), this['_reflectio' + 'n'] = null;
            var _0x31dd9c = this['_lightmaps'];
            if (_0x31dd9c)
                for (var _0x3faf9b = 0x0, _0x42f89e = _0x31dd9c['length']; _0x3faf9b < _0x42f89e; _0x3faf9b++) {
                    var _0x29471b = _0x31dd9c[_0x3faf9b];
                    _0x29471b['lightmapCo' + 'lor'] && _0x29471b['lightmapCo' + 'lor']['_removeRef' + 'erence'](), _0x29471b['lightmapDi' + 'rection'] && _0x29471b['lightmapDi' + 'rection']['_removeRef' + 'erence']();
                }
            this['_lightmaps'] = null, this['_reflectio' + 'nProbeMana' + 'ger']['destroy'](), _0x442335['Loader']['clearRes'](this['url']);
        }
        ['render'](_0x55f137, _0x59f852, _0x30f684) {
            _0x55f137['_curSubmit'] = _0x442335['SubmitBase']['RENDERBASE'], this['_children']['length'] > 0x0 && _0x55f137['addRenderO' + 'bject'](this);
        }
        ['renderSubm' + 'it']() {
            var _0xbcb707 = _0x442335['LayaGL']['instance'];
            this['_prepareSc' + 'eneToRende' + 'r']();
            var _0x5ba2dd, _0x16fa60, _0x204dbf;
            for (_0x5ba2dd = 0x0, _0x16fa60 = this['_cameraPoo' + 'l']['length'], _0x204dbf = _0x16fa60 - 0x1; _0x5ba2dd < _0x16fa60; _0x5ba2dd++) {
                if (_0x442335['Render']['supportWeb' + 'GLPlusRend' + 'ering'])
                    _0x1634f4['setRuntime' + 'ValueMode'](_0x5ba2dd == _0x204dbf ? !![] : ![]);
                var _0x14903f = this['_cameraPoo' + 'l'][_0x5ba2dd];
                _0x14903f['enableRend' + 'er'] && _0x14903f['render']();
            }
            return _0x442335['Context']['set2DRende' + 'rConfig'](), 0x1;
        }
        ['getRenderT' + 'ype']() {
            return 0x0;
        }
        ['releaseRen' + 'der']() {
        }
        ['reUse'](_0x5cbfdf, _0x157dd6) {
            return 0x0;
        }
        ['setGlobalS' + 'haderValue'](_0x576715, _0x10f8fb, _0x1ce726) {
            var _0x5dd45e = _0x18824e['propertyNa' + 'meToID'](_0x576715);
            switch (_0x10f8fb) {
            case _0x1f405c['ShaderData' + 'Type']['Int']:
                this['_shaderVal' + 'ues']['setInt'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Number']:
                this['_shaderVal' + 'ues']['setNumber'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Bool']:
                this['_shaderVal' + 'ues']['setBool'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Matrix4x4']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Quaternion']:
                this['_shaderVal' + 'ues']['setQuatern' + 'ion'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Texture']:
                this['_shaderVal' + 'ues']['setTexture'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector']:
                this['_shaderVal' + 'ues']['setVector'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector2']:
                this['_shaderVal' + 'ues']['setVector2'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Vector3']:
                this['_shaderVal' + 'ues']['setVector3'](_0x5dd45e, _0x1ce726);
                break;
            case _0x1f405c['ShaderData' + 'Type']['Buffer']:
                this['_shaderVal' + 'ues']['setBuffer'](_0x5dd45e, _0x1ce726);
                break;
            }
        }
        get ['customRefl' + 'ection']() {
            return this['_reflectio' + 'n'];
        }
        set ['customRefl' + 'ection'](_0xf4329c) {
            this['_reflectio' + 'n'] != _0xf4329c && (_0xf4329c['_addRefere' + 'nce'](), this['_reflectio' + 'nProbeMana' + 'ger']['sceneRefle' + 'ctionProbe'] = _0xf4329c, this['_reflectio' + 'n'] = _0xf4329c);
        }
        get ['reflection' + 'Mode']() {
            return this['_reflectio' + 'nMode'];
        }
        set ['reflection' + 'Mode'](_0x58a463) {
            this['_reflectio' + 'nMode'] = _0x58a463;
        }
        ['setlightma' + 'ps'](_0x459a6d) {
            var _0x599059 = this['_lightmaps'];
            for (var _0x5848ff = 0x0, _0x32b929 = _0x599059['length']; _0x5848ff < _0x32b929; _0x5848ff++)
                _0x599059[_0x5848ff]['lightmapCo' + 'lor']['_removeRef' + 'erence']();
            if (_0x459a6d) {
                var _0x2a8d7a = _0x459a6d['length'];
                _0x599059['length'] = _0x2a8d7a;
                for (_0x5848ff = 0x0; _0x5848ff < _0x2a8d7a; _0x5848ff++) {
                    var _0x420286 = _0x459a6d[_0x5848ff];
                    _0x420286['_addRefere' + 'nce'](), _0x599059[_0x5848ff] || (_0x599059[_0x5848ff] = new _0x338f4f()), _0x599059[_0x5848ff]['lightmapCo' + 'lor'] = _0x420286;
                }
            } else
                throw new Error('Scene3D:\x20v' + 'alue\x20value' + '\x20can\x27t\x20be\x20' + 'null.');
        }
        ['getlightma' + 'ps']() {
            var _0x3f12c4 = new Array(this['_lightmaps']['length']);
            for (var _0x37f64e = 0x0; _0x37f64e < this['_lightmaps']['length']; _0x37f64e++) {
                _0x3f12c4[_0x37f64e] = this['_lightmaps'][_0x37f64e]['lightmapCo' + 'lor'];
            }
            return _0x3f12c4;
        }
    }
    _0x397862['_shadowCas' + 'terPass'] = new _0x4fb93b(), _0x397862['HIERARCHY'] = 'HIERARCHY', _0x397862['octreeCull' + 'ing'] = ![], _0x397862['octreeInit' + 'ialSize'] = 0x40, _0x397862['octreeInit' + 'ialCenter'] = new _0x352206(0x0, 0x0, 0x0), _0x397862['octreeMinN' + 'odeSize'] = 0x2, _0x397862['octreeLoos' + 'eness'] = 1.25, _0x397862['REFLECTION' + 'MODE_SKYBO' + 'X'] = 0x0, _0x397862['REFLECTION' + 'MODE_CUSTO' + 'M'] = 0x1, _0x397862['SCENERENDE' + 'RFLAG_REND' + 'ERQPAQUE'] = 0x0, _0x397862['SCENERENDE' + 'RFLAG_SKYB' + 'OX'] = 0x1, _0x397862['SCENERENDE' + 'RFLAG_REND' + 'ERTRANSPAR' + 'ENT'] = 0x2, _0x397862['FOGCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_FogColor'), _0x397862['FOGSTART'] = _0x18824e['propertyNa' + 'meToID']('u_FogStart'), _0x397862['FOGRANGE'] = _0x18824e['propertyNa' + 'meToID']('u_FogRange'), _0x397862['DIRECTIONL' + 'IGHTCOUNT'] = _0x18824e['propertyNa' + 'meToID']('u_Diration' + 'LightCount'), _0x397862['LIGHTBUFFE' + 'R'] = _0x18824e['propertyNa' + 'meToID']('u_LightBuf' + 'fer'), _0x397862['CLUSTERBUF' + 'FER'] = _0x18824e['propertyNa' + 'meToID']('u_LightClu' + 'sterBuffer'), _0x397862['SUNLIGHTDI' + 'RECTION'] = _0x18824e['propertyNa' + 'meToID']('u_SunLight' + '.direction'), _0x397862['SUNLIGHTDI' + 'RCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_SunLight' + '.color'), _0x397862['AMBIENTSHA' + 'R'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HAr'), _0x397862['AMBIENTSHA' + 'G'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HAg'), _0x397862['AMBIENTSHA' + 'B'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HAb'), _0x397862['AMBIENTSHB' + 'R'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HBr'), _0x397862['AMBIENTSHB' + 'G'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HBg'), _0x397862['AMBIENTSHB' + 'B'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HBb'), _0x397862['AMBIENTSHC'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientS' + 'HC'), _0x397862['LIGHTDIREC' + 'TION'] = _0x18824e['propertyNa' + 'meToID']('u_Directio' + 'nLight.dir' + 'ection'), _0x397862['LIGHTDIRCO' + 'LOR'] = _0x18824e['propertyNa' + 'meToID']('u_Directio' + 'nLight.col' + 'or'), _0x397862['POINTLIGHT' + 'POS'] = _0x18824e['propertyNa' + 'meToID']('u_PointLig' + 'ht.positio' + 'n'), _0x397862['POINTLIGHT' + 'RANGE'] = _0x18824e['propertyNa' + 'meToID']('u_PointLig' + 'ht.range'), _0x397862['POINTLIGHT' + 'ATTENUATIO' + 'N'] = _0x18824e['propertyNa' + 'meToID']('u_PointLig' + 'ht.attenua' + 'tion'), _0x397862['POINTLIGHT' + 'COLOR'] = _0x18824e['propertyNa' + 'meToID']('u_PointLig' + 'ht.color'), _0x397862['SPOTLIGHTP' + 'OS'] = _0x18824e['propertyNa' + 'meToID']('u_SpotLigh' + 't.position'), _0x397862['SPOTLIGHTD' + 'IRECTION'] = _0x18824e['propertyNa' + 'meToID']('u_SpotLigh' + 't.directio' + 'n'), _0x397862['SPOTLIGHTS' + 'POTANGLE'] = _0x18824e['propertyNa' + 'meToID']('u_SpotLigh' + 't.spot'), _0x397862['SPOTLIGHTR' + 'ANGE'] = _0x18824e['propertyNa' + 'meToID']('u_SpotLigh' + 't.range'), _0x397862['SPOTLIGHTC' + 'OLOR'] = _0x18824e['propertyNa' + 'meToID']('u_SpotLigh' + 't.color'), _0x397862['AMBIENTCOL' + 'OR'] = _0x18824e['propertyNa' + 'meToID']('u_AmbientC' + 'olor'), _0x397862['TIME'] = _0x18824e['propertyNa' + 'meToID']('u_Time'), _0x397862['_configDef' + 'ineValues'] = new _0x1445c0();
    class _0x483d1f extends _0x442335['ShaderComp' + 'ile'] {
        constructor(_0x4d74f0, _0x3195e0, _0x105971, _0x3938db) {
            super(_0x3195e0, _0x105971, null), this['_cacheShar' + 'ders'] = {}, this['_cacheShad' + 'erHierarch' + 'y'] = 0x1, this['_renderSta' + 'te'] = new _0x5c0fbd(), this['_validDefi' + 'ne'] = new _0x1445c0(), this['_tags'] = {}, this['_owner'] = _0x4d74f0, this['_stateMap'] = _0x3938db;
            for (var _0x50d19d in this['defs'])
                this['_validDefi' + 'ne']['add'](_0x18824e['getDefineB' + 'yName'](_0x50d19d));
        }
        get ['renderStat' + 'e']() {
            return this['_renderSta' + 'te'];
        }
        ['_compileTo' + 'Tree'](_0xfec802, _0x5797b6, _0x13d226, _0x4697f0, _0x5516b5) {
            var _0x4ed235, _0x1cdd7b, _0x3d0cc4, _0x7fcf82, _0x542be7, _0x4cac4e, _0x290540, _0x433081, _0x50dfce, _0x8241b8, _0x48fec5;
            for (_0x50dfce = _0x13d226; _0x50dfce < _0x5797b6['length']; _0x50dfce++) {
                _0x3d0cc4 = _0x5797b6[_0x50dfce];
                if (_0x3d0cc4['length'] < 0x1)
                    continue;
                _0x4cac4e = _0x3d0cc4['indexOf']('//');
                if (_0x4cac4e === 0x0)
                    continue;
                if (_0x4cac4e >= 0x0)
                    _0x3d0cc4 = _0x3d0cc4['substr'](0x0, _0x4cac4e);
                _0x4ed235 = _0x433081 || new _0x442335['ShaderNode'](_0x4697f0), _0x433081 = null, _0x4ed235['text'] = _0x3d0cc4, _0x4ed235['noCompile'] = !![];
                if ((_0x4cac4e = _0x3d0cc4['indexOf']('#')) >= 0x0) {
                    _0x7fcf82 = '#';
                    for (_0x48fec5 = _0x4cac4e + 0x1, _0x8241b8 = _0x3d0cc4['length']; _0x48fec5 < _0x8241b8; _0x48fec5++) {
                        var _0x439eab = _0x3d0cc4['charAt'](_0x48fec5);
                        if (_0x439eab === '\x20' || _0x439eab === '\x09' || _0x439eab === '?')
                            break;
                        _0x7fcf82 += _0x439eab;
                    }
                    _0x4ed235['name'] = _0x7fcf82;
                    switch (_0x7fcf82) {
                    case '#ifdef':
                    case '#ifndef':
                        _0x4ed235['src'] = _0x3d0cc4, _0x4ed235['noCompile'] = _0x3d0cc4['match'](/[!&|()=<>]/) != null;
                        !_0x4ed235['noCompile'] ? (_0x290540 = _0x3d0cc4['replace'](/^\s*/, '')['split'](/\s+/), _0x4ed235['setConditi' + 'on'](_0x290540[0x1], _0x7fcf82 === '#ifdef' ? _0x442335['ShaderComp' + 'ile']['IFDEF_YES'] : _0x442335['ShaderComp' + 'ile']['IFDEF_ELSE']), _0x4ed235['text'] = '//' + _0x4ed235['text']) : console['log']('function()' + ':Boolean{r' + 'eturn\x20' + _0x3d0cc4['substr'](_0x4cac4e + _0x4ed235['name']['length']) + '}');
                        _0x4ed235['setParent'](_0xfec802), _0xfec802 = _0x4ed235;
                        if (_0x5516b5) {
                            _0x290540 = _0x3d0cc4['substr'](_0x48fec5)['split'](_0x442335['ShaderComp' + 'ile']['_splitToWo' + 'rdExps3']);
                            for (_0x48fec5 = 0x0; _0x48fec5 < _0x290540['length']; _0x48fec5++) {
                                _0x3d0cc4 = _0x290540[_0x48fec5], _0x3d0cc4['length'] && (_0x5516b5[_0x3d0cc4] = !![]);
                            }
                        }
                        continue;
                    case '#if':
                    case '#elif':
                        _0x4ed235['src'] = _0x3d0cc4, _0x4ed235['noCompile'] = !![];
                        _0x7fcf82 == '#elif' && (_0xfec802 = _0xfec802['parent'], _0x1cdd7b = _0xfec802['childs'][_0xfec802['childs']['length'] - 0x1], _0x1cdd7b['text'] = _0x1cdd7b['src'], _0x1cdd7b['noCompile'] = !![], _0x1cdd7b['condition'] = null);
                        _0x4ed235['setParent'](_0xfec802), _0xfec802 = _0x4ed235;
                        if (_0x5516b5) {
                            _0x290540 = _0x3d0cc4['substr'](_0x48fec5)['split'](_0x442335['ShaderComp' + 'ile']['_splitToWo' + 'rdExps3']);
                            for (_0x48fec5 = 0x0; _0x48fec5 < _0x290540['length']; _0x48fec5++) {
                                _0x3d0cc4 = _0x290540[_0x48fec5], _0x3d0cc4['length'] && _0x3d0cc4 != 'defined' && (_0x5516b5[_0x3d0cc4] = !![]);
                            }
                        }
                        continue;
                    case '#else':
                        _0x4ed235['src'] = _0x3d0cc4, _0xfec802 = _0xfec802['parent'], _0x1cdd7b = _0xfec802['childs'][_0xfec802['childs']['length'] - 0x1], _0x4ed235['noCompile'] = _0x1cdd7b['noCompile'];
                        !_0x4ed235['noCompile'] && (_0x4ed235['condition'] = _0x1cdd7b['condition'], _0x4ed235['conditionT' + 'ype'] = _0x1cdd7b['conditionT' + 'ype'] == _0x442335['ShaderComp' + 'ile']['IFDEF_YES'] ? _0x442335['ShaderComp' + 'ile']['IFDEF_ELSE'] : _0x442335['ShaderComp' + 'ile']['IFDEF_YES'], _0x4ed235['text'] = '//' + _0x4ed235['text'] + '\x20' + _0x1cdd7b['text'] + '\x20' + _0x4ed235['conditionT' + 'ype']);
                        _0x4ed235['setParent'](_0xfec802), _0xfec802 = _0x4ed235;
                        continue;
                    case '#endif':
                        _0xfec802 = _0xfec802['parent'], _0x1cdd7b = _0xfec802['childs'][_0xfec802['childs']['length'] - 0x1], _0x4ed235['noCompile'] = _0x1cdd7b['noCompile'];
                        !_0x4ed235['noCompile'] && (_0x4ed235['text'] = '//' + _0x4ed235['text']);
                        _0x4ed235['setParent'](_0xfec802);
                        continue;
                    case '#include':
                        _0x290540 = _0x442335['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x3d0cc4, null);
                        var _0x29a0a5 = _0x442335['ShaderComp' + 'ile']['includes'][_0x290540[0x1]];
                        if (!_0x29a0a5)
                            throw 'ShaderComp' + 'ile\x20error\x20' + 'no\x20this\x20in' + 'clude\x20file' + ':' + _0x290540[0x1];
                        if ((_0x4cac4e = _0x290540[0x0]['indexOf']('?')) < 0x0) {
                            _0x4ed235['setParent'](_0xfec802), _0x3d0cc4 = _0x29a0a5['getWith'](_0x290540[0x2] == 'with' ? _0x290540[0x3] : null), this['_compileTo' + 'Tree'](_0x4ed235, _0x3d0cc4['split']('\x0a'), 0x0, _0x4697f0, _0x5516b5), _0x4ed235['text'] = '';
                            continue;
                        }
                        _0x4ed235['setConditi' + 'on'](_0x290540[0x0]['substr'](_0x4cac4e + 0x1), _0x442335['ShaderComp' + 'ile']['IFDEF_YES']), _0x4ed235['text'] = _0x29a0a5['getWith'](_0x290540[0x2] == 'with' ? _0x290540[0x3] : null);
                        break;
                    case '#import':
                        _0x290540 = _0x442335['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x3d0cc4, null), _0x542be7 = _0x290540[0x1], _0x4697f0['push']({
                            'node': _0x4ed235,
                            'file': _0x442335['ShaderComp' + 'ile']['includes'][_0x542be7],
                            'ofs': _0x4ed235['text']['length']
                        });
                        continue;
                    }
                } else {
                    _0x1cdd7b = _0xfec802['childs'][_0xfec802['childs']['length'] - 0x1];
                    if (_0x1cdd7b && !_0x1cdd7b['name']) {
                        _0x4697f0['length'] > 0x0 && _0x442335['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x3d0cc4, _0x1cdd7b), _0x433081 = _0x4ed235, _0x1cdd7b['text'] += '\x0a' + _0x3d0cc4;
                        continue;
                    }
                    _0x4697f0['length'] > 0x0 && _0x442335['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x3d0cc4, _0x4ed235);
                }
                _0x4ed235['setParent'](_0xfec802);
            }
        }
        ['_resizeCac' + 'heShaderMa' + 'p'](_0x130321, _0x3849cc, _0x10e7c7) {
            var _0x178be5 = this['_cacheShad' + 'erHierarch' + 'y'] - 0x1;
            if (_0x3849cc == _0x178be5) {
                for (var _0x2f2df2 in _0x130321) {
                    var _0x2c3bc1 = _0x130321[_0x2f2df2];
                    for (var _0x138696 = 0x0, _0x4b14b1 = _0x10e7c7 - _0x178be5; _0x138696 < _0x4b14b1; _0x138696++) {
                        if (_0x138696 == _0x4b14b1 - 0x1)
                            _0x130321[0x0] = _0x2c3bc1;
                        else
                            _0x130321 = _0x130321[_0x138696 == 0x0 ? _0x2f2df2 : 0x0] = {};
                    }
                }
                this['_cacheShad' + 'erHierarch' + 'y'] = _0x10e7c7;
            } else {
                for (var _0x2f2df2 in _0x130321)
                    this['_resizeCac' + 'heShaderMa' + 'p'](_0x130321[_0x2f2df2], ++_0x3849cc, _0x10e7c7);
            }
        }
        ['_addDebugS' + 'haderVaria' + 'ntCollecti' + 'on'](_0x6d03ee, _0xff59d, _0x3a420c) {
            var _0x36b177 = _0x18824e['_debugShad' + 'erVariantI' + 'nfo'], _0x781a74 = this['_owner'], _0x479fee = _0x781a74['_owner'], _0x2aad82 = _0x6d03ee['_mask'];
            _0x18824e['_getNamesB' + 'yDefineDat' + 'a'](_0x6d03ee, _0xff59d), _0x3a420c['length'] = _0x2aad82['length'];
            for (var _0x2e7fe4 = 0x0, _0xc2a305 = _0x2aad82['length']; _0x2e7fe4 < _0xc2a305; _0x2e7fe4++)
                _0x3a420c[_0x2e7fe4] = _0x2aad82[_0x2e7fe4];
            if (_0x36b177)
                _0x36b177['setValue'](_0x479fee, _0x479fee['_subShader' + 's']['indexOf'](_0x781a74), _0x781a74['_passes']['indexOf'](this), _0xff59d);
            else
                _0x18824e['_debugShad' + 'erVariantI' + 'nfo'] = _0x36b177 = new _0x2977cc(_0x479fee, _0x479fee['_subShader' + 's']['indexOf'](_0x781a74), _0x781a74['_passes']['indexOf'](this), _0xff59d);
            _0x18824e['debugShade' + 'rVariantCo' + 'llection']['add'](_0x36b177);
        }
        ['withCompil' + 'e'](_0x263b7c) {
            var _0x59589b = _0x483d1f['_debugDefi' + 'neString'], _0xe515f0 = _0x483d1f['_debugDefi' + 'neMask'], _0xac7c26;
            _0x263b7c['_intersect' + 'ionDefineD' + 'atas'](this['_validDefi' + 'ne']);
            _0x18824e['debugMode'] && (_0xac7c26 = _0x263b7c['_length'], this['_addDebugS' + 'haderVaria' + 'ntCollecti' + 'on'](_0x263b7c, _0x59589b, _0xe515f0));
            _0x263b7c['addDefineD' + 'atas'](_0x397862['_configDef' + 'ineValues']);
            var _0x7e8bcf = this['_cacheShar' + 'ders'], _0x3a33db = _0x263b7c['_length'];
            _0x3a33db > this['_cacheShad' + 'erHierarch' + 'y'] && (this['_resizeCac' + 'heShaderMa' + 'p'](_0x7e8bcf, 0x0, _0x3a33db), this['_cacheShad' + 'erHierarch' + 'y'] = _0x3a33db);
            var _0x4fa633 = _0x263b7c['_mask'], _0x1e1a89 = _0x263b7c['_length'] - 0x1, _0x67efc2 = this['_cacheShad' + 'erHierarch' + 'y'] - 0x1;
            for (var _0x5d3288 = 0x0; _0x5d3288 < _0x67efc2; _0x5d3288++) {
                var _0x31cfd8 = _0x1e1a89 < _0x5d3288 ? 0x0 : _0x4fa633[_0x5d3288], _0x3fda3c = _0x7e8bcf[_0x31cfd8];
                _0x3fda3c || (_0x7e8bcf[_0x31cfd8] = _0x3fda3c = {}), _0x7e8bcf = _0x3fda3c;
            }
            var _0x67fa0e = _0x1e1a89 < _0x67efc2 ? 0x0 : _0x4fa633[_0x67efc2], _0x5c77ac = _0x7e8bcf[_0x67fa0e];
            if (_0x5c77ac)
                return _0x5c77ac;
            var _0x5eb767 = _0x483d1f['_defineStr' + 'ing'];
            _0x18824e['_getNamesB' + 'yDefineDat' + 'a'](_0x263b7c, _0x5eb767);
            var _0x299fcd = _0x1a3b39['_config'], _0x3cc385 = _0x299fcd['lightClust' + 'erCount'], _0x3c9571 = {}, _0x11c683, _0x195abb, _0x4693a2 = '';
            _0x442335['WebGL']['_isWebGL2'] ? (_0x11c683 = '#version\x203' + '00\x20es\x0a\x0a\x09\x09\x09' + '\x09#define\x20a' + 'ttribute\x20i' + 'n\x0a\x09\x09\x09\x09#def' + 'ine\x20varyin' + 'g\x20out\x0a\x09\x09\x09\x09' + '#define\x20te' + 'xture2D\x20te' + 'xture\x0a', _0x195abb = '#version\x203' + '00\x20es\x0a\x0a\x09\x09\x09' + '\x09#define\x20v' + 'arying\x20in\x0a' + '\x09\x09\x09\x09out\x20hi' + 'ghp\x20vec4\x20p' + 'c_fragColo' + 'r;\x0a\x09\x09\x09\x09#de' + 'fine\x20gl_Fr' + 'agColor\x20pc' + '_fragColor' + '\x0a\x09\x09\x09\x09#defi' + 'ne\x20gl_Frag' + 'DepthEXT\x20g' + 'l_FragDept' + 'h\x0a\x09\x09\x09\x09#def' + 'ine\x20textur' + 'e2D\x20textur' + 'e\x0a\x09\x09\x09\x09#def' + 'ine\x20textur' + 'eCube\x20text' + 'ure\x0a\x09\x09\x09\x09#d' + 'efine\x20text' + 'ure2DProj\x20' + 'texturePro' + 'j\x0a\x09\x09\x09\x09#def' + 'ine\x20textur' + 'e2DLodEXT\x20' + 'textureLod' + '\x0a\x09\x09\x09\x09#defi' + 'ne\x20texture' + '2DProjLodE' + 'XT\x20texture' + 'ProjLod\x0a\x09\x09' + '\x09\x09#define\x20' + 'textureCub' + 'eLodEXT\x20te' + 'xtureLod\x0a\x09' + '\x09\x09\x09#define' + '\x20texture2D' + 'GradEXT\x20te' + 'xtureGrad\x0a' + '\x09\x09\x09\x09#defin' + 'e\x20texture2' + 'DProjGradE' + 'XT\x20texture' + 'ProjGrad\x0a\x09' + '\x09\x09\x09#define' + '\x20textureCu' + 'beGradEXT\x20' + 'textureGra' + 'd\x0a') : (_0x11c683 = '', _0x195abb = '#ifdef\x20GL_' + 'EXT_shader' + '_texture_l' + 'od\x0a\x09\x09\x09\x09\x09#e' + 'xtension\x20G' + 'L_EXT_shad' + 'er_texture' + '_lod\x20:\x20ena' + 'ble\x0a\x09\x09\x09\x09#e' + 'ndif\x0a\x09\x09\x09\x09#' + 'if\x20!define' + 'd(GL_EXT_s' + 'hader_text' + 'ure_lod)\x0a\x09' + '\x09\x09\x09\x09#defin' + 'e\x20texture1' + 'DLodEXT\x20te' + 'xture1D\x0a\x09\x09' + '\x09\x09\x09#define' + '\x20texture2D' + 'LodEXT\x20tex' + 'ture2D\x0a\x09\x09\x09' + '\x09\x09#define\x20' + 'texture2DP' + 'rojLodEXT\x20' + 'texture2DP' + 'roj\x0a\x09\x09\x09\x09\x09#' + 'define\x20tex' + 'ture3DLodE' + 'XT\x20texture' + '3D\x0a\x09\x09\x09\x09\x09#d' + 'efine\x20text' + 'ureCubeLod' + 'EXT\x20textur' + 'eCube\x0a\x09\x09\x09\x09' + '#endif\x0a');
            _0x4693a2 += '#define\x20MA' + 'X_LIGHT_CO' + 'UNT\x20' + _0x299fcd['maxLightCo' + 'unt'] + '\x0a', _0x4693a2 += '#define\x20MA' + 'X_LIGHT_CO' + 'UNT_PER_CL' + 'USTER\x20' + _0x299fcd['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] + '\x0a', _0x4693a2 += '#define\x20CL' + 'USTER_X_CO' + 'UNT\x20' + _0x3cc385['x'] + '\x0a', _0x4693a2 += '#define\x20CL' + 'USTER_Y_CO' + 'UNT\x20' + _0x3cc385['y'] + '\x0a', _0x4693a2 += '#define\x20CL' + 'USTER_Z_CO' + 'UNT\x20' + _0x3cc385['z'] + '\x0a', _0x4693a2 += '#define\x20SH' + 'ADER_CAPAI' + 'LITY_LEVEL' + '\x20' + _0x442335['SystemUtil' + 's']['_shaderCap' + 'ailityLeve' + 'l'] + '\x0a';
            for (var _0x5d3288 = 0x0, _0x58ef0b = _0x5eb767['length']; _0x5d3288 < _0x58ef0b; _0x5d3288++) {
                var _0x1733ad = _0x5eb767[_0x5d3288];
                _0x4693a2 += '#define\x20' + _0x1733ad + '\x0a', _0x3c9571[_0x1733ad] = !![];
            }
            var _0x213c71 = this['_VS']['toscript'](_0x3c9571, []), _0x467849 = '';
            _0x213c71[0x0]['indexOf']('#version') == 0x0 && (_0x467849 = _0x213c71[0x0] + '\x0a', _0x213c71['shift']());
            var _0x560a96 = this['_PS']['toscript'](_0x3c9571, []), _0xef2dd0 = '';
            _0x560a96[0x0]['indexOf']('#version') == 0x0 && (_0xef2dd0 = _0x560a96[0x0] + '\x0a', _0x560a96['shift']());
            var _0xd1174d = _0x18824e['getAttribu' + 'teMapByDef' + 'ine'](_0x5eb767, this['_owner']['_attribute' + 'Map']);
            _0x5c77ac = new _0x3ec46b(_0x467849 + _0x11c683 + _0x4693a2 + _0x213c71['join']('\x0a'), _0xef2dd0 + _0x195abb + _0x4693a2 + _0x560a96['join']('\x0a'), _0xd1174d, this['_owner']['_uniformMa' + 'p'] || this['_owner']['_owner']['_uniformMa' + 'p'], this), _0x7e8bcf[_0x67fa0e] = _0x5c77ac;
            if (_0x18824e['debugMode']) {
                var _0x3e2dbe = '', _0x4d3dda = '';
                for (var _0x5d3288 = 0x0, _0x58ef0b = _0xac7c26; _0x5d3288 < _0x58ef0b; _0x5d3288++)
                    _0x5d3288 == _0x58ef0b - 0x1 ? _0x4d3dda += _0xe515f0[_0x5d3288] : _0x4d3dda += _0xe515f0[_0x5d3288] + ',';
                for (var _0x5d3288 = 0x0, _0x58ef0b = _0x59589b['length']; _0x5d3288 < _0x58ef0b; _0x5d3288++)
                    _0x5d3288 == _0x58ef0b - 0x1 ? _0x3e2dbe += _0x59589b[_0x5d3288] : _0x3e2dbe += _0x59589b[_0x5d3288] + ',';
                console['log']('%cLayaAir:' + '\x20Shader\x20Co' + 'mpile\x20Info' + 'rmation---' + 'ShaderName' + ':' + this['_owner']['_owner']['_name'] + ('\x20SubShader' + 'Index:') + this['_owner']['_owner']['_subShader' + 's']['indexOf'](this['_owner']) + ('\x20PassIndex' + ':') + this['_owner']['_passes']['indexOf'](this) + ('\x20DefineMas' + 'k:[') + _0x4d3dda + ']' + ('\x20DefineNam' + 'es:[') + _0x3e2dbe + ']', 'color:gree' + 'n');
            }
            return _0x5c77ac;
        }
        ['setTag'](_0x25f1a3, _0x5404ff) {
            if (_0x5404ff)
                this['_tags'][_0x25f1a3] = _0x5404ff;
            else
                delete this['_tags'][_0x25f1a3];
        }
        ['getTag'](_0x408fec) {
            return this['_tags'][_0x408fec];
        }
    }
    _0x483d1f['_defineStr' + 'ing'] = [], _0x483d1f['_debugDefi' + 'neString'] = [], _0x483d1f['_debugDefi' + 'neMask'] = [];
    class _0x4c4f1d {
        constructor(_0x360e85, _0x4a96d0) {
            this['_flags'] = {}, this['_passes'] = [], this['_attribute' + 'Map'] = _0x360e85, this['_uniformMa' + 'p'] = _0x4a96d0;
        }
        ['setFlag'](_0x3e1699, _0x590b59) {
            if (_0x590b59)
                this['_flags'][_0x3e1699] = _0x590b59;
            else
                delete this['_flags'][_0x3e1699];
        }
        ['getFlag'](_0x463ea1) {
            return this['_flags'][_0x463ea1];
        }
        ['addShaderP' + 'ass'](_0x120731, _0x176028, _0x2291ed = null, _0x308cd2 = 'Forward') {
            var _0x9a66a0 = new _0x483d1f(this, _0x120731, _0x176028, _0x2291ed);
            return _0x9a66a0['_pipelineM' + 'ode'] = _0x308cd2, this['_passes']['push'](_0x9a66a0), _0x9a66a0;
        }
    }
    (function (_0x33312b) {
        _0x33312b[_0x33312b['SpecularTe' + 'xtureAlpha'] = 0x0] = 'SpecularTe' + 'xtureAlpha', _0x33312b[_0x33312b['AlbedoText' + 'ureAlpha'] = 0x1] = 'AlbedoText' + 'ureAlpha';
    }(_0x1f405c['PBRSpecula' + 'rSmoothnes' + 'sSource'] || (_0x1f405c['PBRSpecula' + 'rSmoothnes' + 'sSource'] = {})));
    class _0x1b0e7e extends _0x460fe4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PBRSpecula' + 'r'), this['_shaderVal' + 'ues']['setVector'](_0x1b0e7e['SPECULARCO' + 'LOR'], new _0x18425e(0.2, 0.2, 0.2, 0x1));
        }
        static ['__init__']() {
            _0x1b0e7e['SHADERDEFI' + 'NE_SPECULA' + 'RGLOSSTEXT' + 'URE'] = _0x18824e['getDefineB' + 'yName']('SPECULARGL' + 'OSSTEXTURE'), _0x1b0e7e['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA'] = _0x18824e['getDefineB' + 'yName']('SMOOTHNESS' + 'SOURCE_ALB' + 'EDOTEXTURE' + '_ALPHA');
            var _0x2be697 = {
                    'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                    'a_Normal': _0x2a7b2f['MESH_NORMA' + 'L0'],
                    'a_Tangent0': _0x2a7b2f['MESH_TANGE' + 'NT0'],
                    'a_Texcoord0': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0x2a7b2f['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0x2a7b2f['MESH_BLEND' + 'INDICES0'],
                    'a_MvpMatrix': _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x202761 = {
                    'u_Bones': _0x18824e['PERIOD_CUS' + 'TOM'],
                    'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_WorldMat': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightMapDirection': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorTextureSize': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_ReflectCubeHDRParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_ReflectTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SpecCubeProbePosition': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SpecCubeBoxMax': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SpecCubeBoxMin': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ViewProjection': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_AlphaTestValue': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_OcclusionTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_Smoothness': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_SmoothnessScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_occlusionStrength': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecGlossTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecularColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AmbientColor': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowBias': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightDirection': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowParams': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowSplitSpheres': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMatrices': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMapSize': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotViewProjectMatrix': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightPosition': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAr': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAg': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAb': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBr': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBg': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBb': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHC': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x18824e['PERIOD_SCE' + 'NE']
                }, _0xa0d6a1 = {
                    's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x2354f0 = _0x18824e['add']('PBRSpecula' + 'r', _0x2be697, _0x202761, !![], !![]), _0x47a3f4 = new _0x4c4f1d(_0x2be697, _0x202761);
            _0x2354f0['addSubShad' + 'er'](_0x47a3f4), _0x47a3f4['addShaderP' + 'ass'](_0x22de33, _0x56350f, _0xa0d6a1, 'Forward'), _0x47a3f4['addShaderP' + 'ass'](_0x2b60a0, _0x4919d8, _0xa0d6a1, 'ShadowCast' + 'er');
        }
        get ['specularTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1b0e7e['SPECULARTE' + 'XTURE']);
        }
        set ['specularTe' + 'xture'](_0x17d911) {
            if (_0x17d911)
                this['_shaderVal' + 'ues']['addDefine'](_0x1b0e7e['SHADERDEFI' + 'NE_SPECULA' + 'RGLOSSTEXT' + 'URE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1b0e7e['SHADERDEFI' + 'NE_SPECULA' + 'RGLOSSTEXT' + 'URE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x1b0e7e['SPECULARTE' + 'XTURE'], _0x17d911);
        }
        get ['specularCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x1b0e7e['SPECULARCO' + 'LOR']);
        }
        set ['specularCo' + 'lor'](_0x4806dd) {
            this['_shaderVal' + 'ues']['setVector'](_0x1b0e7e['SPECULARCO' + 'LOR'], _0x4806dd);
        }
        ['clone']() {
            var _0x4191e4 = new _0x1b0e7e();
            return this['cloneTo'](_0x4191e4), _0x4191e4;
        }
    }
    _0x1b0e7e['SPECULARTE' + 'XTURE'] = _0x18824e['propertyNa' + 'meToID']('u_SpecGlos' + 'sTexture'), _0x1b0e7e['SPECULARCO' + 'LOR'] = _0x18824e['propertyNa' + 'meToID']('u_Specular' + 'Color');
    var _0xa95838 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#in' + 'clude\x20\x22Lig' + 'hting.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Shadow' + '.glsl\x22\x0d\x0a#i' + 'nclude\x20\x22PB' + 'RFSInput.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Lay' + 'aPBRBRDF.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Glo' + 'balIllumin' + 'ation.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22PBRCor' + 'e.glsl\x22;\x0d\x0a' + '\x0d\x0avoid\x20mai' + 'n()\x0d\x0a{\x0d\x0a\x09f' + 'ragmentFor' + 'ward();\x0d\x0a}', _0xfcc30f = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a#incl' + 'ude\x20\x22Light' + 'ing.glsl\x22;' + '\x0d\x0a#include' + '\x20\x22LayaUtil' + 'e.glsl\x22\x0d\x0a#' + 'include\x20\x22S' + 'hadow.glsl' + '\x22\x0d\x0a#includ' + 'e\x20\x22PBRVSIn' + 'put.glsl\x22;' + '\x0d\x0a#include' + '\x20\x22PBRVerte' + 'x.glsl\x22;\x0d\x0a' + '\x0d\x0avoid\x20mai' + 'n()\x0d\x0a{\x0d\x0a\x09v' + 'ertexForwa' + 'rd();\x0d\x0a\x09gl' + '_Position=' + 'remapGLPos' + 'itionZ(gl_' + 'Position);' + '\x0d\x0a}', _0x38c37b = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dowCasterF' + 'S.glsl\x22\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x0d\x0a{\x0d\x0a\x09gl' + '_FragColor' + '=shadowCas' + 'terFragmen' + 't();\x0d\x0a}', _0x33d85f = '#include\x20\x22' + 'ShadowCast' + 'erVS.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tionCS\x20=\x20\x20' + 'shadowCast' + 'erVertex()' + ';\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(positio' + 'nCS);\x0d\x0a}';
    (function (_0x137696) {
        _0x137696[_0x137696['MetallicGl' + 'ossTexture' + 'Alpha'] = 0x0] = 'MetallicGl' + 'ossTexture' + 'Alpha', _0x137696[_0x137696['AlbedoText' + 'ureAlpha'] = 0x1] = 'AlbedoText' + 'ureAlpha';
    }(_0x1f405c['PBRMetalli' + 'cSmoothnes' + 'sSource'] || (_0x1f405c['PBRMetalli' + 'cSmoothnes' + 'sSource'] = {})));
    class _0x51f75c extends _0x460fe4 {
        constructor() {
            super(), this['_smoothnes' + 'sSource'] = 0x0, this['setShaderN' + 'ame']('PBR'), this['_shaderVal' + 'ues']['setNumber'](_0x51f75c['METALLIC'], 0x0);
        }
        static ['__init__']() {
            _0x51f75c['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE'] = _0x18824e['getDefineB' + 'yName']('METALLICGL' + 'OSSTEXTURE'), _0x51f75c['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA'] = _0x18824e['getDefineB' + 'yName']('SMOOTHNESS' + 'SOURCE_ALB' + 'EDOTEXTURE' + '_ALPHA');
            var _0x594d17 = {
                    'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                    'a_Normal': _0x2a7b2f['MESH_NORMA' + 'L0'],
                    'a_Tangent0': _0x2a7b2f['MESH_TANGE' + 'NT0'],
                    'a_Texcoord0': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0x2a7b2f['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0x2a7b2f['MESH_BLEND' + 'INDICES0'],
                    'a_MvpMatrix': _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x5e0bd7 = {
                    'u_Bones': _0x18824e['PERIOD_CUS' + 'TOM'],
                    'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_WorldMat': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightMapDirection': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorTextureSize': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_ReflectCubeHDRParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_ReflectTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SpecCubeProbePosition': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SpecCubeBoxMax': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SpecCubeBoxMin': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ViewProjection': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_AlphaTestValue': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_OcclusionTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_Smoothness': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_SmoothnessScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_occlusionStrength': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_MetallicGlossTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_Metallic': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AmbientColor': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowBias': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightDirection': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowParams': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowSplitSpheres': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMatrices': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMapSize': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotViewProjectMatrix': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightPosition': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAr': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAg': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAb': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBr': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBg': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBb': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHC': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x18824e['PERIOD_SCE' + 'NE']
                }, _0xbedd4e = {
                    's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x3c3c8b = _0x18824e['add']('PBR', _0x594d17, _0x5e0bd7, !![], !![]), _0x2b1549 = new _0x4c4f1d(_0x594d17, _0x5e0bd7);
            _0x3c3c8b['addSubShad' + 'er'](_0x2b1549), _0x2b1549['addShaderP' + 'ass'](_0xfcc30f, _0xa95838, _0xbedd4e, 'Forward'), _0x2b1549['addShaderP' + 'ass'](_0x33d85f, _0x38c37b, _0xbedd4e, 'ShadowCast' + 'er');
        }
        get ['metallicGl' + 'ossTexture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x51f75c['METALLICGL' + 'OSSTEXTURE']);
        }
        set ['metallicGl' + 'ossTexture'](_0x396d74) {
            if (_0x396d74)
                this['_shaderVal' + 'ues']['addDefine'](_0x51f75c['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x51f75c['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x51f75c['METALLICGL' + 'OSSTEXTURE'], _0x396d74);
        }
        get ['metallic']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x51f75c['METALLIC']);
        }
        set ['metallic'](_0x38c9e1) {
            this['_shaderVal' + 'ues']['setNumber'](_0x51f75c['METALLIC'], Math['max'](0x0, Math['min'](0x1, _0x38c9e1)));
        }
        get ['smoothness' + 'Source']() {
            return this['_smoothnes' + 'sSource'];
        }
        set ['smoothness' + 'Source'](_0x29817d) {
            if (_0x29817d)
                this['_shaderVal' + 'ues']['addDefine'](_0x51f75c['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x51f75c['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']);
            this['_smoothnes' + 'sSource'] = _0x29817d;
        }
        ['clone']() {
            var _0x233159 = new _0x51f75c();
            return this['cloneTo'](_0x233159), _0x233159;
        }
    }
    _0x51f75c['METALLICGL' + 'OSSTEXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_Metallic' + 'GlossTextu' + 're'), _0x51f75c['METALLIC'] = _0x18824e['propertyNa' + 'meToID']('u_Metallic');
    class _0x3cb57a extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('SkyBox'), this['tintColor'] = new _0x18425e(0.5, 0.5, 0.5, 0.5), this['exposure'] = 0x1, this['rotation'] = 0x0;
        }
        static ['__initDefi' + 'ne__']() {
        }
        get ['tintColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3cb57a['TINTCOLOR']);
        }
        set ['tintColor'](_0x12a83b) {
            this['_shaderVal' + 'ues']['setVector'](_0x3cb57a['TINTCOLOR'], _0x12a83b);
        }
        get ['exposure']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3cb57a['EXPOSURE']);
        }
        set ['exposure'](_0x1c9989) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3cb57a['EXPOSURE'], _0x1c9989);
        }
        get ['rotation']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3cb57a['ROTATION']);
        }
        set ['rotation'](_0x21631b) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3cb57a['ROTATION'], _0x21631b);
        }
        get ['textureCub' + 'e']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3cb57a['TEXTURECUB' + 'E']);
        }
        set ['textureCub' + 'e'](_0x4ec31c) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3cb57a['TEXTURECUB' + 'E'], _0x4ec31c);
        }
        ['clone']() {
            var _0x12b5e0 = new _0x3cb57a();
            return this['cloneTo'](_0x12b5e0), _0x12b5e0;
        }
    }
    _0x3cb57a['TINTCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_TintColo' + 'r'), _0x3cb57a['EXPOSURE'] = _0x18824e['propertyNa' + 'meToID']('u_Exposure'), _0x3cb57a['ROTATION'] = _0x18824e['propertyNa' + 'meToID']('u_Rotation'), _0x3cb57a['TEXTURECUB' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_CubeText' + 'ure');
    class _0x5495c1 extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('SkyBoxProc' + 'edural'), this['sunDisk'] = _0x5495c1['SUN_HIGH_Q' + 'UALITY'], this['sunSize'] = 0.04, this['sunSizeCon' + 'vergence'] = 0x5, this['atmosphere' + 'Thickness'] = 0x1, this['skyTint'] = new _0x18425e(0.5, 0.5, 0.5, 0x1), this['groundTint'] = new _0x18425e(0.369, 0.349, 0.341, 0x1), this['exposure'] = 1.3;
        }
        static ['__initDefi' + 'ne__']() {
            _0x5495c1['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY'] = _0x18824e['getDefineB' + 'yName']('SUN_HIGH_Q' + 'UALITY'), _0x5495c1['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE'] = _0x18824e['getDefineB' + 'yName']('SUN_SIMPLE');
        }
        get ['sunDisk']() {
            return this['_sunDisk'];
        }
        set ['sunDisk'](_0x55c1a2) {
            switch (_0x55c1a2) {
            case _0x5495c1['SUN_HIGH_Q' + 'UALITY']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x5495c1['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']), this['_shaderVal' + 'ues']['addDefine'](_0x5495c1['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']);
                break;
            case _0x5495c1['SUN_SIMPLE']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x5495c1['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']), this['_shaderVal' + 'ues']['addDefine'](_0x5495c1['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']);
                break;
            case _0x5495c1['SUN_NODE']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x5495c1['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x5495c1['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']);
                break;
            default:
                throw 'SkyBoxProc' + 'eduralMate' + 'rial:\x20unkn' + 'own\x20sun\x20va' + 'lue.';
            }
            this['_sunDisk'] = _0x55c1a2;
        }
        get ['sunSize']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x5495c1['SUNSIZE']);
        }
        set ['sunSize'](_0x60f68d) {
            _0x60f68d = Math['min'](Math['max'](0x0, _0x60f68d), 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x5495c1['SUNSIZE'], _0x60f68d);
        }
        get ['sunSizeCon' + 'vergence']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x5495c1['SUNSIZECON' + 'VERGENCE']);
        }
        set ['sunSizeCon' + 'vergence'](_0x1bd48d) {
            _0x1bd48d = Math['min'](Math['max'](0x0, _0x1bd48d), 0x14), this['_shaderVal' + 'ues']['setNumber'](_0x5495c1['SUNSIZECON' + 'VERGENCE'], _0x1bd48d);
        }
        get ['atmosphere' + 'Thickness']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x5495c1['ATMOSPHERE' + 'THICKNESS']);
        }
        set ['atmosphere' + 'Thickness'](_0x12f824) {
            _0x12f824 = Math['min'](Math['max'](0x0, _0x12f824), 0x5), this['_shaderVal' + 'ues']['setNumber'](_0x5495c1['ATMOSPHERE' + 'THICKNESS'], _0x12f824);
        }
        get ['skyTint']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x5495c1['SKYTINT']);
        }
        set ['skyTint'](_0x313252) {
            this['_shaderVal' + 'ues']['setVector'](_0x5495c1['SKYTINT'], _0x313252);
        }
        get ['groundTint']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x5495c1['GROUNDTINT']);
        }
        set ['groundTint'](_0x3b66aa) {
            this['_shaderVal' + 'ues']['setVector'](_0x5495c1['GROUNDTINT'], _0x3b66aa);
        }
        get ['exposure']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x5495c1['EXPOSURE']);
        }
        set ['exposure'](_0x3c4a66) {
            _0x3c4a66 = Math['min'](Math['max'](0x0, _0x3c4a66), 0x8), this['_shaderVal' + 'ues']['setNumber'](_0x5495c1['EXPOSURE'], _0x3c4a66);
        }
        ['clone']() {
            var _0x52653e = new _0x5495c1();
            return this['cloneTo'](_0x52653e), _0x52653e;
        }
    }
    _0x5495c1['SUN_NODE'] = 0x0, _0x5495c1['SUN_SIMPLE'] = 0x1, _0x5495c1['SUN_HIGH_Q' + 'UALITY'] = 0x2, _0x5495c1['SUNSIZE'] = _0x18824e['propertyNa' + 'meToID']('u_SunSize'), _0x5495c1['SUNSIZECON' + 'VERGENCE'] = _0x18824e['propertyNa' + 'meToID']('u_SunSizeC' + 'onvergence'), _0x5495c1['ATMOSPHERE' + 'THICKNESS'] = _0x18824e['propertyNa' + 'meToID']('u_Atmosphe' + 'reThicknes' + 's'), _0x5495c1['SKYTINT'] = _0x18824e['propertyNa' + 'meToID']('u_SkyTint'), _0x5495c1['GROUNDTINT'] = _0x18824e['propertyNa' + 'meToID']('u_GroundTi' + 'nt'), _0x5495c1['EXPOSURE'] = _0x18824e['propertyNa' + 'meToID']('u_Exposure');
    class _0x30019a extends _0x2b6b33 {
        constructor() {
            super(), this['_albedoCol' + 'or'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['_albedoInt' + 'ensity'] = 0x1, this['_enableVer' + 'texColor'] = ![], this['setShaderN' + 'ame']('Unlit'), this['_shaderVal' + 'ues']['setVector'](_0x30019a['ALBEDOCOLO' + 'R'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x30019a['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x30019a['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x18824e['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0x30019a['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x18824e['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x30019a['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR'] = _0x18824e['getDefineB' + 'yName']('ENABLEVERT' + 'EXCOLOR');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0xb3956c) {
            this['_albedoCol' + 'or']['x'] = _0xb3956c, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x5eb750) {
            this['_albedoCol' + 'or']['y'] = _0x5eb750, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x3c38e7) {
            this['_albedoCol' + 'or']['z'] = _0x3c38e7, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x40796a) {
            this['_albedoCol' + 'or']['w'] = _0x40796a, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_Color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['ALBEDOCOLO' + 'R']);
        }
        set ['_Color'](_0x165a16) {
            this['albedoColo' + 'r'] = _0x165a16;
        }
        get ['_AlbedoInt' + 'ensity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['_AlbedoInt' + 'ensity'](_0x381cb4) {
            if (this['_albedoInt' + 'ensity'] !== _0x381cb4) {
                var _0x13e3fb = this['_shaderVal' + 'ues']['getVector'](_0x30019a['ALBEDOCOLO' + 'R']);
                _0x18425e['scale'](this['_albedoCol' + 'or'], _0x381cb4, _0x13e3fb), this['_albedoInt' + 'ensity'] = _0x381cb4, this['_shaderVal' + 'ues']['setVector'](_0x30019a['ALBEDOCOLO' + 'R'], _0x13e3fb);
            }
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x9a0905) {
            var _0x151c45 = this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET']);
            _0x151c45['x'] = _0x9a0905, this['tilingOffs' + 'et'] = _0x151c45;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0xd51011) {
            var _0x2afa81 = this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET']);
            _0x2afa81['y'] = _0xd51011, this['tilingOffs' + 'et'] = _0x2afa81;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x126a41) {
            var _0x3454ea = this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET']);
            _0x3454ea['z'] = _0x126a41, this['tilingOffs' + 'et'] = _0x3454ea;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x115d2b) {
            var _0x2148a2 = this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET']);
            _0x2148a2['w'] = _0x115d2b, this['tilingOffs' + 'et'] = _0x2148a2;
        }
        get ['_MainTex_S' + 'T']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET']);
        }
        set ['_MainTex_S' + 'T'](_0x4f5398) {
            this['tilingOffs' + 'et'] = _0x4f5398;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x3dfd9e) {
            this['alphaTestV' + 'alue'] = _0x3dfd9e;
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x201715) {
            this['_ColorR'] = _0x201715;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x39e259) {
            this['_ColorG'] = _0x39e259;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x2ab19e) {
            this['_ColorB'] = _0x2ab19e;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0x1e60d8) {
            this['_ColorA'] = _0x1e60d8;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x270c0f) {
            var _0x154fd3 = this['_shaderVal' + 'ues']['getVector'](_0x30019a['ALBEDOCOLO' + 'R']);
            _0x18425e['scale'](_0x270c0f, this['_albedoInt' + 'ensity'], _0x154fd3), this['_albedoCol' + 'or'] = _0x270c0f, this['_shaderVal' + 'ues']['setVector'](_0x30019a['ALBEDOCOLO' + 'R'], _0x154fd3);
        }
        get ['albedoInte' + 'nsity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['albedoInte' + 'nsity'](_0x89ba9e) {
            this['_AlbedoInt' + 'ensity'] = _0x89ba9e;
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x30019a['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x4cfc3d) {
            if (_0x4cfc3d)
                this['_shaderVal' + 'ues']['addDefine'](_0x30019a['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x30019a['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x30019a['ALBEDOTEXT' + 'URE'], _0x4cfc3d);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x1bb90b) {
            this['_MainTex_S' + 'TX'] = _0x1bb90b;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x85569f) {
            this['_MainTex_S' + 'TY'] = _0x85569f;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x10b459) {
            this['_MainTex_S' + 'TZ'] = _0x10b459;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x5de07b) {
            this['_MainTex_S' + 'TW'] = _0x5de07b;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x30019a['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x3eec30) {
            if (_0x3eec30) {
                if (_0x3eec30['x'] != 0x1 || _0x3eec30['y'] != 0x1 || _0x3eec30['z'] != 0x0 || _0x3eec30['w'] != 0x0)
                    this['_shaderVal' + 'ues']['addDefine'](_0x30019a['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x30019a['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x30019a['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            this['_shaderVal' + 'ues']['setVector'](_0x30019a['TILINGOFFS' + 'ET'], _0x3eec30);
        }
        get ['enableVert' + 'exColor']() {
            return this['_enableVer' + 'texColor'];
        }
        set ['enableVert' + 'exColor'](_0x35e2ad) {
            this['_enableVer' + 'texColor'] = _0x35e2ad;
            if (_0x35e2ad)
                this['_shaderVal' + 'ues']['addDefine'](_0x30019a['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x30019a['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
        }
        set ['renderMode'](_0x3b2887) {
            switch (_0x3b2887) {
            case _0x30019a['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = ![], this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            case _0x30019a['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !![], this['depthWrite'] = !![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            case _0x30019a['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_BACK'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'];
                break;
            default:
                throw new Error('UnlitMater' + 'ial\x20:\x20rend' + 'erMode\x20val' + 'ue\x20error.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x30019a['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x38c64a) {
            this['_shaderVal' + 'ues']['setBool'](_0x30019a['DEPTH_WRIT' + 'E'], _0x38c64a);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x30019a['CULL']);
        }
        set ['cull'](_0x4f0a38) {
            this['_shaderVal' + 'ues']['setInt'](_0x30019a['CULL'], _0x4f0a38);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x30019a['BLEND']);
        }
        set ['blend'](_0x4d3999) {
            this['_shaderVal' + 'ues']['setInt'](_0x30019a['BLEND'], _0x4d3999);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x30019a['BLEND_SRC']);
        }
        set ['blendSrc'](_0x14c99c) {
            this['_shaderVal' + 'ues']['setInt'](_0x30019a['BLEND_SRC'], _0x14c99c);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x30019a['BLEND_DST']);
        }
        set ['blendDst'](_0xc9a8f6) {
            this['_shaderVal' + 'ues']['setInt'](_0x30019a['BLEND_DST'], _0xc9a8f6);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x30019a['DEPTH_TEST']);
        }
        set ['depthTest'](_0x2dcb06) {
            this['_shaderVal' + 'ues']['setInt'](_0x30019a['DEPTH_TEST'], _0x2dcb06);
        }
        ['clone']() {
            var _0x5e3145 = new _0x30019a();
            return this['cloneTo'](_0x5e3145), _0x5e3145;
        }
    }
    _0x30019a['RENDERMODE' + '_OPAQUE'] = 0x0, _0x30019a['RENDERMODE' + '_CUTOUT'] = 0x1, _0x30019a['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x30019a['RENDERMODE' + '_ADDTIVE'] = 0x3, _0x30019a['ALBEDOTEXT' + 'URE'] = _0x18824e['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x30019a['ALBEDOCOLO' + 'R'] = _0x18824e['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x30019a['TILINGOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x30019a['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x30019a['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x30019a['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x30019a['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x30019a['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x30019a['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x4bfcdb extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('WaterPrima' + 'ry'), this['_shaderVal' + 'ues']['setVector'](_0x4bfcdb['HORIZONCOL' + 'OR'], new _0x18425e(0.172, 0.463, 0.435, 0x0)), this['_shaderVal' + 'ues']['setNumber'](_0x4bfcdb['WAVESCALE'], 0.15), this['_shaderVal' + 'ues']['setVector'](_0x4bfcdb['WAVESPEED'], new _0x18425e(0x13, 0x9, -0x10, -0x7));
        }
        static ['__initDefi' + 'ne__']() {
            _0x4bfcdb['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x18824e['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x4bfcdb['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x18824e['getDefineB' + 'yName']('NORMALTEXT' + 'URE');
        }
        get ['horizonCol' + 'or']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4bfcdb['HORIZONCOL' + 'OR']);
        }
        set ['horizonCol' + 'or'](_0x5f9a9a) {
            this['_shaderVal' + 'ues']['setVector'](_0x4bfcdb['HORIZONCOL' + 'OR'], _0x5f9a9a);
        }
        get ['mainTextur' + 'e']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4bfcdb['MAINTEXTUR' + 'E']);
        }
        set ['mainTextur' + 'e'](_0x4f40b4) {
            if (_0x4f40b4)
                this['_shaderVal' + 'ues']['addDefine'](_0x4bfcdb['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4bfcdb['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x4bfcdb['MAINTEXTUR' + 'E'], _0x4f40b4);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4bfcdb['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0xb6e032) {
            if (_0xb6e032)
                this['_shaderVal' + 'ues']['addDefine'](_0x4bfcdb['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4bfcdb['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x4bfcdb['NORMALTEXT' + 'URE'], _0xb6e032);
        }
        get ['waveScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x4bfcdb['WAVESCALE']);
        }
        set ['waveScale'](_0x44e33f) {
            this['_shaderVal' + 'ues']['setNumber'](_0x4bfcdb['WAVESCALE'], _0x44e33f);
        }
        get ['waveSpeed']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4bfcdb['WAVESPEED']);
        }
        set ['waveSpeed'](_0x58c716) {
            this['_shaderVal' + 'ues']['setVector'](_0x4bfcdb['WAVESPEED'], _0x58c716);
        }
        ['clone']() {
            var _0x26d5a6 = new _0x4bfcdb();
            return this['cloneTo'](_0x26d5a6), _0x26d5a6;
        }
    }
    _0x4bfcdb['HORIZONCOL' + 'OR'] = _0x18824e['propertyNa' + 'meToID']('u_HorizonC' + 'olor'), _0x4bfcdb['MAINTEXTUR' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_MainText' + 'ure'), _0x4bfcdb['NORMALTEXT' + 'URE'] = _0x18824e['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x4bfcdb['WAVESCALE'] = _0x18824e['propertyNa' + 'meToID']('u_WaveScal' + 'e'), _0x4bfcdb['WAVESPEED'] = _0x18824e['propertyNa' + 'meToID']('u_WaveSpee' + 'd');
    class _0x157bdb {
    }
    class _0x3bb578 extends _0x590787 {
        constructor(_0x12a709) {
            super(_0x12a709), this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = ![], this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x4c2288();
        }
        ['_createRen' + 'derElement']() {
            return new _0x5d8926();
        }
        ['_onMeshCha' + 'nge'](_0x308057) {
            if (_0x308057) {
                var _0x47c1e8 = _0x308057['subMeshCou' + 'nt'];
                this['_renderEle' + 'ments']['length'] = _0x47c1e8;
                for (var _0x38a020 = 0x0; _0x38a020 < _0x47c1e8; _0x38a020++) {
                    var _0x20e415 = this['_renderEle' + 'ments'][_0x38a020];
                    if (!_0x20e415) {
                        var _0x494a29 = this['sharedMate' + 'rials'][_0x38a020];
                        _0x20e415 = this['_renderEle' + 'ments'][_0x38a020] = this['_createRen' + 'derElement'](), _0x20e415['setTransfo' + 'rm'](this['_owner']['_transform']), _0x20e415['render'] = this, _0x20e415['material'] = _0x494a29 ? _0x494a29 : _0x523e5f['defaultMat' + 'erial'];
                    }
                    _0x20e415['setGeometr' + 'y'](_0x308057['getSubMesh'](_0x38a020));
                }
            } else
                this['_renderEle' + 'ments']['length'] = 0x0;
            this['_boundsCha' + 'nge'] = !![];
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x1417b8 = this['_owner']['meshFilter']['sharedMesh'];
            if (_0x1417b8) {
                var _0xd0a0fa = this['_owner']['transform']['worldMatri' + 'x'];
                _0x1417b8['bounds']['_tranform'](_0xd0a0fa, this['_bounds']);
            }
        }
        ['_needRende' + 'r'](_0x33e066, _0x598a45) {
            if (_0x33e066)
                return _0x33e066['intersects'](this['bounds']['_getBoundB' + 'ox']());
            else
                return !![];
        }
        ['_renderUpd' + 'ate'](_0x52e3dd, _0x23944b) {
            this['_applyLigh' + 'tMapParams']();
            var _0x5ed586 = _0x52e3dd['renderElem' + 'ent'];
            switch (_0x5ed586['renderType']) {
            case _0x5ca4bd['RENDERTYPE' + '_NORMAL']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x23944b['worldMatri' + 'x']);
                break;
            case _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH']:
                if (_0x23944b)
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x23944b['worldMatri' + 'x']);
                else
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x4c2288['DEFAULT']);
                !this['_shaderVal' + 'ues']['hasDefine'](_0x157bdb['SHADERDEFI' + 'NE_UV1']) ? (this['_shaderVal' + 'ues']['addDefine'](_0x157bdb['SHADERDEFI' + 'NE_UV1']), this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !![]) : this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = ![];
                this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['LIGHTMAPSC' + 'ALEOFFSET'], _0x590787['_defaultLi' + 'ghtmapScal' + 'eOffset']);
                break;
            case _0x5ca4bd['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x4c2288['DEFAULT']);
                break;
            case _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                var _0x4ba53f = _0x2247dd['instance']['instanceWo' + 'rldMatrixD' + 'ata'], _0x2336fb = _0x5ed586['instanceBa' + 'tchElement' + 'List'], _0x370997 = _0x2336fb['elements'], _0x56a166 = _0x2336fb['length'];
                for (var _0x30c123 = 0x0; _0x30c123 < _0x56a166; _0x30c123++)
                    _0x4ba53f['set'](_0x370997[_0x30c123]['_transform']['worldMatri' + 'x']['elements'], _0x30c123 * 0x10);
                var _0x4b2e8d = _0x2247dd['instance']['instanceWo' + 'rldMatrixB' + 'uffer'];
                _0x4b2e8d['orphanStor' + 'age'](), _0x4b2e8d['setData'](_0x4ba53f['buffer'], 0x0, 0x0, _0x56a166 * 0x10 * 0x4), this['_shaderVal' + 'ues']['addDefine'](_0x157bdb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
                break;
            }
            if (!this['_probRefle' + 'ction'])
                return;
            this['_reflectio' + 'nMode'] == _0x1f405c['Reflection' + 'ProbeMode']['off'] ? (this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION']), this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'], _0x542d3e['defaultTex' + 'tureHDRDec' + 'odeValues']), this['_shaderVal' + 'ues']['setTexture'](_0x22d3a2['REFLECTION' + 'TEXTURE'], _0x4b21e5['blackTextu' + 're'])) : (!this['_probRefle' + 'ction']['boxProject' + 'ion'] ? this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION']) : (this['_shaderVal' + 'ues']['addDefine'](_0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION']), this['_shaderVal' + 'ues']['setVector3'](_0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'POSITION'], this['_probRefle' + 'ction']['probePosit' + 'ion']), this['_shaderVal' + 'ues']['setVector3'](_0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'BOXMAX'], this['_probRefle' + 'ction']['boundsMax']), this['_shaderVal' + 'ues']['setVector3'](_0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'BOXMIN'], this['_probRefle' + 'ction']['boundsMin'])), this['_shaderVal' + 'ues']['setTexture'](_0x22d3a2['REFLECTION' + 'TEXTURE'], this['_probRefle' + 'ction']['reflection' + 'Texture']), this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'], this['_probRefle' + 'ction']['reflection' + 'HDRParams']));
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x4fe232, _0x1d256c) {
            var _0x3cc65c = _0x4fe232['projection' + 'ViewMatrix'];
            if (_0x3cc65c) {
                var _0x86a29 = _0x4fe232['renderElem' + 'ent'];
                switch (_0x86a29['renderType']) {
                case _0x5ca4bd['RENDERTYPE' + '_NORMAL']:
                case _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH']:
                case _0x5ca4bd['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                    _0x1d256c ? (_0x4c2288['multiply'](_0x3cc65c, _0x1d256c['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix'])) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], _0x3cc65c);
                    break;
                case _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                    var _0x1e8be2 = _0x2247dd['instance']['instanceMV' + 'PMatrixDat' + 'a'], _0x79d5da = _0x86a29['instanceBa' + 'tchElement' + 'List'], _0x43db65 = _0x79d5da['elements'], _0x6ee30b = _0x79d5da['length'];
                    for (var _0x55e80b = 0x0; _0x55e80b < _0x6ee30b; _0x55e80b++) {
                        var _0x50ec73 = _0x43db65[_0x55e80b]['_transform']['worldMatri' + 'x'];
                        _0x47bed9['mulMatrixB' + 'yArray'](_0x3cc65c['elements'], 0x0, _0x50ec73['elements'], 0x0, _0x1e8be2, _0x55e80b * 0x10);
                    }
                    var _0x4f7213 = _0x2247dd['instance']['instanceMV' + 'PMatrixBuf' + 'fer'];
                    _0x4f7213['orphanStor' + 'age'](), _0x4f7213['setData'](_0x1e8be2['buffer'], 0x0, 0x0, _0x6ee30b * 0x10 * 0x4);
                    break;
                }
            }
        }
        ['_revertBat' + 'chRenderUp' + 'date'](_0x38abf4) {
            var _0x59cdd9 = _0x38abf4['renderElem' + 'ent'];
            switch (_0x59cdd9['renderType']) {
            case _0x5ca4bd['RENDERTYPE' + '_STATICBAT' + 'CH']:
                if (this['_revertSta' + 'ticBatchDe' + 'fineUV1'])
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x157bdb['SHADERDEFI' + 'NE_UV1']);
                this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['LIGHTMAPSC' + 'ALEOFFSET'], this['lightmapSc' + 'aleOffset']);
                break;
            case _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x157bdb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
                break;
            }
        }
        ['_destroy']() {
            this['_isPartOfS' + 'taticBatch'] && _0xb90358['instance']['_removeRen' + 'derSprite'](this['_owner']), super['_destroy']();
        }
    }
    class _0x2da43c {
        constructor(_0x14669c) {
            this['_owner'] = _0x14669c;
        }
        get ['sharedMesh']() {
            return this['_sharedMes' + 'h'];
        }
        set ['sharedMesh'](_0x6627d1) {
            if (this['_sharedMes' + 'h'] !== _0x6627d1) {
                var _0x27a9fa = this['_owner']['_render']['_shaderVal' + 'ues'], _0x2c731e = this['_sharedMes' + 'h'];
                if (_0x2c731e) {
                    _0x2c731e['_removeRef' + 'erence'](), this['_getMeshDe' + 'fine'](_0x2c731e, _0x2da43c['_meshVerti' + 'ceDefine']);
                    for (var _0x300f40 = 0x0, _0x5b95c9 = _0x2da43c['_meshVerti' + 'ceDefine']['length']; _0x300f40 < _0x5b95c9; _0x300f40++)
                        _0x27a9fa['removeDefi' + 'ne'](_0x2da43c['_meshVerti' + 'ceDefine'][_0x300f40]);
                }
                if (_0x6627d1) {
                    _0x6627d1['_addRefere' + 'nce'](), this['_getMeshDe' + 'fine'](_0x6627d1, _0x2da43c['_meshVerti' + 'ceDefine']);
                    for (var _0x300f40 = 0x0, _0x5b95c9 = _0x2da43c['_meshVerti' + 'ceDefine']['length']; _0x300f40 < _0x5b95c9; _0x300f40++)
                        _0x27a9fa['addDefine'](_0x2da43c['_meshVerti' + 'ceDefine'][_0x300f40]);
                }
                this['_owner']['_render']['_onMeshCha' + 'nge'](_0x6627d1), this['_sharedMes' + 'h'] = _0x6627d1;
            }
        }
        ['_getMeshDe' + 'fine'](_0x5c8d63, _0x5226a5) {
            _0x5226a5['length'] = 0x0;
            var _0x440077;
            for (var _0x40e50e = 0x0, _0x3f4078 = _0x5c8d63['_subMeshes']['length']; _0x40e50e < _0x3f4078; _0x40e50e++) {
                var _0x5d0a14 = _0x5c8d63['getSubMesh'](_0x40e50e), _0x26fc90 = _0x5d0a14['_vertexBuf' + 'fer']['_vertexDec' + 'laration']['_vertexEle' + 'ments'];
                for (var _0x2d2089 = 0x0, _0x118b35 = _0x26fc90['length']; _0x2d2089 < _0x118b35; _0x2d2089++) {
                    var _0x4d9157 = _0x26fc90[_0x2d2089], _0x7c3781 = _0x4d9157['_elementUs' + 'age'];
                    switch (_0x7c3781) {
                    case _0x2a7b2f['MESH_COLOR' + '0']:
                        _0x5226a5['push'](_0x157bdb['SHADERDEFI' + 'NE_COLOR']);
                        break;
                    case _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                        _0x5226a5['push'](_0x157bdb['SHADERDEFI' + 'NE_UV0']);
                        break;
                    case _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                        _0x5226a5['push'](_0x157bdb['SHADERDEFI' + 'NE_UV1']);
                        break;
                    }
                }
            }
            return _0x440077;
        }
        ['destroy']() {
            this['_owner'] = null, this['_sharedMes' + 'h'] && (this['_sharedMes' + 'h']['_removeRef' + 'erence'](), this['_sharedMes' + 'h'] = null);
        }
    }
    _0x2da43c['_meshVerti' + 'ceDefine'] = [];
    class _0x3444e5 extends _0x355f63 {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x2f0542();
            var _0x12bf59 = _0x442335['LayaGL']['instance'], _0x2f69fe = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,COLO' + 'R,UV,UV1,T' + 'ANGENT'), _0x2080d1 = _0x2f69fe['vertexStri' + 'de'] * _0x3444e5['maxIndices' + 'Count'];
            this['_vertices'] = new Float32Array(_0x2080d1 / 0x4), this['_vertexBuf' + 'fer'] = new _0x251441(_0x2080d1, _0x12bf59['DYNAMIC_DR' + 'AW']), this['_indices'] = new Int16Array(_0x3444e5['maxIndices' + 'Count']), this['_indexBuff' + 'er'] = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], this['_indices']['length'], _0x12bf59['DYNAMIC_DR' + 'AW']);
            var _0x3ac5ac = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x442335['Resource']['_addMemory'](_0x3ac5ac, _0x3ac5ac);
        }
        static ['__init__']() {
            _0x3444e5['instance'] = new _0x3444e5();
        }
        ['_getBatchV' + 'ertices'](_0x54a7e7, _0x3f8e3b, _0x150057, _0xd869f5, _0x15baa2, _0x2f9813) {
            var _0x4030e8 = _0x54a7e7['vertexStri' + 'de'] / 0x4, _0x444543 = _0x2f9813['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x5c492a = _0x15baa2['render']['lightmapSc' + 'aleOffset'], _0x4bee80 = _0x15baa2['_dynamicMu' + 'ltiSubMesh'], _0x26a7e2 = _0x15baa2['_dynamicVe' + 'rtexCount'];
            _0x15baa2['_computeWo' + 'rldPositio' + 'nsAndNorma' + 'ls'](this['_positionO' + 'ffset'], this['_normalOff' + 'set'], _0x4bee80, _0x26a7e2);
            var _0x283d73 = _0x15baa2['_dynamicWo' + 'rldPositio' + 'ns'], _0x286bb0 = _0x15baa2['_dynamicWo' + 'rldNormals'], _0x245e9e = _0x2f9813['_indices'];
            for (var _0x129476 = 0x0; _0x129476 < _0x26a7e2; _0x129476++) {
                var _0x2d4b3c = _0x4bee80 ? _0x245e9e[_0x129476] : _0x129476, _0x19e149 = _0x2d4b3c * _0x4030e8, _0x3219cf = (_0x129476 + _0x150057) * _0x4030e8, _0x3d7123 = _0x129476 * 0x3, _0x3eff53 = _0x3219cf + this['_positionO' + 'ffset'];
                _0x3f8e3b[_0x3eff53] = _0x283d73[_0x3d7123], _0x3f8e3b[_0x3eff53 + 0x1] = _0x283d73[_0x3d7123 + 0x1], _0x3f8e3b[_0x3eff53 + 0x2] = _0x283d73[_0x3d7123 + 0x2], this['_normalOff' + 'set'] !== -0x1 && (_0x3eff53 = _0x3219cf + this['_normalOff' + 'set'], _0x3f8e3b[_0x3eff53] = _0x286bb0[_0x3d7123], _0x3f8e3b[_0x3eff53 + 0x1] = _0x286bb0[_0x3d7123 + 0x1], _0x3f8e3b[_0x3eff53 + 0x2] = _0x286bb0[_0x3d7123 + 0x2]), this['_colorOffs' + 'et'] !== -0x1 && (_0x3eff53 = _0x3219cf + this['_colorOffs' + 'et'], _0x3d7123 = _0x19e149 + this['_colorOffs' + 'et'], _0x3f8e3b[_0x3eff53] = _0x444543[_0x3d7123], _0x3f8e3b[_0x3eff53 + 0x1] = _0x444543[_0x3d7123 + 0x1], _0x3f8e3b[_0x3eff53 + 0x2] = _0x444543[_0x3d7123 + 0x2], _0x3f8e3b[_0x3eff53 + 0x3] = _0x444543[_0x3d7123 + 0x3]), this['_uv0Offset'] !== -0x1 && (_0x3eff53 = _0x3219cf + this['_uv0Offset'], _0x3d7123 = _0x19e149 + this['_uv0Offset'], _0x3f8e3b[_0x3eff53] = _0x444543[_0x3d7123], _0x3f8e3b[_0x3eff53 + 0x1] = _0x444543[_0x3d7123 + 0x1]), this['_sTangentO' + 'ffset'] !== -0x1 && (_0x3eff53 = _0x3219cf + this['_sTangentO' + 'ffset'], _0x3d7123 = _0x19e149 + this['_sTangentO' + 'ffset'], _0x3f8e3b[_0x3eff53] = _0x444543[_0x3d7123], _0x3f8e3b[_0x3eff53 + 0x1] = _0x444543[_0x3d7123 + 0x1], _0x3f8e3b[_0x3eff53 + 0x2] = _0x444543[_0x3d7123 + 0x2], _0x3f8e3b[_0x3eff53 + 0x3] = _0x444543[_0x3d7123 + 0x3], _0x3eff53 = _0x3219cf + this['_sTangentO' + 'ffset'], _0x3d7123 = _0x19e149 + this['_sTangentO' + 'ffset'], _0x3f8e3b[_0x3eff53] = _0x444543[_0x3d7123], _0x3f8e3b[_0x3eff53 + 0x1] = _0x444543[_0x3d7123 + 0x1], _0x3f8e3b[_0x3eff53 + 0x2] = _0x444543[_0x3d7123 + 0x2], _0x3f8e3b[_0x3eff53 + 0x3] = _0x444543[_0x3d7123 + 0x3]);
            }
        }
        ['_getBatchI' + 'ndices'](_0x33b33d, _0x5339f8, _0x2b4650, _0x32c015, _0x33460f, _0x5cb1b8) {
            var _0x2af603 = _0x33460f['_indices'], _0x3bb6bd, _0x34896a, _0x2bcda2, _0x3ddef1 = _0x32c015['_isFrontFa' + 'ceInvert'];
            if (_0x5cb1b8) {
                if (_0x3ddef1)
                    for (_0x3bb6bd = 0x0, _0x34896a = _0x2af603['length']; _0x3bb6bd < _0x34896a; _0x3bb6bd += 0x3) {
                        _0x2bcda2 = _0x5339f8 + _0x3bb6bd;
                        var _0x49a0f3 = _0x2b4650 + _0x3bb6bd;
                        _0x33b33d[_0x2bcda2] = _0x49a0f3, _0x33b33d[_0x2bcda2 + 0x1] = _0x49a0f3 + 0x2, _0x33b33d[_0x2bcda2 + 0x2] = _0x49a0f3 + 0x1;
                    }
                else
                    for (_0x3bb6bd = 0x0, _0x34896a = _0x2af603['length']; _0x3bb6bd < _0x34896a; _0x3bb6bd += 0x3) {
                        _0x2bcda2 = _0x5339f8 + _0x3bb6bd, _0x49a0f3 = _0x2b4650 + _0x3bb6bd, _0x33b33d[_0x2bcda2] = _0x49a0f3, _0x33b33d[_0x2bcda2 + 0x1] = _0x49a0f3 + 0x1, _0x33b33d[_0x2bcda2 + 0x2] = _0x49a0f3 + 0x2;
                    }
            } else {
                if (_0x3ddef1)
                    for (_0x3bb6bd = 0x0, _0x34896a = _0x2af603['length']; _0x3bb6bd < _0x34896a; _0x3bb6bd += 0x3) {
                        _0x2bcda2 = _0x5339f8 + _0x3bb6bd, _0x33b33d[_0x2bcda2] = _0x2b4650 + _0x2af603[_0x3bb6bd], _0x33b33d[_0x2bcda2 + 0x1] = _0x2b4650 + _0x2af603[_0x3bb6bd + 0x2], _0x33b33d[_0x2bcda2 + 0x2] = _0x2b4650 + _0x2af603[_0x3bb6bd + 0x1];
                    }
                else
                    for (_0x3bb6bd = 0x0, _0x34896a = _0x2af603['length']; _0x3bb6bd < _0x34896a; _0x3bb6bd += 0x3) {
                        _0x2bcda2 = _0x5339f8 + _0x3bb6bd, _0x33b33d[_0x2bcda2] = _0x2b4650 + _0x2af603[_0x3bb6bd], _0x33b33d[_0x2bcda2 + 0x1] = _0x2b4650 + _0x2af603[_0x3bb6bd + 0x1], _0x33b33d[_0x2bcda2 + 0x2] = _0x2b4650 + _0x2af603[_0x3bb6bd + 0x2];
                    }
            }
        }
        ['_flush'](_0x43b667, _0x45e2cc) {
            var _0x144959 = _0x442335['LayaGL']['instance'];
            this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, _0x43b667 * this['_bufferSta' + 'te']['vertexDecl' + 'aration']['vertexStri' + 'de']), this['_indexBuff' + 'er']['setData'](this['_indices'], 0x0, 0x0, _0x45e2cc), _0x144959['drawElemen' + 'ts'](_0x144959['TRIANGLES'], _0x45e2cc, _0x144959['UNSIGNED_S' + 'HORT'], 0x0);
        }
        ['_prepareRe' + 'nder'](_0x24e18f) {
            var _0x5ba0c3 = _0x24e18f['renderElem' + 'ent'], _0x58f562 = _0x5ba0c3['vertexBatc' + 'hVertexDec' + 'laration'];
            this['_bufferSta' + 'te'] = _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager']['instance']['_getBuffer' + 'State'](_0x58f562), this['_positionO' + 'ffset'] = _0x58f562['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_POSIT' + 'ION0'])['_offset'] / 0x4;
            var _0x57eb41 = _0x58f562['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_NORMA' + 'L0']);
            this['_normalOff' + 'set'] = _0x57eb41 ? _0x57eb41['_offset'] / 0x4 : -0x1;
            var _0x976297 = _0x58f562['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_COLOR' + '0']);
            this['_colorOffs' + 'et'] = _0x976297 ? _0x976297['_offset'] / 0x4 : -0x1;
            var _0x473b13 = _0x58f562['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
            this['_uv0Offset'] = _0x473b13 ? _0x473b13['_offset'] / 0x4 : -0x1;
            var _0x415586 = _0x58f562['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
            this['_uv1Offset'] = _0x415586 ? _0x415586['_offset'] / 0x4 : -0x1;
            var _0x11b902 = _0x58f562['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TANGE' + 'NT0']);
            return this['_sTangentO' + 'ffset'] = _0x11b902 ? _0x11b902['_offset'] / 0x4 : -0x1, !![];
        }
        ['_render'](_0x502c55) {
            this['_bufferSta' + 'te']['bind']();
            var _0x41f2df = _0x502c55['renderElem' + 'ent'], _0x2d6ec7 = _0x41f2df['vertexBatc' + 'hVertexDec' + 'laration'], _0x22addb = _0x41f2df['vertexBatc' + 'hElementLi' + 'st'], _0x50f5c8 = 0x0, _0x36fa02 = 0x0, _0x297233 = _0x2d6ec7['vertexStri' + 'de'] / 0x4, _0x9fb178 = 0x0, _0x18e791 = _0x22addb['length'], _0x11c4cd = _0x22addb['elements'];
            for (var _0x314764 = 0x0; _0x314764 < _0x18e791; _0x314764++) {
                var _0x114734 = _0x11c4cd[_0x314764], _0x4ffb36 = _0x114734['_geometry'], _0x5b45e4 = _0x4ffb36['_indexCoun' + 't'];
                _0x36fa02 + _0x5b45e4 > _0x3444e5['maxIndices' + 'Count'] && (this['_flush'](_0x50f5c8, _0x36fa02), _0x9fb178++, _0x442335['Stat']['trianglesF' + 'aces'] += _0x36fa02 / 0x3, _0x50f5c8 = _0x36fa02 = 0x0);
                var _0x277250 = _0x114734['_transform'];
                this['_getBatchV' + 'ertices'](_0x2d6ec7, this['_vertices'], _0x50f5c8, _0x277250, _0x114734, _0x4ffb36), this['_getBatchI' + 'ndices'](this['_indices'], _0x36fa02, _0x50f5c8, _0x277250, _0x4ffb36, _0x114734['_dynamicMu' + 'ltiSubMesh']), _0x50f5c8 += _0x114734['_dynamicVe' + 'rtexCount'], _0x36fa02 += _0x5b45e4;
            }
            this['_flush'](_0x50f5c8, _0x36fa02), _0x9fb178++, _0x442335['Stat']['renderBatc' + 'hes'] += _0x9fb178, _0x442335['Stat']['savedRende' + 'rBatches'] += _0x18e791 - _0x9fb178, _0x442335['Stat']['trianglesF' + 'aces'] += _0x36fa02 / 0x3;
        }
    }
    _0x3444e5['maxAllowVe' + 'rtexCount'] = 0xa, _0x3444e5['maxAllowAt' + 'tribueCoun' + 't'] = 0x384, _0x3444e5['maxIndices' + 'Count'] = 0x7d00;
    class _0x5a12d5 extends _0x32586c {
        constructor() {
            super(), this['_instanceB' + 'atchOpaque' + 'Marks'] = [], this['_vertexBat' + 'chOpaqueMa' + 'rks'] = [], this['_cacheBuff' + 'erStates'] = [], this['_updateCou' + 'ntMark'] = 0x0;
        }
        ['getInstanc' + 'eBatchOpaq' + 'uaMark'](_0xf6557e, _0x4d2473, _0x213a9c, _0x1729f4) {
            var _0x516929 = this['_instanceB' + 'atchOpaque' + 'Marks'][_0xf6557e ? 0x0 : 0x1] || (this['_instanceB' + 'atchOpaque' + 'Marks'][_0xf6557e ? 0x0 : 0x1] = []), _0x5301aa = _0x516929[_0x4d2473] || (_0x516929[_0x4d2473] = []), _0x1788c3 = _0x5301aa[_0x213a9c] || (_0x5301aa[_0x213a9c] = []);
            return _0x1788c3[_0x1729f4 ? 0x1 : 0x0] || (_0x1788c3[_0x1729f4 ? 0x1 : 0x0] = new _0x36391b());
        }
        ['getVertexB' + 'atchOpaqua' + 'Mark'](_0x3873c0, _0x197b3f, _0x26de91, _0x556a34) {
            var _0x517b0c = this['_vertexBat' + 'chOpaqueMa' + 'rks'][_0x3873c0] || (this['_vertexBat' + 'chOpaqueMa' + 'rks'][_0x3873c0] = []), _0x295350 = _0x517b0c[_0x197b3f ? 0x0 : 0x1] || (_0x517b0c[_0x197b3f ? 0x0 : 0x1] = []), _0x2a881f = _0x295350[_0x26de91] || (_0x295350[_0x26de91] = []);
            return _0x2a881f[_0x556a34] || (_0x2a881f[_0x556a34] = new _0x36391b());
        }
        ['_getBuffer' + 'State'](_0xaea873) {
            var _0x996458 = this['_cacheBuff' + 'erStates'][_0xaea873['id']];
            if (!_0x996458) {
                var _0x4f565d = _0x3444e5['instance'];
                _0x996458 = new _0x2f0542(), _0x996458['bind']();
                var _0x39ddf1 = _0x4f565d['_vertexBuf' + 'fer'];
                _0x39ddf1['vertexDecl' + 'aration'] = _0xaea873, _0x996458['applyVerte' + 'xBuffer'](_0x39ddf1), _0x996458['applyIndex' + 'Buffer'](_0x4f565d['_indexBuff' + 'er']), _0x996458['unBind'](), this['_cacheBuff' + 'erStates'][_0xaea873['id']] = _0x996458;
            }
            return _0x996458;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            var _0x285168 = this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex']++];
            return !_0x285168 && (_0x285168 = new _0x5d8926(), this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex'] - 0x1] = _0x285168, _0x285168['vertexBatc' + 'hElementLi' + 'st'] = new _0x4a730f(), _0x285168['instanceBa' + 'tchElement' + 'List'] = new _0x4a730f()), _0x285168;
        }
        ['_clear']() {
            super['_clear'](), this['_updateCou' + 'ntMark']++;
        }
    }
    _0x5a12d5['instance'] = new _0x5a12d5();
    class _0x1208f9 extends _0x22d3a2 {
        constructor(_0x411de6 = null, _0x5d054b = null) {
            super(_0x5d054b), this['_meshFilte' + 'r'] = new _0x2da43c(this), this['_render'] = new _0x3bb578(this), _0x411de6 && (this['_meshFilte' + 'r']['sharedMesh'] = _0x411de6);
        }
        static ['__init__']() {
            _0x157bdb['SHADERDEFI' + 'NE_UV0'] = _0x18824e['getDefineB' + 'yName']('UV'), _0x157bdb['SHADERDEFI' + 'NE_COLOR'] = _0x18824e['getDefineB' + 'yName']('COLOR'), _0x157bdb['SHADERDEFI' + 'NE_UV1'] = _0x18824e['getDefineB' + 'yName']('UV1'), _0x157bdb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE'] = _0x18824e['getDefineB' + 'yName']('GPU_INSTAN' + 'CE'), _0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION'] = _0x18824e['getDefineB' + 'yName']('SPECCUBE_B' + 'OX_PROJECT' + 'ION'), _0x435c23['_registerM' + 'anager'](_0xb90358['instance']), _0x32586c['_registerM' + 'anager'](_0x5a12d5['instance']);
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['meshRender' + 'er']() {
            return this['_render'];
        }
        ['_parse'](_0x38667e, _0x367794) {
            super['_parse'](_0x38667e, _0x367794);
            var _0x32b6d0 = this['meshRender' + 'er'], _0x33d9e2 = _0x38667e['lightmapIn' + 'dex'];
            _0x33d9e2 != null && (_0x32b6d0['lightmapIn' + 'dex'] = _0x33d9e2);
            var _0x5600f9 = _0x38667e['lightmapSc' + 'aleOffset'];
            _0x5600f9 && (_0x32b6d0['lightmapSc' + 'aleOffset'] = new _0x18425e(_0x5600f9[0x0], _0x5600f9[0x1], _0x5600f9[0x2], _0x5600f9[0x3])), _0x38667e['meshPath'] != undefined && (this['meshFilter']['sharedMesh'] = _0x442335['Loader']['getRes'](_0x38667e['meshPath'])), _0x38667e['enableRend' + 'er'] != undefined && (_0x32b6d0['enable'] = _0x38667e['enableRend' + 'er']), _0x38667e['receiveSha' + 'dows'] != undefined && (_0x32b6d0['receiveSha' + 'dow'] = _0x38667e['receiveSha' + 'dows']), _0x38667e['castShadow'] != undefined && (_0x32b6d0['castShadow'] = _0x38667e['castShadow']);
            var _0x1e1ec0 = _0x38667e['materials'];
            if (_0x1e1ec0) {
                var _0x15113a = _0x32b6d0['sharedMate' + 'rials'], _0x4494ef = _0x1e1ec0['length'];
                _0x15113a['length'] = _0x4494ef;
                for (var _0x526ac0 = 0x0; _0x526ac0 < _0x4494ef; _0x526ac0++) {
                    _0x15113a[_0x526ac0] = _0x442335['Loader']['getRes'](_0x1e1ec0[_0x526ac0]['path']);
                }
                _0x32b6d0['sharedMate' + 'rials'] = _0x15113a;
            }
        }
        ['_addToInit' + 'StaticBatc' + 'hManager']() {
            if (this['meshFilter']['sharedMesh'])
                _0xb90358['instance']['_addBatchS' + 'prite'](this);
        }
        ['_cloneTo'](_0x5e9479, _0x592914, _0x161e70) {
            var _0x25b336 = _0x5e9479;
            _0x25b336['_meshFilte' + 'r']['sharedMesh'] = this['_meshFilte' + 'r']['sharedMesh'];
            var _0x4e9f89 = this['_render'], _0x1d298a = _0x25b336['_render'];
            _0x1d298a['enable'] = _0x4e9f89['enable'], _0x1d298a['sharedMate' + 'rials'] = _0x4e9f89['sharedMate' + 'rials'], _0x1d298a['castShadow'] = _0x4e9f89['castShadow'];
            var _0x490894 = _0x4e9f89['lightmapSc' + 'aleOffset'];
            _0x490894 && (_0x1d298a['lightmapSc' + 'aleOffset'] = _0x490894['clone']()), _0x1d298a['lightmapIn' + 'dex'] = _0x4e9f89['lightmapIn' + 'dex'], _0x1d298a['receiveSha' + 'dow'] = _0x4e9f89['receiveSha' + 'dow'], _0x1d298a['sortingFud' + 'ge'] = _0x4e9f89['sortingFud' + 'ge'], super['_cloneTo'](_0x5e9479, _0x592914, _0x161e70);
        }
        ['destroy'](_0x12a909 = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x12a909), this['_meshFilte' + 'r']['destroy']();
        }
        ['_create']() {
            return new _0x1208f9();
        }
    }
    class _0x4c04d9 {
    }
    _0x4c04d9['Blend'] = 0x0, _0x4c04d9['Fixed'] = 0x1;
    class _0x56b2f2 {
        constructor(_0x140993, _0x5bb610) {
            this['_mode'] = 0x0, this['_maxColorR' + 'GBKeysCoun' + 't'] = 0x0, this['_maxColorA' + 'lphaKeysCo' + 'unt'] = 0x0, this['_colorRGBK' + 'eysCount'] = 0x0, this['_colorAlph' + 'aKeysCount'] = 0x0, this['_alphaElem' + 'ents'] = null, this['_rgbElemen' + 'ts'] = null, this['_maxColorR' + 'GBKeysCoun' + 't'] = _0x140993, this['_maxColorA' + 'lphaKeysCo' + 'unt'] = _0x5bb610, this['_rgbElemen' + 'ts'] = new Float32Array(_0x140993 * 0x4), this['_alphaElem' + 'ents'] = new Float32Array(_0x5bb610 * 0x2);
        }
        get ['mode']() {
            return this['_mode'];
        }
        set ['mode'](_0x1fd232) {
            this['_mode'] = _0x1fd232;
        }
        get ['colorRGBKe' + 'ysCount']() {
            return this['_colorRGBK' + 'eysCount'];
        }
        get ['colorAlpha' + 'KeysCount']() {
            return this['_colorAlph' + 'aKeysCount'];
        }
        get ['maxColorRG' + 'BKeysCount']() {
            return this['_maxColorR' + 'GBKeysCoun' + 't'];
        }
        get ['maxColorAl' + 'phaKeysCou' + 'nt']() {
            return this['_maxColorA' + 'lphaKeysCo' + 'unt'];
        }
        ['addColorRG' + 'B'](_0x5e83de, _0x5ab792) {
            if (this['_colorRGBK' + 'eysCount'] < this['_maxColorR' + 'GBKeysCoun' + 't']) {
                var _0x2ab504 = this['_colorRGBK' + 'eysCount'] * 0x4;
                this['_rgbElemen' + 'ts'][_0x2ab504] = _0x5e83de, this['_rgbElemen' + 'ts'][_0x2ab504 + 0x1] = _0x5ab792['r'], this['_rgbElemen' + 'ts'][_0x2ab504 + 0x2] = _0x5ab792['g'], this['_rgbElemen' + 'ts'][_0x2ab504 + 0x3] = _0x5ab792['b'], this['_colorRGBK' + 'eysCount']++;
            } else
                console['warn']('Gradient:w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x20' + this['_maxColorR' + 'GBKeysCoun' + 't']);
        }
        ['addColorAl' + 'pha'](_0x41ff98, _0x38f5ec) {
            if (this['_colorAlph' + 'aKeysCount'] < this['_maxColorA' + 'lphaKeysCo' + 'unt']) {
                var _0xcf773c = this['_colorAlph' + 'aKeysCount'] * 0x2;
                this['_alphaElem' + 'ents'][_0xcf773c] = _0x41ff98, this['_alphaElem' + 'ents'][_0xcf773c + 0x1] = _0x38f5ec, this['_colorAlph' + 'aKeysCount']++;
            } else
                console['warn']('Gradient:w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x20' + this['_maxColorA' + 'lphaKeysCo' + 'unt']);
        }
        ['updateColo' + 'rRGB'](_0x4a6631, _0x476c19, _0x5cde98) {
            if (_0x4a6631 < this['_colorRGBK' + 'eysCount']) {
                var _0x3877f3 = _0x4a6631 * 0x4;
                this['_rgbElemen' + 'ts'][_0x3877f3] = _0x476c19, this['_rgbElemen' + 'ts'][_0x3877f3 + 0x1] = _0x5cde98['r'], this['_rgbElemen' + 'ts'][_0x3877f3 + 0x2] = _0x5cde98['g'], this['_rgbElemen' + 'ts'][_0x3877f3 + 0x3] = _0x5cde98['b'];
            } else
                console['warn']('Gradient:w' + 'arning:ind' + 'ex\x20must\x20le' + 'ssEqual\x20th' + 'an\x20colorRG' + 'BKeysCount' + ':' + this['_colorRGBK' + 'eysCount']);
        }
        ['updateColo' + 'rAlpha'](_0xcbb66b, _0x1d215d, _0x21512c) {
            if (_0xcbb66b < this['_colorAlph' + 'aKeysCount']) {
                var _0x39cf3f = _0xcbb66b * 0x2;
                this['_alphaElem' + 'ents'][_0x39cf3f] = _0x1d215d, this['_alphaElem' + 'ents'][_0x39cf3f + 0x1] = _0x21512c;
            } else
                console['warn']('Gradient:w' + 'arning:ind' + 'ex\x20must\x20le' + 'ssEqual\x20th' + 'an\x20colorAl' + 'phaKeysCou' + 'nt:' + this['_colorAlph' + 'aKeysCount']);
        }
        ['evaluateCo' + 'lorRGB'](_0x426649, _0x125d59, _0x3a3fd8 = 0x0, _0x1db766 = ![]) {
            _0x426649 = Math['min'](Math['max'](_0x426649, 0x0), 0x1);
            var _0x1a0259 = this['_rgbElemen' + 'ts'], _0x133898 = _0x3a3fd8;
            if (_0x1db766)
                for (var _0x4aefdd = _0x133898; _0x4aefdd >= 0x0; _0x4aefdd--) {
                    var _0x214dee = _0x4aefdd * 0x4, _0x12b615 = _0x1a0259[_0x214dee];
                    if (_0x426649 === _0x12b615)
                        return _0x125d59['r'] = _0x1a0259[_0x214dee + 0x1], _0x125d59['g'] = _0x1a0259[_0x214dee + 0x2], _0x125d59['b'] = _0x1a0259[_0x214dee + 0x3], _0x133898;
                    switch (this['_mode']) {
                    case _0x4c04d9['Blend']:
                        if (_0x426649 > _0x12b615) {
                            var _0x98635c = _0x1a0259[_0x214dee + 0x4];
                            if (_0x426649 > _0x98635c)
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x510d8f = _0x98635c - _0x12b615, _0x504863 = _0x98635c - _0x426649, _0x401769 = _0x426649 - _0x12b615;
                            return _0x125d59['r'] = (_0x504863 * _0x1a0259[_0x214dee + 0x1] + _0x401769 * _0x1a0259[_0x214dee + 0x5]) / _0x510d8f, _0x125d59['g'] = (_0x504863 * _0x1a0259[_0x214dee + 0x2] + _0x401769 * _0x1a0259[_0x214dee + 0x6]) / _0x510d8f, _0x125d59['b'] = (_0x504863 * _0x1a0259[_0x214dee + 0x3] + _0x401769 * _0x1a0259[_0x214dee + 0x7]) / _0x510d8f, _0x133898;
                        } else {
                            _0x133898--;
                            continue;
                        }
                    case _0x4c04d9['Fixed']:
                        if (_0x426649 > _0x12b615) {
                            if (_0x426649 > _0x1a0259[_0x214dee + 0x4])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x125d59['r'] = _0x1a0259[_0x214dee + 0x5], _0x125d59['g'] = _0x1a0259[_0x214dee + 0x6], _0x125d59['b'] = _0x1a0259[_0x214dee + 0x7], _0x133898;
                        } else {
                            _0x133898--;
                            continue;
                        }
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            else
                for (var _0x4aefdd = 0x0, _0x121ccb = this['_rgbElemen' + 'ts']['length']; _0x4aefdd < _0x121ccb; _0x4aefdd++) {
                    _0x214dee = _0x4aefdd * 0x4;
                    var _0x98635c = _0x1a0259[_0x214dee];
                    if (_0x426649 === _0x98635c)
                        return _0x125d59['r'] = _0x1a0259[_0x214dee + 0x1], _0x125d59['g'] = _0x1a0259[_0x214dee + 0x2], _0x125d59['b'] = _0x1a0259[_0x214dee + 0x3], _0x133898;
                    switch (this['_mode']) {
                    case _0x4c04d9['Blend']:
                        if (_0x426649 < _0x98635c) {
                            var _0x12b615 = _0x1a0259[_0x214dee - 0x4];
                            if (_0x426649 < _0x12b615)
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x510d8f = _0x98635c - _0x12b615, _0x504863 = _0x98635c - _0x426649, _0x401769 = _0x426649 - _0x12b615;
                            return _0x125d59['r'] = (_0x504863 * _0x1a0259[_0x214dee - 0x3] + _0x401769 * _0x1a0259[_0x214dee + 0x1]) / _0x510d8f, _0x125d59['g'] = (_0x504863 * _0x1a0259[_0x214dee - 0x2] + _0x401769 * _0x1a0259[_0x214dee + 0x2]) / _0x510d8f, _0x125d59['b'] = (_0x504863 * _0x1a0259[_0x214dee - 0x1] + _0x401769 * _0x1a0259[_0x214dee + 0x3]) / _0x510d8f, _0x133898;
                        } else {
                            _0x133898++;
                            continue;
                        }
                    case _0x4c04d9['Fixed']:
                        if (_0x426649 < _0x98635c) {
                            if (_0x426649 < _0x1a0259[_0x214dee - 0x4])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x125d59['r'] = _0x1a0259[_0x214dee + 0x1], _0x125d59['g'] = _0x1a0259[_0x214dee + 0x2], _0x125d59['b'] = _0x1a0259[_0x214dee + 0x3], _0x133898;
                        } else {
                            _0x133898++;
                            continue;
                        }
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            return _0x133898;
        }
        ['evaluateCo' + 'lorAlpha'](_0x344727, _0x17dc2b, _0x467624 = 0x0, _0x294321 = ![]) {
            _0x344727 = Math['min'](Math['max'](_0x344727, 0x0), 0x1);
            var _0x407bd7 = this['_alphaElem' + 'ents'], _0x10d95f = _0x467624;
            if (_0x294321)
                for (var _0x42d2fc = _0x10d95f; _0x42d2fc >= 0x0; _0x42d2fc--) {
                    var _0x17e38c = _0x42d2fc * 0x2, _0x5e9cc2 = _0x407bd7[_0x17e38c];
                    if (_0x344727 === _0x5e9cc2)
                        return _0x17dc2b['a'] = _0x407bd7[_0x17e38c + 0x1], _0x10d95f;
                    switch (this['_mode']) {
                    case _0x4c04d9['Blend']:
                        if (_0x344727 > _0x5e9cc2) {
                            var _0xedf5dc = _0x407bd7[_0x17e38c + 0x2];
                            if (_0x344727 > _0xedf5dc)
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x22cd2e = _0xedf5dc - _0x5e9cc2, _0x1a9429 = _0xedf5dc - _0x344727, _0x537a0c = _0x344727 - _0x5e9cc2;
                            return _0x17dc2b['a'] = (_0x1a9429 * _0x407bd7[_0x17e38c + 0x1] + _0x537a0c * _0x407bd7[_0x17e38c + 0x3]) / _0x22cd2e, _0x10d95f;
                        } else {
                            _0x10d95f--;
                            continue;
                        }
                    case _0x4c04d9['Fixed']:
                        if (_0x344727 > _0x5e9cc2) {
                            if (_0x344727 > _0x407bd7[_0x17e38c + 0x2])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x17dc2b['a'] = _0x407bd7[_0x17e38c + 0x3], _0x10d95f;
                        } else {
                            _0x10d95f--;
                            continue;
                        }
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            else
                for (var _0x42d2fc = _0x10d95f, _0x3f37da = this['_alphaElem' + 'ents']['length']; _0x42d2fc < _0x3f37da; _0x42d2fc++) {
                    var _0x17e38c = _0x42d2fc * 0x2, _0xedf5dc = _0x407bd7[_0x17e38c];
                    if (_0x344727 === _0xedf5dc)
                        return _0x17dc2b['a'] = _0x407bd7[_0x17e38c + 0x1], _0x10d95f;
                    switch (this['_mode']) {
                    case _0x4c04d9['Blend']:
                        if (_0x344727 < _0xedf5dc) {
                            var _0x5e9cc2 = _0x407bd7[_0x17e38c - 0x2];
                            if (_0x344727 < _0x5e9cc2)
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x22cd2e = _0xedf5dc - _0x5e9cc2, _0x1a9429 = _0xedf5dc - _0x344727, _0x537a0c = _0x344727 - _0x5e9cc2;
                            return _0x17dc2b['a'] = (_0x1a9429 * _0x407bd7[_0x17e38c - 0x1] + _0x537a0c * _0x407bd7[_0x17e38c + 0x1]) / _0x22cd2e, _0x10d95f;
                        } else {
                            _0x10d95f++;
                            continue;
                        }
                    case _0x4c04d9['Fixed']:
                        if (_0x344727 < _0xedf5dc) {
                            if (_0x344727 < _0x407bd7[_0x17e38c - 0x2])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x17dc2b['a'] = _0x407bd7[_0x17e38c + 0x1], _0x10d95f;
                        } else {
                            _0x10d95f++;
                            continue;
                        }
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            return _0x10d95f;
        }
        ['cloneTo'](_0x1bf30a) {
            var _0x1e678d = _0x1bf30a, _0x413a9f, _0x49e636;
            _0x1e678d['_colorAlph' + 'aKeysCount'] = this['_colorAlph' + 'aKeysCount'];
            var _0x44fe94 = _0x1e678d['_alphaElem' + 'ents'];
            for (_0x413a9f = 0x0, _0x49e636 = this['_alphaElem' + 'ents']['length']; _0x413a9f < _0x49e636; _0x413a9f++)
                _0x44fe94[_0x413a9f] = this['_alphaElem' + 'ents'][_0x413a9f];
            _0x1e678d['_colorRGBK' + 'eysCount'] = this['_colorRGBK' + 'eysCount'];
            var _0x4fc400 = _0x1e678d['_rgbElemen' + 'ts'];
            for (_0x413a9f = 0x0, _0x49e636 = this['_rgbElemen' + 'ts']['length']; _0x413a9f < _0x49e636; _0x413a9f++)
                _0x4fc400[_0x413a9f] = this['_rgbElemen' + 'ts'][_0x413a9f];
        }
        ['clone']() {
            var _0x22d615 = new _0x56b2f2(this['_maxColorR' + 'GBKeysCoun' + 't'], this['_maxColorA' + 'lphaKeysCo' + 'unt']);
            return this['cloneTo'](_0x22d615), _0x22d615;
        }
    }
    class _0x10b1ec {
        constructor(_0x2832bd, _0x1d9679, _0x39e4d0) {
            this['_time'] = _0x2832bd, this['_minCount'] = _0x1d9679, this['_maxCount'] = _0x39e4d0;
        }
        get ['time']() {
            return this['_time'];
        }
        get ['minCount']() {
            return this['_minCount'];
        }
        get ['maxCount']() {
            return this['_maxCount'];
        }
        ['cloneTo'](_0x3396cf) {
            var _0x3b8eb8 = _0x3396cf;
            _0x3b8eb8['_time'] = this['_time'], _0x3b8eb8['_minCount'] = this['_minCount'], _0x3b8eb8['_maxCount'] = this['_maxCount'];
        }
        ['clone']() {
            var _0x16372e = new _0x10b1ec(this['_time'], this['_minCount'], this['_maxCount']);
            return this['cloneTo'](_0x16372e), _0x16372e;
        }
    }
    class _0xfeff71 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = null, this['_constantM' + 'in'] = null, this['_constantM' + 'ax'] = null, this['_gradient'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null;
        }
        static ['createByCo' + 'nstant'](_0x392158) {
            var _0x2dd010 = new _0xfeff71();
            return _0x2dd010['_type'] = 0x0, _0x2dd010['_constant'] = _0x392158, _0x2dd010;
        }
        static ['createByGr' + 'adient'](_0x44d210) {
            var _0x4dc390 = new _0xfeff71();
            return _0x4dc390['_type'] = 0x1, _0x4dc390['_gradient'] = _0x44d210, _0x4dc390;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x28873a, _0x3d7199) {
            var _0x1400e4 = new _0xfeff71();
            return _0x1400e4['_type'] = 0x2, _0x1400e4['_constantM' + 'in'] = _0x28873a, _0x1400e4['_constantM' + 'ax'] = _0x3d7199, _0x1400e4;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x369905, _0x9f7d6d) {
            var _0x14f94d = new _0xfeff71();
            return _0x14f94d['_type'] = 0x3, _0x14f94d['_gradientM' + 'in'] = _0x369905, _0x14f94d['_gradientM' + 'ax'] = _0x9f7d6d, _0x14f94d;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        ['cloneTo'](_0x514a61) {
            var _0x4508b3 = _0x514a61;
            _0x4508b3['_type'] = this['_type'], this['_constant']['cloneTo'](_0x4508b3['_constant']), this['_constantM' + 'in']['cloneTo'](_0x4508b3['_constantM' + 'in']), this['_constantM' + 'ax']['cloneTo'](_0x4508b3['_constantM' + 'ax']), this['_gradient']['cloneTo'](_0x4508b3['_gradient']), this['_gradientM' + 'in']['cloneTo'](_0x4508b3['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x4508b3['_gradientM' + 'ax']);
        }
        ['clone']() {
            var _0x325a60 = new _0xfeff71();
            return this['cloneTo'](_0x325a60), _0x325a60;
        }
    }
    class _0x57ef59 {
        constructor(_0x274a49) {
            this['_color'] = _0x274a49;
        }
        get ['color']() {
            return this['_color'];
        }
        ['cloneTo'](_0x570a3b) {
            var _0x64f66c = _0x570a3b;
            this['_color']['cloneTo'](_0x64f66c['_color']), _0x64f66c['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x18aad5;
            switch (this['_color']['type']) {
            case 0x0:
                _0x18aad5 = _0xfeff71['createByCo' + 'nstant'](this['_color']['constant']['clone']());
                break;
            case 0x1:
                _0x18aad5 = _0xfeff71['createByGr' + 'adient'](this['_color']['gradient']['clone']());
                break;
            case 0x2:
                _0x18aad5 = _0xfeff71['createByRa' + 'ndomTwoCon' + 'stant'](this['_color']['constantMi' + 'n']['clone'](), this['_color']['constantMa' + 'x']['clone']());
                break;
            case 0x3:
                _0x18aad5 = _0xfeff71['createByRa' + 'ndomTwoGra' + 'dient'](this['_color']['gradientMi' + 'n']['clone'](), this['_color']['gradientMa' + 'x']['clone']());
                break;
            }
            var _0xb505b6 = new _0x57ef59(_0x18aad5);
            return _0xb505b6['enable'] = this['enable'], _0xb505b6;
        }
    }
    class _0x55bc91 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = 0x0, this['_overTime'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_overTimeM' + 'in'] = null, this['_overTimeM' + 'ax'] = null;
        }
        static ['createByCo' + 'nstant'](_0x283d79 = 0x0) {
            var _0x32d9bd = new _0x55bc91();
            return _0x32d9bd['_type'] = 0x0, _0x32d9bd['_constant'] = _0x283d79, _0x32d9bd;
        }
        static ['createByOv' + 'erTime'](_0x25f178) {
            var _0x40b603 = new _0x55bc91();
            return _0x40b603['_type'] = 0x1, _0x40b603['_overTime'] = _0x25f178, _0x40b603;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x20725b = 0x0, _0x3e1f61 = 0x0) {
            var _0x4020ee = new _0x55bc91();
            return _0x4020ee['_type'] = 0x2, _0x4020ee['_constantM' + 'in'] = _0x20725b, _0x4020ee['_constantM' + 'ax'] = _0x3e1f61, _0x4020ee;
        }
        static ['createByRa' + 'ndomTwoOve' + 'rTime'](_0x2f9eac, _0x3a352d) {
            var _0x5dc570 = new _0x55bc91();
            return _0x5dc570['_type'] = 0x3, _0x5dc570['_overTimeM' + 'in'] = _0x2f9eac, _0x5dc570['_overTimeM' + 'ax'] = _0x3a352d, _0x5dc570;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['frameOverT' + 'imeData']() {
            return this['_overTime'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['frameOverT' + 'imeDataMin']() {
            return this['_overTimeM' + 'in'];
        }
        get ['frameOverT' + 'imeDataMax']() {
            return this['_overTimeM' + 'ax'];
        }
        ['cloneTo'](_0xc04be2) {
            var _0x44a85 = _0xc04be2;
            _0x44a85['_type'] = this['_type'], _0x44a85['_constant'] = this['_constant'], this['_overTime'] && this['_overTime']['cloneTo'](_0x44a85['_overTime']), _0x44a85['_constantM' + 'in'] = this['_constantM' + 'in'], _0x44a85['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_overTimeM' + 'in'] && this['_overTimeM' + 'in']['cloneTo'](_0x44a85['_overTimeM' + 'in']), this['_overTimeM' + 'ax'] && this['_overTimeM' + 'ax']['cloneTo'](_0x44a85['_overTimeM' + 'ax']);
        }
        ['clone']() {
            var _0x57d331 = new _0x55bc91();
            return this['cloneTo'](_0x57d331), _0x57d331;
        }
    }
    class _0x48f3a0 {
        constructor() {
            this['_type'] = 0x0, this['_separateA' + 'xes'] = ![], this['_constant'] = 0x0, this['_constantS' + 'eparate'] = null, this['_gradient'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_gradientW'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_constantM' + 'inSeparate'] = null, this['_constantM' + 'axSeparate'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null, this['_gradientW' + 'Min'] = null, this['_gradientW' + 'Max'] = null;
        }
        static ['createByCo' + 'nstant'](_0x144d29) {
            var _0x14f7ef = new _0x48f3a0();
            return _0x14f7ef['_type'] = 0x0, _0x14f7ef['_separateA' + 'xes'] = ![], _0x14f7ef['_constant'] = _0x144d29, _0x14f7ef;
        }
        static ['createByCo' + 'nstantSepa' + 'rate'](_0x4f17f6) {
            var _0x10d483 = new _0x48f3a0();
            return _0x10d483['_type'] = 0x0, _0x10d483['_separateA' + 'xes'] = !![], _0x10d483['_constantS' + 'eparate'] = _0x4f17f6, _0x10d483;
        }
        static ['createByGr' + 'adient'](_0xcdf802) {
            var _0x3d3010 = new _0x48f3a0();
            return _0x3d3010['_type'] = 0x1, _0x3d3010['_separateA' + 'xes'] = ![], _0x3d3010['_gradient'] = _0xcdf802, _0x3d3010;
        }
        static ['createByGr' + 'adientSepa' + 'rate'](_0x7659f, _0x2a5e5e, _0x3f0c17) {
            var _0xad7b8c = new _0x48f3a0();
            return _0xad7b8c['_type'] = 0x1, _0xad7b8c['_separateA' + 'xes'] = !![], _0xad7b8c['_gradientX'] = _0x7659f, _0xad7b8c['_gradientY'] = _0x2a5e5e, _0xad7b8c['_gradientZ'] = _0x3f0c17, _0xad7b8c;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x59bfb2, _0xff96dc) {
            var _0x589ff5 = new _0x48f3a0();
            return _0x589ff5['_type'] = 0x2, _0x589ff5['_separateA' + 'xes'] = ![], _0x589ff5['_constantM' + 'in'] = _0x59bfb2, _0x589ff5['_constantM' + 'ax'] = _0xff96dc, _0x589ff5;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x435da, _0x1b4757) {
            var _0x2cd429 = new _0x48f3a0();
            return _0x2cd429['_type'] = 0x2, _0x2cd429['_separateA' + 'xes'] = !![], _0x2cd429['_constantM' + 'inSeparate'] = _0x435da, _0x2cd429['_constantM' + 'axSeparate'] = _0x1b4757, _0x2cd429;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x47af8e, _0x4bc7ce) {
            var _0x27eb1f = new _0x48f3a0();
            return _0x27eb1f['_type'] = 0x3, _0x27eb1f['_separateA' + 'xes'] = ![], _0x27eb1f['_gradientM' + 'in'] = _0x47af8e, _0x27eb1f['_gradientM' + 'ax'] = _0x4bc7ce, _0x27eb1f;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](_0x518d49, _0x13fee0, _0x1d3db1, _0x3b61c7, _0x2ce0e9, _0x5d75cb, _0x4a6840, _0x4188c2) {
            var _0x2f5df6 = new _0x48f3a0();
            return _0x2f5df6['_type'] = 0x3, _0x2f5df6['_separateA' + 'xes'] = !![], _0x2f5df6['_gradientX' + 'Min'] = _0x518d49, _0x2f5df6['_gradientX' + 'Max'] = _0x13fee0, _0x2f5df6['_gradientY' + 'Min'] = _0x1d3db1, _0x2f5df6['_gradientY' + 'Max'] = _0x3b61c7, _0x2f5df6['_gradientZ' + 'Min'] = _0x2ce0e9, _0x2f5df6['_gradientZ' + 'Max'] = _0x5d75cb, _0x2f5df6['_gradientW' + 'Min'] = _0x4a6840, _0x2f5df6['_gradientW' + 'Max'] = _0x4188c2, _0x2f5df6;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['separateAx' + 'es']() {
            return this['_separateA' + 'xes'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantSe' + 'parate']() {
            return this['_constantS' + 'eparate'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['gradientW']() {
            return this['_gradientW'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['constantMi' + 'nSeparate']() {
            return this['_constantM' + 'inSeparate'];
        }
        get ['constantMa' + 'xSeparate']() {
            return this['_constantM' + 'axSeparate'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        get ['gradientWM' + 'in']() {
            return this['_gradientW' + 'Min'];
        }
        get ['gradientWM' + 'ax']() {
            return this['_gradientW' + 'Max'];
        }
        ['cloneTo'](_0x435b6d) {
            var _0x5455e1 = _0x435b6d;
            _0x5455e1['_type'] = this['_type'], _0x5455e1['_separateA' + 'xes'] = this['_separateA' + 'xes'], _0x5455e1['_constant'] = this['_constant'], this['_constantS' + 'eparate']['cloneTo'](_0x5455e1['_constantS' + 'eparate']), this['_gradient']['cloneTo'](_0x5455e1['_gradient']), this['_gradientX']['cloneTo'](_0x5455e1['_gradientX']), this['_gradientY']['cloneTo'](_0x5455e1['_gradientY']), this['_gradientZ']['cloneTo'](_0x5455e1['_gradientZ']), _0x5455e1['_constantM' + 'in'] = this['_constantM' + 'in'], _0x5455e1['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_constantM' + 'inSeparate']['cloneTo'](_0x5455e1['_constantM' + 'inSeparate']), this['_constantM' + 'axSeparate']['cloneTo'](_0x5455e1['_constantM' + 'axSeparate']), this['_gradientM' + 'in']['cloneTo'](_0x5455e1['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x5455e1['_gradientM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x5455e1['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x5455e1['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x5455e1['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x5455e1['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x5455e1['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x5455e1['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x37a235 = new _0x48f3a0();
            return this['cloneTo'](_0x37a235), _0x37a235;
        }
    }
    class _0x2ccdfa {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x2;
        }
        ['add'](_0xab8f84, _0x62cd07) {
            this['_currentLe' + 'ngth'] < 0x8 ? (this['_currentLe' + 'ngth'] === 0x6 && _0xab8f84 !== 0x1 && (_0xab8f84 = 0x1, console['log']('Warning:th' + 'e\x20forth\x20ke' + 'y\x20is\x20\x20be\x20f' + 'orce\x20set\x20t' + 'o\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0xab8f84, this['_elements'][this['_currentLe' + 'ngth']++] = _0x62cd07) : console['log']('Warning:da' + 'ta\x20count\x20m' + 'ust\x20lessEq' + 'ual\x20than\x204');
        }
        ['cloneTo'](_0x5f4d92) {
            var _0x1cdfdd = _0x5f4d92;
            _0x1cdfdd['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            var _0x2c55a0 = _0x1cdfdd['_elements'];
            for (var _0xf8fc68 = 0x0, _0x17921a = this['_elements']['length']; _0xf8fc68 < _0x17921a; _0xf8fc68++) {
                _0x2c55a0[_0xf8fc68] = this['_elements'][_0xf8fc68];
            }
        }
        ['clone']() {
            var _0x5dd242 = new _0x2ccdfa();
            return this['cloneTo'](_0x5dd242), _0x5dd242;
        }
    }
    class _0x1731a8 {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x2;
        }
        ['add'](_0x1979d3, _0x492892) {
            this['_currentLe' + 'ngth'] < 0x8 ? (this['_currentLe' + 'ngth'] === 0x6 && _0x1979d3 !== 0x1 && (_0x1979d3 = 0x1, console['log']('GradientDa' + 'taNumber\x20w' + 'arning:the' + '\x20forth\x20key' + '\x20is\x20\x20be\x20fo' + 'rce\x20set\x20to' + '\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0x1979d3, this['_elements'][this['_currentLe' + 'ngth']++] = _0x492892) : console['log']('GradientDa' + 'taNumber\x20w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x204');
        }
        ['getKeyByIn' + 'dex'](_0x2dd570) {
            return this['_elements'][_0x2dd570 * 0x2];
        }
        ['getValueBy' + 'Index'](_0x20ea7f) {
            return this['_elements'][_0x20ea7f * 0x2 + 0x1];
        }
        ['getAverage' + 'Value']() {
            var _0x4f291f = 0x0, _0x185333 = 0x0;
            for (var _0x10c06e = 0x0, _0x5f163e = this['_currentLe' + 'ngth'] - 0x2; _0x10c06e < _0x5f163e; _0x10c06e += 0x2) {
                var _0x129daf = this['_elements'][_0x10c06e + 0x1];
                _0x129daf += this['_elements'][_0x10c06e + 0x3], _0x129daf = _0x129daf * (this['_elements'][_0x10c06e + 0x2] - this['_elements'][_0x10c06e]), _0x4f291f += _0x129daf, _0x185333++;
            }
            return _0x4f291f / _0x185333;
        }
        ['cloneTo'](_0x27afd6) {
            var _0x218107 = _0x27afd6;
            _0x218107['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            var _0x1ed492 = _0x218107['_elements'];
            for (var _0x59faa6 = 0x0, _0x1705ef = this['_elements']['length']; _0x59faa6 < _0x1705ef; _0x59faa6++)
                _0x1ed492[_0x59faa6] = this['_elements'][_0x59faa6];
        }
        ['clone']() {
            var _0x20bef3 = new _0x1731a8();
            return this['cloneTo'](_0x20bef3), _0x20bef3;
        }
    }
    class _0x239ca5 {
        constructor() {
            this['_type'] = 0x0, this['_separateA' + 'xes'] = ![], this['_gradient'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_constantM' + 'inSeparate'] = null, this['_constantM' + 'axSeparate'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null;
        }
        static ['createByGr' + 'adient'](_0x8fa42e) {
            var _0x75fc17 = new _0x239ca5();
            return _0x75fc17['_type'] = 0x0, _0x75fc17['_separateA' + 'xes'] = ![], _0x75fc17['_gradient'] = _0x8fa42e, _0x75fc17;
        }
        static ['createByGr' + 'adientSepa' + 'rate'](_0x216006, _0x5776fe, _0x3e1790) {
            var _0x45de00 = new _0x239ca5();
            return _0x45de00['_type'] = 0x0, _0x45de00['_separateA' + 'xes'] = !![], _0x45de00['_gradientX'] = _0x216006, _0x45de00['_gradientY'] = _0x5776fe, _0x45de00['_gradientZ'] = _0x3e1790, _0x45de00;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x2b01c0, _0xd72a5c) {
            var _0x52c4a5 = new _0x239ca5();
            return _0x52c4a5['_type'] = 0x1, _0x52c4a5['_separateA' + 'xes'] = ![], _0x52c4a5['_constantM' + 'in'] = _0x2b01c0, _0x52c4a5['_constantM' + 'ax'] = _0xd72a5c, _0x52c4a5;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x1d30aa, _0xe84fa0) {
            var _0x1caf53 = new _0x239ca5();
            return _0x1caf53['_type'] = 0x1, _0x1caf53['_separateA' + 'xes'] = !![], _0x1caf53['_constantM' + 'inSeparate'] = _0x1d30aa, _0x1caf53['_constantM' + 'axSeparate'] = _0xe84fa0, _0x1caf53;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0xf62955, _0xdd7377) {
            var _0x1ace53 = new _0x239ca5();
            return _0x1ace53['_type'] = 0x2, _0x1ace53['_separateA' + 'xes'] = ![], _0x1ace53['_gradientM' + 'in'] = _0xf62955, _0x1ace53['_gradientM' + 'ax'] = _0xdd7377, _0x1ace53;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](_0xcc5bf5, _0x2234d0, _0x23ad3c, _0x3307ef, _0x2e4516, _0x299b69) {
            var _0x51dd6c = new _0x239ca5();
            return _0x51dd6c['_type'] = 0x2, _0x51dd6c['_separateA' + 'xes'] = !![], _0x51dd6c['_gradientX' + 'Min'] = _0xcc5bf5, _0x51dd6c['_gradientX' + 'Max'] = _0x2234d0, _0x51dd6c['_gradientY' + 'Min'] = _0x23ad3c, _0x51dd6c['_gradientY' + 'Max'] = _0x3307ef, _0x51dd6c['_gradientZ' + 'Min'] = _0x2e4516, _0x51dd6c['_gradientZ' + 'Max'] = _0x299b69, _0x51dd6c;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['separateAx' + 'es']() {
            return this['_separateA' + 'xes'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['constantMi' + 'nSeparate']() {
            return this['_constantM' + 'inSeparate'];
        }
        get ['constantMa' + 'xSeparate']() {
            return this['_constantM' + 'axSeparate'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        ['getMaxSize' + 'InGradient'](_0x4a8dc1 = ![]) {
            var _0x533ef2, _0x590f0b, _0x1bd77d = -Number['MAX_VALUE'];
            switch (this['_type']) {
            case 0x0:
                if (this['_separateA' + 'xes']) {
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientX']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientX']['getValueBy' + 'Index'](_0x533ef2));
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientY']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientY']['getValueBy' + 'Index'](_0x533ef2));
                    if (_0x4a8dc1)
                        for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientZ']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++) {
                            _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientZ']['getValueBy' + 'Index'](_0x533ef2));
                        }
                } else {
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradient']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradient']['getValueBy' + 'Index'](_0x533ef2));
                }
                break;
            case 0x1:
                this['_separateA' + 'xes'] ? (_0x1bd77d = Math['max'](this['_constantM' + 'inSeparate']['x'], this['_constantM' + 'axSeparate']['x']), _0x1bd77d = Math['max'](_0x1bd77d, this['_constantM' + 'inSeparate']['y']), _0x4a8dc1 && (_0x1bd77d = _0x1bd77d = Math['max'](_0x1bd77d, this['_constantM' + 'axSeparate']['z']))) : _0x1bd77d = Math['max'](this['_constantM' + 'in'], this['_constantM' + 'ax']);
                break;
            case 0x2:
                if (this['_separateA' + 'xes']) {
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientX' + 'Min']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientX' + 'Min']['getValueBy' + 'Index'](_0x533ef2));
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientX' + 'Max']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientX' + 'Max']['getValueBy' + 'Index'](_0x533ef2));
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientY' + 'Min']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientY' + 'Min']['getValueBy' + 'Index'](_0x533ef2));
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientZ' + 'Max']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientZ' + 'Max']['getValueBy' + 'Index'](_0x533ef2));
                    if (_0x4a8dc1) {
                        for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientZ' + 'Min']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++) {
                            _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientZ' + 'Min']['getValueBy' + 'Index'](_0x533ef2));
                        }
                        for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientZ' + 'Max']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++) {
                            _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientZ' + 'Max']['getValueBy' + 'Index'](_0x533ef2));
                        }
                    }
                } else {
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientM' + 'in']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientM' + 'in']['getValueBy' + 'Index'](_0x533ef2));
                    for (_0x533ef2 = 0x0, _0x590f0b = this['_gradientM' + 'ax']['gradientCo' + 'unt']; _0x533ef2 < _0x590f0b; _0x533ef2++)
                        _0x1bd77d = Math['max'](_0x1bd77d, this['_gradientM' + 'ax']['getValueBy' + 'Index'](_0x533ef2));
                }
                break;
            }
            return _0x1bd77d;
        }
        ['cloneTo'](_0x4e03f4) {
            var _0x36fb78 = _0x4e03f4;
            _0x36fb78['_type'] = this['_type'], _0x36fb78['_separateA' + 'xes'] = this['_separateA' + 'xes'], this['_gradient']['cloneTo'](_0x36fb78['_gradient']), this['_gradientX']['cloneTo'](_0x36fb78['_gradientX']), this['_gradientY']['cloneTo'](_0x36fb78['_gradientY']), this['_gradientZ']['cloneTo'](_0x36fb78['_gradientZ']), _0x36fb78['_constantM' + 'in'] = this['_constantM' + 'in'], _0x36fb78['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_constantM' + 'inSeparate']['cloneTo'](_0x36fb78['_constantM' + 'inSeparate']), this['_constantM' + 'axSeparate']['cloneTo'](_0x36fb78['_constantM' + 'axSeparate']), this['_gradientM' + 'in']['cloneTo'](_0x36fb78['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x36fb78['_gradientM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x36fb78['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x36fb78['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x36fb78['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x36fb78['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x36fb78['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x36fb78['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0xf39afd = new _0x239ca5();
            return this['cloneTo'](_0xf39afd), _0xf39afd;
        }
    }
    class _0xec4902 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_constantM' + 'in'] = null, this['_constantM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null;
        }
        static ['createByCo' + 'nstant'](_0x113bd3) {
            var _0x26a18a = new _0xec4902();
            return _0x26a18a['_type'] = 0x0, _0x26a18a['_constant'] = _0x113bd3, _0x26a18a;
        }
        static ['createByGr' + 'adient'](_0x1cd04e, _0x31c4aa, _0x2a8c73) {
            var _0x5ea3d6 = new _0xec4902();
            return _0x5ea3d6['_type'] = 0x1, _0x5ea3d6['_gradientX'] = _0x1cd04e, _0x5ea3d6['_gradientY'] = _0x31c4aa, _0x5ea3d6['_gradientZ'] = _0x2a8c73, _0x5ea3d6;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x24eb78, _0x30c384) {
            var _0x4490db = new _0xec4902();
            return _0x4490db['_type'] = 0x2, _0x4490db['_constantM' + 'in'] = _0x24eb78, _0x4490db['_constantM' + 'ax'] = _0x30c384, _0x4490db;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x56a30d, _0x36d1e2, _0x3c4048, _0x58bb80, _0x12389e, _0x2ca600) {
            var _0x46b865 = new _0xec4902();
            return _0x46b865['_type'] = 0x3, _0x46b865['_gradientX' + 'Min'] = _0x56a30d, _0x46b865['_gradientX' + 'Max'] = _0x36d1e2, _0x46b865['_gradientY' + 'Min'] = _0x3c4048, _0x46b865['_gradientY' + 'Max'] = _0x58bb80, _0x46b865['_gradientZ' + 'Min'] = _0x12389e, _0x46b865['_gradientZ' + 'Max'] = _0x2ca600, _0x46b865;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        ['cloneTo'](_0x60878d) {
            var _0x58e778 = _0x60878d;
            _0x58e778['_type'] = this['_type'], this['_constant']['cloneTo'](_0x58e778['_constant']), this['_gradientX']['cloneTo'](_0x58e778['_gradientX']), this['_gradientY']['cloneTo'](_0x58e778['_gradientY']), this['_gradientZ']['cloneTo'](_0x58e778['_gradientZ']), this['_constantM' + 'in']['cloneTo'](_0x58e778['_constantM' + 'in']), this['_constantM' + 'ax']['cloneTo'](_0x58e778['_constantM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x58e778['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x58e778['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x58e778['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x58e778['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x58e778['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x58e778['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x406f9c = new _0xec4902();
            return this['cloneTo'](_0x406f9c), _0x406f9c;
        }
    }
    class _0x48d329 {
        constructor(_0x3f1bf2) {
            this['_angularVe' + 'locity'] = _0x3f1bf2;
        }
        get ['angularVel' + 'ocity']() {
            return this['_angularVe' + 'locity'];
        }
        ['cloneTo'](_0x4b18bb) {
            var _0x5cd204 = _0x4b18bb;
            this['_angularVe' + 'locity']['cloneTo'](_0x5cd204['_angularVe' + 'locity']), _0x5cd204['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x511eaf;
            switch (this['_angularVe' + 'locity']['type']) {
            case 0x0:
                if (this['_angularVe' + 'locity']['separateAx' + 'es'])
                    _0x511eaf = _0x48f3a0['createByCo' + 'nstantSepa' + 'rate'](this['_angularVe' + 'locity']['constantSe' + 'parate']['clone']());
                else
                    _0x511eaf = _0x48f3a0['createByCo' + 'nstant'](this['_angularVe' + 'locity']['constant']);
                break;
            case 0x1:
                if (this['_angularVe' + 'locity']['separateAx' + 'es'])
                    _0x511eaf = _0x48f3a0['createByGr' + 'adientSepa' + 'rate'](this['_angularVe' + 'locity']['gradientX']['clone'](), this['_angularVe' + 'locity']['gradientY']['clone'](), this['_angularVe' + 'locity']['gradientZ']['clone']());
                else
                    _0x511eaf = _0x48f3a0['createByGr' + 'adient'](this['_angularVe' + 'locity']['gradient']['clone']());
                break;
            case 0x2:
                if (this['_angularVe' + 'locity']['separateAx' + 'es'])
                    _0x511eaf = _0x48f3a0['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](this['_angularVe' + 'locity']['constantMi' + 'nSeparate']['clone'](), this['_angularVe' + 'locity']['constantMa' + 'xSeparate']['clone']());
                else
                    _0x511eaf = _0x48f3a0['createByRa' + 'ndomTwoCon' + 'stant'](this['_angularVe' + 'locity']['constantMi' + 'n'], this['_angularVe' + 'locity']['constantMa' + 'x']);
                break;
            case 0x3:
                if (this['_angularVe' + 'locity']['separateAx' + 'es'])
                    _0x511eaf = _0x48f3a0['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_angularVe' + 'locity']['gradientXM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientYM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientZM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientWM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientXM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientYM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientZM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientWM' + 'ax']['clone']());
                else
                    _0x511eaf = _0x48f3a0['createByRa' + 'ndomTwoGra' + 'dient'](this['_angularVe' + 'locity']['gradientMi' + 'n']['clone'](), this['_angularVe' + 'locity']['gradientMa' + 'x']['clone']());
                break;
            }
            var _0x5a1842 = new _0x48d329(_0x511eaf);
            return _0x5a1842['enable'] = this['enable'], _0x5a1842;
        }
    }
    (function (_0x4ea2f2) {
        _0x4ea2f2[_0x4ea2f2['Box'] = 0x0] = 'Box', _0x4ea2f2[_0x4ea2f2['Circle'] = 0x1] = 'Circle', _0x4ea2f2[_0x4ea2f2['Cone'] = 0x2] = 'Cone', _0x4ea2f2[_0x4ea2f2['Hemisphere'] = 0x3] = 'Hemisphere', _0x4ea2f2[_0x4ea2f2['Sphere'] = 0x4] = 'Sphere';
    }(_0x1f405c['ParticleSy' + 'stemShapeT' + 'ype'] || (_0x1f405c['ParticleSy' + 'stemShapeT' + 'ype'] = {})));
    class _0x47a1cc {
        constructor() {
            this['enable'] = !![], this['randomDire' + 'ction'] = 0x0;
        }
        ['_getShapeB' + 'oundBox'](_0x41c47d) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['_getSpeedB' + 'oundBox'](_0x5e7cf2) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x4e8d5d, _0x1d5b77, _0x74392a = null, _0x26fa10 = null) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['_calculate' + 'Procedural' + 'Bounds'](_0x514143, _0x3a68cf, _0x735c50) {
            this['_getShapeB' + 'oundBox'](_0x514143);
            var _0x11cf1d = _0x514143['min'], _0x3958ba = _0x514143['max'];
            _0x352206['multiply'](_0x11cf1d, _0x3a68cf, _0x11cf1d), _0x352206['multiply'](_0x3958ba, _0x3a68cf, _0x3958ba);
            var _0x53eff2 = new _0x2bd0ec(new _0x352206(), new _0x352206());
            this['randomDire' + 'ction'] ? (_0x53eff2['min'] = new _0x352206(-0x1, -0x1, -0x1), _0x53eff2['max'] = new _0x352206(0x1, 0x1, 0x1)) : this['_getSpeedB' + 'oundBox'](_0x53eff2);
            var _0x3eb429 = new _0x2bd0ec(new _0x352206(), new _0x352206()), _0x456a4e = _0x3eb429['min'], _0x519d40 = _0x3eb429['max'];
            _0x352206['scale'](_0x53eff2['min'], _0x735c50['y'], _0x456a4e), _0x352206['scale'](_0x53eff2['max'], _0x735c50['y'], _0x519d40), _0x352206['add'](_0x514143['min'], _0x456a4e, _0x456a4e), _0x352206['add'](_0x514143['max'], _0x519d40, _0x519d40), _0x352206['min'](_0x514143['min'], _0x456a4e, _0x514143['min']), _0x352206['max'](_0x514143['max'], _0x456a4e, _0x514143['max']);
            var _0x920221 = new _0x2bd0ec(new _0x352206(), new _0x352206()), _0x47e085 = _0x920221['min'], _0x3f531a = _0x920221['max'];
            _0x352206['scale'](_0x53eff2['min'], _0x735c50['x'], _0x47e085), _0x352206['scale'](_0x53eff2['max'], _0x735c50['x'], _0x3f531a), _0x352206['min'](_0x920221['min'], _0x3f531a, _0x456a4e), _0x352206['max'](_0x920221['min'], _0x3f531a, _0x519d40), _0x352206['min'](_0x514143['min'], _0x456a4e, _0x514143['min']), _0x352206['max'](_0x514143['max'], _0x456a4e, _0x514143['max']);
        }
        ['cloneTo'](_0x3a57c2) {
            var _0x339ffd = _0x3a57c2;
            _0x339ffd['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x1d5727 = new _0x47a1cc();
            return this['cloneTo'](_0x1d5727), _0x1d5727;
        }
    }
    class _0x3a4e55 {
        static ['_randomPoi' + 'ntUnitArcC' + 'ircle'](_0x575b47, _0x385fff, _0xb6ea4a = null) {
            var _0x44b9f2;
            if (_0xb6ea4a)
                _0x44b9f2 = _0xb6ea4a['getFloat']() * _0x575b47;
            else
                _0x44b9f2 = Math['random']() * _0x575b47;
            _0x385fff['x'] = Math['cos'](_0x44b9f2), _0x385fff['y'] = Math['sin'](_0x44b9f2);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](_0x408019, _0xfdafa3, _0x3682b6 = null) {
            _0x3a4e55['_randomPoi' + 'ntUnitArcC' + 'ircle'](_0x408019, _0xfdafa3, _0x3682b6);
            var _0x26a2ac;
            if (_0x3682b6)
                _0x26a2ac = Math['pow'](_0x3682b6['getFloat'](), 0x1 / 0x2);
            else
                _0x26a2ac = Math['pow'](Math['random'](), 0x1 / 0x2);
            _0xfdafa3['x'] = _0xfdafa3['x'] * _0x26a2ac, _0xfdafa3['y'] = _0xfdafa3['y'] * _0x26a2ac;
        }
        static ['_randomPoi' + 'ntUnitCirc' + 'le'](_0x1333fd, _0x531967 = null) {
            var _0x4f0e64;
            if (_0x531967)
                _0x4f0e64 = _0x531967['getFloat']() * Math['PI'] * 0x2;
            else
                _0x4f0e64 = Math['random']() * Math['PI'] * 0x2;
            _0x1333fd['x'] = Math['cos'](_0x4f0e64), _0x1333fd['y'] = Math['sin'](_0x4f0e64);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x124357, _0x304694 = null) {
            _0x3a4e55['_randomPoi' + 'ntUnitCirc' + 'le'](_0x124357);
            var _0x108677;
            if (_0x304694)
                _0x108677 = Math['pow'](_0x304694['getFloat'](), 0x1 / 0x2);
            else
                _0x108677 = Math['pow'](Math['random'](), 0x1 / 0x2);
            _0x124357['x'] = _0x124357['x'] * _0x108677, _0x124357['y'] = _0x124357['y'] * _0x108677;
        }
        static ['_randomPoi' + 'ntUnitSphe' + 're'](_0x5bc791, _0x318948 = null) {
            var _0x5c3bb4, _0xbba753;
            _0x318948 ? (_0x5c3bb4 = _0x5bc791['z'] = _0x318948['getFloat']() * 0x2 - 0x1, _0xbba753 = _0x318948['getFloat']() * Math['PI'] * 0x2) : (_0x5c3bb4 = _0x5bc791['z'] = Math['random']() * 0x2 - 0x1, _0xbba753 = Math['random']() * Math['PI'] * 0x2);
            var _0xb2b2ee = Math['sqrt'](0x1 - _0x5c3bb4 * _0x5c3bb4);
            _0x5bc791['x'] = _0xb2b2ee * Math['cos'](_0xbba753), _0x5bc791['y'] = _0xb2b2ee * Math['sin'](_0xbba753);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x14d74c, _0x246896 = null) {
            _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x14d74c);
            var _0x4145d4;
            if (_0x246896)
                _0x4145d4 = Math['pow'](_0x246896['getFloat'](), 0x1 / 0x3);
            else
                _0x4145d4 = Math['pow'](Math['random'](), 0x1 / 0x3);
            _0x14d74c['x'] = _0x14d74c['x'] * _0x4145d4, _0x14d74c['y'] = _0x14d74c['y'] * _0x4145d4, _0x14d74c['z'] = _0x14d74c['z'] * _0x4145d4;
        }
        static ['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x31028c, _0x2b1204 = null) {
            _0x2b1204 ? (_0x31028c['x'] = _0x2b1204['getFloat']() - 0.5, _0x31028c['y'] = _0x2b1204['getFloat']() - 0.5, _0x31028c['z'] = _0x2b1204['getFloat']() - 0.5) : (_0x31028c['x'] = Math['random']() - 0.5, _0x31028c['y'] = Math['random']() - 0.5, _0x31028c['z'] = Math['random']() - 0.5);
        }
        constructor() {
        }
    }
    class _0x49338d extends _0x47a1cc {
        constructor() {
            super(), this['shapeType'] = _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Box'], this['x'] = 0x1, this['y'] = 0x1, this['z'] = 0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x4620c1) {
            var _0x112c95 = _0x4620c1['min'];
            _0x112c95['x'] = -this['x'] * 0.5, _0x112c95['y'] = -this['y'] * 0.5, _0x112c95['z'] = -this['z'] * 0.5;
            var _0x434c6f = _0x4620c1['max'];
            _0x434c6f['x'] = this['x'] * 0.5, _0x434c6f['y'] = this['y'] * 0.5, _0x434c6f['z'] = this['z'] * 0.5;
        }
        ['_getSpeedB' + 'oundBox'](_0x602234) {
            var _0x1ba977 = _0x602234['min'];
            _0x1ba977['x'] = 0x0, _0x1ba977['y'] = 0x0, _0x1ba977['z'] = 0x0;
            var _0x118533 = _0x602234['max'];
            _0x118533['x'] = 0x0, _0x118533['y'] = 0x1, _0x118533['z'] = 0x0;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x1c49ac, _0x180634, _0x1e9e3f = null, _0x2aa8cd = null) {
            _0x1e9e3f ? (_0x1e9e3f['seed'] = _0x2aa8cd[0x10], _0x3a4e55['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x1c49ac, _0x1e9e3f), _0x2aa8cd[0x10] = _0x1e9e3f['seed']) : _0x3a4e55['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x1c49ac), _0x1c49ac['x'] = this['x'] * _0x1c49ac['x'], _0x1c49ac['y'] = this['y'] * _0x1c49ac['y'], _0x1c49ac['z'] = this['z'] * _0x1c49ac['z'], this['randomDire' + 'ction'] ? _0x1e9e3f ? (_0x1e9e3f['seed'] = _0x2aa8cd[0x11], _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x180634, _0x1e9e3f), _0x2aa8cd[0x11] = _0x1e9e3f['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x180634) : (_0x180634['x'] = 0x0, _0x180634['y'] = 0x0, _0x180634['z'] = 0x1);
        }
        ['cloneTo'](_0x365f96) {
            super['cloneTo'](_0x365f96);
            var _0x417423 = _0x365f96;
            _0x417423['x'] = this['x'], _0x417423['y'] = this['y'], _0x417423['z'] = this['z'], _0x417423['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x36c9fc = new _0x49338d();
            return this['cloneTo'](_0x36c9fc), _0x36c9fc;
        }
    }
    class _0x2b0bf2 extends _0x47a1cc {
        constructor() {
            super(), this['shapeType'] = _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Circle'], this['radius'] = 0x1, this['arc'] = 0x168 / 0xb4 * Math['PI'], this['emitFromEd' + 'ge'] = ![];
        }
        ['_getShapeB' + 'oundBox'](_0x35209d) {
            var _0x1e3f4e = _0x35209d['min'];
            _0x1e3f4e['x'] = _0x1e3f4e['z'] = -this['radius'], _0x1e3f4e['y'] = 0x0;
            var _0x326f7b = _0x35209d['max'];
            _0x326f7b['x'] = _0x326f7b['z'] = this['radius'], _0x326f7b['y'] = 0x0;
        }
        ['_getSpeedB' + 'oundBox'](_0x127641) {
            var _0x5ceda8 = _0x127641['min'];
            _0x5ceda8['x'] = _0x5ceda8['y'] = -0x1, _0x5ceda8['z'] = 0x0;
            var _0x17b661 = _0x127641['max'];
            _0x17b661['x'] = _0x17b661['y'] = 0x1, _0x17b661['z'] = 0x0;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x16bff6, _0x2f9200, _0x5c7b43 = null, _0x22b805 = null) {
            var _0x302f00 = _0x2b0bf2['_tempPosit' + 'ionPoint'];
            if (_0x5c7b43) {
                _0x5c7b43['seed'] = _0x22b805[0x10];
                if (this['emitFromEd' + 'ge'])
                    _0x3a4e55['_randomPoi' + 'ntUnitArcC' + 'ircle'](this['arc'], _0x2b0bf2['_tempPosit' + 'ionPoint'], _0x5c7b43);
                else
                    _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](this['arc'], _0x2b0bf2['_tempPosit' + 'ionPoint'], _0x5c7b43);
                _0x22b805[0x10] = _0x5c7b43['seed'];
            } else {
                if (this['emitFromEd' + 'ge'])
                    _0x3a4e55['_randomPoi' + 'ntUnitArcC' + 'ircle'](this['arc'], _0x2b0bf2['_tempPosit' + 'ionPoint']);
                else
                    _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](this['arc'], _0x2b0bf2['_tempPosit' + 'ionPoint']);
            }
            _0x16bff6['x'] = -_0x302f00['x'], _0x16bff6['y'] = _0x302f00['y'], _0x16bff6['z'] = 0x0, _0x352206['scale'](_0x16bff6, this['radius'], _0x16bff6), this['randomDire' + 'ction'] ? _0x5c7b43 ? (_0x5c7b43['seed'] = _0x22b805[0x11], _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x2f9200, _0x5c7b43), _0x22b805[0x11] = _0x5c7b43['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x2f9200) : _0x16bff6['cloneTo'](_0x2f9200);
        }
        ['cloneTo'](_0x502db8) {
            super['cloneTo'](_0x502db8);
            var _0x387ff3 = _0x502db8;
            _0x387ff3['radius'] = this['radius'], _0x387ff3['arc'] = this['arc'], _0x387ff3['emitFromEd' + 'ge'] = this['emitFromEd' + 'ge'], _0x387ff3['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x181460 = new _0x2b0bf2();
            return this['cloneTo'](_0x181460), _0x181460;
        }
    }
    _0x2b0bf2['_tempPosit' + 'ionPoint'] = new _0x378045();
    class _0x41b96a extends _0x47a1cc {
        constructor() {
            super(), this['shapeType'] = _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Cone'], this['angle'] = 0x19 / 0xb4 * Math['PI'], this['radius'] = 0x1, this['length'] = 0x5, this['emitType'] = 0x0;
        }
        ['_getShapeB' + 'oundBox'](_0x24bdf0) {
            const _0x20b739 = this['radius'] + this['length'] * Math['sin'](this['angle']), _0x5c9cf1 = this['length'] * Math['cos'](this['angle']);
            var _0x3041c1 = _0x24bdf0['min'];
            _0x3041c1['x'] = _0x3041c1['y'] = -_0x20b739, _0x3041c1['z'] = 0x0;
            var _0x399b01 = _0x24bdf0['max'];
            _0x399b01['x'] = _0x399b01['y'] = _0x20b739, _0x399b01['z'] = _0x5c9cf1;
        }
        ['_getSpeedB' + 'oundBox'](_0x5a25f5) {
            const _0x567442 = Math['sin'](this['angle']);
            var _0x5c395d = _0x5a25f5['min'];
            _0x5c395d['x'] = _0x5c395d['y'] = -_0x567442, _0x5c395d['z'] = 0x0;
            var _0x402d64 = _0x5a25f5['max'];
            _0x402d64['x'] = _0x402d64['y'] = _0x567442, _0x402d64['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x3b29ae, _0x54dd91, _0x42cf6d = null, _0x292368 = null) {
            var _0x2bbad1 = _0x41b96a['_tempPosit' + 'ionPoint'], _0x57325e, _0x67ca27, _0x1ef2ae, _0x1467c6 = Math['cos'](this['angle']), _0x57d768 = Math['sin'](this['angle']);
            switch (this['emitType']) {
            case 0x0:
                _0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x10], _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempPosit' + 'ionPoint'], _0x42cf6d), _0x292368[0x10] = _0x42cf6d['seed']) : _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempPosit' + 'ionPoint']);
                _0x57325e = _0x2bbad1['x'], _0x67ca27 = _0x2bbad1['y'], _0x3b29ae['x'] = _0x57325e * this['radius'], _0x3b29ae['y'] = _0x67ca27 * this['radius'], _0x3b29ae['z'] = 0x0;
                this['randomDire' + 'ction'] ? (_0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x11], _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempDirec' + 'tionPoint'], _0x42cf6d), _0x292368[0x11] = _0x42cf6d['seed']) : _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempDirec' + 'tionPoint']), _0x1ef2ae = _0x41b96a['_tempDirec' + 'tionPoint'], _0x54dd91['x'] = _0x1ef2ae['x'] * _0x57d768, _0x54dd91['y'] = _0x1ef2ae['y'] * _0x57d768) : (_0x54dd91['x'] = _0x57325e * _0x57d768, _0x54dd91['y'] = _0x67ca27 * _0x57d768);
                _0x54dd91['z'] = _0x1467c6;
                break;
            case 0x1:
                _0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x10], _0x3a4e55['_randomPoi' + 'ntUnitCirc' + 'le'](_0x41b96a['_tempPosit' + 'ionPoint'], _0x42cf6d), _0x292368[0x10] = _0x42cf6d['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitCirc' + 'le'](_0x41b96a['_tempPosit' + 'ionPoint']);
                _0x57325e = _0x2bbad1['x'], _0x67ca27 = _0x2bbad1['y'], _0x3b29ae['x'] = _0x57325e * this['radius'], _0x3b29ae['y'] = _0x67ca27 * this['radius'], _0x3b29ae['z'] = 0x0;
                this['randomDire' + 'ction'] ? (_0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x11], _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempDirec' + 'tionPoint'], _0x42cf6d), _0x292368[0x11] = _0x42cf6d['seed']) : _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempDirec' + 'tionPoint']), _0x1ef2ae = _0x41b96a['_tempDirec' + 'tionPoint'], _0x54dd91['x'] = _0x1ef2ae['x'] * _0x57d768, _0x54dd91['y'] = _0x1ef2ae['y'] * _0x57d768) : (_0x54dd91['x'] = _0x57325e * _0x57d768, _0x54dd91['y'] = _0x67ca27 * _0x57d768);
                _0x54dd91['z'] = _0x1467c6;
                break;
            case 0x2:
                _0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x10], _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempPosit' + 'ionPoint'], _0x42cf6d)) : _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x41b96a['_tempPosit' + 'ionPoint']);
                _0x57325e = _0x2bbad1['x'], _0x67ca27 = _0x2bbad1['y'], _0x3b29ae['x'] = _0x57325e * this['radius'], _0x3b29ae['y'] = _0x67ca27 * this['radius'], _0x3b29ae['z'] = 0x0, _0x54dd91['x'] = _0x57325e * _0x57d768, _0x54dd91['y'] = _0x67ca27 * _0x57d768, _0x54dd91['z'] = _0x1467c6, _0x352206['normalize'](_0x54dd91, _0x54dd91);
                _0x42cf6d ? (_0x352206['scale'](_0x54dd91, this['length'] * _0x42cf6d['getFloat'](), _0x54dd91), _0x292368[0x10] = _0x42cf6d['seed']) : _0x352206['scale'](_0x54dd91, this['length'] * Math['random'](), _0x54dd91);
                _0x352206['add'](_0x3b29ae, _0x54dd91, _0x3b29ae);
                this['randomDire' + 'ction'] && (_0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x11], _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x54dd91, _0x42cf6d), _0x292368[0x11] = _0x42cf6d['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x54dd91));
                break;
            case 0x3:
                _0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x10], _0x3a4e55['_randomPoi' + 'ntUnitCirc' + 'le'](_0x41b96a['_tempPosit' + 'ionPoint'], _0x42cf6d)) : _0x3a4e55['_randomPoi' + 'ntUnitCirc' + 'le'](_0x41b96a['_tempPosit' + 'ionPoint']);
                _0x57325e = _0x2bbad1['x'], _0x67ca27 = _0x2bbad1['y'], _0x3b29ae['x'] = _0x57325e * this['radius'], _0x3b29ae['y'] = _0x67ca27 * this['radius'], _0x3b29ae['z'] = 0x0, _0x54dd91['x'] = _0x57325e * _0x57d768, _0x54dd91['y'] = _0x67ca27 * _0x57d768, _0x54dd91['z'] = _0x1467c6, _0x352206['normalize'](_0x54dd91, _0x54dd91);
                _0x42cf6d ? (_0x352206['scale'](_0x54dd91, this['length'] * _0x42cf6d['getFloat'](), _0x54dd91), _0x292368[0x10] = _0x42cf6d['seed']) : _0x352206['scale'](_0x54dd91, this['length'] * Math['random'](), _0x54dd91);
                _0x352206['add'](_0x3b29ae, _0x54dd91, _0x3b29ae);
                this['randomDire' + 'ction'] && (_0x42cf6d ? (_0x42cf6d['seed'] = _0x292368[0x11], _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x54dd91, _0x42cf6d), _0x292368[0x11] = _0x42cf6d['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x54dd91));
                break;
            default:
                throw new Error('ConeShape:' + 'emitType\x20i' + 's\x20invalid.');
            }
        }
        ['cloneTo'](_0x5ae037) {
            super['cloneTo'](_0x5ae037);
            var _0xb56bd0 = _0x5ae037;
            _0xb56bd0['angle'] = this['angle'], _0xb56bd0['radius'] = this['radius'], _0xb56bd0['length'] = this['length'], _0xb56bd0['emitType'] = this['emitType'], _0xb56bd0['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x4787ba = new _0x41b96a();
            return this['cloneTo'](_0x4787ba), _0x4787ba;
        }
    }
    _0x41b96a['_tempPosit' + 'ionPoint'] = new _0x378045(), _0x41b96a['_tempDirec' + 'tionPoint'] = new _0x378045();
    class _0x2c61db extends _0x47a1cc {
        constructor() {
            super(), this['shapeType'] = _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Hemisphere'], this['radius'] = 0x1, this['emitFromSh' + 'ell'] = ![];
        }
        ['_getShapeB' + 'oundBox'](_0x833698) {
            var _0x42f5df = _0x833698['min'];
            _0x42f5df['x'] = _0x42f5df['y'] = _0x42f5df['z'] = -this['radius'];
            var _0x2e723c = _0x833698['max'];
            _0x2e723c['x'] = _0x2e723c['y'] = this['radius'], _0x2e723c['z'] = 0x0;
        }
        ['_getSpeedB' + 'oundBox'](_0x37b1fa) {
            var _0x2b6fea = _0x37b1fa['min'];
            _0x2b6fea['x'] = _0x2b6fea['y'] = -0x1, _0x2b6fea['z'] = 0x0;
            var _0x430d76 = _0x37b1fa['max'];
            _0x430d76['x'] = _0x430d76['y'] = _0x430d76['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x5b946a, _0x13ebed, _0x491ef5 = null, _0x5d9436 = null) {
            if (_0x491ef5) {
                _0x491ef5['seed'] = _0x5d9436[0x10];
                if (this['emitFromSh' + 'ell'])
                    _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x5b946a, _0x491ef5);
                else
                    _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x5b946a, _0x491ef5);
                _0x5d9436[0x10] = _0x491ef5['seed'];
            } else {
                if (this['emitFromSh' + 'ell'])
                    _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x5b946a);
                else
                    _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x5b946a);
            }
            _0x352206['scale'](_0x5b946a, this['radius'], _0x5b946a);
            var _0x14e19e = _0x5b946a['z'];
            _0x14e19e < 0x0 && (_0x5b946a['z'] = _0x14e19e * -0x1), this['randomDire' + 'ction'] ? _0x491ef5 ? (_0x491ef5['seed'] = _0x5d9436[0x11], _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x13ebed, _0x491ef5), _0x5d9436[0x11] = _0x491ef5['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x13ebed) : _0x5b946a['cloneTo'](_0x13ebed);
        }
        ['cloneTo'](_0x164f4e) {
            super['cloneTo'](_0x164f4e);
            var _0x2a5dcf = _0x164f4e;
            _0x2a5dcf['radius'] = this['radius'], _0x2a5dcf['emitFromSh' + 'ell'] = this['emitFromSh' + 'ell'], _0x2a5dcf['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0xb995a0 = new _0x2c61db();
            return this['cloneTo'](_0xb995a0), _0xb995a0;
        }
    }
    class _0x2ba306 extends _0x47a1cc {
        constructor() {
            super(), this['shapeType'] = _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Sphere'], this['radius'] = 0x1, this['emitFromSh' + 'ell'] = ![];
        }
        ['_getShapeB' + 'oundBox'](_0x4fac91) {
            var _0x20041b = _0x4fac91['min'];
            _0x20041b['x'] = _0x20041b['y'] = _0x20041b['z'] = -this['radius'];
            var _0xfb5631 = _0x4fac91['max'];
            _0xfb5631['x'] = _0xfb5631['y'] = _0xfb5631['z'] = this['radius'];
        }
        ['_getSpeedB' + 'oundBox'](_0x2aa790) {
            var _0x468b3c = _0x2aa790['min'];
            _0x468b3c['x'] = _0x468b3c['y'] = _0x468b3c['z'] = -0x1;
            var _0x4d3783 = _0x2aa790['max'];
            _0x4d3783['x'] = _0x4d3783['y'] = _0x4d3783['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0xf37931, _0x21b51a, _0x128b39 = null, _0x301c87 = null) {
            if (_0x128b39) {
                _0x128b39['seed'] = _0x301c87[0x10];
                if (this['emitFromSh' + 'ell'])
                    _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0xf37931, _0x128b39);
                else
                    _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0xf37931, _0x128b39);
                _0x301c87[0x10] = _0x128b39['seed'];
            } else {
                if (this['emitFromSh' + 'ell'])
                    _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0xf37931);
                else
                    _0x3a4e55['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0xf37931);
            }
            _0x352206['scale'](_0xf37931, this['radius'], _0xf37931), this['randomDire' + 'ction'] ? _0x128b39 ? (_0x128b39['seed'] = _0x301c87[0x11], _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x21b51a, _0x128b39), _0x301c87[0x11] = _0x128b39['seed']) : _0x3a4e55['_randomPoi' + 'ntUnitSphe' + 're'](_0x21b51a) : _0xf37931['cloneTo'](_0x21b51a);
        }
        ['cloneTo'](_0x3f4258) {
            super['cloneTo'](_0x3f4258);
            var _0x3ce10b = _0x3f4258;
            _0x3ce10b['radius'] = this['radius'], _0x3ce10b['emitFromSh' + 'ell'] = this['emitFromSh' + 'ell'], _0x3ce10b['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x3b69c2 = new _0x2ba306();
            return this['cloneTo'](_0x3b69c2), _0x3b69c2;
        }
    }
    class _0xa7ce47 {
        constructor(_0x5f5aab) {
            this['_size'] = _0x5f5aab;
        }
        get ['size']() {
            return this['_size'];
        }
        ['cloneTo'](_0x116b5e) {
            var _0x11aaf2 = _0x116b5e;
            this['_size']['cloneTo'](_0x11aaf2['_size']), _0x11aaf2['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x5b9969;
            switch (this['_size']['type']) {
            case 0x0:
                if (this['_size']['separateAx' + 'es'])
                    _0x5b9969 = _0x239ca5['createByGr' + 'adientSepa' + 'rate'](this['_size']['gradientX']['clone'](), this['_size']['gradientY']['clone'](), this['_size']['gradientZ']['clone']());
                else
                    _0x5b9969 = _0x239ca5['createByGr' + 'adient'](this['_size']['gradient']['clone']());
                break;
            case 0x1:
                if (this['_size']['separateAx' + 'es'])
                    _0x5b9969 = _0x239ca5['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](this['_size']['constantMi' + 'nSeparate']['clone'](), this['_size']['constantMa' + 'xSeparate']['clone']());
                else
                    _0x5b9969 = _0x239ca5['createByRa' + 'ndomTwoCon' + 'stant'](this['_size']['constantMi' + 'n'], this['_size']['constantMa' + 'x']);
                break;
            case 0x2:
                if (this['_size']['separateAx' + 'es'])
                    _0x5b9969 = _0x239ca5['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_size']['gradientXM' + 'in']['clone'](), this['_size']['gradientYM' + 'in']['clone'](), this['_size']['gradientZM' + 'in']['clone'](), this['_size']['gradientXM' + 'ax']['clone'](), this['_size']['gradientYM' + 'ax']['clone'](), this['_size']['gradientZM' + 'ax']['clone']());
                else
                    _0x5b9969 = _0x239ca5['createByRa' + 'ndomTwoGra' + 'dient'](this['_size']['gradientMi' + 'n']['clone'](), this['_size']['gradientMa' + 'x']['clone']());
                break;
            }
            var _0x34517c = new _0xa7ce47(_0x5b9969);
            return _0x34517c['enable'] = this['enable'], _0x34517c;
        }
    }
    class _0x490a5b {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = 0x0, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0;
        }
        static ['createByCo' + 'nstant'](_0x448609 = 0x0) {
            var _0x21192e = new _0x490a5b();
            return _0x21192e['_type'] = 0x0, _0x21192e['_constant'] = _0x448609, _0x21192e;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x622ca1 = 0x0, _0x322a02 = 0x0) {
            var _0x1c1296 = new _0x490a5b();
            return _0x1c1296['_type'] = 0x1, _0x1c1296['_constantM' + 'in'] = _0x622ca1, _0x1c1296['_constantM' + 'ax'] = _0x322a02, _0x1c1296;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        ['cloneTo'](_0x434e8b) {
            var _0x8e4030 = _0x434e8b;
            _0x8e4030['_type'] = this['_type'], _0x8e4030['_constant'] = this['_constant'], _0x8e4030['_constantM' + 'in'] = this['_constantM' + 'in'], _0x8e4030['_constantM' + 'ax'] = this['_constantM' + 'ax'];
        }
        ['clone']() {
            var _0x532d68 = new _0x490a5b();
            return this['cloneTo'](_0x532d68), _0x532d68;
        }
    }
    class _0x1ebf6e {
        constructor(_0x4562a8, _0x29c4c7) {
            this['type'] = 0x0, this['randomRow'] = ![], this['rowIndex'] = 0x0, this['cycles'] = 0x0, this['enableUVCh' + 'annels'] = 0x0, this['enable'] = ![], this['tiles'] = new _0x378045(0x1, 0x1), this['type'] = 0x0, this['randomRow'] = !![], this['rowIndex'] = 0x0, this['cycles'] = 0x1, this['enableUVCh' + 'annels'] = 0x1, this['_frame'] = _0x4562a8, this['_startFram' + 'e'] = _0x29c4c7;
        }
        get ['frame']() {
            return this['_frame'];
        }
        get ['startFrame']() {
            return this['_startFram' + 'e'];
        }
        ['cloneTo'](_0x58beed) {
            var _0xf2cb23 = _0x58beed;
            this['tiles']['cloneTo'](_0xf2cb23['tiles']), _0xf2cb23['type'] = this['type'], _0xf2cb23['randomRow'] = this['randomRow'], _0xf2cb23['rowIndex'] = this['rowIndex'], _0xf2cb23['cycles'] = this['cycles'], _0xf2cb23['enableUVCh' + 'annels'] = this['enableUVCh' + 'annels'], _0xf2cb23['enable'] = this['enable'], this['_frame']['cloneTo'](_0xf2cb23['_frame']), this['_startFram' + 'e']['cloneTo'](_0xf2cb23['_startFram' + 'e']);
        }
        ['clone']() {
            var _0x43ae14;
            switch (this['_frame']['type']) {
            case 0x0:
                _0x43ae14 = _0x55bc91['createByCo' + 'nstant'](this['_frame']['constant']);
                break;
            case 0x1:
                _0x43ae14 = _0x55bc91['createByOv' + 'erTime'](this['_frame']['frameOverT' + 'imeData']['clone']());
                break;
            case 0x2:
                _0x43ae14 = _0x55bc91['createByRa' + 'ndomTwoCon' + 'stant'](this['_frame']['constantMi' + 'n'], this['_frame']['constantMa' + 'x']);
                break;
            case 0x3:
                _0x43ae14 = _0x55bc91['createByRa' + 'ndomTwoOve' + 'rTime'](this['_frame']['frameOverT' + 'imeDataMin']['clone'](), this['_frame']['frameOverT' + 'imeDataMax']['clone']());
                break;
            }
            var _0x590569;
            switch (this['_startFram' + 'e']['type']) {
            case 0x0:
                _0x590569 = _0x490a5b['createByCo' + 'nstant'](this['_startFram' + 'e']['constant']);
                break;
            case 0x1:
                _0x590569 = _0x490a5b['createByRa' + 'ndomTwoCon' + 'stant'](this['_startFram' + 'e']['constantMi' + 'n'], this['_startFram' + 'e']['constantMa' + 'x']);
                break;
            }
            var _0x3beb7a = new _0x1ebf6e(_0x43ae14, _0x590569);
            return this['cloneTo'](_0x3beb7a), _0x3beb7a;
        }
    }
    class _0x386b75 {
        constructor(_0x24967f) {
            this['enable'] = ![], this['space'] = 0x0, this['_velocity'] = _0x24967f;
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        ['cloneTo'](_0x2592f1) {
            var _0x5ba109 = _0x2592f1;
            this['_velocity']['cloneTo'](_0x5ba109['_velocity']), _0x5ba109['enable'] = this['enable'], _0x5ba109['space'] = this['space'];
        }
        ['clone']() {
            var _0x2315f5;
            switch (this['_velocity']['type']) {
            case 0x0:
                _0x2315f5 = _0xec4902['createByCo' + 'nstant'](this['_velocity']['constant']['clone']());
                break;
            case 0x1:
                _0x2315f5 = _0xec4902['createByGr' + 'adient'](this['_velocity']['gradientX']['clone'](), this['_velocity']['gradientY']['clone'](), this['_velocity']['gradientZ']['clone']());
                break;
            case 0x2:
                _0x2315f5 = _0xec4902['createByRa' + 'ndomTwoCon' + 'stant'](this['_velocity']['constantMi' + 'n']['clone'](), this['_velocity']['constantMa' + 'x']['clone']());
                break;
            case 0x3:
                _0x2315f5 = _0xec4902['createByRa' + 'ndomTwoGra' + 'dient'](this['_velocity']['gradientXM' + 'in']['clone'](), this['_velocity']['gradientXM' + 'ax']['clone'](), this['_velocity']['gradientYM' + 'in']['clone'](), this['_velocity']['gradientYM' + 'ax']['clone'](), this['_velocity']['gradientZM' + 'in']['clone'](), this['_velocity']['gradientZM' + 'ax']['clone']());
                break;
            }
            var _0x58140f = new _0x386b75(_0x2315f5);
            return _0x58140f['enable'] = this['enable'], _0x58140f['space'] = this['space'], _0x58140f;
        }
    }
    class _0x39d5f7 {
    }
    _0x39d5f7['WORLDPOSIT' + 'ION'] = _0x18824e['propertyNa' + 'meToID']('u_WorldPos' + 'ition'), _0x39d5f7['WORLDROTAT' + 'ION'] = _0x18824e['propertyNa' + 'meToID']('u_WorldRot' + 'ation'), _0x39d5f7['POSITIONSC' + 'ALE'] = _0x18824e['propertyNa' + 'meToID']('u_Position' + 'Scale'), _0x39d5f7['SIZESCALE'] = _0x18824e['propertyNa' + 'meToID']('u_SizeScal' + 'e'), _0x39d5f7['SCALINGMOD' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_ScalingM' + 'ode'), _0x39d5f7['GRAVITY'] = _0x18824e['propertyNa' + 'meToID']('u_Gravity'), _0x39d5f7['THREEDSTAR' + 'TROTATION'] = _0x18824e['propertyNa' + 'meToID']('u_ThreeDSt' + 'artRotatio' + 'n'), _0x39d5f7['STRETCHEDB' + 'ILLBOARDLE' + 'NGTHSCALE'] = _0x18824e['propertyNa' + 'meToID']('u_Stretche' + 'dBillboard' + 'LengthScal' + 'e'), _0x39d5f7['STRETCHEDB' + 'ILLBOARDSP' + 'EEDSCALE'] = _0x18824e['propertyNa' + 'meToID']('u_Stretche' + 'dBillboard' + 'SpeedScale'), _0x39d5f7['SIMULATION' + 'SPACE'] = _0x18824e['propertyNa' + 'meToID']('u_Simulati' + 'onSpace'), _0x39d5f7['CURRENTTIM' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_CurrentT' + 'ime'), _0x39d5f7['VOLVELOCIT' + 'YCONST'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityConst'), _0x39d5f7['VOLVELOCIT' + 'YGRADIENTX'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tX'), _0x39d5f7['VOLVELOCIT' + 'YGRADIENTY'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tY'), _0x39d5f7['VOLVELOCIT' + 'YGRADIENTZ'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tZ'), _0x39d5f7['VOLVELOCIT' + 'YCONSTMAX'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityConstMa' + 'x'), _0x39d5f7['VOLVELOCIT' + 'YGRADIENTX' + 'MAX'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxX'), _0x39d5f7['VOLVELOCIT' + 'YGRADIENTY' + 'MAX'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxY'), _0x39d5f7['VOLVELOCIT' + 'YGRADIENTZ' + 'MAX'] = _0x18824e['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxZ'), _0x39d5f7['VOLSPACETY' + 'PE'] = _0x18824e['propertyNa' + 'meToID']('u_VOLSpace' + 'Type'), _0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'] = _0x18824e['propertyNa' + 'meToID']('u_ColorOve' + 'rLifeGradi' + 'entAlphas'), _0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'] = _0x18824e['propertyNa' + 'meToID']('u_ColorOve' + 'rLifeGradi' + 'entColors'), _0x39d5f7['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'] = _0x18824e['propertyNa' + 'meToID']('u_MaxColor' + 'OverLifeGr' + 'adientAlph' + 'as'), _0x39d5f7['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'] = _0x18824e['propertyNa' + 'meToID']('u_MaxColor' + 'OverLifeGr' + 'adientColo' + 'rs'), _0x39d5f7['SOLSIZEGRA' + 'DIENT'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radient'), _0x39d5f7['SOLSIZEGRA' + 'DIENTX'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientX'), _0x39d5f7['SOLSIZEGRA' + 'DIENTY'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientY'), _0x39d5f7['SOLSizeGra' + 'dientZ'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientZ'), _0x39d5f7['SOLSizeGra' + 'dientMax'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax'), _0x39d5f7['SOLSIZEGRA' + 'DIENTXMAX'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'X'), _0x39d5f7['SOLSIZEGRA' + 'DIENTYMAX'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'Y'), _0x39d5f7['SOLSizeGra' + 'dientZMAX'] = _0x18824e['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'Z'), _0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NST'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'Const'), _0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstSepra' + 'rate'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'Gradient'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientX'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientY'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientZ'), _0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstMax'), _0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAXSEPR' + 'ARATE'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstMaxSe' + 'prarate'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTMAX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'x'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTXMAX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xX'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTYMAX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xY'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZMAX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xZ'), _0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTWMAX'] = _0x18824e['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xW'), _0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NCYCLES'] = _0x18824e['propertyNa' + 'meToID']('u_TSACycle' + 's'), _0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NSUBUVLENG' + 'TH'] = _0x18824e['propertyNa' + 'meToID']('u_TSASubUV' + 'Length'), _0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'] = _0x18824e['propertyNa' + 'meToID']('u_TSAGradi' + 'entUVs'), _0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTM' + 'AXUVS'] = _0x18824e['propertyNa' + 'meToID']('u_TSAMaxGr' + 'adientUVs');
    class _0x4d5b52 extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PARTICLESH' + 'URIKEN'), this['_color'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['renderMode'] = _0x4d5b52['RENDERMODE' + '_ALPHABLEN' + 'DED'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x4d5b52['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP'] = _0x18824e['getDefineB' + 'yName']('DIFFUSEMAP'), _0x4d5b52['SHADERDEFI' + 'NE_TINTCOL' + 'OR'] = _0x18824e['getDefineB' + 'yName']('TINTCOLOR'), _0x4d5b52['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x18824e['getDefineB' + 'yName']('ADDTIVEFOG'), _0x4d5b52['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x18824e['getDefineB' + 'yName']('TILINGOFFS' + 'ET');
        }
        get ['_TintColor']() {
            return this['color'];
        }
        set ['_TintColor'](_0x129f3f) {
            this['color'] = _0x129f3f;
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x8483d5) {
            this['_color']['x'] = _0x8483d5, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x194fc1) {
            this['_color']['y'] = _0x194fc1, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x2e337e) {
            this['_color']['z'] = _0x2e337e, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x44c872) {
            this['_color']['w'] = _0x44c872, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'T']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
        }
        set ['_MainTex_S' + 'T'](_0x21eeaf) {
            var _0x3c5d3d = this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
            _0x3c5d3d['setValue'](_0x21eeaf['x'], _0x21eeaf['y'], _0x21eeaf['z'], _0x21eeaf['w']), this['tilingOffs' + 'et'] = _0x3c5d3d;
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x4ae726) {
            var _0x441185 = this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
            _0x441185['x'] = _0x4ae726, this['tilingOffs' + 'et'] = _0x441185;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x3a8d64) {
            var _0x22ace1 = this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
            _0x22ace1['y'] = _0x3a8d64, this['tilingOffs' + 'et'] = _0x22ace1;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x29eb16) {
            var _0x4cd835 = this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
            _0x4cd835['z'] = _0x29eb16, this['tilingOffs' + 'et'] = _0x4cd835;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x5059ce) {
            var _0x1b70ec = this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
            _0x1b70ec['w'] = _0x5059ce, this['tilingOffs' + 'et'] = _0x1b70ec;
        }
        set ['renderMode'](_0x2b437c) {
            switch (_0x2b437c) {
            case _0x4d5b52['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_NONE'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['alphaTest'] = ![], this['_shaderVal' + 'ues']['addDefine'](_0x4d5b52['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x4d5b52['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_NONE'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['alphaTest'] = ![], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4d5b52['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('ShurikenPa' + 'rticleMate' + 'rial\x20:\x20ren' + 'derMode\x20va' + 'lue\x20error.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x3c02b6) {
            this['_TintColor' + 'R'] = _0x3c02b6;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x18df40) {
            this['_TintColor' + 'G'] = _0x18df40;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x1605c4) {
            this['_TintColor' + 'B'] = _0x1605c4;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x3f6eaf) {
            this['_TintColor' + 'A'] = _0x3f6eaf;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TINTCOLOR']);
        }
        set ['color'](_0xbdcf07) {
            if (_0xbdcf07)
                this['_shaderVal' + 'ues']['addDefine'](_0x4d5b52['SHADERDEFI' + 'NE_TINTCOL' + 'OR']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4d5b52['SHADERDEFI' + 'NE_TINTCOL' + 'OR']);
            this['_shaderVal' + 'ues']['setVector'](_0x4d5b52['TINTCOLOR'], _0xbdcf07);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x4b2f56) {
            this['_MainTex_S' + 'TX'] = _0x4b2f56;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x66d7d9) {
            this['_MainTex_S' + 'TY'] = _0x66d7d9;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x513390) {
            this['_MainTex_S' + 'TZ'] = _0x513390;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0xc89eda) {
            this['_MainTex_S' + 'TW'] = _0xc89eda;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4d5b52['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x423593) {
            if (_0x423593) {
                if (_0x423593['x'] != 0x1 || _0x423593['y'] != 0x1 || _0x423593['z'] != 0x0 || _0x423593['w'] != 0x0)
                    this['_shaderVal' + 'ues']['addDefine'](_0x4d5b52['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4d5b52['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4d5b52['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            this['_shaderVal' + 'ues']['setVector'](_0x4d5b52['TILINGOFFS' + 'ET'], _0x423593);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4d5b52['DIFFUSETEX' + 'TURE']);
        }
        set ['texture'](_0x3195ae) {
            if (_0x3195ae)
                this['_shaderVal' + 'ues']['addDefine'](_0x4d5b52['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4d5b52['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']);
            this['_shaderVal' + 'ues']['setTexture'](_0x4d5b52['DIFFUSETEX' + 'TURE'], _0x3195ae);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x4d5b52['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x18686e) {
            this['_shaderVal' + 'ues']['setBool'](_0x4d5b52['DEPTH_WRIT' + 'E'], _0x18686e);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4d5b52['CULL']);
        }
        set ['cull'](_0x5b54b2) {
            this['_shaderVal' + 'ues']['setInt'](_0x4d5b52['CULL'], _0x5b54b2);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4d5b52['BLEND']);
        }
        set ['blend'](_0x43b7fa) {
            this['_shaderVal' + 'ues']['setInt'](_0x4d5b52['BLEND'], _0x43b7fa);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4d5b52['BLEND_SRC']);
        }
        set ['blendSrc'](_0x3f5629) {
            this['_shaderVal' + 'ues']['setInt'](_0x4d5b52['BLEND_SRC'], _0x3f5629);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4d5b52['BLEND_DST']);
        }
        set ['blendDst'](_0x124c73) {
            this['_shaderVal' + 'ues']['setInt'](_0x4d5b52['BLEND_DST'], _0x124c73);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x4d5b52['DEPTH_TEST']);
        }
        set ['depthTest'](_0x21bea9) {
            this['_shaderVal' + 'ues']['setInt'](_0x4d5b52['DEPTH_TEST'], _0x21bea9);
        }
        ['clone']() {
            var _0x38fb20 = new _0x4d5b52();
            return this['cloneTo'](_0x38fb20), _0x38fb20;
        }
    }
    _0x4d5b52['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x0, _0x4d5b52['RENDERMODE' + '_ADDTIVE'] = 0x1, _0x4d5b52['DIFFUSETEX' + 'TURE'] = _0x18824e['propertyNa' + 'meToID']('u_texture'), _0x4d5b52['TINTCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_Tintcolo' + 'r'), _0x4d5b52['TILINGOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x4d5b52['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x4d5b52['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x4d5b52['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x4d5b52['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x4d5b52['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x4d5b52['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x20ee3e extends _0x590787 {
        constructor(_0x2312c7) {
            super(_0x2312c7), this['_finalGrav' + 'ity'] = new _0x352206(), this['_tempRotat' + 'ionMatrix'] = new _0x4c2288(), this['_mesh'] = null, this['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = 0x0, this['stretchedB' + 'illboardSp' + 'eedScale'] = 0x0, this['stretchedB' + 'illboardLe' + 'ngthScale'] = 0x2, this['_defaultBo' + 'undBox'] = new _0x2bd0ec(new _0x352206(), new _0x352206()), this['renderMode'] = 0x0, this['_supportOc' + 'tree'] = ![];
        }
        get ['renderMode']() {
            return this['_renderMod' + 'e'];
        }
        set ['renderMode'](_0xf236cc) {
            if (this['_renderMod' + 'e'] !== _0xf236cc) {
                var _0x253967 = this['_shaderVal' + 'ues'];
                switch (this['_renderMod' + 'e']) {
                case 0x0:
                    _0x253967['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD']);
                    break;
                case 0x1:
                    _0x253967['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD']);
                    break;
                case 0x2:
                    _0x253967['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD']);
                    break;
                case 0x3:
                    _0x253967['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D']);
                    break;
                case 0x4:
                    _0x253967['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH']);
                    break;
                }
                this['_renderMod' + 'e'] = _0xf236cc;
                switch (_0xf236cc) {
                case 0x0:
                    _0x253967['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD']);
                    break;
                case 0x1:
                    _0x253967['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD']);
                    break;
                case 0x2:
                    _0x253967['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD']);
                    break;
                case 0x3:
                    _0x253967['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D']);
                    break;
                case 0x4:
                    _0x253967['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH']);
                    break;
                default:
                    throw new Error('ShurikenPa' + 'rticleRend' + 'er:\x20unknow' + 'n\x20renderMo' + 'de\x20Value.');
                }
                var _0x1dfd79 = this['_owner']['particleSy' + 'stem'];
                _0x1dfd79 && _0x1dfd79['_initBuffe' + 'rDatas']();
            }
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x480cdc) {
            this['_mesh'] !== _0x480cdc && (this['_mesh'] && this['_mesh']['_removeRef' + 'erence'](), this['_mesh'] = _0x480cdc, _0x480cdc && _0x480cdc['_addRefere' + 'nce'](), this['_owner']['particleSy' + 'stem']['_initBuffe' + 'rDatas']());
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x27c4a2 = this['_owner']['particleSy' + 'stem'], _0x4868df;
            if (_0x27c4a2['_useCustom' + 'Bounds'])
                _0x4868df = _0x27c4a2['customBoun' + 'ds'], _0x4868df['_tranform'](this['_owner']['transform']['worldMatri' + 'x'], this['_bounds']);
            else {
                if (_0x27c4a2['_simulatio' + 'nSupported']()) {
                    _0x27c4a2['_generateB' + 'ounds'](), _0x4868df = _0x27c4a2['_bounds'], _0x4868df['_tranform'](this['_owner']['transform']['worldMatri' + 'x'], this['_bounds']);
                    if (_0x27c4a2['gravityMod' + 'ifier'] != 0x0) {
                        var _0x1b2ac9 = this['_bounds']['getMax'](), _0x4af0a2 = this['_bounds']['getMin'](), _0xf48f31 = _0x27c4a2['_gravityOf' + 'fset'];
                        _0x1b2ac9['y'] -= _0xf48f31['x'], _0x4af0a2['y'] -= _0xf48f31['y'], this['_bounds']['setMax'](_0x1b2ac9), this['_bounds']['setMin'](_0x4af0a2);
                    }
                } else {
                    var _0x4af0a2 = this['_bounds']['getMin']();
                    _0x4af0a2['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), this['_bounds']['setMin'](_0x4af0a2);
                    var _0x1b2ac9 = this['_bounds']['getMax']();
                    _0x1b2ac9['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), this['_bounds']['setMax'](_0x1b2ac9);
                }
            }
        }
        ['_needRende' + 'r'](_0xbcac26, _0x3f5775) {
            if (_0xbcac26) {
                if (_0xbcac26['intersects'](this['bounds']['_getBoundB' + 'ox']())) {
                    if (this['_owner']['particleSy' + 'stem']['isAlive'])
                        return !![];
                    else
                        return ![];
                } else
                    return ![];
            } else
                return !![];
        }
        ['_renderUpd' + 'ate'](_0x10000e, _0x472809) {
            var _0x581f27 = this['_owner']['particleSy' + 'stem'], _0x47692f = this['_shaderVal' + 'ues'], _0xeab787 = this['_owner']['transform'];
            switch (_0x581f27['simulation' + 'Space']) {
            case 0x0:
                break;
            case 0x1:
                _0x47692f['setVector3'](_0x39d5f7['WORLDPOSIT' + 'ION'], _0xeab787['position']), _0x47692f['setQuatern' + 'ion'](_0x39d5f7['WORLDROTAT' + 'ION'], _0xeab787['rotation']);
                break;
            default:
                throw new Error('ShurikenPa' + 'rticleMate' + 'rial:\x20Simu' + 'lationSpac' + 'e\x20value\x20is' + '\x20invalid.');
            }
            switch (_0x581f27['scaleMode']) {
            case 0x0:
                var _0x3e50af = _0xeab787['getWorldLo' + 'ssyScale']();
                _0x47692f['setVector3'](_0x39d5f7['POSITIONSC' + 'ALE'], _0x3e50af), _0x47692f['setVector3'](_0x39d5f7['SIZESCALE'], _0x3e50af);
                break;
            case 0x1:
                var _0x41548f = _0xeab787['localScale'];
                _0x47692f['setVector3'](_0x39d5f7['POSITIONSC' + 'ALE'], _0x41548f), _0x47692f['setVector3'](_0x39d5f7['SIZESCALE'], _0x41548f);
                break;
            case 0x2:
                _0x47692f['setVector3'](_0x39d5f7['POSITIONSC' + 'ALE'], _0xeab787['getWorldLo' + 'ssyScale']()), _0x47692f['setVector3'](_0x39d5f7['SIZESCALE'], _0x352206['_ONE']);
                break;
            }
            _0x352206['scale'](_0x3b8f98['gravity'], _0x581f27['gravityMod' + 'ifier'], this['_finalGrav' + 'ity']), _0x47692f['setVector3'](_0x39d5f7['GRAVITY'], this['_finalGrav' + 'ity']), _0x47692f['setInt'](_0x39d5f7['SIMULATION' + 'SPACE'], _0x581f27['simulation' + 'Space']), _0x47692f['setBool'](_0x39d5f7['THREEDSTAR' + 'TROTATION'], _0x581f27['threeDStar' + 'tRotation']), _0x47692f['setInt'](_0x39d5f7['SCALINGMOD' + 'E'], _0x581f27['scaleMode']), _0x47692f['setNumber'](_0x39d5f7['STRETCHEDB' + 'ILLBOARDLE' + 'NGTHSCALE'], this['stretchedB' + 'illboardLe' + 'ngthScale']), _0x47692f['setNumber'](_0x39d5f7['STRETCHEDB' + 'ILLBOARDSP' + 'EEDSCALE'], this['stretchedB' + 'illboardSp' + 'eedScale']), _0x47692f['setNumber'](_0x39d5f7['CURRENTTIM' + 'E'], _0x581f27['_currentTi' + 'me']);
        }
        get ['bounds']() {
            return this['_boundsCha' + 'nge'] && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = ![]), this['_bounds'];
        }
        ['_destroy']() {
            super['_destroy'](), this['_mesh'] && (this['_mesh']['_removeRef' + 'erence'](), this['_mesh'] = null);
        }
    }
    class _0x15fc4b {
        constructor() {
        }
    }
    _0x15fc4b['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0'] = 0x5, _0x15fc4b['PARTICLE_P' + 'OSITION0'] = 0x1, _0x15fc4b['PARTICLE_C' + 'OLOR0'] = 0x2, _0x15fc4b['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0'] = 0x3, _0x15fc4b['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME'] = 0x4, _0x15fc4b['PARTICLE_D' + 'IRECTIONTI' + 'ME'] = 0x0, _0x15fc4b['PARTICLE_S' + 'TARTCOLOR0'] = 0x6, _0x15fc4b['PARTICLE_E' + 'NDCOLOR0'] = 0x7, _0x15fc4b['PARTICLE_S' + 'TARTSIZE'] = 0x8, _0x15fc4b['PARTICLE_S' + 'TARTROTATI' + 'ON'] = 0x9, _0x15fc4b['PARTICLE_S' + 'TARTSPEED'] = 0xa, _0x15fc4b['PARTICLE_R' + 'ANDOM0'] = 0xb, _0x15fc4b['PARTICLE_R' + 'ANDOM1'] = 0xc, _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N'] = 0xd, _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'] = 0xe;
    class _0x9492db extends _0x15fc4b {
        constructor(_0x1316fd, _0x904185, _0x19e2af, _0x5189d0, _0x368874, _0x32b758, _0x1a4499, _0x30cf5d, _0x2cd01e, _0x2b2fe9, _0x448395, _0x767b8c, _0x2e8e25, _0x2cf160) {
            super(), this['_cornerTex' + 'tureCoordi' + 'nate'] = _0x1316fd, this['_positionS' + 'tartLifeTi' + 'me'] = _0x904185, this['_velocity'] = _0x19e2af, this['_startColo' + 'r'] = _0x5189d0, this['_startSize'] = _0x368874, this['_startRota' + 'tion0'] = _0x32b758, this['_startRota' + 'tion1'] = _0x1a4499, this['_startRota' + 'tion2'] = _0x30cf5d, this['_startLife' + 'Time'] = _0x2cd01e, this['_time'] = _0x2b2fe9, this['_startSpee' + 'd'] = _0x448395, this['_randoms0'] = this['random0'], this['_randoms1'] = this['random1'], this['_simulatio' + 'nWorldPost' + 'ion'] = _0x2cf160;
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x9492db['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x9492db['_vertexDec' + 'laration'] = new _0x19d0a5(0x98, [
                new _0x549a90(0x0, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0']),
                new _0x549a90(0x10, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME']),
                new _0x549a90(0x20, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_D' + 'IRECTIONTI' + 'ME']),
                new _0x549a90(0x30, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_S' + 'TARTCOLOR0']),
                new _0x549a90(0x40, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_S' + 'TARTSIZE']),
                new _0x549a90(0x4c, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_S' + 'TARTROTATI' + 'ON']),
                new _0x549a90(0x58, _0x5cc56b['Single'], _0x15fc4b['PARTICLE_S' + 'TARTSPEED']),
                new _0x549a90(0x5c, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_R' + 'ANDOM0']),
                new _0x549a90(0x6c, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_R' + 'ANDOM1']),
                new _0x549a90(0x7c, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N']),
                new _0x549a90(0x88, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'])
            ]);
        }
        get ['cornerText' + 'ureCoordin' + 'ate']() {
            return this['_cornerTex' + 'tureCoordi' + 'nate'];
        }
        get ['positionSt' + 'artLifeTim' + 'e']() {
            return this['_positionS' + 'tartLifeTi' + 'me'];
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        get ['startColor']() {
            return this['_startColo' + 'r'];
        }
        get ['startSize']() {
            return this['_startSize'];
        }
        get ['startRotat' + 'ion0']() {
            return this['_startRota' + 'tion0'];
        }
        get ['startRotat' + 'ion1']() {
            return this['_startRota' + 'tion1'];
        }
        get ['startRotat' + 'ion2']() {
            return this['_startRota' + 'tion2'];
        }
        get ['startLifeT' + 'ime']() {
            return this['_startLife' + 'Time'];
        }
        get ['time']() {
            return this['_time'];
        }
        get ['startSpeed']() {
            return this['_startSpee' + 'd'];
        }
        get ['random0']() {
            return this['_randoms0'];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulation' + 'WorldPosti' + 'on']() {
            return this['_simulatio' + 'nWorldPost' + 'ion'];
        }
    }
    class _0xcd1367 extends _0x15fc4b {
        constructor(_0x5aa810, _0x225524, _0x547442, _0xbb1595, _0x20f83c, _0x22b763, _0x2ca907, _0x5711d2, _0x474161, _0x9ced44, _0x2bb5e5, _0x11858a, _0x563097, _0x4f09df) {
            super(), this['_cornerTex' + 'tureCoordi' + 'nate'] = _0x5aa810, this['_positionS' + 'tartLifeTi' + 'me'] = _0x225524, this['_velocity'] = _0x547442, this['_startColo' + 'r'] = _0xbb1595, this['_startSize'] = _0x20f83c, this['_startRota' + 'tion0'] = _0x22b763, this['_startRota' + 'tion1'] = _0x2ca907, this['_startRota' + 'tion2'] = _0x5711d2, this['_startLife' + 'Time'] = _0x474161, this['_time'] = _0x9ced44, this['_startSpee' + 'd'] = _0x2bb5e5, this['_randoms0'] = this['random0'], this['_randoms1'] = this['random1'], this['_simulatio' + 'nWorldPost' + 'ion'] = _0x4f09df;
        }
        static ['__init__']() {
            _0xcd1367['_vertexDec' + 'laration'] = new _0x19d0a5(0xac, [
                new _0x549a90(0x0, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_P' + 'OSITION0']),
                new _0x549a90(0xc, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_C' + 'OLOR0']),
                new _0x549a90(0x1c, _0x5cc56b['Vector2'], _0x15fc4b['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0']),
                new _0x549a90(0x24, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME']),
                new _0x549a90(0x34, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_D' + 'IRECTIONTI' + 'ME']),
                new _0x549a90(0x44, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_S' + 'TARTCOLOR0']),
                new _0x549a90(0x54, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_S' + 'TARTSIZE']),
                new _0x549a90(0x60, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_S' + 'TARTROTATI' + 'ON']),
                new _0x549a90(0x6c, _0x5cc56b['Single'], _0x15fc4b['PARTICLE_S' + 'TARTSPEED']),
                new _0x549a90(0x70, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_R' + 'ANDOM0']),
                new _0x549a90(0x80, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_R' + 'ANDOM1']),
                new _0x549a90(0x90, _0x5cc56b['Vector3'], _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N']),
                new _0x549a90(0x9c, _0x5cc56b['Vector4'], _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'])
            ]);
        }
        static get ['vertexDecl' + 'aration']() {
            return _0xcd1367['_vertexDec' + 'laration'];
        }
        get ['cornerText' + 'ureCoordin' + 'ate']() {
            return this['_cornerTex' + 'tureCoordi' + 'nate'];
        }
        get ['position']() {
            return this['_positionS' + 'tartLifeTi' + 'me'];
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        get ['startColor']() {
            return this['_startColo' + 'r'];
        }
        get ['startSize']() {
            return this['_startSize'];
        }
        get ['startRotat' + 'ion0']() {
            return this['_startRota' + 'tion0'];
        }
        get ['startRotat' + 'ion1']() {
            return this['_startRota' + 'tion1'];
        }
        get ['startRotat' + 'ion2']() {
            return this['_startRota' + 'tion2'];
        }
        get ['startLifeT' + 'ime']() {
            return this['_startLife' + 'Time'];
        }
        get ['time']() {
            return this['_time'];
        }
        get ['startSpeed']() {
            return this['_startSpee' + 'd'];
        }
        get ['random0']() {
            return this['_randoms0'];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulation' + 'WorldPosti' + 'on']() {
            return this['_simulatio' + 'nWorldPost' + 'ion'];
        }
    }
    class _0x508ab7 {
        constructor(_0x11bc27) {
            this['_temp'] = new Uint32Array(0x1), this['seeds'] = new Uint32Array(0x4), this['seeds'][0x0] = _0x11bc27, this['seeds'][0x1] = this['seeds'][0x0] * 0x6c078965 + 0x1, this['seeds'][0x2] = this['seeds'][0x1] * 0x6c078965 + 0x1, this['seeds'][0x3] = this['seeds'][0x2] * 0x6c078965 + 0x1;
        }
        static ['getFloatFr' + 'omInt'](_0x262f3d) {
            return (_0x262f3d & 0x7fffff) * (0x1 / 0x7fffff);
        }
        static ['getByteFro' + 'mInt'](_0x56ef52) {
            return (_0x56ef52 & 0x7fffff) >>> 0xf;
        }
        get ['seed']() {
            return this['seeds'][0x0];
        }
        set ['seed'](_0xa3c8e5) {
            this['seeds'][0x0] = _0xa3c8e5, this['seeds'][0x1] = this['seeds'][0x0] * 0x6c078965 + 0x1, this['seeds'][0x2] = this['seeds'][0x1] * 0x6c078965 + 0x1, this['seeds'][0x3] = this['seeds'][0x2] * 0x6c078965 + 0x1;
        }
        ['getUint']() {
            return this['_temp'][0x0] = this['seeds'][0x0] ^ this['seeds'][0x0] << 0xb, this['seeds'][0x0] = this['seeds'][0x1], this['seeds'][0x1] = this['seeds'][0x2], this['seeds'][0x2] = this['seeds'][0x3], this['seeds'][0x3] = this['seeds'][0x3] ^ this['seeds'][0x3] >>> 0x13 ^ (this['_temp'][0x0] ^ this['_temp'][0x0] >>> 0x8), this['seeds'][0x3];
        }
        ['getFloat']() {
            return this['getUint'](), (this['seeds'][0x3] & 0x7fffff) * (0x1 / 0x7fffff);
        }
        ['getSignedF' + 'loat']() {
            return this['getFloat']() * 0x2 - 0x1;
        }
    }
    class _0x2cd287 {
        constructor() {
            this['_emissionR' + 'ate'] = 0xa, this['_destroyed'] = ![], this['_bursts'] = [];
        }
        set ['emissionRa' + 'te'](_0x54aced) {
            if (_0x54aced < 0x0)
                throw new Error('ParticleBa' + 'seShape:em' + 'issionRate' + '\x20value\x20mus' + 't\x20large\x20or' + '\x20equal\x20tha' + 'n\x200.');
            this['_emissionR' + 'ate'] = _0x54aced;
        }
        get ['emissionRa' + 'te']() {
            return this['_emissionR' + 'ate'];
        }
        get ['destroyed']() {
            return this['_destroyed'];
        }
        ['destroy']() {
            this['_bursts'] = null, this['_destroyed'] = !![];
        }
        ['getBurstsC' + 'ount']() {
            return this['_bursts']['length'];
        }
        ['getBurstBy' + 'Index'](_0x2d107e) {
            return this['_bursts'][_0x2d107e];
        }
        ['addBurst'](_0x1a339f) {
            var _0x42cb8b = this['_bursts']['length'];
            if (_0x42cb8b > 0x0)
                for (var _0x363545 = 0x0; _0x363545 < _0x42cb8b; _0x363545++) {
                    if (this['_bursts'][_0x363545]['time'] > _0x1a339f['time'])
                        this['_bursts']['splice'](_0x363545, 0x0, _0x1a339f);
                }
            this['_bursts']['push'](_0x1a339f);
        }
        ['removeBurs' + 't'](_0x52c956) {
            var _0x345c6a = this['_bursts']['indexOf'](_0x52c956);
            _0x345c6a !== -0x1 && this['_bursts']['splice'](_0x345c6a, 0x1);
        }
        ['removeBurs' + 'tByIndex'](_0x2d6c8d) {
            this['_bursts']['splice'](_0x2d6c8d, 0x1);
        }
        ['clearBurst']() {
            this['_bursts']['length'] = 0x0;
        }
        ['cloneTo'](_0x36e470) {
            var _0x1efe05 = _0x36e470, _0x39b0f9 = _0x1efe05['_bursts'];
            _0x39b0f9['length'] = this['_bursts']['length'];
            for (var _0x32e391 = 0x0, _0xbd0cd2 = this['_bursts']['length']; _0x32e391 < _0xbd0cd2; _0x32e391++) {
                var _0x4d5670 = _0x39b0f9[_0x32e391];
                if (_0x4d5670)
                    this['_bursts'][_0x32e391]['cloneTo'](_0x4d5670);
                else
                    _0x39b0f9[_0x32e391] = this['_bursts'][_0x32e391]['clone']();
            }
            _0x1efe05['_emissionR' + 'ate'] = this['_emissionR' + 'ate'], _0x1efe05['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x1d4408 = new _0x2cd287();
            return this['cloneTo'](_0x1d4408), _0x1d4408;
        }
    }
    class _0x56c6b5 {
        constructor() {
        }
        static ['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x20e391, _0xf8dba4) {
            for (var _0x33087c = 0x1, _0x29a466 = _0x20e391['gradientCo' + 'unt']; _0x33087c < _0x29a466; _0x33087c++) {
                var _0x3423bc = _0x20e391['getKeyByIn' + 'dex'](_0x33087c);
                if (_0x3423bc >= _0xf8dba4) {
                    var _0x280eb2 = _0x20e391['getKeyByIn' + 'dex'](_0x33087c - 0x1), _0x18745d = (_0xf8dba4 - _0x280eb2) / (_0x3423bc - _0x280eb2);
                    return _0x442335['MathUtil']['lerp'](_0x20e391['getValueBy' + 'Index'](_0x33087c - 0x1), _0x20e391['getValueBy' + 'Index'](_0x33087c), _0x18745d);
                }
            }
            throw new Error('ShurikenPa' + 'rticleData' + ':\x20can\x27t\x20ge' + 't\x20value\x20fo' + 'am\x20startLi' + 'feTimeGrad' + 'ient.');
        }
        static ['_randomInv' + 'ertRoation' + 'Array'](_0x5795ac, _0x5562ac, _0x2cd958, _0x4059e1, _0x33d6c8) {
            var _0x238d2c;
            _0x4059e1 ? (_0x4059e1['seed'] = _0x33d6c8[0x6], _0x238d2c = _0x4059e1['getFloat'](), _0x33d6c8[0x6] = _0x4059e1['seed']) : _0x238d2c = Math['random'](), _0x238d2c < _0x2cd958 ? (_0x5562ac['x'] = -_0x5795ac['x'], _0x5562ac['y'] = -_0x5795ac['y'], _0x5562ac['z'] = -_0x5795ac['z']) : (_0x5562ac['x'] = _0x5795ac['x'], _0x5562ac['y'] = _0x5795ac['y'], _0x5562ac['z'] = _0x5795ac['z']);
        }
        static ['_randomInv' + 'ertRoation'](_0x1d2f64, _0x2bb933, _0x3d4ce5, _0x240a98) {
            var _0x2fa475;
            _0x3d4ce5 ? (_0x3d4ce5['seed'] = _0x240a98[0x6], _0x2fa475 = _0x3d4ce5['getFloat'](), _0x240a98[0x6] = _0x3d4ce5['seed']) : _0x2fa475 = Math['random']();
            if (_0x2fa475 < _0x2bb933)
                _0x1d2f64 = -_0x1d2f64;
            return _0x1d2f64;
        }
        static ['create'](_0x18c014, _0x443b87, _0x4da0b1) {
            var _0xdab4b1 = _0x18c014['autoRandom' + 'Seed'], _0xfa8ec8 = _0x18c014['_rand'], _0x2a11d2 = _0x18c014['_randomSee' + 'ds'];
            switch (_0x18c014['startColor' + 'Type']) {
            case 0x0:
                var _0x58571d = _0x18c014['startColor' + 'Constant'];
                _0x56c6b5['startColor']['x'] = _0x58571d['x'], _0x56c6b5['startColor']['y'] = _0x58571d['y'], _0x56c6b5['startColor']['z'] = _0x58571d['z'], _0x56c6b5['startColor']['w'] = _0x58571d['w'];
                break;
            case 0x2:
                _0xdab4b1 ? _0x18425e['lerp'](_0x18c014['startColor' + 'ConstantMi' + 'n'], _0x18c014['startColor' + 'ConstantMa' + 'x'], Math['random'](), _0x56c6b5['startColor']) : (_0xfa8ec8['seed'] = _0x2a11d2[0x3], _0x18425e['lerp'](_0x18c014['startColor' + 'ConstantMi' + 'n'], _0x18c014['startColor' + 'ConstantMa' + 'x'], _0xfa8ec8['getFloat'](), _0x56c6b5['startColor']), _0x2a11d2[0x3] = _0xfa8ec8['seed']);
                break;
            }
            var _0x3fc017 = _0x18c014['colorOverL' + 'ifetime'];
            if (_0x3fc017 && _0x3fc017['enable']) {
                var _0x172a3e = _0x3fc017['color'];
                switch (_0x172a3e['type']) {
                case 0x0:
                    _0x56c6b5['startColor']['x'] = _0x56c6b5['startColor']['x'] * _0x172a3e['constant']['x'], _0x56c6b5['startColor']['y'] = _0x56c6b5['startColor']['y'] * _0x172a3e['constant']['y'], _0x56c6b5['startColor']['z'] = _0x56c6b5['startColor']['z'] * _0x172a3e['constant']['z'], _0x56c6b5['startColor']['w'] = _0x56c6b5['startColor']['w'] * _0x172a3e['constant']['w'];
                    break;
                case 0x2:
                    var _0x3537c5;
                    _0xdab4b1 ? _0x3537c5 = Math['random']() : (_0xfa8ec8['seed'] = _0x2a11d2[0xa], _0x3537c5 = _0xfa8ec8['getFloat'](), _0x2a11d2[0xa] = _0xfa8ec8['seed']);
                    var _0x5129b4 = _0x172a3e['constantMi' + 'n'], _0x33da98 = _0x172a3e['constantMa' + 'x'];
                    _0x56c6b5['startColor']['x'] = _0x56c6b5['startColor']['x'] * _0x442335['MathUtil']['lerp'](_0x5129b4['x'], _0x33da98['x'], _0x3537c5), _0x56c6b5['startColor']['y'] = _0x56c6b5['startColor']['y'] * _0x442335['MathUtil']['lerp'](_0x5129b4['y'], _0x33da98['y'], _0x3537c5), _0x56c6b5['startColor']['z'] = _0x56c6b5['startColor']['z'] * _0x442335['MathUtil']['lerp'](_0x5129b4['z'], _0x33da98['z'], _0x3537c5), _0x56c6b5['startColor']['w'] = _0x56c6b5['startColor']['w'] * _0x442335['MathUtil']['lerp'](_0x5129b4['w'], _0x33da98['w'], _0x3537c5);
                    break;
                }
            }
            var _0x5ac3f3 = _0x56c6b5['startSize'];
            switch (_0x18c014['startSizeT' + 'ype']) {
            case 0x0:
                if (_0x18c014['threeDStar' + 'tSize']) {
                    var _0x267bcd = _0x18c014['startSizeC' + 'onstantSep' + 'arate'];
                    _0x5ac3f3[0x0] = _0x267bcd['x'], _0x5ac3f3[0x1] = _0x267bcd['y'], _0x5ac3f3[0x2] = _0x267bcd['z'];
                } else
                    _0x5ac3f3[0x0] = _0x5ac3f3[0x1] = _0x5ac3f3[0x2] = _0x18c014['startSizeC' + 'onstant'];
                break;
            case 0x2:
                if (_0x18c014['threeDStar' + 'tSize']) {
                    var _0x592b85 = _0x18c014['startSizeC' + 'onstantMin' + 'Separate'], _0x6dc740 = _0x18c014['startSizeC' + 'onstantMax' + 'Separate'];
                    _0xdab4b1 ? (_0x5ac3f3[0x0] = _0x442335['MathUtil']['lerp'](_0x592b85['x'], _0x6dc740['x'], Math['random']()), _0x5ac3f3[0x1] = _0x442335['MathUtil']['lerp'](_0x592b85['y'], _0x6dc740['y'], Math['random']()), _0x5ac3f3[0x2] = _0x442335['MathUtil']['lerp'](_0x592b85['z'], _0x6dc740['z'], Math['random']())) : (_0xfa8ec8['seed'] = _0x2a11d2[0x4], _0x5ac3f3[0x0] = _0x442335['MathUtil']['lerp'](_0x592b85['x'], _0x6dc740['x'], _0xfa8ec8['getFloat']()), _0x5ac3f3[0x1] = _0x442335['MathUtil']['lerp'](_0x592b85['y'], _0x6dc740['y'], _0xfa8ec8['getFloat']()), _0x5ac3f3[0x2] = _0x442335['MathUtil']['lerp'](_0x592b85['z'], _0x6dc740['z'], _0xfa8ec8['getFloat']()), _0x2a11d2[0x4] = _0xfa8ec8['seed']);
                } else
                    _0xdab4b1 ? _0x5ac3f3[0x0] = _0x5ac3f3[0x1] = _0x5ac3f3[0x2] = _0x442335['MathUtil']['lerp'](_0x18c014['startSizeC' + 'onstantMin'], _0x18c014['startSizeC' + 'onstantMax'], Math['random']()) : (_0xfa8ec8['seed'] = _0x2a11d2[0x4], _0x5ac3f3[0x0] = _0x5ac3f3[0x1] = _0x5ac3f3[0x2] = _0x442335['MathUtil']['lerp'](_0x18c014['startSizeC' + 'onstantMin'], _0x18c014['startSizeC' + 'onstantMax'], _0xfa8ec8['getFloat']()), _0x2a11d2[0x4] = _0xfa8ec8['seed']);
                break;
            }
            var _0x1a1822 = _0x18c014['sizeOverLi' + 'fetime'];
            if (_0x1a1822 && _0x1a1822['enable'] && _0x1a1822['size']['type'] === 0x1) {
                var _0x5870b9 = _0x1a1822['size'];
                if (_0x5870b9['separateAx' + 'es'])
                    _0xdab4b1 ? (_0x5ac3f3[0x0] = _0x5ac3f3[0x0] * _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'nSeparate']['x'], _0x5870b9['constantMa' + 'xSeparate']['x'], Math['random']()), _0x5ac3f3[0x1] = _0x5ac3f3[0x1] * _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'nSeparate']['y'], _0x5870b9['constantMa' + 'xSeparate']['y'], Math['random']()), _0x5ac3f3[0x2] = _0x5ac3f3[0x2] * _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'nSeparate']['z'], _0x5870b9['constantMa' + 'xSeparate']['z'], Math['random']())) : (_0xfa8ec8['seed'] = _0x2a11d2[0xb], _0x5ac3f3[0x0] = _0x5ac3f3[0x0] * _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'nSeparate']['x'], _0x5870b9['constantMa' + 'xSeparate']['x'], _0xfa8ec8['getFloat']()), _0x5ac3f3[0x1] = _0x5ac3f3[0x1] * _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'nSeparate']['y'], _0x5870b9['constantMa' + 'xSeparate']['y'], _0xfa8ec8['getFloat']()), _0x5ac3f3[0x2] = _0x5ac3f3[0x2] * _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'nSeparate']['z'], _0x5870b9['constantMa' + 'xSeparate']['z'], _0xfa8ec8['getFloat']()), _0x2a11d2[0xb] = _0xfa8ec8['seed']);
                else {
                    var _0x41e277;
                    _0xdab4b1 ? _0x41e277 = _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'n'], _0x5870b9['constantMa' + 'x'], Math['random']()) : (_0xfa8ec8['seed'] = _0x2a11d2[0xb], _0x41e277 = _0x442335['MathUtil']['lerp'](_0x5870b9['constantMi' + 'n'], _0x5870b9['constantMa' + 'x'], _0xfa8ec8['getFloat']()), _0x2a11d2[0xb] = _0xfa8ec8['seed']), _0x5ac3f3[0x0] = _0x5ac3f3[0x0] * _0x41e277, _0x5ac3f3[0x1] = _0x5ac3f3[0x1] * _0x41e277, _0x5ac3f3[0x2] = _0x5ac3f3[0x2] * _0x41e277;
                }
            }
            var _0x2ce0f3 = _0x443b87['renderMode'];
            if (_0x2ce0f3 !== 0x1)
                switch (_0x18c014['startRotat' + 'ionType']) {
                case 0x0:
                    if (_0x18c014['threeDStar' + 'tRotation']) {
                        var _0x57179e = _0x18c014['startRotat' + 'ionConstan' + 'tSeparate'], _0x4b8353 = _0x56c6b5['_tempVecto' + 'r30'];
                        _0x56c6b5['_randomInv' + 'ertRoation' + 'Array'](_0x57179e, _0x4b8353, _0x18c014['randomizeR' + 'otationDir' + 'ection'], _0xdab4b1 ? null : _0xfa8ec8, _0x2a11d2), _0x56c6b5['startRotat' + 'ion'][0x0] = _0x4b8353['x'], _0x56c6b5['startRotat' + 'ion'][0x1] = _0x4b8353['y'];
                        if (_0x2ce0f3 !== 0x4)
                            _0x56c6b5['startRotat' + 'ion'][0x2] = -_0x4b8353['z'];
                        else
                            _0x56c6b5['startRotat' + 'ion'][0x2] = _0x4b8353['z'];
                    } else
                        _0x56c6b5['startRotat' + 'ion'][0x0] = _0x56c6b5['_randomInv' + 'ertRoation'](_0x18c014['startRotat' + 'ionConstan' + 't'], _0x18c014['randomizeR' + 'otationDir' + 'ection'], _0xdab4b1 ? null : _0xfa8ec8, _0x2a11d2), _0x56c6b5['startRotat' + 'ion'][0x1] = 0x0, _0x56c6b5['startRotat' + 'ion'][0x2] = 0x0;
                    break;
                case 0x2:
                    if (_0x18c014['threeDStar' + 'tRotation']) {
                        var _0xdb033e = _0x18c014['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'], _0x461db8 = _0x18c014['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'], _0x5254b6 = _0x56c6b5['_tempVecto' + 'r30'];
                        _0xdab4b1 ? (_0x5254b6['x'] = _0x442335['MathUtil']['lerp'](_0xdb033e['x'], _0x461db8['x'], Math['random']()), _0x5254b6['y'] = _0x442335['MathUtil']['lerp'](_0xdb033e['y'], _0x461db8['y'], Math['random']()), _0x5254b6['z'] = _0x442335['MathUtil']['lerp'](_0xdb033e['z'], _0x461db8['z'], Math['random']())) : (_0xfa8ec8['seed'] = _0x2a11d2[0x5], _0x5254b6['x'] = _0x442335['MathUtil']['lerp'](_0xdb033e['x'], _0x461db8['x'], _0xfa8ec8['getFloat']()), _0x5254b6['y'] = _0x442335['MathUtil']['lerp'](_0xdb033e['y'], _0x461db8['y'], _0xfa8ec8['getFloat']()), _0x5254b6['z'] = _0x442335['MathUtil']['lerp'](_0xdb033e['z'], _0x461db8['z'], _0xfa8ec8['getFloat']()), _0x2a11d2[0x5] = _0xfa8ec8['seed']);
                        _0x56c6b5['_randomInv' + 'ertRoation' + 'Array'](_0x5254b6, _0x5254b6, _0x18c014['randomizeR' + 'otationDir' + 'ection'], _0xdab4b1 ? null : _0xfa8ec8, _0x2a11d2), _0x56c6b5['startRotat' + 'ion'][0x0] = _0x5254b6['x'], _0x56c6b5['startRotat' + 'ion'][0x1] = _0x5254b6['y'];
                        if (_0x2ce0f3 !== 0x4)
                            _0x56c6b5['startRotat' + 'ion'][0x2] = -_0x5254b6['z'];
                        else
                            _0x56c6b5['startRotat' + 'ion'][0x2] = _0x5254b6['z'];
                    } else
                        _0xdab4b1 ? _0x56c6b5['startRotat' + 'ion'][0x0] = _0x56c6b5['_randomInv' + 'ertRoation'](_0x442335['MathUtil']['lerp'](_0x18c014['startRotat' + 'ionConstan' + 'tMin'], _0x18c014['startRotat' + 'ionConstan' + 'tMax'], Math['random']()), _0x18c014['randomizeR' + 'otationDir' + 'ection'], _0xdab4b1 ? null : _0xfa8ec8, _0x2a11d2) : (_0xfa8ec8['seed'] = _0x2a11d2[0x5], _0x56c6b5['startRotat' + 'ion'][0x0] = _0x56c6b5['_randomInv' + 'ertRoation'](_0x442335['MathUtil']['lerp'](_0x18c014['startRotat' + 'ionConstan' + 'tMin'], _0x18c014['startRotat' + 'ionConstan' + 'tMax'], _0xfa8ec8['getFloat']()), _0x18c014['randomizeR' + 'otationDir' + 'ection'], _0xdab4b1 ? null : _0xfa8ec8, _0x2a11d2), _0x2a11d2[0x5] = _0xfa8ec8['seed']);
                    break;
                }
            switch (_0x18c014['startLifet' + 'imeType']) {
            case 0x0:
                _0x56c6b5['startLifeT' + 'ime'] = _0x18c014['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                _0x56c6b5['startLifeT' + 'ime'] = _0x56c6b5['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x18c014['startLifeT' + 'imeGradien' + 't'], _0x18c014['emissionTi' + 'me']);
                break;
            case 0x2:
                _0xdab4b1 ? _0x56c6b5['startLifeT' + 'ime'] = _0x442335['MathUtil']['lerp'](_0x18c014['startLifet' + 'imeConstan' + 'tMin'], _0x18c014['startLifet' + 'imeConstan' + 'tMax'], Math['random']()) : (_0xfa8ec8['seed'] = _0x2a11d2[0x7], _0x56c6b5['startLifeT' + 'ime'] = _0x442335['MathUtil']['lerp'](_0x18c014['startLifet' + 'imeConstan' + 'tMin'], _0x18c014['startLifet' + 'imeConstan' + 'tMax'], _0xfa8ec8['getFloat']()), _0x2a11d2[0x7] = _0xfa8ec8['seed']);
                break;
            case 0x3:
                var _0x4e1336 = _0x18c014['emissionTi' + 'me'];
                _0xdab4b1 ? _0x56c6b5['startLifeT' + 'ime'] = _0x442335['MathUtil']['lerp'](_0x56c6b5['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x18c014['startLifeT' + 'imeGradien' + 'tMin'], _0x4e1336), _0x56c6b5['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x18c014['startLifeT' + 'imeGradien' + 'tMax'], _0x4e1336), Math['random']()) : (_0xfa8ec8['seed'] = _0x2a11d2[0x7], _0x56c6b5['startLifeT' + 'ime'] = _0x442335['MathUtil']['lerp'](_0x56c6b5['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x18c014['startLifeT' + 'imeGradien' + 'tMin'], _0x4e1336), _0x56c6b5['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x18c014['startLifeT' + 'imeGradien' + 'tMax'], _0x4e1336), _0xfa8ec8['getFloat']()), _0x2a11d2[0x7] = _0xfa8ec8['seed']);
                break;
            }
            var _0x53b847 = _0x18c014['textureShe' + 'etAnimatio' + 'n'], _0x4c2a31 = _0x53b847 && _0x53b847['enable'];
            if (_0x4c2a31) {
                var _0x4c9f33 = _0x53b847['tiles'], _0x205d8b = _0x4c9f33['x'], _0x274883 = _0x4c9f33['y'], _0x5a3591 = 0x1 / _0x205d8b, _0x3a94ac = 0x1 / _0x274883, _0x5c4d82, _0x4b77de = _0x53b847['startFrame'];
                switch (_0x4b77de['type']) {
                case 0x0:
                    _0x5c4d82 = _0x4b77de['constant'];
                    break;
                case 0x1:
                    _0xdab4b1 ? _0x5c4d82 = _0x442335['MathUtil']['lerp'](_0x4b77de['constantMi' + 'n'], _0x4b77de['constantMa' + 'x'], Math['random']()) : (_0xfa8ec8['seed'] = _0x2a11d2[0xe], _0x5c4d82 = _0x442335['MathUtil']['lerp'](_0x4b77de['constantMi' + 'n'], _0x4b77de['constantMa' + 'x'], _0xfa8ec8['getFloat']()), _0x2a11d2[0xe] = _0xfa8ec8['seed']);
                    break;
                }
                var _0xddbdd9 = _0x53b847['frame'], _0x55597e = _0x53b847['cycles'];
                switch (_0xddbdd9['type']) {
                case 0x0:
                    _0x5c4d82 += _0xddbdd9['constant'] * _0x55597e;
                    break;
                case 0x2:
                    _0xdab4b1 ? _0x5c4d82 += _0x442335['MathUtil']['lerp'](_0xddbdd9['constantMi' + 'n'], _0xddbdd9['constantMa' + 'x'], Math['random']()) * _0x55597e : (_0xfa8ec8['seed'] = _0x2a11d2[0xf], _0x5c4d82 += _0x442335['MathUtil']['lerp'](_0xddbdd9['constantMi' + 'n'], _0xddbdd9['constantMa' + 'x'], _0xfa8ec8['getFloat']()) * _0x55597e, _0x2a11d2[0xf] = _0xfa8ec8['seed']);
                    break;
                }
                var _0x5953d5 = 0x0;
                switch (_0x53b847['type']) {
                case 0x0:
                    _0x5953d5 = Math['floor'](_0x5c4d82 / _0x205d8b);
                    break;
                case 0x1:
                    _0x53b847['randomRow'] ? _0xdab4b1 ? _0x5953d5 = Math['floor'](Math['random']() * _0x274883) : (_0xfa8ec8['seed'] = _0x2a11d2[0xd], _0x5953d5 = Math['floor'](_0xfa8ec8['getFloat']() * _0x274883), _0x2a11d2[0xd] = _0xfa8ec8['seed']) : _0x5953d5 = _0x53b847['rowIndex'];
                    break;
                }
                var _0x55b8cd = Math['floor'](_0x5c4d82 % _0x205d8b);
                _0x56c6b5['startUVInf' + 'o'] = _0x56c6b5['startUVInf' + 'o'], _0x56c6b5['startUVInf' + 'o'][0x0] = _0x5a3591, _0x56c6b5['startUVInf' + 'o'][0x1] = _0x3a94ac, _0x56c6b5['startUVInf' + 'o'][0x2] = _0x55b8cd * _0x5a3591, _0x56c6b5['startUVInf' + 'o'][0x3] = _0x5953d5 * _0x3a94ac;
            } else
                _0x56c6b5['startUVInf' + 'o'] = _0x56c6b5['startUVInf' + 'o'], _0x56c6b5['startUVInf' + 'o'][0x0] = 0x1, _0x56c6b5['startUVInf' + 'o'][0x1] = 0x1, _0x56c6b5['startUVInf' + 'o'][0x2] = 0x0, _0x56c6b5['startUVInf' + 'o'][0x3] = 0x0;
        }
    }
    _0x56c6b5['_tempVecto' + 'r30'] = new _0x352206(), _0x56c6b5['startColor'] = new _0x18425e(), _0x56c6b5['startSize'] = new Float32Array(0x3), _0x56c6b5['startRotat' + 'ion'] = new Float32Array(0x3), _0x56c6b5['startUVInf' + 'o'] = new Float32Array(0x4);
    class _0x5da476 extends _0x355f63 {
        constructor(_0x500061) {
            super(), this['_boundingS' + 'phere'] = null, this['_boundingB' + 'ox'] = null, this['_boundingB' + 'oxCorners'] = null, this['_bounds'] = null, this['_gravityOf' + 'fset'] = new _0x378045(), this['_customBou' + 'nds'] = null, this['_useCustom' + 'Bounds'] = ![], this['_owner'] = null, this['_ownerRend' + 'er'] = null, this['_vertices'] = null, this['_floatCoun' + 'tPerVertex'] = 0x0, this['_startLife' + 'TimeIndex'] = 0x0, this['_timeIndex'] = 0x0, this['_simulateU' + 'pdate'] = ![], this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_drawCount' + 'er'] = 0x0, this['_bufferMax' + 'Particles'] = 0x0, this['_emission'] = null, this['_shape'] = null, this['_isEmittin' + 'g'] = ![], this['_isPlaying'] = ![], this['_isPaused'] = ![], this['_playStart' + 'Delay'] = 0x0, this['_frameRate' + 'Time'] = 0x0, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_burstsInd' + 'ex'] = 0x0, this['_velocityO' + 'verLifetim' + 'e'] = null, this['_colorOver' + 'Lifetime'] = null, this['_sizeOverL' + 'ifetime'] = null, this['_rotationO' + 'verLifetim' + 'e'] = null, this['_textureSh' + 'eetAnimati' + 'on'] = null, this['_startLife' + 'timeType'] = 0x0, this['_startLife' + 'timeConsta' + 'nt'] = 0x0, this['_startLife' + 'TimeGradie' + 'nt'] = null, this['_startLife' + 'timeConsta' + 'ntMin'] = 0x0, this['_startLife' + 'timeConsta' + 'ntMax'] = 0x0, this['_startLife' + 'TimeGradie' + 'ntMin'] = null, this['_startLife' + 'TimeGradie' + 'ntMax'] = null, this['_maxStartL' + 'ifetime'] = 0x0, this['_uvLength'] = new _0x378045(), this['_vertexStr' + 'ide'] = 0x0, this['_indexStri' + 'de'] = 0x0, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_bufferSta' + 'te'] = new _0x2f0542(), this['_updateMas' + 'k'] = 0x0, this['_currentTi' + 'me'] = 0x0, this['_startUpda' + 'teLoopCoun' + 't'] = 0x0, this['_rand'] = null, this['_randomSee' + 'ds'] = null, this['duration'] = 0x0, this['looping'] = ![], this['prewarm'] = ![], this['startDelay' + 'Type'] = 0x0, this['startDelay'] = 0x0, this['startDelay' + 'Min'] = 0x0, this['startDelay' + 'Max'] = 0x0, this['startSpeed' + 'Type'] = 0x0, this['startSpeed' + 'Constant'] = 0x0, this['startSpeed' + 'ConstantMi' + 'n'] = 0x0, this['startSpeed' + 'ConstantMa' + 'x'] = 0x0, this['threeDStar' + 'tSize'] = ![], this['startSizeT' + 'ype'] = 0x0, this['startSizeC' + 'onstant'] = 0x0, this['startSizeC' + 'onstantSep' + 'arate'] = null, this['startSizeC' + 'onstantMin'] = 0x0, this['startSizeC' + 'onstantMax'] = 0x0, this['startSizeC' + 'onstantMin' + 'Separate'] = null, this['startSizeC' + 'onstantMax' + 'Separate'] = null, this['threeDStar' + 'tRotation'] = ![], this['startRotat' + 'ionType'] = 0x0, this['startRotat' + 'ionConstan' + 't'] = 0x0, this['startRotat' + 'ionConstan' + 'tSeparate'] = null, this['startRotat' + 'ionConstan' + 'tMin'] = 0x0, this['startRotat' + 'ionConstan' + 'tMax'] = 0x0, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = null, this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = null, this['randomizeR' + 'otationDir' + 'ection'] = 0x0, this['startColor' + 'Type'] = 0x0, this['startColor' + 'Constant'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['startColor' + 'ConstantMi' + 'n'] = new _0x18425e(0x0, 0x0, 0x0, 0x0), this['startColor' + 'ConstantMa' + 'x'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['gravityMod' + 'ifier'] = 0x0, this['simulation' + 'Space'] = 0x0, this['simulation' + 'Speed'] = 0x1, this['scaleMode'] = 0x1, this['playOnAwak' + 'e'] = ![], this['randomSeed'] = null, this['autoRandom' + 'Seed'] = ![], this['isPerforma' + 'nceMode'] = ![], this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_owner'] = _0x500061, this['_ownerRend' + 'er'] = _0x500061['particleRe' + 'nderer'], this['_boundingB' + 'oxCorners'] = [], this['_boundingS' + 'phere'] = new _0x2b2d11(new _0x352206(), Number['MAX_VALUE']), this['_boundingB' + 'ox'] = new _0x2bd0ec(new _0x352206(-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), new _0x352206(Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE'])), this['_bounds'] = new _0x1f1598(this['_boundingB' + 'ox']['min'], this['_boundingB' + 'ox']['max']), this['_useCustom' + 'Bounds'] = ![], this['_currentTi' + 'me'] = 0x0, this['_isEmittin' + 'g'] = ![], this['_isPlaying'] = ![], this['_isPaused'] = ![], this['_burstsInd' + 'ex'] = 0x0, this['_frameRate' + 'Time'] = 0x0, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_simulateU' + 'pdate'] = ![], this['_bufferMax' + 'Particles'] = 0x1, this['duration'] = 0x5, this['looping'] = !![], this['prewarm'] = ![], this['startDelay' + 'Type'] = 0x0, this['startDelay'] = 0x0, this['startDelay' + 'Min'] = 0x0, this['startDelay' + 'Max'] = 0x0, this['_startLife' + 'timeType'] = 0x0, this['_startLife' + 'timeConsta' + 'nt'] = 0x5, this['_startLife' + 'TimeGradie' + 'nt'] = new _0x1731a8(), this['_startLife' + 'timeConsta' + 'ntMin'] = 0x0, this['_startLife' + 'timeConsta' + 'ntMax'] = 0x5, this['_startLife' + 'TimeGradie' + 'ntMin'] = new _0x1731a8(), this['_startLife' + 'TimeGradie' + 'ntMax'] = new _0x1731a8(), this['_maxStartL' + 'ifetime'] = 0x5, this['startSpeed' + 'Type'] = 0x0, this['startSpeed' + 'Constant'] = 0x5, this['startSpeed' + 'ConstantMi' + 'n'] = 0x0, this['startSpeed' + 'ConstantMa' + 'x'] = 0x5, this['threeDStar' + 'tSize'] = ![], this['startSizeT' + 'ype'] = 0x0, this['startSizeC' + 'onstant'] = 0x1, this['startSizeC' + 'onstantSep' + 'arate'] = new _0x352206(0x1, 0x1, 0x1), this['startSizeC' + 'onstantMin'] = 0x0, this['startSizeC' + 'onstantMax'] = 0x1, this['startSizeC' + 'onstantMin' + 'Separate'] = new _0x352206(0x0, 0x0, 0x0), this['startSizeC' + 'onstantMax' + 'Separate'] = new _0x352206(0x1, 0x1, 0x1), this['threeDStar' + 'tRotation'] = ![], this['startRotat' + 'ionType'] = 0x0, this['startRotat' + 'ionConstan' + 't'] = 0x0, this['startRotat' + 'ionConstan' + 'tSeparate'] = new _0x352206(0x0, 0x0, 0x0), this['startRotat' + 'ionConstan' + 'tMin'] = 0x0, this['startRotat' + 'ionConstan' + 'tMax'] = 0x0, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = new _0x352206(0x0, 0x0, 0x0), this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = new _0x352206(0x0, 0x0, 0x0), this['gravityMod' + 'ifier'] = 0x0, this['simulation' + 'Space'] = 0x1, this['scaleMode'] = 0x1, this['playOnAwak' + 'e'] = !![], this['_rand'] = new _0x508ab7(0x0), this['autoRandom' + 'Seed'] = !![], this['randomSeed'] = new Uint32Array(0x1), this['_randomSee' + 'ds'] = new Uint32Array(_0x5da476['_RANDOMOFF' + 'SET']['length']), this['isPerforma' + 'nceMode'] = !![], this['_emission'] = new _0x2cd287(), this['_emission']['enable'] = !![];
        }
        get ['maxParticl' + 'es']() {
            return this['_bufferMax' + 'Particles'] - 0x1;
        }
        set ['maxParticl' + 'es'](_0x5f46d7) {
            var _0x37174f = _0x5f46d7 + 0x1;
            _0x37174f !== this['_bufferMax' + 'Particles'] && (this['_bufferMax' + 'Particles'] = _0x37174f, this['_initBuffe' + 'rDatas']());
        }
        get ['emission']() {
            return this['_emission'];
        }
        get ['aliveParti' + 'cleCount']() {
            if (this['_firstNewE' + 'lement'] >= this['_firstReti' + 'redElement'])
                return this['_firstNewE' + 'lement'] - this['_firstReti' + 'redElement'];
            else
                return this['_bufferMax' + 'Particles'] - this['_firstReti' + 'redElement'] + this['_firstNewE' + 'lement'];
        }
        get ['emissionTi' + 'me']() {
            return this['_emissionT' + 'ime'] > this['duration'] ? this['duration'] : this['_emissionT' + 'ime'];
        }
        get ['shape']() {
            return this['_shape'];
        }
        set ['shape'](_0x10624e) {
            if (this['_shape'] !== _0x10624e) {
                if (_0x10624e && _0x10624e['enable'])
                    this['_owner']['_render']['_shaderVal' + 'ues']['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_SHAPE']);
                else
                    this['_owner']['_render']['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SHAPE']);
                this['_shape'] = _0x10624e;
            }
        }
        get ['isAlive']() {
            if (this['_isPlaying'] || this['aliveParti' + 'cleCount'] > 0x0)
                return !![];
            return ![];
        }
        get ['isEmitting']() {
            return this['_isEmittin' + 'g'];
        }
        get ['isPlaying']() {
            return this['_isPlaying'];
        }
        get ['isPaused']() {
            return this['_isPaused'];
        }
        get ['startLifet' + 'imeType']() {
            return this['_startLife' + 'timeType'];
        }
        set ['startLifet' + 'imeType'](_0x148afb) {
            var _0x798f49, _0x1110bc;
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                this['_maxStartL' + 'ifetime'] = this['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                var _0x454ca7 = _0x454ca7;
                for (_0x798f49 = 0x0, _0x1110bc = _0x454ca7['gradientCo' + 'unt']; _0x798f49 < _0x1110bc; _0x798f49++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x454ca7['getValueBy' + 'Index'](_0x798f49));
                break;
            case 0x2:
                this['_maxStartL' + 'ifetime'] = Math['max'](this['startLifet' + 'imeConstan' + 'tMin'], this['startLifet' + 'imeConstan' + 'tMax']);
                break;
            case 0x3:
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                var _0x3895bb = _0x3895bb;
                for (_0x798f49 = 0x0, _0x1110bc = _0x3895bb['gradientCo' + 'unt']; _0x798f49 < _0x1110bc; _0x798f49++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x3895bb['getValueBy' + 'Index'](_0x798f49));
                var _0x1e1e69 = _0x1e1e69;
                for (_0x798f49 = 0x0, _0x1110bc = _0x1e1e69['gradientCo' + 'unt']; _0x798f49 < _0x1110bc; _0x798f49++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x1e1e69['getValueBy' + 'Index'](_0x798f49));
                break;
            }
            this['_startLife' + 'timeType'] = _0x148afb;
        }
        get ['startLifet' + 'imeConstan' + 't']() {
            return this['_startLife' + 'timeConsta' + 'nt'];
        }
        set ['startLifet' + 'imeConstan' + 't'](_0x279b80) {
            if (this['_startLife' + 'timeType'] === 0x0)
                this['_maxStartL' + 'ifetime'] = _0x279b80;
            this['_startLife' + 'timeConsta' + 'nt'] = _0x279b80;
        }
        get ['startLifeT' + 'imeGradien' + 't']() {
            return this['_startLife' + 'TimeGradie' + 'nt'];
        }
        set ['startLifeT' + 'imeGradien' + 't'](_0x4f188e) {
            if (this['_startLife' + 'timeType'] === 0x1) {
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                for (var _0x403cb7 = 0x0, _0x591bbb = _0x4f188e['gradientCo' + 'unt']; _0x403cb7 < _0x591bbb; _0x403cb7++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x4f188e['getValueBy' + 'Index'](_0x403cb7));
            }
            this['_startLife' + 'TimeGradie' + 'nt'] = _0x4f188e;
        }
        get ['startLifet' + 'imeConstan' + 'tMin']() {
            return this['_startLife' + 'timeConsta' + 'ntMin'];
        }
        set ['startLifet' + 'imeConstan' + 'tMin'](_0x59950a) {
            if (this['_startLife' + 'timeType'] === 0x2)
                this['_maxStartL' + 'ifetime'] = Math['max'](_0x59950a, this['_startLife' + 'timeConsta' + 'ntMax']);
            this['_startLife' + 'timeConsta' + 'ntMin'] = _0x59950a;
        }
        get ['startLifet' + 'imeConstan' + 'tMax']() {
            return this['_startLife' + 'timeConsta' + 'ntMax'];
        }
        set ['startLifet' + 'imeConstan' + 'tMax'](_0x2d25e3) {
            if (this['_startLife' + 'timeType'] === 0x2)
                this['_maxStartL' + 'ifetime'] = Math['max'](this['_startLife' + 'timeConsta' + 'ntMin'], _0x2d25e3);
            this['_startLife' + 'timeConsta' + 'ntMax'] = _0x2d25e3;
        }
        get ['startLifeT' + 'imeGradien' + 'tMin']() {
            return this['_startLife' + 'TimeGradie' + 'ntMin'];
        }
        set ['startLifeT' + 'imeGradien' + 'tMin'](_0x1d3044) {
            if (this['_startLife' + 'timeType'] === 0x3) {
                var _0x53c882, _0x457a0b;
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                for (_0x53c882 = 0x0, _0x457a0b = _0x1d3044['gradientCo' + 'unt']; _0x53c882 < _0x457a0b; _0x53c882++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x1d3044['getValueBy' + 'Index'](_0x53c882));
                for (_0x53c882 = 0x0, _0x457a0b = this['_startLife' + 'TimeGradie' + 'ntMax']['gradientCo' + 'unt']; _0x53c882 < _0x457a0b; _0x53c882++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], this['_startLife' + 'TimeGradie' + 'ntMax']['getValueBy' + 'Index'](_0x53c882));
            }
            this['_startLife' + 'TimeGradie' + 'ntMin'] = _0x1d3044;
        }
        get ['startLifeT' + 'imeGradien' + 'tMax']() {
            return this['_startLife' + 'TimeGradie' + 'ntMax'];
        }
        set ['startLifeT' + 'imeGradien' + 'tMax'](_0x424757) {
            if (this['_startLife' + 'timeType'] === 0x3) {
                var _0x591f46, _0xa8a405;
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                for (_0x591f46 = 0x0, _0xa8a405 = this['_startLife' + 'TimeGradie' + 'ntMin']['gradientCo' + 'unt']; _0x591f46 < _0xa8a405; _0x591f46++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], this['_startLife' + 'TimeGradie' + 'ntMin']['getValueBy' + 'Index'](_0x591f46));
                for (_0x591f46 = 0x0, _0xa8a405 = _0x424757['gradientCo' + 'unt']; _0x591f46 < _0xa8a405; _0x591f46++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x424757['getValueBy' + 'Index'](_0x591f46));
            }
            this['_startLife' + 'TimeGradie' + 'ntMax'] = _0x424757;
        }
        get ['velocityOv' + 'erLifetime']() {
            return this['_velocityO' + 'verLifetim' + 'e'];
        }
        set ['velocityOv' + 'erLifetime'](_0x6c9a43) {
            var _0x58407c = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x6c9a43) {
                var _0x21b19a = _0x6c9a43['velocity'], _0x31c0a4 = _0x21b19a['type'];
                if (_0x6c9a43['enable'])
                    switch (_0x31c0a4) {
                    case 0x0:
                        _0x58407c['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']);
                        break;
                    case 0x1:
                        _0x58407c['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']);
                        break;
                    case 0x2:
                        _0x58407c['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']);
                        break;
                    case 0x3:
                        _0x58407c['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
                        break;
                    }
                else
                    _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']), _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']), _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']), _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
                switch (_0x31c0a4) {
                case 0x0:
                    _0x58407c['setVector3'](_0x39d5f7['VOLVELOCIT' + 'YCONST'], _0x21b19a['constant']);
                    break;
                case 0x1:
                    _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTX'], _0x21b19a['gradientX']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTY'], _0x21b19a['gradientY']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTZ'], _0x21b19a['gradientZ']['_elements']);
                    break;
                case 0x2:
                    _0x58407c['setVector3'](_0x39d5f7['VOLVELOCIT' + 'YCONST'], _0x21b19a['constantMi' + 'n']), _0x58407c['setVector3'](_0x39d5f7['VOLVELOCIT' + 'YCONSTMAX'], _0x21b19a['constantMa' + 'x']);
                    break;
                case 0x3:
                    _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTX'], _0x21b19a['gradientXM' + 'in']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTX' + 'MAX'], _0x21b19a['gradientXM' + 'ax']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTY'], _0x21b19a['gradientYM' + 'in']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTY' + 'MAX'], _0x21b19a['gradientYM' + 'ax']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTZ'], _0x21b19a['gradientZM' + 'in']['_elements']), _0x58407c['setBuffer'](_0x39d5f7['VOLVELOCIT' + 'YGRADIENTZ' + 'MAX'], _0x21b19a['gradientZM' + 'ax']['_elements']);
                    break;
                }
                _0x58407c['setInt'](_0x39d5f7['VOLSPACETY' + 'PE'], _0x6c9a43['space']);
            } else
                _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']), _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']), _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']), _0x58407c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
            this['_velocityO' + 'verLifetim' + 'e'] = _0x6c9a43;
        }
        get ['colorOverL' + 'ifetime']() {
            return this['_colorOver' + 'Lifetime'];
        }
        set ['colorOverL' + 'ifetime'](_0x56c74b) {
            var _0x3f563c = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x56c74b) {
                var _0x5265ce = _0x56c74b['color'];
                if (_0x56c74b['enable'])
                    switch (_0x5265ce['type']) {
                    case 0x1:
                        _0x3f563c['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']);
                        break;
                    case 0x3:
                        _0x3f563c['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']);
                        break;
                    }
                else
                    _0x3f563c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']), _0x3f563c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']);
                switch (_0x5265ce['type']) {
                case 0x1:
                    var _0x18d4ab = _0x5265ce['gradient'];
                    _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x18d4ab['_alphaElem' + 'ents']), _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x18d4ab['_rgbElemen' + 'ts']);
                    break;
                case 0x3:
                    var _0x161f01 = _0x5265ce['gradientMi' + 'n'], _0x51efd4 = _0x5265ce['gradientMa' + 'x'];
                    _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x161f01['_alphaElem' + 'ents']), _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x161f01['_rgbElemen' + 'ts']), _0x3f563c['setBuffer'](_0x39d5f7['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'], _0x51efd4['_alphaElem' + 'ents']), _0x3f563c['setBuffer'](_0x39d5f7['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'], _0x51efd4['_rgbElemen' + 'ts']);
                    break;
                }
            } else
                _0x3f563c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']), _0x3f563c['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']), _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x18d4ab['_alphaElem' + 'ents']), _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x18d4ab['_rgbElemen' + 'ts']), _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x161f01['_alphaElem' + 'ents']), _0x3f563c['setBuffer'](_0x39d5f7['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x161f01['_rgbElemen' + 'ts']), _0x3f563c['setBuffer'](_0x39d5f7['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'], _0x51efd4['_alphaElem' + 'ents']), _0x3f563c['setBuffer'](_0x39d5f7['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'], _0x51efd4['_rgbElemen' + 'ts']);
            this['_colorOver' + 'Lifetime'] = _0x56c74b;
        }
        get ['sizeOverLi' + 'fetime']() {
            return this['_sizeOverL' + 'ifetime'];
        }
        set ['sizeOverLi' + 'fetime'](_0x589a69) {
            var _0x511b5a = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x589a69) {
                var _0x2ea3b1 = _0x589a69['size'], _0x4d513c = _0x2ea3b1['separateAx' + 'es'], _0x2b5d91 = _0x2ea3b1['type'];
                if (_0x589a69['enable'])
                    switch (_0x2b5d91) {
                    case 0x0:
                        if (_0x4d513c)
                            _0x511b5a['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']);
                        else
                            _0x511b5a['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']);
                        break;
                    case 0x2:
                        if (_0x4d513c)
                            _0x511b5a['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
                        else
                            _0x511b5a['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']);
                        break;
                    }
                else
                    _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']), _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']), _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']), _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
                switch (_0x2b5d91) {
                case 0x0:
                    _0x4d513c ? (_0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENTX'], _0x2ea3b1['gradientX']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENTY'], _0x2ea3b1['gradientY']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSizeGra' + 'dientZ'], _0x2ea3b1['gradientZ']['_elements'])) : _0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENT'], _0x2ea3b1['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x4d513c ? (_0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENTX'], _0x2ea3b1['gradientXM' + 'in']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENTXMAX'], _0x2ea3b1['gradientXM' + 'ax']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENTY'], _0x2ea3b1['gradientYM' + 'in']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENTYMAX'], _0x2ea3b1['gradientYM' + 'ax']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSizeGra' + 'dientZ'], _0x2ea3b1['gradientZM' + 'in']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSizeGra' + 'dientZMAX'], _0x2ea3b1['gradientZM' + 'ax']['_elements'])) : (_0x511b5a['setBuffer'](_0x39d5f7['SOLSIZEGRA' + 'DIENT'], _0x2ea3b1['gradientMi' + 'n']['_elements']), _0x511b5a['setBuffer'](_0x39d5f7['SOLSizeGra' + 'dientMax'], _0x2ea3b1['gradientMa' + 'x']['_elements']));
                    break;
                }
            } else
                _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']), _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']), _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']), _0x511b5a['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
            this['_sizeOverL' + 'ifetime'] = _0x589a69;
        }
        get ['rotationOv' + 'erLifetime']() {
            return this['_rotationO' + 'verLifetim' + 'e'];
        }
        set ['rotationOv' + 'erLifetime'](_0x14cd47) {
            var _0x2b04a1 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x14cd47) {
                var _0x3ad2f1 = _0x14cd47['angularVel' + 'ocity'];
                if (!_0x3ad2f1)
                    return;
                var _0x595ed2 = _0x3ad2f1['separateAx' + 'es'], _0x2c90e4 = _0x3ad2f1['type'];
                if (_0x14cd47['enable']) {
                    if (_0x595ed2)
                        _0x2b04a1['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']);
                    else
                        _0x2b04a1['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']);
                    switch (_0x2c90e4) {
                    case 0x0:
                        _0x2b04a1['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']);
                        break;
                    case 0x1:
                        _0x2b04a1['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']);
                        break;
                    case 0x2:
                        _0x2b04a1['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']);
                        break;
                    case 0x3:
                        _0x2b04a1['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
                        break;
                    }
                } else
                    _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
                switch (_0x2c90e4) {
                case 0x0:
                    _0x595ed2 ? _0x2b04a1['setVector3'](_0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'], _0x3ad2f1['constantSe' + 'parate']) : _0x2b04a1['setNumber'](_0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NST'], _0x3ad2f1['constant']);
                    break;
                case 0x1:
                    _0x595ed2 ? (_0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'], _0x3ad2f1['gradientX']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'], _0x3ad2f1['gradientY']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'], _0x3ad2f1['gradientZ']['_elements'])) : _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'], _0x3ad2f1['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x595ed2 ? (_0x2b04a1['setVector3'](_0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'], _0x3ad2f1['constantMi' + 'nSeparate']), _0x2b04a1['setVector3'](_0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAXSEPR' + 'ARATE'], _0x3ad2f1['constantMa' + 'xSeparate'])) : (_0x2b04a1['setNumber'](_0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NST'], _0x3ad2f1['constantMi' + 'n']), _0x2b04a1['setNumber'](_0x39d5f7['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAX'], _0x3ad2f1['constantMa' + 'x']));
                    break;
                case 0x3:
                    _0x595ed2 ? (_0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'], _0x3ad2f1['gradientXM' + 'in']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTXMAX'], _0x3ad2f1['gradientXM' + 'ax']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'], _0x3ad2f1['gradientYM' + 'in']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTYMAX'], _0x3ad2f1['gradientYM' + 'ax']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'], _0x3ad2f1['gradientZM' + 'in']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZMAX'], _0x3ad2f1['gradientZM' + 'ax']['_elements'])) : (_0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'], _0x3ad2f1['gradientMi' + 'n']['_elements']), _0x2b04a1['setBuffer'](_0x39d5f7['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTMAX'], _0x3ad2f1['gradientMa' + 'x']['_elements']));
                    break;
                }
            } else
                _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']), _0x2b04a1['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
            this['_rotationO' + 'verLifetim' + 'e'] = _0x14cd47;
        }
        get ['textureShe' + 'etAnimatio' + 'n']() {
            return this['_textureSh' + 'eetAnimati' + 'on'];
        }
        set ['textureShe' + 'etAnimatio' + 'n'](_0x1ddad6) {
            var _0x2e1ac3 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x1ddad6) {
                var _0x375c4d = _0x1ddad6['frame'], _0x286a47 = _0x375c4d['type'];
                if (_0x1ddad6['enable'])
                    switch (_0x286a47) {
                    case 0x1:
                        _0x2e1ac3['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']);
                        break;
                    case 0x3:
                        _0x2e1ac3['addDefine'](_0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
                        break;
                    }
                else
                    _0x2e1ac3['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']), _0x2e1ac3['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
                if (_0x286a47 === 0x1 || _0x286a47 === 0x3) {
                    _0x2e1ac3['setNumber'](_0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NCYCLES'], _0x1ddad6['cycles']);
                    var _0xa3b2b7 = _0x1ddad6['tiles'], _0x3c6de6 = this['_uvLength'];
                    _0x3c6de6['x'] = 0x1 / _0xa3b2b7['x'], _0x3c6de6['y'] = 0x1 / _0xa3b2b7['y'], _0x2e1ac3['setVector2'](_0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NSUBUVLENG' + 'TH'], this['_uvLength']);
                }
                switch (_0x286a47) {
                case 0x1:
                    _0x2e1ac3['setBuffer'](_0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'], _0x375c4d['frameOverT' + 'imeData']['_elements']);
                    break;
                case 0x3:
                    _0x2e1ac3['setBuffer'](_0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'], _0x375c4d['frameOverT' + 'imeDataMin']['_elements']), _0x2e1ac3['setBuffer'](_0x39d5f7['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTM' + 'AXUVS'], _0x375c4d['frameOverT' + 'imeDataMax']['_elements']);
                    break;
                }
            } else
                _0x2e1ac3['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']), _0x2e1ac3['removeDefi' + 'ne'](_0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
            this['_textureSh' + 'eetAnimati' + 'on'] = _0x1ddad6;
        }
        ['_getVertex' + 'Buffer'](_0x5314d3 = 0x0) {
            if (_0x5314d3 === 0x0)
                return this['_vertexBuf' + 'fer'];
            else
                return null;
        }
        ['_getIndexB' + 'uffer']() {
            return this['_indexBuff' + 'er'];
        }
        ['_generateB' + 'oundingSph' + 'ere']() {
            var _0x358b38 = this['_boundingS' + 'phere']['center'];
            _0x358b38['x'] = 0x0, _0x358b38['y'] = 0x0, _0x358b38['z'] = 0x0, this['_boundingS' + 'phere']['radius'] = Number['MAX_VALUE'];
        }
        ['_generateB' + 'oundingBox']() {
            var _0x475f58 = this['_owner'], _0x2bce7f = _0x475f58['particleRe' + 'nderer'], _0xfee4a4 = this['_boundingB' + 'ox']['min'], _0x18cfb5 = this['_boundingB' + 'ox']['max'], _0x446662, _0x481af0, _0x40b8fb;
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                _0x40b8fb = this['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                _0x40b8fb = -Number['MAX_VALUE'];
                var _0xe0b3c8 = _0xe0b3c8;
                for (_0x446662 = 0x0, _0x481af0 = _0xe0b3c8['gradientCo' + 'unt']; _0x446662 < _0x481af0; _0x446662++)
                    _0x40b8fb = Math['max'](_0x40b8fb, _0xe0b3c8['getValueBy' + 'Index'](_0x446662));
                break;
            case 0x2:
                _0x40b8fb = Math['max'](this['startLifet' + 'imeConstan' + 'tMin'], this['startLifet' + 'imeConstan' + 'tMax']);
                break;
            case 0x3:
                _0x40b8fb = -Number['MAX_VALUE'];
                var _0x3127c7 = _0x3127c7;
                for (_0x446662 = 0x0, _0x481af0 = _0x3127c7['gradientCo' + 'unt']; _0x446662 < _0x481af0; _0x446662++)
                    _0x40b8fb = Math['max'](_0x40b8fb, _0x3127c7['getValueBy' + 'Index'](_0x446662));
                var _0x557b4c = _0x557b4c;
                for (_0x446662 = 0x0, _0x481af0 = _0x557b4c['gradientCo' + 'unt']; _0x446662 < _0x481af0; _0x446662++)
                    _0x40b8fb = Math['max'](_0x40b8fb, _0x557b4c['getValueBy' + 'Index'](_0x446662));
                break;
            }
            var _0x5836f3, _0x4fb0a5;
            switch (this['startSpeed' + 'Type']) {
            case 0x0:
                _0x5836f3 = _0x4fb0a5 = this['startSpeed' + 'Constant'];
                break;
            case 0x1:
                break;
            case 0x2:
                _0x5836f3 = this['startLifet' + 'imeConstan' + 'tMin'], _0x4fb0a5 = this['startLifet' + 'imeConstan' + 'tMax'];
                break;
            case 0x3:
                break;
            }
            var _0x372a6f, _0x4253b9, _0x591fce, _0x45f37a;
            if (this['_shape'] && this['_shape']['enable']);
            else
                _0x372a6f = _0x4253b9 = _0x352206['_ZERO'], _0x591fce = _0x352206['_ZERO'], _0x45f37a = _0x352206['_UnitZ'];
            var _0x451b6b = new _0x352206(_0x591fce['x'] * _0x5836f3, _0x591fce['y'] * _0x5836f3, _0x591fce['z'] * _0x5836f3), _0x55467e = new _0x352206(_0x45f37a['x'] * _0x4fb0a5, _0x45f37a['y'] * _0x4fb0a5, _0x45f37a['z'] * _0x4fb0a5);
            if (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable']) {
                var _0x1468a, _0x5c13dc, _0x32f8e8 = this['_velocityO' + 'verLifetim' + 'e']['velocity'];
                switch (_0x32f8e8['type']) {
                case 0x0:
                    _0x1468a = _0x5c13dc = _0x32f8e8['constant'];
                    break;
                case 0x1:
                    _0x1468a = _0x5c13dc = new _0x352206(_0x32f8e8['gradientX']['getAverage' + 'Value'](), _0x32f8e8['gradientY']['getAverage' + 'Value'](), _0x32f8e8['gradientZ']['getAverage' + 'Value']());
                    break;
                case 0x2:
                    _0x1468a = _0x32f8e8['constantMi' + 'n'], _0x5c13dc = _0x32f8e8['constantMa' + 'x'];
                    break;
                case 0x3:
                    _0x1468a = new _0x352206(_0x32f8e8['gradientXM' + 'in']['getAverage' + 'Value'](), _0x32f8e8['gradientYM' + 'in']['getAverage' + 'Value'](), _0x32f8e8['gradientZM' + 'in']['getAverage' + 'Value']()), _0x5c13dc = new _0x352206(_0x32f8e8['gradientXM' + 'ax']['getAverage' + 'Value'](), _0x32f8e8['gradientYM' + 'ax']['getAverage' + 'Value'](), _0x32f8e8['gradientZM' + 'ax']['getAverage' + 'Value']());
                    break;
                }
            }
            var _0xc5f3c5, _0x208ddb, _0x2ffa50 = this['_owner']['transform'], _0x9151 = _0x2ffa50['position'], _0x4f6b9a = _0x5da476['_tempVecto' + 'r39'], _0x5c8d8f = _0x2bce7f['renderMode'];
            switch (this['scaleMode']) {
            case 0x0:
                var _0x763948 = _0x2ffa50['getWorldLo' + 'ssyScale']();
                _0xc5f3c5 = _0x763948, _0x4f6b9a['x'] = _0x763948['x'], _0x4f6b9a['y'] = _0x763948['z'], _0x4f6b9a['z'] = _0x763948['y'], _0x5c8d8f === 0x1 && (_0x208ddb = _0x763948);
                break;
            case 0x1:
                var _0x5a54e8 = _0x2ffa50['localScale'];
                _0xc5f3c5 = _0x5a54e8, _0x4f6b9a['x'] = _0x5a54e8['x'], _0x4f6b9a['y'] = _0x5a54e8['z'], _0x4f6b9a['z'] = _0x5a54e8['y'], _0x5c8d8f === 0x1 && (_0x208ddb = _0x5a54e8);
                break;
            case 0x2:
                _0xc5f3c5 = _0x2ffa50['getWorldLo' + 'ssyScale'](), _0x4f6b9a['x'] = _0x4f6b9a['y'] = _0x4f6b9a['z'] = 0x1, _0x5c8d8f === 0x1 && (_0x208ddb = _0x352206['_ONE']);
                break;
            }
            var _0xcbe837, _0xf904fc;
            if (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable']);
            else
                _0xcbe837 = new _0x352206(_0x451b6b['x'] * _0x40b8fb, _0x451b6b['y'] * _0x40b8fb, _0x451b6b['z'] * _0x40b8fb), _0xf904fc = new _0x352206(_0x55467e['x'] * _0x40b8fb, _0x55467e['y'] * _0x40b8fb, _0x55467e['z'] * _0x40b8fb), this['scaleMode'] != 0x2 ? (_0x352206['add'](_0x372a6f, _0xcbe837, _0xfee4a4), _0x352206['multiply'](_0xc5f3c5, _0xfee4a4, _0xfee4a4), _0x352206['add'](_0x4253b9, _0xf904fc, _0x18cfb5), _0x352206['multiply'](_0xc5f3c5, _0x18cfb5, _0x18cfb5)) : (_0x352206['multiply'](_0xc5f3c5, _0x372a6f, _0xfee4a4), _0x352206['add'](_0xfee4a4, _0xcbe837, _0xfee4a4), _0x352206['multiply'](_0xc5f3c5, _0x4253b9, _0x18cfb5), _0x352206['add'](_0x18cfb5, _0xf904fc, _0x18cfb5));
            switch (this['simulation' + 'Space']) {
            case 0x0:
                break;
            case 0x1:
                _0x352206['add'](_0xfee4a4, _0x9151, _0xfee4a4), _0x352206['add'](_0x18cfb5, _0x9151, _0x18cfb5);
                break;
            }
            var _0x3ea4ac, _0x17fe5d;
            switch (this['startSizeT' + 'ype']) {
            case 0x0:
                if (this['threeDStar' + 'tSize']) {
                    var _0x5f32bc = _0x5f32bc;
                    _0x3ea4ac = Math['max'](_0x5f32bc['x'], _0x5f32bc['y']);
                    if (_0x5c8d8f === 0x1)
                        _0x17fe5d = _0x5f32bc['y'];
                } else {
                    _0x3ea4ac = this['startSizeC' + 'onstant'];
                    if (_0x5c8d8f === 0x1)
                        _0x17fe5d = this['startSizeC' + 'onstant'];
                }
                break;
            case 0x1:
                break;
            case 0x2:
                if (this['threeDStar' + 'tSize']) {
                    var _0x2e222f = _0x2e222f;
                    _0x3ea4ac = Math['max'](_0x2e222f['x'], _0x2e222f['y']);
                    if (_0x5c8d8f === 0x1)
                        _0x17fe5d = _0x2e222f['y'];
                } else {
                    _0x3ea4ac = this['startSizeC' + 'onstantMax'];
                    if (_0x5c8d8f === 0x1)
                        _0x17fe5d = this['startSizeC' + 'onstantMax'];
                }
                break;
            case 0x3:
                break;
            }
            if (this['_sizeOverL' + 'ifetime'] && this['_sizeOverL' + 'ifetime']['enable']) {
                var _0xfdc2e2 = this['_sizeOverL' + 'ifetime']['size'];
                _0x3ea4ac *= this['_sizeOverL' + 'ifetime']['size']['getMaxSize' + 'InGradient']();
            }
            var _0x5ea3b0 = _0x5da476['_tempVecto' + 'r30'], _0x26aa6f, _0x1b5538;
            switch (_0x5c8d8f) {
            case 0x0:
                _0x26aa6f = _0x3ea4ac * _0x5da476['halfKSqrtO' + 'f2'], _0x352206['scale'](_0x4f6b9a, _0x3ea4ac, _0x5ea3b0), _0x352206['subtract'](_0xfee4a4, _0x5ea3b0, _0xfee4a4), _0x352206['add'](_0x18cfb5, _0x5ea3b0, _0x18cfb5);
                break;
            case 0x1:
                var _0xc32bee = _0x5da476['_tempVecto' + 'r31'], _0x119d17 = _0x5da476['_tempVecto' + 'r32'], _0xe632 = _0x5da476['_tempVecto' + 'r33'], _0x3eb1bc = _0x5da476['_tempVecto' + 'r34'];
                if (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable']);
                else
                    _0x352206['multiply'](_0x208ddb, _0x55467e, _0x119d17), _0x352206['multiply'](_0x208ddb, _0x451b6b, _0xe632);
                var _0x87744d = _0x17fe5d * _0x2bce7f['stretchedB' + 'illboardLe' + 'ngthScale'], _0x11f397 = _0x352206['scalarLeng' + 'th'](_0x119d17) * _0x2bce7f['stretchedB' + 'illboardSp' + 'eedScale'] + _0x87744d, _0x2d9afb = _0x352206['scalarLeng' + 'th'](_0xe632) * _0x2bce7f['stretchedB' + 'illboardSp' + 'eedScale'] + _0x87744d, _0x36d5b5 = _0x5da476['_tempVecto' + 'r35'], _0x3b6fb9 = _0x5da476['_tempVecto' + 'r36'];
                _0x352206['normalize'](_0x119d17, _0x36d5b5), _0x352206['scale'](_0x36d5b5, _0x11f397, _0x3eb1bc), _0x352206['subtract'](_0xf904fc, _0x3eb1bc, _0x3eb1bc), _0x352206['normalize'](_0xe632, _0x3b6fb9), _0x352206['scale'](_0x3b6fb9, _0x2d9afb, _0xc32bee), _0x352206['add'](_0xcbe837, _0xc32bee, _0xc32bee), _0x26aa6f = _0x3ea4ac * _0x5da476['halfKSqrtO' + 'f2'], _0x352206['scale'](_0x4f6b9a, _0x26aa6f, _0x5ea3b0);
                var _0x267f29 = _0x5da476['_tempVecto' + 'r37'], _0x564477 = _0x5da476['_tempVecto' + 'r38'];
                _0x352206['scale'](_0x36d5b5, 0.5, _0x267f29), _0x352206['scale'](_0x3b6fb9, 0.5, _0x564477), _0x352206['multiply'](_0x267f29, _0x4f6b9a, _0x267f29), _0x352206['multiply'](_0x564477, _0x4f6b9a, _0x564477), _0x352206['add'](_0xfee4a4, _0x564477, _0xfee4a4), _0x352206['min'](_0xfee4a4, _0x3eb1bc, _0xfee4a4), _0x352206['subtract'](_0xfee4a4, _0x5ea3b0, _0xfee4a4), _0x352206['subtract'](_0x18cfb5, _0x267f29, _0x18cfb5), _0x352206['max'](_0x18cfb5, _0xc32bee, _0x18cfb5), _0x352206['add'](_0x18cfb5, _0x5ea3b0, _0x18cfb5);
                break;
            case 0x2:
                _0x3ea4ac *= Math['cos'](0.7853981633974483), _0x1b5538 = _0x3ea4ac * 0.5, _0x5ea3b0['x'] = _0x4f6b9a['x'] * _0x1b5538, _0x5ea3b0['y'] = _0x4f6b9a['z'] * _0x1b5538, _0x352206['subtract'](_0xfee4a4, _0x5ea3b0, _0xfee4a4), _0x352206['add'](_0x18cfb5, _0x5ea3b0, _0x18cfb5);
                break;
            case 0x3:
                _0x3ea4ac *= Math['cos'](0.7853981633974483), _0x1b5538 = _0x3ea4ac * 0.5, _0x352206['scale'](_0x4f6b9a, _0x1b5538, _0x5ea3b0), _0x352206['subtract'](_0xfee4a4, _0x5ea3b0, _0xfee4a4), _0x352206['add'](_0x18cfb5, _0x5ea3b0, _0x18cfb5);
                break;
            }
            this['_boundingB' + 'ox']['getCorners'](this['_boundingB' + 'oxCorners']);
        }
        ['_generateB' + 'ounds']() {
            var _0x4c1c95 = this['_owner'], _0x5901bd = _0x4c1c95['particleRe' + 'nderer'], _0x4df75d = this['_bounds']['getMin'](), _0x491f91 = this['_bounds']['getMax'](), _0x8f0ee1 = 0x0;
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                _0x8f0ee1 = this['_startLife' + 'timeConsta' + 'nt'];
                break;
            case 0x2:
                _0x8f0ee1 = this['_startLife' + 'timeConsta' + 'ntMax'];
                break;
            case 0x1:
            case 0x3:
            default:
                break;
            }
            var _0x5f285a = 0x0;
            switch (this['startSpeed' + 'Type']) {
            case 0x0:
                _0x5f285a = this['startSpeed' + 'Constant'];
                break;
            case 0x2:
                _0x5f285a = this['startSpeed' + 'ConstantMa' + 'x'];
                break;
            case 0x1:
            case 0x3:
            default:
                break;
            }
            var _0xa65efe = 0x0;
            if (this['threeDStar' + 'tSize'])
                switch (this['startSizeT' + 'ype']) {
                case 0x0:
                    _0xa65efe = Math['max'](this['startSizeC' + 'onstantSep' + 'arate']['x'], this['startSizeC' + 'onstantSep' + 'arate']['y'], this['startSizeC' + 'onstantSep' + 'arate']['z']);
                    break;
                case 0x2:
                    _0xa65efe = Math['max'](this['startSizeC' + 'onstantMax' + 'Separate']['x'], this['startSizeC' + 'onstantMax' + 'Separate']['y'], this['startSizeC' + 'onstantMax' + 'Separate']['z']);
                    break;
                case 0x1:
                case 0x3:
                default:
                    break;
                }
            else
                switch (this['startSizeT' + 'ype']) {
                case 0x0:
                    _0xa65efe = this['startSizeC' + 'onstant'];
                    break;
                case 0x2:
                    _0xa65efe = this['startSizeC' + 'onstantMax'];
                    break;
                case 0x1:
                case 0x3:
                default:
                    break;
                }
            var _0x31a620 = _0x5da476['_tempVecto' + 'r30'], _0x1dd619 = _0x5da476['_tempVecto' + 'r31'], _0x4dbffe = _0x5da476['_tempVecto' + 'r32'], _0x154ca4 = _0x5da476['_tempVecto' + 'r33'];
            _0x31a620['setValue'](0x0, 0x0, 0x1), _0x1dd619['setValue'](0x0, 0x0, 0x0), _0x4dbffe['setValue'](0x0, 0x0, 0x0), _0x154ca4['setValue'](0x0, 0x0, 0x0);
            if (this['shape'] && this['shape']['enable'])
                switch (this['shape']['shapeType']) {
                case _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Sphere']:
                    var _0x543a66 = this['shape'];
                    _0x31a620['setValue'](0x1, 0x1, 0x1), _0x1dd619['setValue'](0x1, 0x1, 0x1), _0x4dbffe['setValue'](_0x543a66['radius'], _0x543a66['radius'], _0x543a66['radius']), _0x154ca4['setValue'](_0x543a66['radius'], _0x543a66['radius'], _0x543a66['radius']);
                    break;
                case _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Hemisphere']:
                    var _0x368b0a = this['shape'];
                    _0x31a620['setValue'](0x1, 0x1, 0x1), _0x1dd619['setValue'](0x1, 0x1, 0x1), _0x4dbffe['setValue'](_0x368b0a['radius'], _0x368b0a['radius'], _0x368b0a['radius']), _0x154ca4['setValue'](_0x368b0a['radius'], _0x368b0a['radius'], 0x0);
                    break;
                case _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Cone']:
                    var _0x4e32c7 = this['shape'];
                    if (_0x4e32c7['emitType'] == 0x0 || _0x4e32c7['emitType'] == 0x1) {
                        var _0x5a5ead = _0x4e32c7['angle'], _0x291288 = Math['sin'](_0x5a5ead);
                        _0x31a620['setValue'](_0x291288, _0x291288, 0x1), _0x1dd619['setValue'](_0x291288, _0x291288, 0x0), _0x4dbffe['setValue'](_0x4e32c7['radius'], _0x4e32c7['radius'], 0x0), _0x154ca4['setValue'](_0x4e32c7['radius'], _0x4e32c7['radius'], 0x0);
                        break;
                    } else {
                        if (_0x4e32c7['emitType'] == 0x2 || _0x4e32c7['emitType'] == 0x3) {
                            var _0x5a5ead = _0x4e32c7['angle'], _0x291288 = Math['sin'](_0x5a5ead), _0x53c288 = _0x4e32c7['length'];
                            _0x31a620['setValue'](_0x291288, _0x291288, 0x1), _0x1dd619['setValue'](_0x291288, _0x291288, 0x0);
                            var _0x107fa9 = Math['tan'](_0x5a5ead), _0x460d1b = _0x4e32c7['radius'] + _0x53c288 * _0x107fa9;
                            _0x4dbffe['setValue'](_0x460d1b, _0x460d1b, _0x53c288), _0x154ca4['setValue'](_0x460d1b, _0x460d1b, 0x0);
                        }
                    }
                    break;
                case _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Box']:
                    var _0x404851 = this['shape'];
                    this['shape']['randomDire' + 'ction'] != 0x0 && (_0x31a620['setValue'](0x1, 0x1, 0x1), _0x1dd619['setValue'](0x1, 0x1, 0x1));
                    _0x4dbffe['setValue'](_0x404851['x'] / 0x2, _0x404851['y'] / 0x2, _0x404851['z'] / 0x2), _0x154ca4['setValue'](_0x404851['x'] / 0x2, _0x404851['y'] / 0x2, _0x404851['z'] / 0x2);
                    break;
                case _0x1f405c['ParticleSy' + 'stemShapeT' + 'ype']['Circle']:
                    var _0xc0c8ed = this['shape'];
                    _0x31a620['setValue'](0x1, 0x1, 0x1), _0x1dd619['setValue'](0x1, 0x1, 0x1), _0x4dbffe['setValue'](_0xc0c8ed['radius'], _0xc0c8ed['radius'], 0x0), _0x154ca4['setValue'](_0xc0c8ed['radius'], _0xc0c8ed['radius'], 0x0);
                    break;
                default:
                    break;
                }
            var _0x3b9e98 = 0x0, _0x5d5181 = _0x5901bd['renderMode'] == 0x4;
            switch (_0x5901bd['renderMode']) {
            case 0x0:
            case 0x1:
            case 0x2:
            case 0x3:
                _0x3b9e98 = _0x5da476['halfKSqrtO' + 'f2'];
                break;
            case 0x4:
                var _0x5b2b71 = _0x5901bd['mesh']['bounds'];
                _0x3b9e98 = Math['sqrt'](Math['pow'](_0x5b2b71['getExtent']()['x'], 0x2) + Math['pow'](_0x5b2b71['getExtent']()['y'], 0x2) + Math['pow'](_0x5b2b71['getExtent']()['z'], 0x2));
                break;
            default:
                break;
            }
            var _0x431d5d = _0x5da476['_tempVecto' + 'r36'];
            _0x431d5d['setValue'](0x1, 0x1, 0x1);
            if (this['sizeOverLi' + 'fetime'] && this['sizeOverLi' + 'fetime']['enable']) {
                var _0x10f056 = this['sizeOverLi' + 'fetime']['size'], _0x26492f = _0x10f056['getMaxSize' + 'InGradient'](_0x5d5181);
                _0x431d5d['setValue'](_0x26492f, _0x26492f, _0x26492f);
            }
            var _0x27303a = _0x3b9e98 * _0xa65efe;
            _0x352206['scale'](_0x431d5d, _0x27303a, _0x431d5d);
            var _0x5a6c85 = _0x5da476['_tempVecto' + 'r34'], _0x35f20d = _0x5da476['_tempVecto' + 'r35'];
            _0x5f285a > 0x0 ? (_0x352206['scale'](_0x31a620, _0x5f285a, _0x5a6c85), _0x352206['scale'](_0x1dd619, _0x5f285a, _0x35f20d)) : (_0x352206['scale'](_0x31a620, -_0x5f285a, _0x35f20d), _0x352206['scale'](_0x1dd619, -_0x5f285a, _0x5a6c85));
            if (this['velocityOv' + 'erLifetime'] && this['velocityOv' + 'erLifetime']['enable']) {
                var _0x36c704 = this['velocityOv' + 'erLifetime']['velocity'], _0x5433d6 = _0x5da476['_tempVecto' + 'r37'];
                _0x5433d6['setValue'](0x0, 0x0, 0x0);
                switch (_0x36c704['type']) {
                case 0x0:
                    _0x36c704['constant']['cloneTo'](_0x5433d6);
                    break;
                case 0x2:
                    _0x36c704['constantMa' + 'x']['cloneTo'](_0x5433d6);
                    break;
                case 0x1:
                    var _0x4de33d = _0x36c704['gradientX']['getAverage' + 'Value'](), _0xae804c = _0x36c704['gradientY']['getAverage' + 'Value'](), _0x25a417 = _0x36c704['gradientZ']['getAverage' + 'Value']();
                    _0x5433d6['setValue'](_0x4de33d, _0xae804c, _0x25a417);
                    break;
                case 0x3:
                    var _0x1cd876 = _0x36c704['gradientXM' + 'ax']['getAverage' + 'Value'](), _0x17c43e = _0x36c704['gradientYM' + 'ax']['getAverage' + 'Value'](), _0x3cc42b = _0x36c704['gradientZM' + 'ax']['getAverage' + 'Value']();
                    _0x5433d6['setValue'](_0x1cd876, _0x17c43e, _0x3cc42b);
                    break;
                default:
                    break;
                }
                this['velocityOv' + 'erLifetime']['space'] == 0x1 && _0x352206['transformV' + '3ToV3'](_0x5433d6, this['_owner']['transform']['worldMatri' + 'x'], _0x5433d6), _0x352206['add'](_0x5a6c85, _0x5433d6, _0x5a6c85), _0x352206['subtract'](_0x35f20d, _0x5433d6, _0x35f20d), _0x352206['max'](_0x5a6c85, _0x352206['_ZERO'], _0x5a6c85), _0x352206['max'](_0x35f20d, _0x352206['_ZERO'], _0x35f20d);
            }
            _0x352206['scale'](_0x5a6c85, _0x8f0ee1, _0x5a6c85), _0x352206['scale'](_0x35f20d, _0x8f0ee1, _0x35f20d);
            var _0x219e50 = this['gravityMod' + 'ifier'];
            if (_0x219e50 != 0x0) {
                var _0x1a314e = 0.5 * _0x5da476['g'] * _0x219e50 * _0x8f0ee1 * _0x8f0ee1, _0x5b207c = _0x5a6c85['y'] - _0x1a314e, _0x5825b0 = _0x35f20d['y'] + _0x1a314e;
                _0x5b207c = _0x5b207c > 0x0 ? _0x5b207c : 0x0, _0x5825b0 = _0x5825b0 > 0x0 ? _0x5825b0 : 0x0, this['_gravityOf' + 'fset']['setValue'](_0x5a6c85['y'] - _0x5b207c, _0x5825b0 - _0x35f20d['y']);
            }
            _0x352206['add'](_0x5a6c85, _0x431d5d, _0x491f91), _0x352206['add'](_0x491f91, _0x4dbffe, _0x491f91), _0x352206['add'](_0x35f20d, _0x431d5d, _0x4df75d), _0x352206['add'](_0x4df75d, _0x154ca4, _0x4df75d), _0x352206['scale'](_0x4df75d, -0x1, _0x4df75d), this['_bounds']['setMin'](_0x4df75d), this['_bounds']['setMax'](_0x491f91);
        }
        get ['customBoun' + 'ds']() {
            return this['_customBou' + 'nds'];
        }
        set ['customBoun' + 'ds'](_0x11bf0c) {
            _0x11bf0c ? this['_useCustom' + 'Bounds'] = !![] : this['_useCustom' + 'Bounds'] = ![], this['_customBou' + 'nds'] = _0x11bf0c;
        }
        ['_simulatio' + 'nSupported']() {
            if (this['simulation' + 'Space'] == 0x0)
                return ![];
            return !![];
        }
        ['_updateEmi' + 'ssion']() {
            if (!this['isAlive'])
                return;
            if (this['_simulateU' + 'pdate'])
                this['_simulateU' + 'pdate'] = ![];
            else {
                var _0x2560ff = this['_startUpda' + 'teLoopCoun' + 't'] !== _0x442335['Stat']['loopCount'] && !this['_isPaused'] ? this['_owner']['_scene']['timer']['_delta'] / 0x3e8 : 0x0;
                _0x2560ff = Math['min'](_0x5da476['_maxElapse' + 'dTime'], _0x2560ff * this['simulation' + 'Speed']), this['_updatePar' + 'ticles'](_0x2560ff);
            }
        }
        ['_updatePar' + 'ticles'](_0x23e343) {
            if (this['_ownerRend' + 'er']['renderMode'] === 0x4 && !this['_ownerRend' + 'er']['mesh'])
                return;
            this['_currentTi' + 'me'] += _0x23e343, this['_retireAct' + 'iveParticl' + 'es'](), this['_freeRetir' + 'edParticle' + 's'](), this['_totalDela' + 'yTime'] += _0x23e343;
            if (this['_totalDela' + 'yTime'] < this['_playStart' + 'Delay'])
                return;
            if (this['_emission']['enable'] && this['_isEmittin' + 'g'] && !this['_isPaused'])
                this['_advanceTi' + 'me'](_0x23e343, this['_currentTi' + 'me']);
        }
        ['_updatePar' + 'ticlesSimu' + 'lationRest' + 'art'](_0x5930e1) {
            this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_burstsInd' + 'ex'] = 0x0, this['_frameRate' + 'Time'] = _0x5930e1, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_currentTi' + 'me'] = _0x5930e1;
            var _0x1a3ad2 = _0x5930e1;
            if (_0x1a3ad2 < this['_playStart' + 'Delay']) {
                this['_totalDela' + 'yTime'] = _0x1a3ad2;
                return;
            }
            if (this['_emission']['enable'])
                this['_advanceTi' + 'me'](_0x5930e1, _0x5930e1);
        }
        ['_retireAct' + 'iveParticl' + 'es']() {
            const _0x14d103 = 0.0001;
            while (this['_firstActi' + 'veElement'] != this['_firstNewE' + 'lement']) {
                var _0x1d5c68 = this['_firstActi' + 'veElement'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], _0x31cd69 = _0x1d5c68 + this['_timeIndex'], _0x578083 = this['_currentTi' + 'me'] - this['_vertices'][_0x31cd69];
                if (_0x578083 + _0x14d103 < this['_vertices'][_0x1d5c68 + this['_startLife' + 'TimeIndex']])
                    break;
                this['_vertices'][_0x31cd69] = this['_drawCount' + 'er'], this['_firstActi' + 'veElement']++;
                if (this['_firstActi' + 'veElement'] >= this['_bufferMax' + 'Particles'])
                    this['_firstActi' + 'veElement'] = 0x0;
            }
        }
        ['_freeRetir' + 'edParticle' + 's']() {
            while (this['_firstReti' + 'redElement'] != this['_firstActi' + 'veElement']) {
                var _0x436041 = this['_drawCount' + 'er'] - this['_vertices'][this['_firstReti' + 'redElement'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'] + this['_timeIndex']];
                this['_firstReti' + 'redElement']++;
                if (this['_firstReti' + 'redElement'] >= this['_bufferMax' + 'Particles'])
                    this['_firstReti' + 'redElement'] = 0x0;
            }
        }
        ['_burst'](_0x12f0bd, _0x58eaa0) {
            var _0x1415f9 = 0x0, _0x4ba116 = this['_emission']['_bursts'];
            for (var _0x960e61 = _0x4ba116['length']; this['_burstsInd' + 'ex'] < _0x960e61; this['_burstsInd' + 'ex']++) {
                var _0x1d3c32 = _0x4ba116[this['_burstsInd' + 'ex']], _0x1dbb36 = _0x1d3c32['time'];
                if (_0x12f0bd <= _0x1dbb36 && _0x1dbb36 < _0x58eaa0) {
                    var _0x5e6f1b;
                    this['autoRandom' + 'Seed'] ? _0x5e6f1b = _0x442335['MathUtil']['lerp'](_0x1d3c32['minCount'], _0x1d3c32['maxCount'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x0], _0x5e6f1b = _0x442335['MathUtil']['lerp'](_0x1d3c32['minCount'], _0x1d3c32['maxCount'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x0] = this['_rand']['seed']), _0x1415f9 += _0x5e6f1b;
                } else
                    break;
            }
            return _0x1415f9;
        }
        ['_advanceTi' + 'me'](_0x5aaf2e, _0x2abc50) {
            var _0x53a41a, _0x4980df = this['_emissionT' + 'ime'];
            this['_emissionT' + 'ime'] += _0x5aaf2e;
            var _0x5b7ba5 = 0x0;
            if (this['_emissionT' + 'ime'] > this['duration']) {
                if (this['looping'])
                    _0x5b7ba5 += this['_burst'](_0x4980df, this['_emissionT' + 'ime']), this['_emissionT' + 'ime'] -= this['duration'], this['_burstsInd' + 'ex'] = 0x0, _0x5b7ba5 += this['_burst'](0x0, this['_emissionT' + 'ime']);
                else {
                    _0x5b7ba5 = Math['min'](this['maxParticl' + 'es'] - this['aliveParti' + 'cleCount'], _0x5b7ba5);
                    for (_0x53a41a = 0x0; _0x53a41a < _0x5b7ba5; _0x53a41a++)
                        this['emit'](_0x2abc50);
                    this['_isPlaying'] = ![], this['stop']();
                    return;
                }
            } else
                _0x5b7ba5 += this['_burst'](_0x4980df, this['_emissionT' + 'ime']);
            _0x5b7ba5 = Math['min'](this['maxParticl' + 'es'] - this['aliveParti' + 'cleCount'], _0x5b7ba5);
            for (_0x53a41a = 0x0; _0x53a41a < _0x5b7ba5; _0x53a41a++)
                this['emit'](_0x2abc50);
            var _0x4199d0 = this['emission']['emissionRa' + 'te'];
            if (_0x4199d0 > 0x0) {
                var _0x47658e = 0x1 / _0x4199d0;
                this['_frameRate' + 'Time'] += _0x47658e, this['_frameRate' + 'Time'] = this['_currentTi' + 'me'] - (this['_currentTi' + 'me'] - this['_frameRate' + 'Time']) % this['_maxStartL' + 'ifetime'];
                while (this['_frameRate' + 'Time'] <= _0x2abc50) {
                    if (this['emit'](this['_frameRate' + 'Time']))
                        this['_frameRate' + 'Time'] += _0x47658e;
                    else
                        break;
                }
                this['_frameRate' + 'Time'] = Math['floor'](_0x2abc50 / _0x47658e) * _0x47658e;
            }
        }
        ['_initBuffe' + 'rDatas']() {
            if (this['_vertexBuf' + 'fer']) {
                var _0x1dbef3 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['indexCount'] * 0x2;
                this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), _0x442335['Resource']['_addMemory'](-_0x1dbef3, -_0x1dbef3);
            }
            var _0x2bb435 = _0x442335['LayaGL']['instance'], _0x3f0658 = this['_ownerRend' + 'er'], _0xea4836 = _0x3f0658['renderMode'];
            if (_0xea4836 !== -0x1 && this['maxParticl' + 'es'] > 0x0) {
                var _0x412404, _0x436765, _0x1633df, _0x268067, _0x182bf5, _0x595b93, _0x54f4a2, _0x1c897c = 0x0, _0x1dbef3 = 0x0, _0x441346 = _0x3f0658['mesh'];
                if (_0xea4836 === 0x4) {
                    if (_0x441346) {
                        _0x54f4a2 = _0xcd1367['vertexDecl' + 'aration'], this['_floatCoun' + 'tPerVertex'] = _0x54f4a2['vertexStri' + 'de'] / 0x4, this['_startLife' + 'TimeIndex'] = 0xc, this['_timeIndex'] = 0x10, this['_vertexStr' + 'ide'] = _0x441346['_vertexCou' + 'nt'];
                        var _0x459028 = this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide'], _0x3ef250 = Math['floor'](_0x459028 / 0xffff) + 0x1, _0x497f24 = _0x459028 % 0xffff;
                        if (_0x3ef250 > 0x1)
                            throw new Error('ShurikenPa' + 'rticleSyst' + 'em:the\x20max' + 'ParticleCo' + 'unt\x20multip' + 'ly\x20mesh\x20ve' + 'rtexCount\x20' + 'is\x20large\x20t' + 'han\x2065535.');
                        _0x1c897c = _0x54f4a2['vertexStri' + 'de'] * _0x497f24, this['_vertexBuf' + 'fer'] = new _0x251441(_0x1c897c, _0x2bb435['DYNAMIC_DR' + 'AW']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x54f4a2, this['_vertices'] = new Float32Array(this['_floatCoun' + 'tPerVertex'] * _0x497f24), this['_indexStri' + 'de'] = _0x441346['_indexBuff' + 'er']['indexCount'];
                        var _0x1b857c = _0x441346['_indexBuff' + 'er']['getData'](), _0x4f337e = this['_bufferMax' + 'Particles'] * this['_indexStri' + 'de'];
                        this['_indexBuff' + 'er'] = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], _0x4f337e, _0x2bb435['STATIC_DRA' + 'W']), _0x412404 = new Uint16Array(_0x4f337e), _0x1dbef3 = _0x1c897c + _0x4f337e * 0x2, _0x182bf5 = 0x0;
                        for (_0x436765 = 0x0; _0x436765 < this['_bufferMax' + 'Particles']; _0x436765++) {
                            var _0x59a484 = _0x436765 * this['_vertexStr' + 'ide'];
                            for (_0x1633df = 0x0, _0x268067 = _0x1b857c['length']; _0x1633df < _0x268067; _0x1633df++)
                                _0x412404[_0x182bf5++] = _0x59a484 + _0x1b857c[_0x1633df];
                        }
                        this['_indexBuff' + 'er']['setData'](_0x412404), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
                    }
                } else {
                    _0x54f4a2 = _0x9492db['vertexDecl' + 'aration'], this['_floatCoun' + 'tPerVertex'] = _0x54f4a2['vertexStri' + 'de'] / 0x4, this['_startLife' + 'TimeIndex'] = 0x7, this['_timeIndex'] = 0xb, this['_vertexStr' + 'ide'] = 0x4, _0x1c897c = _0x54f4a2['vertexStri' + 'de'] * this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide'], this['_vertexBuf' + 'fer'] = new _0x251441(_0x1c897c, _0x2bb435['DYNAMIC_DR' + 'AW']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x54f4a2, this['_vertices'] = new Float32Array(this['_floatCoun' + 'tPerVertex'] * this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide']);
                    for (_0x436765 = 0x0; _0x436765 < this['_bufferMax' + 'Particles']; _0x436765++) {
                        _0x595b93 = _0x436765 * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], this['_vertices'][_0x595b93] = -0.5, this['_vertices'][_0x595b93 + 0x1] = -0.5, this['_vertices'][_0x595b93 + 0x2] = 0x0, this['_vertices'][_0x595b93 + 0x3] = 0x1, _0x595b93 += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x595b93] = 0.5, this['_vertices'][_0x595b93 + 0x1] = -0.5, this['_vertices'][_0x595b93 + 0x2] = 0x1, this['_vertices'][_0x595b93 + 0x3] = 0x1, _0x595b93 += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x595b93] = 0.5, this['_vertices'][_0x595b93 + 0x1] = 0.5, this['_vertices'][_0x595b93 + 0x2] = 0x1, this['_vertices'][_0x595b93 + 0x3] = 0x0, _0x595b93 += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x595b93] = -0.5, this['_vertices'][_0x595b93 + 0x1] = 0.5, this['_vertices'][_0x595b93 + 0x2] = 0x0, this['_vertices'][_0x595b93 + 0x3] = 0x0;
                    }
                    this['_indexStri' + 'de'] = 0x6, this['_indexBuff' + 'er'] = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], this['_bufferMax' + 'Particles'] * 0x6, _0x2bb435['STATIC_DRA' + 'W']), _0x412404 = new Uint16Array(this['_bufferMax' + 'Particles'] * 0x6);
                    for (_0x436765 = 0x0; _0x436765 < this['_bufferMax' + 'Particles']; _0x436765++) {
                        _0x182bf5 = _0x436765 * 0x6;
                        var _0x5b9b3c = _0x436765 * this['_vertexStr' + 'ide'], _0x5ff11b = _0x5b9b3c + 0x2;
                        _0x412404[_0x182bf5++] = _0x5b9b3c, _0x412404[_0x182bf5++] = _0x5ff11b, _0x412404[_0x182bf5++] = _0x5b9b3c + 0x1, _0x412404[_0x182bf5++] = _0x5b9b3c, _0x412404[_0x182bf5++] = _0x5b9b3c + 0x3, _0x412404[_0x182bf5++] = _0x5ff11b;
                    }
                    this['_indexBuff' + 'er']['setData'](_0x412404), _0x1dbef3 = _0x1c897c + this['_bufferMax' + 'Particles'] * 0x6 * 0x2, this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
                }
                _0x442335['Resource']['_addMemory'](_0x1dbef3, _0x1dbef3);
            }
        }
        ['destroy']() {
            super['destroy']();
            var _0x806cc1 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['indexCount'] * 0x2;
            _0x442335['Resource']['_addMemory'](-_0x806cc1, -_0x806cc1), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_emission']['destroy'](), this['_boundingB' + 'ox'] = null, this['_boundingS' + 'phere'] = null, this['_boundingB' + 'oxCorners'] = null, this['_bounds'] = null, this['_customBou' + 'nds'] = null, this['_bufferSta' + 'te'] = null, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_owner'] = null, this['_vertices'] = null, this['_indexBuff' + 'er'] = null, this['_emission'] = null, this['_shape'] = null, this['startLifeT' + 'imeGradien' + 't'] = null, this['startLifeT' + 'imeGradien' + 'tMin'] = null, this['startLifeT' + 'imeGradien' + 'tMax'] = null, this['startSizeC' + 'onstantSep' + 'arate'] = null, this['startSizeC' + 'onstantMin' + 'Separate'] = null, this['startSizeC' + 'onstantMax' + 'Separate'] = null, this['startRotat' + 'ionConstan' + 'tSeparate'] = null, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = null, this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = null, this['startColor' + 'Constant'] = null, this['startColor' + 'ConstantMi' + 'n'] = null, this['startColor' + 'ConstantMa' + 'x'] = null, this['_velocityO' + 'verLifetim' + 'e'] = null, this['_colorOver' + 'Lifetime'] = null, this['_sizeOverL' + 'ifetime'] = null, this['_rotationO' + 'verLifetim' + 'e'] = null, this['_textureSh' + 'eetAnimati' + 'on'] = null;
        }
        ['emit'](_0xaa548f) {
            var _0x4110d1 = _0x5da476['_tempPosit' + 'ion'], _0x42315f = _0x5da476['_tempDirec' + 'tion'];
            if (this['_shape'] && this['_shape']['enable']) {
                if (this['autoRandom' + 'Seed'])
                    this['_shape']['generatePo' + 'sitionAndD' + 'irection'](_0x4110d1, _0x42315f);
                else
                    this['_shape']['generatePo' + 'sitionAndD' + 'irection'](_0x4110d1, _0x42315f, this['_rand'], this['_randomSee' + 'ds']);
            } else
                _0x4110d1['x'] = _0x4110d1['y'] = _0x4110d1['z'] = 0x0, _0x42315f['x'] = _0x42315f['y'] = 0x0, _0x42315f['z'] = 0x1;
            return this['addParticl' + 'e'](_0x4110d1, _0x42315f, _0xaa548f);
        }
        ['addParticl' + 'e'](_0x137147, _0x2e27fb, _0x133e5e) {
            _0x352206['normalize'](_0x2e27fb, _0x2e27fb);
            var _0x30677a = this['_firstFree' + 'Element'] + 0x1;
            if (_0x30677a >= this['_bufferMax' + 'Particles'])
                _0x30677a = 0x0;
            if (_0x30677a === this['_firstReti' + 'redElement'])
                return ![];
            var _0x31b36b = this['_owner']['transform'];
            _0x56c6b5['create'](this, this['_ownerRend' + 'er'], _0x31b36b);
            var _0x4d82f5 = this['_currentTi' + 'me'] - _0x133e5e;
            if (_0x4d82f5 >= _0x56c6b5['startLifeT' + 'ime'])
                return !![];
            var _0x5bfd4c, _0x1fd73f;
            this['simulation' + 'Space'] == 0x0 && (_0x5bfd4c = _0x31b36b['position'], _0x1fd73f = _0x31b36b['rotation']);
            var _0x50ba03;
            switch (this['startSpeed' + 'Type']) {
            case 0x0:
                _0x50ba03 = this['startSpeed' + 'Constant'];
                break;
            case 0x2:
                this['autoRandom' + 'Seed'] ? _0x50ba03 = _0x442335['MathUtil']['lerp'](this['startSpeed' + 'ConstantMi' + 'n'], this['startSpeed' + 'ConstantMa' + 'x'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x8], _0x50ba03 = _0x442335['MathUtil']['lerp'](this['startSpeed' + 'ConstantMi' + 'n'], this['startSpeed' + 'ConstantMa' + 'x'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x8] = this['_rand']['seed']);
                break;
            }
            var _0x43c0fb, _0x56b0db, _0x1515db, _0x2abbe1, _0x5e2f3b, _0x1c45e4, _0x2caa88, _0x1ab3e5 = this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'];
            if (_0x1ab3e5) {
                var _0x73d44f = this['_velocityO' + 'verLifetim' + 'e']['velocity']['type'];
                _0x73d44f === 0x2 || _0x73d44f === 0x3 ? this['autoRandom' + 'Seed'] ? (_0x43c0fb = Math['random'](), _0x56b0db = Math['random'](), _0x1515db = Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x9], _0x43c0fb = this['_rand']['getFloat'](), _0x56b0db = this['_rand']['getFloat'](), _0x1515db = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0x9] = this['_rand']['seed']) : _0x1ab3e5 = ![];
            } else
                _0x1ab3e5 = ![];
            var _0x35a20d = this['_colorOver' + 'Lifetime'] && this['_colorOver' + 'Lifetime']['enable'];
            if (_0x35a20d) {
                var _0x10912c = this['_colorOver' + 'Lifetime']['color']['type'];
                _0x10912c === 0x3 ? this['autoRandom' + 'Seed'] ? _0x2abbe1 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xa], _0x2abbe1 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xa] = this['_rand']['seed']) : _0x35a20d = ![];
            } else
                _0x35a20d = ![];
            var _0x2541ab = this['_sizeOverL' + 'ifetime'] && this['_sizeOverL' + 'ifetime']['enable'];
            if (_0x2541ab) {
                var _0x3cba45 = this['_sizeOverL' + 'ifetime']['size']['type'];
                _0x3cba45 === 0x3 ? this['autoRandom' + 'Seed'] ? _0x5e2f3b = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xb], _0x5e2f3b = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xb] = this['_rand']['seed']) : _0x2541ab = ![];
            } else
                _0x2541ab = ![];
            var _0x239a7e = this['_rotationO' + 'verLifetim' + 'e'] && this['_rotationO' + 'verLifetim' + 'e']['enable'];
            if (_0x239a7e) {
                var _0x51b286 = this['_rotationO' + 'verLifetim' + 'e']['angularVel' + 'ocity']['type'];
                _0x51b286 === 0x2 || _0x51b286 === 0x3 ? this['autoRandom' + 'Seed'] ? _0x1c45e4 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xc], _0x1c45e4 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xc] = this['_rand']['seed']) : _0x239a7e = ![];
            } else
                _0x239a7e = ![];
            var _0x219a30 = this['_textureSh' + 'eetAnimati' + 'on'] && this['_textureSh' + 'eetAnimati' + 'on']['enable'];
            if (_0x219a30) {
                var _0x3088cc = this['_textureSh' + 'eetAnimati' + 'on']['frame']['type'];
                _0x3088cc === 0x3 ? this['autoRandom' + 'Seed'] ? _0x2caa88 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xf], _0x2caa88 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xf] = this['_rand']['seed']) : _0x219a30 = ![];
            } else
                _0x219a30 = ![];
            var _0x49f4e1 = this['_firstFree' + 'Element'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], _0x2eaeac = _0x56c6b5['startUVInf' + 'o'][0x0], _0x5c9afc = _0x56c6b5['startUVInf' + 'o'][0x1], _0x361e4c = _0x56c6b5['startUVInf' + 'o'][0x2], _0x43ff1d = _0x56c6b5['startUVInf' + 'o'][0x3], _0xf40e01, _0x3b9069, _0x2f71fa, _0x4aaba7, _0x5d568a, _0x31440a, _0x4d66b9 = this['_ownerRend' + 'er'];
            if (_0x4d66b9['renderMode'] === 0x4) {
                var _0x501f72 = _0x4d66b9['mesh']['_vertexBuf' + 'fer'];
                _0xf40e01 = _0x501f72['getFloat32' + 'Data']();
                var _0x4060f6 = _0x501f72['vertexDecl' + 'aration'];
                _0x2f71fa = _0x4060f6['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_POSIT' + 'ION0'])['_offset'] / 0x4;
                var _0x5f438f = _0x4060f6['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_COLOR' + '0']);
                _0x4aaba7 = _0x5f438f ? _0x5f438f['_offset'] / 0x4 : -0x1;
                var _0x13ecb4 = _0x4060f6['getVertexE' + 'lementByUs' + 'age'](_0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                _0x5d568a = _0x13ecb4 ? _0x13ecb4['_offset'] / 0x4 : -0x1, _0x3b9069 = _0x4060f6['vertexStri' + 'de'] / 0x4, _0x31440a = 0x0;
            } else {
                this['_vertices'][_0x49f4e1 + 0x2] = _0x361e4c, this['_vertices'][_0x49f4e1 + 0x3] = _0x43ff1d + _0x5c9afc;
                var _0x15f548 = _0x49f4e1 + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x15f548 + 0x2] = _0x361e4c + _0x2eaeac, this['_vertices'][_0x15f548 + 0x3] = _0x43ff1d + _0x5c9afc;
                var _0x3c5f40 = _0x15f548 + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x3c5f40 + 0x2] = _0x361e4c + _0x2eaeac, this['_vertices'][_0x3c5f40 + 0x3] = _0x43ff1d;
                var _0x3f20b0 = _0x3c5f40 + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x3f20b0 + 0x2] = _0x361e4c, this['_vertices'][_0x3f20b0 + 0x3] = _0x43ff1d;
            }
            for (var _0x2fe847 = _0x49f4e1, _0x162096 = _0x49f4e1 + this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide']; _0x2fe847 < _0x162096; _0x2fe847 += this['_floatCoun' + 'tPerVertex']) {
                var _0x2ea3e1;
                if (_0x4d66b9['renderMode'] === 0x4) {
                    _0x2ea3e1 = _0x2fe847;
                    var _0x2779c5 = _0x3b9069 * _0x31440a++, _0x25f8e5 = _0x2779c5 + _0x2f71fa;
                    this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5++], this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5++], this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5], _0x4aaba7 === -0x1 ? (this['_vertices'][_0x2ea3e1++] = 0x1, this['_vertices'][_0x2ea3e1++] = 0x1, this['_vertices'][_0x2ea3e1++] = 0x1, this['_vertices'][_0x2ea3e1++] = 0x1) : (_0x25f8e5 = _0x2779c5 + _0x4aaba7, this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5++], this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5++], this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5++], this['_vertices'][_0x2ea3e1++] = _0xf40e01[_0x25f8e5]), _0x5d568a === -0x1 ? (this['_vertices'][_0x2ea3e1++] = 0x0, this['_vertices'][_0x2ea3e1++] = 0x0) : (_0x25f8e5 = _0x2779c5 + _0x5d568a, this['_vertices'][_0x2ea3e1++] = _0x361e4c + _0xf40e01[_0x25f8e5++] * _0x2eaeac, this['_vertices'][_0x2ea3e1++] = _0x43ff1d + _0xf40e01[_0x25f8e5] * _0x5c9afc);
                } else
                    _0x2ea3e1 = _0x2fe847 + 0x4;
                this['_vertices'][_0x2ea3e1++] = _0x137147['x'], this['_vertices'][_0x2ea3e1++] = _0x137147['y'], this['_vertices'][_0x2ea3e1++] = _0x137147['z'], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startLifeT' + 'ime'], this['_vertices'][_0x2ea3e1++] = _0x2e27fb['x'], this['_vertices'][_0x2ea3e1++] = _0x2e27fb['y'], this['_vertices'][_0x2ea3e1++] = _0x2e27fb['z'], this['_vertices'][_0x2ea3e1++] = _0x133e5e, this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startColor']['x'], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startColor']['y'], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startColor']['z'], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startColor']['w'], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startSize'][0x0], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startSize'][0x1], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startSize'][0x2], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startRotat' + 'ion'][0x0], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startRotat' + 'ion'][0x1], this['_vertices'][_0x2ea3e1++] = _0x56c6b5['startRotat' + 'ion'][0x2], this['_vertices'][_0x2ea3e1++] = _0x50ba03, _0x35a20d && (this['_vertices'][_0x2ea3e1 + 0x1] = _0x2abbe1), _0x2541ab && (this['_vertices'][_0x2ea3e1 + 0x2] = _0x5e2f3b), _0x239a7e && (this['_vertices'][_0x2ea3e1 + 0x3] = _0x1c45e4), _0x219a30 && (this['_vertices'][_0x2ea3e1 + 0x4] = _0x2caa88);
                _0x1ab3e5 && (this['_vertices'][_0x2ea3e1 + 0x5] = _0x43c0fb, this['_vertices'][_0x2ea3e1 + 0x6] = _0x56b0db, this['_vertices'][_0x2ea3e1 + 0x7] = _0x1515db);
                switch (this['simulation' + 'Space']) {
                case 0x0:
                    _0x2ea3e1 += 0x8, this['_vertices'][_0x2ea3e1++] = _0x5bfd4c['x'], this['_vertices'][_0x2ea3e1++] = _0x5bfd4c['y'], this['_vertices'][_0x2ea3e1++] = _0x5bfd4c['z'], this['_vertices'][_0x2ea3e1++] = _0x1fd73f['x'], this['_vertices'][_0x2ea3e1++] = _0x1fd73f['y'], this['_vertices'][_0x2ea3e1++] = _0x1fd73f['z'], this['_vertices'][_0x2ea3e1++] = _0x1fd73f['w'];
                    break;
                case 0x1:
                    break;
                default:
                    throw new Error('ShurikenPa' + 'rticleMate' + 'rial:\x20Simu' + 'lationSpac' + 'e\x20value\x20is' + '\x20invalid.');
                }
            }
            return this['_firstFree' + 'Element'] = _0x30677a, !![];
        }
        ['addNewPart' + 'iclesToVer' + 'texBuffer']() {
            var _0x596328, _0x125195 = this['_vertexStr' + 'ide'] * this['_floatCoun' + 'tPerVertex'] * 0x4;
            this['_firstNewE' + 'lement'] < this['_firstFree' + 'Element'] ? (_0x596328 = this['_firstNewE' + 'lement'] * _0x125195, this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], _0x596328, _0x596328, (this['_firstFree' + 'Element'] - this['_firstNewE' + 'lement']) * _0x125195)) : (_0x596328 = this['_firstNewE' + 'lement'] * _0x125195, this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], _0x596328, _0x596328, (this['_bufferMax' + 'Particles'] - this['_firstNewE' + 'lement']) * _0x125195), this['_firstFree' + 'Element'] > 0x0 && this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, this['_firstFree' + 'Element'] * _0x125195)), this['_firstNewE' + 'lement'] = this['_firstFree' + 'Element'];
        }
        ['_getType']() {
            return _0x5da476['_type'];
        }
        ['_prepareRe' + 'nder'](_0x2e8e1d) {
            if (this['_updateMas' + 'k'] != _0x442335['Stat']['loopCount']) {
                this['_updateMas' + 'k'] = _0x442335['Stat']['loopCount'], this['_updateEmi' + 'ssion']();
                if (this['_firstNewE' + 'lement'] != this['_firstFree' + 'Element'])
                    this['addNewPart' + 'iclesToVer' + 'texBuffer']();
                this['_drawCount' + 'er']++;
            }
            if (this['_firstActi' + 'veElement'] != this['_firstFree' + 'Element'])
                return !![];
            else
                return ![];
        }
        ['_render'](_0x13715c) {
            this['_bufferSta' + 'te']['bind']();
            var _0x4bdcc0, _0x35e3a3 = _0x442335['LayaGL']['instance'];
            this['_firstActi' + 'veElement'] < this['_firstFree' + 'Element'] ? (_0x4bdcc0 = (this['_firstFree' + 'Element'] - this['_firstActi' + 'veElement']) * this['_indexStri' + 'de'], _0x35e3a3['drawElemen' + 'ts'](_0x35e3a3['TRIANGLES'], _0x4bdcc0, _0x35e3a3['UNSIGNED_S' + 'HORT'], 0x2 * this['_firstActi' + 'veElement'] * this['_indexStri' + 'de']), _0x442335['Stat']['trianglesF' + 'aces'] += _0x4bdcc0 / 0x3, _0x442335['Stat']['renderBatc' + 'hes']++) : (_0x4bdcc0 = (this['_bufferMax' + 'Particles'] - this['_firstActi' + 'veElement']) * this['_indexStri' + 'de'], _0x35e3a3['drawElemen' + 'ts'](_0x35e3a3['TRIANGLES'], _0x4bdcc0, _0x35e3a3['UNSIGNED_S' + 'HORT'], 0x2 * this['_firstActi' + 'veElement'] * this['_indexStri' + 'de']), _0x442335['Stat']['trianglesF' + 'aces'] += _0x4bdcc0 / 0x3, _0x442335['Stat']['renderBatc' + 'hes']++, this['_firstFree' + 'Element'] > 0x0 && (_0x4bdcc0 = this['_firstFree' + 'Element'] * this['_indexStri' + 'de'], _0x35e3a3['drawElemen' + 'ts'](_0x35e3a3['TRIANGLES'], _0x4bdcc0, _0x35e3a3['UNSIGNED_S' + 'HORT'], 0x0), _0x442335['Stat']['trianglesF' + 'aces'] += _0x4bdcc0 / 0x3, _0x442335['Stat']['renderBatc' + 'hes']++));
        }
        ['play']() {
            this['_burstsInd' + 'ex'] = 0x0, this['_isEmittin' + 'g'] = !![], this['_isPlaying'] = !![], this['_isPaused'] = ![], this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0;
            if (!this['autoRandom' + 'Seed']) {
                for (var _0x19bcbb = 0x0, _0xf6c302 = this['_randomSee' + 'ds']['length']; _0x19bcbb < _0xf6c302; _0x19bcbb++)
                    this['_randomSee' + 'ds'][_0x19bcbb] = this['randomSeed'][0x0] + _0x5da476['_RANDOMOFF' + 'SET'][_0x19bcbb];
            }
            switch (this['startDelay' + 'Type']) {
            case 0x0:
                this['_playStart' + 'Delay'] = this['startDelay'];
                break;
            case 0x1:
                this['autoRandom' + 'Seed'] ? this['_playStart' + 'Delay'] = _0x442335['MathUtil']['lerp'](this['startDelay' + 'Min'], this['startDelay' + 'Max'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x2], this['_playStart' + 'Delay'] = _0x442335['MathUtil']['lerp'](this['startDelay' + 'Min'], this['startDelay' + 'Max'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x2] = this['_rand']['seed']);
                break;
            default:
                throw new Error('Utils3D:\x20s' + 'tartDelayT' + 'ype\x20is\x20inv' + 'alid.');
            }
            this['_frameRate' + 'Time'] = this['_currentTi' + 'me'] + this['_playStart' + 'Delay'], this['_startUpda' + 'teLoopCoun' + 't'] = _0x442335['Stat']['loopCount'];
        }
        ['pause']() {
            this['_isPaused'] = !![];
        }
        ['simulate'](_0x274fab, _0x951a6 = !![]) {
            this['_simulateU' + 'pdate'] = !![], _0x951a6 ? this['_updatePar' + 'ticlesSimu' + 'lationRest' + 'art'](_0x274fab) : (this['_isPaused'] = ![], this['_updatePar' + 'ticles'](_0x274fab)), this['pause']();
        }
        ['stop']() {
            this['_burstsInd' + 'ex'] = 0x0, this['_isEmittin' + 'g'] = ![], this['_emissionT' + 'ime'] = 0x0;
        }
        ['cloneTo'](_0x5eccef) {
            var _0xb1043d = _0x5eccef;
            _0xb1043d['_useCustom' + 'Bounds'] = this['_useCustom' + 'Bounds'], this['_customBou' + 'nds'] && this['_customBou' + 'nds']['cloneTo'](_0xb1043d['_customBou' + 'nds']), _0xb1043d['duration'] = this['duration'], _0xb1043d['looping'] = this['looping'], _0xb1043d['prewarm'] = this['prewarm'], _0xb1043d['startDelay' + 'Type'] = this['startDelay' + 'Type'], _0xb1043d['startDelay'] = this['startDelay'], _0xb1043d['startDelay' + 'Min'] = this['startDelay' + 'Min'], _0xb1043d['startDelay' + 'Max'] = this['startDelay' + 'Max'], _0xb1043d['_maxStartL' + 'ifetime'] = this['_maxStartL' + 'ifetime'], _0xb1043d['startLifet' + 'imeType'] = this['startLifet' + 'imeType'], _0xb1043d['startLifet' + 'imeConstan' + 't'] = this['startLifet' + 'imeConstan' + 't'], this['startLifeT' + 'imeGradien' + 't']['cloneTo'](_0xb1043d['startLifeT' + 'imeGradien' + 't']), _0xb1043d['startLifet' + 'imeConstan' + 'tMin'] = this['startLifet' + 'imeConstan' + 'tMin'], _0xb1043d['startLifet' + 'imeConstan' + 'tMax'] = this['startLifet' + 'imeConstan' + 'tMax'], this['startLifeT' + 'imeGradien' + 'tMin']['cloneTo'](_0xb1043d['startLifeT' + 'imeGradien' + 'tMin']), this['startLifeT' + 'imeGradien' + 'tMax']['cloneTo'](_0xb1043d['startLifeT' + 'imeGradien' + 'tMax']), _0xb1043d['startSpeed' + 'Type'] = this['startSpeed' + 'Type'], _0xb1043d['startSpeed' + 'Constant'] = this['startSpeed' + 'Constant'], _0xb1043d['startSpeed' + 'ConstantMi' + 'n'] = this['startSpeed' + 'ConstantMi' + 'n'], _0xb1043d['startSpeed' + 'ConstantMa' + 'x'] = this['startSpeed' + 'ConstantMa' + 'x'], _0xb1043d['threeDStar' + 'tSize'] = this['threeDStar' + 'tSize'], _0xb1043d['startSizeT' + 'ype'] = this['startSizeT' + 'ype'], _0xb1043d['startSizeC' + 'onstant'] = this['startSizeC' + 'onstant'], this['startSizeC' + 'onstantSep' + 'arate']['cloneTo'](_0xb1043d['startSizeC' + 'onstantSep' + 'arate']), _0xb1043d['startSizeC' + 'onstantMin'] = this['startSizeC' + 'onstantMin'], _0xb1043d['startSizeC' + 'onstantMax'] = this['startSizeC' + 'onstantMax'], this['startSizeC' + 'onstantMin' + 'Separate']['cloneTo'](_0xb1043d['startSizeC' + 'onstantMin' + 'Separate']), this['startSizeC' + 'onstantMax' + 'Separate']['cloneTo'](_0xb1043d['startSizeC' + 'onstantMax' + 'Separate']), _0xb1043d['threeDStar' + 'tRotation'] = this['threeDStar' + 'tRotation'], _0xb1043d['startRotat' + 'ionType'] = this['startRotat' + 'ionType'], _0xb1043d['startRotat' + 'ionConstan' + 't'] = this['startRotat' + 'ionConstan' + 't'], this['startRotat' + 'ionConstan' + 'tSeparate']['cloneTo'](_0xb1043d['startRotat' + 'ionConstan' + 'tSeparate']), _0xb1043d['startRotat' + 'ionConstan' + 'tMin'] = this['startRotat' + 'ionConstan' + 'tMin'], _0xb1043d['startRotat' + 'ionConstan' + 'tMax'] = this['startRotat' + 'ionConstan' + 'tMax'], this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te']['cloneTo'](_0xb1043d['startRotat' + 'ionConstan' + 'tMinSepara' + 'te']), this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te']['cloneTo'](_0xb1043d['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te']), _0xb1043d['randomizeR' + 'otationDir' + 'ection'] = this['randomizeR' + 'otationDir' + 'ection'], _0xb1043d['startColor' + 'Type'] = this['startColor' + 'Type'], this['startColor' + 'Constant']['cloneTo'](_0xb1043d['startColor' + 'Constant']), this['startColor' + 'ConstantMi' + 'n']['cloneTo'](_0xb1043d['startColor' + 'ConstantMi' + 'n']), this['startColor' + 'ConstantMa' + 'x']['cloneTo'](_0xb1043d['startColor' + 'ConstantMa' + 'x']), _0xb1043d['gravityMod' + 'ifier'] = this['gravityMod' + 'ifier'], _0xb1043d['simulation' + 'Space'] = this['simulation' + 'Space'], _0xb1043d['scaleMode'] = this['scaleMode'], _0xb1043d['playOnAwak' + 'e'] = this['playOnAwak' + 'e'], _0xb1043d['autoRandom' + 'Seed'] = this['autoRandom' + 'Seed'], _0xb1043d['randomSeed'][0x0] = this['randomSeed'][0x0], _0xb1043d['maxParticl' + 'es'] = this['maxParticl' + 'es'], this['_emission'] && (_0xb1043d['_emission'] = this['_emission']['clone']()), this['shape'] && (_0xb1043d['shape'] = this['shape']['clone']()), this['velocityOv' + 'erLifetime'] && (_0xb1043d['velocityOv' + 'erLifetime'] = this['velocityOv' + 'erLifetime']['clone']()), this['colorOverL' + 'ifetime'] && (_0xb1043d['colorOverL' + 'ifetime'] = this['colorOverL' + 'ifetime']['clone']()), this['sizeOverLi' + 'fetime'] && (_0xb1043d['sizeOverLi' + 'fetime'] = this['sizeOverLi' + 'fetime']['clone']()), this['rotationOv' + 'erLifetime'] && (_0xb1043d['rotationOv' + 'erLifetime'] = this['rotationOv' + 'erLifetime']['clone']()), this['textureShe' + 'etAnimatio' + 'n'] && (_0xb1043d['textureShe' + 'etAnimatio' + 'n'] = this['textureShe' + 'etAnimatio' + 'n']['clone']()), _0xb1043d['isPerforma' + 'nceMode'] = this['isPerforma' + 'nceMode'], _0xb1043d['_isEmittin' + 'g'] = this['_isEmittin' + 'g'], _0xb1043d['_isPlaying'] = this['_isPlaying'], _0xb1043d['_isPaused'] = this['_isPaused'], _0xb1043d['_playStart' + 'Delay'] = this['_playStart' + 'Delay'], _0xb1043d['_frameRate' + 'Time'] = this['_frameRate' + 'Time'], _0xb1043d['_emissionT' + 'ime'] = this['_emissionT' + 'ime'], _0xb1043d['_totalDela' + 'yTime'] = this['_totalDela' + 'yTime'], _0xb1043d['_burstsInd' + 'ex'] = this['_burstsInd' + 'ex'];
        }
        ['clone']() {
            var _0x46ebb6 = new _0x5da476(null);
            return this['cloneTo'](_0x46ebb6), _0x46ebb6;
        }
    }
    _0x5da476['_RANDOMOFF' + 'SET'] = new Uint32Array([
        0x23571a3e,
        0xc34f56fe,
        0x13371337,
        0x12460f3b,
        0x6aed452e,
        0xdec4aea1,
        0x96aa4de3,
        0x8d2c8431,
        0xf3857f6f,
        0xe0fbd834,
        0x13740583,
        0x591bc05c,
        0x40eb95e4,
        0xbc524e5f,
        0xaf502044,
        0xa614b381,
        0x1034e524,
        0xfc524e5f
    ]), _0x5da476['halfKSqrtO' + 'f2'] = 1.42 * 0.5, _0x5da476['g'] = 9.8, _0x5da476['_maxElapse' + 'dTime'] = 0x1 / 0x3, _0x5da476['_tempVecto' + 'r30'] = new _0x352206(), _0x5da476['_tempVecto' + 'r31'] = new _0x352206(), _0x5da476['_tempVecto' + 'r32'] = new _0x352206(), _0x5da476['_tempVecto' + 'r33'] = new _0x352206(), _0x5da476['_tempVecto' + 'r34'] = new _0x352206(), _0x5da476['_tempVecto' + 'r35'] = new _0x352206(), _0x5da476['_tempVecto' + 'r36'] = new _0x352206(), _0x5da476['_tempVecto' + 'r37'] = new _0x352206(), _0x5da476['_tempVecto' + 'r38'] = new _0x352206(), _0x5da476['_tempVecto' + 'r39'] = new _0x352206(), _0x5da476['_tempPosit' + 'ion'] = new _0x352206(), _0x5da476['_tempDirec' + 'tion'] = new _0x352206(), _0x5da476['_type'] = _0x355f63['_typeCount' + 'er']++;
    class _0x531ddc extends _0x22d3a2 {
        constructor() {
            super(null), this['_render'] = new _0x20ee3e(this), this['_particleS' + 'ystem'] = new _0x5da476(this);
            var _0x79393 = this['_render']['_renderEle' + 'ments'], _0x484372 = _0x79393[0x0] = new _0x5ca4bd();
            _0x484372['setTransfo' + 'rm'](this['_transform']), _0x484372['render'] = this['_render'], _0x484372['setGeometr' + 'y'](this['_particleS' + 'ystem']), _0x484372['material'] = _0x4d5b52['defaultMat' + 'erial'];
        }
        static ['__init__']() {
            _0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD'] = _0x18824e['getDefineB' + 'yName']('SPHERHBILL' + 'BOARD'), _0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD'] = _0x18824e['getDefineB' + 'yName']('STRETCHEDB' + 'ILLBOARD'), _0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD'] = _0x18824e['getDefineB' + 'yName']('HORIZONTAL' + 'BILLBOARD'), _0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D'] = _0x18824e['getDefineB' + 'yName']('VERTICALBI' + 'LLBOARD'), _0x39d5f7['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME'] = _0x18824e['getDefineB' + 'yName']('COLOROVERL' + 'IFETIME'), _0x39d5f7['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME'] = _0x18824e['getDefineB' + 'yName']('RANDOMCOLO' + 'ROVERLIFET' + 'IME'), _0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T'] = _0x18824e['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'CONSTANT'), _0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE'] = _0x18824e['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'CURVE'), _0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT'] = _0x18824e['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANT'), _0x39d5f7['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE'] = _0x18824e['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'E'), _0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE'] = _0x18824e['getDefineB' + 'yName']('TEXTURESHE' + 'ETANIMATIO' + 'NCURVE'), _0x39d5f7['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE'] = _0x18824e['getDefineB' + 'yName']('TEXTURESHE' + 'ETANIMATIO' + 'NRANDOMCUR' + 'VE'), _0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME'] = _0x18824e['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME'), _0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E'] = _0x18824e['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'SEPERATE'), _0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T'] = _0x18824e['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'CONSTANT'), _0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE'] = _0x18824e['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'CURVE'), _0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS'] = _0x18824e['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS'), _0x39d5f7['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES'] = _0x18824e['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES'), _0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE'] = _0x18824e['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMECURV' + 'E'), _0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE'] = _0x18824e['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMECURV' + 'ESEPERATE'), _0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S'] = _0x18824e['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMERAND' + 'OMCURVES'), _0x39d5f7['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE'] = _0x18824e['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMERAND' + 'OMCURVESSE' + 'PERATE'), _0x39d5f7['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH'] = _0x18824e['getDefineB' + 'yName']('RENDERMODE' + '_MESH'), _0x39d5f7['SHADERDEFI' + 'NE_SHAPE'] = _0x18824e['getDefineB' + 'yName']('SHAPE');
        }
        get ['particleSy' + 'stem']() {
            return this['_particleS' + 'ystem'];
        }
        get ['particleRe' + 'nderer']() {
            return this['_render'];
        }
        ['_parseModu' + 'le'](_0x36323d, _0x1ebd00) {
            for (var _0x4c2d58 in _0x1ebd00) {
                switch (_0x4c2d58) {
                case 'bases':
                    var _0x2682e9 = _0x1ebd00['bases'];
                    for (var _0x4cf27c in _0x2682e9)
                        _0x36323d[_0x4cf27c] = _0x2682e9[_0x4cf27c];
                    break;
                case 'vector2s':
                    var _0x5850e2 = _0x1ebd00['vector2s'];
                    for (var _0x4cf27c in _0x5850e2) {
                        var _0x21d953 = _0x36323d[_0x4cf27c], _0x4c2f93 = _0x5850e2[_0x4cf27c];
                        _0x21d953['setValue'](_0x4c2f93[0x0], _0x4c2f93[0x1]), _0x36323d[_0x4cf27c] = _0x21d953;
                    }
                    break;
                case 'vector3s':
                    var _0x3b480a = _0x1ebd00['vector3s'];
                    for (var _0x4cf27c in _0x3b480a) {
                        var _0xa0891a = _0x36323d[_0x4cf27c], _0x1bb510 = _0x3b480a[_0x4cf27c];
                        _0xa0891a['setValue'](_0x1bb510[0x0], _0x1bb510[0x1], _0x1bb510[0x2]), _0x36323d[_0x4cf27c] = _0xa0891a;
                    }
                    break;
                case 'vector4s':
                    var _0x131906 = _0x1ebd00['vector4s'];
                    for (var _0x4cf27c in _0x131906) {
                        var _0x5e4f2b = _0x36323d[_0x4cf27c], _0x4f72da = _0x131906[_0x4cf27c];
                        _0x5e4f2b['setValue'](_0x4f72da[0x0], _0x4f72da[0x1], _0x4f72da[0x2], _0x4f72da[0x3]), _0x36323d[_0x4cf27c] = _0x5e4f2b;
                    }
                    break;
                case 'gradientDa' + 'taNumbers':
                    var _0x181e34 = _0x1ebd00['gradientDa' + 'taNumbers'];
                    for (var _0x4cf27c in _0x181e34) {
                        var _0x169b1f = _0x36323d[_0x4cf27c], _0xe01ff6 = _0x1ebd00[_0x4cf27c];
                        for (var _0xa65d98 = 0x0, _0x18459b = _0xe01ff6['length']; _0xa65d98 < _0x18459b; _0xa65d98++) {
                            var _0x54dbb6 = _0xe01ff6[_0xa65d98];
                            _0x169b1f['add'](_0x54dbb6['key'], _0x54dbb6['value']);
                        }
                        _0x36323d[_0x4cf27c] = _0x169b1f;
                    }
                    break;
                case 'resources':
                    var _0x2be888 = _0x1ebd00['resources'];
                    for (var _0x4cf27c in _0x2be888)
                        _0x36323d[_0x4cf27c] = _0x442335['Loader']['getRes'](_0x2be888[_0x4cf27c]);
                    break;
                case 'bursts':
                    var _0x57d88c = _0x1ebd00['bursts'];
                    for (var _0xa65d98 = 0x0, _0x18459b = _0x57d88c['length']; _0xa65d98 < _0x18459b; _0xa65d98++) {
                        var _0x58bd45 = _0x57d88c[_0xa65d98];
                        _0x36323d['addBurst'](new _0x10b1ec(_0x58bd45['time'], _0x58bd45['min'], _0x58bd45['max']));
                    }
                    break;
                case 'randomSeed':
                    _0x36323d['randomSeed'][0x0] = _0x1ebd00['randomSeed'];
                    break;
                case 'shapeType':
                case 'type':
                case 'color':
                case 'size':
                case 'frame':
                case 'startFrame':
                case 'angularVel' + 'ocity':
                case 'velocity':
                    break;
                default:
                    throw 'ShurikenPa' + 'rticle3D:u' + 'nknown\x20typ' + 'e.';
                }
            }
        }
        ['_parse'](_0x369e47, _0x48966f) {
            super['_parse'](_0x369e47, _0x48966f);
            if (_0x369e47['main']) {
                var _0x1564cf = this['particleSy' + 'stem'], _0x421cb6 = this['particleRe' + 'nderer'];
                this['_parseModu' + 'le'](_0x421cb6, _0x369e47['renderer']), this['_parseModu' + 'le'](_0x1564cf, _0x369e47['main']), this['_parseModu' + 'le'](_0x1564cf['emission'], _0x369e47['emission']);
                var _0x59b752 = _0x369e47['shape'];
                if (_0x59b752) {
                    var _0x33efa6;
                    switch (_0x59b752['shapeType']) {
                    case 0x0:
                        _0x33efa6 = new _0x2ba306();
                        break;
                    case 0x1:
                        _0x33efa6 = new _0x2c61db();
                        break;
                    case 0x2:
                        _0x33efa6 = new _0x41b96a();
                        break;
                    case 0x3:
                        _0x33efa6 = new _0x49338d();
                        break;
                    case 0x7:
                        _0x33efa6 = new _0x2b0bf2();
                        break;
                    default:
                        throw 'ShuriKenPa' + 'rticle3D:u' + 'nknown\x20sha' + 'pe\x20type.';
                    }
                    this['_parseModu' + 'le'](_0x33efa6, _0x59b752), _0x1564cf['shape'] = _0x33efa6;
                }
                var _0x2e0096 = _0x369e47['velocityOv' + 'erLifetime'];
                if (_0x2e0096) {
                    var _0x203e80 = _0x2e0096['velocity'], _0x2d1a2b;
                    switch (_0x203e80['type']) {
                    case 0x0:
                        var _0x2eface = _0x203e80['constant'];
                        _0x2d1a2b = _0xec4902['createByCo' + 'nstant'](_0x2eface ? new _0x352206(_0x2eface[0x0], _0x2eface[0x1], _0x2eface[0x2]) : new _0x352206(0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x2d1a2b = _0xec4902['createByGr' + 'adient'](this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientX']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientY']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientZ']));
                        break;
                    case 0x2:
                        var _0x32efe4 = _0x203e80['constantMi' + 'n'], _0x33fe71 = _0x203e80['constantMa' + 'x'];
                        _0x2d1a2b = _0xec4902['createByRa' + 'ndomTwoCon' + 'stant'](_0x32efe4 ? new _0x352206(_0x32efe4[0x0], _0x32efe4[0x1], _0x32efe4[0x2]) : new _0x352206(0x0, 0x0, 0x0), _0x33fe71 ? new _0x352206(_0x33fe71[0x0], _0x33fe71[0x1], _0x33fe71[0x2]) : new _0x352206(0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x2d1a2b = _0xec4902['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientXM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientXM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientYM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientYM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientZM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x203e80['gradientZM' + 'ax']));
                        break;
                    }
                    var _0x26a96a = new _0x386b75(_0x2d1a2b);
                    this['_parseModu' + 'le'](_0x26a96a, _0x2e0096), _0x1564cf['velocityOv' + 'erLifetime'] = _0x26a96a;
                }
                var _0x1a4804 = _0x369e47['colorOverL' + 'ifetime'];
                if (_0x1a4804) {
                    var _0x4aa1c7 = _0x1a4804['color'], _0x4d80e5;
                    switch (_0x4aa1c7['type']) {
                    case 0x0:
                        var _0x1a5eef = _0x4aa1c7['constant'];
                        _0x4d80e5 = _0xfeff71['createByCo' + 'nstant'](_0x1a5eef ? new _0x18425e(_0x1a5eef[0x0], _0x1a5eef[0x1], _0x1a5eef[0x2], _0x1a5eef[0x3]) : new _0x18425e(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x4d80e5 = _0xfeff71['createByGr' + 'adient'](this['_initParti' + 'cleColor'](_0x4aa1c7['gradient']));
                        break;
                    case 0x2:
                        var _0x211a0a = _0x4aa1c7['constantMi' + 'n'], _0x163c9b = _0x4aa1c7['constantMa' + 'x'];
                        _0x4d80e5 = _0xfeff71['createByRa' + 'ndomTwoCon' + 'stant'](_0x211a0a ? new _0x18425e(_0x211a0a[0x0], _0x211a0a[0x1], _0x211a0a[0x2], _0x211a0a[0x3]) : new _0x18425e(0x0, 0x0, 0x0, 0x0), _0x211a0a ? new _0x18425e(_0x163c9b[0x0], _0x163c9b[0x1], _0x163c9b[0x2], _0x163c9b[0x3]) : new _0x18425e(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x4d80e5 = _0xfeff71['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleColor'](_0x4aa1c7['gradientMi' + 'n']), this['_initParti' + 'cleColor'](_0x4aa1c7['gradientMa' + 'x']));
                        break;
                    }
                    var _0x2215bb = new _0x57ef59(_0x4d80e5);
                    this['_parseModu' + 'le'](_0x2215bb, _0x1a4804), _0x1564cf['colorOverL' + 'ifetime'] = _0x2215bb;
                }
                var _0x1f3966 = _0x369e47['sizeOverLi' + 'fetime'];
                if (_0x1f3966) {
                    var _0x355588 = _0x1f3966['size'], _0x4fc2af;
                    switch (_0x355588['type']) {
                    case 0x0:
                        _0x355588['separateAx' + 'es'] ? _0x4fc2af = _0x239ca5['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleSize'](_0x355588['gradientX']), this['_initParti' + 'cleSize'](_0x355588['gradientY']), this['_initParti' + 'cleSize'](_0x355588['gradientZ'])) : _0x4fc2af = _0x239ca5['createByGr' + 'adient'](this['_initParti' + 'cleSize'](_0x355588['gradient']));
                        break;
                    case 0x1:
                        if (_0x355588['separateAx' + 'es']) {
                            var _0x3f2d75 = _0x355588['constantMi' + 'nSeparate'], _0xc89252 = _0x355588['constantMa' + 'xSeparate'];
                            _0x4fc2af = _0x239ca5['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x3f2d75 ? new _0x352206(_0x3f2d75[0x0], _0x3f2d75[0x1], _0x3f2d75[0x2]) : new _0x352206(0x0, 0x0, 0x0), _0xc89252 ? new _0x352206(_0xc89252[0x0], _0xc89252[0x1], _0xc89252[0x2]) : new _0x352206(0x0, 0x0, 0x0));
                        } else
                            _0x4fc2af = _0x239ca5['createByRa' + 'ndomTwoCon' + 'stant'](_0x355588['constantMi' + 'n'] || 0x0, _0x355588['constantMa' + 'x'] || 0x0);
                        break;
                    case 0x2:
                        _0x355588['separateAx' + 'es'] ? _0x4fc2af = _0x239ca5['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_initParti' + 'cleSize'](_0x355588['gradientXM' + 'in']), this['_initParti' + 'cleSize'](_0x355588['gradientYM' + 'in']), this['_initParti' + 'cleSize'](_0x355588['gradientZM' + 'in']), this['_initParti' + 'cleSize'](_0x355588['gradientXM' + 'ax']), this['_initParti' + 'cleSize'](_0x355588['gradientYM' + 'ax']), this['_initParti' + 'cleSize'](_0x355588['gradientZM' + 'ax'])) : _0x4fc2af = _0x239ca5['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleSize'](_0x355588['gradientMi' + 'n']), this['_initParti' + 'cleSize'](_0x355588['gradientMa' + 'x']));
                        break;
                    }
                    var _0x3b1dbb = new _0xa7ce47(_0x4fc2af);
                    this['_parseModu' + 'le'](_0x3b1dbb, _0x1f3966), _0x1564cf['sizeOverLi' + 'fetime'] = _0x3b1dbb;
                }
                var _0x4e9304 = _0x369e47['rotationOv' + 'erLifetime'];
                if (_0x4e9304) {
                    var _0x5948de = _0x4e9304['angularVel' + 'ocity'], _0x2d6376;
                    switch (_0x5948de['type']) {
                    case 0x0:
                        if (_0x5948de['separateAx' + 'es']) {
                            var _0x96e80f = _0x5948de['constantSe' + 'parate'];
                            _0x2d6376 = _0x48f3a0['createByCo' + 'nstantSepa' + 'rate'](_0x96e80f ? new _0x352206(_0x96e80f[0x0], _0x96e80f[0x1], _0x96e80f[0x2]) : new _0x352206(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x2d6376 = _0x48f3a0['createByCo' + 'nstant'](_0x5948de['constant'] || Math['PI'] / 0x4);
                        break;
                    case 0x1:
                        _0x5948de['separateAx' + 'es'] ? _0x2d6376 = _0x48f3a0['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleRotatio' + 'n'](_0x5948de['gradientX']), this['_initParti' + 'cleRotatio' + 'n'](_0x5948de['gradientY']), this['_initParti' + 'cleRotatio' + 'n'](_0x5948de['gradientZ'])) : _0x2d6376 = _0x48f3a0['createByGr' + 'adient'](this['_initParti' + 'cleRotatio' + 'n'](_0x5948de['gradient']));
                        break;
                    case 0x2:
                        if (_0x5948de['separateAx' + 'es']) {
                            var _0x422331 = _0x5948de['constantMi' + 'nSeparate'], _0x2cafd8 = _0x5948de['constantMa' + 'xSeparate'];
                            _0x2d6376 = _0x48f3a0['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x422331 ? new _0x352206(_0x422331[0x0], _0x422331[0x1], _0x422331[0x2]) : new _0x352206(0x0, 0x0, 0x0), _0x2cafd8 ? new _0x352206(_0x2cafd8[0x0], _0x2cafd8[0x1], _0x2cafd8[0x2]) : new _0x352206(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x2d6376 = _0x48f3a0['createByRa' + 'ndomTwoCon' + 'stant'](_0x5948de['constantMi' + 'n'] || 0x0, _0x5948de['constantMa' + 'x'] || Math['PI'] / 0x4);
                        break;
                    case 0x3:
                        if (_0x5948de['separateAx' + 'es']);
                        else
                            _0x2d6376 = _0x48f3a0['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleRotatio' + 'n'](_0x5948de['gradientMi' + 'n']), this['_initParti' + 'cleRotatio' + 'n'](_0x5948de['gradientMa' + 'x']));
                        break;
                    }
                    var _0x21cdd9 = new _0x48d329(_0x2d6376);
                    this['_parseModu' + 'le'](_0x21cdd9, _0x4e9304), _0x1564cf['rotationOv' + 'erLifetime'] = _0x21cdd9;
                }
                var _0x5bcaf9 = _0x369e47['textureShe' + 'etAnimatio' + 'n'];
                if (_0x5bcaf9) {
                    var _0x30568c = _0x5bcaf9['frame'], _0x6e8f67;
                    switch (_0x30568c['type']) {
                    case 0x0:
                        _0x6e8f67 = _0x55bc91['createByCo' + 'nstant'](_0x30568c['constant']);
                        break;
                    case 0x1:
                        _0x6e8f67 = _0x55bc91['createByOv' + 'erTime'](this['_initParti' + 'cleFrame'](_0x30568c['overTime']));
                        break;
                    case 0x2:
                        _0x6e8f67 = _0x55bc91['createByRa' + 'ndomTwoCon' + 'stant'](_0x30568c['constantMi' + 'n'], _0x30568c['constantMa' + 'x']);
                        break;
                    case 0x3:
                        _0x6e8f67 = _0x55bc91['createByRa' + 'ndomTwoOve' + 'rTime'](this['_initParti' + 'cleFrame'](_0x30568c['overTimeMi' + 'n']), this['_initParti' + 'cleFrame'](_0x30568c['overTimeMa' + 'x']));
                        break;
                    }
                    var _0x1e51e5 = _0x5bcaf9['startFrame'], _0xc74d6c;
                    switch (_0x1e51e5['type']) {
                    case 0x0:
                        _0xc74d6c = _0x490a5b['createByCo' + 'nstant'](_0x1e51e5['constant']);
                        break;
                    case 0x1:
                        _0xc74d6c = _0x490a5b['createByRa' + 'ndomTwoCon' + 'stant'](_0x1e51e5['constantMi' + 'n'], _0x1e51e5['constantMa' + 'x']);
                        break;
                    }
                    var _0x283fef = new _0x1ebf6e(_0x6e8f67, _0xc74d6c);
                    this['_parseModu' + 'le'](_0x283fef, _0x5bcaf9), _0x1564cf['textureShe' + 'etAnimatio' + 'n'] = _0x283fef;
                }
            } else
                this['_parseOld'](_0x369e47);
        }
        ['_activeHie' + 'rarchy'](_0x548cf7) {
            super['_activeHie' + 'rarchy'](_0x548cf7), this['particleSy' + 'stem']['playOnAwak' + 'e'] && this['particleSy' + 'stem']['play']();
        }
        ['_inActiveH' + 'ierarchy'](_0x9d6876) {
            super['_inActiveH' + 'ierarchy'](_0x9d6876), this['particleSy' + 'stem']['isAlive'] && this['particleSy' + 'stem']['simulate'](0x0, !![]);
        }
        ['_cloneTo'](_0x57810d, _0x145ab3, _0x263b18) {
            var _0x46b68c = _0x57810d, _0x4047f4 = _0x46b68c['_particleS' + 'ystem'];
            this['_particleS' + 'ystem']['cloneTo'](_0x4047f4);
            var _0x5dc629 = _0x46b68c['_render'], _0x3420f3 = this['_render'];
            _0x5dc629['sharedMate' + 'rials'] = _0x3420f3['sharedMate' + 'rials'], _0x5dc629['enable'] = _0x3420f3['enable'], _0x5dc629['renderMode'] = _0x3420f3['renderMode'], _0x5dc629['mesh'] = _0x3420f3['mesh'], _0x5dc629['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = _0x3420f3['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'], _0x5dc629['stretchedB' + 'illboardSp' + 'eedScale'] = _0x3420f3['stretchedB' + 'illboardSp' + 'eedScale'], _0x5dc629['stretchedB' + 'illboardLe' + 'ngthScale'] = _0x3420f3['stretchedB' + 'illboardLe' + 'ngthScale'], _0x5dc629['sortingFud' + 'ge'] = _0x3420f3['sortingFud' + 'ge'], super['_cloneTo'](_0x57810d, _0x145ab3, _0x263b18);
        }
        ['destroy'](_0x3e9e00 = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x3e9e00), this['_particleS' + 'ystem']['destroy'](), this['_particleS' + 'ystem'] = null;
        }
        ['_create']() {
            return new _0x531ddc();
        }
        ['_parseOld'](_0x155bce) {
            const _0x8e2d9c = Math['PI'] / 0xb4;
            var _0x340b52, _0x48ce1b, _0x2c7b64 = this['particleRe' + 'nderer'], _0x32aa1c, _0x101df9 = _0x155bce['material'];
            _0x101df9 && (_0x32aa1c = _0x442335['Loader']['getRes'](_0x101df9['path'])), _0x2c7b64['sharedMate' + 'rial'] = _0x32aa1c;
            var _0x41bb78 = _0x155bce['meshPath'];
            _0x41bb78 && (_0x2c7b64['mesh'] = _0x442335['Loader']['getRes'](_0x41bb78)), _0x2c7b64['renderMode'] = _0x155bce['renderMode'], _0x2c7b64['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = _0x155bce['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'], _0x2c7b64['stretchedB' + 'illboardSp' + 'eedScale'] = _0x155bce['stretchedB' + 'illboardSp' + 'eedScale'], _0x2c7b64['stretchedB' + 'illboardLe' + 'ngthScale'] = _0x155bce['stretchedB' + 'illboardLe' + 'ngthScale'], _0x2c7b64['sortingFud' + 'ge'] = _0x155bce['sortingFud' + 'ge'] ? _0x155bce['sortingFud' + 'ge'] : 0x0;
            var _0x3a3cc3 = this['particleSy' + 'stem'];
            _0x3a3cc3['isPerforma' + 'nceMode'] = _0x155bce['isPerforma' + 'nceMode'], _0x3a3cc3['duration'] = _0x155bce['duration'], _0x3a3cc3['looping'] = _0x155bce['looping'], _0x3a3cc3['prewarm'] = _0x155bce['prewarm'], _0x3a3cc3['startDelay' + 'Type'] = _0x155bce['startDelay' + 'Type'], _0x3a3cc3['startDelay'] = _0x155bce['startDelay'], _0x3a3cc3['startDelay' + 'Min'] = _0x155bce['startDelay' + 'Min'], _0x3a3cc3['startDelay' + 'Max'] = _0x155bce['startDelay' + 'Max'], _0x3a3cc3['startLifet' + 'imeType'] = _0x155bce['startLifet' + 'imeType'], _0x3a3cc3['startLifet' + 'imeConstan' + 't'] = _0x155bce['startLifet' + 'imeConstan' + 't'], _0x3a3cc3['startLifeT' + 'imeGradien' + 't'] = _0x531ddc['_initStart' + 'Life'](_0x155bce['startLifet' + 'imeGradien' + 't']), _0x3a3cc3['startLifet' + 'imeConstan' + 'tMin'] = _0x155bce['startLifet' + 'imeConstan' + 'tMin'], _0x3a3cc3['startLifet' + 'imeConstan' + 'tMax'] = _0x155bce['startLifet' + 'imeConstan' + 'tMax'], _0x3a3cc3['startLifeT' + 'imeGradien' + 'tMin'] = _0x531ddc['_initStart' + 'Life'](_0x155bce['startLifet' + 'imeGradien' + 'tMin']), _0x3a3cc3['startLifeT' + 'imeGradien' + 'tMax'] = _0x531ddc['_initStart' + 'Life'](_0x155bce['startLifet' + 'imeGradien' + 'tMax']), _0x3a3cc3['startSpeed' + 'Type'] = _0x155bce['startSpeed' + 'Type'], _0x3a3cc3['startSpeed' + 'Constant'] = _0x155bce['startSpeed' + 'Constant'], _0x3a3cc3['startSpeed' + 'ConstantMi' + 'n'] = _0x155bce['startSpeed' + 'ConstantMi' + 'n'], _0x3a3cc3['startSpeed' + 'ConstantMa' + 'x'] = _0x155bce['startSpeed' + 'ConstantMa' + 'x'], _0x3a3cc3['threeDStar' + 'tSize'] = _0x155bce['threeDStar' + 'tSize'], _0x3a3cc3['startSizeT' + 'ype'] = _0x155bce['startSizeT' + 'ype'], _0x3a3cc3['startSizeC' + 'onstant'] = _0x155bce['startSizeC' + 'onstant'];
            var _0xa81978 = _0x155bce['startSizeC' + 'onstantSep' + 'arate'], _0x565ece = _0x3a3cc3['startSizeC' + 'onstantSep' + 'arate'];
            _0x565ece['x'] = _0xa81978[0x0], _0x565ece['y'] = _0xa81978[0x1], _0x565ece['z'] = _0xa81978[0x2], _0x3a3cc3['startSizeC' + 'onstantMin'] = _0x155bce['startSizeC' + 'onstantMin'], _0x3a3cc3['startSizeC' + 'onstantMax'] = _0x155bce['startSizeC' + 'onstantMax'];
            var _0x12e858 = _0x155bce['startSizeC' + 'onstantMin' + 'Separate'], _0x292bb0 = _0x3a3cc3['startSizeC' + 'onstantMin' + 'Separate'];
            _0x292bb0['x'] = _0x12e858[0x0], _0x292bb0['y'] = _0x12e858[0x1], _0x292bb0['z'] = _0x12e858[0x2];
            var _0x2f29a3 = _0x155bce['startSizeC' + 'onstantMax' + 'Separate'], _0x23dc79 = _0x3a3cc3['startSizeC' + 'onstantMax' + 'Separate'];
            _0x23dc79['x'] = _0x2f29a3[0x0], _0x23dc79['y'] = _0x2f29a3[0x1], _0x23dc79['z'] = _0x2f29a3[0x2], _0x3a3cc3['threeDStar' + 'tRotation'] = _0x155bce['threeDStar' + 'tRotation'], _0x3a3cc3['startRotat' + 'ionType'] = _0x155bce['startRotat' + 'ionType'], _0x3a3cc3['startRotat' + 'ionConstan' + 't'] = _0x155bce['startRotat' + 'ionConstan' + 't'] * _0x8e2d9c;
            var _0x17593c = _0x155bce['startRotat' + 'ionConstan' + 'tSeparate'], _0x4b5def = _0x3a3cc3['startRotat' + 'ionConstan' + 'tSeparate'];
            _0x4b5def['x'] = _0x17593c[0x0] * _0x8e2d9c, _0x4b5def['y'] = _0x17593c[0x1] * _0x8e2d9c, _0x4b5def['z'] = _0x17593c[0x2] * _0x8e2d9c, _0x3a3cc3['startRotat' + 'ionConstan' + 'tMin'] = _0x155bce['startRotat' + 'ionConstan' + 'tMin'] * _0x8e2d9c, _0x3a3cc3['startRotat' + 'ionConstan' + 'tMax'] = _0x155bce['startRotat' + 'ionConstan' + 'tMax'] * _0x8e2d9c;
            var _0x21972e = _0x155bce['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'], _0xe3eeb8 = _0x3a3cc3['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'];
            _0xe3eeb8['x'] = _0x21972e[0x0] * _0x8e2d9c, _0xe3eeb8['y'] = _0x21972e[0x1] * _0x8e2d9c, _0xe3eeb8['z'] = _0x21972e[0x2] * _0x8e2d9c;
            var _0x5d4108 = _0x155bce['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'], _0x2a96c4 = _0x3a3cc3['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'];
            _0x2a96c4['x'] = _0x5d4108[0x0] * _0x8e2d9c, _0x2a96c4['y'] = _0x5d4108[0x1] * _0x8e2d9c, _0x2a96c4['z'] = _0x5d4108[0x2] * _0x8e2d9c, _0x3a3cc3['randomizeR' + 'otationDir' + 'ection'] = _0x155bce['randomizeR' + 'otationDir' + 'ection'], _0x3a3cc3['startColor' + 'Type'] = _0x155bce['startColor' + 'Type'];
            var _0x48de34 = _0x155bce['startColor' + 'Constant'], _0x4f4452 = _0x3a3cc3['startColor' + 'Constant'];
            _0x4f4452['x'] = _0x48de34[0x0], _0x4f4452['y'] = _0x48de34[0x1], _0x4f4452['z'] = _0x48de34[0x2], _0x4f4452['w'] = _0x48de34[0x3];
            var _0x3295da = _0x155bce['startColor' + 'ConstantMi' + 'n'], _0x132846 = _0x3a3cc3['startColor' + 'ConstantMi' + 'n'];
            _0x132846['x'] = _0x3295da[0x0], _0x132846['y'] = _0x3295da[0x1], _0x132846['z'] = _0x3295da[0x2], _0x132846['w'] = _0x3295da[0x3];
            var _0x58cbd7 = _0x155bce['startColor' + 'ConstantMa' + 'x'], _0x5d5dc2 = _0x3a3cc3['startColor' + 'ConstantMa' + 'x'];
            _0x5d5dc2['x'] = _0x58cbd7[0x0], _0x5d5dc2['y'] = _0x58cbd7[0x1], _0x5d5dc2['z'] = _0x58cbd7[0x2], _0x5d5dc2['w'] = _0x58cbd7[0x3], _0x3a3cc3['gravityMod' + 'ifier'] = _0x155bce['gravityMod' + 'ifier'], _0x3a3cc3['simulation' + 'Space'] = _0x155bce['simulation' + 'Space'], _0x155bce['simulation' + 'Speed'] !== undefined && (_0x3a3cc3['simulation' + 'Speed'] = _0x155bce['simulation' + 'Speed']), _0x3a3cc3['scaleMode'] = _0x155bce['scaleMode'], _0x3a3cc3['playOnAwak' + 'e'] = _0x155bce['playOnAwak' + 'e'], _0x3a3cc3['maxParticl' + 'es'] = _0x155bce['maxParticl' + 'es'];
            var _0x2a667d = _0x155bce['autoRandom' + 'Seed'];
            _0x2a667d != null && (_0x3a3cc3['autoRandom' + 'Seed'] = _0x2a667d);
            var _0x1537f3 = _0x155bce['randomSeed'];
            _0x1537f3 != null && (_0x3a3cc3['randomSeed'][0x0] = _0x1537f3);
            var _0xc36b45 = _0x155bce['emission'], _0x151c05 = _0x3a3cc3['emission'];
            if (_0xc36b45) {
                _0x151c05['emissionRa' + 'te'] = _0xc36b45['emissionRa' + 'te'];
                var _0x107482 = _0xc36b45['bursts'];
                if (_0x107482)
                    for (_0x340b52 = 0x0, _0x48ce1b = _0x107482['length']; _0x340b52 < _0x48ce1b; _0x340b52++) {
                        var _0x1ba4e7 = _0x107482[_0x340b52];
                        _0x151c05['addBurst'](new _0x10b1ec(_0x1ba4e7['time'], _0x1ba4e7['min'], _0x1ba4e7['max']));
                    }
                _0x151c05['enable'] = _0xc36b45['enable'];
            } else
                _0x151c05['enable'] = ![];
            var _0x5ce27d = _0x155bce['shape'];
            if (_0x5ce27d) {
                var _0x3c46fa;
                switch (_0x5ce27d['shapeType']) {
                case 0x0:
                    var _0x438abe;
                    _0x3c46fa = _0x438abe = new _0x2ba306(), _0x438abe['radius'] = _0x5ce27d['sphereRadi' + 'us'], _0x438abe['emitFromSh' + 'ell'] = _0x5ce27d['sphereEmit' + 'FromShell'], _0x438abe['randomDire' + 'ction'] = _0x5ce27d['sphereRand' + 'omDirectio' + 'n'];
                    break;
                case 0x1:
                    var _0x1c2511;
                    _0x3c46fa = _0x1c2511 = new _0x2c61db(), _0x1c2511['radius'] = _0x5ce27d['hemiSphere' + 'Radius'], _0x1c2511['emitFromSh' + 'ell'] = _0x5ce27d['hemiSphere' + 'EmitFromSh' + 'ell'], _0x1c2511['randomDire' + 'ction'] = _0x5ce27d['hemiSphere' + 'RandomDire' + 'ction'];
                    break;
                case 0x2:
                    var _0x364e27;
                    _0x3c46fa = _0x364e27 = new _0x41b96a(), _0x364e27['angle'] = _0x5ce27d['coneAngle'] * _0x8e2d9c, _0x364e27['radius'] = _0x5ce27d['coneRadius'], _0x364e27['length'] = _0x5ce27d['coneLength'], _0x364e27['emitType'] = _0x5ce27d['coneEmitTy' + 'pe'], _0x364e27['randomDire' + 'ction'] = _0x5ce27d['coneRandom' + 'Direction'];
                    break;
                case 0x3:
                    var _0x28bbf2;
                    _0x3c46fa = _0x28bbf2 = new _0x49338d(), _0x28bbf2['x'] = _0x5ce27d['boxX'], _0x28bbf2['y'] = _0x5ce27d['boxY'], _0x28bbf2['z'] = _0x5ce27d['boxZ'], _0x28bbf2['randomDire' + 'ction'] = _0x5ce27d['boxRandomD' + 'irection'];
                    break;
                case 0x7:
                    var _0x2b4716;
                    _0x3c46fa = _0x2b4716 = new _0x2b0bf2(), _0x2b4716['radius'] = _0x5ce27d['circleRadi' + 'us'], _0x2b4716['arc'] = _0x5ce27d['circleArc'] * _0x8e2d9c, _0x2b4716['emitFromEd' + 'ge'] = _0x5ce27d['circleEmit' + 'FromEdge'], _0x2b4716['randomDire' + 'ction'] = _0x5ce27d['circleRand' + 'omDirectio' + 'n'];
                    break;
                default:
                    var _0x5e7597;
                    _0x3c46fa = _0x5e7597 = new _0x2b0bf2(), _0x5e7597['radius'] = _0x5ce27d['circleRadi' + 'us'], _0x5e7597['arc'] = _0x5ce27d['circleArc'] * _0x8e2d9c, _0x5e7597['emitFromEd' + 'ge'] = _0x5ce27d['circleEmit' + 'FromEdge'], _0x5e7597['randomDire' + 'ction'] = _0x5ce27d['circleRand' + 'omDirectio' + 'n'];
                    break;
                }
                _0x3c46fa['enable'] = _0x5ce27d['enable'], _0x3a3cc3['shape'] = _0x3c46fa;
            }
            var _0x310c97 = _0x155bce['velocityOv' + 'erLifetime'];
            if (_0x310c97) {
                var _0x1ae27d = _0x310c97['velocity'], _0x281f39;
                switch (_0x1ae27d['type']) {
                case 0x0:
                    var _0x563eb9 = _0x1ae27d['constant'];
                    _0x281f39 = _0xec4902['createByCo' + 'nstant'](new _0x352206(_0x563eb9[0x0], _0x563eb9[0x1], _0x563eb9[0x2]));
                    break;
                case 0x1:
                    _0x281f39 = _0xec4902['createByGr' + 'adient'](this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientX']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientY']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientZ']));
                    break;
                case 0x2:
                    var _0x17eb4e = _0x1ae27d['constantMi' + 'n'], _0x110558 = _0x1ae27d['constantMa' + 'x'];
                    _0x281f39 = _0xec4902['createByRa' + 'ndomTwoCon' + 'stant'](new _0x352206(_0x17eb4e[0x0], _0x17eb4e[0x1], _0x17eb4e[0x2]), new _0x352206(_0x110558[0x0], _0x110558[0x1], _0x110558[0x2]));
                    break;
                case 0x3:
                    _0x281f39 = _0xec4902['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientXM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientXM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientYM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientYM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientZM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x1ae27d['gradientZM' + 'ax']));
                    break;
                }
                var _0x252bc6 = new _0x386b75(_0x281f39);
                _0x252bc6['space'] = _0x310c97['space'], _0x252bc6['enable'] = _0x310c97['enable'], _0x3a3cc3['velocityOv' + 'erLifetime'] = _0x252bc6;
            }
            var _0x62a662 = _0x155bce['colorOverL' + 'ifetime'];
            if (_0x62a662) {
                var _0x3a46ba = _0x62a662['color'], _0x583ec4;
                switch (_0x3a46ba['type']) {
                case 0x0:
                    var _0x57ca3a = _0x3a46ba['constant'];
                    _0x583ec4 = _0xfeff71['createByCo' + 'nstant'](new _0x18425e(_0x57ca3a[0x0], _0x57ca3a[0x1], _0x57ca3a[0x2], _0x57ca3a[0x3]));
                    break;
                case 0x1:
                    _0x583ec4 = _0xfeff71['createByGr' + 'adient'](this['_initParti' + 'cleColor'](_0x3a46ba['gradient']));
                    break;
                case 0x2:
                    var _0x590c6d = _0x3a46ba['constantMi' + 'n'], _0x3d7ea2 = _0x3a46ba['constantMa' + 'x'];
                    _0x583ec4 = _0xfeff71['createByRa' + 'ndomTwoCon' + 'stant'](new _0x18425e(_0x590c6d[0x0], _0x590c6d[0x1], _0x590c6d[0x2], _0x590c6d[0x3]), new _0x18425e(_0x3d7ea2[0x0], _0x3d7ea2[0x1], _0x3d7ea2[0x2], _0x3d7ea2[0x3]));
                    break;
                case 0x3:
                    _0x583ec4 = _0xfeff71['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleColor'](_0x3a46ba['gradientMi' + 'n']), this['_initParti' + 'cleColor'](_0x3a46ba['gradientMa' + 'x']));
                    break;
                }
                var _0x3aba73 = new _0x57ef59(_0x583ec4);
                _0x3aba73['enable'] = _0x62a662['enable'], _0x3a3cc3['colorOverL' + 'ifetime'] = _0x3aba73;
            }
            var _0x215e1a = _0x155bce['sizeOverLi' + 'fetime'];
            if (_0x215e1a) {
                var _0x475ca5 = _0x215e1a['size'], _0x510bdd;
                switch (_0x475ca5['type']) {
                case 0x0:
                    _0x475ca5['separateAx' + 'es'] ? _0x510bdd = _0x239ca5['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleSize'](_0x475ca5['gradientX']), this['_initParti' + 'cleSize'](_0x475ca5['gradientY']), this['_initParti' + 'cleSize'](_0x475ca5['gradientZ'])) : _0x510bdd = _0x239ca5['createByGr' + 'adient'](this['_initParti' + 'cleSize'](_0x475ca5['gradient']));
                    break;
                case 0x1:
                    if (_0x475ca5['separateAx' + 'es']) {
                        var _0x1584db = _0x475ca5['constantMi' + 'nSeparate'], _0x5959a3 = _0x475ca5['constantMa' + 'xSeparate'];
                        _0x510bdd = _0x239ca5['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](new _0x352206(_0x1584db[0x0], _0x1584db[0x1], _0x1584db[0x2]), new _0x352206(_0x5959a3[0x0], _0x5959a3[0x1], _0x5959a3[0x2]));
                    } else
                        _0x510bdd = _0x239ca5['createByRa' + 'ndomTwoCon' + 'stant'](_0x475ca5['constantMi' + 'n'], _0x475ca5['constantMa' + 'x']);
                    break;
                case 0x2:
                    _0x475ca5['separateAx' + 'es'] ? _0x510bdd = _0x239ca5['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_initParti' + 'cleSize'](_0x475ca5['gradientXM' + 'in']), this['_initParti' + 'cleSize'](_0x475ca5['gradientYM' + 'in']), this['_initParti' + 'cleSize'](_0x475ca5['gradientZM' + 'in']), this['_initParti' + 'cleSize'](_0x475ca5['gradientXM' + 'ax']), this['_initParti' + 'cleSize'](_0x475ca5['gradientYM' + 'ax']), this['_initParti' + 'cleSize'](_0x475ca5['gradientZM' + 'ax'])) : _0x510bdd = _0x239ca5['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleSize'](_0x475ca5['gradientMi' + 'n']), this['_initParti' + 'cleSize'](_0x475ca5['gradientMa' + 'x']));
                    break;
                }
                var _0x13164f = new _0xa7ce47(_0x510bdd);
                _0x13164f['enable'] = _0x215e1a['enable'], _0x3a3cc3['sizeOverLi' + 'fetime'] = _0x13164f;
            }
            var _0x274cd9 = _0x155bce['rotationOv' + 'erLifetime'];
            if (_0x274cd9) {
                var _0x43e330 = _0x274cd9['angularVel' + 'ocity'], _0x4ac1d1;
                switch (_0x43e330['type']) {
                case 0x0:
                    if (_0x43e330['separateAx' + 'es']) {
                        var _0x644b92 = _0x43e330['constantSe' + 'parate'];
                        _0x4ac1d1 = _0x48f3a0['createByCo' + 'nstantSepa' + 'rate'](new _0x352206(_0x644b92[0x0] * _0x8e2d9c, _0x644b92[0x1] * _0x8e2d9c, _0x644b92[0x2] * _0x8e2d9c));
                    } else
                        _0x4ac1d1 = _0x48f3a0['createByCo' + 'nstant'](_0x43e330['constant'] * _0x8e2d9c);
                    break;
                case 0x1:
                    _0x43e330['separateAx' + 'es'] ? _0x4ac1d1 = _0x48f3a0['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleRotatio' + 'n'](_0x43e330['gradientX']), this['_initParti' + 'cleRotatio' + 'n'](_0x43e330['gradientY']), this['_initParti' + 'cleRotatio' + 'n'](_0x43e330['gradientZ'])) : _0x4ac1d1 = _0x48f3a0['createByGr' + 'adient'](this['_initParti' + 'cleRotatio' + 'n'](_0x43e330['gradient']));
                    break;
                case 0x2:
                    if (_0x43e330['separateAx' + 'es']) {
                        var _0x3576fb = _0x43e330['constantMi' + 'nSeparate'], _0x7cf89c = _0x43e330['constantMa' + 'xSeparate'];
                        _0x4ac1d1 = _0x48f3a0['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](new _0x352206(_0x3576fb[0x0] * _0x8e2d9c, _0x3576fb[0x1] * _0x8e2d9c, _0x3576fb[0x2] * _0x8e2d9c), new _0x352206(_0x7cf89c[0x0] * _0x8e2d9c, _0x7cf89c[0x1] * _0x8e2d9c, _0x7cf89c[0x2] * _0x8e2d9c));
                    } else
                        _0x4ac1d1 = _0x48f3a0['createByRa' + 'ndomTwoCon' + 'stant'](_0x43e330['constantMi' + 'n'] * _0x8e2d9c, _0x43e330['constantMa' + 'x'] * _0x8e2d9c);
                    break;
                case 0x3:
                    if (_0x43e330['separateAx' + 'es']);
                    else
                        _0x4ac1d1 = _0x48f3a0['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleRotatio' + 'n'](_0x43e330['gradientMi' + 'n']), this['_initParti' + 'cleRotatio' + 'n'](_0x43e330['gradientMa' + 'x']));
                    break;
                }
                var _0x2c603c = new _0x48d329(_0x4ac1d1);
                _0x2c603c['enable'] = _0x274cd9['enable'], _0x3a3cc3['rotationOv' + 'erLifetime'] = _0x2c603c;
            }
            var _0x2c2636 = _0x155bce['textureShe' + 'etAnimatio' + 'n'];
            if (_0x2c2636) {
                var _0x472215 = _0x2c2636['frame'], _0x5dfa2b;
                switch (_0x472215['type']) {
                case 0x0:
                    _0x5dfa2b = _0x55bc91['createByCo' + 'nstant'](_0x472215['constant']);
                    break;
                case 0x1:
                    _0x5dfa2b = _0x55bc91['createByOv' + 'erTime'](this['_initParti' + 'cleFrame'](_0x472215['overTime']));
                    break;
                case 0x2:
                    _0x5dfa2b = _0x55bc91['createByRa' + 'ndomTwoCon' + 'stant'](_0x472215['constantMi' + 'n'], _0x472215['constantMa' + 'x']);
                    break;
                case 0x3:
                    _0x5dfa2b = _0x55bc91['createByRa' + 'ndomTwoOve' + 'rTime'](this['_initParti' + 'cleFrame'](_0x472215['overTimeMi' + 'n']), this['_initParti' + 'cleFrame'](_0x472215['overTimeMa' + 'x']));
                    break;
                }
                var _0xd9f92d = _0x2c2636['startFrame'], _0x1456a1;
                switch (_0xd9f92d['type']) {
                case 0x0:
                    _0x1456a1 = _0x490a5b['createByCo' + 'nstant'](_0xd9f92d['constant']);
                    break;
                case 0x1:
                    _0x1456a1 = _0x490a5b['createByRa' + 'ndomTwoCon' + 'stant'](_0xd9f92d['constantMi' + 'n'], _0xd9f92d['constantMa' + 'x']);
                    break;
                }
                var _0x1af91d = new _0x1ebf6e(_0x5dfa2b, _0x1456a1);
                _0x1af91d['enable'] = _0x2c2636['enable'];
                var _0x1476f5 = _0x2c2636['tiles'];
                _0x1af91d['tiles'] = new _0x378045(_0x1476f5[0x0], _0x1476f5[0x1]), _0x1af91d['type'] = _0x2c2636['type'], _0x1af91d['randomRow'] = _0x2c2636['randomRow'];
                var _0x4cd41a = _0x2c2636['rowIndex'];
                _0x4cd41a !== undefined && (_0x1af91d['rowIndex'] = _0x4cd41a), _0x1af91d['cycles'] = _0x2c2636['cycles'], _0x3a3cc3['textureShe' + 'etAnimatio' + 'n'] = _0x1af91d;
            }
        }
        ['_initParti' + 'cleColor'](_0x5a0b9a) {
            var _0x5ab9b9 = new _0x56b2f2(0x4, 0x4);
            if (!_0x5a0b9a)
                _0x5ab9b9['addColorAl' + 'pha'](0x0, 0x1), _0x5ab9b9['addColorAl' + 'pha'](0x1, 0x1), _0x5ab9b9['addColorRG' + 'B'](0x0, new _0x5525ce(0x1, 0x1, 0x1, 0x1)), _0x5ab9b9['addColorRG' + 'B'](0x1, new _0x5525ce(0x1, 0x1, 0x1, 0x1));
            else {
                var _0xde4584 = _0x5a0b9a['alphas'], _0xbf89f8, _0x184f52;
                if (!_0xde4584)
                    _0x5ab9b9['addColorAl' + 'pha'](0x0, 0x1), _0x5ab9b9['addColorAl' + 'pha'](0x1, 0x1);
                else
                    for (_0xbf89f8 = 0x0, _0x184f52 = _0xde4584['length']; _0xbf89f8 < _0x184f52; _0xbf89f8++) {
                        _0xbf89f8 == 0x3 && _0x184f52 > 0x4 && (_0xbf89f8 = _0x184f52 - 0x1, console['warn']('GradientDa' + 'taColor\x20wa' + 'rning:alph' + 'a\x20data\x20len' + 'gth\x20is\x20lar' + 'ge\x20than\x204,' + '\x20will\x20igno' + 're\x20the\x20mid' + 'dle\x20data.'));
                        var _0x40bec8 = _0xde4584[_0xbf89f8];
                        _0x5ab9b9['addColorAl' + 'pha'](_0x40bec8['key'], _0x40bec8['value']);
                    }
                var _0x354392 = _0x5a0b9a['rgbs'];
                if (!_0x354392)
                    _0x5ab9b9['addColorRG' + 'B'](0x0, new _0x5525ce(0x1, 0x1, 0x1, 0x1)), _0x5ab9b9['addColorRG' + 'B'](0x1, new _0x5525ce(0x1, 0x1, 0x1, 0x1));
                else
                    for (_0xbf89f8 = 0x0, _0x184f52 = _0x354392['length']; _0xbf89f8 < _0x184f52; _0xbf89f8++) {
                        _0xbf89f8 == 0x3 && _0x184f52 > 0x4 && (_0xbf89f8 = _0x184f52 - 0x1, console['warn']('GradientDa' + 'taColor\x20wa' + 'rning:rgb\x20' + 'data\x20lengt' + 'h\x20is\x20large' + '\x20than\x204,\x20w' + 'ill\x20ignore' + '\x20the\x20middl' + 'e\x20data.'));
                        var _0x521c41 = _0x354392[_0xbf89f8], _0x2f072f = _0x521c41['value'];
                        _0x5ab9b9['addColorRG' + 'B'](_0x521c41['key'], new _0x5525ce(_0x2f072f[0x0], _0x2f072f[0x1], _0x2f072f[0x2], 0x1));
                    }
            }
            return _0x5ab9b9;
        }
        ['_initParti' + 'cleFrame'](_0x205045) {
            var _0x1fdd6b = new _0x2ccdfa();
            if (_0x205045) {
                var _0x118115 = _0x205045['frames'];
                for (var _0x55fd54 = 0x0, _0x444897 = _0x118115['length']; _0x55fd54 < _0x444897; _0x55fd54++) {
                    var _0x2a8a65 = _0x118115[_0x55fd54];
                    _0x1fdd6b['add'](_0x2a8a65['key'], _0x2a8a65['value']);
                }
            } else
                _0x1fdd6b['add'](0x0, 0x0), _0x1fdd6b['add'](0x1, 0x1);
            return _0x1fdd6b;
        }
        static ['_initStart' + 'Life'](_0x3900c2) {
            var _0x114f8f = new _0x1731a8(), _0x4dc1fa = _0x3900c2['startLifet' + 'imes'];
            for (var _0x3184b2 = 0x0, _0x5018ec = _0x4dc1fa['length']; _0x3184b2 < _0x5018ec; _0x3184b2++) {
                var _0x4d228e = _0x4dc1fa[_0x3184b2];
                _0x114f8f['add'](_0x4d228e['key'], _0x4d228e['value']);
            }
            return _0x114f8f;
        }
        ['_initParti' + 'cleVelocit' + 'y'](_0x5245db) {
            var _0x4b5d8d = new _0x1731a8(), _0x5a23c0 = _0x5245db['velocitys'];
            for (var _0x19516a = 0x0, _0x191768 = _0x5a23c0['length']; _0x19516a < _0x191768; _0x19516a++) {
                var _0x45f0f5 = _0x5a23c0[_0x19516a];
                _0x4b5d8d['add'](_0x45f0f5['key'], _0x45f0f5['value']);
            }
            return _0x4b5d8d;
        }
        ['_initParti' + 'cleSize'](_0x4eed19) {
            var _0xdb5de7 = new _0x1731a8();
            if (_0x4eed19) {
                var _0x597e57 = _0x4eed19['sizes'];
                for (var _0x3bf591 = 0x0, _0x510471 = _0x597e57['length']; _0x3bf591 < _0x510471; _0x3bf591++) {
                    var _0x1fb3ea = _0x597e57[_0x3bf591];
                    _0xdb5de7['add'](_0x1fb3ea['key'], _0x1fb3ea['value']);
                }
            } else
                _0xdb5de7['add'](0x0, 0x0), _0xdb5de7['add'](0x1, 0x1);
            return _0xdb5de7;
        }
        ['_initParti' + 'cleRotatio' + 'n'](_0x30d627) {
            var _0x38f8d6 = new _0x1731a8(), _0x225f5e = _0x30d627['angularVel' + 'ocitys'];
            for (var _0x420a54 = 0x0, _0xde9f5c = _0x225f5e['length']; _0x420a54 < _0xde9f5c; _0x420a54++) {
                var _0x5d2a01 = _0x225f5e[_0x420a54];
                _0x38f8d6['add'](_0x5d2a01['key'], _0x5d2a01['value'] / 0xb4 * Math['PI']);
            }
            return _0x38f8d6;
        }
    }
    class _0x76a0e9 {
    }
    class _0x2edba7 extends _0x3bb578 {
        constructor(_0xafe78c) {
            super(_0xafe78c), this['_bones'] = [], this['_skinnedDa' + 'taLoopMark' + 's'] = [], this['_localBoun' + 'ds'] = new _0x1f1598(_0x352206['_ZERO'], _0x352206['_ZERO']), this['_cacheAnim' + 'ationNode'] = [];
        }
        get ['localBound' + 's']() {
            return this['_localBoun' + 'ds'];
        }
        set ['localBound' + 's'](_0x7e1293) {
            this['_localBoun' + 'ds'] = _0x7e1293;
        }
        get ['rootBone']() {
            return this['_cacheRoot' + 'Bone'];
        }
        set ['rootBone'](_0x412d66) {
            if (this['_cacheRoot' + 'Bone'] != _0x412d66) {
                if (this['_cacheRoot' + 'Bone'])
                    this['_cacheRoot' + 'Bone']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                else
                    this['_owner']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                if (_0x412d66)
                    _0x412d66['transform']['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                else
                    this['_owner']['transform']['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                this['_cacheRoot' + 'Bone'] = _0x412d66, this['_onWorldMa' + 'tNeedChang' + 'e'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE']);
            }
        }
        get ['bones']() {
            return this['_bones'];
        }
        ['_computeSk' + 'innedData']() {
            if (this['_cacheMesh'] && this['_cacheAvat' + 'ar'] || this['_cacheMesh'] && !this['_cacheAvat' + 'ar']) {
                var _0x1c2b2e = this['_cacheMesh']['_inverseBi' + 'ndPoses'], _0x52ab67 = this['_cacheMesh']['_skinnedMa' + 'trixCaches'];
                for (var _0x25d584 = 0x0, _0x11a935 = this['_cacheMesh']['subMeshCou' + 'nt']; _0x25d584 < _0x11a935; _0x25d584++) {
                    var _0x483773 = this['_cacheMesh']['getSubMesh'](_0x25d584)['_boneIndic' + 'esList'], _0x57930c = this['_skinnedDa' + 'ta'][_0x25d584];
                    for (var _0x347aad = 0x0, _0xbcd8b8 = _0x483773['length']; _0x347aad < _0xbcd8b8; _0x347aad++) {
                        var _0x1ff4b5 = _0x483773[_0x347aad];
                        this['_computeSu' + 'bSkinnedDa' + 'ta'](_0x1c2b2e, _0x1ff4b5, _0x57930c[_0x347aad], _0x52ab67);
                    }
                }
            }
        }
        ['_computeSu' + 'bSkinnedDa' + 'ta'](_0x51beb9, _0x2174d6, _0x171930, _0x47df38) {
            for (var _0x3f4d10 = 0x0, _0x474852 = _0x2174d6['length']; _0x3f4d10 < _0x474852; _0x3f4d10++) {
                var _0x27284f = _0x2174d6[_0x3f4d10];
                if (this['_skinnedDa' + 'taLoopMark' + 's'][_0x27284f] === _0x442335['Stat']['loopCount']) {
                    var _0x399a14 = _0x47df38[_0x27284f], _0x3d6fee = this['_skinnedDa' + 'ta'][_0x399a14['subMeshInd' + 'ex']][_0x399a14['batchIndex']], _0x577ab2 = _0x399a14['batchBoneI' + 'ndex'] * 0x10, _0x1a1c95 = _0x3f4d10 * 0x10;
                    for (var _0x2263ff = 0x0; _0x2263ff < 0x10; _0x2263ff++)
                        _0x171930[_0x1a1c95 + _0x2263ff] = _0x3d6fee[_0x577ab2 + _0x2263ff];
                } else
                    !this['_cacheAvat' + 'ar'] ? _0x47bed9['_mulMatrix' + 'Array'](this['_bones'][_0x27284f]['transform']['worldMatri' + 'x']['elements'], _0x51beb9[_0x27284f]['elements'], 0x0, _0x171930, _0x3f4d10 * 0x10) : _0x47bed9['_mulMatrix' + 'Array'](this['_cacheAnim' + 'ationNode'][_0x27284f]['transform']['getWorldMa' + 'trix'](), _0x51beb9[_0x27284f]['elements'], 0x0, _0x171930, _0x3f4d10 * 0x10), this['_skinnedDa' + 'taLoopMark' + 's'][_0x27284f] = _0x442335['Stat']['loopCount'];
            }
        }
        ['_onWorldMa' + 'tNeedChang' + 'e'](_0x1b4443) {
            this['_boundsCha' + 'nge'] = !![];
            if (this['_octreeNod' + 'e']) {
                if (this['_cacheAvat' + 'ar']) {
                    if (this['_indexInOc' + 'treeMotion' + 'List'] === -0x1)
                        this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this);
                } else {
                    _0x1b4443 &= _0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE'];
                    if (_0x1b4443) {
                        if (this['_indexInOc' + 'treeMotion' + 'List'] === -0x1)
                            this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this);
                    }
                }
            }
        }
        ['_createRen' + 'derElement']() {
            return new _0x5ca4bd();
        }
        ['_onMeshCha' + 'nge'](_0x5efeb6) {
            super['_onMeshCha' + 'nge'](_0x5efeb6), this['_cacheMesh'] = _0x5efeb6;
            var _0x14af39 = _0x5efeb6['subMeshCou' + 'nt'];
            this['_skinnedDa' + 'ta'] = [], this['_skinnedDa' + 'taLoopMark' + 's']['length'] = _0x5efeb6['_inverseBi' + 'ndPoses']['length'];
            for (var _0x5904e2 = 0x0; _0x5904e2 < _0x14af39; _0x5904e2++) {
                var _0x16d94d = _0x5efeb6['getSubMesh'](_0x5904e2)['_boneIndic' + 'esList'], _0x190389 = _0x16d94d['length'], _0x26a318 = this['_skinnedDa' + 'ta'][_0x5904e2] = [];
                for (var _0x59bd6c = 0x0; _0x59bd6c < _0x190389; _0x59bd6c++)
                    _0x26a318[_0x59bd6c] = new Float32Array(_0x16d94d[_0x59bd6c]['length'] * 0x10);
            }
            this['_cacheAvat' + 'ar'] && _0x5efeb6 && this['_getCacheA' + 'nimationNo' + 'des']();
        }
        ['_setCacheA' + 'nimator'](_0x1bff09) {
            this['_cacheAnim' + 'ator'] = _0x1bff09, this['_shaderVal' + 'ues']['addDefine'](_0x76a0e9['SHADERDEFI' + 'NE_BONE']), this['_setRootNo' + 'de']();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            if (!this['_cacheAvat' + 'ar']) {
                if (this['_cacheRoot' + 'Bone'])
                    this['_localBoun' + 'ds']['_tranform'](this['_cacheRoot' + 'Bone']['transform']['worldMatri' + 'x'], this['_bounds']);
                else
                    this['_localBoun' + 'ds']['_tranform'](this['_owner']['transform']['worldMatri' + 'x'], this['_bounds']);
            } else {
                if (this['_cacheAnim' + 'ator'] && this['_rootBone']) {
                    var _0x22f8b0 = _0x2edba7['_tempMatri' + 'x4x4'];
                    _0x47bed9['matrix4x4M' + 'ultiplyMFM'](this['_cacheAnim' + 'ator']['owner']['transform']['worldMatri' + 'x'], this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['getWorldMa' + 'trix'](), _0x22f8b0), this['_localBoun' + 'ds']['_tranform'](_0x22f8b0, this['_bounds']);
                } else
                    super['_calculate' + 'BoundingBo' + 'x']();
            }
        }
        ['_renderUpd' + 'ate'](_0x29360c, _0x1ee3e5) {
            if (this['_cacheAnim' + 'ator']) {
                this['_computeSk' + 'innedData']();
                if (!this['_cacheAvat' + 'ar'])
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x4c2288['DEFAULT']);
                else {
                    var _0x1b610c = this['_cacheAnim' + 'ator']['owner']['_transform'];
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x1b610c['worldMatri' + 'x']);
                }
            } else
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x1ee3e5['worldMatri' + 'x']);
            if (!this['_probRefle' + 'ction'])
                return;
            this['_reflectio' + 'nMode'] == _0x1f405c['Reflection' + 'ProbeMode']['off'] ? (this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION']), this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'], _0x542d3e['defaultTex' + 'tureHDRDec' + 'odeValues']), this['_shaderVal' + 'ues']['setTexture'](_0x22d3a2['REFLECTION' + 'TEXTURE'], _0x4b21e5['blackTextu' + 're'])) : (!this['_probRefle' + 'ction']['boxProject' + 'ion'] ? this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION']) : (this['_shaderVal' + 'ues']['addDefine'](_0x157bdb['SHADERDEFI' + 'NE_SPECCUB' + 'E_BOX_PROJ' + 'ECTION']), this['_shaderVal' + 'ues']['setVector3'](_0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'POSITION'], this['_probRefle' + 'ction']['probePosit' + 'ion']), this['_shaderVal' + 'ues']['setVector3'](_0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'BOXMAX'], this['_probRefle' + 'ction']['boundsMax']), this['_shaderVal' + 'ues']['setVector3'](_0x22d3a2['REFLECTION' + 'CUBE_PROBE' + 'BOXMIN'], this['_probRefle' + 'ction']['boundsMin'])), this['_shaderVal' + 'ues']['setTexture'](_0x22d3a2['REFLECTION' + 'TEXTURE'], this['_probRefle' + 'ction']['reflection' + 'Texture']), this['_shaderVal' + 'ues']['setVector'](_0x22d3a2['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'], this['_probRefle' + 'ction']['reflection' + 'HDRParams']));
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x61b773, _0xc939f0) {
            var _0x2ed910 = _0x61b773['projection' + 'ViewMatrix'];
            if (this['_cacheAnim' + 'ator']) {
                if (!this['_cacheAvat' + 'ar'])
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], _0x2ed910);
                else {
                    var _0x3d09cf = this['_cacheAnim' + 'ator']['owner']['_transform'];
                    _0x4c2288['multiply'](_0x2ed910, _0x3d09cf['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
                }
            } else
                _0x4c2288['multiply'](_0x2ed910, _0xc939f0['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
        }
        ['_destroy']() {
            super['_destroy']();
            if (!this['_cacheAvat' + 'ar']) {
                if (this['_cacheRoot' + 'Bone'])
                    !this['_cacheRoot' + 'Bone']['destroyed'] && this['_cacheRoot' + 'Bone']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                else
                    this['_owner'] && !this['_owner']['destroyed'] && this['_owner']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
            } else {
                if (this['_cacheRoot' + 'AnimationN' + 'ode'])
                    this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
            }
        }
        get ['bounds']() {
            return (this['_boundsCha' + 'nge'] || this['_cacheAvat' + 'ar']) && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = ![]), this['_bounds'];
        }
        ['_setRootBo' + 'ne'](_0xc28723) {
            this['_rootBone'] = _0xc28723, this['_setRootNo' + 'de']();
        }
        ['_setRootNo' + 'de']() {
            var _0x5e0ef5;
            if (this['_cacheAnim' + 'ator'] && this['_rootBone'] && this['_cacheAvat' + 'ar'])
                _0x5e0ef5 = this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'][this['_rootBone']];
            else
                _0x5e0ef5 = null;
            if (this['_cacheRoot' + 'AnimationN' + 'ode'] != _0x5e0ef5) {
                this['_onWorldMa' + 'tNeedChang' + 'e'](_0x203c65['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x203c65['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x203c65['TRANSFORM_' + 'WORLDSCALE']), this['_owner']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                if (this['_cacheRoot' + 'AnimationN' + 'ode'])
                    this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
                _0x5e0ef5 && _0x5e0ef5['transform']['on'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'AnimationN' + 'ode'] = _0x5e0ef5;
            }
        }
        ['_getCacheA' + 'nimationNo' + 'des']() {
            var _0x3c0d3c = this['_cacheMesh']['_boneNames'], _0x11581b = this['_cacheMesh']['_inverseBi' + 'ndPoses']['length'];
            this['_cacheAnim' + 'ationNode']['length'] = _0x11581b;
            var _0xa0b1dc = this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'];
            for (var _0x468c87 = 0x0; _0x468c87 < _0x11581b; _0x468c87++) {
                var _0x4aebf6 = _0xa0b1dc[_0x3c0d3c[_0x468c87]];
                this['_cacheAnim' + 'ationNode'][_0x468c87] = _0x4aebf6;
            }
        }
        ['_setCacheA' + 'vatar'](_0x3a1c81) {
            this['_cacheAvat' + 'ar'] !== _0x3a1c81 && (this['_cacheMesh'] ? (this['_cacheAvat' + 'ar'] = _0x3a1c81, _0x3a1c81 && (this['_shaderVal' + 'ues']['addDefine'](_0x76a0e9['SHADERDEFI' + 'NE_BONE']), this['_getCacheA' + 'nimationNo' + 'des']())) : this['_cacheAvat' + 'ar'] = _0x3a1c81, this['_setRootNo' + 'de']());
        }
        ['_computeSu' + 'bSkinnedDa' + 'taNative'](_0x5a4245, _0x585205, _0x419b57, _0x3f46bd, _0x2a3092) {
            _0x442335['LayaGL']['instance']['computeSub' + 'SkinnedDat' + 'a'](_0x5a4245, _0x585205, _0x419b57, _0x3f46bd, _0x2a3092);
        }
        ['_computeSk' + 'innedDataF' + 'orNative']() {
            if (this['_cacheMesh'] && this['_cacheAvat' + 'ar'] || this['_cacheMesh'] && !this['_cacheAvat' + 'ar']) {
                var _0x17b568 = this['_cacheMesh']['_inverseBi' + 'ndPoses'], _0x33445f = this['_cacheMesh']['_skinnedMa' + 'trixCaches'];
                for (var _0x51de6d = 0x0, _0x155c34 = this['_cacheMesh']['subMeshCou' + 'nt']; _0x51de6d < _0x155c34; _0x51de6d++) {
                    var _0x4ba816 = this['_cacheMesh']['getSubMesh'](_0x51de6d)['_boneIndic' + 'esList'], _0x39ac53 = this['_skinnedDa' + 'ta'][_0x51de6d];
                    for (var _0x474e5f = 0x0, _0x41d51c = _0x4ba816['length']; _0x474e5f < _0x41d51c; _0x474e5f++) {
                        var _0x1dee15 = _0x4ba816[_0x474e5f];
                        this['_computeSu' + 'bSkinnedDa' + 'ta'](_0x17b568, _0x1dee15, _0x39ac53[_0x474e5f], _0x33445f);
                    }
                }
            }
        }
    }
    _0x2edba7['_tempMatri' + 'x4x4'] = new _0x4c2288();
    class _0xa58a85 extends _0x22d3a2 {
        constructor(_0x4d487b = null, _0x39f4f0 = null) {
            super(_0x39f4f0), this['_meshFilte' + 'r'] = new _0x2da43c(this), this['_render'] = new _0x2edba7(this), _0x4d487b && (this['_meshFilte' + 'r']['sharedMesh'] = _0x4d487b);
        }
        static ['__init__']() {
            _0x76a0e9['SHADERDEFI' + 'NE_BONE'] = _0x18824e['getDefineB' + 'yName']('BONE'), _0x76a0e9['SHADERDEFI' + 'NE_SIMPLEB' + 'ONE'] = _0x18824e['getDefineB' + 'yName']('SIMPLEBONE');
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['skinnedMes' + 'hRenderer']() {
            return this['_render'];
        }
        ['_parse'](_0x49ebe3, _0x27799f) {
            super['_parse'](_0x49ebe3, _0x27799f);
            var _0x34f8c3 = this['skinnedMes' + 'hRenderer'], _0x2a3bf6 = _0x49ebe3['lightmapIn' + 'dex'];
            _0x2a3bf6 != null && (_0x34f8c3['lightmapIn' + 'dex'] = _0x2a3bf6);
            var _0x1b0920 = _0x49ebe3['lightmapSc' + 'aleOffset'];
            _0x1b0920 && (_0x34f8c3['lightmapSc' + 'aleOffset'] = new _0x18425e(_0x1b0920[0x0], _0x1b0920[0x1], _0x1b0920[0x2], _0x1b0920[0x3])), _0x49ebe3['enableRend' + 'er'] != undefined && (_0x34f8c3['enable'] = _0x49ebe3['enableRend' + 'er']), _0x49ebe3['receiveSha' + 'dows'] != undefined && (_0x34f8c3['receiveSha' + 'dow'] = _0x49ebe3['receiveSha' + 'dows']), _0x49ebe3['castShadow'] != undefined && (_0x34f8c3['castShadow'] = _0x49ebe3['castShadow']);
            var _0xcc6b55;
            _0xcc6b55 = _0x49ebe3['meshPath'];
            if (_0xcc6b55) {
                var _0x20c96d = _0x442335['Loader']['getRes'](_0xcc6b55);
                _0x20c96d && (this['meshFilter']['sharedMesh'] = _0x20c96d);
            }
            var _0xbca646 = _0x49ebe3['materials'];
            if (_0xbca646) {
                var _0x41f592 = _0x34f8c3['sharedMate' + 'rials'], _0xe434b3 = _0xbca646['length'];
                _0x41f592['length'] = _0xe434b3;
                for (var _0xbd5c5d = 0x0; _0xbd5c5d < _0xe434b3; _0xbd5c5d++) {
                    _0x41f592[_0xbd5c5d] = _0x442335['Loader']['getRes'](_0xbca646[_0xbd5c5d]['path']);
                }
                _0x34f8c3['sharedMate' + 'rials'] = _0x41f592;
            }
            var _0x3eccfe = _0x49ebe3['boundBox'], _0x2470ec = _0x3eccfe['min'], _0x34691e = _0x3eccfe['max'];
            _0x34f8c3['localBound' + 's']['setMin'](new _0x352206(_0x2470ec[0x0], _0x2470ec[0x1], _0x2470ec[0x2])), _0x34f8c3['localBound' + 's']['setMax'](new _0x352206(_0x34691e[0x0], _0x34691e[0x1], _0x34691e[0x2]));
            if (_0x27799f) {
                var _0x49d318 = _0x49ebe3['rootBone'];
                _0x34f8c3['rootBone'] = _0x27799f[_0x49d318];
                var _0x2dc3e2 = _0x49ebe3['bones'], _0x3a045e;
                for (_0xbd5c5d = 0x0, _0x3a045e = _0x2dc3e2['length']; _0xbd5c5d < _0x3a045e; _0xbd5c5d++)
                    _0x34f8c3['bones']['push'](_0x27799f[_0x2dc3e2[_0xbd5c5d]]);
            } else
                _0x49ebe3['rootBone'] && _0x34f8c3['_setRootBo' + 'ne'](_0x49ebe3['rootBone']);
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x2be768) {
            super['_changeHie' + 'rarchyAnim' + 'ator'](_0x2be768), this['skinnedMes' + 'hRenderer']['_setCacheA' + 'nimator'](_0x2be768);
        }
        ['_changeAni' + 'matorAvata' + 'r'](_0x58553d) {
            this['skinnedMes' + 'hRenderer']['_setCacheA' + 'vatar'](_0x58553d);
        }
        ['_cloneTo'](_0x424942, _0x2dc3c8, _0x1dfc57) {
            var _0x1ef06a = _0x424942;
            _0x1ef06a['meshFilter']['sharedMesh'] = this['meshFilter']['sharedMesh'];
            var _0x32b391 = this['_render'], _0x23d2a6 = _0x1ef06a['_render'];
            _0x23d2a6['enable'] = _0x32b391['enable'], _0x23d2a6['sharedMate' + 'rials'] = _0x32b391['sharedMate' + 'rials'], _0x23d2a6['castShadow'] = _0x32b391['castShadow'];
            var _0x2fd015 = _0x32b391['lightmapSc' + 'aleOffset'];
            _0x2fd015 && (_0x23d2a6['lightmapSc' + 'aleOffset'] = _0x2fd015['clone']()), _0x23d2a6['receiveSha' + 'dow'] = _0x32b391['receiveSha' + 'dow'], _0x23d2a6['sortingFud' + 'ge'] = _0x32b391['sortingFud' + 'ge'], _0x23d2a6['_rootBone'] = _0x32b391['_rootBone'];
            var _0x2fdd8c = _0x32b391['bones'], _0x10ea11 = _0x23d2a6['bones'], _0x581ebd = _0x2fdd8c['length'];
            _0x10ea11['length'] = _0x581ebd;
            var _0x3d8f3e = _0x32b391['rootBone'];
            if (_0x3d8f3e) {
                var _0x10448b = _0x47bed9['_getHierar' + 'chyPath'](_0x2dc3c8, _0x3d8f3e, _0xa58a85['_tempArray' + '0']);
                if (_0x10448b)
                    _0x23d2a6['rootBone'] = _0x47bed9['_getNodeBy' + 'HierarchyP' + 'ath'](_0x1dfc57, _0x10448b);
                else
                    _0x23d2a6['rootBone'] = _0x3d8f3e;
            }
            for (var _0x41c00d = 0x0; _0x41c00d < _0x2fdd8c['length']; _0x41c00d++) {
                _0x10448b = _0x47bed9['_getHierar' + 'chyPath'](_0x2dc3c8, _0x2fdd8c[_0x41c00d], _0xa58a85['_tempArray' + '0']);
                if (_0x10448b)
                    _0x10ea11[_0x41c00d] = _0x47bed9['_getNodeBy' + 'HierarchyP' + 'ath'](_0x1dfc57, _0x10448b);
                else
                    _0x10ea11[_0x41c00d] = _0x2fdd8c[_0x41c00d];
            }
            var _0x2bfb53 = _0x32b391['localBound' + 's'];
            _0x2bfb53 && _0x2bfb53['cloneTo'](_0x23d2a6['localBound' + 's']), super['_cloneTo'](_0x424942, _0x2dc3c8, _0x1dfc57);
        }
        ['destroy'](_0x5aa62a = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x5aa62a), this['_meshFilte' + 'r']['destroy']();
        }
        ['_create']() {
            return new _0xa58a85();
        }
    }
    _0xa58a85['_tempArray' + '0'] = [], _0xa58a85['BONES'] = _0x18824e['propertyNa' + 'meToID']('u_Bones'), _0xa58a85['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_SimpleAn' + 'imatorText' + 'ure'), _0xa58a85['SIMPLE_SIM' + 'PLEANIMATO' + 'RPARAMS'] = _0x18824e['propertyNa' + 'meToID']('u_SimpleAn' + 'imatorPara' + 'ms'), _0xa58a85['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURESI' + 'ZE'] = _0x18824e['propertyNa' + 'meToID']('u_SimpleAn' + 'imatorText' + 'ureSize');
    class _0x31d253 extends _0x2b6b33 {
        constructor() {
            super(), this['setShaderN' + 'ame']('Trail'), this['_color'] = new _0x18425e(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0x31d253['TINTCOLOR'], new _0x18425e(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x31d253['RENDERMODE' + '_ALPHABLEN' + 'DED'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x31d253['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x18824e['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x31d253['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x18824e['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x31d253['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x18824e['getDefineB' + 'yName']('ADDTIVEFOG');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x4e2765) {
            this['_color']['x'] = _0x4e2765, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x55c210) {
            this['_color']['y'] = _0x55c210, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x2e1895) {
            this['_color']['z'] = _0x2e1895, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x277cb9) {
            this['_color']['w'] = _0x277cb9, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x5871a7) {
            var _0x4a8a61 = this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET']);
            _0x4a8a61['x'] = _0x5871a7, this['tilingOffs' + 'et'] = _0x4a8a61;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x3c8089) {
            var _0x17235b = this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET']);
            _0x17235b['y'] = _0x3c8089, this['tilingOffs' + 'et'] = _0x17235b;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x721fbe) {
            var _0x2f5049 = this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET']);
            _0x2f5049['z'] = _0x721fbe, this['tilingOffs' + 'et'] = _0x2f5049;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x519377) {
            var _0x596586 = this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET']);
            _0x596586['w'] = _0x519377, this['tilingOffs' + 'et'] = _0x596586;
        }
        set ['renderMode'](_0x166fb9) {
            switch (_0x166fb9) {
            case _0x31d253['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_NONE'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x31d253['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x31d253['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x2b6b33['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = ![], this['depthWrite'] = ![], this['cull'] = _0x5c0fbd['CULL_NONE'], this['blend'] = _0x5c0fbd['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x5c0fbd['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x5c0fbd['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x31d253['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('TrailMater' + 'ial\x20:\x20rend' + 'erMode\x20val' + 'ue\x20error.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x663b63) {
            this['_TintColor' + 'R'] = _0x663b63;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x5e7bed) {
            this['_TintColor' + 'G'] = _0x5e7bed;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x5ab428) {
            this['_TintColor' + 'B'] = _0x5ab428;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x10fcad) {
            this['_TintColor' + 'A'] = _0x10fcad;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x31d253['TINTCOLOR']);
        }
        set ['color'](_0x568f04) {
            this['_shaderVal' + 'ues']['setVector'](_0x31d253['TINTCOLOR'], _0x568f04);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x31d253['MAINTEXTUR' + 'E']);
        }
        set ['texture'](_0xb7aa8c) {
            if (_0xb7aa8c)
                this['_shaderVal' + 'ues']['addDefine'](_0x31d253['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']);
            else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x31d253['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']);
            this['_shaderVal' + 'ues']['setTexture'](_0x31d253['MAINTEXTUR' + 'E'], _0xb7aa8c);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x4364e6) {
            this['_MainTex_S' + 'TX'] = _0x4364e6;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x257adf) {
            this['_MainTex_S' + 'TY'] = _0x257adf;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x3179c8) {
            this['_MainTex_S' + 'TZ'] = _0x3179c8;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x2d9de2) {
            this['_MainTex_S' + 'TW'] = _0x2d9de2;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x31d253['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x25d1ea) {
            if (_0x25d1ea) {
                if (_0x25d1ea['x'] != 0x1 || _0x25d1ea['y'] != 0x1 || _0x25d1ea['z'] != 0x0 || _0x25d1ea['w'] != 0x0)
                    this['_shaderVal' + 'ues']['addDefine'](_0x31d253['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
                else
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x31d253['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x31d253['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']);
            this['_shaderVal' + 'ues']['setVector'](_0x31d253['TILINGOFFS' + 'ET'], _0x25d1ea);
        }
        set ['depthWrite'](_0x43a565) {
            this['_shaderVal' + 'ues']['setBool'](_0x31d253['DEPTH_WRIT' + 'E'], _0x43a565);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x31d253['DEPTH_WRIT' + 'E']);
        }
        set ['cull'](_0x30e311) {
            this['_shaderVal' + 'ues']['setInt'](_0x31d253['CULL'], _0x30e311);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x31d253['CULL']);
        }
        set ['blend'](_0xfbc69e) {
            this['_shaderVal' + 'ues']['setInt'](_0x31d253['BLEND'], _0xfbc69e);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x31d253['BLEND']);
        }
        set ['blendSrc'](_0x1ba911) {
            this['_shaderVal' + 'ues']['setInt'](_0x31d253['BLEND_SRC'], _0x1ba911);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x31d253['BLEND_SRC']);
        }
        set ['blendDst'](_0x76f754) {
            this['_shaderVal' + 'ues']['setInt'](_0x31d253['BLEND_DST'], _0x76f754);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x31d253['BLEND_DST']);
        }
        set ['depthTest'](_0x583288) {
            this['_shaderVal' + 'ues']['setInt'](_0x31d253['DEPTH_TEST'], _0x583288);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x31d253['DEPTH_TEST']);
        }
        ['clone']() {
            var _0x52af33 = new _0x31d253();
            return this['cloneTo'](_0x52af33), _0x52af33;
        }
    }
    _0x31d253['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x0, _0x31d253['RENDERMODE' + '_ADDTIVE'] = 0x1, _0x31d253['MAINTEXTUR' + 'E'] = _0x18824e['propertyNa' + 'meToID']('u_MainText' + 'ure'), _0x31d253['TINTCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_MainColo' + 'r'), _0x31d253['TILINGOFFS' + 'ET'] = _0x18824e['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x31d253['CULL'] = _0x18824e['propertyNa' + 'meToID']('s_Cull'), _0x31d253['BLEND'] = _0x18824e['propertyNa' + 'meToID']('s_Blend'), _0x31d253['BLEND_SRC'] = _0x18824e['propertyNa' + 'meToID']('s_BlendSrc'), _0x31d253['BLEND_DST'] = _0x18824e['propertyNa' + 'meToID']('s_BlendDst'), _0x31d253['DEPTH_TEST'] = _0x18824e['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x31d253['DEPTH_WRIT' + 'E'] = _0x18824e['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x134e0d {
    }
    _0x134e0d['Stretch'] = 0x0, _0x134e0d['Tile'] = 0x1, function (_0x26a95b) {
        _0x26a95b[_0x26a95b['View'] = 0x0] = 'View', _0x26a95b[_0x26a95b['TransformZ'] = 0x1] = 'TransformZ';
    }(_0x1f405c['TrailAlign' + 'ment'] || (_0x1f405c['TrailAlign' + 'ment'] = {}));
    class _0x51f657 {
        static get ['vertexDecl' + 'aration1']() {
            return _0x51f657['_vertexDec' + 'laration1'];
        }
        static get ['vertexDecl' + 'aration2']() {
            return _0x51f657['_vertexDec' + 'laration2'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x51f657['_vertexDec' + 'laration1'];
        }
        static ['__init__']() {
            _0x51f657['_vertexDec' + 'laration1'] = new _0x19d0a5(0x20, [
                new _0x549a90(0x0, _0x5cc56b['Vector3'], _0x51f657['TRAIL_POSI' + 'TION0']),
                new _0x549a90(0xc, _0x5cc56b['Vector3'], _0x51f657['TRAIL_OFFS' + 'ETVECTOR']),
                new _0x549a90(0x18, _0x5cc56b['Single'], _0x51f657['TRAIL_TIME' + '0']),
                new _0x549a90(0x1c, _0x5cc56b['Single'], _0x51f657['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'])
            ]), _0x51f657['_vertexDec' + 'laration2'] = new _0x19d0a5(0x14, [
                new _0x549a90(0x0, _0x5cc56b['Single'], _0x51f657['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X']),
                new _0x549a90(0x4, _0x5cc56b['Color'], _0x51f657['TRAIL_COLO' + 'R'])
            ]);
        }
    }
    _0x51f657['TRAIL_POSI' + 'TION0'] = 0x0, _0x51f657['TRAIL_OFFS' + 'ETVECTOR'] = 0x1, _0x51f657['TRAIL_TIME' + '0'] = 0x2, _0x51f657['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'] = 0x3, _0x51f657['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X'] = 0x4, _0x51f657['TRAIL_COLO' + 'R'] = 0x5;
    class _0x5201a1 extends _0x355f63 {
        constructor(_0x454989) {
            super(), this['_floatCoun' + 'tPerVertic' + 'es1'] = 0x8, this['_floatCoun' + 'tPerVertic' + 'es2'] = 0x5, this['_increaseS' + 'egementCou' + 'nt'] = 0x10, this['_activeInd' + 'ex'] = 0x0, this['_endIndex'] = 0x0, this['_needAddFi' + 'rstVertex'] = ![], this['_isTempEnd' + 'Vertex'] = ![], this['_vertices1'] = null, this['_vertices2'] = null, this['_lastFixed' + 'VertexPosi' + 'tion'] = new _0x352206(), this['_bufferSta' + 'te'] = new _0x2f0542(), this['tmpColor'] = new _0x5525ce(), this['_disappear' + 'BoundsMode'] = ![], this['_owner'] = _0x454989, this['_segementC' + 'ount'] = this['_increaseS' + 'egementCou' + 'nt'], this['_resizeDat' + 'a'](this['_segementC' + 'ount'], this['_bufferSta' + 'te']);
            var _0x1b2ea8 = this['_owner']['_owner']['trailRende' + 'rer']['bounds'], _0x450d2c = this['_owner']['_owner']['transform']['position'];
            _0x1b2ea8['setMin'](_0x450d2c), _0x1b2ea8['setMax'](_0x450d2c);
        }
        ['_resizeDat' + 'a'](_0x415fa7, _0x51f7d9) {
            this['_subBirthT' + 'ime'] = new Float32Array(_0x415fa7), this['_subDistan' + 'ce'] = new Float64Array(_0x415fa7);
            var _0x214524 = _0x442335['LayaGL']['instance'], _0x9c7d49 = _0x415fa7 * 0x2, _0x59b7a1 = _0x51f657['vertexDecl' + 'aration1'], _0x2ddd1b = _0x51f657['vertexDecl' + 'aration2'], _0x9f360d = [], _0x458153 = _0x9c7d49 * _0x59b7a1['vertexStri' + 'de'], _0x166177 = _0x9c7d49 * _0x2ddd1b['vertexStri' + 'de'], _0x44baf0 = _0x458153 + _0x166177;
            this['_vertices1'] = new Float32Array(_0x9c7d49 * this['_floatCoun' + 'tPerVertic' + 'es1']), this['_vertices2'] = new Float32Array(_0x9c7d49 * this['_floatCoun' + 'tPerVertic' + 'es2']), this['_vertexBuf' + 'fer1'] = new _0x251441(_0x458153, _0x214524['STATIC_DRA' + 'W'], ![]), this['_vertexBuf' + 'fer1']['vertexDecl' + 'aration'] = _0x59b7a1, this['_vertexBuf' + 'fer2'] = new _0x251441(_0x166177, _0x214524['DYNAMIC_DR' + 'AW'], ![]), this['_vertexBuf' + 'fer2']['vertexDecl' + 'aration'] = _0x2ddd1b, _0x9f360d['push'](this['_vertexBuf' + 'fer1']), _0x9f360d['push'](this['_vertexBuf' + 'fer2']), _0x51f7d9['bind'](), _0x51f7d9['applyVerte' + 'xBuffers'](_0x9f360d), _0x51f7d9['unBind'](), _0x442335['Resource']['_addMemory'](_0x44baf0, _0x44baf0);
        }
        ['_resetData']() {
            var _0x12a062 = this['_endIndex'] - this['_activeInd' + 'ex'], _0xd0e58c = new Float32Array(this['_vertices1']['buffer'], this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2 * this['_activeInd' + 'ex'] * 0x4, this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2 * _0x12a062), _0x41e88e = new Float32Array(this['_vertices2']['buffer'], this['_floatCoun' + 'tPerVertic' + 'es2'] * 0x2 * this['_activeInd' + 'ex'] * 0x4, this['_floatCoun' + 'tPerVertic' + 'es2'] * 0x2 * _0x12a062), _0x4aaca4 = new Float64Array(this['_subDistan' + 'ce']['buffer'], this['_activeInd' + 'ex'] * 0x8, _0x12a062), _0x668ac9 = new Float32Array(this['_subBirthT' + 'ime']['buffer'], this['_activeInd' + 'ex'] * 0x4, _0x12a062);
            if (_0x12a062 === this['_segementC' + 'ount']) {
                var _0x4c7e76 = this['_vertexBuf' + 'fer1']['_byteLengt' + 'h'] + this['_vertexBuf' + 'fer2']['_byteLengt' + 'h'];
                _0x442335['Resource']['_addMemory'](-_0x4c7e76, -_0x4c7e76), this['_vertexBuf' + 'fer1']['destroy'](), this['_vertexBuf' + 'fer2']['destroy'](), this['_segementC' + 'ount'] += this['_increaseS' + 'egementCou' + 'nt'], this['_resizeDat' + 'a'](this['_segementC' + 'ount'], this['_bufferSta' + 'te']);
            }
            this['_vertices1']['set'](_0xd0e58c, 0x0), this['_vertices2']['set'](_0x41e88e, 0x0), this['_subDistan' + 'ce']['set'](_0x4aaca4, 0x0), this['_subBirthT' + 'ime']['set'](_0x668ac9, 0x0), this['_endIndex'] = _0x12a062, this['_activeInd' + 'ex'] = 0x0, this['_vertexBuf' + 'fer1']['setData'](this['_vertices1']['buffer'], 0x0, this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2 * this['_activeInd' + 'ex'] * 0x4, this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2 * _0x12a062 * 0x4), this['_vertexBuf' + 'fer2']['setData'](this['_vertices2']['buffer'], 0x0, this['_floatCoun' + 'tPerVertic' + 'es2'] * 0x2 * this['_activeInd' + 'ex'] * 0x4, this['_floatCoun' + 'tPerVertic' + 'es2'] * 0x2 * _0x12a062 * 0x4);
        }
        ['_updateTra' + 'il'](_0x1e4edf, _0x3b3c93, _0x6e5337) {
            if (!_0x352206['equals'](_0x3b3c93, _0x6e5337)) {
                if (this['_endIndex'] - this['_activeInd' + 'ex'] === 0x0)
                    this['_addTrailB' + 'yFirstPosi' + 'tion'](_0x1e4edf, _0x6e5337);
                else
                    this['_addTrailB' + 'yNextPosit' + 'ion'](_0x1e4edf, _0x6e5337);
            }
        }
        ['_addTrailB' + 'yFirstPosi' + 'tion'](_0x5910b9, _0x31ac51) {
            this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_subDistan' + 'ce'][this['_endIndex']] = 0x0, this['_subBirthT' + 'ime'][this['_endIndex']] = this['_owner']['_curtime'], this['_endIndex']++, _0x31ac51['cloneTo'](this['_lastFixed' + 'VertexPosi' + 'tion']), this['_needAddFi' + 'rstVertex'] = !![];
        }
        ['_addTrailB' + 'yNextPosit' + 'ion'](_0x164809, _0x544dbd) {
            var _0x31ba74 = _0x5201a1['_tempVecto' + 'r30'], _0x6cdb5f = _0x5201a1['_tempVecto' + 'r31'];
            switch (this['_owner']['alignment']) {
            case _0x1f405c['TrailAlign' + 'ment']['View']:
                var _0x3e998e = _0x164809['viewMatrix'];
                _0x352206['transformC' + 'oordinate'](_0x544dbd, _0x3e998e, _0x5201a1['_tempVecto' + 'r33']), _0x352206['transformC' + 'oordinate'](this['_lastFixed' + 'VertexPosi' + 'tion'], _0x3e998e, _0x5201a1['_tempVecto' + 'r34']), _0x352206['subtract'](_0x5201a1['_tempVecto' + 'r33'], _0x5201a1['_tempVecto' + 'r34'], _0x31ba74), _0x352206['cross'](_0x5201a1['_tempVecto' + 'r33'], _0x31ba74, _0x6cdb5f);
                break;
            case _0x1f405c['TrailAlign' + 'ment']['TransformZ']:
                _0x352206['subtract'](_0x544dbd, this['_lastFixed' + 'VertexPosi' + 'tion'], _0x31ba74);
                var _0x20dc8b = _0x5201a1['_tempVecto' + 'r32'];
                this['_owner']['_owner']['transform']['getForward'](_0x20dc8b), _0x352206['cross'](_0x31ba74, _0x20dc8b, _0x6cdb5f);
                break;
            }
            _0x352206['normalize'](_0x6cdb5f, _0x6cdb5f), _0x352206['scale'](_0x6cdb5f, this['_owner']['widthMulti' + 'plier'] / 0x2, _0x6cdb5f);
            var _0x5cdba1 = _0x352206['scalarLeng' + 'th'](_0x31ba74), _0x86ff91, _0xd15528;
            this['_needAddFi' + 'rstVertex'] && (this['_updateVer' + 'ticesByPos' + 'itionData'](_0x544dbd, _0x6cdb5f, this['_endIndex'] - 0x1), this['_needAddFi' + 'rstVertex'] = ![]), _0x5cdba1 - this['_owner']['minVertexD' + 'istance'] >= _0xc6f01['zeroTolera' + 'nce'] ? (this['_isTempEnd' + 'Vertex'] ? (_0x86ff91 = this['_endIndex'] - 0x1, _0xd15528 = _0x5cdba1 - this['_subDistan' + 'ce'][_0x86ff91], this['_updateVer' + 'ticesByPos' + 'ition'](_0x544dbd, _0x6cdb5f, _0x5cdba1, _0x86ff91), this['_owner']['_totalLeng' + 'th'] += _0xd15528) : (this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_updateVer' + 'ticesByPos' + 'ition'](_0x544dbd, _0x6cdb5f, _0x5cdba1, this['_endIndex']), this['_owner']['_totalLeng' + 'th'] += _0x5cdba1, this['_endIndex']++), _0x544dbd['cloneTo'](this['_lastFixed' + 'VertexPosi' + 'tion']), this['_isTempEnd' + 'Vertex'] = ![]) : (this['_isTempEnd' + 'Vertex'] ? (_0x86ff91 = this['_endIndex'] - 0x1, _0xd15528 = _0x5cdba1 - this['_subDistan' + 'ce'][_0x86ff91], this['_updateVer' + 'ticesByPos' + 'ition'](_0x544dbd, _0x6cdb5f, _0x5cdba1, _0x86ff91), this['_owner']['_totalLeng' + 'th'] += _0xd15528) : (this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_updateVer' + 'ticesByPos' + 'ition'](_0x544dbd, _0x6cdb5f, _0x5cdba1, this['_endIndex']), this['_owner']['_totalLeng' + 'th'] += _0x5cdba1, this['_endIndex']++), this['_isTempEnd' + 'Vertex'] = !![]);
        }
        ['_updateVer' + 'ticesByPos' + 'itionData'](_0xea64b8, _0x230dba, _0x36ab2b) {
            var _0x5788f1 = this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2 * _0x36ab2b, _0x7809f6 = this['_owner']['_curtime'];
            this['_vertices1'][_0x5788f1] = _0xea64b8['x'], this['_vertices1'][_0x5788f1 + 0x1] = _0xea64b8['y'], this['_vertices1'][_0x5788f1 + 0x2] = _0xea64b8['z'], this['_vertices1'][_0x5788f1 + 0x3] = -_0x230dba['x'], this['_vertices1'][_0x5788f1 + 0x4] = -_0x230dba['y'], this['_vertices1'][_0x5788f1 + 0x5] = -_0x230dba['z'], this['_vertices1'][_0x5788f1 + 0x6] = _0x7809f6, this['_vertices1'][_0x5788f1 + 0x7] = 0x1, this['_vertices1'][_0x5788f1 + 0x8] = _0xea64b8['x'], this['_vertices1'][_0x5788f1 + 0x9] = _0xea64b8['y'], this['_vertices1'][_0x5788f1 + 0xa] = _0xea64b8['z'], this['_vertices1'][_0x5788f1 + 0xb] = _0x230dba['x'], this['_vertices1'][_0x5788f1 + 0xc] = _0x230dba['y'], this['_vertices1'][_0x5788f1 + 0xd] = _0x230dba['z'], this['_vertices1'][_0x5788f1 + 0xe] = _0x7809f6, this['_vertices1'][_0x5788f1 + 0xf] = 0x0;
            var _0x8aa53b = this['_owner']['_owner']['trailRende' + 'rer']['bounds'], _0x48fd6b = _0x8aa53b['getMin'](), _0x512bd6 = _0x8aa53b['getMax'](), _0x1b79c8 = _0x5201a1['_tempVecto' + 'r35'], _0xc9a41e = _0x5201a1['_tempVecto' + 'r36'], _0x35a5df = _0x5201a1['_tempVecto' + 'r32'];
            _0x352206['add'](_0xea64b8, _0x230dba, _0x1b79c8), _0x352206['subtract'](_0xea64b8, _0x230dba, _0xc9a41e), _0x352206['min'](_0xc9a41e, _0x1b79c8, _0x35a5df), _0x352206['min'](_0x48fd6b, _0x35a5df, _0x48fd6b), _0x8aa53b['setMin'](_0x48fd6b), _0x352206['max'](_0x1b79c8, _0xc9a41e, _0x35a5df), _0x352206['max'](_0x512bd6, _0x35a5df, _0x512bd6), _0x8aa53b['setMax'](_0x512bd6);
            var _0x411ce9 = this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2;
            this['_vertexBuf' + 'fer1']['setData'](this['_vertices1']['buffer'], _0x5788f1 * 0x4, _0x5788f1 * 0x4, _0x411ce9 * 0x4);
        }
        ['_updateVer' + 'ticesByPos' + 'ition'](_0x5e2511, _0x3907a1, _0x57d762, _0x5c0a4f) {
            this['_updateVer' + 'ticesByPos' + 'itionData'](_0x5e2511, _0x3907a1, _0x5c0a4f), this['_subDistan' + 'ce'][_0x5c0a4f] = _0x57d762, this['_subBirthT' + 'ime'][_0x5c0a4f] = this['_owner']['_curtime'];
        }
        ['_updateVer' + 'texBufferU' + 'V']() {
            var _0xf119fa, _0xc423ca, _0x4be684;
            if (this['_disappear' + 'BoundsMode']) {
                _0xf119fa = this['_owner']['_owner']['trailRende' + 'rer']['bounds'];
                var _0x15ce8e = this['_owner']['_owner']['transform']['position'];
                _0xf119fa['setMin'](_0x15ce8e), _0xf119fa['setMax'](_0x15ce8e), _0xc423ca = _0xf119fa['getMin'](), _0x4be684 = _0xf119fa['getMax']();
            }
            var _0x14158e = this['_endIndex'], _0x4f965d = 0x0, _0xb4f86c = this['_owner']['colorGradi' + 'ent'], _0x43af6f = _0xb4f86c['colorAlpha' + 'KeysCount'] - 0x1, _0x9b55ca = _0xb4f86c['colorRGBKe' + 'ysCount'] - 0x1, _0x336d1b = this['_owner']['_totalLeng' + 'th'], _0xc4ba61 = this['_floatCoun' + 'tPerVertic' + 'es2'] * 0x2;
            for (var _0xaa2479 = this['_activeInd' + 'ex']; _0xaa2479 < _0x14158e; _0xaa2479++) {
                _0xaa2479 !== this['_activeInd' + 'ex'] && (_0x4f965d += this['_subDistan' + 'ce'][_0xaa2479]);
                var _0x5c2bdd, _0x884e80;
                this['_owner']['textureMod' + 'e'] == _0x134e0d['Stretch'] ? (_0x5c2bdd = 0x1 - _0x4f965d / _0x336d1b, _0x884e80 = _0x5c2bdd) : (_0x884e80 = 0x1 - _0x4f965d / _0x336d1b, _0x5c2bdd = 0x1 - (_0x336d1b - _0x4f965d));
                _0x9b55ca = _0xb4f86c['evaluateCo' + 'lorRGB'](_0x884e80, this['tmpColor'], _0x9b55ca, !![]), _0x43af6f = _0xb4f86c['evaluateCo' + 'lorAlpha'](_0x884e80, this['tmpColor'], _0x43af6f, !![]);
                var _0x569c26 = _0xaa2479 * _0xc4ba61;
                this['_vertices2'][_0x569c26 + 0x0] = _0x5c2bdd, this['_vertices2'][_0x569c26 + 0x1] = this['tmpColor']['r'], this['_vertices2'][_0x569c26 + 0x2] = this['tmpColor']['g'], this['_vertices2'][_0x569c26 + 0x3] = this['tmpColor']['b'], this['_vertices2'][_0x569c26 + 0x4] = this['tmpColor']['a'], this['_vertices2'][_0x569c26 + 0x5] = _0x5c2bdd, this['_vertices2'][_0x569c26 + 0x6] = this['tmpColor']['r'], this['_vertices2'][_0x569c26 + 0x7] = this['tmpColor']['g'], this['_vertices2'][_0x569c26 + 0x8] = this['tmpColor']['b'], this['_vertices2'][_0x569c26 + 0x9] = this['tmpColor']['a'];
                if (this['_disappear' + 'BoundsMode']) {
                    var _0x345ca0 = this['_floatCoun' + 'tPerVertic' + 'es1'] * 0x2 * _0xaa2479, _0x4e5f53 = _0x5201a1['_tempVecto' + 'r32'], _0xac3843 = _0x5201a1['_tempVecto' + 'r33'], _0x22e121 = _0x5201a1['_tempVecto' + 'r34'];
                    _0x4e5f53['setValue'](this['_vertices1'][_0x345ca0 + 0x0], this['_vertices1'][_0x345ca0 + 0x1], this['_vertices1'][_0x345ca0 + 0x2]), _0xac3843['setValue'](this['_vertices1'][_0x345ca0 + 0x3], this['_vertices1'][_0x345ca0 + 0x4], this['_vertices1'][_0x345ca0 + 0x5]), _0x352206['add'](_0x4e5f53, _0xac3843, _0x22e121), _0x352206['min'](_0x22e121, _0xc423ca, _0xc423ca), _0x352206['max'](_0x22e121, _0x4be684, _0x4be684), _0x352206['subtract'](_0x4e5f53, _0xac3843, _0x22e121), _0x352206['min'](_0x22e121, _0xc423ca, _0xc423ca), _0x352206['max'](_0x22e121, _0x4be684, _0x4be684);
                }
            }
            this['_disappear' + 'BoundsMode'] && (_0xf119fa['setMin'](_0xc423ca), _0xf119fa['setMax'](_0x4be684), this['_disappear' + 'BoundsMode'] = ![]);
            var _0x50e18d = this['_activeInd' + 'ex'] * _0xc4ba61;
            this['_vertexBuf' + 'fer2']['setData'](this['_vertices2']['buffer'], _0x50e18d * 0x4, _0x50e18d * 0x4, (_0x14158e * _0xc4ba61 - _0x50e18d) * 0x4);
        }
        ['_updateDis' + 'appear']() {
            var _0x4e5a00 = this['_endIndex'];
            for (var _0x4bd5e0 = this['_activeInd' + 'ex']; _0x4bd5e0 < _0x4e5a00; _0x4bd5e0++) {
                if (this['_owner']['_curtime'] - this['_subBirthT' + 'ime'][_0x4bd5e0] >= this['_owner']['time'] + _0xc6f01['zeroTolera' + 'nce']) {
                    var _0x237fe0 = _0x4bd5e0 + 0x1;
                    if (_0x237fe0 !== _0x4e5a00)
                        this['_owner']['_totalLeng' + 'th'] -= this['_subDistan' + 'ce'][_0x237fe0];
                    if (this['_isTempEnd' + 'Vertex'] && _0x237fe0 === _0x4e5a00 - 0x1) {
                        var _0x44ab59 = this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x4bd5e0 * 0x2, _0x3383bd = this['_lastFixed' + 'VertexPosi' + 'tion'];
                        _0x3383bd['x'] = this['_vertices1'][0x0], _0x3383bd['y'] = this['_vertices1'][0x1], _0x3383bd['z'] = this['_vertices1'][0x2], this['_isTempEnd' + 'Vertex'] = ![];
                    }
                    this['_activeInd' + 'ex']++, this['_disappear' + 'BoundsMode'] = !![];
                } else
                    break;
            }
        }
        ['_getType']() {
            return _0x5201a1['_type'];
        }
        ['_prepareRe' + 'nder'](_0x2be163) {
            return this['_endIndex'] - this['_activeInd' + 'ex'] > 0x1;
        }
        ['_render'](_0x224ab7) {
            this['_bufferSta' + 'te']['bind']();
            var _0x1adbb3 = _0x442335['LayaGL']['instance'], _0x35f6ff = this['_activeInd' + 'ex'] * 0x2, _0x2388b2 = this['_endIndex'] * 0x2 - _0x35f6ff;
            _0x1adbb3['drawArrays'](_0x1adbb3['TRIANGLE_S' + 'TRIP'], _0x35f6ff, _0x2388b2), _0x442335['Stat']['renderBatc' + 'hes']++, _0x442335['Stat']['trianglesF' + 'aces'] += _0x2388b2 - 0x2;
        }
        ['destroy']() {
            super['destroy']();
            var _0x399292 = this['_vertexBuf' + 'fer1']['_byteLengt' + 'h'] + this['_vertexBuf' + 'fer2']['_byteLengt' + 'h'];
            _0x442335['Resource']['_addMemory'](-_0x399292, -_0x399292), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer1']['destroy'](), this['_vertexBuf' + 'fer2']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertices1'] = null, this['_vertexBuf' + 'fer1'] = null, this['_vertices2'] = null, this['_vertexBuf' + 'fer2'] = null, this['_subBirthT' + 'ime'] = null, this['_subDistan' + 'ce'] = null, this['_lastFixed' + 'VertexPosi' + 'tion'] = null, this['_disappear' + 'BoundsMode'] = ![];
        }
        ['clear']() {
            this['_activeInd' + 'ex'] = 0x0, this['_endIndex'] = 0x0, this['_disappear' + 'BoundsMode'] = ![], this['_subBirthT' + 'ime']['fill'](0x0), this['_subDistan' + 'ce']['fill'](0x0), this['_segementC' + 'ount'] = 0x0, this['_isTempEnd' + 'Vertex'] = ![], this['_needAddFi' + 'rstVertex'] = ![], this['_lastFixed' + 'VertexPosi' + 'tion']['setValue'](0x0, 0x0, 0x0);
        }
    }
    _0x5201a1['ALIGNMENT_' + 'VIEW'] = 0x0, _0x5201a1['ALIGNMENT_' + 'TRANSFORM_' + 'Z'] = 0x1, _0x5201a1['_tempVecto' + 'r30'] = new _0x352206(), _0x5201a1['_tempVecto' + 'r31'] = new _0x352206(), _0x5201a1['_tempVecto' + 'r32'] = new _0x352206(), _0x5201a1['_tempVecto' + 'r33'] = new _0x352206(), _0x5201a1['_tempVecto' + 'r34'] = new _0x352206(), _0x5201a1['_tempVecto' + 'r35'] = new _0x352206(), _0x5201a1['_tempVecto' + 'r36'] = new _0x352206(), _0x5201a1['_type'] = _0x355f63['_typeCount' + 'er']++;
    class _0x23de25 {
        constructor(_0x32646b) {
            this['_totalLeng' + 'th'] = 0x0, this['_lastPosit' + 'ion'] = new _0x352206(), this['_curtime'] = 0x0, this['alignment'] = _0x23de25['ALIGNMENT_' + 'VIEW'], this['_owner'] = _0x32646b, this['_initDefau' + 'ltData'](), this['addRenderE' + 'lement']();
        }
        get ['time']() {
            return this['_time'];
        }
        set ['time'](_0x5c8e4f) {
            this['_time'] = _0x5c8e4f, this['_owner']['_render']['_shaderVal' + 'ues']['setNumber'](_0x23de25['LIFETIME'], _0x5c8e4f);
        }
        get ['minVertexD' + 'istance']() {
            return this['_minVertex' + 'Distance'];
        }
        set ['minVertexD' + 'istance'](_0x56f9ae) {
            this['_minVertex' + 'Distance'] = _0x56f9ae;
        }
        get ['widthMulti' + 'plier']() {
            return this['_widthMult' + 'iplier'];
        }
        set ['widthMulti' + 'plier'](_0x581a4c) {
            this['_widthMult' + 'iplier'] = _0x581a4c;
        }
        get ['widthCurve']() {
            return this['_widthCurv' + 'e'];
        }
        set ['widthCurve'](_0x48325c) {
            this['_widthCurv' + 'e'] = _0x48325c;
            var _0x1aa739 = new Float32Array(_0x48325c['length'] * 0x4), _0x39026f, _0x19cd6f, _0x20961d = 0x0;
            for (_0x39026f = 0x0, _0x19cd6f = _0x48325c['length']; _0x39026f < _0x19cd6f; _0x39026f++) {
                _0x1aa739[_0x20961d++] = _0x48325c[_0x39026f]['time'], _0x1aa739[_0x20961d++] = _0x48325c[_0x39026f]['inTangent'], _0x1aa739[_0x20961d++] = _0x48325c[_0x39026f]['outTangent'], _0x1aa739[_0x20961d++] = _0x48325c[_0x39026f]['value'];
            }
            this['_owner']['_render']['_shaderVal' + 'ues']['setBuffer'](_0x23de25['WIDTHCURVE'], _0x1aa739), this['_owner']['_render']['_shaderVal' + 'ues']['setInt'](_0x23de25['WIDTHCURVE' + 'KEYLENGTH'], _0x48325c['length']);
        }
        get ['colorGradi' + 'ent']() {
            return this['_colorGrad' + 'ient'];
        }
        set ['colorGradi' + 'ent'](_0x45bb52) {
            this['_colorGrad' + 'ient'] = _0x45bb52;
        }
        get ['textureMod' + 'e']() {
            return this['_textureMo' + 'de'];
        }
        set ['textureMod' + 'e'](_0x3f8844) {
            this['_textureMo' + 'de'] = _0x3f8844;
        }
        ['addRenderE' + 'lement']() {
            var _0x4eaf86 = this['_owner']['_render'], _0x22145c = _0x4eaf86['_renderEle' + 'ments'], _0x32d834 = _0x4eaf86['sharedMate' + 'rials'][0x0];
            _0x32d834 || (_0x32d834 = _0x31d253['defaultMat' + 'erial']);
            var _0x450c18 = new _0x5ca4bd();
            _0x450c18['setTransfo' + 'rm'](this['_owner']['_transform']), _0x450c18['render'] = _0x4eaf86, _0x450c18['material'] = _0x32d834, this['_trialGeom' + 'etry'] = new _0x5201a1(this), _0x450c18['setGeometr' + 'y'](this['_trialGeom' + 'etry']), _0x22145c['push'](_0x450c18);
        }
        ['_update'](_0x5a84f9) {
            var _0x5ae9af = this['_owner']['_render'];
            this['_curtime'] += _0x5a84f9['scene']['timer']['_delta'] / 0x3e8, _0x5ae9af['_shaderVal' + 'ues']['setNumber'](_0x23de25['CURTIME'], this['_curtime']);
            var _0x1c0327 = this['_owner']['transform']['position'], _0x4b5e65 = _0x5ae9af['_renderEle' + 'ments'][0x0]['_geometry'];
            _0x4b5e65['_updateDis' + 'appear'](), _0x4b5e65['_updateTra' + 'il'](_0x5a84f9['camera'], this['_lastPosit' + 'ion'], _0x1c0327), _0x4b5e65['_updateVer' + 'texBufferU' + 'V'](), _0x1c0327['cloneTo'](this['_lastPosit' + 'ion']);
        }
        ['_initDefau' + 'ltData']() {
            this['time'] = 0x5, this['minVertexD' + 'istance'] = 0.1, this['widthMulti' + 'plier'] = 0x1, this['textureMod' + 'e'] = _0x134e0d['Stretch'];
            var _0x244820 = [], _0x22ea0d = new _0x2d9b18();
            _0x22ea0d['time'] = 0x0, _0x22ea0d['inTangent'] = 0x0, _0x22ea0d['outTangent'] = 0x0, _0x22ea0d['value'] = 0x1, _0x244820['push'](_0x22ea0d);
            var _0x439bb0 = new _0x2d9b18();
            _0x439bb0['time'] = 0x1, _0x439bb0['inTangent'] = 0x0, _0x439bb0['outTangent'] = 0x0, _0x439bb0['value'] = 0x1, _0x244820['push'](_0x439bb0), this['widthCurve'] = _0x244820;
            var _0x544e61 = new _0x56b2f2(0x2, 0x2);
            _0x544e61['mode'] = _0x4c04d9['Blend'], _0x544e61['addColorRG' + 'B'](0x0, _0x5525ce['WHITE']), _0x544e61['addColorRG' + 'B'](0x1, _0x5525ce['WHITE']), _0x544e61['addColorAl' + 'pha'](0x0, 0x1), _0x544e61['addColorAl' + 'pha'](0x1, 0x1), this['colorGradi' + 'ent'] = _0x544e61;
        }
        ['destroy']() {
            this['_trialGeom' + 'etry']['destroy'](), this['_trialGeom' + 'etry'] = null, this['_widthCurv' + 'e'] = null, this['_colorGrad' + 'ient'] = null;
        }
        ['clear']() {
            this['_trialGeom' + 'etry']['clear'](), this['_lastPosit' + 'ion']['setValue'](0x0, 0x0, 0x0), this['_curtime'] = 0x0, this['_totalLeng' + 'th'] = 0x0;
        }
    }
    _0x23de25['CURTIME'] = _0x18824e['propertyNa' + 'meToID']('u_CurTime'), _0x23de25['LIFETIME'] = _0x18824e['propertyNa' + 'meToID']('u_LifeTime'), _0x23de25['WIDTHCURVE'] = _0x18824e['propertyNa' + 'meToID']('u_WidthCur' + 've'), _0x23de25['WIDTHCURVE' + 'KEYLENGTH'] = _0x18824e['propertyNa' + 'meToID']('u_WidthCur' + 'veKeyLengt' + 'h'), _0x23de25['ALIGNMENT_' + 'VIEW'] = 0x0, _0x23de25['ALIGNMENT_' + 'TRANSFORM_' + 'Z'] = 0x1;
    class _0x135dd8 extends _0x590787 {
        constructor(_0x1990b8) {
            super(_0x1990b8), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x4c2288();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
        }
        ['_needRende' + 'r'](_0x678ba8, _0x16cfa9) {
            this['_owner']['trailFilte' + 'r']['_update'](_0x16cfa9);
            if (_0x678ba8)
                return _0x678ba8['intersects'](this['bounds']['_getBoundB' + 'ox']());
            else
                return !![];
        }
        ['_updateFor' + 'Native'](_0x40171e) {
            this['_owner']['trailFilte' + 'r']['_update'](_0x40171e);
        }
        ['_renderUpd' + 'ate'](_0x3e2d84, _0x1200a3) {
            super['_renderUpd' + 'ate'](_0x3e2d84, _0x1200a3);
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x544b23, _0x3b5259) {
            var _0x2d24ec = _0x544b23['projection' + 'ViewMatrix'];
            _0x3b5259 ? (_0x4c2288['multiply'](_0x2d24ec, _0x3b5259['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix'])) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], _0x2d24ec);
        }
    }
    class _0x15363b extends _0x22d3a2 {
        constructor(_0x1c81fb = null) {
            super(_0x1c81fb), this['_render'] = new _0x135dd8(this), this['_geometryF' + 'ilter'] = new _0x23de25(this);
        }
        static ['__init__']() {
        }
        get ['trailFilte' + 'r']() {
            return this['_geometryF' + 'ilter'];
        }
        get ['trailRende' + 'rer']() {
            return this['_render'];
        }
        ['_parse'](_0x32c448, _0x350abd) {
            super['_parse'](_0x32c448, _0x350abd);
            var _0x5e41b6 = this['_render'], _0x3bf16f = this['_geometryF' + 'ilter'], _0x1b2e1b, _0x578e8f, _0x3cb7cd = _0x32c448['materials'];
            if (_0x3cb7cd) {
                var _0x14d175 = _0x5e41b6['sharedMate' + 'rials'], _0x1e76c6 = _0x3cb7cd['length'];
                _0x14d175['length'] = _0x1e76c6;
                for (_0x1b2e1b = 0x0; _0x1b2e1b < _0x1e76c6; _0x1b2e1b++)
                    _0x14d175[_0x1b2e1b] = _0x442335['Loader']['getRes'](_0x3cb7cd[_0x1b2e1b]['path']);
                _0x5e41b6['sharedMate' + 'rials'] = _0x14d175;
            }
            _0x3bf16f['time'] = _0x32c448['time'], _0x3bf16f['minVertexD' + 'istance'] = _0x32c448['minVertexD' + 'istance'], _0x3bf16f['widthMulti' + 'plier'] = _0x32c448['widthMulti' + 'plier'], _0x3bf16f['textureMod' + 'e'] = _0x32c448['textureMod' + 'e'], _0x32c448['alignment'] != null && (_0x3bf16f['alignment'] = _0x32c448['alignment']);
            var _0x22d5b9 = [], _0x373e40 = _0x32c448['widthCurve'];
            for (_0x1b2e1b = 0x0, _0x578e8f = _0x373e40['length']; _0x1b2e1b < _0x578e8f; _0x1b2e1b++) {
                var _0x327896 = new _0x2d9b18();
                _0x327896['time'] = _0x373e40[_0x1b2e1b]['time'], _0x327896['inTangent'] = _0x373e40[_0x1b2e1b]['inTangent'], _0x327896['outTangent'] = _0x373e40[_0x1b2e1b]['outTangent'], _0x327896['value'] = _0x373e40[_0x1b2e1b]['value'], _0x22d5b9['push'](_0x327896);
            }
            _0x3bf16f['widthCurve'] = _0x22d5b9;
            var _0x13fab7 = _0x32c448['colorGradi' + 'ent'], _0x4c80a0 = _0x13fab7['colorKeys'], _0x55a40c = _0x13fab7['alphaKeys'], _0x20500e = new _0x56b2f2(_0x4c80a0['length'], _0x55a40c['length']);
            _0x20500e['mode'] = _0x13fab7['mode'];
            for (_0x1b2e1b = 0x0, _0x578e8f = _0x4c80a0['length']; _0x1b2e1b < _0x578e8f; _0x1b2e1b++) {
                var _0x521799 = _0x4c80a0[_0x1b2e1b];
                _0x20500e['addColorRG' + 'B'](_0x521799['time'], new _0x5525ce(_0x521799['value'][0x0], _0x521799['value'][0x1], _0x521799['value'][0x2], 0x1));
            }
            for (_0x1b2e1b = 0x0, _0x578e8f = _0x55a40c['length']; _0x1b2e1b < _0x578e8f; _0x1b2e1b++) {
                var _0x19069f = _0x55a40c[_0x1b2e1b];
                _0x20500e['addColorAl' + 'pha'](_0x19069f['time'], _0x19069f['value']);
            }
            _0x3bf16f['colorGradi' + 'ent'] = _0x20500e;
        }
        ['_onActive']() {
            super['_onActive'](), this['_transform']['position']['cloneTo'](this['_geometryF' + 'ilter']['_lastPosit' + 'ion']);
        }
        ['_cloneTo'](_0x290c4e, _0xa55d09, _0x33b5ce) {
            super['_cloneTo'](_0x290c4e, _0xa55d09, _0x33b5ce);
            var _0x390280, _0x3d5c0e, _0x400eb5 = _0x290c4e, _0x2cdc71 = _0x400eb5['trailFilte' + 'r'];
            _0x2cdc71['time'] = this['trailFilte' + 'r']['time'], _0x2cdc71['minVertexD' + 'istance'] = this['trailFilte' + 'r']['minVertexD' + 'istance'], _0x2cdc71['widthMulti' + 'plier'] = this['trailFilte' + 'r']['widthMulti' + 'plier'], _0x2cdc71['textureMod' + 'e'] = this['trailFilte' + 'r']['textureMod' + 'e'], _0x2cdc71['alignment'] = this['trailFilte' + 'r']['alignment'];
            var _0xbb6f0f = this['trailFilte' + 'r']['widthCurve'], _0x4adfae = [];
            for (_0x390280 = 0x0, _0x3d5c0e = _0xbb6f0f['length']; _0x390280 < _0x3d5c0e; _0x390280++) {
                var _0x18573c = new _0x2d9b18();
                _0xbb6f0f[_0x390280]['cloneTo'](_0x18573c), _0x4adfae['push'](_0x18573c);
            }
            _0x2cdc71['widthCurve'] = _0x4adfae;
            var _0x11fe8e = new _0x56b2f2(this['trailFilte' + 'r']['colorGradi' + 'ent']['maxColorRG' + 'BKeysCount'], this['trailFilte' + 'r']['colorGradi' + 'ent']['maxColorAl' + 'phaKeysCou' + 'nt']);
            this['trailFilte' + 'r']['colorGradi' + 'ent']['cloneTo'](_0x11fe8e), _0x2cdc71['colorGradi' + 'ent'] = _0x11fe8e;
            var _0x1240e3 = _0x400eb5['trailRende' + 'rer'];
            _0x1240e3['sharedMate' + 'rial'] = this['trailRende' + 'rer']['sharedMate' + 'rial'];
        }
        ['destroy'](_0x4cba2a = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x4cba2a), this['_geometryF' + 'ilter']['destroy'](), this['_geometryF' + 'ilter'] = null;
        }
        ['clear']() {
            this['_geometryF' + 'ilter']['clear']();
        }
        ['_create']() {
            return new _0x15363b();
        }
    }
    class _0x1c1a26 {
        constructor(_0xcaca0b, _0x489bbe, _0x51f7ae, _0x50c19e) {
            this['_position'] = _0xcaca0b, this['_normal'] = _0x489bbe, this['_textureCo' + 'ord0'] = _0x51f7ae, this['_textureCo' + 'ord1'] = _0x50c19e;
        }
        static ['__init__']() {
            _0x1c1a26['_vertexDec' + 'laration'] = new _0x19d0a5(0x28, [
                new _0x549a90(0x0, _0x5cc56b['Vector3'], _0x1c1a26['TERRAIN_PO' + 'SITION0']),
                new _0x549a90(0xc, _0x5cc56b['Vector3'], _0x1c1a26['TERRAIN_NO' + 'RMAL0']),
                new _0x549a90(0x18, _0x5cc56b['Vector2'], _0x1c1a26['TERRAIN_TE' + 'XTURECOORD' + 'INATE0']),
                new _0x549a90(0x20, _0x5cc56b['Vector2'], _0x1c1a26['TERRAIN_TE' + 'XTURECOORD' + 'INATE1'])
            ]);
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x1c1a26['_vertexDec' + 'laration'];
        }
        get ['position']() {
            return this['_position'];
        }
        get ['normal']() {
            return this['_normal'];
        }
        get ['textureCoo' + 'rd0']() {
            return this['_textureCo' + 'ord0'];
        }
        get ['textureCoo' + 'rd1']() {
            return this['_textureCo' + 'ord1'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x1c1a26['_vertexDec' + 'laration'];
        }
    }
    _0x1c1a26['TERRAIN_PO' + 'SITION0'] = 0x0, _0x1c1a26['TERRAIN_NO' + 'RMAL0'] = 0x1, _0x1c1a26['TERRAIN_TE' + 'XTURECOORD' + 'INATE0'] = 0x2, _0x1c1a26['TERRAIN_TE' + 'XTURECOORD' + 'INATE1'] = 0x3;
    class _0x254185 {
    }
    _0x254185['_interacti' + 've'] = {
        'getWorldTransform': (_0x226c34, _0x2a297f) => {
        },
        'setWorldTransform': (_0x4d9f25, _0x183e82) => {
            var _0x36c557 = _0x3e3f17['_physicObj' + 'ectsMap'][_0x4d9f25];
            _0x36c557['_simulatio' + 'n']['_updatedRi' + 'gidbodies']++, _0x36c557['_updateTra' + 'nsformComp' + 'onent'](_0x183e82);
        }
    };
    class _0x4f927a extends _0x3c647b {
        constructor(_0xdccecc = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x2b7597 = _0x3b8f98['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0xdccecc, _0x2b7597), this['_enablePro' + 'cessCollis' + 'ions'] = ![];
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_addPhysic' + 'sCollider'](this, this['_collision' + 'Group'], this['_canCollid' + 'eWith']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removePhy' + 'sicsCollid' + 'er'](this);
        }
        ['_parse'](_0x218fc9) {
            _0x218fc9['friction'] != null && (this['friction'] = _0x218fc9['friction']), _0x218fc9['rollingFri' + 'ction'] != null && (this['rollingFri' + 'ction'] = _0x218fc9['rollingFri' + 'ction']), _0x218fc9['restitutio' + 'n'] != null && (this['restitutio' + 'n'] = _0x218fc9['restitutio' + 'n']), _0x218fc9['isTrigger'] != null && (this['isTrigger'] = _0x218fc9['isTrigger']), super['_parse'](_0x218fc9), this['_parseShap' + 'e'](_0x218fc9['shapes']);
        }
        ['_onAdded']() {
            var _0x382ca7 = _0x3c230b['_bullet'], _0x41d643 = _0x382ca7['btCollisio' + 'nObject_cr' + 'eate']();
            _0x382ca7['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x41d643, this['id']), _0x382ca7['btCollisio' + 'nObject_fo' + 'rceActivat' + 'ionState'](_0x41d643, _0x3e3f17['ACTIVATION' + 'STATE_DISA' + 'BLE_SIMULA' + 'TION']);
            var _0x29311b = _0x382ca7['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x41d643);
            if (this['owner']['isStatic']) {
                if ((_0x29311b & _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']) > 0x0)
                    _0x29311b = _0x29311b ^ _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'];
                _0x29311b = _0x29311b | _0x3e3f17['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT'];
            } else {
                if ((_0x29311b & _0x3e3f17['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']) > 0x0)
                    _0x29311b = _0x29311b ^ _0x3e3f17['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT'];
                _0x29311b = _0x29311b | _0x3e3f17['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'];
            }
            _0x382ca7['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x41d643, _0x29311b), this['_btCollide' + 'rObject'] = _0x41d643, super['_onAdded']();
        }
    }
    class _0x327c94 extends _0x355f63 {
        constructor(_0x472159) {
            super(), this['_id'] = ++_0x327c94['_uniqueIDC' + 'ounter'], this['_mesh'] = _0x472159, this['_boneIndic' + 'esList'] = [], this['_subIndexB' + 'ufferStart'] = [], this['_subIndexB' + 'ufferCount'] = [];
        }
        get ['indexCount']() {
            return this['_indexCoun' + 't'];
        }
        ['_setIndexR' + 'ange'](_0x4aef5a, _0x4bcf2e) {
            this['_indexStar' + 't'] = _0x4aef5a, this['_indexCoun' + 't'] = _0x4bcf2e, this['_indices'] = new Uint16Array(this['_indexBuff' + 'er']['getData']()['buffer'], _0x4aef5a * 0x2, _0x4bcf2e);
        }
        ['_getType']() {
            return _0x327c94['_type'];
        }
        ['_prepareRe' + 'nder'](_0x29f145) {
            return this['_mesh']['_uploadVer' + 'ticesData'](), !![];
        }
        ['_render'](_0x2545db) {
            var _0x78de44 = this['_mesh'];
            if (_0x78de44['indexForma' + 't'] === _0x1f405c['IndexForma' + 't']['UInt32'] && !_0x442335['LayaGL']['layaGPUIns' + 'tance']['supportEle' + 'mentIndexU' + 'int32']()) {
                console['warn']('SubMesh:th' + 'is\x20device\x20' + 'do\x20not\x20sup' + 'port\x20Index' + 'Format.UIn' + 't32.');
                return;
            }
            var _0x349b87 = _0x442335['LayaGL']['instance'], _0x2a207d = _0x2545db['renderElem' + 'ent']['render']['_skinnedDa' + 'ta'], _0x196a87, _0x5b7906;
            switch (_0x78de44['indexForma' + 't']) {
            case _0x1f405c['IndexForma' + 't']['UInt32']:
                _0x196a87 = _0x349b87['UNSIGNED_I' + 'NT'], _0x5b7906 = 0x4;
                break;
            case _0x1f405c['IndexForma' + 't']['UInt16']:
                _0x196a87 = _0x349b87['UNSIGNED_S' + 'HORT'], _0x5b7906 = 0x2;
                break;
            case _0x1f405c['IndexForma' + 't']['UInt8']:
                _0x196a87 = _0x349b87['UNSIGNED_B' + 'YTE'], _0x5b7906 = 0x1;
                break;
            }
            _0x78de44['_bufferSta' + 'te']['bind']();
            if (_0x2a207d) {
                var _0x317556 = _0x2a207d[this['_indexInMe' + 'sh']];
                for (var _0x38d149 = 0x0, _0x2f2f09 = this['_boneIndic' + 'esList']['length']; _0x38d149 < _0x2f2f09; _0x38d149++) {
                    _0x2545db['shader']['uploadCust' + 'omUniform'](_0xa58a85['BONES'], _0x317556[_0x38d149]), _0x349b87['drawElemen' + 'ts'](_0x349b87['TRIANGLES'], this['_subIndexB' + 'ufferCount'][_0x38d149], _0x196a87, this['_subIndexB' + 'ufferStart'][_0x38d149] * _0x5b7906);
                }
            } else
                _0x349b87['drawElemen' + 'ts'](_0x349b87['TRIANGLES'], this['_indexCoun' + 't'], _0x196a87, this['_indexStar' + 't'] * _0x5b7906);
            _0x442335['Stat']['trianglesF' + 'aces'] += this['_indexCoun' + 't'] / 0x3, _0x442335['Stat']['renderBatc' + 'hes']++;
        }
        ['getIndices']() {
            if (this['_mesh']['_isReadabl' + 'e'])
                return this['_indices']['slice']();
            else
                throw 'SubMesh:ca' + 'n\x27t\x20get\x20in' + 'dices\x20on\x20s' + 'ubMesh,mes' + 'h\x27s\x20isRead' + 'able\x20must\x20' + 'be\x20true.';
        }
        ['setIndices'](_0x4f57a4) {
            this['_indexBuff' + 'er']['setData'](_0x4f57a4, this['_indexStar' + 't'], 0x0, this['_indexCoun' + 't']);
        }
        ['destroy']() {
            if (this['_destroyed'])
                return;
            super['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_indexBuff' + 'er'] = null, this['_mesh'] = null, this['_boneIndic' + 'esList'] = null, this['_subIndexB' + 'ufferStart'] = null, this['_subIndexB' + 'ufferCount'] = null, this['_skinAnima' + 'tionDatas'] = null;
        }
    }
    _0x327c94['_uniqueIDC' + 'ounter'] = 0x0, _0x327c94['_type'] = _0x355f63['_typeCount' + 'er']++;
    class _0x55114a {
        constructor(_0x55095a, _0x2e87ff, _0x45945a) {
            this['subMeshInd' + 'ex'] = _0x55095a, this['batchIndex'] = _0x2e87ff, this['batchBoneI' + 'ndex'] = _0x45945a;
        }
    }
    class _0x3b00dd extends _0x442335['Resource'] {
        constructor(_0x5346b5 = !![]) {
            super(), this['_tempVecto' + 'r30'] = new _0x352206(), this['_tempVecto' + 'r31'] = new _0x352206(), this['_tempVecto' + 'r32'] = new _0x352206(), this['_minVertic' + 'esUpdate'] = -0x1, this['_maxVertic' + 'esUpdate'] = -0x1, this['_needUpdat' + 'eBounds'] = !![], this['_bounds'] = new _0x1f1598(new _0x352206(), new _0x352206()), this['_bufferSta' + 'te'] = new _0x2f0542(), this['_instanceB' + 'ufferState'] = new _0x2f0542(), this['_instanceB' + 'ufferState' + 'Type'] = 0x0, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_skinnedMa' + 'trixCaches'] = [], this['_vertexCou' + 'nt'] = 0x0, this['_indexForm' + 'at'] = _0x1f405c['IndexForma' + 't']['UInt16'], this['_isReadabl' + 'e'] = _0x5346b5, this['_subMeshes'] = [];
        }
        static ['__init__']() {
            var _0x1cffb9 = _0x3c230b['_bullet'];
            _0x1cffb9 && (_0x3b00dd['_nativeTem' + 'pVector30'] = _0x1cffb9['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x3b00dd['_nativeTem' + 'pVector31'] = _0x1cffb9['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x3b00dd['_nativeTem' + 'pVector32'] = _0x1cffb9['btVector3_' + 'create'](0x0, 0x0, 0x0));
        }
        static ['load'](_0x38155a, _0x441367) {
            _0x442335['ILaya']['loader']['create'](_0x38155a, _0x441367, null, _0x3b00dd['MESH']);
        }
        get ['inverseAbs' + 'oluteBindP' + 'oses']() {
            return this['_inverseBi' + 'ndPoses'];
        }
        get ['vertexCoun' + 't']() {
            return this['_vertexCou' + 'nt'];
        }
        get ['indexCount']() {
            return this['_indexBuff' + 'er']['indexCount'];
        }
        get ['subMeshCou' + 'nt']() {
            return this['_subMeshes']['length'];
        }
        get ['bounds']() {
            return this['_bounds'];
        }
        set ['bounds'](_0x5309e1) {
            if (this['_bounds'] !== _0x5309e1)
                _0x5309e1['cloneTo'](this['_bounds']);
        }
        get ['indexForma' + 't']() {
            return this['_indexForm' + 'at'];
        }
        ['_getPositi' + 'onElement'](_0x454757) {
            var _0x45130b = _0x454757['vertexDecl' + 'aration']['_vertexEle' + 'ments'];
            for (var _0x11236a = 0x0, _0xf53041 = _0x45130b['length']; _0x11236a < _0xf53041; _0x11236a++) {
                var _0x37f375 = _0x45130b[_0x11236a];
                if (_0x37f375['_elementFo' + 'rmat'] === _0x5cc56b['Vector3'] && _0x37f375['_elementUs' + 'age'] === _0x2a7b2f['MESH_POSIT' + 'ION0'])
                    return _0x37f375;
            }
            return null;
        }
        ['_getVertic' + 'eElementDa' + 'ta'](_0x14dae7, _0x40dd77) {
            _0x14dae7['length'] = this['_vertexCou' + 'nt'];
            var _0x3a401e = this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x28da7e = _0x3a401e['getVertexE' + 'lementByUs' + 'age'](_0x40dd77);
            if (_0x28da7e) {
                var _0x41fc23 = this['_vertexBuf' + 'fer']['getUint8Da' + 'ta'](), _0x286a61 = this['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x243d40 = _0x3a401e['vertexStri' + 'de'], _0x4ac3bd = _0x243d40 / 0x4, _0x5efc70 = _0x28da7e['_offset'], _0x3e62b3 = _0x5efc70 / 0x4;
                switch (_0x40dd77) {
                case _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                case _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                    for (var _0x1f92a8 = 0x0; _0x1f92a8 < this['_vertexCou' + 'nt']; _0x1f92a8++) {
                        var _0x4b38ea = _0x4ac3bd * _0x1f92a8 + _0x3e62b3;
                        _0x14dae7[_0x1f92a8] = new _0x378045(_0x286a61[_0x4b38ea], _0x286a61[_0x4b38ea + 0x1]);
                    }
                    break;
                case _0x2a7b2f['MESH_POSIT' + 'ION0']:
                case _0x2a7b2f['MESH_NORMA' + 'L0']:
                    for (var _0x1f92a8 = 0x0; _0x1f92a8 < this['_vertexCou' + 'nt']; _0x1f92a8++) {
                        var _0x4b38ea = _0x4ac3bd * _0x1f92a8 + _0x3e62b3;
                        _0x14dae7[_0x1f92a8] = new _0x352206(_0x286a61[_0x4b38ea], _0x286a61[_0x4b38ea + 0x1], _0x286a61[_0x4b38ea + 0x2]);
                    }
                    break;
                case _0x2a7b2f['MESH_TANGE' + 'NT0']:
                case _0x2a7b2f['MESH_BLEND' + 'WEIGHT0']:
                    for (var _0x1f92a8 = 0x0; _0x1f92a8 < this['_vertexCou' + 'nt']; _0x1f92a8++) {
                        var _0x4b38ea = _0x4ac3bd * _0x1f92a8 + _0x3e62b3;
                        _0x14dae7[_0x1f92a8] = new _0x18425e(_0x286a61[_0x4b38ea], _0x286a61[_0x4b38ea + 0x1], _0x286a61[_0x4b38ea + 0x2], _0x286a61[_0x4b38ea + 0x3]);
                    }
                    break;
                case _0x2a7b2f['MESH_COLOR' + '0']:
                    for (var _0x1f92a8 = 0x0; _0x1f92a8 < this['_vertexCou' + 'nt']; _0x1f92a8++) {
                        var _0x4b38ea = _0x4ac3bd * _0x1f92a8 + _0x3e62b3;
                        _0x14dae7[_0x1f92a8] = new _0x5525ce(_0x286a61[_0x4b38ea], _0x286a61[_0x4b38ea + 0x1], _0x286a61[_0x4b38ea + 0x2], _0x286a61[_0x4b38ea + 0x3]);
                    }
                    break;
                case _0x2a7b2f['MESH_BLEND' + 'INDICES0']:
                    for (var _0x1f92a8 = 0x0; _0x1f92a8 < this['_vertexCou' + 'nt']; _0x1f92a8++) {
                        var _0x4b38ea = _0x243d40 * _0x1f92a8 + _0x5efc70;
                        _0x14dae7[_0x1f92a8] = new _0x18425e(_0x41fc23[_0x4b38ea], _0x41fc23[_0x4b38ea + 0x1], _0x41fc23[_0x4b38ea + 0x2], _0x41fc23[_0x4b38ea + 0x3]);
                    }
                    break;
                default:
                    throw 'Mesh:Unkno' + 'wn\x20element' + 'Usage.';
                }
            }
        }
        ['_setVertic' + 'eElementDa' + 'ta'](_0x4e5e73, _0x449cbc) {
            var _0x16ddd1 = this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x2a4b19 = _0x16ddd1['getVertexE' + 'lementByUs' + 'age'](_0x449cbc);
            if (_0x2a4b19) {
                var _0x536046 = this['_vertexBuf' + 'fer']['getUint8Da' + 'ta'](), _0x39cfe3 = this['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0xaf1a6c = _0x16ddd1['vertexStri' + 'de'], _0xd8e441 = _0xaf1a6c / 0x4, _0x1e95dc = _0x2a4b19['_offset'], _0x16a71c = _0x1e95dc / 0x4;
                switch (_0x449cbc) {
                case _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                case _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                    for (var _0x2e938c = 0x0, _0x2137f3 = _0x4e5e73['length']; _0x2e938c < _0x2137f3; _0x2e938c++) {
                        var _0x4103a3 = _0xd8e441 * _0x2e938c + _0x16a71c, _0xf79add = _0x4e5e73[_0x2e938c];
                        _0x39cfe3[_0x4103a3] = _0xf79add['x'], _0x39cfe3[_0x4103a3 + 0x1] = _0xf79add['y'];
                    }
                    break;
                case _0x2a7b2f['MESH_POSIT' + 'ION0']:
                case _0x2a7b2f['MESH_NORMA' + 'L0']:
                    for (var _0x2e938c = 0x0, _0x2137f3 = _0x4e5e73['length']; _0x2e938c < _0x2137f3; _0x2e938c++) {
                        var _0x4103a3 = _0xd8e441 * _0x2e938c + _0x16a71c, _0x48c0d9 = _0x4e5e73[_0x2e938c];
                        _0x39cfe3[_0x4103a3] = _0x48c0d9['x'], _0x39cfe3[_0x4103a3 + 0x1] = _0x48c0d9['y'], _0x39cfe3[_0x4103a3 + 0x2] = _0x48c0d9['z'];
                    }
                    break;
                case _0x2a7b2f['MESH_TANGE' + 'NT0']:
                case _0x2a7b2f['MESH_BLEND' + 'WEIGHT0']:
                    for (var _0x2e938c = 0x0, _0x2137f3 = _0x4e5e73['length']; _0x2e938c < _0x2137f3; _0x2e938c++) {
                        var _0x4103a3 = _0xd8e441 * _0x2e938c + _0x16a71c, _0x5a0948 = _0x4e5e73[_0x2e938c];
                        _0x39cfe3[_0x4103a3] = _0x5a0948['x'], _0x39cfe3[_0x4103a3 + 0x1] = _0x5a0948['y'], _0x39cfe3[_0x4103a3 + 0x2] = _0x5a0948['z'], _0x39cfe3[_0x4103a3 + 0x3] = _0x5a0948['w'];
                    }
                    break;
                case _0x2a7b2f['MESH_COLOR' + '0']:
                    for (var _0x2e938c = 0x0, _0x2137f3 = _0x4e5e73['length']; _0x2e938c < _0x2137f3; _0x2e938c++) {
                        var _0x4103a3 = _0xd8e441 * _0x2e938c + _0x16a71c, _0x2990a4 = _0x4e5e73[_0x2e938c];
                        _0x39cfe3[_0x4103a3] = _0x2990a4['r'], _0x39cfe3[_0x4103a3 + 0x1] = _0x2990a4['g'], _0x39cfe3[_0x4103a3 + 0x2] = _0x2990a4['b'], _0x39cfe3[_0x4103a3 + 0x3] = _0x2990a4['a'];
                    }
                    break;
                case _0x2a7b2f['MESH_BLEND' + 'INDICES0']:
                    for (var _0x2e938c = 0x0, _0x2137f3 = _0x4e5e73['length']; _0x2e938c < _0x2137f3; _0x2e938c++) {
                        var _0x4103a3 = _0xaf1a6c * _0x2e938c + _0x1e95dc, _0x5a0948 = _0x4e5e73[_0x2e938c];
                        _0x536046[_0x4103a3] = _0x5a0948['x'], _0x536046[_0x4103a3 + 0x1] = _0x5a0948['y'], _0x536046[_0x4103a3 + 0x2] = _0x5a0948['z'], _0x536046[_0x4103a3 + 0x3] = _0x5a0948['w'];
                    }
                    break;
                default:
                    throw 'Mesh:Unkno' + 'wn\x20element' + 'Usage.';
                }
                this['_minVertic' + 'esUpdate'] = 0x0, this['_maxVertic' + 'esUpdate'] = Number['MAX_SAFE_I' + 'NTEGER'];
            } else
                console['warn']('Mesh:\x20the\x20' + 'mesh\x20don\x27t' + '\x20have\x20\x20thi' + 's\x20VertexEl' + 'ement.');
        }
        ['_disposeRe' + 'source']() {
            for (var _0x124dc9 = 0x0, _0x97e3ac = this['_subMeshes']['length']; _0x124dc9 < _0x97e3ac; _0x124dc9++)
                this['_subMeshes'][_0x124dc9]['destroy']();
            this['_btTriangl' + 'eMesh'] && _0x3c230b['_bullet']['btStriding' + 'MeshInterf' + 'ace_destro' + 'y'](this['_btTriangl' + 'eMesh']), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_instanceB' + 'ufferState']['destroy'](), this['_setCPUMem' + 'ory'](0x0), this['_setGPUMem' + 'ory'](0x0), this['_bufferSta' + 'te'] = null, this['_instanceB' + 'ufferState'] = null, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_subMeshes'] = null, this['_btTriangl' + 'eMesh'] = null, this['_indexBuff' + 'er'] = null, this['_boneNames'] = null, this['_inverseBi' + 'ndPoses'] = null;
        }
        ['_setSubMes' + 'hes'](_0x4fe54e) {
            this['_subMeshes'] = _0x4fe54e;
            for (var _0x1a8584 = 0x0, _0x36431f = _0x4fe54e['length']; _0x1a8584 < _0x36431f; _0x1a8584++)
                _0x4fe54e[_0x1a8584]['_indexInMe' + 'sh'] = _0x1a8584;
        }
        ['_setBuffer'](_0x5add43, _0xe5c578) {
            var _0x3ef613 = this['_bufferSta' + 'te'];
            _0x3ef613['bind'](), _0x3ef613['applyVerte' + 'xBuffer'](_0x5add43), _0x3ef613['applyIndex' + 'Buffer'](_0xe5c578), _0x3ef613['unBind']();
        }
        ['_setInstan' + 'ceBuffer'](_0x45cb80) {
            var _0x4985bd = this['_instanceB' + 'ufferState'];
            _0x4985bd['bind'](), _0x4985bd['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0x4985bd['applyInsta' + 'nceVertexB' + 'uffer'](_0x2247dd['instance']['instanceWo' + 'rldMatrixB' + 'uffer']), _0x4985bd['applyInsta' + 'nceVertexB' + 'uffer'](_0x2247dd['instance']['instanceMV' + 'PMatrixBuf' + 'fer']);
            switch (_0x45cb80) {
            case _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_SIMPL' + 'EANIMATOR']:
                _0x4985bd['applyInsta' + 'nceVertexB' + 'uffer'](_0x2247dd['instance']['instanceSi' + 'mpleAnimat' + 'orBuffer']);
                break;
            }
            _0x4985bd['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0x4985bd['unBind']();
        }
        ['_getPhysic' + 'Mesh']() {
            if (!this['_btTriangl' + 'eMesh']) {
                var _0x1e34aa = _0x3c230b['_bullet'], _0x4bb156 = _0x1e34aa['btTriangle' + 'Mesh_creat' + 'e'](), _0x373ee4 = _0x3b00dd['_nativeTem' + 'pVector30'], _0xdd624f = _0x3b00dd['_nativeTem' + 'pVector31'], _0x1f77e3 = _0x3b00dd['_nativeTem' + 'pVector32'], _0x401880 = this['_tempVecto' + 'r30'], _0x317bf5 = this['_tempVecto' + 'r31'], _0x30addb = this['_tempVecto' + 'r32'], _0x5709eb = this['_vertexBuf' + 'fer'], _0x3bb244 = this['_getPositi' + 'onElement'](_0x5709eb), _0x4f9b85 = _0x5709eb['getFloat32' + 'Data'](), _0x1bb292 = _0x5709eb['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x22f461 = _0x3bb244['_offset'] / 0x4, _0x2f66e9 = this['_indexBuff' + 'er']['getData']();
                for (var _0x3f0593 = 0x0, _0xa58f7f = _0x2f66e9['length']; _0x3f0593 < _0xa58f7f; _0x3f0593 += 0x3) {
                    var _0x464d7e = _0x2f66e9[_0x3f0593] * _0x1bb292 + _0x22f461, _0x342a3f = _0x2f66e9[_0x3f0593 + 0x1] * _0x1bb292 + _0x22f461, _0x59c555 = _0x2f66e9[_0x3f0593 + 0x2] * _0x1bb292 + _0x22f461;
                    _0x401880['setValue'](_0x4f9b85[_0x464d7e], _0x4f9b85[_0x464d7e + 0x1], _0x4f9b85[_0x464d7e + 0x2]), _0x317bf5['setValue'](_0x4f9b85[_0x342a3f], _0x4f9b85[_0x342a3f + 0x1], _0x4f9b85[_0x342a3f + 0x2]), _0x30addb['setValue'](_0x4f9b85[_0x59c555], _0x4f9b85[_0x59c555 + 0x1], _0x4f9b85[_0x59c555 + 0x2]), _0x47bed9['_convertTo' + 'BulletVec3'](_0x401880, _0x373ee4, !![]), _0x47bed9['_convertTo' + 'BulletVec3'](_0x317bf5, _0xdd624f, !![]), _0x47bed9['_convertTo' + 'BulletVec3'](_0x30addb, _0x1f77e3, !![]), _0x1e34aa['btTriangle' + 'Mesh_addTr' + 'iangle'](_0x4bb156, _0x373ee4, _0xdd624f, _0x1f77e3, !![]);
                }
                this['_btTriangl' + 'eMesh'] = _0x4bb156;
            }
            return this['_btTriangl' + 'eMesh'];
        }
        ['_uploadVer' + 'ticesData']() {
            var _0x5db1db = this['_minVertic' + 'esUpdate'], _0x10f0b3 = this['_maxVertic' + 'esUpdate'];
            if (_0x5db1db !== -0x1 && _0x10f0b3 !== -0x1) {
                var _0x127430 = _0x5db1db;
                this['_vertexBuf' + 'fer']['setData'](this['_vertexBuf' + 'fer']['getUint8Da' + 'ta']()['buffer'], _0x127430, _0x127430, _0x10f0b3 - _0x5db1db), this['_minVertic' + 'esUpdate'] = -0x1, this['_maxVertic' + 'esUpdate'] = -0x1;
            }
        }
        ['getSubMesh'](_0x23a453) {
            return this['_subMeshes'][_0x23a453];
        }
        ['getPositio' + 'ns'](_0x36faf4) {
            if (this['_isReadabl' + 'e'])
                this['_getVertic' + 'eElementDa' + 'ta'](_0x36faf4, _0x2a7b2f['MESH_POSIT' + 'ION0']);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20posit' + 'ions\x20on\x20me' + 'sh,isReada' + 'ble\x20must\x20b' + 'e\x20true.';
        }
        ['setPositio' + 'ns'](_0x4c6bbf) {
            if (this['_isReadabl' + 'e'])
                this['_setVertic' + 'eElementDa' + 'ta'](_0x4c6bbf, _0x2a7b2f['MESH_POSIT' + 'ION0']), this['_needUpdat' + 'eBounds'] = !![];
            else
                throw 'Mesh:setPo' + 'sition()\x20n' + 'eed\x20isRead' + 'able\x20must\x20' + 'be\x20true\x20or' + '\x20use\x20setVe' + 'rtices().';
        }
        ['getColors'](_0x724f2c) {
            if (this['_isReadabl' + 'e'])
                this['_getVertic' + 'eElementDa' + 'ta'](_0x724f2c, _0x2a7b2f['MESH_COLOR' + '0']);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
        }
        ['setColors'](_0x17f523) {
            if (this['_isReadabl' + 'e'])
                this['_setVertic' + 'eElementDa' + 'ta'](_0x17f523, _0x2a7b2f['MESH_COLOR' + '0']);
            else
                throw 'Mesh:setCo' + 'lors()\x20nee' + 'd\x20isReadab' + 'le\x20must\x20be' + '\x20true\x20or\x20u' + 'se\x20setVert' + 'ices().';
        }
        ['getUVs'](_0x4a9211, _0x21cfd4 = 0x0) {
            if (this['_isReadabl' + 'e'])
                switch (_0x21cfd4) {
                case 0x0:
                    this['_getVertic' + 'eElementDa' + 'ta'](_0x4a9211, _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                    break;
                case 0x1:
                    this['_getVertic' + 'eElementDa' + 'ta'](_0x4a9211, _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
                    break;
                default:
                    throw 'Mesh:Inval' + 'id\x20channel' + '.';
                }
            else
                throw 'Mesh:can\x27t' + '\x20get\x20uvs\x20o' + 'n\x20mesh,isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '.';
        }
        ['setUVs'](_0x478c97, _0x4c2ac4 = 0x0) {
            if (this['_isReadabl' + 'e'])
                switch (_0x4c2ac4) {
                case 0x0:
                    this['_setVertic' + 'eElementDa' + 'ta'](_0x478c97, _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                    break;
                case 0x1:
                    this['_setVertic' + 'eElementDa' + 'ta'](_0x478c97, _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
                    break;
                default:
                    throw 'Mesh:Inval' + 'id\x20channel' + '.';
                }
            else
                throw 'Mesh:setUV' + 's()\x20need\x20i' + 'sReadable\x20' + 'must\x20be\x20tr' + 'ue\x20or\x20use\x20' + 'setVertice' + 's().';
        }
        ['getNormals'](_0x43468b) {
            if (this['_isReadabl' + 'e'])
                this['_getVertic' + 'eElementDa' + 'ta'](_0x43468b, _0x2a7b2f['MESH_NORMA' + 'L0']);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
        }
        ['setNormals'](_0x2d636d) {
            if (this['_isReadabl' + 'e'])
                this['_setVertic' + 'eElementDa' + 'ta'](_0x2d636d, _0x2a7b2f['MESH_NORMA' + 'L0']);
            else
                throw 'Mesh:setNo' + 'rmals()\x20ne' + 'ed\x20must\x20be' + '\x20true\x20or\x20u' + 'se\x20setVert' + 'ices().';
        }
        ['getTangent' + 's'](_0x2ae127) {
            if (this['_isReadabl' + 'e'])
                this['_getVertic' + 'eElementDa' + 'ta'](_0x2ae127, _0x2a7b2f['MESH_TANGE' + 'NT0']);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
        }
        ['setTangent' + 's'](_0x45a8b2) {
            if (this['_isReadabl' + 'e'])
                this['_setVertic' + 'eElementDa' + 'ta'](_0x45a8b2, _0x2a7b2f['MESH_TANGE' + 'NT0']);
            else
                throw 'Mesh:setTa' + 'ngents()\x20n' + 'eed\x20isRead' + 'able\x20must\x20' + 'be\x20true\x20or' + '\x20use\x20setVe' + 'rtices().';
        }
        ['getBoneWei' + 'ghts'](_0x4b4aae) {
            if (this['_isReadabl' + 'e'])
                this['_getVertic' + 'eElementDa' + 'ta'](_0x4b4aae, _0x2a7b2f['MESH_BLEND' + 'WEIGHT0']);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20boneW' + 'eights\x20on\x20' + 'mesh,isRea' + 'dable\x20must' + '\x20be\x20true.';
        }
        ['setBoneWei' + 'ghts'](_0x29a0eb) {
            if (this['_isReadabl' + 'e'])
                this['_setVertic' + 'eElementDa' + 'ta'](_0x29a0eb, _0x2a7b2f['MESH_BLEND' + 'WEIGHT0']);
            else
                throw 'Mesh:setBo' + 'neWeights(' + ')\x20need\x20isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '\x20or\x20use\x20se' + 'tVertices(' + ').';
        }
        ['getBoneInd' + 'ices'](_0x5009a7) {
            if (this['_isReadabl' + 'e'])
                this['_getVertic' + 'eElementDa' + 'ta'](_0x5009a7, _0x2a7b2f['MESH_BLEND' + 'INDICES0']);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20boneI' + 'ndices\x20on\x20' + 'mesh,isRea' + 'dable\x20must' + '\x20be\x20true.';
        }
        ['setBoneInd' + 'ices'](_0x7798a1) {
            if (this['_isReadabl' + 'e'])
                this['_setVertic' + 'eElementDa' + 'ta'](_0x7798a1, _0x2a7b2f['MESH_BLEND' + 'INDICES0']);
            else
                throw 'Mesh:setBo' + 'neIndices(' + ')\x20need\x20isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '\x20or\x20use\x20se' + 'tVertices(' + ').';
        }
        ['markAsUnre' + 'adbale']() {
            this['_uploadVer' + 'ticesData'](), this['_vertexBuf' + 'fer']['markAsUnre' + 'adbale'](), this['_isReadabl' + 'e'] = ![];
        }
        ['getVertexD' + 'eclaration']() {
            return this['_vertexBuf' + 'fer']['_vertexDec' + 'laration'];
        }
        ['getVertice' + 's']() {
            if (this['_isReadabl' + 'e'])
                return this['_vertexBuf' + 'fer']['getUint8Da' + 'ta']()['buffer']['slice'](0x0);
            else
                throw 'Mesh:can\x27t' + '\x20get\x20verti' + 'ces\x20on\x20mes' + 'h,isReadab' + 'le\x20must\x20be' + '\x20true.';
        }
        ['setVertice' + 's'](_0x4f1ec0) {
            this['_vertexBuf' + 'fer']['setData'](_0x4f1ec0), this['_needUpdat' + 'eBounds'] = !![];
        }
        ['getIndices']() {
            if (this['_isReadabl' + 'e'])
                return this['_indexBuff' + 'er']['getData']()['slice']();
            else
                throw 'Mesh:can\x27t' + '\x20get\x20indic' + 'es\x20on\x20subM' + 'esh,mesh\x27s' + '\x20isReadabl' + 'e\x20must\x20be\x20' + 'true.';
        }
        ['setIndices'](_0x25b0ec) {
            var _0x40a12e;
            if (_0x25b0ec instanceof Uint32Array)
                _0x40a12e = _0x1f405c['IndexForma' + 't']['UInt32'];
            else {
                if (_0x25b0ec instanceof Uint16Array)
                    _0x40a12e = _0x1f405c['IndexForma' + 't']['UInt16'];
                else {
                    if (_0x25b0ec instanceof Uint8Array)
                        _0x40a12e = _0x1f405c['IndexForma' + 't']['UInt8'];
                }
            }
            var _0x21f866 = this['_indexBuff' + 'er'];
            (this['_indexForm' + 'at'] !== _0x40a12e || _0x21f866['indexCount'] !== _0x25b0ec['length']) && (_0x21f866['destroy'](), this['_indexBuff' + 'er'] = _0x21f866 = new _0x197184(_0x40a12e, _0x25b0ec['length'], _0x442335['LayaGL']['instance']['STATIC_DRA' + 'W'], this['_isReadabl' + 'e'])), _0x21f866['setData'](_0x25b0ec), this['_indexForm' + 'at'] = _0x40a12e;
        }
        ['calculateB' + 'ounds']() {
            if (this['_isReadabl' + 'e']) {
                if (this['_needUpdat' + 'eBounds']) {
                    var _0x539edd = this['_tempVecto' + 'r30'], _0xb12a12 = this['_tempVecto' + 'r31'];
                    _0x539edd['x'] = _0x539edd['y'] = _0x539edd['z'] = Number['MAX_VALUE'], _0xb12a12['x'] = _0xb12a12['y'] = _0xb12a12['z'] = -Number['MAX_VALUE'];
                    var _0x896694 = this['_vertexBuf' + 'fer'], _0x519dd9 = this['_getPositi' + 'onElement'](_0x896694), _0xb11025 = _0x896694['getFloat32' + 'Data'](), _0x5d5e1c = _0x896694['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0xd2eae4 = _0x519dd9['_offset'] / 0x4;
                    for (var _0x416884 = 0x0, _0x1974bd = _0xb11025['length']; _0x416884 < _0x1974bd; _0x416884 += _0x5d5e1c) {
                        var _0x5dcfcb = _0x416884 + _0xd2eae4, _0x1786ff = _0xb11025[_0x5dcfcb], _0x52b27f = _0xb11025[_0x5dcfcb + 0x1], _0xd90d37 = _0xb11025[_0x5dcfcb + 0x2];
                        _0x539edd['x'] = Math['min'](_0x539edd['x'], _0x1786ff), _0x539edd['y'] = Math['min'](_0x539edd['y'], _0x52b27f), _0x539edd['z'] = Math['min'](_0x539edd['z'], _0xd90d37), _0xb12a12['x'] = Math['max'](_0xb12a12['x'], _0x1786ff), _0xb12a12['y'] = Math['max'](_0xb12a12['y'], _0x52b27f), _0xb12a12['z'] = Math['max'](_0xb12a12['z'], _0xd90d37);
                    }
                    this['_bounds']['setMin'](_0x539edd), this['_bounds']['setMax'](_0xb12a12), this['_needUpdat' + 'eBounds'] = ![];
                }
            } else
                throw 'Mesh:can\x27t' + '\x20calculate' + '\x20bounds\x20on' + '\x20subMesh,m' + 'esh\x27s\x20isRe' + 'adable\x20mus' + 't\x20be\x20true.';
        }
        ['cloneTo'](_0x181b1d) {
            var _0x22ed43 = _0x181b1d, _0x4eadc9 = this['_vertexBuf' + 'fer'], _0x2e44f1 = new _0x251441(_0x4eadc9['_byteLengt' + 'h'], _0x4eadc9['bufferUsag' + 'e'], _0x4eadc9['canRead']);
            _0x2e44f1['vertexDecl' + 'aration'] = _0x4eadc9['vertexDecl' + 'aration'], _0x2e44f1['setData'](_0x4eadc9['getUint8Da' + 'ta']()['slice']()['buffer']), _0x22ed43['_vertexBuf' + 'fer'] = _0x2e44f1, _0x22ed43['_vertexCou' + 'nt'] = this['_vertexCou' + 'nt'];
            var _0x56b219 = this['_indexBuff' + 'er'], _0x362895 = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], _0x56b219['indexCount'], _0x56b219['bufferUsag' + 'e'], _0x56b219['canRead']);
            _0x362895['setData'](_0x56b219['getData']()['slice']()), _0x22ed43['_indexBuff' + 'er'] = _0x362895, _0x22ed43['_setBuffer'](_0x22ed43['_vertexBuf' + 'fer'], _0x362895), _0x22ed43['_setInstan' + 'ceBuffer'](this['_instanceB' + 'ufferState' + 'Type']), _0x22ed43['_setCPUMem' + 'ory'](this['cpuMemory']), _0x22ed43['_setGPUMem' + 'ory'](this['gpuMemory']);
            var _0x82159c, _0x13d70a = this['_boneNames'];
            if (_0x13d70a) {
                var _0x51c02b = _0x22ed43['_boneNames'] = [];
                for (_0x82159c = 0x0; _0x82159c < _0x13d70a['length']; _0x82159c++)
                    _0x51c02b[_0x82159c] = _0x13d70a[_0x82159c];
            }
            var _0x341cc6 = this['_inverseBi' + 'ndPoses'];
            if (_0x341cc6) {
                var _0x238c8a = _0x22ed43['_inverseBi' + 'ndPoses'] = [];
                for (_0x82159c = 0x0; _0x82159c < _0x341cc6['length']; _0x82159c++)
                    _0x238c8a[_0x82159c] = _0x341cc6[_0x82159c];
            }
            var _0x5964f4 = this['_skinnedMa' + 'trixCaches']['length'];
            _0x22ed43['_skinnedMa' + 'trixCaches']['length'] = _0x5964f4;
            for (_0x82159c = 0x0; _0x82159c < _0x5964f4; _0x82159c++) {
                var _0x284748 = this['_skinnedMa' + 'trixCaches'][_0x82159c];
                _0x22ed43['_skinnedMa' + 'trixCaches'][_0x82159c] = new _0x55114a(_0x284748['subMeshInd' + 'ex'], _0x284748['batchIndex'], _0x284748['batchBoneI' + 'ndex']);
            }
            for (_0x82159c = 0x0; _0x82159c < this['subMeshCou' + 'nt']; _0x82159c++) {
                var _0x279246 = this['_subMeshes'][_0x82159c], _0x1919fa = _0x279246['_subIndexB' + 'ufferStart'], _0x56e14a = _0x279246['_subIndexB' + 'ufferCount'], _0x53873b = _0x279246['_boneIndic' + 'esList'], _0x1095de = new _0x327c94(_0x22ed43);
                _0x1095de['_subIndexB' + 'ufferStart']['length'] = _0x1919fa['length'], _0x1095de['_subIndexB' + 'ufferCount']['length'] = _0x56e14a['length'], _0x1095de['_boneIndic' + 'esList']['length'] = _0x53873b['length'];
                for (var _0x3ea6a0 = 0x0; _0x3ea6a0 < _0x1919fa['length']; _0x3ea6a0++)
                    _0x1095de['_subIndexB' + 'ufferStart'][_0x3ea6a0] = _0x1919fa[_0x3ea6a0];
                for (_0x3ea6a0 = 0x0; _0x3ea6a0 < _0x56e14a['length']; _0x3ea6a0++)
                    _0x1095de['_subIndexB' + 'ufferCount'][_0x3ea6a0] = _0x56e14a[_0x3ea6a0];
                for (_0x3ea6a0 = 0x0; _0x3ea6a0 < _0x53873b['length']; _0x3ea6a0++)
                    _0x1095de['_boneIndic' + 'esList'][_0x3ea6a0] = new Uint16Array(_0x53873b[_0x3ea6a0]);
                _0x1095de['_indexBuff' + 'er'] = _0x362895, _0x1095de['_indexStar' + 't'] = _0x279246['_indexStar' + 't'], _0x1095de['_indexCoun' + 't'] = _0x279246['_indexCoun' + 't'], _0x1095de['_indices'] = new Uint16Array(_0x362895['getData']()['buffer'], _0x279246['_indexStar' + 't'] * 0x2, _0x279246['_indexCoun' + 't']);
                var _0x498caf = _0x22ed43['_vertexBuf' + 'fer'];
                _0x1095de['_vertexBuf' + 'fer'] = _0x498caf, _0x22ed43['_subMeshes']['push'](_0x1095de);
            }
            _0x22ed43['_setSubMes' + 'hes'](_0x22ed43['_subMeshes']);
        }
        ['clone']() {
            var _0x39de40 = new _0x3b00dd();
            return this['cloneTo'](_0x39de40), _0x39de40;
        }
    }
    _0x3b00dd['MESH'] = 'MESH', _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_NORMA' + 'L'] = 0x0, _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_SIMPL' + 'EANIMATOR'] = 0x1;
    class _0x4b5b46 {
        static ['__init__']() {
        }
        static ['_createMes' + 'h'](_0x30f636, _0x348f14, _0x2bd20f) {
            var _0x4c4926 = _0x442335['LayaGL']['instance'], _0x52c8ee = new _0x3b00dd(), _0xf1c1e = new _0x327c94(_0x52c8ee), _0xf50c05 = new _0x251441(_0x348f14['length'] * 0x4, _0x4c4926['STATIC_DRA' + 'W'], !![]);
            _0xf50c05['vertexDecl' + 'aration'] = _0x30f636, _0xf50c05['setData'](_0x348f14['buffer']), _0x52c8ee['_vertexBuf' + 'fer'] = _0xf50c05, _0x52c8ee['_vertexCou' + 'nt'] = _0xf50c05['_byteLengt' + 'h'] / _0x30f636['vertexStri' + 'de'];
            var _0x471039 = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], _0x2bd20f['length'], _0x4c4926['STATIC_DRA' + 'W'], !![]);
            _0x471039['setData'](_0x2bd20f), _0x52c8ee['_indexBuff' + 'er'] = _0x471039, _0x52c8ee['_setBuffer'](_0xf50c05, _0x471039), _0x52c8ee['_setInstan' + 'ceBuffer'](_0x52c8ee['_instanceB' + 'ufferState' + 'Type']), _0xf1c1e['_vertexBuf' + 'fer'] = _0xf50c05, _0xf1c1e['_indexBuff' + 'er'] = _0x471039, _0xf1c1e['_setIndexR' + 'ange'](0x0, _0x471039['indexCount']);
            var _0x55fb50 = _0xf1c1e['_subIndexB' + 'ufferStart'], _0x1c3948 = _0xf1c1e['_subIndexB' + 'ufferCount'], _0x46cd00 = _0xf1c1e['_boneIndic' + 'esList'];
            _0x55fb50['length'] = 0x1, _0x1c3948['length'] = 0x1, _0x46cd00['length'] = 0x1, _0x55fb50[0x0] = 0x0, _0x1c3948[0x0] = _0x471039['indexCount'];
            var _0x18435c = [];
            _0x18435c['push'](_0xf1c1e), _0x52c8ee['_setSubMes' + 'hes'](_0x18435c), _0x52c8ee['calculateB' + 'ounds']();
            var _0x126388 = _0xf50c05['_byteLengt' + 'h'] + _0x471039['_byteLengt' + 'h'];
            return _0x52c8ee['_setCPUMem' + 'ory'](_0x126388), _0x52c8ee['_setGPUMem' + 'ory'](_0x126388), _0x52c8ee;
        }
        static ['createBox'](_0x4dc66c = 0x1, _0x45f49e = 0x1, _0x288ab5 = 0x1) {
            var _0x24fbb0 = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x20785d = _0x4dc66c / 0x2, _0x30e0fb = _0x45f49e / 0x2, _0x423b5a = _0x288ab5 / 0x2, _0x2e24a2 = new Float32Array([
                    -_0x20785d,
                    _0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    _0x20785d,
                    _0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x0,
                    _0x20785d,
                    _0x30e0fb,
                    _0x423b5a,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x1,
                    -_0x20785d,
                    _0x30e0fb,
                    _0x423b5a,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    -_0x20785d,
                    -_0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    _0x20785d,
                    -_0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x1,
                    _0x20785d,
                    -_0x30e0fb,
                    _0x423b5a,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x0,
                    -_0x20785d,
                    -_0x30e0fb,
                    _0x423b5a,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    -_0x20785d,
                    _0x30e0fb,
                    -_0x423b5a,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    -_0x20785d,
                    _0x30e0fb,
                    _0x423b5a,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    -_0x20785d,
                    -_0x30e0fb,
                    _0x423b5a,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x20785d,
                    -_0x30e0fb,
                    -_0x423b5a,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x20785d,
                    _0x30e0fb,
                    -_0x423b5a,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    _0x20785d,
                    _0x30e0fb,
                    _0x423b5a,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    _0x20785d,
                    -_0x30e0fb,
                    _0x423b5a,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x20785d,
                    -_0x30e0fb,
                    -_0x423b5a,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x20785d,
                    _0x30e0fb,
                    _0x423b5a,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x20785d,
                    _0x30e0fb,
                    _0x423b5a,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    _0x20785d,
                    -_0x30e0fb,
                    _0x423b5a,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1,
                    -_0x20785d,
                    -_0x30e0fb,
                    _0x423b5a,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    -_0x20785d,
                    _0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x0,
                    _0x20785d,
                    _0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    _0x20785d,
                    -_0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    -_0x20785d,
                    -_0x30e0fb,
                    -_0x423b5a,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x1
                ]), _0x5e8dea = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x8,
                    0x9,
                    0xa,
                    0xa,
                    0xb,
                    0x8,
                    0xc,
                    0xf,
                    0xe,
                    0xe,
                    0xd,
                    0xc,
                    0x10,
                    0x11,
                    0x12,
                    0x12,
                    0x13,
                    0x10,
                    0x14,
                    0x17,
                    0x16,
                    0x16,
                    0x15,
                    0x14
                ]);
            return _0x4b5b46['_createMes' + 'h'](_0x24fbb0, _0x2e24a2, _0x5e8dea);
        }
        static ['createCaps' + 'ule'](_0x56c13d = 0.5, _0xf81321 = 0x2, _0x3da326 = 0x10, _0x381384 = 0x20) {
            var _0x22dd2d = (_0x3da326 + 0x1) * (_0x381384 + 0x1) * 0x2 + (_0x381384 + 0x1) * 0x2, _0x563731 = 0x3 * _0x3da326 * (_0x381384 + 0x1) * 0x2 * 0x2 + 0x2 * _0x381384 * 0x3, _0x597b2d = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x92f4d = _0x597b2d['vertexStri' + 'de'] / 0x4, _0x13e54e = new Float32Array(_0x22dd2d * _0x92f4d), _0x5133e5 = new Uint16Array(_0x563731), _0x58b1e0 = Math['PI'] / 0x2 / _0x3da326, _0x441b5f = Math['PI'] * 0x2 / _0x381384, _0x213602 = _0xf81321 / 0x2 - _0x56c13d, _0xa77fb5 = 0x0, _0x4e365d = 0x0, _0x1dd56f = 0x0, _0x180281 = 0x0, _0x522f88 = 0x0, _0x353c68 = 0x0, _0x2913b2, _0x6d0f7;
            for (_0x2913b2 = 0x0; _0x2913b2 <= _0x3da326; _0x2913b2++) {
                for (_0x6d0f7 = 0x0; _0x6d0f7 <= _0x381384; _0x6d0f7++) {
                    _0xa77fb5 = _0x56c13d * Math['cos'](_0x2913b2 * _0x58b1e0) * Math['cos'](_0x6d0f7 * _0x441b5f + Math['PI']), _0x4e365d = _0x56c13d * Math['sin'](_0x2913b2 * _0x58b1e0), _0x1dd56f = _0x56c13d * Math['cos'](_0x2913b2 * _0x58b1e0) * Math['sin'](_0x6d0f7 * _0x441b5f + Math['PI']), _0x13e54e[_0x180281++] = _0xa77fb5, _0x13e54e[_0x180281++] = _0x4e365d + _0x213602, _0x13e54e[_0x180281++] = _0x1dd56f, _0x13e54e[_0x180281++] = _0xa77fb5, _0x13e54e[_0x180281++] = _0x4e365d, _0x13e54e[_0x180281++] = _0x1dd56f, _0x13e54e[_0x180281++] = 0x1 - _0x6d0f7 / _0x381384, _0x13e54e[_0x180281++] = (0x1 - _0x2913b2 / _0x3da326) * (Math['PI'] * _0x56c13d / 0x2 / (_0xf81321 + Math['PI'] * _0x56c13d)), _0x2913b2 < _0x3da326 && (_0x5133e5[_0x522f88++] = _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + (_0x381384 + 0x1), _0x5133e5[_0x522f88++] = _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7, _0x5133e5[_0x522f88++] = _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + 0x1, _0x5133e5[_0x522f88++] = _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + _0x381384, _0x5133e5[_0x522f88++] = _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7, _0x5133e5[_0x522f88++] = _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + (_0x381384 + 0x1));
                }
            }
            _0x353c68 += (_0x3da326 + 0x1) * (_0x381384 + 0x1);
            for (_0x2913b2 = 0x0; _0x2913b2 <= _0x3da326; _0x2913b2++) {
                for (_0x6d0f7 = 0x0; _0x6d0f7 <= _0x381384; _0x6d0f7++) {
                    _0xa77fb5 = _0x56c13d * Math['cos'](_0x2913b2 * _0x58b1e0) * Math['cos'](_0x6d0f7 * _0x441b5f + Math['PI']), _0x4e365d = _0x56c13d * Math['sin'](-_0x2913b2 * _0x58b1e0), _0x1dd56f = _0x56c13d * Math['cos'](_0x2913b2 * _0x58b1e0) * Math['sin'](_0x6d0f7 * _0x441b5f + Math['PI']), _0x13e54e[_0x180281++] = _0xa77fb5, _0x13e54e[_0x180281++] = _0x4e365d - _0x213602, _0x13e54e[_0x180281++] = _0x1dd56f, _0x13e54e[_0x180281++] = _0xa77fb5, _0x13e54e[_0x180281++] = _0x4e365d, _0x13e54e[_0x180281++] = _0x1dd56f, _0x13e54e[_0x180281++] = 0x1 - _0x6d0f7 / _0x381384, _0x13e54e[_0x180281++] = (_0x2913b2 / _0x3da326 * (Math['PI'] * _0x56c13d / 0x2) + (_0xf81321 + Math['PI'] * _0x56c13d / 0x2)) / (_0xf81321 + Math['PI'] * _0x56c13d), _0x2913b2 < _0x3da326 && (_0x5133e5[_0x522f88++] = _0x353c68 + _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7, _0x5133e5[_0x522f88++] = _0x353c68 + _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + (_0x381384 + 0x1), _0x5133e5[_0x522f88++] = _0x353c68 + _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + 0x1, _0x5133e5[_0x522f88++] = _0x353c68 + _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7, _0x5133e5[_0x522f88++] = _0x353c68 + _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + _0x381384, _0x5133e5[_0x522f88++] = _0x353c68 + _0x2913b2 * (_0x381384 + 0x1) + _0x6d0f7 + (_0x381384 + 0x1));
                }
            }
            _0x353c68 += (_0x3da326 + 0x1) * (_0x381384 + 0x1);
            for (_0x6d0f7 = 0x0; _0x6d0f7 <= _0x381384; _0x6d0f7++) {
                _0xa77fb5 = _0x56c13d * Math['cos'](_0x6d0f7 * _0x441b5f + Math['PI']), _0x4e365d = _0x213602, _0x1dd56f = _0x56c13d * Math['sin'](_0x6d0f7 * _0x441b5f + Math['PI']), _0x13e54e[_0x180281++] = _0xa77fb5, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = _0xa77fb5, _0x13e54e[_0x180281++] = _0x4e365d, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = -_0x4e365d, _0x13e54e[_0x180281++] = _0x1dd56f, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = _0x1dd56f, _0x13e54e[_0x180281++] = _0xa77fb5, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = _0xa77fb5, _0x13e54e[_0x180281++] = 0x0, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = 0x0, _0x13e54e[_0x180281++] = _0x1dd56f, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = _0x1dd56f, _0x13e54e[_0x180281++] = 0x1 - _0x6d0f7 * 0x1 / _0x381384, _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = 0x1 - _0x6d0f7 * 0x1 / _0x381384, _0x13e54e[_0x180281++] = Math['PI'] * _0x56c13d / 0x2 / (_0xf81321 + Math['PI'] * _0x56c13d), _0x13e54e[_0x180281 + (_0x381384 + 0x1) * 0x8 - 0x1] = (Math['PI'] * _0x56c13d / 0x2 + _0xf81321) / (_0xf81321 + Math['PI'] * _0x56c13d);
            }
            for (_0x6d0f7 = 0x0; _0x6d0f7 < _0x381384; _0x6d0f7++) {
                _0x5133e5[_0x522f88++] = _0x6d0f7 + _0x353c68 + (_0x381384 + 0x1), _0x5133e5[_0x522f88++] = _0x6d0f7 + _0x353c68 + 0x1, _0x5133e5[_0x522f88++] = _0x6d0f7 + _0x353c68, _0x5133e5[_0x522f88++] = _0x6d0f7 + _0x353c68 + (_0x381384 + 0x1), _0x5133e5[_0x522f88++] = _0x6d0f7 + _0x353c68 + (_0x381384 + 0x1) + 0x1, _0x5133e5[_0x522f88++] = _0x6d0f7 + _0x353c68 + 0x1;
            }
            return _0x353c68 += 0x2 * (_0x381384 + 0x1), _0x4b5b46['_createMes' + 'h'](_0x597b2d, _0x13e54e, _0x5133e5);
        }
        static ['createCone'](_0x107656 = 0.5, _0x595225 = 0x1, _0x1a21c0 = 0x20) {
            var _0x29a2ac = _0x1a21c0 + 0x1 + 0x1 + (_0x1a21c0 + 0x1) * 0x2, _0x2b9ebe = 0x6 * _0x1a21c0 + 0x3 * _0x1a21c0, _0x53a74e = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x1dba89 = _0x53a74e['vertexStri' + 'de'] / 0x4, _0x14ac2b = new Float32Array(_0x29a2ac * _0x1dba89), _0x4ad616 = new Uint16Array(_0x2b9ebe), _0x4a2d22 = Math['PI'] * 0x2 / _0x1a21c0, _0x4cf805 = _0x595225 / 0x2, _0x2e87e0 = 0x0, _0x302fbf = 0x0, _0x14df27 = 0x0, _0xf3a7cb = 0x0, _0x54584f = 0x0, _0x42bed8 = new _0x352206(), _0x5b4dc5 = new _0x352206(0x0, -0x1, 0x0), _0xedcfe2 = new _0x352206(0x0, _0x4cf805, 0x0), _0x1bd642 = new _0x352206(), _0x1e9ded = new _0x352206(), _0x24906e = new _0x388291(), _0xa59461 = new _0x352206(), _0x10dc80, _0x38ff7c = 0x0, _0x4e0e74 = 0x0;
            for (var _0x1a8369 = 0x0; _0x1a8369 <= _0x1a21c0; _0x1a8369++) {
                _0x2e87e0 = _0x1a8369 * _0x4a2d22, _0x14df27 = Math['cos'](_0x2e87e0 + Math['PI']) * _0x107656, _0xf3a7cb = _0x4cf805, _0x54584f = Math['sin'](_0x2e87e0 + Math['PI']) * _0x107656, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = _0x14df27, _0x14ac2b[_0x38ff7c++] = _0xf3a7cb, _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = -_0xf3a7cb, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = _0x54584f, _0x42bed8['x'] = _0x14df27, _0x42bed8['y'] = 0x0, _0x42bed8['z'] = _0x54584f, _0x1bd642['x'] = _0x14df27, _0x1bd642['y'] = -_0xf3a7cb, _0x1bd642['z'] = _0x54584f, _0x352206['subtract'](_0x1bd642, _0xedcfe2, _0x1e9ded), _0x352206['normalize'](_0x1e9ded, _0x1e9ded), _0x10dc80 = Math['acos'](_0x352206['dot'](_0x5b4dc5, _0x1e9ded)), _0x352206['cross'](_0x5b4dc5, _0x1e9ded, _0xa59461), _0x352206['normalize'](_0xa59461, _0xa59461), _0x388291['createFrom' + 'AxisAngle'](_0xa59461, _0x10dc80, _0x24906e), _0x352206['normalize'](_0x42bed8, _0x42bed8), _0x352206['transformQ' + 'uat'](_0x42bed8, _0x24906e, _0x42bed8), _0x352206['normalize'](_0x42bed8, _0x42bed8), _0x14ac2b[_0x38ff7c++] = _0x42bed8['x'], _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = _0x42bed8['x'], _0x14ac2b[_0x38ff7c++] = _0x42bed8['y'], _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = _0x42bed8['y'], _0x14ac2b[_0x38ff7c++] = _0x42bed8['z'], _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = _0x42bed8['z'], _0x14ac2b[_0x38ff7c++] = 0x1 - _0x1a8369 * 0x1 / _0x1a21c0, _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = 0x1 - _0x1a8369 * 0x1 / _0x1a21c0, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c + (_0x1a21c0 + 0x1) * 0x8 - 0x1] = 0x1;
            }
            _0x38ff7c += (_0x1a21c0 + 0x1) * 0x8;
            for (var _0x4b6180 = 0x0; _0x4b6180 < _0x1a21c0; _0x4b6180++) {
                _0x4ad616[_0x4e0e74++] = _0x4b6180 + _0x302fbf + (_0x1a21c0 + 0x1), _0x4ad616[_0x4e0e74++] = _0x4b6180 + _0x302fbf + 0x1, _0x4ad616[_0x4e0e74++] = _0x4b6180 + _0x302fbf, _0x4ad616[_0x4e0e74++] = _0x4b6180 + _0x302fbf + (_0x1a21c0 + 0x1), _0x4ad616[_0x4e0e74++] = _0x4b6180 + _0x302fbf + (_0x1a21c0 + 0x1) + 0x1, _0x4ad616[_0x4e0e74++] = _0x4b6180 + _0x302fbf + 0x1;
            }
            _0x302fbf += 0x2 * (_0x1a21c0 + 0x1);
            for (var _0x26172d = 0x0; _0x26172d <= _0x1a21c0; _0x26172d++) {
                _0x26172d === 0x0 && (_0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c++] = -_0x4cf805, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c++] = -0x1, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c++] = 0.5, _0x14ac2b[_0x38ff7c++] = 0.5), _0x2e87e0 = _0x26172d * _0x4a2d22, _0x14df27 = Math['cos'](_0x2e87e0 + Math['PI']) * _0x107656, _0xf3a7cb = -_0x4cf805, _0x54584f = Math['sin'](_0x2e87e0 + Math['PI']) * _0x107656, _0x14ac2b[_0x38ff7c++] = _0x14df27, _0x14ac2b[_0x38ff7c++] = _0xf3a7cb, _0x14ac2b[_0x38ff7c++] = _0x54584f, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c++] = -0x1, _0x14ac2b[_0x38ff7c++] = 0x0, _0x14ac2b[_0x38ff7c++] = 0.5 + Math['cos'](_0x2e87e0) * 0.5, _0x14ac2b[_0x38ff7c++] = 0.5 + Math['sin'](_0x2e87e0) * 0.5;
            }
            for (var _0x5f5264 = 0x0; _0x5f5264 < _0x1a21c0; _0x5f5264++) {
                _0x4ad616[_0x4e0e74++] = 0x0 + _0x302fbf, _0x4ad616[_0x4e0e74++] = _0x5f5264 + 0x2 + _0x302fbf, _0x4ad616[_0x4e0e74++] = _0x5f5264 + 0x1 + _0x302fbf;
            }
            return _0x302fbf += _0x1a21c0 + 0x1 + 0x1, _0x4b5b46['_createMes' + 'h'](_0x53a74e, _0x14ac2b, _0x4ad616);
        }
        static ['createCyli' + 'nder'](_0xab7d4f = 0.5, _0x900bd3 = 0x2, _0x99d991 = 0x20) {
            var _0x24ff3e = _0x99d991 + 0x1 + 0x1 + (_0x99d991 + 0x1) * 0x2 + (_0x99d991 + 0x1 + 0x1), _0x88314 = 0x3 * _0x99d991 + 0x6 * _0x99d991 + 0x3 * _0x99d991, _0x89dbda = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x560bc3 = _0x89dbda['vertexStri' + 'de'] / 0x4, _0x217a9d = new Float32Array(_0x24ff3e * _0x560bc3), _0x9776f3 = new Uint16Array(_0x88314), _0xf296f4 = Math['PI'] * 0x2 / _0x99d991, _0x410c04 = _0x900bd3 / 0x2, _0x14fe84 = 0x0, _0x2b6c1a = 0x0, _0x27f430 = 0x0, _0x1fe2e3 = 0x0, _0x313fad = 0x0, _0x2ebd83 = 0x0, _0x5424ba = 0x0;
            for (var _0xe57350 = 0x0; _0xe57350 <= _0x99d991; _0xe57350++) {
                _0xe57350 === 0x0 && (_0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = _0x410c04, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0x1, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0.5, _0x217a9d[_0x2ebd83++] = 0.5), _0x14fe84 = _0xe57350 * _0xf296f4, _0x27f430 = Math['cos'](_0x14fe84) * _0xab7d4f, _0x1fe2e3 = _0x410c04, _0x313fad = Math['sin'](_0x14fe84) * _0xab7d4f, _0x217a9d[_0x2ebd83++] = _0x27f430, _0x217a9d[_0x2ebd83++] = _0x1fe2e3, _0x217a9d[_0x2ebd83++] = _0x313fad, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0x1, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0.5 + Math['cos'](_0x14fe84) * 0.5, _0x217a9d[_0x2ebd83++] = 0.5 + Math['sin'](_0x14fe84) * 0.5;
            }
            for (var _0x786815 = 0x0; _0x786815 < _0x99d991; _0x786815++) {
                _0x9776f3[_0x5424ba++] = 0x0, _0x9776f3[_0x5424ba++] = _0x786815 + 0x1, _0x9776f3[_0x5424ba++] = _0x786815 + 0x2;
            }
            _0x2b6c1a += _0x99d991 + 0x1 + 0x1;
            for (var _0x3496b4 = 0x0; _0x3496b4 <= _0x99d991; _0x3496b4++) {
                _0x14fe84 = _0x3496b4 * _0xf296f4, _0x27f430 = Math['cos'](_0x14fe84 + Math['PI']) * _0xab7d4f, _0x1fe2e3 = _0x410c04, _0x313fad = Math['sin'](_0x14fe84 + Math['PI']) * _0xab7d4f, _0x217a9d[_0x2ebd83++] = _0x27f430, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = _0x27f430, _0x217a9d[_0x2ebd83++] = _0x1fe2e3, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = -_0x1fe2e3, _0x217a9d[_0x2ebd83++] = _0x313fad, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = _0x313fad, _0x217a9d[_0x2ebd83++] = _0x27f430, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = _0x27f430, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = 0x0, _0x217a9d[_0x2ebd83++] = _0x313fad, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = _0x313fad, _0x217a9d[_0x2ebd83++] = 0x1 - _0x3496b4 * 0x1 / _0x99d991, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = 0x1 - _0x3496b4 * 0x1 / _0x99d991, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83 + (_0x99d991 + 0x1) * 0x8 - 0x1] = 0x1;
            }
            _0x2ebd83 += (_0x99d991 + 0x1) * 0x8;
            for (var _0x4e2a98 = 0x0; _0x4e2a98 < _0x99d991; _0x4e2a98++) {
                _0x9776f3[_0x5424ba++] = _0x4e2a98 + _0x2b6c1a + (_0x99d991 + 0x1), _0x9776f3[_0x5424ba++] = _0x4e2a98 + _0x2b6c1a + 0x1, _0x9776f3[_0x5424ba++] = _0x4e2a98 + _0x2b6c1a, _0x9776f3[_0x5424ba++] = _0x4e2a98 + _0x2b6c1a + (_0x99d991 + 0x1), _0x9776f3[_0x5424ba++] = _0x4e2a98 + _0x2b6c1a + (_0x99d991 + 0x1) + 0x1, _0x9776f3[_0x5424ba++] = _0x4e2a98 + _0x2b6c1a + 0x1;
            }
            _0x2b6c1a += 0x2 * (_0x99d991 + 0x1);
            for (var _0x12a93f = 0x0; _0x12a93f <= _0x99d991; _0x12a93f++) {
                _0x12a93f === 0x0 && (_0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = -_0x410c04, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = -0x1, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0.5, _0x217a9d[_0x2ebd83++] = 0.5), _0x14fe84 = _0x12a93f * _0xf296f4, _0x27f430 = Math['cos'](_0x14fe84 + Math['PI']) * _0xab7d4f, _0x1fe2e3 = -_0x410c04, _0x313fad = Math['sin'](_0x14fe84 + Math['PI']) * _0xab7d4f, _0x217a9d[_0x2ebd83++] = _0x27f430, _0x217a9d[_0x2ebd83++] = _0x1fe2e3, _0x217a9d[_0x2ebd83++] = _0x313fad, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = -0x1, _0x217a9d[_0x2ebd83++] = 0x0, _0x217a9d[_0x2ebd83++] = 0.5 + Math['cos'](_0x14fe84) * 0.5, _0x217a9d[_0x2ebd83++] = 0.5 + Math['sin'](_0x14fe84) * 0.5;
            }
            for (var _0x1d55f6 = 0x0; _0x1d55f6 < _0x99d991; _0x1d55f6++) {
                _0x9776f3[_0x5424ba++] = 0x0 + _0x2b6c1a, _0x9776f3[_0x5424ba++] = _0x1d55f6 + 0x2 + _0x2b6c1a, _0x9776f3[_0x5424ba++] = _0x1d55f6 + 0x1 + _0x2b6c1a;
            }
            return _0x2b6c1a += _0x99d991 + 0x1 + 0x1, _0x4b5b46['_createMes' + 'h'](_0x89dbda, _0x217a9d, _0x9776f3);
        }
        static ['createPlan' + 'e'](_0x2e157e = 0xa, _0x4e5064 = 0xa, _0x4991a3 = 0xa, _0x58ff9d = 0xa) {
            var _0x47f123 = (_0x4991a3 + 0x1) * (_0x58ff9d + 0x1), _0x47a129 = _0x4991a3 * _0x58ff9d * 0x2 * 0x3, _0x46a381 = new Uint16Array(_0x47a129), _0x378ee6 = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x13910d = _0x378ee6['vertexStri' + 'de'] / 0x4, _0x12b3de = new Float32Array(_0x47f123 * _0x13910d), _0x11493e = _0x2e157e / 0x2, _0x3a4ae1 = _0x4e5064 / 0x2, _0x286b80 = _0x2e157e / _0x4991a3, _0x5edee4 = _0x4e5064 / _0x58ff9d, _0x2061fd = 0x0;
            for (var _0x31c8b2 = 0x0; _0x31c8b2 <= _0x58ff9d; _0x31c8b2++) {
                for (var _0x3e521 = 0x0; _0x3e521 <= _0x4991a3; _0x3e521++) {
                    _0x12b3de[_0x2061fd++] = _0x3e521 * _0x286b80 - _0x11493e, _0x12b3de[_0x2061fd++] = 0x0, _0x12b3de[_0x2061fd++] = _0x31c8b2 * _0x5edee4 - _0x3a4ae1, _0x12b3de[_0x2061fd++] = 0x0, _0x12b3de[_0x2061fd++] = 0x1, _0x12b3de[_0x2061fd++] = 0x0, _0x12b3de[_0x2061fd++] = _0x3e521 * 0x1 / _0x4991a3, _0x12b3de[_0x2061fd++] = _0x31c8b2 * 0x1 / _0x58ff9d;
                }
            }
            var _0x2068f = 0x0;
            for (_0x31c8b2 = 0x0; _0x31c8b2 < _0x58ff9d; _0x31c8b2++) {
                for (_0x3e521 = 0x0; _0x3e521 < _0x4991a3; _0x3e521++) {
                    _0x46a381[_0x2068f++] = (_0x31c8b2 + 0x1) * (_0x4991a3 + 0x1) + _0x3e521, _0x46a381[_0x2068f++] = _0x31c8b2 * (_0x4991a3 + 0x1) + _0x3e521, _0x46a381[_0x2068f++] = (_0x31c8b2 + 0x1) * (_0x4991a3 + 0x1) + _0x3e521 + 0x1, _0x46a381[_0x2068f++] = _0x31c8b2 * (_0x4991a3 + 0x1) + _0x3e521, _0x46a381[_0x2068f++] = _0x31c8b2 * (_0x4991a3 + 0x1) + _0x3e521 + 0x1, _0x46a381[_0x2068f++] = (_0x31c8b2 + 0x1) * (_0x4991a3 + 0x1) + _0x3e521 + 0x1;
                }
            }
            return _0x4b5b46['_createMes' + 'h'](_0x378ee6, _0x12b3de, _0x46a381);
        }
        static ['createQuad'](_0xaa26ad = 0x1, _0x357f35 = 0x1) {
            var _0x1dae74 = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x517c08 = _0xaa26ad / 0x2, _0x3b55bf = _0x357f35 / 0x2, _0x52f53d = new Float32Array([
                    -_0x517c08,
                    _0x3b55bf,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x517c08,
                    _0x3b55bf,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    -_0x517c08,
                    -_0x3b55bf,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    _0x517c08,
                    -_0x3b55bf,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1
                ]), _0x3496ee = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x3,
                    0x2,
                    0x1
                ]);
            return _0x4b5b46['_createMes' + 'h'](_0x1dae74, _0x52f53d, _0x3496ee);
        }
        static ['createSphe' + 're'](_0x59fe72 = 0.5, _0x334c51 = 0x20, _0x6d7ac8 = 0x20) {
            var _0x59f995 = (_0x334c51 + 0x1) * (_0x6d7ac8 + 0x1), _0x1fcd71 = 0x3 * _0x334c51 * (_0x6d7ac8 + 0x1) * 0x2, _0x2709b4 = new Uint16Array(_0x1fcd71), _0x56f8e6 = _0x2a7b2f['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x7c4e0d = _0x56f8e6['vertexStri' + 'de'] / 0x4, _0x2f2fe9 = new Float32Array(_0x59f995 * _0x7c4e0d), _0x4a10e9 = Math['PI'] / _0x334c51, _0x917e96 = Math['PI'] * 0x2 / _0x6d7ac8, _0xebb1fd = 0x0;
            _0x59f995 = 0x0, _0x1fcd71 = 0x0;
            for (var _0x26b9a2 = 0x0; _0x26b9a2 < _0x334c51 + 0x1; _0x26b9a2++) {
                var _0x4caa0e = Math['sin'](_0x26b9a2 * _0x4a10e9), _0x56664d = Math['cos'](_0x26b9a2 * _0x4a10e9);
                for (var _0x5c4ed4 = 0x0; _0x5c4ed4 < _0x6d7ac8 + 0x1; _0x5c4ed4++) {
                    var _0x3f6c5c = _0x4caa0e * Math['sin'](_0x5c4ed4 * _0x917e96 + Math['PI'] * 0x1 / 0x2), _0x33ae64 = _0x4caa0e * Math['cos'](_0x5c4ed4 * _0x917e96 + Math['PI'] * 0x1 / 0x2);
                    _0x2f2fe9[_0x59f995 + 0x0] = _0x3f6c5c * _0x59fe72, _0x2f2fe9[_0x59f995 + 0x1] = _0x56664d * _0x59fe72, _0x2f2fe9[_0x59f995 + 0x2] = _0x33ae64 * _0x59fe72, _0x2f2fe9[_0x59f995 + 0x3] = _0x3f6c5c, _0x2f2fe9[_0x59f995 + 0x4] = _0x56664d, _0x2f2fe9[_0x59f995 + 0x5] = _0x33ae64, _0x2f2fe9[_0x59f995 + 0x6] = _0x5c4ed4 / _0x6d7ac8, _0x2f2fe9[_0x59f995 + 0x7] = _0x26b9a2 / _0x334c51, _0x59f995 += _0x7c4e0d, _0x26b9a2 != _0x334c51 - 0x1 && (_0x2709b4[_0x1fcd71++] = _0xebb1fd + (_0x6d7ac8 + 0x1), _0x2709b4[_0x1fcd71++] = _0xebb1fd, _0x2709b4[_0x1fcd71++] = _0xebb1fd + 0x1, _0x2709b4[_0x1fcd71++] = _0xebb1fd + _0x6d7ac8, _0x2709b4[_0x1fcd71++] = _0xebb1fd, _0x2709b4[_0x1fcd71++] = _0xebb1fd + (_0x6d7ac8 + 0x1), _0xebb1fd++);
                }
            }
            return _0x4b5b46['_createMes' + 'h'](_0x56f8e6, _0x2f2fe9, _0x2709b4);
        }
    }
    var _0x6478f5 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0au' + 'niform\x20sam' + 'pler2D\x20u_M' + 'ainTex;\x0d\x0av' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a\x0d\x0avo' + 'id\x20main()\x20' + '{\x0d\x0a\x09gl_Fra' + 'gColor\x20=\x20t' + 'exture2D(u' + '_MainTex,\x20' + 'v_Texcoord' + '0);\x0d\x0a}\x0d\x0a\x0d\x0a', _0x449161 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a#if' + '\x20defined(G' + 'L_FRAGMENT' + '_PRECISION' + '_HIGH)//\u00a0原' + '来的写法会被我们自己' + '的解析流程处理，而我' + '们的解析是不认内置宏' + '的，导致被删掉，所以' + '改成\u00a0if\u00a0defi' + 'ned\u00a0了\x0d\x0a\x09pr' + 'ecision\x20hi' + 'ghp\x20float;' + '\x0d\x0a#else\x0d\x0a\x09' + 'precision\x20' + 'mediump\x20fl' + 'oat;\x0d\x0a#end' + 'if\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_PositionT' + 'excoord;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Offse' + 'tScale;\x0d\x0av' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a\x0d\x0avo' + 'id\x20main()\x20' + '{\x09\x0d\x0a\x09gl_Po' + 'sition\x20=\x20v' + 'ec4(u_Offs' + 'etScale.x*' + '2.0-1.0+(a' + '_PositionT' + 'excoord.x+' + '1.0)*u_Off' + 'setScale.z' + ',(1.0-((u_' + 'OffsetScal' + 'e.y*2.0-1.' + '0+(-a_Posi' + 'tionTexcoo' + 'rd.y+1.0)*' + 'u_OffsetSc' + 'ale.w)+1.0' + ')/2.0)*2.0' + '-1.0,\x200.0,' + '\x201.0);\x09\x0d\x0a\x09' + 'v_Texcoord' + '0\x20=\x20a_Posi' + 'tionTexcoo' + 'rd.zw;\x0d\x0a\x09g' + 'l_Position' + '\x20=\x20remapGL' + 'PositionZ(' + 'gl_Positio' + 'n);\x0d\x0a}', _0x5eedcb = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20COLO' + 'R\x0d\x0a\x09varyin' + 'g\x20vec4\x20v_C' + 'olor;\x0d\x0a#en' + 'dif\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20MAINTEXTU' + 'RE\x0d\x0a\x09unifo' + 'rm\x20sampler' + '2D\x20u_Albed' + 'oTexture;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Albe' + 'doColor;\x0d\x0a' + '\x0d\x0a#ifdef\x20F' + 'OG\x0d\x0a\x09unifo' + 'rm\x20float\x20u' + '_FogStart;' + '\x0d\x0a\x09uniform' + '\x20float\x20u_F' + 'ogRange;\x0d\x0a' + '\x09#ifdef\x20AD' + 'DTIVEFOG\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'uniform\x20ve' + 'c3\x20u_FogCo' + 'lor;\x0d\x0a\x09#en' + 'dif\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avoid\x20' + 'main()\x0d\x0a{\x0d' + '\x0a\x09vec4\x20col' + 'or\x20=\x20\x202.0\x20' + '*\x20u_Albedo' + 'Color;\x0d\x0a\x09#' + 'ifdef\x20COLO' + 'R\x0d\x0a\x09\x09color' + '\x20*=\x20v_Colo' + 'r;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20MAINTEXTU' + 'RE\x0d\x0a\x09\x09colo' + 'r\x20*=\x20textu' + 're2D(u_Alb' + 'edoTexture' + ',\x20v_Texcoo' + 'rd0);\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=\x20color' + ';\x0d\x0a\x09\x0d\x0a\x09#if' + 'def\x20FOG\x0d\x0a\x09' + '\x09float\x20ler' + 'pFact\x20=\x20cl' + 'amp((1.0\x20/' + '\x20gl_FragCo' + 'ord.w\x20-\x20u_' + 'FogStart)\x20' + '/\x20u_FogRan' + 'ge,\x200.0,\x201' + '.0);\x0d\x0a\x09\x09#i' + 'fdef\x20ADDTI' + 'VEFOG\x0d\x0a\x09\x09\x09' + 'gl_FragCol' + 'or.rgb\x20=\x20m' + 'ix(gl_Frag' + 'Color.rgb,' + '\x20vec3(0.0)' + ',\x20lerpFact' + ');\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09gl_F' + 'ragColor.r' + 'gb\x20=\x20mix(g' + 'l_FragColo' + 'r.rgb,\x20u_F' + 'ogColor,\x20l' + 'erpFact);\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#endif\x0d\x0a' + '}\x0d\x0a\x0d\x0a', _0x4a28b9 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a#in' + 'clude\x20\x22Lig' + 'hting.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22LayaUt' + 'ile.glsl\x22;' + '\x0d\x0a\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_Position;' + '\x0d\x0aattribut' + 'e\x20vec4\x20a_C' + 'olor;\x0d\x0aatt' + 'ribute\x20vec' + '2\x20a_Texcoo' + 'rd0;\x0d\x0a\x0d\x0a#i' + 'fdef\x20GPU_I' + 'NSTANCE\x0d\x0a\x09' + 'attribute\x20' + 'mat4\x20a_Mvp' + 'Matrix;\x0d\x0a#' + 'else\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_MvpMatri' + 'x;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20COLOR\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a#endif\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0a\x0d\x0a#' + 'ifdef\x20TILI' + 'NGOFFSET\x0d\x0a' + '\x09uniform\x20v' + 'ec4\x20u_Tili' + 'ngOffset;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20BO' + 'NE\x0d\x0a\x09const' + '\x20int\x20c_Max' + 'BoneCount\x20' + '=\x2024;\x0d\x0a\x09at' + 'tribute\x20ve' + 'c4\x20a_BoneI' + 'ndices;\x0d\x0a\x09' + 'attribute\x20' + 'vec4\x20a_Bon' + 'eWeights;\x0d' + '\x0a\x09uniform\x20' + 'mat4\x20u_Bon' + 'es[c_MaxBo' + 'neCount];\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x0d\x0a{\x0d\x0a\x09' + 'vec4\x20posit' + 'ion;\x0d\x0a\x09#if' + 'def\x20BONE\x0d\x0a' + '\x09\x09mat4\x20ski' + 'nTransform' + ';\x0d\x0a\x09\x20\x09#ifd' + 'ef\x20SIMPLEB' + 'ONE\x0d\x0a\x09\x09\x09fl' + 'oat\x20curren' + 'tPixelPos;' + '\x0d\x0a\x09\x09\x09#ifde' + 'f\x20GPU_INST' + 'ANCE\x0d\x0a\x09\x09\x09\x09' + 'currentPix' + 'elPos\x20=\x20a_' + 'SimpleText' + 'ureParams.' + 'x+a_Simple' + 'TexturePar' + 'ams.y;\x0d\x0a\x09\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09\x09currentP' + 'ixelPos\x20=\x20' + 'u_SimpleAn' + 'imatorPara' + 'ms.x+u_Sim' + 'pleAnimato' + 'rParams.y;' + ('\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09floa' + 't\x20offset\x20=' + '\x201.0/u_Sim' + 'pleAnimato' + 'rTextureSi' + 'ze;\x0d\x0a\x09\x09\x09sk' + 'inTransfor' + 'm\x20=\x20\x20loadM' + 'atFromText' + 'ure(curren' + 'tPixelPos,' + 'int(a_Bone' + 'Indices.x)' + ',offset)\x20*' + '\x20a_BoneWei' + 'ghts.x;\x0d\x0a\x09' + '\x09\x09skinTran' + 'sform\x20+=\x20l' + 'oadMatFrom' + 'Texture(cu' + 'rrentPixel' + 'Pos,int(a_' + 'BoneIndice' + 's.y),offse' + 't)\x20*\x20a_Bon' + 'eWeights.y' + ';\x0d\x0a\x09\x09\x09skin' + 'Transform\x20' + '+=\x20loadMat' + 'FromTextur' + 'e(currentP' + 'ixelPos,in' + 't(a_BoneIn' + 'dices.z),o' + 'ffset)\x20*\x20a' + '_BoneWeigh' + 'ts.z;\x0d\x0a\x09\x09\x09' + 'skinTransf' + 'orm\x20+=\x20loa' + 'dMatFromTe' + 'xture(curr' + 'entPixelPo' + 's,int(a_Bo' + 'neIndices.' + 'w),offset)' + '\x20*\x20a_BoneW' + 'eights.w;\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20=\x20\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.x)]\x20' + '*\x20a_BoneWe' + 'ights.x;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.y)]\x20' + '*\x20a_BoneWe' + 'ights.y;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.z)]\x20' + '*\x20a_BoneWe' + 'ights.z;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.w)]\x20' + '*\x20a_BoneWe' + 'ights.w;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09position' + '=skinTrans' + 'form*a_Pos' + 'ition;\x0d\x0a\x09\x20' + '#else\x0d\x0a\x09\x09p' + 'osition=a_' + 'Position;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09gl_Pos' + 'ition\x20=\x20a_' + 'MvpMatrix\x20' + '*\x20position' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20position;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09#ifde' + 'f\x20TILINGOF') + ('FSET\x0d\x0a\x09\x09v_' + 'Texcoord0=' + 'TransformU' + 'V(a_Texcoo' + 'rd0,u_Tili' + 'ngOffset);' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09v_Texcoo' + 'rd0=a_Texc' + 'oord0;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x09\x0d' + '\x0a\x09#ifdef\x20C' + 'OLOR\x0d\x0a\x09\x09v_' + 'Color\x20=\x20a_' + 'Color;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09gl' + '_Position=' + 'remapGLPos' + 'itionZ(gl_' + 'Position);' + '\x0d\x0a}'), _0x2defcd = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22L' + 'ighting.gl' + 'sl\x22;\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT)||de' + 'fined(FOG)' + '\x0d\x0a\x09uniform' + '\x20vec3\x20u_Ca' + 'meraPos;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Norm' + 'al;\x0d\x0a\x09vary' + 'ing\x20vec3\x20v' + '_PositionW' + 'orld;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + 'def\x20FOG\x0d\x0a\x09' + 'uniform\x20fl' + 'oat\x20u_FogS' + 'tart;\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogRan' + 'ge;\x0d\x0a\x09unif' + 'orm\x20vec3\x20u' + '_FogColor;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '\x0d\x0a\x09#ifdef\x20' + 'LEGACYSING' + 'LELIGHTING' + '\x0d\x0a\x09\x09#ifdef' + '\x20DIRECTION' + 'LIGHT\x0d\x0a\x09\x09\x09' + 'uniform\x20Di' + 'rectionLig' + 'ht\x20u_Direc' + 'tionLight;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09unif' + 'orm\x20PointL' + 'ight\x20u_Poi' + 'ntLight;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09uniform' + '\x20SpotLight' + '\x20u_SpotLig' + 'ht;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09unifo' + 'rm\x20mat4\x20u_' + 'View;\x0d\x0a\x09\x09u' + 'niform\x20vec' + '4\x20u_Projec' + 'tionParams' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20vec4\x20u_' + 'Viewport;\x0d' + '\x0a\x09\x09uniform' + '\x20int\x20u_Dir' + 'ationLight' + 'Count;\x0d\x0a\x09\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'LightBuffe' + 'r;\x0d\x0a\x09\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tClusterBu' + ('ffer;\x0d\x0a\x09#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#inc' + 'lude\x20\x22Shad' + 'ow.glsl\x22\x0d\x0a' + '#if\x20define' + 'd(CALCULAT' + 'E_SHADOWS)' + '//shader中自' + '定义的宏不可用ifd' + 'ef\x20必须改成if\x20' + 'defined\x0d\x0a\x09' + 'varying\x20ve' + 'c4\x20v_Shado' + 'wCoord;\x0d\x0a#' + 'endif\x0d\x0avar' + 'ying\x20float' + '\x20v_posView' + 'Z;\x0d\x0a\x0d\x0aunif' + 'orm\x20vec3\x20u' + '_AmbientCo' + 'lor;\x0d\x0a\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Sp' + 'latAlphaTe' + 'xture;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'DiffuseTex' + 'ture1;\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Di' + 'ffuseTextu' + 're2;\x0d\x0aunif' + 'orm\x20sample' + 'r2D\x20u_Diff' + 'useTexture' + '3;\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_Diffus' + 'eTexture4;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_DiffuseT' + 'exture5;\x0d\x0a' + '\x0d\x0auniform\x20' + 'vec4\x20u_Dif' + 'fuseScaleO' + 'ffset1;\x0d\x0au' + 'niform\x20vec' + '4\x20u_Diffus' + 'eScaleOffs' + 'et2;\x0d\x0aunif' + 'orm\x20vec4\x20u' + '_DiffuseSc' + 'aleOffset3' + ';\x0d\x0auniform' + '\x20vec4\x20u_Di' + 'ffuseScale' + 'Offset4;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Diffu' + 'seScaleOff' + 'set5;\x0d\x0a\x0d\x0av' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a\x0d\x0a#i' + 'fdef\x20LIGHT' + 'MAP\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tMap;\x0d\x0a\x09va' + 'rying\x20vec2' + '\x20v_LightMa' + 'pUV;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vec4\x20sp' + 'latAlpha\x20=' + '\x20vec4(1.0)' + ';\x0d\x0a\x09#ifdef' + '\x20ExtendTer' + 'rain_DETAI' + 'L_NUM1\x0d\x0a\x09\x09' + 'splatAlpha' + '\x20=\x20texture' + '2D(u_Splat' + 'AlphaTextu' + 're,\x20v_Texc' + 'oord0);\x0d\x0a\x09' + '\x09vec4\x20colo' + 'r1\x20=\x20textu' + 're2D(u_Dif' + 'fuseTextur' + 'e1,\x20v_Texc' + 'oord0\x20*\x20u_' + 'DiffuseSca' + 'leOffset1.' + 'xy);\x0d\x0a\x09\x09gl' + '_FragColor') + ('.xyz\x20=\x20col' + 'or1.xyz\x20*\x20' + 'splatAlpha' + '.r;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09#ifde' + 'f\x20ExtendTe' + 'rrain_DETA' + 'IL_NUM2\x0d\x0a\x09' + '\x09splatAlph' + 'a\x20=\x20textur' + 'e2D(u_Spla' + 'tAlphaText' + 'ure,\x20v_Tex' + 'coord0);\x0d\x0a' + '\x09\x09vec4\x20col' + 'or1\x20=\x20text' + 'ure2D(u_Di' + 'ffuseTextu' + 're1,\x20v_Tex' + 'coord0\x20*\x20u' + '_DiffuseSc' + 'aleOffset1' + '.xy);\x0d\x0a\x09\x09v' + 'ec4\x20color2' + '\x20=\x20texture' + '2D(u_Diffu' + 'seTexture2' + ',\x20v_Texcoo' + 'rd0\x20*\x20u_Di' + 'ffuseScale' + 'Offset2.xy' + ');\x0d\x0a\x09\x09gl_F' + 'ragColor.x' + 'yz\x20=\x20color' + '1.xyz\x20*\x20sp' + 'latAlpha.r' + '\x20+\x20color2.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r);\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20Exte' + 'ndTerrain_' + 'DETAIL_NUM' + '3\x0d\x0a\x09\x09splat' + 'Alpha\x20=\x20te' + 'xture2D(u_' + 'SplatAlpha' + 'Texture,\x20v' + '_Texcoord0' + ');\x0d\x0a\x09\x09vec4' + '\x20color1\x20=\x20' + 'texture2D(' + 'u_DiffuseT' + 'exture1,\x20v' + '_Texcoord0' + '\x20*\x20u_Diffu' + 'seScaleOff' + 'set1.xy);\x0d' + '\x0a\x09\x09vec4\x20co' + 'lor2\x20=\x20tex' + 'ture2D(u_D' + 'iffuseText' + 'ure2,\x20v_Te' + 'xcoord0\x20*\x20' + 'u_DiffuseS' + 'caleOffset' + '2.xy);\x0d\x0a\x09\x09' + 'vec4\x20color' + '3\x20=\x20textur' + 'e2D(u_Diff' + 'useTexture' + '3,\x20v_Texco' + 'ord0\x20*\x20u_D' + 'iffuseScal' + 'eOffset3.x' + 'y);\x0d\x0a\x09\x09gl_' + 'FragColor.' + 'xyz\x20=\x20colo' + 'r1.xyz\x20*\x20s' + 'platAlpha.' + 'r\x20\x20+\x20color' + '2.xyz\x20*\x20sp' + 'latAlpha.g' + '\x20+\x20color3.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r\x20-\x20sp' + 'latAlpha.g' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20ExtendTer' + 'rain_DETAI' + 'L_NUM4\x0d\x0a\x09\x09' + 'splatAlpha' + '\x20=\x20texture' + '2D(u_Splat' + 'AlphaTextu' + 're,\x20v_Texc' + 'oord0);\x0d\x0a\x09') + ('\x09vec4\x20colo' + 'r1\x20=\x20textu' + 're2D(u_Dif' + 'fuseTextur' + 'e1,\x20v_Texc' + 'oord0\x20*\x20u_' + 'DiffuseSca' + 'leOffset1.' + 'xy);\x0d\x0a\x09\x09ve' + 'c4\x20color2\x20' + '=\x20texture2' + 'D(u_Diffus' + 'eTexture2,' + '\x20v_Texcoor' + 'd0\x20*\x20u_Dif' + 'fuseScaleO' + 'ffset2.xy)' + ';\x0d\x0a\x09\x09vec4\x20' + 'color3\x20=\x20t' + 'exture2D(u' + '_DiffuseTe' + 'xture3,\x20v_' + 'Texcoord0\x20' + '*\x20u_Diffus' + 'eScaleOffs' + 'et3.xy);\x0d\x0a' + '\x09\x09vec4\x20col' + 'or4\x20=\x20text' + 'ure2D(u_Di' + 'ffuseTextu' + 're4,\x20v_Tex' + 'coord0\x20*\x20u' + '_DiffuseSc' + 'aleOffset4' + '.xy);\x0d\x0a\x09\x09g' + 'l_FragColo' + 'r.xyz\x20=\x20co' + 'lor1.xyz\x20*' + '\x20splatAlph' + 'a.r\x20\x20+\x20col' + 'or2.xyz\x20*\x20' + 'splatAlpha' + '.g\x20+\x20color' + '3.xyz\x20*\x20sp' + 'latAlpha.b' + '\x20+\x20color4.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r\x20-\x20sp' + 'latAlpha.g' + '\x20-\x20splatAl' + 'pha.b);\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20Exte' + 'ndTerrain_' + 'DETAIL_NUM' + '5\x0d\x0a\x09\x09splat' + 'Alpha\x20=\x20te' + 'xture2D(u_' + 'SplatAlpha' + 'Texture,\x20v' + '_Texcoord0' + ');\x0d\x0a\x09\x09vec4' + '\x20color1\x20=\x20' + 'texture2D(' + 'u_DiffuseT' + 'exture1,\x20v' + '_Texcoord0' + '\x20*\x20u_Diffu' + 'seScaleOff' + 'set1.xy);\x0d' + '\x0a\x09\x09vec4\x20co' + 'lor2\x20=\x20tex' + 'ture2D(u_D' + 'iffuseText' + 'ure2,\x20v_Te' + 'xcoord0\x20*\x20' + 'u_DiffuseS' + 'caleOffset' + '2.xy);\x0d\x0a\x09\x09' + 'vec4\x20color' + '3\x20=\x20textur' + 'e2D(u_Diff' + 'useTexture' + '3,\x20v_Texco' + 'ord0\x20*\x20u_D' + 'iffuseScal' + 'eOffset3.x' + 'y);\x0d\x0a\x09\x09vec' + '4\x20color4\x20=' + '\x20texture2D' + '(u_Diffuse' + 'Texture4,\x20' + 'v_Texcoord' + '0\x20*\x20u_Diff' + 'useScaleOf' + 'fset4.xy);' + '\x0d\x0a\x09\x09vec4\x20c' + 'olor5\x20=\x20te' + 'xture2D(u_') + ('DiffuseTex' + 'ture5,\x20v_T' + 'excoord0\x20*' + '\x20u_Diffuse' + 'ScaleOffse' + 't5.xy);\x0d\x0a\x09' + '\x09gl_FragCo' + 'lor.xyz\x20=\x20' + 'color1.xyz' + '\x20*\x20splatAl' + 'pha.r\x20\x20+\x20c' + 'olor2.xyz\x20' + '*\x20splatAlp' + 'ha.g\x20+\x20col' + 'or3.xyz\x20*\x20' + 'splatAlpha' + '.b\x20+\x20color' + '4.xyz\x20*\x20sp' + 'latAlpha.a' + '\x20+\x20color5.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r\x20-\x20sp' + 'latAlpha.g' + '\x20-\x20splatAl' + 'pha.b\x20-\x20sp' + 'latAlpha.a' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x09gl_Fr' + 'agColor.w\x20' + '=\x20splatAlp' + 'ha.a;\x0d\x0a\x09\x09\x0d' + '\x0a\x09#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '\x0d\x0a\x09\x09vec3\x20n' + 'ormal\x20=\x20v_' + 'Normal;\x0d\x0a\x09' + '\x09vec3\x20dif,' + '\x20spe;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09v' + 'ec3\x20diffus' + 'e\x20=\x20vec3(0' + '.0);\x0d\x0a\x09vec' + '3\x20specular' + '=\x20vec3(0.0' + ');\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||defin' + 'ed(FOG)\x0d\x0a\x09' + '\x09vec3\x20toEy' + 'e;\x0d\x0a\x09\x09#ifd' + 'ef\x20FOG\x0d\x0a\x09\x09' + '\x09toEye=u_C' + 'ameraPos-v' + '_PositionW' + 'orld;\x0d\x0a\x09\x09\x09' + 'float\x20toEy' + 'eLength=le' + 'ngth(toEye' + ');\x0d\x0a\x09\x09\x09toE' + 'ye/=toEyeL' + 'ength;\x0d\x0a\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + 'toEye=norm' + 'alize(u_Ca' + 'meraPos-v_' + 'PositionWo' + 'rld);\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20LEGA' + 'CYSINGLELI' + 'GHTING\x0d\x0a\x09\x09' + '#ifdef\x20DIR' + 'ECTIONLIGH' + 'T\x0d\x0a\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongDiectio' + 'nLight(vec' + '3(0.0),1.0' + ',normal,ve' + 'c3(1.0),to' + 'Eye,u_Dire' + 'ctionLight' + ',dif,spe);' + '\x0d\x0a\x09\x09\x09diffu' + 'se+=dif;\x0d\x0a' + '\x09\x09\x09specula' + 'r+=spe;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09') + ('\x0d\x0a\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongPointLi' + 'ght(v_Posi' + 'tionWorld,' + 'vec3(0.0),' + '1.0,normal' + ',vec3(1.0)' + ',toEye,u_P' + 'ointLight,' + 'dif,spe);\x0d' + '\x0a\x09\x09\x09diffus' + 'e+=dif;\x0d\x0a\x09' + '\x09\x09specular' + '+=spe;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09LayaAir' + 'BlinnPhong' + 'SpotLight(' + 'v_Position' + 'World,vec3' + '(0.0),1.0,' + 'normal,vec' + '3(1.0),toE' + 'ye,u_SpotL' + 'ight,dif,s' + 'pe);\x0d\x0a\x09\x09\x09d' + 'iffuse+=di' + 'f;\x0d\x0a\x09\x09\x09spe' + 'cular+=spe' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09#ifdef\x20' + 'DIRECTIONL' + 'IGHT\x0d\x0a\x09\x09\x09f' + 'or\x20(int\x20i\x20' + '=\x200;\x20i\x20<\x20M' + 'AX_LIGHT_C' + 'OUNT;\x20i++)' + '\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09' + '\x09\x09\x09if(i\x20>=' + '\x20u_Diratio' + 'nLightCoun' + 't)\x0d\x0a\x09\x09\x09\x09\x09b' + 'reak;\x0d\x0a\x09\x09\x09' + '\x09Direction' + 'Light\x20dire' + 'ctionLight' + '\x20=\x20getDire' + 'ctionLight' + '(u_LightBu' + 'ffer,i);\x0d\x0a' + '\x09\x09\x09\x09LayaAi' + 'rBlinnPhon' + 'gDiectionL' + 'ight(vec3(' + '0.0),1.0,n' + 'ormal,vec3' + '(1.0),toEy' + 'e,directio' + 'nLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09\x09diffuse+' + '=dif;\x0d\x0a\x09\x09\x09' + '\x09specular+' + '=spe;\x0d\x0a\x09\x09\x09' + '}\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09#if\x20d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT)\x0d\x0a' + '\x09\x09\x09ivec4\x20c' + 'lusterInfo' + '\x20=getClust' + 'erInfo(u_L' + 'ightCluste' + 'rBuffer,u_' + 'View,u_Vie' + 'wport,\x20v_P' + 'ositionWor' + 'ld,gl_Frag' + 'Coord,u_Pr' + 'ojectionPa' + 'rams);\x0d\x0a\x09\x09' + '\x09#ifdef\x20PO' + 'INTLIGHT\x0d\x0a' + '\x09\x09\x09\x09for\x20(i' + 'nt\x20i\x20=\x200;\x20' + 'i\x20<\x20MAX_LI' + 'GHT_COUNT;' + '\x20i++)\x20\x0d\x0a\x09\x09' + '\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09' + 'if(i\x20>=\x20cl' + 'usterInfo.' + 'x)//PointL') + ('ightCount\x0d' + '\x0a\x09\x09\x09\x09\x09\x09bre' + 'ak;\x0d\x0a\x09\x09\x09\x09\x09' + 'PointLight' + '\x20pointLigh' + 't\x20=\x20getPoi' + 'ntLight(u_' + 'LightBuffe' + 'r,u_LightC' + 'lusterBuff' + 'er,cluster' + 'Info,i);\x0d\x0a' + '\x09\x09\x09\x09\x09LayaA' + 'irBlinnPho' + 'ngPointLig' + 'ht(v_Posit' + 'ionWorld,v' + 'ec3(0.0),1' + '.0,normal,' + 'vec3(1.0),' + 'toEye,poin' + 'tLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09\x09\x09diffuse' + '+=dif;\x0d\x0a\x09\x09' + '\x09\x09\x09specula' + 'r+=spe;\x0d\x0a\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09\x09' + '#ifdef\x20SPO' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09\x09for\x20(int' + '\x20i\x20=\x200;\x20i\x20' + '<\x20MAX_LIGH' + 'T_COUNT;\x20i' + '++)\x20\x0d\x0a\x09\x09\x09\x09' + '{\x0d\x0a\x09\x09\x09\x09\x09if' + '(i\x20>=\x20clus' + 'terInfo.y)' + '//SpotLigh' + 'tCount\x0d\x0a\x09\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09\x09Spo' + 'tLight\x20spo' + 'tLight\x20=\x20g' + 'etSpotLigh' + 't(u_LightB' + 'uffer,u_Li' + 'ghtCluster' + 'Buffer,clu' + 'sterInfo,i' + ');\x0d\x0a\x09\x09\x09\x09\x09L' + 'ayaAirBlin' + 'nPhongSpot' + 'Light(v_Po' + 'sitionWorl' + 'd,vec3(0.0' + '),1.0,norm' + 'al,vec3(1.' + '0),toEye\x09,' + 'spotLight,' + 'dif,spe);\x0d' + '\x0a\x09\x09\x09\x09\x09diff' + 'use+=dif;\x0d' + '\x0a\x09\x09\x09\x09\x09spec' + 'ular+=spe;' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0avec3\x20glob' + 'alDiffuse\x20' + '=\x20u_Ambien' + 'tColor;\x0d\x0a#' + 'ifdef\x20LIGH' + 'TMAP\x0d\x0a\x09glo' + 'balDiffuse' + '\x20+=\x20decode' + 'HDR(textur' + 'e2D(u_Ligh' + 'tMap,\x20v_Li' + 'ghtMapUV),' + '5.0);\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(C' + 'ALCULATE_S' + 'HADOWS)//s' + 'hader中自定义的' + '宏不可用ifdef\x20' + '必须改成if\x20def' + 'ined\x0d\x0a\x09flo' + 'at\x20shadowV' + 'alue\x20=\x20sha' + 'dowValue\x20=' + '\x20sampleSha' + 'dowmap(v_S' + 'hadowCoord' + ');\x0d\x0a\x09gl_Fr' + 'agColor\x20=\x20' + 'vec4(gl_Fr') + ('agColor.rg' + 'b\x20*\x20(globa' + 'lDiffuse\x20+' + '\x20diffuse)\x20' + '*\x20shadowVa' + 'lue,\x20gl_Fr' + 'agColor.a)' + ';\x0d\x0a#else\x0d\x0a' + '\x09gl_FragCo' + 'lor\x20=\x20vec4' + '(gl_FragCo' + 'lor.rgb\x20*\x20' + '(globalDif' + 'fuse\x20+\x20dif' + 'fuse),\x20gl_' + 'FragColor.' + 'a);\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)\x0d\x0a\x09#if\x20' + 'defined(CA' + 'LCULATE_SH' + 'ADOWS)//sh' + 'ader中自定义的宏' + '不可用ifdef\x20必' + '须改成if\x20defi' + 'ned\x0d\x0a\x09\x09gl_' + 'FragColor.' + 'rgb\x20+=\x20spe' + 'cular\x20*\x20sh' + 'adowValue;' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09gl_FragC' + 'olor.rgb\x20+' + '=\x20specular' + ';\x0d\x0a\x09#endif' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20F' + 'OG\x0d\x0a\x09float' + '\x20lerpFact=' + 'clamp((toE' + 'yeLength-u' + '_FogStart)' + '/u_FogRang' + 'e,0.0,1.0)' + ';\x0d\x0a\x09gl_Fra' + 'gColor.rgb' + '=mix(gl_Fr' + 'agColor.rg' + 'b,u_FogCol' + 'or,lerpFac' + 't);\x0d\x0a#endi' + 'f\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a' + '\x0d\x0a\x0d\x0a\x0d\x0a'), _0x39e477 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '2\x20a_Texcoo' + 'rd0;\x0d\x0a\x0d\x0aun' + 'iform\x20mat4' + '\x20u_MvpMatr' + 'ix;\x0d\x0a\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '0;\x0d\x0a\x0d\x0a#if\x20' + 'defined(DI' + 'RECTIONLIG' + 'HT)||defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)||defi' + 'ned(LIGHTM' + 'AP)\x0d\x0a\x09attr' + 'ibute\x20vec3' + '\x20a_Normal;' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_No' + 'rmal;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)||def' + 'ined(FOG)|' + '|(defined(' + 'CALCULATE_' + 'SHADOWS)&&' + 'defined(SH' + 'ADOWMAP_PS' + 'SM1))\x0d\x0a\x09un' + 'iform\x20mat4' + '\x20u_WorldMa' + 't;\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'PositionWo' + 'rld;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20LIGHTMA' + 'P\x0d\x0a\x09varyin' + 'g\x20vec2\x20v_L' + 'ightMapUV;' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Li' + 'ghtmapScal' + 'eOffset;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(CALCULAT' + 'E_SHADOWS)' + '//shader��' + '�Զ���ĺ겻���' + '�ifdef\x20���' + '�ĳ�if\x20defi' + 'ned\x0d\x0a\x09vary' + 'ing\x20vec4\x20v' + '_ShadowCoo' + 'rd;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avoid\x20' + 'main()\x0d\x0a{\x0d' + '\x0a\x09gl_Posit' + 'ion\x20=\x20u_Mv' + 'pMatrix\x20*\x20' + 'a_Position' + ';\x0d\x0a\x20\x20\x0d\x0a\x09v_' + 'Texcoord0\x20' + '=\x20a_Texcoo' + 'rd0;\x0d\x0a\x20\x20\x0d\x0a' + '\x09#ifdef\x20LI' + 'GHTMAP\x0d\x0a\x09\x09' + 'v_LightMap' + 'UV\x20=\x20vec2(' + 'a_Texcoord' + '0.x,\x201.0\x20-' + '\x20a_Texcoor' + 'd0.y)\x20*\x20u_' + 'LightmapSc' + 'aleOffset.' + 'xy\x20+\x20u_Lig' + 'htmapScale' + 'Offset.zw;' + '\x0d\x0a\x09\x09v_Ligh' + 'tMapUV.y\x20=' + '\x201.0\x20-\x20v_L' + 'ightMapUV.' + 'y;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x20\x20\x0d\x0a\x09#i' + ('f\x20defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT)\x0d\x0a\x09\x09' + 'v_Normal\x20=' + '\x20a_Normal;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09#if\x20de' + 'fined(DIRE' + 'CTIONLIGHT' + ')||defined' + '(POINTLIGH' + 'T)||define' + 'd(SPOTLIGH' + 'T)||define' + 'd(FOG)||(d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)&&def' + 'ined(SHADO' + 'WMAP_PSSM1' + '))\x0d\x0a\x09\x09v_Po' + 'sitionWorl' + 'd=(u_World' + 'Mat*a_Posi' + 'tion).xyz;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09#if\x20de' + 'fined(CALC' + 'ULATE_SHAD' + 'OWS)//shad' + 'er���Զ���ĺ' + '겻����ifdef' + '\x20����ĳ�if\x20' + 'defined\x0d\x0a\x09' + '\x09v_ShadowC' + 'oord\x20=\x20get' + 'ShadowCoor' + 'd(vec4(v_P' + 'ositionWor' + 'ld));\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09gl_' + 'Position=r' + 'emapGLPosi' + 'tionZ(gl_P' + 'osition);\x0d' + '\x0a}'), _0x51f42f = 'struct\x20Lay' + 'aGIInput\x0d\x0a' + '{\x0d\x0a\x09vec2\x20l' + 'ightmapUV;' + '\x0d\x0a\x09vec3\x20wo' + 'rldPos;\x0d\x0a}' + ';\x0d\x0a\x0d\x0a#defi' + 'ne\x20LAYA_SP' + 'ECCUBE_LOD' + '_STEPS\x206.0' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20vec3\x20u_A' + 'mbientColo' + 'r;\x0d\x0a\x0d\x0a#if\x20' + 'defined(GI' + '_AMBIENT_S' + 'H)\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHA' + 'r;\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHA' + 'g;\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHA' + 'b;\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHB' + 'r;\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHB' + 'g;\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHB' + 'b;\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'AmbientSHC' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0auniform' + '\x20samplerCu' + 'be\x20u_Refle' + 'ctTexture;' + '\x0d\x0auniform\x20' + 'vec4\x20u_Ref' + 'lectCubeHD' + 'RParams;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'PECCUBE_BO' + 'X_PROJECTI' + 'ON\x0d\x0a\x09unifo' + 'rm\x20vec3\x20u_' + 'SpecCubePr' + 'obePositio' + 'n;\x0d\x0a\x09unifo' + 'rm\x20vec3\x20u_' + 'SpecCubeBo' + 'xMax;\x0d\x0a\x09un' + 'iform\x20vec3' + '\x20u_SpecCub' + 'eBoxMin;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '\x0d\x0a#ifdef\x20G' + 'I_AMBIENT_' + 'SH\x0d\x0a\x09mediu' + 'mp\x20vec3\x20sh' + 'EvalLinear' + 'L0L1(mediu' + 'mp\x20vec4\x20no' + 'rmal)\x0d\x0a\x09{\x0d' + '\x0a\x09\x09mediump' + '\x20vec3\x20x;\x0d\x0a' + '\x09\x09//\x20Linea' + 'r\x20(L1)\x20+\x20c' + 'onstant\x20(L' + '0)\x20polynom' + 'ial\x20terms\x0d' + '\x0a\x09\x09x.r\x20=\x20d' + 'ot(u_Ambie' + 'ntSHAr,\x20no' + 'rmal);\x0d\x0a\x09\x09' + 'x.g\x20=\x20dot(' + 'u_AmbientS' + 'HAg,\x20norma' + 'l);\x0d\x0a\x09\x09x.b' + '\x20=\x20dot(u_A' + 'mbientSHAb' + ',\x20normal);' + '\x0d\x0a\x09\x09return' + '\x20x;\x0d\x0a\x09}\x0d\x0a\x0d' + '\x0a\x09mediump\x20' + 'vec3\x20shEva' + 'lLinearL2(' + 'mediump\x20ve' + 'c4\x20normal)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20x1,x2;\x0d\x0a\x09' + '\x09//\x204\x20of\x20t' + 'he\x20quadrat' + 'ic\x20(L2)\x20po' + ('lynomials\x0d' + '\x0a\x09\x09mediump' + '\x20vec4\x20vB\x20=' + '\x20normal.xy' + 'zz\x20*\x20norma' + 'l.yzzx;\x0d\x0a\x09' + '\x09x1.r\x20=\x20do' + 't(u_Ambien' + 'tSHBr,\x20vB)' + ';\x0d\x0a\x09\x09x1.g\x20' + '=\x20dot(u_Am' + 'bientSHBg,' + '\x20vB);\x0d\x0a\x09\x09x' + '1.b\x20=\x20dot(' + 'u_AmbientS' + 'HBb,\x20vB);\x0d' + '\x0a\x0d\x0a\x09\x09//\x20Fi' + 'nal\x20(5th)\x20' + 'quadratic\x20' + '(L2)\x20polyn' + 'omial\x0d\x0a\x09\x09m' + 'ediump\x20flo' + 'at\x20vC\x20=\x20no' + 'rmal.x*nor' + 'mal.x\x20-\x20no' + 'rmal.y*nor' + 'mal.y;\x0d\x0a\x09\x09' + 'x2\x20=\x20u_Amb' + 'ientSHC.rg' + 'b\x20*\x20vC;\x0d\x0a\x0d' + '\x0a\x09\x09return\x20' + 'x1\x20+\x20x2;\x0d\x0a' + '\x09}\x0d\x0a\x09\x0d\x0a\x09me' + 'diump\x20vec3' + '\x20shadeSHPe' + 'rPixel(med' + 'iump\x20vec3\x20' + 'normal)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09mediu' + 'mp\x20vec3\x20am' + 'bientContr' + 'ib;\x0d\x0a\x09\x09med' + 'iump\x20vec4\x20' + 'normalV4=v' + 'ec4(-norma' + 'l.x,normal' + '.yz,\x201.0);' + '//Note:SH\x20' + 'Data\x20is\x20le' + 'ft-hand,so' + '\x20x\x20need\x20in' + 'verse\x0d\x0a\x09\x09a' + 'mbientCont' + 'rib\x20=\x20shEv' + 'alLinearL0' + 'L1(normalV' + '4);\x0d\x0a\x09\x09amb' + 'ientContri' + 'b\x20+=\x20shEva' + 'lLinearL2(' + 'normalV4);' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20amb' + 'ient\x20=\x20max' + '(vec3(0.0)' + ',\x20ambientC' + 'ontrib);\x0d\x0a' + '\x09\x09ambient\x20' + '=\x20layaLine' + 'arToGammaS' + 'pace(ambie' + 'nt);\x0d\x0a\x09\x09re' + 'turn\x20ambie' + 'nt;\x0d\x0a\x09}\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0a\x20medium' + 'p\x20vec3\x20Box' + 'ProjectedC' + 'ubemapDire' + 'ction(medi' + 'ump\x20vec3\x20w' + 'orldRefl,m' + 'ediump\x20vec' + '3\x20worldPos' + ',mediump\x20v' + 'ec3\x20cubema' + 'pCenter,me' + 'diump\x20vec3' + '\x20boxMin,me' + 'diump\x20vec3' + '\x20boxMax){\x0d' + '\x0a\x09\x20mediump' + '\x20vec3\x20nrdi' + 'r\x20=\x20normal' + 'ize(worldR' + 'efl);\x0d\x0a\x09\x20m' + 'ediump\x20vec' + '3\x20rbmax\x20=\x20' + '(boxMax\x20-\x20' + 'worldPos);') + ('\x0d\x0a\x09\x20medium' + 'p\x20vec3\x20rbm' + 'in\x20=\x20(boxM' + 'in\x20-\x20world' + 'Pos);\x0d\x0a\x09\x20m' + 'ediump\x20vec' + '3\x20select\x20=' + '\x20step(vec3' + '(0.0),\x20wor' + 'ldRefl);\x0d\x0a' + '\x09\x20mediump\x20' + 'vec3\x20rbmin' + 'max\x20=\x20mix(' + 'rbmin,\x20rbm' + 'ax,\x20select' + ');\x0d\x0a\x09rbmin' + 'max\x20=\x20rbmi' + 'nmax\x20/\x20nrd' + 'ir;\x0d\x0a\x09medi' + 'ump\x20float\x20' + 'scalar\x20=\x20m' + 'in(min(rbm' + 'inmax.x,\x20r' + 'bminmax.y)' + ',\x20rbminmax' + '.z);\x0d\x0a\x09\x20me' + 'diump\x20vec3' + '\x20worldChan' + 'geRefl\x20=\x20n' + 'rdir\x20*\x20sca' + 'lar\x20+\x20(wor' + 'ldPos\x20-\x20cu' + 'bemapCente' + 'r);\x0d\x0a\x09retu' + 'rn\x20worldCh' + 'angeRefl;\x0d' + '\x0a}\x0d\x0a\x0d\x0a\x0d\x0ame' + 'diump\x20vec3' + '\x20layaDecod' + 'eDirection' + 'alLightmap' + '\x20(mediump\x20' + 'vec3\x20color' + ',\x20lowp\x20vec' + '4\x20dirTex,\x20' + 'mediump\x20ve' + 'c3\x20normalW' + 'orld)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20//\x20In\x20' + 'directiona' + 'l\x20(non-spe' + 'cular)\x20mod' + 'e\x20Enlighte' + 'n\x20bakes\x20do' + 'minant\x20lig' + 'ht\x20directi' + 'on\x0d\x0a\x20\x20\x20\x20//' + '\x20in\x20a\x20way,' + '\x20that\x20usin' + 'g\x20it\x20for\x20h' + 'alf\x20Lamber' + 't\x20and\x20then' + '\x20dividing\x20' + 'by\x20a\x20\x22reba' + 'lancing\x20co' + 'efficient\x22' + '\x0d\x0a\x20\x20\x20\x20//\x20g' + 'ives\x20a\x20res' + 'ult\x20close\x20' + 'to\x20plain\x20d' + 'iffuse\x20res' + 'ponse\x20ligh' + 'tmaps,\x20but' + '\x20normalmap' + 'ped.\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20//\x20Note\x20' + 'that\x20dir\x20i' + 's\x20not\x20unit' + '\x20length\x20on' + '\x20purpose.\x20' + 'Its\x20length' + '\x20is\x20\x22direc' + 'tionality\x22' + ',\x20like\x0d\x0a\x20\x20' + '\x20\x20//\x20for\x20t' + 'he\x20directi' + 'onal\x20specu' + 'lar\x20lightm' + 'aps.\x0d\x0a\x09low' + 'p\x20vec3\x20dir' + 'ectional=d' + 'irTex.xyz\x20' + '-\x200.5;\x0d\x0a\x09d' + 'irectional' + '.x=-direct' + 'ional.x;//' + 'NOTE:becau' + 'se\x20coord\x20S' + 'ystem\x0d\x0a\x20\x20\x20' + '\x20mediump\x20f') + ('loat\x20halfL' + 'ambert\x20=\x20d' + 'ot(normalW' + 'orld,direc' + 'tional)\x20+\x20' + '0.5;\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20return\x20c' + 'olor\x20*\x20hal' + 'fLambert\x20/' + '\x20max(1e-4,' + '\x20dirTex.w)' + ';\x0d\x0a}\x0d\x0a\x0d\x0ave' + 'c3\x20layaGIB' + 'ase(LayaGI' + 'Input\x20giIn' + 'put,medium' + 'p\x20float\x20oc' + 'clusion,\x20m' + 'ediump\x20vec' + '3\x20normalWo' + 'rld)\x0d\x0a{\x0d\x0a\x09' + 'vec3\x20indir' + 'ectDiffuse' + ';\x0d\x0a\x09#ifdef' + '\x20LIGHTMAP\x09' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20bak' + 'edColor\x20=d' + 'ecodeHDR(t' + 'exture2D(u' + '_LightMap,' + '\x20giInput.l' + 'ightmapUV)' + ',5.0);\x0d\x0a\x09\x09' + '#ifdef\x20LIG' + 'HTMAP_DIRE' + 'CTIONAL\x0d\x0a\x09' + '\x09\x09lowp\x20vec' + '4\x20bakedDir' + 'Tex\x20=\x20text' + 'ure2D\x20(u_L' + 'ightMapDir' + 'ection,\x20gi' + 'Input.ligh' + 'tmapUV);\x0d\x0a' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20indirect' + 'Diffuse\x20=\x20' + 'layaDecode' + 'Directiona' + 'lLightmap\x20' + '(bakedColo' + 'r,\x20bakedDi' + 'rTex,\x20norm' + 'alWorld);\x0d' + '\x0a\x09\x09#else\x20/' + '/unDirecti' + 'onal\x20light' + 'map\x0d\x0a\x09\x09\x09in' + 'directDiff' + 'use\x20=\x20bake' + 'dColor;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09#' + 'ifdef\x20GI_A' + 'MBIENT_SH\x0d' + '\x0a\x09\x09\x09indire' + 'ctDiffuse\x20' + '=\x20shadeSHP' + 'erPixel(no' + 'rmalWorld)' + ';\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09indir' + 'ectDiffuse' + '\x20=\x20u_Ambie' + 'ntColor;\x20/' + '/already\x20i' + 'n\x20gamma\x20sp' + 'ace\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09ind' + 'irectDiffu' + 'se*=occlus' + 'ion;\x0d\x0a\x09ret' + 'urn\x20indire' + 'ctDiffuse;' + '\x0d\x0a}\x0d\x0a\x0d\x0amed' + 'iump\x20vec3\x20' + 'layaGlossy' + 'Environmen' + 't(mediump\x20' + 'vec4\x20gloss' + 'In)\x0d\x0a{\x0d\x0a\x09m' + 'ediump\x20flo' + 'at\x20percept' + 'ualRoughne' + 'ss\x20=\x20gloss' + 'In.a;\x0d\x0a\x0d\x0a\x09' + '//\x20use\x20app' + 'roximation') + ('\x20to\x20solve,' + 'below\x20is\x20m' + 'ore\x20reason' + 'able,but\x20m' + 'aybe\x20slow.' + '\x20\x0d\x0a\x09//\x20flo' + 'at\x20m\x20=\x20per' + 'ceptualRou' + 'ghnessToRo' + 'ughness(pe' + 'rceptualRo' + 'ughness);\x20' + '//\x20m\x20is\x20th' + 'e\x20real\x20rou' + 'ghness\x20par' + 'ameter\x0d\x0a\x20\x20' + '\x20\x20//\x20const' + '\x20float\x20fEp' + 's\x20=\x201.1920' + '92896e-07F' + ';\x20\x20\x20\x20\x20\x20\x20\x20/' + '/\x20smallest' + '\x20such\x20that' + '\x201.0+FLT_E' + 'PSILON\x20!=\x20' + '1.0\x20\x20(+1e-' + '4h\x20is\x20NOT\x20' + 'good\x20here.' + '\x20is\x20visibl' + 'y\x20very\x20wro' + 'ng)\x0d\x0a\x20\x20\x20\x20/' + '/\x20float\x20n\x20' + '=\x20\x20(2.0/ma' + 'x(fEps,\x20m*' + 'm))-2.0;\x20\x20' + '\x20\x20\x20\x20\x20\x20//\x20r' + 'emap\x20to\x20sp' + 'ec\x20power.\x20' + 'See\x20eq.\x2021' + '\x20in\x20-->\x20ht' + 'tps://dl.d' + 'ropboxuser' + 'content.co' + 'm/u/558919' + '20/papers/' + 'mm_brdf.pd' + 'f\x0d\x0a\x20\x20\x20\x20//\x20' + 'n\x20/=\x204;\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20//\x20rem' + 'ap\x20from\x20n_' + 'dot_h\x20form' + 'ulatino\x20to' + '\x20n_dot_r.\x20' + 'See\x20sectio' + 'n\x20\x22Pre-con' + 'volved\x20Cub' + 'e\x20Maps\x20vs\x20' + 'Path\x20Trace' + 'rs\x22\x20-->\x20ht' + 'tps://s3.a' + 'mazonaws.c' + 'om/docs.kn' + 'aldtech.co' + 'm/knald/1.' + '0.0/lys_po' + 'wer_drops.' + 'html\x0d\x0a\x20\x20\x20\x20' + '//\x20percept' + 'ualRoughne' + 'ss\x20=\x20pow(\x20' + '2/(n+2),\x200' + '.25);\x20\x20//\x20' + 'remap\x20back' + '\x20to\x20square' + '\x20root\x20of\x20r' + 'eal\x20roughn' + 'ess\x20(0.25\x20' + 'include\x20bo' + 'th\x20the\x20sqr' + 't\x20root\x20of\x20' + 'the\x20conver' + 'sion\x20and\x20s' + 'qrt\x20for\x20go' + 'ing\x20from\x20r' + 'oughness\x20t' + 'o\x20perceptu' + 'alRoughnes' + 's)\x0d\x0a\x09perce' + 'ptualRough' + 'ness\x20=\x20per' + 'ceptualRou' + 'ghness\x20*\x20(' + '1.7\x20-\x200.7*' + 'perceptual' + 'Roughness)' + ';//just\x20a\x20' + 'approximat') + ('ion,but\x20fa' + 'st.\x0d\x0a\x20\x0d\x0a\x09m' + 'ediump\x20flo' + 'at\x20mip\x20=\x20p' + 'erceptualR' + 'oughness\x20*' + '\x20LAYA_SPEC' + 'CUBE_LOD_S' + 'TEPS;\x0d\x0a\x09me' + 'diump\x20vec3' + '\x20uvw\x20=\x20glo' + 'ssIn.rgb;\x0d' + '\x0a\x09uvw.x=-u' + 'vw.x;//Not' + 'e:reflectC' + 'ube\x20is\x20lef' + 't-hand,so\x20' + 'x\x20need\x20inv' + 'erse\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'rgbm=textu' + 'reCubeLodE' + 'XT(u_Refle' + 'ctTexture,' + 'uvw,mip);\x0d' + '\x0a\x09return\x20d' + 'ecodeHDR(r' + 'gbm,u_Refl' + 'ectCubeHDR' + 'Params.x);' + '\x0d\x0a}\x0d\x0a\x0d\x0amed' + 'iump\x20vec3\x20' + 'layaGIIndi' + 'rectSpecul' + 'ar(LayaGII' + 'nput\x20giInp' + 'ut,mediump' + '\x20float\x20occ' + 'lusion,\x20ve' + 'c4\x20glossIn' + ')\x0d\x0a{\x0d\x0a\x09#if' + 'def\x20SPECCU' + 'BE_BOX_PRO' + 'JECTION\x0d\x0a\x09' + '\x09vec3\x20orig' + 'inalReflUV' + 'W\x20=\x20glossI' + 'n.xyz;\x0d\x0a\x09\x09' + 'glossIn.xy' + 'z\x20=BoxProj' + 'ectedCubem' + 'apDirectio' + 'n(original' + 'ReflUVW,gi' + 'Input.worl' + 'dPos,u_Spe' + 'cCubeProbe' + 'Position,u' + '_SpecCubeB' + 'oxMin,u_Sp' + 'ecCubeBoxM' + 'ax);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09medi' + 'ump\x20vec3\x20s' + 'pecular\x20=\x20' + 'layaGlossy' + 'Environmen' + 't(glossIn)' + ';\x0d\x0a\x09return' + '\x20specular\x20' + '*\x20occlusio' + 'n;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d' + '\x0aLayaGI\x20la' + 'yaGlobalIl' + 'lumination' + '(LayaGIInp' + 'ut\x20giInput' + ',mediump\x20f' + 'loat\x20occlu' + 'sion,\x20medi' + 'ump\x20vec3\x20n' + 'ormalWorld' + ',mediump\x20v' + 'ec4\x20uvwRou' + 'ghness)\x0d\x0a{' + '\x0d\x0a\x09LayaGI\x20' + 'gi;\x0d\x0a\x09gi.d' + 'iffuse\x20=\x20l' + 'ayaGIBase(' + 'giInput,oc' + 'clusion,\x20n' + 'ormalWorld' + ');\x0d\x0a\x09gi.sp' + 'ecular\x20=\x20l' + 'ayaGIIndir' + 'ectSpecula' + 'r(giInput,' + 'occlusion,' + '\x20uvwRoughn' + 'ess);\x0d\x0a\x09re') + ('turn\x20gi;\x0d\x0a' + '}\x0d\x0a\x0d\x0a\x0d\x0a'), _0x220716 = '#ifdef\x20GRA' + 'PHICS_API_' + 'GLES3\x0d\x0a\x09#d' + 'efine\x20INVE' + 'RSE_MAT(ma' + 't)\x20inverse' + '(mat)\x0d\x0a#el' + 'se\x0d\x0a\x09#defi' + 'ne\x20INVERSE' + '_MAT(mat)\x20' + 'inverseMat' + '(mat)\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0astr' + 'uct\x20Direct' + 'ionLight\x20{' + '\x0d\x0a\x09vec3\x20co' + 'lor;\x0d\x0a\x09vec' + '3\x20directio' + 'n;\x0d\x0a};\x0d\x0a\x0d\x0a' + 'struct\x20Poi' + 'ntLight\x20{\x0d' + '\x0a\x09vec3\x20col' + 'or;\x0d\x0a\x09vec3' + '\x20position;' + '\x0d\x0a\x09float\x20r' + 'ange;\x0d\x0a};\x0d' + '\x0a\x0d\x0astruct\x20' + 'SpotLight\x20' + '{\x0d\x0a\x09vec3\x20c' + 'olor;\x0d\x0a\x09ve' + 'c3\x20positio' + 'n;\x0d\x0a\x09float' + '\x20range;\x0d\x0a\x09' + 'vec3\x20direc' + 'tion;\x0d\x0a\x09fl' + 'oat\x20spot;\x0d' + '\x0a};\x0d\x0a\x0d\x0astr' + 'uct\x20LayaGI' + '{\x0d\x0a\x09vec3\x20d' + 'iffuse;\x0d\x0a\x09' + 'vec3\x20specu' + 'lar;\x0d\x0a};\x0d\x0a' + '\x0d\x0astruct\x20L' + 'ayaLight{\x0d' + '\x0a\x09vec3\x20col' + 'or;\x0d\x0a\x09vec3' + '\x20dir;\x0d\x0a};\x0d' + '\x0a\x0d\x0aconst\x20i' + 'nt\x20c_Clust' + 'erBufferWi' + 'dth\x20=\x20CLUS' + 'TER_X_COUN' + 'T*CLUSTER_' + 'Y_COUNT;\x0d\x0a' + 'const\x20int\x20' + 'c_ClusterB' + 'ufferHeigh' + 't\x20=\x20CLUSTE' + 'R_Z_COUNT*' + '(1+int(cei' + 'l(float(MA' + 'X_LIGHT_CO' + 'UNT_PER_CL' + 'USTER)/4.0' + ')));\x0d\x0acons' + 't\x20int\x20c_Cl' + 'usterBuffe' + 'rFloatWidt' + 'h\x20=\x20c_Clus' + 'terBufferW' + 'idth*4;\x0d\x0a\x0d' + '\x0a#ifndef\x20G' + 'RAPHICS_AP' + 'I_GLES3\x0d\x0a\x09' + 'mat3\x20inver' + 'seMat(mat3' + '\x20m)\x20{\x0d\x0a\x09\x09f' + 'loat\x20a00\x20=' + '\x20m[0][0],\x20' + 'a01\x20=\x20m[0]' + '[1],\x20a02\x20=' + '\x20m[0][2];\x0d' + '\x0a\x09\x09float\x20a' + '10\x20=\x20m[1][' + '0],\x20a11\x20=\x20' + 'm[1][1],\x20a' + '12\x20=\x20m[1][' + '2];\x0d\x0a\x09\x09flo' + 'at\x20a20\x20=\x20m' + '[2][0],\x20a2' + '1\x20=\x20m[2][1' + '],\x20a22\x20=\x20m' + '[2][2];\x0d\x0a\x0d' + '\x0a\x09\x09float\x20b' + '01\x20=\x20a22\x20*' + '\x20a11\x20-\x20a12' + '\x20*\x20a21;\x0d\x0a\x09' + '\x09float\x20b11' + '\x20=\x20-a22\x20*\x20' + 'a10\x20+\x20a12\x20' + ('*\x20a20;\x0d\x0a\x09\x09' + 'float\x20b21\x20' + '=\x20a21\x20*\x20a1' + '0\x20-\x20a11\x20*\x20' + 'a20;\x0d\x0a\x0d\x0a\x09\x09' + 'float\x20det\x20' + '=\x20a00\x20*\x20b0' + '1\x20+\x20a01\x20*\x20' + 'b11\x20+\x20a02\x20' + '*\x20b21;\x0d\x0a\x0d\x0a' + '\x09\x09return\x20m' + 'at3(b01,\x20(' + '-a22\x20*\x20a01' + '\x20+\x20a02\x20*\x20a' + '21),\x20(a12\x20' + '*\x20a01\x20-\x20a0' + '2\x20*\x20a11),\x0d' + '\x0a\x09\x09\x09\x09\x09b11,' + '\x20(a22\x20*\x20a0' + '0\x20-\x20a02\x20*\x20' + 'a20),\x20(-a1' + '2\x20*\x20a00\x20+\x20' + 'a02\x20*\x20a10)' + ',\x0d\x0a\x09\x09\x09\x09\x09b2' + '1,\x20(-a21\x20*' + '\x20a00\x20+\x20a01' + '\x20*\x20a20),\x20(' + 'a11\x20*\x20a00\x20' + '-\x20a01\x20*\x20a1' + '0))\x20/\x20det;' + '\x0d\x0a\x09}\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aivec' + '4\x20getClust' + 'erInfo(sam' + 'pler2D\x20clu' + 'sterBuffer' + ',mat4\x20view' + 'Matrix,vec' + '4\x20viewport' + ',vec3\x20posi' + 'tion,vec4\x20' + 'fragCoord,' + 'vec4\x20proje' + 'ctParams)\x0d' + '\x0a{\x0d\x0a\x09vec3\x20' + 'viewPos\x20=\x20' + 'vec3(viewM' + 'atrix*vec4' + '(position,' + '\x201.0));\x20//' + 'position\x20i' + 'n\x20viewspac' + 'e\x0d\x0a\x0d\x0a\x09int\x20' + 'clusterXIn' + 'dex\x20=\x20int(' + 'floor(frag' + 'Coord.x/\x20(' + 'float(view' + 'port.z)/fl' + 'oat(CLUSTE' + 'R_X_COUNT)' + ')));\x0d\x0a\x20\x20\x20\x20' + 'int\x20cluste' + 'rYIndex\x20=\x20' + 'int(floor(' + '(viewport.' + 'w\x20*\x20(proje' + 'ctParams.z' + '\x20<0.0?\x200.0' + '\x20:\x201.0)\x20-\x20' + 'fragCoord.' + 'y\x20*\x20projec' + 'tParams.z)' + '/\x20(float(v' + 'iewport.w)' + '/float(CLU' + 'STER_Y_COU' + 'NT))));//M' + 'aybe\x20Flipp' + 'ed\x20Project' + 'Matrix\x0d\x0a\x09f' + 'loat\x20zSlic' + 'eParam\x20=fl' + 'oat(CLUSTE' + 'R_Z_COUNT)' + '/log2(proj' + 'ectParams.' + 'y\x20/\x20projec' + 'tParams.x)' + ';\x0d\x0a\x20\x09int\x20c' + 'lusterZInd' + 'ex\x20=\x20int(f' + 'loor(log2(' + '-viewPos.z' + ')\x20*\x20zSlice' + 'Param-\x20log' + '2(projectP' + 'arams.x)\x20*' + '\x20zSlicePar' + 'am));//pro') + ('jectParams' + '\x20x:cameraN' + 'ear\x20y:came' + 'raFar\x0d\x0a\x0d\x0a\x09' + 'vec2\x20uv=\x20v' + 'ec2((float' + '(clusterXI' + 'ndex\x20+\x20clu' + 'sterYIndex' + '\x20*\x20CLUSTER' + '_X_COUNT)+' + '0.5)/float' + '(c_Cluster' + 'BufferWidt' + 'h),\x0d\x0a\x09\x09\x09\x09(' + 'float(clus' + 'terZIndex)' + '+0.5)/floa' + 't(c_Cluste' + 'rBufferHei' + 'ght));\x0d\x0a\x09v' + 'ec4\x20cluste' + 'rPixel=tex' + 'ture2D(clu' + 'sterBuffer' + ',\x20uv);\x0d\x0a\x09r' + 'eturn\x20ivec' + '4(clusterP' + 'ixel);//X:' + 'Point\x20Coun' + 't\x20Y:Spot\x20C' + 'ount\x20Z、W:L' + 'ight\x20Offse' + 't\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a' + 'int\x20getLig' + 'htIndex(sa' + 'mpler2D\x20cl' + 'usterBuffe' + 'r,int\x20offs' + 'et,int\x20ind' + 'ex)\x20\x0d\x0a{\x0d\x0a\x09' + 'int\x20totalO' + 'ffset=offs' + 'et+index;\x0d' + '\x0a\x09int\x20row=' + 'totalOffse' + 't/c_Cluste' + 'rBufferFlo' + 'atWidth;\x0d\x0a' + '\x09int\x20lastR' + 'owFloat=to' + 'talOffset-' + 'row*c_Clus' + 'terBufferF' + 'loatWidth;' + '\x0d\x0a\x09int\x20col' + '=lastRowFl' + 'oat/4;\x0d\x0a\x09v' + 'ec2\x20uv=vec' + '2((float(c' + 'ol)+0.5)/f' + 'loat(c_Clu' + 'sterBuffer' + 'Width),\x0d\x0a\x09' + '\x09\x09\x09(float(' + 'row)+0.5)/' + 'float(c_Cl' + 'usterBuffe' + 'rHeight));' + '\x0d\x0a\x09vec4\x20te' + 'xel\x20=\x20text' + 'ure2D(clus' + 'terBuffer,' + '\x20uv);\x0d\x0a\x20\x20\x20' + '\x20int\x20pixel' + 'Component\x20' + '=\x20lastRowF' + 'loat-col*4' + ';\x0d\x0a\x20\x20\x20\x20if\x20' + '(pixelComp' + 'onent\x20==\x200' + ')\x20\x0d\x0a\x20\x20\x20\x20\x20\x20' + 'return\x20int' + '(texel.x);' + '\x0d\x0a\x20\x20\x20\x20else' + '\x20if\x20(pixel' + 'Component\x20' + '==\x201)\x20\x0d\x0a\x20\x20' + '\x20\x20\x20\x20return' + '\x20int(texel' + '.y);\x0d\x0a\x20\x20\x20\x20' + 'else\x20if\x20(p' + 'ixelCompon' + 'ent\x20==\x202)\x20' + '\x0d\x0a\x20\x20\x20\x20\x20\x20re' + 'turn\x20int(t' + 'exel.z);\x0d\x0a' + '\x20\x20\x20\x20else\x20/' + '/pixelComp' + 'onent==3\x0d\x0a') + ('\x20\x20\x20\x20\x20\x20retu' + 'rn\x20int(tex' + 'el.w);\x0d\x0a}\x0d' + '\x0a\x0d\x0aDirecti' + 'onLight\x20ge' + 'tDirection' + 'Light(samp' + 'ler2D\x20ligh' + 'tBuffer,in' + 't\x20index)\x20\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20Di' + 'rectionLig' + 'ht\x20light;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20v\x20=\x20(floa' + 't(index)+0' + '.5)/\x20float' + '(MAX_LIGHT' + '_COUNT);\x0d\x0a' + '\x20\x20\x20\x20vec4\x20p' + '1\x20=\x20textur' + 'e2D(lightB' + 'uffer,\x20vec' + '2(0.125,v)' + ');\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20p2\x20=\x20te' + 'xture2D(li' + 'ghtBuffer,' + '\x20vec2(0.37' + '5,v));\x0d\x0a\x09l' + 'ight.color' + '=p1.rgb;\x0d\x0a' + '\x20\x20\x20\x20light.' + 'direction\x20' + '=\x20p2.rgb;\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20light;\x0d\x0a' + '}\x0d\x0a\x0d\x0aPoint' + 'Light\x20getP' + 'ointLight(' + 'sampler2D\x20' + 'lightBuffe' + 'r,sampler2' + 'D\x20clusterB' + 'uffer,ivec' + '4\x20clusterI' + 'nfo,int\x20in' + 'dex)\x20\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20PointL' + 'ight\x20light' + ';\x0d\x0a\x09int\x20po' + 'intIndex=g' + 'etLightInd' + 'ex(cluster' + 'Buffer,clu' + 'sterInfo.z' + '*c_Cluster' + 'BufferFloa' + 'tWidth+clu' + 'sterInfo.w' + ',index);\x0d\x0a' + '\x20\x20\x20\x20float\x20' + 'v\x20=\x20(float' + '(pointInde' + 'x)+0.5)/\x20f' + 'loat(MAX_L' + 'IGHT_COUNT' + ');\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20p1\x20=\x20te' + 'xture2D(li' + 'ghtBuffer,' + '\x20vec2(0.12' + '5,v));\x0d\x0a\x20\x20' + '\x20\x20vec4\x20p2\x20' + '=\x20texture2' + 'D(lightBuf' + 'fer,\x20vec2(' + '0.375,v));' + '\x0d\x0a\x09light.c' + 'olor=p1.rg' + 'b;\x0d\x0a\x09light' + '.range\x20=\x20p' + '1.a;\x0d\x0a\x20\x20\x20\x20' + 'light.posi' + 'tion\x20=\x20p2.' + 'rgb;\x0d\x0a\x20\x20\x20\x20' + 'return\x20lig' + 'ht;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'SpotLight\x20' + 'getSpotLig' + 'ht(sampler' + '2D\x20lightBu' + 'ffer,sampl' + 'er2D\x20clust' + 'erBuffer,i' + 'vec4\x20clust' + 'erInfo,int' + '\x20index)\x20\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20Spo' + 'tLight\x20lig') + ('ht;\x0d\x0a\x09int\x20' + 'spoIndex=g' + 'etLightInd' + 'ex(cluster' + 'Buffer,clu' + 'sterInfo.z' + '*c_Cluster' + 'BufferFloa' + 'tWidth+clu' + 'sterInfo.w' + ',clusterIn' + 'fo.x+index' + ');\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20v\x20=\x20(f' + 'loat(spoIn' + 'dex)+0.5)/' + '\x20float(MAX' + '_LIGHT_COU' + 'NT);\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20p1\x20=\x20' + 'texture2D(' + 'lightBuffe' + 'r,\x20vec2(0.' + '125,v));\x0d\x0a' + '\x20\x20\x20\x20vec4\x20p' + '2\x20=\x20textur' + 'e2D(lightB' + 'uffer,\x20vec' + '2(0.375,v)' + ');\x0d\x0a\x09vec4\x20' + 'p3\x20=\x20textu' + 're2D(light' + 'Buffer,\x20ve' + 'c2(0.625,v' + '));\x0d\x0a\x20\x20\x20\x20l' + 'ight.color' + '\x20=\x20p1.rgb;' + '\x0d\x0a\x09light.r' + 'ange=p1.a;' + '\x0d\x0a\x20\x20\x20\x20ligh' + 't.position' + '\x20=\x20p2.rgb;' + '\x0d\x0a\x09light.s' + 'pot\x20=\x20p2.a' + ';\x0d\x0a\x09light.' + 'direction\x20' + '=\x20p3.rgb;\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20light;\x0d\x0a' + '}\x0d\x0a\x0d\x0a//\x20La' + 'ya中使用衰减纹理\x0d' + '\x0afloat\x20Lay' + 'aAttenuati' + 'on(in\x20vec3' + '\x20L,in\x20floa' + 't\x20invLight' + 'Radius)\x20{\x0d' + '\x0a\x09float\x20fR' + 'atio\x20=\x20cla' + 'mp(length(' + 'L)\x20*\x20invLi' + 'ghtRadius,' + '0.0,1.0);\x0d' + '\x0a\x09fRatio\x20*' + '=\x20fRatio;\x0d' + '\x0a\x09return\x201' + '.0\x20/\x20(1.0\x20' + '+\x2025.0\x20*\x20f' + 'Ratio)*\x20cl' + 'amp(4.0*(1' + '.0\x20-\x20fRati' + 'o),0.0,1.0' + ');\x20//fade\x20' + 'to\x20black\x20a' + 's\x20if\x204\x20pix' + 'el\x20texture' + '\x0d\x0a}\x0d\x0a\x0d\x0a//\x20' + 'Same\x20as\x20Ju' + 'st\x20Cause\x202' + '\x20and\x20Crysi' + 's\x202\x20(you\x20c' + 'an\x20read\x20GP' + 'U\x20Pro\x201\x20bo' + 'ok\x20for\x20mor' + 'e\x20informat' + 'ion)\x0d\x0afloa' + 't\x20BasicAtt' + 'enuation(i' + 'n\x20vec3\x20L,i' + 'n\x20float\x20in' + 'vLightRadi' + 'us)\x20{\x0d\x0a\x09ve' + 'c3\x20distanc' + 'e\x20=\x20L\x20*\x20in' + 'vLightRadi' + 'us;\x0d\x0a\x09floa' + 't\x20attenuat' + 'ion\x20=\x20clam' + 'p(1.0\x20-\x20do' + 't(distance') + (',\x20distance' + '),0.0,1.0)' + ';\x20//\x20Equal' + 's\x20float\x20at' + 'tenuation\x20' + '=\x20saturate' + '(1.0f\x20-\x20do' + 't(L,\x20L)\x20/\x20' + '(lightRadi' + 'us\x20*\x20\x20ligh' + 'tRadius));' + '\x0d\x0a\x09return\x20' + 'attenuatio' + 'n\x20*\x20attenu' + 'ation;\x0d\x0a}\x0d' + '\x0a\x0d\x0a//\x20Insp' + 'ired\x20on\x20ht' + 'tp://fools' + '.slindev.c' + 'om/viewtop' + 'ic.php?f=1' + '1&t=21&vie' + 'w=unread#u' + 'nread\x0d\x0aflo' + 'at\x20Natural' + 'Attenuatio' + 'n(in\x20vec3\x20' + 'L,in\x20float' + '\x20invLightR' + 'adius)\x20{\x0d\x0a' + '\x09float\x20att' + 'enuationFa' + 'ctor\x20=\x2030.' + '0;\x0d\x0a\x09vec3\x20' + 'distance\x20=' + '\x20L\x20*\x20invLi' + 'ghtRadius;' + '\x0d\x0a\x09float\x20a' + 'ttenuation' + '\x20=\x20dot(dis' + 'tance,\x20dis' + 'tance);\x20//' + '\x20Equals\x20fl' + 'oat\x20attenu' + 'ation\x20=\x20do' + 't(L,\x20L)\x20/\x20' + '(lightRadi' + 'us\x20*\x20\x20ligh' + 'tRadius);\x0d' + '\x0a\x09attenuat' + 'ion\x20=\x201.0\x20' + '/\x20(attenua' + 'tion\x20*\x20att' + 'enuationFa' + 'ctor\x20+\x201.0' + ');\x0d\x0a\x09//\x20Se' + 'cond\x20we\x20mo' + 've\x20down\x20th' + 'e\x20function' + '\x20therewith' + '\x20it\x20reache' + 's\x20zero\x20at\x20' + 'abscissa\x201' + ':\x0d\x0a\x09attenu' + 'ationFacto' + 'r\x20=\x201.0\x20/\x20' + '(attenuati' + 'onFactor\x20+' + '\x201.0);\x20//a' + 'ttenuation' + 'Factor\x20con' + 'tains\x20now\x20' + 'the\x20value\x20' + 'we\x20have\x20to' + '\x20subtract\x0d' + '\x0a\x09attenuat' + 'ion\x20=\x20max(' + 'attenuatio' + 'n\x20-\x20attenu' + 'ationFacto' + 'r,\x200.0);\x20/' + '/\x20The\x20max\x20' + 'fixes\x20a\x20bu' + 'g.\x0d\x0a\x09//\x20Fi' + 'nally\x20we\x20e' + 'xpand\x20the\x20' + 'equation\x20a' + 'long\x20the\x20y' + '-axis\x20so\x20t' + 'hat\x20it\x20sta' + 'rts\x20with\x20a' + '\x20function\x20' + 'value\x20of\x201' + '\x20again.\x0d\x0a\x09' + 'attenuatio' + 'n\x20/=\x201.0\x20-' + '\x20attenuati' + 'onFactor;\x0d' + '\x0a\x09return\x20a' + 'ttenuation') + (';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20LayaAir' + 'BlinnPhong' + 'Light\x20(in\x20' + 'vec3\x20specC' + 'olor,in\x20fl' + 'oat\x20specCo' + 'lorIntensi' + 'ty,in\x20vec3' + '\x20normal,in' + '\x20vec3\x20glos' + 's,\x20in\x20vec3' + '\x20viewDir,i' + 'n\x20vec3\x20lig' + 'htColor,\x20i' + 'n\x20vec3\x20lig' + 'htVec,out\x20' + 'vec3\x20diffu' + 'seColor,ou' + 't\x20vec3\x20spe' + 'cularColor' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec3\x20h' + '\x20=\x20normali' + 'ze(viewDir' + '-lightVec)' + ';\x0d\x0a\x09lowp\x20f' + 'loat\x20ln\x20=\x20' + 'max\x20(0.0,\x20' + 'dot\x20(-ligh' + 'tVec,norma' + 'l));\x0d\x0a\x09flo' + 'at\x20nh\x20=\x20ma' + 'x\x20(0.0,\x20do' + 't\x20(h,norma' + 'l));\x0d\x0a\x09dif' + 'fuseColor=' + 'lightColor' + '\x20*\x20ln;\x0d\x0a\x09s' + 'pecularCol' + 'or=lightCo' + 'lor\x20*specC' + 'olor*pow\x20(' + 'nh,\x20specCo' + 'lorIntensi' + 'ty*128.0)\x20' + '*\x20gloss;\x0d\x0a' + '}\x0d\x0a\x0d\x0avoid\x20' + 'LayaAirBli' + 'nnPhongDie' + 'ctionLight' + '\x20(in\x20vec3\x20' + 'specColor,' + 'in\x20float\x20s' + 'pecColorIn' + 'tensity,in' + '\x20vec3\x20norm' + 'al,in\x20vec3' + '\x20gloss,\x20in' + '\x20vec3\x20view' + 'Dir,\x20in\x20Di' + 'rectionLig' + 'ht\x20light,o' + 'ut\x20vec3\x20di' + 'ffuseColor' + ',out\x20vec3\x20' + 'specularCo' + 'lor)\x20{\x0d\x0a\x09v' + 'ec3\x20lightV' + 'ec=normali' + 'ze(light.d' + 'irection);' + '\x0d\x0a\x09LayaAir' + 'BlinnPhong' + 'Light(spec' + 'Color,spec' + 'ColorInten' + 'sity,norma' + 'l,gloss,vi' + 'ewDir,ligh' + 't.color,li' + 'ghtVec,dif' + 'fuseColor,' + 'specularCo' + 'lor);\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20Lay' + 'aAirBlinnP' + 'hongPointL' + 'ight\x20(in\x20v' + 'ec3\x20pos,in' + '\x20vec3\x20spec' + 'Color,in\x20f' + 'loat\x20specC' + 'olorIntens' + 'ity,in\x20vec' + '3\x20normal,i' + 'n\x20vec3\x20glo' + 'ss,\x20in\x20vec' + '3\x20viewDir,' + '\x20in\x20PointL') + ('ight\x20light' + ',out\x20vec3\x20' + 'diffuseCol' + 'or,out\x20vec' + '3\x20specular' + 'Color)\x20{\x0d\x0a' + '\x09vec3\x20ligh' + 'tVec\x20=\x20\x20po' + 's-light.po' + 'sition;\x0d\x0a\x09' + 'LayaAirBli' + 'nnPhongLig' + 'ht(specCol' + 'or,specCol' + 'orIntensit' + 'y,normal,g' + 'loss,viewD' + 'ir,light.c' + 'olor,light' + 'Vec/length' + '(lightVec)' + ',diffuseCo' + 'lor,specul' + 'arColor);\x0d' + '\x0a\x09float\x20at' + 'tenuate\x20=\x20' + 'LayaAttenu' + 'ation(ligh' + 'tVec,\x201.0/' + 'light.rang' + 'e);\x0d\x0a\x09diff' + 'useColor\x20*' + '=\x20attenuat' + 'e;\x0d\x0a\x09specu' + 'larColor*=' + '\x20attenuate' + ';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20LayaAir' + 'BlinnPhong' + 'SpotLight\x20' + '(in\x20vec3\x20p' + 'os,in\x20vec3' + '\x20specColor' + ',in\x20float\x20' + 'specColorI' + 'ntensity,i' + 'n\x20vec3\x20nor' + 'mal,in\x20vec' + '3\x20gloss,\x20i' + 'n\x20vec3\x20vie' + 'wDir,\x20in\x20S' + 'potLight\x20l' + 'ight,out\x20v' + 'ec3\x20diffus' + 'eColor,out' + '\x20vec3\x20spec' + 'ularColor)' + '\x20{\x0d\x0a\x09vec3\x20' + 'lightVec\x20=' + '\x20\x20pos-ligh' + 't.position' + ';\x0d\x0a\x09vec3\x20n' + 'ormalLight' + 'Vec=lightV' + 'ec/length(' + 'lightVec);' + '\x0d\x0a\x09LayaAir' + 'BlinnPhong' + 'Light(spec' + 'Color,spec' + 'ColorInten' + 'sity,norma' + 'l,gloss,vi' + 'ewDir,ligh' + 't.color,no' + 'rmalLightV' + 'ec,diffuse' + 'Color,spec' + 'ularColor)' + ';\x0d\x0a\x09vec2\x20c' + 'osAngles=c' + 'os(vec2(li' + 'ght.spot,l' + 'ight.spot*' + '0.5)*0.5);' + '//ConeAtte' + 'nuation\x0d\x0a\x09' + 'float\x20dl=d' + 'ot(normali' + 'ze(light.d' + 'irection),' + 'normalLigh' + 'tVec);\x0d\x0a\x09d' + 'l*=smooths' + 'tep(cosAng' + 'les[0],cos' + 'Angles[1],' + 'dl);\x0d\x0a\x09flo' + 'at\x20attenua' + 'te\x20=\x20LayaA') + ('ttenuation' + '(lightVec,' + '\x201.0/light' + '.range)*dl' + ';\x0d\x0a\x09diffus' + 'eColor\x20*=a' + 'ttenuate;\x0d' + '\x0a\x09specular' + 'Color\x20*=at' + 'tenuate;\x0d\x0a' + '}\x0d\x0a\x0d\x0avec3\x20' + 'NormalSamp' + 'leToWorldS' + 'pace(vec3\x20' + 'normalMapS' + 'ample,\x20vec' + '3\x20unitNorm' + 'al,\x20vec3\x20t' + 'angent,vec' + '3\x20binormal' + ')\x20{\x0d\x0a\x09vec3' + '\x20normalT\x20=' + 'vec3(2.0*n' + 'ormalMapSa' + 'mple.x\x20-\x201' + '.0,1.0-2.0' + '*normalMap' + 'Sample.y,2' + '.0*normalM' + 'apSample.z' + '\x20-\x201.0);\x0d\x0a' + '\x09mediump\x20v' + 'ec3\x20N\x20=\x20un' + 'itNormal;\x0d' + '\x0a\x09mediump\x20' + 'vec3\x20T\x20=\x20t' + 'angent;\x0d\x0a\x09' + 'mediump\x20ve' + 'c3\x20B\x20=\x20bin' + 'ormal;\x0d\x0a\x09m' + 'at3\x20TBN\x20=\x20' + 'mat3(T,\x20B,' + '\x20N);\x0d\x0a\x0d\x0a\x09/' + '/\x20Transfor' + 'm\x20from\x20tan' + 'gent\x20space' + '\x20to\x20world\x20' + 'space.\x0d\x0a\x09v' + 'ec3\x20bumped' + 'Normal\x20=no' + 'rmalize(TB' + 'N*normalT)' + ';\x0d\x0a\x09return' + '\x20bumpedNor' + 'mal;\x0d\x0a}\x0d\x0a\x0d' + '\x0avec3\x20Norm' + 'alSampleTo' + 'WorldSpace' + '1(vec4\x20nor' + 'malMapSamp' + 'le,\x20vec3\x20t' + 'angent,\x20ve' + 'c3\x20binorma' + 'l,\x20vec3\x20un' + 'itNormal)\x20' + '{\x0d\x0a\x09vec3\x20n' + 'ormalT;\x0d\x0a\x09' + 'normalT.x\x20' + '=\x202.0\x20*\x20no' + 'rmalMapSam' + 'ple.x\x20-\x201.' + '0;\x0d\x0a\x09norma' + 'lT.y\x20=\x201.0' + '\x20-\x202.0\x20*\x20n' + 'ormalMapSa' + 'mple.y;\x0d\x0a\x09' + 'normalT.z\x20' + '=\x20sqrt(1.0' + '\x20-\x20clamp(d' + 'ot(normalT' + '.xy,\x20norma' + 'lT.xy),\x200.' + '0,\x201.0));\x0d' + '\x0a\x0d\x0a\x09vec3\x20T' + '\x20=\x20normali' + 'ze(tangent' + ');\x0d\x0a\x09vec3\x20' + 'B\x20=\x20normal' + 'ize(binorm' + 'al);\x0d\x0a\x09vec' + '3\x20N\x20=\x20norm' + 'alize(unit' + 'Normal);\x0d\x0a' + '\x09mat3\x20TBN\x20' + '=\x20mat3(T,\x20' + 'B,\x20N);\x0d\x0a\x0d\x0a' + '\x09//\x20Transf' + 'orm\x20from\x20t' + 'angent\x20spa' + 'ce\x20to\x20worl') + ('d\x20space.\x0d\x0a' + '\x09vec3\x20bump' + 'edNormal\x20=' + '\x20TBN\x20*\x20nor' + 'malize(nor' + 'malT);\x0d\x0a\x0d\x0a' + '\x09return\x20bu' + 'mpedNormal' + ';\x0d\x0a}\x0d\x0a\x0d\x0ave' + 'c3\x20DecodeL' + 'ightmap(ve' + 'c4\x20color)\x20' + '{\x0d\x0a\x09return' + '\x20color.rgb' + '*color.a*5' + '.0;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec3\x20decod' + 'eHDR(vec4\x20' + 'color,floa' + 't\x20range)\x20{' + '\x0d\x0a\x09return\x20' + 'color.rgb*' + 'color.a*ra' + 'nge;\x0d\x0a}\x0d\x0a\x0d' + '\x0avec2\x20Tran' + 'sformUV(ve' + 'c2\x20texcoor' + 'd,vec4\x20til' + 'ingOffset)' + '\x20{\x0d\x0a\x09vec2\x20' + 'transTexco' + 'ord=vec2(t' + 'excoord.x,' + 'texcoord.y' + '-1.0)*tili' + 'ngOffset.x' + 'y+vec2(til' + 'ingOffset.' + 'z,-tilingO' + 'ffset.w);\x0d' + '\x0a\x09transTex' + 'coord.y+=1' + '.0;\x0d\x0a\x09retu' + 'rn\x20transTe' + 'xcoord;\x0d\x0a}' + '\x0d\x0a\x0d\x0avec4\x20r' + 'emapGLPosi' + 'tionZ(vec4' + '\x20position)' + '\x20{\x0d\x0a\x09posit' + 'ion.z=posi' + 'tion.z\x20*\x202' + '.0\x20-\x20posit' + 'ion.w;\x0d\x0a\x09r' + 'eturn\x20posi' + 'tion;\x0d\x0a}\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec3\x20layaL' + 'inearToGam' + 'maSpace\x20(m' + 'ediump\x20vec' + '3\x20linRGB)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20li' + 'nRGB\x20=\x20max' + '(linRGB,\x20v' + 'ec3(0.0));' + '\x0d\x0a\x20\x20\x20\x20//\x20A' + 'n\x20almost-p' + 'erfect\x20app' + 'roximation' + '\x20from\x20http' + '://chillia' + 'nt.blogspo' + 't.com.au/2' + '012/08/srg' + 'b-approxim' + 'ations-for' + '-hlsl.html' + '?m=1\x0d\x0a\x20\x20\x20\x20' + 'return\x20max' + '(1.055\x20*\x20p' + 'ow(linRGB,' + 'vec3(0.416' + '666667))\x20-' + '\x200.055,\x200.' + '0);\x20\x20\x20\x0d\x0a}\x0d' + '\x0a\x0d\x0aLayaLig' + 'ht\x20layaDir' + 'ectionLigh' + 'tToLight(i' + 'n\x20Directio' + 'nLight\x20lig' + 'ht,in\x20floa' + 't\x20attenuat' + 'e)\x0d\x0a{\x0d\x0a\x09La' + 'yaLight\x20re' + 'light;\x0d\x0a\x09r' + 'elight.col' + 'or\x20=\x20light' + '.color*att') + ('enuate;\x0d\x0a\x09' + 'relight.di' + 'r\x20=\x20light.' + 'direction;' + '\x0d\x0a\x09return\x20' + 'relight;\x0d\x0a' + '}\x0d\x0a\x0d\x0aLayaL' + 'ight\x20layaP' + 'ointLightT' + 'oLight(in\x20' + 'vec3\x20pos,i' + 'n\x20vec3\x20nor' + 'mal,\x20in\x20Po' + 'intLight\x20l' + 'ight,in\x20fl' + 'oat\x20attenu' + 'ate)\x0d\x0a{\x0d\x0a\x09' + 'LayaLight\x20' + 'relight;\x0d\x0a' + '\x09vec3\x20ligh' + 'tVec\x20=\x20\x20po' + 's-light.po' + 'sition;\x0d\x0a\x09' + 'attenuate\x20' + '*=\x20LayaAtt' + 'enuation(l' + 'ightVec,\x201' + '.0/light.r' + 'ange);\x0d\x0a\x09r' + 'elight.col' + 'or\x20=\x20light' + '.color*att' + 'enuate;\x0d\x0a\x09' + 'relight.di' + 'r\x20=\x20normal' + 'ize(lightV' + 'ec);\x0d\x0a\x09ret' + 'urn\x20religh' + 't;\x0d\x0a}\x0d\x0a\x0d\x0aL' + 'ayaLight\x20l' + 'ayaSpotLig' + 'htToLight(' + 'in\x20vec3\x20po' + 's,in\x20vec3\x20' + 'normal,\x20in' + '\x20SpotLight' + '\x20light,in\x20' + 'float\x20atte' + 'nuate)\x0d\x0a{\x0d' + '\x0a\x09LayaLigh' + 't\x20relight;' + '\x0d\x0a\x09vec3\x20li' + 'ghtVec\x20=\x20\x20' + 'pos-light.' + 'position;\x0d' + '\x0a\x09vec3\x20nor' + 'malLightVe' + 'c=lightVec' + '/length(li' + 'ghtVec);\x0d\x0a' + '\x09vec2\x20cosA' + 'ngles=cos(' + 'vec2(light' + '.spot,ligh' + 't.spot*0.5' + ')*0.5);//C' + 'oneAttenua' + 'tion\x0d\x0a\x09flo' + 'at\x20dl=dot(' + 'normalize(' + 'light.dire' + 'ction),nor' + 'malLightVe' + 'c);\x0d\x0a\x09dl*=' + 'smoothstep' + '(cosAngles' + '[0],cosAng' + 'les[1],dl)' + ';\x0d\x0a\x09attenu' + 'ate\x20*=\x20Lay' + 'aAttenuati' + 'on(lightVe' + 'c,\x201.0/lig' + 'ht.range)*' + 'dl;\x0d\x0a\x09reli' + 'ght.dir\x20=\x20' + 'normalLigh' + 'tVec;\x0d\x0a\x09re' + 'light.colo' + 'r\x20=\x20light.' + 'color*atte' + 'nuate;\x0d\x0a\x09r' + 'eturn\x20reli' + 'ght;\x0d\x0a}\x0d\x0a\x0d' + '\x0a\x0d\x0a\x0d\x0a\x0d\x0a'), _0x3c5667 = '//\x20-------' + '----------' + '----------' + '----------' + '----------' + '----------' + '---------\x0d' + '\x0a//\x20\x20PCF\x20F' + 'iltering\x20T' + 'ent\x20Functi' + 'ons\x0d\x0a//\x20--' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----\x0d\x0a\x0d\x0a//' + '\x20Assuming\x20' + 'a\x20isoceles' + '\x20right\x20ang' + 'led\x20triang' + 'le\x20of\x20heig' + 'ht\x20\x22triang' + 'leHeight\x22\x20' + '(as\x20drawn\x20' + 'below).\x0d\x0a/' + '/\x20This\x20fun' + 'ction\x20retu' + 'rn\x20the\x20are' + 'a\x20of\x20the\x20t' + 'riangle\x20ab' + 'ove\x20the\x20fi' + 'rst\x20texel(' + 'in\x20Y\x20the\x20f' + 'irst\x20texel' + ').\x0d\x0a//\x0d\x0a//' + '\x20|\x5c\x20\x20\x20\x20\x20\x20<' + '--\x2045\x20degr' + 'ee\x20slop\x20is' + 'osceles\x20ri' + 'ght\x20angled' + '\x20triangle\x0d' + '\x0a//\x20|\x20\x5c\x0d\x0a/' + '/\x20----\x20\x20\x20\x20' + '<--\x20length' + '\x20of\x20this\x20s' + 'ide\x20is\x20\x22tr' + 'iangleHeig' + 'ht\x22\x0d\x0a//\x20_\x20' + '_\x20_\x20_\x20<--\x20' + 'texels\x0d\x0afl' + 'oat\x20sample' + 'ShadowGetI' + 'RTriangleT' + 'exelArea(f' + 'loat\x20trian' + 'gleHeight)' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20tria' + 'ngleHeight' + '\x20-\x200.5;\x0d\x0a}' + '\x0d\x0a\x0d\x0a//\x20Ass' + 'uming\x20a\x20is' + 'oceles\x20tri' + 'angle\x20of\x201' + '.5\x20texels\x20' + 'height\x20and' + '\x203\x20texels\x20' + 'wide\x20lying' + '\x20on\x204\x20texe' + 'ls.\x0d\x0a//\x20Th' + 'is\x20functio' + 'n\x20return\x20t' + 'he\x20area\x20of' + '\x20the\x20trian' + 'gle\x20above\x20' + 'each\x20of\x20th' + 'ose\x20texels' + '.\x0d\x0a//\x20\x20\x20\x20|' + '\x20\x20\x20\x20<--\x20of' + 'fset\x20from\x20' + '-0.5\x20to\x200.' + '5,\x200\x20meani' + 'ng\x20triangl' + 'e\x20is\x20exact' + 'ly\x20in\x20the\x20' + 'center\x0d\x0a//' + '\x20\x20\x20/\x20\x5c\x20\x20\x20<' + '--\x2045\x20degr' + 'ee\x20slop\x20is' + 'osceles\x20tr' + 'iangle\x20(ie' + '\x20tent\x20proj' + 'ected\x20in\x202' + 'D)\x0d\x0a//\x20\x20/\x20' + '\x20\x20\x5c\x0d\x0a//\x20_\x20' + '_\x20_\x20_\x20<--\x20' + 'texels\x0d\x0a//' + '\x20X\x20Y\x20Z\x20W\x20<' + ('--\x20result\x20' + 'indices\x20(i' + 'n\x20computed' + 'Area.xyzw\x20' + 'and\x20comput' + 'edAreaUncu' + 't.xyzw)\x0d\x0a/' + '/\x20Top\x20poin' + 't\x20at\x20(righ' + 't,top)\x20in\x20' + 'a\x20texel,le' + 'ft\x20bottom\x20' + 'point\x20at\x20(' + 'middle,mid' + 'dle)\x20in\x20a\x20' + 'texel,righ' + 't\x20bottom\x20p' + 'oint\x20at\x20(m' + 'iddle,midd' + 'le)\x20in\x20a\x20t' + 'exel.\x0d\x0avoi' + 'd\x20sampleSh' + 'adowGetTex' + 'elAreasTen' + 't3x3(float' + '\x20offset,\x20o' + 'ut\x20vec4\x20co' + 'mputedArea' + ',\x20out\x20vec4' + '\x20computedA' + 'reaUncut)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20//' + '\x20Compute\x20t' + 'he\x20exterio' + 'r\x20areas,a\x20' + 'and\x20h\x20is\x20s' + 'ame.\x0d\x0a\x20\x20\x20\x20' + 'float\x20a\x20=\x20' + 'offset\x20+\x200' + '.5;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20offse' + 'tSquaredHa' + 'lved\x20=\x20a\x20*' + '\x20a\x20*\x200.5;\x0d' + '\x0a\x20\x20\x20\x20compu' + 'tedAreaUnc' + 'ut.x\x20=\x20com' + 'putedArea.' + 'x\x20=\x20offset' + 'SquaredHal' + 'ved\x20-\x20offs' + 'et;\x0d\x0a\x20\x20\x20\x20c' + 'omputedAre' + 'aUncut.w\x20=' + '\x20computedA' + 'rea.w\x20=\x20of' + 'fsetSquare' + 'dHalved;\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20//\x20C' + 'ompute\x20the' + '\x20middle\x20ar' + 'eas\x0d\x0a\x20\x20\x20\x20/' + '/\x20For\x20Y\x20:\x20' + 'We\x20find\x20th' + 'e\x20area\x20in\x20' + 'Y\x20of\x20as\x20if' + '\x20the\x20left\x20' + 'section\x20of' + '\x20the\x20isoce' + 'les\x20triang' + 'le\x20would\x0d\x0a' + '\x20\x20\x20\x20//\x20int' + 'ersect\x20the' + '\x20axis\x20betw' + 'een\x20Y\x20and\x20' + 'Z\x20(ie\x20wher' + 'e\x20offset\x20=' + '\x200).\x0d\x0a\x20\x20\x20\x20' + 'computedAr' + 'eaUncut.y\x20' + '=\x20sampleSh' + 'adowGetIRT' + 'riangleTex' + 'elArea(1.5' + '\x20-\x20offset)' + ';\x0d\x0a\x20\x20\x20\x20//\x20' + 'This\x20area\x20' + 'is\x20superio' + 'r\x20to\x20the\x20o' + 'ne\x20we\x20are\x20' + 'looking\x20fo' + 'r\x20if\x20(offs' + 'et\x20<\x200)\x20th' + 'us\x20we\x20need' + '\x20to\x0d\x0a\x20\x20\x20\x20/' + '/\x20subtract' + '\x20the\x20area\x20' + 'of\x20the\x20tri' + 'angle\x20defi' + 'ned\x20by\x20(0,') + ('1.5-offset' + '),\x20(0,1.5+' + 'offset),\x20(' + '-offset,1.' + '5).\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20clamp' + 'edOffsetLe' + 'ft\x20=\x20min(o' + 'ffset,0.0)' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20areaOfS' + 'mallLeftTr' + 'iangle\x20=\x20c' + 'lampedOffs' + 'etLeft\x20*\x20c' + 'lampedOffs' + 'etLeft;\x0d\x0a\x20' + '\x20\x20\x20compute' + 'dArea.y\x20=\x20' + 'computedAr' + 'eaUncut.y\x20' + '-\x20areaOfSm' + 'allLeftTri' + 'angle;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20//\x20We\x20' + 'do\x20the\x20sam' + 'e\x20for\x20the\x20' + 'Z\x20but\x20with' + '\x20the\x20right' + '\x20part\x20of\x20t' + 'he\x20isocele' + 's\x20triangle' + '\x0d\x0a\x20\x20\x20\x20comp' + 'utedAreaUn' + 'cut.z\x20=\x20sa' + 'mpleShadow' + 'GetIRTrian' + 'gleTexelAr' + 'ea(1.5\x20+\x20o' + 'ffset);\x0d\x0a\x20' + '\x20\x20\x20float\x20c' + 'lampedOffs' + 'etRight\x20=\x20' + 'max(offset' + ',0.0);\x0d\x0a\x20\x20' + '\x20\x20float\x20ar' + 'eaOfSmallR' + 'ightTriang' + 'le\x20=\x20clamp' + 'edOffsetRi' + 'ght\x20*\x20clam' + 'pedOffsetR' + 'ight;\x0d\x0a\x20\x20\x20' + '\x20computedA' + 'rea.z\x20=\x20co' + 'mputedArea' + 'Uncut.z\x20-\x20' + 'areaOfSmal' + 'lRightTria' + 'ngle;\x0d\x0a}\x0d\x0a' + '\x0d\x0a//\x20Assum' + 'ing\x20a\x20isoc' + 'eles\x20trian' + 'gle\x20of\x202.5' + '\x20texel\x20hei' + 'ght\x20and\x205\x20' + 'texels\x20wid' + 'e\x20lying\x20on' + '\x206\x20texels.' + '\x0d\x0a//\x20This\x20' + 'function\x20r' + 'eturn\x20the\x20' + 'weight\x20of\x20' + 'each\x20texel' + 's\x20area\x20rel' + 'ative\x20to\x20t' + 'he\x20full\x20tr' + 'iangle\x20are' + 'a.\x0d\x0a//\x20\x20/\x20' + '\x20\x20\x20\x20\x20\x20\x5c\x0d\x0a/' + '/\x20_\x20_\x20_\x20_\x20' + '_\x20_\x20<--\x20te' + 'xels\x0d\x0a//\x200' + '\x201\x202\x203\x204\x205' + '\x20<--\x20compu' + 'ted\x20area\x20i' + 'ndices\x20(in' + '\x20texelsWei' + 'ghts[])\x0d\x0a/' + '/\x20Top\x20poin' + 't\x20at\x20(righ' + 't,top)\x20in\x20' + 'a\x20texel,le' + 'ft\x20bottom\x20' + 'point\x20at\x20(' + 'middle,mid' + 'dle)\x20in\x20a\x20' + 'texel,righ' + 't\x20bottom\x20p' + 'oint\x20at\x20(m') + ('iddle,midd' + 'le)\x20in\x20a\x20t' + 'exel.\x0d\x0avoi' + 'd\x20sampleSh' + 'adowGetTex' + 'elWeightsT' + 'ent5x5(flo' + 'at\x20offset,' + '\x20out\x20vec3\x20' + 'texelsWeig' + 'htsA,\x20out\x20' + 'vec3\x20texel' + 'sWeightsB)' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20v' + 'ec4\x20areaFr' + 'om3texelTr' + 'iangle;\x0d\x0a\x20' + '\x20\x20\x20vec4\x20ar' + 'eaUncutFro' + 'm3texelTri' + 'angle;\x0d\x0a\x20\x20' + '\x20\x20sampleSh' + 'adowGetTex' + 'elAreasTen' + 't3x3(offse' + 't,\x20areaFro' + 'm3texelTri' + 'angle,\x20are' + 'aUncutFrom' + '3texelTria' + 'ngle);\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20//\x20Tri' + 'angle\x20slop' + 'e\x20is\x2045\x20de' + 'gree\x20thus\x20' + 'we\x20can\x20alm' + 'ost\x20reuse\x20' + 'the\x20result' + '\x20of\x20the\x203\x20' + 'texel\x20wide' + '\x20computati' + 'on.\x0d\x0a\x20\x20\x20\x20/' + '/\x20the\x205\x20te' + 'xel\x20wide\x20t' + 'riangle\x20ca' + 'n\x20be\x20seen\x20' + 'as\x20the\x203\x20t' + 'exel\x20wide\x20' + 'one\x20but\x20sh' + 'ifted\x20up\x20b' + 'y\x20one\x20unit' + '/texel.\x0d\x0a\x20' + '\x20\x20\x20//\x200.16' + '\x20is\x201/(the' + '\x20triangle\x20' + 'area)\x0d\x0a\x20\x20\x20' + '\x20texelsWei' + 'ghtsA.x\x20=\x20' + '0.16\x20*\x20(ar' + 'eaFrom3tex' + 'elTriangle' + '.x);\x0d\x0a\x20\x20\x20\x20' + 'texelsWeig' + 'htsA.y\x20=\x200' + '.16\x20*\x20(are' + 'aUncutFrom' + '3texelTria' + 'ngle.y);\x0d\x0a' + '\x20\x20\x20\x20texels' + 'WeightsA.z' + '\x20=\x200.16\x20*\x20' + '(areaFrom3' + 'texelTrian' + 'gle.y\x20+\x201.' + '0);\x0d\x0a\x20\x20\x20\x20t' + 'exelsWeigh' + 'tsB.x\x20=\x200.' + '16\x20*\x20(area' + 'From3texel' + 'Triangle.z' + '\x20+\x201.0);\x0d\x0a' + '\x20\x20\x20\x20texels' + 'WeightsB.y' + '\x20=\x200.16\x20*\x20' + '(areaUncut' + 'From3texel' + 'Triangle.z' + ');\x0d\x0a\x20\x20\x20\x20te' + 'xelsWeight' + 'sB.z\x20=\x200.1' + '6\x20*\x20(areaF' + 'rom3texelT' + 'riangle.w)' + ';\x0d\x0a}\x0d\x0a\x0d\x0a//' + '\x205x5\x20Tent\x20' + 'filter\x20(45' + '\x20degree\x20sl' + 'oped\x20trian' + 'gles\x20in\x20U\x20' + 'and\x20V)\x0d\x0avo') + ('id\x20sampleS' + 'hadowCompu' + 'teSamplesT' + 'ent5x5(vec' + '4\x20shadowMa' + 'pTextureTe' + 'xelSize,\x20v' + 'ec2\x20coord,' + '\x20out\x20float' + '\x20fetchesWe' + 'ights[9],\x20' + 'out\x20vec2\x20f' + 'etchesUV[9' + '])\x0d\x0a{\x0d\x0a\x20\x20\x20' + '\x20//\x20tent\x20b' + 'ase\x20is\x205x5' + '\x20base\x20thus' + '\x20covering\x20' + 'from\x2025\x20to' + '\x2036\x20texels' + ',\x20thus\x20we\x20' + 'need\x209\x20bil' + 'inear\x20PCF\x20' + 'fetches\x0d\x0a\x20' + '\x20\x20\x20vec2\x20te' + 'ntCenterIn' + 'TexelSpace' + '\x20=\x20coord.x' + 'y\x20*\x20shadow' + 'MapTexture' + 'TexelSize.' + 'zw;\x0d\x0a\x20\x20\x20\x20v' + 'ec2\x20center' + 'OfFetchesI' + 'nTexelSpac' + 'e\x20=\x20floor(' + 'tentCenter' + 'InTexelSpa' + 'ce\x20+\x200.5);' + '\x0d\x0a\x20\x20\x20\x20vec2' + '\x20offsetFro' + 'mTentCente' + 'rToCenterO' + 'fFetches\x20=' + '\x20tentCente' + 'rInTexelSp' + 'ace\x20-\x20cent' + 'erOfFetche' + 'sInTexelSp' + 'ace;\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20//\x20find\x20' + 'the\x20weight' + '\x20of\x20each\x20t' + 'exel\x20based' + '\x20on\x20the\x20ar' + 'ea\x20of\x20a\x2045' + '\x20degree\x20sl' + 'op\x20tent\x20ab' + 'ove\x20each\x20o' + 'f\x20them.\x0d\x0a\x20' + '\x20\x20\x20vec3\x20te' + 'xelsWeight' + 'sUA,\x20texel' + 'sWeightsUB' + ';\x0d\x0a\x20\x20\x20\x20vec' + '3\x20texelsWe' + 'ightsVA,\x20t' + 'exelsWeigh' + 'tsVB;\x0d\x0a\x20\x20\x20' + '\x20sampleSha' + 'dowGetTexe' + 'lWeightsTe' + 'nt5x5(offs' + 'etFromTent' + 'CenterToCe' + 'nterOfFetc' + 'hes.x,\x20tex' + 'elsWeights' + 'UA,\x20texels' + 'WeightsUB)' + ';\x0d\x0a\x20\x20\x20\x20sam' + 'pleShadowG' + 'etTexelWei' + 'ghtsTent5x' + '5(offsetFr' + 'omTentCent' + 'erToCenter' + 'OfFetches.' + 'y,\x20texelsW' + 'eightsVA,\x20' + 'texelsWeig' + 'htsVB);\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20//\x20ea' + 'ch\x20fetch\x20w' + 'ill\x20cover\x20' + 'a\x20group\x20of' + '\x202x2\x20texel' + 's,\x20the\x20wei' + 'ght\x20of\x20eac' + 'h\x20group\x20is') + ('\x20the\x20sum\x20o' + 'f\x20the\x20weig' + 'hts\x20of\x20the' + '\x20texels\x0d\x0a\x20' + '\x20\x20\x20vec3\x20fe' + 'tchesWeigh' + 'tsU\x20=\x20vec3' + '(texelsWei' + 'ghtsUA.xz,' + '\x20texelsWei' + 'ghtsUB.y)\x20' + '+\x20vec3(tex' + 'elsWeights' + 'UA.y,\x20texe' + 'lsWeightsU' + 'B.xz);\x0d\x0a\x20\x20' + '\x20\x20vec3\x20fet' + 'chesWeight' + 'sV\x20=\x20vec3(' + 'texelsWeig' + 'htsVA.xz,\x20' + 'texelsWeig' + 'htsVB.y)\x20+' + '\x20vec3(texe' + 'lsWeightsV' + 'A.y,\x20texel' + 'sWeightsVB' + '.xz);\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20//\x20move' + '\x20the\x20PCF\x20b' + 'ilinear\x20fe' + 'tches\x20to\x20r' + 'espect\x20tex' + 'els\x20weight' + 's\x0d\x0a\x20\x20\x20\x20vec' + '3\x20fetchesO' + 'ffsetsU\x20=\x20' + 'vec3(texel' + 'sWeightsUA' + '.y,\x20texels' + 'WeightsUB.' + 'xz)\x20/\x20fetc' + 'hesWeights' + 'U.xyz\x20+\x20ve' + 'c3(-2.5,-0' + '.5,1.5);\x0d\x0a' + '\x20\x20\x20\x20vec3\x20f' + 'etchesOffs' + 'etsV\x20=\x20vec' + '3(texelsWe' + 'ightsVA.y,' + '\x20texelsWei' + 'ghtsVB.xz)' + '\x20/\x20fetches' + 'WeightsV.x' + 'yz\x20+\x20vec3(' + '-2.5,-0.5,' + '1.5);\x0d\x0a\x20\x20\x20' + '\x20fetchesOf' + 'fsetsU\x20*=\x20' + 'shadowMapT' + 'extureTexe' + 'lSize.xxx;' + '\x0d\x0a\x20\x20\x20\x20fetc' + 'hesOffsets' + 'V\x20*=\x20shado' + 'wMapTextur' + 'eTexelSize' + '.yyy;\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20vec2\x20bi' + 'linearFetc' + 'hOrigin\x20=\x20' + 'centerOfFe' + 'tchesInTex' + 'elSpace\x20*\x20' + 'shadowMapT' + 'extureTexe' + 'lSize.xy;\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esUV[0]\x20=\x20' + 'bilinearFe' + 'tchOrigin\x20' + '+\x20vec2(fet' + 'chesOffset' + 'sU.x,\x20fetc' + 'hesOffsets' + 'V.x);\x0d\x0a\x20\x20\x20' + '\x20fetchesUV' + '[1]\x20=\x20bili' + 'nearFetchO' + 'rigin\x20+\x20ve' + 'c2(fetches' + 'OffsetsU.y' + ',\x20fetchesO' + 'ffsetsV.x)' + ';\x0d\x0a\x20\x20\x20\x20fet' + 'chesUV[2]\x20' + '=\x20bilinear' + 'FetchOrigi' + 'n\x20+\x20vec2(f') + ('etchesOffs' + 'etsU.z,\x20fe' + 'tchesOffse' + 'tsV.x);\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'UV[3]\x20=\x20bi' + 'linearFetc' + 'hOrigin\x20+\x20' + 'vec2(fetch' + 'esOffsetsU' + '.x,\x20fetche' + 'sOffsetsV.' + 'y);\x0d\x0a\x20\x20\x20\x20f' + 'etchesUV[4' + ']\x20=\x20biline' + 'arFetchOri' + 'gin\x20+\x20vec2' + '(fetchesOf' + 'fsetsU.y,\x20' + 'fetchesOff' + 'setsV.y);\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esUV[5]\x20=\x20' + 'bilinearFe' + 'tchOrigin\x20' + '+\x20vec2(fet' + 'chesOffset' + 'sU.z,\x20fetc' + 'hesOffsets' + 'V.y);\x0d\x0a\x20\x20\x20' + '\x20fetchesUV' + '[6]\x20=\x20bili' + 'nearFetchO' + 'rigin\x20+\x20ve' + 'c2(fetches' + 'OffsetsU.x' + ',\x20fetchesO' + 'ffsetsV.z)' + ';\x0d\x0a\x20\x20\x20\x20fet' + 'chesUV[7]\x20' + '=\x20bilinear' + 'FetchOrigi' + 'n\x20+\x20vec2(f' + 'etchesOffs' + 'etsU.y,\x20fe' + 'tchesOffse' + 'tsV.z);\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'UV[8]\x20=\x20bi' + 'linearFetc' + 'hOrigin\x20+\x20' + 'vec2(fetch' + 'esOffsetsU' + '.z,\x20fetche' + 'sOffsetsV.' + 'z);\x0d\x0a\x0d\x0a\x20\x20\x20' + '\x20fetchesWe' + 'ights[0]\x20=' + '\x20fetchesWe' + 'ightsU.x\x20*' + '\x20fetchesWe' + 'ightsV.x;\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esWeights[' + '1]\x20=\x20fetch' + 'esWeightsU' + '.y\x20*\x20fetch' + 'esWeightsV' + '.x;\x0d\x0a\x20\x20\x20\x20f' + 'etchesWeig' + 'hts[2]\x20=\x20f' + 'etchesWeig' + 'htsU.z\x20*\x20f' + 'etchesWeig' + 'htsV.x;\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'Weights[3]' + '\x20=\x20fetches' + 'WeightsU.x' + '\x20*\x20fetches' + 'WeightsV.y' + ';\x0d\x0a\x20\x20\x20\x20fet' + 'chesWeight' + 's[4]\x20=\x20fet' + 'chesWeight' + 'sU.y\x20*\x20fet' + 'chesWeight' + 'sV.y;\x0d\x0a\x20\x20\x20' + '\x20fetchesWe' + 'ights[5]\x20=' + '\x20fetchesWe' + 'ightsU.z\x20*' + '\x20fetchesWe' + 'ightsV.y;\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esWeights[' + '6]\x20=\x20fetch' + 'esWeightsU' + '.x\x20*\x20fetch' + 'esWeightsV') + ('.z;\x0d\x0a\x20\x20\x20\x20f' + 'etchesWeig' + 'hts[7]\x20=\x20f' + 'etchesWeig' + 'htsU.y\x20*\x20f' + 'etchesWeig' + 'htsV.z;\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'Weights[8]' + '\x20=\x20fetches' + 'WeightsU.z' + '\x20*\x20fetches' + 'WeightsV.z' + ';\x0d\x0a}'), _0x46f902 = '\x0d\x0a\x0d\x0a//Simp' + 'leSkinnedM' + 'esh\x0d\x0a#ifde' + 'f\x20SIMPLEBO' + 'NE\x0d\x0a\x09#ifde' + 'f\x20GPU_INST' + 'ANCE\x0d\x0a\x09\x09at' + 'tribute\x20ve' + 'c4\x20a_Simpl' + 'eTexturePa' + 'rams;\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09uni' + 'form\x20vec4\x20' + 'u_SimpleAn' + 'imatorPara' + 'ms;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09unifo' + 'rm\x20sampler' + '2D\x20u_Simpl' + 'eAnimatorT' + 'exture;\x0d\x0a\x0d' + '\x0a\x09uniform\x20' + 'float\x20u_Si' + 'mpleAnimat' + 'orTextureS' + 'ize;\x20\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a\x0d\x0a#' + 'ifdef\x20SIMP' + 'LEBONE\x0d\x0a\x09m' + 'at4\x20loadMa' + 'tFromTextu' + 're(float\x20F' + 'ramePos,in' + 't\x20boneIndi' + 'ces,float\x20' + 'offset)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09vec2\x20' + 'uv;\x0d\x0a\x09\x09flo' + 'at\x20PixelPo' + 's\x20=\x20FrameP' + 'os+float(b' + 'oneIndices' + ')*4.0;\x0d\x0a\x09\x09' + 'float\x20half' + 'Offset\x20=\x20o' + 'ffset\x20*\x200.' + '5;\x0d\x0a\x09\x09floa' + 't\x20uvoffset' + '\x20=\x20PixelPo' + 's/u_Simple' + 'AnimatorTe' + 'xtureSize;' + '\x0d\x0a\x09\x09uv.y\x20=' + '\x20floor(uvo' + 'ffset)*off' + 'set+halfOf' + 'fset;\x0d\x0a\x09\x09u' + 'v.x\x20=\x20mod(' + 'float(Pixe' + 'lPos),u_Si' + 'mpleAnimat' + 'orTextureS' + 'ize)*offse' + 't+halfOffs' + 'et;\x0d\x0a\x09\x09vec' + '4\x20mat0row\x20' + '=\x20texture2' + 'D(u_Simple' + 'AnimatorTe' + 'xture,uv);' + '\x0d\x0a\x09\x09uv.x+=' + 'offset;\x0d\x0a\x09' + '\x09vec4\x20mat1' + 'row\x20=\x20text' + 'ure2D(u_Si' + 'mpleAnimat' + 'orTexture,' + 'uv);\x0d\x0a\x09\x09uv' + '.x+=offset' + ';\x0d\x0a\x09\x09vec4\x20' + 'mat2row\x20=\x20' + 'texture2D(' + 'u_SimpleAn' + 'imatorText' + 'ure,uv);\x0d\x0a' + '\x09\x09uv.x+=of' + 'fset;\x0d\x0a\x09\x09v' + 'ec4\x20mat3ro' + 'w\x20=\x20textur' + 'e2D(u_Simp' + 'leAnimator' + 'Texture,uv' + ');\x0d\x0a\x09\x09mat4' + '\x20m\x20=mat4(m' + 'at0row.x,m' + 'at0row.y,m' + 'at0row.z,m' + 'at0row.w,\x0d' + '\x0a\x09\x09\x09\x09mat1r' + 'ow.x,mat1r' + ('ow.y,mat1r' + 'ow.z,mat1r' + 'ow.w,\x0d\x0a\x09\x09\x09' + '\x09mat2row.x' + ',mat2row.y' + ',mat2row.z' + ',mat2row.w' + ',\x0d\x0a\x09\x09\x09\x09mat' + '3row.x,mat' + '3row.y,mat' + '3row.z,mat' + '3row.w);\x0d\x0a' + '\x09\x09return\x20m' + ';\x0d\x0a\x09}\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a'), _0x18d78a = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + 'precision\x20' + 'highp\x20floa' + 't;\x0d\x0a#else\x0d' + '\x0aprecision' + '\x20mediump\x20f' + 'loat;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0avar' + 'ying\x20vec4\x20' + 'v_Color;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Color' + ';\x0d\x0a\x0d\x0avoid\x20' + 'main()\x0d\x0a{\x0d' + '\x0a\x20\x20gl_Frag' + 'Color\x20=\x20v_' + 'Color\x20*\x20u_' + 'Color;\x20\x0d\x0a}' + '\x0d\x0a\x0d\x0a', _0x69b2cc = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + 'precision\x20' + 'highp\x20floa' + 't;\x0d\x0a#else\x0d' + '\x0aprecision' + '\x20mediump\x20f' + 'loat;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#in' + 'clude\x20\x22Lig' + 'hting.glsl' + '\x22;\x0d\x0a\x0d\x0aattr' + 'ibute\x20vec4' + '\x20a_Positio' + 'n;\x0d\x0aunifor' + 'm\x20mat4\x20u_M' + 'vpMatrix;\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Colo' + 'r;\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_Color;\x0d\x0av' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20a_Positio' + 'n;\x0d\x0a\x09v_Col' + 'or=a_Color' + '*u_Color;\x0d' + '\x0a\x09gl_Posit' + 'ion=remapG' + 'LPositionZ' + '(gl_Positi' + 'on);\x0d\x0a}', _0x20ea13 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#in' + 'clude\x20\x22Lig' + 'hting.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Shadow' + '.glsl\x22\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Diffu' + 'seColor;\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(COLOR)' + '&&defined(' + 'ENABLEVERT' + 'EXCOLOR)\x0d\x0a' + '\x09varying\x20v' + 'ec4\x20v_Colo' + 'r;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20ALPHATEST' + '\x0d\x0a\x09uniform' + '\x20float\x20u_A' + 'lphaTestVa' + 'lue;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20DIFFUSE' + 'MAP\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Diff' + 'useTexture' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a\x0d\x0a#if\x20d' + 'efined(DIF' + 'FUSEMAP)||' + '((defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT))&&(' + 'defined(SP' + 'ECULARMAP)' + '||defined(' + 'NORMALMAP)' + '))\x0d\x0a\x09varyi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20L' + 'IGHTMAP\x0d\x0a\x09' + 'varying\x20ve' + 'c2\x20v_Light' + 'MapUV;\x0d\x0a\x09u' + 'niform\x20sam' + 'pler2D\x20u_L' + 'ightMap;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Norma' + 'l;\x0d\x0a#if\x20de' + 'fined(DIRE' + 'CTIONLIGHT' + ')||defined' + '(POINTLIGH' + 'T)||define' + 'd(SPOTLIGH' + 'T)\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'ViewDir;\x20\x0d' + '\x0a\x0d\x0a\x09unifor' + 'm\x20vec3\x20u_M' + 'aterialSpe' + 'cular;\x0d\x0a\x09u' + 'niform\x20flo' + 'at\x20u_Shini' + 'ness;\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20LEG' + 'ACYSINGLEL' + 'IGHTING\x0d\x0a\x09' + ('\x09#ifdef\x20DI' + 'RECTIONLIG' + 'HT\x0d\x0a\x09\x09\x09uni' + 'form\x20Direc' + 'tionLight\x20' + 'u_Directio' + 'nLight;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20PO' + 'INTLIGHT\x0d\x0a' + '\x09\x09\x09uniform' + '\x20PointLigh' + 't\x20u_PointL' + 'ight;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x09#' + 'ifdef\x20SPOT' + 'LIGHT\x0d\x0a\x09\x09\x09' + 'uniform\x20Sp' + 'otLight\x20u_' + 'SpotLight;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09uniform\x20' + 'mat4\x20u_Vie' + 'w;\x0d\x0a\x09\x09unif' + 'orm\x20vec4\x20u' + '_Projectio' + 'nParams;\x0d\x0a' + '\x09\x09uniform\x20' + 'vec4\x20u_Vie' + 'wport;\x0d\x0a\x09\x09' + 'uniform\x20in' + 't\x20u_Dirati' + 'onLightCou' + 'nt;\x0d\x0a\x09\x09uni' + 'form\x20sampl' + 'er2D\x20u_Lig' + 'htBuffer;\x0d' + '\x0a\x09\x09uniform' + '\x20sampler2D' + '\x20u_LightCl' + 'usterBuffe' + 'r;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09#ifd' + 'ef\x20SPECULA' + 'RMAP\x20\x0d\x0a\x09\x09u' + 'niform\x20sam' + 'pler2D\x20u_S' + 'pecularTex' + 'ture;\x0d\x0a\x09#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20NORMALM' + 'AP\x20\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Norm' + 'alTexture;' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_Ta' + 'ngent;\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_Binorm' + 'al;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20FOG\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogSta' + 'rt;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_FogRange' + ';\x0d\x0a\x09unifor' + 'm\x20vec3\x20u_F' + 'ogColor;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||(defi' + 'ned(CALCUL' + 'ATE_SHADOW' + 'S)&&define' + 'd(SHADOW_C' + 'ASCADE))||' + 'defined(CA' + 'LCULATE_SP' + 'OTSHADOWS)' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_Po' + 'sitionWorl' + 'd;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a\x0d\x0a#inc' + 'lude\x20\x22Glob' + 'alIllumina' + 'tion.glsl\x22' + ';//\x22Global' + 'Illuminati' + 'on.glsl\x20us' + 'e\x20uniform\x20' + 'should\x20at\x20') + ('front\x20of\x20t' + 'his\x0d\x0a\x0d\x0a#if' + '\x20defined(C' + 'ALCULATE_S' + 'HADOWS)&&!' + 'defined(SH' + 'ADOW_CASCA' + 'DE)\x0d\x0a\x09vary' + 'ing\x20vec4\x20v' + '_ShadowCoo' + 'rd;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(CAL' + 'CULATE_SPO' + 'TSHADOWS)/' + '/shader中自定' + '义的宏不可用ifde' + 'f\x20必须改成if\x20d' + 'efined\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_SpotSh' + 'adowCoord;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec3\x20norm' + 'al;//light' + '\x20and\x20SH\x20ma' + 'ybe\x20use\x20no' + 'rmal\x0d\x0a\x09#if' + '\x20defined(N' + 'ORMALMAP)\x0d' + '\x0a\x09\x09vec3\x20no' + 'rmalMapSam' + 'ple\x20=\x20text' + 'ure2D(u_No' + 'rmalTextur' + 'e,\x20v_Texco' + 'ord0).rgb;' + '\x0d\x0a\x09\x09normal' + '\x20=\x20normali' + 'ze(NormalS' + 'ampleToWor' + 'ldSpace(no' + 'rmalMapSam' + 'ple,\x20v_Nor' + 'mal,\x20v_Tan' + 'gent,v_Bin' + 'ormal));\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'normal\x20=\x20n' + 'ormalize(v' + '_Normal);\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09\x09vec3\x20' + 'viewDir=\x20n' + 'ormalize(v' + '_ViewDir);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09LayaGI' + 'Input\x20giIn' + 'put;\x0d\x0a\x09#if' + 'def\x20LIGHTM' + 'AP\x09\x0d\x0a\x09\x09giI' + 'nput.light' + 'mapUV=v_Li' + 'ghtMapUV;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09vec3\x20glob' + 'alDiffuse=' + 'layaGIBase' + '(giInput,1' + '.0,normal)' + ';\x0d\x0a\x09\x0d\x0a\x09vec' + '4\x20mainColo' + 'r=u_Diffus' + 'eColor;\x0d\x0a\x09' + '#ifdef\x20DIF' + 'FUSEMAP\x0d\x0a\x09' + '\x09vec4\x20difT' + 'exColor=te' + 'xture2D(u_' + 'DiffuseTex' + 'ture,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09\x09mainCol' + 'or=mainCol' + 'or*difTexC' + 'olor;\x0d\x0a\x09#e' + 'ndif\x20\x0d\x0a\x09#i' + 'f\x20defined(' + 'COLOR)&&de' + 'fined(ENAB') + ('LEVERTEXCO' + 'LOR)\x0d\x0a\x09\x09ma' + 'inColor=ma' + 'inColor*v_' + 'Color;\x0d\x0a\x09#' + 'endif\x20\x0d\x0a\x20\x20' + '\x20\x20\x0d\x0a\x09#ifde' + 'f\x20ALPHATES' + 'T\x0d\x0a\x09\x09if(ma' + 'inColor.a<' + 'u_AlphaTes' + 'tValue)\x0d\x0a\x09' + '\x09\x09discard;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x20\x20\x0d\x0a\x09\x0d\x0a\x09v' + 'ec3\x20diffus' + 'e\x20=\x20vec3(0' + '.0);\x0d\x0a\x09vec' + '3\x20specular' + '=\x20vec3(0.0' + ');\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)\x0d\x0a\x09\x09vec' + '3\x20dif,spe;' + '\x0d\x0a\x09\x09#ifdef' + '\x20SPECULARM' + 'AP\x0d\x0a\x09\x09\x09vec' + '3\x20gloss=te' + 'xture2D(u_' + 'SpecularTe' + 'xture,\x20v_T' + 'excoord0).' + 'rgb;\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09#i' + 'fdef\x20DIFFU' + 'SEMAP\x0d\x0a\x09\x09\x09' + '\x09vec3\x20glos' + 's=vec3(dif' + 'TexColor.a' + ');\x0d\x0a\x09\x09\x09#el' + 'se\x0d\x0a\x09\x09\x09\x09ve' + 'c3\x20gloss=v' + 'ec3(1.0);\x0d' + '\x0a\x09\x09\x09#endif' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09\x0d\x0a\x09\x0d\x0a\x09' + '#ifdef\x20LEG' + 'ACYSINGLEL' + 'IGHTING\x0d\x0a\x09' + '\x09#ifdef\x20DI' + 'RECTIONLIG' + 'HT\x0d\x0a\x09\x09\x09Lay' + 'aAirBlinnP' + 'hongDiecti' + 'onLight(u_' + 'MaterialSp' + 'ecular,u_S' + 'hininess,n' + 'ormal,glos' + 's,viewDir,' + 'u_Directio' + 'nLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09#if\x20defin' + 'ed(CALCULA' + 'TE_SHADOWS' + ')//shader中' + '自定义的宏不可用if' + 'def\x20必须改成if' + '\x20defined\x0d\x0a' + '\x09\x09\x09\x09#ifdef' + '\x20SHADOW_CA' + 'SCADE\x0d\x0a\x09\x09\x09' + '\x09\x09vec4\x20sha' + 'dowCoord\x20=' + '\x20getShadow' + 'Coord(vec4' + '(v_Positio' + 'nWorld,1.0' + '));\x0d\x0a\x09\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + '\x09vec4\x20shad' + 'owCoord\x20=\x20' + 'v_ShadowCo' + 'ord;\x0d\x0a\x09\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '\x09\x09float\x20sh' + 'adowAttenu' + 'ation=samp' + 'leShadowma' + 'p(shadowCo' + 'ord);\x0d\x0a\x09\x09\x09' + '\x09dif\x20*=\x20sh' + 'adowAttenu') + ('ation;\x0d\x0a\x09\x09' + '\x09\x09spe\x20*=\x20s' + 'hadowAtten' + 'uation;\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09diffuse' + '+=dif;\x0d\x0a\x09\x09' + '\x09specular+' + '=spe;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09\x09#ifdef\x20P' + 'OINTLIGHT\x0d' + '\x0a\x09\x09\x09LayaAi' + 'rBlinnPhon' + 'gPointLigh' + 't(v_Positi' + 'onWorld,u_' + 'MaterialSp' + 'ecular,u_S' + 'hininess,n' + 'ormal,glos' + 's,viewDir,' + 'u_PointLig' + 'ht,dif,spe' + ');\x0d\x0a\x09\x09\x09dif' + 'fuse+=dif;' + '\x0d\x0a\x09\x09\x09specu' + 'lar+=spe;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x0d\x0a\x09\x09#ifde' + 'f\x20SPOTLIGH' + 'T\x0d\x0a\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongSpotLig' + 'ht(v_Posit' + 'ionWorld,u' + '_MaterialS' + 'pecular,u_' + 'Shininess,' + 'normal,glo' + 'ss,viewDir' + ',u_SpotLig' + 'ht,dif,spe' + ');\x0d\x0a\x09\x09\x09#if' + '\x20defined(C' + 'ALCULATE_S' + 'POTSHADOWS' + ')//shader中' + '自定义的宏不可用if' + 'def\x20必须改成if' + '\x20defined\x0d\x0a' + '\x09\x09\x09\x09vec4\x20s' + 'potShadowc' + 'oord\x20=\x20v_S' + 'potShadowC' + 'oord;\x0d\x0a\x09\x09\x09' + '\x09float\x20spo' + 'tShadowAtt' + 'enuation\x20=' + '\x20sampleSpo' + 'tShadowmap' + '(spotShado' + 'wcoord);\x0d\x0a' + '\x09\x09\x09\x09dif\x20*=' + '\x20spotShado' + 'wAttenuati' + 'on;\x0d\x0a\x09\x09\x09\x09s' + 'pe\x20*=\x20spot' + 'ShadowAtte' + 'nuation;\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09diffus' + 'e+=dif;\x0d\x0a\x09' + '\x09\x09specular' + '+=spe;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09#i' + 'fdef\x20DIREC' + 'TIONLIGHT\x0d' + '\x0a\x09\x09\x09for\x20(i' + 'nt\x20i\x20=\x200;\x20' + 'i\x20<\x20MAX_LI' + 'GHT_COUNT;' + '\x20i++)\x20\x0d\x0a\x09\x09' + '\x09{\x0d\x0a\x09\x09\x09\x09if' + '(i\x20>=\x20u_Di' + 'rationLigh' + 'tCount)\x0d\x0a\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09Dire' + 'ctionLight' + '\x20direction' + 'Light\x20=\x20ge' + 'tDirection' + 'Light(u_Li' + 'ghtBuffer,' + 'i);\x0d\x0a\x09\x09\x09\x09#' + 'if\x20defined' + '(CALCULATE' + '_SHADOWS)/') + ('/shader中自定' + '义的宏不可用ifde' + 'f\x20必须改成if\x20d' + 'efined\x0d\x0a\x09\x09' + '\x09\x09\x09if(i\x20==' + '\x200)\x0d\x0a\x09\x09\x09\x09\x09' + '{\x0d\x0a\x09\x09\x09\x09\x09\x09#' + 'ifdef\x20SHAD' + 'OW_CASCADE' + '\x0d\x0a\x09\x09\x09\x09\x09\x09\x09v' + 'ec4\x20shadow' + 'Coord\x20=\x20ge' + 'tShadowCoo' + 'rd(vec4(v_' + 'PositionWo' + 'rld,1.0));' + '\x0d\x0a\x09\x09\x09\x09\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09vec4\x20sha' + 'dowCoord\x20=' + '\x20v_ShadowC' + 'oord;\x0d\x0a\x09\x09\x09' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09\x09\x09\x09dir' + 'ectionLigh' + 't.color\x20*=' + '\x20sampleSha' + 'dowmap(sha' + 'dowCoord);' + '\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a' + '\x09\x09\x09\x09#endif' + '\x0d\x0a\x09\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongDiectio' + 'nLight(u_M' + 'aterialSpe' + 'cular,u_Sh' + 'ininess,no' + 'rmal,gloss' + ',viewDir,d' + 'irectionLi' + 'ght,dif,sp' + 'e);\x0d\x0a\x09\x09\x09\x09d' + 'iffuse+=di' + 'f;\x0d\x0a\x09\x09\x09\x09sp' + 'ecular+=sp' + 'e;\x0d\x0a\x09\x09\x09}\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#if\x20defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)\x0d\x0a\x09\x09\x09' + 'ivec4\x20clus' + 'terInfo\x20=g' + 'etClusterI' + 'nfo(u_Ligh' + 'tClusterBu' + 'ffer,u_Vie' + 'w,u_Viewpo' + 'rt,\x20v_Posi' + 'tionWorld,' + 'gl_FragCoo' + 'rd,u_Proje' + 'ctionParam' + 's);\x0d\x0a\x09\x09\x09#i' + 'fdef\x20POINT' + 'LIGHT\x0d\x0a\x09\x09\x09' + '\x09for\x20(int\x20' + 'i\x20=\x200;\x20i\x20<' + '\x20MAX_LIGHT' + '_COUNT;\x20i+' + '+)\x20\x0d\x0a\x09\x09\x09\x09{' + '\x0d\x0a\x09\x09\x09\x09\x09if(' + 'i\x20>=\x20clust' + 'erInfo.x)/' + '/PointLigh' + 'tCount\x0d\x0a\x09\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09\x09Poi' + 'ntLight\x20po' + 'intLight\x20=' + '\x20getPointL' + 'ight(u_Lig' + 'htBuffer,u' + '_LightClus' + 'terBuffer,' + 'clusterInf' + 'o,i);\x0d\x0a\x09\x09\x09' + '\x09\x09LayaAirB' + 'linnPhongP' + 'ointLight(' + 'v_Position' + 'World,u_Ma' + 'terialSpec' + 'ular,u_Shi' + 'niness,nor' + 'mal,gloss,' + 'viewDir,po' + 'intLight,d') + ('if,spe);\x0d\x0a' + '\x09\x09\x09\x09\x09diffu' + 'se+=dif;\x0d\x0a' + '\x09\x09\x09\x09\x09specu' + 'lar+=spe;\x0d' + '\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09\x09for\x20(i' + 'nt\x20i\x20=\x200;\x20' + 'i\x20<\x20MAX_LI' + 'GHT_COUNT;' + '\x20i++)\x20\x0d\x0a\x09\x09' + '\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09' + 'if(i\x20>=\x20cl' + 'usterInfo.' + 'y)//SpotLi' + 'ghtCount\x0d\x0a' + '\x09\x09\x09\x09\x09\x09brea' + 'k;\x0d\x0a\x09\x09\x09\x09\x09S' + 'potLight\x20s' + 'potLight\x20=' + '\x20getSpotLi' + 'ght(u_Ligh' + 'tBuffer,u_' + 'LightClust' + 'erBuffer,c' + 'lusterInfo' + ',i);\x0d\x0a\x09\x09\x09\x09' + '\x09#if\x20defin' + 'ed(CALCULA' + 'TE_SPOTSHA' + 'DOWS)//sha' + 'der中自定义的宏不' + '可用ifdef\x20必须' + '改成if\x20defin' + 'ed\x0d\x0a\x09\x09\x09\x09\x09\x09' + 'if(i\x20==\x200)' + '\x0d\x0a\x09\x09\x09\x09\x09\x09{\x0d' + '\x0a\x09\x09\x09\x09\x09\x09\x09ve' + 'c4\x20spotSha' + 'dowcoord\x20=' + '\x20v_SpotSha' + 'dowCoord;\x0d' + '\x0a\x09\x09\x09\x09\x09\x09\x09sp' + 'otLight.co' + 'lor\x20*=\x20sam' + 'pleSpotSha' + 'dowmap(spo' + 'tShadowcoo' + 'rd);\x0d\x0a\x09\x09\x09\x09' + '\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '\x09\x09\x09LayaAir' + 'BlinnPhong' + 'SpotLight(' + 'v_Position' + 'World,u_Ma' + 'terialSpec' + 'ular,u_Shi' + 'niness,nor' + 'mal,gloss,' + 'viewDir,sp' + 'otLight,di' + 'f,spe);\x0d\x0a\x09' + '\x09\x09\x09\x09diffus' + 'e+=dif;\x0d\x0a\x09' + '\x09\x09\x09\x09specul' + 'ar+=spe;\x0d\x0a' + '\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=vec4(m' + 'ainColor.r' + 'gb*(global' + 'Diffuse\x20+\x20' + 'diffuse),m' + 'ainColor.a' + ');\x0d\x0a\x0d\x0a\x09#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)\x0d\x0a\x09\x09g' + 'l_FragColo' + 'r.rgb+=spe' + 'cular;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x20\x20' + '\x0d\x0a\x09#ifdef\x20' + 'FOG\x0d\x0a\x09\x09flo' + 'at\x20lerpFac' + 't=clamp((1' + '.0/gl_Frag' + 'Coord.w-u_' + 'FogStart)/') + ('u_FogRange' + ',0.0,1.0);' + '\x0d\x0a\x09\x09gl_Fra' + 'gColor.rgb' + '=mix(gl_Fr' + 'agColor.rg' + 'b,u_FogCol' + 'or,lerpFac' + 't);\x0d\x0a\x09#end' + 'if\x0d\x0a}\x0d\x0a\x0d\x0a'), _0x530a63 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a#incl' + 'ude\x20\x22Light' + 'ing.glsl\x22;' + '\x0d\x0a#include' + '\x20\x22LayaUtil' + 'e.glsl\x22\x0d\x0a#' + 'include\x20\x22S' + 'hadow.glsl' + '\x22;\x0d\x0a\x0d\x0a\x0d\x0aat' + 'tribute\x20ve' + 'c4\x20a_Posit' + 'ion;\x0d\x0a\x0d\x0a#i' + 'fdef\x20GPU_I' + 'NSTANCE\x0d\x0a\x09' + 'attribute\x20' + 'mat4\x20a_Mvp' + 'Matrix;\x0d\x0a#' + 'else\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_MvpMatri' + 'x;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(DIFF' + 'USEMAP)||(' + '(defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT))&&(d' + 'efined(SPE' + 'CULARMAP)|' + '|defined(N' + 'ORMALMAP))' + ')||(define' + 'd(LIGHTMAP' + ')&&defined' + '(UV))\x0d\x0a\x09at' + 'tribute\x20ve' + 'c2\x20a_Texco' + 'ord0;\x0d\x0a\x09va' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(LIG' + 'HTMAP)&&de' + 'fined(UV1)' + '\x0d\x0a\x09attribu' + 'te\x20vec2\x20a_' + 'Texcoord1;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20L' + 'IGHTMAP\x0d\x0a\x09' + 'uniform\x20ve' + 'c4\x20u_Light' + 'mapScaleOf' + 'fset;\x0d\x0a\x09va' + 'rying\x20vec2' + '\x20v_LightMa' + 'pUV;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20COLOR\x0d\x0a' + '\x09attribute' + '\x20vec4\x20a_Co' + 'lor;\x0d\x0a\x09var' + 'ying\x20vec4\x20' + 'v_Color;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20BON' + 'E\x0d\x0a\x09const\x20' + 'int\x20c_MaxB' + 'oneCount\x20=' + '\x2024;\x0d\x0a\x09att' + 'ribute\x20vec' + '4\x20a_BoneIn' + 'dices;\x0d\x0a\x09a' + 'ttribute\x20v' + ('ec4\x20a_Bone' + 'Weights;\x0d\x0a' + '\x09uniform\x20m' + 'at4\x20u_Bone' + 's[c_MaxBon' + 'eCount];\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'attribute\x20' + 'vec3\x20a_Nor' + 'mal;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_Normal;\x20\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09unifor' + 'm\x20vec3\x20u_C' + 'ameraPos;\x0d' + '\x0a\x09varying\x20' + 'vec3\x20v_Vie' + 'wDir;\x20\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'NORMALMAP)' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'Tangent0;\x0d' + '\x0a\x09varying\x20' + 'vec3\x20v_Tan' + 'gent;\x0d\x0a\x09va' + 'rying\x20vec3' + '\x20v_Binorma' + 'l;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09attr' + 'ibute\x20mat4' + '\x20a_WorldMa' + 't;\x0d\x0a#else\x0d' + '\x0a\x09uniform\x20' + 'mat4\x20u_Wor' + 'ldMat;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')||(define' + 'd(CALCULAT' + 'E_SHADOWS)' + '&&defined(' + 'SHADOW_CAS' + 'CADE))||de' + 'fined(CALC' + 'ULATE_SPOT' + 'SHADOWS)\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Posi' + 'tionWorld;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(CALCUL' + 'ATE_SHADOW' + 'S)&&!defin' + 'ed(SHADOW_' + 'CASCADE)\x0d\x0a' + '\x09varying\x20v' + 'ec4\x20v_Shad' + 'owCoord;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(CALCULAT' + 'E_SPOTSHAD' + 'OWS)//shad' + 'er中自定义的宏不可' + '用ifdef\x20必须改' + '成if\x20define' + 'd\x0d\x0a\x09varyin' + 'g\x20vec4\x20v_S' + 'potShadowC' + 'oord;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + 'def\x20TILING' + 'OFFSET\x0d\x0a\x09u' + 'niform\x20vec' + '4\x20u_Tiling' + 'Offset;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x0d\x0a{\x0d\x0a\x09' + 'vec4\x20posit' + 'ion;\x0d\x0a\x09#if' + 'def\x20BONE\x0d\x0a' + '\x09\x09mat4\x20ski' + 'nTransform' + ';\x0d\x0a\x09\x20\x09#ifd') + ('ef\x20SIMPLEB' + 'ONE\x0d\x0a\x09\x09\x09fl' + 'oat\x20curren' + 'tPixelPos;' + '\x0d\x0a\x09\x09\x09#ifde' + 'f\x20GPU_INST' + 'ANCE\x0d\x0a\x09\x09\x09\x09' + 'currentPix' + 'elPos\x20=\x20a_' + 'SimpleText' + 'ureParams.' + 'x+a_Simple' + 'TexturePar' + 'ams.y;\x0d\x0a\x09\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09\x09currentP' + 'ixelPos\x20=\x20' + 'u_SimpleAn' + 'imatorPara' + 'ms.x+u_Sim' + 'pleAnimato' + 'rParams.y;' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09floa' + 't\x20offset\x20=' + '\x201.0/u_Sim' + 'pleAnimato' + 'rTextureSi' + 'ze;\x0d\x0a\x09\x09\x09sk' + 'inTransfor' + 'm\x20=\x20\x20loadM' + 'atFromText' + 'ure(curren' + 'tPixelPos,' + 'int(a_Bone' + 'Indices.x)' + ',offset)\x20*' + '\x20a_BoneWei' + 'ghts.x;\x0d\x0a\x09' + '\x09\x09skinTran' + 'sform\x20+=\x20l' + 'oadMatFrom' + 'Texture(cu' + 'rrentPixel' + 'Pos,int(a_' + 'BoneIndice' + 's.y),offse' + 't)\x20*\x20a_Bon' + 'eWeights.y' + ';\x0d\x0a\x09\x09\x09skin' + 'Transform\x20' + '+=\x20loadMat' + 'FromTextur' + 'e(currentP' + 'ixelPos,in' + 't(a_BoneIn' + 'dices.z),o' + 'ffset)\x20*\x20a' + '_BoneWeigh' + 'ts.z;\x0d\x0a\x09\x09\x09' + 'skinTransf' + 'orm\x20+=\x20loa' + 'dMatFromTe' + 'xture(curr' + 'entPixelPo' + 's,int(a_Bo' + 'neIndices.' + 'w),offset)' + '\x20*\x20a_BoneW' + 'eights.w;\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20=\x20\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.x)]\x20' + '*\x20a_BoneWe' + 'ights.x;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.y)]\x20' + '*\x20a_BoneWe' + 'ights.y;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.z)]\x20' + '*\x20a_BoneWe' + 'ights.z;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.w)]\x20' + '*\x20a_BoneWe' + 'ights.w;\x0d\x0a' + '\x09\x09#endif\x0d\x0a') + ('\x09\x09position' + '=skinTrans' + 'form*a_Pos' + 'ition;\x0d\x0a\x09\x20' + '#else\x0d\x0a\x09\x09p' + 'osition=a_' + 'Position;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09\x09gl_P' + 'osition\x20=\x20' + 'a_MvpMatri' + 'x\x20*\x20positi' + 'on;\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09gl_Po' + 'sition\x20=\x20u' + '_MvpMatrix' + '\x20*\x20positio' + 'n;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09mat' + '4\x20worldMat' + ';\x0d\x0a\x09#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09\x09wor' + 'ldMat\x20=\x20a_' + 'WorldMat;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09worldMat\x20' + '=\x20u_WorldM' + 'at;\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09mat' + '3\x20worldInv' + 'Mat;\x0d\x0a\x09#if' + 'def\x20BONE\x0d\x0a' + '\x09\x09worldInv' + 'Mat=INVERS' + 'E_MAT(mat3' + '(worldMat*' + 'skinTransf' + 'orm));\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09wo' + 'rldInvMat=' + 'INVERSE_MA' + 'T(mat3(wor' + 'ldMat));\x0d\x0a' + '\x09#endif\x20\x20\x0d' + '\x0a\x09v_Normal' + '=normalize' + '(a_Normal*' + 'worldInvMa' + 't);\x0d\x0a\x09#if\x20' + 'defined(NO' + 'RMALMAP)\x0d\x0a' + '\x09\x09v_Tangen' + 't=normaliz' + 'e(a_Tangen' + 't0.xyz*wor' + 'ldInvMat);' + '\x0d\x0a\x09\x09v_Bino' + 'rmal=cross' + '(v_Normal,' + 'v_Tangent)' + '*a_Tangent' + '0.w;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09#i' + 'f\x20defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT)||(d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)&&def' + 'ined(SHADO' + 'W_CASCADE)' + ')||defined' + '(CALCULATE' + '_SPOTSHADO' + 'WS)\x0d\x0a\x09\x09vec' + '3\x20position' + 'WS=(worldM' + 'at*positio' + 'n).xyz;\x0d\x0a\x09' + '\x09#if\x20defin' + 'ed(DIRECTI' + 'ONLIGHT)||' + 'defined(PO' + 'INTLIGHT)|' + '|defined(S' + 'POTLIGHT)\x0d' + '\x0a\x09\x09\x09v_View' + 'Dir\x20=\x20u_Ca' + 'meraPos-po' + 'sitionWS;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x09#if\x20def' + 'ined(POINT') + ('LIGHT)||de' + 'fined(SPOT' + 'LIGHT)||(d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)&&def' + 'ined(SHADO' + 'W_CASCADE)' + ')||defined' + '(CALCULATE' + '_SPOTSHADO' + 'WS)\x0d\x0a\x09\x09\x09v_' + 'PositionWo' + 'rld\x20=\x20posi' + 'tionWS;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09#if\x20defin' + 'ed(DIFFUSE' + 'MAP)||((de' + 'fined(DIRE' + 'CTIONLIGHT' + ')||defined' + '(POINTLIGH' + 'T)||define' + 'd(SPOTLIGH' + 'T))&&(defi' + 'ned(SPECUL' + 'ARMAP)||de' + 'fined(NORM' + 'ALMAP)))\x0d\x0a' + '\x09\x09#ifdef\x20T' + 'ILINGOFFSE' + 'T\x0d\x0a\x09\x09\x09v_Te' + 'xcoord0=Tr' + 'ansformUV(' + 'a_Texcoord' + '0,u_Tiling' + 'Offset);\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09v_Texcoo' + 'rd0=a_Texc' + 'oord0;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20LIG' + 'HTMAP\x0d\x0a\x09\x09#' + 'ifdef\x20UV1\x0d' + '\x0a\x09\x09\x09v_Ligh' + 'tMapUV=vec' + '2(a_Texcoo' + 'rd1.x,1.0-' + 'a_Texcoord' + '1.y)*u_Lig' + 'htmapScale' + 'Offset.xy+' + 'u_Lightmap' + 'ScaleOffse' + 't.zw;\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09v' + '_LightMapU' + 'V=vec2(a_T' + 'excoord0.x' + ',1.0-a_Tex' + 'coord0.y)*' + 'u_Lightmap' + 'ScaleOffse' + 't.xy+u_Lig' + 'htmapScale' + 'Offset.zw;' + '\x0d\x0a\x09\x09#endif' + '\x20\x0d\x0a\x09\x09v_Lig' + 'htMapUV.y=' + '1.0-v_Ligh' + 'tMapUV.y;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09#if\x20def' + 'ined(COLOR' + ')&&defined' + '(ENABLEVER' + 'TEXCOLOR)\x0d' + '\x0a\x09\x09v_Color' + '=a_Color;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09#if\x20def' + 'ined(CALCU' + 'LATE_SHADO' + 'WS)&&!defi' + 'ned(SHADOW' + '_CASCADE)\x0d' + '\x0a\x09\x09v_Shado' + 'wCoord\x20=ge' + 'tShadowCoo' + 'rd(vec4(po' + 'sitionWS,1' + '.0));\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(CALCULATE' + '_SPOTSHADO') + ('WS)//shade' + 'r中自定义的宏不可用' + 'ifdef\x20必须改成' + 'if\x20defined' + '\x0d\x0a\x09\x09v_Spot' + 'ShadowCoor' + 'd\x20=\x20u_Spot' + 'ViewProjec' + 'tMatrix*ve' + 'c4(positio' + 'nWS,1.0);\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09gl_Posi' + 'tion=remap' + 'GLPosition' + 'Z(gl_Posit' + 'ion);\x0d\x0a}'), _0x5949f0 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20int;\x0d\x0a#e' + 'lse\x0d\x0a\x09prec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20int;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dowCasterF' + 'S.glsl\x22\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x0d\x0a{\x0d\x0a\x09gl' + '_FragColor' + '=shadowCas' + 'terFragmen' + 't();\x0d\x0a}', _0x3e1a24 = '#include\x20\x22' + 'ShadowCast' + 'erVS.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tionCS\x20=\x20\x20' + 'shadowCast' + 'erVertex()' + ';\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(positio' + 'nCS);\x0d\x0a}', _0x36aa3f = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x20\x20precisio' + 'n\x20highp\x20fl' + 'oat;\x0d\x0a#els' + 'e\x0d\x0a\x20\x20preci' + 'sion\x20mediu' + 'mp\x20float;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0avarying\x20v' + 'ec4\x20v_Colo' + 'r;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'extureCoor' + 'dinate;\x0d\x0au' + 'niform\x20sam' + 'pler2D\x20u_t' + 'exture;\x0d\x0au' + 'niform\x20vec' + '4\x20u_Tintco' + 'lor;\x0d\x0a\x0d\x0a#i' + 'fdef\x20RENDE' + 'RMODE_MESH' + '\x0d\x0a\x09varying' + '\x20vec4\x20v_Me' + 'shColor;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20FOG' + '\x0d\x0a\x09uniform' + '\x20float\x20u_F' + 'ogStart;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Fog' + 'Range;\x0d\x0a\x09#' + 'ifdef\x20ADDT' + 'IVEFOG\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09un' + 'iform\x20vec3' + '\x20u_FogColo' + 'r;\x0d\x0a\x09#endi' + 'f\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a\x0d\x0avoid\x20' + 'main()\x0d\x0a{\x09' + '\x0d\x0a\x09#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09\x09g' + 'l_FragColo' + 'r=v_MeshCo' + 'lor;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09gl_F' + 'ragColor=v' + 'ec4(1.0);\x09' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x09\x0d\x0a\x09#ifd' + 'ef\x20DIFFUSE' + 'MAP\x0d\x0a\x09\x09#if' + 'def\x20TINTCO' + 'LOR\x0d\x0a\x09\x09\x09gl' + '_FragColor' + '*=texture2' + 'D(u_textur' + 'e,v_Textur' + 'eCoordinat' + 'e)*u_Tintc' + 'olor*2.0*v' + '_Color;\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09gl_FragCo' + 'lor*=textu' + 're2D(u_tex' + 'ture,v_Tex' + 'tureCoordi' + 'nate)*v_Co' + 'lor;\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09#ifd' + 'ef\x20TINTCOL' + 'OR\x0d\x0a\x09\x09\x09gl_' + 'FragColor*' + '=u_Tintcol' + 'or*2.0*v_C' + 'olor;\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09g' + 'l_FragColo' + 'r*=v_Color' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09#ifd' + 'ef\x20FOG\x0d\x0a\x09\x09' + 'float\x20lerp' + 'Fact=clamp' + '((1.0/gl_F' + ('ragCoord.w' + '-u_FogStar' + 't)/u_FogRa' + 'nge,0.0,1.' + '0);\x0d\x0a\x09\x09#if' + 'def\x20ADDTIV' + 'EFOG\x0d\x0a\x09\x09\x09g' + 'l_FragColo' + 'r.rgb=mix(' + 'gl_FragCol' + 'or.rgb,vec' + '3(0.0,0.0,' + '0.0),lerpF' + 'act);\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09g' + 'l_FragColo' + 'r.rgb=mix(' + 'gl_FragCol' + 'or.rgb,u_F' + 'ogColor,le' + 'rpFact);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a}'), _0x4f9d9a = '//\x20#includ' + 'e\x20\x22Lightin' + 'g.glsl\x22;\x0d\x0a' + '\x0d\x0a//修改这里剔除' + '没有用到的光照函数，' + '增加粒子的编译速度\x0d' + '\x0avec2\x20Tran' + 'sformUV(ve' + 'c2\x20texcoor' + 'd,vec4\x20til' + 'ingOffset)' + '\x20{\x0d\x0a\x09vec2\x20' + 'transTexco' + 'ord=vec2(t' + 'excoord.x,' + 'texcoord.y' + '-1.0)*tili' + 'ngOffset.x' + 'y+vec2(til' + 'ingOffset.' + 'z,-tilingO' + 'ffset.w);\x0d' + '\x0a\x09transTex' + 'coord.y+=1' + '.0;\x0d\x0a\x09retu' + 'rn\x20transTe' + 'xcoord;\x0d\x0a}' + '\x0d\x0a\x0d\x0avec4\x20r' + 'emapGLPosi' + 'tionZ(vec4' + '\x20position)' + '\x20{\x0d\x0a\x09posit' + 'ion.z=posi' + 'tion.z\x20*\x202' + '.0\x20-\x20posit' + 'ion.w;\x0d\x0a\x09r' + 'eturn\x20posi' + 'tion;\x0d\x0a}\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(GL_FRA' + 'GMENT_PREC' + 'ISION_HIGH' + ')\x0d\x0a\x20\x20preci' + 'sion\x20highp' + '\x20float;\x0d\x0a#' + 'else\x0d\x0a\x20\x20pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(SPHE' + 'RHBILLBOAR' + 'D)||define' + 'd(STRETCHE' + 'DBILLBOARD' + ')||defined' + '(HORIZONTA' + 'LBILLBOARD' + ')||defined' + '(VERTICALB' + 'ILLBOARD)\x0d' + '\x0a\x09attribut' + 'e\x20vec4\x20a_C' + 'ornerTextu' + 'reCoordina' + 'te;\x0d\x0a#endi' + 'f\x0d\x0a#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09at' + 'tribute\x20ve' + 'c3\x20a_MeshP' + 'osition;\x0d\x0a' + '\x09attribute' + '\x20vec4\x20a_Me' + 'shColor;\x0d\x0a' + '\x09attribute' + '\x20vec2\x20a_Me' + 'shTextureC' + 'oordinate;' + '\x0d\x0a\x09varying' + '\x20vec4\x20v_Me' + 'shColor;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'attribute\x20' + 'vec4\x20a_Sha' + 'pePosition' + 'StartLifeT' + 'ime;\x0d\x0aattr' + 'ibute\x20vec4' + '\x20a_Directi' + 'onTime;\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Star' + 'tColor;\x0d\x0aa' + 'ttribute\x20v' + 'ec3\x20a_Star' + 'tSize;\x0d\x0aat' + 'tribute\x20ve' + 'c3\x20a_Start' + 'Rotation0;' + ('\x0d\x0aattribut' + 'e\x20float\x20a_' + 'StartSpeed' + ';\x0d\x0a#if\x20def' + 'ined(COLOR' + 'OVERLIFETI' + 'ME)||defin' + 'ed(RANDOMC' + 'OLOROVERLI' + 'FETIME)||d' + 'efined(SIZ' + 'EOVERLIFET' + 'IMERANDOMC' + 'URVES)||de' + 'fined(SIZE' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVESSEPERA' + 'TE)||defin' + 'ed(ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS)|' + '|defined(R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S)\x0d\x0a\x20\x20attr' + 'ibute\x20vec4' + '\x20a_Random0' + ';\x0d\x0a#endif\x0d' + '\x0a#if\x20defin' + 'ed(TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCONSTANT' + ')||defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VE)\x0d\x0a\x20\x20att' + 'ribute\x20vec' + '4\x20a_Random' + '1;\x0d\x0a#endif' + '\x0d\x0aattribut' + 'e\x20vec3\x20a_S' + 'imulationW' + 'orldPostio' + 'n;\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_Simulatio' + 'nWorldRota' + 'tion;\x0d\x0a\x0d\x0av' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a#ifdef\x20D' + 'IFFUSEMAP\x0d' + '\x0a\x09varying\x20' + 'vec2\x20v_Tex' + 'tureCoordi' + 'nate;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0auni' + 'form\x20float' + '\x20u_Current' + 'Time;\x0d\x0auni' + 'form\x20vec3\x20' + 'u_Gravity;' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20vec3\x20u_W' + 'orldPositi' + 'on;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'WorldRotat' + 'ion;\x0d\x0aunif' + 'orm\x20bool\x20u' + '_ThreeDSta' + 'rtRotation' + ';\x0d\x0auniform' + '\x20int\x20u_Sca' + 'lingMode;\x0d' + '\x0auniform\x20v' + 'ec3\x20u_Posi' + 'tionScale;' + '\x0d\x0auniform\x20' + 'vec3\x20u_Siz' + 'eScale;\x0d\x0au' + 'niform\x20mat' + '4\x20u_View;\x0d' + '\x0auniform\x20m' + 'at4\x20u_Proj' + 'ection;\x0d\x0a\x0d' + '\x0a#ifdef\x20ST' + 'RETCHEDBIL' + 'LBOARD\x0d\x0a\x09u' + 'niform\x20vec' + '3\x20u_Camera') + ('Pos;\x0d\x0a#end' + 'if\x0d\x0aunifor' + 'm\x20vec3\x20u_C' + 'ameraDirec' + 'tion;//TOD' + 'O:只有几种广告牌模' + '式需要用\x0d\x0aunif' + 'orm\x20vec3\x20u' + '_CameraUp;' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20\x20float\x20u' + '_Stretched' + 'BillboardL' + 'engthScale' + ';\x0d\x0auniform' + '\x20\x20float\x20u_' + 'StretchedB' + 'illboardSp' + 'eedScale;\x0d' + '\x0auniform\x20i' + 'nt\x20u_Simul' + 'ationSpace' + ';\x0d\x0a\x0d\x0a#if\x20d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECON' + 'STANT)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANT)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCURVE)\x0d' + '\x0a\x20\x20uniform' + '\x20\x20int\x20\x20u_V' + 'OLSpaceTyp' + 'e;\x0d\x0a#endif' + '\x0d\x0a#if\x20defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMECONSTA' + 'NT)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT)\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec3\x20u_VO' + 'LVelocityC' + 'onst;\x0d\x0a#en' + 'dif\x0d\x0a#if\x20d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECUR' + 'VE)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE)\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c2\x20u_VOLVe' + 'locityGrad' + 'ientX[4];/' + '/x为key,y为速' + '度\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_VOLVeloci' + 'tyGradient' + 'Y[4];//x为k' + 'ey,y为速度\x0d\x0a\x20' + '\x20uniform\x20\x20' + 'vec2\x20u_VOL' + 'VelocityGr' + 'adientZ[4]' + ';//x为key,y' + '为速度\x0d\x0a#endi' + 'f\x0d\x0a#ifdef\x20' + 'VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANT\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '3\x20u_VOLVel' + 'ocityConst' + 'Max;\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VE\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_VOLVeloc' + 'ityGradien' + 'tMaxX[4];/') + ('/x为key,y为速' + '度\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_VOLVeloci' + 'tyGradient' + 'MaxY[4];//' + 'x为key,y为速度' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'VOLVelocit' + 'yGradientM' + 'axZ[4];//x' + '为key,y为速度\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20CO' + 'LOROVERLIF' + 'ETIME\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c4\x20u_Color' + 'OverLifeGr' + 'adientColo' + 'rs[4];//x为' + 'key,yzw为Co' + 'lor\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_ColorOv' + 'erLifeGrad' + 'ientAlphas' + '[4];//x为ke' + 'y,y为Alpha\x0d' + '\x0a#endif\x0d\x0a#' + 'ifdef\x20RAND' + 'OMCOLOROVE' + 'RLIFETIME\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec4\x20u_C' + 'olorOverLi' + 'feGradient' + 'Colors[4];' + '//x为key,yz' + 'w为Color\x0d\x0a\x20' + '\x20uniform\x20\x20' + 'vec2\x20u_Col' + 'orOverLife' + 'GradientAl' + 'phas[4];//' + 'x为key,y为Al' + 'pha\x0d\x0a\x20\x20uni' + 'form\x20\x20vec4' + '\x20u_MaxColo' + 'rOverLifeG' + 'radientCol' + 'ors[4];//x' + '为key,yzw为C' + 'olor\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_MaxCol' + 'orOverLife' + 'GradientAl' + 'phas[4];//' + 'x为key,y为Al' + 'pha\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a\x0d\x0a#if' + '\x20defined(S' + 'IZEOVERLIF' + 'ETIMECURVE' + ')||defined' + '(SIZEOVERL' + 'IFETIMERAN' + 'DOMCURVES)' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'SOLSizeGra' + 'dient[4];/' + '/x为key,y为尺' + '寸\x0d\x0a#endif\x0d' + '\x0a#ifdef\x20SI' + 'ZEOVERLIFE' + 'TIMERANDOM' + 'CURVES\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_SOLS' + 'izeGradien' + 'tMax[4];//' + 'x为key,y为尺寸' + '\x0d\x0a#endif\x0d\x0a' + '#if\x20define' + 'd(SIZEOVER' + 'LIFETIMECU' + 'RVESEPERAT' + 'E)||define' + 'd(SIZEOVER' + 'LIFETIMERA' + 'NDOMCURVES' + 'SEPERATE)\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec2\x20u_S' + 'OLSizeGrad' + 'ientX[4];/' + '/x为key,y为尺') + ('寸\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_SOLSizeGr' + 'adientY[4]' + ';//x为key,y' + '为尺寸\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_SOLSize' + 'GradientZ[' + '4];//x为key' + ',y为尺寸\x0d\x0a#en' + 'dif\x0d\x0a#ifde' + 'f\x20SIZEOVER' + 'LIFETIMERA' + 'NDOMCURVES' + 'SEPERATE\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec2\x20u_SO' + 'LSizeGradi' + 'entMaxX[4]' + ';//x为key,y' + '为尺寸\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_SOLSize' + 'GradientMa' + 'xY[4];//x为' + 'key,y为尺寸\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec2\x20u_SO' + 'LSizeGradi' + 'entMaxZ[4]' + ';//x为key,y' + '为尺寸\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a\x0d\x0a#if' + 'def\x20ROTATI' + 'ONOVERLIFE' + 'TIME\x0d\x0a\x20\x20#i' + 'f\x20defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'CONSTANT)|' + '|defined(R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANTS)\x0d\x0a\x20\x20\x20' + '\x20uniform\x20\x20' + 'float\x20u_RO' + 'LAngularVe' + 'locityCons' + 't;\x0d\x0a\x20\x20#end' + 'if\x0d\x0a\x20\x20#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS\x0d\x0a' + '\x20\x20\x20\x20unifor' + 'm\x20\x20float\x20u' + '_ROLAngula' + 'rVelocityC' + 'onstMax;\x0d\x0a' + '\x20\x20#endif\x0d\x0a' + '\x20\x20#if\x20defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIMECURVE)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES)\x0d\x0a\x20\x20\x20\x20u' + 'niform\x20\x20ve' + 'c2\x20u_ROLAn' + 'gularVeloc' + 'ityGradien' + 't[4];//x为k' + 'ey,y为旋转\x0d\x0a\x20' + '\x20#endif\x0d\x0a\x20' + '\x20#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCURVES' + '\x0d\x0a\x20\x20\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'x[4];//x为k' + 'ey,y为旋转\x0d\x0a\x20' + '\x20#endif\x0d\x0a#' + 'endif\x0d\x0a#if' + 'def\x20ROTATI' + 'ONOVERLIFE' + 'TIMESEPERA' + 'TE\x0d\x0a\x20\x20#if\x20' + 'defined(RO' + 'TATIONOVER' + 'LIFETIMECO' + 'NSTANT)||d' + 'efined(ROT') + ('ATIONOVERL' + 'IFETIMERAN' + 'DOMCONSTAN' + 'TS)\x0d\x0a\x20\x20\x20\x20u' + 'niform\x20\x20ve' + 'c3\x20u_ROLAn' + 'gularVeloc' + 'ityConstSe' + 'prarate;\x0d\x0a' + '\x20\x20#endif\x0d\x0a' + '\x20\x20#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANTS\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec3\x20u_ROLA' + 'ngularVelo' + 'cityConstM' + 'axSeprarat' + 'e;\x0d\x0a\x20\x20#end' + 'if\x0d\x0a\x20\x20#if\x20' + 'defined(RO' + 'TATIONOVER' + 'LIFETIMECU' + 'RVE)||defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIMERANDOM' + 'CURVES)\x0d\x0a\x20' + '\x20\x20\x20uniform' + '\x20\x20vec2\x20u_R' + 'OLAngularV' + 'elocityGra' + 'dientX[4];' + '\x0d\x0a\x20\x20\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_ROLAngul' + 'arVelocity' + 'GradientY[' + '4];\x0d\x0a\x20\x20\x20\x20u' + 'niform\x20\x20ve' + 'c2\x20u_ROLAn' + 'gularVeloc' + 'ityGradien' + 'tZ[4];\x0d\x0a\x20\x20' + '#endif\x0d\x0a\x20\x20' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIMERAN' + 'DOMCURVES\x0d' + '\x0a\x20\x20\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_ROLAngula' + 'rVelocityG' + 'radientMax' + 'X[4];\x0d\x0a\x20\x20\x20' + '\x20uniform\x20\x20' + 'vec2\x20u_ROL' + 'AngularVel' + 'ocityGradi' + 'entMaxY[4]' + ';\x0d\x0a\x20\x20\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_ROLAngu' + 'larVelocit' + 'yGradientM' + 'axZ[4];\x0d\x0a\x09' + 'uniform\x20\x20v' + 'ec2\x20u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntMaxW[4];' + '\x0d\x0a\x20\x20#endif' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(TEXTUR' + 'ESHEETANIM' + 'ATIONCURVE' + ')||defined' + '(TEXTURESH' + 'EETANIMATI' + 'ONRANDOMCU' + 'RVE)\x0d\x0a\x20\x20un' + 'iform\x20\x20flo' + 'at\x20u_TSACy' + 'cles;\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c2\x20u_TSASu' + 'bUVLength;' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'TSAGradien' + 'tUVs[4];//' + 'x为key,y为fr' + 'ame\x0d\x0a#endi' + 'f\x0d\x0a#ifdef\x20' + 'TEXTURESHE' + 'ETANIMATIO' + 'NRANDOMCUR') + ('VE\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_TSAMaxGr' + 'adientUVs[' + '4];//x为key' + ',y为frame\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20TIL' + 'INGOFFSET\x0d' + '\x0a\x09uniform\x20' + 'vec4\x20u_Til' + 'ingOffset;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0avec3\x20rot' + 'ationByEul' + 'er(in\x20vec3' + '\x20vector,in' + '\x20vec3\x20rot)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20halfRoll' + '\x20=\x20rot.z\x20*' + '\x200.5;\x0d\x0a\x20\x20\x20' + '\x20float\x20hal' + 'fPitch\x20=\x20r' + 'ot.x\x20*\x200.5' + ';\x0d\x0a\x09float\x20' + 'halfYaw\x20=\x20' + 'rot.y\x20*\x200.' + '5;\x0d\x0a\x0d\x0a\x09flo' + 'at\x20sinRoll' + '\x20=\x20sin(hal' + 'fRoll);\x0d\x0a\x09' + 'float\x20cosR' + 'oll\x20=\x20cos(' + 'halfRoll);' + '\x0d\x0a\x09float\x20s' + 'inPitch\x20=\x20' + 'sin(halfPi' + 'tch);\x0d\x0a\x09fl' + 'oat\x20cosPit' + 'ch\x20=\x20cos(h' + 'alfPitch);' + '\x0d\x0a\x09float\x20s' + 'inYaw\x20=\x20si' + 'n(halfYaw)' + ';\x0d\x0a\x09float\x20' + 'cosYaw\x20=\x20c' + 'os(halfYaw' + ');\x0d\x0a\x0d\x0a\x09flo' + 'at\x20quaX\x20=\x20' + '(cosYaw\x20*\x20' + 'sinPitch\x20*' + '\x20cosRoll)\x20' + '+\x20(sinYaw\x20' + '*\x20cosPitch' + '\x20*\x20sinRoll' + ');\x0d\x0a\x09float' + '\x20quaY\x20=\x20(s' + 'inYaw\x20*\x20co' + 'sPitch\x20*\x20c' + 'osRoll)\x20-\x20' + '(cosYaw\x20*\x20' + 'sinPitch\x20*' + '\x20sinRoll);' + '\x0d\x0a\x09float\x20q' + 'uaZ\x20=\x20(cos' + 'Yaw\x20*\x20cosP' + 'itch\x20*\x20sin' + 'Roll)\x20-\x20(s' + 'inYaw\x20*\x20si' + 'nPitch\x20*\x20c' + 'osRoll);\x0d\x0a' + '\x09float\x20qua' + 'W\x20=\x20(cosYa' + 'w\x20*\x20cosPit' + 'ch\x20*\x20cosRo' + 'll)\x20+\x20(sin' + 'Yaw\x20*\x20sinP' + 'itch\x20*\x20sin' + 'Roll);\x0d\x0a\x09\x0d' + '\x0a\x09//vec4\x20q' + '=vec4(quaX' + ',quaY,quaZ' + ',quaW);\x0d\x0a\x09' + '//vec3\x20tem' + 'p\x20=\x20cross(' + 'q.xyz,\x20vec' + 'tor)\x20+\x20q.w' + '\x20*\x20vector;' + '\x0d\x0a\x09//retur' + 'n\x20(cross(t' + 'emp,\x20-q.xy' + 'z)\x20+\x20dot(q' + '.xyz,vecto' + 'r)\x20*\x20q.xyz' + '\x20+\x20q.w\x20*\x20t' + 'emp);\x0d\x0a\x09\x0d\x0a' + '\x09float\x20x\x20=' + '\x20quaX\x20+\x20qu' + 'aX;\x0d\x0a\x20\x20\x20\x20f') + ('loat\x20y\x20=\x20q' + 'uaY\x20+\x20quaY' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20z\x20=\x20qua' + 'Z\x20+\x20quaZ;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20wx\x20=\x20quaW' + '\x20*\x20x;\x0d\x0a\x20\x20\x20' + '\x20float\x20wy\x20' + '=\x20quaW\x20*\x20y' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20wz\x20=\x20qu' + 'aW\x20*\x20z;\x0d\x0a\x09' + 'float\x20xx\x20=' + '\x20quaX\x20*\x20x;' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20xy\x20=\x20qua' + 'X\x20*\x20y;\x0d\x0a\x09f' + 'loat\x20xz\x20=\x20' + 'quaX\x20*\x20z;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20yy\x20=\x20quaY' + '\x20*\x20y;\x0d\x0a\x20\x20\x20' + '\x20float\x20yz\x20' + '=\x20quaY\x20*\x20z' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20zz\x20=\x20qu' + 'aZ\x20*\x20z;\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20vec3(((v' + 'ector.x\x20*\x20' + '((1.0\x20-\x20yy' + ')\x20-\x20zz))\x20+' + '\x20(vector.y' + '\x20*\x20(xy\x20-\x20w' + 'z)))\x20+\x20(ve' + 'ctor.z\x20*\x20(' + 'xz\x20+\x20wy)),' + '\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20((' + 'vector.x\x20*' + '\x20(xy\x20+\x20wz)' + ')\x20+\x20(vecto' + 'r.y\x20*\x20((1.' + '0\x20-\x20xx)\x20-\x20' + 'zz)))\x20+\x20(v' + 'ector.z\x20*\x20' + '(yz\x20-\x20wx))' + ',\x0d\x0a\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20(' + '(vector.x\x20' + '*\x20(xz\x20-\x20wy' + '))\x20+\x20(vect' + 'or.y\x20*\x20(yz' + '\x20+\x20wx)))\x20+' + '\x20(vector.z' + '\x20*\x20((1.0\x20-' + '\x20xx)\x20-\x20yy)' + '));\x0d\x0a\x09\x0d\x0a}\x0d' + '\x0a\x0d\x0a//假定axi' + 's已经归一化\x0d\x0ave' + 'c3\x20rotatio' + 'nByAxis(in' + '\x20vec3\x20vect' + 'or,in\x20vec3' + '\x20axis,\x20in\x20' + 'float\x20angl' + 'e)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20halfAn' + 'gle\x20=\x20angl' + 'e\x20*\x200.5;\x0d\x0a' + '\x09float\x20sin' + '\x20=\x20sin(hal' + 'fAngle);\x0d\x0a' + '\x09\x0d\x0a\x09float\x20' + 'quaX\x20=\x20axi' + 's.x\x20*\x20sin;' + '\x0d\x0a\x09float\x20q' + 'uaY\x20=\x20axis' + '.y\x20*\x20sin;\x0d' + '\x0a\x09float\x20qu' + 'aZ\x20=\x20axis.' + 'z\x20*\x20sin;\x0d\x0a' + '\x09float\x20qua' + 'W\x20=\x20cos(ha' + 'lfAngle);\x0d' + '\x0a\x09\x0d\x0a\x09//vec' + '4\x20q=vec4(q' + 'uaX,quaY,q' + 'uaZ,quaW);' + '\x0d\x0a\x09//vec3\x20' + 'temp\x20=\x20cro' + 'ss(q.xyz,\x20' + 'vector)\x20+\x20' + 'q.w\x20*\x20vect' + 'or;\x0d\x0a\x09//re' + 'turn\x20(cros' + 's(temp,\x20-q' + '.xyz)\x20+\x20do' + 't(q.xyz,ve') + ('ctor)\x20*\x20q.' + 'xyz\x20+\x20q.w\x20' + '*\x20temp);\x0d\x0a' + '\x09\x0d\x0a\x09float\x20' + 'x\x20=\x20quaX\x20+' + '\x20quaX;\x0d\x0a\x20\x20' + '\x20\x20float\x20y\x20' + '=\x20quaY\x20+\x20q' + 'uaY;\x0d\x0a\x20\x20\x20\x20' + 'float\x20z\x20=\x20' + 'quaZ\x20+\x20qua' + 'Z;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20wx\x20=\x20q' + 'uaW\x20*\x20x;\x0d\x0a' + '\x20\x20\x20\x20float\x20' + 'wy\x20=\x20quaW\x20' + '*\x20y;\x0d\x0a\x20\x20\x20\x20' + 'float\x20wz\x20=' + '\x20quaW\x20*\x20z;' + '\x0d\x0a\x09float\x20x' + 'x\x20=\x20quaX\x20*' + '\x20x;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20xy\x20=\x20' + 'quaX\x20*\x20y;\x0d' + '\x0a\x09float\x20xz' + '\x20=\x20quaX\x20*\x20' + 'z;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20yy\x20=\x20q' + 'uaY\x20*\x20y;\x0d\x0a' + '\x20\x20\x20\x20float\x20' + 'yz\x20=\x20quaY\x20' + '*\x20z;\x0d\x0a\x20\x20\x20\x20' + 'float\x20zz\x20=' + '\x20quaZ\x20*\x20z;' + '\x0d\x0a\x0d\x0a\x20\x20\x20\x20re' + 'turn\x20vec3(' + '((vector.x' + '\x20*\x20((1.0\x20-' + '\x20yy)\x20-\x20zz)' + ')\x20+\x20(vecto' + 'r.y\x20*\x20(xy\x20' + '-\x20wz)))\x20+\x20' + '(vector.z\x20' + '*\x20(xz\x20+\x20wy' + ')),\x0d\x0a\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20((vector.' + 'x\x20*\x20(xy\x20+\x20' + 'wz))\x20+\x20(ve' + 'ctor.y\x20*\x20(' + '(1.0\x20-\x20xx)' + '\x20-\x20zz)))\x20+' + '\x20(vector.z' + '\x20*\x20(yz\x20-\x20w' + 'x)),\x0d\x0a\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20((vector' + '.x\x20*\x20(xz\x20-' + '\x20wy))\x20+\x20(v' + 'ector.y\x20*\x20' + '(yz\x20+\x20wx))' + ')\x20+\x20(vecto' + 'r.z\x20*\x20((1.' + '0\x20-\x20xx)\x20-\x20' + 'yy)));\x0d\x0a\x09\x0d' + '\x0a}\x0d\x0a\x0d\x0avec3' + '\x20rotationB' + 'yQuaternio' + 'ns(in\x20vec3' + '\x20v,in\x20vec4' + '\x20q)\x20\x0d\x0a{\x0d\x0a\x09' + 'return\x20v\x20+' + '\x202.0\x20*\x20cro' + 'ss(q.xyz,\x20' + 'cross(q.xy' + 'z,\x20v)\x20+\x20q.' + 'w\x20*\x20v);\x0d\x0a}' + '\x0d\x0a\x0d\x0a\x20\x0d\x0a#if' + '\x20defined(V' + 'ELOCITYOVE' + 'RLIFETIMEC' + 'URVE)||def' + 'ined(VELOC' + 'ITYOVERLIF' + 'ETIMERANDO' + 'MCURVE)||d' + 'efined(SIZ' + 'EOVERLIFET' + 'IMECURVE)|' + '|defined(S' + 'IZEOVERLIF' + 'ETIMECURVE' + 'SEPERATE)|' + '|defined(S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVES)||' + 'defined(SI' + 'ZEOVERLIFE' + 'TIMERANDOM') + ('CURVESSEPE' + 'RATE)\x0d\x0aflo' + 'at\x20getCurV' + 'alueFromGr' + 'adientFloa' + 't(in\x20vec2\x20' + 'gradientNu' + 'mbers[4],i' + 'n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20curVal' + 'ue;\x0d\x0a\x09for(' + 'int\x20i=1;i<' + '4;i++)\x0d\x0a\x09{' + '\x0d\x0a\x09\x09vec2\x20g' + 'radientNum' + 'ber=gradie' + 'ntNumbers[' + 'i];\x0d\x0a\x09\x09flo' + 'at\x20key=gra' + 'dientNumbe' + 'r.x;\x0d\x0a\x09\x09if' + '(key>=norm' + 'alizedAge)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'vec2\x20lastG' + 'radientNum' + 'ber=gradie' + 'ntNumbers[' + 'i-1];\x0d\x0a\x09\x09\x09' + 'float\x20last' + 'Key=lastGr' + 'adientNumb' + 'er.x;\x0d\x0a\x09\x09\x09' + 'float\x20age=' + '(normalize' + 'dAge-lastK' + 'ey)/(key-l' + 'astKey);\x0d\x0a' + '\x09\x09\x09curValu' + 'e=mix(last' + 'GradientNu' + 'mber.y,gra' + 'dientNumbe' + 'r.y,age);\x0d' + '\x0a\x09\x09\x09break;' + '\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d' + '\x0a\x09return\x20c' + 'urValue;\x0d\x0a' + '}\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(VELOC' + 'ITYOVERLIF' + 'ETIMECURVE' + ')||defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VE)||defin' + 'ed(ROTATIO' + 'NOVERLIFET' + 'IMECURVE)|' + '|defined(R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S)\x0d\x0afloat\x20' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(in\x20vec2\x20g' + 'radientNum' + 'bers[4],in' + '\x20float\x20nor' + 'malizedAge' + ')\x0d\x0a{\x0d\x0a\x09flo' + 'at\x20totalVa' + 'lue=0.0;\x0d\x0a' + '\x09for(int\x20i' + '=1;i<4;i++' + ')\x0d\x0a\x09{\x0d\x0a\x09\x09v' + 'ec2\x20gradie' + 'ntNumber=g' + 'radientNum' + 'bers[i];\x0d\x0a' + '\x09\x09float\x20ke' + 'y=gradient' + 'Number.x;\x0d' + '\x0a\x09\x09vec2\x20la' + 'stGradient' + 'Number=gra' + 'dientNumbe' + 'rs[i-1];\x0d\x0a' + '\x09\x09float\x20la' + 'stValue=la' + 'stGradient' + 'Number.y;\x0d' + '\x0a\x09\x09\x0d\x0a\x09\x09if(' + 'key>=norma') + ('lizedAge){' + '\x0d\x0a\x09\x09\x09float' + '\x20lastKey=l' + 'astGradien' + 'tNumber.x;' + '\x0d\x0a\x09\x09\x09float' + '\x20age=(norm' + 'alizedAge-' + 'lastKey)/(' + 'key-lastKe' + 'y);\x0d\x0a\x09\x09\x09to' + 'talValue+=' + '(lastValue' + '+mix(lastV' + 'alue,gradi' + 'entNumber.' + 'y,age))/2.' + '0*a_ShapeP' + 'ositionSta' + 'rtLifeTime' + '.w*(normal' + 'izedAge-la' + 'stKey);\x0d\x0a\x09' + '\x09\x09break;\x0d\x0a' + '\x09\x09}\x0d\x0a\x09\x09els' + 'e{\x0d\x0a\x09\x09\x09tot' + 'alValue+=(' + 'lastValue+' + 'gradientNu' + 'mber.y)/2.' + '0*a_ShapeP' + 'ositionSta' + 'rtLifeTime' + '.w*(key-la' + 'stGradient' + 'Number.x);' + '\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d' + '\x0a\x09return\x20t' + 'otalValue;' + '\x0d\x0a}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(COL' + 'OROVERLIFE' + 'TIME)||def' + 'ined(RANDO' + 'MCOLOROVER' + 'LIFETIME)\x0d' + '\x0avec4\x20getC' + 'olorFromGr' + 'adient(in\x20' + 'vec2\x20gradi' + 'entAlphas[' + '4],in\x20vec4' + '\x20gradientC' + 'olors[4],i' + 'n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x0d\x0a\x09ve' + 'c4\x20overTim' + 'eColor;\x0d\x0a\x09' + 'for(int\x20i=' + '1;i<4;i++)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09ve' + 'c2\x20gradien' + 'tAlpha=gra' + 'dientAlpha' + 's[i];\x0d\x0a\x09\x09f' + 'loat\x20alpha' + 'Key=gradie' + 'ntAlpha.x;' + '\x0d\x0a\x09\x09if(alp' + 'haKey>=nor' + 'malizedAge' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09vec2\x20last' + 'GradientAl' + 'pha=gradie' + 'ntAlphas[i' + '-1];\x0d\x0a\x09\x09\x09f' + 'loat\x20lastA' + 'lphaKey=la' + 'stGradient' + 'Alpha.x;\x0d\x0a' + '\x09\x09\x09float\x20a' + 'ge=(normal' + 'izedAge-la' + 'stAlphaKey' + ')/(alphaKe' + 'y-lastAlph' + 'aKey);\x0d\x0a\x09\x09' + '\x09overTimeC' + 'olor.a=mix' + '(lastGradi' + 'entAlpha.y' + ',gradientA' + 'lpha.y,age' + ');\x0d\x0a\x09\x09\x09bre' + 'ak;\x0d\x0a\x09\x09}\x0d\x0a' + '\x09}\x0d\x0a\x09\x0d\x0a\x09fo' + 'r(int\x20i=1;') + ('i<4;i++)\x0d\x0a' + '\x09{\x0d\x0a\x09\x09vec4' + '\x20gradientC' + 'olor=gradi' + 'entColors[' + 'i];\x0d\x0a\x09\x09flo' + 'at\x20colorKe' + 'y=gradient' + 'Color.x;\x0d\x0a' + '\x09\x09if(color' + 'Key>=norma' + 'lizedAge)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09v' + 'ec4\x20lastGr' + 'adientColo' + 'r=gradient' + 'Colors[i-1' + '];\x0d\x0a\x09\x09\x09flo' + 'at\x20lastCol' + 'orKey=last' + 'GradientCo' + 'lor.x;\x0d\x0a\x09\x09' + '\x09float\x20age' + '=(normaliz' + 'edAge-last' + 'ColorKey)/' + '(colorKey-' + 'lastColorK' + 'ey);\x0d\x0a\x09\x09\x09o' + 'verTimeCol' + 'or.rgb=mix' + '(gradientC' + 'olors[i-1]' + '.yzw,gradi' + 'entColor.y' + 'zw,age);\x0d\x0a' + '\x09\x09\x09break;\x0d' + '\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a' + '\x09return\x20ov' + 'erTimeColo' + 'r;\x0d\x0a}\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a\x0d\x0a#' + 'if\x20defined' + '(TEXTURESH' + 'EETANIMATI' + 'ONCURVE)||' + 'defined(TE' + 'XTURESHEET' + 'ANIMATIONR' + 'ANDOMCURVE' + ')\x0d\x0afloat\x20g' + 'etFrameFro' + 'mGradient(' + 'in\x20vec2\x20gr' + 'adientFram' + 'es[4],in\x20f' + 'loat\x20norma' + 'lizedAge)\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20overTimeF' + 'rame;\x0d\x0a\x09fo' + 'r(int\x20i=1;' + 'i<4;i++)\x0d\x0a' + '\x09{\x0d\x0a\x09\x09vec2' + '\x20gradientF' + 'rame=gradi' + 'entFrames[' + 'i];\x0d\x0a\x09\x09flo' + 'at\x20key=gra' + 'dientFrame' + '.x;\x0d\x0a\x09\x09if(' + 'key>=norma' + 'lizedAge)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09v' + 'ec2\x20lastGr' + 'adientFram' + 'e=gradient' + 'Frames[i-1' + '];\x0d\x0a\x09\x09\x09flo' + 'at\x20lastKey' + '=lastGradi' + 'entFrame.x' + ';\x0d\x0a\x09\x09\x09floa' + 't\x20age=(nor' + 'malizedAge' + '-lastKey)/' + '(key-lastK' + 'ey);\x0d\x0a\x09\x09\x09o' + 'verTimeFra' + 'me=mix(las' + 'tGradientF' + 'rame.y,gra' + 'dientFrame' + '.y,age);\x0d\x0a' + '\x09\x09\x09break;\x0d' + '\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a' + '\x09return\x20fl' + 'oor(overTi' + 'meFrame);\x0d' + '\x0a}\x0d\x0a#endif') + ('\x0d\x0a\x0d\x0a#if\x20de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECONS' + 'TANT)||def' + 'ined(VELOC' + 'ITYOVERLIF' + 'ETIMECURVE' + ')||defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCON' + 'STANT)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCURVE)\x0d\x0a' + 'vec3\x20compu' + 'teParticle' + 'LifeVeloci' + 'ty(in\x20floa' + 't\x20normaliz' + 'edAge)\x0d\x0a{\x0d' + '\x0a\x20\x20vec3\x20ou' + 'tLifeVeloc' + 'ity;\x0d\x0a\x20\x20#i' + 'fdef\x20VELOC' + 'ITYOVERLIF' + 'ETIMECONST' + 'ANT\x0d\x0a\x09\x20out' + 'LifeVeloci' + 'ty=u_VOLVe' + 'locityCons' + 't;\x20\x0d\x0a\x20\x20#en' + 'dif\x0d\x0a\x20\x20#if' + 'def\x20VELOCI' + 'TYOVERLIFE' + 'TIMECURVE\x0d' + '\x0a\x20\x20\x20\x20\x20outL' + 'ifeVelocit' + 'y=\x20vec3(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_V' + 'OLVelocity' + 'GradientX,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_VOLV' + 'elocityGra' + 'dientY,nor' + 'malizedAge' + '),getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntZ,normal' + 'izedAge));' + '\x0d\x0a\x20\x20#endif' + '\x0d\x0a\x20\x20#ifdef' + '\x20VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCON' + 'STANT\x0d\x0a\x09\x20o' + 'utLifeVelo' + 'city=mix(u' + '_VOLVeloci' + 'tyConst,u_' + 'VOLVelocit' + 'yConstMax,' + 'vec3(a_Ran' + 'dom1.y,a_R' + 'andom1.z,a' + '_Random1.w' + '));\x20\x0d\x0a\x20\x20#e' + 'ndif\x0d\x0a\x20\x20#i' + 'fdef\x20VELOC' + 'ITYOVERLIF' + 'ETIMERANDO' + 'MCURVE\x0d\x0a\x20\x20' + '\x20\x20\x20outLife' + 'Velocity=v' + 'ec3(mix(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_V' + 'OLVelocity' + 'GradientX,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_VOLV' + 'elocityGra' + 'dientMaxX,' + 'normalized' + 'Age),a_Ran') + ('dom1.y),\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntY,normal' + 'izedAge),g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientM' + 'axY,normal' + 'izedAge),a' + '_Random1.z' + '),\x0d\x0a\x09\x09\x09\x09\x09\x20' + 'mix(getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_VOLVe' + 'locityGrad' + 'ientZ,norm' + 'alizedAge)' + ',getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_VOLVeloc' + 'ityGradien' + 'tMaxZ,norm' + 'alizedAge)' + ',a_Random1' + '.w));\x0d\x0a\x20\x20#' + 'endif\x0d\x0a\x09\x09\x09' + '\x09\x09\x0d\x0a\x20\x20retu' + 'rn\x20outLife' + 'Velocity;\x0d' + '\x0a}\x20\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avec3\x20' + 'computePar' + 'ticlePosit' + 'ion(in\x20vec' + '3\x20startVel' + 'ocity,\x20in\x20' + 'vec3\x20lifeV' + 'elocity,in' + '\x20float\x20age' + ',in\x20float\x20' + 'normalized' + 'Age,vec3\x20g' + 'ravityVelo' + 'city,vec4\x20' + 'worldRotat' + 'ion)\x0d\x0a{\x0d\x0a\x20' + '\x20\x20vec3\x20sta' + 'rtPosition' + ';\x0d\x0a\x20\x20\x20vec3' + '\x20lifePosit' + 'ion;\x0d\x0a\x20\x20\x20#' + 'if\x20defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ECONSTANT)' + '||defined(' + 'VELOCITYOV' + 'ERLIFETIME' + 'CURVE)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCONSTANT' + ')||defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VE)\x0d\x0a\x09#ifd' + 'ef\x20VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T\x0d\x0a\x09\x09\x20\x20sta' + 'rtPosition' + '=startVelo' + 'city*age;\x0d' + '\x0a\x09\x09\x20\x20lifeP' + 'osition=li' + 'feVelocity' + '*age;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20VELOCI' + 'TYOVERLIFE' + 'TIMECURVE\x0d' + '\x0a\x09\x09\x20\x20start' + 'Position=s' + 'tartVeloci' + 'ty*age;\x0d\x0a\x09' + '\x09\x20\x20lifePos' + 'ition=vec3' + '(getTotalV') + ('alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entX,norma' + 'lizedAge),' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntY,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_VOLVeloc' + 'ityGradien' + 'tZ,normali' + 'zedAge));\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20VE' + 'LOCITYOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NT\x0d\x0a\x09\x09\x20\x20st' + 'artPositio' + 'n=startVel' + 'ocity*age;' + '\x0d\x0a\x09\x09\x20\x20life' + 'Position=l' + 'ifeVelocit' + 'y*age;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20VELOC' + 'ITYOVERLIF' + 'ETIMERANDO' + 'MCURVE\x0d\x0a\x09\x09' + '\x20\x20startPos' + 'ition=star' + 'tVelocity*' + 'age;\x0d\x0a\x09\x09\x20\x20' + 'lifePositi' + 'on=vec3(mi' + 'x(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_VOLVe' + 'locityGrad' + 'ientX,norm' + 'alizedAge)' + ',getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entMaxX,no' + 'rmalizedAg' + 'e),a_Rando' + 'm1.y)\x0d\x0a\x09\x20\x20' + '\x20\x20\x20\x20,mix(g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_VOLVeloc' + 'ityGradien' + 'tY,normali' + 'zedAge),ge' + 'tTotalValu' + 'eFromGradi' + 'entFloat(u' + '_VOLVeloci' + 'tyGradient' + 'MaxY,norma' + 'lizedAge),' + 'a_Random1.' + 'z)\x0d\x0a\x09\x20\x20\x20\x20\x20' + '\x20,mix(getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_V' + 'OLVelocity' + 'GradientZ,' + 'normalized' + 'Age),getTo' + 'talValueFr' + 'omGradient' + 'Float(u_VO' + 'LVelocityG' + 'radientMax' + 'Z,normaliz' + 'edAge),a_R' + 'andom1.w))' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09vec3' + '\x20finalPosi' + 'tion;\x0d\x0a\x09if' + '(u_VOLSpac' + 'eType==0){' + '\x0d\x0a\x09\x20\x20if(u_') + ('ScalingMod' + 'e!=2)\x0d\x0a\x09\x20\x20' + '\x20finalPosi' + 'tion\x20=rota' + 'tionByQuat' + 'ernions(u_' + 'PositionSc' + 'ale*(a_Sha' + 'pePosition' + 'StartLifeT' + 'ime.xyz+st' + 'artPositio' + 'n+lifePosi' + 'tion),worl' + 'dRotation)' + ';\x0d\x0a\x09\x20\x20else' + '\x0d\x0a\x09\x20\x20\x20fina' + 'lPosition\x20' + '=rotationB' + 'yQuaternio' + 'ns(u_Posit' + 'ionScale*a' + '_ShapePosi' + 'tionStartL' + 'ifeTime.xy' + 'z+startPos' + 'ition+life' + 'Position,w' + 'orldRotati' + 'on);\x0d\x0a\x09}\x0d\x0a' + '\x09else{\x0d\x0a\x09\x20' + '\x20if(u_Scal' + 'ingMode!=2' + ')\x0d\x0a\x09\x20\x20\x20\x20fi' + 'nalPositio' + 'n\x20=\x20rotati' + 'onByQuater' + 'nions(u_Po' + 'sitionScal' + 'e*(a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.xyz+star' + 'tPosition)' + ',worldRota' + 'tion)+life' + 'Position;\x0d' + '\x0a\x09\x20\x20else\x0d\x0a' + '\x09\x20\x20\x20\x20final' + 'Position\x20=' + '\x20rotationB' + 'yQuaternio' + 'ns(u_Posit' + 'ionScale*a' + '_ShapePosi' + 'tionStartL' + 'ifeTime.xy' + 'z+startPos' + 'ition,worl' + 'dRotation)' + '+lifePosit' + 'ion;\x0d\x0a\x09}\x0d\x0a' + '\x20\x20#else\x0d\x0a\x09' + '\x20startPosi' + 'tion=start' + 'Velocity*a' + 'ge;\x0d\x0a\x09\x20vec' + '3\x20finalPos' + 'ition;\x0d\x0a\x09\x20' + 'if(u_Scali' + 'ngMode!=2)' + '\x0d\x0a\x09\x09\x09final' + 'Position\x20=' + '\x20rotationB' + 'yQuaternio' + 'ns(u_Posit' + 'ionScale*(' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'yz+startPo' + 'sition),wo' + 'rldRotatio' + 'n);\x0d\x0a\x09\x20els' + 'e\x0d\x0a\x09\x20\x20\x20\x09fi' + 'nalPositio' + 'n\x20=\x20rotati' + 'onByQuater' + 'nions(u_Po' + 'sitionScal' + 'e*a_ShapeP' + 'ositionSta' + 'rtLifeTime' + '.xyz+start' + 'Position,w' + 'orldRotati' + 'on);\x0d\x0a\x20\x20#e' + 'ndif\x0d\x0a\x20\x20\x0d\x0a' + '\x20\x20if(u_Sim' + 'ulationSpa') + ('ce==0)\x0d\x0a\x20\x20' + '\x20\x20finalPos' + 'ition=fina' + 'lPosition+' + 'a_Simulati' + 'onWorldPos' + 'tion;\x0d\x0a\x20\x20e' + 'lse\x20if(u_S' + 'imulationS' + 'pace==1)\x20\x0d' + '\x0a\x20\x20\x20\x20final' + 'Position=f' + 'inalPositi' + 'on+u_World' + 'Position;\x0d' + '\x0a\x20\x20\x0d\x0a\x20\x20fin' + 'alPosition' + '+=0.5*grav' + 'ityVelocit' + 'y*age;\x0d\x0a\x20\x0d' + '\x0a\x20\x20return\x20' + '\x20finalPosi' + 'tion;\x0d\x0a}\x0d\x0a' + '\x0d\x0a\x0d\x0avec4\x20c' + 'omputePart' + 'icleColor(' + 'in\x20vec4\x20co' + 'lor,in\x20flo' + 'at\x20normali' + 'zedAge)\x0d\x0a{' + '\x0d\x0a\x09#ifdef\x20' + 'COLOROVERL' + 'IFETIME\x0d\x0a\x09' + '\x20\x20color*=g' + 'etColorFro' + 'mGradient(' + 'u_ColorOve' + 'rLifeGradi' + 'entAlphas,' + 'u_ColorOve' + 'rLifeGradi' + 'entColors,' + 'normalized' + 'Age);\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x0d\x0a\x09' + '#ifdef\x20RAN' + 'DOMCOLOROV' + 'ERLIFETIME' + '\x0d\x0a\x09\x20\x20color' + '*=mix(getC' + 'olorFromGr' + 'adient(u_C' + 'olorOverLi' + 'feGradient' + 'Alphas,u_C' + 'olorOverLi' + 'feGradient' + 'Colors,nor' + 'malizedAge' + '),getColor' + 'FromGradie' + 'nt(u_MaxCo' + 'lorOverLif' + 'eGradientA' + 'lphas,u_Ma' + 'xColorOver' + 'LifeGradie' + 'ntColors,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.y);\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0avec2\x20c' + 'omputePart' + 'icleSizeBi' + 'llbard(in\x20' + 'vec2\x20size,' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x0d\x0a\x09#' + 'ifdef\x20SIZE' + 'OVERLIFETI' + 'MECURVE\x0d\x0a\x09' + '\x09size*=get' + 'CurValueFr' + 'omGradient' + 'Float(u_SO' + 'LSizeGradi' + 'ent,normal' + 'izedAge);\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20SI' + 'ZEOVERLIFE' + 'TIMERANDOM' + 'CURVES\x0d\x0a\x09\x20' + '\x20\x20\x20size*=m' + 'ix(getCurV' + 'alueFromGr') + ('adientFloa' + 't(u_SOLSiz' + 'eGradient,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMax,norma' + 'lizedAge),' + 'a_Random0.' + 'z);\x20\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE\x0d\x0a\x09\x09size' + '*=vec2(get' + 'CurValueFr' + 'omGradient' + 'Float(u_SO' + 'LSizeGradi' + 'entX,norma' + 'lizedAge),' + 'getCurValu' + 'eFromGradi' + 'entFloat(u' + '_SOLSizeGr' + 'adientY,no' + 'rmalizedAg' + 'e));\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE\x0d' + '\x0a\x09\x20\x20\x20\x20size' + '*=vec2(mix' + '(getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientX,n' + 'ormalizedA' + 'ge),getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + 'MaxX,norma' + 'lizedAge),' + 'a_Random0.' + 'z)\x0d\x0a\x09\x20\x20\x20\x20,' + 'mix(getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + 'Y,normaliz' + 'edAge),get' + 'CurValueFr' + 'omGradient' + 'Float(u_SO' + 'LSizeGradi' + 'entMaxY,no' + 'rmalizedAg' + 'e),a_Rando' + 'm0.z));\x0d\x0a\x09' + '#endif\x0d\x0a\x09r' + 'eturn\x20size' + ';\x0d\x0a}\x0d\x0a\x0d\x0a#i' + 'fdef\x20RENDE' + 'RMODE_MESH' + '\x0d\x0avec3\x20com' + 'putePartic' + 'leSizeMesh' + '(in\x20vec3\x20s' + 'ize,in\x20flo' + 'at\x20normali' + 'zedAge)\x0d\x0a{' + '\x0d\x0a\x09#ifdef\x20' + 'SIZEOVERLI' + 'FETIMECURV' + 'E\x0d\x0a\x09\x09size*' + '=getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radient,no' + 'rmalizedAg' + 'e);\x0d\x0a\x09#end' + 'if\x0d\x0a\x09#ifde' + 'f\x20SIZEOVER' + 'LIFETIMERA' + 'NDOMCURVES' + '\x0d\x0a\x09\x20\x20\x20\x20siz' + 'e*=mix(get' + 'CurValueFr' + 'omGradient') + ('Float(u_SO' + 'LSizeGradi' + 'ent,normal' + 'izedAge),g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'SOLSizeGra' + 'dientMax,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.z);\x20\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + '#ifdef\x20SIZ' + 'EOVERLIFET' + 'IMECURVESE' + 'PERATE\x0d\x0a\x09\x09' + 'size*=vec3' + '(getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientX,n' + 'ormalizedA' + 'ge),getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + 'Y,normaliz' + 'edAge),get' + 'CurValueFr' + 'omGradient' + 'Float(u_SO' + 'LSizeGradi' + 'entZ,norma' + 'lizedAge))' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09#ifdef\x20' + 'SIZEOVERLI' + 'FETIMERAND' + 'OMCURVESSE' + 'PERATE\x0d\x0a\x09\x20' + '\x20\x20\x20size*=v' + 'ec3(mix(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientX,norm' + 'alizedAge)' + ',getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientMax' + 'X,normaliz' + 'edAge),a_R' + 'andom0.z)\x0d' + '\x0a\x09\x20\x20\x20\x20,mix' + '(getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientY,n' + 'ormalizedA' + 'ge),getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + 'MaxY,norma' + 'lizedAge),' + 'a_Random0.' + 'z)\x0d\x0a\x09\x09,mix' + '(getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientZ,n' + 'ormalizedA' + 'ge),getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + 'MaxZ,norma' + 'lizedAge),' + 'a_Random0.' + 'z));\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09retu' + 'rn\x20size;\x0d\x0a' + '}\x0d\x0a#endif\x0d' + '\x0a\x0d\x0afloat\x20c' + 'omputePart' + 'icleRotati' + 'onFloat(in' + '\x20float\x20rot' + 'ation,in\x20f' + 'loat\x20age,i') + ('n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x20\x0d\x0a\x09#' + 'ifdef\x20ROTA' + 'TIONOVERLI' + 'FETIME\x0d\x0a\x09\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIMECON' + 'STANT\x0d\x0a\x09\x09\x09' + 'float\x20ageR' + 'ot=u_ROLAn' + 'gularVeloc' + 'ityConst*a' + 'ge;\x0d\x0a\x09\x20\x20\x20\x20' + '\x20\x20\x20\x20rotati' + 'on+=ageRot' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09#ifde' + 'f\x20ROTATION' + 'OVERLIFETI' + 'MECURVE\x0d\x0a\x09' + '\x09\x09rotation' + '+=getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn' + 'gularVeloc' + 'ityGradien' + 't,normaliz' + 'edAge);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NTS\x0d\x0a\x09\x09\x09fl' + 'oat\x20ageRot' + '=mix(u_ROL' + 'AngularVel' + 'ocityConst' + ',u_ROLAngu' + 'larVelocit' + 'yConstMax,' + 'a_Random0.' + 'w)*age;\x0d\x0a\x09' + '\x20\x20\x20\x20\x20\x20\x20\x20ro' + 'tation+=ag' + 'eRot;\x0d\x0a\x09\x20\x20' + '\x20\x20#endif\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S\x0d\x0a\x09\x09\x09rota' + 'tion+=mix(' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_ROLAngu' + 'larVelocit' + 'yGradient,' + 'normalized' + 'Age),getTo' + 'talValueFr' + 'omGradient' + 'Float(u_RO' + 'LAngularVe' + 'locityGrad' + 'ientMax,no' + 'rmalizedAg' + 'e),a_Rando' + 'm0.w);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMESEPER' + 'ATE\x0d\x0a\x09\x09#if' + 'def\x20ROTATI' + 'ONOVERLIFE' + 'TIMECONSTA' + 'NT\x0d\x0a\x09\x09\x09flo' + 'at\x20ageRot=' + 'u_ROLAngul' + 'arVelocity' + 'ConstSepra' + 'rate.z*age' + ';\x0d\x0a\x09\x20\x20\x20\x20\x20\x20' + '\x20\x20rotation' + '+=ageRot;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'CURVE\x0d\x0a\x09\x09\x09' + 'rotation+=' + 'getTotalVa' + 'lueFromGra' + 'dientFloat') + ('(u_ROLAngu' + 'larVelocit' + 'yGradientZ' + ',normalize' + 'dAge);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIMERAN' + 'DOMCONSTAN' + 'TS\x0d\x0a\x09\x09\x09flo' + 'at\x20ageRot=' + 'mix(u_ROLA' + 'ngularVelo' + 'cityConstS' + 'eprarate.z' + ',u_ROLAngu' + 'larVelocit' + 'yConstMaxS' + 'eprarate.z' + ',a_Random0' + '.w)*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES\x0d\x0a\x09\x09\x09rot' + 'ation+=mix' + '(getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + 'Z,normaliz' + 'edAge),get' + 'TotalValue' + 'FromGradie' + 'ntFloat(u_' + 'ROLAngular' + 'VelocityGr' + 'adientMaxZ' + ',normalize' + 'dAge),a_Ra' + 'ndom0.w));' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09return\x20r' + 'otation;\x0d\x0a' + '}\x0d\x0a\x0d\x0a#if\x20d' + 'efined(REN' + 'DERMODE_ME' + 'SH)&&(defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIME)||def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIMESEPER' + 'ATE))\x0d\x0avec' + '3\x20computeP' + 'articleRot' + 'ationVec3(' + 'in\x20vec3\x20ro' + 'tation,in\x20' + 'float\x20age,' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x20\x0d\x0a\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIME\x0d\x0a\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIMECON' + 'STANT\x0d\x0a\x09\x09\x09' + 'float\x20ageR' + 'ot=u_ROLAn' + 'gularVeloc' + 'ityConst*a' + 'ge;\x0d\x0a\x09\x20\x20\x20\x20' + '\x20\x20\x20\x20rotati' + 'on+=ageRot' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09#ifde' + 'f\x20ROTATION' + 'OVERLIFETI' + 'MECURVE\x0d\x0a\x09' + '\x09\x09rotation' + '+=getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn' + 'gularVeloc' + 'ityGradien' + 't,normaliz') + ('edAge);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NTS\x0d\x0a\x09\x09\x09fl' + 'oat\x20ageRot' + '=mix(u_ROL' + 'AngularVel' + 'ocityConst' + ',u_ROLAngu' + 'larVelocit' + 'yConstMax,' + 'a_Random0.' + 'w)*age;\x0d\x0a\x09' + '\x20\x20\x20\x20\x20\x20\x20\x20ro' + 'tation+=ag' + 'eRot;\x0d\x0a\x09\x20\x20' + '\x20\x20#endif\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S\x0d\x0a\x09\x09\x09rota' + 'tion+=mix(' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_ROLAngu' + 'larVelocit' + 'yGradient,' + 'normalized' + 'Age),getTo' + 'talValueFr' + 'omGradient' + 'Float(u_RO' + 'LAngularVe' + 'locityGrad' + 'ientMax,no' + 'rmalizedAg' + 'e),a_Rando' + 'm0.w);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMESEPER' + 'ATE\x0d\x0a\x09\x09#if' + 'def\x20ROTATI' + 'ONOVERLIFE' + 'TIMECONSTA' + 'NT\x0d\x0a\x09\x09\x09vec' + '3\x20ageRot=u' + '_ROLAngula' + 'rVelocityC' + 'onstSeprar' + 'ate*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIMECUR' + 'VE\x0d\x0a\x09\x09\x09rot' + 'ation+=vec' + '3(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn' + 'gularVeloc' + 'ityGradien' + 'tX,normali' + 'zedAge),ge' + 'tTotalValu' + 'eFromGradi' + 'entFloat(u' + '_ROLAngula' + 'rVelocityG' + 'radientY,n' + 'ormalizedA' + 'ge),getTot' + 'alValueFro' + 'mGradientF' + 'loat(u_ROL' + 'AngularVel' + 'ocityGradi' + 'entZ,norma' + 'lizedAge))' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09#ifde' + 'f\x20ROTATION' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANTS\x0d\x0a\x09' + '\x09\x09vec3\x20age' + 'Rot=mix(u_' + 'ROLAngular' + 'VelocityCo') + ('nstSeprara' + 'te,u_ROLAn' + 'gularVeloc' + 'ityConstMa' + 'xSeprarate' + ',a_Random0' + '.w)*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES\x0d\x0a\x09\x09\x09rot' + 'ation+=vec' + '3(mix(getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientX,nor' + 'malizedAge' + '),getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn' + 'gularVeloc' + 'ityGradien' + 'tMaxX,norm' + 'alizedAge)' + ',a_Random0' + '.w)\x0d\x0a\x09\x20\x20\x20\x20' + '\x20\x20\x20\x20,mix(g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_ROLAngul' + 'arVelocity' + 'GradientY,' + 'normalized' + 'Age),getTo' + 'talValueFr' + 'omGradient' + 'Float(u_RO' + 'LAngularVe' + 'locityGrad' + 'ientMaxY,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.w)\x0d\x0a\x09\x20' + '\x20\x20\x20\x20\x20\x20\x20,mi' + 'x(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn' + 'gularVeloc' + 'ityGradien' + 'tZ,normali' + 'zedAge),ge' + 'tTotalValu' + 'eFromGradi' + 'entFloat(u' + '_ROLAngula' + 'rVelocityG' + 'radientMax' + 'Z,normaliz' + 'edAge),a_R' + 'andom0.w))' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x09return\x20' + 'rotation;\x0d' + '\x0a}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0avec2\x20c' + 'omputePart' + 'icleUV(in\x20' + 'vec2\x20uv,in' + '\x20float\x20nor' + 'malizedAge' + ')\x0d\x0a{\x20\x0d\x0a\x09#i' + 'fdef\x20TEXTU' + 'RESHEETANI' + 'MATIONCURV' + 'E\x0d\x0a\x09\x09float' + '\x20cycleNorm' + 'alizedAge=' + 'normalized' + 'Age*u_TSAC' + 'ycles;\x0d\x0a\x09\x09' + 'float\x20fram' + 'e=getFrame' + 'FromGradie' + 'nt(u_TSAGr' + 'adientUVs,' + 'cycleNorma' + 'lizedAge-f' + 'loor(cycle') + ('Normalized' + 'Age));\x0d\x0a\x09\x09' + 'float\x20tota' + 'lULength=f' + 'rame*u_TSA' + 'SubUVLengt' + 'h.x;\x0d\x0a\x09\x09fl' + 'oat\x20floorT' + 'otalULengt' + 'h=floor(to' + 'talULength' + ');\x0d\x0a\x09\x20\x20\x20\x20u' + 'v.x+=total' + 'ULength-fl' + 'oorTotalUL' + 'ength;\x0d\x0a\x09\x09' + 'uv.y+=floo' + 'rTotalULen' + 'gth*u_TSAS' + 'ubUVLength' + '.y;\x0d\x0a\x20\x20\x20\x20#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20TEXTU' + 'RESHEETANI' + 'MATIONRAND' + 'OMCURVE\x0d\x0a\x09' + '\x09float\x20cyc' + 'leNormaliz' + 'edAge=norm' + 'alizedAge*' + 'u_TSACycle' + 's;\x0d\x0a\x09\x09floa' + 't\x20uvNormal' + 'izedAge=cy' + 'cleNormali' + 'zedAge-flo' + 'or(cycleNo' + 'rmalizedAg' + 'e);\x0d\x0a\x09\x20\x20\x20\x20' + 'float\x20fram' + 'e=floor(mi' + 'x(getFrame' + 'FromGradie' + 'nt(u_TSAGr' + 'adientUVs,' + 'uvNormaliz' + 'edAge),get' + 'FrameFromG' + 'radient(u_' + 'TSAMaxGrad' + 'ientUVs,uv' + 'Normalized' + 'Age),a_Ran' + 'dom1.x));\x0d' + '\x0a\x09\x09float\x20t' + 'otalULengt' + 'h=frame*u_' + 'TSASubUVLe' + 'ngth.x;\x0d\x0a\x09' + '\x09float\x20flo' + 'orTotalULe' + 'ngth=floor' + '(totalULen' + 'gth);\x0d\x0a\x09\x20\x20' + '\x20\x20uv.x+=to' + 'talULength' + '-floorTota' + 'lULength;\x0d' + '\x0a\x09\x09uv.y+=f' + 'loorTotalU' + 'Length*u_T' + 'SASubUVLen' + 'gth.y;\x0d\x0a\x20\x20' + '\x20\x20#endif\x0d\x0a' + '\x09return\x20uv' + ';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20main()\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20age\x20=\x20u_C' + 'urrentTime' + '\x20-\x20a_Direc' + 'tionTime.w' + ';\x0d\x0a\x09float\x20' + 'normalized' + 'Age\x20=\x20age/' + 'a_ShapePos' + 'itionStart' + 'LifeTime.w' + ';\x0d\x0a\x09vec3\x20l' + 'ifeVelocit' + 'y;\x0d\x0a\x09if(no' + 'rmalizedAg' + 'e<1.0)\x0d\x0a\x09{' + '\x20\x0d\x0a\x09\x09vec3\x20' + 'startVeloc' + 'ity=a_Dire' + 'ctionTime.' + 'xyz*a_Star' + 'tSpeed;\x0d\x0a\x09' + '\x09#if\x20defin') + ('ed(VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MECURVE)||' + 'defined(VE' + 'LOCITYOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NT)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE)\x0d\x0a\x09\x09\x09' + 'lifeVeloci' + 'ty=\x20comput' + 'eParticleL' + 'ifeVelocit' + 'y(normaliz' + 'edAge);//计' + '算粒子生命周期速度\x0d' + '\x0a\x09\x09#endif\x20' + '\x0d\x0a\x09\x09vec3\x20g' + 'ravityVelo' + 'city=u_Gra' + 'vity*age;\x0d' + '\x0a\x09\x09\x0d\x0a\x09\x09vec' + '4\x20worldRot' + 'ation;\x0d\x0a\x09\x09' + 'if(u_Simul' + 'ationSpace' + '==0)\x0d\x0a\x09\x09\x09w' + 'orldRotati' + 'on=a_Simul' + 'ationWorld' + 'Rotation;\x0d' + '\x0a\x09\x09else\x0d\x0a\x09' + '\x09\x09worldRot' + 'ation=u_Wo' + 'rldRotatio' + 'n;\x0d\x0a\x09\x09\x0d\x0a\x09\x09' + 'vec3\x20cente' + 'r=computeP' + 'articlePos' + 'ition(star' + 'tVelocity,' + '\x20lifeVeloc' + 'ity,\x20age,\x20' + 'normalized' + 'Age,gravit' + 'yVelocity,' + 'worldRotat' + 'ion);//计算粒' + '子位置\x0d\x0a\x09\x0d\x0a\x09\x0d' + '\x0a\x09\x09#ifdef\x20' + 'SPHERHBILL' + 'BOARD\x0d\x0a\x09\x09\x09' + 'vec2\x20corne' + 'r=a_Corner' + 'TextureCoo' + 'rdinate.xy' + ';//Billboa' + 'rd模式z轴无效\x0d\x0a' + '\x09\x09\x09vec3\x20ca' + 'meraUpVect' + 'or\x20=normal' + 'ize(u_Came' + 'raUp);//TO' + 'DO:是否外面归一化' + '\x0d\x0a\x09\x09\x09vec3\x20' + 'sideVector' + '\x20=\x20normali' + 'ze(cross(u' + '_CameraDir' + 'ection,cam' + 'eraUpVecto' + 'r));\x0d\x0a\x09\x09\x09v' + 'ec3\x20upVect' + 'or\x20=\x20norma' + 'lize(cross' + '(sideVecto' + 'r,u_Camera' + 'Direction)' + ');\x0d\x0a\x09\x09\x09cor' + 'ner*=compu' + 'teParticle' + 'SizeBillba' + 'rd(a_Start' + 'Size.xy,no' + 'rmalizedAg' + 'e);\x0d\x0a\x09\x09\x09#i' + 'f\x20defined(' + 'ROTATIONOV' + 'ERLIFETIME' + ')||defined' + '(ROTATIONO' + 'VERLIFETIM' + 'ESEPERATE)') + ('\x0d\x0a\x09\x09\x09\x09if(u' + '_ThreeDSta' + 'rtRotation' + '){\x0d\x0a\x09\x09\x09\x09\x09v' + 'ec3\x20rotati' + 'on=vec3(a_' + 'StartRotat' + 'ion0.xy,co' + 'mputeParti' + 'cleRotatio' + 'nFloat(a_S' + 'tartRotati' + 'on0.z,age,' + 'normalized' + 'Age));\x0d\x0a\x09\x09' + '\x09\x09\x09center\x20' + '+=\x20u_SizeS' + 'cale.xzy*r' + 'otationByE' + 'uler(corne' + 'r.x*sideVe' + 'ctor+corne' + 'r.y*upVect' + 'or,rotatio' + 'n);\x0d\x0a\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09\x09else' + '{\x0d\x0a\x09\x09\x09\x09\x09fl' + 'oat\x20rot\x20=\x20' + 'computePar' + 'ticleRotat' + 'ionFloat(a' + '_StartRota' + 'tion0.x,\x20a' + 'ge,normali' + 'zedAge);\x0d\x0a' + '\x09\x09\x09\x09\x09float' + '\x20c\x20=\x20cos(r' + 'ot);\x0d\x0a\x09\x09\x09\x09' + '\x09float\x20s\x20=' + '\x20sin(rot);' + '\x0d\x0a\x09\x09\x09\x09\x09mat' + '2\x20rotation' + '=\x20mat2(c,\x20' + '-s,\x20s,\x20c);' + '\x0d\x0a\x09\x09\x09\x09\x09cor' + 'ner=rotati' + 'on*corner;' + '\x0d\x0a\x09\x09\x09\x09\x09cen' + 'ter\x20+=\x20u_S' + 'izeScale.x' + 'zy*(corner' + '.x*sideVec' + 'tor+corner' + '.y*upVecto' + 'r);\x0d\x0a\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09#else' + '\x0d\x0a\x09\x09\x09\x09if(u' + '_ThreeDSta' + 'rtRotation' + '){\x0d\x0a\x09\x09\x09\x09\x09c' + 'enter\x20+=\x20u' + '_SizeScale' + '.xzy*rotat' + 'ionByEuler' + '(corner.x*' + 'sideVector' + '+corner.y*' + 'upVector,a' + '_StartRota' + 'tion0);\x0d\x0a\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09' + 'else{\x0d\x0a\x09\x09\x09' + '\x09\x09float\x20c\x20' + '=\x20cos(a_St' + 'artRotatio' + 'n0.x);\x0d\x0a\x09\x09' + '\x09\x09\x09float\x20s' + '\x20=\x20sin(a_S' + 'tartRotati' + 'on0.x);\x0d\x0a\x09' + '\x09\x09\x09\x09mat2\x20r' + 'otation=\x20m' + 'at2(c,\x20-s,' + '\x20s,\x20c);\x0d\x0a\x09' + '\x09\x09\x09\x09corner' + '=rotation*' + 'corner;\x0d\x0a\x09' + '\x09\x09\x09\x09center' + '\x20+=\x20u_Size' + 'Scale.xzy*' + '(corner.x*' + 'sideVector' + '+corner.y*' + 'upVector);' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x0d\x0a\x09\x09#ifde' + 'f\x20STRETCHE' + 'DBILLBOARD') + ('\x0d\x0a\x09\x09\x09vec2\x20' + 'corner=a_C' + 'ornerTextu' + 'reCoordina' + 'te.xy;//Bi' + 'llboard模式z' + '轴无效\x0d\x0a\x09\x09\x09ve' + 'c3\x20velocit' + 'y;\x0d\x0a\x09\x09\x09#if' + '\x20defined(V' + 'ELOCITYOVE' + 'RLIFETIMEC' + 'ONSTANT)||' + 'defined(VE' + 'LOCITYOVER' + 'LIFETIMECU' + 'RVE)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CONSTANT)|' + '|defined(V' + 'ELOCITYOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + ')\x0d\x0a\x09\x09\x09\x09if(' + 'u_VOLSpace' + 'Type==0)\x0d\x0a' + '\x09\x09\x09\x09veloci' + 'ty=rotatio' + 'nByQuatern' + 'ions(u_Siz' + 'eScale*(st' + 'artVelocit' + 'y+lifeVelo' + 'city),worl' + 'dRotation)' + '+gravityVe' + 'locity;\x0d\x0a\x09' + '\x09\x09\x09else\x0d\x0a\x09' + '\x09\x09\x09velocit' + 'y=rotation' + 'ByQuaterni' + 'ons(u_Size' + 'Scale*star' + 'tVelocity,' + 'worldRotat' + 'ion)+lifeV' + 'elocity+gr' + 'avityVeloc' + 'ity;\x0d\x0a\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + 'velocity=\x20' + 'rotationBy' + 'Quaternion' + 's(u_SizeSc' + 'ale*startV' + 'elocity,wo' + 'rldRotatio' + 'n)+gravity' + 'Velocity;\x0d' + '\x0a\x09\x09\x09#endif' + '\x09\x0d\x0a\x09\x09\x09vec3' + '\x20cameraUpV' + 'ector\x20=\x20no' + 'rmalize(ve' + 'locity);\x0d\x0a' + '\x09\x09\x09vec3\x20di' + 'rection\x20=\x20' + 'normalize(' + 'center-u_C' + 'ameraPos);' + '\x0d\x0a\x09\x09\x09vec3\x20' + 'sideVector' + '\x20=\x20normali' + 'ze(cross(d' + 'irection,n' + 'ormalize(v' + 'elocity)))' + ';\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09' + '\x09sideVecto' + 'r=u_SizeSc' + 'ale.xzy*si' + 'deVector;\x0d' + '\x0a\x09\x09\x09camera' + 'UpVector=l' + 'ength(vec3' + '(u_SizeSca' + 'le.x,0.0,0' + '.0))*camer' + 'aUpVector;' + '\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09' + 'vec2\x20size=' + 'computePar' + 'ticleSizeB' + 'illbard(a_' + 'StartSize.' + 'xy,normali' + 'zedAge);\x0d\x0a' + '\x09\x09\x09\x0d\x0a\x09\x09\x09co') + ('nst\x20mat2\x20r' + 'otaionZHal' + 'fPI=mat2(0' + '.0,\x20-1.0,\x20' + '1.0,\x200.0);' + '\x0d\x0a\x09\x09\x09corne' + 'r=rotaionZ' + 'HalfPI*cor' + 'ner;\x0d\x0a\x09\x09\x09c' + 'orner.y=co' + 'rner.y-abs' + '(corner.y)' + ';\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09' + '\x09float\x20spe' + 'ed=length(' + 'velocity);' + '//TODO:\x0d\x0a\x09' + '\x09\x09center\x20+' + '=sign(u_Si' + 'zeScale.x)' + '*(sign(u_S' + 'tretchedBi' + 'llboardLen' + 'gthScale)*' + 'size.x*cor' + 'ner.x*side' + 'Vector+(sp' + 'eed*u_Stre' + 'tchedBillb' + 'oardSpeedS' + 'cale+size.' + 'y*u_Stretc' + 'hedBillboa' + 'rdLengthSc' + 'ale)*corne' + 'r.y*camera' + 'UpVector);' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09\x09#if' + 'def\x20HORIZO' + 'NTALBILLBO' + 'ARD\x0d\x0a\x09\x09\x09ve' + 'c2\x20corner=' + 'a_CornerTe' + 'xtureCoord' + 'inate.xy;/' + '/Billboard' + '模式z轴无效\x0d\x0a\x09\x09' + '\x09const\x20vec' + '3\x20cameraUp' + 'Vector=vec' + '3(0.0,0.0,' + '1.0);\x0d\x0a\x09\x09\x09' + 'const\x20vec3' + '\x20sideVecto' + 'r\x20=\x20vec3(-' + '1.0,0.0,0.' + '0);\x0d\x0a\x09\x09\x09\x0d\x0a' + '\x09\x09\x09float\x20r' + 'ot\x20=\x20compu' + 'teParticle' + 'RotationFl' + 'oat(a_Star' + 'tRotation0' + '.x,\x20age,no' + 'rmalizedAg' + 'e);\x0d\x0a\x09\x09\x09fl' + 'oat\x20c\x20=\x20co' + 's(rot);\x0d\x0a\x09' + '\x09\x09float\x20s\x20' + '=\x20sin(rot)' + ';\x0d\x0a\x09\x09\x09mat2' + '\x20rotation=' + '\x20mat2(c,\x20-' + 's,\x20s,\x20c);\x0d' + '\x0a\x09\x09\x09corner' + '=rotation*' + 'corner*cos' + '(0.7853981' + '6339744830' + '9615660845' + '81988);//T' + 'ODO:临时缩小co' + 's45,不确定U3D' + '原因\x0d\x0a\x09\x09\x09cor' + 'ner*=compu' + 'teParticle' + 'SizeBillba' + 'rd(a_Start' + 'Size.xy,no' + 'rmalizedAg' + 'e);\x0d\x0a\x09\x09\x09ce' + 'nter\x20+=u_S' + 'izeScale.x' + 'zy*(corner' + '.x*sideVec' + 'tor+\x20corne' + 'r.y*camera' + 'UpVector);' + '\x0d\x0a\x09\x09#endif') + ('\x0d\x0a\x09\x0d\x0a\x09\x09#if' + 'def\x20VERTIC' + 'ALBILLBOAR' + 'D\x0d\x0a\x09\x09\x09vec2' + '\x20corner=a_' + 'CornerText' + 'ureCoordin' + 'ate.xy;//B' + 'illboard模式' + 'z轴无效\x0d\x0a\x09\x09\x09c' + 'onst\x20vec3\x20' + 'cameraUpVe' + 'ctor\x20=vec3' + '(0.0,1.0,0' + '.0);\x0d\x0a\x09\x09\x09v' + 'ec3\x20sideVe' + 'ctor\x20=\x20nor' + 'malize(cro' + 'ss(u_Camer' + 'aDirection' + ',cameraUpV' + 'ector));\x0d\x0a' + '\x09\x09\x09\x0d\x0a\x09\x09\x09fl' + 'oat\x20rot\x20=\x20' + 'computePar' + 'ticleRotat' + 'ionFloat(a' + '_StartRota' + 'tion0.x,\x20a' + 'ge,normali' + 'zedAge);\x0d\x0a' + '\x09\x09\x09float\x20c' + '\x20=\x20cos(rot' + ');\x0d\x0a\x09\x09\x09flo' + 'at\x20s\x20=\x20sin' + '(rot);\x0d\x0a\x09\x09' + '\x09mat2\x20rota' + 'tion=\x20mat2' + '(c,\x20-s,\x20s,' + '\x20c);\x0d\x0a\x09\x09\x09c' + 'orner=rota' + 'tion*corne' + 'r*cos(0.78' + '5398163397' + '4483096156' + '6084581988' + ');//TODO:临' + '时缩小cos45,不' + '确定U3D原因\x0d\x0a\x09' + '\x09\x09corner*=' + 'computePar' + 'ticleSizeB' + 'illbard(a_' + 'StartSize.' + 'xy,normali' + 'zedAge);\x0d\x0a' + '\x09\x09\x09center\x20' + '+=u_SizeSc' + 'ale.xzy*(c' + 'orner.x*si' + 'deVector+\x20' + 'corner.y*c' + 'ameraUpVec' + 'tor);\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'ENDERMODE_' + 'MESH\x0d\x0a\x09\x09\x09v' + 'ec3\x20size=c' + 'omputePart' + 'icleSizeMe' + 'sh(a_Start' + 'Size,norma' + 'lizedAge);' + '\x0d\x0a\x09\x09\x09#if\x20d' + 'efined(ROT' + 'ATIONOVERL' + 'IFETIME)||' + 'defined(RO' + 'TATIONOVER' + 'LIFETIMESE' + 'PERATE)\x0d\x0a\x09' + '\x09\x09\x09if(u_Th' + 'reeDStartR' + 'otation){\x0d' + '\x0a\x09\x09\x09\x09\x09vec3' + '\x20rotation=' + 'vec3(a_Sta' + 'rtRotation' + '0.xy,compu' + 'teParticle' + 'RotationFl' + 'oat(a_Star' + 'tRotation0' + '.z,\x20age,no' + 'rmalizedAg' + 'e));\x0d\x0a\x09\x09\x09\x09' + '\x09center+=\x20' + 'rotationBy' + 'Quaternion') + ('s(u_SizeSc' + 'ale*rotati' + 'onByEuler(' + 'a_MeshPosi' + 'tion*size,' + 'rotation),' + 'worldRotat' + 'ion);\x0d\x0a\x09\x09\x09' + '\x09}\x0d\x0a\x09\x09\x09\x09el' + 'se{\x0d\x0a\x09\x09\x09\x09\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIME\x0d\x0a\x09' + '\x09\x09\x09\x09\x09float' + '\x20angle=com' + 'putePartic' + 'leRotation' + 'Float(a_St' + 'artRotatio' + 'n0.x,\x20age,' + 'normalized' + 'Age);\x0d\x0a\x09\x09\x09' + '\x09\x09\x09if(a_Sh' + 'apePositio' + 'nStartLife' + 'Time.x!=0.' + '0||a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.y!=0.0){' + '\x0d\x0a\x09\x09\x09\x09\x09\x09\x09c' + 'enter+=\x20(r' + 'otationByQ' + 'uaternions' + '(rotationB' + 'yAxis(u_Si' + 'zeScale*a_' + 'MeshPositi' + 'on*size,no' + 'rmalize(cr' + 'oss(vec3(0' + '.0,0.0,1.0' + '),vec3(a_S' + 'hapePositi' + 'onStartLif' + 'eTime.xy,0' + '.0))),angl' + 'e),worldRo' + 'tation));/' + '/已验证\x0d\x0a\x09\x09\x09\x09' + '\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09' + '\x09else{\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09#ifde' + 'f\x20SHAPE\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09cen' + 'ter+=\x20u_Si' + 'zeScale.xz' + 'y*(rotatio' + 'nByQuatern' + 'ions(rotat' + 'ionByAxis(' + 'a_MeshPosi' + 'tion*size,' + 'vec3(0.0,-' + '1.0,0.0),a' + 'ngle),worl' + 'dRotation)' + ');\x0d\x0a\x09\x09\x09\x09\x09\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09\x09if(u' + '_Simulatio' + 'nSpace==0)' + '\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09' + '\x09center+=r' + 'otationByA' + 'xis(u_Size' + 'Scale*a_Me' + 'shPosition' + '*size,vec3' + '(0.0,0.0,-' + '1.0),angle' + ');//已验证\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09els' + 'e\x20if(u_Sim' + 'ulationSpa' + 'ce==1)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09\x09\x09cen' + 'ter+=rotat' + 'ionByQuate' + 'rnions(u_S' + 'izeScale*r' + 'otationByA' + 'xis(a_Mesh' + 'Position*s' + 'ize,vec3(0' + '.0,0.0,-1.' + '0),angle),' + 'worldRotat' + 'ion);//已验证' + '\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#') + ('endif\x0d\x0a\x09\x09\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09\x09\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ESEPERATE\x0d' + '\x0a\x09\x09\x09\x09\x09\x09//T' + 'ODO:是否应合并i' + 'f(u_ThreeD' + 'StartRotat' + 'ion)分支代码,待' + '测试\x0d\x0a\x09\x09\x09\x09\x09\x09' + 'vec3\x20angle' + '=computePa' + 'rticleRota' + 'tionVec3(v' + 'ec3(0.0,0.' + '0,-a_Start' + 'Rotation0.' + 'x),\x20age,no' + 'rmalizedAg' + 'e);\x0d\x0a\x09\x09\x09\x09\x09' + '\x09center+=\x20' + '(rotationB' + 'yQuaternio' + 'ns(rotatio' + 'nByEuler(u' + '_SizeScale' + '*a_MeshPos' + 'ition*size' + ',vec3(angl' + 'e.x,angle.' + 'y,angle.z)' + '),worldRot' + 'ation));//' + '已验证\x0d\x0a\x09\x09\x09\x09\x09' + '#endif\x09\x09\x0d\x0a' + '\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09if(u_Thre' + 'eDStartRot' + 'ation){\x0d\x0a\x09' + '\x09\x09\x09\x09center' + '+=\x20rotatio' + 'nByQuatern' + 'ions(u_Siz' + 'eScale*rot' + 'ationByEul' + 'er(a_MeshP' + 'osition*si' + 'ze,a_Start' + 'Rotation0)' + ',worldRota' + 'tion);//已验' + '证\x0d\x0a\x09\x09\x09\x09}\x0d\x0a' + '\x09\x09\x09\x09else{\x0d' + '\x0a\x09\x09\x09\x09\x09if(a' + '_ShapePosi' + 'tionStartL' + 'ifeTime.x!' + '=0.0||a_Sh' + 'apePositio' + 'nStartLife' + 'Time.y!=0.' + '0){\x0d\x0a\x09\x09\x09\x09\x09' + '\x09if(u_Simu' + 'lationSpac' + 'e==0)\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09center' + '+=\x20rotatio' + 'nByAxis(u_' + 'SizeScale*' + 'a_MeshPosi' + 'tion*size,' + 'normalize(' + 'cross(vec3' + '(0.0,0.0,1' + '.0),vec3(a' + '_ShapePosi' + 'tionStartL' + 'ifeTime.xy' + ',0.0))),a_' + 'StartRotat' + 'ion0.x);\x0d\x0a' + '\x09\x09\x09\x09\x09\x09else' + '\x20if(u_Simu' + 'lationSpac' + 'e==1)\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09center' + '+=\x20(rotati' + 'onByQuater' + 'nions(u_Si' + 'zeScale*ro' + 'tationByAx' + 'is(a_MeshP' + 'osition*si' + 'ze,normali' + 'ze(cross(v' + 'ec3(0.0,0.') + ('0,1.0),vec' + '3(a_ShapeP' + 'ositionSta' + 'rtLifeTime' + '.xy,0.0)))' + ',a_StartRo' + 'tation0.x)' + ',worldRota' + 'tion));//已' + '验证\x0d\x0a\x09\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09\x09\x09els' + 'e{\x0d\x0a\x09\x09\x09\x09\x09\x09' + '#ifdef\x20SHA' + 'PE\x0d\x0a\x09\x09\x09\x09\x09\x09' + '\x09if(u_Simu' + 'lationSpac' + 'e==0)\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20u_Size' + 'Scale*rota' + 'tionByAxis' + '(a_MeshPos' + 'ition*size' + ',vec3(0.0,' + '-1.0,0.0),' + 'a_StartRot' + 'ation0.x);' + '\x0d\x0a\x09\x09\x09\x09\x09\x09\x09e' + 'lse\x20if(u_S' + 'imulationS' + 'pace==1)\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=\x20rot' + 'ationByQua' + 'ternions(u' + '_SizeScale' + '*rotationB' + 'yAxis(a_Me' + 'shPosition' + '*size,vec3' + '(0.0,-1.0,' + '0.0),a_Sta' + 'rtRotation' + '0.x),world' + 'Rotation);' + '\x09\x0d\x0a\x09\x09\x09\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + '\x09\x09\x09if(u_Si' + 'mulationSp' + 'ace==0)\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09cen' + 'ter+=\x20rota' + 'tionByAxis' + '(u_SizeSca' + 'le*a_MeshP' + 'osition*si' + 'ze,vec3(0.' + '0,0.0,-1.0' + '),a_StartR' + 'otation0.x' + ');\x0d\x0a\x09\x09\x09\x09\x09\x09' + '\x09else\x20if(u' + '_Simulatio' + 'nSpace==1)' + '\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09' + 'center+=\x20r' + 'otationByQ' + 'uaternions' + '(u_SizeSca' + 'le*rotatio' + 'nByAxis(a_' + 'MeshPositi' + 'on*size,ve' + 'c3(0.0,0.0' + ',-1.0),a_S' + 'tartRotati' + 'on0.x),wor' + 'ldRotation' + ');//已验证\x0d\x0a\x09' + '\x09\x09\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09\x09v_MeshCo' + 'lor=a_Mesh' + 'Color;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09\x09gl_Posi' + 'tion=u_Pro' + 'jection*u_' + 'View*vec4(' + 'center,1.0' + ');\x0d\x0a\x09\x09v_Co' + 'lor\x20=\x20comp' + 'uteParticl' + 'eColor(a_S' + 'tartColor,' + '\x20normalize' + 'dAge);\x0d\x0a\x09\x09' + '#ifdef\x20DIF') + ('FUSEMAP\x0d\x0a\x09' + '\x09\x09#if\x20defi' + 'ned(SPHERH' + 'BILLBOARD)' + '||defined(' + 'STRETCHEDB' + 'ILLBOARD)|' + '|defined(H' + 'ORIZONTALB' + 'ILLBOARD)|' + '|defined(V' + 'ERTICALBIL' + 'LBOARD)\x0d\x0a\x09' + '\x09\x09\x09v_Textu' + 'reCoordina' + 'te\x20=comput' + 'eParticleU' + 'V(a_Corner' + 'TextureCoo' + 'rdinate.zw' + ',\x20normaliz' + 'edAge);\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09\x09\x09' + '\x09v_Texture' + 'Coordinate' + '\x20=computeP' + 'articleUV(' + 'a_MeshText' + 'ureCoordin' + 'ate,\x20norma' + 'lizedAge);' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09' + '\x09#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09\x09\x09\x09v_Te' + 'xtureCoord' + 'inate=Tran' + 'sformUV(v_' + 'TextureCoo' + 'rdinate,u_' + 'TilingOffs' + 'et);\x0d\x0a\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x20\x20\x20' + '\x09}\x0d\x0a\x20\x20\x20\x09el' + 'se\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'gl_Positio' + 'n=vec4(2.0' + ',2.0,2.0,1' + '.0);//Disc' + 'ard\x20use\x20ou' + 't\x20of\x20X(-1,' + '1),Y(-1,1)' + ',Z(0,1)\x0d\x0a\x09' + '}\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(gl_Posi' + 'tion);\x0d\x0a}\x0d' + '\x0a\x0d\x0a'), _0xee7071 = '//\x20allow\x20t' + 'o\x20explicit' + 'ly\x20overrid' + 'e\x20LAYA_BRD' + 'F_GI\x20and\x20L' + 'AYA_BRDF_L' + 'IGHT\x20in\x20cu' + 'stom\x20shade' + 'r,default\x20' + 'is\x20layaBRD' + 'FHighGI\x20an' + 'd\x20layaBRDF' + 'HighLight\x0d' + '\x0a#if\x20!defi' + 'ned\x20(LAYA_' + 'BRDF_GI)\x20\x0d' + '\x0a\x09#if\x20defi' + 'ned(LAYA_P' + 'BR_BRDF_LO' + 'W)\x0d\x0a\x09\x09#def' + 'ine\x20LAYA_B' + 'RDF_GI\x20lay' + 'aBRDFLowGI' + '\x0d\x0a\x09#elif\x20d' + 'efined(LAY' + 'A_PBR_BRDF' + '_HIGH)\x0d\x0a\x09\x09' + '#define\x20LA' + 'YA_BRDF_GI' + '\x20layaBRDFH' + 'ighGI\x0d\x0a\x09#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a#if\x20!d' + 'efined\x20(LA' + 'YA_BRDF_LI' + 'GHT)\x0d\x0a\x09#if' + '\x20defined(L' + 'AYA_PBR_BR' + 'DF_LOW)\x0d\x0a\x09' + '\x09#define\x20L' + 'AYA_BRDF_L' + 'IGHT\x20layaB' + 'RDFLowLigh' + 't\x0d\x0a\x09#elif\x20' + 'defined(LA' + 'YA_PBR_BRD' + 'F_HIGH)\x0d\x0a\x09' + '\x09#define\x20L' + 'AYA_BRDF_L' + 'IGHT\x20layaB' + 'RDFHighLig' + 'ht\x0d\x0a\x09#endi' + 'f\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#define' + '\x20PI\x203.1415' + '9265359\x0d\x0a#' + 'define\x20INV' + '_PI\x200.3183' + '0988618\x0d\x0a\x0d' + '\x0amediump\x20f' + 'loat\x20pow4(' + 'mediump\x20fl' + 'oat\x20x)\x0d\x0a{\x0d' + '\x0a\x09return\x20x' + '\x20*\x20x\x20*\x20x\x20*' + '\x20x;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'mediump\x20fl' + 'oat\x20pow5(m' + 'ediump\x20flo' + 'at\x20x)\x0d\x0a{\x0d\x0a' + '\x09return\x20x\x20' + '*\x20x\x20*\x20x\x20*\x20' + 'x\x20*\x20x;\x0d\x0a}\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20fres' + 'nelLerp(me' + 'diump\x20vec3' + '\x20F0,medium' + 'p\x20vec3\x20F90' + ',mediump\x20f' + 'loat\x20cosA)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20t\x20=\x20pow5' + '(1.0\x20-\x20cos' + 'A);\x20\x20\x20//\x20a' + 'la\x20Schlick' + '\x20interpoli' + 'ation\x0d\x0a\x09re' + 'turn\x20mix(F' + '0,\x20F90,\x20t)' + ';\x0d\x0a}\x0d\x0a\x0d\x0ame' + 'diump\x20vec3' + '\x20fresnelTe' + 'rm(mediump' + '\x20vec3\x20F0,m' + 'ediump\x20flo' + 'at\x20cosA)\x0d\x0a' + '{\x0d\x0a\x09float\x20' + 't\x20=\x20pow5(1' + '.0\x20-\x20cosA)' + (';\x20\x20\x20//\x20ala' + '\x20Schlick\x20i' + 'nterpoliat' + 'ion\x0d\x0a\x09retu' + 'rn\x20F0\x20+\x20(v' + 'ec3(1.0)\x20-' + '\x20F0)\x20*\x20t;\x0d' + '\x0a}\x0d\x0a\x0d\x0a//\x20a' + 'pproximage' + '\x20Schlick\x20w' + 'ith\x20^4\x20ins' + 'tead\x20of\x20^5' + '\x0d\x0amediump\x20' + 'vec3\x20fresn' + 'elLerpFast' + '\x20(mediump\x20' + 'vec3\x20F0,\x20m' + 'ediump\x20vec' + '3\x20F90,medi' + 'ump\x20float\x20' + 'cosA)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20float\x20t\x20' + '=\x20pow4\x20(1.' + '0\x20-\x20cosA);' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20mix\x20(F0' + ',\x20F90,\x20t);' + '\x0d\x0a}\x0d\x0a\x0d\x0aflo' + 'at\x20smoothn' + 'essToPerce' + 'ptualRough' + 'ness(float' + '\x20smoothnes' + 's)\x0d\x0a{\x0d\x0a\x20\x20\x20' + '\x20return\x201.' + '0\x20-\x20smooth' + 'ness;\x0d\x0a}\x0d\x0a' + '\x0d\x0afloat\x20pe' + 'rceptualRo' + 'ughnessToR' + 'oughness(f' + 'loat\x20perce' + 'ptualRough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20perceptua' + 'lRoughness' + '\x20*\x20percept' + 'ualRoughne' + 'ss;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec3\x20safeN' + 'ormalize(v' + 'ec3\x20inVec)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20dp3\x20=\x20ma' + 'x(0.001,do' + 't(inVec,in' + 'Vec));\x0d\x0a\x09r' + 'eturn\x20inVe' + 'c\x20*\x20invers' + 'esqrt(dp3)' + ';\x0d\x0a}\x0d\x0a\x0d\x0a//' + '\x20Note:\x20Dis' + 'ney\x20diffus' + 'e\x20must\x20be\x20' + 'multiply\x20b' + 'y\x20diffuseA' + 'lbedo\x20/\x20PI' + '.\x20This\x20is\x20' + 'done\x20outsi' + 'de\x20of\x20this' + '\x20function.' + '\x0d\x0amediump\x20' + 'float\x20disn' + 'eyDiffuse(' + 'mediump\x20fl' + 'oat\x20NdotV,' + 'mediump\x20fl' + 'oat\x20NdotL,' + 'mediump\x20fl' + 'oat\x20LdotH,' + 'mediump\x20fl' + 'oat\x20percep' + 'tualRoughn' + 'ess)\x0d\x0a{\x0d\x0a\x09' + '//https://' + 'www.cnblog' + 's.com/here' + 'nzhiming/a' + 'rticles/57' + '90389.html' + '\x0d\x0a\x09mediump' + '\x20float\x20fd9' + '0\x20=\x200.5\x20+\x20' + '2.0\x20*\x20Ldot' + 'H\x20*\x20LdotH\x20' + '*\x20perceptu' + 'alRoughnes' + 's;\x0d\x0a\x09//\x20Tw') + ('o\x20schlick\x20' + 'fresnel\x20te' + 'rm\x0d\x0a\x09mediu' + 'mp\x20float\x20l' + 'ightScatte' + 'r\x20=\x20(1.0\x20+' + '\x20(fd90\x20-\x201' + '.0)\x20*\x20pow5' + '(1.0\x20-\x20Ndo' + 'tL));\x0d\x0a\x09me' + 'diump\x20floa' + 't\x20viewScat' + 'ter\x20=\x20(1.0' + '\x20+\x20(fd90\x20-' + '\x201.0)\x20*\x20po' + 'w5(1.0\x20-\x20N' + 'dotV));\x0d\x0a\x0d' + '\x0a\x09return\x20l' + 'ightScatte' + 'r\x20*\x20viewSc' + 'atter;\x0d\x0a}\x0d' + '\x0a\x0d\x0a//\x20Ref:' + '\x20http://jc' + 'gt.org/pub' + 'lished/000' + '3/02/03/pa' + 'per.pdf\x0d\x0af' + 'loat\x20smith' + 'JointGGXVi' + 'sibilityTe' + 'rm(float\x20N' + 'dotL,\x20floa' + 't\x20NdotV,\x20f' + 'loat\x20rough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x09//\x20Origin' + 'al\x20formula' + 'tion:\x0d\x0a\x20\x20\x20' + '\x20//\x20lambda' + '_v\x20\x20\x20\x20=\x20(-' + '1\x20+\x20sqrt(a' + '2\x20*\x20(1\x20-\x20N' + 'dotL2)\x20/\x20N' + 'dotL2\x20+\x201)' + ')\x20*\x200.5f;\x0d' + '\x0a\x20\x20\x20\x20//\x20la' + 'mbda_l\x20\x20\x20\x20' + '=\x20(-1\x20+\x20sq' + 'rt(a2\x20*\x20(1' + '\x20-\x20NdotV2)' + '\x20/\x20NdotV2\x20' + '+\x201))\x20*\x200.' + '5f;\x0d\x0a\x20\x20\x20\x20/' + '/\x20G\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20=\x201\x20/\x20' + '(1\x20+\x20lambd' + 'a_v\x20+\x20lamb' + 'da_l);\x0d\x0a\x0d\x0a' + '\x09//\x20scient' + 'ific\x20code\x20' + 'implement:' + '\x0d\x0a\x09//\x20Reor' + 'der\x20code\x20t' + 'o\x20be\x20more\x20' + 'optimal\x0d\x0a\x20' + '\x20\x20\x20//\x20half' + '\x20a\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20=\x20roughn' + 'ess;\x0d\x0a\x20\x20\x20\x20' + '//\x20half\x20a2' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20=' + '\x20a\x20*\x20a;\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20//\x20ha' + 'lf\x20lambdaV' + '\x20\x20\x20\x20=\x20Ndot' + 'L\x20*\x20sqrt((' + '-NdotV\x20*\x20a' + '2\x20+\x20NdotV)' + '\x20*\x20NdotV\x20+' + '\x20a2);\x0d\x0a\x20\x20\x20' + '\x20//\x20half\x20l' + 'ambdaL\x20\x20\x20\x20' + '=\x20NdotV\x20*\x20' + 'sqrt((-Ndo' + 'tL\x20*\x20a2\x20+\x20' + 'NdotL)\x20*\x20N' + 'dotL\x20+\x20a2)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20/' + '/\x20Simplify' + '\x20visibilit' + 'y\x20term:\x20(2' + '.0f\x20*\x20Ndot' + 'L\x20*\x20NdotV)' + '\x20/\x20\x20((4.0f' + '\x20*\x20NdotL\x20*' + '\x20NdotV)\x20*\x20' + '(lambda_v\x20' + '+\x20lambda_l' + '\x20+\x201e-5f))' + ';\x0d\x0a\x20\x20\x20\x20//\x20') + ('return\x200.5' + 'f\x20/\x20(lambd' + 'aV\x20+\x20lambd' + 'aL\x20+\x201e-5f' + ');\x20\x20\x0d\x0a\x09//\x20' + 'This\x20funct' + 'ion\x20is\x20not' + '\x20intended\x20' + 'to\x20be\x20runn' + 'ing\x20on\x20Mob' + 'ile,theref' + 'ore\x20epsilo' + 'n\x20is\x20small' + 'er\x20than\x20ca' + 'n\x20be\x20repre' + 'sented\x20by\x20' + 'half\x0d\x0a\x0d\x0a\x09/' + '/\x20Approxim' + 'ation\x20of\x20t' + 'he\x20above\x20f' + 'ormulation' + '\x20(simplify' + '\x20the\x20sqrt,' + '\x20not\x20mathe' + 'matically\x20' + 'correct\x20bu' + 't\x20close\x20en' + 'ough)\x0d\x0a\x09fl' + 'oat\x20a\x20=\x20ro' + 'ughness;\x0d\x0a' + '\x09float\x20lam' + 'bdaV\x20=\x20Ndo' + 'tL\x20*\x20(Ndot' + 'V\x20*\x20(1.0\x20-' + '\x20a)\x20+\x20a);\x0d' + '\x0a\x09float\x20la' + 'mbdaL\x20=\x20Nd' + 'otV\x20*\x20(Ndo' + 'tL\x20*\x20(1.0\x20' + '-\x20a)\x20+\x20a);' + '\x0d\x0a\x09return\x20' + '0.5\x20/\x20(lam' + 'bdaV\x20+\x20lam' + 'bdaL\x20+\x201e-' + '5);\x0d\x0a}\x0d\x0a\x0d\x0a' + 'float\x20ggxT' + 'erm(float\x20' + 'NdotH,\x20flo' + 'at\x20roughne' + 'ss)\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20a2\x20=\x20' + 'roughness\x20' + '*\x20roughnes' + 's;\x0d\x0a\x09float' + '\x20d\x20=\x20(Ndot' + 'H\x20*\x20a2\x20-\x20N' + 'dotH)\x20*\x20Nd' + 'otH\x20+\x201.0;' + '\x20//\x202\x20mad\x0d' + '\x0a\x09return\x20I' + 'NV_PI\x20*\x20a2' + '\x20/\x20(d\x20*\x20d\x20' + '+\x201e-7);\x20/' + '/\x20This\x20fun' + 'ction\x20is\x20n' + 'ot\x20intende' + 'd\x20to\x20be\x20ru' + 'nning\x20on\x20M' + 'obile,ther' + 'efore\x20epsi' + 'lon\x20is\x20sma' + 'ller\x20than\x20' + 'what\x20can\x20b' + 'e\x20represen' + 'ted\x20by\x20hal' + 'f//返回值小用ha' + 'lf来返回\x0d\x0a}\x0d\x0a' + '\x0d\x0a//\x20BRDF1' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '-----\x0d\x0a\x0d\x0a/' + '/\x20Note:\x20BR' + 'DF\x20entry\x20p' + 'oints\x20use\x20' + 'smoothness' + '\x20and\x20oneMi' + 'nusReflect' + 'ivity\x20for\x20' + 'optimizati' + 'on\x20purpose' + 's,\x0d\x0a//\x20mos' + 'tly\x20for\x20DX' + '9\x20SM2.0\x20le' + 'vel.\x20Most\x20') + ('of\x20the\x20mat' + 'h\x20is\x20being' + '\x20done\x20on\x20t' + 'hese\x20(1-x)' + '\x20values,\x20a' + 'nd\x20that\x20sa' + 'ves\x20a\x20few\x20' + 'precious\x20A' + 'LU\x20slots.\x0d' + '\x0a\x0d\x0a//\x20Main' + '\x20Physicall' + 'y\x20Based\x20BR' + 'DF\x0d\x0a//\x20Der' + 'ived\x20from\x20' + 'Disney\x20wor' + 'k\x20and\x20base' + 'd\x20on\x20Torra' + 'nce-Sparro' + 'w\x20micro-fa' + 'cet\x20model\x0d' + '\x0a//\x0d\x0a//\x20BR' + 'DF\x20=\x20kD\x20/\x20' + 'pi\x20+\x20kS\x20*\x20' + '(D\x20*\x20V\x20*\x20F' + ')\x20/\x204\x0d\x0a//\x20' + 'I\x20=\x20BRDF\x20*' + '\x20NdotL\x0d\x0a//' + '\x0d\x0a//\x20*NDF\x20' + 'GGX:\x0d\x0a//\x20*' + 'Smith\x20for\x20' + 'Visiblity\x20' + 'term\x0d\x0a//\x20*' + 'Schlick\x20ap' + 'proximatio' + 'n\x20for\x20Fres' + 'nel\x0d\x0amediu' + 'mp\x20vec4\x20la' + 'yaBRDFHigh' + 'Light(medi' + 'ump\x20vec3\x20d' + 'iffColor,\x20' + 'mediump\x20ve' + 'c3\x20specCol' + 'or,\x20medium' + 'p\x20float\x20on' + 'eMinusRefl' + 'ectivity,\x20' + 'float\x20perc' + 'eptualRoug' + 'hness,floa' + 't\x20roughnes' + 's,mediump\x20' + 'float\x20nv,v' + 'ec3\x20normal' + ',\x20vec3\x20vie' + 'wDir,LayaL' + 'ight\x20light' + ')\x0d\x0a{\x0d\x0a\x09vec' + '3\x20halfDir\x20' + '=\x20safeNorm' + 'alize(view' + 'Dir-light.' + 'dir);\x0d\x0a\x0d\x0a\x09' + 'float\x20nl\x20=' + '\x20clamp(dot' + '(normal,\x20-' + 'light.dir)' + ',0.0,1.0);' + '\x0d\x0a\x09float\x20n' + 'h\x20=\x20clamp(' + 'dot(normal' + ',\x20halfDir)' + ',0.0,1.0);' + '\x0d\x0a\x09mediump' + '\x20float\x20lv\x20' + '=\x20clamp(do' + 't(light.di' + 'r,\x20viewDir' + '),0.0,1.0)' + ';\x0d\x0a\x09medium' + 'p\x20float\x20lh' + '\x20=\x20clamp(d' + 'ot(light.d' + 'ir,\x20-halfD' + 'ir),0.0,1.' + '0);\x0d\x0a\x0d\x0a\x09//' + '\x20Diffuse\x20t' + 'erm\x0d\x0a\x09medi' + 'ump\x20float\x20' + 'diffuseTer' + 'm\x20=\x20disney' + 'Diffuse(nv' + ',\x20nl,\x20lh,\x20' + 'perceptual' + 'Roughness)' + '\x20*\x20nl;\x0d\x0a\x0d\x0a' + '\x09//\x20Specul' + 'ar\x20term\x0d\x0a\x20' + '\x20\x20\x20//\x20HACK' + ':\x20theoreti') + ('cally\x20we\x20s' + 'hould\x20divi' + 'de\x20diffuse' + 'Term\x20by\x20Pi' + '\x20and\x20not\x20m' + 'ultiply\x20sp' + 'ecularTerm' + '!\x0d\x0a\x20\x20\x20\x20//\x20' + 'BUT\x20that\x20w' + 'ill\x20make\x20s' + 'hader\x20look' + '\x20significa' + 'ntly\x20darke' + 'r\x20than\x20Leg' + 'acy\x20ones\x0d\x0a' + '\x0d\x0a\x09//\x20GGX\x20' + 'with\x20rough' + 'tness\x20to\x200' + '\x20would\x20mea' + 'n\x20no\x20specu' + 'lar\x20at\x20all' + ',\x20using\x20ma' + 'x(roughnes' + 's,\x200.002)\x20' + 'here\x20to\x20ma' + 'tch\x20HDrend' + 'erloop\x20rou' + 'ghtness\x20re' + 'mapping.\x0d\x0a' + '\x09roughness' + '\x20=\x20max(rou' + 'ghness,\x200.' + '002);\x0d\x0a\x09fl' + 'oat\x20V\x20=\x20sm' + 'ithJointGG' + 'XVisibilit' + 'yTerm(nl,\x20' + 'nv,\x20roughn' + 'ess);\x0d\x0a\x09fl' + 'oat\x20D\x20=\x20gg' + 'xTerm(nh,\x20' + 'roughness)' + ';\x0d\x0a\x0d\x0a\x09floa' + 't\x20specular' + 'Term\x20=\x20V\x20*' + '\x20D\x20*\x20PI;\x20/' + '/\x20Torrance' + '-Sparrow\x20m' + 'odel,\x20Fres' + 'nel\x20is\x20app' + 'lied\x20later' + '\x0d\x0a\x0d\x0a\x09//#if' + 'def\x20LAYA_C' + 'OLORSPACE_' + 'GAMMA\x0d\x0a\x09sp' + 'ecularTerm' + '\x20=\x20sqrt(ma' + 'x(1e-4,\x20sp' + 'ecularTerm' + '));\x0d\x0a\x09//#e' + 'ndif\x0d\x0a\x09spe' + 'cularTerm\x20' + '=\x20max(0.0,' + '\x20specularT' + 'erm\x20*\x20nl);' + '\x0d\x0a\x09\x09\x0d\x0a\x09med' + 'iump\x20vec3\x20' + 'color\x20=\x20di' + 'ffColor\x20*\x20' + 'light.colo' + 'r\x20*\x20diffus' + 'eTerm\x20+\x20sp' + 'ecularTerm' + '\x20*\x20light.c' + 'olor\x20*\x20fre' + 'snelTerm(s' + 'pecColor,\x20' + 'lh);\x0d\x0a\x09ret' + 'urn\x20vec4(c' + 'olor,\x201.0)' + ';\x0d\x0a}\x0d\x0a\x0d\x0ave' + 'c4\x20layaBRD' + 'FHighGI(me' + 'diump\x20vec3' + '\x20diffColor' + ',mediump\x20v' + 'ec3\x20specCo' + 'lor,medium' + 'p\x20float\x20on' + 'eMinusRefl' + 'ectivity,f' + 'loat\x20smoot' + 'hness\x20,flo' + 'at\x20percept' + 'ualRoughne' + 'ss,float\x20r' + 'oughness,m' + 'ediump\x20flo' + 'at\x20nv,vec3' + '\x20normal,\x20v') + ('ec3\x20viewDi' + 'r,LayaGI\x20g' + 'i)\x0d\x0a{\x0d\x0a\x09//' + '\x20surfaceRe' + 'duction\x20=\x20' + 'Int\x20D(Ndot' + 'H)\x20*\x20NdotH' + '\x20*\x20Id(Ndot' + 'L>0)\x20dH\x20=\x20' + '1/(roughne' + 'ss^2+1)\x0d\x0a\x09' + 'float\x20surf' + 'aceReducti' + 'on;\x0d\x0a\x09surf' + 'aceReducti' + 'on\x20=\x201.0\x20-' + '\x200.28*roug' + 'hness*perc' + 'eptualRoug' + 'hness;//\x201' + '-0.28*x^3\x20' + 'as\x20approxi' + 'mation\x20for' + '\x20(1/(x^4+1' + '))^(1/2.2)' + '\x20on\x20the\x20do' + 'main\x20[0;1]' + '\x0d\x0a\x09float\x20g' + 'razingTerm' + '\x20=\x20clamp(s' + 'moothness\x20' + '+\x20(1.0\x20-\x20o' + 'neMinusRef' + 'lectivity)' + ',0.0,1.0);' + '\x0d\x0a\x09mediump' + '\x20vec3\x20colo' + 'r\x20=diffCol' + 'or\x20*\x20gi.di' + 'ffuse\x20+\x20su' + 'rfaceReduc' + 'tion\x20*\x20gi.' + 'specular\x20*' + '\x20fresnelLe' + 'rp(specCol' + 'or,vec3(gr' + 'azingTerm)' + ',\x20nv);\x0d\x0a\x09r' + 'eturn\x20vec4' + '(color,1.0' + ');\x0d\x0a}\x0d\x0a//\x20' + 'BRDF1-----' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '\x0d\x0a\x0d\x0a\x0d\x0a//\x20B' + 'RDF2------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '---------\x0d' + '\x0a//\x20Based\x20' + 'on\x20Minimal' + 'ist\x20CookTo' + 'rrance\x20BRD' + 'F\x0d\x0a//\x20Impl' + 'ementation' + '\x20is\x20slight' + 'ly\x20differe' + 'nt\x20from\x20or' + 'iginal\x20der' + 'ivation:\x20h' + 'ttp://www.' + 'thetenthpl' + 'anet.de/ar' + 'chives/255' + '\x0d\x0a//\x0d\x0a//\x20*' + 'NDF\x20[Modif' + 'ied]\x20GGX:\x0d' + '\x0a//\x20*Modif' + 'ied\x20Keleme' + 'n\x20and\x20Szir' + 'may-​Kalos' + '\x20for\x20Visib' + 'ility\x20term' + '\x0d\x0a//\x20*Fres' + 'nel\x20approx' + 'imated\x20wit' + 'h\x201/LdotH\x0d' + '\x0amediump\x20v' + 'ec4\x20layaBR') + ('DFLowLight' + '\x20(mediump\x20' + 'vec3\x20diffC' + 'olor,\x20medi' + 'ump\x20vec3\x20s' + 'pecColor,m' + 'ediump\x20flo' + 'at\x20oneMinu' + 'sReflectiv' + 'ity,float\x20' + 'perceptual' + 'Roughness,' + 'float\x20roug' + 'hness,medi' + 'ump\x20float\x20' + 'nv,vec3\x20no' + 'rmal,vec3\x20' + 'viewDir,La' + 'yaLight\x20li' + 'ght)\x0d\x0a{\x0d\x0a\x20' + '\x20\x20\x20vec3\x20ha' + 'lfDir\x20=\x20sa' + 'feNormaliz' + 'e\x20(viewDir' + '-light.dir' + ');\x0d\x0a\x20\x20\x20\x20me' + 'diump\x20floa' + 't\x20nl\x20=\x20cla' + 'mp(dot(nor' + 'mal,\x20-ligh' + 't.dir),0.0' + ',1.0);\x0d\x0a\x20\x20' + '\x20\x20float\x20nh' + '\x20=\x20clamp(d' + 'ot(normal,' + '\x20halfDir),' + '0.0,1.0);\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20lh\x20=\x20clam' + 'p(dot(-lig' + 'ht.dir,\x20ha' + 'lfDir),0.0' + ',1.0);\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20//\x20GGX' + '\x20Distribut' + 'ion\x20multip' + 'lied\x20by\x20co' + 'mbined\x20app' + 'roximation' + '\x20of\x20Visibi' + 'lity\x20and\x20F' + 'resnel\x0d\x0a\x20\x20' + '\x20\x20//\x20See\x20\x22' + 'Optimizing' + '\x20PBR\x20for\x20M' + 'obile\x22\x20fro' + 'm\x20Siggraph' + '\x202015\x20movi' + 'ng\x20mobile\x20' + 'graphics\x20c' + 'ourse\x0d\x0a\x20\x20\x20' + '\x20//\x20https:' + '//communit' + 'y.arm.com/' + 'events/115' + '5\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20float' + '\x20a\x20=\x20rough' + 'ness;\x0d\x0a\x20\x20\x20' + '\x20float\x20a2\x20' + '=\x20a*a;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20float\x20' + 'd\x20=\x20nh\x20*\x20n' + 'h\x20*\x20(a2\x20-\x20' + '1.0)\x20+\x201.0' + '0001;\x0d\x0a\x09//' + '\x20#ifdef\x20LA' + 'YA_COLORSP' + 'ACE_GAMMA\x0d' + '\x0a\x09\x09//\x20Tigh' + 'ter\x20approx' + 'imation\x20fo' + 'r\x20Gamma\x20on' + 'ly\x20renderi' + 'ng\x20mode!\x0d\x0a' + '\x09\x09//\x20DVF\x20=' + '\x20sqrt(DVF)' + ';\x0d\x0a\x09\x09//\x20DV' + 'F\x20=\x20(a\x20*\x20s' + 'qrt(.25))\x20' + '/\x20(max(sqr' + 't(0.1),\x20lh' + ')*sqrt(rou' + 'ghness\x20+\x20.' + '5)\x20*\x20d);\x0d\x0a' + '\x09\x09float\x20sp' + 'ecularTerm' + '\x20=\x20a\x20/\x20(ma' + 'x(0.32,\x20lh' + ')\x20*\x20(1.5\x20+') + ('\x20roughness' + ')\x20*\x20d);\x0d\x0a\x09' + '//\x20#else\x0d\x0a' + '\x09//\x20\x09float' + '\x20specularT' + 'erm\x20=\x20a2\x20/' + '\x20(max(0.1f' + ',\x20lh*lh)\x20*' + '\x20(roughnes' + 's\x20+\x200.5f)\x20' + '*\x20(d\x20*\x20d)\x20' + '*\x204);\x0d\x0a\x09//' + '\x20#endif\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20//\x20on' + '\x20mobiles\x20(' + 'where\x20half' + '\x20actually\x20' + 'means\x20some' + 'thing)\x20den' + 'ominator\x20h' + 'ave\x20risk\x20o' + 'f\x20overflow' + '\x0d\x0a\x20\x20\x20\x20//\x20c' + 'lamp\x20below' + '\x20was\x20added' + '\x20specifica' + 'lly\x20to\x20\x22fi' + 'x\x22\x20that,\x20b' + 'ut\x20dx\x20comp' + 'iler\x20(we\x20c' + 'onvert\x20byt' + 'ecode\x20to\x20m' + 'etal/gles)' + '\x0d\x0a\x20\x20\x20\x20//\x20s' + 'ees\x20that\x20s' + 'pecularTer' + 'm\x20have\x20onl' + 'y\x20non-nega' + 'tive\x20terms' + ',\x20so\x20it\x20sk' + 'ips\x20max(0,' + '..)\x20in\x20cla' + 'mp\x20(leavin' + 'g\x20only\x20min' + '(100,...))' + '\x0d\x0a\x0d\x0a\x09//#if' + '\x20defined\x20(' + 'SHADER_API' + '_MOBILE)\x0d\x0a' + '\x20\x20\x20\x20specul' + 'arTerm\x20=\x20s' + 'pecularTer' + 'm\x20-\x201e-4;\x0d' + '\x0a\x09//#endif' + '\x0d\x0a\x0d\x0a\x09//\x20#e' + 'lse\x0d\x0a\x09\x09//\x20' + '//\x20Legacy\x0d' + '\x0a\x09\x09//\x20half' + '\x20specularP' + 'ower\x20=\x20Per' + 'ceptualRou' + 'ghnessToSp' + 'ecPower(pe' + 'rceptualRo' + 'ughness);\x0d' + '\x0a\x09\x09//\x20//\x20M' + 'odified\x20wi' + 'th\x20approxi' + 'mate\x20Visib' + 'ility\x20func' + 'tion\x20that\x20' + 'takes\x20roug' + 'hness\x20into' + '\x20account\x0d\x0a' + '\x09\x09//\x20//\x20Or' + 'iginal\x20((n' + '+1)*N.H^n)' + '\x20/\x20(8*Pi\x20*' + '\x20L.H^3)\x20di' + 'dn\x27t\x20take\x20' + 'into\x20accou' + 'nt\x20roughne' + 'ss\x0d\x0a\x09\x09//\x20/' + '/\x20and\x20prod' + 'uced\x20extre' + 'mely\x20brigh' + 't\x20specular' + '\x20at\x20grazin' + 'g\x20angles\x0d\x0a' + '\x0d\x0a\x09\x09//\x20hal' + 'f\x20invV\x20=\x20l' + 'h\x20*\x20lh\x20*\x20s' + 'moothness\x20' + '+\x20perceptu' + 'alRoughnes' + 's\x20*\x20percep' + 'tualRoughn' + 'ess;\x20//\x20ap' + 'prox\x20Modif' + 'iedKelemen') + ('Visibility' + 'Term(lh,\x20p' + 'erceptualR' + 'oughness);' + '\x0d\x0a\x09\x09//\x20hal' + 'f\x20invF\x20=\x20l' + 'h;\x0d\x0a\x0d\x0a\x09\x09//' + '\x20half\x20spec' + 'ularTerm\x20=' + '\x20((specula' + 'rPower\x20+\x201' + ')\x20*\x20pow\x20(n' + 'h,\x20specula' + 'rPower))\x20/' + '\x20(8\x20*\x20invV' + '\x20*\x20invF\x20+\x20' + '1e-4h);\x0d\x0a\x0d' + '\x0a\x09\x09//\x20#ifd' + 'ef\x20LAYA_CO' + 'LORSPACE_G' + 'AMMA\x0d\x0a\x09\x09//' + '\x20\x09specular' + 'Term\x20=\x20sqr' + 't(max(1e-4' + 'f,\x20specula' + 'rTerm));\x0d\x0a' + '\x09\x09//\x20#endi' + 'f\x0d\x0a\x09//\x20#en' + 'dif\x0d\x0a\x0d\x0a\x09//' + '\x20#if\x20defin' + 'ed\x20(SHADER' + '_API_MOBIL' + 'E)\x0d\x0a\x09\x09spec' + 'ularTerm\x20=' + '\x20clamp(spe' + 'cularTerm,' + '\x200.0,\x20100.' + '0);\x20//\x20Pre' + 'vent\x20FP16\x20' + 'overflow\x20o' + 'n\x20mobiles\x0d' + '\x0a\x09//\x20#endi' + 'f\x0d\x0a\x20\x20\x20\x20\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec3\x20colo' + 'r\x20=\x20(diffC' + 'olor\x20+\x20spe' + 'cularTerm\x20' + '*\x20specColo' + 'r)\x20*\x20light' + '.color\x20*\x20n' + 'l;\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 'return\x20vec' + '4(color,\x201' + '.0);\x0d\x0a}\x0d\x0a\x0d' + '\x0amediump\x20v' + 'ec4\x20layaBR' + 'DFLowGI\x20(m' + 'ediump\x20vec' + '3\x20diffColo' + 'r,\x20mediump' + '\x20vec3\x20spec' + 'Color,medi' + 'ump\x20float\x20' + 'oneMinusRe' + 'flectivity' + ',mediump\x20f' + 'loat\x20smoot' + 'hness,floa' + 't\x20perceptu' + 'alRoughnes' + 's,float\x20ro' + 'ughness,me' + 'diump\x20floa' + 't\x20nv,vec3\x20' + 'normal,vec' + '3\x20viewDir,' + 'LayaGI\x20gi)' + '\x0d\x0a{\x0d\x0a\x09//\x20s' + 'urfaceRedu' + 'ction\x20=\x20In' + 't\x20D(NdotH)' + '\x20*\x20NdotH\x20*' + '\x20Id(NdotL>' + '0)\x20dH\x20=\x201/' + '(realRough' + 'ness^2+1)\x0d' + '\x0a\x0d\x0a\x20\x20\x20\x20//\x20' + '1-0.28*x^3' + '\x20as\x20approx' + 'imation\x20fo' + 'r\x20(1/(x^4+' + '1))^(1/2.2' + ')\x20on\x20the\x20d' + 'omain\x20[0;1' + ']\x0d\x0a\x20\x20\x20\x20//\x20' + '1-x^3*(0.6' + '-0.08*x)\x20\x20' + '\x20approxima' + 'tion\x20for\x201') + ('/(x^4+1)\x0d\x0a' + '\x09//\x20#ifdef' + '\x20LAYA_COLO' + 'RSPACE_GAM' + 'MA\x0d\x0a\x09\x09medi' + 'ump\x20float\x20' + 'surfaceRed' + 'uction\x20=\x200' + '.28;\x0d\x0a\x09//\x20' + '#else\x0d\x0a\x09\x09/' + '/\x20mediump\x20' + 'float\x20surf' + 'aceReducti' + 'on\x20=\x20(0.6-' + '0.08*perce' + 'ptualRough' + 'ness);\x0d\x0a\x09/' + '/\x20#endif\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20surf' + 'aceReducti' + 'on\x20=\x201.0\x20-' + '\x20roughness' + '*perceptua' + 'lRoughness' + '*surfaceRe' + 'duction;\x0d\x0a' + '\x0d\x0a\x09mediump' + '\x20float\x20gra' + 'zingTerm\x20=' + '\x20clamp(smo' + 'othness\x20+\x20' + '(1.0-oneMi' + 'nusReflect' + 'ivity),0.0' + ',1.0);\x0d\x0a\x09m' + 'ediump\x20vec' + '3\x20color\x20=g' + 'i.diffuse\x20' + '*\x20diffColo' + 'r+\x20surface' + 'Reduction\x20' + '*\x20gi.specu' + 'lar\x20*\x20fres' + 'nelLerpFas' + 't\x20(specCol' + 'or,\x20vec3(g' + 'razingTerm' + '),\x20nv);\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20vec4(col' + 'or,\x201.0);\x0d' + '\x0a}\x0d\x0a//\x20BRD' + 'F2--------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '-------'), _0x27a6bc = 'struct\x20Fra' + 'gmentCommo' + 'nData{\x0d\x0a\x09v' + 'ec3\x20diffCo' + 'lor;\x0d\x0a\x09vec' + '3\x20specColo' + 'r;\x0d\x0a\x09float' + '\x20oneMinusR' + 'eflectivit' + 'y;\x0d\x0a\x09float' + '\x20smoothnes' + 's;\x0d\x0a\x09//vec' + '3\x20eyeVec;T' + 'ODO:maybe\x20' + 'can\x20remove' + '\x0d\x0a\x09//float' + '\x20alpha;\x0d\x0a\x09' + '//vec3\x20ref' + 'lUVW;\x0d\x0a};\x0d' + '\x0a\x0d\x0a#if\x20!de' + 'fined(SETU' + 'P_BRDF_INP' + 'UT)//shade' + 'r内部的宏需要将改成' + '#ifdef改成#i' + 'f类型\x20不然会被La' + 'ya的shader分' + '析器优化掉\x0d\x0a\x20\x20\x20' + '\x20#define\x20S' + 'ETUP_BRDF_' + 'INPUT\x20meta' + 'llicSetup/' + '/default\x20i' + 's\x20metallic' + 'Setup,also' + '\x20can\x20be\x20ot' + 'her.\x20\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0acon' + 'st\x20mediump' + '\x20vec4\x20diel' + 'ectricSpec' + 'ularColor\x20' + '=\x20vec4(0.2' + '20916301,\x20' + '0.22091630' + '1,\x200.22091' + '6301,\x201.0\x20' + '-\x200.220916' + '301);\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '3\x20diffuseA' + 'ndSpecular' + 'FromMetall' + 'ic(mediump' + '\x20vec3\x20albe' + 'do,mediump' + '\x20float\x20met' + 'allic,\x20out' + '\x20mediump\x20v' + 'ec3\x20specCo' + 'lor,\x20out\x20m' + 'ediump\x20flo' + 'at\x20oneMinu' + 'sReflectiv' + 'ity)\x0d\x0a{\x0d\x0a\x09' + 'specColor\x20' + '=\x20mix(diel' + 'ectricSpec' + 'ularColor.' + 'rgb,\x20albed' + 'o,\x20metalli' + 'c);\x0d\x0a\x09oneM' + 'inusReflec' + 'tivity=\x20di' + 'electricSp' + 'ecularColo' + 'r.a*(1.0-m' + 'etallic);/' + '/diffuse\x20p' + 'roportion\x0d' + '\x0a\x09return\x20a' + 'lbedo\x20*\x20on' + 'eMinusRefl' + 'ectivity;\x0d' + '\x0a}\x0d\x0a\x0d\x0amedi' + 'ump\x20float\x20' + 'specularSt' + 'rength(med' + 'iump\x20vec3\x20' + 'specular)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20re' + 'turn\x20max\x20(' + 'max\x20(specu' + 'lar.r,\x20spe' + 'cular.g),\x20' + 'specular.b' + ');\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x20Diffuse/' + 'Spec\x20Energ' + 'y\x20conserva' + ('tion\x0d\x0amedi' + 'ump\x20vec3\x20e' + 'nergyConse' + 'rvationBet' + 'weenDiffus' + 'eAndSpecul' + 'ar\x20(medium' + 'p\x20vec3\x20alb' + 'edo,\x20mediu' + 'mp\x20vec3\x20sp' + 'ecColor,\x20o' + 'ut\x20mediump' + '\x20float\x20one' + 'MinusRefle' + 'ctivity)\x0d\x0a' + '{\x0d\x0a\x09oneMin' + 'usReflecti' + 'vity\x20=\x201.0' + '\x20-\x20specula' + 'rStrength(' + 'specColor)' + ';\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20albedo' + '\x20*\x20(vec3(1' + '.0)\x20-\x20spec' + 'Color);\x0d\x0a}' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20TRANSPARE' + 'NTBLEND\x0d\x0a\x09' + 'mediump\x20ve' + 'c3\x20preMult' + 'iplyAlpha\x20' + '(mediump\x20v' + 'ec3\x20diffCo' + 'lor,\x20mediu' + 'mp\x20float\x20a' + 'lpha,\x20medi' + 'ump\x20float\x20' + 'oneMinusRe' + 'flectivity' + ',out\x20mediu' + 'mp\x20float\x20m' + 'odifiedAlp' + 'ha)\x0d\x0a\x09{\x0d\x0a\x09' + '\x09//\x20Transp' + 'arency\x20\x27re' + 'moves\x27\x20fro' + 'm\x20Diffuse\x20' + 'component\x0d' + '\x0a\x09\x09diffCol' + 'or\x20*=\x20alph' + 'a;\x0d\x0a\x09\x09//\x20R' + 'eflectivit' + 'y\x20\x27removes' + '\x27\x20from\x20the' + '\x20rest\x20of\x20c' + 'omponents,' + '\x20including' + '\x20Transpare' + 'ncy\x0d\x0a\x09\x09//\x20' + 'modifiedAl' + 'pha\x20=\x201.0-' + '(1.0-alpha' + ')*(1.0-ref' + 'lectivity)' + '\x20=\x201.0-(on' + 'eMinusRefl' + 'ectivity\x20-' + '\x20alpha*one' + 'MinusRefle' + 'ctivity)\x20=' + '\x201.0-oneMi' + 'nusReflect' + 'ivity\x20+\x20al' + 'pha*oneMin' + 'usReflecti' + 'vity\x0d\x0a\x09\x09mo' + 'difiedAlph' + 'a\x20=\x201.0\x20-\x20' + 'oneMinusRe' + 'flectivity' + '\x20+\x20alpha*o' + 'neMinusRef' + 'lectivity;' + '\x0d\x0a\x09\x09return' + '\x20diffColor' + ';\x0d\x0a\x09}\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0aFra' + 'gmentCommo' + 'nData\x20meta' + 'llicSetup(' + 'vec2\x20uv)\x0d\x0a' + '{\x0d\x0a\x09medium' + 'p\x20vec2\x20met' + 'allicGloss' + '\x20=\x20getMeta' + 'llicGloss(' + 'uv);\x0d\x0a\x09med' + 'iump\x20float' + '\x20metallic\x20') + ('=\x20metallic' + 'Gloss.x;\x0d\x0a' + '\x09mediump\x20f' + 'loat\x20smoot' + 'hness\x20=\x20me' + 'tallicGlos' + 's.y;\x20//\x20th' + 'is\x20is\x201\x20mi' + 'nus\x20the\x20sq' + 'uare\x20root\x20' + 'of\x20real\x20ro' + 'ughness\x20m.' + '\x0d\x0a\x09mediump' + '\x20float\x20one' + 'MinusRefle' + 'ctivity;\x0d\x0a' + '\x09mediump\x20v' + 'ec3\x20specCo' + 'lor;\x0d\x0a\x09med' + 'iump\x20vec3\x20' + 'diffColor\x20' + '=\x20diffuseA' + 'ndSpecular' + 'FromMetall' + 'ic(albedo(' + 'uv),\x20metal' + 'lic,/*out*' + '/specColor' + ',/*out*/on' + 'eMinusRefl' + 'ectivity);' + '\x0d\x0a\x0d\x0a\x09Fragm' + 'entCommonD' + 'ata\x20o;\x0d\x0a\x09o' + '.diffColor' + '\x20=\x20diffCol' + 'or;\x0d\x0a\x09o.sp' + 'ecColor\x20=\x20' + 'specColor;' + '\x0d\x0a\x09o.oneMi' + 'nusReflect' + 'ivity\x20=\x20on' + 'eMinusRefl' + 'ectivity;\x0d' + '\x0a\x09o.smooth' + 'ness\x20=\x20smo' + 'othness;\x0d\x0a' + '\x09return\x20o;' + '\x0d\x0a}\x0d\x0a\x0d\x0aFra' + 'gmentCommo' + 'nData\x20spec' + 'ularSetup(' + 'vec2\x20uv)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'specGloss\x20' + '=\x20specular' + 'Gloss(uv);' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec3\x20s' + 'pecColor\x20=' + '\x20specGloss' + '.rgb;\x0d\x0a\x20\x20\x20' + '\x20mediump\x20f' + 'loat\x20smoot' + 'hness\x20=\x20sp' + 'ecGloss.a;' + '\x0d\x0a\x0d\x0a\x20\x20\x20\x20me' + 'diump\x20floa' + 't\x20oneMinus' + 'Reflectivi' + 'ty;\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '3\x20diffColo' + 'r\x20=\x20energy' + 'Conservati' + 'onBetweenD' + 'iffuseAndS' + 'pecular\x20(a' + 'lbedo(uv),' + '\x20specColor' + ',\x20/*out*/\x20' + 'oneMinusRe' + 'flectivity' + ');\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 'FragmentCo' + 'mmonData\x20o' + ';\x0d\x0a\x20\x20\x20\x20o.d' + 'iffColor\x20=' + '\x20diffColor' + ';\x0d\x0a\x20\x20\x20\x20o.s' + 'pecColor\x20=' + '\x20specColor' + ';\x0d\x0a\x20\x20\x20\x20o.o' + 'neMinusRef' + 'lectivity\x20' + '=\x20oneMinus' + 'Reflectivi' + 'ty;\x0d\x0a\x20\x20\x20\x20o' + '.smoothnes') + ('s\x20=\x20smooth' + 'ness;\x0d\x0a\x20\x20\x20' + '\x20return\x20o;' + '\x0d\x0a}\x0d\x0a\x0d\x0aLay' + 'aGI\x20fragme' + 'ntGI(float' + '\x20smoothnes' + 's,vec3\x20eye' + 'Vec,medium' + 'p\x20float\x20oc' + 'clusion,me' + 'diump\x20vec2' + '\x20lightmapU' + 'V,vec3\x20wor' + 'ldnormal,v' + 'ec3\x20worldP' + 'os)\x0d\x0a{\x0d\x0a\x09L' + 'ayaGIInput' + '\x20giInput;\x0d' + '\x0a\x09#ifdef\x20L' + 'IGHTMAP\x0d\x0a\x09' + '\x09giInput.l' + 'ightmapUV=' + 'lightmapUV' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09giInput' + '.worldPos\x20' + '=\x20worldPos' + ';\x0d\x0a\x0d\x0a\x09vec3' + '\x20worldView' + 'Dir\x20=\x20-eye' + 'Vec;\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'uvwRoughne' + 'ss;\x0d\x0a\x09uvwR' + 'oughness.r' + 'gb\x20=\x20refle' + 'ct(worldVi' + 'ewDir,\x20wor' + 'ldnormal);' + '//reflectU' + 'VW\x0d\x0a\x09uvwRo' + 'ughness.a=' + '\x20smoothnes' + 'sToPercept' + 'ualRoughne' + 'ss(smoothn' + 'ess);//per' + 'ceptualRou' + 'ghness\x0d\x0a\x0d\x0a' + '\x09return\x20la' + 'yaGlobalIl' + 'lumination' + '(giInput,o' + 'cclusion,\x20' + 'worldnorma' + 'l,\x20uvwRoug' + 'hness);\x0d\x0a}' + '\x0d\x0a\x0d\x0a\x0d\x0avec3' + '\x20perPixelW' + 'orldNormal' + '(vec2\x20uv,v' + 'ec3\x20normal' + ',vec3\x20bino' + 'rmal,vec3\x20' + 'tangent)\x0d\x0a' + '{\x0d\x0a\x09#ifdef' + '\x20NORMALTEX' + 'TURE\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20normalTan' + 'gent=norma' + 'lInTangent' + 'Space(uv);' + '\x0d\x0a\x09\x09vec3\x20n' + 'ormalWorld' + '\x20=\x20normali' + 'ze(tangent' + '\x20*\x20normalT' + 'angent.x\x20+' + '\x20binormal\x20' + '*\x20normalTa' + 'ngent.y\x20+\x20' + 'normal\x20*\x20n' + 'ormalTange' + 'nt.z);\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09ve' + 'c3\x20normalW' + 'orld\x20=\x20nor' + 'malize(nor' + 'mal);\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x09re' + 'turn\x20norma' + 'lWorld;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragmentFor' + 'ward()\x0d\x0a{\x0d' + '\x0a\x09vec2\x20uv;' + '\x0d\x0a\x09#if\x20def' + 'ined(ALBED') + ('OTEXTURE)|' + '|defined(M' + 'ETALLICGLO' + 'SSTEXTURE)' + '||defined(' + 'NORMALTEXT' + 'URE)||defi' + 'ned(EMISSI' + 'ONTEXTURE)' + '||defined(' + 'OCCLUSIONT' + 'EXTURE)||d' + 'efined(PAR' + 'ALLAXTEXTU' + 'RE)\x0d\x0a\x09\x09#if' + 'def\x20PARALL' + 'AXTEXTURE\x0d' + '\x0a\x09\x09\x09uv\x20=\x20p' + 'arallax(v_' + 'Texcoord0,' + 'normalize(' + 'v_ViewDirF' + 'orParallax' + '));\x0d\x0a\x09\x09#el' + 'se\x0d\x0a\x09\x09\x09uv\x20' + '=\x20v_Texcoo' + 'rd0;\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09me' + 'diump\x20floa' + 't\x20alpha\x20=\x20' + 'getAlpha(u' + 'v);\x0d\x0a\x09#ifd' + 'ef\x20ALPHATE' + 'ST\x0d\x0a\x09\x09if(a' + 'lpha<u_Alp' + 'haTestValu' + 'e)\x0d\x0a\x09\x09\x09dis' + 'card;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09F' + 'ragmentCom' + 'monData\x20o\x20' + '=\x20SETUP_BR' + 'DF_INPUT(u' + 'v);\x0d\x0a\x09\x0d\x0a\x09v' + 'ec3\x20binorm' + 'al;\x0d\x0a\x09vec3' + '\x20tangent;\x0d' + '\x0a\x09#ifdef\x20N' + 'ORMALTEXTU' + 'RE\x0d\x0a\x09\x09tang' + 'ent\x20=\x20v_Ta' + 'ngent;\x0d\x0a\x09\x09' + 'binormal\x20=' + '\x20v_Binorma' + 'l;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09vec3' + '\x20normal\x20=\x20' + 'v_Normal;\x0d' + '\x0a\x09vec3\x20nor' + 'malWorld\x20=' + '\x20perPixelW' + 'orldNormal' + '(uv,normal' + ',binormal,' + 'tangent);/' + '/In\x20FS\x20if\x20' + 'the\x20normal' + '\x20use\x20mediu' + 'mp\x20before\x20' + 'normalize\x20' + 'will\x20cause' + '\x20precision' + '\x20prolem\x20in' + '\x20mobile\x20de' + 'vice.\x0d\x0a\x09ve' + 'c3\x20eyeVec\x20' + '=\x20normaliz' + 'e(v_EyeVec' + ');\x0d\x0a\x09vec3\x20' + 'posworld\x20=' + '\x20v_Positio' + 'nWorld;\x0d\x0a\x0d' + '\x0a\x09#ifdef\x20T' + 'RANSPARENT' + 'BLEND\x0d\x0a\x09\x09o' + '.diffColor' + '=preMultip' + 'lyAlpha(o.' + 'diffColor,' + 'alpha,o.on' + 'eMinusRefl' + 'ectivity,/' + '*out*/alph' + 'a);//\x20shad' + 'er\x20relies\x20' + 'on\x20pre-mul' + 'tiply\x20alph' + 'a-blend\x20(s' + 'rcBlend\x20=\x20') + ('One,\x20dstBl' + 'end\x20=\x20OneM' + 'inusSrcAlp' + 'ha)\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09med' + 'iump\x20float' + '\x20occlusion' + '\x20=\x20getOccl' + 'usion(uv);' + '\x0d\x0a\x09mediump' + '\x20vec2\x20ligh' + 'tMapUV;\x0d\x0a\x09' + '#ifdef\x20LIG' + 'HTMAP\x0d\x0a\x09\x09l' + 'ightMapUV=' + 'v_LightMap' + 'UV;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09float' + '\x20perceptua' + 'lRoughness' + '\x20=\x20smoothn' + 'essToPerce' + 'ptualRough' + 'ness(o.smo' + 'othness);\x0d' + '\x0a\x09float\x20ro' + 'ughness\x20=\x20' + 'perceptual' + 'RoughnessT' + 'oRoughness' + '(perceptua' + 'lRoughness' + ');\x0d\x0a\x09float' + '\x20nv\x20=\x20abs(' + 'dot(normal' + 'World,\x20eye' + 'Vec));\x0d\x0a\x09L' + 'ayaGI\x20gi\x20=' + 'fragmentGI' + '(o.smoothn' + 'ess,eyeVec' + ',occlusion' + ',lightMapU' + 'V,normalWo' + 'rld,poswor' + 'ld);\x0d\x0a\x09vec' + '4\x20color\x20=\x20' + 'LAYA_BRDF_' + 'GI(o.diffC' + 'olor,o.spe' + 'cColor,o.o' + 'neMinusRef' + 'lectivity,' + 'o.smoothne' + 'ss,percept' + 'ualRoughne' + 'ss,roughne' + 'ss,nv,norm' + 'alWorld,ey' + 'eVec,gi);\x0d' + '\x0a\x09\x0d\x0a\x09float' + '\x20shadowAtt' + 'enuation\x20=' + '\x201.0;\x0d\x0a\x09#i' + 'fdef\x20LEGAC' + 'YSINGLELIG' + 'HTING\x0d\x0a\x09\x09#' + 'ifdef\x20DIRE' + 'CTIONLIGHT' + '\x0d\x0a\x09\x09\x09#if\x20d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)//sha' + 'der中自定义的宏不' + '可用ifdef\x20必须' + '改成if\x20defin' + 'ed\x0d\x0a\x09\x09\x09\x09#i' + 'fdef\x20SHADO' + 'W_CASCADE\x0d' + '\x0a\x09\x09\x09\x09\x09vec4' + '\x20shadowCoo' + 'rd\x20=\x20getSh' + 'adowCoord(' + 'vec4(v_Pos' + 'itionWorld' + ',1.0));\x0d\x0a\x09' + '\x09\x09\x09#else\x0d\x0a' + '\x09\x09\x09\x09\x09vec4\x20' + 'shadowCoor' + 'd\x20=\x20v_Shad' + 'owCoord;\x0d\x0a' + '\x09\x09\x09\x09#endif' + '\x0d\x0a\x09\x09\x09\x09shad' + 'owAttenuat' + 'ion=sample' + 'Shadowmap(' + 'shadowCoor' + 'd);\x0d\x0a\x09\x09\x09#e' + 'ndif\x0d\x0a\x09\x09\x09L' + 'ayaLight\x20d') + ('irLight\x20=\x20' + 'layaDirect' + 'ionLightTo' + 'Light(u_Di' + 'rectionLig' + 'ht,shadowA' + 'ttenuation' + ');\x0d\x0a\x09\x09\x09col' + 'or+=\x20LAYA_' + 'BRDF_LIGHT' + '(o.diffCol' + 'or,o.specC' + 'olor,o.one' + 'MinusRefle' + 'ctivity,pe' + 'rceptualRo' + 'ughness,ro' + 'ughness,nv' + ',normalWor' + 'ld,eyeVec,' + 'dirLight);' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09\x09#if' + 'def\x20POINTL' + 'IGHT\x0d\x0a\x09\x09\x09s' + 'hadowAtten' + 'uation\x20=\x201' + '.0;\x0d\x0a\x09\x09\x09La' + 'yaLight\x20po' + 'iLight\x20=\x20l' + 'ayaPointLi' + 'ghtToLight' + '(posworld,' + 'normalWorl' + 'd,u_PointL' + 'ight,shado' + 'wAttenuati' + 'on);\x0d\x0a\x09\x09\x09c' + 'olor+=\x20LAY' + 'A_BRDF_LIG' + 'HT(o.diffC' + 'olor,o.spe' + 'cColor,o.o' + 'neMinusRef' + 'lectivity,' + 'perceptual' + 'Roughness,' + 'roughness,' + 'nv,normalW' + 'orld,eyeVe' + 'c,poiLight' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09\x0d\x0a\x09\x09' + '#ifdef\x20SPO' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09shadowAtt' + 'enuation\x20=' + '\x201.0;\x0d\x0a\x09\x09\x09' + '#if\x20define' + 'd(CALCULAT' + 'E_SPOTSHAD' + 'OWS)//shad' + 'er中自定义的宏不可' + '用ifdef\x20必须改' + '成if\x20define' + 'd\x0d\x0a\x09\x09\x09\x09vec' + '4\x20spotShad' + 'owcoord\x20=\x20' + 'v_SpotShad' + 'owCoord;\x0d\x0a' + '\x09\x09\x09\x09shadow' + 'Attenuatio' + 'n\x20=\x20sample' + 'SpotShadow' + 'map(spotSh' + 'adowcoord)' + ';\x0d\x0a\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x20\x20\x20\x20' + 'LayaLight\x20' + 'spoLight\x20=' + '\x20layaSpotL' + 'ightToLigh' + 't(posworld' + ',normalWor' + 'ld,u_SpotL' + 'ight,shado' + 'wAttenuati' + 'on);\x0d\x0a\x09\x09\x09c' + 'olor+=\x20LAY' + 'A_BRDF_LIG' + 'HT(o.diffC' + 'olor,o.spe' + 'cColor,o.o' + 'neMinusRef' + 'lectivity,' + 'perceptual' + 'Roughness,' + 'roughness,' + 'nv,normalW' + 'orld,eyeVe') + ('c,spoLight' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#else' + '\x0d\x0a\x09\x20\x09#ifde' + 'f\x20DIRECTIO' + 'NLIGHT\x0d\x0a\x09\x09' + '\x09for\x20(int\x20' + 'i\x20=\x200;\x20i\x20<' + '\x20MAX_LIGHT' + '_COUNT;\x20i+' + '+)\x20\x0d\x0a\x09\x09\x09{\x0d' + '\x0a\x09\x09\x09\x09shado' + 'wAttenuati' + 'on\x20=\x201.0;\x0d' + '\x0a\x09\x09\x09\x09if(i\x20' + '>=\x20u_Dirat' + 'ionLightCo' + 'unt)\x0d\x0a\x09\x09\x09\x09' + '\x09break;\x0d\x0a\x09' + '\x09\x09\x09#if\x20def' + 'ined(CALCU' + 'LATE_SHADO' + 'WS)//shade' + 'r中自定义的宏不可用' + 'ifdef\x20必须改成' + 'if\x20defined' + '\x0d\x0a\x09\x09\x09\x09\x09if(' + 'i\x20==\x200)\x0d\x0a\x09' + '\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09' + '\x09\x09\x09#ifdef\x20' + 'SHADOW_CAS' + 'CADE\x0d\x0a\x09\x09\x09\x09' + '\x09\x09\x09vec4\x20sh' + 'adowCoord\x20' + '=\x20getShado' + 'wCoord(vec' + '4(v_Positi' + 'onWorld,1.' + '0));\x0d\x0a\x09\x09\x09\x09' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09vec4' + '\x20shadowCoo' + 'rd\x20=\x20v_Sha' + 'dowCoord;\x0d' + '\x0a\x09\x09\x09\x09\x09\x09#en' + 'dif\x0d\x0a\x09\x09\x09\x09\x09' + '\x09shadowAtt' + 'enuation\x20*' + '=\x20sampleSh' + 'adowmap(sh' + 'adowCoord)' + ';\x0d\x0a\x09\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09\x09Dir' + 'ectionLigh' + 't\x20directio' + 'nLight\x20=\x20g' + 'etDirectio' + 'nLight(u_L' + 'ightBuffer' + ',i);\x0d\x0a\x09\x09\x09\x09' + 'LayaLight\x20' + 'dirLight\x20=' + '\x20layaDirec' + 'tionLightT' + 'oLight(dir' + 'ectionLigh' + 't,shadowAt' + 'tenuation)' + ';\x0d\x0a\x09\x09\x09\x20\x09co' + 'lor+=LAYA_' + 'BRDF_LIGHT' + '(o.diffCol' + 'or,o.specC' + 'olor,o.one' + 'MinusRefle' + 'ctivity,pe' + 'rceptualRo' + 'ughness,ro' + 'ughness,nv' + ',normalWor' + 'ld,eyeVec,' + 'dirLight);' + '\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x20' + '\x09#endif\x0d\x0a\x09' + '\x09#if\x20defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)\x0d\x0a\x09\x09\x09i' + 'vec4\x20clust' + 'erInfo\x20=ge' + 'tClusterIn' + 'fo(u_Light' + 'ClusterBuf' + 'fer,u_View' + ',u_Viewpor' + 't,\x20v_Posit' + 'ionWorld,g' + 'l_FragCoor') + ('d,u_Projec' + 'tionParams' + ');\x0d\x0a\x09\x09\x09#if' + 'def\x20POINTL' + 'IGHT\x0d\x0a\x09\x09\x09\x09' + 'for\x20(int\x20i' + '\x20=\x200;\x20i\x20<\x20' + 'MAX_LIGHT_' + 'COUNT;\x20i++' + ')\x20\x0d\x0a\x09\x09\x09\x09{\x0d' + '\x0a\x09\x09\x09\x09\x09shad' + 'owAttenuat' + 'ion\x20=\x201.0;' + '\x0d\x0a\x09\x09\x09\x09\x09if(' + 'i\x20>=\x20clust' + 'erInfo.x)/' + '/PointLigh' + 'tCount\x0d\x0a\x09\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09\x09Poi' + 'ntLight\x20po' + 'intLight\x20=' + '\x20getPointL' + 'ight(u_Lig' + 'htBuffer,u' + '_LightClus' + 'terBuffer,' + 'clusterInf' + 'o,i);\x0d\x0a\x09\x09\x09' + '\x09\x09LayaLigh' + 't\x20poiLight' + '\x20=\x20layaPoi' + 'ntLightToL' + 'ight(poswo' + 'rld,normal' + 'World,poin' + 'tLight,sha' + 'dowAttenua' + 'tion);\x0d\x0a\x09\x09' + '\x09\x09\x09color+=' + '\x20LAYA_BRDF' + '_LIGHT(o.d' + 'iffColor,o' + '.specColor' + ',o.oneMinu' + 'sReflectiv' + 'ity,percep' + 'tualRoughn' + 'ess,roughn' + 'ess,nv,nor' + 'malWorld,e' + 'yeVec,poiL' + 'ight);\x0d\x0a\x09\x09' + '\x09\x09}\x0d\x0a\x09\x09\x09#e' + 'ndif\x0d\x0a\x09\x09\x09#' + 'ifdef\x20SPOT' + 'LIGHT\x0d\x0a\x09\x09\x09' + '\x09for\x20(int\x20' + 'i\x20=\x200;\x20i\x20<' + '\x20MAX_LIGHT' + '_COUNT;\x20i+' + '+)\x20\x0d\x0a\x09\x09\x09\x09{' + '\x0d\x0a\x09\x09\x09\x09\x09sha' + 'dowAttenua' + 'tion\x20=\x201.0' + ';\x0d\x0a\x09\x09\x09\x09\x09if' + '(i\x20>=\x20clus' + 'terInfo.y)' + '//SpotLigh' + 'tCount\x0d\x0a\x09\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09\x09#if' + '\x20defined(C' + 'ALCULATE_S' + 'POTSHADOWS' + ')//shader中' + '自定义的宏不可用if' + 'def\x20必须改成if' + '\x20defined\x0d\x0a' + '\x09\x09\x09\x09\x09\x09if(i' + '\x20==\x200)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09vec4\x20s' + 'potShadowc' + 'oord\x20=\x20v_S' + 'potShadowC' + 'oord;\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09shadow' + 'Attenuatio' + 'n=\x20sampleS' + 'potShadowm' + 'ap(spotSha' + 'dowcoord);' + '\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x09\x09\x09S' + 'potLight\x20s' + 'potLight\x20=' + '\x20getSpotLi' + 'ght(u_Ligh') + ('tBuffer,u_' + 'LightClust' + 'erBuffer,c' + 'lusterInfo' + ',i);\x0d\x0a\x09\x09\x09\x09' + '\x09LayaLight' + '\x20spoLight\x20' + '=\x20layaSpot' + 'LightToLig' + 'ht(posworl' + 'd,normalWo' + 'rld,spotLi' + 'ght,shadow' + 'Attenuatio' + 'n);\x0d\x0a\x09\x09\x09\x09\x09' + 'color+=\x20LA' + 'YA_BRDF_LI' + 'GHT(o.diff' + 'Color,o.sp' + 'ecColor,o.' + 'oneMinusRe' + 'flectivity' + ',perceptua' + 'lRoughness' + ',roughness' + ',nv,normal' + 'World,eyeV' + 'ec,spoLigh' + 't);\x0d\x0a\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x20#endi' + 'f\x0d\x0a\x0d\x0a\x09#ifd' + 'ef\x20EMISSIO' + 'N\x0d\x0a\x09\x09color' + '.rgb\x20+=\x20em' + 'ission(uv)' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09#ifde' + 'f\x20FOG\x0d\x0a\x09\x09f' + 'loat\x20lerpF' + 'act=clamp(' + '(1.0/gl_Fr' + 'agCoord.w-' + 'u_FogStart' + ')/u_FogRan' + 'ge,0.0,1.0' + ');\x0d\x0a\x09\x09colo' + 'r.rgb=mix(' + 'color.rgb,' + 'u_FogColor' + ',lerpFact)' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09gl_F' + 'ragColor=v' + 'ec4(color.' + 'rgb,alpha)' + ';\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a' + '\x0d\x0a'), _0x1bb978 = 'attribute\x20' + 'vec4\x20a_Pos' + 'ition;\x0d\x0a\x0d\x0a' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_M' + 'vpMatrix;\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_W' + 'orldMat;\x0d\x0a' + '#else\x0d\x0a\x09un' + 'iform\x20mat4' + '\x20u_MvpMatr' + 'ix;\x0d\x0a\x09unif' + 'orm\x20mat4\x20u' + '_WorldMat;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20B' + 'ONE\x0d\x0a\x09cons' + 't\x20int\x20c_Ma' + 'xBoneCount' + '\x20=\x2024;\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec4\x20a_Bone' + 'Indices;\x0d\x0a' + '\x09attribute' + '\x20vec4\x20a_Bo' + 'neWeights;' + '\x0d\x0a\x09uniform' + '\x20mat4\x20u_Bo' + 'nes[c_MaxB' + 'oneCount];' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0aattribut' + 'e\x20vec3\x20a_N' + 'ormal;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Normal;' + '\x20\x0d\x0a\x0d\x0a#if\x20d' + 'efined(NOR' + 'MALTEXTURE' + ')||defined' + '(PARALLAXT' + 'EXTURE)\x0d\x0a\x09' + 'attribute\x20' + 'vec4\x20a_Tan' + 'gent0;\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_Tangen' + 't;\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'Binormal;\x0d' + '\x0a\x20\x20\x20\x20#ifde' + 'f\x20PARALLAX' + 'TEXTURE\x0d\x0a\x09' + '\x20\x20\x20\x20varyin' + 'g\x20vec3\x20v_V' + 'iewDirForP' + 'arallax;\x0d\x0a' + '\x20\x20\x20\x20#endif' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(ALBEDO' + 'TEXTURE)||' + 'defined(ME' + 'TALLICGLOS' + 'STEXTURE)|' + '|defined(N' + 'ORMALTEXTU' + 'RE)||defin' + 'ed(EMISSIO' + 'NTEXTURE)|' + '|defined(O' + 'CCLUSIONTE' + 'XTURE)||de' + 'fined(PARA' + 'LLAXTEXTUR' + 'E)||(defin' + 'ed(LIGHTMA' + 'P)&&define' + 'd(UV))\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec2\x20a_Texc' + 'oord0;\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(LI' + 'GHTMAP)&&d' + 'efined(UV1' + ')\x0d\x0a\x09attrib' + 'ute\x20vec2\x20a' + '_Texcoord1' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'LIGHTMAP\x0d\x0a' + '\x09uniform\x20v' + 'ec4\x20u_Ligh' + ('tmapScaleO' + 'ffset;\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_LightM' + 'apUV;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0auni' + 'form\x20vec3\x20' + 'u_CameraPo' + 's;\x0d\x0avaryin' + 'g\x20vec3\x20v_E' + 'yeVec;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Positio' + 'nWorld;\x0d\x0av' + 'arying\x20flo' + 'at\x20v_posVi' + 'ewZ;\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'CALCULATE_' + 'SHADOWS)&&' + '!defined(S' + 'HADOW_CASC' + 'ADE)\x0d\x0a\x09var' + 'ying\x20vec4\x20' + 'v_ShadowCo' + 'ord;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(CA' + 'LCULATE_SP' + 'OTSHADOWS)' + '//shader中自' + '定义的宏不可用ifd' + 'ef\x20必须改成if\x20' + 'defined\x0d\x0a\x09' + 'varying\x20ve' + 'c4\x20v_SpotS' + 'hadowCoord' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'TILINGOFFS' + 'ET\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'TilingOffs' + 'et;\x0d\x0a#endi' + 'f'), _0x2f98ea = '#ifdef\x20ALP' + 'HATEST\x0d\x0a\x09u' + 'niform\x20flo' + 'at\x20u_Alpha' + 'TestValue;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0auniform\x20' + 'vec4\x20u_Alb' + 'edoColor;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'NORMALTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Norm' + 'alTexture;' + '\x0d\x0a\x09uniform' + '\x20float\x20u_N' + 'ormalScale' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'ALBEDOTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Albe' + 'doTexture;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20M' + 'ETALLICGLO' + 'SSTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_Metallic' + 'GlossTextu' + 're;\x0d\x0a#endi' + 'f\x0d\x0auniform' + '\x20float\x20u_M' + 'etallic;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'PECULARGLO' + 'SSTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_SpecGlos' + 'sTexture;\x0d' + '\x0a#endif\x0d\x0au' + 'niform\x20vec' + '3\x20u_Specul' + 'arColor;\x0d\x0a' + '\x0d\x0auniform\x20' + 'float\x20u_Sm' + 'oothness;\x0d' + '\x0auniform\x20f' + 'loat\x20u_Smo' + 'othnessSca' + 'le;\x0d\x0a\x0d\x0a#if' + 'def\x20PARALL' + 'AXTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_Parallax' + 'Texture;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Par' + 'allaxScale' + ';\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_V' + 'iewDirForP' + 'arallax;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20OCC' + 'LUSIONTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Occl' + 'usionTextu' + 're;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_occlusio' + 'nStrength;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20E' + 'MISSION\x20\x0d\x0a' + '\x09#ifdef\x20EM' + 'ISSIONTEXT' + 'URE\x0d\x0a\x09\x09uni' + 'form\x20sampl' + 'er2D\x20u_Emi' + 'ssionTextu' + 're;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'EmissionCo' + 'lor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(AL' + 'BEDOTEXTUR' + 'E)||define' + 'd(METALLIC' + 'GLOSSTEXTU' + 'RE)||defin' + ('ed(NORMALT' + 'EXTURE)||d' + 'efined(EMI' + 'SSIONTEXTU' + 'RE)||defin' + 'ed(OCCLUSI' + 'ONTEXTURE)' + '||defined(' + 'PARALLAXTE' + 'XTURE)\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20LIGHTMA' + 'P\x0d\x0a\x09varyin' + 'g\x20vec2\x20v_L' + 'ightMapUV;' + '\x0d\x0a\x09uniform' + '\x20sampler2D' + '\x20u_LightMa' + 'p;\x0d\x0a\x09#ifde' + 'f\x20LIGHTMAP' + '_DIRECTION' + 'AL\x0d\x0a\x09\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tMapDirect' + 'ion;\x0d\x0a\x09#en' + 'dif\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Normal;\x20\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '\x0d\x0a\x09#ifdef\x20' + 'LEGACYSING' + 'LELIGHTING' + '\x0d\x0a\x09\x09#ifdef' + '\x20DIRECTION' + 'LIGHT\x0d\x0a\x09\x09\x09' + 'uniform\x20Di' + 'rectionLig' + 'ht\x20u_Direc' + 'tionLight;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09unif' + 'orm\x20PointL' + 'ight\x20u_Poi' + 'ntLight;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09uniform' + '\x20SpotLight' + '\x20u_SpotLig' + 'ht;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09unifo' + 'rm\x20mat4\x20u_' + 'View;\x0d\x0a\x09\x09u' + 'niform\x20vec' + '4\x20u_Projec' + 'tionParams' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20vec4\x20u_' + 'Viewport;\x0d' + '\x0a\x09\x09uniform' + '\x20int\x20u_Dir' + 'ationLight' + 'Count;\x0d\x0a\x09\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'LightBuffe' + 'r;\x0d\x0a\x09\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tClusterBu' + 'ffer;\x0d\x0a\x09#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avary' + 'ing\x20vec3\x20v' + '_EyeVec;\x0d\x0a' + '\x0d\x0a#ifdef\x20N' + 'ORMALTEXTU' + 'RE\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'Tangent;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Bino' + 'rmal;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + 'def\x20FOG\x0d\x0a\x09') + ('uniform\x20fl' + 'oat\x20u_FogS' + 'tart;\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogRan' + 'ge;\x0d\x0a\x09unif' + 'orm\x20vec3\x20u' + '_FogColor;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a\x0d\x0a//后面考虑' + '宏TODO\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Position' + 'World;\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(CALCULAT' + 'E_SHADOWS)' + '&&!defined' + '(SHADOW_CA' + 'SCADE)\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_Shadow' + 'Coord;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'CALCULATE_' + 'SPOTSHADOW' + 'S)//shader' + '中自定义的宏不可用i' + 'fdef\x20必须改成i' + 'f\x20defined\x0d' + '\x0a\x09varying\x20' + 'vec4\x20v_Spo' + 'tShadowCoo' + 'rd;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0amediu' + 'mp\x20float\x20l' + 'erpOneTo(m' + 'ediump\x20flo' + 'at\x20b,\x20medi' + 'ump\x20float\x20' + 't)\x0d\x0a{\x0d\x0a\x20\x20\x20' + '\x20mediump\x20f' + 'loat\x20oneMi' + 'nusT\x20=\x201.0' + '\x20-\x20t;\x0d\x0a\x20\x20\x20' + '\x20return\x20on' + 'eMinusT\x20+\x20' + 'b\x20*\x20t;\x0d\x0a}\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'EMISSION\x20\x0d' + '\x0a\x09vec3\x20emi' + 'ssion(vec2' + '\x20uv)\x0d\x0a\x09{\x0d\x0a' + '\x09\x09#ifdef\x20E' + 'MISSIONTEX' + 'TURE\x0d\x0a\x09\x09\x09r' + 'eturn\x20text' + 'ure2D(u_Em' + 'issionText' + 'ure,\x20uv).r' + 'gb\x20*\x20u_Emi' + 'ssionColor' + '.rgb;\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09r' + 'eturn\x20u_Em' + 'issionColo' + 'r.rgb;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09}' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0amediump\x20' + 'float\x20getA' + 'lpha(vec2\x20' + 'uv)\x0d\x0a{\x0d\x0a\x09#' + 'ifdef\x20SMOO' + 'THNESSSOUR' + 'CE_ALBEDOT' + 'EXTURE_ALP' + 'HA\x0d\x0a\x09\x09retu' + 'rn\x20u_Albed' + 'oColor.a;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09#ifdef\x20AL' + 'BEDOTEXTUR' + 'E\x0d\x0a\x09\x09\x09retu' + 'rn\x20texture' + '2D(u_Albed' + 'oTexture,\x20' + 'uv).a\x20*\x20u_' + 'AlbedoColo' + 'r.a;\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09re' + 'turn\x20u_Alb' + 'edoColor.a' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a}\x0d\x0a\x0d\x0amed' + 'iump\x20float' + '\x20getOcclus' + 'ion(vec2\x20u') + ('v)\x0d\x0a{\x0d\x0a\x09#i' + 'fdef\x20OCCLU' + 'SIONTEXTUR' + 'E\x0d\x0a\x09\x09mediu' + 'mp\x20float\x20o' + 'cc\x20=\x20textu' + 're2D(u_Occ' + 'lusionText' + 'ure,\x20uv).g' + ';\x0d\x0a\x09\x09retur' + 'n\x20lerpOneT' + 'o(occ,\x20u_o' + 'cclusionSt' + 'rength);\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'return\x201.0' + ';\x0d\x0a\x09#endif' + '\x0d\x0a}\x0d\x0a\x0d\x0amed' + 'iump\x20vec3\x20' + 'albedo(vec' + '2\x20uv)\x0d\x0a{\x0d\x0a' + '\x09#ifdef\x20AL' + 'BEDOTEXTUR' + 'E\x0d\x0a\x09\x09retur' + 'n\x20u_Albedo' + 'Color.rgb\x20' + '*\x20texture2' + 'D(u_Albedo' + 'Texture,\x20u' + 'v).rgb;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09r' + 'eturn\x20u_Al' + 'bedoColor.' + 'rgb;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09//TO' + 'DO:Detail\x20' + 'Texture\x0d\x0a}' + '\x0d\x0a\x0d\x0amedium' + 'p\x20vec2\x20get' + 'MetallicGl' + 'oss(vec2\x20u' + 'v)\x0d\x0a{\x0d\x0a\x09me' + 'diump\x20vec2' + '\x20ms;//x\x20is' + '\x20metallic,' + 'y\x20is\x20smoot' + 'hness\x0d\x0a\x09#i' + 'fdef\x20METAL' + 'LICGLOSSTE' + 'XTURE\x0d\x0a\x09\x09#' + 'ifdef\x20SMOO' + 'THNESSSOUR' + 'CE_ALBEDOT' + 'EXTURE_ALP' + 'HA\x0d\x0a\x09\x09\x09ms.' + 'x\x20=\x20textur' + 'e2D(u_Meta' + 'llicGlossT' + 'exture,\x20uv' + ').r;\x0d\x0a\x09\x09\x09#' + 'ifdef\x20ALBE' + 'DOTEXTURE\x0d' + '\x0a\x09\x09\x09\x09ms.y\x20' + '=\x20texture2' + 'D(u_Albedo' + 'Texture,\x20u' + 'v).a*u_Smo' + 'othnessSca' + 'le;\x0d\x0a\x09\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09\x09m' + 's.y\x20=\x20u_Sm' + 'oothnessSc' + 'ale;\x0d\x0a\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09m' + 's\x20=\x20textur' + 'e2D(u_Meta' + 'llicGlossT' + 'exture,\x20uv' + ').ra;\x0d\x0a\x09\x09\x09' + 'ms.y\x20*=\x20u_' + 'Smoothness' + 'Scale;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09ms' + '.x\x20=\x20u_Met' + 'allic;\x0d\x0a\x09\x09' + '#ifdef\x20SMO' + 'OTHNESSSOU' + 'RCE_ALBEDO' + 'TEXTURE_AL' + 'PHA\x0d\x0a\x09\x09\x09#i' + 'fdef\x20ALBED' + 'OTEXTURE\x0d\x0a' + '\x09\x09\x09\x09ms.y\x20=' + '\x20texture2D' + '(u_AlbedoT' + 'exture,\x20uv' + ').a\x20*\x20u_Sm' + 'oothnessSc') + ('ale;\x0d\x0a\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + 'ms.y\x20=\x20u_S' + 'moothnessS' + 'cale;\x0d\x0a\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + 'ms.y\x20=\x20u_S' + 'moothness;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09return\x20m' + 's;\x0d\x0a}\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '4\x20specular' + 'Gloss(vec2' + '\x20uv)\x0d\x0a{\x0d\x0a\x09' + 'mediump\x20ve' + 'c4\x20sg;\x0d\x0a\x09#' + 'ifdef\x20SPEC' + 'ULARGLOSST' + 'EXTURE\x0d\x0a\x09\x09' + '#ifdef\x20SMO' + 'OTHNESSSOU' + 'RCE_ALBEDO' + 'TEXTURE_AL' + 'PHA\x0d\x0a\x09\x09\x09sg' + '.rgb\x20=\x20tex' + 'ture2D(u_S' + 'pecGlossTe' + 'xture,\x20uv)' + '.rgb;\x0d\x0a\x09\x09\x09' + '#ifdef\x20ALB' + 'EDOTEXTURE' + '\x0d\x0a\x09\x09\x09\x09sg.a' + '\x20=\x20texture' + '2D(u_Albed' + 'oTexture,\x20' + 'uv).a*u_Sm' + 'oothnessSc' + 'ale;\x0d\x0a\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + 'sg.a\x20=\x20u_S' + 'moothnessS' + 'cale;\x0d\x0a\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + 'sg\x20=\x20textu' + 're2D(u_Spe' + 'cGlossText' + 'ure,\x20uv);\x0d' + '\x0a\x09\x09\x09sg.a\x20*' + '=\x20u_Smooth' + 'nessScale;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09sg.rgb\x20=' + '\x20u_Specula' + 'rColor.rgb' + ';\x0d\x0a\x09\x09#ifde' + 'f\x20SMOOTHNE' + 'SSSOURCE_A' + 'LBEDOTEXTU' + 'RE_ALPHA\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'ALBEDOTEXT' + 'URE\x0d\x0a\x09\x09\x09\x09s' + 'g.a\x20=\x20text' + 'ure2D(u_Al' + 'bedoTextur' + 'e,\x20uv).a\x20*' + '\x20u_Smoothn' + 'essScale;\x0d' + '\x0a\x09\x09\x09#else\x0d' + '\x0a\x09\x09\x09\x09sg.a\x20' + '=\x20u_Smooth' + 'nessScale;' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09sg.a\x20' + '=\x20u_Smooth' + 'ness;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x09re' + 'turn\x20sg;\x0d\x0a' + '}\x0d\x0a\x0d\x0a\x0d\x0a#if' + 'def\x20NORMAL' + 'TEXTURE\x0d\x0a\x09' + 'mediump\x20ve' + 'c3\x20unpackS' + 'caleNormal' + '(mediump\x20v' + 'ec3\x20packed' + 'normal,\x20me' + 'diump\x20floa' + 't\x20bumpScal' + 'e)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'mediump\x20ve' + 'c3\x20normal\x20' + '=\x20packedno') + ('rmal.xyz\x20*' + '\x202.0\x20-\x201.0' + ';\x0d\x0a\x09\x09norma' + 'l.y=-norma' + 'l.y;//NOTE' + ':because\x20u' + 'nity\x20to\x20La' + 'yaAir\x20coor' + 'dSystem.\x0d\x0a' + '\x09\x09normal.x' + 'y\x20*=\x20bumpS' + 'cale;\x0d\x0a\x09\x09r' + 'eturn\x20norm' + 'al;\x0d\x0a\x09}\x0d\x0a\x09' + '\x0d\x0a\x09mediump' + '\x20vec3\x20norm' + 'alInTangen' + 'tSpace(vec' + '2\x20texcoord' + 's)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'mediump\x20ve' + 'c3\x20normalT' + 'angent\x20=\x20u' + 'npackScale' + 'Normal(tex' + 'ture2D(u_N' + 'ormalTextu' + 're,\x20texcoo' + 'rds).rgb,u' + '_NormalSca' + 'le);\x0d\x0a\x09\x09re' + 'turn\x20norma' + 'lTangent;\x0d' + '\x0a\x09}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20PARALLAX' + 'TEXTURE\x0d\x0a\x09' + 'mediump\x20ve' + 'c2\x20paralla' + 'xOffset1St' + 'ep(mediump' + '\x20float\x20h,\x20' + 'mediump\x20fl' + 'oat\x20height' + ',\x20mediump\x20' + 'vec3\x20viewD' + 'ir)\x0d\x0a\x09{\x0d\x0a\x09' + '\x09h\x20=\x20h\x20*\x20h' + 'eight\x20-\x20he' + 'ight\x20/\x202.0' + ';\x0d\x0a\x09\x09viewD' + 'ir.z\x20+=\x200.' + '42;\x0d\x0a\x09\x09ret' + 'urn\x20h\x20*\x20(v' + 'iewDir.xy\x20' + '/\x20viewDir.' + 'z);\x0d\x0a\x09}\x0d\x0a\x0d' + '\x0a\x09vec2\x20par' + 'allax(vec2' + '\x20texcoords' + ',\x20mediump\x20' + 'vec3\x20viewD' + 'ir)\x0d\x0a\x09{\x0d\x0a\x09' + '\x09mediump\x20f' + 'loat\x20h\x20=\x20t' + 'exture2D(u' + '_ParallaxT' + 'exture,\x20te' + 'xcoords.xy' + ').g;\x0d\x0a\x09\x09ve' + 'c2\x20offset\x20' + '=\x20parallax' + 'Offset1Ste' + 'p(h,\x20u_Par' + 'allaxScale' + ',\x20viewDir)' + ';\x0d\x0a\x09\x09retur' + 'n\x20texcoord' + 's+offset;\x0d' + '\x0a\x09}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a'), _0x544217 = 'vec2\x20trans' + 'formLightM' + 'apUV(in\x20ve' + 'c2\x20texcoor' + 'd,in\x20vec4\x20' + 'lightmapSc' + 'aleOffset)' + '\x0d\x0a{\x0d\x0a\x09vec2' + '\x20lightMapU' + 'V=vec2(tex' + 'coord.x,1.' + '0-texcoord' + '.y)*lightm' + 'apScaleOff' + 'set.xy+lig' + 'htmapScale' + 'Offset.zw;' + '\x0d\x0a\x09lightMa' + 'pUV.y=1.0-' + 'lightMapUV' + '.y;\x0d\x0a\x09retu' + 'rn\x20lightMa' + 'pUV;\x20\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20ver' + 'texForward' + '()\x0d\x0a{\x0d\x0a\x09ve' + 'c4\x20positio' + 'n;\x0d\x0a\x09#ifde' + 'f\x20BONE\x0d\x0a\x09\x09' + 'mat4\x20skinT' + 'ransform;\x0d' + '\x0a\x09\x20\x09#ifdef' + '\x20SIMPLEBON' + 'E\x0d\x0a\x09\x09\x09floa' + 't\x20currentP' + 'ixelPos;\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09\x09\x09\x09cu' + 'rrentPixel' + 'Pos\x20=\x20a_Si' + 'mpleTextur' + 'eParams.x+' + 'a_SimpleTe' + 'xtureParam' + 's.y;\x0d\x0a\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + 'currentPix' + 'elPos\x20=\x20u_' + 'SimpleAnim' + 'atorParams' + '.x+u_Simpl' + 'eAnimatorP' + 'arams.y;\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09float\x20' + 'offset\x20=\x201' + '.0/u_Simpl' + 'eAnimatorT' + 'extureSize' + ';\x0d\x0a\x09\x09\x09skin' + 'Transform\x20' + '=\x20\x20loadMat' + 'FromTextur' + 'e(currentP' + 'ixelPos,in' + 't(a_BoneIn' + 'dices.x),o' + 'ffset)\x20*\x20a' + '_BoneWeigh' + 'ts.x;\x0d\x0a\x09\x09\x09' + 'skinTransf' + 'orm\x20+=\x20loa' + 'dMatFromTe' + 'xture(curr' + 'entPixelPo' + 's,int(a_Bo' + 'neIndices.' + 'y),offset)' + '\x20*\x20a_BoneW' + 'eights.y;\x0d' + '\x0a\x09\x09\x09skinTr' + 'ansform\x20+=' + '\x20loadMatFr' + 'omTexture(' + 'currentPix' + 'elPos,int(' + 'a_BoneIndi' + 'ces.z),off' + 'set)\x20*\x20a_B' + 'oneWeights' + '.z;\x0d\x0a\x09\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20loadM' + 'atFromText' + 'ure(curren' + 'tPixelPos,' + 'int(a_Bone' + 'Indices.w)' + ',offset)\x20*' + ('\x20a_BoneWei' + 'ghts.w;\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09skinTrans' + 'form\x20=\x20\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.x)]\x20*\x20' + 'a_BoneWeig' + 'hts.x;\x0d\x0a\x09\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.y)]\x20*\x20' + 'a_BoneWeig' + 'hts.y;\x0d\x0a\x09\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.z)]\x20*\x20' + 'a_BoneWeig' + 'hts.z;\x0d\x0a\x09\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.w)]\x20*\x20' + 'a_BoneWeig' + 'hts.w;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x09' + 'position=s' + 'kinTransfo' + 'rm*a_Posit' + 'ion;\x0d\x0a\x09\x20#e' + 'lse\x0d\x0a\x09\x09pos' + 'ition=a_Po' + 'sition;\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09gl_Pos' + 'ition\x20=\x20a_' + 'MvpMatrix\x20' + '*\x20position' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20position;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09mat4\x20w' + 'orldMat;\x0d\x0a' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09worldM' + 'at\x20=\x20a_Wor' + 'ldMat;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09wo' + 'rldMat\x20=\x20u' + '_WorldMat;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09v_Posi' + 'tionWorld=' + '(worldMat*' + 'position).' + 'xyz;\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(ALBEDOTEX' + 'TURE)||def' + 'ined(METAL' + 'LICGLOSSTE' + 'XTURE)||de' + 'fined(NORM' + 'ALTEXTURE)' + '||defined(' + 'EMISSIONTE' + 'XTURE)||de' + 'fined(OCCL' + 'USIONTEXTU' + 'RE)||defin' + 'ed(PARALLA' + 'XTEXTURE)\x0d' + '\x0a\x09\x09#ifdef\x20' + 'TILINGOFFS' + 'ET\x0d\x0a\x09\x09\x09v_T' + 'excoord0=T' + 'ransformUV' + '(a_Texcoor' + 'd0,u_Tilin' + 'gOffset);\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09v_Texco' + 'ord0=a_Tex' + 'coord0;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09v_EyeVec\x20' + '=u_CameraP') + ('os-v_Posit' + 'ionWorld;/' + '/will\x20norm' + 'alize\x20per-' + 'pixel\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20LIG' + 'HTMAP\x0d\x0a\x09\x09v' + 'ec2\x20texcoo' + 'rd;\x0d\x0a\x09\x09#if' + 'def\x20UV1\x0d\x0a\x09' + '\x09\x09texcoord' + '=a_Texcoor' + 'd1;\x0d\x0a\x09\x09#el' + 'se\x0d\x0a\x09\x09\x09tex' + 'coord=a_Te' + 'xcoord0;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09v_LightM' + 'apUV=trans' + 'formLightM' + 'apUV(texco' + 'ord,u_Ligh' + 'tmapScaleO' + 'ffset);\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09mat3\x20worl' + 'dInvMat;\x0d\x0a' + '\x09#ifdef\x20BO' + 'NE\x0d\x0a\x09\x09worl' + 'dInvMat=IN' + 'VERSE_MAT(' + 'mat3(world' + 'Mat*skinTr' + 'ansform));' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09worldInv' + 'Mat=INVERS' + 'E_MAT(mat3' + '(worldMat)' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09v_No' + 'rmal=norma' + 'lize(a_Nor' + 'mal*worldI' + 'nvMat);//i' + 'f\x20no\x20norma' + 'lize\x20will\x20' + 'cause\x20prec' + 'ision\x20prob' + 'lem.\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20NORM' + 'ALTEXTURE\x0d' + '\x0a\x09\x09v_Tange' + 'nt=normali' + 'ze(a_Tange' + 'nt0.xyz*wo' + 'rldInvMat)' + ';\x0d\x0a\x09\x09v_Bin' + 'ormal=cros' + 's(v_Normal' + ',v_Tangent' + ')*a_Tangen' + 't0.w;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20PARA' + 'LLAXTEXTUR' + 'E\x0d\x0a\x09\x09vec3\x20' + 'binormal\x20=' + '\x20cross(a_N' + 'ormal,\x20a_T' + 'angent0.xy' + 'z)*a_Tange' + 'nt0.w;\x0d\x0a\x09\x09' + 'mat3\x20objec' + 'tTBN\x20=\x20mat' + '3(a_Tangen' + 't0.xyz,\x20bi' + 'normal,\x20a_' + 'Normal);\x0d\x0a' + '\x09\x09v_ViewDi' + 'rForParall' + 'ax\x20=(u_Cam' + 'eraPos*wor' + 'ldInvMat-p' + 'osition.xy' + 'z)*objectT' + 'BN;\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09#if' + '\x20defined(C' + 'ALCULATE_S' + 'HADOWS)&&!' + 'defined(SH' + 'ADOW_CASCA' + 'DE)\x0d\x0a\x09\x09v_S' + 'hadowCoord' + '\x20=\x20getShad' + 'owCoord(ve' + 'c4(v_Posit' + 'ionWorld,1' + '.0));\x0d\x0a\x09#e') + ('ndif\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(CALCULATE' + '_SPOTSHADO' + 'WS)//shade' + 'r中自定义的宏不可用' + 'ifdef\x20必须改成' + 'if\x20defined' + '\x0d\x0a\x09\x09v_Spot' + 'ShadowCoor' + 'd\x20=\x20u_Spot' + 'ViewProjec' + 'tMatrix*ve' + 'c4(v_Posit' + 'ionWorld,1' + '.0);\x0d\x0a\x09#en' + 'dif\x0d\x0a}'), _0x33eca0 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a#if' + '\x20defined(G' + 'L_FRAGMENT' + '_PRECISION' + '_HIGH)//\u00a0原' + '来的写法会被我们自己' + '的解析流程处理，而我' + '们的解析是不认内置宏' + '的，导致被删掉，所以' + '改成\u00a0if\u00a0defi' + 'ned\u00a0了\x0d\x0a\x09pr' + 'ecision\x20hi' + 'ghp\x20float;' + '\x0d\x0a#else\x0d\x0a\x09' + 'precision\x20' + 'mediump\x20fl' + 'oat;\x0d\x0a#end' + 'if\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_PositionT' + 'excoord;\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x20{\x0d\x0a\x09gl_Po' + 'sition\x20=\x20v' + 'ec4(a_Posi' + 'tionTexcoo' + 'rd.xy,\x200.0' + ',\x201.0);\x0d\x0a\x09' + 'v_Texcoord' + '0\x20=\x20a_Posi' + 'tionTexcoo' + 'rd.zw;\x0d\x0a\x09g' + 'l_Position' + '\x20=\x20remapGL' + 'PositionZ(' + 'gl_Positio' + 'n);\x0d\x0a}', _0x1b6030 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'vec4\x20u_Mai' + 'nTex_Texel' + 'Size;\x0d\x0a\x0d\x0av' + 'oid\x20fragDo' + 'wnsample13' + '()\x20{\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'color\x20=\x20do' + 'wnsampleBo' + 'x13Tap(u_M' + 'ainTex,\x20v_' + 'Texcoord0,' + '\x20u_MainTex' + '_TexelSize' + '.xy);\x0d\x0a\x09gl' + '_FragColor' + '\x20=\x20color;\x0d' + '\x0a}\x0d\x0a\x0d\x0avoid' + '\x20main()\x20{\x0d' + '\x0a\x09fragDown' + 'sample13()' + ';\x0d\x0a}', _0x3e0178 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'vec4\x20u_Mai' + 'nTex_Texel' + 'Size;\x0d\x0a\x0d\x0av' + 'oid\x20fragDo' + 'wnsample4(' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec4\x20c' + 'olor\x20=\x20dow' + 'nsampleBox' + '4Tap(u_Mai' + 'nTex,\x20v_Te' + 'xcoord0,\x20u' + '_MainTex_T' + 'exelSize.x' + 'y);\x0d\x0a\x09gl_F' + 'ragColor\x20=' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + 'fragDownsa' + 'mple4();\x0d\x0a' + '}', _0x4163a9 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_AutoExpo' + 'sureTex;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_MainT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'Threshold;' + '\x20//\x20x:\x20thr' + 'eshold\x20val' + 'ue\x20(linear' + '),\x20y:\x20thre' + 'shold\x20-\x20kn' + 'ee,\x20z:\x20kne' + 'e\x20*\x202,\x20w:\x20' + '0.25\x20/\x20kne' + 'e\x0d\x0auniform' + '\x20vec4\x20u_Pa' + 'rams;\x20//\x20x' + ':\x20clamp,\x20y' + 'zw:\x20unused' + '\x0d\x0a\x0d\x0amedium' + 'p\x20vec4\x20pre' + 'filter(med' + 'iump\x20vec4\x20' + 'color,\x20vec' + '2\x20uv)\x20{\x0d\x0a\x09' + 'mediump\x20fl' + 'oat\x20autoEx' + 'posure\x20=\x20t' + 'exture2D(u' + '_AutoExpos' + 'ureTex,\x20uv' + ').r;\x0d\x0a\x09col' + 'or\x20*=\x20auto' + 'Exposure;\x0d' + '\x0a\x09color\x20=\x20' + 'min(vec4(u' + '_Params.x)' + ',\x20color);\x20' + '//\x20clamp\x20t' + 'o\x20max\x0d\x0a\x09co' + 'lor\x20=\x20quad' + 'raticThres' + 'hold(color' + ',\x20u_Thresh' + 'old.x,\x20u_T' + 'hreshold.y' + 'zw);\x0d\x0a\x09ret' + 'urn\x20color;' + '\x0d\x0a}\x0d\x0a\x0d\x0avoi' + 'd\x20fragPref' + 'ilter13()\x20' + '{\x0d\x0a\x09medium' + 'p\x20vec4\x20col' + 'or\x20=\x20downs' + 'ampleBox13' + 'Tap(u_Main' + 'Tex,\x20v_Tex' + 'coord0,\x20u_' + 'MainTex_Te' + 'xelSize.xy' + ');\x0d\x0a\x09gl_Fr' + 'agColor\x20=\x20' + 'prefilter(' + 'safeHDR(co' + 'lor),\x20v_Te' + 'xcoord0);\x0d' + '\x0a}\x0d\x0a\x0d\x0avoid' + '\x20main()\x20{\x0d' + ('\x0a\x09fragPref' + 'ilter13();' + '\x0d\x0a}'), _0x567bab = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_AutoExpo' + 'sureTex;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_MainT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'Threshold;' + '\x20//\x20x:\x20thr' + 'eshold\x20val' + 'ue\x20(linear' + '),\x20y:\x20thre' + 'shold\x20-\x20kn' + 'ee,\x20z:\x20kne' + 'e\x20*\x202,\x20w:\x20' + '0.25\x20/\x20kne' + 'e\x0d\x0auniform' + '\x20vec4\x20u_Pa' + 'rams;\x20//\x20x' + ':\x20clamp,\x20y' + 'zw:\x20unused' + '\x0d\x0a\x0d\x0amedium' + 'p\x20vec4\x20pre' + 'filter(med' + 'iump\x20vec4\x20' + 'color,\x20vec' + '2\x20uv)\x20{\x0d\x0a\x09' + 'mediump\x20fl' + 'oat\x20autoEx' + 'posure\x20=\x20t' + 'exture2D(u' + '_AutoExpos' + 'ureTex,\x20uv' + ').r;\x0d\x0a\x09col' + 'or\x20*=\x20auto' + 'Exposure;\x0d' + '\x0a\x09color\x20=\x20' + 'min(vec4(u' + '_Params.x)' + ',\x20color);\x20' + '//\x20clamp\x20t' + 'o\x20max\x0d\x0a\x09co' + 'lor\x20=\x20quad' + 'raticThres' + 'hold(color' + ',\x20u_Thresh' + 'old.x,\x20u_T' + 'hreshold.y' + 'zw);\x0d\x0a\x09ret' + 'urn\x20color;' + '\x0d\x0a}\x0d\x0a\x0d\x0avoi' + 'd\x20fragPref' + 'ilter4()\x20{' + '\x0d\x0a\x09mediump' + '\x20vec4\x20colo' + 'r\x20=\x20downsa' + 'mpleBox4Ta' + 'p(u_MainTe' + 'x,\x20v_Texco' + 'ord0,\x20u_Ma' + 'inTex_Texe' + 'lSize.xy);' + '\x0d\x0a\x09gl_Frag' + 'Color\x20=\x20pr' + 'efilter(sa' + 'feHDR(colo' + 'r),\x20v_Texc' + 'oord0);\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + ('fragPrefil' + 'ter4();\x0d\x0a}'), _0x1c1fa4 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_BloomTex' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'MainTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20fl' + 'oat\x20u_Samp' + 'leScale;\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec4\x20combi' + 'ne(mediump' + '\x20vec4\x20bloo' + 'm,\x20vec2\x20uv' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec4\x20c' + 'olor\x20=\x20tex' + 'ture2D(u_B' + 'loomTex,\x20u' + 'v);\x0d\x0a\x09retu' + 'rn\x20bloom\x20+' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragUpsampl' + 'eBox()\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20bloom\x20' + '=\x20upsample' + 'Box(u_Main' + 'Tex,\x20v_Tex' + 'coord0,\x20u_' + 'MainTex_Te' + 'xelSize.xy' + ',\x20vec4(u_S' + 'ampleScale' + '));\x0d\x0a\x09gl_F' + 'ragColor\x20=' + '\x20combine(b' + 'loom,\x20v_Te' + 'xcoord0);\x0d' + '\x0a}\x0d\x0a\x0d\x0avoid' + '\x20main()\x20{\x0d' + '\x0a\x09fragUpsa' + 'mpleBox();' + '\x0d\x0a}', _0x28fd74 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_BloomTex' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'MainTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20fl' + 'oat\x20u_Samp' + 'leScale;\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec4\x20combi' + 'ne(mediump' + '\x20vec4\x20bloo' + 'm,\x20vec2\x20uv' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec4\x20c' + 'olor\x20=\x20tex' + 'ture2D(u_B' + 'loomTex,\x20u' + 'v);\x0d\x0a\x09retu' + 'rn\x20bloom\x20+' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragUpsampl' + 'eTent()\x20{\x0d' + '\x0a\x09mediump\x20' + 'vec4\x20bloom' + '\x20=\x20upsampl' + 'eTent(u_Ma' + 'inTex,\x20v_T' + 'excoord0,\x20' + 'u_MainTex_' + 'TexelSize.' + 'xy,\x20vec4(u' + '_SampleSca' + 'le));\x0d\x0a\x09gl' + '_FragColor' + '\x20=\x20combine' + '(bloom,\x20v_' + 'Texcoord0)' + ';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20main()\x20' + '{\x0d\x0a\x09fragUp' + 'sampleTent' + '();\x0d\x0a}', _0x416fd6 = '#include\x20\x22' + 'StdLib.gls' + 'l\x22;\x0d\x0a\x0d\x0a#de' + 'fine\x20EPSIL' + 'ON\x201.0e-4\x0d' + '\x0a\x0d\x0a//\x20Quad' + 'ratic\x20colo' + 'r\x20threshol' + 'ding\x0d\x0a//\x20c' + 'urve\x20=\x20(th' + 'reshold\x20-\x20' + 'knee,\x20knee' + '\x20*\x202,\x200.25' + '\x20/\x20knee)\x0d\x0a' + 'mediump\x20ve' + 'c4\x20quadrat' + 'icThreshol' + 'd(mediump\x20' + 'vec4\x20color' + ',\x20mediump\x20' + 'float\x20thre' + 'shold,\x20med' + 'iump\x20vec3\x20' + 'curve)\x20{\x0d\x0a' + '\x09//\x20Pixel\x20' + 'brightness' + '\x0d\x0a\x09mediump' + '\x20float\x20br\x20' + '=\x20max3(col' + 'or.r,\x20colo' + 'r.g,\x20color' + '.b);\x0d\x0a\x0d\x0a\x09/' + '/\x20Under-th' + 'reshold\x20pa' + 'rt:\x20quadra' + 'tic\x20curve\x0d' + '\x0a\x09mediump\x20' + 'float\x20rq\x20=' + '\x20clamp(br\x20' + '-\x20curve.x,' + '\x200.0,\x20curv' + 'e.y);\x0d\x0a\x09rq' + '\x20=\x20curve.z' + '\x20*\x20rq\x20*\x20rq' + ';\x0d\x0a\x0d\x0a\x09//\x20C' + 'ombine\x20and' + '\x20apply\x20the' + '\x20brightnes' + 's\x20response' + '\x20curve.\x0d\x0a\x09' + 'color\x20*=\x20m' + 'ax(rq,\x20br\x20' + '-\x20threshol' + 'd)\x20/\x20max(b' + 'r,\x20EPSILON' + ');\x0d\x0a\x0d\x0a\x09ret' + 'urn\x20color;' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d' + '\x0a//\x0d\x0a//\x20sR' + 'GB\x20transfe' + 'r\x20function' + 's\x0d\x0a//\x20Fast' + '\x20path\x20ref:' + '\x20http://ch' + 'illiant.bl' + 'ogspot.com' + '.au/2012/0' + '8/srgb-app' + 'roximation' + 's-for-hlsl' + '.html?m=1\x0d' + '\x0a//\x0d\x0amediu' + 'mp\x20vec3\x20sR' + 'GBToLinear' + '(mediump\x20v' + 'ec3\x20c)\x20{\x0d\x0a' + '\x09#ifdef\x20US' + 'E_VERY_FAS' + 'T_SRGB\x0d\x0a\x09\x09' + 'return\x20c\x20*' + '\x20c;\x0d\x0a\x09#eli' + 'f\x20defined(' + 'USE_FAST_S' + 'RGB)\x0d\x0a\x09\x09re' + 'turn\x20c\x20*\x20(' + 'c\x20*\x20(c\x20*\x200' + '.305306011' + '\x20+\x200.68217' + '1111)\x20+\x200.' + '012522878)' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09mediump' + '\x20vec3\x20line' + 'arRGBLo\x20=\x20' + 'c\x20/\x2012.92;' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20pow' + 'er=vec3(2.' + '4,\x202.4,\x202.' + '4);\x0d\x0a\x09\x09med' + ('iump\x20vec3\x20' + 'linearRGBH' + 'i\x20=\x20positi' + 'vePow((c\x20+' + '\x200.055)\x20/\x20' + '1.055,\x20pow' + 'er);\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20linearRGB' + '\x20=vec3((c.' + 'r<=0.04045' + ')\x20?\x20linear' + 'RGBLo.r\x20:\x20' + 'linearRGBH' + 'i.r,(c.g<=' + '0.04045)\x20?' + '\x20linearRGB' + 'Lo.g\x20:\x20lin' + 'earRGBHi.g' + ',(c.b<=0.0' + '4045)\x20?\x20li' + 'nearRGBLo.' + 'b\x20:\x20linear' + 'RGBHi.b);\x0d' + '\x0a\x09\x09return\x20' + 'linearRGB;' + '\x0d\x0a\x09#endif\x0d' + '\x0a}\x0d\x0a\x0d\x0amedi' + 'ump\x20vec4\x20s' + 'RGBToLinea' + 'r(mediump\x20' + 'vec4\x20c){\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20vec4(sRGB' + 'ToLinear(c' + '.rgb),\x20c.a' + ');\x0d\x0a}\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20line' + 'arToSRGB(m' + 'ediump\x20vec' + '3\x20c)\x20{\x0d\x0a\x09#' + 'ifdef\x20USE_' + 'VERY_FAST_' + 'SRGB\x0d\x0a\x09\x09re' + 'turn\x20sqrt(' + 'c);\x0d\x0a\x09#eli' + 'f\x20defined(' + 'USE_FAST_S' + 'RGB)\x0d\x0a\x09\x09re' + 'turn\x20max(1' + '.055\x20*\x20Pos' + 'itivePow(c' + ',\x200.416666' + '667)\x20-\x200.0' + '55,\x200.0);\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09mediump\x20v' + 'ec3\x20sRGBLo' + '\x20=\x20c\x20*\x2012.' + '92;\x0d\x0a\x09\x09med' + 'iump\x20vec3\x20' + 'power=vec3' + '(1.0\x20/\x202.4' + ',\x201.0\x20/\x202.' + '4,\x201.0\x20/\x202' + '.4);\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20sRGBHi\x20=\x20' + '(positiveP' + 'ow(c,\x20powe' + 'r)\x20*\x201.055' + ')\x20-\x200.055;' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20sRG' + 'B\x20=vec3((c' + '.r<=0.0031' + '308)\x20?\x20sRG' + 'BLo.r\x20:\x20sR' + 'GBHi.r,(c.' + 'g<=0.00313' + '08)\x20?\x20sRGB' + 'Lo.g\x20:\x20sRG' + 'BHi.g,(c.b' + '<=0.003130' + '8)\x20?\x20sRGBL' + 'o.b\x20:\x20sRGB' + 'Hi.b);\x0d\x0a\x09\x09' + 'return\x20sRG' + 'B;\x0d\x0a\x09#endi' + 'f\x0d\x0a}\x0d\x0a\x0d\x0ame' + 'diump\x20vec4' + '\x20linearToS' + 'RGB(medium' + 'p\x20vec4\x20c){' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20vec4(li' + 'nearToSRGB' + '(c.rgb),\x20c' + '.a);\x0d\x0a}'), _0x763db1 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22C' + 'olors.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22Sampli' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_MainTex;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_BloomTex' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20sampler' + '2D\x20u_AutoE' + 'xposureTex' + ';\x0d\x0auniform' + '\x20sampler2D' + '\x20u_Bloom_D' + 'irtTex;\x0d\x0au' + 'niform\x20vec' + '4\x20u_BloomT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'Bloom_Dirt' + 'TileOffset' + ';\x20//\x20xy:\x20t' + 'iling,\x20zw:' + '\x20offset\x0d\x0au' + 'niform\x20med' + 'iump\x20vec3\x20' + 'u_Bloom_Se' + 'ttings;//\x20' + 'x:\x20sampleS' + 'cale,\x20y:\x20i' + 'ntensity,\x20' + 'z:\x20dirt\x20in' + 'tensity\x0d\x0au' + 'niform\x20med' + 'iump\x20vec3\x20' + 'u_Bloom_Co' + 'lor;\x0d\x0a\x0d\x0avo' + 'id\x20main()\x20' + '{\x0d\x0a\x09medium' + 'p\x20float\x20au' + 'toExposure' + '\x20=\x20texture' + '2D(u_AutoE' + 'xposureTex' + ',\x20v_Texcoo' + 'rd0).r;\x0d\x0a\x09' + 'mediump\x20ve' + 'c4\x20color=v' + 'ec4(0.0);\x0d' + '\x0a\x09color\x20=\x20' + 'texture2D(' + 'u_MainTex,' + '\x20v_Texcoor' + 'd0);\x0d\x0a\x09\x0d\x0a\x09' + 'color\x20=\x20sR' + 'GBToLinear' + '(color);\x0d\x0a' + '\x09color.rgb' + '\x20*=\x20autoEx' + 'posure;\x0d\x0a\x09' + '\x0d\x0a\x09#if\x20def' + 'ined(BLOOM' + ')||defined' + '(BLOOM_LOW' + ')\x0d\x0a\x09\x09#ifde' + 'f\x20BLOOM\x0d\x0a\x09' + '\x09\x09mediump\x20' + 'vec4\x20bloom' + '\x20=\x20upsampl' + 'eTent(u_Bl' + 'oomTex,\x20v_' + 'Texcoord0,' + '\x20u_BloomTe' + 'x_TexelSiz' + 'e.xy,\x20vec4' + ('(u_Bloom_S' + 'ettings.x)' + ');\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09medi' + 'ump\x20vec4\x20b' + 'loom\x20=\x20ups' + 'ampleBox(u' + '_BloomTex,' + '\x20v_Texcoor' + 'd0,\x20u_Bloo' + 'mTex_Texel' + 'Size.xy,\x20v' + 'ec4(u_Bloo' + 'm_Settings' + '.x));\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '\x09//\x20UVs\x20sh' + 'ould\x20be\x20Di' + 'stort(uv\x20*' + '\x20u_Bloom_D' + 'irtTileOff' + 'set.xy\x20+\x20u' + '_Bloom_Dir' + 'tTileOffse' + 't.zw)\x0d\x0a\x09\x09/' + '/\x20but\x20cons' + 'idering\x20we' + '\x20use\x20a\x20cov' + 'er-style\x20s' + 'cale\x20on\x20th' + 'e\x20dirt\x20tex' + 'ture\x20the\x20d' + 'ifference\x0d' + '\x0a\x09\x09//\x20isn\x27' + 't\x20massive\x20' + 'so\x20we\x20chos' + 'e\x20to\x20save\x20' + 'a\x20few\x20ALUs' + '\x20here\x20inst' + 'ead\x20in\x20cas' + 'e\x20lens\x20dis' + 'tortion\x0d\x0a\x09' + '\x09//\x20is\x20act' + 'ive\x0d\x0a\x09\x09med' + 'iump\x20vec4\x20' + 'dirt\x20=vec4' + '(texture2D' + '(u_Bloom_D' + 'irtTex,\x20v_' + 'Texcoord0\x20' + '*\x20u_Bloom_' + 'DirtTileOf' + 'fset.xy\x20+\x20' + 'u_Bloom_Di' + 'rtTileOffs' + 'et.zw).rgb' + ',\x200.0);\x0d\x0a\x0d' + '\x0a\x09\x09//\x20Addi' + 'tive\x20bloom' + '\x20(artist\x20f' + 'riendly)\x0d\x0a' + '\x09\x09bloom\x20*=' + '\x20u_Bloom_S' + 'ettings.y;' + '\x0d\x0a\x09\x09dirt\x20*' + '=\x20u_Bloom_' + 'Settings.z' + ';\x0d\x0a\x09\x09mediu' + 'mp\x20vec4\x20bl' + 'oomColor=v' + 'ec4(u_Bloo' + 'm_Color,\x201' + '.0);\x0d\x0a\x09\x09co' + 'lor\x20+=\x20blo' + 'om\x20*\x20bloom' + 'Color;\x0d\x0a\x09\x09' + 'color\x20+=\x20d' + 'irt\x20*\x20bloo' + 'm;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'finalColor' + '\x20=\x20color;\x0d' + '\x0a\x09finalCol' + 'or\x20=\x20linea' + 'rToSRGB(fi' + 'nalColor);' + '\x0d\x0a\x09//final' + 'Color.rgb\x20' + '=\x20Dither(f' + 'inalColor.' + 'rgb,\x20v_Tex' + 'coord0);//' + 'TODO:抖动\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=\x20final' + 'Color;\x0d\x0a}'), _0x15a8d6 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(a' + '_PositionT' + 'excoord.xy' + ',\x200.0,\x201.0' + ');\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x42d8af = '//\x20Better,' + '\x20temporall' + 'y\x20stable\x20b' + 'ox\x20filteri' + 'ng\x0d\x0a//\x20[Ji' + 'menez14]\x20h' + 'ttp://goo.' + 'gl/eomGso\x0d' + '\x0a//\x20.\x20.\x20.\x20' + '.\x20.\x20.\x20.\x0d\x0a/' + '/\x20.\x20A\x20.\x20B\x20' + '.\x20C\x20.\x0d\x0a//\x20' + '.\x20.\x20D\x20.\x20E\x20' + '.\x20.\x0d\x0a//\x20.\x20' + 'F\x20.\x20G\x20.\x20H\x20' + '.\x0d\x0a//\x20.\x20.\x20' + 'I\x20.\x20J\x20.\x20.\x0d' + '\x0a//\x20.\x20K\x20.\x20' + 'L\x20.\x20M\x20.\x0d\x0a/' + '/\x20.\x20.\x20.\x20.\x20' + '.\x20.\x20.\x0d\x0amed' + 'iump\x20vec4\x20' + 'downsample' + 'Box13Tap(s' + 'ampler2D\x20t' + 'ex,\x20vec2\x20u' + 'v,\x20vec2\x20te' + 'xelSize)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'A\x20=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20texelS' + 'ize\x20*\x20vec2' + '(-1.0,\x20-1.' + '0));\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20ve' + 'c4\x20B\x20=\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20tex' + 'elSize\x20*\x20v' + 'ec2(\x200.0,\x20' + '-1.0));\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec4\x20C\x20=\x20' + 'texture2D(' + 'tex,\x20uv\x20+\x20' + 'texelSize\x20' + '*\x20vec2(\x201.' + '0,\x20-1.0));' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20D' + '\x20=\x20texture' + '2D(tex,\x20uv' + '\x20+\x20texelSi' + 'ze\x20*\x20vec2(' + '-0.5,\x20-0.5' + '));\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20E\x20=\x20text' + 'ure2D(tex,' + '\x20uv\x20+\x20texe' + 'lSize\x20*\x20ve' + 'c2(\x200.5,\x20-' + '0.5));\x0d\x0a\x20\x20' + '\x20\x20mediump\x20' + 'vec4\x20F\x20=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20+\x20t' + 'exelSize\x20*' + '\x20vec2(-1.0' + ',\x20\x200.0));\x0d' + '\x0a\x20\x20\x20\x20mediu' + 'mp\x20vec4\x20G\x20' + '=\x20texture2' + 'D(tex,\x20uv)' + ';\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'H\x20=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20texelS' + 'ize\x20*\x20vec2' + '(\x201.0,\x20\x200.' + '0));\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20ve' + 'c4\x20I\x20=\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20tex' + 'elSize\x20*\x20v' + 'ec2(-0.5,\x20' + '\x200.5));\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec4\x20J\x20=\x20' + 'texture2D(' + 'tex,\x20uv\x20+\x20' + 'texelSize\x20' + '*\x20vec2(\x200.' + '5,\x20\x200.5));' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20K' + ('\x20=\x20texture' + '2D(tex,\x20uv' + '\x20+\x20texelSi' + 'ze\x20*\x20vec2(' + '-1.0,\x20\x201.0' + '));\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20L\x20=\x20text' + 'ure2D(tex,' + '\x20uv\x20+\x20texe' + 'lSize\x20*\x20ve' + 'c2(\x200.0,\x20\x20' + '1.0));\x0d\x0a\x20\x20' + '\x20\x20mediump\x20' + 'vec4\x20M\x20=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20+\x20t' + 'exelSize\x20*' + '\x20vec2(\x201.0' + ',\x20\x201.0));\x0d' + '\x0a\x0d\x0a\x09medium' + 'p\x20vec2\x20sca' + 'le=\x20vec2(0' + '.5,\x200.125)' + ';\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec2\x20' + 'div\x20=\x20(1.0' + '\x20/\x204.0)\x20*\x20' + 'scale;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20vec4\x20o\x20=' + '\x20(D\x20+\x20E\x20+\x20' + 'I\x20+\x20J)\x20*\x20d' + 'iv.x;\x0d\x0a\x20\x20\x20' + '\x20o\x20+=\x20(A\x20+' + '\x20B\x20+\x20G\x20+\x20F' + ')\x20*\x20div.y;' + '\x0d\x0a\x20\x20\x20\x20o\x20+=' + '\x20(B\x20+\x20C\x20+\x20' + 'H\x20+\x20G)\x20*\x20d' + 'iv.y;\x0d\x0a\x20\x20\x20' + '\x20o\x20+=\x20(F\x20+' + '\x20G\x20+\x20L\x20+\x20K' + ')\x20*\x20div.y;' + '\x0d\x0a\x20\x20\x20\x20o\x20+=' + '\x20(G\x20+\x20H\x20+\x20' + 'M\x20+\x20L)\x20*\x20d' + 'iv.y;\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20return\x20' + 'o;\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x20Standard' + '\x20box\x20filte' + 'ring\x0d\x0amedi' + 'ump\x20vec4\x20d' + 'ownsampleB' + 'ox4Tap(sam' + 'pler2D\x20tex' + ',\x20vec2\x20uv,' + '\x20vec2\x20texe' + 'lSize)\x0d\x0a{\x0d' + '\x0a\x20\x20\x20\x20vec4\x20' + 'd\x20=\x20texelS' + 'ize.xyxy\x20*' + '\x20vec4(-1.0' + ',\x20-1.0,\x201.' + '0,\x201.0);\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20s' + '\x20=\x20\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20d.xy);' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.zy);\x0d\x0a\x20' + '\x20\x20\x20s\x20+=\x20te' + 'xture2D(te' + 'x,\x20uv\x20+\x20d.' + 'xw);\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.zw)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20s\x20*\x20' + '(1.0\x20/\x204.0' + ');\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x209-tap\x20bi' + 'linear\x20ups' + 'ampler\x20(te' + 'nt\x20filter)' + '\x0d\x0a//\x20.\x20.\x20.' + '\x20.\x20.\x20.\x20.\x0d\x0a' + '//\x20.\x201\x20.\x202' + '\x20.\x201\x20.\x0d\x0a//' + '\x20.\x20.\x20.\x20.\x20.' + '\x20.\x20.\x0d\x0a//\x20.' + '\x202\x20.\x204\x20.\x202' + '\x20.\x0d\x0a//\x20.\x20.' + '\x20.\x20.\x20.\x20.\x20.' + '\x0d\x0a//\x20.\x201\x20.') + ('\x202\x20.\x201\x20.\x0d\x0a' + '//\x20.\x20.\x20.\x20.' + '\x20.\x20.\x20.\x0d\x0ame' + 'diump\x20vec4' + '\x20upsampleT' + 'ent(sample' + 'r2D\x20tex,\x20v' + 'ec2\x20uv,\x20ve' + 'c2\x20texelSi' + 'ze,\x20vec4\x20s' + 'ampleScale' + ')\x0d\x0a{\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20d\x20=\x20t' + 'exelSize.x' + 'yxy\x20*\x20vec4' + '(1.0,\x201.0,' + '\x20-1.0,\x200.0' + ')\x20*\x20sample' + 'Scale;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20vec4\x20s\x20=' + '\x20\x20texture2' + 'D(tex,\x20uv\x20' + '-\x20d.xy);\x0d\x0a' + '\x20\x20\x20\x20s\x20+=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20-\x20d' + '.wy)\x20*\x202.0' + ';\x0d\x0a\x20\x20\x20\x20s\x20+' + '=\x20texture2' + 'D(tex,\x20uv\x20' + '-\x20d.zy);\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.zw)\x20*\x202' + '.0;\x0d\x0a\x20\x20\x20\x20s' + '\x20+=\x20textur' + 'e2D(tex,\x20u' + 'v)\x20*\x204.0;\x0d' + '\x0a\x20\x20\x20\x20s\x20+=\x20' + 'texture2D(' + 'tex,\x09uv\x20+\x20' + 'd.xw)\x20*\x202.' + '0;\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.zy)' + ';\x0d\x0a\x20\x20\x20\x20s\x20+' + '=\x20texture2' + 'D(tex,\x20uv\x20' + '+\x20d.wy)\x20*\x20' + '2.0;\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.xy)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20s\x20*\x20' + '(1.0\x20/\x2016.' + '0);\x0d\x0a}\x0d\x0a\x0d\x0a' + '//\x20Standar' + 'd\x20box\x20filt' + 'ering\x0d\x0amed' + 'iump\x20vec4\x20' + 'upsampleBo' + 'x(sampler2' + 'D\x20tex,\x20vec' + '2\x20uv,\x20vec2' + '\x20texelSize' + ',\x20vec4\x20sam' + 'pleScale)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20d\x20=\x20tex' + 'elSize.xyx' + 'y\x20*\x20vec4(-' + '1.0,\x20-1.0,' + '\x201.0,\x201.0)' + '\x20*\x200.5\x20*\x20s' + 'ampleScale' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20s\x20=\x20\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20d.x' + 'y);\x0d\x0a\x20\x20\x20\x20s' + '\x20+=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20d.zy);' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.xw);\x0d\x0a\x20' + '\x20\x20\x20s\x20+=\x20te' + 'xture2D(te' + 'x,\x20uv\x20+\x20d.' + 'zw);\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20return\x20s' + '\x20*\x20(1.0\x20/\x20' + '4.0);\x0d\x0a}'), _0x566021 = '#define\x20HA' + 'LF_MAX\x20\x20\x20\x20' + '\x20\x20\x2065504.0' + '\x20//\x20(2\x20-\x202' + '^-10)\x20*\x202^' + '15\x0d\x0a\x0d\x0a#def' + 'ine\x20FLT_EP' + 'SILON\x20\x20\x20\x201' + '.192092896' + 'e-07\x20//\x20Sm' + 'allest\x20pos' + 'itive\x20numb' + 'er,\x20such\x20t' + 'hat\x201.0\x20+\x20' + 'FLT_EPSILO' + 'N\x20!=\x201.0\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec4\x20safeH' + 'DR(mediump' + '\x20vec4\x20c)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20min(c,' + '\x20HALF_MAX)' + ';\x0d\x0a}\x0d\x0a\x0d\x0afl' + 'oat\x20max3(f' + 'loat\x20a,\x20fl' + 'oat\x20b,\x20flo' + 'at\x20c)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20max(max(a' + ',\x20b),\x20c);\x0d' + '\x0a}\x0d\x0a\x0d\x0avec3' + '\x20positiveP' + 'ow(vec3\x20ba' + 'se,\x20vec3\x20p' + 'ower)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20pow(max(a' + 'bs(base),\x20' + 'vec3(FLT_E' + 'PSILON,\x20FL' + 'T_EPSILON,' + '\x20FLT_EPSIL' + 'ON)),\x20powe' + 'r);\x0d\x0a}', _0x437a10 = '#ifndef\x20GR' + 'APHICS_API' + '_GLES3\x0d\x0a\x09#' + 'define\x20NO_' + 'NATIVE_SHA' + 'DOWMAP\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'NO_NATIVE_' + 'SHADOWMAP)' + '\x0d\x0a\x09#define' + '\x20TEXTURE2D' + '_SHADOW(te' + 'xtureName)' + '\x20uniform\x20m' + 'ediump\x20sam' + 'pler2D\x20tex' + 'tureName\x0d\x0a' + '\x09#define\x20S' + 'AMPLE_TEXT' + 'URE2D_SHAD' + 'OW(texture' + 'Name,\x20coor' + 'd3)\x20(textu' + 're2D(textu' + 'reName,coo' + 'rd3.xy).r<' + 'coord3.z?0' + '.0:1.0)\x0d\x0a\x09' + '#define\x20TE' + 'XTURE2D_SH' + 'ADOW_PARAM' + '(shadowMap' + ')\x20mediump\x20' + 'sampler2D\x20' + 'shadowMap\x0d' + '\x0a#else\x0d\x0a\x09#' + 'define\x20TEX' + 'TURE2D_SHA' + 'DOW(textur' + 'eName)\x20uni' + 'form\x20mediu' + 'mp\x20sampler' + '2DShadow\x20t' + 'extureName' + '\x0d\x0a\x09#define' + '\x20SAMPLE_TE' + 'XTURE2D_SH' + 'ADOW(textu' + 'reName,\x20co' + 'ord3)\x20text' + 'ureLod(tex' + 'tureName,c' + 'oord3,0.0)' + '\x0d\x0a\x09#define' + '\x20TEXTURE2D' + '_SHADOW_PA' + 'RAM(shadow' + 'Map)\x20mediu' + 'mp\x20sampler' + '2DShadow\x20s' + 'hadowMap\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(RECEIVES' + 'HADOW)&&de' + 'fined(SHAD' + 'OW)\x0d\x0a\x20\x20\x20\x20#' + 'define\x20CAL' + 'CULATE_SHA' + 'DOWS\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(RE' + 'CEIVESHADO' + 'W)&&define' + 'd(SHADOW_S' + 'POT)\x0d\x0a\x09#de' + 'fine\x20CALCU' + 'LATE_SPOTS' + 'HADOWS\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0aun' + 'iform\x20vec4' + '\x20u_ShadowB' + 'ias;\x20//\x20x:' + '\x20depth\x20bia' + 's,\x20y:\x20norm' + 'al\x20bias\x0d\x0a\x0d' + '\x0a#if\x20defin' + 'ed(CALCULA' + 'TE_SHADOWS' + ')||defined' + '(CALCULATE' + '_SPOTSHADO' + 'WS)\x0d\x0a\x09#inc' + 'lude\x20\x22Shad' + 'owSampleTe' + 'nt.glsl\x22\x0d\x0a' + '\x09uniform\x20v' + 'ec4\x20u_Shad' + 'owMapSize;' + ('\x0d\x0a\x09uniform' + '\x20vec4\x20u_Sh' + 'adowParams' + ';\x20//\x20x:\x20sh' + 'adowStreng' + 'th\x20y:\x20Shad' + 'owSpotLigh' + 'tStrength\x0d' + '\x0a\x0d\x0a\x09\x0d\x0a\x09flo' + 'at\x20sampleS' + 'hdowMapFil' + 'tered4(TEX' + 'TURE2D_SHA' + 'DOW_PARAM(' + 'shadowMap)' + ',vec3\x20shad' + 'owCoord,ve' + 'c4\x20shadowM' + 'apSize)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09float' + '\x20attenuati' + 'on;\x0d\x0a\x09\x09vec' + '4\x20attenuat' + 'ion4;\x0d\x0a\x09\x09v' + 'ec2\x20offset' + '=shadowMap' + 'Size.xy/2.' + '0;\x0d\x0a\x09\x09vec3' + '\x20shadowCoo' + 'rd0=shadow' + 'Coord\x20+\x20ve' + 'c3(-offset' + ',0.0);\x0d\x0a\x09\x09' + 'vec3\x20shado' + 'wCoord1=sh' + 'adowCoord\x20' + '+\x20vec3(off' + 'set.x,-off' + 'set.y,0.0)' + ';\x0d\x0a\x09\x09vec3\x20' + 'shadowCoor' + 'd2=shadowC' + 'oord\x20+\x20vec' + '3(-offset.' + 'x,offset.y' + ',0.0);\x0d\x0a\x09\x09' + 'vec3\x20shado' + 'wCoord3=sh' + 'adowCoord\x20' + '+\x20vec3(off' + 'set,0.0);\x0d' + '\x0a\x09\x09attenua' + 'tion4.x\x20=\x20' + 'SAMPLE_TEX' + 'TURE2D_SHA' + 'DOW(shadow' + 'Map,\x20shado' + 'wCoord0);\x0d' + '\x0a\x09\x09attenua' + 'tion4.y\x20=\x20' + 'SAMPLE_TEX' + 'TURE2D_SHA' + 'DOW(shadow' + 'Map,\x20shado' + 'wCoord1);\x0d' + '\x0a\x09\x09attenua' + 'tion4.z\x20=\x20' + 'SAMPLE_TEX' + 'TURE2D_SHA' + 'DOW(shadow' + 'Map,\x20shado' + 'wCoord2);\x0d' + '\x0a\x09\x09attenua' + 'tion4.w\x20=\x20' + 'SAMPLE_TEX' + 'TURE2D_SHA' + 'DOW(shadow' + 'Map,\x20shado' + 'wCoord3);\x0d' + '\x0a\x09\x09attenua' + 'tion\x20=\x20dot' + '(attenuati' + 'on4,\x20vec4(' + '0.25));\x0d\x0a\x09' + '\x09return\x20at' + 'tenuation;' + '\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09f' + 'loat\x20sampl' + 'eShdowMapF' + 'iltered9(T' + 'EXTURE2D_S' + 'HADOW_PARA' + 'M(shadowMa' + 'p),vec3\x20sh' + 'adowCoord,' + 'vec4\x20shado' + 'wmapSize)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09flo' + 'at\x20attenua' + 'tion;\x0d\x0a\x09\x09f') + ('loat\x20fetch' + 'esWeights[' + '9];\x0d\x0a\x09\x09vec' + '2\x20fetchesU' + 'V[9];\x0d\x0a\x09\x09s' + 'ampleShado' + 'wComputeSa' + 'mplesTent5' + 'x5(shadowm' + 'apSize,\x20sh' + 'adowCoord.' + 'xy,\x20fetche' + 'sWeights,\x20' + 'fetchesUV)' + ';\x0d\x0a\x09\x09atten' + 'uation\x20=\x20f' + 'etchesWeig' + 'hts[0]\x20*\x20S' + 'AMPLE_TEXT' + 'URE2D_SHAD' + 'OW(shadowM' + 'ap,\x20vec3(f' + 'etchesUV[0' + '].xy,\x20shad' + 'owCoord.z)' + ');\x0d\x0a\x09\x09atte' + 'nuation\x20+=' + '\x20fetchesWe' + 'ights[1]\x20*' + '\x20SAMPLE_TE' + 'XTURE2D_SH' + 'ADOW(shado' + 'wMap,\x20vec3' + '(fetchesUV' + '[1].xy,\x20sh' + 'adowCoord.' + 'z));\x0d\x0a\x09\x09at' + 'tenuation\x20' + '+=\x20fetches' + 'Weights[2]' + '\x20*\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(sha' + 'dowMap,\x20ve' + 'c3(fetches' + 'UV[2].xy,\x20' + 'shadowCoor' + 'd.z));\x0d\x0a\x09\x09' + 'attenuatio' + 'n\x20+=\x20fetch' + 'esWeights[' + '3]\x20*\x20SAMPL' + 'E_TEXTURE2' + 'D_SHADOW(s' + 'hadowMap,\x20' + 'vec3(fetch' + 'esUV[3].xy' + ',\x20shadowCo' + 'ord.z));\x0d\x0a' + '\x09\x09attenuat' + 'ion\x20+=\x20fet' + 'chesWeight' + 's[4]\x20*\x20SAM' + 'PLE_TEXTUR' + 'E2D_SHADOW' + '(shadowMap' + ',\x20vec3(fet' + 'chesUV[4].' + 'xy,\x20shadow' + 'Coord.z));' + '\x0d\x0a\x09\x09attenu' + 'ation\x20+=\x20f' + 'etchesWeig' + 'hts[5]\x20*\x20S' + 'AMPLE_TEXT' + 'URE2D_SHAD' + 'OW(shadowM' + 'ap,\x20vec3(f' + 'etchesUV[5' + '].xy,\x20shad' + 'owCoord.z)' + ');\x0d\x0a\x09\x09atte' + 'nuation\x20+=' + '\x20fetchesWe' + 'ights[6]\x20*' + '\x20SAMPLE_TE' + 'XTURE2D_SH' + 'ADOW(shado' + 'wMap,\x20vec3' + '(fetchesUV' + '[6].xy,\x20sh' + 'adowCoord.' + 'z));\x0d\x0a\x09\x09at' + 'tenuation\x20' + '+=\x20fetches' + 'Weights[7]' + '\x20*\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(sha' + 'dowMap,\x20ve') + ('c3(fetches' + 'UV[7].xy,\x20' + 'shadowCoor' + 'd.z));\x0d\x0a\x09\x09' + 'attenuatio' + 'n\x20+=\x20fetch' + 'esWeights[' + '8]\x20*\x20SAMPL' + 'E_TEXTURE2' + 'D_SHADOW(s' + 'hadowMap,\x20' + 'vec3(fetch' + 'esUV[8].xy' + ',\x20shadowCo' + 'ord.z));\x0d\x0a' + '\x09\x09return\x20a' + 'ttenuation' + ';\x0d\x0a\x09}\x0d\x0a\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0a\x0d\x0a#if\x20d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)\x0d\x0a\x0d\x0a\x09' + 'TEXTURE2D_' + 'SHADOW(u_S' + 'hadowMap);' + '\x0d\x0a\x0d\x0a\x09unifo' + 'rm\x20mat4\x20u_' + 'ShadowMatr' + 'ices[4];\x0d\x0a' + '\x09uniform\x20v' + 'ec4\x20u_Shad' + 'owSplitSph' + 'eres[4];//' + '\x20max\x20casca' + 'de\x20is\x204\x0d\x0a\x0d' + '\x0a\x09mediump\x20' + 'int\x20comput' + 'eCascadeIn' + 'dex(vec3\x20p' + 'ositionWS)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09ve' + 'c3\x20fromCen' + 'ter0\x20=\x20pos' + 'itionWS\x20-\x20' + 'u_ShadowSp' + 'litSpheres' + '[0].xyz;\x0d\x0a' + '\x09\x09vec3\x20fro' + 'mCenter1\x20=' + '\x20positionW' + 'S\x20-\x20u_Shad' + 'owSplitSph' + 'eres[1].xy' + 'z;\x0d\x0a\x09\x09vec3' + '\x20fromCente' + 'r2\x20=\x20posit' + 'ionWS\x20-\x20u_' + 'ShadowSpli' + 'tSpheres[2' + '].xyz;\x0d\x0a\x09\x09' + 'vec3\x20fromC' + 'enter3\x20=\x20p' + 'ositionWS\x20' + '-\x20u_Shadow' + 'SplitSpher' + 'es[3].xyz;' + '\x0d\x0a\x0d\x0a\x09\x09medi' + 'ump\x20vec4\x20c' + 'omparison\x20' + '=\x20vec4(\x0d\x0a\x09' + '\x09\x09dot(from' + 'Center0,\x20f' + 'romCenter0' + ')<u_Shadow' + 'SplitSpher' + 'es[0].w,\x0d\x0a' + '\x09\x09\x09dot(fro' + 'mCenter1,\x20' + 'fromCenter' + '1)<u_Shado' + 'wSplitSphe' + 'res[1].w,\x0d' + '\x0a\x09\x09\x09dot(fr' + 'omCenter2,' + '\x20fromCente' + 'r2)<u_Shad' + 'owSplitSph' + 'eres[2].w,' + '\x0d\x0a\x09\x09\x09dot(f' + 'romCenter3' + ',\x20fromCent' + 'er3)<u_Sha' + 'dowSplitSp' + 'heres[3].w' + ');\x0d\x0a\x09\x09comp' + 'arison.yzw' + '\x20=\x20clamp(c' + 'omparison.' + 'yzw\x20-\x20comp') + ('arison.xyz' + ',0.0,1.0);' + '//keep\x20the' + '\x20nearest\x0d\x0a' + '\x09\x09mediump\x20' + 'vec4\x20index' + 'Coefficien' + 't\x20=\x20vec4(4' + '.0,3.0,2.0' + ',1.0);\x0d\x0a\x09\x09' + 'mediump\x20in' + 't\x20index\x20=\x20' + '4\x20-\x20int(do' + 't(comparis' + 'on,\x20indexC' + 'oefficient' + '));\x0d\x0a\x09\x09ret' + 'urn\x20index;' + '\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09v' + 'ec4\x20getSha' + 'dowCoord(v' + 'ec4\x20positi' + 'onWS)\x0d\x0a\x09{\x0d' + '\x0a\x09\x09#ifdef\x20' + 'SHADOW_CAS' + 'CADE\x0d\x0a\x09\x09\x09m' + 'ediump\x20int' + '\x20cascadeIn' + 'dex\x20=\x20comp' + 'uteCascade' + 'Index(posi' + 'tionWS.xyz' + ');\x0d\x0a\x09\x09\x09if(' + 'cascadeInd' + 'ex\x20>\x203)//\x20' + 'out\x20of\x20sha' + 'dow\x20range\x20' + 'cascadeInd' + 'ex\x20is\x204.\x0d\x0a' + '\x09\x09\x09\x09return' + '\x20vec4(0.0)' + ';\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09' + '\x09#ifdef\x20GR' + 'APHICS_API' + '_GLES3\x0d\x0a\x09\x09' + '\x09\x09return\x20u' + '_ShadowMat' + 'rices[casc' + 'adeIndex]\x20' + '*\x20position' + 'WS;\x0d\x0a\x09\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09\x09m' + 'at4\x20shadow' + 'Mat;\x0d\x0a\x09\x09\x09\x09' + 'if(cascade' + 'Index\x20==\x200' + ')\x0d\x0a\x09\x09\x09\x09\x09sh' + 'adowMat\x20=\x20' + 'u_ShadowMa' + 'trices[0];' + '\x0d\x0a\x09\x09\x09\x09else' + '\x20if(cascad' + 'eIndex\x20==\x20' + '1)\x0d\x0a\x09\x09\x09\x09\x09s' + 'hadowMat\x20=' + '\x20u_ShadowM' + 'atrices[1]' + ';\x0d\x0a\x09\x09\x09\x09els' + 'e\x20if(casca' + 'deIndex\x20==' + '\x202)\x0d\x0a\x09\x09\x09\x09\x09' + 'shadowMat\x20' + '=\x20u_Shadow' + 'Matrices[2' + '];\x0d\x0a\x09\x09\x09\x09el' + 'se\x0d\x0a\x09\x09\x09\x09\x09s' + 'hadowMat\x20=' + '\x20u_ShadowM' + 'atrices[3]' + ';\x0d\x0a\x09\x09\x09\x09ret' + 'urn\x20shadow' + 'Mat\x20*\x20posi' + 'tionWS;\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09return\x20u' + '_ShadowMat' + 'rices[0]\x20*' + '\x20positionW' + 'S;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09}\x0d\x0a\x0d\x0a' + '\x09float\x20sam' + 'pleShadowm' + 'ap(vec4\x20sh' + 'adowCoord)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09sh' + 'adowCoord.' + 'xyz\x20/=\x20sha' + 'dowCoord.w' + ';\x0d\x0a\x09\x09float') + ('\x20attenuati' + 'on\x20=\x201.0;\x0d' + '\x0a\x09\x09if(shad' + 'owCoord.z\x20' + '>\x200.0\x20&&\x20s' + 'hadowCoord' + '.z\x20<\x201.0)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09#' + 'if\x20defined' + '(SHADOW_SO' + 'FT_SHADOW_' + 'HIGH)\x0d\x0a\x09\x09\x09' + '\x09attenuati' + 'on\x20=\x20sampl' + 'eShdowMapF' + 'iltered9(u' + '_ShadowMap' + ',shadowCoo' + 'rd.xyz,u_S' + 'hadowMapSi' + 'ze);\x0d\x0a\x09\x09\x09#' + 'elif\x20defin' + 'ed(SHADOW_' + 'SOFT_SHADO' + 'W_LOW)\x0d\x0a\x09\x09' + '\x09\x09attenuat' + 'ion\x20=\x20samp' + 'leShdowMap' + 'Filtered4(' + 'u_ShadowMa' + 'p,shadowCo' + 'ord.xyz,u_' + 'ShadowMapS' + 'ize);\x0d\x0a\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09attenuati' + 'on\x20=\x20SAMPL' + 'E_TEXTURE2' + 'D_SHADOW(u' + '_ShadowMap' + ',shadowCoo' + 'rd.xyz);\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09attenu' + 'ation\x20=\x20mi' + 'x(1.0,atte' + 'nuation,u_' + 'ShadowPara' + 'ms.x);//sh' + 'adowParams' + '.x:shadow\x20' + 'strength\x0d\x0a' + '\x09\x09}\x0d\x0a\x09\x09ret' + 'urn\x20attenu' + 'ation;\x0d\x0a\x09}' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(CALCUL' + 'ATE_SPOTSH' + 'ADOWS)//sh' + 'ader���Զ��' + '�ĺ겻����ifd' + 'ef\x20����ĳ�i' + 'f\x20defined\x0d' + '\x0a\x09TEXTURE2' + 'D_SHADOW(u' + '_SpotShado' + 'wMap);\x0d\x0a\x09u' + 'niform\x20mat' + '4\x20u_SpotVi' + 'ewProjectM' + 'atrix;\x0d\x0a\x09f' + 'loat\x20sampl' + 'eSpotShado' + 'wmap(vec4\x20' + 'shadowCoor' + 'd)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'shadowCoor' + 'd.xyz\x20/=\x20s' + 'hadowCoord' + '.w;\x0d\x0a\x09\x09flo' + 'at\x20attenua' + 'tion\x20=\x201.0' + ';\x0d\x0a\x09\x09shado' + 'wCoord.xy\x20' + '+=1.0;\x0d\x0a\x09\x09' + 'shadowCoor' + 'd.xy/=2.0;' + '\x20\x0d\x0a\x09\x09if(sh' + 'adowCoord.' + 'z\x20>\x200.0\x20&&' + '\x20shadowCoo' + 'rd.z\x20<\x201.0' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09#if\x20defin' + 'ed(SHADOW_' + 'SPOT_SOFT_' + 'SHADOW_HIG' + 'H)\x0d\x0a\x09\x09\x09\x09at' + 'tenuation\x20') + ('=\x20sampleSh' + 'dowMapFilt' + 'ered9(u_Sp' + 'otShadowMa' + 'p,shadowCo' + 'ord.xyz,u_' + 'ShadowMapS' + 'ize);\x0d\x0a\x09\x09\x09' + '#elif\x20defi' + 'ned(SHADOW' + '_SPOT_SOFT' + '_SHADOW_LO' + 'W)\x0d\x0a\x09\x09\x09\x09at' + 'tenuation\x20' + '=\x20sampleSh' + 'dowMapFilt' + 'ered4(u_Sp' + 'otShadowMa' + 'p,shadowCo' + 'ord.xyz,u_' + 'ShadowMapS' + 'ize);\x0d\x0a\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09attenuati' + 'on\x20=\x20SAMPL' + 'E_TEXTURE2' + 'D_SHADOW(u' + '_SpotShado' + 'wMap,shado' + 'wCoord.xyz' + ');\x0d\x0a\x09\x09\x09#en' + 'dif\x0d\x0a\x09\x09\x09at' + 'tenuation\x20' + '=\x20mix(1.0,' + 'attenuatio' + 'n,u_Shadow' + 'Params.y);' + '//shadowPa' + 'rams.y:sha' + 'dow\x20streng' + 'th\x0d\x0a\x09\x09}\x0d\x0a\x09' + '\x09return\x20at' + 'tenuation;' + '\x0d\x0a\x09}\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avec3' + '\x20applyShad' + 'owBias(vec' + '3\x20position' + 'WS,\x20vec3\x20n' + 'ormalWS,\x20v' + 'ec3\x20lightD' + 'irection)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20invNdo' + 'tL\x20=\x201.0\x20-' + '\x20clamp(dot' + '(-lightDir' + 'ection,\x20no' + 'rmalWS),0.' + '0,1.0);\x0d\x0a\x20' + '\x20\x20\x20float\x20s' + 'cale\x20=\x20inv' + 'NdotL\x20*\x20u_' + 'ShadowBias' + '.y;\x0d\x0a\x0d\x0a\x20\x20\x20' + '\x20//\x20normal' + '\x20bias\x20is\x20n' + 'egative\x20si' + 'nce\x20we\x20wan' + 't\x20to\x20apply' + '\x20an\x20inset\x20' + 'normal\x20off' + 'set\x0d\x0a\x20\x20\x20\x20p' + 'ositionWS\x20' + '+=\x20-lightD' + 'irection\x20*' + '\x20u_ShadowB' + 'ias.xxx;\x0d\x0a' + '\x20\x20\x20\x20positi' + 'onWS\x20+=\x20no' + 'rmalWS\x20*\x20v' + 'ec3(scale)' + ';\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20positi' + 'onWS;\x0d\x0a}\x0d\x0a'), _0x123e30 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dow.glsl\x22\x0d' + '\x0a\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Position;\x0d' + '\x0aattribute' + '\x20vec3\x20a_No' + 'rmal;\x0d\x0a\x0d\x0a#' + 'ifdef\x20BONE' + '\x0d\x0a\x09const\x20i' + 'nt\x20c_MaxBo' + 'neCount\x20=\x20' + '24;\x0d\x0a\x09attr' + 'ibute\x20vec4' + '\x20a_BoneInd' + 'ices;\x0d\x0a\x09at' + 'tribute\x20ve' + 'c4\x20a_BoneW' + 'eights;\x0d\x0a\x09' + 'uniform\x20ma' + 't4\x20u_Bones' + '[c_MaxBone' + 'Count];\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20GPU_' + 'INSTANCE\x0d\x0a' + '\x09attribute' + '\x20mat4\x20a_Wo' + 'rldMat;\x0d\x0a#' + 'else\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_WorldMat' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0auniform' + '\x20mat4\x20u_Vi' + 'ewProjecti' + 'on;\x0d\x0a\x0d\x0a#if' + 'def\x20SHADOW' + '\x0d\x0a\x09uniform' + '\x20vec3\x20u_Sh' + 'adowLightD' + 'irection;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a\x0d\x0a\x0d\x0a#if\x20d' + 'efined(DIF' + 'FUSEMAP)||' + '((defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT))&&(' + 'defined(SP' + 'ECULARMAP)' + '||defined(' + 'NORMALMAP)' + '))||(defin' + 'ed(LIGHTMA' + 'P)&&define' + 'd(UV))\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec2\x20a_Texc' + 'oord0;\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avec4' + '\x20shadowCas' + 'terVertex(' + ')\x0d\x0a{\x0d\x0a\x09mat' + '4\x20worldMat' + ';\x0d\x0a\x09#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09\x09wor' + 'ldMat\x20=\x20a_' + 'WorldMat;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09worldMat\x20' + '=\x20u_WorldM' + 'at;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09\x0d\x0a\x09#i' + 'fdef\x20BONE\x0d' + '\x0a\x09\x09mat4\x20sk' + 'inTransfor' + 'm;\x0d\x0a\x09\x20\x09#if' + 'def\x20SIMPLE' + 'BONE\x0d\x0a\x09\x09\x09f' + 'loat\x20curre' + 'ntPixelPos' + ';\x0d\x0a\x09\x09\x09#ifd' + 'ef\x20GPU_INS' + 'TANCE\x0d\x0a\x09\x09\x09' + '\x09currentPi' + 'xelPos\x20=\x20a' + '_SimpleTex' + 'tureParams' + ('.x+a_Simpl' + 'eTexturePa' + 'rams.y;\x0d\x0a\x09' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09\x09current' + 'PixelPos\x20=' + '\x20u_SimpleA' + 'nimatorPar' + 'ams.x+u_Si' + 'mpleAnimat' + 'orParams.y' + ';\x0d\x0a\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x09flo' + 'at\x20offset\x20' + '=\x201.0/u_Si' + 'mpleAnimat' + 'orTextureS' + 'ize;\x0d\x0a\x09\x09\x09s' + 'kinTransfo' + 'rm\x20=\x20\x20load' + 'MatFromTex' + 'ture(curre' + 'ntPixelPos' + ',int(a_Bon' + 'eIndices.x' + '),offset)\x20' + '*\x20a_BoneWe' + 'ights.x;\x0d\x0a' + '\x09\x09\x09skinTra' + 'nsform\x20+=\x20' + 'loadMatFro' + 'mTexture(c' + 'urrentPixe' + 'lPos,int(a' + '_BoneIndic' + 'es.y),offs' + 'et)\x20*\x20a_Bo' + 'neWeights.' + 'y;\x0d\x0a\x09\x09\x09ski' + 'nTransform' + '\x20+=\x20loadMa' + 'tFromTextu' + 're(current' + 'PixelPos,i' + 'nt(a_BoneI' + 'ndices.z),' + 'offset)\x20*\x20' + 'a_BoneWeig' + 'hts.z;\x0d\x0a\x09\x09' + '\x09skinTrans' + 'form\x20+=\x20lo' + 'adMatFromT' + 'exture(cur' + 'rentPixelP' + 'os,int(a_B' + 'oneIndices' + '.w),offset' + ')\x20*\x20a_Bone' + 'Weights.w;' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09skinTr' + 'ansform\x20=\x20' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.x)]' + '\x20*\x20a_BoneW' + 'eights.x;\x0d' + '\x0a\x09\x09\x09skinTr' + 'ansform\x20+=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.y)]' + '\x20*\x20a_BoneW' + 'eights.y;\x0d' + '\x0a\x09\x09\x09skinTr' + 'ansform\x20+=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.z)]' + '\x20*\x20a_BoneW' + 'eights.z;\x0d' + '\x0a\x09\x09\x09skinTr' + 'ansform\x20+=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.w)]' + '\x20*\x20a_BoneW' + 'eights.w;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x09worldMa' + 't\x20=\x20worldM' + 'at\x20*\x20skinT' + 'ransform;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09vec4\x20po' + 'sitionWS\x20=' + '\x20worldMat\x20' + '*\x20a_Positi' + 'on;\x0d\x0a\x09vec3' + '\x20normalWS\x20') + ('=\x20normaliz' + 'e(a_Normal' + '*INVERSE_M' + 'AT(mat3(wo' + 'rldMat)));' + '//if\x20no\x20no' + 'rmalize\x20wi' + 'll\x20cause\x20p' + 'recision\x20p' + 'roblem\x0d\x0a\x0d\x0a' + '\x09#ifdef\x20SH' + 'ADOW\x0d\x0a\x09\x09po' + 'sitionWS.x' + 'yz\x20=\x20apply' + 'ShadowBias' + '(positionW' + 'S.xyz,norm' + 'alWS,u_Sha' + 'dowLightDi' + 'rection);\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09vec4\x20po' + 'sitionCS\x20=' + '\x20u_ViewPro' + 'jection\x20*\x20' + 'positionWS' + ';\x0d\x0a\x09#ifdef' + '\x20SHADOW_SP' + 'OT\x0d\x0a\x09\x09posi' + 'tionCS.z\x20=' + '\x20positionC' + 'S.z-u_Shad' + 'owBias.x/p' + 'ositionCS.' + 'w;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09positi' + 'onCS.z\x20=\x20m' + 'ax(positio' + 'nCS.z,\x200.0' + ');//min\x20nd' + 'c\x20z\x20is\x200.0' + '\x0d\x0a\x09\x0d\x0a\x09//\x20/' + '/TODO没考虑UV' + '动画呢\x0d\x0a\x09//\x20#' + 'if\x20defined' + '(DIFFUSEMA' + 'P)&&define' + 'd(ALPHATES' + 'T)\x0d\x0a\x09//\x20\x09v' + '_Texcoord0' + '=a_Texcoor' + 'd0;\x0d\x0a\x09//\x20#' + 'endif\x0d\x0a\x20\x20\x20' + '\x20return\x20po' + 'sitionCS;\x0d' + '\x0a}\x0d\x0a'), _0xc08205 = '//\x20#ifdef\x20' + 'ALPHATEST\x0d' + '\x0a//\x20\x09unifo' + 'rm\x20float\x20u' + '_AlphaTest' + 'Value;\x0d\x0a//' + '\x20#endif\x0d\x0a\x0d' + '\x0a//\x20#ifdef' + '\x20DIFFUSEMA' + 'P\x0d\x0a//\x20\x09uni' + 'form\x20sampl' + 'er2D\x20u_Dif' + 'fuseTextur' + 'e;\x0d\x0a//\x20#en' + 'dif\x0d\x0a\x0d\x0a//\x20' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)||((def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + '))&&(defin' + 'ed(SPECULA' + 'RMAP)||def' + 'ined(NORMA' + 'LMAP)))\x0d\x0a/' + '/\x20\x09varying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '//\x20#endif\x0d' + '\x0a\x0d\x0avec4\x20sh' + 'adowCaster' + 'Fragment()' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20vec4' + '(0.0);\x0d\x0a\x20\x20' + '\x20\x20//\x20#if\x20d' + 'efined(DIF' + 'FUSEMAP)&&' + 'defined(AL' + 'PHATEST)\x0d\x0a' + '\x09//\x20\x09float' + '\x20alpha\x20=\x20t' + 'exture2D(u' + '_DiffuseTe' + 'xture,v_Te' + 'xcoord0).w' + ';\x0d\x0a\x09//\x20\x09if' + '(\x20alpha\x20<\x20' + 'u_AlphaTes' + 'tValue\x20)\x0d\x0a' + '\x09//\x20\x09{\x0d\x0a\x09/' + '/\x20\x09\x09discar' + 'd;\x0d\x0a\x09//\x20\x09}' + '\x0d\x0a\x09//\x20#end' + 'if\x0d\x0a}\x0d\x0a', _0x2e479f = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + 'precision\x20' + 'highp\x20floa' + 't;\x0d\x0a#else\x0d' + '\x0aprecision' + '\x20mediump\x20f' + 'loat;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Texcoord' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20sampler' + 'Cube\x20u_Cub' + 'eTexture;\x0d' + '\x0auniform\x20f' + 'loat\x20u_Exp' + 'osure;\x0d\x0aun' + 'iform\x20vec4' + '\x20u_TintCol' + 'or;\x0d\x0a\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x09\x0d\x0a\x09vec' + '3\x20color=te' + 'xtureCube(' + 'u_CubeText' + 'ure,\x20v_Tex' + 'coord).rgb' + '*u_TintCol' + 'or.rgb*u_E' + 'xposure*2.' + '0;\x0d\x0a\x09gl_Fr' + 'agColor=ve' + 'c4(color,1' + '.0);\x0d\x0a}\x0d\x0a\x0d' + '\x0a', _0x124406 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + 'precision\x20' + 'highp\x20floa' + 't;\x0d\x0a#else\x0d' + '\x0aprecision' + '\x20mediump\x20f' + 'loat;\x0d\x0a#en' + 'dif\x0d\x0a#incl' + 'ude\x20\x22Light' + 'ing.glsl\x22;' + '\x0d\x0a\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_Position;' + '\x0d\x0auniform\x20' + 'mat4\x20u_Vie' + 'wProjectio' + 'n;\x0d\x0aunifor' + 'm\x20float\x20u_' + 'Rotation;\x0d' + '\x0avarying\x20v' + 'ec3\x20v_Texc' + 'oord;\x0d\x0a\x0d\x0a\x0d' + '\x0avec4\x20rota' + 'teAroundYI' + 'nDegrees\x20(' + 'vec4\x20verte' + 'x,\x20float\x20d' + 'egrees)\x0d\x0a{' + '\x0d\x0a\x09float\x20a' + 'ngle\x20=\x20deg' + 'rees\x20*\x203.1' + '41593\x20/\x2018' + '0.0;\x0d\x0a\x09flo' + 'at\x20sina=si' + 'n(angle);\x0d' + '\x0a\x09float\x20co' + 'sa=cos(ang' + 'le);\x0d\x0a\x09mat' + '2\x20m\x20=\x20mat2' + '(cosa,\x20-si' + 'na,\x20sina,\x20' + 'cosa);\x0d\x0a\x09r' + 'eturn\x20vec4' + '(m*vertex.' + 'xz,\x20vertex' + '.yw).xzyw;' + '\x0d\x0a}\x0d\x0a\x09\x09\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20position=' + 'rotateArou' + 'ndYInDegre' + 'es(a_Posit' + 'ion,u_Rota' + 'tion);\x0d\x0a\x09g' + 'l_Position' + '\x20=\x20u_ViewP' + 'rojection*' + 'position;\x0d' + '\x0a\x09v_Texcoo' + 'rd=vec3(-a' + '_Position.' + 'x,a_Positi' + 'on.yz);//转' + '换坐标系\x0d\x0a\x09gl_' + 'Position=r' + 'emapGLPosi' + 'tionZ(gl_P' + 'osition);\x0d' + '\x0a}\x0d\x0a', _0x11780f = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22L' + 'ighting.gl' + 'sl\x22;\x0d\x0a\x0d\x0aco' + 'nst\x20float\x20' + 'MIE_G\x20=\x20-0' + '.990;\x0d\x0acon' + 'st\x20float\x20M' + 'IE_G2\x20=\x200.' + '9801;\x0d\x0acon' + 'st\x20float\x20S' + 'KY_GROUND_' + 'THRESHOLD\x20' + '=\x200.02;\x0d\x0a\x0d' + '\x0auniform\x20f' + 'loat\x20u_Sun' + 'Size;\x0d\x0auni' + 'form\x20float' + '\x20u_SunSize' + 'Convergenc' + 'e;\x0d\x0aunifor' + 'm\x20Directio' + 'nLight\x20u_S' + 'unLight;\x0d\x0a' + '\x0d\x0a\x0d\x0avaryin' + 'g\x20vec3\x20v_G' + 'roundColor' + ';\x0d\x0avarying' + '\x20vec3\x20v_Sk' + 'yColor;\x0d\x0a\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'SUN_HIGH_Q' + 'UALITY\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_Vertex' + ';\x0d\x0a#elif\x20d' + 'efined(SUN' + '_SIMPLE)\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_RayD' + 'ir;\x0d\x0a#else' + '\x0d\x0a\x09varying' + '\x20float\x20v_S' + 'kyGroundFa' + 'ctor;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(S' + 'UN_HIGH_QU' + 'ALITY)||de' + 'fined(SUN_' + 'SIMPLE)\x0d\x0a\x09' + 'varying\x20ve' + 'c3\x20v_SunCo' + 'lor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a//\x20C' + 'alculates\x20' + 'the\x20Mie\x20ph' + 'ase\x20functi' + 'on\x0d\x0afloat\x20' + 'getMiePhas' + 'e(float\x20ey' + 'eCos,\x20floa' + 't\x20eyeCos2)' + '\x20{\x0d\x0a\x09float' + '\x20temp\x20=\x201.' + '0\x20+\x20MIE_G2' + '\x20-\x202.0\x20*\x20M' + 'IE_G\x20*\x20eye' + 'Cos;\x0d\x0a\x09tem' + 'p\x20=\x20pow(te' + 'mp,\x20pow(u_' + 'SunSize,0.' + '65)\x20*\x2010.0' + ');\x0d\x0a\x09temp\x20' + '=\x20max(temp' + ',1.0e-4);\x20' + '//\x20prevent' + '\x20division\x20' + 'by\x20zero,\x20e' + 'sp.\x20in\x20hal' + 'f\x20precisio' + 'n\x0d\x0a\x09temp\x20=' + '\x201.5\x20*\x20((1' + '.0\x20-\x20MIE_G' + ('2)\x20/\x20(2.0\x20' + '+\x20MIE_G2))' + '\x20*\x20(1.0\x20+\x20' + 'eyeCos2)\x20/' + '\x20temp;\x0d\x0a\x09r' + 'eturn\x20temp' + ';\x0d\x0a}\x0d\x0a\x0d\x0a//' + '\x20Calculate' + 's\x20the\x20sun\x20' + 'shape\x0d\x0aflo' + 'at\x20calcSun' + 'Attenuatio' + 'n(vec3\x20lig' + 'htPos,\x20vec' + '3\x20ray)\x20{\x0d\x0a' + '\x09#ifdef\x20SU' + 'N_HIGH_QUA' + 'LITY\x0d\x0a\x09\x09fl' + 'oat\x20focuse' + 'dEyeCos\x20=\x20' + 'pow(clamp(' + 'dot(lightP' + 'os,\x20ray),0' + '.0,1.0),\x20u' + '_SunSizeCo' + 'nvergence)' + ';\x0d\x0a\x09\x09retur' + 'n\x20getMiePh' + 'ase(-focus' + 'edEyeCos,\x20' + 'focusedEye' + 'Cos\x20*\x20focu' + 'sedEyeCos)' + ';\x0d\x0a\x09#else\x20' + '//SUN_SIMP' + 'LE\x0d\x0a\x09\x09vec3' + '\x20delta\x20=\x20l' + 'ightPos\x20-\x20' + 'ray;\x0d\x0a\x09\x09fl' + 'oat\x20dist\x20=' + '\x20length(de' + 'lta);\x0d\x0a\x09\x09f' + 'loat\x20spot\x20' + '=\x201.0\x20-\x20sm' + 'oothstep(0' + '.0,\x20u_SunS' + 'ize,\x20dist)' + ';\x0d\x0a\x09\x09retur' + 'n\x20spot\x20*\x20s' + 'pot;\x0d\x0a\x09#en' + 'dif\x0d\x0a}\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x20{\x0d\x0a\x09//\x20i' + 'f\x20y\x20>\x201\x20[e' + 'yeRay.y\x20<\x20' + '-SKY_GROUN' + 'D_THRESHOL' + 'D]\x20-\x20groun' + 'd\x0d\x0a\x09//\x20if\x20' + 'y\x20>=\x200\x20and' + '\x20<\x201\x20[eyeR' + 'ay.y\x20<=\x200\x20' + 'and\x20>\x20-SKY' + '_GROUND_TH' + 'RESHOLD]\x20-' + '\x20horizon\x0d\x0a' + '\x09//\x20if\x20y\x20<' + '\x200\x20[eyeRay' + '.y\x20>\x200]\x20-\x20' + 'sky\x0d\x0a\x09vec3' + '\x20col\x20=\x20vec' + '3(0.0,\x200.0' + ',\x200.0);\x0d\x0a\x0d' + '\x0a\x09#ifdef\x20S' + 'UN_HIGH_QU' + 'ALITY\x0d\x0a\x09\x09v' + 'ec3\x20ray\x20=\x20' + 'normalize(' + 'v_Vertex);' + '\x0d\x0a\x09\x09float\x20' + 'y\x20=\x20ray.y\x20' + '/\x20SKY_GROU' + 'ND_THRESHO' + 'LD;\x0d\x0a\x09#eli' + 'f\x20defined(' + 'SUN_SIMPLE' + ')\x20\x0d\x0a\x09\x09vec3' + '\x20ray\x20=\x20v_R' + 'ayDir;\x0d\x0a\x09\x09' + 'float\x20y\x20=\x20' + 'ray.y\x20/\x20SK' + 'Y_GROUND_T' + 'HRESHOLD;\x09' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09float\x20y\x20' + '=\x20v_SkyGro' + 'undFactor;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09//\x20if\x20' + 'we\x20did\x20pre') + ('calculate\x20' + 'color\x20in\x20v' + 'prog:\x20just' + '\x20do\x20lerp\x20b' + 'etween\x20the' + 'm\x0d\x0a\x09col\x20=\x20' + 'mix(v_SkyC' + 'olor,\x20v_Gr' + 'oundColor,' + '\x20clamp(y,0' + '.0,1.0));\x0d' + '\x0a\x0d\x0a\x09#if\x20de' + 'fined(SUN_' + 'HIGH_QUALI' + 'TY)||defin' + 'ed(SUN_SIM' + 'PLE)\x0d\x0a\x09\x09if' + '\x20(y\x20<\x200.0)' + '\x0d\x0a\x09\x09\x09col\x20+' + '=\x20v_SunCol' + 'or\x20*\x20calcS' + 'unAttenuat' + 'ion(-u_Sun' + 'Light.dire' + 'ction,\x20-ra' + 'y);\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09col' + '\x20=\x20sqrt(co' + 'l);//linea' + 'r\x20space\x20co' + 'nvert\x20to\x20g' + 'amma\x20space' + '\x0d\x0a\x09gl_Frag' + 'Color=vec4' + '(col,1.0);' + '\x0d\x0a}\x0d\x0a\x0d\x0a'), _0x5af4f2 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'include\x20\x22L' + 'ighting.gl' + 'sl\x22;\x0d\x0a\x0d\x0a#d' + 'efine\x20OUTE' + 'R_RADIUS\x201' + '.025\x0d\x0a#def' + 'ine\x20RAYLEI' + 'GH\x20(mix(0.' + '0,\x200.0025,' + '\x20pow(u_Atm' + 'osphereThi' + 'ckness,2.5' + ')))//\x20Rayl' + 'eigh\x20const' + 'ant\x20Raylei' + 'gh为夜空光和极光亮' + '度单位\x0d\x0a#defi' + 'ne\x20MIE\x200.0' + '010\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20//\x20M' + 'ie\x20constan' + 't\x20米氏散射\x0d\x0a#d' + 'efine\x20SUN_' + 'BRIGHTNESS' + '\x2020.0\x20\x20\x20\x20/' + '/\x20Sun\x20brig' + 'htness\x0d\x0a#d' + 'efine\x20MAX_' + 'SCATTER\x2050' + '.0\x20//\x20Maxi' + 'mum\x20scatte' + 'ring\x20value' + ',\x20to\x20preve' + 'nt\x20math\x20ov' + 'erflows\x20on' + '\x20Adrenos\x0d\x0a' + '\x0d\x0aconst\x20fl' + 'oat\x20SKY_GR' + 'OUND_THRES' + 'HOLD\x20=\x200.0' + '2;\x0d\x0aconst\x20' + 'float\x20oute' + 'rRadius\x20=\x20' + 'OUTER_RADI' + 'US;\x0d\x0aconst' + '\x20float\x20out' + 'erRadius2\x20' + '=\x20OUTER_RA' + 'DIUS*OUTER' + '_RADIUS;\x0d\x0a' + 'const\x20floa' + 't\x20innerRad' + 'ius\x20=\x201.0;' + '\x0d\x0aconst\x20fl' + 'oat\x20innerR' + 'adius2\x20=\x201' + '.0;\x0d\x0aconst' + '\x20float\x20cam' + 'eraHeight\x20' + '=\x200.0001;\x0d' + '\x0a\x0d\x0aconst\x20f' + 'loat\x20HDSun' + 'diskIntens' + 'ityFactor\x20' + '=\x2015.0;\x0d\x0ac' + 'onst\x20float' + '\x20simpleSun' + 'diskIntens' + 'ityFactor\x20' + '=\x2027.0;\x0d\x0a\x0d' + '\x0aconst\x20flo' + 'at\x20sunScal' + 'e\x20=\x20400.0\x20' + '*\x20SUN_BRIG' + 'HTNESS;\x0d\x0ac' + 'onst\x20float' + '\x20kmESun\x20=\x20' + 'MIE\x20*\x20SUN_' + 'BRIGHTNESS' + ';\x0d\x0aconst\x20f' + 'loat\x20km4PI' + '\x20=\x20MIE\x20*\x204' + '.0\x20*\x203.141' + ('59265;\x0d\x0aco' + 'nst\x20float\x20' + 'scale\x20=\x201.' + '0\x20/\x20(OUTER' + '_RADIUS\x20-\x20' + '1.0);\x0d\x0acon' + 'st\x20float\x20s' + 'caleDepth\x20' + '=\x200.25;\x0d\x0ac' + 'onst\x20float' + '\x20scaleOver' + 'ScaleDepth' + '\x20=\x20(1.0\x20/\x20' + '(OUTER_RAD' + 'IUS\x20-\x201.0)' + ')\x20/\x200.25;\x0d' + '\x0aconst\x20flo' + 'at\x20samples' + '\x20=\x202.0;\x20//' + '\x20THIS\x20IS\x20U' + 'NROLLED\x20MA' + 'NUALLY,\x20DO' + 'N\x27T\x20TOUCH\x0d' + '\x0a\x0d\x0a//\x20RGB\x20' + 'wavelength' + 's\x20\x20\x20\x20\x20\x20\x20\x20.' + '35\x20(.62=15' + '8),\x20.43\x20(.' + '68=174),\x20.' + '525\x20(.75=1' + '90)\x0d\x0aconst' + '\x20vec3\x20c_De' + 'faultScatt' + 'eringWavel' + 'ength\x20=\x20ve' + 'c3(0.65,\x200' + '.57,\x200.475' + ');//默认散射波长' + '\x0d\x0aconst\x20ve' + 'c3\x20c_Varia' + 'bleRangeFo' + 'rScatterin' + 'gWavelengt' + 'h\x20=\x20vec3(0' + '.15,\x200.15,' + '\x200.15);//散' + '射播放的可变范围\x0d\x0a' + '\x0d\x0aattribut' + 'e\x20vec4\x20a_P' + 'osition;\x0d\x0a' + '\x0d\x0auniform\x20' + 'mat4\x20u_Vie' + 'wProjectio' + 'n;\x0d\x0aunifor' + 'm\x20vec3\x20u_S' + 'kyTint;\x0d\x0au' + 'niform\x20vec' + '3\x20u_Ground' + 'Tint;\x0d\x0auni' + 'form\x20float' + '\x20u_Exposur' + 'e;\x0d\x0aunifor' + 'm\x20float\x20u_' + 'Atmosphere' + 'Thickness;' + '\x0d\x0auniform\x20' + 'DirectionL' + 'ight\x20u_Sun' + 'Light;\x0d\x0a\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Groun' + 'dColor;\x0d\x0av' + 'arying\x20vec' + '3\x20v_SkyCol' + 'or;\x0d\x0a\x0d\x0a#if' + 'def\x20SUN_HI' + 'GH_QUALITY' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_Ve' + 'rtex;\x0d\x0a#el' + 'if\x20defined' + '(SUN_SIMPL' + 'E)\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'RayDir;\x0d\x0a#' + 'else\x0d\x0a\x09var' + 'ying\x20float' + '\x20v_SkyGrou' + 'ndFactor;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#if\x20defin' + 'ed(SUN_HIG' + 'H_QUALITY)' + '||defined(' + 'SUN_SIMPLE' + ')\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_S' + 'unColor;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '//\x20Calcula') + ('tes\x20the\x20Ra' + 'yleigh\x20pha' + 'se\x20functio' + 'n\x0d\x0afloat\x20g' + 'etRayleigh' + 'Phase(vec3' + '\x20light,\x20ve' + 'c3\x20ray)\x20\x0d\x0a' + '{\x0d\x0a\x09float\x20' + 'eyeCos\x20=\x20d' + 'ot(light,\x20' + 'ray);\x0d\x0a\x09re' + 'turn\x200.75\x20' + '+\x200.75*eye' + 'Cos*eyeCos' + ';\x0d\x0a}\x0d\x0a\x0d\x0afl' + 'oat\x20scaleA' + 'ngle(float' + '\x20inCos)\x0d\x0a{' + '\x0d\x0a\x09float\x20x' + '\x20=\x201.0\x20-\x20i' + 'nCos;\x0d\x0a\x09re' + 'turn\x200.25\x20' + '*\x20exp(-0.0' + '0287\x20+\x20x*(' + '0.459\x20+\x20x*' + '(3.83\x20+\x20x*' + '(-6.80\x20+\x20x' + '*5.25))));' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0av' + 'oid\x20main\x20(' + ')\x20{\x0d\x0a\x09gl_P' + 'osition\x20=\x20' + 'u_ViewProj' + 'ection*a_P' + 'osition;\x0d\x0a' + '\x0d\x0a\x09vec3\x20sk' + 'yTintInGam' + 'maSpace\x20=\x20' + 'u_SkyTint;' + '//支持非GAMMA' + '空间后要调整\x0d\x0a\x09v' + 'ec3\x20scatte' + 'ringWavele' + 'ngth\x20=\x20mix' + '(c_Default' + 'Scattering' + 'Wavelength' + '-c_Variabl' + 'eRangeForS' + 'catteringW' + 'avelength,' + 'c_DefaultS' + 'catteringW' + 'avelength+' + 'c_Variable' + 'RangeForSc' + 'atteringWa' + 'velength,v' + 'ec3(1.0)\x20-' + '\x20skyTintIn' + 'GammaSpace' + ');\x20//\x20usin' + 'g\x20Tint\x20in\x20' + 'sRGB+\x20gamm' + 'a\x20allows\x20f' + 'or\x20more\x20vi' + 'sually\x20lin' + 'ear\x20interp' + 'olation\x20an' + 'd\x20to\x20keep\x20' + '(0.5)\x20at\x20(' + '128,\x20gray\x20' + 'in\x20sRGB)\x20p' + 'oint\x0d\x0a\x09vec' + '3\x20invWavel' + 'ength\x20=\x201.' + '0\x20/\x20pow(sc' + 'atteringWa' + 'velength,\x20' + 'vec3(4.0))' + ';\x0d\x0a\x0d\x0a\x09floa' + 't\x20krESun\x20=' + '\x20RAYLEIGH\x20' + '*\x20SUN_BRIG' + 'HTNESS;\x0d\x0a\x09' + 'float\x20kr4P' + 'I\x20=\x20RAYLEI' + 'GH\x20*\x204.0\x20*' + '\x203.1415926' + '5;\x0d\x0a\x0d\x0a\x09vec' + '3\x20cameraPo' + 's\x20=\x20vec3(0' + '.0,innerRa' + 'dius\x20+\x20cam' + 'eraHeight,' + '0.0);\x20//\x20T' + 'he\x20camera\x27' + 's\x20current\x20' + 'position\x0d\x0a') + ('\x0d\x0a\x09//\x20Get\x20' + 'the\x20ray\x20fr' + 'om\x20the\x20cam' + 'era\x20to\x20the' + '\x20vertex\x20an' + 'd\x20its\x20leng' + 'th\x20(which\x20' + 'is\x20the\x20far' + '\x20point\x20of\x20' + 'the\x20ray\x20pa' + 'ssing\x20thro' + 'ugh\x20the\x20at' + 'mosphere)\x0d' + '\x0a\x09vec3\x20eye' + 'Ray\x20=\x20norm' + 'alize(a_Po' + 'sition.xyz' + ');\x0d\x0a\x0d\x0a\x09flo' + 'at\x20far\x20=\x200' + '.0;\x0d\x0a\x09vec3' + '\x20cIn,\x20cOut' + ';\x0d\x0a\x09if\x20(ey' + 'eRay.y\x20>=\x20' + '0.0)\x20{//\x20S' + 'ky\x0d\x0a\x09\x09//\x20C' + 'alculate\x20t' + 'he\x20length\x20' + 'of\x20the\x20\x22at' + 'mosphere\x22\x0d' + '\x0a\x09\x09far\x20=\x20s' + 'qrt(outerR' + 'adius2\x20+\x20i' + 'nnerRadius' + '2\x20*\x20eyeRay' + '.y\x20*\x20eyeRa' + 'y.y\x20-\x20inne' + 'rRadius2)\x20' + '-\x20innerRad' + 'ius\x20*\x20eyeR' + 'ay.y;\x0d\x0a\x0d\x0a\x09' + '\x09//\x20Calcul' + 'ate\x20the\x20ra' + 'y\x27s\x20starti' + 'ng\x20positio' + 'n,\x20then\x20ca' + 'lculate\x20it' + 's\x20scatteri' + 'ng\x20offset\x0d' + '\x0a\x09\x09float\x20h' + 'eight\x20=\x20in' + 'nerRadius\x20' + '+\x20cameraHe' + 'ight;\x0d\x0a\x09\x09f' + 'loat\x20depth' + '\x20=\x20exp(sca' + 'leOverScal' + 'eDepth\x20*\x20-' + 'cameraHeig' + 'ht);\x0d\x0a\x09\x09fl' + 'oat\x20startA' + 'ngle\x20=\x20dot' + '(eyeRay,\x20c' + 'ameraPos)\x20' + '/\x20height;\x0d' + '\x0a\x09\x09float\x20s' + 'tartOffset' + '\x20=\x20depth*s' + 'caleAngle(' + 'startAngle' + ');\x0d\x0a\x0d\x0a\x09\x09//' + '\x20Initializ' + 'e\x20the\x20scat' + 'tering\x20loo' + 'p\x20variable' + 's\x0d\x0a\x09\x09float' + '\x20sampleLen' + 'gth\x20=\x20far\x20' + '/\x20samples;' + '\x0d\x0a\x09\x09float\x20' + 'scaledLeng' + 'th\x20=\x20sampl' + 'eLength\x20*\x20' + 'scale;\x0d\x0a\x09\x09' + 'vec3\x20sampl' + 'eRay\x20=\x20eye' + 'Ray\x20*\x20samp' + 'leLength;\x0d' + '\x0a\x09\x09vec3\x20sa' + 'mplePoint\x20' + '=\x20cameraPo' + 's\x20+\x20sample' + 'Ray\x20*\x200.5;' + '\x0d\x0a\x0d\x0a\x09\x09vec3' + '\x20frontColo' + 'r\x20=\x20vec3(0' + '.0);\x0d\x0a\x09\x09//' + 'unrolling\x20' + 'this\x20manua' + 'lly\x20to\x20avo' + 'id\x20some\x20pl') + ('atform\x20for' + '\x20loop\x20slow' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'float\x20heig' + 'ht\x20=\x20lengt' + 'h(samplePo' + 'int);\x0d\x0a\x09\x09\x09' + 'float\x20dept' + 'h\x20=\x20exp(sc' + 'aleOverSca' + 'leDepth\x20*\x20' + '(innerRadi' + 'us\x20-\x20heigh' + 't));\x0d\x0a\x09\x09\x09f' + 'loat\x20light' + 'Angle\x20=\x20do' + 't(-u_SunLi' + 'ght.direct' + 'ion,\x20sampl' + 'ePoint)\x20/\x20' + 'height;\x0d\x0a\x09' + '\x09\x09float\x20ca' + 'meraAngle\x20' + '=\x20dot(eyeR' + 'ay,\x20sample' + 'Point)\x20/\x20h' + 'eight;\x0d\x0a\x09\x09' + '\x09float\x20sca' + 'tter\x20=\x20(st' + 'artOffset\x20' + '+\x20depth*(s' + 'caleAngle(' + 'lightAngle' + ')\x20-\x20scaleA' + 'ngle(camer' + 'aAngle)));' + '\x0d\x0a\x09\x09\x09vec3\x20' + 'attenuate\x20' + '=\x20exp(-cla' + 'mp(scatter' + ',\x200.0,\x20MAX' + '_SCATTER)\x20' + '*\x20(invWave' + 'length\x20*\x20k' + 'r4PI\x20+\x20km4' + 'PI));\x0d\x0a\x0d\x0a\x09' + '\x09\x09frontCol' + 'or\x20+=\x20atte' + 'nuate\x20*\x20(d' + 'epth\x20*\x20sca' + 'ledLength)' + ';\x0d\x0a\x09\x09\x09samp' + 'lePoint\x20+=' + '\x20sampleRay' + ';\x0d\x0a\x09\x09}\x0d\x0a\x09\x09' + '{\x0d\x0a\x09\x09\x09floa' + 't\x20height\x20=' + '\x20length(sa' + 'mplePoint)' + ';\x0d\x0a\x09\x09\x09floa' + 't\x20depth\x20=\x20' + 'exp(scaleO' + 'verScaleDe' + 'pth\x20*\x20(inn' + 'erRadius\x20-' + '\x20height));' + '\x0d\x0a\x09\x09\x09float' + '\x20lightAngl' + 'e\x20=\x20dot(-u' + '_SunLight.' + 'direction,' + '\x20samplePoi' + 'nt)\x20/\x20heig' + 'ht;\x0d\x0a\x09\x09\x09fl' + 'oat\x20camera' + 'Angle\x20=\x20do' + 't(eyeRay,\x20' + 'samplePoin' + 't)\x20/\x20heigh' + 't;\x0d\x0a\x09\x09\x09flo' + 'at\x20scatter' + '\x20=\x20(startO' + 'ffset\x20+\x20de' + 'pth*(scale' + 'Angle(ligh' + 'tAngle)\x20-\x20' + 'scaleAngle' + '(cameraAng' + 'le)));\x0d\x0a\x09\x09' + '\x09vec3\x20atte' + 'nuate\x20=\x20ex' + 'p(-clamp(s' + 'catter,\x200.' + '0,\x20MAX_SCA' + 'TTER)\x20*\x20(i' + 'nvWaveleng' + 'th\x20*\x20kr4PI' + '\x20+\x20km4PI))' + ';\x0d\x0a\x0d\x0a\x09\x09\x09fr' + 'ontColor\x20+') + ('=\x20attenuat' + 'e\x20*\x20(depth' + '\x20*\x20scaledL' + 'ength);\x0d\x0a\x09' + '\x09\x09samplePo' + 'int\x20+=\x20sam' + 'pleRay;\x0d\x0a\x09' + '\x09}\x0d\x0a\x0d\x0a\x09\x09//' + '\x20Finally,\x20' + 'scale\x20the\x20' + 'Mie\x20and\x20Ra' + 'yleigh\x20col' + 'ors\x20and\x20se' + 't\x20up\x20the\x20v' + 'arying\x20var' + 'iables\x20for' + '\x20the\x20pixel' + '\x20shader\x0d\x0a\x09' + '\x09cIn\x20=\x20fro' + 'ntColor\x20*\x20' + '(invWavele' + 'ngth\x20*\x20krE' + 'Sun);\x0d\x0a\x09\x09c' + 'Out\x20=\x20fron' + 'tColor\x20*\x20k' + 'mESun;\x0d\x0a\x09}' + '\x20else\x20{//\x20' + 'Ground\x0d\x0a\x09\x09' + 'far\x20=\x20(-ca' + 'meraHeight' + ')\x20/\x20(min(-' + '0.001,\x20eye' + 'Ray.y));\x0d\x0a' + '\x09\x09vec3\x20pos' + '\x20=\x20cameraP' + 'os\x20+\x20far\x20*' + '\x20eyeRay;\x0d\x0a' + '\x0d\x0a\x09\x09//\x20Cal' + 'culate\x20the' + '\x20ray\x27s\x20sta' + 'rting\x20posi' + 'tion,\x20then' + '\x20calculate' + '\x20its\x20scatt' + 'ering\x20offs' + 'et\x0d\x0a\x09\x09floa' + 't\x20depth\x20=\x20' + 'exp((-came' + 'raHeight)\x20' + '*\x20(1.0/sca' + 'leDepth));' + '\x0d\x0a\x09\x09float\x20' + 'cameraAngl' + 'e\x20=\x20dot(-e' + 'yeRay,\x20pos' + ');\x0d\x0a\x09\x09floa' + 't\x20lightAng' + 'le\x20=\x20dot(-' + 'u_SunLight' + '.direction' + ',\x20pos);\x0d\x0a\x09' + '\x09float\x20cam' + 'eraScale\x20=' + '\x20scaleAngl' + 'e(cameraAn' + 'gle);\x0d\x0a\x09\x09f' + 'loat\x20light' + 'Scale\x20=\x20sc' + 'aleAngle(l' + 'ightAngle)' + ';\x0d\x0a\x09\x09float' + '\x20cameraOff' + 'set\x20=\x20dept' + 'h*cameraSc' + 'ale;\x0d\x0a\x09\x09fl' + 'oat\x20temp\x20=' + '\x20lightScal' + 'e\x20+\x20camera' + 'Scale;\x0d\x0a\x0d\x0a' + '\x09\x09//\x20Initi' + 'alize\x20the\x20' + 'scattering' + '\x20loop\x20vari' + 'ables\x0d\x0a\x09\x09f' + 'loat\x20sampl' + 'eLength\x20=\x20' + 'far\x20/\x20samp' + 'les;\x0d\x0a\x09\x09fl' + 'oat\x20scaled' + 'Length\x20=\x20s' + 'ampleLengt' + 'h\x20*\x20scale;' + '\x0d\x0a\x09\x09vec3\x20s' + 'ampleRay\x20=' + '\x20eyeRay\x20*\x20' + 'sampleLeng' + 'th;\x0d\x0a\x09\x09vec' + '3\x20samplePo' + 'int\x20=\x20came' + 'raPos\x20+\x20sa') + ('mpleRay\x20*\x20' + '0.5;\x0d\x0a\x0d\x0a\x09\x09' + '//\x20Now\x20loo' + 'p\x20through\x20' + 'the\x20sample' + '\x20rays\x0d\x0a\x09\x09v' + 'ec3\x20frontC' + 'olor\x20=\x20vec' + '3(0.0,\x200.0' + ',\x200.0);\x0d\x0a\x09' + '\x09vec3\x20atte' + 'nuate;\x0d\x0a\x0d\x0a' + '\x09\x09//\x20Loop\x20' + 'removed\x20be' + 'cause\x20we\x20k' + 'ept\x20hittin' + 'g\x20SM2.0\x20te' + 'mp\x20variabl' + 'e\x20limits.\x20' + 'Doesn\x27t\x20af' + 'fect\x20the\x20i' + 'mage\x20too\x20m' + 'uch.\x0d\x0a\x09\x09{\x0d' + '\x0a\x09\x09\x09float\x20' + 'height\x20=\x20l' + 'ength(samp' + 'lePoint);\x0d' + '\x0a\x09\x09\x09float\x20' + 'depth\x20=\x20ex' + 'p(scaleOve' + 'rScaleDept' + 'h\x20*\x20(inner' + 'Radius\x20-\x20h' + 'eight));\x0d\x0a' + '\x09\x09\x09float\x20s' + 'catter\x20=\x20d' + 'epth*temp\x20' + '-\x20cameraOf' + 'fset;\x0d\x0a\x09\x09\x09' + 'attenuate\x20' + '=\x20exp(-cla' + 'mp(scatter' + ',\x200.0,\x20MAX' + '_SCATTER)\x20' + '*\x20(invWave' + 'length\x20*\x20k' + 'r4PI\x20+\x20km4' + 'PI));\x0d\x0a\x09\x09\x09' + 'frontColor' + '\x20+=\x20attenu' + 'ate\x20*\x20(dep' + 'th\x20*\x20scale' + 'dLength);\x0d' + '\x0a\x09\x09\x09sample' + 'Point\x20+=\x20s' + 'ampleRay;\x0d' + '\x0a\x09\x09}\x0d\x0a\x0d\x0a\x09\x09' + 'cIn\x20=\x20fron' + 'tColor\x20*\x20(' + 'invWavelen' + 'gth\x20*\x20krES' + 'un\x20+\x20kmESu' + 'n);\x0d\x0a\x09\x09cOu' + 't\x20=\x20clamp(' + 'attenuate,' + '\x200.0,\x201.0)' + ';\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20SUN' + '_HIGH_QUAL' + 'ITY\x0d\x0a\x09\x09v_V' + 'ertex\x20=\x20-a' + '_Position.' + 'xyz;\x0d\x0a\x09#el' + 'if\x20defined' + '(SUN_SIMPL' + 'E)\x20\x0d\x0a\x09\x09v_R' + 'ayDir\x20=\x20-e' + 'yeRay;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09v_' + 'SkyGroundF' + 'actor\x20=\x20-e' + 'yeRay.y\x20/\x20' + 'SKY_GROUND' + '_THRESHOLD' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09//\x20if' + '\x20we\x20want\x20t' + 'o\x20calculat' + 'e\x20color\x20in' + '\x20vprog:\x0d\x0a\x09' + '//\x20in\x20case' + '\x20of\x20linear' + ':\x20multiply' + '\x20by\x20_Expos' + 'ure\x20in\x20her' + 'e\x20(even\x20in' + '\x20case\x20of\x20l' + 'erp\x20it\x20wil' + 'l\x20be\x20commo' + 'n\x20multipli') + ('er,\x20so\x20we\x20' + 'can\x20skip\x20m' + 'ul\x20in\x20fsha' + 'der)\x0d\x0a\x09v_G' + 'roundColor' + '\x20=\x20u_Expos' + 'ure\x20*\x20(cIn' + '\x20+\x20u_Groun' + 'dTint*u_Gr' + 'oundTint\x20*' + '\x20cOut);//u' + '_GroundCol' + 'or*u_Groun' + 'dColor\x20is\x20' + 'gamma\x20spac' + 'e\x20convert\x20' + 'to\x20linear\x20' + 'space\x0d\x0a\x09v_' + 'SkyColor\x20\x20' + '\x20\x20=\x20u_Expo' + 'sure\x20*\x20(cI' + 'n\x20*\x20getRay' + 'leighPhase' + '(-u_SunLig' + 'ht.directi' + 'on,\x20-eyeRa' + 'y));\x0d\x0a\x0d\x0a\x09\x0d' + '\x0a\x09//\x20The\x20s' + 'un\x20should\x20' + 'have\x20a\x20sta' + 'ble\x20intens' + 'ity\x20in\x20its' + '\x20course\x20in' + '\x20the\x20sky.\x20' + 'Moreover\x20i' + 't\x20should\x20m' + 'atch\x20the\x20h' + 'ighlight\x20o' + 'f\x20a\x20purely' + '\x20specular\x20' + 'material.\x0d' + '\x0a\x09//\x20This\x20' + 'matching\x20w' + 'as\x20done\x20us' + 'ing\x20the\x20Un' + 'ity3D\x20stan' + 'dard\x20shade' + 'r\x20BRDF1\x20on' + '\x20the\x205/31/' + '2017\x0d\x0a\x09//\x20' + 'Finally\x20we' + '\x20want\x20the\x20' + 'sun\x20to\x20be\x20' + 'always\x20bri' + 'ght\x20even\x20i' + 'n\x20LDR\x20thus' + '\x20the\x20norma' + 'lization\x20o' + 'f\x20the\x20ligh' + 'tColor\x20for' + '\x20low\x20inten' + 'sity.\x0d\x0a\x09fl' + 'oat\x20lightC' + 'olorIntens' + 'ity\x20=\x20clam' + 'p(length(u' + '_SunLight.' + 'color),\x200.' + '25,\x201.0);\x0d' + '\x0a\x0d\x0a\x09#ifdef' + '\x20SUN_HIGH_' + 'QUALITY\x20\x0d\x0a' + '\x09\x09v_SunCol' + 'or\x20=\x20HDSun' + 'diskIntens' + 'ityFactor\x20' + '*\x20clamp(cO' + 'ut,0.0,1.0' + ')\x20*\x20u_SunL' + 'ight.color' + '\x20/\x20lightCo' + 'lorIntensi' + 'ty;\x0d\x0a\x09#eli' + 'f\x20defined(' + 'SUN_SIMPLE' + ')\x20\x0d\x0a\x09\x09v_Su' + 'nColor\x20=\x20s' + 'impleSundi' + 'skIntensit' + 'yFactor\x20*\x20' + 'clamp(cOut' + '\x20*\x20sunScal' + 'e,0.0,1.0)' + '\x20*\x20u_SunLi' + 'ght.color\x20' + '/\x20lightCol' + 'orIntensit' + 'y;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09gl_Pos' + 'ition=rema') + ('pGLPositio' + 'nZ(gl_Posi' + 'tion);\x0d\x0a}\x0d' + '\x0a'), _0x2e0945 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0au' + 'niform\x20sam' + 'pler2D\x20u_M' + 'ainTexture' + ';\x0d\x0auniform' + '\x20vec4\x20u_Ma' + 'inColor;\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec2\x20v_Tex' + 'coord0;\x0d\x0av' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20colo' + 'r\x20=\x202.0\x20*\x20' + 'u_MainColo' + 'r\x20*\x20v_Colo' + 'r;\x0d\x0a\x09#ifde' + 'f\x20MAINTEXT' + 'URE\x0d\x0a\x09\x09vec' + '4\x20mainText' + 'ureColor\x20=' + '\x20texture2D' + '(u_MainTex' + 'ture,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09\x09color\x20*' + '=\x20mainText' + 'ureColor;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09gl_FragCo' + 'lor\x20=\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20\x20', _0x3f16a4 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a#in' + 'clude\x20\x22Lig' + 'hting.glsl' + '\x22;\x0d\x0a\x0d\x0aattr' + 'ibute\x20vec3' + '\x20a_Positio' + 'n;\x0d\x0aattrib' + 'ute\x20vec3\x20a' + '_OffsetVec' + 'tor;\x0d\x0aattr' + 'ibute\x20vec4' + '\x20a_Color;\x0d' + '\x0aattribute' + '\x20float\x20a_T' + 'excoord0X;' + '\x0d\x0aattribut' + 'e\x20float\x20a_' + 'Texcoord0Y' + ';\x0d\x0aattribu' + 'te\x20float\x20a' + '_BirthTime' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20mat4\x20u_' + 'View;\x0d\x0auni' + 'form\x20mat4\x20' + 'u_Projecti' + 'on;\x0d\x0a\x0d\x0auni' + 'form\x20vec4\x20' + 'u_TilingOf' + 'fset;\x0d\x0a\x0d\x0au' + 'niform\x20flo' + 'at\x20u_CurTi' + 'me;\x0d\x0aunifo' + 'rm\x20float\x20u' + '_LifeTime;' + '\x0d\x0auniform\x20' + 'vec4\x20u_Wid' + 'thCurve[10' + '];\x0d\x0aunifor' + 'm\x20int\x20u_Wi' + 'dthCurveKe' + 'yLength;\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec2\x20v_Tex' + 'coord0;\x0d\x0av' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a\x0d\x0afloat\x20' + 'hermiteInt' + 'erpolate(f' + 'loat\x20t,\x20fl' + 'oat\x20outTan' + 'gent,\x20floa' + 't\x20inTangen' + 't,\x20float\x20d' + 'uration,\x20f' + 'loat\x20value' + '1,\x20float\x20v' + 'alue2)\x0d\x0a{\x0d' + '\x0a\x09float\x20t2' + '\x20=\x20t\x20*\x20t;\x0d' + '\x0a\x09float\x20t3' + '\x20=\x20t2\x20*\x20t;' + '\x0d\x0a\x09float\x20a' + '\x20=\x202.0\x20*\x20t' + '3\x20-\x203.0\x20*\x20' + 't2\x20+\x201.0;\x0d' + '\x0a\x09float\x20b\x20' + '=\x20t3\x20-\x202.0' + '\x20*\x20t2\x20+\x20t;' + '\x0d\x0a\x09float\x20c' + '\x20=\x20t3\x20-\x20t2' + ';\x0d\x0a\x09float\x20' + 'd\x20=\x20-2.0\x20*' + '\x20t3\x20+\x203.0\x20' + '*\x20t2;\x0d\x0a\x09re' + 'turn\x20a\x20*\x20v' + 'alue1\x20+\x20b\x20' + '*\x20outTange' + 'nt\x20*\x20durat' + 'ion\x20+\x20c\x20*\x20' + 'inTangent\x20' + '*\x20duration' + '\x20+\x20d\x20*\x20val' + ('ue2;\x0d\x0a}\x0d\x0a\x0d' + '\x0afloat\x20get' + 'CurWidth(i' + 'n\x20float\x20no' + 'rmalizeTim' + 'e)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20width;' + '\x0d\x0a\x09if(norm' + 'alizeTime\x20' + '==\x200.0){\x0d\x0a' + '\x09\x09width=u_' + 'WidthCurve' + '[0].w;\x0d\x0a\x09}' + '\x0d\x0a\x09else\x20if' + '(normalize' + 'Time\x20>=\x201.' + '0){\x0d\x0a\x09\x09wid' + 'th=u_Width' + 'Curve[u_Wi' + 'dthCurveKe' + 'yLength\x20-\x20' + '1].w;\x0d\x0a\x09}\x0d' + '\x0a\x09else{\x0d\x0a\x09' + '\x09for(int\x20i' + '\x20=\x200;\x20i\x20<\x20' + '10;\x20i\x20++\x20)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'if(normali' + 'zeTime\x20==\x20' + 'u_WidthCur' + 've[i].x){\x0d' + '\x0a\x09\x09\x09\x09width' + '=u_WidthCu' + 'rve[i].w;\x0d' + '\x0a\x09\x09\x09\x09break' + ';\x0d\x0a\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09\x0d\x0a\x09\x09\x09vec' + '4\x20lastFram' + 'e\x20=\x20u_Widt' + 'hCurve[i];' + '\x0d\x0a\x09\x09\x09vec4\x20' + 'nextFrame\x20' + '=\x20u_WidthC' + 'urve[i\x20+\x201' + '];\x0d\x0a\x09\x09\x09if(' + 'normalizeT' + 'ime\x20>\x20last' + 'Frame.x\x20&&' + '\x20normalize' + 'Time\x20<\x20nex' + 'tFrame.x)\x0d' + '\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09' + '\x09float\x20dur' + 'ation\x20=\x20ne' + 'xtFrame.x\x20' + '-\x20lastFram' + 'e.x;\x0d\x0a\x09\x09\x09\x09' + 'float\x20t\x20=\x20' + '(normalize' + 'Time\x20-\x20las' + 'tFrame.x)\x20' + '/\x20duration' + ';\x0d\x0a\x09\x09\x09\x09flo' + 'at\x20outTang' + 'ent\x20=\x20last' + 'Frame.z;\x0d\x0a' + '\x09\x09\x09\x09float\x20' + 'inTangent\x20' + '=\x20nextFram' + 'e.y;\x0d\x0a\x09\x09\x09\x09' + 'float\x20valu' + 'e1\x20=\x20lastF' + 'rame.w;\x0d\x0a\x09' + '\x09\x09\x09float\x20v' + 'alue2\x20=\x20ne' + 'xtFrame.w;' + '\x0d\x0a\x09\x09\x09\x09widt' + 'h=hermiteI' + 'nterpolate' + '(t,\x20outTan' + 'gent,\x20inTa' + 'ngent,\x20dur' + 'ation,\x20val' + 'ue1,\x20value' + '2);\x0d\x0a\x09\x09\x09\x09b' + 'reak;\x0d\x0a\x09\x09\x09' + '}\x0d\x0a\x09\x09}\x0d\x0a\x09}' + '\x0d\x0a\x09return\x20' + 'width;\x0d\x0a}\x09' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09float\x20nor' + 'malizeTime' + '\x20=\x20(u_CurT' + 'ime\x20-\x20a_Bi' + 'rthTime)\x20/' + '\x20u_LifeTim' + 'e;\x0d\x0a\x09\x0d\x0a\x09#i' + 'fdef\x20TILIN' + 'GOFFSET\x0d\x0a\x09') + ('\x09v_Texcoor' + 'd0\x20=\x20vec2(' + 'a_Texcoord' + '0X,\x201.0\x20-\x20' + 'a_Texcoord' + '0Y)\x20*\x20u_Ti' + 'lingOffset' + '.xy\x20+\x20u_Ti' + 'lingOffset' + '.zw;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09v_Te' + 'xcoord0\x20=\x20' + 'vec2(a_Tex' + 'coord0X,\x20a' + '_Texcoord0' + 'Y);\x0d\x0a\x09#end' + 'if\x0d\x0a\x09\x0d\x0a\x09v_' + 'Color\x20=\x20a_' + 'Color;\x0d\x0a\x09\x0d' + '\x0a\x09gl_Posit' + 'ion\x20=\x20u_Pr' + 'ojection\x20*' + '\x20u_View\x20*\x20' + 'vec4(a_Pos' + 'ition\x20+\x20a_' + 'OffsetVect' + 'or\x20*\x20getCu' + 'rWidth(nor' + 'malizeTime' + '),1.0);\x0d\x0a\x09' + 'gl_Positio' + 'n=remapGLP' + 'ositionZ(g' + 'l_Position' + ');\x0d\x0a}\x0d\x0a'), _0x49e6cb = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'if\x20defined' + '(COLOR)&&d' + 'efined(ENA' + 'BLEVERTEXC' + 'OLOR)\x0d\x0a\x09va' + 'rying\x20vec4' + '\x20v_Color;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20AL' + 'BEDOTEXTUR' + 'E\x0d\x0a\x09unifor' + 'm\x20sampler2' + 'D\x20u_Albedo' + 'Texture;\x0d\x0a' + '\x09varying\x20v' + 'ec2\x20v_Texc' + 'oord0;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0aun' + 'iform\x20vec4' + '\x20u_AlbedoC' + 'olor;\x0d\x0a\x0d\x0a#' + 'ifdef\x20ALPH' + 'ATEST\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_AlphaT' + 'estValue;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20FO' + 'G\x0d\x0a\x09unifor' + 'm\x20float\x20u_' + 'FogStart;\x0d' + '\x0a\x09uniform\x20' + 'float\x20u_Fo' + 'gRange;\x0d\x0a\x09' + '#ifdef\x20ADD' + 'TIVEFOG\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09u' + 'niform\x20vec' + '3\x20u_FogCol' + 'or;\x0d\x0a\x09#end' + 'if\x0d\x0a#endif' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20colo' + 'r\x20=\x20\x20u_Alb' + 'edoColor;\x0d' + '\x0a\x09#ifdef\x20A' + 'LBEDOTEXTU' + 'RE\x0d\x0a\x09\x09colo' + 'r\x20*=\x20textu' + 're2D(u_Alb' + 'edoTexture' + ',\x20v_Texcoo' + 'rd0);\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + '\x20defined(C' + 'OLOR)&&def' + 'ined(ENABL' + 'EVERTEXCOL' + 'OR)\x0d\x0a\x09\x09col' + 'or\x20*=\x20v_Co' + 'lor;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09\x0d\x0a\x09#' + 'ifdef\x20ALPH' + 'ATEST\x0d\x0a\x09\x09i' + 'f(color.a\x20' + '<\x20u_AlphaT' + 'estValue)\x0d' + '\x0a\x09\x09\x09discar' + 'd;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09gl_' + 'FragColor\x20' + '=\x20color;\x0d\x0a' + '\x09\x0d\x0a\x09#ifdef' + '\x20FOG\x0d\x0a\x09\x09fl' + 'oat\x20lerpFa' + 'ct\x20=\x20clamp' + '((1.0\x20/\x20gl' + '_FragCoord' + '.w\x20-\x20u_Fog' + 'Start)\x20/\x20u' + '_FogRange,' + '\x200.0,\x201.0)' + (';\x0d\x0a\x09\x09#ifde' + 'f\x20ADDTIVEF' + 'OG\x0d\x0a\x09\x09\x09gl_' + 'FragColor.' + 'rgb\x20=\x20mix(' + 'gl_FragCol' + 'or.rgb,\x20ve' + 'c3(0.0),\x20l' + 'erpFact);\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09gl_Frag' + 'Color.rgb\x20' + '=\x20mix(gl_F' + 'ragColor.r' + 'gb,\x20u_FogC' + 'olor,\x20lerp' + 'Fact);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '}\x0d\x0a\x0d\x0a'), _0x57fb27 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a#in' + 'clude\x20\x22Lig' + 'hting.glsl' + '\x22;\x0d\x0a#inclu' + 'de\x20\x22LayaUt' + 'ile.glsl\x22;' + '\x0d\x0a\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_Position;' + '\x0d\x0a\x0d\x0aattrib' + 'ute\x20vec2\x20a' + '_Texcoord0' + ';\x0d\x0a\x0d\x0a#ifde' + 'f\x20GPU_INST' + 'ANCE\x0d\x0a\x09att' + 'ribute\x20mat' + '4\x20a_MvpMat' + 'rix;\x0d\x0a#els' + 'e\x0d\x0a\x09unifor' + 'm\x20mat4\x20u_M' + 'vpMatrix;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0aattribute' + '\x20vec4\x20a_Co' + 'lor;\x0d\x0avary' + 'ing\x20vec4\x20v' + '_Color;\x0d\x0av' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a\x0d\x0a#i' + 'fdef\x20TILIN' + 'GOFFSET\x0d\x0a\x09' + 'uniform\x20ve' + 'c4\x20u_Tilin' + 'gOffset;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20BON' + 'E\x0d\x0a\x09const\x20' + 'int\x20c_MaxB' + 'oneCount\x20=' + '\x2024;\x0d\x0a\x09att' + 'ribute\x20vec' + '4\x20a_BoneIn' + 'dices;\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec4\x20a_Bone' + 'Weights;\x0d\x0a' + '\x09uniform\x20m' + 'at4\x20u_Bone' + 's[c_MaxBon' + 'eCount];\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x20{\x0d\x0a\x09vec4' + '\x20position;' + '\x0d\x0a\x09#ifdef\x20' + 'BONE\x0d\x0a\x09\x09ma' + 't4\x20skinTra' + 'nsform;\x0d\x0a\x09' + '\x20\x09#ifdef\x20S' + 'IMPLEBONE\x0d' + '\x0a\x09\x09\x09float\x20' + 'currentPix' + 'elPos;\x0d\x0a\x09\x09' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09\x09\x09curr' + 'entPixelPo' + 's\x20=\x20a_Simp' + 'leTextureP' + 'arams.x+a_' + 'SimpleText' + 'ureParams.' + 'y;\x0d\x0a\x09\x09\x09#el' + 'se\x0d\x0a\x09\x09\x09\x09cu' + 'rrentPixel' + 'Pos\x20=\x20u_Si' + 'mpleAnimat' + 'orParams.x' + '+u_SimpleA' + 'nimatorPar' + 'ams.y;\x0d\x0a\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09\x09float\x20of' + ('fset\x20=\x201.0' + '/u_SimpleA' + 'nimatorTex' + 'tureSize;\x0d' + '\x0a\x09\x09\x09skinTr' + 'ansform\x20=\x20' + '\x20loadMatFr' + 'omTexture(' + 'currentPix' + 'elPos,int(' + 'a_BoneIndi' + 'ces.x),off' + 'set)\x20*\x20a_B' + 'oneWeights' + '.x;\x0d\x0a\x09\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20loadM' + 'atFromText' + 'ure(curren' + 'tPixelPos,' + 'int(a_Bone' + 'Indices.y)' + ',offset)\x20*' + '\x20a_BoneWei' + 'ghts.y;\x0d\x0a\x09' + '\x09\x09skinTran' + 'sform\x20+=\x20l' + 'oadMatFrom' + 'Texture(cu' + 'rrentPixel' + 'Pos,int(a_' + 'BoneIndice' + 's.z),offse' + 't)\x20*\x20a_Bon' + 'eWeights.z' + ';\x0d\x0a\x09\x09\x09skin' + 'Transform\x20' + '+=\x20loadMat' + 'FromTextur' + 'e(currentP' + 'ixelPos,in' + 't(a_BoneIn' + 'dices.w),o' + 'ffset)\x20*\x20a' + '_BoneWeigh' + 'ts.w;\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09s' + 'kinTransfo' + 'rm\x20=\x20\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.x)]\x20*\x20a_' + 'BoneWeight' + 's.x;\x0d\x0a\x09\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.y)]\x20*\x20a_' + 'BoneWeight' + 's.y;\x0d\x0a\x09\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.z)]\x20*\x20a_' + 'BoneWeight' + 's.z;\x0d\x0a\x09\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.w)]\x20*\x20a_' + 'BoneWeight' + 's.w;\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09\x09po' + 'sition=ski' + 'nTransform' + '*a_Positio' + 'n;\x0d\x0a\x09\x20#els' + 'e\x0d\x0a\x09\x09posit' + 'ion=a_Posi' + 'tion;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20GPU_IN' + 'STANCE\x0d\x0a\x09\x09' + 'gl_Positio' + 'n\x20=\x20a_MvpM' + 'atrix\x20*\x20po' + 'sition;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09g' + 'l_Position' + '\x20=\x20u_MvpMa' + 'trix\x20*\x20pos' + 'ition;\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20TIL' + 'INGOFFSET\x0d' + '\x0a\x09\x09v_Texco' + 'ord0=Trans') + ('formUV(a_T' + 'excoord0,u' + '_TilingOff' + 'set);\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09v_T' + 'excoord0=a' + '_Texcoord0' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09#if\x20d' + 'efined(COL' + 'OR)&&defin' + 'ed(ENABLEV' + 'ERTEXCOLOR' + ')\x0d\x0a\x09\x09v_Col' + 'or\x20=\x20a_Col' + 'or;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09gl_Po' + 'sition=rem' + 'apGLPositi' + 'onZ(gl_Pos' + 'ition);\x0d\x0a}'), _0x6b16ff = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20MAIN' + 'TEXTURE\x0d\x0a\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'MainTextur' + 'e;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20NORMALTEX' + 'TURE\x0d\x0a\x09uni' + 'form\x20sampl' + 'er2D\x20u_Nor' + 'malTexture' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0auniform' + '\x20vec4\x20u_Ho' + 'rizonColor' + ';\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Normal;\x0d\x0av' + 'arying\x20vec' + '3\x20v_Tangen' + 't;\x0d\x0avaryin' + 'g\x20vec3\x20v_B' + 'inormal;\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_ViewD' + 'ir;\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0avarying\x20' + 'vec2\x20v_Tex' + 'coord1;\x0d\x0a\x0d' + '\x0a\x0d\x0a#includ' + 'e\x20\x22Lightin' + 'g.glsl\x22\x0d\x0a\x0d' + '\x0a\x0d\x0a\x0d\x0avec3\x20' + 'NormalSamp' + 'leToWorldS' + 'pace(vec4\x20' + 'normalMapS' + 'ample)\x20{\x0d\x0a' + '\x09vec3\x20norm' + 'alT;\x0d\x0a\x09nor' + 'malT.x\x20=\x202' + '.0\x20*\x20norma' + 'lMapSample' + '.x\x20-\x201.0;\x0d' + '\x0a\x09normalT.' + 'y\x20=\x201.0\x20-\x20' + '2.0\x20*\x20norm' + 'alMapSampl' + 'e.y;\x0d\x0a\x09nor' + 'malT.z\x20=\x20s' + 'qrt(1.0\x20-\x20' + 'clamp(dot(' + 'normalT.xy' + ',\x20normalT.' + 'xy),\x200.0,\x20' + '1.0));\x0d\x0a\x0d\x0a' + '\x09vec3\x20bump' + 'edNormal\x20=' + '\x20normalize' + '(normalT);' + '\x0d\x0a\x0d\x0a\x09retur' + 'n\x20bumpedNo' + 'rmal;\x0d\x0a}\x0d\x0a' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20bump' + 'Color1\x20=\x20t' + 'exture2D(u' + '_NormalTex' + 'ture,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09vec4\x20bum' + 'pColor2\x20=\x20' + 'texture2D(' + 'u_NormalTe' + 'xture,\x20v_T' + 'excoord1);' + '\x0d\x0a\x0d\x0a\x09vec3\x20' + 'normal1\x20=\x20' + 'NormalSamp' + ('leToWorldS' + 'pace(bumpC' + 'olor1);\x0d\x0a\x09' + 'vec3\x20norma' + 'l2\x20=\x20Norma' + 'lSampleToW' + 'orldSpace(' + 'bumpColor2' + ');\x0d\x0a\x09\x0d\x0a\x09ve' + 'c3\x20normal\x20' + '=\x20normaliz' + 'e((normal1' + '\x20+\x20normal2' + ')\x20*\x200.5);\x0d' + '\x0a\x09vec3\x20vie' + 'wDir\x20=\x20nor' + 'malize(v_V' + 'iewDir);\x0d\x0a' + '\x09float\x20fre' + 'snel\x20=\x20dot' + '(viewDir,\x20' + 'normal);\x0d\x0a' + '\x09\x0d\x0a\x09vec4\x20w' + 'aterColor\x20' + '=\x20texture2' + 'D(u_MainTe' + 'xture,\x20vec' + '2(fresnel,' + '\x20fresnel))' + ';\x0d\x0a\x09\x0d\x0a\x09vec' + '4\x20color;\x0d\x0a' + '\x09color.rgb' + '\x20=\x20mix(wat' + 'erColor.rg' + 'b,\x20u_Horiz' + 'onColor.rg' + 'b,\x20vec3(wa' + 'terColor.a' + '));\x0d\x0a\x09colo' + 'r.a\x20=\x20u_Ho' + 'rizonColor' + '.a;\x0d\x0a\x09\x0d\x0a\x09g' + 'l_FragColo' + 'r\x20=\x20color;' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a'), _0x33a290 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Normal' + ';\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Tangent0;\x0d' + '\x0a\x0d\x0auniform' + '\x20mat4\x20u_Mv' + 'pMatrix;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_World' + 'Mat;\x0d\x0aunif' + 'orm\x20vec3\x20u' + '_CameraPos' + ';\x0d\x0auniform' + '\x20float\x20u_W' + 'aveScale;\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Wave' + 'Speed;\x0d\x0aun' + 'iform\x20floa' + 't\x20u_Time;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec3\x20v_No' + 'rmal;\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Tangent;' + '\x0d\x0avarying\x20' + 'vec3\x20v_Bin' + 'ormal;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_ViewDir' + ';\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord1;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20positionW' + 'orld\x20=\x20u_W' + 'orldMat\x20*\x20' + 'a_Position' + ';\x0d\x0a\x09vec4\x20p' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20a_Posi' + 'tion;\x0d\x0a\x09\x0d\x0a' + '\x09vec4\x20temp' + '\x20=\x20vec4(po' + 'sitionWorl' + 'd.x,\x20posit' + 'ionWorld.z' + ',\x20position' + 'World.x,\x20p' + 'ositionWor' + 'ld.z)\x20*\x20u_' + 'WaveScale\x20' + '+\x20u_WaveSp' + 'eed\x20*\x20u_Wa' + 'veScale\x20*\x20' + 'u_Time;\x0d\x0a\x09' + '\x0d\x0a\x09v_Texco' + 'ord0\x20=\x20tem' + 'p.xy\x20*\x20vec' + '2(0.4,\x200.4' + '5);\x0d\x0a\x09v_Te' + 'xcoord1\x20=\x20' + 'temp.wz;\x0d\x0a' + '\x09\x0d\x0a\x09mat3\x20w' + 'orldMat\x20=\x20' + 'mat3(u_Wor' + 'ldMat);\x0d\x0a\x09' + 'v_Normal\x20=' + '\x20worldMat\x20' + '*\x20a_Normal' + ';\x0d\x0a\x09v_Tang' + 'ent\x20=\x20worl' + 'dMat\x20*\x20a_T' + 'angent0.xy' + 'z;\x0d\x0a\x09v_Bin' + 'ormal\x20=\x20cr' + 'oss(v_Norm' + 'al,\x20v_Tang' + 'ent)\x20*\x20a_T' + 'angent0.w;' + '\x0d\x0a\x09\x0d\x0a\x09v_Vi' + 'ewDir\x20=\x20u_' + 'CameraPos\x20' + '-\x20position' + 'World.xyz;' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20pos' + 'ition;\x0d\x0a\x09g' + ('l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}');
    class _0x3f15ae {
        constructor() {
        }
        static ['__init__']() {
            _0x18824e['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING'] = _0x18824e['getDefineB' + 'yName']('LEGACYSING' + 'LELIGHTING'), _0x18824e['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '2'] = _0x18824e['getDefineB' + 'yName']('GRAPHICS_A' + 'PI_GLES2'), _0x18824e['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '3'] = _0x18824e['getDefineB' + 'yName']('GRAPHICS_A' + 'PI_GLES3'), _0x18824e['addInclude']('Lighting.g' + 'lsl', _0x220716), _0x18824e['addInclude']('ShadowSamp' + 'leTent.gls' + 'l', _0x3c5667), _0x18824e['addInclude']('GlobalIllu' + 'mination.g' + 'lsl', _0x51f42f), _0x18824e['addInclude']('Shadow.gls' + 'l', _0x437a10), _0x18824e['addInclude']('ShadowCast' + 'erVS.glsl', _0x123e30), _0x18824e['addInclude']('ShadowCast' + 'erFS.glsl', _0xc08205), _0x18824e['addInclude']('Colors.gls' + 'l', _0x416fd6), _0x18824e['addInclude']('Sampling.g' + 'lsl', _0x42d8af), _0x18824e['addInclude']('StdLib.gls' + 'l', _0x566021), _0x18824e['addInclude']('PBRVSInput' + '.glsl', _0x1bb978), _0x18824e['addInclude']('PBRFSInput' + '.glsl', _0x2f98ea), _0x18824e['addInclude']('LayaPBRBRD' + 'F.glsl', _0xee7071), _0x18824e['addInclude']('PBRCore.gl' + 'sl', _0x27a6bc), _0x18824e['addInclude']('PBRVertex.' + 'glsl', _0x544217), _0x18824e['addInclude']('LayaUtile.' + 'glsl', _0x46f902);
            var _0x380830 = {
                    'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                    'a_Color': _0x2a7b2f['MESH_COLOR' + '0'],
                    'a_Normal': _0x2a7b2f['MESH_NORMA' + 'L0'],
                    'a_Texcoord0': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0x2a7b2f['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0x2a7b2f['MESH_BLEND' + 'INDICES0'],
                    'a_Tangent0': _0x2a7b2f['MESH_TANGE' + 'NT0'],
                    'a_MvpMatrix': _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0x2a7b2f['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x141664 = {
                    'u_Bones': _0x18824e['PERIOD_CUS' + 'TOM'],
                    'u_DiffuseTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecularTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_AlphaTestValue': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_DiffuseColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_MaterialSpecular': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_Shininess': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_WorldMat': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_LightMapDirection': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_SimpleAnimatorTextureSize': _0x18824e['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ViewProjection': _0x18824e['PERIOD_CAM' + 'ERA'],
                    'u_ReflectTexture': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientColor': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowBias': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightDirection': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowParams': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowSplitSpheres': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMatrices': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowMapSize': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotViewProjectMatrix': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightPosition': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAr': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAg': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAb': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBr': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBg': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBb': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHC': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x18824e['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x18824e['PERIOD_SCE' + 'NE']
                }, _0x2942e6 = {
                    's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x54d438 = _0x18824e['add']('BLINNPHONG', null, null, !![]), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664);
            _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x530a63, _0x20ea13, _0x2942e6, 'Forward');
            var _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x3e1a24, _0x5949f0, _0x2942e6, 'ShadowCast' + 'er');
            _0x380830 = {
                'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                'a_Color': _0x2a7b2f['MESH_COLOR' + '0']
            }, _0x141664 = {
                'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_Color': _0x18824e['PERIOD_MAT' + 'ERIAL']
            }, _0x2942e6 = {
                's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x54d438 = _0x18824e['add']('LineShader'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x69b2cc, _0x18d78a, _0x2942e6), _0x380830 = {
                'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                'a_Color': _0x2a7b2f['MESH_COLOR' + '0'],
                'a_Texcoord0': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0x2a7b2f['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0x2a7b2f['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0']
            }, _0x141664 = {
                'u_Bones': _0x18824e['PERIOD_CUS' + 'TOM'],
                'u_AlbedoTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AlphaTestValue': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimpleAnimatorTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimpleAnimatorParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimpleAnimatorTextureSize': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE']
            }, _0x2942e6 = {
                's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x54d438 = _0x18824e['add']('Unlit', null, null, !![]), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x57fb27, _0x49e6cb, _0x2942e6), _0x380830 = {
                'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                'a_Texcoord0': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0x2a7b2f['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0x2a7b2f['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0x2a7b2f['MESH_MVPMA' + 'TRIX_ROW0']
            }, _0x141664 = {
                'u_Bones': _0x18824e['PERIOD_CUS' + 'TOM'],
                'u_AlbedoTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AlphaTestValue': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimpleAnimatorTexture': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimpleAnimatorParams': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimpleAnimatorTextureSize': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE']
            }, _0x2942e6 = {
                's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x54d438 = _0x18824e['add']('Effect', null, null, !![]), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x4a28b9, _0x5eedcb, _0x2942e6), _0x380830 = {
                'a_CornerTextureCoordinate': _0x15fc4b['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0'],
                'a_MeshPosition': _0x15fc4b['PARTICLE_P' + 'OSITION0'],
                'a_MeshColor': _0x15fc4b['PARTICLE_C' + 'OLOR0'],
                'a_MeshTextureCoordinate': _0x15fc4b['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0'],
                'a_ShapePositionStartLifeTime': _0x15fc4b['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME'],
                'a_DirectionTime': _0x15fc4b['PARTICLE_D' + 'IRECTIONTI' + 'ME'],
                'a_StartColor': _0x15fc4b['PARTICLE_S' + 'TARTCOLOR0'],
                'a_EndColor': _0x15fc4b['PARTICLE_E' + 'NDCOLOR0'],
                'a_StartSize': _0x15fc4b['PARTICLE_S' + 'TARTSIZE'],
                'a_StartRotation0': _0x15fc4b['PARTICLE_S' + 'TARTROTATI' + 'ON'],
                'a_StartSpeed': _0x15fc4b['PARTICLE_S' + 'TARTSPEED'],
                'a_Random0': _0x15fc4b['PARTICLE_R' + 'ANDOM0'],
                'a_Random1': _0x15fc4b['PARTICLE_R' + 'ANDOM1'],
                'a_SimulationWorldPostion': _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N'],
                'a_SimulationWorldRotation': _0x15fc4b['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON']
            }, _0x141664 = {
                'u_Tintcolor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_texture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_WorldPosition': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_WorldRotation': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_PositionScale': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SizeScale': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ScalingMode': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_Gravity': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ThreeDStartRotation': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_StretchedBillboardLengthScale': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_StretchedBillboardSpeedScale': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SimulationSpace': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_CurrentTime': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ColorOverLifeGradientAlphas': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ColorOverLifeGradientColors': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_MaxColorOverLifeGradientAlphas': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_MaxColorOverLifeGradientColors': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityConst': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientX': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientY': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientZ': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityConstMax': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxX': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxY': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxZ': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_VOLSpaceType': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradient': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientX': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientY': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientZ': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMax': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxX': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxY': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxZ': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConst': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstSeprarate': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradient': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientX': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientY': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientZ': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstMax': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstMaxSeprarate': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMax': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxX': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxY': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxZ': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxW': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_TSACycles': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_TSASubUVLength': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_TSAGradientUVs': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_TSAMaxGradientUVs': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_CameraDirection': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_CameraUp': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_View': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_Projection': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE']
            }, _0x2942e6 = {
                's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x54d438 = _0x18824e['add']('PARTICLESH' + 'URIKEN'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x4f9d9a, _0x36aa3f, _0x2942e6), _0x380830 = { 'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'] }, _0x141664 = {
                'u_TintColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Exposure': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Rotation': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_CubeTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_ViewProjection': _0x18824e['PERIOD_CAM' + 'ERA']
            }, _0x54d438 = _0x18824e['add']('SkyBox'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x124406, _0x2e479f), _0x380830 = { 'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'] }, _0x141664 = {
                'u_SunSize': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_SunSizeConvergence': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AtmosphereThickness': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_SkyTint': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_GroundTint': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Exposure': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_ViewProjection': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_SunLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_SunLight.color': _0x18824e['PERIOD_SCE' + 'NE']
            }, _0x54d438 = _0x18824e['add']('SkyBoxProc' + 'edural'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x5af4f2, _0x11780f), _0x380830 = {
                'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                'a_Normal': _0x2a7b2f['MESH_NORMA' + 'L0'],
                'a_Texcoord0': _0x2a7b2f['MESH_TEXTU' + 'RECOORDINA' + 'TE0']
            }, _0x141664 = {
                'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_Viewport': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_ProjectionParams': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_View': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_LightmapScaleOffset': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_LightMap': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_SplatAlphaTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture1': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture2': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture3': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture4': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture5': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset1': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset2': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset3': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset4': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset5': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_FogStart': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_DirationLightCount': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_LightBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_LightClusterBuffer': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_AmbientColor': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_ShadowMap': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_shadowMap2': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_shadowMap3': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_ShadowSplitSpheres': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_ShadowMatrices': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_ShadowMapSize': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_PointLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_PointLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_PointLight.color': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_SpotLight.position': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_SpotLight.direction': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_SpotLight.range': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_SpotLight.spot': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_SpotLight.color': _0x18824e['PERIOD_SCE' + 'NE']
            }, _0x2942e6 = {
                's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x54d438 = _0x18824e['add']('ExtendTerr' + 'ain'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x39e477, _0x2defcd, _0x2942e6), _0x380830 = {
                'a_Position': _0x51f657['TRAIL_POSI' + 'TION0'],
                'a_OffsetVector': _0x51f657['TRAIL_OFFS' + 'ETVECTOR'],
                'a_Texcoord0X': _0x51f657['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X'],
                'a_Texcoord0Y': _0x51f657['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'],
                'a_BirthTime': _0x51f657['TRAIL_TIME' + '0'],
                'a_Color': _0x51f657['TRAIL_COLO' + 'R']
            }, _0x141664 = {
                'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_View': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_Projection': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_TilingOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_MainTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_MainColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_CurTime': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_LifeTime': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_WidthCurve': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_WidthCurveKeyLength': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_GradientColorkey': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_GradientAlphakey': _0x18824e['PERIOD_SPR' + 'ITE']
            }, _0x2942e6 = {
                's_Cull': _0x18824e['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x18824e['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x18824e['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x18824e['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x18824e['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x18824e['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x54d438 = _0x18824e['add']('Trail'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x3f16a4, _0x2e0945, _0x2942e6), _0x380830 = {
                'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'],
                'a_Normal': _0x2a7b2f['MESH_NORMA' + 'L0'],
                'a_Tangent0': _0x2a7b2f['MESH_TANGE' + 'NT0']
            }, _0x141664 = {
                'u_MvpMatrix': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x18824e['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x18824e['PERIOD_CAM' + 'ERA'],
                'u_Time': _0x18824e['PERIOD_SCE' + 'NE'],
                'u_MainTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_NormalTexture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_HorizonColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_WaveScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_WaveSpeed': _0x18824e['PERIOD_MAT' + 'ERIAL']
            }, _0x54d438 = _0x18824e['add']('WaterPrima' + 'ry'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0x3b8357['addShaderP' + 'ass'](_0x33a290, _0x6b16ff), _0x380830 = { 'a_PositionTexcoord': _0x2a7b2f['MESH_POSIT' + 'ION0'] }, _0x141664 = {
                'u_MainTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_OffsetScale': _0x18824e['PERIOD_MAT' + 'ERIAL']
            }, _0x54d438 = _0x18824e['add']('BlitScreen'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357);
            var _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x449161, _0x6478f5), _0x462226 = _0xa1a96b['renderStat' + 'e'];
            _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x380830 = { 'a_PositionTexcoord': _0x2a7b2f['MESH_POSIT' + 'ION0'] }, _0x141664 = {
                'u_MainTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AutoExposureTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_MainTex_TexelSize': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_SampleScale': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Threshold': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Params': _0x18824e['PERIOD_MAT' + 'ERIAL']
            }, _0x54d438 = _0x18824e['add']('PostProces' + 'sBloom'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x33eca0, _0x4163a9), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x33eca0, _0x567bab), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x33eca0, _0x1b6030), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x33eca0, _0x3e0178), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x33eca0, _0x28fd74), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x33eca0, _0x1c1fa4), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'], _0x380830 = { 'a_PositionTexcoord': _0x2a7b2f['MESH_POSIT' + 'ION0'] }, _0x141664 = {
                'u_MainTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_AutoExposureTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_DirtTileOffset': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_DirtTex': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex_TexelSize': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_Settings': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_Color': _0x18824e['PERIOD_MAT' + 'ERIAL']
            }, _0x54d438 = _0x18824e['add']('PostProces' + 'sComposite'), _0x3b8357 = new _0x4c4f1d(_0x380830, _0x141664), _0x54d438['addSubShad' + 'er'](_0x3b8357), _0xa1a96b = _0x3b8357['addShaderP' + 'ass'](_0x15a8d6, _0x763db1), _0x462226 = _0xa1a96b['renderStat' + 'e'], _0x462226['depthTest'] = _0x5c0fbd['DEPTHTEST_' + 'ALWAYS'], _0x462226['depthWrite'] = ![], _0x462226['cull'] = _0x5c0fbd['CULL_NONE'], _0x462226['blend'] = _0x5c0fbd['BLEND_DISA' + 'BLE'];
        }
    }
    class _0x175d64 extends _0x594385 {
        constructor() {
            super(), this['_direction'] = new _0x352206(), this['_shadowCas' + 'cadesMode'] = _0x1f405c['ShadowCasc' + 'adesMode']['NoCascades'], this['_shadowTwo' + 'CascadeSpl' + 'its'] = 0x1 / 0x3, this['_shadowFou' + 'rCascadeSp' + 'lits'] = new _0x352206(0x1 / 0xf, 0x3 / 0xf, 0x7 / 0xf), this['_lightType'] = _0x1f405c['LightType']['Directiona' + 'l'];
        }
        get ['shadowCasc' + 'adesMode']() {
            return this['_shadowCas' + 'cadesMode'];
        }
        set ['shadowCasc' + 'adesMode'](_0x1c219c) {
            this['_shadowCas' + 'cadesMode'] = _0x1c219c;
        }
        get ['shadowTwoC' + 'ascadeSpli' + 'ts']() {
            return this['_shadowTwo' + 'CascadeSpl' + 'its'];
        }
        set ['shadowTwoC' + 'ascadeSpli' + 'ts'](_0x502bc0) {
            this['_shadowTwo' + 'CascadeSpl' + 'its'] = _0x502bc0;
        }
        get ['shadowFour' + 'CascadeSpl' + 'its']() {
            return this['_shadowFou' + 'rCascadeSp' + 'lits'];
        }
        set ['shadowFour' + 'CascadeSpl' + 'its'](_0x1504fd) {
            if (_0x1504fd['x'] > _0x1504fd['y'] || _0x1504fd['y'] > _0x1504fd['z'] || _0x1504fd['z'] > 0x1)
                throw 'DiretionLi' + 'ght:Invali' + 'd\x20value.';
            _0x1504fd['cloneTo'](this['_shadowFou' + 'rCascadeSp' + 'lits']);
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_direction' + 'Lights']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_direction' + 'Lights']['remove'](this);
        }
        ['_create']() {
            return new _0x175d64();
        }
    }
    class _0x44e061 extends _0x594385 {
        constructor() {
            super(), this['_range'] = 0x6, this['_lightType'] = _0x1f405c['LightType']['Point'];
        }
        get ['range']() {
            return this['_range'];
        }
        set ['range'](_0x300e5d) {
            this['_range'] = _0x300e5d;
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_pointLigh' + 'ts']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_pointLigh' + 'ts']['remove'](this);
        }
        ['_parse'](_0x3fdb8b, _0x2af51b) {
            super['_parse'](_0x3fdb8b, _0x2af51b), this['range'] = _0x3fdb8b['range'];
        }
        ['_cloneTo'](_0x8de259, _0x27a35d, _0x33310d) {
            super['_cloneTo'](_0x8de259, _0x27a35d, _0x33310d);
            var _0x37a59a = _0x8de259;
            _0x37a59a['range'] = this['range'], _0x37a59a['_lightType'] = _0x1f405c['LightType']['Point'];
        }
        ['_create']() {
            return new _0x44e061();
        }
    }
    class _0x1d9d7e extends _0x594385 {
        constructor() {
            super(), this['_spotAngle'] = 0x1e, this['_range'] = 0xa, this['_direction'] = new _0x352206(), this['_lightType'] = _0x1f405c['LightType']['Spot'];
        }
        get ['spotAngle']() {
            return this['_spotAngle'];
        }
        set ['spotAngle'](_0x1760f6) {
            this['_spotAngle'] = Math['max'](Math['min'](_0x1760f6, 0xb3), 0x0);
        }
        get ['range']() {
            return this['_range'];
        }
        set ['range'](_0x4e875b) {
            this['_range'] = _0x4e875b;
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_spotLight' + 's']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_spotLight' + 's']['remove'](this);
        }
        ['_parse'](_0xad2142, _0x21624c) {
            super['_parse'](_0xad2142, _0x21624c), this['range'] = _0xad2142['range'], this['spotAngle'] = _0xad2142['spotAngle'];
        }
        ['_cloneTo'](_0x40be06, _0x4292da, _0x6aabab) {
            super['_cloneTo'](_0x40be06, _0x4292da, _0x6aabab);
            var _0x137827 = _0x40be06;
            _0x137827['range'] = this['range'], _0x137827['spotAngle'] = this['spotAngle'];
        }
        ['_create']() {
            return new _0x1d9d7e();
        }
    }
    class _0x5de858 extends _0x2edba7 {
        constructor(_0x536245) {
            super(_0x536245), this['_simpleAni' + 'matorParam' + 's'] = new _0x18425e(), this['_simpleAni' + 'matorOffse' + 't'] = new _0x378045(), this['_shaderVal' + 'ues']['addDefine'](_0x76a0e9['SHADERDEFI' + 'NE_SIMPLEB' + 'ONE']), this['_shaderVal' + 'ues']['addDefine'](_0x76a0e9['SHADERDEFI' + 'NE_BONE']);
        }
        get ['simpleAnim' + 'atorTextur' + 'e']() {
            return this['_simpleAni' + 'matorTextu' + 're'];
        }
        set ['simpleAnim' + 'atorTextur' + 'e'](_0x18ad6b) {
            this['_simpleAni' + 'matorTextu' + 're'] = _0x18ad6b, this['_simpleAni' + 'matorTextu' + 'reSize'] = _0x18ad6b['width'], this['_shaderVal' + 'ues']['setTexture'](_0x5de858['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURE'], _0x18ad6b), _0x18ad6b['_addRefere' + 'nce'](), this['_shaderVal' + 'ues']['setNumber'](_0x5de858['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURESI' + 'ZE'], this['_simpleAni' + 'matorTextu' + 'reSize']);
        }
        get ['simpleAnim' + 'atorOffset']() {
            return this['_simpleAni' + 'matorOffse' + 't'];
        }
        set ['simpleAnim' + 'atorOffset'](_0x3e104e) {
            _0x3e104e['cloneTo'](this['_simpleAni' + 'matorOffse' + 't']);
        }
        ['_computeAn' + 'imatorPara' + 'msData']() {
            this['_cacheMesh'] && (this['_simpleAni' + 'matorParam' + 's']['x'] = this['_simpleAni' + 'matorOffse' + 't']['x'], this['_simpleAni' + 'matorParam' + 's']['y'] = Math['round'](this['_simpleAni' + 'matorOffse' + 't']['y']) * this['_bonesNums'] * 0x4);
        }
        ['_createRen' + 'derElement']() {
            return new _0x5d8926();
        }
        ['_setCacheA' + 'nimator'](_0xa21c25) {
            this['_cacheAnim' + 'ator'] = _0xa21c25, this['_shaderVal' + 'ues']['addDefine'](_0x76a0e9['SHADERDEFI' + 'NE_SIMPLEB' + 'ONE']);
        }
        ['_onMeshCha' + 'nge'](_0x1f7012) {
            super['_onMeshCha' + 'nge'](_0x1f7012), this['_cacheMesh'] = _0x1f7012;
        }
        ['_renderUpd' + 'ate'](_0x3a2311, _0x2fcab1) {
            var _0x22952e = _0x3a2311['renderElem' + 'ent'];
            switch (_0x22952e['renderType']) {
            case _0x5ca4bd['RENDERTYPE' + '_NORMAL']:
                if (this['_cacheAnim' + 'ator']) {
                    var _0x5d8346 = this['_cacheAnim' + 'ator']['owner']['transform']['worldMatri' + 'x'];
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x5d8346);
                } else
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['WORLDMATRI' + 'X'], _0x2fcab1['worldMatri' + 'x']);
                this['_computeAn' + 'imatorPara' + 'msData'](), this['_shaderVal' + 'ues']['setVector'](_0x5de858['SIMPLE_SIM' + 'PLEANIMATO' + 'RPARAMS'], this['_simpleAni' + 'matorParam' + 's']);
                break;
            case _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                var _0x407a24 = _0x2247dd['instance']['instanceWo' + 'rldMatrixD' + 'ata'], _0x375e34 = _0x22952e['instanceBa' + 'tchElement' + 'List'], _0x4bdb24 = _0x375e34['elements'], _0xf6306f = _0x375e34['length'];
                if (this['_cacheAnim' + 'ator'])
                    for (var _0xd90b90 = 0x0; _0xd90b90 < _0xf6306f; _0xd90b90++) {
                        var _0x2313d5 = _0x4bdb24[_0xd90b90]['render']['_cacheAnim' + 'ator']['owner']['_transform']['worldMatri' + 'x'];
                        _0x407a24['set'](_0x2313d5['elements'], _0xd90b90 * 0x10);
                    }
                else {
                    for (var _0xd90b90 = 0x0; _0xd90b90 < _0xf6306f; _0xd90b90++)
                        _0x407a24['set'](_0x4bdb24[_0xd90b90]['_transform']['worldMatri' + 'x']['elements'], _0xd90b90 * 0x10);
                }
                var _0x3478e1 = _0x2247dd['instance']['instanceWo' + 'rldMatrixB' + 'uffer'];
                _0x3478e1['orphanStor' + 'age'](), _0x3478e1['setData'](_0x407a24['buffer'], 0x0, 0x0, _0xf6306f * 0x10 * 0x4), this['_shaderVal' + 'ues']['addDefine'](_0x157bdb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
                var _0x2e6c8a = _0x2247dd['instance']['instanceSi' + 'mpleAnimat' + 'orData'];
                if (this['_cacheAnim' + 'ator'])
                    for (var _0xd90b90 = 0x0; _0xd90b90 < _0xf6306f; _0xd90b90++) {
                        var _0x37114f = _0x4bdb24[_0xd90b90]['render'];
                        _0x37114f['_computeAn' + 'imatorPara' + 'msData']();
                        var _0x5a7d41 = _0x37114f['_simpleAni' + 'matorParam' + 's'], _0x2272b5 = _0xd90b90 * 0x4;
                        _0x2e6c8a[_0x2272b5] = _0x5a7d41['x'], _0x2e6c8a[_0x2272b5 + 0x1] = _0x5a7d41['y'];
                    }
                else
                    for (var _0xd90b90 = 0x0; _0xd90b90 < _0xf6306f; _0xd90b90++) {
                        _0x2e6c8a[_0x2272b5] = 0x0, _0x2e6c8a[_0x2272b5 + 0x1] = 0x0;
                    }
                var _0x573041 = _0x2247dd['instance']['instanceSi' + 'mpleAnimat' + 'orBuffer'];
                _0x573041['orphanStor' + 'age'](), _0x573041['setData'](_0x2e6c8a['buffer'], 0x0, 0x0, _0xf6306f * 0x4 * 0x4);
                break;
            }
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x26328a, _0x52b8b4) {
            var _0x30ef38 = _0x26328a['projection' + 'ViewMatrix'];
            if (_0x30ef38) {
                var _0x477637 = _0x26328a['renderElem' + 'ent'];
                switch (_0x477637['renderType']) {
                case _0x5ca4bd['RENDERTYPE' + '_NORMAL']:
                    if (this['_cacheAnim' + 'ator']) {
                        var _0x50a25e = this['_cacheAnim' + 'ator']['owner']['_transform']['worldMatri' + 'x'];
                        _0x4c2288['multiply'](_0x30ef38, _0x50a25e, this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
                    } else
                        _0x4c2288['multiply'](_0x30ef38, _0x52b8b4['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x49f2b6['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
                    break;
                case _0x5ca4bd['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                    var _0x5dd420 = _0x2247dd['instance']['instanceMV' + 'PMatrixDat' + 'a'], _0x3dfc24 = _0x477637['instanceBa' + 'tchElement' + 'List'], _0x2b5110 = _0x3dfc24['elements'], _0x3fd378 = _0x3dfc24['length'];
                    if (this['_cacheAnim' + 'ator'])
                        for (var _0xc597db = 0x0; _0xc597db < _0x3fd378; _0xc597db++) {
                            var _0x16e1cd = _0x2b5110[_0xc597db]['render']['_cacheAnim' + 'ator']['owner']['_transform']['worldMatri' + 'x'];
                            _0x47bed9['mulMatrixB' + 'yArray'](_0x30ef38['elements'], 0x0, _0x16e1cd['elements'], 0x0, _0x5dd420, _0xc597db * 0x10);
                        }
                    else
                        for (var _0xc597db = 0x0; _0xc597db < _0x3fd378; _0xc597db++) {
                            var _0x16e1cd = _0x2b5110[_0xc597db]['_transform']['worldMatri' + 'x'];
                            _0x47bed9['mulMatrixB' + 'yArray'](_0x30ef38['elements'], 0x0, _0x16e1cd['elements'], 0x0, _0x5dd420, _0xc597db * 0x10);
                        }
                    var _0x2cab03 = _0x2247dd['instance']['instanceMV' + 'PMatrixBuf' + 'fer'];
                    _0x2cab03['orphanStor' + 'age'](), _0x2cab03['setData'](_0x5dd420['buffer'], 0x0, 0x0, _0x3fd378 * 0x10 * 0x4);
                    break;
                }
            }
        }
        ['_destroy']() {
            if (this['_cacheRoot' + 'Bone'])
                !this['_cacheRoot' + 'Bone']['destroyed'] && this['_cacheRoot' + 'Bone']['transform']['off'](_0x442335['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
            this['_simpleAni' + 'matorTextu' + 're'] && this['_simpleAni' + 'matorTextu' + 're']['_removeRef' + 'erence'](), this['_simpleAni' + 'matorTextu' + 're'] = null;
        }
    }
    class _0x2838b1 extends _0x22d3a2 {
        constructor(_0x335c10 = null, _0x5dd78c = null) {
            super(_0x5dd78c), this['_meshFilte' + 'r'] = new _0x2da43c(this), this['_render'] = new _0x5de858(this), _0x335c10 && (this['_meshFilte' + 'r']['sharedMesh'] = _0x335c10);
        }
        static ['__init__']() {
            _0x5de858['SIMPLE_SIM' + 'PLEANIMATO' + 'RPARAMS'] = _0x2838b1['SIMPLE_SIM' + 'PLEANIMATO' + 'RPARAMS'], _0x5de858['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURE'] = _0x2838b1['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURE'], _0x5de858['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURESI' + 'ZE'] = _0x2838b1['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURESI' + 'ZE'];
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['simpleSkin' + 'nedMeshRen' + 'derer']() {
            return this['_render'];
        }
        ['_parse'](_0x8c380f, _0x48cb34) {
            super['_parse'](_0x8c380f, _0x48cb34);
            var _0x7b76d0 = this['simpleSkin' + 'nedMeshRen' + 'derer'], _0x36ff52 = _0x8c380f['lightmapIn' + 'dex'];
            _0x36ff52 != null && (_0x7b76d0['lightmapIn' + 'dex'] = _0x36ff52);
            var _0x29d577 = _0x8c380f['lightmapSc' + 'aleOffset'];
            _0x29d577 && (_0x7b76d0['lightmapSc' + 'aleOffset'] = new _0x18425e(_0x29d577[0x0], _0x29d577[0x1], _0x29d577[0x2], _0x29d577[0x3])), _0x8c380f['enableRend' + 'er'] != undefined && (_0x7b76d0['enable'] = _0x8c380f['enableRend' + 'er']), _0x8c380f['receiveSha' + 'dows'] != undefined && (_0x7b76d0['receiveSha' + 'dow'] = _0x8c380f['receiveSha' + 'dows']), _0x8c380f['castShadow'] != undefined && (_0x7b76d0['castShadow'] = _0x8c380f['castShadow']);
            var _0x34a4da;
            _0x34a4da = _0x8c380f['meshPath'];
            if (_0x34a4da) {
                var _0x43616a = _0x442335['Loader']['getRes'](_0x34a4da);
                _0x43616a && (this['meshFilter']['sharedMesh'] = _0x43616a);
            }
            var _0x175b54 = _0x8c380f['materials'];
            if (_0x175b54) {
                var _0x42676b = _0x7b76d0['sharedMate' + 'rials'], _0x4d8acf = _0x175b54['length'];
                _0x42676b['length'] = _0x4d8acf;
                for (var _0x1b084e = 0x0; _0x1b084e < _0x4d8acf; _0x1b084e++) {
                    _0x42676b[_0x1b084e] = _0x442335['Loader']['getRes'](_0x175b54[_0x1b084e]['path']);
                }
                _0x7b76d0['sharedMate' + 'rials'] = _0x42676b;
            }
            var _0xcf5f26 = _0x8c380f['boundBox'], _0x513406 = _0xcf5f26['min'], _0x54cf0a = _0xcf5f26['max'];
            _0x7b76d0['localBound' + 's']['setMin'](new _0x352206(_0x513406[0x0], _0x513406[0x1], _0x513406[0x2])), _0x7b76d0['localBound' + 's']['setMax'](new _0x352206(_0x54cf0a[0x0], _0x54cf0a[0x1], _0x54cf0a[0x2]));
            if (_0x48cb34) {
                var _0x4fc266 = _0x8c380f['rootBone'];
                _0x7b76d0['rootBone'] = _0x48cb34[_0x4fc266];
                var _0x392793 = _0x8c380f['bones'], _0x2965d7;
                for (_0x1b084e = 0x0, _0x2965d7 = _0x392793['length']; _0x1b084e < _0x2965d7; _0x1b084e++)
                    _0x7b76d0['bones']['push'](_0x48cb34[_0x392793[_0x1b084e]]);
                _0x7b76d0['_bonesNums'] = _0x8c380f['bonesNums'] ? _0x8c380f['bonesNums'] : _0x7b76d0['bones']['length'];
            } else
                _0x8c380f['rootBone'] && _0x7b76d0['_setRootBo' + 'ne'](_0x8c380f['rootBone']);
            var _0x46ca85 = _0x8c380f['animatorTe' + 'xture'];
            if (_0x46ca85) {
                var _0x57385a = _0x442335['Loader']['getRes'](_0x46ca85);
                _0x7b76d0['simpleAnim' + 'atorTextur' + 'e'] = _0x57385a;
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x4af573) {
            super['_changeHie' + 'rarchyAnim' + 'ator'](_0x4af573), this['simpleSkin' + 'nedMeshRen' + 'derer']['_setCacheA' + 'nimator'](_0x4af573);
        }
        ['_cloneTo'](_0x3cc339, _0x22fb76, _0x288e89) {
            var _0x297da9 = _0x3cc339;
            _0x297da9['meshFilter']['sharedMesh'] = this['meshFilter']['sharedMesh'];
            var _0x5683fa = this['_render'], _0x4a4619 = _0x297da9['_render'];
            _0x4a4619['enable'] = _0x5683fa['enable'], _0x4a4619['sharedMate' + 'rials'] = _0x5683fa['sharedMate' + 'rials'], _0x4a4619['castShadow'] = _0x5683fa['castShadow'];
            var _0x4c31a = _0x5683fa['lightmapSc' + 'aleOffset'];
            _0x4c31a && (_0x4a4619['lightmapSc' + 'aleOffset'] = _0x4c31a['clone']()), _0x4a4619['receiveSha' + 'dow'] = _0x5683fa['receiveSha' + 'dow'], _0x4a4619['sortingFud' + 'ge'] = _0x5683fa['sortingFud' + 'ge'], _0x4a4619['_rootBone'] = _0x5683fa['_rootBone'];
            var _0x4da636 = _0x5683fa['bones'], _0x41bc95 = _0x4a4619['bones'], _0x189ff4 = _0x4da636['length'];
            _0x41bc95['length'] = _0x189ff4;
            var _0x3dc6fc = _0x5683fa['rootBone'];
            if (_0x3dc6fc) {
                var _0x18eda8 = _0x47bed9['_getHierar' + 'chyPath'](_0x22fb76, _0x3dc6fc, _0x2838b1['_tempArray' + '0']);
                if (_0x18eda8)
                    _0x4a4619['rootBone'] = _0x47bed9['_getNodeBy' + 'HierarchyP' + 'ath'](_0x288e89, _0x18eda8);
                else
                    _0x4a4619['rootBone'] = _0x3dc6fc;
            }
            for (var _0x1a0346 = 0x0; _0x1a0346 < _0x4da636['length']; _0x1a0346++) {
                _0x18eda8 = _0x47bed9['_getHierar' + 'chyPath'](_0x22fb76, _0x4da636[_0x1a0346], _0x2838b1['_tempArray' + '0']);
                if (_0x18eda8)
                    _0x41bc95[_0x1a0346] = _0x47bed9['_getNodeBy' + 'HierarchyP' + 'ath'](_0x288e89, _0x18eda8);
                else
                    _0x41bc95[_0x1a0346] = _0x4da636[_0x1a0346];
            }
            var _0x4fc7fb = _0x5683fa['localBound' + 's'];
            _0x4fc7fb && _0x4fc7fb['cloneTo'](_0x4a4619['localBound' + 's']), _0x4a4619['simpleAnim' + 'atorOffset'] = _0x5683fa['simpleAnim' + 'atorOffset'], _0x4a4619['simpleAnim' + 'atorTextur' + 'e'] = _0x5683fa['simpleAnim' + 'atorTextur' + 'e'], _0x4a4619['_bonesNums'] = _0x5683fa['_bonesNums'], super['_cloneTo'](_0x3cc339, _0x22fb76, _0x288e89);
        }
        ['destroy'](_0x562928 = !![]) {
            if (this['destroyed'])
                return;
            super['destroy'](_0x562928), this['_meshFilte' + 'r']['destroy']();
        }
        ['_create']() {
            return new _0x2838b1();
        }
    }
    _0x2838b1['_tempArray' + '0'] = [], _0x2838b1['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_SimpleAn' + 'imatorText' + 'ure'), _0x2838b1['SIMPLE_SIM' + 'PLEANIMATO' + 'RPARAMS'] = _0x18824e['propertyNa' + 'meToID']('u_SimpleAn' + 'imatorPara' + 'ms'), _0x2838b1['SIMPLE_SIM' + 'PLEANIMATO' + 'RTEXTURESI' + 'ZE'] = _0x18824e['propertyNa' + 'meToID']('u_SimpleAn' + 'imatorText' + 'ureSize');
    class _0x5bca9b {
        static ['_createSpr' + 'ite3DInsta' + 'nce'](_0x2e4231, _0x515af4, _0x2f8ff0) {
            var _0x2ee834;
            switch (_0x2e4231['type']) {
            case 'Scene3D':
                _0x2ee834 = new _0x397862();
                break;
            case 'Sprite3D':
                _0x2ee834 = new _0x49f2b6();
                break;
            case 'MeshSprite' + '3D':
                _0x2ee834 = new _0x1208f9(), _0x2f8ff0 && _0x2e4231['props']['isStatic'] && _0x2f8ff0['push'](_0x2ee834);
                break;
            case 'SkinnedMes' + 'hSprite3D':
                _0x2ee834 = new _0xa58a85();
                break;
            case 'SimpleSkin' + 'nedMeshSpr' + 'ite3D':
                _0x2ee834 = new _0x2838b1();
                break;
            case 'ShuriKenPa' + 'rticle3D':
                _0x2ee834 = new _0x531ddc();
                break;
            case 'Camera':
                _0x2ee834 = new _0x53b337();
                break;
            case 'DirectionL' + 'ight':
                _0x2ee834 = new _0x175d64();
                break;
            case 'PointLight':
                _0x2ee834 = new _0x44e061();
                break;
            case 'SpotLight':
                _0x2ee834 = new _0x1d9d7e();
                break;
            case 'TrailSprit' + 'e3D':
                _0x2ee834 = new _0x15363b();
                break;
            case 'Reflection' + 'Probe':
                _0x2ee834 = new _0x542d3e();
                break;
            default:
                throw new Error('Utils3D:un' + 'identified' + '\x20class\x20typ' + 'e\x20in\x20(.lh)' + '\x20file.');
            }
            var _0x12b65b = _0x2e4231['child'];
            if (_0x12b65b)
                for (var _0x485dda = 0x0, _0x67223d = _0x12b65b['length']; _0x485dda < _0x67223d; _0x485dda++) {
                    var _0x5a2ac6 = _0x5bca9b['_createSpr' + 'ite3DInsta' + 'nce'](_0x12b65b[_0x485dda], _0x515af4, _0x2f8ff0);
                    _0x2ee834['addChild'](_0x5a2ac6);
                }
            return _0x515af4[_0x2e4231['instanceID']] = _0x2ee834, _0x2ee834;
        }
        static ['_createCom' + 'ponentInst' + 'ance'](_0x125306, _0x4cc944, _0x1beee2) {
            var _0x51e48c = _0x4cc944[_0x125306['instanceID']];
            _0x51e48c['_parse'](_0x125306['props'], _0x4cc944);
            var _0x3b5b5d = _0x125306['child'];
            if (_0x3b5b5d) {
                for (var _0x40d71b = 0x0, _0xbe79ec = _0x3b5b5d['length']; _0x40d71b < _0xbe79ec; _0x40d71b++)
                    _0x5bca9b['_createCom' + 'ponentInst' + 'ance'](_0x3b5b5d[_0x40d71b], _0x4cc944, _0x1beee2);
            }
            var _0x5ba17a = _0x125306['components'];
            if (_0x5ba17a)
                for (var _0x36a857 = 0x0, _0x5419c0 = _0x5ba17a['length']; _0x36a857 < _0x5419c0; _0x36a857++) {
                    var _0x5d5e74 = _0x5ba17a[_0x36a857], _0x2e1957 = _0x442335['ClassUtils']['getRegClas' + 's'](_0x5d5e74['type']);
                    if (_0x2e1957) {
                        var _0x188d63 = _0x51e48c['addCompone' + 'nt'](_0x2e1957);
                        _0x188d63['_parse'](_0x5d5e74, _0x1beee2);
                    } else
                        console['warn']('Unkown\x20com' + 'ponent\x20typ' + 'e.');
                }
        }
        static ['_createNod' + 'eByJson02'](_0x39ef66, _0x48f508) {
            var _0x5cfaa6 = {}, _0x38025a = {
                    'component': [],
                    'data': []
                }, _0x420654 = _0x5bca9b['_createSpr' + 'ite3DInsta' + 'nce'](_0x39ef66, _0x5cfaa6, _0x48f508);
            return _0x5bca9b['_createCom' + 'ponentInst' + 'ance'](_0x39ef66, _0x5cfaa6, _0x38025a), _0x5bca9b['_createInt' + 'eractInsta' + 'nce'](_0x38025a, _0x5cfaa6), _0x420654;
        }
        static ['_createInt' + 'eractInsta' + 'nce'](_0x4021f0, _0x2ee72b) {
            var _0x4eb537 = _0x4021f0['component'], _0x3f08f3 = _0x4021f0['data'];
            for (var _0x4bf4a0 = 0x0, _0x2dad9e = _0x4eb537['length']; _0x4bf4a0 < _0x2dad9e; _0x4bf4a0++) {
                _0x4eb537[_0x4bf4a0]['_parseInte' + 'ractive'](_0x3f08f3[_0x4bf4a0], _0x2ee72b);
            }
        }
        static ['_parse'](_0x50b6fd, _0xd712d7 = null, _0x31cedf = null) {
            var _0x2451cd = _0x50b6fd['data'], _0x45585f = [], _0x2cdacc;
            switch (_0x50b6fd['version']) {
            case 'LAYAHIERAR' + 'CHY:02':
                _0x2cdacc = _0x5bca9b['_createNod' + 'eByJson02'](_0x2451cd, _0x45585f);
                break;
            default:
                _0x2cdacc = _0x5bca9b['_createNod' + 'eByJson'](_0x2451cd, _0x45585f);
            }
            return _0x435c23['combine'](_0x2cdacc, _0x45585f), _0x2cdacc;
        }
        static ['_parseScen' + 'e'](_0x2b1d56, _0x51e015 = null, _0x1842c6 = null) {
            var _0x21f7f4 = _0x2b1d56['data'], _0x180e0e = [], _0x594976;
            switch (_0x2b1d56['version']) {
            case 'LAYASCENE3' + 'D:02':
                _0x594976 = _0x5bca9b['_createNod' + 'eByJson02'](_0x21f7f4, _0x180e0e);
                break;
            default:
                _0x594976 = _0x5bca9b['_createNod' + 'eByJson'](_0x21f7f4, _0x180e0e);
            }
            return _0x435c23['combine'](null, _0x180e0e), _0x594976;
        }
        static ['_createNod' + 'eByJson'](_0x37dffe, _0x2ff51b) {
            var _0xe21e1;
            switch (_0x37dffe['type']) {
            case 'Scene3D':
                _0xe21e1 = new _0x397862();
                break;
            case 'Sprite3D':
                _0xe21e1 = new _0x49f2b6();
                break;
            case 'MeshSprite' + '3D':
                _0xe21e1 = new _0x1208f9(), _0x2ff51b && _0x37dffe['props']['isStatic'] && _0x2ff51b['push'](_0xe21e1);
                break;
            case 'SkinnedMes' + 'hSprite3D':
                _0xe21e1 = new _0xa58a85();
                break;
            case 'ShuriKenPa' + 'rticle3D':
                _0xe21e1 = new _0x531ddc();
                break;
            case 'Camera':
                _0xe21e1 = new _0x53b337();
                break;
            case 'DirectionL' + 'ight':
                _0xe21e1 = new _0x175d64();
                break;
            case 'PointLight':
                _0xe21e1 = new _0x44e061();
                break;
            case 'SpotLight':
                _0xe21e1 = new _0x1d9d7e();
                break;
            case 'TrailSprit' + 'e3D':
                _0xe21e1 = new _0x15363b();
                break;
            default:
                throw new Error('Utils3D:un' + 'identified' + '\x20class\x20typ' + 'e\x20in\x20(.lh)' + '\x20file.');
            }
            var _0x33e076 = _0x37dffe['child'];
            if (_0x33e076)
                for (var _0x1157f5 = 0x0, _0x52d492 = _0x33e076['length']; _0x1157f5 < _0x52d492; _0x1157f5++) {
                    var _0xae6c69 = _0x5bca9b['_createNod' + 'eByJson'](_0x33e076[_0x1157f5], _0x2ff51b);
                    _0xe21e1['addChild'](_0xae6c69);
                }
            var _0x650929 = _0x37dffe['components'];
            if (_0x650929)
                for (var _0x3621ab = 0x0, _0x227f08 = _0x650929['length']; _0x3621ab < _0x227f08; _0x3621ab++) {
                    var _0x4496c7 = _0x650929[_0x3621ab], _0x279ed8 = _0x442335['ClassUtils']['getRegClas' + 's'](_0x4496c7['type']);
                    if (_0x279ed8) {
                        var _0x2c9154 = _0xe21e1['addCompone' + 'nt'](_0x279ed8);
                        _0x2c9154['_parse'](_0x4496c7);
                    } else
                        console['warn']('Unkown\x20com' + 'ponent\x20typ' + 'e.');
                }
            return _0xe21e1['_parse'](_0x37dffe['props'], null), _0xe21e1;
        }
    }
    class _0x1f3281 {
        static ['parse'](_0x1512c1, _0x2efa67, _0x4ed79b, _0x2227a6) {
            _0x1f3281['_mesh'] = _0x4ed79b, _0x1f3281['_subMeshes'] = _0x2227a6, _0x1f3281['_version'] = _0x2efa67, _0x1f3281['_readData'] = _0x1512c1, _0x1f3281['READ_DATA'](), _0x1f3281['READ_BLOCK'](), _0x1f3281['READ_STRIN' + 'GS']();
            for (var _0x5d5cb3 = 0x0, _0x20a06c = _0x1f3281['_BLOCK']['count']; _0x5d5cb3 < _0x20a06c; _0x5d5cb3++) {
                _0x1f3281['_readData']['pos'] = _0x1f3281['_BLOCK']['blockStart' + 's'][_0x5d5cb3];
                var _0x2bb0bb = _0x1f3281['_readData']['getUint16'](), _0x18b7b3 = _0x1f3281['_strings'][_0x2bb0bb], _0x2dfee8 = _0x1f3281['READ_' + _0x18b7b3];
                if (_0x2dfee8 == null)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x2bb0bb + '\x20' + _0x18b7b3);
                else
                    _0x2dfee8['call'](null);
            }
            _0x1f3281['_strings']['length'] = 0x0, _0x1f3281['_readData'] = null, _0x1f3281['_version'] = null, _0x1f3281['_mesh'] = null, _0x1f3281['_subMeshes'] = null;
        }
        static ['_readStrin' + 'g']() {
            return _0x1f3281['_strings'][_0x1f3281['_readData']['getUint16']()];
        }
        static ['READ_DATA']() {
            _0x1f3281['_DATA']['offset'] = _0x1f3281['_readData']['getUint32'](), _0x1f3281['_DATA']['size'] = _0x1f3281['_readData']['getUint32']();
        }
        static ['READ_BLOCK']() {
            var _0x39831f = _0x1f3281['_BLOCK']['count'] = _0x1f3281['_readData']['getUint16'](), _0x433d5a = _0x1f3281['_BLOCK']['blockStart' + 's'] = [], _0xdaa49c = _0x1f3281['_BLOCK']['blockLengt' + 'hs'] = [];
            for (var _0x277ee9 = 0x0; _0x277ee9 < _0x39831f; _0x277ee9++) {
                _0x433d5a['push'](_0x1f3281['_readData']['getUint32']()), _0xdaa49c['push'](_0x1f3281['_readData']['getUint32']());
            }
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x2c4fe2 = _0x1f3281['_readData']['getUint32'](), _0x1eb229 = _0x1f3281['_readData']['getUint16'](), _0x123bed = _0x1f3281['_readData']['pos'];
            _0x1f3281['_readData']['pos'] = _0x2c4fe2 + _0x1f3281['_DATA']['offset'];
            for (var _0x543051 = 0x0; _0x543051 < _0x1eb229; _0x543051++)
                _0x1f3281['_strings'][_0x543051] = _0x1f3281['_readData']['readUTFStr' + 'ing']();
            _0x1f3281['_readData']['pos'] = _0x123bed;
        }
        static ['READ_MESH']() {
            var _0x129dcb = _0x442335['LayaGL']['instance'], _0x459344 = _0x1f3281['_readStrin' + 'g'](), _0x4e1732 = _0x1f3281['_readData']['__getBuffe' + 'r'](), _0x5264d4, _0x3216b6 = 0x0, _0x19a6fd = _0x1f3281['_readData']['getInt16'](), _0x14951d = _0x1f3281['_DATA']['offset'];
            for (_0x5264d4 = 0x0; _0x5264d4 < _0x19a6fd; _0x5264d4++) {
                var _0x1db4fd = _0x14951d + _0x1f3281['_readData']['getUint32'](), _0x544345 = _0x1f3281['_readData']['getUint32'](), _0x4f5822 = _0x4e1732['slice'](_0x1db4fd, _0x1db4fd + _0x544345), _0x5250e4 = new Float32Array(_0x4f5822), _0x568844 = _0x1f3281['_readStrin' + 'g'](), _0x1e4245;
                switch (_0x1f3281['_version']) {
                case 'LAYAMODEL:' + '0301':
                case 'LAYAMODEL:' + '0400':
                    _0x1e4245 = _0x2a7b2f['getVertexD' + 'eclaration'](_0x568844);
                    break;
                case 'LAYAMODEL:' + '0401':
                    _0x1e4245 = _0x2a7b2f['getVertexD' + 'eclaration'](_0x568844, ![]);
                    break;
                default:
                    throw new Error('LoadModelV' + '03:\x20unknow' + 'n\x20version.');
                }
                if (!_0x1e4245)
                    throw new Error('LoadModelV' + '03:\x20unknow' + 'n\x20vertexDe' + 'claration.');
                var _0xca3219 = new _0x251441(_0x5250e4['length'] * 0x4, _0x129dcb['STATIC_DRA' + 'W'], !![]);
                _0xca3219['vertexDecl' + 'aration'] = _0x1e4245, _0xca3219['setData'](_0x5250e4['buffer']), _0x1f3281['_mesh']['_vertexBuf' + 'fer'] = _0xca3219, _0x1f3281['_mesh']['_vertexCou' + 'nt'] += _0xca3219['_byteLengt' + 'h'] / _0x1e4245['vertexStri' + 'de'], _0x3216b6 += _0x5250e4['length'] * 0x4;
            }
            var _0x4ee064 = _0x14951d + _0x1f3281['_readData']['getUint32'](), _0x5e7eb5 = _0x1f3281['_readData']['getUint32'](), _0x245808 = new Uint16Array(_0x4e1732['slice'](_0x4ee064, _0x4ee064 + _0x5e7eb5)), _0x274a24 = new _0x197184(_0x1f405c['IndexForma' + 't']['UInt16'], _0x5e7eb5 / 0x2, _0x129dcb['STATIC_DRA' + 'W'], !![]);
            _0x274a24['setData'](_0x245808), _0x1f3281['_mesh']['_indexBuff' + 'er'] = _0x274a24, _0x3216b6 += _0x274a24['indexCount'] * 0x2, _0x1f3281['_mesh']['_setBuffer'](_0x1f3281['_mesh']['_vertexBuf' + 'fer'], _0x274a24), _0x1f3281['_mesh']['_setCPUMem' + 'ory'](_0x3216b6), _0x1f3281['_mesh']['_setGPUMem' + 'ory'](_0x3216b6);
            var _0x4c1d41 = _0x1f3281['_mesh']['_boneNames'] = [], _0x1701ce = _0x1f3281['_readData']['getUint16']();
            _0x4c1d41['length'] = _0x1701ce;
            for (_0x5264d4 = 0x0; _0x5264d4 < _0x1701ce; _0x5264d4++)
                _0x4c1d41[_0x5264d4] = _0x1f3281['_strings'][_0x1f3281['_readData']['getUint16']()];
            _0x1f3281['_readData']['pos'] += 0x8;
            var _0x1b3443 = _0x1f3281['_readData']['getUint32'](), _0x753354 = _0x1f3281['_readData']['getUint32'](), _0xc99cef = new Float32Array(_0x4e1732['slice'](_0x14951d + _0x1b3443, _0x14951d + _0x1b3443 + _0x753354)), _0x5e139a = _0xc99cef['length'], _0x331716 = _0x1f3281['_mesh']['_inverseBi' + 'ndPosesBuf' + 'fer'] = new ArrayBuffer(_0x5e139a * 0x4);
            _0x1f3281['_mesh']['_inverseBi' + 'ndPoses'] = [];
            if (_0x5e139a != 0x0)
                _0x1f3281['_mesh']['_instanceB' + 'ufferState' + 'Type'] = _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_SIMPL' + 'EANIMATOR'];
            else
                _0x1f3281['_mesh']['_instanceB' + 'ufferState' + 'Type'] = _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_NORMA' + 'L'];
            _0x1f3281['_mesh']['_setInstan' + 'ceBuffer'](_0x1f3281['_mesh']['_instanceB' + 'ufferState' + 'Type']);
            for (_0x5264d4 = 0x0; _0x5264d4 < _0x5e139a; _0x5264d4 += 0x10) {
                var _0xe1fb83 = new _0x4c2288(_0xc99cef[_0x5264d4 + 0x0], _0xc99cef[_0x5264d4 + 0x1], _0xc99cef[_0x5264d4 + 0x2], _0xc99cef[_0x5264d4 + 0x3], _0xc99cef[_0x5264d4 + 0x4], _0xc99cef[_0x5264d4 + 0x5], _0xc99cef[_0x5264d4 + 0x6], _0xc99cef[_0x5264d4 + 0x7], _0xc99cef[_0x5264d4 + 0x8], _0xc99cef[_0x5264d4 + 0x9], _0xc99cef[_0x5264d4 + 0xa], _0xc99cef[_0x5264d4 + 0xb], _0xc99cef[_0x5264d4 + 0xc], _0xc99cef[_0x5264d4 + 0xd], _0xc99cef[_0x5264d4 + 0xe], _0xc99cef[_0x5264d4 + 0xf], new Float32Array(_0x331716, _0x5264d4 * 0x4, 0x10));
                _0x1f3281['_mesh']['_inverseBi' + 'ndPoses'][_0x5264d4 / 0x10] = _0xe1fb83;
            }
            return !![];
        }
        static ['READ_SUBME' + 'SH']() {
            var _0x1757c2 = _0x1f3281['_readData']['__getBuffe' + 'r'](), _0x2aa85b = new _0x327c94(_0x1f3281['_mesh']);
            _0x1f3281['_readData']['getInt16'](), _0x1f3281['_readData']['getUint32'](), _0x1f3281['_readData']['getUint32']();
            var _0x38a5a8 = _0x1f3281['_readData']['getUint32'](), _0xe73a30 = _0x1f3281['_readData']['getUint32'](), _0x5ab21b = _0x1f3281['_mesh']['_indexBuff' + 'er'];
            _0x2aa85b['_indexBuff' + 'er'] = _0x5ab21b, _0x2aa85b['_setIndexR' + 'ange'](_0x38a5a8, _0xe73a30);
            var _0x31e08f = _0x1f3281['_mesh']['_vertexBuf' + 'fer'];
            _0x2aa85b['_vertexBuf' + 'fer'] = _0x31e08f;
            var _0x58c4bc = _0x1f3281['_DATA']['offset'], _0x2b979b = _0x2aa85b['_subIndexB' + 'ufferStart'], _0x2d8f8e = _0x2aa85b['_subIndexB' + 'ufferCount'], _0x32fec7 = _0x2aa85b['_boneIndic' + 'esList'], _0x218357 = _0x1f3281['_readData']['getUint16']();
            _0x2b979b['length'] = _0x218357, _0x2d8f8e['length'] = _0x218357, _0x32fec7['length'] = _0x218357;
            var _0x2f50b8 = _0x1f3281['_mesh']['_skinnedMa' + 'trixCaches'], _0x144857 = _0x1f3281['_subMeshes']['length'];
            _0x2f50b8['length'] = _0x1f3281['_mesh']['_inverseBi' + 'ndPoses']['length'];
            for (var _0x306f35 = 0x0; _0x306f35 < _0x218357; _0x306f35++) {
                _0x2b979b[_0x306f35] = _0x1f3281['_readData']['getUint32'](), _0x2d8f8e[_0x306f35] = _0x1f3281['_readData']['getUint32']();
                var _0x71b751 = _0x1f3281['_readData']['getUint32'](), _0x2d04bc = _0x1f3281['_readData']['getUint32'](), _0xd5bc27 = _0x32fec7[_0x306f35] = new Uint16Array(_0x1757c2['slice'](_0x58c4bc + _0x71b751, _0x58c4bc + _0x71b751 + _0x2d04bc)), _0x1188d3 = _0xd5bc27['length'];
                for (var _0x18c640 = 0x0; _0x18c640 < _0x1188d3; _0x18c640++) {
                    var _0x517e92 = _0xd5bc27[_0x18c640];
                    _0x2f50b8[_0x517e92] || (_0x2f50b8[_0x517e92] = new _0x55114a(_0x144857, _0x306f35, _0x18c640));
                }
            }
            return _0x1f3281['_subMeshes']['push'](_0x2aa85b), !![];
        }
    }
    _0x1f3281['_BLOCK'] = { 'count': 0x0 }, _0x1f3281['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x1f3281['_strings'] = [];
    class _0x834fe9 {
        static ['parse'](_0x259e26, _0x1d0725, _0x4dce01, _0xf3dfbb) {
            _0x834fe9['_mesh'] = _0x4dce01, _0x834fe9['_subMeshes'] = _0xf3dfbb, _0x834fe9['_version'] = _0x1d0725, _0x834fe9['_readData'] = _0x259e26, _0x834fe9['READ_DATA'](), _0x834fe9['READ_BLOCK'](), _0x834fe9['READ_STRIN' + 'GS']();
            for (var _0x4023e6 = 0x0, _0x2779fe = _0x834fe9['_BLOCK']['count']; _0x4023e6 < _0x2779fe; _0x4023e6++) {
                _0x834fe9['_readData']['pos'] = _0x834fe9['_BLOCK']['blockStart' + 's'][_0x4023e6];
                var _0x3b66d8 = _0x834fe9['_readData']['getUint16'](), _0x12e6cd = _0x834fe9['_strings'][_0x3b66d8], _0x178dc8 = _0x834fe9['READ_' + _0x12e6cd];
                if (_0x178dc8 == null)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x3b66d8 + '\x20' + _0x12e6cd);
                else
                    _0x178dc8['call'](null);
            }
            _0x834fe9['_strings']['length'] = 0x0, _0x834fe9['_readData'] = null, _0x834fe9['_version'] = null, _0x834fe9['_mesh'] = null, _0x834fe9['_subMeshes'] = null;
        }
        static ['_readStrin' + 'g']() {
            return _0x834fe9['_strings'][_0x834fe9['_readData']['getUint16']()];
        }
        static ['READ_DATA']() {
            _0x834fe9['_DATA']['offset'] = _0x834fe9['_readData']['getUint32'](), _0x834fe9['_DATA']['size'] = _0x834fe9['_readData']['getUint32']();
        }
        static ['READ_BLOCK']() {
            var _0x440d87 = _0x834fe9['_BLOCK']['count'] = _0x834fe9['_readData']['getUint16'](), _0x2326ba = _0x834fe9['_BLOCK']['blockStart' + 's'] = [], _0xbe0e07 = _0x834fe9['_BLOCK']['blockLengt' + 'hs'] = [];
            for (var _0x4c8107 = 0x0; _0x4c8107 < _0x440d87; _0x4c8107++) {
                _0x2326ba['push'](_0x834fe9['_readData']['getUint32']()), _0xbe0e07['push'](_0x834fe9['_readData']['getUint32']());
            }
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x30f852 = _0x834fe9['_readData']['getUint32'](), _0x3ede5a = _0x834fe9['_readData']['getUint16'](), _0x2798de = _0x834fe9['_readData']['pos'];
            _0x834fe9['_readData']['pos'] = _0x30f852 + _0x834fe9['_DATA']['offset'];
            for (var _0x300896 = 0x0; _0x300896 < _0x3ede5a; _0x300896++)
                _0x834fe9['_strings'][_0x300896] = _0x834fe9['_readData']['readUTFStr' + 'ing']();
            _0x834fe9['_readData']['pos'] = _0x2798de;
        }
        static ['READ_MESH']() {
            var _0x330aef = _0x442335['LayaGL']['instance'], _0x123f6d, _0x4b5a5f = 0x0, _0x3ac660 = _0x834fe9['_readStrin' + 'g'](), _0x18bfda = _0x834fe9['_readData'], _0x245bcf = _0x18bfda['__getBuffe' + 'r'](), _0x28551f = _0x18bfda['getInt16'](), _0x3576af = _0x834fe9['_DATA']['offset'];
            for (_0x123f6d = 0x0; _0x123f6d < _0x28551f; _0x123f6d++) {
                var _0xe1e0b7 = _0x3576af + _0x18bfda['getUint32'](), _0x2f064d = _0x18bfda['getUint32'](), _0x3abf1e = _0x834fe9['_readStrin' + 'g'](), _0x1855f6 = _0x2a7b2f['getVertexD' + 'eclaration'](_0x3abf1e, ![]), _0x1f46b2 = _0x1855f6['vertexStri' + 'de'], _0x383ef6, _0x332bb0, _0x17d57f, _0x3e1b79 = _0x3abf1e['split'](','), _0x162130 = _0x3e1b79['length'], _0x21239e = _0x834fe9['_mesh'];
                switch (_0x834fe9['_version']) {
                case 'LAYAMODEL:' + '05':
                case 'LAYAMODEL:' + '0501':
                    _0x383ef6 = _0x245bcf['slice'](_0xe1e0b7, _0xe1e0b7 + _0x2f064d * _0x1f46b2), _0x332bb0 = new Float32Array(_0x383ef6), _0x17d57f = new Uint8Array(_0x383ef6);
                    break;
                case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_05':
                case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501':
                    _0x383ef6 = new ArrayBuffer(_0x1f46b2 * _0x2f064d), _0x332bb0 = new Float32Array(_0x383ef6), _0x17d57f = new Uint8Array(_0x383ef6);
                    var _0x51c99b = _0x18bfda['pos'];
                    _0x18bfda['pos'] = _0xe1e0b7;
                    for (var _0xd89134 = 0x0; _0xd89134 < _0x2f064d; _0xd89134++) {
                        var _0x56d68c, _0x3e3de0 = _0xd89134 * _0x1f46b2;
                        for (var _0x694a53 = 0x0; _0x694a53 < _0x162130; _0x694a53++) {
                            switch (_0x3e1b79[_0x694a53]) {
                            case 'POSITION':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x332bb0[_0x56d68c + 0x1] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x332bb0[_0x56d68c + 0x2] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x3e3de0 += 0xc;
                                break;
                            case 'NORMAL':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x332bb0[_0x56d68c + 0x1] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x332bb0[_0x56d68c + 0x2] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x3e3de0 += 0xc;
                                break;
                            case 'COLOR':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x18bfda['getUint8']() / 0xff, _0x332bb0[_0x56d68c + 0x1] = _0x18bfda['getUint8']() / 0xff, _0x332bb0[_0x56d68c + 0x2] = _0x18bfda['getUint8']() / 0xff, _0x332bb0[_0x56d68c + 0x3] = _0x18bfda['getUint8']() / 0xff, _0x3e3de0 += 0x10;
                                break;
                            case 'UV':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x332bb0[_0x56d68c + 0x1] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x3e3de0 += 0x8;
                                break;
                            case 'UV1':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x332bb0[_0x56d68c + 0x1] = _0x442335['HalfFloatU' + 'tils']['convertToN' + 'umber'](_0x18bfda['getUint16']()), _0x3e3de0 += 0x8;
                                break;
                            case 'BLENDWEIGH' + 'T':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x18bfda['getUint8']() / 0xff, _0x332bb0[_0x56d68c + 0x1] = _0x18bfda['getUint8']() / 0xff, _0x332bb0[_0x56d68c + 0x2] = _0x18bfda['getUint8']() / 0xff, _0x332bb0[_0x56d68c + 0x3] = _0x18bfda['getUint8']() / 0xff, _0x3e3de0 += 0x10;
                                break;
                            case 'BLENDINDIC' + 'ES':
                                _0x17d57f[_0x3e3de0] = _0x18bfda['getUint8'](), _0x17d57f[_0x3e3de0 + 0x1] = _0x18bfda['getUint8'](), _0x17d57f[_0x3e3de0 + 0x2] = _0x18bfda['getUint8'](), _0x17d57f[_0x3e3de0 + 0x3] = _0x18bfda['getUint8'](), _0x3e3de0 += 0x4;
                                break;
                            case 'TANGENT':
                                _0x56d68c = _0x3e3de0 / 0x4, _0x332bb0[_0x56d68c] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x332bb0[_0x56d68c + 0x1] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x332bb0[_0x56d68c + 0x2] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x332bb0[_0x56d68c + 0x3] = _0x18bfda['getUint8']() / 127.5 - 0x1, _0x3e3de0 += 0x10;
                                break;
                            }
                        }
                    }
                    _0x18bfda['pos'] = _0x51c99b;
                    break;
                }
                var _0x5da095 = new _0x251441(_0x383ef6['byteLength'], _0x330aef['STATIC_DRA' + 'W'], !![]);
                _0x5da095['vertexDecl' + 'aration'] = _0x1855f6, _0x5da095['setData'](_0x383ef6);
                var _0x2f064d = _0x5da095['_byteLengt' + 'h'] / _0x1855f6['vertexStri' + 'de'];
                if (_0x2f064d > 0xffff)
                    _0x21239e['_indexForm' + 'at'] = _0x1f405c['IndexForma' + 't']['UInt32'];
                else
                    _0x21239e['_indexForm' + 'at'] = _0x1f405c['IndexForma' + 't']['UInt16'];
                _0x21239e['_vertexBuf' + 'fer'] = _0x5da095, _0x21239e['_vertexCou' + 'nt'] += _0x2f064d, _0x4b5a5f += _0x332bb0['length'] * 0x4;
            }
            var _0x58fc7a = _0x3576af + _0x18bfda['getUint32'](), _0x166742 = _0x18bfda['getUint32'](), _0x5c5cbc;
            if (_0x21239e['indexForma' + 't'] == _0x1f405c['IndexForma' + 't']['UInt32'])
                _0x5c5cbc = new Uint32Array(_0x245bcf['slice'](_0x58fc7a, _0x58fc7a + _0x166742));
            else
                _0x5c5cbc = new Uint16Array(_0x245bcf['slice'](_0x58fc7a, _0x58fc7a + _0x166742));
            var _0x1954d = new _0x197184(_0x21239e['indexForma' + 't'], _0x5c5cbc['length'], _0x330aef['STATIC_DRA' + 'W'], !![]);
            _0x1954d['setData'](_0x5c5cbc), _0x21239e['_indexBuff' + 'er'] = _0x1954d, _0x21239e['_setBuffer'](_0x21239e['_vertexBuf' + 'fer'], _0x1954d), _0x4b5a5f += _0x1954d['indexCount'] * 0x2, _0x21239e['_setCPUMem' + 'ory'](_0x4b5a5f), _0x21239e['_setGPUMem' + 'ory'](_0x4b5a5f);
            if (_0x834fe9['_version'] == 'LAYAMODEL:' + '0501' || _0x834fe9['_version'] == 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501') {
                var _0x54ce0b = _0x21239e['bounds'], _0x46c4f2 = _0x54ce0b['getMin'](), _0x4ce124 = _0x54ce0b['getMax']();
                _0x46c4f2['setValue'](_0x18bfda['getFloat32'](), _0x18bfda['getFloat32'](), _0x18bfda['getFloat32']()), _0x4ce124['setValue'](_0x18bfda['getFloat32'](), _0x18bfda['getFloat32'](), _0x18bfda['getFloat32']()), _0x54ce0b['setMin'](_0x46c4f2), _0x54ce0b['setMax'](_0x4ce124), _0x21239e['bounds'] = _0x54ce0b;
            }
            var _0x8386f = _0x21239e['_boneNames'] = [], _0xfc0c78 = _0x18bfda['getUint16']();
            _0x8386f['length'] = _0xfc0c78;
            for (_0x123f6d = 0x0; _0x123f6d < _0xfc0c78; _0x123f6d++)
                _0x8386f[_0x123f6d] = _0x834fe9['_strings'][_0x18bfda['getUint16']()];
            var _0x50b6ab = _0x18bfda['getUint32'](), _0x20a1f9 = _0x18bfda['getUint32'](), _0x5bea1a = new Float32Array(_0x245bcf['slice'](_0x3576af + _0x50b6ab, _0x3576af + _0x50b6ab + _0x20a1f9)), _0xd5d71c = _0x5bea1a['length'], _0x2bbdf1 = _0x21239e['_inverseBi' + 'ndPosesBuf' + 'fer'] = new ArrayBuffer(_0xd5d71c * 0x4);
            _0x21239e['_inverseBi' + 'ndPoses'] = [];
            if (_0xd5d71c != 0x0)
                _0x21239e['_instanceB' + 'ufferState' + 'Type'] = _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_SIMPL' + 'EANIMATOR'];
            else
                _0x21239e['_instanceB' + 'ufferState' + 'Type'] = _0x3b00dd['MESH_INSTA' + 'NCEBUFFER_' + 'TYPE_NORMA' + 'L'];
            _0x21239e['_setInstan' + 'ceBuffer'](_0x21239e['_instanceB' + 'ufferState' + 'Type']);
            for (_0x123f6d = 0x0; _0x123f6d < _0xd5d71c; _0x123f6d += 0x10) {
                var _0x15425a = new _0x4c2288(_0x5bea1a[_0x123f6d + 0x0], _0x5bea1a[_0x123f6d + 0x1], _0x5bea1a[_0x123f6d + 0x2], _0x5bea1a[_0x123f6d + 0x3], _0x5bea1a[_0x123f6d + 0x4], _0x5bea1a[_0x123f6d + 0x5], _0x5bea1a[_0x123f6d + 0x6], _0x5bea1a[_0x123f6d + 0x7], _0x5bea1a[_0x123f6d + 0x8], _0x5bea1a[_0x123f6d + 0x9], _0x5bea1a[_0x123f6d + 0xa], _0x5bea1a[_0x123f6d + 0xb], _0x5bea1a[_0x123f6d + 0xc], _0x5bea1a[_0x123f6d + 0xd], _0x5bea1a[_0x123f6d + 0xe], _0x5bea1a[_0x123f6d + 0xf], new Float32Array(_0x2bbdf1, _0x123f6d * 0x4, 0x10));
                _0x21239e['_inverseBi' + 'ndPoses'][_0x123f6d / 0x10] = _0x15425a;
            }
            return !![];
        }
        static ['READ_SUBME' + 'SH']() {
            var _0x31128c = _0x834fe9['_readData'], _0x6d0a66 = _0x31128c['__getBuffe' + 'r'](), _0x2ab31e = new _0x327c94(_0x834fe9['_mesh']);
            _0x31128c['getInt16']();
            var _0x48ed3e = _0x31128c['getUint32'](), _0x151b33 = _0x31128c['getUint32'](), _0x6952b6 = _0x834fe9['_mesh']['_indexBuff' + 'er'];
            _0x2ab31e['_indexBuff' + 'er'] = _0x6952b6, _0x2ab31e['_setIndexR' + 'ange'](_0x48ed3e, _0x151b33);
            var _0x205760 = _0x834fe9['_mesh']['_vertexBuf' + 'fer'];
            _0x2ab31e['_vertexBuf' + 'fer'] = _0x205760;
            var _0x25eaea = _0x834fe9['_DATA']['offset'], _0xb05e48 = _0x2ab31e['_subIndexB' + 'ufferStart'], _0x2beab3 = _0x2ab31e['_subIndexB' + 'ufferCount'], _0xafdde2 = _0x2ab31e['_boneIndic' + 'esList'], _0x56aeaa = _0x31128c['getUint16']();
            _0xb05e48['length'] = _0x56aeaa, _0x2beab3['length'] = _0x56aeaa, _0xafdde2['length'] = _0x56aeaa;
            var _0x12289d = _0x834fe9['_mesh']['_skinnedMa' + 'trixCaches'], _0x41ff4a = _0x834fe9['_subMeshes']['length'];
            _0x12289d['length'] = _0x834fe9['_mesh']['_inverseBi' + 'ndPoses']['length'];
            for (var _0x5296aa = 0x0; _0x5296aa < _0x56aeaa; _0x5296aa++) {
                _0xb05e48[_0x5296aa] = _0x31128c['getUint32'](), _0x2beab3[_0x5296aa] = _0x31128c['getUint32']();
                var _0x19bae9 = _0x31128c['getUint32'](), _0x1bfadd = _0x31128c['getUint32'](), _0x50fdc2 = _0xafdde2[_0x5296aa] = new Uint16Array(_0x6d0a66['slice'](_0x25eaea + _0x19bae9, _0x25eaea + _0x19bae9 + _0x1bfadd));
                for (var _0x91d99a = 0x0, _0x5706b2 = _0x50fdc2['length']; _0x91d99a < _0x5706b2; _0x91d99a++) {
                    var _0x3f8a75 = _0x50fdc2[_0x91d99a];
                    _0x12289d[_0x3f8a75] || (_0x12289d[_0x3f8a75] = new _0x55114a(_0x41ff4a, _0x5296aa, _0x91d99a));
                }
            }
            return _0x834fe9['_subMeshes']['push'](_0x2ab31e), !![];
        }
    }
    _0x834fe9['_BLOCK'] = { 'count': 0x0 }, _0x834fe9['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x834fe9['_strings'] = [];
    class _0xdf33ef {
        static ['_parse'](_0xc088cd, _0x1e3ec4 = null, _0x343bec = null) {
            var _0x4953b0 = new _0x3b00dd();
            return _0xdf33ef['read'](_0xc088cd, _0x4953b0, _0x4953b0['_subMeshes']), _0x4953b0;
        }
        static ['read'](_0x1417f8, _0x483b3f, _0x443128) {
            var _0x20e83e = new _0x442335['Byte'](_0x1417f8);
            _0x20e83e['pos'] = 0x0;
            var _0x2cac12 = _0x20e83e['readUTFStr' + 'ing']();
            switch (_0x2cac12) {
            case 'LAYAMODEL:' + '0301':
            case 'LAYAMODEL:' + '0400':
            case 'LAYAMODEL:' + '0401':
                _0x1f3281['parse'](_0x20e83e, _0x2cac12, _0x483b3f, _0x443128);
                break;
            case 'LAYAMODEL:' + '05':
            case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_05':
            case 'LAYAMODEL:' + '0501':
            case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501':
                _0x834fe9['parse'](_0x20e83e, _0x2cac12, _0x483b3f, _0x443128);
                break;
            default:
                throw new Error('MeshReader' + ':\x20unknown\x20' + 'mesh\x20versi' + 'on.');
            }
            _0x483b3f['_setSubMes' + 'hes'](_0x443128);
            if (_0x2cac12 != 'LAYAMODEL:' + '0501' && _0x2cac12 != 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501')
                _0x483b3f['calculateB' + 'ounds']();
        }
    }
    var _0x13d2c5 = '#if\x20define' + 'd(GL_FRAGM' + 'ENT_PRECIS' + 'ION_HIGH)/' + '/\u00a0原来的写法会被我' + '们自己的解析流程处理' + '，而我们的解析是不认' + '内置宏的，导致被删掉' + '，所以改成\u00a0if\u00a0d' + 'efined\u00a0了\x0d\x0a' + '\x09precision' + '\x20highp\x20flo' + 'at;\x0d\x0a#else' + '\x0d\x0a\x09precisi' + 'on\x20mediump' + '\x20float;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'define\x20PI\x20' + '3.14159265' + '359\x0d\x0a#incl' + 'ude\x20\x22Light' + 'ing.glsl\x22;' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_Textur' + 'e;\x0d\x0aunifor' + 'm\x20vec4\x20u_T' + 'extureHDRP' + 'arams;\x0d\x0aun' + 'iform\x20vec4' + '\x20u_TintCol' + 'or;\x0d\x0a\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Texcoord' + ';\x0d\x0avarying' + '\x20vec2\x20v_Im' + 'age180Scal' + 'eAndCutoff' + ';\x0d\x0avarying' + '\x20vec4\x20v_La' + 'yout3DScal' + 'eAndOffset' + ';\x0d\x0a\x0d\x0avec2\x20' + 'ToRadialCo' + 'ords(vec3\x20' + 'coords)\x0d\x0a{' + '\x0d\x0a\x09vec3\x20no' + 'rmalizedCo' + 'ords\x20=\x20nor' + 'malize(coo' + 'rds);\x0d\x0a\x09fl' + 'oat\x20latitu' + 'de\x20=\x20acos(' + 'normalized' + 'Coords.y);' + '\x0d\x0a\x09float\x20l' + 'ongitude\x20=' + '\x20atan(norm' + 'alizedCoor' + 'ds.z,norma' + 'lizedCoord' + 's.x);\x0d\x0a\x09ve' + 'c2\x20sphereC' + 'oords\x20=\x20ve' + 'c2(longitu' + 'de,\x20latitu' + 'de)\x20*\x20vec2' + '(0.5/PI,\x201' + '.0/PI);\x0d\x0a\x09' + 'return\x20vec' + '2(0.5,1.0)' + '\x20-\x20sphereC' + 'oords;\x0d\x0a}\x0d' + '\x0a\x0d\x0a\x0d\x0avoid\x20' + 'main()\x0d\x0a{\x09' + '\x0d\x0a\x09vec2\x20tc' + '\x20=\x20ToRadia' + 'lCoords(v_' + 'Texcoord);' + '\x0d\x0a\x09if\x20(tc.' + 'x\x20>\x20v_Imag' + 'e180ScaleA' + 'ndCutoff.y' + ')\x0d\x0a\x09\x09gl_Fr' + 'agColor=ve' + 'c4(0,0,0,1' + ');\x0d\x0a\x09tc.x\x20' + '=\x20mod(tc.x' + '*v_Image18' + '0ScaleAndC' + 'utoff.x,\x201' + '.0);\x0d\x0a\x09tc\x20' + '=\x20(tc\x20+\x20v_' + 'Layout3DSc' + 'aleAndOffs' + 'et.xy)\x20*\x20v' + '_Layout3DS' + 'caleAndOff' + 'set.zw;\x0d\x0a\x0d' + '\x0a\x09mediump\x20' + ('vec4\x20tex\x20=' + '\x20texture2D' + '\x20(u_Textur' + 'e,\x20tc);\x0d\x0a\x09' + 'mediump\x20ve' + 'c3\x20c\x20=\x20dec' + 'odeHDR\x20(te' + 'x,\x20u_Textu' + 'reHDRParam' + 's.x);\x0d\x0a\x09c\x20' + '=\x20c\x20*\x20u_Ti' + 'ntColor.rg' + 'b\x20*\x202.0;//' + 'Gamma\x20Spac' + 'e\x20is\x202.0,l' + 'inear\x20spac' + 'e\x20is\x204.594' + '79380\x0d\x0a\x09gl' + '_FragColor' + '=vec4(c,\x201' + '.0);\x0d\x0a}\x0d\x0a\x0d' + '\x0a'), _0x43e94e = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0a#' + 'define\x20PI\x20' + '3.14159265' + '359\x0d\x0a\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Positi' + 'on;\x0d\x0a\x0d\x0auni' + 'form\x20mat4\x20' + 'u_ViewProj' + 'ection;\x0d\x0au' + 'niform\x20flo' + 'at\x20u_Rotat' + 'ion;\x0d\x0a\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Texcoor' + 'd;\x0d\x0avaryin' + 'g\x20vec2\x20v_I' + 'mage180Sca' + 'leAndCutof' + 'f;\x0d\x0avaryin' + 'g\x20vec4\x20v_L' + 'ayout3DSca' + 'leAndOffse' + 't;\x0d\x0a\x0d\x0avec4' + '\x20rotateAro' + 'undYInDegr' + 'ees\x20(vec4\x20' + 'vertex,\x20fl' + 'oat\x20degree' + 's)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20angle\x20' + '=\x20degrees\x20' + '*\x20PI\x20/\x20180' + '.0;\x0d\x0a\x09floa' + 't\x20sina=sin' + '(angle);\x0d\x0a' + '\x09float\x20cos' + 'a=cos(angl' + 'e);\x0d\x0a\x09mat2' + '\x20m\x20=\x20mat2(' + 'cosa,\x20-sin' + 'a,\x20sina,\x20c' + 'osa);\x0d\x0a\x09re' + 'turn\x20vec4(' + 'm*vertex.x' + 'z,\x20vertex.' + 'yw).xzyw;\x0d' + '\x0a}\x0d\x0a\x0d\x0a\x09\x09\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x09vec' + '4\x20position' + '\x20=\x20rotateA' + 'roundYInDe' + 'grees(a_Po' + 'sition,\x20u_' + 'Rotation);' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20u_V' + 'iewProject' + 'ion*positi' + 'on;\x0d\x0a\x0d\x0a\x09v_' + 'Texcoord=v' + 'ec3(-a_Pos' + 'ition.x,-a' + '_Position.' + 'y,a_Positi' + 'on.z);//\x20N' + 'OTE:\x20-a_Po' + 'sition.x\x20c' + 'onvert\x20coo' + 'rds\x20system' + '\x0d\x0a\x0d\x0a\x09//\x20Ca' + 'lculate\x20co' + 'nstant\x20hor' + 'izontal\x20sc' + 'ale\x20and\x20cu' + 'toff\x20for\x201' + '80\x20(vs\x20360' + ')\x20image\x20ty' + 'pe\x0d\x0a\x09v_Ima' + 'ge180Scale' + 'AndCutoff\x20' + '=\x20vec2(1.0' + ',\x201.0);//\x20' + '360\x20degree' + '\x20mode\x0d\x0a\x0d\x0a\x09' + '//\x20Calcula' + 'te\x20constan' + 't\x20scale\x20an' + 'd\x20offset\x20f' + 'or\x203D\x20layo' + 'uts\x0d\x0a\x09v_La' + 'yout3DScal' + 'eAndOffset' + '\x20=\x20vec4(0,' + '0,1,1);\x0d\x0a}' + '\x0d\x0a';
    class _0x10abae extends _0x2b6b33 {
        constructor() {
            super(), this['_exposure'] = 0x1, this['_textureDe' + 'codeFormat'] = _0x442335['TextureDec' + 'odeFormat']['Normal'], this['_textureHD' + 'RParams'] = new _0x18425e(0x1, 0x0, 0x0, 0x1), this['setShaderN' + 'ame']('SkyPanoram' + 'ic');
            var _0x57ed7d = this['_shaderVal' + 'ues'];
            _0x57ed7d['setVector'](_0x10abae['TINTCOLOR'], new _0x18425e(0.5, 0.5, 0.5, 0.5)), _0x57ed7d['setNumber'](_0x10abae['ROTATION'], 0x0), _0x57ed7d['setVector'](_0x10abae['TEXTURE_HD' + 'R_PARAMS'], this['_textureHD' + 'RParams']);
        }
        static ['__init__']() {
            var _0x34684b = { 'a_Position': _0x2a7b2f['MESH_POSIT' + 'ION0'] }, _0x4473fd = {
                    'u_TintColor': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_TextureHDRParams': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_Rotation': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_Texture': _0x18824e['PERIOD_MAT' + 'ERIAL'],
                    'u_ViewProjection': _0x18824e['PERIOD_CAM' + 'ERA']
                }, _0x1758bc = _0x18824e['add']('SkyPanoram' + 'ic'), _0x7bee94 = new _0x4c4f1d(_0x34684b, _0x4473fd);
            _0x1758bc['addSubShad' + 'er'](_0x7bee94), _0x7bee94['addShaderP' + 'ass'](_0x43e94e, _0x13d2c5);
        }
        get ['tintColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x10abae['TINTCOLOR']);
        }
        set ['tintColor'](_0x5af76b) {
            this['_shaderVal' + 'ues']['setVector'](_0x10abae['TINTCOLOR'], _0x5af76b);
        }
        get ['exposure']() {
            return this['_exposure'];
        }
        set ['exposure'](_0x2e89ed) {
            if (this['_exposure'] !== _0x2e89ed) {
                this['_exposure'] = _0x2e89ed;
                if (this['_textureDe' + 'codeFormat'] == _0x442335['TextureDec' + 'odeFormat']['RGBM'])
                    this['_textureHD' + 'RParams']['x'] = _0x2e89ed * _0x442335['BaseTextur' + 'e']['_rgbmRange'];
                else
                    this['_textureHD' + 'RParams']['x'] = _0x2e89ed;
            }
        }
        get ['rotation']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x10abae['ROTATION']);
        }
        set ['rotation'](_0x545762) {
            this['_shaderVal' + 'ues']['setNumber'](_0x10abae['ROTATION'], _0x545762);
        }
        get ['panoramicT' + 'exture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x10abae['TEXTURE']);
        }
        set ['panoramicT' + 'exture'](_0xfbde09) {
            this['_shaderVal' + 'ues']['setTexture'](_0x10abae['TEXTURE'], _0xfbde09);
        }
        get ['panoramicT' + 'extureDeco' + 'deFormat']() {
            return this['_textureDe' + 'codeFormat'];
        }
        set ['panoramicT' + 'extureDeco' + 'deFormat'](_0x59debd) {
            if (this['_textureDe' + 'codeFormat'] !== _0x59debd) {
                this['_textureDe' + 'codeFormat'] = _0x59debd;
                if (_0x59debd == _0x442335['TextureDec' + 'odeFormat']['RGBM'])
                    this['_textureHD' + 'RParams']['x'] = this['_exposure'] * _0x442335['BaseTextur' + 'e']['_rgbmRange'];
                else
                    this['_textureHD' + 'RParams']['x'] = this['_exposure'];
            }
        }
    }
    _0x10abae['TINTCOLOR'] = _0x18824e['propertyNa' + 'meToID']('u_TintColo' + 'r'), _0x10abae['EXPOSURE'] = _0x18824e['propertyNa' + 'meToID']('u_Exposure'), _0x10abae['ROTATION'] = _0x18824e['propertyNa' + 'meToID']('u_Rotation'), _0x10abae['TEXTURE'] = _0x18824e['propertyNa' + 'meToID']('u_Texture'), _0x10abae['TEXTURE_HD' + 'R_PARAMS'] = _0x18824e['propertyNa' + 'meToID']('u_TextureH' + 'DRParams');
    class _0x4938c5 extends _0x442335['Component'] {
        constructor(_0x17e50b) {
            super(), this['_anchor'] = new _0x352206(), this['_connectAn' + 'chor'] = new _0x352206(), this['_feedbackE' + 'nabled'] = ![], this['_getJointF' + 'eedBack'] = ![], this['_currentFo' + 'rce'] = new _0x352206(), this['_currentTo' + 'rque'] = new _0x352206(), this['_constrain' + 'tType'] = _0x17e50b;
            var _0x349907 = _0x3c230b['_bullet'];
            this['_btframATr' + 'ans'] = _0x349907['btTransfor' + 'm_create'](), this['_btframBTr' + 'ans'] = _0x349907['btTransfor' + 'm_create'](), _0x349907['btTransfor' + 'm_setIdent' + 'ity'](this['_btframATr' + 'ans']), _0x349907['btTransfor' + 'm_setIdent' + 'ity'](this['_btframBTr' + 'ans']), this['_btframAPo' + 's'] = _0x349907['btVector3_' + 'create'](0x0, 0x0, 0x0), this['_btframBPo' + 's'] = _0x349907['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x349907['btTransfor' + 'm_setOrigi' + 'n'](this['_btframATr' + 'ans'], this['_btframAPo' + 's']), _0x349907['btTransfor' + 'm_setOrigi' + 'n'](this['_btframBTr' + 'ans'], this['_btframBPo' + 's']), this['_breakForc' + 'e'] = -0x1, this['_breakTorq' + 'ue'] = -0x1;
        }
        get ['enabled']() {
            return super['enabled'];
        }
        set ['enabled'](_0xf56436) {
            super['enabled'] = _0xf56436;
        }
        get ['appliedImp' + 'ulse']() {
            return !this['_feedbackE' + 'nabled'] && (this['_btConstra' + 'int']['EnableFeed' + 'back'](!![]), this['_feedbackE' + 'nabled'] = !![]), this['_btConstra' + 'int']['AppliedImp' + 'ulse'];
        }
        set ['connectedB' + 'ody'](_0x39107b) {
            this['_connected' + 'Body'] = _0x39107b, _0x39107b && (_0x39107b['constaintR' + 'igidbodyB'] = this);
        }
        get ['connectedB' + 'ody']() {
            return this['_connected' + 'Body'];
        }
        get ['ownBody']() {
            return this['_ownBody'];
        }
        set ['ownBody'](_0x5ac52f) {
            this['_ownBody'] = _0x5ac52f, _0x5ac52f['constaintR' + 'igidbodyA'] = this;
        }
        get ['currentFor' + 'ce']() {
            if (!this['_getJointF' + 'eedBack'])
                this['_getFeedBa' + 'ckInfo']();
            return this['_currentFo' + 'rce'];
        }
        get ['currentTor' + 'que']() {
            if (!this['_getJointF' + 'eedBack'])
                this['_getFeedBa' + 'ckInfo']();
            return this['_currentTo' + 'rque'];
        }
        get ['breakForce']() {
            return this['_breakForc' + 'e'];
        }
        set ['breakForce'](_0x581b46) {
            this['_breakForc' + 'e'] = _0x581b46;
        }
        get ['breakTorqu' + 'e']() {
            return this['_breakTorq' + 'ue'];
        }
        set ['breakTorqu' + 'e'](_0x1347e9) {
            this['_breakTorq' + 'ue'] = _0x1347e9;
        }
        set ['anchor'](_0xbe7023) {
            _0xbe7023['cloneTo'](this['_anchor']), this['setFrames']();
        }
        get ['anchor']() {
            return this['_anchor'];
        }
        set ['connectAnc' + 'hor'](_0x55cff6) {
            _0x55cff6['cloneTo'](this['_connectAn' + 'chor']), this['setFrames']();
        }
        get ['connectAnc' + 'hor']() {
            return this['_connectAn' + 'chor'];
        }
        ['setOverrid' + 'eNumSolver' + 'Iterations'](_0x389860) {
            var _0x4d8d54 = _0x3c230b['_bullet'];
            _0x4d8d54['btTypedCon' + 'straint_se' + 'tOverrideN' + 'umSolverIt' + 'erations'](this['_btConstra' + 'int'], _0x389860);
        }
        ['setConstra' + 'intEnabled'](_0x589317) {
            var _0x2b5b54 = _0x3c230b['_bullet'];
            _0x2b5b54['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], _0x589317);
        }
        ['_onEnable']() {
            super['_onEnable'](), this['enabled'] = !![];
        }
        ['_onDisable']() {
            super['_onDisable'](), this['enabled'] = ![];
        }
        ['setFrames']() {
            var _0x3428f7 = _0x3c230b['_bullet'];
            _0x3428f7['btVector3_' + 'setValue'](this['_btframAPo' + 's'], -this['_anchor']['x'], this['anchor']['y'], this['anchor']['z']), _0x3428f7['btVector3_' + 'setValue'](this['_btframBPo' + 's'], -this['_connectAn' + 'chor']['x'], this['_connectAn' + 'chor']['y'], this['_connectAn' + 'chor']['z']), _0x3428f7['btTransfor' + 'm_setOrigi' + 'n'](this['_btframATr' + 'ans'], this['_btframAPo' + 's']), _0x3428f7['btTransfor' + 'm_setOrigi' + 'n'](this['_btframBTr' + 'ans'], this['_btframBPo' + 's']);
        }
        ['_addToSimu' + 'lation']() {
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
        }
        ['_createCon' + 'straint']() {
        }
        ['setConnect' + 'RigidBody'](_0x5e0a0c, _0x3489b7) {
            var _0xf4ff20 = _0x5e0a0c && !!(_0x5e0a0c['_simulatio' + 'n'] && _0x5e0a0c['_enabled'] && _0x5e0a0c['colliderSh' + 'ape']), _0x3eb620 = _0x3489b7 && !!(_0x3489b7['_simulatio' + 'n'] && _0x3489b7['_enabled'] && _0x3489b7['colliderSh' + 'ape']);
            if (!(_0xf4ff20 && _0x3eb620))
                throw 'ownerRigid' + '\x20or\x20connec' + 'tRigidBody' + '\x20is\x20not\x20in' + '\x20Simulatio' + 'n';
            if (_0x5e0a0c != this['_ownBody'] || _0x3489b7 != this['_connected' + 'Body']) {
                var _0x516ba8 = !!(this['enabled'] && this['_simulatio' + 'n']);
                _0x516ba8 && this['_removeFro' + 'mSimulatio' + 'n'](), this['_ownBody'] = _0x5e0a0c, this['_connected' + 'Body'] = _0x3489b7, this['_ownBody']['constaintR' + 'igidbodyA'] = this, this['_connected' + 'Body']['constaintR' + 'igidbodyB'] = this, this['_createCon' + 'straint']();
            }
        }
        ['getcurrent' + 'Force'](_0x30340f) {
            if (!this['_btJointFe' + 'edBackObj'])
                throw 'this\x20Const' + 'raint\x20is\x20n' + 'ot\x20simulat' + 'ion';
            var _0x4a5ce4 = _0x3c230b['_bullet'], _0x371b8d = _0x4a5ce4['btJointFee' + 'dback_getA' + 'ppliedForc' + 'eBodyA'](this['_btJointFe' + 'edBackObj']);
            _0x30340f['setValue'](_0x4a5ce4['btVector3_' + 'x'](_0x371b8d), _0x4a5ce4['btVector3_' + 'y'](_0x371b8d), _0x4a5ce4['btVector3_' + 'z'](_0x371b8d));
            return;
        }
        ['getcurrent' + 'Torque'](_0x580807) {
            if (!this['_btJointFe' + 'edBackObj'])
                throw 'this\x20Const' + 'raint\x20is\x20n' + 'ot\x20simulat' + 'ion';
            var _0x237b33 = _0x3c230b['_bullet'], _0x3dfa5b = _0x237b33['btJointFee' + 'dback_getA' + 'ppliedTorq' + 'ueBodyA'](this['_btJointFe' + 'edBackObj']);
            _0x580807['setValue'](_0x237b33['btVector3_' + 'x'](_0x3dfa5b), _0x237b33['btVector3_' + 'y'](_0x3dfa5b), _0x237b33['btVector3_' + 'z'](_0x3dfa5b));
            return;
        }
        ['_onDestroy']() {
            var _0x1ccf35 = _0x3c230b['_bullet'];
            this['_simulatio' + 'n'] && this['_removeFro' + 'mSimulatio' + 'n'](), this['_btConstra' + 'int'] && this['_btJointFe' + 'edBackObj'] && this['_simulatio' + 'n'] && (_0x1ccf35['btTypedCon' + 'straint_de' + 'stroy'](this['_btConstra' + 'int']), _0x1ccf35['btJointFee' + 'dback_dest' + 'roy'](this['_btJointFe' + 'edBackObj']), this['_btJointFe' + 'edBackObj'] = null, this['_btConstra' + 'int'] = null), super['_onDisable']();
        }
        ['_isBreakCo' + 'nstrained']() {
            this['_getJointF' + 'eedBack'] = ![];
            if (this['breakForce'] == -0x1 && this['breakTorqu' + 'e'] == -0x1)
                return ![];
            this['_getFeedBa' + 'ckInfo']();
            var _0x37f65a = this['_breakForc' + 'e'] != -0x1 && _0x352206['scalarLeng' + 'th'](this['_currentFo' + 'rce']) > this['_breakForc' + 'e'], _0x2327fb = this['_breakTorq' + 'ue'] != -0x1 && _0x352206['scalarLeng' + 'th'](this['_currentTo' + 'rque']) > this['_breakTorq' + 'ue'];
            if (_0x37f65a || _0x2327fb)
                return this['_breakCons' + 'trained'](), !![];
            return ![];
        }
        ['_parse'](_0x429be4) {
            this['_anchor']['fromArray'](_0x429be4['anchor']), this['_connectAn' + 'chor']['fromArray'](_0x429be4['connectAnc' + 'hor']), this['setFrames']();
        }
        ['_getFeedBa' + 'ckInfo']() {
            var _0x1962cf = _0x3c230b['_bullet'], _0x459fae = _0x1962cf['btJointFee' + 'dback_getA' + 'ppliedForc' + 'eBodyA'](this['_btJointFe' + 'edBackObj']), _0x445ad8 = _0x1962cf['btJointFee' + 'dback_getA' + 'ppliedTorq' + 'ueBodyA'](this['_btJointFe' + 'edBackObj']);
            this['_currentTo' + 'rque']['setValue'](_0x1962cf['btVector3_' + 'x'](_0x445ad8), _0x1962cf['btVector3_' + 'y'](_0x445ad8), _0x1962cf['btVector3_' + 'z'](_0x445ad8)), this['_currentFo' + 'rce']['setValue'](_0x1962cf['btVector3_' + 'x'](_0x459fae), _0x1962cf['btVector3_' + 'y'](_0x459fae), _0x1962cf['btVector3_' + 'z'](_0x459fae)), this['_getJointF' + 'eedBack'] = !![];
        }
        ['_breakCons' + 'trained']() {
            this['ownBody']['constaintR' + 'igidbodyA'] = null, this['connectedB' + 'ody'] && (this['connectedB' + 'ody']['constaintR' + 'igidbodyB'] = null), this['destroy']();
        }
    }
    _0x4938c5['CONSTRAINT' + '_POINT2POI' + 'NT_CONSTRA' + 'INT_TYPE'] = 0x3, _0x4938c5['CONSTRAINT' + '_HINGE_CON' + 'STRAINT_TY' + 'PE'] = 0x4, _0x4938c5['CONSTRAINT' + '_CONETWIST' + '_CONSTRAIN' + 'T_TYPE'] = 0x5, _0x4938c5['CONSTRAINT' + '_D6_CONSTR' + 'AINT_TYPE'] = 0x6, _0x4938c5['CONSTRAINT' + '_SLIDER_CO' + 'NSTRAINT_T' + 'YPE'] = 0x7, _0x4938c5['CONSTRAINT' + '_CONTACT_C' + 'ONSTRAINT_' + 'TYPE'] = 0x8, _0x4938c5['CONSTRAINT' + '_D6_SPRING' + '_CONSTRAIN' + 'T_TYPE'] = 0x9, _0x4938c5['CONSTRAINT' + '_GEAR_CONS' + 'TRAINT_TYP' + 'E'] = 0xa, _0x4938c5['CONSTRAINT' + '_FIXED_CON' + 'STRAINT_TY' + 'PE'] = 0xb, _0x4938c5['CONSTRAINT' + '_MAX_CONST' + 'RAINT_TYPE'] = 0xc, _0x4938c5['CONSTRAINT' + '_CONSTRAIN' + 'T_ERP'] = 0x1, _0x4938c5['CONSTRAINT' + '_CONSTRAIN' + 'T_STOP_ERP'] = 0x2, _0x4938c5['CONSTRAINT' + '_CONSTRAIN' + 'T_CFM'] = 0x3, _0x4938c5['CONSTRAINT' + '_CONSTRAIN' + 'T_STOP_CFM'] = 0x4, _0x4938c5['tempForceV' + '3'] = new _0x352206();
    class _0x1f580d extends _0x4938c5 {
        constructor() {
            super(_0x4938c5['CONSTRAINT' + '_FIXED_CON' + 'STRAINT_TY' + 'PE']), this['breakForce'] = -0x1, this['breakTorqu' + 'e'] = -0x1;
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n'] && this['_simulatio' + 'n']['addConstra' + 'int'](this, this['enabled']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['removeCons' + 'traint'](this), this['_simulatio' + 'n'] = null;
        }
        ['_createCon' + 'straint']() {
            if (this['ownBody'] && this['ownBody']['_simulatio' + 'n'] && this['connectedB' + 'ody'] && this['connectedB' + 'ody']['_simulatio' + 'n']) {
                var _0x3201a7 = _0x3c230b['_bullet'];
                this['_btConstra' + 'int'] = _0x3201a7['btFixedCon' + 'straint_cr' + 'eate'](this['ownBody']['btCollider' + 'Object'], this['_btframATr' + 'ans'], this['connectedB' + 'ody']['btCollider' + 'Object'], this['_btframBTr' + 'ans']), this['_btJointFe' + 'edBackObj'] = _0x3201a7['btJointFee' + 'dback_crea' + 'te'](this['_btConstra' + 'int']), _0x3201a7['btTypedCon' + 'straint_se' + 'tJointFeed' + 'back'](this['_btConstra' + 'int'], this['_btJointFe' + 'edBackObj']), this['_simulatio' + 'n'] = this['owner']['_scene']['physicsSim' + 'ulation'], this['_addToSimu' + 'lation'](), _0x3c230b['_bullet']['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], !![]);
            }
        }
        ['_onAdded']() {
            super['_onAdded']();
        }
        ['_onEnable']() {
            if (!this['_btConstra' + 'int'])
                return;
            super['_onEnable']();
            if (this['_btConstra' + 'int'])
                _0x3c230b['_bullet']['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], !![]);
        }
        ['_onDisable']() {
            super['_onDisable']();
            if (!this['connectedB' + 'ody'])
                this['_removeFro' + 'mSimulatio' + 'n']();
            if (this['_btConstra' + 'int'])
                _0x3c230b['_bullet']['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], ![]);
        }
        ['_onDestroy']() {
            super['_onDestroy']();
        }
        ['_parse'](_0x2954d6, _0x48df52 = null) {
            super['_parse'](_0x2954d6), _0x2954d6['rigidbodyI' + 'D'] != -0x1 && _0x2954d6['connectRig' + 'idbodyID'] != -0x1 && (_0x48df52['component']['push'](this), _0x48df52['data']['push'](_0x2954d6)), _0x2954d6['breakForce'] != undefined && (this['breakForce'] = _0x2954d6['breakForce']), _0x2954d6['breakTorqu' + 'e'] != undefined && (this['breakTorqu' + 'e'] = _0x2954d6['breakTorqu' + 'e']);
        }
        ['_parseInte' + 'ractive'](_0x1582ec = null, _0x28ebdf = null) {
            var _0xd77340 = _0x28ebdf[_0x1582ec['rigidbodyI' + 'D']], _0x3fb162 = _0xd77340['getCompone' + 'nt'](_0x392471), _0x67f5f6 = _0x28ebdf[_0x1582ec['connectRig' + 'idbodyID']], _0x18125d = _0x67f5f6['getCompone' + 'nt'](_0x392471);
            this['ownBody'] = _0x3fb162, this['connectedB' + 'ody'] = _0x18125d;
        }
        ['_cloneTo'](_0x51a4c0) {
        }
    }
    class _0x4c05b3 extends _0x4938c5 {
        constructor() {
            super(_0x4938c5['CONSTRAINT' + '_D6_SPRING' + '_CONSTRAIN' + 'T_TYPE']), this['_axis'] = new _0x352206(), this['_secondary' + 'Axis'] = new _0x352206(), this['_minLinear' + 'Limit'] = new _0x352206(), this['_maxLinear' + 'Limit'] = new _0x352206(), this['_minAngula' + 'rLimit'] = new _0x352206(), this['_maxAngula' + 'rLimit'] = new _0x352206(), this['_linearLim' + 'itSpring'] = new _0x352206(), this['_angularLi' + 'mitSpring'] = new _0x352206(), this['_linearBou' + 'nce'] = new _0x352206(), this['_angularBo' + 'unce'] = new _0x352206(), this['_linearDam' + 'p'] = new _0x352206(), this['_angularDa' + 'mp'] = new _0x352206(), this['_xMotion'] = 0x0, this['_yMotion'] = 0x0, this['_zMotion'] = 0x0, this['_angularXM' + 'otion'] = 0x0, this['_angularYM' + 'otion'] = 0x0, this['_angularZM' + 'otion'] = 0x0;
            var _0x40fd44 = _0x3c230b['_bullet'];
            this['_btAxis'] = _0x40fd44['btVector3_' + 'create'](-0x1, 0x0, 0x0), this['_btSeconda' + 'ryAxis'] = _0x40fd44['btVector3_' + 'create'](0x0, 0x1, 0x0);
        }
        get ['axis']() {
            return this['_axis'];
        }
        get ['secondaryA' + 'xis']() {
            return this['_secondary' + 'Axis'];
        }
        set ['maxAngular' + 'Limit'](_0x387202) {
            _0x387202['cloneTo'](this['_maxAngula' + 'rLimit']);
        }
        set ['minAngular' + 'Limit'](_0x2e8219) {
            _0x2e8219['cloneTo'](this['_minAngula' + 'rLimit']);
        }
        get ['maxAngular' + 'Limit']() {
            return this['_maxAngula' + 'rLimit'];
        }
        get ['minAngular' + 'Limit']() {
            return this['_minAngula' + 'rLimit'];
        }
        set ['maxLinearL' + 'imit'](_0x2ad748) {
            _0x2ad748['cloneTo'](this['_maxLinear' + 'Limit']);
        }
        set ['minLinearL' + 'imit'](_0x2c3c2a) {
            _0x2c3c2a['cloneTo'](this['_minLinear' + 'Limit']);
        }
        get ['maxLinearL' + 'imit']() {
            return this['_maxLinear' + 'Limit'];
        }
        get ['minLinearL' + 'imit']() {
            return this['_minLinear' + 'Limit'];
        }
        set ['XMotion'](_0x1c1d11) {
            this['_xMotion'] != _0x1c1d11 && (this['_xMotion'] = _0x1c1d11, this['setLimit'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], _0x1c1d11, -this['_maxLinear' + 'Limit']['x'], -this['_minLinear' + 'Limit']['x']));
        }
        get ['XMotion']() {
            return this['_xMotion'];
        }
        set ['YMotion'](_0x32af03) {
            this['_yMotion'] != _0x32af03 && (this['_yMotion'] = _0x32af03, this['setLimit'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], _0x32af03, this['_minLinear' + 'Limit']['y'], this['_maxLinear' + 'Limit']['y']));
        }
        get ['YMotion']() {
            return this['_yMotion'];
        }
        set ['ZMotion'](_0x186fc5) {
            this['_zMotion'] != _0x186fc5 && (this['_zMotion'] = _0x186fc5, this['setLimit'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], _0x186fc5, this['_minLinear' + 'Limit']['z'], this['_maxLinear' + 'Limit']['z']));
        }
        get ['ZMotion']() {
            return this['_zMotion'];
        }
        set ['angularXMo' + 'tion'](_0xd3f581) {
            this['_angularXM' + 'otion'] != _0xd3f581 && (this['_angularXM' + 'otion'] = _0xd3f581, this['setLimit'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], _0xd3f581, -this['_maxAngula' + 'rLimit']['x'], -this['_minAngula' + 'rLimit']['x']));
        }
        get ['angularXMo' + 'tion']() {
            return this['_angularXM' + 'otion'];
        }
        set ['angularYMo' + 'tion'](_0x4dac92) {
            this['_angularYM' + 'otion'] != _0x4dac92 && (this['_angularYM' + 'otion'] = _0x4dac92, this['setLimit'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], _0x4dac92, this['_minAngula' + 'rLimit']['y'], this['_maxAngula' + 'rLimit']['y']));
        }
        get ['angularYMo' + 'tion']() {
            return this['_angularYM' + 'otion'];
        }
        set ['angularZMo' + 'tion'](_0x41993c) {
            this['_angularZM' + 'otion'] != _0x41993c && (this['_angularZM' + 'otion'] = _0x41993c, this['setLimit'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], _0x41993c, this['_minAngula' + 'rLimit']['z'], this['_maxAngula' + 'rLimit']['z']));
        }
        get ['angularZMo' + 'tion']() {
            return this['_angularZM' + 'otion'];
        }
        set ['linearLimi' + 'tSpring'](_0x3e816d) {
            !_0x352206['equals'](this['_linearLim' + 'itSpring'], _0x3e816d) && (_0x3e816d['cloneTo'](this['_linearLim' + 'itSpring']), this['setSpring'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], _0x3e816d['x']), this['setSpring'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], _0x3e816d['y']), this['setSpring'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], _0x3e816d['z']));
        }
        get ['linearLimi' + 'tSpring']() {
            return this['_linearLim' + 'itSpring'];
        }
        set ['angularLim' + 'itSpring'](_0x3d4ec2) {
            !_0x352206['equals'](this['_angularLi' + 'mitSpring'], _0x3d4ec2) && (_0x3d4ec2['cloneTo'](this['_angularLi' + 'mitSpring']), this['setSpring'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], _0x3d4ec2['x']), this['setSpring'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], _0x3d4ec2['y']), this['setSpring'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], _0x3d4ec2['z']));
        }
        get ['angularLim' + 'itSpring']() {
            return this['_angularLi' + 'mitSpring'];
        }
        set ['linearBoun' + 'ce'](_0x4b0185) {
            !_0x352206['equals'](this['_linearBou' + 'nce'], _0x4b0185) && (_0x4b0185['cloneTo'](this['_linearBou' + 'nce']), this['setBounce'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], _0x4b0185['x']), this['setBounce'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], _0x4b0185['y']), this['setBounce'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], _0x4b0185['z']));
        }
        get ['linearBoun' + 'ce']() {
            return this['_linearBou' + 'nce'];
        }
        set ['angularBou' + 'nce'](_0x38320e) {
            !_0x352206['equals'](this['_angularBo' + 'unce'], _0x38320e) && (_0x38320e['cloneTo'](this['_angularBo' + 'unce']), this['setBounce'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], _0x38320e['x']), this['setBounce'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], _0x38320e['y']), this['setBounce'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], _0x38320e['z']));
        }
        get ['angularBou' + 'nce']() {
            return this['_angularBo' + 'unce'];
        }
        set ['linearDamp'](_0x4800d6) {
            !_0x352206['equals'](this['_linearDam' + 'p'], _0x4800d6) && (_0x4800d6['cloneTo'](this['_linearDam' + 'p']), this['setDamping'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], _0x4800d6['x']), this['setDamping'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], _0x4800d6['y']), this['setDamping'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], _0x4800d6['z']));
        }
        get ['linearDamp']() {
            return this['_linearDam' + 'p'];
        }
        set ['angularDam' + 'p'](_0x33f393) {
            !_0x352206['equals'](this['_angularDa' + 'mp'], _0x33f393) && (_0x33f393['cloneTo'](this['_angularDa' + 'mp']), this['setDamping'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], _0x33f393['x']), this['setDamping'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], _0x33f393['y']), this['setDamping'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], _0x33f393['z']));
        }
        get ['angularDam' + 'p']() {
            return this['_angularDa' + 'mp'];
        }
        set ['anchor'](_0x353415) {
            _0x353415['cloneTo'](this['_anchor']), this['setFrames']();
        }
        get ['anchor']() {
            return this['_anchor'];
        }
        set ['connectAnc' + 'hor'](_0x574665) {
            _0x574665['cloneTo'](this['_connectAn' + 'chor']), this['setFrames']();
        }
        get ['connectAnc' + 'hor']() {
            return this['_connectAn' + 'chor'];
        }
        ['setAxis'](_0x78e451, _0x35b742) {
            if (!this['_btConstra' + 'int'])
                return;
            var _0x30576a = _0x3c230b['_bullet'];
            this['_axis']['setValue'](_0x78e451['x'], _0x78e451['y'], _0x78e451['y']), this['_secondary' + 'Axis']['setValue'](_0x35b742['x'], _0x35b742['y'], _0x35b742['z']), this['_btAxis'] = _0x30576a['btVector3_' + 'setValue'](-_0x78e451['x'], _0x78e451['y'], _0x78e451['z']), this['_btSeconda' + 'ryAxis'] = _0x30576a['btVector3_' + 'setValue'](-_0x35b742['x'], _0x35b742['y'], _0x35b742['z']), _0x30576a['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setAxis'](this['_btConstra' + 'int'], this['_btAxis'], this['_btSeconda' + 'ryAxis']);
        }
        ['setLimit'](_0x187162, _0x4745c1, _0x416c12, _0x525168) {
            if (!this['_btConstra' + 'int'])
                return;
            var _0x23852 = _0x3c230b['_bullet'];
            switch (_0x4745c1) {
            case _0x4c05b3['CONFIG_MOT' + 'ION_TYPE_L' + 'OCKED']:
                _0x23852['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setLimit'](this['_btConstra' + 'int'], _0x187162, 0x0, 0x0);
                break;
            case _0x4c05b3['CONFIG_MOT' + 'ION_TYPE_L' + 'IMITED']:
                if (_0x416c12 < _0x525168)
                    _0x23852['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setLimit'](this['_btConstra' + 'int'], _0x187162, _0x416c12, _0x525168);
                break;
            case _0x4c05b3['CONFIG_MOT' + 'ION_TYPE_F' + 'REE']:
                _0x23852['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setLimit'](this['_btConstra' + 'int'], _0x187162, 0x1, 0x0);
                break;
            default:
                throw 'No\x20Type\x20of' + '\x20Axis\x20Moti' + 'on';
            }
        }
        ['setSpring'](_0x1a718d, _0x1f8e77, _0x4a87a0 = !![]) {
            if (!this['_btConstra' + 'int'])
                return;
            var _0x47dfc1 = _0x3c230b['_bullet'], _0x4bad89 = _0x1f8e77 > 0x0;
            _0x47dfc1['btGeneric6' + 'DofSpring2' + 'Constraint' + '_enableSpr' + 'ing'](this['_btConstra' + 'int'], _0x1a718d, _0x4bad89);
            if (_0x4bad89)
                _0x47dfc1['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setStiffn' + 'ess'](this['_btConstra' + 'int'], _0x1a718d, _0x1f8e77, _0x4a87a0);
        }
        ['setBounce'](_0x1e4d65, _0x5402f5) {
            if (!this['_btConstra' + 'int'])
                return;
            var _0x56ec1c = _0x3c230b['_bullet'];
            _0x5402f5 = _0x5402f5 <= 0x0 ? 0x0 : _0x5402f5, _0x56ec1c['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setBounce'](this['_btConstra' + 'int'], _0x1e4d65, _0x5402f5);
        }
        ['setDamping'](_0x92026a, _0x3def71, _0x157de7 = !![]) {
            if (!this['_btConstra' + 'int'])
                return;
            var _0xa11601 = _0x3c230b['_bullet'];
            _0x3def71 = _0x3def71 <= 0x0 ? 0x0 : _0x3def71, _0xa11601['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setDampin' + 'g'](this['_btConstra' + 'int'], _0x92026a, _0x3def71, _0x157de7);
        }
        ['setEquilib' + 'riumPoint'](_0x3310c7, _0x47f336) {
            var _0x5c8d77 = _0x3c230b['_bullet'];
            _0x5c8d77['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setEquili' + 'briumPoint'](this['_btConstra' + 'int'], _0x3310c7, _0x47f336);
        }
        ['enableMoto' + 'r'](_0x5edb49, _0x7a8f34) {
            var _0x1ed130 = _0x3c230b['_bullet'];
            _0x1ed130['btGeneric6' + 'DofSpring2' + 'Constraint' + '_enableMot' + 'or'](this['_btConstra' + 'int'], _0x5edb49, _0x7a8f34);
        }
        ['setServo'](_0x2d5134, _0x17a1af) {
            var _0x1f6655 = _0x3c230b['_bullet'];
            _0x1f6655['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setServo'](this['_btConstra' + 'int'], _0x2d5134, _0x17a1af);
        }
        ['setTargetV' + 'elocity'](_0x379a58, _0x4ce6c1) {
            var _0x367d23 = _0x3c230b['_bullet'];
            _0x367d23['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setTarget' + 'Velocity'](this['_btConstra' + 'int'], _0x379a58, _0x4ce6c1);
        }
        ['setTargetP' + 'osition'](_0x4be274, _0x17377e) {
            var _0x5829c4 = _0x3c230b['_bullet'];
            _0x5829c4['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setServoT' + 'arget'](this['_btConstra' + 'int'], _0x4be274, _0x17377e);
        }
        ['setMaxMoto' + 'rForce'](_0xf2b9d2, _0x538320) {
            var _0x2f3c84 = _0x3c230b['_bullet'];
            _0x2f3c84['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setMaxMot' + 'orForce'](this['_btConstra' + 'int'], _0xf2b9d2, _0x538320);
        }
        ['setParam'](_0x150abf, _0x139a5c, _0x42cfb9) {
            var _0x4be349 = _0x3c230b['_bullet'];
            _0x4be349['btTypedCon' + 'straint_se' + 'tParam'](this['_btConstra' + 'int'], _0x150abf, _0x139a5c, _0x42cfb9);
        }
        ['setFrames']() {
            super['setFrames']();
            var _0x5efd38 = _0x3c230b['_bullet'];
            if (!this['_btConstra' + 'int'])
                return;
            _0x5efd38['btGeneric6' + 'DofSpring2' + 'Constraint' + '_setFrames'](this['_btConstra' + 'int'], this['_btframATr' + 'ans'], this['_btframBTr' + 'ans']);
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n'] && this['_simulatio' + 'n']['addConstra' + 'int'](this, this['enabled']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['removeCons' + 'traint'](this), this['_simulatio' + 'n'] = null;
        }
        ['_createCon' + 'straint']() {
            var _0x24950e = _0x3c230b['_bullet'];
            this['_btConstra' + 'int'] = _0x24950e['btGeneric6' + 'DofSpring2' + 'Constraint' + '_create'](this['ownBody']['btCollider' + 'Object'], this['_btframAPo' + 's'], this['connectedB' + 'ody']['btCollider' + 'Object'], this['_btframBPo' + 's'], _0x4c05b3['RO_XYZ']), this['_btJointFe' + 'edBackObj'] = _0x24950e['btJointFee' + 'dback_crea' + 'te'](this['_btConstra' + 'int']), _0x24950e['btTypedCon' + 'straint_se' + 'tJointFeed' + 'back'](this['_btConstra' + 'int'], this['_btJointFe' + 'edBackObj']), this['_simulatio' + 'n'] = this['owner']['_scene']['physicsSim' + 'ulation'], this['_initAllCo' + 'nstraintIn' + 'fo'](), this['_addToSimu' + 'lation'](), _0x3c230b['_bullet']['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], !![]);
        }
        ['_initAllCo' + 'nstraintIn' + 'fo']() {
            this['setLimit'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], this['_xMotion'], -this['_maxLinear' + 'Limit']['x'], -this['_minLinear' + 'Limit']['x']), this['setLimit'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], this['_yMotion'], this['_minLinear' + 'Limit']['y'], this['_maxLinear' + 'Limit']['y']), this['setLimit'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], this['_zMotion'], this['_minLinear' + 'Limit']['z'], this['_maxLinear' + 'Limit']['z']), this['setLimit'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], this['_angularXM' + 'otion'], -this['_maxAngula' + 'rLimit']['x'], -this['_minAngula' + 'rLimit']['x']), this['setLimit'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], this['_angularYM' + 'otion'], this['_minAngula' + 'rLimit']['y'], this['_maxAngula' + 'rLimit']['y']), this['setLimit'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], this['_angularZM' + 'otion'], this['_minAngula' + 'rLimit']['z'], this['_maxAngula' + 'rLimit']['z']), this['setSpring'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], this['_linearLim' + 'itSpring']['x']), this['setSpring'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], this['_linearLim' + 'itSpring']['y']), this['setSpring'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], this['_linearLim' + 'itSpring']['z']), this['setSpring'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], this['_angularLi' + 'mitSpring']['x']), this['setSpring'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], this['_angularLi' + 'mitSpring']['y']), this['setSpring'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], this['_angularLi' + 'mitSpring']['z']), this['setBounce'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], this['_linearBou' + 'nce']['x']), this['setBounce'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], this['_linearBou' + 'nce']['y']), this['setBounce'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], this['_linearBou' + 'nce']['z']), this['setBounce'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], this['_angularBo' + 'unce']['x']), this['setBounce'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], this['_angularBo' + 'unce']['y']), this['setBounce'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], this['_angularBo' + 'unce']['z']), this['setDamping'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'], this['_linearDam' + 'p']['x']), this['setDamping'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'], this['_linearDam' + 'p']['y']), this['setDamping'](_0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'], this['_linearDam' + 'p']['z']), this['setDamping'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'], this['_angularDa' + 'mp']['x']), this['setDamping'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'], this['_angularDa' + 'mp']['y']), this['setDamping'](_0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'], this['_angularDa' + 'mp']['z']), this['setFrames'](), this['setEquilib' + 'riumPoint'](0x0, 0x0);
        }
        ['_onAdded']() {
            super['_onAdded']();
        }
        ['_onEnable']() {
            if (!this['_btConstra' + 'int'])
                return;
            super['_onEnable']();
            if (this['_btConstra' + 'int'])
                _0x3c230b['_bullet']['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], !![]);
        }
        ['_onDisable']() {
            super['_onDisable']();
            if (!this['connectedB' + 'ody'] && this['_simulatio' + 'n'])
                this['_removeFro' + 'mSimulatio' + 'n']();
            if (this['_btConstra' + 'int'])
                _0x3c230b['_bullet']['btTypedCon' + 'straint_se' + 'tEnabled'](this['_btConstra' + 'int'], ![]);
        }
        ['_parse'](_0x4dde90, _0x4bee06 = null) {
            super['_parse'](_0x4dde90), this['_axis']['fromArray'](_0x4dde90['axis']), this['_secondary' + 'Axis']['fromArray'](_0x4dde90['secondaryA' + 'xis']);
            var _0xea111e = _0x4dde90['linearLimi' + 't'];
            this['_minLinear' + 'Limit']['setValue'](-_0xea111e, -_0xea111e, -_0xea111e), this['_maxLinear' + 'Limit']['setValue'](_0xea111e, _0xea111e, _0xea111e);
            var _0x455b4c = _0x4dde90['linearLimi' + 'tSpring'];
            this['_linearLim' + 'itSpring']['setValue'](_0x455b4c, _0x455b4c, _0x455b4c);
            var _0x3284b6 = _0x4dde90['linearLimi' + 'tDamper'];
            this['_linearDam' + 'p']['setValue'](_0x3284b6, _0x3284b6, _0x3284b6);
            var _0x14c7c2 = _0x4dde90['linearLimi' + 'tBouncines' + 's'];
            this['_linearBou' + 'nce']['setValue'](_0x14c7c2, _0x14c7c2, _0x14c7c2);
            var _0x1116f6 = _0x4dde90['lowAngular' + 'XLimit'], _0x29a520 = _0x4dde90['highAngula' + 'rXLimit'], _0x5d6423 = _0x4dde90['angularYLi' + 'mit'], _0x19aff1 = _0x4dde90['angularZLi' + 'mit'];
            this['_minAngula' + 'rLimit']['setValue'](_0x1116f6, -_0x5d6423, -_0x19aff1), this['_maxAngula' + 'rLimit']['setValue'](_0x29a520, _0x5d6423, _0x19aff1);
            var _0x1c6d96 = _0x4dde90['highAngula' + 'rXLimitBou' + 'nciness'], _0x33d8da = _0x4dde90['angularYLi' + 'mitBouncin' + 'ess'], _0x8c2498 = _0x4dde90['angularZLi' + 'mitBouncin' + 'ess'];
            this['_angularBo' + 'unce']['setValue'](_0x1c6d96, _0x33d8da, _0x8c2498);
            var _0x1c6de5 = _0x4dde90['angularXLi' + 'mitSpring'], _0x2a606f = _0x4dde90['angularYZL' + 'imitSpring'];
            this['_angularLi' + 'mitSpring']['setValue'](_0x1c6de5, _0x2a606f, _0x2a606f);
            var _0x48ec58 = _0x4dde90['angularXLi' + 'mitDamper'], _0x3327fc = _0x4dde90['angularYZL' + 'imitDamper'];
            this['_angularDa' + 'mp']['setValue'](_0x48ec58, _0x3327fc, _0x3327fc), this['XMotion'] = _0x4dde90['xMotion'], this['YMotion'] = _0x4dde90['yMotion'], this['ZMotion'] = _0x4dde90['zMotion'], this['angularXMo' + 'tion'] = _0x4dde90['angularXMo' + 'tion'], this['angularYMo' + 'tion'] = _0x4dde90['angularYMo' + 'tion'], this['angularZMo' + 'tion'] = _0x4dde90['angularZMo' + 'tion'], _0x4dde90['rigidbodyI' + 'D'] != -0x1 && _0x4dde90['connectRig' + 'idbodyID'] != -0x1 && (_0x4bee06['component']['push'](this), _0x4bee06['data']['push'](_0x4dde90)), _0x4dde90['breakForce'] != undefined && (this['breakForce'] = _0x4dde90['breakForce']), _0x4dde90['breakTorqu' + 'e'] != undefined && (this['breakTorqu' + 'e'] = _0x4dde90['breakTorqu' + 'e']);
        }
        ['_parseInte' + 'ractive'](_0x2e3962 = null, _0x193b8b = null) {
            var _0x2c7a9e = _0x193b8b[_0x2e3962['rigidbodyI' + 'D']], _0xc47310 = _0x2c7a9e['getCompone' + 'nt'](_0x392471), _0x1184d0 = _0x193b8b[_0x2e3962['connectRig' + 'idbodyID']], _0x3e5f96 = _0x1184d0['getCompone' + 'nt'](_0x392471);
            this['ownBody'] = _0xc47310, this['connectedB' + 'ody'] = _0x3e5f96;
        }
        ['_onDestroy']() {
            super['_onDestroy']();
        }
        ['_cloneTo'](_0x29e039) {
        }
    }
    _0x4c05b3['CONFIG_MOT' + 'ION_TYPE_L' + 'OCKED'] = 0x0, _0x4c05b3['CONFIG_MOT' + 'ION_TYPE_L' + 'IMITED'] = 0x1, _0x4c05b3['CONFIG_MOT' + 'ION_TYPE_F' + 'REE'] = 0x2, _0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'X'] = 0x0, _0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Y'] = 0x1, _0x4c05b3['MOTION_LIN' + 'EAR_INDEX_' + 'Z'] = 0x2, _0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_X'] = 0x3, _0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Y'] = 0x4, _0x4c05b3['MOTION_ANG' + 'ULAR_INDEX' + '_Z'] = 0x5, _0x4c05b3['RO_XYZ'] = 0x0, _0x4c05b3['RO_XZY'] = 0x1, _0x4c05b3['RO_YXZ'] = 0x2, _0x4c05b3['RO_YZX'] = 0x3, _0x4c05b3['RO_ZXY'] = 0x4, _0x4c05b3['RO_ZYX'] = 0x5;
    class _0x4b16da {
        constructor() {
        }
        static get ['enablePhys' + 'ics']() {
            return _0x3c230b['_enablePhy' + 'sics'];
        }
        static ['_cancelLoa' + 'dByUrl'](_0xe8139c) {
            _0x442335['Laya']['loader']['cancelLoad' + 'ByUrl'](_0xe8139c), _0x4b16da['_innerFirs' + 'tLevelLoad' + 'erManager']['cancelLoad' + 'ByUrl'](_0xe8139c), _0x4b16da['_innerSeco' + 'ndLevelLoa' + 'derManager']['cancelLoad' + 'ByUrl'](_0xe8139c), _0x4b16da['_innerThir' + 'dLevelLoad' + 'erManager']['cancelLoad' + 'ByUrl'](_0xe8139c), _0x4b16da['_innerFour' + 'thLevelLoa' + 'derManager']['cancelLoad' + 'ByUrl'](_0xe8139c);
        }
        static ['_changeWeb' + 'GLSize'](_0x462e6c, _0x29a3ed) {
            _0x442335['WebGL']['onStageRes' + 'ize'](_0x462e6c, _0x29a3ed), _0x514492['clientWidt' + 'h'] = _0x462e6c, _0x514492['clientHeig' + 'ht'] = _0x29a3ed;
        }
        static ['__init__'](_0x319331, _0xe4dc5a, _0x5c49a9) {
            _0x442335['Config']['isAntialia' + 's'] = _0x5c49a9['isAntialia' + 's'], _0x442335['Config']['isAlpha'] = _0x5c49a9['isAlpha'], _0x442335['Config']['premultipl' + 'iedAlpha'] = _0x5c49a9['premultipl' + 'iedAlpha'], _0x442335['Config']['isStencil'] = _0x5c49a9['isStencil'];
            if (!_0x442335['WebGL']['enable']()) {
                alert('Laya3D\x20ini' + 't\x20error,mu' + 'st\x20support' + '\x20webGL!');
                return;
            }
            _0x442335['RunDriver']['changeWebG' + 'LSize'] = _0x4b16da['_changeWeb' + 'GLSize'], _0x442335['Render']['is3DMode'] = !![], _0x442335['Laya']['init'](_0x319331, _0xe4dc5a);
            !_0x442335['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && (_0x442335['LayaGL']['instance'] = _0x442335['WebGLConte' + 'xt']['mainContex' + 't'], _0x442335['LayaGL']['instance']['createComm' + 'andEncoder'] = function (_0x42cc88 = 0x80, _0x3d3e38 = 0x40, _0x57854d = ![]) {
                return new _0x442335['CommandEnc' + 'oder'](this, _0x42cc88, _0x3d3e38, _0x57854d);
            });
            _0x5c49a9['_multiLigh' + 'ting'] = _0x5c49a9['enableMult' + 'iLight'] && _0x442335['SystemUtil' + 's']['supportTex' + 'tureFormat'](_0x442335['TextureFor' + 'mat']['R32G32B32A' + '32']), _0x207eb6['Shader3D'] = _0x18824e, _0x207eb6['Scene3D'] = _0x397862, _0x207eb6['MeshRender' + 'StaticBatc' + 'hManager'] = _0xb90358, _0x207eb6['MeshRender' + 'DynamicBat' + 'chManager'] = _0x5a12d5, _0x207eb6['SubMeshDyn' + 'amicBatch'] = _0x3444e5, _0x207eb6['Laya3D'] = _0x4b16da, _0x207eb6['Matrix4x4'] = _0x4c2288, _0x207eb6['Physics3D'] = _0x3c230b, _0x207eb6['ShadowLigh' + 'tType'] = _0x1f405c['ShadowLigh' + 'tType'], _0x4b16da['enableNati' + 've3D']();
            if (_0x5c49a9['isUseCanno' + 'nPhysicsEn' + 'gine'])
                _0x3c230b['__cannonin' + 'it__']();
            _0x3c230b['__bulletin' + 'it__'](), _0x5cc56b['__init__'](), _0x2a7b2f['__init__'](), _0x9492db['__init__'](), _0xcd1367['__init__'](), _0x4acb3c['__init__'](), _0x51f657['__init__'](), _0x1c1a26['__init__'](), _0x40bf38['__init__'](), _0x2247dd['__init__'](), _0x3444e5['__init__'](), _0x3f15ae['__init__'](), _0x12f0cf['init'](), _0x460fe4['__init__'](), _0x51f75c['__init__'](), _0x1b0e7e['__init__'](), _0x10abae['__init__'](), _0x3b00dd['__init__'](), _0x4b5b46['__init__'](), _0x49f2b6['__init__'](), _0x22d3a2['__init__'](), _0x1208f9['__init__'](), _0xa58a85['__init__'](), _0x2838b1['__init__'](), _0x531ddc['__init__'](), _0x15363b['__init__'](), _0x4835e1['__init__'](), _0x397862['__init__'](), _0xb90358['__init__'](), _0x2b6b33['__initDefi' + 'ne__'](), _0x231956['__initDefi' + 'ne__'](), _0x523e5f['__initDefi' + 'ne__'](), _0x5495c1['__initDefi' + 'ne__'](), _0x30019a['__initDefi' + 'ne__'](), _0x31d253['__initDefi' + 'ne__'](), _0x2a0fbb['__initDefi' + 'ne__'](), _0x4bfcdb['__initDefi' + 'ne__'](), _0x4d5b52['__initDefi' + 'ne__'](), _0xf19750['__initDefi' + 'ne__'](), _0x4ce9d0['__initDefi' + 'ne__'](), _0x3cb57a['__initDefi' + 'ne__'](), _0xf86ce5['__init__'](), _0x442335['ClassUtils']['regClass']('Laya.SkyPa' + 'noramicMat' + 'erial', _0x10abae), _0x442335['ClassUtils']['regClass']('Laya.Effec' + 'tMaterial', _0x2a0fbb), _0x442335['ClassUtils']['regClass']('Laya.Unlit' + 'Material', _0x30019a), _0x442335['ClassUtils']['regClass']('Laya.Blinn' + 'PhongMater' + 'ial', _0x523e5f), _0x442335['ClassUtils']['regClass']('Laya.SkyPr' + 'oceduralMa' + 'terial', _0x5495c1), _0x442335['ClassUtils']['regClass']('Laya.PBRSt' + 'andardMate' + 'rial', _0x51f75c), _0x442335['ClassUtils']['regClass']('Laya.PBRSp' + 'ecularMate' + 'rial', _0x1b0e7e), _0x442335['ClassUtils']['regClass']('Laya.SkyBo' + 'xMaterial', _0x3cb57a), _0x442335['ClassUtils']['regClass']('Laya.Water' + 'PrimaryMat' + 'erial', _0x4bfcdb), _0x442335['ClassUtils']['regClass']('Laya.Exten' + 'dTerrainMa' + 'terial', _0xf19750), _0x442335['ClassUtils']['regClass']('Laya.Shuri' + 'kenParticl' + 'eMaterial', _0x4d5b52), _0x442335['ClassUtils']['regClass']('Laya.Trail' + 'Material', _0x31d253), _0x442335['ClassUtils']['regClass']('Laya.Physi' + 'csCollider', _0x4f927a), _0x442335['ClassUtils']['regClass']('Laya.Rigid' + 'body3D', _0x392471), _0x442335['ClassUtils']['regClass']('Laya.Chara' + 'cterContro' + 'ller', _0x4cc0ca), _0x442335['ClassUtils']['regClass']('Laya.Anima' + 'tor', _0x331cef), _0x442335['ClassUtils']['regClass']('PhysicsCol' + 'lider', _0x4f927a), _0x442335['ClassUtils']['regClass']('CharacterC' + 'ontroller', _0x4cc0ca), _0x442335['ClassUtils']['regClass']('Animator', _0x331cef), _0x442335['ClassUtils']['regClass']('Rigidbody3' + 'D', _0x392471), _0x442335['ClassUtils']['regClass']('FixedConst' + 'raint', _0x1f580d), _0x442335['ClassUtils']['regClass']('Configurab' + 'leConstrai' + 'nt', _0x4c05b3), _0x4ce9d0['defaultMat' + 'erial'] = new _0x4ce9d0(), _0x523e5f['defaultMat' + 'erial'] = new _0x523e5f(), _0x2a0fbb['defaultMat' + 'erial'] = new _0x2a0fbb(), _0x30019a['defaultMat' + 'erial'] = new _0x30019a(), _0x4d5b52['defaultMat' + 'erial'] = new _0x4d5b52(), _0x31d253['defaultMat' + 'erial'] = new _0x31d253(), _0x5495c1['defaultMat' + 'erial'] = new _0x5495c1(), _0x3cb57a['defaultMat' + 'erial'] = new _0x3cb57a(), _0x4bfcdb['defaultMat' + 'erial'] = new _0x4bfcdb(), _0x4ce9d0['defaultMat' + 'erial']['lock'] = !![], _0x523e5f['defaultMat' + 'erial']['lock'] = !![], _0x2a0fbb['defaultMat' + 'erial']['lock'] = !![], _0x30019a['defaultMat' + 'erial']['lock'] = !![], _0x4d5b52['defaultMat' + 'erial']['lock'] = !![], _0x31d253['defaultMat' + 'erial']['lock'] = !![], _0x5495c1['defaultMat' + 'erial']['lock'] = !![], _0x3cb57a['defaultMat' + 'erial']['lock'] = !![], _0x4bfcdb['defaultMat' + 'erial']['lock'] = !![], _0x442335['Texture2D']['__init__'](), _0x4b21e5['__init__'](), _0x2be899['__init__'](), _0x21eee2['__init__'](), _0x267d58['__init__'](), _0x410733['__init__'](), _0x28101b['__init__'](), _0x442335['HalfFloatU' + 'tils']['__init__']();
            var _0x24cc65 = _0x442335['LoaderMana' + 'ger']['createMap'];
            _0x24cc65['lh'] = [
                _0x4b16da['HIERARCHY'],
                _0x5bca9b['_parse']
            ], _0x24cc65['ls'] = [
                _0x4b16da['HIERARCHY'],
                _0x5bca9b['_parseScen' + 'e']
            ], _0x24cc65['lm'] = [
                _0x4b16da['MESH'],
                _0xdf33ef['_parse']
            ], _0x24cc65['lmat'] = [
                _0x4b16da['MATERIAL'],
                _0x2b6b33['_parse']
            ], _0x24cc65['jpg'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['jpeg'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['bmp'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['gif'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['png'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['dds'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['ktx'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['pvr'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_parse']
            ], _0x24cc65['lani'] = [
                _0x4b16da['ANIMATIONC' + 'LIP'],
                _0x3bbac0['_parse']
            ], _0x24cc65['lav'] = [
                _0x4b16da['AVATAR'],
                _0x20f476['_parse']
            ], _0x24cc65['ltc'] = [
                _0x4b16da['TEXTURECUB' + 'E'],
                _0x4b21e5['_parse']
            ], _0x24cc65['ltcb'] = [
                _0x4b16da['TEXTURECUB' + 'EBIN'],
                _0x4b21e5['_parseBin']
            ], _0x24cc65['ltcb.ls'] = [
                _0x4b16da['TEXTURECUB' + 'EBIN'],
                _0x4b21e5['_parseBin']
            ], _0x24cc65['lanit.ls'] = [
                _0x4b16da['TEXTURE2D'],
                _0x442335['Texture2D']['_SimpleAni' + 'matorTextu' + 'reParse']
            ];
            var _0x733fdf = _0x442335['Loader']['parserMap'];
            _0x733fdf[_0x4b16da['HIERARCHY']] = _0x4b16da['_loadHiera' + 'rchy'], _0x733fdf[_0x4b16da['MESH']] = _0x4b16da['_loadMesh'], _0x733fdf[_0x4b16da['MATERIAL']] = _0x4b16da['_loadMater' + 'ial'], _0x733fdf[_0x4b16da['TEXTURECUB' + 'E']] = _0x4b16da['_loadTextu' + 'reCube'], _0x733fdf[_0x4b16da['TEXTURECUB' + 'EBIN']] = _0x4b16da['_loadTextu' + 'reCubeBin'], _0x733fdf[_0x4b16da['TEXTURE2D']] = _0x4b16da['_loadTextu' + 're2D'], _0x733fdf[_0x4b16da['ANIMATIONC' + 'LIP']] = _0x4b16da['_loadAnima' + 'tionClip'], _0x733fdf[_0x4b16da['AVATAR']] = _0x4b16da['_loadAvata' + 'r'], _0x733fdf[_0x4b16da['SIMPLEANIM' + 'ATORBIN']] = _0x4b16da['_loadSimpl' + 'eAnimator'], _0x4b16da['_innerFirs' + 'tLevelLoad' + 'erManager']['on'](_0x442335['Event']['ERROR'], null, _0x4b16da['_eventLoad' + 'ManagerErr' + 'or']), _0x4b16da['_innerSeco' + 'ndLevelLoa' + 'derManager']['on'](_0x442335['Event']['ERROR'], null, _0x4b16da['_eventLoad' + 'ManagerErr' + 'or']), _0x4b16da['_innerThir' + 'dLevelLoad' + 'erManager']['on'](_0x442335['Event']['ERROR'], null, _0x4b16da['_eventLoad' + 'ManagerErr' + 'or']), _0x4b16da['_innerFour' + 'thLevelLoa' + 'derManager']['on'](_0x442335['Event']['ERROR'], null, _0x4b16da['_eventLoad' + 'ManagerErr' + 'or']);
        }
        static ['enableNati' + 've3D']() {
            var _0x5859dc = _0x1634f4, _0x32a505 = _0x3ec46b;
            _0x442335['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && (_0x5859dc['prototype']['_initData'] = _0x5859dc['prototype']['_initDataF' + 'orNative'], _0x5859dc['prototype']['setBool'] = _0x5859dc['prototype']['setBoolFor' + 'Native'], _0x5859dc['prototype']['getBool'] = _0x5859dc['prototype']['getBoolFor' + 'Native'], _0x5859dc['prototype']['setInt'] = _0x5859dc['prototype']['setIntForN' + 'ative'], _0x5859dc['prototype']['getInt'] = _0x5859dc['prototype']['getIntForN' + 'ative'], _0x5859dc['prototype']['setNumber'] = _0x5859dc['prototype']['setNumberF' + 'orNative'], _0x5859dc['prototype']['getNumber'] = _0x5859dc['prototype']['getNumberF' + 'orNative'], _0x5859dc['prototype']['setVector'] = _0x5859dc['prototype']['setVectorF' + 'orNative'], _0x5859dc['prototype']['getVector'] = _0x5859dc['prototype']['getVectorF' + 'orNative'], _0x5859dc['prototype']['setVector2'] = _0x5859dc['prototype']['setVector2' + 'ForNative'], _0x5859dc['prototype']['getVector2'] = _0x5859dc['prototype']['getVector2' + 'ForNative'], _0x5859dc['prototype']['setVector3'] = _0x5859dc['prototype']['setVector3' + 'ForNative'], _0x5859dc['prototype']['getVector3'] = _0x5859dc['prototype']['getVector3' + 'ForNative'], _0x5859dc['prototype']['setQuatern' + 'ion'] = _0x5859dc['prototype']['setQuatern' + 'ionForNati' + 've'], _0x5859dc['prototype']['getQuatern' + 'ion'] = _0x5859dc['prototype']['getQuatern' + 'ionForNati' + 've'], _0x5859dc['prototype']['setMatrix4' + 'x4'] = _0x5859dc['prototype']['setMatrix4' + 'x4ForNativ' + 'e'], _0x5859dc['prototype']['getMatrix4' + 'x4'] = _0x5859dc['prototype']['getMatrix4' + 'x4ForNativ' + 'e'], _0x5859dc['prototype']['setBuffer'] = _0x5859dc['prototype']['setBufferF' + 'orNative'], _0x5859dc['prototype']['getBuffer'] = _0x5859dc['prototype']['getBufferF' + 'orNative'], _0x5859dc['prototype']['setTexture'] = _0x5859dc['prototype']['setTexture' + 'ForNative'], _0x5859dc['prototype']['getTexture'] = _0x5859dc['prototype']['getTexture' + 'ForNative'], _0x5859dc['prototype']['setAttribu' + 'te'] = _0x5859dc['prototype']['setAttribu' + 'teForNativ' + 'e'], _0x5859dc['prototype']['getAttribu' + 'te'] = _0x5859dc['prototype']['getAttribu' + 'teForNativ' + 'e'], _0x5859dc['prototype']['cloneTo'] = _0x5859dc['prototype']['cloneToFor' + 'Native'], _0x5859dc['prototype']['getData'] = _0x5859dc['prototype']['getDataFor' + 'Native'], _0x32a505['prototype']['_uniformMa' + 'trix2fv'] = _0x32a505['prototype']['_uniformMa' + 'trix2fvFor' + 'Native'], _0x32a505['prototype']['_uniformMa' + 'trix3fv'] = _0x32a505['prototype']['_uniformMa' + 'trix3fvFor' + 'Native'], _0x32a505['prototype']['_uniformMa' + 'trix4fv'] = _0x32a505['prototype']['_uniformMa' + 'trix4fvFor' + 'Native'], _0x442335['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms'] = _0x442335['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms' + 'ForNative']);
        }
        static ['formatRela' + 'tivePath'](_0x231760, _0x44a8bd) {
            var _0x51e284;
            _0x51e284 = _0x231760 + _0x44a8bd;
            var _0x417b2e = _0x44a8bd['charAt'](0x0);
            if (_0x417b2e === '.') {
                var _0x206324 = _0x51e284['split']('/');
                for (var _0x429847 = 0x0, _0x358593 = _0x206324['length']; _0x429847 < _0x358593; _0x429847++) {
                    if (_0x206324[_0x429847] == '..') {
                        var _0x45a885 = _0x429847 - 0x1;
                        _0x45a885 > 0x0 && _0x206324[_0x45a885] !== '..' && (_0x206324['splice'](_0x45a885, 0x2), _0x429847 -= 0x2);
                    }
                }
                _0x51e284 = _0x206324['join']('/');
            }
            return _0x51e284;
        }
        static ['_endLoad'](_0x2ddcc2, _0x5732d0 = null, _0xd27cb5 = null) {
            if (_0xd27cb5)
                for (var _0x4b0343 = 0x0, _0x521eb0 = _0xd27cb5['length']; _0x4b0343 < _0x521eb0; _0x4b0343++) {
                    var _0xcbcdf9 = _0x442335['Loader']['getRes'](_0xd27cb5[_0x4b0343]);
                    _0xcbcdf9 && _0xcbcdf9['_removeRef' + 'erence']();
                }
            _0x2ddcc2['endLoad'](_0x5732d0);
        }
        static ['_eventLoad' + 'ManagerErr' + 'or'](_0x1ca27e) {
            _0x442335['Laya']['loader']['event'](_0x442335['Event']['ERROR'], _0x1ca27e);
        }
        static ['_addHierar' + 'chyInnerUr' + 'ls'](_0x4e24e7, _0x26839c, _0x560bdf, _0x5a4028, _0x2d015b, _0x4f0de9, _0x5edcf7 = null, _0x26be0f = null) {
            var _0x558451 = _0x4b16da['formatRela' + 'tivePath'](_0x5a4028, _0x2d015b);
            return _0x560bdf && (_0x558451 = _0x558451 + _0x560bdf), _0x4e24e7['push']({
                'url': _0x558451,
                'type': _0x4f0de9,
                'constructParams': _0x5edcf7,
                'propertyParams': _0x26be0f
            }), _0x26839c['push'](_0x558451), _0x558451;
        }
        static ['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0xcbf37f, _0x1d0766, _0x33f6aa, _0x326da9, _0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43) {
            var _0x43cb93, _0x2aad79, _0x2f7b8e = _0xcbf37f['props'];
            switch (_0xcbf37f['type']) {
            case 'Scene3D':
                var _0x5db886 = _0x2f7b8e['lightmaps'];
                for (_0x43cb93 = 0x0, _0x2aad79 = _0x5db886['length']; _0x43cb93 < _0x2aad79; _0x43cb93++) {
                    var _0x50ea28 = _0x5db886[_0x43cb93];
                    if (_0x50ea28['path'])
                        _0x50ea28['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x50ea28['path'], _0x4b16da['TEXTURE2D'], _0x50ea28['constructP' + 'arams'], _0x50ea28['propertyPa' + 'rams']);
                    else {
                        var _0x191962 = _0x50ea28['color'];
                        _0x191962['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x191962['path'], _0x4b16da['TEXTURE2D'], _0x191962['constructP' + 'arams'], _0x191962['propertyPa' + 'rams']);
                        var _0x3e99f0 = _0x50ea28['direction'];
                        if (_0x3e99f0)
                            _0x3e99f0['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x3e99f0['path'], _0x4b16da['TEXTURE2D'], _0x3e99f0['constructP' + 'arams'], _0x3e99f0['propertyPa' + 'rams']);
                    }
                }
                var _0x6f6986 = _0x2f7b8e['reflection' + 'Texture'];
                _0x6f6986 && (_0x2f7b8e['reflection'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x326da9, _0x463bed, _0x12d60e, _0x3a9d43, _0x6f6986, _0x4b16da['TEXTURECUB' + 'E']));
                var _0x76adbb = _0x2f7b8e['reflection'];
                _0x76adbb && (_0x2f7b8e['reflection'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x76adbb, _0x4b16da['TEXTURECUB' + 'EBIN']));
                if (_0x2f7b8e['sky']) {
                    var _0x55b3e9 = _0x2f7b8e['sky']['material'];
                    _0x55b3e9 && (_0x55b3e9['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x33f6aa, _0x463bed, _0x12d60e, _0x3a9d43, _0x55b3e9['path'], _0x4b16da['MATERIAL']));
                }
                break;
            case 'Camera':
                var _0xecfb33 = _0x2f7b8e['skyboxMate' + 'rial'];
                _0xecfb33 && (_0xecfb33['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x33f6aa, _0x463bed, _0x12d60e, _0x3a9d43, _0xecfb33['path'], _0x4b16da['MATERIAL']));
                break;
            case 'TrailSprit' + 'e3D':
            case 'MeshSprite' + '3D':
            case 'SkinnedMes' + 'hSprite3D':
            case 'SimpleSkin' + 'nedMeshSpr' + 'ite3D':
                var _0x9b3c45 = _0x2f7b8e['meshPath'];
                _0x9b3c45 && (_0x2f7b8e['meshPath'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x1d0766, _0x463bed, _0x12d60e, _0x3a9d43, _0x9b3c45, _0x4b16da['MESH']));
                var _0x1d4cc3 = _0x2f7b8e['materials'];
                if (_0x1d4cc3) {
                    for (_0x43cb93 = 0x0, _0x2aad79 = _0x1d4cc3['length']; _0x43cb93 < _0x2aad79; _0x43cb93++)
                        _0x1d4cc3[_0x43cb93]['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x33f6aa, _0x463bed, _0x12d60e, _0x3a9d43, _0x1d4cc3[_0x43cb93]['path'], _0x4b16da['MATERIAL']);
                }
                if (_0xcbf37f['type'] == 'SimpleSkin' + 'nedMeshSpr' + 'ite3D') {
                    if (_0x2f7b8e['animatorTe' + 'xture'])
                        _0x2f7b8e['animatorTe' + 'xture'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x2f7b8e['animatorTe' + 'xture'], _0x4b16da['SIMPLEANIM' + 'ATORBIN']);
                }
                break;
            case 'ShuriKenPa' + 'rticle3D':
                if (_0x2f7b8e['main']) {
                    var _0x1cbbee = _0x2f7b8e['renderer']['resources'], _0x35aee6 = _0x1cbbee['mesh'], _0x230436 = _0x1cbbee['material'];
                    _0x35aee6 && (_0x1cbbee['mesh'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x1d0766, _0x463bed, _0x12d60e, _0x3a9d43, _0x35aee6, _0x4b16da['MESH'])), _0x230436 && (_0x1cbbee['material'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x33f6aa, _0x463bed, _0x12d60e, _0x3a9d43, _0x230436, _0x4b16da['MATERIAL']));
                } else {
                    var _0x32378c = _0x2f7b8e['meshPath'];
                    _0x32378c && (_0x2f7b8e['meshPath'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x1d0766, _0x463bed, _0x12d60e, _0x3a9d43, _0x32378c, _0x4b16da['MESH'])), _0x2f7b8e['material']['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x33f6aa, _0x463bed, _0x12d60e, _0x3a9d43, _0x2f7b8e['material']['path'], _0x4b16da['MATERIAL']);
                }
                break;
            case 'Terrain':
                _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x2f7b8e['dataPath'], _0x4b16da['TERRAINRES']);
                break;
            case 'Reflection' + 'Probe':
                var _0x373f2d = _0x2f7b8e['reflection'];
                _0x373f2d && (_0x2f7b8e['reflection'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x1d0766, _0x463bed, _0x12d60e, _0x3a9d43, _0x373f2d, _0x4b16da['TEXTURECUB' + 'EBIN']));
                break;
            }
            var _0x3f3ea5 = _0xcbf37f['components'];
            if (_0x3f3ea5)
                for (var _0x952cea = 0x0, _0x584f5e = _0x3f3ea5['length']; _0x952cea < _0x584f5e; _0x952cea++) {
                    var _0x26e6cf = _0x3f3ea5[_0x952cea];
                    switch (_0x26e6cf['type']) {
                    case 'Animator':
                        var _0x6c3899 = _0x26e6cf['avatarPath'], _0x2e5869 = _0x26e6cf['avatar'];
                        _0x2e5869 && (_0x2e5869['path'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x2e5869['path'], _0x4b16da['AVATAR']));
                        var _0x1a3785 = _0x26e6cf['clipPaths'];
                        if (!_0x1a3785) {
                            var _0x2465ee = _0x26e6cf['layers'];
                            for (_0x43cb93 = 0x0; _0x43cb93 < _0x2465ee['length']; _0x43cb93++) {
                                var _0x4a4342 = _0x2465ee[_0x43cb93]['states'];
                                for (var _0x50e0a4 = 0x0, _0x265a5f = _0x4a4342['length']; _0x50e0a4 < _0x265a5f; _0x50e0a4++) {
                                    var _0x1cfa0b = _0x4a4342[_0x50e0a4]['clipPath'];
                                    _0x1cfa0b && (_0x4a4342[_0x50e0a4]['clipPath'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x1cfa0b, _0x4b16da['ANIMATIONC' + 'LIP']));
                                }
                            }
                        } else {
                            for (_0x43cb93 = 0x0, _0x2aad79 = _0x1a3785['length']; _0x43cb93 < _0x2aad79; _0x43cb93++)
                                _0x1a3785[_0x43cb93] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43, _0x1a3785[_0x43cb93], _0x4b16da['ANIMATIONC' + 'LIP']);
                        }
                        break;
                    case 'PhysicsCol' + 'lider':
                    case 'Rigidbody3' + 'D':
                    case 'CharacterC' + 'ontroller':
                        var _0x266307 = _0x26e6cf['shapes'];
                        for (_0x43cb93 = 0x0; _0x43cb93 < _0x266307['length']; _0x43cb93++) {
                            var _0x36d501 = _0x266307[_0x43cb93];
                            if (_0x36d501['type'] === 'MeshCollid' + 'erShape') {
                                var _0x35aee6 = _0x36d501['mesh'];
                                _0x35aee6 && (_0x36d501['mesh'] = _0x4b16da['_addHierar' + 'chyInnerUr' + 'ls'](_0x1d0766, _0x463bed, _0x12d60e, _0x3a9d43, _0x35aee6, _0x4b16da['MESH']));
                            }
                        }
                        break;
                    }
                }
            var _0x3d66cf = _0xcbf37f['child'];
            for (_0x43cb93 = 0x0, _0x2aad79 = _0x3d66cf['length']; _0x43cb93 < _0x2aad79; _0x43cb93++)
                _0x4b16da['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x3d66cf[_0x43cb93], _0x1d0766, _0x33f6aa, _0x326da9, _0x13e1c6, _0x463bed, _0x12d60e, _0x3a9d43);
        }
        static ['_loadHiera' + 'rchy'](_0x1c2e83) {
            _0x1c2e83['_originTyp' + 'e'] = _0x1c2e83['type'], _0x1c2e83['on'](_0x442335['Event']['LOADED'], null, _0x4b16da['_onHierarc' + 'hylhLoaded'], [_0x1c2e83]), _0x1c2e83['load'](_0x1c2e83['url'], _0x442335['Loader']['JSON'], ![], null, !![]);
        }
        static ['_onHierarc' + 'hylhLoaded'](_0x2da0c6, _0x45f351) {
            var _0x2e6b2d = _0x2da0c6['url'], _0xd5aeba = _0x47bed9['getURLVeri' + 'on'](_0x2e6b2d), _0x3f9c76 = _0x442335['URL']['getPath'](_0x2e6b2d), _0x4e0d48 = [], _0x4ec65a = [], _0x3e0dc8 = [], _0x48f2ff = [], _0x54ffcf = [];
            _0x4b16da['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x45f351['data'], _0x4e0d48, _0x4ec65a, _0x3e0dc8, _0x48f2ff, _0x54ffcf, _0xd5aeba, _0x3f9c76);
            var _0x51edfe = _0x4e0d48['length'] + _0x4ec65a['length'] + _0x48f2ff['length'], _0x15cb99 = _0x51edfe + 0x1, _0x51bfc9 = 0x1 / _0x15cb99;
            _0x4b16da['_onProcess' + 'Change'](_0x2da0c6, 0x0, _0x51bfc9, 0x1);
            if (_0x48f2ff['length'] > 0x0) {
                var _0x417b9c = _0x51edfe / _0x15cb99, _0x74e9f3 = _0x442335['Handler']['create'](null, _0x4b16da['_onProcess' + 'Change'], [
                        _0x2da0c6,
                        _0x51bfc9,
                        _0x417b9c
                    ], ![]);
                _0x4b16da['_innerFour' + 'thLevelLoa' + 'derManager']['_create'](_0x48f2ff, ![], _0x442335['Handler']['create'](null, _0x4b16da['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'], [
                    _0x2da0c6,
                    _0x74e9f3,
                    _0x45f351,
                    _0x54ffcf,
                    _0x4e0d48,
                    _0x4ec65a,
                    _0x3e0dc8,
                    _0x51bfc9 + _0x417b9c * _0x48f2ff['length'],
                    _0x417b9c
                ]), _0x74e9f3, null, null, null, 0x1, !![]);
            } else
                _0x4b16da['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'](_0x2da0c6, null, _0x45f351, _0x54ffcf, _0x4e0d48, _0x4ec65a, _0x3e0dc8, _0x51bfc9, _0x417b9c);
        }
        static ['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'](_0x3c84b0, _0x6fc6ab, _0x20e850, _0x143cba, _0x3f1215, _0x2a5960, _0x4b4866, _0x5a51d5, _0x3c4204) {
            _0x6fc6ab && _0x6fc6ab['recover']();
            if (_0x4b4866['length'] > 0x0) {
                var _0x51416b = _0x442335['Handler']['create'](null, _0x4b16da['_onProcess' + 'Change'], [
                    _0x3c84b0,
                    _0x5a51d5,
                    _0x3c4204
                ], ![]);
                _0x4b16da['_innerThir' + 'dLevelLoad' + 'erManager']['_create'](_0x4b4866, ![], _0x442335['Handler']['create'](null, _0x4b16da['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'], [
                    _0x3c84b0,
                    _0x51416b,
                    _0x20e850,
                    _0x143cba,
                    _0x3f1215,
                    _0x2a5960,
                    _0x5a51d5 + _0x3c4204 * _0x2a5960['length'],
                    _0x3c4204
                ]), _0x6fc6ab, null, null, null, 0x1, !![]);
            } else
                _0x4b16da['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'](_0x3c84b0, null, _0x20e850, _0x143cba, _0x3f1215, _0x2a5960, _0x5a51d5, _0x3c4204);
        }
        static ['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'](_0x1b7f19, _0x1dbd01, _0x2d2e0e, _0x477b6d, _0x1ac92e, _0x214888, _0x21c2f0, _0xfdcec) {
            _0x1dbd01 && _0x1dbd01['recover']();
            if (_0x214888['length'] > 0x0) {
                var _0x4fc150 = _0x442335['Handler']['create'](null, _0x4b16da['_onProcess' + 'Change'], [
                    _0x1b7f19,
                    _0x21c2f0,
                    _0xfdcec
                ], ![]);
                _0x4b16da['_innerSeco' + 'ndLevelLoa' + 'derManager']['_create'](_0x214888, ![], _0x442335['Handler']['create'](null, _0x4b16da['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'], [
                    _0x1b7f19,
                    _0x4fc150,
                    _0x2d2e0e,
                    _0x477b6d,
                    _0x1ac92e,
                    _0x21c2f0 + _0xfdcec * _0x214888['length'],
                    _0xfdcec
                ]), _0x1dbd01, null, null, null, 0x1, !![]);
            } else
                _0x4b16da['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'](_0x1b7f19, null, _0x2d2e0e, _0x477b6d, _0x1ac92e, _0x21c2f0, _0xfdcec);
        }
        static ['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'](_0x2b25c9, _0x1adf9b, _0xdc7b2d, _0x3c7883, _0x2053ce, _0x5ae843, _0x443bb3) {
            _0x1adf9b && _0x1adf9b['recover']();
            if (_0x2053ce['length'] > 0x0) {
                var _0x1cab31 = _0x442335['Handler']['create'](null, _0x4b16da['_onProcess' + 'Change'], [
                    _0x2b25c9,
                    _0x5ae843,
                    _0x443bb3
                ], ![]);
                _0x4b16da['_innerFirs' + 'tLevelLoad' + 'erManager']['_create'](_0x2053ce, ![], _0x442335['Handler']['create'](null, _0x4b16da['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'], [
                    _0x2b25c9,
                    _0x1cab31,
                    _0xdc7b2d,
                    _0x3c7883
                ]), _0x1adf9b, null, null, null, 0x1, !![]);
            } else
                _0x4b16da['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'](_0x2b25c9, null, _0xdc7b2d, _0x3c7883);
        }
        static ['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'](_0x429679, _0x1a9dae, _0x3b6a0d, _0x510359) {
            _0x1a9dae && _0x1a9dae['recover'](), _0x429679['_cache'] = _0x429679['_createCac' + 'he'];
            var _0x44a84d = _0x3b6a0d['data']['type'] === 'Scene3D' ? _0x5bca9b['_parseScen' + 'e'](_0x3b6a0d, _0x429679['_propertyP' + 'arams'], _0x429679['_construct' + 'Params']) : _0x5bca9b['_parse'](_0x3b6a0d, _0x429679['_propertyP' + 'arams'], _0x429679['_construct' + 'Params']);
            _0x4b16da['_endLoad'](_0x429679, _0x44a84d, _0x510359);
        }
        static ['_loadMesh'](_0x3d672f) {
            _0x3d672f['on'](_0x442335['Event']['LOADED'], null, _0x4b16da['_onMeshLmL' + 'oaded'], [_0x3d672f]), _0x3d672f['load'](_0x3d672f['url'], _0x442335['Loader']['BUFFER'], ![], null, !![]);
        }
        static ['_onMeshLmL' + 'oaded'](_0x5cda08, _0x2ad269) {
            _0x5cda08['_cache'] = _0x5cda08['_createCac' + 'he'];
            var _0x100010 = _0xdf33ef['_parse'](_0x2ad269, _0x5cda08['_propertyP' + 'arams'], _0x5cda08['_construct' + 'Params']);
            _0x4b16da['_endLoad'](_0x5cda08, _0x100010);
        }
        static ['_loadMater' + 'ial'](_0x22fdbb) {
            _0x22fdbb['on'](_0x442335['Event']['LOADED'], null, _0x4b16da['_onMateril' + 'LmatLoaded'], [_0x22fdbb]), _0x22fdbb['load'](_0x22fdbb['url'], _0x442335['Loader']['JSON'], ![], null, !![]);
        }
        static ['_onMateril' + 'LmatLoaded'](_0x18c96f, _0x5aef38) {
            var _0x450c0 = _0x18c96f['url'], _0x21caea = _0x47bed9['getURLVeri' + 'on'](_0x450c0), _0x40bc75 = _0x442335['URL']['getPath'](_0x450c0), _0x115a86 = [], _0x2f9a9a = [], _0x409f05 = _0x5aef38['customProp' + 's'], _0x1eb8b7, _0x362436 = _0x5aef38['version'];
            switch (_0x362436) {
            case 'LAYAMATERI' + 'AL:01':
            case 'LAYAMATERI' + 'AL:02':
                var _0x47d8a0, _0x5818d0, _0x2f1356 = _0x5aef38['props']['textures'];
                if (_0x2f1356)
                    for (_0x47d8a0 = 0x0, _0x5818d0 = _0x2f1356['length']; _0x47d8a0 < _0x5818d0; _0x47d8a0++) {
                        var _0x4719ee = _0x2f1356[_0x47d8a0], _0x3b8f7a = _0x4719ee['path'];
                        _0x3b8f7a && (_0x1eb8b7 = _0x4b16da['formatRela' + 'tivePath'](_0x40bc75, _0x3b8f7a), _0x21caea && (_0x1eb8b7 = _0x1eb8b7 + _0x21caea), _0x115a86['push']({
                            'url': _0x1eb8b7,
                            'constructParams': _0x4719ee['constructP' + 'arams'],
                            'propertyParams': _0x4719ee['propertyPa' + 'rams']
                        }), _0x2f9a9a['push'](_0x1eb8b7), _0x4719ee['path'] = _0x1eb8b7);
                    }
                break;
            default:
                throw new Error('Laya3D:unk' + 'onwn\x20versi' + 'on.');
            }
            var _0x1a188e = _0x115a86['length'], _0x79250c = _0x1a188e + 0x1, _0x51c75a = 0x1 / _0x79250c;
            _0x4b16da['_onProcess' + 'Change'](_0x18c96f, 0x0, _0x51c75a, 0x1);
            if (_0x1a188e > 0x0) {
                var _0x54a6f3 = _0x442335['Handler']['create'](null, _0x4b16da['_onProcess' + 'Change'], [
                    _0x18c96f,
                    _0x51c75a,
                    _0x1a188e / _0x79250c
                ], ![]);
                _0x4b16da['_innerFour' + 'thLevelLoa' + 'derManager']['_create'](_0x115a86, ![], _0x442335['Handler']['create'](null, _0x4b16da['_onMateial' + 'TexturesLo' + 'aded'], [
                    _0x18c96f,
                    _0x54a6f3,
                    _0x5aef38,
                    _0x2f9a9a
                ]), _0x54a6f3, null, null, null, 0x1, !![]);
            } else
                _0x4b16da['_onMateial' + 'TexturesLo' + 'aded'](_0x18c96f, null, _0x5aef38, null);
        }
        static ['_onMateial' + 'TexturesLo' + 'aded'](_0x935d2b, _0x4b4b08, _0x580800, _0x397a35) {
            _0x935d2b['_cache'] = _0x935d2b['_createCac' + 'he'];
            var _0x1c6f6f = _0x2b6b33['_parse'](_0x580800, _0x935d2b['_propertyP' + 'arams'], _0x935d2b['_construct' + 'Params']);
            _0x4b16da['_endLoad'](_0x935d2b, _0x1c6f6f, _0x397a35), _0x4b4b08 && _0x4b4b08['recover']();
        }
        static ['_loadAvata' + 'r'](_0x4c6693) {
            _0x4c6693['on'](_0x442335['Event']['LOADED'], null, function (_0x543c9c) {
                _0x4c6693['_cache'] = _0x4c6693['_createCac' + 'he'];
                var _0x17f542 = _0x20f476['_parse'](_0x543c9c, _0x4c6693['_propertyP' + 'arams'], _0x4c6693['_construct' + 'Params']);
                _0x4b16da['_endLoad'](_0x4c6693, _0x17f542);
            }), _0x4c6693['load'](_0x4c6693['url'], _0x442335['Loader']['JSON'], ![], null, !![]);
        }
        static ['_loadSimpl' + 'eAnimator'](_0x34ff0f) {
            _0x34ff0f['on'](_0x442335['Event']['LOADED'], null, function (_0x12e508) {
                _0x34ff0f['_cache'] = _0x34ff0f['_createCac' + 'he'];
                var _0x41a5d2 = _0x442335['Texture2D']['_SimpleAni' + 'matorTextu' + 'reParse'](_0x12e508, _0x34ff0f['_propertyP' + 'arams'], _0x34ff0f['_construct' + 'Params']);
                _0x4b16da['_endLoad'](_0x34ff0f, _0x41a5d2);
            }), _0x34ff0f['load'](_0x34ff0f['url'], _0x442335['Loader']['BUFFER'], ![], null, !![]);
        }
        static ['_loadAnima' + 'tionClip'](_0x258f5d) {
            _0x258f5d['on'](_0x442335['Event']['LOADED'], null, function (_0x3db01d) {
                _0x258f5d['_cache'] = _0x258f5d['_createCac' + 'he'];
                var _0x6596b2 = _0x3bbac0['_parse'](_0x3db01d, _0x258f5d['_propertyP' + 'arams'], _0x258f5d['_construct' + 'Params']);
                _0x4b16da['_endLoad'](_0x258f5d, _0x6596b2);
            }), _0x258f5d['load'](_0x258f5d['url'], _0x442335['Loader']['BUFFER'], ![], null, !![]);
        }
        static ['_loadTextu' + 're2D'](_0x312ad5) {
            var _0x5d4760 = _0x312ad5['url'], _0x2622d4 = _0x5d4760['lastIndexO' + 'f']('.') + 0x1, _0x675434 = _0x5d4760['indexOf']('?'), _0x5b1444 = _0x675434 == -0x1 ? _0x5d4760['length'] : _0x675434, _0x20df2c = _0x5d4760['substr'](_0x2622d4, _0x5b1444 - _0x2622d4), _0x36c4e6;
            switch (_0x20df2c) {
            case 'jpg':
            case 'jpeg':
            case 'bmp':
            case 'gif':
            case 'png':
                _0x36c4e6 = 'nativeimag' + 'e';
                break;
            case 'dds':
            case 'ktx':
            case 'pvr':
                _0x36c4e6 = _0x442335['Loader']['BUFFER'];
                break;
            }
            _0x312ad5['on'](_0x442335['Event']['LOADED'], null, function (_0x5f0f84) {
                _0x312ad5['_cache'] = _0x312ad5['_createCac' + 'he'];
                var _0x489f84 = _0x442335['Texture2D']['_parse'](_0x5f0f84, _0x312ad5['_propertyP' + 'arams'], _0x312ad5['_construct' + 'Params']);
                _0x4b16da['_endLoad'](_0x312ad5, _0x489f84);
            }), _0x312ad5['load'](_0x312ad5['url'], _0x36c4e6, ![], null, !![]);
        }
        static ['_loadTextu' + 'reCube'](_0x1100f1) {
            _0x1100f1['on'](_0x442335['Event']['LOADED'], null, _0x4b16da['_onTexture' + 'CubeLtcLoa' + 'ded'], [_0x1100f1]), _0x1100f1['load'](_0x1100f1['url'], _0x442335['Loader']['JSON'], ![], null, !![]);
        }
        static ['_loadTextu' + 'reCubeBin'](_0xd9dedc) {
            _0xd9dedc['on'](_0x442335['Event']['LOADED'], null, _0x57989d => {
                _0xd9dedc['_cache'] = _0xd9dedc['_createCac' + 'he'];
                var _0x65e032 = new _0x442335['Byte'](_0x57989d), _0x34b0e8 = _0x65e032['readUTFStr' + 'ing']();
                if (_0x34b0e8 !== 'LAYATEXTUR' + 'ECUBE:0000')
                    throw 'Laya3D:unk' + 'now\x20versio' + 'n.';
                var _0x32e00c = _0x65e032['readUint8'](), _0x38d704 = _0x65e032['getUint8'](), _0x13f958 = _0x65e032['readUint16'](), _0x2c450a = _0x65e032['getUint8'](), _0x10d257 = _0x65e032['getUint8'](), _0x47813b = _0x65e032['getUint8'](), _0x2ba7f6 = _0x65e032['getUint8'](), _0x25171e = new _0x4b21e5(_0x13f958, _0x32e00c, _0x38d704 > 0x1 ? !![] : ![]);
                _0x25171e['filterMode'] = _0x2c450a, _0x25171e['wrapModeU'] = _0x10d257, _0x25171e['wrapModeV'] = _0x47813b, _0x25171e['anisoLevel'] = _0x2ba7f6;
                var _0x3b7e92 = _0x65e032['pos'], _0x47036f = _0x13f958;
                for (var _0x311e42 = 0x0; _0x311e42 < _0x38d704; _0x311e42++) {
                    var _0x368354 = new Array(0x6), _0x1643f5 = _0x47036f * _0x47036f * _0x25171e['_getFormat' + 'ByteCount']();
                    for (var _0x3329e4 = 0x0; _0x3329e4 < 0x6; _0x3329e4++) {
                        _0x368354[_0x3329e4] = new Uint8Array(_0x57989d, _0x3b7e92, _0x1643f5), _0x3b7e92 += _0x1643f5;
                    }
                    _0x25171e['setSixSide' + 'Pixels'](_0x368354, _0x311e42), _0x47036f /= 0x2;
                }
                _0x4b16da['_endLoad'](_0xd9dedc, _0x25171e);
            }), _0xd9dedc['load'](_0xd9dedc['url'], _0x442335['Loader']['BUFFER'], ![], null, !![]);
        }
        static ['_onTexture' + 'CubeLtcLoa' + 'ded'](_0x3db086, _0x422d74) {
            var _0x53d43 = _0x442335['URL']['getPath'](_0x3db086['url']), _0x4d70b3 = [
                    _0x4b16da['formatRela' + 'tivePath'](_0x53d43, _0x422d74['front']),
                    _0x4b16da['formatRela' + 'tivePath'](_0x53d43, _0x422d74['back']),
                    _0x4b16da['formatRela' + 'tivePath'](_0x53d43, _0x422d74['left']),
                    _0x4b16da['formatRela' + 'tivePath'](_0x53d43, _0x422d74['right']),
                    _0x4b16da['formatRela' + 'tivePath'](_0x53d43, _0x422d74['up']),
                    _0x4b16da['formatRela' + 'tivePath'](_0x53d43, _0x422d74['down'])
                ], _0x1aa334 = 0x1 / 0x7;
            _0x4b16da['_onProcess' + 'Change'](_0x3db086, 0x0, _0x1aa334, 0x1);
            var _0xfe6a64 = _0x442335['Handler']['create'](null, _0x4b16da['_onProcess' + 'Change'], [
                _0x3db086,
                _0x1aa334,
                0x6 / 0x7
            ], ![]);
            _0x4b16da['_innerFour' + 'thLevelLoa' + 'derManager']['load'](_0x4d70b3, _0x442335['Handler']['create'](null, _0x4b16da['_onTexture' + 'CubeImages' + 'Loaded'], [
                _0x3db086,
                _0x4d70b3,
                _0xfe6a64
            ]), _0xfe6a64, 'nativeimag' + 'e');
        }
        static ['_onTexture' + 'CubeImages' + 'Loaded'](_0x23b3c0, _0x1d77c0, _0x56209b) {
            var _0x2c8219 = new Array(0x6);
            for (var _0x5726b2 = 0x0; _0x5726b2 < 0x6; _0x5726b2++)
                _0x2c8219[_0x5726b2] = _0x442335['Loader']['getRes'](_0x1d77c0[_0x5726b2]);
            _0x23b3c0['_cache'] = _0x23b3c0['_createCac' + 'he'];
            var _0x4f3bf6 = _0x4b21e5['_parse'](_0x2c8219, _0x23b3c0['_propertyP' + 'arams'], _0x23b3c0['_construct' + 'Params']);
            _0x56209b['recover']();
            for (_0x5726b2 = 0x0; _0x5726b2 < 0x6; _0x5726b2++)
                _0x442335['Loader']['clearRes'](_0x1d77c0[_0x5726b2]);
            _0x4b16da['_endLoad'](_0x23b3c0, _0x4f3bf6);
        }
        static ['_onProcess' + 'Change'](_0xfd739, _0x3d6f65, _0x99e69f, _0x356f83) {
            _0x356f83 = _0x3d6f65 + _0x356f83 * _0x99e69f, _0x356f83 < 0x1 && _0xfd739['event'](_0x442335['Event']['PROGRESS'], _0x356f83 * 0x2 / 0x3 + 0x1 / 0x3);
        }
        static ['init'](_0x1cb6f6, _0x12021b, _0x5a05b8 = null, _0x511022 = null) {
            if (_0x4b16da['_isInit']) {
                _0x511022 && _0x511022['run']();
                return;
            }
            _0x4b16da['_isInit'] = !![], _0x5a05b8 && _0x5a05b8['cloneTo'](_0x1a3b39['_config']), _0x5a05b8 = _0x1a3b39['_config'], _0x28101b['debugFrust' + 'umCulling'] = _0x5a05b8['debugFrust' + 'umCulling'], _0x4b16da['_editerEnv' + 'ironment'] = _0x5a05b8['_editerEnv' + 'ironment'], _0x397862['octreeCull' + 'ing'] = _0x5a05b8['octreeCull' + 'ing'], _0x397862['octreeInit' + 'ialSize'] = _0x5a05b8['octreeInit' + 'ialSize'], _0x397862['octreeInit' + 'ialCenter'] = _0x5a05b8['octreeInit' + 'ialCenter'], _0x397862['octreeMinN' + 'odeSize'] = _0x5a05b8['octreeMinN' + 'odeSize'], _0x397862['octreeLoos' + 'eness'] = _0x5a05b8['octreeLoos' + 'eness'];
            var _0x299495 = window['Physics3D'];
            _0x299495 == null || _0x5a05b8['isUseCanno' + 'nPhysicsEn' + 'gine'] ? (_0x3c230b['_enablePhy' + 'sics'] = ![], _0x4b16da['__init__'](_0x1cb6f6, _0x12021b, _0x5a05b8), _0x511022 && _0x511022['run']()) : (_0x3c230b['_enablePhy' + 'sics'] = !![], _0x299495(_0x5a05b8['defaultPhy' + 'sicsMemory'] * 0x10, _0x254185['_interacti' + 've'])['then'](function () {
                _0x4b16da['__init__'](_0x1cb6f6, _0x12021b, _0x5a05b8), _0x511022 && _0x511022['run']();
            }));
        }
    }
    _0x4b16da['HIERARCHY'] = 'HIERARCHY', _0x4b16da['MESH'] = 'MESH', _0x4b16da['MATERIAL'] = 'MATERIAL', _0x4b16da['TEXTURE2D'] = 'TEXTURE2D', _0x4b16da['TEXTURECUB' + 'E'] = 'TEXTURECUB' + 'E', _0x4b16da['TEXTURECUB' + 'EBIN'] = 'TEXTURECUB' + 'EBIN', _0x4b16da['ANIMATIONC' + 'LIP'] = 'ANIMATIONC' + 'LIP', _0x4b16da['AVATAR'] = 'AVATAR', _0x4b16da['TERRAINHEI' + 'GHTDATA'] = 'TERRAINHEI' + 'GHTDATA', _0x4b16da['TERRAINRES'] = 'TERRAIN', _0x4b16da['SIMPLEANIM' + 'ATORBIN'] = 'SIMPLEANIM' + 'ATOR', _0x4b16da['_innerFirs' + 'tLevelLoad' + 'erManager'] = new _0x442335['LoaderMana' + 'ger'](), _0x4b16da['_innerSeco' + 'ndLevelLoa' + 'derManager'] = new _0x442335['LoaderMana' + 'ger'](), _0x4b16da['_innerThir' + 'dLevelLoad' + 'erManager'] = new _0x442335['LoaderMana' + 'ger'](), _0x4b16da['_innerFour' + 'thLevelLoa' + 'derManager'] = new _0x442335['LoaderMana' + 'ger'](), _0x4b16da['_isInit'] = ![], _0x4b16da['_editerEnv' + 'ironment'] = ![], _0x4b16da['physicsSet' + 'tings'] = new _0x4c00fb(), window['Laya3D'] = _0x4b16da;
    class _0x29c72d extends _0x4a730f {
        constructor() {
            super();
        }
        ['add'](_0x294873) {
            var _0x4ed2f9 = _0x294873['_indexInCa' + 'stShadowLi' + 'st'];
            if (_0x4ed2f9 !== -0x1)
                throw 'CastShadow' + 'List:eleme' + 'nt\x20has\x20\x20in' + '\x20\x20CastShad' + 'owList.';
            this['_add'](_0x294873), _0x294873['_indexInCa' + 'stShadowLi' + 'st'] = this['length']++;
        }
        ['remove'](_0x44974a) {
            var _0x3f88f4 = _0x44974a['_indexInCa' + 'stShadowLi' + 'st'];
            this['length']--;
            if (_0x3f88f4 !== this['length']) {
                var _0x2f9487 = this['elements'][this['length']];
                this['elements'][_0x3f88f4] = _0x2f9487, _0x2f9487['_indexInCa' + 'stShadowLi' + 'st'] = _0x3f88f4;
            }
            _0x44974a['_indexInCa' + 'stShadowLi' + 'st'] = -0x1;
        }
    }
    class _0xb5079c {
        constructor() {
        }
        ['onStateEnt' + 'er']() {
        }
        ['onStateUpd' + 'ate']() {
        }
        ['onStateExi' + 't']() {
        }
    }
    class _0x16d436 extends _0x442335['Component'] {
        constructor() {
            super(...arguments), this['_indexInPo' + 'ol'] = -0x1;
        }
        get ['isSingleto' + 'n']() {
            return ![];
        }
        ['_checkProc' + 'essTrigger' + 's']() {
            var _0x5ad93c = _0x16d436['prototype'];
            if (this['onTriggerE' + 'nter'] !== _0x5ad93c['onTriggerE' + 'nter'])
                return !![];
            if (this['onTriggerS' + 'tay'] !== _0x5ad93c['onTriggerS' + 'tay'])
                return !![];
            if (this['onTriggerE' + 'xit'] !== _0x5ad93c['onTriggerE' + 'xit'])
                return !![];
            return ![];
        }
        ['_checkProc' + 'essCollisi' + 'ons']() {
            var _0x33593a = _0x16d436['prototype'];
            if (this['onCollisio' + 'nEnter'] !== _0x33593a['onCollisio' + 'nEnter'])
                return !![];
            if (this['onCollisio' + 'nStay'] !== _0x33593a['onCollisio' + 'nStay'])
                return !![];
            if (this['onCollisio' + 'nExit'] !== _0x33593a['onCollisio' + 'nExit'])
                return !![];
            return ![];
        }
        ['_onAwake']() {
            this['onAwake']();
            if (this['onStart'] !== _0x16d436['prototype']['onStart'])
                _0x442335['Laya']['startTimer']['callLater'](this, this['onStart']);
        }
        ['_onEnable']() {
            this['owner']['_scene']['_addScript'](this), this['onEnable']();
        }
        ['_onDisable']() {
            this['owner']['_scene']['_removeScr' + 'ipt'](this), this['owner']['offAllCall' + 'er'](this), this['onDisable']();
        }
        ['_onDestroy']() {
            var _0x2fc68b = this['owner']['_scripts'];
            _0x2fc68b['splice'](_0x2fc68b['indexOf'](this), 0x1);
            var _0x574786 = this['owner'];
            _0x574786['_needProce' + 'ssTriggers'] = ![];
            for (var _0x510aa6 = 0x0, _0x4766e8 = _0x2fc68b['length']; _0x510aa6 < _0x4766e8; _0x510aa6++) {
                if (_0x2fc68b[_0x510aa6]['_checkProc' + 'essTrigger' + 's']()) {
                    _0x574786['_needProce' + 'ssTriggers'] = !![];
                    break;
                }
            }
            _0x574786['_needProce' + 'ssCollisio' + 'ns'] = ![];
            for (_0x510aa6 = 0x0, _0x4766e8 = _0x2fc68b['length']; _0x510aa6 < _0x4766e8; _0x510aa6++) {
                if (_0x2fc68b[_0x510aa6]['_checkProc' + 'essCollisi' + 'ons']()) {
                    _0x574786['_needProce' + 'ssCollisio' + 'ns'] = !![];
                    break;
                }
            }
            this['onDestroy']();
        }
        ['_isScript']() {
            return !![];
        }
        ['_onAdded']() {
            var _0x484d6f = this['owner'], _0x4b4e9b = _0x484d6f['_scripts'];
            _0x4b4e9b || (_0x484d6f['_scripts'] = _0x4b4e9b = []), _0x4b4e9b['push'](this);
            if (!_0x484d6f['_needProce' + 'ssCollisio' + 'ns'])
                _0x484d6f['_needProce' + 'ssCollisio' + 'ns'] = this['_checkProc' + 'essCollisi' + 'ons']();
            if (!_0x484d6f['_needProce' + 'ssTriggers'])
                _0x484d6f['_needProce' + 'ssTriggers'] = this['_checkProc' + 'essTrigger' + 's']();
        }
        ['onAwake']() {
        }
        ['onEnable']() {
        }
        ['onStart']() {
        }
        ['onTriggerE' + 'nter'](_0x4f1187) {
        }
        ['onTriggerS' + 'tay'](_0x616bc9) {
        }
        ['onTriggerE' + 'xit'](_0x36d105) {
        }
        ['onCollisio' + 'nEnter'](_0x5e5323) {
        }
        ['onCollisio' + 'nStay'](_0x3c3d04) {
        }
        ['onCollisio' + 'nExit'](_0x20512d) {
        }
        ['onJointBre' + 'ak']() {
        }
        ['onMouseDow' + 'n']() {
        }
        ['onMouseDra' + 'g']() {
        }
        ['onMouseCli' + 'ck']() {
        }
        ['onMouseUp']() {
        }
        ['onMouseEnt' + 'er']() {
        }
        ['onMouseOve' + 'r']() {
        }
        ['onMouseOut']() {
        }
        ['onUpdate']() {
        }
        ['onLateUpda' + 'te']() {
        }
        ['onPreRende' + 'r']() {
        }
        ['onPostRend' + 'er']() {
        }
        ['onDisable']() {
        }
        ['onDestroy']() {
        }
    }
    class _0x28ee8c {
        constructor(_0x3e5dbd, _0x1aae30, _0x30b4be, _0x4be268) {
            this['_datas'] = [], this['_w'] = _0x3e5dbd, this['_h'] = _0x1aae30, this['_minHeight'] = _0x30b4be, this['_maxHeight'] = _0x4be268;
        }
        static ['creatFromM' + 'esh'](_0x1105e5, _0x570084, _0x568f43, _0x35e807) {
            var _0x36262a = [], _0x2effe7 = [], _0x3714f4 = _0x1105e5['subMeshCou' + 'nt'];
            for (var _0x42e170 = 0x0; _0x42e170 < _0x3714f4; _0x42e170++) {
                var _0x339e8d = _0x1105e5['getSubMesh'](_0x42e170), _0x594e90 = _0x339e8d['_vertexBuf' + 'fer'], _0x167163 = _0x594e90['getFloat32' + 'Data'](), _0x389c40 = [];
                for (var _0x47f8f1 = 0x0; _0x47f8f1 < _0x167163['length']; _0x47f8f1 += _0x594e90['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4) {
                    var _0x469cb4 = new _0x352206(_0x167163[_0x47f8f1 + 0x0], _0x167163[_0x47f8f1 + 0x1], _0x167163[_0x47f8f1 + 0x2]);
                    _0x389c40['push'](_0x469cb4);
                }
                _0x36262a['push'](_0x389c40);
                var _0x1ae37c = _0x339e8d['_indexBuff' + 'er'];
                _0x2effe7['push'](_0x1ae37c['getData']());
            }
            var _0x4bcfb4 = _0x1105e5['bounds'], _0x593808 = _0x4bcfb4['getMin']()['x'], _0x39a35f = _0x4bcfb4['getMin']()['z'], _0x1b7d3c = _0x4bcfb4['getMax']()['x'], _0x322c06 = _0x4bcfb4['getMax']()['z'], _0xb095b9 = _0x4bcfb4['getMin']()['y'], _0x32203c = _0x4bcfb4['getMax']()['y'], _0x2051c2 = _0x1b7d3c - _0x593808, _0x8628ba = _0x322c06 - _0x39a35f, _0xa961e0 = _0x35e807['x'] = _0x2051c2 / (_0x570084 - 0x1), _0x418f5c = _0x35e807['y'] = _0x8628ba / (_0x568f43 - 0x1), _0xe03ccb = new _0x28ee8c(_0x570084, _0x568f43, _0xb095b9, _0x32203c), _0x172b19 = _0x28ee8c['_tempRay'], _0x3ad7ee = _0x172b19['direction'];
            _0x3ad7ee['x'] = 0x0, _0x3ad7ee['y'] = -0x1, _0x3ad7ee['z'] = 0x0;
            const _0x3f6f73 = 0.1;
            var _0x41721e = _0x32203c + _0x3f6f73;
            _0x172b19['origin']['y'] = _0x41721e;
            for (var _0x3d1a1d = 0x0; _0x3d1a1d < _0x568f43; _0x3d1a1d++) {
                var _0x2a4f00 = _0x39a35f + _0x3d1a1d * _0x418f5c;
                _0xe03ccb['_datas'][_0x3d1a1d] = [];
                for (var _0x1ea8f1 = 0x0; _0x1ea8f1 < _0x570084; _0x1ea8f1++) {
                    var _0x25a0e8 = _0x593808 + _0x1ea8f1 * _0xa961e0, _0x2ab90c = _0x172b19['origin'];
                    _0x2ab90c['x'] = _0x25a0e8, _0x2ab90c['z'] = _0x2a4f00;
                    var _0x349bf0 = _0x28ee8c['_getPositi' + 'on'](_0x172b19, _0x36262a, _0x2effe7);
                    _0xe03ccb['_datas'][_0x3d1a1d][_0x1ea8f1] = _0x349bf0 === Number['MAX_VALUE'] ? NaN : _0x41721e - _0x349bf0;
                }
            }
            return _0xe03ccb;
        }
        static ['createFrom' + 'Image'](_0x59bb65, _0x318fec, _0x46e546) {
            var _0x158aa3 = _0x59bb65['width'], _0x1deda0 = _0x59bb65['height'], _0x5aec44 = new _0x28ee8c(_0x158aa3, _0x1deda0, _0x318fec, _0x46e546), _0x3a538a = (_0x46e546 - _0x318fec) / 0xfe, _0x4c71fa = _0x59bb65['getPixels'](), _0x5c5c90 = 0x0;
            for (var _0x2c168f = 0x0; _0x2c168f < _0x1deda0; _0x2c168f++) {
                var _0x309d5b = _0x5aec44['_datas'][_0x2c168f] = [];
                for (var _0x43d34b = 0x0; _0x43d34b < _0x158aa3; _0x43d34b++) {
                    var _0x3d2256 = _0x4c71fa[_0x5c5c90++], _0x3e2d0c = _0x4c71fa[_0x5c5c90++], _0x3e8e27 = _0x4c71fa[_0x5c5c90++], _0x24d776 = _0x4c71fa[_0x5c5c90++];
                    if (_0x3d2256 == 0xff && _0x3e2d0c == 0xff && _0x3e8e27 == 0xff && _0x24d776 == 0xff)
                        _0x309d5b[_0x43d34b] = NaN;
                    else
                        _0x309d5b[_0x43d34b] = (_0x3d2256 + _0x3e2d0c + _0x3e8e27) / 0x3 * _0x3a538a + _0x318fec;
                }
            }
            return _0x5aec44;
        }
        static ['_getPositi' + 'on'](_0x298521, _0x2d7d22, _0x55928c) {
            var _0x518fba = Number['MAX_VALUE'];
            for (var _0x289152 = 0x0; _0x289152 < _0x2d7d22['length']; _0x289152++) {
                var _0x552416 = _0x2d7d22[_0x289152], _0x13f719 = _0x55928c[_0x289152];
                for (var _0x4a3f14 = 0x0; _0x4a3f14 < _0x13f719['length']; _0x4a3f14 += 0x3) {
                    var _0xf481d8 = _0x552416[_0x13f719[_0x4a3f14 + 0x0]], _0xb7fc03 = _0x552416[_0x13f719[_0x4a3f14 + 0x1]], _0x3d4e83 = _0x552416[_0x13f719[_0x4a3f14 + 0x2]], _0x3228a3 = _0x42fa6d['rayInterse' + 'ctsTriangl' + 'e'](_0x298521, _0xf481d8, _0xb7fc03, _0x3d4e83);
                    !isNaN(_0x3228a3) && _0x3228a3 < _0x518fba && (_0x518fba = _0x3228a3);
                }
            }
            return _0x518fba;
        }
        get ['width']() {
            return this['_w'];
        }
        get ['height']() {
            return this['_h'];
        }
        get ['maxHeight']() {
            return this['_maxHeight'];
        }
        get ['minHeight']() {
            return this['_minHeight'];
        }
        ['_inBounds'](_0x52998a, _0x1913fd) {
            return _0x52998a >= 0x0 && _0x52998a < this['_h'] && _0x1913fd >= 0x0 && _0x1913fd < this['_w'];
        }
        ['getHeight'](_0x1c9f16, _0x5a3478) {
            if (this['_inBounds'](_0x1c9f16, _0x5a3478))
                return this['_datas'][_0x1c9f16][_0x5a3478];
            else
                return NaN;
        }
    }
    _0x28ee8c['_tempRay'] = new _0x24d745(new _0x352206(), new _0x352206());
    class _0x61d13f extends _0x1208f9 {
        constructor(_0x39183d, _0x54e7a5, _0x3fc53d = null) {
            super(_0x39183d, _0x3fc53d), this['_heightMap'] = _0x54e7a5, this['_cellSize'] = new _0x378045();
        }
        static ['createFrom' + 'Mesh'](_0x5cb4b6, _0xd2611e, _0x1c1163, _0xa5b1b7 = null) {
            var _0x4da0fe = new _0x61d13f(_0x5cb4b6, null, _0xa5b1b7);
            return _0x4da0fe['_initCreat' + 'eFromMesh'](_0xd2611e, _0x1c1163), _0x4da0fe;
        }
        static ['createFrom' + 'MeshAndHei' + 'ghtMap'](_0x3abeba, _0x334b75, _0x5cb40f, _0x2b9288, _0x22b416 = null) {
            var _0x1be57d = new _0x61d13f(_0x3abeba, null, _0x22b416);
            return _0x1be57d['_initCreat' + 'eFromMeshH' + 'eightMap'](_0x334b75, _0x5cb40f, _0x2b9288), _0x1be57d;
        }
        get ['minX']() {
            var _0x5884c8 = this['transform']['worldMatri' + 'x'], _0x507d91 = _0x5884c8['elements'];
            return this['_minX'] * this['_getScaleX']() + _0x507d91[0xc];
        }
        get ['minZ']() {
            var _0x3668f6 = this['transform']['worldMatri' + 'x'], _0x18d3e3 = _0x3668f6['elements'];
            return this['_minZ'] * this['_getScaleZ']() + _0x18d3e3[0xe];
        }
        get ['width']() {
            return (this['_heightMap']['width'] - 0x1) * this['_cellSize']['x'] * this['_getScaleX']();
        }
        get ['depth']() {
            return (this['_heightMap']['height'] - 0x1) * this['_cellSize']['y'] * this['_getScaleZ']();
        }
        ['_disableRo' + 'tation']() {
            var _0x8811cb = this['transform']['rotation'];
            _0x8811cb['x'] = 0x0, _0x8811cb['y'] = 0x0, _0x8811cb['z'] = 0x0, _0x8811cb['w'] = 0x1, this['transform']['rotation'] = _0x8811cb;
        }
        ['_getScaleX']() {
            var _0x4a3f0b = this['transform']['worldMatri' + 'x'], _0x42748c = _0x4a3f0b['elements'], _0x58e48e = _0x42748c[0x0], _0x1f2c53 = _0x42748c[0x1], _0x592dfc = _0x42748c[0x2];
            return Math['sqrt'](_0x58e48e * _0x58e48e + _0x1f2c53 * _0x1f2c53 + _0x592dfc * _0x592dfc);
        }
        ['_getScaleZ']() {
            var _0x5b82cc = this['transform']['worldMatri' + 'x'], _0x38c68f = _0x5b82cc['elements'], _0x53328d = _0x38c68f[0x8], _0xe87d22 = _0x38c68f[0x9], _0x159346 = _0x38c68f[0xa];
            return Math['sqrt'](_0x53328d * _0x53328d + _0xe87d22 * _0xe87d22 + _0x159346 * _0x159346);
        }
        ['_initCreat' + 'eFromMesh'](_0x5f47bd, _0x5e0675) {
            this['_heightMap'] = _0x28ee8c['creatFromM' + 'esh'](this['meshFilter']['sharedMesh'], _0x5f47bd, _0x5e0675, this['_cellSize']);
            var _0x567c9b = this['meshFilter']['sharedMesh']['bounds'], _0x3a84e3 = _0x567c9b['getMin'](), _0xcce016 = _0x567c9b['getMax']();
            this['_minX'] = _0x3a84e3['x'], this['_minZ'] = _0x3a84e3['z'];
        }
        ['_initCreat' + 'eFromMeshH' + 'eightMap'](_0x2a70bc, _0x3842e1, _0x518cbe) {
            var _0x49b976 = this['meshFilter']['sharedMesh']['bounds'];
            this['_heightMap'] = _0x28ee8c['createFrom' + 'Image'](_0x2a70bc, _0x3842e1, _0x518cbe), this['_computeCe' + 'llSize'](_0x49b976);
            var _0x47d1cd = _0x49b976['getMin'](), _0x5c3471 = _0x49b976['getMax']();
            this['_minX'] = _0x47d1cd['x'], this['_minZ'] = _0x47d1cd['z'];
        }
        ['_computeCe' + 'llSize'](_0x1a896a) {
            var _0x2877b1 = _0x1a896a['getMin'](), _0x5446f2 = _0x1a896a['getMax'](), _0x2dbec4 = _0x2877b1['x'], _0x191713 = _0x2877b1['z'], _0x349a43 = _0x5446f2['x'], _0x12a18a = _0x5446f2['z'], _0x3d2118 = _0x349a43 - _0x2dbec4, _0x15ddcf = _0x12a18a - _0x191713;
            this['_cellSize']['x'] = _0x3d2118 / (this['_heightMap']['width'] - 0x1), this['_cellSize']['y'] = _0x15ddcf / (this['_heightMap']['height'] - 0x1);
        }
        ['_update'](_0x1a73b1) {
            this['_disableRo' + 'tation']();
        }
        ['getHeight'](_0x56a2d1, _0x2df43c) {
            _0x61d13f['_tempVecto' + 'r3']['x'] = _0x56a2d1, _0x61d13f['_tempVecto' + 'r3']['y'] = 0x0, _0x61d13f['_tempVecto' + 'r3']['z'] = _0x2df43c, this['_disableRo' + 'tation']();
            var _0x490d36 = this['transform']['worldMatri' + 'x'];
            _0x490d36['invert'](_0x61d13f['_tempMatri' + 'x4x4']), _0x352206['transformC' + 'oordinate'](_0x61d13f['_tempVecto' + 'r3'], _0x61d13f['_tempMatri' + 'x4x4'], _0x61d13f['_tempVecto' + 'r3']), _0x56a2d1 = _0x61d13f['_tempVecto' + 'r3']['x'], _0x2df43c = _0x61d13f['_tempVecto' + 'r3']['z'];
            var _0x8a7edf = (_0x56a2d1 - this['_minX']) / this['_cellSize']['x'], _0xe34a4b = (_0x2df43c - this['_minZ']) / this['_cellSize']['y'], _0x12f7cf = Math['floor'](_0xe34a4b), _0xf7e949 = Math['floor'](_0x8a7edf), _0x46e1b2 = _0x8a7edf - _0xf7e949, _0x35fa21 = _0xe34a4b - _0x12f7cf, _0x2c78ac, _0x8a03c0, _0x2919ee = _0x490d36['elements'], _0x2cebf8 = _0x2919ee[0x4], _0x25ed78 = _0x2919ee[0x5], _0x38db93 = _0x2919ee[0x6], _0x5845d4 = Math['sqrt'](_0x2cebf8 * _0x2cebf8 + _0x25ed78 * _0x25ed78 + _0x38db93 * _0x38db93), _0x276c84 = _0x2919ee[0xd], _0x17d6cd = this['_heightMap']['getHeight'](_0x12f7cf, _0xf7e949 + 0x1), _0x26896d = this['_heightMap']['getHeight'](_0x12f7cf + 0x1, _0xf7e949);
            if (isNaN(_0x17d6cd) || isNaN(_0x26896d))
                return NaN;
            if (_0x46e1b2 + _0x35fa21 <= 0x1) {
                var _0x53d9cf = this['_heightMap']['getHeight'](_0x12f7cf, _0xf7e949);
                if (isNaN(_0x53d9cf))
                    return NaN;
                return _0x2c78ac = _0x17d6cd - _0x53d9cf, _0x8a03c0 = _0x26896d - _0x53d9cf, (_0x53d9cf + _0x46e1b2 * _0x2c78ac + _0x35fa21 * _0x8a03c0) * _0x5845d4 + _0x276c84;
            } else {
                var _0x3dedb6 = this['_heightMap']['getHeight'](_0x12f7cf + 0x1, _0xf7e949 + 0x1);
                if (isNaN(_0x3dedb6))
                    return NaN;
                return _0x2c78ac = _0x26896d - _0x3dedb6, _0x8a03c0 = _0x17d6cd - _0x3dedb6, (_0x3dedb6 + (0x1 - _0x46e1b2) * _0x2c78ac + (0x1 - _0x35fa21) * _0x8a03c0) * _0x5845d4 + _0x276c84;
            }
        }
    }
    _0x61d13f['_tempVecto' + 'r3'] = new _0x352206(), _0x61d13f['_tempMatri' + 'x4x4'] = new _0x4c2288();
    class _0x3c34e7 {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0xc);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x3;
        }
        ['add'](_0xa29d3, _0x5e2da9) {
            this['_currentLe' + 'ngth'] < 0x8 ? (this['_currentLe' + 'ngth'] === 0x6 && _0xa29d3 !== 0x1 && (_0xa29d3 = 0x1, console['log']('GradientDa' + 'taVector2\x20' + 'warning:th' + 'e\x20forth\x20ke' + 'y\x20is\x20\x20be\x20f' + 'orce\x20set\x20t' + 'o\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0xa29d3, this['_elements'][this['_currentLe' + 'ngth']++] = _0x5e2da9['x'], this['_elements'][this['_currentLe' + 'ngth']++] = _0x5e2da9['y']) : console['log']('GradientDa' + 'taVector2\x20' + 'warning:da' + 'ta\x20count\x20m' + 'ust\x20lessEq' + 'ual\x20than\x204');
        }
        ['cloneTo'](_0x17306f) {
            var _0x2a4035 = _0x17306f;
            _0x2a4035['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            var _0x681d4c = _0x2a4035['_elements'];
            for (var _0x5640a3 = 0x0, _0x2933b7 = this['_elements']['length']; _0x5640a3 < _0x2933b7; _0x5640a3++) {
                _0x681d4c[_0x5640a3] = this['_elements'][_0x5640a3];
            }
        }
        ['clone']() {
            var _0x584416 = new _0x3c34e7();
            return this['cloneTo'](_0x584416), _0x584416;
        }
    }
    class _0x1a1679 {
        constructor() {
            this['startPosit' + 'ion'] = new _0x352206(), this['endPositio' + 'n'] = new _0x352206(), this['startColor'] = new _0x5525ce(), this['endColor'] = new _0x5525ce();
        }
        ['cloneTo'](_0x5b19cd) {
            this['startPosit' + 'ion']['cloneTo'](_0x5b19cd['startPosit' + 'ion']), this['endPositio' + 'n']['cloneTo'](_0x5b19cd['endPositio' + 'n']), this['startColor']['cloneTo'](_0x5b19cd['startColor']), this['endColor']['cloneTo'](_0x5b19cd['endColor']);
        }
    }
    class _0x4a8f04 {
        constructor() {
        }
        ['render'](_0x4de9e6) {
        }
    }
    class _0x272600 extends _0x4a8f04 {
        constructor() {
            super(), this['_shader'] = null, this['_shaderDat' + 'a'] = new _0x1634f4(), this['_linearCol' + 'or'] = new _0x5525ce(), this['_bloomText' + 'ureTexelSi' + 'ze'] = new _0x18425e(), this['_shaderThr' + 'eshold'] = new _0x18425e(), this['_shaderPar' + 'ams'] = new _0x18425e(), this['_pyramid'] = null, this['_intensity'] = 0x0, this['_threshold'] = 0x1, this['_softKnee'] = 0.5, this['_diffusion'] = 0x7, this['_anamorphi' + 'cRatio'] = 0x0, this['_dirtInten' + 'sity'] = 0x0, this['_shaderSet' + 'ting'] = new _0x18425e(), this['_dirtTileO' + 'ffset'] = new _0x18425e(), this['clamp'] = 0xffc0, this['color'] = new _0x5525ce(0x1, 0x1, 0x1, 0x1), this['fastMode'] = ![], this['dirtTextur' + 'e'] = null, this['_shader'] = _0x18824e['find']('PostProces' + 'sBloom'), this['_pyramid'] = new Array(_0x272600['MAXPYRAMID' + 'SIZE'] * 0x2);
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0x4becf5) {
            this['_intensity'] = Math['max'](_0x4becf5, 0x0);
        }
        get ['threshold']() {
            return this['_threshold'];
        }
        set ['threshold'](_0x257853) {
            this['_threshold'] = Math['max'](_0x257853, 0x0);
        }
        get ['softKnee']() {
            return this['_softKnee'];
        }
        set ['softKnee'](_0x363e69) {
            this['_softKnee'] = Math['min'](Math['max'](_0x363e69, 0x0), 0x1);
        }
        get ['diffusion']() {
            return this['_diffusion'];
        }
        set ['diffusion'](_0x4dbbcc) {
            this['_diffusion'] = Math['min'](Math['max'](_0x4dbbcc, 0x1), 0xa);
        }
        get ['anamorphic' + 'Ratio']() {
            return this['_anamorphi' + 'cRatio'];
        }
        set ['anamorphic' + 'Ratio'](_0x21a19e) {
            this['_anamorphi' + 'cRatio'] = Math['min'](Math['max'](_0x21a19e, -0x1), 0x1);
        }
        get ['dirtIntens' + 'ity']() {
            return this['_dirtInten' + 'sity'];
        }
        set ['dirtIntens' + 'ity'](_0x50dddb) {
            this['_dirtInten' + 'sity'] = Math['max'](_0x50dddb, 0x0);
        }
        ['render'](_0x1febaa) {
            var _0x192e71 = _0x1febaa['command'], _0x10deea = _0x1febaa['camera']['viewport'];
            this['_shaderDat' + 'a']['setTexture'](_0x272600['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'], _0x442335['Texture2D']['whiteTextu' + 're']);
            var _0x33a0c2 = this['_anamorphi' + 'cRatio'], _0xf6878b = _0x33a0c2 < 0x0 ? -_0x33a0c2 : 0x0, _0x1df90e = _0x33a0c2 > 0x0 ? _0x33a0c2 : 0x0, _0x102a75 = Math['floor'](_0x10deea['width'] / (0x2 - _0xf6878b)), _0x49f471 = Math['floor'](_0x10deea['height'] / (0x2 - _0x1df90e)), _0x572a24 = Math['max'](_0x102a75, _0x49f471), _0x5be559;
            _0x5be559 = Math['log2'](_0x572a24) + this['_diffusion'] - 0xa;
            var _0x1d5a13 = Math['floor'](_0x5be559), _0xec194b = Math['min'](Math['max'](_0x1d5a13, 0x1), _0x272600['MAXPYRAMID' + 'SIZE']), _0x5b26e9 = 0.5 + _0x5be559 - _0x1d5a13;
            this['_shaderDat' + 'a']['setNumber'](_0x272600['SHADERVALU' + 'E_SAMPLESC' + 'ALE'], _0x5b26e9);
            var _0x1ccfe8 = _0x5525ce['gammaToLin' + 'earSpace'](this['threshold']), _0x3429f7 = _0x1ccfe8 * this['_softKnee'] + 0.00001;
            this['_shaderThr' + 'eshold']['setValue'](_0x1ccfe8, _0x1ccfe8 - _0x3429f7, _0x3429f7 * 0x2, 0.25 / _0x3429f7), this['_shaderDat' + 'a']['setVector'](_0x272600['SHADERVALU' + 'E_THRESHOL' + 'D'], this['_shaderThr' + 'eshold']);
            var _0xf15f44 = _0x5525ce['gammaToLin' + 'earSpace'](this['clamp']);
            this['_shaderPar' + 'ams']['setValue'](_0xf15f44, 0x0, 0x0, 0x0), this['_shaderDat' + 'a']['setVector'](_0x272600['SHADERVALU' + 'E_PARAMS'], this['_shaderPar' + 'ams']);
            var _0x1d73e2 = this['fastMode'] ? 0x1 : 0x0, _0x3686e2 = _0x1febaa['source'];
            for (var _0x5193f7 = 0x0; _0x5193f7 < _0xec194b; _0x5193f7++) {
                var _0x57f187 = _0x5193f7 * 0x2, _0x443191 = _0x57f187 + 0x1, _0x13cef6 = _0x5193f7 == 0x0 ? _0x272600['SUBSHADER_' + 'PREFILTER1' + '3'] + _0x1d73e2 : _0x272600['SUBSHADER_' + 'DOWNSAMPLE' + '13'] + _0x1d73e2, _0x29d3fc = _0x40e7a5['createFrom' + 'Pool'](_0x102a75, _0x49f471, _0x442335['RenderText' + 'ureFormat']['R8G8B8'], _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']);
                _0x29d3fc['filterMode'] = _0x442335['FilterMode']['Bilinear'], this['_pyramid'][_0x57f187] = _0x29d3fc;
                if (_0x5193f7 !== _0xec194b - 0x1) {
                    var _0x3f4888 = _0x40e7a5['createFrom' + 'Pool'](_0x102a75, _0x49f471, _0x442335['RenderText' + 'ureFormat']['R8G8B8'], _0x442335['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']);
                    _0x3f4888['filterMode'] = _0x442335['FilterMode']['Bilinear'], this['_pyramid'][_0x443191] = _0x3f4888;
                }
                _0x192e71['blitScreen' + 'Triangle'](_0x3686e2, _0x29d3fc, null, this['_shader'], this['_shaderDat' + 'a'], _0x13cef6), _0x3686e2 = _0x29d3fc, _0x102a75 = Math['max'](Math['floor'](_0x102a75 / 0x2), 0x1), _0x49f471 = Math['max'](Math['floor'](_0x49f471 / 0x2), 0x1);
            }
            var _0x24e4b7 = this['_pyramid'][(_0xec194b - 0x1) * 0x2];
            for (_0x5193f7 = _0xec194b - 0x2; _0x5193f7 >= 0x0; _0x5193f7--) {
                _0x57f187 = _0x5193f7 * 0x2, _0x443191 = _0x57f187 + 0x1, _0x29d3fc = this['_pyramid'][_0x57f187], _0x3f4888 = this['_pyramid'][_0x443191], _0x192e71['setShaderD' + 'ataTexture'](this['_shaderDat' + 'a'], _0x272600['SHADERVALU' + 'E_BLOOMTEX'], _0x29d3fc), _0x192e71['blitScreen' + 'Triangle'](_0x24e4b7, _0x3f4888, null, this['_shader'], this['_shaderDat' + 'a'], _0x272600['SUBSHADER_' + 'UPSAMPLETE' + 'NT'] + _0x1d73e2), _0x24e4b7 = _0x3f4888;
            }
            var _0x13ab97 = this['_linearCol' + 'or'];
            this['color']['toLinear'](_0x13ab97);
            var _0x256b00 = Math['pow'](0x2, this['_intensity'] / 0xa) - 0x1, _0x9acc1 = this['_shaderSet' + 'ting'];
            this['_shaderSet' + 'ting']['setValue'](_0x5b26e9, _0x256b00, this['_dirtInten' + 'sity'], _0xec194b);
            var _0xf08278 = this['dirtTextur' + 'e'] ? this['dirtTextur' + 'e'] : _0x442335['Texture2D']['blackTextu' + 're'], _0x3cc400 = _0xf08278['width'] / _0xf08278['height'], _0x58c1ad = _0x10deea['width'] / _0x10deea['height'], _0x51763b = this['_dirtTileO' + 'ffset'];
            if (_0x3cc400 > _0x58c1ad)
                _0x51763b['setValue'](_0x58c1ad / _0x3cc400, 0x1, (0x1 - _0x51763b['x']) * 0.5, 0x0);
            else {
                if (_0x3cc400 < _0x58c1ad)
                    _0x51763b['setValue'](0x1, _0x3cc400 / _0x58c1ad, 0x0, (0x1 - _0x51763b['y']) * 0.5);
            }
            var _0x2d0ae4 = _0x1febaa['compositeS' + 'haderData'];
            if (this['fastMode'])
                _0x2d0ae4['addDefine'](_0x4835e1['SHADERDEFI' + 'NE_BLOOM_L' + 'OW']);
            else
                _0x2d0ae4['addDefine'](_0x4835e1['SHADERDEFI' + 'NE_BLOOM']);
            this['_bloomText' + 'ureTexelSi' + 'ze']['setValue'](0x1 / _0x24e4b7['width'], 0x1 / _0x24e4b7['height'], _0x24e4b7['width'], _0x24e4b7['height']), _0x2d0ae4['setVector'](_0x4835e1['SHADERVALU' + 'E_BLOOM_DI' + 'RTTILEOFFS' + 'ET'], _0x51763b), _0x2d0ae4['setVector'](_0x4835e1['SHADERVALU' + 'E_BLOOM_SE' + 'TTINGS'], _0x9acc1), _0x2d0ae4['setVector'](_0x4835e1['SHADERVALU' + 'E_BLOOM_CO' + 'LOR'], new _0x18425e(_0x13ab97['r'], _0x13ab97['g'], _0x13ab97['b'], _0x13ab97['a'])), _0x2d0ae4['setTexture'](_0x4835e1['SHADERVALU' + 'E_BLOOM_DI' + 'RTTEX'], _0xf08278), _0x2d0ae4['setTexture'](_0x4835e1['SHADERVALU' + 'E_BLOOMTEX'], _0x24e4b7), _0x2d0ae4['setVector'](_0x4835e1['SHADERVALU' + 'E_BLOOMTEX' + '_TEXELSIZE'], this['_bloomText' + 'ureTexelSi' + 'ze']);
            for (_0x5193f7 = 0x0; _0x5193f7 < _0xec194b; _0x5193f7++) {
                _0x57f187 = _0x5193f7 * 0x2, _0x443191 = _0x57f187 + 0x1, _0x40e7a5['recoverToP' + 'ool'](this['_pyramid'][_0x57f187]), _0x5193f7 !== 0x0 && _0x5193f7 !== _0xec194b - 0x1 && _0x40e7a5['recoverToP' + 'ool'](this['_pyramid'][_0x443191]);
            }
            _0x1febaa['deferredRe' + 'leaseTextu' + 'res']['push'](_0x24e4b7);
        }
    }
    _0x272600['SHADERVALU' + 'E_MAINTEX'] = _0x18824e['propertyNa' + 'meToID']('u_MainTex'), _0x272600['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'] = _0x18824e['propertyNa' + 'meToID']('u_AutoExpo' + 'sureTex'), _0x272600['SHADERVALU' + 'E_SAMPLESC' + 'ALE'] = _0x18824e['propertyNa' + 'meToID']('u_SampleSc' + 'ale'), _0x272600['SHADERVALU' + 'E_THRESHOL' + 'D'] = _0x18824e['propertyNa' + 'meToID']('u_Threshol' + 'd'), _0x272600['SHADERVALU' + 'E_PARAMS'] = _0x18824e['propertyNa' + 'meToID']('u_Params'), _0x272600['SHADERVALU' + 'E_BLOOMTEX'] = _0x18824e['propertyNa' + 'meToID']('u_BloomTex'), _0x272600['SUBSHADER_' + 'PREFILTER1' + '3'] = 0x0, _0x272600['SUBSHADER_' + 'PREFILTER4'] = 0x1, _0x272600['SUBSHADER_' + 'DOWNSAMPLE' + '13'] = 0x2, _0x272600['SUBSHADER_' + 'DOWNSAMPLE' + '4'] = 0x3, _0x272600['SUBSHADER_' + 'UPSAMPLETE' + 'NT'] = 0x4, _0x272600['SUBSHADER_' + 'UPSAMPLEBO' + 'X'] = 0x5, _0x272600['MAXPYRAMID' + 'SIZE'] = 0x10;
    class _0x35e69d {
        constructor() {
        }
    }
    class _0x338915 {
        constructor(_0x419149 = 0x0, _0x15c59a = 0x0, _0x33ae23 = 0x0, _0x511ad0 = 0x0) {
            var _0x2b0e22 = this['elements'] = new Float32Array(0x4);
            _0x2b0e22[0x0] = _0x419149, _0x2b0e22[0x1] = _0x15c59a, _0x2b0e22[0x2] = _0x33ae23, _0x2b0e22[0x3] = _0x511ad0;
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x3e76e5) {
            this['elements'][0x0] = _0x3e76e5;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x2b6757) {
            this['elements'][0x1] = _0x2b6757;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x4ed583) {
            this['elements'][0x2] = _0x4ed583;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x4ec151) {
            this['elements'][0x3] = _0x4ec151;
        }
        ['fromArray'](_0x42e840, _0x91cecb = 0x0) {
            this['elements'][0x0] = _0x42e840[_0x91cecb + 0x0], this['elements'][0x1] = _0x42e840[_0x91cecb + 0x1], this['elements'][0x2] = _0x42e840[_0x91cecb + 0x2], this['elements'][0x3] = _0x42e840[_0x91cecb + 0x3];
        }
        ['cloneTo'](_0x537732) {
            var _0x5b3dd8 = _0x537732, _0x5516d8 = _0x5b3dd8['elements'], _0x36f082 = this['elements'];
            _0x5516d8[0x0] = _0x36f082[0x0], _0x5516d8[0x1] = _0x36f082[0x1], _0x5516d8[0x2] = _0x36f082[0x2], _0x5516d8[0x3] = _0x36f082[0x3];
        }
        ['clone']() {
            var _0x4f574d = new _0x338915();
            return this['cloneTo'](_0x4f574d), _0x4f574d;
        }
        static ['lerp'](_0x60106, _0x336e71, _0x385ea0, _0x293593) {
            var _0x36c12f = _0x293593['elements'], _0x49d0ec = _0x60106['elements'], _0x2f6a76 = _0x336e71['elements'], _0x6c36b5 = _0x49d0ec[0x0], _0xef3332 = _0x49d0ec[0x1], _0x4f658c = _0x49d0ec[0x2], _0x40d7c7 = _0x49d0ec[0x3];
            _0x36c12f[0x0] = _0x6c36b5 + _0x385ea0 * (_0x2f6a76[0x0] - _0x6c36b5), _0x36c12f[0x1] = _0xef3332 + _0x385ea0 * (_0x2f6a76[0x1] - _0xef3332), _0x36c12f[0x2] = _0x4f658c + _0x385ea0 * (_0x2f6a76[0x2] - _0x4f658c), _0x36c12f[0x3] = _0x40d7c7 + _0x385ea0 * (_0x2f6a76[0x3] - _0x40d7c7);
        }
        static ['transformB' + 'yM4x4'](_0x41df8b, _0x4a79fd, _0x263b9c) {
            var _0x2c3883 = _0x41df8b['elements'], _0x967c8c = _0x2c3883[0x0], _0x43cfb2 = _0x2c3883[0x1], _0x3238ab = _0x2c3883[0x2], _0x48279c = _0x2c3883[0x3], _0x531a43 = _0x4a79fd['elements'], _0x28cd50 = _0x263b9c['elements'];
            _0x28cd50[0x0] = _0x967c8c * _0x531a43[0x0] + _0x43cfb2 * _0x531a43[0x4] + _0x3238ab * _0x531a43[0x8] + _0x48279c * _0x531a43[0xc], _0x28cd50[0x1] = _0x967c8c * _0x531a43[0x1] + _0x43cfb2 * _0x531a43[0x5] + _0x3238ab * _0x531a43[0x9] + _0x48279c * _0x531a43[0xd], _0x28cd50[0x2] = _0x967c8c * _0x531a43[0x2] + _0x43cfb2 * _0x531a43[0x6] + _0x3238ab * _0x531a43[0xa] + _0x48279c * _0x531a43[0xe], _0x28cd50[0x3] = _0x967c8c * _0x531a43[0x3] + _0x43cfb2 * _0x531a43[0x7] + _0x3238ab * _0x531a43[0xb] + _0x48279c * _0x531a43[0xf];
        }
        static ['equals'](_0x286b08, _0x1d602e) {
            var _0x53a5d9 = _0x286b08['elements'], _0xf5a74 = _0x1d602e['elements'];
            return _0xc6f01['nearEqual'](Math['abs'](_0x53a5d9[0x0]), Math['abs'](_0xf5a74[0x0])) && _0xc6f01['nearEqual'](Math['abs'](_0x53a5d9[0x1]), Math['abs'](_0xf5a74[0x1])) && _0xc6f01['nearEqual'](Math['abs'](_0x53a5d9[0x2]), Math['abs'](_0xf5a74[0x2])) && _0xc6f01['nearEqual'](Math['abs'](_0x53a5d9[0x3]), Math['abs'](_0xf5a74[0x3]));
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x470484, _0x5b4b9b) {
            var _0x46ea62 = _0x470484['elements'], _0x18b29e = _0x5b4b9b['elements'], _0x440668 = _0x470484['length']();
            _0x440668 > 0x0 && (_0x18b29e[0x0] = _0x46ea62[0x0] * _0x440668, _0x18b29e[0x1] = _0x46ea62[0x1] * _0x440668, _0x18b29e[0x2] = _0x46ea62[0x2] * _0x440668, _0x18b29e[0x3] = _0x46ea62[0x3] * _0x440668);
        }
        static ['add'](_0x4d453e, _0x3240c4, _0x99848d) {
            var _0x19cf98 = _0x99848d['elements'], _0x4e1aef = _0x4d453e['elements'], _0x3725af = _0x3240c4['elements'];
            _0x19cf98[0x0] = _0x4e1aef[0x0] + _0x3725af[0x0], _0x19cf98[0x1] = _0x4e1aef[0x1] + _0x3725af[0x1], _0x19cf98[0x2] = _0x4e1aef[0x2] + _0x3725af[0x2], _0x19cf98[0x3] = _0x4e1aef[0x3] + _0x3725af[0x3];
        }
        static ['subtract'](_0x1a71d3, _0x511fb5, _0x59de4a) {
            var _0x83313f = _0x59de4a['elements'], _0x2c46e7 = _0x1a71d3['elements'], _0x442909 = _0x511fb5['elements'];
            _0x83313f[0x0] = _0x2c46e7[0x0] - _0x442909[0x0], _0x83313f[0x1] = _0x2c46e7[0x1] - _0x442909[0x1], _0x83313f[0x2] = _0x2c46e7[0x2] - _0x442909[0x2], _0x83313f[0x3] = _0x2c46e7[0x3] - _0x442909[0x3];
        }
        static ['multiply'](_0x2d620e, _0x80415f, _0x1df8a2) {
            var _0x2f52a2 = _0x1df8a2['elements'], _0x3c5d1d = _0x2d620e['elements'], _0x5e4f5d = _0x80415f['elements'];
            _0x2f52a2[0x0] = _0x3c5d1d[0x0] * _0x5e4f5d[0x0], _0x2f52a2[0x1] = _0x3c5d1d[0x1] * _0x5e4f5d[0x1], _0x2f52a2[0x2] = _0x3c5d1d[0x2] * _0x5e4f5d[0x2], _0x2f52a2[0x3] = _0x3c5d1d[0x3] * _0x5e4f5d[0x3];
        }
        static ['scale'](_0x431c03, _0x5a57a7, _0x3cb794) {
            var _0x324749 = _0x3cb794['elements'], _0x3c013b = _0x431c03['elements'];
            _0x324749[0x0] = _0x3c013b[0x0] * _0x5a57a7, _0x324749[0x1] = _0x3c013b[0x1] * _0x5a57a7, _0x324749[0x2] = _0x3c013b[0x2] * _0x5a57a7, _0x324749[0x3] = _0x3c013b[0x3] * _0x5a57a7;
        }
        static ['Clamp'](_0x3d2fc5, _0x231509, _0x58d1c8, _0x383c8e) {
            var _0x447e72 = _0x3d2fc5['elements'], _0x270480 = _0x447e72[0x0], _0x568b4e = _0x447e72[0x1], _0x10cbc9 = _0x447e72[0x2], _0x511d5f = _0x447e72[0x3], _0x31adae = _0x231509['elements'], _0xe9b99d = _0x31adae[0x0], _0x10b062 = _0x31adae[0x1], _0x408eb4 = _0x31adae[0x2], _0x43c2bb = _0x31adae[0x3], _0x1e9bfa = _0x58d1c8['elements'], _0x3b3268 = _0x1e9bfa[0x0], _0x1d2228 = _0x1e9bfa[0x1], _0x189a24 = _0x1e9bfa[0x2], _0x1c2c18 = _0x1e9bfa[0x3], _0x557139 = _0x383c8e['elements'];
            _0x270480 = _0x270480 > _0x3b3268 ? _0x3b3268 : _0x270480, _0x270480 = _0x270480 < _0xe9b99d ? _0xe9b99d : _0x270480, _0x568b4e = _0x568b4e > _0x1d2228 ? _0x1d2228 : _0x568b4e, _0x568b4e = _0x568b4e < _0x10b062 ? _0x10b062 : _0x568b4e, _0x10cbc9 = _0x10cbc9 > _0x189a24 ? _0x189a24 : _0x10cbc9, _0x10cbc9 = _0x10cbc9 < _0x408eb4 ? _0x408eb4 : _0x10cbc9, _0x511d5f = _0x511d5f > _0x1c2c18 ? _0x1c2c18 : _0x511d5f, _0x511d5f = _0x511d5f < _0x43c2bb ? _0x43c2bb : _0x511d5f, _0x557139[0x0] = _0x270480, _0x557139[0x1] = _0x568b4e, _0x557139[0x2] = _0x10cbc9, _0x557139[0x3] = _0x511d5f;
        }
        static ['distanceSq' + 'uared'](_0x365117, _0x5ec622) {
            var _0x41c5d1 = _0x365117['elements'], _0x1e72cc = _0x5ec622['elements'], _0x36c13c = _0x41c5d1[0x0] - _0x1e72cc[0x0], _0x51945d = _0x41c5d1[0x1] - _0x1e72cc[0x1], _0x5c4261 = _0x41c5d1[0x2] - _0x1e72cc[0x2], _0x3eaf96 = _0x41c5d1[0x3] - _0x1e72cc[0x3];
            return _0x36c13c * _0x36c13c + _0x51945d * _0x51945d + _0x5c4261 * _0x5c4261 + _0x3eaf96 * _0x3eaf96;
        }
        static ['distance'](_0x32f478, _0xf4aa18) {
            var _0x497d35 = _0x32f478['elements'], _0x33704e = _0xf4aa18['elements'], _0xfd413b = _0x497d35[0x0] - _0x33704e[0x0], _0x1835c8 = _0x497d35[0x1] - _0x33704e[0x1], _0x30110a = _0x497d35[0x2] - _0x33704e[0x2], _0x3c5e64 = _0x497d35[0x3] - _0x33704e[0x3];
            return Math['sqrt'](_0xfd413b * _0xfd413b + _0x1835c8 * _0x1835c8 + _0x30110a * _0x30110a + _0x3c5e64 * _0x3c5e64);
        }
        static ['dot'](_0x3435a6, _0x16bf0d) {
            var _0x22fec8 = _0x3435a6['elements'], _0x4ae297 = _0x16bf0d['elements'], _0x5047c5 = _0x22fec8[0x0] * _0x4ae297[0x0] + _0x22fec8[0x1] * _0x4ae297[0x1] + _0x22fec8[0x2] * _0x4ae297[0x2] + _0x22fec8[0x3] * _0x4ae297[0x3];
            return _0x5047c5;
        }
        static ['min'](_0x54ebaf, _0x3b813f, _0x55cf58) {
            var _0x429ba4 = _0x55cf58['elements'], _0x4fdc86 = _0x54ebaf['elements'], _0x5dc19a = _0x3b813f['elements'];
            _0x429ba4[0x0] = Math['min'](_0x4fdc86[0x0], _0x5dc19a[0x0]), _0x429ba4[0x1] = Math['min'](_0x4fdc86[0x1], _0x5dc19a[0x1]), _0x429ba4[0x2] = Math['min'](_0x4fdc86[0x2], _0x5dc19a[0x2]), _0x429ba4[0x3] = Math['min'](_0x4fdc86[0x3], _0x5dc19a[0x3]);
        }
        static ['max'](_0x39ecd9, _0xc2a137, _0x130c23) {
            var _0x39f19b = _0x130c23['elements'], _0x42dd05 = _0x39ecd9['elements'], _0x53b10d = _0xc2a137['elements'];
            _0x39f19b[0x0] = Math['max'](_0x42dd05[0x0], _0x53b10d[0x0]), _0x39f19b[0x1] = Math['max'](_0x42dd05[0x1], _0x53b10d[0x1]), _0x39f19b[0x2] = Math['max'](_0x42dd05[0x2], _0x53b10d[0x2]), _0x39f19b[0x3] = Math['max'](_0x42dd05[0x3], _0x53b10d[0x3]);
        }
    }
    _0x338915['ZERO'] = new _0x338915(), _0x338915['ONE'] = new _0x338915(0x1, 0x1, 0x1, 0x1), _0x338915['UnitX'] = new _0x338915(0x1, 0x0, 0x0, 0x0), _0x338915['UnitY'] = new _0x338915(0x0, 0x1, 0x0, 0x0), _0x338915['UnitZ'] = new _0x338915(0x0, 0x0, 0x1, 0x0), _0x338915['UnitW'] = new _0x338915(0x0, 0x0, 0x0, 0x1);
    class _0x31054c {
        constructor(_0x3e0357 = 0x0, _0x45815b = 0x0, _0x3d5c44 = 0x0, _0x32368a = null) {
            var _0x216953;
            _0x32368a ? _0x216953 = _0x32368a : _0x216953 = new Float32Array(0x3), this['elements'] = _0x216953, _0x216953[0x0] = _0x3e0357, _0x216953[0x1] = _0x45815b, _0x216953[0x2] = _0x3d5c44;
        }
        static ['distanceSq' + 'uared'](_0x367d68, _0x30ef31) {
            var _0x45dc02 = _0x367d68['elements'], _0x47b15c = _0x30ef31['elements'], _0x3bb6d0 = _0x45dc02[0x0] - _0x47b15c[0x0], _0xcd6b0e = _0x45dc02[0x1] - _0x47b15c[0x1], _0x17e1ba = _0x45dc02[0x2] - _0x47b15c[0x2];
            return _0x3bb6d0 * _0x3bb6d0 + _0xcd6b0e * _0xcd6b0e + _0x17e1ba * _0x17e1ba;
        }
        static ['distance'](_0x53d8b5, _0x491712) {
            var _0x46ddf8 = _0x53d8b5['elements'], _0x3a75e1 = _0x491712['elements'], _0x2bba0d = _0x46ddf8[0x0] - _0x3a75e1[0x0], _0x37473c = _0x46ddf8[0x1] - _0x3a75e1[0x1], _0x5d59fe = _0x46ddf8[0x2] - _0x3a75e1[0x2];
            return Math['sqrt'](_0x2bba0d * _0x2bba0d + _0x37473c * _0x37473c + _0x5d59fe * _0x5d59fe);
        }
        static ['min'](_0x43fb23, _0x33b8ff, _0x3419b0) {
            var _0x20865c = _0x3419b0['elements'], _0x17ff7a = _0x43fb23['elements'], _0x5800db = _0x33b8ff['elements'];
            _0x20865c[0x0] = Math['min'](_0x17ff7a[0x0], _0x5800db[0x0]), _0x20865c[0x1] = Math['min'](_0x17ff7a[0x1], _0x5800db[0x1]), _0x20865c[0x2] = Math['min'](_0x17ff7a[0x2], _0x5800db[0x2]);
        }
        static ['max'](_0x3e42a9, _0x3ec63e, _0x51e534) {
            var _0x2160fb = _0x51e534['elements'], _0x3bf6dd = _0x3e42a9['elements'], _0x19f466 = _0x3ec63e['elements'];
            _0x2160fb[0x0] = Math['max'](_0x3bf6dd[0x0], _0x19f466[0x0]), _0x2160fb[0x1] = Math['max'](_0x3bf6dd[0x1], _0x19f466[0x1]), _0x2160fb[0x2] = Math['max'](_0x3bf6dd[0x2], _0x19f466[0x2]);
        }
        static ['transformQ' + 'uat'](_0x2e1746, _0x3c5819, _0x3fe462) {
            var _0x3401f5 = _0x3fe462['elements'], _0x288494 = _0x2e1746['elements'], _0x701f1c = _0x3c5819['elements'], _0x1eb30b = _0x288494[0x0], _0x1c30cc = _0x288494[0x1], _0x464841 = _0x288494[0x2], _0x3cb0da = _0x701f1c[0x0], _0x554e1e = _0x701f1c[0x1], _0x270f4c = _0x701f1c[0x2], _0x53a921 = _0x701f1c[0x3], _0x583e97 = _0x53a921 * _0x1eb30b + _0x554e1e * _0x464841 - _0x270f4c * _0x1c30cc, _0x4bebad = _0x53a921 * _0x1c30cc + _0x270f4c * _0x1eb30b - _0x3cb0da * _0x464841, _0x36191d = _0x53a921 * _0x464841 + _0x3cb0da * _0x1c30cc - _0x554e1e * _0x1eb30b, _0x5c0610 = -_0x3cb0da * _0x1eb30b - _0x554e1e * _0x1c30cc - _0x270f4c * _0x464841;
            _0x3401f5[0x0] = _0x583e97 * _0x53a921 + _0x5c0610 * -_0x3cb0da + _0x4bebad * -_0x270f4c - _0x36191d * -_0x554e1e, _0x3401f5[0x1] = _0x4bebad * _0x53a921 + _0x5c0610 * -_0x554e1e + _0x36191d * -_0x3cb0da - _0x583e97 * -_0x270f4c, _0x3401f5[0x2] = _0x36191d * _0x53a921 + _0x5c0610 * -_0x270f4c + _0x583e97 * -_0x554e1e - _0x4bebad * -_0x3cb0da;
        }
        static ['scalarLeng' + 'th'](_0x39fadd) {
            var _0x3c9690 = _0x39fadd['elements'], _0x18476f = _0x3c9690[0x0], _0x13cd02 = _0x3c9690[0x1], _0x2c6115 = _0x3c9690[0x2];
            return Math['sqrt'](_0x18476f * _0x18476f + _0x13cd02 * _0x13cd02 + _0x2c6115 * _0x2c6115);
        }
        static ['scalarLeng' + 'thSquared'](_0x296c65) {
            var _0x2fe603 = _0x296c65['elements'], _0x695dd9 = _0x2fe603[0x0], _0x53afe9 = _0x2fe603[0x1], _0x3efaf5 = _0x2fe603[0x2];
            return _0x695dd9 * _0x695dd9 + _0x53afe9 * _0x53afe9 + _0x3efaf5 * _0x3efaf5;
        }
        static ['normalize'](_0x245435, _0x3975dd) {
            var _0x52212c = _0x245435['elements'], _0x57b9a1 = _0x3975dd['elements'], _0x1b401f = _0x52212c[0x0], _0x281450 = _0x52212c[0x1], _0xc5ad9b = _0x52212c[0x2], _0x322643 = _0x1b401f * _0x1b401f + _0x281450 * _0x281450 + _0xc5ad9b * _0xc5ad9b;
            _0x322643 > 0x0 && (_0x322643 = 0x1 / Math['sqrt'](_0x322643), _0x57b9a1[0x0] = _0x52212c[0x0] * _0x322643, _0x57b9a1[0x1] = _0x52212c[0x1] * _0x322643, _0x57b9a1[0x2] = _0x52212c[0x2] * _0x322643);
        }
        static ['multiply'](_0x59d2f0, _0x32ed50, _0x1c1b02) {
            var _0x5ab94f = _0x1c1b02['elements'], _0x1bf003 = _0x59d2f0['elements'], _0x1cd165 = _0x32ed50['elements'];
            _0x5ab94f[0x0] = _0x1bf003[0x0] * _0x1cd165[0x0], _0x5ab94f[0x1] = _0x1bf003[0x1] * _0x1cd165[0x1], _0x5ab94f[0x2] = _0x1bf003[0x2] * _0x1cd165[0x2];
        }
        static ['scale'](_0x14f1cc, _0x597c1e, _0x877a50) {
            var _0x1c3d1a = _0x877a50['elements'], _0xe68e01 = _0x14f1cc['elements'];
            _0x1c3d1a[0x0] = _0xe68e01[0x0] * _0x597c1e, _0x1c3d1a[0x1] = _0xe68e01[0x1] * _0x597c1e, _0x1c3d1a[0x2] = _0xe68e01[0x2] * _0x597c1e;
        }
        static ['lerp'](_0x3d1735, _0x22e652, _0x221c9a, _0x178af0) {
            var _0x437a17 = _0x178af0['elements'], _0x579d7c = _0x3d1735['elements'], _0x44fa32 = _0x22e652['elements'], _0x5a5645 = _0x579d7c[0x0], _0x209087 = _0x579d7c[0x1], _0x6a875f = _0x579d7c[0x2];
            _0x437a17[0x0] = _0x5a5645 + _0x221c9a * (_0x44fa32[0x0] - _0x5a5645), _0x437a17[0x1] = _0x209087 + _0x221c9a * (_0x44fa32[0x1] - _0x209087), _0x437a17[0x2] = _0x6a875f + _0x221c9a * (_0x44fa32[0x2] - _0x6a875f);
        }
        static ['transformV' + '3ToV3'](_0x16d05c, _0x1ccf5b, _0x36f0f6) {
            var _0x5b9a6c = _0x31054c['_tempVecto' + 'r4'];
            _0x31054c['transformV' + '3ToV4'](_0x16d05c, _0x1ccf5b, _0x5b9a6c);
            var _0x15c141 = _0x5b9a6c['elements'], _0x144970 = _0x36f0f6['elements'];
            _0x144970[0x0] = _0x15c141[0x0], _0x144970[0x1] = _0x15c141[0x1], _0x144970[0x2] = _0x15c141[0x2];
        }
        static ['transformV' + '3ToV4'](_0x1eee8b, _0x5b77c1, _0x15c386) {
            var _0xedd71c = _0x1eee8b['elements'], _0x906a11 = _0xedd71c[0x0], _0x40e4cf = _0xedd71c[0x1], _0x3e36c7 = _0xedd71c[0x2], _0x11033b = _0x5b77c1['elements'], _0x570a38 = _0x15c386['elements'];
            _0x570a38[0x0] = _0x906a11 * _0x11033b[0x0] + _0x40e4cf * _0x11033b[0x4] + _0x3e36c7 * _0x11033b[0x8] + _0x11033b[0xc], _0x570a38[0x1] = _0x906a11 * _0x11033b[0x1] + _0x40e4cf * _0x11033b[0x5] + _0x3e36c7 * _0x11033b[0x9] + _0x11033b[0xd], _0x570a38[0x2] = _0x906a11 * _0x11033b[0x2] + _0x40e4cf * _0x11033b[0x6] + _0x3e36c7 * _0x11033b[0xa] + _0x11033b[0xe], _0x570a38[0x3] = _0x906a11 * _0x11033b[0x3] + _0x40e4cf * _0x11033b[0x7] + _0x3e36c7 * _0x11033b[0xb] + _0x11033b[0xf];
        }
        static ['TransformN' + 'ormal'](_0x2ab860, _0x13466a, _0x4b6e53) {
            var _0x4006b8 = _0x2ab860['elements'], _0x6cf588 = _0x4006b8[0x0], _0x49e974 = _0x4006b8[0x1], _0x3b3df3 = _0x4006b8[0x2], _0x136ca7 = _0x13466a['elements'], _0x3a2ddc = _0x4b6e53['elements'];
            _0x3a2ddc[0x0] = _0x6cf588 * _0x136ca7[0x0] + _0x49e974 * _0x136ca7[0x4] + _0x3b3df3 * _0x136ca7[0x8], _0x3a2ddc[0x1] = _0x6cf588 * _0x136ca7[0x1] + _0x49e974 * _0x136ca7[0x5] + _0x3b3df3 * _0x136ca7[0x9], _0x3a2ddc[0x2] = _0x6cf588 * _0x136ca7[0x2] + _0x49e974 * _0x136ca7[0x6] + _0x3b3df3 * _0x136ca7[0xa];
        }
        static ['transformC' + 'oordinate'](_0x2811ef, _0x593455, _0xec798e) {
            var _0x2a70b4 = _0x2811ef['elements'], _0x13ee07 = _0x2a70b4[0x0], _0x37b767 = _0x2a70b4[0x1], _0x3c8232 = _0x2a70b4[0x2], _0x1caa4c = _0x593455['elements'], _0x4afc7e = _0x13ee07 * _0x1caa4c[0x3] + _0x37b767 * _0x1caa4c[0x7] + _0x3c8232 * _0x1caa4c[0xb] + _0x1caa4c[0xf], _0x401d4a = _0xec798e['elements'];
            _0x401d4a[0x0] = _0x13ee07 * _0x1caa4c[0x0] + _0x37b767 * _0x1caa4c[0x4] + _0x3c8232 * _0x1caa4c[0x8] + _0x1caa4c[0xc] / _0x4afc7e, _0x401d4a[0x1] = _0x13ee07 * _0x1caa4c[0x1] + _0x37b767 * _0x1caa4c[0x5] + _0x3c8232 * _0x1caa4c[0x9] + _0x1caa4c[0xd] / _0x4afc7e, _0x401d4a[0x2] = _0x13ee07 * _0x1caa4c[0x2] + _0x37b767 * _0x1caa4c[0x6] + _0x3c8232 * _0x1caa4c[0xa] + _0x1caa4c[0xe] / _0x4afc7e;
        }
        static ['Clamp'](_0x3763ad, _0x2b2cb7, _0x30cd67, _0x3d86d2) {
            var _0x561e52 = _0x3763ad['elements'], _0x261c3a = _0x561e52[0x0], _0x27ebe1 = _0x561e52[0x1], _0x3cbf9b = _0x561e52[0x2], _0xd8e5f2 = _0x2b2cb7['elements'], _0x58248c = _0xd8e5f2[0x0], _0x44ea41 = _0xd8e5f2[0x1], _0x186958 = _0xd8e5f2[0x2], _0x219130 = _0x30cd67['elements'], _0x2461d4 = _0x219130[0x0], _0x55b75f = _0x219130[0x1], _0x2d76cc = _0x219130[0x2], _0x49f488 = _0x3d86d2['elements'];
            _0x261c3a = _0x261c3a > _0x2461d4 ? _0x2461d4 : _0x261c3a, _0x261c3a = _0x261c3a < _0x58248c ? _0x58248c : _0x261c3a, _0x27ebe1 = _0x27ebe1 > _0x55b75f ? _0x55b75f : _0x27ebe1, _0x27ebe1 = _0x27ebe1 < _0x44ea41 ? _0x44ea41 : _0x27ebe1, _0x3cbf9b = _0x3cbf9b > _0x2d76cc ? _0x2d76cc : _0x3cbf9b, _0x3cbf9b = _0x3cbf9b < _0x186958 ? _0x186958 : _0x3cbf9b, _0x49f488[0x0] = _0x261c3a, _0x49f488[0x1] = _0x27ebe1, _0x49f488[0x2] = _0x3cbf9b;
        }
        static ['add'](_0x5af068, _0x4f6b1c, _0x574b5b) {
            var _0xbc91f9 = _0x574b5b['elements'], _0x50cd4e = _0x5af068['elements'], _0x2820ab = _0x4f6b1c['elements'];
            _0xbc91f9[0x0] = _0x50cd4e[0x0] + _0x2820ab[0x0], _0xbc91f9[0x1] = _0x50cd4e[0x1] + _0x2820ab[0x1], _0xbc91f9[0x2] = _0x50cd4e[0x2] + _0x2820ab[0x2];
        }
        static ['subtract'](_0x3e2a1a, _0x4b5964, _0x187929) {
            var _0x2d753a = _0x187929['elements'], _0x50dd22 = _0x3e2a1a['elements'], _0x147a6b = _0x4b5964['elements'];
            _0x2d753a[0x0] = _0x50dd22[0x0] - _0x147a6b[0x0], _0x2d753a[0x1] = _0x50dd22[0x1] - _0x147a6b[0x1], _0x2d753a[0x2] = _0x50dd22[0x2] - _0x147a6b[0x2];
        }
        static ['cross'](_0x4bd4e5, _0x512a05, _0x24519b) {
            var _0x3a6d9c = _0x4bd4e5['elements'], _0x4ea6d2 = _0x512a05['elements'], _0x1d52d1 = _0x24519b['elements'], _0x10ee4b = _0x3a6d9c[0x0], _0x4b108d = _0x3a6d9c[0x1], _0x2163f0 = _0x3a6d9c[0x2], _0x2f012a = _0x4ea6d2[0x0], _0x33e88f = _0x4ea6d2[0x1], _0x5bd8fb = _0x4ea6d2[0x2];
            _0x1d52d1[0x0] = _0x4b108d * _0x5bd8fb - _0x2163f0 * _0x33e88f, _0x1d52d1[0x1] = _0x2163f0 * _0x2f012a - _0x10ee4b * _0x5bd8fb, _0x1d52d1[0x2] = _0x10ee4b * _0x33e88f - _0x4b108d * _0x2f012a;
        }
        static ['dot'](_0x1d9661, _0x1016ec) {
            var _0x3d931f = _0x1d9661['elements'], _0xe3c46d = _0x1016ec['elements'], _0x2140ba = _0x3d931f[0x0] * _0xe3c46d[0x0] + _0x3d931f[0x1] * _0xe3c46d[0x1] + _0x3d931f[0x2] * _0xe3c46d[0x2];
            return _0x2140ba;
        }
        static ['equals'](_0x48bff7, _0x4d05c6) {
            var _0x4804bb = _0x48bff7['elements'], _0x1a930c = _0x4d05c6['elements'];
            return _0xc6f01['nearEqual'](_0x4804bb[0x0], _0x1a930c[0x0]) && _0xc6f01['nearEqual'](_0x4804bb[0x1], _0x1a930c[0x1]) && _0xc6f01['nearEqual'](_0x4804bb[0x2], _0x1a930c[0x2]);
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x89f2de) {
            this['elements'][0x0] = _0x89f2de;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x12252c) {
            this['elements'][0x1] = _0x12252c;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x3f6443) {
            this['elements'][0x2] = _0x3f6443;
        }
        ['setValue'](_0x2bc4d0, _0x13d00c, _0x24316e) {
            this['elements'][0x0] = _0x2bc4d0, this['elements'][0x1] = _0x13d00c, this['elements'][0x2] = _0x24316e;
        }
        ['fromArray'](_0x1ec817, _0xf959ce = 0x0) {
            this['elements'][0x0] = _0x1ec817[_0xf959ce + 0x0], this['elements'][0x1] = _0x1ec817[_0xf959ce + 0x1], this['elements'][0x2] = _0x1ec817[_0xf959ce + 0x2];
        }
        ['cloneTo'](_0x440792) {
            var _0x10144f = _0x440792, _0x4ba1f9 = _0x10144f['elements'], _0x18c809 = this['elements'];
            _0x4ba1f9[0x0] = _0x18c809[0x0], _0x4ba1f9[0x1] = _0x18c809[0x1], _0x4ba1f9[0x2] = _0x18c809[0x2];
        }
        ['clone']() {
            var _0x330e28 = new _0x31054c();
            return this['cloneTo'](_0x330e28), _0x330e28;
        }
        ['toDefault']() {
            this['elements'][0x0] = 0x0, this['elements'][0x1] = 0x0, this['elements'][0x2] = 0x0;
        }
    }
    _0x31054c['_tempVecto' + 'r4'] = new _0x338915(), _0x31054c['ZERO'] = new _0x31054c(0x0, 0x0, 0x0), _0x31054c['ONE'] = new _0x31054c(0x1, 0x1, 0x1), _0x31054c['NegativeUn' + 'itX'] = new _0x31054c(-0x1, 0x0, 0x0), _0x31054c['UnitX'] = new _0x31054c(0x1, 0x0, 0x0), _0x31054c['UnitY'] = new _0x31054c(0x0, 0x1, 0x0), _0x31054c['UnitZ'] = new _0x31054c(0x0, 0x0, 0x1), _0x31054c['ForwardRH'] = new _0x31054c(0x0, 0x0, -0x1), _0x31054c['ForwardLH'] = new _0x31054c(0x0, 0x0, 0x1), _0x31054c['Up'] = new _0x31054c(0x0, 0x1, 0x0), _0x31054c['NAN'] = new _0x31054c(NaN, NaN, NaN);
    class _0x44b14d {
        constructor(_0x679989 = 0x0, _0x581d62 = 0x0, _0x87ee89 = 0x0, _0x4cb024 = 0x1, _0x454885 = null) {
            var _0x3745d3;
            _0x454885 ? _0x3745d3 = _0x454885 : _0x3745d3 = new Float32Array(0x4), _0x3745d3[0x0] = _0x679989, _0x3745d3[0x1] = _0x581d62, _0x3745d3[0x2] = _0x87ee89, _0x3745d3[0x3] = _0x4cb024, this['elements'] = _0x3745d3;
        }
        static ['_dotArray'](_0x27db83, _0x26a721) {
            return _0x27db83[0x0] * _0x26a721[0x0] + _0x27db83[0x1] * _0x26a721[0x1] + _0x27db83[0x2] * _0x26a721[0x2] + _0x27db83[0x3] * _0x26a721[0x3];
        }
        static ['_normalize' + 'Array'](_0x451ff5, _0x34fa71) {
            var _0x382d72 = _0x451ff5[0x0], _0x527015 = _0x451ff5[0x1], _0x34a87c = _0x451ff5[0x2], _0x3f9f0c = _0x451ff5[0x3], _0x52216e = _0x382d72 * _0x382d72 + _0x527015 * _0x527015 + _0x34a87c * _0x34a87c + _0x3f9f0c * _0x3f9f0c;
            _0x52216e > 0x0 && (_0x52216e = 0x1 / Math['sqrt'](_0x52216e), _0x34fa71[0x0] = _0x382d72 * _0x52216e, _0x34fa71[0x1] = _0x527015 * _0x52216e, _0x34fa71[0x2] = _0x34a87c * _0x52216e, _0x34fa71[0x3] = _0x3f9f0c * _0x52216e);
        }
        static ['_lerpArray'](_0x4cd12c, _0x2314c2, _0x3f47fd, _0xd9caf4) {
            var _0x4c84a9 = 0x1 - _0x3f47fd;
            _0x44b14d['_dotArray'](_0x4cd12c, _0x2314c2) >= 0x0 ? (_0xd9caf4[0x0] = _0x4c84a9 * _0x4cd12c[0x0] + _0x3f47fd * _0x2314c2[0x0], _0xd9caf4[0x1] = _0x4c84a9 * _0x4cd12c[0x1] + _0x3f47fd * _0x2314c2[0x1], _0xd9caf4[0x2] = _0x4c84a9 * _0x4cd12c[0x2] + _0x3f47fd * _0x2314c2[0x2], _0xd9caf4[0x3] = _0x4c84a9 * _0x4cd12c[0x3] + _0x3f47fd * _0x2314c2[0x3]) : (_0xd9caf4[0x0] = _0x4c84a9 * _0x4cd12c[0x0] - _0x3f47fd * _0x2314c2[0x0], _0xd9caf4[0x1] = _0x4c84a9 * _0x4cd12c[0x1] - _0x3f47fd * _0x2314c2[0x1], _0xd9caf4[0x2] = _0x4c84a9 * _0x4cd12c[0x2] - _0x3f47fd * _0x2314c2[0x2], _0xd9caf4[0x3] = _0x4c84a9 * _0x4cd12c[0x3] - _0x3f47fd * _0x2314c2[0x3]), _0x44b14d['_normalize' + 'Array'](_0xd9caf4, _0xd9caf4);
        }
        static ['createFrom' + 'YawPitchRo' + 'll'](_0x5e3e4c, _0x368748, _0x385cb7, _0x363b8e) {
            var _0x5eaafe = _0x385cb7 * 0.5, _0x838a5e = _0x368748 * 0.5, _0x1c67f8 = _0x5e3e4c * 0.5, _0x4ff574 = Math['sin'](_0x5eaafe), _0x1bb0e6 = Math['cos'](_0x5eaafe), _0x58301a = Math['sin'](_0x838a5e), _0x55ee27 = Math['cos'](_0x838a5e), _0x28afa1 = Math['sin'](_0x1c67f8), _0x51078a = Math['cos'](_0x1c67f8), _0x2faa37 = _0x363b8e['elements'];
            _0x2faa37[0x0] = _0x51078a * _0x58301a * _0x1bb0e6 + _0x28afa1 * _0x55ee27 * _0x4ff574, _0x2faa37[0x1] = _0x28afa1 * _0x55ee27 * _0x1bb0e6 - _0x51078a * _0x58301a * _0x4ff574, _0x2faa37[0x2] = _0x51078a * _0x55ee27 * _0x4ff574 - _0x28afa1 * _0x58301a * _0x1bb0e6, _0x2faa37[0x3] = _0x51078a * _0x55ee27 * _0x1bb0e6 + _0x28afa1 * _0x58301a * _0x4ff574;
        }
        static ['multiply'](_0x1f70fd, _0x16f7cd, _0x13d824) {
            var _0x2da26d = _0x1f70fd['elements'], _0x1b02d1 = _0x16f7cd['elements'], _0x41f3e3 = _0x13d824['elements'], _0xaf156 = _0x2da26d[0x0], _0xb7ab = _0x2da26d[0x1], _0x47d4ac = _0x2da26d[0x2], _0x5af41c = _0x2da26d[0x3], _0x5853e7 = _0x1b02d1[0x0], _0x5eb2ab = _0x1b02d1[0x1], _0x2c2b39 = _0x1b02d1[0x2], _0x57e69d = _0x1b02d1[0x3], _0x501211 = _0xb7ab * _0x2c2b39 - _0x47d4ac * _0x5eb2ab, _0x4852e1 = _0x47d4ac * _0x5853e7 - _0xaf156 * _0x2c2b39, _0x466b68 = _0xaf156 * _0x5eb2ab - _0xb7ab * _0x5853e7, _0x11d613 = _0xaf156 * _0x5853e7 + _0xb7ab * _0x5eb2ab + _0x47d4ac * _0x2c2b39;
            _0x41f3e3[0x0] = _0xaf156 * _0x57e69d + _0x5853e7 * _0x5af41c + _0x501211, _0x41f3e3[0x1] = _0xb7ab * _0x57e69d + _0x5eb2ab * _0x5af41c + _0x4852e1, _0x41f3e3[0x2] = _0x47d4ac * _0x57e69d + _0x2c2b39 * _0x5af41c + _0x466b68, _0x41f3e3[0x3] = _0x5af41c * _0x57e69d - _0x11d613;
        }
        static ['arcTanAngl' + 'e'](_0x128973, _0x2e5276) {
            if (_0x128973 == 0x0) {
                if (_0x2e5276 == 0x1)
                    return Math['PI'] / 0x2;
                return -Math['PI'] / 0x2;
            }
            if (_0x128973 > 0x0)
                return Math['atan'](_0x2e5276 / _0x128973);
            if (_0x128973 < 0x0) {
                if (_0x2e5276 > 0x0)
                    return Math['atan'](_0x2e5276 / _0x128973) + Math['PI'];
                return Math['atan'](_0x2e5276 / _0x128973) - Math['PI'];
            }
            return 0x0;
        }
        static ['angleTo'](_0x158302, _0x514b3, _0x22107e) {
            _0x31054c['subtract'](_0x514b3, _0x158302, _0x44b14d['TEMPVector' + '30']), _0x31054c['normalize'](_0x44b14d['TEMPVector' + '30'], _0x44b14d['TEMPVector' + '30']), _0x22107e['elements'][0x0] = Math['asin'](_0x44b14d['TEMPVector' + '30']['y']), _0x22107e['elements'][0x1] = _0x44b14d['arcTanAngl' + 'e'](-_0x44b14d['TEMPVector' + '30']['z'], -_0x44b14d['TEMPVector' + '30']['x']);
        }
        static ['createFrom' + 'AxisAngle'](_0x2fab54, _0x4ebcd8, _0x1cd82f) {
            var _0x3db9ce = _0x1cd82f['elements'], _0x36de8d = _0x2fab54['elements'];
            _0x4ebcd8 = _0x4ebcd8 * 0.5;
            var _0xe04ac3 = Math['sin'](_0x4ebcd8);
            _0x3db9ce[0x0] = _0xe04ac3 * _0x36de8d[0x0], _0x3db9ce[0x1] = _0xe04ac3 * _0x36de8d[0x1], _0x3db9ce[0x2] = _0xe04ac3 * _0x36de8d[0x2], _0x3db9ce[0x3] = Math['cos'](_0x4ebcd8);
        }
        static ['createFrom' + 'Matrix3x3'](_0x59c037, _0x18e4b0) {
            var _0x55062f = _0x18e4b0['elements'], _0x57f3db = _0x59c037['elements'], _0x326c71 = _0x57f3db[0x0] + _0x57f3db[0x4] + _0x57f3db[0x8], _0x4bed1f;
            if (_0x326c71 > 0x0)
                _0x4bed1f = Math['sqrt'](_0x326c71 + 0x1), _0x55062f[0x3] = 0.5 * _0x4bed1f, _0x4bed1f = 0.5 / _0x4bed1f, _0x55062f[0x0] = (_0x57f3db[0x5] - _0x57f3db[0x7]) * _0x4bed1f, _0x55062f[0x1] = (_0x57f3db[0x6] - _0x57f3db[0x2]) * _0x4bed1f, _0x55062f[0x2] = (_0x57f3db[0x1] - _0x57f3db[0x3]) * _0x4bed1f;
            else {
                var _0x482f5b = 0x0;
                if (_0x57f3db[0x4] > _0x57f3db[0x0])
                    _0x482f5b = 0x1;
                if (_0x57f3db[0x8] > _0x57f3db[_0x482f5b * 0x3 + _0x482f5b])
                    _0x482f5b = 0x2;
                var _0x42ed38 = (_0x482f5b + 0x1) % 0x3, _0x137567 = (_0x482f5b + 0x2) % 0x3;
                _0x4bed1f = Math['sqrt'](_0x57f3db[_0x482f5b * 0x3 + _0x482f5b] - _0x57f3db[_0x42ed38 * 0x3 + _0x42ed38] - _0x57f3db[_0x137567 * 0x3 + _0x137567] + 0x1), _0x55062f[_0x482f5b] = 0.5 * _0x4bed1f, _0x4bed1f = 0.5 / _0x4bed1f, _0x55062f[0x3] = (_0x57f3db[_0x42ed38 * 0x3 + _0x137567] - _0x57f3db[_0x137567 * 0x3 + _0x42ed38]) * _0x4bed1f, _0x55062f[_0x42ed38] = (_0x57f3db[_0x42ed38 * 0x3 + _0x482f5b] + _0x57f3db[_0x482f5b * 0x3 + _0x42ed38]) * _0x4bed1f, _0x55062f[_0x137567] = (_0x57f3db[_0x137567 * 0x3 + _0x482f5b] + _0x57f3db[_0x482f5b * 0x3 + _0x137567]) * _0x4bed1f;
            }
            return;
        }
        static ['createFrom' + 'Matrix4x4'](_0x1f8ac3, _0x38fe77) {
            var _0x3b4eda = _0x1f8ac3['elements'], _0x1853b1 = _0x38fe77['elements'], _0x1bf847, _0x5d77dc, _0x52b5a6 = _0x3b4eda[0x0] + _0x3b4eda[0x5] + _0x3b4eda[0xa];
            if (_0x52b5a6 > 0x0)
                _0x1bf847 = Math['sqrt'](_0x52b5a6 + 0x1), _0x1853b1[0x3] = _0x1bf847 * 0.5, _0x1bf847 = 0.5 / _0x1bf847, _0x1853b1[0x0] = (_0x3b4eda[0x6] - _0x3b4eda[0x9]) * _0x1bf847, _0x1853b1[0x1] = (_0x3b4eda[0x8] - _0x3b4eda[0x2]) * _0x1bf847, _0x1853b1[0x2] = (_0x3b4eda[0x1] - _0x3b4eda[0x4]) * _0x1bf847;
            else {
                if (_0x3b4eda[0x0] >= _0x3b4eda[0x5] && _0x3b4eda[0x0] >= _0x3b4eda[0xa])
                    _0x1bf847 = Math['sqrt'](0x1 + _0x3b4eda[0x0] - _0x3b4eda[0x5] - _0x3b4eda[0xa]), _0x5d77dc = 0.5 / _0x1bf847, _0x1853b1[0x0] = 0.5 * _0x1bf847, _0x1853b1[0x1] = (_0x3b4eda[0x1] + _0x3b4eda[0x4]) * _0x5d77dc, _0x1853b1[0x2] = (_0x3b4eda[0x2] + _0x3b4eda[0x8]) * _0x5d77dc, _0x1853b1[0x3] = (_0x3b4eda[0x6] - _0x3b4eda[0x9]) * _0x5d77dc;
                else
                    _0x3b4eda[0x5] > _0x3b4eda[0xa] ? (_0x1bf847 = Math['sqrt'](0x1 + _0x3b4eda[0x5] - _0x3b4eda[0x0] - _0x3b4eda[0xa]), _0x5d77dc = 0.5 / _0x1bf847, _0x1853b1[0x0] = (_0x3b4eda[0x4] + _0x3b4eda[0x1]) * _0x5d77dc, _0x1853b1[0x1] = 0.5 * _0x1bf847, _0x1853b1[0x2] = (_0x3b4eda[0x9] + _0x3b4eda[0x6]) * _0x5d77dc, _0x1853b1[0x3] = (_0x3b4eda[0x8] - _0x3b4eda[0x2]) * _0x5d77dc) : (_0x1bf847 = Math['sqrt'](0x1 + _0x3b4eda[0xa] - _0x3b4eda[0x0] - _0x3b4eda[0x5]), _0x5d77dc = 0.5 / _0x1bf847, _0x1853b1[0x0] = (_0x3b4eda[0x8] + _0x3b4eda[0x2]) * _0x5d77dc, _0x1853b1[0x1] = (_0x3b4eda[0x9] + _0x3b4eda[0x6]) * _0x5d77dc, _0x1853b1[0x2] = 0.5 * _0x1bf847, _0x1853b1[0x3] = (_0x3b4eda[0x1] - _0x3b4eda[0x4]) * _0x5d77dc);
            }
        }
        static ['slerp'](_0x565c35, _0x4b6ec9, _0x1c71ee, _0x4ee6d5) {
            var _0x25c420 = _0x565c35['elements'], _0x244b7a = _0x4b6ec9['elements'], _0x5aea2b = _0x4ee6d5['elements'], _0x560692 = _0x25c420[0x0], _0x2ebe6e = _0x25c420[0x1], _0x57fd75 = _0x25c420[0x2], _0x5616b5 = _0x25c420[0x3], _0x307b76 = _0x244b7a[0x0], _0x35d8f8 = _0x244b7a[0x1], _0x4c8161 = _0x244b7a[0x2], _0x58c6f2 = _0x244b7a[0x3], _0x5e4cdb, _0x436f1a, _0x3371c7, _0x31752b, _0x43b646;
            return _0x436f1a = _0x560692 * _0x307b76 + _0x2ebe6e * _0x35d8f8 + _0x57fd75 * _0x4c8161 + _0x5616b5 * _0x58c6f2, _0x436f1a < 0x0 && (_0x436f1a = -_0x436f1a, _0x307b76 = -_0x307b76, _0x35d8f8 = -_0x35d8f8, _0x4c8161 = -_0x4c8161, _0x58c6f2 = -_0x58c6f2), 0x1 - _0x436f1a > 0.000001 ? (_0x5e4cdb = Math['acos'](_0x436f1a), _0x3371c7 = Math['sin'](_0x5e4cdb), _0x31752b = Math['sin']((0x1 - _0x1c71ee) * _0x5e4cdb) / _0x3371c7, _0x43b646 = Math['sin'](_0x1c71ee * _0x5e4cdb) / _0x3371c7) : (_0x31752b = 0x1 - _0x1c71ee, _0x43b646 = _0x1c71ee), _0x5aea2b[0x0] = _0x31752b * _0x560692 + _0x43b646 * _0x307b76, _0x5aea2b[0x1] = _0x31752b * _0x2ebe6e + _0x43b646 * _0x35d8f8, _0x5aea2b[0x2] = _0x31752b * _0x57fd75 + _0x43b646 * _0x4c8161, _0x5aea2b[0x3] = _0x31752b * _0x5616b5 + _0x43b646 * _0x58c6f2, _0x5aea2b;
        }
        static ['lerp'](_0x5a1c0b, _0x54fd92, _0xcde81, _0xac8d1d) {
            _0x44b14d['_lerpArray'](_0x5a1c0b['elements'], _0x54fd92['elements'], _0xcde81, _0xac8d1d['elements']);
        }
        static ['add'](_0x4e3118, _0x1df598, _0x8a17fc) {
            var _0x3ebc84 = _0x8a17fc['elements'], _0x1cac06 = _0x4e3118['elements'], _0x3811c2 = _0x1df598['elements'];
            _0x3ebc84[0x0] = _0x1cac06[0x0] + _0x3811c2[0x0], _0x3ebc84[0x1] = _0x1cac06[0x1] + _0x3811c2[0x1], _0x3ebc84[0x2] = _0x1cac06[0x2] + _0x3811c2[0x2], _0x3ebc84[0x3] = _0x1cac06[0x3] + _0x3811c2[0x3];
        }
        static ['dot'](_0x163f8f, _0x485210) {
            return _0x44b14d['_dotArray'](_0x163f8f['elements'], _0x485210['elements']);
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x46a149) {
            this['elements'][0x0] = _0x46a149;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x2bcf54) {
            this['elements'][0x1] = _0x2bcf54;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x33932e) {
            this['elements'][0x2] = _0x33932e;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x3a7a71) {
            this['elements'][0x3] = _0x3a7a71;
        }
        ['scaling'](_0x1ce8a8, _0x34a953) {
            var _0x2bfe17 = _0x34a953['elements'], _0x5a7558 = this['elements'];
            _0x2bfe17[0x0] = _0x5a7558[0x0] * _0x1ce8a8, _0x2bfe17[0x1] = _0x5a7558[0x1] * _0x1ce8a8, _0x2bfe17[0x2] = _0x5a7558[0x2] * _0x1ce8a8, _0x2bfe17[0x3] = _0x5a7558[0x3] * _0x1ce8a8;
        }
        ['normalize'](_0x27d223) {
            _0x44b14d['_normalize' + 'Array'](this['elements'], _0x27d223['elements']);
        }
        ['length']() {
            var _0x2331a2 = this['elements'], _0x10fb11 = _0x2331a2[0x0], _0x1cdd31 = _0x2331a2[0x1], _0x144c21 = _0x2331a2[0x2], _0x1cab1e = _0x2331a2[0x3];
            return Math['sqrt'](_0x10fb11 * _0x10fb11 + _0x1cdd31 * _0x1cdd31 + _0x144c21 * _0x144c21 + _0x1cab1e * _0x1cab1e);
        }
        ['rotateX'](_0x4f14e6, _0x5ed48d) {
            var _0x56e4c2 = _0x5ed48d['elements'], _0x19c502 = this['elements'];
            _0x4f14e6 *= 0.5;
            var _0x1eb0eb = _0x19c502[0x0], _0x40616a = _0x19c502[0x1], _0x561ccb = _0x19c502[0x2], _0x4c8dc3 = _0x19c502[0x3], _0x57d2ae = Math['sin'](_0x4f14e6), _0x1754fc = Math['cos'](_0x4f14e6);
            _0x56e4c2[0x0] = _0x1eb0eb * _0x1754fc + _0x4c8dc3 * _0x57d2ae, _0x56e4c2[0x1] = _0x40616a * _0x1754fc + _0x561ccb * _0x57d2ae, _0x56e4c2[0x2] = _0x561ccb * _0x1754fc - _0x40616a * _0x57d2ae, _0x56e4c2[0x3] = _0x4c8dc3 * _0x1754fc - _0x1eb0eb * _0x57d2ae;
        }
        ['rotateY'](_0x179894, _0x37955f) {
            var _0xcec40d = _0x37955f['elements'], _0x23a529 = this['elements'];
            _0x179894 *= 0.5;
            var _0x4f1173 = _0x23a529[0x0], _0x39bf9a = _0x23a529[0x1], _0x2ee6a9 = _0x23a529[0x2], _0xda7189 = _0x23a529[0x3], _0x370da0 = Math['sin'](_0x179894), _0x1f9fd8 = Math['cos'](_0x179894);
            _0xcec40d[0x0] = _0x4f1173 * _0x1f9fd8 - _0x2ee6a9 * _0x370da0, _0xcec40d[0x1] = _0x39bf9a * _0x1f9fd8 + _0xda7189 * _0x370da0, _0xcec40d[0x2] = _0x2ee6a9 * _0x1f9fd8 + _0x4f1173 * _0x370da0, _0xcec40d[0x3] = _0xda7189 * _0x1f9fd8 - _0x39bf9a * _0x370da0;
        }
        ['rotateZ'](_0x48bfd2, _0x8482f0) {
            var _0xc89731 = _0x8482f0['elements'], _0x179ecf = this['elements'];
            _0x48bfd2 *= 0.5;
            var _0x5afc80 = _0x179ecf[0x0], _0x55d9ac = _0x179ecf[0x1], _0x188243 = _0x179ecf[0x2], _0x5b0402 = _0x179ecf[0x3], _0x450cf9 = Math['sin'](_0x48bfd2), _0x67bf6 = Math['cos'](_0x48bfd2);
            _0xc89731[0x0] = _0x5afc80 * _0x67bf6 + _0x55d9ac * _0x450cf9, _0xc89731[0x1] = _0x55d9ac * _0x67bf6 - _0x5afc80 * _0x450cf9, _0xc89731[0x2] = _0x188243 * _0x67bf6 + _0x5b0402 * _0x450cf9, _0xc89731[0x3] = _0x5b0402 * _0x67bf6 - _0x188243 * _0x450cf9;
        }
        ['getYawPitc' + 'hRoll'](_0x3551cc) {
            _0x31054c['transformQ' + 'uat'](_0x31054c['ForwardRH'], this, _0x44b14d['TEMPVector' + '31']), _0x31054c['transformQ' + 'uat'](_0x31054c['Up'], this, _0x44b14d['TEMPVector' + '32']);
            var _0x4ca247 = _0x44b14d['TEMPVector' + '32']['elements'];
            _0x44b14d['angleTo'](_0x31054c['ZERO'], _0x44b14d['TEMPVector' + '31'], _0x44b14d['TEMPVector' + '33']);
            var _0x2904e4 = _0x44b14d['TEMPVector' + '33']['elements'];
            if (_0x2904e4[0x0] == Math['PI'] / 0x2)
                _0x2904e4[0x1] = _0x44b14d['arcTanAngl' + 'e'](_0x4ca247[0x2], _0x4ca247[0x0]), _0x2904e4[0x2] = 0x0;
            else
                _0x2904e4[0x0] == -Math['PI'] / 0x2 ? (_0x2904e4[0x1] = _0x44b14d['arcTanAngl' + 'e'](-_0x4ca247[0x2], -_0x4ca247[0x0]), _0x2904e4[0x2] = 0x0) : (_0x4c2288['createRota' + 'tionY'](-_0x2904e4[0x1], _0x44b14d['TEMPMatrix' + '0']), _0x4c2288['createRota' + 'tionX'](-_0x2904e4[0x0], _0x44b14d['TEMPMatrix' + '1']), _0x31054c['transformC' + 'oordinate'](_0x44b14d['TEMPVector' + '32'], _0x44b14d['TEMPMatrix' + '0'], _0x44b14d['TEMPVector' + '32']), _0x31054c['transformC' + 'oordinate'](_0x44b14d['TEMPVector' + '32'], _0x44b14d['TEMPMatrix' + '1'], _0x44b14d['TEMPVector' + '32']), _0x2904e4[0x2] = _0x44b14d['arcTanAngl' + 'e'](_0x4ca247[0x1], -_0x4ca247[0x0]));
            if (_0x2904e4[0x1] <= -Math['PI'])
                _0x2904e4[0x1] = Math['PI'];
            if (_0x2904e4[0x2] <= -Math['PI'])
                _0x2904e4[0x2] = Math['PI'];
            _0x2904e4[0x1] >= Math['PI'] && _0x2904e4[0x2] >= Math['PI'] && (_0x2904e4[0x1] = 0x0, _0x2904e4[0x2] = 0x0, _0x2904e4[0x0] = Math['PI'] - _0x2904e4[0x0]);
            var _0x486e44 = _0x3551cc['elements'];
            _0x486e44[0x0] = _0x2904e4[0x1], _0x486e44[0x1] = _0x2904e4[0x0], _0x486e44[0x2] = _0x2904e4[0x2];
        }
        ['invert'](_0x203db1) {
            var _0x44b298 = _0x203db1['elements'], _0x3a4228 = this['elements'], _0x180115 = _0x3a4228[0x0], _0x10d74f = _0x3a4228[0x1], _0x5308e6 = _0x3a4228[0x2], _0x5734ff = _0x3a4228[0x3], _0x199d99 = _0x180115 * _0x180115 + _0x10d74f * _0x10d74f + _0x5308e6 * _0x5308e6 + _0x5734ff * _0x5734ff, _0x422e6a = _0x199d99 ? 0x1 / _0x199d99 : 0x0;
            _0x44b298[0x0] = -_0x180115 * _0x422e6a, _0x44b298[0x1] = -_0x10d74f * _0x422e6a, _0x44b298[0x2] = -_0x5308e6 * _0x422e6a, _0x44b298[0x3] = _0x5734ff * _0x422e6a;
        }
        ['identity']() {
            var _0x106147 = this['elements'];
            _0x106147[0x0] = 0x0, _0x106147[0x1] = 0x0, _0x106147[0x2] = 0x0, _0x106147[0x3] = 0x1;
        }
        ['fromArray'](_0x2a29df, _0x5e0696 = 0x0) {
            this['elements'][0x0] = _0x2a29df[_0x5e0696 + 0x0], this['elements'][0x1] = _0x2a29df[_0x5e0696 + 0x1], this['elements'][0x2] = _0x2a29df[_0x5e0696 + 0x2], this['elements'][0x3] = _0x2a29df[_0x5e0696 + 0x3];
        }
        ['cloneTo'](_0x3f6392) {
            var _0x27439e, _0x1c5e90, _0x3db797;
            _0x1c5e90 = this['elements'], _0x3db797 = _0x3f6392['elements'];
            if (_0x1c5e90 === _0x3db797)
                return;
            for (_0x27439e = 0x0; _0x27439e < 0x4; ++_0x27439e) {
                _0x3db797[_0x27439e] = _0x1c5e90[_0x27439e];
            }
        }
        ['clone']() {
            var _0x566d6f = new _0x44b14d();
            return this['cloneTo'](_0x566d6f), _0x566d6f;
        }
        ['equals'](_0x4d42a6) {
            var _0xe31b2 = this['elements'], _0x2ad655 = _0x4d42a6['elements'];
            return _0xc6f01['nearEqual'](_0xe31b2[0x0], _0x2ad655[0x0]) && _0xc6f01['nearEqual'](_0xe31b2[0x1], _0x2ad655[0x1]) && _0xc6f01['nearEqual'](_0xe31b2[0x2], _0x2ad655[0x2]) && _0xc6f01['nearEqual'](_0xe31b2[0x3], _0x2ad655[0x3]);
        }
        static ['rotationLo' + 'okAt'](_0x36680f, _0x55d1ed, _0x15548d) {
            _0x44b14d['lookAt'](_0x31054c['ZERO'], _0x36680f, _0x55d1ed, _0x15548d);
        }
        static ['lookAt'](_0x4f6195, _0x2bac00, _0x1449a8, _0x100077) {
            _0x11be5a['lookAt'](_0x4f6195, _0x2bac00, _0x1449a8, _0x44b14d['_tempMatri' + 'x3x3']), _0x44b14d['rotationMa' + 'trix'](_0x44b14d['_tempMatri' + 'x3x3'], _0x100077);
        }
        ['lengthSqua' + 'red']() {
            var _0x3c856a = this['elements'][0x0], _0x53e173 = this['elements'][0x1], _0x64619b = this['elements'][0x2], _0x1e96f2 = this['elements'][0x3];
            return _0x3c856a * _0x3c856a + _0x53e173 * _0x53e173 + _0x64619b * _0x64619b + _0x1e96f2 * _0x1e96f2;
        }
        static ['invert'](_0xe0c7a6, _0x3cfa9d) {
            var _0x38e76c = _0xe0c7a6['elements'], _0x113c99 = _0x3cfa9d['elements'], _0x4bb018 = _0xe0c7a6['lengthSqua' + 'red']();
            !_0xc6f01['isZero'](_0x4bb018) && (_0x4bb018 = 0x1 / _0x4bb018, _0x113c99[0x0] = -_0x38e76c[0x0] * _0x4bb018, _0x113c99[0x1] = -_0x38e76c[0x1] * _0x4bb018, _0x113c99[0x2] = -_0x38e76c[0x2] * _0x4bb018, _0x113c99[0x3] = _0x38e76c[0x3] * _0x4bb018);
        }
        static ['rotationMa' + 'trix'](_0x94590f, _0x5b71c8) {
            var _0x354416 = _0x94590f['elements'], _0x2f0e01 = _0x354416[0x0], _0x4e463e = _0x354416[0x1], _0x4bddae = _0x354416[0x2], _0x454f20 = _0x354416[0x3], _0x3d0513 = _0x354416[0x4], _0x2a4239 = _0x354416[0x5], _0x247a11 = _0x354416[0x6], _0x4a24d6 = _0x354416[0x7], _0x3a08b9 = _0x354416[0x8], _0x49dcce = _0x5b71c8['elements'], _0x593c59, _0x4e9079, _0x19f4c8 = _0x2f0e01 + _0x3d0513 + _0x3a08b9;
            if (_0x19f4c8 > 0x0)
                _0x593c59 = Math['sqrt'](_0x19f4c8 + 0x1), _0x49dcce[0x3] = _0x593c59 * 0.5, _0x593c59 = 0.5 / _0x593c59, _0x49dcce[0x0] = (_0x2a4239 - _0x4a24d6) * _0x593c59, _0x49dcce[0x1] = (_0x247a11 - _0x4bddae) * _0x593c59, _0x49dcce[0x2] = (_0x4e463e - _0x454f20) * _0x593c59;
            else {
                if (_0x2f0e01 >= _0x3d0513 && _0x2f0e01 >= _0x3a08b9)
                    _0x593c59 = Math['sqrt'](0x1 + _0x2f0e01 - _0x3d0513 - _0x3a08b9), _0x4e9079 = 0.5 / _0x593c59, _0x49dcce[0x0] = 0.5 * _0x593c59, _0x49dcce[0x1] = (_0x4e463e + _0x454f20) * _0x4e9079, _0x49dcce[0x2] = (_0x4bddae + _0x247a11) * _0x4e9079, _0x49dcce[0x3] = (_0x2a4239 - _0x4a24d6) * _0x4e9079;
                else
                    _0x3d0513 > _0x3a08b9 ? (_0x593c59 = Math['sqrt'](0x1 + _0x3d0513 - _0x2f0e01 - _0x3a08b9), _0x4e9079 = 0.5 / _0x593c59, _0x49dcce[0x0] = (_0x454f20 + _0x4e463e) * _0x4e9079, _0x49dcce[0x1] = 0.5 * _0x593c59, _0x49dcce[0x2] = (_0x4a24d6 + _0x2a4239) * _0x4e9079, _0x49dcce[0x3] = (_0x247a11 - _0x4bddae) * _0x4e9079) : (_0x593c59 = Math['sqrt'](0x1 + _0x3a08b9 - _0x2f0e01 - _0x3d0513), _0x4e9079 = 0.5 / _0x593c59, _0x49dcce[0x0] = (_0x247a11 + _0x4bddae) * _0x4e9079, _0x49dcce[0x1] = (_0x4a24d6 + _0x2a4239) * _0x4e9079, _0x49dcce[0x2] = 0.5 * _0x593c59, _0x49dcce[0x3] = (_0x4e463e - _0x454f20) * _0x4e9079);
            }
        }
    }
    _0x44b14d['TEMPVector' + '30'] = new _0x31054c(), _0x44b14d['TEMPVector' + '31'] = new _0x31054c(), _0x44b14d['TEMPVector' + '32'] = new _0x31054c(), _0x44b14d['TEMPVector' + '33'] = new _0x31054c(), _0x44b14d['TEMPMatrix' + '0'] = new _0x4c2288(), _0x44b14d['TEMPMatrix' + '1'] = new _0x4c2288(), _0x44b14d['_tempMatri' + 'x3x3'] = new _0x11be5a(), _0x44b14d['DEFAULT'] = new _0x44b14d(), _0x44b14d['NAN'] = new _0x44b14d(NaN, NaN, NaN, NaN);
    class _0x1b0a09 {
        constructor(_0x160384) {
            if (!(_0x160384 instanceof Array) || _0x160384['length'] !== 0x4)
                throw new Error('Rand:Seed\x20' + 'must\x20be\x20an' + '\x20array\x20wit' + 'h\x204\x20number' + 's');
            this['_state0U'] = _0x160384[0x0] | 0x0, this['_state0L'] = _0x160384[0x1] | 0x0, this['_state1U'] = _0x160384[0x2] | 0x0, this['_state1L'] = _0x160384[0x3] | 0x0;
        }
        ['randomint']() {
            var _0x3bfbed = this['_state0U'], _0x20d1cd = this['_state0L'], _0x5bd19e = this['_state1U'], _0x11e2f1 = this['_state1L'], _0x535424 = (_0x11e2f1 >>> 0x0) + (_0x20d1cd >>> 0x0), _0x19d83a = _0x5bd19e + _0x3bfbed + (_0x535424 / 0x2 >>> 0x1f) >>> 0x0, _0x14edc1 = _0x535424 >>> 0x0;
            this['_state0U'] = _0x5bd19e, this['_state0L'] = _0x11e2f1;
            var _0xd3b167 = 0x0, _0x3080d9 = 0x0, _0x4c9e77 = 0x0, _0x39d87a = 0x0, _0x411b51 = 0x17, _0xc86b5d = 0xffffffff << 0x20 - _0x411b51;
            _0xd3b167 = _0x3bfbed << _0x411b51 | (_0x20d1cd & _0xc86b5d) >>> 0x20 - _0x411b51, _0x3080d9 = _0x20d1cd << _0x411b51, _0x3bfbed = _0x3bfbed ^ _0xd3b167, _0x20d1cd = _0x20d1cd ^ _0x3080d9, _0xd3b167 = _0x3bfbed ^ _0x5bd19e, _0x3080d9 = _0x20d1cd ^ _0x11e2f1;
            var _0x2d7761 = 0x12, _0x58adbc = 0xffffffff >>> 0x20 - _0x2d7761;
            _0x4c9e77 = _0x3bfbed >>> _0x2d7761, _0x39d87a = _0x20d1cd >>> _0x2d7761 | (_0x3bfbed & _0x58adbc) << 0x20 - _0x2d7761, _0xd3b167 = _0xd3b167 ^ _0x4c9e77, _0x3080d9 = _0x3080d9 ^ _0x39d87a;
            var _0x53fd3b = 0x5, _0x310d67 = 0xffffffff >>> 0x20 - _0x53fd3b;
            return _0x4c9e77 = _0x5bd19e >>> _0x53fd3b, _0x39d87a = _0x11e2f1 >>> _0x53fd3b | (_0x5bd19e & _0x310d67) << 0x20 - _0x53fd3b, _0xd3b167 = _0xd3b167 ^ _0x4c9e77, _0x3080d9 = _0x3080d9 ^ _0x39d87a, this['_state1U'] = _0xd3b167, this['_state1L'] = _0x3080d9, [
                _0x19d83a,
                _0x14edc1
            ];
        }
        ['random']() {
            var _0x320919 = this['randomint'](), _0x3c6f3c = _0x320919[0x0], _0x1b650d = _0x320919[0x1], _0x26f82d = 0x3ff << 0x34 - 0x20, _0x98ac46 = 0x0, _0x24f868 = 0xc, _0x4d1aa6 = 0xffffffff >>> 0x20 - _0x24f868, _0x529260 = _0x3c6f3c >>> _0x24f868, _0x122c7c = _0x1b650d >>> _0x24f868 | (_0x3c6f3c & _0x4d1aa6) << 0x20 - _0x24f868, _0x370a58 = _0x26f82d | _0x529260, _0x304e15 = _0x98ac46 | _0x122c7c;
            _0x1b0a09['_CONVERTIO' + 'N_BUFFER']['setUint32'](0x0, _0x370a58, ![]), _0x1b0a09['_CONVERTIO' + 'N_BUFFER']['setUint32'](0x4, _0x304e15, ![]);
            var _0x43b83a = _0x1b0a09['_CONVERTIO' + 'N_BUFFER']['getFloat64'](0x0, ![]);
            return _0x43b83a - 0x1;
        }
    }
    _0x1b0a09['_CONVERTIO' + 'N_BUFFER'] = new DataView(new ArrayBuffer(0x8)), _0x1b0a09['defaultRan' + 'd'] = new _0x1b0a09([
        0x0,
        Date['now']() / 0x10000,
        0x0,
        Date['now']() % 0x10000
    ]);
    class _0x4bc057 {
        constructor() {
        }
    }
    class _0x1dbf23 {
        constructor() {
            this['_pivotInA'] = new _0x352206(), this['_pivotInB'] = new _0x352206();
        }
        get ['pivotInA']() {
            return this['_pivotInA'];
        }
        set ['pivotInA'](_0x509f93) {
            this['_pivotInA'] = _0x509f93;
        }
        get ['pivotInB']() {
            return this['_pivotInB'];
        }
        set ['pivotInB'](_0x1db796) {
            this['_pivotInB'] = _0x1db796;
        }
        get ['damping']() {
            return this['_damping'];
        }
        set ['damping'](_0xbae6) {
            this['_damping'] = _0xbae6;
        }
        get ['impulseCla' + 'mp']() {
            return this['_impulseCl' + 'amp'];
        }
        set ['impulseCla' + 'mp'](_0x39fb1b) {
            this['_impulseCl' + 'amp'] = _0x39fb1b;
        }
        get ['tau']() {
            return this['_tau'];
        }
        set ['tau'](_0x18fda5) {
            this['_tau'] = _0x18fda5;
        }
    }
    class _0x379cd2 {
        constructor() {
        }
    }
    class _0x41764a {
        constructor() {
        }
        get ['text']() {
            return this['_text'];
        }
        set ['text'](_0x4ce8f3) {
            this['_text'] = _0x4ce8f3;
        }
        get ['fontSize']() {
            return this['_fontSize'];
        }
        set ['fontSize'](_0xe85965) {
            this['_fontSize'] = _0xe85965;
        }
        get ['color']() {
            return this['_color'];
        }
        set ['color'](_0x57923c) {
            this['_color'] = _0x57923c;
        }
        ['_createVer' + 'texBuffer'](_0x43b666) {
        }
        ['_resizeVer' + 'texBuffer'](_0x21b797) {
        }
        ['_addChar']() {
        }
    }
    class _0x1e0f45 {
        constructor(_0x36bdcf, _0x2f3989) {
            this['_width'] = 0x0, this['_height'] = 0x0, this['_width'] = _0x36bdcf, this['_height'] = _0x2f3989;
        }
        static get ['fullScreen']() {
            return new _0x1e0f45(-0x1, -0x1);
        }
        get ['width']() {
            if (this['_width'] === -0x1)
                return _0x514492['clientWidt' + 'h'];
            return this['_width'];
        }
        get ['height']() {
            if (this['_height'] === -0x1)
                return _0x514492['clientHeig' + 'ht'];
            return this['_height'];
        }
    }
    _0x1f405c['AlternateL' + 'ightQueue'] = _0x1d8e03, _0x1f405c['AnimationC' + 'lip'] = _0x3bbac0, _0x1f405c['AnimationC' + 'lipParser0' + '3'] = _0x4ade33, _0x1f405c['AnimationC' + 'lipParser0' + '4'] = _0x2634e4, _0x1f405c['AnimationE' + 'vent'] = _0x500da2, _0x1f405c['AnimationN' + 'ode'] = _0x161103, _0x1f405c['AnimationT' + 'ransform3D'] = _0xd6c41a, _0x1f405c['Animator'] = _0x331cef, _0x1f405c['AnimatorCo' + 'ntrollerLa' + 'yer'] = _0x6ba2ab, _0x1f405c['AnimatorPl' + 'ayState'] = _0x2a8b4d, _0x1f405c['AnimatorSt' + 'ate'] = _0x2f4cdc, _0x1f405c['AnimatorSt' + 'ateScript'] = _0xb5079c, _0x1f405c['Avatar'] = _0x20f476, _0x1f405c['BaseCamera'] = _0x307038, _0x1f405c['BaseMateri' + 'al'] = _0x231956, _0x1f405c['BaseRender'] = _0x590787, _0x1f405c['BaseShape'] = _0x47a1cc, _0x1f405c['BatchMark'] = _0x36391b, _0x1f405c['BlinnPhong' + 'Material'] = _0x523e5f, _0x1f405c['BlitScreen' + 'QuadCMD'] = _0x477064, _0x1f405c['BloomEffec' + 't'] = _0x272600, _0x1f405c['BoundBox'] = _0x2bd0ec, _0x1f405c['BoundFrust' + 'um'] = _0x4fa1ff, _0x1f405c['BoundSpher' + 'e'] = _0x2b2d11, _0x1f405c['Bounds'] = _0x1f1598, _0x1f405c['BoundsOctr' + 'ee'] = _0x1f4309, _0x1f405c['BoundsOctr' + 'eeNode'] = _0xabc37b, _0x1f405c['BoxCollide' + 'rShape'] = _0x5a842b, _0x1f405c['BoxShape'] = _0x49338d, _0x1f405c['BufferStat' + 'e'] = _0x2f0542, _0x1f405c['BulletInte' + 'ractive'] = _0x254185, _0x1f405c['Burst'] = _0x10b1ec, _0x1f405c['Camera'] = _0x53b337, _0x1f405c['CameraCull' + 'Info'] = _0x3e5f9a, _0x1f405c['CapsuleCol' + 'liderShape'] = _0x566a16, _0x1f405c['CastShadow' + 'List'] = _0x29c72d, _0x1f405c['CharacterC' + 'ontroller'] = _0x4cc0ca, _0x1f405c['CircleShap' + 'e'] = _0x2b0bf2, _0x1f405c['ClearRende' + 'rTextureCM' + 'D'] = _0x56b135, _0x1f405c['Cluster'] = _0x1f70a4, _0x1f405c['ColliderSh' + 'ape'] = _0x11d2cc, _0x1f405c['Collision'] = _0x327cc8, _0x1f405c['CollisionT' + 'ool'] = _0x175f77, _0x1f405c['CollisionU' + 'tils'] = _0xefe37, _0x1f405c['Color'] = _0x5525ce, _0x1f405c['ColorOverL' + 'ifetime'] = _0x57ef59, _0x1f405c['Command'] = _0xf86ce5, _0x1f405c['CommandBuf' + 'fer'] = _0x1b5fd0, _0x1f405c['CompoundCo' + 'lliderShap' + 'e'] = _0x3aa64c, _0x1f405c['ConchQuate' + 'rnion'] = _0x44b14d, _0x1f405c['ConchVecto' + 'r3'] = _0x31054c, _0x1f405c['ConchVecto' + 'r4'] = _0x338915, _0x1f405c['ConeCollid' + 'erShape'] = _0x5f19d4, _0x1f405c['ConeShape'] = _0x41b96a, _0x1f405c['Config3D'] = _0x1a3b39, _0x1f405c['Configurab' + 'leConstrai' + 'nt'] = _0x4c05b3, _0x1f405c['Constraint' + '3D'] = _0x4bc057, _0x1f405c['Constraint' + 'Component'] = _0x4938c5, _0x1f405c['ContactPoi' + 'nt'] = _0x48c2fd, _0x1f405c['Containmen' + 'tType'] = _0x93aded, _0x1f405c['CylinderCo' + 'lliderShap' + 'e'] = _0x5bd42f, _0x1f405c['DefineData' + 's'] = _0x1445c0, _0x1f405c['DirectionL' + 'ight'] = _0x175d64, _0x1f405c['DrawMeshCM' + 'D'] = _0xc20e76, _0x1f405c['DrawRender' + 'CMD'] = _0x223429, _0x1f405c['DynamicBat' + 'chManager'] = _0x32586c, _0x1f405c['EffectMate' + 'rial'] = _0x2a0fbb, _0x1f405c['Emission'] = _0x2cd287, _0x1f405c['ExtendTerr' + 'ainMateria' + 'l'] = _0xf19750, _0x1f405c['FixedConst' + 'raint'] = _0x1f580d, _0x1f405c['FloatKeyfr' + 'ame'] = _0x2d9b18, _0x1f405c['FrameOverT' + 'ime'] = _0x55bc91, _0x1f405c['FrustumCul' + 'ling'] = _0x28101b, _0x1f405c['GeometryEl' + 'ement'] = _0x355f63, _0x1f405c['Gradient'] = _0x56b2f2, _0x1f405c['GradientAn' + 'gularVeloc' + 'ity'] = _0x48f3a0, _0x1f405c['GradientCo' + 'lor'] = _0xfeff71, _0x1f405c['GradientDa' + 'taInt'] = _0x2ccdfa, _0x1f405c['GradientDa' + 'taNumber'] = _0x1731a8, _0x1f405c['GradientDa' + 'taVector2'] = _0x3c34e7, _0x1f405c['GradientMo' + 'de'] = _0x4c04d9, _0x1f405c['GradientSi' + 'ze'] = _0x239ca5, _0x1f405c['GradientVe' + 'locity'] = _0xec4902, _0x1f405c['HeightMap'] = _0x28ee8c, _0x1f405c['Heightfiel' + 'dColliderS' + 'hape'] = _0x379cd2, _0x1f405c['Hemisphere' + 'Shape'] = _0x2c61db, _0x1f405c['HitResult'] = _0x20f43d, _0x1f405c['ILaya3D'] = _0x207eb6, _0x1f405c['IndexBuffe' + 'r3D'] = _0x197184, _0x1f405c['Input3D'] = _0x405d9a, _0x1f405c['Keyframe'] = _0x39f079, _0x1f405c['KeyframeNo' + 'de'] = _0x3f9891, _0x1f405c['KeyframeNo' + 'deList'] = _0x199e45, _0x1f405c['KeyframeNo' + 'deOwner'] = _0xaeca25, _0x1f405c['Laya3D'] = _0x4b16da, _0x1f405c['LightQueue'] = _0x1935cd, _0x1f405c['LightSprit' + 'e'] = _0x594385, _0x1f405c['Lightmap'] = _0x338f4f, _0x1f405c['LoadModelV' + '04'] = _0x1f3281, _0x1f405c['LoadModelV' + '05'] = _0x834fe9, _0x1f405c['Material'] = _0x2b6b33, _0x1f405c['MathUtils3' + 'D'] = _0xc6f01, _0x1f405c['Matrix3x3'] = _0x11be5a, _0x1f405c['Matrix4x4'] = _0x4c2288, _0x1f405c['Mesh'] = _0x3b00dd, _0x1f405c['MeshCollid' + 'erShape'] = _0x460569, _0x1f405c['MeshFilter'] = _0x2da43c, _0x1f405c['MeshReader'] = _0xdf33ef, _0x1f405c['MeshRender' + 'DynamicBat' + 'chManager'] = _0x5a12d5, _0x1f405c['MeshRender' + 'StaticBatc' + 'hManager'] = _0xb90358, _0x1f405c['MeshRender' + 'er'] = _0x3bb578, _0x1f405c['MeshSprite' + '3D'] = _0x1208f9, _0x1f405c['MeshSprite' + '3DShaderDe' + 'claration'] = _0x157bdb, _0x1f405c['MeshTerrai' + 'nSprite3D'] = _0x61d13f, _0x1f405c['MouseTouch'] = _0x1a438e, _0x1f405c['OctreeMoti' + 'onList'] = _0x3ceeb3, _0x1f405c['PBRMateria' + 'l'] = _0x460fe4, _0x1f405c['PBRSpecula' + 'rMaterial'] = _0x1b0e7e, _0x1f405c['PBRStandar' + 'dMaterial'] = _0x51f75c, _0x1f405c['Physics3D'] = _0x3c230b, _0x1f405c['Physics3DU' + 'tils'] = _0x3b8f98, _0x1f405c['PhysicsCol' + 'lider'] = _0x4f927a, _0x1f405c['PhysicsCom' + 'ponent'] = _0x3e3f17, _0x1f405c['PhysicsSet' + 'tings'] = _0x4c00fb, _0x1f405c['PhysicsSim' + 'ulation'] = _0x101776, _0x1f405c['PhysicsTri' + 'ggerCompon' + 'ent'] = _0x3c647b, _0x1f405c['PhysicsUpd' + 'ateList'] = _0x28920a, _0x1f405c['Picker'] = _0x42fa6d, _0x1f405c['PixelLineD' + 'ata'] = _0x1a1679, _0x1f405c['PixelLineF' + 'ilter'] = _0x350bde, _0x1f405c['PixelLineM' + 'aterial'] = _0x4ce9d0, _0x1f405c['PixelLineR' + 'enderer'] = _0x308e99, _0x1f405c['PixelLineS' + 'prite3D'] = _0x2a91dd, _0x1f405c['PixelLineV' + 'ertex'] = _0x40bf38, _0x1f405c['Plane'] = _0x1fee56, _0x1f405c['Point2Poin' + 'tConstrain' + 't'] = _0x1dbf23, _0x1f405c['PointLight'] = _0x44e061, _0x1f405c['PostProces' + 's'] = _0x4835e1, _0x1f405c['PostProces' + 'sEffect'] = _0x4a8f04, _0x1f405c['PostProces' + 'sRenderCon' + 'text'] = _0x4a7a35, _0x1f405c['PrimitiveM' + 'esh'] = _0x4b5b46, _0x1f405c['Quaternion'] = _0x388291, _0x1f405c['Quaternion' + 'Keyframe'] = _0xfe02a7, _0x1f405c['Rand'] = _0x508ab7, _0x1f405c['RandX'] = _0x1b0a09, _0x1f405c['Ray'] = _0x24d745, _0x1f405c['Reflection' + 'Probe'] = _0x542d3e, _0x1f405c['Reflection' + 'ProbeList'] = _0x26db5a, _0x1f405c['Reflection' + 'ProbeManag' + 'er'] = _0x3e1252, _0x1f405c['RenderCont' + 'ext3D'] = _0x514492, _0x1f405c['RenderElem' + 'ent'] = _0x5ca4bd, _0x1f405c['RenderQueu' + 'e'] = _0x185a54, _0x1f405c['RenderStat' + 'e'] = _0x5c0fbd, _0x1f405c['RenderText' + 'ure'] = _0x40e7a5, _0x1f405c['Renderable' + 'Sprite3D'] = _0x22d3a2, _0x1f405c['Rigidbody3' + 'D'] = _0x392471, _0x1f405c['RotationOv' + 'erLifetime'] = _0x48d329, _0x1f405c['Scene3D'] = _0x397862, _0x1f405c['Scene3DSha' + 'derDeclara' + 'tion'] = _0x3b7520, _0x1f405c['Scene3DUti' + 'ls'] = _0x5bca9b, _0x1f405c['SceneManag' + 'er'] = _0x35e69d, _0x1f405c['ScreenQuad'] = _0x267d58, _0x1f405c['ScreenTria' + 'ngle'] = _0x410733, _0x1f405c['Script3D'] = _0x16d436, _0x1f405c['SetGlobalS' + 'haderDataC' + 'MD'] = _0x1dede6, _0x1f405c['SetRenderT' + 'argetCMD'] = _0x2f3393, _0x1f405c['SetShaderD' + 'ataCMD'] = _0x26bf81, _0x1f405c['Shader3D'] = _0x18824e, _0x1f405c['ShaderData'] = _0x1634f4, _0x1f405c['ShaderDefi' + 'ne'] = _0x2d7ab8, _0x1f405c['ShaderInit' + '3D'] = _0x3f15ae, _0x1f405c['ShaderInst' + 'ance'] = _0x3ec46b, _0x1f405c['ShaderPass'] = _0x483d1f, _0x1f405c['ShaderVari' + 'able'] = _0x1d9513, _0x1f405c['ShaderVari' + 'ant'] = _0x2977cc, _0x1f405c['ShaderVari' + 'antCollect' + 'ion'] = _0x25d333, _0x1f405c['ShadowCast' + 'erPass'] = _0x4fb93b, _0x1f405c['ShadowCull' + 'Info'] = _0x37d063, _0x1f405c['ShadowSlic' + 'eData'] = _0x2ab34b, _0x1f405c['ShadowSpot' + 'Data'] = _0x44fdee, _0x1f405c['ShadowUtil' + 's'] = _0x12f0cf, _0x1f405c['ShapeUtils'] = _0x3a4e55, _0x1f405c['ShuriKenPa' + 'rticle3D'] = _0x531ddc, _0x1f405c['ShuriKenPa' + 'rticle3DSh' + 'aderDeclar' + 'ation'] = _0x39d5f7, _0x1f405c['ShurikenPa' + 'rticleData'] = _0x56c6b5, _0x1f405c['ShurikenPa' + 'rticleMate' + 'rial'] = _0x4d5b52, _0x1f405c['ShurikenPa' + 'rticleRend' + 'erer'] = _0x20ee3e, _0x1f405c['ShurikenPa' + 'rticleSyst' + 'em'] = _0x5da476, _0x1f405c['SimpleSing' + 'letonList'] = _0x53809e, _0x1f405c['SimpleSkin' + 'nedMeshRen' + 'derer'] = _0x5de858, _0x1f405c['SimpleSkin' + 'nedMeshSpr' + 'ite3D'] = _0x2838b1, _0x1f405c['SingletonL' + 'ist'] = _0x4a730f, _0x1f405c['Size'] = _0x1e0f45, _0x1f405c['SizeOverLi' + 'fetime'] = _0xa7ce47, _0x1f405c['SkinnedMes' + 'hRenderer'] = _0x2edba7, _0x1f405c['SkinnedMes' + 'hSprite3D'] = _0xa58a85, _0x1f405c['SkinnedMes' + 'hSprite3DS' + 'haderDecla' + 'ration'] = _0x76a0e9, _0x1f405c['SkyBox'] = _0x2be899, _0x1f405c['SkyBoxMate' + 'rial'] = _0x3cb57a, _0x1f405c['SkyDome'] = _0x21eee2, _0x1f405c['SkyMesh'] = _0x422ea2, _0x1f405c['SkyPanoram' + 'icMaterial'] = _0x10abae, _0x1f405c['SkyProcedu' + 'ralMateria' + 'l'] = _0x5495c1, _0x1f405c['SkyRendere' + 'r'] = _0x37201d, _0x1f405c['SphereColl' + 'iderShape'] = _0x50ccce, _0x1f405c['SphereShap' + 'e'] = _0x2ba306, _0x1f405c['SphericalH' + 'armonicsL2'] = _0x1a99bf, _0x1f405c['SpotLight'] = _0x1d9d7e, _0x1f405c['Sprite3D'] = _0x49f2b6, _0x1f405c['StartFrame'] = _0x490a5b, _0x1f405c['StaticBatc' + 'hManager'] = _0x435c23, _0x1f405c['StaticPlan' + 'eColliderS' + 'hape'] = _0x417ed1, _0x1f405c['SubMesh'] = _0x327c94, _0x1f405c['SubMeshDyn' + 'amicBatch'] = _0x3444e5, _0x1f405c['SubMeshIns' + 'tanceBatch'] = _0x2247dd, _0x1f405c['SubMeshRen' + 'derElement'] = _0x5d8926, _0x1f405c['SubMeshSta' + 'ticBatch'] = _0x18b0fe, _0x1f405c['SubShader'] = _0x4c4f1d, _0x1f405c['TextMesh'] = _0x41764a, _0x1f405c['TextureCub' + 'e'] = _0x4b21e5, _0x1f405c['TextureGen' + 'erator'] = _0x59e616, _0x1f405c['TextureMod' + 'e'] = _0x134e0d, _0x1f405c['TextureShe' + 'etAnimatio' + 'n'] = _0x1ebf6e, _0x1f405c['Touch'] = _0x17641e, _0x1f405c['TrailFilte' + 'r'] = _0x23de25, _0x1f405c['TrailGeome' + 'try'] = _0x5201a1, _0x1f405c['TrailMater' + 'ial'] = _0x31d253, _0x1f405c['TrailRende' + 'rer'] = _0x135dd8, _0x1f405c['TrailSprit' + 'e3D'] = _0x15363b, _0x1f405c['Transform3' + 'D'] = _0x203c65, _0x1f405c['UnlitMater' + 'ial'] = _0x30019a, _0x1f405c['Utils3D'] = _0x47bed9, _0x1f405c['Vector2'] = _0x378045, _0x1f405c['Vector3'] = _0x352206, _0x1f405c['Vector3Key' + 'frame'] = _0x4adfd9, _0x1f405c['Vector4'] = _0x18425e, _0x1f405c['VelocityOv' + 'erLifetime'] = _0x386b75, _0x1f405c['VertexBuff' + 'er3D'] = _0x251441, _0x1f405c['VertexDecl' + 'aration'] = _0x19d0a5, _0x1f405c['VertexElem' + 'ent'] = _0x549a90, _0x1f405c['VertexElem' + 'entFormat'] = _0x5cc56b, _0x1f405c['VertexMesh'] = _0x2a7b2f, _0x1f405c['VertexPosi' + 'tionTerrai' + 'n'] = _0x1c1a26, _0x1f405c['VertexPosi' + 'tionTextur' + 'e0'] = _0x4acb3c, _0x1f405c['VertexShur' + 'iKenPartic' + 'le'] = _0x15fc4b, _0x1f405c['VertexShur' + 'ikenPartic' + 'leBillboar' + 'd'] = _0x9492db, _0x1f405c['VertexShur' + 'ikenPartic' + 'leMesh'] = _0xcd1367, _0x1f405c['VertexTrai' + 'l'] = _0x51f657, _0x1f405c['Viewport'] = _0x2b4b54, _0x1f405c['WaterPrima' + 'ryMaterial'] = _0x4bfcdb, _0x1f405c['skinnedMat' + 'rixCache'] = _0x55114a;
}(window['Laya'] = window['Laya'] || {}, Laya));