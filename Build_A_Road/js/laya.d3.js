!function (_0xc55b22, _0x2247ad) {
    'use strict';
    class _0x40af95 {
        constructor() {
        }
        static ['isZero'](_0x28ed30) {
            return Math['abs'](_0x28ed30) < _0x40af95['zeroTolera' + 'nce'];
        }
        static ['nearEqual'](_0x9f9f4e, _0x4ed8c3) {
            return !!_0x40af95['isZero'](_0x9f9f4e - _0x4ed8c3);
        }
        static ['fastInvSqr' + 't'](_0x3cf818) {
            return _0x40af95['isZero'](_0x3cf818) ? _0x3cf818 : 0x1 / Math['sqrt'](_0x3cf818);
        }
    }
    _0x40af95['zeroTolera' + 'nce'] = 0.000001, _0x40af95['MaxValue'] = 0xffffff048ff9e8000000000000000000, _0x40af95['MinValue'] = -0xffffff048ff9e8000000000000000000, _0x40af95['Deg2Rad'] = Math['PI'] / 0xb4;
    class _0x2d45ed {
        constructor(_0x5cda26 = 0x0, _0x481519 = 0x0) {
            this['x'] = _0x5cda26, this['y'] = _0x481519;
        }
        ['setValue'](_0x5af49, _0x328986) {
            this['x'] = _0x5af49, this['y'] = _0x328986;
        }
        static ['scale'](_0x3782dc, _0x29f0c8, _0xd4c997) {
            _0xd4c997['x'] = _0x3782dc['x'] * _0x29f0c8, _0xd4c997['y'] = _0x3782dc['y'] * _0x29f0c8;
        }
        ['fromArray'](_0x17031b, _0x462682 = 0x0) {
            this['x'] = _0x17031b[_0x462682 + 0x0], this['y'] = _0x17031b[_0x462682 + 0x1];
        }
        ['cloneTo'](_0x179776) {
            var _0x5eb8a1 = _0x179776;
            _0x5eb8a1['x'] = this['x'], _0x5eb8a1['y'] = this['y'];
        }
        static ['dot'](_0x1ac902, _0x1095c6) {
            return _0x1ac902['x'] * _0x1095c6['x'] + _0x1ac902['y'] * _0x1095c6['y'];
        }
        static ['normalize'](_0x5636e4, _0x452355) {
            var _0x479a1e = _0x5636e4['x'], _0x135a72 = _0x5636e4['y'], _0x3680e0 = _0x479a1e * _0x479a1e + _0x135a72 * _0x135a72;
            _0x3680e0 > 0x0 && (_0x3680e0 = 0x1 / Math['sqrt'](_0x3680e0), _0x452355['x'] = _0x479a1e * _0x3680e0, _0x452355['y'] = _0x135a72 * _0x3680e0);
        }
        static ['scalarLeng' + 'th'](_0x3aa840) {
            var _0x15915e = _0x3aa840['x'], _0x213cee = _0x3aa840['y'];
            return Math['sqrt'](_0x15915e * _0x15915e + _0x213cee * _0x213cee);
        }
        ['clone']() {
            var _0x14ca44 = new _0x2d45ed();
            return this['cloneTo'](_0x14ca44), _0x14ca44;
        }
        ['forNativeE' + 'lement'](_0x3266f0 = null) {
            _0x3266f0 ? (this['elements'] = _0x3266f0, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y']) : this['elements'] = new Float32Array([
                this['x'],
                this['y']
            ]), _0x2d45ed['rewriteNum' + 'Property'](this, 'x', 0x0), _0x2d45ed['rewriteNum' + 'Property'](this, 'y', 0x1);
        }
        static ['rewriteNum' + 'Property'](_0xce2d13, _0x1588d9, _0x3976f0) {
            Object['defineProp' + 'erty'](_0xce2d13, _0x1588d9, {
                'get': function () {
                    return this['elements'][_0x3976f0];
                },
                'set': function (_0x3bf336) {
                    this['elements'][_0x3976f0] = _0x3bf336;
                }
            });
        }
    }
    _0x2d45ed['ZERO'] = new _0x2d45ed(0x0, 0x0), _0x2d45ed['ONE'] = new _0x2d45ed(0x1, 0x1);
    class _0x4cec8f {
        constructor(_0x5f1b69 = 0x0, _0x5f5956 = 0x0, _0x31f356 = 0x0, _0x34e50e = 0x0) {
            this['x'] = _0x5f1b69, this['y'] = _0x5f5956, this['z'] = _0x31f356, this['w'] = _0x34e50e;
        }
        ['setValue'](_0x3926bc, _0x2bd636, _0x596872, _0x5452bb) {
            this['x'] = _0x3926bc, this['y'] = _0x2bd636, this['z'] = _0x596872, this['w'] = _0x5452bb;
        }
        ['fromArray'](_0x49ffcc, _0x242ed1 = 0x0) {
            this['x'] = _0x49ffcc[_0x242ed1 + 0x0], this['y'] = _0x49ffcc[_0x242ed1 + 0x1], this['z'] = _0x49ffcc[_0x242ed1 + 0x2], this['w'] = _0x49ffcc[_0x242ed1 + 0x3];
        }
        ['cloneTo'](_0x8c7e4a) {
            var _0x447b3c = _0x8c7e4a;
            _0x447b3c['x'] = this['x'], _0x447b3c['y'] = this['y'], _0x447b3c['z'] = this['z'], _0x447b3c['w'] = this['w'];
        }
        ['clone']() {
            var _0x20cc65 = new _0x4cec8f();
            return this['cloneTo'](_0x20cc65), _0x20cc65;
        }
        static ['lerp'](_0x144092, _0x3ca3b1, _0x11aadc, _0x4ea76d) {
            var _0x213707 = _0x144092['x'], _0x1870f3 = _0x144092['y'], _0x350b86 = _0x144092['z'], _0xde0f4b = _0x144092['w'];
            _0x4ea76d['x'] = _0x213707 + _0x11aadc * (_0x3ca3b1['x'] - _0x213707), _0x4ea76d['y'] = _0x1870f3 + _0x11aadc * (_0x3ca3b1['y'] - _0x1870f3), _0x4ea76d['z'] = _0x350b86 + _0x11aadc * (_0x3ca3b1['z'] - _0x350b86), _0x4ea76d['w'] = _0xde0f4b + _0x11aadc * (_0x3ca3b1['w'] - _0xde0f4b);
        }
        static ['transformB' + 'yM4x4'](_0x5e82cf, _0x5bb21f, _0x136102) {
            var _0x4ad494 = _0x5e82cf['x'], _0x4e23aa = _0x5e82cf['y'], _0x541d8f = _0x5e82cf['z'], _0x24238c = _0x5e82cf['w'], _0xfd28a = _0x5bb21f['elements'];
            _0x136102['x'] = _0x4ad494 * _0xfd28a[0x0] + _0x4e23aa * _0xfd28a[0x4] + _0x541d8f * _0xfd28a[0x8] + _0x24238c * _0xfd28a[0xc], _0x136102['y'] = _0x4ad494 * _0xfd28a[0x1] + _0x4e23aa * _0xfd28a[0x5] + _0x541d8f * _0xfd28a[0x9] + _0x24238c * _0xfd28a[0xd], _0x136102['z'] = _0x4ad494 * _0xfd28a[0x2] + _0x4e23aa * _0xfd28a[0x6] + _0x541d8f * _0xfd28a[0xa] + _0x24238c * _0xfd28a[0xe], _0x136102['w'] = _0x4ad494 * _0xfd28a[0x3] + _0x4e23aa * _0xfd28a[0x7] + _0x541d8f * _0xfd28a[0xb] + _0x24238c * _0xfd28a[0xf];
        }
        static ['equals'](_0x140388, _0x40ded3) {
            return _0x40af95['nearEqual'](Math['abs'](_0x140388['x']), Math['abs'](_0x40ded3['x'])) && _0x40af95['nearEqual'](Math['abs'](_0x140388['y']), Math['abs'](_0x40ded3['y'])) && _0x40af95['nearEqual'](Math['abs'](_0x140388['z']), Math['abs'](_0x40ded3['z'])) && _0x40af95['nearEqual'](Math['abs'](_0x140388['w']), Math['abs'](_0x40ded3['w']));
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x4ab2c7, _0x1b5c29) {
            var _0x34b065 = _0x4ab2c7['length']();
            if (_0x34b065 > 0x0) {
                var _0x878117 = 0x1 / _0x34b065;
                _0x1b5c29['x'] = _0x4ab2c7['x'] * _0x878117, _0x1b5c29['y'] = _0x4ab2c7['y'] * _0x878117, _0x1b5c29['z'] = _0x4ab2c7['z'] * _0x878117, _0x1b5c29['w'] = _0x4ab2c7['w'] * _0x878117;
            }
        }
        static ['add'](_0x373c24, _0x2c6bb5, _0x4229eb) {
            _0x4229eb['x'] = _0x373c24['x'] + _0x2c6bb5['x'], _0x4229eb['y'] = _0x373c24['y'] + _0x2c6bb5['y'], _0x4229eb['z'] = _0x373c24['z'] + _0x2c6bb5['z'], _0x4229eb['w'] = _0x373c24['w'] + _0x2c6bb5['w'];
        }
        static ['subtract'](_0x5d4526, _0x26cd37, _0x3cf473) {
            _0x3cf473['x'] = _0x5d4526['x'] - _0x26cd37['x'], _0x3cf473['y'] = _0x5d4526['y'] - _0x26cd37['y'], _0x3cf473['z'] = _0x5d4526['z'] - _0x26cd37['z'], _0x3cf473['w'] = _0x5d4526['w'] - _0x26cd37['w'];
        }
        static ['multiply'](_0x5b048d, _0x6e992c, _0x292362) {
            _0x292362['x'] = _0x5b048d['x'] * _0x6e992c['x'], _0x292362['y'] = _0x5b048d['y'] * _0x6e992c['y'], _0x292362['z'] = _0x5b048d['z'] * _0x6e992c['z'], _0x292362['w'] = _0x5b048d['w'] * _0x6e992c['w'];
        }
        static ['scale'](_0x28f99a, _0x56d3ef, _0x30867c) {
            _0x30867c['x'] = _0x28f99a['x'] * _0x56d3ef, _0x30867c['y'] = _0x28f99a['y'] * _0x56d3ef, _0x30867c['z'] = _0x28f99a['z'] * _0x56d3ef, _0x30867c['w'] = _0x28f99a['w'] * _0x56d3ef;
        }
        static ['Clamp'](_0x9fba6f, _0x564e54, _0x4ba70e, _0x49575e) {
            var _0xc3cd9e = _0x9fba6f['x'], _0x10591d = _0x9fba6f['y'], _0x49f05b = _0x9fba6f['z'], _0x25c5d5 = _0x9fba6f['w'], _0x26874e = _0x564e54['x'], _0x51f287 = _0x564e54['y'], _0x1d5cc3 = _0x564e54['z'], _0x1c629a = _0x564e54['w'], _0x37a80d = _0x4ba70e['x'], _0xc56077 = _0x4ba70e['y'], _0x1277c2 = _0x4ba70e['z'], _0x50a592 = _0x4ba70e['w'];
            _0xc3cd9e = (_0xc3cd9e = _0xc3cd9e > _0x37a80d ? _0x37a80d : _0xc3cd9e) < _0x26874e ? _0x26874e : _0xc3cd9e, _0x10591d = (_0x10591d = _0x10591d > _0xc56077 ? _0xc56077 : _0x10591d) < _0x51f287 ? _0x51f287 : _0x10591d, _0x49f05b = (_0x49f05b = _0x49f05b > _0x1277c2 ? _0x1277c2 : _0x49f05b) < _0x1d5cc3 ? _0x1d5cc3 : _0x49f05b, _0x25c5d5 = (_0x25c5d5 = _0x25c5d5 > _0x50a592 ? _0x50a592 : _0x25c5d5) < _0x1c629a ? _0x1c629a : _0x25c5d5, _0x49575e['x'] = _0xc3cd9e, _0x49575e['y'] = _0x10591d, _0x49575e['z'] = _0x49f05b, _0x49575e['w'] = _0x25c5d5;
        }
        static ['distanceSq' + 'uared'](_0x587e48, _0x52d24a) {
            var _0x248cf4 = _0x587e48['x'] - _0x52d24a['x'], _0x4e41ca = _0x587e48['y'] - _0x52d24a['y'], _0x1e8f56 = _0x587e48['z'] - _0x52d24a['z'], _0x352c1f = _0x587e48['w'] - _0x52d24a['w'];
            return _0x248cf4 * _0x248cf4 + _0x4e41ca * _0x4e41ca + _0x1e8f56 * _0x1e8f56 + _0x352c1f * _0x352c1f;
        }
        static ['distance'](_0xaa3e98, _0x156e46) {
            var _0x47cf7d = _0xaa3e98['x'] - _0x156e46['x'], _0xa490db = _0xaa3e98['y'] - _0x156e46['y'], _0x563b2f = _0xaa3e98['z'] - _0x156e46['z'], _0x159701 = _0xaa3e98['w'] - _0x156e46['w'];
            return Math['sqrt'](_0x47cf7d * _0x47cf7d + _0xa490db * _0xa490db + _0x563b2f * _0x563b2f + _0x159701 * _0x159701);
        }
        static ['dot'](_0x2b50f9, _0x33564f) {
            return _0x2b50f9['x'] * _0x33564f['x'] + _0x2b50f9['y'] * _0x33564f['y'] + _0x2b50f9['z'] * _0x33564f['z'] + _0x2b50f9['w'] * _0x33564f['w'];
        }
        static ['min'](_0x564eec, _0x503fdb, _0x11116a) {
            _0x11116a['x'] = Math['min'](_0x564eec['x'], _0x503fdb['x']), _0x11116a['y'] = Math['min'](_0x564eec['y'], _0x503fdb['y']), _0x11116a['z'] = Math['min'](_0x564eec['z'], _0x503fdb['z']), _0x11116a['w'] = Math['min'](_0x564eec['w'], _0x503fdb['w']);
        }
        static ['max'](_0x3f570c, _0x1db67, _0x581eab) {
            _0x581eab['x'] = Math['max'](_0x3f570c['x'], _0x1db67['x']), _0x581eab['y'] = Math['max'](_0x3f570c['y'], _0x1db67['y']), _0x581eab['z'] = Math['max'](_0x3f570c['z'], _0x1db67['z']), _0x581eab['w'] = Math['max'](_0x3f570c['w'], _0x1db67['w']);
        }
        ['forNativeE' + 'lement'](_0x167125 = null) {
            _0x167125 ? (this['elements'] = _0x167125, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z'], this['elements'][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x2d45ed['rewriteNum' + 'Property'](this, 'x', 0x0), _0x2d45ed['rewriteNum' + 'Property'](this, 'y', 0x1), _0x2d45ed['rewriteNum' + 'Property'](this, 'z', 0x2), _0x2d45ed['rewriteNum' + 'Property'](this, 'w', 0x3);
        }
    }
    _0x4cec8f['ZERO'] = new _0x4cec8f(), _0x4cec8f['ONE'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), _0x4cec8f['UnitX'] = new _0x4cec8f(0x1, 0x0, 0x0, 0x0), _0x4cec8f['UnitY'] = new _0x4cec8f(0x0, 0x1, 0x0, 0x0), _0x4cec8f['UnitZ'] = new _0x4cec8f(0x0, 0x0, 0x1, 0x0), _0x4cec8f['UnitW'] = new _0x4cec8f(0x0, 0x0, 0x0, 0x1);
    class _0x43b358 {
        constructor(_0x561ce6 = 0x0, _0x5ed3b8 = 0x0, _0x2989f8 = 0x0, _0x13c830 = null) {
            this['x'] = _0x561ce6, this['y'] = _0x5ed3b8, this['z'] = _0x2989f8;
        }
        static ['distanceSq' + 'uared'](_0x1b43c6, _0x46b0eb) {
            var _0x2dbebf = _0x1b43c6['x'] - _0x46b0eb['x'], _0x4a590d = _0x1b43c6['y'] - _0x46b0eb['y'], _0x3faedd = _0x1b43c6['z'] - _0x46b0eb['z'];
            return _0x2dbebf * _0x2dbebf + _0x4a590d * _0x4a590d + _0x3faedd * _0x3faedd;
        }
        static ['distance'](_0x2bf19e, _0x21afff) {
            var _0x3cff76 = _0x2bf19e['x'] - _0x21afff['x'], _0x50f957 = _0x2bf19e['y'] - _0x21afff['y'], _0x1671b8 = _0x2bf19e['z'] - _0x21afff['z'];
            return Math['sqrt'](_0x3cff76 * _0x3cff76 + _0x50f957 * _0x50f957 + _0x1671b8 * _0x1671b8);
        }
        static ['min'](_0x4a9925, _0x2271f9, _0x5bd0a8) {
            _0x5bd0a8['x'] = Math['min'](_0x4a9925['x'], _0x2271f9['x']), _0x5bd0a8['y'] = Math['min'](_0x4a9925['y'], _0x2271f9['y']), _0x5bd0a8['z'] = Math['min'](_0x4a9925['z'], _0x2271f9['z']);
        }
        static ['max'](_0x10276a, _0x39d338, _0x1e958e) {
            _0x1e958e['x'] = Math['max'](_0x10276a['x'], _0x39d338['x']), _0x1e958e['y'] = Math['max'](_0x10276a['y'], _0x39d338['y']), _0x1e958e['z'] = Math['max'](_0x10276a['z'], _0x39d338['z']);
        }
        static ['transformQ' + 'uat'](_0x1a90ab, _0xeefeeb, _0x3a2341) {
            var _0x925982 = _0x1a90ab['x'], _0x4fb0d3 = _0x1a90ab['y'], _0x3d3848 = _0x1a90ab['z'], _0xfb6680 = _0xeefeeb['x'], _0x5a1640 = _0xeefeeb['y'], _0x8acc63 = _0xeefeeb['z'], _0x40f996 = _0xeefeeb['w'], _0x4fdb0a = _0x40f996 * _0x925982 + _0x5a1640 * _0x3d3848 - _0x8acc63 * _0x4fb0d3, _0x255326 = _0x40f996 * _0x4fb0d3 + _0x8acc63 * _0x925982 - _0xfb6680 * _0x3d3848, _0x3f0d17 = _0x40f996 * _0x3d3848 + _0xfb6680 * _0x4fb0d3 - _0x5a1640 * _0x925982, _0xae9d95 = -_0xfb6680 * _0x925982 - _0x5a1640 * _0x4fb0d3 - _0x8acc63 * _0x3d3848;
            _0x3a2341['x'] = _0x4fdb0a * _0x40f996 + _0xae9d95 * -_0xfb6680 + _0x255326 * -_0x8acc63 - _0x3f0d17 * -_0x5a1640, _0x3a2341['y'] = _0x255326 * _0x40f996 + _0xae9d95 * -_0x5a1640 + _0x3f0d17 * -_0xfb6680 - _0x4fdb0a * -_0x8acc63, _0x3a2341['z'] = _0x3f0d17 * _0x40f996 + _0xae9d95 * -_0x8acc63 + _0x4fdb0a * -_0x5a1640 - _0x255326 * -_0xfb6680;
        }
        static ['scalarLeng' + 'th'](_0x49c1d7) {
            var _0x3595a7 = _0x49c1d7['x'], _0x1af3e8 = _0x49c1d7['y'], _0xe4063b = _0x49c1d7['z'];
            return Math['sqrt'](_0x3595a7 * _0x3595a7 + _0x1af3e8 * _0x1af3e8 + _0xe4063b * _0xe4063b);
        }
        static ['scalarLeng' + 'thSquared'](_0x4362d7) {
            var _0x48dcad = _0x4362d7['x'], _0x16ef95 = _0x4362d7['y'], _0x50db96 = _0x4362d7['z'];
            return _0x48dcad * _0x48dcad + _0x16ef95 * _0x16ef95 + _0x50db96 * _0x50db96;
        }
        static ['normalize'](_0x2bb8d1, _0x531a7b) {
            var _0x2b5c66 = _0x2bb8d1['x'], _0x20d670 = _0x2bb8d1['y'], _0x49efb3 = _0x2bb8d1['z'], _0x2d466c = _0x2b5c66 * _0x2b5c66 + _0x20d670 * _0x20d670 + _0x49efb3 * _0x49efb3;
            _0x2d466c > 0x0 && (_0x2d466c = 0x1 / Math['sqrt'](_0x2d466c), _0x531a7b['x'] = _0x2b5c66 * _0x2d466c, _0x531a7b['y'] = _0x20d670 * _0x2d466c, _0x531a7b['z'] = _0x49efb3 * _0x2d466c);
        }
        static ['multiply'](_0x5cc706, _0x4d3d40, _0x147ac6) {
            _0x147ac6['x'] = _0x5cc706['x'] * _0x4d3d40['x'], _0x147ac6['y'] = _0x5cc706['y'] * _0x4d3d40['y'], _0x147ac6['z'] = _0x5cc706['z'] * _0x4d3d40['z'];
        }
        static ['scale'](_0x527378, _0x4acbbc, _0x1c1976) {
            _0x1c1976['x'] = _0x527378['x'] * _0x4acbbc, _0x1c1976['y'] = _0x527378['y'] * _0x4acbbc, _0x1c1976['z'] = _0x527378['z'] * _0x4acbbc;
        }
        static ['lerp'](_0x127c82, _0xdafde4, _0x444161, _0x12fa9c) {
            var _0x5b1f9b = _0x127c82['x'], _0x3229bb = _0x127c82['y'], _0x5af525 = _0x127c82['z'];
            _0x12fa9c['x'] = _0x5b1f9b + _0x444161 * (_0xdafde4['x'] - _0x5b1f9b), _0x12fa9c['y'] = _0x3229bb + _0x444161 * (_0xdafde4['y'] - _0x3229bb), _0x12fa9c['z'] = _0x5af525 + _0x444161 * (_0xdafde4['z'] - _0x5af525);
        }
        static ['transformV' + '3ToV3'](_0x46e295, _0x2cf27d, _0x289683) {
            var _0x3f7a18 = _0x43b358['_tempVecto' + 'r4'];
            _0x43b358['transformV' + '3ToV4'](_0x46e295, _0x2cf27d, _0x3f7a18), _0x289683['x'] = _0x3f7a18['x'], _0x289683['y'] = _0x3f7a18['y'], _0x289683['z'] = _0x3f7a18['z'];
        }
        static ['transformV' + '3ToV4'](_0x370f8d, _0x6151d5, _0x2842aa) {
            var _0x538f7e = _0x370f8d['x'], _0x5f1ec2 = _0x370f8d['y'], _0x7cac25 = _0x370f8d['z'], _0x53c788 = _0x6151d5['elements'];
            _0x2842aa['x'] = _0x538f7e * _0x53c788[0x0] + _0x5f1ec2 * _0x53c788[0x4] + _0x7cac25 * _0x53c788[0x8] + _0x53c788[0xc], _0x2842aa['y'] = _0x538f7e * _0x53c788[0x1] + _0x5f1ec2 * _0x53c788[0x5] + _0x7cac25 * _0x53c788[0x9] + _0x53c788[0xd], _0x2842aa['z'] = _0x538f7e * _0x53c788[0x2] + _0x5f1ec2 * _0x53c788[0x6] + _0x7cac25 * _0x53c788[0xa] + _0x53c788[0xe], _0x2842aa['w'] = _0x538f7e * _0x53c788[0x3] + _0x5f1ec2 * _0x53c788[0x7] + _0x7cac25 * _0x53c788[0xb] + _0x53c788[0xf];
        }
        static ['TransformN' + 'ormal'](_0x4bd17c, _0x1b2835, _0x41a962) {
            var _0xd199e0 = _0x4bd17c['x'], _0x1a9d1d = _0x4bd17c['y'], _0x2e63cb = _0x4bd17c['z'], _0x3a4758 = _0x1b2835['elements'];
            _0x41a962['x'] = _0xd199e0 * _0x3a4758[0x0] + _0x1a9d1d * _0x3a4758[0x4] + _0x2e63cb * _0x3a4758[0x8], _0x41a962['y'] = _0xd199e0 * _0x3a4758[0x1] + _0x1a9d1d * _0x3a4758[0x5] + _0x2e63cb * _0x3a4758[0x9], _0x41a962['z'] = _0xd199e0 * _0x3a4758[0x2] + _0x1a9d1d * _0x3a4758[0x6] + _0x2e63cb * _0x3a4758[0xa];
        }
        static ['transformC' + 'oordinate'](_0x1da89b, _0x1bc951, _0x76d9cb) {
            var _0x28373e = _0x1da89b['x'], _0x3a7d05 = _0x1da89b['y'], _0x40b962 = _0x1da89b['z'], _0x30d63d = _0x1bc951['elements'], _0x477d07 = _0x28373e * _0x30d63d[0x3] + _0x3a7d05 * _0x30d63d[0x7] + _0x40b962 * _0x30d63d[0xb] + _0x30d63d[0xf];
            _0x76d9cb['x'] = (_0x28373e * _0x30d63d[0x0] + _0x3a7d05 * _0x30d63d[0x4] + _0x40b962 * _0x30d63d[0x8] + _0x30d63d[0xc]) / _0x477d07, _0x76d9cb['y'] = (_0x28373e * _0x30d63d[0x1] + _0x3a7d05 * _0x30d63d[0x5] + _0x40b962 * _0x30d63d[0x9] + _0x30d63d[0xd]) / _0x477d07, _0x76d9cb['z'] = (_0x28373e * _0x30d63d[0x2] + _0x3a7d05 * _0x30d63d[0x6] + _0x40b962 * _0x30d63d[0xa] + _0x30d63d[0xe]) / _0x477d07;
        }
        static ['Clamp'](_0x59ceba, _0x59a4b2, _0x5c5980, _0x5253a2) {
            var _0x115245 = _0x59ceba['x'], _0x483500 = _0x59ceba['y'], _0x53f30f = _0x59ceba['z'], _0x5593ae = _0x59a4b2['x'], _0x2990a9 = _0x59a4b2['y'], _0x1809b7 = _0x59a4b2['z'], _0x4ff814 = _0x5c5980['x'], _0x44d940 = _0x5c5980['y'], _0x197453 = _0x5c5980['z'];
            _0x115245 = (_0x115245 = _0x115245 > _0x4ff814 ? _0x4ff814 : _0x115245) < _0x5593ae ? _0x5593ae : _0x115245, _0x483500 = (_0x483500 = _0x483500 > _0x44d940 ? _0x44d940 : _0x483500) < _0x2990a9 ? _0x2990a9 : _0x483500, _0x53f30f = (_0x53f30f = _0x53f30f > _0x197453 ? _0x197453 : _0x53f30f) < _0x1809b7 ? _0x1809b7 : _0x53f30f, _0x5253a2['x'] = _0x115245, _0x5253a2['y'] = _0x483500, _0x5253a2['z'] = _0x53f30f;
        }
        static ['add'](_0xf6c9e0, _0x4fb139, _0x39921e) {
            _0x39921e['x'] = _0xf6c9e0['x'] + _0x4fb139['x'], _0x39921e['y'] = _0xf6c9e0['y'] + _0x4fb139['y'], _0x39921e['z'] = _0xf6c9e0['z'] + _0x4fb139['z'];
        }
        static ['subtract'](_0x348cce, _0x498117, _0x4b25a2) {
            _0x4b25a2['x'] = _0x348cce['x'] - _0x498117['x'], _0x4b25a2['y'] = _0x348cce['y'] - _0x498117['y'], _0x4b25a2['z'] = _0x348cce['z'] - _0x498117['z'];
        }
        static ['cross'](_0x2dc515, _0x130fc6, _0x31b661) {
            var _0x540efb = _0x2dc515['x'], _0x2e72d8 = _0x2dc515['y'], _0x3114a1 = _0x2dc515['z'], _0x2ae77d = _0x130fc6['x'], _0x483e3c = _0x130fc6['y'], _0x47604e = _0x130fc6['z'];
            _0x31b661['x'] = _0x2e72d8 * _0x47604e - _0x3114a1 * _0x483e3c, _0x31b661['y'] = _0x3114a1 * _0x2ae77d - _0x540efb * _0x47604e, _0x31b661['z'] = _0x540efb * _0x483e3c - _0x2e72d8 * _0x2ae77d;
        }
        static ['dot'](_0x22f347, _0x43eeac) {
            return _0x22f347['x'] * _0x43eeac['x'] + _0x22f347['y'] * _0x43eeac['y'] + _0x22f347['z'] * _0x43eeac['z'];
        }
        static ['equals'](_0x451eaa, _0x2a8946) {
            return _0x40af95['nearEqual'](_0x451eaa['x'], _0x2a8946['x']) && _0x40af95['nearEqual'](_0x451eaa['y'], _0x2a8946['y']) && _0x40af95['nearEqual'](_0x451eaa['z'], _0x2a8946['z']);
        }
        ['setValue'](_0x4f97cf, _0x2b46c3, _0x2e53a5) {
            this['x'] = _0x4f97cf, this['y'] = _0x2b46c3, this['z'] = _0x2e53a5;
        }
        ['fromArray'](_0x1810cf, _0x3fda42 = 0x0) {
            this['x'] = _0x1810cf[_0x3fda42 + 0x0], this['y'] = _0x1810cf[_0x3fda42 + 0x1], this['z'] = _0x1810cf[_0x3fda42 + 0x2];
        }
        ['cloneTo'](_0x316bd6) {
            var _0x25383f = _0x316bd6;
            _0x25383f['x'] = this['x'], _0x25383f['y'] = this['y'], _0x25383f['z'] = this['z'];
        }
        ['clone']() {
            var _0x319e1f = new _0x43b358();
            return this['cloneTo'](_0x319e1f), _0x319e1f;
        }
        ['toDefault']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0;
        }
        ['forNativeE' + 'lement'](_0x65a211 = null) {
            _0x65a211 ? (this['elements'] = _0x65a211, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z']
            ]), _0x2d45ed['rewriteNum' + 'Property'](this, 'x', 0x0), _0x2d45ed['rewriteNum' + 'Property'](this, 'y', 0x1), _0x2d45ed['rewriteNum' + 'Property'](this, 'z', 0x2);
        }
    }
    var _0x182422, _0x3cdc54;
    _0x43b358['_tempVecto' + 'r4'] = new _0x4cec8f(), _0x43b358['_ZERO'] = new _0x43b358(0x0, 0x0, 0x0), _0x43b358['_ONE'] = new _0x43b358(0x1, 0x1, 0x1), _0x43b358['_NegativeU' + 'nitX'] = new _0x43b358(-0x1, 0x0, 0x0), _0x43b358['_UnitX'] = new _0x43b358(0x1, 0x0, 0x0), _0x43b358['_UnitY'] = new _0x43b358(0x0, 0x1, 0x0), _0x43b358['_UnitZ'] = new _0x43b358(0x0, 0x0, 0x1), _0x43b358['_ForwardRH'] = new _0x43b358(0x0, 0x0, -0x1), _0x43b358['_ForwardLH'] = new _0x43b358(0x0, 0x0, 0x1), _0x43b358['_Up'] = new _0x43b358(0x0, 0x1, 0x0), (_0x182422 = _0xc55b22['PBRRenderQ' + 'uality'] || (_0xc55b22['PBRRenderQ' + 'uality'] = {}))[_0x182422['High'] = 0x0] = 'High', _0x182422[_0x182422['Low'] = 0x1] = 'Low';
    class _0xb0652e {
        constructor() {
            this['_defaultPh' + 'ysicsMemor' + 'y'] = 0x10, this['_maxLightC' + 'ount'] = 0x20, this['_lightClus' + 'terCount'] = new _0x43b358(0xc, 0xc, 0xc), this['_editerEnv' + 'ironment'] = !0x1, this['isAntialia' + 's'] = !0x0, this['isAlpha'] = !0x1, this['premultipl' + 'iedAlpha'] = !0x0, this['isStencil'] = !0x0, this['enableMult' + 'iLight'] = !0x0, this['octreeCull' + 'ing'] = !0x1, this['octreeInit' + 'ialSize'] = 0x40, this['octreeInit' + 'ialCenter'] = new _0x43b358(0x0, 0x0, 0x0), this['octreeMinN' + 'odeSize'] = 0x2, this['octreeLoos' + 'eness'] = 1.25, this['debugFrust' + 'umCulling'] = !0x1, this['pbrRenderQ' + 'uality'] = _0xc55b22['PBRRenderQ' + 'uality']['High'], this['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] = Math['min'](0x4 * Math['floor'](0x800 / this['_lightClus' + 'terCount']['z'] - 0x1), this['_maxLightC' + 'ount']);
        }
        get ['defaultPhy' + 'sicsMemory']() {
            return this['_defaultPh' + 'ysicsMemor' + 'y'];
        }
        set ['defaultPhy' + 'sicsMemory'](_0x2010e1) {
            if (_0x2010e1 < 0x10)
                throw 'defaultPhy' + 'sicsMemory' + '\x20must\x20larg' + 'e\x20than\x2016M';
            this['_defaultPh' + 'ysicsMemor' + 'y'] = _0x2010e1;
        }
        get ['maxLightCo' + 'unt']() {
            return this['_maxLightC' + 'ount'];
        }
        set ['maxLightCo' + 'unt'](_0x5c4810) {
            _0x5c4810 > 0x800 ? (this['_maxLightC' + 'ount'] = 0x800, console['warn']('Config3D:\x20' + 'maxLightCo' + 'unt\x20must\x20l' + 'ess\x20equal\x20' + '2048.')) : this['_maxLightC' + 'ount'] = _0x5c4810;
        }
        get ['lightClust' + 'erCount']() {
            return this['_lightClus' + 'terCount'];
        }
        set ['lightClust' + 'erCount'](_0x5285e0) {
            _0x5285e0['x'] > 0x80 || _0x5285e0['y'] > 0x80 || _0x5285e0['z'] > 0x80 ? (this['_lightClus' + 'terCount']['setValue'](Math['min'](_0x5285e0['x'], 0x80), Math['min'](_0x5285e0['y'], 0x80), Math['min'](_0x5285e0['z'], 0x80)), console['warn']('Config3D:\x20' + 'lightClust' + 'erCount\x20X\x20' + 'and\x20Y、Z\x20mu' + 'st\x20less\x20eq' + 'ual\x20128.')) : _0x5285e0['cloneTo'](this['_lightClus' + 'terCount']);
            var _0x4ee92f = 0x4 * Math['floor'](0x800 / this['_lightClus' + 'terCount']['z'] - 0x1);
            _0x4ee92f < this['_maxLightC' + 'ount'] && console['warn']('Config3D:\x20' + 'if\x20the\x20are' + 'a\x20light(Po' + 'intLight、S' + 'potLight)\x20' + 'count\x20is\x20l' + 'arge\x20than\x20' + _0x4ee92f + (',maybe\x20the' + '\x20far\x20away\x20' + 'culster\x20wi' + 'll\x20ingonre' + '\x20some\x20ligh' + 't.')), this['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] = Math['min'](_0x4ee92f, this['_maxLightC' + 'ount']);
        }
        ['cloneTo'](_0x301069) {
            var _0x4cee45 = _0x301069;
            _0x4cee45['_defaultPh' + 'ysicsMemor' + 'y'] = this['_defaultPh' + 'ysicsMemor' + 'y'], _0x4cee45['_editerEnv' + 'ironment'] = this['_editerEnv' + 'ironment'], _0x4cee45['isAntialia' + 's'] = this['isAntialia' + 's'], _0x4cee45['isAlpha'] = this['isAlpha'], _0x4cee45['premultipl' + 'iedAlpha'] = this['premultipl' + 'iedAlpha'], _0x4cee45['isStencil'] = this['isStencil'], _0x4cee45['octreeCull' + 'ing'] = this['octreeCull' + 'ing'], this['octreeInit' + 'ialCenter']['cloneTo'](_0x4cee45['octreeInit' + 'ialCenter']), _0x4cee45['octreeInit' + 'ialSize'] = this['octreeInit' + 'ialSize'], _0x4cee45['octreeMinN' + 'odeSize'] = this['octreeMinN' + 'odeSize'], _0x4cee45['octreeLoos' + 'eness'] = this['octreeLoos' + 'eness'], _0x4cee45['debugFrust' + 'umCulling'] = this['debugFrust' + 'umCulling'], _0x4cee45['maxLightCo' + 'unt'] = this['maxLightCo' + 'unt'], _0x4cee45['enableMult' + 'iLight'] = this['enableMult' + 'iLight'];
            var _0x23a9ab = _0x4cee45['lightClust' + 'erCount'];
            this['lightClust' + 'erCount']['cloneTo'](_0x23a9ab), _0x4cee45['lightClust' + 'erCount'] = _0x23a9ab, _0x4cee45['pbrRenderQ' + 'uality'] = this['pbrRenderQ' + 'uality'];
        }
        ['clone']() {
            var _0x86de61 = new _0xb0652e();
            return this['cloneTo'](_0x86de61), _0x86de61;
        }
    }
    _0xb0652e['_config'] = new _0xb0652e(), window['Config3D'] = _0xb0652e;
    class _0x1fc38b {
    }
    _0x1fc38b['Shader3D'] = null, _0x1fc38b['Scene3D'] = null, _0x1fc38b['MeshRender' + 'StaticBatc' + 'hManager'] = null, _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager'] = null, _0x1fc38b['SubMeshDyn' + 'amicBatch'] = null, _0x1fc38b['Laya3D'] = null, _0x1fc38b['Matrix4x4'] = null;
    class _0x3f2025 {
        constructor() {
            this['_ownerPath'] = [], this['_propertys'] = [], this['_keyFrames'] = [];
        }
        get ['ownerPathC' + 'ount']() {
            return this['_ownerPath']['length'];
        }
        get ['propertyCo' + 'unt']() {
            return this['_propertys']['length'];
        }
        get ['keyFramesC' + 'ount']() {
            return this['_keyFrames']['length'];
        }
        ['_setOwnerP' + 'athCount'](_0x1f4fac) {
            this['_ownerPath']['length'] = _0x1f4fac;
        }
        ['_setOwnerP' + 'athByIndex'](_0x4706ff, _0x273acc) {
            this['_ownerPath'][_0x4706ff] = _0x273acc;
        }
        ['_joinOwner' + 'Path'](_0x33bddb) {
            return this['_ownerPath']['join'](_0x33bddb);
        }
        ['_setProper' + 'tyCount'](_0x476f3d) {
            this['_propertys']['length'] = _0x476f3d;
        }
        ['_setProper' + 'tyByIndex'](_0x1c923b, _0x51ecc1) {
            this['_propertys'][_0x1c923b] = _0x51ecc1;
        }
        ['_joinPrope' + 'rty'](_0x2049f9) {
            return this['_propertys']['join'](_0x2049f9);
        }
        ['_setKeyfra' + 'meCount'](_0x12e387) {
            this['_keyFrames']['length'] = _0x12e387;
        }
        ['_setKeyfra' + 'meByIndex'](_0x47fc7a, _0x182e8c) {
            this['_keyFrames'][_0x47fc7a] = _0x182e8c;
        }
        ['getOwnerPa' + 'thByIndex'](_0x2f70e2) {
            return this['_ownerPath'][_0x2f70e2];
        }
        ['getPropert' + 'yByIndex'](_0x23ee8b) {
            return this['_propertys'][_0x23ee8b];
        }
        ['getKeyfram' + 'eByIndex'](_0x1b9dc0) {
            return this['_keyFrames'][_0x1b9dc0];
        }
    }
    class _0x18867d {
        constructor() {
        }
    }
    class _0x498910 {
        constructor() {
        }
        ['cloneTo'](_0x14bd4a) {
            _0x14bd4a['time'] = this['time'];
        }
        ['clone']() {
            var _0x35eefb = new _0x498910();
            return this['cloneTo'](_0x35eefb), _0x35eefb;
        }
    }
    class _0x6059d7 extends _0x498910 {
        constructor() {
            super();
        }
        ['cloneTo'](_0x3809b7) {
            super['cloneTo'](_0x3809b7);
            var _0x9bf40c = _0x3809b7;
            _0x9bf40c['inTangent'] = this['inTangent'], _0x9bf40c['outTangent'] = this['outTangent'], _0x9bf40c['value'] = this['value'];
        }
    }
    class _0x348b09 {
        constructor() {
            var _0x566785 = this['elements'] = new Float32Array(0x9);
            _0x566785[0x0] = 0x1, _0x566785[0x1] = 0x0, _0x566785[0x2] = 0x0, _0x566785[0x3] = 0x0, _0x566785[0x4] = 0x1, _0x566785[0x5] = 0x0, _0x566785[0x6] = 0x0, _0x566785[0x7] = 0x0, _0x566785[0x8] = 0x1;
        }
        static ['createRota' + 'tionQuater' + 'nion'](_0x55b80a, _0x35f902) {
            var _0x1a65ad = _0x55b80a['x'], _0x505206 = _0x55b80a['y'], _0x4b20e0 = _0x55b80a['z'], _0x3ba2a0 = _0x55b80a['w'], _0x476a6d = _0x1a65ad * _0x1a65ad, _0x4131f0 = _0x505206 * _0x505206, _0x9ab80d = _0x4b20e0 * _0x4b20e0, _0xa95af5 = _0x1a65ad * _0x505206, _0x39ef00 = _0x4b20e0 * _0x3ba2a0, _0x4d9acd = _0x4b20e0 * _0x1a65ad, _0x5143b2 = _0x505206 * _0x3ba2a0, _0x1c6783 = _0x505206 * _0x4b20e0, _0x454715 = _0x1a65ad * _0x3ba2a0, _0xbb4182 = _0x35f902['elements'];
            _0xbb4182[0x0] = 0x1 - 0x2 * (_0x4131f0 + _0x9ab80d), _0xbb4182[0x1] = 0x2 * (_0xa95af5 + _0x39ef00), _0xbb4182[0x2] = 0x2 * (_0x4d9acd - _0x5143b2), _0xbb4182[0x3] = 0x2 * (_0xa95af5 - _0x39ef00), _0xbb4182[0x4] = 0x1 - 0x2 * (_0x9ab80d + _0x476a6d), _0xbb4182[0x5] = 0x2 * (_0x1c6783 + _0x454715), _0xbb4182[0x6] = 0x2 * (_0x4d9acd + _0x5143b2), _0xbb4182[0x7] = 0x2 * (_0x1c6783 - _0x454715), _0xbb4182[0x8] = 0x1 - 0x2 * (_0x4131f0 + _0x476a6d);
        }
        static ['createFrom' + 'Translatio' + 'n'](_0x196d7e, _0x53a1fe) {
            var _0x2d65b4 = _0x53a1fe['elements'];
            _0x2d65b4[0x0] = 0x1, _0x2d65b4[0x1] = 0x0, _0x2d65b4[0x2] = 0x0, _0x2d65b4[0x3] = 0x0, _0x2d65b4[0x4] = 0x1, _0x2d65b4[0x5] = 0x0, _0x2d65b4[0x6] = _0x196d7e['x'], _0x2d65b4[0x7] = _0x196d7e['y'], _0x2d65b4[0x8] = 0x1;
        }
        static ['createFrom' + 'Rotation'](_0x1cc414, _0x2c9cdd) {
            var _0x36f9ca = _0x2c9cdd['elements'], _0x234bc1 = Math['sin'](_0x1cc414), _0x39c206 = Math['cos'](_0x1cc414);
            _0x36f9ca[0x0] = _0x39c206, _0x36f9ca[0x1] = _0x234bc1, _0x36f9ca[0x2] = 0x0, _0x36f9ca[0x3] = -_0x234bc1, _0x36f9ca[0x4] = _0x39c206, _0x36f9ca[0x5] = 0x0, _0x36f9ca[0x6] = 0x0, _0x36f9ca[0x7] = 0x0, _0x36f9ca[0x8] = 0x1;
        }
        static ['createFrom' + 'Scaling'](_0x26e43f, _0x231820) {
            var _0x4e911a = _0x231820['elements'];
            _0x4e911a[0x0] = _0x26e43f['x'], _0x4e911a[0x1] = 0x0, _0x4e911a[0x2] = 0x0, _0x4e911a[0x3] = 0x0, _0x4e911a[0x4] = _0x26e43f['y'], _0x4e911a[0x5] = 0x0, _0x4e911a[0x6] = 0x0, _0x4e911a[0x7] = 0x0, _0x4e911a[0x8] = _0x26e43f['z'];
        }
        static ['createFrom' + 'Matrix4x4'](_0x22ee59, _0x36963f) {
            var _0x43faa8 = _0x22ee59['elements'], _0x3c4ad1 = _0x36963f['elements'];
            _0x3c4ad1[0x0] = _0x43faa8[0x0], _0x3c4ad1[0x1] = _0x43faa8[0x1], _0x3c4ad1[0x2] = _0x43faa8[0x2], _0x3c4ad1[0x3] = _0x43faa8[0x4], _0x3c4ad1[0x4] = _0x43faa8[0x5], _0x3c4ad1[0x5] = _0x43faa8[0x6], _0x3c4ad1[0x6] = _0x43faa8[0x8], _0x3c4ad1[0x7] = _0x43faa8[0x9], _0x3c4ad1[0x8] = _0x43faa8[0xa];
        }
        static ['multiply'](_0x56d317, _0x1c2525, _0xb73172) {
            var _0x421e5d = _0x56d317['elements'], _0x1e2f16 = _0x1c2525['elements'], _0x1fd50c = _0xb73172['elements'], _0x1ff101 = _0x421e5d[0x0], _0xd036b1 = _0x421e5d[0x1], _0x3c2562 = _0x421e5d[0x2], _0x2fa0bf = _0x421e5d[0x3], _0x583baf = _0x421e5d[0x4], _0x3c8950 = _0x421e5d[0x5], _0x11efb5 = _0x421e5d[0x6], _0x4c63de = _0x421e5d[0x7], _0x2a7a73 = _0x421e5d[0x8], _0x2827bc = _0x1e2f16[0x0], _0xf4dc33 = _0x1e2f16[0x1], _0x5b567d = _0x1e2f16[0x2], _0x59869b = _0x1e2f16[0x3], _0x5de31 = _0x1e2f16[0x4], _0x31accf = _0x1e2f16[0x5], _0x172ea2 = _0x1e2f16[0x6], _0x49a9d0 = _0x1e2f16[0x7], _0x2af42d = _0x1e2f16[0x8];
            _0x1fd50c[0x0] = _0x2827bc * _0x1ff101 + _0xf4dc33 * _0x2fa0bf + _0x5b567d * _0x11efb5, _0x1fd50c[0x1] = _0x2827bc * _0xd036b1 + _0xf4dc33 * _0x583baf + _0x5b567d * _0x49a9d0, _0x1fd50c[0x2] = _0x2827bc * _0x3c2562 + _0xf4dc33 * _0x3c8950 + _0x5b567d * _0x2a7a73, _0x1fd50c[0x3] = _0x59869b * _0x1ff101 + _0x5de31 * _0x2fa0bf + _0x31accf * _0x11efb5, _0x1fd50c[0x4] = _0x59869b * _0xd036b1 + _0x5de31 * _0x583baf + _0x31accf * _0x4c63de, _0x1fd50c[0x5] = _0x59869b * _0x3c2562 + _0x5de31 * _0x3c8950 + _0x31accf * _0x2a7a73, _0x1fd50c[0x6] = _0x172ea2 * _0x1ff101 + _0x49a9d0 * _0x2fa0bf + _0x2af42d * _0x11efb5, _0x1fd50c[0x7] = _0x172ea2 * _0xd036b1 + _0x49a9d0 * _0x583baf + _0x2af42d * _0x4c63de, _0x1fd50c[0x8] = _0x172ea2 * _0x3c2562 + _0x49a9d0 * _0x3c8950 + _0x2af42d * _0x2a7a73;
        }
        ['determinan' + 't']() {
            var _0x58c794 = this['elements'], _0x3d6648 = _0x58c794[0x0], _0x24996f = _0x58c794[0x1], _0x301fb6 = _0x58c794[0x2], _0x16c74d = _0x58c794[0x3], _0x572a22 = _0x58c794[0x4], _0x9b4021 = _0x58c794[0x5], _0x3d9587 = _0x58c794[0x6], _0x6cff8b = _0x58c794[0x7], _0x5f260 = _0x58c794[0x8];
            return _0x3d6648 * (_0x5f260 * _0x572a22 - _0x9b4021 * _0x6cff8b) + _0x24996f * (-_0x5f260 * _0x16c74d + _0x9b4021 * _0x3d9587) + _0x301fb6 * (_0x6cff8b * _0x16c74d - _0x572a22 * _0x3d9587);
        }
        ['translate'](_0x573edc, _0x3f0a60) {
            var _0x12d3dd = _0x3f0a60['elements'], _0x104394 = this['elements'], _0x323798 = _0x104394[0x0], _0x376cfb = _0x104394[0x1], _0x1e3f0e = _0x104394[0x2], _0x524af5 = _0x104394[0x3], _0x1a7e8b = _0x104394[0x4], _0x36b8bb = _0x104394[0x5], _0x275f95 = _0x104394[0x6], _0x4172b3 = _0x104394[0x7], _0x3acef7 = _0x104394[0x8], _0xa812ac = _0x573edc['x'], _0x48591b = _0x573edc['y'];
            _0x12d3dd[0x0] = _0x323798, _0x12d3dd[0x1] = _0x376cfb, _0x12d3dd[0x2] = _0x1e3f0e, _0x12d3dd[0x3] = _0x524af5, _0x12d3dd[0x4] = _0x1a7e8b, _0x12d3dd[0x5] = _0x36b8bb, _0x12d3dd[0x6] = _0xa812ac * _0x323798 + _0x48591b * _0x524af5 + _0x275f95, _0x12d3dd[0x7] = _0xa812ac * _0x376cfb + _0x48591b * _0x1a7e8b + _0x4172b3, _0x12d3dd[0x8] = _0xa812ac * _0x1e3f0e + _0x48591b * _0x36b8bb + _0x3acef7;
        }
        ['rotate'](_0x413d1d, _0x4f0466) {
            var _0x1a293e = _0x4f0466['elements'], _0x3d2a3a = this['elements'], _0x4bb861 = _0x3d2a3a[0x0], _0x28aad5 = _0x3d2a3a[0x1], _0x54265c = _0x3d2a3a[0x2], _0x2e294a = _0x3d2a3a[0x3], _0x37bc70 = _0x3d2a3a[0x4], _0x31fe43 = _0x3d2a3a[0x5], _0xea6a84 = _0x3d2a3a[0x6], _0x57f99e = _0x3d2a3a[0x7], _0x4b1ee7 = _0x3d2a3a[0x8], _0x34c20e = Math['sin'](_0x413d1d), _0x3ad90d = Math['cos'](_0x413d1d);
            _0x1a293e[0x0] = _0x3ad90d * _0x4bb861 + _0x34c20e * _0x2e294a, _0x1a293e[0x1] = _0x3ad90d * _0x28aad5 + _0x34c20e * _0x37bc70, _0x1a293e[0x2] = _0x3ad90d * _0x54265c + _0x34c20e * _0x31fe43, _0x1a293e[0x3] = _0x3ad90d * _0x2e294a - _0x34c20e * _0x4bb861, _0x1a293e[0x4] = _0x3ad90d * _0x37bc70 - _0x34c20e * _0x28aad5, _0x1a293e[0x5] = _0x3ad90d * _0x31fe43 - _0x34c20e * _0x54265c, _0x1a293e[0x6] = _0xea6a84, _0x1a293e[0x7] = _0x57f99e, _0x1a293e[0x8] = _0x4b1ee7;
        }
        ['scale'](_0x3e7f82, _0x4b9f5b) {
            var _0x320bad = _0x4b9f5b['elements'], _0x3baf09 = this['elements'], _0x2e88b1 = _0x3e7f82['x'], _0x143639 = _0x3e7f82['y'];
            _0x320bad[0x0] = _0x2e88b1 * _0x3baf09[0x0], _0x320bad[0x1] = _0x2e88b1 * _0x3baf09[0x1], _0x320bad[0x2] = _0x2e88b1 * _0x3baf09[0x2], _0x320bad[0x3] = _0x143639 * _0x3baf09[0x3], _0x320bad[0x4] = _0x143639 * _0x3baf09[0x4], _0x320bad[0x5] = _0x143639 * _0x3baf09[0x5], _0x320bad[0x6] = _0x3baf09[0x6], _0x320bad[0x7] = _0x3baf09[0x7], _0x320bad[0x8] = _0x3baf09[0x8];
        }
        ['invert'](_0x9eca34) {
            var _0x2744f8 = _0x9eca34['elements'], _0x4aef34 = this['elements'], _0x4bd42e = _0x4aef34[0x0], _0x27ae9b = _0x4aef34[0x1], _0xce2530 = _0x4aef34[0x2], _0x5a8518 = _0x4aef34[0x3], _0x1553ef = _0x4aef34[0x4], _0x391dbf = _0x4aef34[0x5], _0xcdeddc = _0x4aef34[0x6], _0x39242e = _0x4aef34[0x7], _0x1afd7a = _0x4aef34[0x8], _0x2f2aa5 = _0x1afd7a * _0x1553ef - _0x391dbf * _0x39242e, _0x58486e = -_0x1afd7a * _0x5a8518 + _0x391dbf * _0xcdeddc, _0x530ddb = _0x39242e * _0x5a8518 - _0x1553ef * _0xcdeddc, _0x58d299 = _0x4bd42e * _0x2f2aa5 + _0x27ae9b * _0x58486e + _0xce2530 * _0x530ddb;
            _0x58d299 || (_0x9eca34 = null), _0x58d299 = 0x1 / _0x58d299, _0x2744f8[0x0] = _0x2f2aa5 * _0x58d299, _0x2744f8[0x1] = (-_0x1afd7a * _0x27ae9b + _0xce2530 * _0x39242e) * _0x58d299, _0x2744f8[0x2] = (_0x391dbf * _0x27ae9b - _0xce2530 * _0x1553ef) * _0x58d299, _0x2744f8[0x3] = _0x58486e * _0x58d299, _0x2744f8[0x4] = (_0x1afd7a * _0x4bd42e - _0xce2530 * _0xcdeddc) * _0x58d299, _0x2744f8[0x5] = (-_0x391dbf * _0x4bd42e + _0xce2530 * _0x5a8518) * _0x58d299, _0x2744f8[0x6] = _0x530ddb * _0x58d299, _0x2744f8[0x7] = (-_0x39242e * _0x4bd42e + _0x27ae9b * _0xcdeddc) * _0x58d299, _0x2744f8[0x8] = (_0x1553ef * _0x4bd42e - _0x27ae9b * _0x5a8518) * _0x58d299;
        }
        ['transpose'](_0x883bbd) {
            var _0x386aca = _0x883bbd['elements'], _0x238678 = this['elements'];
            if (_0x883bbd === this) {
                var _0x308c3c = _0x238678[0x1], _0x3c6761 = _0x238678[0x2], _0x1185e6 = _0x238678[0x5];
                _0x386aca[0x1] = _0x238678[0x3], _0x386aca[0x2] = _0x238678[0x6], _0x386aca[0x3] = _0x308c3c, _0x386aca[0x5] = _0x238678[0x7], _0x386aca[0x6] = _0x3c6761, _0x386aca[0x7] = _0x1185e6;
            } else
                _0x386aca[0x0] = _0x238678[0x0], _0x386aca[0x1] = _0x238678[0x3], _0x386aca[0x2] = _0x238678[0x6], _0x386aca[0x3] = _0x238678[0x1], _0x386aca[0x4] = _0x238678[0x4], _0x386aca[0x5] = _0x238678[0x7], _0x386aca[0x6] = _0x238678[0x2], _0x386aca[0x7] = _0x238678[0x5], _0x386aca[0x8] = _0x238678[0x8];
        }
        ['identity']() {
            var _0x7071b6 = this['elements'];
            _0x7071b6[0x0] = 0x1, _0x7071b6[0x1] = 0x0, _0x7071b6[0x2] = 0x0, _0x7071b6[0x3] = 0x0, _0x7071b6[0x4] = 0x1, _0x7071b6[0x5] = 0x0, _0x7071b6[0x6] = 0x0, _0x7071b6[0x7] = 0x0, _0x7071b6[0x8] = 0x1;
        }
        ['cloneTo'](_0x192172) {
            var _0x1345b6, _0x2dac8f, _0x1b659a;
            if ((_0x2dac8f = this['elements']) !== (_0x1b659a = _0x192172['elements'])) {
                for (_0x1345b6 = 0x0; _0x1345b6 < 0x9; ++_0x1345b6)
                    _0x1b659a[_0x1345b6] = _0x2dac8f[_0x1345b6];
            }
        }
        ['clone']() {
            var _0x4a0013 = new _0x348b09();
            return this['cloneTo'](_0x4a0013), _0x4a0013;
        }
        static ['lookAt'](_0x135d25, _0x2cd9a4, _0xda41af, _0x5306b4) {
            _0x43b358['subtract'](_0x135d25, _0x2cd9a4, _0x348b09['_tempV30']), _0x43b358['normalize'](_0x348b09['_tempV30'], _0x348b09['_tempV30']), _0x43b358['cross'](_0xda41af, _0x348b09['_tempV30'], _0x348b09['_tempV31']), _0x43b358['normalize'](_0x348b09['_tempV31'], _0x348b09['_tempV31']), _0x43b358['cross'](_0x348b09['_tempV30'], _0x348b09['_tempV31'], _0x348b09['_tempV32']);
            var _0x4efba2 = _0x348b09['_tempV30'], _0x52301a = _0x348b09['_tempV31'], _0x4daa28 = _0x348b09['_tempV32'], _0x3d966a = _0x5306b4['elements'];
            _0x3d966a[0x0] = _0x52301a['x'], _0x3d966a[0x3] = _0x52301a['y'], _0x3d966a[0x6] = _0x52301a['z'], _0x3d966a[0x1] = _0x4daa28['x'], _0x3d966a[0x4] = _0x4daa28['y'], _0x3d966a[0x7] = _0x4daa28['z'], _0x3d966a[0x2] = _0x4efba2['x'], _0x3d966a[0x5] = _0x4efba2['y'], _0x3d966a[0x8] = _0x4efba2['z'];
        }
    }
    _0x348b09['DEFAULT'] = new _0x348b09(), _0x348b09['_tempV30'] = new _0x43b358(), _0x348b09['_tempV31'] = new _0x43b358(), _0x348b09['_tempV32'] = new _0x43b358();
    class _0x7cf2d3 {
        constructor(_0x523f91 = 0x0, _0x2a1d79 = 0x0, _0x44bbd = 0x0, _0x1c5526 = 0x1, _0x32b497 = null) {
            this['x'] = _0x523f91, this['y'] = _0x2a1d79, this['z'] = _0x44bbd, this['w'] = _0x1c5526;
        }
        static ['createFrom' + 'YawPitchRo' + 'll'](_0x1ed6b3, _0x7ff73b, _0xa55f48, _0x4102ad) {
            var _0x1cfb3b = 0.5 * _0xa55f48, _0x23541f = 0.5 * _0x7ff73b, _0x200124 = 0.5 * _0x1ed6b3, _0x19d8d7 = Math['sin'](_0x1cfb3b), _0x558774 = Math['cos'](_0x1cfb3b), _0x4d0607 = Math['sin'](_0x23541f), _0x5900f5 = Math['cos'](_0x23541f), _0x1167f2 = Math['sin'](_0x200124), _0x32633e = Math['cos'](_0x200124);
            _0x4102ad['x'] = _0x32633e * _0x4d0607 * _0x558774 + _0x1167f2 * _0x5900f5 * _0x19d8d7, _0x4102ad['y'] = _0x1167f2 * _0x5900f5 * _0x558774 - _0x32633e * _0x4d0607 * _0x19d8d7, _0x4102ad['z'] = _0x32633e * _0x5900f5 * _0x19d8d7 - _0x1167f2 * _0x4d0607 * _0x558774, _0x4102ad['w'] = _0x32633e * _0x5900f5 * _0x558774 + _0x1167f2 * _0x4d0607 * _0x19d8d7;
        }
        static ['multiply'](_0x1fd9ad, _0xf19e21, _0x48ce9b) {
            var _0x4c6d39 = _0x1fd9ad['x'], _0x7ab00d = _0x1fd9ad['y'], _0x3e6016 = _0x1fd9ad['z'], _0x163df9 = _0x1fd9ad['w'], _0x12d532 = _0xf19e21['x'], _0x30b29b = _0xf19e21['y'], _0x4b614c = _0xf19e21['z'], _0x32d2ee = _0xf19e21['w'], _0xd634cc = _0x7ab00d * _0x4b614c - _0x3e6016 * _0x30b29b, _0xca2ab9 = _0x3e6016 * _0x12d532 - _0x4c6d39 * _0x4b614c, _0x4a76ae = _0x4c6d39 * _0x30b29b - _0x7ab00d * _0x12d532, _0x386b32 = _0x4c6d39 * _0x12d532 + _0x7ab00d * _0x30b29b + _0x3e6016 * _0x4b614c;
            _0x48ce9b['x'] = _0x4c6d39 * _0x32d2ee + _0x12d532 * _0x163df9 + _0xd634cc, _0x48ce9b['y'] = _0x7ab00d * _0x32d2ee + _0x30b29b * _0x163df9 + _0xca2ab9, _0x48ce9b['z'] = _0x3e6016 * _0x32d2ee + _0x4b614c * _0x163df9 + _0x4a76ae, _0x48ce9b['w'] = _0x163df9 * _0x32d2ee - _0x386b32;
        }
        static ['arcTanAngl' + 'e'](_0x5664bd, _0x435e9b) {
            return 0x0 == _0x5664bd ? 0x1 == _0x435e9b ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x5664bd > 0x0 ? Math['atan'](_0x435e9b / _0x5664bd) : _0x5664bd < 0x0 ? _0x435e9b > 0x0 ? Math['atan'](_0x435e9b / _0x5664bd) + Math['PI'] : Math['atan'](_0x435e9b / _0x5664bd) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0x15c5b9, _0x3f3c96, _0x1c018d) {
            _0x43b358['subtract'](_0x3f3c96, _0x15c5b9, _0x7cf2d3['TEMPVector' + '30']), _0x43b358['normalize'](_0x7cf2d3['TEMPVector' + '30'], _0x7cf2d3['TEMPVector' + '30']), _0x1c018d['x'] = Math['asin'](_0x7cf2d3['TEMPVector' + '30']['y']), _0x1c018d['y'] = _0x7cf2d3['arcTanAngl' + 'e'](-_0x7cf2d3['TEMPVector' + '30']['z'], -_0x7cf2d3['TEMPVector' + '30']['x']);
        }
        static ['createFrom' + 'AxisAngle'](_0x2ab456, _0x2ef81d, _0x5ca041) {
            _0x2ef81d *= 0.5;
            var _0x5f47d0 = Math['sin'](_0x2ef81d);
            _0x5ca041['x'] = _0x5f47d0 * _0x2ab456['x'], _0x5ca041['y'] = _0x5f47d0 * _0x2ab456['y'], _0x5ca041['z'] = _0x5f47d0 * _0x2ab456['z'], _0x5ca041['w'] = Math['cos'](_0x2ef81d);
        }
        static ['createFrom' + 'Matrix4x4'](_0x11bb58, _0x282844) {
            var _0x575cd0, _0x196137, _0x1c12e6 = _0x11bb58['elements'], _0x9755cf = _0x1c12e6[0x0] + _0x1c12e6[0x5] + _0x1c12e6[0xa];
            _0x9755cf > 0x0 ? (_0x575cd0 = Math['sqrt'](_0x9755cf + 0x1), _0x282844['w'] = 0.5 * _0x575cd0, _0x575cd0 = 0.5 / _0x575cd0, _0x282844['x'] = (_0x1c12e6[0x6] - _0x1c12e6[0x9]) * _0x575cd0, _0x282844['y'] = (_0x1c12e6[0x8] - _0x1c12e6[0x2]) * _0x575cd0, _0x282844['z'] = (_0x1c12e6[0x1] - _0x1c12e6[0x4]) * _0x575cd0) : _0x1c12e6[0x0] >= _0x1c12e6[0x5] && _0x1c12e6[0x0] >= _0x1c12e6[0xa] ? (_0x196137 = 0.5 / (_0x575cd0 = Math['sqrt'](0x1 + _0x1c12e6[0x0] - _0x1c12e6[0x5] - _0x1c12e6[0xa])), _0x282844['x'] = 0.5 * _0x575cd0, _0x282844['y'] = (_0x1c12e6[0x1] + _0x1c12e6[0x4]) * _0x196137, _0x282844['z'] = (_0x1c12e6[0x2] + _0x1c12e6[0x8]) * _0x196137, _0x282844['w'] = (_0x1c12e6[0x6] - _0x1c12e6[0x9]) * _0x196137) : _0x1c12e6[0x5] > _0x1c12e6[0xa] ? (_0x196137 = 0.5 / (_0x575cd0 = Math['sqrt'](0x1 + _0x1c12e6[0x5] - _0x1c12e6[0x0] - _0x1c12e6[0xa])), _0x282844['x'] = (_0x1c12e6[0x4] + _0x1c12e6[0x1]) * _0x196137, _0x282844['y'] = 0.5 * _0x575cd0, _0x282844['z'] = (_0x1c12e6[0x9] + _0x1c12e6[0x6]) * _0x196137, _0x282844['w'] = (_0x1c12e6[0x8] - _0x1c12e6[0x2]) * _0x196137) : (_0x196137 = 0.5 / (_0x575cd0 = Math['sqrt'](0x1 + _0x1c12e6[0xa] - _0x1c12e6[0x0] - _0x1c12e6[0x5])), _0x282844['x'] = (_0x1c12e6[0x8] + _0x1c12e6[0x2]) * _0x196137, _0x282844['y'] = (_0x1c12e6[0x9] + _0x1c12e6[0x6]) * _0x196137, _0x282844['z'] = 0.5 * _0x575cd0, _0x282844['w'] = (_0x1c12e6[0x1] - _0x1c12e6[0x4]) * _0x196137);
        }
        static ['slerp'](_0x292777, _0x368fb3, _0x5effcd, _0x113b84) {
            var _0x1b4d27, _0xeb2ff3, _0x2c5459, _0x2cd1e0, _0x129469, _0x2bc02d = _0x292777['x'], _0x13689f = _0x292777['y'], _0x5022bb = _0x292777['z'], _0x553369 = _0x292777['w'], _0x291116 = _0x368fb3['x'], _0x150b18 = _0x368fb3['y'], _0x5f40ba = _0x368fb3['z'], _0x42958d = _0x368fb3['w'];
            return (_0xeb2ff3 = _0x2bc02d * _0x291116 + _0x13689f * _0x150b18 + _0x5022bb * _0x5f40ba + _0x553369 * _0x42958d) < 0x0 && (_0xeb2ff3 = -_0xeb2ff3, _0x291116 = -_0x291116, _0x150b18 = -_0x150b18, _0x5f40ba = -_0x5f40ba, _0x42958d = -_0x42958d), 0x1 - _0xeb2ff3 > 0.000001 ? (_0x1b4d27 = Math['acos'](_0xeb2ff3), _0x2c5459 = Math['sin'](_0x1b4d27), _0x2cd1e0 = Math['sin']((0x1 - _0x5effcd) * _0x1b4d27) / _0x2c5459, _0x129469 = Math['sin'](_0x5effcd * _0x1b4d27) / _0x2c5459) : (_0x2cd1e0 = 0x1 - _0x5effcd, _0x129469 = _0x5effcd), _0x113b84['x'] = _0x2cd1e0 * _0x2bc02d + _0x129469 * _0x291116, _0x113b84['y'] = _0x2cd1e0 * _0x13689f + _0x129469 * _0x150b18, _0x113b84['z'] = _0x2cd1e0 * _0x5022bb + _0x129469 * _0x5f40ba, _0x113b84['w'] = _0x2cd1e0 * _0x553369 + _0x129469 * _0x42958d, _0x113b84;
        }
        static ['lerp'](_0x1874bf, _0x422638, _0x41da11, _0x3cb6c8) {
            var _0x39c152 = 0x1 - _0x41da11;
            _0x7cf2d3['dot'](_0x1874bf, _0x422638) >= 0x0 ? (_0x3cb6c8['x'] = _0x39c152 * _0x1874bf['x'] + _0x41da11 * _0x422638['x'], _0x3cb6c8['y'] = _0x39c152 * _0x1874bf['y'] + _0x41da11 * _0x422638['y'], _0x3cb6c8['z'] = _0x39c152 * _0x1874bf['z'] + _0x41da11 * _0x422638['z'], _0x3cb6c8['w'] = _0x39c152 * _0x1874bf['w'] + _0x41da11 * _0x422638['w']) : (_0x3cb6c8['x'] = _0x39c152 * _0x1874bf['x'] - _0x41da11 * _0x422638['x'], _0x3cb6c8['y'] = _0x39c152 * _0x1874bf['y'] - _0x41da11 * _0x422638['y'], _0x3cb6c8['z'] = _0x39c152 * _0x1874bf['z'] - _0x41da11 * _0x422638['z'], _0x3cb6c8['w'] = _0x39c152 * _0x1874bf['w'] - _0x41da11 * _0x422638['w']), _0x3cb6c8['normalize'](_0x3cb6c8);
        }
        static ['add'](_0x3ecd6e, _0xda32bc, _0xe08a0c) {
            _0xe08a0c['x'] = _0x3ecd6e['x'] + _0xda32bc['x'], _0xe08a0c['y'] = _0x3ecd6e['y'] + _0xda32bc['y'], _0xe08a0c['z'] = _0x3ecd6e['z'] + _0xda32bc['z'], _0xe08a0c['w'] = _0x3ecd6e['w'] + _0xda32bc['w'];
        }
        static ['dot'](_0x380ba9, _0x5481b7) {
            return _0x380ba9['x'] * _0x5481b7['x'] + _0x380ba9['y'] * _0x5481b7['y'] + _0x380ba9['z'] * _0x5481b7['z'] + _0x380ba9['w'] * _0x5481b7['w'];
        }
        ['scaling'](_0x45da91, _0xd9e3cd) {
            _0xd9e3cd['x'] = this['x'] * _0x45da91, _0xd9e3cd['y'] = this['y'] * _0x45da91, _0xd9e3cd['z'] = this['z'] * _0x45da91, _0xd9e3cd['w'] = this['w'] * _0x45da91;
        }
        ['normalize'](_0x1c7f01) {
            var _0x22581c = this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
            _0x22581c > 0x0 && (_0x22581c = 0x1 / Math['sqrt'](_0x22581c), _0x1c7f01['x'] = this['x'] * _0x22581c, _0x1c7f01['y'] = this['y'] * _0x22581c, _0x1c7f01['z'] = this['z'] * _0x22581c, _0x1c7f01['w'] = this['w'] * _0x22581c);
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['rotateX'](_0x38f9a5, _0x11c328) {
            _0x38f9a5 *= 0.5;
            var _0x3296ca = Math['sin'](_0x38f9a5), _0x564707 = Math['cos'](_0x38f9a5);
            _0x11c328['x'] = this['x'] * _0x564707 + this['w'] * _0x3296ca, _0x11c328['y'] = this['y'] * _0x564707 + this['z'] * _0x3296ca, _0x11c328['z'] = this['z'] * _0x564707 - this['y'] * _0x3296ca, _0x11c328['w'] = this['w'] * _0x564707 - this['x'] * _0x3296ca;
        }
        ['rotateY'](_0x5e9cd8, _0x1bcf95) {
            _0x5e9cd8 *= 0.5;
            var _0x5bfb60 = Math['sin'](_0x5e9cd8), _0x23c416 = Math['cos'](_0x5e9cd8);
            _0x1bcf95['x'] = this['x'] * _0x23c416 - this['z'] * _0x5bfb60, _0x1bcf95['y'] = this['y'] * _0x23c416 + this['w'] * _0x5bfb60, _0x1bcf95['z'] = this['z'] * _0x23c416 + this['x'] * _0x5bfb60, _0x1bcf95['w'] = this['w'] * _0x23c416 - this['y'] * _0x5bfb60;
        }
        ['rotateZ'](_0x5174af, _0x3b3553) {
            _0x5174af *= 0.5;
            var _0x348734 = Math['sin'](_0x5174af), _0x3800aa = Math['cos'](_0x5174af);
            _0x3b3553['x'] = this['x'] * _0x3800aa + this['y'] * _0x348734, _0x3b3553['y'] = this['y'] * _0x3800aa - this['x'] * _0x348734, _0x3b3553['z'] = this['z'] * _0x3800aa + this['w'] * _0x348734, _0x3b3553['w'] = this['w'] * _0x3800aa - this['z'] * _0x348734;
        }
        ['getYawPitc' + 'hRoll'](_0x323070) {
            _0x43b358['transformQ' + 'uat'](_0x43b358['_ForwardRH'], this, _0x7cf2d3['TEMPVector' + '31']), _0x43b358['transformQ' + 'uat'](_0x43b358['_Up'], this, _0x7cf2d3['TEMPVector' + '32']);
            var _0x3af38d = _0x7cf2d3['TEMPVector' + '32'];
            _0x7cf2d3['angleTo'](_0x43b358['_ZERO'], _0x7cf2d3['TEMPVector' + '31'], _0x7cf2d3['TEMPVector' + '33']);
            var _0x40170b = _0x7cf2d3['TEMPVector' + '33'];
            _0x40170b['x'] == Math['PI'] / 0x2 ? (_0x40170b['y'] = _0x7cf2d3['arcTanAngl' + 'e'](_0x3af38d['z'], _0x3af38d['x']), _0x40170b['z'] = 0x0) : _0x40170b['x'] == -Math['PI'] / 0x2 ? (_0x40170b['y'] = _0x7cf2d3['arcTanAngl' + 'e'](-_0x3af38d['z'], -_0x3af38d['x']), _0x40170b['z'] = 0x0) : (_0x1fc38b['Matrix4x4']['createRota' + 'tionY'](-_0x40170b['y'], _0x1fc38b['Matrix4x4']['TEMPMatrix' + '0']), _0x1fc38b['Matrix4x4']['createRota' + 'tionX'](-_0x40170b['x'], _0x1fc38b['Matrix4x4']['TEMPMatrix' + '1']), _0x43b358['transformC' + 'oordinate'](_0x7cf2d3['TEMPVector' + '32'], _0x1fc38b['Matrix4x4']['TEMPMatrix' + '0'], _0x7cf2d3['TEMPVector' + '32']), _0x43b358['transformC' + 'oordinate'](_0x7cf2d3['TEMPVector' + '32'], _0x1fc38b['Matrix4x4']['TEMPMatrix' + '1'], _0x7cf2d3['TEMPVector' + '32']), _0x40170b['z'] = _0x7cf2d3['arcTanAngl' + 'e'](_0x3af38d['y'], -_0x3af38d['x'])), _0x40170b['y'] <= -Math['PI'] && (_0x40170b['y'] = Math['PI']), _0x40170b['z'] <= -Math['PI'] && (_0x40170b['z'] = Math['PI']), _0x40170b['y'] >= Math['PI'] && _0x40170b['z'] >= Math['PI'] && (_0x40170b['y'] = 0x0, _0x40170b['z'] = 0x0, _0x40170b['x'] = Math['PI'] - _0x40170b['x']);
            var _0xdb46f = _0x323070;
            _0xdb46f['x'] = _0x40170b['y'], _0xdb46f['y'] = _0x40170b['x'], _0xdb46f['z'] = _0x40170b['z'];
        }
        ['invert'](_0x15d726) {
            var _0x382ca5 = this['x'], _0x2cf8be = this['y'], _0x504c01 = this['z'], _0x408e17 = this['w'], _0x3801bd = _0x382ca5 * _0x382ca5 + _0x2cf8be * _0x2cf8be + _0x504c01 * _0x504c01 + _0x408e17 * _0x408e17, _0x5a89b5 = _0x3801bd ? 0x1 / _0x3801bd : 0x0;
            _0x15d726['x'] = -_0x382ca5 * _0x5a89b5, _0x15d726['y'] = -_0x2cf8be * _0x5a89b5, _0x15d726['z'] = -_0x504c01 * _0x5a89b5, _0x15d726['w'] = _0x408e17 * _0x5a89b5;
        }
        ['identity']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0, this['w'] = 0x1;
        }
        ['fromArray'](_0x44b1bb, _0x27932a = 0x0) {
            this['x'] = _0x44b1bb[_0x27932a + 0x0], this['y'] = _0x44b1bb[_0x27932a + 0x1], this['z'] = _0x44b1bb[_0x27932a + 0x2], this['w'] = _0x44b1bb[_0x27932a + 0x3];
        }
        ['cloneTo'](_0x451ee8) {
            this !== _0x451ee8 && (_0x451ee8['x'] = this['x'], _0x451ee8['y'] = this['y'], _0x451ee8['z'] = this['z'], _0x451ee8['w'] = this['w']);
        }
        ['clone']() {
            var _0x145ba4 = new _0x7cf2d3();
            return this['cloneTo'](_0x145ba4), _0x145ba4;
        }
        ['equals'](_0x5f26a5) {
            return _0x40af95['nearEqual'](this['x'], _0x5f26a5['x']) && _0x40af95['nearEqual'](this['y'], _0x5f26a5['y']) && _0x40af95['nearEqual'](this['z'], _0x5f26a5['z']) && _0x40af95['nearEqual'](this['w'], _0x5f26a5['w']);
        }
        static ['rotationLo' + 'okAt'](_0x326769, _0x422388, _0x5cec93) {
            _0x7cf2d3['lookAt'](_0x43b358['_ZERO'], _0x326769, _0x422388, _0x5cec93);
        }
        static ['lookAt'](_0x42b821, _0x1da3d4, _0x23a300, _0x5c14b3) {
            _0x348b09['lookAt'](_0x42b821, _0x1da3d4, _0x23a300, _0x7cf2d3['_tempMatri' + 'x3x3']), _0x7cf2d3['rotationMa' + 'trix'](_0x7cf2d3['_tempMatri' + 'x3x3'], _0x5c14b3);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['invert'](_0x4fce73, _0x4981b0) {
            var _0x466605 = _0x4fce73['lengthSqua' + 'red']();
            _0x40af95['isZero'](_0x466605) || (_0x466605 = 0x1 / _0x466605, _0x4981b0['x'] = -_0x4fce73['x'] * _0x466605, _0x4981b0['y'] = -_0x4fce73['y'] * _0x466605, _0x4981b0['z'] = -_0x4fce73['z'] * _0x466605, _0x4981b0['w'] = _0x4fce73['w'] * _0x466605);
        }
        static ['rotationMa' + 'trix'](_0x2043b7, _0x26b9b2) {
            var _0x46d40b, _0x2f9b82, _0x38a9ce = _0x2043b7['elements'], _0xefc299 = _0x38a9ce[0x0], _0x2bfeb7 = _0x38a9ce[0x1], _0x4e42e9 = _0x38a9ce[0x2], _0x262a7e = _0x38a9ce[0x3], _0x15109d = _0x38a9ce[0x4], _0x6faefa = _0x38a9ce[0x5], _0x19d2b3 = _0x38a9ce[0x6], _0x2b2aea = _0x38a9ce[0x7], _0x2b049f = _0x38a9ce[0x8], _0x4a8ed7 = _0xefc299 + _0x15109d + _0x2b049f;
            _0x4a8ed7 > 0x0 ? (_0x46d40b = Math['sqrt'](_0x4a8ed7 + 0x1), _0x26b9b2['w'] = 0.5 * _0x46d40b, _0x46d40b = 0.5 / _0x46d40b, _0x26b9b2['x'] = (_0x6faefa - _0x2b2aea) * _0x46d40b, _0x26b9b2['y'] = (_0x19d2b3 - _0x4e42e9) * _0x46d40b, _0x26b9b2['z'] = (_0x2bfeb7 - _0x262a7e) * _0x46d40b) : _0xefc299 >= _0x15109d && _0xefc299 >= _0x2b049f ? (_0x2f9b82 = 0.5 / (_0x46d40b = Math['sqrt'](0x1 + _0xefc299 - _0x15109d - _0x2b049f)), _0x26b9b2['x'] = 0.5 * _0x46d40b, _0x26b9b2['y'] = (_0x2bfeb7 + _0x262a7e) * _0x2f9b82, _0x26b9b2['z'] = (_0x4e42e9 + _0x19d2b3) * _0x2f9b82, _0x26b9b2['w'] = (_0x6faefa - _0x2b2aea) * _0x2f9b82) : _0x15109d > _0x2b049f ? (_0x2f9b82 = 0.5 / (_0x46d40b = Math['sqrt'](0x1 + _0x15109d - _0xefc299 - _0x2b049f)), _0x26b9b2['x'] = (_0x262a7e + _0x2bfeb7) * _0x2f9b82, _0x26b9b2['y'] = 0.5 * _0x46d40b, _0x26b9b2['z'] = (_0x2b2aea + _0x6faefa) * _0x2f9b82, _0x26b9b2['w'] = (_0x19d2b3 - _0x4e42e9) * _0x2f9b82) : (_0x2f9b82 = 0.5 / (_0x46d40b = Math['sqrt'](0x1 + _0x2b049f - _0xefc299 - _0x15109d)), _0x26b9b2['x'] = (_0x19d2b3 + _0x4e42e9) * _0x2f9b82, _0x26b9b2['y'] = (_0x2b2aea + _0x6faefa) * _0x2f9b82, _0x26b9b2['z'] = 0.5 * _0x46d40b, _0x26b9b2['w'] = (_0x2bfeb7 - _0x262a7e) * _0x2f9b82);
        }
        ['forNativeE' + 'lement'](_0x34557c = null) {
            _0x34557c ? (this['elements'] = _0x34557c, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z'], this['elements'][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x2d45ed['rewriteNum' + 'Property'](this, 'x', 0x0), _0x2d45ed['rewriteNum' + 'Property'](this, 'y', 0x1), _0x2d45ed['rewriteNum' + 'Property'](this, 'z', 0x2), _0x2d45ed['rewriteNum' + 'Property'](this, 'w', 0x3);
        }
    }
    _0x7cf2d3['TEMPVector' + '30'] = new _0x43b358(), _0x7cf2d3['TEMPVector' + '31'] = new _0x43b358(), _0x7cf2d3['TEMPVector' + '32'] = new _0x43b358(), _0x7cf2d3['TEMPVector' + '33'] = new _0x43b358(), _0x7cf2d3['_tempMatri' + 'x3x3'] = new _0x348b09(), _0x7cf2d3['DEFAULT'] = new _0x7cf2d3(), _0x7cf2d3['NAN'] = new _0x7cf2d3(NaN, NaN, NaN, NaN);
    class _0x24fa29 extends _0x498910 {
        constructor() {
            super(), this['inTangent'] = new _0x4cec8f(), this['outTangent'] = new _0x4cec8f(), this['value'] = new _0x7cf2d3();
        }
        ['cloneTo'](_0x24f73f) {
            super['cloneTo'](_0x24f73f);
            var _0x5d3fa3 = _0x24f73f;
            this['inTangent']['cloneTo'](_0x5d3fa3['inTangent']), this['outTangent']['cloneTo'](_0x5d3fa3['outTangent']), this['value']['cloneTo'](_0x5d3fa3['value']);
        }
    }
    class _0x4b790b extends _0x498910 {
        constructor() {
            super(), this['inTangent'] = new _0x43b358(), this['outTangent'] = new _0x43b358(), this['value'] = new _0x43b358();
        }
        ['cloneTo'](_0x4c577f) {
            super['cloneTo'](_0x4c577f);
            var _0x130616 = _0x4c577f;
            this['inTangent']['cloneTo'](_0x130616['inTangent']), this['outTangent']['cloneTo'](_0x130616['outTangent']), this['value']['cloneTo'](_0x130616['value']);
        }
    }
    class _0x5075af {
        static ['READ_DATA']() {
            _0x5075af['_DATA']['offset'] = _0x5075af['_reader']['getUint32'](), _0x5075af['_DATA']['size'] = _0x5075af['_reader']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x3d3614 = _0x5075af['_BLOCK']['count'] = _0x5075af['_reader']['getUint16'](), _0x1157b1 = _0x5075af['_BLOCK']['blockStart' + 's'] = [], _0x4469bf = _0x5075af['_BLOCK']['blockLengt' + 'hs'] = [], _0x2d09ab = 0x0; _0x2d09ab < _0x3d3614; _0x2d09ab++)
                _0x1157b1['push'](_0x5075af['_reader']['getUint32']()), _0x4469bf['push'](_0x5075af['_reader']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x455a3f = _0x5075af['_reader']['getUint32'](), _0x7dd4b = _0x5075af['_reader']['getUint16'](), _0x742d89 = _0x5075af['_reader']['pos'];
            _0x5075af['_reader']['pos'] = _0x455a3f + _0x5075af['_DATA']['offset'];
            for (var _0x468643 = 0x0; _0x468643 < _0x7dd4b; _0x468643++)
                _0x5075af['_strings'][_0x468643] = _0x5075af['_reader']['readUTFStr' + 'ing']();
            _0x5075af['_reader']['pos'] = _0x742d89;
        }
        static ['parse'](_0x5f58b3, _0x125bdd) {
            _0x5075af['_animation' + 'Clip'] = _0x5f58b3, _0x5075af['_reader'] = _0x125bdd, _0x125bdd['__getBuffe' + 'r'](), (_0x5075af['READ_DATA'](), _0x5075af['READ_BLOCK'](), _0x5075af['READ_STRIN' + 'GS']());
            for (var _0x56ac16 = 0x0, _0x2b2c8c = _0x5075af['_BLOCK']['count']; _0x56ac16 < _0x2b2c8c; _0x56ac16++) {
                var _0x36c437 = _0x125bdd['getUint16'](), _0x49c9d0 = _0x5075af['_strings'][_0x36c437], _0x517012 = _0x5075af['READ_' + _0x49c9d0];
                if (null == _0x517012)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x36c437 + '\x20' + _0x49c9d0);
                _0x517012['call'](null);
            }
        }
        static ['READ_ANIMA' + 'TIONS']() {
            var _0x334f28, _0x4c48b5, _0x4ef233, _0x2d4378 = _0x5075af['_reader'], _0x22bd56 = (_0x2d4378['__getBuffe' + 'r'](), []), _0x34a571 = _0x2d4378['getUint16']();
            for (_0x22bd56['length'] = _0x34a571, _0x334f28 = 0x0; _0x334f28 < _0x34a571; _0x334f28++)
                _0x22bd56[_0x334f28] = _0x2d4378['getFloat32']();
            var _0x2c48a0 = _0x5075af['_animation' + 'Clip'];
            _0x2c48a0['name'] = _0x5075af['_strings'][_0x2d4378['getUint16']()];
            var _0x2ea6a5 = _0x2c48a0['_duration'] = _0x2d4378['getFloat32']();
            _0x2c48a0['islooping'] = !!_0x2d4378['getByte'](), _0x2c48a0['_frameRate'] = _0x2d4378['getInt16']();
            var _0x50d828 = _0x2d4378['getInt16'](), _0x5f45d2 = _0x2c48a0['_nodes'];
            _0x5f45d2['count'] = _0x50d828;
            var _0x222679 = _0x2c48a0['_nodesMap'] = {}, _0x378a03 = _0x2c48a0['_nodesDic'] = {};
            for (_0x334f28 = 0x0; _0x334f28 < _0x50d828; _0x334f28++) {
                _0x4ef233 = new _0x3f2025(), _0x5f45d2['setNodeByI' + 'ndex'](_0x334f28, _0x4ef233), _0x4ef233['_indexInLi' + 'st'] = _0x334f28;
                var _0x167429 = _0x4ef233['type'] = _0x2d4378['getUint8'](), _0x41d34e = _0x2d4378['getUint16']();
                for (_0x4ef233['_setOwnerP' + 'athCount'](_0x41d34e), _0x4c48b5 = 0x0; _0x4c48b5 < _0x41d34e; _0x4c48b5++)
                    _0x4ef233['_setOwnerP' + 'athByIndex'](_0x4c48b5, _0x5075af['_strings'][_0x2d4378['getUint16']()]);
                var _0x2d121a = _0x4ef233['_joinOwner' + 'Path']('/'), _0x19bc44 = _0x222679[_0x2d121a];
                _0x19bc44 || (_0x222679[_0x2d121a] = _0x19bc44 = []), _0x19bc44['push'](_0x4ef233), _0x4ef233['propertyOw' + 'ner'] = _0x5075af['_strings'][_0x2d4378['getUint16']()];
                var _0x5beed0 = _0x2d4378['getUint16']();
                for (_0x4ef233['_setProper' + 'tyCount'](_0x5beed0), _0x4c48b5 = 0x0; _0x4c48b5 < _0x5beed0; _0x4c48b5++)
                    _0x4ef233['_setProper' + 'tyByIndex'](_0x4c48b5, _0x5075af['_strings'][_0x2d4378['getUint16']()]);
                var _0x469394 = _0x2d121a + '.' + _0x4ef233['propertyOw' + 'ner'] + '.' + _0x4ef233['_joinPrope' + 'rty']('.');
                _0x378a03[_0x469394] = _0x4ef233, _0x4ef233['fullPath'] = _0x469394;
                var _0x24a715 = _0x2d4378['getUint16']();
                for (_0x4ef233['_setKeyfra' + 'meCount'](_0x24a715), _0x4c48b5 = 0x0; _0x4c48b5 < _0x24a715; _0x4c48b5++)
                    switch (_0x167429) {
                    case 0x0:
                        var _0xd51e2f = new _0x6059d7();
                        _0x4ef233['_setKeyfra' + 'meByIndex'](_0x4c48b5, _0xd51e2f), _0xd51e2f['time'] = _0x22bd56[_0x2d4378['getUint16']()], _0xd51e2f['inTangent'] = _0x2d4378['getFloat32'](), _0xd51e2f['outTangent'] = _0x2d4378['getFloat32'](), _0xd51e2f['value'] = _0x2d4378['getFloat32']();
                        break;
                    case 0x1:
                    case 0x3:
                    case 0x4:
                        var _0x4b10d3 = new _0x4b790b();
                        if (_0x4ef233['_setKeyfra' + 'meByIndex'](_0x4c48b5, _0x4b10d3), _0x4b10d3['time'] = _0x22bd56[_0x2d4378['getUint16']()], _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                            for (var _0x4f26fe = _0x4b10d3['data'] = new Float32Array(0x9), _0x51af5e = 0x0; _0x51af5e < 0x3; _0x51af5e++)
                                _0x4f26fe[_0x51af5e] = _0x2d4378['getFloat32']();
                            for (_0x51af5e = 0x0; _0x51af5e < 0x3; _0x51af5e++)
                                _0x4f26fe[0x3 + _0x51af5e] = _0x2d4378['getFloat32']();
                            for (_0x51af5e = 0x0; _0x51af5e < 0x3; _0x51af5e++)
                                _0x4f26fe[0x6 + _0x51af5e] = _0x2d4378['getFloat32']();
                        } else {
                            var _0x4ef7f2 = _0x4b10d3['inTangent'], _0x468a53 = _0x4b10d3['outTangent'], _0x16e630 = _0x4b10d3['value'];
                            _0x4ef7f2['x'] = _0x2d4378['getFloat32'](), _0x4ef7f2['y'] = _0x2d4378['getFloat32'](), _0x4ef7f2['z'] = _0x2d4378['getFloat32'](), _0x468a53['x'] = _0x2d4378['getFloat32'](), _0x468a53['y'] = _0x2d4378['getFloat32'](), _0x468a53['z'] = _0x2d4378['getFloat32'](), _0x16e630['x'] = _0x2d4378['getFloat32'](), _0x16e630['y'] = _0x2d4378['getFloat32'](), _0x16e630['z'] = _0x2d4378['getFloat32']();
                        }
                        break;
                    case 0x2:
                        var _0x30259f = new _0x24fa29();
                        if (_0x4ef233['_setKeyfra' + 'meByIndex'](_0x4c48b5, _0x30259f), _0x30259f['time'] = _0x22bd56[_0x2d4378['getUint16']()], _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                            for (_0x4f26fe = _0x30259f['data'] = new Float32Array(0xc), _0x51af5e = 0x0; _0x51af5e < 0x4; _0x51af5e++)
                                _0x4f26fe[_0x51af5e] = _0x2d4378['getFloat32']();
                            for (_0x51af5e = 0x0; _0x51af5e < 0x4; _0x51af5e++)
                                _0x4f26fe[0x4 + _0x51af5e] = _0x2d4378['getFloat32']();
                            for (_0x51af5e = 0x0; _0x51af5e < 0x4; _0x51af5e++)
                                _0x4f26fe[0x8 + _0x51af5e] = _0x2d4378['getFloat32']();
                        } else {
                            var _0x490fd0 = _0x30259f['inTangent'], _0x3a33b4 = _0x30259f['outTangent'], _0x268fbf = _0x30259f['value'];
                            _0x490fd0['x'] = _0x2d4378['getFloat32'](), _0x490fd0['y'] = _0x2d4378['getFloat32'](), _0x490fd0['z'] = _0x2d4378['getFloat32'](), _0x490fd0['w'] = _0x2d4378['getFloat32'](), _0x3a33b4['x'] = _0x2d4378['getFloat32'](), _0x3a33b4['y'] = _0x2d4378['getFloat32'](), _0x3a33b4['z'] = _0x2d4378['getFloat32'](), _0x3a33b4['w'] = _0x2d4378['getFloat32'](), _0x268fbf['x'] = _0x2d4378['getFloat32'](), _0x268fbf['y'] = _0x2d4378['getFloat32'](), _0x268fbf['z'] = _0x2d4378['getFloat32'](), _0x268fbf['w'] = _0x2d4378['getFloat32']();
                        }
                        break;
                    default:
                        throw 'AnimationC' + 'lipParser0' + '3:unknown\x20' + 'type.';
                    }
            }
            var _0x3b88e5 = _0x2d4378['getUint16']();
            for (_0x334f28 = 0x0; _0x334f28 < _0x3b88e5; _0x334f28++) {
                var _0x52f09a, _0x54964b = new _0x18867d();
                _0x54964b['time'] = Math['min'](_0x2ea6a5, _0x2d4378['getFloat32']()), _0x54964b['eventName'] = _0x5075af['_strings'][_0x2d4378['getUint16']()];
                var _0x39bf86 = _0x2d4378['getUint16']();
                for (_0x39bf86 > 0x0 && (_0x54964b['params'] = _0x52f09a = []), _0x4c48b5 = 0x0; _0x4c48b5 < _0x39bf86; _0x4c48b5++) {
                    switch (_0x2d4378['getByte']()) {
                    case 0x0:
                        _0x52f09a['push'](!!_0x2d4378['getByte']());
                        break;
                    case 0x1:
                        _0x52f09a['push'](_0x2d4378['getInt32']());
                        break;
                    case 0x2:
                        _0x52f09a['push'](_0x2d4378['getFloat32']());
                        break;
                    case 0x3:
                        _0x52f09a['push'](_0x5075af['_strings'][_0x2d4378['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20ty' + 'pe.');
                    }
                }
                _0x2c48a0['addEvent'](_0x54964b);
            }
        }
    }
    _0x5075af['_strings'] = [], _0x5075af['_BLOCK'] = { 'count': 0x0 }, _0x5075af['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x43f331 {
        static ['__init__']() {
            for (var _0x16968d = 0x0; _0x16968d < 0x100; ++_0x16968d) {
                var _0x46ee72 = _0x16968d - 0x7f;
                _0x46ee72 < -0x1b ? (_0x43f331['_baseTable'][0x0 | _0x16968d] = 0x0, _0x43f331['_baseTable'][0x100 | _0x16968d] = 0x8000, _0x43f331['_shiftTabl' + 'e'][0x0 | _0x16968d] = 0x18, _0x43f331['_shiftTabl' + 'e'][0x100 | _0x16968d] = 0x18) : _0x46ee72 < -0xe ? (_0x43f331['_baseTable'][0x0 | _0x16968d] = 0x400 >> -_0x46ee72 - 0xe, _0x43f331['_baseTable'][0x100 | _0x16968d] = 0x400 >> -_0x46ee72 - 0xe | 0x8000, _0x43f331['_shiftTabl' + 'e'][0x0 | _0x16968d] = -_0x46ee72 - 0x1, _0x43f331['_shiftTabl' + 'e'][0x100 | _0x16968d] = -_0x46ee72 - 0x1) : _0x46ee72 <= 0xf ? (_0x43f331['_baseTable'][0x0 | _0x16968d] = _0x46ee72 + 0xf << 0xa, _0x43f331['_baseTable'][0x100 | _0x16968d] = _0x46ee72 + 0xf << 0xa | 0x8000, _0x43f331['_shiftTabl' + 'e'][0x0 | _0x16968d] = 0xd, _0x43f331['_shiftTabl' + 'e'][0x100 | _0x16968d] = 0xd) : _0x46ee72 < 0x80 ? (_0x43f331['_baseTable'][0x0 | _0x16968d] = 0x7c00, _0x43f331['_baseTable'][0x100 | _0x16968d] = 0xfc00, _0x43f331['_shiftTabl' + 'e'][0x0 | _0x16968d] = 0x18, _0x43f331['_shiftTabl' + 'e'][0x100 | _0x16968d] = 0x18) : (_0x43f331['_baseTable'][0x0 | _0x16968d] = 0x7c00, _0x43f331['_baseTable'][0x100 | _0x16968d] = 0xfc00, _0x43f331['_shiftTabl' + 'e'][0x0 | _0x16968d] = 0xd, _0x43f331['_shiftTabl' + 'e'][0x100 | _0x16968d] = 0xd);
            }
            for (_0x43f331['_mantissaT' + 'able'][0x0] = 0x0, _0x16968d = 0x1; _0x16968d < 0x400; ++_0x16968d) {
                var _0x39c50a = _0x16968d << 0xd;
                for (_0x46ee72 = 0x0; 0x0 == (0x800000 & _0x39c50a);)
                    _0x46ee72 -= 0x800000, _0x39c50a <<= 0x1;
                _0x39c50a &= -0x800001, _0x46ee72 += 0x38800000, _0x43f331['_mantissaT' + 'able'][_0x16968d] = _0x39c50a | _0x46ee72;
            }
            for (_0x16968d = 0x400; _0x16968d < 0x800; ++_0x16968d)
                _0x43f331['_mantissaT' + 'able'][_0x16968d] = 0x38000000 + (_0x16968d - 0x400 << 0xd);
            for (_0x43f331['_exponentT' + 'able'][0x0] = 0x0, _0x16968d = 0x1; _0x16968d < 0x1f; ++_0x16968d)
                _0x43f331['_exponentT' + 'able'][_0x16968d] = _0x16968d << 0x17;
            for (_0x43f331['_exponentT' + 'able'][0x1f] = 0x47800000, _0x43f331['_exponentT' + 'able'][0x20] = 0x80000000, _0x16968d = 0x21; _0x16968d < 0x3f; ++_0x16968d)
                _0x43f331['_exponentT' + 'able'][_0x16968d] = 0x80000000 + (_0x16968d - 0x20 << 0x17);
            for (_0x43f331['_exponentT' + 'able'][0x3f] = 0xc7800000, _0x43f331['_offsetTab' + 'le'][0x0] = 0x0, _0x16968d = 0x1; _0x16968d < 0x40; ++_0x16968d)
                _0x43f331['_offsetTab' + 'le'][_0x16968d] = 0x20 === _0x16968d ? 0x0 : 0x400;
        }
        static ['roundToFlo' + 'at16Bits'](_0x57a337) {
            _0x43f331['_floatView'][0x0] = _0x57a337;
            var _0x1f0251 = _0x43f331['_uint32Vie' + 'w'][0x0], _0x1bdf10 = _0x1f0251 >> 0x17 & 0x1ff;
            return _0x43f331['_baseTable'][_0x1bdf10] + ((0x7fffff & _0x1f0251) >> _0x43f331['_shiftTabl' + 'e'][_0x1bdf10]);
        }
        static ['convertToN' + 'umber'](_0x5cd031) {
            var _0x1c0ea6 = _0x5cd031 >> 0xa;
            return _0x43f331['_uint32Vie' + 'w'][0x0] = _0x43f331['_mantissaT' + 'able'][_0x43f331['_offsetTab' + 'le'][_0x1c0ea6] + (0x3ff & _0x5cd031)] + _0x43f331['_exponentT' + 'able'][_0x1c0ea6], _0x43f331['_floatView'][0x0];
        }
    }
    _0x43f331['_buffer'] = new ArrayBuffer(0x4), _0x43f331['_floatView'] = new Float32Array(_0x43f331['_buffer']), _0x43f331['_uint32Vie' + 'w'] = new Uint32Array(_0x43f331['_buffer']), _0x43f331['_baseTable'] = new Uint32Array(0x200), _0x43f331['_shiftTabl' + 'e'] = new Uint32Array(0x200), _0x43f331['_mantissaT' + 'able'] = new Uint32Array(0x800), _0x43f331['_exponentT' + 'able'] = new Uint32Array(0x40), _0x43f331['_offsetTab' + 'le'] = new Uint32Array(0x40);
    class _0x3ccdbb {
        static ['READ_DATA']() {
            _0x3ccdbb['_DATA']['offset'] = _0x3ccdbb['_reader']['getUint32'](), _0x3ccdbb['_DATA']['size'] = _0x3ccdbb['_reader']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x33c581 = _0x3ccdbb['_BLOCK']['count'] = _0x3ccdbb['_reader']['getUint16'](), _0x91a005 = _0x3ccdbb['_BLOCK']['blockStart' + 's'] = [], _0x1e733e = _0x3ccdbb['_BLOCK']['blockLengt' + 'hs'] = [], _0x25b328 = 0x0; _0x25b328 < _0x33c581; _0x25b328++)
                _0x91a005['push'](_0x3ccdbb['_reader']['getUint32']()), _0x1e733e['push'](_0x3ccdbb['_reader']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x186595 = _0x3ccdbb['_reader']['getUint32'](), _0x3fc3ab = _0x3ccdbb['_reader']['getUint16'](), _0xbec9fd = _0x3ccdbb['_reader']['pos'];
            _0x3ccdbb['_reader']['pos'] = _0x186595 + _0x3ccdbb['_DATA']['offset'];
            for (var _0x346f58 = 0x0; _0x346f58 < _0x3fc3ab; _0x346f58++)
                _0x3ccdbb['_strings'][_0x346f58] = _0x3ccdbb['_reader']['readUTFStr' + 'ing']();
            _0x3ccdbb['_reader']['pos'] = _0xbec9fd;
        }
        static ['parse'](_0x2418f9, _0x511a3d, _0x36023d) {
            _0x3ccdbb['_animation' + 'Clip'] = _0x2418f9, _0x3ccdbb['_reader'] = _0x511a3d, _0x3ccdbb['_version'] = _0x36023d, _0x3ccdbb['READ_DATA'](), _0x3ccdbb['READ_BLOCK'](), _0x3ccdbb['READ_STRIN' + 'GS']();
            for (var _0x92507d = 0x0, _0x4a5f22 = _0x3ccdbb['_BLOCK']['count']; _0x92507d < _0x4a5f22; _0x92507d++) {
                var _0x4bb7d3 = _0x511a3d['getUint16'](), _0x4a9815 = _0x3ccdbb['_strings'][_0x4bb7d3], _0x478efa = _0x3ccdbb['READ_' + _0x4a9815];
                if (null == _0x478efa)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x4bb7d3 + '\x20' + _0x4a9815);
                _0x478efa['call'](null);
            }
            _0x3ccdbb['_version'] = null, _0x3ccdbb['_reader'] = null, _0x3ccdbb['_animation' + 'Clip'] = null;
        }
        static ['READ_ANIMA' + 'TIONS']() {
            var _0x2eba27, _0x35d878, _0x2a4fd8, _0x28a1ed = _0x3ccdbb['_reader'], _0x54c482 = (_0x28a1ed['__getBuffe' + 'r'](), []), _0x289ef8 = _0x28a1ed['getUint16']();
            for (_0x54c482['length'] = _0x289ef8, _0x2eba27 = 0x0; _0x2eba27 < _0x289ef8; _0x2eba27++)
                _0x54c482[_0x2eba27] = _0x28a1ed['getFloat32']();
            var _0x132796 = _0x3ccdbb['_animation' + 'Clip'];
            _0x132796['name'] = _0x3ccdbb['_strings'][_0x28a1ed['getUint16']()];
            var _0x5b8164 = _0x132796['_duration'] = _0x28a1ed['getFloat32']();
            _0x132796['islooping'] = !!_0x28a1ed['getByte'](), _0x132796['_frameRate'] = _0x28a1ed['getInt16']();
            var _0xcbfe64 = _0x28a1ed['getInt16'](), _0x175cb9 = _0x132796['_nodes'];
            _0x175cb9['count'] = _0xcbfe64;
            var _0x233cfb = _0x132796['_nodesMap'] = {}, _0x42391c = _0x132796['_nodesDic'] = {};
            for (_0x2eba27 = 0x0; _0x2eba27 < _0xcbfe64; _0x2eba27++) {
                _0x2a4fd8 = new _0x3f2025(), _0x175cb9['setNodeByI' + 'ndex'](_0x2eba27, _0x2a4fd8), _0x2a4fd8['_indexInLi' + 'st'] = _0x2eba27;
                var _0x12c2ed = _0x2a4fd8['type'] = _0x28a1ed['getUint8'](), _0x53ca91 = _0x28a1ed['getUint16']();
                for (_0x2a4fd8['_setOwnerP' + 'athCount'](_0x53ca91), _0x35d878 = 0x0; _0x35d878 < _0x53ca91; _0x35d878++)
                    _0x2a4fd8['_setOwnerP' + 'athByIndex'](_0x35d878, _0x3ccdbb['_strings'][_0x28a1ed['getUint16']()]);
                var _0x4e28de = _0x2a4fd8['_joinOwner' + 'Path']('/'), _0x21bf99 = _0x233cfb[_0x4e28de];
                _0x21bf99 || (_0x233cfb[_0x4e28de] = _0x21bf99 = []), _0x21bf99['push'](_0x2a4fd8), _0x2a4fd8['propertyOw' + 'ner'] = _0x3ccdbb['_strings'][_0x28a1ed['getUint16']()];
                var _0x469236 = _0x28a1ed['getUint16']();
                for (_0x2a4fd8['_setProper' + 'tyCount'](_0x469236), _0x35d878 = 0x0; _0x35d878 < _0x469236; _0x35d878++)
                    _0x2a4fd8['_setProper' + 'tyByIndex'](_0x35d878, _0x3ccdbb['_strings'][_0x28a1ed['getUint16']()]);
                var _0x4090ac = _0x4e28de + '.' + _0x2a4fd8['propertyOw' + 'ner'] + '.' + _0x2a4fd8['_joinPrope' + 'rty']('.');
                _0x42391c[_0x4090ac] = _0x2a4fd8, _0x2a4fd8['fullPath'] = _0x4090ac;
                var _0x1605e5 = _0x28a1ed['getUint16']();
                switch (_0x2a4fd8['_setKeyfra' + 'meCount'](_0x1605e5), _0x3ccdbb['_version']) {
                case 'LAYAANIMAT' + 'ION:04':
                    for (_0x35d878 = 0x0; _0x35d878 < _0x1605e5; _0x35d878++)
                        switch (_0x12c2ed) {
                        case 0x0:
                            var _0x395b37 = new _0x6059d7();
                            _0x2a4fd8['_setKeyfra' + 'meByIndex'](_0x35d878, _0x395b37), _0x395b37['time'] = _0x54c482[_0x28a1ed['getUint16']()], _0x395b37['inTangent'] = _0x28a1ed['getFloat32'](), _0x395b37['outTangent'] = _0x28a1ed['getFloat32'](), _0x395b37['value'] = _0x28a1ed['getFloat32']();
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            var _0xe0d973 = new _0x4b790b();
                            if (_0x2a4fd8['_setKeyfra' + 'meByIndex'](_0x35d878, _0xe0d973), _0xe0d973['time'] = _0x54c482[_0x28a1ed['getUint16']()], _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (var _0x41217f = _0xe0d973['data'] = new Float32Array(0x9), _0x3a4e46 = 0x0; _0x3a4e46 < 0x3; _0x3a4e46++)
                                    _0x41217f[_0x3a4e46] = _0x28a1ed['getFloat32']();
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x3; _0x3a4e46++)
                                    _0x41217f[0x3 + _0x3a4e46] = _0x28a1ed['getFloat32']();
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x3; _0x3a4e46++)
                                    _0x41217f[0x6 + _0x3a4e46] = _0x28a1ed['getFloat32']();
                            } else {
                                var _0x7dab6e = _0xe0d973['inTangent'], _0x18ed4a = _0xe0d973['outTangent'], _0x532d0d = _0xe0d973['value'];
                                _0x7dab6e['x'] = _0x28a1ed['getFloat32'](), _0x7dab6e['y'] = _0x28a1ed['getFloat32'](), _0x7dab6e['z'] = _0x28a1ed['getFloat32'](), _0x18ed4a['x'] = _0x28a1ed['getFloat32'](), _0x18ed4a['y'] = _0x28a1ed['getFloat32'](), _0x18ed4a['z'] = _0x28a1ed['getFloat32'](), _0x532d0d['x'] = _0x28a1ed['getFloat32'](), _0x532d0d['y'] = _0x28a1ed['getFloat32'](), _0x532d0d['z'] = _0x28a1ed['getFloat32']();
                            }
                            break;
                        case 0x2:
                            var _0x507b73 = new _0x24fa29();
                            if (_0x2a4fd8['_setKeyfra' + 'meByIndex'](_0x35d878, _0x507b73), _0x507b73['time'] = _0x54c482[_0x28a1ed['getUint16']()], _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (_0x41217f = _0x507b73['data'] = new Float32Array(0xc), _0x3a4e46 = 0x0; _0x3a4e46 < 0x4; _0x3a4e46++)
                                    _0x41217f[_0x3a4e46] = _0x28a1ed['getFloat32']();
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x4; _0x3a4e46++)
                                    _0x41217f[0x4 + _0x3a4e46] = _0x28a1ed['getFloat32']();
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x4; _0x3a4e46++)
                                    _0x41217f[0x8 + _0x3a4e46] = _0x28a1ed['getFloat32']();
                            } else {
                                var _0x2e260c = _0x507b73['inTangent'], _0x2660bb = _0x507b73['outTangent'], _0xfb363e = _0x507b73['value'];
                                _0x2e260c['x'] = _0x28a1ed['getFloat32'](), _0x2e260c['y'] = _0x28a1ed['getFloat32'](), _0x2e260c['z'] = _0x28a1ed['getFloat32'](), _0x2e260c['w'] = _0x28a1ed['getFloat32'](), _0x2660bb['x'] = _0x28a1ed['getFloat32'](), _0x2660bb['y'] = _0x28a1ed['getFloat32'](), _0x2660bb['z'] = _0x28a1ed['getFloat32'](), _0x2660bb['w'] = _0x28a1ed['getFloat32'](), _0xfb363e['x'] = _0x28a1ed['getFloat32'](), _0xfb363e['y'] = _0x28a1ed['getFloat32'](), _0xfb363e['z'] = _0x28a1ed['getFloat32'](), _0xfb363e['w'] = _0x28a1ed['getFloat32']();
                            }
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                    break;
                case 'LAYAANIMAT' + 'ION:COMPRE' + 'SSION_04':
                    for (_0x35d878 = 0x0; _0x35d878 < _0x1605e5; _0x35d878++)
                        switch (_0x12c2ed) {
                        case 0x0:
                            _0x395b37 = new _0x6059d7(), _0x2a4fd8['_setKeyfra' + 'meByIndex'](_0x35d878, _0x395b37), _0x395b37['time'] = _0x54c482[_0x28a1ed['getUint16']()], _0x395b37['inTangent'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x395b37['outTangent'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x395b37['value'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            if (_0xe0d973 = new _0x4b790b(), _0x2a4fd8['_setKeyfra' + 'meByIndex'](_0x35d878, _0xe0d973), _0xe0d973['time'] = _0x54c482[_0x28a1ed['getUint16']()], _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (_0x41217f = _0xe0d973['data'] = new Float32Array(0x9), _0x3a4e46 = 0x0; _0x3a4e46 < 0x3; _0x3a4e46++)
                                    _0x41217f[_0x3a4e46] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x3; _0x3a4e46++)
                                    _0x41217f[0x3 + _0x3a4e46] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x3; _0x3a4e46++)
                                    _0x41217f[0x6 + _0x3a4e46] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                            } else
                                _0x7dab6e = _0xe0d973['inTangent'], _0x18ed4a = _0xe0d973['outTangent'], _0x532d0d = _0xe0d973['value'], _0x7dab6e['x'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x7dab6e['y'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x7dab6e['z'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x18ed4a['x'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x18ed4a['y'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x18ed4a['z'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x532d0d['x'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x532d0d['y'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x532d0d['z'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                            break;
                        case 0x2:
                            if (_0x507b73 = new _0x24fa29(), _0x2a4fd8['_setKeyfra' + 'meByIndex'](_0x35d878, _0x507b73), _0x507b73['time'] = _0x54c482[_0x28a1ed['getUint16']()], _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (_0x41217f = _0x507b73['data'] = new Float32Array(0xc), _0x3a4e46 = 0x0; _0x3a4e46 < 0x4; _0x3a4e46++)
                                    _0x41217f[_0x3a4e46] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x4; _0x3a4e46++)
                                    _0x41217f[0x4 + _0x3a4e46] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                                for (_0x3a4e46 = 0x0; _0x3a4e46 < 0x4; _0x3a4e46++)
                                    _0x41217f[0x8 + _0x3a4e46] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                            } else
                                _0x2e260c = _0x507b73['inTangent'], _0x2660bb = _0x507b73['outTangent'], _0xfb363e = _0x507b73['value'], _0x2e260c['x'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2e260c['y'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2e260c['z'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2e260c['w'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2660bb['x'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2660bb['y'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2660bb['z'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0x2660bb['w'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0xfb363e['x'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0xfb363e['y'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0xfb363e['z'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']()), _0xfb363e['w'] = _0x43f331['convertToN' + 'umber'](_0x28a1ed['getUint16']());
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                }
            }
            var _0x17a864 = _0x28a1ed['getUint16']();
            for (_0x2eba27 = 0x0; _0x2eba27 < _0x17a864; _0x2eba27++) {
                var _0x5cb1c8, _0x56a8f6 = new _0x18867d();
                _0x56a8f6['time'] = Math['min'](_0x5b8164, _0x28a1ed['getFloat32']()), _0x56a8f6['eventName'] = _0x3ccdbb['_strings'][_0x28a1ed['getUint16']()];
                var _0x146928 = _0x28a1ed['getUint16']();
                for (_0x146928 > 0x0 && (_0x56a8f6['params'] = _0x5cb1c8 = []), _0x35d878 = 0x0; _0x35d878 < _0x146928; _0x35d878++) {
                    switch (_0x28a1ed['getByte']()) {
                    case 0x0:
                        _0x5cb1c8['push'](!!_0x28a1ed['getByte']());
                        break;
                    case 0x1:
                        _0x5cb1c8['push'](_0x28a1ed['getInt32']());
                        break;
                    case 0x2:
                        _0x5cb1c8['push'](_0x28a1ed['getFloat32']());
                        break;
                    case 0x3:
                        _0x5cb1c8['push'](_0x3ccdbb['_strings'][_0x28a1ed['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20ty' + 'pe.');
                    }
                }
                _0x132796['addEvent'](_0x56a8f6);
            }
        }
    }
    _0x3ccdbb['_strings'] = [], _0x3ccdbb['_BLOCK'] = { 'count': 0x0 }, _0x3ccdbb['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x19cd05 {
        constructor() {
            this['_nodes'] = [];
        }
        get ['count']() {
            return this['_nodes']['length'];
        }
        set ['count'](_0x331258) {
            this['_nodes']['length'] = _0x331258;
        }
        ['getNodeByI' + 'ndex'](_0x339fb5) {
            return this['_nodes'][_0x339fb5];
        }
        ['setNodeByI' + 'ndex'](_0x26516d, _0x27b08d) {
            this['_nodes'][_0x26516d] = _0x27b08d;
        }
    }
    class _0x57b18d {
    }
    _0x57b18d['_bullet'] = null, _0x57b18d['_enablePhy' + 'sics'] = !0x1;
    class _0x16f62a {
        constructor() {
        }
        static ['lightAtten' + 'Texture'](_0x485369, _0xa5a5d8, _0x4c4f51, _0x472b5f, _0x3ebc01, _0x482753) {
            var _0x477140 = _0x485369 / _0x4c4f51, _0x37e3ee = 0x1 / (0x1 + 0x19 * _0x477140);
            _0x477140 >= 0.64 && (_0x477140 > 0x1 ? _0x37e3ee = 0x0 : _0x37e3ee *= 0x1 - (_0x477140 - 0.64) / 0.36), _0x482753[_0x3ebc01] = Math['floor'](0xff * _0x37e3ee + 0.5);
        }
        static ['haloTextur' + 'e'](_0x4d444c, _0x2f30d5, _0x2abac5, _0x11b3c6, _0x417f08, _0x5dd07d) {
            var _0x41c4ba = (_0x4d444c - (_0x2abac5 >>= 0x1)) / _0x2abac5, _0x5d6238 = (_0x2f30d5 - (_0x11b3c6 >>= 0x1)) / _0x11b3c6, _0x2ff3f9 = _0x41c4ba * _0x41c4ba + _0x5d6238 * _0x5d6238;
            _0x2ff3f9 > 0x1 && (_0x2ff3f9 = 0x1), _0x5dd07d[_0x417f08] = Math['floor'](0xff * (0x1 - _0x2ff3f9) + 0.5);
        }
        static ['_generateT' + 'exture2D'](_0x3b4e60, _0x5b5b31, _0x1b288c, _0xb0689c) {
            var _0x34acdd = 0x0, _0x313625 = 0x0;
            switch (_0x3b4e60['format']) {
            case _0x2247ad['TextureFor' + 'mat']['R8G8B8']:
                _0x313625 = 0x3;
                break;
            case _0x2247ad['TextureFor' + 'mat']['R8G8B8A8']:
                _0x313625 = 0x4;
                break;
            case _0x2247ad['TextureFor' + 'mat']['Alpha8']:
                _0x313625 = 0x1;
                break;
            default:
                throw 'GeneratedT' + 'exture._ge' + 'nerateText' + 'ure:\x20unkon' + 'w\x20texture\x20' + 'format.';
            }
            for (var _0x51a8ba = new Uint8Array(_0x5b5b31 * _0x1b288c * _0x313625), _0x557b4e = 0x0; _0x557b4e < _0x1b288c; _0x557b4e++)
                for (var _0x1f8e98 = 0x0; _0x1f8e98 < _0x5b5b31; _0x1f8e98++)
                    _0xb0689c(_0x1f8e98, _0x557b4e, _0x5b5b31, _0x1b288c, _0x34acdd, _0x51a8ba), _0x34acdd += _0x313625;
            _0x3b4e60['setPixels'](_0x51a8ba);
        }
    }
    class _0x101904 {
        static ['_createFlo' + 'atTextureB' + 'uffer'](_0x1d14de, _0x262554) {
            var _0x16cf3b = new _0x2247ad['Texture2D'](_0x1d14de, _0x262554, _0x2247ad['TextureFor' + 'mat']['R32G32B32A' + '32'], !0x1, !0x1);
            return _0x16cf3b['filterMode'] = _0x2247ad['FilterMode']['Point'], _0x16cf3b['wrapModeU'] = _0x2247ad['WarpMode']['Clamp'], _0x16cf3b['wrapModeV'] = _0x2247ad['WarpMode']['Clamp'], _0x16cf3b['anisoLevel'] = 0x0, _0x16cf3b;
        }
        static ['_convertTo' + 'LayaVec3'](_0x88e64, _0xbb3f4d, _0x431c0c) {
            var _0x1e901d = _0x57b18d['_bullet'];
            _0xbb3f4d['x'] = _0x431c0c ? -_0x1e901d['btVector3_' + 'x'](_0x88e64) : _0x1e901d['btVector3_' + 'x'](_0x88e64), _0xbb3f4d['y'] = _0x1e901d['btVector3_' + 'y'](_0x88e64), _0xbb3f4d['z'] = _0x1e901d['btVector3_' + 'z'](_0x88e64);
        }
        static ['_convertTo' + 'BulletVec3'](_0x3c0f93, _0x252a8e, _0x30f057) {
            _0x57b18d['_bullet']['btVector3_' + 'setValue'](_0x252a8e, _0x30f057 ? -_0x3c0f93['x'] : _0x3c0f93['x'], _0x3c0f93['y'], _0x3c0f93['z']);
        }
        static ['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x713c40, _0x4b726a, _0x20d510, _0x192d0e, _0x117f72, _0x4b4b0a, _0x1fce33, _0x4da1bb, _0x2b3fda, _0x3286a3, _0x5997b4, _0x48563b) {
            var _0x106872, _0x282555, _0x2a9bf4, _0x9a4a41, _0x211ac7, _0x4127e9 = _0x101904['_tempArray' + '16_0'], _0x416860 = _0x101904['_tempArray' + '16_1'], _0x205e03 = _0x101904['_tempArray' + '16_2'], _0x3db3a2 = _0x192d0e + _0x192d0e, _0x163d9e = _0x117f72 + _0x117f72, _0xdab6ab = _0x4b4b0a + _0x4b4b0a, _0x34eeb2 = _0x192d0e * _0x3db3a2, _0x30b44d = _0x117f72 * _0x3db3a2, _0x4fe46c = _0x117f72 * _0x163d9e, _0x38f847 = _0x4b4b0a * _0x3db3a2, _0x13fc07 = _0x4b4b0a * _0x163d9e, _0x2c6f5f = _0x4b4b0a * _0xdab6ab, _0x5a5f7b = _0x1fce33 * _0x3db3a2, _0x52f418 = _0x1fce33 * _0x163d9e, _0x45315b = _0x1fce33 * _0xdab6ab;
            for (_0x4127e9[0xf] = 0x1, _0x4127e9[0x0] = 0x1 - _0x4fe46c - _0x2c6f5f, _0x4127e9[0x1] = _0x30b44d + _0x45315b, _0x4127e9[0x2] = _0x38f847 - _0x52f418, _0x4127e9[0x4] = _0x30b44d - _0x45315b, _0x4127e9[0x5] = 0x1 - _0x34eeb2 - _0x2c6f5f, _0x4127e9[0x6] = _0x13fc07 + _0x5a5f7b, _0x4127e9[0x8] = _0x38f847 + _0x52f418, _0x4127e9[0x9] = _0x13fc07 - _0x5a5f7b, _0x4127e9[0xa] = 0x1 - _0x34eeb2 - _0x4fe46c, _0x416860[0xf] = 0x1, _0x416860[0x0] = _0x4da1bb, _0x416860[0x5] = _0x2b3fda, _0x416860[0xa] = _0x3286a3, _0x106872 = 0x0; _0x106872 < 0x4; _0x106872++)
                _0x282555 = _0x4127e9[_0x106872], _0x2a9bf4 = _0x4127e9[_0x106872 + 0x4], _0x9a4a41 = _0x4127e9[_0x106872 + 0x8], _0x211ac7 = _0x4127e9[_0x106872 + 0xc], _0x205e03[_0x106872] = _0x282555, _0x205e03[_0x106872 + 0x4] = _0x2a9bf4, _0x205e03[_0x106872 + 0x8] = _0x9a4a41, _0x205e03[_0x106872 + 0xc] = _0x282555 * _0x713c40 + _0x2a9bf4 * _0x4b726a + _0x9a4a41 * _0x20d510 + _0x211ac7;
            for (_0x106872 = 0x0; _0x106872 < 0x4; _0x106872++)
                _0x282555 = _0x205e03[_0x106872], _0x2a9bf4 = _0x205e03[_0x106872 + 0x4], _0x9a4a41 = _0x205e03[_0x106872 + 0x8], _0x211ac7 = _0x205e03[_0x106872 + 0xc], _0x5997b4[_0x106872 + _0x48563b] = _0x282555 * _0x416860[0x0] + _0x2a9bf4 * _0x416860[0x1] + _0x9a4a41 * _0x416860[0x2] + _0x211ac7 * _0x416860[0x3], _0x5997b4[_0x106872 + _0x48563b + 0x4] = _0x282555 * _0x416860[0x4] + _0x2a9bf4 * _0x416860[0x5] + _0x9a4a41 * _0x416860[0x6] + _0x211ac7 * _0x416860[0x7], _0x5997b4[_0x106872 + _0x48563b + 0x8] = _0x282555 * _0x416860[0x8] + _0x2a9bf4 * _0x416860[0x9] + _0x9a4a41 * _0x416860[0xa] + _0x211ac7 * _0x416860[0xb], _0x5997b4[_0x106872 + _0x48563b + 0xc] = _0x282555 * _0x416860[0xc] + _0x2a9bf4 * _0x416860[0xd] + _0x9a4a41 * _0x416860[0xe] + _0x211ac7 * _0x416860[0xf];
        }
        static ['_computeBo' + 'neAndAnima' + 'tionDatasB' + 'yBindPoseM' + 'atrxix'](_0x59530b, _0x4a424f, _0x45f18a, _0x125acc, _0x4215b8, _0x1de0d6) {
            var _0x1512ed, _0x100fc4, _0x32be21 = 0x0, _0x34b5b8 = 0x0, _0x1bb670 = _0x59530b['length'];
            for (_0x1512ed = 0x0; _0x1512ed < _0x1bb670; _0x32be21 += _0x59530b[_0x1512ed]['keyframeWi' + 'dth'], _0x34b5b8 += 0x10, _0x1512ed++)
                _0x101904['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x4a424f[_0x32be21 + 0x0], _0x4a424f[_0x32be21 + 0x1], _0x4a424f[_0x32be21 + 0x2], _0x4a424f[_0x32be21 + 0x3], _0x4a424f[_0x32be21 + 0x4], _0x4a424f[_0x32be21 + 0x5], _0x4a424f[_0x32be21 + 0x6], _0x4a424f[_0x32be21 + 0x7], _0x4a424f[_0x32be21 + 0x8], _0x4a424f[_0x32be21 + 0x9], _0x125acc, _0x34b5b8), 0x0 != _0x1512ed && (_0x100fc4 = 0x10 * _0x59530b[_0x1512ed]['parentInde' + 'x'], _0x101904['mulMatrixB' + 'yArray'](_0x125acc, _0x100fc4, _0x125acc, _0x34b5b8, _0x125acc, _0x34b5b8));
            var _0x13e42a = _0x45f18a['length'];
            for (_0x1512ed = 0x0; _0x1512ed < _0x13e42a; _0x1512ed++)
                _0x101904['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x125acc, 0x10 * _0x1de0d6[_0x1512ed], _0x45f18a[_0x1512ed], _0x4215b8, 0x10 * _0x1512ed);
        }
        static ['_computeAn' + 'imationDat' + 'asByArrayA' + 'ndMatrixFa' + 'st'](_0x5da114, _0x3c62a4, _0x465ba2, _0x880c7e) {
            for (var _0x1e6e1b = 0x0, _0x4a719b = _0x5da114['length']; _0x1e6e1b < _0x4a719b; _0x1e6e1b++)
                _0x101904['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x3c62a4, 0x10 * _0x880c7e[_0x1e6e1b], _0x5da114[_0x1e6e1b], _0x465ba2, 0x10 * _0x1e6e1b);
        }
        static ['_computeBo' + 'neAndAnima' + 'tionDatasB' + 'yBindPoseM' + 'atrxixOld'](_0x27ddfb, _0x349582, _0x151d19, _0x5bce3a, _0x3c5874) {
            var _0x3823d8, _0x2549c2, _0x104cae = 0x0, _0x13a21b = 0x0, _0x213594 = _0x27ddfb['length'];
            for (_0x3823d8 = 0x0; _0x3823d8 < _0x213594; _0x104cae += _0x27ddfb[_0x3823d8]['keyframeWi' + 'dth'], _0x13a21b += 0x10, _0x3823d8++)
                _0x101904['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x349582[_0x104cae + 0x7], _0x349582[_0x104cae + 0x8], _0x349582[_0x104cae + 0x9], _0x349582[_0x104cae + 0x3], _0x349582[_0x104cae + 0x4], _0x349582[_0x104cae + 0x5], _0x349582[_0x104cae + 0x6], _0x349582[_0x104cae + 0x0], _0x349582[_0x104cae + 0x1], _0x349582[_0x104cae + 0x2], _0x5bce3a, _0x13a21b), 0x0 != _0x3823d8 && (_0x2549c2 = 0x10 * _0x27ddfb[_0x3823d8]['parentInde' + 'x'], _0x101904['mulMatrixB' + 'yArray'](_0x5bce3a, _0x2549c2, _0x5bce3a, _0x13a21b, _0x5bce3a, _0x13a21b));
            var _0x4b2c66 = _0x151d19['length'];
            for (_0x3823d8 = 0x0; _0x3823d8 < _0x4b2c66; _0x3823d8++) {
                var _0x198ec8 = 0x10 * _0x3823d8;
                _0x101904['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x5bce3a, _0x198ec8, _0x151d19[_0x3823d8], _0x3c5874, _0x198ec8);
            }
        }
        static ['_computeAn' + 'imationDat' + 'asByArrayA' + 'ndMatrixFa' + 'stOld'](_0xa974c8, _0x4ea3fa, _0x75acbb) {
            for (var _0x10f3c7 = _0xa974c8['length'], _0x143e2a = 0x0; _0x143e2a < _0x10f3c7; _0x143e2a++) {
                var _0x201d4d = 0x10 * _0x143e2a;
                _0x101904['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x4ea3fa, _0x201d4d, _0xa974c8[_0x143e2a], _0x75acbb, _0x201d4d);
            }
        }
        static ['_computeRo' + 'otAnimatio' + 'nData'](_0x4d5dc4, _0x4f9fcb, _0x2630e4) {
            for (var _0x244a1b = 0x0, _0x21e87a = 0x0, _0x1e3487 = 0x0, _0x9136d2 = _0x4d5dc4['length']; _0x244a1b < _0x9136d2; _0x21e87a += _0x4d5dc4[_0x244a1b]['keyframeWi' + 'dth'], _0x1e3487 += 0x10, _0x244a1b++)
                _0x101904['createAffi' + 'neTransfor' + 'mationArra' + 'y'](_0x4f9fcb[_0x21e87a + 0x0], _0x4f9fcb[_0x21e87a + 0x1], _0x4f9fcb[_0x21e87a + 0x2], _0x4f9fcb[_0x21e87a + 0x3], _0x4f9fcb[_0x21e87a + 0x4], _0x4f9fcb[_0x21e87a + 0x5], _0x4f9fcb[_0x21e87a + 0x6], _0x4f9fcb[_0x21e87a + 0x7], _0x4f9fcb[_0x21e87a + 0x8], _0x4f9fcb[_0x21e87a + 0x9], _0x2630e4, _0x1e3487);
        }
        static ['transformV' + 'ector3Arra' + 'yByQuat'](_0x5653b8, _0x5c7bfc, _0x5dd5d3, _0x493b5d, _0x2febeb) {
            var _0x2ef53a = _0x5653b8[_0x5c7bfc], _0x10687e = _0x5653b8[_0x5c7bfc + 0x1], _0x4fdf6f = _0x5653b8[_0x5c7bfc + 0x2], _0x44c947 = _0x5dd5d3['x'], _0xd4afd3 = _0x5dd5d3['y'], _0x3d35ab = _0x5dd5d3['z'], _0x2fc591 = _0x5dd5d3['w'], _0x295ff1 = _0x2fc591 * _0x2ef53a + _0xd4afd3 * _0x4fdf6f - _0x3d35ab * _0x10687e, _0x4db76f = _0x2fc591 * _0x10687e + _0x3d35ab * _0x2ef53a - _0x44c947 * _0x4fdf6f, _0x37c8d1 = _0x2fc591 * _0x4fdf6f + _0x44c947 * _0x10687e - _0xd4afd3 * _0x2ef53a, _0x48b437 = -_0x44c947 * _0x2ef53a - _0xd4afd3 * _0x10687e - _0x3d35ab * _0x4fdf6f;
            _0x493b5d[_0x2febeb] = _0x295ff1 * _0x2fc591 + _0x48b437 * -_0x44c947 + _0x4db76f * -_0x3d35ab - _0x37c8d1 * -_0xd4afd3, _0x493b5d[_0x2febeb + 0x1] = _0x4db76f * _0x2fc591 + _0x48b437 * -_0xd4afd3 + _0x37c8d1 * -_0x44c947 - _0x295ff1 * -_0x3d35ab, _0x493b5d[_0x2febeb + 0x2] = _0x37c8d1 * _0x2fc591 + _0x48b437 * -_0x3d35ab + _0x295ff1 * -_0xd4afd3 - _0x4db76f * -_0x44c947;
        }
        static ['mulMatrixB' + 'yArray'](_0x1f3783, _0x41a3eb, _0x4b3443, _0x351c80, _0x5951be, _0x594701) {
            var _0xc20580, _0x3a32db, _0x4868e8, _0x4234db, _0x1eafbb;
            if (_0x5951be === _0x4b3443) {
                for (_0x4b3443 = _0x101904['_tempArray' + '16_3'], _0xc20580 = 0x0; _0xc20580 < 0x10; ++_0xc20580)
                    _0x4b3443[_0xc20580] = _0x5951be[_0x594701 + _0xc20580];
                _0x351c80 = 0x0;
            }
            for (_0xc20580 = 0x0; _0xc20580 < 0x4; _0xc20580++)
                _0x3a32db = _0x1f3783[_0x41a3eb + _0xc20580], _0x4868e8 = _0x1f3783[_0x41a3eb + _0xc20580 + 0x4], _0x4234db = _0x1f3783[_0x41a3eb + _0xc20580 + 0x8], _0x1eafbb = _0x1f3783[_0x41a3eb + _0xc20580 + 0xc], _0x5951be[_0x594701 + _0xc20580] = _0x3a32db * _0x4b3443[_0x351c80 + 0x0] + _0x4868e8 * _0x4b3443[_0x351c80 + 0x1] + _0x4234db * _0x4b3443[_0x351c80 + 0x2] + _0x1eafbb * _0x4b3443[_0x351c80 + 0x3], _0x5951be[_0x594701 + _0xc20580 + 0x4] = _0x3a32db * _0x4b3443[_0x351c80 + 0x4] + _0x4868e8 * _0x4b3443[_0x351c80 + 0x5] + _0x4234db * _0x4b3443[_0x351c80 + 0x6] + _0x1eafbb * _0x4b3443[_0x351c80 + 0x7], _0x5951be[_0x594701 + _0xc20580 + 0x8] = _0x3a32db * _0x4b3443[_0x351c80 + 0x8] + _0x4868e8 * _0x4b3443[_0x351c80 + 0x9] + _0x4234db * _0x4b3443[_0x351c80 + 0xa] + _0x1eafbb * _0x4b3443[_0x351c80 + 0xb], _0x5951be[_0x594701 + _0xc20580 + 0xc] = _0x3a32db * _0x4b3443[_0x351c80 + 0xc] + _0x4868e8 * _0x4b3443[_0x351c80 + 0xd] + _0x4234db * _0x4b3443[_0x351c80 + 0xe] + _0x1eafbb * _0x4b3443[_0x351c80 + 0xf];
        }
        static ['mulMatrixB' + 'yArrayFast'](_0x29ab0e, _0x1de256, _0x4a3eb5, _0x3a32ed, _0xc198c3, _0x24b40b) {
            var _0x13c48, _0x87ece5, _0x274ab5, _0x10a3d8, _0x4bb6dc;
            for (_0x13c48 = 0x0; _0x13c48 < 0x4; _0x13c48++)
                _0x87ece5 = _0x29ab0e[_0x1de256 + _0x13c48], _0x274ab5 = _0x29ab0e[_0x1de256 + _0x13c48 + 0x4], _0x10a3d8 = _0x29ab0e[_0x1de256 + _0x13c48 + 0x8], _0x4bb6dc = _0x29ab0e[_0x1de256 + _0x13c48 + 0xc], _0xc198c3[_0x24b40b + _0x13c48] = _0x87ece5 * _0x4a3eb5[_0x3a32ed + 0x0] + _0x274ab5 * _0x4a3eb5[_0x3a32ed + 0x1] + _0x10a3d8 * _0x4a3eb5[_0x3a32ed + 0x2] + _0x4bb6dc * _0x4a3eb5[_0x3a32ed + 0x3], _0xc198c3[_0x24b40b + _0x13c48 + 0x4] = _0x87ece5 * _0x4a3eb5[_0x3a32ed + 0x4] + _0x274ab5 * _0x4a3eb5[_0x3a32ed + 0x5] + _0x10a3d8 * _0x4a3eb5[_0x3a32ed + 0x6] + _0x4bb6dc * _0x4a3eb5[_0x3a32ed + 0x7], _0xc198c3[_0x24b40b + _0x13c48 + 0x8] = _0x87ece5 * _0x4a3eb5[_0x3a32ed + 0x8] + _0x274ab5 * _0x4a3eb5[_0x3a32ed + 0x9] + _0x10a3d8 * _0x4a3eb5[_0x3a32ed + 0xa] + _0x4bb6dc * _0x4a3eb5[_0x3a32ed + 0xb], _0xc198c3[_0x24b40b + _0x13c48 + 0xc] = _0x87ece5 * _0x4a3eb5[_0x3a32ed + 0xc] + _0x274ab5 * _0x4a3eb5[_0x3a32ed + 0xd] + _0x10a3d8 * _0x4a3eb5[_0x3a32ed + 0xe] + _0x4bb6dc * _0x4a3eb5[_0x3a32ed + 0xf];
        }
        static ['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x13797d, _0x49a783, _0x9ccec0, _0x5d6168, _0x4228b8) {
            var _0x356acd, _0x18eef8, _0x52b107, _0x41b073, _0xeb6b21, _0x120181 = _0x9ccec0['elements'], _0x306775 = _0x120181[0x0], _0x80df61 = _0x120181[0x1], _0x153a81 = _0x120181[0x2], _0x5b8378 = _0x120181[0x3], _0x344be9 = _0x120181[0x4], _0x4ab756 = _0x120181[0x5], _0x50c02b = _0x120181[0x6], _0x11f8d4 = _0x120181[0x7], _0x576d70 = _0x120181[0x8], _0x485ec6 = _0x120181[0x9], _0x304f10 = _0x120181[0xa], _0x48e700 = _0x120181[0xb], _0x18205c = _0x120181[0xc], _0x4992e5 = _0x120181[0xd], _0x345f3e = _0x120181[0xe], _0x1ab586 = _0x120181[0xf], _0x1226b5 = _0x49a783, _0x4cf3d3 = _0x49a783 + 0x4, _0x5230d3 = _0x49a783 + 0x8, _0x5be754 = _0x49a783 + 0xc, _0x10a01f = _0x4228b8, _0x3f483f = _0x4228b8 + 0x4, _0x2fc33e = _0x4228b8 + 0x8, _0x1e4bf4 = _0x4228b8 + 0xc;
            for (_0x356acd = 0x0; _0x356acd < 0x4; _0x356acd++)
                _0x18eef8 = _0x13797d[_0x1226b5 + _0x356acd], _0x52b107 = _0x13797d[_0x4cf3d3 + _0x356acd], _0x41b073 = _0x13797d[_0x5230d3 + _0x356acd], _0xeb6b21 = _0x13797d[_0x5be754 + _0x356acd], _0x5d6168[_0x10a01f + _0x356acd] = _0x18eef8 * _0x306775 + _0x52b107 * _0x80df61 + _0x41b073 * _0x153a81 + _0xeb6b21 * _0x5b8378, _0x5d6168[_0x3f483f + _0x356acd] = _0x18eef8 * _0x344be9 + _0x52b107 * _0x4ab756 + _0x41b073 * _0x50c02b + _0xeb6b21 * _0x11f8d4, _0x5d6168[_0x2fc33e + _0x356acd] = _0x18eef8 * _0x576d70 + _0x52b107 * _0x485ec6 + _0x41b073 * _0x304f10 + _0xeb6b21 * _0x48e700, _0x5d6168[_0x1e4bf4 + _0x356acd] = _0x18eef8 * _0x18205c + _0x52b107 * _0x4992e5 + _0x41b073 * _0x345f3e + _0xeb6b21 * _0x1ab586;
        }
        static ['createAffi' + 'neTransfor' + 'mationArra' + 'y'](_0x3cd868, _0x5d3a51, _0x330f8f, _0x3e0263, _0x144b22, _0x32488e, _0x2720e9, _0x445ad1, _0x2369aa, _0x167d48, _0xc2ef1d, _0x15407a) {
            var _0x2c7ee2 = _0x3e0263 + _0x3e0263, _0x38a330 = _0x144b22 + _0x144b22, _0x33fbe4 = _0x32488e + _0x32488e, _0x1a8a49 = _0x3e0263 * _0x2c7ee2, _0x20b670 = _0x3e0263 * _0x38a330, _0x30370c = _0x3e0263 * _0x33fbe4, _0xc469b0 = _0x144b22 * _0x38a330, _0x58e2ee = _0x144b22 * _0x33fbe4, _0x424ad4 = _0x32488e * _0x33fbe4, _0x45050b = _0x2720e9 * _0x2c7ee2, _0x2101a4 = _0x2720e9 * _0x38a330, _0x1eb5e9 = _0x2720e9 * _0x33fbe4;
            _0xc2ef1d[_0x15407a + 0x0] = (0x1 - (_0xc469b0 + _0x424ad4)) * _0x445ad1, _0xc2ef1d[_0x15407a + 0x1] = (_0x20b670 + _0x1eb5e9) * _0x445ad1, _0xc2ef1d[_0x15407a + 0x2] = (_0x30370c - _0x2101a4) * _0x445ad1, _0xc2ef1d[_0x15407a + 0x3] = 0x0, _0xc2ef1d[_0x15407a + 0x4] = (_0x20b670 - _0x1eb5e9) * _0x2369aa, _0xc2ef1d[_0x15407a + 0x5] = (0x1 - (_0x1a8a49 + _0x424ad4)) * _0x2369aa, _0xc2ef1d[_0x15407a + 0x6] = (_0x58e2ee + _0x45050b) * _0x2369aa, _0xc2ef1d[_0x15407a + 0x7] = 0x0, _0xc2ef1d[_0x15407a + 0x8] = (_0x30370c + _0x2101a4) * _0x167d48, _0xc2ef1d[_0x15407a + 0x9] = (_0x58e2ee - _0x45050b) * _0x167d48, _0xc2ef1d[_0x15407a + 0xa] = (0x1 - (_0x1a8a49 + _0xc469b0)) * _0x167d48, _0xc2ef1d[_0x15407a + 0xb] = 0x0, _0xc2ef1d[_0x15407a + 0xc] = _0x3cd868, _0xc2ef1d[_0x15407a + 0xd] = _0x5d3a51, _0xc2ef1d[_0x15407a + 0xe] = _0x330f8f, _0xc2ef1d[_0x15407a + 0xf] = 0x1;
        }
        static ['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x5405ed, _0x2946ae, _0x3c0ef3, _0x4bc142, _0x35f0db) {
            var _0x4a67a8 = _0x5405ed[_0x2946ae + 0x0], _0xf2b78b = _0x5405ed[_0x2946ae + 0x1], _0x46e205 = _0x5405ed[_0x2946ae + 0x2], _0x28a7ee = _0x3c0ef3['elements'], _0x5f33b1 = _0x4a67a8 * _0x28a7ee[0x3] + _0xf2b78b * _0x28a7ee[0x7] + _0x46e205 * _0x28a7ee[0xb] + _0x28a7ee[0xf];
            _0x4bc142[_0x35f0db] = _0x4a67a8 * _0x28a7ee[0x0] + _0xf2b78b * _0x28a7ee[0x4] + _0x46e205 * _0x28a7ee[0x8] + _0x28a7ee[0xc] / _0x5f33b1, _0x4bc142[_0x35f0db + 0x1] = _0x4a67a8 * _0x28a7ee[0x1] + _0xf2b78b * _0x28a7ee[0x5] + _0x46e205 * _0x28a7ee[0x9] + _0x28a7ee[0xd] / _0x5f33b1, _0x4bc142[_0x35f0db + 0x2] = _0x4a67a8 * _0x28a7ee[0x2] + _0xf2b78b * _0x28a7ee[0x6] + _0x46e205 * _0x28a7ee[0xa] + _0x28a7ee[0xe] / _0x5f33b1;
        }
        static ['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x81350, _0x563c8e, _0x2ebef2, _0x3c706d, _0x3607a0) {
            var _0x23671d = _0x81350[_0x563c8e + 0x0], _0x543162 = _0x81350[_0x563c8e + 0x1], _0x39416a = _0x81350[_0x563c8e + 0x2], _0x4cc6c8 = _0x2ebef2['elements'];
            _0x3c706d[_0x3607a0] = _0x23671d * _0x4cc6c8[0x0] + _0x543162 * _0x4cc6c8[0x4] + _0x39416a * _0x4cc6c8[0x8], _0x3c706d[_0x3607a0 + 0x1] = _0x23671d * _0x4cc6c8[0x1] + _0x543162 * _0x4cc6c8[0x5] + _0x39416a * _0x4cc6c8[0x9], _0x3c706d[_0x3607a0 + 0x2] = _0x23671d * _0x4cc6c8[0x2] + _0x543162 * _0x4cc6c8[0x6] + _0x39416a * _0x4cc6c8[0xa];
        }
        static ['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x2d74ec, _0x4fe204, _0x53d81e, _0x2bba95, _0x389085) {
            _0x2bba95[_0x389085 + 0x0] = _0x2d74ec[_0x4fe204 + 0x0] * _0x53d81e['x'] + _0x53d81e['z'], _0x2bba95[_0x389085 + 0x1] = 0x1 - ((0x1 - _0x2d74ec[_0x4fe204 + 0x1]) * _0x53d81e['y'] + _0x53d81e['w']);
        }
        static ['getURLVeri' + 'on'](_0x465525) {
            var _0x3b5fee = _0x465525['indexOf']('?');
            return _0x3b5fee >= 0x0 ? _0x465525['substr'](_0x3b5fee) : null;
        }
        static ['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](_0x3acd6c, _0x4c8441, _0x189cf8, _0x52b1d7) {
            var _0x490a75 = _0x4c8441['x'], _0x4fd4ed = _0x4c8441['y'], _0x2b12db = _0x4c8441['z'], _0x11d49f = _0x4c8441['w'], _0x44eb5a = _0x490a75 + _0x490a75, _0x3a1264 = _0x4fd4ed + _0x4fd4ed, _0x58d550 = _0x2b12db + _0x2b12db, _0x577529 = _0x490a75 * _0x44eb5a, _0x343203 = _0x490a75 * _0x3a1264, _0x34fe11 = _0x490a75 * _0x58d550, _0x54fbbd = _0x4fd4ed * _0x3a1264, _0x3ecf9a = _0x4fd4ed * _0x58d550, _0x39a9cc = _0x2b12db * _0x58d550, _0x254f66 = _0x11d49f * _0x44eb5a, _0x2c8058 = _0x11d49f * _0x3a1264, _0x2b9283 = _0x11d49f * _0x58d550, _0x1c2bc8 = _0x189cf8['x'], _0x2cfe7f = _0x189cf8['y'], _0x2aa4cd = _0x189cf8['z'];
            _0x52b1d7[0x0] = (0x1 - (_0x54fbbd + _0x39a9cc)) * _0x1c2bc8, _0x52b1d7[0x1] = (_0x343203 + _0x2b9283) * _0x1c2bc8, _0x52b1d7[0x2] = (_0x34fe11 - _0x2c8058) * _0x1c2bc8, _0x52b1d7[0x3] = 0x0, _0x52b1d7[0x4] = (_0x343203 - _0x2b9283) * _0x2cfe7f, _0x52b1d7[0x5] = (0x1 - (_0x577529 + _0x39a9cc)) * _0x2cfe7f, _0x52b1d7[0x6] = (_0x3ecf9a + _0x254f66) * _0x2cfe7f, _0x52b1d7[0x7] = 0x0, _0x52b1d7[0x8] = (_0x34fe11 + _0x2c8058) * _0x2aa4cd, _0x52b1d7[0x9] = (_0x3ecf9a - _0x254f66) * _0x2aa4cd, _0x52b1d7[0xa] = (0x1 - (_0x577529 + _0x54fbbd)) * _0x2aa4cd, _0x52b1d7[0xb] = 0x0, _0x52b1d7[0xc] = _0x3acd6c['x'], _0x52b1d7[0xd] = _0x3acd6c['y'], _0x52b1d7[0xe] = _0x3acd6c['z'], _0x52b1d7[0xf] = 0x1;
        }
        static ['_mulMatrix' + 'Array'](_0x52e3f3, _0x35e8f5, _0x1f572c, _0x2763d9, _0x260dc1) {
            var _0x3774bf = _0x35e8f5, _0x473dc5 = _0x52e3f3, _0x4c8b95 = _0x2763d9, _0x4f1599 = _0x3774bf[_0x1f572c], _0x4a7108 = _0x3774bf[_0x1f572c + 0x1], _0x32f4d4 = _0x3774bf[_0x1f572c + 0x2], _0x264737 = _0x3774bf[_0x1f572c + 0x3], _0x2b1c8c = _0x3774bf[_0x1f572c + 0x4], _0x5ecbbf = _0x3774bf[_0x1f572c + 0x5], _0x4e4654 = _0x3774bf[_0x1f572c + 0x6], _0x2ad212 = _0x3774bf[_0x1f572c + 0x7], _0x5b81af = _0x3774bf[_0x1f572c + 0x8], _0x8e0e42 = _0x3774bf[_0x1f572c + 0x9], _0x28239e = _0x3774bf[_0x1f572c + 0xa], _0x3b21a0 = _0x3774bf[_0x1f572c + 0xb], _0x3c59a6 = _0x3774bf[_0x1f572c + 0xc], _0x5c1581 = _0x3774bf[_0x1f572c + 0xd], _0x38bdfa = _0x3774bf[_0x1f572c + 0xe], _0x56a1b7 = _0x3774bf[_0x1f572c + 0xf], _0xe5ad05 = _0x473dc5[0x0], _0x5afc5e = _0x473dc5[0x1], _0x116945 = _0x473dc5[0x2], _0x507695 = _0x473dc5[0x3], _0xd196da = _0x473dc5[0x4], _0x21155a = _0x473dc5[0x5], _0x221869 = _0x473dc5[0x6], _0x2cd7e7 = _0x473dc5[0x7], _0x3b3823 = _0x473dc5[0x8], _0x228def = _0x473dc5[0x9], _0x1cd098 = _0x473dc5[0xa], _0x4044cf = _0x473dc5[0xb], _0x15f423 = _0x473dc5[0xc], _0x2d2d3c = _0x473dc5[0xd], _0x9302d2 = _0x473dc5[0xe], _0x1e4199 = _0x473dc5[0xf];
            _0x4c8b95[_0x260dc1] = _0x4f1599 * _0xe5ad05 + _0x4a7108 * _0xd196da + _0x32f4d4 * _0x3b3823 + _0x264737 * _0x15f423, _0x4c8b95[_0x260dc1 + 0x1] = _0x4f1599 * _0x5afc5e + _0x4a7108 * _0x21155a + _0x32f4d4 * _0x228def + _0x264737 * _0x2d2d3c, _0x4c8b95[_0x260dc1 + 0x2] = _0x4f1599 * _0x116945 + _0x4a7108 * _0x221869 + _0x32f4d4 * _0x1cd098 + _0x264737 * _0x9302d2, _0x4c8b95[_0x260dc1 + 0x3] = _0x4f1599 * _0x507695 + _0x4a7108 * _0x2cd7e7 + _0x32f4d4 * _0x4044cf + _0x264737 * _0x1e4199, _0x4c8b95[_0x260dc1 + 0x4] = _0x2b1c8c * _0xe5ad05 + _0x5ecbbf * _0xd196da + _0x4e4654 * _0x3b3823 + _0x2ad212 * _0x15f423, _0x4c8b95[_0x260dc1 + 0x5] = _0x2b1c8c * _0x5afc5e + _0x5ecbbf * _0x21155a + _0x4e4654 * _0x228def + _0x2ad212 * _0x2d2d3c, _0x4c8b95[_0x260dc1 + 0x6] = _0x2b1c8c * _0x116945 + _0x5ecbbf * _0x221869 + _0x4e4654 * _0x1cd098 + _0x2ad212 * _0x9302d2, _0x4c8b95[_0x260dc1 + 0x7] = _0x2b1c8c * _0x507695 + _0x5ecbbf * _0x2cd7e7 + _0x4e4654 * _0x4044cf + _0x2ad212 * _0x1e4199, _0x4c8b95[_0x260dc1 + 0x8] = _0x5b81af * _0xe5ad05 + _0x8e0e42 * _0xd196da + _0x28239e * _0x3b3823 + _0x3b21a0 * _0x15f423, _0x4c8b95[_0x260dc1 + 0x9] = _0x5b81af * _0x5afc5e + _0x8e0e42 * _0x21155a + _0x28239e * _0x228def + _0x3b21a0 * _0x2d2d3c, _0x4c8b95[_0x260dc1 + 0xa] = _0x5b81af * _0x116945 + _0x8e0e42 * _0x221869 + _0x28239e * _0x1cd098 + _0x3b21a0 * _0x9302d2, _0x4c8b95[_0x260dc1 + 0xb] = _0x5b81af * _0x507695 + _0x8e0e42 * _0x2cd7e7 + _0x28239e * _0x4044cf + _0x3b21a0 * _0x1e4199, _0x4c8b95[_0x260dc1 + 0xc] = _0x3c59a6 * _0xe5ad05 + _0x5c1581 * _0xd196da + _0x38bdfa * _0x3b3823 + _0x56a1b7 * _0x15f423, _0x4c8b95[_0x260dc1 + 0xd] = _0x3c59a6 * _0x5afc5e + _0x5c1581 * _0x21155a + _0x38bdfa * _0x228def + _0x56a1b7 * _0x2d2d3c, _0x4c8b95[_0x260dc1 + 0xe] = _0x3c59a6 * _0x116945 + _0x5c1581 * _0x221869 + _0x38bdfa * _0x1cd098 + _0x56a1b7 * _0x9302d2, _0x4c8b95[_0x260dc1 + 0xf] = _0x3c59a6 * _0x507695 + _0x5c1581 * _0x2cd7e7 + _0x38bdfa * _0x4044cf + _0x56a1b7 * _0x1e4199;
        }
        static ['arcTanAngl' + 'e'](_0x447f1b, _0x2665c4) {
            return 0x0 == _0x447f1b ? 0x1 == _0x2665c4 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x447f1b > 0x0 ? Math['atan'](_0x2665c4 / _0x447f1b) : _0x447f1b < 0x0 ? _0x2665c4 > 0x0 ? Math['atan'](_0x2665c4 / _0x447f1b) + Math['PI'] : Math['atan'](_0x2665c4 / _0x447f1b) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0xc99495, _0x54929f, _0x3cdd43) {
            _0x43b358['subtract'](_0x54929f, _0xc99495, _0x7cf2d3['TEMPVector' + '30']), _0x43b358['normalize'](_0x7cf2d3['TEMPVector' + '30'], _0x7cf2d3['TEMPVector' + '30']), _0x3cdd43['x'] = Math['asin'](_0x7cf2d3['TEMPVector' + '30']['y']), _0x3cdd43['y'] = _0x101904['arcTanAngl' + 'e'](-_0x7cf2d3['TEMPVector' + '30']['z'], -_0x7cf2d3['TEMPVector' + '30']['x']);
        }
        static ['transformQ' + 'uat'](_0x3b6daf, _0xdd850a, _0x3f4c99) {
            var _0x13b8de = _0xdd850a, _0x6f8e4d = _0x3b6daf['x'], _0x28c133 = _0x3b6daf['y'], _0x5412fb = _0x3b6daf['z'], _0x5f30b8 = _0x13b8de[0x0], _0x5b3335 = _0x13b8de[0x1], _0x1ef03f = _0x13b8de[0x2], _0x203178 = _0x13b8de[0x3], _0x263b99 = _0x203178 * _0x6f8e4d + _0x5b3335 * _0x5412fb - _0x1ef03f * _0x28c133, _0xd6dcae = _0x203178 * _0x28c133 + _0x1ef03f * _0x6f8e4d - _0x5f30b8 * _0x5412fb, _0x35517e = _0x203178 * _0x5412fb + _0x5f30b8 * _0x28c133 - _0x5b3335 * _0x6f8e4d, _0xa34e9f = -_0x5f30b8 * _0x6f8e4d - _0x5b3335 * _0x28c133 - _0x1ef03f * _0x5412fb;
            _0x3f4c99['x'] = _0x263b99 * _0x203178 + _0xa34e9f * -_0x5f30b8 + _0xd6dcae * -_0x1ef03f - _0x35517e * -_0x5b3335, _0x3f4c99['y'] = _0xd6dcae * _0x203178 + _0xa34e9f * -_0x5b3335 + _0x35517e * -_0x5f30b8 - _0x263b99 * -_0x1ef03f, _0x3f4c99['z'] = _0x35517e * _0x203178 + _0xa34e9f * -_0x1ef03f + _0x263b99 * -_0x5b3335 - _0xd6dcae * -_0x5f30b8;
        }
        static ['quaternion' + 'Weight'](_0x2f9d27, _0x4d24f5, _0xe61e45) {
            _0xe61e45['x'] = _0x2f9d27['x'] * _0x4d24f5, _0xe61e45['y'] = _0x2f9d27['y'] * _0x4d24f5, _0xe61e45['z'] = _0x2f9d27['z'] * _0x4d24f5, _0xe61e45['w'] = _0x2f9d27['w'];
        }
        static ['quaternion' + 'Conjugate'](_0x59b3a0, _0x5bdfd6) {
            _0x5bdfd6['x'] = -_0x59b3a0['x'], _0x5bdfd6['y'] = -_0x59b3a0['y'], _0x5bdfd6['z'] = -_0x59b3a0['z'], _0x5bdfd6['w'] = _0x59b3a0['w'];
        }
        static ['scaleWeigh' + 't'](_0x2a83a3, _0x358027, _0x39a029) {
            var _0x44c29f = _0x2a83a3['x'], _0x3841fc = _0x2a83a3['y'], _0xb0598e = _0x2a83a3['z'];
            _0x39a029['x'] = _0x44c29f > 0x0 ? Math['pow'](Math['abs'](_0x44c29f), _0x358027) : -Math['pow'](Math['abs'](_0x44c29f), _0x358027), _0x39a029['y'] = _0x3841fc > 0x0 ? Math['pow'](Math['abs'](_0x3841fc), _0x358027) : -Math['pow'](Math['abs'](_0x3841fc), _0x358027), _0x39a029['z'] = _0xb0598e > 0x0 ? Math['pow'](Math['abs'](_0xb0598e), _0x358027) : -Math['pow'](Math['abs'](_0xb0598e), _0x358027);
        }
        static ['scaleBlend'](_0x57f927, _0x1b9245, _0x49b47f, _0xa6d07b) {
            var _0x274dc5 = _0x101904['_tempVecto' + 'r3_0'], _0xf77ece = _0x101904['_tempVecto' + 'r3_1'];
            _0x101904['scaleWeigh' + 't'](_0x57f927, 0x1 - _0x49b47f, _0x274dc5), _0x101904['scaleWeigh' + 't'](_0x1b9245, _0x49b47f, _0xf77ece);
            var _0x402ed5 = _0x49b47f > 0.5 ? _0x1b9245 : _0x57f927;
            _0xa6d07b['x'] = _0x402ed5['x'] > 0x0 ? Math['abs'](_0x274dc5['x'] * _0xf77ece['x']) : -Math['abs'](_0x274dc5['x'] * _0xf77ece['x']), _0xa6d07b['y'] = _0x402ed5['y'] > 0x0 ? Math['abs'](_0x274dc5['y'] * _0xf77ece['y']) : -Math['abs'](_0x274dc5['y'] * _0xf77ece['y']), _0xa6d07b['z'] = _0x402ed5['z'] > 0x0 ? Math['abs'](_0x274dc5['z'] * _0xf77ece['z']) : -Math['abs'](_0x274dc5['z'] * _0xf77ece['z']);
        }
        static ['matrix4x4M' + 'ultiplyFFF'](_0x426705, _0x419186, _0x370825) {
            var _0x5363fc, _0x256370, _0x598581, _0x43bd39, _0x500b33;
            if (_0x370825 === _0x419186) {
                for (_0x419186 = new Float32Array(0x10), _0x5363fc = 0x0; _0x5363fc < 0x10; ++_0x5363fc)
                    _0x419186[_0x5363fc] = _0x370825[_0x5363fc];
            }
            var _0x14408f = _0x419186[0x0], _0x38e84e = _0x419186[0x1], _0x354517 = _0x419186[0x2], _0x115473 = _0x419186[0x3], _0x34f3bc = _0x419186[0x4], _0x37d31d = _0x419186[0x5], _0x2909d3 = _0x419186[0x6], _0xa11d9f = _0x419186[0x7], _0x1e7e70 = _0x419186[0x8], _0xae8bd3 = _0x419186[0x9], _0x1ca937 = _0x419186[0xa], _0x127a26 = _0x419186[0xb], _0xe4313c = _0x419186[0xc], _0x1e4b99 = _0x419186[0xd], _0x11d116 = _0x419186[0xe], _0x14857e = _0x419186[0xf];
            for (_0x5363fc = 0x0; _0x5363fc < 0x4; _0x5363fc++)
                _0x256370 = _0x426705[_0x5363fc], _0x598581 = _0x426705[_0x5363fc + 0x4], _0x43bd39 = _0x426705[_0x5363fc + 0x8], _0x500b33 = _0x426705[_0x5363fc + 0xc], _0x370825[_0x5363fc] = _0x256370 * _0x14408f + _0x598581 * _0x38e84e + _0x43bd39 * _0x354517 + _0x500b33 * _0x115473, _0x370825[_0x5363fc + 0x4] = _0x256370 * _0x34f3bc + _0x598581 * _0x37d31d + _0x43bd39 * _0x2909d3 + _0x500b33 * _0xa11d9f, _0x370825[_0x5363fc + 0x8] = _0x256370 * _0x1e7e70 + _0x598581 * _0xae8bd3 + _0x43bd39 * _0x1ca937 + _0x500b33 * _0x127a26, _0x370825[_0x5363fc + 0xc] = _0x256370 * _0xe4313c + _0x598581 * _0x1e4b99 + _0x43bd39 * _0x11d116 + _0x500b33 * _0x14857e;
        }
        static ['matrix4x4M' + 'ultiplyFFF' + 'ForNative'](_0x1de06c, _0x48e58d, _0x1274e6) {
            _0x2247ad['LayaGL']['instance']['matrix4x4M' + 'ultiply'](_0x1de06c, _0x48e58d, _0x1274e6);
        }
        static ['matrix4x4M' + 'ultiplyMFM'](_0x20a6fa, _0x371c36, _0x279b35) {
            _0x101904['matrix4x4M' + 'ultiplyFFF'](_0x20a6fa['elements'], _0x371c36, _0x279b35['elements']);
        }
        static ['_buildText' + 'ure2D'](_0x565649, _0x19c737, _0x328fff, _0x508b54, _0x5538de = !0x1) {
            var _0x3b7960 = new _0x2247ad['Texture2D'](_0x565649, _0x19c737, _0x328fff, _0x5538de, !0x0);
            return _0x3b7960['anisoLevel'] = 0x1, _0x3b7960['filterMode'] = _0x2247ad['FilterMode']['Point'], _0x16f62a['_generateT' + 'exture2D'](_0x3b7960, _0x565649, _0x19c737, _0x508b54), _0x3b7960;
        }
        static ['_drawBound'](_0x3f08e4, _0x58930f, _0x290155) {
            _0x3f08e4['lineCount'] + 0xc > _0x3f08e4['maxLineCou' + 'nt'] && (_0x3f08e4['maxLineCou' + 'nt'] += 0xc);
            var _0x4b7b06 = _0x101904['_tempVecto' + 'r3_0'], _0x41f145 = _0x101904['_tempVecto' + 'r3_1'], _0x4e8a52 = _0x58930f['min'], _0x3e9b85 = _0x58930f['max'];
            _0x4b7b06['setValue'](_0x4e8a52['x'], _0x4e8a52['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x4e8a52['y'], _0x4e8a52['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x4e8a52['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x4e8a52['x'], _0x4e8a52['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x3e9b85['x'], _0x4e8a52['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x4e8a52['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x4e8a52['y'], _0x3e9b85['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x4e8a52['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x4e8a52['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x4e8a52['x'], _0x3e9b85['y'], _0x4e8a52['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x4e8a52['y'], _0x3e9b85['z']), _0x41f145['setValue'](_0x4e8a52['x'], _0x3e9b85['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x3e9b85['x'], _0x4e8a52['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x3e9b85['y'], _0x4e8a52['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x3e9b85['x'], _0x4e8a52['y'], _0x3e9b85['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x3e9b85['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x3e9b85['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x3e9b85['y'], _0x4e8a52['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x3e9b85['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x4e8a52['x'], _0x3e9b85['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x3e9b85['x'], _0x3e9b85['y'], _0x4e8a52['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x3e9b85['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155), _0x4b7b06['setValue'](_0x4e8a52['x'], _0x3e9b85['y'], _0x3e9b85['z']), _0x41f145['setValue'](_0x3e9b85['x'], _0x3e9b85['y'], _0x3e9b85['z']), _0x3f08e4['addLine'](_0x4b7b06, _0x41f145, _0x290155, _0x290155);
        }
        static ['_getHierar' + 'chyPath'](_0x4da1cb, _0x363a20, _0x32c9a2) {
            _0x32c9a2['length'] = 0x0;
            for (var _0x246cbc = _0x363a20; _0x246cbc !== _0x4da1cb;) {
                var _0x57bfb1 = _0x246cbc['_parent'];
                if (!_0x57bfb1)
                    return null;
                _0x32c9a2['push'](_0x57bfb1['getChildIn' + 'dex'](_0x246cbc)), _0x246cbc = _0x57bfb1;
            }
            return _0x32c9a2;
        }
        static ['_getNodeBy' + 'HierarchyP' + 'ath'](_0xf0b55a, _0x125153) {
            for (var _0x489d66 = _0xf0b55a, _0x24a06a = _0x125153['length'] - 0x1; _0x24a06a >= 0x0; _0x24a06a--)
                _0x489d66 = _0x489d66['getChildAt'](_0x125153[_0x24a06a]);
            return _0x489d66;
        }
    }
    _0x101904['_tempVecto' + 'r3_0'] = new _0x43b358(), _0x101904['_tempVecto' + 'r3_1'] = new _0x43b358(), _0x101904['_tempArray' + '16_0'] = new Float32Array(0x10), _0x101904['_tempArray' + '16_1'] = new Float32Array(0x10), _0x101904['_tempArray' + '16_2'] = new Float32Array(0x10), _0x101904['_tempArray' + '16_3'] = new Float32Array(0x10), _0x101904['_compIdToN' + 'ode'] = new Object();
    class _0x584142 extends _0x2247ad['Resource'] {
        constructor() {
            super(), this['_nodes'] = new _0x19cd05(), this['_animation' + 'Events'] = [];
        }
        static ['_parse'](_0x1cda6f, _0xa8a1e = null, _0x57d497 = null) {
            var _0x2ec865 = new _0x584142(), _0x27e3fc = new _0x2247ad['Byte'](_0x1cda6f), _0xd1d99 = _0x27e3fc['readUTFStr' + 'ing']();
            switch (_0xd1d99) {
            case 'LAYAANIMAT' + 'ION:03':
                _0x5075af['parse'](_0x2ec865, _0x27e3fc);
                break;
            case 'LAYAANIMAT' + 'ION:04':
            case 'LAYAANIMAT' + 'ION:COMPRE' + 'SSION_04':
                _0x3ccdbb['parse'](_0x2ec865, _0x27e3fc, _0xd1d99);
                break;
            default:
                throw 'unknown\x20an' + 'imationCli' + 'p\x20version.';
            }
            return _0x2ec865;
        }
        static ['load'](_0x3b21f4, _0x4f2644) {
            _0x2247ad['ILaya']['loader']['create'](_0x3b21f4, _0x4f2644, null, _0x584142['ANIMATIONC' + 'LIP']);
        }
        ['duration']() {
            return this['_duration'];
        }
        ['_hermiteIn' + 'terpolate'](_0x5a0f88, _0xd95a7d, _0x1e7671, _0x5be641) {
            var _0x202dc8 = _0x5a0f88['outTangent'], _0x4203f6 = _0xd95a7d['inTangent'];
            if (Number['isFinite'](_0x202dc8) && Number['isFinite'](_0x4203f6)) {
                var _0x39a898 = _0x1e7671 * _0x1e7671, _0xf47980 = _0x39a898 * _0x1e7671, _0x29995c = _0xf47980 - 0x2 * _0x39a898 + _0x1e7671, _0x4272b6 = _0xf47980 - _0x39a898, _0x3b487f = -0x2 * _0xf47980 + 0x3 * _0x39a898;
                return (0x2 * _0xf47980 - 0x3 * _0x39a898 + 0x1) * _0x5a0f88['value'] + _0x29995c * _0x202dc8 * _0x5be641 + _0x4272b6 * _0x4203f6 * _0x5be641 + _0x3b487f * _0xd95a7d['value'];
            }
            return _0x5a0f88['value'];
        }
        ['_hermiteIn' + 'terpolateV' + 'ector3'](_0x47be5d, _0x492ef3, _0x4036b5, _0x31a380, _0x3fb2bb) {
            var _0x3fe2fa = _0x47be5d['value'], _0x30ee22 = _0x47be5d['outTangent'], _0x101b71 = _0x492ef3['value'], _0xbecf48 = _0x492ef3['inTangent'], _0x5a9aa3 = _0x4036b5 * _0x4036b5, _0x1a3be9 = _0x5a9aa3 * _0x4036b5, _0x3bc3e9 = 0x2 * _0x1a3be9 - 0x3 * _0x5a9aa3 + 0x1, _0x3795f9 = _0x1a3be9 - 0x2 * _0x5a9aa3 + _0x4036b5, _0x47e056 = _0x1a3be9 - _0x5a9aa3, _0x24fa48 = -0x2 * _0x1a3be9 + 0x3 * _0x5a9aa3, _0x117b37 = _0x30ee22['x'], _0x22b853 = _0xbecf48['x'];
            Number['isFinite'](_0x117b37) && Number['isFinite'](_0x22b853) ? _0x3fb2bb['x'] = _0x3bc3e9 * _0x3fe2fa['x'] + _0x3795f9 * _0x117b37 * _0x31a380 + _0x47e056 * _0x22b853 * _0x31a380 + _0x24fa48 * _0x101b71['x'] : _0x3fb2bb['x'] = _0x3fe2fa['x'], _0x117b37 = _0x30ee22['y'], _0x22b853 = _0xbecf48['y'], Number['isFinite'](_0x117b37) && Number['isFinite'](_0x22b853) ? _0x3fb2bb['y'] = _0x3bc3e9 * _0x3fe2fa['y'] + _0x3795f9 * _0x117b37 * _0x31a380 + _0x47e056 * _0x22b853 * _0x31a380 + _0x24fa48 * _0x101b71['y'] : _0x3fb2bb['y'] = _0x3fe2fa['y'], _0x117b37 = _0x30ee22['z'], _0x22b853 = _0xbecf48['z'], Number['isFinite'](_0x117b37) && Number['isFinite'](_0x22b853) ? _0x3fb2bb['z'] = _0x3bc3e9 * _0x3fe2fa['z'] + _0x3795f9 * _0x117b37 * _0x31a380 + _0x47e056 * _0x22b853 * _0x31a380 + _0x24fa48 * _0x101b71['z'] : _0x3fb2bb['z'] = _0x3fe2fa['z'];
        }
        ['_hermiteIn' + 'terpolateQ' + 'uaternion'](_0x46e6ba, _0x2f56da, _0x225857, _0xce7de0, _0x5de5ca) {
            var _0x482e97 = _0x46e6ba['value'], _0x570304 = _0x46e6ba['outTangent'], _0x32d504 = _0x2f56da['value'], _0xbe2400 = _0x2f56da['inTangent'], _0x18b844 = _0x225857 * _0x225857, _0x26a6ff = _0x18b844 * _0x225857, _0x571210 = 0x2 * _0x26a6ff - 0x3 * _0x18b844 + 0x1, _0x1ca6fd = _0x26a6ff - 0x2 * _0x18b844 + _0x225857, _0x4be522 = _0x26a6ff - _0x18b844, _0xcda149 = -0x2 * _0x26a6ff + 0x3 * _0x18b844, _0x49e085 = _0x570304['x'], _0x587657 = _0xbe2400['x'];
            Number['isFinite'](_0x49e085) && Number['isFinite'](_0x587657) ? _0x5de5ca['x'] = _0x571210 * _0x482e97['x'] + _0x1ca6fd * _0x49e085 * _0xce7de0 + _0x4be522 * _0x587657 * _0xce7de0 + _0xcda149 * _0x32d504['x'] : _0x5de5ca['x'] = _0x482e97['x'], _0x49e085 = _0x570304['y'], _0x587657 = _0xbe2400['y'], Number['isFinite'](_0x49e085) && Number['isFinite'](_0x587657) ? _0x5de5ca['y'] = _0x571210 * _0x482e97['y'] + _0x1ca6fd * _0x49e085 * _0xce7de0 + _0x4be522 * _0x587657 * _0xce7de0 + _0xcda149 * _0x32d504['y'] : _0x5de5ca['y'] = _0x482e97['y'], _0x49e085 = _0x570304['z'], _0x587657 = _0xbe2400['z'], Number['isFinite'](_0x49e085) && Number['isFinite'](_0x587657) ? _0x5de5ca['z'] = _0x571210 * _0x482e97['z'] + _0x1ca6fd * _0x49e085 * _0xce7de0 + _0x4be522 * _0x587657 * _0xce7de0 + _0xcda149 * _0x32d504['z'] : _0x5de5ca['z'] = _0x482e97['z'], _0x49e085 = _0x570304['w'], _0x587657 = _0xbe2400['w'], Number['isFinite'](_0x49e085) && Number['isFinite'](_0x587657) ? _0x5de5ca['w'] = _0x571210 * _0x482e97['w'] + _0x1ca6fd * _0x49e085 * _0xce7de0 + _0x4be522 * _0x587657 * _0xce7de0 + _0xcda149 * _0x32d504['w'] : _0x5de5ca['w'] = _0x482e97['w'];
        }
        ['_evaluateC' + 'lipDatasRe' + 'alTime'](_0x4328cc, _0x47cd24, _0x2b5486, _0x4fa85f, _0x5bc6ae, _0x298130) {
            for (var _0xcea028 = 0x0, _0x3ff967 = _0x4328cc['count']; _0xcea028 < _0x3ff967; _0xcea028++) {
                var _0xcdbaf4, _0xc9ec84 = _0x4328cc['getNodeByI' + 'ndex'](_0xcea028), _0x183c30 = _0xc9ec84['type'], _0x3cbeca = _0xc9ec84['_keyFrames'], _0x28adbc = _0x3cbeca['length'], _0x5c2dac = _0x2b5486[_0xcea028];
                if (_0x5bc6ae) {
                    for (-0x1 !== _0x5c2dac && _0x47cd24 < _0x3cbeca[_0x5c2dac]['time'] && (_0x5c2dac = -0x1, _0x2b5486[_0xcea028] = _0x5c2dac), _0xcdbaf4 = _0x5c2dac + 0x1; _0xcdbaf4 < _0x28adbc && !(_0x3cbeca[_0xcdbaf4]['time'] > _0x47cd24);)
                        _0x5c2dac++, _0xcdbaf4++, _0x2b5486[_0xcea028] = _0x5c2dac;
                } else {
                    for ((_0xcdbaf4 = _0x5c2dac + 0x1) !== _0x28adbc && _0x47cd24 > _0x3cbeca[_0xcdbaf4]['time'] && (_0x5c2dac = _0x28adbc - 0x1, _0x2b5486[_0xcea028] = _0x5c2dac), _0xcdbaf4 = _0x5c2dac + 0x1; _0x5c2dac > -0x1 && !(_0x3cbeca[_0x5c2dac]['time'] < _0x47cd24);)
                        _0x5c2dac--, _0xcdbaf4--, _0x2b5486[_0xcea028] = _0x5c2dac;
                }
                var _0x8870aa = _0xcdbaf4 === _0x28adbc;
                switch (_0x183c30) {
                case 0x0:
                    if (-0x1 !== _0x5c2dac) {
                        var _0x34428b = _0x3cbeca[_0x5c2dac];
                        if (_0x8870aa)
                            _0x298130[_0xcea028] = _0x34428b['value'];
                        else {
                            var _0x11469f, _0x3ea6f7 = _0x3cbeca[_0xcdbaf4], _0x1bb877 = _0x3ea6f7['time'] - _0x34428b['time'];
                            _0x11469f = 0x0 !== _0x1bb877 ? (_0x47cd24 - _0x34428b['time']) / _0x1bb877 : 0x0, _0x298130[_0xcea028] = this['_hermiteIn' + 'terpolate'](_0x34428b, _0x3ea6f7, _0x11469f, _0x1bb877);
                        }
                    } else
                        _0x298130[_0xcea028] = _0x3cbeca[0x0]['value'];
                    _0x4fa85f && (_0x298130[_0xcea028] = _0x298130[_0xcea028] - _0x3cbeca[0x0]['value']);
                    break;
                case 0x1:
                case 0x4:
                    var _0xfb4aee = _0x298130[_0xcea028];
                    if (this['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x3cbeca, _0x5c2dac, _0x8870aa, _0x47cd24, _0xfb4aee), _0x4fa85f) {
                        var _0x308578 = _0x3cbeca[0x0]['value'];
                        _0xfb4aee['x'] -= _0x308578['x'], _0xfb4aee['y'] -= _0x308578['y'], _0xfb4aee['z'] -= _0x308578['z'];
                    }
                    break;
                case 0x2:
                    var _0x23e802 = _0x298130[_0xcea028];
                    if (this['_evaluateF' + 'rameNodeQu' + 'aternionDa' + 'tasRealTim' + 'e'](_0x3cbeca, _0x5c2dac, _0x8870aa, _0x47cd24, _0x23e802), _0x4fa85f) {
                        var _0x526300 = _0x584142['_tempQuate' + 'rnion0'], _0x51baf2 = _0x3cbeca[0x0]['value'];
                        _0x101904['quaternion' + 'Conjugate'](_0x51baf2, _0x526300), _0x7cf2d3['multiply'](_0x526300, _0x23e802, _0x23e802);
                    }
                    break;
                case 0x3:
                    _0xfb4aee = _0x298130[_0xcea028], this['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x3cbeca, _0x5c2dac, _0x8870aa, _0x47cd24, _0xfb4aee), _0x4fa85f && (_0x308578 = _0x3cbeca[0x0]['value'], _0xfb4aee['x'] /= _0x308578['x'], _0xfb4aee['y'] /= _0x308578['y'], _0xfb4aee['z'] /= _0x308578['z']);
                    break;
                default:
                    throw 'AnimationC' + 'lip:unknow' + 'n\x20node\x20typ' + 'e.';
                }
            }
        }
        ['_evaluateC' + 'lipDatasRe' + 'alTimeForN' + 'ative'](_0x2effba, _0x2f03e3, _0x2535c, _0x51ed77) {
            _0x2247ad['LayaGL']['instance']['evaluateCl' + 'ipDatasRea' + 'lTime'](_0x2effba['_nativeObj'], _0x2f03e3, _0x2535c, _0x51ed77);
        }
        ['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x6583b9, _0xa43881, _0x3ffb0f, _0x3c9ee0, _0x48ff9d) {
            if (-0x1 !== _0xa43881) {
                var _0x5d1088 = _0x6583b9[_0xa43881];
                if (_0x3ffb0f) {
                    var _0xbeffee = _0x5d1088['value'];
                    _0x48ff9d['x'] = _0xbeffee['x'], _0x48ff9d['y'] = _0xbeffee['y'], _0x48ff9d['z'] = _0xbeffee['z'];
                } else {
                    var _0x5167f6, _0x5351c3 = _0x6583b9[_0xa43881 + 0x1], _0x1dfade = _0x5d1088['time'], _0x5655f2 = _0x5351c3['time'] - _0x1dfade;
                    _0x5167f6 = 0x0 !== _0x5655f2 ? (_0x3c9ee0 - _0x1dfade) / _0x5655f2 : 0x0, this['_hermiteIn' + 'terpolateV' + 'ector3'](_0x5d1088, _0x5351c3, _0x5167f6, _0x5655f2, _0x48ff9d);
                }
            } else {
                var _0x4e5db1 = _0x6583b9[0x0]['value'];
                _0x48ff9d['x'] = _0x4e5db1['x'], _0x48ff9d['y'] = _0x4e5db1['y'], _0x48ff9d['z'] = _0x4e5db1['z'];
            }
        }
        ['_evaluateF' + 'rameNodeQu' + 'aternionDa' + 'tasRealTim' + 'e'](_0x149a50, _0x45e46c, _0x12c7eb, _0x23b50e, _0x30c9be) {
            if (-0x1 !== _0x45e46c) {
                var _0x253bf0 = _0x149a50[_0x45e46c];
                if (_0x12c7eb) {
                    var _0x4ffa7f = _0x253bf0['value'];
                    _0x30c9be['x'] = _0x4ffa7f['x'], _0x30c9be['y'] = _0x4ffa7f['y'], _0x30c9be['z'] = _0x4ffa7f['z'], _0x30c9be['w'] = _0x4ffa7f['w'];
                } else {
                    var _0x16ae0e, _0x572a84 = _0x149a50[_0x45e46c + 0x1], _0x320091 = _0x253bf0['time'], _0x3a8a52 = _0x572a84['time'] - _0x320091;
                    _0x16ae0e = 0x0 !== _0x3a8a52 ? (_0x23b50e - _0x320091) / _0x3a8a52 : 0x0, this['_hermiteIn' + 'terpolateQ' + 'uaternion'](_0x253bf0, _0x572a84, _0x16ae0e, _0x3a8a52, _0x30c9be);
                }
            } else {
                var _0x56bb23 = _0x149a50[0x0]['value'];
                _0x30c9be['x'] = _0x56bb23['x'], _0x30c9be['y'] = _0x56bb23['y'], _0x30c9be['z'] = _0x56bb23['z'], _0x30c9be['w'] = _0x56bb23['w'];
            }
        }
        ['_binarySea' + 'rchEventIn' + 'dex'](_0x453257) {
            for (var _0xb01a78, _0x5dc3d1 = 0x0, _0x31d42c = this['_animation' + 'Events']['length'] - 0x1; _0x5dc3d1 <= _0x31d42c;) {
                _0xb01a78 = Math['floor']((_0x5dc3d1 + _0x31d42c) / 0x2);
                var _0x4fc0be = this['_animation' + 'Events'][_0xb01a78]['time'];
                if (_0x4fc0be == _0x453257)
                    return _0xb01a78;
                _0x4fc0be > _0x453257 ? _0x31d42c = _0xb01a78 - 0x1 : _0x5dc3d1 = _0xb01a78 + 0x1;
            }
            return _0x5dc3d1;
        }
        ['addEvent'](_0x165d6b) {
            var _0x301f06 = this['_binarySea' + 'rchEventIn' + 'dex'](_0x165d6b['time']);
            this['_animation' + 'Events']['splice'](_0x301f06, 0x0, _0x165d6b);
        }
        ['_disposeRe' + 'source']() {
            this['_nodes'] = null, this['_nodesMap'] = null;
        }
    }
    _0x584142['ANIMATIONC' + 'LIP'] = 'ANIMATIONC' + 'LIP', _0x584142['_tempQuate' + 'rnion0'] = new _0x7cf2d3();
    class _0x1ab5ea {
        constructor() {
            this['_currentSt' + 'ate'] = null;
        }
        get ['normalized' + 'Time']() {
            return this['_normalize' + 'dTime'];
        }
        get ['duration']() {
            return this['_duration'];
        }
        get ['animatorSt' + 'ate']() {
            return this['_currentSt' + 'ate'];
        }
        ['_resetPlay' + 'State'](_0x10a326) {
            this['_finish'] = !0x1, this['_startPlay' + 'Time'] = _0x10a326, this['_elapsedTi' + 'me'] = _0x10a326, this['_playEvent' + 'Index'] = 0x0, this['_lastIsFro' + 'nt'] = !0x0;
        }
        ['_cloneTo'](_0xa2f38) {
            _0xa2f38['_finish'] = this['_finish'], _0xa2f38['_startPlay' + 'Time'] = this['_startPlay' + 'Time'], _0xa2f38['_elapsedTi' + 'me'] = this['_elapsedTi' + 'me'], _0xa2f38['_normalize' + 'dTime'] = this['_normalize' + 'dTime'], _0xa2f38['_normalize' + 'dPlayTime'] = this['_normalize' + 'dPlayTime'], _0xa2f38['_playEvent' + 'Index'] = this['_playEvent' + 'Index'], _0xa2f38['_lastIsFro' + 'nt'] = this['_lastIsFro' + 'nt'];
        }
    }
    class _0x4331ba {
        constructor(_0x2ed8e6) {
            this['_defaultSt' + 'ate'] = null, this['_reference' + 'Count'] = 0x0, this['_playType'] = -0x1, this['_crossDura' + 'tion'] = -0x1, this['_crossMark'] = 0x0, this['_crossNode' + 'sOwnersCou' + 'nt'] = 0x0, this['_crossNode' + 'sOwners'] = [], this['_crossNode' + 'sOwnersInd' + 'icesMap'] = {}, this['_srcCrossC' + 'lipNodeInd' + 'ices'] = [], this['_destCross' + 'ClipNodeIn' + 'dices'] = [], this['_statesMap'] = {}, this['_states'] = [], this['_playState' + 'Info'] = new _0x1ab5ea(), this['_crossPlay' + 'StateInfo'] = new _0x1ab5ea(), this['blendingMo' + 'de'] = _0x4331ba['BLENDINGMO' + 'DE_OVERRID' + 'E'], this['defaultWei' + 'ght'] = 0x1, this['playOnWake'] = !0x0, this['name'] = _0x2ed8e6;
        }
        get ['defaultSta' + 'te']() {
            return this['_defaultSt' + 'ate'];
        }
        set ['defaultSta' + 'te'](_0x329ff1) {
            this['_defaultSt' + 'ate'] = _0x329ff1, this['_statesMap'][_0x329ff1['name']] = _0x329ff1;
        }
        ['_removeCli' + 'p'](_0x423111, _0x2f2935, _0x36e61c, _0x24116b) {
            var _0x21f66d = _0x24116b['_clip'], _0x5c1ecc = _0x423111[_0x36e61c];
            if (_0x423111['splice'](_0x36e61c, 0x1), delete _0x2f2935[_0x24116b['name']], this['_animator']) {
                var _0x1fdd6b = _0x21f66d['_nodes'], _0x2364f9 = _0x5c1ecc['_nodeOwner' + 's'];
                _0x21f66d['_removeRef' + 'erence']();
                for (var _0x79f279 = 0x0, _0x1e859f = _0x1fdd6b['count']; _0x79f279 < _0x1e859f; _0x79f279++)
                    this['_animator']['_removeKey' + 'frameNodeO' + 'wner'](_0x2364f9, _0x1fdd6b['getNodeByI' + 'ndex'](_0x79f279));
            }
        }
        ['_getRefere' + 'nceCount']() {
            return this['_reference' + 'Count'];
        }
        ['_addRefere' + 'nce'](_0x205e65 = 0x1) {
            for (var _0x2f6358 = 0x0, _0x16adc5 = this['_states']['length']; _0x2f6358 < _0x16adc5; _0x2f6358++)
                this['_states'][_0x2f6358]['_addRefere' + 'nce'](_0x205e65);
            this['_reference' + 'Count'] += _0x205e65;
        }
        ['_removeRef' + 'erence'](_0xa4082b = 0x1) {
            for (var _0x5901a6 = 0x0, _0x538033 = this['_states']['length']; _0x5901a6 < _0x538033; _0x5901a6++)
                this['_states'][_0x5901a6]['_removeRef' + 'erence'](_0xa4082b);
            this['_reference' + 'Count'] -= _0xa4082b;
        }
        ['_clearRefe' + 'rence']() {
            this['_removeRef' + 'erence'](-this['_reference' + 'Count']);
        }
        ['getCurrent' + 'PlayState']() {
            return this['_playState' + 'Info'];
        }
        ['getAnimato' + 'rState'](_0x4a5b17) {
            var _0x370c52 = this['_statesMap'][_0x4a5b17];
            return _0x370c52 || null;
        }
        ['addState'](_0x85d26f) {
            var _0x54abb6 = _0x85d26f['name'];
            if (this['_statesMap'][_0x54abb6])
                throw 'AnimatorCo' + 'ntrollerLa' + 'yer:this\x20s' + 'tat\x27s\x20name' + '\x20has\x20exist' + '.';
            this['_statesMap'][_0x54abb6] = _0x85d26f, this['_states']['push'](_0x85d26f), this['_animator'] && (_0x85d26f['_clip']['_addRefere' + 'nce'](), this['_animator']['_getOwners' + 'ByClip'](_0x85d26f));
        }
        ['removeStat' + 'e'](_0x220458) {
            for (var _0x1161b1 = this['_states'], _0x4be89e = -0x1, _0xc5b0cf = 0x0, _0x47df8e = _0x1161b1['length']; _0xc5b0cf < _0x47df8e; _0xc5b0cf++)
                if (_0x1161b1[_0xc5b0cf] === _0x220458) {
                    _0x4be89e = _0xc5b0cf;
                    break;
                }
            -0x1 !== _0x4be89e && this['_removeCli' + 'p'](_0x1161b1, this['_statesMap'], _0x4be89e, _0x220458);
        }
        ['destroy']() {
            this['_clearRefe' + 'rence'](), this['_statesMap'] = null, this['_states'] = null, this['_playState' + 'Info'] = null, this['_crossPlay' + 'StateInfo'] = null, this['_defaultSt' + 'ate'] = null;
        }
        ['cloneTo'](_0x71ffe7) {
            var _0xbc1425 = _0x71ffe7;
            _0xbc1425['name'] = this['name'], _0xbc1425['blendingMo' + 'de'] = this['blendingMo' + 'de'], _0xbc1425['defaultWei' + 'ght'] = this['defaultWei' + 'ght'], _0xbc1425['playOnWake'] = this['playOnWake'];
        }
        ['clone']() {
            var _0x15314f = new _0x4331ba(this['name']);
            return this['cloneTo'](_0x15314f), _0x15314f;
        }
    }
    _0x4331ba['BLENDINGMO' + 'DE_OVERRID' + 'E'] = 0x0, _0x4331ba['BLENDINGMO' + 'DE_ADDTIVE'] = 0x1;
    class _0x2db304 {
        constructor(_0x2c48b1 = 0x0, _0x1085c8 = 0x0, _0x4ec629 = 0x0, _0x45bd31 = 0x0) {
            var _0x3b13b9 = this['elements'] = new Float32Array(0x4);
            _0x3b13b9[0x0] = _0x2c48b1, _0x3b13b9[0x1] = _0x1085c8, _0x3b13b9[0x2] = _0x4ec629, _0x3b13b9[0x3] = _0x45bd31;
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x44fe80) {
            this['elements'][0x0] = _0x44fe80;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x154960) {
            this['elements'][0x1] = _0x154960;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x289920) {
            this['elements'][0x2] = _0x289920;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x3c25b1) {
            this['elements'][0x3] = _0x3c25b1;
        }
        ['fromArray'](_0x37500a, _0x70b2b4 = 0x0) {
            this['elements'][0x0] = _0x37500a[_0x70b2b4 + 0x0], this['elements'][0x1] = _0x37500a[_0x70b2b4 + 0x1], this['elements'][0x2] = _0x37500a[_0x70b2b4 + 0x2], this['elements'][0x3] = _0x37500a[_0x70b2b4 + 0x3];
        }
        ['cloneTo'](_0x178740) {
            var _0x5193d5 = _0x178740['elements'], _0x4ffd84 = this['elements'];
            _0x5193d5[0x0] = _0x4ffd84[0x0], _0x5193d5[0x1] = _0x4ffd84[0x1], _0x5193d5[0x2] = _0x4ffd84[0x2], _0x5193d5[0x3] = _0x4ffd84[0x3];
        }
        ['clone']() {
            var _0x22e80e = new _0x2db304();
            return this['cloneTo'](_0x22e80e), _0x22e80e;
        }
        static ['lerp'](_0x4ceb2c, _0x207334, _0x229bf3, _0x26f41b) {
            var _0x257ada = _0x26f41b['elements'], _0x4eb969 = _0x4ceb2c['elements'], _0x5a7bb8 = _0x207334['elements'], _0x12831f = _0x4eb969[0x0], _0x3781da = _0x4eb969[0x1], _0x23dcd5 = _0x4eb969[0x2], _0x4f2da3 = _0x4eb969[0x3];
            _0x257ada[0x0] = _0x12831f + _0x229bf3 * (_0x5a7bb8[0x0] - _0x12831f), _0x257ada[0x1] = _0x3781da + _0x229bf3 * (_0x5a7bb8[0x1] - _0x3781da), _0x257ada[0x2] = _0x23dcd5 + _0x229bf3 * (_0x5a7bb8[0x2] - _0x23dcd5), _0x257ada[0x3] = _0x4f2da3 + _0x229bf3 * (_0x5a7bb8[0x3] - _0x4f2da3);
        }
        static ['transformB' + 'yM4x4'](_0x3376c2, _0x54d189, _0x2cc471) {
            var _0x5bbe6e = _0x3376c2['elements'], _0x48af46 = _0x5bbe6e[0x0], _0x2cc913 = _0x5bbe6e[0x1], _0x485a30 = _0x5bbe6e[0x2], _0x2f54d3 = _0x5bbe6e[0x3], _0xd28c6c = _0x54d189['elements'], _0x395fff = _0x2cc471['elements'];
            _0x395fff[0x0] = _0x48af46 * _0xd28c6c[0x0] + _0x2cc913 * _0xd28c6c[0x4] + _0x485a30 * _0xd28c6c[0x8] + _0x2f54d3 * _0xd28c6c[0xc], _0x395fff[0x1] = _0x48af46 * _0xd28c6c[0x1] + _0x2cc913 * _0xd28c6c[0x5] + _0x485a30 * _0xd28c6c[0x9] + _0x2f54d3 * _0xd28c6c[0xd], _0x395fff[0x2] = _0x48af46 * _0xd28c6c[0x2] + _0x2cc913 * _0xd28c6c[0x6] + _0x485a30 * _0xd28c6c[0xa] + _0x2f54d3 * _0xd28c6c[0xe], _0x395fff[0x3] = _0x48af46 * _0xd28c6c[0x3] + _0x2cc913 * _0xd28c6c[0x7] + _0x485a30 * _0xd28c6c[0xb] + _0x2f54d3 * _0xd28c6c[0xf];
        }
        static ['equals'](_0x574fe6, _0xd2b3e) {
            var _0x417bfd = _0x574fe6['elements'], _0x42f932 = _0xd2b3e['elements'];
            return _0x40af95['nearEqual'](Math['abs'](_0x417bfd[0x0]), Math['abs'](_0x42f932[0x0])) && _0x40af95['nearEqual'](Math['abs'](_0x417bfd[0x1]), Math['abs'](_0x42f932[0x1])) && _0x40af95['nearEqual'](Math['abs'](_0x417bfd[0x2]), Math['abs'](_0x42f932[0x2])) && _0x40af95['nearEqual'](Math['abs'](_0x417bfd[0x3]), Math['abs'](_0x42f932[0x3]));
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x327636, _0x3be3c6) {
            var _0x501784 = _0x327636['elements'], _0x2dc086 = _0x3be3c6['elements'], _0x215832 = _0x327636['length']();
            _0x215832 > 0x0 && (_0x2dc086[0x0] = _0x501784[0x0] * _0x215832, _0x2dc086[0x1] = _0x501784[0x1] * _0x215832, _0x2dc086[0x2] = _0x501784[0x2] * _0x215832, _0x2dc086[0x3] = _0x501784[0x3] * _0x215832);
        }
        static ['add'](_0x2f06c7, _0x1c128a, _0x2db7a3) {
            var _0x1986db = _0x2db7a3['elements'], _0x1f9144 = _0x2f06c7['elements'], _0x25c90b = _0x1c128a['elements'];
            _0x1986db[0x0] = _0x1f9144[0x0] + _0x25c90b[0x0], _0x1986db[0x1] = _0x1f9144[0x1] + _0x25c90b[0x1], _0x1986db[0x2] = _0x1f9144[0x2] + _0x25c90b[0x2], _0x1986db[0x3] = _0x1f9144[0x3] + _0x25c90b[0x3];
        }
        static ['subtract'](_0x4b0fe4, _0x2976da, _0x910087) {
            var _0x318011 = _0x910087['elements'], _0x265e23 = _0x4b0fe4['elements'], _0x158f8a = _0x2976da['elements'];
            _0x318011[0x0] = _0x265e23[0x0] - _0x158f8a[0x0], _0x318011[0x1] = _0x265e23[0x1] - _0x158f8a[0x1], _0x318011[0x2] = _0x265e23[0x2] - _0x158f8a[0x2], _0x318011[0x3] = _0x265e23[0x3] - _0x158f8a[0x3];
        }
        static ['multiply'](_0x3433b3, _0x21c372, _0x5924a2) {
            var _0xda0d20 = _0x5924a2['elements'], _0x1a82ad = _0x3433b3['elements'], _0x1c7ad0 = _0x21c372['elements'];
            _0xda0d20[0x0] = _0x1a82ad[0x0] * _0x1c7ad0[0x0], _0xda0d20[0x1] = _0x1a82ad[0x1] * _0x1c7ad0[0x1], _0xda0d20[0x2] = _0x1a82ad[0x2] * _0x1c7ad0[0x2], _0xda0d20[0x3] = _0x1a82ad[0x3] * _0x1c7ad0[0x3];
        }
        static ['scale'](_0x319f96, _0x5d0a24, _0x1f0110) {
            var _0x37a6a6 = _0x1f0110['elements'], _0x62cdd9 = _0x319f96['elements'];
            _0x37a6a6[0x0] = _0x62cdd9[0x0] * _0x5d0a24, _0x37a6a6[0x1] = _0x62cdd9[0x1] * _0x5d0a24, _0x37a6a6[0x2] = _0x62cdd9[0x2] * _0x5d0a24, _0x37a6a6[0x3] = _0x62cdd9[0x3] * _0x5d0a24;
        }
        static ['Clamp'](_0x26a858, _0x56e9ce, _0x2177ca, _0xab01c9) {
            var _0x46ecce = _0x26a858['elements'], _0x4daca5 = _0x46ecce[0x0], _0x1c4f21 = _0x46ecce[0x1], _0x4540c9 = _0x46ecce[0x2], _0x5f545f = _0x46ecce[0x3], _0x4577ac = _0x56e9ce['elements'], _0x33d709 = _0x4577ac[0x0], _0x2b60e1 = _0x4577ac[0x1], _0x508a7e = _0x4577ac[0x2], _0x23b93f = _0x4577ac[0x3], _0x4a1d7d = _0x2177ca['elements'], _0x3c122e = _0x4a1d7d[0x0], _0x5ea498 = _0x4a1d7d[0x1], _0x30a95d = _0x4a1d7d[0x2], _0x59a9c7 = _0x4a1d7d[0x3], _0x2531ce = _0xab01c9['elements'];
            _0x4daca5 = (_0x4daca5 = _0x4daca5 > _0x3c122e ? _0x3c122e : _0x4daca5) < _0x33d709 ? _0x33d709 : _0x4daca5, _0x1c4f21 = (_0x1c4f21 = _0x1c4f21 > _0x5ea498 ? _0x5ea498 : _0x1c4f21) < _0x2b60e1 ? _0x2b60e1 : _0x1c4f21, _0x4540c9 = (_0x4540c9 = _0x4540c9 > _0x30a95d ? _0x30a95d : _0x4540c9) < _0x508a7e ? _0x508a7e : _0x4540c9, _0x5f545f = (_0x5f545f = _0x5f545f > _0x59a9c7 ? _0x59a9c7 : _0x5f545f) < _0x23b93f ? _0x23b93f : _0x5f545f, _0x2531ce[0x0] = _0x4daca5, _0x2531ce[0x1] = _0x1c4f21, _0x2531ce[0x2] = _0x4540c9, _0x2531ce[0x3] = _0x5f545f;
        }
        static ['distanceSq' + 'uared'](_0x2bdf97, _0x40bafb) {
            var _0x482f3b = _0x2bdf97['elements'], _0x5de8c7 = _0x40bafb['elements'], _0x225af6 = _0x482f3b[0x0] - _0x5de8c7[0x0], _0x1387eb = _0x482f3b[0x1] - _0x5de8c7[0x1], _0x25ce00 = _0x482f3b[0x2] - _0x5de8c7[0x2], _0x1c320a = _0x482f3b[0x3] - _0x5de8c7[0x3];
            return _0x225af6 * _0x225af6 + _0x1387eb * _0x1387eb + _0x25ce00 * _0x25ce00 + _0x1c320a * _0x1c320a;
        }
        static ['distance'](_0xd6f16a, _0x5389a2) {
            var _0x1f8575 = _0xd6f16a['elements'], _0x231397 = _0x5389a2['elements'], _0x1cc8f4 = _0x1f8575[0x0] - _0x231397[0x0], _0x5e59df = _0x1f8575[0x1] - _0x231397[0x1], _0x3a7b15 = _0x1f8575[0x2] - _0x231397[0x2], _0x3b389b = _0x1f8575[0x3] - _0x231397[0x3];
            return Math['sqrt'](_0x1cc8f4 * _0x1cc8f4 + _0x5e59df * _0x5e59df + _0x3a7b15 * _0x3a7b15 + _0x3b389b * _0x3b389b);
        }
        static ['dot'](_0x3502d9, _0x2654d7) {
            var _0xa37d1b = _0x3502d9['elements'], _0x2ee840 = _0x2654d7['elements'];
            return _0xa37d1b[0x0] * _0x2ee840[0x0] + _0xa37d1b[0x1] * _0x2ee840[0x1] + _0xa37d1b[0x2] * _0x2ee840[0x2] + _0xa37d1b[0x3] * _0x2ee840[0x3];
        }
        static ['min'](_0xbb2e41, _0x1e2c3f, _0x4c7779) {
            var _0x1005bb = _0x4c7779['elements'], _0x3d3a02 = _0xbb2e41['elements'], _0x573122 = _0x1e2c3f['elements'];
            _0x1005bb[0x0] = Math['min'](_0x3d3a02[0x0], _0x573122[0x0]), _0x1005bb[0x1] = Math['min'](_0x3d3a02[0x1], _0x573122[0x1]), _0x1005bb[0x2] = Math['min'](_0x3d3a02[0x2], _0x573122[0x2]), _0x1005bb[0x3] = Math['min'](_0x3d3a02[0x3], _0x573122[0x3]);
        }
        static ['max'](_0x50e678, _0x52e943, _0x2a362c) {
            var _0x3bcafd = _0x2a362c['elements'], _0x344bb3 = _0x50e678['elements'], _0x5252b4 = _0x52e943['elements'];
            _0x3bcafd[0x0] = Math['max'](_0x344bb3[0x0], _0x5252b4[0x0]), _0x3bcafd[0x1] = Math['max'](_0x344bb3[0x1], _0x5252b4[0x1]), _0x3bcafd[0x2] = Math['max'](_0x344bb3[0x2], _0x5252b4[0x2]), _0x3bcafd[0x3] = Math['max'](_0x344bb3[0x3], _0x5252b4[0x3]);
        }
    }
    _0x2db304['ZERO'] = new _0x2db304(), _0x2db304['ONE'] = new _0x2db304(0x1, 0x1, 0x1, 0x1), _0x2db304['UnitX'] = new _0x2db304(0x1, 0x0, 0x0, 0x0), _0x2db304['UnitY'] = new _0x2db304(0x0, 0x1, 0x0, 0x0), _0x2db304['UnitZ'] = new _0x2db304(0x0, 0x0, 0x1, 0x0), _0x2db304['UnitW'] = new _0x2db304(0x0, 0x0, 0x0, 0x1);
    class _0x37e840 {
        constructor(_0x52463d = 0x0, _0x23d595 = 0x0, _0xfb7e8a = 0x0, _0x43ddbd = null) {
            var _0x34a610;
            _0x34a610 = _0x43ddbd || new Float32Array(0x3), this['elements'] = _0x34a610, _0x34a610[0x0] = _0x52463d, _0x34a610[0x1] = _0x23d595, _0x34a610[0x2] = _0xfb7e8a;
        }
        static ['distanceSq' + 'uared'](_0x52e346, _0x599ac0) {
            var _0xa392ed = _0x52e346['elements'], _0x1cc4b1 = _0x599ac0['elements'], _0x115759 = _0xa392ed[0x0] - _0x1cc4b1[0x0], _0x106066 = _0xa392ed[0x1] - _0x1cc4b1[0x1], _0x35260e = _0xa392ed[0x2] - _0x1cc4b1[0x2];
            return _0x115759 * _0x115759 + _0x106066 * _0x106066 + _0x35260e * _0x35260e;
        }
        static ['distance'](_0x194b55, _0x349638) {
            var _0x460a0c = _0x194b55['elements'], _0x2c0a05 = _0x349638['elements'], _0x211862 = _0x460a0c[0x0] - _0x2c0a05[0x0], _0x5f45d3 = _0x460a0c[0x1] - _0x2c0a05[0x1], _0x477f1a = _0x460a0c[0x2] - _0x2c0a05[0x2];
            return Math['sqrt'](_0x211862 * _0x211862 + _0x5f45d3 * _0x5f45d3 + _0x477f1a * _0x477f1a);
        }
        static ['min'](_0x459f3f, _0x3357d2, _0x1982f0) {
            var _0xdef6c2 = _0x1982f0['elements'], _0x2a00aa = _0x459f3f['elements'], _0x25dcd4 = _0x3357d2['elements'];
            _0xdef6c2[0x0] = Math['min'](_0x2a00aa[0x0], _0x25dcd4[0x0]), _0xdef6c2[0x1] = Math['min'](_0x2a00aa[0x1], _0x25dcd4[0x1]), _0xdef6c2[0x2] = Math['min'](_0x2a00aa[0x2], _0x25dcd4[0x2]);
        }
        static ['max'](_0xda3059, _0xbb90b8, _0x5b0a20) {
            var _0x2cda51 = _0x5b0a20['elements'], _0x6055cb = _0xda3059['elements'], _0x26e4e4 = _0xbb90b8['elements'];
            _0x2cda51[0x0] = Math['max'](_0x6055cb[0x0], _0x26e4e4[0x0]), _0x2cda51[0x1] = Math['max'](_0x6055cb[0x1], _0x26e4e4[0x1]), _0x2cda51[0x2] = Math['max'](_0x6055cb[0x2], _0x26e4e4[0x2]);
        }
        static ['transformQ' + 'uat'](_0x442786, _0xf540e, _0x33623c) {
            var _0x39dcb8 = _0x33623c['elements'], _0x37dfed = _0x442786['elements'], _0x4c93bd = _0xf540e['elements'], _0x186bce = _0x37dfed[0x0], _0x5a8d6a = _0x37dfed[0x1], _0x30404d = _0x37dfed[0x2], _0x46c793 = _0x4c93bd[0x0], _0xc6156c = _0x4c93bd[0x1], _0x5e86d2 = _0x4c93bd[0x2], _0x5c3c01 = _0x4c93bd[0x3], _0x37165b = _0x5c3c01 * _0x186bce + _0xc6156c * _0x30404d - _0x5e86d2 * _0x5a8d6a, _0x50aea5 = _0x5c3c01 * _0x5a8d6a + _0x5e86d2 * _0x186bce - _0x46c793 * _0x30404d, _0x1903fc = _0x5c3c01 * _0x30404d + _0x46c793 * _0x5a8d6a - _0xc6156c * _0x186bce, _0x16b210 = -_0x46c793 * _0x186bce - _0xc6156c * _0x5a8d6a - _0x5e86d2 * _0x30404d;
            _0x39dcb8[0x0] = _0x37165b * _0x5c3c01 + _0x16b210 * -_0x46c793 + _0x50aea5 * -_0x5e86d2 - _0x1903fc * -_0xc6156c, _0x39dcb8[0x1] = _0x50aea5 * _0x5c3c01 + _0x16b210 * -_0xc6156c + _0x1903fc * -_0x46c793 - _0x37165b * -_0x5e86d2, _0x39dcb8[0x2] = _0x1903fc * _0x5c3c01 + _0x16b210 * -_0x5e86d2 + _0x37165b * -_0xc6156c - _0x50aea5 * -_0x46c793;
        }
        static ['scalarLeng' + 'th'](_0x161d7e) {
            var _0x20d03d = _0x161d7e['elements'], _0x55d277 = _0x20d03d[0x0], _0xe51851 = _0x20d03d[0x1], _0x58496d = _0x20d03d[0x2];
            return Math['sqrt'](_0x55d277 * _0x55d277 + _0xe51851 * _0xe51851 + _0x58496d * _0x58496d);
        }
        static ['scalarLeng' + 'thSquared'](_0x1c853) {
            var _0x4374ff = _0x1c853['elements'], _0x36f5c8 = _0x4374ff[0x0], _0x1a5fb4 = _0x4374ff[0x1], _0x1562b6 = _0x4374ff[0x2];
            return _0x36f5c8 * _0x36f5c8 + _0x1a5fb4 * _0x1a5fb4 + _0x1562b6 * _0x1562b6;
        }
        static ['normalize'](_0x37be90, _0x27757b) {
            var _0x56b90d = _0x37be90['elements'], _0x367019 = _0x27757b['elements'], _0x409c0e = _0x56b90d[0x0], _0x1d5ac8 = _0x56b90d[0x1], _0x579c0b = _0x56b90d[0x2], _0x467a1b = _0x409c0e * _0x409c0e + _0x1d5ac8 * _0x1d5ac8 + _0x579c0b * _0x579c0b;
            _0x467a1b > 0x0 && (_0x467a1b = 0x1 / Math['sqrt'](_0x467a1b), _0x367019[0x0] = _0x56b90d[0x0] * _0x467a1b, _0x367019[0x1] = _0x56b90d[0x1] * _0x467a1b, _0x367019[0x2] = _0x56b90d[0x2] * _0x467a1b);
        }
        static ['multiply'](_0x1b069d, _0x18b279, _0x13e1a7) {
            var _0x58a9fc = _0x13e1a7['elements'], _0x4b9a1f = _0x1b069d['elements'], _0x186366 = _0x18b279['elements'];
            _0x58a9fc[0x0] = _0x4b9a1f[0x0] * _0x186366[0x0], _0x58a9fc[0x1] = _0x4b9a1f[0x1] * _0x186366[0x1], _0x58a9fc[0x2] = _0x4b9a1f[0x2] * _0x186366[0x2];
        }
        static ['scale'](_0x394e9c, _0x4a3067, _0x505c3e) {
            var _0x320954 = _0x505c3e['elements'], _0x40c807 = _0x394e9c['elements'];
            _0x320954[0x0] = _0x40c807[0x0] * _0x4a3067, _0x320954[0x1] = _0x40c807[0x1] * _0x4a3067, _0x320954[0x2] = _0x40c807[0x2] * _0x4a3067;
        }
        static ['lerp'](_0x3aebda, _0x567775, _0x4797b3, _0x15edfa) {
            var _0x25d757 = _0x15edfa['elements'], _0x239ee5 = _0x3aebda['elements'], _0x4b2dd9 = _0x567775['elements'], _0x555663 = _0x239ee5[0x0], _0x3c3435 = _0x239ee5[0x1], _0x2537aa = _0x239ee5[0x2];
            _0x25d757[0x0] = _0x555663 + _0x4797b3 * (_0x4b2dd9[0x0] - _0x555663), _0x25d757[0x1] = _0x3c3435 + _0x4797b3 * (_0x4b2dd9[0x1] - _0x3c3435), _0x25d757[0x2] = _0x2537aa + _0x4797b3 * (_0x4b2dd9[0x2] - _0x2537aa);
        }
        static ['transformV' + '3ToV3'](_0x146821, _0x586b95, _0x3fb85e) {
            var _0x2decc8 = _0x37e840['_tempVecto' + 'r4'];
            _0x37e840['transformV' + '3ToV4'](_0x146821, _0x586b95, _0x2decc8);
            var _0x38ab63 = _0x2decc8['elements'], _0x381b6f = _0x3fb85e['elements'];
            _0x381b6f[0x0] = _0x38ab63[0x0], _0x381b6f[0x1] = _0x38ab63[0x1], _0x381b6f[0x2] = _0x38ab63[0x2];
        }
        static ['transformV' + '3ToV4'](_0x8aac15, _0x2a7ab9, _0xacd927) {
            var _0x3f9727 = _0x8aac15['elements'], _0x1ae91c = _0x3f9727[0x0], _0x3a95da = _0x3f9727[0x1], _0x9886ed = _0x3f9727[0x2], _0x5d6165 = _0x2a7ab9['elements'], _0x51e3e1 = _0xacd927['elements'];
            _0x51e3e1[0x0] = _0x1ae91c * _0x5d6165[0x0] + _0x3a95da * _0x5d6165[0x4] + _0x9886ed * _0x5d6165[0x8] + _0x5d6165[0xc], _0x51e3e1[0x1] = _0x1ae91c * _0x5d6165[0x1] + _0x3a95da * _0x5d6165[0x5] + _0x9886ed * _0x5d6165[0x9] + _0x5d6165[0xd], _0x51e3e1[0x2] = _0x1ae91c * _0x5d6165[0x2] + _0x3a95da * _0x5d6165[0x6] + _0x9886ed * _0x5d6165[0xa] + _0x5d6165[0xe], _0x51e3e1[0x3] = _0x1ae91c * _0x5d6165[0x3] + _0x3a95da * _0x5d6165[0x7] + _0x9886ed * _0x5d6165[0xb] + _0x5d6165[0xf];
        }
        static ['TransformN' + 'ormal'](_0x578730, _0x4f8e0c, _0x5b2c7d) {
            var _0x54daf7 = _0x578730['elements'], _0x19a844 = _0x54daf7[0x0], _0x12626b = _0x54daf7[0x1], _0x437d03 = _0x54daf7[0x2], _0x408473 = _0x4f8e0c['elements'], _0x5b8e3a = _0x5b2c7d['elements'];
            _0x5b8e3a[0x0] = _0x19a844 * _0x408473[0x0] + _0x12626b * _0x408473[0x4] + _0x437d03 * _0x408473[0x8], _0x5b8e3a[0x1] = _0x19a844 * _0x408473[0x1] + _0x12626b * _0x408473[0x5] + _0x437d03 * _0x408473[0x9], _0x5b8e3a[0x2] = _0x19a844 * _0x408473[0x2] + _0x12626b * _0x408473[0x6] + _0x437d03 * _0x408473[0xa];
        }
        static ['transformC' + 'oordinate'](_0x31752f, _0x274033, _0x4f55a1) {
            var _0x36a168 = _0x31752f['elements'], _0x35270d = _0x36a168[0x0], _0x546f11 = _0x36a168[0x1], _0x195549 = _0x36a168[0x2], _0x366046 = _0x274033['elements'], _0x3062c7 = _0x35270d * _0x366046[0x3] + _0x546f11 * _0x366046[0x7] + _0x195549 * _0x366046[0xb] + _0x366046[0xf], _0x3cdbd5 = _0x4f55a1['elements'];
            _0x3cdbd5[0x0] = _0x35270d * _0x366046[0x0] + _0x546f11 * _0x366046[0x4] + _0x195549 * _0x366046[0x8] + _0x366046[0xc] / _0x3062c7, _0x3cdbd5[0x1] = _0x35270d * _0x366046[0x1] + _0x546f11 * _0x366046[0x5] + _0x195549 * _0x366046[0x9] + _0x366046[0xd] / _0x3062c7, _0x3cdbd5[0x2] = _0x35270d * _0x366046[0x2] + _0x546f11 * _0x366046[0x6] + _0x195549 * _0x366046[0xa] + _0x366046[0xe] / _0x3062c7;
        }
        static ['Clamp'](_0x374496, _0x29920b, _0x83b293, _0x470264) {
            var _0x45df98 = _0x374496['elements'], _0x7ea8c5 = _0x45df98[0x0], _0x1b7081 = _0x45df98[0x1], _0x1ea8bf = _0x45df98[0x2], _0x2528fd = _0x29920b['elements'], _0x181f5d = _0x2528fd[0x0], _0x23d870 = _0x2528fd[0x1], _0x5ce880 = _0x2528fd[0x2], _0x5bf3ef = _0x83b293['elements'], _0x12eda6 = _0x5bf3ef[0x0], _0x7f9c70 = _0x5bf3ef[0x1], _0x45b9be = _0x5bf3ef[0x2], _0x3fdf98 = _0x470264['elements'];
            _0x7ea8c5 = (_0x7ea8c5 = _0x7ea8c5 > _0x12eda6 ? _0x12eda6 : _0x7ea8c5) < _0x181f5d ? _0x181f5d : _0x7ea8c5, _0x1b7081 = (_0x1b7081 = _0x1b7081 > _0x7f9c70 ? _0x7f9c70 : _0x1b7081) < _0x23d870 ? _0x23d870 : _0x1b7081, _0x1ea8bf = (_0x1ea8bf = _0x1ea8bf > _0x45b9be ? _0x45b9be : _0x1ea8bf) < _0x5ce880 ? _0x5ce880 : _0x1ea8bf, _0x3fdf98[0x0] = _0x7ea8c5, _0x3fdf98[0x1] = _0x1b7081, _0x3fdf98[0x2] = _0x1ea8bf;
        }
        static ['add'](_0x5f0f85, _0x5bd3ad, _0x1261d9) {
            var _0x28c67b = _0x1261d9['elements'], _0x178e36 = _0x5f0f85['elements'], _0x50fae0 = _0x5bd3ad['elements'];
            _0x28c67b[0x0] = _0x178e36[0x0] + _0x50fae0[0x0], _0x28c67b[0x1] = _0x178e36[0x1] + _0x50fae0[0x1], _0x28c67b[0x2] = _0x178e36[0x2] + _0x50fae0[0x2];
        }
        static ['subtract'](_0x15249f, _0x123fa3, _0x5d7f0f) {
            var _0x2731da = _0x5d7f0f['elements'], _0x326d1c = _0x15249f['elements'], _0x3f2866 = _0x123fa3['elements'];
            _0x2731da[0x0] = _0x326d1c[0x0] - _0x3f2866[0x0], _0x2731da[0x1] = _0x326d1c[0x1] - _0x3f2866[0x1], _0x2731da[0x2] = _0x326d1c[0x2] - _0x3f2866[0x2];
        }
        static ['cross'](_0x271db7, _0xf1dcee, _0x3e64c4) {
            var _0x5f1145 = _0x271db7['elements'], _0x1bae98 = _0xf1dcee['elements'], _0x3cf9bd = _0x3e64c4['elements'], _0x22b3c6 = _0x5f1145[0x0], _0x11b440 = _0x5f1145[0x1], _0x2cfad9 = _0x5f1145[0x2], _0x164bfd = _0x1bae98[0x0], _0xebf20d = _0x1bae98[0x1], _0x357d13 = _0x1bae98[0x2];
            _0x3cf9bd[0x0] = _0x11b440 * _0x357d13 - _0x2cfad9 * _0xebf20d, _0x3cf9bd[0x1] = _0x2cfad9 * _0x164bfd - _0x22b3c6 * _0x357d13, _0x3cf9bd[0x2] = _0x22b3c6 * _0xebf20d - _0x11b440 * _0x164bfd;
        }
        static ['dot'](_0x4d14fb, _0x2ed4d7) {
            var _0xc23e7b = _0x4d14fb['elements'], _0x1fe720 = _0x2ed4d7['elements'];
            return _0xc23e7b[0x0] * _0x1fe720[0x0] + _0xc23e7b[0x1] * _0x1fe720[0x1] + _0xc23e7b[0x2] * _0x1fe720[0x2];
        }
        static ['equals'](_0x35a7c3, _0x401c17) {
            var _0x26a176 = _0x35a7c3['elements'], _0x22a84c = _0x401c17['elements'];
            return _0x40af95['nearEqual'](_0x26a176[0x0], _0x22a84c[0x0]) && _0x40af95['nearEqual'](_0x26a176[0x1], _0x22a84c[0x1]) && _0x40af95['nearEqual'](_0x26a176[0x2], _0x22a84c[0x2]);
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x1208ee) {
            this['elements'][0x0] = _0x1208ee;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x26ffbf) {
            this['elements'][0x1] = _0x26ffbf;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x4a74c2) {
            this['elements'][0x2] = _0x4a74c2;
        }
        ['setValue'](_0x270b3b, _0x554527, _0x5e6f6c) {
            this['elements'][0x0] = _0x270b3b, this['elements'][0x1] = _0x554527, this['elements'][0x2] = _0x5e6f6c;
        }
        ['fromArray'](_0x4935e6, _0x19f5ec = 0x0) {
            this['elements'][0x0] = _0x4935e6[_0x19f5ec + 0x0], this['elements'][0x1] = _0x4935e6[_0x19f5ec + 0x1], this['elements'][0x2] = _0x4935e6[_0x19f5ec + 0x2];
        }
        ['cloneTo'](_0x385416) {
            var _0x3327e5 = _0x385416['elements'], _0x393afc = this['elements'];
            _0x3327e5[0x0] = _0x393afc[0x0], _0x3327e5[0x1] = _0x393afc[0x1], _0x3327e5[0x2] = _0x393afc[0x2];
        }
        ['clone']() {
            var _0x4121c4 = new _0x37e840();
            return this['cloneTo'](_0x4121c4), _0x4121c4;
        }
        ['toDefault']() {
            this['elements'][0x0] = 0x0, this['elements'][0x1] = 0x0, this['elements'][0x2] = 0x0;
        }
    }
    _0x37e840['_tempVecto' + 'r4'] = new _0x2db304(), _0x37e840['ZERO'] = new _0x37e840(0x0, 0x0, 0x0), _0x37e840['ONE'] = new _0x37e840(0x1, 0x1, 0x1), _0x37e840['NegativeUn' + 'itX'] = new _0x37e840(-0x1, 0x0, 0x0), _0x37e840['UnitX'] = new _0x37e840(0x1, 0x0, 0x0), _0x37e840['UnitY'] = new _0x37e840(0x0, 0x1, 0x0), _0x37e840['UnitZ'] = new _0x37e840(0x0, 0x0, 0x1), _0x37e840['ForwardRH'] = new _0x37e840(0x0, 0x0, -0x1), _0x37e840['ForwardLH'] = new _0x37e840(0x0, 0x0, 0x1), _0x37e840['Up'] = new _0x37e840(0x0, 0x1, 0x0), _0x37e840['NAN'] = new _0x37e840(NaN, NaN, NaN);
    class _0x334e9d {
        constructor(_0x33893b = 0x1, _0x5c84ee = 0x0, _0x3ff276 = 0x0, _0x1b3590 = 0x0, _0x418ba6 = 0x0, _0x23c4eb = 0x1, _0xc52822 = 0x0, _0x44b93a = 0x0, _0x56227a = 0x0, _0x510873 = 0x0, _0x15bea5 = 0x1, _0x38277d = 0x0, _0x3b9775 = 0x0, _0x240419 = 0x0, _0x53d146 = 0x0, _0x123f34 = 0x1, _0x160f15 = null) {
            var _0x4f43fb = this['elements'] = _0x160f15 || new Float32Array(0x10);
            _0x4f43fb[0x0] = _0x33893b, _0x4f43fb[0x1] = _0x5c84ee, _0x4f43fb[0x2] = _0x3ff276, _0x4f43fb[0x3] = _0x1b3590, _0x4f43fb[0x4] = _0x418ba6, _0x4f43fb[0x5] = _0x23c4eb, _0x4f43fb[0x6] = _0xc52822, _0x4f43fb[0x7] = _0x44b93a, _0x4f43fb[0x8] = _0x56227a, _0x4f43fb[0x9] = _0x510873, _0x4f43fb[0xa] = _0x15bea5, _0x4f43fb[0xb] = _0x38277d, _0x4f43fb[0xc] = _0x3b9775, _0x4f43fb[0xd] = _0x240419, _0x4f43fb[0xe] = _0x53d146, _0x4f43fb[0xf] = _0x123f34;
        }
        static ['createRota' + 'tionX'](_0x1ae72d, _0x535c69) {
            var _0x499e82 = _0x535c69['elements'], _0xf5af42 = Math['sin'](_0x1ae72d), _0x3e1cb5 = Math['cos'](_0x1ae72d);
            _0x499e82[0x1] = _0x499e82[0x2] = _0x499e82[0x3] = _0x499e82[0x4] = _0x499e82[0x7] = _0x499e82[0x8] = _0x499e82[0xb] = _0x499e82[0xc] = _0x499e82[0xd] = _0x499e82[0xe] = 0x0, _0x499e82[0x0] = _0x499e82[0xf] = 0x1, _0x499e82[0x5] = _0x499e82[0xa] = _0x3e1cb5, _0x499e82[0x6] = _0xf5af42, _0x499e82[0x9] = -_0xf5af42;
        }
        static ['createRota' + 'tionY'](_0x3f03a7, _0x3e7dde) {
            var _0x22ef80 = _0x3e7dde['elements'], _0x1f544a = Math['sin'](_0x3f03a7), _0x514a8a = Math['cos'](_0x3f03a7);
            _0x22ef80[0x1] = _0x22ef80[0x3] = _0x22ef80[0x4] = _0x22ef80[0x6] = _0x22ef80[0x7] = _0x22ef80[0x9] = _0x22ef80[0xb] = _0x22ef80[0xc] = _0x22ef80[0xd] = _0x22ef80[0xe] = 0x0, _0x22ef80[0x5] = _0x22ef80[0xf] = 0x1, _0x22ef80[0x0] = _0x22ef80[0xa] = _0x514a8a, _0x22ef80[0x2] = -_0x1f544a, _0x22ef80[0x8] = _0x1f544a;
        }
        static ['createRota' + 'tionZ'](_0x2b5f84, _0x73257a) {
            var _0x4c55b6 = _0x73257a['elements'], _0x178dd7 = Math['sin'](_0x2b5f84), _0x59ed45 = Math['cos'](_0x2b5f84);
            _0x4c55b6[0x2] = _0x4c55b6[0x3] = _0x4c55b6[0x6] = _0x4c55b6[0x7] = _0x4c55b6[0x8] = _0x4c55b6[0x9] = _0x4c55b6[0xb] = _0x4c55b6[0xc] = _0x4c55b6[0xd] = _0x4c55b6[0xe] = 0x0, _0x4c55b6[0xa] = _0x4c55b6[0xf] = 0x1, _0x4c55b6[0x0] = _0x4c55b6[0x5] = _0x59ed45, _0x4c55b6[0x1] = _0x178dd7, _0x4c55b6[0x4] = -_0x178dd7;
        }
        static ['createRota' + 'tionYawPit' + 'chRoll'](_0x455291, _0x3b789a, _0x277500, _0x49d843) {
            _0x7cf2d3['createFrom' + 'YawPitchRo' + 'll'](_0x455291, _0x3b789a, _0x277500, _0x334e9d['_tempQuate' + 'rnion']), _0x334e9d['createRota' + 'tionQuater' + 'nion'](_0x334e9d['_tempQuate' + 'rnion'], _0x49d843);
        }
        static ['createRota' + 'tionAxis'](_0x351d74, _0x496773, _0x2865f0) {
            var _0x334f1c = _0x351d74['x'], _0x1d122d = _0x351d74['y'], _0x151567 = _0x351d74['z'], _0x25a988 = Math['cos'](_0x496773), _0x4a8c6e = Math['sin'](_0x496773), _0x50bffa = _0x334f1c * _0x334f1c, _0x241c8d = _0x1d122d * _0x1d122d, _0x15a253 = _0x151567 * _0x151567, _0x5251ad = _0x334f1c * _0x1d122d, _0x511d41 = _0x334f1c * _0x151567, _0xe7f78a = _0x1d122d * _0x151567, _0x22e9ae = _0x2865f0['elements'];
            _0x22e9ae[0x3] = _0x22e9ae[0x7] = _0x22e9ae[0xb] = _0x22e9ae[0xc] = _0x22e9ae[0xd] = _0x22e9ae[0xe] = 0x0, _0x22e9ae[0xf] = 0x1, _0x22e9ae[0x0] = _0x50bffa + _0x25a988 * (0x1 - _0x50bffa), _0x22e9ae[0x1] = _0x5251ad - _0x25a988 * _0x5251ad + _0x4a8c6e * _0x151567, _0x22e9ae[0x2] = _0x511d41 - _0x25a988 * _0x511d41 - _0x4a8c6e * _0x1d122d, _0x22e9ae[0x4] = _0x5251ad - _0x25a988 * _0x5251ad - _0x4a8c6e * _0x151567, _0x22e9ae[0x5] = _0x241c8d + _0x25a988 * (0x1 - _0x241c8d), _0x22e9ae[0x6] = _0xe7f78a - _0x25a988 * _0xe7f78a + _0x4a8c6e * _0x334f1c, _0x22e9ae[0x8] = _0x511d41 - _0x25a988 * _0x511d41 + _0x4a8c6e * _0x1d122d, _0x22e9ae[0x9] = _0xe7f78a - _0x25a988 * _0xe7f78a - _0x4a8c6e * _0x334f1c, _0x22e9ae[0xa] = _0x15a253 + _0x25a988 * (0x1 - _0x15a253);
        }
        ['setRotatio' + 'n'](_0x52d4c7) {
            var _0x4a2936 = _0x52d4c7['x'], _0xa45999 = _0x52d4c7['y'], _0x477597 = _0x52d4c7['z'], _0x5d02d2 = _0x52d4c7['w'], _0x2cc2fb = _0x4a2936 * _0x4a2936, _0x43a34a = _0xa45999 * _0xa45999, _0x576061 = _0x477597 * _0x477597, _0x3263f3 = _0x4a2936 * _0xa45999, _0x5db7ff = _0x477597 * _0x5d02d2, _0x444a51 = _0x477597 * _0x4a2936, _0x5035b7 = _0xa45999 * _0x5d02d2, _0x4d924c = _0xa45999 * _0x477597, _0x5a2673 = _0x4a2936 * _0x5d02d2, _0x2763a9 = this['elements'];
            _0x2763a9[0x0] = 0x1 - 0x2 * (_0x43a34a + _0x576061), _0x2763a9[0x1] = 0x2 * (_0x3263f3 + _0x5db7ff), _0x2763a9[0x2] = 0x2 * (_0x444a51 - _0x5035b7), _0x2763a9[0x4] = 0x2 * (_0x3263f3 - _0x5db7ff), _0x2763a9[0x5] = 0x1 - 0x2 * (_0x576061 + _0x2cc2fb), _0x2763a9[0x6] = 0x2 * (_0x4d924c + _0x5a2673), _0x2763a9[0x8] = 0x2 * (_0x444a51 + _0x5035b7), _0x2763a9[0x9] = 0x2 * (_0x4d924c - _0x5a2673), _0x2763a9[0xa] = 0x1 - 0x2 * (_0x43a34a + _0x2cc2fb);
        }
        ['setPositio' + 'n'](_0x48965d) {
            var _0x1b9efd = this['elements'];
            _0x1b9efd[0xc] = _0x48965d['x'], _0x1b9efd[0xd] = _0x48965d['y'], _0x1b9efd[0xe] = _0x48965d['z'];
        }
        static ['createRota' + 'tionQuater' + 'nion'](_0x558c42, _0x23630a) {
            var _0xf61aca = _0x23630a['elements'], _0x2e012e = _0x558c42['x'], _0x4548b9 = _0x558c42['y'], _0x5d8b39 = _0x558c42['z'], _0x5c43e0 = _0x558c42['w'], _0xf12806 = _0x2e012e * _0x2e012e, _0x4ff082 = _0x4548b9 * _0x4548b9, _0x31f321 = _0x5d8b39 * _0x5d8b39, _0x3075d5 = _0x2e012e * _0x4548b9, _0x3dfd5e = _0x5d8b39 * _0x5c43e0, _0x462f16 = _0x5d8b39 * _0x2e012e, _0x36a590 = _0x4548b9 * _0x5c43e0, _0x2e2f77 = _0x4548b9 * _0x5d8b39, _0x1dcb2a = _0x2e012e * _0x5c43e0;
            _0xf61aca[0x3] = _0xf61aca[0x7] = _0xf61aca[0xb] = _0xf61aca[0xc] = _0xf61aca[0xd] = _0xf61aca[0xe] = 0x0, _0xf61aca[0xf] = 0x1, _0xf61aca[0x0] = 0x1 - 0x2 * (_0x4ff082 + _0x31f321), _0xf61aca[0x1] = 0x2 * (_0x3075d5 + _0x3dfd5e), _0xf61aca[0x2] = 0x2 * (_0x462f16 - _0x36a590), _0xf61aca[0x4] = 0x2 * (_0x3075d5 - _0x3dfd5e), _0xf61aca[0x5] = 0x1 - 0x2 * (_0x31f321 + _0xf12806), _0xf61aca[0x6] = 0x2 * (_0x2e2f77 + _0x1dcb2a), _0xf61aca[0x8] = 0x2 * (_0x462f16 + _0x36a590), _0xf61aca[0x9] = 0x2 * (_0x2e2f77 - _0x1dcb2a), _0xf61aca[0xa] = 0x1 - 0x2 * (_0x4ff082 + _0xf12806);
        }
        static ['createTran' + 'slate'](_0x555eb4, _0x401a02) {
            var _0x5c4c6f = _0x401a02['elements'];
            _0x5c4c6f[0x4] = _0x5c4c6f[0x8] = _0x5c4c6f[0x1] = _0x5c4c6f[0x9] = _0x5c4c6f[0x2] = _0x5c4c6f[0x6] = _0x5c4c6f[0x3] = _0x5c4c6f[0x7] = _0x5c4c6f[0xb] = 0x0, _0x5c4c6f[0x0] = _0x5c4c6f[0x5] = _0x5c4c6f[0xa] = _0x5c4c6f[0xf] = 0x1, _0x5c4c6f[0xc] = _0x555eb4['x'], _0x5c4c6f[0xd] = _0x555eb4['y'], _0x5c4c6f[0xe] = _0x555eb4['z'];
        }
        static ['createScal' + 'ing'](_0x4d1ca1, _0x3bb4e3) {
            var _0x10a1ea = _0x3bb4e3['elements'];
            _0x10a1ea[0x0] = _0x4d1ca1['x'], _0x10a1ea[0x5] = _0x4d1ca1['y'], _0x10a1ea[0xa] = _0x4d1ca1['z'], _0x10a1ea[0x1] = _0x10a1ea[0x4] = _0x10a1ea[0x8] = _0x10a1ea[0xc] = _0x10a1ea[0x9] = _0x10a1ea[0xd] = _0x10a1ea[0x2] = _0x10a1ea[0x6] = _0x10a1ea[0xe] = _0x10a1ea[0x3] = _0x10a1ea[0x7] = _0x10a1ea[0xb] = 0x0, _0x10a1ea[0xf] = 0x1;
        }
        static ['multiply'](_0x34197d, _0x7734ca, _0x136d33) {
            var _0x559150 = _0x7734ca['elements'], _0x42e9af = _0x34197d['elements'], _0x31c40d = _0x136d33['elements'], _0x3bf8ca = _0x559150[0x0], _0x11f719 = _0x559150[0x1], _0x1c1cc2 = _0x559150[0x2], _0xe29aa3 = _0x559150[0x3], _0x5f5cc9 = _0x559150[0x4], _0x376d0e = _0x559150[0x5], _0x10afa3 = _0x559150[0x6], _0x438b75 = _0x559150[0x7], _0xb19d82 = _0x559150[0x8], _0x3f1853 = _0x559150[0x9], _0x45f366 = _0x559150[0xa], _0x1a71db = _0x559150[0xb], _0x665441 = _0x559150[0xc], _0x229333 = _0x559150[0xd], _0x25bd79 = _0x559150[0xe], _0x2e5e46 = _0x559150[0xf], _0x1129c0 = _0x42e9af[0x0], _0x2a1fa5 = _0x42e9af[0x1], _0x20759c = _0x42e9af[0x2], _0x5b4df9 = _0x42e9af[0x3], _0x5bbb23 = _0x42e9af[0x4], _0x4aa510 = _0x42e9af[0x5], _0x34d22e = _0x42e9af[0x6], _0x1a55e0 = _0x42e9af[0x7], _0x3d93e6 = _0x42e9af[0x8], _0xcb1484 = _0x42e9af[0x9], _0x25eeff = _0x42e9af[0xa], _0x22d100 = _0x42e9af[0xb], _0x203e8a = _0x42e9af[0xc], _0x39e166 = _0x42e9af[0xd], _0x546db3 = _0x42e9af[0xe], _0x4c9054 = _0x42e9af[0xf];
            _0x31c40d[0x0] = _0x3bf8ca * _0x1129c0 + _0x11f719 * _0x5bbb23 + _0x1c1cc2 * _0x3d93e6 + _0xe29aa3 * _0x203e8a, _0x31c40d[0x1] = _0x3bf8ca * _0x2a1fa5 + _0x11f719 * _0x4aa510 + _0x1c1cc2 * _0xcb1484 + _0xe29aa3 * _0x39e166, _0x31c40d[0x2] = _0x3bf8ca * _0x20759c + _0x11f719 * _0x34d22e + _0x1c1cc2 * _0x25eeff + _0xe29aa3 * _0x546db3, _0x31c40d[0x3] = _0x3bf8ca * _0x5b4df9 + _0x11f719 * _0x1a55e0 + _0x1c1cc2 * _0x22d100 + _0xe29aa3 * _0x4c9054, _0x31c40d[0x4] = _0x5f5cc9 * _0x1129c0 + _0x376d0e * _0x5bbb23 + _0x10afa3 * _0x3d93e6 + _0x438b75 * _0x203e8a, _0x31c40d[0x5] = _0x5f5cc9 * _0x2a1fa5 + _0x376d0e * _0x4aa510 + _0x10afa3 * _0xcb1484 + _0x438b75 * _0x39e166, _0x31c40d[0x6] = _0x5f5cc9 * _0x20759c + _0x376d0e * _0x34d22e + _0x10afa3 * _0x25eeff + _0x438b75 * _0x546db3, _0x31c40d[0x7] = _0x5f5cc9 * _0x5b4df9 + _0x376d0e * _0x1a55e0 + _0x10afa3 * _0x22d100 + _0x438b75 * _0x4c9054, _0x31c40d[0x8] = _0xb19d82 * _0x1129c0 + _0x3f1853 * _0x5bbb23 + _0x45f366 * _0x3d93e6 + _0x1a71db * _0x203e8a, _0x31c40d[0x9] = _0xb19d82 * _0x2a1fa5 + _0x3f1853 * _0x4aa510 + _0x45f366 * _0xcb1484 + _0x1a71db * _0x39e166, _0x31c40d[0xa] = _0xb19d82 * _0x20759c + _0x3f1853 * _0x34d22e + _0x45f366 * _0x25eeff + _0x1a71db * _0x546db3, _0x31c40d[0xb] = _0xb19d82 * _0x5b4df9 + _0x3f1853 * _0x1a55e0 + _0x45f366 * _0x22d100 + _0x1a71db * _0x4c9054, _0x31c40d[0xc] = _0x665441 * _0x1129c0 + _0x229333 * _0x5bbb23 + _0x25bd79 * _0x3d93e6 + _0x2e5e46 * _0x203e8a, _0x31c40d[0xd] = _0x665441 * _0x2a1fa5 + _0x229333 * _0x4aa510 + _0x25bd79 * _0xcb1484 + _0x2e5e46 * _0x39e166, _0x31c40d[0xe] = _0x665441 * _0x20759c + _0x229333 * _0x34d22e + _0x25bd79 * _0x25eeff + _0x2e5e46 * _0x546db3, _0x31c40d[0xf] = _0x665441 * _0x5b4df9 + _0x229333 * _0x1a55e0 + _0x25bd79 * _0x22d100 + _0x2e5e46 * _0x4c9054;
        }
        static ['multiplyFo' + 'rNative'](_0x36a397, _0x4dcb04, _0x158c24) {
            _0x2247ad['LayaGL']['instance']['matrix4x4M' + 'ultiply'](_0x36a397['elements'], _0x4dcb04['elements'], _0x158c24['elements']);
        }
        static ['createFrom' + 'Quaternion'](_0x2bf705, _0x416634) {
            var _0x230f0a = _0x416634['elements'], _0x7e784c = _0x2bf705['x'], _0x9c3482 = _0x2bf705['y'], _0xcd616 = _0x2bf705['z'], _0xbfc87d = _0x2bf705['w'], _0x229f81 = _0x7e784c + _0x7e784c, _0x26980f = _0x9c3482 + _0x9c3482, _0x2baedd = _0xcd616 + _0xcd616, _0x3d0892 = _0x7e784c * _0x229f81, _0x397372 = _0x9c3482 * _0x229f81, _0x5a45dd = _0x9c3482 * _0x26980f, _0x3585c2 = _0xcd616 * _0x229f81, _0x39046d = _0xcd616 * _0x26980f, _0x52b326 = _0xcd616 * _0x2baedd, _0x1acb19 = _0xbfc87d * _0x229f81, _0x387d29 = _0xbfc87d * _0x26980f, _0x24e523 = _0xbfc87d * _0x2baedd;
            _0x230f0a[0x0] = 0x1 - _0x5a45dd - _0x52b326, _0x230f0a[0x1] = _0x397372 + _0x24e523, _0x230f0a[0x2] = _0x3585c2 - _0x387d29, _0x230f0a[0x3] = 0x0, _0x230f0a[0x4] = _0x397372 - _0x24e523, _0x230f0a[0x5] = 0x1 - _0x3d0892 - _0x52b326, _0x230f0a[0x6] = _0x39046d + _0x1acb19, _0x230f0a[0x7] = 0x0, _0x230f0a[0x8] = _0x3585c2 + _0x387d29, _0x230f0a[0x9] = _0x39046d - _0x1acb19, _0x230f0a[0xa] = 0x1 - _0x3d0892 - _0x5a45dd, _0x230f0a[0xb] = 0x0, _0x230f0a[0xc] = 0x0, _0x230f0a[0xd] = 0x0, _0x230f0a[0xe] = 0x0, _0x230f0a[0xf] = 0x1;
        }
        static ['createAffi' + 'neTransfor' + 'mation'](_0x2e74de, _0x2f90cf, _0x490f0e, _0xf128af) {
            var _0x46ba02 = _0xf128af['elements'], _0x18e2a0 = _0x2f90cf['x'], _0x1e8d25 = _0x2f90cf['y'], _0x1ccc71 = _0x2f90cf['z'], _0x57a4f3 = _0x2f90cf['w'], _0x190125 = _0x18e2a0 + _0x18e2a0, _0x4acebb = _0x1e8d25 + _0x1e8d25, _0xb20f1e = _0x1ccc71 + _0x1ccc71, _0x5013c5 = _0x18e2a0 * _0x190125, _0x48c7c7 = _0x18e2a0 * _0x4acebb, _0x4b5015 = _0x18e2a0 * _0xb20f1e, _0x26496c = _0x1e8d25 * _0x4acebb, _0x37fca5 = _0x1e8d25 * _0xb20f1e, _0xd2cee1 = _0x1ccc71 * _0xb20f1e, _0x2d82c4 = _0x57a4f3 * _0x190125, _0x129383 = _0x57a4f3 * _0x4acebb, _0x5b877f = _0x57a4f3 * _0xb20f1e, _0x366c6b = _0x490f0e['x'], _0x4a228e = _0x490f0e['y'], _0x413970 = _0x490f0e['z'];
            _0x46ba02[0x0] = (0x1 - (_0x26496c + _0xd2cee1)) * _0x366c6b, _0x46ba02[0x1] = (_0x48c7c7 + _0x5b877f) * _0x366c6b, _0x46ba02[0x2] = (_0x4b5015 - _0x129383) * _0x366c6b, _0x46ba02[0x3] = 0x0, _0x46ba02[0x4] = (_0x48c7c7 - _0x5b877f) * _0x4a228e, _0x46ba02[0x5] = (0x1 - (_0x5013c5 + _0xd2cee1)) * _0x4a228e, _0x46ba02[0x6] = (_0x37fca5 + _0x2d82c4) * _0x4a228e, _0x46ba02[0x7] = 0x0, _0x46ba02[0x8] = (_0x4b5015 + _0x129383) * _0x413970, _0x46ba02[0x9] = (_0x37fca5 - _0x2d82c4) * _0x413970, _0x46ba02[0xa] = (0x1 - (_0x5013c5 + _0x26496c)) * _0x413970, _0x46ba02[0xb] = 0x0, _0x46ba02[0xc] = _0x2e74de['x'], _0x46ba02[0xd] = _0x2e74de['y'], _0x46ba02[0xe] = _0x2e74de['z'], _0x46ba02[0xf] = 0x1;
        }
        static ['createLook' + 'At'](_0x326150, _0x521374, _0x4aff4c, _0x1edb47) {
            var _0x15c8e5 = _0x1edb47['elements'], _0x319b1d = _0x334e9d['_tempVecto' + 'r0'], _0x4ad819 = _0x334e9d['_tempVecto' + 'r1'], _0x262f8c = _0x334e9d['_tempVecto' + 'r2'];
            _0x43b358['subtract'](_0x326150, _0x521374, _0x262f8c), _0x43b358['normalize'](_0x262f8c, _0x262f8c), _0x43b358['cross'](_0x4aff4c, _0x262f8c, _0x319b1d), _0x43b358['normalize'](_0x319b1d, _0x319b1d), _0x43b358['cross'](_0x262f8c, _0x319b1d, _0x4ad819), _0x15c8e5[0x3] = _0x15c8e5[0x7] = _0x15c8e5[0xb] = 0x0, _0x15c8e5[0xf] = 0x1, _0x15c8e5[0x0] = _0x319b1d['x'], _0x15c8e5[0x4] = _0x319b1d['y'], _0x15c8e5[0x8] = _0x319b1d['z'], _0x15c8e5[0x1] = _0x4ad819['x'], _0x15c8e5[0x5] = _0x4ad819['y'], _0x15c8e5[0x9] = _0x4ad819['z'], _0x15c8e5[0x2] = _0x262f8c['x'], _0x15c8e5[0x6] = _0x262f8c['y'], _0x15c8e5[0xa] = _0x262f8c['z'], _0x15c8e5[0xc] = -_0x43b358['dot'](_0x319b1d, _0x326150), _0x15c8e5[0xd] = -_0x43b358['dot'](_0x4ad819, _0x326150), _0x15c8e5[0xe] = -_0x43b358['dot'](_0x262f8c, _0x326150);
        }
        static ['createPers' + 'pective'](_0x363550, _0x51e3a8, _0x5022e2, _0x47d0d6, _0x205b3d) {
            var _0x46fce2 = 0x1 / Math['tan'](0.5 * _0x363550), _0x19a2db = _0x5022e2 / (_0x46fce2 / _0x51e3a8), _0x1acb23 = _0x5022e2 / _0x46fce2;
            _0x334e9d['createPers' + 'pectiveOff' + 'Center'](-_0x19a2db, _0x19a2db, -_0x1acb23, _0x1acb23, _0x5022e2, _0x47d0d6, _0x205b3d);
        }
        static ['createPers' + 'pectiveOff' + 'Center'](_0x547dc5, _0x26671f, _0x66f9c1, _0x5979a3, _0x2ceea0, _0x48cb91, _0x4da3d6) {
            var _0x3fe61c = _0x4da3d6['elements'], _0x1e076f = _0x48cb91 / (_0x48cb91 - _0x2ceea0);
            _0x3fe61c[0x1] = _0x3fe61c[0x2] = _0x3fe61c[0x3] = _0x3fe61c[0x4] = _0x3fe61c[0x6] = _0x3fe61c[0x7] = _0x3fe61c[0xc] = _0x3fe61c[0xd] = _0x3fe61c[0xf] = 0x0, _0x3fe61c[0x0] = 0x2 * _0x2ceea0 / (_0x26671f - _0x547dc5), _0x3fe61c[0x5] = 0x2 * _0x2ceea0 / (_0x5979a3 - _0x66f9c1), _0x3fe61c[0x8] = (_0x547dc5 + _0x26671f) / (_0x26671f - _0x547dc5), _0x3fe61c[0x9] = (_0x5979a3 + _0x66f9c1) / (_0x5979a3 - _0x66f9c1), _0x3fe61c[0xa] = -_0x1e076f, _0x3fe61c[0xb] = -0x1, _0x3fe61c[0xe] = -_0x2ceea0 * _0x1e076f;
        }
        static ['createOrth' + 'oOffCenter'](_0x3bf716, _0x5bfbc6, _0x47f69c, _0x5c7d11, _0x21fa83, _0x1bc03c, _0x5db935) {
            var _0x431f25 = _0x5db935['elements'], _0x3c9f64 = 0x1 / (_0x1bc03c - _0x21fa83);
            _0x431f25[0x1] = _0x431f25[0x2] = _0x431f25[0x3] = _0x431f25[0x4] = _0x431f25[0x6] = _0x431f25[0x8] = _0x431f25[0x7] = _0x431f25[0x9] = _0x431f25[0xb] = 0x0, _0x431f25[0xf] = 0x1, _0x431f25[0x0] = 0x2 / (_0x5bfbc6 - _0x3bf716), _0x431f25[0x5] = 0x2 / (_0x5c7d11 - _0x47f69c), _0x431f25[0xa] = -_0x3c9f64, _0x431f25[0xc] = (_0x3bf716 + _0x5bfbc6) / (_0x3bf716 - _0x5bfbc6), _0x431f25[0xd] = (_0x5c7d11 + _0x47f69c) / (_0x47f69c - _0x5c7d11), _0x431f25[0xe] = -_0x21fa83 * _0x3c9f64;
        }
        ['getElement' + 'ByRowColum' + 'n'](_0x564511, _0x4d4b98) {
            if (_0x564511 < 0x0 || _0x564511 > 0x3)
                throw new Error('row\x20Rows\x20a' + 'nd\x20columns' + '\x20for\x20matri' + 'ces\x20run\x20fr' + 'om\x200\x20to\x203,' + '\x20inclusive' + '.');
            if (_0x4d4b98 < 0x0 || _0x4d4b98 > 0x3)
                throw new Error('column\x20Row' + 's\x20and\x20colu' + 'mns\x20for\x20ma' + 'trices\x20run' + '\x20from\x200\x20to' + '\x203,\x20inclus' + 'ive.');
            return this['elements'][0x4 * _0x564511 + _0x4d4b98];
        }
        ['setElement' + 'ByRowColum' + 'n'](_0x4e1366, _0x356648, _0x50e4c0) {
            if (_0x4e1366 < 0x0 || _0x4e1366 > 0x3)
                throw new Error('row\x20Rows\x20a' + 'nd\x20columns' + '\x20for\x20matri' + 'ces\x20run\x20fr' + 'om\x200\x20to\x203,' + '\x20inclusive' + '.');
            if (_0x356648 < 0x0 || _0x356648 > 0x3)
                throw new Error('column\x20Row' + 's\x20and\x20colu' + 'mns\x20for\x20ma' + 'trices\x20run' + '\x20from\x200\x20to' + '\x203,\x20inclus' + 'ive.');
            this['elements'][0x4 * _0x4e1366 + _0x356648] = _0x50e4c0;
        }
        ['equalsOthe' + 'rMatrix'](_0x830b12) {
            var _0x416c3e = this['elements'], _0x233023 = _0x830b12['elements'];
            return _0x40af95['nearEqual'](_0x416c3e[0x0], _0x233023[0x0]) && _0x40af95['nearEqual'](_0x416c3e[0x1], _0x233023[0x1]) && _0x40af95['nearEqual'](_0x416c3e[0x2], _0x233023[0x2]) && _0x40af95['nearEqual'](_0x416c3e[0x3], _0x233023[0x3]) && _0x40af95['nearEqual'](_0x416c3e[0x4], _0x233023[0x4]) && _0x40af95['nearEqual'](_0x416c3e[0x5], _0x233023[0x5]) && _0x40af95['nearEqual'](_0x416c3e[0x6], _0x233023[0x6]) && _0x40af95['nearEqual'](_0x416c3e[0x7], _0x233023[0x7]) && _0x40af95['nearEqual'](_0x416c3e[0x8], _0x233023[0x8]) && _0x40af95['nearEqual'](_0x416c3e[0x9], _0x233023[0x9]) && _0x40af95['nearEqual'](_0x416c3e[0xa], _0x233023[0xa]) && _0x40af95['nearEqual'](_0x416c3e[0xb], _0x233023[0xb]) && _0x40af95['nearEqual'](_0x416c3e[0xc], _0x233023[0xc]) && _0x40af95['nearEqual'](_0x416c3e[0xd], _0x233023[0xd]) && _0x40af95['nearEqual'](_0x416c3e[0xe], _0x233023[0xe]) && _0x40af95['nearEqual'](_0x416c3e[0xf], _0x233023[0xf]);
        }
        ['decomposeT' + 'ransRotSca' + 'le'](_0x582c4a, _0x5648ef, _0x389ed4) {
            var _0x53ac42 = _0x334e9d['_tempMatri' + 'x4x4'];
            return this['decomposeT' + 'ransRotMat' + 'Scale'](_0x582c4a, _0x53ac42, _0x389ed4) ? (_0x7cf2d3['createFrom' + 'Matrix4x4'](_0x53ac42, _0x5648ef), !0x0) : (_0x5648ef['identity'](), !0x1);
        }
        ['decomposeT' + 'ransRotMat' + 'Scale'](_0x5156eb, _0x4b210d, _0x12742e) {
            var _0x5d52b6 = this['elements'], _0x2b4a35 = _0x5156eb, _0x45ad57 = _0x4b210d['elements'], _0x3c5f86 = _0x12742e;
            _0x2b4a35['x'] = _0x5d52b6[0xc], _0x2b4a35['y'] = _0x5d52b6[0xd], _0x2b4a35['z'] = _0x5d52b6[0xe];
            var _0x50f36a = _0x5d52b6[0x0], _0xa7d9e5 = _0x5d52b6[0x1], _0x50a097 = _0x5d52b6[0x2], _0x32852b = _0x5d52b6[0x4], _0x4110d9 = _0x5d52b6[0x5], _0x1420cc = _0x5d52b6[0x6], _0x421bd5 = _0x5d52b6[0x8], _0x59f7d8 = _0x5d52b6[0x9], _0x34bf18 = _0x5d52b6[0xa], _0x126a8a = _0x3c5f86['x'] = Math['sqrt'](_0x50f36a * _0x50f36a + _0xa7d9e5 * _0xa7d9e5 + _0x50a097 * _0x50a097), _0xd27c42 = _0x3c5f86['y'] = Math['sqrt'](_0x32852b * _0x32852b + _0x4110d9 * _0x4110d9 + _0x1420cc * _0x1420cc), _0x35f191 = _0x3c5f86['z'] = Math['sqrt'](_0x421bd5 * _0x421bd5 + _0x59f7d8 * _0x59f7d8 + _0x34bf18 * _0x34bf18);
            if (_0x40af95['isZero'](_0x126a8a) || _0x40af95['isZero'](_0xd27c42) || _0x40af95['isZero'](_0x35f191))
                return _0x45ad57[0x1] = _0x45ad57[0x2] = _0x45ad57[0x3] = _0x45ad57[0x4] = _0x45ad57[0x6] = _0x45ad57[0x7] = _0x45ad57[0x8] = _0x45ad57[0x9] = _0x45ad57[0xb] = _0x45ad57[0xc] = _0x45ad57[0xd] = _0x45ad57[0xe] = 0x0, _0x45ad57[0x0] = _0x45ad57[0x5] = _0x45ad57[0xa] = _0x45ad57[0xf] = 0x1, !0x1;
            var _0x39a8ee = _0x334e9d['_tempVecto' + 'r0'];
            _0x39a8ee['x'] = _0x421bd5 / _0x35f191, _0x39a8ee['y'] = _0x59f7d8 / _0x35f191, _0x39a8ee['z'] = _0x34bf18 / _0x35f191;
            var _0x107dd8 = _0x334e9d['_tempVecto' + 'r1'];
            _0x107dd8['x'] = _0x50f36a / _0x126a8a, _0x107dd8['y'] = _0xa7d9e5 / _0x126a8a, _0x107dd8['z'] = _0x50a097 / _0x126a8a;
            var _0x4a3443 = _0x334e9d['_tempVecto' + 'r2'];
            _0x43b358['cross'](_0x39a8ee, _0x107dd8, _0x4a3443);
            var _0x3dc0b4 = _0x334e9d['_tempVecto' + 'r1'];
            return _0x43b358['cross'](_0x4a3443, _0x39a8ee, _0x3dc0b4), _0x45ad57[0x3] = _0x45ad57[0x7] = _0x45ad57[0xb] = _0x45ad57[0xc] = _0x45ad57[0xd] = _0x45ad57[0xe] = 0x0, _0x45ad57[0xf] = 0x1, _0x45ad57[0x0] = _0x3dc0b4['x'], _0x45ad57[0x1] = _0x3dc0b4['y'], _0x45ad57[0x2] = _0x3dc0b4['z'], _0x45ad57[0x4] = _0x4a3443['x'], _0x45ad57[0x5] = _0x4a3443['y'], _0x45ad57[0x6] = _0x4a3443['z'], _0x45ad57[0x8] = _0x39a8ee['x'], _0x45ad57[0x9] = _0x39a8ee['y'], _0x45ad57[0xa] = _0x39a8ee['z'], _0x45ad57[0x0] * _0x50f36a + _0x45ad57[0x1] * _0xa7d9e5 + _0x45ad57[0x2] * _0x50a097 < 0x0 && (_0x3c5f86['x'] = -_0x126a8a), _0x45ad57[0x4] * _0x32852b + _0x45ad57[0x5] * _0x4110d9 + _0x45ad57[0x6] * _0x1420cc < 0x0 && (_0x3c5f86['y'] = -_0xd27c42), _0x45ad57[0x8] * _0x421bd5 + _0x45ad57[0x9] * _0x59f7d8 + _0x45ad57[0xa] * _0x34bf18 < 0x0 && (_0x3c5f86['z'] = -_0x35f191), !0x0;
        }
        ['decomposeY' + 'awPitchRol' + 'l'](_0x53ffad) {
            var _0x2943a7 = Math['asin'](-this['elements'][0x9]);
            _0x53ffad['y'] = _0x2943a7, Math['cos'](_0x2943a7) > _0x40af95['zeroTolera' + 'nce'] ? (_0x53ffad['z'] = Math['atan2'](this['elements'][0x1], this['elements'][0x5]), _0x53ffad['x'] = Math['atan2'](this['elements'][0x8], this['elements'][0xa])) : (_0x53ffad['z'] = Math['atan2'](-this['elements'][0x4], this['elements'][0x0]), _0x53ffad['x'] = 0x0);
        }
        ['normalize']() {
            var _0x2f902e = this['elements'], _0x5935a8 = _0x2f902e[0x0], _0x2a174d = _0x2f902e[0x1], _0x229b67 = _0x2f902e[0x2], _0x5d4dc9 = Math['sqrt'](_0x5935a8 * _0x5935a8 + _0x2a174d * _0x2a174d + _0x229b67 * _0x229b67);
            if (!_0x5d4dc9)
                return _0x2f902e[0x0] = 0x0, _0x2f902e[0x1] = 0x0, void (_0x2f902e[0x2] = 0x0);
            0x1 != _0x5d4dc9 && (_0x5d4dc9 = 0x1 / _0x5d4dc9, _0x2f902e[0x0] = _0x5935a8 * _0x5d4dc9, _0x2f902e[0x1] = _0x2a174d * _0x5d4dc9, _0x2f902e[0x2] = _0x229b67 * _0x5d4dc9);
        }
        ['transpose']() {
            var _0x432fe5, _0x40099d;
            return _0x40099d = (_0x432fe5 = this['elements'])[0x1], _0x432fe5[0x1] = _0x432fe5[0x4], _0x432fe5[0x4] = _0x40099d, _0x40099d = _0x432fe5[0x2], _0x432fe5[0x2] = _0x432fe5[0x8], _0x432fe5[0x8] = _0x40099d, _0x40099d = _0x432fe5[0x3], _0x432fe5[0x3] = _0x432fe5[0xc], _0x432fe5[0xc] = _0x40099d, _0x40099d = _0x432fe5[0x6], _0x432fe5[0x6] = _0x432fe5[0x9], _0x432fe5[0x9] = _0x40099d, _0x40099d = _0x432fe5[0x7], _0x432fe5[0x7] = _0x432fe5[0xd], _0x432fe5[0xd] = _0x40099d, _0x40099d = _0x432fe5[0xb], _0x432fe5[0xb] = _0x432fe5[0xe], _0x432fe5[0xe] = _0x40099d, this;
        }
        ['invert'](_0x21133a) {
            var _0x4a7776 = this['elements'], _0x44b64e = _0x21133a['elements'], _0x457d0e = _0x4a7776[0x0], _0x3ce984 = _0x4a7776[0x1], _0x3a15a6 = _0x4a7776[0x2], _0x36bfd0 = _0x4a7776[0x3], _0x186c59 = _0x4a7776[0x4], _0x5ca216 = _0x4a7776[0x5], _0x5b8222 = _0x4a7776[0x6], _0x1f454a = _0x4a7776[0x7], _0x3b917d = _0x4a7776[0x8], _0x401324 = _0x4a7776[0x9], _0x31b335 = _0x4a7776[0xa], _0x58e518 = _0x4a7776[0xb], _0x751640 = _0x4a7776[0xc], _0x4f8cba = _0x4a7776[0xd], _0x361d1c = _0x4a7776[0xe], _0x90f0a7 = _0x4a7776[0xf], _0x257719 = _0x457d0e * _0x5ca216 - _0x3ce984 * _0x186c59, _0x3b4b04 = _0x457d0e * _0x5b8222 - _0x3a15a6 * _0x186c59, _0x3ca259 = _0x457d0e * _0x1f454a - _0x36bfd0 * _0x186c59, _0x599f11 = _0x3ce984 * _0x5b8222 - _0x3a15a6 * _0x5ca216, _0x4d044a = _0x3ce984 * _0x1f454a - _0x36bfd0 * _0x5ca216, _0x599816 = _0x3a15a6 * _0x1f454a - _0x36bfd0 * _0x5b8222, _0x2e35aa = _0x3b917d * _0x4f8cba - _0x401324 * _0x751640, _0x275d4a = _0x3b917d * _0x361d1c - _0x31b335 * _0x751640, _0x53ea1b = _0x3b917d * _0x90f0a7 - _0x58e518 * _0x751640, _0x8a4310 = _0x401324 * _0x361d1c - _0x31b335 * _0x4f8cba, _0x56624b = _0x401324 * _0x90f0a7 - _0x58e518 * _0x4f8cba, _0x8059d1 = _0x31b335 * _0x90f0a7 - _0x58e518 * _0x361d1c, _0x20d6fe = _0x257719 * _0x8059d1 - _0x3b4b04 * _0x56624b + _0x3ca259 * _0x8a4310 + _0x599f11 * _0x53ea1b - _0x4d044a * _0x275d4a + _0x599816 * _0x2e35aa;
            0x0 !== Math['abs'](_0x20d6fe) && (_0x20d6fe = 0x1 / _0x20d6fe, _0x44b64e[0x0] = (_0x5ca216 * _0x8059d1 - _0x5b8222 * _0x56624b + _0x1f454a * _0x8a4310) * _0x20d6fe, _0x44b64e[0x1] = (_0x3a15a6 * _0x56624b - _0x3ce984 * _0x8059d1 - _0x36bfd0 * _0x8a4310) * _0x20d6fe, _0x44b64e[0x2] = (_0x4f8cba * _0x599816 - _0x361d1c * _0x4d044a + _0x90f0a7 * _0x599f11) * _0x20d6fe, _0x44b64e[0x3] = (_0x31b335 * _0x4d044a - _0x401324 * _0x599816 - _0x58e518 * _0x599f11) * _0x20d6fe, _0x44b64e[0x4] = (_0x5b8222 * _0x53ea1b - _0x186c59 * _0x8059d1 - _0x1f454a * _0x275d4a) * _0x20d6fe, _0x44b64e[0x5] = (_0x457d0e * _0x8059d1 - _0x3a15a6 * _0x53ea1b + _0x36bfd0 * _0x275d4a) * _0x20d6fe, _0x44b64e[0x6] = (_0x361d1c * _0x3ca259 - _0x751640 * _0x599816 - _0x90f0a7 * _0x3b4b04) * _0x20d6fe, _0x44b64e[0x7] = (_0x3b917d * _0x599816 - _0x31b335 * _0x3ca259 + _0x58e518 * _0x3b4b04) * _0x20d6fe, _0x44b64e[0x8] = (_0x186c59 * _0x56624b - _0x5ca216 * _0x53ea1b + _0x1f454a * _0x2e35aa) * _0x20d6fe, _0x44b64e[0x9] = (_0x3ce984 * _0x53ea1b - _0x457d0e * _0x56624b - _0x36bfd0 * _0x2e35aa) * _0x20d6fe, _0x44b64e[0xa] = (_0x751640 * _0x4d044a - _0x4f8cba * _0x3ca259 + _0x90f0a7 * _0x257719) * _0x20d6fe, _0x44b64e[0xb] = (_0x401324 * _0x3ca259 - _0x3b917d * _0x4d044a - _0x58e518 * _0x257719) * _0x20d6fe, _0x44b64e[0xc] = (_0x5ca216 * _0x275d4a - _0x186c59 * _0x8a4310 - _0x5b8222 * _0x2e35aa) * _0x20d6fe, _0x44b64e[0xd] = (_0x457d0e * _0x8a4310 - _0x3ce984 * _0x275d4a + _0x3a15a6 * _0x2e35aa) * _0x20d6fe, _0x44b64e[0xe] = (_0x4f8cba * _0x3b4b04 - _0x751640 * _0x599f11 - _0x361d1c * _0x257719) * _0x20d6fe, _0x44b64e[0xf] = (_0x3b917d * _0x599f11 - _0x401324 * _0x3b4b04 + _0x31b335 * _0x257719) * _0x20d6fe);
        }
        static ['billboard'](_0x8a3a33, _0x57c847, _0x4e8f8b, _0x3de025, _0x9724ed, _0x577ca8) {
            _0x43b358['subtract'](_0x8a3a33, _0x57c847, _0x334e9d['_tempVecto' + 'r0']);
            var _0x413187 = _0x43b358['scalarLeng' + 'thSquared'](_0x334e9d['_tempVecto' + 'r0']);
            _0x40af95['isZero'](_0x413187) ? (_0x43b358['scale'](_0x9724ed, -0x1, _0x334e9d['_tempVecto' + 'r1']), _0x334e9d['_tempVecto' + 'r1']['cloneTo'](_0x334e9d['_tempVecto' + 'r0'])) : _0x43b358['scale'](_0x334e9d['_tempVecto' + 'r0'], 0x1 / Math['sqrt'](_0x413187), _0x334e9d['_tempVecto' + 'r0']), _0x43b358['cross'](_0x3de025, _0x334e9d['_tempVecto' + 'r0'], _0x334e9d['_tempVecto' + 'r2']), _0x43b358['normalize'](_0x334e9d['_tempVecto' + 'r2'], _0x334e9d['_tempVecto' + 'r2']), _0x43b358['cross'](_0x334e9d['_tempVecto' + 'r0'], _0x334e9d['_tempVecto' + 'r2'], _0x334e9d['_tempVecto' + 'r3']);
            var _0x328707 = _0x334e9d['_tempVecto' + 'r2'], _0x24f9a5 = _0x334e9d['_tempVecto' + 'r3'], _0x1971b1 = _0x334e9d['_tempVecto' + 'r0'], _0x3e8e12 = _0x8a3a33, _0x17c28b = _0x577ca8['elements'];
            _0x17c28b[0x0] = _0x328707['x'], _0x17c28b[0x1] = _0x328707['y'], _0x17c28b[0x2] = _0x328707['z'], _0x17c28b[0x3] = 0x0, _0x17c28b[0x4] = _0x24f9a5['x'], _0x17c28b[0x5] = _0x24f9a5['y'], _0x17c28b[0x6] = _0x24f9a5['z'], _0x17c28b[0x7] = 0x0, _0x17c28b[0x8] = _0x1971b1['x'], _0x17c28b[0x9] = _0x1971b1['y'], _0x17c28b[0xa] = _0x1971b1['z'], _0x17c28b[0xb] = 0x0, _0x17c28b[0xc] = _0x3e8e12['x'], _0x17c28b[0xd] = _0x3e8e12['y'], _0x17c28b[0xe] = _0x3e8e12['z'], _0x17c28b[0xf] = 0x1;
        }
        ['identity']() {
            var _0xd81443 = this['elements'];
            _0xd81443[0x1] = _0xd81443[0x2] = _0xd81443[0x3] = _0xd81443[0x4] = _0xd81443[0x6] = _0xd81443[0x7] = _0xd81443[0x8] = _0xd81443[0x9] = _0xd81443[0xb] = _0xd81443[0xc] = _0xd81443[0xd] = _0xd81443[0xe] = 0x0, _0xd81443[0x0] = _0xd81443[0x5] = _0xd81443[0xa] = _0xd81443[0xf] = 0x1;
        }
        ['cloneTo'](_0x154393) {
            var _0x59c128, _0x218949, _0x1037c2;
            if ((_0x218949 = this['elements']) !== (_0x1037c2 = _0x154393['elements'])) {
                for (_0x59c128 = 0x0; _0x59c128 < 0x10; ++_0x59c128)
                    _0x1037c2[_0x59c128] = _0x218949[_0x59c128];
            }
        }
        ['clone']() {
            var _0x191ea6 = new _0x334e9d();
            return this['cloneTo'](_0x191ea6), _0x191ea6;
        }
        static ['translatio' + 'n'](_0x20702b, _0x371fae) {
            var _0x42602c = _0x371fae['elements'];
            _0x42602c[0x0] = _0x42602c[0x5] = _0x42602c[0xa] = _0x42602c[0xf] = 0x1, _0x42602c[0xc] = _0x20702b['x'], _0x42602c[0xd] = _0x20702b['y'], _0x42602c[0xe] = _0x20702b['z'];
        }
        ['getTransla' + 'tionVector'](_0x51fa62) {
            var _0xf0d391 = this['elements'];
            _0x51fa62['x'] = _0xf0d391[0xc], _0x51fa62['y'] = _0xf0d391[0xd], _0x51fa62['z'] = _0xf0d391[0xe];
        }
        ['setTransla' + 'tionVector'](_0x1d886d) {
            var _0x515d4e = this['elements'], _0x552549 = _0x1d886d;
            _0x515d4e[0xc] = _0x552549['x'], _0x515d4e[0xd] = _0x552549['y'], _0x515d4e[0xe] = _0x552549['z'];
        }
        ['getForward'](_0x383f5f) {
            var _0x2be651 = this['elements'];
            _0x383f5f['x'] = -_0x2be651[0x8], _0x383f5f['y'] = -_0x2be651[0x9], _0x383f5f['z'] = -_0x2be651[0xa];
        }
        ['setForward'](_0xc1ed6c) {
            var _0x49418e = this['elements'];
            _0x49418e[0x8] = -_0xc1ed6c['x'], _0x49418e[0x9] = -_0xc1ed6c['y'], _0x49418e[0xa] = -_0xc1ed6c['z'];
        }
    }
    _0x334e9d['_tempMatri' + 'x4x4'] = new _0x334e9d(), _0x334e9d['TEMPMatrix' + '0'] = new _0x334e9d(), _0x334e9d['TEMPMatrix' + '1'] = new _0x334e9d(), _0x334e9d['_tempVecto' + 'r0'] = new _0x43b358(), _0x334e9d['_tempVecto' + 'r1'] = new _0x43b358(), _0x334e9d['_tempVecto' + 'r2'] = new _0x43b358(), _0x334e9d['_tempVecto' + 'r3'] = new _0x43b358(), _0x334e9d['_tempQuate' + 'rnion'] = new _0x7cf2d3(), _0x334e9d['DEFAULT'] = new _0x334e9d(), _0x334e9d['ZERO'] = new _0x334e9d(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0);
    class _0x4ba8a2 {
        constructor(_0x296cd7 = 0x0, _0x369c50 = 0x0, _0x418568 = 0x0, _0x4a6a6e = 0x1, _0x3871b1 = null) {
            var _0x159da5;
            (_0x159da5 = _0x3871b1 || new Float32Array(0x4))[0x0] = _0x296cd7, _0x159da5[0x1] = _0x369c50, _0x159da5[0x2] = _0x418568, _0x159da5[0x3] = _0x4a6a6e, this['elements'] = _0x159da5;
        }
        static ['_dotArray'](_0x5d20b0, _0x52a7ff) {
            return _0x5d20b0[0x0] * _0x52a7ff[0x0] + _0x5d20b0[0x1] * _0x52a7ff[0x1] + _0x5d20b0[0x2] * _0x52a7ff[0x2] + _0x5d20b0[0x3] * _0x52a7ff[0x3];
        }
        static ['_normalize' + 'Array'](_0x12fdc2, _0x45206d) {
            var _0x3ce9da = _0x12fdc2[0x0], _0x178fc2 = _0x12fdc2[0x1], _0x273564 = _0x12fdc2[0x2], _0x368108 = _0x12fdc2[0x3], _0x54e883 = _0x3ce9da * _0x3ce9da + _0x178fc2 * _0x178fc2 + _0x273564 * _0x273564 + _0x368108 * _0x368108;
            _0x54e883 > 0x0 && (_0x54e883 = 0x1 / Math['sqrt'](_0x54e883), _0x45206d[0x0] = _0x3ce9da * _0x54e883, _0x45206d[0x1] = _0x178fc2 * _0x54e883, _0x45206d[0x2] = _0x273564 * _0x54e883, _0x45206d[0x3] = _0x368108 * _0x54e883);
        }
        static ['_lerpArray'](_0x2468cc, _0x220905, _0x3c6282, _0x50248b) {
            var _0x10a9c6 = 0x1 - _0x3c6282;
            _0x4ba8a2['_dotArray'](_0x2468cc, _0x220905) >= 0x0 ? (_0x50248b[0x0] = _0x10a9c6 * _0x2468cc[0x0] + _0x3c6282 * _0x220905[0x0], _0x50248b[0x1] = _0x10a9c6 * _0x2468cc[0x1] + _0x3c6282 * _0x220905[0x1], _0x50248b[0x2] = _0x10a9c6 * _0x2468cc[0x2] + _0x3c6282 * _0x220905[0x2], _0x50248b[0x3] = _0x10a9c6 * _0x2468cc[0x3] + _0x3c6282 * _0x220905[0x3]) : (_0x50248b[0x0] = _0x10a9c6 * _0x2468cc[0x0] - _0x3c6282 * _0x220905[0x0], _0x50248b[0x1] = _0x10a9c6 * _0x2468cc[0x1] - _0x3c6282 * _0x220905[0x1], _0x50248b[0x2] = _0x10a9c6 * _0x2468cc[0x2] - _0x3c6282 * _0x220905[0x2], _0x50248b[0x3] = _0x10a9c6 * _0x2468cc[0x3] - _0x3c6282 * _0x220905[0x3]), _0x4ba8a2['_normalize' + 'Array'](_0x50248b, _0x50248b);
        }
        static ['createFrom' + 'YawPitchRo' + 'll'](_0x588cde, _0x47631d, _0x561754, _0x399d80) {
            var _0x1484a1 = 0.5 * _0x561754, _0x257a03 = 0.5 * _0x47631d, _0x4e0485 = 0.5 * _0x588cde, _0x13f19e = Math['sin'](_0x1484a1), _0x2a78cd = Math['cos'](_0x1484a1), _0x31fb6e = Math['sin'](_0x257a03), _0x4c05d3 = Math['cos'](_0x257a03), _0x434f2a = Math['sin'](_0x4e0485), _0x2daf1d = Math['cos'](_0x4e0485), _0x112039 = _0x399d80['elements'];
            _0x112039[0x0] = _0x2daf1d * _0x31fb6e * _0x2a78cd + _0x434f2a * _0x4c05d3 * _0x13f19e, _0x112039[0x1] = _0x434f2a * _0x4c05d3 * _0x2a78cd - _0x2daf1d * _0x31fb6e * _0x13f19e, _0x112039[0x2] = _0x2daf1d * _0x4c05d3 * _0x13f19e - _0x434f2a * _0x31fb6e * _0x2a78cd, _0x112039[0x3] = _0x2daf1d * _0x4c05d3 * _0x2a78cd + _0x434f2a * _0x31fb6e * _0x13f19e;
        }
        static ['multiply'](_0x2f9b27, _0x1b4b3e, _0x1ad92b) {
            var _0x50cf95 = _0x2f9b27['elements'], _0x5a8427 = _0x1b4b3e['elements'], _0x5ce9ef = _0x1ad92b['elements'], _0x3df8ad = _0x50cf95[0x0], _0x54454c = _0x50cf95[0x1], _0x48e359 = _0x50cf95[0x2], _0x212852 = _0x50cf95[0x3], _0x5e0341 = _0x5a8427[0x0], _0x44f55b = _0x5a8427[0x1], _0x25c445 = _0x5a8427[0x2], _0x29a115 = _0x5a8427[0x3], _0x418124 = _0x54454c * _0x25c445 - _0x48e359 * _0x44f55b, _0x5eca4a = _0x48e359 * _0x5e0341 - _0x3df8ad * _0x25c445, _0x4c7895 = _0x3df8ad * _0x44f55b - _0x54454c * _0x5e0341, _0x502791 = _0x3df8ad * _0x5e0341 + _0x54454c * _0x44f55b + _0x48e359 * _0x25c445;
            _0x5ce9ef[0x0] = _0x3df8ad * _0x29a115 + _0x5e0341 * _0x212852 + _0x418124, _0x5ce9ef[0x1] = _0x54454c * _0x29a115 + _0x44f55b * _0x212852 + _0x5eca4a, _0x5ce9ef[0x2] = _0x48e359 * _0x29a115 + _0x25c445 * _0x212852 + _0x4c7895, _0x5ce9ef[0x3] = _0x212852 * _0x29a115 - _0x502791;
        }
        static ['arcTanAngl' + 'e'](_0x1422d2, _0x2c3032) {
            return 0x0 == _0x1422d2 ? 0x1 == _0x2c3032 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x1422d2 > 0x0 ? Math['atan'](_0x2c3032 / _0x1422d2) : _0x1422d2 < 0x0 ? _0x2c3032 > 0x0 ? Math['atan'](_0x2c3032 / _0x1422d2) + Math['PI'] : Math['atan'](_0x2c3032 / _0x1422d2) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0xacdaaf, _0xc604dc, _0x127595) {
            _0x37e840['subtract'](_0xc604dc, _0xacdaaf, _0x4ba8a2['TEMPVector' + '30']), _0x37e840['normalize'](_0x4ba8a2['TEMPVector' + '30'], _0x4ba8a2['TEMPVector' + '30']), _0x127595['elements'][0x0] = Math['asin'](_0x4ba8a2['TEMPVector' + '30']['y']), _0x127595['elements'][0x1] = _0x4ba8a2['arcTanAngl' + 'e'](-_0x4ba8a2['TEMPVector' + '30']['z'], -_0x4ba8a2['TEMPVector' + '30']['x']);
        }
        static ['createFrom' + 'AxisAngle'](_0x3fe52b, _0x2e30ea, _0x58cd6a) {
            var _0x46f0f8 = _0x58cd6a['elements'], _0x38f3e9 = _0x3fe52b['elements'];
            _0x2e30ea *= 0.5;
            var _0x4e9626 = Math['sin'](_0x2e30ea);
            _0x46f0f8[0x0] = _0x4e9626 * _0x38f3e9[0x0], _0x46f0f8[0x1] = _0x4e9626 * _0x38f3e9[0x1], _0x46f0f8[0x2] = _0x4e9626 * _0x38f3e9[0x2], _0x46f0f8[0x3] = Math['cos'](_0x2e30ea);
        }
        static ['createFrom' + 'Matrix3x3'](_0x56b8f0, _0x3d9f6f) {
            var _0x11d7f9, _0x5d1591 = _0x3d9f6f['elements'], _0x42ba93 = _0x56b8f0['elements'], _0x44aaa9 = _0x42ba93[0x0] + _0x42ba93[0x4] + _0x42ba93[0x8];
            if (_0x44aaa9 > 0x0)
                _0x11d7f9 = Math['sqrt'](_0x44aaa9 + 0x1), _0x5d1591[0x3] = 0.5 * _0x11d7f9, _0x11d7f9 = 0.5 / _0x11d7f9, _0x5d1591[0x0] = (_0x42ba93[0x5] - _0x42ba93[0x7]) * _0x11d7f9, _0x5d1591[0x1] = (_0x42ba93[0x6] - _0x42ba93[0x2]) * _0x11d7f9, _0x5d1591[0x2] = (_0x42ba93[0x1] - _0x42ba93[0x3]) * _0x11d7f9;
            else {
                var _0x1c0ecf = 0x0;
                _0x42ba93[0x4] > _0x42ba93[0x0] && (_0x1c0ecf = 0x1), _0x42ba93[0x8] > _0x42ba93[0x3 * _0x1c0ecf + _0x1c0ecf] && (_0x1c0ecf = 0x2);
                var _0x30ca38 = (_0x1c0ecf + 0x1) % 0x3, _0x3e90f2 = (_0x1c0ecf + 0x2) % 0x3;
                _0x11d7f9 = Math['sqrt'](_0x42ba93[0x3 * _0x1c0ecf + _0x1c0ecf] - _0x42ba93[0x3 * _0x30ca38 + _0x30ca38] - _0x42ba93[0x3 * _0x3e90f2 + _0x3e90f2] + 0x1), _0x5d1591[_0x1c0ecf] = 0.5 * _0x11d7f9, _0x11d7f9 = 0.5 / _0x11d7f9, _0x5d1591[0x3] = (_0x42ba93[0x3 * _0x30ca38 + _0x3e90f2] - _0x42ba93[0x3 * _0x3e90f2 + _0x30ca38]) * _0x11d7f9, _0x5d1591[_0x30ca38] = (_0x42ba93[0x3 * _0x30ca38 + _0x1c0ecf] + _0x42ba93[0x3 * _0x1c0ecf + _0x30ca38]) * _0x11d7f9, _0x5d1591[_0x3e90f2] = (_0x42ba93[0x3 * _0x3e90f2 + _0x1c0ecf] + _0x42ba93[0x3 * _0x1c0ecf + _0x3e90f2]) * _0x11d7f9;
            }
        }
        static ['createFrom' + 'Matrix4x4'](_0x3bb3db, _0x4c1cc9) {
            var _0x9b2eef, _0x2c5f24, _0x3083b9 = _0x3bb3db['elements'], _0x4694e1 = _0x4c1cc9['elements'], _0x45b1bd = _0x3083b9[0x0] + _0x3083b9[0x5] + _0x3083b9[0xa];
            _0x45b1bd > 0x0 ? (_0x9b2eef = Math['sqrt'](_0x45b1bd + 0x1), _0x4694e1[0x3] = 0.5 * _0x9b2eef, _0x9b2eef = 0.5 / _0x9b2eef, _0x4694e1[0x0] = (_0x3083b9[0x6] - _0x3083b9[0x9]) * _0x9b2eef, _0x4694e1[0x1] = (_0x3083b9[0x8] - _0x3083b9[0x2]) * _0x9b2eef, _0x4694e1[0x2] = (_0x3083b9[0x1] - _0x3083b9[0x4]) * _0x9b2eef) : _0x3083b9[0x0] >= _0x3083b9[0x5] && _0x3083b9[0x0] >= _0x3083b9[0xa] ? (_0x2c5f24 = 0.5 / (_0x9b2eef = Math['sqrt'](0x1 + _0x3083b9[0x0] - _0x3083b9[0x5] - _0x3083b9[0xa])), _0x4694e1[0x0] = 0.5 * _0x9b2eef, _0x4694e1[0x1] = (_0x3083b9[0x1] + _0x3083b9[0x4]) * _0x2c5f24, _0x4694e1[0x2] = (_0x3083b9[0x2] + _0x3083b9[0x8]) * _0x2c5f24, _0x4694e1[0x3] = (_0x3083b9[0x6] - _0x3083b9[0x9]) * _0x2c5f24) : _0x3083b9[0x5] > _0x3083b9[0xa] ? (_0x2c5f24 = 0.5 / (_0x9b2eef = Math['sqrt'](0x1 + _0x3083b9[0x5] - _0x3083b9[0x0] - _0x3083b9[0xa])), _0x4694e1[0x0] = (_0x3083b9[0x4] + _0x3083b9[0x1]) * _0x2c5f24, _0x4694e1[0x1] = 0.5 * _0x9b2eef, _0x4694e1[0x2] = (_0x3083b9[0x9] + _0x3083b9[0x6]) * _0x2c5f24, _0x4694e1[0x3] = (_0x3083b9[0x8] - _0x3083b9[0x2]) * _0x2c5f24) : (_0x2c5f24 = 0.5 / (_0x9b2eef = Math['sqrt'](0x1 + _0x3083b9[0xa] - _0x3083b9[0x0] - _0x3083b9[0x5])), _0x4694e1[0x0] = (_0x3083b9[0x8] + _0x3083b9[0x2]) * _0x2c5f24, _0x4694e1[0x1] = (_0x3083b9[0x9] + _0x3083b9[0x6]) * _0x2c5f24, _0x4694e1[0x2] = 0.5 * _0x9b2eef, _0x4694e1[0x3] = (_0x3083b9[0x1] - _0x3083b9[0x4]) * _0x2c5f24);
        }
        static ['slerp'](_0x574fbb, _0x31a8c7, _0x56f30f, _0x344ea7) {
            var _0x2013ae, _0x4e713f, _0x3838fd, _0x133cc0, _0x11a56c, _0x4db22f = _0x574fbb['elements'], _0x48d16e = _0x31a8c7['elements'], _0x47c557 = _0x344ea7['elements'], _0x1b2b4d = _0x4db22f[0x0], _0x4afd40 = _0x4db22f[0x1], _0x12f8bb = _0x4db22f[0x2], _0x2c0735 = _0x4db22f[0x3], _0x40f9ab = _0x48d16e[0x0], _0x40136a = _0x48d16e[0x1], _0x4c0900 = _0x48d16e[0x2], _0x1b3148 = _0x48d16e[0x3];
            return (_0x4e713f = _0x1b2b4d * _0x40f9ab + _0x4afd40 * _0x40136a + _0x12f8bb * _0x4c0900 + _0x2c0735 * _0x1b3148) < 0x0 && (_0x4e713f = -_0x4e713f, _0x40f9ab = -_0x40f9ab, _0x40136a = -_0x40136a, _0x4c0900 = -_0x4c0900, _0x1b3148 = -_0x1b3148), 0x1 - _0x4e713f > 0.000001 ? (_0x2013ae = Math['acos'](_0x4e713f), _0x3838fd = Math['sin'](_0x2013ae), _0x133cc0 = Math['sin']((0x1 - _0x56f30f) * _0x2013ae) / _0x3838fd, _0x11a56c = Math['sin'](_0x56f30f * _0x2013ae) / _0x3838fd) : (_0x133cc0 = 0x1 - _0x56f30f, _0x11a56c = _0x56f30f), _0x47c557[0x0] = _0x133cc0 * _0x1b2b4d + _0x11a56c * _0x40f9ab, _0x47c557[0x1] = _0x133cc0 * _0x4afd40 + _0x11a56c * _0x40136a, _0x47c557[0x2] = _0x133cc0 * _0x12f8bb + _0x11a56c * _0x4c0900, _0x47c557[0x3] = _0x133cc0 * _0x2c0735 + _0x11a56c * _0x1b3148, _0x47c557;
        }
        static ['lerp'](_0x2c66d9, _0x1014db, _0x16c02f, _0x1d2651) {
            _0x4ba8a2['_lerpArray'](_0x2c66d9['elements'], _0x1014db['elements'], _0x16c02f, _0x1d2651['elements']);
        }
        static ['add'](_0x475193, _0x2f9a32, _0x515b55) {
            var _0x37715e = _0x515b55['elements'], _0x20b12f = _0x475193['elements'], _0x40fe62 = _0x2f9a32['elements'];
            _0x37715e[0x0] = _0x20b12f[0x0] + _0x40fe62[0x0], _0x37715e[0x1] = _0x20b12f[0x1] + _0x40fe62[0x1], _0x37715e[0x2] = _0x20b12f[0x2] + _0x40fe62[0x2], _0x37715e[0x3] = _0x20b12f[0x3] + _0x40fe62[0x3];
        }
        static ['dot'](_0x4642f5, _0x5829a5) {
            return _0x4ba8a2['_dotArray'](_0x4642f5['elements'], _0x5829a5['elements']);
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x188696) {
            this['elements'][0x0] = _0x188696;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x2683c6) {
            this['elements'][0x1] = _0x2683c6;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x2c2ecb) {
            this['elements'][0x2] = _0x2c2ecb;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x5bae90) {
            this['elements'][0x3] = _0x5bae90;
        }
        ['scaling'](_0x4e6d43, _0x1c6e3c) {
            var _0x8230f3 = _0x1c6e3c['elements'], _0x3e2b4b = this['elements'];
            _0x8230f3[0x0] = _0x3e2b4b[0x0] * _0x4e6d43, _0x8230f3[0x1] = _0x3e2b4b[0x1] * _0x4e6d43, _0x8230f3[0x2] = _0x3e2b4b[0x2] * _0x4e6d43, _0x8230f3[0x3] = _0x3e2b4b[0x3] * _0x4e6d43;
        }
        ['normalize'](_0xe25edd) {
            _0x4ba8a2['_normalize' + 'Array'](this['elements'], _0xe25edd['elements']);
        }
        ['length']() {
            var _0x4c44d3 = this['elements'], _0x3f7ab3 = _0x4c44d3[0x0], _0x25a397 = _0x4c44d3[0x1], _0x4b3bd2 = _0x4c44d3[0x2], _0x2275c4 = _0x4c44d3[0x3];
            return Math['sqrt'](_0x3f7ab3 * _0x3f7ab3 + _0x25a397 * _0x25a397 + _0x4b3bd2 * _0x4b3bd2 + _0x2275c4 * _0x2275c4);
        }
        ['rotateX'](_0x5d246b, _0x5e1866) {
            var _0x1f223b = _0x5e1866['elements'], _0x99118f = this['elements'];
            _0x5d246b *= 0.5;
            var _0x33718f = _0x99118f[0x0], _0x36786f = _0x99118f[0x1], _0x2529e8 = _0x99118f[0x2], _0x2e7b51 = _0x99118f[0x3], _0x723f56 = Math['sin'](_0x5d246b), _0x470d62 = Math['cos'](_0x5d246b);
            _0x1f223b[0x0] = _0x33718f * _0x470d62 + _0x2e7b51 * _0x723f56, _0x1f223b[0x1] = _0x36786f * _0x470d62 + _0x2529e8 * _0x723f56, _0x1f223b[0x2] = _0x2529e8 * _0x470d62 - _0x36786f * _0x723f56, _0x1f223b[0x3] = _0x2e7b51 * _0x470d62 - _0x33718f * _0x723f56;
        }
        ['rotateY'](_0x1a4e36, _0x58da9a) {
            var _0x1feb50 = _0x58da9a['elements'], _0x2ef432 = this['elements'];
            _0x1a4e36 *= 0.5;
            var _0x3ec384 = _0x2ef432[0x0], _0x17b27b = _0x2ef432[0x1], _0xccb9c3 = _0x2ef432[0x2], _0x4a7b92 = _0x2ef432[0x3], _0x2e6cf0 = Math['sin'](_0x1a4e36), _0x44bf4e = Math['cos'](_0x1a4e36);
            _0x1feb50[0x0] = _0x3ec384 * _0x44bf4e - _0xccb9c3 * _0x2e6cf0, _0x1feb50[0x1] = _0x17b27b * _0x44bf4e + _0x4a7b92 * _0x2e6cf0, _0x1feb50[0x2] = _0xccb9c3 * _0x44bf4e + _0x3ec384 * _0x2e6cf0, _0x1feb50[0x3] = _0x4a7b92 * _0x44bf4e - _0x17b27b * _0x2e6cf0;
        }
        ['rotateZ'](_0x3511bf, _0x4a116d) {
            var _0xcb7970 = _0x4a116d['elements'], _0x1929d1 = this['elements'];
            _0x3511bf *= 0.5;
            var _0x546fd6 = _0x1929d1[0x0], _0x23091d = _0x1929d1[0x1], _0x5614ce = _0x1929d1[0x2], _0x252859 = _0x1929d1[0x3], _0x2bf26f = Math['sin'](_0x3511bf), _0x4cb156 = Math['cos'](_0x3511bf);
            _0xcb7970[0x0] = _0x546fd6 * _0x4cb156 + _0x23091d * _0x2bf26f, _0xcb7970[0x1] = _0x23091d * _0x4cb156 - _0x546fd6 * _0x2bf26f, _0xcb7970[0x2] = _0x5614ce * _0x4cb156 + _0x252859 * _0x2bf26f, _0xcb7970[0x3] = _0x252859 * _0x4cb156 - _0x5614ce * _0x2bf26f;
        }
        ['getYawPitc' + 'hRoll'](_0x441271) {
            _0x37e840['transformQ' + 'uat'](_0x37e840['ForwardRH'], this, _0x4ba8a2['TEMPVector' + '31']), _0x37e840['transformQ' + 'uat'](_0x37e840['Up'], this, _0x4ba8a2['TEMPVector' + '32']);
            var _0x3db29a = _0x4ba8a2['TEMPVector' + '32']['elements'];
            _0x4ba8a2['angleTo'](_0x37e840['ZERO'], _0x4ba8a2['TEMPVector' + '31'], _0x4ba8a2['TEMPVector' + '33']);
            var _0x402a4e = _0x4ba8a2['TEMPVector' + '33']['elements'];
            _0x402a4e[0x0] == Math['PI'] / 0x2 ? (_0x402a4e[0x1] = _0x4ba8a2['arcTanAngl' + 'e'](_0x3db29a[0x2], _0x3db29a[0x0]), _0x402a4e[0x2] = 0x0) : _0x402a4e[0x0] == -Math['PI'] / 0x2 ? (_0x402a4e[0x1] = _0x4ba8a2['arcTanAngl' + 'e'](-_0x3db29a[0x2], -_0x3db29a[0x0]), _0x402a4e[0x2] = 0x0) : (_0x334e9d['createRota' + 'tionY'](-_0x402a4e[0x1], _0x4ba8a2['TEMPMatrix' + '0']), _0x334e9d['createRota' + 'tionX'](-_0x402a4e[0x0], _0x4ba8a2['TEMPMatrix' + '1']), _0x37e840['transformC' + 'oordinate'](_0x4ba8a2['TEMPVector' + '32'], _0x4ba8a2['TEMPMatrix' + '0'], _0x4ba8a2['TEMPVector' + '32']), _0x37e840['transformC' + 'oordinate'](_0x4ba8a2['TEMPVector' + '32'], _0x4ba8a2['TEMPMatrix' + '1'], _0x4ba8a2['TEMPVector' + '32']), _0x402a4e[0x2] = _0x4ba8a2['arcTanAngl' + 'e'](_0x3db29a[0x1], -_0x3db29a[0x0])), _0x402a4e[0x1] <= -Math['PI'] && (_0x402a4e[0x1] = Math['PI']), _0x402a4e[0x2] <= -Math['PI'] && (_0x402a4e[0x2] = Math['PI']), _0x402a4e[0x1] >= Math['PI'] && _0x402a4e[0x2] >= Math['PI'] && (_0x402a4e[0x1] = 0x0, _0x402a4e[0x2] = 0x0, _0x402a4e[0x0] = Math['PI'] - _0x402a4e[0x0]);
            var _0x463e81 = _0x441271['elements'];
            _0x463e81[0x0] = _0x402a4e[0x1], _0x463e81[0x1] = _0x402a4e[0x0], _0x463e81[0x2] = _0x402a4e[0x2];
        }
        ['invert'](_0x139698) {
            var _0x1e142a = _0x139698['elements'], _0x4148ec = this['elements'], _0x5a7138 = _0x4148ec[0x0], _0x1b30ff = _0x4148ec[0x1], _0xf1020f = _0x4148ec[0x2], _0x65bb0e = _0x4148ec[0x3], _0x272dfa = _0x5a7138 * _0x5a7138 + _0x1b30ff * _0x1b30ff + _0xf1020f * _0xf1020f + _0x65bb0e * _0x65bb0e, _0x3997f3 = _0x272dfa ? 0x1 / _0x272dfa : 0x0;
            _0x1e142a[0x0] = -_0x5a7138 * _0x3997f3, _0x1e142a[0x1] = -_0x1b30ff * _0x3997f3, _0x1e142a[0x2] = -_0xf1020f * _0x3997f3, _0x1e142a[0x3] = _0x65bb0e * _0x3997f3;
        }
        ['identity']() {
            var _0x3e0713 = this['elements'];
            _0x3e0713[0x0] = 0x0, _0x3e0713[0x1] = 0x0, _0x3e0713[0x2] = 0x0, _0x3e0713[0x3] = 0x1;
        }
        ['fromArray'](_0x3a49d2, _0x3a52da = 0x0) {
            this['elements'][0x0] = _0x3a49d2[_0x3a52da + 0x0], this['elements'][0x1] = _0x3a49d2[_0x3a52da + 0x1], this['elements'][0x2] = _0x3a49d2[_0x3a52da + 0x2], this['elements'][0x3] = _0x3a49d2[_0x3a52da + 0x3];
        }
        ['cloneTo'](_0x48c978) {
            var _0x20ced1, _0x4a97e5, _0x105f3f;
            if ((_0x4a97e5 = this['elements']) !== (_0x105f3f = _0x48c978['elements'])) {
                for (_0x20ced1 = 0x0; _0x20ced1 < 0x4; ++_0x20ced1)
                    _0x105f3f[_0x20ced1] = _0x4a97e5[_0x20ced1];
            }
        }
        ['clone']() {
            var _0x34d0c2 = new _0x4ba8a2();
            return this['cloneTo'](_0x34d0c2), _0x34d0c2;
        }
        ['equals'](_0x31c16e) {
            var _0x2d752e = this['elements'], _0x3d1a1a = _0x31c16e['elements'];
            return _0x40af95['nearEqual'](_0x2d752e[0x0], _0x3d1a1a[0x0]) && _0x40af95['nearEqual'](_0x2d752e[0x1], _0x3d1a1a[0x1]) && _0x40af95['nearEqual'](_0x2d752e[0x2], _0x3d1a1a[0x2]) && _0x40af95['nearEqual'](_0x2d752e[0x3], _0x3d1a1a[0x3]);
        }
        static ['rotationLo' + 'okAt'](_0xa36b40, _0x1dd343, _0x549205) {
            _0x4ba8a2['lookAt'](_0x37e840['ZERO'], _0xa36b40, _0x1dd343, _0x549205);
        }
        static ['lookAt'](_0x3883d3, _0x5f11b9, _0x25d456, _0x4415f6) {
            _0x348b09['lookAt'](_0x3883d3, _0x5f11b9, _0x25d456, _0x4ba8a2['_tempMatri' + 'x3x3']), _0x4ba8a2['rotationMa' + 'trix'](_0x4ba8a2['_tempMatri' + 'x3x3'], _0x4415f6);
        }
        ['lengthSqua' + 'red']() {
            var _0x97465b = this['elements'][0x0], _0x47368c = this['elements'][0x1], _0x23f217 = this['elements'][0x2], _0x2e17a3 = this['elements'][0x3];
            return _0x97465b * _0x97465b + _0x47368c * _0x47368c + _0x23f217 * _0x23f217 + _0x2e17a3 * _0x2e17a3;
        }
        static ['invert'](_0x5e8839, _0x17eaae) {
            var _0x35448c = _0x5e8839['elements'], _0x35c65e = _0x17eaae['elements'], _0x590f6d = _0x5e8839['lengthSqua' + 'red']();
            _0x40af95['isZero'](_0x590f6d) || (_0x590f6d = 0x1 / _0x590f6d, _0x35c65e[0x0] = -_0x35448c[0x0] * _0x590f6d, _0x35c65e[0x1] = -_0x35448c[0x1] * _0x590f6d, _0x35c65e[0x2] = -_0x35448c[0x2] * _0x590f6d, _0x35c65e[0x3] = _0x35448c[0x3] * _0x590f6d);
        }
        static ['rotationMa' + 'trix'](_0x1a0914, _0x359272) {
            var _0x4c8bdc, _0xeb827, _0x2d24c6 = _0x1a0914['elements'], _0x2fb11d = _0x2d24c6[0x0], _0x1670dd = _0x2d24c6[0x1], _0xb8e78f = _0x2d24c6[0x2], _0x4cc243 = _0x2d24c6[0x3], _0x4a0c82 = _0x2d24c6[0x4], _0xf64f31 = _0x2d24c6[0x5], _0x287d9b = _0x2d24c6[0x6], _0x142648 = _0x2d24c6[0x7], _0xac02c4 = _0x2d24c6[0x8], _0x339140 = _0x359272['elements'], _0x4f7eed = _0x2fb11d + _0x4a0c82 + _0xac02c4;
            _0x4f7eed > 0x0 ? (_0x4c8bdc = Math['sqrt'](_0x4f7eed + 0x1), _0x339140[0x3] = 0.5 * _0x4c8bdc, _0x4c8bdc = 0.5 / _0x4c8bdc, _0x339140[0x0] = (_0xf64f31 - _0x142648) * _0x4c8bdc, _0x339140[0x1] = (_0x287d9b - _0xb8e78f) * _0x4c8bdc, _0x339140[0x2] = (_0x1670dd - _0x4cc243) * _0x4c8bdc) : _0x2fb11d >= _0x4a0c82 && _0x2fb11d >= _0xac02c4 ? (_0xeb827 = 0.5 / (_0x4c8bdc = Math['sqrt'](0x1 + _0x2fb11d - _0x4a0c82 - _0xac02c4)), _0x339140[0x0] = 0.5 * _0x4c8bdc, _0x339140[0x1] = (_0x1670dd + _0x4cc243) * _0xeb827, _0x339140[0x2] = (_0xb8e78f + _0x287d9b) * _0xeb827, _0x339140[0x3] = (_0xf64f31 - _0x142648) * _0xeb827) : _0x4a0c82 > _0xac02c4 ? (_0xeb827 = 0.5 / (_0x4c8bdc = Math['sqrt'](0x1 + _0x4a0c82 - _0x2fb11d - _0xac02c4)), _0x339140[0x0] = (_0x4cc243 + _0x1670dd) * _0xeb827, _0x339140[0x1] = 0.5 * _0x4c8bdc, _0x339140[0x2] = (_0x142648 + _0xf64f31) * _0xeb827, _0x339140[0x3] = (_0x287d9b - _0xb8e78f) * _0xeb827) : (_0xeb827 = 0.5 / (_0x4c8bdc = Math['sqrt'](0x1 + _0xac02c4 - _0x2fb11d - _0x4a0c82)), _0x339140[0x0] = (_0x287d9b + _0xb8e78f) * _0xeb827, _0x339140[0x1] = (_0x142648 + _0xf64f31) * _0xeb827, _0x339140[0x2] = 0.5 * _0x4c8bdc, _0x339140[0x3] = (_0x1670dd - _0x4cc243) * _0xeb827);
        }
    }
    _0x4ba8a2['TEMPVector' + '30'] = new _0x37e840(), _0x4ba8a2['TEMPVector' + '31'] = new _0x37e840(), _0x4ba8a2['TEMPVector' + '32'] = new _0x37e840(), _0x4ba8a2['TEMPVector' + '33'] = new _0x37e840(), _0x4ba8a2['TEMPMatrix' + '0'] = new _0x334e9d(), _0x4ba8a2['TEMPMatrix' + '1'] = new _0x334e9d(), _0x4ba8a2['_tempMatri' + 'x3x3'] = new _0x348b09(), _0x4ba8a2['DEFAULT'] = new _0x4ba8a2(), _0x4ba8a2['NAN'] = new _0x4ba8a2(NaN, NaN, NaN, NaN);
    class _0x18fb75 {
        constructor() {
            this['_reference' + 'Count'] = 0x0, this['_clip'] = null, this['_nodeOwner' + 's'] = [], this['_currentFr' + 'ameIndices'] = null, this['_realtimeD' + 'atas'] = [], this['_scripts'] = null, this['speed'] = 0x1, this['clipStart'] = 0x0, this['clipEnd'] = 0x1;
        }
        get ['clip']() {
            return this['_clip'];
        }
        set ['clip'](_0x4ff335) {
            if (this['_clip'] !== _0x4ff335) {
                if (this['_clip'] && this['_reference' + 'Count'] > 0x0 && this['_clip']['_removeRef' + 'erence'](this['_reference' + 'Count']), _0x4ff335) {
                    var _0x4d3388 = this['_realtimeD' + 'atas'], _0x9446ce = _0x4ff335['_nodes'], _0x447cf1 = _0x9446ce['count'];
                    this['_currentFr' + 'ameIndices'] = new Int16Array(_0x447cf1), this['_resetFram' + 'eIndices'](), this['_reference' + 'Count'] > 0x0 && _0x4ff335['_addRefere' + 'nce'](this['_reference' + 'Count']), this['_realtimeD' + 'atas']['length'] = _0x447cf1;
                    for (var _0x428bbc = 0x0; _0x428bbc < _0x447cf1; _0x428bbc++)
                        switch (_0x9446ce['getNodeByI' + 'ndex'](_0x428bbc)['type']) {
                        case 0x0:
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x4d3388[_0x428bbc] = _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? new _0x37e840() : new _0x43b358();
                            break;
                        case 0x2:
                            _0x4d3388[_0x428bbc] = _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? new _0x4ba8a2() : new _0x7cf2d3();
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                }
                this['_clip'] = _0x4ff335;
            }
        }
        ['_getRefere' + 'nceCount']() {
            return this['_reference' + 'Count'];
        }
        ['_addRefere' + 'nce'](_0x363ff7 = 0x1) {
            this['_clip'] && this['_clip']['_addRefere' + 'nce'](_0x363ff7), this['_reference' + 'Count'] += _0x363ff7;
        }
        ['_removeRef' + 'erence'](_0x28095b = 0x1) {
            this['_clip'] && this['_clip']['_removeRef' + 'erence'](_0x28095b), this['_reference' + 'Count'] -= _0x28095b;
        }
        ['_clearRefe' + 'rence']() {
            this['_removeRef' + 'erence'](-this['_reference' + 'Count']);
        }
        ['_resetFram' + 'eIndices']() {
            for (var _0x84fe34 = 0x0, _0x342939 = this['_currentFr' + 'ameIndices']['length']; _0x84fe34 < _0x342939; _0x84fe34++)
                this['_currentFr' + 'ameIndices'][_0x84fe34] = -0x1;
        }
        ['addScript'](_0x4286ba) {
            var _0x562f30 = new _0x4286ba();
            return this['_scripts'] = this['_scripts'] || [], this['_scripts']['push'](_0x562f30), _0x562f30;
        }
        ['getScript'](_0x2387da) {
            if (this['_scripts'])
                for (var _0x4ccb16 = 0x0, _0x470e7d = this['_scripts']['length']; _0x4ccb16 < _0x470e7d; _0x4ccb16++) {
                    var _0x4200bd = this['_scripts'][_0x4ccb16];
                    if (_0x4200bd instanceof _0x2387da)
                        return _0x4200bd;
                }
            return null;
        }
        ['getScripts'](_0x2b7040) {
            var _0x52b363;
            if (this['_scripts'])
                for (var _0x3a0dd8 = 0x0, _0x31bd47 = this['_scripts']['length']; _0x3a0dd8 < _0x31bd47; _0x3a0dd8++) {
                    var _0x1623fc = this['_scripts'][_0x3a0dd8];
                    _0x1623fc instanceof _0x2b7040 && (_0x52b363 = _0x52b363 || [])['push'](_0x1623fc);
                }
            return _0x52b363;
        }
        ['cloneTo'](_0x1f7d83) {
            var _0x594014 = _0x1f7d83;
            _0x594014['name'] = this['name'], _0x594014['speed'] = this['speed'], _0x594014['clipStart'] = this['clipStart'], _0x594014['clipEnd'] = this['clipEnd'], _0x594014['clip'] = this['_clip'];
        }
        ['clone']() {
            var _0x18a08f = new _0x18fb75();
            return this['cloneTo'](_0x18a08f), _0x18a08f;
        }
    }
    class _0x508071 {
        constructor() {
            this['indexInLis' + 't'] = -0x1, this['referenceC' + 'ount'] = 0x0, this['updateMark'] = -0x1, this['type'] = -0x1, this['fullPath'] = null, this['propertyOw' + 'ner'] = null, this['property'] = null, this['defaultVal' + 'ue'] = null, this['value'] = null, this['crossFixed' + 'Value'] = null;
        }
        ['saveCrossF' + 'ixedValue']() {
            if (this['propertyOw' + 'ner'])
                switch (this['type']) {
                case 0x0:
                    this['crossFixed' + 'Value'] = this['value'];
                    break;
                case 0x1:
                case 0x3:
                case 0x4:
                case 0x2:
                    this['value']['cloneTo'](this['crossFixed' + 'Value']);
                    break;
                default:
                    throw 'Animator:u' + 'nknown\x20typ' + 'e.';
                }
        }
    }
    class _0x4532ef extends _0x2247ad['Component'] {
        constructor() {
            super(), this['_keyframeN' + 'odeOwners'] = [], this['_linkAvata' + 'rSpritesDa' + 'ta'] = {}, this['_linkAvata' + 'rSprites'] = [], this['_renderabl' + 'eSprites'] = [], this['cullingMod' + 'e'] = _0x4532ef['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY'], this['_controlle' + 'rLayers'] = [], this['_linkSprit' + 'es'] = {}, this['_speed'] = 0x1, this['_keyframeN' + 'odeOwnerMa' + 'p'] = {}, this['_updateMar' + 'k'] = 0x0;
        }
        static ['_update'](_0x30dc98) {
            for (var _0x5d0077 = _0x30dc98['_animatorP' + 'ool'], _0x3b1f61 = _0x5d0077['elements'], _0x4b3654 = 0x0, _0x3c5d81 = _0x5d0077['length']; _0x4b3654 < _0x3c5d81; _0x4b3654++) {
                var _0x18af65 = _0x3b1f61[_0x4b3654];
                _0x18af65 && _0x18af65['enabled'] && _0x18af65['_update']();
            }
        }
        get ['speed']() {
            return this['_speed'];
        }
        set ['speed'](_0xc3041e) {
            this['_speed'] = _0xc3041e;
        }
        ['_linkToSpr' + 'ites'](_0x22546d) {
            for (var _0x5dd989 in _0x22546d) {
                for (var _0x4fce79 = this['owner'], _0x5efb89 = _0x22546d[_0x5dd989], _0xad20f1 = 0x0, _0x444a2a = _0x5efb89['length']; _0xad20f1 < _0x444a2a; _0xad20f1++) {
                    var _0x137b38 = _0x5efb89[_0xad20f1];
                    if ('' === _0x137b38)
                        break;
                    if (!(_0x4fce79 = _0x4fce79['getChildBy' + 'Name'](_0x137b38)))
                        break;
                }
                _0x4fce79 && this['linkSprite' + '3DToAvatar' + 'Node'](_0x5dd989, _0x4fce79);
            }
        }
        ['_addKeyfra' + 'meNodeOwne' + 'r'](_0x3af003, _0x50ac37, _0x4e6596) {
            var _0x50abed = _0x50ac37['_indexInLi' + 'st'], _0x2bce49 = _0x50ac37['fullPath'], _0x31fac7 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x2bce49];
            if (_0x31fac7)
                _0x31fac7['referenceC' + 'ount']++, _0x3af003[_0x50abed] = _0x31fac7;
            else {
                for (var _0x31a3a0 = _0x4e6596, _0x3643a7 = 0x0, _0x1d927b = _0x50ac37['propertyCo' + 'unt']; _0x3643a7 < _0x1d927b && (_0x31a3a0 = _0x31a3a0[_0x50ac37['getPropert' + 'yByIndex'](_0x3643a7)]); _0x3643a7++);
                (_0x31fac7 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x2bce49] = new _0x508071())['fullPath'] = _0x2bce49, _0x31fac7['indexInLis' + 't'] = this['_keyframeN' + 'odeOwners']['length'], _0x31fac7['referenceC' + 'ount'] = 0x1, _0x31fac7['propertyOw' + 'ner'] = _0x4e6596;
                var _0x5b2f2b = _0x50ac37['propertyCo' + 'unt'], _0x505eb3 = [];
                for (_0x3643a7 = 0x0; _0x3643a7 < _0x5b2f2b; _0x3643a7++)
                    _0x505eb3[_0x3643a7] = _0x50ac37['getPropert' + 'yByIndex'](_0x3643a7);
                if (_0x31fac7['property'] = _0x505eb3, _0x31fac7['type'] = _0x50ac37['type'], _0x31a3a0) {
                    if (0x0 === _0x50ac37['type'])
                        _0x31fac7['defaultVal' + 'ue'] = _0x31a3a0;
                    else {
                        var _0x4c672d = new _0x31a3a0['constructo' + 'r']();
                        _0x31a3a0['cloneTo'](_0x4c672d), _0x31fac7['defaultVal' + 'ue'] = _0x4c672d, _0x31fac7['value'] = new _0x31a3a0['constructo' + 'r'](), _0x31fac7['crossFixed' + 'Value'] = new _0x31a3a0['constructo' + 'r']();
                    }
                }
                this['_keyframeN' + 'odeOwners']['push'](_0x31fac7), _0x3af003[_0x50abed] = _0x31fac7;
            }
        }
        ['_removeKey' + 'frameNodeO' + 'wner'](_0xc3d950, _0x4d3b4a) {
            var _0x39b0cb = _0x4d3b4a['fullPath'], _0x3d59aa = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x39b0cb];
            _0x3d59aa && (_0x3d59aa['referenceC' + 'ount']--, 0x0 === _0x3d59aa['referenceC' + 'ount'] && (delete this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x39b0cb], this['_keyframeN' + 'odeOwners']['splice'](this['_keyframeN' + 'odeOwners']['indexOf'](_0x3d59aa), 0x1)), _0xc3d950[_0x4d3b4a['_indexInLi' + 'st']] = null);
        }
        ['_getOwners' + 'ByClip'](_0x2b527f) {
            var _0x2e59dc = _0x2b527f['_clip']['_nodes'], _0x148986 = _0x2e59dc['count'], _0x427eee = _0x2b527f['_nodeOwner' + 's'];
            _0x427eee['length'] = _0x148986;
            for (var _0x39a491 = 0x0; _0x39a491 < _0x148986; _0x39a491++) {
                for (var _0x14ddd8 = _0x2e59dc['getNodeByI' + 'ndex'](_0x39a491), _0x5e24e2 = this['_avatar'] ? this['_avatarNod' + 'eMap'][this['_avatar']['_rootNode']['name']] : this['owner'], _0x55beb5 = 0x0, _0x223ede = _0x14ddd8['ownerPathC' + 'ount']; _0x55beb5 < _0x223ede; _0x55beb5++) {
                    var _0x486745 = _0x14ddd8['getOwnerPa' + 'thByIndex'](_0x55beb5);
                    if ('' === _0x486745)
                        break;
                    if (!(_0x5e24e2 = _0x5e24e2['getChildBy' + 'Name'](_0x486745)))
                        break;
                }
                if (_0x5e24e2) {
                    var _0x4d61f8 = _0x14ddd8['propertyOw' + 'ner'];
                    _0x4d61f8 && (_0x5e24e2 = _0x5e24e2[_0x4d61f8]), _0x5e24e2 && this['_addKeyfra' + 'meNodeOwne' + 'r'](_0x427eee, _0x14ddd8, _0x5e24e2);
                }
            }
        }
        ['_updatePla' + 'yer'](_0x40a346, _0x17854c, _0x4a4ff8, _0x4f94af) {
            var _0x3351ec = _0x40a346['_clip']['_duration'] * (_0x40a346['clipEnd'] - _0x40a346['clipStart']), _0x344501 = _0x17854c['_elapsedTi' + 'me'], _0x5385a3 = _0x344501 + _0x4a4ff8;
            _0x17854c['_lastElaps' + 'edTime'] = _0x344501, _0x17854c['_elapsedTi' + 'me'] = _0x5385a3;
            var _0x23d874 = _0x5385a3 / _0x3351ec;
            _0x17854c['_normalize' + 'dTime'] = _0x23d874;
            var _0x535d1f = _0x23d874 % 0x1;
            _0x17854c['_normalize' + 'dPlayTime'] = _0x535d1f < 0x0 ? _0x535d1f + 0x1 : _0x535d1f, _0x17854c['_duration'] = _0x3351ec;
            var _0x474cc2 = _0x40a346['_scripts'];
            if (!_0x4f94af && _0x5385a3 >= _0x3351ec) {
                if (_0x17854c['_finish'] = !0x0, _0x17854c['_elapsedTi' + 'me'] = _0x3351ec, _0x17854c['_normalize' + 'dPlayTime'] = 0x1, _0x474cc2) {
                    for (var _0x1f34eb = 0x0, _0x4b112d = _0x474cc2['length']; _0x1f34eb < _0x4b112d; _0x1f34eb++)
                        _0x474cc2[_0x1f34eb]['onStateExi' + 't']();
                }
            } else {
                if (_0x474cc2) {
                    for (_0x1f34eb = 0x0, _0x4b112d = _0x474cc2['length']; _0x1f34eb < _0x4b112d; _0x1f34eb++)
                        _0x474cc2[_0x1f34eb]['onStateUpd' + 'ate']();
                }
            }
        }
        ['_eventScri' + 'pt'](_0x18768a, _0x44ef56, _0xd74ffa, _0x39f765, _0x5d0f03) {
            if (_0x5d0f03)
                for (var _0x53737e = _0x44ef56['length']; _0xd74ffa < _0x53737e; _0xd74ffa++) {
                    var _0x1ec6f0 = _0x44ef56[_0xd74ffa];
                    if (!(_0x1ec6f0['time'] <= _0x39f765))
                        break;
                    for (var _0x26bd12 = 0x0, _0x240291 = _0x18768a['length']; _0x26bd12 < _0x240291; _0x26bd12++) {
                        var _0x3ad126 = _0x18768a[_0x26bd12], _0xfdb2c3 = _0x3ad126[_0x1ec6f0['eventName']];
                        _0xfdb2c3 && _0xfdb2c3['apply'](_0x3ad126, _0x1ec6f0['params']);
                    }
                }
            else {
                for (; _0xd74ffa >= 0x0 && (_0x1ec6f0 = _0x44ef56[_0xd74ffa])['time'] >= _0x39f765; _0xd74ffa--)
                    for (_0x26bd12 = 0x0, _0x240291 = _0x18768a['length']; _0x26bd12 < _0x240291; _0x26bd12++)
                        (_0xfdb2c3 = (_0x3ad126 = _0x18768a[_0x26bd12])[_0x1ec6f0['eventName']]) && _0xfdb2c3['apply'](_0x3ad126, _0x1ec6f0['params']);
            }
            return _0xd74ffa;
        }
        ['_updateEve' + 'ntScript'](_0xc0317, _0x2e7f2c) {
            var _0x469ecf = this['owner']['_scripts'];
            if (_0x469ecf) {
                var _0x492f01 = _0xc0317['_clip'], _0x196f7e = _0x492f01['_animation' + 'Events'], _0x4bf323 = _0x492f01['_duration'], _0x4e5c36 = _0x2e7f2c['_elapsedTi' + 'me'], _0x1ecb69 = _0x4e5c36 % _0x4bf323, _0x414de5 = Math['abs'](Math['floor'](_0x4e5c36 / _0x4bf323) - Math['floor'](_0x2e7f2c['_lastElaps' + 'edTime'] / _0x4bf323)), _0x2e79ce = _0x2e7f2c['_elapsedTi' + 'me'] >= _0x2e7f2c['_lastElaps' + 'edTime'];
                if (_0x2e7f2c['_lastIsFro' + 'nt'] !== _0x2e79ce && (_0x2e79ce ? _0x2e7f2c['_playEvent' + 'Index']++ : _0x2e7f2c['_playEvent' + 'Index']--, _0x2e7f2c['_lastIsFro' + 'nt'] = _0x2e79ce), _0x2e79ce) {
                    _0x2e7f2c['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x469ecf, _0x196f7e, _0x2e7f2c['_playEvent' + 'Index'], _0x414de5 > 0x0 ? _0x4bf323 : _0x1ecb69, !0x0);
                    for (var _0x4ade8b = 0x0, _0x1ea4de = _0x414de5 - 0x1; _0x4ade8b < _0x1ea4de; _0x4ade8b++)
                        this['_eventScri' + 'pt'](_0x469ecf, _0x196f7e, 0x0, _0x4bf323, !0x0);
                    _0x414de5 > 0x0 && _0x1ecb69 > 0x0 && (_0x2e7f2c['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x469ecf, _0x196f7e, 0x0, _0x1ecb69, !0x0));
                } else {
                    _0x2e7f2c['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x469ecf, _0x196f7e, _0x2e7f2c['_playEvent' + 'Index'], _0x414de5 > 0x0 ? 0x0 : _0x1ecb69, !0x1);
                    var _0x3377f9 = _0x196f7e['length'] - 0x1;
                    for (_0x4ade8b = 0x0, _0x1ea4de = _0x414de5 - 0x1; _0x4ade8b < _0x1ea4de; _0x4ade8b++)
                        this['_eventScri' + 'pt'](_0x469ecf, _0x196f7e, _0x3377f9, 0x0, !0x1);
                    _0x414de5 > 0x0 && _0x1ecb69 > 0x0 && (_0x2e7f2c['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x469ecf, _0x196f7e, _0x3377f9, _0x1ecb69, !0x1));
                }
            }
        }
        ['_updateCli' + 'pDatas'](_0x30c9a6, _0x2de9f3, _0x45b20, _0xb8be67) {
            var _0xcf198a = _0x30c9a6['_clip'], _0x186bb5 = _0xcf198a['_duration'], _0x7a55e8 = _0x30c9a6['clipStart'] * _0x186bb5 + _0x45b20['_normalize' + 'dPlayTime'] * _0x45b20['_duration'], _0x46c12a = _0x30c9a6['_currentFr' + 'ameIndices'], _0x455bf9 = _0x45b20['_elapsedTi' + 'me'] > _0x45b20['_lastElaps' + 'edTime'];
            _0xcf198a['_evaluateC' + 'lipDatasRe' + 'alTime'](_0xcf198a['_nodes'], _0x7a55e8, _0x46c12a, _0x2de9f3, _0x455bf9, _0x30c9a6['_realtimeD' + 'atas']);
        }
        ['_applyFloa' + 't'](_0x13df93, _0x54e1ac, _0x4f4091, _0x1e6db2, _0x298fbc, _0x43fa76, _0x6d4fdd) {
            if (_0x4f4091['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x1e6db2)
                    _0x13df93[_0x54e1ac] += _0x298fbc * _0x6d4fdd;
                else {
                    var _0x1bc924 = _0x13df93[_0x54e1ac];
                    _0x13df93[_0x54e1ac] = _0x1bc924 + _0x298fbc * (_0x6d4fdd - _0x1bc924);
                }
            } else {
                if (_0x43fa76)
                    _0x13df93[_0x54e1ac] = _0x1e6db2 ? _0x4f4091['defaultVal' + 'ue'] + _0x6d4fdd : _0x6d4fdd;
                else {
                    if (_0x1e6db2)
                        _0x13df93[_0x54e1ac] = _0x4f4091['defaultVal' + 'ue'] + _0x298fbc * _0x6d4fdd;
                    else {
                        var _0x290c4b = _0x4f4091['defaultVal' + 'ue'];
                        _0x13df93[_0x54e1ac] = _0x290c4b + _0x298fbc * (_0x6d4fdd - _0x290c4b);
                    }
                }
            }
        }
        ['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x12493e, _0x325e6f, _0x3163d0, _0xc3acd8, _0x4bda6a, _0x5adde0) {
            if (_0x12493e['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x325e6f)
                    _0x5adde0['x'] += _0x3163d0 * _0x4bda6a['x'], _0x5adde0['y'] += _0x3163d0 * _0x4bda6a['y'], _0x5adde0['z'] += _0x3163d0 * _0x4bda6a['z'];
                else {
                    var _0x38e586 = _0x5adde0['x'], _0x3e38a7 = _0x5adde0['y'], _0x40a4e4 = _0x5adde0['z'];
                    _0x5adde0['x'] = _0x38e586 + _0x3163d0 * (_0x4bda6a['x'] - _0x38e586), _0x5adde0['y'] = _0x3e38a7 + _0x3163d0 * (_0x4bda6a['y'] - _0x3e38a7), _0x5adde0['z'] = _0x40a4e4 + _0x3163d0 * (_0x4bda6a['z'] - _0x40a4e4);
                }
            } else {
                if (_0xc3acd8) {
                    if (_0x325e6f) {
                        var _0x282ccd = _0x12493e['defaultVal' + 'ue'];
                        _0x5adde0['x'] = _0x282ccd['x'] + _0x4bda6a['x'], _0x5adde0['y'] = _0x282ccd['y'] + _0x4bda6a['y'], _0x5adde0['z'] = _0x282ccd['z'] + _0x4bda6a['z'];
                    } else
                        _0x5adde0['x'] = _0x4bda6a['x'], _0x5adde0['y'] = _0x4bda6a['y'], _0x5adde0['z'] = _0x4bda6a['z'];
                } else {
                    if (_0x282ccd = _0x12493e['defaultVal' + 'ue'], _0x325e6f)
                        _0x5adde0['x'] = _0x282ccd['x'] + _0x3163d0 * _0x4bda6a['x'], _0x5adde0['y'] = _0x282ccd['y'] + _0x3163d0 * _0x4bda6a['y'], _0x5adde0['z'] = _0x282ccd['z'] + _0x3163d0 * _0x4bda6a['z'];
                    else {
                        var _0x4bd677 = _0x282ccd['x'], _0xafdf1a = _0x282ccd['y'], _0x49128a = _0x282ccd['z'];
                        _0x5adde0['x'] = _0x4bd677 + _0x3163d0 * (_0x4bda6a['x'] - _0x4bd677), _0x5adde0['y'] = _0xafdf1a + _0x3163d0 * (_0x4bda6a['y'] - _0xafdf1a), _0x5adde0['z'] = _0x49128a + _0x3163d0 * (_0x4bda6a['z'] - _0x49128a);
                    }
                }
            }
        }
        ['_applyRota' + 'tion'](_0x2a1c0b, _0x4706b9, _0x4312b3, _0x24c1ba, _0x554a0b, _0x599df0) {
            if (_0x2a1c0b['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x4706b9) {
                    var _0x34701b = _0x4532ef['_tempQuate' + 'rnion1'];
                    _0x101904['quaternion' + 'Weight'](_0x554a0b, _0x4312b3, _0x34701b), _0x34701b['normalize'](_0x34701b), _0x7cf2d3['multiply'](_0x599df0, _0x34701b, _0x599df0);
                } else
                    _0x7cf2d3['lerp'](_0x599df0, _0x554a0b, _0x4312b3, _0x599df0);
            } else {
                if (_0x24c1ba) {
                    if (_0x4706b9) {
                        var _0x48af57 = _0x2a1c0b['defaultVal' + 'ue'];
                        _0x7cf2d3['multiply'](_0x48af57, _0x554a0b, _0x599df0);
                    } else
                        _0x599df0['x'] = _0x554a0b['x'], _0x599df0['y'] = _0x554a0b['y'], _0x599df0['z'] = _0x554a0b['z'], _0x599df0['w'] = _0x554a0b['w'];
                } else
                    _0x48af57 = _0x2a1c0b['defaultVal' + 'ue'], _0x4706b9 ? (_0x34701b = _0x4532ef['_tempQuate' + 'rnion1'], _0x101904['quaternion' + 'Weight'](_0x554a0b, _0x4312b3, _0x34701b), _0x34701b['normalize'](_0x34701b), _0x7cf2d3['multiply'](_0x48af57, _0x34701b, _0x599df0)) : _0x7cf2d3['lerp'](_0x48af57, _0x554a0b, _0x4312b3, _0x599df0);
            }
        }
        ['_applyScal' + 'e'](_0x57c292, _0x597414, _0x433d51, _0x67eed6, _0x1ed230, _0x47eaa1) {
            if (_0x57c292['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x597414) {
                    var _0x29674d = _0x4532ef['_tempVecto' + 'r31'];
                    _0x101904['scaleWeigh' + 't'](_0x1ed230, _0x433d51, _0x29674d), _0x47eaa1['x'] = _0x47eaa1['x'] * _0x29674d['x'], _0x47eaa1['y'] = _0x47eaa1['y'] * _0x29674d['y'], _0x47eaa1['z'] = _0x47eaa1['z'] * _0x29674d['z'];
                } else
                    _0x101904['scaleBlend'](_0x47eaa1, _0x1ed230, _0x433d51, _0x47eaa1);
            } else {
                if (_0x67eed6) {
                    if (_0x597414) {
                        var _0x199dd0 = _0x57c292['defaultVal' + 'ue'];
                        _0x47eaa1['x'] = _0x199dd0['x'] * _0x1ed230['x'], _0x47eaa1['y'] = _0x199dd0['y'] * _0x1ed230['y'], _0x47eaa1['z'] = _0x199dd0['z'] * _0x1ed230['z'];
                    } else
                        _0x47eaa1['x'] = _0x1ed230['x'], _0x47eaa1['y'] = _0x1ed230['y'], _0x47eaa1['z'] = _0x1ed230['z'];
                } else
                    _0x199dd0 = _0x57c292['defaultVal' + 'ue'], _0x597414 ? (_0x29674d = _0x4532ef['_tempVecto' + 'r31'], _0x101904['scaleWeigh' + 't'](_0x1ed230, _0x433d51, _0x29674d), _0x47eaa1['x'] = _0x199dd0['x'] * _0x29674d['x'], _0x47eaa1['y'] = _0x199dd0['y'] * _0x29674d['y'], _0x47eaa1['z'] = _0x199dd0['z'] * _0x29674d['z']) : _0x101904['scaleBlend'](_0x199dd0, _0x1ed230, _0x433d51, _0x47eaa1);
            }
        }
        ['_applyCros' + 'sData'](_0x54354e, _0x254454, _0x1c80d1, _0x2791fd, _0x5a2277, _0x42abd8, _0x32c5a8) {
            var _0x4dd829 = _0x54354e['propertyOw' + 'ner'];
            if (_0x4dd829) {
                switch (_0x54354e['type']) {
                case 0x0:
                    for (var _0x5a8c34 = _0x54354e['property'], _0x1b0d77 = _0x5a8c34['length'] - 0x1, _0x16dad8 = 0x0; _0x16dad8 < _0x1b0d77 && (_0x4dd829 = _0x4dd829[_0x5a8c34[_0x16dad8]]); _0x16dad8++);
                    var _0x14db75 = _0x5a2277 + _0x32c5a8 * (_0x42abd8 - _0x5a2277);
                    _0x54354e['value'] = _0x14db75, this['_applyFloa' + 't'](_0x4dd829, _0x5a8c34[_0x1b0d77], _0x54354e, _0x254454, _0x1c80d1, _0x2791fd, _0x14db75);
                    break;
                case 0x1:
                    var _0x55d573 = _0x4dd829['localPosit' + 'ion'], _0xe76b92 = _0x54354e['value'], _0x322d5a = _0x5a2277['x'], _0x345327 = _0x5a2277['y'], _0x23f9be = _0x5a2277['z'];
                    _0xe76b92['x'] = _0x322d5a + _0x32c5a8 * (_0x42abd8['x'] - _0x322d5a), _0xe76b92['y'] = _0x345327 + _0x32c5a8 * (_0x42abd8['y'] - _0x345327), _0xe76b92['z'] = _0x23f9be + _0x32c5a8 * (_0x42abd8['z'] - _0x23f9be), this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x54354e, _0x254454, _0x1c80d1, _0x2791fd, _0xe76b92, _0x55d573), _0x4dd829['localPosit' + 'ion'] = _0x55d573;
                    break;
                case 0x2:
                    var _0x1ee9dc = _0x4dd829['localRotat' + 'ion'], _0x495440 = _0x54354e['value'];
                    _0x7cf2d3['lerp'](_0x5a2277, _0x42abd8, _0x32c5a8, _0x495440), this['_applyRota' + 'tion'](_0x54354e, _0x254454, _0x1c80d1, _0x2791fd, _0x495440, _0x1ee9dc), _0x4dd829['localRotat' + 'ion'] = _0x1ee9dc;
                    break;
                case 0x3:
                    var _0x27550b = _0x4dd829['localScale'], _0x1afd94 = _0x54354e['value'];
                    _0x101904['scaleBlend'](_0x5a2277, _0x42abd8, _0x32c5a8, _0x1afd94), this['_applyScal' + 'e'](_0x54354e, _0x254454, _0x1c80d1, _0x2791fd, _0x1afd94, _0x27550b), _0x4dd829['localScale'] = _0x27550b;
                    break;
                case 0x4:
                    var _0x37fa30 = _0x4dd829['localRotat' + 'ionEuler'], _0x2415dd = _0x54354e['value'];
                    _0x322d5a = _0x5a2277['x'], _0x345327 = _0x5a2277['y'], _0x23f9be = _0x5a2277['z'], _0x2415dd['x'] = _0x322d5a + _0x32c5a8 * (_0x42abd8['x'] - _0x322d5a), _0x2415dd['y'] = _0x345327 + _0x32c5a8 * (_0x42abd8['y'] - _0x345327), _0x2415dd['z'] = _0x23f9be + _0x32c5a8 * (_0x42abd8['z'] - _0x23f9be), this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x54354e, _0x254454, _0x1c80d1, _0x2791fd, _0x2415dd, _0x37fa30), _0x4dd829['localRotat' + 'ionEuler'] = _0x37fa30;
                }
                _0x54354e['updateMark'] = this['_updateMar' + 'k'];
            }
        }
        ['_setClipDa' + 'tasToNode'](_0x92fa85, _0x2509b6, _0x334f59, _0x16ed59) {
            for (var _0x31372c = _0x92fa85['_realtimeD' + 'atas'], _0x16615f = _0x92fa85['_clip']['_nodes'], _0x158983 = _0x92fa85['_nodeOwner' + 's'], _0x53a9f7 = 0x0, _0x21fc72 = _0x16615f['count']; _0x53a9f7 < _0x21fc72; _0x53a9f7++) {
                var _0x10a03a = _0x158983[_0x53a9f7];
                if (_0x10a03a) {
                    var _0x1d0a87 = _0x10a03a['propertyOw' + 'ner'];
                    if (_0x1d0a87) {
                        switch (_0x10a03a['type']) {
                        case 0x0:
                            for (var _0x5035d7 = _0x10a03a['property'], _0x3be5cd = _0x5035d7['length'] - 0x1, _0x448243 = 0x0; _0x448243 < _0x3be5cd && (_0x1d0a87 = _0x1d0a87[_0x5035d7[_0x448243]]); _0x448243++);
                            this['_applyFloa' + 't'](_0x1d0a87, _0x5035d7[_0x3be5cd], _0x10a03a, _0x2509b6, _0x334f59, _0x16ed59, _0x31372c[_0x53a9f7]);
                            break;
                        case 0x1:
                            var _0x41db51 = _0x1d0a87['localPosit' + 'ion'];
                            this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x10a03a, _0x2509b6, _0x334f59, _0x16ed59, _0x31372c[_0x53a9f7], _0x41db51), _0x1d0a87['localPosit' + 'ion'] = _0x41db51;
                            break;
                        case 0x2:
                            var _0x103bf8 = _0x1d0a87['localRotat' + 'ion'];
                            this['_applyRota' + 'tion'](_0x10a03a, _0x2509b6, _0x334f59, _0x16ed59, _0x31372c[_0x53a9f7], _0x103bf8), _0x1d0a87['localRotat' + 'ion'] = _0x103bf8;
                            break;
                        case 0x3:
                            var _0x10f3fa = _0x1d0a87['localScale'];
                            this['_applyScal' + 'e'](_0x10a03a, _0x2509b6, _0x334f59, _0x16ed59, _0x31372c[_0x53a9f7], _0x10f3fa), _0x1d0a87['localScale'] = _0x10f3fa;
                            break;
                        case 0x4:
                            var _0x1ea739 = _0x1d0a87['localRotat' + 'ionEuler'];
                            this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x10a03a, _0x2509b6, _0x334f59, _0x16ed59, _0x31372c[_0x53a9f7], _0x1ea739), _0x1d0a87['localRotat' + 'ionEuler'] = _0x1ea739;
                        }
                        _0x10a03a['updateMark'] = this['_updateMar' + 'k'];
                    }
                }
            }
        }
        ['_setCrossC' + 'lipDatasTo' + 'Node'](_0x42dbae, _0x4dc4ea, _0x4a1e5a, _0x5a6c84, _0x2e1940) {
            for (var _0x297ad5 = _0x42dbae['_crossNode' + 'sOwners'], _0x333cf7 = _0x42dbae['_crossNode' + 'sOwnersCou' + 'nt'], _0x34dcf2 = _0x42dbae['blendingMo' + 'de'] !== _0x4331ba['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x292a22 = _0x42dbae['defaultWei' + 'ght'], _0x1ac7f1 = _0x4a1e5a['_realtimeD' + 'atas'], _0x38ad8b = _0x42dbae['_destCross' + 'ClipNodeIn' + 'dices'], _0x3a21e5 = _0x4a1e5a['_nodeOwner' + 's'], _0x22f192 = _0x4dc4ea['_realtimeD' + 'atas'], _0xec5868 = _0x42dbae['_srcCrossC' + 'lipNodeInd' + 'ices'], _0x528c3e = _0x4dc4ea['_nodeOwner' + 's'], _0x1af8d0 = 0x0; _0x1af8d0 < _0x333cf7; _0x1af8d0++) {
                var _0x32246e = _0x297ad5[_0x1af8d0];
                if (_0x32246e) {
                    var _0x3d1ddb = _0xec5868[_0x1af8d0], _0x2a58da = _0x38ad8b[_0x1af8d0], _0x28d47c = -0x1 !== _0x3d1ddb ? _0x22f192[_0x3d1ddb] : _0x3a21e5[_0x2a58da]['defaultVal' + 'ue'], _0x5aec4b = -0x1 !== _0x2a58da ? _0x1ac7f1[_0x2a58da] : _0x528c3e[_0x3d1ddb]['defaultVal' + 'ue'];
                    this['_applyCros' + 'sData'](_0x32246e, _0x34dcf2, _0x292a22, _0x2e1940, _0x28d47c, _0x5aec4b, _0x5a6c84);
                }
            }
        }
        ['_setFixedC' + 'rossClipDa' + 'tasToNode'](_0x4e453a, _0x12a603, _0x48efe9, _0x3b1ec1) {
            for (var _0x160ff5 = _0x4e453a['_crossNode' + 'sOwners'], _0x2eb9a3 = _0x4e453a['_crossNode' + 'sOwnersCou' + 'nt'], _0x49b4d2 = _0x4e453a['blendingMo' + 'de'] !== _0x4331ba['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x481edb = _0x4e453a['defaultWei' + 'ght'], _0x158b94 = _0x12a603['_realtimeD' + 'atas'], _0x2f0502 = _0x4e453a['_destCross' + 'ClipNodeIn' + 'dices'], _0x5790c2 = 0x0; _0x5790c2 < _0x2eb9a3; _0x5790c2++) {
                var _0x5df80a = _0x160ff5[_0x5790c2];
                if (_0x5df80a) {
                    var _0x2aa1ed = _0x2f0502[_0x5790c2], _0x522b88 = _0x5df80a['crossFixed' + 'Value'], _0x35342c = -0x1 !== _0x2aa1ed ? _0x158b94[_0x2aa1ed] : _0x5df80a['defaultVal' + 'ue'];
                    this['_applyCros' + 'sData'](_0x5df80a, _0x49b4d2, _0x481edb, _0x3b1ec1, _0x522b88, _0x35342c, _0x48efe9);
                }
            }
        }
        ['_revertDef' + 'aultKeyfra' + 'meNodes'](_0x8c9c0f) {
            for (var _0x3233df = _0x8c9c0f['_nodeOwner' + 's'], _0x21fca6 = 0x0, _0x48ff40 = _0x3233df['length']; _0x21fca6 < _0x48ff40; _0x21fca6++) {
                var _0x22bd1f = _0x3233df[_0x21fca6];
                if (_0x22bd1f) {
                    var _0x3fe85e = _0x22bd1f['propertyOw' + 'ner'];
                    if (_0x3fe85e)
                        switch (_0x22bd1f['type']) {
                        case 0x0:
                            for (var _0x4a4efc = _0x22bd1f['property'], _0x553057 = _0x4a4efc['length'] - 0x1, _0x5c23ce = 0x0; _0x5c23ce < _0x553057 && (_0x3fe85e = _0x3fe85e[_0x4a4efc[_0x5c23ce]]); _0x5c23ce++);
                            _0x3fe85e[_0x4a4efc[_0x553057]] = _0x22bd1f['defaultVal' + 'ue'];
                            break;
                        case 0x1:
                            var _0x9fdaf2 = _0x3fe85e['localPosit' + 'ion'], _0x46c143 = _0x22bd1f['defaultVal' + 'ue'];
                            _0x9fdaf2['x'] = _0x46c143['x'], _0x9fdaf2['y'] = _0x46c143['y'], _0x9fdaf2['z'] = _0x46c143['z'], _0x3fe85e['localPosit' + 'ion'] = _0x9fdaf2;
                            break;
                        case 0x2:
                            var _0x40a8b3 = _0x3fe85e['localRotat' + 'ion'], _0x264133 = _0x22bd1f['defaultVal' + 'ue'];
                            _0x40a8b3['x'] = _0x264133['x'], _0x40a8b3['y'] = _0x264133['y'], _0x40a8b3['z'] = _0x264133['z'], _0x40a8b3['w'] = _0x264133['w'], _0x3fe85e['localRotat' + 'ion'] = _0x40a8b3;
                            break;
                        case 0x3:
                            var _0x3c330f = _0x3fe85e['localScale'];
                            _0x46c143 = _0x22bd1f['defaultVal' + 'ue'], _0x3c330f['x'] = _0x46c143['x'], _0x3c330f['y'] = _0x46c143['y'], _0x3c330f['z'] = _0x46c143['z'], _0x3fe85e['localScale'] = _0x3c330f;
                            break;
                        case 0x4:
                            var _0x1f5e41 = _0x3fe85e['localRotat' + 'ionEuler'];
                            _0x46c143 = _0x22bd1f['defaultVal' + 'ue'], _0x1f5e41['x'] = _0x46c143['x'], _0x1f5e41['y'] = _0x46c143['y'], _0x1f5e41['z'] = _0x46c143['z'], _0x3fe85e['localRotat' + 'ionEuler'] = _0x1f5e41;
                            break;
                        default:
                            throw 'Animator:u' + 'nknown\x20typ' + 'e.';
                        }
                }
            }
        }
        ['_onAdded']() {
            var _0xb1d0c = this['owner']['_parent'];
            this['owner']['_setHierar' + 'chyAnimato' + 'r'](this, _0xb1d0c ? _0xb1d0c['_hierarchy' + 'Animator'] : null), this['owner']['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](this, !0x0, []);
        }
        ['_onDestroy']() {
            for (var _0x554c4e = 0x0, _0x220f36 = this['_controlle' + 'rLayers']['length']; _0x554c4e < _0x220f36; _0x554c4e++)
                this['_controlle' + 'rLayers'][_0x554c4e]['_removeRef' + 'erence']();
            var _0x44d453 = this['owner']['_parent'];
            this['owner']['_clearHier' + 'archyAnima' + 'tor'](this, _0x44d453 ? _0x44d453['_hierarchy' + 'Animator'] : null);
        }
        ['_onEnable']() {
            this['owner']['_scene']['_animatorP' + 'ool']['add'](this);
            for (var _0x53934f = 0x0, _0xf8eddc = this['_controlle' + 'rLayers']['length']; _0x53934f < _0xf8eddc; _0x53934f++) {
                if (this['_controlle' + 'rLayers'][_0x53934f]['playOnWake'])
                    this['getDefault' + 'State'](_0x53934f) && this['play'](null, _0x53934f, 0x0);
            }
        }
        ['_onDisable']() {
            this['owner']['_scene']['_animatorP' + 'ool']['remove'](this);
        }
        ['_handleSpr' + 'iteOwnersB' + 'ySprite'](_0x3e347d, _0x236db6, _0xd1a13c) {
            for (var _0x1e47b8 = 0x0, _0x47aa87 = this['_controlle' + 'rLayers']['length']; _0x1e47b8 < _0x47aa87; _0x1e47b8++)
                for (var _0x30997e = this['_controlle' + 'rLayers'][_0x1e47b8]['_states'], _0x1a5675 = 0x0, _0x725677 = _0x30997e['length']; _0x1a5675 < _0x725677; _0x1a5675++) {
                    var _0x475ee4 = _0x30997e[_0x1a5675], _0x500f43 = _0x475ee4['_clip'], _0x404e38 = _0x236db6['join']('/'), _0x3772a0 = _0x500f43['_nodesMap'][_0x404e38];
                    if (_0x3772a0) {
                        for (var _0x1d6cab = _0x475ee4['_nodeOwner' + 's'], _0x2af59c = 0x0, _0xf6f02c = _0x3772a0['length']; _0x2af59c < _0xf6f02c; _0x2af59c++)
                            _0x3e347d ? this['_addKeyfra' + 'meNodeOwne' + 'r'](_0x1d6cab, _0x3772a0[_0x2af59c], _0xd1a13c) : this['_removeKey' + 'frameNodeO' + 'wner'](_0x1d6cab, _0x3772a0[_0x2af59c]);
                    }
                }
        }
        ['_parse'](_0x185c9c) {
            var _0x1ee674 = _0x185c9c['avatar'];
            if (_0x1ee674) {
                this['avatar'] = _0x2247ad['Loader']['getRes'](_0x1ee674['path']);
                var _0x263b7d = _0x1ee674['linkSprite' + 's'];
                this['_linkSprit' + 'es'] = _0x263b7d, this['_linkToSpr' + 'ites'](_0x263b7d);
            }
            _0x185c9c['clipPaths'];
            for (var _0x203e46 = _0x185c9c['playOnWake'], _0x1da415 = _0x185c9c['layers'], _0x22e68c = 0x0; _0x22e68c < _0x1da415['length']; _0x22e68c++) {
                var _0x315c9b = _0x1da415[_0x22e68c], _0x255fd6 = new _0x4331ba(_0x315c9b['name']);
                _0x255fd6['defaultWei' + 'ght'] = 0x0 === _0x22e68c ? 0x1 : _0x315c9b['weight'];
                var _0x3139a0 = _0x315c9b['blendingMo' + 'de'];
                _0x3139a0 && (_0x255fd6['blendingMo' + 'de'] = _0x3139a0), this['addControl' + 'lerLayer'](_0x255fd6);
                for (var _0x6a52a8 = _0x315c9b['states'], _0x565f70 = 0x0, _0xe80cc9 = _0x6a52a8['length']; _0x565f70 < _0xe80cc9; _0x565f70++) {
                    var _0x1c096a = _0x6a52a8[_0x565f70], _0x31593d = _0x1c096a['clipPath'];
                    if (_0x31593d) {
                        var _0x1c2a30, _0x464069 = _0x1c096a['name'];
                        if (_0x1c2a30 = _0x2247ad['Loader']['getRes'](_0x31593d)) {
                            var _0x1fc6e3 = new _0x18fb75();
                            _0x1fc6e3['name'] = _0x464069, _0x1fc6e3['clip'] = _0x1c2a30, _0x255fd6['addState'](_0x1fc6e3), 0x0 === _0x565f70 && (this['getControl' + 'lerLayer'](_0x22e68c)['defaultSta' + 'te'] = _0x1fc6e3);
                        }
                    }
                }
                void 0x0 !== _0x203e46 && (_0x255fd6['playOnWake'] = _0x203e46);
            }
            var _0x1030e6 = _0x185c9c['cullingMod' + 'e'];
            void 0x0 !== _0x1030e6 && (this['cullingMod' + 'e'] = _0x1030e6);
        }
        ['_update']() {
            var _0x1ee81a = this['owner']['_scene']['timer'], _0x35195d = _0x1ee81a['_delta'] / 0x3e8;
            if (0x0 !== this['_speed'] && 0x0 !== _0x35195d) {
                var _0x4afa40;
                if (this['cullingMod' + 'e'] === _0x4532ef['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY']) {
                    _0x4afa40 = !0x1;
                    for (var _0x4954e3 = 0x0, _0x48465c = this['_renderabl' + 'eSprites']['length']; _0x4954e3 < _0x48465c; _0x4954e3++)
                        if (this['_renderabl' + 'eSprites'][_0x4954e3]['_render']['isRender']) {
                            _0x4afa40 = !0x0;
                            break;
                        }
                } else
                    _0x4afa40 = !0x0;
                this['_updateMar' + 'k']++;
                var _0x189d00 = _0x1ee81a['scale'];
                for (_0x4954e3 = 0x0, _0x48465c = this['_controlle' + 'rLayers']['length']; _0x4954e3 < _0x48465c; _0x4954e3++) {
                    var _0x5b13a1 = this['_controlle' + 'rLayers'][_0x4954e3], _0x4ae750 = _0x5b13a1['_playState' + 'Info'], _0x45a6ce = _0x5b13a1['_crossPlay' + 'StateInfo'];
                    switch (_0x54f6ba = _0x5b13a1['blendingMo' + 'de'] !== _0x4331ba['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x5b13a1['_playType']) {
                    case 0x0:
                        var _0x3711f3 = _0x4ae750['_currentSt' + 'ate'], _0x20f54e = _0x3711f3['_clip'], _0x115369 = this['_speed'] * _0x3711f3['speed'], _0x6cc666 = _0x4ae750['_finish'];
                        if (_0x6cc666 || this['_updatePla' + 'yer'](_0x3711f3, _0x4ae750, _0x35195d * _0x115369, _0x20f54e['islooping']), _0x4afa40) {
                            var _0x54f6ba = _0x5b13a1['blendingMo' + 'de'] !== _0x4331ba['BLENDINGMO' + 'DE_OVERRID' + 'E'];
                            this['_updateCli' + 'pDatas'](_0x3711f3, _0x54f6ba, _0x4ae750, _0x189d00 * _0x115369), this['_setClipDa' + 'tasToNode'](_0x3711f3, _0x54f6ba, _0x5b13a1['defaultWei' + 'ght'], 0x0 === _0x4954e3), _0x6cc666 || this['_updateEve' + 'ntScript'](_0x3711f3, _0x4ae750);
                        }
                        break;
                    case 0x1:
                        _0x20f54e = (_0x3711f3 = _0x4ae750['_currentSt' + 'ate'])['_clip'];
                        var _0xe7e44a = _0x5b13a1['_crossPlay' + 'State'], _0x1360cd = _0xe7e44a['_clip'], _0x8fca5f = _0x5b13a1['_crossDura' + 'tion'], _0x4e4b21 = _0x45a6ce['_startPlay' + 'Time'], _0x1fe580 = _0x1360cd['_duration'] - _0x4e4b21, _0x4fd96e = _0x8fca5f > _0x1fe580 ? _0x1fe580 / _0x8fca5f : 0x1, _0x189a79 = this['_speed'] * _0xe7e44a['speed'];
                        this['_updatePla' + 'yer'](_0xe7e44a, _0x45a6ce, _0x35195d * _0x4fd96e * _0x189a79, _0x1360cd['islooping']);
                        var _0x27e551 = (_0x45a6ce['_elapsedTi' + 'me'] - _0x4e4b21) / _0x4fd96e / _0x8fca5f;
                        _0x27e551 >= 0x1 ? _0x4afa40 && (this['_updateCli' + 'pDatas'](_0xe7e44a, _0x54f6ba, _0x45a6ce, _0x189d00 * _0x189a79), this['_setClipDa' + 'tasToNode'](_0xe7e44a, _0x54f6ba, _0x5b13a1['defaultWei' + 'ght'], 0x0 === _0x4954e3), _0x5b13a1['_playType'] = 0x0, _0x4ae750['_currentSt' + 'ate'] = _0xe7e44a, _0x45a6ce['_cloneTo'](_0x4ae750)) : (_0x4ae750['_finish'] || (_0x115369 = this['_speed'] * _0x3711f3['speed'], this['_updatePla' + 'yer'](_0x3711f3, _0x4ae750, _0x35195d * _0x115369, _0x20f54e['islooping']), _0x4afa40 && this['_updateCli' + 'pDatas'](_0x3711f3, _0x54f6ba, _0x4ae750, _0x189d00 * _0x115369)), _0x4afa40 && (this['_updateCli' + 'pDatas'](_0xe7e44a, _0x54f6ba, _0x45a6ce, _0x189d00 * _0x4fd96e * _0x189a79), this['_setCrossC' + 'lipDatasTo' + 'Node'](_0x5b13a1, _0x3711f3, _0xe7e44a, _0x27e551, 0x0 === _0x4954e3))), _0x4afa40 && (this['_updateEve' + 'ntScript'](_0x3711f3, _0x4ae750), this['_updateEve' + 'ntScript'](_0xe7e44a, _0x45a6ce));
                        break;
                    case 0x2:
                        _0x1360cd = (_0xe7e44a = _0x5b13a1['_crossPlay' + 'State'])['_clip'], _0x8fca5f = _0x5b13a1['_crossDura' + 'tion'], _0x4e4b21 = _0x45a6ce['_startPlay' + 'Time'], _0x4fd96e = _0x8fca5f > (_0x1fe580 = _0x1360cd['_duration'] - _0x4e4b21) ? _0x1fe580 / _0x8fca5f : 0x1, _0x189a79 = this['_speed'] * _0xe7e44a['speed'], this['_updatePla' + 'yer'](_0xe7e44a, _0x45a6ce, _0x35195d * _0x4fd96e * _0x189a79, _0x1360cd['islooping']), _0x4afa40 && ((_0x27e551 = (_0x45a6ce['_elapsedTi' + 'me'] - _0x4e4b21) / _0x4fd96e / _0x8fca5f) >= 0x1 ? (this['_updateCli' + 'pDatas'](_0xe7e44a, _0x54f6ba, _0x45a6ce, _0x189d00 * _0x189a79), this['_setClipDa' + 'tasToNode'](_0xe7e44a, _0x54f6ba, 0x1, 0x0 === _0x4954e3), _0x5b13a1['_playType'] = 0x0, _0x4ae750['_currentSt' + 'ate'] = _0xe7e44a, _0x45a6ce['_cloneTo'](_0x4ae750)) : (this['_updateCli' + 'pDatas'](_0xe7e44a, _0x54f6ba, _0x45a6ce, _0x189d00 * _0x4fd96e * _0x189a79), this['_setFixedC' + 'rossClipDa' + 'tasToNode'](_0x5b13a1, _0xe7e44a, _0x27e551, 0x0 === _0x4954e3)), this['_updateEve' + 'ntScript'](_0xe7e44a, _0x45a6ce));
                    }
                }
                _0x4afa40 && this['_avatar'] && (_0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_updateAni' + 'mationNode' + 'WorldMatix'](this['_animation' + 'NodeLocalP' + 'ositions'], this['_animation' + 'NodeLocalR' + 'otations'], this['_animation' + 'NodeLocalS' + 'cales'], this['_animation' + 'NodeWorldM' + 'atrixs'], this['_animation' + 'NodeParent' + 'Indices']), this['_updateAva' + 'tarNodesTo' + 'Sprite']());
            }
        }
        ['_cloneTo'](_0x5d3950) {
            var _0x869141 = _0x5d3950;
            _0x869141['avatar'] = this['avatar'], _0x869141['cullingMod' + 'e'] = this['cullingMod' + 'e'];
            for (var _0x4e64ad = 0x0, _0x2f0d59 = this['_controlle' + 'rLayers']['length']; _0x4e64ad < _0x2f0d59; _0x4e64ad++) {
                var _0x12d2d0 = this['_controlle' + 'rLayers'][_0x4e64ad];
                _0x869141['addControl' + 'lerLayer'](_0x12d2d0['clone']());
                for (var _0x3a996b = _0x12d2d0['_states'], _0xf83dcb = 0x0, _0x1bf63a = _0x3a996b['length']; _0xf83dcb < _0x1bf63a; _0xf83dcb++) {
                    var _0x70c4a8 = _0x3a996b[_0xf83dcb]['clone'](), _0x13fc16 = _0x869141['getControl' + 'lerLayer'](_0x4e64ad);
                    _0x13fc16['addState'](_0x70c4a8), 0x0 == _0xf83dcb && (_0x13fc16['defaultSta' + 'te'] = _0x70c4a8);
                }
            }
            _0x869141['_linkSprit' + 'es'] = this['_linkSprit' + 'es'], _0x869141['_linkToSpr' + 'ites'](this['_linkSprit' + 'es']);
        }
        ['getDefault' + 'State'](_0x4909f7 = 0x0) {
            return this['_controlle' + 'rLayers'][_0x4909f7]['defaultSta' + 'te'];
        }
        ['addState'](_0x2b4c10, _0x28e44e = 0x0) {
            this['_controlle' + 'rLayers'][_0x28e44e]['addState'](_0x2b4c10), console['warn']('Animator:t' + 'his\x20functi' + 'on\x20is\x20disc' + 'ard,please' + '\x20use\x20anima' + 'torControl' + 'lerLayer.a' + 'ddState()\x20' + 'instead.');
        }
        ['removeStat' + 'e'](_0x289073, _0x36c694 = 0x0) {
            this['_controlle' + 'rLayers'][_0x36c694]['removeStat' + 'e'](_0x289073), console['warn']('Animator:t' + 'his\x20functi' + 'on\x20is\x20disc' + 'ard,please' + '\x20use\x20anima' + 'torControl' + 'lerLayer.r' + 'emoveState' + '()\x20instead' + '.');
        }
        ['addControl' + 'lerLayer'](_0x528094) {
            this['_controlle' + 'rLayers']['push'](_0x528094), _0x528094['_animator'] = this, _0x528094['_addRefere' + 'nce']();
            for (var _0x360590 = _0x528094['_states'], _0x2ece07 = 0x0, _0x254388 = _0x360590['length']; _0x2ece07 < _0x254388; _0x2ece07++)
                this['_getOwners' + 'ByClip'](_0x360590[_0x2ece07]);
        }
        ['getControl' + 'lerLayer'](_0x403d76 = 0x0) {
            return this['_controlle' + 'rLayers'][_0x403d76];
        }
        ['play'](_0x5249fd = null, _0x124d52 = 0x0, _0x4d96a8 = Number['NEGATIVE_I' + 'NFINITY']) {
            var _0x374b22 = this['_controlle' + 'rLayers'][_0x124d52];
            if (_0x374b22) {
                var _0x30743d = _0x374b22['defaultSta' + 'te'];
                if (!_0x5249fd && !_0x30743d)
                    throw new Error('Animator:m' + 'ust\x20have\x20d' + 'efault\x20cli' + 'p\x20value,pl' + 'ease\x20set\x20c' + 'lip\x20proper' + 'ty.');
                var _0x4b0883 = _0x374b22['_playState' + 'Info'], _0x1822e0 = _0x4b0883['_currentSt' + 'ate'], _0x33df55 = _0x5249fd ? _0x374b22['_statesMap'][_0x5249fd] : _0x30743d, _0x283a19 = _0x33df55['_clip']['_duration'];
                _0x1822e0 !== _0x33df55 ? (_0x4d96a8 !== Number['NEGATIVE_I' + 'NFINITY'] ? _0x4b0883['_resetPlay' + 'State'](_0x283a19 * _0x4d96a8) : _0x4b0883['_resetPlay' + 'State'](0x0), null !== _0x1822e0 && _0x1822e0 !== _0x33df55 && this['_revertDef' + 'aultKeyfra' + 'meNodes'](_0x1822e0), _0x374b22['_playType'] = 0x0, _0x4b0883['_currentSt' + 'ate'] = _0x33df55) : _0x4d96a8 !== Number['NEGATIVE_I' + 'NFINITY'] && (_0x4b0883['_resetPlay' + 'State'](_0x283a19 * _0x4d96a8), _0x374b22['_playType'] = 0x0);
                var _0x52c72d = _0x33df55['_scripts'];
                if (_0x52c72d) {
                    for (var _0x5d05c3 = 0x0, _0x42a0f0 = _0x52c72d['length']; _0x5d05c3 < _0x42a0f0; _0x5d05c3++)
                        _0x52c72d[_0x5d05c3]['onStateEnt' + 'er']();
                }
            } else
                console['warn']('Invalid\x20la' + 'yerIndex\x20' + _0x124d52 + '.');
        }
        ['crossFade'](_0x39915e, _0x3164a9, _0x27fdc3 = 0x0, _0x13d0cb = Number['NEGATIVE_I' + 'NFINITY']) {
            var _0x50aaaa = this['_controlle' + 'rLayers'][_0x27fdc3];
            if (_0x50aaaa) {
                var _0x180daa = _0x50aaaa['_statesMap'][_0x39915e];
                if (_0x180daa) {
                    var _0x52a30f = _0x50aaaa['_playType'];
                    if (-0x1 === _0x52a30f)
                        return void this['play'](_0x39915e, _0x27fdc3, _0x13d0cb);
                    var _0x51a258 = _0x50aaaa['_crossPlay' + 'StateInfo'], _0x33f1ab = _0x50aaaa['_crossNode' + 'sOwners'], _0x50edcb = _0x50aaaa['_crossNode' + 'sOwnersInd' + 'icesMap'], _0x53b2ba = _0x50aaaa['_playState' + 'Info']['_currentSt' + 'ate'], _0x37fe23 = _0x180daa['_nodeOwner' + 's'], _0x66709a = _0x50aaaa['_destCross' + 'ClipNodeIn' + 'dices'], _0xd844af = _0x180daa['_clip'], _0x531fd0 = _0xd844af['_nodes'], _0x5c6406 = _0xd844af['_nodesDic'];
                    switch (_0x52a30f) {
                    case 0x0:
                        var _0x3423a = _0x53b2ba['_nodeOwner' + 's'], _0xf341b2 = _0x50aaaa['_srcCrossC' + 'lipNodeInd' + 'ices'], _0x5d16af = _0x53b2ba['_clip'], _0x197748 = _0x5d16af['_nodes'], _0x41f93e = _0x5d16af['_nodesDic'];
                        _0x50aaaa['_playType'] = 0x1;
                        for (var _0x1b50a0 = ++_0x50aaaa['_crossMark'], _0x420eba = _0x50aaaa['_crossNode' + 'sOwnersCou' + 'nt'] = 0x0, _0x2a0b1b = 0x0, _0x19811d = _0x197748['count']; _0x2a0b1b < _0x19811d; _0x2a0b1b++) {
                            var _0x53c9fd = _0x197748['getNodeByI' + 'ndex'](_0x2a0b1b), _0x433e23 = _0x53c9fd['_indexInLi' + 'st'], _0x46b487 = _0x3423a[_0x433e23];
                            if (_0x46b487) {
                                var _0x5c45d3 = _0x53c9fd['fullPath'];
                                _0xf341b2[_0x420eba] = _0x433e23;
                                var _0xb93929 = _0x5c6406[_0x5c45d3];
                                _0x66709a[_0x420eba] = _0xb93929 ? _0xb93929['_indexInLi' + 'st'] : -0x1, _0x50edcb[_0x5c45d3] = _0x1b50a0, _0x33f1ab[_0x420eba] = _0x46b487, _0x420eba++;
                            }
                        }
                        for (_0x2a0b1b = 0x0, _0x19811d = _0x531fd0['count']; _0x2a0b1b < _0x19811d; _0x2a0b1b++) {
                            var _0x5dfa82 = (_0xb93929 = _0x531fd0['getNodeByI' + 'ndex'](_0x2a0b1b))['_indexInLi' + 'st'], _0x4f19c8 = _0x37fe23[_0x5dfa82];
                            if (_0x4f19c8) {
                                var _0x1cb6d7 = _0xb93929['fullPath'];
                                _0x41f93e[_0x1cb6d7] || (_0xf341b2[_0x420eba] = -0x1, _0x66709a[_0x420eba] = _0x5dfa82, _0x50edcb[_0x1cb6d7] = _0x1b50a0, _0x33f1ab[_0x420eba] = _0x4f19c8, _0x420eba++);
                            }
                        }
                        break;
                    case 0x1:
                    case 0x2:
                        for (_0x50aaaa['_playType'] = 0x2, _0x2a0b1b = 0x0, _0x19811d = _0x33f1ab['length']; _0x2a0b1b < _0x19811d; _0x2a0b1b++) {
                            var _0x539319 = _0x33f1ab[_0x2a0b1b];
                            _0x539319['saveCrossF' + 'ixedValue'](), _0xb93929 = _0x5c6406[_0x539319['fullPath']], _0x66709a[_0x2a0b1b] = _0xb93929 ? _0xb93929['_indexInLi' + 'st'] : -0x1;
                        }
                        for (_0x420eba = _0x50aaaa['_crossNode' + 'sOwnersCou' + 'nt'], _0x1b50a0 = _0x50aaaa['_crossMark'], _0x2a0b1b = 0x0, _0x19811d = _0x531fd0['count']; _0x2a0b1b < _0x19811d; _0x2a0b1b++)
                            (_0x4f19c8 = _0x37fe23[_0x5dfa82 = (_0xb93929 = _0x531fd0['getNodeByI' + 'ndex'](_0x2a0b1b))['_indexInLi' + 'st']]) && _0x50edcb[_0x1cb6d7 = _0xb93929['fullPath']] !== _0x1b50a0 && (_0x66709a[_0x420eba] = _0x5dfa82, _0x50edcb[_0x1cb6d7] = _0x1b50a0, _0x539319 = _0x37fe23[_0x5dfa82], _0x33f1ab[_0x420eba] = _0x539319, _0x539319['saveCrossF' + 'ixedValue'](), _0x420eba++);
                    }
                    _0x50aaaa['_crossNode' + 'sOwnersCou' + 'nt'] = _0x420eba, _0x50aaaa['_crossPlay' + 'State'] = _0x180daa, _0x50aaaa['_crossDura' + 'tion'] = _0x53b2ba['_clip']['_duration'] * _0x3164a9, _0x13d0cb !== Number['NEGATIVE_I' + 'NFINITY'] ? _0x51a258['_resetPlay' + 'State'](_0xd844af['_duration'] * _0x13d0cb) : _0x51a258['_resetPlay' + 'State'](0x0);
                    var _0x5a700c = _0x180daa['_scripts'];
                    if (_0x5a700c) {
                        for (_0x2a0b1b = 0x0, _0x19811d = _0x5a700c['length']; _0x2a0b1b < _0x19811d; _0x2a0b1b++)
                            _0x5a700c[_0x2a0b1b]['onStateEnt' + 'er']();
                    }
                } else
                    console['warn']('Invalid\x20na' + 'me\x20' + _0x27fdc3 + '.');
            } else
                console['warn']('Invalid\x20la' + 'yerIndex\x20' + _0x27fdc3 + '.');
        }
        ['getCurrent' + 'AnimatorPl' + 'ayState'](_0x3bd261 = 0x0) {
            return this['_controlle' + 'rLayers'][_0x3bd261]['_playState' + 'Info'];
        }
        get ['avatar']() {
            return this['_avatar'];
        }
        set ['avatar'](_0x247038) {
            if (this['_avatar'] !== _0x247038) {
                if (this['_avatar'] = _0x247038, _0x247038)
                    this['_getAvatar' + 'OwnersAndI' + 'nitDatasAs' + 'ync'](), this['owner']['_changeHie' + 'rarchyAnim' + 'atorAvatar'](this, _0x247038);
                else {
                    var _0x30e466 = this['owner']['_parent'];
                    this['owner']['_changeHie' + 'rarchyAnim' + 'atorAvatar'](this, _0x30e466 ? _0x30e466['_hierarchy' + 'Animator']['_avatar'] : null);
                }
            }
        }
        ['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x4bc350, _0x6fa645, _0x1fcf03) {
            var _0x4f05a0 = this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x6fa645];
            if (_0x1fcf03)
                _0x4f05a0 || (this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x6fa645] = _0x4f05a0 = []), _0x4f05a0['push'](_0x4bc350);
            else {
                var _0x1be130 = _0x4f05a0['indexOf'](_0x4bc350);
                _0x4f05a0['splice'](_0x1be130, 0x1);
            }
        }
        ['_getAvatar' + 'OwnersAndI' + 'nitDatasAs' + 'ync']() {
            for (var _0x115f6b = 0x0, _0x5acf51 = this['_controlle' + 'rLayers']['length']; _0x115f6b < _0x5acf51; _0x115f6b++)
                for (var _0x28d434 = this['_controlle' + 'rLayers'][_0x115f6b]['_states'], _0x3131a0 = 0x0, _0x574072 = _0x28d434['length']; _0x3131a0 < _0x574072; _0x3131a0++)
                    this['_getOwners' + 'ByClip'](_0x28d434[_0x3131a0]);
            for (var _0x276d96 in (this['_avatar']['_cloneData' + 'sToAnimato' + 'r'](this), this['_linkAvata' + 'rSpritesDa' + 'ta'])) {
                var _0x271d96 = this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x276d96];
                if (_0x271d96) {
                    for (var _0x3fc72c = 0x0, _0x2b01c7 = _0x271d96['length']; _0x3fc72c < _0x2b01c7; _0x3fc72c++)
                        this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x271d96[_0x3fc72c], _0x276d96, !0x0);
                }
            }
        }
        ['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x33d008, _0x5e7a3e, _0xa92aca) {
            if (this['_avatar']) {
                var _0x7c4ef7 = this['_avatarNod' + 'eMap'][_0x5e7a3e];
                if (_0x7c4ef7) {
                    if (_0xa92aca) {
                        _0x33d008['_transform']['_dummy'] = _0x7c4ef7['transform'], this['_linkAvata' + 'rSprites']['push'](_0x33d008);
                        var _0xbe46f7 = _0x7c4ef7['transform'], _0x3413d4 = _0x33d008['transform'];
                        if (!_0x3413d4['owner']['isStatic'] && _0xbe46f7) {
                            var _0x18a54e = _0x3413d4['worldMatri' + 'x'], _0x16f8a6 = this['owner']['_transform']['_parent'];
                            if (_0x16f8a6)
                                _0x101904['matrix4x4M' + 'ultiplyMFM'](_0x16f8a6['worldMatri' + 'x'], _0xbe46f7['getWorldMa' + 'trix'](), _0x18a54e);
                            else {
                                for (var _0x4a4bc6 = _0x18a54e['elements'], _0x1d0dc9 = _0xbe46f7['getWorldMa' + 'trix'](), _0x3284ee = 0x0; _0x3284ee < 0x10; _0x3284ee++)
                                    _0x4a4bc6[_0x3284ee] = _0x1d0dc9[_0x3284ee];
                            }
                            _0x3413d4['worldMatri' + 'x'] = _0x18a54e;
                        }
                    } else
                        _0x33d008['_transform']['_dummy'] = null, this['_linkAvata' + 'rSprites']['splice'](this['_linkAvata' + 'rSprites']['indexOf'](_0x33d008), 0x1);
                }
            }
        }
        ['_updateAva' + 'tarNodesTo' + 'Sprite']() {
            for (var _0x19eba0 = 0x0, _0x1ea3a8 = this['_linkAvata' + 'rSprites']['length']; _0x19eba0 < _0x1ea3a8; _0x19eba0++) {
                var _0x3d0f83 = this['_linkAvata' + 'rSprites'][_0x19eba0], _0x795890 = _0x3d0f83['transform']['_dummy'], _0x1d64cd = _0x3d0f83['transform'];
                if (!_0x1d64cd['owner']['isStatic'] && _0x795890) {
                    var _0x8b9c36 = _0x1d64cd['worldMatri' + 'x'], _0x1c2b84 = this['owner']['_transform'];
                    _0x101904['matrix4x4M' + 'ultiplyMFM'](_0x1c2b84['worldMatri' + 'x'], _0x795890['getWorldMa' + 'trix'](), _0x8b9c36), _0x1d64cd['worldMatri' + 'x'] = _0x8b9c36;
                }
            }
        }
        ['linkSprite' + '3DToAvatar' + 'Node'](_0x3a7363, _0x21be75) {
            return this['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x21be75, _0x3a7363, !0x0), this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x21be75, _0x3a7363, !0x0), !0x0;
        }
        ['unLinkSpri' + 'te3DToAvat' + 'arNode'](_0x29e499) {
            var _0x19496b = _0x29e499['transform']['_dummy'];
            if (_0x19496b) {
                var _0x1b9d1a = _0x19496b['_owner']['name'];
                return this['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x29e499, _0x1b9d1a, !0x1), this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x29e499, _0x1b9d1a, !0x1), !0x0;
            }
            return !0x1;
        }
        ['_updateAni' + 'mationNode' + 'WorldMatix'](_0x4f315b, _0x1b0000, _0x1c2bc6, _0x15c9c8, _0x2a4ad5) {
            _0x2247ad['LayaGL']['instance']['updateAnim' + 'ationNodeW' + 'orldMatix'](_0x4f315b, _0x1b0000, _0x1c2bc6, _0x2a4ad5, _0x15c9c8);
        }
    }
    _0x4532ef['_tempVecto' + 'r30'] = new _0x43b358(), _0x4532ef['_tempVecto' + 'r31'] = new _0x43b358(), _0x4532ef['_tempQuate' + 'rnion0'] = new _0x7cf2d3(), _0x4532ef['_tempQuate' + 'rnion1'] = new _0x7cf2d3(), _0x4532ef['CULLINGMOD' + 'E_ALWAYSAN' + 'IMATE'] = 0x0, _0x4532ef['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY'] = 0x2;
    class _0x3f7e39 {
        constructor() {
            this['source'] = null, this['destinatio' + 'n'] = null, this['camera'] = null, this['compositeS' + 'haderData'] = null, this['command'] = null, this['deferredRe' + 'leaseTextu' + 'res'] = [];
        }
    }
    class _0x5ac2c4 {
        constructor() {
            this['invertY'] = !0x1;
        }
    }
    _0x5ac2c4['_instance'] = new _0x5ac2c4();
    class _0x13c6e8 extends _0x2247ad['BaseTextur' + 'e'] {
        constructor(_0x3461ea, _0x53ef78, _0x473345 = _0x2247ad['RenderText' + 'ureFormat']['R8G8B8'], _0x54fba6 = _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']) {
            super(_0x473345, !0x1), this['_inPool'] = !0x1, this['_isCameraT' + 'arget'] = !0x1, this['_glTexture' + 'Type'] = _0x2247ad['LayaGL']['instance']['TEXTURE_2D'], this['_width'] = _0x3461ea, this['_height'] = _0x53ef78, this['_depthSten' + 'cilFormat'] = _0x54fba6, this['_mipmapCou' + 'nt'] = 0x1, this['_create'](_0x3461ea, _0x53ef78);
        }
        static get ['currentAct' + 'ive']() {
            return _0x13c6e8['_currentAc' + 'tive'];
        }
        static ['createFrom' + 'Pool'](_0x544c60, _0x1f4d01, _0x5a7352 = _0x2247ad['RenderText' + 'ureFormat']['R8G8B8'], _0x5a9de9 = _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']) {
            for (var _0x17fa18, _0xb1ce0e = 0x0, _0x30170a = _0x13c6e8['_pool']['length']; _0xb1ce0e < _0x30170a; _0xb1ce0e++)
                if ((_0x17fa18 = _0x13c6e8['_pool'][_0xb1ce0e])['_width'] == _0x544c60 && _0x17fa18['_height'] == _0x1f4d01 && _0x17fa18['_format'] == _0x5a7352 && _0x17fa18['_depthSten' + 'cilFormat'] == _0x5a9de9) {
                    _0x17fa18['_inPool'] = !0x1;
                    var _0x48ceab = _0x13c6e8['_pool'][_0x30170a - 0x1];
                    return _0x13c6e8['_pool'][_0xb1ce0e] = _0x48ceab, _0x13c6e8['_pool']['length'] -= 0x1, _0x17fa18;
                }
            return (_0x17fa18 = new _0x13c6e8(_0x544c60, _0x1f4d01, _0x5a7352, _0x5a9de9))['lock'] = !0x0, _0x17fa18;
        }
        static ['recoverToP' + 'ool'](_0x509316) {
            _0x509316['_inPool'] || (_0x13c6e8['_pool']['push'](_0x509316), _0x509316['_inPool'] = !0x0);
        }
        get ['depthStenc' + 'ilFormat']() {
            return this['_depthSten' + 'cilFormat'];
        }
        get ['defaulteTe' + 'xture']() {
            return _0x2247ad['Texture2D']['grayTextur' + 'e'];
        }
        ['_create'](_0x10a8d2, _0x12f5bb) {
            var _0x2d701c = _0x2247ad['LayaGL']['instance'], _0x158e46 = _0x2d701c, _0x3d96ea = this['_glTexture' + 'Type'], _0x98516 = _0x2247ad['LayaGL']['layaGPUIns' + 'tance'], _0x333dd2 = _0x98516['_isWebGL2'], _0x31a6e5 = this['_format'];
            if (this['_frameBuff' + 'er'] = _0x2d701c['createFram' + 'ebuffer'](), _0x2d701c['bindFrameb' + 'uffer'](_0x2d701c['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x31a6e5 !== _0x2247ad['RenderText' + 'ureFormat']['Depth'] && _0x31a6e5 !== _0x2247ad['RenderText' + 'ureFormat']['ShadowMap']) {
                switch (_0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2d701c, _0x3d96ea, this['_glTexture']), _0x31a6e5) {
                case _0x2247ad['RenderText' + 'ureFormat']['R8G8B8']:
                    _0x333dd2 ? _0x158e46['texStorage' + '2D'](_0x3d96ea, this['_mipmapCou' + 'nt'], _0x158e46['RGB8'], _0x10a8d2, _0x12f5bb) : _0x2d701c['texImage2D'](_0x3d96ea, 0x0, _0x2d701c['RGB'], _0x10a8d2, _0x12f5bb, 0x0, _0x2d701c['RGB'], _0x2d701c['UNSIGNED_B' + 'YTE'], null);
                    break;
                case _0x2247ad['RenderText' + 'ureFormat']['R8G8B8A8']:
                    _0x333dd2 ? _0x158e46['texStorage' + '2D'](_0x3d96ea, this['_mipmapCou' + 'nt'], _0x158e46['RGBA8'], _0x10a8d2, _0x12f5bb) : _0x2d701c['texImage2D'](_0x3d96ea, 0x0, _0x2d701c['RGBA'], _0x10a8d2, _0x12f5bb, 0x0, _0x2d701c['RGBA'], _0x2d701c['UNSIGNED_B' + 'YTE'], null);
                    break;
                case _0x2247ad['RenderText' + 'ureFormat']['Alpha8']:
                    _0x333dd2 ? _0x158e46['texStorage' + '2D'](_0x3d96ea, 0x0, _0x158e46['R8'], _0x10a8d2, _0x12f5bb) : _0x2d701c['texImage2D'](_0x3d96ea, 0x0, _0x2d701c['ALPHA'], _0x10a8d2, _0x12f5bb, 0x0, _0x2d701c['ALPHA'], _0x2d701c['UNSIGNED_B' + 'YTE'], null);
                    break;
                case _0x2247ad['RenderText' + 'ureFormat']['R16G16B16A' + '16']:
                    _0x333dd2 ? _0x158e46['texStorage' + '2D'](_0x3d96ea, this['_mipmapCou' + 'nt'], _0x158e46['RGBA16F'], _0x10a8d2, _0x12f5bb) : _0x2d701c['texImage2D'](_0x3d96ea, 0x0, _0x2d701c['RGBA'], _0x10a8d2, _0x12f5bb, 0x0, _0x2d701c['RGBA'], _0x98516['_oesTextur' + 'eHalfFloat']['HALF_FLOAT' + '_OES'], null);
                }
                _0x2d701c['framebuffe' + 'rTexture2D'](_0x2d701c['FRAMEBUFFE' + 'R'], _0x2d701c['COLOR_ATTA' + 'CHMENT0'], _0x2d701c['TEXTURE_2D'], this['_glTexture'], 0x0);
            }
            if (_0x31a6e5 == _0x2247ad['RenderText' + 'ureFormat']['Depth'] || _0x31a6e5 == _0x2247ad['RenderText' + 'ureFormat']['ShadowMap']) {
                switch (_0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2d701c, _0x3d96ea, this['_glTexture']), this['_depthSten' + 'cilFormat']) {
                case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                    _0x333dd2 ? _0x158e46['texStorage' + '2D'](_0x3d96ea, this['_mipmapCou' + 'nt'], _0x158e46['DEPTH_COMP' + 'ONENT16'], _0x10a8d2, _0x12f5bb) : _0x2d701c['texImage2D'](_0x3d96ea, 0x0, _0x2d701c['DEPTH_COMP' + 'ONENT'], _0x10a8d2, _0x12f5bb, 0x0, _0x2d701c['DEPTH_COMP' + 'ONENT'], _0x2d701c['UNSIGNED_S' + 'HORT'], null), _0x2d701c['framebuffe' + 'rTexture2D'](_0x2d701c['FRAMEBUFFE' + 'R'], _0x2d701c['DEPTH_ATTA' + 'CHMENT'], _0x2d701c['TEXTURE_2D'], this['_glTexture'], 0x0);
                    break;
                case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                    _0x333dd2 ? _0x158e46['texStorage' + '2D'](_0x3d96ea, this['_mipmapCou' + 'nt'], _0x158e46['DEPTH24_ST' + 'ENCIL8'], _0x10a8d2, _0x12f5bb) : _0x2d701c['texImage2D'](_0x3d96ea, 0x0, _0x2d701c['DEPTH_STEN' + 'CIL'], _0x10a8d2, _0x12f5bb, 0x0, _0x2d701c['DEPTH_STEN' + 'CIL'], _0x98516['_webgl_dep' + 'th_texture']['UNSIGNED_I' + 'NT_24_8_WE' + 'BGL'], null), _0x2d701c['framebuffe' + 'rTexture2D'](_0x2d701c['FRAMEBUFFE' + 'R'], _0x2d701c['DEPTH_STEN' + 'CIL_ATTACH' + 'MENT'], _0x2d701c['TEXTURE_2D'], this['_glTexture'], 0x0);
                    break;
                default:
                    throw 'RenderText' + 'ure:\x20depth' + '\x20format\x20Re' + 'nderTextur' + 'e\x20must\x20use' + '\x20depthForm' + 'at\x20with\x20DE' + 'PTH_16\x20and' + '\x20DEPTHSTEN' + 'CIL_16_8.';
                }
                _0x333dd2 && _0x31a6e5 == _0x2247ad['RenderText' + 'ureFormat']['ShadowMap'] && _0x158e46['texParamet' + 'eri'](_0x3d96ea, _0x158e46['TEXTURE_CO' + 'MPARE_MODE'], _0x158e46['COMPARE_RE' + 'F_TO_TEXTU' + 'RE']);
            } else {
                if (this['_depthSten' + 'cilFormat'] !== _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']) {
                    switch (this['_depthSten' + 'cilBuffer'] = _0x2d701c['createRend' + 'erbuffer'](), _0x2d701c['bindRender' + 'buffer'](_0x2d701c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']), this['_depthSten' + 'cilFormat']) {
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x2d701c['renderbuff' + 'erStorage'](_0x2d701c['RENDERBUFF' + 'ER'], _0x2d701c['DEPTH_COMP' + 'ONENT16'], _0x10a8d2, _0x12f5bb), _0x2d701c['framebuffe' + 'rRenderbuf' + 'fer'](_0x2d701c['FRAMEBUFFE' + 'R'], _0x2d701c['DEPTH_ATTA' + 'CHMENT'], _0x2d701c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                        break;
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x2d701c['renderbuff' + 'erStorage'](_0x2d701c['RENDERBUFF' + 'ER'], _0x2d701c['STENCIL_IN' + 'DEX8'], _0x10a8d2, _0x12f5bb), _0x2d701c['framebuffe' + 'rRenderbuf' + 'fer'](_0x2d701c['FRAMEBUFFE' + 'R'], _0x2d701c['STENCIL_AT' + 'TACHMENT'], _0x2d701c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                        break;
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                        _0x2d701c['renderbuff' + 'erStorage'](_0x2d701c['RENDERBUFF' + 'ER'], _0x2d701c['DEPTH_STEN' + 'CIL'], _0x10a8d2, _0x12f5bb), _0x2d701c['framebuffe' + 'rRenderbuf' + 'fer'](_0x2d701c['FRAMEBUFFE' + 'R'], _0x2d701c['DEPTH_STEN' + 'CIL_ATTACH' + 'MENT'], _0x2d701c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                        break;
                    default:
                        throw 'RenderText' + 'ure:\x20unkon' + 'w\x20depth\x20fo' + 'rmat.';
                    }
                    _0x2d701c['bindRender' + 'buffer'](_0x2d701c['RENDERBUFF' + 'ER'], null);
                }
            }
            _0x2d701c['bindFrameb' + 'uffer'](_0x2d701c['FRAMEBUFFE' + 'R'], null), this['_setWarpMo' + 'de'](_0x2d701c['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x2d701c['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_setAnisot' + 'ropy'](this['_anisoLeve' + 'l']), this['_readyed'] = !0x0, this['_activeRes' + 'ource'](), this['_setGPUMem' + 'ory'](_0x10a8d2 * _0x12f5bb * 0x4);
        }
        ['_start']() {
            var _0x3eface = _0x2247ad['LayaGL']['instance'];
            _0x3eface['bindFrameb' + 'uffer'](_0x3eface['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x13c6e8['_currentAc' + 'tive'] = this, this['_isCameraT' + 'arget'] && (_0x5ac2c4['_instance']['invertY'] = !0x0), this['_readyed'] = !0x1;
        }
        ['_end']() {
            var _0x157548 = _0x2247ad['LayaGL']['instance'];
            _0x157548['bindFrameb' + 'uffer'](_0x157548['FRAMEBUFFE' + 'R'], null), _0x13c6e8['_currentAc' + 'tive'] = null, this['_isCameraT' + 'arget'] && (_0x5ac2c4['_instance']['invertY'] = !0x1), this['_readyed'] = !0x0;
        }
        ['getData'](_0x197ec6, _0x3c8056, _0xa43a15, _0x40c8fe, _0x2e9c92) {
            if (_0x2247ad['Render']['isConchApp'] && 0x2 == window['conchConfi' + 'g']['threadMode'])
                throw 'native\x202\x20t' + 'hread\x20mode' + '\x20use\x20getDa' + 'taAsync';
            var _0x18e871 = _0x2247ad['LayaGL']['instance'];
            return _0x18e871['bindFrameb' + 'uffer'](_0x18e871['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x18e871['checkFrame' + 'bufferStat' + 'us'](_0x18e871['FRAMEBUFFE' + 'R']) === _0x18e871['FRAMEBUFFE' + 'R_COMPLETE'] ? (_0x18e871['readPixels'](_0x197ec6, _0x3c8056, _0xa43a15, _0x40c8fe, _0x18e871['RGBA'], _0x18e871['UNSIGNED_B' + 'YTE'], _0x2e9c92), _0x18e871['bindFrameb' + 'uffer'](_0x18e871['FRAMEBUFFE' + 'R'], null), _0x2e9c92) : (_0x18e871['bindFrameb' + 'uffer'](_0x18e871['FRAMEBUFFE' + 'R'], null), null);
        }
        ['_disposeRe' + 'source']() {
            if (this['_frameBuff' + 'er']) {
                var _0x1ac6d7 = _0x2247ad['LayaGL']['instance'];
                _0x1ac6d7['deleteText' + 'ure'](this['_glTexture']), _0x1ac6d7['deleteFram' + 'ebuffer'](this['_frameBuff' + 'er']), _0x1ac6d7['deleteRend' + 'erbuffer'](this['_depthSten' + 'cilBuffer']), this['_glTexture'] = null, this['_frameBuff' + 'er'] = null, this['_depthSten' + 'cilBuffer'] = null, this['_setGPUMem' + 'ory'](0x0);
            }
        }
        ['getDataAsy' + 'nc'](_0x5bbf55, _0x5c4acc, _0x4d7e41, _0x15733d, _0x1e560d) {
            var _0x4780cb = _0x2247ad['LayaGL']['instance'];
            _0x4780cb['bindFrameb' + 'uffer'](_0x4780cb['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x4780cb['readPixels' + 'Async'](_0x5bbf55, _0x5c4acc, _0x4d7e41, _0x15733d, _0x4780cb['RGBA'], _0x4780cb['UNSIGNED_B' + 'YTE'], function (_0x3c0e08) {
                _0x1e560d(new Uint8Array(_0x3c0e08));
            }), _0x4780cb['bindFrameb' + 'uffer'](_0x4780cb['FRAMEBUFFE' + 'R'], null);
        }
    }
    _0x13c6e8['_pool'] = [];
    class _0x590056 {
        constructor() {
            this['_mask'] = [], this['_length'] = 0x0;
        }
        ['_intersect' + 'ionDefineD' + 'atas'](_0x115c3a) {
            for (var _0x3563d4 = _0x115c3a['_mask'], _0x5d7705 = this['_mask'], _0x4ff60e = this['_length'] - 0x1; _0x4ff60e >= 0x0; _0x4ff60e--) {
                var _0x367266 = _0x5d7705[_0x4ff60e] & _0x3563d4[_0x4ff60e];
                0x0 == _0x367266 && _0x4ff60e == this['_length'] - 0x1 ? this['_length']-- : _0x5d7705[_0x4ff60e] = _0x367266;
            }
        }
        ['add'](_0x2dc30e) {
            var _0x48ce7f = _0x2dc30e['_index'], _0x1a59d9 = _0x48ce7f + 0x1, _0x3f14b6 = this['_mask'], _0x14561c = this['_length'];
            if (_0x14561c < _0x1a59d9) {
                for (_0x3f14b6['length'] < _0x1a59d9 && (_0x3f14b6['length'] = _0x1a59d9); _0x14561c < _0x48ce7f; _0x14561c++)
                    _0x3f14b6[_0x14561c] = 0x0;
                _0x3f14b6[_0x48ce7f] = _0x2dc30e['_value'], this['_length'] = _0x1a59d9;
            } else
                _0x1a59d9 > this['_length'] ? (_0x3f14b6[_0x48ce7f] = _0x2dc30e['_value'], this['_length'] = _0x1a59d9) : _0x3f14b6[_0x48ce7f] |= _0x2dc30e['_value'];
        }
        ['remove'](_0x4c7186) {
            var _0x4af44e = _0x4c7186['_index'], _0x4a28af = this['_mask'], _0x195492 = this['_length'] - 0x1;
            if (!(_0x4af44e > _0x195492)) {
                var _0x18ca39 = _0x4a28af[_0x4af44e] & ~_0x4c7186['_value'];
                _0x4af44e == _0x195492 && 0x0 === _0x18ca39 ? this['_length']-- : _0x4a28af[_0x4af44e] = _0x18ca39;
            }
        }
        ['addDefineD' + 'atas'](_0x5d699a) {
            var _0x18f42 = _0x5d699a['_mask'], _0xc4dd55 = _0x5d699a['_length'], _0x5f0726 = this['_mask'], _0x37a1a4 = _0x5f0726['length'];
            if (_0x37a1a4 < _0xc4dd55) {
                _0x5f0726['length'] = _0xc4dd55;
                for (var _0x301992 = 0x0; _0x301992 < _0x37a1a4; _0x301992++)
                    _0x5f0726[_0x301992] |= _0x18f42[_0x301992];
                for (; _0x37a1a4 < _0xc4dd55; _0x37a1a4++)
                    _0x5f0726[_0x37a1a4] = _0x18f42[_0x37a1a4];
                this['_length'] = _0xc4dd55;
            } else {
                for (_0x301992 = 0x0; _0x301992 < _0xc4dd55; _0x301992++)
                    _0x5f0726[_0x301992] |= _0x18f42[_0x301992];
                this['_length'] = Math['max'](this['_length'], _0xc4dd55);
            }
        }
        ['removeDefi' + 'neDatas'](_0x3da2ec) {
            for (var _0xbb1bb8 = _0x3da2ec['_mask'], _0x430761 = this['_mask'], _0x38e5e6 = this['_length'] - 0x1, _0xd16fd3 = _0x3da2ec['_length'] - 0x1; _0xd16fd3 >= 0x0; _0xd16fd3--)
                if (!(_0xd16fd3 > _0x38e5e6)) {
                    var _0x2216be = _0x430761[_0xd16fd3] & ~_0xbb1bb8[_0xd16fd3];
                    _0xd16fd3 == _0x38e5e6 && 0x0 === _0x2216be ? (_0x38e5e6--, this['_length']--) : _0x430761[_0xd16fd3] = _0x2216be;
                }
        }
        ['has'](_0x186548) {
            var _0x24225d = _0x186548['_index'];
            return !(_0x24225d >= this['_length']) && 0x0 != (this['_mask'][_0x24225d] & _0x186548['_value']);
        }
        ['clear']() {
            this['_length'] = 0x0;
        }
        ['cloneTo'](_0x13a18c) {
            var _0x180068 = _0x13a18c, _0x199cef = _0x180068['_mask'], _0x21867c = this['_mask'], _0x1c083e = this['_length'];
            _0x199cef['length'] = _0x1c083e;
            for (var _0x342258 = 0x0; _0x342258 < _0x1c083e; _0x342258++)
                _0x199cef[_0x342258] = _0x21867c[_0x342258];
            _0x180068['_length'] = _0x1c083e;
        }
        ['clone']() {
            var _0x52708c = new _0x590056();
            return this['cloneTo'](_0x52708c), _0x52708c;
        }
    }
    class _0x162ed5 {
        constructor(_0x23126b, _0x2b4bde) {
            this['_index'] = _0x23126b, this['_value'] = _0x2b4bde;
        }
    }
    class _0x4becb4 {
        constructor(_0x1d881f, _0x2e938d, _0x1a2f79, _0x8d5f52) {
            this['_subShader' + 'Index'] = 0x0, this['_passIndex'] = 0x0, this['setValue'](_0x1d881f, _0x2e938d, _0x1a2f79, _0x8d5f52);
        }
        get ['shader']() {
            return this['_shader'];
        }
        get ['subShaderI' + 'ndex']() {
            return this['_subShader' + 'Index'];
        }
        get ['passIndex']() {
            return this['_passIndex'];
        }
        get ['defineName' + 's']() {
            return this['_defineNam' + 'es'];
        }
        ['setValue'](_0x52cb20, _0x2b297e, _0x258c09, _0x592474) {
            if (!_0x52cb20)
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20can\x27t' + '\x20be\x20null.';
            var _0xe5f14e = _0x52cb20['getSubShad' + 'erAt'](_0x2b297e);
            if (!_0xe5f14e)
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20don\x27t' + '\x20have\x20subS' + 'haderIndex' + '\x20of\x20' + _0x2b297e + '.';
            var _0x5dd356 = _0xe5f14e['_passes'][_0x258c09];
            if (!_0x5dd356)
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20don\x27t' + '\x20have\x20pass' + 'Index\x20of\x20' + _0x258c09 + '.';
            for (var _0x290e3f = _0x5dd356['_validDefi' + 'ne'], _0x2a07e1 = 0x0, _0x4c127b = _0x592474['length']; _0x2a07e1 < _0x4c127b; _0x2a07e1++) {
                var _0x5e8804 = _0x592474[_0x2a07e1];
                if (!_0x290e3f['has'](_0x1fc38b['Shader3D']['getDefineB' + 'yName'](_0x5e8804)))
                    throw 'ShaderVari' + 'antInfo:In' + 'valid\x20defi' + 'neName\x20' + _0x5e8804 + '\x20in\x20' + _0x52cb20['_name'] + ('\x20subShader' + 'Index\x20of\x20') + _0x2b297e + ('\x20passIndex' + '\x20of\x20') + _0x258c09 + '.';
            }
            this['_shader'] = _0x52cb20, this['_subShader' + 'Index'] = _0x2b297e, this['_passIndex'] = _0x258c09, this['_defineNam' + 'es'] = _0x592474;
        }
        ['equal'](_0x4d0230) {
            if (this['_shader'] !== _0x4d0230['_shader'] || this['_subShader' + 'Index'] !== _0x4d0230['_subShader' + 'Index'] || this['_passIndex'] !== _0x4d0230['_passIndex'])
                return !0x1;
            var _0x165fa = this['_defineNam' + 'es'], _0x797e74 = _0x4d0230['_defineNam' + 'es'];
            if (_0x165fa['length'] !== _0x797e74['length'])
                return !0x1;
            for (var _0x372297 = 0x0, _0x142845 = this['_defineNam' + 'es']['length']; _0x372297 < _0x142845; _0x372297++)
                if (_0x165fa[_0x372297] !== _0x797e74[_0x372297])
                    return !0x1;
            return !0x0;
        }
        ['clone']() {
            return new _0x4becb4(this['_shader'], this['_subShader' + 'Index'], this['_passIndex'], this['_defineNam' + 'es']['slice']());
        }
    }
    class _0x2eb04d {
        constructor() {
            this['_allCompil' + 'ed'] = !0x1, this['_variants'] = [];
        }
        get ['allCompile' + 'd']() {
            return this['_allCompil' + 'ed'];
        }
        get ['variantCou' + 'nt']() {
            return this['_variants']['length'];
        }
        ['add'](_0x2b2e8b) {
            for (var _0x2b0f1d = 0x0, _0x33dac7 = this['_variants']['length']; _0x2b0f1d < _0x33dac7; _0x2b0f1d++)
                if (this['_variants'][_0x2b0f1d]['equal'](_0x2b2e8b))
                    return !0x1;
            return this['_variants']['push'](_0x2b2e8b['clone']()), this['_allCompil' + 'ed'] = !0x1, !0x0;
        }
        ['remove'](_0x252e21) {
            for (var _0x16c82f = 0x0, _0x492561 = this['_variants']['length']; _0x16c82f < _0x492561; _0x16c82f++)
                if (this['_variants'][_0x16c82f]['equal'](_0x252e21))
                    return this['_variants']['splice'](_0x16c82f, 0x1), !0x0;
            return !0x1;
        }
        ['contatins'](_0x1a8516) {
            for (var _0x422e69 = 0x0, _0x55020c = this['_variants']['length']; _0x422e69 < _0x55020c; _0x422e69++)
                if (this['_variants'][_0x422e69]['equal'](_0x1a8516))
                    return !0x0;
            return !0x1;
        }
        ['getByIndex'](_0x416d7b) {
            return this['_variants'][_0x416d7b];
        }
        ['clear']() {
            this['_variants']['length'] = 0x0;
        }
        ['compile']() {
            if (!this['_allCompil' + 'ed']) {
                for (var _0x387439 = this['_variants'], _0x5d2970 = 0x0, _0x38e68b = _0x387439['length']; _0x5d2970 < _0x38e68b; _0x5d2970++) {
                    var _0x5db3fa = _0x387439[_0x5d2970];
                    _0x1fc38b['Shader3D']['compileSha' + 'derByDefin' + 'eNames'](_0x5db3fa['_shader']['_name'], _0x5db3fa['_subShader' + 'Index'], _0x5db3fa['_passIndex'], _0x5db3fa['_defineNam' + 'es']);
                }
                this['_allCompil' + 'ed'] = !0x0;
            }
        }
    }
    class _0x38ffce {
        constructor(_0x1a8007, _0x2920de, _0x4055f8, _0x45a1a8) {
            this['_attribute' + 'Map'] = null, this['_uniformMa' + 'p'] = null, this['_enableIns' + 'tancing'] = !0x1, this['_subShader' + 's'] = [], this['_name'] = _0x1a8007, this['_attribute' + 'Map'] = _0x2920de, this['_uniformMa' + 'p'] = _0x4055f8, this['_enableIns' + 'tancing'] = _0x45a1a8;
        }
        static ['_getNamesB' + 'yDefineDat' + 'a'](_0x50c21f, _0x6cfc9a) {
            var _0x381c92 = _0x38ffce['_maskMap'], _0x50901e = _0x50c21f['_mask'];
            _0x6cfc9a['length'] = 0x0;
            for (var _0x26b655 = 0x0, _0x440202 = _0x50c21f['_length']; _0x26b655 < _0x440202; _0x26b655++)
                for (var _0xb0832e = _0x381c92[_0x26b655], _0x4d11cc = _0x50901e[_0x26b655], _0x154bdc = 0x0; _0x154bdc < 0x20; _0x154bdc++) {
                    var _0x3d7016 = 0x1 << _0x154bdc;
                    if (_0x4d11cc > 0x0 && _0x3d7016 > _0x4d11cc)
                        break;
                    _0x4d11cc & _0x3d7016 && _0x6cfc9a['push'](_0xb0832e[_0x3d7016]);
                }
        }
        static ['getDefineB' + 'yName'](_0x5d18b1) {
            var _0x4b749c = _0x38ffce['_defineMap'][_0x5d18b1];
            if (!_0x4b749c) {
                var _0x1d2a63 = _0x38ffce['_maskMap'], _0x16535c = _0x38ffce['_defineCou' + 'nter'], _0x4f5183 = Math['floor'](_0x16535c / 0x20), _0x19c370 = 0x1 << _0x16535c % 0x20;
                _0x4b749c = new _0x162ed5(_0x4f5183, _0x19c370), _0x38ffce['_defineMap'][_0x5d18b1] = _0x4b749c, _0x4f5183 == _0x1d2a63['length'] && (_0x1d2a63['length']++, _0x1d2a63[_0x4f5183] = {}), _0x1d2a63[_0x4f5183][_0x19c370] = _0x5d18b1, _0x38ffce['_defineCou' + 'nter']++;
            }
            return _0x4b749c;
        }
        static ['propertyNa' + 'meToID'](_0x360778) {
            if (null != _0x38ffce['_propertyN' + 'ameMap'][_0x360778])
                return _0x38ffce['_propertyN' + 'ameMap'][_0x360778];
            var _0x3d3803 = _0x38ffce['_propertyN' + 'ameCounter']++;
            return _0x38ffce['_propertyN' + 'ameMap'][_0x360778] = _0x3d3803, _0x3d3803;
        }
        static ['addInclude'](_0x469108, _0x2611ff) {
            _0x2611ff = _0x2611ff['replace'](_0x2247ad['ShaderComp' + 'ile']['_clearCR'], ''), _0x2247ad['ShaderComp' + 'ile']['addInclude'](_0x469108, _0x2611ff);
        }
        static ['compileSha' + 'derByDefin' + 'eNames'](_0x31feb3, _0x3f4fb9, _0x36ae8e, _0xf47a0c) {
            var _0x459305 = _0x38ffce['find'](_0x31feb3);
            if (_0x459305) {
                var _0x2421cc = _0x459305['getSubShad' + 'erAt'](_0x3f4fb9);
                if (_0x2421cc) {
                    var _0x2d5a80 = _0x2421cc['_passes'][_0x36ae8e];
                    if (_0x2d5a80) {
                        var _0xd01bcb = _0x38ffce['_compileDe' + 'fineDatas'];
                        _0xd01bcb['clear']();
                        for (var _0xc99425 = 0x0, _0x451e75 = _0xf47a0c['length']; _0xc99425 < _0x451e75; _0xc99425++)
                            _0xd01bcb['add'](_0x38ffce['getDefineB' + 'yName'](_0xf47a0c[_0xc99425]));
                        _0x2d5a80['withCompil' + 'e'](_0xd01bcb);
                    } else
                        console['warn']('Shader3D:\x20' + 'unknown\x20pa' + 'ssIndex.');
                } else
                    console['warn']('Shader3D:\x20' + 'unknown\x20su' + 'bShaderInd' + 'ex.');
            } else
                console['warn']('Shader3D:\x20' + 'unknown\x20sh' + 'ader\x20name.');
        }
        static ['add'](_0x3fc723, _0x2af0e3 = null, _0x1113dd = null, _0x32fec4 = !0x1) {
            return _0x38ffce['_preCompil' + 'eShader'][_0x3fc723] = new _0x38ffce(_0x3fc723, _0x2af0e3, _0x1113dd, _0x32fec4);
        }
        static ['find'](_0x49b41b) {
            return _0x38ffce['_preCompil' + 'eShader'][_0x49b41b];
        }
        get ['name']() {
            return this['_name'];
        }
        ['addSubShad' + 'er'](_0x179105) {
            this['_subShader' + 's']['push'](_0x179105), _0x179105['_owner'] = this;
        }
        ['getSubShad' + 'erAt'](_0x242d4b) {
            return this['_subShader' + 's'][_0x242d4b];
        }
        static ['compileSha' + 'der'](_0x2ae70c, _0x4f209f, _0x2c054b, ..._0x45ea27) {
            var _0x1c1cb1 = _0x38ffce['find'](_0x2ae70c);
            if (_0x1c1cb1) {
                var _0x570d0b = _0x1c1cb1['getSubShad' + 'erAt'](_0x4f209f);
                if (_0x570d0b) {
                    var _0x8c0486 = _0x570d0b['_passes'][_0x2c054b];
                    if (_0x8c0486) {
                        var _0x73e32e = _0x38ffce['_compileDe' + 'fineDatas'], _0x42720c = _0x73e32e['_mask'];
                        _0x42720c['length'] = 0x0;
                        for (var _0x46d3d8 = 0x0, _0x3ad4e7 = _0x45ea27['length']; _0x46d3d8 < _0x3ad4e7; _0x46d3d8++)
                            _0x42720c['push'](_0x45ea27[_0x46d3d8]);
                        _0x73e32e['_length'] = _0x45ea27['length'], _0x8c0486['withCompil' + 'e'](_0x73e32e);
                    } else
                        console['warn']('Shader3D:\x20' + 'unknown\x20pa' + 'ssIndex.');
                } else
                    console['warn']('Shader3D:\x20' + 'unknown\x20su' + 'bShaderInd' + 'ex.');
            } else
                console['warn']('Shader3D:\x20' + 'unknown\x20sh' + 'ader\x20name.');
        }
    }
    _0x38ffce['_compileDe' + 'fineDatas'] = new _0x590056(), _0x38ffce['RENDER_STA' + 'TE_CULL'] = 0x0, _0x38ffce['RENDER_STA' + 'TE_BLEND'] = 0x1, _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'] = 0x2, _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'] = 0x3, _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC_RGB'] = 0x4, _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST_RGB'] = 0x5, _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC_ALPHA'] = 0x6, _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST_ALPHA'] = 0x7, _0x38ffce['RENDER_STA' + 'TE_BLEND_C' + 'ONST_COLOR'] = 0x8, _0x38ffce['RENDER_STA' + 'TE_BLEND_E' + 'QUATION'] = 0x9, _0x38ffce['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_RG' + 'B'] = 0xa, _0x38ffce['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_AL' + 'PHA'] = 0xb, _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'] = 0xc, _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE'] = 0xd, _0x38ffce['PERIOD_CUS' + 'TOM'] = 0x0, _0x38ffce['PERIOD_MAT' + 'ERIAL'] = 0x1, _0x38ffce['PERIOD_SPR' + 'ITE'] = 0x2, _0x38ffce['PERIOD_CAM' + 'ERA'] = 0x3, _0x38ffce['PERIOD_SCE' + 'NE'] = 0x4, _0x38ffce['_propertyN' + 'ameCounter'] = 0x0, _0x38ffce['_propertyN' + 'ameMap'] = {}, _0x38ffce['_defineCou' + 'nter'] = 0x0, _0x38ffce['_defineMap'] = {}, _0x38ffce['_preCompil' + 'eShader'] = {}, _0x38ffce['_maskMap'] = [], _0x38ffce['debugMode'] = !0x1, _0x38ffce['debugShade' + 'rVariantCo' + 'llection'] = new _0x2eb04d();
    class _0x5e515b {
        constructor(_0x12d1aa = null) {
            this['_ownerReso' + 'urce'] = null, this['_data'] = null, this['_defineDat' + 'as'] = new _0x590056(), this['_runtimeCo' + 'pyValues'] = [], this['_ownerReso' + 'urce'] = _0x12d1aa, this['_initData']();
        }
        ['_initData']() {
            this['_data'] = new Object();
        }
        ['getData']() {
            return this['_data'];
        }
        ['addDefine'](_0x27a5ce) {
            this['_defineDat' + 'as']['add'](_0x27a5ce);
        }
        ['removeDefi' + 'ne'](_0x488091) {
            this['_defineDat' + 'as']['remove'](_0x488091);
        }
        ['hasDefine'](_0x3f45f1) {
            return this['_defineDat' + 'as']['has'](_0x3f45f1);
        }
        ['clearDefin' + 'e']() {
            this['_defineDat' + 'as']['clear']();
        }
        ['getBool'](_0x2c3ce7) {
            return this['_data'][_0x2c3ce7];
        }
        ['setBool'](_0x294ba1, _0x32afc7) {
            this['_data'][_0x294ba1] = _0x32afc7;
        }
        ['getInt'](_0x4ab525) {
            return this['_data'][_0x4ab525];
        }
        ['setInt'](_0x295890, _0x31a3e7) {
            this['_data'][_0x295890] = _0x31a3e7;
        }
        ['getNumber'](_0x2dd2c2) {
            return this['_data'][_0x2dd2c2];
        }
        ['setNumber'](_0x109c95, _0x3915a2) {
            this['_data'][_0x109c95] = _0x3915a2;
        }
        ['getVector2'](_0x1143f5) {
            return this['_data'][_0x1143f5];
        }
        ['setVector2'](_0x50d3bd, _0x17f3cd) {
            this['_data'][_0x50d3bd] = _0x17f3cd;
        }
        ['getVector3'](_0xef4ba6) {
            return this['_data'][_0xef4ba6];
        }
        ['setVector3'](_0x36c61e, _0x2c9152) {
            this['_data'][_0x36c61e] = _0x2c9152;
        }
        ['getVector'](_0x1f9044) {
            return this['_data'][_0x1f9044];
        }
        ['setVector'](_0x54954c, _0x4453f6) {
            this['_data'][_0x54954c] = _0x4453f6;
        }
        ['getQuatern' + 'ion'](_0x315ca5) {
            return this['_data'][_0x315ca5];
        }
        ['setQuatern' + 'ion'](_0x17dae3, _0x276dc4) {
            this['_data'][_0x17dae3] = _0x276dc4;
        }
        ['getMatrix4' + 'x4'](_0x5ae69e) {
            return this['_data'][_0x5ae69e];
        }
        ['setMatrix4' + 'x4'](_0x4baaa2, _0x17111b) {
            this['_data'][_0x4baaa2] = _0x17111b;
        }
        ['getBuffer'](_0x49720c) {
            return this['_data'][_0x49720c];
        }
        ['setBuffer'](_0x35cdee, _0x59c27f) {
            this['_data'][_0x35cdee] = _0x59c27f;
        }
        ['setTexture'](_0x3fa92d, _0x3b1eaf) {
            var _0x1feb2a = this['_data'][_0x3fa92d];
            this['_data'][_0x3fa92d] = _0x3b1eaf, this['_ownerReso' + 'urce'] && this['_ownerReso' + 'urce']['referenceC' + 'ount'] > 0x0 && (_0x1feb2a && _0x1feb2a['_removeRef' + 'erence'](), _0x3b1eaf && _0x3b1eaf['_addRefere' + 'nce']());
        }
        ['getTexture'](_0x586931) {
            return this['_data'][_0x586931];
        }
        ['setAttribu' + 'te'](_0x39895a, _0x34d2ae) {
            this['_data'][_0x39895a] = _0x34d2ae;
        }
        ['getAttribu' + 'te'](_0x14a53e) {
            return this['_data'][_0x14a53e];
        }
        ['getLength']() {
            return this['_data']['length'];
        }
        ['setLength'](_0x240ff7) {
            this['_data']['length'] = _0x240ff7;
        }
        ['cloneTo'](_0x115bcf) {
            var _0x14a144 = _0x115bcf, _0x2521df = _0x14a144['_data'];
            for (var _0x3b3230 in this['_data']) {
                var _0x598fd1 = this['_data'][_0x3b3230];
                if (null != _0x598fd1) {
                    if ('number' == typeof _0x598fd1)
                        _0x2521df[_0x3b3230] = _0x598fd1;
                    else {
                        if ('number' == typeof _0x598fd1)
                            _0x2521df[_0x3b3230] = _0x598fd1;
                        else {
                            if ('boolean' == typeof _0x598fd1)
                                _0x2521df[_0x3b3230] = _0x598fd1;
                            else {
                                if (_0x598fd1 instanceof _0x2d45ed) {
                                    var _0x27200a = _0x2521df[_0x3b3230] || (_0x2521df[_0x3b3230] = new _0x2d45ed());
                                    _0x598fd1['cloneTo'](_0x27200a), _0x2521df[_0x3b3230] = _0x27200a;
                                } else {
                                    if (_0x598fd1 instanceof _0x43b358) {
                                        var _0x2ae8f2 = _0x2521df[_0x3b3230] || (_0x2521df[_0x3b3230] = new _0x43b358());
                                        _0x598fd1['cloneTo'](_0x2ae8f2), _0x2521df[_0x3b3230] = _0x2ae8f2;
                                    } else {
                                        if (_0x598fd1 instanceof _0x4cec8f) {
                                            var _0x21149c = _0x2521df[_0x3b3230] || (_0x2521df[_0x3b3230] = new _0x4cec8f());
                                            _0x598fd1['cloneTo'](_0x21149c), _0x2521df[_0x3b3230] = _0x21149c;
                                        } else {
                                            if (_0x598fd1 instanceof _0x334e9d) {
                                                var _0x4c996d = _0x2521df[_0x3b3230] || (_0x2521df[_0x3b3230] = new _0x334e9d());
                                                _0x598fd1['cloneTo'](_0x4c996d), _0x2521df[_0x3b3230] = _0x4c996d;
                                            } else
                                                _0x598fd1 instanceof _0x2247ad['BaseTextur' + 'e'] && (_0x2521df[_0x3b3230] = _0x598fd1);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDat' + 'as']['cloneTo'](_0x14a144['_defineDat' + 'as']);
        }
        ['clone']() {
            var _0x4fc5df = new _0x5e515b();
            return this['cloneTo'](_0x4fc5df), _0x4fc5df;
        }
        ['cloneToFor' + 'Native'](_0x17d230) {
            var _0xb1ca88 = _0x17d230;
            this['_int32Data']['length'] - _0xb1ca88['_int32Data']['length'] > 0x0 && _0xb1ca88['needRenewA' + 'rrayBuffer' + 'ForNative'](this['_int32Data']['length']), _0xb1ca88['_int32Data']['set'](this['_int32Data'], 0x0);
            var _0x110a86 = _0xb1ca88['_nativeArr' + 'ay'], _0x1144bc = this['_nativeArr' + 'ay']['length'];
            _0x110a86['length'] = _0x1144bc;
            for (var _0x470926 = 0x0; _0x470926 < _0x1144bc; _0x470926++) {
                var _0xa72d5e = this['_nativeArr' + 'ay'][_0x470926];
                if (_0xa72d5e) {
                    if ('number' == typeof _0xa72d5e)
                        _0x110a86[_0x470926] = _0xa72d5e, _0xb1ca88['setNumber'](_0x470926, _0xa72d5e);
                    else {
                        if ('number' == typeof _0xa72d5e)
                            _0x110a86[_0x470926] = _0xa72d5e, _0xb1ca88['setInt'](_0x470926, _0xa72d5e);
                        else {
                            if ('boolean' == typeof _0xa72d5e)
                                _0x110a86[_0x470926] = _0xa72d5e, _0xb1ca88['setBool'](_0x470926, _0xa72d5e);
                            else {
                                if (_0xa72d5e instanceof _0x2d45ed) {
                                    var _0x1cab4e = _0x110a86[_0x470926] || (_0x110a86[_0x470926] = new _0x2d45ed());
                                    _0xa72d5e['cloneTo'](_0x1cab4e), _0x110a86[_0x470926] = _0x1cab4e, _0xb1ca88['setVector2'](_0x470926, _0x1cab4e);
                                } else {
                                    if (_0xa72d5e instanceof _0x43b358) {
                                        var _0xdb513e = _0x110a86[_0x470926] || (_0x110a86[_0x470926] = new _0x43b358());
                                        _0xa72d5e['cloneTo'](_0xdb513e), _0x110a86[_0x470926] = _0xdb513e, _0xb1ca88['setVector3'](_0x470926, _0xdb513e);
                                    } else {
                                        if (_0xa72d5e instanceof _0x4cec8f) {
                                            var _0x460e24 = _0x110a86[_0x470926] || (_0x110a86[_0x470926] = new _0x4cec8f());
                                            _0xa72d5e['cloneTo'](_0x460e24), _0x110a86[_0x470926] = _0x460e24, _0xb1ca88['setVector'](_0x470926, _0x460e24);
                                        } else {
                                            if (_0xa72d5e instanceof _0x334e9d) {
                                                var _0x4e459d = _0x110a86[_0x470926] || (_0x110a86[_0x470926] = new _0x334e9d());
                                                _0xa72d5e['cloneTo'](_0x4e459d), _0x110a86[_0x470926] = _0x4e459d, _0xb1ca88['setMatrix4' + 'x4'](_0x470926, _0x4e459d);
                                            } else
                                                _0xa72d5e instanceof _0x2247ad['BaseTextur' + 'e'] && (_0x110a86[_0x470926] = _0xa72d5e, _0xb1ca88['setTexture'](_0x470926, _0xa72d5e));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDat' + 'as']['cloneTo'](_0xb1ca88['_defineDat' + 'as']);
        }
        ['_initDataF' + 'orNative']() {
            this['_frameCoun' + 't'] = -0x1, this['_runtimeCo' + 'pyValues']['length'] = 0x0, this['_nativeArr' + 'ay'] = [], this['_data'] = new ArrayBuffer(0x20), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Da' + 'ta'] = new Float32Array(this['_data']), _0x2247ad['LayaGL']['instance']['createArra' + 'yBufferRef'](this['_data'], _0x2247ad['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0);
        }
        ['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x402f47) {
            if (_0x402f47 >= this['_int32Data']['length']) {
                var _0x53db52 = 0x4 * (_0x402f47 + 0x1), _0x166e0b = this['_int32Data'], _0xafcc9b = this['_data']['conchRef'], _0x19ddda = this['_data']['_ptrID'];
                this['_data'] = new ArrayBuffer(_0x53db52), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Da' + 'ta'] = new Float32Array(this['_data']), this['_data']['conchRef'] = _0xafcc9b, this['_data']['_ptrID'] = _0x19ddda, _0x166e0b && this['_int32Data']['set'](_0x166e0b, 0x0);
                var _0x19f3b7 = _0x2247ad['LayaGL']['instance'];
                _0x19f3b7['updateArra' + 'yBufferRef'] ? _0x19f3b7['updateArra' + 'yBufferRef'](this['_data']['_ptrID'], _0xafcc9b['isSyncToRe' + 'nder'](), this['_data']) : window['conch']['updateArra' + 'yBufferRef'](this['_data']['_ptrID'], _0xafcc9b['isSyncToRe' + 'nder'](), this['_data']);
            }
        }
        ['getDataFor' + 'Native']() {
            return this['_nativeArr' + 'ay'];
        }
        ['getIntForN' + 'ative'](_0x5c744d) {
            return this['_int32Data'][_0x5c744d];
        }
        ['setIntForN' + 'ative'](_0x57f533, _0x14b53d) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x57f533), this['_int32Data'][_0x57f533] = _0x14b53d, this['_nativeArr' + 'ay'][_0x57f533] = _0x14b53d;
        }
        ['getBoolFor' + 'Native'](_0x182eb6) {
            return 0x1 == this['_int32Data'][_0x182eb6];
        }
        ['setBoolFor' + 'Native'](_0x51d947, _0x1933f9) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x51d947), this['_int32Data'][_0x51d947] = _0x1933f9 ? 0x1 : 0x0, this['_nativeArr' + 'ay'][_0x51d947] = _0x1933f9;
        }
        ['getNumberF' + 'orNative'](_0x59f144) {
            return this['_float32Da' + 'ta'][_0x59f144];
        }
        ['setNumberF' + 'orNative'](_0x302f31, _0xb52650) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x302f31), this['_float32Da' + 'ta'][_0x302f31] = _0xb52650, this['_nativeArr' + 'ay'][_0x302f31] = _0xb52650;
        }
        ['getMatrix4' + 'x4ForNativ' + 'e'](_0x237e2d) {
            return this['_nativeArr' + 'ay'][_0x237e2d];
        }
        ['setMatrix4' + 'x4ForNativ' + 'e'](_0x8eddf5, _0x54a143) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x8eddf5), this['_nativeArr' + 'ay'][_0x8eddf5] = _0x54a143;
            var _0x1f5336 = this['setReferen' + 'ceForNativ' + 'e'](_0x54a143['elements']);
            this['_int32Data'][_0x8eddf5] = _0x1f5336;
        }
        ['getVectorF' + 'orNative'](_0x103820) {
            return this['_nativeArr' + 'ay'][_0x103820];
        }
        ['setVectorF' + 'orNative'](_0x1d12db, _0x40b274) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x1d12db), this['_nativeArr' + 'ay'][_0x1d12db] = _0x40b274, _0x40b274['elements'] || _0x40b274['forNativeE' + 'lement']();
            var _0x399d59 = this['setReferen' + 'ceForNativ' + 'e'](_0x40b274['elements']);
            this['_int32Data'][_0x1d12db] = _0x399d59;
        }
        ['getVector2' + 'ForNative'](_0x212627) {
            return this['_nativeArr' + 'ay'][_0x212627];
        }
        ['setVector2' + 'ForNative'](_0xa26073, _0x21839d) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0xa26073), this['_nativeArr' + 'ay'][_0xa26073] = _0x21839d, _0x21839d['elements'] || _0x21839d['forNativeE' + 'lement']();
            var _0x5be61d = this['setReferen' + 'ceForNativ' + 'e'](_0x21839d['elements']);
            this['_int32Data'][_0xa26073] = _0x5be61d;
        }
        ['getVector3' + 'ForNative'](_0x717db4) {
            return this['_nativeArr' + 'ay'][_0x717db4];
        }
        ['setVector3' + 'ForNative'](_0x5e00ee, _0x3da484) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x5e00ee), this['_nativeArr' + 'ay'][_0x5e00ee] = _0x3da484, _0x3da484['elements'] || _0x3da484['forNativeE' + 'lement']();
            var _0xa26c5b = this['setReferen' + 'ceForNativ' + 'e'](_0x3da484['elements']);
            this['_int32Data'][_0x5e00ee] = _0xa26c5b;
        }
        ['getQuatern' + 'ionForNati' + 've'](_0x421ceb) {
            return this['_nativeArr' + 'ay'][_0x421ceb];
        }
        ['setQuatern' + 'ionForNati' + 've'](_0x36bd25, _0x22d644) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x36bd25), this['_nativeArr' + 'ay'][_0x36bd25] = _0x22d644, _0x22d644['elements'] || _0x22d644['forNativeE' + 'lement']();
            var _0x4eaba5 = this['setReferen' + 'ceForNativ' + 'e'](_0x22d644['elements']);
            this['_int32Data'][_0x36bd25] = _0x4eaba5;
        }
        ['getBufferF' + 'orNative'](_0x42eccc) {
            return this['_nativeArr' + 'ay'][_0x42eccc];
        }
        ['setBufferF' + 'orNative'](_0x23387a, _0x124cdd) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x23387a), this['_nativeArr' + 'ay'][_0x23387a] = _0x124cdd;
            var _0x204ad8 = this['setReferen' + 'ceForNativ' + 'e'](_0x124cdd);
            this['_int32Data'][_0x23387a] = _0x204ad8;
        }
        ['getAttribu' + 'teForNativ' + 'e'](_0x34e6c2) {
            return this['_nativeArr' + 'ay'][_0x34e6c2];
        }
        ['setAttribu' + 'teForNativ' + 'e'](_0x262255, _0x5e1fd2) {
            this['_nativeArr' + 'ay'][_0x262255] = _0x5e1fd2, _0x5e1fd2['_ptrID'] || _0x2247ad['LayaGL']['instance']['createArra' + 'yBufferRef'](_0x5e1fd2, _0x2247ad['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0), _0x2247ad['LayaGL']['instance']['syncBuffer' + 'ToRenderTh' + 'read'](_0x5e1fd2), this['_int32Data'][_0x262255] = _0x5e1fd2['_ptrID'];
        }
        ['getTexture' + 'ForNative'](_0x369270) {
            return this['_nativeArr' + 'ay'][_0x369270];
        }
        ['setTexture' + 'ForNative'](_0x3d237e, _0xf26f68) {
            if (_0xf26f68) {
                this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x3d237e);
                var _0x41869d = this['_nativeArr' + 'ay'][_0x3d237e];
                this['_nativeArr' + 'ay'][_0x3d237e] = _0xf26f68;
                var _0x24aaab = _0xf26f68['_getSource']() || _0xf26f68['defaulteTe' + 'xture']['_getSource']();
                this['_int32Data'][_0x3d237e] = _0x24aaab['id'], this['_ownerReso' + 'urce'] && this['_ownerReso' + 'urce']['referenceC' + 'ount'] > 0x0 && (_0x41869d && _0x41869d['_removeRef' + 'erence'](), _0xf26f68 && _0xf26f68['_addRefere' + 'nce']());
            }
        }
        ['setReferen' + 'ceForNativ' + 'e'](_0x4fa9f2) {
            this['clearRunti' + 'meCopyArra' + 'y']();
            var _0x4192da = 0x0, _0x28e679 = 0x0;
            return _0x5e515b['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] ? (_0x2247ad['LayaGL']['instance']['createArra' + 'yBufferRef' + 's'](_0x4fa9f2, _0x2247ad['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0, _0x2247ad['LayaGL']['ARRAY_BUFF' + 'ER_REF_REF' + 'ERENCE']), _0x4192da = 0x0, _0x28e679 = _0x4fa9f2['getPtrID'](_0x4192da)) : (_0x2247ad['LayaGL']['instance']['createArra' + 'yBufferRef' + 's'](_0x4fa9f2, _0x2247ad['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0, _0x2247ad['LayaGL']['ARRAY_BUFF' + 'ER_REF_COP' + 'Y']), _0x4192da = _0x4fa9f2['getRefNum']() - 0x1, _0x28e679 = _0x4fa9f2['getPtrID'](_0x4192da), this['_runtimeCo' + 'pyValues']['push']({
                'obj': _0x4fa9f2,
                'refID': _0x4192da,
                'ptrID': _0x28e679
            })), _0x2247ad['LayaGL']['instance']['syncBuffer' + 'ToRenderTh' + 'read'](_0x4fa9f2, _0x4192da), _0x28e679;
        }
        static ['setRuntime' + 'ValueMode'](_0x2de217) {
            _0x5e515b['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] = _0x2de217;
        }
        ['clearRunti' + 'meCopyArra' + 'y']() {
            var _0x3767f3 = _0x2247ad['Stat']['loopCount'];
            if (this['_frameCoun' + 't'] != _0x3767f3) {
                this['_frameCoun' + 't'] = _0x3767f3;
                for (var _0x1ebfc4 = 0x0, _0x487600 = this['_runtimeCo' + 'pyValues']['length']; _0x1ebfc4 < _0x487600; _0x1ebfc4++) {
                    this['_runtimeCo' + 'pyValues'][_0x1ebfc4]['obj']['clearRefNu' + 'm']();
                }
                this['_runtimeCo' + 'pyValues']['length'] = 0x0;
            }
        }
    }
    _0x5e515b['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] = !0x0;
    class _0x1206fe {
        constructor() {
            this['_composite' + 'Shader'] = _0x38ffce['find']('PostProces' + 'sComposite'), this['_composite' + 'ShaderData'] = new _0x5e515b(), this['_effects'] = [], this['_context'] = null, this['_context'] = new _0x3f7e39(), this['_context']['compositeS' + 'haderData'] = this['_composite' + 'ShaderData'];
        }
        static ['__init__']() {
            _0x1206fe['SHADERDEFI' + 'NE_BLOOM_L' + 'OW'] = _0x38ffce['getDefineB' + 'yName']('BLOOM_LOW'), _0x1206fe['SHADERDEFI' + 'NE_BLOOM'] = _0x38ffce['getDefineB' + 'yName']('BLOOM'), _0x1206fe['SHADERDEFI' + 'NE_FINALPA' + 'SS'] = _0x38ffce['getDefineB' + 'yName']('FINALPASS');
        }
        ['_init'](_0x15c1d7, _0x4404e1) {
            this['_context']['camera'] = _0x15c1d7, this['_context']['command'] = _0x4404e1;
        }
        ['_render']() {
            var _0xe8bcbf = _0x5e515b['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'];
            _0x2247ad['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x5e515b['setRuntime' + 'ValueMode'](!0x1);
            var _0x1a985 = this['_context']['camera'], _0x4d5f26 = _0x1a985['viewport'], _0x283701 = _0x13c6e8['createFrom' + 'Pool'](_0x5ac2c4['clientWidt' + 'h'], _0x5ac2c4['clientHeig' + 'ht'], _0x1a985['_getRender' + 'TextureFor' + 'mat'](), _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']), _0x48a6dd = _0x1a985['_internalR' + 'enderTextu' + 're'];
            this['_context']['command']['clear'](), this['_context']['source'] = _0x283701, this['_context']['destinatio' + 'n'] = _0x48a6dd, this['_context']['compositeS' + 'haderData']['clearDefin' + 'e'](), this['_context']['command']['blitScreen' + 'Triangle'](_0x48a6dd, _0x283701), this['_context']['compositeS' + 'haderData']['setTexture'](_0x1206fe['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'], _0x2247ad['Texture2D']['whiteTextu' + 're']);
            for (var _0x90aaba = 0x0, _0x183216 = this['_effects']['length']; _0x90aaba < _0x183216; _0x90aaba++)
                this['_effects'][_0x90aaba]['render'](this['_context']);
            this['_composite' + 'ShaderData']['addDefine'](_0x1206fe['SHADERDEFI' + 'NE_FINALPA' + 'SS']);
            var _0x38c793 = _0x1a985['_offScreen' + 'RenderText' + 'ure'], _0x150d56 = _0x38c793 || null;
            this['_context']['destinatio' + 'n'] = _0x150d56;
            var _0x510535 = _0x1a985['_getCanvas' + 'Width'](), _0x3f68c0 = _0x1a985['_getCanvas' + 'Height']();
            _0x1a985['_screenOff' + 'setScale']['setValue'](_0x4d5f26['x'] / _0x510535, _0x4d5f26['y'] / _0x3f68c0, _0x4d5f26['width'] / _0x510535, _0x4d5f26['height'] / _0x3f68c0), this['_context']['command']['blitScreen' + 'Triangle'](this['_context']['source'], _0x150d56, _0x1a985['_screenOff' + 'setScale'], this['_composite' + 'Shader'], this['_composite' + 'ShaderData']), _0x13c6e8['recoverToP' + 'ool'](_0x283701);
            var _0x4b650f = this['_context']['deferredRe' + 'leaseTextu' + 'res'];
            for (_0x90aaba = 0x0, _0x183216 = _0x4b650f['length']; _0x90aaba < _0x183216; _0x90aaba++)
                _0x13c6e8['recoverToP' + 'ool'](_0x4b650f[_0x90aaba]);
            _0x4b650f['length'] = 0x0, _0x2247ad['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x5e515b['setRuntime' + 'ValueMode'](_0xe8bcbf);
        }
        ['addEffect'](_0x3886b9) {
            this['_effects']['push'](_0x3886b9);
        }
        ['removeEffe' + 'ct'](_0x109c01) {
            var _0x41b200 = this['_effects']['indexOf'](_0x109c01);
            -0x1 !== _0x41b200 && this['_effects']['splice'](_0x41b200, 0x1);
        }
    }
    _0x1206fe['SHADERVALU' + 'E_MAINTEX'] = _0x38ffce['propertyNa' + 'meToID']('u_MainTex'), _0x1206fe['SHADERVALU' + 'E_BLOOMTEX'] = _0x38ffce['propertyNa' + 'meToID']('u_BloomTex'), _0x1206fe['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'] = _0x38ffce['propertyNa' + 'meToID']('u_AutoExpo' + 'sureTex'), _0x1206fe['SHADERVALU' + 'E_BLOOM_DI' + 'RTTEX'] = _0x38ffce['propertyNa' + 'meToID']('u_Bloom_Di' + 'rtTex'), _0x1206fe['SHADERVALU' + 'E_BLOOMTEX' + '_TEXELSIZE'] = _0x38ffce['propertyNa' + 'meToID']('u_BloomTex' + '_TexelSize'), _0x1206fe['SHADERVALU' + 'E_BLOOM_DI' + 'RTTILEOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_Bloom_Di' + 'rtTileOffs' + 'et'), _0x1206fe['SHADERVALU' + 'E_BLOOM_SE' + 'TTINGS'] = _0x38ffce['propertyNa' + 'meToID']('u_Bloom_Se' + 'ttings'), _0x1206fe['SHADERVALU' + 'E_BLOOM_CO' + 'LOR'] = _0x38ffce['propertyNa' + 'meToID']('u_Bloom_Co' + 'lor');
    class _0x4db44f extends _0x2247ad['EventDispa' + 'tcher'] {
        constructor(_0x546a1d, _0x3734e7 = null, _0x49f187 = null, _0x167fc8 = null, _0x114b39 = null) {
            super(), this['_owner'] = _0x546a1d, this['_children'] = [], this['_localMatr' + 'ix'] = new Float32Array(0x10), _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? (this['_localPosi' + 'tion'] = new _0x37e840(0x0, 0x0, 0x0, _0x3734e7), this['_localRota' + 'tion'] = new _0x4ba8a2(0x0, 0x0, 0x0, 0x1, _0x49f187), this['_localScal' + 'e'] = new _0x37e840(0x0, 0x0, 0x0, _0x167fc8), this['_worldMatr' + 'ix'] = _0x114b39) : (this['_localPosi' + 'tion'] = new _0x43b358(), this['_localRota' + 'tion'] = new _0x7cf2d3(), this['_localScal' + 'e'] = new _0x43b358(), this['_worldMatr' + 'ix'] = new Float32Array(0x10)), this['_localQuat' + 'ernionUpda' + 'te'] = !0x1, this['_locaEuler' + 'lUpdate'] = !0x1, this['_localUpda' + 'te'] = !0x1, this['_worldUpda' + 'te'] = !0x0;
        }
        ['_getlocalM' + 'atrix']() {
            return this['_localUpda' + 'te'] && (_0x101904['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](this['_localPosi' + 'tion'], this['_localRota' + 'tion'], this['_localScal' + 'e'], this['_localMatr' + 'ix']), this['_localUpda' + 'te'] = !0x1), this['_localMatr' + 'ix'];
        }
        ['_onWorldTr' + 'ansform']() {
            if (!this['_worldUpda' + 'te']) {
                this['_worldUpda' + 'te'] = !0x0, this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED']);
                for (var _0x5a1ec2 = 0x0, _0x1ad17f = this['_children']['length']; _0x5a1ec2 < _0x1ad17f; _0x5a1ec2++)
                    this['_children'][_0x5a1ec2]['_onWorldTr' + 'ansform']();
            }
        }
        get ['localPosit' + 'ion']() {
            return this['_localPosi' + 'tion'];
        }
        set ['localPosit' + 'ion'](_0x4b4fa8) {
            this['_localPosi' + 'tion'] = _0x4b4fa8, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        get ['localRotat' + 'ion']() {
            if (this['_localQuat' + 'ernionUpda' + 'te']) {
                var _0x45124b = this['_localRota' + 'tionEuler'];
                _0x7cf2d3['createFrom' + 'YawPitchRo' + 'll'](_0x45124b['y'] / _0x4db44f['_angleToRa' + 'ndin'], _0x45124b['x'] / _0x4db44f['_angleToRa' + 'ndin'], _0x45124b['z'] / _0x4db44f['_angleToRa' + 'ndin'], this['_localRota' + 'tion']), this['_localQuat' + 'ernionUpda' + 'te'] = !0x1;
            }
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x356974) {
            this['_localRota' + 'tion'] = _0x356974, this['_locaEuler' + 'lUpdate'] = !0x0, this['_localQuat' + 'ernionUpda' + 'te'] = !0x1, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        get ['localScale']() {
            return this['_localScal' + 'e'];
        }
        set ['localScale'](_0x3f4987) {
            this['_localScal' + 'e'] = _0x3f4987, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        get ['localRotat' + 'ionEuler']() {
            if (this['_locaEuler' + 'lUpdate']) {
                this['_localRota' + 'tion']['getYawPitc' + 'hRoll'](_0x4db44f['_tempVecto' + 'r3']);
                var _0x1cf598 = _0x4db44f['_tempVecto' + 'r3'], _0x471861 = this['_localRota' + 'tionEuler'];
                _0x471861['x'] = _0x1cf598['y'] * _0x4db44f['_angleToRa' + 'ndin'], _0x471861['y'] = _0x1cf598['x'] * _0x4db44f['_angleToRa' + 'ndin'], _0x471861['z'] = _0x1cf598['z'] * _0x4db44f['_angleToRa' + 'ndin'], this['_locaEuler' + 'lUpdate'] = !0x1;
            }
            return this['_localRota' + 'tionEuler'];
        }
        set ['localRotat' + 'ionEuler'](_0x53bb4b) {
            this['_localRota' + 'tionEuler'] = _0x53bb4b, this['_locaEuler' + 'lUpdate'] = !0x1, this['_localQuat' + 'ernionUpda' + 'te'] = !0x0, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        ['getWorldMa' + 'trix']() {
            if (!_0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_worldUpda' + 'te']) {
                if (null != this['_parent'])
                    _0x101904['matrix4x4M' + 'ultiplyFFF'](this['_parent']['getWorldMa' + 'trix'](), this['_getlocalM' + 'atrix'](), this['_worldMatr' + 'ix']);
                else {
                    var _0x57a953 = this['_worldMatr' + 'ix'];
                    _0x57a953[0x1] = _0x57a953[0x2] = _0x57a953[0x3] = _0x57a953[0x4] = _0x57a953[0x6] = _0x57a953[0x7] = _0x57a953[0x8] = _0x57a953[0x9] = _0x57a953[0xb] = _0x57a953[0xc] = _0x57a953[0xd] = _0x57a953[0xe] = 0x0, _0x57a953[0x0] = _0x57a953[0x5] = _0x57a953[0xa] = _0x57a953[0xf] = 0x1;
                }
                this['_worldUpda' + 'te'] = !0x1;
            }
            return _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_worldUpda' + 'te'] && (this['_worldUpda' + 'te'] = !0x1), this['_worldMatr' + 'ix'];
        }
        ['setParent'](_0x3bef9d) {
            if (this['_parent'] !== _0x3bef9d) {
                if (this['_parent']) {
                    var _0x3d21a8 = this['_parent']['_children'], _0x3702b1 = _0x3d21a8['indexOf'](this);
                    _0x3d21a8['splice'](_0x3702b1, 0x1);
                }
                _0x3bef9d && (_0x3bef9d['_children']['push'](this), _0x3bef9d && this['_onWorldTr' + 'ansform']()), this['_parent'] = _0x3bef9d;
            }
        }
    }
    _0x4db44f['_tempVecto' + 'r3'] = new _0x43b358(), _0x4db44f['_angleToRa' + 'ndin'] = 0xb4 / Math['PI'];
    class _0x7e09df {
        constructor(_0x19d59f = null, _0x1788a1 = null, _0x9ef26b = null, _0x119fcb = null) {
            this['_children'] = [], this['transform'] = new _0x4db44f(this, _0x19d59f, _0x1788a1, _0x9ef26b, _0x119fcb);
        }
        ['addChild'](_0x1c14e6) {
            _0x1c14e6['_parent'] = this, _0x1c14e6['transform']['setParent'](this['transform']), this['_children']['push'](_0x1c14e6);
        }
        ['removeChil' + 'd'](_0x26e813) {
            var _0x2b42cc = this['_children']['indexOf'](_0x26e813);
            -0x1 !== _0x2b42cc && this['_children']['splice'](_0x2b42cc, 0x1);
        }
        ['getChildBy' + 'Name'](_0x12bab7) {
            for (var _0x3bb13d = 0x0, _0x2c73cc = this['_children']['length']; _0x3bb13d < _0x2c73cc; _0x3bb13d++) {
                var _0x2bce9e = this['_children'][_0x3bb13d];
                if (_0x2bce9e['name'] === _0x12bab7)
                    return _0x2bce9e;
            }
            return null;
        }
        ['getChildBy' + 'Index'](_0x551906) {
            return this['_children'][_0x551906];
        }
        ['getChildCo' + 'unt']() {
            return this['_children']['length'];
        }
        ['cloneTo'](_0x26f164) {
            var _0x34870d = _0x26f164;
            _0x34870d['name'] = this['name'];
            for (var _0x2183e1 = 0x0, _0x42bef5 = this['_children']['length']; _0x2183e1 < _0x42bef5; _0x2183e1++) {
                var _0xaead4b = this['_children'][_0x2183e1], _0x43c6b9 = _0xaead4b['clone']();
                _0x34870d['addChild'](_0x43c6b9);
                var _0x5596d2 = _0xaead4b['transform'], _0x31285c = _0x43c6b9['transform'], _0x531bbb = _0x31285c['localPosit' + 'ion'], _0x23a967 = _0x31285c['localRotat' + 'ion'], _0x58f680 = _0x31285c['localScale'];
                _0x5596d2['localPosit' + 'ion']['cloneTo'](_0x531bbb), _0x5596d2['localRotat' + 'ion']['cloneTo'](_0x23a967), _0x5596d2['localScale']['cloneTo'](_0x58f680), _0x31285c['localPosit' + 'ion'] = _0x531bbb, _0x31285c['localRotat' + 'ion'] = _0x23a967, _0x31285c['localScale'] = _0x58f680;
            }
        }
        ['clone']() {
            var _0xb8f023 = new _0x7e09df();
            return this['cloneTo'](_0xb8f023), _0xb8f023;
        }
        ['_cloneNati' + 've'](_0x332a0b, _0x4a8f51, _0x6f3c6d, _0x419840, _0x33a9ad, _0xd86fe5, _0x19d42a) {
            var _0x410915 = _0x19d42a['_nativeCur' + 'CloneCount'];
            _0x33a9ad[_0x410915] = _0xd86fe5;
            var _0x4de603 = new Float32Array(_0x332a0b['buffer'], 0x3 * _0x410915 * 0x4, 0x3), _0x193732 = new Float32Array(_0x4a8f51['buffer'], 0x4 * _0x410915 * 0x4, 0x4), _0x474609 = new Float32Array(_0x6f3c6d['buffer'], 0x3 * _0x410915 * 0x4, 0x3), _0x5deef5 = new Float32Array(_0x419840['buffer'], 0x10 * _0x410915 * 0x4, 0x10), _0x4abd11 = new _0x7e09df(_0x4de603, _0x193732, _0x474609, _0x5deef5);
            return _0x4abd11['_worldMatr' + 'ixIndex'] = _0x410915, this['_cloneToNa' + 'tive'](_0x4abd11, _0x332a0b, _0x4a8f51, _0x6f3c6d, _0x419840, _0x33a9ad, _0x410915, _0x19d42a), _0x4abd11;
        }
        ['_cloneToNa' + 'tive'](_0xfccfbe, _0x216315, _0x3c9900, _0x2210df, _0x15ffb2, _0xa70f6e, _0x12ae29, _0x5f05b0) {
            var _0x1998d0 = _0xfccfbe;
            _0x1998d0['name'] = this['name'];
            for (var _0x352a32 = 0x0, _0x2674db = this['_children']['length']; _0x352a32 < _0x2674db; _0x352a32++) {
                var _0x2f354c = this['_children'][_0x352a32];
                _0x5f05b0['_nativeCur' + 'CloneCount']++;
                var _0x5830fe = _0x2f354c['_cloneNati' + 've'](_0x216315, _0x3c9900, _0x2210df, _0x15ffb2, _0xa70f6e, _0x12ae29, _0x5f05b0);
                _0x1998d0['addChild'](_0x5830fe);
                var _0x3640c6 = _0x2f354c['transform'], _0x179f3e = _0x5830fe['transform'], _0x484cc3 = _0x179f3e['localPosit' + 'ion'], _0x3381f9 = _0x179f3e['localRotat' + 'ion'], _0x386080 = _0x179f3e['localScale'];
                _0x3640c6['localPosit' + 'ion']['cloneTo'](_0x484cc3), _0x3640c6['localRotat' + 'ion']['cloneTo'](_0x3381f9), _0x3640c6['localScale']['cloneTo'](_0x386080), _0x179f3e['localPosit' + 'ion'] = _0x484cc3, _0x179f3e['localRotat' + 'ion'] = _0x3381f9, _0x179f3e['localScale'] = _0x386080;
            }
        }
    }
    class _0xea2818 extends _0x2247ad['Resource'] {
        constructor() {
            super(), this['_nativeNod' + 'eCount'] = 0x0, this['_nativeCur' + 'CloneCount'] = 0x0;
        }
        static ['_parse'](_0x57d389, _0xc0e615 = null, _0x3f2697 = null) {
            var _0x5c1b90 = new _0xea2818();
            if (_0x5c1b90['_rootNode'] = new _0x7e09df(new Float32Array(0x3), new Float32Array(0x4), new Float32Array(0x3), new Float32Array(0x10)), _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && _0x5c1b90['_nativeNod' + 'eCount']++, _0x57d389['version']) {
                var _0x267dce = _0x57d389['rootNode'];
                _0x267dce && _0x5c1b90['_parseNode'](_0x267dce, _0x5c1b90['_rootNode']);
            }
            return _0x5c1b90;
        }
        static ['load'](_0x2c0fbf, _0x15fda4) {
            _0x2247ad['ILaya']['loader']['create'](_0x2c0fbf, _0x15fda4, null, _0xea2818['AVATAR']);
        }
        ['_initClone' + 'ToAnimator'](_0x217e83, _0x393985) {
            _0x393985['_avatarNod' + 'eMap'][_0x217e83['name']] = _0x217e83;
            for (var _0x1252e7 = 0x0, _0x420ce1 = _0x217e83['getChildCo' + 'unt'](); _0x1252e7 < _0x420ce1; _0x1252e7++)
                this['_initClone' + 'ToAnimator'](_0x217e83['getChildBy' + 'Index'](_0x1252e7), _0x393985);
        }
        ['_parseNode'](_0x2a0a9b, _0x15fe07) {
            var _0x4cb9f4 = _0x2a0a9b['props']['name'];
            _0x15fe07['name'] = _0x4cb9f4;
            var _0xf289fc = _0x2a0a9b['props'], _0x333ee7 = _0x15fe07['transform'], _0x4b9916 = _0x333ee7['localPosit' + 'ion'], _0x3da605 = _0x333ee7['localRotat' + 'ion'], _0x3cca94 = _0x333ee7['localScale'];
            _0x4b9916['fromArray'](_0xf289fc['translate']), _0x3da605['fromArray'](_0xf289fc['rotation']), _0x3cca94['fromArray'](_0xf289fc['scale']), _0x333ee7['localPosit' + 'ion'] = _0x4b9916, _0x333ee7['localRotat' + 'ion'] = _0x3da605, _0x333ee7['localScale'] = _0x3cca94;
            for (var _0x1bcaab = _0x2a0a9b['child'], _0xc1c097 = 0x0, _0x1dc5c4 = _0x1bcaab['length']; _0xc1c097 < _0x1dc5c4; _0xc1c097++) {
                var _0x22719d = _0x1bcaab[_0xc1c097], _0x2898af = new _0x7e09df(new Float32Array(0x3), new Float32Array(0x4), new Float32Array(0x3), new Float32Array(0x10));
                _0x15fe07['addChild'](_0x2898af), _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_nativeNod' + 'eCount']++, this['_parseNode'](_0x22719d, _0x2898af);
            }
        }
        ['_cloneData' + 'sToAnimato' + 'r'](_0x1b5f77) {
            var _0x383893;
            _0x383893 = this['_rootNode']['clone']();
            var _0x86b46 = this['_rootNode']['transform'], _0x213143 = _0x383893['transform'], _0x34580a = _0x213143['localPosit' + 'ion'], _0x21ea60 = _0x213143['localRotat' + 'ion'], _0x1df5c2 = _0x213143['localScale'];
            _0x86b46['localPosit' + 'ion']['cloneTo'](_0x34580a), _0x86b46['localRotat' + 'ion']['cloneTo'](_0x21ea60), _0x86b46['localScale']['cloneTo'](_0x1df5c2), _0x213143['localPosit' + 'ion'] = _0x34580a, _0x213143['localRotat' + 'ion'] = _0x21ea60, _0x213143['localScale'] = _0x1df5c2, _0x1b5f77['_avatarNod' + 'eMap'] = {}, this['_initClone' + 'ToAnimator'](_0x383893, _0x1b5f77);
        }
        ['cloneTo'](_0x234a03) {
            var _0x3f8e76 = _0x234a03, _0x5e152c = this['_rootNode']['clone']();
            _0x3f8e76['_rootNode'] = _0x5e152c;
        }
        ['clone']() {
            var _0x507fe0 = new _0xea2818();
            return this['cloneTo'](_0x507fe0), _0x507fe0;
        }
        ['_cloneData' + 'sToAnimato' + 'rNative'](_0x869431) {
            var _0x4b62f7 = new Float32Array(0x3 * this['_nativeNod' + 'eCount']), _0x465edf = new Float32Array(0x4 * this['_nativeNod' + 'eCount']), _0xa8731f = new Float32Array(0x3 * this['_nativeNod' + 'eCount']), _0x18cba3 = new Float32Array(0x10 * this['_nativeNod' + 'eCount']), _0x4e9cb9 = new Int16Array(this['_nativeNod' + 'eCount']);
            _0x869431['_animation' + 'NodeLocalP' + 'ositions'] = _0x4b62f7, _0x869431['_animation' + 'NodeLocalR' + 'otations'] = _0x465edf, _0x869431['_animation' + 'NodeLocalS' + 'cales'] = _0xa8731f, _0x869431['_animation' + 'NodeWorldM' + 'atrixs'] = _0x18cba3, _0x869431['_animation' + 'NodeParent' + 'Indices'] = _0x4e9cb9, this['_nativeCur' + 'CloneCount'] = 0x0;
            var _0x347389 = this['_rootNode']['_cloneNati' + 've'](_0x4b62f7, _0x465edf, _0xa8731f, _0x18cba3, _0x4e9cb9, -0x1, this), _0x4d666e = this['_rootNode']['transform'], _0x4b1cb9 = _0x347389['transform'], _0xd2c69f = _0x4b1cb9['localPosit' + 'ion'], _0x1fe4d8 = _0x4b1cb9['localRotat' + 'ion'], _0x39aefb = _0x4b1cb9['localScale'];
            _0x4d666e['localPosit' + 'ion']['cloneTo'](_0xd2c69f), _0x4d666e['localRotat' + 'ion']['cloneTo'](_0x1fe4d8), _0x4d666e['localScale']['cloneTo'](_0x39aefb), _0x4b1cb9['localPosit' + 'ion'] = _0xd2c69f, _0x4b1cb9['localRotat' + 'ion'] = _0x1fe4d8, _0x4b1cb9['localScale'] = _0x39aefb, _0x869431['_avatarNod' + 'eMap'] = {}, this['_initClone' + 'ToAnimator'](_0x347389, _0x869431);
        }
    }
    _0xea2818['AVATAR'] = 'AVATAR';
    class _0x57c0e0 extends _0x2247ad['Resource'] {
        constructor() {
            super(), this['_shaderVal' + 'ues'] = null, this['_shaderVal' + 'ues'] = new _0x5e515b(this), this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'], this['_alphaTest'] = !0x1;
        }
        static ['load'](_0x3397a5, _0x4e70b2) {
            _0x2247ad['Laya']['loader']['create'](_0x3397a5, _0x4e70b2, null, _0x57c0e0['MATERIAL']);
        }
        static ['__initDefi' + 'ne__']() {
            _0x57c0e0['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = _0x38ffce['getDefineB' + 'yName']('ALPHATEST');
        }
        static ['_parse'](_0x414ed9, _0x2c44cf = null, _0x52ae4b = null) {
            var _0x1b680d, _0x148b94 = _0x414ed9, _0x29d554 = _0x148b94['props'], _0x23b88e = _0x29d554['type'], _0x28103c = _0x2247ad['ClassUtils']['getRegClas' + 's'](_0x23b88e);
            if (!_0x28103c)
                throw '_getSprite' + '3DHierarch' + 'yInnerUrls' + '\x20错误:\x20' + _0x414ed9['type'] + '\x20不是类';
            switch (_0x1b680d = new _0x28103c(), _0x148b94['version']) {
            case 'LAYAMATERI' + 'AL:01':
            case 'LAYAMATERI' + 'AL:02':
                var _0x1d37ca, _0x171c08;
                for (var _0x17ac59 in _0x29d554)
                    switch (_0x17ac59) {
                    case 'type':
                        break;
                    case 'vectors':
                        var _0x29e148 = _0x29d554[_0x17ac59];
                        for (_0x1d37ca = 0x0, _0x171c08 = _0x29e148['length']; _0x1d37ca < _0x171c08; _0x1d37ca++) {
                            var _0x28b96e = _0x29e148[_0x1d37ca], _0x5a2225 = _0x28b96e['value'];
                            switch (_0x5a2225['length']) {
                            case 0x2:
                                _0x1b680d[_0x28b96e['name']] = new _0x2d45ed(_0x5a2225[0x0], _0x5a2225[0x1]);
                                break;
                            case 0x3:
                                _0x1b680d[_0x28b96e['name']] = new _0x43b358(_0x5a2225[0x0], _0x5a2225[0x1], _0x5a2225[0x2]);
                                break;
                            case 0x4:
                                _0x1b680d[_0x28b96e['name']] = new _0x4cec8f(_0x5a2225[0x0], _0x5a2225[0x1], _0x5a2225[0x2], _0x5a2225[0x3]);
                                break;
                            default:
                                throw new Error('BaseMateri' + 'al:unkonwn' + '\x20color\x20len' + 'gth.');
                            }
                        }
                        break;
                    case 'textures':
                        var _0x567584 = _0x29d554[_0x17ac59];
                        for (_0x1d37ca = 0x0, _0x171c08 = _0x567584['length']; _0x1d37ca < _0x171c08; _0x1d37ca++) {
                            var _0x562a96 = _0x567584[_0x1d37ca], _0x4e5613 = _0x562a96['path'];
                            _0x4e5613 && (_0x1b680d[_0x562a96['name']] = _0x2247ad['Loader']['getRes'](_0x4e5613));
                        }
                        break;
                    case 'defines':
                        var _0x577ec7 = _0x29d554[_0x17ac59];
                        for (_0x1d37ca = 0x0, _0x171c08 = _0x577ec7['length']; _0x1d37ca < _0x171c08; _0x1d37ca++) {
                            var _0x239be3 = _0x38ffce['getDefineB' + 'yName'](_0x577ec7[_0x1d37ca]);
                            _0x1b680d['_shaderVal' + 'ues']['addDefine'](_0x239be3);
                        }
                        break;
                    case 'renderStat' + 'es':
                        var _0x22e06d = _0x29d554[_0x17ac59][0x0], _0x480bf1 = _0x1b680d;
                        _0x480bf1['blend'] = _0x22e06d['blend'], _0x480bf1['cull'] = _0x22e06d['cull'], _0x480bf1['depthTest'] = _0x22e06d['depthTest'], _0x480bf1['depthWrite'] = _0x22e06d['depthWrite'], _0x480bf1['blendSrc'] = _0x22e06d['srcBlend'], _0x480bf1['blendDst'] = _0x22e06d['dstBlend'];
                        break;
                    case 'cull':
                        _0x1b680d['cull'] = _0x29d554[_0x17ac59];
                        break;
                    case 'blend':
                        _0x1b680d['blend'] = _0x29d554[_0x17ac59];
                        break;
                    case 'depthWrite':
                        _0x1b680d['depthWrite'] = _0x29d554[_0x17ac59];
                        break;
                    case 'srcBlend':
                        _0x1b680d['blendSrc'] = _0x29d554[_0x17ac59];
                        break;
                    case 'dstBlend':
                        _0x1b680d['blendDst'] = _0x29d554[_0x17ac59];
                        break;
                    default:
                        _0x1b680d[_0x17ac59] = _0x29d554[_0x17ac59];
                    }
                break;
            default:
                throw new Error('BaseMateri' + 'al:unkonwn' + '\x20version.');
            }
            return _0x1b680d;
        }
        get ['shaderData']() {
            return this['_shaderVal' + 'ues'];
        }
        get ['alphaTestV' + 'alue']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x57c0e0['ALPHATESTV' + 'ALUE']);
        }
        set ['alphaTestV' + 'alue'](_0x4c40f0) {
            this['_shaderVal' + 'ues']['setNumber'](_0x57c0e0['ALPHATESTV' + 'ALUE'], _0x4c40f0);
        }
        get ['alphaTest']() {
            return this['_alphaTest'];
        }
        set ['alphaTest'](_0x4df8b1) {
            this['_alphaTest'] = _0x4df8b1, _0x4df8b1 ? this['_shaderVal' + 'ues']['addDefine'](_0x57c0e0['SHADERDEFI' + 'NE_ALPHATE' + 'ST']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x57c0e0['SHADERDEFI' + 'NE_ALPHATE' + 'ST']);
        }
        ['_removeTet' + 'xureRefere' + 'nce']() {
            var _0x23ef43 = this['_shaderVal' + 'ues']['getData']();
            for (var _0x1b4cb5 in _0x23ef43) {
                var _0x4a605b = _0x23ef43[_0x1b4cb5];
                _0x4a605b && _0x4a605b instanceof _0x2247ad['BaseTextur' + 'e'] && _0x4a605b['_removeRef' + 'erence']();
            }
        }
        ['_disposeRe' + 'source']() {
            this['_reference' + 'Count'] > 0x0 && this['_removeTet' + 'xureRefere' + 'nce'](), this['_shaderVal' + 'ues'] = null;
        }
        ['_addRefere' + 'nce'](_0x44b5d4 = 0x1) {
            super['_addRefere' + 'nce'](_0x44b5d4);
            var _0x2d8c28 = this['_shaderVal' + 'ues']['getData']();
            for (var _0x1c1252 in _0x2d8c28) {
                var _0x25721f = _0x2d8c28[_0x1c1252];
                _0x25721f && _0x25721f instanceof _0x2247ad['BaseTextur' + 'e'] && _0x25721f['_addRefere' + 'nce']();
            }
        }
        ['_removeRef' + 'erence'](_0x47eb0a = 0x1) {
            super['_removeRef' + 'erence'](_0x47eb0a), this['_removeTet' + 'xureRefere' + 'nce']();
        }
        ['setShaderN' + 'ame'](_0x55384b) {
            if (this['_shader'] = _0x38ffce['find'](_0x55384b), !this['_shader'])
                throw new Error('BaseMateri' + 'al:\x20unknow' + 'n\x20shader\x20n' + 'ame.');
        }
        ['cloneTo'](_0x30cb86) {
            var _0x278828 = _0x30cb86;
            _0x278828['name'] = this['name'], _0x278828['renderQueu' + 'e'] = this['renderQueu' + 'e'], this['_shaderVal' + 'ues']['cloneTo'](_0x278828['_shaderVal' + 'ues']);
        }
        ['clone']() {
            var _0x10efe5 = new _0x57c0e0();
            return this['cloneTo'](_0x10efe5), _0x10efe5;
        }
        get ['_defineDat' + 'as']() {
            return this['_shaderVal' + 'ues']['_defineDat' + 'as'];
        }
    }
    _0x57c0e0['MATERIAL'] = 'MATERIAL', _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'] = 0x7d0, _0x57c0e0['RENDERQUEU' + 'E_ALPHATES' + 'T'] = 0x992, _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'] = 0xbb8, _0x57c0e0['ALPHATESTV' + 'ALUE'] = _0x38ffce['propertyNa' + 'meToID']('u_AlphaTes' + 'tValue'), _0x57c0e0['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = null;
    class _0x297e96 {
        static ['load'](_0x5bbaa5, _0x2c2102) {
            _0x2247ad['Laya']['loader']['create'](_0x5bbaa5, _0x2c2102, null, _0x57c0e0['MATERIAL']);
        }
        static ['__initDefi' + 'ne__']() {
            _0x297e96['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = _0x57c0e0['SHADERDEFI' + 'NE_ALPHATE' + 'ST'];
        }
    }
    _0x297e96['MATERIAL'] = 'MATERIAL', _0x297e96['RENDERQUEU' + 'E_OPAQUE'] = 0x7d0, _0x297e96['RENDERQUEU' + 'E_ALPHATES' + 'T'] = 0x992, _0x297e96['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'] = 0xbb8, _0x297e96['ALPHATESTV' + 'ALUE'] = _0x38ffce['propertyNa' + 'meToID']('u_AlphaTes' + 'tValue'), _0x297e96['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = null;
    class _0x4ba527 {
        constructor() {
            this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['srcBlend'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['dstBlend'] = _0x4ba527['BLENDPARAM' + '_ZERO'], this['srcBlendRG' + 'B'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['dstBlendRG' + 'B'] = _0x4ba527['BLENDPARAM' + '_ZERO'], this['srcBlendAl' + 'pha'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['dstBlendAl' + 'pha'] = _0x4ba527['BLENDPARAM' + '_ZERO'], this['blendConst' + 'Color'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['blendEquat' + 'ion'] = _0x4ba527['BLENDEQUAT' + 'ION_ADD'], this['blendEquat' + 'ionRGB'] = _0x4ba527['BLENDEQUAT' + 'ION_ADD'], this['blendEquat' + 'ionAlpha'] = _0x4ba527['BLENDEQUAT' + 'ION_ADD'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LEQUAL'], this['depthWrite'] = !0x0;
        }
        ['cloneTo'](_0x867cf4) {
            var _0x4ccac7 = _0x867cf4;
            _0x4ccac7['cull'] = this['cull'], _0x4ccac7['blend'] = this['blend'], _0x4ccac7['srcBlend'] = this['srcBlend'], _0x4ccac7['dstBlend'] = this['dstBlend'], _0x4ccac7['srcBlendRG' + 'B'] = this['srcBlendRG' + 'B'], _0x4ccac7['dstBlendRG' + 'B'] = this['dstBlendRG' + 'B'], _0x4ccac7['srcBlendAl' + 'pha'] = this['srcBlendAl' + 'pha'], _0x4ccac7['dstBlendAl' + 'pha'] = this['dstBlendAl' + 'pha'], this['blendConst' + 'Color']['cloneTo'](_0x4ccac7['blendConst' + 'Color']), _0x4ccac7['blendEquat' + 'ion'] = this['blendEquat' + 'ion'], _0x4ccac7['blendEquat' + 'ionRGB'] = this['blendEquat' + 'ionRGB'], _0x4ccac7['blendEquat' + 'ionAlpha'] = this['blendEquat' + 'ionAlpha'], _0x4ccac7['depthTest'] = this['depthTest'], _0x4ccac7['depthWrite'] = this['depthWrite'];
        }
        ['clone']() {
            var _0x11ae90 = new _0x4ba527();
            return this['cloneTo'](_0x11ae90), _0x11ae90;
        }
    }
    _0x4ba527['CULL_NONE'] = 0x0, _0x4ba527['CULL_FRONT'] = 0x1, _0x4ba527['CULL_BACK'] = 0x2, _0x4ba527['BLEND_DISA' + 'BLE'] = 0x0, _0x4ba527['BLEND_ENAB' + 'LE_ALL'] = 0x1, _0x4ba527['BLEND_ENAB' + 'LE_SEPERAT' + 'E'] = 0x2, _0x4ba527['BLENDPARAM' + '_ZERO'] = 0x0, _0x4ba527['BLENDPARAM' + '_ONE'] = 0x1, _0x4ba527['BLENDPARAM' + '_SRC_COLOR'] = 0x300, _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_COLOR'] = 0x301, _0x4ba527['BLENDPARAM' + '_DST_COLOR'] = 0x306, _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_DST_COLOR'] = 0x307, _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'] = 0x302, _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'] = 0x303, _0x4ba527['BLENDPARAM' + '_DST_ALPHA'] = 0x304, _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_DST_ALPHA'] = 0x305, _0x4ba527['BLENDPARAM' + '_SRC_ALPHA' + '_SATURATE'] = 0x308, _0x4ba527['BLENDEQUAT' + 'ION_ADD'] = 0x8006, _0x4ba527['BLENDEQUAT' + 'ION_SUBTRA' + 'CT'] = 0x800a, _0x4ba527['BLENDEQUAT' + 'ION_REVERS' + 'E_SUBTRACT'] = 0x800b, _0x4ba527['DEPTHTEST_' + 'OFF'] = 0x0, _0x4ba527['DEPTHTEST_' + 'NEVER'] = 0x200, _0x4ba527['DEPTHTEST_' + 'LESS'] = 0x201, _0x4ba527['DEPTHTEST_' + 'EQUAL'] = 0x202, _0x4ba527['DEPTHTEST_' + 'LEQUAL'] = 0x203, _0x4ba527['DEPTHTEST_' + 'GREATER'] = 0x204, _0x4ba527['DEPTHTEST_' + 'NOTEQUAL'] = 0x205, _0x4ba527['DEPTHTEST_' + 'GEQUAL'] = 0x206, _0x4ba527['DEPTHTEST_' + 'ALWAYS'] = 0x207;
    class _0x26565b extends _0x57c0e0 {
        constructor() {
            super(), this['_enableVer' + 'texColor'] = !0x1, this['setShaderN' + 'ame']('BLINNPHONG'), this['_albedoInt' + 'ensity'] = 0x1, this['_albedoCol' + 'or'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1);
            var _0x5a9293 = this['_shaderVal' + 'ues'];
            _0x5a9293['setVector'](_0x26565b['ALBEDOCOLO' + 'R'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), _0x5a9293['setVector'](_0x26565b['MATERIALSP' + 'ECULAR'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), _0x5a9293['setNumber'](_0x26565b['SHININESS'], 0.078125), _0x5a9293['setNumber'](_0x57c0e0['ALPHATESTV' + 'ALUE'], 0.5), _0x5a9293['setVector'](_0x26565b['TILINGOFFS' + 'ET'], new _0x4cec8f(0x1, 0x1, 0x0, 0x0)), this['_enableLig' + 'hting'] = !0x0, this['renderMode'] = _0x26565b['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x26565b['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP'] = _0x38ffce['getDefineB' + 'yName']('DIFFUSEMAP'), _0x26565b['SHADERDEFI' + 'NE_NORMALM' + 'AP'] = _0x38ffce['getDefineB' + 'yName']('NORMALMAP'), _0x26565b['SHADERDEFI' + 'NE_SPECULA' + 'RMAP'] = _0x38ffce['getDefineB' + 'yName']('SPECULARMA' + 'P'), _0x26565b['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x38ffce['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x26565b['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR'] = _0x38ffce['getDefineB' + 'yName']('ENABLEVERT' + 'EXCOLOR');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x41de71) {
            this['_albedoCol' + 'or']['x'] = _0x41de71, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x22de48) {
            this['_albedoCol' + 'or']['y'] = _0x22de48, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x10abdc) {
            this['_albedoCol' + 'or']['z'] = _0x10abdc, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x11e438) {
            this['_albedoCol' + 'or']['w'] = _0x11e438, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_SpecColor' + 'R']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['x'];
        }
        set ['_SpecColor' + 'R'](_0x924de6) {
            this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['x'] = _0x924de6;
        }
        get ['_SpecColor' + 'G']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['y'];
        }
        set ['_SpecColor' + 'G'](_0x45d76d) {
            this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['y'] = _0x45d76d;
        }
        get ['_SpecColor' + 'B']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['z'];
        }
        set ['_SpecColor' + 'B'](_0x8cf365) {
            this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['z'] = _0x8cf365;
        }
        get ['_SpecColor' + 'A']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['w'];
        }
        set ['_SpecColor' + 'A'](_0x442a3b) {
            this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR'])['w'] = _0x442a3b;
        }
        get ['_AlbedoInt' + 'ensity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['_AlbedoInt' + 'ensity'](_0x35dd37) {
            if (this['_albedoInt' + 'ensity'] !== _0x35dd37) {
                var _0x179952 = this['_shaderVal' + 'ues']['getVector'](_0x26565b['ALBEDOCOLO' + 'R']);
                _0x4cec8f['scale'](this['_albedoCol' + 'or'], _0x35dd37, _0x179952), this['_albedoInt' + 'ensity'] = _0x35dd37, this['_shaderVal' + 'ues']['setVector'](_0x26565b['ALBEDOCOLO' + 'R'], _0x179952);
            }
        }
        get ['_Shininess']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x26565b['SHININESS']);
        }
        set ['_Shininess'](_0x21f1b2) {
            _0x21f1b2 = Math['max'](0x0, Math['min'](0x1, _0x21f1b2)), this['_shaderVal' + 'ues']['setNumber'](_0x26565b['SHININESS'], _0x21f1b2);
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x8c2870) {
            var _0x448565 = this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET']);
            _0x448565['x'] = _0x8c2870, this['tilingOffs' + 'et'] = _0x448565;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x9ef635) {
            var _0x11aa87 = this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET']);
            _0x11aa87['y'] = _0x9ef635, this['tilingOffs' + 'et'] = _0x11aa87;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x199a87) {
            var _0x4195a0 = this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET']);
            _0x4195a0['z'] = _0x199a87, this['tilingOffs' + 'et'] = _0x4195a0;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x49eb6a) {
            var _0x27b334 = this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET']);
            _0x27b334['w'] = _0x49eb6a, this['tilingOffs' + 'et'] = _0x27b334;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x28937e) {
            this['alphaTestV' + 'alue'] = _0x28937e;
        }
        set ['renderMode'](_0x5d6991) {
            switch (_0x5d6991) {
            case _0x26565b['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            case _0x26565b['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            case _0x26565b['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            default:
                throw new Error('Material:r' + 'enderMode\x20' + 'value\x20erro' + 'r.');
            }
        }
        get ['enableVert' + 'exColor']() {
            return this['_enableVer' + 'texColor'];
        }
        set ['enableVert' + 'exColor'](_0x364b92) {
            this['_enableVer' + 'texColor'] = _0x364b92, _0x364b92 ? this['_shaderVal' + 'ues']['addDefine'](_0x26565b['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x26565b['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x19e5c7) {
            this['_MainTex_S' + 'TX'] = _0x19e5c7;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x1249e0) {
            this['_MainTex_S' + 'TY'] = _0x1249e0;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x3c4085) {
            this['_MainTex_S' + 'TZ'] = _0x3c4085;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x34deb6) {
            this['_MainTex_S' + 'TW'] = _0x34deb6;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x426014) {
            _0x426014 && (0x1 != _0x426014['x'] || 0x1 != _0x426014['y'] || 0x0 != _0x426014['z'] || 0x0 != _0x426014['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x26565b['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x26565b['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x26565b['TILINGOFFS' + 'ET'], _0x426014);
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x626ded) {
            this['_ColorR'] = _0x626ded;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x3f7192) {
            this['_ColorG'] = _0x3f7192;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x2cd387) {
            this['_ColorB'] = _0x2cd387;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0x3da342) {
            this['_ColorA'] = _0x3da342;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x5597fb) {
            var _0x43c070 = this['_shaderVal' + 'ues']['getVector'](_0x26565b['ALBEDOCOLO' + 'R']);
            _0x4cec8f['scale'](_0x5597fb, this['_albedoInt' + 'ensity'], _0x43c070), this['_albedoCol' + 'or'] = _0x5597fb, this['_shaderVal' + 'ues']['setVector'](_0x26565b['ALBEDOCOLO' + 'R'], _0x43c070);
        }
        get ['albedoInte' + 'nsity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['albedoInte' + 'nsity'](_0x526b4f) {
            this['_AlbedoInt' + 'ensity'] = _0x526b4f;
        }
        get ['specularCo' + 'lorR']() {
            return this['_SpecColor' + 'R'];
        }
        set ['specularCo' + 'lorR'](_0x1200e3) {
            this['_SpecColor' + 'R'] = _0x1200e3;
        }
        get ['specularCo' + 'lorG']() {
            return this['_SpecColor' + 'G'];
        }
        set ['specularCo' + 'lorG'](_0x17a798) {
            this['_SpecColor' + 'G'] = _0x17a798;
        }
        get ['specularCo' + 'lorB']() {
            return this['_SpecColor' + 'B'];
        }
        set ['specularCo' + 'lorB'](_0x33e5a4) {
            this['_SpecColor' + 'B'] = _0x33e5a4;
        }
        get ['specularCo' + 'lorA']() {
            return this['_SpecColor' + 'A'];
        }
        set ['specularCo' + 'lorA'](_0x14c944) {
            this['_SpecColor' + 'A'] = _0x14c944;
        }
        get ['specularCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x26565b['MATERIALSP' + 'ECULAR']);
        }
        set ['specularCo' + 'lor'](_0x1a74f1) {
            this['_shaderVal' + 'ues']['setVector'](_0x26565b['MATERIALSP' + 'ECULAR'], _0x1a74f1);
        }
        get ['shininess']() {
            return this['_Shininess'];
        }
        set ['shininess'](_0x539c5c) {
            this['_Shininess'] = _0x539c5c;
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x26565b['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x308297) {
            _0x308297 ? this['_shaderVal' + 'ues']['addDefine'](_0x26565b['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x26565b['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']), this['_shaderVal' + 'ues']['setTexture'](_0x26565b['ALBEDOTEXT' + 'URE'], _0x308297);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x26565b['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x5c7822) {
            _0x5c7822 ? this['_shaderVal' + 'ues']['addDefine'](_0x26565b['SHADERDEFI' + 'NE_NORMALM' + 'AP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x26565b['SHADERDEFI' + 'NE_NORMALM' + 'AP']), this['_shaderVal' + 'ues']['setTexture'](_0x26565b['NORMALTEXT' + 'URE'], _0x5c7822);
        }
        get ['specularTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x26565b['SPECULARTE' + 'XTURE']);
        }
        set ['specularTe' + 'xture'](_0x2ad978) {
            _0x2ad978 ? this['_shaderVal' + 'ues']['addDefine'](_0x26565b['SHADERDEFI' + 'NE_SPECULA' + 'RMAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x26565b['SHADERDEFI' + 'NE_SPECULA' + 'RMAP']), this['_shaderVal' + 'ues']['setTexture'](_0x26565b['SPECULARTE' + 'XTURE'], _0x2ad978);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x26565b['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x121a79) {
            this['_shaderVal' + 'ues']['setBool'](_0x26565b['DEPTH_WRIT' + 'E'], _0x121a79);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x26565b['CULL']);
        }
        set ['cull'](_0x2ae6e9) {
            this['_shaderVal' + 'ues']['setInt'](_0x26565b['CULL'], _0x2ae6e9);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x26565b['BLEND']);
        }
        set ['blend'](_0x2a9c91) {
            this['_shaderVal' + 'ues']['setInt'](_0x26565b['BLEND'], _0x2a9c91);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x26565b['BLEND_SRC']);
        }
        set ['blendSrc'](_0x21f7f7) {
            this['_shaderVal' + 'ues']['setInt'](_0x26565b['BLEND_SRC'], _0x21f7f7);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x26565b['BLEND_DST']);
        }
        set ['blendDst'](_0x3b3a3b) {
            this['_shaderVal' + 'ues']['setInt'](_0x26565b['BLEND_DST'], _0x3b3a3b);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x26565b['DEPTH_TEST']);
        }
        set ['depthTest'](_0x4d1c51) {
            this['_shaderVal' + 'ues']['setInt'](_0x26565b['DEPTH_TEST'], _0x4d1c51);
        }
        ['clone']() {
            var _0x5d3e83 = new _0x26565b();
            return this['cloneTo'](_0x5d3e83), _0x5d3e83;
        }
        ['cloneTo'](_0x4415b1) {
            super['cloneTo'](_0x4415b1);
            var _0x317154 = _0x4415b1;
            _0x317154['_enableLig' + 'hting'] = this['_enableLig' + 'hting'], _0x317154['_albedoInt' + 'ensity'] = this['_albedoInt' + 'ensity'], _0x317154['_enableVer' + 'texColor'] = this['_enableVer' + 'texColor'], this['_albedoCol' + 'or']['cloneTo'](_0x317154['_albedoCol' + 'or']);
        }
    }
    _0x26565b['RENDERMODE' + '_OPAQUE'] = 0x0, _0x26565b['RENDERMODE' + '_CUTOUT'] = 0x1, _0x26565b['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x26565b['ALBEDOTEXT' + 'URE'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseT' + 'exture'), _0x26565b['NORMALTEXT' + 'URE'] = _0x38ffce['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x26565b['SPECULARTE' + 'XTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Specular' + 'Texture'), _0x26565b['ALBEDOCOLO' + 'R'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseC' + 'olor'), _0x26565b['MATERIALSP' + 'ECULAR'] = _0x38ffce['propertyNa' + 'meToID']('u_Material' + 'Specular'), _0x26565b['SHININESS'] = _0x38ffce['propertyNa' + 'meToID']('u_Shinines' + 's'), _0x26565b['TILINGOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x26565b['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x26565b['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x26565b['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x26565b['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x26565b['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x26565b['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0xa43ab6 extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('Effect'), this['_color'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0xa43ab6['TINTCOLOR'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0xa43ab6['RENDERMODE' + '_ADDTIVE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0xa43ab6['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x38ffce['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0xa43ab6['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x38ffce['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0xa43ab6['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x38ffce['getDefineB' + 'yName']('ADDTIVEFOG');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x1d6a8a) {
            this['_color']['x'] = _0x1d6a8a, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x39459b) {
            this['_color']['y'] = _0x39459b, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x5701f0) {
            this['_color']['z'] = _0x5701f0, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x49f2ac) {
            this['_color']['w'] = _0x49f2ac, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x4d5e94) {
            var _0x546f90 = this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET']);
            _0x546f90['x'] = _0x4d5e94, this['tilingOffs' + 'et'] = _0x546f90;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x5aff6e) {
            var _0x3692ce = this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET']);
            _0x3692ce['y'] = _0x5aff6e, this['tilingOffs' + 'et'] = _0x3692ce;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x2f738f) {
            var _0x463c0f = this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET']);
            _0x463c0f['z'] = _0x2f738f, this['tilingOffs' + 'et'] = _0x463c0f;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x3ee15d) {
            var _0x2f44c7 = this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET']);
            _0x2f44c7['w'] = _0x3ee15d, this['tilingOffs' + 'et'] = _0x2f44c7;
        }
        set ['renderMode'](_0x3b6150) {
            switch (_0x3b6150) {
            case _0xa43ab6['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_NONE'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0xa43ab6['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0xa43ab6['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_NONE'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xa43ab6['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('MeshEffect' + 'Material\x20:' + '\x20renderMod' + 'e\x20value\x20er' + 'ror.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x879b7e) {
            this['_TintColor' + 'R'] = _0x879b7e;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x365513) {
            this['_TintColor' + 'G'] = _0x365513;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x3e787f) {
            this['_TintColor' + 'B'] = _0x3e787f;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x1717e9) {
            this['_TintColor' + 'A'] = _0x1717e9;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TINTCOLOR']);
        }
        set ['color'](_0x111bd2) {
            this['_shaderVal' + 'ues']['setVector'](_0xa43ab6['TINTCOLOR'], _0x111bd2);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xa43ab6['MAINTEXTUR' + 'E']);
        }
        set ['texture'](_0x40b092) {
            _0x40b092 ? this['_shaderVal' + 'ues']['addDefine'](_0xa43ab6['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xa43ab6['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']), this['_shaderVal' + 'ues']['setTexture'](_0xa43ab6['MAINTEXTUR' + 'E'], _0x40b092);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0xf9a5a7) {
            this['_MainTex_S' + 'TX'] = _0xf9a5a7;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x4966cc) {
            this['_MainTex_S' + 'TY'] = _0x4966cc;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x452539) {
            this['_MainTex_S' + 'TZ'] = _0x452539;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x2b65d2) {
            this['_MainTex_S' + 'TW'] = _0x2b65d2;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xa43ab6['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x17911f) {
            _0x17911f && (0x1 != _0x17911f['x'] || 0x1 != _0x17911f['y'] || 0x0 != _0x17911f['z'] || 0x0 != _0x17911f['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0xa43ab6['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xa43ab6['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0xa43ab6['TILINGOFFS' + 'ET'], _0x17911f);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0xa43ab6['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x110d19) {
            this['_shaderVal' + 'ues']['setBool'](_0xa43ab6['DEPTH_WRIT' + 'E'], _0x110d19);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xa43ab6['CULL']);
        }
        set ['cull'](_0x132209) {
            this['_shaderVal' + 'ues']['setInt'](_0xa43ab6['CULL'], _0x132209);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xa43ab6['BLEND']);
        }
        set ['blend'](_0x5a99b7) {
            this['_shaderVal' + 'ues']['setInt'](_0xa43ab6['BLEND'], _0x5a99b7);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xa43ab6['BLEND_SRC']);
        }
        set ['blendSrc'](_0x376073) {
            this['_shaderVal' + 'ues']['setInt'](_0xa43ab6['BLEND_SRC'], _0x376073);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xa43ab6['BLEND_DST']);
        }
        set ['blendDst'](_0x1c0bba) {
            this['_shaderVal' + 'ues']['setInt'](_0xa43ab6['BLEND_DST'], _0x1c0bba);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xa43ab6['DEPTH_TEST']);
        }
        set ['depthTest'](_0x2efa0a) {
            this['_shaderVal' + 'ues']['setInt'](_0xa43ab6['DEPTH_TEST'], _0x2efa0a);
        }
        ['clone']() {
            var _0x5c03cf = new _0xa43ab6();
            return this['cloneTo'](_0x5c03cf), _0x5c03cf;
        }
    }
    _0xa43ab6['RENDERMODE' + '_ADDTIVE'] = 0x0, _0xa43ab6['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x1, _0xa43ab6['MAINTEXTUR' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0xa43ab6['TINTCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0xa43ab6['TILINGOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0xa43ab6['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0xa43ab6['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0xa43ab6['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0xa43ab6['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0xa43ab6['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0xa43ab6['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x1d84f9 extends _0x57c0e0 {
        constructor() {
            super(), this['_enableLig' + 'hting'] = !0x0, this['setShaderN' + 'ame']('ExtendTerr' + 'ain'), this['renderMode'] = _0x1d84f9['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1'] = _0x38ffce['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM1'), _0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2'] = _0x38ffce['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM2'), _0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3'] = _0x38ffce['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM3'), _0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4'] = _0x38ffce['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM4'), _0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5'] = _0x38ffce['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM5');
        }
        get ['splatAlpha' + 'Texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1d84f9['SPLATALPHA' + 'TEXTURE']);
        }
        set ['splatAlpha' + 'Texture'](_0x990ef9) {
            this['_shaderVal' + 'ues']['setTexture'](_0x1d84f9['SPLATALPHA' + 'TEXTURE'], _0x990ef9);
        }
        get ['diffuseTex' + 'ture1']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE1']);
        }
        set ['diffuseTex' + 'ture1'](_0x1312c8) {
            this['_shaderVal' + 'ues']['setTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE1'], _0x1312c8), this['_setDetail' + 'Num'](0x1);
        }
        get ['diffuseTex' + 'ture2']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE2']);
        }
        set ['diffuseTex' + 'ture2'](_0x2b5166) {
            this['_shaderVal' + 'ues']['setTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE2'], _0x2b5166), this['_setDetail' + 'Num'](0x2);
        }
        get ['diffuseTex' + 'ture3']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE3']);
        }
        set ['diffuseTex' + 'ture3'](_0x4abc0e) {
            this['_shaderVal' + 'ues']['setTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE3'], _0x4abc0e), this['_setDetail' + 'Num'](0x3);
        }
        get ['diffuseTex' + 'ture4']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE4']);
        }
        set ['diffuseTex' + 'ture4'](_0x10a6f0) {
            this['_shaderVal' + 'ues']['setTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE4'], _0x10a6f0), this['_setDetail' + 'Num'](0x4);
        }
        get ['diffuseTex' + 'ture5']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE5']);
        }
        set ['diffuseTex' + 'ture5'](_0xe322af) {
            this['_shaderVal' + 'ues']['setTexture'](_0x1d84f9['DIFFUSETEX' + 'TURE5'], _0xe322af), this['_setDetail' + 'Num'](0x5);
        }
        set ['diffuseSca' + 'leOffset1'](_0x16e741) {
            this['_shaderVal' + 'ues']['setVector'](_0x1d84f9['DIFFUSESCA' + 'LEOFFSET1'], _0x16e741);
        }
        set ['diffuseSca' + 'leOffset2'](_0x5cf38a) {
            this['_shaderVal' + 'ues']['setVector'](_0x1d84f9['DIFFUSESCA' + 'LEOFFSET2'], _0x5cf38a);
        }
        set ['diffuseSca' + 'leOffset3'](_0x519b07) {
            this['_shaderVal' + 'ues']['setVector'](_0x1d84f9['DIFFUSESCA' + 'LEOFFSET3'], _0x519b07);
        }
        set ['diffuseSca' + 'leOffset4'](_0x5f50cf) {
            this['_shaderVal' + 'ues']['setVector'](_0x1d84f9['DIFFUSESCA' + 'LEOFFSET4'], _0x5f50cf);
        }
        set ['diffuseSca' + 'leOffset5'](_0x2d39e7) {
            this['_shaderVal' + 'ues']['setVector'](_0x1d84f9['DIFFUSESCA' + 'LEOFFSET5'], _0x2d39e7);
        }
        set ['renderMode'](_0x4bb92e) {
            switch (_0x4bb92e) {
            case _0x1d84f9['RENDERMODE' + '_OPAQUE']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            case _0x1d84f9['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LEQUAL'];
                break;
            default:
                throw new Error('ExtendTerr' + 'ainMateria' + 'l:renderMo' + 'de\x20value\x20e' + 'rror.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x1d84f9['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x5cbc0e) {
            this['_shaderVal' + 'ues']['setBool'](_0x1d84f9['DEPTH_WRIT' + 'E'], _0x5cbc0e);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x1d84f9['CULL']);
        }
        set ['cull'](_0xd7bac2) {
            this['_shaderVal' + 'ues']['setInt'](_0x1d84f9['CULL'], _0xd7bac2);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x1d84f9['BLEND']);
        }
        set ['blend'](_0x23bcef) {
            this['_shaderVal' + 'ues']['setInt'](_0x1d84f9['BLEND'], _0x23bcef);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x1d84f9['BLEND_SRC']);
        }
        set ['blendSrc'](_0x3d457d) {
            this['_shaderVal' + 'ues']['setInt'](_0x1d84f9['BLEND_SRC'], _0x3d457d);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x1d84f9['BLEND_DST']);
        }
        set ['blendDst'](_0x480f89) {
            this['_shaderVal' + 'ues']['setInt'](_0x1d84f9['BLEND_DST'], _0x480f89);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x1d84f9['DEPTH_TEST']);
        }
        set ['depthTest'](_0x1bc122) {
            this['_shaderVal' + 'ues']['setInt'](_0x1d84f9['DEPTH_TEST'], _0x1bc122);
        }
        ['_setDetail' + 'Num'](_0xa7504c) {
            switch (_0xa7504c) {
            case 0x1:
                this['_shaderVal' + 'ues']['addDefine'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x2:
                this['_shaderVal' + 'ues']['addDefine'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x3:
                this['_shaderVal' + 'ues']['addDefine'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x4:
                this['_shaderVal' + 'ues']['addDefine'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x5:
                this['_shaderVal' + 'ues']['addDefine'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1d84f9['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']);
            }
        }
        ['clone']() {
            var _0x357b85 = new _0x1d84f9();
            return this['cloneTo'](_0x357b85), _0x357b85;
        }
    }
    _0x1d84f9['RENDERMODE' + '_OPAQUE'] = 0x1, _0x1d84f9['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x1d84f9['SPLATALPHA' + 'TEXTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_SplatAlp' + 'haTexture'), _0x1d84f9['DIFFUSETEX' + 'TURE1'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseT' + 'exture1'), _0x1d84f9['DIFFUSETEX' + 'TURE2'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseT' + 'exture2'), _0x1d84f9['DIFFUSETEX' + 'TURE3'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseT' + 'exture3'), _0x1d84f9['DIFFUSETEX' + 'TURE4'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseT' + 'exture4'), _0x1d84f9['DIFFUSETEX' + 'TURE5'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseT' + 'exture5'), _0x1d84f9['DIFFUSESCA' + 'LEOFFSET1'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '1'), _0x1d84f9['DIFFUSESCA' + 'LEOFFSET2'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '2'), _0x1d84f9['DIFFUSESCA' + 'LEOFFSET3'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '3'), _0x1d84f9['DIFFUSESCA' + 'LEOFFSET4'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '4'), _0x1d84f9['DIFFUSESCA' + 'LEOFFSET5'] = _0x38ffce['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '5'), _0x1d84f9['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x1d84f9['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x1d84f9['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x1d84f9['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x1d84f9['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x1d84f9['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te'), (_0x3cdc54 = _0xc55b22['PBRRenderM' + 'ode'] || (_0xc55b22['PBRRenderM' + 'ode'] = {}))[_0x3cdc54['Opaque'] = 0x0] = 'Opaque', _0x3cdc54[_0x3cdc54['Cutout'] = 0x1] = 'Cutout', _0x3cdc54[_0x3cdc54['Fade'] = 0x2] = 'Fade', _0x3cdc54[_0x3cdc54['Transparen' + 't'] = 0x3] = 'Transparen' + 't';
    class _0x3028f9 extends _0x57c0e0 {
        constructor() {
            super(), this['_enableEmi' + 'ssion'] = !0x1, this['_shaderVal' + 'ues']['setVector'](_0x3028f9['ALBEDOCOLO' + 'R'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), this['_shaderVal' + 'ues']['setVector'](_0x3028f9['EMISSIONCO' + 'LOR'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['SMOOTHNESS'], 0.5), this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['SMOOTHNESS' + 'SCALE'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['OCCLUSIONS' + 'TRENGTH'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['NORMALSCAL' + 'E'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['PARALLAXSC' + 'ALE'], 0.001), this['_shaderVal' + 'ues']['setNumber'](_0x57c0e0['ALPHATESTV' + 'ALUE'], 0.5), this['renderMode'] = _0xc55b22['PBRRenderM' + 'ode']['Opaque'];
        }
        static ['__init__']() {
            _0x3028f9['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x38ffce['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0x3028f9['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x38ffce['getDefineB' + 'yName']('NORMALTEXT' + 'URE'), _0x3028f9['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE'] = _0x38ffce['getDefineB' + 'yName']('PARALLAXTE' + 'XTURE'), _0x3028f9['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE'] = _0x38ffce['getDefineB' + 'yName']('OCCLUSIONT' + 'EXTURE'), _0x3028f9['SHADERDEFI' + 'NE_EMISSIO' + 'N'] = _0x38ffce['getDefineB' + 'yName']('EMISSION'), _0x3028f9['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE'] = _0x38ffce['getDefineB' + 'yName']('EMISSIONTE' + 'XTURE'), _0x3028f9['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x38ffce['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x3028f9['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND'] = _0x38ffce['getDefineB' + 'yName']('TRANSPAREN' + 'TBLEND'), _0x3028f9['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_HIG' + 'H'] = _0x38ffce['getDefineB' + 'yName']('LAYA_PBR_B' + 'RDF_HIGH'), _0x3028f9['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_LOW'] = _0x38ffce['getDefineB' + 'yName']('LAYA_PBR_B' + 'RDF_LOW');
        }
        get ['albedoColo' + 'r']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3028f9['ALBEDOCOLO' + 'R']);
        }
        set ['albedoColo' + 'r'](_0xa32979) {
            this['_shaderVal' + 'ues']['setVector'](_0x3028f9['ALBEDOCOLO' + 'R'], _0xa32979);
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3028f9['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x23e946) {
            _0x23e946 ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3028f9['ALBEDOTEXT' + 'URE'], _0x23e946);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3028f9['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x1b407a) {
            _0x1b407a ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3028f9['NORMALTEXT' + 'URE'], _0x1b407a);
        }
        get ['normalText' + 'ureScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3028f9['NORMALSCAL' + 'E']);
        }
        set ['normalText' + 'ureScale'](_0x24af26) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['NORMALSCAL' + 'E'], _0x24af26);
        }
        get ['parallaxTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3028f9['PARALLAXTE' + 'XTURE']);
        }
        set ['parallaxTe' + 'xture'](_0x703d4d) {
            _0x703d4d ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3028f9['PARALLAXTE' + 'XTURE'], _0x703d4d);
        }
        get ['parallaxTe' + 'xtureScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3028f9['PARALLAXSC' + 'ALE']);
        }
        set ['parallaxTe' + 'xtureScale'](_0x1e4ed6) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['PARALLAXSC' + 'ALE'], Math['max'](0.005, Math['min'](0.08, _0x1e4ed6)));
        }
        get ['occlusionT' + 'exture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3028f9['OCCLUSIONT' + 'EXTURE']);
        }
        set ['occlusionT' + 'exture'](_0x3884d3) {
            _0x3884d3 ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3028f9['OCCLUSIONT' + 'EXTURE'], _0x3884d3);
        }
        get ['occlusionT' + 'extureStre' + 'ngth']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3028f9['OCCLUSIONS' + 'TRENGTH']);
        }
        set ['occlusionT' + 'extureStre' + 'ngth'](_0x21fa76) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['OCCLUSIONS' + 'TRENGTH'], Math['max'](0x0, Math['min'](0x1, _0x21fa76)));
        }
        get ['smoothness']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3028f9['SMOOTHNESS']);
        }
        set ['smoothness'](_0x3b0bae) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['SMOOTHNESS'], Math['max'](0x0, Math['min'](0x1, _0x3b0bae)));
        }
        get ['smoothness' + 'TextureSca' + 'le']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3028f9['SMOOTHNESS' + 'SCALE']);
        }
        set ['smoothness' + 'TextureSca' + 'le'](_0x269171) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3028f9['SMOOTHNESS' + 'SCALE'], Math['max'](0x0, Math['min'](0x1, _0x269171)));
        }
        get ['enableEmis' + 'sion']() {
            return this['_enableEmi' + 'ssion'];
        }
        set ['enableEmis' + 'sion'](_0x28e9d0) {
            _0x28e9d0 ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_EMISSIO' + 'N']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_EMISSIO' + 'N']), this['_enableEmi' + 'ssion'] = _0x28e9d0;
        }
        get ['emissionCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3028f9['EMISSIONCO' + 'LOR']);
        }
        set ['emissionCo' + 'lor'](_0x2ce1ab) {
            this['_shaderVal' + 'ues']['setVector'](_0x3028f9['EMISSIONCO' + 'LOR'], _0x2ce1ab);
        }
        get ['emissionTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3028f9['EMISSIONTE' + 'XTURE']);
        }
        set ['emissionTe' + 'xture'](_0x2197fd) {
            _0x2197fd ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3028f9['EMISSIONTE' + 'XTURE'], _0x2197fd);
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3028f9['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x2c57e4) {
            _0x2c57e4 && (0x1 != _0x2c57e4['x'] || 0x1 != _0x2c57e4['y'] || 0x0 != _0x2c57e4['z'] || 0x0 != _0x2c57e4['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x3028f9['TILINGOFFS' + 'ET'], _0x2c57e4);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x3028f9['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x2a6c0e) {
            this['_shaderVal' + 'ues']['setBool'](_0x3028f9['DEPTH_WRIT' + 'E'], _0x2a6c0e);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3028f9['CULL']);
        }
        set ['cull'](_0x4d316f) {
            this['_shaderVal' + 'ues']['setInt'](_0x3028f9['CULL'], _0x4d316f);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3028f9['BLEND']);
        }
        set ['blend'](_0x1224f8) {
            this['_shaderVal' + 'ues']['setInt'](_0x3028f9['BLEND'], _0x1224f8);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3028f9['BLEND_SRC']);
        }
        set ['blendSrc'](_0x225b9a) {
            this['_shaderVal' + 'ues']['setInt'](_0x3028f9['BLEND_SRC'], _0x225b9a);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3028f9['BLEND_DST']);
        }
        set ['blendDst'](_0x64b916) {
            this['_shaderVal' + 'ues']['setInt'](_0x3028f9['BLEND_DST'], _0x64b916);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3028f9['DEPTH_TEST']);
        }
        set ['depthTest'](_0x3c3221) {
            this['_shaderVal' + 'ues']['setInt'](_0x3028f9['DEPTH_TEST'], _0x3c3221);
        }
        set ['renderMode'](_0x562061) {
            switch (_0x562061) {
            case _0xc55b22['PBRRenderM' + 'ode']['Opaque']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            case _0xc55b22['PBRRenderM' + 'ode']['Cutout']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            case _0xc55b22['PBRRenderM' + 'ode']['Fade']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3028f9['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            case _0xc55b22['PBRRenderM' + 'ode']['Transparen' + 't']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x3028f9['SHADERDEFI' + 'NE_TRANSPA' + 'RENTBLEND']);
                break;
            default:
                throw new Error('PBRMateria' + 'l:unknown\x20' + 'renderMode' + '\x20value.');
            }
        }
        get ['enableRefl' + 'ection']() {
            return !0x0;
        }
        set ['enableRefl' + 'ection'](_0x7d490b) {
        }
    }
    _0x3028f9['ALBEDOTEXT' + 'URE'] = _0x38ffce['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x3028f9['ALBEDOCOLO' + 'R'] = _0x38ffce['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x3028f9['TILINGOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x3028f9['NORMALTEXT' + 'URE'] = _0x38ffce['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x3028f9['NORMALSCAL' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_NormalSc' + 'ale'), _0x3028f9['SMOOTHNESS'] = _0x38ffce['propertyNa' + 'meToID']('u_Smoothne' + 'ss'), _0x3028f9['SMOOTHNESS' + 'SCALE'] = _0x38ffce['propertyNa' + 'meToID']('u_Smoothne' + 'ssScale'), _0x3028f9['OCCLUSIONT' + 'EXTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Occlusio' + 'nTexture'), _0x3028f9['OCCLUSIONS' + 'TRENGTH'] = _0x38ffce['propertyNa' + 'meToID']('u_occlusio' + 'nStrength'), _0x3028f9['PARALLAXTE' + 'XTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Parallax' + 'Texture'), _0x3028f9['PARALLAXSC' + 'ALE'] = _0x38ffce['propertyNa' + 'meToID']('u_Parallax' + 'Scale'), _0x3028f9['EMISSIONTE' + 'XTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Emission' + 'Texture'), _0x3028f9['EMISSIONCO' + 'LOR'] = _0x38ffce['propertyNa' + 'meToID']('u_Emission' + 'Color'), _0x3028f9['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x3028f9['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x3028f9['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x3028f9['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x3028f9['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x3028f9['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te'), _0x3028f9['renderQual' + 'ity'] = _0xc55b22['PBRRenderQ' + 'uality']['High'];
    var _0xa487ce, _0x31089b, _0x2f1878, _0x26ec7b, _0x4665fb, _0x22bfa5, _0x2b7505, _0x507d1a, _0x474716, _0x4b2303, _0x14af9a = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#define\x20' + 'SETUP_BRDF' + '_INPUT\x20spe' + 'cularSetup' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a#include\x20' + '\x22PBRFSInpu' + 't.glsl\x22;\x0d\x0a' + '#include\x20\x22' + 'LayaPBRBRD' + 'F.glsl\x22;\x0d\x0a' + '#include\x20\x22' + 'GlobalIllu' + 'mination.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dow.glsl\x22\x0d' + '\x0a#include\x20' + '\x22PBRCore.g' + 'lsl\x22;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09frag' + 'mentForwar' + 'd();\x0d\x0a}', _0x2c9dcc = '#include\x20\x22' + 'PBRVSInput' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22L' + 'ighting.gl' + 'sl\x22;\x0d\x0a#inc' + 'lude\x20\x22PBRV' + 'ertex.glsl' + '\x22;\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vertexF' + 'orward();\x0d' + '\x0a\x09gl_Posit' + 'ion=remapG' + 'LPositionZ' + '(gl_Positi' + 'on);\x0d\x0a}', _0x12d4d3 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22ShadowCa' + 'sterFS.gls' + 'l\x22\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09gl_Frag' + 'Color=shad' + 'owCasterFr' + 'agment();\x0d' + '\x0a}', _0x35521e = '#include\x20\x22' + 'ShadowCast' + 'erVS.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tionCS\x20=\x20\x20' + 'shadowCast' + 'erVertex()' + ';\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(positio' + 'nCS);\x0d\x0a}';
    class _0x241d18 {
        constructor() {
            this['textureID'] = -0x1;
        }
    }
    class _0x1c10b8 extends _0x2247ad['Resource'] {
        constructor(_0x1770f9, _0x2b5747, _0x598b65, _0x51f212, _0x29c5eb) {
            super(), this['_statePara' + 'msMap'] = [], this['_uploadMar' + 'k'] = -0x1, this['_uploadRen' + 'derType'] = -0x1, this['_vs'] = _0x1770f9, this['_ps'] = _0x2b5747, this['_attribute' + 'Map'] = _0x598b65, this['_uniformMa' + 'p'] = _0x51f212, this['_shaderPas' + 's'] = _0x29c5eb, this['_create'](), this['lock'] = !0x0;
        }
        ['_create']() {
            var _0x362e6d = _0x2247ad['LayaGL']['instance'];
            for (var _0x1fd8f0 in (this['_program'] = _0x362e6d['createProg' + 'ram'](), this['_vshader'] = this['_createSha' + 'der'](_0x362e6d, this['_vs'], _0x362e6d['VERTEX_SHA' + 'DER']), this['_pshader'] = this['_createSha' + 'der'](_0x362e6d, this['_ps'], _0x362e6d['FRAGMENT_S' + 'HADER']), _0x362e6d['attachShad' + 'er'](this['_program'], this['_vshader']), _0x362e6d['attachShad' + 'er'](this['_program'], this['_pshader']), this['_attribute' + 'Map']))
                _0x362e6d['bindAttrib' + 'Location'](this['_program'], this['_attribute' + 'Map'][_0x1fd8f0], _0x1fd8f0);
            if (_0x362e6d['linkProgra' + 'm'](this['_program']), !_0x2247ad['Render']['isConchApp'] && _0x38ffce['debugMode'] && !_0x362e6d['getProgram' + 'Parameter'](this['_program'], _0x362e6d['LINK_STATU' + 'S']))
                throw _0x362e6d['getProgram' + 'InfoLog'](this['_program']);
            var _0x47bf8b = [], _0x305e60 = [], _0x5ec769 = [], _0x3f7e29 = [], _0x22a1ee = [];
            this['_customUni' + 'formParams' + 'Map'] = [];
            var _0x3b2d0d, _0x383be5, _0x2e24fc, _0x1efbe9 = _0x362e6d['getProgram' + 'Parameter'](this['_program'], _0x362e6d['ACTIVE_UNI' + 'FORMS']);
            for (_0x2247ad['WebGLConte' + 'xt']['useProgram'](_0x362e6d, this['_program']), this['_curActTex' + 'Index'] = 0x0, _0x383be5 = 0x0; _0x383be5 < _0x1efbe9; _0x383be5++) {
                var _0x316bbe = _0x362e6d['getActiveU' + 'niform'](this['_program'], _0x383be5), _0x41c3a0 = _0x316bbe['name'];
                (_0x3b2d0d = new _0x241d18())['location'] = _0x362e6d['getUniform' + 'Location'](this['_program'], _0x41c3a0), _0x41c3a0['indexOf']('[0]') > 0x0 ? (_0x3b2d0d['name'] = _0x41c3a0 = _0x41c3a0['substr'](0x0, _0x41c3a0['length'] - 0x3), _0x3b2d0d['isArray'] = !0x0) : (_0x3b2d0d['name'] = _0x41c3a0, _0x3b2d0d['isArray'] = !0x1), _0x3b2d0d['type'] = _0x316bbe['type'], this['_addShader' + 'UnifiormFu' + 'n'](_0x3b2d0d);
                var _0x3127a1 = this['_uniformMa' + 'p'][_0x41c3a0];
                if (null != _0x3127a1)
                    switch (_0x3b2d0d['dataOffset'] = _0x38ffce['propertyNa' + 'meToID'](_0x41c3a0), _0x3127a1) {
                    case _0x38ffce['PERIOD_CUS' + 'TOM']:
                        _0x22a1ee['push'](_0x3b2d0d);
                        break;
                    case _0x38ffce['PERIOD_MAT' + 'ERIAL']:
                        _0x3f7e29['push'](_0x3b2d0d);
                        break;
                    case _0x38ffce['PERIOD_SPR' + 'ITE']:
                        _0x5ec769['push'](_0x3b2d0d);
                        break;
                    case _0x38ffce['PERIOD_CAM' + 'ERA']:
                        _0x305e60['push'](_0x3b2d0d);
                        break;
                    case _0x38ffce['PERIOD_SCE' + 'NE']:
                        _0x47bf8b['push'](_0x3b2d0d);
                        break;
                    default:
                        throw new Error('Shader3D:\x20' + 'period\x20is\x20' + 'unkonw.');
                    }
            }
            for (this['_sceneUnif' + 'ormParamsM' + 'ap'] = _0x2247ad['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0x47bf8b['length'] * 0x5 + 0x4, 0x40, !0x0), _0x383be5 = 0x0, _0x2e24fc = _0x47bf8b['length']; _0x383be5 < _0x2e24fc; _0x383be5++)
                this['_sceneUnif' + 'ormParamsM' + 'ap']['addShaderU' + 'niform'](_0x47bf8b[_0x383be5]);
            for (this['_cameraUni' + 'formParams' + 'Map'] = _0x2247ad['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0x305e60['length'] * 0x5 + 0x4, 0x40, !0x0), _0x383be5 = 0x0, _0x2e24fc = _0x305e60['length']; _0x383be5 < _0x2e24fc; _0x383be5++)
                this['_cameraUni' + 'formParams' + 'Map']['addShaderU' + 'niform'](_0x305e60[_0x383be5]);
            for (this['_spriteUni' + 'formParams' + 'Map'] = _0x2247ad['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0x5ec769['length'] * 0x5 + 0x4, 0x40, !0x0), _0x383be5 = 0x0, _0x2e24fc = _0x5ec769['length']; _0x383be5 < _0x2e24fc; _0x383be5++)
                this['_spriteUni' + 'formParams' + 'Map']['addShaderU' + 'niform'](_0x5ec769[_0x383be5]);
            for (this['_materialU' + 'niformPara' + 'msMap'] = _0x2247ad['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0x3f7e29['length'] * 0x5 + 0x4, 0x40, !0x0), _0x383be5 = 0x0, _0x2e24fc = _0x3f7e29['length']; _0x383be5 < _0x2e24fc; _0x383be5++)
                this['_materialU' + 'niformPara' + 'msMap']['addShaderU' + 'niform'](_0x3f7e29[_0x383be5]);
            for (this['_customUni' + 'formParams' + 'Map']['length'] = _0x22a1ee['length'], _0x383be5 = 0x0, _0x2e24fc = _0x22a1ee['length']; _0x383be5 < _0x2e24fc; _0x383be5++) {
                var _0x2104a5 = _0x22a1ee[_0x383be5];
                this['_customUni' + 'formParams' + 'Map'][_0x2104a5['dataOffset']] = _0x2104a5;
            }
            var _0x21984e = this['_shaderPas' + 's']['_stateMap'];
            for (var _0x462bdf in _0x21984e)
                this['_statePara' + 'msMap'][_0x21984e[_0x462bdf]] = _0x38ffce['propertyNa' + 'meToID'](_0x462bdf);
        }
        ['_getRender' + 'State'](_0x357b97, _0x4078a9) {
            var _0x3ce510 = this['_statePara' + 'msMap'][_0x4078a9];
            return null == _0x3ce510 ? null : _0x357b97[_0x3ce510];
        }
        ['_disposeRe' + 'source']() {
            _0x2247ad['LayaGL']['instance']['deleteShad' + 'er'](this['_vshader']), _0x2247ad['LayaGL']['instance']['deleteShad' + 'er'](this['_pshader']), _0x2247ad['LayaGL']['instance']['deleteProg' + 'ram'](this['_program']), this['_vshader'] = this['_pshader'] = this['_program'] = null, this['_setGPUMem' + 'ory'](0x0), this['_curActTex' + 'Index'] = 0x0;
        }
        ['_addShader' + 'UnifiormFu' + 'n'](_0x4a36eb) {
            var _0x37c537 = _0x2247ad['LayaGL']['instance'];
            _0x4a36eb['caller'] = this;
            var _0x4af125 = _0x4a36eb['isArray'];
            switch (_0x4a36eb['type']) {
            case _0x37c537['BOOL']:
                _0x4a36eb['fun'] = this['_uniform1i'], _0x4a36eb['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x37c537['INT']:
                _0x4a36eb['fun'] = _0x4af125 ? this['_uniform1i' + 'v'] : this['_uniform1i'], _0x4a36eb['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x37c537['FLOAT']:
                _0x4a36eb['fun'] = _0x4af125 ? this['_uniform1f' + 'v'] : this['_uniform1f'], _0x4a36eb['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x37c537['FLOAT_VEC2']:
                _0x4a36eb['fun'] = _0x4af125 ? this['_uniform_v' + 'ec2v'] : this['_uniform_v' + 'ec2'], _0x4a36eb['uploadedVa' + 'lue'] = new Array(0x2);
                break;
            case _0x37c537['FLOAT_VEC3']:
                _0x4a36eb['fun'] = _0x4af125 ? this['_uniform_v' + 'ec3v'] : this['_uniform_v' + 'ec3'], _0x4a36eb['uploadedVa' + 'lue'] = new Array(0x3);
                break;
            case _0x37c537['FLOAT_VEC4']:
                _0x4a36eb['fun'] = _0x4af125 ? this['_uniform_v' + 'ec4v'] : this['_uniform_v' + 'ec4'], _0x4a36eb['uploadedVa' + 'lue'] = new Array(0x4);
                break;
            case _0x37c537['FLOAT_MAT2']:
                _0x4a36eb['fun'] = this['_uniformMa' + 'trix2fv'];
                break;
            case _0x37c537['FLOAT_MAT3']:
                _0x4a36eb['fun'] = this['_uniformMa' + 'trix3fv'];
                break;
            case _0x37c537['FLOAT_MAT4']:
                _0x4a36eb['fun'] = _0x4af125 ? this['_uniformMa' + 'trix4fv'] : this['_uniformMa' + 'trix4f'];
                break;
            case _0x37c537['SAMPLER_2D']:
            case _0x37c537['SAMPLER_2D' + '_SHADOW']:
                _0x37c537['uniform1i'](_0x4a36eb['location'], this['_curActTex' + 'Index']), _0x4a36eb['textureID'] = _0x2247ad['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x4a36eb['fun'] = this['_uniform_s' + 'ampler2D'];
                break;
            case 0x8b5f:
                _0x37c537['uniform1i'](_0x4a36eb['location'], this['_curActTex' + 'Index']), _0x4a36eb['textureID'] = _0x2247ad['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x4a36eb['fun'] = this['_uniform_s' + 'ampler3D'];
                break;
            case _0x37c537['SAMPLER_CU' + 'BE']:
                _0x37c537['uniform1i'](_0x4a36eb['location'], this['_curActTex' + 'Index']), _0x4a36eb['textureID'] = _0x2247ad['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x4a36eb['fun'] = this['_uniform_s' + 'amplerCube'];
                break;
            default:
                throw new Error('compile\x20sh' + 'ader\x20err!');
            }
        }
        ['_createSha' + 'der'](_0xb9838f, _0x16fb55, _0x168f31) {
            var _0x3388b6 = _0xb9838f['createShad' + 'er'](_0x168f31);
            if (_0xb9838f['shaderSour' + 'ce'](_0x3388b6, _0x16fb55), _0xb9838f['compileSha' + 'der'](_0x3388b6), _0x38ffce['debugMode'] && !_0xb9838f['getShaderP' + 'arameter'](_0x3388b6, _0xb9838f['COMPILE_ST' + 'ATUS']))
                throw _0xb9838f['getShaderI' + 'nfoLog'](_0x3388b6);
            return _0x3388b6;
        }
        ['_uniform1f'](_0x2e7744, _0x46c421) {
            var _0xfc9679 = _0x2e7744['uploadedVa' + 'lue'];
            return _0xfc9679[0x0] !== _0x46c421 ? (_0x2247ad['LayaGL']['instance']['uniform1f'](_0x2e7744['location'], _0xfc9679[0x0] = _0x46c421), 0x1) : 0x0;
        }
        ['_uniform1f' + 'v'](_0x4a71ea, _0x2b431b) {
            if (_0x2b431b['length'] < 0x4) {
                var _0x497d7d = _0x4a71ea['uploadedVa' + 'lue'];
                return _0x497d7d[0x0] !== _0x2b431b[0x0] || _0x497d7d[0x1] !== _0x2b431b[0x1] || _0x497d7d[0x2] !== _0x2b431b[0x2] || _0x497d7d[0x3] !== _0x2b431b[0x3] ? (_0x2247ad['LayaGL']['instance']['uniform1fv'](_0x4a71ea['location'], _0x2b431b), _0x497d7d[0x0] = _0x2b431b[0x0], _0x497d7d[0x1] = _0x2b431b[0x1], _0x497d7d[0x2] = _0x2b431b[0x2], _0x497d7d[0x3] = _0x2b431b[0x3], 0x1) : 0x0;
            }
            return _0x2247ad['LayaGL']['instance']['uniform1fv'](_0x4a71ea['location'], _0x2b431b), 0x1;
        }
        ['_uniform_v' + 'ec2'](_0x1950fa, _0x35bef4) {
            var _0x37493d = _0x1950fa['uploadedVa' + 'lue'];
            return _0x37493d[0x0] !== _0x35bef4['x'] || _0x37493d[0x1] !== _0x35bef4['y'] ? (_0x2247ad['LayaGL']['instance']['uniform2f'](_0x1950fa['location'], _0x37493d[0x0] = _0x35bef4['x'], _0x37493d[0x1] = _0x35bef4['y']), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec2v'](_0x300677, _0x5a7c43) {
            if (_0x5a7c43['length'] < 0x2) {
                var _0x591c33 = _0x300677['uploadedVa' + 'lue'];
                return _0x591c33[0x0] !== _0x5a7c43[0x0] || _0x591c33[0x1] !== _0x5a7c43[0x1] || _0x591c33[0x2] !== _0x5a7c43[0x2] || _0x591c33[0x3] !== _0x5a7c43[0x3] ? (_0x2247ad['LayaGL']['instance']['uniform2fv'](_0x300677['location'], _0x5a7c43), _0x591c33[0x0] = _0x5a7c43[0x0], _0x591c33[0x1] = _0x5a7c43[0x1], _0x591c33[0x2] = _0x5a7c43[0x2], _0x591c33[0x3] = _0x5a7c43[0x3], 0x1) : 0x0;
            }
            return _0x2247ad['LayaGL']['instance']['uniform2fv'](_0x300677['location'], _0x5a7c43), 0x1;
        }
        ['_uniform_v' + 'ec3'](_0x2a7f30, _0x1fc11) {
            var _0x5e6e51 = _0x2a7f30['uploadedVa' + 'lue'];
            return _0x5e6e51[0x0] !== _0x1fc11['x'] || _0x5e6e51[0x1] !== _0x1fc11['y'] || _0x5e6e51[0x2] !== _0x1fc11['z'] ? (_0x2247ad['LayaGL']['instance']['uniform3f'](_0x2a7f30['location'], _0x5e6e51[0x0] = _0x1fc11['x'], _0x5e6e51[0x1] = _0x1fc11['y'], _0x5e6e51[0x2] = _0x1fc11['z']), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec3v'](_0x24ae98, _0x27044e) {
            return _0x2247ad['LayaGL']['instance']['uniform3fv'](_0x24ae98['location'], _0x27044e), 0x1;
        }
        ['_uniform_v' + 'ec4'](_0x539b48, _0x361139) {
            var _0x49cb6c = _0x539b48['uploadedVa' + 'lue'];
            return _0x49cb6c[0x0] !== _0x361139['x'] || _0x49cb6c[0x1] !== _0x361139['y'] || _0x49cb6c[0x2] !== _0x361139['z'] || _0x49cb6c[0x3] !== _0x361139['w'] ? (_0x2247ad['LayaGL']['instance']['uniform4f'](_0x539b48['location'], _0x49cb6c[0x0] = _0x361139['x'], _0x49cb6c[0x1] = _0x361139['y'], _0x49cb6c[0x2] = _0x361139['z'], _0x49cb6c[0x3] = _0x361139['w']), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec4v'](_0xc496ef, _0x532302) {
            return _0x2247ad['LayaGL']['instance']['uniform4fv'](_0xc496ef['location'], _0x532302), 0x1;
        }
        ['_uniformMa' + 'trix2fv'](_0x4552e7, _0x555fe6) {
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix2fv'](_0x4552e7['location'], !0x1, _0x555fe6), 0x1;
        }
        ['_uniformMa' + 'trix3fv'](_0x45b8de, _0x186e68) {
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix3fv'](_0x45b8de['location'], !0x1, _0x186e68), 0x1;
        }
        ['_uniformMa' + 'trix4f'](_0x5dcdd7, _0x2f0b8f) {
            var _0x3c2527 = _0x2f0b8f['elements'];
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix4fv'](_0x5dcdd7['location'], !0x1, _0x3c2527), 0x1;
        }
        ['_uniformMa' + 'trix4fv'](_0x6502d2, _0x3fa443) {
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix4fv'](_0x6502d2['location'], !0x1, _0x3fa443), 0x1;
        }
        ['_uniform1i'](_0x369bce, _0x35cc58) {
            var _0x413d60 = _0x369bce['uploadedVa' + 'lue'];
            return _0x413d60[0x0] !== _0x35cc58 ? (_0x2247ad['LayaGL']['instance']['uniform1i'](_0x369bce['location'], _0x413d60[0x0] = _0x35cc58), 0x1) : 0x0;
        }
        ['_uniform1i' + 'v'](_0x5b8255, _0x1c5d5d) {
            return _0x2247ad['LayaGL']['instance']['uniform1iv'](_0x5b8255['location'], _0x1c5d5d), 0x1;
        }
        ['_uniform_i' + 'vec2'](_0x17e6d1, _0x1d9320) {
            var _0x59213f = _0x17e6d1['uploadedVa' + 'lue'];
            return _0x59213f[0x0] !== _0x1d9320[0x0] || _0x59213f[0x1] !== _0x1d9320[0x1] ? (_0x2247ad['LayaGL']['instance']['uniform2i'](_0x17e6d1['location'], _0x59213f[0x0] = _0x1d9320[0x0], _0x59213f[0x1] = _0x1d9320[0x1]), 0x1) : 0x0;
        }
        ['_uniform_i' + 'vec2v'](_0x42755a, _0x2a9386) {
            return _0x2247ad['LayaGL']['instance']['uniform2iv'](_0x42755a['location'], _0x2a9386), 0x1;
        }
        ['_uniform_v' + 'ec3i'](_0x3e28cc, _0x2763f1) {
            var _0x5c6e6e = _0x3e28cc['uploadedVa' + 'lue'];
            return _0x5c6e6e[0x0] !== _0x2763f1[0x0] || _0x5c6e6e[0x1] !== _0x2763f1[0x1] || _0x5c6e6e[0x2] !== _0x2763f1[0x2] ? (_0x2247ad['LayaGL']['instance']['uniform3i'](_0x3e28cc['location'], _0x5c6e6e[0x0] = _0x2763f1[0x0], _0x5c6e6e[0x1] = _0x2763f1[0x1], _0x5c6e6e[0x2] = _0x2763f1[0x2]), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec3vi'](_0x1e6160, _0x2b59a3) {
            return _0x2247ad['LayaGL']['instance']['uniform3iv'](_0x1e6160['location'], _0x2b59a3), 0x1;
        }
        ['_uniform_v' + 'ec4i'](_0x3fc253, _0x2ad426) {
            var _0x46e487 = _0x3fc253['uploadedVa' + 'lue'];
            return _0x46e487[0x0] !== _0x2ad426[0x0] || _0x46e487[0x1] !== _0x2ad426[0x1] || _0x46e487[0x2] !== _0x2ad426[0x2] || _0x46e487[0x3] !== _0x2ad426[0x3] ? (_0x2247ad['LayaGL']['instance']['uniform4i'](_0x3fc253['location'], _0x46e487[0x0] = _0x2ad426[0x0], _0x46e487[0x1] = _0x2ad426[0x1], _0x46e487[0x2] = _0x2ad426[0x2], _0x46e487[0x3] = _0x2ad426[0x3]), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec4vi'](_0x1fd133, _0x4288ba) {
            return _0x2247ad['LayaGL']['instance']['uniform4iv'](_0x1fd133['location'], _0x4288ba), 0x1;
        }
        ['_uniform_s' + 'ampler2D'](_0x53b883, _0x1c83cb) {
            var _0x5b3c14 = _0x1c83cb['_getSource']() || _0x1c83cb['defaulteTe' + 'xture']['_getSource'](), _0x378344 = _0x2247ad['LayaGL']['instance'];
            return _0x2247ad['WebGLConte' + 'xt']['activeText' + 'ure'](_0x378344, _0x53b883['textureID']), _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x378344, _0x378344['TEXTURE_2D'], _0x5b3c14), 0x0;
        }
        ['_uniform_s' + 'ampler3D'](_0x158d37, _0x480d8a) {
            var _0x4ec277 = _0x480d8a['_getSource']() || _0x480d8a['defaulteTe' + 'xture']['_getSource'](), _0x1ee28e = _0x2247ad['LayaGL']['instance'];
            return _0x2247ad['WebGLConte' + 'xt']['activeText' + 'ure'](_0x1ee28e, _0x158d37['textureID']), _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x1ee28e, WebGL2RenderingContext['TEXTURE_3D'], _0x4ec277), 0x0;
        }
        ['_uniform_s' + 'amplerCube'](_0x17cddf, _0x4680ff) {
            var _0x148e4a = _0x4680ff['_getSource']() || _0x4680ff['defaulteTe' + 'xture']['_getSource'](), _0x249240 = _0x2247ad['LayaGL']['instance'];
            return _0x2247ad['WebGLConte' + 'xt']['activeText' + 'ure'](_0x249240, _0x17cddf['textureID']), _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x249240, _0x249240['TEXTURE_CU' + 'BE_MAP'], _0x148e4a), 0x0;
        }
        ['bind']() {
            return _0x2247ad['WebGLConte' + 'xt']['useProgram'](_0x2247ad['LayaGL']['instance'], this['_program']);
        }
        ['uploadUnif' + 'orms'](_0x262f71, _0x4bbb27, _0x3d700a) {
            _0x2247ad['Stat']['shaderCall'] += _0x2247ad['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms'](_0x2247ad['LayaGL']['instance'], _0x262f71, _0x4bbb27, _0x3d700a);
        }
        ['uploadRend' + 'erStateBle' + 'ndDepth'](_0x5c4939) {
            var _0x53b2c8 = _0x2247ad['LayaGL']['instance'], _0x7209b7 = this['_shaderPas' + 's']['renderStat' + 'e'], _0x214f1e = _0x5c4939['getData'](), _0x6c2199 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']), _0x5dcf21 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST']), _0x2d5420 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND']);
            switch (null == _0x6c2199 && (_0x6c2199 = _0x7209b7['depthWrite']), null == _0x5dcf21 && (_0x5dcf21 = _0x7209b7['depthTest']), null == _0x2d5420 && (_0x2d5420 = _0x7209b7['blend']), _0x2247ad['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x53b2c8, _0x6c2199), _0x5dcf21 === _0x4ba527['DEPTHTEST_' + 'OFF'] ? _0x2247ad['WebGLConte' + 'xt']['setDepthTe' + 'st'](_0x53b2c8, !0x1) : (_0x2247ad['WebGLConte' + 'xt']['setDepthTe' + 'st'](_0x53b2c8, !0x0), _0x2247ad['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x53b2c8, _0x5dcf21)), _0x2d5420) {
            case _0x4ba527['BLEND_DISA' + 'BLE']:
                _0x2247ad['WebGLConte' + 'xt']['setBlend'](_0x53b2c8, !0x1);
                break;
            case _0x4ba527['BLEND_ENAB' + 'LE_ALL']:
                var _0x42dadf = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_E' + 'QUATION']), _0x41ce87 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC']), _0x541dfe = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST']);
                null == _0x42dadf && (_0x42dadf = _0x7209b7['blendEquat' + 'ion']), null == _0x41ce87 && (_0x41ce87 = _0x7209b7['srcBlend']), null == _0x541dfe && (_0x541dfe = _0x7209b7['dstBlend']), _0x2247ad['WebGLConte' + 'xt']['setBlend'](_0x53b2c8, !0x0), _0x2247ad['WebGLConte' + 'xt']['setBlendEq' + 'uation'](_0x53b2c8, _0x42dadf), _0x2247ad['WebGLConte' + 'xt']['setBlendFu' + 'nc'](_0x53b2c8, _0x41ce87, _0x541dfe);
                break;
            case _0x4ba527['BLEND_ENAB' + 'LE_SEPERAT' + 'E']:
                var _0xde7185 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_RG' + 'B']), _0x1d1470 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_AL' + 'PHA']), _0x500517 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC_RGB']), _0x38ef97 = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST_RGB']), _0x19aa0e = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC_ALPHA']), _0x3e828b = this['_getRender' + 'State'](_0x214f1e, _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST_ALPHA']);
                null == _0xde7185 && (_0xde7185 = _0x7209b7['blendEquat' + 'ionRGB']), null == _0x1d1470 && (_0x1d1470 = _0x7209b7['blendEquat' + 'ionAlpha']), null == _0x500517 && (_0x500517 = _0x7209b7['srcBlendRG' + 'B']), null == _0x38ef97 && (_0x38ef97 = _0x7209b7['dstBlendRG' + 'B']), null == _0x19aa0e && (_0x19aa0e = _0x7209b7['srcBlendAl' + 'pha']), null == _0x3e828b && (_0x3e828b = _0x7209b7['dstBlendAl' + 'pha']), _0x2247ad['WebGLConte' + 'xt']['setBlend'](_0x53b2c8, !0x0), _0x2247ad['WebGLConte' + 'xt']['setBlendEq' + 'uationSepa' + 'rate'](_0x53b2c8, _0xde7185, _0x1d1470), _0x2247ad['WebGLConte' + 'xt']['setBlendFu' + 'ncSeperate'](_0x53b2c8, _0x500517, _0x38ef97, _0x19aa0e, _0x3e828b);
            }
        }
        ['uploadRend' + 'erStateFro' + 'ntFace'](_0x3b7990, _0x4684db, _0x42847f) {
            var _0x2aea79, _0x5b9c4d = _0x2247ad['LayaGL']['instance'], _0x40620f = this['_shaderPas' + 's']['renderStat' + 'e'], _0x67a416 = _0x3b7990['getData'](), _0x2a44b5 = this['_getRender' + 'State'](_0x67a416, _0x38ffce['RENDER_STA' + 'TE_CULL']);
            switch (null == _0x2a44b5 && (_0x2a44b5 = _0x40620f['cull']), _0x2a44b5) {
            case _0x4ba527['CULL_NONE']:
                _0x2247ad['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x5b9c4d, !0x1);
                break;
            case _0x4ba527['CULL_FRONT']:
                _0x2247ad['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x5b9c4d, !0x0), _0x2aea79 = _0x4684db ? _0x42847f ? _0x5b9c4d['CCW'] : _0x5b9c4d['CW'] : _0x42847f ? _0x5b9c4d['CW'] : _0x5b9c4d['CCW'], _0x2247ad['WebGLConte' + 'xt']['setFrontFa' + 'ce'](_0x5b9c4d, _0x2aea79);
                break;
            case _0x4ba527['CULL_BACK']:
                _0x2247ad['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x5b9c4d, !0x0), _0x2aea79 = _0x4684db ? _0x42847f ? _0x5b9c4d['CW'] : _0x5b9c4d['CCW'] : _0x42847f ? _0x5b9c4d['CCW'] : _0x5b9c4d['CW'], _0x2247ad['WebGLConte' + 'xt']['setFrontFa' + 'ce'](_0x5b9c4d, _0x2aea79);
            }
        }
        ['uploadCust' + 'omUniform'](_0x1c9e46, _0x55328a) {
            _0x2247ad['Stat']['shaderCall'] += _0x2247ad['LayaGLRunn' + 'er']['uploadCust' + 'omUniform'](_0x2247ad['LayaGL']['instance'], this['_customUni' + 'formParams' + 'Map'], _0x1c9e46, _0x55328a);
        }
        ['_uniformMa' + 'trix2fvFor' + 'Native'](_0x51ea95, _0x3d06a0) {
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix2fvEx'](_0x51ea95['location'], !0x1, _0x3d06a0), 0x1;
        }
        ['_uniformMa' + 'trix3fvFor' + 'Native'](_0x1e6763, _0x3b0c29) {
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix3fvEx'](_0x1e6763['location'], !0x1, _0x3b0c29), 0x1;
        }
        ['_uniformMa' + 'trix4fvFor' + 'Native'](_0x25c5d6, _0x1dd4e5) {
            return _0x2247ad['LayaGL']['instance']['uniformMat' + 'rix4fvEx'](_0x25c5d6['location'], !0x1, _0x1dd4e5), 0x1;
        }
    }
    class _0x24ac1f {
        constructor() {
            this['elements'] = [], this['length'] = 0x0;
        }
        ['_add'](_0x5f5c33) {
            this['length'] === this['elements']['length'] ? this['elements']['push'](_0x5f5c33) : this['elements'][this['length']] = _0x5f5c33;
        }
        ['add'](_0x2b48ac) {
            this['length'] === this['elements']['length'] ? this['elements']['push'](_0x2b48ac) : this['elements'][this['length']] = _0x2b48ac, this['length']++;
        }
    }
    class _0x5b31a2 extends _0x24ac1f {
        constructor() {
            super();
        }
        ['add'](_0x143059) {
            if (-0x1 !== _0x143059['_getIndexI' + 'nList']())
                throw 'SimpleSing' + 'letonList:' + _0x143059 + ('\x20has\x20\x20in\x20\x20' + 'SingletonL' + 'ist.');
            this['_add'](_0x143059), _0x143059['_setIndexI' + 'nList'](this['length']++);
        }
        ['remove'](_0x31817d) {
            var _0x518659 = _0x31817d['_getIndexI' + 'nList']();
            if (this['length']--, _0x518659 !== this['length']) {
                var _0x1b4087 = this['elements'][this['length']];
                this['elements'][_0x518659] = _0x1b4087, _0x1b4087['_setIndexI' + 'nList'](_0x518659);
            }
            _0x31817d['_setIndexI' + 'nList'](-0x1);
        }
        ['clear']() {
            for (var _0x2bfe63 = this['elements'], _0x5e66cb = 0x0, _0x48e2c8 = this['length']; _0x5e66cb < _0x48e2c8; _0x5e66cb++)
                _0x2bfe63[_0x5e66cb]['_setIndexI' + 'nList'](-0x1);
            this['length'] = 0x0;
        }
    }
    class _0x151df0 {
        constructor(_0x4a2683 = 0x1, _0x2ee228 = 0x1, _0x54df53 = 0x1, _0x420040 = 0x1) {
            this['r'] = _0x4a2683, this['g'] = _0x2ee228, this['b'] = _0x54df53, this['a'] = _0x420040;
        }
        static ['gammaToLin' + 'earSpace'](_0xd84c11) {
            return _0xd84c11 <= 0.04045 ? _0xd84c11 / 12.92 : _0xd84c11 < 0x1 ? Math['pow']((_0xd84c11 + 0.055) / 1.055, 2.4) : Math['pow'](_0xd84c11, 2.4);
        }
        static ['linearToGa' + 'mmaSpace'](_0x4ef2ce) {
            return _0x4ef2ce <= 0x0 ? 0x0 : _0x4ef2ce <= 0.0031308 ? 12.92 * _0x4ef2ce : _0x4ef2ce <= 0x1 ? 1.055 * Math['pow'](_0x4ef2ce, 0.41666) - 0.055 : Math['pow'](_0x4ef2ce, 0.41666);
        }
        ['toLinear'](_0x357cc4) {
            _0x357cc4['r'] = _0x151df0['gammaToLin' + 'earSpace'](this['r']), _0x357cc4['g'] = _0x151df0['gammaToLin' + 'earSpace'](this['g']), _0x357cc4['b'] = _0x151df0['gammaToLin' + 'earSpace'](this['b']);
        }
        ['toGamma'](_0x5ae703) {
            _0x5ae703['r'] = _0x151df0['linearToGa' + 'mmaSpace'](this['r']), _0x5ae703['g'] = _0x151df0['linearToGa' + 'mmaSpace'](this['g']), _0x5ae703['b'] = _0x151df0['linearToGa' + 'mmaSpace'](this['b']);
        }
        ['cloneTo'](_0x347691) {
            var _0x1c5ac0 = _0x347691;
            _0x1c5ac0['r'] = this['r'], _0x1c5ac0['g'] = this['g'], _0x1c5ac0['b'] = this['b'], _0x1c5ac0['a'] = this['a'];
        }
        ['clone']() {
            var _0xa3bbaa = new _0x151df0();
            return this['cloneTo'](_0xa3bbaa), _0xa3bbaa;
        }
        ['forNativeE' + 'lement']() {
        }
    }
    _0x151df0['RED'] = new _0x151df0(0x1, 0x0, 0x0, 0x1), _0x151df0['GREEN'] = new _0x151df0(0x0, 0x1, 0x0, 0x1), _0x151df0['BLUE'] = new _0x151df0(0x0, 0x0, 0x1, 0x1), _0x151df0['CYAN'] = new _0x151df0(0x0, 0x1, 0x1, 0x1), _0x151df0['YELLOW'] = new _0x151df0(0x1, 0.92, 0.016, 0x1), _0x151df0['MAGENTA'] = new _0x151df0(0x1, 0x0, 0x1, 0x1), _0x151df0['GRAY'] = new _0x151df0(0.5, 0.5, 0.5, 0x1), _0x151df0['WHITE'] = new _0x151df0(0x1, 0x1, 0x1, 0x1), _0x151df0['BLACK'] = new _0x151df0(0x0, 0x0, 0x0, 0x1);
    class _0xfb8b43 {
        constructor() {
            this['_batchRend' + 'erElementP' + 'ool'] = [];
        }
        static ['_registerM' + 'anager'](_0x2dec97) {
            _0xfb8b43['_managers']['push'](_0x2dec97);
        }
        ['_clear']() {
            this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['dispose']() {
        }
    }
    _0xfb8b43['_managers'] = [];
    class _0x17c9f4 extends _0x2247ad['EventDispa' + 'tcher'] {
        constructor(_0x414845) {
            super(), this['_localPosi' + 'tion'] = new _0x43b358(0x0, 0x0, 0x0), this['_localRota' + 'tion'] = new _0x7cf2d3(0x0, 0x0, 0x0, 0x1), this['_localScal' + 'e'] = new _0x43b358(0x1, 0x1, 0x1), this['_localRota' + 'tionEuler'] = new _0x43b358(0x0, 0x0, 0x0), this['_localMatr' + 'ix'] = new _0x334e9d(), this['_position'] = new _0x43b358(0x0, 0x0, 0x0), this['_rotation'] = new _0x7cf2d3(0x0, 0x0, 0x0, 0x1), this['_scale'] = new _0x43b358(0x1, 0x1, 0x1), this['_rotationE' + 'uler'] = new _0x43b358(0x0, 0x0, 0x0), this['_worldMatr' + 'ix'] = new _0x334e9d(), this['_children'] = null, this['_parent'] = null, this['_dummy'] = null, this['_transform' + 'Flag'] = 0x0, this['_owner'] = _0x414845, this['_children'] = [], this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'LOCALEULER'] | _0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x1), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDEULER'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE'] | _0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'], !0x0);
        }
        get ['_isFrontFa' + 'ceInvert']() {
            var _0x4bc625 = this['getWorldLo' + 'ssyScale'](), _0x138cac = _0x4bc625['x'] < 0x0;
            return _0x4bc625['y'] < 0x0 && (_0x138cac = !_0x138cac), _0x4bc625['z'] < 0x0 && (_0x138cac = !_0x138cac), _0x138cac;
        }
        get ['owner']() {
            return this['_owner'];
        }
        get ['worldNeedU' + 'pdate']() {
            return this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']);
        }
        get ['localPosit' + 'ionX']() {
            return this['_localPosi' + 'tion']['x'];
        }
        set ['localPosit' + 'ionX'](_0x36dd5e) {
            this['_localPosi' + 'tion']['x'] = _0x36dd5e, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ionY']() {
            return this['_localPosi' + 'tion']['y'];
        }
        set ['localPosit' + 'ionY'](_0x50e689) {
            this['_localPosi' + 'tion']['y'] = _0x50e689, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ionZ']() {
            return this['_localPosi' + 'tion']['z'];
        }
        set ['localPosit' + 'ionZ'](_0x49e779) {
            this['_localPosi' + 'tion']['z'] = _0x49e779, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ion']() {
            return this['_localPosi' + 'tion'];
        }
        set ['localPosit' + 'ion'](_0x3d4353) {
            this['_localPosi' + 'tion'] !== _0x3d4353 && _0x3d4353['cloneTo'](this['_localPosi' + 'tion']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_onWorldPo' + 'sitionTran' + 'sform']();
        }
        get ['localRotat' + 'ionX']() {
            return this['localRotat' + 'ion']['x'];
        }
        set ['localRotat' + 'ionX'](_0x292925) {
            this['_localRota' + 'tion']['x'] = _0x292925, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionY']() {
            return this['localRotat' + 'ion']['y'];
        }
        set ['localRotat' + 'ionY'](_0x14f7ef) {
            this['_localRota' + 'tion']['y'] = _0x14f7ef, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionZ']() {
            return this['localRotat' + 'ion']['z'];
        }
        set ['localRotat' + 'ionZ'](_0x9ffeb9) {
            this['_localRota' + 'tion']['z'] = _0x9ffeb9, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionW']() {
            return this['localRotat' + 'ion']['w'];
        }
        set ['localRotat' + 'ionW'](_0x4aad33) {
            this['_localRota' + 'tion']['w'] = _0x4aad33, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ion']() {
            if (this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALQUATE' + 'RNION'])) {
                var _0x3251c6 = this['_localRota' + 'tionEuler'];
                _0x7cf2d3['createFrom' + 'YawPitchRo' + 'll'](_0x3251c6['y'] / _0x17c9f4['_angleToRa' + 'ndin'], _0x3251c6['x'] / _0x17c9f4['_angleToRa' + 'ndin'], _0x3251c6['z'] / _0x17c9f4['_angleToRa' + 'ndin'], this['_localRota' + 'tion']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALQUATE' + 'RNION'], !0x1);
            }
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x82b4b1) {
            this['_localRota' + 'tion'] !== _0x82b4b1 && _0x82b4b1['cloneTo'](this['_localRota' + 'tion']), this['_localRota' + 'tion']['normalize'](this['_localRota' + 'tion']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALEULER'] | _0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALQUATE' + 'RNION'], !0x1), this['_onWorldRo' + 'tationTran' + 'sform']();
        }
        get ['localScale' + 'X']() {
            return this['_localScal' + 'e']['x'];
        }
        set ['localScale' + 'X'](_0x453501) {
            this['_localScal' + 'e']['x'] = _0x453501, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale' + 'Y']() {
            return this['_localScal' + 'e']['y'];
        }
        set ['localScale' + 'Y'](_0x46478a) {
            this['_localScal' + 'e']['y'] = _0x46478a, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale' + 'Z']() {
            return this['_localScal' + 'e']['z'];
        }
        set ['localScale' + 'Z'](_0x50033d) {
            this['_localScal' + 'e']['z'] = _0x50033d, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale']() {
            return this['_localScal' + 'e'];
        }
        set ['localScale'](_0x23ce9c) {
            this['_localScal' + 'e'] !== _0x23ce9c && _0x23ce9c['cloneTo'](this['_localScal' + 'e']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_onWorldSc' + 'aleTransfo' + 'rm']();
        }
        get ['localRotat' + 'ionEulerX']() {
            return this['localRotat' + 'ionEuler']['x'];
        }
        set ['localRotat' + 'ionEulerX'](_0x16ca01) {
            this['_localRota' + 'tionEuler']['x'] = _0x16ca01, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEulerY']() {
            return this['localRotat' + 'ionEuler']['y'];
        }
        set ['localRotat' + 'ionEulerY'](_0x4b21a7) {
            this['_localRota' + 'tionEuler']['y'] = _0x4b21a7, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEulerZ']() {
            return this['localRotat' + 'ionEuler']['z'];
        }
        set ['localRotat' + 'ionEulerZ'](_0x51dbc9) {
            this['_localRota' + 'tionEuler']['z'] = _0x51dbc9, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEuler']() {
            if (this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALEULER'])) {
                this['_localRota' + 'tion']['getYawPitc' + 'hRoll'](_0x17c9f4['_tempVecto' + 'r30']);
                var _0x5199c5 = _0x17c9f4['_tempVecto' + 'r30'], _0x1e64da = this['_localRota' + 'tionEuler'];
                _0x1e64da['x'] = _0x5199c5['y'] * _0x17c9f4['_angleToRa' + 'ndin'], _0x1e64da['y'] = _0x5199c5['x'] * _0x17c9f4['_angleToRa' + 'ndin'], _0x1e64da['z'] = _0x5199c5['z'] * _0x17c9f4['_angleToRa' + 'ndin'], this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALEULER'], !0x1);
            }
            return this['_localRota' + 'tionEuler'];
        }
        set ['localRotat' + 'ionEuler'](_0x383f1f) {
            this['_localRota' + 'tionEuler'] !== _0x383f1f && _0x383f1f['cloneTo'](this['_localRota' + 'tionEuler']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALEULER'], !0x1), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_onWorldRo' + 'tationTran' + 'sform']();
        }
        get ['localMatri' + 'x']() {
            return this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X']) && (_0x334e9d['createAffi' + 'neTransfor' + 'mation'](this['_localPosi' + 'tion'], this['localRotat' + 'ion'], this['_localScal' + 'e'], this['_localMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x1)), this['_localMatr' + 'ix'];
        }
        set ['localMatri' + 'x'](_0x1231bd) {
            this['_localMatr' + 'ix'] !== _0x1231bd && _0x1231bd['cloneTo'](this['_localMatr' + 'ix']), this['_localMatr' + 'ix']['decomposeT' + 'ransRotSca' + 'le'](this['_localPosi' + 'tion'], this['_localRota' + 'tion'], this['_localScal' + 'e']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALEULER'], !0x0), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x1), this['_onWorldTr' + 'ansform']();
        }
        get ['position']() {
            if (this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                if (null != this['_parent']) {
                    var _0x564496 = this['worldMatri' + 'x']['elements'];
                    this['_position']['x'] = _0x564496[0xc], this['_position']['y'] = _0x564496[0xd], this['_position']['z'] = _0x564496[0xe];
                } else
                    this['_localPosi' + 'tion']['cloneTo'](this['_position']);
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x1);
            }
            return this['_position'];
        }
        set ['position'](_0x5035bb) {
            if (null != this['_parent']) {
                var _0x11dcdd = _0x17c9f4['_tempMatri' + 'x0'];
                this['_parent']['worldMatri' + 'x']['invert'](_0x11dcdd), _0x43b358['transformC' + 'oordinate'](_0x5035bb, _0x11dcdd, this['_localPosi' + 'tion']);
            } else
                _0x5035bb['cloneTo'](this['_localPosi' + 'tion']);
            this['localPosit' + 'ion'] = this['_localPosi' + 'tion'], this['_position'] !== _0x5035bb && _0x5035bb['cloneTo'](this['_position']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x1);
        }
        get ['rotation']() {
            return this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) && (null != this['_parent'] ? _0x7cf2d3['multiply'](this['_parent']['rotation'], this['localRotat' + 'ion'], this['_rotation']) : this['localRotat' + 'ion']['cloneTo'](this['_rotation']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], !0x1)), this['_rotation'];
        }
        set ['rotation'](_0x345836) {
            null != this['_parent'] ? (this['_parent']['rotation']['invert'](_0x17c9f4['_tempQuate' + 'rnion0']), _0x7cf2d3['multiply'](_0x17c9f4['_tempQuate' + 'rnion0'], _0x345836, this['_localRota' + 'tion'])) : _0x345836['cloneTo'](this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion'], _0x345836 !== this['_rotation'] && _0x345836['cloneTo'](this['_rotation']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], !0x1);
        }
        get ['rotationEu' + 'ler']() {
            if (this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDEULER'])) {
                this['rotation']['getYawPitc' + 'hRoll'](_0x17c9f4['_tempVecto' + 'r30']);
                var _0x50f376 = _0x17c9f4['_tempVecto' + 'r30'], _0xef92dc = this['_rotationE' + 'uler'];
                _0xef92dc['x'] = _0x50f376['y'] * _0x17c9f4['_angleToRa' + 'ndin'], _0xef92dc['y'] = _0x50f376['x'] * _0x17c9f4['_angleToRa' + 'ndin'], _0xef92dc['z'] = _0x50f376['z'] * _0x17c9f4['_angleToRa' + 'ndin'], this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDEULER'], !0x1);
            }
            return this['_rotationE' + 'uler'];
        }
        set ['rotationEu' + 'ler'](_0x3e8520) {
            _0x7cf2d3['createFrom' + 'YawPitchRo' + 'll'](_0x3e8520['y'] / _0x17c9f4['_angleToRa' + 'ndin'], _0x3e8520['x'] / _0x17c9f4['_angleToRa' + 'ndin'], _0x3e8520['z'] / _0x17c9f4['_angleToRa' + 'ndin'], this['_rotation']), this['rotation'] = this['_rotation'], this['_rotationE' + 'uler'] !== _0x3e8520 && _0x3e8520['cloneTo'](this['_rotationE' + 'uler']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDEULER'], !0x1);
        }
        get ['worldMatri' + 'x']() {
            return this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) && (null != this['_parent'] ? _0x334e9d['multiply'](this['_parent']['worldMatri' + 'x'], this['localMatri' + 'x'], this['_worldMatr' + 'ix']) : this['localMatri' + 'x']['cloneTo'](this['_worldMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'], !0x1)), this['_worldMatr' + 'ix'];
        }
        set ['worldMatri' + 'x'](_0x3927a0) {
            null === this['_parent'] ? _0x3927a0['cloneTo'](this['_localMatr' + 'ix']) : (this['_parent']['worldMatri' + 'x']['invert'](this['_localMatr' + 'ix']), _0x334e9d['multiply'](this['_localMatr' + 'ix'], _0x3927a0, this['_localMatr' + 'ix'])), this['localMatri' + 'x'] = this['_localMatr' + 'ix'], this['_worldMatr' + 'ix'] !== _0x3927a0 && _0x3927a0['cloneTo'](this['_worldMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'], !0x1);
        }
        ['_getScaleM' + 'atrix']() {
            var _0x184936 = _0x17c9f4['_tempQuate' + 'rnion0'], _0x153881 = _0x17c9f4['_tempMatri' + 'x3x30'], _0x1cea88 = _0x17c9f4['_tempMatri' + 'x3x31'], _0x2387e9 = _0x17c9f4['_tempMatri' + 'x3x32'];
            return _0x348b09['createFrom' + 'Matrix4x4'](this['worldMatri' + 'x'], _0x1cea88), this['rotation']['invert'](_0x184936), _0x348b09['createRota' + 'tionQuater' + 'nion'](_0x184936, _0x153881), _0x348b09['multiply'](_0x153881, _0x1cea88, _0x2387e9), _0x2387e9;
        }
        ['_setTransf' + 'ormFlag'](_0x583608, _0x4f199c) {
            _0x4f199c ? this['_transform' + 'Flag'] |= _0x583608 : this['_transform' + 'Flag'] &= ~_0x583608;
        }
        ['_getTransf' + 'ormFlag'](_0x16cda4) {
            return 0x0 != (this['_transform' + 'Flag'] & _0x16cda4);
        }
        ['_setParent'](_0x4355b9) {
            if (this['_parent'] !== _0x4355b9) {
                if (this['_parent']) {
                    var _0x2aae40 = this['_parent']['_children'], _0x2d2c62 = _0x2aae40['indexOf'](this);
                    _0x2aae40['splice'](_0x2d2c62, 0x1);
                }
                _0x4355b9 && (_0x4355b9['_children']['push'](this), _0x4355b9 && this['_onWorldTr' + 'ansform']()), this['_parent'] = _0x4355b9;
            }
        }
        ['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']() {
            if (!(this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDEULER']))) {
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDEULER'], !0x0), this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x1911a5 = 0x0, _0x4c8a4a = this['_children']['length']; _0x1911a5 < _0x4c8a4a; _0x1911a5++)
                    this['_children'][_0x1911a5]['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']();
            }
        }
        ['_onWorldPo' + 'sitionScal' + 'eTransform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) || !this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE'], !0x0), this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x4ed256 = 0x0, _0x52380d = this['_children']['length']; _0x4ed256 < _0x52380d; _0x4ed256++)
                    this['_children'][_0x4ed256]['_onWorldPo' + 'sitionScal' + 'eTransform']();
            }
        }
        ['_onWorldPo' + 'sitionTran' + 'sform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x0), this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x5bf31a = 0x0, _0x2717ad = this['_children']['length']; _0x5bf31a < _0x2717ad; _0x5bf31a++)
                    this['_children'][_0x5bf31a]['_onWorldPo' + 'sitionTran' + 'sform']();
            }
        }
        ['_onWorldRo' + 'tationTran' + 'sform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) || !this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDEULER'])) {
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDEULER'], !0x0), this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x1222ff = 0x0, _0x1ece00 = this['_children']['length']; _0x1222ff < _0x1ece00; _0x1222ff++)
                    this['_children'][_0x1222ff]['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']();
            }
        }
        ['_onWorldSc' + 'aleTransfo' + 'rm']() {
            if (!this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE'], !0x0), this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x4962dc = 0x0, _0x14a67d = this['_children']['length']; _0x4962dc < _0x14a67d; _0x4962dc++)
                    this['_children'][_0x4962dc]['_onWorldPo' + 'sitionScal' + 'eTransform']();
            }
        }
        ['_onWorldTr' + 'ansform']() {
            if (!(this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDEULER']) && this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE']))) {
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDEULER'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE'], !0x0), this['event'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x2b6a4f = 0x0, _0xbd7955 = this['_children']['length']; _0x2b6a4f < _0xbd7955; _0x2b6a4f++)
                    this['_children'][_0x2b6a4f]['_onWorldTr' + 'ansform']();
            }
        }
        ['translate'](_0xaef77f, _0x2cf08c = !0x0) {
            _0x2cf08c ? (_0x334e9d['createFrom' + 'Quaternion'](this['localRotat' + 'ion'], _0x17c9f4['_tempMatri' + 'x0']), _0x43b358['transformC' + 'oordinate'](_0xaef77f, _0x17c9f4['_tempMatri' + 'x0'], _0x17c9f4['_tempVecto' + 'r30']), _0x43b358['add'](this['localPosit' + 'ion'], _0x17c9f4['_tempVecto' + 'r30'], this['_localPosi' + 'tion']), this['localPosit' + 'ion'] = this['_localPosi' + 'tion']) : (_0x43b358['add'](this['position'], _0xaef77f, this['_position']), this['position'] = this['_position']);
        }
        ['rotate'](_0x36b1ae, _0x3815bd = !0x0, _0x307146 = !0x0) {
            var _0x5d57d8;
            _0x307146 ? _0x5d57d8 = _0x36b1ae : (_0x43b358['scale'](_0x36b1ae, Math['PI'] / 0xb4, _0x17c9f4['_tempVecto' + 'r30']), _0x5d57d8 = _0x17c9f4['_tempVecto' + 'r30']), _0x7cf2d3['createFrom' + 'YawPitchRo' + 'll'](_0x5d57d8['y'], _0x5d57d8['x'], _0x5d57d8['z'], _0x17c9f4['_tempQuate' + 'rnion0']), _0x3815bd ? (_0x7cf2d3['multiply'](this['_localRota' + 'tion'], _0x17c9f4['_tempQuate' + 'rnion0'], this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion']) : (_0x7cf2d3['multiply'](_0x17c9f4['_tempQuate' + 'rnion0'], this['rotation'], this['_rotation']), this['rotation'] = this['_rotation']);
        }
        ['getForward'](_0x4d6360) {
            var _0x464558 = this['worldMatri' + 'x']['elements'];
            _0x4d6360['x'] = -_0x464558[0x8], _0x4d6360['y'] = -_0x464558[0x9], _0x4d6360['z'] = -_0x464558[0xa];
        }
        ['getUp'](_0x579a00) {
            var _0xc64844 = this['worldMatri' + 'x']['elements'];
            _0x579a00['x'] = _0xc64844[0x4], _0x579a00['y'] = _0xc64844[0x5], _0x579a00['z'] = _0xc64844[0x6];
        }
        ['getRight'](_0x47aafb) {
            var _0x1eff0f = this['worldMatri' + 'x']['elements'];
            _0x47aafb['x'] = _0x1eff0f[0x0], _0x47aafb['y'] = _0x1eff0f[0x1], _0x47aafb['z'] = _0x1eff0f[0x2];
        }
        ['lookAt'](_0x46b1f8, _0x499ff5, _0xff6176 = !0x1) {
            var _0x2b5c32;
            if (_0xff6176) {
                if (_0x2b5c32 = this['_localPosi' + 'tion'], Math['abs'](_0x2b5c32['x'] - _0x46b1f8['x']) < _0x40af95['zeroTolera' + 'nce'] && Math['abs'](_0x2b5c32['y'] - _0x46b1f8['y']) < _0x40af95['zeroTolera' + 'nce'] && Math['abs'](_0x2b5c32['z'] - _0x46b1f8['z']) < _0x40af95['zeroTolera' + 'nce'])
                    return;
                _0x7cf2d3['lookAt'](this['_localPosi' + 'tion'], _0x46b1f8, _0x499ff5, this['_localRota' + 'tion']), this['_localRota' + 'tion']['invert'](this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
            } else {
                var _0x359e94 = this['position'];
                if (_0x2b5c32 = _0x359e94, Math['abs'](_0x2b5c32['x'] - _0x46b1f8['x']) < _0x40af95['zeroTolera' + 'nce'] && Math['abs'](_0x2b5c32['y'] - _0x46b1f8['y']) < _0x40af95['zeroTolera' + 'nce'] && Math['abs'](_0x2b5c32['z'] - _0x46b1f8['z']) < _0x40af95['zeroTolera' + 'nce'])
                    return;
                _0x7cf2d3['lookAt'](_0x359e94, _0x46b1f8, _0x499ff5, this['_rotation']), this['_rotation']['invert'](this['_rotation']), this['rotation'] = this['_rotation'];
            }
        }
        ['getWorldLo' + 'ssyScale']() {
            if (this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'])) {
                if (null !== this['_parent']) {
                    var _0x3546b3 = this['_getScaleM' + 'atrix']()['elements'];
                    this['_scale']['x'] = _0x3546b3[0x0], this['_scale']['y'] = _0x3546b3[0x4], this['_scale']['z'] = _0x3546b3[0x8];
                } else
                    this['_localScal' + 'e']['cloneTo'](this['_scale']);
                this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'], !0x1);
            }
            return this['_scale'];
        }
        ['setWorldLo' + 'ssyScale'](_0x4375aa) {
            if (null !== this['_parent']) {
                var _0x272d16 = _0x17c9f4['_tempMatri' + 'x3x33'], _0x35f6da = _0x17c9f4['_tempMatri' + 'x3x33'], _0x1bccb8 = _0x35f6da['elements'], _0x285a24 = this['_parent']['_getScaleM' + 'atrix']();
                _0x285a24['invert'](_0x285a24), _0x348b09['createFrom' + 'Scaling'](_0x4375aa, _0x272d16), _0x348b09['multiply'](_0x285a24, _0x272d16, _0x35f6da), this['_localScal' + 'e']['x'] = _0x1bccb8[0x0], this['_localScal' + 'e']['y'] = _0x1bccb8[0x4], this['_localScal' + 'e']['z'] = _0x1bccb8[0x8];
            } else
                _0x4375aa['cloneTo'](this['_localScal' + 'e']);
            this['localScale'] = this['_localScal' + 'e'], this['_scale'] !== _0x4375aa && _0x4375aa['cloneTo'](this['_scale']), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'], !0x1);
        }
        get ['scale']() {
            return console['warn']('Transfrm3D' + ':\x20discard\x20' + 'function,p' + 'lease\x20use\x20' + 'getWorldLo' + 'ssyScale\x20i' + 'nstead.'), this['getWorldLo' + 'ssyScale']();
        }
        set ['scale'](_0x42aa32) {
            console['warn']('Transfrm3D' + ':\x20discard\x20' + 'function,p' + 'lease\x20use\x20' + 'setWorldLo' + 'ssyScale\x20i' + 'nstead.'), this['setWorldLo' + 'ssyScale'](_0x42aa32);
        }
    }
    _0x17c9f4['_tempVecto' + 'r30'] = new _0x43b358(), _0x17c9f4['_tempQuate' + 'rnion0'] = new _0x7cf2d3(), _0x17c9f4['_tempMatri' + 'x0'] = new _0x334e9d(), _0x17c9f4['_tempMatri' + 'x3x30'] = new _0x348b09(), _0x17c9f4['_tempMatri' + 'x3x31'] = new _0x348b09(), _0x17c9f4['_tempMatri' + 'x3x32'] = new _0x348b09(), _0x17c9f4['_tempMatri' + 'x3x33'] = new _0x348b09(), _0x17c9f4['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] = 0x1, _0x17c9f4['TRANSFORM_' + 'LOCALEULER'] = 0x2, _0x17c9f4['TRANSFORM_' + 'LOCALMATRI' + 'X'] = 0x4, _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] = 0x8, _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] = 0x10, _0x17c9f4['TRANSFORM_' + 'WORLDSCALE'] = 0x20, _0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X'] = 0x40, _0x17c9f4['TRANSFORM_' + 'WORLDEULER'] = 0x80, _0x17c9f4['_angleToRa' + 'ndin'] = 0xb4 / Math['PI'];
    class _0x39cab4 extends _0x2247ad['Node'] {
        constructor(_0x515843 = null, _0x26fbac = !0x1) {
            super(), this['_needProce' + 'ssCollisio' + 'ns'] = !0x1, this['_needProce' + 'ssTriggers'] = !0x1, this['_id'] = ++_0x39cab4['_uniqueIDC' + 'ounter'], this['_transform'] = new _0x17c9f4(this), this['_isStatic'] = _0x26fbac, this['layer'] = 0x0, this['name'] = _0x515843 || 'New\x20Sprite' + '3D';
        }
        static ['__init__']() {
        }
        static ['instantiat' + 'e'](_0xeda63f, _0x1a13ef = null, _0x34b0e3 = !0x0, _0x1fe804 = null, _0x2df6a3 = null) {
            var _0x21659d = _0xeda63f['clone']();
            _0x1a13ef && _0x1a13ef['addChild'](_0x21659d);
            var _0x14b6b4 = _0x21659d['transform'];
            if (_0x34b0e3) {
                var _0xdd62e4 = _0x14b6b4['worldMatri' + 'x'];
                _0xeda63f['transform']['worldMatri' + 'x']['cloneTo'](_0xdd62e4), _0x14b6b4['worldMatri' + 'x'] = _0xdd62e4;
            } else
                _0x1fe804 && (_0x14b6b4['position'] = _0x1fe804), _0x2df6a3 && (_0x14b6b4['rotation'] = _0x2df6a3);
            return _0x21659d;
        }
        static ['load'](_0x18816c, _0x544760) {
            _0x2247ad['Laya']['loader']['create'](_0x18816c, _0x544760, null, _0x39cab4['HIERARCHY']);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['layer']() {
            return this['_layer'];
        }
        set ['layer'](_0x1dd8ad) {
            if (this['_layer'] !== _0x1dd8ad) {
                if (!(_0x1dd8ad >= 0x0 && _0x1dd8ad <= 0x1e))
                    throw new Error('Layer\x20valu' + 'e\x20must\x20be\x20' + '0-30.');
                this['_layer'] = _0x1dd8ad;
            }
        }
        get ['url']() {
            return this['_url'];
        }
        get ['isStatic']() {
            return this['_isStatic'];
        }
        get ['transform']() {
            return this['_transform'];
        }
        ['_setCreate' + 'URL'](_0xb606ff) {
            this['_url'] = _0x2247ad['URL']['formatURL'](_0xb606ff);
        }
        ['_changeAni' + 'matorsToLi' + 'nkSprite3D'](_0x54ff2e, _0x2ee886, _0x35dcd3) {
            var _0x217a0e = this['getCompone' + 'nt'](_0x4532ef);
            if (_0x217a0e && (_0x217a0e['avatar'] || _0x54ff2e['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0x217a0e, _0x2ee886, _0x35dcd3)), this['_parent'] && this['_parent'] instanceof _0x39cab4) {
                _0x35dcd3['unshift'](this['_parent']['name']);
                var _0x4b1c2c = this['_parent'];
                _0x4b1c2c['_hierarchy' + 'Animator'] && _0x4b1c2c['_changeAni' + 'matorsToLi' + 'nkSprite3D'](_0x54ff2e, _0x2ee886, _0x35dcd3);
            }
        }
        ['_setHierar' + 'chyAnimato' + 'r'](_0x53c81f, _0x24ac1c) {
            this['_changeHie' + 'rarchyAnim' + 'ator'](_0x53c81f), this['_changeAni' + 'matorAvata' + 'r'](_0x53c81f['avatar']);
            for (var _0x6d977c = 0x0, _0x31ed85 = this['_children']['length']; _0x6d977c < _0x31ed85; _0x6d977c++) {
                var _0x53ab32 = this['_children'][_0x6d977c];
                _0x53ab32['_hierarchy' + 'Animator'] == _0x24ac1c && _0x53ab32['_setHierar' + 'chyAnimato' + 'r'](_0x53c81f, _0x24ac1c);
            }
        }
        ['_clearHier' + 'archyAnima' + 'tor'](_0x57b0f8, _0x5b6701) {
            this['_changeHie' + 'rarchyAnim' + 'ator'](_0x5b6701), this['_changeAni' + 'matorAvata' + 'r'](_0x5b6701 ? _0x5b6701['avatar'] : null);
            for (var _0x498231 = 0x0, _0x5eb75c = this['_children']['length']; _0x498231 < _0x5eb75c; _0x498231++) {
                var _0x39d4ce = this['_children'][_0x498231];
                _0x39d4ce['_hierarchy' + 'Animator'] == _0x57b0f8 && _0x39d4ce['_clearHier' + 'archyAnima' + 'tor'](_0x57b0f8, _0x5b6701);
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'atorAvatar'](_0x4966ff, _0x9bd800) {
            this['_changeAni' + 'matorAvata' + 'r'](_0x9bd800);
            for (var _0x40d039 = 0x0, _0x4b78fe = this['_children']['length']; _0x40d039 < _0x4b78fe; _0x40d039++) {
                var _0x2142c8 = this['_children'][_0x40d039];
                _0x2142c8['_hierarchy' + 'Animator'] == _0x4966ff && _0x2142c8['_changeHie' + 'rarchyAnim' + 'atorAvatar'](_0x4966ff, _0x9bd800);
            }
        }
        ['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0x1a0a2b, _0xb97e49, _0x4e4daf) {
            _0x1a0a2b['_handleSpr' + 'iteOwnersB' + 'ySprite'](_0xb97e49, _0x4e4daf, this);
            for (var _0xec1213 = 0x0, _0x5eef47 = this['_children']['length']; _0xec1213 < _0x5eef47; _0xec1213++) {
                var _0x338e4f = this['_children'][_0xec1213], _0x3f7e53 = _0x4e4daf['length'];
                _0x4e4daf['push'](_0x338e4f['name']), _0x338e4f['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0x1a0a2b, _0xb97e49, _0x4e4daf), _0x4e4daf['splice'](_0x3f7e53, 0x1);
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x175aa7) {
            this['_hierarchy' + 'Animator'] = _0x175aa7;
        }
        ['_changeAni' + 'matorAvata' + 'r'](_0x5b598e) {
        }
        ['_onAdded']() {
            if (this['_parent'] instanceof _0x39cab4) {
                var _0x5ae412 = this['_parent'];
                this['transform']['_setParent'](_0x5ae412['transform']), _0x5ae412['_hierarchy' + 'Animator'] && (!this['_hierarchy' + 'Animator'] && this['_setHierar' + 'chyAnimato' + 'r'](_0x5ae412['_hierarchy' + 'Animator'], null), _0x5ae412['_changeAni' + 'matorsToLi' + 'nkSprite3D'](this, !0x0, [this['name']]));
            }
            super['_onAdded']();
        }
        ['_onRemoved']() {
            if (super['_onRemoved'](), this['_parent'] instanceof _0x39cab4) {
                var _0x30c532 = this['_parent'];
                this['transform']['_setParent'](null), _0x30c532['_hierarchy' + 'Animator'] && (this['_hierarchy' + 'Animator'] == _0x30c532['_hierarchy' + 'Animator'] && this['_clearHier' + 'archyAnima' + 'tor'](_0x30c532['_hierarchy' + 'Animator'], null), _0x30c532['_changeAni' + 'matorsToLi' + 'nkSprite3D'](this, !0x1, [this['name']]));
            }
        }
        ['_parse'](_0x45bc90, _0x5d3c48) {
            if (void 0x0 !== _0x45bc90['isStatic'] && (this['_isStatic'] = _0x45bc90['isStatic']), void 0x0 !== _0x45bc90['active'] && (this['active'] = _0x45bc90['active']), null != _0x45bc90['name'] && (this['name'] = _0x45bc90['name']), void 0x0 !== _0x45bc90['position']) {
                var _0x4ab1dd = this['transform']['localPosit' + 'ion'];
                _0x4ab1dd['fromArray'](_0x45bc90['position']), this['transform']['localPosit' + 'ion'] = _0x4ab1dd;
            }
            if (void 0x0 !== _0x45bc90['rotationEu' + 'ler']) {
                var _0x38d1d9 = this['transform']['localRotat' + 'ionEuler'];
                _0x38d1d9['fromArray'](_0x45bc90['rotationEu' + 'ler']), this['transform']['localRotat' + 'ionEuler'] = _0x38d1d9;
            }
            if (void 0x0 !== _0x45bc90['rotation']) {
                var _0x4a8c22 = this['transform']['localRotat' + 'ion'];
                _0x4a8c22['fromArray'](_0x45bc90['rotation']), this['transform']['localRotat' + 'ion'] = _0x4a8c22;
            }
            if (void 0x0 !== _0x45bc90['scale']) {
                var _0x4dbc76 = this['transform']['localScale'];
                _0x4dbc76['fromArray'](_0x45bc90['scale']), this['transform']['localScale'] = _0x4dbc76;
            }
            null != _0x45bc90['layer'] && (this['layer'] = _0x45bc90['layer']);
        }
        ['_cloneTo'](_0x4ee323, _0x24a6be, _0x1e5e46) {
            if (this['destroyed'])
                throw new Error('Sprite3D:\x20' + 'Can\x27t\x20be\x20c' + 'loned\x20if\x20t' + 'he\x20Sprite3' + 'D\x20has\x20dest' + 'royed.');
            var _0x3b1e09 = _0x4ee323, _0x4f54b1 = this['_transform'], _0x4f3f96 = _0x3b1e09['_transform'];
            _0x3b1e09['name'] = this['name'], _0x3b1e09['destroyed'] = this['destroyed'], _0x3b1e09['active'] = this['active'], _0x4f3f96['localPosit' + 'ion'] = _0x4f54b1['localPosit' + 'ion'], _0x4f3f96['localRotat' + 'ion'] = _0x4f54b1['localRotat' + 'ion'], _0x4f3f96['localScale'] = _0x4f54b1['localScale'], _0x3b1e09['_isStatic'] = this['_isStatic'], _0x3b1e09['layer'] = this['layer'], super['_cloneTo'](_0x3b1e09, _0x24a6be, _0x1e5e46);
        }
        static ['_createSpr' + 'ite3DInsta' + 'nce'](_0x1883e2) {
            for (var _0x6b6d15 = _0x1883e2['_create'](), _0x4a9c36 = _0x1883e2['_children'], _0x52e2a5 = 0x0, _0x16643b = _0x4a9c36['length']; _0x52e2a5 < _0x16643b; _0x52e2a5++) {
                var _0x278a48 = _0x39cab4['_createSpr' + 'ite3DInsta' + 'nce'](_0x4a9c36[_0x52e2a5]);
                _0x6b6d15['addChild'](_0x278a48);
            }
            return _0x6b6d15;
        }
        static ['_parseSpri' + 'te3DInstan' + 'ce'](_0x3afa9f, _0x1cf2ff, _0x451574, _0x5620d7) {
            for (var _0x2eaec5 = _0x451574['_children'], _0x557894 = _0x5620d7['_children'], _0x442995 = 0x0, _0x22d320 = _0x2eaec5['length']; _0x442995 < _0x22d320; _0x442995++)
                _0x39cab4['_parseSpri' + 'te3DInstan' + 'ce'](_0x3afa9f, _0x1cf2ff, _0x2eaec5[_0x442995], _0x557894[_0x442995]);
            _0x451574['_cloneTo'](_0x5620d7, _0x3afa9f, _0x1cf2ff);
        }
        ['clone']() {
            var _0x157072 = _0x39cab4['_createSpr' + 'ite3DInsta' + 'nce'](this);
            return _0x39cab4['_parseSpri' + 'te3DInstan' + 'ce'](this, _0x157072, this, _0x157072), _0x157072;
        }
        ['destroy'](_0x537b74 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x537b74), this['_transform'] = null, this['_scripts'] = null, this['_url'] && _0x2247ad['Loader']['clearRes'](this['_url']));
        }
        ['_create']() {
            return new _0x39cab4();
        }
    }
    _0x39cab4['HIERARCHY'] = 'HIERARCHY', _0x39cab4['WORLDMATRI' + 'X'] = _0x38ffce['propertyNa' + 'meToID']('u_WorldMat'), _0x39cab4['MVPMATRIX'] = _0x38ffce['propertyNa' + 'meToID']('u_MvpMatri' + 'x'), _0x39cab4['_uniqueIDC' + 'ounter'] = 0x0;
    class _0x333e4a extends _0x39cab4 {
        constructor(_0x4516f8) {
            super(_0x4516f8);
        }
        static ['__init__']() {
            _0x333e4a['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW'] = _0x38ffce['getDefineB' + 'yName']('RECEIVESHA' + 'DOW'), _0x333e4a['SAHDERDEFI' + 'NE_LIGHTMA' + 'P'] = _0x38ffce['getDefineB' + 'yName']('LIGHTMAP'), _0x333e4a['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL'] = _0x38ffce['getDefineB' + 'yName']('LIGHTMAP_D' + 'IRECTIONAL');
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e'](), this['_scene']['_removeRen' + 'derObject'](this['_render']);
        }
        ['_onActive']() {
            super['_onActive'](), this['_scene']['_addRender' + 'Object'](this['_render']);
        }
        ['_onActiveI' + 'nScene']() {
            if (super['_onActiveI' + 'nScene'](), _0x1fc38b['Laya3D']['_editerEnv' + 'ironment']) {
                var _0x20ac04 = this['_scene'], _0x50e1bf = new _0x4cec8f();
                _0x20ac04['_allotPick' + 'ColorByID'](this['id'], _0x50e1bf), _0x20ac04['_pickIdToS' + 'prite'][this['id']] = this, this['_render']['_shaderVal' + 'ues']['setVector'](_0x333e4a['PICKCOLOR'], _0x50e1bf);
            }
        }
        ['_addToInit' + 'StaticBatc' + 'hManager']() {
        }
        ['_setBelong' + 'Scene'](_0xa2eaf1) {
            super['_setBelong' + 'Scene'](_0xa2eaf1), this['_render']['_setBelong' + 'Scene'](_0xa2eaf1);
        }
        ['_setUnBelo' + 'ngScene']() {
            this['_render']['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x333e4a['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), super['_setUnBelo' + 'ngScene']();
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0xa5f2e0) {
            if (this['_hierarchy' + 'Animator']) {
                var _0x2e313a = this['_hierarchy' + 'Animator']['_renderabl' + 'eSprites'];
                _0x2e313a['splice'](_0x2e313a['indexOf'](this), 0x1);
            }
            _0xa5f2e0 && _0xa5f2e0['_renderabl' + 'eSprites']['push'](this), super['_changeHie' + 'rarchyAnim' + 'ator'](_0xa5f2e0);
        }
        ['destroy'](_0x56c4b3 = !0x0) {
            super['destroy'](_0x56c4b3), this['_render']['_destroy'](), this['_render'] = null;
        }
        ['_create']() {
            return new _0x333e4a(this['name']);
        }
    }
    _0x333e4a['LIGHTMAPSC' + 'ALEOFFSET'] = _0x38ffce['propertyNa' + 'meToID']('u_Lightmap' + 'ScaleOffse' + 't'), _0x333e4a['LIGHTMAP'] = _0x38ffce['propertyNa' + 'meToID']('u_LightMap'), _0x333e4a['LIGHTMAP_D' + 'IRECTION'] = _0x38ffce['propertyNa' + 'meToID']('u_LightMap' + 'Direction'), _0x333e4a['PICKCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_PickColo' + 'r');
    class _0x5bc8f8 {
        constructor() {
            this['_initBatch' + 'Sprites'] = [], this['_staticBat' + 'ches'] = {}, this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0, this['_batchRend' + 'erElementP' + 'ool'] = [];
        }
        static ['_addToStat' + 'icBatchQue' + 'ue'](_0x464be3, _0x3f7d29) {
            _0x464be3 instanceof _0x333e4a && _0x3f7d29['push'](_0x464be3);
            for (var _0x19abcc = 0x0, _0x14381a = _0x464be3['numChildre' + 'n']; _0x19abcc < _0x14381a; _0x19abcc++)
                _0x5bc8f8['_addToStat' + 'icBatchQue' + 'ue'](_0x464be3['_children'][_0x19abcc], _0x3f7d29);
        }
        static ['_registerM' + 'anager'](_0x5e81bf) {
            _0x5bc8f8['_managers']['push'](_0x5e81bf);
        }
        static ['combine'](_0x3d7cb8, _0x2e8cf8 = null) {
            _0x2e8cf8 || (_0x2e8cf8 = [], _0x3d7cb8 && _0x5bc8f8['_addToStat' + 'icBatchQue' + 'ue'](_0x3d7cb8, _0x2e8cf8));
            var _0xe9e872 = _0x2e8cf8['length'];
            if (_0xe9e872 > 0x0) {
                for (var _0x54c133 = 0x0; _0x54c133 < _0xe9e872; _0x54c133++) {
                    var _0x112459 = _0x2e8cf8[_0x54c133];
                    _0x112459['destroyed'] || (_0x112459['_render']['_isPartOfS' + 'taticBatch'] ? console['warn']('StaticBatc' + 'hManager:\x20' + 'Sprite\x20' + _0x112459['name'] + ('\x20has\x20a\x20par' + 't\x20of\x20Stati' + 'c\x20Batch,it' + '\x20will\x20be\x20i' + 'gnore.')) : _0x112459['_addToInit' + 'StaticBatc' + 'hManager']());
                }
                for (var _0x9bbf4f = 0x0, _0x4c4300 = _0x5bc8f8['_managers']['length']; _0x9bbf4f < _0x4c4300; _0x9bbf4f++) {
                    _0x5bc8f8['_managers'][_0x9bbf4f]['_initStati' + 'cBatchs'](_0x3d7cb8);
                }
            }
        }
        ['_partition'](_0xed5884, _0x213e41, _0x2278b9) {
            for (var _0x3d245c = _0xed5884[Math['floor']((_0x2278b9 + _0x213e41) / 0x2)]; _0x213e41 <= _0x2278b9;) {
                for (; this['_compare'](_0xed5884[_0x213e41], _0x3d245c) < 0x0;)
                    _0x213e41++;
                for (; this['_compare'](_0xed5884[_0x2278b9], _0x3d245c) > 0x0;)
                    _0x2278b9--;
                if (_0x213e41 < _0x2278b9) {
                    var _0x1d5f05 = _0xed5884[_0x213e41];
                    _0xed5884[_0x213e41] = _0xed5884[_0x2278b9], _0xed5884[_0x2278b9] = _0x1d5f05, _0x213e41++, _0x2278b9--;
                } else {
                    if (_0x213e41 === _0x2278b9) {
                        _0x213e41++;
                        break;
                    }
                }
            }
            return _0x213e41;
        }
        ['_quickSort'](_0x155eb0, _0x49a945, _0x95ab13) {
            if (_0x155eb0['length'] > 0x1) {
                var _0x6b3db2 = this['_partition'](_0x155eb0, _0x49a945, _0x95ab13), _0x17dd61 = _0x6b3db2 - 0x1;
                _0x49a945 < _0x17dd61 && this['_quickSort'](_0x155eb0, _0x49a945, _0x17dd61), _0x6b3db2 < _0x95ab13 && this['_quickSort'](_0x155eb0, _0x6b3db2, _0x95ab13);
            }
        }
        ['_compare'](_0x3e742c, _0x339470) {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_initStati' + 'cBatchs'](_0x95b50c) {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_addBatchS' + 'prite'](_0x14cee9) {
            this['_initBatch' + 'Sprites']['push'](_0x14cee9);
        }
        ['_clear']() {
            this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0;
        }
        ['_garbageCo' + 'llection']() {
            throw 'StaticBatc' + 'hManager:\x20' + 'must\x20overr' + 'ide\x20it.';
        }
        ['dispose']() {
            this['_staticBat' + 'ches'] = null;
        }
    }
    _0x5bc8f8['_managers'] = [];
    class _0x945f4a {
    }
    class _0x2a7c4c {
    }
    class _0x5da8ae {
        static ['__init__']() {
            _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (_0x5da8ae['_cullingBu' + 'fferLength'] = 0x0, _0x5da8ae['_cullingBu' + 'ffer'] = new Float32Array(0x1000));
        }
        static ['_drawTrave' + 'rsalCullin' + 'gBound'](_0x4054a8, _0xba7353) {
            for (var _0x1b5273 = _0x4054a8['elements'], _0xd4a309 = 0x0, _0x21a423 = _0x4054a8['length']; _0xd4a309 < _0x21a423; _0xd4a309++) {
                var _0x30ad96 = _0x5da8ae['_tempColor' + '0'];
                _0x30ad96['r'] = 0x0, _0x30ad96['g'] = 0x1, _0x30ad96['b'] = 0x0, _0x30ad96['a'] = 0x1, _0x101904['_drawBound'](_0xba7353, _0x1b5273[_0xd4a309]['bounds']['_getBoundB' + 'ox'](), _0x30ad96);
            }
        }
        static ['_traversal' + 'Culling'](_0x41917d, _0x28d6ac, _0x57ecb3, _0x304b59, _0x393268, _0x38d860, _0x52fdce) {
            for (var _0x2baba9 = _0x304b59['elements'], _0x318a82 = _0x41917d['boundFrust' + 'um'], _0x5b5c6b = _0x41917d['position'], _0x1a4165 = _0x41917d['cullingMas' + 'k'], _0x327d41 = _0x2247ad['Stat']['loopCount'], _0x121b85 = 0x0, _0x31ec44 = _0x304b59['length']; _0x121b85 < _0x31ec44; _0x121b85++) {
                var _0x4cd1b6 = _0x2baba9[_0x121b85];
                if ((_0x52fdce ? _0x4cd1b6['_castShado' + 'w'] && _0x4cd1b6['_enable'] : 0x0 != (Math['pow'](0x2, _0x4cd1b6['_owner']['_layer']) & _0x1a4165) && _0x4cd1b6['_enable']) && (_0x2247ad['Stat']['frustumCul' + 'ling']++, !_0x41917d['useOcclusi' + 'onCulling'] || _0x4cd1b6['_needRende' + 'r'](_0x318a82, _0x57ecb3))) {
                    _0x4cd1b6['_renderMar' + 'k'] = _0x327d41, _0x4cd1b6['_distanceF' + 'orSort'] = _0x43b358['distance'](_0x4cd1b6['bounds']['getCenter'](), _0x5b5c6b);
                    for (var _0x3aba71 = _0x4cd1b6['_renderEle' + 'ments'], _0x58ac4a = 0x0, _0x1d526c = _0x3aba71['length']; _0x58ac4a < _0x1d526c; _0x58ac4a++)
                        _0x3aba71[_0x58ac4a]['_update'](_0x28d6ac, _0x57ecb3, _0x393268, _0x38d860);
                }
            }
        }
        static ['renderObje' + 'ctCulling'](_0x114981, _0x7c8719, _0x34adea, _0x1f5d00, _0x23cd18, _0x31104e) {
            var _0x4ae073, _0x3331d8, _0x1c5145 = _0x7c8719['_opaqueQue' + 'ue'], _0x426607 = _0x7c8719['_transpare' + 'ntQueue'], _0x289ba5 = _0x7c8719['_renders'];
            _0x1c5145['clear'](), _0x426607['clear']();
            var _0x5a5e99 = _0x5bc8f8['_managers'];
            for (_0x4ae073 = 0x0, _0x3331d8 = _0x5a5e99['length']; _0x4ae073 < _0x3331d8; _0x4ae073++)
                _0x5a5e99[_0x4ae073]['_clear']();
            var _0x5d7cd3 = _0xfb8b43['_managers'];
            for (_0x4ae073 = 0x0, _0x3331d8 = _0x5d7cd3['length']; _0x4ae073 < _0x3331d8; _0x4ae073++)
                _0x5d7cd3[_0x4ae073]['_clear']();
            var _0x4ef9f9 = _0x7c8719['_octree'];
            if (_0x4ef9f9 && (_0x4ef9f9['updateMoti' + 'onObjects'](), _0x4ef9f9['shrinkRoot' + 'IfPossible'](), _0x4ef9f9['getCollidi' + 'ngWithFrus' + 'tum'](_0x114981, _0x34adea, _0x1f5d00, _0x23cd18, _0x31104e)), _0x5da8ae['_traversal' + 'Culling'](_0x114981, _0x7c8719, _0x34adea, _0x289ba5, _0x1f5d00, _0x23cd18, _0x31104e), _0x5da8ae['debugFrust' + 'umCulling']) {
                var _0x5b9f8c = _0x7c8719['_debugTool'];
                _0x5b9f8c['clear'](), _0x4ef9f9 && (_0x4ef9f9['drawAllBou' + 'nds'](_0x5b9f8c), _0x4ef9f9['drawAllObj' + 'ects'](_0x5b9f8c)), _0x5da8ae['_drawTrave' + 'rsalCullin' + 'gBound'](_0x289ba5, _0x5b9f8c);
            }
            var _0x4d615a = _0x1c5145['elements']['length'];
            _0x4d615a > 0x0 && _0x1c5145['_quickSort'](0x0, _0x4d615a - 0x1), (_0x4d615a = _0x426607['elements']['length']) > 0x0 && _0x426607['_quickSort'](0x0, _0x4d615a - 0x1);
        }
        static ['cullingSha' + 'dow'](_0x930214, _0x53b231, _0x111c66) {
            var _0x454b49 = _0x53b231['_opaqueQue' + 'ue'], _0x4d75e5 = _0x53b231['_transpare' + 'ntQueue'], _0x2346ad = _0x53b231['_renders'];
            _0x454b49['clear'](), _0x4d75e5['clear']();
            for (var _0xc62047 = _0x5bc8f8['_managers'], _0x43d545 = 0x0, _0x14d84d = _0xc62047['length']; _0x43d545 < _0x14d84d; _0x43d545++)
                _0xc62047[_0x43d545]['_clear']();
            var _0x66d752 = _0xfb8b43['_managers'];
            for (_0x43d545 = 0x0, _0x14d84d = _0x66d752['length']; _0x43d545 < _0x14d84d; _0x43d545++)
                _0x66d752[_0x43d545]['_clear']();
            _0x2346ad = _0x53b231['_renders'];
            var _0x571771 = _0x930214['position'], _0x570de3 = _0x930214['cullPlaneC' + 'ount'], _0x5d313a = _0x930214['cullPlanes'], _0x14a607 = (_0x930214['cullSphere'], _0x930214['direction'], _0x2346ad['elements']), _0x27c246 = _0x2247ad['Stat']['loopCount'];
            for (_0x43d545 = 0x0, _0x14d84d = _0x2346ad['length']; _0x43d545 < _0x14d84d; _0x43d545++) {
                var _0x2bf63e = _0x14a607[_0x43d545];
                if (_0x2bf63e['_castShado' + 'w'] && _0x2bf63e['_enable']) {
                    _0x2247ad['Stat']['frustumCul' + 'ling']++;
                    for (var _0x2dcfde = _0x2bf63e['bounds'], _0xb00e1f = _0x2dcfde['getMin'](), _0x3b13d9 = _0x2dcfde['getMax'](), _0x3ea2d0 = _0xb00e1f['x'], _0x25b203 = _0xb00e1f['y'], _0x410302 = _0xb00e1f['z'], _0x385918 = _0x3b13d9['x'], _0x51802a = _0x3b13d9['y'], _0xfc224c = _0x3b13d9['z'], _0x1bd7d8 = !0x0, _0x184fc7 = 0x0; _0x184fc7 < _0x570de3; _0x184fc7++) {
                        var _0x205327 = _0x5d313a[_0x184fc7], _0x177e0f = _0x205327['normal'];
                        if (_0x205327['distance'] + _0x177e0f['x'] * (_0x177e0f['x'] < 0x0 ? _0x3ea2d0 : _0x385918) + _0x177e0f['y'] * (_0x177e0f['y'] < 0x0 ? _0x25b203 : _0x51802a) + _0x177e0f['z'] * (_0x177e0f['z'] < 0x0 ? _0x410302 : _0xfc224c) < 0x0) {
                            _0x1bd7d8 = !0x1;
                            break;
                        }
                    }
                    if (_0x1bd7d8) {
                        _0x2bf63e['_renderMar' + 'k'] = _0x27c246, _0x2bf63e['_distanceF' + 'orSort'] = _0x43b358['distance'](_0x2dcfde['getCenter'](), _0x571771);
                        for (var _0x428b80 = _0x2bf63e['_renderEle' + 'ments'], _0x1488f7 = (_0x184fc7 = 0x0, _0x428b80['length']); _0x184fc7 < _0x1488f7; _0x184fc7++)
                            _0x428b80[_0x184fc7]['_update'](_0x53b231, _0x111c66, null, null);
                    }
                }
            }
            return _0x454b49['elements']['length'] > 0x0;
        }
        static ['renderObje' + 'ctCullingN' + 'ative'](_0x1478a7, _0x1d51b9, _0x13dd2a, _0x2f1999, _0x21e599, _0x8eafae) {
            var _0x2fd11f, _0x4c01ad, _0xc34441, _0x15c61a, _0x3ca6ff = _0x1d51b9['_opaqueQue' + 'ue'], _0x2ce824 = _0x1d51b9['_transpare' + 'ntQueue'];
            _0x3ca6ff['clear'](), _0x2ce824['clear']();
            var _0x1f3a76 = _0x5bc8f8['_managers'];
            for (_0x2fd11f = 0x0, _0x4c01ad = _0x1f3a76['length']; _0x2fd11f < _0x4c01ad; _0x2fd11f++)
                _0x1f3a76[_0x2fd11f]['_clear']();
            var _0x1c6489 = _0xfb8b43['_managers'];
            for (_0x2fd11f = 0x0, _0x4c01ad = _0x1c6489['length']; _0x2fd11f < _0x4c01ad; _0x2fd11f++)
                _0x1c6489[_0x2fd11f]['_clear']();
            var _0x52ac23 = _0x2f1999['length'], _0x577abc = _0x2f1999['elements'];
            for (_0x2fd11f = 0x0; _0x2fd11f < _0x52ac23; _0x2fd11f++)
                _0x577abc[_0x2fd11f]['bounds'], _0x577abc[_0x2fd11f]['_updateFor' + 'Native'] && _0x577abc[_0x2fd11f]['_updateFor' + 'Native'](_0x13dd2a);
            _0x1478a7['boundFrust' + 'um'], _0x5da8ae['cullingNat' + 'ive'](_0x1478a7['_boundFrus' + 'tumBuffer'], _0x5da8ae['_cullingBu' + 'ffer'], _0x1d51b9['_cullingBu' + 'fferIndice' + 's'], _0x52ac23, _0x1d51b9['_cullingBu' + 'fferResult']);
            var _0x4f23ba = _0x2247ad['Stat']['loopCount'], _0x58eacf = _0x13dd2a['camera']['_transform']['position'];
            for (_0x2fd11f = 0x0; _0x2fd11f < _0x52ac23; _0x2fd11f++) {
                var _0x59b91f = _0x577abc[_0x2fd11f];
                if (!_0x1478a7['useOcclusi' + 'onCulling'] || _0x1478a7['_isLayerVi' + 'sible'](_0x59b91f['_owner']['_layer']) && _0x59b91f['_enable'] && _0x1d51b9['_cullingBu' + 'fferResult'][_0x2fd11f]) {
                    _0x59b91f['_renderMar' + 'k'] = _0x4f23ba, _0x59b91f['_distanceF' + 'orSort'] = _0x43b358['distance'](_0x59b91f['bounds']['getCenter'](), _0x58eacf);
                    var _0x10ed58 = _0x59b91f['_renderEle' + 'ments'];
                    for (_0xc34441 = 0x0, _0x15c61a = _0x10ed58['length']; _0xc34441 < _0x15c61a; _0xc34441++) {
                        _0x10ed58[_0xc34441]['_update'](_0x1d51b9, _0x13dd2a, _0x21e599, _0x8eafae);
                    }
                }
            }
            var _0x7dba10 = _0x3ca6ff['elements']['length'];
            _0x7dba10 > 0x0 && _0x3ca6ff['_quickSort'](0x0, _0x7dba10 - 0x1), (_0x7dba10 = _0x2ce824['elements']['length']) > 0x0 && _0x2ce824['_quickSort'](0x0, _0x7dba10 - 0x1);
        }
        static ['cullingNat' + 'ive'](_0x319128, _0x270145, _0x348a9a, _0x526eff, _0x30985c) {
            return _0x2247ad['LayaGL']['instance']['culling'](_0x319128, _0x270145, _0x348a9a, _0x526eff, _0x30985c);
        }
    }
    _0x5da8ae['_tempColor' + '0'] = new _0x151df0(), _0x5da8ae['_tempVecto' + 'r0'] = new _0x43b358(), _0x5da8ae['_cameraCul' + 'lInfo'] = new _0x945f4a(), _0x5da8ae['_shadowCul' + 'lInfo'] = new _0x2a7c4c(), _0x5da8ae['debugFrust' + 'umCulling'] = !0x1;
    class _0x345080 {
        constructor() {
            this['updateMark'] = -0x1, this['pointLight' + 'Count'] = 0x0, this['spotLightC' + 'ount'] = 0x0, this['indices'] = [];
        }
    }
    class _0x3df7f3 {
        constructor(_0x1f5f7f, _0x31f269, _0x317386, _0x32b43d) {
            this['_updateMar' + 'k'] = 0x0, this['_depthSlic' + 'eParam'] = new _0x2d45ed(), this['_xSlices'] = _0x1f5f7f, this['_ySlices'] = _0x31f269, this['_zSlices'] = _0x317386;
            var _0x40cd66 = _0x1f5f7f * _0x31f269, _0x1e70b5 = _0x317386 * (0x1 + Math['ceil'](_0x32b43d / 0x4));
            this['_clusterTe' + 'xture'] = _0x101904['_createFlo' + 'atTextureB' + 'uffer'](_0x40cd66, _0x1e70b5), this['_clusterTe' + 'xture']['lock'] = !0x0, this['_clusterPi' + 'xels'] = new Float32Array(_0x40cd66 * _0x1e70b5 * 0x4);
            for (var _0x3a5816 = new Array(this['_zSlices']), _0xc602fc = 0x0; _0xc602fc < this['_zSlices']; _0xc602fc++) {
                _0x3a5816[_0xc602fc] = new Array(this['_ySlices']);
                for (var _0x317e11 = 0x0; _0x317e11 < this['_ySlices']; _0x317e11++) {
                    _0x3a5816[_0xc602fc][_0x317e11] = new Array(this['_xSlices']);
                    for (var _0x3113f6 = 0x0; _0x3113f6 < this['_xSlices']; _0x3113f6++)
                        _0x3a5816[_0xc602fc][_0x317e11][_0x3113f6] = new _0x345080();
                }
            }
            this['_clusterDa' + 'tas'] = _0x3a5816;
        }
        ['_insertSpo' + 'tLightSphe' + 're'](_0x1bcbed, _0x1cdcd9, _0x53978d, _0x53269e, _0x286ed4) {
            var _0x4f8478 = _0x3df7f3['_tempVecto' + 'r35'];
            _0x4f8478['x'] = _0x286ed4['x'] - _0x1bcbed['x'], _0x4f8478['y'] = _0x286ed4['y'] - _0x1bcbed['y'], _0x4f8478['z'] = _0x286ed4['z'] - _0x1bcbed['z'];
            var _0x374f00 = _0x43b358['dot'](_0x4f8478, _0x4f8478), _0x3e1dc7 = _0x286ed4['w'];
            if (!(_0x374f00 > _0x3e1dc7 * _0x3e1dc7))
                return !0x1;
            var _0x4df129 = _0x43b358['dot'](_0x4f8478, _0x1cdcd9);
            return !(Math['cos'](_0x53269e) * Math['sqrt'](_0x374f00 - _0x4df129 * _0x4df129) - _0x4df129 * Math['sin'](_0x53269e) > _0x3e1dc7 || _0x4df129 > _0x3e1dc7 + _0x53978d || _0x4df129 < -_0x3e1dc7);
        }
        ['_placePoin' + 'tLightToCl' + 'usters'](_0x4dabf4, _0x7eebc0) {
            for (var _0x4d9222 = this['_clusterDa' + 'tas'], _0x4cfc40 = this['_updateMar' + 'k'], _0x253c59 = _0x7eebc0['zMin'], _0x3a164e = _0x7eebc0['zMax']; _0x253c59 < _0x3a164e; _0x253c59++)
                for (var _0x2b343b = _0x7eebc0['yMin'], _0x27f5bd = _0x7eebc0['yMax']; _0x2b343b < _0x27f5bd; _0x2b343b++)
                    for (var _0x32a58d = _0x7eebc0['xMin'], _0x43468b = _0x7eebc0['xMax']; _0x32a58d < _0x43468b; _0x32a58d++) {
                        var _0x1815d5 = _0x4d9222[_0x253c59][_0x2b343b][_0x32a58d];
                        _0x1815d5['updateMark'] != _0x4cfc40 && (_0x1815d5['pointLight' + 'Count'] = 0x0, _0x1815d5['spotLightC' + 'ount'] = 0x0, _0x1815d5['updateMark'] = _0x4cfc40);
                        var _0x5b9d01 = _0x1815d5['indices'], _0x513f99 = _0x1815d5['pointLight' + 'Count']++;
                        _0x513f99 < _0x5b9d01['length'] ? _0x5b9d01[_0x513f99] = _0x4dabf4 : _0x5b9d01['push'](_0x4dabf4);
                    }
        }
        ['_placeSpot' + 'LightToClu' + 'sters'](_0x17dd39, _0x336539) {
            for (var _0x4d460f = this['_clusterDa' + 'tas'], _0x234f3b = this['_updateMar' + 'k'], _0x21a88c = _0x336539['zMin'], _0x3a8c02 = _0x336539['zMax']; _0x21a88c < _0x3a8c02; _0x21a88c++)
                for (var _0x3df0a2 = _0x336539['yMin'], _0x54b87d = _0x336539['yMax']; _0x3df0a2 < _0x54b87d; _0x3df0a2++)
                    for (var _0x2b556f = _0x336539['xMin'], _0x179798 = _0x336539['xMax']; _0x2b556f < _0x179798; _0x2b556f++) {
                        var _0x5a1bf2 = _0x4d460f[_0x21a88c][_0x3df0a2][_0x2b556f];
                        _0x5a1bf2['updateMark'] != _0x234f3b && (_0x5a1bf2['pointLight' + 'Count'] = 0x0, _0x5a1bf2['spotLightC' + 'ount'] = 0x0, _0x5a1bf2['updateMark'] = _0x234f3b);
                        var _0x504578 = _0x5a1bf2['indices'], _0x1e2fcd = _0x5a1bf2['pointLight' + 'Count'] + _0x5a1bf2['spotLightC' + 'ount']++;
                        _0x1e2fcd < _0x504578['length'] ? _0x504578[_0x1e2fcd] = _0x17dd39 : _0x504578['push'](_0x17dd39);
                    }
        }
        ['_insertCon' + 'ePlane'](_0x447597, _0x5644cd, _0x7f4e61, _0x3e262a, _0x52ffd6) {
            var _0x51264f = _0x3df7f3['_tempVecto' + 'r36'], _0x3677ce = _0x3df7f3['_tempVecto' + 'r37'];
            _0x43b358['cross'](_0x52ffd6, _0x5644cd, _0x51264f), _0x43b358['cross'](_0x51264f, _0x5644cd, _0x3677ce), _0x43b358['normalize'](_0x3677ce, _0x3677ce);
            var _0x131432 = _0x7f4e61 * Math['tan'](_0x3e262a), _0x3c1cfa = _0x447597['x'] + _0x7f4e61 * _0x5644cd['x'] + _0x131432 * _0x3677ce['x'], _0xcd29a2 = _0x447597['y'] + _0x7f4e61 * _0x5644cd['y'] + _0x131432 * _0x3677ce['y'], _0x492f26 = _0x447597['z'] + _0x7f4e61 * _0x5644cd['z'] + _0x131432 * _0x3677ce['z'];
            return _0x3c1cfa * _0x52ffd6['x'] + _0xcd29a2 * _0x52ffd6['y'] + _0x492f26 * _0x52ffd6['z'] <= 0x0 || _0x447597['x'] * _0x52ffd6['x'] + _0x447597['y'] * _0x52ffd6['y'] + _0x447597['z'] * _0x52ffd6['z'] <= 0x0;
        }
        ['_shrinkSph' + 'ereLightZP' + 'erspective'](_0x6ed81e, _0x47eac8, _0x584ebf, _0x333a15, _0x58cdf5) {
            var _0x1a6e65 = _0x584ebf['z'], _0x4b8e85 = _0x1a6e65 - _0x333a15, _0x1835ee = _0x1a6e65 + _0x333a15;
            if (_0x4b8e85 > _0x47eac8 || _0x1835ee <= _0x6ed81e)
                return !0x1;
            var _0x1cd323 = this['_depthSlic' + 'eParam'];
            return _0x58cdf5['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x4b8e85, _0x6ed81e)) * _0x1cd323['x'] - _0x1cd323['y']), _0x58cdf5['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x1835ee) * _0x1cd323['x'] - _0x1cd323['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkSpo' + 'tLightZPer' + 'spective'](_0x50efd2, _0x4ec560, _0x1902e1, _0x40cdbd, _0x257396, _0xe1b18b, _0x24ebaf) {
            var _0xd069aa = _0x40cdbd['x'], _0x1561c2 = _0x40cdbd['y'], _0x1ec575 = _0x40cdbd['z'], _0x3fb39e = Math['tan'](_0xe1b18b) * _0x257396, _0x1cbe9e = _0x1902e1['x'], _0x7c8e7d = _0x1902e1['y'], _0x4da3d7 = _0x1902e1['z'], _0x31a372 = _0xd069aa - _0x1cbe9e, _0x22fb0f = _0x1561c2 - _0x7c8e7d, _0x4c6963 = _0x1ec575 - _0x4da3d7, _0x126dda = _0x31a372 * _0x31a372 + _0x22fb0f * _0x22fb0f + _0x4c6963 * _0x4c6963, _0x2eb082 = Math['sqrt'](0x1 - _0x4c6963 * _0x4c6963 / _0x126dda), _0x426ff4 = Math['max'](Math['min'](_0x4da3d7, _0x1ec575 - _0x2eb082 * _0x3fb39e), _0x1902e1['z'] - _0x257396), _0x439db9 = Math['min'](Math['max'](_0x4da3d7, _0x1ec575 + _0x2eb082 * _0x3fb39e), _0x1902e1['z'] + _0x257396);
            if (_0x426ff4 > _0x4ec560 || _0x439db9 <= _0x50efd2)
                return !0x1;
            var _0x501a62 = this['_depthSlic' + 'eParam'];
            return _0x24ebaf['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x426ff4, _0x50efd2)) * _0x501a62['x'] - _0x501a62['y']), _0x24ebaf['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x439db9) * _0x501a62['x'] - _0x501a62['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkSph' + 'ereLightBy' + 'BoundOrth'](_0x319072, _0xe4624c, _0x4c2cf7, _0x3830c6, _0x302427, _0x4dc658, _0x4cfe07) {
            var _0x469f8e = _0x302427['z'], _0x3d6535 = _0x469f8e - _0x4dc658, _0x40640c = _0x469f8e + _0x4dc658;
            if (_0x3d6535 > _0x3830c6 || _0x40640c <= _0x4c2cf7)
                return !0x1;
            var _0x5cefe2 = _0x302427['x'], _0xde1f0 = _0x5cefe2 - _0x4dc658, _0x9e53b0 = _0x5cefe2 + _0x4dc658;
            if (_0xde1f0 > _0x319072 || _0x9e53b0 <= -_0x319072)
                return !0x1;
            var _0x44c772 = _0x302427['y'], _0x5c4b09 = _0x44c772 - _0x4dc658, _0x38aaae = _0x44c772 + _0x4dc658;
            if (_0x5c4b09 > _0xe4624c || _0x38aaae <= -_0xe4624c)
                return !0x1;
            var _0x3b2964 = this['_xSlices'], _0x1fbfa8 = this['_ySlices'], _0x456729 = this['_depthSlic' + 'eParam'], _0x251f0e = 0x2 * _0x319072 / _0x3b2964, _0x53ac49 = 0x2 * _0xe4624c / _0x1fbfa8;
            return _0x4cfe07['xMin'] = Math['max'](Math['floor']((_0xde1f0 + _0x319072) / _0x251f0e), 0x0), _0x4cfe07['xMax'] = Math['min'](Math['ceil']((_0x9e53b0 + _0x319072) / _0x251f0e), _0x3b2964), _0x4cfe07['yMin'] = Math['max'](Math['floor']((_0xe4624c - _0x38aaae) / _0x53ac49), 0x0), _0x4cfe07['yMax'] = Math['min'](Math['ceil']((_0xe4624c - _0x5c4b09) / _0x53ac49), _0x1fbfa8), _0x4cfe07['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x3d6535, _0x4c2cf7)) * _0x456729['x'] - _0x456729['y']), _0x4cfe07['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x40640c) * _0x456729['x'] - _0x456729['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkSpo' + 'tLightByBo' + 'undOrth'](_0x25d1a2, _0x2c5395, _0x1fb19c, _0x1f5142, _0x375906, _0x5eb912, _0x5d6208, _0x5ba39a, _0x94d36b) {
            var _0x2d892a = _0x5eb912['x'], _0x530da9 = _0x5eb912['y'], _0x5c9a6a = _0x5eb912['z'], _0x3d913d = Math['tan'](_0x5ba39a) * _0x5d6208, _0x3333b9 = _0x375906['x'], _0x42173f = _0x375906['y'], _0x382da8 = _0x375906['z'], _0xcbb15a = _0x2d892a - _0x3333b9, _0x5d4a7f = _0x530da9 - _0x42173f, _0x12fb3e = _0x5c9a6a - _0x382da8, _0x3c6641 = _0xcbb15a * _0xcbb15a + _0x5d4a7f * _0x5d4a7f + _0x12fb3e * _0x12fb3e, _0x3dd8c3 = Math['sqrt'](0x1 - _0x12fb3e * _0x12fb3e / _0x3c6641), _0x2bf689 = Math['max'](Math['min'](_0x382da8, _0x5c9a6a - _0x3dd8c3 * _0x3d913d), _0x375906['z'] - _0x5d6208), _0x45a42f = Math['min'](Math['max'](_0x382da8, _0x5c9a6a + _0x3dd8c3 * _0x3d913d), _0x375906['z'] + _0x5d6208);
            if (_0x2bf689 > _0x1f5142 || _0x45a42f <= _0x1fb19c)
                return !0x1;
            var _0x47a251 = Math['sqrt'](0x1 - _0xcbb15a * _0xcbb15a / _0x3c6641), _0x3d7503 = Math['max'](Math['min'](_0x3333b9, _0x2d892a - _0x47a251 * _0x3d913d), _0x375906['x'] - _0x5d6208), _0x26007f = Math['min'](Math['max'](_0x3333b9, _0x2d892a + _0x47a251 * _0x3d913d), _0x375906['x'] + _0x5d6208);
            if (_0x3d7503 > _0x25d1a2 || _0x26007f <= -_0x25d1a2)
                return !0x1;
            var _0x11ef9d = Math['sqrt'](0x1 - _0x5d4a7f * _0x5d4a7f / _0x3c6641), _0x5e90e2 = Math['max'](Math['min'](_0x42173f, _0x530da9 - _0x11ef9d * _0x3d913d), _0x375906['y'] - _0x5d6208), _0x240da5 = Math['min'](Math['max'](_0x42173f, _0x530da9 + _0x11ef9d * _0x3d913d), _0x375906['y'] + _0x5d6208);
            if (_0x5e90e2 > _0x2c5395 || _0x240da5 <= -_0x2c5395)
                return !0x1;
            var _0x42a8c9 = this['_xSlices'], _0x1e3bb4 = this['_ySlices'], _0x40d133 = this['_depthSlic' + 'eParam'], _0x3c688d = 0x2 * _0x25d1a2 / _0x42a8c9, _0x44d824 = 0x2 * _0x2c5395 / _0x1e3bb4;
            return _0x94d36b['xMin'] = Math['max'](Math['floor']((_0x3d7503 + _0x25d1a2) / _0x3c688d), 0x0), _0x94d36b['xMax'] = Math['min'](Math['ceil']((_0x26007f + _0x25d1a2) / _0x3c688d), _0x42a8c9), _0x94d36b['yMin'] = Math['max'](Math['floor']((_0x2c5395 - _0x240da5) / _0x44d824), 0x0), _0x94d36b['yMax'] = Math['min'](Math['ceil']((_0x2c5395 - _0x5e90e2) / _0x44d824), _0x1e3bb4), _0x94d36b['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x2bf689, _0x1fb19c)) * _0x40d133['x'] - _0x40d133['y']), _0x94d36b['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x45a42f) * _0x40d133['x'] - _0x40d133['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x292ef8, _0x472175, _0x32737e, _0x595244, _0x1b5dd9) {
            var _0x289155, _0x209cfa, _0x127f3b, _0x5b2658, _0x3f9d10, _0x8ea4d2 = _0x292ef8['x'], _0x15c247 = _0x292ef8['y'], _0x351ac6 = _0x292ef8['z'], _0x4c4f8e = this['_ySlices'] + 0x1;
            for (_0x3f9d10 = 0x0; _0x3f9d10 < _0x4c4f8e; _0x3f9d10++) {
                if (_0x15c247 * (_0x2e3815 = _0x1b5dd9[_0x3f9d10])['y'] + _0x351ac6 * _0x2e3815['z'] < _0x472175) {
                    _0x209cfa = Math['max'](0x0, _0x3f9d10 - 0x1);
                    break;
                }
            }
            if (_0x3f9d10 == _0x4c4f8e)
                return !0x1;
            for (_0x5b2658 = this['_ySlices'], _0x3f9d10 = _0x209cfa + 0x1; _0x3f9d10 < _0x4c4f8e; _0x3f9d10++) {
                if (_0x15c247 * (_0x2e3815 = _0x1b5dd9[_0x3f9d10])['y'] + _0x351ac6 * _0x2e3815['z'] <= -_0x472175) {
                    _0x5b2658 = Math['max'](0x0, _0x3f9d10);
                    break;
                }
            }
            for (_0x4c4f8e = this['_xSlices'] + 0x1, _0x3f9d10 = 0x0; _0x3f9d10 < _0x4c4f8e; _0x3f9d10++) {
                if (_0x8ea4d2 * (_0x2e3815 = _0x595244[_0x3f9d10])['x'] + _0x351ac6 * _0x2e3815['z'] < _0x472175) {
                    _0x289155 = Math['max'](0x0, _0x3f9d10 - 0x1);
                    break;
                }
            }
            for (_0x127f3b = this['_xSlices'], _0x3f9d10 = _0x289155 + 0x1; _0x3f9d10 < _0x4c4f8e; _0x3f9d10++) {
                var _0x2e3815;
                if (_0x8ea4d2 * (_0x2e3815 = _0x595244[_0x3f9d10])['x'] + _0x351ac6 * _0x2e3815['z'] <= -_0x472175) {
                    _0x127f3b = Math['max'](0x0, _0x3f9d10);
                    break;
                }
            }
            return _0x32737e['xMin'] = _0x289155, _0x32737e['xMax'] = _0x127f3b, _0x32737e['yMin'] = _0x209cfa, _0x32737e['yMax'] = _0x5b2658, !0x0;
        }
        ['_shrinkSpo' + 'tXYByConeP' + 'erspective'](_0x1b2526, _0x271198, _0x36c456, _0x265576, _0x5af1f2, _0x5720a1, _0x48a548) {
            for (var _0x15b0ee, _0x292efc, _0xe52fef, _0x1ce058, _0x12e3ea = _0x3df7f3['_tempVecto' + 'r32'], _0x15d380 = _0x5af1f2['yMax'] + 0x1, _0x1ce2de = _0x5af1f2['yMin'] + 0x1; _0x1ce2de < _0x15d380; _0x1ce2de++)
                if (this['_insertCon' + 'ePlane'](_0x1b2526, _0x271198, _0x36c456, _0x265576, _0x48a548[_0x1ce2de])) {
                    _0x292efc = Math['max'](0x0, _0x1ce2de - 0x1);
                    break;
                }
            _0x1ce058 = _0x5af1f2['yMax'];
            for (_0x1ce2de = _0x292efc + 0x1; _0x1ce2de < _0x15d380; _0x1ce2de++) {
                var _0x4ee12e = _0x48a548[_0x1ce2de];
                if (_0x12e3ea['setValue'](0x0, -_0x4ee12e['y'], -_0x4ee12e['z']), !this['_insertCon' + 'ePlane'](_0x1b2526, _0x271198, _0x36c456, _0x265576, _0x12e3ea)) {
                    _0x1ce058 = Math['max'](0x0, _0x1ce2de);
                    break;
                }
            }
            _0x15d380 = _0x5af1f2['xMax'] + 0x1;
            for (_0x1ce2de = _0x5af1f2['xMin'] + 0x1; _0x1ce2de < _0x15d380; _0x1ce2de++)
                if (this['_insertCon' + 'ePlane'](_0x1b2526, _0x271198, _0x36c456, _0x265576, _0x5720a1[_0x1ce2de])) {
                    _0x15b0ee = Math['max'](0x0, _0x1ce2de - 0x1);
                    break;
                }
            _0xe52fef = _0x5af1f2['xMax'];
            for (_0x1ce2de = _0x15b0ee + 0x1; _0x1ce2de < _0x15d380; _0x1ce2de++) {
                _0x4ee12e = _0x5720a1[_0x1ce2de];
                if (_0x12e3ea['setValue'](-_0x4ee12e['x'], 0x0, -_0x4ee12e['z']), !this['_insertCon' + 'ePlane'](_0x1b2526, _0x271198, _0x36c456, _0x265576, _0x12e3ea)) {
                    _0xe52fef = Math['max'](0x0, _0x1ce2de);
                    break;
                }
            }
            _0x5af1f2['xMin'] = _0x15b0ee, _0x5af1f2['xMax'] = _0xe52fef, _0x5af1f2['yMin'] = _0x292efc, _0x5af1f2['yMax'] = _0x1ce058;
        }
        ['_updatePoi' + 'ntLightPer' + 'spective'](_0x311fbf, _0x56188a, _0x1e1ddb, _0x13c7b8, _0x1ab951, _0x1a3362, _0x15c93c) {
            var _0x43e775 = _0x3df7f3['_tempLight' + 'Bound'], _0x6eb1fa = _0x3df7f3['_tempVecto' + 'r30'];
            _0x43b358['transformV' + '3ToV3'](_0x13c7b8['_transform']['position'], _0x1e1ddb, _0x6eb1fa), _0x6eb1fa['z'] *= -0x1, this['_shrinkSph' + 'ereLightZP' + 'erspective'](_0x311fbf, _0x56188a, _0x6eb1fa, _0x13c7b8['range'], _0x43e775) && this['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x6eb1fa, _0x13c7b8['range'], _0x43e775, _0x1a3362, _0x15c93c) && this['_placePoin' + 'tLightToCl' + 'usters'](_0x1ab951, _0x43e775);
        }
        ['_updateSpo' + 'tLightPers' + 'pective'](_0x1a7d08, _0x14296a, _0x27c28b, _0x140a26, _0x363725, _0x51d403, _0x184586) {
            var _0x34ae0d = _0x3df7f3['_tempLight' + 'Bound'], _0x279fe6 = _0x3df7f3['_tempVecto' + 'r30'], _0x95df83 = _0x3df7f3['_tempVecto' + 'r31'], _0x507555 = _0x3df7f3['_tempVecto' + 'r34'], _0x118975 = _0x140a26['_transform']['position'], _0x20c925 = _0x140a26['range'];
            _0x140a26['_transform']['worldMatri' + 'x']['getForward'](_0x95df83), _0x43b358['normalize'](_0x95df83, _0x95df83), _0x43b358['scale'](_0x95df83, _0x20c925, _0x507555), _0x43b358['add'](_0x118975, _0x507555, _0x507555), _0x43b358['transformV' + '3ToV3'](_0x118975, _0x27c28b, _0x279fe6), _0x43b358['transformV' + '3ToV3'](_0x507555, _0x27c28b, _0x507555), _0x279fe6['z'] *= -0x1, _0x507555['z'] *= -0x1;
            var _0x3493d8 = _0x140a26['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            if (this['_shrinkSpo' + 'tLightZPer' + 'spective'](_0x1a7d08, _0x14296a, _0x279fe6, _0x507555, _0x20c925, _0x3493d8, _0x34ae0d) && this['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x279fe6, _0x20c925, _0x34ae0d, _0x51d403, _0x184586)) {
                var _0x3163ae = _0x3df7f3['_tempVecto' + 'r33'];
                _0x3163ae['x'] = _0x507555['x'] - _0x279fe6['x'], _0x3163ae['y'] = _0x507555['y'] - _0x279fe6['y'], _0x3163ae['z'] = _0x507555['z'] - _0x279fe6['z'], _0x43b358['normalize'](_0x3163ae, _0x3163ae), this['_shrinkSpo' + 'tXYByConeP' + 'erspective'](_0x279fe6, _0x3163ae, _0x20c925, _0x3493d8, _0x34ae0d, _0x51d403, _0x184586), this['_placeSpot' + 'LightToClu' + 'sters'](_0x363725, _0x34ae0d);
            }
        }
        ['_updatePoi' + 'ntLightOrt' + 'h'](_0x5864ab, _0x37f1d9, _0x9b9971, _0x5781ce, _0x37a064, _0x50b3ba, _0x419717) {
            var _0x641f72 = _0x3df7f3['_tempLight' + 'Bound'], _0x1a5c19 = _0x3df7f3['_tempVecto' + 'r30'];
            _0x43b358['transformV' + '3ToV3'](_0x50b3ba['_transform']['position'], _0x37a064, _0x1a5c19), _0x1a5c19['z'] *= -0x1, this['_shrinkSph' + 'ereLightBy' + 'BoundOrth'](_0x5864ab, _0x37f1d9, _0x9b9971, _0x5781ce, _0x1a5c19, _0x50b3ba['range'], _0x641f72) && this['_placePoin' + 'tLightToCl' + 'usters'](_0x419717, _0x641f72);
        }
        ['_updateSpo' + 'tLightOrth'](_0x2a8edc, _0x366ed2, _0x1f9916, _0x36e9a5, _0x41d418, _0xfca783, _0x1489d3) {
            var _0x121872 = _0x3df7f3['_tempLight' + 'Bound'], _0x53630b = _0x3df7f3['_tempVecto' + 'r30'], _0x2c86af = _0x3df7f3['_tempVecto' + 'r31'], _0xb073fb = _0x3df7f3['_tempVecto' + 'r34'], _0x4a30db = _0xfca783['_transform']['position'], _0x3ce249 = _0xfca783['range'];
            _0xfca783['_transform']['worldMatri' + 'x']['getForward'](_0x2c86af), _0x43b358['normalize'](_0x2c86af, _0x2c86af), _0x43b358['scale'](_0x2c86af, _0x3ce249, _0xb073fb), _0x43b358['add'](_0x4a30db, _0xb073fb, _0xb073fb), _0x43b358['transformV' + '3ToV3'](_0x4a30db, _0x41d418, _0x53630b), _0x43b358['transformV' + '3ToV3'](_0xb073fb, _0x41d418, _0xb073fb), _0x53630b['z'] *= -0x1, _0xb073fb['z'] *= -0x1;
            var _0xee3731 = _0xfca783['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            this['_shrinkSpo' + 'tLightByBo' + 'undOrth'](_0x2a8edc, _0x366ed2, _0x1f9916, _0x36e9a5, _0x53630b, _0xb073fb, _0x3ce249, _0xee3731, _0x121872) && this['_placeSpot' + 'LightToClu' + 'sters'](_0x1489d3, _0x121872);
        }
        ['update'](_0x355426, _0x36238a) {
            this['_updateMar' + 'k']++;
            var _0x2bb3da = _0x355426['nearPlane'];
            this['_depthSlic' + 'eParam']['x'] = _0xb0652e['_config']['lightClust' + 'erCount']['z'] / Math['log2'](_0x355426['farPlane'] / _0x2bb3da), this['_depthSlic' + 'eParam']['y'] = Math['log2'](_0x2bb3da) * this['_depthSlic' + 'eParam']['x'];
            var _0x4129ee = _0x355426['nearPlane'], _0x3a3edd = _0x355426['farPlane'], _0x359697 = _0x355426['viewMatrix'], _0x2857a5 = _0x36238a['_direction' + 'Lights']['_length'], _0x12a25c = _0x36238a['_pointLigh' + 'ts'], _0x1103eb = _0x12a25c['_length'], _0xc66f9f = _0x12a25c['_elements'], _0x5c6c2b = _0x36238a['_spotLight' + 's'], _0x5c4173 = _0x5c6c2b['_length'], _0x3be3db = _0x5c6c2b['_elements'];
            if (_0x355426['orthograph' + 'ic']) {
                for (var _0x4caeee = _0x355426['orthograph' + 'icVertical' + 'Size'] / 0x2, _0x40f7bd = _0x4caeee * _0x355426['aspectRati' + 'o'], _0x489047 = 0x0; _0x489047 < _0x1103eb; _0x489047++, _0x2857a5++)
                    this['_updatePoi' + 'ntLightOrt' + 'h'](_0x40f7bd, _0x4caeee, _0x4129ee, _0x3a3edd, _0x359697, _0xc66f9f[_0x489047], _0x2857a5);
                for (_0x489047 = 0x0; _0x489047 < _0x5c4173; _0x489047++, _0x2857a5++)
                    this['_updateSpo' + 'tLightOrth'](_0x40f7bd, _0x4caeee, _0x4129ee, _0x3a3edd, _0x359697, _0x3be3db[_0x489047], _0x2857a5);
            } else {
                _0x355426['_updateClu' + 'sterPlaneX' + 'Y']();
                var _0x40d302 = _0x355426['_clusterXP' + 'lanes'], _0x5921a3 = _0x355426['_clusterYP' + 'lanes'];
                for (_0x489047 = 0x0; _0x489047 < _0x1103eb; _0x489047++, _0x2857a5++)
                    this['_updatePoi' + 'ntLightPer' + 'spective'](_0x4129ee, _0x3a3edd, _0x359697, _0xc66f9f[_0x489047], _0x2857a5, _0x40d302, _0x5921a3);
                for (_0x489047 = 0x0; _0x489047 < _0x5c4173; _0x489047++, _0x2857a5++)
                    this['_updateSpo' + 'tLightPers' + 'pective'](_0x4129ee, _0x3a3edd, _0x359697, _0x3be3db[_0x489047], _0x2857a5, _0x40d302, _0x5921a3);
            }
            if (_0x1103eb + _0x5c4173 > 0x0) {
                for (var _0x3c4735 = this['_xSlices'], _0x2bd631 = this['_ySlices'], _0x2d8e4f = this['_zSlices'], _0x252ef9 = _0x3c4735 * _0x2bd631 * 0x4, _0x317168 = _0x252ef9 * _0x2d8e4f, _0xf0ae01 = this['_clusterPi' + 'xels'], _0x3ba30a = _0xf0ae01['length'], _0x2f0e8b = this['_clusterDa' + 'tas'], _0x79825 = this['_updateMar' + 'k'], _0x170609 = !0x0, _0x13066d = 0x0; _0x13066d < _0x2d8e4f; _0x13066d++)
                    for (var _0x571d49 = 0x0; _0x571d49 < _0x2bd631; _0x571d49++)
                        for (var _0x16653a = 0x0; _0x16653a < _0x3c4735; _0x16653a++) {
                            var _0x31dffb = _0x2f0e8b[_0x13066d][_0x571d49][_0x16653a], _0x3b9e82 = 0x4 * (_0x16653a + _0x571d49 * _0x3c4735 + _0x13066d * _0x3c4735 * _0x2bd631);
                            if (_0x31dffb['updateMark'] !== _0x79825)
                                _0xf0ae01[_0x3b9e82] = 0x0, _0xf0ae01[_0x3b9e82 + 0x1] = 0x0;
                            else {
                                if (_0x170609) {
                                    var _0x4ea333 = _0x31dffb['indices'], _0x5dc8f2 = _0x31dffb['pointLight' + 'Count'], _0x436b62 = _0x31dffb['spotLightC' + 'ount'], _0x407bc0 = _0x5dc8f2 + _0x436b62;
                                    if (_0x317168 + _0x407bc0 < _0x3ba30a) {
                                        _0xf0ae01[_0x3b9e82] = _0x5dc8f2, _0xf0ae01[_0x3b9e82 + 0x1] = _0x436b62, _0xf0ae01[_0x3b9e82 + 0x2] = Math['floor'](_0x317168 / _0x252ef9), _0xf0ae01[_0x3b9e82 + 0x3] = _0x317168 % _0x252ef9;
                                        for (_0x489047 = 0x0; _0x489047 < _0x407bc0; _0x489047++)
                                            _0xf0ae01[_0x317168++] = _0x4ea333[_0x489047];
                                    } else {
                                        _0x407bc0 = _0x3ba30a - (_0x317168 + _0x407bc0), _0x5dc8f2 = Math['min'](_0x5dc8f2, _0x407bc0), _0xf0ae01[_0x3b9e82] = _0x5dc8f2, _0xf0ae01[_0x3b9e82 + 0x1] = Math['min'](_0x436b62, _0x407bc0 - _0x5dc8f2), _0xf0ae01[_0x3b9e82 + 0x2] = Math['floor'](_0x317168 / _0x252ef9), _0xf0ae01[_0x3b9e82 + 0x3] = _0x317168 % _0x252ef9;
                                        for (_0x489047 = 0x0; _0x489047 < _0x407bc0; _0x489047++)
                                            _0xf0ae01[_0x317168++] = _0x4ea333[_0x489047];
                                        _0x170609 = !0x1;
                                    }
                                }
                            }
                        }
                var _0x3e32be = this['_clusterTe' + 'xture']['width'];
                this['_clusterTe' + 'xture']['setSubPixe' + 'ls'](0x0, 0x0, _0x3e32be, Math['ceil'](_0x317168 / (0x4 * _0x3e32be)), _0xf0ae01);
            }
        }
    }
    _0x3df7f3['_tempVecto' + 'r30'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r31'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r32'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r33'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r34'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r35'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r36'] = new _0x43b358(), _0x3df7f3['_tempVecto' + 'r37'] = new _0x43b358(), _0x3df7f3['_tempLight' + 'Bound'] = new class {
    }();
    class _0x2bea9c {
        constructor() {
            this['_coefficie' + 'nts'] = new Float32Array(0x1b);
        }
        ['getCoeffic' + 'ient'](_0x52736a, _0x1dc7e4) {
            return this['_coefficie' + 'nts'][0x9 * _0x52736a + _0x1dc7e4];
        }
        ['setCoeffic' + 'ient'](_0x1a531c, _0x378484, _0x3808b1) {
            this['_coefficie' + 'nts'][0x9 * _0x1a531c + _0x378484] = _0x3808b1;
        }
        ['setCoeffic' + 'ients'](_0x16d2d7, _0x281b7a, _0x2ccc69, _0x35c9b1, _0x5f7e96, _0x240191, _0x375a02, _0x44ce12, _0x318903, _0x195b9d) {
            var _0x54083a = 0x9 * _0x16d2d7;
            this['_coefficie' + 'nts'][_0x54083a] = _0x281b7a, this['_coefficie' + 'nts'][++_0x54083a] = _0x2ccc69, this['_coefficie' + 'nts'][++_0x54083a] = _0x35c9b1, this['_coefficie' + 'nts'][++_0x54083a] = _0x5f7e96, this['_coefficie' + 'nts'][++_0x54083a] = _0x240191, this['_coefficie' + 'nts'][++_0x54083a] = _0x375a02, this['_coefficie' + 'nts'][++_0x54083a] = _0x44ce12, this['_coefficie' + 'nts'][++_0x54083a] = _0x318903, this['_coefficie' + 'nts'][++_0x54083a] = _0x195b9d;
        }
        ['cloneTo'](_0x340674) {
            if (this !== _0x340674) {
                for (var _0x910eca = this['_coefficie' + 'nts'], _0xb29c9 = _0x340674['_coefficie' + 'nts'], _0x375e1e = 0x0; _0x375e1e < 0x1b; _0x375e1e++)
                    _0xb29c9[_0x375e1e] = _0x910eca[_0x375e1e];
            }
        }
    }
    _0x2bea9c['_default'] = new _0x2bea9c();
    class _0x2d292 {
        constructor() {
            this['_pressedSp' + 'rite'] = null, this['_pressedLo' + 'opCount'] = -0x1, this['sprite'] = null, this['mousePosit' + 'ionX'] = 0x0, this['mousePosit' + 'ionY'] = 0x0;
        }
    }
    class _0xe03a3a {
        constructor() {
            this['_indexInLi' + 'st'] = -0x1, this['_identifie' + 'r'] = -0x1, this['_position'] = new _0x2d45ed();
        }
        get ['identifier']() {
            return this['_identifie' + 'r'];
        }
        get ['position']() {
            return this['_position'];
        }
        ['_getIndexI' + 'nList']() {
            return this['_indexInLi' + 'st'];
        }
        ['_setIndexI' + 'nList'](_0x3305ea) {
            this['_indexInLi' + 'st'] = _0x3305ea;
        }
    }
    class _0x458084 {
        constructor(_0x47ac36, _0x334e18 = 0x0) {
            this['normal'] = _0x47ac36, this['distance'] = _0x334e18;
        }
        static ['createPlan' + 'eBy3P'](_0x567bea, _0x44f0f5, _0x2377f6, _0x236848) {
            var _0x3d950c = _0x44f0f5['x'] - _0x567bea['x'], _0x2c5909 = _0x44f0f5['y'] - _0x567bea['y'], _0x27081c = _0x44f0f5['z'] - _0x567bea['z'], _0x28d7df = _0x2377f6['x'] - _0x567bea['x'], _0x51ef3f = _0x2377f6['y'] - _0x567bea['y'], _0x141435 = _0x2377f6['z'] - _0x567bea['z'], _0x2dd09e = _0x2c5909 * _0x141435 - _0x27081c * _0x51ef3f, _0x34ea7d = _0x27081c * _0x28d7df - _0x3d950c * _0x141435, _0x6467f7 = _0x3d950c * _0x51ef3f - _0x2c5909 * _0x28d7df, _0x2de90a = 0x1 / Math['sqrt'](_0x2dd09e * _0x2dd09e + _0x34ea7d * _0x34ea7d + _0x6467f7 * _0x6467f7), _0x2d129d = _0x2dd09e * _0x2de90a, _0x3f06f5 = _0x34ea7d * _0x2de90a, _0x4b209c = _0x6467f7 * _0x2de90a, _0x1ee3ff = _0x236848['normal'];
            _0x1ee3ff['x'] = _0x2d129d, _0x1ee3ff['y'] = _0x3f06f5, _0x1ee3ff['z'] = _0x4b209c, _0x236848['distance'] = -(_0x2d129d * _0x567bea['x'] + _0x3f06f5 * _0x567bea['y'] + _0x4b209c * _0x567bea['z']);
        }
        ['normalize']() {
            var _0x272f7d = this['normal']['x'], _0xc124e0 = this['normal']['y'], _0x25accd = this['normal']['z'], _0x58e71f = 0x1 / Math['sqrt'](_0x272f7d * _0x272f7d + _0xc124e0 * _0xc124e0 + _0x25accd * _0x25accd);
            this['normal']['x'] = _0x272f7d * _0x58e71f, this['normal']['y'] = _0xc124e0 * _0x58e71f, this['normal']['z'] = _0x25accd * _0x58e71f, this['distance'] *= _0x58e71f;
        }
        ['cloneTo'](_0x293c0f) {
            var _0x292700 = _0x293c0f;
            this['normal']['cloneTo'](_0x292700['normal']), _0x292700['distance'] = this['distance'];
        }
        ['clone']() {
            var _0x496efe = new _0x458084(new _0x43b358());
            return this['cloneTo'](_0x496efe), _0x496efe;
        }
    }
    _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] = 0x0, _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] = 0x1, _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'] = 0x2;
    class _0xbd8983 {
        constructor(_0x232ded, _0x4815fa) {
            this['origin'] = _0x232ded, this['direction'] = _0x4815fa;
        }
    }
    class _0x1d746f {
    }
    _0x1d746f['Disjoint'] = 0x0, _0x1d746f['Contains'] = 0x1, _0x1d746f['Intersects'] = 0x2;
    class _0x3b260a {
        constructor() {
        }
        static ['distancePl' + 'aneToPoint'](_0x15e4d4, _0x5b2d3f) {
            return _0x43b358['dot'](_0x15e4d4['normal'], _0x5b2d3f) - _0x15e4d4['distance'];
        }
        static ['distanceBo' + 'xToPoint'](_0x11deee, _0x4d25cc) {
            var _0x3ba2e8 = _0x11deee['min'], _0x3a7866 = _0x3ba2e8['x'], _0x27bb18 = _0x3ba2e8['y'], _0x3ecc51 = _0x3ba2e8['z'], _0x3cc105 = _0x11deee['max'], _0x483357 = _0x3cc105['x'], _0x1d2fd0 = _0x3cc105['y'], _0x2c906a = _0x3cc105['z'], _0x5a97e4 = _0x4d25cc['x'], _0x13088c = _0x4d25cc['y'], _0x19c265 = _0x4d25cc['z'], _0x292ba2 = 0x0;
            return _0x5a97e4 < _0x3a7866 && (_0x292ba2 += (_0x3a7866 - _0x5a97e4) * (_0x3a7866 - _0x5a97e4)), _0x5a97e4 > _0x483357 && (_0x292ba2 += (_0x483357 - _0x5a97e4) * (_0x483357 - _0x5a97e4)), _0x13088c < _0x27bb18 && (_0x292ba2 += (_0x27bb18 - _0x13088c) * (_0x27bb18 - _0x13088c)), _0x13088c > _0x1d2fd0 && (_0x292ba2 += (_0x1d2fd0 - _0x13088c) * (_0x1d2fd0 - _0x13088c)), _0x19c265 < _0x3ecc51 && (_0x292ba2 += (_0x3ecc51 - _0x19c265) * (_0x3ecc51 - _0x19c265)), _0x19c265 > _0x2c906a && (_0x292ba2 += (_0x2c906a - _0x19c265) * (_0x2c906a - _0x19c265)), Math['sqrt'](_0x292ba2);
        }
        static ['distanceBo' + 'xToBox'](_0x122a4b, _0x470223) {
            var _0x44ba62, _0x54b1bf = _0x122a4b['min'], _0x1b1ac4 = _0x54b1bf['x'], _0x181c65 = _0x54b1bf['y'], _0xa5aac6 = _0x54b1bf['z'], _0x2edb59 = _0x122a4b['max'], _0x282aeb = _0x2edb59['x'], _0x568ad5 = _0x2edb59['y'], _0x1ec6c2 = _0x2edb59['z'], _0x481751 = _0x470223['min'], _0x3880ad = _0x481751['x'], _0x1564d0 = _0x481751['y'], _0x1f1679 = _0x481751['z'], _0x447fcf = _0x470223['max'], _0x269593 = _0x447fcf['x'], _0xb42bc = _0x447fcf['y'], _0x5dc683 = _0x447fcf['z'], _0x436ab8 = 0x0;
            return _0x1b1ac4 > _0x269593 ? _0x436ab8 += (_0x44ba62 = _0x1b1ac4 - _0x269593) * _0x44ba62 : _0x3880ad > _0x282aeb && (_0x436ab8 += (_0x44ba62 = _0x3880ad - _0x282aeb) * _0x44ba62), _0x181c65 > _0xb42bc ? _0x436ab8 += (_0x44ba62 = _0x181c65 - _0xb42bc) * _0x44ba62 : _0x1564d0 > _0x568ad5 && (_0x436ab8 += (_0x44ba62 = _0x1564d0 - _0x568ad5) * _0x44ba62), _0xa5aac6 > _0x5dc683 ? _0x436ab8 += (_0x44ba62 = _0xa5aac6 - _0x5dc683) * _0x44ba62 : _0x1f1679 > _0x1ec6c2 && (_0x436ab8 += (_0x44ba62 = _0x1f1679 - _0x1ec6c2) * _0x44ba62), Math['sqrt'](_0x436ab8);
        }
        static ['distanceSp' + 'hereToPoin' + 't'](_0x475267, _0x238405) {
            var _0x4445ab = Math['sqrt'](_0x43b358['distanceSq' + 'uared'](_0x475267['center'], _0x238405));
            return _0x4445ab -= _0x475267['radius'], Math['max'](_0x4445ab, 0x0);
        }
        static ['distanceSp' + 'hereToSphe' + 're'](_0x23faa5, _0x1ed670) {
            var _0x6d68ef = Math['sqrt'](_0x43b358['distanceSq' + 'uared'](_0x23faa5['center'], _0x1ed670['center']));
            return _0x6d68ef -= _0x23faa5['radius'] + _0x1ed670['radius'], Math['max'](_0x6d68ef, 0x0);
        }
        static ['intersects' + 'RayAndTria' + 'ngleRD'](_0x5a18ff, _0x2c2c6b, _0x2f9b90, _0x5013ef, _0x2131b4) {
            var _0x1b3d62 = _0x5a18ff['origin'], _0x51a1b7 = _0x1b3d62['x'], _0x1b49c7 = _0x1b3d62['y'], _0x36f4c8 = _0x1b3d62['z'], _0x3a571c = _0x5a18ff['direction'], _0x1c7088 = _0x3a571c['x'], _0x51bfc7 = _0x3a571c['y'], _0x5e9a06 = _0x3a571c['z'], _0x207714 = _0x2c2c6b['x'], _0xf23224 = _0x2c2c6b['y'], _0x1d2523 = _0x2c2c6b['z'], _0x359143 = _0x2f9b90['x'], _0x1181f0 = _0x2f9b90['y'], _0x400348 = _0x2f9b90['z'], _0x2fabb3 = _0x5013ef['x'], _0x25e4dc = _0x5013ef['y'], _0x375762 = _0x5013ef['z'], _0x1ce7d3 = _0x3b260a['_tempV30']['x'], _0x203e34 = _0x3b260a['_tempV30']['y'], _0x5acbe9 = _0x3b260a['_tempV30']['z'];
            _0x1ce7d3 = _0x359143 - _0x207714, _0x203e34 = _0x1181f0 - _0xf23224, _0x5acbe9 = _0x400348 - _0x1d2523;
            var _0x3614a4 = _0x3b260a['_tempV31']['x'], _0x45cbdb = _0x3b260a['_tempV31']['y'], _0x1a2672 = _0x3b260a['_tempV31']['z'];
            _0x3614a4 = _0x2fabb3 - _0x207714, _0x45cbdb = _0x25e4dc - _0xf23224, _0x1a2672 = _0x375762 - _0x1d2523;
            var _0x16d638 = _0x3b260a['_tempV32']['x'], _0x46728a = _0x3b260a['_tempV32']['y'], _0x1a35ee = _0x3b260a['_tempV32']['z'], _0x54380e = _0x1ce7d3 * (_0x16d638 = _0x51bfc7 * _0x1a2672 - _0x5e9a06 * _0x45cbdb) + _0x203e34 * (_0x46728a = _0x5e9a06 * _0x3614a4 - _0x1c7088 * _0x1a2672) + _0x5acbe9 * (_0x1a35ee = _0x1c7088 * _0x45cbdb - _0x51bfc7 * _0x3614a4);
            if (_0x40af95['isZero'](_0x54380e))
                return !0x1;
            var _0x5d8e09 = 0x1 / _0x54380e, _0x5ae7ae = _0x3b260a['_tempV33']['x'], _0x14b9f4 = _0x3b260a['_tempV33']['y'], _0x264b59 = _0x3b260a['_tempV33']['z'], _0x2f2f8c = (_0x5ae7ae = _0x51a1b7 - _0x207714) * _0x16d638 + (_0x14b9f4 = _0x1b49c7 - _0xf23224) * _0x46728a + (_0x264b59 = _0x36f4c8 - _0x1d2523) * _0x1a35ee;
            if ((_0x2f2f8c *= _0x5d8e09) < 0x0 || _0x2f2f8c > 0x1)
                return !0x1;
            var _0x3f1d3e = _0x3b260a['_tempV34']['x'], _0x533ddc = _0x3b260a['_tempV34']['y'], _0x289883 = _0x3b260a['_tempV34']['z'], _0x20b283 = _0x1c7088 * (_0x3f1d3e = _0x14b9f4 * _0x5acbe9 - _0x264b59 * _0x203e34) + _0x51bfc7 * (_0x533ddc = _0x264b59 * _0x1ce7d3 - _0x5ae7ae * _0x5acbe9) + _0x5e9a06 * (_0x289883 = _0x5ae7ae * _0x203e34 - _0x14b9f4 * _0x1ce7d3);
            if ((_0x20b283 *= _0x5d8e09) < 0x0 || _0x2f2f8c + _0x20b283 > 0x1)
                return !0x1;
            var _0x451a09 = _0x3614a4 * _0x3f1d3e + _0x45cbdb * _0x533ddc + _0x1a2672 * _0x289883;
            return !((_0x451a09 *= _0x5d8e09) < 0x0);
        }
        static ['intersects' + 'RayAndTria' + 'ngleRP'](_0x3e7d6c, _0x20323f, _0x42b2b9, _0x4a2bd1, _0x1293cf) {
            return _0x3b260a['intersects' + 'RayAndTria' + 'ngleRD'](_0x3e7d6c, _0x20323f, _0x42b2b9, _0x4a2bd1, void 0x0) ? (_0x43b358['scale'](_0x3e7d6c['direction'], void 0x0, _0x3b260a['_tempV30']), _0x43b358['add'](_0x3e7d6c['origin'], _0x3b260a['_tempV30'], _0x1293cf), !0x0) : (_0x1293cf = _0x43b358['_ZERO'], !0x1);
        }
        static ['intersects' + 'RayAndPoin' + 't'](_0x4adc8e, _0x425251) {
            _0x43b358['subtract'](_0x4adc8e['origin'], _0x425251, _0x3b260a['_tempV30']);
            var _0x21e345 = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x4adc8e['direction']), _0x445f58 = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x3b260a['_tempV30']) - _0x40af95['zeroTolera' + 'nce'];
            return !(_0x445f58 > 0x0 && _0x21e345 > 0x0) && !(_0x21e345 * _0x21e345 - _0x445f58 < 0x0);
        }
        static ['intersects' + 'RayAndRay'](_0x3117cb, _0x530b22, _0x1155b1) {
            var _0x45699f = _0x3117cb['origin'], _0x3df149 = _0x45699f['x'], _0x9e4416 = _0x45699f['y'], _0x5bb114 = _0x45699f['z'], _0x2aa6c2 = _0x3117cb['direction'], _0xfd48af = _0x2aa6c2['x'], _0x7b193e = _0x2aa6c2['y'], _0x59fd4a = _0x2aa6c2['z'], _0x124880 = _0x530b22['origin'], _0xe7575c = _0x124880['x'], _0xac39b6 = _0x124880['y'], _0xc9c1c8 = _0x124880['z'], _0x2305a1 = _0x530b22['direction'], _0x48700d = _0x2305a1['x'], _0x490b2e = _0x2305a1['y'], _0x3776a0 = _0x2305a1['z'];
            _0x43b358['cross'](_0x2aa6c2, _0x2305a1, _0x3b260a['_tempV30']);
            var _0x36f80a = _0x3b260a['_tempV30'], _0xdbd24 = _0x43b358['scalarLeng' + 'th'](_0x3b260a['_tempV30']);
            if (_0x40af95['isZero'](_0xdbd24) && _0x40af95['nearEqual'](_0xe7575c, _0x3df149) && _0x40af95['nearEqual'](_0xac39b6, _0x9e4416) && _0x40af95['nearEqual'](_0xc9c1c8, _0x5bb114))
                return !0x0;
            _0xdbd24 *= _0xdbd24;
            var _0x55a61c = _0xe7575c - _0x3df149, _0x100f16 = _0xac39b6 - _0x9e4416, _0x4c014 = _0xc9c1c8 - _0x5bb114, _0x302ae3 = _0x48700d, _0x3adc2d = _0x490b2e, _0x4ed787 = _0x3776a0, _0x2df4f8 = _0x36f80a['x'], _0x226797 = _0x36f80a['y'], _0x595637 = _0x36f80a['z'], _0x9e2a68 = _0x55a61c * _0x3adc2d * _0x595637 + _0x100f16 * _0x4ed787 * _0x2df4f8 + _0x4c014 * _0x302ae3 * _0x226797 - _0x55a61c * _0x4ed787 * _0x226797 - _0x100f16 * _0x302ae3 * _0x595637 - _0x4c014 * _0x3adc2d * _0x2df4f8;
            _0x302ae3 = _0xfd48af, _0x3adc2d = _0x7b193e, _0x4ed787 = _0x59fd4a;
            var _0xd0124f = _0x9e2a68 / _0xdbd24;
            _0x43b358['scale'](_0x2aa6c2, _0xd0124f, _0x3b260a['_tempV30']), _0x43b358['scale'](_0x2305a1, _0xd0124f, _0x3b260a['_tempV31']), _0x43b358['add'](_0x45699f, _0x3b260a['_tempV30'], _0x3b260a['_tempV32']), _0x43b358['add'](_0x124880, _0x3b260a['_tempV31'], _0x3b260a['_tempV33']);
            var _0x5c8c2d = _0x3b260a['_tempV32'], _0x5e000b = _0x3b260a['_tempV33'];
            return !!(_0x40af95['nearEqual'](_0x5e000b['x'], _0x5c8c2d['x']) && _0x40af95['nearEqual'](_0x5e000b['y'], _0x5c8c2d['y']) && _0x40af95['nearEqual'](_0x5e000b['z'], _0x5c8c2d['z']));
        }
        static ['intersects' + 'PlaneAndTr' + 'iangle'](_0x3f444a, _0x5332e7, _0x32ca4f, _0x291216) {
            var _0x4194d2 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](_0x3f444a, _0x5332e7), _0x501e5d = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](_0x3f444a, _0x32ca4f), _0x3f0e0a = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](_0x3f444a, _0x291216);
            return _0x4194d2 == _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] && _0x501e5d == _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] && _0x3f0e0a == _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] : _0x4194d2 == _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] && _0x501e5d == _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] && _0x3f0e0a == _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'RayAndPlan' + 'eRD'](_0x446822, _0x3df0d7) {
            var _0x47db84 = _0x3df0d7['normal'], _0x46f4bd = _0x43b358['dot'](_0x47db84, _0x446822['direction']);
            if (Math['abs'](_0x46f4bd) < _0x40af95['zeroTolera' + 'nce'])
                return -0x1;
            var _0x16b0b1 = _0x43b358['dot'](_0x47db84, _0x446822['origin']), _0x2ef9d9 = (-_0x3df0d7['distance'] - _0x16b0b1) / _0x46f4bd;
            if (_0x2ef9d9 < 0x0) {
                if (_0x2ef9d9 < -_0x40af95['zeroTolera' + 'nce'])
                    return -0x1;
                _0x2ef9d9 = 0x0;
            }
            return _0x2ef9d9;
        }
        static ['intersects' + 'RayAndPlan' + 'eRP'](_0x1173c3, _0x15724c, _0x331343) {
            var _0x3b8917 = _0x3b260a['intersects' + 'RayAndPlan' + 'eRD'](_0x1173c3, _0x15724c);
            if (-0x1 == _0x3b8917)
                return _0x331343['setValue'](0x0, 0x0, 0x0), !0x1;
            var _0x510279 = _0x3b260a['_tempV30'];
            return _0x43b358['scale'](_0x1173c3['direction'], _0x3b8917, _0x510279), _0x43b358['add'](_0x1173c3['origin'], _0x510279, _0x331343), !0x0;
        }
        static ['intersects' + 'RayAndBoxR' + 'D'](_0x4e7216, _0x87b673) {
            var _0x1cdc6b = _0x4e7216['origin'], _0x2cf6f4 = _0x1cdc6b['x'], _0x2643f3 = _0x1cdc6b['y'], _0x5c4c6a = _0x1cdc6b['z'], _0x2e4df2 = _0x4e7216['direction'], _0x4b0e85 = _0x2e4df2['x'], _0x48d32b = _0x2e4df2['y'], _0x428012 = _0x2e4df2['z'], _0x3011fe = _0x87b673['min'], _0x538a84 = _0x3011fe['x'], _0x1b5302 = _0x3011fe['y'], _0x37c03e = _0x3011fe['z'], _0x24e9a0 = _0x87b673['max'], _0x276ab2 = _0x24e9a0['x'], _0x26a433 = _0x24e9a0['y'], _0x5e07c8 = _0x24e9a0['z'], _0x247744 = 0x0, _0x4dafc5 = _0x40af95['MaxValue'];
            if (_0x40af95['isZero'](_0x4b0e85)) {
                if (_0x2cf6f4 < _0x538a84 || _0x2cf6f4 > _0x276ab2)
                    return -0x1;
            } else {
                var _0xfccc7a = 0x1 / _0x4b0e85, _0x242b34 = (_0x538a84 - _0x2cf6f4) * _0xfccc7a, _0x218e62 = (_0x276ab2 - _0x2cf6f4) * _0xfccc7a;
                if (_0x242b34 > _0x218e62) {
                    var _0x26a9d2 = _0x242b34;
                    _0x242b34 = _0x218e62, _0x218e62 = _0x26a9d2;
                }
                if ((_0x247744 = Math['max'](_0x242b34, _0x247744)) > (_0x4dafc5 = Math['min'](_0x218e62, _0x4dafc5)))
                    return -0x1;
            }
            if (_0x40af95['isZero'](_0x48d32b)) {
                if (_0x2643f3 < _0x1b5302 || _0x2643f3 > _0x26a433)
                    return -0x1;
            } else {
                var _0x2058fb = 0x1 / _0x48d32b, _0x3a76b5 = (_0x1b5302 - _0x2643f3) * _0x2058fb, _0x5d3216 = (_0x26a433 - _0x2643f3) * _0x2058fb;
                if (_0x3a76b5 > _0x5d3216) {
                    var _0x7450db = _0x3a76b5;
                    _0x3a76b5 = _0x5d3216, _0x5d3216 = _0x7450db;
                }
                if ((_0x247744 = Math['max'](_0x3a76b5, _0x247744)) > (_0x4dafc5 = Math['min'](_0x5d3216, _0x4dafc5)))
                    return -0x1;
            }
            if (_0x40af95['isZero'](_0x428012)) {
                if (_0x5c4c6a < _0x37c03e || _0x5c4c6a > _0x5e07c8)
                    return -0x1;
            } else {
                var _0x28713b = 0x1 / _0x428012, _0x309d66 = (_0x37c03e - _0x5c4c6a) * _0x28713b, _0x2a4862 = (_0x5e07c8 - _0x5c4c6a) * _0x28713b;
                if (_0x309d66 > _0x2a4862) {
                    var _0x7f6aca = _0x309d66;
                    _0x309d66 = _0x2a4862, _0x2a4862 = _0x7f6aca;
                }
                if ((_0x247744 = Math['max'](_0x309d66, _0x247744)) > (_0x4dafc5 = Math['min'](_0x2a4862, _0x4dafc5)))
                    return -0x1;
            }
            return _0x247744;
        }
        static ['intersects' + 'RayAndBoxR' + 'P'](_0x5239a8, _0x17cced, _0xeeec35) {
            var _0x176e2a = _0x3b260a['intersects' + 'RayAndBoxR' + 'D'](_0x5239a8, _0x17cced);
            return -0x1 === _0x176e2a ? (_0x43b358['_ZERO']['cloneTo'](_0xeeec35), _0x176e2a) : (_0x43b358['scale'](_0x5239a8['direction'], _0x176e2a, _0x3b260a['_tempV30']), _0x43b358['add'](_0x5239a8['origin'], _0x3b260a['_tempV30'], _0x3b260a['_tempV31']), _0x3b260a['_tempV31']['cloneTo'](_0xeeec35), _0x176e2a);
        }
        static ['intersects' + 'RayAndSphe' + 'reRD'](_0xe888f2, _0x12f38e) {
            var _0x350e66 = _0x12f38e['radius'];
            _0x43b358['subtract'](_0xe888f2['origin'], _0x12f38e['center'], _0x3b260a['_tempV30']);
            var _0x6f1609 = _0x43b358['dot'](_0x3b260a['_tempV30'], _0xe888f2['direction']), _0x37289e = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x3b260a['_tempV30']) - _0x350e66 * _0x350e66;
            if (_0x37289e > 0x0 && _0x6f1609 > 0x0)
                return -0x1;
            var _0x5c71b2 = _0x6f1609 * _0x6f1609 - _0x37289e;
            if (_0x5c71b2 < 0x0)
                return -0x1;
            var _0x1a6e76 = -_0x6f1609 - Math['sqrt'](_0x5c71b2);
            return _0x1a6e76 < 0x0 && (_0x1a6e76 = 0x0), _0x1a6e76;
        }
        static ['intersects' + 'RayAndSphe' + 'reRP'](_0x4142c8, _0x31c46d, _0x5b5b41) {
            var _0x1683f2 = _0x3b260a['intersects' + 'RayAndSphe' + 'reRD'](_0x4142c8, _0x31c46d);
            return -0x1 === _0x1683f2 ? (_0x43b358['_ZERO']['cloneTo'](_0x5b5b41), _0x1683f2) : (_0x43b358['scale'](_0x4142c8['direction'], _0x1683f2, _0x3b260a['_tempV30']), _0x43b358['add'](_0x4142c8['origin'], _0x3b260a['_tempV30'], _0x3b260a['_tempV31']), _0x3b260a['_tempV31']['cloneTo'](_0x5b5b41), _0x1683f2);
        }
        static ['intersects' + 'SphereAndT' + 'riangle'](_0x1359b4, _0x52ff48, _0x4baf11, _0x26892b) {
            var _0x4dfc90 = _0x1359b4['center'], _0x8b7cad = _0x1359b4['radius'];
            return _0x3b260a['closestPoi' + 'ntPointTri' + 'angle'](_0x4dfc90, _0x52ff48, _0x4baf11, _0x26892b, _0x3b260a['_tempV30']), _0x43b358['subtract'](_0x3b260a['_tempV30'], _0x4dfc90, _0x3b260a['_tempV31']), _0x43b358['dot'](_0x3b260a['_tempV31'], _0x3b260a['_tempV31']) <= _0x8b7cad * _0x8b7cad;
        }
        static ['intersects' + 'PlaneAndPo' + 'int'](_0x5562b1, _0x33ed3b) {
            var _0x597836 = _0x43b358['dot'](_0x5562b1['normal'], _0x33ed3b) + _0x5562b1['distance'];
            return _0x597836 > 0x0 ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] : _0x597836 < 0x0 ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'PlaneAndPl' + 'ane'](_0x3a03ae, _0x453cfd) {
            _0x43b358['cross'](_0x3a03ae['normal'], _0x453cfd['normal'], _0x3b260a['_tempV30']);
            var _0x519b44 = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x3b260a['_tempV30']);
            return !_0x40af95['isZero'](_0x519b44);
        }
        static ['intersects' + 'PlaneAndPl' + 'aneRL'](_0x3ecfca, _0x39587e, _0x51ca52) {
            var _0xaed991 = _0x3ecfca['normal'], _0x4ca088 = _0x39587e['normal'];
            _0x43b358['cross'](_0xaed991, _0x4ca088, _0x3b260a['_tempV34']);
            var _0x288b76 = _0x43b358['dot'](_0x3b260a['_tempV34'], _0x3b260a['_tempV34']);
            return !_0x40af95['isZero'](_0x288b76) && (_0x43b358['scale'](_0x4ca088, _0x3ecfca['distance'], _0x3b260a['_tempV30']), _0x43b358['scale'](_0xaed991, _0x39587e['distance'], _0x3b260a['_tempV31']), _0x43b358['subtract'](_0x3b260a['_tempV30'], _0x3b260a['_tempV31'], _0x3b260a['_tempV32']), _0x43b358['cross'](_0x3b260a['_tempV32'], _0x3b260a['_tempV34'], _0x3b260a['_tempV33']), _0x43b358['normalize'](_0x3b260a['_tempV34'], _0x3b260a['_tempV34']), !0x0);
        }
        static ['intersects' + 'PlaneAndBo' + 'x'](_0x566f9f, _0x1d1df4) {
            var _0x1a34cd = _0x566f9f['distance'], _0x5406d9 = _0x566f9f['normal'], _0x2d2ffc = _0x5406d9['x'], _0x5debd3 = _0x5406d9['y'], _0x2bea1a = _0x5406d9['z'], _0xbafe0 = _0x1d1df4['min'], _0x553ce3 = _0xbafe0['x'], _0x4b6767 = _0xbafe0['y'], _0x57446a = _0xbafe0['z'], _0x2f35fb = _0x1d1df4['max'], _0x56099f = _0x2f35fb['x'], _0x177845 = _0x2f35fb['y'], _0x9927f0 = _0x2f35fb['z'];
            _0x3b260a['_tempV30']['x'] = _0x2d2ffc > 0x0 ? _0x553ce3 : _0x56099f, _0x3b260a['_tempV30']['y'] = _0x5debd3 > 0x0 ? _0x4b6767 : _0x177845, _0x3b260a['_tempV30']['z'] = _0x2bea1a > 0x0 ? _0x57446a : _0x9927f0, _0x3b260a['_tempV31']['x'] = _0x2d2ffc > 0x0 ? _0x56099f : _0x553ce3, _0x3b260a['_tempV31']['y'] = _0x5debd3 > 0x0 ? _0x177845 : _0x4b6767, _0x3b260a['_tempV31']['z'] = _0x2bea1a > 0x0 ? _0x9927f0 : _0x57446a;
            var _0x14fd8d = _0x43b358['dot'](_0x5406d9, _0x3b260a['_tempV30']);
            return _0x14fd8d + _0x1a34cd > 0x0 ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] : (_0x14fd8d = _0x43b358['dot'](_0x5406d9, _0x3b260a['_tempV31'])) + _0x1a34cd < 0x0 ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'PlaneAndSp' + 'here'](_0x15900b, _0x984c51) {
            var _0x300050 = _0x984c51['radius'], _0x46f99a = _0x43b358['dot'](_0x15900b['normal'], _0x984c51['center']) + _0x15900b['distance'];
            return _0x46f99a > _0x300050 ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'] : _0x46f99a < -_0x300050 ? _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'BoxAndBox'](_0x50875c, _0x49b8c4) {
            var _0x4bb30c = _0x50875c['min'], _0x189ed1 = _0x50875c['max'], _0x502098 = _0x49b8c4['min'], _0x53e0c6 = _0x49b8c4['max'];
            return !(_0x4bb30c['x'] > _0x53e0c6['x'] || _0x502098['x'] > _0x189ed1['x']) && (!(_0x4bb30c['y'] > _0x53e0c6['y'] || _0x502098['y'] > _0x189ed1['y']) && !(_0x4bb30c['z'] > _0x53e0c6['z'] || _0x502098['z'] > _0x189ed1['z']));
        }
        static ['intersects' + 'BoxAndSphe' + 're'](_0x5bb37b, _0x34b29d) {
            var _0xa05d24 = _0x34b29d['center'], _0x591621 = _0x34b29d['radius'], _0x3d69c8 = _0x3b260a['_tempV30'];
            return _0x43b358['Clamp'](_0xa05d24, _0x5bb37b['min'], _0x5bb37b['max'], _0x3d69c8), _0x43b358['distanceSq' + 'uared'](_0xa05d24, _0x3d69c8) <= _0x591621 * _0x591621;
        }
        static ['intersects' + 'SphereAndS' + 'phere'](_0x5ad914, _0x5921b7) {
            var _0x4ef602 = _0x5ad914['radius'] + _0x5921b7['radius'];
            return _0x43b358['distanceSq' + 'uared'](_0x5ad914['center'], _0x5921b7['center']) <= _0x4ef602 * _0x4ef602;
        }
        static ['boxContain' + 'sPoint'](_0x3eb001, _0x3f25b3) {
            var _0x1dc205 = _0x3eb001['min'], _0x52cf62 = _0x3eb001['max'];
            return _0x1dc205['x'] <= _0x3f25b3['x'] && _0x52cf62['x'] >= _0x3f25b3['x'] && _0x1dc205['y'] <= _0x3f25b3['y'] && _0x52cf62['y'] >= _0x3f25b3['y'] && _0x1dc205['z'] <= _0x3f25b3['z'] && _0x52cf62['z'] >= _0x3f25b3['z'] ? _0x1d746f['Contains'] : _0x1d746f['Disjoint'];
        }
        static ['boxContain' + 'sBox'](_0x3ff028, _0xe42553) {
            var _0x32c30e = _0x3ff028['min'], _0x1d1a19 = _0x32c30e['x'], _0x5d8708 = _0x32c30e['y'], _0x3b1f4b = _0x32c30e['z'], _0x747e26 = _0x3ff028['max'], _0x5bc108 = _0x747e26['x'], _0x110ef0 = _0x747e26['y'], _0x44612f = _0x747e26['z'], _0x3932ee = _0xe42553['min'], _0x3b0f3f = _0x3932ee['x'], _0x43152b = _0x3932ee['y'], _0x262d55 = _0x3932ee['z'], _0x116423 = _0xe42553['max'], _0x910c53 = _0x116423['x'], _0xb0e303 = _0x116423['y'], _0x5198f9 = _0x116423['z'];
            return _0x5bc108 < _0x3b0f3f || _0x1d1a19 > _0x910c53 ? _0x1d746f['Disjoint'] : _0x110ef0 < _0x43152b || _0x5d8708 > _0xb0e303 ? _0x1d746f['Disjoint'] : _0x44612f < _0x262d55 || _0x3b1f4b > _0x5198f9 ? _0x1d746f['Disjoint'] : _0x1d1a19 <= _0x3b0f3f && _0x910c53 <= _0x5bc108 && _0x5d8708 <= _0x43152b && _0xb0e303 <= _0x110ef0 && _0x3b1f4b <= _0x262d55 && _0x5198f9 <= _0x44612f ? _0x1d746f['Contains'] : _0x1d746f['Intersects'];
        }
        static ['boxContain' + 'sSphere'](_0x5423ec, _0x3f9206) {
            var _0x205bcc = _0x5423ec['min'], _0x2c1c5f = _0x205bcc['x'], _0x44edec = _0x205bcc['y'], _0x1cd880 = _0x205bcc['z'], _0xc5876d = _0x5423ec['max'], _0x336a1a = _0xc5876d['x'], _0x434873 = _0xc5876d['y'], _0xcb7ea3 = _0xc5876d['z'], _0x5d833f = _0x3f9206['center'], _0x1cc408 = _0x5d833f['x'], _0x3a9040 = _0x5d833f['y'], _0x3f04b = _0x5d833f['z'], _0x5f0768 = _0x3f9206['radius'];
            return _0x43b358['Clamp'](_0x5d833f, _0x205bcc, _0xc5876d, _0x3b260a['_tempV30']), _0x43b358['distanceSq' + 'uared'](_0x5d833f, _0x3b260a['_tempV30']) > _0x5f0768 * _0x5f0768 ? _0x1d746f['Disjoint'] : _0x2c1c5f + _0x5f0768 <= _0x1cc408 && _0x1cc408 <= _0x336a1a - _0x5f0768 && _0x336a1a - _0x2c1c5f > _0x5f0768 && _0x44edec + _0x5f0768 <= _0x3a9040 && _0x3a9040 <= _0x434873 - _0x5f0768 && _0x434873 - _0x44edec > _0x5f0768 && _0x1cd880 + _0x5f0768 <= _0x3f04b && _0x3f04b <= _0xcb7ea3 - _0x5f0768 && _0xcb7ea3 - _0x1cd880 > _0x5f0768 ? _0x1d746f['Contains'] : _0x1d746f['Intersects'];
        }
        static ['sphereCont' + 'ainsPoint'](_0x43e664, _0x17c0d2) {
            return _0x43b358['distanceSq' + 'uared'](_0x17c0d2, _0x43e664['center']) <= _0x43e664['radius'] * _0x43e664['radius'] ? _0x1d746f['Contains'] : _0x1d746f['Disjoint'];
        }
        static ['sphereCont' + 'ainsTriang' + 'le'](_0x2f5664, _0xc4ab14, _0x22be9e, _0x53e2bb) {
            var _0x4e0710 = _0x3b260a['sphereCont' + 'ainsPoint'](_0x2f5664, _0xc4ab14), _0x2751aa = _0x3b260a['sphereCont' + 'ainsPoint'](_0x2f5664, _0x22be9e), _0x169869 = _0x3b260a['sphereCont' + 'ainsPoint'](_0x2f5664, _0x53e2bb);
            return _0x4e0710 == _0x1d746f['Contains'] && _0x2751aa == _0x1d746f['Contains'] && _0x169869 == _0x1d746f['Contains'] ? _0x1d746f['Contains'] : _0x3b260a['intersects' + 'SphereAndT' + 'riangle'](_0x2f5664, _0xc4ab14, _0x22be9e, _0x53e2bb) ? _0x1d746f['Intersects'] : _0x1d746f['Disjoint'];
        }
        static ['sphereCont' + 'ainsBox'](_0x566827, _0x5a510b) {
            var _0x483096 = _0x566827['center'], _0x25131 = _0x483096['x'], _0x1d5ec7 = _0x483096['y'], _0x7f5972 = _0x483096['z'], _0x3ebef4 = _0x566827['radius'], _0x4bdc08 = _0x5a510b['min'], _0x6e3e99 = _0x4bdc08['x'], _0x3f3785 = _0x4bdc08['y'], _0x20dedf = _0x4bdc08['z'], _0x5a8acc = _0x5a510b['max'], _0x18e1f8 = _0x5a8acc['x'], _0x443d97 = _0x5a8acc['y'], _0x18a871 = _0x5a8acc['z'], _0x49e407 = _0x3b260a['_tempV30'];
            _0x49e407['x'], _0x49e407['y'], _0x49e407['z'];
            if (!_0x3b260a['intersects' + 'BoxAndSphe' + 're'](_0x5a510b, _0x566827))
                return _0x1d746f['Disjoint'];
            var _0xed4088 = _0x3ebef4 * _0x3ebef4;
            return _0x25131 - _0x6e3e99, _0x1d5ec7 - _0x443d97, _0x7f5972 - _0x18a871, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x18e1f8, _0x1d5ec7 - _0x443d97, _0x7f5972 - _0x18a871, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x18e1f8, _0x1d5ec7 - _0x3f3785, _0x7f5972 - _0x18a871, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x6e3e99, _0x1d5ec7 - _0x3f3785, _0x7f5972 - _0x18a871, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x6e3e99, _0x1d5ec7 - _0x443d97, _0x7f5972 - _0x20dedf, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x18e1f8, _0x1d5ec7 - _0x443d97, _0x7f5972 - _0x20dedf, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x18e1f8, _0x1d5ec7 - _0x3f3785, _0x7f5972 - _0x20dedf, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : (_0x25131 - _0x6e3e99, _0x1d5ec7 - _0x3f3785, _0x7f5972 - _0x20dedf, _0x43b358['scalarLeng' + 'thSquared'](_0x3b260a['_tempV30']) > _0xed4088 ? _0x1d746f['Intersects'] : _0x1d746f['Contains'])))))));
        }
        static ['sphereCont' + 'ainsSphere'](_0x59c811, _0x593232) {
            var _0x321320 = _0x59c811['radius'], _0x3e2d5d = _0x593232['radius'], _0x36c20e = _0x43b358['distance'](_0x59c811['center'], _0x593232['center']);
            return _0x321320 + _0x3e2d5d < _0x36c20e ? _0x1d746f['Disjoint'] : _0x321320 - _0x3e2d5d < _0x36c20e ? _0x1d746f['Intersects'] : _0x1d746f['Contains'];
        }
        static ['closestPoi' + 'ntPointTri' + 'angle'](_0x2fd2a6, _0x3e81a5, _0x5aef64, _0x332f94, _0x4d2594) {
            _0x43b358['subtract'](_0x5aef64, _0x3e81a5, _0x3b260a['_tempV30']), _0x43b358['subtract'](_0x332f94, _0x3e81a5, _0x3b260a['_tempV31']), _0x43b358['subtract'](_0x2fd2a6, _0x3e81a5, _0x3b260a['_tempV32']), _0x43b358['subtract'](_0x2fd2a6, _0x5aef64, _0x3b260a['_tempV33']), _0x43b358['subtract'](_0x2fd2a6, _0x332f94, _0x3b260a['_tempV34']);
            var _0x328f7e = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x3b260a['_tempV32']), _0x14ab50 = _0x43b358['dot'](_0x3b260a['_tempV31'], _0x3b260a['_tempV32']), _0x954ecc = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x3b260a['_tempV33']), _0x1a7ec0 = _0x43b358['dot'](_0x3b260a['_tempV31'], _0x3b260a['_tempV33']), _0x2721e8 = _0x43b358['dot'](_0x3b260a['_tempV30'], _0x3b260a['_tempV34']), _0x18f3b0 = _0x43b358['dot'](_0x3b260a['_tempV31'], _0x3b260a['_tempV34']);
            if (_0x328f7e <= 0x0 && _0x14ab50 <= 0x0)
                _0x3e81a5['cloneTo'](_0x4d2594);
            else {
                if (_0x954ecc >= 0x0 && _0x1a7ec0 <= _0x954ecc)
                    _0x5aef64['cloneTo'](_0x4d2594);
                else {
                    var _0x4f44a5 = _0x328f7e * _0x1a7ec0 - _0x954ecc * _0x14ab50;
                    if (_0x4f44a5 <= 0x0 && _0x328f7e >= 0x0 && _0x954ecc <= 0x0) {
                        var _0x40188b = _0x328f7e / (_0x328f7e - _0x954ecc);
                        return _0x43b358['scale'](_0x3b260a['_tempV30'], _0x40188b, _0x4d2594), void _0x43b358['add'](_0x3e81a5, _0x4d2594, _0x4d2594);
                    }
                    if (_0x18f3b0 >= 0x0 && _0x2721e8 <= _0x18f3b0)
                        _0x332f94['cloneTo'](_0x4d2594);
                    else {
                        var _0x47c6a9 = _0x2721e8 * _0x14ab50 - _0x328f7e * _0x18f3b0;
                        if (_0x47c6a9 <= 0x0 && _0x14ab50 >= 0x0 && _0x18f3b0 <= 0x0) {
                            var _0x13112a = _0x14ab50 / (_0x14ab50 - _0x18f3b0);
                            return _0x43b358['scale'](_0x3b260a['_tempV31'], _0x13112a, _0x4d2594), void _0x43b358['add'](_0x3e81a5, _0x4d2594, _0x4d2594);
                        }
                        var _0x98addb = _0x954ecc * _0x18f3b0 - _0x2721e8 * _0x1a7ec0;
                        if (_0x98addb <= 0x0 && _0x1a7ec0 - _0x954ecc >= 0x0 && _0x2721e8 - _0x18f3b0 >= 0x0) {
                            var _0x4f3921 = (_0x1a7ec0 - _0x954ecc) / (_0x1a7ec0 - _0x954ecc + (_0x2721e8 - _0x18f3b0));
                            return _0x43b358['subtract'](_0x332f94, _0x5aef64, _0x4d2594), _0x43b358['scale'](_0x4d2594, _0x4f3921, _0x4d2594), void _0x43b358['add'](_0x5aef64, _0x4d2594, _0x4d2594);
                        }
                        var _0x505f05 = 0x1 / (_0x98addb + _0x47c6a9 + _0x4f44a5), _0x17ca04 = _0x47c6a9 * _0x505f05, _0x5096e0 = _0x4f44a5 * _0x505f05;
                        _0x43b358['scale'](_0x3b260a['_tempV30'], _0x17ca04, _0x3b260a['_tempV35']), _0x43b358['scale'](_0x3b260a['_tempV31'], _0x5096e0, _0x3b260a['_tempV36']), _0x43b358['add'](_0x3b260a['_tempV35'], _0x3b260a['_tempV36'], _0x4d2594), _0x43b358['add'](_0x3e81a5, _0x4d2594, _0x4d2594);
                    }
                }
            }
        }
        static ['closestPoi' + 'ntPlanePoi' + 'nt'](_0x41db15, _0x2c3939, _0x5d6394) {
            var _0x5886dd = _0x41db15['normal'], _0x2a7b99 = _0x43b358['dot'](_0x5886dd, _0x2c3939) - _0x41db15['distance'];
            _0x43b358['scale'](_0x5886dd, _0x2a7b99, _0x3b260a['_tempV30']), _0x43b358['subtract'](_0x2c3939, _0x3b260a['_tempV30'], _0x5d6394);
        }
        static ['closestPoi' + 'ntBoxPoint'](_0x39edef, _0x2d8497, _0x43171f) {
            _0x43b358['max'](_0x2d8497, _0x39edef['min'], _0x3b260a['_tempV30']), _0x43b358['min'](_0x3b260a['_tempV30'], _0x39edef['max'], _0x43171f);
        }
        static ['closestPoi' + 'ntSpherePo' + 'int'](_0x3ee711, _0xb527b0, _0xc6d093) {
            var _0x32788d = _0x3ee711['center'];
            _0x43b358['subtract'](_0xb527b0, _0x32788d, _0xc6d093), _0x43b358['normalize'](_0xc6d093, _0xc6d093), _0x43b358['scale'](_0xc6d093, _0x3ee711['radius'], _0xc6d093), _0x43b358['add'](_0xc6d093, _0x32788d, _0xc6d093);
        }
        static ['closestPoi' + 'ntSphereSp' + 'here'](_0x1179e2, _0x2d5f54, _0x5e2996) {
            var _0x426e06 = _0x1179e2['center'];
            _0x43b358['subtract'](_0x2d5f54['center'], _0x426e06, _0x5e2996), _0x43b358['normalize'](_0x5e2996, _0x5e2996), _0x43b358['scale'](_0x5e2996, _0x1179e2['radius'], _0x5e2996), _0x43b358['add'](_0x5e2996, _0x426e06, _0x5e2996);
        }
    }
    _0x3b260a['_tempV30'] = new _0x43b358(), _0x3b260a['_tempV31'] = new _0x43b358(), _0x3b260a['_tempV32'] = new _0x43b358(), _0x3b260a['_tempV33'] = new _0x43b358(), _0x3b260a['_tempV34'] = new _0x43b358(), _0x3b260a['_tempV35'] = new _0x43b358(), _0x3b260a['_tempV36'] = new _0x43b358(), (_0xa487ce = _0xc55b22['FrustumCor' + 'ner'] || (_0xc55b22['FrustumCor' + 'ner'] = {}))[_0xa487ce['FarBottomL' + 'eft'] = 0x0] = 'FarBottomL' + 'eft', _0xa487ce[_0xa487ce['FarTopLeft'] = 0x1] = 'FarTopLeft', _0xa487ce[_0xa487ce['FarTopRigh' + 't'] = 0x2] = 'FarTopRigh' + 't', _0xa487ce[_0xa487ce['FarBottomR' + 'ight'] = 0x3] = 'FarBottomR' + 'ight', _0xa487ce[_0xa487ce['nearBottom' + 'Left'] = 0x4] = 'nearBottom' + 'Left', _0xa487ce[_0xa487ce['nearTopLef' + 't'] = 0x5] = 'nearTopLef' + 't', _0xa487ce[_0xa487ce['nearTopRig' + 'ht'] = 0x6] = 'nearTopRig' + 'ht', _0xa487ce[_0xa487ce['nearBottom' + 'Right'] = 0x7] = 'nearBottom' + 'Right', _0xa487ce[_0xa487ce['unknown'] = 0x8] = 'unknown';
    class _0x183104 {
        constructor(_0x362333) {
            this['_matrix'] = _0x362333, this['_near'] = new _0x458084(new _0x43b358()), this['_far'] = new _0x458084(new _0x43b358()), this['_left'] = new _0x458084(new _0x43b358()), this['_right'] = new _0x458084(new _0x43b358()), this['_top'] = new _0x458084(new _0x43b358()), this['_bottom'] = new _0x458084(new _0x43b358()), _0x183104['getPlanesF' + 'romMatrix'](this['_matrix'], this['_near'], this['_far'], this['_left'], this['_right'], this['_top'], this['_bottom']);
        }
        static ['getPlanesF' + 'romMatrix'](_0x1f76a9, _0x18c380, _0x4abb0f, _0x2acd05, _0x261b41, _0x29605c, _0x63e365) {
            var _0x1856e0 = _0x1f76a9['elements'], _0x4e75de = _0x1856e0[0x0], _0x5ceba3 = _0x1856e0[0x1], _0x31c8a5 = _0x1856e0[0x2], _0x391748 = _0x1856e0[0x3], _0x190b9f = _0x1856e0[0x4], _0x5bbeba = _0x1856e0[0x5], _0x196282 = _0x1856e0[0x6], _0x161f8c = _0x1856e0[0x7], _0x14c2f2 = _0x1856e0[0x8], _0x123939 = _0x1856e0[0x9], _0x42e405 = _0x1856e0[0xa], _0x2df6c6 = _0x1856e0[0xb], _0x8aea4f = _0x1856e0[0xc], _0x586a56 = _0x1856e0[0xd], _0x36188b = _0x1856e0[0xe], _0xb6eb15 = _0x1856e0[0xf], _0x24a3c3 = _0x18c380['normal'];
            _0x24a3c3['x'] = _0x31c8a5, _0x24a3c3['y'] = _0x196282, _0x24a3c3['z'] = _0x42e405, _0x18c380['distance'] = _0x36188b, _0x18c380['normalize']();
            var _0x217063 = _0x4abb0f['normal'];
            _0x217063['x'] = _0x391748 - _0x31c8a5, _0x217063['y'] = _0x161f8c - _0x196282, _0x217063['z'] = _0x2df6c6 - _0x42e405, _0x4abb0f['distance'] = _0xb6eb15 - _0x36188b, _0x4abb0f['normalize']();
            var _0x493b68 = _0x2acd05['normal'];
            _0x493b68['x'] = _0x391748 + _0x4e75de, _0x493b68['y'] = _0x161f8c + _0x190b9f, _0x493b68['z'] = _0x2df6c6 + _0x14c2f2, _0x2acd05['distance'] = _0xb6eb15 + _0x8aea4f, _0x2acd05['normalize']();
            var _0x145b1c = _0x261b41['normal'];
            _0x145b1c['x'] = _0x391748 - _0x4e75de, _0x145b1c['y'] = _0x161f8c - _0x190b9f, _0x145b1c['z'] = _0x2df6c6 - _0x14c2f2, _0x261b41['distance'] = _0xb6eb15 - _0x8aea4f, _0x261b41['normalize']();
            var _0x9c6b93 = _0x29605c['normal'];
            _0x9c6b93['x'] = _0x391748 - _0x5ceba3, _0x9c6b93['y'] = _0x161f8c - _0x5bbeba, _0x9c6b93['z'] = _0x2df6c6 - _0x123939, _0x29605c['distance'] = _0xb6eb15 - _0x586a56, _0x29605c['normalize']();
            var _0x2695b6 = _0x63e365['normal'];
            _0x2695b6['x'] = _0x391748 + _0x5ceba3, _0x2695b6['y'] = _0x161f8c + _0x5bbeba, _0x2695b6['z'] = _0x2df6c6 + _0x123939, _0x63e365['distance'] = _0xb6eb15 + _0x586a56, _0x63e365['normalize']();
        }
        get ['matrix']() {
            return this['_matrix'];
        }
        set ['matrix'](_0x330cc6) {
            _0x330cc6['cloneTo'](this['_matrix']), _0x183104['getPlanesF' + 'romMatrix'](this['_matrix'], this['_near'], this['_far'], this['_left'], this['_right'], this['_top'], this['_bottom']);
        }
        get ['near']() {
            return this['_near'];
        }
        get ['far']() {
            return this['_far'];
        }
        get ['left']() {
            return this['_left'];
        }
        get ['right']() {
            return this['_right'];
        }
        get ['top']() {
            return this['_top'];
        }
        get ['bottom']() {
            return this['_bottom'];
        }
        ['equalsBoun' + 'dFrustum'](_0xceb9cc) {
            return this['_matrix']['equalsOthe' + 'rMatrix'](_0xceb9cc['matrix']);
        }
        ['equalsObj'](_0x41afc5) {
            if (_0x41afc5 instanceof _0x183104) {
                var _0x7f64a1 = _0x41afc5;
                return this['equalsBoun' + 'dFrustum'](_0x7f64a1);
            }
            return !0x1;
        }
        ['getPlane'](_0x3b75ae) {
            switch (_0x3b75ae) {
            case 0x0:
                return this['_near'];
            case 0x1:
                return this['_far'];
            case 0x2:
                return this['_left'];
            case 0x3:
                return this['_right'];
            case 0x4:
                return this['_top'];
            case 0x5:
                return this['_bottom'];
            default:
                return null;
            }
        }
        static ['get3PlaneI' + 'nterPoint'](_0x57723e, _0x4146dc, _0x13b4a7, _0x311390) {
            var _0x58bda0 = _0x57723e['normal'], _0x5ec002 = _0x4146dc['normal'], _0x25a8de = _0x13b4a7['normal'];
            _0x43b358['cross'](_0x5ec002, _0x25a8de, _0x183104['_tempV30']), _0x43b358['cross'](_0x25a8de, _0x58bda0, _0x183104['_tempV31']), _0x43b358['cross'](_0x58bda0, _0x5ec002, _0x183104['_tempV32']);
            var _0x156433 = _0x43b358['dot'](_0x58bda0, _0x183104['_tempV30']), _0x1eb056 = _0x43b358['dot'](_0x5ec002, _0x183104['_tempV31']), _0x3264fe = _0x43b358['dot'](_0x25a8de, _0x183104['_tempV32']);
            _0x43b358['scale'](_0x183104['_tempV30'], -_0x57723e['distance'] / _0x156433, _0x183104['_tempV33']), _0x43b358['scale'](_0x183104['_tempV31'], -_0x4146dc['distance'] / _0x1eb056, _0x183104['_tempV34']), _0x43b358['scale'](_0x183104['_tempV32'], -_0x13b4a7['distance'] / _0x3264fe, _0x183104['_tempV35']), _0x43b358['add'](_0x183104['_tempV33'], _0x183104['_tempV34'], _0x183104['_tempV36']), _0x43b358['add'](_0x183104['_tempV35'], _0x183104['_tempV36'], _0x311390);
        }
        ['getCorners'](_0x5b7977) {
            _0x183104['get3PlaneI' + 'nterPoint'](this['_near'], this['_bottom'], this['_right'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_near'], this['_top'], this['_right'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_near'], this['_top'], this['_left'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_near'], this['_bottom'], this['_left'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_far'], this['_bottom'], this['_right'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_far'], this['_top'], this['_right'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_far'], this['_top'], this['_left'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['FarTopLeft']]), _0x183104['get3PlaneI' + 'nterPoint'](this['_far'], this['_bottom'], this['_left'], _0x5b7977[_0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft']]);
        }
        ['containsPo' + 'int'](_0x4bb7ef) {
            for (var _0xbedc91 = _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x9f6d80 = _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x5a1e41 = 0x0; _0x5a1e41 < 0x6; _0x5a1e41++) {
                switch (_0x5a1e41) {
                case 0x0:
                    _0x9f6d80 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](this['_near'], _0x4bb7ef);
                    break;
                case 0x1:
                    _0x9f6d80 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](this['_far'], _0x4bb7ef);
                    break;
                case 0x2:
                    _0x9f6d80 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](this['_left'], _0x4bb7ef);
                    break;
                case 0x3:
                    _0x9f6d80 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](this['_right'], _0x4bb7ef);
                    break;
                case 0x4:
                    _0x9f6d80 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](this['_top'], _0x4bb7ef);
                    break;
                case 0x5:
                    _0x9f6d80 = _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](this['_bottom'], _0x4bb7ef);
                }
                switch (_0x9f6d80) {
                case _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back']:
                    return _0x1d746f['Disjoint'];
                case _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                    _0xbedc91 = _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
                }
            }
            switch (_0xbedc91) {
            case _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                return _0x1d746f['Intersects'];
            default:
                return _0x1d746f['Contains'];
            }
        }
        ['intersects'](_0x40abff) {
            var _0x107bca = _0x40abff['min'], _0x3a7860 = _0x40abff['max'], _0x271df1 = _0x107bca['x'], _0x49475a = _0x107bca['y'], _0x453895 = _0x107bca['z'], _0x9f4dc6 = _0x3a7860['x'], _0x304410 = _0x3a7860['y'], _0x49314c = _0x3a7860['z'], _0x334c70 = this['_near']['normal'];
            if (this['_near']['distance'] + _0x334c70['x'] * (_0x334c70['x'] < 0x0 ? _0x271df1 : _0x9f4dc6) + _0x334c70['y'] * (_0x334c70['y'] < 0x0 ? _0x49475a : _0x304410) + _0x334c70['z'] * (_0x334c70['z'] < 0x0 ? _0x453895 : _0x49314c) < 0x0)
                return !0x1;
            var _0x579582 = this['_left']['normal'];
            if (this['_left']['distance'] + _0x579582['x'] * (_0x579582['x'] < 0x0 ? _0x271df1 : _0x9f4dc6) + _0x579582['y'] * (_0x579582['y'] < 0x0 ? _0x49475a : _0x304410) + _0x579582['z'] * (_0x579582['z'] < 0x0 ? _0x453895 : _0x49314c) < 0x0)
                return !0x1;
            var _0x7e0f4c = this['_right']['normal'];
            if (this['_right']['distance'] + _0x7e0f4c['x'] * (_0x7e0f4c['x'] < 0x0 ? _0x271df1 : _0x9f4dc6) + _0x7e0f4c['y'] * (_0x7e0f4c['y'] < 0x0 ? _0x49475a : _0x304410) + _0x7e0f4c['z'] * (_0x7e0f4c['z'] < 0x0 ? _0x453895 : _0x49314c) < 0x0)
                return !0x1;
            var _0x4765c5 = this['_bottom']['normal'];
            if (this['_bottom']['distance'] + _0x4765c5['x'] * (_0x4765c5['x'] < 0x0 ? _0x271df1 : _0x9f4dc6) + _0x4765c5['y'] * (_0x4765c5['y'] < 0x0 ? _0x49475a : _0x304410) + _0x4765c5['z'] * (_0x4765c5['z'] < 0x0 ? _0x453895 : _0x49314c) < 0x0)
                return !0x1;
            var _0x1e709d = this['_top']['normal'];
            if (this['_top']['distance'] + _0x1e709d['x'] * (_0x1e709d['x'] < 0x0 ? _0x271df1 : _0x9f4dc6) + _0x1e709d['y'] * (_0x1e709d['y'] < 0x0 ? _0x49475a : _0x304410) + _0x1e709d['z'] * (_0x1e709d['z'] < 0x0 ? _0x453895 : _0x49314c) < 0x0)
                return !0x1;
            var _0x1030bc = this['_far']['normal'];
            return !(this['_far']['distance'] + _0x1030bc['x'] * (_0x1030bc['x'] < 0x0 ? _0x271df1 : _0x9f4dc6) + _0x1030bc['y'] * (_0x1030bc['y'] < 0x0 ? _0x49475a : _0x304410) + _0x1030bc['z'] * (_0x1030bc['z'] < 0x0 ? _0x453895 : _0x49314c) < 0x0);
        }
        ['containsBo' + 'undBox'](_0x787572) {
            for (var _0x3d3542 = _0x183104['_tempV30'], _0x177e5c = _0x183104['_tempV31'], _0x382433 = _0x787572['min'], _0x57e0fb = _0x787572['max'], _0x3a7bae = _0x1d746f['Contains'], _0x113893 = 0x0; _0x113893 < 0x6; _0x113893++) {
                var _0x7e463f = this['getPlane'](_0x113893), _0x1df62f = _0x7e463f['normal'];
                if (_0x1df62f['x'] >= 0x0 ? (_0x3d3542['x'] = _0x57e0fb['x'], _0x177e5c['x'] = _0x382433['x']) : (_0x3d3542['x'] = _0x382433['x'], _0x177e5c['x'] = _0x57e0fb['x']), _0x1df62f['y'] >= 0x0 ? (_0x3d3542['y'] = _0x57e0fb['y'], _0x177e5c['y'] = _0x382433['y']) : (_0x3d3542['y'] = _0x382433['y'], _0x177e5c['y'] = _0x57e0fb['y']), _0x1df62f['z'] >= 0x0 ? (_0x3d3542['z'] = _0x57e0fb['z'], _0x177e5c['z'] = _0x382433['z']) : (_0x3d3542['z'] = _0x382433['z'], _0x177e5c['z'] = _0x57e0fb['z']), _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](_0x7e463f, _0x3d3542) === _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'])
                    return _0x1d746f['Disjoint'];
                _0x3b260a['intersects' + 'PlaneAndPo' + 'int'](_0x7e463f, _0x177e5c) === _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back'] && (_0x3a7bae = _0x1d746f['Intersects']);
            }
            return _0x3a7bae;
        }
        ['containsBo' + 'undSphere'](_0x36dd83) {
            for (var _0x2c0b38 = _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x32f776 = _0x458084['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x5044cb = 0x0; _0x5044cb < 0x6; _0x5044cb++) {
                switch (_0x5044cb) {
                case 0x0:
                    _0x32f776 = _0x3b260a['intersects' + 'PlaneAndSp' + 'here'](this['_near'], _0x36dd83);
                    break;
                case 0x1:
                    _0x32f776 = _0x3b260a['intersects' + 'PlaneAndSp' + 'here'](this['_far'], _0x36dd83);
                    break;
                case 0x2:
                    _0x32f776 = _0x3b260a['intersects' + 'PlaneAndSp' + 'here'](this['_left'], _0x36dd83);
                    break;
                case 0x3:
                    _0x32f776 = _0x3b260a['intersects' + 'PlaneAndSp' + 'here'](this['_right'], _0x36dd83);
                    break;
                case 0x4:
                    _0x32f776 = _0x3b260a['intersects' + 'PlaneAndSp' + 'here'](this['_top'], _0x36dd83);
                    break;
                case 0x5:
                    _0x32f776 = _0x3b260a['intersects' + 'PlaneAndSp' + 'here'](this['_bottom'], _0x36dd83);
                }
                switch (_0x32f776) {
                case _0x458084['PlaneInter' + 'sectionTyp' + 'e_Back']:
                    return _0x1d746f['Disjoint'];
                case _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                    _0x2c0b38 = _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
                }
            }
            switch (_0x2c0b38) {
            case _0x458084['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                return _0x1d746f['Intersects'];
            default:
                return _0x1d746f['Contains'];
            }
        }
    }
    _0x183104['_tempV30'] = new _0x43b358(), _0x183104['_tempV31'] = new _0x43b358(), _0x183104['_tempV32'] = new _0x43b358(), _0x183104['_tempV33'] = new _0x43b358(), _0x183104['_tempV34'] = new _0x43b358(), _0x183104['_tempV35'] = new _0x43b358(), _0x183104['_tempV36'] = new _0x43b358();
    class _0x4c9d87 {
        constructor(_0x368f22, _0x3f88f2, _0x1666ba, _0x489035) {
            this['minDepth'] = 0x0, this['maxDepth'] = 0x1, this['x'] = _0x368f22, this['y'] = _0x3f88f2, this['width'] = _0x1666ba, this['height'] = _0x489035;
        }
        ['project'](_0x57ee4a, _0x5675c3, _0x13378d) {
            _0x43b358['transformV' + '3ToV4'](_0x57ee4a, _0x5675c3, _0x13378d);
            var _0x125f81 = _0x13378d['x'], _0x902692 = _0x13378d['y'], _0xeb2b8a = _0x13378d['z'], _0x2d1460 = _0x13378d['w'];
            0x1 !== _0x2d1460 && (_0x125f81 /= _0x2d1460, _0x902692 /= _0x2d1460, _0xeb2b8a /= _0x2d1460), _0x13378d['x'] = 0.5 * (_0x125f81 + 0x1) * this['width'] + this['x'], _0x13378d['y'] = 0.5 * (0x1 - _0x902692) * this['height'] + this['y'], _0x13378d['z'] = _0xeb2b8a * (this['maxDepth'] - this['minDepth']) + this['minDepth'];
        }
        ['unprojectF' + 'romMat'](_0x29b1e5, _0x1c6678, _0x446897) {
            var _0x352ffb = _0x1c6678['elements'];
            _0x446897['x'] = (_0x29b1e5['x'] - this['x']) / this['width'] * 0x2 - 0x1, _0x446897['y'] = -((_0x29b1e5['y'] - this['y']) / this['height'] * 0x2 - 0x1), _0x446897['z'] = (_0x29b1e5['z'] - this['minDepth']) / (this['maxDepth'] - this['minDepth']);
            var _0x16f281 = _0x446897['x'] * _0x352ffb[0x3] + _0x446897['y'] * _0x352ffb[0x7] + _0x446897['z'] * _0x352ffb[0xb] + _0x352ffb[0xf];
            _0x43b358['transformV' + '3ToV3'](_0x446897, _0x1c6678, _0x446897), 0x1 !== _0x16f281 && (_0x446897['x'] = _0x446897['x'] / _0x16f281, _0x446897['y'] = _0x446897['y'] / _0x16f281, _0x446897['z'] = _0x446897['z'] / _0x16f281);
        }
        ['unprojectF' + 'romWVP'](_0x2f075b, _0x43504e, _0x5e67b2, _0x5b52bc, _0x5c3338) {
            _0x334e9d['multiply'](_0x43504e, _0x5e67b2, _0x4c9d87['_tempMatri' + 'x4x4']), _0x5b52bc && _0x334e9d['multiply'](_0x4c9d87['_tempMatri' + 'x4x4'], _0x5b52bc, _0x4c9d87['_tempMatri' + 'x4x4']), _0x4c9d87['_tempMatri' + 'x4x4']['invert'](_0x4c9d87['_tempMatri' + 'x4x4']), this['unprojectF' + 'romMat'](_0x2f075b, _0x4c9d87['_tempMatri' + 'x4x4'], _0x5c3338);
        }
        ['cloneTo'](_0x4c44c8) {
            _0x4c44c8['x'] = this['x'], _0x4c44c8['y'] = this['y'], _0x4c44c8['width'] = this['width'], _0x4c44c8['height'] = this['height'], _0x4c44c8['minDepth'] = this['minDepth'], _0x4c44c8['maxDepth'] = this['maxDepth'];
        }
    }
    _0x4c9d87['_tempMatri' + 'x4x4'] = new _0x334e9d();
    class _0x514950 {
        constructor() {
        }
        static ['calculateC' + 'ursorRay'](_0x387f32, _0x42ea24, _0x52f957, _0x40f461, _0x4930c1, _0x142a3e) {
            var _0x4fc367 = _0x387f32['x'], _0x41f6f0 = _0x387f32['y'], _0x4de68d = _0x514950['_tempVecto' + 'r30'], _0x3fbdd9 = _0x4de68d;
            _0x3fbdd9['x'] = _0x4fc367, _0x3fbdd9['y'] = _0x41f6f0, _0x3fbdd9['z'] = _0x42ea24['minDepth'];
            var _0x45c30e = _0x514950['_tempVecto' + 'r31'], _0x460eda = _0x45c30e;
            _0x460eda['x'] = _0x4fc367, _0x460eda['y'] = _0x41f6f0, _0x460eda['z'] = _0x42ea24['maxDepth'];
            var _0x8390c7 = _0x142a3e['origin'], _0x55d44d = _0x514950['_tempVecto' + 'r32'];
            _0x42ea24['unprojectF' + 'romWVP'](_0x4de68d, _0x52f957, _0x40f461, _0x4930c1, _0x8390c7), _0x42ea24['unprojectF' + 'romWVP'](_0x45c30e, _0x52f957, _0x40f461, _0x4930c1, _0x55d44d);
            var _0x2c681d = _0x142a3e['direction'];
            _0x2c681d['x'] = _0x55d44d['x'] - _0x8390c7['x'], _0x2c681d['y'] = _0x55d44d['y'] - _0x8390c7['y'], _0x2c681d['z'] = _0x55d44d['z'] - _0x8390c7['z'], _0x43b358['normalize'](_0x142a3e['direction'], _0x142a3e['direction']);
        }
        static ['rayInterse' + 'ctsTriangl' + 'e'](_0x305a0f, _0x4b17c2, _0x4d2ea5, _0x8d621) {
            var _0x3e9640 = _0x514950['_tempVecto' + 'r30'], _0x54b5fc = _0x514950['_tempVecto' + 'r31'];
            _0x43b358['subtract'](_0x4d2ea5, _0x4b17c2, _0x3e9640), _0x43b358['subtract'](_0x8d621, _0x4b17c2, _0x54b5fc);
            var _0x3a79d6, _0x399ece = _0x514950['_tempVecto' + 'r32'];
            if (_0x43b358['cross'](_0x305a0f['direction'], _0x54b5fc, _0x399ece), (_0x3a79d6 = _0x43b358['dot'](_0x3e9640, _0x399ece)) > -Number['MIN_VALUE'] && _0x3a79d6 < Number['MIN_VALUE'])
                return Number['NaN'];
            var _0x57c27d, _0x3748e1 = 0x1 / _0x3a79d6, _0x55fd0c = _0x514950['_tempVecto' + 'r33'];
            if (_0x43b358['subtract'](_0x305a0f['origin'], _0x4b17c2, _0x55fd0c), _0x57c27d = _0x43b358['dot'](_0x55fd0c, _0x399ece), (_0x57c27d *= _0x3748e1) < 0x0 || _0x57c27d > 0x1)
                return Number['NaN'];
            var _0x178741, _0x2a8741, _0x2604b5 = _0x514950['_tempVecto' + 'r34'];
            return _0x43b358['cross'](_0x55fd0c, _0x3e9640, _0x2604b5), _0x178741 = _0x43b358['dot'](_0x305a0f['direction'], _0x2604b5), (_0x178741 *= _0x3748e1) < 0x0 || _0x57c27d + _0x178741 > 0x1 ? Number['NaN'] : (_0x2a8741 = _0x43b358['dot'](_0x54b5fc, _0x2604b5), (_0x2a8741 *= _0x3748e1) < 0x0 ? Number['NaN'] : _0x2a8741);
        }
    }
    _0x514950['_tempVecto' + 'r30'] = new _0x43b358(), _0x514950['_tempVecto' + 'r31'] = new _0x43b358(), _0x514950['_tempVecto' + 'r32'] = new _0x43b358(), _0x514950['_tempVecto' + 'r33'] = new _0x43b358(), _0x514950['_tempVecto' + 'r34'] = new _0x43b358();
    class _0x145b1e extends _0x2247ad['BufferStat' + 'eBase'] {
        constructor() {
            super();
        }
        ['applyVerte' + 'xBuffer'](_0x4735f0) {
            if (_0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            var _0x23c689 = _0x2247ad['LayaGL']['instance'], _0x4f6c9d = _0x4735f0['vertexDecl' + 'aration'], _0x1325fa = _0x4f6c9d['_shaderVal' + 'ues']['getData']();
            for (var _0x43a25c in (this['vertexDecl' + 'aration'] = _0x4f6c9d, _0x4735f0['bind'](), _0x1325fa)) {
                var _0x5b3fe0 = parseInt(_0x43a25c), _0x414569 = _0x1325fa[_0x43a25c];
                _0x23c689['enableVert' + 'exAttribAr' + 'ray'](_0x5b3fe0), _0x23c689['vertexAttr' + 'ibPointer'](_0x5b3fe0, _0x414569[0x0], _0x414569[0x1], !!_0x414569[0x2], _0x414569[0x3], _0x414569[0x4]);
            }
        }
        ['applyVerte' + 'xBuffers'](_0x3b21d1) {
            if (_0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            for (var _0x230e13 = _0x2247ad['LayaGL']['instance'], _0x3ba99b = 0x0, _0x26403a = _0x3b21d1['length']; _0x3ba99b < _0x26403a; _0x3ba99b++) {
                var _0xe9cb85 = _0x3b21d1[_0x3ba99b], _0x1b6a21 = _0xe9cb85['vertexDecl' + 'aration']['_shaderVal' + 'ues']['getData']();
                for (var _0xb35f5f in (_0xe9cb85['bind'](), _0x1b6a21)) {
                    var _0xa17bab = parseInt(_0xb35f5f), _0x26f991 = _0x1b6a21[_0xb35f5f];
                    _0x230e13['enableVert' + 'exAttribAr' + 'ray'](_0xa17bab), _0x230e13['vertexAttr' + 'ibPointer'](_0xa17bab, _0x26f991[0x0], _0x26f991[0x1], !!_0x26f991[0x2], _0x26f991[0x3], _0x26f991[0x4]);
                }
            }
        }
        ['applyInsta' + 'nceVertexB' + 'uffer'](_0x30196b) {
            if (_0x2247ad['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']()) {
                if (_0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                    throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
                var _0x467e54 = _0x2247ad['LayaGL']['instance'], _0x1bd891 = _0x30196b['vertexDecl' + 'aration']['_shaderVal' + 'ues']['getData']();
                for (var _0x1d30e9 in (_0x30196b['bind'](), _0x1bd891)) {
                    var _0x550820 = parseInt(_0x1d30e9), _0x54eb1e = _0x1bd891[_0x1d30e9];
                    _0x467e54['enableVert' + 'exAttribAr' + 'ray'](_0x550820), _0x467e54['vertexAttr' + 'ibPointer'](_0x550820, _0x54eb1e[0x0], _0x54eb1e[0x1], !!_0x54eb1e[0x2], _0x54eb1e[0x3], _0x54eb1e[0x4]), _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['vertexAttr' + 'ibDivisor'](_0x550820, 0x1);
                }
            }
        }
        ['applyIndex' + 'Buffer'](_0x5e2ad6) {
            if (_0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            this['_bindedInd' + 'exBuffer'] !== _0x5e2ad6 && (_0x5e2ad6['_bindForVA' + 'O'](), this['_bindedInd' + 'exBuffer'] = _0x5e2ad6);
        }
    }
    (_0x31089b = _0xc55b22['IndexForma' + 't'] || (_0xc55b22['IndexForma' + 't'] = {}))[_0x31089b['UInt8'] = 0x0] = 'UInt8', _0x31089b[_0x31089b['UInt16'] = 0x1] = 'UInt16', _0x31089b[_0x31089b['UInt32'] = 0x2] = 'UInt32';
    class _0x2a6e6b extends _0x2247ad['Buffer'] {
        get ['indexType']() {
            return this['_indexType'];
        }
        get ['indexTypeB' + 'yteCount']() {
            return this['_indexType' + 'ByteCount'];
        }
        get ['indexCount']() {
            return this['_indexCoun' + 't'];
        }
        get ['canRead']() {
            return this['_canRead'];
        }
        constructor(_0x4200f7, _0x5869a6, _0x31cf4c = 0x88e4, _0x18335d = !0x1) {
            switch (super(), this['_indexType'] = _0x4200f7, this['_indexCoun' + 't'] = _0x5869a6, this['_bufferUsa' + 'ge'] = _0x31cf4c, this['_bufferTyp' + 'e'] = _0x2247ad['LayaGL']['instance']['ELEMENT_AR' + 'RAY_BUFFER'], this['_canRead'] = _0x18335d, _0x4200f7) {
            case _0xc55b22['IndexForma' + 't']['UInt32']:
                this['_indexType' + 'ByteCount'] = 0x4;
                break;
            case _0xc55b22['IndexForma' + 't']['UInt16']:
                this['_indexType' + 'ByteCount'] = 0x2;
                break;
            case _0xc55b22['IndexForma' + 't']['UInt8']:
                this['_indexType' + 'ByteCount'] = 0x1;
                break;
            default:
                throw new Error('unidentifi' + 'cation\x20ind' + 'ex\x20type.');
            }
            var _0x2984e8 = this['_indexType' + 'ByteCount'] * _0x5869a6, _0xb53e26 = _0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'];
            if (this['_byteLengt' + 'h'] = _0x2984e8, _0xb53e26 ? _0xb53e26['_bindedInd' + 'exBuffer'] === this ? _0x2247ad['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x2984e8, this['_bufferUsa' + 'ge']) : (_0xb53e26['unBind'](), this['bind'](), _0x2247ad['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x2984e8, this['_bufferUsa' + 'ge']), _0xb53e26['bind']()) : (this['bind'](), _0x2247ad['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x2984e8, this['_bufferUsa' + 'ge'])), _0x18335d)
                switch (_0x4200f7) {
                case _0xc55b22['IndexForma' + 't']['UInt32']:
                    this['_buffer'] = new Uint32Array(_0x5869a6);
                    break;
                case _0xc55b22['IndexForma' + 't']['UInt16']:
                    this['_buffer'] = new Uint16Array(_0x5869a6);
                    break;
                case _0xc55b22['IndexForma' + 't']['UInt8']:
                    this['_buffer'] = new Uint8Array(_0x5869a6);
                }
        }
        ['_bindForVA' + 'O']() {
            if (!_0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'])
                throw 'IndexBuffe' + 'r3D:\x20must\x20' + 'bind\x20curre' + 'nt\x20BufferS' + 'tate.';
            var _0x25f07e = _0x2247ad['LayaGL']['instance'];
            _0x25f07e['bindBuffer'](_0x25f07e['ELEMENT_AR' + 'RAY_BUFFER'], this['_glBuffer']);
        }
        ['bind']() {
            if (_0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'])
                throw 'IndexBuffe' + 'r3D:\x20must\x20' + 'unbind\x20cur' + 'rent\x20Buffe' + 'rState.';
            if (_0x2247ad['Buffer']['_bindedInd' + 'exBuffer'] !== this['_glBuffer']) {
                var _0xff1631 = _0x2247ad['LayaGL']['instance'];
                return _0xff1631['bindBuffer'](_0xff1631['ELEMENT_AR' + 'RAY_BUFFER'], this['_glBuffer']), _0x2247ad['Buffer']['_bindedInd' + 'exBuffer'] = this['_glBuffer'], !0x0;
            }
            return !0x1;
        }
        ['setData'](_0x2aff9b, _0xa3780b = 0x0, _0x3de7a7 = 0x0, _0x323b6f = 0xffffffff) {
            var _0x417f9b = this['_indexType' + 'ByteCount'];
            if (0x0 !== _0x3de7a7 || 0xffffffff !== _0x323b6f)
                switch (this['_indexType']) {
                case _0xc55b22['IndexForma' + 't']['UInt32']:
                    _0x2aff9b = new Uint32Array(_0x2aff9b['buffer'], _0x3de7a7 * _0x417f9b, _0x323b6f);
                    break;
                case _0xc55b22['IndexForma' + 't']['UInt16']:
                    _0x2aff9b = new Uint16Array(_0x2aff9b['buffer'], _0x3de7a7 * _0x417f9b, _0x323b6f);
                    break;
                case _0xc55b22['IndexForma' + 't']['UInt8']:
                    _0x2aff9b = new Uint8Array(_0x2aff9b['buffer'], _0x3de7a7 * _0x417f9b, _0x323b6f);
                }
            var _0x564bd3 = _0x2247ad['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'];
            if (_0x564bd3 ? _0x564bd3['_bindedInd' + 'exBuffer'] === this ? _0x2247ad['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0xa3780b * _0x417f9b, _0x2aff9b) : (_0x564bd3['unBind'](), this['bind'](), _0x2247ad['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0xa3780b * _0x417f9b, _0x2aff9b), _0x564bd3['bind']()) : (this['bind'](), _0x2247ad['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0xa3780b * _0x417f9b, _0x2aff9b)), this['_canRead']) {
                if (0x0 !== _0xa3780b || 0x0 !== _0x3de7a7 || 0xffffffff !== _0x323b6f) {
                    var _0x53b621 = this['_buffer']['length'] - _0xa3780b;
                    _0x323b6f > _0x53b621 && (_0x323b6f = _0x53b621);
                    for (var _0x3b0c6c = 0x0; _0x3b0c6c < _0x323b6f; _0x3b0c6c++)
                        this['_buffer'][_0xa3780b + _0x3b0c6c] = _0x2aff9b[_0x3b0c6c];
                } else
                    this['_buffer'] = _0x2aff9b;
            }
        }
        ['getData']() {
            if (this['_canRead'])
                return this['_buffer'];
            throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['destroy']() {
            super['destroy'](), this['_buffer'] = null;
        }
    }
    class _0x163e87 {
        static ['__init__']() {
            var _0x1de071 = _0x2247ad['LayaGL']['instance'];
            _0x163e87['_elementIn' + 'fos'] = {
                'single': [
                    0x1,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'vector2': [
                    0x2,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'vector3': [
                    0x3,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'vector4': [
                    0x4,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'color': [
                    0x4,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'byte4': [
                    0x4,
                    _0x1de071['UNSIGNED_B' + 'YTE'],
                    0x0
                ],
                'short2': [
                    0x2,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'short4': [
                    0x4,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'normalizedshort2': [
                    0x2,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'normalizedshort4': [
                    0x4,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'halfvector2': [
                    0x2,
                    _0x1de071['FLOAT'],
                    0x0
                ],
                'halfvector4': [
                    0x4,
                    _0x1de071['FLOAT'],
                    0x0
                ]
            };
        }
        static ['getElement' + 'Infos'](_0x255f7c) {
            var _0x5b31cf = _0x163e87['_elementIn' + 'fos'][_0x255f7c];
            if (_0x5b31cf)
                return _0x5b31cf;
            throw 'VertexElem' + 'entFormat:' + '\x20this\x20vert' + 'exElementF' + 'ormat\x20is\x20n' + 'ot\x20impleme' + 'nt.';
        }
    }
    _0x163e87['Single'] = 'single', _0x163e87['Vector2'] = 'vector2', _0x163e87['Vector3'] = 'vector3', _0x163e87['Vector4'] = 'vector4', _0x163e87['Color'] = 'color', _0x163e87['Byte4'] = 'byte4', _0x163e87['Short2'] = 'short2', _0x163e87['Short4'] = 'short4', _0x163e87['Normalized' + 'Short2'] = 'normalized' + 'short2', _0x163e87['Normalized' + 'Short4'] = 'normalized' + 'short4', _0x163e87['HalfVector' + '2'] = 'halfvector' + '2', _0x163e87['HalfVector' + '4'] = 'halfvector' + '4';
    class _0x2ca0b5 {
        constructor(_0x58740e, _0x5031af) {
            this['_id'] = ++_0x2ca0b5['_uniqueIDC' + 'ounter'], this['_vertexEle' + 'mentsDic'] = {}, this['_vertexStr' + 'ide'] = _0x58740e, this['_vertexEle' + 'ments'] = _0x5031af;
            var _0x16f3a5 = _0x5031af['length'];
            this['_shaderVal' + 'ues'] = new _0x5e515b(null);
            for (var _0x15138b = 0x0; _0x15138b < _0x16f3a5; _0x15138b++) {
                var _0x290995 = _0x5031af[_0x15138b], _0xe20ba5 = _0x290995['_elementUs' + 'age'];
                this['_vertexEle' + 'mentsDic'][_0xe20ba5] = _0x290995;
                var _0x51eb5b = new Int32Array(0x5), _0xf5a373 = _0x163e87['getElement' + 'Infos'](_0x290995['_elementFo' + 'rmat']);
                _0x51eb5b[0x0] = _0xf5a373[0x0], _0x51eb5b[0x1] = _0xf5a373[0x1], _0x51eb5b[0x2] = _0xf5a373[0x2], _0x51eb5b[0x3] = this['_vertexStr' + 'ide'], _0x51eb5b[0x4] = _0x290995['_offset'], this['_shaderVal' + 'ues']['setAttribu' + 'te'](_0xe20ba5, _0x51eb5b);
            }
        }
        get ['id']() {
            return this['_id'];
        }
        get ['vertexStri' + 'de']() {
            return this['_vertexStr' + 'ide'];
        }
        get ['vertexElem' + 'entCount']() {
            return this['_vertexEle' + 'ments']['length'];
        }
        ['getVertexE' + 'lementByIn' + 'dex'](_0x50fd34) {
            return this['_vertexEle' + 'ments'][_0x50fd34];
        }
        ['getVertexE' + 'lementByUs' + 'age'](_0x1ac438) {
            return this['_vertexEle' + 'mentsDic'][_0x1ac438];
        }
    }
    _0x2ca0b5['_uniqueIDC' + 'ounter'] = 0x1;
    class _0x50e0bd {
        get ['offset']() {
            return this['_offset'];
        }
        get ['elementFor' + 'mat']() {
            return this['_elementFo' + 'rmat'];
        }
        get ['elementUsa' + 'ge']() {
            return this['_elementUs' + 'age'];
        }
        constructor(_0x1a7a05, _0x2b6d91, _0x5c3e15) {
            this['_offset'] = _0x1a7a05, this['_elementFo' + 'rmat'] = _0x2b6d91, this['_elementUs' + 'age'] = _0x5c3e15;
        }
    }
    class _0x3fbee7 {
        static ['__init__']() {
            _0x3fbee7['instanceWo' + 'rldMatrixD' + 'eclaration'] = new _0x2ca0b5(0x40, [
                new _0x50e0bd(0x0, _0x163e87['Vector4'], _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '0']),
                new _0x50e0bd(0x10, _0x163e87['Vector4'], _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '1']),
                new _0x50e0bd(0x20, _0x163e87['Vector4'], _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '2']),
                new _0x50e0bd(0x30, _0x163e87['Vector4'], _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '3'])
            ]), _0x3fbee7['instanceMV' + 'PMatrixDec' + 'laration'] = new _0x2ca0b5(0x40, [
                new _0x50e0bd(0x0, _0x163e87['Vector4'], _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0']),
                new _0x50e0bd(0x10, _0x163e87['Vector4'], _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW1']),
                new _0x50e0bd(0x20, _0x163e87['Vector4'], _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW2']),
                new _0x50e0bd(0x30, _0x163e87['Vector4'], _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW3'])
            ]);
        }
        static ['getVertexD' + 'eclaration'](_0x2f09d5, _0x507147 = !0x0) {
            var _0x4a315e = _0x3fbee7['_vertexDec' + 'larationMa' + 'p'][_0x2f09d5 + (_0x507147 ? '_0' : '_1')];
            if (!_0x4a315e) {
                for (var _0x4243df = _0x2f09d5['split'](','), _0x46d441 = 0x0, _0x201047 = [], _0x17af30 = 0x0, _0x47e264 = _0x4243df['length']; _0x17af30 < _0x47e264; _0x17af30++) {
                    var _0x139780;
                    switch (_0x4243df[_0x17af30]) {
                    case 'POSITION':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector3'], _0x3fbee7['MESH_POSIT' + 'ION0']), _0x46d441 += 0xc;
                        break;
                    case 'NORMAL':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector3'], _0x3fbee7['MESH_NORMA' + 'L0']), _0x46d441 += 0xc;
                        break;
                    case 'COLOR':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector4'], _0x3fbee7['MESH_COLOR' + '0']), _0x46d441 += 0x10;
                        break;
                    case 'UV':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector2'], _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']), _0x46d441 += 0x8;
                        break;
                    case 'UV1':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector2'], _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']), _0x46d441 += 0x8;
                        break;
                    case 'BLENDWEIGH' + 'T':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector4'], _0x3fbee7['MESH_BLEND' + 'WEIGHT0']), _0x46d441 += 0x10;
                        break;
                    case 'BLENDINDIC' + 'ES':
                        _0x507147 ? (_0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector4'], _0x3fbee7['MESH_BLEND' + 'INDICES0']), _0x46d441 += 0x10) : (_0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Byte4'], _0x3fbee7['MESH_BLEND' + 'INDICES0']), _0x46d441 += 0x4);
                        break;
                    case 'TANGENT':
                        _0x139780 = new _0x50e0bd(_0x46d441, _0x163e87['Vector4'], _0x3fbee7['MESH_TANGE' + 'NT0']), _0x46d441 += 0x10;
                        break;
                    default:
                        throw 'VertexMesh' + ':\x20unknown\x20' + 'vertex\x20fla' + 'g.';
                    }
                    _0x201047['push'](_0x139780);
                }
                _0x4a315e = new _0x2ca0b5(_0x46d441, _0x201047), _0x3fbee7['_vertexDec' + 'larationMa' + 'p'][_0x2f09d5 + (_0x507147 ? '_0' : '_1')] = _0x4a315e;
            }
            return _0x4a315e;
        }
    }
    _0x3fbee7['MESH_POSIT' + 'ION0'] = 0x0, _0x3fbee7['MESH_COLOR' + '0'] = 0x1, _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'] = 0x2, _0x3fbee7['MESH_NORMA' + 'L0'] = 0x3, _0x3fbee7['MESH_TANGE' + 'NT0'] = 0x4, _0x3fbee7['MESH_BLEND' + 'INDICES0'] = 0x5, _0x3fbee7['MESH_BLEND' + 'WEIGHT0'] = 0x6, _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1'] = 0x7, _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '0'] = 0x8, _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '1'] = 0x9, _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '2'] = 0xa, _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '3'] = 0xb, _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0'] = 0xc, _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW1'] = 0xd, _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW2'] = 0xe, _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW3'] = 0xf, _0x3fbee7['_vertexDec' + 'larationMa' + 'p'] = {};
    class _0x26d078 extends _0x2247ad['Buffer'] {
        constructor(_0x2f7c69, _0x4e5fcf, _0x31846d = !0x1) {
            super(), this['_vertexDec' + 'laration'] = null, this['_float32Re' + 'ader'] = null;
            var _0x47b000 = _0x2247ad['LayaGL']['instance'];
            this['_bufferUsa' + 'ge'] = _0x4e5fcf, this['_bufferTyp' + 'e'] = _0x47b000['ARRAY_BUFF' + 'ER'], this['_canRead'] = _0x31846d, this['_byteLengt' + 'h'] = _0x2f7c69, this['bind'](), _0x47b000['bufferData'](this['_bufferTyp' + 'e'], this['_byteLengt' + 'h'], this['_bufferUsa' + 'ge']), _0x31846d && (this['_buffer'] = new Uint8Array(_0x2f7c69), this['_float32Re' + 'ader'] = new Float32Array(this['_buffer']['buffer']));
        }
        get ['vertexDecl' + 'aration']() {
            return this['_vertexDec' + 'laration'];
        }
        set ['vertexDecl' + 'aration'](_0x282085) {
            this['_vertexDec' + 'laration'] = _0x282085;
        }
        get ['canRead']() {
            return this['_canRead'];
        }
        ['bind']() {
            if (_0x2247ad['Buffer']['_bindedVer' + 'texBuffer'] !== this['_glBuffer']) {
                var _0x39ec26 = _0x2247ad['LayaGL']['instance'];
                return _0x39ec26['bindBuffer'](_0x39ec26['ARRAY_BUFF' + 'ER'], this['_glBuffer']), _0x2247ad['Buffer']['_bindedVer' + 'texBuffer'] = this['_glBuffer'], !0x0;
            }
            return !0x1;
        }
        ['orphanStor' + 'age']() {
            this['bind'](), _0x2247ad['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], this['_byteLengt' + 'h'], this['_bufferUsa' + 'ge']);
        }
        ['setData'](_0x1a0d4a, _0x519faa = 0x0, _0x45c3cf = 0x0, _0x159b46 = Number['MAX_SAFE_I' + 'NTEGER']) {
            if (this['bind'](), 0x0 !== _0x45c3cf || _0x159b46 !== Number['MAX_SAFE_I' + 'NTEGER']) {
                var _0x24b7cc = new Uint8Array(_0x1a0d4a, _0x45c3cf, _0x159b46);
                _0x2247ad['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x519faa, _0x24b7cc), this['_canRead'] && this['_buffer']['set'](_0x24b7cc, _0x519faa);
            } else
                _0x2247ad['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x519faa, _0x1a0d4a), this['_canRead'] && this['_buffer']['set'](new Uint8Array(_0x1a0d4a), _0x519faa);
        }
        ['getUint8Da' + 'ta']() {
            if (this['_canRead'])
                return this['_buffer'];
            throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['getFloat32' + 'Data']() {
            if (this['_canRead'])
                return this['_float32Re' + 'ader'];
            throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['markAsUnre' + 'adbale']() {
            this['_canRead'] = !0x1, this['_buffer'] = null, this['_float32Re' + 'ader'] = null;
        }
        ['destroy']() {
            super['destroy'](), this['_buffer'] = null, this['_float32Re' + 'ader'] = null, this['_vertexDec' + 'laration'] = null;
        }
    }
    _0x26d078['DATATYPE_F' + 'LOAT32ARRA' + 'Y'] = 0x0, _0x26d078['DATATYPE_U' + 'INT8ARRAY'] = 0x1;
    class _0x3498e9 {
        constructor() {
        }
        ['_render'](_0x3b6ee8) {
        }
    }
    class _0x47c080 extends _0x3498e9 {
        static ['__init__']() {
            _0x47c080['instance'] = new _0x47c080();
        }
        constructor() {
            super();
            var _0x5f14a2 = _0x2247ad['LayaGL']['instance'], _0xb63dd2 = new Float32Array([
                    -0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    0x1
                ]), _0x27e4b0 = new Uint8Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x0,
                    0x3,
                    0x7,
                    0x7,
                    0x4,
                    0x0,
                    0x1,
                    0x5,
                    0x6,
                    0x6,
                    0x2,
                    0x1,
                    0x3,
                    0x2,
                    0x6,
                    0x6,
                    0x7,
                    0x3,
                    0x0,
                    0x4,
                    0x5,
                    0x5,
                    0x1,
                    0x0
                ]), _0xbdf2cb = _0x3fbee7['getVertexD' + 'eclaration']('POSITION');
            this['_vertexBuf' + 'fer'] = new _0x26d078(0x8 * _0xbdf2cb['vertexStri' + 'de'], _0x5f14a2['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0xbdf2cb, this['_indexBuff' + 'er'] = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt8'], 0x24, _0x5f14a2['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['setData'](_0xb63dd2['buffer']), this['_indexBuff' + 'er']['setData'](_0x27e4b0);
            var _0x4b8058 = new _0x145b1e();
            _0x4b8058['bind'](), _0x4b8058['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0x4b8058['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0x4b8058['unBind'](), this['_bufferSta' + 'te'] = _0x4b8058;
        }
        ['_render'](_0x467041) {
            var _0x4ae505 = _0x2247ad['LayaGL']['instance'];
            _0x4ae505['drawElemen' + 'ts'](_0x4ae505['TRIANGLES'], 0x24, _0x4ae505['UNSIGNED_B' + 'YTE'], 0x0), _0x2247ad['Stat']['trianglesF' + 'aces'] += 0xc, _0x2247ad['Stat']['renderBatc' + 'hes']++;
        }
    }
    class _0x2fc668 {
        constructor() {
            this['_mesh'] = _0x47c080['instance'];
        }
        get ['material']() {
            return this['_material'];
        }
        set ['material'](_0xd64dd0) {
            this['_material'] !== _0xd64dd0 && (this['_material'] && this['_material']['_removeRef' + 'erence'](), _0xd64dd0 && _0xd64dd0['_addRefere' + 'nce'](), this['_material'] = _0xd64dd0);
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x4d0ae9) {
            this['_mesh'] !== _0x4d0ae9 && (this['_mesh'] = _0x4d0ae9);
        }
        ['_isAvailab' + 'le']() {
            return !(!this['_material'] || !this['_mesh']);
        }
        ['_render'](_0x4467d1) {
            if (this['_material'] && this['_mesh']) {
                var _0x281743 = _0x2247ad['LayaGL']['instance'], _0x472eca = _0x4467d1['scene'], _0x47e3c0 = _0x4467d1['cameraShad' + 'erValue'], _0x45d5a2 = _0x4467d1['camera'], _0x2ad38c = _0x5e515b['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'];
                _0x2247ad['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x5e515b['setRuntime' + 'ValueMode'](!0x1), _0x2247ad['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x281743, !0x1), _0x2247ad['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x281743, _0x281743['LEQUAL']), _0x2247ad['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x281743, !0x1);
                var _0x46aab9 = _0x2fc668['_compileDe' + 'fine'];
                this['_material']['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x46aab9);
                var _0x216faf = _0x4467d1['shader'] = this['_material']['_shader']['getSubShad' + 'erAt'](0x0)['_passes'][0x0]['withCompil' + 'e'](_0x46aab9), _0x3ae987 = _0x216faf['bind'](), _0x6b5ee5 = _0x2247ad['Stat']['loopCount'] !== _0x216faf['_uploadMar' + 'k'], _0x161952 = _0x216faf['_uploadSce' + 'ne'] !== _0x472eca || _0x6b5ee5;
                (_0x161952 || _0x3ae987) && (_0x216faf['uploadUnif' + 'orms'](_0x216faf['_sceneUnif' + 'ormParamsM' + 'ap'], _0x472eca['_shaderVal' + 'ues'], _0x161952), _0x216faf['_uploadSce' + 'ne'] = _0x472eca), _0x45d5a2['_getRender' + 'Texture']();
                var _0x3098a3 = _0x216faf['_uploadCam' + 'eraShaderV' + 'alue'] !== _0x47e3c0 || _0x6b5ee5;
                if (_0x3098a3 || _0x3ae987) {
                    var _0xb54bb6 = _0x2fc668['_tempMatri' + 'x0'], _0x523082 = _0x2fc668['_tempMatri' + 'x1'];
                    _0x45d5a2['viewMatrix']['cloneTo'](_0xb54bb6), _0x45d5a2['projection' + 'Matrix']['cloneTo'](_0x523082), _0xb54bb6['setTransla' + 'tionVector'](_0x43b358['_ZERO']), _0x45d5a2['orthograph' + 'ic'] && _0x334e9d['createPers' + 'pective'](_0x45d5a2['fieldOfVie' + 'w'], _0x45d5a2['aspectRati' + 'o'], _0x45d5a2['nearPlane'], _0x45d5a2['farPlane'], _0x523082);
                    var _0xe6075 = 0x1 / Math['tan'](3.1416 * _0x45d5a2['fieldOfVie' + 'w'] / 0xb4 * 0.5);
                    _0x523082['elements'][0x0] = _0xe6075 / _0x45d5a2['aspectRati' + 'o'], _0x523082['elements'][0x5] = _0xe6075, _0x523082['elements'][0xa] = 0.000001 - 0x1, _0x523082['elements'][0xb] = -0x1, _0x523082['elements'][0xe] = -0x0, _0x45d5a2['_applyView' + 'Project'](_0x4467d1, _0xb54bb6, _0x523082), _0x216faf['uploadUnif' + 'orms'](_0x216faf['_cameraUni' + 'formParams' + 'Map'], _0x47e3c0, _0x3098a3), _0x216faf['_uploadCam' + 'eraShaderV' + 'alue'] = _0x47e3c0;
                }
                var _0x471c98 = _0x216faf['_uploadMat' + 'erial'] !== this['_material'] || _0x6b5ee5;
                (_0x471c98 || _0x3ae987) && (_0x216faf['uploadUnif' + 'orms'](_0x216faf['_materialU' + 'niformPara' + 'msMap'], this['_material']['_shaderVal' + 'ues'], _0x471c98), _0x216faf['_uploadMat' + 'erial'] = this['_material']), this['_mesh']['_bufferSta' + 'te']['bind'](), this['_mesh']['_render'](_0x4467d1), _0x2247ad['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x5e515b['setRuntime' + 'ValueMode'](_0x2ad38c), _0x2247ad['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x281743, _0x281743['LESS']), _0x2247ad['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x281743, !0x0), _0x45d5a2['_applyView' + 'Project'](_0x4467d1, _0x45d5a2['viewMatrix'], _0x45d5a2['projection' + 'Matrix']);
            }
        }
        ['destroy']() {
            this['_material'] && (this['_material']['_removeRef' + 'erence'](), this['_material'] = null);
        }
    }
    _0x2fc668['_tempMatri' + 'x0'] = new _0x334e9d(), _0x2fc668['_tempMatri' + 'x1'] = new _0x334e9d(), _0x2fc668['_compileDe' + 'fine'] = new _0x590056();
    class _0x36f166 extends _0x39cab4 {
        constructor(_0x166264 = 0.3, _0x50ce12 = 0x3e8) {
            super(), this['_skyRender' + 'er'] = new _0x2fc668(), this['_forward'] = new _0x43b358(), this['_up'] = new _0x43b358(), this['clearColor'] = new _0x4cec8f(0x64 / 0xff, 0x95 / 0xff, 0xed / 0xff, 0x1), this['_shaderVal' + 'ues'] = new _0x5e515b(null), this['_fieldOfVi' + 'ew'] = 0x3c, this['_useUserPr' + 'ojectionMa' + 'trix'] = !0x1, this['_orthograp' + 'hic'] = !0x1, this['_orthograp' + 'hicVertica' + 'lSize'] = 0xa, this['renderingO' + 'rder'] = 0x0, this['_nearPlane'] = _0x166264, this['_farPlane'] = _0x50ce12, this['cullingMas' + 'k'] = 0x7fffffff, this['useOcclusi' + 'onCulling'] = !0x0;
        }
        get ['skyRendere' + 'r']() {
            return this['_skyRender' + 'er'];
        }
        get ['fieldOfVie' + 'w']() {
            return this['_fieldOfVi' + 'ew'];
        }
        set ['fieldOfVie' + 'w'](_0x11fcd6) {
            this['_fieldOfVi' + 'ew'] = _0x11fcd6, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['nearPlane']() {
            return this['_nearPlane'];
        }
        set ['nearPlane'](_0x4d8bd2) {
            this['_nearPlane'] = _0x4d8bd2, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['farPlane']() {
            return this['_farPlane'];
        }
        set ['farPlane'](_0x2bc16b) {
            this['_farPlane'] = _0x2bc16b, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['orthograph' + 'ic']() {
            return this['_orthograp' + 'hic'];
        }
        set ['orthograph' + 'ic'](_0x5b35ca) {
            this['_orthograp' + 'hic'] = _0x5b35ca, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['orthograph' + 'icVertical' + 'Size']() {
            return this['_orthograp' + 'hicVertica' + 'lSize'];
        }
        set ['orthograph' + 'icVertical' + 'Size'](_0x3fae20) {
            this['_orthograp' + 'hicVertica' + 'lSize'] = _0x3fae20, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['renderingO' + 'rder']() {
            return this['_rendering' + 'Order'];
        }
        set ['renderingO' + 'rder'](_0x5772df) {
            this['_rendering' + 'Order'] = _0x5772df, this['_sortCamer' + 'asByRender' + 'ingOrder']();
        }
        ['_sortCamer' + 'asByRender' + 'ingOrder']() {
            if (this['displayedI' + 'nStage']) {
                for (var _0x35bca7 = this['scene']['_cameraPoo' + 'l'], _0x2e23e0 = _0x35bca7['length'] - 0x1, _0x2c99f1 = 0x0; _0x2c99f1 < _0x2e23e0; _0x2c99f1++)
                    if (_0x35bca7[_0x2c99f1]['renderingO' + 'rder'] > _0x35bca7[_0x2e23e0]['renderingO' + 'rder']) {
                        var _0x2385a4 = _0x35bca7[_0x2c99f1];
                        _0x35bca7[_0x2c99f1] = _0x35bca7[_0x2e23e0], _0x35bca7[_0x2e23e0] = _0x2385a4;
                    }
            }
        }
        ['_calculate' + 'Projection' + 'Matrix']() {
        }
        ['_onScreenS' + 'izeChanged']() {
            this['_calculate' + 'Projection' + 'Matrix']();
        }
        ['_prepareCa' + 'meraToRend' + 'er']() {
            var _0x80e4a5 = this['_shaderVal' + 'ues'];
            this['transform']['getForward'](this['_forward']), this['transform']['getUp'](this['_up']), _0x80e4a5['setVector3'](_0x36f166['CAMERAPOS'], this['transform']['position']), _0x80e4a5['setVector3'](_0x36f166['CAMERADIRE' + 'CTION'], this['_forward']), _0x80e4a5['setVector3'](_0x36f166['CAMERAUP'], this['_up']);
        }
        ['render'](_0x3f12c7 = null, _0xe4c503 = null) {
        }
        ['addLayer'](_0x74997e) {
            this['cullingMas' + 'k'] |= Math['pow'](0x2, _0x74997e);
        }
        ['removeLaye' + 'r'](_0x1fce72) {
            this['cullingMas' + 'k'] &= ~Math['pow'](0x2, _0x1fce72);
        }
        ['addAllLaye' + 'rs']() {
            this['cullingMas' + 'k'] = 0x7fffffff;
        }
        ['removeAllL' + 'ayers']() {
            this['cullingMas' + 'k'] = 0x0;
        }
        ['resetProje' + 'ctionMatri' + 'x']() {
            this['_useUserPr' + 'ojectionMa' + 'trix'] = !0x1, this['_calculate' + 'Projection' + 'Matrix']();
        }
        ['_onActive']() {
            this['_scene']['_addCamera'](this), super['_onActive']();
        }
        ['_onInActiv' + 'e']() {
            this['_scene']['_removeCam' + 'era'](this), super['_onInActiv' + 'e']();
        }
        ['_parse'](_0x4d49d0, _0x2735cf) {
            super['_parse'](_0x4d49d0, _0x2735cf), this['orthograph' + 'ic'] = _0x4d49d0['orthograph' + 'ic'], void 0x0 !== _0x4d49d0['orthograph' + 'icVertical' + 'Size'] && (this['orthograph' + 'icVertical' + 'Size'] = _0x4d49d0['orthograph' + 'icVertical' + 'Size']), void 0x0 !== _0x4d49d0['fieldOfVie' + 'w'] && (this['fieldOfVie' + 'w'] = _0x4d49d0['fieldOfVie' + 'w']), this['nearPlane'] = _0x4d49d0['nearPlane'], this['farPlane'] = _0x4d49d0['farPlane'];
            var _0xdc7cd7 = _0x4d49d0['clearColor'];
            this['clearColor'] = new _0x4cec8f(_0xdc7cd7[0x0], _0xdc7cd7[0x1], _0xdc7cd7[0x2], _0xdc7cd7[0x3]);
            var _0x4fb75b = _0x4d49d0['skyboxMate' + 'rial'];
            _0x4fb75b && (this['_skyRender' + 'er']['material'] = _0x2247ad['Loader']['getRes'](_0x4fb75b['path']));
        }
        ['destroy'](_0x4e7c41 = !0x0) {
            this['_skyRender' + 'er']['destroy'](), this['_skyRender' + 'er'] = null, _0x2247ad['Laya']['stage']['off'](_0x2247ad['Event']['RESIZE'], this, this['_onScreenS' + 'izeChanged']), super['destroy'](_0x4e7c41);
        }
        ['_create']() {
            return new _0x36f166();
        }
    }
    _0x36f166['_tempMatri' + 'x4x40'] = new _0x334e9d(), _0x36f166['CAMERAPOS'] = _0x38ffce['propertyNa' + 'meToID']('u_CameraPo' + 's'), _0x36f166['VIEWMATRIX'] = _0x38ffce['propertyNa' + 'meToID']('u_View'), _0x36f166['PROJECTMAT' + 'RIX'] = _0x38ffce['propertyNa' + 'meToID']('u_Projecti' + 'on'), _0x36f166['VIEWPROJEC' + 'TMATRIX'] = _0x38ffce['propertyNa' + 'meToID']('u_ViewProj' + 'ection'), _0x36f166['CAMERADIRE' + 'CTION'] = _0x38ffce['propertyNa' + 'meToID']('u_CameraDi' + 'rection'), _0x36f166['CAMERAUP'] = _0x38ffce['propertyNa' + 'meToID']('u_CameraUp'), _0x36f166['VIEWPORT'] = _0x38ffce['propertyNa' + 'meToID']('u_Viewport'), _0x36f166['PROJECTION' + '_PARAMS'] = _0x38ffce['propertyNa' + 'meToID']('u_Projecti' + 'onParams'), _0x36f166['RENDERINGT' + 'YPE_DEFERR' + 'EDLIGHTING'] = 'DEFERREDLI' + 'GHTING', _0x36f166['RENDERINGT' + 'YPE_FORWAR' + 'DRENDERING'] = 'FORWARDREN' + 'DERING', _0x36f166['_invertYSc' + 'aleMatrix'] = new _0x334e9d(0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), _0x36f166['_invertYPr' + 'ojectionMa' + 'trix'] = new _0x334e9d(), _0x36f166['_invertYPr' + 'ojectionVi' + 'ewMatrix'] = new _0x334e9d(), _0x36f166['CLEARFLAG_' + 'SOLIDCOLOR'] = 0x0, _0x36f166['CLEARFLAG_' + 'SKY'] = 0x1, _0x36f166['CLEARFLAG_' + 'DEPTHONLY'] = 0x2, _0x36f166['CLEARFLAG_' + 'NONE'] = 0x3, (_0x2f1878 = _0xc55b22['ShadowMode'] || (_0xc55b22['ShadowMode'] = {}))[_0x2f1878['None'] = 0x0] = 'None', _0x2f1878[_0x2f1878['Hard'] = 0x1] = 'Hard', _0x2f1878[_0x2f1878['SoftLow'] = 0x2] = 'SoftLow', _0x2f1878[_0x2f1878['SoftHigh'] = 0x3] = 'SoftHigh';
    class _0x2118d3 extends _0x2247ad['Resource'] {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x145b1e(), this['_bufferSta' + 'teInvertUV'] = new _0x145b1e();
            var _0x45638a = _0x2247ad['LayaGL']['instance'];
            this['_vertexBuf' + 'fer'] = new _0x26d078(0x40, _0x45638a['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x2118d3['_vertexDec' + 'laration'], this['_vertexBuf' + 'fer']['setData'](_0x2118d3['_vertices']['buffer']), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind'](), this['_vertexBuf' + 'ferInvertU' + 'V'] = new _0x26d078(0x40, _0x45638a['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'ferInvertU' + 'V']['vertexDecl' + 'aration'] = _0x2118d3['_vertexDec' + 'laration'], this['_vertexBuf' + 'ferInvertU' + 'V']['setData'](_0x2118d3['_verticesI' + 'nvertUV']['buffer']), this['_bufferSta' + 'teInvertUV']['bind'](), this['_bufferSta' + 'teInvertUV']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'ferInvertU' + 'V']), this['_bufferSta' + 'teInvertUV']['unBind'](), this['_setGPUMem' + 'ory'](this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_vertexBuf' + 'ferInvertU' + 'V']['_byteLengt' + 'h']);
        }
        static ['__init__']() {
            _0x2118d3['_vertexDec' + 'laration'] = new _0x2ca0b5(0x10, [new _0x50e0bd(0x0, _0x163e87['Vector4'], _0x2118d3['SCREENQUAD' + '_POSITION_' + 'UV'])]), _0x2118d3['instance'] = new _0x2118d3(), _0x2118d3['instance']['lock'] = !0x0;
        }
        ['render']() {
            var _0x39f75d = _0x2247ad['LayaGL']['instance'];
            this['_bufferSta' + 'te']['bind'](), _0x39f75d['drawArrays'](_0x39f75d['TRIANGLE_S' + 'TRIP'], 0x0, 0x4), _0x2247ad['Stat']['renderBatc' + 'hes']++;
        }
        ['renderInve' + 'rtUV']() {
            var _0x48e521 = _0x2247ad['LayaGL']['instance'];
            this['_bufferSta' + 'teInvertUV']['bind'](), _0x48e521['drawArrays'](_0x48e521['TRIANGLE_S' + 'TRIP'], 0x0, 0x4), _0x2247ad['Stat']['renderBatc' + 'hes']++;
        }
        ['destroy']() {
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'teInvertUV']['destroy'](), this['_vertexBuf' + 'ferInvertU' + 'V']['destroy'](), this['_setGPUMem' + 'ory'](0x0);
        }
    }
    _0x2118d3['SCREENQUAD' + '_POSITION_' + 'UV'] = 0x0, _0x2118d3['_vertices'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        -0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        -0x1,
        0x0,
        0x0
    ]), _0x2118d3['_verticesI' + 'nvertUV'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        0x0,
        -0x1,
        -0x1,
        0x0,
        0x1
    ]);
    class _0x10d4f1 extends _0x2247ad['Resource'] {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x145b1e(), this['_bufferSta' + 'teInvertUV'] = new _0x145b1e();
            var _0x1aac0a = _0x2247ad['LayaGL']['instance'];
            this['_vertexBuf' + 'fer'] = new _0x26d078(0x30, _0x1aac0a['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x10d4f1['_vertexDec' + 'laration'], this['_vertexBuf' + 'fer']['setData'](_0x10d4f1['_vertices']['buffer']), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind'](), this['_vertexBuf' + 'ferInvertU' + 'V'] = new _0x26d078(0x30, _0x1aac0a['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'ferInvertU' + 'V']['vertexDecl' + 'aration'] = _0x10d4f1['_vertexDec' + 'laration'], this['_vertexBuf' + 'ferInvertU' + 'V']['setData'](_0x10d4f1['_verticesI' + 'nvertUV']['buffer']), this['_bufferSta' + 'teInvertUV']['bind'](), this['_bufferSta' + 'teInvertUV']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'ferInvertU' + 'V']), this['_bufferSta' + 'teInvertUV']['unBind'](), this['_setGPUMem' + 'ory'](this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_vertexBuf' + 'ferInvertU' + 'V']['_byteLengt' + 'h']);
        }
        static ['__init__']() {
            _0x10d4f1['_vertexDec' + 'laration'] = new _0x2ca0b5(0x10, [new _0x50e0bd(0x0, _0x163e87['Vector4'], _0x10d4f1['SCREENTRIA' + 'NGLE_POSIT' + 'ION_UV'])]), _0x10d4f1['instance'] = new _0x10d4f1(), _0x10d4f1['instance']['lock'] = !0x0;
        }
        ['render']() {
            var _0x48cda1 = _0x2247ad['LayaGL']['instance'];
            this['_bufferSta' + 'te']['bind'](), _0x48cda1['drawArrays'](_0x48cda1['TRIANGLES'], 0x0, 0x3), _0x2247ad['Stat']['renderBatc' + 'hes']++;
        }
        ['renderInve' + 'rtUV']() {
            var _0x441983 = _0x2247ad['LayaGL']['instance'];
            this['_bufferSta' + 'teInvertUV']['bind'](), _0x441983['drawArrays'](_0x441983['TRIANGLES'], 0x0, 0x3), _0x2247ad['Stat']['renderBatc' + 'hes']++;
        }
        ['destroy']() {
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'teInvertUV']['destroy'](), this['_vertexBuf' + 'ferInvertU' + 'V']['destroy'](), this['_setGPUMem' + 'ory'](0x0);
        }
    }
    _0x10d4f1['SCREENTRIA' + 'NGLE_POSIT' + 'ION_UV'] = 0x0, _0x10d4f1['_vertices'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x0,
        -0x1,
        0x3,
        0x0,
        0x2,
        0x3,
        -0x1,
        0x2,
        0x0
    ]), _0x10d4f1['_verticesI' + 'nvertUV'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x1,
        -0x1,
        0x3,
        0x0,
        -0x1,
        0x3,
        -0x1,
        0x2,
        0x1
    ]);
    class _0x4bf6e1 {
        constructor() {
            this['_commandBu' + 'ffer'] = null;
        }
        static ['__init__']() {
            _0x4bf6e1['_screenSha' + 'derData'] = new _0x5e515b(), _0x4bf6e1['_screenSha' + 'der'] = _0x38ffce['find']('BlitScreen');
        }
        ['run']() {
        }
        ['recover']() {
            this['_commandBu' + 'ffer'] = null;
        }
    }
    _0x4bf6e1['SCREENTEXT' + 'URE_NAME'] = 'u_MainTex', _0x4bf6e1['SCREENTEXT' + 'UREOFFSETS' + 'CALE_NAME'] = 'u_OffsetSc' + 'ale', _0x4bf6e1['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_NAME'] = 'u_MainTex_' + 'TexelSize', _0x4bf6e1['SCREENTEXT' + 'URE_ID'] = _0x38ffce['propertyNa' + 'meToID'](_0x4bf6e1['SCREENTEXT' + 'URE_NAME']), _0x4bf6e1['SCREENTEXT' + 'UREOFFSETS' + 'CALE_ID'] = _0x38ffce['propertyNa' + 'meToID'](_0x4bf6e1['SCREENTEXT' + 'UREOFFSETS' + 'CALE_NAME']), _0x4bf6e1['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_ID'] = _0x38ffce['propertyNa' + 'meToID'](_0x4bf6e1['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_NAME']);
    class _0x1b9aa8 extends _0x4bf6e1 {
        constructor() {
            super(...arguments), this['_source'] = null, this['_dest'] = null, this['_offsetSca' + 'le'] = null, this['_shader'] = null, this['_shaderDat' + 'a'] = null, this['_subShader'] = 0x0, this['_sourceTex' + 'elSize'] = new _0x4cec8f(), this['_screenTyp' + 'e'] = 0x0;
        }
        static ['create'](_0x1f48d1, _0x59cc88, _0x4a70de = null, _0x26cc41 = null, _0x18e7c4 = null, _0x2b6683 = 0x0, _0x3ec19e = _0x1b9aa8['_SCREENTYP' + 'E_QUAD']) {
            var _0x2eb28c;
            return (_0x2eb28c = _0x1b9aa8['_pool']['length'] > 0x0 ? _0x1b9aa8['_pool']['pop']() : new _0x1b9aa8())['_source'] = _0x1f48d1, _0x2eb28c['_dest'] = _0x59cc88, _0x2eb28c['_offsetSca' + 'le'] = _0x4a70de, _0x2eb28c['_shader'] = _0x26cc41, _0x2eb28c['_shaderDat' + 'a'] = _0x18e7c4, _0x2eb28c['_subShader'] = _0x2b6683, _0x2eb28c['_screenTyp' + 'e'] = _0x3ec19e, _0x2eb28c;
        }
        ['run']() {
            var _0xcfe80a = this['_shader'] || _0x4bf6e1['_screenSha' + 'der'], _0x2482f3 = this['_shaderDat' + 'a'] || _0x4bf6e1['_screenSha' + 'derData'], _0x3ce71b = this['_dest'];
            _0x2247ad['LayaGL']['instance']['viewport'](0x0, 0x0, _0x3ce71b ? _0x3ce71b['width'] : _0x5ac2c4['clientWidt' + 'h'], _0x3ce71b ? _0x3ce71b['height'] : _0x5ac2c4['clientHeig' + 'ht']), _0x2482f3['setTexture'](_0x4bf6e1['SCREENTEXT' + 'URE_ID'], this['_source']), _0x2482f3['setVector'](_0x4bf6e1['SCREENTEXT' + 'UREOFFSETS' + 'CALE_ID'], this['_offsetSca' + 'le'] || _0x1b9aa8['_defaultOf' + 'fsetScale']), this['_sourceTex' + 'elSize']['setValue'](0x1 / this['_source']['width'], 0x1 / this['_source']['height'], this['_source']['width'], this['_source']['height']), _0x2482f3['setVector'](_0x4bf6e1['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_ID'], this['_sourceTex' + 'elSize']), _0x3ce71b && _0x3ce71b['_start']();
            for (var _0x120795 = _0xcfe80a['getSubShad' + 'erAt'](this['_subShader'])['_passes'], _0x52b3a4 = 0x0, _0x1ebadb = _0x120795['length']; _0x52b3a4 < _0x1ebadb; _0x52b3a4++) {
                var _0x4ad3c1 = _0x1b9aa8['_compileDe' + 'fine'];
                _0x2482f3['_defineDat' + 'as']['cloneTo'](_0x4ad3c1);
                var _0x50b493 = _0x120795[_0x52b3a4]['withCompil' + 'e'](_0x4ad3c1);
                switch (_0x50b493['bind'](), _0x50b493['uploadUnif' + 'orms'](_0x50b493['_materialU' + 'niformPara' + 'msMap'], _0x2482f3, !0x0), _0x50b493['uploadRend' + 'erStateBle' + 'ndDepth'](_0x2482f3), _0x50b493['uploadRend' + 'erStateFro' + 'ntFace'](_0x2482f3, !0x1, null), this['_screenTyp' + 'e']) {
                case _0x1b9aa8['_SCREENTYP' + 'E_QUAD']:
                    _0x5ac2c4['_instance']['invertY'] ? _0x2118d3['instance']['renderInve' + 'rtUV']() : _0x2118d3['instance']['render']();
                    break;
                case _0x1b9aa8['_SCREENTYP' + 'E_TRIANGLE']:
                    _0x5ac2c4['_instance']['invertY'] ? _0x10d4f1['instance']['renderInve' + 'rtUV']() : _0x10d4f1['instance']['render']();
                    break;
                default:
                    throw 'BlitScreen' + 'QuadCMD:un' + 'known\x20scre' + 'en\x20Type.';
                }
            }
            _0x3ce71b && _0x3ce71b['_end']();
        }
        ['recover']() {
            _0x1b9aa8['_pool']['push'](this), this['_source'] = null, this['_dest'] = null, this['_offsetSca' + 'le'] = null, this['_shader'] = null, this['_shaderDat' + 'a'] = null, super['recover']();
        }
    }
    _0x1b9aa8['_SCREENTYP' + 'E_QUAD'] = 0x0, _0x1b9aa8['_SCREENTYP' + 'E_TRIANGLE'] = 0x1, _0x1b9aa8['_compileDe' + 'fine'] = new _0x590056(), _0x1b9aa8['_pool'] = [], _0x1b9aa8['_defaultOf' + 'fsetScale'] = new _0x4cec8f(0x0, 0x0, 0x1, 0x1);
    class _0x17b1eb extends _0x4bf6e1 {
        constructor() {
            super(...arguments), this['_renderTex' + 'ture'] = null;
        }
        static ['create'](_0xe46068) {
            var _0x426821;
            return (_0x426821 = _0x17b1eb['_pool']['length'] > 0x0 ? _0x17b1eb['_pool']['pop']() : new _0x17b1eb())['_renderTex' + 'ture'] = _0xe46068, _0x426821;
        }
        ['run']() {
            this['_renderTex' + 'ture']['_start']();
        }
        ['recover']() {
            _0x17b1eb['_pool']['push'](this), this['_renderTex' + 'ture'] = null;
        }
    }
    _0x17b1eb['_pool'] = [];
    class _0x7ea44c extends _0x4bf6e1 {
        constructor() {
            super(...arguments), this['_shaderDat' + 'a'] = null, this['_nameID'] = 0x0, this['_texture'] = null;
        }
        static ['create'](_0x42f8a4, _0x43c87c, _0x45d7cb) {
            var _0x501d8a;
            return (_0x501d8a = _0x7ea44c['_pool']['length'] > 0x0 ? _0x7ea44c['_pool']['pop']() : new _0x7ea44c())['_shaderDat' + 'a'] = _0x42f8a4, _0x501d8a['_nameID'] = _0x43c87c, _0x501d8a['_texture'] = _0x45d7cb, _0x501d8a;
        }
        ['run']() {
            this['_shaderDat' + 'a']['setTexture'](this['_nameID'], this['_texture']);
        }
        ['recover']() {
            _0x7ea44c['_pool']['push'](this), this['_shaderDat' + 'a'] = null, this['_nameID'] = 0x0, this['_texture'] = null;
        }
    }
    _0x7ea44c['_pool'] = [];
    class _0x3cf175 {
        constructor() {
            this['_camera'] = null, this['_commands'] = [];
        }
        ['_apply']() {
            for (var _0x3fd6d6 = 0x0, _0x2f99ae = this['_commands']['length']; _0x3fd6d6 < _0x2f99ae; _0x3fd6d6++)
                this['_commands'][_0x3fd6d6]['run']();
        }
        ['setShaderD' + 'ataTexture'](_0x2232ac, _0x4e9f91, _0x364e2e) {
            this['_commands']['push'](_0x7ea44c['create'](_0x2232ac, _0x4e9f91, _0x364e2e));
        }
        ['blitScreen' + 'Quad'](_0x297db9, _0x4a5c16, _0xabeb01 = null, _0x345757 = null, _0x54c4dd = null, _0x200098 = 0x0) {
            this['_commands']['push'](_0x1b9aa8['create'](_0x297db9, _0x4a5c16, _0xabeb01, _0x345757, _0x54c4dd, _0x200098, _0x1b9aa8['_SCREENTYP' + 'E_QUAD']));
        }
        ['blitScreen' + 'Triangle'](_0x52083a, _0x49702a, _0x46200b = null, _0x2d4aac = null, _0x476927 = null, _0x5ad5cb = 0x0) {
            this['_commands']['push'](_0x1b9aa8['create'](_0x52083a, _0x49702a, _0x46200b, _0x2d4aac, _0x476927, _0x5ad5cb, _0x1b9aa8['_SCREENTYP' + 'E_TRIANGLE']));
        }
        ['setRenderT' + 'arget'](_0x320adb) {
            this['_commands']['push'](_0x17b1eb['create'](_0x320adb));
        }
        ['clear']() {
            for (var _0x1add44 = 0x0, _0x296578 = this['_commands']['length']; _0x1add44 < _0x296578; _0x1add44++)
                this['_commands'][_0x1add44]['recover']();
            this['_commands']['length'] = 0x0;
        }
    }
    class _0xeb2444 {
    }
    (_0x26ec7b = _0xc55b22['LightType'] || (_0xc55b22['LightType'] = {}))[_0x26ec7b['Directiona' + 'l'] = 0x0] = 'Directiona' + 'l', _0x26ec7b[_0x26ec7b['Spot'] = 0x1] = 'Spot', _0x26ec7b[_0x26ec7b['Point'] = 0x2] = 'Point';
    class _0x121492 extends _0x39cab4 {
        constructor() {
            super(), this['_shadowMod' + 'e'] = _0xc55b22['ShadowMode']['None'], this['_isAlterna' + 'te'] = !0x1, this['_shadowRes' + 'olution'] = 0x800, this['_shadowDis' + 'tance'] = 0x32, this['_shadowDep' + 'thBias'] = 0x1, this['_shadowNor' + 'malBias'] = 0x1, this['_shadowNea' + 'rPlane'] = 0.1, this['_shadowStr' + 'ength'] = 0x1, this['_intensity'] = 0x1, this['_intensity' + 'Color'] = new _0x43b358(), this['color'] = new _0x43b358(0x1, 0x1, 0x1), this['_lightmapB' + 'akedType'] = _0x121492['LIGHTMAPBA' + 'KEDTYPE_RE' + 'ALTIME'];
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0x1ec5d2) {
            this['_intensity'] = _0x1ec5d2;
        }
        get ['shadowMode']() {
            return this['_shadowMod' + 'e'];
        }
        set ['shadowMode'](_0xf34190) {
            this['_shadowMod' + 'e'] = _0xf34190;
        }
        get ['shadowDist' + 'ance']() {
            return this['_shadowDis' + 'tance'];
        }
        set ['shadowDist' + 'ance'](_0x376dba) {
            this['_shadowDis' + 'tance'] = _0x376dba;
        }
        get ['shadowReso' + 'lution']() {
            return this['_shadowRes' + 'olution'];
        }
        set ['shadowReso' + 'lution'](_0x1448ba) {
            this['_shadowRes' + 'olution'] = _0x1448ba;
        }
        get ['shadowDept' + 'hBias']() {
            return this['_shadowDep' + 'thBias'];
        }
        set ['shadowDept' + 'hBias'](_0x405102) {
            this['_shadowDep' + 'thBias'] = _0x405102;
        }
        get ['shadowNorm' + 'alBias']() {
            return this['_shadowNor' + 'malBias'];
        }
        set ['shadowNorm' + 'alBias'](_0x402986) {
            this['_shadowNor' + 'malBias'] = _0x402986;
        }
        get ['shadowStre' + 'ngth']() {
            return this['_shadowStr' + 'ength'];
        }
        set ['shadowStre' + 'ngth'](_0x1755a6) {
            this['_shadowStr' + 'ength'] = _0x1755a6;
        }
        get ['shadowNear' + 'Plane']() {
            return this['_shadowNea' + 'rPlane'];
        }
        set ['shadowNear' + 'Plane'](_0x334896) {
            this['_shadowNea' + 'rPlane'] = _0x334896;
        }
        get ['lightmapBa' + 'kedType']() {
            return this['_lightmapB' + 'akedType'];
        }
        set ['lightmapBa' + 'kedType'](_0x16667d) {
            this['_lightmapB' + 'akedType'] !== _0x16667d && (this['_lightmapB' + 'akedType'] = _0x16667d, this['activeInHi' + 'erarchy'] && (_0x16667d !== _0x121492['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] ? this['_addToScen' + 'e']() : this['_removeFro' + 'mScene']()));
        }
        ['_parse'](_0xd306fb, _0x4adddf) {
            super['_parse'](_0xd306fb, _0x4adddf);
            var _0x1e9fc2 = _0xd306fb['color'];
            this['color']['fromArray'](_0x1e9fc2), this['intensity'] = _0xd306fb['intensity'], this['lightmapBa' + 'kedType'] = _0xd306fb['lightmapBa' + 'kedType'];
        }
        ['_addToScen' + 'e']() {
            var _0x49d937 = this['_scene'], _0x38f1a5 = _0xb0652e['_config']['maxLightCo' + 'unt'];
            _0x49d937['_lightCoun' + 't'] < _0x38f1a5 ? (_0x49d937['_lightCoun' + 't']++, this['_addToLigh' + 'tQueue'](), this['_isAlterna' + 'te'] = !0x1) : (_0x49d937['_alternate' + 'Lights']['add'](this), this['_isAlterna' + 'te'] = !0x0, console['warn']('LightSprit' + 'e:light\x20co' + 'unt\x20has\x20la' + 'rge\x20than\x20m' + 'axLightCou' + 'nt,the\x20lat' + 'est\x20added\x20' + 'light\x20will' + '\x20be\x20ignore' + '.'));
        }
        ['_removeFro' + 'mScene']() {
            var _0x5e748b = this['_scene'];
            if (this['_isAlterna' + 'te'])
                _0x5e748b['_alternate' + 'Lights']['remove'](this);
            else {
                if (_0x5e748b['_lightCoun' + 't']--, this['_removeFro' + 'mLightQueu' + 'e'](), _0x5e748b['_alternate' + 'Lights']['_length'] > 0x0) {
                    var _0x4122ac = _0x5e748b['_alternate' + 'Lights']['shift']();
                    _0x4122ac['_addToLigh' + 'tQueue'](), _0x4122ac['_isAlterna' + 'te'] = !0x1, _0x5e748b['_lightCoun' + 't']++;
                }
            }
        }
        ['_addToLigh' + 'tQueue']() {
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
        }
        ['_onActive']() {
            super['_onActive'](), this['lightmapBa' + 'kedType'] !== _0x121492['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] && this['_addToScen' + 'e']();
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e'](), this['lightmapBa' + 'kedType'] !== _0x121492['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] && this['_removeFro' + 'mScene']();
        }
        ['_create']() {
            return new _0x121492();
        }
        get ['diffuseCol' + 'or']() {
            return console['log']('LightSprit' + 'e:\x20discard' + '\x20property,' + 'please\x20use' + '\x20color\x20pro' + 'perty\x20inst' + 'ead.'), this['color'];
        }
        set ['diffuseCol' + 'or'](_0x3e0814) {
            console['log']('LightSprit' + 'e:\x20discard' + '\x20property,' + 'please\x20use' + '\x20color\x20pro' + 'perty\x20inst' + 'ead.'), this['color'] = _0x3e0814;
        }
    }
    _0x121492['LIGHTMAPBA' + 'KEDTYPE_RE' + 'ALTIME'] = 0x0, _0x121492['LIGHTMAPBA' + 'KEDTYPE_MI' + 'XED'] = 0x1, _0x121492['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] = 0x2, (_0x4665fb = _0xc55b22['ShadowCasc' + 'adesMode'] || (_0xc55b22['ShadowCasc' + 'adesMode'] = {}))[_0x4665fb['NoCascades'] = 0x0] = 'NoCascades', _0x4665fb[_0x4665fb['TwoCascade' + 's'] = 0x1] = 'TwoCascade' + 's', _0x4665fb[_0x4665fb['FourCascad' + 'es'] = 0x2] = 'FourCascad' + 'es', function (_0x21de0a) {
        _0x21de0a[_0x21de0a['Near'] = 0x0] = 'Near', _0x21de0a[_0x21de0a['Far'] = 0x1] = 'Far', _0x21de0a[_0x21de0a['Left'] = 0x2] = 'Left', _0x21de0a[_0x21de0a['Right'] = 0x3] = 'Right', _0x21de0a[_0x21de0a['Bottom'] = 0x4] = 'Bottom', _0x21de0a[_0x21de0a['Top'] = 0x5] = 'Top';
    }(_0x22bfa5 || (_0x22bfa5 = {}));
    class _0x365e32 {
        static ['supportSha' + 'dow']() {
            return _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] || _0x2247ad['SystemUtil' + 's']['supportRen' + 'derTexture' + 'Format'](_0x2247ad['RenderText' + 'ureFormat']['Depth']);
        }
        static ['init']() {
            _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] ? _0x365e32['_shadowTex' + 'tureFormat'] = _0x2247ad['RenderText' + 'ureFormat']['ShadowMap'] : _0x365e32['_shadowTex' + 'tureFormat'] = _0x2247ad['RenderText' + 'ureFormat']['Depth'];
        }
        static ['getTempora' + 'ryShadowTe' + 'xture'](_0x34efd5, _0x13cb7d, _0xb2cfc3) {
            var _0x32f9b6 = _0x13c6e8['createFrom' + 'Pool'](_0x34efd5, _0x13cb7d, _0x365e32['_shadowTex' + 'tureFormat'], _0xb2cfc3);
            return _0x32f9b6['filterMode'] = _0x2247ad['FilterMode']['Bilinear'], _0x32f9b6['wrapModeU'] = _0x2247ad['WarpMode']['Clamp'], _0x32f9b6['wrapModeV'] = _0x2247ad['WarpMode']['Clamp'], _0x32f9b6;
        }
        static ['getShadowB' + 'ias'](_0x28d03d, _0x56fbcc, _0x288466, _0xf5c537) {
            var _0x2a912e;
            _0x28d03d['_lightType'] == _0xc55b22['LightType']['Directiona' + 'l'] ? _0x2a912e = 0x2 / _0x56fbcc['elements'][0x0] : _0x28d03d['_lightType'] == _0xc55b22['LightType']['Spot'] ? _0x2a912e = Math['tan'](0.5 * _0x28d03d['spotAngle'] * _0x40af95['Deg2Rad']) * _0x28d03d['range'] : (console['warn']('ShadowUtil' + 's:Only\x20spo' + 't\x20and\x20dire' + 'ctional\x20sh' + 'adow\x20caste' + 'rs\x20are\x20sup' + 'ported\x20now' + '.'), _0x2a912e = 0x0);
            var _0x290cec = _0x2a912e / _0x288466, _0x1b4590 = -_0x28d03d['_shadowDep' + 'thBias'] * _0x290cec, _0x48f57d = -_0x28d03d['_shadowNor' + 'malBias'] * _0x290cec;
            if (_0x28d03d['shadowMode'] == _0xc55b22['ShadowMode']['SoftHigh']) {
                const _0x33c5be = 2.5;
                _0x1b4590 *= _0x33c5be, _0x48f57d *= _0x33c5be;
            }
            _0xf5c537['setValue'](_0x1b4590, _0x48f57d, 0x0, 0x0);
        }
        static ['getCameraF' + 'rustumPlan' + 'es'](_0x53391c, _0x46d2c1) {
            _0x183104['getPlanesF' + 'romMatrix'](_0x53391c, _0x46d2c1[_0x22bfa5['Near']], _0x46d2c1[_0x22bfa5['Far']], _0x46d2c1[_0x22bfa5['Left']], _0x46d2c1[_0x22bfa5['Right']], _0x46d2c1[_0x22bfa5['Top']], _0x46d2c1[_0x22bfa5['Bottom']]);
        }
        static ['getFarWith' + 'Radius'](_0xcc365b, _0x27ff54) {
            return Math['sqrt'](_0xcc365b * _0xcc365b / _0x27ff54);
        }
        static ['getCascade' + 'sSplitDist' + 'ance'](_0x50a7fe, _0x305cb1, _0x526e03, _0x3f2ebc, _0x42d27a, _0x5b235b, _0x3801c1, _0x3072c8) {
            _0x3072c8[0x0] = _0x526e03;
            var _0x34c75f = _0x3f2ebc - _0x526e03, _0x7bdc96 = Math['tan'](0.5 * _0x42d27a), _0x1313bd = 0x1 + _0x7bdc96 * _0x7bdc96 * (_0x5b235b * _0x5b235b + 0x1);
            switch (_0x3801c1) {
            case _0xc55b22['ShadowCasc' + 'adesMode']['NoCascades']:
                _0x3072c8[0x1] = _0x365e32['getFarWith' + 'Radius'](_0x3f2ebc, _0x1313bd);
                break;
            case _0xc55b22['ShadowCasc' + 'adesMode']['TwoCascade' + 's']:
                _0x3072c8[0x1] = _0x365e32['getFarWith' + 'Radius'](_0x526e03 + _0x34c75f * _0x50a7fe, _0x1313bd), _0x3072c8[0x2] = _0x365e32['getFarWith' + 'Radius'](_0x3f2ebc, _0x1313bd);
                break;
            case _0xc55b22['ShadowCasc' + 'adesMode']['FourCascad' + 'es']:
                _0x3072c8[0x1] = _0x365e32['getFarWith' + 'Radius'](_0x526e03 + _0x34c75f * _0x305cb1['x'], _0x1313bd), _0x3072c8[0x2] = _0x365e32['getFarWith' + 'Radius'](_0x526e03 + _0x34c75f * _0x305cb1['y'], _0x1313bd), _0x3072c8[0x3] = _0x365e32['getFarWith' + 'Radius'](_0x526e03 + _0x34c75f * _0x305cb1['z'], _0x1313bd), _0x3072c8[0x4] = _0x365e32['getFarWith' + 'Radius'](_0x3f2ebc, _0x1313bd);
            }
        }
        static ['applySlice' + 'Transform'](_0x1f45d3, _0x331ff5, _0x367f95, _0x53290b, _0x992547) {
            var _0x5883ca = _0x365e32['_tempMatri' + 'x0']['elements'], _0x5bd1aa = 0x1 / _0x331ff5, _0x432767 = 0x1 / _0x367f95;
            _0x5883ca[0x0] = _0x1f45d3['resolution'] * _0x5bd1aa, _0x5883ca[0x5] = _0x1f45d3['resolution'] * _0x432767, _0x5883ca[0xc] = _0x1f45d3['offsetX'] * _0x5bd1aa, _0x5883ca[0xd] = _0x1f45d3['offsetY'] * _0x432767, _0x5883ca[0x1] = _0x5883ca[0x2] = _0x5883ca[0x2] = _0x5883ca[0x4] = _0x5883ca[0x6] = _0x5883ca[0x7] = _0x5883ca[0x8] = _0x5883ca[0x9] = _0x5883ca[0xb] = _0x5883ca[0xe] = 0x0, _0x5883ca[0xa] = _0x5883ca[0xf] = 0x1;
            var _0x3863f1 = 0x10 * _0x53290b;
            _0x101904['_mulMatrix' + 'Array'](_0x5883ca, _0x992547, _0x3863f1, _0x992547, _0x3863f1);
        }
        static ['getDirecti' + 'onLightSha' + 'dowCullPla' + 'nes'](_0x4644b2, _0x22050b, _0x5ba22f, _0x224d61, _0x53d9e4, _0x14650d) {
            var _0x327a98 = _0x365e32['_frustumCo' + 'rners'], _0x347781 = _0x365e32['_backPlane' + 'Faces'], _0x4d8b6c = _0x365e32['_frustumPl' + 'aneNeighbo' + 'rs'], _0x1a7e10 = _0x365e32['_frustumTw' + 'oPlaneCorn' + 'ers'], _0x371f3a = _0x365e32['_edgePlane' + 'Point2'], _0x38d564 = _0x14650d['cullPlanes'], _0x5793ad = _0x4644b2[_0x22bfa5['Near']], _0x265e0c = _0x4644b2[_0x22bfa5['Far']], _0x157a99 = _0x4644b2[_0x22bfa5['Left']], _0x47ba80 = _0x4644b2[_0x22bfa5['Right']], _0x1642be = _0x4644b2[_0x22bfa5['Bottom']], _0x168336 = _0x4644b2[_0x22bfa5['Top']], _0x4ba594 = _0x5ba22f[_0x22050b] - _0x224d61, _0xaa5636 = _0x365e32['_adjustNea' + 'rPlane'], _0x236819 = _0x365e32['_adjustFar' + 'Plane'];
            _0x5793ad['normal']['cloneTo'](_0xaa5636['normal']), _0x265e0c['normal']['cloneTo'](_0x236819['normal']), _0xaa5636['distance'] = _0x5793ad['distance'] - _0x4ba594, _0x236819['distance'] = Math['min'](-_0x5793ad['distance'] + _0x14650d['sphereCent' + 'erZ'] + _0x14650d['splitBound' + 'Sphere']['radius'], _0x265e0c['distance']), _0x183104['get3PlaneI' + 'nterPoint'](_0xaa5636, _0x1642be, _0x47ba80, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right']]), _0x183104['get3PlaneI' + 'nterPoint'](_0xaa5636, _0x168336, _0x47ba80, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht']]), _0x183104['get3PlaneI' + 'nterPoint'](_0xaa5636, _0x168336, _0x157a99, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't']]), _0x183104['get3PlaneI' + 'nterPoint'](_0xaa5636, _0x1642be, _0x157a99, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left']]), _0x183104['get3PlaneI' + 'nterPoint'](_0x236819, _0x1642be, _0x47ba80, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight']]), _0x183104['get3PlaneI' + 'nterPoint'](_0x236819, _0x168336, _0x47ba80, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't']]), _0x183104['get3PlaneI' + 'nterPoint'](_0x236819, _0x168336, _0x157a99, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['FarTopLeft']]), _0x183104['get3PlaneI' + 'nterPoint'](_0x236819, _0x1642be, _0x157a99, _0x327a98[_0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft']]);
            for (var _0xf66507 = 0x0, _0x5d2838 = 0x0; _0x5d2838 < 0x6; _0x5d2838++) {
                var _0x5ca30a;
                switch (_0x5d2838) {
                case _0x22bfa5['Near']:
                    _0x5ca30a = _0xaa5636;
                    break;
                case _0x22bfa5['Far']:
                    _0x5ca30a = _0x236819;
                    break;
                default:
                    _0x5ca30a = _0x4644b2[_0x5d2838];
                }
                _0x43b358['dot'](_0x5ca30a['normal'], _0x53d9e4) < 0x0 && (_0x5ca30a['cloneTo'](_0x38d564[_0xf66507]), _0x347781[_0xf66507] = _0x5d2838, _0xf66507++);
            }
            var _0x3ea5c7 = _0xf66507;
            for (_0x5d2838 = 0x0; _0x5d2838 < _0xf66507; _0x5d2838++)
                for (var _0x561a24 = _0x347781[_0x5d2838], _0x594fe7 = _0x4d8b6c[_0x561a24], _0x3f3838 = 0x0; _0x3f3838 < 0x4; _0x3f3838++) {
                    for (var _0x17ffc1 = _0x594fe7[_0x3f3838], _0x10d54b = !0x0, _0x1f5754 = 0x0; _0x1f5754 < _0xf66507; _0x1f5754++)
                        if (_0x17ffc1 == _0x347781[_0x1f5754]) {
                            _0x10d54b = !0x1;
                            break;
                        }
                    if (_0x10d54b) {
                        var _0x255a1d = _0x1a7e10[_0x561a24][_0x17ffc1], _0x5498d0 = _0x327a98[_0x255a1d[0x0]], _0x4bfa49 = _0x327a98[_0x255a1d[0x1]];
                        _0x43b358['add'](_0x5498d0, _0x53d9e4, _0x371f3a), _0x458084['createPlan' + 'eBy3P'](_0x5498d0, _0x4bfa49, _0x371f3a, _0x38d564[_0x3ea5c7++]);
                    }
                }
            _0x14650d['cullPlaneC' + 'ount'] = _0x3ea5c7;
        }
        static ['getBoundSp' + 'hereByFrus' + 'tum'](_0xa1e8f2, _0x1648e7, _0x534964, _0x514034, _0x55e5af, _0x486188, _0x12234e) {
            var _0xee93cf, _0x5f2fe3, _0x370b3c = Math['sqrt'](0x1 + _0x514034 * _0x514034) * Math['tan'](_0x534964 / 0x2), _0x153c4b = _0x370b3c * _0x370b3c, _0x1f8070 = _0x1648e7 - _0xa1e8f2, _0x52e06a = _0x1648e7 + _0xa1e8f2;
            _0x153c4b > _0x1f8070 / _0x52e06a ? (_0xee93cf = _0x1648e7, _0x5f2fe3 = _0x1648e7 * _0x370b3c) : (_0xee93cf = 0.5 * _0x52e06a * (0x1 + _0x153c4b), _0x5f2fe3 = 0.5 * Math['sqrt'](_0x1f8070 * _0x1f8070 + 0x2 * (_0x1648e7 * _0x1648e7 + _0xa1e8f2 * _0xa1e8f2) * _0x153c4b + _0x52e06a * _0x52e06a * _0x153c4b * _0x153c4b));
            var _0x559330 = _0x12234e['center'];
            return _0x12234e['radius'] = _0x5f2fe3, _0x43b358['scale'](_0x486188, _0xee93cf, _0x559330), _0x43b358['add'](_0x55e5af, _0x559330, _0x559330), _0xee93cf;
        }
        static ['getMaxTile' + 'Resolution' + 'InAtlas'](_0x2edc89, _0x193fe7, _0x3e598f) {
            for (var _0x3e8658 = Math['min'](_0x2edc89, _0x193fe7), _0x4a1cae = Math['floor'](_0x2edc89 / _0x3e8658) * Math['floor'](_0x193fe7 / _0x3e8658); _0x4a1cae < _0x3e598f;)
                _0x3e8658 = Math['floor'](_0x3e8658 >> 0x1), _0x4a1cae = Math['floor'](_0x2edc89 / _0x3e8658) * Math['floor'](_0x193fe7 / _0x3e8658);
            return _0x3e8658;
        }
        static ['getDirecti' + 'onalLightM' + 'atrices'](_0x591c51, _0x1dc779, _0x1cf7bd, _0x364afe, _0x4659aa, _0x548787, _0x178348, _0x3a28b8) {
            var _0x5bbae0 = _0x178348['splitBound' + 'Sphere'], _0x2e8109 = _0x5bbae0['center'], _0x45d5e6 = _0x5bbae0['radius'], _0x5109fb = _0x548787 / 0x2, _0x394100 = _0x45d5e6 * _0x5109fb / (_0x5109fb - _0x365e32['atlasBorde' + 'rSize']), _0x555023 = 0x2 * _0x394100, _0x5e992d = _0x548787 / _0x555023, _0x95208e = _0x555023 / _0x548787, _0x1881c5 = Math['ceil'](_0x43b358['dot'](_0x2e8109, _0x591c51) * _0x5e992d) * _0x95208e, _0x4b0a7c = Math['ceil'](_0x43b358['dot'](_0x2e8109, _0x1dc779) * _0x5e992d) * _0x95208e, _0x2a1a60 = _0x43b358['dot'](_0x2e8109, _0x1cf7bd);
            _0x2e8109['x'] = _0x591c51['x'] * _0x1881c5 + _0x1dc779['x'] * _0x4b0a7c + _0x1cf7bd['x'] * _0x2a1a60, _0x2e8109['y'] = _0x591c51['y'] * _0x1881c5 + _0x1dc779['y'] * _0x4b0a7c + _0x1cf7bd['y'] * _0x2a1a60, _0x2e8109['z'] = _0x591c51['z'] * _0x1881c5 + _0x1dc779['z'] * _0x4b0a7c + _0x1cf7bd['z'] * _0x2a1a60;
            var _0x539004 = _0x178348['position'], _0x34712b = _0x178348['viewMatrix'], _0x3c74a4 = _0x178348['projection' + 'Matrix'], _0x46dcd3 = _0x178348['viewProjec' + 'tMatrix'];
            _0x178348['resolution'] = _0x548787, _0x178348['offsetX'] = _0x364afe % 0x2 * _0x548787, _0x178348['offsetY'] = Math['floor'](_0x364afe / 0x2) * _0x548787, _0x43b358['scale'](_0x1cf7bd, _0x45d5e6 + _0x4659aa, _0x539004), _0x43b358['subtract'](_0x2e8109, _0x539004, _0x539004), _0x334e9d['createLook' + 'At'](_0x539004, _0x2e8109, _0x591c51, _0x34712b), _0x334e9d['createOrth' + 'oOffCenter'](-_0x394100, _0x394100, -_0x394100, _0x394100, 0x0, 0x2 * _0x45d5e6 + _0x4659aa, _0x3c74a4), _0x334e9d['multiply'](_0x3c74a4, _0x34712b, _0x46dcd3), _0x101904['_mulMatrix' + 'Array'](_0x365e32['_shadowMap' + 'ScaleOffse' + 'tMatrix']['elements'], _0x46dcd3['elements'], 0x0, _0x3a28b8, 0x10 * _0x364afe);
        }
        static ['prepareSha' + 'dowReceive' + 'rShaderVal' + 'ues'](_0x2c83c0, _0x29dd27, _0x22e907, _0x108dcc, _0x3d351f, _0x55d32b, _0x310f46, _0x1bbf30, _0x3f2c34) {
            if (_0x55d32b['setValue'](0x1 / _0x29dd27, 0x1 / _0x22e907, _0x29dd27, _0x22e907), _0x310f46['setValue'](_0x2c83c0['_shadowStr' + 'ength'], 0x0, 0x0, 0x0), _0x3d351f > 0x1) {
                const _0x5aeb2d = 0x10;
                for (var _0x32524a = _0x3d351f * _0x5aeb2d, _0x54e859 = 0x4 * _0x5aeb2d; _0x32524a < _0x54e859; _0x32524a++)
                    _0x1bbf30[_0x32524a] = 0x0;
                for (_0x32524a = 0x0; _0x32524a < _0x3d351f; _0x32524a++) {
                    var _0x415370 = _0x108dcc[_0x32524a]['splitBound' + 'Sphere'], _0xd2365a = _0x415370['center'], _0x4ea534 = _0x415370['radius'], _0x4b0e62 = 0x4 * _0x32524a;
                    _0x3f2c34[_0x4b0e62] = _0xd2365a['x'], _0x3f2c34[_0x4b0e62 + 0x1] = _0xd2365a['y'], _0x3f2c34[_0x4b0e62 + 0x2] = _0xd2365a['z'], _0x3f2c34[_0x4b0e62 + 0x3] = _0x4ea534 * _0x4ea534;
                }
                const _0x3c8ae7 = 0x4;
                for (_0x32524a = _0x3d351f * _0x3c8ae7, _0x54e859 = 0x4 * _0x3c8ae7; _0x32524a < _0x54e859; _0x32524a++)
                    _0x3f2c34[_0x32524a] = 0x0;
            }
        }
    }
    _0x365e32['_tempMatri' + 'x0'] = new _0x334e9d(), _0x365e32['_shadowMap' + 'ScaleOffse' + 'tMatrix'] = new _0x334e9d(0.5, 0x0, 0x0, 0x0, 0x0, 0.5, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1), _0x365e32['_frustumCo' + 'rners'] = [
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358()
    ], _0x365e32['_adjustNea' + 'rPlane'] = new _0x458084(new _0x43b358()), _0x365e32['_adjustFar' + 'Plane'] = new _0x458084(new _0x43b358()), _0x365e32['_backPlane' + 'Faces'] = new Array(0x5), _0x365e32['_edgePlane' + 'Point2'] = new _0x43b358(), _0x365e32['_frustumPl' + 'aneNeighbo' + 'rs'] = [
        [
            _0x22bfa5['Left'],
            _0x22bfa5['Right'],
            _0x22bfa5['Top'],
            _0x22bfa5['Bottom']
        ],
        [
            _0x22bfa5['Left'],
            _0x22bfa5['Right'],
            _0x22bfa5['Top'],
            _0x22bfa5['Bottom']
        ],
        [
            _0x22bfa5['Near'],
            _0x22bfa5['Far'],
            _0x22bfa5['Top'],
            _0x22bfa5['Bottom']
        ],
        [
            _0x22bfa5['Near'],
            _0x22bfa5['Far'],
            _0x22bfa5['Top'],
            _0x22bfa5['Bottom']
        ],
        [
            _0x22bfa5['Near'],
            _0x22bfa5['Far'],
            _0x22bfa5['Left'],
            _0x22bfa5['Right']
        ],
        [
            _0x22bfa5['Near'],
            _0x22bfa5['Far'],
            _0x22bfa5['Left'],
            _0x22bfa5['Right']
        ]
    ], _0x365e32['_frustumTw' + 'oPlaneCorn' + 'ers'] = [
        [
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left'],
                _0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht'],
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right'],
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't'],
                _0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht']
            ]
        ],
        [
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarTopLeft'],
                _0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight'],
                _0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft'],
                _0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't'],
                _0xc55b22['FrustumCor' + 'ner']['FarTopLeft']
            ]
        ],
        [
            [
                _0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't'],
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft'],
                _0xc55b22['FrustumCor' + 'ner']['FarTopLeft']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left'],
                _0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarTopLeft'],
                _0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't']
            ]
        ],
        [
            [
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right'],
                _0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't'],
                _0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight'],
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht'],
                _0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't']
            ]
        ],
        [
            [
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left'],
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight'],
                _0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarBottomL' + 'eft'],
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Left']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearBottom' + 'Right'],
                _0xc55b22['FrustumCor' + 'ner']['FarBottomR' + 'ight']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ]
        ],
        [
            [
                _0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht'],
                _0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarTopLeft'],
                _0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['nearTopLef' + 't'],
                _0xc55b22['FrustumCor' + 'ner']['FarTopLeft']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['FarTopRigh' + 't'],
                _0xc55b22['FrustumCor' + 'ner']['nearTopRig' + 'ht']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ],
            [
                _0xc55b22['FrustumCor' + 'ner']['unknown'],
                _0xc55b22['FrustumCor' + 'ner']['unknown']
            ]
        ]
    ], _0x365e32['atlasBorde' + 'rSize'] = 0x4, (_0x2b7505 = _0xc55b22['CameraClea' + 'rFlags'] || (_0xc55b22['CameraClea' + 'rFlags'] = {}))[_0x2b7505['SolidColor'] = 0x0] = 'SolidColor', _0x2b7505[_0x2b7505['Sky'] = 0x1] = 'Sky', _0x2b7505[_0x2b7505['DepthOnly'] = 0x2] = 'DepthOnly', _0x2b7505[_0x2b7505['Nothing'] = 0x3] = 'Nothing';
    class _0x14e627 extends _0x36f166 {
        constructor(_0x26795c = 0x0, _0x108062 = 0.3, _0x4d2175 = 0x3e8) {
            super(_0x108062, _0x4d2175), this['_updateVie' + 'wMatrix'] = !0x0, this['_postProce' + 'ss'] = null, this['_enableHDR'] = !0x1, this['_viewportP' + 'arams'] = new _0x4cec8f(), this['_projectio' + 'nParams'] = new _0x4cec8f(), this['_offScreen' + 'RenderText' + 'ure'] = null, this['_internalR' + 'enderTextu' + 're'] = null, this['_postProce' + 'ssCommandB' + 'uffers'] = [], this['_clusterPl' + 'aneCacheFl' + 'ag'] = new _0x2d45ed(-0x1, -0x1), this['_screenOff' + 'setScale'] = new _0x4cec8f(), this['enableRend' + 'er'] = !0x0, this['clearFlag'] = _0xc55b22['CameraClea' + 'rFlags']['SolidColor'], this['_viewMatri' + 'x'] = new _0x334e9d(), this['_projectio' + 'nMatrix'] = new _0x334e9d(), this['_projectio' + 'nViewMatri' + 'x'] = new _0x334e9d(), this['_viewport'] = new _0x4c9d87(0x0, 0x0, 0x0, 0x0), this['_normalize' + 'dViewport'] = new _0x4c9d87(0x0, 0x0, 0x1, 0x1), this['_aspectRat' + 'io'] = _0x26795c, this['_boundFrus' + 'tum'] = new _0x183104(new _0x334e9d()), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (this['_boundFrus' + 'tumBuffer'] = new Float32Array(0x18)), this['_calculate' + 'Projection' + 'Matrix'](), _0x2247ad['Laya']['stage']['on'](_0x2247ad['Event']['RESIZE'], this, this['_onScreenS' + 'izeChanged']), this['transform']['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        get ['aspectRati' + 'o']() {
            if (0x0 === this['_aspectRat' + 'io']) {
                var _0x3921ba = this['viewport'];
                return _0x3921ba['width'] / _0x3921ba['height'];
            }
            return this['_aspectRat' + 'io'];
        }
        set ['aspectRati' + 'o'](_0x2dde31) {
            if (_0x2dde31 < 0x0)
                throw new Error('Camera:\x20th' + 'e\x20aspect\x20r' + 'atio\x20has\x20t' + 'o\x20be\x20a\x20pos' + 'itive\x20real' + '\x20number.');
            this['_aspectRat' + 'io'] = _0x2dde31, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['viewport']() {
            return this['_offScreen' + 'RenderText' + 'ure'] ? this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], this['_offScreen' + 'RenderText' + 'ure']['width'], this['_offScreen' + 'RenderText' + 'ure']['height']) : this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], _0x5ac2c4['clientWidt' + 'h'], _0x5ac2c4['clientHeig' + 'ht']), this['_viewport'];
        }
        set ['viewport'](_0x4cb9f) {
            var _0x4b2679, _0x365a1f;
            this['_offScreen' + 'RenderText' + 'ure'] ? (_0x4b2679 = this['_offScreen' + 'RenderText' + 'ure']['width'], _0x365a1f = this['_offScreen' + 'RenderText' + 'ure']['height']) : (_0x4b2679 = _0x5ac2c4['clientWidt' + 'h'], _0x365a1f = _0x5ac2c4['clientHeig' + 'ht']), this['_normalize' + 'dViewport']['x'] = _0x4cb9f['x'] / _0x4b2679, this['_normalize' + 'dViewport']['y'] = _0x4cb9f['y'] / _0x365a1f, this['_normalize' + 'dViewport']['width'] = _0x4cb9f['width'] / _0x4b2679, this['_normalize' + 'dViewport']['height'] = _0x4cb9f['height'] / _0x365a1f, this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], _0x4b2679, _0x365a1f), this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['normalized' + 'Viewport']() {
            return this['_normalize' + 'dViewport'];
        }
        set ['normalized' + 'Viewport'](_0x29324e) {
            var _0x222d60, _0x4e993d;
            this['_offScreen' + 'RenderText' + 'ure'] ? (_0x222d60 = this['_offScreen' + 'RenderText' + 'ure']['width'], _0x4e993d = this['_offScreen' + 'RenderText' + 'ure']['height']) : (_0x222d60 = _0x5ac2c4['clientWidt' + 'h'], _0x4e993d = _0x5ac2c4['clientHeig' + 'ht']), this['_normalize' + 'dViewport'] !== _0x29324e && _0x29324e['cloneTo'](this['_normalize' + 'dViewport']), this['_calculati' + 'onViewport'](_0x29324e, _0x222d60, _0x4e993d), this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['viewMatrix']() {
            if (this['_updateVie' + 'wMatrix']) {
                var _0x361ded = this['transform']['getWorldLo' + 'ssyScale'](), _0x26c239 = _0x361ded['x'], _0x311f47 = _0x361ded['y'], _0x5450e1 = _0x361ded['z'], _0x1510df = this['_viewMatri' + 'x']['elements'];
                this['transform']['worldMatri' + 'x']['cloneTo'](this['_viewMatri' + 'x']), _0x1510df[0x0] /= _0x26c239, _0x1510df[0x1] /= _0x26c239, _0x1510df[0x2] /= _0x26c239, _0x1510df[0x4] /= _0x311f47, _0x1510df[0x5] /= _0x311f47, _0x1510df[0x6] /= _0x311f47, _0x1510df[0x8] /= _0x5450e1, _0x1510df[0x9] /= _0x5450e1, _0x1510df[0xa] /= _0x5450e1, this['_viewMatri' + 'x']['invert'](this['_viewMatri' + 'x']), this['_updateVie' + 'wMatrix'] = !0x1;
            }
            return this['_viewMatri' + 'x'];
        }
        get ['projection' + 'Matrix']() {
            return this['_projectio' + 'nMatrix'];
        }
        set ['projection' + 'Matrix'](_0x247df1) {
            this['_projectio' + 'nMatrix'] = _0x247df1, this['_useUserPr' + 'ojectionMa' + 'trix'] = !0x0;
        }
        get ['projection' + 'ViewMatrix']() {
            return _0x334e9d['multiply'](this['projection' + 'Matrix'], this['viewMatrix'], this['_projectio' + 'nViewMatri' + 'x']), this['_projectio' + 'nViewMatri' + 'x'];
        }
        get ['boundFrust' + 'um']() {
            if (this['_boundFrus' + 'tum']['matrix'] = this['projection' + 'ViewMatrix'], _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x5e4e49 = this['_boundFrus' + 'tum']['near'], _0x1d9a64 = this['_boundFrus' + 'tum']['far'], _0x23f41b = this['_boundFrus' + 'tum']['left'], _0x3ab109 = this['_boundFrus' + 'tum']['right'], _0x5f0390 = this['_boundFrus' + 'tum']['top'], _0x174f1e = this['_boundFrus' + 'tum']['bottom'], _0x28851f = _0x5e4e49['normal'], _0x278fba = _0x1d9a64['normal'], _0x1af1b4 = _0x23f41b['normal'], _0x53cf67 = _0x3ab109['normal'], _0x199087 = _0x5f0390['normal'], _0x2aa8e1 = _0x174f1e['normal'], _0x4e8a5c = this['_boundFrus' + 'tumBuffer'];
                _0x4e8a5c[0x0] = _0x28851f['x'], _0x4e8a5c[0x1] = _0x28851f['y'], _0x4e8a5c[0x2] = _0x28851f['z'], _0x4e8a5c[0x3] = _0x5e4e49['distance'], _0x4e8a5c[0x4] = _0x278fba['x'], _0x4e8a5c[0x5] = _0x278fba['y'], _0x4e8a5c[0x6] = _0x278fba['z'], _0x4e8a5c[0x7] = _0x1d9a64['distance'], _0x4e8a5c[0x8] = _0x1af1b4['x'], _0x4e8a5c[0x9] = _0x1af1b4['y'], _0x4e8a5c[0xa] = _0x1af1b4['z'], _0x4e8a5c[0xb] = _0x23f41b['distance'], _0x4e8a5c[0xc] = _0x53cf67['x'], _0x4e8a5c[0xd] = _0x53cf67['y'], _0x4e8a5c[0xe] = _0x53cf67['z'], _0x4e8a5c[0xf] = _0x3ab109['distance'], _0x4e8a5c[0x10] = _0x199087['x'], _0x4e8a5c[0x11] = _0x199087['y'], _0x4e8a5c[0x12] = _0x199087['z'], _0x4e8a5c[0x13] = _0x5f0390['distance'], _0x4e8a5c[0x14] = _0x2aa8e1['x'], _0x4e8a5c[0x15] = _0x2aa8e1['y'], _0x4e8a5c[0x16] = _0x2aa8e1['z'], _0x4e8a5c[0x17] = _0x174f1e['distance'];
            }
            return this['_boundFrus' + 'tum'];
        }
        get ['renderTarg' + 'et']() {
            return this['_offScreen' + 'RenderText' + 'ure'];
        }
        set ['renderTarg' + 'et'](_0x2075fb) {
            var _0x2de841 = this['_offScreen' + 'RenderText' + 'ure'];
            _0x2de841 !== _0x2075fb && (_0x2de841 && (_0x2de841['_isCameraT' + 'arget'] = !0x1), _0x2075fb && (_0x2075fb['_isCameraT' + 'arget'] = !0x0), this['_offScreen' + 'RenderText' + 'ure'] = _0x2075fb, this['_calculate' + 'Projection' + 'Matrix']());
        }
        get ['postProces' + 's']() {
            return this['_postProce' + 'ss'];
        }
        set ['postProces' + 's'](_0x2db215) {
            this['_postProce' + 'ss'] = _0x2db215;
            var _0x5a3872 = new _0x3cf175();
            this['addCommand' + 'Buffer'](_0x14e627['CAMERAEVEN' + 'T_POSTPROC' + 'ESS'], _0x5a3872), _0x2db215['_init'](this, _0x5a3872);
        }
        get ['enableHDR']() {
            return this['_enableHDR'];
        }
        set ['enableHDR'](_0x178470) {
            !_0x178470 || _0x2247ad['SystemUtil' + 's']['supportRen' + 'derTexture' + 'Format'](_0x2247ad['RenderText' + 'ureFormat']['R16G16B16A' + '16']) ? this['_enableHDR'] = _0x178470 : console['warn']('Camera:can' + '\x27t\x20enable\x20' + 'HDR\x20in\x20thi' + 's\x20device.');
        }
        ['_calculati' + 'onViewport'](_0x36b4cd, _0x108a9a, _0x37a8f6) {
            var _0x357ba4 = _0x36b4cd['x'] * _0x108a9a, _0xbe3c84 = _0x36b4cd['y'] * _0x37a8f6, _0x38a17e = _0x357ba4 + Math['max'](_0x36b4cd['width'] * _0x108a9a, 0x0), _0x42ab36 = _0xbe3c84 + Math['max'](_0x36b4cd['height'] * _0x37a8f6, 0x0), _0x4f098c = Math['ceil'](_0x357ba4), _0x598f91 = Math['ceil'](_0xbe3c84), _0x84be3d = Math['floor'](_0x38a17e), _0x38f307 = Math['floor'](_0x42ab36), _0x30f3af = _0x4f098c - _0x357ba4 >= 0.5 ? Math['floor'](_0x357ba4) : _0x4f098c, _0x3b0d95 = _0x598f91 - _0xbe3c84 >= 0.5 ? Math['floor'](_0xbe3c84) : _0x598f91, _0x44f954 = _0x38a17e - _0x84be3d >= 0.5 ? Math['ceil'](_0x38a17e) : _0x84be3d, _0x2c8177 = _0x42ab36 - _0x38f307 >= 0.5 ? Math['ceil'](_0x42ab36) : _0x38f307;
            this['_viewport']['x'] = _0x30f3af, this['_viewport']['y'] = _0x3b0d95, this['_viewport']['width'] = _0x44f954 - _0x30f3af, this['_viewport']['height'] = _0x2c8177 - _0x3b0d95;
        }
        ['_calculate' + 'Projection' + 'Matrix']() {
            if (!this['_useUserPr' + 'ojectionMa' + 'trix']) {
                if (this['_orthograp' + 'hic']) {
                    var _0x4436a7 = 0.5 * this['orthograph' + 'icVertical' + 'Size'], _0x187c44 = _0x4436a7 * this['aspectRati' + 'o'];
                    _0x334e9d['createOrth' + 'oOffCenter'](-_0x187c44, _0x187c44, -_0x4436a7, _0x4436a7, this['nearPlane'], this['farPlane'], this['_projectio' + 'nMatrix']);
                } else
                    _0x334e9d['createPers' + 'pective'](3.1416 * this['fieldOfVie' + 'w'] / 0xb4, this['aspectRati' + 'o'], this['nearPlane'], this['farPlane'], this['_projectio' + 'nMatrix']);
            }
        }
        ['_isLayerVi' + 'sible'](_0x112df5) {
            return 0x0 != (Math['pow'](0x2, _0x112df5) & this['cullingMas' + 'k']);
        }
        ['_onTransfo' + 'rmChanged'](_0x40ae96) {
            (_0x40ae96 &= _0x17c9f4['TRANSFORM_' + 'WORLDMATRI' + 'X']) && (this['_updateVie' + 'wMatrix'] = !0x0);
        }
        ['_parse'](_0x405774, _0x14d67c) {
            super['_parse'](_0x405774, _0x14d67c);
            var _0x48f1d0 = _0x405774['clearFlag'];
            void 0x0 !== _0x48f1d0 && (this['clearFlag'] = _0x48f1d0);
            var _0x20c9c9 = _0x405774['viewport'];
            this['normalized' + 'Viewport'] = new _0x4c9d87(_0x20c9c9[0x0], _0x20c9c9[0x1], _0x20c9c9[0x2], _0x20c9c9[0x3]);
            var _0x254f33 = _0x405774['enableHDR'];
            void 0x0 !== _0x254f33 && (this['enableHDR'] = _0x254f33);
        }
        ['_getCanvas' + 'Width']() {
            return this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure']['width'] : _0x5ac2c4['clientWidt' + 'h'];
        }
        ['_getCanvas' + 'Height']() {
            return this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure']['height'] : _0x5ac2c4['clientHeig' + 'ht'];
        }
        ['_getRender' + 'Texture']() {
            return this['_internalR' + 'enderTextu' + 're'] || this['_offScreen' + 'RenderText' + 'ure'];
        }
        ['_needInter' + 'nalRenderT' + 'exture']() {
            return !(!this['_postProce' + 'ss'] && !this['_enableHDR']);
        }
        ['_applyPost' + 'ProcessCom' + 'mandBuffer' + 's']() {
            for (var _0x5c028e = 0x0, _0x195d70 = this['_postProce' + 'ssCommandB' + 'uffers']['length']; _0x5c028e < _0x195d70; _0x5c028e++)
                this['_postProce' + 'ssCommandB' + 'uffers'][_0x5c028e]['_apply']();
        }
        ['_getRender' + 'TextureFor' + 'mat']() {
            return this['_enableHDR'] ? _0x2247ad['RenderText' + 'ureFormat']['R16G16B16A' + '16'] : _0x2247ad['RenderText' + 'ureFormat']['R8G8B8'];
        }
        ['_prepareCa' + 'meraToRend' + 'er']() {
            super['_prepareCa' + 'meraToRend' + 'er']();
            var _0x47d9c4 = this['viewport'];
            this['_viewportP' + 'arams']['setValue'](_0x47d9c4['x'], _0x47d9c4['y'], _0x47d9c4['width'], _0x47d9c4['height']), this['_projectio' + 'nParams']['setValue'](this['_nearPlane'], this['_farPlane'], _0x5ac2c4['_instance']['invertY'] ? -0x1 : 0x1, 0x0), this['_shaderVal' + 'ues']['setVector'](_0x36f166['VIEWPORT'], this['_viewportP' + 'arams']), this['_shaderVal' + 'ues']['setVector'](_0x36f166['PROJECTION' + '_PARAMS'], this['_projectio' + 'nParams']);
        }
        ['_applyView' + 'Project'](_0x388637, _0x150183, _0x18aa75) {
            var _0x2e1add, _0x17e361 = this['_shaderVal' + 'ues'];
            _0x388637['invertY'] ? (_0x334e9d['multiply'](_0x36f166['_invertYSc' + 'aleMatrix'], _0x18aa75, _0x36f166['_invertYPr' + 'ojectionMa' + 'trix']), _0x334e9d['multiply'](_0x36f166['_invertYPr' + 'ojectionMa' + 'trix'], _0x150183, _0x36f166['_invertYPr' + 'ojectionVi' + 'ewMatrix']), _0x18aa75 = _0x36f166['_invertYPr' + 'ojectionMa' + 'trix'], _0x2e1add = _0x36f166['_invertYPr' + 'ojectionVi' + 'ewMatrix']) : (_0x334e9d['multiply'](_0x18aa75, _0x150183, this['_projectio' + 'nViewMatri' + 'x']), _0x2e1add = this['_projectio' + 'nViewMatri' + 'x']), _0x388637['viewMatrix'] = _0x150183, _0x388637['projection' + 'Matrix'] = _0x18aa75, _0x388637['projection' + 'ViewMatrix'] = _0x2e1add, _0x17e361['setMatrix4' + 'x4'](_0x36f166['VIEWMATRIX'], _0x150183), _0x17e361['setMatrix4' + 'x4'](_0x36f166['PROJECTMAT' + 'RIX'], _0x18aa75), _0x17e361['setMatrix4' + 'x4'](_0x36f166['VIEWPROJEC' + 'TMATRIX'], _0x2e1add);
        }
        ['_updateClu' + 'sterPlaneX' + 'Y']() {
            var _0x4c8bb5 = this['fieldOfVie' + 'w'], _0x1e0ac0 = this['aspectRati' + 'o'];
            if (this['_clusterPl' + 'aneCacheFl' + 'ag']['x'] !== _0x4c8bb5 || this['_clusterPl' + 'aneCacheFl' + 'ag']['y'] !== _0x1e0ac0) {
                var _0x14c2df = _0xb0652e['_config']['lightClust' + 'erCount'], _0x29e4f6 = _0x14c2df['x'], _0x4e88a0 = _0x14c2df['y'], _0x22e6b9 = _0x29e4f6 + 0x1, _0x2dbe68 = _0x4e88a0 + 0x1, _0x469039 = this['_clusterXP' + 'lanes'], _0x243a8c = this['_clusterYP' + 'lanes'];
                if (!_0x469039) {
                    _0x469039 = this['_clusterXP' + 'lanes'] = new Array(_0x22e6b9), _0x243a8c = this['_clusterYP' + 'lanes'] = new Array(_0x2dbe68);
                    for (var _0x1aad3b = 0x0; _0x1aad3b < _0x22e6b9; _0x1aad3b++)
                        _0x469039[_0x1aad3b] = new _0x43b358();
                    for (_0x1aad3b = 0x0; _0x1aad3b < _0x2dbe68; _0x1aad3b++)
                        _0x243a8c[_0x1aad3b] = new _0x43b358();
                }
                var _0x5a4643 = Math['tan'](this['fieldOfVie' + 'w'] / 0x2 * Math['PI'] / 0xb4), _0x2be515 = this['aspectRati' + 'o'] * _0x5a4643, _0x167790 = 0x2 * _0x5a4643 / _0x29e4f6, _0x4f1ccb = 0x2 * _0x2be515 / _0x4e88a0;
                for (_0x1aad3b = 0x0; _0x1aad3b < _0x22e6b9; _0x1aad3b++) {
                    var _0x346811 = _0x4f1ccb * _0x1aad3b - _0x2be515, _0x568e93 = 0x1 / Math['sqrt'](0x1 + _0x346811 * _0x346811);
                    _0x469039[_0x1aad3b]['setValue'](_0x568e93, 0x0, -_0x346811 * _0x568e93);
                }
                for (_0x1aad3b = 0x0; _0x1aad3b < _0x2dbe68; _0x1aad3b++) {
                    _0x346811 = _0x5a4643 - _0x167790 * _0x1aad3b;
                    var _0x115516 = -0x1 / Math['sqrt'](0x1 + _0x346811 * _0x346811);
                    _0x243a8c[_0x1aad3b]['setValue'](0x0, _0x115516, -_0x346811 * _0x115516);
                }
                this['_clusterPl' + 'aneCacheFl' + 'ag']['x'] = _0x4c8bb5, this['_clusterPl' + 'aneCacheFl' + 'ag']['y'] = _0x1e0ac0;
            }
        }
        ['render'](_0x4e3716 = null, _0x4bcc2b = null) {
            if (this['activeInHi' + 'erarchy']) {
                var _0x388704, _0x49b284 = this['viewport'], _0x13d792 = this['_needInter' + 'nalRenderT' + 'exture'](), _0x972397 = _0x2247ad['LayaGL']['instance'], _0xd052d = _0x5ac2c4['_instance'], _0x108a18 = _0xd052d['scene'] = this['_scene'];
                _0xd052d['pipelineMo' + 'de'] = 'Forward', _0x13d792 ? (this['_internalR' + 'enderTextu' + 're'] = _0x13c6e8['createFrom' + 'Pool'](_0x49b284['width'], _0x49b284['height'], this['_getRender' + 'TextureFor' + 'mat'](), _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']), this['_internalR' + 'enderTextu' + 're']['filterMode'] = _0x2247ad['FilterMode']['Bilinear']) : this['_internalR' + 'enderTextu' + 're'] = null;
                var _0x2f7aee = _0x108a18['_mainLight'], _0x3d1ba2 = _0x2f7aee && _0x2f7aee['shadowMode'] !== _0xc55b22['ShadowMode']['None'] && _0x365e32['supportSha' + 'dow']();
                if (_0x3d1ba2 ? (_0x108a18['_shaderVal' + 'ues']['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW']), (_0x388704 = _0x1fc38b['Scene3D']['_shadowCas' + 'terPass'])['update'](this, _0x2f7aee), _0x388704['render'](_0xd052d, _0x108a18)) : _0x108a18['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW']), _0xd052d['camera'] = this, _0xd052d['cameraShad' + 'erValue'] = this['_shaderVal' + 'ues'], _0x14e627['_updateMar' + 'k']++, _0x108a18['_preRender' + 'Script'](), _0x13d792 && !this['_offScreen' + 'RenderText' + 'ure'] && (this['clearFlag'] == _0xc55b22['CameraClea' + 'rFlags']['DepthOnly'] || this['clearFlag'] == _0xc55b22['CameraClea' + 'rFlags']['Nothing'])) {
                    if (this['_enableHDR']) {
                        var _0xe87d42 = _0x13c6e8['createFrom' + 'Pool'](_0x49b284['width'], _0x49b284['height'], _0x2247ad['RenderText' + 'ureFormat']['R8G8B8'], _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']);
                        _0xe87d42['filterMode'] = _0x2247ad['FilterMode']['Bilinear'], _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x972397, _0x972397['TEXTURE_2D'], _0xe87d42['_getSource']()), _0x972397['copyTexSub' + 'Image2D'](_0x972397['TEXTURE_2D'], 0x0, 0x0, 0x0, _0x49b284['x'], _0x5ac2c4['clientHeig' + 'ht'] - (_0x49b284['y'] + _0x49b284['height']), _0x49b284['width'], _0x49b284['height']), (_0x3ed664 = _0x1b9aa8['create'](_0xe87d42, this['_internalR' + 'enderTextu' + 're']))['run'](), _0x3ed664['recover'](), _0x13c6e8['recoverToP' + 'ool'](_0xe87d42);
                    } else
                        _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x972397, _0x972397['TEXTURE_2D'], this['_internalR' + 'enderTextu' + 're']['_getSource']()), _0x972397['copyTexSub' + 'Image2D'](_0x972397['TEXTURE_2D'], 0x0, 0x0, 0x0, _0x49b284['x'], _0x5ac2c4['clientHeig' + 'ht'] - (_0x49b284['y'] + _0x49b284['height']), _0x49b284['width'], _0x49b284['height']);
                }
                var _0x3f5c05 = this['_getRender' + 'Texture']();
                if (_0x3f5c05 && _0x3f5c05['_start'](), _0xd052d['viewport'] = _0x49b284, this['_prepareCa' + 'meraToRend' + 'er'](), _0xb0652e['_config']['_multiLigh' + 'ting'] && _0x3df7f3['instance']['update'](this, this['_scene']), this['_applyView' + 'Project'](_0xd052d, this['viewMatrix'], this['_projectio' + 'nMatrix']), _0x108a18['_preCullin' + 'g'](_0xd052d, this, _0x4e3716, _0x4bcc2b), _0x108a18['_clear'](_0x972397, _0xd052d), _0x108a18['_renderSce' + 'ne'](_0xd052d), _0x108a18['_postRende' + 'rScript'](), _0x3f5c05 && _0x3f5c05['_end'](), _0x13d792) {
                    if (this['_postProce' + 'ss'])
                        this['_postProce' + 'ss']['_render'](), this['_applyPost' + 'ProcessCom' + 'mandBuffer' + 's']();
                    else {
                        if (this['_enableHDR']) {
                            var _0x3ed664, _0xb18610 = this['_getCanvas' + 'Width'](), _0x118327 = this['_getCanvas' + 'Height']();
                            this['_screenOff' + 'setScale']['setValue'](_0x49b284['x'] / _0xb18610, _0x49b284['y'] / _0x118327, _0x49b284['width'] / _0xb18610, _0x49b284['height'] / _0x118327), (_0x3ed664 = _0x1b9aa8['create'](this['_internalR' + 'enderTextu' + 're'], this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure'] : null, this['_screenOff' + 'setScale']))['run'](), _0x3ed664['recover']();
                        }
                    }
                    _0x13c6e8['recoverToP' + 'ool'](this['_internalR' + 'enderTextu' + 're']);
                }
                _0x3d1ba2 && _0x388704['cleanUp']();
            }
        }
        ['viewportPo' + 'intToRay'](_0x9fcc7e, _0x530336) {
            _0x514950['calculateC' + 'ursorRay'](_0x9fcc7e, this['viewport'], this['_projectio' + 'nMatrix'], this['viewMatrix'], null, _0x530336);
        }
        ['normalized' + 'ViewportPo' + 'intToRay'](_0x1d7a49, _0x3e97d0) {
            var _0x543017 = _0x14e627['_tempVecto' + 'r20'], _0x2b24cc = this['viewport'];
            _0x543017['x'] = _0x1d7a49['x'] * _0x2b24cc['width'], _0x543017['y'] = _0x1d7a49['y'] * _0x2b24cc['height'], _0x514950['calculateC' + 'ursorRay'](_0x543017, this['viewport'], this['_projectio' + 'nMatrix'], this['viewMatrix'], null, _0x3e97d0);
        }
        ['worldToVie' + 'wportPoint'](_0x2c9c13, _0x48efba) {
            _0x334e9d['multiply'](this['_projectio' + 'nMatrix'], this['_viewMatri' + 'x'], this['_projectio' + 'nViewMatri' + 'x']), this['viewport']['project'](_0x2c9c13, this['_projectio' + 'nViewMatri' + 'x'], _0x48efba), _0x48efba['x'] = _0x48efba['x'] / _0x2247ad['Laya']['stage']['clientScal' + 'eX'], _0x48efba['y'] = _0x48efba['y'] / _0x2247ad['Laya']['stage']['clientScal' + 'eY'];
        }
        ['worldToNor' + 'malizedVie' + 'wportPoint'](_0x3932dc, _0x50fdc8) {
            _0x334e9d['multiply'](this['_projectio' + 'nMatrix'], this['_viewMatri' + 'x'], this['_projectio' + 'nViewMatri' + 'x']), this['normalized' + 'Viewport']['project'](_0x3932dc, this['_projectio' + 'nViewMatri' + 'x'], _0x50fdc8), _0x50fdc8['x'] = _0x50fdc8['x'] / _0x2247ad['Laya']['stage']['clientScal' + 'eX'], _0x50fdc8['y'] = _0x50fdc8['y'] / _0x2247ad['Laya']['stage']['clientScal' + 'eY'];
        }
        ['convertScr' + 'eenCoordTo' + 'Orthograph' + 'icCoord'](_0x5c3076, _0x597111) {
            if (this['_orthograp' + 'hic']) {
                var _0x588bc3 = _0x5ac2c4['clientWidt' + 'h'], _0x119be9 = _0x5ac2c4['clientHeig' + 'ht'], _0x43f578 = this['orthograph' + 'icVertical' + 'Size'] * this['aspectRati' + 'o'] / _0x588bc3, _0x4e58ea = this['orthograph' + 'icVertical' + 'Size'] / _0x119be9;
                return _0x597111['x'] = (-_0x588bc3 / 0x2 + _0x5c3076['x'] * _0x2247ad['Laya']['stage']['clientScal' + 'eX']) * _0x43f578, _0x597111['y'] = (_0x119be9 / 0x2 - _0x5c3076['y'] * _0x2247ad['Laya']['stage']['clientScal' + 'eY']) * _0x4e58ea, _0x597111['z'] = (this['nearPlane'] - this['farPlane']) * (_0x5c3076['z'] + 0x1) / 0x2 - this['nearPlane'], _0x43b358['transformC' + 'oordinate'](_0x597111, this['transform']['worldMatri' + 'x'], _0x597111), !0x0;
            }
            return !0x1;
        }
        ['destroy'](_0x455841 = !0x0) {
            this['_offScreen' + 'RenderText' + 'ure'] = null, this['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']), super['destroy'](_0x455841);
        }
        ['addCommand' + 'Buffer'](_0x17c1c4, _0x2b1c3c) {
            switch (_0x17c1c4) {
            case _0x14e627['CAMERAEVEN' + 'T_POSTPROC' + 'ESS']:
                this['_postProce' + 'ssCommandB' + 'uffers']['push'](_0x2b1c3c), _0x2b1c3c['_camera'] = this;
                break;
            default:
                throw 'Camera:unk' + 'nown\x20event' + '.';
            }
        }
        ['removeComm' + 'andBuffer'](_0x3fe9b4, _0x2d1048) {
            switch (_0x3fe9b4) {
            case _0x14e627['CAMERAEVEN' + 'T_POSTPROC' + 'ESS']:
                var _0x215e74 = this['_postProce' + 'ssCommandB' + 'uffers']['indexOf'](_0x2d1048);
                -0x1 !== _0x215e74 && this['_postProce' + 'ssCommandB' + 'uffers']['splice'](_0x215e74, 0x1);
                break;
            default:
                throw 'Camera:unk' + 'nown\x20event' + '.';
            }
        }
        ['removeComm' + 'andBuffers'](_0x2fc09b) {
            switch (_0x2fc09b) {
            case _0x14e627['CAMERAEVEN' + 'T_POSTPROC' + 'ESS']:
                this['_postProce' + 'ssCommandB' + 'uffers']['length'] = 0x0;
                break;
            default:
                throw 'Camera:unk' + 'nown\x20event' + '.';
            }
        }
        ['_create']() {
            return new _0x14e627();
        }
    }
    _0x14e627['CAMERAEVEN' + 'T_POSTPROC' + 'ESS'] = 0x0, _0x14e627['_tempVecto' + 'r20'] = new _0x2d45ed(), _0x14e627['_updateMar' + 'k'] = 0x0;
    class _0x1958d6 {
        constructor() {
            this['succeeded'] = !0x1, this['collider'] = null, this['point'] = new _0x43b358(), this['normal'] = new _0x43b358(), this['hitFractio' + 'n'] = 0x0;
        }
    }
    class _0x114bf2 {
        constructor() {
        }
        static ['setCollide' + 'rCollision'](_0x2273b0, _0x3b1f0b, _0x2b43f6) {
        }
        static ['getICollid' + 'erCollisio' + 'n'](_0x2816ae, _0x5ebc44) {
            return !0x1;
        }
    }
    _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'] = 0x1, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_STATICFIL' + 'TER'] = 0x2, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_KINEMATIC' + 'FILTER'] = 0x4, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_DEBRISFIL' + 'TER'] = 0x8, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_SENSORTRI' + 'GGER'] = 0x10, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CHARACTER' + 'FILTER'] = 0x20, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER1'] = 0x40, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER2'] = 0x80, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER3'] = 0x100, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER4'] = 0x200, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER5'] = 0x400, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER6'] = 0x800, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER7'] = 0x1000, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER8'] = 0x2000, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER9'] = 0x4000, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER10'] = 0x8000, _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'] = -0x1, _0x114bf2['gravity'] = new _0x43b358(0x0, -9.81, 0x0);
    class _0x5ec1a8 extends _0x24ac1f {
        constructor() {
            super();
        }
        ['add'](_0x3264f4) {
            if (-0x1 !== _0x3264f4['_inPhysicU' + 'pdateListI' + 'ndex'])
                throw 'PhysicsUpd' + 'ateList:el' + 'ement\x20has\x20' + '\x20in\x20\x20Physi' + 'csUpdateLi' + 'st.';
            this['_add'](_0x3264f4), _0x3264f4['_inPhysicU' + 'pdateListI' + 'ndex'] = this['length']++;
        }
        ['remove'](_0x3b2a61) {
            var _0x21df5c = _0x3b2a61['_inPhysicU' + 'pdateListI' + 'ndex'];
            if (this['length']--, _0x21df5c !== this['length']) {
                var _0x58674f = this['elements'][this['length']];
                this['elements'][_0x21df5c] = _0x58674f, _0x58674f['_inPhysicU' + 'pdateListI' + 'ndex'] = _0x21df5c;
            }
            _0x3b2a61['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1;
        }
    }
    class _0x354ba1 {
        constructor() {
            this['_idCounter'] = 0x0, this['colliderA'] = null, this['colliderB'] = null, this['distance'] = 0x0, this['normal'] = new _0x43b358(), this['positionOn' + 'A'] = new _0x43b358(), this['positionOn' + 'B'] = new _0x43b358(), this['_id'] = ++this['_idCounter'];
        }
    }
    class _0x1b9374 {
        constructor() {
            this['_lastUpdat' + 'eFrame'] = -0x80000000, this['_updateFra' + 'me'] = -0x80000000, this['_isTrigger'] = !0x1, this['contacts'] = [];
        }
        ['_setUpdate' + 'Frame'](_0x4589eb) {
            this['_lastUpdat' + 'eFrame'] = this['_updateFra' + 'me'], this['_updateFra' + 'me'] = _0x4589eb;
        }
    }
    class _0x53e32e {
        constructor() {
            this['_hitResult' + 'sPoolIndex'] = 0x0, this['_hitResult' + 'sPool'] = [], this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0, this['_contactPo' + 'intsPool'] = [], this['_collision' + 'sPool'] = [], this['_collision' + 's'] = {};
        }
        ['getHitResu' + 'lt']() {
            var _0x447824 = this['_hitResult' + 'sPool'][this['_hitResult' + 'sPoolIndex']++];
            return _0x447824 || (_0x447824 = new _0x1958d6(), this['_hitResult' + 'sPool']['push'](_0x447824)), _0x447824;
        }
        ['recoverAll' + 'HitResults' + 'Pool']() {
            this['_hitResult' + 'sPoolIndex'] = 0x0;
        }
        ['getContact' + 'Points']() {
            var _0x40bd89 = this['_contactPo' + 'intsPool'][this['_contactPo' + 'nintsPoolI' + 'ndex']++];
            return _0x40bd89 || (_0x40bd89 = new _0x354ba1(), this['_contactPo' + 'intsPool']['push'](_0x40bd89)), _0x40bd89;
        }
        ['recoverAll' + 'ContactPoi' + 'ntsPool']() {
            this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0;
        }
        ['getCollisi' + 'on'](_0x186d4d, _0x1b50e1) {
            var _0x375f1c, _0xa77e08 = _0x186d4d['id'], _0x269291 = _0x1b50e1['id'], _0x1a77dc = this['_collision' + 's'][_0xa77e08];
            return _0x1a77dc && (_0x375f1c = _0x1a77dc[_0x269291]), _0x375f1c || (_0x1a77dc || (_0x1a77dc = {}, this['_collision' + 's'][_0xa77e08] = _0x1a77dc), (_0x375f1c = 0x0 === this['_collision' + 'sPool']['length'] ? new _0x1b9374() : this['_collision' + 'sPool']['pop']())['_colliderA'] = _0x186d4d, _0x375f1c['_colliderB'] = _0x1b50e1, _0x1a77dc[_0x269291] = _0x375f1c), _0x375f1c;
        }
        ['recoverCol' + 'lision'](_0x2a2e1e) {
            var _0x4fdf40 = _0x2a2e1e['_colliderA']['id'], _0x1c093a = _0x2a2e1e['_colliderB']['id'];
            this['_collision' + 's'][_0x4fdf40][_0x1c093a] = null, this['_collision' + 'sPool']['push'](_0x2a2e1e);
        }
        ['garbageCol' + 'lection']() {
            for (var _0x5ba9f6 in (this['_hitResult' + 'sPoolIndex'] = 0x0, this['_hitResult' + 'sPool']['length'] = 0x0, this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0, this['_contactPo' + 'intsPool']['length'] = 0x0, this['_collision' + 'sPool']['length'] = 0x0, this['_collision' + 'sPool'])) {
                var _0xdb80de = this['_collision' + 'sPool'][_0x5ba9f6], _0x10c975 = !0x0;
                for (var _0x366ddc in _0xdb80de)
                    _0xdb80de[_0x366ddc] ? _0x10c975 = !0x1 : delete _0xdb80de[_0x366ddc];
                _0x10c975 && delete this['_collision' + 'sPool'][_0x5ba9f6];
            }
        }
    }
    class _0x579b03 {
        constructor() {
            this['_scale'] = new _0x43b358(0x1, 0x1, 0x1), this['_centerMat' + 'rix'] = new _0x334e9d(), this['_attatched'] = !0x1, this['_indexInCo' + 'mpound'] = -0x1, this['_compoundP' + 'arent'] = null, this['_attatched' + 'CollisionO' + 'bject'] = null, this['_reference' + 'Count'] = 0x0, this['_localOffs' + 'et'] = new _0x43b358(0x0, 0x0, 0x0), this['_localRota' + 'tion'] = new _0x7cf2d3(0x0, 0x0, 0x0, 0x1), this['needsCusto' + 'mCollision' + 'Callback'] = !0x1;
        }
        static ['__init__']() {
            var _0x5d7b68 = _0x57b18d['_bullet'];
            _0x579b03['_btScale'] = _0x5d7b68['btVector3_' + 'create'](0x1, 0x1, 0x1), _0x579b03['_btVector3' + '0'] = _0x5d7b68['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x579b03['_btQuatern' + 'ion0'] = _0x5d7b68['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x579b03['_btTransfo' + 'rm0'] = _0x5d7b68['btTransfor' + 'm_create']();
        }
        static ['_createAff' + 'ineTransfo' + 'rmation'](_0x33da1d, _0x4989ab, _0x48fa37) {
            var _0xee8146 = _0x4989ab['x'], _0x32faff = _0x4989ab['y'], _0xb4da7 = _0x4989ab['z'], _0x40b839 = _0x4989ab['w'], _0x30cd84 = _0xee8146 + _0xee8146, _0xabbcd4 = _0x32faff + _0x32faff, _0x5cc7ec = _0xb4da7 + _0xb4da7, _0x1be0c2 = _0xee8146 * _0x30cd84, _0x52a500 = _0xee8146 * _0xabbcd4, _0x550e17 = _0xee8146 * _0x5cc7ec, _0xdb0f19 = _0x32faff * _0xabbcd4, _0x6a16aa = _0x32faff * _0x5cc7ec, _0x36a96b = _0xb4da7 * _0x5cc7ec, _0x4a4813 = _0x40b839 * _0x30cd84, _0x1765e3 = _0x40b839 * _0xabbcd4, _0x56b8d0 = _0x40b839 * _0x5cc7ec;
            _0x48fa37[0x0] = 0x1 - (_0xdb0f19 + _0x36a96b), _0x48fa37[0x1] = _0x52a500 + _0x56b8d0, _0x48fa37[0x2] = _0x550e17 - _0x1765e3, _0x48fa37[0x3] = 0x0, _0x48fa37[0x4] = _0x52a500 - _0x56b8d0, _0x48fa37[0x5] = 0x1 - (_0x1be0c2 + _0x36a96b), _0x48fa37[0x6] = _0x6a16aa + _0x4a4813, _0x48fa37[0x7] = 0x0, _0x48fa37[0x8] = _0x550e17 + _0x1765e3, _0x48fa37[0x9] = _0x6a16aa - _0x4a4813, _0x48fa37[0xa] = 0x1 - (_0x1be0c2 + _0xdb0f19), _0x48fa37[0xb] = 0x0, _0x48fa37[0xc] = _0x33da1d['x'], _0x48fa37[0xd] = _0x33da1d['y'], _0x48fa37[0xe] = _0x33da1d['z'], _0x48fa37[0xf] = 0x1;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['localOffse' + 't']() {
            return this['_localOffs' + 'et'];
        }
        set ['localOffse' + 't'](_0x4a98eb) {
            this['_localOffs' + 'et'] = _0x4a98eb, this['_compoundP' + 'arent'] && this['_compoundP' + 'arent']['_updateChi' + 'ldTransfor' + 'm'](this);
        }
        get ['localRotat' + 'ion']() {
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x2e2eae) {
            this['_localRota' + 'tion'] = _0x2e2eae, this['_compoundP' + 'arent'] && this['_compoundP' + 'arent']['_updateChi' + 'ldTransfor' + 'm'](this);
        }
        ['_setScale'](_0xb67740) {
            if (this['_compoundP' + 'arent'])
                this['updateLoca' + 'lTransform' + 'ations']();
            else {
                var _0x24bef3 = _0x57b18d['_bullet'];
                _0x24bef3['btVector3_' + 'setValue'](_0x579b03['_btScale'], _0xb67740['x'], _0xb67740['y'], _0xb67740['z']), _0x24bef3['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x579b03['_btScale']);
            }
        }
        ['_addRefere' + 'nce']() {
            this['_reference' + 'Count']++;
        }
        ['_removeRef' + 'erence']() {
            this['_reference' + 'Count']--;
        }
        ['updateLoca' + 'lTransform' + 'ations']() {
            if (this['_compoundP' + 'arent']) {
                var _0x399f58 = _0x579b03['_tempVecto' + 'r30'];
                _0x43b358['multiply'](this['localOffse' + 't'], this['_scale'], _0x399f58), _0x579b03['_createAff' + 'ineTransfo' + 'rmation'](_0x399f58, this['localRotat' + 'ion'], this['_centerMat' + 'rix']['elements']);
            } else
                _0x579b03['_createAff' + 'ineTransfo' + 'rmation'](this['localOffse' + 't'], this['localRotat' + 'ion'], this['_centerMat' + 'rix']['elements']);
        }
        ['cloneTo'](_0x303c32) {
            var _0x7d817c = _0x303c32;
            this['_localOffs' + 'et']['cloneTo'](_0x7d817c['localOffse' + 't']), this['_localRota' + 'tion']['cloneTo'](_0x7d817c['localRotat' + 'ion']), _0x7d817c['localOffse' + 't'] = _0x7d817c['localOffse' + 't'], _0x7d817c['localRotat' + 'ion'] = _0x7d817c['localRotat' + 'ion'];
        }
        ['clone']() {
            return null;
        }
        ['destroy']() {
            this['_btShape'] && (_0x57b18d['_bullet']['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), this['_btShape'] = null);
        }
    }
    _0x579b03['SHAPEORIEN' + 'TATION_UPX'] = 0x0, _0x579b03['SHAPEORIEN' + 'TATION_UPY'] = 0x1, _0x579b03['SHAPEORIEN' + 'TATION_UPZ'] = 0x2, _0x579b03['SHAPETYPES' + '_BOX'] = 0x0, _0x579b03['SHAPETYPES' + '_SPHERE'] = 0x1, _0x579b03['SHAPETYPES' + '_CYLINDER'] = 0x2, _0x579b03['SHAPETYPES' + '_CAPSULE'] = 0x3, _0x579b03['SHAPETYPES' + '_CONVEXHUL' + 'L'] = 0x4, _0x579b03['SHAPETYPES' + '_COMPOUND'] = 0x5, _0x579b03['SHAPETYPES' + '_STATICPLA' + 'NE'] = 0x6, _0x579b03['SHAPETYPES' + '_CONE'] = 0x7, _0x579b03['_tempVecto' + 'r30'] = new _0x43b358();
    class _0x1eeb8b extends _0x579b03 {
        static ['__init__']() {
            _0x1eeb8b['_btSize'] = _0x57b18d['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['sizeX']() {
            return this['_sizeX'];
        }
        get ['sizeY']() {
            return this['_sizeY'];
        }
        get ['sizeZ']() {
            return this['_sizeZ'];
        }
        constructor(_0x25e2e6 = 0x1, _0x216270 = 0x1, _0x455676 = 0x1) {
            super(), this['_sizeX'] = _0x25e2e6, this['_sizeY'] = _0x216270, this['_sizeZ'] = _0x455676, this['_type'] = _0x579b03['SHAPETYPES' + '_BOX'];
            var _0x4b1ce8 = _0x57b18d['_bullet'];
            _0x4b1ce8['btVector3_' + 'setValue'](_0x1eeb8b['_btSize'], _0x25e2e6 / 0x2, _0x216270 / 0x2, _0x455676 / 0x2), this['_btShape'] = _0x4b1ce8['btBoxShape' + '_create'](_0x1eeb8b['_btSize']);
        }
        ['clone']() {
            var _0x123f50 = new _0x1eeb8b(this['_sizeX'], this['_sizeY'], this['_sizeZ']);
            return this['cloneTo'](_0x123f50), _0x123f50;
        }
    }
    class _0x5f1b57 extends _0x579b03 {
        constructor(_0x51fae7 = 0.5, _0x38b5f9 = 1.25, _0x402acf = _0x579b03['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = _0x51fae7, this['_length'] = _0x38b5f9, this['_orientati' + 'on'] = _0x402acf, this['_type'] = _0x579b03['SHAPETYPES' + '_CAPSULE'];
            var _0x2a211a = _0x57b18d['_bullet'];
            switch (_0x402acf) {
            case _0x579b03['SHAPEORIEN' + 'TATION_UPX']:
                this['_btShape'] = _0x2a211a['btCapsuleS' + 'hapeX_crea' + 'te'](_0x51fae7, _0x38b5f9 - 0x2 * _0x51fae7);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPY']:
                this['_btShape'] = _0x2a211a['btCapsuleS' + 'hape_creat' + 'e'](_0x51fae7, _0x38b5f9 - 0x2 * _0x51fae7);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPZ']:
                this['_btShape'] = _0x2a211a['btCapsuleS' + 'hapeZ_crea' + 'te'](_0x51fae7, _0x38b5f9 - 0x2 * _0x51fae7);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['length']() {
            return this['_length'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['_setScale'](_0x1e1afb) {
            var _0x43dc40 = _0x5f1b57['_tempVecto' + 'r30'];
            switch (this['orientatio' + 'n']) {
            case _0x579b03['SHAPEORIEN' + 'TATION_UPX']:
                _0x43dc40['x'] = _0x1e1afb['x'], _0x43dc40['y'] = _0x43dc40['z'] = Math['max'](_0x1e1afb['y'], _0x1e1afb['z']);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPY']:
                _0x43dc40['y'] = _0x1e1afb['y'], _0x43dc40['x'] = _0x43dc40['z'] = Math['max'](_0x1e1afb['x'], _0x1e1afb['z']);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPZ']:
                _0x43dc40['z'] = _0x1e1afb['z'], _0x43dc40['x'] = _0x43dc40['y'] = Math['max'](_0x1e1afb['x'], _0x1e1afb['y']);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
            super['_setScale'](_0x43dc40);
        }
        ['clone']() {
            var _0x16cc22 = new _0x5f1b57(this['_radius'], this['_length'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x16cc22), _0x16cc22;
        }
    }
    _0x5f1b57['_tempVecto' + 'r30'] = new _0x43b358();
    class _0x2e190c extends _0x579b03 {
        constructor() {
            super(), this['_childColl' + 'iderShapes'] = [], this['_type'] = _0x579b03['SHAPETYPES' + '_COMPOUND'], this['_btShape'] = _0x57b18d['_bullet']['btCompound' + 'Shape_crea' + 'te']();
        }
        static ['__init__']() {
            var _0xd964cb = _0x57b18d['_bullet'];
            _0x2e190c['_btVector3' + 'One'] = _0xd964cb['btVector3_' + 'create'](0x1, 0x1, 0x1), _0x2e190c['_btTransfo' + 'rm'] = _0xd964cb['btTransfor' + 'm_create'](), _0x2e190c['_btOffset'] = _0xd964cb['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x2e190c['_btRotatio' + 'n'] = _0xd964cb['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1);
        }
        ['_clearChil' + 'dShape'](_0x147c29) {
            _0x147c29['_attatched'] = !0x1, _0x147c29['_compoundP' + 'arent'] = null, _0x147c29['_indexInCo' + 'mpound'] = -0x1;
        }
        ['_addRefere' + 'nce']() {
        }
        ['_removeRef' + 'erence']() {
        }
        ['_updateChi' + 'ldTransfor' + 'm'](_0x2f3497) {
            var _0xbb8543 = _0x57b18d['_bullet'], _0x30bc06 = _0x2f3497['localOffse' + 't'], _0x58d35e = _0x2f3497['localRotat' + 'ion'], _0x1b8154 = _0x579b03['_btVector3' + '0'], _0x5a7cfa = _0x579b03['_btQuatern' + 'ion0'], _0x1a0fbf = _0x579b03['_btTransfo' + 'rm0'];
            _0xbb8543['btVector3_' + 'setValue'](_0x1b8154, -_0x30bc06['x'], _0x30bc06['y'], _0x30bc06['z']), _0xbb8543['btQuaterni' + 'on_setValu' + 'e'](_0x5a7cfa, -_0x58d35e['x'], _0x58d35e['y'], _0x58d35e['z'], -_0x58d35e['w']), _0xbb8543['btTransfor' + 'm_setOrigi' + 'n'](_0x1a0fbf, _0x1b8154), _0xbb8543['btTransfor' + 'm_setRotat' + 'ion'](_0x1a0fbf, _0x5a7cfa), _0xbb8543['btCompound' + 'Shape_upda' + 'teChildTra' + 'nsform'](this['_btShape'], _0x2f3497['_indexInCo' + 'mpound'], _0x1a0fbf, !0x0);
        }
        ['addChildSh' + 'ape'](_0x156530) {
            if (_0x156530['_attatched'])
                throw 'CompoundCo' + 'lliderShap' + 'e:\x20this\x20sh' + 'ape\x20has\x20at' + 'tatched\x20to' + '\x20other\x20ent' + 'ity.';
            _0x156530['_attatched'] = !0x0, _0x156530['_compoundP' + 'arent'] = this, _0x156530['_indexInCo' + 'mpound'] = this['_childColl' + 'iderShapes']['length'], this['_childColl' + 'iderShapes']['push'](_0x156530);
            var _0x32dd5c = _0x156530['localOffse' + 't'], _0x15fc9a = _0x156530['localRotat' + 'ion'], _0x2bf6f1 = _0x57b18d['_bullet'];
            _0x2bf6f1['btVector3_' + 'setValue'](_0x2e190c['_btOffset'], -_0x32dd5c['x'], _0x32dd5c['y'], _0x32dd5c['z']), _0x2bf6f1['btQuaterni' + 'on_setValu' + 'e'](_0x2e190c['_btRotatio' + 'n'], -_0x15fc9a['x'], _0x15fc9a['y'], _0x15fc9a['z'], -_0x15fc9a['w']), _0x2bf6f1['btTransfor' + 'm_setOrigi' + 'n'](_0x2e190c['_btTransfo' + 'rm'], _0x2e190c['_btOffset']), _0x2bf6f1['btTransfor' + 'm_setRotat' + 'ion'](_0x2e190c['_btTransfo' + 'rm'], _0x2e190c['_btRotatio' + 'n']);
            var _0x34ddb4 = _0x2bf6f1['btCollisio' + 'nShape_get' + 'LocalScali' + 'ng'](this['_btShape']);
            _0x2bf6f1['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x2e190c['_btVector3' + 'One']), _0x2bf6f1['btCompound' + 'Shape_addC' + 'hildShape'](this['_btShape'], _0x2e190c['_btTransfo' + 'rm'], _0x156530['_btShape']), _0x2bf6f1['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x34ddb4), this['_attatched' + 'CollisionO' + 'bject'] && (this['_attatched' + 'CollisionO' + 'bject']['colliderSh' + 'ape'] = this);
        }
        ['removeChil' + 'dShape'](_0x3c60ba) {
            if (_0x3c60ba['_compoundP' + 'arent'] === this) {
                var _0x5cb35f = _0x3c60ba['_indexInCo' + 'mpound'];
                this['_clearChil' + 'dShape'](_0x3c60ba);
                var _0x5c475 = this['_childColl' + 'iderShapes'][this['_childColl' + 'iderShapes']['length'] - 0x1];
                _0x5c475['_indexInCo' + 'mpound'] = _0x5cb35f, this['_childColl' + 'iderShapes'][_0x5cb35f] = _0x5c475, this['_childColl' + 'iderShapes']['pop'](), _0x57b18d['_bullet']['btCompound' + 'Shape_remo' + 'veChildSha' + 'peByIndex'](this['_btShape'], _0x5cb35f);
            }
        }
        ['clearChild' + 'Shape']() {
            for (var _0xdd03c4 = 0x0, _0xcb9a45 = this['_childColl' + 'iderShapes']['length']; _0xdd03c4 < _0xcb9a45; _0xdd03c4++)
                this['_clearChil' + 'dShape'](this['_childColl' + 'iderShapes'][_0xdd03c4]), _0x57b18d['_bullet']['btCompound' + 'Shape_remo' + 'veChildSha' + 'peByIndex'](this['_btShape'], 0x0);
            this['_childColl' + 'iderShapes']['length'] = 0x0;
        }
        ['getChildSh' + 'apeCount']() {
            return this['_childColl' + 'iderShapes']['length'];
        }
        ['cloneTo'](_0x1700de) {
            var _0x1a9baf = _0x1700de;
            _0x1a9baf['clearChild' + 'Shape']();
            for (var _0x4ef8eb = 0x0, _0x1caea7 = this['_childColl' + 'iderShapes']['length']; _0x4ef8eb < _0x1caea7; _0x4ef8eb++)
                _0x1a9baf['addChildSh' + 'ape'](this['_childColl' + 'iderShapes'][_0x4ef8eb]['clone']());
        }
        ['clone']() {
            var _0x5e475f = new _0x2e190c();
            return this['cloneTo'](_0x5e475f), _0x5e475f;
        }
        ['destroy']() {
            super['destroy']();
            for (var _0x2e74b8 = 0x0, _0x15cfb2 = this['_childColl' + 'iderShapes']['length']; _0x2e74b8 < _0x15cfb2; _0x2e74b8++) {
                var _0x45c942 = this['_childColl' + 'iderShapes'][_0x2e74b8];
                0x0 === _0x45c942['_reference' + 'Count'] && _0x45c942['destroy']();
            }
        }
    }
    class _0x14ad8c extends _0x579b03 {
        constructor(_0x35d585 = 0.5, _0x572529 = 0x1, _0x2d40ab = _0x579b03['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = 0x1, this['_height'] = 0.5, this['_radius'] = _0x35d585, this['_height'] = _0x572529, this['_orientati' + 'on'] = _0x2d40ab, this['_type'] = _0x579b03['SHAPETYPES' + '_CYLINDER'];
            var _0x27b714 = _0x57b18d['_bullet'];
            switch (_0x2d40ab) {
            case _0x579b03['SHAPEORIEN' + 'TATION_UPX']:
                this['_btShape'] = _0x27b714['btConeShap' + 'eX_create'](_0x35d585, _0x572529);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPY']:
                this['_btShape'] = _0x27b714['btConeShap' + 'e_create'](_0x35d585, _0x572529);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPZ']:
                this['_btShape'] = _0x27b714['btConeShap' + 'eZ_create'](_0x35d585, _0x572529);
                break;
            default:
                throw 'ConeCollid' + 'erShape:un' + 'known\x20orie' + 'ntation.';
            }
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['height']() {
            return this['_height'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['clone']() {
            var _0x26a1ab = new _0x14ad8c(this['_radius'], this['_height'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x26a1ab), _0x26a1ab;
        }
    }
    class _0x5adbea extends _0x579b03 {
        constructor(_0x3d1b82 = 0.5, _0x240932 = 0x1, _0x1f6fe8 = _0x579b03['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = 0x1, this['_height'] = 0.5, this['_radius'] = _0x3d1b82, this['_height'] = _0x240932, this['_orientati' + 'on'] = _0x1f6fe8, this['_type'] = _0x579b03['SHAPETYPES' + '_CYLINDER'];
            var _0xcbe45a = _0x57b18d['_bullet'];
            switch (_0x1f6fe8) {
            case _0x579b03['SHAPEORIEN' + 'TATION_UPX']:
                _0xcbe45a['btVector3_' + 'setValue'](_0x5adbea['_btSize'], _0x240932 / 0x2, _0x3d1b82, _0x3d1b82), this['_btShape'] = _0xcbe45a['btCylinder' + 'ShapeX_cre' + 'ate'](_0x5adbea['_btSize']);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPY']:
                _0xcbe45a['btVector3_' + 'setValue'](_0x5adbea['_btSize'], _0x3d1b82, _0x240932 / 0x2, _0x3d1b82), this['_btShape'] = _0xcbe45a['btCylinder' + 'Shape_crea' + 'te'](_0x5adbea['_btSize']);
                break;
            case _0x579b03['SHAPEORIEN' + 'TATION_UPZ']:
                _0xcbe45a['btVector3_' + 'setValue'](_0x5adbea['_btSize'], _0x3d1b82, _0x3d1b82, _0x240932 / 0x2), this['_btShape'] = _0xcbe45a['btCylinder' + 'ShapeZ_cre' + 'ate'](_0x5adbea['_btSize']);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
        }
        static ['__init__']() {
            _0x5adbea['_btSize'] = _0x57b18d['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['height']() {
            return this['_height'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['clone']() {
            var _0x39fa0e = new _0x5adbea(this['_radius'], this['_height'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x39fa0e), _0x39fa0e;
        }
    }
    class _0x1cdff8 extends _0x579b03 {
        constructor() {
            super(), this['_mesh'] = null, this['_convex'] = !0x1;
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x59e359) {
            if (this['_mesh'] !== _0x59e359) {
                var _0x4227e4 = _0x57b18d['_bullet'];
                this['_mesh'] && _0x4227e4['destroy'](this['_btShape']), _0x59e359 && (this['_btShape'] = _0x4227e4['btGImpactM' + 'eshShape_c' + 'reate'](_0x59e359['_getPhysic' + 'Mesh']()), _0x4227e4['btGImpactS' + 'hapeInterf' + 'ace_update' + 'Bound'](this['_btShape'])), this['_mesh'] = _0x59e359;
            }
        }
        get ['convex']() {
            return this['_convex'];
        }
        set ['convex'](_0x1a6111) {
            this['_convex'] = _0x1a6111;
        }
        ['_setScale'](_0x1006f4) {
            if (this['_compoundP' + 'arent'])
                this['updateLoca' + 'lTransform' + 'ations']();
            else {
                var _0x3ba5a0 = _0x57b18d['_bullet'];
                _0x3ba5a0['btVector3_' + 'setValue'](_0x579b03['_btScale'], _0x1006f4['x'], _0x1006f4['y'], _0x1006f4['z']), _0x3ba5a0['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x579b03['_btScale']), _0x3ba5a0['btGImpactS' + 'hapeInterf' + 'ace_update' + 'Bound'](this['_btShape']);
            }
        }
        ['cloneTo'](_0x163dc7) {
            var _0x2d320b = _0x163dc7;
            _0x2d320b['convex'] = this['_convex'], _0x2d320b['mesh'] = this['_mesh'], super['cloneTo'](_0x163dc7);
        }
        ['clone']() {
            var _0x9ab674 = new _0x1cdff8();
            return this['cloneTo'](_0x9ab674), _0x9ab674;
        }
        ['destroy']() {
            this['_btShape'] && (_0x57b18d['_bullet']['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), this['_btShape'] = null);
        }
    }
    class _0x29616d extends _0x579b03 {
        get ['radius']() {
            return this['_radius'];
        }
        constructor(_0x1d3f2f = 0.5) {
            super(), this['_radius'] = _0x1d3f2f, this['_type'] = _0x579b03['SHAPETYPES' + '_SPHERE'], this['_btShape'] = _0x57b18d['_bullet']['btSphereSh' + 'ape_create'](_0x1d3f2f);
        }
        ['clone']() {
            var _0xccf5be = new _0x29616d(this['_radius']);
            return this['cloneTo'](_0xccf5be), _0xccf5be;
        }
    }
    class _0x4da2bb extends _0x2247ad['Component'] {
        constructor(_0x5eee72, _0x4696a1) {
            super(), this['_restituti' + 'on'] = 0x0, this['_friction'] = 0.5, this['_rollingFr' + 'iction'] = 0x0, this['_ccdMotion' + 'Threshold'] = 0x0, this['_ccdSweptS' + 'phereRadiu' + 's'] = 0x0, this['_collision' + 'Group'] = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], this['_canCollid' + 'eWith'] = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], this['_colliderS' + 'hape'] = null, this['_transform' + 'Flag'] = 0x7fffffff, this['_controlBy' + 'Simulation'] = !0x1, this['_enablePro' + 'cessCollis' + 'ions'] = !0x0, this['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1, this['canScaleSh' + 'ape'] = !0x0, this['_collision' + 'Group'] = _0x5eee72, this['_canCollid' + 'eWith'] = _0x4696a1, _0x4da2bb['_physicObj' + 'ectsMap'][this['id']] = this;
        }
        static ['__init__']() {
            var _0x4e8c21 = _0x57b18d['_bullet'];
            _0x4da2bb['_btVector3' + '0'] = _0x4e8c21['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x4da2bb['_btQuatern' + 'ion0'] = _0x4e8c21['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1);
        }
        static ['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](_0x473673, _0x38e286, _0x44e18c, _0x456fc5, _0x165edf, _0x1974e5, _0x53b118, _0x4f5581, _0x1de242) {
            var _0x41cf4e = _0x456fc5 + _0x456fc5, _0x768072 = _0x165edf + _0x165edf, _0x18dac5 = _0x1974e5 + _0x1974e5, _0x11e762 = _0x456fc5 * _0x41cf4e, _0x2dc278 = _0x456fc5 * _0x768072, _0x2123dc = _0x456fc5 * _0x18dac5, _0x21a590 = _0x165edf * _0x768072, _0x34ffcd = _0x165edf * _0x18dac5, _0x22b936 = _0x1974e5 * _0x18dac5, _0x37d039 = _0x53b118 * _0x41cf4e, _0x5ee555 = _0x53b118 * _0x768072, _0xbc26e1 = _0x53b118 * _0x18dac5, _0x5b3639 = _0x4f5581[0x0], _0x4fc210 = _0x4f5581[0x1], _0x2a9f49 = _0x4f5581[0x2];
            _0x1de242[0x0] = (0x1 - (_0x21a590 + _0x22b936)) * _0x5b3639, _0x1de242[0x1] = (_0x2dc278 + _0xbc26e1) * _0x5b3639, _0x1de242[0x2] = (_0x2123dc - _0x5ee555) * _0x5b3639, _0x1de242[0x3] = 0x0, _0x1de242[0x4] = (_0x2dc278 - _0xbc26e1) * _0x4fc210, _0x1de242[0x5] = (0x1 - (_0x11e762 + _0x22b936)) * _0x4fc210, _0x1de242[0x6] = (_0x34ffcd + _0x37d039) * _0x4fc210, _0x1de242[0x7] = 0x0, _0x1de242[0x8] = (_0x2123dc + _0x5ee555) * _0x2a9f49, _0x1de242[0x9] = (_0x34ffcd - _0x37d039) * _0x2a9f49, _0x1de242[0xa] = (0x1 - (_0x11e762 + _0x21a590)) * _0x2a9f49, _0x1de242[0xb] = 0x0, _0x1de242[0xc] = _0x473673, _0x1de242[0xd] = _0x38e286, _0x1de242[0xe] = _0x44e18c, _0x1de242[0xf] = 0x1;
        }
        static ['_creatShap' + 'e'](_0xdb7407) {
            var _0x5167bb;
            switch (_0xdb7407['type']) {
            case 'BoxCollide' + 'rShape':
                var _0x56db99 = _0xdb7407['size'];
                _0x5167bb = _0x56db99 ? new _0x1eeb8b(_0x56db99[0x0], _0x56db99[0x1], _0x56db99[0x2]) : new _0x1eeb8b();
                break;
            case 'SphereColl' + 'iderShape':
                _0x5167bb = new _0x29616d(_0xdb7407['radius']);
                break;
            case 'CapsuleCol' + 'liderShape':
                _0x5167bb = new _0x5f1b57(_0xdb7407['radius'], _0xdb7407['height'], _0xdb7407['orientatio' + 'n']);
                break;
            case 'MeshCollid' + 'erShape':
                var _0x358148 = new _0x1cdff8();
                _0xdb7407['mesh'] && (_0x358148['mesh'] = _0x2247ad['Loader']['getRes'](_0xdb7407['mesh'])), _0x5167bb = _0x358148;
                break;
            case 'ConeCollid' + 'erShape':
                _0x5167bb = new _0x14ad8c(_0xdb7407['radius'], _0xdb7407['height'], _0xdb7407['orientatio' + 'n']);
                break;
            case 'CylinderCo' + 'lliderShap' + 'e':
                _0x5167bb = new _0x5adbea(_0xdb7407['radius'], _0xdb7407['height'], _0xdb7407['orientatio' + 'n']);
                break;
            default:
                throw 'unknown\x20sh' + 'ape\x20type.';
            }
            if (_0xdb7407['center']) {
                var _0x258003 = _0x5167bb['localOffse' + 't'];
                _0x258003['fromArray'](_0xdb7407['center']), _0x5167bb['localOffse' + 't'] = _0x258003;
            }
            return _0x5167bb;
        }
        static ['physicVect' + 'or3Transfo' + 'rmQuat'](_0x1627aa, _0x4b779f, _0x589e78, _0x54e7d6, _0x373ec2, _0x237ff6) {
            var _0xfec358 = _0x1627aa['x'], _0x30db9d = _0x1627aa['y'], _0x140f24 = _0x1627aa['z'], _0x243040 = _0x373ec2 * _0xfec358 + _0x589e78 * _0x140f24 - _0x54e7d6 * _0x30db9d, _0x156dac = _0x373ec2 * _0x30db9d + _0x54e7d6 * _0xfec358 - _0x4b779f * _0x140f24, _0x2e8890 = _0x373ec2 * _0x140f24 + _0x4b779f * _0x30db9d - _0x589e78 * _0xfec358, _0x5f07f0 = -_0x4b779f * _0xfec358 - _0x589e78 * _0x30db9d - _0x54e7d6 * _0x140f24;
            _0x237ff6['x'] = _0x243040 * _0x373ec2 + _0x5f07f0 * -_0x4b779f + _0x156dac * -_0x54e7d6 - _0x2e8890 * -_0x589e78, _0x237ff6['y'] = _0x156dac * _0x373ec2 + _0x5f07f0 * -_0x589e78 + _0x2e8890 * -_0x4b779f - _0x243040 * -_0x54e7d6, _0x237ff6['z'] = _0x2e8890 * _0x373ec2 + _0x5f07f0 * -_0x54e7d6 + _0x243040 * -_0x589e78 - _0x156dac * -_0x4b779f;
        }
        static ['physicQuat' + 'ernionMult' + 'iply'](_0x228351, _0x59112a, _0x19ae12, _0x2ec678, _0x1e7cac, _0x1bf194) {
            var _0x2aeb72 = _0x1e7cac['x'], _0x159cf1 = _0x1e7cac['y'], _0x2ce4fe = _0x1e7cac['z'], _0x26f6e6 = _0x1e7cac['w'], _0xf64cdf = _0x59112a * _0x2ce4fe - _0x19ae12 * _0x159cf1, _0x1511ff = _0x19ae12 * _0x2aeb72 - _0x228351 * _0x2ce4fe, _0x4af867 = _0x228351 * _0x159cf1 - _0x59112a * _0x2aeb72, _0x1f23db = _0x228351 * _0x2aeb72 + _0x59112a * _0x159cf1 + _0x19ae12 * _0x2ce4fe;
            _0x1bf194['x'] = _0x228351 * _0x26f6e6 + _0x2aeb72 * _0x2ec678 + _0xf64cdf, _0x1bf194['y'] = _0x59112a * _0x26f6e6 + _0x159cf1 * _0x2ec678 + _0x1511ff, _0x1bf194['z'] = _0x19ae12 * _0x26f6e6 + _0x2ce4fe * _0x2ec678 + _0x4af867, _0x1bf194['w'] = _0x2ec678 * _0x26f6e6 - _0x1f23db;
        }
        get ['restitutio' + 'n']() {
            return this['_restituti' + 'on'];
        }
        set ['restitutio' + 'n'](_0x3f5fc6) {
            this['_restituti' + 'on'] = _0x3f5fc6, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tRestituti' + 'on'](this['_btCollide' + 'rObject'], _0x3f5fc6);
        }
        get ['friction']() {
            return this['_friction'];
        }
        set ['friction'](_0x502142) {
            this['_friction'] = _0x502142, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tFriction'](this['_btCollide' + 'rObject'], _0x502142);
        }
        get ['rollingFri' + 'ction']() {
            return this['_rollingFr' + 'iction'];
        }
        set ['rollingFri' + 'ction'](_0x3071f6) {
            this['_rollingFr' + 'iction'] = _0x3071f6, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tRollingFr' + 'iction'](this['_btCollide' + 'rObject'], _0x3071f6);
        }
        get ['ccdMotionT' + 'hreshold']() {
            return this['_ccdMotion' + 'Threshold'];
        }
        set ['ccdMotionT' + 'hreshold'](_0x5bebe7) {
            this['_ccdMotion' + 'Threshold'] = _0x5bebe7, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tCcdMotion' + 'Threshold'](this['_btCollide' + 'rObject'], _0x5bebe7);
        }
        get ['ccdSweptSp' + 'hereRadius']() {
            return this['_ccdSweptS' + 'phereRadiu' + 's'];
        }
        set ['ccdSweptSp' + 'hereRadius'](_0x2c5a03) {
            this['_ccdSweptS' + 'phereRadiu' + 's'] = _0x2c5a03, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tCcdSweptS' + 'phereRadiu' + 's'](this['_btCollide' + 'rObject'], _0x2c5a03);
        }
        get ['isActive']() {
            return !!this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_is' + 'Active'](this['_btCollide' + 'rObject']);
        }
        get ['colliderSh' + 'ape']() {
            return this['_colliderS' + 'hape'];
        }
        set ['colliderSh' + 'ape'](_0x3dcc8d) {
            var _0x2442f0 = this['_colliderS' + 'hape'];
            if (_0x2442f0 && (_0x2442f0['_attatched'] = !0x1, _0x2442f0['_attatched' + 'CollisionO' + 'bject'] = null), this['_colliderS' + 'hape'] = _0x3dcc8d, _0x3dcc8d) {
                if (_0x3dcc8d['_attatched'])
                    throw 'PhysicsCom' + 'ponent:\x20th' + 'is\x20shape\x20h' + 'as\x20attatch' + 'ed\x20to\x20othe' + 'r\x20entity.';
                if (_0x3dcc8d['_attatched'] = !0x0, _0x3dcc8d['_attatched' + 'CollisionO' + 'bject'] = this, this['_btCollide' + 'rObject']) {
                    _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tCollision' + 'Shape'](this['_btCollide' + 'rObject'], _0x3dcc8d['_btShape']);
                    var _0x2a4ba4 = this['_simulatio' + 'n'] && this['_enabled'];
                    _0x2a4ba4 && _0x2442f0 && this['_removeFro' + 'mSimulatio' + 'n'](), this['_onShapeCh' + 'ange'](_0x3dcc8d), _0x2a4ba4 && (this['_derivePhy' + 'sicsTransf' + 'ormation'](!0x0), this['_addToSimu' + 'lation']());
                }
            } else
                this['_simulatio' + 'n'] && this['_enabled'] && _0x2442f0 && this['_removeFro' + 'mSimulatio' + 'n']();
        }
        get ['simulation']() {
            return this['_simulatio' + 'n'];
        }
        get ['collisionG' + 'roup']() {
            return this['_collision' + 'Group'];
        }
        set ['collisionG' + 'roup'](_0x26dc0e) {
            this['_collision' + 'Group'] !== _0x26dc0e && (this['_collision' + 'Group'] = _0x26dc0e, this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_addToSimu' + 'lation']()));
        }
        get ['canCollide' + 'With']() {
            return this['_canCollid' + 'eWith'];
        }
        set ['canCollide' + 'With'](_0x1dfc61) {
            this['_canCollid' + 'eWith'] !== _0x1dfc61 && (this['_canCollid' + 'eWith'] = _0x1dfc61, this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_addToSimu' + 'lation']()));
        }
        ['_parseShap' + 'e'](_0x595aa4) {
            var _0x155c84 = _0x595aa4['length'];
            if (0x1 === _0x155c84) {
                var _0x22e516 = _0x4da2bb['_creatShap' + 'e'](_0x595aa4[0x0]);
                this['colliderSh' + 'ape'] = _0x22e516;
            } else {
                for (var _0x21fb76 = new _0x2e190c(), _0x56a41e = 0x0; _0x56a41e < _0x155c84; _0x56a41e++)
                    _0x22e516 = _0x4da2bb['_creatShap' + 'e'](_0x595aa4[_0x56a41e]), _0x21fb76['addChildSh' + 'ape'](_0x22e516);
                this['colliderSh' + 'ape'] = _0x21fb76;
            }
        }
        ['_onScaleCh' + 'ange'](_0xde3f2d) {
            this['_colliderS' + 'hape']['_setScale'](_0xde3f2d);
        }
        ['_onEnable']() {
            this['_simulatio' + 'n'] = this['owner']['_scene']['physicsSim' + 'ulation'], _0x57b18d['_bullet']['btCollisio' + 'nObject_se' + 'tContactPr' + 'ocessingTh' + 'reshold'](this['_btCollide' + 'rObject'], 0xc9f2c9cd04675000000000000), this['_colliderS' + 'hape'] && (this['_derivePhy' + 'sicsTransf' + 'ormation'](!0x0), this['_addToSimu' + 'lation']());
        }
        ['_onDisable']() {
            this['_colliderS' + 'hape'] && (this['_removeFro' + 'mSimulatio' + 'n'](), -0x1 !== this['_inPhysicU' + 'pdateListI' + 'ndex'] && this['_simulatio' + 'n']['_physicsUp' + 'dateList']['remove'](this)), this['_simulatio' + 'n'] = null;
        }
        ['_onDestroy']() {
            delete _0x4da2bb['_physicObj' + 'ectsMap'][this['id']], _0x57b18d['_bullet']['btCollisio' + 'nObject_de' + 'stroy'](this['_btCollide' + 'rObject']), this['_colliderS' + 'hape']['destroy'](), super['_onDestroy'](), this['_btCollide' + 'rObject'] = null, this['_colliderS' + 'hape'] = null, this['_simulatio' + 'n'] = null, this['owner']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        ['_isValid']() {
            return this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'];
        }
        ['_parse'](_0x140438) {
            null != _0x140438['collisionG' + 'roup'] && (this['collisionG' + 'roup'] = _0x140438['collisionG' + 'roup']), null != _0x140438['canCollide' + 'With'] && (this['canCollide' + 'With'] = _0x140438['canCollide' + 'With']), null != _0x140438['ccdMotionT' + 'hreshold'] && (this['ccdMotionT' + 'hreshold'] = _0x140438['ccdMotionT' + 'hreshold']), null != _0x140438['ccdSweptSp' + 'hereRadius'] && (this['ccdSweptSp' + 'hereRadius'] = _0x140438['ccdSweptSp' + 'hereRadius']);
        }
        ['_setTransf' + 'ormFlag'](_0x3d87de, _0x37cf0d) {
            _0x37cf0d ? this['_transform' + 'Flag'] |= _0x3d87de : this['_transform' + 'Flag'] &= ~_0x3d87de;
        }
        ['_getTransf' + 'ormFlag'](_0xaadc54) {
            return 0x0 != (this['_transform' + 'Flag'] & _0xaadc54);
        }
        ['_addToSimu' + 'lation']() {
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
        }
        ['_derivePhy' + 'sicsTransf' + 'ormation'](_0x2a2a98) {
            var _0x51d6ae = _0x57b18d['_bullet'], _0x265464 = this['_btCollide' + 'rObject'], _0x19cbf5 = _0x51d6ae['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x265464);
            this['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x19cbf5, _0x2a2a98), _0x51d6ae['btCollisio' + 'nObject_se' + 'tWorldTran' + 'sform'](_0x265464, _0x19cbf5);
        }
        ['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0xb0a23d, _0x260230) {
            var _0x4ae65e = _0x57b18d['_bullet'], _0x52f959 = this['owner']['_transform'];
            if (_0x260230 || this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                var _0x409e66 = this['_colliderS' + 'hape']['localOffse' + 't'], _0x4ba14d = _0x52f959['position'], _0x4c50cc = _0x4da2bb['_btVector3' + '0'];
                if (0x0 !== _0x409e66['x'] || 0x0 !== _0x409e66['y'] || 0x0 !== _0x409e66['z']) {
                    var _0x3b8823 = _0x4da2bb['_tempVecto' + 'r30'], _0x537d75 = _0x52f959['worldMatri' + 'x'];
                    _0x43b358['transformC' + 'oordinate'](_0x409e66, _0x537d75, _0x3b8823), _0x4ae65e['btVector3_' + 'setValue'](_0x4c50cc, -_0x3b8823['x'], _0x3b8823['y'], _0x3b8823['z']);
                } else
                    _0x4ae65e['btVector3_' + 'setValue'](_0x4c50cc, -_0x4ba14d['x'], _0x4ba14d['y'], _0x4ba14d['z']);
                _0x4ae65e['btTransfor' + 'm_setOrigi' + 'n'](_0xb0a23d, _0x4c50cc), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x1);
            }
            if (_0x260230 || this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'])) {
                var _0x18e633 = this['_colliderS' + 'hape']['localRotat' + 'ion'], _0x4301f5 = _0x4da2bb['_btQuatern' + 'ion0'], _0x4c1fd8 = _0x52f959['rotation'];
                if (0x0 !== _0x18e633['x'] || 0x0 !== _0x18e633['y'] || 0x0 !== _0x18e633['z'] || 0x1 !== _0x18e633['w']) {
                    var _0xaea270 = _0x4da2bb['_tempQuate' + 'rnion0'];
                    _0x4da2bb['physicQuat' + 'ernionMult' + 'iply'](_0x4c1fd8['x'], _0x4c1fd8['y'], _0x4c1fd8['z'], _0x4c1fd8['w'], _0x18e633, _0xaea270), _0x4ae65e['btQuaterni' + 'on_setValu' + 'e'](_0x4301f5, -_0xaea270['x'], _0xaea270['y'], _0xaea270['z'], -_0xaea270['w']);
                } else
                    _0x4ae65e['btQuaterni' + 'on_setValu' + 'e'](_0x4301f5, -_0x4c1fd8['x'], _0x4c1fd8['y'], _0x4c1fd8['z'], -_0x4c1fd8['w']);
                _0x4ae65e['btTransfor' + 'm_setRotat' + 'ion'](_0xb0a23d, _0x4301f5), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], !0x1);
            }
            (_0x260230 || this['_getTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'])) && (this['_onScaleCh' + 'ange'](_0x52f959['getWorldLo' + 'ssyScale']()), this['_setTransf' + 'ormFlag'](_0x17c9f4['TRANSFORM_' + 'WORLDSCALE'], !0x1));
        }
        ['_updateTra' + 'nsformComp' + 'onent'](_0x491102) {
            var _0x5ba4b3 = _0x57b18d['_bullet'], _0x3eb212 = this['_colliderS' + 'hape'], _0x4a2fc6 = _0x3eb212['localOffse' + 't'], _0x535f04 = _0x3eb212['localRotat' + 'ion'], _0x23209b = this['owner']['_transform'], _0x26ce9c = _0x23209b['position'], _0x161e54 = _0x23209b['rotation'], _0x49a9a5 = _0x5ba4b3['btTransfor' + 'm_getOrigi' + 'n'](_0x491102), _0x2ae799 = _0x5ba4b3['btTransfor' + 'm_getRotat' + 'ion'](_0x491102), _0x35ea88 = -_0x5ba4b3['btQuaterni' + 'on_x'](_0x2ae799), _0x35202e = _0x5ba4b3['btQuaterni' + 'on_y'](_0x2ae799), _0x285137 = _0x5ba4b3['btQuaterni' + 'on_z'](_0x2ae799), _0x259bfa = -_0x5ba4b3['btQuaterni' + 'on_w'](_0x2ae799);
            if (0x0 !== _0x535f04['x'] || 0x0 !== _0x535f04['y'] || 0x0 !== _0x535f04['z'] || 0x1 !== _0x535f04['w']) {
                var _0x7abbcb = _0x4da2bb['_tempQuate' + 'rnion0'];
                _0x535f04['invert'](_0x7abbcb), _0x4da2bb['physicQuat' + 'ernionMult' + 'iply'](_0x35ea88, _0x35202e, _0x285137, _0x259bfa, _0x7abbcb, _0x161e54);
            } else
                _0x161e54['x'] = _0x35ea88, _0x161e54['y'] = _0x35202e, _0x161e54['z'] = _0x285137, _0x161e54['w'] = _0x259bfa;
            if (_0x23209b['rotation'] = _0x161e54, 0x0 !== _0x4a2fc6['x'] || 0x0 !== _0x4a2fc6['y'] || 0x0 !== _0x4a2fc6['z']) {
                var _0x2136a8 = _0x5ba4b3['btCollisio' + 'nShape_get' + 'LocalScali' + 'ng'](_0x3eb212['_btShape']), _0x3ac609 = _0x4da2bb['_tempVecto' + 'r30'];
                _0x3ac609['x'] = _0x4a2fc6['x'] * _0x5ba4b3['btVector3_' + 'x'](_0x2136a8), _0x3ac609['y'] = _0x4a2fc6['y'] * _0x5ba4b3['btVector3_' + 'y'](_0x2136a8), _0x3ac609['z'] = _0x4a2fc6['z'] * _0x5ba4b3['btVector3_' + 'z'](_0x2136a8), _0x43b358['transformQ' + 'uat'](_0x3ac609, _0x161e54, _0x3ac609), _0x26ce9c['x'] = -_0x5ba4b3['btVector3_' + 'x'](_0x49a9a5) - _0x3ac609['x'], _0x26ce9c['y'] = _0x5ba4b3['btVector3_' + 'y'](_0x49a9a5) - _0x3ac609['y'], _0x26ce9c['z'] = _0x5ba4b3['btVector3_' + 'z'](_0x49a9a5) - _0x3ac609['z'];
            } else
                _0x26ce9c['x'] = -_0x5ba4b3['btVector3_' + 'x'](_0x49a9a5), _0x26ce9c['y'] = _0x5ba4b3['btVector3_' + 'y'](_0x49a9a5), _0x26ce9c['z'] = _0x5ba4b3['btVector3_' + 'z'](_0x49a9a5);
            _0x23209b['position'] = _0x26ce9c;
        }
        ['_onShapeCh' + 'ange'](_0xd1a982) {
            var _0x3e48fa = this['_btCollide' + 'rObject'], _0x4373e2 = _0x57b18d['_bullet'], _0x5647b2 = _0x4373e2['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x3e48fa);
            _0xd1a982['needsCusto' + 'mCollision' + 'Callback'] ? 0x0 == (_0x5647b2 & _0x4da2bb['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) && _0x4373e2['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x3e48fa, _0x5647b2 | _0x4da2bb['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) : (_0x5647b2 & _0x4da2bb['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) > 0x0 && _0x4373e2['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x3e48fa, _0x5647b2 ^ _0x4da2bb['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']);
        }
        ['_onAdded']() {
            this['enabled'] = this['_enabled'], this['restitutio' + 'n'] = this['_restituti' + 'on'], this['friction'] = this['_friction'], this['rollingFri' + 'ction'] = this['_rollingFr' + 'iction'], this['ccdMotionT' + 'hreshold'] = this['_ccdMotion' + 'Threshold'], this['ccdSweptSp' + 'hereRadius'] = this['_ccdSweptS' + 'phereRadiu' + 's'], this['owner']['transform']['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        ['_onTransfo' + 'rmChanged'](_0x22bace) {
            !_0x4da2bb['_addUpdate' + 'List'] && this['_controlBy' + 'Simulation'] || (_0x22bace &= _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE']) && (this['_transform' + 'Flag'] |= _0x22bace, this['_isValid']() && -0x1 === this['_inPhysicU' + 'pdateListI' + 'ndex'] && this['_simulatio' + 'n']['_physicsUp' + 'dateList']['add'](this));
        }
        ['_cloneTo'](_0x517cbc) {
            var _0x38869f = _0x517cbc;
            _0x38869f['restitutio' + 'n'] = this['_restituti' + 'on'], _0x38869f['friction'] = this['_friction'], _0x38869f['rollingFri' + 'ction'] = this['_rollingFr' + 'iction'], _0x38869f['ccdMotionT' + 'hreshold'] = this['_ccdMotion' + 'Threshold'], _0x38869f['ccdSweptSp' + 'hereRadius'] = this['_ccdSweptS' + 'phereRadiu' + 's'], _0x38869f['collisionG' + 'roup'] = this['_collision' + 'Group'], _0x38869f['canCollide' + 'With'] = this['_canCollid' + 'eWith'], _0x38869f['canScaleSh' + 'ape'] = this['canScaleSh' + 'ape'], this['_colliderS' + 'hape'] && (_0x38869f['colliderSh' + 'ape'] = this['_colliderS' + 'hape']['clone']());
        }
    }
    _0x4da2bb['ACTIVATION' + 'STATE_ACTI' + 'VE_TAG'] = 0x1, _0x4da2bb['ACTIVATION' + 'STATE_ISLA' + 'ND_SLEEPIN' + 'G'] = 0x2, _0x4da2bb['ACTIVATION' + 'STATE_WANT' + 'S_DEACTIVA' + 'TION'] = 0x3, _0x4da2bb['ACTIVATION' + 'STATE_DISA' + 'BLE_DEACTI' + 'VATION'] = 0x4, _0x4da2bb['ACTIVATION' + 'STATE_DISA' + 'BLE_SIMULA' + 'TION'] = 0x5, _0x4da2bb['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT'] = 0x1, _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'] = 0x2, _0x4da2bb['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE'] = 0x4, _0x4da2bb['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK'] = 0x8, _0x4da2bb['COLLISIONF' + 'LAGS_CHARA' + 'CTER_OBJEC' + 'T'] = 0x10, _0x4da2bb['COLLISIONF' + 'LAGS_DISAB' + 'LE_VISUALI' + 'ZE_OBJECT'] = 0x20, _0x4da2bb['COLLISIONF' + 'LAGS_DISAB' + 'LE_SPU_COL' + 'LISION_PRO' + 'CESSING'] = 0x40, _0x4da2bb['_tempVecto' + 'r30'] = new _0x43b358(), _0x4da2bb['_tempQuate' + 'rnion0'] = new _0x7cf2d3(), _0x4da2bb['_tempQuate' + 'rnion1'] = new _0x7cf2d3(), _0x4da2bb['_tempMatri' + 'x4x40'] = new _0x334e9d(), _0x4da2bb['_physicObj' + 'ectsMap'] = {}, _0x4da2bb['_addUpdate' + 'List'] = !0x0;
    class _0x25e128 {
        constructor(_0x3a0be0, _0x3f6225 = 0x0) {
            this['_gravity'] = new _0x43b358(0x0, -0xa, 0x0), this['_btVector3' + 'Zero'] = _0x57b18d['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0), this['_btDefault' + 'Quaternion'] = _0x57b18d['_bullet']['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, -0x1), this['_collision' + 'sUtils'] = new _0x53e32e(), this['_previousF' + 'rameCollis' + 'ions'] = [], this['_currentFr' + 'ameCollisi' + 'ons'] = [], this['_physicsUp' + 'dateList'] = new _0x5ec1a8(), this['_character' + 's'] = [], this['_updatedRi' + 'gidbodies'] = 0x0, this['maxSubStep' + 's'] = 0x1, this['fixedTimeS' + 'tep'] = 0x1 / 0x3c, this['maxSubStep' + 's'] = _0x3a0be0['maxSubStep' + 's'], this['fixedTimeS' + 'tep'] = _0x3a0be0['fixedTimeS' + 'tep'];
            var _0x338036 = _0x57b18d['_bullet'];
            this['_btCollisi' + 'onConfigur' + 'ation'] = _0x338036['btDefaultC' + 'ollisionCo' + 'nfiguratio' + 'n_create'](), this['_btDispatc' + 'her'] = _0x338036['btCollisio' + 'nDispatche' + 'r_create'](this['_btCollisi' + 'onConfigur' + 'ation']), this['_btBroadph' + 'ase'] = _0x338036['btDbvtBroa' + 'dphase_cre' + 'ate'](), _0x338036['btOverlapp' + 'ingPairCac' + 'he_setInte' + 'rnalGhostP' + 'airCallbac' + 'k'](_0x338036['btDbvtBroa' + 'dphase_get' + 'Overlappin' + 'gPairCache'](this['_btBroadph' + 'ase']), _0x338036['btGhostPai' + 'rCallback_' + 'create']());
            var _0x54687c = _0x3a0be0['flags'];
            if (_0x54687c & _0x25e128['PHYSICSENG' + 'INEFLAGS_C' + 'OLLISIONSO' + 'NLY'])
                this['_btCollisi' + 'onWorld'] = new _0x338036['btCollisio' + 'nWorld'](this['_btDispatc' + 'her'], this['_btBroadph' + 'ase'], this['_btCollisi' + 'onConfigur' + 'ation']);
            else {
                if (_0x54687c & _0x25e128['PHYSICSENG' + 'INEFLAGS_S' + 'OFTBODYSUP' + 'PORT'])
                    throw 'PhysicsSim' + 'ulation:So' + 'ftBody\x20pro' + 'cessing\x20is' + '\x20not\x20yet\x20a' + 'vailable';
                var _0x2d6796 = _0x338036['btSequenti' + 'alImpulseC' + 'onstraintS' + 'olver_crea' + 'te']();
                this['_btDiscret' + 'eDynamicsW' + 'orld'] = _0x338036['btDiscrete' + 'DynamicsWo' + 'rld_create'](this['_btDispatc' + 'her'], this['_btBroadph' + 'ase'], _0x2d6796, this['_btCollisi' + 'onConfigur' + 'ation']), this['_btCollisi' + 'onWorld'] = this['_btDiscret' + 'eDynamicsW' + 'orld'];
            }
            this['_btDiscret' + 'eDynamicsW' + 'orld'] && (this['_btSolverI' + 'nfo'] = _0x338036['btDynamics' + 'World_getS' + 'olverInfo'](this['_btDiscret' + 'eDynamicsW' + 'orld']), this['_btDispatc' + 'hInfo'] = _0x338036['btCollisio' + 'nWorld_get' + 'DispatchIn' + 'fo'](this['_btDiscret' + 'eDynamicsW' + 'orld'])), this['_btClosest' + 'RayResultC' + 'allback'] = _0x338036['ClosestRay' + 'ResultCall' + 'back_creat' + 'e'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btAllHits' + 'RayResultC' + 'allback'] = _0x338036['AllHitsRay' + 'ResultCall' + 'back_creat' + 'e'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btClosest' + 'ConvexResu' + 'ltCallback'] = _0x338036['ClosestCon' + 'vexResultC' + 'allback_cr' + 'eate'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btAllConv' + 'exResultCa' + 'llback'] = _0x338036['AllConvexR' + 'esultCallb' + 'ack_create'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), _0x338036['btGImpactC' + 'ollisionAl' + 'gorithm_Re' + 'gisterAlgo' + 'rithm'](this['_btDispatc' + 'her']);
        }
        static ['__init__']() {
            var _0x36eece = _0x57b18d['_bullet'];
            _0x25e128['_btTempVec' + 'tor30'] = _0x36eece['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x25e128['_btTempVec' + 'tor31'] = _0x36eece['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x25e128['_btTempQua' + 'ternion0'] = _0x36eece['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x25e128['_btTempQua' + 'ternion1'] = _0x36eece['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x25e128['_btTempTra' + 'nsform0'] = _0x36eece['btTransfor' + 'm_create'](), _0x25e128['_btTempTra' + 'nsform1'] = _0x36eece['btTransfor' + 'm_create']();
        }
        static ['createCons' + 'traint']() {
        }
        get ['continuous' + 'CollisionD' + 'etection']() {
            return _0x57b18d['_bullet']['btCollisio' + 'nWorld_get' + '_m_useCont' + 'inuous'](this['_btDispatc' + 'hInfo']);
        }
        set ['continuous' + 'CollisionD' + 'etection'](_0x3dc7e1) {
            _0x57b18d['_bullet']['btCollisio' + 'nWorld_set' + '_m_useCont' + 'inuous'](this['_btDispatc' + 'hInfo'], _0x3dc7e1);
        }
        get ['gravity']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            return this['_gravity'];
        }
        set ['gravity'](_0x73b090) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            this['_gravity'] = _0x73b090;
            var _0x1edebb = _0x57b18d['_bullet'], _0xe0164a = _0x25e128['_btTempVec' + 'tor30'];
            _0x1edebb['btVector3_' + 'setValue'](_0xe0164a, -_0x73b090['x'], _0x73b090['y'], _0x73b090['z']), _0x1edebb['btDiscrete' + 'DynamicsWo' + 'rld_setGra' + 'vity'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0xe0164a);
        }
        get ['speculativ' + 'eContactRe' + 'stitution']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20Ca' + 'nnot\x20perfo' + 'rm\x20this\x20ac' + 'tion\x20when\x20' + 'the\x20physic' + 's\x20engine\x20i' + 's\x20set\x20to\x20C' + 'ollisionsO' + 'nly';
            return _0x57b18d['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_getApp' + 'lySpeculat' + 'iveContact' + 'Restitutio' + 'n'](this['_btDiscret' + 'eDynamicsW' + 'orld']);
        }
        set ['speculativ' + 'eContactRe' + 'stitution'](_0x3875b8) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20Ca' + 'nnot\x20perfo' + 'rm\x20this\x20ac' + 'tion\x20when\x20' + 'the\x20physic' + 's\x20engine\x20i' + 's\x20set\x20to\x20C' + 'ollisionsO' + 'nly';
            _0x57b18d['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_setApp' + 'lySpeculat' + 'iveContact' + 'Restitutio' + 'n'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x3875b8);
        }
        ['_simulate'](_0x59f5ed) {
            this['_updatedRi' + 'gidbodies'] = 0x0;
            var _0x566f07 = _0x57b18d['_bullet'];
            this['_btDiscret' + 'eDynamicsW' + 'orld'] ? _0x566f07['btDiscrete' + 'DynamicsWo' + 'rld_stepSi' + 'mulation'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x59f5ed, this['maxSubStep' + 's'], this['fixedTimeS' + 'tep']) : _0x566f07['PerformDis' + 'creteColli' + 'sionDetect' + 'ion'](this['_btCollisi' + 'onWorld']);
        }
        ['_destroy']() {
            var _0x961bf6 = _0x57b18d['_bullet'];
            this['_btDiscret' + 'eDynamicsW' + 'orld'] ? (_0x961bf6['btCollisio' + 'nWorld_des' + 'troy'](this['_btDiscret' + 'eDynamicsW' + 'orld']), this['_btDiscret' + 'eDynamicsW' + 'orld'] = null) : (_0x961bf6['btCollisio' + 'nWorld_des' + 'troy'](this['_btCollisi' + 'onWorld']), this['_btCollisi' + 'onWorld'] = null), _0x961bf6['btDbvtBroa' + 'dphase_des' + 'troy'](this['_btBroadph' + 'ase']), this['_btBroadph' + 'ase'] = null, _0x961bf6['btCollisio' + 'nDispatche' + 'r_destroy'](this['_btDispatc' + 'her']), this['_btDispatc' + 'her'] = null, _0x961bf6['btDefaultC' + 'ollisionCo' + 'nfiguratio' + 'n_destroy'](this['_btCollisi' + 'onConfigur' + 'ation']), this['_btCollisi' + 'onConfigur' + 'ation'] = null;
        }
        ['_addPhysic' + 'sCollider'](_0x4c4531, _0x11c142, _0x38ca7e) {
            _0x57b18d['_bullet']['btCollisio' + 'nWorld_add' + 'CollisionO' + 'bject'](this['_btCollisi' + 'onWorld'], _0x4c4531['_btCollide' + 'rObject'], _0x11c142, _0x38ca7e);
        }
        ['_removePhy' + 'sicsCollid' + 'er'](_0x538234) {
            _0x57b18d['_bullet']['btCollisio' + 'nWorld_rem' + 'oveCollisi' + 'onObject'](this['_btCollisi' + 'onWorld'], _0x538234['_btCollide' + 'rObject']);
        }
        ['_addRigidB' + 'ody'](_0x29c9c1, _0xcade85, _0x5e5a64) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            _0x57b18d['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_addRig' + 'idBody'](this['_btCollisi' + 'onWorld'], _0x29c9c1['_btCollide' + 'rObject'], _0xcade85, _0x5e5a64);
        }
        ['_removeRig' + 'idBody'](_0x1c4da6) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            _0x57b18d['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_remove' + 'RigidBody'](this['_btCollisi' + 'onWorld'], _0x1c4da6['_btCollide' + 'rObject']);
        }
        ['_addCharac' + 'ter'](_0x53eab6, _0x48628d, _0x4baf54) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            var _0x431c31 = _0x57b18d['_bullet'];
            _0x431c31['btCollisio' + 'nWorld_add' + 'CollisionO' + 'bject'](this['_btCollisi' + 'onWorld'], _0x53eab6['_btCollide' + 'rObject'], _0x48628d, _0x4baf54), _0x431c31['btDynamics' + 'World_addA' + 'ction'](this['_btCollisi' + 'onWorld'], _0x53eab6['_btKinemat' + 'icCharacte' + 'r']);
        }
        ['_removeCha' + 'racter'](_0x4cff90) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            var _0x178dd1 = _0x57b18d['_bullet'];
            _0x178dd1['btCollisio' + 'nWorld_rem' + 'oveCollisi' + 'onObject'](this['_btCollisi' + 'onWorld'], _0x4cff90['_btCollide' + 'rObject']), _0x178dd1['btDynamics' + 'World_remo' + 'veAction'](this['_btCollisi' + 'onWorld'], _0x4cff90['_btKinemat' + 'icCharacte' + 'r']);
        }
        ['raycastFro' + 'mTo'](_0x500d40, _0x1f1b13, _0x39766a = null, _0x2056ed = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0xa1abe0 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x4681a9 = _0x57b18d['_bullet'], _0x822278 = this['_btClosest' + 'RayResultC' + 'allback'], _0x2e8711 = _0x25e128['_btTempVec' + 'tor30'], _0x14079f = _0x25e128['_btTempVec' + 'tor31'];
            if (_0x4681a9['btVector3_' + 'setValue'](_0x2e8711, -_0x500d40['x'], _0x500d40['y'], _0x500d40['z']), _0x4681a9['btVector3_' + 'setValue'](_0x14079f, -_0x1f1b13['x'], _0x1f1b13['y'], _0x1f1b13['z']), _0x4681a9['ClosestRay' + 'ResultCall' + 'back_set_m' + '_rayFromWo' + 'rld'](_0x822278, _0x2e8711), _0x4681a9['ClosestRay' + 'ResultCall' + 'back_set_m' + '_rayToWorl' + 'd'](_0x822278, _0x14079f), _0x4681a9['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterG' + 'roup'](_0x822278, _0x2056ed), _0x4681a9['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterM' + 'ask'](_0x822278, _0xa1abe0), _0x4681a9['RayResultC' + 'allback_se' + 't_m_collis' + 'ionObject'](_0x822278, null), _0x4681a9['RayResultC' + 'allback_se' + 't_m_closes' + 'tHitFracti' + 'on'](_0x822278, 0x1), _0x4681a9['btCollisio' + 'nWorld_ray' + 'Test'](this['_btCollisi' + 'onWorld'], _0x2e8711, _0x14079f, _0x822278), _0x4681a9['RayResultC' + 'allback_ha' + 'sHit'](_0x822278)) {
                if (_0x39766a) {
                    _0x39766a['succeeded'] = !0x0, _0x39766a['collider'] = _0x4da2bb['_physicObj' + 'ectsMap'][_0x4681a9['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x4681a9['RayResultC' + 'allback_ge' + 't_m_collis' + 'ionObject'](_0x822278))], _0x39766a['hitFractio' + 'n'] = _0x4681a9['RayResultC' + 'allback_ge' + 't_m_closes' + 'tHitFracti' + 'on'](_0x822278);
                    var _0xd94bdc = _0x4681a9['ClosestRay' + 'ResultCall' + 'back_get_m' + '_hitPointW' + 'orld'](_0x822278), _0x7e1aa0 = _0x39766a['point'];
                    _0x7e1aa0['x'] = -_0x4681a9['btVector3_' + 'x'](_0xd94bdc), _0x7e1aa0['y'] = _0x4681a9['btVector3_' + 'y'](_0xd94bdc), _0x7e1aa0['z'] = _0x4681a9['btVector3_' + 'z'](_0xd94bdc);
                    var _0x1aa74b = _0x4681a9['ClosestRay' + 'ResultCall' + 'back_get_m' + '_hitNormal' + 'World'](_0x822278), _0x31a81d = _0x39766a['normal'];
                    _0x31a81d['x'] = -_0x4681a9['btVector3_' + 'x'](_0x1aa74b), _0x31a81d['y'] = _0x4681a9['btVector3_' + 'y'](_0x1aa74b), _0x31a81d['z'] = _0x4681a9['btVector3_' + 'z'](_0x1aa74b);
                }
                return !0x0;
            }
            return _0x39766a && (_0x39766a['succeeded'] = !0x1), !0x1;
        }
        ['raycastAll' + 'FromTo'](_0x52c961, _0x5be3f4, _0x4362ff, _0x5948a3 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x323f3f = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0xc9b70 = _0x57b18d['_bullet'], _0xe1fe76 = this['_btAllHits' + 'RayResultC' + 'allback'], _0x4a8c06 = _0x25e128['_btTempVec' + 'tor30'], _0x24a325 = _0x25e128['_btTempVec' + 'tor31'];
            _0x4362ff['length'] = 0x0, _0xc9b70['btVector3_' + 'setValue'](_0x4a8c06, -_0x52c961['x'], _0x52c961['y'], _0x52c961['z']), _0xc9b70['btVector3_' + 'setValue'](_0x24a325, -_0x5be3f4['x'], _0x5be3f4['y'], _0x5be3f4['z']), _0xc9b70['AllHitsRay' + 'ResultCall' + 'back_set_m' + '_rayFromWo' + 'rld'](_0xe1fe76, _0x4a8c06), _0xc9b70['AllHitsRay' + 'ResultCall' + 'back_set_m' + '_rayToWorl' + 'd'](_0xe1fe76, _0x24a325), _0xc9b70['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterG' + 'roup'](_0xe1fe76, _0x5948a3), _0xc9b70['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterM' + 'ask'](_0xe1fe76, _0x323f3f);
            var _0x502f8f = _0xc9b70['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_collision' + 'Objects'](_0xe1fe76), _0x194f0c = _0xc9b70['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitPointW' + 'orld'](_0xe1fe76), _0x108101 = _0xc9b70['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitNormal' + 'World'](_0xe1fe76), _0x209708 = _0xc9b70['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitFracti' + 'ons'](_0xe1fe76);
            _0xc9b70['tBtCollisi' + 'onObjectAr' + 'ray_clear'](_0x502f8f), _0xc9b70['tVector3Ar' + 'ray_clear'](_0x194f0c), _0xc9b70['tVector3Ar' + 'ray_clear'](_0x108101), _0xc9b70['tScalarArr' + 'ay_clear'](_0x209708), _0xc9b70['btCollisio' + 'nWorld_ray' + 'Test'](this['_btCollisi' + 'onWorld'], _0x4a8c06, _0x24a325, _0xe1fe76);
            var _0x22a1a5 = _0xc9b70['tBtCollisi' + 'onObjectAr' + 'ray_size'](_0x502f8f);
            if (_0x22a1a5 > 0x0) {
                this['_collision' + 'sUtils']['recoverAll' + 'HitResults' + 'Pool']();
                for (var _0x300b1c = 0x0; _0x300b1c < _0x22a1a5; _0x300b1c++) {
                    var _0x1113ff = this['_collision' + 'sUtils']['getHitResu' + 'lt']();
                    _0x4362ff['push'](_0x1113ff), _0x1113ff['succeeded'] = !0x0, _0x1113ff['collider'] = _0x4da2bb['_physicObj' + 'ectsMap'][_0xc9b70['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0xc9b70['tBtCollisi' + 'onObjectAr' + 'ray_at'](_0x502f8f, _0x300b1c))], _0x1113ff['hitFractio' + 'n'] = _0xc9b70['tScalarArr' + 'ay_at'](_0x209708, _0x300b1c);
                    var _0x10885a = _0xc9b70['tVector3Ar' + 'ray_at'](_0x194f0c, _0x300b1c), _0x10f2e2 = _0x1113ff['point'];
                    _0x10f2e2['x'] = -_0xc9b70['btVector3_' + 'x'](_0x10885a), _0x10f2e2['y'] = _0xc9b70['btVector3_' + 'y'](_0x10885a), _0x10f2e2['z'] = _0xc9b70['btVector3_' + 'z'](_0x10885a);
                    var _0x30239f = _0xc9b70['tVector3Ar' + 'ray_at'](_0x108101, _0x300b1c), _0x15a637 = _0x1113ff['normal'];
                    _0x15a637['x'] = -_0xc9b70['btVector3_' + 'x'](_0x30239f), _0x15a637['y'] = _0xc9b70['btVector3_' + 'y'](_0x30239f), _0x15a637['z'] = _0xc9b70['btVector3_' + 'z'](_0x30239f);
                }
                return !0x0;
            }
            return !0x1;
        }
        ['rayCast'](_0x28199b, _0x10369b = null, _0x38bbfa = 0x7fffffff, _0x11dcaa = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x62828e = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x461c62 = _0x28199b['origin'], _0x56de3 = _0x25e128['_tempVecto' + 'r30'];
            return _0x43b358['normalize'](_0x28199b['direction'], _0x56de3), _0x43b358['scale'](_0x56de3, _0x38bbfa, _0x56de3), _0x43b358['add'](_0x461c62, _0x56de3, _0x56de3), this['raycastFro' + 'mTo'](_0x461c62, _0x56de3, _0x10369b, _0x11dcaa, _0x62828e);
        }
        ['rayCastAll'](_0x1fa40e, _0x16f447, _0xb4c03 = 0x7fffffff, _0x2a964e = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0xb62401 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x4bd60c = _0x1fa40e['origin'], _0x4197d3 = _0x25e128['_tempVecto' + 'r30'];
            return _0x43b358['normalize'](_0x1fa40e['direction'], _0x4197d3), _0x43b358['scale'](_0x4197d3, _0xb4c03, _0x4197d3), _0x43b358['add'](_0x4bd60c, _0x4197d3, _0x4197d3), this['raycastAll' + 'FromTo'](_0x4bd60c, _0x4197d3, _0x16f447, _0x2a964e, _0xb62401);
        }
        ['shapeCast'](_0x41ea61, _0x25b3a3, _0x5c6da5, _0x58d489 = null, _0x279581 = null, _0x101bbd = null, _0x579844 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x2c5c86 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x555abb = 0x0) {
            var _0x309eb4 = _0x57b18d['_bullet'], _0x37e160 = this['_btClosest' + 'ConvexResu' + 'ltCallback'], _0x14c82a = _0x25e128['_btTempVec' + 'tor30'], _0x37d828 = _0x25e128['_btTempVec' + 'tor31'], _0x58a304 = _0x25e128['_btTempQua' + 'ternion0'], _0x5555fc = _0x25e128['_btTempQua' + 'ternion1'], _0x172c7c = _0x25e128['_btTempTra' + 'nsform0'], _0x3420e2 = _0x25e128['_btTempTra' + 'nsform1'], _0x33276c = _0x41ea61['_btShape'];
            if (_0x309eb4['btVector3_' + 'setValue'](_0x14c82a, -_0x25b3a3['x'], _0x25b3a3['y'], _0x25b3a3['z']), _0x309eb4['btVector3_' + 'setValue'](_0x37d828, -_0x5c6da5['x'], _0x5c6da5['y'], _0x5c6da5['z']), _0x309eb4['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erGroup'](_0x37e160, _0x579844), _0x309eb4['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erMask'](_0x37e160, _0x2c5c86), _0x309eb4['btTransfor' + 'm_setOrigi' + 'n'](_0x172c7c, _0x14c82a), _0x309eb4['btTransfor' + 'm_setOrigi' + 'n'](_0x3420e2, _0x37d828), _0x279581 ? (_0x309eb4['btQuaterni' + 'on_setValu' + 'e'](_0x58a304, -_0x279581['x'], _0x279581['y'], _0x279581['z'], -_0x279581['w']), _0x309eb4['btTransfor' + 'm_setRotat' + 'ion'](_0x172c7c, _0x58a304)) : _0x309eb4['btTransfor' + 'm_setRotat' + 'ion'](_0x172c7c, this['_btDefault' + 'Quaternion']), _0x101bbd ? (_0x309eb4['btQuaterni' + 'on_setValu' + 'e'](_0x5555fc, -_0x101bbd['x'], _0x101bbd['y'], _0x101bbd['z'], -_0x101bbd['w']), _0x309eb4['btTransfor' + 'm_setRotat' + 'ion'](_0x3420e2, _0x5555fc)) : _0x309eb4['btTransfor' + 'm_setRotat' + 'ion'](_0x3420e2, this['_btDefault' + 'Quaternion']), _0x309eb4['ClosestCon' + 'vexResultC' + 'allback_se' + 't_m_hitCol' + 'lisionObje' + 'ct'](_0x37e160, null), _0x309eb4['ConvexResu' + 'ltCallback' + '_set_m_clo' + 'sestHitFra' + 'ction'](_0x37e160, 0x1), _0x309eb4['btCollisio' + 'nWorld_con' + 'vexSweepTe' + 'st'](this['_btCollisi' + 'onWorld'], _0x33276c, _0x172c7c, _0x3420e2, _0x37e160, _0x555abb), _0x309eb4['ConvexResu' + 'ltCallback' + '_hasHit'](_0x37e160)) {
                if (_0x58d489) {
                    _0x58d489['succeeded'] = !0x0, _0x58d489['collider'] = _0x4da2bb['_physicObj' + 'ectsMap'][_0x309eb4['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x309eb4['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitCol' + 'lisionObje' + 'ct'](_0x37e160))], _0x58d489['hitFractio' + 'n'] = _0x309eb4['ConvexResu' + 'ltCallback' + '_get_m_clo' + 'sestHitFra' + 'ction'](_0x37e160);
                    var _0x496ca9 = _0x309eb4['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitPoi' + 'ntWorld'](_0x37e160), _0x3080a5 = _0x309eb4['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitNor' + 'malWorld'](_0x37e160), _0x4d106d = _0x58d489['point'], _0x205e36 = _0x58d489['normal'];
                    _0x4d106d['x'] = -_0x309eb4['btVector3_' + 'x'](_0x496ca9), _0x4d106d['y'] = _0x309eb4['btVector3_' + 'y'](_0x496ca9), _0x4d106d['z'] = _0x309eb4['btVector3_' + 'z'](_0x496ca9), _0x205e36['x'] = -_0x309eb4['btVector3_' + 'x'](_0x3080a5), _0x205e36['y'] = _0x309eb4['btVector3_' + 'y'](_0x3080a5), _0x205e36['z'] = _0x309eb4['btVector3_' + 'z'](_0x3080a5);
                }
                return !0x0;
            }
            return _0x58d489 && (_0x58d489['succeeded'] = !0x1), !0x1;
        }
        ['shapeCastA' + 'll'](_0x34a7b5, _0x41e105, _0x5632a6, _0x4615b4, _0x3bcc3c = null, _0xe21029 = null, _0x7d8c29 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x2e36e8 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x35aa90 = 0x0) {
            var _0x254e67 = _0x57b18d['_bullet'], _0xabc557 = this['_btAllConv' + 'exResultCa' + 'llback'], _0x316bf8 = _0x25e128['_btTempVec' + 'tor30'], _0x15f32c = _0x25e128['_btTempVec' + 'tor31'], _0x2adbcc = _0x25e128['_btTempQua' + 'ternion0'], _0x3034ed = _0x25e128['_btTempQua' + 'ternion1'], _0x580656 = _0x25e128['_btTempTra' + 'nsform0'], _0x191b7d = _0x25e128['_btTempTra' + 'nsform1'], _0x2ea7e1 = _0x34a7b5['_btShape'];
            _0x4615b4['length'] = 0x0, _0x254e67['btVector3_' + 'setValue'](_0x316bf8, -_0x41e105['x'], _0x41e105['y'], _0x41e105['z']), _0x254e67['btVector3_' + 'setValue'](_0x15f32c, -_0x5632a6['x'], _0x5632a6['y'], _0x5632a6['z']), _0x254e67['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erGroup'](_0xabc557, _0x7d8c29), _0x254e67['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erMask'](_0xabc557, _0x2e36e8), _0x254e67['btTransfor' + 'm_setOrigi' + 'n'](_0x580656, _0x316bf8), _0x254e67['btTransfor' + 'm_setOrigi' + 'n'](_0x191b7d, _0x15f32c), _0x3bcc3c ? (_0x254e67['btQuaterni' + 'on_setValu' + 'e'](_0x2adbcc, -_0x3bcc3c['x'], _0x3bcc3c['y'], _0x3bcc3c['z'], -_0x3bcc3c['w']), _0x254e67['btTransfor' + 'm_setRotat' + 'ion'](_0x580656, _0x2adbcc)) : _0x254e67['btTransfor' + 'm_setRotat' + 'ion'](_0x580656, this['_btDefault' + 'Quaternion']), _0xe21029 ? (_0x254e67['btQuaterni' + 'on_setValu' + 'e'](_0x3034ed, -_0xe21029['x'], _0xe21029['y'], _0xe21029['z'], -_0xe21029['w']), _0x254e67['btTransfor' + 'm_setRotat' + 'ion'](_0x191b7d, _0x3034ed)) : _0x254e67['btTransfor' + 'm_setRotat' + 'ion'](_0x191b7d, this['_btDefault' + 'Quaternion']);
            var _0x3f0b10 = _0x254e67['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'collisionO' + 'bjects'](_0xabc557);
            _0x254e67['tBtCollisi' + 'onObjectAr' + 'ray_clear'](_0x3f0b10), _0x254e67['btCollisio' + 'nWorld_con' + 'vexSweepTe' + 'st'](this['_btCollisi' + 'onWorld'], _0x2ea7e1, _0x580656, _0x191b7d, _0xabc557, _0x35aa90);
            var _0x97670b = _0x254e67['tBtCollisi' + 'onObjectAr' + 'ray_size'](_0x3f0b10);
            if (_0x97670b > 0x0) {
                for (var _0x509110 = _0x254e67['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitPointWo' + 'rld'](_0xabc557), _0x157211 = _0x254e67['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitNormalW' + 'orld'](_0xabc557), _0x1d1f4d = _0x254e67['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitFractio' + 'ns'](_0xabc557), _0x55bdb7 = 0x0; _0x55bdb7 < _0x97670b; _0x55bdb7++) {
                    var _0x2280ed = this['_collision' + 'sUtils']['getHitResu' + 'lt']();
                    _0x4615b4['push'](_0x2280ed), _0x2280ed['succeeded'] = !0x0, _0x2280ed['collider'] = _0x4da2bb['_physicObj' + 'ectsMap'][_0x254e67['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x254e67['tBtCollisi' + 'onObjectAr' + 'ray_at'](_0x3f0b10, _0x55bdb7))], _0x2280ed['hitFractio' + 'n'] = _0x254e67['tScalarArr' + 'ay_at'](_0x1d1f4d, _0x55bdb7);
                    var _0x38d7bb = _0x254e67['tVector3Ar' + 'ray_at'](_0x509110, _0x55bdb7), _0x1db9b4 = _0x2280ed['point'];
                    _0x1db9b4['x'] = -_0x254e67['btVector3_' + 'x'](_0x38d7bb), _0x1db9b4['y'] = _0x254e67['btVector3_' + 'y'](_0x38d7bb), _0x1db9b4['z'] = _0x254e67['btVector3_' + 'z'](_0x38d7bb);
                    var _0x46456e = _0x254e67['tVector3Ar' + 'ray_at'](_0x157211, _0x55bdb7), _0x1e0dfb = _0x2280ed['normal'];
                    _0x1e0dfb['x'] = -_0x254e67['btVector3_' + 'x'](_0x46456e), _0x1e0dfb['y'] = _0x254e67['btVector3_' + 'y'](_0x46456e), _0x1e0dfb['z'] = _0x254e67['btVector3_' + 'z'](_0x46456e);
                }
                return !0x0;
            }
            return !0x1;
        }
        ['addConstra' + 'int'](_0x34e8a1, _0x3a1a03 = !0x1) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0x34e8a1['_simulatio' + 'n'] = this;
        }
        ['removeCons' + 'traint'](_0x563340) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
        }
        ['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der']() {
            for (var _0x48f7dd = this['_physicsUp' + 'dateList']['elements'], _0x32685f = 0x0, _0x17f8ce = this['_physicsUp' + 'dateList']['length']; _0x32685f < _0x17f8ce; _0x32685f++) {
                var _0x19a696 = _0x48f7dd[_0x32685f];
                _0x19a696['_derivePhy' + 'sicsTransf' + 'ormation'](!0x1), _0x19a696['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1;
            }
            this['_physicsUp' + 'dateList']['length'] = 0x0;
        }
        ['_updateCha' + 'racters']() {
            for (var _0x58a335 = 0x0, _0x5e2a2e = this['_character' + 's']['length']; _0x58a335 < _0x5e2a2e; _0x58a335++) {
                var _0x19d906 = this['_character' + 's'][_0x58a335];
                _0x19d906['_updateTra' + 'nsformComp' + 'onent'](_0x57b18d['_bullet']['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x19d906['_btCollide' + 'rObject']));
            }
        }
        ['_updateCol' + 'lisions']() {
            this['_collision' + 'sUtils']['recoverAll' + 'ContactPoi' + 'ntsPool']();
            var _0x4f3ffd = this['_currentFr' + 'ameCollisi' + 'ons'];
            this['_currentFr' + 'ameCollisi' + 'ons'] = this['_previousF' + 'rameCollis' + 'ions'], this['_currentFr' + 'ameCollisi' + 'ons']['length'] = 0x0, this['_previousF' + 'rameCollis' + 'ions'] = _0x4f3ffd;
            for (var _0xaa23a0 = _0x2247ad['Stat']['loopCount'], _0x2d0307 = _0x57b18d['_bullet'], _0xbf1c85 = _0x2d0307['btDispatch' + 'er_getNumM' + 'anifolds'](this['_btDispatc' + 'her']), _0x38f3ac = 0x0; _0x38f3ac < _0xbf1c85; _0x38f3ac++) {
                var _0x337a6e, _0x2aef19 = _0x2d0307['btDispatch' + 'er_getMani' + 'foldByInde' + 'xInternal'](this['_btDispatc' + 'her'], _0x38f3ac), _0x3a93cb = _0x4da2bb['_physicObj' + 'ectsMap'][_0x2d0307['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x2d0307['btPersiste' + 'ntManifold' + '_getBody0'](_0x2aef19))], _0x535dea = _0x4da2bb['_physicObj' + 'ectsMap'][_0x2d0307['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x2d0307['btPersiste' + 'ntManifold' + '_getBody1'](_0x2aef19))], _0x3e26fb = null, _0x241d2c = null;
                if ((_0x3a93cb['isTrigger'] || _0x535dea['isTrigger']) && (_0x3a93cb['owner']['_needProce' + 'ssTriggers'] || _0x535dea['owner']['_needProce' + 'ssTriggers']))
                    for (var _0x2a4dc5 = _0x2d0307['btPersiste' + 'ntManifold' + '_getNumCon' + 'tacts'](_0x2aef19), _0x25d952 = 0x0; _0x25d952 < _0x2a4dc5; _0x25d952++) {
                        var _0x43cc6a = _0x2d0307['btPersiste' + 'ntManifold' + '_getContac' + 'tPoint'](_0x2aef19, _0x25d952), _0xcd6df8 = _0x2d0307['btManifold' + 'Point_getD' + 'istance'](_0x43cc6a);
                        if (_0xcd6df8 <= 0x0) {
                            _0x241d2c = (_0x3e26fb = this['_collision' + 'sUtils']['getCollisi' + 'on'](_0x3a93cb, _0x535dea))['contacts'], (_0x337a6e = _0x3e26fb['_updateFra' + 'me'] !== _0xaa23a0) && (_0x3e26fb['_isTrigger'] = !0x0, _0x241d2c['length'] = 0x0);
                            break;
                        }
                    }
                else {
                    if ((_0x3a93cb['owner']['_needProce' + 'ssCollisio' + 'ns'] || _0x535dea['owner']['_needProce' + 'ssCollisio' + 'ns']) && (_0x3a93cb['_enablePro' + 'cessCollis' + 'ions'] || _0x535dea['_enablePro' + 'cessCollis' + 'ions'])) {
                        for (_0x2a4dc5 = _0x2d0307['btPersiste' + 'ntManifold' + '_getNumCon' + 'tacts'](_0x2aef19), _0x25d952 = 0x0; _0x25d952 < _0x2a4dc5; _0x25d952++)
                            if (_0x43cc6a = _0x2d0307['btPersiste' + 'ntManifold' + '_getContac' + 'tPoint'](_0x2aef19, _0x25d952), (_0xcd6df8 = _0x2d0307['btManifold' + 'Point_getD' + 'istance'](_0x43cc6a)) <= 0x0) {
                                var _0x2b0ed5 = this['_collision' + 'sUtils']['getContact' + 'Points']();
                                _0x2b0ed5['colliderA'] = _0x3a93cb, _0x2b0ed5['colliderB'] = _0x535dea, _0x2b0ed5['distance'] = _0xcd6df8;
                                var _0x3f3aa0 = _0x2d0307['btManifold' + 'Point_get_' + 'm_normalWo' + 'rldOnB'](_0x43cc6a), _0x22f7fd = _0x2b0ed5['normal'];
                                _0x22f7fd['x'] = -_0x2d0307['btVector3_' + 'x'](_0x3f3aa0), _0x22f7fd['y'] = _0x2d0307['btVector3_' + 'y'](_0x3f3aa0), _0x22f7fd['z'] = _0x2d0307['btVector3_' + 'z'](_0x3f3aa0);
                                var _0x3f6953 = _0x2d0307['btManifold' + 'Point_get_' + 'm_position' + 'WorldOnA'](_0x43cc6a), _0x1186cd = _0x2b0ed5['positionOn' + 'A'];
                                _0x1186cd['x'] = -_0x2d0307['btVector3_' + 'x'](_0x3f6953), _0x1186cd['y'] = _0x2d0307['btVector3_' + 'y'](_0x3f6953), _0x1186cd['z'] = _0x2d0307['btVector3_' + 'z'](_0x3f6953);
                                var _0x355639 = _0x2d0307['btManifold' + 'Point_get_' + 'm_position' + 'WorldOnB'](_0x43cc6a), _0x204dbc = _0x2b0ed5['positionOn' + 'B'];
                                _0x204dbc['x'] = -_0x2d0307['btVector3_' + 'x'](_0x355639), _0x204dbc['y'] = _0x2d0307['btVector3_' + 'y'](_0x355639), _0x204dbc['z'] = _0x2d0307['btVector3_' + 'z'](_0x355639), _0x3e26fb || (_0x241d2c = (_0x3e26fb = this['_collision' + 'sUtils']['getCollisi' + 'on'](_0x3a93cb, _0x535dea))['contacts'], (_0x337a6e = _0x3e26fb['_updateFra' + 'me'] !== _0xaa23a0) && (_0x3e26fb['_isTrigger'] = !0x1, _0x241d2c['length'] = 0x0)), _0x241d2c['push'](_0x2b0ed5);
                            }
                    }
                }
                _0x3e26fb && _0x337a6e && (this['_currentFr' + 'ameCollisi' + 'ons']['push'](_0x3e26fb), _0x3e26fb['_setUpdate' + 'Frame'](_0xaa23a0));
            }
        }
        ['_eventScri' + 'pts']() {
            for (var _0x66269 = _0x2247ad['Stat']['loopCount'], _0x1ce996 = 0x0, _0x34709f = this['_currentFr' + 'ameCollisi' + 'ons']['length']; _0x1ce996 < _0x34709f; _0x1ce996++) {
                var _0x5cbace = this['_currentFr' + 'ameCollisi' + 'ons'][_0x1ce996], _0x4c7e55 = _0x5cbace['_colliderA'], _0x31ec1e = _0x5cbace['_colliderB'];
                if (!_0x4c7e55['destroyed'] && !_0x31ec1e['destroyed']) {
                    if (_0x66269 - _0x5cbace['_lastUpdat' + 'eFrame'] == 0x1) {
                        var _0x2cc161 = _0x4c7e55['owner'], _0x2c5281 = _0x2cc161['_scripts'];
                        if (_0x2c5281) {
                            if (_0x5cbace['_isTrigger']) {
                                if (_0x2cc161['_needProce' + 'ssTriggers']) {
                                    for (var _0x2e5aa3 = 0x0, _0x1f2029 = _0x2c5281['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x2c5281[_0x2e5aa3]['onTriggerS' + 'tay'](_0x31ec1e);
                                }
                            } else {
                                if (_0x2cc161['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x2c5281['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x5cbace['other'] = _0x31ec1e, _0x2c5281[_0x2e5aa3]['onCollisio' + 'nStay'](_0x5cbace);
                                }
                            }
                        }
                        var _0x139160 = _0x31ec1e['owner'], _0x20c5c3 = _0x139160['_scripts'];
                        if (_0x20c5c3) {
                            if (_0x5cbace['_isTrigger']) {
                                if (_0x139160['_needProce' + 'ssTriggers']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x20c5c3['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x20c5c3[_0x2e5aa3]['onTriggerS' + 'tay'](_0x4c7e55);
                                }
                            } else {
                                if (_0x139160['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x20c5c3['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x5cbace['other'] = _0x4c7e55, _0x20c5c3[_0x2e5aa3]['onCollisio' + 'nStay'](_0x5cbace);
                                }
                            }
                        }
                    } else {
                        if (_0x2c5281 = (_0x2cc161 = _0x4c7e55['owner'])['_scripts']) {
                            if (_0x5cbace['_isTrigger']) {
                                if (_0x2cc161['_needProce' + 'ssTriggers']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x2c5281['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x2c5281[_0x2e5aa3]['onTriggerE' + 'nter'](_0x31ec1e);
                                }
                            } else {
                                if (_0x2cc161['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x2c5281['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x5cbace['other'] = _0x31ec1e, _0x2c5281[_0x2e5aa3]['onCollisio' + 'nEnter'](_0x5cbace);
                                }
                            }
                        }
                        if (_0x20c5c3 = (_0x139160 = _0x31ec1e['owner'])['_scripts']) {
                            if (_0x5cbace['_isTrigger']) {
                                if (_0x139160['_needProce' + 'ssTriggers']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x20c5c3['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x20c5c3[_0x2e5aa3]['onTriggerE' + 'nter'](_0x4c7e55);
                                }
                            } else {
                                if (_0x139160['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x20c5c3['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                        _0x5cbace['other'] = _0x4c7e55, _0x20c5c3[_0x2e5aa3]['onCollisio' + 'nEnter'](_0x5cbace);
                                }
                            }
                        }
                    }
                }
            }
            for (_0x1ce996 = 0x0, _0x34709f = this['_previousF' + 'rameCollis' + 'ions']['length']; _0x1ce996 < _0x34709f; _0x1ce996++) {
                var _0x1be095 = this['_previousF' + 'rameCollis' + 'ions'][_0x1ce996], _0x4af77e = _0x1be095['_colliderA'], _0x249761 = _0x1be095['_colliderB'];
                if (!_0x4af77e['destroyed'] && !_0x249761['destroyed'] && _0x66269 - _0x1be095['_updateFra' + 'me'] == 0x1) {
                    if (this['_collision' + 'sUtils']['recoverCol' + 'lision'](_0x1be095), _0x2c5281 = (_0x2cc161 = _0x4af77e['owner'])['_scripts']) {
                        if (_0x1be095['_isTrigger']) {
                            if (_0x2cc161['_needProce' + 'ssTriggers']) {
                                for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x2c5281['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                    _0x2c5281[_0x2e5aa3]['onTriggerE' + 'xit'](_0x249761);
                            }
                        } else {
                            if (_0x2cc161['_needProce' + 'ssCollisio' + 'ns']) {
                                for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x2c5281['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                    _0x1be095['other'] = _0x249761, _0x2c5281[_0x2e5aa3]['onCollisio' + 'nExit'](_0x1be095);
                            }
                        }
                    }
                    if (_0x20c5c3 = (_0x139160 = _0x249761['owner'])['_scripts']) {
                        if (_0x1be095['_isTrigger']) {
                            if (_0x139160['_needProce' + 'ssTriggers']) {
                                for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x20c5c3['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                    _0x20c5c3[_0x2e5aa3]['onTriggerE' + 'xit'](_0x4af77e);
                            }
                        } else {
                            if (_0x139160['_needProce' + 'ssCollisio' + 'ns']) {
                                for (_0x2e5aa3 = 0x0, _0x1f2029 = _0x20c5c3['length']; _0x2e5aa3 < _0x1f2029; _0x2e5aa3++)
                                    _0x1be095['other'] = _0x4af77e, _0x20c5c3[_0x2e5aa3]['onCollisio' + 'nExit'](_0x1be095);
                            }
                        }
                    }
                }
            }
        }
        ['clearForce' + 's']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0x57b18d['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_clearF' + 'orces'](this['_btDiscret' + 'eDynamicsW' + 'orld']);
        }
    }
    _0x25e128['PHYSICSENG' + 'INEFLAGS_N' + 'ONE'] = 0x0, _0x25e128['PHYSICSENG' + 'INEFLAGS_C' + 'OLLISIONSO' + 'NLY'] = 0x1, _0x25e128['PHYSICSENG' + 'INEFLAGS_S' + 'OFTBODYSUP' + 'PORT'] = 0x2, _0x25e128['PHYSICSENG' + 'INEFLAGS_M' + 'ULTITHREAD' + 'ED'] = 0x4, _0x25e128['PHYSICSENG' + 'INEFLAGS_U' + 'SEHARDWARE' + 'WHENPOSSIB' + 'LE'] = 0x8, _0x25e128['SOLVERMODE' + '_RANDMIZE_' + 'ORDER'] = 0x1, _0x25e128['SOLVERMODE' + '_FRICTION_' + 'SEPARATE'] = 0x2, _0x25e128['SOLVERMODE' + '_USE_WARMS' + 'TARTING'] = 0x4, _0x25e128['SOLVERMODE' + '_USE_2_FRI' + 'CTION_DIRE' + 'CTIONS'] = 0x10, _0x25e128['SOLVERMODE' + '_ENABLE_FR' + 'ICTION_DIR' + 'ECTION_CAC' + 'HING'] = 0x20, _0x25e128['SOLVERMODE' + '_DISABLE_V' + 'ELOCITY_DE' + 'PENDENT_FR' + 'ICTION_DIR' + 'ECTION'] = 0x40, _0x25e128['SOLVERMODE' + '_CACHE_FRI' + 'ENDLY'] = 0x80, _0x25e128['SOLVERMODE' + '_SIMD'] = 0x100, _0x25e128['SOLVERMODE' + '_INTERLEAV' + 'E_CONTACT_' + 'AND_FRICTI' + 'ON_CONSTRA' + 'INTS'] = 0x200, _0x25e128['SOLVERMODE' + '_ALLOW_ZER' + 'O_LENGTH_F' + 'RICTION_DI' + 'RECTIONS'] = 0x400, _0x25e128['_tempVecto' + 'r30'] = new _0x43b358(), _0x25e128['disableSim' + 'ulation'] = !0x1;
    class _0x51dbb0 {
        constructor() {
            this['_eventList'] = [], this['_mouseTouc' + 'h'] = new _0x2d292(), this['_touchPool'] = [], this['_touches'] = new _0x5b31a2(), this['_multiTouc' + 'hEnabled'] = !0x0, this['_pushEvent' + 'List'] = (_0x13d41e => {
                _0x13d41e['cancelable'] && _0x13d41e['preventDef' + 'ault'](), this['_eventList']['push'](_0x13d41e);
            })['bind'](this);
        }
        ['__init__'](_0x331522, _0x366774) {
            this['_scene'] = _0x366774, _0x331522['oncontextm' + 'enu'] = function (_0x210974) {
                return !0x1;
            };
        }
        ['_onCanvasE' + 'vent'](_0x4be6f3) {
            _0x4be6f3['addEventLi' + 'stener']('mousedown', this['_pushEvent' + 'List']), _0x4be6f3['addEventLi' + 'stener']('mouseup', this['_pushEvent' + 'List'], !0x0), _0x4be6f3['addEventLi' + 'stener']('mousemove', this['_pushEvent' + 'List'], !0x0), _0x4be6f3['addEventLi' + 'stener']('touchstart', this['_pushEvent' + 'List']), _0x4be6f3['addEventLi' + 'stener']('touchend', this['_pushEvent' + 'List'], !0x0), _0x4be6f3['addEventLi' + 'stener']('touchmove', this['_pushEvent' + 'List'], !0x0), _0x4be6f3['addEventLi' + 'stener']('touchcance' + 'l', this['_pushEvent' + 'List'], !0x0);
        }
        ['_offCanvas' + 'Event'](_0x100a6c) {
            _0x100a6c['removeEven' + 'tListener']('mousedown', this['_pushEvent' + 'List']), _0x100a6c['removeEven' + 'tListener']('mouseup', this['_pushEvent' + 'List'], !0x0), _0x100a6c['removeEven' + 'tListener']('mousemove', this['_pushEvent' + 'List'], !0x0), _0x100a6c['removeEven' + 'tListener']('touchstart', this['_pushEvent' + 'List']), _0x100a6c['removeEven' + 'tListener']('touchend', this['_pushEvent' + 'List'], !0x0), _0x100a6c['removeEven' + 'tListener']('touchmove', this['_pushEvent' + 'List'], !0x0), _0x100a6c['removeEven' + 'tListener']('touchcance' + 'l', this['_pushEvent' + 'List'], !0x0), this['_eventList']['length'] = 0x0, this['_touches']['clear']();
        }
        ['touchCount']() {
            return this['_touches']['length'];
        }
        get ['multiTouch' + 'Enabled']() {
            return this['_multiTouc' + 'hEnabled'];
        }
        set ['multiTouch' + 'Enabled'](_0x1b51ca) {
            this['_multiTouc' + 'hEnabled'] = _0x1b51ca;
        }
        ['_getTouch'](_0x2289dd) {
            var _0x2e2aaa = this['_touchPool'][_0x2289dd];
            return _0x2e2aaa || (_0x2e2aaa = new _0xe03a3a(), this['_touchPool'][_0x2289dd] = _0x2e2aaa, _0x2e2aaa['_identifie' + 'r'] = _0x2289dd), _0x2e2aaa;
        }
        ['_mouseTouc' + 'hDown']() {
            var _0x17bf77 = this['_mouseTouc' + 'h'], _0x5e489c = _0x17bf77['sprite'];
            if (_0x17bf77['_pressedSp' + 'rite'] = _0x5e489c, _0x17bf77['_pressedLo' + 'opCount'] = _0x2247ad['Stat']['loopCount'], _0x5e489c) {
                var _0x282d67 = _0x5e489c['_scripts'];
                if (_0x282d67) {
                    for (var _0x516bb7 = 0x0, _0x195ea3 = _0x282d67['length']; _0x516bb7 < _0x195ea3; _0x516bb7++)
                        _0x282d67[_0x516bb7]['onMouseDow' + 'n']();
                }
            }
        }
        ['_mouseTouc' + 'hUp']() {
            var _0x1f16fa, _0x49a104, _0x48732b = this['_mouseTouc' + 'h'], _0x22eaf3 = _0x48732b['_pressedSp' + 'rite'];
            _0x48732b['_pressedSp' + 'rite'] = null, _0x48732b['_pressedLo' + 'opCount'] = -0x1;
            var _0x268b6e = _0x48732b['sprite'];
            if (_0x268b6e && _0x268b6e === _0x22eaf3) {
                var _0x233202 = _0x268b6e['_scripts'];
                if (_0x233202) {
                    for (_0x1f16fa = 0x0, _0x49a104 = _0x233202['length']; _0x1f16fa < _0x49a104; _0x1f16fa++)
                        _0x233202[_0x1f16fa]['onMouseCli' + 'ck']();
                }
            }
            if (_0x22eaf3) {
                var _0x49a6fd = _0x22eaf3['_scripts'];
                if (_0x49a6fd) {
                    for (_0x1f16fa = 0x0, _0x49a104 = _0x49a6fd['length']; _0x1f16fa < _0x49a104; _0x1f16fa++)
                        _0x49a6fd[_0x1f16fa]['onMouseUp']();
                }
            }
        }
        ['_mouseTouc' + 'hRayCast'](_0x486ade) {
            var _0x3e61cc = _0x51dbb0['_tempHitRe' + 'sult0'], _0x264854 = _0x51dbb0['_tempVecto' + 'r20'], _0x328a9a = _0x51dbb0['_tempRay0'];
            _0x3e61cc['succeeded'] = !0x1;
            var _0x145958 = this['_mouseTouc' + 'h']['mousePosit' + 'ionX'], _0x74f622 = this['_mouseTouc' + 'h']['mousePosit' + 'ionY'];
            _0x264854['x'] = _0x145958, _0x264854['y'] = _0x74f622;
            for (var _0x5462f2 = _0x486ade['length'] - 0x1; _0x5462f2 >= 0x0; _0x5462f2--) {
                var _0x284951 = _0x486ade[_0x5462f2], _0xcae8ab = _0x284951['viewport'];
                if (_0x264854['x'] >= _0xcae8ab['x'] && _0x264854['y'] >= _0xcae8ab['y'] && _0x264854['x'] <= _0xcae8ab['width'] && _0x264854['y'] <= _0xcae8ab['height']) {
                    if (_0x284951['viewportPo' + 'intToRay'](_0x264854, _0x328a9a), this['_scene']['_physicsSi' + 'mulation']['rayCast'](_0x328a9a, _0x3e61cc) || _0x284951['clearFlag'] === _0xc55b22['CameraClea' + 'rFlags']['SolidColor'] || _0x284951['clearFlag'] === _0xc55b22['CameraClea' + 'rFlags']['Sky'])
                        break;
                }
            }
            var _0x5560b2 = this['_mouseTouc' + 'h'], _0x22a994 = _0x5560b2['sprite'];
            if (_0x3e61cc['succeeded']) {
                var _0xb11eb8 = _0x3e61cc['collider']['owner'];
                _0x5560b2['sprite'] = _0xb11eb8;
                var _0x3c9591 = _0xb11eb8['_scripts'];
                if (_0x22a994 !== _0xb11eb8 && _0x3c9591) {
                    for (var _0x33cf95 = 0x0, _0x84ee6 = _0x3c9591['length']; _0x33cf95 < _0x84ee6; _0x33cf95++)
                        _0x3c9591[_0x33cf95]['onMouseEnt' + 'er']();
                }
            } else
                _0x5560b2['sprite'] = null;
            if (_0x22a994 && _0x22a994 !== _0xb11eb8) {
                var _0x224b91 = _0x22a994['_scripts'];
                if (_0x224b91) {
                    for (_0x33cf95 = 0x0, _0x84ee6 = _0x224b91['length']; _0x33cf95 < _0x84ee6; _0x33cf95++)
                        _0x224b91[_0x33cf95]['onMouseOut']();
                }
            }
        }
        ['_changeTou' + 'ches'](_0x4dd64b, _0x1cdd5b) {
            for (var _0x8ccd28 = 0x0, _0x58bf70 = 0x0, _0x5e9332 = this['_touches']['length'], _0x10cc6c = 0x0, _0x1e9c59 = _0x4dd64b['length']; _0x10cc6c < _0x1e9c59; _0x10cc6c++) {
                var _0x14334b = _0x4dd64b[_0x10cc6c], _0x4a8bda = _0x14334b['identifier'];
                if (this['_multiTouc' + 'hEnabled'] || 0x0 === _0x4a8bda) {
                    var _0x10ca84 = this['_getTouch'](_0x4a8bda), _0x1b425b = _0x10ca84['_position'], _0x56a6fb = _0x51dbb0['_tempPoint'];
                    _0x56a6fb['setTo'](_0x14334b['pageX'], _0x14334b['pageY']), _0x2247ad['ILaya']['stage']['_canvasTra' + 'nsform']['invertTran' + 'sformPoint'](_0x56a6fb);
                    var _0x93351a = _0x56a6fb['x'], _0x1ee842 = _0x56a6fb['y'];
                    switch (_0x1cdd5b) {
                    case 0x0:
                        this['_touches']['add'](_0x10ca84), _0x8ccd28 += _0x93351a, _0x58bf70 += _0x1ee842;
                        break;
                    case 0x1:
                        this['_touches']['remove'](_0x10ca84), _0x8ccd28 -= _0x93351a, _0x58bf70 -= _0x1ee842;
                        break;
                    case 0x2:
                        _0x8ccd28 = _0x93351a - _0x1b425b['x'], _0x58bf70 = _0x1ee842 - _0x1b425b['y'];
                    }
                    _0x1b425b['x'] = _0x93351a, _0x1b425b['y'] = _0x1ee842;
                }
            }
            var _0x21643e = this['_touches']['length'];
            0x0 === _0x21643e ? (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = 0x0, this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = 0x0) : (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] * _0x5e9332 + _0x8ccd28) / _0x21643e, this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = (this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] * _0x5e9332 + _0x58bf70) / _0x21643e);
        }
        ['_update']() {
            var _0x78f86c, _0x38ebf3, _0x5543a9, _0xaa8a2a, _0xd4a214 = _0x57b18d['_enablePhy' + 'sics'] && !_0x25e128['disableSim' + 'ulation'];
            _0x38ebf3 = this['_eventList']['length'];
            var _0x5c1fd = this['_scene']['_cameraPoo' + 'l'];
            if (_0x38ebf3 > 0x0) {
                var _0x149b2c = !0x1;
                for (_0x78f86c = 0x0; _0x78f86c < _0x38ebf3; _0x78f86c++) {
                    var _0x5092e6 = this['_eventList'][_0x78f86c];
                    switch (_0x5092e6['type']) {
                    case 'mousedown':
                        _0xd4a214 && this['_mouseTouc' + 'hDown']();
                        break;
                    case 'mouseup':
                        _0xd4a214 && this['_mouseTouc' + 'hUp']();
                        break;
                    case 'mousemove':
                        var _0x2f4a0f = _0x51dbb0['_tempPoint'];
                        _0x2f4a0f['setTo'](_0x5092e6['pageX'], _0x5092e6['pageY']), _0x2247ad['ILaya']['stage']['_canvasTra' + 'nsform']['invertTran' + 'sformPoint'](_0x2f4a0f), this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = _0x2f4a0f['x'], this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = _0x2f4a0f['y'], _0xd4a214 && (_0x149b2c = !0x0);
                        break;
                    case 'touchstart':
                        var _0x22a401 = this['_touches']['length'];
                        this['_changeTou' + 'ches'](_0x5092e6['changedTou' + 'ches'], 0x0), _0xd4a214 && (_0x149b2c = !0x0, 0x0 === _0x22a401 && this['_mouseTouc' + 'hDown']());
                        break;
                    case 'touchend':
                    case 'touchcance' + 'l':
                        this['_changeTou' + 'ches'](_0x5092e6['changedTou' + 'ches'], 0x1), _0xd4a214 && 0x0 === this['_touches']['length'] && this['_mouseTouc' + 'hUp']();
                        break;
                    case 'touchmove':
                        this['_changeTou' + 'ches'](_0x5092e6['changedTou' + 'ches'], 0x2), _0xd4a214 && (_0x149b2c = !0x0);
                        break;
                    default:
                        throw 'Input3D:un' + 'konwn\x20even' + 't\x20type.';
                    }
                }
                _0x149b2c && this['_mouseTouc' + 'hRayCast'](_0x5c1fd), this['_eventList']['length'] = 0x0;
            }
            if (_0xd4a214) {
                var _0x528ed9 = this['_mouseTouc' + 'h'], _0x1100c8 = _0x528ed9['_pressedSp' + 'rite'];
                if (_0x1100c8 && _0x2247ad['Stat']['loopCount'] > _0x528ed9['_pressedLo' + 'opCount']) {
                    var _0x5a99c2 = _0x1100c8['_scripts'];
                    if (_0x5a99c2) {
                        for (_0x5543a9 = 0x0, _0xaa8a2a = _0x5a99c2['length']; _0x5543a9 < _0xaa8a2a; _0x5543a9++)
                            _0x5a99c2[_0x5543a9]['onMouseDra' + 'g']();
                    }
                }
                var _0x18caec = _0x528ed9['sprite'];
                if (_0x18caec) {
                    var _0x37615f = _0x18caec['_scripts'];
                    if (_0x37615f) {
                        for (_0x5543a9 = 0x0, _0xaa8a2a = _0x37615f['length']; _0x5543a9 < _0xaa8a2a; _0x5543a9++)
                            _0x37615f[_0x5543a9]['onMouseOve' + 'r']();
                    }
                }
            }
        }
        ['getTouch'](_0x4f9ab1) {
            return _0x4f9ab1 < this['_touches']['length'] ? this['_touches']['elements'][_0x4f9ab1] : null;
        }
    }
    _0x51dbb0['_tempPoint'] = new _0x2247ad['Point'](), _0x51dbb0['_tempVecto' + 'r20'] = new _0x2d45ed(), _0x51dbb0['_tempRay0'] = new _0xbd8983(new _0x43b358(), new _0x43b358()), _0x51dbb0['_tempHitRe' + 'sult0'] = new _0x1958d6();
    class _0x47df6f {
        constructor() {
            this['flags'] = 0x0, this['maxSubStep' + 's'] = 0x1, this['fixedTimeS' + 'tep'] = 0x1 / 0x3c;
        }
    }
    class _0x43dacf {
        static get ['vertexDecl' + 'aration']() {
            return _0x43dacf['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x43dacf['_vertexDec' + 'laration'] = new _0x2ca0b5(0x14, [
                new _0x50e0bd(0x0, _0x163e87['Vector3'], _0x3fbee7['MESH_POSIT' + 'ION0']),
                new _0x50e0bd(0xc, _0x163e87['Vector2'], _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'])
            ]);
        }
        get ['position']() {
            return this['_position'];
        }
        get ['textureCoo' + 'rdinate0']() {
            return this['_textureCo' + 'ordinate0'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x43dacf['_vertexDec' + 'laration'];
        }
        constructor(_0x48ade2, _0x57ff72) {
            this['_position'] = _0x48ade2, this['_textureCo' + 'ordinate0'] = _0x57ff72;
        }
    }
    class _0x1252a2 extends _0x3498e9 {
        constructor(_0x2837e1 = 0x30, _0x3d4b46 = 0x30) {
            super();
            var _0x1aa402 = _0x2247ad['LayaGL']['instance'];
            this['_stacks'] = _0x2837e1, this['_slices'] = _0x3d4b46;
            for (var _0x2bd891 = _0x43dacf['vertexDecl' + 'aration'], _0x49bc09 = _0x2bd891['vertexStri' + 'de'] / 0x4, _0x3a87fc = (this['_stacks'] + 0x1) * (this['_slices'] + 0x1), _0x48c349 = 0x3 * this['_stacks'] * (this['_slices'] + 0x1) * 0x2, _0x3b3113 = new Float32Array(_0x3a87fc * _0x49bc09), _0x3af2c3 = new Uint16Array(_0x48c349), _0x527eab = Math['PI'] / this['_stacks'], _0x3650d5 = 0x2 * Math['PI'] / this['_slices'], _0x3f268e = 0x0, _0x597069 = 0x0, _0x57c60f = 0x0, _0xdd0aa1 = 0x0; _0xdd0aa1 < this['_stacks'] + 0x1; _0xdd0aa1++)
                for (var _0x5070f2 = Math['sin'](_0xdd0aa1 * _0x527eab), _0x2294a0 = Math['cos'](_0xdd0aa1 * _0x527eab), _0x2d4d48 = 0x0; _0x2d4d48 < this['_slices'] + 0x1; _0x2d4d48++) {
                    var _0x509829 = _0x5070f2 * Math['sin'](_0x2d4d48 * _0x3650d5), _0x16c4e3 = _0x5070f2 * Math['cos'](_0x2d4d48 * _0x3650d5);
                    _0x3b3113[_0x597069 + 0x0] = _0x509829 * _0x1252a2['_radius'], _0x3b3113[_0x597069 + 0x1] = _0x2294a0 * _0x1252a2['_radius'], _0x3b3113[_0x597069 + 0x2] = _0x16c4e3 * _0x1252a2['_radius'], _0x3b3113[_0x597069 + 0x3] = -_0x2d4d48 / this['_slices'] + 0.75, _0x3b3113[_0x597069 + 0x4] = _0xdd0aa1 / this['_stacks'], _0x597069 += _0x49bc09, _0xdd0aa1 != this['_stacks'] - 0x1 && (_0x3af2c3[_0x57c60f++] = _0x3f268e + 0x1, _0x3af2c3[_0x57c60f++] = _0x3f268e, _0x3af2c3[_0x57c60f++] = _0x3f268e + (this['_slices'] + 0x1), _0x3af2c3[_0x57c60f++] = _0x3f268e + (this['_slices'] + 0x1), _0x3af2c3[_0x57c60f++] = _0x3f268e, _0x3af2c3[_0x57c60f++] = _0x3f268e + this['_slices'], _0x3f268e++);
                }
            this['_vertexBuf' + 'fer'] = new _0x26d078(0x4 * _0x3b3113['length'], _0x1aa402['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x2bd891, this['_indexBuff' + 'er'] = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], _0x3af2c3['length'], _0x1aa402['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['setData'](_0x3b3113['buffer']), this['_indexBuff' + 'er']['setData'](_0x3af2c3);
            var _0x59cb38 = new _0x145b1e();
            _0x59cb38['bind'](), _0x59cb38['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0x59cb38['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0x59cb38['unBind'](), this['_bufferSta' + 'te'] = _0x59cb38;
        }
        static ['__init__']() {
            _0x1252a2['instance'] = new _0x1252a2();
        }
        get ['stacks']() {
            return this['_stacks'];
        }
        get ['slices']() {
            return this['_slices'];
        }
        ['_render'](_0x4e0c22) {
            var _0x17d3a3 = _0x2247ad['LayaGL']['instance'], _0x1126ca = this['_indexBuff' + 'er']['indexCount'];
            _0x17d3a3['drawElemen' + 'ts'](_0x17d3a3['TRIANGLES'], _0x1126ca, _0x17d3a3['UNSIGNED_S' + 'HORT'], 0x0), _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x1126ca / 0x3, _0x2247ad['Stat']['renderBatc' + 'hes']++;
        }
    }
    _0x1252a2['_radius'] = 0x1, (_0x507d1a = _0xc55b22['TextureCub' + 'eFace'] || (_0xc55b22['TextureCub' + 'eFace'] = {}))[_0x507d1a['PositiveX'] = 0x0] = 'PositiveX', _0x507d1a[_0x507d1a['NegativeX'] = 0x1] = 'NegativeX', _0x507d1a[_0x507d1a['PositiveY'] = 0x2] = 'PositiveY', _0x507d1a[_0x507d1a['NegativeY'] = 0x3] = 'NegativeY', _0x507d1a[_0x507d1a['PositiveZ'] = 0x4] = 'PositiveZ', _0x507d1a[_0x507d1a['NegativeZ'] = 0x5] = 'NegativeZ';
    class _0x307e95 extends _0x2247ad['BaseTextur' + 'e'] {
        constructor(_0x4672e4, _0x3d62d6 = _0x2247ad['TextureFor' + 'mat']['R8G8B8'], _0x39d7f0 = !0x1) {
            super(_0x3d62d6, _0x39d7f0), this['_glTexture' + 'Type'] = _0x2247ad['LayaGL']['instance']['TEXTURE_CU' + 'BE_MAP'], this['_width'] = _0x4672e4, this['_height'] = _0x4672e4;
            var _0xf13170 = _0x2247ad['LayaGL']['instance'];
            if (this['_setWarpMo' + 'de'](_0xf13170['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0xf13170['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_setAnisot' + 'ropy'](this['_anisoLeve' + 'l']), this['_mipmap']) {
                this['_mipmapCou' + 'nt'] = Math['ceil'](Math['log2'](_0x4672e4)) + 0x1;
                for (var _0x24985c = 0x0; _0x24985c < this['_mipmapCou' + 'nt']; _0x24985c++)
                    this['_setPixels']([], _0x24985c, Math['max'](_0x4672e4 >> _0x24985c, 0x1), Math['max'](_0x4672e4 >> _0x24985c, 0x1));
                this['_setGPUMem' + 'ory'](_0x4672e4 * _0x4672e4 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6);
            } else
                this['_mipmapCou' + 'nt'] = 0x1, this['_setGPUMem' + 'ory'](_0x4672e4 * _0x4672e4 * 0x4 * 0x6);
        }
        static get ['blackTextu' + 're']() {
            return _0x307e95['_blackText' + 'ure'];
        }
        static get ['grayTextur' + 'e']() {
            return _0x307e95['_grayTextu' + 're'];
        }
        static ['__init__']() {
            var _0x44fa10 = new _0x307e95(0x1, _0x2247ad['TextureFor' + 'mat']['R8G8B8'], !0x1), _0x133ad2 = new _0x307e95(0x1, _0x2247ad['TextureFor' + 'mat']['R8G8B8'], !0x1), _0x57e32b = new Uint8Array(0x3);
            _0x57e32b[0x0] = 0x0, _0x57e32b[0x1] = 0x0, _0x57e32b[0x2] = 0x0, _0x44fa10['setSixSide' + 'Pixels']([
                _0x57e32b,
                _0x57e32b,
                _0x57e32b,
                _0x57e32b,
                _0x57e32b,
                _0x57e32b
            ]), _0x44fa10['lock'] = !0x0, _0x57e32b[0x0] = 0x80, _0x57e32b[0x1] = 0x80, _0x57e32b[0x2] = 0x80, _0x133ad2['setSixSide' + 'Pixels']([
                _0x57e32b,
                _0x57e32b,
                _0x57e32b,
                _0x57e32b,
                _0x57e32b,
                _0x57e32b
            ]), _0x133ad2['lock'] = !0x0, _0x307e95['_grayTextu' + 're'] = _0x133ad2, _0x307e95['_blackText' + 'ure'] = _0x44fa10;
        }
        static ['_parse'](_0x45b3c4, _0x2885d1 = null, _0x436872 = null) {
            var _0x20b7d7 = _0x436872 ? new _0x307e95(0x0, _0x436872[0x0], _0x436872[0x1]) : new _0x307e95(0x0);
            return _0x20b7d7['setSixSide' + 'ImageSourc' + 'es'](_0x45b3c4), _0x20b7d7;
        }
        static ['_parseBin'](_0x539835, _0x2b8f91 = null, _0x22f5d7 = null) {
            var _0xddece2 = _0x22f5d7 ? new _0x307e95(0x0, _0x22f5d7[0x0], _0x22f5d7[0x1]) : new _0x307e95(0x0);
            return _0xddece2['setSixSide' + 'ImageSourc' + 'es'](_0x539835), _0xddece2;
        }
        static ['load'](_0x55b72c, _0xa47446) {
            _0x2247ad['ILaya']['loader']['create'](_0x55b72c, _0xa47446, null, _0x307e95['TEXTURECUB' + 'E']);
        }
        get ['defaulteTe' + 'xture']() {
            return _0x307e95['grayTextur' + 'e'];
        }
        ['_setPixels'](_0x3ec61b, _0x20eb61, _0x1ee35e, _0x328d0e) {
            var _0x16c6e7 = _0x2247ad['LayaGL']['instance'], _0x2b24a5 = this['_getGLForm' + 'at']();
            _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x16c6e7, this['_glTexture' + 'Type'], this['_glTexture']), this['format'] === _0x2247ad['TextureFor' + 'mat']['R8G8B8'] ? (_0x16c6e7['pixelStore' + 'i'](_0x16c6e7['UNPACK_ALI' + 'GNMENT'], 0x1), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x0]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x1]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x2]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x3]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x4]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x5]), _0x16c6e7['pixelStore' + 'i'](_0x16c6e7['UNPACK_ALI' + 'GNMENT'], 0x4)) : (_0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x0]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x1]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x2]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x3]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x4]), _0x16c6e7['texImage2D'](_0x16c6e7['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x20eb61, _0x2b24a5, _0x1ee35e, _0x328d0e, 0x0, _0x2b24a5, _0x16c6e7['UNSIGNED_B' + 'YTE'], _0x3ec61b[0x5]));
        }
        ['setSixSide' + 'ImageSourc' + 'es'](_0x5d41ba, _0x43a311 = !0x1) {
            for (var _0x4c5502, _0x595cd5, _0x4bdb4f = 0x0; _0x4bdb4f < 0x6; _0x4bdb4f++) {
                var _0x22917d = _0x5d41ba[_0x4bdb4f];
                if (!_0x22917d)
                    return void console['log']('TextureCub' + 'e:\x20image\x20S' + 'ource\x20can\x27' + 't\x20be\x20null.');
                var _0x1f2bb9 = _0x22917d['width'], _0x2d25b9 = _0x22917d['height'];
                if (_0x4bdb4f > 0x0 && _0x4c5502 !== _0x1f2bb9)
                    return void console['log']('TextureCub' + 'e:\x20each\x20si' + 'de\x20image\x27s' + '\x20width\x20and' + '\x20height\x20mu' + 'st\x20same.');
                if ((_0x4c5502 = _0x1f2bb9) !== (_0x595cd5 = _0x2d25b9))
                    return void console['log']('TextureCub' + 'e:\x20each\x20si' + 'de\x20image\x27s' + '\x20width\x20and' + '\x20height\x20mu' + 'st\x20same.');
            }
            this['_width'] = _0x4c5502, this['_height'] = _0x595cd5;
            var _0x30f7f1 = _0x2247ad['LayaGL']['instance'];
            _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x30f7f1, this['_glTexture' + 'Type'], this['_glTexture']);
            var _0x1c6b49 = this['_getGLForm' + 'at']();
            if (_0x2247ad['Render']['isConchApp']) {
                if (0x1 == _0x43a311) {
                    for (var _0x5db06d = 0x0; _0x5db06d < 0x6; _0x5db06d++)
                        _0x5d41ba[_0x5db06d]['setPremult' + 'iplyAlpha'](_0x43a311);
                }
                _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], 0x0, _0x30f7f1['RGBA'], _0x30f7f1['RGBA'], _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x0]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], 0x0, _0x30f7f1['RGBA'], _0x30f7f1['RGBA'], _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x1]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], 0x0, _0x30f7f1['RGBA'], _0x30f7f1['RGBA'], _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x2]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], 0x0, _0x30f7f1['RGBA'], _0x30f7f1['RGBA'], _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x3]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], 0x0, _0x30f7f1['RGBA'], _0x30f7f1['RGBA'], _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x4]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], 0x0, _0x30f7f1['RGBA'], _0x30f7f1['RGBA'], _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x5]);
            } else
                _0x43a311 && _0x30f7f1['pixelStore' + 'i'](_0x30f7f1['UNPACK_PRE' + 'MULTIPLY_A' + 'LPHA_WEBGL'], !0x0), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], 0x0, _0x1c6b49, _0x1c6b49, _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x0]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], 0x0, _0x1c6b49, _0x1c6b49, _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x1]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], 0x0, _0x1c6b49, _0x1c6b49, _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x2]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], 0x0, _0x1c6b49, _0x1c6b49, _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x3]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], 0x0, _0x1c6b49, _0x1c6b49, _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x4]), _0x30f7f1['texImage2D'](_0x30f7f1['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], 0x0, _0x1c6b49, _0x1c6b49, _0x30f7f1['UNSIGNED_B' + 'YTE'], _0x5d41ba[0x5]), _0x43a311 && _0x30f7f1['pixelStore' + 'i'](_0x30f7f1['UNPACK_PRE' + 'MULTIPLY_A' + 'LPHA_WEBGL'], !0x1);
            this['_mipmap'] && this['_isPot'](_0x4c5502) && this['_isPot'](_0x595cd5) ? (_0x30f7f1['generateMi' + 'pmap'](this['_glTexture' + 'Type']), this['_setGPUMem' + 'ory'](_0x4c5502 * _0x595cd5 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this['_setGPUMem' + 'ory'](_0x4c5502 * _0x595cd5 * 0x4 * 0x6), this['_setWarpMo' + 'de'](_0x30f7f1['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x30f7f1['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_readyed'] = !0x0, this['_activeRes' + 'ource']();
        }
        ['setSixSide' + 'Pixels'](_0x4842f5, _0x3b3a98 = 0x0) {
            if (!_0x4842f5)
                throw new Error('TextureCub' + 'e:pixels\x20c' + 'an\x27t\x20be\x20nu' + 'll.');
            var _0x2c81b0 = Math['max'](this['_width'] >> _0x3b3a98, 0x1), _0x36db00 = Math['max'](this['_height'] >> _0x3b3a98, 0x1), _0x2c429b = _0x2c81b0 * _0x36db00 * this['_getFormat' + 'ByteCount']();
            if (_0x4842f5[0x0]['length'] < _0x2c429b)
                throw 'TextureCub' + 'e:pixels\x20l' + 'ength\x20shou' + 'ld\x20at\x20leas' + 't\x20' + _0x2c429b + '.';
            if (this['_setPixels'](_0x4842f5, _0x3b3a98, _0x2c81b0, _0x36db00), 0x0 === _0x3b3a98) {
                var _0x433897 = _0x2247ad['LayaGL']['instance'];
                this['_setWarpMo' + 'de'](_0x433897['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x433897['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']);
            }
            this['_readyed'] = !0x0, this['_activeRes' + 'ource']();
        }
        ['setImageSo' + 'urce'](_0x4dcc08, _0x15c66e, _0x321acf = 0x0) {
            var _0x11b33a = this['_width'], _0x3ef569 = this['_height'];
            if (!_0x15c66e || _0x11b33a === _0x15c66e['width'] && _0x3ef569 === _0x15c66e['height']) {
                var _0x15a674 = _0x2247ad['LayaGL']['instance'];
                _0x2247ad['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x15a674, this['_glTexture' + 'Type'], this['_glTexture']);
                var _0x1e982f = this['_getGLForm' + 'at']();
                switch (_0x4dcc08) {
                case _0xc55b22['TextureCub' + 'eFace']['NegativeX']:
                    _0x15a674['texImage2D'](_0x15a674['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x321acf, _0x1e982f, _0x1e982f, _0x15a674['UNSIGNED_B' + 'YTE'], _0x15c66e);
                    break;
                case _0xc55b22['TextureCub' + 'eFace']['PositiveX']:
                    _0x15a674['texImage2D'](_0x15a674['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x321acf, _0x1e982f, _0x1e982f, _0x15a674['UNSIGNED_B' + 'YTE'], _0x15c66e);
                    break;
                case _0xc55b22['TextureCub' + 'eFace']['NegativeY']:
                    _0x15a674['texImage2D'](_0x15a674['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x321acf, _0x1e982f, _0x1e982f, _0x15a674['UNSIGNED_B' + 'YTE'], _0x15c66e);
                    break;
                case _0xc55b22['TextureCub' + 'eFace']['PositiveY']:
                    _0x15a674['texImage2D'](_0x15a674['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x321acf, _0x1e982f, _0x1e982f, _0x15a674['UNSIGNED_B' + 'YTE'], _0x15c66e);
                    break;
                case _0xc55b22['TextureCub' + 'eFace']['NegativeZ']:
                    _0x15a674['texImage2D'](_0x15a674['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x321acf, _0x1e982f, _0x1e982f, _0x15a674['UNSIGNED_B' + 'YTE'], _0x15c66e);
                    break;
                case _0xc55b22['TextureCub' + 'eFace']['PositiveZ']:
                    _0x15a674['texImage2D'](_0x15a674['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x321acf, _0x1e982f, _0x1e982f, _0x15a674['UNSIGNED_B' + 'YTE'], _0x15c66e);
                }
                this['_mipmap'] && this['_isPot'](_0x11b33a) && this['_isPot'](_0x3ef569) ? (_0x15a674['generateMi' + 'pmap'](this['_glTexture' + 'Type']), this['_setGPUMem' + 'ory'](_0x11b33a * _0x3ef569 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this['_setGPUMem' + 'ory'](_0x11b33a * _0x3ef569 * 0x4 * 0x6), this['_setWarpMo' + 'de'](_0x15a674['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x15a674['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_readyed'] = !0x0;
            } else
                console['log']('TextureCub' + 'e:\x20imageSo' + 'urce\x27s\x20wid' + 'th\x20and\x20hei' + 'ght\x20must\x20s' + 'ame.');
        }
    }
    _0x307e95['TEXTURECUB' + 'E'] = 'TEXTURECUB' + 'E';
    class _0x5f15d6 {
        constructor() {
            this['_length'] = 0x0, this['_elements'] = [];
        }
        ['add'](_0x28b8d4) {
            this['_length'] === this['_elements']['length'] ? this['_elements']['push'](_0x28b8d4) : this['_elements'][this['_length']] = _0x28b8d4, this['_length']++;
        }
        ['remove'](_0x2ca78c) {
            var _0x4f6137 = this['_elements']['indexOf'](_0x2ca78c);
            if (this['_length']--, _0x4f6137 !== this['_length']) {
                var _0x5c7e2e = this['_elements'][this['_length']];
                this['_elements'][_0x4f6137] = _0x5c7e2e;
            }
        }
        ['shift']() {
            return this['_length']--, this['_elements']['shift']();
        }
    }
    class _0x361eb7 extends _0x5f15d6 {
        ['getSunLigh' + 't']() {
            for (var _0x23bd46, _0x303610 = -0x1, _0x17b7a5 = this['_elements'], _0x24cf2f = 0x0; _0x24cf2f < this['_length']; _0x24cf2f++) {
                var _0x2065d8 = _0x17b7a5[_0x24cf2f]['_intensity'];
                _0x303610 < _0x2065d8 && (_0x303610 = _0x2065d8, _0x23bd46 = _0x24cf2f);
            }
            return _0x23bd46;
        }
    }
    class _0x457bd2 extends _0x5f15d6 {
        ['remove'](_0x3287aa) {
            var _0xe761 = this['_elements']['indexOf'](_0x3287aa);
            this['_elements']['splice'](_0xe761, 0x1), this['_length']--;
        }
    }
    class _0x5f3bb6 extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('LineShader'), this['_shaderVal' + 'ues']['setVector'](_0x5f3bb6['COLOR'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1));
        }
        static ['__initDefi' + 'ne__']() {
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x5f3bb6['COLOR']);
        }
        set ['color'](_0x1723cc) {
            this['_shaderVal' + 'ues']['setVector'](_0x5f3bb6['COLOR'], _0x1723cc);
        }
        set ['depthWrite'](_0x12c520) {
            this['_shaderVal' + 'ues']['setBool'](_0x5f3bb6['DEPTH_WRIT' + 'E'], _0x12c520);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x5f3bb6['DEPTH_WRIT' + 'E']);
        }
        set ['cull'](_0x1ca854) {
            this['_shaderVal' + 'ues']['setInt'](_0x5f3bb6['CULL'], _0x1ca854);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x5f3bb6['CULL']);
        }
        set ['blend'](_0xda59dd) {
            this['_shaderVal' + 'ues']['setInt'](_0x5f3bb6['BLEND'], _0xda59dd);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x5f3bb6['BLEND']);
        }
        set ['blendSrc'](_0x5bfd7a) {
            this['_shaderVal' + 'ues']['setInt'](_0x5f3bb6['BLEND_SRC'], _0x5bfd7a);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x5f3bb6['BLEND_SRC']);
        }
        set ['blendDst'](_0xc9c679) {
            this['_shaderVal' + 'ues']['setInt'](_0x5f3bb6['BLEND_DST'], _0xc9c679);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x5f3bb6['BLEND_DST']);
        }
        set ['depthTest'](_0x53a0d4) {
            this['_shaderVal' + 'ues']['setInt'](_0x5f3bb6['DEPTH_TEST'], _0x53a0d4);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x5f3bb6['DEPTH_TEST']);
        }
        ['clone']() {
            var _0x387fdd = new _0x5f3bb6();
            return this['cloneTo'](_0x387fdd), _0x387fdd;
        }
    }
    _0x5f3bb6['COLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_Color'), _0x5f3bb6['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x5f3bb6['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x5f3bb6['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x5f3bb6['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x5f3bb6['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x5f3bb6['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x11e6d9 {
        constructor(_0x57a574, _0x19ae5e) {
            this['min'] = _0x57a574, this['max'] = _0x19ae5e;
        }
        ['_rotateExt' + 'ents'](_0x515423, _0x124165, _0x5a0c4f) {
            var _0x57ab48 = _0x515423['x'], _0x365e64 = _0x515423['y'], _0x416798 = _0x515423['z'], _0x19da2b = _0x124165['elements'];
            _0x5a0c4f['x'] = Math['abs'](_0x19da2b[0x0] * _0x57ab48) + Math['abs'](_0x19da2b[0x4] * _0x365e64) + Math['abs'](_0x19da2b[0x8] * _0x416798), _0x5a0c4f['y'] = Math['abs'](_0x19da2b[0x1] * _0x57ab48) + Math['abs'](_0x19da2b[0x5] * _0x365e64) + Math['abs'](_0x19da2b[0x9] * _0x416798), _0x5a0c4f['z'] = Math['abs'](_0x19da2b[0x2] * _0x57ab48) + Math['abs'](_0x19da2b[0x6] * _0x365e64) + Math['abs'](_0x19da2b[0xa] * _0x416798);
        }
        ['getCorners'](_0xb713bf) {
            _0xb713bf['length'] = 0x8;
            var _0x477a1c = this['min']['x'], _0x252242 = this['min']['y'], _0x587bae = this['min']['z'], _0xeca545 = this['max']['x'], _0xfe1dd9 = this['max']['y'], _0x237a02 = this['max']['z'];
            _0xb713bf[0x0] = new _0x43b358(_0x477a1c, _0xfe1dd9, _0x237a02), _0xb713bf[0x1] = new _0x43b358(_0xeca545, _0xfe1dd9, _0x237a02), _0xb713bf[0x2] = new _0x43b358(_0xeca545, _0x252242, _0x237a02), _0xb713bf[0x3] = new _0x43b358(_0x477a1c, _0x252242, _0x237a02), _0xb713bf[0x4] = new _0x43b358(_0x477a1c, _0xfe1dd9, _0x587bae), _0xb713bf[0x5] = new _0x43b358(_0xeca545, _0xfe1dd9, _0x587bae), _0xb713bf[0x6] = new _0x43b358(_0xeca545, _0x252242, _0x587bae), _0xb713bf[0x7] = new _0x43b358(_0x477a1c, _0x252242, _0x587bae);
        }
        ['getCenter'](_0x215ee3) {
            _0x43b358['add'](this['min'], this['max'], _0x215ee3), _0x43b358['scale'](_0x215ee3, 0.5, _0x215ee3);
        }
        ['getExtent'](_0x1a62e9) {
            _0x43b358['subtract'](this['max'], this['min'], _0x1a62e9), _0x43b358['scale'](_0x1a62e9, 0.5, _0x1a62e9);
        }
        ['setCenterA' + 'ndExtent'](_0x27c39b, _0x1884c2) {
            _0x43b358['subtract'](_0x27c39b, _0x1884c2, this['min']), _0x43b358['add'](_0x27c39b, _0x1884c2, this['max']);
        }
        ['tranform'](_0x38ef18, _0x143648) {
            var _0x2f6538 = _0x11e6d9['_tempVecto' + 'r30'], _0x8990ec = _0x11e6d9['_tempVecto' + 'r31'];
            this['getCenter'](_0x2f6538), this['getExtent'](_0x8990ec), _0x43b358['transformC' + 'oordinate'](_0x2f6538, _0x38ef18, _0x2f6538), this['_rotateExt' + 'ents'](_0x8990ec, _0x38ef18, _0x8990ec), _0x143648['setCenterA' + 'ndExtent'](_0x2f6538, _0x8990ec);
        }
        ['toDefault']() {
            this['min']['toDefault'](), this['max']['toDefault']();
        }
        static ['createfrom' + 'Points'](_0x3c29df, _0xbd48d8) {
            if (null == _0x3c29df)
                throw new Error('points');
            var _0x124166 = _0xbd48d8['min'], _0x1acd08 = _0xbd48d8['max'];
            _0x124166['x'] = Number['MAX_VALUE'], _0x124166['y'] = Number['MAX_VALUE'], _0x124166['z'] = Number['MAX_VALUE'], _0x1acd08['x'] = -Number['MAX_VALUE'], _0x1acd08['y'] = -Number['MAX_VALUE'], _0x1acd08['z'] = -Number['MAX_VALUE'];
            for (var _0x14a884 = 0x0, _0x40f56d = _0x3c29df['length']; _0x14a884 < _0x40f56d; ++_0x14a884)
                _0x43b358['min'](_0x124166, _0x3c29df[_0x14a884], _0x124166), _0x43b358['max'](_0x1acd08, _0x3c29df[_0x14a884], _0x1acd08);
        }
        static ['merge'](_0x3aa58f, _0x199004, _0x26a08c) {
            _0x43b358['min'](_0x3aa58f['min'], _0x199004['min'], _0x26a08c['min']), _0x43b358['max'](_0x3aa58f['max'], _0x199004['max'], _0x26a08c['max']);
        }
        ['cloneTo'](_0x397472) {
            var _0x101a90 = _0x397472;
            this['min']['cloneTo'](_0x101a90['min']), this['max']['cloneTo'](_0x101a90['max']);
        }
        ['clone']() {
            var _0x154f67 = new _0x11e6d9(new _0x43b358(), new _0x43b358());
            return this['cloneTo'](_0x154f67), _0x154f67;
        }
    }
    _0x11e6d9['_tempVecto' + 'r30'] = new _0x43b358(), _0x11e6d9['_tempVecto' + 'r31'] = new _0x43b358();
    class _0x252754 {
        constructor(_0x473f60, _0x329151) {
            this['_updateFla' + 'g'] = 0x0, this['_center'] = new _0x43b358(), this['_extent'] = new _0x43b358(), this['_boundBox'] = new _0x11e6d9(new _0x43b358(), new _0x43b358()), _0x473f60['cloneTo'](this['_boundBox']['min']), _0x329151['cloneTo'](this['_boundBox']['max']), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_CE' + 'NTER'] | _0x252754['_UPDATE_EX' + 'TENT'], !0x0);
        }
        ['setMin'](_0x210ce9) {
            var _0x52f428 = this['_boundBox']['min'];
            _0x210ce9 !== _0x52f428 && _0x210ce9['cloneTo'](_0x52f428), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_CE' + 'NTER'] | _0x252754['_UPDATE_EX' + 'TENT'], !0x0), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MI' + 'N'], !0x1);
        }
        ['getMin']() {
            var _0x1989d9 = this['_boundBox']['min'];
            return this['_getUpdate' + 'Flag'](_0x252754['_UPDATE_MI' + 'N']) && (this['_getMin'](this['getCenter'](), this['getExtent'](), _0x1989d9), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MI' + 'N'], !0x1)), _0x1989d9;
        }
        ['setMax'](_0x23d2ea) {
            var _0xa3d44b = this['_boundBox']['max'];
            _0x23d2ea !== _0xa3d44b && _0x23d2ea['cloneTo'](_0xa3d44b), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_CE' + 'NTER'] | _0x252754['_UPDATE_EX' + 'TENT'], !0x0), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MA' + 'X'], !0x1);
        }
        ['getMax']() {
            var _0x5f22b0 = this['_boundBox']['max'];
            return this['_getUpdate' + 'Flag'](_0x252754['_UPDATE_MA' + 'X']) && (this['_getMax'](this['getCenter'](), this['getExtent'](), _0x5f22b0), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MA' + 'X'], !0x1)), _0x5f22b0;
        }
        ['setCenter'](_0x3bfe67) {
            _0x3bfe67 !== this['_center'] && _0x3bfe67['cloneTo'](this['_center']), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MI' + 'N'] | _0x252754['_UPDATE_MA' + 'X'], !0x0), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_CE' + 'NTER'], !0x1);
        }
        ['getCenter']() {
            return this['_getUpdate' + 'Flag'](_0x252754['_UPDATE_CE' + 'NTER']) && (this['_getCenter'](this['getMin'](), this['getMax'](), this['_center']), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_CE' + 'NTER'], !0x1)), this['_center'];
        }
        ['setExtent'](_0x1ed150) {
            _0x1ed150 !== this['_extent'] && _0x1ed150['cloneTo'](this['_extent']), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MI' + 'N'] | _0x252754['_UPDATE_MA' + 'X'], !0x0), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_EX' + 'TENT'], !0x1);
        }
        ['getExtent']() {
            return this['_getUpdate' + 'Flag'](_0x252754['_UPDATE_EX' + 'TENT']) && (this['_getExtent'](this['getMin'](), this['getMax'](), this['_extent']), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_EX' + 'TENT'], !0x1)), this['_extent'];
        }
        ['_getUpdate' + 'Flag'](_0x4cc84d) {
            return 0x0 != (this['_updateFla' + 'g'] & _0x4cc84d);
        }
        ['_setUpdate' + 'Flag'](_0x4907f7, _0x171046) {
            _0x171046 ? this['_updateFla' + 'g'] |= _0x4907f7 : this['_updateFla' + 'g'] &= ~_0x4907f7;
        }
        ['_getCenter'](_0xaeb447, _0x10323a, _0x2bab66) {
            _0x43b358['add'](_0xaeb447, _0x10323a, _0x2bab66), _0x43b358['scale'](_0x2bab66, 0.5, _0x2bab66);
        }
        ['_getExtent'](_0x2d474d, _0x136331, _0x4c317d) {
            _0x43b358['subtract'](_0x136331, _0x2d474d, _0x4c317d), _0x43b358['scale'](_0x4c317d, 0.5, _0x4c317d);
        }
        ['_getMin'](_0x1d156e, _0x46d1e7, _0x1b3d99) {
            _0x43b358['subtract'](_0x1d156e, _0x46d1e7, _0x1b3d99);
        }
        ['_getMax'](_0x10c4c8, _0x2bfef9, _0x27395a) {
            _0x43b358['add'](_0x10c4c8, _0x2bfef9, _0x27395a);
        }
        ['_rotateExt' + 'ents'](_0x1f922c, _0x5c9815, _0x35fa6e) {
            var _0x51b971 = _0x1f922c['x'], _0x388bcc = _0x1f922c['y'], _0x4b15b5 = _0x1f922c['z'], _0x1b0d75 = _0x5c9815['elements'];
            _0x35fa6e['x'] = Math['abs'](_0x1b0d75[0x0] * _0x51b971) + Math['abs'](_0x1b0d75[0x4] * _0x388bcc) + Math['abs'](_0x1b0d75[0x8] * _0x4b15b5), _0x35fa6e['y'] = Math['abs'](_0x1b0d75[0x1] * _0x51b971) + Math['abs'](_0x1b0d75[0x5] * _0x388bcc) + Math['abs'](_0x1b0d75[0x9] * _0x4b15b5), _0x35fa6e['z'] = Math['abs'](_0x1b0d75[0x2] * _0x51b971) + Math['abs'](_0x1b0d75[0x6] * _0x388bcc) + Math['abs'](_0x1b0d75[0xa] * _0x4b15b5);
        }
        ['_tranform'](_0x1b8ac0, _0xfaa810) {
            var _0x1dee47 = _0xfaa810['_center'], _0x79548f = _0xfaa810['_extent'];
            _0x43b358['transformC' + 'oordinate'](this['getCenter'](), _0x1b8ac0, _0x1dee47), this['_rotateExt' + 'ents'](this['getExtent'](), _0x1b8ac0, _0x79548f), _0xfaa810['_boundBox']['setCenterA' + 'ndExtent'](_0x1dee47, _0x79548f), _0xfaa810['_updateFla' + 'g'] = 0x0;
        }
        ['_getBoundB' + 'ox']() {
            if (this['_updateFla' + 'g'] & _0x252754['_UPDATE_MI' + 'N']) {
                var _0x8bb54a = this['_boundBox']['min'];
                this['_getMin'](this['getCenter'](), this['getExtent'](), _0x8bb54a), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MI' + 'N'], !0x1);
            }
            if (this['_updateFla' + 'g'] & _0x252754['_UPDATE_MA' + 'X']) {
                var _0x567947 = this['_boundBox']['max'];
                this['_getMax'](this['getCenter'](), this['getExtent'](), _0x567947), this['_setUpdate' + 'Flag'](_0x252754['_UPDATE_MA' + 'X'], !0x1);
            }
            return this['_boundBox'];
        }
        ['cloneTo'](_0x2e8553) {
            var _0x526d32 = _0x2e8553;
            this['getMin']()['cloneTo'](_0x526d32['_boundBox']['min']), this['getMax']()['cloneTo'](_0x526d32['_boundBox']['max']), this['getCenter']()['cloneTo'](_0x526d32['_center']), this['getExtent']()['cloneTo'](_0x526d32['_extent']), _0x526d32['_updateFla' + 'g'] = 0x0;
        }
        ['clone']() {
            var _0x4e9039 = new _0x252754(new _0x43b358(), new _0x43b358());
            return this['cloneTo'](_0x4e9039), _0x4e9039;
        }
    }
    _0x252754['_UPDATE_MI' + 'N'] = 0x1, _0x252754['_UPDATE_MA' + 'X'] = 0x2, _0x252754['_UPDATE_CE' + 'NTER'] = 0x4, _0x252754['_UPDATE_EX' + 'TENT'] = 0x8;
    class _0x25a854 {
        constructor() {
            this['_destroyed'] = !0x1;
        }
        get ['destroyed']() {
            return this['_destroyed'];
        }
        ['_getType']() {
            throw 'GeometryEl' + 'ement:must' + '\x20override\x20' + 'it.';
        }
        ['_prepareRe' + 'nder'](_0x481486) {
            return !0x0;
        }
        ['_render'](_0xaae10) {
            throw 'GeometryEl' + 'ement:must' + '\x20override\x20' + 'it.';
        }
        ['destroy']() {
            this['_destroyed'] || (this['_destroyed'] = !0x0);
        }
    }
    _0x25a854['_typeCount' + 'er'] = 0x0;
    class _0x4b6660 {
        static get ['vertexDecl' + 'aration']() {
            return _0x4b6660['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x4b6660['_vertexDec' + 'laration'] = new _0x2ca0b5(0x1c, [
                new _0x50e0bd(0x0, _0x163e87['Vector3'], _0x3fbee7['MESH_POSIT' + 'ION0']),
                new _0x50e0bd(0xc, _0x163e87['Vector4'], _0x3fbee7['MESH_COLOR' + '0'])
            ]);
        }
        get ['vertexDecl' + 'aration']() {
            return _0x4b6660['_vertexDec' + 'laration'];
        }
        constructor() {
        }
    }
    class _0x215610 extends _0x25a854 {
        constructor(_0x3f6908, _0x158d2b) {
            super(), this['_floatCoun' + 'tPerVertic' + 'es'] = 0x7, this['_minUpdate'] = Number['MAX_VALUE'], this['_maxUpdate'] = Number['MIN_VALUE'], this['_bufferSta' + 'te'] = new _0x145b1e(), this['_floatBoun' + 'd'] = new Float32Array(0x6), this['_calculate' + 'Bound'] = !0x1, this['_maxLineCo' + 'unt'] = 0x0, this['_lineCount'] = 0x0;
            var _0x1bd02f = 0x2 * _0x158d2b;
            this['_owner'] = _0x3f6908, this['_maxLineCo' + 'unt'] = _0x158d2b, this['_vertices'] = new Float32Array(_0x1bd02f * this['_floatCoun' + 'tPerVertic' + 'es']), this['_vertexBuf' + 'fer'] = new _0x26d078(_0x4b6660['vertexDecl' + 'aration']['vertexStri' + 'de'] * _0x1bd02f, _0x2247ad['LayaGL']['instance']['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x4b6660['vertexDecl' + 'aration'], this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind']();
            var _0x661ef3 = _0x215610['_tempVecto' + 'r0'], _0x4b1be7 = _0x215610['_tempVecto' + 'r1'];
            _0x661ef3['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0x4b1be7['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), this['_bounds'] = new _0x252754(_0x661ef3, _0x4b1be7);
        }
        ['_getType']() {
            return _0x215610['_type'];
        }
        ['_resizeLin' + 'eData'](_0x518035) {
            var _0x15a19f = 0x2 * _0x518035, _0x310fca = this['_vertices'];
            this['_vertexBuf' + 'fer']['destroy'](), this['_maxLineCo' + 'unt'] = _0x518035;
            var _0x5310af = _0x15a19f * this['_floatCoun' + 'tPerVertic' + 'es'];
            this['_vertices'] = new Float32Array(_0x5310af), this['_vertexBuf' + 'fer'] = new _0x26d078(_0x4b6660['vertexDecl' + 'aration']['vertexStri' + 'de'] * _0x15a19f, _0x2247ad['LayaGL']['instance']['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x4b6660['vertexDecl' + 'aration'], _0x5310af < _0x310fca['length'] ? (this['_vertices']['set'](new Float32Array(_0x310fca['buffer'], 0x0, _0x5310af)), this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, 0x4 * _0x5310af)) : (this['_vertices']['set'](_0x310fca), this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, 0x4 * _0x310fca['length'])), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind']();
        }
        ['_updateLin' + 'eVertices'](_0xb680a4, _0xdad591, _0x273af4, _0xbdbfd, _0x350f53) {
            _0xdad591 && (this['_vertices'][_0xb680a4 + 0x0] = _0xdad591['x'], this['_vertices'][_0xb680a4 + 0x1] = _0xdad591['y'], this['_vertices'][_0xb680a4 + 0x2] = _0xdad591['z']), _0xbdbfd && (this['_vertices'][_0xb680a4 + 0x3] = _0xbdbfd['r'], this['_vertices'][_0xb680a4 + 0x4] = _0xbdbfd['g'], this['_vertices'][_0xb680a4 + 0x5] = _0xbdbfd['b'], this['_vertices'][_0xb680a4 + 0x6] = _0xbdbfd['a']), _0x273af4 && (this['_vertices'][_0xb680a4 + 0x7] = _0x273af4['x'], this['_vertices'][_0xb680a4 + 0x8] = _0x273af4['y'], this['_vertices'][_0xb680a4 + 0x9] = _0x273af4['z']), _0x350f53 && (this['_vertices'][_0xb680a4 + 0xa] = _0x350f53['r'], this['_vertices'][_0xb680a4 + 0xb] = _0x350f53['g'], this['_vertices'][_0xb680a4 + 0xc] = _0x350f53['b'], this['_vertices'][_0xb680a4 + 0xd] = _0x350f53['a']), this['_minUpdate'] = Math['min'](this['_minUpdate'], _0xb680a4), this['_maxUpdate'] = Math['max'](this['_maxUpdate'], _0xb680a4 + 0x2 * this['_floatCoun' + 'tPerVertic' + 'es']);
            var _0x2dccec = this['_bounds'], _0x466343 = this['_floatBoun' + 'd'], _0x19cbd4 = _0x2dccec['getMin'](), _0x59ced9 = _0x2dccec['getMax']();
            _0x43b358['min'](_0x19cbd4, _0xdad591, _0x19cbd4), _0x43b358['min'](_0x19cbd4, _0x273af4, _0x19cbd4), _0x43b358['max'](_0x59ced9, _0xdad591, _0x59ced9), _0x43b358['max'](_0x59ced9, _0x273af4, _0x59ced9), _0x2dccec['setMin'](_0x19cbd4), _0x2dccec['setMax'](_0x59ced9), _0x466343[0x0] = _0x19cbd4['x'], _0x466343[0x1] = _0x19cbd4['y'], _0x466343[0x2] = _0x19cbd4['z'], _0x466343[0x3] = _0x59ced9['x'], _0x466343[0x4] = _0x59ced9['y'], _0x466343[0x5] = _0x59ced9['z'];
        }
        ['_reCalcula' + 'teBound']() {
            if (this['_calculate' + 'Bound']) {
                var _0x426181 = this['_vertices'], _0x4860d8 = _0x215610['_tempVecto' + 'r0'], _0x30ae74 = _0x215610['_tempVecto' + 'r1'];
                _0x4860d8['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0x30ae74['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']);
                for (var _0x4e2501 = 0x0; _0x4e2501 < 0x2 * this['_lineCount']; ++_0x4e2501) {
                    var _0x21db09 = this['_floatCoun' + 'tPerVertic' + 'es'] * _0x4e2501, _0x306fe1 = _0x426181[_0x21db09 + 0x0], _0x23c47e = _0x426181[_0x21db09 + 0x1], _0x57c2c0 = _0x426181[_0x21db09 + 0x2];
                    _0x4860d8['x'] = Math['min'](_0x306fe1, _0x4860d8['x']), _0x4860d8['y'] = Math['min'](_0x23c47e, _0x4860d8['y']), _0x4860d8['z'] = Math['min'](_0x57c2c0, _0x4860d8['z']), _0x30ae74['x'] = Math['max'](_0x306fe1, _0x30ae74['x']), _0x30ae74['y'] = Math['max'](_0x23c47e, _0x30ae74['y']), _0x30ae74['z'] = Math['max'](_0x57c2c0, _0x30ae74['z']);
                }
                this['_bounds']['setMin'](_0x4860d8), this['_bounds']['setMax'](_0x30ae74);
                var _0x4e3483 = this['_floatBoun' + 'd'];
                _0x4e3483[0x0] = _0x4860d8['x'], _0x4e3483[0x1] = _0x4860d8['y'], _0x4e3483[0x2] = _0x4860d8['z'], _0x4e3483[0x3] = _0x30ae74['x'], _0x4e3483[0x4] = _0x30ae74['y'], _0x4e3483[0x5] = _0x30ae74['z'], this['_calculate' + 'Bound'] = !0x1;
            }
        }
        ['_removeLin' + 'eData'](_0x5616fa) {
            var _0x4ffbd3 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es'], _0x3191f4 = _0x5616fa + 0x1, _0x3aae3b = _0x5616fa * _0x4ffbd3, _0x17e01b = this['_vertices'], _0x10e98a = new Float32Array(_0x17e01b['buffer'], _0x3191f4 * _0x4ffbd3 * 0x4, (this['_lineCount'] - _0x3191f4) * _0x4ffbd3);
            _0x17e01b['set'](_0x10e98a, _0x3aae3b), this['_minUpdate'] = Math['min'](this['_minUpdate'], _0x3aae3b), this['_maxUpdate'] = Math['max'](this['_maxUpdate'], _0x3aae3b + _0x10e98a['length']), this['_lineCount']--;
            var _0x2efc76 = this['_floatBoun' + 'd'], _0x354856 = _0x17e01b[_0x3aae3b], _0x39fd68 = _0x17e01b[_0x3aae3b + 0x1], _0x2f2c4d = _0x17e01b[_0x3aae3b + 0x2], _0xb733e0 = _0x17e01b[_0x3aae3b + 0x7], _0x3e5f1e = _0x17e01b[_0x3aae3b + 0x8], _0x23f446 = _0x17e01b[_0x3aae3b + 0x9], _0x5cbf55 = _0x2efc76[0x0], _0x333dd3 = _0x2efc76[0x1], _0x2d0f73 = _0x2efc76[0x2], _0x3768a2 = _0x2efc76[0x3], _0x118690 = _0x2efc76[0x4], _0x293c84 = _0x2efc76[0x5];
            _0x354856 !== _0x5cbf55 && _0x354856 !== _0x3768a2 && _0x39fd68 !== _0x333dd3 && _0x39fd68 !== _0x118690 && _0x2f2c4d !== _0x2d0f73 && _0x2f2c4d !== _0x293c84 && _0xb733e0 !== _0x5cbf55 && _0xb733e0 !== _0x3768a2 && _0x3e5f1e !== _0x333dd3 && _0x3e5f1e !== _0x118690 && _0x23f446 !== _0x2d0f73 && _0x23f446 !== _0x293c84 || (this['_calculate' + 'Bound'] = !0x0);
        }
        ['_updateLin' + 'eData'](_0x3424e9, _0x1bf741, _0x24d23a, _0x3b89e5, _0x55ae54) {
            var _0x259c45 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es'];
            this['_updateLin' + 'eVertices'](_0x3424e9 * _0x259c45, _0x1bf741, _0x24d23a, _0x3b89e5, _0x55ae54);
        }
        ['_updateLin' + 'eDatas'](_0x40dc2c, _0x3f6d93) {
            for (var _0x5214f2 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es'], _0x4c7f50 = _0x3f6d93['length'], _0x424d51 = 0x0; _0x424d51 < _0x4c7f50; _0x424d51++) {
                var _0x28194a = _0x3f6d93[_0x424d51];
                this['_updateLin' + 'eVertices']((_0x40dc2c + _0x424d51) * _0x5214f2, _0x28194a['startPosit' + 'ion'], _0x28194a['endPositio' + 'n'], _0x28194a['startColor'], _0x28194a['endColor']);
            }
        }
        ['_getLineDa' + 'ta'](_0x39fb7a, _0x54cd80) {
            var _0x43429d = _0x54cd80['startPosit' + 'ion'], _0x2316b5 = _0x54cd80['startColor'], _0x2fa728 = _0x54cd80['endPositio' + 'n'], _0x557ef1 = _0x54cd80['endColor'], _0x35ec2b = this['_vertices'], _0x473a50 = _0x39fb7a * this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2;
            _0x43429d['x'] = _0x35ec2b[_0x473a50 + 0x0], _0x43429d['y'] = _0x35ec2b[_0x473a50 + 0x1], _0x43429d['z'] = _0x35ec2b[_0x473a50 + 0x2], _0x2316b5['r'] = _0x35ec2b[_0x473a50 + 0x3], _0x2316b5['g'] = _0x35ec2b[_0x473a50 + 0x4], _0x2316b5['b'] = _0x35ec2b[_0x473a50 + 0x5], _0x2316b5['a'] = _0x35ec2b[_0x473a50 + 0x6], _0x2fa728['x'] = _0x35ec2b[_0x473a50 + 0x7], _0x2fa728['y'] = _0x35ec2b[_0x473a50 + 0x8], _0x2fa728['z'] = _0x35ec2b[_0x473a50 + 0x9], _0x557ef1['r'] = _0x35ec2b[_0x473a50 + 0xa], _0x557ef1['g'] = _0x35ec2b[_0x473a50 + 0xb], _0x557ef1['b'] = _0x35ec2b[_0x473a50 + 0xc], _0x557ef1['a'] = _0x35ec2b[_0x473a50 + 0xd];
        }
        ['_prepareRe' + 'nder'](_0x4d2ce2) {
            return !0x0;
        }
        ['_render'](_0x478def) {
            if (this['_minUpdate'] !== Number['MAX_VALUE'] && this['_maxUpdate'] !== Number['MIN_VALUE'] && (this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x4 * this['_minUpdate'], 0x4 * this['_minUpdate'], 0x4 * (this['_maxUpdate'] - this['_minUpdate'])), this['_minUpdate'] = Number['MAX_VALUE'], this['_maxUpdate'] = Number['MIN_VALUE']), this['_lineCount'] > 0x0) {
                this['_bufferSta' + 'te']['bind']();
                var _0xd681e2 = _0x2247ad['LayaGL']['instance'];
                _0xd681e2['drawArrays'](_0xd681e2['LINES'], 0x0, 0x2 * this['_lineCount']), _0x2247ad['Stat']['renderBatc' + 'hes']++;
            }
        }
        ['destroy']() {
            this['_destroyed'] || (super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertexBuf' + 'fer'] = null, this['_vertices'] = null);
        }
    }
    _0x215610['_tempVecto' + 'r0'] = new _0x43b358(), _0x215610['_tempVecto' + 'r1'] = new _0x43b358(), _0x215610['_type'] = _0x25a854['_typeCount' + 'er']++;
    class _0x5e821c {
        constructor() {
            this['updateMark'] = -0x1, this['indexInLis' + 't'] = -0x1, this['batched'] = !0x1;
        }
    }
    class _0x5e7887 extends _0x25a854 {
        constructor() {
            super(), this['maxInstanc' + 'eCount'] = 0x400, this['instanceWo' + 'rldMatrixD' + 'ata'] = new Float32Array(0x10 * this['maxInstanc' + 'eCount']), this['instanceMV' + 'PMatrixDat' + 'a'] = new Float32Array(0x10 * this['maxInstanc' + 'eCount']);
            var _0x18ae41 = _0x2247ad['LayaGL']['instance'];
            this['instanceWo' + 'rldMatrixB' + 'uffer'] = new _0x26d078(0x4 * this['instanceWo' + 'rldMatrixD' + 'ata']['length'], _0x18ae41['DYNAMIC_DR' + 'AW']), this['instanceMV' + 'PMatrixBuf' + 'fer'] = new _0x26d078(0x4 * this['instanceMV' + 'PMatrixDat' + 'a']['length'], _0x18ae41['DYNAMIC_DR' + 'AW']), this['instanceWo' + 'rldMatrixB' + 'uffer']['vertexDecl' + 'aration'] = _0x3fbee7['instanceWo' + 'rldMatrixD' + 'eclaration'], this['instanceMV' + 'PMatrixBuf' + 'fer']['vertexDecl' + 'aration'] = _0x3fbee7['instanceMV' + 'PMatrixDec' + 'laration'];
        }
        static ['__init__']() {
            _0x5e7887['instance'] = new _0x5e7887();
        }
        ['_render'](_0x582738) {
            var _0x43ec4c = _0x2247ad['LayaGL']['instance'], _0x33357b = _0x582738['renderElem' + 'ent'], _0x400e73 = _0x33357b['instanceSu' + 'bMesh'], _0xf12adb = _0x33357b['instanceBa' + 'tchElement' + 'List']['length'], _0x40555d = _0x400e73['_indexCoun' + 't'];
            _0x400e73['_mesh']['_instanceB' + 'ufferState']['bind'](), _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['drawElemen' + 'tsInstance' + 'd'](_0x43ec4c['TRIANGLES'], _0x40555d, _0x43ec4c['UNSIGNED_S' + 'HORT'], 0x2 * _0x400e73['_indexStar' + 't'], _0xf12adb), _0x2247ad['Stat']['renderBatc' + 'hes']++, _0x2247ad['Stat']['savedRende' + 'rBatches'] += _0xf12adb - 0x1, _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x40555d * _0xf12adb / 0x3;
        }
    }
    class _0x978ca7 {
        constructor() {
            this['renderSubS' + 'hader'] = null, this['renderType'] = _0x978ca7['RENDERTYPE' + '_NORMAL'];
        }
        ['getInvertF' + 'ront']() {
            return this['_transform']['_isFrontFa' + 'ceInvert'];
        }
        ['setTransfo' + 'rm'](_0x1467df) {
            this['_transform'] = _0x1467df;
        }
        ['setGeometr' + 'y'](_0x5582c0) {
            this['_geometry'] = _0x5582c0;
        }
        ['addToOpaqu' + 'eRenderQue' + 'ue'](_0x4df41e, _0x671569) {
            _0x671569['elements']['add'](this);
        }
        ['addToTrans' + 'parentRend' + 'erQueue'](_0xb55d64, _0x40caae) {
            _0x40caae['elements']['add'](this), _0x40caae['lastTransp' + 'arentBatch' + 'ed'] = !0x1, _0x40caae['lastTransp' + 'arentRende' + 'rElement'] = this;
        }
        ['_update'](_0x342b5b, _0x251fe4, _0x1e1965, _0x59b9f8) {
            if (this['material']) {
                var _0xd04a3e = this['material']['_shader']['getSubShad' + 'erAt'](0x0);
                if (this['renderSubS' + 'hader'] = null, _0x1e1965) {
                    if (_0x59b9f8) {
                        var _0x3f096f = _0xd04a3e['getFlag'](_0x59b9f8);
                        if (!_0x3f096f)
                            return;
                        for (var _0x4fa5fe = _0x1e1965['_subShader' + 's'], _0x16ee77 = 0x0, _0x1ce129 = _0x4fa5fe['length']; _0x16ee77 < _0x1ce129; _0x16ee77++) {
                            var _0x151f37 = _0x4fa5fe[_0x16ee77];
                            if (_0x3f096f === _0x151f37['getFlag'](_0x59b9f8)) {
                                this['renderSubS' + 'hader'] = _0x151f37;
                                break;
                            }
                        }
                        if (!this['renderSubS' + 'hader'])
                            return;
                    } else
                        this['renderSubS' + 'hader'] = _0x1e1965['getSubShad' + 'erAt'](0x0);
                } else
                    this['renderSubS' + 'hader'] = _0xd04a3e;
                var _0xd09f9d = _0x342b5b['_getRender' + 'Queue'](this['material']['renderQueu' + 'e']);
                _0xd09f9d['isTranspar' + 'ent'] ? this['addToTrans' + 'parentRend' + 'erQueue'](_0x251fe4, _0xd09f9d) : this['addToOpaqu' + 'eRenderQue' + 'ue'](_0x251fe4, _0xd09f9d);
            }
        }
        ['_render'](_0x4e56e2) {
            var _0x6682e2, _0x5ce01e, _0x5d444f, _0x347405 = _0x4e56e2['invertY'], _0x40a4f6 = _0x14e627['_updateMar' + 'k'], _0x4506bb = _0x4e56e2['scene'], _0x28aadf = _0x4e56e2['cameraShad' + 'erValue'], _0x1e4da8 = this['_transform'], _0x36d4d3 = this['_geometry'];
            _0x4e56e2['renderElem' + 'ent'] = this;
            var _0x43b9c1 = _0x40a4f6 !== this['render']['_updateMar' + 'k'] || this['renderType'] !== this['render']['_updateRen' + 'derType'];
            _0x43b9c1 ? (this['render']['_renderUpd' + 'ate'](_0x4e56e2, _0x1e4da8), this['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x4e56e2, _0x1e4da8), this['render']['_updateMar' + 'k'] = _0x40a4f6, this['render']['_updateRen' + 'derType'] = this['renderType']) : this['renderType'] == _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] && (this['render']['_renderUpd' + 'ate'](_0x4e56e2, _0x1e4da8), this['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x4e56e2, _0x1e4da8));
            var _0x289fde = _0x4e56e2['pipelineMo' + 'de'];
            if (_0x36d4d3['_prepareRe' + 'nder'](_0x4e56e2))
                for (var _0x7b712 = this['renderSubS' + 'hader']['_passes'], _0xe032fa = 0x0, _0x443e40 = _0x7b712['length']; _0xe032fa < _0x443e40; _0xe032fa++) {
                    var _0x5a33db = _0x7b712[_0xe032fa];
                    if (_0x5a33db['_pipelineM' + 'ode'] === _0x289fde) {
                        var _0x2bd32f = _0x978ca7['_compileDe' + 'fine'];
                        _0x4506bb['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x2bd32f), _0x2bd32f['addDefineD' + 'atas'](this['render']['_shaderVal' + 'ues']['_defineDat' + 'as']), _0x2bd32f['addDefineD' + 'atas'](this['material']['_shaderVal' + 'ues']['_defineDat' + 'as']);
                        var _0x73fca2 = _0x4e56e2['shader'] = _0x5a33db['withCompil' + 'e'](_0x2bd32f), _0x2bf1a9 = _0x73fca2['bind'](), _0x49d6ce = _0x40a4f6 !== _0x73fca2['_uploadMar' + 'k'], _0xefa3e3 = _0x73fca2['_uploadSce' + 'ne'] !== _0x4506bb || _0x49d6ce;
                        (_0xefa3e3 || _0x2bf1a9) && (_0x73fca2['uploadUnif' + 'orms'](_0x73fca2['_sceneUnif' + 'ormParamsM' + 'ap'], _0x4506bb['_shaderVal' + 'ues'], _0xefa3e3), _0x73fca2['_uploadSce' + 'ne'] = _0x4506bb);
                        var _0x29ac7a = _0x73fca2['_uploadRen' + 'der'] !== this['render'] || _0x73fca2['_uploadRen' + 'derType'] !== this['renderType'] || _0x49d6ce;
                        (_0x29ac7a || _0x2bf1a9) && (_0x73fca2['uploadUnif' + 'orms'](_0x73fca2['_spriteUni' + 'formParams' + 'Map'], this['render']['_shaderVal' + 'ues'], _0x29ac7a), _0x73fca2['_uploadRen' + 'der'] = this['render'], _0x73fca2['_uploadRen' + 'derType'] = this['renderType']);
                        var _0x342a1d = _0x73fca2['_uploadCam' + 'eraShaderV' + 'alue'] !== _0x28aadf || _0x49d6ce;
                        (_0x342a1d || _0x2bf1a9) && (_0x73fca2['uploadUnif' + 'orms'](_0x73fca2['_cameraUni' + 'formParams' + 'Map'], _0x28aadf, _0x342a1d), _0x73fca2['_uploadCam' + 'eraShaderV' + 'alue'] = _0x28aadf);
                        var _0x564a24 = _0x73fca2['_uploadMat' + 'erial'] !== this['material'] || _0x49d6ce;
                        (_0x564a24 || _0x2bf1a9) && (_0x73fca2['uploadUnif' + 'orms'](_0x73fca2['_materialU' + 'niformPara' + 'msMap'], this['material']['_shaderVal' + 'ues'], _0x564a24), _0x73fca2['_uploadMat' + 'erial'] = this['material']);
                        var _0xc50320 = this['material']['_shaderVal' + 'ues'];
                        _0x6682e2 !== this['material'] || _0x5ce01e !== _0x73fca2 ? (_0x73fca2['uploadRend' + 'erStateBle' + 'ndDepth'](_0xc50320), _0x73fca2['uploadRend' + 'erStateFro' + 'ntFace'](_0xc50320, _0x347405, this['getInvertF' + 'ront']()), _0x6682e2 = this['material'], _0x5ce01e = _0x73fca2, _0x5d444f = this['render']) : _0x5d444f !== this['render'] && (_0x73fca2['uploadRend' + 'erStateFro' + 'ntFace'](_0xc50320, _0x347405, this['getInvertF' + 'ront']()), _0x5d444f = this['render']), _0x36d4d3['_render'](_0x4e56e2), _0x73fca2['_uploadMar' + 'k'] = _0x40a4f6;
                    }
                }
            _0x43b9c1 && this['renderType'] !== _0x978ca7['RENDERTYPE' + '_NORMAL'] && this['render']['_revertBat' + 'chRenderUp' + 'date'](_0x4e56e2);
        }
        ['destroy']() {
            this['_transform'] = null, this['_geometry'] = null, this['material'] = null, this['render'] = null;
        }
    }
    _0x978ca7['RENDERTYPE' + '_NORMAL'] = 0x0, _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH'] = 0x1, _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] = 0x2, _0x978ca7['RENDERTYPE' + '_VERTEXBAT' + 'CH'] = 0x3, _0x978ca7['_compileDe' + 'fine'] = new _0x590056();
    class _0x19ed1f extends _0x978ca7 {
        constructor() {
            super(), this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x0;
        }
        ['_onWorldMa' + 'trixChange' + 'd']() {
            this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x0;
        }
        ['_computeWo' + 'rldPositio' + 'nsAndNorma' + 'ls'](_0x86ad83, _0x2b4ddc, _0x212bbc, _0x1e818b) {
            if (this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate']) {
                for (var _0x4ca53b = this['_geometry'], _0x377dfa = _0x4ca53b['_vertexBuf' + 'fer'], _0x290a47 = _0x377dfa['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x24e798 = _0x377dfa['getFloat32' + 'Data'](), _0x50a8ed = this['_transform']['worldMatri' + 'x'], _0xed738 = this['_transform']['rotation'], _0x3568f1 = _0x4ca53b['_indices'], _0x445148 = 0x0; _0x445148 < _0x1e818b; _0x445148++) {
                    var _0x2c021c = (_0x212bbc ? _0x3568f1[_0x445148] : _0x445148) * _0x290a47, _0x5d479d = 0x3 * _0x445148;
                    _0x101904['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x24e798, _0x2c021c + _0x86ad83, _0x50a8ed, this['_dynamicWo' + 'rldPositio' + 'ns'], _0x5d479d), -0x1 !== _0x2b4ddc && _0x101904['transformV' + 'ector3Arra' + 'yByQuat'](_0x24e798, _0x2c021c + _0x2b4ddc, _0xed738, this['_dynamicWo' + 'rldNormals'], _0x5d479d);
                }
                this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x1;
            }
        }
        ['setTransfo' + 'rm'](_0x1b0e6e) {
            this['_transform'] !== _0x1b0e6e && (this['_transform'] && this['_transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'trixChange' + 'd']), _0x1b0e6e && _0x1b0e6e['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'trixChange' + 'd']), this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x0, this['_transform'] = _0x1b0e6e);
        }
        ['setGeometr' + 'y'](_0x245d28) {
            if (this['_geometry'] !== _0x245d28) {
                var _0x477d14 = _0x245d28, _0x39a64b = _0x477d14['_mesh'];
                if (_0x39a64b) {
                    var _0x47f3f8 = _0x39a64b['_subMeshes']['length'] > 0x1, _0x36ad5c = _0x47f3f8 ? _0x477d14['_indexCoun' + 't'] : _0x39a64b['_vertexCou' + 'nt'];
                    if (_0x36ad5c <= _0x1fc38b['SubMeshDyn' + 'amicBatch']['maxAllowVe' + 'rtexCount']) {
                        var _0x421630 = 0x3 * _0x36ad5c;
                        this['_dynamicVe' + 'rtexBatch'] = !0x0, this['_dynamicWo' + 'rldPositio' + 'ns'] = new Float32Array(_0x421630), this['_dynamicWo' + 'rldNormals'] = new Float32Array(_0x421630), this['_dynamicVe' + 'rtexCount'] = _0x36ad5c, this['_dynamicMu' + 'ltiSubMesh'] = _0x47f3f8;
                    } else
                        this['_dynamicVe' + 'rtexBatch'] = !0x1;
                }
                this['_geometry'] = _0x245d28;
            }
        }
        ['addToOpaqu' + 'eRenderQue' + 'ue'](_0x33c64d, _0x309f84) {
            var _0x21e964 = this['staticBatc' + 'h'], _0xd17488 = _0x309f84['elements'], _0x500dbb = _0xd17488['elements'];
            if (_0x21e964) {
                var _0x1ef25c = _0x1fc38b['MeshRender' + 'StaticBatc' + 'hManager']['instance'], _0x4bbb57 = _0x1ef25c['getBatchOp' + 'aquaMark'](this['render']['lightmapIn' + 'dex'] + 0x1, this['render']['receiveSha' + 'dow'], this['material']['id'], _0x21e964['_batchID']);
                if (_0x1ef25c['_updateCou' + 'ntMark'] === _0x4bbb57['updateMark']) {
                    var _0x568fbe = _0x4bbb57['indexInLis' + 't'];
                    if (_0x4bbb57['batched'])
                        _0x500dbb[_0x568fbe]['staticBatc' + 'hElementLi' + 'st']['add'](this);
                    else {
                        var _0x49ef41 = _0x500dbb[_0x568fbe], _0x515251 = _0x49ef41['render'], _0x1b4e67 = _0x1ef25c['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                        _0x1b4e67['renderType'] = _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH'], _0x1b4e67['setGeometr' + 'y'](_0x21e964), _0x1b4e67['material'] = _0x49ef41['material'];
                        var _0x22058b = _0x21e964['batchOwner'], _0x271883 = _0x22058b ? _0x22058b['_transform'] : null;
                        _0x1b4e67['setTransfo' + 'rm'](_0x271883), _0x1b4e67['render'] = _0x515251, _0x1b4e67['renderSubS' + 'hader'] = _0x49ef41['renderSubS' + 'hader'];
                        var _0x2cf52c = _0x1b4e67['staticBatc' + 'hElementLi' + 'st'];
                        _0x2cf52c['length'] = 0x0, _0x2cf52c['add'](_0x49ef41), _0x2cf52c['add'](this), _0x500dbb[_0x568fbe] = _0x1b4e67, _0x4bbb57['batched'] = !0x0;
                    }
                } else
                    _0x4bbb57['updateMark'] = _0x1ef25c['_updateCou' + 'ntMark'], _0x4bbb57['indexInLis' + 't'] = _0xd17488['length'], _0x4bbb57['batched'] = !0x1, _0xd17488['add'](this);
            } else {
                if (this['renderSubS' + 'hader']['_owner']['_enableIns' + 'tancing'] && _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']() && this['render']['lightmapIn' + 'dex'] < 0x0) {
                    var _0x50d4b6 = this['_geometry'], _0x16afdf = _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x51891e = _0x16afdf['getInstanc' + 'eBatchOpaq' + 'uaMark'](this['render']['receiveSha' + 'dow'], this['material']['id'], _0x50d4b6['_id'], this['_transform']['_isFrontFa' + 'ceInvert']);
                    if (_0x16afdf['_updateCou' + 'ntMark'] === _0x51891e['updateMark']) {
                        var _0x166ec2 = _0x51891e['indexInLis' + 't'];
                        if (_0x51891e['batched']) {
                            var _0x534c8c = _0x500dbb[_0x166ec2]['instanceBa' + 'tchElement' + 'List'];
                            _0x534c8c['length'] === _0x5e7887['instance']['maxInstanc' + 'eCount'] ? (_0x51891e['updateMark'] = _0x16afdf['_updateCou' + 'ntMark'], _0x51891e['indexInLis' + 't'] = _0xd17488['length'], _0x51891e['batched'] = !0x1, _0xd17488['add'](this)) : _0x534c8c['add'](this);
                        } else {
                            var _0x4d95d5 = _0x500dbb[_0x166ec2], _0x2afe6e = _0x4d95d5['render'], _0x380eab = _0x16afdf['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                            _0x380eab['renderType'] = _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH'], _0x380eab['setGeometr' + 'y'](_0x5e7887['instance']), _0x380eab['material'] = _0x4d95d5['material'], _0x380eab['setTransfo' + 'rm'](null), _0x380eab['render'] = _0x2afe6e, _0x380eab['instanceSu' + 'bMesh'] = _0x50d4b6, _0x380eab['renderSubS' + 'hader'] = _0x4d95d5['renderSubS' + 'hader'];
                            var _0xb926e9 = _0x380eab['instanceBa' + 'tchElement' + 'List'];
                            _0xb926e9['length'] = 0x0, _0xb926e9['add'](_0x4d95d5), _0xb926e9['add'](this), _0x500dbb[_0x166ec2] = _0x380eab, _0x51891e['batched'] = !0x0;
                        }
                    } else
                        _0x51891e['updateMark'] = _0x16afdf['_updateCou' + 'ntMark'], _0x51891e['indexInLis' + 't'] = _0xd17488['length'], _0x51891e['batched'] = !0x1, _0xd17488['add'](this);
                } else {
                    if (this['_dynamicVe' + 'rtexBatch']) {
                        var _0x44b2f4 = this['_geometry']['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x24cdb4 = _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x37105e = _0x24cdb4['getVertexB' + 'atchOpaqua' + 'Mark'](this['render']['lightmapIn' + 'dex'] + 0x1, this['render']['receiveSha' + 'dow'], this['material']['id'], _0x44b2f4['id']);
                        if (_0x24cdb4['_updateCou' + 'ntMark'] === _0x37105e['updateMark']) {
                            var _0x138dc1 = _0x37105e['indexInLis' + 't'];
                            if (_0x37105e['batched'])
                                _0x500dbb[_0x138dc1]['vertexBatc' + 'hElementLi' + 'st']['add'](this);
                            else {
                                var _0x5fcfa7 = _0x500dbb[_0x138dc1], _0x343239 = _0x5fcfa7['render'], _0xf070b6 = _0x24cdb4['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                _0xf070b6['renderType'] = _0x978ca7['RENDERTYPE' + '_VERTEXBAT' + 'CH'], _0xf070b6['setGeometr' + 'y'](_0x1fc38b['SubMeshDyn' + 'amicBatch']['instance']), _0xf070b6['material'] = _0x5fcfa7['material'], _0xf070b6['setTransfo' + 'rm'](null), _0xf070b6['render'] = _0x343239, _0xf070b6['vertexBatc' + 'hVertexDec' + 'laration'] = _0x44b2f4, _0xf070b6['renderSubS' + 'hader'] = _0x5fcfa7['renderSubS' + 'hader'];
                                var _0x12082c = _0xf070b6['vertexBatc' + 'hElementLi' + 'st'];
                                _0x12082c['length'] = 0x0, _0x12082c['add'](_0x5fcfa7), _0x12082c['add'](this), _0x500dbb[_0x138dc1] = _0xf070b6, _0x37105e['batched'] = !0x0;
                            }
                        } else
                            _0x37105e['updateMark'] = _0x24cdb4['_updateCou' + 'ntMark'], _0x37105e['indexInLis' + 't'] = _0xd17488['length'], _0x37105e['batched'] = !0x1, _0xd17488['add'](this);
                    } else
                        _0xd17488['add'](this);
                }
            }
        }
        ['addToTrans' + 'parentRend' + 'erQueue'](_0x1614ad, _0x3a58b5) {
            var _0xc3cce3 = this['staticBatc' + 'h'], _0x5378b5 = _0x3a58b5['elements'], _0x43011f = _0x5378b5['elements'];
            if (_0xc3cce3) {
                var _0x2ac36d = _0x1fc38b['MeshRender' + 'StaticBatc' + 'hManager']['instance'], _0x15ad2f = _0x3a58b5['lastTransp' + 'arentRende' + 'rElement'];
                if (_0x15ad2f) {
                    var _0x4e868c = _0x15ad2f['render'];
                    if (_0x15ad2f['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x15ad2f['staticBatc' + 'h'] !== _0xc3cce3 || _0x15ad2f['material'] !== this['material'] || _0x4e868c['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'] || _0x4e868c['lightmapIn' + 'dex'] !== this['render']['lightmapIn' + 'dex'])
                        _0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                    else {
                        if (_0x3a58b5['lastTransp' + 'arentBatch' + 'ed'])
                            _0x43011f[_0x5378b5['length'] - 0x1]['staticBatc' + 'hElementLi' + 'st']['add'](this);
                        else {
                            var _0x55a702 = _0x2ac36d['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                            _0x55a702['renderType'] = _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH'], _0x55a702['setGeometr' + 'y'](_0xc3cce3), _0x55a702['material'] = _0x15ad2f['material'];
                            var _0x5a959e = _0xc3cce3['batchOwner'], _0x5a2e27 = _0x5a959e ? _0x5a959e['_transform'] : null;
                            _0x55a702['setTransfo' + 'rm'](_0x5a2e27), _0x55a702['render'] = this['render'], _0x55a702['renderSubS' + 'hader'] = _0x15ad2f['renderSubS' + 'hader'];
                            var _0x336cae = _0x55a702['staticBatc' + 'hElementLi' + 'st'];
                            _0x336cae['length'] = 0x0, _0x336cae['add'](_0x15ad2f), _0x336cae['add'](this), _0x43011f[_0x5378b5['length'] - 0x1] = _0x55a702;
                        }
                        _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x0;
                    }
                } else
                    _0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
            } else {
                if (this['renderSubS' + 'hader']['_owner']['_enableIns' + 'tancing'] && _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']() && this['render']['lightmapIn' + 'dex'] < 0x0) {
                    var _0x3f39d2 = this['_geometry'], _0x397bd2 = _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0xe36597 = _0x3a58b5['lastTransp' + 'arentRende' + 'rElement'];
                    if (_0xe36597) {
                        var _0x587a03 = _0xe36597['render'];
                        if (_0xe36597['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0xe36597['_geometry'] !== _0x3f39d2 || _0xe36597['material'] !== this['material'] || _0x587a03['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'])
                            _0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                        else {
                            if (_0x3a58b5['lastTransp' + 'arentBatch' + 'ed']) {
                                var _0x36e1a7 = _0x43011f[_0x5378b5['length'] - 0x1]['instanceBa' + 'tchElement' + 'List'];
                                _0x36e1a7['length'] === _0x5e7887['instance']['maxInstanc' + 'eCount'] ? (_0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1) : (_0x36e1a7['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x0);
                            } else {
                                var _0x2ea267 = _0x397bd2['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                _0x2ea267['renderType'] = _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH'], _0x2ea267['setGeometr' + 'y'](_0x5e7887['instance']), _0x2ea267['material'] = _0xe36597['material'], _0x2ea267['setTransfo' + 'rm'](null), _0x2ea267['render'] = this['render'], _0x2ea267['instanceSu' + 'bMesh'] = _0x3f39d2, _0x2ea267['renderSubS' + 'hader'] = _0xe36597['renderSubS' + 'hader'];
                                var _0x200a6a = _0x2ea267['instanceBa' + 'tchElement' + 'List'];
                                _0x200a6a['length'] = 0x0, _0x200a6a['add'](_0xe36597), _0x200a6a['add'](this), _0x43011f[_0x5378b5['length'] - 0x1] = _0x2ea267, _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x0;
                            }
                        }
                    } else
                        _0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                } else {
                    if (this['_dynamicVe' + 'rtexBatch']) {
                        var _0x36514b = this['_geometry']['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x5640ca = _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x310104 = _0x3a58b5['lastTransp' + 'arentRende' + 'rElement'];
                        if (_0x310104) {
                            var _0x58911a = _0x310104['render'];
                            if (_0x310104['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x310104['_geometry']['_vertexBuf' + 'fer']['_vertexDec' + 'laration'] !== _0x36514b || _0x310104['material'] !== this['material'] || _0x58911a['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'] || _0x58911a['lightmapIn' + 'dex'] !== this['render']['lightmapIn' + 'dex'])
                                _0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                            else {
                                if (_0x3a58b5['lastTransp' + 'arentBatch' + 'ed'])
                                    _0x43011f[_0x5378b5['length'] - 0x1]['vertexBatc' + 'hElementLi' + 'st']['add'](this);
                                else {
                                    var _0x36bf70 = _0x5640ca['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                    _0x36bf70['renderType'] = _0x978ca7['RENDERTYPE' + '_VERTEXBAT' + 'CH'], _0x36bf70['setGeometr' + 'y'](_0x1fc38b['SubMeshDyn' + 'amicBatch']['instance']), _0x36bf70['material'] = _0x310104['material'], _0x36bf70['setTransfo' + 'rm'](null), _0x36bf70['render'] = this['render'], _0x36bf70['vertexBatc' + 'hVertexDec' + 'laration'] = _0x36514b, _0x36bf70['renderSubS' + 'hader'] = _0x310104['renderSubS' + 'hader'];
                                    var _0x37fc80 = _0x36bf70['vertexBatc' + 'hElementLi' + 'st'];
                                    _0x37fc80['length'] = 0x0, _0x37fc80['add'](_0x310104), _0x37fc80['add'](this), _0x43011f[_0x5378b5['length'] - 0x1] = _0x36bf70;
                                }
                                _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x0;
                            }
                        } else
                            _0x5378b5['add'](this), _0x3a58b5['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                    } else
                        _0x5378b5['add'](this);
                }
            }
            _0x3a58b5['lastTransp' + 'arentRende' + 'rElement'] = this;
        }
        ['getInvertF' + 'ront']() {
            switch (this['renderType']) {
            case _0x978ca7['RENDERTYPE' + '_NORMAL']:
                return this['_transform']['_isFrontFa' + 'ceInvert'];
            case _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH']:
            case _0x978ca7['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                return !0x1;
            case _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                return this['instanceBa' + 'tchElement' + 'List']['elements'][0x0]['_transform']['_isFrontFa' + 'ceInvert'];
            default:
                throw 'SubMeshRen' + 'derElement' + ':\x20unknown\x20' + 'renderType';
            }
        }
        ['destroy']() {
            super['destroy'](), this['_dynamicWo' + 'rldPositio' + 'ns'] = null, this['_dynamicWo' + 'rldNormals'] = null, this['staticBatc' + 'h'] = null, this['staticBatc' + 'hElementLi' + 'st'] = null, this['vertexBatc' + 'hElementLi' + 'st'] = null, this['vertexBatc' + 'hVertexDec' + 'laration'] = null;
        }
    }
    class _0x2805c6 extends _0x25a854 {
        constructor(_0x30d222, _0x2047a4) {
            super(), this['_bufferSta' + 'te'] = new _0x145b1e(), this['_batchID'] = _0x2805c6['_batchIDCo' + 'unter']++, this['_batchElem' + 'ents'] = [], this['_currentBa' + 'tchVertexC' + 'ount'] = 0x0, this['_currentBa' + 'tchIndexCo' + 'unt'] = 0x0, this['_vertexDec' + 'laration'] = _0x2047a4, this['batchOwner'] = _0x30d222;
        }
        ['_getStatic' + 'BatchBaked' + 'Vertexs'](_0x1e0f71, _0x385a4a, _0x1de8d0, _0x761958, _0x5b924f, _0xd99ec6) {
            var _0x414e74, _0x261c1f = _0xd99ec6['_vertexBuf' + 'fer'], _0x4f204e = _0x261c1f['vertexDecl' + 'aration'], _0x5186cd = _0x4f204e['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_POSIT' + 'ION0'])['_offset'] / 0x4, _0x37169c = _0x4f204e['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_NORMA' + 'L0']), _0x145169 = _0x37169c ? _0x37169c['_offset'] / 0x4 : -0x1, _0x5f5057 = _0x4f204e['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_COLOR' + '0']), _0x58fadc = _0x5f5057 ? _0x5f5057['_offset'] / 0x4 : -0x1, _0x2d97a8 = _0x4f204e['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']), _0x3f1095 = _0x2d97a8 ? _0x2d97a8['_offset'] / 0x4 : -0x1, _0x329048 = _0x4f204e['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']), _0xd3b3f8 = _0x329048 ? _0x329048['_offset'] / 0x4 : -0x1, _0x8f544f = _0x4f204e['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TANGE' + 'NT0']), _0x18ff95 = _0x8f544f ? _0x8f544f['_offset'] / 0x4 : -0x1, _0x998267 = _0x4f204e['vertexStri' + 'de'] / 0x4, _0x1dcec8 = _0x261c1f['getFloat32' + 'Data']();
            _0x1de8d0 ? (_0x1de8d0['worldMatri' + 'x']['invert'](_0x2805c6['_tempMatri' + 'x4x40']), _0x414e74 = _0x2805c6['_tempMatri' + 'x4x41'], _0x334e9d['multiply'](_0x2805c6['_tempMatri' + 'x4x40'], _0x761958['worldMatri' + 'x'], _0x414e74)) : _0x414e74 = _0x761958['worldMatri' + 'x'];
            var _0x5ec789 = _0x2805c6['_tempMatri' + 'x4x42'];
            _0x414e74['invert'](_0x5ec789), _0x5ec789['transpose']();
            var _0x30ea75 = _0x2805c6['_tempQuate' + 'rnion0'];
            _0x414e74['decomposeT' + 'ransRotSca' + 'le'](_0x2805c6['_tempVecto' + 'r30'], _0x30ea75, _0x2805c6['_tempVecto' + 'r31']);
            for (var _0x28d7d8 = _0x5b924f['lightmapSc' + 'aleOffset'], _0x159a61 = _0xd99ec6['vertexCoun' + 't'], _0x1b4e23 = 0x0; _0x1b4e23 < _0x159a61; _0x1b4e23++) {
                var _0x4e2d0a, _0x58ac1b, _0x45cefb = _0x1b4e23 * _0x998267, _0x1cf1dc = 0x12 * (_0x1b4e23 + _0x385a4a);
                _0x101904['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x1dcec8, _0x45cefb + _0x5186cd, _0x414e74, _0x1e0f71, _0x1cf1dc + 0x0), -0x1 !== _0x145169 && _0x101904['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x1dcec8, _0x45cefb + _0x145169, _0x5ec789, _0x1e0f71, _0x1cf1dc + 0x3);
                var _0x212b28 = _0x1cf1dc + 0x6;
                if (-0x1 !== _0x58fadc) {
                    var _0x49d63d = _0x45cefb + _0x58fadc;
                    for (_0x4e2d0a = 0x0, _0x58ac1b = 0x4; _0x4e2d0a < _0x58ac1b; _0x4e2d0a++)
                        _0x1e0f71[_0x212b28 + _0x4e2d0a] = _0x1dcec8[_0x49d63d + _0x4e2d0a];
                } else {
                    for (_0x4e2d0a = 0x0, _0x58ac1b = 0x4; _0x4e2d0a < _0x58ac1b; _0x4e2d0a++)
                        _0x1e0f71[_0x212b28 + _0x4e2d0a] = 0x1;
                }
                if (-0x1 !== _0x3f1095) {
                    var _0x33dd15 = _0x45cefb + _0x3f1095;
                    _0x1e0f71[_0x1cf1dc + 0xa] = _0x1dcec8[_0x33dd15], _0x1e0f71[_0x1cf1dc + 0xb] = _0x1dcec8[_0x33dd15 + 0x1];
                }
                if (_0x28d7d8 && (-0x1 !== _0xd3b3f8 ? _0x101904['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x1dcec8, _0x45cefb + _0xd3b3f8, _0x28d7d8, _0x1e0f71, _0x1cf1dc + 0xc) : _0x101904['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x1dcec8, _0x45cefb + _0x3f1095, _0x28d7d8, _0x1e0f71, _0x1cf1dc + 0xc)), -0x1 !== _0x18ff95) {
                    var _0xc7cc6b = _0x45cefb + _0x18ff95;
                    _0x1e0f71[_0x1cf1dc + 0xe] = _0x1dcec8[_0xc7cc6b], _0x1e0f71[_0x1cf1dc + 0xf] = _0x1dcec8[_0xc7cc6b + 0x1], _0x1e0f71[_0x1cf1dc + 0x10] = _0x1dcec8[_0xc7cc6b + 0x2], _0x1e0f71[_0x1cf1dc + 0x11] = _0x1dcec8[_0xc7cc6b + 0x3];
                }
            }
            return _0x159a61;
        }
        ['addTest'](_0x5a5173) {
            var _0x37ccb8 = _0x5a5173['meshFilter']['sharedMesh']['vertexCoun' + 't'];
            return !(this['_currentBa' + 'tchVertexC' + 'ount'] + _0x37ccb8 > _0x2805c6['maxBatchVe' + 'rtexCount']);
        }
        ['add'](_0x58e9fe) {
            var _0x518e75 = _0x58e9fe['meshFilter']['sharedMesh'], _0x47c485 = _0x518e75['vertexCoun' + 't'];
            this['_batchElem' + 'ents']['push'](_0x58e9fe);
            var _0x481676 = _0x58e9fe['_render'];
            _0x481676['_isPartOfS' + 'taticBatch'] = !0x0, _0x481676['_staticBat' + 'ch'] = this;
            for (var _0x135977 = _0x481676['_renderEle' + 'ments'], _0x40dedb = 0x0, _0x548942 = _0x135977['length']; _0x40dedb < _0x548942; _0x40dedb++)
                _0x135977[_0x40dedb]['staticBatc' + 'h'] = this;
            this['_currentBa' + 'tchIndexCo' + 'unt'] += _0x518e75['_indexBuff' + 'er']['indexCount'], this['_currentBa' + 'tchVertexC' + 'ount'] += _0x47c485;
        }
        ['remove'](_0x439eb3) {
            var _0x3f0ce8 = _0x439eb3['meshFilter']['sharedMesh'], _0x3c0fda = this['_batchElem' + 'ents']['indexOf'](_0x439eb3);
            if (-0x1 !== _0x3c0fda) {
                this['_batchElem' + 'ents']['splice'](_0x3c0fda, 0x1);
                for (var _0x245f29 = _0x439eb3['_render']['_renderEle' + 'ments'], _0x25b6e6 = 0x0, _0x2ff1be = _0x245f29['length']; _0x25b6e6 < _0x2ff1be; _0x25b6e6++)
                    _0x245f29[_0x25b6e6]['staticBatc' + 'h'] = null;
                this['_currentBa' + 'tchIndexCo' + 'unt'] = this['_currentBa' + 'tchIndexCo' + 'unt'] - _0x3f0ce8['_indexBuff' + 'er']['indexCount'], this['_currentBa' + 'tchVertexC' + 'ount'] = this['_currentBa' + 'tchVertexC' + 'ount'] - _0x3f0ce8['vertexCoun' + 't'], _0x439eb3['_render']['_isPartOfS' + 'taticBatch'] = !0x1;
            }
        }
        ['finishInit']() {
            this['_vertexBuf' + 'fer'] && (this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), _0x2247ad['Resource']['_addGPUMem' + 'ory'](-(this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'])));
            var _0x5f4ab7 = _0x2247ad['LayaGL']['instance'], _0x5351aa = 0x0, _0xd06333 = 0x0, _0x31b5ef = this['batchOwner'], _0x2e0419 = this['_vertexDec' + 'laration']['vertexStri' + 'de'] / 0x4, _0x5329a2 = new Float32Array(_0x2e0419 * this['_currentBa' + 'tchVertexC' + 'ount']), _0x5b9c13 = new Uint16Array(this['_currentBa' + 'tchIndexCo' + 'unt']);
            this['_vertexBuf' + 'fer'] = new _0x26d078(this['_vertexDec' + 'laration']['vertexStri' + 'de'] * this['_currentBa' + 'tchVertexC' + 'ount'], _0x5f4ab7['STATIC_DRA' + 'W']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = this['_vertexDec' + 'laration'], this['_indexBuff' + 'er'] = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], this['_currentBa' + 'tchIndexCo' + 'unt'], _0x5f4ab7['STATIC_DRA' + 'W']);
            for (var _0x1f3a16 = 0x0, _0x346bdc = this['_batchElem' + 'ents']['length']; _0x1f3a16 < _0x346bdc; _0x1f3a16++) {
                for (var _0x3edd29, _0x3af97b = this['_batchElem' + 'ents'][_0x1f3a16], _0x28ecd7 = _0x3af97b['meshFilter']['sharedMesh'], _0x4a375c = this['_getStatic' + 'BatchBaked' + 'Vertexs'](_0x5329a2, _0x5351aa, _0x31b5ef ? _0x31b5ef['_transform'] : null, _0x3af97b['_transform'], _0x3af97b['_render'], _0x28ecd7), _0x3cc6b8 = _0x28ecd7['_indexBuff' + 'er']['getData'](), _0x112998 = _0x5351aa, _0x2b6fa4 = _0xd06333 + _0x3cc6b8['length'], _0x211c63 = _0x3af97b['_render']['_renderEle' + 'ments'], _0x2d26a0 = 0x0, _0x3dc949 = _0x28ecd7['subMeshCou' + 'nt']; _0x2d26a0 < _0x3dc949; _0x2d26a0++) {
                    var _0x5b6be3 = _0x28ecd7['_subMeshes'][_0x2d26a0], _0x3443a5 = _0xd06333 + _0x5b6be3['_indexStar' + 't'], _0x4c914a = _0x211c63[_0x2d26a0];
                    _0x4c914a['staticBatc' + 'hIndexStar' + 't'] = _0x3443a5, _0x4c914a['staticBatc' + 'hIndexEnd'] = _0x3443a5 + _0x5b6be3['_indexCoun' + 't'];
                }
                if (_0x5b9c13['set'](_0x3cc6b8, _0xd06333), _0x31b5ef ? _0x3af97b['_transform']['_isFrontFa' + 'ceInvert'] !== _0x31b5ef['transform']['_isFrontFa' + 'ceInvert'] : _0x3af97b['_transform']['_isFrontFa' + 'ceInvert'])
                    for (_0x3edd29 = _0xd06333; _0x3edd29 < _0x2b6fa4; _0x3edd29 += 0x3) {
                        _0x5b9c13[_0x3edd29] = _0x112998 + _0x5b9c13[_0x3edd29];
                        var _0x1f74c1 = _0x5b9c13[_0x3edd29 + 0x1], _0x3b9beb = _0x5b9c13[_0x3edd29 + 0x2];
                        _0x5b9c13[_0x3edd29 + 0x1] = _0x112998 + _0x3b9beb, _0x5b9c13[_0x3edd29 + 0x2] = _0x112998 + _0x1f74c1;
                    }
                else {
                    for (_0x3edd29 = _0xd06333; _0x3edd29 < _0x2b6fa4; _0x3edd29 += 0x3)
                        _0x5b9c13[_0x3edd29] = _0x112998 + _0x5b9c13[_0x3edd29], _0x5b9c13[_0x3edd29 + 0x1] = _0x112998 + _0x5b9c13[_0x3edd29 + 0x1], _0x5b9c13[_0x3edd29 + 0x2] = _0x112998 + _0x5b9c13[_0x3edd29 + 0x2];
                }
                _0xd06333 += _0x3cc6b8['length'], _0x5351aa += _0x4a375c;
            }
            this['_vertexBuf' + 'fer']['setData'](_0x5329a2['buffer']), this['_indexBuff' + 'er']['setData'](_0x5b9c13);
            var _0x5f0137 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x2247ad['Resource']['_addGPUMem' + 'ory'](_0x5f0137), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
        }
        ['_render'](_0x2cf48e) {
            this['_bufferSta' + 'te']['bind']();
            for (var _0xdbbe41 = _0x2247ad['LayaGL']['instance'], _0x1259dc = _0x2cf48e['renderElem' + 'ent']['staticBatc' + 'hElementLi' + 'st'], _0x3025fc = _0x1259dc['elements'], _0x45d6a3 = 0x0, _0x50da93 = 0x0, _0x5cf129 = _0x1259dc['length'], _0x1cd72c = 0x1; _0x1cd72c < _0x5cf129; _0x1cd72c++) {
                if (_0x3025fc[_0x1cd72c - 0x1]['staticBatc' + 'hIndexEnd'] !== _0x3025fc[_0x1cd72c]['staticBatc' + 'hIndexStar' + 't']) {
                    var _0x406915 = _0x3025fc[_0x45d6a3]['staticBatc' + 'hIndexStar' + 't'], _0x51eae1 = _0x3025fc[_0x50da93]['staticBatc' + 'hIndexEnd'] - _0x406915;
                    _0xdbbe41['drawElemen' + 'ts'](_0xdbbe41['TRIANGLES'], _0x51eae1, _0xdbbe41['UNSIGNED_S' + 'HORT'], 0x2 * _0x406915), _0x45d6a3 = ++_0x50da93, _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x51eae1 / 0x3;
                } else
                    _0x50da93++;
            }
            _0x406915 = _0x3025fc[_0x45d6a3]['staticBatc' + 'hIndexStar' + 't'], _0x51eae1 = _0x3025fc[_0x50da93]['staticBatc' + 'hIndexEnd'] - _0x406915, _0xdbbe41['drawElemen' + 'ts'](_0xdbbe41['TRIANGLES'], _0x51eae1, _0xdbbe41['UNSIGNED_S' + 'HORT'], 0x2 * _0x406915), _0x2247ad['Stat']['renderBatc' + 'hes']++, _0x2247ad['Stat']['savedRende' + 'rBatches'] += _0x5cf129 - 0x1, _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x51eae1 / 0x3;
        }
        ['dispose']() {
            var _0x582509 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x2247ad['Resource']['_addGPUMem' + 'ory'](-_0x582509), this['_batchElem' + 'ents'] = null, this['batchOwner'] = null, this['_vertexDec' + 'laration'] = null, this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_bufferSta' + 'te'] = null;
        }
    }
    _0x2805c6['_tempVecto' + 'r30'] = new _0x43b358(), _0x2805c6['_tempVecto' + 'r31'] = new _0x43b358(), _0x2805c6['_tempQuate' + 'rnion0'] = new _0x7cf2d3(), _0x2805c6['_tempMatri' + 'x4x40'] = new _0x334e9d(), _0x2805c6['_tempMatri' + 'x4x41'] = new _0x334e9d(), _0x2805c6['_tempMatri' + 'x4x42'] = new _0x334e9d(), _0x2805c6['maxBatchVe' + 'rtexCount'] = 0xffff, _0x2805c6['_batchIDCo' + 'unter'] = 0x0;
    class _0x55bbc5 extends _0x5bc8f8 {
        constructor() {
            super(), this['_opaqueBat' + 'chMarks'] = [], this['_updateCou' + 'ntMark'] = 0x0;
        }
        static ['__init__']() {
            _0x55bbc5['_verDec'] = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,COLO' + 'R,UV,UV1,T' + 'ANGENT');
        }
        ['_compare'](_0x4a2adc, _0x5520e2) {
            var _0x2b636e = _0x4a2adc['_render'], _0x889621 = _0x5520e2['_render'], _0x1e1b5d = _0x4a2adc['meshFilter']['sharedMesh'], _0x31f3fd = _0x5520e2['meshFilter']['sharedMesh'], _0xa52085 = _0x2b636e['lightmapIn' + 'dex'] - _0x889621['lightmapIn' + 'dex'];
            if (0x0 === _0xa52085) {
                var _0x455d8d = (_0x2b636e['receiveSha' + 'dow'] ? 0x1 : 0x0) - (_0x889621['receiveSha' + 'dow'] ? 0x1 : 0x0);
                if (0x0 === _0x455d8d) {
                    var _0x5aadd1 = _0x2b636e['sharedMate' + 'rial'] && _0x889621['sharedMate' + 'rial'] ? _0x2b636e['sharedMate' + 'rial']['id'] - _0x889621['sharedMate' + 'rial']['id'] : 0x0;
                    if (0x0 === _0x5aadd1) {
                        var _0x5ed3a5 = _0x1e1b5d['_vertexBuf' + 'fer']['vertexDecl' + 'aration']['id'] - _0x31f3fd['_vertexBuf' + 'fer']['vertexDecl' + 'aration']['id'];
                        return 0x0 === _0x5ed3a5 ? _0x31f3fd['_indexBuff' + 'er']['indexCount'] - _0x1e1b5d['_indexBuff' + 'er']['indexCount'] : _0x5ed3a5;
                    }
                    return _0x5aadd1;
                }
                return _0x455d8d;
            }
            return _0xa52085;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            var _0x5ce436 = this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex']++];
            return _0x5ce436 || (_0x5ce436 = new _0x19ed1f(), this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex'] - 0x1] = _0x5ce436, _0x5ce436['staticBatc' + 'hElementLi' + 'st'] = new _0x24ac1f()), _0x5ce436;
        }
        ['_getStatic' + 'Batch'](_0x5e4901, _0xa26c6a, _0x1bea7f) {
            var _0x429c53 = _0x5e4901[_0x1bea7f];
            return _0x429c53 || (_0x429c53 = _0x5e4901[_0x1bea7f] = new _0x2805c6(_0xa26c6a, _0x55bbc5['_verDec']), this['_staticBat' + 'ches'][_0x429c53['_batchID']] = _0x429c53), _0x429c53;
        }
        ['_initStati' + 'cBatchs'](_0x5b9665) {
            var _0x50d1b2 = this['_initBatch' + 'Sprites'];
            this['_quickSort'](_0x50d1b2, 0x0, _0x50d1b2['length'] - 0x1);
            for (var _0xd7ab1, _0x33b93a = [], _0x410892 = !0x1, _0x24c12d = 0x0, _0x305872 = 0x0, _0x3cda80 = _0x50d1b2['length']; _0x305872 < _0x3cda80; _0x305872++) {
                var _0x3e24d1 = _0x50d1b2[_0x305872];
                if (_0x410892)
                    _0xd7ab1['addTest'](_0x3e24d1) ? _0xd7ab1['add'](_0x3e24d1) : (_0x410892 = !0x1, _0x24c12d++);
                else
                    _0x305872 !== _0x3cda80 - 0x1 && ((_0xd7ab1 = this['_getStatic' + 'Batch'](_0x33b93a, _0x5b9665, _0x24c12d))['add'](_0x3e24d1), _0x410892 = !0x0);
            }
            for (_0x305872 = 0x0, _0x3cda80 = _0x33b93a['length']; _0x305872 < _0x3cda80; _0x305872++) {
                var _0x1a6be2 = _0x33b93a[_0x305872];
                _0x1a6be2 && _0x1a6be2['finishInit']();
            }
            this['_initBatch' + 'Sprites']['length'] = 0x0;
        }
        ['_removeRen' + 'derSprite'](_0x2adfee) {
            var _0x48f7ad = _0x2adfee['_render'], _0xab2680 = _0x48f7ad['_staticBat' + 'ch'], _0x42cc16 = _0xab2680['_batchElem' + 'ents'], _0x28f81b = _0x42cc16['indexOf'](_0x2adfee);
            if (-0x1 !== _0x28f81b) {
                _0x42cc16['splice'](_0x28f81b, 0x1), _0x48f7ad['_staticBat' + 'ch'] = null;
                for (var _0x4202c7 = _0x48f7ad['_renderEle' + 'ments'], _0x35bc65 = 0x0, _0x120fa5 = _0x4202c7['length']; _0x35bc65 < _0x120fa5; _0x35bc65++)
                    _0x4202c7[_0x35bc65]['staticBatc' + 'h'] = null;
            }
            0x0 === _0x42cc16['length'] && (delete this['_staticBat' + 'ches'][_0xab2680['_batchID']], _0xab2680['dispose']());
        }
        ['_clear']() {
            super['_clear'](), this['_updateCou' + 'ntMark']++;
        }
        ['_garbageCo' + 'llection']() {
            for (var _0x316c6f in this['_staticBat' + 'ches']) {
                var _0x311354 = this['_staticBat' + 'ches'][_0x316c6f];
                0x0 === _0x311354['_batchElem' + 'ents']['length'] && (_0x311354['dispose'](), delete this['_staticBat' + 'ches'][_0x316c6f]);
            }
        }
        ['getBatchOp' + 'aquaMark'](_0x2c5029, _0x2492fb, _0x1c70cd, _0x18b116) {
            var _0x39f065 = _0x2492fb ? 0x1 : 0x0, _0x51970c = this['_opaqueBat' + 'chMarks'][_0x2c5029] || (this['_opaqueBat' + 'chMarks'][_0x2c5029] = []), _0x2755c9 = _0x51970c[_0x39f065] || (_0x51970c[_0x39f065] = []), _0x33a8ad = _0x2755c9[_0x1c70cd] || (_0x2755c9[_0x1c70cd] = []);
            return _0x33a8ad[_0x18b116] || (_0x33a8ad[_0x18b116] = new _0x5e821c());
        }
    }
    _0x55bbc5['instance'] = new _0x55bbc5();
    class _0xc4e4b9 extends _0x2247ad['EventDispa' + 'tcher'] {
        constructor(_0x1dc3a6) {
            if (super(), this['_lightmapS' + 'caleOffset'] = new _0x4cec8f(0x1, 0x1, 0x0, 0x0), this['_indexInLi' + 'st'] = -0x1, this['_indexInCa' + 'stShadowLi' + 'st'] = -0x1, this['_boundsCha' + 'nge'] = !0x0, this['_castShado' + 'w'] = !0x1, this['_supportOc' + 'tree'] = !0x0, this['_sharedMat' + 'erials'] = [], this['_renderMar' + 'k'] = -0x1, this['_indexInOc' + 'treeMotion' + 'List'] = -0x1, this['_updateMar' + 'k'] = -0x1, this['_updateRen' + 'derType'] = -0x1, this['_isPartOfS' + 'taticBatch'] = !0x1, this['_staticBat' + 'ch'] = null, this['_id'] = ++_0xc4e4b9['_uniqueIDC' + 'ounter'], this['_indexInCa' + 'stShadowLi' + 'st'] = -0x1, this['_bounds'] = new _0x252754(_0x43b358['_ZERO'], _0x43b358['_ZERO']), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0xb1cbd = _0x5da8ae['_cullingBu' + 'fferLength'];
                this['_cullingBu' + 'fferIndex'] = _0xb1cbd;
                var _0x1c7d76 = _0x5da8ae['_cullingBu' + 'ffer'], _0x222df3 = _0xb1cbd + 0x7;
                if (_0x222df3 >= _0x1c7d76['length']) {
                    var _0x2e03a1 = _0x1c7d76;
                    (_0x1c7d76 = _0x5da8ae['_cullingBu' + 'ffer'] = new Float32Array(_0x1c7d76['length'] + 0x1000))['set'](_0x2e03a1, 0x0);
                }
                _0x1c7d76[_0xb1cbd] = 0x2, _0x5da8ae['_cullingBu' + 'fferLength'] = _0x222df3;
            }
            this['_renderEle' + 'ments'] = [], this['_owner'] = _0x1dc3a6, this['_enable'] = !0x0, this['_materials' + 'Instance'] = [], this['_shaderVal' + 'ues'] = new _0x5e515b(null), this['lightmapIn' + 'dex'] = -0x1, this['receiveSha' + 'dow'] = !0x1, this['sortingFud' + 'ge'] = 0x0, _0x1dc3a6 && this['_owner']['transform']['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['lightmapIn' + 'dex']() {
            return this['_lightmapI' + 'ndex'];
        }
        set ['lightmapIn' + 'dex'](_0x42015f) {
            this['_lightmapI' + 'ndex'] = _0x42015f;
        }
        get ['lightmapSc' + 'aleOffset']() {
            return this['_lightmapS' + 'caleOffset'];
        }
        set ['lightmapSc' + 'aleOffset'](_0x18274b) {
            if (!_0x18274b)
                throw 'BaseRender' + ':\x20lightmap' + 'ScaleOffse' + 't\x20can\x27t\x20be' + '\x20null.';
            this['_lightmapS' + 'caleOffset'] = _0x18274b, this['_shaderVal' + 'ues']['setVector'](_0x333e4a['LIGHTMAPSC' + 'ALEOFFSET'], _0x18274b);
        }
        get ['enable']() {
            return this['_enable'];
        }
        set ['enable'](_0x210f83) {
            this['_enable'] = !!_0x210f83;
        }
        get ['material']() {
            var _0x26423b = this['_sharedMat' + 'erials'][0x0];
            if (_0x26423b && !this['_materials' + 'Instance'][0x0]) {
                var _0x20f8fd = this['_getInstan' + 'ceMaterial'](_0x26423b, 0x0), _0x438c01 = this['_renderEle' + 'ments'][0x0];
                _0x438c01 && (_0x438c01['material'] = _0x20f8fd);
            }
            return this['_sharedMat' + 'erials'][0x0];
        }
        set ['material'](_0x3951fc) {
            this['sharedMate' + 'rial'] = _0x3951fc;
        }
        get ['materials']() {
            for (var _0x4579a2 = 0x0, _0x52e137 = this['_sharedMat' + 'erials']['length']; _0x4579a2 < _0x52e137; _0x4579a2++)
                if (!this['_materials' + 'Instance'][_0x4579a2]) {
                    var _0x2eb98a = this['_getInstan' + 'ceMaterial'](this['_sharedMat' + 'erials'][_0x4579a2], _0x4579a2), _0x2475a0 = this['_renderEle' + 'ments'][_0x4579a2];
                    _0x2475a0 && (_0x2475a0['material'] = _0x2eb98a);
                }
            return this['_sharedMat' + 'erials']['slice']();
        }
        set ['materials'](_0x1b8327) {
            this['sharedMate' + 'rials'] = _0x1b8327;
        }
        get ['sharedMate' + 'rial']() {
            return this['_sharedMat' + 'erials'][0x0];
        }
        set ['sharedMate' + 'rial'](_0x1f9d9c) {
            var _0xe8a10f = this['_sharedMat' + 'erials'][0x0];
            if (_0xe8a10f !== _0x1f9d9c) {
                this['_sharedMat' + 'erials'][0x0] = _0x1f9d9c, this['_materials' + 'Instance'][0x0] = !0x1, this['_changeMat' + 'erialRefer' + 'ence'](_0xe8a10f, _0x1f9d9c);
                var _0x1523ed = this['_renderEle' + 'ments'][0x0];
                _0x1523ed && (_0x1523ed['material'] = _0x1f9d9c);
            }
        }
        get ['sharedMate' + 'rials']() {
            return this['_sharedMat' + 'erials']['slice']();
        }
        set ['sharedMate' + 'rials'](_0x30a1f6) {
            for (var _0x460b17 = this['_materials' + 'Instance'], _0x6030ae = this['_sharedMat' + 'erials'], _0x3d5c89 = 0x0, _0x310b90 = _0x6030ae['length']; _0x3d5c89 < _0x310b90; _0x3d5c89++) {
                var _0xb1931c = _0x6030ae[_0x3d5c89];
                _0xb1931c && _0xb1931c['_removeRef' + 'erence']();
            }
            if (!_0x30a1f6)
                throw new Error('BaseRender' + ':\x20shadredM' + 'aterials\x20v' + 'alue\x20can\x27t' + '\x20be\x20null.');
            var _0x395a57 = _0x30a1f6['length'];
            for (_0x460b17['length'] = _0x395a57, _0x6030ae['length'] = _0x395a57, _0x3d5c89 = 0x0; _0x3d5c89 < _0x395a57; _0x3d5c89++) {
                _0xb1931c = _0x6030ae[_0x3d5c89];
                var _0x5d0b18 = _0x30a1f6[_0x3d5c89];
                if (_0xb1931c !== _0x5d0b18) {
                    _0x460b17[_0x3d5c89] = !0x1;
                    var _0x12db57 = this['_renderEle' + 'ments'][_0x3d5c89];
                    _0x12db57 && (_0x12db57['material'] = _0x5d0b18);
                }
                _0x5d0b18 && _0x5d0b18['_addRefere' + 'nce'](), _0x6030ae[_0x3d5c89] = _0x5d0b18;
            }
        }
        get ['bounds']() {
            return this['_boundsCha' + 'nge'] && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = !0x1), this['_bounds'];
        }
        set ['receiveSha' + 'dow'](_0xa1c9d7) {
            this['_receiveSh' + 'adow'] !== _0xa1c9d7 && (this['_receiveSh' + 'adow'] = _0xa1c9d7, _0xa1c9d7 ? this['_shaderVal' + 'ues']['addDefine'](_0x333e4a['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x333e4a['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW']));
        }
        get ['receiveSha' + 'dow']() {
            return this['_receiveSh' + 'adow'];
        }
        get ['castShadow']() {
            return this['_castShado' + 'w'];
        }
        set ['castShadow'](_0xa499d9) {
            this['_castShado' + 'w'] = _0xa499d9;
        }
        get ['isPartOfSt' + 'aticBatch']() {
            return this['_isPartOfS' + 'taticBatch'];
        }
        get ['isRender']() {
            return -0x1 == this['_renderMar' + 'k'] || this['_renderMar' + 'k'] == _0x2247ad['Stat']['loopCount'] - 0x1;
        }
        ['_getOctree' + 'Node']() {
            return this['_octreeNod' + 'e'];
        }
        ['_setOctree' + 'Node'](_0xcebef2) {
            this['_octreeNod' + 'e'] = _0xcebef2;
        }
        ['_getIndexI' + 'nMotionLis' + 't']() {
            return this['_indexInOc' + 'treeMotion' + 'List'];
        }
        ['_setIndexI' + 'nMotionLis' + 't'](_0x34ee75) {
            this['_indexInOc' + 'treeMotion' + 'List'] = _0x34ee75;
        }
        ['_changeMat' + 'erialRefer' + 'ence'](_0x4a4cf0, _0x48c65e) {
            _0x4a4cf0 && _0x4a4cf0['_removeRef' + 'erence'](), _0x48c65e['_addRefere' + 'nce']();
        }
        ['_getInstan' + 'ceMaterial'](_0x38674f, _0x3788be) {
            var _0x215c74 = _0x38674f['clone']();
            return _0x215c74['name'] = _0x215c74['name'] + '(Instance)', this['_materials' + 'Instance'][_0x3788be] = !0x0, this['_changeMat' + 'erialRefer' + 'ence'](this['_sharedMat' + 'erials'][_0x3788be], _0x215c74), this['_sharedMat' + 'erials'][_0x3788be] = _0x215c74, _0x215c74;
        }
        ['_applyLigh' + 'tMapParams']() {
            var _0x3dfeda = this['_scene']['lightmaps'], _0x1b0792 = this['_shaderVal' + 'ues'], _0x68b930 = this['_lightmapI' + 'ndex'];
            if (_0x68b930 >= 0x0 && _0x68b930 < _0x3dfeda['length']) {
                var _0x4e8caa = _0x3dfeda[_0x68b930];
                _0x1b0792['setTexture'](_0x333e4a['LIGHTMAP'], _0x4e8caa['lightmapCo' + 'lor']), _0x1b0792['addDefine'](_0x333e4a['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), _0x4e8caa['lightmapDi' + 'rection'] ? (_0x1b0792['setTexture'](_0x333e4a['LIGHTMAP_D' + 'IRECTION'], _0x4e8caa['lightmapDi' + 'rection']), _0x1b0792['addDefine'](_0x333e4a['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL'])) : _0x1b0792['removeDefi' + 'ne'](_0x333e4a['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL']);
            } else
                _0x1b0792['removeDefi' + 'ne'](_0x333e4a['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), _0x1b0792['removeDefi' + 'ne'](_0x333e4a['SHADERDEFI' + 'NE_LIGHTMA' + 'P_DIRECTIO' + 'NAL']);
        }
        ['_onWorldMa' + 'tNeedChang' + 'e'](_0x3a815b) {
            this['_boundsCha' + 'nge'] = !0x0, this['_octreeNod' + 'e'] && (_0x3a815b &= _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE']) && -0x1 === this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this);
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            throw 'BaseRender' + ':\x20must\x20ove' + 'rride\x20it.';
        }
        ['_getIndexI' + 'nList']() {
            return this['_indexInLi' + 'st'];
        }
        ['_setIndexI' + 'nList'](_0x4be2eb) {
            this['_indexInLi' + 'st'] = _0x4be2eb;
        }
        ['_setBelong' + 'Scene'](_0x5742df) {
            this['_scene'] = _0x5742df;
        }
        ['_needRende' + 'r'](_0x3d8ed2, _0x2674be) {
            return !0x0;
        }
        ['_renderUpd' + 'ate'](_0x2fe974, _0x2ce0a0) {
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x29a349, _0x2a73cb) {
        }
        ['_revertBat' + 'chRenderUp' + 'date'](_0x31f9b4) {
        }
        ['_destroy']() {
            -0x1 !== this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['removeMoti' + 'onObject'](this), this['offAll']();
            var _0x523418 = 0x0, _0x5b1eea = 0x0;
            for (_0x523418 = 0x0, _0x5b1eea = this['_renderEle' + 'ments']['length']; _0x523418 < _0x5b1eea; _0x523418++)
                this['_renderEle' + 'ments'][_0x523418]['destroy']();
            for (_0x523418 = 0x0, _0x5b1eea = this['_sharedMat' + 'erials']['length']; _0x523418 < _0x5b1eea; _0x523418++)
                this['_sharedMat' + 'erials'][_0x523418]['destroyed'] || this['_sharedMat' + 'erials'][_0x523418]['_removeRef' + 'erence']();
            this['_renderEle' + 'ments'] = null, this['_owner'] = null, this['_sharedMat' + 'erials'] = null, this['_bounds'] = null, this['_lightmapS' + 'caleOffset'] = null;
        }
        ['markAsUnSt' + 'atic']() {
            this['_isPartOfS' + 'taticBatch'] && (_0x55bbc5['instance']['_removeRen' + 'derSprite'](this['_owner']), this['_isPartOfS' + 'taticBatch'] = !0x1);
        }
    }
    _0xc4e4b9['_tempBound' + 'BoxCorners'] = [
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358(),
        new _0x43b358()
    ], _0xc4e4b9['_uniqueIDC' + 'ounter'] = 0x0, _0xc4e4b9['_defaultLi' + 'ghtmapScal' + 'eOffset'] = new _0x4cec8f(0x1, 0x1, 0x0, 0x0);
    class _0x5a528a extends _0xc4e4b9 {
        constructor(_0x14afff) {
            super(_0x14afff), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x334e9d();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x4b0f61 = this['_owner']['transform']['worldMatri' + 'x'], _0x274d95 = this['_owner']['_geometryF' + 'ilter'];
            if (_0x274d95['_reCalcula' + 'teBound'](), _0x274d95['_bounds']['_tranform'](_0x4b0f61, this['_bounds']), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x45f2f4 = this['_bounds']['getMin'](), _0x307565 = this['_bounds']['getMax'](), _0x28cb19 = _0x5da8ae['_cullingBu' + 'ffer'];
                _0x28cb19[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x45f2f4['x'], _0x28cb19[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x45f2f4['y'], _0x28cb19[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x45f2f4['z'], _0x28cb19[this['_cullingBu' + 'fferIndex'] + 0x4] = _0x307565['x'], _0x28cb19[this['_cullingBu' + 'fferIndex'] + 0x5] = _0x307565['y'], _0x28cb19[this['_cullingBu' + 'fferIndex'] + 0x6] = _0x307565['z'];
            }
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x5c6fc7, _0x4d42b9) {
            var _0xc8aca = _0x5c6fc7['projection' + 'ViewMatrix'], _0x3310e1 = this['_shaderVal' + 'ues'];
            if (_0x4d42b9) {
                var _0x154a81 = _0x4d42b9['worldMatri' + 'x'];
                _0x3310e1['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x154a81), _0x334e9d['multiply'](_0xc8aca, _0x154a81, this['_projectio' + 'nViewWorld' + 'Matrix']), _0x3310e1['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
            } else
                _0x3310e1['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x334e9d['DEFAULT']), _0x3310e1['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], _0xc8aca);
        }
    }
    class _0x1c8292 extends _0x333e4a {
        get ['maxLineCou' + 'nt']() {
            return this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'];
        }
        set ['maxLineCou' + 'nt'](_0x4f0b21) {
            this['_geometryF' + 'ilter']['_resizeLin' + 'eData'](_0x4f0b21), this['_geometryF' + 'ilter']['_lineCount'] = Math['min'](this['_geometryF' + 'ilter']['_lineCount'], _0x4f0b21);
        }
        get ['lineCount']() {
            return this['_geometryF' + 'ilter']['_lineCount'];
        }
        set ['lineCount'](_0x302098) {
            if (_0x302098 > this['maxLineCou' + 'nt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20c' + 'an\x27t\x20large' + '\x20than\x20maxL' + 'ineCount';
            this['_geometryF' + 'ilter']['_lineCount'] = _0x302098;
        }
        get ['pixelLineR' + 'enderer']() {
            return this['_render'];
        }
        constructor(_0x97329a = 0x2, _0x3a9fa3 = null) {
            super(_0x3a9fa3), this['_geometryF' + 'ilter'] = new _0x215610(this, _0x97329a), this['_render'] = new _0x5a528a(this), this['_changeRen' + 'derObjects'](this['_render'], 0x0, _0x5f3bb6['defaultMat' + 'erial']);
        }
        ['_changeRen' + 'derObjects'](_0x5b328f, _0x2175ad, _0x18e085) {
            var _0x10fa75 = this['_render']['_renderEle' + 'ments'];
            _0x18e085 || (_0x18e085 = _0x5f3bb6['defaultMat' + 'erial']);
            var _0x456689 = _0x10fa75[_0x2175ad];
            _0x456689 || (_0x456689 = _0x10fa75[_0x2175ad] = new _0x978ca7()), _0x456689['setTransfo' + 'rm'](this['_transform']), _0x456689['setGeometr' + 'y'](this['_geometryF' + 'ilter']), _0x456689['render'] = this['_render'], _0x456689['material'] = _0x18e085;
        }
        ['addLine'](_0x2caffb, _0x20e0d1, _0x2a083c, _0x14ade7) {
            if (this['_geometryF' + 'ilter']['_lineCount'] === this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20h' + 'as\x20equal\x20w' + 'ith\x20maxLin' + 'eCount.';
            this['_geometryF' + 'ilter']['_updateLin' + 'eData'](this['_geometryF' + 'ilter']['_lineCount']++, _0x2caffb, _0x20e0d1, _0x2a083c, _0x14ade7);
        }
        ['addLines'](_0x42fb37) {
            var _0xab1089 = this['_geometryF' + 'ilter']['_lineCount'], _0x80ccb6 = _0x42fb37['length'];
            if (_0xab1089 + _0x80ccb6 > this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20p' + 'lus\x20lines\x20' + 'count\x20must' + '\x20less\x20than' + '\x20maxLineCo' + 'unt.';
            this['_geometryF' + 'ilter']['_updateLin' + 'eDatas'](_0xab1089, _0x42fb37), this['_geometryF' + 'ilter']['_lineCount'] += _0x80ccb6;
        }
        ['removeLine'](_0x40d6be) {
            if (!(_0x40d6be < this['_geometryF' + 'ilter']['_lineCount']))
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_geometryF' + 'ilter']['_removeLin' + 'eData'](_0x40d6be);
        }
        ['setLine'](_0x33569e, _0x1810d2, _0x4e3503, _0x10a3be, _0x3f8e0b) {
            if (!(_0x33569e < this['_geometryF' + 'ilter']['_lineCount']))
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_geometryF' + 'ilter']['_updateLin' + 'eData'](_0x33569e, _0x1810d2, _0x4e3503, _0x10a3be, _0x3f8e0b);
        }
        ['getLine'](_0x4a2ca6, _0x2e67cb) {
            if (!(_0x4a2ca6 < this['lineCount']))
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_geometryF' + 'ilter']['_getLineDa' + 'ta'](_0x4a2ca6, _0x2e67cb);
        }
        ['clear']() {
            this['_geometryF' + 'ilter']['_lineCount'] = 0x0;
        }
        ['_create']() {
            return new _0x1c8292();
        }
    }
    class _0x5268b8 {
        constructor(_0x2164e5 = !0x1) {
            this['isTranspar' + 'ent'] = !0x1, this['elements'] = new _0x24ac1f(), this['lastTransp' + 'arentRende' + 'rElement'] = null, this['lastTransp' + 'arentBatch' + 'ed'] = !0x1, this['isTranspar' + 'ent'] = _0x2164e5;
        }
        ['_compare'](_0x1c6882, _0x4a86d7) {
            var _0xc94ca3 = _0x1c6882['material']['renderQueu' + 'e'] - _0x4a86d7['material']['renderQueu' + 'e'];
            return 0x0 === _0xc94ca3 ? (this['isTranspar' + 'ent'] ? _0x4a86d7['render']['_distanceF' + 'orSort'] - _0x1c6882['render']['_distanceF' + 'orSort'] : _0x1c6882['render']['_distanceF' + 'orSort'] - _0x4a86d7['render']['_distanceF' + 'orSort']) + _0x4a86d7['render']['sortingFud' + 'ge'] - _0x1c6882['render']['sortingFud' + 'ge'] : _0xc94ca3;
        }
        ['_partition' + 'RenderObje' + 'ct'](_0xd62860, _0x365eea) {
            for (var _0x57be9b = this['elements']['elements'], _0x1a00b2 = _0x57be9b[Math['floor']((_0x365eea + _0xd62860) / 0x2)]; _0xd62860 <= _0x365eea;) {
                for (; this['_compare'](_0x57be9b[_0xd62860], _0x1a00b2) < 0x0;)
                    _0xd62860++;
                for (; this['_compare'](_0x57be9b[_0x365eea], _0x1a00b2) > 0x0;)
                    _0x365eea--;
                if (_0xd62860 < _0x365eea) {
                    var _0x3e4a9f = _0x57be9b[_0xd62860];
                    _0x57be9b[_0xd62860] = _0x57be9b[_0x365eea], _0x57be9b[_0x365eea] = _0x3e4a9f, _0xd62860++, _0x365eea--;
                } else {
                    if (_0xd62860 === _0x365eea) {
                        _0xd62860++;
                        break;
                    }
                }
            }
            return _0xd62860;
        }
        ['_quickSort'](_0x205059, _0x4c6ab2) {
            if (this['elements']['length'] > 0x1) {
                var _0x8e8d35 = this['_partition' + 'RenderObje' + 'ct'](_0x205059, _0x4c6ab2), _0x39e967 = _0x8e8d35 - 0x1;
                _0x205059 < _0x39e967 && this['_quickSort'](_0x205059, _0x39e967), _0x8e8d35 < _0x4c6ab2 && this['_quickSort'](_0x8e8d35, _0x4c6ab2);
            }
        }
        ['_render'](_0x2fc2cc) {
            for (var _0x596148 = this['elements']['elements'], _0x1096e7 = 0x0, _0x32fd98 = this['elements']['length']; _0x1096e7 < _0x32fd98; _0x1096e7++)
                _0x596148[_0x1096e7]['_render'](_0x2fc2cc);
        }
        ['clear']() {
            this['elements']['length'] = 0x0, this['lastTransp' + 'arentRende' + 'rElement'] = null, this['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
        }
    }
    class _0x4ce0bb {
        constructor(_0x5ca6e2, _0x5020e9, _0x37001f, _0x1ef8cd) {
            this['_bounds'] = new _0x11e6d9(new _0x43b358(), new _0x43b358()), this['_objects'] = [], this['_isContaio' + 'n'] = !0x1, this['center'] = new _0x43b358(), this['baseLength'] = 0x0, this['_setValues'](_0x5ca6e2, _0x5020e9, _0x37001f, _0x1ef8cd);
        }
        static ['_encapsula' + 'tes'](_0x506533, _0x3b2c38) {
            return _0x3b260a['boxContain' + 'sBox'](_0x506533, _0x3b2c38) == _0x1d746f['Contains'];
        }
        ['_setValues'](_0x4fe27d, _0x1f0187, _0x4c5d1c, _0x563c38) {
            this['_octree'] = _0x4fe27d, this['_parent'] = _0x1f0187, this['baseLength'] = _0x4c5d1c, _0x563c38['cloneTo'](this['center']);
            var _0x27717d = this['_bounds']['min'], _0x27114c = this['_bounds']['max'], _0xd915df = _0x4fe27d['_looseness'] * _0x4c5d1c / 0x2;
            _0x27717d['setValue'](_0x563c38['x'] - _0xd915df, _0x563c38['y'] - _0xd915df, _0x563c38['z'] - _0xd915df), _0x27114c['setValue'](_0x563c38['x'] + _0xd915df, _0x563c38['y'] + _0xd915df, _0x563c38['z'] + _0xd915df);
        }
        ['_getChildB' + 'ound'](_0x361d92) {
            if (null != this['_children'] && this['_children'][_0x361d92])
                return this['_children'][_0x361d92]['_bounds'];
            var _0x5624fd = this['baseLength'] / 0x4, _0x2a19b2 = this['baseLength'] / 0x2 * this['_octree']['_looseness'] / 0x2, _0x519870 = _0x4ce0bb['_tempBound' + 'Box'], _0x4e2d6d = _0x519870['min'], _0x25ab9c = _0x519870['max'];
            switch (_0x361d92) {
            case 0x0:
                _0x4e2d6d['x'] = this['center']['x'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] - _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] - _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] + _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] - _0x5624fd + _0x2a19b2;
                break;
            case 0x1:
                _0x4e2d6d['x'] = this['center']['x'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] - _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] + _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] + _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] - _0x5624fd + _0x2a19b2;
                break;
            case 0x2:
                _0x4e2d6d['x'] = this['center']['x'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] + _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] - _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] + _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] + _0x5624fd + _0x2a19b2;
                break;
            case 0x3:
                _0x4e2d6d['x'] = this['center']['x'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] + _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] + _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] + _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] + _0x5624fd + _0x2a19b2;
                break;
            case 0x4:
                _0x4e2d6d['x'] = this['center']['x'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] - _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] - _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] - _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] - _0x5624fd + _0x2a19b2;
                break;
            case 0x5:
                _0x4e2d6d['x'] = this['center']['x'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] - _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] + _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] - _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] - _0x5624fd + _0x2a19b2;
                break;
            case 0x6:
                _0x4e2d6d['x'] = this['center']['x'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] + _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] - _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] - _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] + _0x5624fd + _0x2a19b2;
                break;
            case 0x7:
                _0x4e2d6d['x'] = this['center']['x'] + _0x5624fd - _0x2a19b2, _0x4e2d6d['y'] = this['center']['y'] - _0x5624fd - _0x2a19b2, _0x4e2d6d['z'] = this['center']['z'] + _0x5624fd - _0x2a19b2, _0x25ab9c['x'] = this['center']['x'] + _0x5624fd + _0x2a19b2, _0x25ab9c['y'] = this['center']['y'] - _0x5624fd + _0x2a19b2, _0x25ab9c['z'] = this['center']['z'] + _0x5624fd + _0x2a19b2;
            }
            return _0x519870;
        }
        ['_getChildC' + 'enter'](_0x225dcd) {
            if (null != this['_children'])
                return this['_children'][_0x225dcd]['center'];
            var _0x533621 = this['baseLength'] / 0x4, _0x44e434 = _0x4ce0bb['_tempVecto' + 'r30'];
            switch (_0x225dcd) {
            case 0x0:
                _0x44e434['x'] = this['center']['x'] - _0x533621, _0x44e434['y'] = this['center']['y'] + _0x533621, _0x44e434['z'] = this['center']['z'] - _0x533621;
                break;
            case 0x1:
                _0x44e434['x'] = this['center']['x'] + _0x533621, _0x44e434['y'] = this['center']['y'] + _0x533621, _0x44e434['z'] = this['center']['z'] - _0x533621;
                break;
            case 0x2:
                _0x44e434['x'] = this['center']['x'] - _0x533621, _0x44e434['y'] = this['center']['y'] + _0x533621, _0x44e434['z'] = this['center']['z'] + _0x533621;
                break;
            case 0x3:
                _0x44e434['x'] = this['center']['x'] + _0x533621, _0x44e434['y'] = this['center']['y'] + _0x533621, _0x44e434['z'] = this['center']['z'] + _0x533621;
                break;
            case 0x4:
                _0x44e434['x'] = this['center']['x'] - _0x533621, _0x44e434['y'] = this['center']['y'] - _0x533621, _0x44e434['z'] = this['center']['z'] - _0x533621;
                break;
            case 0x5:
                _0x44e434['x'] = this['center']['x'] + _0x533621, _0x44e434['y'] = this['center']['y'] - _0x533621, _0x44e434['z'] = this['center']['z'] - _0x533621;
                break;
            case 0x6:
                _0x44e434['x'] = this['center']['x'] - _0x533621, _0x44e434['y'] = this['center']['y'] - _0x533621, _0x44e434['z'] = this['center']['z'] + _0x533621;
                break;
            case 0x7:
                _0x44e434['x'] = this['center']['x'] + _0x533621, _0x44e434['y'] = this['center']['y'] - _0x533621, _0x44e434['z'] = this['center']['z'] + _0x533621;
            }
            return _0x44e434;
        }
        ['_getChild'](_0x21cfd9) {
            var _0x47010f = this['baseLength'] / 0x4;
            switch (this['_children'] || (this['_children'] = []), _0x21cfd9) {
            case 0x0:
                return this['_children'][0x0] || (this['_children'][0x0] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] + -_0x47010f, this['center']['y'] + _0x47010f, this['center']['z'] - _0x47010f)));
            case 0x1:
                return this['_children'][0x1] || (this['_children'][0x1] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] + _0x47010f, this['center']['y'] + _0x47010f, this['center']['z'] - _0x47010f)));
            case 0x2:
                return this['_children'][0x2] || (this['_children'][0x2] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] - _0x47010f, this['center']['y'] + _0x47010f, this['center']['z'] + _0x47010f)));
            case 0x3:
                return this['_children'][0x3] || (this['_children'][0x3] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] + _0x47010f, this['center']['y'] + _0x47010f, this['center']['z'] + _0x47010f)));
            case 0x4:
                return this['_children'][0x4] || (this['_children'][0x4] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] - _0x47010f, this['center']['y'] - _0x47010f, this['center']['z'] - _0x47010f)));
            case 0x5:
                return this['_children'][0x5] || (this['_children'][0x5] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] + _0x47010f, this['center']['y'] - _0x47010f, this['center']['z'] - _0x47010f)));
            case 0x6:
                return this['_children'][0x6] || (this['_children'][0x6] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] - _0x47010f, this['center']['y'] - _0x47010f, this['center']['z'] + _0x47010f)));
            case 0x7:
                return this['_children'][0x7] || (this['_children'][0x7] = new _0x4ce0bb(this['_octree'], this, this['baseLength'] / 0x2, new _0x43b358(this['center']['x'] + _0x47010f, this['center']['y'] - _0x47010f, this['center']['z'] + _0x47010f)));
            default:
                throw 'BoundsOctr' + 'eeNode:\x20un' + 'known\x20inde' + 'x.';
            }
        }
        ['_shouldMer' + 'ge']() {
            for (var _0x557c9b = this['_objects']['length'], _0x3595fc = 0x0; _0x3595fc < 0x8; _0x3595fc++) {
                var _0xe64bf9 = this['_children'][_0x3595fc];
                if (_0xe64bf9) {
                    if (null != _0xe64bf9['_children'])
                        return !0x1;
                    _0x557c9b += _0xe64bf9['_objects']['length'];
                }
            }
            return _0x557c9b <= _0x4ce0bb['_NUM_OBJEC' + 'TS_ALLOWED'];
        }
        ['_mergeChil' + 'dren']() {
            for (var _0x4000de = 0x0; _0x4000de < 0x8; _0x4000de++) {
                var _0xcb0a3e = this['_children'][_0x4000de];
                if (_0xcb0a3e) {
                    _0xcb0a3e['_parent'] = null;
                    for (var _0x1f6e50 = _0xcb0a3e['_objects'], _0x5dc99b = _0x1f6e50['length'] - 0x1; _0x5dc99b >= 0x0; _0x5dc99b--) {
                        var _0xfff9c0 = _0x1f6e50[_0x5dc99b];
                        this['_objects']['push'](_0xfff9c0), _0xfff9c0['_setOctree' + 'Node'](this);
                    }
                }
            }
            this['_children'] = null;
        }
        ['_merge']() {
            if (null === this['_children']) {
                var _0x3a1e7b = this['_parent'];
                _0x3a1e7b && _0x3a1e7b['_shouldMer' + 'ge']() && (_0x3a1e7b['_mergeChil' + 'dren'](), _0x3a1e7b['_merge']());
            }
        }
        ['_checkAddN' + 'ode'](_0x3b3b13) {
            if (null == this['_children']) {
                if (this['_objects']['length'] < _0x4ce0bb['_NUM_OBJEC' + 'TS_ALLOWED'] || this['baseLength'] / 0x2 < this['_octree']['_minSize'])
                    return this;
                for (var _0x23d2fe = this['_objects']['length'] - 0x1; _0x23d2fe >= 0x0; _0x23d2fe--) {
                    var _0xf45e71 = this['_objects'][_0x23d2fe], _0xae9b = this['_bestFitCh' + 'ild'](_0xf45e71['bounds']['getCenter']());
                    _0x4ce0bb['_encapsula' + 'tes'](this['_getChildB' + 'ound'](_0xae9b), _0xf45e71['bounds']['_getBoundB' + 'ox']()) && (this['_objects']['splice'](this['_objects']['indexOf'](_0xf45e71), 0x1), this['_getChild'](_0xae9b)['_add'](_0xf45e71));
                }
            }
            var _0xbdd1b9 = this['_bestFitCh' + 'ild'](_0x3b3b13['bounds']['getCenter']());
            return _0x4ce0bb['_encapsula' + 'tes'](this['_getChildB' + 'ound'](_0xbdd1b9), _0x3b3b13['bounds']['_getBoundB' + 'ox']()) ? this['_getChild'](_0xbdd1b9)['_checkAddN' + 'ode'](_0x3b3b13) : this;
        }
        ['_add'](_0x53ddab) {
            var _0x2512ad = this['_checkAddN' + 'ode'](_0x53ddab);
            _0x2512ad['_objects']['push'](_0x53ddab), _0x53ddab['_setOctree' + 'Node'](_0x2512ad);
        }
        ['_remove'](_0x441c1e) {
            var _0x27f692 = this['_objects']['indexOf'](_0x441c1e);
            this['_objects']['splice'](_0x27f692, 0x1), _0x441c1e['_setOctree' + 'Node'](null), this['_merge']();
        }
        ['_addUp'](_0x57d481) {
            return _0x3b260a['boxContain' + 'sBox'](this['_bounds'], _0x57d481['bounds']['_getBoundB' + 'ox']()) === _0x1d746f['Contains'] ? (this['_add'](_0x57d481), !0x0) : !!this['_parent'] && this['_parent']['_addUp'](_0x57d481);
        }
        ['_getCollid' + 'ingWithFru' + 'stum'](_0x4119ac, _0x5e79fb, _0x4d22c1, _0x178a45, _0x2ac8ff, _0x311cf6) {
            var _0x119c83 = _0x4119ac['boundFrust' + 'um'], _0x135372 = _0x4119ac['position'], _0x3bbf85 = _0x4119ac['cullingMas' + 'k'];
            if (_0x4d22c1) {
                var _0x57e2dd = _0x119c83['containsBo' + 'undBox'](this['_bounds']);
                if (_0x2247ad['Stat']['octreeNode' + 'Culling']++, _0x57e2dd === _0x1d746f['Disjoint'])
                    return;
                _0x4d22c1 = _0x57e2dd === _0x1d746f['Intersects'];
            }
            this['_isContaio' + 'n'] = !_0x4d22c1;
            for (var _0x301a40 = _0x5e79fb['scene'], _0x4c4ada = _0x2247ad['Stat']['loopCount'], _0x1922d9 = 0x0, _0x1a9ae3 = this['_objects']['length']; _0x1922d9 < _0x1a9ae3; _0x1922d9++) {
                var _0x4d35f0 = this['_objects'][_0x1922d9];
                if (_0x311cf6 ? _0x4d35f0['_castShado' + 'w'] && _0x4d35f0['_enable'] : 0x0 != (Math['pow'](0x2, _0x4d35f0['_owner']['_layer']) & _0x3bbf85) && _0x4d35f0['_enable']) {
                    if (_0x4d22c1 && (_0x2247ad['Stat']['frustumCul' + 'ling']++, !_0x4d35f0['_needRende' + 'r'](_0x119c83, _0x5e79fb)))
                        continue;
                    _0x4d35f0['_renderMar' + 'k'] = _0x4c4ada, _0x4d35f0['_distanceF' + 'orSort'] = _0x43b358['distance'](_0x4d35f0['bounds']['getCenter'](), _0x135372);
                    for (var _0x431d5b = _0x4d35f0['_renderEle' + 'ments'], _0x1e7e2a = 0x0, _0x2ea4eb = _0x431d5b['length']; _0x1e7e2a < _0x2ea4eb; _0x1e7e2a++) {
                        _0x431d5b[_0x1e7e2a]['_update'](_0x301a40, _0x5e79fb, _0x178a45, _0x2ac8ff);
                    }
                }
            }
            if (null != this['_children'])
                for (_0x1922d9 = 0x0; _0x1922d9 < 0x8; _0x1922d9++) {
                    var _0x719836 = this['_children'][_0x1922d9];
                    _0x719836 && _0x719836['_getCollid' + 'ingWithFru' + 'stum'](_0x4119ac, _0x5e79fb, _0x4d22c1, _0x178a45, _0x2ac8ff, _0x311cf6);
                }
        }
        ['_getCollid' + 'ingWithBou' + 'ndBox'](_0x21512, _0x1cd12e, _0x1d6d21) {
            if (_0x1cd12e) {
                var _0x4a09b3 = _0x3b260a['boxContain' + 'sBox'](this['_bounds'], _0x21512);
                if (_0x4a09b3 === _0x1d746f['Disjoint'])
                    return;
                _0x1cd12e = _0x4a09b3 === _0x1d746f['Intersects'];
            }
            if (_0x1cd12e)
                for (var _0x1908cb = 0x0, _0x21995f = this['_objects']['length']; _0x1908cb < _0x21995f; _0x1908cb++) {
                    var _0x2d69e3 = this['_objects'][_0x1908cb];
                    _0x3b260a['intersects' + 'BoxAndBox'](_0x2d69e3['bounds']['_getBoundB' + 'ox'](), _0x21512) && _0x1d6d21['push'](_0x2d69e3);
                }
            if (null != this['_children'])
                for (_0x1908cb = 0x0; _0x1908cb < 0x8; _0x1908cb++) {
                    this['_children'][_0x1908cb]['_getCollid' + 'ingWithBou' + 'ndBox'](_0x21512, _0x1cd12e, _0x1d6d21);
                }
        }
        ['_bestFitCh' + 'ild'](_0x700d08) {
            return (_0x700d08['x'] <= this['center']['x'] ? 0x0 : 0x1) + (_0x700d08['y'] >= this['center']['y'] ? 0x0 : 0x4) + (_0x700d08['z'] <= this['center']['z'] ? 0x0 : 0x2);
        }
        ['_update'](_0x51e881) {
            if (_0x3b260a['boxContain' + 'sBox'](this['_bounds'], _0x51e881['bounds']['_getBoundB' + 'ox']()) === _0x1d746f['Contains']) {
                var _0x5e2d1b = this['_checkAddN' + 'ode'](_0x51e881);
                if (_0x5e2d1b !== _0x51e881['_getOctree' + 'Node']()) {
                    _0x5e2d1b['_objects']['push'](_0x51e881), _0x51e881['_setOctree' + 'Node'](_0x5e2d1b);
                    var _0x5c7dc9 = this['_objects']['indexOf'](_0x51e881);
                    this['_objects']['splice'](_0x5c7dc9, 0x1), this['_merge']();
                }
                return !0x0;
            }
            if (this['_parent']) {
                var _0x502eda = this['_parent']['_addUp'](_0x51e881);
                return _0x502eda && (_0x5c7dc9 = this['_objects']['indexOf'](_0x51e881), this['_objects']['splice'](_0x5c7dc9, 0x1), this['_merge']()), _0x502eda;
            }
            return !0x1;
        }
        ['add'](_0x346fdd) {
            return !!_0x4ce0bb['_encapsula' + 'tes'](this['_bounds'], _0x346fdd['bounds']['_getBoundB' + 'ox']()) && (this['_add'](_0x346fdd), !0x0);
        }
        ['remove'](_0x21fc30) {
            return _0x21fc30['_getOctree' + 'Node']() === this && (this['_remove'](_0x21fc30), !0x0);
        }
        ['update'](_0x5ad08f) {
            return _0x5ad08f['_getOctree' + 'Node']() === this && this['_update'](_0x5ad08f);
        }
        ['shrinkIfPo' + 'ssible'](_0x4e6507) {
            if (this['baseLength'] < 0x2 * _0x4e6507)
                return this;
            for (var _0x644c92 = -0x1, _0x2a21f9 = 0x0, _0x479622 = this['_objects']['length']; _0x2a21f9 < _0x479622; _0x2a21f9++) {
                var _0x1b0470 = this['_objects'][_0x2a21f9], _0x4aea65 = this['_bestFitCh' + 'ild'](_0x1b0470['bounds']['getCenter']());
                if (0x0 != _0x2a21f9 && _0x4aea65 != _0x644c92)
                    return this;
                var _0x215722 = this['_getChildB' + 'ound'](_0x4aea65);
                if (!_0x4ce0bb['_encapsula' + 'tes'](_0x215722, _0x1b0470['bounds']['_getBoundB' + 'ox']()))
                    return this;
                0x0 == _0x2a21f9 && (_0x644c92 = _0x4aea65);
            }
            if (null == this['_children']) {
                if (-0x1 != _0x644c92) {
                    var _0x471f42 = this['_getChildC' + 'enter'](_0x644c92);
                    this['_setValues'](this['_octree'], null, this['baseLength'] / 0x2, _0x471f42);
                }
                return this;
            }
            var _0x1b64bd = !0x1;
            for (_0x2a21f9 = 0x0, _0x479622 = this['_children']['length']; _0x2a21f9 < _0x479622; _0x2a21f9++) {
                var _0x35e8c5 = this['_children'][_0x2a21f9];
                if (_0x35e8c5 && _0x35e8c5['hasAnyObje' + 'cts']()) {
                    if (_0x1b64bd)
                        return this;
                    if (_0x644c92 >= 0x0 && _0x644c92 != _0x2a21f9)
                        return this;
                    _0x1b64bd = !0x0, _0x644c92 = _0x2a21f9;
                }
            }
            if (-0x1 != _0x644c92) {
                var _0x40ab6e = this['_children'][_0x644c92];
                return _0x40ab6e['_parent'] = null, _0x40ab6e;
            }
            return this;
        }
        ['hasAnyObje' + 'cts']() {
            if (this['_objects']['length'] > 0x0)
                return !0x0;
            if (null != this['_children'])
                for (var _0x26c787 = 0x0; _0x26c787 < 0x8; _0x26c787++) {
                    var _0x2cffc5 = this['_children'][_0x26c787];
                    if (_0x2cffc5 && _0x2cffc5['hasAnyObje' + 'cts']())
                        return !0x0;
                }
            return !0x1;
        }
        ['getCollidi' + 'ngWithBoun' + 'dBox'](_0x210aed, _0x327a47) {
            this['_getCollid' + 'ingWithBou' + 'ndBox'](_0x210aed, !0x0, _0x327a47);
        }
        ['getCollidi' + 'ngWithRay'](_0xf0dafd, _0xf863ec, _0x28997c = Number['MAX_VALUE']) {
            var _0xfff7cb = _0x3b260a['intersects' + 'RayAndBoxR' + 'D'](_0xf0dafd, this['_bounds']);
            if (!(-0x1 == _0xfff7cb || _0xfff7cb > _0x28997c)) {
                for (var _0x2f4920 = 0x0, _0x5ddbdf = this['_objects']['length']; _0x2f4920 < _0x5ddbdf; _0x2f4920++) {
                    var _0x3fdb01 = this['_objects'][_0x2f4920];
                    -0x1 !== (_0xfff7cb = _0x3b260a['intersects' + 'RayAndBoxR' + 'D'](_0xf0dafd, _0x3fdb01['bounds']['_getBoundB' + 'ox']())) && _0xfff7cb <= _0x28997c && _0xf863ec['push'](_0x3fdb01);
                }
                if (null != this['_children'])
                    for (_0x2f4920 = 0x0; _0x2f4920 < 0x8; _0x2f4920++) {
                        this['_children'][_0x2f4920]['getCollidi' + 'ngWithRay'](_0xf0dafd, _0xf863ec, _0x28997c);
                    }
            }
        }
        ['getCollidi' + 'ngWithFrus' + 'tum'](_0x359bd4, _0x48a13a, _0x1c3dc0, _0x2e7680, _0x49481c) {
            this['_getCollid' + 'ingWithFru' + 'stum'](_0x359bd4, _0x48a13a, !0x0, _0x1c3dc0, _0x2e7680, _0x49481c);
        }
        ['isCollidin' + 'gWithBound' + 'Box'](_0x29f257) {
            if (!_0x3b260a['intersects' + 'BoxAndBox'](this['_bounds'], _0x29f257))
                return !0x1;
            for (var _0x3a5eda = 0x0, _0x16719c = this['_objects']['length']; _0x3a5eda < _0x16719c; _0x3a5eda++) {
                var _0x295426 = this['_objects'][_0x3a5eda];
                if (_0x3b260a['intersects' + 'BoxAndBox'](_0x295426['bounds']['_getBoundB' + 'ox'](), _0x29f257))
                    return !0x0;
            }
            if (null != this['_children'])
                for (_0x3a5eda = 0x0; _0x3a5eda < 0x8; _0x3a5eda++) {
                    if (this['_children'][_0x3a5eda]['isCollidin' + 'gWithBound' + 'Box'](_0x29f257))
                        return !0x0;
                }
            return !0x1;
        }
        ['isCollidin' + 'gWithRay'](_0x1e17c6, _0x3f2057 = Number['MAX_VALUE']) {
            var _0x276bb0 = _0x3b260a['intersects' + 'RayAndBoxR' + 'D'](_0x1e17c6, this['_bounds']);
            if (-0x1 == _0x276bb0 || _0x276bb0 > _0x3f2057)
                return !0x1;
            for (var _0x201572 = 0x0, _0x24b642 = this['_objects']['length']; _0x201572 < _0x24b642; _0x201572++) {
                var _0x560d80 = this['_objects'][_0x201572];
                if (-0x1 !== (_0x276bb0 = _0x3b260a['intersects' + 'RayAndBoxR' + 'D'](_0x1e17c6, _0x560d80['bounds']['_getBoundB' + 'ox']())) && _0x276bb0 <= _0x3f2057)
                    return !0x0;
            }
            if (null != this['_children'])
                for (_0x201572 = 0x0; _0x201572 < 0x8; _0x201572++) {
                    if (this['_children'][_0x201572]['isCollidin' + 'gWithRay'](_0x1e17c6, _0x3f2057))
                        return !0x0;
                }
            return !0x1;
        }
        ['getBound']() {
            return this['_bounds'];
        }
        ['drawAllBou' + 'nds'](_0x37c93d, _0x5e83db, _0x19bc15) {
            if (null !== this['_children'] || 0x0 != this['_objects']['length']) {
                _0x5e83db++;
                var _0x4c4131 = _0x4ce0bb['_tempColor' + '0'];
                if (this['_isContaio' + 'n'])
                    _0x4c4131['r'] = 0x0, _0x4c4131['g'] = 0x0, _0x4c4131['b'] = 0x1;
                else {
                    var _0x308016 = _0x19bc15 ? _0x5e83db / _0x19bc15 : 0x0;
                    _0x4c4131['r'] = 0x1 - _0x308016, _0x4c4131['g'] = _0x308016, _0x4c4131['b'] = 0x0;
                }
                if (_0x4c4131['a'] = 0.3, _0x101904['_drawBound'](_0x37c93d, this['_bounds'], _0x4c4131), null != this['_children'])
                    for (var _0x124225 = 0x0; _0x124225 < 0x8; _0x124225++) {
                        var _0x213c1d = this['_children'][_0x124225];
                        _0x213c1d && _0x213c1d['drawAllBou' + 'nds'](_0x37c93d, _0x5e83db, _0x19bc15);
                    }
            }
        }
        ['drawAllObj' + 'ects'](_0x3c0b24, _0x35010d, _0x50abad) {
            _0x35010d++;
            var _0x6c90fc = _0x4ce0bb['_tempColor' + '0'];
            if (this['_isContaio' + 'n'])
                _0x6c90fc['r'] = 0x0, _0x6c90fc['g'] = 0x0, _0x6c90fc['b'] = 0x1;
            else {
                var _0x49aa65 = _0x50abad ? _0x35010d / _0x50abad : 0x0;
                _0x6c90fc['r'] = 0x1 - _0x49aa65, _0x6c90fc['g'] = _0x49aa65, _0x6c90fc['b'] = 0x0;
            }
            _0x6c90fc['a'] = 0x1;
            for (var _0x486bb5 = 0x0, _0x511d54 = this['_objects']['length']; _0x486bb5 < _0x511d54; _0x486bb5++)
                _0x101904['_drawBound'](_0x3c0b24, this['_objects'][_0x486bb5]['bounds']['_getBoundB' + 'ox'](), _0x6c90fc);
            if (null != this['_children'])
                for (_0x486bb5 = 0x0; _0x486bb5 < 0x8; _0x486bb5++) {
                    var _0x4a58f1 = this['_children'][_0x486bb5];
                    _0x4a58f1 && _0x4a58f1['drawAllObj' + 'ects'](_0x3c0b24, _0x35010d, _0x50abad);
                }
        }
    }
    _0x4ce0bb['_tempVecto' + 'r3'] = new _0x43b358(), _0x4ce0bb['_tempVecto' + 'r30'] = new _0x43b358(), _0x4ce0bb['_tempVecto' + 'r31'] = new _0x43b358(), _0x4ce0bb['_tempColor' + '0'] = new _0x151df0(), _0x4ce0bb['_tempBound' + 'Box'] = new _0x11e6d9(new _0x43b358(), new _0x43b358()), _0x4ce0bb['_NUM_OBJEC' + 'TS_ALLOWED'] = 0x8;
    class _0x108199 extends _0x24ac1f {
        constructor() {
            super();
        }
        ['add'](_0x1b1cec) {
            if (-0x1 !== _0x1b1cec['_getIndexI' + 'nMotionLis' + 't']())
                throw 'OctreeMoti' + 'onList:ele' + 'ment\x20has\x20\x20' + 'in\x20\x20Physic' + 'sUpdateLis' + 't.';
            this['_add'](_0x1b1cec), _0x1b1cec['_setIndexI' + 'nMotionLis' + 't'](this['length']++);
        }
        ['remove'](_0x31c750) {
            var _0x388b98 = _0x31c750['_getIndexI' + 'nMotionLis' + 't']();
            if (this['length']--, _0x388b98 !== this['length']) {
                var _0x30363f = this['elements'][this['length']];
                this['elements'][_0x388b98] = _0x30363f, _0x30363f['_setIndexI' + 'nMotionLis' + 't'](_0x388b98);
            }
            _0x31c750['_setIndexI' + 'nMotionLis' + 't'](-0x1);
        }
    }
    class _0x15314d {
        constructor(_0x3b1356, _0x12944c, _0x2e8dcb, _0x1b55da) {
            this['_motionObj' + 'ects'] = new _0x108199(), this['count'] = 0x0, _0x2e8dcb > _0x3b1356 && (console['warn']('Minimum\x20no' + 'de\x20size\x20mu' + 'st\x20be\x20at\x20l' + 'east\x20as\x20bi' + 'g\x20as\x20the\x20i' + 'nitial\x20wor' + 'ld\x20size.\x20W' + 'as:\x20' + _0x2e8dcb + ('\x20Adjusted\x20' + 'to:\x20') + _0x3b1356), _0x2e8dcb = _0x3b1356), this['_initialSi' + 'ze'] = _0x3b1356, this['_minSize'] = _0x2e8dcb, this['_looseness'] = Math['min'](Math['max'](_0x1b55da, 0x1), 0x2), this['_rootNode'] = new _0x4ce0bb(this, null, _0x3b1356, _0x12944c);
        }
        ['_getMaxDep' + 'th'](_0x53a09d, _0x387caf) {
            _0x387caf++;
            var _0x4a0582 = _0x53a09d['_children'];
            if (null != _0x4a0582)
                for (var _0x56b0dc = _0x387caf, _0x49c638 = 0x0, _0x1f4145 = _0x4a0582['length']; _0x49c638 < _0x1f4145; _0x49c638++) {
                    var _0x47c443 = _0x4a0582[_0x49c638];
                    _0x47c443 && (_0x387caf = Math['max'](this['_getMaxDep' + 'th'](_0x47c443, _0x56b0dc), _0x387caf));
                }
            return _0x387caf;
        }
        ['_grow'](_0x21e6a6) {
            var _0x40cfcd = _0x21e6a6['x'] >= 0x0 ? 0x1 : -0x1, _0x2ea0fd = _0x21e6a6['y'] >= 0x0 ? 0x1 : -0x1, _0x5f14f5 = _0x21e6a6['z'] >= 0x0 ? 0x1 : -0x1, _0x51c71a = this['_rootNode'], _0x1ce7cf = this['_rootNode']['baseLength'] / 0x2, _0x34c580 = 0x2 * this['_rootNode']['baseLength'], _0xbaa1bf = this['_rootNode']['center'], _0x34e65d = new _0x43b358(_0xbaa1bf['x'] + _0x40cfcd * _0x1ce7cf, _0xbaa1bf['y'] + _0x2ea0fd * _0x1ce7cf, _0xbaa1bf['z'] + _0x5f14f5 * _0x1ce7cf);
            if (this['_rootNode'] = new _0x4ce0bb(this, null, _0x34c580, _0x34e65d), _0x51c71a['hasAnyObje' + 'cts']()) {
                for (var _0xfce189 = this['_rootNode']['_bestFitCh' + 'ild'](_0x51c71a['center']), _0x15d619 = [], _0x5646ed = 0x0; _0x5646ed < 0x8; _0x5646ed++)
                    _0x5646ed == _0xfce189 && (_0x51c71a['_parent'] = this['_rootNode'], _0x15d619[_0x5646ed] = _0x51c71a);
                this['_rootNode']['_children'] = _0x15d619;
            }
        }
        ['add'](_0x3428ba) {
            for (var _0x1d08aa = 0x0; !this['_rootNode']['add'](_0x3428ba);) {
                var _0x459f4b = _0x15314d['_tempVecto' + 'r30'];
                if (_0x43b358['subtract'](_0x3428ba['bounds']['getCenter'](), this['_rootNode']['center'], _0x459f4b), this['_grow'](_0x459f4b), ++_0x1d08aa > 0x14)
                    throw 'Aborted\x20Ad' + 'd\x20operatio' + 'n\x20as\x20it\x20se' + 'emed\x20to\x20be' + '\x20going\x20on\x20' + 'forever\x20(' + (_0x1d08aa - 0x1) + (')\x20attempts' + '\x20at\x20growin' + 'g\x20the\x20octr' + 'ee.');
            }
            this['count']++;
        }
        ['remove'](_0x29a8a2) {
            var _0x87b377 = _0x29a8a2['_getOctree' + 'Node']()['remove'](_0x29a8a2);
            return _0x87b377 && this['count']--, _0x87b377;
        }
        ['update'](_0x66cc2) {
            var _0x50f3c4 = 0x0, _0x1ca93c = _0x66cc2['_getOctree' + 'Node']();
            if (_0x1ca93c) {
                for (; !_0x1ca93c['_update'](_0x66cc2);) {
                    var _0x51e3a6 = _0x15314d['_tempVecto' + 'r30'];
                    if (_0x43b358['subtract'](_0x66cc2['bounds']['getCenter'](), this['_rootNode']['center'], _0x51e3a6), this['_grow'](_0x51e3a6), ++_0x50f3c4 > 0x14)
                        throw 'Aborted\x20Ad' + 'd\x20operatio' + 'n\x20as\x20it\x20se' + 'emed\x20to\x20be' + '\x20going\x20on\x20' + 'forever\x20(' + (_0x50f3c4 - 0x1) + (')\x20attempts' + '\x20at\x20growin' + 'g\x20the\x20octr' + 'ee.');
                }
                return !0x0;
            }
            return !0x1;
        }
        ['shrinkRoot' + 'IfPossible']() {
            this['_rootNode'] = this['_rootNode']['shrinkIfPo' + 'ssible'](this['_initialSi' + 'ze']);
        }
        ['addMotionO' + 'bject'](_0x603d8d) {
            this['_motionObj' + 'ects']['add'](_0x603d8d);
        }
        ['removeMoti' + 'onObject'](_0x45ae25) {
            this['_motionObj' + 'ects']['remove'](_0x45ae25);
        }
        ['updateMoti' + 'onObjects']() {
            for (var _0x4889e4 = this['_motionObj' + 'ects']['elements'], _0x134060 = 0x0, _0x30ca2b = this['_motionObj' + 'ects']['length']; _0x134060 < _0x30ca2b; _0x134060++) {
                var _0x52610d = _0x4889e4[_0x134060];
                this['update'](_0x52610d), _0x52610d['_setIndexI' + 'nMotionLis' + 't'](-0x1);
            }
            this['_motionObj' + 'ects']['length'] = 0x0;
        }
        ['isCollidin' + 'gWithBound' + 'Box'](_0x31aa40) {
            return this['_rootNode']['isCollidin' + 'gWithBound' + 'Box'](_0x31aa40);
        }
        ['isCollidin' + 'gWithRay'](_0x226d34, _0x120b47 = Number['MAX_VALUE']) {
            return this['_rootNode']['isCollidin' + 'gWithRay'](_0x226d34, _0x120b47);
        }
        ['getCollidi' + 'ngWithBoun' + 'dBox'](_0x3c9d5b, _0x229748) {
            this['_rootNode']['getCollidi' + 'ngWithBoun' + 'dBox'](_0x3c9d5b, _0x229748);
        }
        ['getCollidi' + 'ngWithRay'](_0x15aadd, _0x106922, _0x41f74e = Number['MAX_VALUE']) {
            this['_rootNode']['getCollidi' + 'ngWithRay'](_0x15aadd, _0x106922, _0x41f74e);
        }
        ['getCollidi' + 'ngWithFrus' + 'tum'](_0x47d769, _0x57bd72, _0x1054dc, _0x9601ee, _0x5d4d7e) {
            this['_rootNode']['getCollidi' + 'ngWithFrus' + 'tum'](_0x47d769, _0x57bd72, _0x1054dc, _0x9601ee, _0x5d4d7e);
        }
        ['getMaxBoun' + 'ds']() {
            return this['_rootNode']['getBound']();
        }
        ['drawAllBou' + 'nds'](_0x237f30) {
            var _0x2412c7 = this['_getMaxDep' + 'th'](this['_rootNode'], -0x1);
            this['_rootNode']['drawAllBou' + 'nds'](_0x237f30, -0x1, _0x2412c7);
        }
        ['drawAllObj' + 'ects'](_0x1df564) {
            var _0x5c7515 = this['_getMaxDep' + 'th'](this['_rootNode'], -0x1);
            this['_rootNode']['drawAllObj' + 'ects'](_0x1df564, -0x1, _0x5c7515);
        }
    }
    _0x15314d['_tempVecto' + 'r30'] = new _0x43b358();
    class _0x5822c7 {
    }
    class _0x260d96 {
        constructor(_0x3b9eab, _0x170c27) {
            this['center'] = _0x3b9eab, this['radius'] = _0x170c27;
        }
        ['toDefault']() {
            this['center']['toDefault'](), this['radius'] = 0x0;
        }
        static ['createFrom' + 'SubPoints'](_0x49d842, _0x36d89f, _0x436606, _0x2055c5) {
            if (null == _0x49d842)
                throw new Error('points');
            if (_0x36d89f < 0x0 || _0x36d89f >= _0x49d842['length'])
                throw new Error('start' + _0x36d89f + ('Must\x20be\x20in' + '\x20the\x20range' + '\x20[0,\x20') + (_0x49d842['length'] - 0x1) + ']');
            if (_0x436606 < 0x0 || _0x36d89f + _0x436606 > _0x49d842['length'])
                throw new Error('count' + _0x436606 + ('Must\x20be\x20in' + '\x20the\x20range' + '\x20<=\x20') + _0x49d842['length'] + '}');
            var _0x25ec03 = _0x36d89f + _0x436606, _0x3b25bf = _0x260d96['_tempVecto' + 'r3'];
            _0x3b25bf['x'] = 0x0, _0x3b25bf['y'] = 0x0, _0x3b25bf['z'] = 0x0;
            for (var _0x50090f = _0x36d89f; _0x50090f < _0x25ec03; ++_0x50090f)
                _0x43b358['add'](_0x49d842[_0x50090f], _0x3b25bf, _0x3b25bf);
            var _0x3d5a3f = _0x2055c5['center'];
            _0x43b358['scale'](_0x3b25bf, 0x1 / _0x436606, _0x3d5a3f);
            var _0x27fc75 = 0x0;
            for (_0x50090f = _0x36d89f; _0x50090f < _0x25ec03; ++_0x50090f) {
                var _0x3e9f32 = _0x43b358['distanceSq' + 'uared'](_0x3d5a3f, _0x49d842[_0x50090f]);
                _0x3e9f32 > _0x27fc75 && (_0x27fc75 = _0x3e9f32);
            }
            _0x2055c5['radius'] = Math['sqrt'](_0x27fc75);
        }
        static ['createfrom' + 'Points'](_0x42d7ad, _0x4c6c2f) {
            if (null == _0x42d7ad)
                throw new Error('points');
            _0x260d96['createFrom' + 'SubPoints'](_0x42d7ad, 0x0, _0x42d7ad['length'], _0x4c6c2f);
        }
        ['intersects' + 'RayDistanc' + 'e'](_0x38c5ab) {
            return _0x3b260a['intersects' + 'RayAndSphe' + 'reRD'](_0x38c5ab, this);
        }
        ['intersects' + 'RayPoint'](_0x1459f3, _0x57b389) {
            return _0x3b260a['intersects' + 'RayAndSphe' + 'reRP'](_0x1459f3, this, _0x57b389);
        }
        ['cloneTo'](_0x54e058) {
            var _0x19f70f = _0x54e058;
            this['center']['cloneTo'](_0x19f70f['center']), _0x19f70f['radius'] = this['radius'];
        }
        ['clone']() {
            var _0x29931f = new _0x260d96(new _0x43b358(), 0x0);
            return this['cloneTo'](_0x29931f), _0x29931f;
        }
    }
    _0x260d96['_tempVecto' + 'r3'] = new _0x43b358();
    class _0x3a2f09 {
        constructor() {
            this['cameraShad' + 'erValue'] = new _0x5e515b(), this['position'] = new _0x43b358(), this['viewMatrix'] = new _0x334e9d(), this['projection' + 'Matrix'] = new _0x334e9d(), this['viewProjec' + 'tMatrix'] = new _0x334e9d(), this['cullPlanes'] = [
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358()),
                new _0x458084(new _0x43b358())
            ], this['splitBound' + 'Sphere'] = new _0x260d96(new _0x43b358(), 0x0);
        }
    }
    class _0x5244b9 {
        constructor() {
            this['_shadowBia' + 's'] = new _0x4cec8f(), this['_shadowPar' + 'ams'] = new _0x4cec8f(), this['_shadowMap' + 'Size'] = new _0x4cec8f(), this['_shadowMat' + 'rices'] = new Float32Array(0x10 * _0x5244b9['_maxCascad' + 'es']), this['_splitBoun' + 'dSpheres'] = new Float32Array(0x4 * _0x5244b9['_maxCascad' + 'es']), this['_cascadeCo' + 'unt'] = 0x0, this['_shadowMap' + 'Width'] = 0x0, this['_shadowMap' + 'Height'] = 0x0, this['_shadowSli' + 'ceDatas'] = [
                new _0x3a2f09(),
                new _0x3a2f09(),
                new _0x3a2f09(),
                new _0x3a2f09()
            ], this['_lightUp'] = new _0x43b358(), this['_lightSide'] = new _0x43b358(), this['_lightForw' + 'ard'] = new _0x43b358();
        }
        ['_setupShad' + 'owCasterSh' + 'aderValues'](_0x1bdbd3, _0x12e66a, _0x49c2b0, _0x46668c, _0x1537e0) {
            _0x12e66a['setVector'](_0x5244b9['SHADOW_BIA' + 'S'], _0x1537e0), _0x12e66a['setVector3'](_0x5244b9['SHADOW_LIG' + 'HT_DIRECTI' + 'ON'], _0x46668c);
            var _0x466e66 = _0x49c2b0['cameraShad' + 'erValue'];
            _0x466e66['setMatrix4' + 'x4'](_0x36f166['VIEWMATRIX'], _0x49c2b0['viewMatrix']), _0x466e66['setMatrix4' + 'x4'](_0x36f166['PROJECTMAT' + 'RIX'], _0x49c2b0['projection' + 'Matrix']), _0x466e66['setMatrix4' + 'x4'](_0x36f166['VIEWPROJEC' + 'TMATRIX'], _0x49c2b0['viewProjec' + 'tMatrix']), _0x1bdbd3['viewMatrix'] = _0x49c2b0['viewMatrix'], _0x1bdbd3['projection' + 'ViewMatrix'] = _0x49c2b0['projection' + 'Matrix'], _0x1bdbd3['projection' + 'ViewMatrix'] = _0x49c2b0['viewProjec' + 'tMatrix'];
        }
        ['_setupShad' + 'owReceiver' + 'ShaderValu' + 'es'](_0x400044) {
            var _0x204885 = this['_light'];
            switch (_0x204885['shadowCasc' + 'adesMode'] !== _0xc55b22['ShadowCasc' + 'adesMode']['NoCascades'] ? _0x400044['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'CASCADE']) : _0x400044['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'CASCADE']), _0x204885['shadowMode']) {
            case _0xc55b22['ShadowMode']['Hard']:
                _0x400044['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW']), _0x400044['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH']);
                break;
            case _0xc55b22['ShadowMode']['SoftLow']:
                _0x400044['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW']), _0x400044['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH']);
                break;
            case _0xc55b22['ShadowMode']['SoftHigh']:
                _0x400044['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH']), _0x400044['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW']);
            }
            _0x400044['setTexture'](_0x5244b9['SHADOW_MAP'], this['_shadowMap']), _0x400044['setBuffer'](_0x5244b9['SHADOW_MAT' + 'RICES'], this['_shadowMat' + 'rices']), _0x400044['setVector'](_0x5244b9['SHADOW_MAP' + '_SIZE'], this['_shadowMap' + 'Size']), _0x400044['setVector'](_0x5244b9['SHADOW_PAR' + 'AMS'], this['_shadowPar' + 'ams']), _0x400044['setBuffer'](_0x5244b9['SHADOW_SPL' + 'IT_SPHERES'], this['_splitBoun' + 'dSpheres']);
        }
        ['update'](_0x3a6125, _0x336404) {
            this['_light'] = _0x336404;
            var _0x304bb5 = _0x5244b9['_tempMatri' + 'x0'], _0x307d22 = _0x304bb5['elements'], _0xfc98b2 = this['_lightUp'], _0x5db389 = this['_lightSide'], _0xefc5a3 = this['_lightForw' + 'ard'];
            _0x334e9d['createFrom' + 'Quaternion'](_0x336404['_transform']['rotation'], _0x304bb5), _0x5db389['setValue'](_0x307d22[0x0], _0x307d22[0x1], _0x307d22[0x2]), _0xfc98b2['setValue'](_0x307d22[0x4], _0x307d22[0x5], _0x307d22[0x6]), _0xefc5a3['setValue'](-_0x307d22[0x8], -_0x307d22[0x9], -_0x307d22[0xa]);
            var _0x5e7114, _0x4579fe, _0x25dace, _0x1bcce8, _0x337258 = _0x336404['_shadowRes' + 'olution'], _0x305adc = _0x336404['_shadowCas' + 'cadesMode'];
            _0x305adc == _0xc55b22['ShadowCasc' + 'adesMode']['NoCascades'] ? (_0x5e7114 = 0x1, _0x4579fe = _0x337258, _0x25dace = _0x337258, _0x1bcce8 = _0x337258) : (_0x5e7114 = _0x305adc == _0xc55b22['ShadowCasc' + 'adesMode']['TwoCascade' + 's'] ? 0x2 : 0x4, _0x25dace = 0x2 * (_0x4579fe = _0x365e32['getMaxTile' + 'Resolution' + 'InAtlas'](_0x337258, _0x337258, _0x5e7114)), _0x1bcce8 = _0x305adc == _0xc55b22['ShadowCasc' + 'adesMode']['TwoCascade' + 's'] ? _0x4579fe : 0x2 * _0x4579fe), this['_cascadeCo' + 'unt'] = _0x5e7114, this['_shadowMap' + 'Width'] = _0x25dace, this['_shadowMap' + 'Height'] = _0x1bcce8;
            var _0x3bdcc7 = _0x5244b9['_cascadesS' + 'plitDistan' + 'ce'], _0x2e6990 = _0x5244b9['_frustumPl' + 'anes'], _0x3ccc4b = _0x3a6125['nearPlane'], _0x2bf571 = Math['min'](_0x3a6125['farPlane'], _0x336404['_shadowDis' + 'tance']), _0x2559f8 = this['_shadowMat' + 'rices'], _0x42bcf2 = this['_splitBoun' + 'dSpheres'];
            _0x365e32['getCascade' + 'sSplitDist' + 'ance'](_0x336404['_shadowTwo' + 'CascadeSpl' + 'its'], _0x336404['_shadowFou' + 'rCascadeSp' + 'lits'], _0x3ccc4b, _0x2bf571, _0x3a6125['fieldOfVie' + 'w'] * _0x40af95['Deg2Rad'], _0x3a6125['aspectRati' + 'o'], _0x305adc, _0x3bdcc7), _0x365e32['getCameraF' + 'rustumPlan' + 'es'](_0x3a6125['projection' + 'ViewMatrix'], _0x2e6990);
            var _0x2245fa = _0x5244b9['_tempVecto' + 'r30'];
            _0x3a6125['_transform']['getForward'](_0x2245fa), _0x43b358['normalize'](_0x2245fa, _0x2245fa);
            for (var _0xe18848 = 0x0; _0xe18848 < _0x5e7114; _0xe18848++) {
                var _0x16b45d = this['_shadowSli' + 'ceDatas'][_0xe18848];
                _0x16b45d['sphereCent' + 'erZ'] = _0x365e32['getBoundSp' + 'hereByFrus' + 'tum'](_0x3bdcc7[_0xe18848], _0x3bdcc7[_0xe18848 + 0x1], _0x3a6125['fieldOfVie' + 'w'] * _0x40af95['Deg2Rad'], _0x3a6125['aspectRati' + 'o'], _0x3a6125['_transform']['position'], _0x2245fa, _0x16b45d['splitBound' + 'Sphere']), _0x365e32['getDirecti' + 'onLightSha' + 'dowCullPla' + 'nes'](_0x2e6990, _0xe18848, _0x3bdcc7, _0x3ccc4b, _0xefc5a3, _0x16b45d), _0x365e32['getDirecti' + 'onalLightM' + 'atrices'](_0xfc98b2, _0x5db389, _0xefc5a3, _0xe18848, _0x336404['_shadowNea' + 'rPlane'], _0x4579fe, _0x16b45d, _0x2559f8), _0x5e7114 > 0x1 && _0x365e32['applySlice' + 'Transform'](_0x16b45d, _0x25dace, _0x1bcce8, _0xe18848, _0x2559f8);
            }
            _0x365e32['prepareSha' + 'dowReceive' + 'rShaderVal' + 'ues'](_0x336404, _0x25dace, _0x1bcce8, this['_shadowSli' + 'ceDatas'], _0x5e7114, this['_shadowMap' + 'Size'], this['_shadowPar' + 'ams'], _0x2559f8, _0x42bcf2);
        }
        ['render'](_0x34b476, _0x4b48f0) {
            var _0x390353 = _0x4b48f0['_shaderVal' + 'ues'];
            _0x34b476['pipelineMo' + 'de'] = 'ShadowCast' + 'er', _0x5e515b['setRuntime' + 'ValueMode'](!0x1);
            var _0x117d24 = this['_shadowMap'] = _0x365e32['getTempora' + 'ryShadowTe' + 'xture'](this['_shadowMap' + 'Width'], this['_shadowMap' + 'Height'], _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']);
            _0x117d24['_start']();
            for (var _0x28edd6 = this['_light'], _0x3d6309 = 0x0, _0x3474a9 = this['_cascadeCo' + 'unt']; _0x3d6309 < _0x3474a9; _0x3d6309++) {
                var _0x22e603 = this['_shadowSli' + 'ceDatas'][_0x3d6309];
                _0x365e32['getShadowB' + 'ias'](_0x28edd6, _0x22e603['projection' + 'Matrix'], _0x22e603['resolution'], this['_shadowBia' + 's']), this['_setupShad' + 'owCasterSh' + 'aderValues'](_0x34b476, _0x390353, _0x22e603, this['_lightForw' + 'ard'], this['_shadowBia' + 's']);
                var _0x257c5b = _0x5da8ae['_shadowCul' + 'lInfo'];
                _0x257c5b['position'] = _0x22e603['position'], _0x257c5b['cullPlanes'] = _0x22e603['cullPlanes'], _0x257c5b['cullPlaneC' + 'ount'] = _0x22e603['cullPlaneC' + 'ount'], _0x257c5b['cullSphere'] = _0x22e603['splitBound' + 'Sphere'], _0x257c5b['direction'] = this['_lightForw' + 'ard'];
                var _0x3c5cca = _0x5da8ae['cullingSha' + 'dow'](_0x257c5b, _0x4b48f0, _0x34b476);
                _0x34b476['cameraShad' + 'erValue'] = _0x22e603['cameraShad' + 'erValue'], _0x14e627['_updateMar' + 'k']++;
                var _0x2c85f3 = _0x2247ad['LayaGL']['instance'], _0x4113e9 = _0x22e603['resolution'], _0x5bf003 = _0x22e603['offsetX'], _0xdfedfd = _0x22e603['offsetY'];
                _0x2c85f3['enable'](_0x2c85f3['SCISSOR_TE' + 'ST']), _0x2c85f3['viewport'](_0x5bf003, _0xdfedfd, _0x4113e9, _0x4113e9), _0x2c85f3['scissor'](_0x5bf003, _0xdfedfd, _0x4113e9, _0x4113e9), _0x2c85f3['clear'](_0x2c85f3['DEPTH_BUFF' + 'ER_BIT']), _0x3c5cca && (_0x2c85f3['scissor'](_0x5bf003 + 0x1, _0xdfedfd + 0x1, _0x4113e9 - 0x2, _0x4113e9 - 0x2), _0x4b48f0['_opaqueQue' + 'ue']['_render'](_0x34b476));
            }
            _0x117d24['_end'](), this['_setupShad' + 'owReceiver' + 'ShaderValu' + 'es'](_0x390353), _0x5e515b['setRuntime' + 'ValueMode'](!0x0), _0x34b476['pipelineMo' + 'de'] = 'Forward';
        }
        ['cleanUp']() {
            _0x13c6e8['recoverToP' + 'ool'](this['_shadowMap']), this['_shadowMap'] = null, this['_light'] = null;
        }
    }
    _0x5244b9['_tempVecto' + 'r30'] = new _0x43b358(), _0x5244b9['_tempMatri' + 'x0'] = new _0x334e9d(), _0x5244b9['SHADOW_BIA' + 'S'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowBi' + 'as'), _0x5244b9['SHADOW_LIG' + 'HT_DIRECTI' + 'ON'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowLi' + 'ghtDirecti' + 'on'), _0x5244b9['SHADOW_SPL' + 'IT_SPHERES'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowSp' + 'litSpheres'), _0x5244b9['SHADOW_MAT' + 'RICES'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowMa' + 'trices'), _0x5244b9['SHADOW_MAP' + '_SIZE'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowMa' + 'pSize'), _0x5244b9['SHADOW_MAP'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowMa' + 'p'), _0x5244b9['SHADOW_PAR' + 'AMS'] = _0x38ffce['propertyNa' + 'meToID']('u_ShadowPa' + 'rams'), _0x5244b9['_maxCascad' + 'es'] = 0x4, _0x5244b9['_cascadesS' + 'plitDistan' + 'ce'] = new Array(_0x5244b9['_maxCascad' + 'es'] + 0x1), _0x5244b9['_frustumPl' + 'anes'] = new Array(new _0x458084(new _0x43b358()), new _0x458084(new _0x43b358()), new _0x458084(new _0x43b358()), new _0x458084(new _0x43b358()), new _0x458084(new _0x43b358()), new _0x458084(new _0x43b358())), (_0x474716 = _0xc55b22['AmbientMod' + 'e'] || (_0xc55b22['AmbientMod' + 'e'] = {}))[_0x474716['SolidColor'] = 0x0] = 'SolidColor', _0x474716[_0x474716['SphericalH' + 'armonics'] = 0x1] = 'SphericalH' + 'armonics';
    class _0x441dfb extends _0x2247ad['Sprite'] {
        constructor() {
            super(), this['_lightCoun' + 't'] = 0x0, this['_pointLigh' + 'ts'] = new _0x5f15d6(), this['_spotLight' + 's'] = new _0x5f15d6(), this['_direction' + 'Lights'] = new _0x361eb7(), this['_alternate' + 'Lights'] = new _0x457bd2(), this['_lightmaps'] = [], this['_skyRender' + 'er'] = new _0x2fc668(), this['_input'] = new _0x51dbb0(), this['_timer'] = _0x2247ad['ILaya']['timer'], this['_time'] = 0x0, this['_shCoeffic' + 'ients'] = new Array(0x7), this['_ambientMo' + 'de'] = _0xc55b22['AmbientMod' + 'e']['SolidColor'], this['_ambientSp' + 'hericalHar' + 'monics'] = new _0x2bea9c(), this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'] = 0x1, this['_reflectio' + 'nDecodeFor' + 'mat'] = _0x2247ad['TextureDec' + 'odeFormat']['Normal'], this['_reflectio' + 'nIntensity'] = 0x1, this['_collsionT' + 'estList'] = [], this['_renders'] = new _0x5b31a2(), this['_opaqueQue' + 'ue'] = new _0x5268b8(!0x1), this['_transpare' + 'ntQueue'] = new _0x5268b8(!0x0), this['_cameraPoo' + 'l'] = [], this['_animatorP' + 'ool'] = new _0x5b31a2(), this['_scriptPoo' + 'l'] = new Array(), this['_tempScrip' + 'tPool'] = new Array(), this['_needClear' + 'ScriptPool'] = !0x1, this['_reflectio' + 'nCubeHDRPa' + 'rams'] = new _0x4cec8f(), this['currentCre' + 'ationLayer'] = Math['pow'](0x2, 0x0), this['enableLigh' + 't'] = !0x0, this['_key'] = new _0x2247ad['SubmitKey'](), this['_pickIdToS' + 'prite'] = new Object(), this['_reflectio' + 'nMode'] = 0x0, _0x57b18d['_enablePhy' + 'sics'] && (this['_physicsSi' + 'mulation'] = new _0x25e128(_0x441dfb['physicsSet' + 'tings'])), this['_shaderVal' + 'ues'] = new _0x5e515b(null), this['enableFog'] = !0x1, this['fogStart'] = 0x12c, this['fogRange'] = 0x3e8, this['fogColor'] = new _0x43b358(0.7, 0.7, 0.7), this['ambientCol' + 'or'] = new _0x43b358(0.212, 0.227, 0.259), this['reflection' + 'Intensity'] = 0x1, this['reflection'] = _0x307e95['blackTextu' + 're'];
            for (var _0x522604 = 0x0; _0x522604 < 0x7; _0x522604++)
                this['_shCoeffic' + 'ients'][_0x522604] = new _0x4cec8f();
            if (this['_shaderVal' + 'ues']['setVector'](_0x441dfb['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'], this['_reflectio' + 'nCubeHDRPa' + 'rams']), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (this['_cullingBu' + 'fferIndice' + 's'] = new Int32Array(0x400), this['_cullingBu' + 'fferResult'] = new Int32Array(0x400)), this['_scene'] = this, this['_input']['__init__'](_0x2247ad['Render']['canvas'], this), _0x441dfb['octreeCull' + 'ing'] && (this['_octree'] = new _0x15314d(_0x441dfb['octreeInit' + 'ialSize'], _0x441dfb['octreeInit' + 'ialCenter'], _0x441dfb['octreeMinN' + 'odeSize'], _0x441dfb['octreeLoos' + 'eness'])), _0x5da8ae['debugFrust' + 'umCulling']) {
                this['_debugTool'] = new _0x1c8292();
                var _0x2e87c3 = new _0x5f3bb6();
                _0x2e87c3['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], _0x2e87c3['alphaTest'] = !0x1, _0x2e87c3['depthWrite'] = !0x1, _0x2e87c3['cull'] = _0x4ba527['CULL_BACK'], _0x2e87c3['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], _0x2e87c3['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], _0x2e87c3['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], _0x2e87c3['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_debugTool']['pixelLineR' + 'enderer']['sharedMate' + 'rial'] = _0x2e87c3;
            }
        }
        static ['__init__']() {
            var _0x1dd977 = _0xb0652e['_config'];
            if (_0x1dd977['_multiLigh' + 'ting']) {
                const _0x4ca925 = 0x4;
                var _0x32d930 = _0x1dd977['maxLightCo' + 'unt'], _0x407a6b = _0x1dd977['lightClust' + 'erCount'];
                _0x3df7f3['instance'] = new _0x3df7f3(_0x407a6b['x'], _0x407a6b['y'], _0x407a6b['z'], Math['min'](_0x1dd977['maxLightCo' + 'unt'], _0x1dd977['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'])), _0x441dfb['_lightText' + 'ure'] = _0x101904['_createFlo' + 'atTextureB' + 'uffer'](_0x4ca925, _0x32d930), _0x441dfb['_lightText' + 'ure']['lock'] = !0x0, _0x441dfb['_lightPixl' + 'es'] = new Float32Array(_0x32d930 * _0x4ca925 * 0x4);
            }
            _0xeb2444['SHADERDEFI' + 'NE_FOG'] = _0x38ffce['getDefineB' + 'yName']('FOG'), _0xeb2444['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'] = _0x38ffce['getDefineB' + 'yName']('DIRECTIONL' + 'IGHT'), _0xeb2444['SHADERDEFI' + 'NE_POINTLI' + 'GHT'] = _0x38ffce['getDefineB' + 'yName']('POINTLIGHT'), _0xeb2444['SHADERDEFI' + 'NE_SPOTLIG' + 'HT'] = _0x38ffce['getDefineB' + 'yName']('SPOTLIGHT'), _0xeb2444['SHADERDEFI' + 'NE_SHADOW'] = _0x38ffce['getDefineB' + 'yName']('SHADOW'), _0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'CASCADE'] = _0x38ffce['getDefineB' + 'yName']('SHADOW_CAS' + 'CADE'), _0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_LOW'] = _0x38ffce['getDefineB' + 'yName']('SHADOW_SOF' + 'T_SHADOW_L' + 'OW'), _0xeb2444['SHADERDEFI' + 'NE_SHADOW_' + 'SOFT_SHADO' + 'W_HIGH'] = _0x38ffce['getDefineB' + 'yName']('SHADOW_SOF' + 'T_SHADOW_H' + 'IGH'), _0xeb2444['SHADERDEFI' + 'NE_GI_AMBI' + 'ENT_SH'] = _0x38ffce['getDefineB' + 'yName']('GI_AMBIENT' + '_SH');
            var _0x4a3228 = _0xb0652e['_config'], _0x4c34bc = _0x441dfb['_configDef' + 'ineValues'];
            switch (_0x4a3228['_multiLigh' + 'ting'] || _0x4c34bc['add'](_0x38ffce['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING']), _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] ? _0x4c34bc['add'](_0x38ffce['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '3']) : _0x4c34bc['add'](_0x38ffce['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '2']), _0x4a3228['pbrRenderQ' + 'uality']) {
            case _0xc55b22['PBRRenderQ' + 'uality']['High']:
                _0x4c34bc['add'](_0x3028f9['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_HIG' + 'H']);
                break;
            case _0xc55b22['PBRRenderQ' + 'uality']['Low']:
                _0x4c34bc['add'](_0x3028f9['SHADERDEFI' + 'NE_LAYA_PB' + 'R_BRDF_LOW']);
                break;
            default:
                throw 'Scene3D:un' + 'known\x20shad' + 'er\x20quality' + '.';
            }
        }
        static ['load'](_0x4e352a, _0x30d259) {
            _0x2247ad['ILaya']['loader']['create'](_0x4e352a, _0x30d259, null, _0x441dfb['HIERARCHY']);
        }
        get ['url']() {
            return this['_url'];
        }
        get ['enableFog']() {
            return this['_enableFog'];
        }
        set ['enableFog'](_0x1fcc06) {
            this['_enableFog'] !== _0x1fcc06 && (this['_enableFog'] = _0x1fcc06, _0x1fcc06 ? this['_shaderVal' + 'ues']['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_FOG']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_FOG']));
        }
        get ['fogColor']() {
            return this['_shaderVal' + 'ues']['getVector3'](_0x441dfb['FOGCOLOR']);
        }
        set ['fogColor'](_0x2c8d74) {
            this['_shaderVal' + 'ues']['setVector3'](_0x441dfb['FOGCOLOR'], _0x2c8d74);
        }
        get ['fogStart']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x441dfb['FOGSTART']);
        }
        set ['fogStart'](_0x24a3f0) {
            this['_shaderVal' + 'ues']['setNumber'](_0x441dfb['FOGSTART'], _0x24a3f0);
        }
        get ['fogRange']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x441dfb['FOGRANGE']);
        }
        set ['fogRange'](_0x185bdc) {
            this['_shaderVal' + 'ues']['setNumber'](_0x441dfb['FOGRANGE'], _0x185bdc);
        }
        get ['ambientMod' + 'e']() {
            return this['_ambientMo' + 'de'];
        }
        set ['ambientMod' + 'e'](_0x116a98) {
            if (this['_ambientMo' + 'de'] !== _0x116a98) {
                switch (_0x116a98) {
                case _0xc55b22['AmbientMod' + 'e']['SolidColor']:
                    this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_GI_AMBI' + 'ENT_SH']);
                    break;
                case _0xc55b22['AmbientMod' + 'e']['SphericalH' + 'armonics']:
                    this['_shaderVal' + 'ues']['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_GI_AMBI' + 'ENT_SH']);
                    break;
                default:
                    throw 'Scene3D:\x20u' + 'nknown\x20amb' + 'ientMode.';
                }
                this['_ambientMo' + 'de'] = _0x116a98;
            }
        }
        get ['ambientCol' + 'or']() {
            return this['_shaderVal' + 'ues']['getVector3'](_0x441dfb['AMBIENTCOL' + 'OR']);
        }
        set ['ambientCol' + 'or'](_0x193c22) {
            this['_shaderVal' + 'ues']['setVector3'](_0x441dfb['AMBIENTCOL' + 'OR'], _0x193c22);
        }
        get ['ambientSph' + 'ericalHarm' + 'onics']() {
            return this['_ambientSp' + 'hericalHar' + 'monics'];
        }
        set ['ambientSph' + 'ericalHarm' + 'onics'](_0x36ef8b) {
            var _0x399026 = _0x36ef8b || _0x2bea9c['_default'];
            this['_applySHCo' + 'efficients'](_0x399026, Math['pow'](this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'], 2.2)), this['_ambientSp' + 'hericalHar' + 'monics'] != _0x36ef8b && _0x36ef8b['cloneTo'](this['_ambientSp' + 'hericalHar' + 'monics']);
        }
        get ['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity']() {
            return this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'];
        }
        set ['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity'](_0x10e1d4) {
            if (_0x10e1d4 = Math['max'](Math['min'](_0x10e1d4, 0x8), 0x0), this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'] !== _0x10e1d4) {
                var _0x5274f4 = this['_ambientSp' + 'hericalHar' + 'monics'] || _0x2bea9c['_default'];
                this['_applySHCo' + 'efficients'](_0x5274f4, Math['pow'](_0x10e1d4, 2.2)), this['_ambientSp' + 'hericalHar' + 'monicsInte' + 'nsity'] = _0x10e1d4;
            }
        }
        get ['reflection']() {
            return this['_reflectio' + 'n'];
        }
        set ['reflection'](_0x352c72) {
            this['_reflectio' + 'n'] != _0x352c72 && (this['_shaderVal' + 'ues']['setTexture'](_0x441dfb['REFLECTION' + 'TEXTURE'], _0x352c72 || _0x307e95['blackTextu' + 're']), this['_reflectio' + 'n'] = _0x352c72);
        }
        get ['reflection' + 'DecodingFo' + 'rmat']() {
            return this['_reflectio' + 'nDecodeFor' + 'mat'];
        }
        set ['reflection' + 'DecodingFo' + 'rmat'](_0x5d7346) {
            this['_reflectio' + 'nDecodeFor' + 'mat'] != _0x5d7346 && (this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] = this['_reflectio' + 'nIntensity'], this['_reflectio' + 'nDecodeFor' + 'mat'] == _0x2247ad['TextureDec' + 'odeFormat']['RGBM'] && (this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] *= 0x5), this['_reflectio' + 'nDecodeFor' + 'mat'] = _0x5d7346);
        }
        get ['reflection' + 'Intensity']() {
            return this['_reflectio' + 'nIntensity'];
        }
        set ['reflection' + 'Intensity'](_0x2dce7b) {
            _0x2dce7b = Math['max'](Math['min'](_0x2dce7b, 0x1), 0x0), this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] = _0x2dce7b, this['_reflectio' + 'nDecodeFor' + 'mat'] == _0x2247ad['TextureDec' + 'odeFormat']['RGBM'] && (this['_reflectio' + 'nCubeHDRPa' + 'rams']['x'] *= 0x5), this['_reflectio' + 'nIntensity'] = _0x2dce7b;
        }
        get ['skyRendere' + 'r']() {
            return this['_skyRender' + 'er'];
        }
        get ['physicsSim' + 'ulation']() {
            return this['_physicsSi' + 'mulation'];
        }
        get ['timer']() {
            return this['_timer'];
        }
        set ['timer'](_0xa722eb) {
            this['_timer'] = _0xa722eb;
        }
        get ['input']() {
            return this['_input'];
        }
        get ['lightmaps']() {
            return this['_lightmaps']['slice']();
        }
        set ['lightmaps'](_0x3d1558) {
            var _0x1c1237 = this['_lightmaps'];
            if (_0x1c1237)
                for (var _0x1d0c5e = 0x0, _0x200b3c = _0x1c1237['length']; _0x1d0c5e < _0x200b3c; _0x1d0c5e++) {
                    (_0x305cbc = _0x1c1237[_0x1d0c5e])['lightmapCo' + 'lor']['_removeRef' + 'erence'](), _0x305cbc['lightmapDi' + 'rection']['_removeRef' + 'erence']();
                }
            if (_0x3d1558) {
                var _0x1c77d3 = _0x3d1558['length'];
                for (_0x1c1237['length'] = _0x1c77d3, _0x1d0c5e = 0x0; _0x1d0c5e < _0x1c77d3; _0x1d0c5e++) {
                    var _0x305cbc;
                    (_0x305cbc = _0x3d1558[_0x1d0c5e])['lightmapCo' + 'lor'] && _0x305cbc['lightmapCo' + 'lor']['_addRefere' + 'nce'](), _0x305cbc['lightmapDi' + 'rection'] && _0x305cbc['lightmapDi' + 'rection']['_addRefere' + 'nce'](), _0x1c1237[_0x1d0c5e] = _0x305cbc;
                }
            } else
                _0x1c1237['length'] = 0x0;
        }
        ['_applySHCo' + 'efficients'](_0x400fc7, _0x307131) {
            for (var _0x515e15 = this['_shCoeffic' + 'ients'], _0x47eece = 0x0; _0x47eece < 0x3; _0x47eece++) {
                var _0x3d9889 = _0x515e15[_0x47eece], _0x29e3eb = _0x515e15[_0x47eece + 0x3];
                _0x3d9889['setValue'](_0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x3) * _0x307131, _0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x1) * _0x307131, _0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x2) * _0x307131, (_0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x0) - _0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x6)) * _0x307131), _0x29e3eb['setValue'](_0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x4) * _0x307131, _0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x5) * _0x307131, 0x3 * _0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x6) * _0x307131, _0x400fc7['getCoeffic' + 'ient'](_0x47eece, 0x7) * _0x307131);
            }
            _0x515e15[0x6]['setValue'](_0x400fc7['getCoeffic' + 'ient'](0x0, 0x8) * _0x307131, _0x400fc7['getCoeffic' + 'ient'](0x1, 0x8) * _0x307131, _0x400fc7['getCoeffic' + 'ient'](0x2, 0x8) * _0x307131, 0x1);
            var _0x1826aa = this['_shaderVal' + 'ues'];
            _0x1826aa['setVector'](_0x441dfb['AMBIENTSHA' + 'R'], _0x515e15[0x0]), _0x1826aa['setVector'](_0x441dfb['AMBIENTSHA' + 'G'], _0x515e15[0x1]), _0x1826aa['setVector'](_0x441dfb['AMBIENTSHA' + 'B'], _0x515e15[0x2]), _0x1826aa['setVector'](_0x441dfb['AMBIENTSHB' + 'R'], _0x515e15[0x3]), _0x1826aa['setVector'](_0x441dfb['AMBIENTSHB' + 'G'], _0x515e15[0x4]), _0x1826aa['setVector'](_0x441dfb['AMBIENTSHB' + 'B'], _0x515e15[0x5]), _0x1826aa['setVector'](_0x441dfb['AMBIENTSHC'], _0x515e15[0x6]);
        }
        ['_update']() {
            var _0x4f9544 = this['timer']['_delta'] / 0x3e8;
            this['_time'] += _0x4f9544, this['_shaderVal' + 'ues']['setNumber'](_0x441dfb['TIME'], this['_time']);
            var _0x7f41a2 = this['_physicsSi' + 'mulation'];
            _0x57b18d['_enablePhy' + 'sics'] && !_0x25e128['disableSim' + 'ulation'] && (_0x7f41a2['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der'](), _0x4da2bb['_addUpdate' + 'List'] = !0x1, _0x7f41a2['_simulate'](_0x4f9544), _0x7f41a2['_updateCha' + 'racters'](), _0x4da2bb['_addUpdate' + 'List'] = !0x0, _0x7f41a2['_updateCol' + 'lisions'](), _0x7f41a2['_eventScri' + 'pts']()), this['_input']['_update'](), this['_clearScri' + 'pt'](), this['_updateScr' + 'ipt'](), _0x4532ef['_update'](this), this['_lateUpdat' + 'eScript']();
        }
        ['_binarySea' + 'rchIndexIn' + 'CameraPool'](_0x3cba13) {
            for (var _0x1fc0af, _0x41c72d = 0x0, _0x4f78d6 = this['_cameraPoo' + 'l']['length'] - 0x1; _0x41c72d <= _0x4f78d6;) {
                _0x1fc0af = Math['floor']((_0x41c72d + _0x4f78d6) / 0x2);
                var _0x142341 = this['_cameraPoo' + 'l'][_0x1fc0af]['_rendering' + 'Order'];
                if (_0x142341 == _0x3cba13['_rendering' + 'Order'])
                    return _0x1fc0af;
                _0x142341 > _0x3cba13['_rendering' + 'Order'] ? _0x4f78d6 = _0x1fc0af - 0x1 : _0x41c72d = _0x1fc0af + 0x1;
            }
            return _0x41c72d;
        }
        ['_allotPick' + 'ColorByID'](_0x149a80, _0x27d676) {
            var _0x388cd0 = Math['floor'](_0x149a80 / 0xfe01);
            _0x149a80 -= 0xff * _0x388cd0 * 0xff;
            var _0x2c22d7 = Math['floor'](_0x149a80 / 0xff), _0x4ea0e6 = _0x149a80 -= 0xff * _0x2c22d7;
            _0x27d676['x'] = _0x388cd0 / 0xff, _0x27d676['y'] = _0x2c22d7 / 0xff, _0x27d676['z'] = _0x4ea0e6 / 0xff, _0x27d676['w'] = 0x1;
        }
        ['_searchIDB' + 'yPickColor'](_0x22ff96) {
            return 0xff * _0x22ff96['x'] * 0xff + 0xff * _0x22ff96['y'] + _0x22ff96['z'];
        }
        ['onEnable']() {
            this['_input']['_onCanvasE' + 'vent'](_0x2247ad['Render']['canvas']);
        }
        ['onDisable']() {
            this['_input']['_offCanvas' + 'Event'](_0x2247ad['Render']['canvas']);
        }
        ['_setCreate' + 'URL'](_0x34cb27) {
            this['_url'] = _0x2247ad['URL']['formatURL'](_0x34cb27);
        }
        ['_getGroup']() {
            return this['_group'];
        }
        ['_setGroup'](_0x2ef96f) {
            this['_group'] = _0x2ef96f;
        }
        ['_clearScri' + 'pt']() {
            if (this['_needClear' + 'ScriptPool']) {
                for (var _0x5b96c6 = this['_scriptPoo' + 'l'], _0x2f25f6 = 0x0, _0x39af2 = _0x5b96c6['length']; _0x2f25f6 < _0x39af2; _0x2f25f6++) {
                    var _0x29bf68 = _0x5b96c6[_0x2f25f6];
                    _0x29bf68 && (_0x29bf68['_indexInPo' + 'ol'] = this['_tempScrip' + 'tPool']['length'], this['_tempScrip' + 'tPool']['push'](_0x29bf68));
                }
                this['_scriptPoo' + 'l'] = this['_tempScrip' + 'tPool'], _0x5b96c6['length'] = 0x0, this['_tempScrip' + 'tPool'] = _0x5b96c6, this['_needClear' + 'ScriptPool'] = !0x1;
            }
        }
        ['_updateScr' + 'ipt']() {
            for (var _0x8de6e3 = this['_scriptPoo' + 'l'], _0x29b337 = 0x0, _0x1318b2 = _0x8de6e3['length']; _0x29b337 < _0x1318b2; _0x29b337++) {
                var _0x17a92c = _0x8de6e3[_0x29b337];
                _0x17a92c && _0x17a92c['enabled'] && _0x17a92c['onUpdate']();
            }
        }
        ['_lateUpdat' + 'eScript']() {
            for (var _0x325f4f = this['_scriptPoo' + 'l'], _0x51ccf3 = 0x0, _0x15b2d4 = _0x325f4f['length']; _0x51ccf3 < _0x15b2d4; _0x51ccf3++) {
                var _0x543ae0 = _0x325f4f[_0x51ccf3];
                _0x543ae0 && _0x543ae0['enabled'] && _0x543ae0['onLateUpda' + 'te']();
            }
        }
        ['_onActive']() {
            super['_onActive'](), _0x2247ad['ILaya']['stage']['_scene3Ds']['push'](this);
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e']();
            var _0x37c0c8 = _0x2247ad['ILaya']['stage']['_scene3Ds'];
            _0x37c0c8['splice'](_0x37c0c8['indexOf'](this), 0x1);
        }
        ['_prepareSc' + 'eneToRende' + 'r']() {
            var _0x2ffb20 = this['_shaderVal' + 'ues'];
            if (_0xb0652e['_config']['_multiLigh' + 'ting']) {
                var _0x406f92 = _0x441dfb['_lightText' + 'ure'], _0x4bf9ab = _0x441dfb['_lightPixl' + 'es'];
                const _0x4bdf09 = _0x406f92['width'], _0x21e40e = 0x4 * _0x4bdf09;
                var _0x22c7fb = 0x0, _0x103ace = this['_direction' + 'Lights']['_length'], _0x674a67 = this['_direction' + 'Lights']['_elements'];
                if (_0x103ace > 0x0) {
                    var _0x2f1890 = this['_direction' + 'Lights']['getSunLigh' + 't']();
                    this['_mainLight'] = _0x674a67[_0x2f1890];
                    for (var _0x1b1ce4 = 0x0; _0x1b1ce4 < _0x103ace; _0x1b1ce4++, _0x22c7fb++) {
                        var _0x1cd055 = (_0x4e7268 = _0x674a67[_0x1b1ce4])['_direction'], _0x3f96a6 = _0x4e7268['_intensity' + 'Color'], _0x113337 = _0x21e40e * _0x22c7fb;
                        _0x43b358['scale'](_0x4e7268['color'], _0x4e7268['_intensity'], _0x3f96a6), _0x4e7268['transform']['worldMatri' + 'x']['getForward'](_0x1cd055), _0x43b358['normalize'](_0x1cd055, _0x1cd055), _0x4bf9ab[_0x113337] = _0x3f96a6['x'], _0x4bf9ab[_0x113337 + 0x1] = _0x3f96a6['y'], _0x4bf9ab[_0x113337 + 0x2] = _0x3f96a6['z'], _0x4bf9ab[_0x113337 + 0x4] = _0x1cd055['x'], _0x4bf9ab[_0x113337 + 0x5] = _0x1cd055['y'], _0x4bf9ab[_0x113337 + 0x6] = _0x1cd055['z'], _0x1b1ce4 == _0x2f1890 && (_0x2ffb20['setVector3'](_0x441dfb['SUNLIGHTDI' + 'RCOLOR'], _0x3f96a6), _0x2ffb20['setVector3'](_0x441dfb['SUNLIGHTDI' + 'RECTION'], _0x1cd055));
                    }
                    _0x2ffb20['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                } else
                    _0x2ffb20['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                var _0x532a59 = this['_pointLigh' + 'ts']['_length'];
                if (_0x532a59 > 0x0) {
                    var _0x354f38 = this['_pointLigh' + 'ts']['_elements'];
                    for (_0x1b1ce4 = 0x0; _0x1b1ce4 < _0x532a59; _0x1b1ce4++, _0x22c7fb++) {
                        var _0x5c9585 = (_0x1151e7 = _0x354f38[_0x1b1ce4])['transform']['position'];
                        _0x3f96a6 = _0x1151e7['_intensity' + 'Color'], _0x113337 = _0x21e40e * _0x22c7fb, (_0x43b358['scale'](_0x1151e7['color'], _0x1151e7['_intensity'], _0x3f96a6), _0x4bf9ab[_0x113337] = _0x3f96a6['x'], _0x4bf9ab[_0x113337 + 0x1] = _0x3f96a6['y'], _0x4bf9ab[_0x113337 + 0x2] = _0x3f96a6['z'], _0x4bf9ab[_0x113337 + 0x3] = _0x1151e7['range'], _0x4bf9ab[_0x113337 + 0x4] = _0x5c9585['x'], _0x4bf9ab[_0x113337 + 0x5] = _0x5c9585['y'], _0x4bf9ab[_0x113337 + 0x6] = _0x5c9585['z']);
                    }
                    _0x2ffb20['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                } else
                    _0x2ffb20['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                var _0x21bc6f = this['_spotLight' + 's']['_length'];
                if (_0x21bc6f > 0x0) {
                    var _0x29198a = this['_spotLight' + 's']['_elements'];
                    for (_0x1b1ce4 = 0x0; _0x1b1ce4 < _0x21bc6f; _0x1b1ce4++, _0x22c7fb++) {
                        var _0x1893bd = _0x29198a[_0x1b1ce4];
                        _0x1cd055 = _0x1893bd['_direction'], _0x5c9585 = _0x1893bd['transform']['position'], _0x3f96a6 = _0x1893bd['_intensity' + 'Color'], _0x113337 = _0x21e40e * _0x22c7fb, (_0x43b358['scale'](_0x1893bd['color'], _0x1893bd['_intensity'], _0x3f96a6), _0x1893bd['transform']['worldMatri' + 'x']['getForward'](_0x1cd055), _0x43b358['normalize'](_0x1cd055, _0x1cd055), _0x4bf9ab[_0x113337] = _0x3f96a6['x'], _0x4bf9ab[_0x113337 + 0x1] = _0x3f96a6['y'], _0x4bf9ab[_0x113337 + 0x2] = _0x3f96a6['z'], _0x4bf9ab[_0x113337 + 0x3] = _0x1893bd['range'], _0x4bf9ab[_0x113337 + 0x4] = _0x5c9585['x'], _0x4bf9ab[_0x113337 + 0x5] = _0x5c9585['y'], _0x4bf9ab[_0x113337 + 0x6] = _0x5c9585['z'], _0x4bf9ab[_0x113337 + 0x7] = _0x1893bd['spotAngle'] * Math['PI'] / 0xb4, _0x4bf9ab[_0x113337 + 0x8] = _0x1cd055['x'], _0x4bf9ab[_0x113337 + 0x9] = _0x1cd055['y'], _0x4bf9ab[_0x113337 + 0xa] = _0x1cd055['z']);
                    }
                    _0x2ffb20['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                } else
                    _0x2ffb20['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                _0x22c7fb > 0x0 && _0x406f92['setSubPixe' + 'ls'](0x0, 0x0, _0x4bdf09, _0x22c7fb, _0x4bf9ab, 0x0), _0x2ffb20['setTexture'](_0x441dfb['LIGHTBUFFE' + 'R'], _0x406f92), _0x2ffb20['setInt'](_0x441dfb['DIRECTIONL' + 'IGHTCOUNT'], this['_direction' + 'Lights']['_length']), _0x2ffb20['setTexture'](_0x441dfb['CLUSTERBUF' + 'FER'], _0x3df7f3['instance']['_clusterTe' + 'xture']);
            } else {
                if (this['_direction' + 'Lights']['_length'] > 0x0) {
                    var _0x4e7268 = this['_direction' + 'Lights']['_elements'][0x0];
                    this['_mainLight'] = _0x4e7268, _0x43b358['scale'](_0x4e7268['color'], _0x4e7268['_intensity'], _0x4e7268['_intensity' + 'Color']), _0x4e7268['transform']['worldMatri' + 'x']['getForward'](_0x4e7268['_direction']), _0x43b358['normalize'](_0x4e7268['_direction'], _0x4e7268['_direction']), _0x2ffb20['setVector3'](_0x441dfb['LIGHTDIRCO' + 'LOR'], _0x4e7268['_intensity' + 'Color']), _0x2ffb20['setVector3'](_0x441dfb['LIGHTDIREC' + 'TION'], _0x4e7268['_direction']), _0x2ffb20['setVector3'](_0x441dfb['SUNLIGHTDI' + 'RCOLOR'], _0x4e7268['_intensity' + 'Color']), _0x2ffb20['setVector3'](_0x441dfb['SUNLIGHTDI' + 'RECTION'], _0x4e7268['_direction']), _0x2ffb20['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                } else
                    _0x2ffb20['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                if (this['_pointLigh' + 'ts']['_length'] > 0x0) {
                    var _0x1151e7 = this['_pointLigh' + 'ts']['_elements'][0x0];
                    _0x43b358['scale'](_0x1151e7['color'], _0x1151e7['_intensity'], _0x1151e7['_intensity' + 'Color']), _0x2ffb20['setVector3'](_0x441dfb['POINTLIGHT' + 'COLOR'], _0x1151e7['_intensity' + 'Color']), _0x2ffb20['setVector3'](_0x441dfb['POINTLIGHT' + 'POS'], _0x1151e7['transform']['position']), _0x2ffb20['setNumber'](_0x441dfb['POINTLIGHT' + 'RANGE'], _0x1151e7['range']), _0x2ffb20['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                } else
                    _0x2ffb20['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                if (this['_spotLight' + 's']['_length'] > 0x0) {
                    var _0x3bf40a = this['_spotLight' + 's']['_elements'][0x0];
                    _0x43b358['scale'](_0x3bf40a['color'], _0x3bf40a['_intensity'], _0x3bf40a['_intensity' + 'Color']), _0x2ffb20['setVector3'](_0x441dfb['SPOTLIGHTC' + 'OLOR'], _0x3bf40a['_intensity' + 'Color']), _0x2ffb20['setVector3'](_0x441dfb['SPOTLIGHTP' + 'OS'], _0x3bf40a['transform']['position']), _0x3bf40a['transform']['worldMatri' + 'x']['getForward'](_0x3bf40a['_direction']), _0x43b358['normalize'](_0x3bf40a['_direction'], _0x3bf40a['_direction']), _0x2ffb20['setVector3'](_0x441dfb['SPOTLIGHTD' + 'IRECTION'], _0x3bf40a['_direction']), _0x2ffb20['setNumber'](_0x441dfb['SPOTLIGHTR' + 'ANGE'], _0x3bf40a['range']), _0x2ffb20['setNumber'](_0x441dfb['SPOTLIGHTS' + 'POTANGLE'], _0x3bf40a['spotAngle'] * Math['PI'] / 0xb4), _0x2ffb20['addDefine'](_0xeb2444['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                } else
                    _0x2ffb20['removeDefi' + 'ne'](_0xeb2444['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
            }
        }
        ['_addScript'](_0x4775db) {
            var _0x82fc09 = this['_scriptPoo' + 'l'];
            _0x4775db['_indexInPo' + 'ol'] = _0x82fc09['length'], _0x82fc09['push'](_0x4775db);
        }
        ['_removeScr' + 'ipt'](_0x5aacd9) {
            this['_scriptPoo' + 'l'][_0x5aacd9['_indexInPo' + 'ol']] = null, _0x5aacd9['_indexInPo' + 'ol'] = -0x1, this['_needClear' + 'ScriptPool'] = !0x0;
        }
        ['_preRender' + 'Script']() {
            for (var _0x3053c4 = this['_scriptPoo' + 'l'], _0x2c2586 = 0x0, _0x4212bd = _0x3053c4['length']; _0x2c2586 < _0x4212bd; _0x2c2586++) {
                var _0x30b731 = _0x3053c4[_0x2c2586];
                _0x30b731 && _0x30b731['enabled'] && _0x30b731['onPreRende' + 'r']();
            }
        }
        ['_postRende' + 'rScript']() {
            for (var _0x13215a = this['_scriptPoo' + 'l'], _0x5ad080 = 0x0, _0x30ce46 = _0x13215a['length']; _0x5ad080 < _0x30ce46; _0x5ad080++) {
                var _0x49c365 = _0x13215a[_0x5ad080];
                _0x49c365 && _0x49c365['enabled'] && _0x49c365['onPostRend' + 'er']();
            }
        }
        ['_addCamera'](_0x200865) {
            for (var _0x3974a8 = this['_binarySea' + 'rchIndexIn' + 'CameraPool'](_0x200865), _0x2ccea4 = _0x200865['_rendering' + 'Order'], _0x2cb574 = this['_cameraPoo' + 'l']['length']; _0x3974a8 < _0x2cb574 && this['_cameraPoo' + 'l'][_0x3974a8]['_rendering' + 'Order'] <= _0x2ccea4;)
                _0x3974a8++;
            this['_cameraPoo' + 'l']['splice'](_0x3974a8, 0x0, _0x200865);
        }
        ['_removeCam' + 'era'](_0xebacd7) {
            this['_cameraPoo' + 'l']['splice'](this['_cameraPoo' + 'l']['indexOf'](_0xebacd7), 0x1);
        }
        ['_preCullin' + 'g'](_0xe300e, _0x7296d9, _0xf75ea3, _0x379124) {
            var _0x14fa87 = _0x5da8ae['_cameraCul' + 'lInfo'];
            _0x14fa87['position'] = _0x7296d9['_transform']['position'], _0x14fa87['cullingMas' + 'k'] = _0x7296d9['cullingMas' + 'k'], _0x14fa87['boundFrust' + 'um'] = _0x7296d9['boundFrust' + 'um'], _0x14fa87['useOcclusi' + 'onCulling'] = _0x7296d9['useOcclusi' + 'onCulling'], _0x5da8ae['renderObje' + 'ctCulling'](_0x14fa87, this, _0xe300e, _0xf75ea3, _0x379124, !0x1);
        }
        ['_clear'](_0x4057da, _0x1d6653) {
            var _0x3f2801, _0x2ff284, _0x92f123, _0x157d37 = _0x1d6653['viewport'], _0x31e5b0 = _0x1d6653['camera'], _0x5bdf63 = _0x31e5b0['_getRender' + 'Texture'](), _0x23934d = _0x157d37['width'], _0x3e1ec9 = _0x157d37['height'];
            _0x31e5b0['_needInter' + 'nalRenderT' + 'exture']() ? (_0x3f2801 = 0x0, _0x2ff284 = 0x0) : (_0x3f2801 = _0x157d37['x'], _0x2ff284 = _0x31e5b0['_getCanvas' + 'Height']() - _0x157d37['y'] - _0x3e1ec9), _0x4057da['viewport'](_0x3f2801, _0x2ff284, _0x23934d, _0x3e1ec9);
            var _0x35bd75 = _0x31e5b0['clearFlag'];
            switch (_0x35bd75 !== _0xc55b22['CameraClea' + 'rFlags']['Sky'] || _0x31e5b0['skyRendere' + 'r']['_isAvailab' + 'le']() || this['_skyRender' + 'er']['_isAvailab' + 'le']() || (_0x35bd75 = _0xc55b22['CameraClea' + 'rFlags']['SolidColor']), _0x35bd75) {
            case _0xc55b22['CameraClea' + 'rFlags']['SolidColor']:
                var _0x70d4d6 = _0x31e5b0['clearColor'];
                if (_0x4057da['enable'](_0x4057da['SCISSOR_TE' + 'ST']), _0x4057da['scissor'](_0x3f2801, _0x2ff284, _0x23934d, _0x3e1ec9), _0x70d4d6 ? _0x4057da['clearColor'](_0x70d4d6['x'], _0x70d4d6['y'], _0x70d4d6['z'], _0x70d4d6['w']) : _0x4057da['clearColor'](0x0, 0x0, 0x0, 0x0), _0x5bdf63)
                    switch (_0x92f123 = _0x4057da['COLOR_BUFF' + 'ER_BIT'], _0x5bdf63['depthStenc' + 'ilFormat']) {
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x92f123 |= _0x4057da['DEPTH_BUFF' + 'ER_BIT'];
                        break;
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x92f123 |= _0x4057da['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                        _0x92f123 |= _0x4057da['DEPTH_BUFF' + 'ER_BIT'], _0x92f123 |= _0x4057da['STENCIL_BU' + 'FFER_BIT'];
                    }
                else
                    _0x92f123 = _0x4057da['COLOR_BUFF' + 'ER_BIT'] | _0x4057da['DEPTH_BUFF' + 'ER_BIT'];
                _0x2247ad['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x4057da, !0x0), _0x4057da['clear'](_0x92f123), _0x4057da['disable'](_0x4057da['SCISSOR_TE' + 'ST']);
                break;
            case _0xc55b22['CameraClea' + 'rFlags']['Sky']:
            case _0xc55b22['CameraClea' + 'rFlags']['DepthOnly']:
                if (_0x4057da['enable'](_0x4057da['SCISSOR_TE' + 'ST']), _0x4057da['scissor'](_0x3f2801, _0x2ff284, _0x23934d, _0x3e1ec9), _0x5bdf63)
                    switch (_0x5bdf63['depthStenc' + 'ilFormat']) {
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x92f123 = _0x4057da['DEPTH_BUFF' + 'ER_BIT'];
                        break;
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x92f123 = _0x4057da['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    case _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_24_8']:
                        _0x92f123 = _0x4057da['DEPTH_BUFF' + 'ER_BIT'] | _0x4057da['STENCIL_BU' + 'FFER_BIT'];
                    }
                else
                    _0x92f123 = _0x4057da['DEPTH_BUFF' + 'ER_BIT'];
                _0x2247ad['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x4057da, !0x0), _0x4057da['clear'](_0x92f123), _0x4057da['disable'](_0x4057da['SCISSOR_TE' + 'ST']);
                break;
            case _0xc55b22['CameraClea' + 'rFlags']['Nothing']:
                break;
            default:
                throw new Error('Scene3D:ca' + 'mera\x20clear' + 'Flag\x20inval' + 'id.');
            }
        }
        ['_renderSce' + 'ne'](_0x1e99de) {
            var _0x2ceb2e = _0x1e99de['camera'];
            if (this['_opaqueQue' + 'ue']['_render'](_0x1e99de), _0x2ceb2e['clearFlag'] === _0xc55b22['CameraClea' + 'rFlags']['Sky'] && (_0x2ceb2e['skyRendere' + 'r']['_isAvailab' + 'le']() ? _0x2ceb2e['skyRendere' + 'r']['_render'](_0x1e99de) : this['_skyRender' + 'er']['_isAvailab' + 'le']() && this['_skyRender' + 'er']['_render'](_0x1e99de)), this['_transpare' + 'ntQueue']['_render'](_0x1e99de), _0x5da8ae['debugFrust' + 'umCulling']) {
                for (var _0x3f21d2 = this['_debugTool']['_render']['_renderEle' + 'ments'], _0x3e7065 = 0x0, _0x5a6ba1 = _0x3f21d2['length']; _0x3e7065 < _0x5a6ba1; _0x3e7065++)
                    _0x3f21d2[_0x3e7065]['_update'](this, _0x1e99de, null, null), _0x3f21d2[_0x3e7065]['_render'](_0x1e99de);
            }
        }
        ['_parse'](_0x4c6de2, _0x2c795e) {
            var _0x4ceaf3 = _0x4c6de2['lightmaps'];
            if (_0x4ceaf3) {
                for (var _0x59595f = _0x4ceaf3['length'], _0x1a9649 = new Array(_0x59595f), _0x459ac8 = 0x0; _0x459ac8 < _0x59595f; _0x459ac8++) {
                    var _0xde1e0f = new _0x5822c7(), _0x265b45 = _0x4ceaf3[_0x459ac8];
                    _0x265b45['path'] ? _0xde1e0f['lightmapCo' + 'lor'] = _0x2247ad['Loader']['getRes'](_0x265b45['path']) : (_0xde1e0f['lightmapCo' + 'lor'] = _0x2247ad['Loader']['getRes'](_0x265b45['color']['path']), _0x265b45['direction'] && (_0xde1e0f['lightmapDi' + 'rection'] = _0x2247ad['Loader']['getRes'](_0x265b45['direction']['path']))), _0x1a9649[_0x459ac8] = _0xde1e0f;
                }
                this['lightmaps'] = _0x1a9649;
            }
            var _0x2de61a = _0x4c6de2['ambientCol' + 'or'];
            if (_0x2de61a) {
                var _0x29941a = this['ambientCol' + 'or'];
                _0x29941a['fromArray'](_0x2de61a), this['ambientCol' + 'or'] = _0x29941a;
            }
            var _0x33ccff = _0x4c6de2['sky'];
            if (_0x33ccff)
                switch (this['_skyRender' + 'er']['material'] = _0x2247ad['Loader']['getRes'](_0x33ccff['material']['path']), _0x33ccff['mesh']) {
                case 'SkyBox':
                    this['_skyRender' + 'er']['mesh'] = _0x47c080['instance'];
                    break;
                case 'SkyDome':
                    this['_skyRender' + 'er']['mesh'] = _0x1252a2['instance'];
                    break;
                default:
                    this['skyRendere' + 'r']['mesh'] = _0x47c080['instance'];
                }
            this['enableFog'] = _0x4c6de2['enableFog'], this['fogStart'] = _0x4c6de2['fogStart'], this['fogRange'] = _0x4c6de2['fogRange'];
            var _0x4e0791 = _0x4c6de2['fogColor'];
            if (_0x4e0791) {
                var _0x3b5067 = this['fogColor'];
                _0x3b5067['fromArray'](_0x4e0791), this['fogColor'] = _0x3b5067;
            }
            var _0x4c10e5 = _0x4c6de2['ambientSph' + 'ericalHarm' + 'onics'];
            if (_0x4c10e5) {
                var _0x2efcc2 = this['ambientSph' + 'ericalHarm' + 'onics'];
                for (_0x459ac8 = 0x0; _0x459ac8 < 0x3; _0x459ac8++) {
                    var _0x586d9f = 0x9 * _0x459ac8;
                    _0x2efcc2['setCoeffic' + 'ients'](_0x459ac8, _0x4c10e5[_0x586d9f], _0x4c10e5[_0x586d9f + 0x1], _0x4c10e5[_0x586d9f + 0x2], _0x4c10e5[_0x586d9f + 0x3], _0x4c10e5[_0x586d9f + 0x4], _0x4c10e5[_0x586d9f + 0x5], _0x4c10e5[_0x586d9f + 0x6], _0x4c10e5[_0x586d9f + 0x7], _0x4c10e5[_0x586d9f + 0x8]);
                }
                this['ambientSph' + 'ericalHarm' + 'onics'] = _0x2efcc2;
            }
            var _0xa31b6 = _0x4c6de2['reflection'];
            null != _0xa31b6 && (this['reflection'] = _0x2247ad['Loader']['getRes'](_0xa31b6));
            var _0x467c65 = _0x4c6de2['reflection' + 'DecodingFo' + 'rmat'];
            null != _0x467c65 && (this['reflection' + 'DecodingFo' + 'rmat'] = _0x467c65);
            var _0x5830ac = _0x4c6de2['ambientMod' + 'e'];
            null != _0x5830ac && (this['ambientMod' + 'e'] = _0x5830ac);
            var _0x44579a = _0x4c6de2['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity'];
            null != _0x44579a && (this['ambientSph' + 'ericalHarm' + 'onicsInten' + 'sity'] = _0x44579a);
            var _0x986fb6 = _0x4c6de2['reflection' + 'Intensity'];
            null != _0x986fb6 && (this['reflection' + 'Intensity'] = _0x986fb6);
        }
        ['_addRender' + 'Object'](_0xe32bec) {
            if (this['_octree'] && _0xe32bec['_supportOc' + 'tree'])
                this['_octree']['add'](_0xe32bec);
            else {
                if (this['_renders']['add'](_0xe32bec), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                    var _0x5be067 = _0xe32bec['_getIndexI' + 'nList'](), _0x424f09 = this['_cullingBu' + 'fferIndice' + 's']['length'];
                    if (_0x5be067 >= _0x424f09) {
                        var _0x28eb7b = this['_cullingBu' + 'fferIndice' + 's'], _0x185edc = this['_cullingBu' + 'fferResult'];
                        this['_cullingBu' + 'fferIndice' + 's'] = new Int32Array(_0x424f09 + 0x400), this['_cullingBu' + 'fferResult'] = new Int32Array(_0x424f09 + 0x400), this['_cullingBu' + 'fferIndice' + 's']['set'](_0x28eb7b, 0x0), this['_cullingBu' + 'fferResult']['set'](_0x185edc, 0x0);
                    }
                    this['_cullingBu' + 'fferIndice' + 's'][_0x5be067] = _0xe32bec['_cullingBu' + 'fferIndex'];
                }
            }
        }
        ['_removeRen' + 'derObject'](_0x5e8a75) {
            var _0x2cc4b3;
            this['_octree'] && _0x5e8a75['_supportOc' + 'tree'] ? this['_octree']['remove'](_0x5e8a75) : (_0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (_0x2cc4b3 = this['_renders']['elements'][this['_renders']['length'] - 0x1]), this['_renders']['remove'](_0x5e8a75), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (this['_cullingBu' + 'fferIndice' + 's'][_0x2cc4b3['_getIndexI' + 'nList']()] = _0x2cc4b3['_cullingBu' + 'fferIndex']));
        }
        ['_getRender' + 'Queue'](_0x5c49ad) {
            return _0x5c49ad <= 0x9c4 ? this['_opaqueQue' + 'ue'] : this['_transpare' + 'ntQueue'];
        }
        ['destroy'](_0x151874 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x151874), this['_skyRender' + 'er']['destroy'](), this['_skyRender' + 'er'] = null, this['_direction' + 'Lights'] = null, this['_pointLigh' + 'ts'] = null, this['_spotLight' + 's'] = null, this['_alternate' + 'Lights'] = null, this['_lightmaps'] = null, this['_shaderVal' + 'ues'] = null, this['_renders'] = null, this['_cameraPoo' + 'l'] = null, this['_octree'] = null, this['_physicsSi' + 'mulation'] && this['_physicsSi' + 'mulation']['_destroy'](), _0x2247ad['Loader']['clearRes'](this['url']));
        }
        ['render'](_0x5bc9e1, _0x11c26d, _0x4baa95) {
            _0x5bc9e1['_curSubmit'] = _0x2247ad['SubmitBase']['RENDERBASE'], this['_children']['length'] > 0x0 && _0x5bc9e1['addRenderO' + 'bject'](this);
        }
        ['renderSubm' + 'it']() {
            var _0x2e1e1f, _0x2408fd, _0x44f55e;
            _0x2247ad['LayaGL']['instance'];
            for (this['_prepareSc' + 'eneToRende' + 'r'](), _0x2e1e1f = 0x0, _0x44f55e = (_0x2408fd = this['_cameraPoo' + 'l']['length']) - 0x1; _0x2e1e1f < _0x2408fd; _0x2e1e1f++) {
                _0x2247ad['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x5e515b['setRuntime' + 'ValueMode'](_0x2e1e1f == _0x44f55e);
                var _0x4312ab = this['_cameraPoo' + 'l'][_0x2e1e1f];
                _0x4312ab['enableRend' + 'er'] && _0x4312ab['render']();
            }
            return _0x2247ad['Context']['set2DRende' + 'rConfig'](), 0x1;
        }
        ['getRenderT' + 'ype']() {
            return 0x0;
        }
        ['releaseRen' + 'der']() {
        }
        ['reUse'](_0x21d9b7, _0x143ec8) {
            return 0x0;
        }
        get ['customRefl' + 'ection']() {
            return this['_reflectio' + 'n'];
        }
        set ['customRefl' + 'ection'](_0x1da60c) {
            this['_reflectio' + 'n'] != _0x1da60c && (this['_shaderVal' + 'ues']['setTexture'](_0x441dfb['REFLECTION' + 'TEXTURE'], _0x1da60c || _0x307e95['blackTextu' + 're']), this['_reflectio' + 'n'] = _0x1da60c);
        }
        get ['reflection' + 'Mode']() {
            return this['_reflectio' + 'nMode'];
        }
        set ['reflection' + 'Mode'](_0x403ca5) {
            this['_reflectio' + 'nMode'] = _0x403ca5;
        }
        ['setlightma' + 'ps'](_0x258347) {
            for (var _0x3b0f57 = this['_lightmaps'], _0x2bf04c = 0x0, _0x352073 = _0x3b0f57['length']; _0x2bf04c < _0x352073; _0x2bf04c++)
                _0x3b0f57[_0x2bf04c]['lightmapCo' + 'lor']['_removeRef' + 'erence']();
            if (!_0x258347)
                throw new Error('Scene3D:\x20v' + 'alue\x20value' + '\x20can\x27t\x20be\x20' + 'null.');
            var _0xf8b250 = _0x258347['length'];
            for (_0x3b0f57['length'] = _0xf8b250, _0x2bf04c = 0x0; _0x2bf04c < _0xf8b250; _0x2bf04c++) {
                var _0xa0b9c7 = _0x258347[_0x2bf04c];
                _0xa0b9c7['_addRefere' + 'nce'](), _0x3b0f57[_0x2bf04c] || (_0x3b0f57[_0x2bf04c] = new _0x5822c7()), _0x3b0f57[_0x2bf04c]['lightmapCo' + 'lor'] = _0xa0b9c7;
            }
        }
        ['getlightma' + 'ps']() {
            for (var _0xc3d738 = new Array(this['_lightmaps']['length']), _0x1a2297 = 0x0; _0x1a2297 < this['_lightmaps']['length']; _0x1a2297++)
                _0xc3d738[_0x1a2297] = this['_lightmaps'][_0x1a2297]['lightmapCo' + 'lor'];
            return _0xc3d738;
        }
    }
    _0x441dfb['_shadowCas' + 'terPass'] = new _0x5244b9(), _0x441dfb['HIERARCHY'] = 'HIERARCHY', _0x441dfb['physicsSet' + 'tings'] = new _0x47df6f(), _0x441dfb['octreeCull' + 'ing'] = !0x1, _0x441dfb['octreeInit' + 'ialSize'] = 0x40, _0x441dfb['octreeInit' + 'ialCenter'] = new _0x43b358(0x0, 0x0, 0x0), _0x441dfb['octreeMinN' + 'odeSize'] = 0x2, _0x441dfb['octreeLoos' + 'eness'] = 1.25, _0x441dfb['REFLECTION' + 'MODE_SKYBO' + 'X'] = 0x0, _0x441dfb['REFLECTION' + 'MODE_CUSTO' + 'M'] = 0x1, _0x441dfb['FOGCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_FogColor'), _0x441dfb['FOGSTART'] = _0x38ffce['propertyNa' + 'meToID']('u_FogStart'), _0x441dfb['FOGRANGE'] = _0x38ffce['propertyNa' + 'meToID']('u_FogRange'), _0x441dfb['DIRECTIONL' + 'IGHTCOUNT'] = _0x38ffce['propertyNa' + 'meToID']('u_Diration' + 'LightCount'), _0x441dfb['LIGHTBUFFE' + 'R'] = _0x38ffce['propertyNa' + 'meToID']('u_LightBuf' + 'fer'), _0x441dfb['CLUSTERBUF' + 'FER'] = _0x38ffce['propertyNa' + 'meToID']('u_LightClu' + 'sterBuffer'), _0x441dfb['SUNLIGHTDI' + 'RECTION'] = _0x38ffce['propertyNa' + 'meToID']('u_SunLight' + '.direction'), _0x441dfb['SUNLIGHTDI' + 'RCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_SunLight' + '.color'), _0x441dfb['AMBIENTSHA' + 'R'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HAr'), _0x441dfb['AMBIENTSHA' + 'G'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HAg'), _0x441dfb['AMBIENTSHA' + 'B'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HAb'), _0x441dfb['AMBIENTSHB' + 'R'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HBr'), _0x441dfb['AMBIENTSHB' + 'G'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HBg'), _0x441dfb['AMBIENTSHB' + 'B'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HBb'), _0x441dfb['AMBIENTSHC'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientS' + 'HC'), _0x441dfb['REFLECTION' + 'PROBE'] = _0x38ffce['propertyNa' + 'meToID']('u_Reflecti' + 'onProbe'), _0x441dfb['REFLECTION' + 'CUBE_HDR_P' + 'ARAMS'] = _0x38ffce['propertyNa' + 'meToID']('u_ReflectC' + 'ubeHDRPara' + 'ms'), _0x441dfb['LIGHTDIREC' + 'TION'] = _0x38ffce['propertyNa' + 'meToID']('u_Directio' + 'nLight.dir' + 'ection'), _0x441dfb['LIGHTDIRCO' + 'LOR'] = _0x38ffce['propertyNa' + 'meToID']('u_Directio' + 'nLight.col' + 'or'), _0x441dfb['POINTLIGHT' + 'POS'] = _0x38ffce['propertyNa' + 'meToID']('u_PointLig' + 'ht.positio' + 'n'), _0x441dfb['POINTLIGHT' + 'RANGE'] = _0x38ffce['propertyNa' + 'meToID']('u_PointLig' + 'ht.range'), _0x441dfb['POINTLIGHT' + 'ATTENUATIO' + 'N'] = _0x38ffce['propertyNa' + 'meToID']('u_PointLig' + 'ht.attenua' + 'tion'), _0x441dfb['POINTLIGHT' + 'COLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_PointLig' + 'ht.color'), _0x441dfb['SPOTLIGHTP' + 'OS'] = _0x38ffce['propertyNa' + 'meToID']('u_SpotLigh' + 't.position'), _0x441dfb['SPOTLIGHTD' + 'IRECTION'] = _0x38ffce['propertyNa' + 'meToID']('u_SpotLigh' + 't.directio' + 'n'), _0x441dfb['SPOTLIGHTS' + 'POTANGLE'] = _0x38ffce['propertyNa' + 'meToID']('u_SpotLigh' + 't.spot'), _0x441dfb['SPOTLIGHTR' + 'ANGE'] = _0x38ffce['propertyNa' + 'meToID']('u_SpotLigh' + 't.range'), _0x441dfb['SPOTLIGHTC' + 'OLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_SpotLigh' + 't.color'), _0x441dfb['AMBIENTCOL' + 'OR'] = _0x38ffce['propertyNa' + 'meToID']('u_AmbientC' + 'olor'), _0x441dfb['REFLECTION' + 'TEXTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_ReflectT' + 'exture'), _0x441dfb['TIME'] = _0x38ffce['propertyNa' + 'meToID']('u_Time'), _0x441dfb['_configDef' + 'ineValues'] = new _0x590056();
    class _0x27cd39 extends _0x2247ad['ShaderComp' + 'ile'] {
        constructor(_0x2c07ef, _0x43eafb, _0x501498, _0x7de0e8) {
            for (var _0x28e818 in (super(_0x43eafb, _0x501498, null), this['_cacheShar' + 'ders'] = {}, this['_cacheShad' + 'erHierarch' + 'y'] = 0x1, this['_renderSta' + 'te'] = new _0x4ba527(), this['_validDefi' + 'ne'] = new _0x590056(), this['_tags'] = {}, this['_owner'] = _0x2c07ef, this['_stateMap'] = _0x7de0e8, this['defs']))
                this['_validDefi' + 'ne']['add'](_0x38ffce['getDefineB' + 'yName'](_0x28e818));
        }
        get ['renderStat' + 'e']() {
            return this['_renderSta' + 'te'];
        }
        ['_compileTo' + 'Tree'](_0x19d9ab, _0x2092df, _0x53a5cd, _0x37939b, _0x48efa6) {
            var _0x50deaa, _0x3a40d0, _0x4d957a, _0x413323, _0x40fc6f, _0x5800ed, _0x396a69, _0x20624c, _0x11d8c4, _0x5369c5, _0x576f1c;
            for (_0x11d8c4 = _0x53a5cd; _0x11d8c4 < _0x2092df['length']; _0x11d8c4++)
                if (!((_0x4d957a = _0x2092df[_0x11d8c4])['length'] < 0x1) && 0x0 !== (_0x5800ed = _0x4d957a['indexOf']('//'))) {
                    if (_0x5800ed >= 0x0 && (_0x4d957a = _0x4d957a['substr'](0x0, _0x5800ed)), _0x50deaa = _0x20624c || new _0x2247ad['ShaderNode'](_0x37939b), _0x20624c = null, _0x50deaa['text'] = _0x4d957a, (_0x5800ed = _0x4d957a['indexOf']('#')) >= 0x0) {
                        for (_0x413323 = '#', _0x576f1c = _0x5800ed + 0x1, _0x5369c5 = _0x4d957a['length']; _0x576f1c < _0x5369c5; _0x576f1c++) {
                            var _0x2a5471 = _0x4d957a['charAt'](_0x576f1c);
                            if ('\x20' === _0x2a5471 || '\x09' === _0x2a5471 || '?' === _0x2a5471)
                                break;
                            _0x413323 += _0x2a5471;
                        }
                        switch (_0x50deaa['name'] = _0x413323, _0x413323) {
                        case '#ifdef':
                        case '#ifndef':
                            if (_0x50deaa['setParent'](_0x19d9ab), _0x19d9ab = _0x50deaa, _0x48efa6) {
                                for (_0x396a69 = _0x4d957a['substr'](_0x576f1c)['split'](_0x2247ad['ShaderComp' + 'ile']['_splitToWo' + 'rdExps3']), _0x576f1c = 0x0; _0x576f1c < _0x396a69['length']; _0x576f1c++)
                                    (_0x4d957a = _0x396a69[_0x576f1c])['length'] && (_0x48efa6[_0x4d957a] = !0x0);
                            }
                            continue;
                        case '#if':
                        case '#elif':
                            if (_0x50deaa['setParent'](_0x19d9ab), _0x19d9ab = _0x50deaa, _0x48efa6) {
                                for (_0x396a69 = _0x4d957a['substr'](_0x576f1c)['split'](_0x2247ad['ShaderComp' + 'ile']['_splitToWo' + 'rdExps3']), _0x576f1c = 0x0; _0x576f1c < _0x396a69['length']; _0x576f1c++)
                                    (_0x4d957a = _0x396a69[_0x576f1c])['length'] && 'defined' != _0x4d957a && (_0x48efa6[_0x4d957a] = !0x0);
                            }
                            continue;
                        case '#else':
                            _0x3a40d0 = (_0x19d9ab = _0x19d9ab['parent'])['childs'][_0x19d9ab['childs']['length'] - 0x1], _0x50deaa['setParent'](_0x19d9ab), _0x19d9ab = _0x50deaa;
                            continue;
                        case '#endif':
                            _0x3a40d0 = (_0x19d9ab = _0x19d9ab['parent'])['childs'][_0x19d9ab['childs']['length'] - 0x1], _0x50deaa['setParent'](_0x19d9ab);
                            continue;
                        case '#include':
                            _0x396a69 = _0x2247ad['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x4d957a, null);
                            var _0x400389 = _0x2247ad['ShaderComp' + 'ile']['includes'][_0x396a69[0x1]];
                            if (!_0x400389)
                                throw 'ShaderComp' + 'ile\x20error\x20' + 'no\x20this\x20in' + 'clude\x20file' + ':' + _0x396a69[0x1];
                            if ((_0x5800ed = _0x396a69[0x0]['indexOf']('?')) < 0x0) {
                                _0x50deaa['setParent'](_0x19d9ab), _0x4d957a = _0x400389['getWith']('with' == _0x396a69[0x2] ? _0x396a69[0x3] : null), this['_compileTo' + 'Tree'](_0x50deaa, _0x4d957a['split']('\x0a'), 0x0, _0x37939b, _0x48efa6), _0x50deaa['text'] = '';
                                continue;
                            }
                            _0x50deaa['setConditi' + 'on'](_0x396a69[0x0]['substr'](_0x5800ed + 0x1), _0x2247ad['ShaderComp' + 'ile']['IFDEF_YES']), _0x50deaa['text'] = _0x400389['getWith']('with' == _0x396a69[0x2] ? _0x396a69[0x3] : null);
                            break;
                        case '#import':
                            _0x40fc6f = (_0x396a69 = _0x2247ad['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x4d957a, null))[0x1], _0x37939b['push']({
                                'node': _0x50deaa,
                                'file': _0x2247ad['ShaderComp' + 'ile']['includes'][_0x40fc6f],
                                'ofs': _0x50deaa['text']['length']
                            });
                            continue;
                        }
                    } else {
                        if ((_0x3a40d0 = _0x19d9ab['childs'][_0x19d9ab['childs']['length'] - 0x1]) && !_0x3a40d0['name']) {
                            _0x37939b['length'] > 0x0 && _0x2247ad['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x4d957a, _0x3a40d0), _0x20624c = _0x50deaa, _0x3a40d0['text'] += '\x0a' + _0x4d957a;
                            continue;
                        }
                        _0x37939b['length'] > 0x0 && _0x2247ad['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x4d957a, _0x50deaa);
                    }
                    _0x50deaa['setParent'](_0x19d9ab);
                }
        }
        ['_resizeCac' + 'heShaderMa' + 'p'](_0x4c3c7f, _0x37071e, _0x135149) {
            var _0x13dfdc = this['_cacheShad' + 'erHierarch' + 'y'] - 0x1;
            if (_0x37071e == _0x13dfdc) {
                for (var _0x2b190b in _0x4c3c7f)
                    for (var _0x36c839 = _0x4c3c7f[_0x2b190b], _0x3475f3 = 0x0, _0x29f282 = _0x135149 - _0x13dfdc; _0x3475f3 < _0x29f282; _0x3475f3++)
                        _0x3475f3 == _0x29f282 - 0x1 ? _0x4c3c7f[0x0] = _0x36c839 : _0x4c3c7f = _0x4c3c7f[0x0 == _0x3475f3 ? _0x2b190b : 0x0] = {};
                this['_cacheShad' + 'erHierarch' + 'y'] = _0x135149;
            } else {
                for (var _0x2b190b in _0x4c3c7f)
                    this['_resizeCac' + 'heShaderMa' + 'p'](_0x4c3c7f[_0x2b190b], ++_0x37071e, _0x135149);
            }
        }
        ['_addDebugS' + 'haderVaria' + 'ntCollecti' + 'on'](_0x2a9da3, _0x3bed65, _0x57d252) {
            var _0x2d7592 = _0x38ffce['_debugShad' + 'erVariantI' + 'nfo'], _0x56d412 = this['_owner'], _0x263ab4 = _0x56d412['_owner'], _0x3e4cbd = _0x2a9da3['_mask'];
            _0x38ffce['_getNamesB' + 'yDefineDat' + 'a'](_0x2a9da3, _0x3bed65), _0x57d252['length'] = _0x3e4cbd['length'];
            for (var _0x5d5da0 = 0x0, _0x44da4c = _0x3e4cbd['length']; _0x5d5da0 < _0x44da4c; _0x5d5da0++)
                _0x57d252[_0x5d5da0] = _0x3e4cbd[_0x5d5da0];
            _0x2d7592 ? _0x2d7592['setValue'](_0x263ab4, _0x263ab4['_subShader' + 's']['indexOf'](_0x56d412), _0x56d412['_passes']['indexOf'](this), _0x3bed65) : _0x38ffce['_debugShad' + 'erVariantI' + 'nfo'] = _0x2d7592 = new _0x4becb4(_0x263ab4, _0x263ab4['_subShader' + 's']['indexOf'](_0x56d412), _0x56d412['_passes']['indexOf'](this), _0x3bed65), _0x38ffce['debugShade' + 'rVariantCo' + 'llection']['add'](_0x2d7592);
        }
        ['withCompil' + 'e'](_0x3f8990) {
            var _0x4fd867, _0x5b1110 = _0x27cd39['_debugDefi' + 'neString'], _0x4c73c9 = _0x27cd39['_debugDefi' + 'neMask'];
            _0x3f8990['_intersect' + 'ionDefineD' + 'atas'](this['_validDefi' + 'ne']), _0x38ffce['debugMode'] && (_0x4fd867 = _0x3f8990['_length'], this['_addDebugS' + 'haderVaria' + 'ntCollecti' + 'on'](_0x3f8990, _0x5b1110, _0x4c73c9)), _0x3f8990['addDefineD' + 'atas'](_0x441dfb['_configDef' + 'ineValues']);
            var _0x40751d = this['_cacheShar' + 'ders'], _0x4bb5a9 = _0x3f8990['_length'];
            _0x4bb5a9 > this['_cacheShad' + 'erHierarch' + 'y'] && (this['_resizeCac' + 'heShaderMa' + 'p'](_0x40751d, 0x0, _0x4bb5a9), this['_cacheShad' + 'erHierarch' + 'y'] = _0x4bb5a9);
            for (var _0x105416 = _0x3f8990['_mask'], _0x9ea004 = _0x3f8990['_length'] - 0x1, _0x2d00da = this['_cacheShad' + 'erHierarch' + 'y'] - 0x1, _0x285ebe = 0x0; _0x285ebe < _0x2d00da; _0x285ebe++) {
                var _0xc4b11a = _0x9ea004 < _0x285ebe ? 0x0 : _0x105416[_0x285ebe], _0x1a6696 = _0x40751d[_0xc4b11a];
                _0x1a6696 || (_0x40751d[_0xc4b11a] = _0x1a6696 = {}), _0x40751d = _0x1a6696;
            }
            var _0x42c907 = _0x9ea004 < _0x2d00da ? 0x0 : _0x105416[_0x2d00da], _0x3159dd = _0x40751d[_0x42c907];
            if (_0x3159dd)
                return _0x3159dd;
            var _0x11c92f = _0x27cd39['_defineStr' + 'ing'];
            _0x38ffce['_getNamesB' + 'yDefineDat' + 'a'](_0x3f8990, _0x11c92f);
            var _0x25835a, _0x210949, _0x5106c8 = _0xb0652e['_config'], _0x3f2964 = _0x5106c8['lightClust' + 'erCount'], _0xda1f86 = {}, _0x779c15 = '';
            _0x2247ad['WebGL']['_isWebGL2'] ? (_0x25835a = '#version\x203' + '00\x20es\x0a\x0a\x09\x09\x09' + '\x09#define\x20a' + 'ttribute\x20i' + 'n\x0a\x09\x09\x09\x09#def' + 'ine\x20varyin' + 'g\x20out\x0a\x09\x09\x09\x09' + '#define\x20te' + 'xture2D\x20te' + 'xture\x0a', _0x210949 = '#version\x203' + '00\x20es\x0a\x0a\x09\x09\x09' + '\x09#define\x20v' + 'arying\x20in\x0a' + '\x09\x09\x09\x09out\x20hi' + 'ghp\x20vec4\x20p' + 'c_fragColo' + 'r;\x0a\x09\x09\x09\x09#de' + 'fine\x20gl_Fr' + 'agColor\x20pc' + '_fragColor' + '\x0a\x09\x09\x09\x09#defi' + 'ne\x20gl_Frag' + 'DepthEXT\x20g' + 'l_FragDept' + 'h\x0a\x09\x09\x09\x09#def' + 'ine\x20textur' + 'e2D\x20textur' + 'e\x0a\x09\x09\x09\x09#def' + 'ine\x20textur' + 'eCube\x20text' + 'ure\x0a\x09\x09\x09\x09#d' + 'efine\x20text' + 'ure2DProj\x20' + 'texturePro' + 'j\x0a\x09\x09\x09\x09#def' + 'ine\x20textur' + 'e2DLodEXT\x20' + 'textureLod' + '\x0a\x09\x09\x09\x09#defi' + 'ne\x20texture' + '2DProjLodE' + 'XT\x20texture' + 'ProjLod\x0a\x09\x09' + '\x09\x09#define\x20' + 'textureCub' + 'eLodEXT\x20te' + 'xtureLod\x0a\x09' + '\x09\x09\x09#define' + '\x20texture2D' + 'GradEXT\x20te' + 'xtureGrad\x0a' + '\x09\x09\x09\x09#defin' + 'e\x20texture2' + 'DProjGradE' + 'XT\x20texture' + 'ProjGrad\x0a\x09' + '\x09\x09\x09#define' + '\x20textureCu' + 'beGradEXT\x20' + 'textureGra' + 'd\x0a') : (_0x25835a = '', _0x210949 = '#ifdef\x20GL_' + 'EXT_shader' + '_texture_l' + 'od\x0a\x09\x09\x09\x09\x09#e' + 'xtension\x20G' + 'L_EXT_shad' + 'er_texture' + '_lod\x20:\x20ena' + 'ble\x0a\x09\x09\x09\x09#e' + 'ndif\x0a\x09\x09\x09\x09#' + 'if\x20!define' + 'd(GL_EXT_s' + 'hader_text' + 'ure_lod)\x0a\x09' + '\x09\x09\x09\x09#defin' + 'e\x20texture1' + 'DLodEXT\x20te' + 'xture1D\x0a\x09\x09' + '\x09\x09\x09#define' + '\x20texture2D' + 'LodEXT\x20tex' + 'ture2D\x0a\x09\x09\x09' + '\x09\x09#define\x20' + 'texture2DP' + 'rojLodEXT\x20' + 'texture2DP' + 'roj\x0a\x09\x09\x09\x09\x09#' + 'define\x20tex' + 'ture3DLodE' + 'XT\x20texture' + '3D\x0a\x09\x09\x09\x09\x09#d' + 'efine\x20text' + 'ureCubeLod' + 'EXT\x20textur' + 'eCube\x0a\x09\x09\x09\x09' + '#endif\x0a'), _0x779c15 += '#define\x20MA' + 'X_LIGHT_CO' + 'UNT\x20' + _0x5106c8['maxLightCo' + 'unt'] + '\x0a', _0x779c15 += '#define\x20MA' + 'X_LIGHT_CO' + 'UNT_PER_CL' + 'USTER\x20' + _0x5106c8['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] + '\x0a', _0x779c15 += '#define\x20CL' + 'USTER_X_CO' + 'UNT\x20' + _0x3f2964['x'] + '\x0a', _0x779c15 += '#define\x20CL' + 'USTER_Y_CO' + 'UNT\x20' + _0x3f2964['y'] + '\x0a', _0x779c15 += '#define\x20CL' + 'USTER_Z_CO' + 'UNT\x20' + _0x3f2964['z'] + '\x0a', _0x779c15 += '#define\x20SH' + 'ADER_CAPAI' + 'LITY_LEVEL' + '\x20' + _0x2247ad['SystemUtil' + 's']['_shaderCap' + 'ailityLeve' + 'l'] + '\x0a', _0x285ebe = 0x0;
            for (var _0x45f877 = _0x11c92f['length']; _0x285ebe < _0x45f877; _0x285ebe++) {
                var _0x570d70 = _0x11c92f[_0x285ebe];
                _0x779c15 += '#define\x20' + _0x570d70 + '\x0a', _0xda1f86[_0x570d70] = !0x0;
            }
            var _0x85be44 = this['_VS']['toscript'](_0xda1f86, []), _0x337f0f = '';
            0x0 == _0x85be44[0x0]['indexOf']('#version') && (_0x337f0f = _0x85be44[0x0] + '\x0a', _0x85be44['shift']());
            var _0x5c58f8 = this['_PS']['toscript'](_0xda1f86, []), _0x98473b = '';
            if (0x0 == _0x5c58f8[0x0]['indexOf']('#version') && (_0x98473b = _0x5c58f8[0x0] + '\x0a', _0x5c58f8['shift']()), _0x3159dd = new _0x1c10b8(_0x337f0f + _0x25835a + _0x779c15 + _0x85be44['join']('\x0a'), _0x98473b + _0x210949 + _0x779c15 + _0x5c58f8['join']('\x0a'), this['_owner']['_attribute' + 'Map'] || this['_owner']['_owner']['_attribute' + 'Map'], this['_owner']['_uniformMa' + 'p'] || this['_owner']['_owner']['_uniformMa' + 'p'], this), _0x40751d[_0x42c907] = _0x3159dd, _0x38ffce['debugMode']) {
                var _0x287ab6 = '', _0x412a17 = '';
                for (_0x285ebe = 0x0, _0x45f877 = _0x4fd867; _0x285ebe < _0x45f877; _0x285ebe++)
                    _0x412a17 += _0x285ebe == _0x45f877 - 0x1 ? _0x4c73c9[_0x285ebe] : _0x4c73c9[_0x285ebe] + ',';
                for (_0x285ebe = 0x0, _0x45f877 = _0x5b1110['length']; _0x285ebe < _0x45f877; _0x285ebe++)
                    _0x287ab6 += _0x285ebe == _0x45f877 - 0x1 ? _0x5b1110[_0x285ebe] : _0x5b1110[_0x285ebe] + ',';
                console['log']('%cLayaAir:' + '\x20Shader\x20Co' + 'mpile\x20Info' + 'rmation---' + 'ShaderName' + ':' + this['_owner']['_owner']['_name'] + ('\x20SubShader' + 'Index:') + this['_owner']['_owner']['_subShader' + 's']['indexOf'](this['_owner']) + ('\x20PassIndex' + ':') + this['_owner']['_passes']['indexOf'](this) + ('\x20DefineMas' + 'k:[') + _0x412a17 + (']\x20DefineNa' + 'mes:[') + _0x287ab6 + ']', 'color:gree' + 'n');
            }
            return _0x3159dd;
        }
        ['setTag'](_0x135eb9, _0x21c5f0) {
            _0x21c5f0 ? this['_tags'][_0x135eb9] = _0x21c5f0 : delete this['_tags'][_0x135eb9];
        }
        ['getTag'](_0x19c3a3) {
            return this['_tags'][_0x19c3a3];
        }
    }
    _0x27cd39['_defineStr' + 'ing'] = [], _0x27cd39['_debugDefi' + 'neString'] = [], _0x27cd39['_debugDefi' + 'neMask'] = [];
    class _0x21aa4f {
        constructor(_0x4bff53, _0x5eb543) {
            this['_flags'] = {}, this['_passes'] = [], this['_attribute' + 'Map'] = _0x4bff53, this['_uniformMa' + 'p'] = _0x5eb543;
        }
        ['setFlag'](_0x3c99c0, _0x4d0bd0) {
            _0x4d0bd0 ? this['_flags'][_0x3c99c0] = _0x4d0bd0 : delete this['_flags'][_0x3c99c0];
        }
        ['getFlag'](_0x20f3c7) {
            return this['_flags'][_0x20f3c7];
        }
        ['addShaderP' + 'ass'](_0x3cabe4, _0x5efdeb, _0x5927ca = null, _0x328671 = 'Forward') {
            var _0x58ec89 = new _0x27cd39(this, _0x3cabe4, _0x5efdeb, _0x5927ca);
            return _0x58ec89['_pipelineM' + 'ode'] = _0x328671, this['_passes']['push'](_0x58ec89), _0x58ec89;
        }
    }
    (_0x4b2303 = _0xc55b22['PBRSpecula' + 'rSmoothnes' + 'sSource'] || (_0xc55b22['PBRSpecula' + 'rSmoothnes' + 'sSource'] = {}))[_0x4b2303['SpecularTe' + 'xtureAlpha'] = 0x0] = 'SpecularTe' + 'xtureAlpha', _0x4b2303[_0x4b2303['AlbedoText' + 'ureAlpha'] = 0x1] = 'AlbedoText' + 'ureAlpha';
    class _0x4f1c9a extends _0x3028f9 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PBRSpecula' + 'r'), this['_shaderVal' + 'ues']['setVector'](_0x4f1c9a['SPECULARCO' + 'LOR'], new _0x4cec8f(0.2, 0.2, 0.2, 0x1));
        }
        static ['__init__']() {
            _0x4f1c9a['SHADERDEFI' + 'NE_SPECULA' + 'RGLOSSTEXT' + 'URE'] = _0x38ffce['getDefineB' + 'yName']('SPECULARGL' + 'OSSTEXTURE'), _0x4f1c9a['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA'] = _0x38ffce['getDefineB' + 'yName']('SMOOTHNESS' + 'SOURCE_ALB' + 'EDOTEXTURE' + '_ALPHA');
            var _0x226205 = {
                    'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                    'a_Normal': _0x3fbee7['MESH_NORMA' + 'L0'],
                    'a_Tangent0': _0x3fbee7['MESH_TANGE' + 'NT0'],
                    'a_Texcoord0': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0x3fbee7['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0x3fbee7['MESH_BLEND' + 'INDICES0'],
                    'a_MvpMatrix': _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x5766f3 = {
                    'u_Bones': _0x38ffce['PERIOD_CUS' + 'TOM'],
                    'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_WorldMat': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightMapDirection': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ViewProjection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_AlphaTestValue': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_OcclusionTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_Smoothness': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_SmoothnessScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_occlusionStrength': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecGlossTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecularColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ReflectTexture': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectIntensity': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowBias': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightDirection': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMap': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowParams': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowSplitSpheres': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMatrices': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMapSize': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAr': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAg': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAb': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBr': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBg': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBb': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHC': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectionProbe': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectCubeHDRParams': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x38ffce['PERIOD_SCE' + 'NE']
                }, _0x43b959 = {
                    's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x301a89 = _0x38ffce['add']('PBRSpecula' + 'r'), _0x4fb7ba = new _0x21aa4f(_0x226205, _0x5766f3);
            _0x301a89['addSubShad' + 'er'](_0x4fb7ba), _0x4fb7ba['addShaderP' + 'ass'](_0x2c9dcc, _0x14af9a, _0x43b959, 'Forward'), _0x4fb7ba['addShaderP' + 'ass'](_0x35521e, _0x12d4d3, _0x43b959, 'ShadowCast' + 'er');
        }
        get ['specularTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4f1c9a['SPECULARTE' + 'XTURE']);
        }
        set ['specularTe' + 'xture'](_0x64b941) {
            _0x64b941 ? this['_shaderVal' + 'ues']['addDefine'](_0x4f1c9a['SHADERDEFI' + 'NE_SPECULA' + 'RGLOSSTEXT' + 'URE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4f1c9a['SHADERDEFI' + 'NE_SPECULA' + 'RGLOSSTEXT' + 'URE']), this['_shaderVal' + 'ues']['setTexture'](_0x4f1c9a['SPECULARTE' + 'XTURE'], _0x64b941);
        }
        get ['specularCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4f1c9a['SPECULARCO' + 'LOR']);
        }
        set ['specularCo' + 'lor'](_0x52f4c3) {
            this['_shaderVal' + 'ues']['setVector'](_0x4f1c9a['SPECULARCO' + 'LOR'], _0x52f4c3);
        }
        ['clone']() {
            var _0x264412 = new _0x4f1c9a();
            return this['cloneTo'](_0x264412), _0x264412;
        }
    }
    _0x4f1c9a['SPECULARTE' + 'XTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Specular' + 'Texture'), _0x4f1c9a['SPECULARCO' + 'LOR'] = _0x38ffce['propertyNa' + 'meToID']('u_Specular' + 'Color');
    var _0x1b3917, _0x3abe9d, _0x5df91a = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22Lighting' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'hadow.glsl' + '\x22\x0d\x0a#includ' + 'e\x20\x22PBRFSIn' + 'put.glsl\x22;' + '\x0d\x0a#include' + '\x20\x22LayaPBRB' + 'RDF.glsl\x22;' + '\x0d\x0a#include' + '\x20\x22GlobalIl' + 'lumination' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22P' + 'BRCore.gls' + 'l\x22;\x0d\x0a\x0d\x0avoi' + 'd\x20main()\x0d\x0a' + '{\x0d\x0a\x09fragme' + 'ntForward(' + ');\x0d\x0a}', _0x4c48f7 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dow.glsl\x22\x0d' + '\x0a#include\x20' + '\x22PBRVSInpu' + 't.glsl\x22;\x0d\x0a' + '#include\x20\x22' + 'PBRVertex.' + 'glsl\x22;\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x09ver' + 'texForward' + '();\x0d\x0a\x09gl_P' + 'osition=re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x2c8bc4 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22ShadowCa' + 'sterFS.gls' + 'l\x22\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09gl_Frag' + 'Color=shad' + 'owCasterFr' + 'agment();\x0d' + '\x0a}', _0x978d63 = '#include\x20\x22' + 'ShadowCast' + 'erVS.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tionCS\x20=\x20\x20' + 'shadowCast' + 'erVertex()' + ';\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(positio' + 'nCS);\x0d\x0a}';
    (_0x1b3917 = _0xc55b22['PBRMetalli' + 'cSmoothnes' + 'sSource'] || (_0xc55b22['PBRMetalli' + 'cSmoothnes' + 'sSource'] = {}))[_0x1b3917['MetallicGl' + 'ossTexture' + 'Alpha'] = 0x0] = 'MetallicGl' + 'ossTexture' + 'Alpha', _0x1b3917[_0x1b3917['AlbedoText' + 'ureAlpha'] = 0x1] = 'AlbedoText' + 'ureAlpha';
    class _0x2062f1 extends _0x3028f9 {
        constructor() {
            super(), this['_smoothnes' + 'sSource'] = 0x0, this['setShaderN' + 'ame']('PBR'), this['_shaderVal' + 'ues']['setNumber'](_0x2062f1['METALLIC'], 0x0);
        }
        static ['__init__']() {
            _0x2062f1['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE'] = _0x38ffce['getDefineB' + 'yName']('METALLICGL' + 'OSSTEXTURE'), _0x2062f1['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA'] = _0x38ffce['getDefineB' + 'yName']('SMOOTHNESS' + 'SOURCE_ALB' + 'EDOTEXTURE' + '_ALPHA');
            var _0x28c19d = {
                    'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                    'a_Normal': _0x3fbee7['MESH_NORMA' + 'L0'],
                    'a_Tangent0': _0x3fbee7['MESH_TANGE' + 'NT0'],
                    'a_Texcoord0': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0x3fbee7['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0x3fbee7['MESH_BLEND' + 'INDICES0'],
                    'a_MvpMatrix': _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x697594 = {
                    'u_Bones': _0x38ffce['PERIOD_CUS' + 'TOM'],
                    'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_WorldMat': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightMapDirection': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ViewProjection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_AlphaTestValue': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_AlbedoTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_OcclusionTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_EmissionTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_Smoothness': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_SmoothnessScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_occlusionStrength': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ParallaxScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_MetallicGlossTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_Metallic': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ReflectTexture': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectIntensity': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowBias': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightDirection': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMap': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowParams': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowSplitSpheres': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMatrices': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMapSize': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAr': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAg': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAb': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBr': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBg': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBb': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHC': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectionProbe': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectCubeHDRParams': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x38ffce['PERIOD_SCE' + 'NE']
                }, _0x1cf189 = {
                    's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x42b5e8 = _0x38ffce['add']('PBR'), _0x31364b = new _0x21aa4f(_0x28c19d, _0x697594);
            _0x42b5e8['addSubShad' + 'er'](_0x31364b), _0x31364b['addShaderP' + 'ass'](_0x4c48f7, _0x5df91a, _0x1cf189, 'Forward'), _0x31364b['addShaderP' + 'ass'](_0x978d63, _0x2c8bc4, _0x1cf189, 'ShadowCast' + 'er');
        }
        get ['metallicGl' + 'ossTexture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x2062f1['METALLICGL' + 'OSSTEXTURE']);
        }
        set ['metallicGl' + 'ossTexture'](_0x548ca9) {
            _0x548ca9 ? this['_shaderVal' + 'ues']['addDefine'](_0x2062f1['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2062f1['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE']), this['_shaderVal' + 'ues']['setTexture'](_0x2062f1['METALLICGL' + 'OSSTEXTURE'], _0x548ca9);
        }
        get ['metallic']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x2062f1['METALLIC']);
        }
        set ['metallic'](_0x91b368) {
            this['_shaderVal' + 'ues']['setNumber'](_0x2062f1['METALLIC'], Math['max'](0x0, Math['min'](0x1, _0x91b368)));
        }
        get ['smoothness' + 'Source']() {
            return this['_smoothnes' + 'sSource'];
        }
        set ['smoothness' + 'Source'](_0x36ae9f) {
            _0x36ae9f ? this['_shaderVal' + 'ues']['addDefine'](_0x2062f1['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2062f1['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']), this['_smoothnes' + 'sSource'] = _0x36ae9f;
        }
        ['clone']() {
            var _0x15b2fe = new _0x2062f1();
            return this['cloneTo'](_0x15b2fe), _0x15b2fe;
        }
    }
    _0x2062f1['METALLICGL' + 'OSSTEXTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Metallic' + 'GlossTextu' + 're'), _0x2062f1['METALLIC'] = _0x38ffce['propertyNa' + 'meToID']('u_Metallic');
    class _0x40b2a5 extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('SkyBox'), this['tintColor'] = new _0x4cec8f(0.5, 0.5, 0.5, 0.5), this['exposure'] = 0x1, this['rotation'] = 0x0;
        }
        static ['__initDefi' + 'ne__']() {
        }
        get ['tintColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x40b2a5['TINTCOLOR']);
        }
        set ['tintColor'](_0x1ac755) {
            this['_shaderVal' + 'ues']['setVector'](_0x40b2a5['TINTCOLOR'], _0x1ac755);
        }
        get ['exposure']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x40b2a5['EXPOSURE']);
        }
        set ['exposure'](_0x465193) {
            this['_shaderVal' + 'ues']['setNumber'](_0x40b2a5['EXPOSURE'], _0x465193);
        }
        get ['rotation']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x40b2a5['ROTATION']);
        }
        set ['rotation'](_0x5a6061) {
            this['_shaderVal' + 'ues']['setNumber'](_0x40b2a5['ROTATION'], _0x5a6061);
        }
        get ['textureCub' + 'e']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x40b2a5['TEXTURECUB' + 'E']);
        }
        set ['textureCub' + 'e'](_0xdc5e55) {
            this['_shaderVal' + 'ues']['setTexture'](_0x40b2a5['TEXTURECUB' + 'E'], _0xdc5e55);
        }
        ['clone']() {
            var _0x5d4115 = new _0x40b2a5();
            return this['cloneTo'](_0x5d4115), _0x5d4115;
        }
    }
    _0x40b2a5['TINTCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_TintColo' + 'r'), _0x40b2a5['EXPOSURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Exposure'), _0x40b2a5['ROTATION'] = _0x38ffce['propertyNa' + 'meToID']('u_Rotation'), _0x40b2a5['TEXTURECUB' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_CubeText' + 'ure');
    class _0x3a7709 extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('SkyBoxProc' + 'edural'), this['sunDisk'] = _0x3a7709['SUN_HIGH_Q' + 'UALITY'], this['sunSize'] = 0.04, this['sunSizeCon' + 'vergence'] = 0x5, this['atmosphere' + 'Thickness'] = 0x1, this['skyTint'] = new _0x4cec8f(0.5, 0.5, 0.5, 0x1), this['groundTint'] = new _0x4cec8f(0.369, 0.349, 0.341, 0x1), this['exposure'] = 1.3;
        }
        static ['__initDefi' + 'ne__']() {
            _0x3a7709['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY'] = _0x38ffce['getDefineB' + 'yName']('SUN_HIGH_Q' + 'UALITY'), _0x3a7709['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE'] = _0x38ffce['getDefineB' + 'yName']('SUN_SIMPLE');
        }
        get ['sunDisk']() {
            return this['_sunDisk'];
        }
        set ['sunDisk'](_0x17f1f4) {
            switch (_0x17f1f4) {
            case _0x3a7709['SUN_HIGH_Q' + 'UALITY']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3a7709['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']), this['_shaderVal' + 'ues']['addDefine'](_0x3a7709['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']);
                break;
            case _0x3a7709['SUN_SIMPLE']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3a7709['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']), this['_shaderVal' + 'ues']['addDefine'](_0x3a7709['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']);
                break;
            case _0x3a7709['SUN_NODE']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3a7709['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3a7709['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']);
                break;
            default:
                throw 'SkyBoxProc' + 'eduralMate' + 'rial:\x20unkn' + 'own\x20sun\x20va' + 'lue.';
            }
            this['_sunDisk'] = _0x17f1f4;
        }
        get ['sunSize']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3a7709['SUNSIZE']);
        }
        set ['sunSize'](_0x11bbc6) {
            _0x11bbc6 = Math['min'](Math['max'](0x0, _0x11bbc6), 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3a7709['SUNSIZE'], _0x11bbc6);
        }
        get ['sunSizeCon' + 'vergence']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3a7709['SUNSIZECON' + 'VERGENCE']);
        }
        set ['sunSizeCon' + 'vergence'](_0x586dae) {
            _0x586dae = Math['min'](Math['max'](0x0, _0x586dae), 0x14), this['_shaderVal' + 'ues']['setNumber'](_0x3a7709['SUNSIZECON' + 'VERGENCE'], _0x586dae);
        }
        get ['atmosphere' + 'Thickness']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3a7709['ATMOSPHERE' + 'THICKNESS']);
        }
        set ['atmosphere' + 'Thickness'](_0xad6154) {
            _0xad6154 = Math['min'](Math['max'](0x0, _0xad6154), 0x5), this['_shaderVal' + 'ues']['setNumber'](_0x3a7709['ATMOSPHERE' + 'THICKNESS'], _0xad6154);
        }
        get ['skyTint']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3a7709['SKYTINT']);
        }
        set ['skyTint'](_0x5e4ced) {
            this['_shaderVal' + 'ues']['setVector'](_0x3a7709['SKYTINT'], _0x5e4ced);
        }
        get ['groundTint']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3a7709['GROUNDTINT']);
        }
        set ['groundTint'](_0x562bf8) {
            this['_shaderVal' + 'ues']['setVector'](_0x3a7709['GROUNDTINT'], _0x562bf8);
        }
        get ['exposure']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3a7709['EXPOSURE']);
        }
        set ['exposure'](_0x443079) {
            _0x443079 = Math['min'](Math['max'](0x0, _0x443079), 0x8), this['_shaderVal' + 'ues']['setNumber'](_0x3a7709['EXPOSURE'], _0x443079);
        }
        ['clone']() {
            var _0x255ab4 = new _0x3a7709();
            return this['cloneTo'](_0x255ab4), _0x255ab4;
        }
    }
    _0x3a7709['SUN_NODE'] = 0x0, _0x3a7709['SUN_SIMPLE'] = 0x1, _0x3a7709['SUN_HIGH_Q' + 'UALITY'] = 0x2, _0x3a7709['SUNSIZE'] = _0x38ffce['propertyNa' + 'meToID']('u_SunSize'), _0x3a7709['SUNSIZECON' + 'VERGENCE'] = _0x38ffce['propertyNa' + 'meToID']('u_SunSizeC' + 'onvergence'), _0x3a7709['ATMOSPHERE' + 'THICKNESS'] = _0x38ffce['propertyNa' + 'meToID']('u_Atmosphe' + 'reThicknes' + 's'), _0x3a7709['SKYTINT'] = _0x38ffce['propertyNa' + 'meToID']('u_SkyTint'), _0x3a7709['GROUNDTINT'] = _0x38ffce['propertyNa' + 'meToID']('u_GroundTi' + 'nt'), _0x3a7709['EXPOSURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Exposure');
    class _0x112bdf extends _0x57c0e0 {
        constructor() {
            super(), this['_albedoCol' + 'or'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['_albedoInt' + 'ensity'] = 0x1, this['_enableVer' + 'texColor'] = !0x1, this['setShaderN' + 'ame']('Unlit'), this['_shaderVal' + 'ues']['setVector'](_0x112bdf['ALBEDOCOLO' + 'R'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x112bdf['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x112bdf['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x38ffce['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0x112bdf['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x38ffce['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x112bdf['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR'] = _0x38ffce['getDefineB' + 'yName']('ENABLEVERT' + 'EXCOLOR');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x1ce94b) {
            this['_albedoCol' + 'or']['x'] = _0x1ce94b, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x15a59d) {
            this['_albedoCol' + 'or']['y'] = _0x15a59d, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x45fdd8) {
            this['_albedoCol' + 'or']['z'] = _0x45fdd8, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x4b021f) {
            this['_albedoCol' + 'or']['w'] = _0x4b021f, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_AlbedoInt' + 'ensity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['_AlbedoInt' + 'ensity'](_0x220575) {
            if (this['_albedoInt' + 'ensity'] !== _0x220575) {
                var _0x27fac4 = this['_shaderVal' + 'ues']['getVector'](_0x112bdf['ALBEDOCOLO' + 'R']);
                _0x4cec8f['scale'](this['_albedoCol' + 'or'], _0x220575, _0x27fac4), this['_albedoInt' + 'ensity'] = _0x220575, this['_shaderVal' + 'ues']['setVector'](_0x112bdf['ALBEDOCOLO' + 'R'], _0x27fac4);
            }
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x2bb634) {
            var _0x18addf = this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET']);
            _0x18addf['x'] = _0x2bb634, this['tilingOffs' + 'et'] = _0x18addf;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x37ce62) {
            var _0x4695bd = this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET']);
            _0x4695bd['y'] = _0x37ce62, this['tilingOffs' + 'et'] = _0x4695bd;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x5c63c9) {
            var _0x3afacf = this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET']);
            _0x3afacf['z'] = _0x5c63c9, this['tilingOffs' + 'et'] = _0x3afacf;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x5c3629) {
            var _0x57250f = this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET']);
            _0x57250f['w'] = _0x5c3629, this['tilingOffs' + 'et'] = _0x57250f;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0xae16f0) {
            this['alphaTestV' + 'alue'] = _0xae16f0;
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x55d896) {
            this['_ColorR'] = _0x55d896;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x436f06) {
            this['_ColorG'] = _0x436f06;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x5b0b0e) {
            this['_ColorB'] = _0x5b0b0e;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0xc0726a) {
            this['_ColorA'] = _0xc0726a;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x37222a) {
            var _0x38887c = this['_shaderVal' + 'ues']['getVector'](_0x112bdf['ALBEDOCOLO' + 'R']);
            _0x4cec8f['scale'](_0x37222a, this['_albedoInt' + 'ensity'], _0x38887c), this['_albedoCol' + 'or'] = _0x37222a, this['_shaderVal' + 'ues']['setVector'](_0x112bdf['ALBEDOCOLO' + 'R'], _0x38887c);
        }
        get ['albedoInte' + 'nsity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['albedoInte' + 'nsity'](_0x3984b6) {
            this['_AlbedoInt' + 'ensity'] = _0x3984b6;
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x112bdf['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x19a76f) {
            _0x19a76f ? this['_shaderVal' + 'ues']['addDefine'](_0x112bdf['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x112bdf['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x112bdf['ALBEDOTEXT' + 'URE'], _0x19a76f);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x491589) {
            this['_MainTex_S' + 'TX'] = _0x491589;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x2325c0) {
            this['_MainTex_S' + 'TY'] = _0x2325c0;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x3ca48d) {
            this['_MainTex_S' + 'TZ'] = _0x3ca48d;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x309ebc) {
            this['_MainTex_S' + 'TW'] = _0x309ebc;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x112bdf['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x4f8344) {
            _0x4f8344 && (0x1 != _0x4f8344['x'] || 0x1 != _0x4f8344['y'] || 0x0 != _0x4f8344['z'] || 0x0 != _0x4f8344['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x112bdf['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x112bdf['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x112bdf['TILINGOFFS' + 'ET'], _0x4f8344);
        }
        get ['enableVert' + 'exColor']() {
            return this['_enableVer' + 'texColor'];
        }
        set ['enableVert' + 'exColor'](_0x15b806) {
            this['_enableVer' + 'texColor'] = _0x15b806, _0x15b806 ? this['_shaderVal' + 'ues']['addDefine'](_0x112bdf['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x112bdf['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
        }
        set ['renderMode'](_0x389355) {
            switch (_0x389355) {
            case _0x112bdf['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            case _0x112bdf['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            case _0x112bdf['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_BACK'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'];
                break;
            default:
                throw new Error('UnlitMater' + 'ial\x20:\x20rend' + 'erMode\x20val' + 'ue\x20error.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x112bdf['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x25222e) {
            this['_shaderVal' + 'ues']['setBool'](_0x112bdf['DEPTH_WRIT' + 'E'], _0x25222e);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x112bdf['CULL']);
        }
        set ['cull'](_0x21b752) {
            this['_shaderVal' + 'ues']['setInt'](_0x112bdf['CULL'], _0x21b752);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x112bdf['BLEND']);
        }
        set ['blend'](_0x549119) {
            this['_shaderVal' + 'ues']['setInt'](_0x112bdf['BLEND'], _0x549119);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x112bdf['BLEND_SRC']);
        }
        set ['blendSrc'](_0x4e2800) {
            this['_shaderVal' + 'ues']['setInt'](_0x112bdf['BLEND_SRC'], _0x4e2800);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x112bdf['BLEND_DST']);
        }
        set ['blendDst'](_0x32ab64) {
            this['_shaderVal' + 'ues']['setInt'](_0x112bdf['BLEND_DST'], _0x32ab64);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x112bdf['DEPTH_TEST']);
        }
        set ['depthTest'](_0x56da24) {
            this['_shaderVal' + 'ues']['setInt'](_0x112bdf['DEPTH_TEST'], _0x56da24);
        }
        ['clone']() {
            var _0x1caba9 = new _0x112bdf();
            return this['cloneTo'](_0x1caba9), _0x1caba9;
        }
    }
    _0x112bdf['RENDERMODE' + '_OPAQUE'] = 0x0, _0x112bdf['RENDERMODE' + '_CUTOUT'] = 0x1, _0x112bdf['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x112bdf['RENDERMODE' + '_ADDTIVE'] = 0x3, _0x112bdf['ALBEDOTEXT' + 'URE'] = _0x38ffce['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x112bdf['ALBEDOCOLO' + 'R'] = _0x38ffce['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x112bdf['TILINGOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x112bdf['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x112bdf['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x112bdf['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x112bdf['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x112bdf['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x112bdf['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x19a695 extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('WaterPrima' + 'ry'), this['_shaderVal' + 'ues']['setVector'](_0x19a695['HORIZONCOL' + 'OR'], new _0x4cec8f(0.172, 0.463, 0.435, 0x0)), this['_shaderVal' + 'ues']['setNumber'](_0x19a695['WAVESCALE'], 0.15), this['_shaderVal' + 'ues']['setVector'](_0x19a695['WAVESPEED'], new _0x4cec8f(0x13, 0x9, -0x10, -0x7));
        }
        static ['__initDefi' + 'ne__']() {
            _0x19a695['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x38ffce['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x19a695['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x38ffce['getDefineB' + 'yName']('NORMALTEXT' + 'URE');
        }
        get ['horizonCol' + 'or']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x19a695['HORIZONCOL' + 'OR']);
        }
        set ['horizonCol' + 'or'](_0x2149fa) {
            this['_shaderVal' + 'ues']['setVector'](_0x19a695['HORIZONCOL' + 'OR'], _0x2149fa);
        }
        get ['mainTextur' + 'e']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x19a695['MAINTEXTUR' + 'E']);
        }
        set ['mainTextur' + 'e'](_0x419f45) {
            _0x419f45 ? this['_shaderVal' + 'ues']['addDefine'](_0x19a695['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x19a695['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']), this['_shaderVal' + 'ues']['setTexture'](_0x19a695['MAINTEXTUR' + 'E'], _0x419f45);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x19a695['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x3443ec) {
            _0x3443ec ? this['_shaderVal' + 'ues']['addDefine'](_0x19a695['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x19a695['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x19a695['NORMALTEXT' + 'URE'], _0x3443ec);
        }
        get ['waveScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x19a695['WAVESCALE']);
        }
        set ['waveScale'](_0x574adb) {
            this['_shaderVal' + 'ues']['setNumber'](_0x19a695['WAVESCALE'], _0x574adb);
        }
        get ['waveSpeed']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x19a695['WAVESPEED']);
        }
        set ['waveSpeed'](_0x7cf5f3) {
            this['_shaderVal' + 'ues']['setVector'](_0x19a695['WAVESPEED'], _0x7cf5f3);
        }
        ['clone']() {
            var _0x5e2fad = new _0x19a695();
            return this['cloneTo'](_0x5e2fad), _0x5e2fad;
        }
    }
    _0x19a695['HORIZONCOL' + 'OR'] = _0x38ffce['propertyNa' + 'meToID']('u_HorizonC' + 'olor'), _0x19a695['MAINTEXTUR' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_MainText' + 'ure'), _0x19a695['NORMALTEXT' + 'URE'] = _0x38ffce['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x19a695['WAVESCALE'] = _0x38ffce['propertyNa' + 'meToID']('u_WaveScal' + 'e'), _0x19a695['WAVESPEED'] = _0x38ffce['propertyNa' + 'meToID']('u_WaveSpee' + 'd');
    class _0x3303a1 {
    }
    class _0x428a80 extends _0xc4e4b9 {
        constructor(_0x3a1826) {
            super(_0x3a1826), this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !0x1, this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x334e9d();
        }
        ['_createRen' + 'derElement']() {
            return new _0x19ed1f();
        }
        ['_onMeshCha' + 'nge'](_0xa03f9) {
            if (_0xa03f9) {
                var _0x11827d = _0xa03f9['subMeshCou' + 'nt'];
                this['_renderEle' + 'ments']['length'] = _0x11827d;
                for (var _0x4e1cf7 = 0x0; _0x4e1cf7 < _0x11827d; _0x4e1cf7++) {
                    var _0x1ca4f4 = this['_renderEle' + 'ments'][_0x4e1cf7];
                    if (!_0x1ca4f4) {
                        var _0x56e48c = this['sharedMate' + 'rials'][_0x4e1cf7];
                        (_0x1ca4f4 = this['_renderEle' + 'ments'][_0x4e1cf7] = this['_createRen' + 'derElement']())['setTransfo' + 'rm'](this['_owner']['_transform']), _0x1ca4f4['render'] = this, _0x1ca4f4['material'] = _0x56e48c || _0x26565b['defaultMat' + 'erial'];
                    }
                    _0x1ca4f4['setGeometr' + 'y'](_0xa03f9['getSubMesh'](_0x4e1cf7));
                }
            } else
                this['_renderEle' + 'ments']['length'] = 0x0;
            this['_boundsCha' + 'nge'] = !0x0;
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x4c23c8 = this['_owner']['meshFilter']['sharedMesh'];
            if (_0x4c23c8) {
                var _0x55b60e = this['_owner']['transform']['worldMatri' + 'x'];
                _0x4c23c8['bounds']['_tranform'](_0x55b60e, this['_bounds']);
            }
            if (_0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x8dcb1b = this['_bounds']['getMin'](), _0xf96328 = this['_bounds']['getMax'](), _0x47722f = _0x5da8ae['_cullingBu' + 'ffer'];
                _0x47722f[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x8dcb1b['x'], _0x47722f[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x8dcb1b['y'], _0x47722f[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x8dcb1b['z'], _0x47722f[this['_cullingBu' + 'fferIndex'] + 0x4] = _0xf96328['x'], _0x47722f[this['_cullingBu' + 'fferIndex'] + 0x5] = _0xf96328['y'], _0x47722f[this['_cullingBu' + 'fferIndex'] + 0x6] = _0xf96328['z'];
            }
        }
        ['_needRende' + 'r'](_0x48ec9b, _0x1ad639) {
            return !_0x48ec9b || _0x48ec9b['intersects'](this['bounds']['_getBoundB' + 'ox']());
        }
        ['_renderUpd' + 'ate'](_0x250c2c, _0x16e13f) {
            this['_applyLigh' + 'tMapParams']();
            var _0x3390f2 = _0x250c2c['renderElem' + 'ent'];
            switch (_0x3390f2['renderType']) {
            case _0x978ca7['RENDERTYPE' + '_NORMAL']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x16e13f['worldMatri' + 'x']);
                break;
            case _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH']:
                _0x16e13f ? this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x16e13f['worldMatri' + 'x']) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x334e9d['DEFAULT']), this['_shaderVal' + 'ues']['hasDefine'](_0x3303a1['SHADERDEFI' + 'NE_UV1']) ? this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !0x1 : (this['_shaderVal' + 'ues']['addDefine'](_0x3303a1['SHADERDEFI' + 'NE_UV1']), this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !0x0), this['_shaderVal' + 'ues']['setVector'](_0x333e4a['LIGHTMAPSC' + 'ALEOFFSET'], _0xc4e4b9['_defaultLi' + 'ghtmapScal' + 'eOffset']);
                break;
            case _0x978ca7['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x334e9d['DEFAULT']);
                break;
            case _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                for (var _0x5b8156 = _0x5e7887['instance']['instanceWo' + 'rldMatrixD' + 'ata'], _0x4e4685 = _0x3390f2['instanceBa' + 'tchElement' + 'List'], _0x1c35d4 = _0x4e4685['elements'], _0x96a14e = _0x4e4685['length'], _0x107edb = 0x0; _0x107edb < _0x96a14e; _0x107edb++)
                    _0x5b8156['set'](_0x1c35d4[_0x107edb]['_transform']['worldMatri' + 'x']['elements'], 0x10 * _0x107edb);
                var _0x55ec9e = _0x5e7887['instance']['instanceWo' + 'rldMatrixB' + 'uffer'];
                _0x55ec9e['orphanStor' + 'age'](), _0x55ec9e['setData'](_0x5b8156['buffer'], 0x0, 0x0, 0x10 * _0x96a14e * 0x4), this['_shaderVal' + 'ues']['addDefine'](_0x3303a1['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
            }
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x5f52b8, _0x5c46c5) {
            var _0x26afd7 = _0x5f52b8['projection' + 'ViewMatrix'];
            if (_0x26afd7) {
                var _0x5db5db = _0x5f52b8['renderElem' + 'ent'];
                switch (_0x5db5db['renderType']) {
                case _0x978ca7['RENDERTYPE' + '_NORMAL']:
                case _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH']:
                case _0x978ca7['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                    _0x5c46c5 ? (_0x334e9d['multiply'](_0x26afd7, _0x5c46c5['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix'])) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], _0x26afd7);
                    break;
                case _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                    for (var _0x1a7f40 = _0x5e7887['instance']['instanceMV' + 'PMatrixDat' + 'a'], _0x2657c1 = _0x5db5db['instanceBa' + 'tchElement' + 'List'], _0x21f655 = _0x2657c1['elements'], _0x2e057d = _0x2657c1['length'], _0x4e673d = 0x0; _0x4e673d < _0x2e057d; _0x4e673d++) {
                        var _0x2d5e19 = _0x21f655[_0x4e673d]['_transform']['worldMatri' + 'x'];
                        _0x101904['mulMatrixB' + 'yArray'](_0x26afd7['elements'], 0x0, _0x2d5e19['elements'], 0x0, _0x1a7f40, 0x10 * _0x4e673d);
                    }
                    var _0x2dffa4 = _0x5e7887['instance']['instanceMV' + 'PMatrixBuf' + 'fer'];
                    _0x2dffa4['orphanStor' + 'age'](), _0x2dffa4['setData'](_0x1a7f40['buffer'], 0x0, 0x0, 0x10 * _0x2e057d * 0x4);
                }
            }
        }
        ['_revertBat' + 'chRenderUp' + 'date'](_0x3425a3) {
            switch (_0x3425a3['renderElem' + 'ent']['renderType']) {
            case _0x978ca7['RENDERTYPE' + '_STATICBAT' + 'CH']:
                this['_revertSta' + 'ticBatchDe' + 'fineUV1'] && this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3303a1['SHADERDEFI' + 'NE_UV1']), this['_shaderVal' + 'ues']['setVector'](_0x333e4a['LIGHTMAPSC' + 'ALEOFFSET'], this['lightmapSc' + 'aleOffset']);
                break;
            case _0x978ca7['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3303a1['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
            }
        }
        ['_destroy']() {
            this['_isPartOfS' + 'taticBatch'] && _0x55bbc5['instance']['_removeRen' + 'derSprite'](this['_owner']), super['_destroy']();
        }
    }
    class _0x1a6b8b {
        constructor(_0x44bd47) {
            this['_owner'] = _0x44bd47;
        }
        get ['sharedMesh']() {
            return this['_sharedMes' + 'h'];
        }
        set ['sharedMesh'](_0x4a85cf) {
            if (this['_sharedMes' + 'h'] !== _0x4a85cf) {
                var _0x71f917 = this['_owner']['_render']['_shaderVal' + 'ues'], _0x569cde = this['_sharedMes' + 'h'];
                if (_0x569cde) {
                    _0x569cde['_removeRef' + 'erence'](), this['_getMeshDe' + 'fine'](_0x569cde, _0x1a6b8b['_meshVerti' + 'ceDefine']);
                    for (var _0x30eaca = 0x0, _0x824044 = _0x1a6b8b['_meshVerti' + 'ceDefine']['length']; _0x30eaca < _0x824044; _0x30eaca++)
                        _0x71f917['removeDefi' + 'ne'](_0x1a6b8b['_meshVerti' + 'ceDefine'][_0x30eaca]);
                }
                if (_0x4a85cf) {
                    _0x4a85cf['_addRefere' + 'nce'](), this['_getMeshDe' + 'fine'](_0x4a85cf, _0x1a6b8b['_meshVerti' + 'ceDefine']);
                    for (_0x30eaca = 0x0, _0x824044 = _0x1a6b8b['_meshVerti' + 'ceDefine']['length']; _0x30eaca < _0x824044; _0x30eaca++)
                        _0x71f917['addDefine'](_0x1a6b8b['_meshVerti' + 'ceDefine'][_0x30eaca]);
                }
                this['_owner']['_render']['_onMeshCha' + 'nge'](_0x4a85cf), this['_sharedMes' + 'h'] = _0x4a85cf;
            }
        }
        ['_getMeshDe' + 'fine'](_0x29bf2a, _0x30f21a) {
            _0x30f21a['length'] = 0x0;
            for (var _0x308f2f = 0x0, _0x415775 = _0x29bf2a['_subMeshes']['length']; _0x308f2f < _0x415775; _0x308f2f++)
                for (var _0x55a3f9 = _0x29bf2a['getSubMesh'](_0x308f2f)['_vertexBuf' + 'fer']['_vertexDec' + 'laration']['_vertexEle' + 'ments'], _0x120bb2 = 0x0, _0x3a2176 = _0x55a3f9['length']; _0x120bb2 < _0x3a2176; _0x120bb2++) {
                    switch (_0x55a3f9[_0x120bb2]['_elementUs' + 'age']) {
                    case _0x3fbee7['MESH_COLOR' + '0']:
                        _0x30f21a['push'](_0x3303a1['SHADERDEFI' + 'NE_COLOR']);
                        break;
                    case _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                        _0x30f21a['push'](_0x3303a1['SHADERDEFI' + 'NE_UV0']);
                        break;
                    case _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                        _0x30f21a['push'](_0x3303a1['SHADERDEFI' + 'NE_UV1']);
                    }
                }
        }
        ['destroy']() {
            this['_owner'] = null, this['_sharedMes' + 'h'] && (this['_sharedMes' + 'h']['_removeRef' + 'erence'](), this['_sharedMes' + 'h'] = null);
        }
    }
    _0x1a6b8b['_meshVerti' + 'ceDefine'] = [];
    class _0x57c611 extends _0x25a854 {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x145b1e();
            var _0x20d7ff = _0x2247ad['LayaGL']['instance'], _0x513678 = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,COLO' + 'R,UV,UV1,T' + 'ANGENT')['vertexStri' + 'de'] * _0x57c611['maxIndices' + 'Count'];
            this['_vertices'] = new Float32Array(_0x513678 / 0x4), this['_vertexBuf' + 'fer'] = new _0x26d078(_0x513678, _0x20d7ff['DYNAMIC_DR' + 'AW']), this['_indices'] = new Int16Array(_0x57c611['maxIndices' + 'Count']), this['_indexBuff' + 'er'] = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], this['_indices']['length'], _0x20d7ff['DYNAMIC_DR' + 'AW']);
            var _0x147e51 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x2247ad['Resource']['_addMemory'](_0x147e51, _0x147e51);
        }
        static ['__init__']() {
            _0x57c611['instance'] = new _0x57c611();
        }
        ['_getBatchV' + 'ertices'](_0x3065de, _0x2bc4e3, _0xf4156, _0x282609, _0x56cbe0, _0x26258f) {
            var _0x3c7f29 = _0x3065de['vertexStri' + 'de'] / 0x4, _0x536770 = _0x26258f['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x51b02b = (_0x56cbe0['render']['lightmapSc' + 'aleOffset'], _0x56cbe0['_dynamicMu' + 'ltiSubMesh']), _0x3027eb = _0x56cbe0['_dynamicVe' + 'rtexCount'];
            _0x56cbe0['_computeWo' + 'rldPositio' + 'nsAndNorma' + 'ls'](this['_positionO' + 'ffset'], this['_normalOff' + 'set'], _0x51b02b, _0x3027eb);
            for (var _0x44ac21 = _0x56cbe0['_dynamicWo' + 'rldPositio' + 'ns'], _0x3b60f = _0x56cbe0['_dynamicWo' + 'rldNormals'], _0x4418da = _0x26258f['_indices'], _0x464354 = 0x0; _0x464354 < _0x3027eb; _0x464354++) {
                var _0x384a71 = (_0x51b02b ? _0x4418da[_0x464354] : _0x464354) * _0x3c7f29, _0x371dd5 = (_0x464354 + _0xf4156) * _0x3c7f29, _0xa9e6f7 = 0x3 * _0x464354, _0x304e67 = _0x371dd5 + this['_positionO' + 'ffset'];
                _0x2bc4e3[_0x304e67] = _0x44ac21[_0xa9e6f7], _0x2bc4e3[_0x304e67 + 0x1] = _0x44ac21[_0xa9e6f7 + 0x1], _0x2bc4e3[_0x304e67 + 0x2] = _0x44ac21[_0xa9e6f7 + 0x2], -0x1 !== this['_normalOff' + 'set'] && (_0x2bc4e3[_0x304e67 = _0x371dd5 + this['_normalOff' + 'set']] = _0x3b60f[_0xa9e6f7], _0x2bc4e3[_0x304e67 + 0x1] = _0x3b60f[_0xa9e6f7 + 0x1], _0x2bc4e3[_0x304e67 + 0x2] = _0x3b60f[_0xa9e6f7 + 0x2]), -0x1 !== this['_colorOffs' + 'et'] && (_0x304e67 = _0x371dd5 + this['_colorOffs' + 'et'], _0xa9e6f7 = _0x384a71 + this['_colorOffs' + 'et'], _0x2bc4e3[_0x304e67] = _0x536770[_0xa9e6f7], _0x2bc4e3[_0x304e67 + 0x1] = _0x536770[_0xa9e6f7 + 0x1], _0x2bc4e3[_0x304e67 + 0x2] = _0x536770[_0xa9e6f7 + 0x2], _0x2bc4e3[_0x304e67 + 0x3] = _0x536770[_0xa9e6f7 + 0x3]), -0x1 !== this['_uv0Offset'] && (_0x304e67 = _0x371dd5 + this['_uv0Offset'], _0xa9e6f7 = _0x384a71 + this['_uv0Offset'], _0x2bc4e3[_0x304e67] = _0x536770[_0xa9e6f7], _0x2bc4e3[_0x304e67 + 0x1] = _0x536770[_0xa9e6f7 + 0x1]), -0x1 !== this['_sTangentO' + 'ffset'] && (_0x304e67 = _0x371dd5 + this['_sTangentO' + 'ffset'], _0xa9e6f7 = _0x384a71 + this['_sTangentO' + 'ffset'], _0x2bc4e3[_0x304e67] = _0x536770[_0xa9e6f7], _0x2bc4e3[_0x304e67 + 0x1] = _0x536770[_0xa9e6f7 + 0x1], _0x2bc4e3[_0x304e67 + 0x2] = _0x536770[_0xa9e6f7 + 0x2], _0x2bc4e3[_0x304e67 + 0x3] = _0x536770[_0xa9e6f7 + 0x3], _0x304e67 = _0x371dd5 + this['_sTangentO' + 'ffset'], _0xa9e6f7 = _0x384a71 + this['_sTangentO' + 'ffset'], _0x2bc4e3[_0x304e67] = _0x536770[_0xa9e6f7], _0x2bc4e3[_0x304e67 + 0x1] = _0x536770[_0xa9e6f7 + 0x1], _0x2bc4e3[_0x304e67 + 0x2] = _0x536770[_0xa9e6f7 + 0x2], _0x2bc4e3[_0x304e67 + 0x3] = _0x536770[_0xa9e6f7 + 0x3]);
            }
        }
        ['_getBatchI' + 'ndices'](_0x84bb26, _0xd44b, _0x3403ae, _0xc4de96, _0x4629c7, _0x5dc229) {
            var _0x13cc7e, _0x5912d6, _0xd21541, _0x428b73 = _0x4629c7['_indices'], _0x3d3adf = _0xc4de96['_isFrontFa' + 'ceInvert'];
            if (_0x5dc229) {
                if (_0x3d3adf)
                    for (_0x13cc7e = 0x0, _0x5912d6 = _0x428b73['length']; _0x13cc7e < _0x5912d6; _0x13cc7e += 0x3) {
                        var _0x5be9cf = _0x3403ae + _0x13cc7e;
                        _0x84bb26[_0xd21541 = _0xd44b + _0x13cc7e] = _0x5be9cf, _0x84bb26[_0xd21541 + 0x1] = _0x5be9cf + 0x2, _0x84bb26[_0xd21541 + 0x2] = _0x5be9cf + 0x1;
                    }
                else {
                    for (_0x13cc7e = 0x0, _0x5912d6 = _0x428b73['length']; _0x13cc7e < _0x5912d6; _0x13cc7e += 0x3)
                        _0x5be9cf = _0x3403ae + _0x13cc7e, _0x84bb26[_0xd21541 = _0xd44b + _0x13cc7e] = _0x5be9cf, _0x84bb26[_0xd21541 + 0x1] = _0x5be9cf + 0x1, _0x84bb26[_0xd21541 + 0x2] = _0x5be9cf + 0x2;
                }
            } else {
                if (_0x3d3adf) {
                    for (_0x13cc7e = 0x0, _0x5912d6 = _0x428b73['length']; _0x13cc7e < _0x5912d6; _0x13cc7e += 0x3)
                        _0x84bb26[_0xd21541 = _0xd44b + _0x13cc7e] = _0x3403ae + _0x428b73[_0x13cc7e], _0x84bb26[_0xd21541 + 0x1] = _0x3403ae + _0x428b73[_0x13cc7e + 0x2], _0x84bb26[_0xd21541 + 0x2] = _0x3403ae + _0x428b73[_0x13cc7e + 0x1];
                } else {
                    for (_0x13cc7e = 0x0, _0x5912d6 = _0x428b73['length']; _0x13cc7e < _0x5912d6; _0x13cc7e += 0x3)
                        _0x84bb26[_0xd21541 = _0xd44b + _0x13cc7e] = _0x3403ae + _0x428b73[_0x13cc7e], _0x84bb26[_0xd21541 + 0x1] = _0x3403ae + _0x428b73[_0x13cc7e + 0x1], _0x84bb26[_0xd21541 + 0x2] = _0x3403ae + _0x428b73[_0x13cc7e + 0x2];
                }
            }
        }
        ['_flush'](_0x527fb2, _0x3e8124) {
            var _0x3f08e3 = _0x2247ad['LayaGL']['instance'];
            this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, _0x527fb2 * this['_bufferSta' + 'te']['vertexDecl' + 'aration']['vertexStri' + 'de']), this['_indexBuff' + 'er']['setData'](this['_indices'], 0x0, 0x0, _0x3e8124), _0x3f08e3['drawElemen' + 'ts'](_0x3f08e3['TRIANGLES'], _0x3e8124, _0x3f08e3['UNSIGNED_S' + 'HORT'], 0x0);
        }
        ['_prepareRe' + 'nder'](_0x577914) {
            var _0x2857e6 = _0x577914['renderElem' + 'ent']['vertexBatc' + 'hVertexDec' + 'laration'];
            this['_bufferSta' + 'te'] = _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager']['instance']['_getBuffer' + 'State'](_0x2857e6), this['_positionO' + 'ffset'] = _0x2857e6['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_POSIT' + 'ION0'])['_offset'] / 0x4;
            var _0x325814 = _0x2857e6['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_NORMA' + 'L0']);
            this['_normalOff' + 'set'] = _0x325814 ? _0x325814['_offset'] / 0x4 : -0x1;
            var _0x15350b = _0x2857e6['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_COLOR' + '0']);
            this['_colorOffs' + 'et'] = _0x15350b ? _0x15350b['_offset'] / 0x4 : -0x1;
            var _0x15937d = _0x2857e6['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
            this['_uv0Offset'] = _0x15937d ? _0x15937d['_offset'] / 0x4 : -0x1;
            var _0x32e0ef = _0x2857e6['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
            this['_uv1Offset'] = _0x32e0ef ? _0x32e0ef['_offset'] / 0x4 : -0x1;
            var _0x13ba8d = _0x2857e6['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TANGE' + 'NT0']);
            return this['_sTangentO' + 'ffset'] = _0x13ba8d ? _0x13ba8d['_offset'] / 0x4 : -0x1, !0x0;
        }
        ['_render'](_0x56ab18) {
            this['_bufferSta' + 'te']['bind']();
            for (var _0x6be9d1 = _0x56ab18['renderElem' + 'ent'], _0x3799cd = _0x6be9d1['vertexBatc' + 'hVertexDec' + 'laration'], _0x35c64f = _0x6be9d1['vertexBatc' + 'hElementLi' + 'st'], _0x444950 = 0x0, _0x314653 = 0x0, _0x424944 = (_0x3799cd['vertexStri' + 'de'], 0x0), _0x15540a = _0x35c64f['length'], _0x58373a = _0x35c64f['elements'], _0x36a3c7 = 0x0; _0x36a3c7 < _0x15540a; _0x36a3c7++) {
                var _0x411bc3 = _0x58373a[_0x36a3c7], _0x50584f = _0x411bc3['_geometry'], _0x42db56 = _0x50584f['_indexCoun' + 't'];
                _0x314653 + _0x42db56 > _0x57c611['maxIndices' + 'Count'] && (this['_flush'](_0x444950, _0x314653), _0x424944++, _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x314653 / 0x3, _0x444950 = _0x314653 = 0x0);
                var _0x212e2d = _0x411bc3['_transform'];
                this['_getBatchV' + 'ertices'](_0x3799cd, this['_vertices'], _0x444950, _0x212e2d, _0x411bc3, _0x50584f), this['_getBatchI' + 'ndices'](this['_indices'], _0x314653, _0x444950, _0x212e2d, _0x50584f, _0x411bc3['_dynamicMu' + 'ltiSubMesh']), _0x444950 += _0x411bc3['_dynamicVe' + 'rtexCount'], _0x314653 += _0x42db56;
            }
            this['_flush'](_0x444950, _0x314653), _0x424944++, _0x2247ad['Stat']['renderBatc' + 'hes'] += _0x424944, _0x2247ad['Stat']['savedRende' + 'rBatches'] += _0x15540a - _0x424944, _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x314653 / 0x3;
        }
    }
    _0x57c611['maxAllowVe' + 'rtexCount'] = 0xa, _0x57c611['maxAllowAt' + 'tribueCoun' + 't'] = 0x384, _0x57c611['maxIndices' + 'Count'] = 0x7d00;
    class _0x24a344 extends _0xfb8b43 {
        constructor() {
            super(), this['_instanceB' + 'atchOpaque' + 'Marks'] = [], this['_vertexBat' + 'chOpaqueMa' + 'rks'] = [], this['_cacheBuff' + 'erStates'] = [], this['_updateCou' + 'ntMark'] = 0x0;
        }
        ['getInstanc' + 'eBatchOpaq' + 'uaMark'](_0x566c98, _0x46d2da, _0x2c55da, _0x4e49cd) {
            var _0x2441d6 = this['_instanceB' + 'atchOpaque' + 'Marks'][_0x566c98 ? 0x0 : 0x1] || (this['_instanceB' + 'atchOpaque' + 'Marks'][_0x566c98 ? 0x0 : 0x1] = []), _0x288b1c = _0x2441d6[_0x46d2da] || (_0x2441d6[_0x46d2da] = []), _0x5089a9 = _0x288b1c[_0x2c55da] || (_0x288b1c[_0x2c55da] = []);
            return _0x5089a9[_0x4e49cd ? 0x1 : 0x0] || (_0x5089a9[_0x4e49cd ? 0x1 : 0x0] = new _0x5e821c());
        }
        ['getVertexB' + 'atchOpaqua' + 'Mark'](_0x10c8b3, _0x4b4b6c, _0x36ee1e, _0x338032) {
            var _0xa67996 = this['_vertexBat' + 'chOpaqueMa' + 'rks'][_0x10c8b3] || (this['_vertexBat' + 'chOpaqueMa' + 'rks'][_0x10c8b3] = []), _0x127377 = _0xa67996[_0x4b4b6c ? 0x0 : 0x1] || (_0xa67996[_0x4b4b6c ? 0x0 : 0x1] = []), _0xda232f = _0x127377[_0x36ee1e] || (_0x127377[_0x36ee1e] = []);
            return _0xda232f[_0x338032] || (_0xda232f[_0x338032] = new _0x5e821c());
        }
        ['_getBuffer' + 'State'](_0x55b1ce) {
            var _0x11b75f = this['_cacheBuff' + 'erStates'][_0x55b1ce['id']];
            if (!_0x11b75f) {
                var _0x34b59f = _0x57c611['instance'];
                (_0x11b75f = new _0x145b1e())['bind']();
                var _0x771b53 = _0x34b59f['_vertexBuf' + 'fer'];
                _0x771b53['vertexDecl' + 'aration'] = _0x55b1ce, _0x11b75f['applyVerte' + 'xBuffer'](_0x771b53), _0x11b75f['applyIndex' + 'Buffer'](_0x34b59f['_indexBuff' + 'er']), _0x11b75f['unBind'](), this['_cacheBuff' + 'erStates'][_0x55b1ce['id']] = _0x11b75f;
            }
            return _0x11b75f;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            var _0x5cae8a = this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex']++];
            return _0x5cae8a || (_0x5cae8a = new _0x19ed1f(), this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex'] - 0x1] = _0x5cae8a, _0x5cae8a['vertexBatc' + 'hElementLi' + 'st'] = new _0x24ac1f(), _0x5cae8a['instanceBa' + 'tchElement' + 'List'] = new _0x24ac1f()), _0x5cae8a;
        }
        ['_clear']() {
            super['_clear'](), this['_updateCou' + 'ntMark']++;
        }
    }
    _0x24a344['instance'] = new _0x24a344();
    class _0x32da4a extends _0x333e4a {
        static ['__init__']() {
            _0x3303a1['SHADERDEFI' + 'NE_UV0'] = _0x38ffce['getDefineB' + 'yName']('UV'), _0x3303a1['SHADERDEFI' + 'NE_COLOR'] = _0x38ffce['getDefineB' + 'yName']('COLOR'), _0x3303a1['SHADERDEFI' + 'NE_UV1'] = _0x38ffce['getDefineB' + 'yName']('UV1'), _0x3303a1['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE'] = _0x38ffce['getDefineB' + 'yName']('GPU_INSTAN' + 'CE'), _0x5bc8f8['_registerM' + 'anager'](_0x55bbc5['instance']), _0xfb8b43['_registerM' + 'anager'](_0x24a344['instance']);
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['meshRender' + 'er']() {
            return this['_render'];
        }
        constructor(_0x5dbc22 = null, _0x1c0f5c = null) {
            super(_0x1c0f5c), this['_meshFilte' + 'r'] = new _0x1a6b8b(this), this['_render'] = new _0x428a80(this), _0x5dbc22 && (this['_meshFilte' + 'r']['sharedMesh'] = _0x5dbc22);
        }
        ['_parse'](_0x479ecd, _0xd1aeaf) {
            super['_parse'](_0x479ecd, _0xd1aeaf);
            var _0x5bfd8d = this['meshRender' + 'er'], _0x5d406c = _0x479ecd['lightmapIn' + 'dex'];
            null != _0x5d406c && (_0x5bfd8d['lightmapIn' + 'dex'] = _0x5d406c);
            var _0x139799 = _0x479ecd['lightmapSc' + 'aleOffset'];
            _0x139799 && (_0x5bfd8d['lightmapSc' + 'aleOffset'] = new _0x4cec8f(_0x139799[0x0], _0x139799[0x1], _0x139799[0x2], _0x139799[0x3])), null != _0x479ecd['meshPath'] && (this['meshFilter']['sharedMesh'] = _0x2247ad['Loader']['getRes'](_0x479ecd['meshPath'])), null != _0x479ecd['enableRend' + 'er'] && (this['meshRender' + 'er']['enable'] = _0x479ecd['enableRend' + 'er']);
            var _0xd04d5b = _0x479ecd['materials'];
            if (_0xd04d5b) {
                var _0x27e4e1 = _0x5bfd8d['sharedMate' + 'rials'], _0xf7385e = _0xd04d5b['length'];
                _0x27e4e1['length'] = _0xf7385e;
                for (var _0x4baf2f = 0x0; _0x4baf2f < _0xf7385e; _0x4baf2f++)
                    _0x27e4e1[_0x4baf2f] = _0x2247ad['Loader']['getRes'](_0xd04d5b[_0x4baf2f]['path']);
                _0x5bfd8d['sharedMate' + 'rials'] = _0x27e4e1;
            }
        }
        ['_addToInit' + 'StaticBatc' + 'hManager']() {
            this['meshFilter']['sharedMesh'] && _0x55bbc5['instance']['_addBatchS' + 'prite'](this);
        }
        ['_cloneTo'](_0x57abf2, _0x543f2c, _0x39d3fe) {
            var _0x4f6025 = _0x57abf2;
            _0x4f6025['_meshFilte' + 'r']['sharedMesh'] = this['_meshFilte' + 'r']['sharedMesh'];
            var _0xf69a38 = this['_render'], _0x37e47d = _0x4f6025['_render'];
            _0x37e47d['enable'] = _0xf69a38['enable'], _0x37e47d['sharedMate' + 'rials'] = _0xf69a38['sharedMate' + 'rials'], _0x37e47d['castShadow'] = _0xf69a38['castShadow'];
            var _0x12e421 = _0xf69a38['lightmapSc' + 'aleOffset'];
            _0x12e421 && (_0x37e47d['lightmapSc' + 'aleOffset'] = _0x12e421['clone']()), _0x37e47d['lightmapIn' + 'dex'] = _0xf69a38['lightmapIn' + 'dex'], _0x37e47d['receiveSha' + 'dow'] = _0xf69a38['receiveSha' + 'dow'], _0x37e47d['sortingFud' + 'ge'] = _0xf69a38['sortingFud' + 'ge'], super['_cloneTo'](_0x57abf2, _0x543f2c, _0x39d3fe);
        }
        ['destroy'](_0x36edbe = !0x0) {
            this['destroyed'] || (super['destroy'](_0x36edbe), this['_meshFilte' + 'r']['destroy']());
        }
        ['_create']() {
            return new _0x32da4a();
        }
    }
    class _0x1998c6 {
    }
    _0x1998c6['Blend'] = 0x0, _0x1998c6['Fixed'] = 0x1;
    class _0x17aae7 {
        constructor(_0x51d0d3, _0x45f392) {
            this['_mode'] = 0x0, this['_maxColorR' + 'GBKeysCoun' + 't'] = 0x0, this['_maxColorA' + 'lphaKeysCo' + 'unt'] = 0x0, this['_colorRGBK' + 'eysCount'] = 0x0, this['_colorAlph' + 'aKeysCount'] = 0x0, this['_alphaElem' + 'ents'] = null, this['_rgbElemen' + 'ts'] = null, this['_maxColorR' + 'GBKeysCoun' + 't'] = _0x51d0d3, this['_maxColorA' + 'lphaKeysCo' + 'unt'] = _0x45f392, this['_rgbElemen' + 'ts'] = new Float32Array(0x4 * _0x51d0d3), this['_alphaElem' + 'ents'] = new Float32Array(0x2 * _0x45f392);
        }
        get ['mode']() {
            return this['_mode'];
        }
        set ['mode'](_0x4e7896) {
            this['_mode'] = _0x4e7896;
        }
        get ['colorRGBKe' + 'ysCount']() {
            return this['_colorRGBK' + 'eysCount'];
        }
        get ['colorAlpha' + 'KeysCount']() {
            return this['_colorAlph' + 'aKeysCount'];
        }
        get ['maxColorRG' + 'BKeysCount']() {
            return this['_maxColorR' + 'GBKeysCoun' + 't'];
        }
        get ['maxColorAl' + 'phaKeysCou' + 'nt']() {
            return this['_maxColorA' + 'lphaKeysCo' + 'unt'];
        }
        ['addColorRG' + 'B'](_0x16c5b7, _0x535707) {
            if (this['_colorRGBK' + 'eysCount'] < this['_maxColorR' + 'GBKeysCoun' + 't']) {
                var _0x5de5fa = 0x4 * this['_colorRGBK' + 'eysCount'];
                this['_rgbElemen' + 'ts'][_0x5de5fa] = _0x16c5b7, this['_rgbElemen' + 'ts'][_0x5de5fa + 0x1] = _0x535707['r'], this['_rgbElemen' + 'ts'][_0x5de5fa + 0x2] = _0x535707['g'], this['_rgbElemen' + 'ts'][_0x5de5fa + 0x3] = _0x535707['b'], this['_colorRGBK' + 'eysCount']++;
            } else
                console['warn']('Gradient:w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x20' + this['_maxColorR' + 'GBKeysCoun' + 't']);
        }
        ['addColorAl' + 'pha'](_0x5d49cd, _0x98c8b6) {
            if (this['_colorAlph' + 'aKeysCount'] < this['_maxColorA' + 'lphaKeysCo' + 'unt']) {
                var _0x385921 = 0x2 * this['_colorAlph' + 'aKeysCount'];
                this['_alphaElem' + 'ents'][_0x385921] = _0x5d49cd, this['_alphaElem' + 'ents'][_0x385921 + 0x1] = _0x98c8b6, this['_colorAlph' + 'aKeysCount']++;
            } else
                console['warn']('Gradient:w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x20' + this['_maxColorA' + 'lphaKeysCo' + 'unt']);
        }
        ['updateColo' + 'rRGB'](_0x2892e2, _0x45ff17, _0x25fbbe) {
            if (_0x2892e2 < this['_colorRGBK' + 'eysCount']) {
                var _0x162148 = 0x4 * _0x2892e2;
                this['_rgbElemen' + 'ts'][_0x162148] = _0x45ff17, this['_rgbElemen' + 'ts'][_0x162148 + 0x1] = _0x25fbbe['r'], this['_rgbElemen' + 'ts'][_0x162148 + 0x2] = _0x25fbbe['g'], this['_rgbElemen' + 'ts'][_0x162148 + 0x3] = _0x25fbbe['b'];
            } else
                console['warn']('Gradient:w' + 'arning:ind' + 'ex\x20must\x20le' + 'ssEqual\x20th' + 'an\x20colorRG' + 'BKeysCount' + ':' + this['_colorRGBK' + 'eysCount']);
        }
        ['updateColo' + 'rAlpha'](_0x435672, _0x29adbd, _0x396a11) {
            if (_0x435672 < this['_colorAlph' + 'aKeysCount']) {
                var _0x4d6e06 = 0x2 * _0x435672;
                this['_alphaElem' + 'ents'][_0x4d6e06] = _0x29adbd, this['_alphaElem' + 'ents'][_0x4d6e06 + 0x1] = _0x396a11;
            } else
                console['warn']('Gradient:w' + 'arning:ind' + 'ex\x20must\x20le' + 'ssEqual\x20th' + 'an\x20colorAl' + 'phaKeysCou' + 'nt:' + this['_colorAlph' + 'aKeysCount']);
        }
        ['evaluateCo' + 'lorRGB'](_0xebc664, _0x2ab9f3, _0x437986 = 0x0, _0x1d5558 = !0x1) {
            _0xebc664 = Math['min'](Math['max'](_0xebc664, 0x0), 0x1);
            var _0x300e1a = this['_rgbElemen' + 'ts'], _0x500f82 = _0x437986;
            if (_0x1d5558)
                for (var _0x57b6dc = _0x500f82; _0x57b6dc >= 0x0; _0x57b6dc--) {
                    var _0x8c939d = 0x4 * _0x57b6dc;
                    if (_0xebc664 === (_0x43c077 = _0x300e1a[_0x8c939d]))
                        return _0x2ab9f3['r'] = _0x300e1a[_0x8c939d + 0x1], _0x2ab9f3['g'] = _0x300e1a[_0x8c939d + 0x2], _0x2ab9f3['b'] = _0x300e1a[_0x8c939d + 0x3], _0x500f82;
                    switch (this['_mode']) {
                    case _0x1998c6['Blend']:
                        if (_0xebc664 > _0x43c077) {
                            if (_0xebc664 > (_0x87fa2d = _0x300e1a[_0x8c939d + 0x4]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x2b3d7b = _0x87fa2d - _0x43c077, _0x96edd9 = _0x87fa2d - _0xebc664, _0x23b5df = _0xebc664 - _0x43c077;
                            return _0x2ab9f3['r'] = (_0x96edd9 * _0x300e1a[_0x8c939d + 0x1] + _0x23b5df * _0x300e1a[_0x8c939d + 0x5]) / _0x2b3d7b, _0x2ab9f3['g'] = (_0x96edd9 * _0x300e1a[_0x8c939d + 0x2] + _0x23b5df * _0x300e1a[_0x8c939d + 0x6]) / _0x2b3d7b, _0x2ab9f3['b'] = (_0x96edd9 * _0x300e1a[_0x8c939d + 0x3] + _0x23b5df * _0x300e1a[_0x8c939d + 0x7]) / _0x2b3d7b, _0x500f82;
                        }
                        _0x500f82--;
                        continue;
                    case _0x1998c6['Fixed']:
                        if (_0xebc664 > _0x43c077) {
                            if (_0xebc664 > _0x300e1a[_0x8c939d + 0x4])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x2ab9f3['r'] = _0x300e1a[_0x8c939d + 0x5], _0x2ab9f3['g'] = _0x300e1a[_0x8c939d + 0x6], _0x2ab9f3['b'] = _0x300e1a[_0x8c939d + 0x7], _0x500f82;
                        }
                        _0x500f82--;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            else {
                _0x57b6dc = 0x0;
                for (var _0x3f42a7 = this['_rgbElemen' + 'ts']['length']; _0x57b6dc < _0x3f42a7; _0x57b6dc++) {
                    var _0x87fa2d;
                    if (_0xebc664 === (_0x87fa2d = _0x300e1a[_0x8c939d = 0x4 * _0x57b6dc]))
                        return _0x2ab9f3['r'] = _0x300e1a[_0x8c939d + 0x1], _0x2ab9f3['g'] = _0x300e1a[_0x8c939d + 0x2], _0x2ab9f3['b'] = _0x300e1a[_0x8c939d + 0x3], _0x500f82;
                    switch (this['_mode']) {
                    case _0x1998c6['Blend']:
                        if (_0xebc664 < _0x87fa2d) {
                            var _0x43c077;
                            if (_0xebc664 < (_0x43c077 = _0x300e1a[_0x8c939d - 0x4]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x2b3d7b = _0x87fa2d - _0x43c077, _0x96edd9 = _0x87fa2d - _0xebc664, _0x23b5df = _0xebc664 - _0x43c077, (_0x2ab9f3['r'] = (_0x96edd9 * _0x300e1a[_0x8c939d - 0x3] + _0x23b5df * _0x300e1a[_0x8c939d + 0x1]) / _0x2b3d7b, _0x2ab9f3['g'] = (_0x96edd9 * _0x300e1a[_0x8c939d - 0x2] + _0x23b5df * _0x300e1a[_0x8c939d + 0x2]) / _0x2b3d7b, _0x2ab9f3['b'] = (_0x96edd9 * _0x300e1a[_0x8c939d - 0x1] + _0x23b5df * _0x300e1a[_0x8c939d + 0x3]) / _0x2b3d7b, _0x500f82);
                        }
                        _0x500f82++;
                        continue;
                    case _0x1998c6['Fixed']:
                        if (_0xebc664 < _0x87fa2d) {
                            if (_0xebc664 < _0x300e1a[_0x8c939d - 0x4])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x2ab9f3['r'] = _0x300e1a[_0x8c939d + 0x1], _0x2ab9f3['g'] = _0x300e1a[_0x8c939d + 0x2], _0x2ab9f3['b'] = _0x300e1a[_0x8c939d + 0x3], _0x500f82;
                        }
                        _0x500f82++;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            }
            return _0x500f82;
        }
        ['evaluateCo' + 'lorAlpha'](_0x346cb4, _0x9ce777, _0x2651db = 0x0, _0x471a02 = !0x1) {
            _0x346cb4 = Math['min'](Math['max'](_0x346cb4, 0x0), 0x1);
            var _0x23e2e8 = this['_alphaElem' + 'ents'], _0x91401d = _0x2651db;
            if (_0x471a02)
                for (var _0x238c84 = _0x91401d; _0x238c84 >= 0x0; _0x238c84--) {
                    if (_0x346cb4 === (_0x22cd5a = _0x23e2e8[_0x1fbbc0 = 0x2 * _0x238c84]))
                        return _0x9ce777['a'] = _0x23e2e8[_0x1fbbc0 + 0x1], _0x91401d;
                    switch (this['_mode']) {
                    case _0x1998c6['Blend']:
                        if (_0x346cb4 > _0x22cd5a) {
                            if (_0x346cb4 > (_0x13e2a4 = _0x23e2e8[_0x1fbbc0 + 0x2]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x3c97fc = _0x13e2a4 - _0x22cd5a, _0x45309d = _0x13e2a4 - _0x346cb4, _0x484880 = _0x346cb4 - _0x22cd5a;
                            return _0x9ce777['a'] = (_0x45309d * _0x23e2e8[_0x1fbbc0 + 0x1] + _0x484880 * _0x23e2e8[_0x1fbbc0 + 0x3]) / _0x3c97fc, _0x91401d;
                        }
                        _0x91401d--;
                        continue;
                    case _0x1998c6['Fixed']:
                        if (_0x346cb4 > _0x22cd5a) {
                            if (_0x346cb4 > _0x23e2e8[_0x1fbbc0 + 0x2])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x9ce777['a'] = _0x23e2e8[_0x1fbbc0 + 0x3], _0x91401d;
                        }
                        _0x91401d--;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            else {
                _0x238c84 = _0x91401d;
                for (var _0x4b93f2 = this['_alphaElem' + 'ents']['length']; _0x238c84 < _0x4b93f2; _0x238c84++) {
                    var _0x1fbbc0, _0x13e2a4;
                    if (_0x346cb4 === (_0x13e2a4 = _0x23e2e8[_0x1fbbc0 = 0x2 * _0x238c84]))
                        return _0x9ce777['a'] = _0x23e2e8[_0x1fbbc0 + 0x1], _0x91401d;
                    switch (this['_mode']) {
                    case _0x1998c6['Blend']:
                        if (_0x346cb4 < _0x13e2a4) {
                            var _0x22cd5a;
                            if (_0x346cb4 < (_0x22cd5a = _0x23e2e8[_0x1fbbc0 - 0x2]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x3c97fc = _0x13e2a4 - _0x22cd5a, _0x45309d = _0x13e2a4 - _0x346cb4, _0x484880 = _0x346cb4 - _0x22cd5a, (_0x9ce777['a'] = (_0x45309d * _0x23e2e8[_0x1fbbc0 - 0x1] + _0x484880 * _0x23e2e8[_0x1fbbc0 + 0x1]) / _0x3c97fc, _0x91401d);
                        }
                        _0x91401d++;
                        continue;
                    case _0x1998c6['Fixed']:
                        if (_0x346cb4 < _0x13e2a4) {
                            if (_0x346cb4 < _0x23e2e8[_0x1fbbc0 - 0x2])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x9ce777['a'] = _0x23e2e8[_0x1fbbc0 + 0x1], _0x91401d;
                        }
                        _0x91401d++;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            }
            return _0x91401d;
        }
        ['cloneTo'](_0x290523) {
            var _0x57c8dc, _0x242235, _0x15a995 = _0x290523;
            _0x15a995['_colorAlph' + 'aKeysCount'] = this['_colorAlph' + 'aKeysCount'];
            var _0x568327 = _0x15a995['_alphaElem' + 'ents'];
            for (_0x57c8dc = 0x0, _0x242235 = this['_alphaElem' + 'ents']['length']; _0x57c8dc < _0x242235; _0x57c8dc++)
                _0x568327[_0x57c8dc] = this['_alphaElem' + 'ents'][_0x57c8dc];
            _0x15a995['_colorRGBK' + 'eysCount'] = this['_colorRGBK' + 'eysCount'];
            var _0x413d8e = _0x15a995['_rgbElemen' + 'ts'];
            for (_0x57c8dc = 0x0, _0x242235 = this['_rgbElemen' + 'ts']['length']; _0x57c8dc < _0x242235; _0x57c8dc++)
                _0x413d8e[_0x57c8dc] = this['_rgbElemen' + 'ts'][_0x57c8dc];
        }
        ['clone']() {
            var _0xe2b815 = new _0x17aae7(this['_maxColorR' + 'GBKeysCoun' + 't'], this['_maxColorA' + 'lphaKeysCo' + 'unt']);
            return this['cloneTo'](_0xe2b815), _0xe2b815;
        }
    }
    class _0xe7056e {
        get ['time']() {
            return this['_time'];
        }
        get ['minCount']() {
            return this['_minCount'];
        }
        get ['maxCount']() {
            return this['_maxCount'];
        }
        constructor(_0x411c9f, _0x1681eb, _0x3f9d4a) {
            this['_time'] = _0x411c9f, this['_minCount'] = _0x1681eb, this['_maxCount'] = _0x3f9d4a;
        }
        ['cloneTo'](_0x416950) {
            var _0x5d9b0e = _0x416950;
            _0x5d9b0e['_time'] = this['_time'], _0x5d9b0e['_minCount'] = this['_minCount'], _0x5d9b0e['_maxCount'] = this['_maxCount'];
        }
        ['clone']() {
            var _0xc117d8 = new _0xe7056e(this['_time'], this['_minCount'], this['_maxCount']);
            return this['cloneTo'](_0xc117d8), _0xc117d8;
        }
    }
    class _0x1d4320 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = null, this['_constantM' + 'in'] = null, this['_constantM' + 'ax'] = null, this['_gradient'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null;
        }
        static ['createByCo' + 'nstant'](_0x229388) {
            var _0x153916 = new _0x1d4320();
            return _0x153916['_type'] = 0x0, _0x153916['_constant'] = _0x229388, _0x153916;
        }
        static ['createByGr' + 'adient'](_0x2c686f) {
            var _0xeb80fb = new _0x1d4320();
            return _0xeb80fb['_type'] = 0x1, _0xeb80fb['_gradient'] = _0x2c686f, _0xeb80fb;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x33cfbb, _0xd3cd38) {
            var _0x10266e = new _0x1d4320();
            return _0x10266e['_type'] = 0x2, _0x10266e['_constantM' + 'in'] = _0x33cfbb, _0x10266e['_constantM' + 'ax'] = _0xd3cd38, _0x10266e;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x49ab82, _0x36d29c) {
            var _0xdb374a = new _0x1d4320();
            return _0xdb374a['_type'] = 0x3, _0xdb374a['_gradientM' + 'in'] = _0x49ab82, _0xdb374a['_gradientM' + 'ax'] = _0x36d29c, _0xdb374a;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        ['cloneTo'](_0xe2103d) {
            var _0x44fe27 = _0xe2103d;
            _0x44fe27['_type'] = this['_type'], this['_constant']['cloneTo'](_0x44fe27['_constant']), this['_constantM' + 'in']['cloneTo'](_0x44fe27['_constantM' + 'in']), this['_constantM' + 'ax']['cloneTo'](_0x44fe27['_constantM' + 'ax']), this['_gradient']['cloneTo'](_0x44fe27['_gradient']), this['_gradientM' + 'in']['cloneTo'](_0x44fe27['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x44fe27['_gradientM' + 'ax']);
        }
        ['clone']() {
            var _0x3bc3fe = new _0x1d4320();
            return this['cloneTo'](_0x3bc3fe), _0x3bc3fe;
        }
    }
    class _0xd8e040 {
        get ['color']() {
            return this['_color'];
        }
        constructor(_0xe986ea) {
            this['_color'] = _0xe986ea;
        }
        ['cloneTo'](_0x2532c0) {
            var _0x48b8f2 = _0x2532c0;
            this['_color']['cloneTo'](_0x48b8f2['_color']), _0x48b8f2['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x2ce312;
            switch (this['_color']['type']) {
            case 0x0:
                _0x2ce312 = _0x1d4320['createByCo' + 'nstant'](this['_color']['constant']['clone']());
                break;
            case 0x1:
                _0x2ce312 = _0x1d4320['createByGr' + 'adient'](this['_color']['gradient']['clone']());
                break;
            case 0x2:
                _0x2ce312 = _0x1d4320['createByRa' + 'ndomTwoCon' + 'stant'](this['_color']['constantMi' + 'n']['clone'](), this['_color']['constantMa' + 'x']['clone']());
                break;
            case 0x3:
                _0x2ce312 = _0x1d4320['createByRa' + 'ndomTwoGra' + 'dient'](this['_color']['gradientMi' + 'n']['clone'](), this['_color']['gradientMa' + 'x']['clone']());
            }
            var _0x151346 = new _0xd8e040(_0x2ce312);
            return _0x151346['enable'] = this['enable'], _0x151346;
        }
    }
    class _0x197328 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = 0x0, this['_overTime'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_overTimeM' + 'in'] = null, this['_overTimeM' + 'ax'] = null;
        }
        static ['createByCo' + 'nstant'](_0x4f22d3 = 0x0) {
            var _0x6bf4f0 = new _0x197328();
            return _0x6bf4f0['_type'] = 0x0, _0x6bf4f0['_constant'] = _0x4f22d3, _0x6bf4f0;
        }
        static ['createByOv' + 'erTime'](_0x4e8558) {
            var _0x3af98b = new _0x197328();
            return _0x3af98b['_type'] = 0x1, _0x3af98b['_overTime'] = _0x4e8558, _0x3af98b;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x20b267 = 0x0, _0xe5074d = 0x0) {
            var _0x6adb9d = new _0x197328();
            return _0x6adb9d['_type'] = 0x2, _0x6adb9d['_constantM' + 'in'] = _0x20b267, _0x6adb9d['_constantM' + 'ax'] = _0xe5074d, _0x6adb9d;
        }
        static ['createByRa' + 'ndomTwoOve' + 'rTime'](_0x488c5c, _0x2498b0) {
            var _0x3adf32 = new _0x197328();
            return _0x3adf32['_type'] = 0x3, _0x3adf32['_overTimeM' + 'in'] = _0x488c5c, _0x3adf32['_overTimeM' + 'ax'] = _0x2498b0, _0x3adf32;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['frameOverT' + 'imeData']() {
            return this['_overTime'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['frameOverT' + 'imeDataMin']() {
            return this['_overTimeM' + 'in'];
        }
        get ['frameOverT' + 'imeDataMax']() {
            return this['_overTimeM' + 'ax'];
        }
        ['cloneTo'](_0x191980) {
            var _0x5aed06 = _0x191980;
            _0x5aed06['_type'] = this['_type'], _0x5aed06['_constant'] = this['_constant'], this['_overTime'] && this['_overTime']['cloneTo'](_0x5aed06['_overTime']), _0x5aed06['_constantM' + 'in'] = this['_constantM' + 'in'], _0x5aed06['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_overTimeM' + 'in'] && this['_overTimeM' + 'in']['cloneTo'](_0x5aed06['_overTimeM' + 'in']), this['_overTimeM' + 'ax'] && this['_overTimeM' + 'ax']['cloneTo'](_0x5aed06['_overTimeM' + 'ax']);
        }
        ['clone']() {
            var _0x48c8ff = new _0x197328();
            return this['cloneTo'](_0x48c8ff), _0x48c8ff;
        }
    }
    class _0x232103 {
        constructor() {
            this['_type'] = 0x0, this['_separateA' + 'xes'] = !0x1, this['_constant'] = 0x0, this['_constantS' + 'eparate'] = null, this['_gradient'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_gradientW'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_constantM' + 'inSeparate'] = null, this['_constantM' + 'axSeparate'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null, this['_gradientW' + 'Min'] = null, this['_gradientW' + 'Max'] = null;
        }
        static ['createByCo' + 'nstant'](_0x58f896) {
            var _0x2a5183 = new _0x232103();
            return _0x2a5183['_type'] = 0x0, _0x2a5183['_separateA' + 'xes'] = !0x1, _0x2a5183['_constant'] = _0x58f896, _0x2a5183;
        }
        static ['createByCo' + 'nstantSepa' + 'rate'](_0x6f3b9) {
            var _0x100794 = new _0x232103();
            return _0x100794['_type'] = 0x0, _0x100794['_separateA' + 'xes'] = !0x0, _0x100794['_constantS' + 'eparate'] = _0x6f3b9, _0x100794;
        }
        static ['createByGr' + 'adient'](_0x137445) {
            var _0x7e72db = new _0x232103();
            return _0x7e72db['_type'] = 0x1, _0x7e72db['_separateA' + 'xes'] = !0x1, _0x7e72db['_gradient'] = _0x137445, _0x7e72db;
        }
        static ['createByGr' + 'adientSepa' + 'rate'](_0x2392d6, _0x1c85e0, _0x4d35ed) {
            var _0x3ec943 = new _0x232103();
            return _0x3ec943['_type'] = 0x1, _0x3ec943['_separateA' + 'xes'] = !0x0, _0x3ec943['_gradientX'] = _0x2392d6, _0x3ec943['_gradientY'] = _0x1c85e0, _0x3ec943['_gradientZ'] = _0x4d35ed, _0x3ec943;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0xc07e24, _0x7e8a97) {
            var _0x4e7a4b = new _0x232103();
            return _0x4e7a4b['_type'] = 0x2, _0x4e7a4b['_separateA' + 'xes'] = !0x1, _0x4e7a4b['_constantM' + 'in'] = _0xc07e24, _0x4e7a4b['_constantM' + 'ax'] = _0x7e8a97, _0x4e7a4b;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x4735cf, _0x19e721) {
            var _0x31a7a4 = new _0x232103();
            return _0x31a7a4['_type'] = 0x2, _0x31a7a4['_separateA' + 'xes'] = !0x0, _0x31a7a4['_constantM' + 'inSeparate'] = _0x4735cf, _0x31a7a4['_constantM' + 'axSeparate'] = _0x19e721, _0x31a7a4;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x469dd1, _0x4b8efa) {
            var _0x500b9d = new _0x232103();
            return _0x500b9d['_type'] = 0x3, _0x500b9d['_separateA' + 'xes'] = !0x1, _0x500b9d['_gradientM' + 'in'] = _0x469dd1, _0x500b9d['_gradientM' + 'ax'] = _0x4b8efa, _0x500b9d;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](_0x1341f9, _0x4951b8, _0x2b50da, _0x3620a3, _0x2447dd, _0x3bf43c, _0x46f9e1, _0x4c908e) {
            var _0x824fe7 = new _0x232103();
            return _0x824fe7['_type'] = 0x3, _0x824fe7['_separateA' + 'xes'] = !0x0, _0x824fe7['_gradientX' + 'Min'] = _0x1341f9, _0x824fe7['_gradientX' + 'Max'] = _0x4951b8, _0x824fe7['_gradientY' + 'Min'] = _0x2b50da, _0x824fe7['_gradientY' + 'Max'] = _0x3620a3, _0x824fe7['_gradientZ' + 'Min'] = _0x2447dd, _0x824fe7['_gradientZ' + 'Max'] = _0x3bf43c, _0x824fe7['_gradientW' + 'Min'] = _0x46f9e1, _0x824fe7['_gradientW' + 'Max'] = _0x4c908e, _0x824fe7;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['separateAx' + 'es']() {
            return this['_separateA' + 'xes'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantSe' + 'parate']() {
            return this['_constantS' + 'eparate'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['gradientW']() {
            return this['_gradientW'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['constantMi' + 'nSeparate']() {
            return this['_constantM' + 'inSeparate'];
        }
        get ['constantMa' + 'xSeparate']() {
            return this['_constantM' + 'axSeparate'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        get ['gradientWM' + 'in']() {
            return this['_gradientW' + 'Min'];
        }
        get ['gradientWM' + 'ax']() {
            return this['_gradientW' + 'Max'];
        }
        ['cloneTo'](_0x2b8474) {
            var _0x1ab266 = _0x2b8474;
            _0x1ab266['_type'] = this['_type'], _0x1ab266['_separateA' + 'xes'] = this['_separateA' + 'xes'], _0x1ab266['_constant'] = this['_constant'], this['_constantS' + 'eparate']['cloneTo'](_0x1ab266['_constantS' + 'eparate']), this['_gradient']['cloneTo'](_0x1ab266['_gradient']), this['_gradientX']['cloneTo'](_0x1ab266['_gradientX']), this['_gradientY']['cloneTo'](_0x1ab266['_gradientY']), this['_gradientZ']['cloneTo'](_0x1ab266['_gradientZ']), _0x1ab266['_constantM' + 'in'] = this['_constantM' + 'in'], _0x1ab266['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_constantM' + 'inSeparate']['cloneTo'](_0x1ab266['_constantM' + 'inSeparate']), this['_constantM' + 'axSeparate']['cloneTo'](_0x1ab266['_constantM' + 'axSeparate']), this['_gradientM' + 'in']['cloneTo'](_0x1ab266['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x1ab266['_gradientM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x1ab266['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x1ab266['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x1ab266['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x1ab266['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x1ab266['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x1ab266['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x4fc127 = new _0x232103();
            return this['cloneTo'](_0x4fc127), _0x4fc127;
        }
    }
    class _0x4cee63 {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x2;
        }
        ['add'](_0x1f0d98, _0x50fc02) {
            this['_currentLe' + 'ngth'] < 0x8 ? (0x6 === this['_currentLe' + 'ngth'] && 0x1 !== _0x1f0d98 && (_0x1f0d98 = 0x1, console['log']('Warning:th' + 'e\x20forth\x20ke' + 'y\x20is\x20\x20be\x20f' + 'orce\x20set\x20t' + 'o\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0x1f0d98, this['_elements'][this['_currentLe' + 'ngth']++] = _0x50fc02) : console['log']('Warning:da' + 'ta\x20count\x20m' + 'ust\x20lessEq' + 'ual\x20than\x204');
        }
        ['cloneTo'](_0x3e6cc9) {
            var _0x3ded4d = _0x3e6cc9;
            _0x3ded4d['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            for (var _0x543d20 = _0x3ded4d['_elements'], _0x248463 = 0x0, _0x52b3c6 = this['_elements']['length']; _0x248463 < _0x52b3c6; _0x248463++)
                _0x543d20[_0x248463] = this['_elements'][_0x248463];
        }
        ['clone']() {
            var _0x222bd8 = new _0x4cee63();
            return this['cloneTo'](_0x222bd8), _0x222bd8;
        }
    }
    class _0x16ac95 {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x2;
        }
        ['add'](_0x487308, _0x360b04) {
            this['_currentLe' + 'ngth'] < 0x8 ? (0x6 === this['_currentLe' + 'ngth'] && 0x1 !== _0x487308 && (_0x487308 = 0x1, console['log']('GradientDa' + 'taNumber\x20w' + 'arning:the' + '\x20forth\x20key' + '\x20is\x20\x20be\x20fo' + 'rce\x20set\x20to' + '\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0x487308, this['_elements'][this['_currentLe' + 'ngth']++] = _0x360b04) : console['log']('GradientDa' + 'taNumber\x20w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x204');
        }
        ['getKeyByIn' + 'dex'](_0x285797) {
            return this['_elements'][0x2 * _0x285797];
        }
        ['getValueBy' + 'Index'](_0x1ddd31) {
            return this['_elements'][0x2 * _0x1ddd31 + 0x1];
        }
        ['getAverage' + 'Value']() {
            for (var _0x573ef9 = 0x0, _0x421c25 = this['_currentLe' + 'ngth'] - 0x2; _0x573ef9 < _0x421c25; _0x573ef9 += 0x2) {
                this['_elements'][_0x573ef9 + 0x1], (this['_elements'][_0x573ef9 + 0x3], this['_elements'][_0x573ef9 + 0x2] - this['_elements'][_0x573ef9]);
            }
            return 0x0;
        }
        ['cloneTo'](_0x4a5174) {
            var _0x56b2cd = _0x4a5174;
            _0x56b2cd['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            for (var _0x506008 = _0x56b2cd['_elements'], _0x5519b1 = 0x0, _0x366615 = this['_elements']['length']; _0x5519b1 < _0x366615; _0x5519b1++)
                _0x506008[_0x5519b1] = this['_elements'][_0x5519b1];
        }
        ['clone']() {
            var _0x16fd14 = new _0x16ac95();
            return this['cloneTo'](_0x16fd14), _0x16fd14;
        }
    }
    class _0x42e41d {
        constructor() {
            this['_type'] = 0x0, this['_separateA' + 'xes'] = !0x1, this['_gradient'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_constantM' + 'inSeparate'] = null, this['_constantM' + 'axSeparate'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null;
        }
        static ['createByGr' + 'adient'](_0x45316f) {
            var _0x2b209f = new _0x42e41d();
            return _0x2b209f['_type'] = 0x0, _0x2b209f['_separateA' + 'xes'] = !0x1, _0x2b209f['_gradient'] = _0x45316f, _0x2b209f;
        }
        static ['createByGr' + 'adientSepa' + 'rate'](_0x3a01b8, _0x5a1991, _0x557b12) {
            var _0x4ca56d = new _0x42e41d();
            return _0x4ca56d['_type'] = 0x0, _0x4ca56d['_separateA' + 'xes'] = !0x0, _0x4ca56d['_gradientX'] = _0x3a01b8, _0x4ca56d['_gradientY'] = _0x5a1991, _0x4ca56d['_gradientZ'] = _0x557b12, _0x4ca56d;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0xc94b3c, _0x4f31fb) {
            var _0x49370d = new _0x42e41d();
            return _0x49370d['_type'] = 0x1, _0x49370d['_separateA' + 'xes'] = !0x1, _0x49370d['_constantM' + 'in'] = _0xc94b3c, _0x49370d['_constantM' + 'ax'] = _0x4f31fb, _0x49370d;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x27b1e, _0x309687) {
            var _0x49cdb4 = new _0x42e41d();
            return _0x49cdb4['_type'] = 0x1, _0x49cdb4['_separateA' + 'xes'] = !0x0, _0x49cdb4['_constantM' + 'inSeparate'] = _0x27b1e, _0x49cdb4['_constantM' + 'axSeparate'] = _0x309687, _0x49cdb4;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x4bb45e, _0x49fe38) {
            var _0x1b7eb0 = new _0x42e41d();
            return _0x1b7eb0['_type'] = 0x2, _0x1b7eb0['_separateA' + 'xes'] = !0x1, _0x1b7eb0['_gradientM' + 'in'] = _0x4bb45e, _0x1b7eb0['_gradientM' + 'ax'] = _0x49fe38, _0x1b7eb0;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](_0x1fb39b, _0x409b7b, _0x4abcdd, _0x522e3e, _0x230032, _0x513c1a) {
            var _0x1d0230 = new _0x42e41d();
            return _0x1d0230['_type'] = 0x2, _0x1d0230['_separateA' + 'xes'] = !0x0, _0x1d0230['_gradientX' + 'Min'] = _0x1fb39b, _0x1d0230['_gradientX' + 'Max'] = _0x409b7b, _0x1d0230['_gradientY' + 'Min'] = _0x4abcdd, _0x1d0230['_gradientY' + 'Max'] = _0x522e3e, _0x1d0230['_gradientZ' + 'Min'] = _0x230032, _0x1d0230['_gradientZ' + 'Max'] = _0x513c1a, _0x1d0230;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['separateAx' + 'es']() {
            return this['_separateA' + 'xes'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['constantMi' + 'nSeparate']() {
            return this['_constantM' + 'inSeparate'];
        }
        get ['constantMa' + 'xSeparate']() {
            return this['_constantM' + 'axSeparate'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        ['getMaxSize' + 'InGradient']() {
            var _0x10f35b, _0x562b36, _0x272e93 = -Number['MAX_VALUE'];
            switch (this['_type']) {
            case 0x0:
                if (this['_separateA' + 'xes']) {
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientX']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientX']['getValueBy' + 'Index'](_0x10f35b));
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientY']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientY']['getValueBy' + 'Index'](_0x10f35b));
                } else {
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradient']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradient']['getValueBy' + 'Index'](_0x10f35b));
                }
                break;
            case 0x1:
                this['_separateA' + 'xes'] ? (_0x272e93 = Math['max'](this['_constantM' + 'inSeparate']['x'], this['_constantM' + 'axSeparate']['x']), _0x272e93 = Math['max'](_0x272e93, this['_constantM' + 'inSeparate']['y']), _0x272e93 = Math['max'](_0x272e93, this['_constantM' + 'axSeparate']['y'])) : _0x272e93 = Math['max'](this['_constantM' + 'in'], this['_constantM' + 'ax']);
                break;
            case 0x2:
                if (this['_separateA' + 'xes']) {
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientX' + 'Min']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientX' + 'Min']['getValueBy' + 'Index'](_0x10f35b));
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientX' + 'Max']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientX' + 'Max']['getValueBy' + 'Index'](_0x10f35b));
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientY' + 'Min']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientY' + 'Min']['getValueBy' + 'Index'](_0x10f35b));
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientZ' + 'Max']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientZ' + 'Max']['getValueBy' + 'Index'](_0x10f35b));
                } else {
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientM' + 'in']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientM' + 'in']['getValueBy' + 'Index'](_0x10f35b));
                    for (_0x10f35b = 0x0, _0x562b36 = this['_gradientM' + 'ax']['gradientCo' + 'unt']; _0x10f35b < _0x562b36; _0x10f35b++)
                        _0x272e93 = Math['max'](_0x272e93, this['_gradientM' + 'ax']['getValueBy' + 'Index'](_0x10f35b));
                }
            }
            return _0x272e93;
        }
        ['cloneTo'](_0x5b6515) {
            var _0x27467d = _0x5b6515;
            _0x27467d['_type'] = this['_type'], _0x27467d['_separateA' + 'xes'] = this['_separateA' + 'xes'], this['_gradient']['cloneTo'](_0x27467d['_gradient']), this['_gradientX']['cloneTo'](_0x27467d['_gradientX']), this['_gradientY']['cloneTo'](_0x27467d['_gradientY']), this['_gradientZ']['cloneTo'](_0x27467d['_gradientZ']), _0x27467d['_constantM' + 'in'] = this['_constantM' + 'in'], _0x27467d['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_constantM' + 'inSeparate']['cloneTo'](_0x27467d['_constantM' + 'inSeparate']), this['_constantM' + 'axSeparate']['cloneTo'](_0x27467d['_constantM' + 'axSeparate']), this['_gradientM' + 'in']['cloneTo'](_0x27467d['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x27467d['_gradientM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x27467d['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x27467d['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x27467d['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x27467d['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x27467d['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x27467d['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x399d5d = new _0x42e41d();
            return this['cloneTo'](_0x399d5d), _0x399d5d;
        }
    }
    class _0x1c4583 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_constantM' + 'in'] = null, this['_constantM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null;
        }
        static ['createByCo' + 'nstant'](_0x127e76) {
            var _0x338c81 = new _0x1c4583();
            return _0x338c81['_type'] = 0x0, _0x338c81['_constant'] = _0x127e76, _0x338c81;
        }
        static ['createByGr' + 'adient'](_0x529e77, _0xc175c7, _0x35474b) {
            var _0x3f505a = new _0x1c4583();
            return _0x3f505a['_type'] = 0x1, _0x3f505a['_gradientX'] = _0x529e77, _0x3f505a['_gradientY'] = _0xc175c7, _0x3f505a['_gradientZ'] = _0x35474b, _0x3f505a;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x239561, _0x487d77) {
            var _0x571d67 = new _0x1c4583();
            return _0x571d67['_type'] = 0x2, _0x571d67['_constantM' + 'in'] = _0x239561, _0x571d67['_constantM' + 'ax'] = _0x487d77, _0x571d67;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x1ea58d, _0x4c1483, _0x3b7fa8, _0x1e3d2d, _0x1c26f2, _0x35122f) {
            var _0x5a03bf = new _0x1c4583();
            return _0x5a03bf['_type'] = 0x3, _0x5a03bf['_gradientX' + 'Min'] = _0x1ea58d, _0x5a03bf['_gradientX' + 'Max'] = _0x4c1483, _0x5a03bf['_gradientY' + 'Min'] = _0x3b7fa8, _0x5a03bf['_gradientY' + 'Max'] = _0x1e3d2d, _0x5a03bf['_gradientZ' + 'Min'] = _0x1c26f2, _0x5a03bf['_gradientZ' + 'Max'] = _0x35122f, _0x5a03bf;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        ['cloneTo'](_0x3153bd) {
            var _0x5e0aa4 = _0x3153bd;
            _0x5e0aa4['_type'] = this['_type'], this['_constant']['cloneTo'](_0x5e0aa4['_constant']), this['_gradientX']['cloneTo'](_0x5e0aa4['_gradientX']), this['_gradientY']['cloneTo'](_0x5e0aa4['_gradientY']), this['_gradientZ']['cloneTo'](_0x5e0aa4['_gradientZ']), this['_constantM' + 'in']['cloneTo'](_0x5e0aa4['_constantM' + 'in']), this['_constantM' + 'ax']['cloneTo'](_0x5e0aa4['_constantM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x5e0aa4['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x5e0aa4['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x5e0aa4['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x5e0aa4['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x5e0aa4['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x5e0aa4['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x48e34b = new _0x1c4583();
            return this['cloneTo'](_0x48e34b), _0x48e34b;
        }
    }
    class _0x5c5745 {
        get ['angularVel' + 'ocity']() {
            return this['_angularVe' + 'locity'];
        }
        constructor(_0x117fe3) {
            this['_angularVe' + 'locity'] = _0x117fe3;
        }
        ['cloneTo'](_0x3a83a4) {
            var _0x82045c = _0x3a83a4;
            this['_angularVe' + 'locity']['cloneTo'](_0x82045c['_angularVe' + 'locity']), _0x82045c['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x8a5ad7;
            switch (this['_angularVe' + 'locity']['type']) {
            case 0x0:
                _0x8a5ad7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x232103['createByCo' + 'nstantSepa' + 'rate'](this['_angularVe' + 'locity']['constantSe' + 'parate']['clone']()) : _0x232103['createByCo' + 'nstant'](this['_angularVe' + 'locity']['constant']);
                break;
            case 0x1:
                _0x8a5ad7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x232103['createByGr' + 'adientSepa' + 'rate'](this['_angularVe' + 'locity']['gradientX']['clone'](), this['_angularVe' + 'locity']['gradientY']['clone'](), this['_angularVe' + 'locity']['gradientZ']['clone']()) : _0x232103['createByGr' + 'adient'](this['_angularVe' + 'locity']['gradient']['clone']());
                break;
            case 0x2:
                _0x8a5ad7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x232103['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](this['_angularVe' + 'locity']['constantMi' + 'nSeparate']['clone'](), this['_angularVe' + 'locity']['constantMa' + 'xSeparate']['clone']()) : _0x232103['createByRa' + 'ndomTwoCon' + 'stant'](this['_angularVe' + 'locity']['constantMi' + 'n'], this['_angularVe' + 'locity']['constantMa' + 'x']);
                break;
            case 0x3:
                _0x8a5ad7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x232103['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_angularVe' + 'locity']['gradientXM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientYM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientZM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientWM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientXM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientYM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientZM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientWM' + 'ax']['clone']()) : _0x232103['createByRa' + 'ndomTwoGra' + 'dient'](this['_angularVe' + 'locity']['gradientMi' + 'n']['clone'](), this['_angularVe' + 'locity']['gradientMa' + 'x']['clone']());
            }
            var _0x24544f = new _0x5c5745(_0x8a5ad7);
            return _0x24544f['enable'] = this['enable'], _0x24544f;
        }
    }
    class _0x3a52f1 {
        constructor() {
            this['enable'] = !0x0, this['randomDire' + 'ction'] = 0x0;
        }
        ['_getShapeB' + 'oundBox'](_0x24e697) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['_getSpeedB' + 'oundBox'](_0x19789f) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x1d1951, _0x251f62, _0x5a1cec = null, _0x5b56de = null) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['_calculate' + 'Procedural' + 'Bounds'](_0x5994ec, _0x3ba141, _0x1e166a) {
            this['_getShapeB' + 'oundBox'](_0x5994ec);
            var _0x1ba051 = _0x5994ec['min'], _0xec2d0 = _0x5994ec['max'];
            _0x43b358['multiply'](_0x1ba051, _0x3ba141, _0x1ba051), _0x43b358['multiply'](_0xec2d0, _0x3ba141, _0xec2d0);
            var _0x5d0d10 = new _0x11e6d9(new _0x43b358(), new _0x43b358());
            this['randomDire' + 'ction'] ? (_0x5d0d10['min'] = new _0x43b358(-0x1, -0x1, -0x1), _0x5d0d10['max'] = new _0x43b358(0x1, 0x1, 0x1)) : this['_getSpeedB' + 'oundBox'](_0x5d0d10);
            var _0x27bfeb = new _0x11e6d9(new _0x43b358(), new _0x43b358()), _0x2928d0 = _0x27bfeb['min'], _0x5dd8f2 = _0x27bfeb['max'];
            _0x43b358['scale'](_0x5d0d10['min'], _0x1e166a['y'], _0x2928d0), _0x43b358['scale'](_0x5d0d10['max'], _0x1e166a['y'], _0x5dd8f2), _0x43b358['add'](_0x5994ec['min'], _0x2928d0, _0x2928d0), _0x43b358['add'](_0x5994ec['max'], _0x5dd8f2, _0x5dd8f2), _0x43b358['min'](_0x5994ec['min'], _0x2928d0, _0x5994ec['min']), _0x43b358['max'](_0x5994ec['max'], _0x2928d0, _0x5994ec['max']);
            var _0x13b93b = new _0x11e6d9(new _0x43b358(), new _0x43b358()), _0x4fdd99 = _0x13b93b['min'], _0x5657e9 = _0x13b93b['max'];
            _0x43b358['scale'](_0x5d0d10['min'], _0x1e166a['x'], _0x4fdd99), _0x43b358['scale'](_0x5d0d10['max'], _0x1e166a['x'], _0x5657e9), _0x43b358['min'](_0x13b93b['min'], _0x5657e9, _0x2928d0), _0x43b358['max'](_0x13b93b['min'], _0x5657e9, _0x5dd8f2), _0x43b358['min'](_0x5994ec['min'], _0x2928d0, _0x5994ec['min']), _0x43b358['max'](_0x5994ec['max'], _0x2928d0, _0x5994ec['max']);
        }
        ['cloneTo'](_0x371d56) {
            _0x371d56['enable'] = this['enable'];
        }
        ['clone']() {
            var _0xd9bbc6 = new _0x3a52f1();
            return this['cloneTo'](_0xd9bbc6), _0xd9bbc6;
        }
    }
    class _0x912501 {
        static ['_randomPoi' + 'ntUnitArcC' + 'ircle'](_0x40043f, _0x1e6815, _0x5e6d33 = null) {
            var _0x3ff70c;
            _0x3ff70c = _0x5e6d33 ? _0x5e6d33['getFloat']() * _0x40043f : Math['random']() * _0x40043f, _0x1e6815['x'] = Math['cos'](_0x3ff70c), _0x1e6815['y'] = Math['sin'](_0x3ff70c);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](_0x48d83a, _0x2bb0b4, _0x19d294 = null) {
            var _0x266a00;
            _0x912501['_randomPoi' + 'ntUnitArcC' + 'ircle'](_0x48d83a, _0x2bb0b4, _0x19d294), _0x266a00 = _0x19d294 ? Math['pow'](_0x19d294['getFloat'](), 0.5) : Math['pow'](Math['random'](), 0.5), _0x2bb0b4['x'] = _0x2bb0b4['x'] * _0x266a00, _0x2bb0b4['y'] = _0x2bb0b4['y'] * _0x266a00;
        }
        static ['_randomPoi' + 'ntUnitCirc' + 'le'](_0x5307f0, _0x5393ca = null) {
            var _0x18a546;
            _0x18a546 = _0x5393ca ? _0x5393ca['getFloat']() * Math['PI'] * 0x2 : Math['random']() * Math['PI'] * 0x2, _0x5307f0['x'] = Math['cos'](_0x18a546), _0x5307f0['y'] = Math['sin'](_0x18a546);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x28da42, _0x1a0cce = null) {
            var _0x254644;
            _0x912501['_randomPoi' + 'ntUnitCirc' + 'le'](_0x28da42), _0x254644 = _0x1a0cce ? Math['pow'](_0x1a0cce['getFloat'](), 0.5) : Math['pow'](Math['random'](), 0.5), _0x28da42['x'] = _0x28da42['x'] * _0x254644, _0x28da42['y'] = _0x28da42['y'] * _0x254644;
        }
        static ['_randomPoi' + 'ntUnitSphe' + 're'](_0x4cefd1, _0x5b2d2c = null) {
            var _0x2e46a8, _0x15798f;
            _0x5b2d2c ? (_0x2e46a8 = _0x4cefd1['z'] = 0x2 * _0x5b2d2c['getFloat']() - 0x1, _0x15798f = _0x5b2d2c['getFloat']() * Math['PI'] * 0x2) : (_0x2e46a8 = _0x4cefd1['z'] = 0x2 * Math['random']() - 0x1, _0x15798f = Math['random']() * Math['PI'] * 0x2);
            var _0x331c64 = Math['sqrt'](0x1 - _0x2e46a8 * _0x2e46a8);
            _0x4cefd1['x'] = _0x331c64 * Math['cos'](_0x15798f), _0x4cefd1['y'] = _0x331c64 * Math['sin'](_0x15798f);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x1b7af6, _0x115340 = null) {
            var _0x2b06b4;
            _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x1b7af6), _0x2b06b4 = _0x115340 ? Math['pow'](_0x115340['getFloat'](), 0x1 / 0x3) : Math['pow'](Math['random'](), 0x1 / 0x3), _0x1b7af6['x'] = _0x1b7af6['x'] * _0x2b06b4, _0x1b7af6['y'] = _0x1b7af6['y'] * _0x2b06b4, _0x1b7af6['z'] = _0x1b7af6['z'] * _0x2b06b4;
        }
        static ['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x53c2c9, _0x148192 = null) {
            _0x148192 ? (_0x53c2c9['x'] = _0x148192['getFloat']() - 0.5, _0x53c2c9['y'] = _0x148192['getFloat']() - 0.5, _0x53c2c9['z'] = _0x148192['getFloat']() - 0.5) : (_0x53c2c9['x'] = Math['random']() - 0.5, _0x53c2c9['y'] = Math['random']() - 0.5, _0x53c2c9['z'] = Math['random']() - 0.5);
        }
        constructor() {
        }
    }
    class _0x1daa58 extends _0x3a52f1 {
        constructor() {
            super(), this['x'] = 0x1, this['y'] = 0x1, this['z'] = 0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x4c96f4) {
            var _0x30b178 = _0x4c96f4['min'];
            _0x30b178['x'] = 0.5 * -this['x'], _0x30b178['y'] = 0.5 * -this['y'], _0x30b178['z'] = 0.5 * -this['z'];
            var _0x108e37 = _0x4c96f4['max'];
            _0x108e37['x'] = 0.5 * this['x'], _0x108e37['y'] = 0.5 * this['y'], _0x108e37['z'] = 0.5 * this['z'];
        }
        ['_getSpeedB' + 'oundBox'](_0x4ee1be) {
            var _0x57f39b = _0x4ee1be['min'];
            _0x57f39b['x'] = 0x0, _0x57f39b['y'] = 0x0, _0x57f39b['z'] = 0x0;
            var _0x2019f0 = _0x4ee1be['max'];
            _0x2019f0['x'] = 0x0, _0x2019f0['y'] = 0x1, _0x2019f0['z'] = 0x0;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x55bdba, _0x30c653, _0x27e283 = null, _0x55c043 = null) {
            _0x27e283 ? (_0x27e283['seed'] = _0x55c043[0x10], _0x912501['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x55bdba, _0x27e283), _0x55c043[0x10] = _0x27e283['seed']) : _0x912501['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x55bdba), _0x55bdba['x'] = this['x'] * _0x55bdba['x'], _0x55bdba['y'] = this['y'] * _0x55bdba['y'], _0x55bdba['z'] = this['z'] * _0x55bdba['z'], this['randomDire' + 'ction'] ? _0x27e283 ? (_0x27e283['seed'] = _0x55c043[0x11], _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x30c653, _0x27e283), _0x55c043[0x11] = _0x27e283['seed']) : _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x30c653) : (_0x30c653['x'] = 0x0, _0x30c653['y'] = 0x0, _0x30c653['z'] = 0x1);
        }
        ['cloneTo'](_0x503aa4) {
            super['cloneTo'](_0x503aa4);
            var _0x4ef043 = _0x503aa4;
            _0x4ef043['x'] = this['x'], _0x4ef043['y'] = this['y'], _0x4ef043['z'] = this['z'], _0x4ef043['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x4c2bd0 = new _0x1daa58();
            return this['cloneTo'](_0x4c2bd0), _0x4c2bd0;
        }
    }
    class _0x5266b9 extends _0x3a52f1 {
        constructor() {
            super(), this['radius'] = 0x1, this['arc'] = 0x2 * Math['PI'], this['emitFromEd' + 'ge'] = !0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x597287) {
            var _0x531c7f = _0x597287['min'];
            _0x531c7f['x'] = _0x531c7f['z'] = -this['radius'], _0x531c7f['y'] = 0x0;
            var _0x818f91 = _0x597287['max'];
            _0x818f91['x'] = _0x818f91['z'] = this['radius'], _0x818f91['y'] = 0x0;
        }
        ['_getSpeedB' + 'oundBox'](_0x10fa8a) {
            var _0xc69b61 = _0x10fa8a['min'];
            _0xc69b61['x'] = _0xc69b61['y'] = -0x1, _0xc69b61['z'] = 0x0;
            var _0x3a3bf8 = _0x10fa8a['max'];
            _0x3a3bf8['x'] = _0x3a3bf8['y'] = 0x1, _0x3a3bf8['z'] = 0x0;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x1f60f8, _0x5e7624, _0x147cf8 = null, _0x1ae156 = null) {
            var _0x2a4182 = _0x5266b9['_tempPosit' + 'ionPoint'];
            _0x147cf8 ? (_0x147cf8['seed'] = _0x1ae156[0x10], this['emitFromEd' + 'ge'] ? _0x912501['_randomPoi' + 'ntUnitArcC' + 'ircle'](this['arc'], _0x5266b9['_tempPosit' + 'ionPoint'], _0x147cf8) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](this['arc'], _0x5266b9['_tempPosit' + 'ionPoint'], _0x147cf8), _0x1ae156[0x10] = _0x147cf8['seed']) : this['emitFromEd' + 'ge'] ? _0x912501['_randomPoi' + 'ntUnitArcC' + 'ircle'](this['arc'], _0x5266b9['_tempPosit' + 'ionPoint']) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](this['arc'], _0x5266b9['_tempPosit' + 'ionPoint']), _0x1f60f8['x'] = -_0x2a4182['x'], _0x1f60f8['y'] = _0x2a4182['y'], _0x1f60f8['z'] = 0x0, _0x43b358['scale'](_0x1f60f8, this['radius'], _0x1f60f8), this['randomDire' + 'ction'] ? _0x147cf8 ? (_0x147cf8['seed'] = _0x1ae156[0x11], _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x5e7624, _0x147cf8), _0x1ae156[0x11] = _0x147cf8['seed']) : _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x5e7624) : _0x1f60f8['cloneTo'](_0x5e7624);
        }
        ['cloneTo'](_0x5ca089) {
            super['cloneTo'](_0x5ca089);
            var _0x556552 = _0x5ca089;
            _0x556552['radius'] = this['radius'], _0x556552['arc'] = this['arc'], _0x556552['emitFromEd' + 'ge'] = this['emitFromEd' + 'ge'], _0x556552['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x29a09b = new _0x5266b9();
            return this['cloneTo'](_0x29a09b), _0x29a09b;
        }
    }
    _0x5266b9['_tempPosit' + 'ionPoint'] = new _0x2d45ed();
    class _0x3a6c30 extends _0x3a52f1 {
        constructor() {
            super(), this['angle'] = 0x19 / 0xb4 * Math['PI'], this['radius'] = 0x1, this['length'] = 0x5, this['emitType'] = 0x0;
        }
        ['_getShapeB' + 'oundBox'](_0x322620) {
            const _0x289d3b = this['radius'] + this['length'] * Math['sin'](this['angle']), _0x25ecee = this['length'] * Math['cos'](this['angle']);
            var _0x1d6ae9 = _0x322620['min'];
            _0x1d6ae9['x'] = _0x1d6ae9['y'] = -_0x289d3b, _0x1d6ae9['z'] = 0x0;
            var _0xe34b90 = _0x322620['max'];
            _0xe34b90['x'] = _0xe34b90['y'] = _0x289d3b, _0xe34b90['z'] = _0x25ecee;
        }
        ['_getSpeedB' + 'oundBox'](_0x486edb) {
            const _0x5d27a1 = Math['sin'](this['angle']);
            var _0x7eb908 = _0x486edb['min'];
            _0x7eb908['x'] = _0x7eb908['y'] = -_0x5d27a1, _0x7eb908['z'] = 0x0;
            var _0x3bf0be = _0x486edb['max'];
            _0x3bf0be['x'] = _0x3bf0be['y'] = _0x5d27a1, _0x3bf0be['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x4e5917, _0x47dc44, _0x2f762d = null, _0x445da6 = null) {
            var _0x4dd5df, _0x17a6c2, _0x5ea008, _0x14c52f = _0x3a6c30['_tempPosit' + 'ionPoint'], _0x3fea57 = Math['cos'](this['angle']), _0x237676 = Math['sin'](this['angle']);
            switch (this['emitType']) {
            case 0x0:
                _0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x10], _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempPosit' + 'ionPoint'], _0x2f762d), _0x445da6[0x10] = _0x2f762d['seed']) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempPosit' + 'ionPoint']), _0x4dd5df = _0x14c52f['x'], _0x17a6c2 = _0x14c52f['y'], _0x4e5917['x'] = _0x4dd5df * this['radius'], _0x4e5917['y'] = _0x17a6c2 * this['radius'], _0x4e5917['z'] = 0x0, this['randomDire' + 'ction'] ? (_0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x11], _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempDirec' + 'tionPoint'], _0x2f762d), _0x445da6[0x11] = _0x2f762d['seed']) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempDirec' + 'tionPoint']), _0x5ea008 = _0x3a6c30['_tempDirec' + 'tionPoint'], _0x47dc44['x'] = _0x5ea008['x'] * _0x237676, _0x47dc44['y'] = _0x5ea008['y'] * _0x237676) : (_0x47dc44['x'] = _0x4dd5df * _0x237676, _0x47dc44['y'] = _0x17a6c2 * _0x237676), _0x47dc44['z'] = _0x3fea57;
                break;
            case 0x1:
                _0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x10], _0x912501['_randomPoi' + 'ntUnitCirc' + 'le'](_0x3a6c30['_tempPosit' + 'ionPoint'], _0x2f762d), _0x445da6[0x10] = _0x2f762d['seed']) : _0x912501['_randomPoi' + 'ntUnitCirc' + 'le'](_0x3a6c30['_tempPosit' + 'ionPoint']), _0x4dd5df = _0x14c52f['x'], _0x17a6c2 = _0x14c52f['y'], _0x4e5917['x'] = _0x4dd5df * this['radius'], _0x4e5917['y'] = _0x17a6c2 * this['radius'], _0x4e5917['z'] = 0x0, this['randomDire' + 'ction'] ? (_0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x11], _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempDirec' + 'tionPoint'], _0x2f762d), _0x445da6[0x11] = _0x2f762d['seed']) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempDirec' + 'tionPoint']), _0x5ea008 = _0x3a6c30['_tempDirec' + 'tionPoint'], _0x47dc44['x'] = _0x5ea008['x'] * _0x237676, _0x47dc44['y'] = _0x5ea008['y'] * _0x237676) : (_0x47dc44['x'] = _0x4dd5df * _0x237676, _0x47dc44['y'] = _0x17a6c2 * _0x237676), _0x47dc44['z'] = _0x3fea57;
                break;
            case 0x2:
                _0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x10], _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempPosit' + 'ionPoint'], _0x2f762d)) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x3a6c30['_tempPosit' + 'ionPoint']), _0x4dd5df = _0x14c52f['x'], _0x17a6c2 = _0x14c52f['y'], _0x4e5917['x'] = _0x4dd5df * this['radius'], _0x4e5917['y'] = _0x17a6c2 * this['radius'], _0x4e5917['z'] = 0x0, _0x47dc44['x'] = _0x4dd5df * _0x237676, _0x47dc44['y'] = _0x17a6c2 * _0x237676, _0x47dc44['z'] = _0x3fea57, _0x43b358['normalize'](_0x47dc44, _0x47dc44), _0x2f762d ? (_0x43b358['scale'](_0x47dc44, this['length'] * _0x2f762d['getFloat'](), _0x47dc44), _0x445da6[0x10] = _0x2f762d['seed']) : _0x43b358['scale'](_0x47dc44, this['length'] * Math['random'](), _0x47dc44), _0x43b358['add'](_0x4e5917, _0x47dc44, _0x4e5917), this['randomDire' + 'ction'] && (_0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x11], _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x47dc44, _0x2f762d), _0x445da6[0x11] = _0x2f762d['seed']) : _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x47dc44));
                break;
            case 0x3:
                _0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x10], _0x912501['_randomPoi' + 'ntUnitCirc' + 'le'](_0x3a6c30['_tempPosit' + 'ionPoint'], _0x2f762d)) : _0x912501['_randomPoi' + 'ntUnitCirc' + 'le'](_0x3a6c30['_tempPosit' + 'ionPoint']), _0x4dd5df = _0x14c52f['x'], _0x17a6c2 = _0x14c52f['y'], _0x4e5917['x'] = _0x4dd5df * this['radius'], _0x4e5917['y'] = _0x17a6c2 * this['radius'], _0x4e5917['z'] = 0x0, _0x47dc44['x'] = _0x4dd5df * _0x237676, _0x47dc44['y'] = _0x17a6c2 * _0x237676, _0x47dc44['z'] = _0x3fea57, _0x43b358['normalize'](_0x47dc44, _0x47dc44), _0x2f762d ? (_0x43b358['scale'](_0x47dc44, this['length'] * _0x2f762d['getFloat'](), _0x47dc44), _0x445da6[0x10] = _0x2f762d['seed']) : _0x43b358['scale'](_0x47dc44, this['length'] * Math['random'](), _0x47dc44), _0x43b358['add'](_0x4e5917, _0x47dc44, _0x4e5917), this['randomDire' + 'ction'] && (_0x2f762d ? (_0x2f762d['seed'] = _0x445da6[0x11], _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x47dc44, _0x2f762d), _0x445da6[0x11] = _0x2f762d['seed']) : _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x47dc44));
                break;
            default:
                throw new Error('ConeShape:' + 'emitType\x20i' + 's\x20invalid.');
            }
        }
        ['cloneTo'](_0x28cfd2) {
            super['cloneTo'](_0x28cfd2);
            var _0x5c858b = _0x28cfd2;
            _0x5c858b['angle'] = this['angle'], _0x5c858b['radius'] = this['radius'], _0x5c858b['length'] = this['length'], _0x5c858b['emitType'] = this['emitType'], _0x5c858b['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x4b0307 = new _0x3a6c30();
            return this['cloneTo'](_0x4b0307), _0x4b0307;
        }
    }
    _0x3a6c30['_tempPosit' + 'ionPoint'] = new _0x2d45ed(), _0x3a6c30['_tempDirec' + 'tionPoint'] = new _0x2d45ed();
    class _0x4d8541 extends _0x3a52f1 {
        constructor() {
            super(), this['radius'] = 0x1, this['emitFromSh' + 'ell'] = !0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x1b0e63) {
            var _0x3778ff = _0x1b0e63['min'];
            _0x3778ff['x'] = _0x3778ff['y'] = _0x3778ff['z'] = -this['radius'];
            var _0x1a328f = _0x1b0e63['max'];
            _0x1a328f['x'] = _0x1a328f['y'] = this['radius'], _0x1a328f['z'] = 0x0;
        }
        ['_getSpeedB' + 'oundBox'](_0x5be78a) {
            var _0x3ea6ef = _0x5be78a['min'];
            _0x3ea6ef['x'] = _0x3ea6ef['y'] = -0x1, _0x3ea6ef['z'] = 0x0;
            var _0x469047 = _0x5be78a['max'];
            _0x469047['x'] = _0x469047['y'] = _0x469047['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x1b9549, _0x287997, _0x16c005 = null, _0x4692b7 = null) {
            _0x16c005 ? (_0x16c005['seed'] = _0x4692b7[0x10], this['emitFromSh' + 'ell'] ? _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x1b9549, _0x16c005) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x1b9549, _0x16c005), _0x4692b7[0x10] = _0x16c005['seed']) : this['emitFromSh' + 'ell'] ? _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x1b9549) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x1b9549), _0x43b358['scale'](_0x1b9549, this['radius'], _0x1b9549);
            var _0x32d199 = _0x1b9549['z'];
            _0x32d199 < 0x0 && (_0x1b9549['z'] = -0x1 * _0x32d199), this['randomDire' + 'ction'] ? _0x16c005 ? (_0x16c005['seed'] = _0x4692b7[0x11], _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x287997, _0x16c005), _0x4692b7[0x11] = _0x16c005['seed']) : _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x287997) : _0x1b9549['cloneTo'](_0x287997);
        }
        ['cloneTo'](_0x56eccb) {
            super['cloneTo'](_0x56eccb);
            var _0x5da6eb = _0x56eccb;
            _0x5da6eb['radius'] = this['radius'], _0x5da6eb['emitFromSh' + 'ell'] = this['emitFromSh' + 'ell'], _0x5da6eb['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x3e3728 = new _0x4d8541();
            return this['cloneTo'](_0x3e3728), _0x3e3728;
        }
    }
    class _0x3c1b08 extends _0x3a52f1 {
        constructor() {
            super(), this['radius'] = 0x1, this['emitFromSh' + 'ell'] = !0x1;
        }
        ['_getShapeB' + 'oundBox'](_0xcb34c7) {
            var _0x276b67 = _0xcb34c7['min'];
            _0x276b67['x'] = _0x276b67['y'] = _0x276b67['z'] = -this['radius'];
            var _0xaf8e2a = _0xcb34c7['max'];
            _0xaf8e2a['x'] = _0xaf8e2a['y'] = _0xaf8e2a['z'] = this['radius'];
        }
        ['_getSpeedB' + 'oundBox'](_0x585a99) {
            var _0x49d019 = _0x585a99['min'];
            _0x49d019['x'] = _0x49d019['y'] = _0x49d019['z'] = -0x1;
            var _0x359a5d = _0x585a99['max'];
            _0x359a5d['x'] = _0x359a5d['y'] = _0x359a5d['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x28b9d0, _0x449ecf, _0x100615 = null, _0x2a0a2c = null) {
            _0x100615 ? (_0x100615['seed'] = _0x2a0a2c[0x10], this['emitFromSh' + 'ell'] ? _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x28b9d0, _0x100615) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x28b9d0, _0x100615), _0x2a0a2c[0x10] = _0x100615['seed']) : this['emitFromSh' + 'ell'] ? _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x28b9d0) : _0x912501['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x28b9d0), _0x43b358['scale'](_0x28b9d0, this['radius'], _0x28b9d0), this['randomDire' + 'ction'] ? _0x100615 ? (_0x100615['seed'] = _0x2a0a2c[0x11], _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x449ecf, _0x100615), _0x2a0a2c[0x11] = _0x100615['seed']) : _0x912501['_randomPoi' + 'ntUnitSphe' + 're'](_0x449ecf) : _0x28b9d0['cloneTo'](_0x449ecf);
        }
        ['cloneTo'](_0xf2da84) {
            super['cloneTo'](_0xf2da84);
            var _0x27b9dd = _0xf2da84;
            _0x27b9dd['radius'] = this['radius'], _0x27b9dd['emitFromSh' + 'ell'] = this['emitFromSh' + 'ell'], _0x27b9dd['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x4e9fbf = new _0x3c1b08();
            return this['cloneTo'](_0x4e9fbf), _0x4e9fbf;
        }
    }
    class _0x23977d {
        get ['size']() {
            return this['_size'];
        }
        constructor(_0x1ccfe4) {
            this['_size'] = _0x1ccfe4;
        }
        ['cloneTo'](_0x3fda66) {
            var _0x421776 = _0x3fda66;
            this['_size']['cloneTo'](_0x421776['_size']), _0x421776['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x106148;
            switch (this['_size']['type']) {
            case 0x0:
                _0x106148 = this['_size']['separateAx' + 'es'] ? _0x42e41d['createByGr' + 'adientSepa' + 'rate'](this['_size']['gradientX']['clone'](), this['_size']['gradientY']['clone'](), this['_size']['gradientZ']['clone']()) : _0x42e41d['createByGr' + 'adient'](this['_size']['gradient']['clone']());
                break;
            case 0x1:
                _0x106148 = this['_size']['separateAx' + 'es'] ? _0x42e41d['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](this['_size']['constantMi' + 'nSeparate']['clone'](), this['_size']['constantMa' + 'xSeparate']['clone']()) : _0x42e41d['createByRa' + 'ndomTwoCon' + 'stant'](this['_size']['constantMi' + 'n'], this['_size']['constantMa' + 'x']);
                break;
            case 0x2:
                _0x106148 = this['_size']['separateAx' + 'es'] ? _0x42e41d['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_size']['gradientXM' + 'in']['clone'](), this['_size']['gradientYM' + 'in']['clone'](), this['_size']['gradientZM' + 'in']['clone'](), this['_size']['gradientXM' + 'ax']['clone'](), this['_size']['gradientYM' + 'ax']['clone'](), this['_size']['gradientZM' + 'ax']['clone']()) : _0x42e41d['createByRa' + 'ndomTwoGra' + 'dient'](this['_size']['gradientMi' + 'n']['clone'](), this['_size']['gradientMa' + 'x']['clone']());
            }
            var _0x19d3f0 = new _0x23977d(_0x106148);
            return _0x19d3f0['enable'] = this['enable'], _0x19d3f0;
        }
    }
    class _0x300d3f {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = 0x0, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0;
        }
        static ['createByCo' + 'nstant'](_0x2c0138 = 0x0) {
            var _0x39aa71 = new _0x300d3f();
            return _0x39aa71['_type'] = 0x0, _0x39aa71['_constant'] = _0x2c0138, _0x39aa71;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x370b7f = 0x0, _0x161cdb = 0x0) {
            var _0x287541 = new _0x300d3f();
            return _0x287541['_type'] = 0x1, _0x287541['_constantM' + 'in'] = _0x370b7f, _0x287541['_constantM' + 'ax'] = _0x161cdb, _0x287541;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        ['cloneTo'](_0x399c17) {
            var _0x150913 = _0x399c17;
            _0x150913['_type'] = this['_type'], _0x150913['_constant'] = this['_constant'], _0x150913['_constantM' + 'in'] = this['_constantM' + 'in'], _0x150913['_constantM' + 'ax'] = this['_constantM' + 'ax'];
        }
        ['clone']() {
            var _0xf868b7 = new _0x300d3f();
            return this['cloneTo'](_0xf868b7), _0xf868b7;
        }
    }
    class _0x4fc898 {
        constructor(_0x16eb1d, _0x249aa9) {
            this['type'] = 0x0, this['randomRow'] = !0x1, this['rowIndex'] = 0x0, this['cycles'] = 0x0, this['enableUVCh' + 'annels'] = 0x0, this['enable'] = !0x1, this['tiles'] = new _0x2d45ed(0x1, 0x1), this['type'] = 0x0, this['randomRow'] = !0x0, this['rowIndex'] = 0x0, this['cycles'] = 0x1, this['enableUVCh' + 'annels'] = 0x1, this['_frame'] = _0x16eb1d, this['_startFram' + 'e'] = _0x249aa9;
        }
        get ['frame']() {
            return this['_frame'];
        }
        get ['startFrame']() {
            return this['_startFram' + 'e'];
        }
        ['cloneTo'](_0x281b24) {
            var _0x5e3af8 = _0x281b24;
            this['tiles']['cloneTo'](_0x5e3af8['tiles']), _0x5e3af8['type'] = this['type'], _0x5e3af8['randomRow'] = this['randomRow'], _0x5e3af8['rowIndex'] = this['rowIndex'], _0x5e3af8['cycles'] = this['cycles'], _0x5e3af8['enableUVCh' + 'annels'] = this['enableUVCh' + 'annels'], _0x5e3af8['enable'] = this['enable'], this['_frame']['cloneTo'](_0x5e3af8['_frame']), this['_startFram' + 'e']['cloneTo'](_0x5e3af8['_startFram' + 'e']);
        }
        ['clone']() {
            var _0x48bd98, _0x4cbf39;
            switch (this['_frame']['type']) {
            case 0x0:
                _0x48bd98 = _0x197328['createByCo' + 'nstant'](this['_frame']['constant']);
                break;
            case 0x1:
                _0x48bd98 = _0x197328['createByOv' + 'erTime'](this['_frame']['frameOverT' + 'imeData']['clone']());
                break;
            case 0x2:
                _0x48bd98 = _0x197328['createByRa' + 'ndomTwoCon' + 'stant'](this['_frame']['constantMi' + 'n'], this['_frame']['constantMa' + 'x']);
                break;
            case 0x3:
                _0x48bd98 = _0x197328['createByRa' + 'ndomTwoOve' + 'rTime'](this['_frame']['frameOverT' + 'imeDataMin']['clone'](), this['_frame']['frameOverT' + 'imeDataMax']['clone']());
            }
            switch (this['_startFram' + 'e']['type']) {
            case 0x0:
                _0x4cbf39 = _0x300d3f['createByCo' + 'nstant'](this['_startFram' + 'e']['constant']);
                break;
            case 0x1:
                _0x4cbf39 = _0x300d3f['createByRa' + 'ndomTwoCon' + 'stant'](this['_startFram' + 'e']['constantMi' + 'n'], this['_startFram' + 'e']['constantMa' + 'x']);
            }
            var _0x50dbce = new _0x4fc898(_0x48bd98, _0x4cbf39);
            return this['cloneTo'](_0x50dbce), _0x50dbce;
        }
    }
    class _0x40a7f3 {
        constructor(_0x2d3347) {
            this['enable'] = !0x1, this['space'] = 0x0, this['_velocity'] = _0x2d3347;
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        ['cloneTo'](_0x21c6c4) {
            var _0x25c7b1 = _0x21c6c4;
            this['_velocity']['cloneTo'](_0x25c7b1['_velocity']), _0x25c7b1['enable'] = this['enable'], _0x25c7b1['space'] = this['space'];
        }
        ['clone']() {
            var _0x40a10a;
            switch (this['_velocity']['type']) {
            case 0x0:
                _0x40a10a = _0x1c4583['createByCo' + 'nstant'](this['_velocity']['constant']['clone']());
                break;
            case 0x1:
                _0x40a10a = _0x1c4583['createByGr' + 'adient'](this['_velocity']['gradientX']['clone'](), this['_velocity']['gradientY']['clone'](), this['_velocity']['gradientZ']['clone']());
                break;
            case 0x2:
                _0x40a10a = _0x1c4583['createByRa' + 'ndomTwoCon' + 'stant'](this['_velocity']['constantMi' + 'n']['clone'](), this['_velocity']['constantMa' + 'x']['clone']());
                break;
            case 0x3:
                _0x40a10a = _0x1c4583['createByRa' + 'ndomTwoGra' + 'dient'](this['_velocity']['gradientXM' + 'in']['clone'](), this['_velocity']['gradientYM' + 'in']['clone'](), this['_velocity']['gradientZM' + 'in']['clone'](), this['_velocity']['gradientXM' + 'ax']['clone'](), this['_velocity']['gradientYM' + 'ax']['clone'](), this['_velocity']['gradientZM' + 'ax']['clone']());
            }
            var _0x1e6ec7 = new _0x40a7f3(_0x40a10a);
            return _0x1e6ec7['enable'] = this['enable'], _0x1e6ec7['space'] = this['space'], _0x1e6ec7;
        }
    }
    class _0xa664f1 {
    }
    _0xa664f1['WORLDPOSIT' + 'ION'] = _0x38ffce['propertyNa' + 'meToID']('u_WorldPos' + 'ition'), _0xa664f1['WORLDROTAT' + 'ION'] = _0x38ffce['propertyNa' + 'meToID']('u_WorldRot' + 'ation'), _0xa664f1['POSITIONSC' + 'ALE'] = _0x38ffce['propertyNa' + 'meToID']('u_Position' + 'Scale'), _0xa664f1['SIZESCALE'] = _0x38ffce['propertyNa' + 'meToID']('u_SizeScal' + 'e'), _0xa664f1['SCALINGMOD' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_ScalingM' + 'ode'), _0xa664f1['GRAVITY'] = _0x38ffce['propertyNa' + 'meToID']('u_Gravity'), _0xa664f1['THREEDSTAR' + 'TROTATION'] = _0x38ffce['propertyNa' + 'meToID']('u_ThreeDSt' + 'artRotatio' + 'n'), _0xa664f1['STRETCHEDB' + 'ILLBOARDLE' + 'NGTHSCALE'] = _0x38ffce['propertyNa' + 'meToID']('u_Stretche' + 'dBillboard' + 'LengthScal' + 'e'), _0xa664f1['STRETCHEDB' + 'ILLBOARDSP' + 'EEDSCALE'] = _0x38ffce['propertyNa' + 'meToID']('u_Stretche' + 'dBillboard' + 'SpeedScale'), _0xa664f1['SIMULATION' + 'SPACE'] = _0x38ffce['propertyNa' + 'meToID']('u_Simulati' + 'onSpace'), _0xa664f1['CURRENTTIM' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_CurrentT' + 'ime'), _0xa664f1['VOLVELOCIT' + 'YCONST'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityConst'), _0xa664f1['VOLVELOCIT' + 'YGRADIENTX'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tX'), _0xa664f1['VOLVELOCIT' + 'YGRADIENTY'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tY'), _0xa664f1['VOLVELOCIT' + 'YGRADIENTZ'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tZ'), _0xa664f1['VOLVELOCIT' + 'YCONSTMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityConstMa' + 'x'), _0xa664f1['VOLVELOCIT' + 'YGRADIENTX' + 'MAX'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxX'), _0xa664f1['VOLVELOCIT' + 'YGRADIENTY' + 'MAX'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxY'), _0xa664f1['VOLVELOCIT' + 'YGRADIENTZ' + 'MAX'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxZ'), _0xa664f1['VOLSPACETY' + 'PE'] = _0x38ffce['propertyNa' + 'meToID']('u_VOLSpace' + 'Type'), _0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'] = _0x38ffce['propertyNa' + 'meToID']('u_ColorOve' + 'rLifeGradi' + 'entAlphas'), _0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'] = _0x38ffce['propertyNa' + 'meToID']('u_ColorOve' + 'rLifeGradi' + 'entColors'), _0xa664f1['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'] = _0x38ffce['propertyNa' + 'meToID']('u_MaxColor' + 'OverLifeGr' + 'adientAlph' + 'as'), _0xa664f1['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'] = _0x38ffce['propertyNa' + 'meToID']('u_MaxColor' + 'OverLifeGr' + 'adientColo' + 'rs'), _0xa664f1['SOLSIZEGRA' + 'DIENT'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radient'), _0xa664f1['SOLSIZEGRA' + 'DIENTX'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientX'), _0xa664f1['SOLSIZEGRA' + 'DIENTY'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientY'), _0xa664f1['SOLSizeGra' + 'dientZ'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientZ'), _0xa664f1['SOLSizeGra' + 'dientMax'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax'), _0xa664f1['SOLSIZEGRA' + 'DIENTXMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'X'), _0xa664f1['SOLSIZEGRA' + 'DIENTYMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'Y'), _0xa664f1['SOLSizeGra' + 'dientZMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'Z'), _0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NST'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'Const'), _0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstSepra' + 'rate'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'Gradient'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientX'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientY'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientZ'), _0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstMax'), _0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAXSEPR' + 'ARATE'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstMaxSe' + 'prarate'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'x'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTXMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xX'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTYMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xY'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xZ'), _0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTWMAX'] = _0x38ffce['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xW'), _0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NCYCLES'] = _0x38ffce['propertyNa' + 'meToID']('u_TSACycle' + 's'), _0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NSUBUVLENG' + 'TH'] = _0x38ffce['propertyNa' + 'meToID']('u_TSASubUV' + 'Length'), _0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'] = _0x38ffce['propertyNa' + 'meToID']('u_TSAGradi' + 'entUVs'), _0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTM' + 'AXUVS'] = _0x38ffce['propertyNa' + 'meToID']('u_TSAMaxGr' + 'adientUVs');
    class _0x2651fd extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PARTICLESH' + 'URIKEN'), this['_color'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['renderMode'] = _0x2651fd['RENDERMODE' + '_ALPHABLEN' + 'DED'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x2651fd['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP'] = _0x38ffce['getDefineB' + 'yName']('DIFFUSEMAP'), _0x2651fd['SHADERDEFI' + 'NE_TINTCOL' + 'OR'] = _0x38ffce['getDefineB' + 'yName']('TINTCOLOR'), _0x2651fd['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x38ffce['getDefineB' + 'yName']('ADDTIVEFOG'), _0x2651fd['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x38ffce['getDefineB' + 'yName']('TILINGOFFS' + 'ET');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x52e3b5) {
            this['_color']['x'] = _0x52e3b5, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x5d9792) {
            this['_color']['y'] = _0x5d9792, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x486c48) {
            this['_color']['z'] = _0x486c48, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x11605b) {
            this['_color']['w'] = _0x11605b, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x145af4) {
            var _0x4e9148 = this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET']);
            _0x4e9148['x'] = _0x145af4, this['tilingOffs' + 'et'] = _0x4e9148;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x5107af) {
            var _0x5b871b = this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET']);
            _0x5b871b['y'] = _0x5107af, this['tilingOffs' + 'et'] = _0x5b871b;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x227141) {
            var _0x555acd = this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET']);
            _0x555acd['z'] = _0x227141, this['tilingOffs' + 'et'] = _0x555acd;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x1a4b19) {
            var _0x4d063d = this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET']);
            _0x4d063d['w'] = _0x1a4b19, this['tilingOffs' + 'et'] = _0x4d063d;
        }
        set ['renderMode'](_0x355774) {
            switch (_0x355774) {
            case _0x2651fd['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_NONE'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['alphaTest'] = !0x1, this['_shaderVal' + 'ues']['addDefine'](_0x2651fd['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x2651fd['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_NONE'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['alphaTest'] = !0x1, this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2651fd['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('ShurikenPa' + 'rticleMate' + 'rial\x20:\x20ren' + 'derMode\x20va' + 'lue\x20error.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x534248) {
            this['_TintColor' + 'R'] = _0x534248;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x4855c9) {
            this['_TintColor' + 'G'] = _0x4855c9;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x58954f) {
            this['_TintColor' + 'B'] = _0x58954f;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x4991dd) {
            this['_TintColor' + 'A'] = _0x4991dd;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TINTCOLOR']);
        }
        set ['color'](_0x4ffd77) {
            _0x4ffd77 ? this['_shaderVal' + 'ues']['addDefine'](_0x2651fd['SHADERDEFI' + 'NE_TINTCOL' + 'OR']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2651fd['SHADERDEFI' + 'NE_TINTCOL' + 'OR']), this['_shaderVal' + 'ues']['setVector'](_0x2651fd['TINTCOLOR'], _0x4ffd77);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x5a7342) {
            this['_MainTex_S' + 'TX'] = _0x5a7342;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x496fdc) {
            this['_MainTex_S' + 'TY'] = _0x496fdc;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x377528) {
            this['_MainTex_S' + 'TZ'] = _0x377528;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x1990a1) {
            this['_MainTex_S' + 'TW'] = _0x1990a1;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x2651fd['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x371536) {
            _0x371536 && (0x1 != _0x371536['x'] || 0x1 != _0x371536['y'] || 0x0 != _0x371536['z'] || 0x0 != _0x371536['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x2651fd['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2651fd['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x2651fd['TILINGOFFS' + 'ET'], _0x371536);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x2651fd['DIFFUSETEX' + 'TURE']);
        }
        set ['texture'](_0x5c1a4b) {
            _0x5c1a4b ? this['_shaderVal' + 'ues']['addDefine'](_0x2651fd['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x2651fd['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']), this['_shaderVal' + 'ues']['setTexture'](_0x2651fd['DIFFUSETEX' + 'TURE'], _0x5c1a4b);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x2651fd['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x57a18a) {
            this['_shaderVal' + 'ues']['setBool'](_0x2651fd['DEPTH_WRIT' + 'E'], _0x57a18a);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2651fd['CULL']);
        }
        set ['cull'](_0x363008) {
            this['_shaderVal' + 'ues']['setInt'](_0x2651fd['CULL'], _0x363008);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2651fd['BLEND']);
        }
        set ['blend'](_0x5b17ce) {
            this['_shaderVal' + 'ues']['setInt'](_0x2651fd['BLEND'], _0x5b17ce);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2651fd['BLEND_SRC']);
        }
        set ['blendSrc'](_0x3ad129) {
            this['_shaderVal' + 'ues']['setInt'](_0x2651fd['BLEND_SRC'], _0x3ad129);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2651fd['BLEND_DST']);
        }
        set ['blendDst'](_0x436592) {
            this['_shaderVal' + 'ues']['setInt'](_0x2651fd['BLEND_DST'], _0x436592);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x2651fd['DEPTH_TEST']);
        }
        set ['depthTest'](_0x3c2bc1) {
            this['_shaderVal' + 'ues']['setInt'](_0x2651fd['DEPTH_TEST'], _0x3c2bc1);
        }
        ['clone']() {
            var _0x8f16c7 = new _0x2651fd();
            return this['cloneTo'](_0x8f16c7), _0x8f16c7;
        }
    }
    _0x2651fd['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x0, _0x2651fd['RENDERMODE' + '_ADDTIVE'] = 0x1, _0x2651fd['DIFFUSETEX' + 'TURE'] = _0x38ffce['propertyNa' + 'meToID']('u_texture'), _0x2651fd['TINTCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_Tintcolo' + 'r'), _0x2651fd['TILINGOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x2651fd['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x2651fd['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x2651fd['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x2651fd['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x2651fd['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x2651fd['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x3b6f66 extends _0xc4e4b9 {
        constructor(_0x3c0742) {
            super(_0x3c0742), this['_finalGrav' + 'ity'] = new _0x43b358(), this['_tempRotat' + 'ionMatrix'] = new _0x334e9d(), this['_mesh'] = null, this['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = 0x0, this['stretchedB' + 'illboardSp' + 'eedScale'] = 0x0, this['stretchedB' + 'illboardLe' + 'ngthScale'] = 0x2, this['_defaultBo' + 'undBox'] = new _0x11e6d9(new _0x43b358(), new _0x43b358()), this['renderMode'] = 0x0, this['_supportOc' + 'tree'] = !0x1;
        }
        get ['renderMode']() {
            return this['_renderMod' + 'e'];
        }
        set ['renderMode'](_0x478658) {
            if (this['_renderMod' + 'e'] !== _0x478658) {
                var _0x36ac04 = this['_shaderVal' + 'ues'];
                switch (this['_renderMod' + 'e']) {
                case 0x0:
                    _0x36ac04['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD']);
                    break;
                case 0x1:
                    _0x36ac04['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD']);
                    break;
                case 0x2:
                    _0x36ac04['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD']);
                    break;
                case 0x3:
                    _0x36ac04['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D']);
                    break;
                case 0x4:
                    _0x36ac04['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH']);
                }
                switch (this['_renderMod' + 'e'] = _0x478658, _0x478658) {
                case 0x0:
                    _0x36ac04['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD']);
                    break;
                case 0x1:
                    _0x36ac04['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD']);
                    break;
                case 0x2:
                    _0x36ac04['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD']);
                    break;
                case 0x3:
                    _0x36ac04['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D']);
                    break;
                case 0x4:
                    _0x36ac04['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH']);
                    break;
                default:
                    throw new Error('ShurikenPa' + 'rticleRend' + 'er:\x20unknow' + 'n\x20renderMo' + 'de\x20Value.');
                }
                var _0x3e7ad1 = this['_owner']['particleSy' + 'stem'];
                _0x3e7ad1 && _0x3e7ad1['_initBuffe' + 'rDatas']();
            }
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x44fddc) {
            this['_mesh'] !== _0x44fddc && (this['_mesh'] && this['_mesh']['_removeRef' + 'erence'](), this['_mesh'] = _0x44fddc, _0x44fddc && _0x44fddc['_addRefere' + 'nce'](), this['_owner']['particleSy' + 'stem']['_initBuffe' + 'rDatas']());
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            if ((_0x3270e9 = this['_bounds']['getMin']())['x'] = -Number['MAX_VALUE'], _0x3270e9['y'] = -Number['MAX_VALUE'], _0x3270e9['z'] = -Number['MAX_VALUE'], this['_bounds']['setMin'](_0x3270e9), (_0x54c861 = this['_bounds']['getMax']())['x'] = Number['MAX_VALUE'], _0x54c861['y'] = Number['MAX_VALUE'], _0x54c861['z'] = Number['MAX_VALUE'], this['_bounds']['setMax'](_0x54c861), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x3270e9 = this['_bounds']['getMin'](), _0x54c861 = this['_bounds']['getMax'](), _0x187b9b = _0x5da8ae['_cullingBu' + 'ffer'];
                _0x187b9b[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x3270e9['x'], _0x187b9b[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x3270e9['y'], _0x187b9b[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x3270e9['z'], _0x187b9b[this['_cullingBu' + 'fferIndex'] + 0x4] = _0x54c861['x'], _0x187b9b[this['_cullingBu' + 'fferIndex'] + 0x5] = _0x54c861['y'], _0x187b9b[this['_cullingBu' + 'fferIndex'] + 0x6] = _0x54c861['z'];
            }
        }
        ['_needRende' + 'r'](_0x46050f, _0x2a90ac) {
            return !_0x46050f || !!_0x46050f['intersects'](this['bounds']['_getBoundB' + 'ox']()) && !!this['_owner']['particleSy' + 'stem']['isAlive'];
        }
        ['_renderUpd' + 'ate'](_0x23c49e, _0x53f7e5) {
            var _0x513c4f = this['_owner']['particleSy' + 'stem'], _0x2d3344 = this['_shaderVal' + 'ues'], _0x46fb75 = this['_owner']['transform'];
            switch (_0x513c4f['simulation' + 'Space']) {
            case 0x0:
                break;
            case 0x1:
                _0x2d3344['setVector3'](_0xa664f1['WORLDPOSIT' + 'ION'], _0x46fb75['position']), _0x2d3344['setQuatern' + 'ion'](_0xa664f1['WORLDROTAT' + 'ION'], _0x46fb75['rotation']);
                break;
            default:
                throw new Error('ShurikenPa' + 'rticleMate' + 'rial:\x20Simu' + 'lationSpac' + 'e\x20value\x20is' + '\x20invalid.');
            }
            switch (_0x513c4f['scaleMode']) {
            case 0x0:
                var _0x38f67b = _0x46fb75['getWorldLo' + 'ssyScale']();
                _0x2d3344['setVector3'](_0xa664f1['POSITIONSC' + 'ALE'], _0x38f67b), _0x2d3344['setVector3'](_0xa664f1['SIZESCALE'], _0x38f67b);
                break;
            case 0x1:
                var _0x3cd9da = _0x46fb75['localScale'];
                _0x2d3344['setVector3'](_0xa664f1['POSITIONSC' + 'ALE'], _0x3cd9da), _0x2d3344['setVector3'](_0xa664f1['SIZESCALE'], _0x3cd9da);
                break;
            case 0x2:
                _0x2d3344['setVector3'](_0xa664f1['POSITIONSC' + 'ALE'], _0x46fb75['getWorldLo' + 'ssyScale']()), _0x2d3344['setVector3'](_0xa664f1['SIZESCALE'], _0x43b358['_ONE']);
            }
            _0x43b358['scale'](_0x114bf2['gravity'], _0x513c4f['gravityMod' + 'ifier'], this['_finalGrav' + 'ity']), _0x2d3344['setVector3'](_0xa664f1['GRAVITY'], this['_finalGrav' + 'ity']), _0x2d3344['setInt'](_0xa664f1['SIMULATION' + 'SPACE'], _0x513c4f['simulation' + 'Space']), _0x2d3344['setBool'](_0xa664f1['THREEDSTAR' + 'TROTATION'], _0x513c4f['threeDStar' + 'tRotation']), _0x2d3344['setInt'](_0xa664f1['SCALINGMOD' + 'E'], _0x513c4f['scaleMode']), _0x2d3344['setNumber'](_0xa664f1['STRETCHEDB' + 'ILLBOARDLE' + 'NGTHSCALE'], this['stretchedB' + 'illboardLe' + 'ngthScale']), _0x2d3344['setNumber'](_0xa664f1['STRETCHEDB' + 'ILLBOARDSP' + 'EEDSCALE'], this['stretchedB' + 'illboardSp' + 'eedScale']), _0x2d3344['setNumber'](_0xa664f1['CURRENTTIM' + 'E'], _0x513c4f['_currentTi' + 'me']);
        }
        get ['bounds']() {
            return this['_boundsCha' + 'nge'] && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = !0x1), this['_bounds'];
        }
        ['_destroy']() {
            super['_destroy'](), this['_mesh'] && (this['_mesh']['_removeRef' + 'erence'](), this['_mesh'] = null);
        }
    }
    class _0x2894be {
        constructor() {
        }
    }
    _0x2894be['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0'] = 0x0, _0x2894be['PARTICLE_P' + 'OSITION0'] = 0x1, _0x2894be['PARTICLE_C' + 'OLOR0'] = 0x2, _0x2894be['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0'] = 0x3, _0x2894be['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME'] = 0x4, _0x2894be['PARTICLE_D' + 'IRECTIONTI' + 'ME'] = 0x5, _0x2894be['PARTICLE_S' + 'TARTCOLOR0'] = 0x6, _0x2894be['PARTICLE_E' + 'NDCOLOR0'] = 0x7, _0x2894be['PARTICLE_S' + 'TARTSIZE'] = 0x8, _0x2894be['PARTICLE_S' + 'TARTROTATI' + 'ON'] = 0x9, _0x2894be['PARTICLE_S' + 'TARTSPEED'] = 0xa, _0x2894be['PARTICLE_R' + 'ANDOM0'] = 0xb, _0x2894be['PARTICLE_R' + 'ANDOM1'] = 0xc, _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N'] = 0xd, _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'] = 0xe;
    class _0x4fa401 extends _0x2894be {
        static get ['vertexDecl' + 'aration']() {
            return _0x4fa401['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x4fa401['_vertexDec' + 'laration'] = new _0x2ca0b5(0x98, [
                new _0x50e0bd(0x0, _0x163e87['Vector4'], _0x2894be['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0']),
                new _0x50e0bd(0x10, _0x163e87['Vector4'], _0x2894be['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME']),
                new _0x50e0bd(0x20, _0x163e87['Vector4'], _0x2894be['PARTICLE_D' + 'IRECTIONTI' + 'ME']),
                new _0x50e0bd(0x30, _0x163e87['Vector4'], _0x2894be['PARTICLE_S' + 'TARTCOLOR0']),
                new _0x50e0bd(0x40, _0x163e87['Vector3'], _0x2894be['PARTICLE_S' + 'TARTSIZE']),
                new _0x50e0bd(0x4c, _0x163e87['Vector3'], _0x2894be['PARTICLE_S' + 'TARTROTATI' + 'ON']),
                new _0x50e0bd(0x58, _0x163e87['Single'], _0x2894be['PARTICLE_S' + 'TARTSPEED']),
                new _0x50e0bd(0x5c, _0x163e87['Vector4'], _0x2894be['PARTICLE_R' + 'ANDOM0']),
                new _0x50e0bd(0x6c, _0x163e87['Vector4'], _0x2894be['PARTICLE_R' + 'ANDOM1']),
                new _0x50e0bd(0x7c, _0x163e87['Vector3'], _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N']),
                new _0x50e0bd(0x88, _0x163e87['Vector4'], _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'])
            ]);
        }
        get ['cornerText' + 'ureCoordin' + 'ate']() {
            return this['_cornerTex' + 'tureCoordi' + 'nate'];
        }
        get ['positionSt' + 'artLifeTim' + 'e']() {
            return this['_positionS' + 'tartLifeTi' + 'me'];
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        get ['startColor']() {
            return this['_startColo' + 'r'];
        }
        get ['startSize']() {
            return this['_startSize'];
        }
        get ['startRotat' + 'ion0']() {
            return this['_startRota' + 'tion0'];
        }
        get ['startRotat' + 'ion1']() {
            return this['_startRota' + 'tion1'];
        }
        get ['startRotat' + 'ion2']() {
            return this['_startRota' + 'tion2'];
        }
        get ['startLifeT' + 'ime']() {
            return this['_startLife' + 'Time'];
        }
        get ['time']() {
            return this['_time'];
        }
        get ['startSpeed']() {
            return this['_startSpee' + 'd'];
        }
        get ['random0']() {
            return this['_randoms0'];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulation' + 'WorldPosti' + 'on']() {
            return this['_simulatio' + 'nWorldPost' + 'ion'];
        }
        constructor(_0x5a6346, _0x188c9b, _0x4ffa92, _0x4e017e, _0x47ff2b, _0x268026, _0x28f459, _0x1acb58, _0x9aaa46, _0x1ab9d3, _0x2fd2c7, _0x56e23e, _0x29522a, _0xa87c36) {
            super(), this['_cornerTex' + 'tureCoordi' + 'nate'] = _0x5a6346, this['_positionS' + 'tartLifeTi' + 'me'] = _0x188c9b, this['_velocity'] = _0x4ffa92, this['_startColo' + 'r'] = _0x4e017e, this['_startSize'] = _0x47ff2b, this['_startRota' + 'tion0'] = _0x268026, this['_startRota' + 'tion1'] = _0x28f459, this['_startRota' + 'tion2'] = _0x1acb58, this['_startLife' + 'Time'] = _0x9aaa46, this['_time'] = _0x1ab9d3, this['_startSpee' + 'd'] = _0x2fd2c7, this['_randoms0'] = this['random0'], this['_randoms1'] = this['random1'], this['_simulatio' + 'nWorldPost' + 'ion'] = _0xa87c36;
        }
    }
    class _0x26aea6 extends _0x2894be {
        static ['__init__']() {
            _0x26aea6['_vertexDec' + 'laration'] = new _0x2ca0b5(0xac, [
                new _0x50e0bd(0x0, _0x163e87['Vector3'], _0x2894be['PARTICLE_P' + 'OSITION0']),
                new _0x50e0bd(0xc, _0x163e87['Vector4'], _0x2894be['PARTICLE_C' + 'OLOR0']),
                new _0x50e0bd(0x1c, _0x163e87['Vector2'], _0x2894be['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0']),
                new _0x50e0bd(0x24, _0x163e87['Vector4'], _0x2894be['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME']),
                new _0x50e0bd(0x34, _0x163e87['Vector4'], _0x2894be['PARTICLE_D' + 'IRECTIONTI' + 'ME']),
                new _0x50e0bd(0x44, _0x163e87['Vector4'], _0x2894be['PARTICLE_S' + 'TARTCOLOR0']),
                new _0x50e0bd(0x54, _0x163e87['Vector3'], _0x2894be['PARTICLE_S' + 'TARTSIZE']),
                new _0x50e0bd(0x60, _0x163e87['Vector3'], _0x2894be['PARTICLE_S' + 'TARTROTATI' + 'ON']),
                new _0x50e0bd(0x6c, _0x163e87['Single'], _0x2894be['PARTICLE_S' + 'TARTSPEED']),
                new _0x50e0bd(0x70, _0x163e87['Vector4'], _0x2894be['PARTICLE_R' + 'ANDOM0']),
                new _0x50e0bd(0x80, _0x163e87['Vector4'], _0x2894be['PARTICLE_R' + 'ANDOM1']),
                new _0x50e0bd(0x90, _0x163e87['Vector3'], _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N']),
                new _0x50e0bd(0x9c, _0x163e87['Vector4'], _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'])
            ]);
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x26aea6['_vertexDec' + 'laration'];
        }
        get ['cornerText' + 'ureCoordin' + 'ate']() {
            return this['_cornerTex' + 'tureCoordi' + 'nate'];
        }
        get ['position']() {
            return this['_positionS' + 'tartLifeTi' + 'me'];
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        get ['startColor']() {
            return this['_startColo' + 'r'];
        }
        get ['startSize']() {
            return this['_startSize'];
        }
        get ['startRotat' + 'ion0']() {
            return this['_startRota' + 'tion0'];
        }
        get ['startRotat' + 'ion1']() {
            return this['_startRota' + 'tion1'];
        }
        get ['startRotat' + 'ion2']() {
            return this['_startRota' + 'tion2'];
        }
        get ['startLifeT' + 'ime']() {
            return this['_startLife' + 'Time'];
        }
        get ['time']() {
            return this['_time'];
        }
        get ['startSpeed']() {
            return this['_startSpee' + 'd'];
        }
        get ['random0']() {
            return this['_randoms0'];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulation' + 'WorldPosti' + 'on']() {
            return this['_simulatio' + 'nWorldPost' + 'ion'];
        }
        constructor(_0x27fbee, _0x2761dc, _0x526ecb, _0x554575, _0x5c9915, _0x50f79e, _0x3bb19c, _0x9d51f, _0xc2c61b, _0x18a7a9, _0x433b27, _0x3cadff, _0x1c7d9e, _0x49e5f8) {
            super(), this['_cornerTex' + 'tureCoordi' + 'nate'] = _0x27fbee, this['_positionS' + 'tartLifeTi' + 'me'] = _0x2761dc, this['_velocity'] = _0x526ecb, this['_startColo' + 'r'] = _0x554575, this['_startSize'] = _0x5c9915, this['_startRota' + 'tion0'] = _0x50f79e, this['_startRota' + 'tion1'] = _0x3bb19c, this['_startRota' + 'tion2'] = _0x9d51f, this['_startLife' + 'Time'] = _0xc2c61b, this['_time'] = _0x18a7a9, this['_startSpee' + 'd'] = _0x433b27, this['_randoms0'] = this['random0'], this['_randoms1'] = this['random1'], this['_simulatio' + 'nWorldPost' + 'ion'] = _0x49e5f8;
        }
    }
    class _0x5614ba {
        constructor(_0x52966b) {
            this['_temp'] = new Uint32Array(0x1), this['seeds'] = new Uint32Array(0x4), this['seeds'][0x0] = _0x52966b, this['seeds'][0x1] = 0x6c078965 * this['seeds'][0x0] + 0x1, this['seeds'][0x2] = 0x6c078965 * this['seeds'][0x1] + 0x1, this['seeds'][0x3] = 0x6c078965 * this['seeds'][0x2] + 0x1;
        }
        static ['getFloatFr' + 'omInt'](_0x4391ab) {
            return 0x1 / 0x7fffff * (0x7fffff & _0x4391ab);
        }
        static ['getByteFro' + 'mInt'](_0x22ddcd) {
            return (0x7fffff & _0x22ddcd) >>> 0xf;
        }
        get ['seed']() {
            return this['seeds'][0x0];
        }
        set ['seed'](_0xfcdfc9) {
            this['seeds'][0x0] = _0xfcdfc9, this['seeds'][0x1] = 0x6c078965 * this['seeds'][0x0] + 0x1, this['seeds'][0x2] = 0x6c078965 * this['seeds'][0x1] + 0x1, this['seeds'][0x3] = 0x6c078965 * this['seeds'][0x2] + 0x1;
        }
        ['getUint']() {
            return this['_temp'][0x0] = this['seeds'][0x0] ^ this['seeds'][0x0] << 0xb, this['seeds'][0x0] = this['seeds'][0x1], this['seeds'][0x1] = this['seeds'][0x2], this['seeds'][0x2] = this['seeds'][0x3], this['seeds'][0x3] = this['seeds'][0x3] ^ this['seeds'][0x3] >>> 0x13 ^ this['_temp'][0x0] ^ this['_temp'][0x0] >>> 0x8, this['seeds'][0x3];
        }
        ['getFloat']() {
            return this['getUint'](), (0x7fffff & this['seeds'][0x3]) * (0x1 / 0x7fffff);
        }
        ['getSignedF' + 'loat']() {
            return 0x2 * this['getFloat']() - 0x1;
        }
    }
    class _0x553257 {
        constructor() {
            this['_emissionR' + 'ate'] = 0xa, this['_destroyed'] = !0x1, this['_bursts'] = [];
        }
        set ['emissionRa' + 'te'](_0x51f1fc) {
            if (_0x51f1fc < 0x0)
                throw new Error('ParticleBa' + 'seShape:em' + 'issionRate' + '\x20value\x20mus' + 't\x20large\x20or' + '\x20equal\x20tha' + 'n\x200.');
            this['_emissionR' + 'ate'] = _0x51f1fc;
        }
        get ['emissionRa' + 'te']() {
            return this['_emissionR' + 'ate'];
        }
        get ['destroyed']() {
            return this['_destroyed'];
        }
        ['destroy']() {
            this['_bursts'] = null, this['_destroyed'] = !0x0;
        }
        ['getBurstsC' + 'ount']() {
            return this['_bursts']['length'];
        }
        ['getBurstBy' + 'Index'](_0x1c1bfc) {
            return this['_bursts'][_0x1c1bfc];
        }
        ['addBurst'](_0x2843c8) {
            var _0x5a9e81 = this['_bursts']['length'];
            if (_0x5a9e81 > 0x0) {
                for (var _0x357a87 = 0x0; _0x357a87 < _0x5a9e81; _0x357a87++)
                    this['_bursts'][_0x357a87]['time'] > _0x2843c8['time'] && this['_bursts']['splice'](_0x357a87, 0x0, _0x2843c8);
            }
            this['_bursts']['push'](_0x2843c8);
        }
        ['removeBurs' + 't'](_0xba9a71) {
            var _0x19a574 = this['_bursts']['indexOf'](_0xba9a71);
            -0x1 !== _0x19a574 && this['_bursts']['splice'](_0x19a574, 0x1);
        }
        ['removeBurs' + 'tByIndex'](_0x13ea1d) {
            this['_bursts']['splice'](_0x13ea1d, 0x1);
        }
        ['clearBurst']() {
            this['_bursts']['length'] = 0x0;
        }
        ['cloneTo'](_0x4787ce) {
            var _0x46133a = _0x4787ce, _0x1dde92 = _0x46133a['_bursts'];
            _0x1dde92['length'] = this['_bursts']['length'];
            for (var _0x408b10 = 0x0, _0x17d8f9 = this['_bursts']['length']; _0x408b10 < _0x17d8f9; _0x408b10++) {
                var _0x2b5236 = _0x1dde92[_0x408b10];
                _0x2b5236 ? this['_bursts'][_0x408b10]['cloneTo'](_0x2b5236) : _0x1dde92[_0x408b10] = this['_bursts'][_0x408b10]['clone']();
            }
            _0x46133a['_emissionR' + 'ate'] = this['_emissionR' + 'ate'], _0x46133a['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x44198b = new _0x553257();
            return this['cloneTo'](_0x44198b), _0x44198b;
        }
    }
    class _0x54991b {
        constructor() {
        }
        static ['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x241f8c, _0x5d269c) {
            for (var _0x25b73b = 0x1, _0x2dc07e = _0x241f8c['gradientCo' + 'unt']; _0x25b73b < _0x2dc07e; _0x25b73b++) {
                var _0x160f62 = _0x241f8c['getKeyByIn' + 'dex'](_0x25b73b);
                if (_0x160f62 >= _0x5d269c) {
                    var _0x46cdef = _0x241f8c['getKeyByIn' + 'dex'](_0x25b73b - 0x1), _0x4c280a = (_0x5d269c - _0x46cdef) / (_0x160f62 - _0x46cdef);
                    return _0x2247ad['MathUtil']['lerp'](_0x241f8c['getValueBy' + 'Index'](_0x25b73b - 0x1), _0x241f8c['getValueBy' + 'Index'](_0x25b73b), _0x4c280a);
                }
            }
            throw new Error('ShurikenPa' + 'rticleData' + ':\x20can\x27t\x20ge' + 't\x20value\x20fo' + 'am\x20startLi' + 'feTimeGrad' + 'ient.');
        }
        static ['_randomInv' + 'ertRoation' + 'Array'](_0x73f1e5, _0x539636, _0x4c63d8, _0x287fa6, _0x3199e0) {
            var _0x29730d;
            _0x287fa6 ? (_0x287fa6['seed'] = _0x3199e0[0x6], _0x29730d = _0x287fa6['getFloat'](), _0x3199e0[0x6] = _0x287fa6['seed']) : _0x29730d = Math['random'](), _0x29730d < _0x4c63d8 ? (_0x539636['x'] = -_0x73f1e5['x'], _0x539636['y'] = -_0x73f1e5['y'], _0x539636['z'] = -_0x73f1e5['z']) : (_0x539636['x'] = _0x73f1e5['x'], _0x539636['y'] = _0x73f1e5['y'], _0x539636['z'] = _0x73f1e5['z']);
        }
        static ['_randomInv' + 'ertRoation'](_0x1e785c, _0x3bb774, _0x4ee296, _0x5e1236) {
            var _0x3b7964;
            return _0x4ee296 ? (_0x4ee296['seed'] = _0x5e1236[0x6], _0x3b7964 = _0x4ee296['getFloat'](), _0x5e1236[0x6] = _0x4ee296['seed']) : _0x3b7964 = Math['random'](), _0x3b7964 < _0x3bb774 && (_0x1e785c = -_0x1e785c), _0x1e785c;
        }
        static ['create'](_0xea6e43, _0x4580cf, _0x4433cf) {
            var _0x1c1e6f = _0xea6e43['autoRandom' + 'Seed'], _0x479283 = _0xea6e43['_rand'], _0x2fabff = _0xea6e43['_randomSee' + 'ds'];
            switch (_0xea6e43['startColor' + 'Type']) {
            case 0x0:
                var _0x6f3be5 = _0xea6e43['startColor' + 'Constant'];
                _0x54991b['startColor']['x'] = _0x6f3be5['x'], _0x54991b['startColor']['y'] = _0x6f3be5['y'], _0x54991b['startColor']['z'] = _0x6f3be5['z'], _0x54991b['startColor']['w'] = _0x6f3be5['w'];
                break;
            case 0x2:
                _0x1c1e6f ? _0x4cec8f['lerp'](_0xea6e43['startColor' + 'ConstantMi' + 'n'], _0xea6e43['startColor' + 'ConstantMa' + 'x'], Math['random'](), _0x54991b['startColor']) : (_0x479283['seed'] = _0x2fabff[0x3], _0x4cec8f['lerp'](_0xea6e43['startColor' + 'ConstantMi' + 'n'], _0xea6e43['startColor' + 'ConstantMa' + 'x'], _0x479283['getFloat'](), _0x54991b['startColor']), _0x2fabff[0x3] = _0x479283['seed']);
            }
            var _0x36a4e5 = _0xea6e43['colorOverL' + 'ifetime'];
            if (_0x36a4e5 && _0x36a4e5['enable']) {
                var _0x391ff4 = _0x36a4e5['color'];
                switch (_0x391ff4['type']) {
                case 0x0:
                    _0x54991b['startColor']['x'] = _0x54991b['startColor']['x'] * _0x391ff4['constant']['x'], _0x54991b['startColor']['y'] = _0x54991b['startColor']['y'] * _0x391ff4['constant']['y'], _0x54991b['startColor']['z'] = _0x54991b['startColor']['z'] * _0x391ff4['constant']['z'], _0x54991b['startColor']['w'] = _0x54991b['startColor']['w'] * _0x391ff4['constant']['w'];
                    break;
                case 0x2:
                    var _0x159722;
                    _0x1c1e6f ? _0x159722 = Math['random']() : (_0x479283['seed'] = _0x2fabff[0xa], _0x159722 = _0x479283['getFloat'](), _0x2fabff[0xa] = _0x479283['seed']);
                    var _0x192fbc = _0x391ff4['constantMi' + 'n'], _0x4d59d8 = _0x391ff4['constantMa' + 'x'];
                    _0x54991b['startColor']['x'] = _0x54991b['startColor']['x'] * _0x2247ad['MathUtil']['lerp'](_0x192fbc['x'], _0x4d59d8['x'], _0x159722), _0x54991b['startColor']['y'] = _0x54991b['startColor']['y'] * _0x2247ad['MathUtil']['lerp'](_0x192fbc['y'], _0x4d59d8['y'], _0x159722), _0x54991b['startColor']['z'] = _0x54991b['startColor']['z'] * _0x2247ad['MathUtil']['lerp'](_0x192fbc['z'], _0x4d59d8['z'], _0x159722), _0x54991b['startColor']['w'] = _0x54991b['startColor']['w'] * _0x2247ad['MathUtil']['lerp'](_0x192fbc['w'], _0x4d59d8['w'], _0x159722);
                }
            }
            var _0x509889 = _0x54991b['startSize'];
            switch (_0xea6e43['startSizeT' + 'ype']) {
            case 0x0:
                if (_0xea6e43['threeDStar' + 'tSize']) {
                    var _0x4c962b = _0xea6e43['startSizeC' + 'onstantSep' + 'arate'];
                    _0x509889[0x0] = _0x4c962b['x'], _0x509889[0x1] = _0x4c962b['y'], _0x509889[0x2] = _0x4c962b['z'];
                } else
                    _0x509889[0x0] = _0x509889[0x1] = _0x509889[0x2] = _0xea6e43['startSizeC' + 'onstant'];
                break;
            case 0x2:
                if (_0xea6e43['threeDStar' + 'tSize']) {
                    var _0x462e5c = _0xea6e43['startSizeC' + 'onstantMin' + 'Separate'], _0x2d6556 = _0xea6e43['startSizeC' + 'onstantMax' + 'Separate'];
                    _0x1c1e6f ? (_0x509889[0x0] = _0x2247ad['MathUtil']['lerp'](_0x462e5c['x'], _0x2d6556['x'], Math['random']()), _0x509889[0x1] = _0x2247ad['MathUtil']['lerp'](_0x462e5c['y'], _0x2d6556['y'], Math['random']()), _0x509889[0x2] = _0x2247ad['MathUtil']['lerp'](_0x462e5c['z'], _0x2d6556['z'], Math['random']())) : (_0x479283['seed'] = _0x2fabff[0x4], _0x509889[0x0] = _0x2247ad['MathUtil']['lerp'](_0x462e5c['x'], _0x2d6556['x'], _0x479283['getFloat']()), _0x509889[0x1] = _0x2247ad['MathUtil']['lerp'](_0x462e5c['y'], _0x2d6556['y'], _0x479283['getFloat']()), _0x509889[0x2] = _0x2247ad['MathUtil']['lerp'](_0x462e5c['z'], _0x2d6556['z'], _0x479283['getFloat']()), _0x2fabff[0x4] = _0x479283['seed']);
                } else
                    _0x1c1e6f ? _0x509889[0x0] = _0x509889[0x1] = _0x509889[0x2] = _0x2247ad['MathUtil']['lerp'](_0xea6e43['startSizeC' + 'onstantMin'], _0xea6e43['startSizeC' + 'onstantMax'], Math['random']()) : (_0x479283['seed'] = _0x2fabff[0x4], _0x509889[0x0] = _0x509889[0x1] = _0x509889[0x2] = _0x2247ad['MathUtil']['lerp'](_0xea6e43['startSizeC' + 'onstantMin'], _0xea6e43['startSizeC' + 'onstantMax'], _0x479283['getFloat']()), _0x2fabff[0x4] = _0x479283['seed']);
            }
            var _0x16ac8c = _0xea6e43['sizeOverLi' + 'fetime'];
            if (_0x16ac8c && _0x16ac8c['enable'] && 0x1 === _0x16ac8c['size']['type']) {
                var _0x1466ee, _0x28f956 = _0x16ac8c['size'];
                if (_0x28f956['separateAx' + 'es'])
                    _0x1c1e6f ? (_0x509889[0x0] = _0x509889[0x0] * _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'nSeparate']['x'], _0x28f956['constantMa' + 'xSeparate']['x'], Math['random']()), _0x509889[0x1] = _0x509889[0x1] * _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'nSeparate']['y'], _0x28f956['constantMa' + 'xSeparate']['y'], Math['random']()), _0x509889[0x2] = _0x509889[0x2] * _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'nSeparate']['z'], _0x28f956['constantMa' + 'xSeparate']['z'], Math['random']())) : (_0x479283['seed'] = _0x2fabff[0xb], _0x509889[0x0] = _0x509889[0x0] * _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'nSeparate']['x'], _0x28f956['constantMa' + 'xSeparate']['x'], _0x479283['getFloat']()), _0x509889[0x1] = _0x509889[0x1] * _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'nSeparate']['y'], _0x28f956['constantMa' + 'xSeparate']['y'], _0x479283['getFloat']()), _0x509889[0x2] = _0x509889[0x2] * _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'nSeparate']['z'], _0x28f956['constantMa' + 'xSeparate']['z'], _0x479283['getFloat']()), _0x2fabff[0xb] = _0x479283['seed']);
                else
                    _0x1c1e6f ? _0x1466ee = _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'n'], _0x28f956['constantMa' + 'x'], Math['random']()) : (_0x479283['seed'] = _0x2fabff[0xb], _0x1466ee = _0x2247ad['MathUtil']['lerp'](_0x28f956['constantMi' + 'n'], _0x28f956['constantMa' + 'x'], _0x479283['getFloat']()), _0x2fabff[0xb] = _0x479283['seed']), _0x509889[0x0] = _0x509889[0x0] * _0x1466ee, _0x509889[0x1] = _0x509889[0x1] * _0x1466ee, _0x509889[0x2] = _0x509889[0x2] * _0x1466ee;
            }
            var _0x491e20 = _0x4580cf['renderMode'];
            if (0x1 !== _0x491e20)
                switch (_0xea6e43['startRotat' + 'ionType']) {
                case 0x0:
                    if (_0xea6e43['threeDStar' + 'tRotation']) {
                        var _0x1680dd = _0xea6e43['startRotat' + 'ionConstan' + 'tSeparate'], _0x3b3475 = _0x54991b['_tempVecto' + 'r30'];
                        _0x54991b['_randomInv' + 'ertRoation' + 'Array'](_0x1680dd, _0x3b3475, _0xea6e43['randomizeR' + 'otationDir' + 'ection'], _0x1c1e6f ? null : _0x479283, _0x2fabff), _0x54991b['startRotat' + 'ion'][0x0] = _0x3b3475['x'], _0x54991b['startRotat' + 'ion'][0x1] = _0x3b3475['y'], _0x54991b['startRotat' + 'ion'][0x2] = 0x4 !== _0x491e20 ? -_0x3b3475['z'] : _0x3b3475['z'];
                    } else
                        _0x54991b['startRotat' + 'ion'][0x0] = _0x54991b['_randomInv' + 'ertRoation'](_0xea6e43['startRotat' + 'ionConstan' + 't'], _0xea6e43['randomizeR' + 'otationDir' + 'ection'], _0x1c1e6f ? null : _0x479283, _0x2fabff), _0x54991b['startRotat' + 'ion'][0x1] = 0x0, _0x54991b['startRotat' + 'ion'][0x2] = 0x0;
                    break;
                case 0x2:
                    if (_0xea6e43['threeDStar' + 'tRotation']) {
                        var _0x39173e = _0xea6e43['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'], _0xc8084b = _0xea6e43['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'], _0xe8fde0 = _0x54991b['_tempVecto' + 'r30'];
                        _0x1c1e6f ? (_0xe8fde0['x'] = _0x2247ad['MathUtil']['lerp'](_0x39173e['x'], _0xc8084b['x'], Math['random']()), _0xe8fde0['y'] = _0x2247ad['MathUtil']['lerp'](_0x39173e['y'], _0xc8084b['y'], Math['random']()), _0xe8fde0['z'] = _0x2247ad['MathUtil']['lerp'](_0x39173e['z'], _0xc8084b['z'], Math['random']())) : (_0x479283['seed'] = _0x2fabff[0x5], _0xe8fde0['x'] = _0x2247ad['MathUtil']['lerp'](_0x39173e['x'], _0xc8084b['x'], _0x479283['getFloat']()), _0xe8fde0['y'] = _0x2247ad['MathUtil']['lerp'](_0x39173e['y'], _0xc8084b['y'], _0x479283['getFloat']()), _0xe8fde0['z'] = _0x2247ad['MathUtil']['lerp'](_0x39173e['z'], _0xc8084b['z'], _0x479283['getFloat']()), _0x2fabff[0x5] = _0x479283['seed']), _0x54991b['_randomInv' + 'ertRoation' + 'Array'](_0xe8fde0, _0xe8fde0, _0xea6e43['randomizeR' + 'otationDir' + 'ection'], _0x1c1e6f ? null : _0x479283, _0x2fabff), _0x54991b['startRotat' + 'ion'][0x0] = _0xe8fde0['x'], _0x54991b['startRotat' + 'ion'][0x1] = _0xe8fde0['y'], _0x54991b['startRotat' + 'ion'][0x2] = 0x4 !== _0x491e20 ? -_0xe8fde0['z'] : _0xe8fde0['z'];
                    } else
                        _0x1c1e6f ? _0x54991b['startRotat' + 'ion'][0x0] = _0x54991b['_randomInv' + 'ertRoation'](_0x2247ad['MathUtil']['lerp'](_0xea6e43['startRotat' + 'ionConstan' + 'tMin'], _0xea6e43['startRotat' + 'ionConstan' + 'tMax'], Math['random']()), _0xea6e43['randomizeR' + 'otationDir' + 'ection'], _0x1c1e6f ? null : _0x479283, _0x2fabff) : (_0x479283['seed'] = _0x2fabff[0x5], _0x54991b['startRotat' + 'ion'][0x0] = _0x54991b['_randomInv' + 'ertRoation'](_0x2247ad['MathUtil']['lerp'](_0xea6e43['startRotat' + 'ionConstan' + 'tMin'], _0xea6e43['startRotat' + 'ionConstan' + 'tMax'], _0x479283['getFloat']()), _0xea6e43['randomizeR' + 'otationDir' + 'ection'], _0x1c1e6f ? null : _0x479283, _0x2fabff), _0x2fabff[0x5] = _0x479283['seed']);
                }
            switch (_0xea6e43['startLifet' + 'imeType']) {
            case 0x0:
                _0x54991b['startLifeT' + 'ime'] = _0xea6e43['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                _0x54991b['startLifeT' + 'ime'] = _0x54991b['_getStartL' + 'ifetimeFro' + 'mGradient'](_0xea6e43['startLifeT' + 'imeGradien' + 't'], _0xea6e43['emissionTi' + 'me']);
                break;
            case 0x2:
                _0x1c1e6f ? _0x54991b['startLifeT' + 'ime'] = _0x2247ad['MathUtil']['lerp'](_0xea6e43['startLifet' + 'imeConstan' + 'tMin'], _0xea6e43['startLifet' + 'imeConstan' + 'tMax'], Math['random']()) : (_0x479283['seed'] = _0x2fabff[0x7], _0x54991b['startLifeT' + 'ime'] = _0x2247ad['MathUtil']['lerp'](_0xea6e43['startLifet' + 'imeConstan' + 'tMin'], _0xea6e43['startLifet' + 'imeConstan' + 'tMax'], _0x479283['getFloat']()), _0x2fabff[0x7] = _0x479283['seed']);
                break;
            case 0x3:
                var _0x279864 = _0xea6e43['emissionTi' + 'me'];
                _0x1c1e6f ? _0x54991b['startLifeT' + 'ime'] = _0x2247ad['MathUtil']['lerp'](_0x54991b['_getStartL' + 'ifetimeFro' + 'mGradient'](_0xea6e43['startLifeT' + 'imeGradien' + 'tMin'], _0x279864), _0x54991b['_getStartL' + 'ifetimeFro' + 'mGradient'](_0xea6e43['startLifeT' + 'imeGradien' + 'tMax'], _0x279864), Math['random']()) : (_0x479283['seed'] = _0x2fabff[0x7], _0x54991b['startLifeT' + 'ime'] = _0x2247ad['MathUtil']['lerp'](_0x54991b['_getStartL' + 'ifetimeFro' + 'mGradient'](_0xea6e43['startLifeT' + 'imeGradien' + 'tMin'], _0x279864), _0x54991b['_getStartL' + 'ifetimeFro' + 'mGradient'](_0xea6e43['startLifeT' + 'imeGradien' + 'tMax'], _0x279864), _0x479283['getFloat']()), _0x2fabff[0x7] = _0x479283['seed']);
            }
            var _0x382a7a = _0xea6e43['textureShe' + 'etAnimatio' + 'n'];
            if (_0x382a7a && _0x382a7a['enable']) {
                var _0x39cd97, _0x2b606d = _0x382a7a['tiles'], _0x18f2a8 = _0x2b606d['x'], _0x2d8c07 = _0x2b606d['y'], _0x3d9b95 = 0x1 / _0x18f2a8, _0x4cf350 = 0x1 / _0x2d8c07, _0x531d76 = _0x382a7a['startFrame'];
                switch (_0x531d76['type']) {
                case 0x0:
                    _0x39cd97 = _0x531d76['constant'];
                    break;
                case 0x1:
                    _0x1c1e6f ? _0x39cd97 = _0x2247ad['MathUtil']['lerp'](_0x531d76['constantMi' + 'n'], _0x531d76['constantMa' + 'x'], Math['random']()) : (_0x479283['seed'] = _0x2fabff[0xe], _0x39cd97 = _0x2247ad['MathUtil']['lerp'](_0x531d76['constantMi' + 'n'], _0x531d76['constantMa' + 'x'], _0x479283['getFloat']()), _0x2fabff[0xe] = _0x479283['seed']);
                }
                var _0x108497 = _0x382a7a['frame'], _0x35aa89 = _0x382a7a['cycles'];
                switch (_0x108497['type']) {
                case 0x0:
                    _0x39cd97 += _0x108497['constant'] * _0x35aa89;
                    break;
                case 0x2:
                    _0x1c1e6f ? _0x39cd97 += _0x2247ad['MathUtil']['lerp'](_0x108497['constantMi' + 'n'], _0x108497['constantMa' + 'x'], Math['random']()) * _0x35aa89 : (_0x479283['seed'] = _0x2fabff[0xf], _0x39cd97 += _0x2247ad['MathUtil']['lerp'](_0x108497['constantMi' + 'n'], _0x108497['constantMa' + 'x'], _0x479283['getFloat']()) * _0x35aa89, _0x2fabff[0xf] = _0x479283['seed']);
                }
                var _0x2236a3 = 0x0;
                switch (_0x382a7a['type']) {
                case 0x0:
                    _0x2236a3 = Math['floor'](_0x39cd97 / _0x18f2a8);
                    break;
                case 0x1:
                    _0x382a7a['randomRow'] ? _0x1c1e6f ? _0x2236a3 = Math['floor'](Math['random']() * _0x2d8c07) : (_0x479283['seed'] = _0x2fabff[0xd], _0x2236a3 = Math['floor'](_0x479283['getFloat']() * _0x2d8c07), _0x2fabff[0xd] = _0x479283['seed']) : _0x2236a3 = _0x382a7a['rowIndex'];
                }
                var _0x1976cf = Math['floor'](_0x39cd97 % _0x18f2a8);
                _0x54991b['startUVInf' + 'o'] = _0x54991b['startUVInf' + 'o'], _0x54991b['startUVInf' + 'o'][0x0] = _0x3d9b95, _0x54991b['startUVInf' + 'o'][0x1] = _0x4cf350, _0x54991b['startUVInf' + 'o'][0x2] = _0x1976cf * _0x3d9b95, _0x54991b['startUVInf' + 'o'][0x3] = _0x2236a3 * _0x4cf350;
            } else
                _0x54991b['startUVInf' + 'o'] = _0x54991b['startUVInf' + 'o'], _0x54991b['startUVInf' + 'o'][0x0] = 0x1, _0x54991b['startUVInf' + 'o'][0x1] = 0x1, _0x54991b['startUVInf' + 'o'][0x2] = 0x0, _0x54991b['startUVInf' + 'o'][0x3] = 0x0;
        }
    }
    _0x54991b['_tempVecto' + 'r30'] = new _0x43b358(), _0x54991b['startColor'] = new _0x4cec8f(), _0x54991b['startSize'] = new Float32Array(0x3), _0x54991b['startRotat' + 'ion'] = new Float32Array(0x3), _0x54991b['startUVInf' + 'o'] = new Float32Array(0x4);
    class _0x1d12c0 extends _0x25a854 {
        constructor(_0x4d632e) {
            super(), this['_boundingS' + 'phere'] = null, this['_boundingB' + 'ox'] = null, this['_boundingB' + 'oxCorners'] = null, this['_owner'] = null, this['_ownerRend' + 'er'] = null, this['_vertices'] = null, this['_floatCoun' + 'tPerVertex'] = 0x0, this['_startLife' + 'TimeIndex'] = 0x0, this['_timeIndex'] = 0x0, this['_simulateU' + 'pdate'] = !0x1, this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_drawCount' + 'er'] = 0x0, this['_bufferMax' + 'Particles'] = 0x0, this['_emission'] = null, this['_shape'] = null, this['_isEmittin' + 'g'] = !0x1, this['_isPlaying'] = !0x1, this['_isPaused'] = !0x1, this['_playStart' + 'Delay'] = 0x0, this['_frameRate' + 'Time'] = 0x0, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_burstsInd' + 'ex'] = 0x0, this['_velocityO' + 'verLifetim' + 'e'] = null, this['_colorOver' + 'Lifetime'] = null, this['_sizeOverL' + 'ifetime'] = null, this['_rotationO' + 'verLifetim' + 'e'] = null, this['_textureSh' + 'eetAnimati' + 'on'] = null, this['_startLife' + 'timeType'] = 0x0, this['_startLife' + 'timeConsta' + 'nt'] = 0x0, this['_startLife' + 'TimeGradie' + 'nt'] = null, this['_startLife' + 'timeConsta' + 'ntMin'] = 0x0, this['_startLife' + 'timeConsta' + 'ntMax'] = 0x0, this['_startLife' + 'TimeGradie' + 'ntMin'] = null, this['_startLife' + 'TimeGradie' + 'ntMax'] = null, this['_maxStartL' + 'ifetime'] = 0x0, this['_uvLength'] = new _0x2d45ed(), this['_vertexStr' + 'ide'] = 0x0, this['_indexStri' + 'de'] = 0x0, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_bufferSta' + 'te'] = new _0x145b1e(), this['_currentTi' + 'me'] = 0x0, this['_startUpda' + 'teLoopCoun' + 't'] = 0x0, this['_rand'] = null, this['_randomSee' + 'ds'] = null, this['duration'] = 0x0, this['looping'] = !0x1, this['prewarm'] = !0x1, this['startDelay' + 'Type'] = 0x0, this['startDelay'] = 0x0, this['startDelay' + 'Min'] = 0x0, this['startDelay' + 'Max'] = 0x0, this['startSpeed' + 'Type'] = 0x0, this['startSpeed' + 'Constant'] = 0x0, this['startSpeed' + 'ConstantMi' + 'n'] = 0x0, this['startSpeed' + 'ConstantMa' + 'x'] = 0x0, this['threeDStar' + 'tSize'] = !0x1, this['startSizeT' + 'ype'] = 0x0, this['startSizeC' + 'onstant'] = 0x0, this['startSizeC' + 'onstantSep' + 'arate'] = null, this['startSizeC' + 'onstantMin'] = 0x0, this['startSizeC' + 'onstantMax'] = 0x0, this['startSizeC' + 'onstantMin' + 'Separate'] = null, this['startSizeC' + 'onstantMax' + 'Separate'] = null, this['threeDStar' + 'tRotation'] = !0x1, this['startRotat' + 'ionType'] = 0x0, this['startRotat' + 'ionConstan' + 't'] = 0x0, this['startRotat' + 'ionConstan' + 'tSeparate'] = null, this['startRotat' + 'ionConstan' + 'tMin'] = 0x0, this['startRotat' + 'ionConstan' + 'tMax'] = 0x0, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = null, this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = null, this['randomizeR' + 'otationDir' + 'ection'] = 0x0, this['startColor' + 'Type'] = 0x0, this['startColor' + 'Constant'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['startColor' + 'ConstantMi' + 'n'] = new _0x4cec8f(0x0, 0x0, 0x0, 0x0), this['startColor' + 'ConstantMa' + 'x'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['gravityMod' + 'ifier'] = 0x0, this['simulation' + 'Space'] = 0x0, this['simulation' + 'Speed'] = 0x1, this['scaleMode'] = 0x0, this['playOnAwak' + 'e'] = !0x1, this['randomSeed'] = null, this['autoRandom' + 'Seed'] = !0x1, this['isPerforma' + 'nceMode'] = !0x1, this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_owner'] = _0x4d632e, this['_ownerRend' + 'er'] = _0x4d632e['particleRe' + 'nderer'], this['_boundingB' + 'oxCorners'] = [], this['_boundingS' + 'phere'] = new _0x260d96(new _0x43b358(), Number['MAX_VALUE']), this['_boundingB' + 'ox'] = new _0x11e6d9(new _0x43b358(-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), new _0x43b358(Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE'])), this['_currentTi' + 'me'] = 0x0, this['_isEmittin' + 'g'] = !0x1, this['_isPlaying'] = !0x1, this['_isPaused'] = !0x1, this['_burstsInd' + 'ex'] = 0x0, this['_frameRate' + 'Time'] = 0x0, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_simulateU' + 'pdate'] = !0x1, this['_bufferMax' + 'Particles'] = 0x1, this['duration'] = 0x5, this['looping'] = !0x0, this['prewarm'] = !0x1, this['startDelay' + 'Type'] = 0x0, this['startDelay'] = 0x0, this['startDelay' + 'Min'] = 0x0, this['startDelay' + 'Max'] = 0x0, this['_startLife' + 'timeType'] = 0x0, this['_startLife' + 'timeConsta' + 'nt'] = 0x5, this['_startLife' + 'TimeGradie' + 'nt'] = new _0x16ac95(), this['_startLife' + 'timeConsta' + 'ntMin'] = 0x0, this['_startLife' + 'timeConsta' + 'ntMax'] = 0x5, this['_startLife' + 'TimeGradie' + 'ntMin'] = new _0x16ac95(), this['_startLife' + 'TimeGradie' + 'ntMax'] = new _0x16ac95(), this['_maxStartL' + 'ifetime'] = 0x5, this['startSpeed' + 'Type'] = 0x0, this['startSpeed' + 'Constant'] = 0x5, this['startSpeed' + 'ConstantMi' + 'n'] = 0x0, this['startSpeed' + 'ConstantMa' + 'x'] = 0x5, this['threeDStar' + 'tSize'] = !0x1, this['startSizeT' + 'ype'] = 0x0, this['startSizeC' + 'onstant'] = 0x1, this['startSizeC' + 'onstantSep' + 'arate'] = new _0x43b358(0x1, 0x1, 0x1), this['startSizeC' + 'onstantMin'] = 0x0, this['startSizeC' + 'onstantMax'] = 0x1, this['startSizeC' + 'onstantMin' + 'Separate'] = new _0x43b358(0x0, 0x0, 0x0), this['startSizeC' + 'onstantMax' + 'Separate'] = new _0x43b358(0x1, 0x1, 0x1), this['threeDStar' + 'tRotation'] = !0x1, this['startRotat' + 'ionType'] = 0x0, this['startRotat' + 'ionConstan' + 't'] = 0x0, this['startRotat' + 'ionConstan' + 'tSeparate'] = new _0x43b358(0x0, 0x0, 0x0), this['startRotat' + 'ionConstan' + 'tMin'] = 0x0, this['startRotat' + 'ionConstan' + 'tMax'] = 0x0, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = new _0x43b358(0x0, 0x0, 0x0), this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = new _0x43b358(0x0, 0x0, 0x0), this['gravityMod' + 'ifier'] = 0x0, this['simulation' + 'Space'] = 0x1, this['scaleMode'] = 0x0, this['playOnAwak' + 'e'] = !0x0, this['_rand'] = new _0x5614ba(0x0), this['autoRandom' + 'Seed'] = !0x0, this['randomSeed'] = new Uint32Array(0x1), this['_randomSee' + 'ds'] = new Uint32Array(_0x1d12c0['_RANDOMOFF' + 'SET']['length']), this['isPerforma' + 'nceMode'] = !0x0, this['_emission'] = new _0x553257(), this['_emission']['enable'] = !0x0;
        }
        get ['maxParticl' + 'es']() {
            return this['_bufferMax' + 'Particles'] - 0x1;
        }
        set ['maxParticl' + 'es'](_0x27b453) {
            var _0x809541 = _0x27b453 + 0x1;
            _0x809541 !== this['_bufferMax' + 'Particles'] && (this['_bufferMax' + 'Particles'] = _0x809541, this['_initBuffe' + 'rDatas']());
        }
        get ['emission']() {
            return this['_emission'];
        }
        get ['aliveParti' + 'cleCount']() {
            return this['_firstNewE' + 'lement'] >= this['_firstReti' + 'redElement'] ? this['_firstNewE' + 'lement'] - this['_firstReti' + 'redElement'] : this['_bufferMax' + 'Particles'] - this['_firstReti' + 'redElement'] + this['_firstNewE' + 'lement'];
        }
        get ['emissionTi' + 'me']() {
            return this['_emissionT' + 'ime'] > this['duration'] ? this['duration'] : this['_emissionT' + 'ime'];
        }
        get ['shape']() {
            return this['_shape'];
        }
        set ['shape'](_0x1c40df) {
            this['_shape'] !== _0x1c40df && (_0x1c40df && _0x1c40df['enable'] ? this['_owner']['_render']['_shaderVal' + 'ues']['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_SHAPE']) : this['_owner']['_render']['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SHAPE']), this['_shape'] = _0x1c40df);
        }
        get ['isAlive']() {
            return !!(this['_isPlaying'] || this['aliveParti' + 'cleCount'] > 0x0);
        }
        get ['isEmitting']() {
            return this['_isEmittin' + 'g'];
        }
        get ['isPlaying']() {
            return this['_isPlaying'];
        }
        get ['isPaused']() {
            return this['_isPaused'];
        }
        get ['startLifet' + 'imeType']() {
            return this['_startLife' + 'timeType'];
        }
        set ['startLifet' + 'imeType'](_0x441688) {
            var _0x135ede, _0x38f652;
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                this['_maxStartL' + 'ifetime'] = this['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                var _0x3a5fd2 = _0x3a5fd2;
                for (_0x135ede = 0x0, _0x38f652 = _0x3a5fd2['gradientCo' + 'unt']; _0x135ede < _0x38f652; _0x135ede++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x3a5fd2['getValueBy' + 'Index'](_0x135ede));
                break;
            case 0x2:
                this['_maxStartL' + 'ifetime'] = Math['max'](this['startLifet' + 'imeConstan' + 'tMin'], this['startLifet' + 'imeConstan' + 'tMax']);
                break;
            case 0x3:
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                var _0x10a9c8 = _0x10a9c8;
                for (_0x135ede = 0x0, _0x38f652 = _0x10a9c8['gradientCo' + 'unt']; _0x135ede < _0x38f652; _0x135ede++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x10a9c8['getValueBy' + 'Index'](_0x135ede));
                var _0x37c57d = _0x37c57d;
                for (_0x135ede = 0x0, _0x38f652 = _0x37c57d['gradientCo' + 'unt']; _0x135ede < _0x38f652; _0x135ede++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x37c57d['getValueBy' + 'Index'](_0x135ede));
            }
            this['_startLife' + 'timeType'] = _0x441688;
        }
        get ['startLifet' + 'imeConstan' + 't']() {
            return this['_startLife' + 'timeConsta' + 'nt'];
        }
        set ['startLifet' + 'imeConstan' + 't'](_0x228a5c) {
            0x0 === this['_startLife' + 'timeType'] && (this['_maxStartL' + 'ifetime'] = _0x228a5c), this['_startLife' + 'timeConsta' + 'nt'] = _0x228a5c;
        }
        get ['startLifeT' + 'imeGradien' + 't']() {
            return this['_startLife' + 'TimeGradie' + 'nt'];
        }
        set ['startLifeT' + 'imeGradien' + 't'](_0x48560a) {
            if (0x1 === this['_startLife' + 'timeType']) {
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                for (var _0x385c01 = 0x0, _0x25fb0d = _0x48560a['gradientCo' + 'unt']; _0x385c01 < _0x25fb0d; _0x385c01++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x48560a['getValueBy' + 'Index'](_0x385c01));
            }
            this['_startLife' + 'TimeGradie' + 'nt'] = _0x48560a;
        }
        get ['startLifet' + 'imeConstan' + 'tMin']() {
            return this['_startLife' + 'timeConsta' + 'ntMin'];
        }
        set ['startLifet' + 'imeConstan' + 'tMin'](_0x6a22bf) {
            0x2 === this['_startLife' + 'timeType'] && (this['_maxStartL' + 'ifetime'] = Math['max'](_0x6a22bf, this['_startLife' + 'timeConsta' + 'ntMax'])), this['_startLife' + 'timeConsta' + 'ntMin'] = _0x6a22bf;
        }
        get ['startLifet' + 'imeConstan' + 'tMax']() {
            return this['_startLife' + 'timeConsta' + 'ntMax'];
        }
        set ['startLifet' + 'imeConstan' + 'tMax'](_0x352691) {
            0x2 === this['_startLife' + 'timeType'] && (this['_maxStartL' + 'ifetime'] = Math['max'](this['_startLife' + 'timeConsta' + 'ntMin'], _0x352691)), this['_startLife' + 'timeConsta' + 'ntMax'] = _0x352691;
        }
        get ['startLifeT' + 'imeGradien' + 'tMin']() {
            return this['_startLife' + 'TimeGradie' + 'ntMin'];
        }
        set ['startLifeT' + 'imeGradien' + 'tMin'](_0x439eb7) {
            if (0x3 === this['_startLife' + 'timeType']) {
                var _0x38ebb9, _0x481616;
                for (this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'], _0x38ebb9 = 0x0, _0x481616 = _0x439eb7['gradientCo' + 'unt']; _0x38ebb9 < _0x481616; _0x38ebb9++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x439eb7['getValueBy' + 'Index'](_0x38ebb9));
                for (_0x38ebb9 = 0x0, _0x481616 = this['_startLife' + 'TimeGradie' + 'ntMax']['gradientCo' + 'unt']; _0x38ebb9 < _0x481616; _0x38ebb9++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], this['_startLife' + 'TimeGradie' + 'ntMax']['getValueBy' + 'Index'](_0x38ebb9));
            }
            this['_startLife' + 'TimeGradie' + 'ntMin'] = _0x439eb7;
        }
        get ['startLifeT' + 'imeGradien' + 'tMax']() {
            return this['_startLife' + 'TimeGradie' + 'ntMax'];
        }
        set ['startLifeT' + 'imeGradien' + 'tMax'](_0x26b1b2) {
            if (0x3 === this['_startLife' + 'timeType']) {
                var _0x22c20b, _0x1c0f23;
                for (this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'], _0x22c20b = 0x0, _0x1c0f23 = this['_startLife' + 'TimeGradie' + 'ntMin']['gradientCo' + 'unt']; _0x22c20b < _0x1c0f23; _0x22c20b++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], this['_startLife' + 'TimeGradie' + 'ntMin']['getValueBy' + 'Index'](_0x22c20b));
                for (_0x22c20b = 0x0, _0x1c0f23 = _0x26b1b2['gradientCo' + 'unt']; _0x22c20b < _0x1c0f23; _0x22c20b++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x26b1b2['getValueBy' + 'Index'](_0x22c20b));
            }
            this['_startLife' + 'TimeGradie' + 'ntMax'] = _0x26b1b2;
        }
        get ['velocityOv' + 'erLifetime']() {
            return this['_velocityO' + 'verLifetim' + 'e'];
        }
        set ['velocityOv' + 'erLifetime'](_0x37641b) {
            var _0x1ac512 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x37641b) {
                var _0x5743cb = _0x37641b['velocity'], _0x319978 = _0x5743cb['type'];
                if (_0x37641b['enable'])
                    switch (_0x319978) {
                    case 0x0:
                        _0x1ac512['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']);
                        break;
                    case 0x1:
                        _0x1ac512['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']);
                        break;
                    case 0x2:
                        _0x1ac512['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']);
                        break;
                    case 0x3:
                        _0x1ac512['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
                    }
                else
                    _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']), _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']), _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']), _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
                switch (_0x319978) {
                case 0x0:
                    _0x1ac512['setVector3'](_0xa664f1['VOLVELOCIT' + 'YCONST'], _0x5743cb['constant']);
                    break;
                case 0x1:
                    _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTX'], _0x5743cb['gradientX']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTY'], _0x5743cb['gradientY']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTZ'], _0x5743cb['gradientZ']['_elements']);
                    break;
                case 0x2:
                    _0x1ac512['setVector3'](_0xa664f1['VOLVELOCIT' + 'YCONST'], _0x5743cb['constantMi' + 'n']), _0x1ac512['setVector3'](_0xa664f1['VOLVELOCIT' + 'YCONSTMAX'], _0x5743cb['constantMa' + 'x']);
                    break;
                case 0x3:
                    _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTX'], _0x5743cb['gradientXM' + 'in']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTX' + 'MAX'], _0x5743cb['gradientXM' + 'ax']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTY'], _0x5743cb['gradientYM' + 'in']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTY' + 'MAX'], _0x5743cb['gradientYM' + 'ax']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTZ'], _0x5743cb['gradientZM' + 'in']['_elements']), _0x1ac512['setBuffer'](_0xa664f1['VOLVELOCIT' + 'YGRADIENTZ' + 'MAX'], _0x5743cb['gradientZM' + 'ax']['_elements']);
                }
                _0x1ac512['setInt'](_0xa664f1['VOLSPACETY' + 'PE'], _0x37641b['space']);
            } else
                _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']), _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']), _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']), _0x1ac512['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
            this['_velocityO' + 'verLifetim' + 'e'] = _0x37641b;
        }
        get ['colorOverL' + 'ifetime']() {
            return this['_colorOver' + 'Lifetime'];
        }
        set ['colorOverL' + 'ifetime'](_0x59bf99) {
            var _0x2df843 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x59bf99) {
                var _0x1b9b9b = _0x59bf99['color'];
                if (_0x59bf99['enable'])
                    switch (_0x1b9b9b['type']) {
                    case 0x1:
                        _0x2df843['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']);
                        break;
                    case 0x3:
                        _0x2df843['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']);
                    }
                else
                    _0x2df843['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']), _0x2df843['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']);
                switch (_0x1b9b9b['type']) {
                case 0x1:
                    var _0x585e13 = _0x1b9b9b['gradient'];
                    _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x585e13['_alphaElem' + 'ents']), _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x585e13['_rgbElemen' + 'ts']);
                    break;
                case 0x3:
                    var _0x2b86be = _0x1b9b9b['gradientMi' + 'n'], _0x57aeb8 = _0x1b9b9b['gradientMa' + 'x'];
                    _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x2b86be['_alphaElem' + 'ents']), _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x2b86be['_rgbElemen' + 'ts']), _0x2df843['setBuffer'](_0xa664f1['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'], _0x57aeb8['_alphaElem' + 'ents']), _0x2df843['setBuffer'](_0xa664f1['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'], _0x57aeb8['_rgbElemen' + 'ts']);
                }
            } else
                _0x2df843['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']), _0x2df843['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']), _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x585e13['_alphaElem' + 'ents']), _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x585e13['_rgbElemen' + 'ts']), _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x2b86be['_alphaElem' + 'ents']), _0x2df843['setBuffer'](_0xa664f1['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x2b86be['_rgbElemen' + 'ts']), _0x2df843['setBuffer'](_0xa664f1['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'], _0x57aeb8['_alphaElem' + 'ents']), _0x2df843['setBuffer'](_0xa664f1['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'], _0x57aeb8['_rgbElemen' + 'ts']);
            this['_colorOver' + 'Lifetime'] = _0x59bf99;
        }
        get ['sizeOverLi' + 'fetime']() {
            return this['_sizeOverL' + 'ifetime'];
        }
        set ['sizeOverLi' + 'fetime'](_0x100abc) {
            var _0x502a35 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x100abc) {
                var _0x2905b2 = _0x100abc['size'], _0x3aea0c = _0x2905b2['separateAx' + 'es'], _0x4b6b31 = _0x2905b2['type'];
                if (_0x100abc['enable'])
                    switch (_0x4b6b31) {
                    case 0x0:
                        _0x3aea0c ? _0x502a35['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']) : _0x502a35['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']);
                        break;
                    case 0x2:
                        _0x3aea0c ? _0x502a35['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']) : _0x502a35['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']);
                    }
                else
                    _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']), _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']), _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']), _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
                switch (_0x4b6b31) {
                case 0x0:
                    _0x3aea0c ? (_0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENTX'], _0x2905b2['gradientX']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENTY'], _0x2905b2['gradientY']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSizeGra' + 'dientZ'], _0x2905b2['gradientZ']['_elements'])) : _0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENT'], _0x2905b2['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x3aea0c ? (_0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENTX'], _0x2905b2['gradientXM' + 'in']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENTXMAX'], _0x2905b2['gradientXM' + 'ax']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENTY'], _0x2905b2['gradientYM' + 'in']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENTYMAX'], _0x2905b2['gradientYM' + 'ax']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSizeGra' + 'dientZ'], _0x2905b2['gradientZM' + 'in']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSizeGra' + 'dientZMAX'], _0x2905b2['gradientZM' + 'ax']['_elements'])) : (_0x502a35['setBuffer'](_0xa664f1['SOLSIZEGRA' + 'DIENT'], _0x2905b2['gradientMi' + 'n']['_elements']), _0x502a35['setBuffer'](_0xa664f1['SOLSizeGra' + 'dientMax'], _0x2905b2['gradientMa' + 'x']['_elements']));
                }
            } else
                _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']), _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']), _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']), _0x502a35['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
            this['_sizeOverL' + 'ifetime'] = _0x100abc;
        }
        get ['rotationOv' + 'erLifetime']() {
            return this['_rotationO' + 'verLifetim' + 'e'];
        }
        set ['rotationOv' + 'erLifetime'](_0x915ffd) {
            var _0x586b9e = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x915ffd) {
                var _0x3136e1 = _0x915ffd['angularVel' + 'ocity'];
                if (!_0x3136e1)
                    return;
                var _0x2ac513 = _0x3136e1['separateAx' + 'es'], _0x1600b7 = _0x3136e1['type'];
                if (_0x915ffd['enable'])
                    switch (_0x2ac513 ? _0x586b9e['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']) : _0x586b9e['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0x1600b7) {
                    case 0x0:
                        _0x586b9e['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']);
                        break;
                    case 0x1:
                        _0x586b9e['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']);
                        break;
                    case 0x2:
                        _0x586b9e['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']);
                        break;
                    case 0x3:
                        _0x586b9e['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
                    }
                else
                    _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
                switch (_0x1600b7) {
                case 0x0:
                    _0x2ac513 ? _0x586b9e['setVector3'](_0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'], _0x3136e1['constantSe' + 'parate']) : _0x586b9e['setNumber'](_0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NST'], _0x3136e1['constant']);
                    break;
                case 0x1:
                    _0x2ac513 ? (_0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'], _0x3136e1['gradientX']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'], _0x3136e1['gradientY']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'], _0x3136e1['gradientZ']['_elements'])) : _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'], _0x3136e1['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x2ac513 ? (_0x586b9e['setVector3'](_0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'], _0x3136e1['constantMi' + 'nSeparate']), _0x586b9e['setVector3'](_0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAXSEPR' + 'ARATE'], _0x3136e1['constantMa' + 'xSeparate'])) : (_0x586b9e['setNumber'](_0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NST'], _0x3136e1['constantMi' + 'n']), _0x586b9e['setNumber'](_0xa664f1['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAX'], _0x3136e1['constantMa' + 'x']));
                    break;
                case 0x3:
                    _0x2ac513 ? (_0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'], _0x3136e1['gradientXM' + 'in']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTXMAX'], _0x3136e1['gradientXM' + 'ax']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'], _0x3136e1['gradientYM' + 'in']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTYMAX'], _0x3136e1['gradientYM' + 'ax']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'], _0x3136e1['gradientZM' + 'in']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZMAX'], _0x3136e1['gradientZM' + 'ax']['_elements'])) : (_0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'], _0x3136e1['gradientMi' + 'n']['_elements']), _0x586b9e['setBuffer'](_0xa664f1['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTMAX'], _0x3136e1['gradientMa' + 'x']['_elements']));
                }
            } else
                _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']), _0x586b9e['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
            this['_rotationO' + 'verLifetim' + 'e'] = _0x915ffd;
        }
        get ['textureShe' + 'etAnimatio' + 'n']() {
            return this['_textureSh' + 'eetAnimati' + 'on'];
        }
        set ['textureShe' + 'etAnimatio' + 'n'](_0xcb222a) {
            var _0x587dcf = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0xcb222a) {
                var _0x13b1f0 = _0xcb222a['frame'], _0x21474a = _0x13b1f0['type'];
                if (_0xcb222a['enable'])
                    switch (_0x21474a) {
                    case 0x1:
                        _0x587dcf['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']);
                        break;
                    case 0x3:
                        _0x587dcf['addDefine'](_0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
                    }
                else
                    _0x587dcf['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']), _0x587dcf['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
                if (0x1 === _0x21474a || 0x3 === _0x21474a) {
                    _0x587dcf['setNumber'](_0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NCYCLES'], _0xcb222a['cycles']);
                    var _0xcd19 = _0xcb222a['tiles'], _0x3dbe88 = this['_uvLength'];
                    _0x3dbe88['x'] = 0x1 / _0xcd19['x'], _0x3dbe88['y'] = 0x1 / _0xcd19['y'], _0x587dcf['setVector2'](_0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NSUBUVLENG' + 'TH'], this['_uvLength']);
                }
                switch (_0x21474a) {
                case 0x1:
                    _0x587dcf['setBuffer'](_0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'], _0x13b1f0['frameOverT' + 'imeData']['_elements']);
                    break;
                case 0x3:
                    _0x587dcf['setBuffer'](_0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'], _0x13b1f0['frameOverT' + 'imeDataMin']['_elements']), _0x587dcf['setBuffer'](_0xa664f1['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTM' + 'AXUVS'], _0x13b1f0['frameOverT' + 'imeDataMax']['_elements']);
                }
            } else
                _0x587dcf['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']), _0x587dcf['removeDefi' + 'ne'](_0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
            this['_textureSh' + 'eetAnimati' + 'on'] = _0xcb222a;
        }
        ['_getVertex' + 'Buffer'](_0xcbd3d6 = 0x0) {
            return 0x0 === _0xcbd3d6 ? this['_vertexBuf' + 'fer'] : null;
        }
        ['_getIndexB' + 'uffer']() {
            return this['_indexBuff' + 'er'];
        }
        ['_generateB' + 'oundingSph' + 'ere']() {
            var _0x1d7727 = this['_boundingS' + 'phere']['center'];
            _0x1d7727['x'] = 0x0, _0x1d7727['y'] = 0x0, _0x1d7727['z'] = 0x0, this['_boundingS' + 'phere']['radius'] = Number['MAX_VALUE'];
        }
        ['_generateB' + 'oundingBox']() {
            var _0x2626dd, _0x8f08c2, _0x1400ce, _0x5d13af, _0x9652f7, _0x2387ca, _0x1328a6, _0x585d09, _0x1cb5a4, _0x57c43e = this['_owner']['particleRe' + 'nderer'], _0x21078e = this['_boundingB' + 'ox']['min'], _0xc5e9a = this['_boundingB' + 'ox']['max'];
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                _0x1400ce = this['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                _0x1400ce = -Number['MAX_VALUE'];
                var _0x2272c6 = _0x2272c6;
                for (_0x2626dd = 0x0, _0x8f08c2 = _0x2272c6['gradientCo' + 'unt']; _0x2626dd < _0x8f08c2; _0x2626dd++)
                    _0x1400ce = Math['max'](_0x1400ce, _0x2272c6['getValueBy' + 'Index'](_0x2626dd));
                break;
            case 0x2:
                _0x1400ce = Math['max'](this['startLifet' + 'imeConstan' + 'tMin'], this['startLifet' + 'imeConstan' + 'tMax']);
                break;
            case 0x3:
                _0x1400ce = -Number['MAX_VALUE'];
                var _0xc12074 = _0xc12074;
                for (_0x2626dd = 0x0, _0x8f08c2 = _0xc12074['gradientCo' + 'unt']; _0x2626dd < _0x8f08c2; _0x2626dd++)
                    _0x1400ce = Math['max'](_0x1400ce, _0xc12074['getValueBy' + 'Index'](_0x2626dd));
                var _0x5d5322 = _0x5d5322;
                for (_0x2626dd = 0x0, _0x8f08c2 = _0x5d5322['gradientCo' + 'unt']; _0x2626dd < _0x8f08c2; _0x2626dd++)
                    _0x1400ce = Math['max'](_0x1400ce, _0x5d5322['getValueBy' + 'Index'](_0x2626dd));
            }
            switch (this['startSpeed' + 'Type']) {
            case 0x0:
                _0x5d13af = _0x9652f7 = this['startSpeed' + 'Constant'];
                break;
            case 0x1:
                break;
            case 0x2:
                _0x5d13af = this['startLifet' + 'imeConstan' + 'tMin'], _0x9652f7 = this['startLifet' + 'imeConstan' + 'tMax'];
            }
            this['_shape'] && this['_shape']['enable'] || (_0x2387ca = _0x1328a6 = _0x43b358['_ZERO'], _0x585d09 = _0x43b358['_ZERO'], _0x1cb5a4 = _0x43b358['_UnitZ']);
            var _0x345d40, _0x596da0, _0x4298db = new _0x43b358(_0x585d09['x'] * _0x5d13af, _0x585d09['y'] * _0x5d13af, _0x585d09['z'] * _0x5d13af), _0x4677c3 = new _0x43b358(_0x1cb5a4['x'] * _0x9652f7, _0x1cb5a4['y'] * _0x9652f7, _0x1cb5a4['z'] * _0x9652f7);
            if (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable']) {
                var _0xa50872 = this['_velocityO' + 'verLifetim' + 'e']['velocity'];
                switch (_0xa50872['type']) {
                case 0x0:
                    _0xa50872['constant'];
                    break;
                case 0x1:
                    new _0x43b358(_0xa50872['gradientX']['getAverage' + 'Value'](), _0xa50872['gradientY']['getAverage' + 'Value'](), _0xa50872['gradientZ']['getAverage' + 'Value']());
                    break;
                case 0x2:
                    _0xa50872['constantMi' + 'n'], _0xa50872['constantMa' + 'x'];
                    break;
                case 0x3:
                    new _0x43b358(_0xa50872['gradientXM' + 'in']['getAverage' + 'Value'](), _0xa50872['gradientYM' + 'in']['getAverage' + 'Value'](), _0xa50872['gradientZM' + 'in']['getAverage' + 'Value']()), new _0x43b358(_0xa50872['gradientXM' + 'ax']['getAverage' + 'Value'](), _0xa50872['gradientYM' + 'ax']['getAverage' + 'Value'](), _0xa50872['gradientZM' + 'ax']['getAverage' + 'Value']());
                }
            }
            var _0x5a4ac5, _0x5afc2a, _0x1d9dc0, _0xf60dc, _0x5e3b2e = this['_owner']['transform'], _0x41e47e = _0x5e3b2e['position'], _0x2cbb26 = _0x1d12c0['_tempVecto' + 'r39'], _0x2e7b95 = _0x57c43e['renderMode'];
            switch (this['scaleMode']) {
            case 0x0:
                var _0x44fe16 = _0x5e3b2e['getWorldLo' + 'ssyScale']();
                _0x345d40 = _0x44fe16, _0x2cbb26['x'] = _0x44fe16['x'], _0x2cbb26['y'] = _0x44fe16['z'], _0x2cbb26['z'] = _0x44fe16['y'], 0x1 === _0x2e7b95 && (_0x596da0 = _0x44fe16);
                break;
            case 0x1:
                var _0x343a60 = _0x5e3b2e['localScale'];
                _0x345d40 = _0x343a60, _0x2cbb26['x'] = _0x343a60['x'], _0x2cbb26['y'] = _0x343a60['z'], _0x2cbb26['z'] = _0x343a60['y'], 0x1 === _0x2e7b95 && (_0x596da0 = _0x343a60);
                break;
            case 0x2:
                _0x345d40 = _0x5e3b2e['getWorldLo' + 'ssyScale'](), _0x2cbb26['x'] = _0x2cbb26['y'] = _0x2cbb26['z'] = 0x1, 0x1 === _0x2e7b95 && (_0x596da0 = _0x43b358['_ONE']);
            }
            switch (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'] || (_0x5a4ac5 = new _0x43b358(_0x4298db['x'] * _0x1400ce, _0x4298db['y'] * _0x1400ce, _0x4298db['z'] * _0x1400ce), _0x5afc2a = new _0x43b358(_0x4677c3['x'] * _0x1400ce, _0x4677c3['y'] * _0x1400ce, _0x4677c3['z'] * _0x1400ce), 0x2 != this['scaleMode'] ? (_0x43b358['add'](_0x2387ca, _0x5a4ac5, _0x21078e), _0x43b358['multiply'](_0x345d40, _0x21078e, _0x21078e), _0x43b358['add'](_0x1328a6, _0x5afc2a, _0xc5e9a), _0x43b358['multiply'](_0x345d40, _0xc5e9a, _0xc5e9a)) : (_0x43b358['multiply'](_0x345d40, _0x2387ca, _0x21078e), _0x43b358['add'](_0x21078e, _0x5a4ac5, _0x21078e), _0x43b358['multiply'](_0x345d40, _0x1328a6, _0xc5e9a), _0x43b358['add'](_0xc5e9a, _0x5afc2a, _0xc5e9a))), this['simulation' + 'Space']) {
            case 0x0:
                break;
            case 0x1:
                _0x43b358['add'](_0x21078e, _0x41e47e, _0x21078e), _0x43b358['add'](_0xc5e9a, _0x41e47e, _0xc5e9a);
            }
            switch (this['startSizeT' + 'ype']) {
            case 0x0:
                if (this['threeDStar' + 'tSize']) {
                    var _0x4cb830 = _0x4cb830;
                    _0x1d9dc0 = Math['max'](_0x4cb830['x'], _0x4cb830['y']), 0x1 === _0x2e7b95 && (_0xf60dc = _0x4cb830['y']);
                } else
                    _0x1d9dc0 = this['startSizeC' + 'onstant'], 0x1 === _0x2e7b95 && (_0xf60dc = this['startSizeC' + 'onstant']);
                break;
            case 0x1:
                break;
            case 0x2:
                if (this['threeDStar' + 'tSize']) {
                    var _0x136f82 = _0x136f82;
                    _0x1d9dc0 = Math['max'](_0x136f82['x'], _0x136f82['y']), 0x1 === _0x2e7b95 && (_0xf60dc = _0x136f82['y']);
                } else
                    _0x1d9dc0 = this['startSizeC' + 'onstantMax'], 0x1 === _0x2e7b95 && (_0xf60dc = this['startSizeC' + 'onstantMax']);
            }
            this['_sizeOverL' + 'ifetime'] && this['_sizeOverL' + 'ifetime']['enable'] && (this['_sizeOverL' + 'ifetime']['size'], _0x1d9dc0 *= this['_sizeOverL' + 'ifetime']['size']['getMaxSize' + 'InGradient']());
            var _0x1e3ebb, _0x1be643, _0x16446f = _0x1d12c0['_tempVecto' + 'r30'];
            switch (_0x2e7b95) {
            case 0x0:
                _0x1e3ebb = _0x1d9dc0 * _0x1d12c0['halfKSqrtO' + 'f2'], _0x43b358['scale'](_0x2cbb26, _0x1d9dc0, _0x16446f), _0x43b358['subtract'](_0x21078e, _0x16446f, _0x21078e), _0x43b358['add'](_0xc5e9a, _0x16446f, _0xc5e9a);
                break;
            case 0x1:
                var _0x70ac32 = _0x1d12c0['_tempVecto' + 'r31'], _0x2378a2 = _0x1d12c0['_tempVecto' + 'r32'], _0x506ec1 = _0x1d12c0['_tempVecto' + 'r33'], _0x4b6ab6 = _0x1d12c0['_tempVecto' + 'r34'];
                this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'] || (_0x43b358['multiply'](_0x596da0, _0x4677c3, _0x2378a2), _0x43b358['multiply'](_0x596da0, _0x4298db, _0x506ec1));
                var _0xff4ed8 = _0xf60dc * _0x57c43e['stretchedB' + 'illboardLe' + 'ngthScale'], _0x831b09 = _0x43b358['scalarLeng' + 'th'](_0x2378a2) * _0x57c43e['stretchedB' + 'illboardSp' + 'eedScale'] + _0xff4ed8, _0x10112e = _0x43b358['scalarLeng' + 'th'](_0x506ec1) * _0x57c43e['stretchedB' + 'illboardSp' + 'eedScale'] + _0xff4ed8, _0xe89a3b = _0x1d12c0['_tempVecto' + 'r35'], _0x2e1bb0 = _0x1d12c0['_tempVecto' + 'r36'];
                _0x43b358['normalize'](_0x2378a2, _0xe89a3b), _0x43b358['scale'](_0xe89a3b, _0x831b09, _0x4b6ab6), _0x43b358['subtract'](_0x5afc2a, _0x4b6ab6, _0x4b6ab6), _0x43b358['normalize'](_0x506ec1, _0x2e1bb0), _0x43b358['scale'](_0x2e1bb0, _0x10112e, _0x70ac32), _0x43b358['add'](_0x5a4ac5, _0x70ac32, _0x70ac32), _0x1e3ebb = _0x1d9dc0 * _0x1d12c0['halfKSqrtO' + 'f2'], _0x43b358['scale'](_0x2cbb26, _0x1e3ebb, _0x16446f);
                var _0x5e80e1 = _0x1d12c0['_tempVecto' + 'r37'], _0x255587 = _0x1d12c0['_tempVecto' + 'r38'];
                _0x43b358['scale'](_0xe89a3b, 0.5, _0x5e80e1), _0x43b358['scale'](_0x2e1bb0, 0.5, _0x255587), _0x43b358['multiply'](_0x5e80e1, _0x2cbb26, _0x5e80e1), _0x43b358['multiply'](_0x255587, _0x2cbb26, _0x255587), _0x43b358['add'](_0x21078e, _0x255587, _0x21078e), _0x43b358['min'](_0x21078e, _0x4b6ab6, _0x21078e), _0x43b358['subtract'](_0x21078e, _0x16446f, _0x21078e), _0x43b358['subtract'](_0xc5e9a, _0x5e80e1, _0xc5e9a), _0x43b358['max'](_0xc5e9a, _0x70ac32, _0xc5e9a), _0x43b358['add'](_0xc5e9a, _0x16446f, _0xc5e9a);
                break;
            case 0x2:
                _0x1be643 = 0.5 * (_0x1d9dc0 *= Math['cos'](0.7853981633974483)), _0x16446f['x'] = _0x2cbb26['x'] * _0x1be643, _0x16446f['y'] = _0x2cbb26['z'] * _0x1be643, _0x43b358['subtract'](_0x21078e, _0x16446f, _0x21078e), _0x43b358['add'](_0xc5e9a, _0x16446f, _0xc5e9a);
                break;
            case 0x3:
                _0x1be643 = 0.5 * (_0x1d9dc0 *= Math['cos'](0.7853981633974483)), _0x43b358['scale'](_0x2cbb26, _0x1be643, _0x16446f), _0x43b358['subtract'](_0x21078e, _0x16446f, _0x21078e), _0x43b358['add'](_0xc5e9a, _0x16446f, _0xc5e9a);
            }
            this['_boundingB' + 'ox']['getCorners'](this['_boundingB' + 'oxCorners']);
        }
        ['_updateEmi' + 'ssion']() {
            if (this['isAlive']) {
                if (this['_simulateU' + 'pdate'])
                    this['_simulateU' + 'pdate'] = !0x1;
                else {
                    var _0x46487d = this['_startUpda' + 'teLoopCoun' + 't'] === _0x2247ad['Stat']['loopCount'] || this['_isPaused'] ? 0x0 : this['_owner']['_scene']['timer']['_delta'] / 0x3e8;
                    _0x46487d = Math['min'](_0x1d12c0['_maxElapse' + 'dTime'], _0x46487d * this['simulation' + 'Speed']), this['_updatePar' + 'ticles'](_0x46487d);
                }
            }
        }
        ['_updatePar' + 'ticles'](_0x13136d) {
            (0x4 !== this['_ownerRend' + 'er']['renderMode'] || this['_ownerRend' + 'er']['mesh']) && (this['_currentTi' + 'me'] += _0x13136d, this['_retireAct' + 'iveParticl' + 'es'](), this['_freeRetir' + 'edParticle' + 's'](), this['_totalDela' + 'yTime'] += _0x13136d, this['_totalDela' + 'yTime'] < this['_playStart' + 'Delay'] || this['_emission']['enable'] && this['_isEmittin' + 'g'] && !this['_isPaused'] && this['_advanceTi' + 'me'](_0x13136d, this['_currentTi' + 'me']));
        }
        ['_updatePar' + 'ticlesSimu' + 'lationRest' + 'art'](_0x3432a8) {
            this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_burstsInd' + 'ex'] = 0x0, this['_frameRate' + 'Time'] = _0x3432a8, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_currentTi' + 'me'] = _0x3432a8;
            var _0x2e4d01 = _0x3432a8;
            _0x2e4d01 < this['_playStart' + 'Delay'] ? this['_totalDela' + 'yTime'] = _0x2e4d01 : this['_emission']['enable'] && this['_advanceTi' + 'me'](_0x3432a8, _0x3432a8);
        }
        ['_retireAct' + 'iveParticl' + 'es']() {
            for (; this['_firstActi' + 'veElement'] != this['_firstNewE' + 'lement'];) {
                var _0x112a67 = this['_firstActi' + 'veElement'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], _0x491e55 = _0x112a67 + this['_timeIndex'];
                if (this['_currentTi' + 'me'] - this['_vertices'][_0x491e55] + 0.0001 < this['_vertices'][_0x112a67 + this['_startLife' + 'TimeIndex']])
                    break;
                this['_vertices'][_0x491e55] = this['_drawCount' + 'er'], this['_firstActi' + 'veElement']++, this['_firstActi' + 'veElement'] >= this['_bufferMax' + 'Particles'] && (this['_firstActi' + 'veElement'] = 0x0);
            }
        }
        ['_freeRetir' + 'edParticle' + 's']() {
            for (; this['_firstReti' + 'redElement'] != this['_firstActi' + 'veElement'];) {
                var _0x590344 = this['_drawCount' + 'er'] - this['_vertices'][this['_firstReti' + 'redElement'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'] + this['_timeIndex']];
                if (this['isPerforma' + 'nceMode'] && _0x590344 < 0x3)
                    break;
                this['_firstReti' + 'redElement']++, this['_firstReti' + 'redElement'] >= this['_bufferMax' + 'Particles'] && (this['_firstReti' + 'redElement'] = 0x0);
            }
        }
        ['_burst'](_0x26f4a8, _0x3a49be) {
            for (var _0x30046b = 0x0, _0x1bb0b6 = this['_emission']['_bursts'], _0x2d68f7 = _0x1bb0b6['length']; this['_burstsInd' + 'ex'] < _0x2d68f7; this['_burstsInd' + 'ex']++) {
                var _0x52a447, _0x47a721 = _0x1bb0b6[this['_burstsInd' + 'ex']], _0x42f626 = _0x47a721['time'];
                if (!(_0x26f4a8 <= _0x42f626 && _0x42f626 < _0x3a49be))
                    break;
                this['autoRandom' + 'Seed'] ? _0x52a447 = _0x2247ad['MathUtil']['lerp'](_0x47a721['minCount'], _0x47a721['maxCount'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x0], _0x52a447 = _0x2247ad['MathUtil']['lerp'](_0x47a721['minCount'], _0x47a721['maxCount'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x0] = this['_rand']['seed']), _0x30046b += _0x52a447;
            }
            return _0x30046b;
        }
        ['_advanceTi' + 'me'](_0x46cb41, _0x472b53) {
            var _0x4d5e8e, _0x1c3137 = this['_emissionT' + 'ime'];
            this['_emissionT' + 'ime'] += _0x46cb41;
            var _0x20b679 = 0x0;
            if (this['_emissionT' + 'ime'] > this['duration']) {
                if (!this['looping']) {
                    for (_0x20b679 = Math['min'](this['maxParticl' + 'es'] - this['aliveParti' + 'cleCount'], _0x20b679), _0x4d5e8e = 0x0; _0x4d5e8e < _0x20b679; _0x4d5e8e++)
                        this['emit'](_0x472b53);
                    return this['_isPlaying'] = !0x1, void this['stop']();
                }
                _0x20b679 += this['_burst'](_0x1c3137, this['_emissionT' + 'ime']), this['_emissionT' + 'ime'] -= this['duration'], this['_burstsInd' + 'ex'] = 0x0, _0x20b679 += this['_burst'](0x0, this['_emissionT' + 'ime']);
            } else
                _0x20b679 += this['_burst'](_0x1c3137, this['_emissionT' + 'ime']);
            for (_0x20b679 = Math['min'](this['maxParticl' + 'es'] - this['aliveParti' + 'cleCount'], _0x20b679), _0x4d5e8e = 0x0; _0x4d5e8e < _0x20b679; _0x4d5e8e++)
                this['emit'](_0x472b53);
            var _0x25b350 = this['emission']['emissionRa' + 'te'];
            if (_0x25b350 > 0x0) {
                var _0x4a75b4 = 0x1 / _0x25b350;
                for (this['_frameRate' + 'Time'] += _0x4a75b4, this['_frameRate' + 'Time'] = this['_currentTi' + 'me'] - (this['_currentTi' + 'me'] - this['_frameRate' + 'Time']) % this['_maxStartL' + 'ifetime']; this['_frameRate' + 'Time'] <= _0x472b53 && this['emit'](this['_frameRate' + 'Time']);)
                    this['_frameRate' + 'Time'] += _0x4a75b4;
                this['_frameRate' + 'Time'] = Math['floor'](_0x472b53 / _0x4a75b4) * _0x4a75b4;
            }
        }
        ['_initBuffe' + 'rDatas']() {
            if (this['_vertexBuf' + 'fer']) {
                this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy']();
                var _0x1ba5d8 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + 0x2 * this['_indexBuff' + 'er']['indexCount'];
                _0x2247ad['Resource']['_addMemory'](-_0x1ba5d8, -_0x1ba5d8);
            }
            var _0x2a924c = _0x2247ad['LayaGL']['instance'], _0x36254f = this['_ownerRend' + 'er'], _0x31b766 = _0x36254f['renderMode'];
            if (-0x1 !== _0x31b766 && this['maxParticl' + 'es'] > 0x0) {
                var _0x247c84, _0x10f7be, _0xb5865e, _0x3e6a13, _0x22fd51, _0x101406, _0xc19b2f, _0x535cc1 = 0x0, _0x45d54b = (_0x1ba5d8 = 0x0, _0x36254f['mesh']);
                if (0x4 === _0x31b766) {
                    if (_0x45d54b) {
                        _0xc19b2f = _0x26aea6['vertexDecl' + 'aration'], this['_floatCoun' + 'tPerVertex'] = _0xc19b2f['vertexStri' + 'de'] / 0x4, this['_startLife' + 'TimeIndex'] = 0xc, this['_timeIndex'] = 0x10, this['_vertexStr' + 'ide'] = _0x45d54b['_vertexCou' + 'nt'];
                        var _0xd6bef8 = this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide'], _0x191b87 = _0xd6bef8 % 0xffff;
                        if (Math['floor'](_0xd6bef8 / 0xffff) + 0x1 > 0x1)
                            throw new Error('ShurikenPa' + 'rticleSyst' + 'em:the\x20max' + 'ParticleCo' + 'unt\x20multip' + 'ly\x20mesh\x20ve' + 'rtexCount\x20' + 'is\x20large\x20t' + 'han\x2065535.');
                        _0x535cc1 = _0xc19b2f['vertexStri' + 'de'] * _0x191b87, this['_vertexBuf' + 'fer'] = new _0x26d078(_0x535cc1, _0x2a924c['DYNAMIC_DR' + 'AW']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0xc19b2f, this['_vertices'] = new Float32Array(this['_floatCoun' + 'tPerVertex'] * _0x191b87), this['_indexStri' + 'de'] = _0x45d54b['_indexBuff' + 'er']['indexCount'];
                        var _0x121bdf = _0x45d54b['_indexBuff' + 'er']['getData'](), _0x5a165b = this['_bufferMax' + 'Particles'] * this['_indexStri' + 'de'];
                        for (this['_indexBuff' + 'er'] = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], _0x5a165b, _0x2a924c['STATIC_DRA' + 'W']), _0x247c84 = new Uint16Array(_0x5a165b), _0x1ba5d8 = _0x535cc1 + 0x2 * _0x5a165b, _0x22fd51 = 0x0, _0x10f7be = 0x0; _0x10f7be < this['_bufferMax' + 'Particles']; _0x10f7be++) {
                            var _0x27d8c3 = _0x10f7be * this['_vertexStr' + 'ide'];
                            for (_0xb5865e = 0x0, _0x3e6a13 = _0x121bdf['length']; _0xb5865e < _0x3e6a13; _0xb5865e++)
                                _0x247c84[_0x22fd51++] = _0x27d8c3 + _0x121bdf[_0xb5865e];
                        }
                        this['_indexBuff' + 'er']['setData'](_0x247c84), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
                    }
                } else {
                    for (_0xc19b2f = _0x4fa401['vertexDecl' + 'aration'], this['_floatCoun' + 'tPerVertex'] = _0xc19b2f['vertexStri' + 'de'] / 0x4, this['_startLife' + 'TimeIndex'] = 0x7, this['_timeIndex'] = 0xb, this['_vertexStr' + 'ide'] = 0x4, _0x535cc1 = _0xc19b2f['vertexStri' + 'de'] * this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide'], this['_vertexBuf' + 'fer'] = new _0x26d078(_0x535cc1, _0x2a924c['DYNAMIC_DR' + 'AW']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0xc19b2f, this['_vertices'] = new Float32Array(this['_floatCoun' + 'tPerVertex'] * this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide']), _0x10f7be = 0x0; _0x10f7be < this['_bufferMax' + 'Particles']; _0x10f7be++)
                        _0x101406 = _0x10f7be * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], this['_vertices'][_0x101406] = -0.5, this['_vertices'][_0x101406 + 0x1] = -0.5, this['_vertices'][_0x101406 + 0x2] = 0x0, this['_vertices'][_0x101406 + 0x3] = 0x1, _0x101406 += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x101406] = 0.5, this['_vertices'][_0x101406 + 0x1] = -0.5, this['_vertices'][_0x101406 + 0x2] = 0x1, this['_vertices'][_0x101406 + 0x3] = 0x1, _0x101406 += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x101406] = 0.5, this['_vertices'][_0x101406 + 0x1] = 0.5, this['_vertices'][_0x101406 + 0x2] = 0x1, this['_vertices'][_0x101406 + 0x3] = 0x0, _0x101406 += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x101406] = -0.5, this['_vertices'][_0x101406 + 0x1] = 0.5, this['_vertices'][_0x101406 + 0x2] = 0x0, this['_vertices'][_0x101406 + 0x3] = 0x0;
                    for (this['_indexStri' + 'de'] = 0x6, this['_indexBuff' + 'er'] = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], 0x6 * this['_bufferMax' + 'Particles'], _0x2a924c['STATIC_DRA' + 'W']), _0x247c84 = new Uint16Array(0x6 * this['_bufferMax' + 'Particles']), _0x10f7be = 0x0; _0x10f7be < this['_bufferMax' + 'Particles']; _0x10f7be++) {
                        _0x22fd51 = 0x6 * _0x10f7be;
                        var _0x2341d2 = _0x10f7be * this['_vertexStr' + 'ide'], _0x46dbcb = _0x2341d2 + 0x2;
                        _0x247c84[_0x22fd51++] = _0x2341d2, _0x247c84[_0x22fd51++] = _0x46dbcb, _0x247c84[_0x22fd51++] = _0x2341d2 + 0x1, _0x247c84[_0x22fd51++] = _0x2341d2, _0x247c84[_0x22fd51++] = _0x2341d2 + 0x3, _0x247c84[_0x22fd51++] = _0x46dbcb;
                    }
                    this['_indexBuff' + 'er']['setData'](_0x247c84), _0x1ba5d8 = _0x535cc1 + 0x6 * this['_bufferMax' + 'Particles'] * 0x2, this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
                }
                _0x2247ad['Resource']['_addMemory'](_0x1ba5d8, _0x1ba5d8);
            }
        }
        ['destroy']() {
            super['destroy']();
            var _0x2ba972 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + 0x2 * this['_indexBuff' + 'er']['indexCount'];
            _0x2247ad['Resource']['_addMemory'](-_0x2ba972, -_0x2ba972), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_emission']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_owner'] = null, this['_vertices'] = null, this['_indexBuff' + 'er'] = null, this['_emission'] = null, this['_shape'] = null, this['startLifeT' + 'imeGradien' + 't'] = null, this['startLifeT' + 'imeGradien' + 'tMin'] = null, this['startLifeT' + 'imeGradien' + 'tMax'] = null, this['startSizeC' + 'onstantSep' + 'arate'] = null, this['startSizeC' + 'onstantMin' + 'Separate'] = null, this['startSizeC' + 'onstantMax' + 'Separate'] = null, this['startRotat' + 'ionConstan' + 'tSeparate'] = null, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = null, this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = null, this['startColor' + 'Constant'] = null, this['startColor' + 'ConstantMi' + 'n'] = null, this['startColor' + 'ConstantMa' + 'x'] = null, this['_velocityO' + 'verLifetim' + 'e'] = null, this['_colorOver' + 'Lifetime'] = null, this['_sizeOverL' + 'ifetime'] = null, this['_rotationO' + 'verLifetim' + 'e'] = null, this['_textureSh' + 'eetAnimati' + 'on'] = null;
        }
        ['emit'](_0x16052) {
            var _0x23e3a6 = _0x1d12c0['_tempPosit' + 'ion'], _0x7eb48f = _0x1d12c0['_tempDirec' + 'tion'];
            return this['_shape'] && this['_shape']['enable'] ? this['autoRandom' + 'Seed'] ? this['_shape']['generatePo' + 'sitionAndD' + 'irection'](_0x23e3a6, _0x7eb48f) : this['_shape']['generatePo' + 'sitionAndD' + 'irection'](_0x23e3a6, _0x7eb48f, this['_rand'], this['_randomSee' + 'ds']) : (_0x23e3a6['x'] = _0x23e3a6['y'] = _0x23e3a6['z'] = 0x0, _0x7eb48f['x'] = _0x7eb48f['y'] = 0x0, _0x7eb48f['z'] = 0x1), this['addParticl' + 'e'](_0x23e3a6, _0x7eb48f, _0x16052);
        }
        ['addParticl' + 'e'](_0x111cae, _0x405481, _0x1e7ed2) {
            _0x43b358['normalize'](_0x405481, _0x405481);
            var _0x1ee8d2 = this['_firstFree' + 'Element'] + 0x1;
            if (_0x1ee8d2 >= this['_bufferMax' + 'Particles'] && (_0x1ee8d2 = 0x0), _0x1ee8d2 === this['_firstReti' + 'redElement'])
                return !0x1;
            var _0x4c4f20, _0x57b827, _0x3b7c7b, _0x2869bb, _0x54ba8c, _0x4af51d, _0x3119fb, _0x37bf9c, _0x5e1559, _0x4c9918, _0x314800 = this['_owner']['transform'];
            if (_0x54991b['create'](this, this['_ownerRend' + 'er'], _0x314800), this['_currentTi' + 'me'] - _0x1e7ed2 >= _0x54991b['startLifeT' + 'ime'])
                return !0x0;
            switch (0x0 == this['simulation' + 'Space'] && (_0x4c4f20 = _0x314800['position'], _0x57b827 = _0x314800['rotation']), this['startSpeed' + 'Type']) {
            case 0x0:
                _0x3b7c7b = this['startSpeed' + 'Constant'];
                break;
            case 0x2:
                this['autoRandom' + 'Seed'] ? _0x3b7c7b = _0x2247ad['MathUtil']['lerp'](this['startSpeed' + 'ConstantMi' + 'n'], this['startSpeed' + 'ConstantMa' + 'x'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x8], _0x3b7c7b = _0x2247ad['MathUtil']['lerp'](this['startSpeed' + 'ConstantMi' + 'n'], this['startSpeed' + 'ConstantMa' + 'x'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x8] = this['_rand']['seed']);
            }
            var _0x37d86b = this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'];
            if (_0x37d86b) {
                var _0x4ef447 = this['_velocityO' + 'verLifetim' + 'e']['velocity']['type'];
                0x2 === _0x4ef447 || 0x3 === _0x4ef447 ? this['autoRandom' + 'Seed'] ? (_0x2869bb = Math['random'](), _0x54ba8c = Math['random'](), _0x4af51d = Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x9], _0x2869bb = this['_rand']['getFloat'](), _0x54ba8c = this['_rand']['getFloat'](), _0x4af51d = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0x9] = this['_rand']['seed']) : _0x37d86b = !0x1;
            } else
                _0x37d86b = !0x1;
            var _0x29ddb1 = this['_colorOver' + 'Lifetime'] && this['_colorOver' + 'Lifetime']['enable'];
            _0x29ddb1 ? 0x3 === this['_colorOver' + 'Lifetime']['color']['type'] ? this['autoRandom' + 'Seed'] ? _0x3119fb = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xa], _0x3119fb = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xa] = this['_rand']['seed']) : _0x29ddb1 = !0x1 : _0x29ddb1 = !0x1;
            var _0x1e0df3 = this['_sizeOverL' + 'ifetime'] && this['_sizeOverL' + 'ifetime']['enable'];
            _0x1e0df3 ? 0x3 === this['_sizeOverL' + 'ifetime']['size']['type'] ? this['autoRandom' + 'Seed'] ? _0x37bf9c = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xb], _0x37bf9c = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xb] = this['_rand']['seed']) : _0x1e0df3 = !0x1 : _0x1e0df3 = !0x1;
            var _0x44267b = this['_rotationO' + 'verLifetim' + 'e'] && this['_rotationO' + 'verLifetim' + 'e']['enable'];
            if (_0x44267b) {
                var _0x50124c = this['_rotationO' + 'verLifetim' + 'e']['angularVel' + 'ocity']['type'];
                0x2 === _0x50124c || 0x3 === _0x50124c ? this['autoRandom' + 'Seed'] ? _0x5e1559 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xc], _0x5e1559 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xc] = this['_rand']['seed']) : _0x44267b = !0x1;
            } else
                _0x44267b = !0x1;
            var _0x2595ba = this['_textureSh' + 'eetAnimati' + 'on'] && this['_textureSh' + 'eetAnimati' + 'on']['enable'];
            _0x2595ba ? 0x3 === this['_textureSh' + 'eetAnimati' + 'on']['frame']['type'] ? this['autoRandom' + 'Seed'] ? _0x4c9918 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xf], _0x4c9918 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xf] = this['_rand']['seed']) : _0x2595ba = !0x1 : _0x2595ba = !0x1;
            var _0x2ae2c2, _0x324e73, _0x314363, _0x3da7db, _0x2e195f, _0x55e40b, _0x38fee8 = this['_firstFree' + 'Element'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], _0x7cbd68 = _0x54991b['startUVInf' + 'o'][0x0], _0x396e94 = _0x54991b['startUVInf' + 'o'][0x1], _0x1e48d3 = _0x54991b['startUVInf' + 'o'][0x2], _0x53d46d = _0x54991b['startUVInf' + 'o'][0x3], _0x2862aa = this['_ownerRend' + 'er'];
            if (0x4 === _0x2862aa['renderMode']) {
                var _0x541cd9 = _0x2862aa['mesh']['_vertexBuf' + 'fer'];
                _0x2ae2c2 = _0x541cd9['getFloat32' + 'Data']();
                var _0x2462c3 = _0x541cd9['vertexDecl' + 'aration'];
                _0x314363 = _0x2462c3['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_POSIT' + 'ION0'])['_offset'] / 0x4;
                var _0x52bf38 = _0x2462c3['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_COLOR' + '0']);
                _0x3da7db = _0x52bf38 ? _0x52bf38['_offset'] / 0x4 : -0x1;
                var _0xdf46da = _0x2462c3['getVertexE' + 'lementByUs' + 'age'](_0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                _0x2e195f = _0xdf46da ? _0xdf46da['_offset'] / 0x4 : -0x1, _0x324e73 = _0x2462c3['vertexStri' + 'de'] / 0x4, _0x55e40b = 0x0;
            } else {
                this['_vertices'][_0x38fee8 + 0x2] = _0x1e48d3, this['_vertices'][_0x38fee8 + 0x3] = _0x53d46d + _0x396e94;
                var _0x52f50a = _0x38fee8 + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x52f50a + 0x2] = _0x1e48d3 + _0x7cbd68, this['_vertices'][_0x52f50a + 0x3] = _0x53d46d + _0x396e94;
                var _0x5eac71 = _0x52f50a + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x5eac71 + 0x2] = _0x1e48d3 + _0x7cbd68, this['_vertices'][_0x5eac71 + 0x3] = _0x53d46d;
                var _0x4b7561 = _0x5eac71 + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x4b7561 + 0x2] = _0x1e48d3, this['_vertices'][_0x4b7561 + 0x3] = _0x53d46d;
            }
            for (var _0x5aae93 = _0x38fee8, _0x478a35 = _0x38fee8 + this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide']; _0x5aae93 < _0x478a35; _0x5aae93 += this['_floatCoun' + 'tPerVertex']) {
                var _0x2f8e76;
                if (0x4 === _0x2862aa['renderMode']) {
                    _0x2f8e76 = _0x5aae93;
                    var _0x1e425c = _0x324e73 * _0x55e40b++, _0x110da3 = _0x1e425c + _0x314363;
                    this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3++], this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3++], this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3], -0x1 === _0x3da7db ? (this['_vertices'][_0x2f8e76++] = 0x1, this['_vertices'][_0x2f8e76++] = 0x1, this['_vertices'][_0x2f8e76++] = 0x1, this['_vertices'][_0x2f8e76++] = 0x1) : (_0x110da3 = _0x1e425c + _0x3da7db, this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3++], this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3++], this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3++], this['_vertices'][_0x2f8e76++] = _0x2ae2c2[_0x110da3]), -0x1 === _0x2e195f ? (this['_vertices'][_0x2f8e76++] = 0x0, this['_vertices'][_0x2f8e76++] = 0x0) : (_0x110da3 = _0x1e425c + _0x2e195f, this['_vertices'][_0x2f8e76++] = _0x1e48d3 + _0x2ae2c2[_0x110da3++] * _0x7cbd68, this['_vertices'][_0x2f8e76++] = _0x53d46d + _0x2ae2c2[_0x110da3] * _0x396e94);
                } else
                    _0x2f8e76 = _0x5aae93 + 0x4;
                switch (this['_vertices'][_0x2f8e76++] = _0x111cae['x'], this['_vertices'][_0x2f8e76++] = _0x111cae['y'], this['_vertices'][_0x2f8e76++] = _0x111cae['z'], this['_vertices'][_0x2f8e76++] = _0x54991b['startLifeT' + 'ime'], this['_vertices'][_0x2f8e76++] = _0x405481['x'], this['_vertices'][_0x2f8e76++] = _0x405481['y'], this['_vertices'][_0x2f8e76++] = _0x405481['z'], this['_vertices'][_0x2f8e76++] = _0x1e7ed2, this['_vertices'][_0x2f8e76++] = _0x54991b['startColor']['x'], this['_vertices'][_0x2f8e76++] = _0x54991b['startColor']['y'], this['_vertices'][_0x2f8e76++] = _0x54991b['startColor']['z'], this['_vertices'][_0x2f8e76++] = _0x54991b['startColor']['w'], this['_vertices'][_0x2f8e76++] = _0x54991b['startSize'][0x0], this['_vertices'][_0x2f8e76++] = _0x54991b['startSize'][0x1], this['_vertices'][_0x2f8e76++] = _0x54991b['startSize'][0x2], this['_vertices'][_0x2f8e76++] = _0x54991b['startRotat' + 'ion'][0x0], this['_vertices'][_0x2f8e76++] = _0x54991b['startRotat' + 'ion'][0x1], this['_vertices'][_0x2f8e76++] = _0x54991b['startRotat' + 'ion'][0x2], this['_vertices'][_0x2f8e76++] = _0x3b7c7b, _0x29ddb1 && (this['_vertices'][_0x2f8e76 + 0x1] = _0x3119fb), _0x1e0df3 && (this['_vertices'][_0x2f8e76 + 0x2] = _0x37bf9c), _0x44267b && (this['_vertices'][_0x2f8e76 + 0x3] = _0x5e1559), _0x2595ba && (this['_vertices'][_0x2f8e76 + 0x4] = _0x4c9918), _0x37d86b && (this['_vertices'][_0x2f8e76 + 0x5] = _0x2869bb, this['_vertices'][_0x2f8e76 + 0x6] = _0x54ba8c, this['_vertices'][_0x2f8e76 + 0x7] = _0x4af51d), this['simulation' + 'Space']) {
                case 0x0:
                    _0x2f8e76 += 0x8, this['_vertices'][_0x2f8e76++] = _0x4c4f20['x'], this['_vertices'][_0x2f8e76++] = _0x4c4f20['y'], this['_vertices'][_0x2f8e76++] = _0x4c4f20['z'], this['_vertices'][_0x2f8e76++] = _0x57b827['x'], this['_vertices'][_0x2f8e76++] = _0x57b827['y'], this['_vertices'][_0x2f8e76++] = _0x57b827['z'], this['_vertices'][_0x2f8e76++] = _0x57b827['w'];
                    break;
                case 0x1:
                    break;
                default:
                    throw new Error('ShurikenPa' + 'rticleMate' + 'rial:\x20Simu' + 'lationSpac' + 'e\x20value\x20is' + '\x20invalid.');
                }
            }
            return this['_firstFree' + 'Element'] = _0x1ee8d2, !0x0;
        }
        ['addNewPart' + 'iclesToVer' + 'texBuffer']() {
            var _0xd21c28, _0x560540 = this['_vertexStr' + 'ide'] * this['_floatCoun' + 'tPerVertex'] * 0x4;
            this['_firstNewE' + 'lement'] < this['_firstFree' + 'Element'] ? (_0xd21c28 = this['_firstNewE' + 'lement'] * _0x560540, this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], _0xd21c28, _0xd21c28, (this['_firstFree' + 'Element'] - this['_firstNewE' + 'lement']) * _0x560540)) : (_0xd21c28 = this['_firstNewE' + 'lement'] * _0x560540, this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], _0xd21c28, _0xd21c28, (this['_bufferMax' + 'Particles'] - this['_firstNewE' + 'lement']) * _0x560540), this['_firstFree' + 'Element'] > 0x0 && this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, this['_firstFree' + 'Element'] * _0x560540)), this['_firstNewE' + 'lement'] = this['_firstFree' + 'Element'];
        }
        ['_getType']() {
            return _0x1d12c0['_type'];
        }
        ['_prepareRe' + 'nder'](_0x5dc035) {
            return this['_updateEmi' + 'ssion'](), this['_firstNewE' + 'lement'] != this['_firstFree' + 'Element'] && this['addNewPart' + 'iclesToVer' + 'texBuffer'](), this['_drawCount' + 'er']++, this['_firstActi' + 'veElement'] != this['_firstFree' + 'Element'];
        }
        ['_render'](_0x163f13) {
            var _0x438521;
            this['_bufferSta' + 'te']['bind']();
            var _0x6db90 = _0x2247ad['LayaGL']['instance'];
            this['_firstActi' + 'veElement'] < this['_firstFree' + 'Element'] ? (_0x438521 = (this['_firstFree' + 'Element'] - this['_firstActi' + 'veElement']) * this['_indexStri' + 'de'], _0x6db90['drawElemen' + 'ts'](_0x6db90['TRIANGLES'], _0x438521, _0x6db90['UNSIGNED_S' + 'HORT'], 0x2 * this['_firstActi' + 'veElement'] * this['_indexStri' + 'de']), _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x438521 / 0x3, _0x2247ad['Stat']['renderBatc' + 'hes']++) : (_0x438521 = (this['_bufferMax' + 'Particles'] - this['_firstActi' + 'veElement']) * this['_indexStri' + 'de'], _0x6db90['drawElemen' + 'ts'](_0x6db90['TRIANGLES'], _0x438521, _0x6db90['UNSIGNED_S' + 'HORT'], 0x2 * this['_firstActi' + 'veElement'] * this['_indexStri' + 'de']), _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x438521 / 0x3, _0x2247ad['Stat']['renderBatc' + 'hes']++, this['_firstFree' + 'Element'] > 0x0 && (_0x438521 = this['_firstFree' + 'Element'] * this['_indexStri' + 'de'], _0x6db90['drawElemen' + 'ts'](_0x6db90['TRIANGLES'], _0x438521, _0x6db90['UNSIGNED_S' + 'HORT'], 0x0), _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x438521 / 0x3, _0x2247ad['Stat']['renderBatc' + 'hes']++));
        }
        ['play']() {
            if (this['_burstsInd' + 'ex'] = 0x0, this['_isEmittin' + 'g'] = !0x0, this['_isPlaying'] = !0x0, this['_isPaused'] = !0x1, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, !this['autoRandom' + 'Seed']) {
                for (var _0x2b9d59 = 0x0, _0x3488e4 = this['_randomSee' + 'ds']['length']; _0x2b9d59 < _0x3488e4; _0x2b9d59++)
                    this['_randomSee' + 'ds'][_0x2b9d59] = this['randomSeed'][0x0] + _0x1d12c0['_RANDOMOFF' + 'SET'][_0x2b9d59];
            }
            switch (this['startDelay' + 'Type']) {
            case 0x0:
                this['_playStart' + 'Delay'] = this['startDelay'];
                break;
            case 0x1:
                this['autoRandom' + 'Seed'] ? this['_playStart' + 'Delay'] = _0x2247ad['MathUtil']['lerp'](this['startDelay' + 'Min'], this['startDelay' + 'Max'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x2], this['_playStart' + 'Delay'] = _0x2247ad['MathUtil']['lerp'](this['startDelay' + 'Min'], this['startDelay' + 'Max'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x2] = this['_rand']['seed']);
                break;
            default:
                throw new Error('Utils3D:\x20s' + 'tartDelayT' + 'ype\x20is\x20inv' + 'alid.');
            }
            this['_frameRate' + 'Time'] = this['_currentTi' + 'me'] + this['_playStart' + 'Delay'], this['_startUpda' + 'teLoopCoun' + 't'] = _0x2247ad['Stat']['loopCount'];
        }
        ['pause']() {
            this['_isPaused'] = !0x0;
        }
        ['simulate'](_0x264233, _0x1785a1 = !0x0) {
            this['_simulateU' + 'pdate'] = !0x0, _0x1785a1 ? this['_updatePar' + 'ticlesSimu' + 'lationRest' + 'art'](_0x264233) : (this['_isPaused'] = !0x1, this['_updatePar' + 'ticles'](_0x264233)), this['pause']();
        }
        ['stop']() {
            this['_burstsInd' + 'ex'] = 0x0, this['_isEmittin' + 'g'] = !0x1, this['_emissionT' + 'ime'] = 0x0;
        }
        ['cloneTo'](_0x4da5da) {
            var _0xfd9402 = _0x4da5da;
            _0xfd9402['duration'] = this['duration'], _0xfd9402['looping'] = this['looping'], _0xfd9402['prewarm'] = this['prewarm'], _0xfd9402['startDelay' + 'Type'] = this['startDelay' + 'Type'], _0xfd9402['startDelay'] = this['startDelay'], _0xfd9402['startDelay' + 'Min'] = this['startDelay' + 'Min'], _0xfd9402['startDelay' + 'Max'] = this['startDelay' + 'Max'], _0xfd9402['_maxStartL' + 'ifetime'] = this['_maxStartL' + 'ifetime'], _0xfd9402['startLifet' + 'imeType'] = this['startLifet' + 'imeType'], _0xfd9402['startLifet' + 'imeConstan' + 't'] = this['startLifet' + 'imeConstan' + 't'], this['startLifeT' + 'imeGradien' + 't']['cloneTo'](_0xfd9402['startLifeT' + 'imeGradien' + 't']), _0xfd9402['startLifet' + 'imeConstan' + 'tMin'] = this['startLifet' + 'imeConstan' + 'tMin'], _0xfd9402['startLifet' + 'imeConstan' + 'tMax'] = this['startLifet' + 'imeConstan' + 'tMax'], this['startLifeT' + 'imeGradien' + 'tMin']['cloneTo'](_0xfd9402['startLifeT' + 'imeGradien' + 'tMin']), this['startLifeT' + 'imeGradien' + 'tMax']['cloneTo'](_0xfd9402['startLifeT' + 'imeGradien' + 'tMax']), _0xfd9402['startSpeed' + 'Type'] = this['startSpeed' + 'Type'], _0xfd9402['startSpeed' + 'Constant'] = this['startSpeed' + 'Constant'], _0xfd9402['startSpeed' + 'ConstantMi' + 'n'] = this['startSpeed' + 'ConstantMi' + 'n'], _0xfd9402['startSpeed' + 'ConstantMa' + 'x'] = this['startSpeed' + 'ConstantMa' + 'x'], _0xfd9402['threeDStar' + 'tSize'] = this['threeDStar' + 'tSize'], _0xfd9402['startSizeT' + 'ype'] = this['startSizeT' + 'ype'], _0xfd9402['startSizeC' + 'onstant'] = this['startSizeC' + 'onstant'], this['startSizeC' + 'onstantSep' + 'arate']['cloneTo'](_0xfd9402['startSizeC' + 'onstantSep' + 'arate']), _0xfd9402['startSizeC' + 'onstantMin'] = this['startSizeC' + 'onstantMin'], _0xfd9402['startSizeC' + 'onstantMax'] = this['startSizeC' + 'onstantMax'], this['startSizeC' + 'onstantMin' + 'Separate']['cloneTo'](_0xfd9402['startSizeC' + 'onstantMin' + 'Separate']), this['startSizeC' + 'onstantMax' + 'Separate']['cloneTo'](_0xfd9402['startSizeC' + 'onstantMax' + 'Separate']), _0xfd9402['threeDStar' + 'tRotation'] = this['threeDStar' + 'tRotation'], _0xfd9402['startRotat' + 'ionType'] = this['startRotat' + 'ionType'], _0xfd9402['startRotat' + 'ionConstan' + 't'] = this['startRotat' + 'ionConstan' + 't'], this['startRotat' + 'ionConstan' + 'tSeparate']['cloneTo'](_0xfd9402['startRotat' + 'ionConstan' + 'tSeparate']), _0xfd9402['startRotat' + 'ionConstan' + 'tMin'] = this['startRotat' + 'ionConstan' + 'tMin'], _0xfd9402['startRotat' + 'ionConstan' + 'tMax'] = this['startRotat' + 'ionConstan' + 'tMax'], this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te']['cloneTo'](_0xfd9402['startRotat' + 'ionConstan' + 'tMinSepara' + 'te']), this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te']['cloneTo'](_0xfd9402['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te']), _0xfd9402['randomizeR' + 'otationDir' + 'ection'] = this['randomizeR' + 'otationDir' + 'ection'], _0xfd9402['startColor' + 'Type'] = this['startColor' + 'Type'], this['startColor' + 'Constant']['cloneTo'](_0xfd9402['startColor' + 'Constant']), this['startColor' + 'ConstantMi' + 'n']['cloneTo'](_0xfd9402['startColor' + 'ConstantMi' + 'n']), this['startColor' + 'ConstantMa' + 'x']['cloneTo'](_0xfd9402['startColor' + 'ConstantMa' + 'x']), _0xfd9402['gravityMod' + 'ifier'] = this['gravityMod' + 'ifier'], _0xfd9402['simulation' + 'Space'] = this['simulation' + 'Space'], _0xfd9402['scaleMode'] = this['scaleMode'], _0xfd9402['playOnAwak' + 'e'] = this['playOnAwak' + 'e'], _0xfd9402['autoRandom' + 'Seed'] = this['autoRandom' + 'Seed'], _0xfd9402['randomSeed'][0x0] = this['randomSeed'][0x0], _0xfd9402['maxParticl' + 'es'] = this['maxParticl' + 'es'], this['_emission'] && (_0xfd9402['_emission'] = this['_emission']['clone']()), this['shape'] && (_0xfd9402['shape'] = this['shape']['clone']()), this['velocityOv' + 'erLifetime'] && (_0xfd9402['velocityOv' + 'erLifetime'] = this['velocityOv' + 'erLifetime']['clone']()), this['colorOverL' + 'ifetime'] && (_0xfd9402['colorOverL' + 'ifetime'] = this['colorOverL' + 'ifetime']['clone']()), this['sizeOverLi' + 'fetime'] && (_0xfd9402['sizeOverLi' + 'fetime'] = this['sizeOverLi' + 'fetime']['clone']()), this['rotationOv' + 'erLifetime'] && (_0xfd9402['rotationOv' + 'erLifetime'] = this['rotationOv' + 'erLifetime']['clone']()), this['textureShe' + 'etAnimatio' + 'n'] && (_0xfd9402['textureShe' + 'etAnimatio' + 'n'] = this['textureShe' + 'etAnimatio' + 'n']['clone']()), _0xfd9402['isPerforma' + 'nceMode'] = this['isPerforma' + 'nceMode'], _0xfd9402['_isEmittin' + 'g'] = this['_isEmittin' + 'g'], _0xfd9402['_isPlaying'] = this['_isPlaying'], _0xfd9402['_isPaused'] = this['_isPaused'], _0xfd9402['_playStart' + 'Delay'] = this['_playStart' + 'Delay'], _0xfd9402['_frameRate' + 'Time'] = this['_frameRate' + 'Time'], _0xfd9402['_emissionT' + 'ime'] = this['_emissionT' + 'ime'], _0xfd9402['_totalDela' + 'yTime'] = this['_totalDela' + 'yTime'], _0xfd9402['_burstsInd' + 'ex'] = this['_burstsInd' + 'ex'];
        }
        ['clone']() {
            var _0x34f42f = new _0x1d12c0(null);
            return this['cloneTo'](_0x34f42f), _0x34f42f;
        }
    }
    _0x1d12c0['_RANDOMOFF' + 'SET'] = new Uint32Array([
        0x23571a3e,
        0xc34f56fe,
        0x13371337,
        0x12460f3b,
        0x6aed452e,
        0xdec4aea1,
        0x96aa4de3,
        0x8d2c8431,
        0xf3857f6f,
        0xe0fbd834,
        0x13740583,
        0x591bc05c,
        0x40eb95e4,
        0xbc524e5f,
        0xaf502044,
        0xa614b381,
        0x1034e524,
        0xfc524e5f
    ]), _0x1d12c0['halfKSqrtO' + 'f2'] = 0.71, _0x1d12c0['_maxElapse' + 'dTime'] = 0x1 / 0x3, _0x1d12c0['_tempVecto' + 'r30'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r31'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r32'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r33'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r34'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r35'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r36'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r37'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r38'] = new _0x43b358(), _0x1d12c0['_tempVecto' + 'r39'] = new _0x43b358(), _0x1d12c0['_tempPosit' + 'ion'] = new _0x43b358(), _0x1d12c0['_tempDirec' + 'tion'] = new _0x43b358(), _0x1d12c0['_type'] = _0x25a854['_typeCount' + 'er']++;
    class _0x568b78 extends _0x333e4a {
        static ['__init__']() {
            _0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD'] = _0x38ffce['getDefineB' + 'yName']('SPHERHBILL' + 'BOARD'), _0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD'] = _0x38ffce['getDefineB' + 'yName']('STRETCHEDB' + 'ILLBOARD'), _0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD'] = _0x38ffce['getDefineB' + 'yName']('HORIZONTAL' + 'BILLBOARD'), _0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D'] = _0x38ffce['getDefineB' + 'yName']('VERTICALBI' + 'LLBOARD'), _0xa664f1['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME'] = _0x38ffce['getDefineB' + 'yName']('COLOROVERL' + 'IFETIME'), _0xa664f1['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME'] = _0x38ffce['getDefineB' + 'yName']('RANDOMCOLO' + 'ROVERLIFET' + 'IME'), _0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T'] = _0x38ffce['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'CONSTANT'), _0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE'] = _0x38ffce['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'CURVE'), _0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT'] = _0x38ffce['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANT'), _0xa664f1['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE'] = _0x38ffce['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'E'), _0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE'] = _0x38ffce['getDefineB' + 'yName']('TEXTURESHE' + 'ETANIMATIO' + 'NCURVE'), _0xa664f1['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE'] = _0x38ffce['getDefineB' + 'yName']('TEXTURESHE' + 'ETANIMATIO' + 'NRANDOMCUR' + 'VE'), _0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME'] = _0x38ffce['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME'), _0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E'] = _0x38ffce['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'SEPERATE'), _0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T'] = _0x38ffce['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'CONSTANT'), _0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE'] = _0x38ffce['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'CURVE'), _0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS'] = _0x38ffce['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS'), _0xa664f1['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES'] = _0x38ffce['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES'), _0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE'] = _0x38ffce['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMECURV' + 'E'), _0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE'] = _0x38ffce['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMECURV' + 'ESEPERATE'), _0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S'] = _0x38ffce['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMERAND' + 'OMCURVES'), _0xa664f1['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE'] = _0x38ffce['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMERAND' + 'OMCURVESSE' + 'PERATE'), _0xa664f1['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH'] = _0x38ffce['getDefineB' + 'yName']('RENDERMODE' + '_MESH'), _0xa664f1['SHADERDEFI' + 'NE_SHAPE'] = _0x38ffce['getDefineB' + 'yName']('SHAPE');
        }
        get ['particleSy' + 'stem']() {
            return this['_particleS' + 'ystem'];
        }
        get ['particleRe' + 'nderer']() {
            return this['_render'];
        }
        constructor() {
            super(null), this['_render'] = new _0x3b6f66(this), this['_particleS' + 'ystem'] = new _0x1d12c0(this);
            var _0x58f1ae = this['_render']['_renderEle' + 'ments'][0x0] = new _0x978ca7();
            _0x58f1ae['setTransfo' + 'rm'](this['_transform']), _0x58f1ae['render'] = this['_render'], _0x58f1ae['setGeometr' + 'y'](this['_particleS' + 'ystem']), _0x58f1ae['material'] = _0x2651fd['defaultMat' + 'erial'];
        }
        ['_parseModu' + 'le'](_0x404dbe, _0x428c24) {
            for (var _0x3331f1 in _0x428c24)
                switch (_0x3331f1) {
                case 'bases':
                    var _0x5a2260 = _0x428c24['bases'];
                    for (var _0x46dff0 in _0x5a2260)
                        _0x404dbe[_0x46dff0] = _0x5a2260[_0x46dff0];
                    break;
                case 'vector2s':
                    var _0x2fb4b4 = _0x428c24['vector2s'];
                    for (var _0x46dff0 in _0x2fb4b4) {
                        var _0xdfa1b5 = _0x404dbe[_0x46dff0], _0x10a05b = _0x2fb4b4[_0x46dff0];
                        _0xdfa1b5['setValue'](_0x10a05b[0x0], _0x10a05b[0x1]), _0x404dbe[_0x46dff0] = _0xdfa1b5;
                    }
                    break;
                case 'vector3s':
                    var _0x3940a4 = _0x428c24['vector3s'];
                    for (var _0x46dff0 in _0x3940a4) {
                        var _0x154e19 = _0x404dbe[_0x46dff0], _0x3345b4 = _0x3940a4[_0x46dff0];
                        _0x154e19['setValue'](_0x3345b4[0x0], _0x3345b4[0x1], _0x3345b4[0x2]), _0x404dbe[_0x46dff0] = _0x154e19;
                    }
                    break;
                case 'vector4s':
                    var _0x3c3a87 = _0x428c24['vector4s'];
                    for (var _0x46dff0 in _0x3c3a87) {
                        var _0x180bd1 = _0x404dbe[_0x46dff0], _0x4f5ef5 = _0x3c3a87[_0x46dff0];
                        _0x180bd1['setValue'](_0x4f5ef5[0x0], _0x4f5ef5[0x1], _0x4f5ef5[0x2], _0x4f5ef5[0x3]), _0x404dbe[_0x46dff0] = _0x180bd1;
                    }
                    break;
                case 'gradientDa' + 'taNumbers':
                    var _0x138fb2 = _0x428c24['gradientDa' + 'taNumbers'];
                    for (var _0x46dff0 in _0x138fb2) {
                        for (var _0x4ab43c = _0x404dbe[_0x46dff0], _0x34131e = _0x428c24[_0x46dff0], _0x37b383 = 0x0, _0x3b0b10 = _0x34131e['length']; _0x37b383 < _0x3b0b10; _0x37b383++) {
                            var _0x5a2e97 = _0x34131e[_0x37b383];
                            _0x4ab43c['add'](_0x5a2e97['key'], _0x5a2e97['value']);
                        }
                        _0x404dbe[_0x46dff0] = _0x4ab43c;
                    }
                    break;
                case 'resources':
                    var _0x47eb09 = _0x428c24['resources'];
                    for (var _0x46dff0 in _0x47eb09)
                        _0x404dbe[_0x46dff0] = _0x2247ad['Loader']['getRes'](_0x47eb09[_0x46dff0]);
                    break;
                case 'bursts':
                    var _0x154983 = _0x428c24['bursts'];
                    for (_0x37b383 = 0x0, _0x3b0b10 = _0x154983['length']; _0x37b383 < _0x3b0b10; _0x37b383++) {
                        var _0x4df4d7 = _0x154983[_0x37b383];
                        _0x404dbe['addBurst'](new _0xe7056e(_0x4df4d7['time'], _0x4df4d7['min'], _0x4df4d7['max']));
                    }
                    break;
                case 'randomSeed':
                    _0x404dbe['randomSeed'][0x0] = _0x428c24['randomSeed'];
                    break;
                case 'shapeType':
                case 'type':
                case 'color':
                case 'size':
                case 'frame':
                case 'startFrame':
                case 'angularVel' + 'ocity':
                case 'velocity':
                    break;
                default:
                    throw 'ShurikenPa' + 'rticle3D:u' + 'nknown\x20typ' + 'e.';
                }
        }
        ['_parse'](_0x40069e, _0x5d82d2) {
            if (super['_parse'](_0x40069e, _0x5d82d2), _0x40069e['main']) {
                var _0x558b36 = this['particleSy' + 'stem'], _0x880422 = this['particleRe' + 'nderer'];
                this['_parseModu' + 'le'](_0x880422, _0x40069e['renderer']), this['_parseModu' + 'le'](_0x558b36, _0x40069e['main']), this['_parseModu' + 'le'](_0x558b36['emission'], _0x40069e['emission']);
                var _0x4518f9 = _0x40069e['shape'];
                if (_0x4518f9) {
                    var _0x4390f3;
                    switch (_0x4518f9['shapeType']) {
                    case 0x0:
                        _0x4390f3 = new _0x3c1b08();
                        break;
                    case 0x1:
                        _0x4390f3 = new _0x4d8541();
                        break;
                    case 0x2:
                        _0x4390f3 = new _0x3a6c30();
                        break;
                    case 0x3:
                        _0x4390f3 = new _0x1daa58();
                        break;
                    case 0x7:
                        _0x4390f3 = new _0x5266b9();
                        break;
                    default:
                        throw 'ShuriKenPa' + 'rticle3D:u' + 'nknown\x20sha' + 'pe\x20type.';
                    }
                    this['_parseModu' + 'le'](_0x4390f3, _0x4518f9), _0x558b36['shape'] = _0x4390f3;
                }
                var _0x482590 = _0x40069e['velocityOv' + 'erLifetime'];
                if (_0x482590) {
                    var _0x474241, _0x5c2a6e = _0x482590['velocity'];
                    switch (_0x5c2a6e['type']) {
                    case 0x0:
                        var _0x441d67 = _0x5c2a6e['constant'];
                        _0x474241 = _0x1c4583['createByCo' + 'nstant'](_0x441d67 ? new _0x43b358(_0x441d67[0x0], _0x441d67[0x1], _0x441d67[0x2]) : new _0x43b358(0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x474241 = _0x1c4583['createByGr' + 'adient'](this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientX']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientY']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientZ']));
                        break;
                    case 0x2:
                        var _0x41a120 = _0x5c2a6e['constantMi' + 'n'], _0x2337c0 = _0x5c2a6e['constantMa' + 'x'];
                        _0x474241 = _0x1c4583['createByRa' + 'ndomTwoCon' + 'stant'](_0x41a120 ? new _0x43b358(_0x41a120[0x0], _0x41a120[0x1], _0x41a120[0x2]) : new _0x43b358(0x0, 0x0, 0x0), _0x2337c0 ? new _0x43b358(_0x2337c0[0x0], _0x2337c0[0x1], _0x2337c0[0x2]) : new _0x43b358(0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x474241 = _0x1c4583['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientXM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientXM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientYM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientYM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientZM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x5c2a6e['gradientZM' + 'ax']));
                    }
                    var _0x494305 = new _0x40a7f3(_0x474241);
                    this['_parseModu' + 'le'](_0x494305, _0x482590), _0x558b36['velocityOv' + 'erLifetime'] = _0x494305;
                }
                var _0x328a78 = _0x40069e['colorOverL' + 'ifetime'];
                if (_0x328a78) {
                    var _0x56532f, _0x2649c4 = _0x328a78['color'];
                    switch (_0x2649c4['type']) {
                    case 0x0:
                        var _0x47af0b = _0x2649c4['constant'];
                        _0x56532f = _0x1d4320['createByCo' + 'nstant'](_0x47af0b ? new _0x4cec8f(_0x47af0b[0x0], _0x47af0b[0x1], _0x47af0b[0x2], _0x47af0b[0x3]) : new _0x4cec8f(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x56532f = _0x1d4320['createByGr' + 'adient'](this['_initParti' + 'cleColor'](_0x2649c4['gradient']));
                        break;
                    case 0x2:
                        var _0x5aeef3 = _0x2649c4['constantMi' + 'n'], _0x47ba18 = _0x2649c4['constantMa' + 'x'];
                        _0x56532f = _0x1d4320['createByRa' + 'ndomTwoCon' + 'stant'](_0x5aeef3 ? new _0x4cec8f(_0x5aeef3[0x0], _0x5aeef3[0x1], _0x5aeef3[0x2], _0x5aeef3[0x3]) : new _0x4cec8f(0x0, 0x0, 0x0, 0x0), _0x5aeef3 ? new _0x4cec8f(_0x47ba18[0x0], _0x47ba18[0x1], _0x47ba18[0x2], _0x47ba18[0x3]) : new _0x4cec8f(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x56532f = _0x1d4320['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleColor'](_0x2649c4['gradientMi' + 'n']), this['_initParti' + 'cleColor'](_0x2649c4['gradientMa' + 'x']));
                    }
                    var _0xa77745 = new _0xd8e040(_0x56532f);
                    this['_parseModu' + 'le'](_0xa77745, _0x328a78), _0x558b36['colorOverL' + 'ifetime'] = _0xa77745;
                }
                var _0x4b50d7 = _0x40069e['sizeOverLi' + 'fetime'];
                if (_0x4b50d7) {
                    var _0x34b90d, _0x1fb8d2 = _0x4b50d7['size'];
                    switch (_0x1fb8d2['type']) {
                    case 0x0:
                        _0x34b90d = _0x1fb8d2['separateAx' + 'es'] ? _0x42e41d['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleSize'](_0x1fb8d2['gradientX']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientY']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientZ'])) : _0x42e41d['createByGr' + 'adient'](this['_initParti' + 'cleSize'](_0x1fb8d2['gradient']));
                        break;
                    case 0x1:
                        if (_0x1fb8d2['separateAx' + 'es']) {
                            var _0x328c39 = _0x1fb8d2['constantMi' + 'nSeparate'], _0x3d41c6 = _0x1fb8d2['constantMa' + 'xSeparate'];
                            _0x34b90d = _0x42e41d['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x328c39 ? new _0x43b358(_0x328c39[0x0], _0x328c39[0x1], _0x328c39[0x2]) : new _0x43b358(0x0, 0x0, 0x0), _0x3d41c6 ? new _0x43b358(_0x3d41c6[0x0], _0x3d41c6[0x1], _0x3d41c6[0x2]) : new _0x43b358(0x0, 0x0, 0x0));
                        } else
                            _0x34b90d = _0x42e41d['createByRa' + 'ndomTwoCon' + 'stant'](_0x1fb8d2['constantMi' + 'n'] || 0x0, _0x1fb8d2['constantMa' + 'x'] || 0x0);
                        break;
                    case 0x2:
                        _0x34b90d = _0x1fb8d2['separateAx' + 'es'] ? _0x42e41d['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_initParti' + 'cleSize'](_0x1fb8d2['gradientXM' + 'in']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientYM' + 'in']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientZM' + 'in']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientXM' + 'ax']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientYM' + 'ax']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientZM' + 'ax'])) : _0x42e41d['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleSize'](_0x1fb8d2['gradientMi' + 'n']), this['_initParti' + 'cleSize'](_0x1fb8d2['gradientMa' + 'x']));
                    }
                    var _0x22ac48 = new _0x23977d(_0x34b90d);
                    this['_parseModu' + 'le'](_0x22ac48, _0x4b50d7), _0x558b36['sizeOverLi' + 'fetime'] = _0x22ac48;
                }
                var _0x319d37 = _0x40069e['rotationOv' + 'erLifetime'];
                if (_0x319d37) {
                    var _0x45d7f3, _0x30e7a6 = _0x319d37['angularVel' + 'ocity'];
                    switch (_0x30e7a6['type']) {
                    case 0x0:
                        if (_0x30e7a6['separateAx' + 'es']) {
                            var _0x5cf28c = _0x30e7a6['constantSe' + 'parate'];
                            _0x45d7f3 = _0x232103['createByCo' + 'nstantSepa' + 'rate'](_0x5cf28c ? new _0x43b358(_0x5cf28c[0x0], _0x5cf28c[0x1], _0x5cf28c[0x2]) : new _0x43b358(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x45d7f3 = _0x232103['createByCo' + 'nstant'](_0x30e7a6['constant'] || Math['PI'] / 0x4);
                        break;
                    case 0x1:
                        _0x45d7f3 = _0x30e7a6['separateAx' + 'es'] ? _0x232103['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleRotatio' + 'n'](_0x30e7a6['gradientX']), this['_initParti' + 'cleRotatio' + 'n'](_0x30e7a6['gradientY']), this['_initParti' + 'cleRotatio' + 'n'](_0x30e7a6['gradientZ'])) : _0x232103['createByGr' + 'adient'](this['_initParti' + 'cleRotatio' + 'n'](_0x30e7a6['gradient']));
                        break;
                    case 0x2:
                        if (_0x30e7a6['separateAx' + 'es']) {
                            var _0x338d77 = _0x30e7a6['constantMi' + 'nSeparate'], _0x36f2e5 = _0x30e7a6['constantMa' + 'xSeparate'];
                            _0x45d7f3 = _0x232103['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x338d77 ? new _0x43b358(_0x338d77[0x0], _0x338d77[0x1], _0x338d77[0x2]) : new _0x43b358(0x0, 0x0, 0x0), _0x36f2e5 ? new _0x43b358(_0x36f2e5[0x0], _0x36f2e5[0x1], _0x36f2e5[0x2]) : new _0x43b358(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x45d7f3 = _0x232103['createByRa' + 'ndomTwoCon' + 'stant'](_0x30e7a6['constantMi' + 'n'] || 0x0, _0x30e7a6['constantMa' + 'x'] || Math['PI'] / 0x4);
                        break;
                    case 0x3:
                        _0x30e7a6['separateAx' + 'es'] || (_0x45d7f3 = _0x232103['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleRotatio' + 'n'](_0x30e7a6['gradientMi' + 'n']), this['_initParti' + 'cleRotatio' + 'n'](_0x30e7a6['gradientMa' + 'x'])));
                    }
                    var _0x546579 = new _0x5c5745(_0x45d7f3);
                    this['_parseModu' + 'le'](_0x546579, _0x319d37), _0x558b36['rotationOv' + 'erLifetime'] = _0x546579;
                }
                var _0x346e01 = _0x40069e['textureShe' + 'etAnimatio' + 'n'];
                if (_0x346e01) {
                    var _0x46a6dd, _0x35225f = _0x346e01['frame'];
                    switch (_0x35225f['type']) {
                    case 0x0:
                        _0x46a6dd = _0x197328['createByCo' + 'nstant'](_0x35225f['constant']);
                        break;
                    case 0x1:
                        _0x46a6dd = _0x197328['createByOv' + 'erTime'](this['_initParti' + 'cleFrame'](_0x35225f['overTime']));
                        break;
                    case 0x2:
                        _0x46a6dd = _0x197328['createByRa' + 'ndomTwoCon' + 'stant'](_0x35225f['constantMi' + 'n'], _0x35225f['constantMa' + 'x']);
                        break;
                    case 0x3:
                        _0x46a6dd = _0x197328['createByRa' + 'ndomTwoOve' + 'rTime'](this['_initParti' + 'cleFrame'](_0x35225f['overTimeMi' + 'n']), this['_initParti' + 'cleFrame'](_0x35225f['overTimeMa' + 'x']));
                    }
                    var _0x5ea386, _0x30e895 = _0x346e01['startFrame'];
                    switch (_0x30e895['type']) {
                    case 0x0:
                        _0x5ea386 = _0x300d3f['createByCo' + 'nstant'](_0x30e895['constant']);
                        break;
                    case 0x1:
                        _0x5ea386 = _0x300d3f['createByRa' + 'ndomTwoCon' + 'stant'](_0x30e895['constantMi' + 'n'], _0x30e895['constantMa' + 'x']);
                    }
                    var _0xbe3b31 = new _0x4fc898(_0x46a6dd, _0x5ea386);
                    this['_parseModu' + 'le'](_0xbe3b31, _0x346e01), _0x558b36['textureShe' + 'etAnimatio' + 'n'] = _0xbe3b31;
                }
            } else
                this['_parseOld'](_0x40069e);
        }
        ['_activeHie' + 'rarchy'](_0x5397f3) {
            super['_activeHie' + 'rarchy'](_0x5397f3), this['particleSy' + 'stem']['playOnAwak' + 'e'] && this['particleSy' + 'stem']['play']();
        }
        ['_inActiveH' + 'ierarchy'](_0x1986de) {
            super['_inActiveH' + 'ierarchy'](_0x1986de), this['particleSy' + 'stem']['isAlive'] && this['particleSy' + 'stem']['simulate'](0x0, !0x0);
        }
        ['_cloneTo'](_0x38cfd0, _0x197333, _0x5b6c15) {
            var _0x4922f3 = _0x38cfd0, _0x2df032 = _0x4922f3['_particleS' + 'ystem'];
            this['_particleS' + 'ystem']['cloneTo'](_0x2df032);
            var _0x4a8860 = _0x4922f3['_render'], _0x4391f1 = this['_render'];
            _0x4a8860['sharedMate' + 'rials'] = _0x4391f1['sharedMate' + 'rials'], _0x4a8860['enable'] = _0x4391f1['enable'], _0x4a8860['renderMode'] = _0x4391f1['renderMode'], _0x4a8860['mesh'] = _0x4391f1['mesh'], _0x4a8860['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = _0x4391f1['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'], _0x4a8860['stretchedB' + 'illboardSp' + 'eedScale'] = _0x4391f1['stretchedB' + 'illboardSp' + 'eedScale'], _0x4a8860['stretchedB' + 'illboardLe' + 'ngthScale'] = _0x4391f1['stretchedB' + 'illboardLe' + 'ngthScale'], _0x4a8860['sortingFud' + 'ge'] = _0x4391f1['sortingFud' + 'ge'], super['_cloneTo'](_0x38cfd0, _0x197333, _0x5b6c15);
        }
        ['destroy'](_0x544ebd = !0x0) {
            this['destroyed'] || (super['destroy'](_0x544ebd), this['_particleS' + 'ystem']['destroy'](), this['_particleS' + 'ystem'] = null);
        }
        ['_create']() {
            return new _0x568b78();
        }
        ['_parseOld'](_0x476950) {
            const _0x33dc48 = Math['PI'] / 0xb4;
            var _0x27a4f0, _0x4c1e0c, _0x53dbae, _0x518bae = this['particleRe' + 'nderer'], _0x310d23 = _0x476950['material'];
            _0x310d23 && (_0x53dbae = _0x2247ad['Loader']['getRes'](_0x310d23['path'])), _0x518bae['sharedMate' + 'rial'] = _0x53dbae;
            var _0x4ab3a1 = _0x476950['meshPath'];
            _0x4ab3a1 && (_0x518bae['mesh'] = _0x2247ad['Loader']['getRes'](_0x4ab3a1)), _0x518bae['renderMode'] = _0x476950['renderMode'], _0x518bae['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = _0x476950['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'], _0x518bae['stretchedB' + 'illboardSp' + 'eedScale'] = _0x476950['stretchedB' + 'illboardSp' + 'eedScale'], _0x518bae['stretchedB' + 'illboardLe' + 'ngthScale'] = _0x476950['stretchedB' + 'illboardLe' + 'ngthScale'], _0x518bae['sortingFud' + 'ge'] = _0x476950['sortingFud' + 'ge'] ? _0x476950['sortingFud' + 'ge'] : 0x0;
            var _0x3bfc0c = this['particleSy' + 'stem'];
            _0x3bfc0c['isPerforma' + 'nceMode'] = _0x476950['isPerforma' + 'nceMode'], _0x3bfc0c['duration'] = _0x476950['duration'], _0x3bfc0c['looping'] = _0x476950['looping'], _0x3bfc0c['prewarm'] = _0x476950['prewarm'], _0x3bfc0c['startDelay' + 'Type'] = _0x476950['startDelay' + 'Type'], _0x3bfc0c['startDelay'] = _0x476950['startDelay'], _0x3bfc0c['startDelay' + 'Min'] = _0x476950['startDelay' + 'Min'], _0x3bfc0c['startDelay' + 'Max'] = _0x476950['startDelay' + 'Max'], _0x3bfc0c['startLifet' + 'imeType'] = _0x476950['startLifet' + 'imeType'], _0x3bfc0c['startLifet' + 'imeConstan' + 't'] = _0x476950['startLifet' + 'imeConstan' + 't'], _0x3bfc0c['startLifeT' + 'imeGradien' + 't'] = _0x568b78['_initStart' + 'Life'](_0x476950['startLifet' + 'imeGradien' + 't']), _0x3bfc0c['startLifet' + 'imeConstan' + 'tMin'] = _0x476950['startLifet' + 'imeConstan' + 'tMin'], _0x3bfc0c['startLifet' + 'imeConstan' + 'tMax'] = _0x476950['startLifet' + 'imeConstan' + 'tMax'], _0x3bfc0c['startLifeT' + 'imeGradien' + 'tMin'] = _0x568b78['_initStart' + 'Life'](_0x476950['startLifet' + 'imeGradien' + 'tMin']), _0x3bfc0c['startLifeT' + 'imeGradien' + 'tMax'] = _0x568b78['_initStart' + 'Life'](_0x476950['startLifet' + 'imeGradien' + 'tMax']), _0x3bfc0c['startSpeed' + 'Type'] = _0x476950['startSpeed' + 'Type'], _0x3bfc0c['startSpeed' + 'Constant'] = _0x476950['startSpeed' + 'Constant'], _0x3bfc0c['startSpeed' + 'ConstantMi' + 'n'] = _0x476950['startSpeed' + 'ConstantMi' + 'n'], _0x3bfc0c['startSpeed' + 'ConstantMa' + 'x'] = _0x476950['startSpeed' + 'ConstantMa' + 'x'], _0x3bfc0c['threeDStar' + 'tSize'] = _0x476950['threeDStar' + 'tSize'], _0x3bfc0c['startSizeT' + 'ype'] = _0x476950['startSizeT' + 'ype'], _0x3bfc0c['startSizeC' + 'onstant'] = _0x476950['startSizeC' + 'onstant'];
            var _0x845b9a = _0x476950['startSizeC' + 'onstantSep' + 'arate'], _0x50f7e6 = _0x3bfc0c['startSizeC' + 'onstantSep' + 'arate'];
            _0x50f7e6['x'] = _0x845b9a[0x0], _0x50f7e6['y'] = _0x845b9a[0x1], _0x50f7e6['z'] = _0x845b9a[0x2], _0x3bfc0c['startSizeC' + 'onstantMin'] = _0x476950['startSizeC' + 'onstantMin'], _0x3bfc0c['startSizeC' + 'onstantMax'] = _0x476950['startSizeC' + 'onstantMax'];
            var _0x389576 = _0x476950['startSizeC' + 'onstantMin' + 'Separate'], _0x25e4b2 = _0x3bfc0c['startSizeC' + 'onstantMin' + 'Separate'];
            _0x25e4b2['x'] = _0x389576[0x0], _0x25e4b2['y'] = _0x389576[0x1], _0x25e4b2['z'] = _0x389576[0x2];
            var _0x456278 = _0x476950['startSizeC' + 'onstantMax' + 'Separate'], _0xb15024 = _0x3bfc0c['startSizeC' + 'onstantMax' + 'Separate'];
            _0xb15024['x'] = _0x456278[0x0], _0xb15024['y'] = _0x456278[0x1], _0xb15024['z'] = _0x456278[0x2], _0x3bfc0c['threeDStar' + 'tRotation'] = _0x476950['threeDStar' + 'tRotation'], _0x3bfc0c['startRotat' + 'ionType'] = _0x476950['startRotat' + 'ionType'], _0x3bfc0c['startRotat' + 'ionConstan' + 't'] = _0x476950['startRotat' + 'ionConstan' + 't'] * _0x33dc48;
            var _0x150d05 = _0x476950['startRotat' + 'ionConstan' + 'tSeparate'], _0x35049a = _0x3bfc0c['startRotat' + 'ionConstan' + 'tSeparate'];
            _0x35049a['x'] = _0x150d05[0x0] * _0x33dc48, _0x35049a['y'] = _0x150d05[0x1] * _0x33dc48, _0x35049a['z'] = _0x150d05[0x2] * _0x33dc48, _0x3bfc0c['startRotat' + 'ionConstan' + 'tMin'] = _0x476950['startRotat' + 'ionConstan' + 'tMin'] * _0x33dc48, _0x3bfc0c['startRotat' + 'ionConstan' + 'tMax'] = _0x476950['startRotat' + 'ionConstan' + 'tMax'] * _0x33dc48;
            var _0x3147d0 = _0x476950['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'], _0x410489 = _0x3bfc0c['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'];
            _0x410489['x'] = _0x3147d0[0x0] * _0x33dc48, _0x410489['y'] = _0x3147d0[0x1] * _0x33dc48, _0x410489['z'] = _0x3147d0[0x2] * _0x33dc48;
            var _0x57516d = _0x476950['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'], _0x14bfda = _0x3bfc0c['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'];
            _0x14bfda['x'] = _0x57516d[0x0] * _0x33dc48, _0x14bfda['y'] = _0x57516d[0x1] * _0x33dc48, _0x14bfda['z'] = _0x57516d[0x2] * _0x33dc48, _0x3bfc0c['randomizeR' + 'otationDir' + 'ection'] = _0x476950['randomizeR' + 'otationDir' + 'ection'], _0x3bfc0c['startColor' + 'Type'] = _0x476950['startColor' + 'Type'];
            var _0x204400 = _0x476950['startColor' + 'Constant'], _0x3dd318 = _0x3bfc0c['startColor' + 'Constant'];
            _0x3dd318['x'] = _0x204400[0x0], _0x3dd318['y'] = _0x204400[0x1], _0x3dd318['z'] = _0x204400[0x2], _0x3dd318['w'] = _0x204400[0x3];
            var _0xadea5d = _0x476950['startColor' + 'ConstantMi' + 'n'], _0x3fe7a5 = _0x3bfc0c['startColor' + 'ConstantMi' + 'n'];
            _0x3fe7a5['x'] = _0xadea5d[0x0], _0x3fe7a5['y'] = _0xadea5d[0x1], _0x3fe7a5['z'] = _0xadea5d[0x2], _0x3fe7a5['w'] = _0xadea5d[0x3];
            var _0x4f5247 = _0x476950['startColor' + 'ConstantMa' + 'x'], _0x31999c = _0x3bfc0c['startColor' + 'ConstantMa' + 'x'];
            _0x31999c['x'] = _0x4f5247[0x0], _0x31999c['y'] = _0x4f5247[0x1], _0x31999c['z'] = _0x4f5247[0x2], _0x31999c['w'] = _0x4f5247[0x3], _0x3bfc0c['gravityMod' + 'ifier'] = _0x476950['gravityMod' + 'ifier'], _0x3bfc0c['simulation' + 'Space'] = _0x476950['simulation' + 'Space'], void 0x0 !== _0x476950['simulation' + 'Speed'] && (_0x3bfc0c['simulation' + 'Speed'] = _0x476950['simulation' + 'Speed']), _0x3bfc0c['scaleMode'] = _0x476950['scaleMode'], _0x3bfc0c['playOnAwak' + 'e'] = _0x476950['playOnAwak' + 'e'], _0x3bfc0c['maxParticl' + 'es'] = _0x476950['maxParticl' + 'es'];
            var _0x3c6c90 = _0x476950['autoRandom' + 'Seed'];
            null != _0x3c6c90 && (_0x3bfc0c['autoRandom' + 'Seed'] = _0x3c6c90);
            var _0x14b10b = _0x476950['randomSeed'];
            null != _0x14b10b && (_0x3bfc0c['randomSeed'][0x0] = _0x14b10b);
            var _0x372f4e = _0x476950['emission'], _0x3a056d = _0x3bfc0c['emission'];
            if (_0x372f4e) {
                _0x3a056d['emissionRa' + 'te'] = _0x372f4e['emissionRa' + 'te'];
                var _0x571857 = _0x372f4e['bursts'];
                if (_0x571857)
                    for (_0x27a4f0 = 0x0, _0x4c1e0c = _0x571857['length']; _0x27a4f0 < _0x4c1e0c; _0x27a4f0++) {
                        var _0x30ad52 = _0x571857[_0x27a4f0];
                        _0x3a056d['addBurst'](new _0xe7056e(_0x30ad52['time'], _0x30ad52['min'], _0x30ad52['max']));
                    }
                _0x3a056d['enable'] = _0x372f4e['enable'];
            } else
                _0x3a056d['enable'] = !0x1;
            var _0x349739 = _0x476950['shape'];
            if (_0x349739) {
                var _0x22c367;
                switch (_0x349739['shapeType']) {
                case 0x0:
                    var _0x13ccc0;
                    _0x22c367 = _0x13ccc0 = new _0x3c1b08(), _0x13ccc0['radius'] = _0x349739['sphereRadi' + 'us'], _0x13ccc0['emitFromSh' + 'ell'] = _0x349739['sphereEmit' + 'FromShell'], _0x13ccc0['randomDire' + 'ction'] = _0x349739['sphereRand' + 'omDirectio' + 'n'];
                    break;
                case 0x1:
                    var _0x1ad84e;
                    _0x22c367 = _0x1ad84e = new _0x4d8541(), _0x1ad84e['radius'] = _0x349739['hemiSphere' + 'Radius'], _0x1ad84e['emitFromSh' + 'ell'] = _0x349739['hemiSphere' + 'EmitFromSh' + 'ell'], _0x1ad84e['randomDire' + 'ction'] = _0x349739['hemiSphere' + 'RandomDire' + 'ction'];
                    break;
                case 0x2:
                    var _0x57bf01;
                    _0x22c367 = _0x57bf01 = new _0x3a6c30(), _0x57bf01['angle'] = _0x349739['coneAngle'] * _0x33dc48, _0x57bf01['radius'] = _0x349739['coneRadius'], _0x57bf01['length'] = _0x349739['coneLength'], _0x57bf01['emitType'] = _0x349739['coneEmitTy' + 'pe'], _0x57bf01['randomDire' + 'ction'] = _0x349739['coneRandom' + 'Direction'];
                    break;
                case 0x3:
                    var _0x3c652c;
                    _0x22c367 = _0x3c652c = new _0x1daa58(), _0x3c652c['x'] = _0x349739['boxX'], _0x3c652c['y'] = _0x349739['boxY'], _0x3c652c['z'] = _0x349739['boxZ'], _0x3c652c['randomDire' + 'ction'] = _0x349739['boxRandomD' + 'irection'];
                    break;
                case 0x7:
                    var _0x3f83cc;
                    _0x22c367 = _0x3f83cc = new _0x5266b9(), _0x3f83cc['radius'] = _0x349739['circleRadi' + 'us'], _0x3f83cc['arc'] = _0x349739['circleArc'] * _0x33dc48, _0x3f83cc['emitFromEd' + 'ge'] = _0x349739['circleEmit' + 'FromEdge'], _0x3f83cc['randomDire' + 'ction'] = _0x349739['circleRand' + 'omDirectio' + 'n'];
                    break;
                default:
                    var _0xedc983;
                    _0x22c367 = _0xedc983 = new _0x5266b9(), _0xedc983['radius'] = _0x349739['circleRadi' + 'us'], _0xedc983['arc'] = _0x349739['circleArc'] * _0x33dc48, _0xedc983['emitFromEd' + 'ge'] = _0x349739['circleEmit' + 'FromEdge'], _0xedc983['randomDire' + 'ction'] = _0x349739['circleRand' + 'omDirectio' + 'n'];
                }
                _0x22c367['enable'] = _0x349739['enable'], _0x3bfc0c['shape'] = _0x22c367;
            }
            var _0x40d69d = _0x476950['velocityOv' + 'erLifetime'];
            if (_0x40d69d) {
                var _0x56a5ef, _0x1681f8 = _0x40d69d['velocity'];
                switch (_0x1681f8['type']) {
                case 0x0:
                    var _0x5c712f = _0x1681f8['constant'];
                    _0x56a5ef = _0x1c4583['createByCo' + 'nstant'](new _0x43b358(_0x5c712f[0x0], _0x5c712f[0x1], _0x5c712f[0x2]));
                    break;
                case 0x1:
                    _0x56a5ef = _0x1c4583['createByGr' + 'adient'](this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientX']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientY']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientZ']));
                    break;
                case 0x2:
                    var _0x2d56bd = _0x1681f8['constantMi' + 'n'], _0x3861fa = _0x1681f8['constantMa' + 'x'];
                    _0x56a5ef = _0x1c4583['createByRa' + 'ndomTwoCon' + 'stant'](new _0x43b358(_0x2d56bd[0x0], _0x2d56bd[0x1], _0x2d56bd[0x2]), new _0x43b358(_0x3861fa[0x0], _0x3861fa[0x1], _0x3861fa[0x2]));
                    break;
                case 0x3:
                    _0x56a5ef = _0x1c4583['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientXM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientXM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientYM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientYM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientZM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x1681f8['gradientZM' + 'ax']));
                }
                var _0x5cab81 = new _0x40a7f3(_0x56a5ef);
                _0x5cab81['space'] = _0x40d69d['space'], _0x5cab81['enable'] = _0x40d69d['enable'], _0x3bfc0c['velocityOv' + 'erLifetime'] = _0x5cab81;
            }
            var _0x12e52a = _0x476950['colorOverL' + 'ifetime'];
            if (_0x12e52a) {
                var _0x1c913b, _0x5379e6 = _0x12e52a['color'];
                switch (_0x5379e6['type']) {
                case 0x0:
                    var _0x4f4d0a = _0x5379e6['constant'];
                    _0x1c913b = _0x1d4320['createByCo' + 'nstant'](new _0x4cec8f(_0x4f4d0a[0x0], _0x4f4d0a[0x1], _0x4f4d0a[0x2], _0x4f4d0a[0x3]));
                    break;
                case 0x1:
                    _0x1c913b = _0x1d4320['createByGr' + 'adient'](this['_initParti' + 'cleColor'](_0x5379e6['gradient']));
                    break;
                case 0x2:
                    var _0x3185eb = _0x5379e6['constantMi' + 'n'], _0x4c6805 = _0x5379e6['constantMa' + 'x'];
                    _0x1c913b = _0x1d4320['createByRa' + 'ndomTwoCon' + 'stant'](new _0x4cec8f(_0x3185eb[0x0], _0x3185eb[0x1], _0x3185eb[0x2], _0x3185eb[0x3]), new _0x4cec8f(_0x4c6805[0x0], _0x4c6805[0x1], _0x4c6805[0x2], _0x4c6805[0x3]));
                    break;
                case 0x3:
                    _0x1c913b = _0x1d4320['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleColor'](_0x5379e6['gradientMi' + 'n']), this['_initParti' + 'cleColor'](_0x5379e6['gradientMa' + 'x']));
                }
                var _0x5d6639 = new _0xd8e040(_0x1c913b);
                _0x5d6639['enable'] = _0x12e52a['enable'], _0x3bfc0c['colorOverL' + 'ifetime'] = _0x5d6639;
            }
            var _0x5b513a = _0x476950['sizeOverLi' + 'fetime'];
            if (_0x5b513a) {
                var _0x3fe24d, _0x4133aa = _0x5b513a['size'];
                switch (_0x4133aa['type']) {
                case 0x0:
                    _0x3fe24d = _0x4133aa['separateAx' + 'es'] ? _0x42e41d['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleSize'](_0x4133aa['gradientX']), this['_initParti' + 'cleSize'](_0x4133aa['gradientY']), this['_initParti' + 'cleSize'](_0x4133aa['gradientZ'])) : _0x42e41d['createByGr' + 'adient'](this['_initParti' + 'cleSize'](_0x4133aa['gradient']));
                    break;
                case 0x1:
                    if (_0x4133aa['separateAx' + 'es']) {
                        var _0x15068d = _0x4133aa['constantMi' + 'nSeparate'], _0x2ad6cf = _0x4133aa['constantMa' + 'xSeparate'];
                        _0x3fe24d = _0x42e41d['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](new _0x43b358(_0x15068d[0x0], _0x15068d[0x1], _0x15068d[0x2]), new _0x43b358(_0x2ad6cf[0x0], _0x2ad6cf[0x1], _0x2ad6cf[0x2]));
                    } else
                        _0x3fe24d = _0x42e41d['createByRa' + 'ndomTwoCon' + 'stant'](_0x4133aa['constantMi' + 'n'], _0x4133aa['constantMa' + 'x']);
                    break;
                case 0x2:
                    _0x3fe24d = _0x4133aa['separateAx' + 'es'] ? _0x42e41d['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_initParti' + 'cleSize'](_0x4133aa['gradientXM' + 'in']), this['_initParti' + 'cleSize'](_0x4133aa['gradientYM' + 'in']), this['_initParti' + 'cleSize'](_0x4133aa['gradientZM' + 'in']), this['_initParti' + 'cleSize'](_0x4133aa['gradientXM' + 'ax']), this['_initParti' + 'cleSize'](_0x4133aa['gradientYM' + 'ax']), this['_initParti' + 'cleSize'](_0x4133aa['gradientZM' + 'ax'])) : _0x42e41d['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleSize'](_0x4133aa['gradientMi' + 'n']), this['_initParti' + 'cleSize'](_0x4133aa['gradientMa' + 'x']));
                }
                var _0x47074d = new _0x23977d(_0x3fe24d);
                _0x47074d['enable'] = _0x5b513a['enable'], _0x3bfc0c['sizeOverLi' + 'fetime'] = _0x47074d;
            }
            var _0x2f4035 = _0x476950['rotationOv' + 'erLifetime'];
            if (_0x2f4035) {
                var _0x4f0330, _0x5c0005 = _0x2f4035['angularVel' + 'ocity'];
                switch (_0x5c0005['type']) {
                case 0x0:
                    if (_0x5c0005['separateAx' + 'es']) {
                        var _0x185ebc = _0x5c0005['constantSe' + 'parate'];
                        _0x4f0330 = _0x232103['createByCo' + 'nstantSepa' + 'rate'](new _0x43b358(_0x185ebc[0x0] * _0x33dc48, _0x185ebc[0x1] * _0x33dc48, _0x185ebc[0x2] * _0x33dc48));
                    } else
                        _0x4f0330 = _0x232103['createByCo' + 'nstant'](_0x5c0005['constant'] * _0x33dc48);
                    break;
                case 0x1:
                    _0x4f0330 = _0x5c0005['separateAx' + 'es'] ? _0x232103['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleRotatio' + 'n'](_0x5c0005['gradientX']), this['_initParti' + 'cleRotatio' + 'n'](_0x5c0005['gradientY']), this['_initParti' + 'cleRotatio' + 'n'](_0x5c0005['gradientZ'])) : _0x232103['createByGr' + 'adient'](this['_initParti' + 'cleRotatio' + 'n'](_0x5c0005['gradient']));
                    break;
                case 0x2:
                    if (_0x5c0005['separateAx' + 'es']) {
                        var _0x3db2f1 = _0x5c0005['constantMi' + 'nSeparate'], _0x4e19f0 = _0x5c0005['constantMa' + 'xSeparate'];
                        _0x4f0330 = _0x232103['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](new _0x43b358(_0x3db2f1[0x0] * _0x33dc48, _0x3db2f1[0x1] * _0x33dc48, _0x3db2f1[0x2] * _0x33dc48), new _0x43b358(_0x4e19f0[0x0] * _0x33dc48, _0x4e19f0[0x1] * _0x33dc48, _0x4e19f0[0x2] * _0x33dc48));
                    } else
                        _0x4f0330 = _0x232103['createByRa' + 'ndomTwoCon' + 'stant'](_0x5c0005['constantMi' + 'n'] * _0x33dc48, _0x5c0005['constantMa' + 'x'] * _0x33dc48);
                    break;
                case 0x3:
                    _0x5c0005['separateAx' + 'es'] || (_0x4f0330 = _0x232103['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleRotatio' + 'n'](_0x5c0005['gradientMi' + 'n']), this['_initParti' + 'cleRotatio' + 'n'](_0x5c0005['gradientMa' + 'x'])));
                }
                var _0x70583c = new _0x5c5745(_0x4f0330);
                _0x70583c['enable'] = _0x2f4035['enable'], _0x3bfc0c['rotationOv' + 'erLifetime'] = _0x70583c;
            }
            var _0x474e57 = _0x476950['textureShe' + 'etAnimatio' + 'n'];
            if (_0x474e57) {
                var _0x19557c, _0x59b740 = _0x474e57['frame'];
                switch (_0x59b740['type']) {
                case 0x0:
                    _0x19557c = _0x197328['createByCo' + 'nstant'](_0x59b740['constant']);
                    break;
                case 0x1:
                    _0x19557c = _0x197328['createByOv' + 'erTime'](this['_initParti' + 'cleFrame'](_0x59b740['overTime']));
                    break;
                case 0x2:
                    _0x19557c = _0x197328['createByRa' + 'ndomTwoCon' + 'stant'](_0x59b740['constantMi' + 'n'], _0x59b740['constantMa' + 'x']);
                    break;
                case 0x3:
                    _0x19557c = _0x197328['createByRa' + 'ndomTwoOve' + 'rTime'](this['_initParti' + 'cleFrame'](_0x59b740['overTimeMi' + 'n']), this['_initParti' + 'cleFrame'](_0x59b740['overTimeMa' + 'x']));
                }
                var _0x2c30b3, _0x12d2d7 = _0x474e57['startFrame'];
                switch (_0x12d2d7['type']) {
                case 0x0:
                    _0x2c30b3 = _0x300d3f['createByCo' + 'nstant'](_0x12d2d7['constant']);
                    break;
                case 0x1:
                    _0x2c30b3 = _0x300d3f['createByRa' + 'ndomTwoCon' + 'stant'](_0x12d2d7['constantMi' + 'n'], _0x12d2d7['constantMa' + 'x']);
                }
                var _0x50adcd = new _0x4fc898(_0x19557c, _0x2c30b3);
                _0x50adcd['enable'] = _0x474e57['enable'];
                var _0x9ef9ab = _0x474e57['tiles'];
                _0x50adcd['tiles'] = new _0x2d45ed(_0x9ef9ab[0x0], _0x9ef9ab[0x1]), _0x50adcd['type'] = _0x474e57['type'], _0x50adcd['randomRow'] = _0x474e57['randomRow'];
                var _0x13063c = _0x474e57['rowIndex'];
                void 0x0 !== _0x13063c && (_0x50adcd['rowIndex'] = _0x13063c), _0x50adcd['cycles'] = _0x474e57['cycles'], _0x3bfc0c['textureShe' + 'etAnimatio' + 'n'] = _0x50adcd;
            }
        }
        ['_initParti' + 'cleColor'](_0x5958af) {
            var _0x3e4884 = new _0x17aae7(0x4, 0x4);
            if (_0x5958af) {
                var _0x38fd98, _0x2db2a3, _0x116acb = _0x5958af['alphas'];
                if (_0x116acb)
                    for (_0x38fd98 = 0x0, _0x2db2a3 = _0x116acb['length']; _0x38fd98 < _0x2db2a3; _0x38fd98++) {
                        0x3 == _0x38fd98 && _0x2db2a3 > 0x4 && (_0x38fd98 = _0x2db2a3 - 0x1, console['warn']('GradientDa' + 'taColor\x20wa' + 'rning:alph' + 'a\x20data\x20len' + 'gth\x20is\x20lar' + 'ge\x20than\x204,' + '\x20will\x20igno' + 're\x20the\x20mid' + 'dle\x20data.'));
                        var _0x2941a8 = _0x116acb[_0x38fd98];
                        _0x3e4884['addColorAl' + 'pha'](_0x2941a8['key'], _0x2941a8['value']);
                    }
                else
                    _0x3e4884['addColorAl' + 'pha'](0x0, 0x1), _0x3e4884['addColorAl' + 'pha'](0x1, 0x1);
                var _0x486b2b = _0x5958af['rgbs'];
                if (_0x486b2b)
                    for (_0x38fd98 = 0x0, _0x2db2a3 = _0x486b2b['length']; _0x38fd98 < _0x2db2a3; _0x38fd98++) {
                        0x3 == _0x38fd98 && _0x2db2a3 > 0x4 && (_0x38fd98 = _0x2db2a3 - 0x1);
                        var _0x15aee1 = _0x486b2b[_0x38fd98], _0x1d4ccf = _0x15aee1['value'];
                        _0x3e4884['addColorRG' + 'B'](_0x15aee1['key'], new _0x151df0(_0x1d4ccf[0x0], _0x1d4ccf[0x1], _0x1d4ccf[0x2], 0x1));
                    }
                else
                    _0x3e4884['addColorRG' + 'B'](0x0, new _0x151df0(0x1, 0x1, 0x1, 0x1)), _0x3e4884['addColorRG' + 'B'](0x1, new _0x151df0(0x1, 0x1, 0x1, 0x1));
            } else
                _0x3e4884['addColorAl' + 'pha'](0x0, 0x1), _0x3e4884['addColorAl' + 'pha'](0x1, 0x1), _0x3e4884['addColorRG' + 'B'](0x0, new _0x151df0(0x1, 0x1, 0x1, 0x1)), _0x3e4884['addColorRG' + 'B'](0x1, new _0x151df0(0x1, 0x1, 0x1, 0x1));
            return _0x3e4884;
        }
        ['_initParti' + 'cleFrame'](_0x1a6474) {
            var _0x13b3fd = new _0x4cee63();
            if (_0x1a6474)
                for (var _0x1bbcb9 = _0x1a6474['frames'], _0x1def95 = 0x0, _0x4e5a35 = _0x1bbcb9['length']; _0x1def95 < _0x4e5a35; _0x1def95++) {
                    var _0x1f2acd = _0x1bbcb9[_0x1def95];
                    _0x13b3fd['add'](_0x1f2acd['key'], _0x1f2acd['value']);
                }
            else
                _0x13b3fd['add'](0x0, 0x0), _0x13b3fd['add'](0x1, 0x1);
            return _0x13b3fd;
        }
        static ['_initStart' + 'Life'](_0x323cd6) {
            for (var _0xfb2759 = new _0x16ac95(), _0x134e95 = _0x323cd6['startLifet' + 'imes'], _0x2cf96d = 0x0, _0x3740bc = _0x134e95['length']; _0x2cf96d < _0x3740bc; _0x2cf96d++) {
                var _0x41759f = _0x134e95[_0x2cf96d];
                _0xfb2759['add'](_0x41759f['key'], _0x41759f['value']);
            }
            return _0xfb2759;
        }
        ['_initParti' + 'cleVelocit' + 'y'](_0x92eeb) {
            for (var _0x13a359 = new _0x16ac95(), _0x2dc226 = _0x92eeb['velocitys'], _0x144005 = 0x0, _0x138ec4 = _0x2dc226['length']; _0x144005 < _0x138ec4; _0x144005++) {
                var _0xa717bf = _0x2dc226[_0x144005];
                _0x13a359['add'](_0xa717bf['key'], _0xa717bf['value']);
            }
            return _0x13a359;
        }
        ['_initParti' + 'cleSize'](_0xa25614) {
            var _0x2cd5eb = new _0x16ac95();
            if (_0xa25614)
                for (var _0x16d402 = _0xa25614['sizes'], _0x333d0f = 0x0, _0x27bee6 = _0x16d402['length']; _0x333d0f < _0x27bee6; _0x333d0f++) {
                    var _0x35ba4c = _0x16d402[_0x333d0f];
                    _0x2cd5eb['add'](_0x35ba4c['key'], _0x35ba4c['value']);
                }
            else
                _0x2cd5eb['add'](0x0, 0x0), _0x2cd5eb['add'](0x1, 0x1);
            return _0x2cd5eb;
        }
        ['_initParti' + 'cleRotatio' + 'n'](_0x44a4a2) {
            for (var _0x42657c = new _0x16ac95(), _0x3368d9 = _0x44a4a2['angularVel' + 'ocitys'], _0x464112 = 0x0, _0x4a5608 = _0x3368d9['length']; _0x464112 < _0x4a5608; _0x464112++) {
                var _0x1e645a = _0x3368d9[_0x464112];
                _0x42657c['add'](_0x1e645a['key'], _0x1e645a['value'] / 0xb4 * Math['PI']);
            }
            return _0x42657c;
        }
    }
    class _0x101967 {
    }
    class _0x29cfd6 extends _0x428a80 {
        constructor(_0xddc349) {
            super(_0xddc349), this['_bones'] = [], this['_skinnedDa' + 'taLoopMark' + 's'] = [], this['_localBoun' + 'ds'] = new _0x252754(_0x43b358['_ZERO'], _0x43b358['_ZERO']), this['_cacheAnim' + 'ationNode'] = [];
        }
        get ['localBound' + 's']() {
            return this['_localBoun' + 'ds'];
        }
        set ['localBound' + 's'](_0x2010f0) {
            this['_localBoun' + 'ds'] = _0x2010f0;
        }
        get ['rootBone']() {
            return this['_cacheRoot' + 'Bone'];
        }
        set ['rootBone'](_0x531273) {
            this['_cacheRoot' + 'Bone'] != _0x531273 && (this['_cacheRoot' + 'Bone'] ? this['_cacheRoot' + 'Bone']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_owner']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), _0x531273 ? _0x531273['transform']['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_owner']['transform']['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'Bone'] = _0x531273, this['_onWorldMa' + 'tNeedChang' + 'e'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE']));
        }
        get ['bones']() {
            return this['_bones'];
        }
        ['_computeSk' + 'innedData']() {
            if (this['_cacheMesh'] && this['_cacheAvat' + 'ar'] || this['_cacheMesh'] && !this['_cacheAvat' + 'ar']) {
                for (var _0x181cce = this['_cacheMesh']['_inverseBi' + 'ndPoses'], _0x225e85 = this['_cacheMesh']['_skinnedMa' + 'trixCaches'], _0x5a222e = 0x0, _0x45dfa0 = this['_cacheMesh']['subMeshCou' + 'nt']; _0x5a222e < _0x45dfa0; _0x5a222e++)
                    for (var _0x75e9ff = this['_cacheMesh']['getSubMesh'](_0x5a222e)['_boneIndic' + 'esList'], _0x43558a = this['_skinnedDa' + 'ta'][_0x5a222e], _0x17401c = 0x0, _0x1ba241 = _0x75e9ff['length']; _0x17401c < _0x1ba241; _0x17401c++) {
                        var _0x1b69f9 = _0x75e9ff[_0x17401c];
                        this['_computeSu' + 'bSkinnedDa' + 'ta'](_0x181cce, _0x1b69f9, _0x43558a[_0x17401c], _0x225e85);
                    }
            }
        }
        ['_computeSu' + 'bSkinnedDa' + 'ta'](_0x4e7f0c, _0x532f8e, _0x31f55f, _0x5dc65d) {
            for (var _0x54a27b = 0x0, _0x5cc2af = _0x532f8e['length']; _0x54a27b < _0x5cc2af; _0x54a27b++) {
                var _0x1512f7 = _0x532f8e[_0x54a27b];
                if (this['_skinnedDa' + 'taLoopMark' + 's'][_0x1512f7] === _0x2247ad['Stat']['loopCount']) {
                    for (var _0x3caa3f = _0x5dc65d[_0x1512f7], _0x1204eb = this['_skinnedDa' + 'ta'][_0x3caa3f['subMeshInd' + 'ex']][_0x3caa3f['batchIndex']], _0x3876b0 = 0x10 * _0x3caa3f['batchBoneI' + 'ndex'], _0x3e6762 = 0x10 * _0x54a27b, _0x163ed5 = 0x0; _0x163ed5 < 0x10; _0x163ed5++)
                        _0x31f55f[_0x3e6762 + _0x163ed5] = _0x1204eb[_0x3876b0 + _0x163ed5];
                } else
                    this['_cacheAvat' + 'ar'] ? _0x101904['_mulMatrix' + 'Array'](this['_cacheAnim' + 'ationNode'][_0x1512f7]['transform']['getWorldMa' + 'trix'](), _0x4e7f0c[_0x1512f7]['elements'], 0x0, _0x31f55f, 0x10 * _0x54a27b) : _0x101904['_mulMatrix' + 'Array'](this['_bones'][_0x1512f7]['transform']['worldMatri' + 'x']['elements'], _0x4e7f0c[_0x1512f7]['elements'], 0x0, _0x31f55f, 0x10 * _0x54a27b), this['_skinnedDa' + 'taLoopMark' + 's'][_0x1512f7] = _0x2247ad['Stat']['loopCount'];
            }
        }
        ['_onWorldMa' + 'tNeedChang' + 'e'](_0x3c12ac) {
            this['_boundsCha' + 'nge'] = !0x0, this['_octreeNod' + 'e'] && (this['_cacheAvat' + 'ar'] ? -0x1 === this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this) : (_0x3c12ac &= _0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE']) && -0x1 === this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this));
        }
        ['_createRen' + 'derElement']() {
            return new _0x978ca7();
        }
        ['_onMeshCha' + 'nge'](_0xfb6a53) {
            super['_onMeshCha' + 'nge'](_0xfb6a53), this['_cacheMesh'] = _0xfb6a53;
            var _0x22c50b = _0xfb6a53['subMeshCou' + 'nt'];
            this['_skinnedDa' + 'ta'] = [], this['_skinnedDa' + 'taLoopMark' + 's']['length'] = _0xfb6a53['_inverseBi' + 'ndPoses']['length'];
            for (var _0x46db50 = 0x0; _0x46db50 < _0x22c50b; _0x46db50++)
                for (var _0x5c5fcf = _0xfb6a53['getSubMesh'](_0x46db50)['_boneIndic' + 'esList'], _0x452439 = _0x5c5fcf['length'], _0x55118c = this['_skinnedDa' + 'ta'][_0x46db50] = [], _0x3e6f56 = 0x0; _0x3e6f56 < _0x452439; _0x3e6f56++)
                    _0x55118c[_0x3e6f56] = new Float32Array(0x10 * _0x5c5fcf[_0x3e6f56]['length']);
            this['_cacheAvat' + 'ar'] && _0xfb6a53 && this['_getCacheA' + 'nimationNo' + 'des']();
        }
        ['_setCacheA' + 'nimator'](_0x2ef422) {
            this['_cacheAnim' + 'ator'] = _0x2ef422, this['_shaderVal' + 'ues']['addDefine'](_0x101967['SHADERDEFI' + 'NE_BONE']), this['_setRootNo' + 'de']();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            if (this['_cacheAvat' + 'ar']) {
                if (this['_cacheAnim' + 'ator'] && this['_rootBone']) {
                    var _0x2a7c47 = _0x29cfd6['_tempMatri' + 'x4x4'];
                    _0x101904['matrix4x4M' + 'ultiplyMFM'](this['_cacheAnim' + 'ator']['owner']['transform']['worldMatri' + 'x'], this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['getWorldMa' + 'trix'](), _0x2a7c47), this['_localBoun' + 'ds']['_tranform'](_0x2a7c47, this['_bounds']);
                } else
                    super['_calculate' + 'BoundingBo' + 'x']();
            } else
                this['_cacheRoot' + 'Bone'] ? this['_localBoun' + 'ds']['_tranform'](this['_cacheRoot' + 'Bone']['transform']['worldMatri' + 'x'], this['_bounds']) : this['_localBoun' + 'ds']['_tranform'](this['_owner']['transform']['worldMatri' + 'x'], this['_bounds']);
            if (_0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x596a85 = this['_bounds']['getMin'](), _0xe3a250 = this['_bounds']['getMax'](), _0x27f9e5 = _0x5da8ae['_cullingBu' + 'ffer'];
                _0x27f9e5[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x596a85['x'], _0x27f9e5[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x596a85['y'], _0x27f9e5[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x596a85['z'], _0x27f9e5[this['_cullingBu' + 'fferIndex'] + 0x4] = _0xe3a250['x'], _0x27f9e5[this['_cullingBu' + 'fferIndex'] + 0x5] = _0xe3a250['y'], _0x27f9e5[this['_cullingBu' + 'fferIndex'] + 0x6] = _0xe3a250['z'];
            }
        }
        ['_renderUpd' + 'ate'](_0x57c2ca, _0x3125c8) {
            if (this['_cacheAnim' + 'ator']) {
                if (this['_computeSk' + 'innedData'](), this['_cacheAvat' + 'ar']) {
                    var _0x4246a9 = this['_cacheAnim' + 'ator']['owner']['_transform'];
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x4246a9['worldMatri' + 'x']);
                } else
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x334e9d['DEFAULT']);
            } else
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['WORLDMATRI' + 'X'], _0x3125c8['worldMatri' + 'x']);
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x1a14f9, _0x3e8578) {
            var _0x466aca = _0x1a14f9['projection' + 'ViewMatrix'];
            if (this['_cacheAnim' + 'ator']) {
                if (this['_cacheAvat' + 'ar']) {
                    var _0x3c45f5 = this['_cacheAnim' + 'ator']['owner']['_transform'];
                    _0x334e9d['multiply'](_0x466aca, _0x3c45f5['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
                } else
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], _0x466aca);
            } else
                _0x334e9d['multiply'](_0x466aca, _0x3e8578['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
        }
        ['_destroy']() {
            super['_destroy'](), this['_cacheAvat' + 'ar'] ? this['_cacheRoot' + 'AnimationN' + 'ode'] && this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_cacheRoot' + 'Bone'] ? !this['_cacheRoot' + 'Bone']['destroyed'] && this['_cacheRoot' + 'Bone']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_owner'] && !this['_owner']['destroyed'] && this['_owner']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
        }
        get ['bounds']() {
            return (this['_boundsCha' + 'nge'] || this['_cacheAvat' + 'ar']) && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = !0x1), this['_bounds'];
        }
        ['_setRootBo' + 'ne'](_0x1a2f99) {
            this['_rootBone'] = _0x1a2f99, this['_setRootNo' + 'de']();
        }
        ['_setRootNo' + 'de']() {
            var _0x16f7f5;
            _0x16f7f5 = this['_cacheAnim' + 'ator'] && this['_rootBone'] && this['_cacheAvat' + 'ar'] ? this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'][this['_rootBone']] : null, this['_cacheRoot' + 'AnimationN' + 'ode'] != _0x16f7f5 && (this['_onWorldMa' + 'tNeedChang' + 'e'](_0x17c9f4['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x17c9f4['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x17c9f4['TRANSFORM_' + 'WORLDSCALE']), this['_owner']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'AnimationN' + 'ode'] && this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['off'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), _0x16f7f5 && _0x16f7f5['transform']['on'](_0x2247ad['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'AnimationN' + 'ode'] = _0x16f7f5);
        }
        ['_getCacheA' + 'nimationNo' + 'des']() {
            var _0x3ad1ba = this['_cacheMesh']['_boneNames'], _0x2fe1e6 = this['_cacheMesh']['_inverseBi' + 'ndPoses']['length'];
            if (_0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                this['_cacheAnim' + 'ationNodeI' + 'ndices'] = new Uint16Array(_0x2fe1e6);
                var _0x412922 = this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'];
                for (_0x3a8559 = 0x0; _0x3a8559 < _0x2fe1e6; _0x3a8559++) {
                    var _0x244744 = _0x412922[_0x3ad1ba[_0x3a8559]];
                    this['_cacheAnim' + 'ationNodeI' + 'ndices'][_0x3a8559] = _0x244744 ? _0x244744['_worldMatr' + 'ixIndex'] : 0x0;
                }
            } else {
                this['_cacheAnim' + 'ationNode']['length'] = _0x2fe1e6;
                for (var _0x4ae23f = this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'], _0x3a8559 = 0x0; _0x3a8559 < _0x2fe1e6; _0x3a8559++) {
                    var _0x55be81 = _0x4ae23f[_0x3ad1ba[_0x3a8559]];
                    this['_cacheAnim' + 'ationNode'][_0x3a8559] = _0x55be81;
                }
            }
        }
        ['_setCacheA' + 'vatar'](_0x570999) {
            this['_cacheAvat' + 'ar'] !== _0x570999 && (this['_cacheMesh'] ? (this['_cacheAvat' + 'ar'] = _0x570999, _0x570999 && (this['_shaderVal' + 'ues']['addDefine'](_0x101967['SHADERDEFI' + 'NE_BONE']), this['_getCacheA' + 'nimationNo' + 'des']())) : this['_cacheAvat' + 'ar'] = _0x570999, this['_setRootNo' + 'de']());
        }
        ['_computeSu' + 'bSkinnedDa' + 'taNative'](_0x3d6641, _0x29ded5, _0x4eea7a, _0x1f07f5, _0x5c4dc6) {
            _0x2247ad['LayaGL']['instance']['computeSub' + 'SkinnedDat' + 'a'](_0x3d6641, _0x29ded5, _0x4eea7a, _0x1f07f5, _0x5c4dc6);
        }
        ['_computeSk' + 'innedDataF' + 'orNative']() {
            if (this['_cacheMesh'] && this['_cacheAvat' + 'ar'] || this['_cacheMesh'] && !this['_cacheAvat' + 'ar']) {
                for (var _0x547268 = this['_cacheMesh']['_inverseBi' + 'ndPoses'], _0x25af45 = this['_cacheMesh']['_skinnedMa' + 'trixCaches'], _0x13519b = 0x0, _0x4aec1f = this['_cacheMesh']['subMeshCou' + 'nt']; _0x13519b < _0x4aec1f; _0x13519b++)
                    for (var _0xde0fc6 = this['_cacheMesh']['getSubMesh'](_0x13519b)['_boneIndic' + 'esList'], _0x71926e = this['_skinnedDa' + 'ta'][_0x13519b], _0x1b7830 = 0x0, _0x157019 = _0xde0fc6['length']; _0x1b7830 < _0x157019; _0x1b7830++) {
                        var _0x1d255f = _0xde0fc6[_0x1b7830];
                        this['_cacheAvat' + 'ar'] && _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? this['_computeSu' + 'bSkinnedDa' + 'taNative'](this['_cacheAnim' + 'ator']['_animation' + 'NodeWorldM' + 'atrixs'], this['_cacheAnim' + 'ationNodeI' + 'ndices'], this['_cacheMesh']['_inverseBi' + 'ndPosesBuf' + 'fer'], _0x1d255f, _0x71926e[_0x1b7830]) : this['_computeSu' + 'bSkinnedDa' + 'ta'](_0x547268, _0x1d255f, _0x71926e[_0x1b7830], _0x25af45);
                    }
            }
        }
    }
    _0x29cfd6['_tempMatri' + 'x4x4'] = new _0x334e9d();
    class _0x279241 extends _0x333e4a {
        constructor(_0x4be809 = null, _0x4fb1b6 = null) {
            super(_0x4fb1b6), this['_meshFilte' + 'r'] = new _0x1a6b8b(this), this['_render'] = new _0x29cfd6(this), _0x4be809 && (this['_meshFilte' + 'r']['sharedMesh'] = _0x4be809);
        }
        static ['__init__']() {
            _0x101967['SHADERDEFI' + 'NE_BONE'] = _0x38ffce['getDefineB' + 'yName']('BONE');
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['skinnedMes' + 'hRenderer']() {
            return this['_render'];
        }
        ['_parse'](_0x287519, _0x56f16a) {
            super['_parse'](_0x287519, _0x56f16a);
            var _0x49cc1b = this['skinnedMes' + 'hRenderer'], _0x463358 = _0x287519['lightmapIn' + 'dex'];
            null != _0x463358 && (_0x49cc1b['lightmapIn' + 'dex'] = _0x463358);
            var _0x29ffb3, _0x2c9dc2 = _0x287519['lightmapSc' + 'aleOffset'];
            if (_0x2c9dc2 && (_0x49cc1b['lightmapSc' + 'aleOffset'] = new _0x4cec8f(_0x2c9dc2[0x0], _0x2c9dc2[0x1], _0x2c9dc2[0x2], _0x2c9dc2[0x3])), _0x29ffb3 = _0x287519['meshPath']) {
                var _0x4257ac = _0x2247ad['Loader']['getRes'](_0x29ffb3);
                _0x4257ac && (this['meshFilter']['sharedMesh'] = _0x4257ac);
            }
            var _0x4bc32d = _0x287519['materials'];
            if (_0x4bc32d) {
                var _0x199093 = _0x49cc1b['sharedMate' + 'rials'], _0x533cd1 = _0x4bc32d['length'];
                _0x199093['length'] = _0x533cd1;
                for (var _0x34374e = 0x0; _0x34374e < _0x533cd1; _0x34374e++)
                    _0x199093[_0x34374e] = _0x2247ad['Loader']['getRes'](_0x4bc32d[_0x34374e]['path']);
                _0x49cc1b['sharedMate' + 'rials'] = _0x199093;
            }
            var _0xf140a8 = _0x287519['boundBox'], _0x1db78f = _0xf140a8['min'], _0x3948c8 = _0xf140a8['max'];
            if (_0x49cc1b['localBound' + 's']['setMin'](new _0x43b358(_0x1db78f[0x0], _0x1db78f[0x1], _0x1db78f[0x2])), _0x49cc1b['localBound' + 's']['setMax'](new _0x43b358(_0x3948c8[0x0], _0x3948c8[0x1], _0x3948c8[0x2])), _0x56f16a) {
                var _0x433e3d = _0x287519['rootBone'];
                _0x49cc1b['rootBone'] = _0x56f16a[_0x433e3d];
                var _0x11264c, _0x1f68ca = _0x287519['bones'];
                for (_0x34374e = 0x0, _0x11264c = _0x1f68ca['length']; _0x34374e < _0x11264c; _0x34374e++)
                    _0x49cc1b['bones']['push'](_0x56f16a[_0x1f68ca[_0x34374e]]);
            } else
                _0x287519['rootBone'] && _0x49cc1b['_setRootBo' + 'ne'](_0x287519['rootBone']);
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x3ea513) {
            super['_changeHie' + 'rarchyAnim' + 'ator'](_0x3ea513), this['skinnedMes' + 'hRenderer']['_setCacheA' + 'nimator'](_0x3ea513);
        }
        ['_changeAni' + 'matorAvata' + 'r'](_0x1d4f89) {
            this['skinnedMes' + 'hRenderer']['_setCacheA' + 'vatar'](_0x1d4f89);
        }
        ['_cloneTo'](_0x266069, _0x125a15, _0x454a08) {
            var _0x790f8c = _0x266069;
            _0x790f8c['meshFilter']['sharedMesh'] = this['meshFilter']['sharedMesh'];
            var _0x37dff6 = this['_render'], _0x11d9d3 = _0x790f8c['_render'];
            _0x11d9d3['enable'] = _0x37dff6['enable'], _0x11d9d3['sharedMate' + 'rials'] = _0x37dff6['sharedMate' + 'rials'], _0x11d9d3['castShadow'] = _0x37dff6['castShadow'];
            var _0x2f28d6 = _0x37dff6['lightmapSc' + 'aleOffset'];
            _0x2f28d6 && (_0x11d9d3['lightmapSc' + 'aleOffset'] = _0x2f28d6['clone']()), _0x11d9d3['receiveSha' + 'dow'] = _0x37dff6['receiveSha' + 'dow'], _0x11d9d3['sortingFud' + 'ge'] = _0x37dff6['sortingFud' + 'ge'], _0x11d9d3['_rootBone'] = _0x37dff6['_rootBone'];
            var _0x30bb07 = _0x37dff6['bones'], _0x313c14 = _0x11d9d3['bones'], _0xe6db4b = _0x30bb07['length'];
            _0x313c14['length'] = _0xe6db4b;
            var _0x1eb8d0 = _0x37dff6['rootBone'];
            if (_0x1eb8d0) {
                var _0x2e0600 = _0x101904['_getHierar' + 'chyPath'](_0x125a15, _0x1eb8d0, _0x279241['_tempArray' + '0']);
                _0x11d9d3['rootBone'] = _0x2e0600 ? _0x101904['_getNodeBy' + 'HierarchyP' + 'ath'](_0x454a08, _0x2e0600) : _0x1eb8d0;
            }
            for (var _0x48d69e = 0x0; _0x48d69e < _0x30bb07['length']; _0x48d69e++)
                _0x2e0600 = _0x101904['_getHierar' + 'chyPath'](_0x125a15, _0x30bb07[_0x48d69e], _0x279241['_tempArray' + '0']), _0x313c14[_0x48d69e] = _0x2e0600 ? _0x101904['_getNodeBy' + 'HierarchyP' + 'ath'](_0x454a08, _0x2e0600) : _0x30bb07[_0x48d69e];
            var _0x270cd2 = _0x37dff6['localBound' + 's'];
            _0x270cd2 && _0x270cd2['cloneTo'](_0x11d9d3['localBound' + 's']), super['_cloneTo'](_0x266069, _0x125a15, _0x454a08);
        }
        ['destroy'](_0x3d9f99 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x3d9f99), this['_meshFilte' + 'r']['destroy']());
        }
        ['_create']() {
            return new _0x279241();
        }
    }
    _0x279241['_tempArray' + '0'] = [], _0x279241['BONES'] = _0x38ffce['propertyNa' + 'meToID']('u_Bones');
    class _0x3769bc extends _0x57c0e0 {
        constructor() {
            super(), this['setShaderN' + 'ame']('Trail'), this['_color'] = new _0x4cec8f(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0x3769bc['TINTCOLOR'], new _0x4cec8f(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x3769bc['RENDERMODE' + '_ALPHABLEN' + 'DED'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x3769bc['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x38ffce['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x3769bc['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x38ffce['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x3769bc['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x38ffce['getDefineB' + 'yName']('ADDTIVEFOG');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x32b25e) {
            this['_color']['x'] = _0x32b25e, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x10992c) {
            this['_color']['y'] = _0x10992c, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x3cec0e) {
            this['_color']['z'] = _0x3cec0e, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x2fa54a) {
            this['_color']['w'] = _0x2fa54a, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x1a7957) {
            var _0x525bf3 = this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET']);
            _0x525bf3['x'] = _0x1a7957, this['tilingOffs' + 'et'] = _0x525bf3;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x38dd6f) {
            var _0x4cead9 = this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET']);
            _0x4cead9['y'] = _0x38dd6f, this['tilingOffs' + 'et'] = _0x4cead9;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x5ba4e0) {
            var _0x368ba3 = this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET']);
            _0x368ba3['z'] = _0x5ba4e0, this['tilingOffs' + 'et'] = _0x368ba3;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x1f23bf) {
            var _0x2d2888 = this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET']);
            _0x2d2888['w'] = _0x1f23bf, this['tilingOffs' + 'et'] = _0x2d2888;
        }
        set ['renderMode'](_0x445f11) {
            switch (_0x445f11) {
            case _0x3769bc['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_NONE'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x3769bc['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x3769bc['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x57c0e0['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x4ba527['CULL_NONE'], this['blend'] = _0x4ba527['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x4ba527['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x4ba527['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x4ba527['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3769bc['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('TrailMater' + 'ial\x20:\x20rend' + 'erMode\x20val' + 'ue\x20error.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x14469a) {
            this['_TintColor' + 'R'] = _0x14469a;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x3e9400) {
            this['_TintColor' + 'G'] = _0x3e9400;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x1a61ef) {
            this['_TintColor' + 'B'] = _0x1a61ef;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x26d72c) {
            this['_TintColor' + 'A'] = _0x26d72c;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TINTCOLOR']);
        }
        set ['color'](_0x90cbba) {
            this['_shaderVal' + 'ues']['setVector'](_0x3769bc['TINTCOLOR'], _0x90cbba);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3769bc['MAINTEXTUR' + 'E']);
        }
        set ['texture'](_0x45417b) {
            _0x45417b ? this['_shaderVal' + 'ues']['addDefine'](_0x3769bc['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3769bc['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3769bc['MAINTEXTUR' + 'E'], _0x45417b);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x109910) {
            this['_MainTex_S' + 'TX'] = _0x109910;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x4e5dfc) {
            this['_MainTex_S' + 'TY'] = _0x4e5dfc;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x326cc9) {
            this['_MainTex_S' + 'TZ'] = _0x326cc9;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x53ad0f) {
            this['_MainTex_S' + 'TW'] = _0x53ad0f;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3769bc['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x42a11a) {
            _0x42a11a && (0x1 != _0x42a11a['x'] || 0x1 != _0x42a11a['y'] || 0x0 != _0x42a11a['z'] || 0x0 != _0x42a11a['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x3769bc['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3769bc['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x3769bc['TILINGOFFS' + 'ET'], _0x42a11a);
        }
        set ['depthWrite'](_0xe76de5) {
            this['_shaderVal' + 'ues']['setBool'](_0x3769bc['DEPTH_WRIT' + 'E'], _0xe76de5);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x3769bc['DEPTH_WRIT' + 'E']);
        }
        set ['cull'](_0x44b45b) {
            this['_shaderVal' + 'ues']['setInt'](_0x3769bc['CULL'], _0x44b45b);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3769bc['CULL']);
        }
        set ['blend'](_0x28a26c) {
            this['_shaderVal' + 'ues']['setInt'](_0x3769bc['BLEND'], _0x28a26c);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3769bc['BLEND']);
        }
        set ['blendSrc'](_0x4999cf) {
            this['_shaderVal' + 'ues']['setInt'](_0x3769bc['BLEND_SRC'], _0x4999cf);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3769bc['BLEND_SRC']);
        }
        set ['blendDst'](_0x508de2) {
            this['_shaderVal' + 'ues']['setInt'](_0x3769bc['BLEND_DST'], _0x508de2);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3769bc['BLEND_DST']);
        }
        set ['depthTest'](_0x586340) {
            this['_shaderVal' + 'ues']['setInt'](_0x3769bc['DEPTH_TEST'], _0x586340);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3769bc['DEPTH_TEST']);
        }
        ['clone']() {
            var _0x40ad16 = new _0x3769bc();
            return this['cloneTo'](_0x40ad16), _0x40ad16;
        }
    }
    _0x3769bc['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x0, _0x3769bc['RENDERMODE' + '_ADDTIVE'] = 0x1, _0x3769bc['MAINTEXTUR' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('u_MainText' + 'ure'), _0x3769bc['TINTCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_MainColo' + 'r'), _0x3769bc['TILINGOFFS' + 'ET'] = _0x38ffce['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x3769bc['CULL'] = _0x38ffce['propertyNa' + 'meToID']('s_Cull'), _0x3769bc['BLEND'] = _0x38ffce['propertyNa' + 'meToID']('s_Blend'), _0x3769bc['BLEND_SRC'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendSrc'), _0x3769bc['BLEND_DST'] = _0x38ffce['propertyNa' + 'meToID']('s_BlendDst'), _0x3769bc['DEPTH_TEST'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x3769bc['DEPTH_WRIT' + 'E'] = _0x38ffce['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x465467 {
    }
    _0x465467['Stretch'] = 0x0, _0x465467['Tile'] = 0x1, (_0x3abe9d = _0xc55b22['TrailAlign' + 'ment'] || (_0xc55b22['TrailAlign' + 'ment'] = {}))[_0x3abe9d['View'] = 0x0] = 'View', _0x3abe9d[_0x3abe9d['TransformZ'] = 0x1] = 'TransformZ';
    class _0x1f1c8d {
        static get ['vertexDecl' + 'aration1']() {
            return _0x1f1c8d['_vertexDec' + 'laration1'];
        }
        static get ['vertexDecl' + 'aration2']() {
            return _0x1f1c8d['_vertexDec' + 'laration2'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x1f1c8d['_vertexDec' + 'laration1'];
        }
        static ['__init__']() {
            _0x1f1c8d['_vertexDec' + 'laration1'] = new _0x2ca0b5(0x20, [
                new _0x50e0bd(0x0, _0x163e87['Vector3'], _0x1f1c8d['TRAIL_POSI' + 'TION0']),
                new _0x50e0bd(0xc, _0x163e87['Vector3'], _0x1f1c8d['TRAIL_OFFS' + 'ETVECTOR']),
                new _0x50e0bd(0x18, _0x163e87['Single'], _0x1f1c8d['TRAIL_TIME' + '0']),
                new _0x50e0bd(0x1c, _0x163e87['Single'], _0x1f1c8d['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'])
            ]), _0x1f1c8d['_vertexDec' + 'laration2'] = new _0x2ca0b5(0x14, [
                new _0x50e0bd(0x0, _0x163e87['Single'], _0x1f1c8d['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X']),
                new _0x50e0bd(0x4, _0x163e87['Color'], _0x1f1c8d['TRAIL_COLO' + 'R'])
            ]);
        }
    }
    _0x1f1c8d['TRAIL_POSI' + 'TION0'] = 0x0, _0x1f1c8d['TRAIL_OFFS' + 'ETVECTOR'] = 0x1, _0x1f1c8d['TRAIL_TIME' + '0'] = 0x2, _0x1f1c8d['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'] = 0x3, _0x1f1c8d['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X'] = 0x4, _0x1f1c8d['TRAIL_COLO' + 'R'] = 0x5;
    class _0x2f03cd extends _0x25a854 {
        constructor(_0x515ade) {
            super(), this['_floatCoun' + 'tPerVertic' + 'es1'] = 0x8, this['_floatCoun' + 'tPerVertic' + 'es2'] = 0x5, this['_increaseS' + 'egementCou' + 'nt'] = 0x10, this['_activeInd' + 'ex'] = 0x0, this['_endIndex'] = 0x0, this['_needAddFi' + 'rstVertex'] = !0x1, this['_isTempEnd' + 'Vertex'] = !0x1, this['_vertices1'] = null, this['_vertices2'] = null, this['_lastFixed' + 'VertexPosi' + 'tion'] = new _0x43b358(), this['_bufferSta' + 'te'] = new _0x145b1e(), this['tmpColor'] = new _0x151df0(), this['_disappear' + 'BoundsMode'] = !0x1, this['_owner'] = _0x515ade, this['_segementC' + 'ount'] = this['_increaseS' + 'egementCou' + 'nt'], this['_resizeDat' + 'a'](this['_segementC' + 'ount'], this['_bufferSta' + 'te']);
            var _0x1b8c36 = this['_owner']['_owner']['trailRende' + 'rer']['bounds'], _0x60cbd2 = this['_owner']['_owner']['transform']['position'];
            _0x1b8c36['setMin'](_0x60cbd2), _0x1b8c36['setMax'](_0x60cbd2), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']();
        }
        ['_resizeDat' + 'a'](_0xe8ea86, _0x4a0690) {
            this['_subBirthT' + 'ime'] = new Float32Array(_0xe8ea86), this['_subDistan' + 'ce'] = new Float64Array(_0xe8ea86);
            var _0x54b99b = _0x2247ad['LayaGL']['instance'], _0x1d0fce = 0x2 * _0xe8ea86, _0x1e88e7 = _0x1f1c8d['vertexDecl' + 'aration1'], _0x1e0fcf = _0x1f1c8d['vertexDecl' + 'aration2'], _0x5949c7 = [], _0x52ae9e = _0x1d0fce * _0x1e88e7['vertexStri' + 'de'], _0x54dedc = _0x1d0fce * _0x1e0fcf['vertexStri' + 'de'], _0x579d97 = _0x52ae9e + _0x54dedc;
            this['_vertices1'] = new Float32Array(_0x1d0fce * this['_floatCoun' + 'tPerVertic' + 'es1']), this['_vertices2'] = new Float32Array(_0x1d0fce * this['_floatCoun' + 'tPerVertic' + 'es2']), this['_vertexBuf' + 'fer1'] = new _0x26d078(_0x52ae9e, _0x54b99b['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer1']['vertexDecl' + 'aration'] = _0x1e88e7, this['_vertexBuf' + 'fer2'] = new _0x26d078(_0x54dedc, _0x54b99b['DYNAMIC_DR' + 'AW'], !0x1), this['_vertexBuf' + 'fer2']['vertexDecl' + 'aration'] = _0x1e0fcf, _0x5949c7['push'](this['_vertexBuf' + 'fer1']), _0x5949c7['push'](this['_vertexBuf' + 'fer2']), _0x4a0690['bind'](), _0x4a0690['applyVerte' + 'xBuffers'](_0x5949c7), _0x4a0690['unBind'](), _0x2247ad['Resource']['_addMemory'](_0x579d97, _0x579d97);
        }
        ['_resetData']() {
            var _0x429b53 = this['_endIndex'] - this['_activeInd' + 'ex'], _0x2060fe = new Float32Array(this['_vertices1']['buffer'], 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x429b53), _0x5d3a2c = new Float32Array(this['_vertices2']['buffer'], 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * _0x429b53), _0x3bc68f = new Float64Array(this['_subDistan' + 'ce']['buffer'], 0x8 * this['_activeInd' + 'ex'], _0x429b53), _0x28d7e4 = new Float32Array(this['_subBirthT' + 'ime']['buffer'], 0x4 * this['_activeInd' + 'ex'], _0x429b53);
            if (_0x429b53 === this['_segementC' + 'ount']) {
                this['_vertexBuf' + 'fer1']['destroy'](), this['_vertexBuf' + 'fer2']['destroy']();
                var _0xb1ebb7 = this['_vertexBuf' + 'fer1']['_byteLengt' + 'h'] + this['_vertexBuf' + 'fer2']['_byteLengt' + 'h'];
                _0x2247ad['Resource']['_addMemory'](-_0xb1ebb7, -_0xb1ebb7), this['_segementC' + 'ount'] += this['_increaseS' + 'egementCou' + 'nt'], this['_resizeDat' + 'a'](this['_segementC' + 'ount'], this['_bufferSta' + 'te']);
            }
            this['_vertices1']['set'](_0x2060fe, 0x0), this['_vertices2']['set'](_0x5d3a2c, 0x0), this['_subDistan' + 'ce']['set'](_0x3bc68f, 0x0), this['_subBirthT' + 'ime']['set'](_0x28d7e4, 0x0), this['_endIndex'] = _0x429b53, this['_activeInd' + 'ex'] = 0x0, this['_vertexBuf' + 'fer1']['setData'](this['_vertices1']['buffer'], 0x0, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x429b53 * 0x4), this['_vertexBuf' + 'fer2']['setData'](this['_vertices2']['buffer'], 0x0, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * _0x429b53 * 0x4);
        }
        ['_updateTra' + 'il'](_0xe7a2b5, _0x541351, _0x6b14f) {
            _0x43b358['equals'](_0x541351, _0x6b14f) || (this['_endIndex'] - this['_activeInd' + 'ex'] == 0x0 ? this['_addTrailB' + 'yFirstPosi' + 'tion'](_0xe7a2b5, _0x6b14f) : this['_addTrailB' + 'yNextPosit' + 'ion'](_0xe7a2b5, _0x6b14f));
        }
        ['_addTrailB' + 'yFirstPosi' + 'tion'](_0x2b60eb, _0x3c8583) {
            this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_subDistan' + 'ce'][this['_endIndex']] = 0x0, this['_subBirthT' + 'ime'][this['_endIndex']] = this['_owner']['_curtime'], this['_endIndex']++, _0x3c8583['cloneTo'](this['_lastFixed' + 'VertexPosi' + 'tion']), this['_needAddFi' + 'rstVertex'] = !0x0;
        }
        ['_addTrailB' + 'yNextPosit' + 'ion'](_0x13469d, _0x1e6596) {
            var _0x2afeea = _0x2f03cd['_tempVecto' + 'r30'], _0x2ae34a = _0x2f03cd['_tempVecto' + 'r31'];
            switch (this['_owner']['alignment']) {
            case _0xc55b22['TrailAlign' + 'ment']['View']:
                var _0x4b464b = _0x13469d['viewMatrix'];
                _0x43b358['transformC' + 'oordinate'](_0x1e6596, _0x4b464b, _0x2f03cd['_tempVecto' + 'r33']), _0x43b358['transformC' + 'oordinate'](this['_lastFixed' + 'VertexPosi' + 'tion'], _0x4b464b, _0x2f03cd['_tempVecto' + 'r34']), _0x43b358['subtract'](_0x2f03cd['_tempVecto' + 'r33'], _0x2f03cd['_tempVecto' + 'r34'], _0x2afeea), _0x43b358['cross'](_0x2f03cd['_tempVecto' + 'r33'], _0x2afeea, _0x2ae34a);
                break;
            case _0xc55b22['TrailAlign' + 'ment']['TransformZ']:
                _0x43b358['subtract'](_0x1e6596, this['_lastFixed' + 'VertexPosi' + 'tion'], _0x2afeea);
                var _0x42e5f4 = _0x2f03cd['_tempVecto' + 'r32'];
                this['_owner']['_owner']['transform']['getForward'](_0x42e5f4), _0x43b358['cross'](_0x2afeea, _0x42e5f4, _0x2ae34a);
            }
            _0x43b358['normalize'](_0x2ae34a, _0x2ae34a), _0x43b358['scale'](_0x2ae34a, this['_owner']['widthMulti' + 'plier'] / 0x2, _0x2ae34a);
            var _0x1d3f50, _0x217ac4, _0xb31a32 = _0x43b358['scalarLeng' + 'th'](_0x2afeea);
            this['_needAddFi' + 'rstVertex'] && (this['_updateVer' + 'ticesByPos' + 'itionData'](_0x1e6596, _0x2ae34a, this['_endIndex'] - 0x1), this['_needAddFi' + 'rstVertex'] = !0x1), _0xb31a32 - this['_owner']['minVertexD' + 'istance'] >= _0x40af95['zeroTolera' + 'nce'] ? (this['_isTempEnd' + 'Vertex'] ? (_0x1d3f50 = this['_endIndex'] - 0x1, _0x217ac4 = _0xb31a32 - this['_subDistan' + 'ce'][_0x1d3f50], this['_updateVer' + 'ticesByPos' + 'ition'](_0x1e6596, _0x2ae34a, _0xb31a32, _0x1d3f50), this['_owner']['_totalLeng' + 'th'] += _0x217ac4) : (this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_updateVer' + 'ticesByPos' + 'ition'](_0x1e6596, _0x2ae34a, _0xb31a32, this['_endIndex']), this['_owner']['_totalLeng' + 'th'] += _0xb31a32, this['_endIndex']++), _0x1e6596['cloneTo'](this['_lastFixed' + 'VertexPosi' + 'tion']), this['_isTempEnd' + 'Vertex'] = !0x1) : (this['_isTempEnd' + 'Vertex'] ? (_0x1d3f50 = this['_endIndex'] - 0x1, _0x217ac4 = _0xb31a32 - this['_subDistan' + 'ce'][_0x1d3f50], this['_updateVer' + 'ticesByPos' + 'ition'](_0x1e6596, _0x2ae34a, _0xb31a32, _0x1d3f50), this['_owner']['_totalLeng' + 'th'] += _0x217ac4) : (this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_updateVer' + 'ticesByPos' + 'ition'](_0x1e6596, _0x2ae34a, _0xb31a32, this['_endIndex']), this['_owner']['_totalLeng' + 'th'] += _0xb31a32, this['_endIndex']++), this['_isTempEnd' + 'Vertex'] = !0x0);
        }
        ['_updateVer' + 'ticesByPos' + 'itionData'](_0x100c30, _0x184698, _0x3c0c51) {
            var _0x1d7218 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x3c0c51, _0x21f147 = this['_owner']['_curtime'];
            this['_vertices1'][_0x1d7218] = _0x100c30['x'], this['_vertices1'][_0x1d7218 + 0x1] = _0x100c30['y'], this['_vertices1'][_0x1d7218 + 0x2] = _0x100c30['z'], this['_vertices1'][_0x1d7218 + 0x3] = -_0x184698['x'], this['_vertices1'][_0x1d7218 + 0x4] = -_0x184698['y'], this['_vertices1'][_0x1d7218 + 0x5] = -_0x184698['z'], this['_vertices1'][_0x1d7218 + 0x6] = _0x21f147, this['_vertices1'][_0x1d7218 + 0x7] = 0x1, this['_vertices1'][_0x1d7218 + 0x8] = _0x100c30['x'], this['_vertices1'][_0x1d7218 + 0x9] = _0x100c30['y'], this['_vertices1'][_0x1d7218 + 0xa] = _0x100c30['z'], this['_vertices1'][_0x1d7218 + 0xb] = _0x184698['x'], this['_vertices1'][_0x1d7218 + 0xc] = _0x184698['y'], this['_vertices1'][_0x1d7218 + 0xd] = _0x184698['z'], this['_vertices1'][_0x1d7218 + 0xe] = _0x21f147, this['_vertices1'][_0x1d7218 + 0xf] = 0x0;
            var _0x4bc62c = this['_owner']['_owner']['trailRende' + 'rer']['bounds'], _0xa0d446 = _0x4bc62c['getMin'](), _0x38e8e3 = _0x4bc62c['getMax'](), _0x2de360 = _0x2f03cd['_tempVecto' + 'r35'], _0x4832d7 = _0x2f03cd['_tempVecto' + 'r36'], _0xf8b807 = _0x2f03cd['_tempVecto' + 'r32'];
            _0x43b358['add'](_0x100c30, _0x184698, _0x2de360), _0x43b358['subtract'](_0x100c30, _0x184698, _0x4832d7), _0x43b358['min'](_0x4832d7, _0x2de360, _0xf8b807), _0x43b358['min'](_0xa0d446, _0xf8b807, _0xa0d446), _0x4bc62c['setMin'](_0xa0d446), _0x43b358['max'](_0x2de360, _0x4832d7, _0xf8b807), _0x43b358['max'](_0x38e8e3, _0xf8b807, _0x38e8e3), _0x4bc62c['setMax'](_0x38e8e3), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']();
            var _0x5b92c9 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'];
            this['_vertexBuf' + 'fer1']['setData'](this['_vertices1']['buffer'], 0x4 * _0x1d7218, 0x4 * _0x1d7218, 0x4 * _0x5b92c9);
        }
        ['_updateVer' + 'ticesByPos' + 'ition'](_0x5a09d6, _0x5ac989, _0x4620e3, _0x447be7) {
            this['_updateVer' + 'ticesByPos' + 'itionData'](_0x5a09d6, _0x5ac989, _0x447be7), this['_subDistan' + 'ce'][_0x447be7] = _0x4620e3, this['_subBirthT' + 'ime'][_0x447be7] = this['_owner']['_curtime'];
        }
        ['_updateVer' + 'texBufferU' + 'V']() {
            var _0x435c0b, _0x2f5943, _0x35cf33;
            if (this['_disappear' + 'BoundsMode']) {
                _0x435c0b = this['_owner']['_owner']['trailRende' + 'rer']['bounds'];
                var _0x23f96e = this['_owner']['_owner']['transform']['position'];
                _0x435c0b['setMin'](_0x23f96e), _0x435c0b['setMax'](_0x23f96e), _0x2f5943 = _0x435c0b['getMin'](), _0x35cf33 = _0x435c0b['getMax'](), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']();
            }
            for (var _0x3f6ef3 = this['_endIndex'], _0x3c3a5f = 0x0, _0x43cadc = this['_owner']['colorGradi' + 'ent'], _0x183543 = _0x43cadc['colorAlpha' + 'KeysCount'] - 0x1, _0x19e1f9 = _0x43cadc['colorRGBKe' + 'ysCount'] - 0x1, _0x30eb39 = this['_owner']['_totalLeng' + 'th'], _0x308842 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'], _0x120bb3 = this['_activeInd' + 'ex']; _0x120bb3 < _0x3f6ef3; _0x120bb3++) {
                var _0x5648d0, _0x32e028;
                _0x120bb3 !== this['_activeInd' + 'ex'] && (_0x3c3a5f += this['_subDistan' + 'ce'][_0x120bb3]), this['_owner']['textureMod' + 'e'] == _0x465467['Stretch'] ? _0x32e028 = _0x5648d0 = 0x1 - _0x3c3a5f / _0x30eb39 : (_0x32e028 = 0x1 - _0x3c3a5f / _0x30eb39, _0x5648d0 = 0x1 - (_0x30eb39 - _0x3c3a5f)), _0x19e1f9 = _0x43cadc['evaluateCo' + 'lorRGB'](_0x32e028, this['tmpColor'], _0x19e1f9, !0x0), _0x183543 = _0x43cadc['evaluateCo' + 'lorAlpha'](_0x32e028, this['tmpColor'], _0x183543, !0x0);
                var _0x1eb85c = _0x120bb3 * _0x308842;
                if (this['_vertices2'][_0x1eb85c + 0x0] = _0x5648d0, this['_vertices2'][_0x1eb85c + 0x1] = this['tmpColor']['r'], this['_vertices2'][_0x1eb85c + 0x2] = this['tmpColor']['g'], this['_vertices2'][_0x1eb85c + 0x3] = this['tmpColor']['b'], this['_vertices2'][_0x1eb85c + 0x4] = this['tmpColor']['a'], this['_vertices2'][_0x1eb85c + 0x5] = _0x5648d0, this['_vertices2'][_0x1eb85c + 0x6] = this['tmpColor']['r'], this['_vertices2'][_0x1eb85c + 0x7] = this['tmpColor']['g'], this['_vertices2'][_0x1eb85c + 0x8] = this['tmpColor']['b'], this['_vertices2'][_0x1eb85c + 0x9] = this['tmpColor']['a'], this['_disappear' + 'BoundsMode']) {
                    var _0x5c7ad9 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x120bb3, _0x286feb = _0x2f03cd['_tempVecto' + 'r32'], _0x3266c5 = _0x2f03cd['_tempVecto' + 'r33'], _0x3e4b25 = _0x2f03cd['_tempVecto' + 'r34'];
                    _0x286feb['setValue'](this['_vertices1'][_0x5c7ad9 + 0x0], this['_vertices1'][_0x5c7ad9 + 0x1], this['_vertices1'][_0x5c7ad9 + 0x2]), _0x3266c5['setValue'](this['_vertices1'][_0x5c7ad9 + 0x3], this['_vertices1'][_0x5c7ad9 + 0x4], this['_vertices1'][_0x5c7ad9 + 0x5]), _0x43b358['add'](_0x286feb, _0x3266c5, _0x3e4b25), _0x43b358['min'](_0x3e4b25, _0x2f5943, _0x2f5943), _0x43b358['max'](_0x3e4b25, _0x35cf33, _0x35cf33), _0x43b358['subtract'](_0x286feb, _0x3266c5, _0x3e4b25), _0x43b358['min'](_0x3e4b25, _0x2f5943, _0x2f5943), _0x43b358['max'](_0x3e4b25, _0x35cf33, _0x35cf33);
                }
            }
            this['_disappear' + 'BoundsMode'] && (_0x435c0b['setMin'](_0x2f5943), _0x435c0b['setMax'](_0x35cf33), this['_disappear' + 'BoundsMode'] = !0x1, _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']());
            var _0x17c3f9 = this['_activeInd' + 'ex'] * _0x308842;
            this['_vertexBuf' + 'fer2']['setData'](this['_vertices2']['buffer'], 0x4 * _0x17c3f9, 0x4 * _0x17c3f9, 0x4 * (_0x3f6ef3 * _0x308842 - _0x17c3f9));
        }
        ['_updateDis' + 'appear']() {
            for (var _0x7085d4 = this['_endIndex'], _0x31722a = this['_activeInd' + 'ex']; _0x31722a < _0x7085d4 && this['_owner']['_curtime'] - this['_subBirthT' + 'ime'][_0x31722a] >= this['_owner']['time'] + _0x40af95['zeroTolera' + 'nce']; _0x31722a++) {
                var _0x56a2e2 = _0x31722a + 0x1;
                if (_0x56a2e2 !== _0x7085d4 && (this['_owner']['_totalLeng' + 'th'] -= this['_subDistan' + 'ce'][_0x56a2e2]), this['_isTempEnd' + 'Vertex'] && _0x56a2e2 === _0x7085d4 - 0x1) {
                    this['_floatCoun' + 'tPerVertic' + 'es1'];
                    var _0x19542d = this['_lastFixed' + 'VertexPosi' + 'tion'];
                    _0x19542d['x'] = this['_vertices1'][0x0], _0x19542d['y'] = this['_vertices1'][0x1], _0x19542d['z'] = this['_vertices1'][0x2], this['_isTempEnd' + 'Vertex'] = !0x1;
                }
                this['_activeInd' + 'ex']++, this['_disappear' + 'BoundsMode'] = !0x0;
            }
        }
        ['_getType']() {
            return _0x2f03cd['_type'];
        }
        ['_prepareRe' + 'nder'](_0x44bf63) {
            return this['_endIndex'] - this['_activeInd' + 'ex'] > 0x1;
        }
        ['_render'](_0x5e60a4) {
            this['_bufferSta' + 'te']['bind']();
            var _0x509f0f = _0x2247ad['LayaGL']['instance'], _0x583b1b = 0x2 * this['_activeInd' + 'ex'], _0x45088c = 0x2 * this['_endIndex'] - _0x583b1b;
            _0x509f0f['drawArrays'](_0x509f0f['TRIANGLE_S' + 'TRIP'], _0x583b1b, _0x45088c), _0x2247ad['Stat']['renderBatc' + 'hes']++, _0x2247ad['Stat']['trianglesF' + 'aces'] += _0x45088c - 0x2;
        }
        ['destroy']() {
            super['destroy']();
            var _0xfa01c5 = this['_vertexBuf' + 'fer1']['_byteLengt' + 'h'] + this['_vertexBuf' + 'fer2']['_byteLengt' + 'h'];
            _0x2247ad['Resource']['_addMemory'](-_0xfa01c5, -_0xfa01c5), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer1']['destroy'](), this['_vertexBuf' + 'fer2']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertices1'] = null, this['_vertexBuf' + 'fer1'] = null, this['_vertices2'] = null, this['_vertexBuf' + 'fer2'] = null, this['_subBirthT' + 'ime'] = null, this['_subDistan' + 'ce'] = null, this['_lastFixed' + 'VertexPosi' + 'tion'] = null, this['_disappear' + 'BoundsMode'] = !0x1;
        }
        ['_calculate' + 'BoundingBo' + 'xForNative']() {
            var _0x547528 = this['_owner']['_owner']['trailRende' + 'rer'], _0x3061ee = _0x547528['bounds'], _0x280db4 = _0x3061ee['getMin'](), _0x476194 = _0x3061ee['getMax'](), _0x164d53 = _0x5da8ae['_cullingBu' + 'ffer'];
            _0x164d53[_0x547528['_cullingBu' + 'fferIndex'] + 0x1] = _0x280db4['x'], _0x164d53[_0x547528['_cullingBu' + 'fferIndex'] + 0x2] = _0x280db4['y'], _0x164d53[_0x547528['_cullingBu' + 'fferIndex'] + 0x3] = _0x280db4['z'], _0x164d53[_0x547528['_cullingBu' + 'fferIndex'] + 0x4] = _0x476194['x'], _0x164d53[_0x547528['_cullingBu' + 'fferIndex'] + 0x5] = _0x476194['y'], _0x164d53[_0x547528['_cullingBu' + 'fferIndex'] + 0x6] = _0x476194['z'];
        }
        ['clear']() {
            this['_activeInd' + 'ex'] = 0x0, this['_endIndex'] = 0x0, this['_disappear' + 'BoundsMode'] = !0x1, this['_subBirthT' + 'ime']['fill'](0x0), this['_subDistan' + 'ce']['fill'](0x0), this['_segementC' + 'ount'] = 0x0, this['_isTempEnd' + 'Vertex'] = !0x1, this['_needAddFi' + 'rstVertex'] = !0x1, this['_lastFixed' + 'VertexPosi' + 'tion']['setValue'](0x0, 0x0, 0x0);
        }
    }
    _0x2f03cd['ALIGNMENT_' + 'VIEW'] = 0x0, _0x2f03cd['ALIGNMENT_' + 'TRANSFORM_' + 'Z'] = 0x1, _0x2f03cd['_tempVecto' + 'r30'] = new _0x43b358(), _0x2f03cd['_tempVecto' + 'r31'] = new _0x43b358(), _0x2f03cd['_tempVecto' + 'r32'] = new _0x43b358(), _0x2f03cd['_tempVecto' + 'r33'] = new _0x43b358(), _0x2f03cd['_tempVecto' + 'r34'] = new _0x43b358(), _0x2f03cd['_tempVecto' + 'r35'] = new _0x43b358(), _0x2f03cd['_tempVecto' + 'r36'] = new _0x43b358(), _0x2f03cd['_type'] = _0x25a854['_typeCount' + 'er']++;
    class _0x24d7d2 {
        constructor(_0x4ce8e4) {
            this['_totalLeng' + 'th'] = 0x0, this['_lastPosit' + 'ion'] = new _0x43b358(), this['_curtime'] = 0x0, this['alignment'] = _0x24d7d2['ALIGNMENT_' + 'VIEW'], this['_owner'] = _0x4ce8e4, this['_initDefau' + 'ltData'](), this['addRenderE' + 'lement']();
        }
        get ['time']() {
            return this['_time'];
        }
        set ['time'](_0x5a8b30) {
            this['_time'] = _0x5a8b30, this['_owner']['_render']['_shaderVal' + 'ues']['setNumber'](_0x24d7d2['LIFETIME'], _0x5a8b30);
        }
        get ['minVertexD' + 'istance']() {
            return this['_minVertex' + 'Distance'];
        }
        set ['minVertexD' + 'istance'](_0x14308b) {
            this['_minVertex' + 'Distance'] = _0x14308b;
        }
        get ['widthMulti' + 'plier']() {
            return this['_widthMult' + 'iplier'];
        }
        set ['widthMulti' + 'plier'](_0xe9eefc) {
            this['_widthMult' + 'iplier'] = _0xe9eefc;
        }
        get ['widthCurve']() {
            return this['_widthCurv' + 'e'];
        }
        set ['widthCurve'](_0x224f5d) {
            this['_widthCurv' + 'e'] = _0x224f5d;
            var _0x12eef6, _0x1de90e, _0x4ce4cb = new Float32Array(0x4 * _0x224f5d['length']), _0x2b2060 = 0x0;
            for (_0x12eef6 = 0x0, _0x1de90e = _0x224f5d['length']; _0x12eef6 < _0x1de90e; _0x12eef6++)
                _0x4ce4cb[_0x2b2060++] = _0x224f5d[_0x12eef6]['time'], _0x4ce4cb[_0x2b2060++] = _0x224f5d[_0x12eef6]['inTangent'], _0x4ce4cb[_0x2b2060++] = _0x224f5d[_0x12eef6]['outTangent'], _0x4ce4cb[_0x2b2060++] = _0x224f5d[_0x12eef6]['value'];
            this['_owner']['_render']['_shaderVal' + 'ues']['setBuffer'](_0x24d7d2['WIDTHCURVE'], _0x4ce4cb), this['_owner']['_render']['_shaderVal' + 'ues']['setInt'](_0x24d7d2['WIDTHCURVE' + 'KEYLENGTH'], _0x224f5d['length']);
        }
        get ['colorGradi' + 'ent']() {
            return this['_colorGrad' + 'ient'];
        }
        set ['colorGradi' + 'ent'](_0x34fdf8) {
            this['_colorGrad' + 'ient'] = _0x34fdf8;
        }
        get ['textureMod' + 'e']() {
            return this['_textureMo' + 'de'];
        }
        set ['textureMod' + 'e'](_0x28004e) {
            this['_textureMo' + 'de'] = _0x28004e;
        }
        ['addRenderE' + 'lement']() {
            var _0x4a0290 = this['_owner']['_render'], _0x11a16d = _0x4a0290['_renderEle' + 'ments'], _0x55fbe7 = _0x4a0290['sharedMate' + 'rials'][0x0];
            _0x55fbe7 || (_0x55fbe7 = _0x3769bc['defaultMat' + 'erial']);
            var _0x7c55e3 = new _0x978ca7();
            _0x7c55e3['setTransfo' + 'rm'](this['_owner']['_transform']), _0x7c55e3['render'] = _0x4a0290, _0x7c55e3['material'] = _0x55fbe7, this['_trialGeom' + 'etry'] = new _0x2f03cd(this), _0x7c55e3['setGeometr' + 'y'](this['_trialGeom' + 'etry']), _0x11a16d['push'](_0x7c55e3);
        }
        ['_update'](_0x55ab5e) {
            var _0x27e6c3 = this['_owner']['_render'];
            this['_curtime'] += _0x55ab5e['scene']['timer']['_delta'] / 0x3e8, _0x27e6c3['_shaderVal' + 'ues']['setNumber'](_0x24d7d2['CURTIME'], this['_curtime']);
            var _0x187dde = this['_owner']['transform']['position'], _0x36046d = _0x27e6c3['_renderEle' + 'ments'][0x0]['_geometry'];
            _0x36046d['_updateDis' + 'appear'](), _0x36046d['_updateTra' + 'il'](_0x55ab5e['camera'], this['_lastPosit' + 'ion'], _0x187dde), _0x36046d['_updateVer' + 'texBufferU' + 'V'](), _0x187dde['cloneTo'](this['_lastPosit' + 'ion']);
        }
        ['_initDefau' + 'ltData']() {
            this['time'] = 0x5, this['minVertexD' + 'istance'] = 0.1, this['widthMulti' + 'plier'] = 0x1, this['textureMod' + 'e'] = _0x465467['Stretch'];
            var _0x519179 = [], _0x2c58a0 = new _0x6059d7();
            _0x2c58a0['time'] = 0x0, _0x2c58a0['inTangent'] = 0x0, _0x2c58a0['outTangent'] = 0x0, _0x2c58a0['value'] = 0x1, _0x519179['push'](_0x2c58a0);
            var _0x1e5499 = new _0x6059d7();
            _0x1e5499['time'] = 0x1, _0x1e5499['inTangent'] = 0x0, _0x1e5499['outTangent'] = 0x0, _0x1e5499['value'] = 0x1, _0x519179['push'](_0x1e5499), this['widthCurve'] = _0x519179;
            var _0x324ea7 = new _0x17aae7(0x2, 0x2);
            _0x324ea7['mode'] = _0x1998c6['Blend'], _0x324ea7['addColorRG' + 'B'](0x0, _0x151df0['WHITE']), _0x324ea7['addColorRG' + 'B'](0x1, _0x151df0['WHITE']), _0x324ea7['addColorAl' + 'pha'](0x0, 0x1), _0x324ea7['addColorAl' + 'pha'](0x1, 0x1), this['colorGradi' + 'ent'] = _0x324ea7;
        }
        ['destroy']() {
            this['_trialGeom' + 'etry']['destroy'](), this['_trialGeom' + 'etry'] = null, this['_widthCurv' + 'e'] = null, this['_colorGrad' + 'ient'] = null;
        }
        ['clear']() {
            this['_trialGeom' + 'etry']['clear'](), this['_lastPosit' + 'ion']['setValue'](0x0, 0x0, 0x0), this['_curtime'] = 0x0, this['_totalLeng' + 'th'] = 0x0;
        }
    }
    _0x24d7d2['CURTIME'] = _0x38ffce['propertyNa' + 'meToID']('u_CurTime'), _0x24d7d2['LIFETIME'] = _0x38ffce['propertyNa' + 'meToID']('u_LifeTime'), _0x24d7d2['WIDTHCURVE'] = _0x38ffce['propertyNa' + 'meToID']('u_WidthCur' + 've'), _0x24d7d2['WIDTHCURVE' + 'KEYLENGTH'] = _0x38ffce['propertyNa' + 'meToID']('u_WidthCur' + 'veKeyLengt' + 'h'), _0x24d7d2['ALIGNMENT_' + 'VIEW'] = 0x0, _0x24d7d2['ALIGNMENT_' + 'TRANSFORM_' + 'Z'] = 0x1;
    class _0x1175ec extends _0xc4e4b9 {
        constructor(_0x49d0c8) {
            super(_0x49d0c8), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x334e9d();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
        }
        ['_needRende' + 'r'](_0x18770, _0x50503e) {
            return this['_owner']['trailFilte' + 'r']['_update'](_0x50503e), !_0x18770 || _0x18770['intersects'](this['bounds']['_getBoundB' + 'ox']());
        }
        ['_updateFor' + 'Native'](_0x3f0faf) {
            this['_owner']['trailFilte' + 'r']['_update'](_0x3f0faf);
        }
        ['_renderUpd' + 'ate'](_0x2ef87b, _0x6161f3) {
            super['_renderUpd' + 'ate'](_0x2ef87b, _0x6161f3);
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x30ef3c, _0x314766) {
            var _0x212781 = _0x30ef3c['projection' + 'ViewMatrix'];
            _0x314766 ? (_0x334e9d['multiply'](_0x212781, _0x314766['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix'])) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x39cab4['MVPMATRIX'], _0x212781);
        }
    }
    class _0x5f4d1d extends _0x333e4a {
        static ['__init__']() {
        }
        get ['trailFilte' + 'r']() {
            return this['_geometryF' + 'ilter'];
        }
        get ['trailRende' + 'rer']() {
            return this['_render'];
        }
        constructor(_0x544a00 = null) {
            super(_0x544a00), this['_render'] = new _0x1175ec(this), this['_geometryF' + 'ilter'] = new _0x24d7d2(this);
        }
        ['_parse'](_0x251066, _0x376f5b) {
            super['_parse'](_0x251066, _0x376f5b);
            var _0xe55a77, _0x50220f, _0xf5894f = this['_render'], _0xdd2a69 = this['_geometryF' + 'ilter'], _0x410081 = _0x251066['materials'];
            if (_0x410081) {
                var _0xbd6d3a = _0xf5894f['sharedMate' + 'rials'], _0x49a94b = _0x410081['length'];
                for (_0xbd6d3a['length'] = _0x49a94b, _0xe55a77 = 0x0; _0xe55a77 < _0x49a94b; _0xe55a77++)
                    _0xbd6d3a[_0xe55a77] = _0x2247ad['Loader']['getRes'](_0x410081[_0xe55a77]['path']);
                _0xf5894f['sharedMate' + 'rials'] = _0xbd6d3a;
            }
            _0xdd2a69['time'] = _0x251066['time'], _0xdd2a69['minVertexD' + 'istance'] = _0x251066['minVertexD' + 'istance'], _0xdd2a69['widthMulti' + 'plier'] = _0x251066['widthMulti' + 'plier'], _0xdd2a69['textureMod' + 'e'] = _0x251066['textureMod' + 'e'], null != _0x251066['alignment'] && (_0xdd2a69['alignment'] = _0x251066['alignment']);
            var _0x378750 = [], _0xcaeca2 = _0x251066['widthCurve'];
            for (_0xe55a77 = 0x0, _0x50220f = _0xcaeca2['length']; _0xe55a77 < _0x50220f; _0xe55a77++) {
                var _0x385b37 = new _0x6059d7();
                _0x385b37['time'] = _0xcaeca2[_0xe55a77]['time'], _0x385b37['inTangent'] = _0xcaeca2[_0xe55a77]['inTangent'], _0x385b37['outTangent'] = _0xcaeca2[_0xe55a77]['outTangent'], _0x385b37['value'] = _0xcaeca2[_0xe55a77]['value'], _0x378750['push'](_0x385b37);
            }
            _0xdd2a69['widthCurve'] = _0x378750;
            var _0xa98592 = _0x251066['colorGradi' + 'ent'], _0x12e6b2 = _0xa98592['colorKeys'], _0x1e65fb = _0xa98592['alphaKeys'], _0x2f8c5f = new _0x17aae7(_0x12e6b2['length'], _0x1e65fb['length']);
            for (_0x2f8c5f['mode'] = _0xa98592['mode'], _0xe55a77 = 0x0, _0x50220f = _0x12e6b2['length']; _0xe55a77 < _0x50220f; _0xe55a77++) {
                var _0x55cf06 = _0x12e6b2[_0xe55a77];
                _0x2f8c5f['addColorRG' + 'B'](_0x55cf06['time'], new _0x151df0(_0x55cf06['value'][0x0], _0x55cf06['value'][0x1], _0x55cf06['value'][0x2], 0x1));
            }
            for (_0xe55a77 = 0x0, _0x50220f = _0x1e65fb['length']; _0xe55a77 < _0x50220f; _0xe55a77++) {
                var _0x25d295 = _0x1e65fb[_0xe55a77];
                _0x2f8c5f['addColorAl' + 'pha'](_0x25d295['time'], _0x25d295['value']);
            }
            _0xdd2a69['colorGradi' + 'ent'] = _0x2f8c5f;
        }
        ['_onActive']() {
            super['_onActive'](), this['_transform']['position']['cloneTo'](this['_geometryF' + 'ilter']['_lastPosit' + 'ion']);
        }
        ['_cloneTo'](_0x59602c, _0x46cb89, _0x5ed42d) {
            var _0x343222, _0x518ea9;
            super['_cloneTo'](_0x59602c, _0x46cb89, _0x5ed42d);
            var _0x3a59a9 = _0x59602c, _0x48fb26 = _0x3a59a9['trailFilte' + 'r'];
            _0x48fb26['time'] = this['trailFilte' + 'r']['time'], _0x48fb26['minVertexD' + 'istance'] = this['trailFilte' + 'r']['minVertexD' + 'istance'], _0x48fb26['widthMulti' + 'plier'] = this['trailFilte' + 'r']['widthMulti' + 'plier'], _0x48fb26['textureMod' + 'e'] = this['trailFilte' + 'r']['textureMod' + 'e'], _0x48fb26['alignment'] = this['trailFilte' + 'r']['alignment'];
            var _0xbf699d = this['trailFilte' + 'r']['widthCurve'], _0x59e3ff = [];
            for (_0x343222 = 0x0, _0x518ea9 = _0xbf699d['length']; _0x343222 < _0x518ea9; _0x343222++) {
                var _0x487652 = new _0x6059d7();
                _0xbf699d[_0x343222]['cloneTo'](_0x487652), _0x59e3ff['push'](_0x487652);
            }
            _0x48fb26['widthCurve'] = _0x59e3ff;
            var _0x30428e = new _0x17aae7(this['trailFilte' + 'r']['colorGradi' + 'ent']['maxColorRG' + 'BKeysCount'], this['trailFilte' + 'r']['colorGradi' + 'ent']['maxColorAl' + 'phaKeysCou' + 'nt']);
            this['trailFilte' + 'r']['colorGradi' + 'ent']['cloneTo'](_0x30428e), _0x48fb26['colorGradi' + 'ent'] = _0x30428e, _0x3a59a9['trailRende' + 'rer']['sharedMate' + 'rial'] = this['trailRende' + 'rer']['sharedMate' + 'rial'];
        }
        ['destroy'](_0x24063e = !0x0) {
            this['destroyed'] || (super['destroy'](_0x24063e), this['_geometryF' + 'ilter']['destroy'](), this['_geometryF' + 'ilter'] = null);
        }
        ['clear']() {
            this['_geometryF' + 'ilter']['clear']();
        }
        ['_create']() {
            return new _0x5f4d1d();
        }
    }
    class _0x56ddbb {
        constructor(_0x70ef05, _0x455e6a, _0x50c89d, _0x2a909f) {
            this['_position'] = _0x70ef05, this['_normal'] = _0x455e6a, this['_textureCo' + 'ord0'] = _0x50c89d, this['_textureCo' + 'ord1'] = _0x2a909f;
        }
        static ['__init__']() {
            _0x56ddbb['_vertexDec' + 'laration'] = new _0x2ca0b5(0x28, [
                new _0x50e0bd(0x0, _0x163e87['Vector3'], _0x56ddbb['TERRAIN_PO' + 'SITION0']),
                new _0x50e0bd(0xc, _0x163e87['Vector3'], _0x56ddbb['TERRAIN_NO' + 'RMAL0']),
                new _0x50e0bd(0x18, _0x163e87['Vector2'], _0x56ddbb['TERRAIN_TE' + 'XTURECOORD' + 'INATE0']),
                new _0x50e0bd(0x20, _0x163e87['Vector2'], _0x56ddbb['TERRAIN_TE' + 'XTURECOORD' + 'INATE1'])
            ]);
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x56ddbb['_vertexDec' + 'laration'];
        }
        get ['position']() {
            return this['_position'];
        }
        get ['normal']() {
            return this['_normal'];
        }
        get ['textureCoo' + 'rd0']() {
            return this['_textureCo' + 'ord0'];
        }
        get ['textureCoo' + 'rd1']() {
            return this['_textureCo' + 'ord1'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x56ddbb['_vertexDec' + 'laration'];
        }
    }
    _0x56ddbb['TERRAIN_PO' + 'SITION0'] = 0x0, _0x56ddbb['TERRAIN_NO' + 'RMAL0'] = 0x1, _0x56ddbb['TERRAIN_TE' + 'XTURECOORD' + 'INATE0'] = 0x2, _0x56ddbb['TERRAIN_TE' + 'XTURECOORD' + 'INATE1'] = 0x3;
    class _0x43f811 {
    }
    _0x43f811['_interacti' + 've'] = {
        'getWorldTransform': (_0x337b4e, _0x3ecd85) => {
        },
        'setWorldTransform': (_0x366513, _0x56c483) => {
            var _0x19cb34 = _0x4da2bb['_physicObj' + 'ectsMap'][_0x366513];
            _0x19cb34['_simulatio' + 'n']['_updatedRi' + 'gidbodies']++, _0x19cb34['_updateTra' + 'nsformComp' + 'onent'](_0x56c483);
        }
    };
    class _0x2bab33 extends _0x4da2bb {
        constructor(_0x482561 = 0.1, _0x27793c = null, _0x35d9d3 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x1a66dc = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x35d9d3, _0x1a66dc), this['_upAxis'] = new _0x43b358(0x0, 0x1, 0x0), this['_maxSlope'] = 0x2d, this['_jumpSpeed'] = 0xa, this['_fallSpeed'] = 0x37, this['_gravity'] = new _0x43b358(0x0, 0x3 * -9.8, 0x0), this['_btKinemat' + 'icCharacte' + 'r'] = null, this['_stepHeigh' + 't'] = _0x482561, _0x27793c && (this['_upAxis'] = _0x27793c), this['_controlBy' + 'Simulation'] = !0x0;
        }
        static ['__init__']() {
            _0x2bab33['_btTempVec' + 'tor30'] = _0x57b18d['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['fallSpeed']() {
            return this['_fallSpeed'];
        }
        set ['fallSpeed'](_0x1751d0) {
            this['_fallSpeed'] = _0x1751d0, _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setFallSp' + 'eed'](this['_btKinemat' + 'icCharacte' + 'r'], _0x1751d0);
        }
        get ['jumpSpeed']() {
            return this['_jumpSpeed'];
        }
        set ['jumpSpeed'](_0x3fb5de) {
            this['_jumpSpeed'] = _0x3fb5de, _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setJumpSp' + 'eed'](this['_btKinemat' + 'icCharacte' + 'r'], _0x3fb5de);
        }
        get ['gravity']() {
            return this['_gravity'];
        }
        set ['gravity'](_0x2042f2) {
            this['_gravity'] = _0x2042f2;
            var _0x52998e = _0x57b18d['_bullet'], _0x445735 = _0x2bab33['_btTempVec' + 'tor30'];
            _0x52998e['btVector3_' + 'setValue'](_0x445735, -_0x2042f2['x'], _0x2042f2['y'], _0x2042f2['z']), _0x52998e['btKinemati' + 'cCharacter' + 'Controller' + '_setGravit' + 'y'](this['_btKinemat' + 'icCharacte' + 'r'], _0x445735);
        }
        get ['maxSlope']() {
            return this['_maxSlope'];
        }
        set ['maxSlope'](_0x4bd616) {
            this['_maxSlope'] = _0x4bd616, _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setMaxSlo' + 'pe'](this['_btKinemat' + 'icCharacte' + 'r'], _0x4bd616 / 0xb4 * Math['PI']);
        }
        get ['isGrounded']() {
            return _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_onGround'](this['_btKinemat' + 'icCharacte' + 'r']);
        }
        get ['stepHeight']() {
            return this['_stepHeigh' + 't'];
        }
        set ['stepHeight'](_0x685562) {
            this['_stepHeigh' + 't'] = _0x685562, _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setStepHe' + 'ight'](this['_btKinemat' + 'icCharacte' + 'r'], _0x685562);
        }
        get ['upAxis']() {
            return this['_upAxis'];
        }
        set ['upAxis'](_0xd892d3) {
            this['_upAxis'] = _0xd892d3;
            var _0x261dbb = _0x2bab33['_btTempVec' + 'tor30'];
            _0x101904['_convertTo' + 'BulletVec3'](_0xd892d3, _0x261dbb, !0x1), _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setUp'](this['_btKinemat' + 'icCharacte' + 'r'], _0x261dbb);
        }
        ['_construct' + 'Character']() {
            var _0x133c8f = _0x57b18d['_bullet'];
            this['_btKinemat' + 'icCharacte' + 'r'] && _0x133c8f['btKinemati' + 'cCharacter' + 'Controller' + '_destroy'](this['_btKinemat' + 'icCharacte' + 'r']);
            var _0x5f3f73 = _0x2bab33['_btTempVec' + 'tor30'];
            _0x133c8f['btVector3_' + 'setValue'](_0x5f3f73, this['_upAxis']['x'], this['_upAxis']['y'], this['_upAxis']['z']), this['_btKinemat' + 'icCharacte' + 'r'] = _0x133c8f['btKinemati' + 'cCharacter' + 'Controller' + '_create'](this['_btCollide' + 'rObject'], this['_colliderS' + 'hape']['_btShape'], this['_stepHeigh' + 't'], _0x5f3f73), this['fallSpeed'] = this['_fallSpeed'], this['maxSlope'] = this['_maxSlope'], this['jumpSpeed'] = this['_jumpSpeed'], this['gravity'] = this['_gravity'];
        }
        ['_onShapeCh' + 'ange'](_0xa3608c) {
            super['_onShapeCh' + 'ange'](_0xa3608c), this['_construct' + 'Character']();
        }
        ['_onAdded']() {
            var _0x42f16d = _0x57b18d['_bullet'], _0x1dfa26 = _0x42f16d['btPairCach' + 'ingGhostOb' + 'ject_creat' + 'e']();
            _0x42f16d['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x1dfa26, this['id']), _0x42f16d['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x1dfa26, _0x4da2bb['COLLISIONF' + 'LAGS_CHARA' + 'CTER_OBJEC' + 'T']), this['_btCollide' + 'rObject'] = _0x1dfa26, this['_colliderS' + 'hape'] && this['_construct' + 'Character'](), super['_onAdded']();
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_character' + 's']['push'](this), this['_simulatio' + 'n']['_addCharac' + 'ter'](this, this['_collision' + 'Group'], this['_canCollid' + 'eWith']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removeCha' + 'racter'](this);
            var _0x3be68e = this['_simulatio' + 'n']['_character' + 's'];
            _0x3be68e['splice'](_0x3be68e['indexOf'](this), 0x1);
        }
        ['_cloneTo'](_0x12a4e8) {
            super['_cloneTo'](_0x12a4e8);
            var _0x5f6b68 = _0x12a4e8;
            _0x5f6b68['stepHeight'] = this['_stepHeigh' + 't'], _0x5f6b68['upAxis'] = this['_upAxis'], _0x5f6b68['maxSlope'] = this['_maxSlope'], _0x5f6b68['jumpSpeed'] = this['_jumpSpeed'], _0x5f6b68['fallSpeed'] = this['_fallSpeed'], _0x5f6b68['gravity'] = this['_gravity'];
        }
        ['_onDestroy']() {
            _0x57b18d['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_destroy'](this['_btKinemat' + 'icCharacte' + 'r']), super['_onDestroy'](), this['_btKinemat' + 'icCharacte' + 'r'] = null;
        }
        ['move'](_0x1d6a96) {
            var _0x35c550 = _0x2bab33['_btVector3' + '0'], _0x2c8c81 = _0x57b18d['_bullet'];
            _0x2c8c81['btVector3_' + 'setValue'](_0x35c550, -_0x1d6a96['x'], _0x1d6a96['y'], _0x1d6a96['z']), _0x2c8c81['btKinemati' + 'cCharacter' + 'Controller' + '_setWalkDi' + 'rection'](this['_btKinemat' + 'icCharacte' + 'r'], _0x35c550);
        }
        ['jump'](_0x2d029b = null) {
            var _0x30cdec = _0x57b18d['_bullet'], _0x43c35f = _0x2bab33['_btVector3' + '0'];
            _0x2d029b ? (_0x101904['_convertTo' + 'BulletVec3'](_0x2d029b, _0x43c35f, !0x0), _0x30cdec['btKinemati' + 'cCharacter' + 'Controller' + '_jump'](this['_btKinemat' + 'icCharacte' + 'r'], _0x43c35f)) : (_0x30cdec['btVector3_' + 'setValue'](_0x43c35f, 0x0, 0x0, 0x0), _0x30cdec['btKinemati' + 'cCharacter' + 'Controller' + '_jump'](this['_btKinemat' + 'icCharacte' + 'r'], _0x43c35f));
        }
    }
    _0x2bab33['UPAXIS_X'] = 0x0, _0x2bab33['UPAXIS_Y'] = 0x1, _0x2bab33['UPAXIS_Z'] = 0x2;
    class _0x5c3098 extends _0x4da2bb {
        constructor(_0x5a2189, _0x4a3de2) {
            super(_0x5a2189, _0x4a3de2), this['_isTrigger'] = !0x1;
        }
        get ['isTrigger']() {
            return this['_isTrigger'];
        }
        set ['isTrigger'](_0xa96cd7) {
            this['_isTrigger'] = _0xa96cd7;
            var _0x2cbcd0 = _0x57b18d['_bullet'];
            if (this['_btCollide' + 'rObject']) {
                var _0x33fa74 = _0x2cbcd0['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject']);
                _0xa96cd7 ? 0x0 == (_0x33fa74 & _0x4da2bb['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) && _0x2cbcd0['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject'], _0x33fa74 | _0x4da2bb['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) : 0x0 != (_0x33fa74 & _0x4da2bb['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) && _0x2cbcd0['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject'], _0x33fa74 ^ _0x4da2bb['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']);
            }
        }
        ['_onAdded']() {
            super['_onAdded'](), this['isTrigger'] = this['_isTrigger'];
        }
        ['_cloneTo'](_0x38f440) {
            super['_cloneTo'](_0x38f440), _0x38f440['isTrigger'] = this['_isTrigger'];
        }
    }
    class _0x29a886 extends _0x5c3098 {
        constructor(_0x5c6498 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x10ed6b = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x5c6498, _0x10ed6b), this['_enablePro' + 'cessCollis' + 'ions'] = !0x1;
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_addPhysic' + 'sCollider'](this, this['_collision' + 'Group'], this['_canCollid' + 'eWith']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removePhy' + 'sicsCollid' + 'er'](this);
        }
        ['_parse'](_0x1fd25d) {
            null != _0x1fd25d['friction'] && (this['friction'] = _0x1fd25d['friction']), null != _0x1fd25d['rollingFri' + 'ction'] && (this['rollingFri' + 'ction'] = _0x1fd25d['rollingFri' + 'ction']), null != _0x1fd25d['restitutio' + 'n'] && (this['restitutio' + 'n'] = _0x1fd25d['restitutio' + 'n']), null != _0x1fd25d['isTrigger'] && (this['isTrigger'] = _0x1fd25d['isTrigger']), super['_parse'](_0x1fd25d), this['_parseShap' + 'e'](_0x1fd25d['shapes']);
        }
        ['_onAdded']() {
            var _0x3b70d5 = _0x57b18d['_bullet'], _0x5f3f26 = _0x3b70d5['btCollisio' + 'nObject_cr' + 'eate']();
            _0x3b70d5['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x5f3f26, this['id']), _0x3b70d5['btCollisio' + 'nObject_fo' + 'rceActivat' + 'ionState'](_0x5f3f26, _0x4da2bb['ACTIVATION' + 'STATE_DISA' + 'BLE_SIMULA' + 'TION']);
            var _0x698b64 = _0x3b70d5['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x5f3f26);
            this['owner']['isStatic'] ? ((_0x698b64 & _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']) > 0x0 && (_0x698b64 ^= _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']), _0x698b64 |= _0x4da2bb['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']) : ((_0x698b64 & _0x4da2bb['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']) > 0x0 && (_0x698b64 ^= _0x4da2bb['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']), _0x698b64 |= _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']), _0x3b70d5['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x5f3f26, _0x698b64), this['_btCollide' + 'rObject'] = _0x5f3f26, super['_onAdded']();
        }
    }
    class _0x37d35e extends _0x5c3098 {
        constructor(_0x961dbe = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x592c09 = _0x114bf2['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x961dbe, _0x592c09), this['_isKinemat' + 'ic'] = !0x1, this['_mass'] = 0x1, this['_gravity'] = new _0x43b358(0x0, -0xa, 0x0), this['_angularDa' + 'mping'] = 0x0, this['_linearDam' + 'ping'] = 0x0, this['_overrideG' + 'ravity'] = !0x1, this['_totalTorq' + 'ue'] = new _0x43b358(0x0, 0x0, 0x0), this['_totalForc' + 'e'] = new _0x43b358(0x0, 0x0, 0x0), this['_linearVel' + 'ocity'] = new _0x43b358(), this['_angularVe' + 'locity'] = new _0x43b358(), this['_linearFac' + 'tor'] = new _0x43b358(0x1, 0x1, 0x1), this['_angularFa' + 'ctor'] = new _0x43b358(0x1, 0x1, 0x1), this['_detectCol' + 'lisions'] = !0x0, this['_controlBy' + 'Simulation'] = !0x0;
        }
        static ['__init__']() {
            var _0x4bb8a3 = _0x57b18d['_bullet'];
            _0x37d35e['_btTempVec' + 'tor30'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btTempVec' + 'tor31'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btVector3' + 'Zero'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btInertia'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btImpulse'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btImpulse' + 'Offset'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btGravity'] = _0x4bb8a3['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x37d35e['_btTransfo' + 'rm0'] = _0x4bb8a3['btTransfor' + 'm_create']();
        }
        get ['mass']() {
            return this['_mass'];
        }
        set ['mass'](_0x52902c) {
            _0x52902c = Math['max'](_0x52902c, 1e-7), this['_mass'] = _0x52902c, this['_isKinemat' + 'ic'] || this['_updateMas' + 's'](_0x52902c);
        }
        get ['isKinemati' + 'c']() {
            return this['_isKinemat' + 'ic'];
        }
        set ['isKinemati' + 'c'](_0x48bee3) {
            this['_isKinemat' + 'ic'] = _0x48bee3, this['_controlBy' + 'Simulation'] = !_0x48bee3;
            var _0x3c6d3d = _0x57b18d['_bullet'], _0x108076 = !!(this['_simulatio' + 'n'] && this['_enabled'] && this['_colliderS' + 'hape']);
            _0x108076 && this['_removeFro' + 'mSimulatio' + 'n']();
            var _0xd51bcf = this['_btCollide' + 'rObject'], _0x2fdd2d = _0x3c6d3d['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0xd51bcf);
            _0x48bee3 ? (_0x2fdd2d |= _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'], _0x3c6d3d['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0xd51bcf, _0x2fdd2d), _0x3c6d3d['btCollisio' + 'nObject_fo' + 'rceActivat' + 'ionState'](this['_btCollide' + 'rObject'], _0x4da2bb['ACTIVATION' + 'STATE_DISA' + 'BLE_DEACTI' + 'VATION']), this['_enablePro' + 'cessCollis' + 'ions'] = !0x1, this['_updateMas' + 's'](0x0)) : ((_0x2fdd2d & _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']) > 0x0 && (_0x2fdd2d ^= _0x4da2bb['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']), _0x3c6d3d['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0xd51bcf, _0x2fdd2d), _0x3c6d3d['btCollisio' + 'nObject_se' + 'tActivatio' + 'nState'](this['_btCollide' + 'rObject'], _0x4da2bb['ACTIVATION' + 'STATE_ACTI' + 'VE_TAG']), this['_enablePro' + 'cessCollis' + 'ions'] = !0x0, this['_updateMas' + 's'](this['_mass']));
            var _0x486e5c = _0x37d35e['_btVector3' + 'Zero'];
            _0x3c6d3d['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionLinear' + 'Velocity'](_0xd51bcf, _0x486e5c), _0x3c6d3d['btRigidBod' + 'y_setLinea' + 'rVelocity'](_0xd51bcf, _0x486e5c), _0x3c6d3d['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionAngula' + 'rVelocity'](_0xd51bcf, _0x486e5c), _0x3c6d3d['btRigidBod' + 'y_setAngul' + 'arVelocity'](_0xd51bcf, _0x486e5c), _0x108076 && this['_addToSimu' + 'lation']();
        }
        get ['linearDamp' + 'ing']() {
            return this['_linearDam' + 'ping'];
        }
        set ['linearDamp' + 'ing'](_0x3c27d4) {
            this['_linearDam' + 'ping'] = _0x3c27d4, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btRigidBod' + 'y_setDampi' + 'ng'](this['_btCollide' + 'rObject'], _0x3c27d4, this['_angularDa' + 'mping']);
        }
        get ['angularDam' + 'ping']() {
            return this['_angularDa' + 'mping'];
        }
        set ['angularDam' + 'ping'](_0x5acfc9) {
            this['_angularDa' + 'mping'] = _0x5acfc9, this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btRigidBod' + 'y_setDampi' + 'ng'](this['_btCollide' + 'rObject'], this['_linearDam' + 'ping'], _0x5acfc9);
        }
        get ['overrideGr' + 'avity']() {
            return this['_overrideG' + 'ravity'];
        }
        set ['overrideGr' + 'avity'](_0x3dcc56) {
            this['_overrideG' + 'ravity'] = _0x3dcc56;
            var _0x1c20a5 = _0x57b18d['_bullet'];
            if (this['_btCollide' + 'rObject']) {
                var _0x3e26f8 = _0x1c20a5['btRigidBod' + 'y_getFlags'](this['_btCollide' + 'rObject']);
                _0x3dcc56 ? 0x0 == (_0x3e26f8 & _0x37d35e['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) && _0x1c20a5['btRigidBod' + 'y_setFlags'](this['_btCollide' + 'rObject'], _0x3e26f8 | _0x37d35e['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) : (_0x3e26f8 & _0x37d35e['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) > 0x0 && _0x1c20a5['btRigidBod' + 'y_setFlags'](this['_btCollide' + 'rObject'], _0x3e26f8 ^ _0x37d35e['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']);
            }
        }
        get ['gravity']() {
            return this['_gravity'];
        }
        set ['gravity'](_0x46dc25) {
            this['_gravity'] = _0x46dc25;
            var _0x31ca3d = _0x57b18d['_bullet'];
            _0x31ca3d['btVector3_' + 'setValue'](_0x37d35e['_btGravity'], -_0x46dc25['x'], _0x46dc25['y'], _0x46dc25['z']), _0x31ca3d['btRigidBod' + 'y_setGravi' + 'ty'](this['_btCollide' + 'rObject'], _0x37d35e['_btGravity']);
        }
        get ['totalForce']() {
            if (this['_btCollide' + 'rObject']) {
                var _0x37ef6c = _0x57b18d['_bullet']['btRigidBod' + 'y_getTotal' + 'Force'](this['_btCollide' + 'rObject']);
                return _0x101904['_convertTo' + 'LayaVec3'](_0x37ef6c, this['_totalForc' + 'e'], !0x0), this['_totalForc' + 'e'];
            }
            return null;
        }
        get ['linearFact' + 'or']() {
            return this['_linearFac' + 'tor'];
        }
        set ['linearFact' + 'or'](_0x55daba) {
            this['_linearFac' + 'tor'] = _0x55daba;
            var _0xfcf8a5 = _0x37d35e['_btTempVec' + 'tor30'];
            _0x101904['_convertTo' + 'BulletVec3'](_0x55daba, _0xfcf8a5, !0x1), _0x57b18d['_bullet']['btRigidBod' + 'y_setLinea' + 'rFactor'](this['_btCollide' + 'rObject'], _0xfcf8a5);
        }
        get ['linearVelo' + 'city']() {
            return this['_btCollide' + 'rObject'] && _0x101904['_convertTo' + 'LayaVec3'](_0x57b18d['_bullet']['btRigidBod' + 'y_getLinea' + 'rVelocity'](this['_btCollide' + 'rObject']), this['_linearVel' + 'ocity'], !0x0), this['_linearVel' + 'ocity'];
        }
        set ['linearVelo' + 'city'](_0x1dd770) {
            if (this['_linearVel' + 'ocity'] = _0x1dd770, this['_btCollide' + 'rObject']) {
                var _0xe72f64 = _0x37d35e['_btTempVec' + 'tor30'];
                _0x101904['_convertTo' + 'BulletVec3'](_0x1dd770, _0xe72f64, !0x0), this['isSleeping'] && this['wakeUp'](), _0x57b18d['_bullet']['btRigidBod' + 'y_setLinea' + 'rVelocity'](this['_btCollide' + 'rObject'], _0xe72f64);
            }
        }
        get ['angularFac' + 'tor']() {
            return this['_angularFa' + 'ctor'];
        }
        set ['angularFac' + 'tor'](_0x4389d1) {
            this['_angularFa' + 'ctor'] = _0x4389d1;
            var _0x19e571 = _0x37d35e['_btTempVec' + 'tor30'];
            _0x101904['_convertTo' + 'BulletVec3'](_0x4389d1, _0x19e571, !0x1), _0x57b18d['_bullet']['btRigidBod' + 'y_setAngul' + 'arFactor'](this['_btCollide' + 'rObject'], _0x19e571);
        }
        get ['angularVel' + 'ocity']() {
            return this['_btCollide' + 'rObject'] && _0x101904['_convertTo' + 'LayaVec3'](_0x57b18d['_bullet']['btRigidBod' + 'y_getAngul' + 'arVelocity'](this['_btCollide' + 'rObject']), this['_angularVe' + 'locity'], !0x0), this['_angularVe' + 'locity'];
        }
        set ['angularVel' + 'ocity'](_0x145bbd) {
            if (this['_angularVe' + 'locity'] = _0x145bbd, this['_btCollide' + 'rObject']) {
                var _0x22328b = _0x37d35e['_btTempVec' + 'tor30'];
                _0x101904['_convertTo' + 'BulletVec3'](_0x145bbd, _0x22328b, !0x0), this['isSleeping'] && this['wakeUp'](), _0x57b18d['_bullet']['btRigidBod' + 'y_setAngul' + 'arVelocity'](this['_btCollide' + 'rObject'], _0x22328b);
            }
        }
        get ['totalTorqu' + 'e']() {
            if (this['_btCollide' + 'rObject']) {
                var _0x5dc5b9 = _0x57b18d['_bullet']['btRigidBod' + 'y_getTotal' + 'Torque'](this['_btCollide' + 'rObject']);
                return _0x101904['_convertTo' + 'LayaVec3'](_0x5dc5b9, this['_totalTorq' + 'ue'], !0x0), this['_totalTorq' + 'ue'];
            }
            return null;
        }
        get ['detectColl' + 'isions']() {
            return this['_detectCol' + 'lisions'];
        }
        set ['detectColl' + 'isions'](_0x1944a0) {
            this['_detectCol' + 'lisions'] !== _0x1944a0 && (this['_detectCol' + 'lisions'] = _0x1944a0, this['_colliderS' + 'hape'] && this['_enabled'] && this['_simulatio' + 'n'] && (this['_simulatio' + 'n']['_removeRig' + 'idBody'](this), this['_simulatio' + 'n']['_addRigidB' + 'ody'](this, this['_collision' + 'Group'], _0x1944a0 ? this['_canCollid' + 'eWith'] : 0x0)));
        }
        get ['isSleeping']() {
            return !!this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_ge' + 'tActivatio' + 'nState'](this['_btCollide' + 'rObject']) === _0x4da2bb['ACTIVATION' + 'STATE_ISLA' + 'ND_SLEEPIN' + 'G'];
        }
        get ['sleepLinea' + 'rVelocity']() {
            return _0x57b18d['_bullet']['btRigidBod' + 'y_getLinea' + 'rSleepingT' + 'hreshold'](this['_btCollide' + 'rObject']);
        }
        set ['sleepLinea' + 'rVelocity'](_0x5b4ec1) {
            var _0xea2f4b = _0x57b18d['_bullet'];
            _0xea2f4b['btRigidBod' + 'y_setSleep' + 'ingThresho' + 'lds'](this['_btCollide' + 'rObject'], _0x5b4ec1, _0xea2f4b['btRigidBod' + 'y_getAngul' + 'arSleeping' + 'Threshold'](this['_btCollide' + 'rObject']));
        }
        get ['sleepAngul' + 'arVelocity']() {
            return _0x57b18d['_bullet']['btRigidBod' + 'y_getAngul' + 'arSleeping' + 'Threshold'](this['_btCollide' + 'rObject']);
        }
        set ['sleepAngul' + 'arVelocity'](_0x5312e2) {
            var _0x701b48 = _0x57b18d['_bullet'];
            _0x701b48['btRigidBod' + 'y_setSleep' + 'ingThresho' + 'lds'](this['_btCollide' + 'rObject'], _0x701b48['btRigidBod' + 'y_getLinea' + 'rSleepingT' + 'hreshold'](this['_btCollide' + 'rObject']), _0x5312e2);
        }
        ['_updateMas' + 's'](_0x226bee) {
            if (this['_btCollide' + 'rObject'] && this['_colliderS' + 'hape']) {
                var _0x4089b3 = _0x57b18d['_bullet'];
                _0x4089b3['btCollisio' + 'nShape_cal' + 'culateLoca' + 'lInertia'](this['_colliderS' + 'hape']['_btShape'], _0x226bee, _0x37d35e['_btInertia']), _0x4089b3['btRigidBod' + 'y_setMassP' + 'rops'](this['_btCollide' + 'rObject'], _0x226bee, _0x37d35e['_btInertia']), _0x4089b3['btRigidBod' + 'y_updateIn' + 'ertiaTenso' + 'r'](this['_btCollide' + 'rObject']);
            }
        }
        ['_onScaleCh' + 'ange'](_0x43e025) {
            super['_onScaleCh' + 'ange'](_0x43e025), this['_updateMas' + 's'](this['_isKinemat' + 'ic'] ? 0x0 : this['_mass']);
        }
        ['_derivePhy' + 'sicsTransf' + 'ormation'](_0x2283b7) {
            var _0x2a8523 = _0x57b18d['_bullet'], _0x58f3c7 = this['_btCollide' + 'rObject'], _0x3672c7 = _0x2a8523['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x58f3c7), _0x122bd7 = _0x37d35e['_btTransfo' + 'rm0'];
            _0x2a8523['btTransfor' + 'm_equal'](_0x122bd7, _0x3672c7), this['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x122bd7, _0x2283b7), _0x2a8523['btRigidBod' + 'y_setCente' + 'rOfMassTra' + 'nsform'](_0x58f3c7, _0x122bd7);
        }
        ['_onAdded']() {
            var _0x1060de = _0x57b18d['_bullet'], _0x54cef7 = _0x1060de['layaMotion' + 'State_crea' + 'te']();
            _0x1060de['layaMotion' + 'State_set_' + 'rigidBodyI' + 'D'](_0x54cef7, this['_id']), this['_btLayaMot' + 'ionState'] = _0x54cef7;
            var _0x557276 = _0x1060de['btRigidBod' + 'yConstruct' + 'ionInfo_cr' + 'eate'](0x0, _0x54cef7, null, _0x37d35e['_btVector3' + 'Zero']), _0xb6bf4f = _0x1060de['btRigidBod' + 'y_create'](_0x557276);
            _0x1060de['btCollisio' + 'nObject_se' + 'tUserIndex'](_0xb6bf4f, this['id']), this['_btCollide' + 'rObject'] = _0xb6bf4f, super['_onAdded'](), this['mass'] = this['_mass'], this['linearFact' + 'or'] = this['_linearFac' + 'tor'], this['angularFac' + 'tor'] = this['_angularFa' + 'ctor'], this['linearDamp' + 'ing'] = this['_linearDam' + 'ping'], this['angularDam' + 'ping'] = this['_angularDa' + 'mping'], this['overrideGr' + 'avity'] = this['_overrideG' + 'ravity'], this['gravity'] = this['_gravity'], this['isKinemati' + 'c'] = this['_isKinemat' + 'ic'], _0x1060de['btRigidBod' + 'yConstruct' + 'ionInfo_de' + 'stroy'](_0x557276);
        }
        ['_onShapeCh' + 'ange'](_0x37f20e) {
            if (super['_onShapeCh' + 'ange'](_0x37f20e), this['_isKinemat' + 'ic'])
                this['_updateMas' + 's'](0x0);
            else {
                var _0x31510f = _0x57b18d['_bullet'];
                _0x31510f['btRigidBod' + 'y_setCente' + 'rOfMassTra' + 'nsform'](this['_btCollide' + 'rObject'], _0x31510f['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](this['_btCollide' + 'rObject'])), this['_updateMas' + 's'](this['_mass']);
            }
        }
        ['_parse'](_0x441f86) {
            if (null != _0x441f86['friction'] && (this['friction'] = _0x441f86['friction']), null != _0x441f86['rollingFri' + 'ction'] && (this['rollingFri' + 'ction'] = _0x441f86['rollingFri' + 'ction']), null != _0x441f86['restitutio' + 'n'] && (this['restitutio' + 'n'] = _0x441f86['restitutio' + 'n']), null != _0x441f86['isTrigger'] && (this['isTrigger'] = _0x441f86['isTrigger']), null != _0x441f86['mass'] && (this['mass'] = _0x441f86['mass']), null != _0x441f86['isKinemati' + 'c'] && (this['isKinemati' + 'c'] = _0x441f86['isKinemati' + 'c']), null != _0x441f86['linearDamp' + 'ing'] && (this['linearDamp' + 'ing'] = _0x441f86['linearDamp' + 'ing']), null != _0x441f86['angularDam' + 'ping'] && (this['angularDam' + 'ping'] = _0x441f86['angularDam' + 'ping']), null != _0x441f86['overrideGr' + 'avity'] && (this['overrideGr' + 'avity'] = _0x441f86['overrideGr' + 'avity']), null != _0x441f86['linearFact' + 'or']) {
                var _0x4e4651 = this['linearFact' + 'or'];
                _0x4e4651['fromArray'](_0x441f86['linearFact' + 'or']), this['linearFact' + 'or'] = _0x4e4651;
            }
            if (null != _0x441f86['angularFac' + 'tor']) {
                var _0x2a6217 = this['angularFac' + 'tor'];
                _0x2a6217['fromArray'](_0x441f86['angularFac' + 'tor']), this['angularFac' + 'tor'] = _0x2a6217;
            }
            _0x441f86['gravity'] && (this['gravity']['fromArray'](_0x441f86['gravity']), this['gravity'] = this['gravity']), super['_parse'](_0x441f86), this['_parseShap' + 'e'](_0x441f86['shapes']);
        }
        ['_onDestroy']() {
            _0x57b18d['_bullet']['btMotionSt' + 'ate_destro' + 'y'](this['_btLayaMot' + 'ionState']), super['_onDestroy'](), this['_btLayaMot' + 'ionState'] = null, this['_gravity'] = null, this['_totalTorq' + 'ue'] = null, this['_linearVel' + 'ocity'] = null, this['_angularVe' + 'locity'] = null, this['_linearFac' + 'tor'] = null, this['_angularFa' + 'ctor'] = null;
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_addRigidB' + 'ody'](this, this['_collision' + 'Group'], this['_detectCol' + 'lisions'] ? this['_canCollid' + 'eWith'] : 0x0);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removeRig' + 'idBody'](this);
        }
        ['_cloneTo'](_0x5339e6) {
            super['_cloneTo'](_0x5339e6);
            var _0x127132 = _0x5339e6;
            _0x127132['isKinemati' + 'c'] = this['_isKinemat' + 'ic'], _0x127132['mass'] = this['_mass'], _0x127132['gravity'] = this['_gravity'], _0x127132['angularDam' + 'ping'] = this['_angularDa' + 'mping'], _0x127132['linearDamp' + 'ing'] = this['_linearDam' + 'ping'], _0x127132['overrideGr' + 'avity'] = this['_overrideG' + 'ravity'], _0x127132['linearVelo' + 'city'] = this['_linearVel' + 'ocity'], _0x127132['angularVel' + 'ocity'] = this['_angularVe' + 'locity'], _0x127132['linearFact' + 'or'] = this['_linearFac' + 'tor'], _0x127132['angularFac' + 'tor'] = this['_angularFa' + 'ctor'], _0x127132['detectColl' + 'isions'] = this['_detectCol' + 'lisions'];
        }
        ['applyForce'](_0x3c1fb1, _0x51115f = null) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x28aa4a = _0x57b18d['_bullet'], _0x5dc9cb = _0x37d35e['_btTempVec' + 'tor30'];
            if (_0x28aa4a['btVector3_' + 'setValue'](_0x5dc9cb, -_0x3c1fb1['x'], _0x3c1fb1['y'], _0x3c1fb1['z']), _0x51115f) {
                var _0x17776b = _0x37d35e['_btTempVec' + 'tor31'];
                _0x28aa4a['btVector3_' + 'setValue'](_0x17776b, -_0x51115f['x'], _0x51115f['y'], _0x51115f['z']), _0x28aa4a['btRigidBod' + 'y_applyFor' + 'ce'](this['_btCollide' + 'rObject'], _0x5dc9cb, _0x17776b);
            } else
                _0x28aa4a['btRigidBod' + 'y_applyCen' + 'tralForce'](this['_btCollide' + 'rObject'], _0x5dc9cb);
        }
        ['applyTorqu' + 'e'](_0x1d7d92) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x28bca9 = _0x57b18d['_bullet'], _0x548277 = _0x37d35e['_btTempVec' + 'tor30'];
            _0x28bca9['btVector3_' + 'setValue'](_0x548277, -_0x1d7d92['x'], _0x1d7d92['y'], _0x1d7d92['z']), _0x28bca9['btRigidBod' + 'y_applyTor' + 'que'](this['_btCollide' + 'rObject'], _0x548277);
        }
        ['applyImpul' + 'se'](_0x34bb5c, _0x24c379 = null) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x28deeb = _0x57b18d['_bullet'];
            _0x28deeb['btVector3_' + 'setValue'](_0x37d35e['_btImpulse'], -_0x34bb5c['x'], _0x34bb5c['y'], _0x34bb5c['z']), _0x24c379 ? (_0x28deeb['btVector3_' + 'setValue'](_0x37d35e['_btImpulse' + 'Offset'], -_0x24c379['x'], _0x24c379['y'], _0x24c379['z']), _0x28deeb['btRigidBod' + 'y_applyImp' + 'ulse'](this['_btCollide' + 'rObject'], _0x37d35e['_btImpulse'], _0x37d35e['_btImpulse' + 'Offset'])) : _0x28deeb['btRigidBod' + 'y_applyCen' + 'tralImpuls' + 'e'](this['_btCollide' + 'rObject'], _0x37d35e['_btImpulse']);
        }
        ['applyTorqu' + 'eImpulse'](_0x3f1fdb) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x565e4d = _0x57b18d['_bullet'], _0x2b98b5 = _0x37d35e['_btTempVec' + 'tor30'];
            _0x565e4d['btVector3_' + 'setValue'](_0x2b98b5, -_0x3f1fdb['x'], _0x3f1fdb['y'], _0x3f1fdb['z']), _0x565e4d['btRigidBod' + 'y_applyTor' + 'queImpulse'](this['_btCollide' + 'rObject'], _0x2b98b5);
        }
        ['wakeUp']() {
            this['_btCollide' + 'rObject'] && _0x57b18d['_bullet']['btCollisio' + 'nObject_ac' + 'tivate'](this['_btCollide' + 'rObject'], !0x1);
        }
        ['clearForce' + 's']() {
            var _0x356aeb = this['_btCollide' + 'rObject'];
            if (null == _0x356aeb)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0xdc261d = _0x57b18d['_bullet'];
            _0xdc261d['btRigidBod' + 'y_clearFor' + 'ces'](_0x356aeb);
            var _0x1684d8 = _0x37d35e['_btVector3' + 'Zero'];
            _0xdc261d['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionLinear' + 'Velocity'](_0x356aeb, _0x1684d8), _0xdc261d['btRigidBod' + 'y_setLinea' + 'rVelocity'](_0x356aeb, _0x1684d8), _0xdc261d['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionAngula' + 'rVelocity'](_0x356aeb, _0x1684d8), _0xdc261d['btRigidBod' + 'y_setAngul' + 'arVelocity'](_0x356aeb, _0x1684d8);
        }
    }
    _0x37d35e['TYPE_STATI' + 'C'] = 0x0, _0x37d35e['TYPE_DYNAM' + 'IC'] = 0x1, _0x37d35e['TYPE_KINEM' + 'ATIC'] = 0x2, _0x37d35e['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY'] = 0x1, _0x37d35e['_BT_ENABLE' + '_GYROPSCOP' + 'IC_FORCE'] = 0x2;
    class _0x200f6f extends _0x579b03 {
        static ['__init__']() {
            _0x200f6f['_btNormal'] = _0x57b18d['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        constructor(_0xf6c483, _0x2fe40e) {
            super(), this['_normal'] = _0xf6c483, this['_offset'] = _0x2fe40e, this['_type'] = _0x579b03['SHAPETYPES' + '_STATICPLA' + 'NE'];
            var _0x570d62 = _0x57b18d['_bullet'];
            _0x570d62['btVector3_' + 'setValue'](_0x200f6f['_btNormal'], -_0xf6c483['x'], _0xf6c483['y'], _0xf6c483['z']), this['_btShape'] = _0x570d62['btStaticPl' + 'aneShape_c' + 'reate'](_0x200f6f['_btNormal'], _0x2fe40e);
        }
        ['clone']() {
            var _0x20f61e = new _0x200f6f(this['_normal'], this['_offset']);
            return this['cloneTo'](_0x20f61e), _0x20f61e;
        }
    }
    class _0x5d3cd0 extends _0x25a854 {
        constructor(_0x2e034f) {
            super(), this['_id'] = ++_0x5d3cd0['_uniqueIDC' + 'ounter'], this['_mesh'] = _0x2e034f, this['_boneIndic' + 'esList'] = [], this['_subIndexB' + 'ufferStart'] = [], this['_subIndexB' + 'ufferCount'] = [];
        }
        get ['indexCount']() {
            return this['_indexCoun' + 't'];
        }
        ['_setIndexR' + 'ange'](_0x1d336b, _0x5e7633) {
            this['_indexStar' + 't'] = _0x1d336b, this['_indexCoun' + 't'] = _0x5e7633, this['_indices'] = new Uint16Array(this['_indexBuff' + 'er']['getData']()['buffer'], 0x2 * _0x1d336b, _0x5e7633);
        }
        ['_getType']() {
            return _0x5d3cd0['_type'];
        }
        ['_prepareRe' + 'nder'](_0x304a21) {
            return this['_mesh']['_uploadVer' + 'ticesData'](), !0x0;
        }
        ['_render'](_0xb8b52c) {
            var _0x159d33 = this['_mesh'];
            if (_0x159d33['indexForma' + 't'] !== _0xc55b22['IndexForma' + 't']['UInt32'] || _0x2247ad['LayaGL']['layaGPUIns' + 'tance']['supportEle' + 'mentIndexU' + 'int32']()) {
                var _0x48a139, _0x2be33a = _0x2247ad['LayaGL']['instance'], _0x1a5c75 = _0xb8b52c['renderElem' + 'ent']['render']['_skinnedDa' + 'ta'];
                switch (_0x159d33['indexForma' + 't']) {
                case _0xc55b22['IndexForma' + 't']['UInt32']:
                    _0x48a139 = _0x2be33a['UNSIGNED_I' + 'NT'];
                    break;
                case _0xc55b22['IndexForma' + 't']['UInt16']:
                    _0x48a139 = _0x2be33a['UNSIGNED_S' + 'HORT'];
                    break;
                case _0xc55b22['IndexForma' + 't']['UInt8']:
                    _0x48a139 = _0x2be33a['UNSIGNED_B' + 'YTE'];
                }
                if (_0x159d33['_bufferSta' + 'te']['bind'](), _0x1a5c75) {
                    for (var _0x43e4c5 = _0x1a5c75[this['_indexInMe' + 'sh']], _0x530bb1 = 0x0, _0x293f40 = this['_boneIndic' + 'esList']['length']; _0x530bb1 < _0x293f40; _0x530bb1++)
                        _0xb8b52c['shader']['uploadCust' + 'omUniform'](_0x279241['BONES'], _0x43e4c5[_0x530bb1]), _0x2be33a['drawElemen' + 'ts'](_0x2be33a['TRIANGLES'], this['_subIndexB' + 'ufferCount'][_0x530bb1], _0x48a139, 0x2 * this['_subIndexB' + 'ufferStart'][_0x530bb1]);
                } else
                    _0x2be33a['drawElemen' + 'ts'](_0x2be33a['TRIANGLES'], this['_indexCoun' + 't'], _0x48a139, 0x2 * this['_indexStar' + 't']);
                _0x2247ad['Stat']['trianglesF' + 'aces'] += this['_indexCoun' + 't'] / 0x3, _0x2247ad['Stat']['renderBatc' + 'hes']++;
            } else
                console['warn']('SubMesh:th' + 'is\x20device\x20' + 'do\x20not\x20sup' + 'port\x20Index' + 'Format.UIn' + 't32.');
        }
        ['getIndices']() {
            if (this['_mesh']['_isReadabl' + 'e'])
                return this['_indices']['slice']();
            throw 'SubMesh:ca' + 'n\x27t\x20get\x20in' + 'dices\x20on\x20s' + 'ubMesh,mes' + 'h\x27s\x20isRead' + 'able\x20must\x20' + 'be\x20true.';
        }
        ['setIndices'](_0x5c60f6) {
            this['_indexBuff' + 'er']['setData'](_0x5c60f6, this['_indexStar' + 't'], 0x0, this['_indexCoun' + 't']);
        }
        ['destroy']() {
            this['_destroyed'] || (super['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_indexBuff' + 'er'] = null, this['_mesh'] = null, this['_boneIndic' + 'esList'] = null, this['_subIndexB' + 'ufferStart'] = null, this['_subIndexB' + 'ufferCount'] = null, this['_skinAnima' + 'tionDatas'] = null);
        }
    }
    _0x5d3cd0['_uniqueIDC' + 'ounter'] = 0x0, _0x5d3cd0['_type'] = _0x25a854['_typeCount' + 'er']++;
    class _0xb709c4 {
        constructor(_0x2f7f45, _0x3431df, _0x54d788) {
            this['subMeshInd' + 'ex'] = _0x2f7f45, this['batchIndex'] = _0x3431df, this['batchBoneI' + 'ndex'] = _0x54d788;
        }
    }
    class _0x2ace32 extends _0x2247ad['Resource'] {
        constructor(_0x5bf453 = !0x0) {
            super(), this['_tempVecto' + 'r30'] = new _0x43b358(), this['_tempVecto' + 'r31'] = new _0x43b358(), this['_tempVecto' + 'r32'] = new _0x43b358(), this['_minVertic' + 'esUpdate'] = -0x1, this['_maxVertic' + 'esUpdate'] = -0x1, this['_needUpdat' + 'eBounds'] = !0x0, this['_bounds'] = new _0x252754(new _0x43b358(), new _0x43b358()), this['_bufferSta' + 'te'] = new _0x145b1e(), this['_instanceB' + 'ufferState'] = new _0x145b1e(), this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_skinnedMa' + 'trixCaches'] = [], this['_vertexCou' + 'nt'] = 0x0, this['_indexForm' + 'at'] = _0xc55b22['IndexForma' + 't']['UInt16'], this['_isReadabl' + 'e'] = _0x5bf453, this['_subMeshes'] = [];
        }
        static ['__init__']() {
            var _0x143dda = _0x57b18d['_bullet'];
            _0x143dda && (_0x2ace32['_nativeTem' + 'pVector30'] = _0x143dda['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x2ace32['_nativeTem' + 'pVector31'] = _0x143dda['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x2ace32['_nativeTem' + 'pVector32'] = _0x143dda['btVector3_' + 'create'](0x0, 0x0, 0x0));
        }
        static ['load'](_0x3c180c, _0x5c27c5) {
            _0x2247ad['ILaya']['loader']['create'](_0x3c180c, _0x5c27c5, null, _0x2ace32['MESH']);
        }
        get ['inverseAbs' + 'oluteBindP' + 'oses']() {
            return this['_inverseBi' + 'ndPoses'];
        }
        get ['vertexCoun' + 't']() {
            return this['_vertexCou' + 'nt'];
        }
        get ['indexCount']() {
            return this['_indexBuff' + 'er']['indexCount'];
        }
        get ['subMeshCou' + 'nt']() {
            return this['_subMeshes']['length'];
        }
        get ['bounds']() {
            return this['_bounds'];
        }
        set ['bounds'](_0x217098) {
            this['_bounds'] !== _0x217098 && _0x217098['cloneTo'](this['_bounds']);
        }
        get ['indexForma' + 't']() {
            return this['_indexForm' + 'at'];
        }
        ['_getPositi' + 'onElement'](_0x32b119) {
            for (var _0x4a34b9 = _0x32b119['vertexDecl' + 'aration']['_vertexEle' + 'ments'], _0x2044c7 = 0x0, _0x217832 = _0x4a34b9['length']; _0x2044c7 < _0x217832; _0x2044c7++) {
                var _0x1d5176 = _0x4a34b9[_0x2044c7];
                if (_0x1d5176['_elementFo' + 'rmat'] === _0x163e87['Vector3'] && _0x1d5176['_elementUs' + 'age'] === _0x3fbee7['MESH_POSIT' + 'ION0'])
                    return _0x1d5176;
            }
            return null;
        }
        ['_getVertic' + 'eElementDa' + 'ta'](_0x4c20a9, _0x1085cd) {
            _0x4c20a9['length'] = this['_vertexCou' + 'nt'];
            var _0x13d288 = this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x4e5e0a = _0x13d288['getVertexE' + 'lementByUs' + 'age'](_0x1085cd);
            if (_0x4e5e0a) {
                var _0x3d90cb = this['_vertexBuf' + 'fer']['getUint8Da' + 'ta'](), _0x1db5a2 = this['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x298336 = _0x13d288['vertexStri' + 'de'], _0xa58754 = _0x298336 / 0x4, _0x402e45 = _0x4e5e0a['_offset'], _0x2c5a3a = _0x402e45 / 0x4;
                switch (_0x1085cd) {
                case _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                case _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                    for (var _0x546f2e = 0x0; _0x546f2e < this['_vertexCou' + 'nt']; _0x546f2e++) {
                        var _0x5b3ad1 = _0xa58754 * _0x546f2e + _0x2c5a3a;
                        _0x4c20a9[_0x546f2e] = new _0x2d45ed(_0x1db5a2[_0x5b3ad1], _0x1db5a2[_0x5b3ad1 + 0x1]);
                    }
                    break;
                case _0x3fbee7['MESH_POSIT' + 'ION0']:
                case _0x3fbee7['MESH_NORMA' + 'L0']:
                    for (_0x546f2e = 0x0; _0x546f2e < this['_vertexCou' + 'nt']; _0x546f2e++) {
                        _0x5b3ad1 = _0xa58754 * _0x546f2e + _0x2c5a3a, _0x4c20a9[_0x546f2e] = new _0x43b358(_0x1db5a2[_0x5b3ad1], _0x1db5a2[_0x5b3ad1 + 0x1], _0x1db5a2[_0x5b3ad1 + 0x2]);
                    }
                    break;
                case _0x3fbee7['MESH_TANGE' + 'NT0']:
                case _0x3fbee7['MESH_BLEND' + 'WEIGHT0']:
                    for (_0x546f2e = 0x0; _0x546f2e < this['_vertexCou' + 'nt']; _0x546f2e++) {
                        _0x5b3ad1 = _0xa58754 * _0x546f2e + _0x2c5a3a, _0x4c20a9[_0x546f2e] = new _0x4cec8f(_0x1db5a2[_0x5b3ad1], _0x1db5a2[_0x5b3ad1 + 0x1], _0x1db5a2[_0x5b3ad1 + 0x2], _0x1db5a2[_0x5b3ad1 + 0x3]);
                    }
                    break;
                case _0x3fbee7['MESH_COLOR' + '0']:
                    for (_0x546f2e = 0x0; _0x546f2e < this['_vertexCou' + 'nt']; _0x546f2e++) {
                        _0x5b3ad1 = _0xa58754 * _0x546f2e + _0x2c5a3a, _0x4c20a9[_0x546f2e] = new _0x151df0(_0x1db5a2[_0x5b3ad1], _0x1db5a2[_0x5b3ad1 + 0x1], _0x1db5a2[_0x5b3ad1 + 0x2], _0x1db5a2[_0x5b3ad1 + 0x3]);
                    }
                    break;
                case _0x3fbee7['MESH_BLEND' + 'INDICES0']:
                    for (_0x546f2e = 0x0; _0x546f2e < this['_vertexCou' + 'nt']; _0x546f2e++) {
                        _0x5b3ad1 = _0x298336 * _0x546f2e + _0x402e45, _0x4c20a9[_0x546f2e] = new _0x4cec8f(_0x3d90cb[_0x5b3ad1], _0x3d90cb[_0x5b3ad1 + 0x1], _0x3d90cb[_0x5b3ad1 + 0x2], _0x3d90cb[_0x5b3ad1 + 0x3]);
                    }
                    break;
                default:
                    throw 'Mesh:Unkno' + 'wn\x20element' + 'Usage.';
                }
            }
        }
        ['_setVertic' + 'eElementDa' + 'ta'](_0x4eede0, _0x9bf3bf) {
            var _0x3c2b90 = this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x2fb9eb = _0x3c2b90['getVertexE' + 'lementByUs' + 'age'](_0x9bf3bf);
            if (_0x2fb9eb) {
                var _0x2ba23a = this['_vertexBuf' + 'fer']['getUint8Da' + 'ta'](), _0x30023f = this['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x5a116e = _0x3c2b90['vertexStri' + 'de'], _0x1ac1ca = _0x5a116e / 0x4, _0xdc4c6c = _0x2fb9eb['_offset'], _0x5396ed = _0xdc4c6c / 0x4;
                switch (_0x9bf3bf) {
                case _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                case _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                    for (var _0x277dab = 0x0, _0x5a292b = _0x4eede0['length']; _0x277dab < _0x5a292b; _0x277dab++) {
                        var _0x32a086 = _0x1ac1ca * _0x277dab + _0x5396ed, _0x52e9f3 = _0x4eede0[_0x277dab];
                        _0x30023f[_0x32a086] = _0x52e9f3['x'], _0x30023f[_0x32a086 + 0x1] = _0x52e9f3['y'];
                    }
                    break;
                case _0x3fbee7['MESH_POSIT' + 'ION0']:
                case _0x3fbee7['MESH_NORMA' + 'L0']:
                    for (_0x277dab = 0x0, _0x5a292b = _0x4eede0['length']; _0x277dab < _0x5a292b; _0x277dab++) {
                        _0x32a086 = _0x1ac1ca * _0x277dab + _0x5396ed;
                        var _0xc02d20 = _0x4eede0[_0x277dab];
                        _0x30023f[_0x32a086] = _0xc02d20['x'], _0x30023f[_0x32a086 + 0x1] = _0xc02d20['y'], _0x30023f[_0x32a086 + 0x2] = _0xc02d20['z'];
                    }
                    break;
                case _0x3fbee7['MESH_TANGE' + 'NT0']:
                case _0x3fbee7['MESH_BLEND' + 'WEIGHT0']:
                    for (_0x277dab = 0x0, _0x5a292b = _0x4eede0['length']; _0x277dab < _0x5a292b; _0x277dab++) {
                        _0x32a086 = _0x1ac1ca * _0x277dab + _0x5396ed;
                        var _0x5923af = _0x4eede0[_0x277dab];
                        _0x30023f[_0x32a086] = _0x5923af['x'], _0x30023f[_0x32a086 + 0x1] = _0x5923af['y'], _0x30023f[_0x32a086 + 0x2] = _0x5923af['z'], _0x30023f[_0x32a086 + 0x3] = _0x5923af['w'];
                    }
                    break;
                case _0x3fbee7['MESH_COLOR' + '0']:
                    for (_0x277dab = 0x0, _0x5a292b = _0x4eede0['length']; _0x277dab < _0x5a292b; _0x277dab++) {
                        _0x32a086 = _0x1ac1ca * _0x277dab + _0x5396ed;
                        var _0x2fdcd6 = _0x4eede0[_0x277dab];
                        _0x30023f[_0x32a086] = _0x2fdcd6['r'], _0x30023f[_0x32a086 + 0x1] = _0x2fdcd6['g'], _0x30023f[_0x32a086 + 0x2] = _0x2fdcd6['b'], _0x30023f[_0x32a086 + 0x3] = _0x2fdcd6['a'];
                    }
                    break;
                case _0x3fbee7['MESH_BLEND' + 'INDICES0']:
                    for (_0x277dab = 0x0, _0x5a292b = _0x4eede0['length']; _0x277dab < _0x5a292b; _0x277dab++) {
                        _0x32a086 = _0x5a116e * _0x277dab + _0xdc4c6c, _0x5923af = _0x4eede0[_0x277dab], (_0x2ba23a[_0x32a086] = _0x5923af['x'], _0x2ba23a[_0x32a086 + 0x1] = _0x5923af['y'], _0x2ba23a[_0x32a086 + 0x2] = _0x5923af['z'], _0x2ba23a[_0x32a086 + 0x3] = _0x5923af['w']);
                    }
                    break;
                default:
                    throw 'Mesh:Unkno' + 'wn\x20element' + 'Usage.';
                }
                this['_minVertic' + 'esUpdate'] = 0x0, this['_maxVertic' + 'esUpdate'] = Number['MAX_SAFE_I' + 'NTEGER'];
            } else
                console['warn']('Mesh:\x20the\x20' + 'mesh\x20don\x27t' + '\x20have\x20\x20thi' + 's\x20VertexEl' + 'ement.');
        }
        ['_disposeRe' + 'source']() {
            for (var _0x436701 = 0x0, _0x5417dd = this['_subMeshes']['length']; _0x436701 < _0x5417dd; _0x436701++)
                this['_subMeshes'][_0x436701]['destroy']();
            this['_btTriangl' + 'eMesh'] && _0x57b18d['_bullet']['btStriding' + 'MeshInterf' + 'ace_destro' + 'y'](this['_btTriangl' + 'eMesh']), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_instanceB' + 'ufferState']['destroy'](), this['_setCPUMem' + 'ory'](0x0), this['_setGPUMem' + 'ory'](0x0), this['_bufferSta' + 'te'] = null, this['_instanceB' + 'ufferState'] = null, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_subMeshes'] = null, this['_btTriangl' + 'eMesh'] = null, this['_indexBuff' + 'er'] = null, this['_boneNames'] = null, this['_inverseBi' + 'ndPoses'] = null;
        }
        ['_setSubMes' + 'hes'](_0x3d001c) {
            this['_subMeshes'] = _0x3d001c;
            for (var _0x46c4a7 = 0x0, _0x4d1291 = _0x3d001c['length']; _0x46c4a7 < _0x4d1291; _0x46c4a7++)
                _0x3d001c[_0x46c4a7]['_indexInMe' + 'sh'] = _0x46c4a7;
        }
        ['_setBuffer'](_0x4ab6c2, _0x46f500) {
            var _0x5eea35 = this['_bufferSta' + 'te'];
            _0x5eea35['bind'](), _0x5eea35['applyVerte' + 'xBuffer'](_0x4ab6c2), _0x5eea35['applyIndex' + 'Buffer'](_0x46f500), _0x5eea35['unBind']();
            var _0x314642 = this['_instanceB' + 'ufferState'];
            _0x314642['bind'](), _0x314642['applyVerte' + 'xBuffer'](_0x4ab6c2), _0x314642['applyInsta' + 'nceVertexB' + 'uffer'](_0x5e7887['instance']['instanceWo' + 'rldMatrixB' + 'uffer']), _0x314642['applyInsta' + 'nceVertexB' + 'uffer'](_0x5e7887['instance']['instanceMV' + 'PMatrixBuf' + 'fer']), _0x314642['applyIndex' + 'Buffer'](_0x46f500), _0x314642['unBind']();
        }
        ['_getPhysic' + 'Mesh']() {
            if (!this['_btTriangl' + 'eMesh']) {
                for (var _0x1f95fc = _0x57b18d['_bullet'], _0x1aa6da = _0x1f95fc['btTriangle' + 'Mesh_creat' + 'e'](), _0x21d3c1 = _0x2ace32['_nativeTem' + 'pVector30'], _0x40cfa3 = _0x2ace32['_nativeTem' + 'pVector31'], _0xe0e85f = _0x2ace32['_nativeTem' + 'pVector32'], _0x4a1fc8 = this['_tempVecto' + 'r30'], _0x350733 = this['_tempVecto' + 'r31'], _0x29a05f = this['_tempVecto' + 'r32'], _0x541a20 = this['_vertexBuf' + 'fer'], _0x1ac36c = this['_getPositi' + 'onElement'](_0x541a20), _0x4d3642 = _0x541a20['getFloat32' + 'Data'](), _0x29bebd = _0x541a20['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x3e2452 = _0x1ac36c['_offset'] / 0x4, _0xc94359 = this['_indexBuff' + 'er']['getData'](), _0x120a71 = 0x0, _0xd75146 = _0xc94359['length']; _0x120a71 < _0xd75146; _0x120a71 += 0x3) {
                    var _0x592d25 = _0xc94359[_0x120a71] * _0x29bebd + _0x3e2452, _0x391ade = _0xc94359[_0x120a71 + 0x1] * _0x29bebd + _0x3e2452, _0x1345f5 = _0xc94359[_0x120a71 + 0x2] * _0x29bebd + _0x3e2452;
                    _0x4a1fc8['setValue'](_0x4d3642[_0x592d25], _0x4d3642[_0x592d25 + 0x1], _0x4d3642[_0x592d25 + 0x2]), _0x350733['setValue'](_0x4d3642[_0x391ade], _0x4d3642[_0x391ade + 0x1], _0x4d3642[_0x391ade + 0x2]), _0x29a05f['setValue'](_0x4d3642[_0x1345f5], _0x4d3642[_0x1345f5 + 0x1], _0x4d3642[_0x1345f5 + 0x2]), _0x101904['_convertTo' + 'BulletVec3'](_0x4a1fc8, _0x21d3c1, !0x0), _0x101904['_convertTo' + 'BulletVec3'](_0x350733, _0x40cfa3, !0x0), _0x101904['_convertTo' + 'BulletVec3'](_0x29a05f, _0xe0e85f, !0x0), _0x1f95fc['btTriangle' + 'Mesh_addTr' + 'iangle'](_0x1aa6da, _0x21d3c1, _0x40cfa3, _0xe0e85f, !0x0);
                }
                this['_btTriangl' + 'eMesh'] = _0x1aa6da;
            }
            return this['_btTriangl' + 'eMesh'];
        }
        ['_uploadVer' + 'ticesData']() {
            var _0xbc6070 = this['_minVertic' + 'esUpdate'], _0x4ecb44 = this['_maxVertic' + 'esUpdate'];
            if (-0x1 !== _0xbc6070 && -0x1 !== _0x4ecb44) {
                var _0x256848 = _0xbc6070;
                this['_vertexBuf' + 'fer']['setData'](this['_vertexBuf' + 'fer']['getUint8Da' + 'ta']()['buffer'], _0x256848, _0x256848, _0x4ecb44 - _0xbc6070), this['_minVertic' + 'esUpdate'] = -0x1, this['_maxVertic' + 'esUpdate'] = -0x1;
            }
        }
        ['getSubMesh'](_0x280483) {
            return this['_subMeshes'][_0x280483];
        }
        ['getPositio' + 'ns'](_0x59db1e) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20posit' + 'ions\x20on\x20me' + 'sh,isReada' + 'ble\x20must\x20b' + 'e\x20true.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x59db1e, _0x3fbee7['MESH_POSIT' + 'ION0']);
        }
        ['setPositio' + 'ns'](_0x324a53) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setPo' + 'sition()\x20n' + 'eed\x20isRead' + 'able\x20must\x20' + 'be\x20true\x20or' + '\x20use\x20setVe' + 'rtices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x324a53, _0x3fbee7['MESH_POSIT' + 'ION0']), this['_needUpdat' + 'eBounds'] = !0x0;
        }
        ['getColors'](_0x1e73e7) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x1e73e7, _0x3fbee7['MESH_COLOR' + '0']);
        }
        ['setColors'](_0x51cf2d) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setCo' + 'lors()\x20nee' + 'd\x20isReadab' + 'le\x20must\x20be' + '\x20true\x20or\x20u' + 'se\x20setVert' + 'ices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x51cf2d, _0x3fbee7['MESH_COLOR' + '0']);
        }
        ['getUVs'](_0x1a31d2, _0x172073 = 0x0) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20uvs\x20o' + 'n\x20mesh,isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '.';
            switch (_0x172073) {
            case 0x0:
                this['_getVertic' + 'eElementDa' + 'ta'](_0x1a31d2, _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                break;
            case 0x1:
                this['_getVertic' + 'eElementDa' + 'ta'](_0x1a31d2, _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
                break;
            default:
                throw 'Mesh:Inval' + 'id\x20channel' + '.';
            }
        }
        ['setUVs'](_0x5a8838, _0x3c461d = 0x0) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setUV' + 's()\x20need\x20i' + 'sReadable\x20' + 'must\x20be\x20tr' + 'ue\x20or\x20use\x20' + 'setVertice' + 's().';
            switch (_0x3c461d) {
            case 0x0:
                this['_setVertic' + 'eElementDa' + 'ta'](_0x5a8838, _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                break;
            case 0x1:
                this['_setVertic' + 'eElementDa' + 'ta'](_0x5a8838, _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
                break;
            default:
                throw 'Mesh:Inval' + 'id\x20channel' + '.';
            }
        }
        ['getNormals'](_0x5e8196) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x5e8196, _0x3fbee7['MESH_NORMA' + 'L0']);
        }
        ['setNormals'](_0x383dd2) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setNo' + 'rmals()\x20ne' + 'ed\x20must\x20be' + '\x20true\x20or\x20u' + 'se\x20setVert' + 'ices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x383dd2, _0x3fbee7['MESH_NORMA' + 'L0']);
        }
        ['getTangent' + 's'](_0x290cd1) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x290cd1, _0x3fbee7['MESH_TANGE' + 'NT0']);
        }
        ['setTangent' + 's'](_0xaa01ac) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setTa' + 'ngents()\x20n' + 'eed\x20isRead' + 'able\x20must\x20' + 'be\x20true\x20or' + '\x20use\x20setVe' + 'rtices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0xaa01ac, _0x3fbee7['MESH_TANGE' + 'NT0']);
        }
        ['getBoneWei' + 'ghts'](_0x21e1ad) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20boneW' + 'eights\x20on\x20' + 'mesh,isRea' + 'dable\x20must' + '\x20be\x20true.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x21e1ad, _0x3fbee7['MESH_BLEND' + 'WEIGHT0']);
        }
        ['setBoneWei' + 'ghts'](_0x5b8e5d) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setBo' + 'neWeights(' + ')\x20need\x20isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '\x20or\x20use\x20se' + 'tVertices(' + ').';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x5b8e5d, _0x3fbee7['MESH_BLEND' + 'WEIGHT0']);
        }
        ['getBoneInd' + 'ices'](_0xa9d11f) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20boneI' + 'ndices\x20on\x20' + 'mesh,isRea' + 'dable\x20must' + '\x20be\x20true.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0xa9d11f, _0x3fbee7['MESH_BLEND' + 'INDICES0']);
        }
        ['setBoneInd' + 'ices'](_0x42ff1a) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setBo' + 'neIndices(' + ')\x20need\x20isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '\x20or\x20use\x20se' + 'tVertices(' + ').';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x42ff1a, _0x3fbee7['MESH_BLEND' + 'INDICES0']);
        }
        ['markAsUnre' + 'adbale']() {
            this['_uploadVer' + 'ticesData'](), this['_vertexBuf' + 'fer']['markAsUnre' + 'adbale'](), this['_isReadabl' + 'e'] = !0x1;
        }
        ['getVertexD' + 'eclaration']() {
            return this['_vertexBuf' + 'fer']['_vertexDec' + 'laration'];
        }
        ['getVertice' + 's']() {
            if (this['_isReadabl' + 'e'])
                return this['_vertexBuf' + 'fer']['getUint8Da' + 'ta']()['buffer']['slice'](0x0);
            throw 'Mesh:can\x27t' + '\x20get\x20verti' + 'ces\x20on\x20mes' + 'h,isReadab' + 'le\x20must\x20be' + '\x20true.';
        }
        ['setVertice' + 's'](_0x2a1921) {
            this['_vertexBuf' + 'fer']['setData'](_0x2a1921), this['_needUpdat' + 'eBounds'] = !0x0;
        }
        ['getIndices']() {
            if (this['_isReadabl' + 'e'])
                return this['_indexBuff' + 'er']['getData']()['slice']();
            throw 'Mesh:can\x27t' + '\x20get\x20indic' + 'es\x20on\x20subM' + 'esh,mesh\x27s' + '\x20isReadabl' + 'e\x20must\x20be\x20' + 'true.';
        }
        ['setIndices'](_0x363489) {
            var _0x2e4c63;
            _0x363489 instanceof Uint32Array ? _0x2e4c63 = _0xc55b22['IndexForma' + 't']['UInt32'] : _0x363489 instanceof Uint16Array ? _0x2e4c63 = _0xc55b22['IndexForma' + 't']['UInt16'] : _0x363489 instanceof Uint8Array && (_0x2e4c63 = _0xc55b22['IndexForma' + 't']['UInt8']);
            var _0x233c94 = this['_indexBuff' + 'er'];
            this['_indexForm' + 'at'] === _0x2e4c63 && _0x233c94['indexCount'] === _0x363489['length'] || (_0x233c94['destroy'](), this['_indexBuff' + 'er'] = _0x233c94 = new _0x2a6e6b(_0x2e4c63, _0x363489['length'], _0x2247ad['LayaGL']['instance']['STATIC_DRA' + 'W'], this['_isReadabl' + 'e'])), _0x233c94['setData'](_0x363489), this['_indexForm' + 'at'] = _0x2e4c63;
        }
        ['calculateB' + 'ounds']() {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20calculate' + '\x20bounds\x20on' + '\x20subMesh,m' + 'esh\x27s\x20isRe' + 'adable\x20mus' + 't\x20be\x20true.';
            if (this['_needUpdat' + 'eBounds']) {
                var _0x492e26 = this['_tempVecto' + 'r30'], _0xa8a805 = this['_tempVecto' + 'r31'];
                _0x492e26['x'] = _0x492e26['y'] = _0x492e26['z'] = Number['MAX_VALUE'], _0xa8a805['x'] = _0xa8a805['y'] = _0xa8a805['z'] = -Number['MAX_VALUE'];
                for (var _0x4eed5c = this['_vertexBuf' + 'fer'], _0xa5399a = this['_getPositi' + 'onElement'](_0x4eed5c), _0x2af123 = _0x4eed5c['getFloat32' + 'Data'](), _0x3febfc = _0x4eed5c['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x4be0fd = _0xa5399a['_offset'] / 0x4, _0x299e0d = 0x0, _0x533e92 = _0x2af123['length']; _0x299e0d < _0x533e92; _0x299e0d += _0x3febfc) {
                    var _0x15cde9 = _0x299e0d + _0x4be0fd, _0x3732c9 = _0x2af123[_0x15cde9], _0x5aef6c = _0x2af123[_0x15cde9 + 0x1], _0x2dba9b = _0x2af123[_0x15cde9 + 0x2];
                    _0x492e26['x'] = Math['min'](_0x492e26['x'], _0x3732c9), _0x492e26['y'] = Math['min'](_0x492e26['y'], _0x5aef6c), _0x492e26['z'] = Math['min'](_0x492e26['z'], _0x2dba9b), _0xa8a805['x'] = Math['max'](_0xa8a805['x'], _0x3732c9), _0xa8a805['y'] = Math['max'](_0xa8a805['y'], _0x5aef6c), _0xa8a805['z'] = Math['max'](_0xa8a805['z'], _0x2dba9b);
                }
                this['_bounds']['setMin'](_0x492e26), this['_bounds']['setMax'](_0xa8a805), this['_needUpdat' + 'eBounds'] = !0x1;
            }
        }
        ['cloneTo'](_0x3bcfe1) {
            var _0xbd2c73 = _0x3bcfe1, _0x5e8c77 = this['_vertexBuf' + 'fer'], _0x475acb = new _0x26d078(_0x5e8c77['_byteLengt' + 'h'], _0x5e8c77['bufferUsag' + 'e'], _0x5e8c77['canRead']);
            _0x475acb['vertexDecl' + 'aration'] = _0x5e8c77['vertexDecl' + 'aration'], _0x475acb['setData'](_0x5e8c77['getUint8Da' + 'ta']()['slice']()['buffer']), _0xbd2c73['_vertexBuf' + 'fer'] = _0x475acb, _0xbd2c73['_vertexCou' + 'nt'] = this['_vertexCou' + 'nt'];
            var _0x5cb988, _0x14170e = this['_indexBuff' + 'er'], _0x1991d1 = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], _0x14170e['indexCount'], _0x14170e['bufferUsag' + 'e'], _0x14170e['canRead']);
            _0x1991d1['setData'](_0x14170e['getData']()['slice']()), _0xbd2c73['_indexBuff' + 'er'] = _0x1991d1, _0xbd2c73['_setBuffer'](_0xbd2c73['_vertexBuf' + 'fer'], _0x1991d1), _0xbd2c73['_setCPUMem' + 'ory'](this['cpuMemory']), _0xbd2c73['_setGPUMem' + 'ory'](this['gpuMemory']);
            var _0xd532d3 = this['_boneNames'];
            if (_0xd532d3) {
                var _0x1e577f = _0xbd2c73['_boneNames'] = [];
                for (_0x5cb988 = 0x0; _0x5cb988 < _0xd532d3['length']; _0x5cb988++)
                    _0x1e577f[_0x5cb988] = _0xd532d3[_0x5cb988];
            }
            var _0x389ad8 = this['_inverseBi' + 'ndPoses'];
            if (_0x389ad8) {
                var _0x2c0362 = _0xbd2c73['_inverseBi' + 'ndPoses'] = [];
                for (_0x5cb988 = 0x0; _0x5cb988 < _0x389ad8['length']; _0x5cb988++)
                    _0x2c0362[_0x5cb988] = _0x389ad8[_0x5cb988];
            }
            var _0x907be = this['_skinnedMa' + 'trixCaches']['length'];
            for (_0xbd2c73['_skinnedMa' + 'trixCaches']['length'] = _0x907be, _0x5cb988 = 0x0; _0x5cb988 < _0x907be; _0x5cb988++) {
                var _0x3e5971 = this['_skinnedMa' + 'trixCaches'][_0x5cb988];
                _0xbd2c73['_skinnedMa' + 'trixCaches'][_0x5cb988] = new _0xb709c4(_0x3e5971['subMeshInd' + 'ex'], _0x3e5971['batchIndex'], _0x3e5971['batchBoneI' + 'ndex']);
            }
            for (_0x5cb988 = 0x0; _0x5cb988 < this['subMeshCou' + 'nt']; _0x5cb988++) {
                var _0x2b444b = this['_subMeshes'][_0x5cb988], _0x4b2b48 = _0x2b444b['_subIndexB' + 'ufferStart'], _0x430258 = _0x2b444b['_subIndexB' + 'ufferCount'], _0x26bd92 = _0x2b444b['_boneIndic' + 'esList'], _0x56862c = new _0x5d3cd0(_0xbd2c73);
                _0x56862c['_subIndexB' + 'ufferStart']['length'] = _0x4b2b48['length'], _0x56862c['_subIndexB' + 'ufferCount']['length'] = _0x430258['length'], _0x56862c['_boneIndic' + 'esList']['length'] = _0x26bd92['length'];
                for (var _0x1ee30b = 0x0; _0x1ee30b < _0x4b2b48['length']; _0x1ee30b++)
                    _0x56862c['_subIndexB' + 'ufferStart'][_0x1ee30b] = _0x4b2b48[_0x1ee30b];
                for (_0x1ee30b = 0x0; _0x1ee30b < _0x430258['length']; _0x1ee30b++)
                    _0x56862c['_subIndexB' + 'ufferCount'][_0x1ee30b] = _0x430258[_0x1ee30b];
                for (_0x1ee30b = 0x0; _0x1ee30b < _0x26bd92['length']; _0x1ee30b++)
                    _0x56862c['_boneIndic' + 'esList'][_0x1ee30b] = new Uint16Array(_0x26bd92[_0x1ee30b]);
                _0x56862c['_indexBuff' + 'er'] = _0x1991d1, _0x56862c['_indexStar' + 't'] = _0x2b444b['_indexStar' + 't'], _0x56862c['_indexCoun' + 't'] = _0x2b444b['_indexCoun' + 't'], _0x56862c['_indices'] = new Uint16Array(_0x1991d1['getData']()['buffer'], 0x2 * _0x2b444b['_indexStar' + 't'], _0x2b444b['_indexCoun' + 't']);
                var _0x427615 = _0xbd2c73['_vertexBuf' + 'fer'];
                _0x56862c['_vertexBuf' + 'fer'] = _0x427615, _0xbd2c73['_subMeshes']['push'](_0x56862c);
            }
            _0xbd2c73['_setSubMes' + 'hes'](_0xbd2c73['_subMeshes']);
        }
        ['clone']() {
            var _0x6d4f8d = new _0x2ace32();
            return this['cloneTo'](_0x6d4f8d), _0x6d4f8d;
        }
    }
    _0x2ace32['MESH'] = 'MESH';
    class _0x39a97b {
        static ['__init__']() {
        }
        static ['_createMes' + 'h'](_0x4d9041, _0x143070, _0xe3e364) {
            var _0xfe75df = _0x2247ad['LayaGL']['instance'], _0x53c8fd = new _0x2ace32(), _0x21ff0a = new _0x5d3cd0(_0x53c8fd), _0x1167a0 = new _0x26d078(0x4 * _0x143070['length'], _0xfe75df['STATIC_DRA' + 'W'], !0x0);
            _0x1167a0['vertexDecl' + 'aration'] = _0x4d9041, _0x1167a0['setData'](_0x143070['buffer']), _0x53c8fd['_vertexBuf' + 'fer'] = _0x1167a0, _0x53c8fd['_vertexCou' + 'nt'] = _0x1167a0['_byteLengt' + 'h'] / _0x4d9041['vertexStri' + 'de'];
            var _0x5e6265 = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], _0xe3e364['length'], _0xfe75df['STATIC_DRA' + 'W'], !0x0);
            _0x5e6265['setData'](_0xe3e364), _0x53c8fd['_indexBuff' + 'er'] = _0x5e6265, _0x53c8fd['_setBuffer'](_0x1167a0, _0x5e6265), _0x21ff0a['_vertexBuf' + 'fer'] = _0x1167a0, _0x21ff0a['_indexBuff' + 'er'] = _0x5e6265, _0x21ff0a['_setIndexR' + 'ange'](0x0, _0x5e6265['indexCount']);
            var _0x5cad22 = _0x21ff0a['_subIndexB' + 'ufferStart'], _0x1bfb82 = _0x21ff0a['_subIndexB' + 'ufferCount'], _0x2295fb = _0x21ff0a['_boneIndic' + 'esList'];
            _0x5cad22['length'] = 0x1, _0x1bfb82['length'] = 0x1, _0x2295fb['length'] = 0x1, _0x5cad22[0x0] = 0x0, _0x1bfb82[0x0] = _0x5e6265['indexCount'];
            var _0x380e5e = [];
            _0x380e5e['push'](_0x21ff0a), _0x53c8fd['_setSubMes' + 'hes'](_0x380e5e), _0x53c8fd['calculateB' + 'ounds']();
            var _0x37e9a = _0x1167a0['_byteLengt' + 'h'] + _0x5e6265['_byteLengt' + 'h'];
            return _0x53c8fd['_setCPUMem' + 'ory'](_0x37e9a), _0x53c8fd['_setGPUMem' + 'ory'](_0x37e9a), _0x53c8fd;
        }
        static ['createBox'](_0x103431 = 0x1, _0x3729b9 = 0x1, _0xd2c4dc = 0x1) {
            var _0x28141b = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x2f584d = _0x103431 / 0x2, _0x588e6a = _0x3729b9 / 0x2, _0x5ced00 = _0xd2c4dc / 0x2, _0xce4746 = new Float32Array([
                    -_0x2f584d,
                    _0x588e6a,
                    -_0x5ced00,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    _0x2f584d,
                    _0x588e6a,
                    -_0x5ced00,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x0,
                    _0x2f584d,
                    _0x588e6a,
                    _0x5ced00,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x1,
                    -_0x2f584d,
                    _0x588e6a,
                    _0x5ced00,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    -_0x2f584d,
                    -_0x588e6a,
                    -_0x5ced00,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    _0x2f584d,
                    -_0x588e6a,
                    -_0x5ced00,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x1,
                    _0x2f584d,
                    -_0x588e6a,
                    _0x5ced00,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x0,
                    -_0x2f584d,
                    -_0x588e6a,
                    _0x5ced00,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    -_0x2f584d,
                    _0x588e6a,
                    -_0x5ced00,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    -_0x2f584d,
                    _0x588e6a,
                    _0x5ced00,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    -_0x2f584d,
                    -_0x588e6a,
                    _0x5ced00,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x2f584d,
                    -_0x588e6a,
                    -_0x5ced00,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x2f584d,
                    _0x588e6a,
                    -_0x5ced00,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    _0x2f584d,
                    _0x588e6a,
                    _0x5ced00,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    _0x2f584d,
                    -_0x588e6a,
                    _0x5ced00,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x2f584d,
                    -_0x588e6a,
                    -_0x5ced00,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x2f584d,
                    _0x588e6a,
                    _0x5ced00,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x2f584d,
                    _0x588e6a,
                    _0x5ced00,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    _0x2f584d,
                    -_0x588e6a,
                    _0x5ced00,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1,
                    -_0x2f584d,
                    -_0x588e6a,
                    _0x5ced00,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    -_0x2f584d,
                    _0x588e6a,
                    -_0x5ced00,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x0,
                    _0x2f584d,
                    _0x588e6a,
                    -_0x5ced00,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    _0x2f584d,
                    -_0x588e6a,
                    -_0x5ced00,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    -_0x2f584d,
                    -_0x588e6a,
                    -_0x5ced00,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x1
                ]), _0x509c39 = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x8,
                    0x9,
                    0xa,
                    0xa,
                    0xb,
                    0x8,
                    0xc,
                    0xf,
                    0xe,
                    0xe,
                    0xd,
                    0xc,
                    0x10,
                    0x11,
                    0x12,
                    0x12,
                    0x13,
                    0x10,
                    0x14,
                    0x17,
                    0x16,
                    0x16,
                    0x15,
                    0x14
                ]);
            return _0x39a97b['_createMes' + 'h'](_0x28141b, _0xce4746, _0x509c39);
        }
        static ['createCaps' + 'ule'](_0x2efa81 = 0.5, _0x5a570a = 0x2, _0x574c82 = 0x10, _0x5e486c = 0x20) {
            var _0x3982ef, _0x611756, _0x15ac7b = (_0x574c82 + 0x1) * (_0x5e486c + 0x1) * 0x2 + 0x2 * (_0x5e486c + 0x1), _0x3e9f53 = 0x3 * _0x574c82 * (_0x5e486c + 0x1) * 0x2 * 0x2 + 0x2 * _0x5e486c * 0x3, _0x26e779 = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x33947b = _0x26e779['vertexStri' + 'de'] / 0x4, _0x1948f1 = new Float32Array(_0x15ac7b * _0x33947b), _0x1883bd = new Uint16Array(_0x3e9f53), _0x5cbc8a = Math['PI'] / 0x2 / _0x574c82, _0x4e2675 = 0x2 * Math['PI'] / _0x5e486c, _0x5018d3 = _0x5a570a / 0x2 - _0x2efa81, _0x50c882 = 0x0, _0x305b59 = 0x0, _0x364cbc = 0x0, _0x42aa61 = 0x0, _0x3ccbd3 = 0x0, _0x5394bc = 0x0;
            for (_0x3982ef = 0x0; _0x3982ef <= _0x574c82; _0x3982ef++)
                for (_0x611756 = 0x0; _0x611756 <= _0x5e486c; _0x611756++)
                    _0x50c882 = _0x2efa81 * Math['cos'](_0x3982ef * _0x5cbc8a) * Math['cos'](_0x611756 * _0x4e2675 + Math['PI']), _0x305b59 = _0x2efa81 * Math['sin'](_0x3982ef * _0x5cbc8a), _0x364cbc = _0x2efa81 * Math['cos'](_0x3982ef * _0x5cbc8a) * Math['sin'](_0x611756 * _0x4e2675 + Math['PI']), _0x1948f1[_0x42aa61++] = _0x50c882, _0x1948f1[_0x42aa61++] = _0x305b59 + _0x5018d3, _0x1948f1[_0x42aa61++] = _0x364cbc, _0x1948f1[_0x42aa61++] = _0x50c882, _0x1948f1[_0x42aa61++] = _0x305b59, _0x1948f1[_0x42aa61++] = _0x364cbc, _0x1948f1[_0x42aa61++] = 0x1 - _0x611756 / _0x5e486c, _0x1948f1[_0x42aa61++] = (0x1 - _0x3982ef / _0x574c82) * (Math['PI'] * _0x2efa81 / 0x2 / (_0x5a570a + Math['PI'] * _0x2efa81)), _0x3982ef < _0x574c82 && (_0x1883bd[_0x3ccbd3++] = _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + (_0x5e486c + 0x1), _0x1883bd[_0x3ccbd3++] = _0x3982ef * (_0x5e486c + 0x1) + _0x611756, _0x1883bd[_0x3ccbd3++] = _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + 0x1, _0x1883bd[_0x3ccbd3++] = _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + _0x5e486c, _0x1883bd[_0x3ccbd3++] = _0x3982ef * (_0x5e486c + 0x1) + _0x611756, _0x1883bd[_0x3ccbd3++] = _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + (_0x5e486c + 0x1));
            for (_0x5394bc += (_0x574c82 + 0x1) * (_0x5e486c + 0x1), _0x3982ef = 0x0; _0x3982ef <= _0x574c82; _0x3982ef++)
                for (_0x611756 = 0x0; _0x611756 <= _0x5e486c; _0x611756++)
                    _0x50c882 = _0x2efa81 * Math['cos'](_0x3982ef * _0x5cbc8a) * Math['cos'](_0x611756 * _0x4e2675 + Math['PI']), _0x305b59 = _0x2efa81 * Math['sin'](-_0x3982ef * _0x5cbc8a), _0x364cbc = _0x2efa81 * Math['cos'](_0x3982ef * _0x5cbc8a) * Math['sin'](_0x611756 * _0x4e2675 + Math['PI']), _0x1948f1[_0x42aa61++] = _0x50c882, _0x1948f1[_0x42aa61++] = _0x305b59 - _0x5018d3, _0x1948f1[_0x42aa61++] = _0x364cbc, _0x1948f1[_0x42aa61++] = _0x50c882, _0x1948f1[_0x42aa61++] = _0x305b59, _0x1948f1[_0x42aa61++] = _0x364cbc, _0x1948f1[_0x42aa61++] = 0x1 - _0x611756 / _0x5e486c, _0x1948f1[_0x42aa61++] = (_0x3982ef / _0x574c82 * (Math['PI'] * _0x2efa81 / 0x2) + (_0x5a570a + Math['PI'] * _0x2efa81 / 0x2)) / (_0x5a570a + Math['PI'] * _0x2efa81), _0x3982ef < _0x574c82 && (_0x1883bd[_0x3ccbd3++] = _0x5394bc + _0x3982ef * (_0x5e486c + 0x1) + _0x611756, _0x1883bd[_0x3ccbd3++] = _0x5394bc + _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + (_0x5e486c + 0x1), _0x1883bd[_0x3ccbd3++] = _0x5394bc + _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + 0x1, _0x1883bd[_0x3ccbd3++] = _0x5394bc + _0x3982ef * (_0x5e486c + 0x1) + _0x611756, _0x1883bd[_0x3ccbd3++] = _0x5394bc + _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + _0x5e486c, _0x1883bd[_0x3ccbd3++] = _0x5394bc + _0x3982ef * (_0x5e486c + 0x1) + _0x611756 + (_0x5e486c + 0x1));
            for (_0x5394bc += (_0x574c82 + 0x1) * (_0x5e486c + 0x1), _0x611756 = 0x0; _0x611756 <= _0x5e486c; _0x611756++)
                _0x50c882 = _0x2efa81 * Math['cos'](_0x611756 * _0x4e2675 + Math['PI']), _0x305b59 = _0x5018d3, _0x364cbc = _0x2efa81 * Math['sin'](_0x611756 * _0x4e2675 + Math['PI']), _0x1948f1[_0x42aa61++] = _0x50c882, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = _0x50c882, _0x1948f1[_0x42aa61++] = _0x305b59, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = -_0x305b59, _0x1948f1[_0x42aa61++] = _0x364cbc, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = _0x364cbc, _0x1948f1[_0x42aa61++] = _0x50c882, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = _0x50c882, _0x1948f1[_0x42aa61++] = 0x0, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = 0x0, _0x1948f1[_0x42aa61++] = _0x364cbc, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = _0x364cbc, _0x1948f1[_0x42aa61++] = 0x1 - 0x1 * _0x611756 / _0x5e486c, _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = 0x1 - 0x1 * _0x611756 / _0x5e486c, _0x1948f1[_0x42aa61++] = Math['PI'] * _0x2efa81 / 0x2 / (_0x5a570a + Math['PI'] * _0x2efa81), _0x1948f1[_0x42aa61 + 0x8 * (_0x5e486c + 0x1) - 0x1] = (Math['PI'] * _0x2efa81 / 0x2 + _0x5a570a) / (_0x5a570a + Math['PI'] * _0x2efa81);
            for (_0x611756 = 0x0; _0x611756 < _0x5e486c; _0x611756++)
                _0x1883bd[_0x3ccbd3++] = _0x611756 + _0x5394bc + (_0x5e486c + 0x1), _0x1883bd[_0x3ccbd3++] = _0x611756 + _0x5394bc + 0x1, _0x1883bd[_0x3ccbd3++] = _0x611756 + _0x5394bc, _0x1883bd[_0x3ccbd3++] = _0x611756 + _0x5394bc + (_0x5e486c + 0x1), _0x1883bd[_0x3ccbd3++] = _0x611756 + _0x5394bc + (_0x5e486c + 0x1) + 0x1, _0x1883bd[_0x3ccbd3++] = _0x611756 + _0x5394bc + 0x1;
            return _0x5394bc += 0x2 * (_0x5e486c + 0x1), _0x39a97b['_createMes' + 'h'](_0x26e779, _0x1948f1, _0x1883bd);
        }
        static ['createCone'](_0x2b0464 = 0.5, _0x2f0a36 = 0x1, _0x316a53 = 0x20) {
            for (var _0xb9b152, _0x485fb9 = _0x316a53 + 0x1 + 0x1 + 0x2 * (_0x316a53 + 0x1), _0x1a59b3 = 0x6 * _0x316a53 + 0x3 * _0x316a53, _0x5287ea = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x4ff5cd = _0x5287ea['vertexStri' + 'de'] / 0x4, _0x372ff1 = new Float32Array(_0x485fb9 * _0x4ff5cd), _0x39fb07 = new Uint16Array(_0x1a59b3), _0x1d8187 = 0x2 * Math['PI'] / _0x316a53, _0x2ffd00 = _0x2f0a36 / 0x2, _0x568884 = 0x0, _0xefa34a = 0x0, _0x235ded = 0x0, _0x506a39 = 0x0, _0x4d53a5 = 0x0, _0x3ea304 = new _0x43b358(), _0x3ca3d3 = new _0x43b358(0x0, -0x1, 0x0), _0x500799 = new _0x43b358(0x0, _0x2ffd00, 0x0), _0x565d40 = new _0x43b358(), _0x2ec599 = new _0x43b358(), _0x46f611 = new _0x7cf2d3(), _0x5c30e9 = new _0x43b358(), _0x4a384e = 0x0, _0x5d66e5 = 0x0, _0x3de756 = 0x0; _0x3de756 <= _0x316a53; _0x3de756++)
                _0x568884 = _0x3de756 * _0x1d8187, _0x235ded = Math['cos'](_0x568884 + Math['PI']) * _0x2b0464, _0x506a39 = _0x2ffd00, _0x4d53a5 = Math['sin'](_0x568884 + Math['PI']) * _0x2b0464, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = _0x235ded, _0x372ff1[_0x4a384e++] = _0x506a39, _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = -_0x506a39, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = _0x4d53a5, _0x3ea304['x'] = _0x235ded, _0x3ea304['y'] = 0x0, _0x3ea304['z'] = _0x4d53a5, _0x565d40['x'] = _0x235ded, _0x565d40['y'] = -_0x506a39, _0x565d40['z'] = _0x4d53a5, _0x43b358['subtract'](_0x565d40, _0x500799, _0x2ec599), _0x43b358['normalize'](_0x2ec599, _0x2ec599), _0xb9b152 = Math['acos'](_0x43b358['dot'](_0x3ca3d3, _0x2ec599)), _0x43b358['cross'](_0x3ca3d3, _0x2ec599, _0x5c30e9), _0x43b358['normalize'](_0x5c30e9, _0x5c30e9), _0x7cf2d3['createFrom' + 'AxisAngle'](_0x5c30e9, _0xb9b152, _0x46f611), _0x43b358['normalize'](_0x3ea304, _0x3ea304), _0x43b358['transformQ' + 'uat'](_0x3ea304, _0x46f611, _0x3ea304), _0x43b358['normalize'](_0x3ea304, _0x3ea304), _0x372ff1[_0x4a384e++] = _0x3ea304['x'], _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = _0x3ea304['x'], _0x372ff1[_0x4a384e++] = _0x3ea304['y'], _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = _0x3ea304['y'], _0x372ff1[_0x4a384e++] = _0x3ea304['z'], _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = _0x3ea304['z'], _0x372ff1[_0x4a384e++] = 0x1 - 0x1 * _0x3de756 / _0x316a53, _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = 0x1 - 0x1 * _0x3de756 / _0x316a53, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e + 0x8 * (_0x316a53 + 0x1) - 0x1] = 0x1;
            _0x4a384e += 0x8 * (_0x316a53 + 0x1);
            for (var _0x23aa25 = 0x0; _0x23aa25 < _0x316a53; _0x23aa25++)
                _0x39fb07[_0x5d66e5++] = _0x23aa25 + _0xefa34a + (_0x316a53 + 0x1), _0x39fb07[_0x5d66e5++] = _0x23aa25 + _0xefa34a + 0x1, _0x39fb07[_0x5d66e5++] = _0x23aa25 + _0xefa34a, _0x39fb07[_0x5d66e5++] = _0x23aa25 + _0xefa34a + (_0x316a53 + 0x1), _0x39fb07[_0x5d66e5++] = _0x23aa25 + _0xefa34a + (_0x316a53 + 0x1) + 0x1, _0x39fb07[_0x5d66e5++] = _0x23aa25 + _0xefa34a + 0x1;
            _0xefa34a += 0x2 * (_0x316a53 + 0x1);
            for (var _0x37dd68 = 0x0; _0x37dd68 <= _0x316a53; _0x37dd68++)
                0x0 === _0x37dd68 && (_0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e++] = -_0x2ffd00, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e++] = -0x1, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e++] = 0.5, _0x372ff1[_0x4a384e++] = 0.5), _0x568884 = _0x37dd68 * _0x1d8187, _0x235ded = Math['cos'](_0x568884 + Math['PI']) * _0x2b0464, _0x506a39 = -_0x2ffd00, _0x4d53a5 = Math['sin'](_0x568884 + Math['PI']) * _0x2b0464, _0x372ff1[_0x4a384e++] = _0x235ded, _0x372ff1[_0x4a384e++] = _0x506a39, _0x372ff1[_0x4a384e++] = _0x4d53a5, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e++] = -0x1, _0x372ff1[_0x4a384e++] = 0x0, _0x372ff1[_0x4a384e++] = 0.5 + 0.5 * Math['cos'](_0x568884), _0x372ff1[_0x4a384e++] = 0.5 + 0.5 * Math['sin'](_0x568884);
            for (var _0x356523 = 0x0; _0x356523 < _0x316a53; _0x356523++)
                _0x39fb07[_0x5d66e5++] = 0x0 + _0xefa34a, _0x39fb07[_0x5d66e5++] = _0x356523 + 0x2 + _0xefa34a, _0x39fb07[_0x5d66e5++] = _0x356523 + 0x1 + _0xefa34a;
            return _0xefa34a += _0x316a53 + 0x1 + 0x1, _0x39a97b['_createMes' + 'h'](_0x5287ea, _0x372ff1, _0x39fb07);
        }
        static ['createCyli' + 'nder'](_0x13414c = 0.5, _0x4495ec = 0x2, _0xd2224 = 0x20) {
            for (var _0x344785 = _0xd2224 + 0x1 + 0x1 + 0x2 * (_0xd2224 + 0x1) + (_0xd2224 + 0x1 + 0x1), _0x3b9920 = 0x3 * _0xd2224 + 0x6 * _0xd2224 + 0x3 * _0xd2224, _0x1db16f = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x54e6b7 = _0x1db16f['vertexStri' + 'de'] / 0x4, _0x1c0a80 = new Float32Array(_0x344785 * _0x54e6b7), _0x40840d = new Uint16Array(_0x3b9920), _0x226f54 = 0x2 * Math['PI'] / _0xd2224, _0x28c248 = _0x4495ec / 0x2, _0x307b8d = 0x0, _0x18a4f3 = 0x0, _0x34de18 = 0x0, _0x40cf54 = 0x0, _0x472453 = 0x0, _0x5cbf28 = 0x0, _0x5ef4a1 = 0x0, _0x1f1087 = 0x0; _0x1f1087 <= _0xd2224; _0x1f1087++)
                0x0 === _0x1f1087 && (_0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = _0x28c248, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0x1, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0.5, _0x1c0a80[_0x5cbf28++] = 0.5), _0x307b8d = _0x1f1087 * _0x226f54, _0x34de18 = Math['cos'](_0x307b8d) * _0x13414c, _0x40cf54 = _0x28c248, _0x472453 = Math['sin'](_0x307b8d) * _0x13414c, _0x1c0a80[_0x5cbf28++] = _0x34de18, _0x1c0a80[_0x5cbf28++] = _0x40cf54, _0x1c0a80[_0x5cbf28++] = _0x472453, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0x1, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0.5 + 0.5 * Math['cos'](_0x307b8d), _0x1c0a80[_0x5cbf28++] = 0.5 + 0.5 * Math['sin'](_0x307b8d);
            for (var _0x18a37e = 0x0; _0x18a37e < _0xd2224; _0x18a37e++)
                _0x40840d[_0x5ef4a1++] = 0x0, _0x40840d[_0x5ef4a1++] = _0x18a37e + 0x1, _0x40840d[_0x5ef4a1++] = _0x18a37e + 0x2;
            _0x18a4f3 += _0xd2224 + 0x1 + 0x1;
            for (var _0x4d50e5 = 0x0; _0x4d50e5 <= _0xd2224; _0x4d50e5++)
                _0x307b8d = _0x4d50e5 * _0x226f54, _0x34de18 = Math['cos'](_0x307b8d + Math['PI']) * _0x13414c, _0x40cf54 = _0x28c248, _0x472453 = Math['sin'](_0x307b8d + Math['PI']) * _0x13414c, _0x1c0a80[_0x5cbf28++] = _0x34de18, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = _0x34de18, _0x1c0a80[_0x5cbf28++] = _0x40cf54, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = -_0x40cf54, _0x1c0a80[_0x5cbf28++] = _0x472453, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = _0x472453, _0x1c0a80[_0x5cbf28++] = _0x34de18, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = _0x34de18, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = 0x0, _0x1c0a80[_0x5cbf28++] = _0x472453, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = _0x472453, _0x1c0a80[_0x5cbf28++] = 0x1 - 0x1 * _0x4d50e5 / _0xd2224, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = 0x1 - 0x1 * _0x4d50e5 / _0xd2224, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28 + 0x8 * (_0xd2224 + 0x1) - 0x1] = 0x1;
            _0x5cbf28 += 0x8 * (_0xd2224 + 0x1);
            for (var _0x420c4b = 0x0; _0x420c4b < _0xd2224; _0x420c4b++)
                _0x40840d[_0x5ef4a1++] = _0x420c4b + _0x18a4f3 + (_0xd2224 + 0x1), _0x40840d[_0x5ef4a1++] = _0x420c4b + _0x18a4f3 + 0x1, _0x40840d[_0x5ef4a1++] = _0x420c4b + _0x18a4f3, _0x40840d[_0x5ef4a1++] = _0x420c4b + _0x18a4f3 + (_0xd2224 + 0x1), _0x40840d[_0x5ef4a1++] = _0x420c4b + _0x18a4f3 + (_0xd2224 + 0x1) + 0x1, _0x40840d[_0x5ef4a1++] = _0x420c4b + _0x18a4f3 + 0x1;
            _0x18a4f3 += 0x2 * (_0xd2224 + 0x1);
            for (var _0x2345b5 = 0x0; _0x2345b5 <= _0xd2224; _0x2345b5++)
                0x0 === _0x2345b5 && (_0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = -_0x28c248, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = -0x1, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0.5, _0x1c0a80[_0x5cbf28++] = 0.5), _0x307b8d = _0x2345b5 * _0x226f54, _0x34de18 = Math['cos'](_0x307b8d + Math['PI']) * _0x13414c, _0x40cf54 = -_0x28c248, _0x472453 = Math['sin'](_0x307b8d + Math['PI']) * _0x13414c, _0x1c0a80[_0x5cbf28++] = _0x34de18, _0x1c0a80[_0x5cbf28++] = _0x40cf54, _0x1c0a80[_0x5cbf28++] = _0x472453, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = -0x1, _0x1c0a80[_0x5cbf28++] = 0x0, _0x1c0a80[_0x5cbf28++] = 0.5 + 0.5 * Math['cos'](_0x307b8d), _0x1c0a80[_0x5cbf28++] = 0.5 + 0.5 * Math['sin'](_0x307b8d);
            for (var _0x20a678 = 0x0; _0x20a678 < _0xd2224; _0x20a678++)
                _0x40840d[_0x5ef4a1++] = 0x0 + _0x18a4f3, _0x40840d[_0x5ef4a1++] = _0x20a678 + 0x2 + _0x18a4f3, _0x40840d[_0x5ef4a1++] = _0x20a678 + 0x1 + _0x18a4f3;
            return _0x18a4f3 += _0xd2224 + 0x1 + 0x1, _0x39a97b['_createMes' + 'h'](_0x1db16f, _0x1c0a80, _0x40840d);
        }
        static ['createPlan' + 'e'](_0x129efd = 0xa, _0x3b91a2 = 0xa, _0x15cb02 = 0xa, _0x48e046 = 0xa) {
            for (var _0x5df6eb = (_0x15cb02 + 0x1) * (_0x48e046 + 0x1), _0x9d5ec6 = new Uint16Array(_0x15cb02 * _0x48e046 * 0x2 * 0x3), _0x33926a = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0xb58791 = _0x33926a['vertexStri' + 'de'] / 0x4, _0x26b126 = new Float32Array(_0x5df6eb * _0xb58791), _0x475217 = _0x129efd / 0x2, _0x404f46 = _0x3b91a2 / 0x2, _0x13d04a = _0x129efd / _0x15cb02, _0x43235f = _0x3b91a2 / _0x48e046, _0x43b984 = 0x0, _0x3e451b = 0x0; _0x3e451b <= _0x48e046; _0x3e451b++)
                for (var _0x32345d = 0x0; _0x32345d <= _0x15cb02; _0x32345d++)
                    _0x26b126[_0x43b984++] = _0x32345d * _0x13d04a - _0x475217, _0x26b126[_0x43b984++] = 0x0, _0x26b126[_0x43b984++] = _0x3e451b * _0x43235f - _0x404f46, _0x26b126[_0x43b984++] = 0x0, _0x26b126[_0x43b984++] = 0x1, _0x26b126[_0x43b984++] = 0x0, _0x26b126[_0x43b984++] = 0x1 * _0x32345d / _0x15cb02, _0x26b126[_0x43b984++] = 0x1 * _0x3e451b / _0x48e046;
            var _0xd04ff5 = 0x0;
            for (_0x3e451b = 0x0; _0x3e451b < _0x48e046; _0x3e451b++)
                for (_0x32345d = 0x0; _0x32345d < _0x15cb02; _0x32345d++)
                    _0x9d5ec6[_0xd04ff5++] = (_0x3e451b + 0x1) * (_0x15cb02 + 0x1) + _0x32345d, _0x9d5ec6[_0xd04ff5++] = _0x3e451b * (_0x15cb02 + 0x1) + _0x32345d, _0x9d5ec6[_0xd04ff5++] = (_0x3e451b + 0x1) * (_0x15cb02 + 0x1) + _0x32345d + 0x1, _0x9d5ec6[_0xd04ff5++] = _0x3e451b * (_0x15cb02 + 0x1) + _0x32345d, _0x9d5ec6[_0xd04ff5++] = _0x3e451b * (_0x15cb02 + 0x1) + _0x32345d + 0x1, _0x9d5ec6[_0xd04ff5++] = (_0x3e451b + 0x1) * (_0x15cb02 + 0x1) + _0x32345d + 0x1;
            return _0x39a97b['_createMes' + 'h'](_0x33926a, _0x26b126, _0x9d5ec6);
        }
        static ['createQuad'](_0x1acb41 = 0x1, _0x3bf5a1 = 0x1) {
            var _0x1a6c7d = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0xf51e17 = _0x1acb41 / 0x2, _0x5a760c = _0x3bf5a1 / 0x2, _0x4df0a3 = new Float32Array([
                    -_0xf51e17,
                    _0x5a760c,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0xf51e17,
                    _0x5a760c,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    -_0xf51e17,
                    -_0x5a760c,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    _0xf51e17,
                    -_0x5a760c,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1
                ]), _0x365fb9 = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x3,
                    0x2,
                    0x1
                ]);
            return _0x39a97b['_createMes' + 'h'](_0x1a6c7d, _0x4df0a3, _0x365fb9);
        }
        static ['createSphe' + 're'](_0x360a96 = 0.5, _0x2e9d1d = 0x20, _0xe807ed = 0x20) {
            var _0x12755c = (_0x2e9d1d + 0x1) * (_0xe807ed + 0x1), _0x157ec5 = 0x3 * _0x2e9d1d * (_0xe807ed + 0x1) * 0x2, _0xa03cbd = new Uint16Array(_0x157ec5), _0x1ab136 = _0x3fbee7['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x491cea = _0x1ab136['vertexStri' + 'de'] / 0x4, _0x4acdfc = new Float32Array(_0x12755c * _0x491cea), _0x5a2477 = Math['PI'] / _0x2e9d1d, _0x3e59f4 = 0x2 * Math['PI'] / _0xe807ed, _0x508819 = 0x0;
            _0x12755c = 0x0, _0x157ec5 = 0x0;
            for (var _0x1990bd = 0x0; _0x1990bd < _0x2e9d1d + 0x1; _0x1990bd++)
                for (var _0x3b4c35 = Math['sin'](_0x1990bd * _0x5a2477), _0x2a9b90 = Math['cos'](_0x1990bd * _0x5a2477), _0x2b6a32 = 0x0; _0x2b6a32 < _0xe807ed + 0x1; _0x2b6a32++) {
                    var _0x1c9e3a = _0x3b4c35 * Math['sin'](_0x2b6a32 * _0x3e59f4 + 0x1 * Math['PI'] / 0x2), _0x16ec24 = _0x3b4c35 * Math['cos'](_0x2b6a32 * _0x3e59f4 + 0x1 * Math['PI'] / 0x2);
                    _0x4acdfc[_0x12755c + 0x0] = _0x1c9e3a * _0x360a96, _0x4acdfc[_0x12755c + 0x1] = _0x2a9b90 * _0x360a96, _0x4acdfc[_0x12755c + 0x2] = _0x16ec24 * _0x360a96, _0x4acdfc[_0x12755c + 0x3] = _0x1c9e3a, _0x4acdfc[_0x12755c + 0x4] = _0x2a9b90, _0x4acdfc[_0x12755c + 0x5] = _0x16ec24, _0x4acdfc[_0x12755c + 0x6] = _0x2b6a32 / _0xe807ed, _0x4acdfc[_0x12755c + 0x7] = _0x1990bd / _0x2e9d1d, _0x12755c += _0x491cea, _0x1990bd != _0x2e9d1d - 0x1 && (_0xa03cbd[_0x157ec5++] = _0x508819 + (_0xe807ed + 0x1), _0xa03cbd[_0x157ec5++] = _0x508819, _0xa03cbd[_0x157ec5++] = _0x508819 + 0x1, _0xa03cbd[_0x157ec5++] = _0x508819 + _0xe807ed, _0xa03cbd[_0x157ec5++] = _0x508819, _0xa03cbd[_0x157ec5++] = _0x508819 + (_0xe807ed + 0x1), _0x508819++);
                }
            return _0x39a97b['_createMes' + 'h'](_0x1ab136, _0x4acdfc, _0xa03cbd);
        }
    }
    var _0x58ede4 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_MainTe' + 'x;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x0d\x0a\x09g' + 'l_FragColo' + 'r\x20=\x20textur' + 'e2D(u_Main' + 'Tex,\x20v_Tex' + 'coord0);\x0d\x0a' + '}\x0d\x0a\x0d\x0a', _0x367d7c = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'OffsetScal' + 'e;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x09\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(u' + '_OffsetSca' + 'le.x*2.0-1' + '.0+(a_Posi' + 'tionTexcoo' + 'rd.x+1.0)*' + 'u_OffsetSc' + 'ale.z,(1.0' + '-((u_Offse' + 'tScale.y*2' + '.0-1.0+(-a' + '_PositionT' + 'excoord.y+' + '1.0)*u_Off' + 'setScale.w' + ')+1.0)/2.0' + ')*2.0-1.0,' + '\x200.0,\x201.0)' + ';\x09\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x324e21 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20COLOR\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a#endif\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0a\x0d\x0a#' + 'ifdef\x20MAIN' + 'TEXTURE\x0d\x0a\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'AlbedoText' + 'ure;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aunif' + 'orm\x20vec4\x20u' + '_AlbedoCol' + 'or;\x0d\x0a\x0d\x0a#if' + 'def\x20FOG\x0d\x0a\x09' + 'uniform\x20fl' + 'oat\x20u_FogS' + 'tart;\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogRan' + 'ge;\x0d\x0a\x09#ifd' + 'ef\x20ADDTIVE' + 'FOG\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09unifo' + 'rm\x20vec3\x20u_' + 'FogColor;\x0d' + '\x0a\x09#endif\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x09vec' + '4\x20color\x20=\x20' + '\x202.0\x20*\x20u_A' + 'lbedoColor' + ';\x0d\x0a\x09#ifdef' + '\x20COLOR\x0d\x0a\x09\x09' + 'color\x20*=\x20v' + '_Color;\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20MAIN' + 'TEXTURE\x0d\x0a\x09' + '\x09color\x20*=\x20' + 'texture2D(' + 'u_AlbedoTe' + 'xture,\x20v_T' + 'excoord0);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09gl_Fr' + 'agColor\x20=\x20' + 'color;\x0d\x0a\x09\x0d' + '\x0a\x09#ifdef\x20F' + 'OG\x0d\x0a\x09\x09floa' + 't\x20lerpFact' + '\x20=\x20clamp((' + '1.0\x20/\x20gl_F' + 'ragCoord.w' + '\x20-\x20u_FogSt' + 'art)\x20/\x20u_F' + 'ogRange,\x200' + '.0,\x201.0);\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ADDTIVEFOG' + '\x0d\x0a\x09\x09\x09gl_Fr' + 'agColor.rg' + 'b\x20=\x20mix(gl' + '_FragColor' + '.rgb,\x20vec3' + '(0.0),\x20ler' + 'pFact);\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09gl_FragCo' + 'lor.rgb\x20=\x20' + 'mix(gl_Fra' + 'gColor.rgb' + ',\x20u_FogCol' + 'or,\x20lerpFa' + 'ct);\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09#en' + 'dif\x0d\x0a}\x0d\x0a\x0d\x0a', _0x23bb35 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Color;' + '\x0d\x0aattribut' + 'e\x20vec2\x20a_T' + 'excoord0;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09attri' + 'bute\x20mat4\x20' + 'a_MvpMatri' + 'x;\x0d\x0a#else\x0d' + '\x0a\x09uniform\x20' + 'mat4\x20u_Mvp' + 'Matrix;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20COLO' + 'R\x0d\x0a\x09varyin' + 'g\x20vec4\x20v_C' + 'olor;\x0d\x0a#en' + 'dif\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20TILINGOFF' + 'SET\x0d\x0a\x09unif' + 'orm\x20vec4\x20u' + '_TilingOff' + 'set;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20BONE\x0d\x0a\x09' + 'const\x20int\x20' + 'c_MaxBoneC' + 'ount\x20=\x2024;' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'BoneIndice' + 's;\x0d\x0a\x09attri' + 'bute\x20vec4\x20' + 'a_BoneWeig' + 'hts;\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_Bones[c_' + 'MaxBoneCou' + 'nt];\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vec4\x20po' + 'sition;\x0d\x0a\x09' + '#ifdef\x20BON' + 'E\x0d\x0a\x09\x09mat4\x20' + 'skinTransf' + 'orm\x20=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.x)]\x20*\x20a_' + 'BoneWeight' + 's.x;\x0d\x0a\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20u_Bon' + 'es[int(a_B' + 'oneIndices' + '.y)]\x20*\x20a_B' + 'oneWeights' + '.y;\x0d\x0a\x09\x09ski' + 'nTransform' + '\x20+=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'z)]\x20*\x20a_Bo' + 'neWeights.' + 'z;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.w' + ')]\x20*\x20a_Bon' + 'eWeights.w' + ';\x0d\x0a\x09\x09posit' + 'ion=skinTr' + 'ansform*a_' + 'Position;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09position=' + 'a_Position' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09\x09gl_P' + 'osition\x20=\x20' + 'a_MvpMatri' + 'x\x20*\x20positi' + 'on;\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09gl_Po' + 'sition\x20=\x20u' + ('_MvpMatrix' + '\x20*\x20positio' + 'n;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09#if' + 'def\x20TILING' + 'OFFSET\x0d\x0a\x09\x09' + 'v_Texcoord' + '0=Transfor' + 'mUV(a_Texc' + 'oord0,u_Ti' + 'lingOffset' + ');\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09v_Texc' + 'oord0=a_Te' + 'xcoord0;\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + '\x09\x0d\x0a\x09#ifdef' + '\x20COLOR\x0d\x0a\x09\x09' + 'v_Color\x20=\x20' + 'a_Color;\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'gl_Positio' + 'n=remapGLP' + 'ositionZ(g' + 'l_Position' + ');\x0d\x0a}'), _0x39cbef = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')||defined' + '(FOG)\x0d\x0a\x09un' + 'iform\x20vec3' + '\x20u_CameraP' + 'os;\x0d\x0a\x09vary' + 'ing\x20vec3\x20v' + '_Normal;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Posi' + 'tionWorld;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20F' + 'OG\x0d\x0a\x09unifo' + 'rm\x20float\x20u' + '_FogStart;' + '\x0d\x0a\x09uniform' + '\x20float\x20u_F' + 'ogRange;\x0d\x0a' + '\x09uniform\x20v' + 'ec3\x20u_FogC' + 'olor;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)\x0d\x0a\x09#i' + 'fdef\x20LEGAC' + 'YSINGLELIG' + 'HTING\x0d\x0a\x09\x09#' + 'ifdef\x20DIRE' + 'CTIONLIGHT' + '\x0d\x0a\x09\x09\x09unifo' + 'rm\x20Directi' + 'onLight\x20u_' + 'DirectionL' + 'ight;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x09#' + 'ifdef\x20POIN' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09uniform\x20P' + 'ointLight\x20' + 'u_PointLig' + 'ht;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09\x09#if' + 'def\x20SPOTLI' + 'GHT\x0d\x0a\x09\x09\x09un' + 'iform\x20Spot' + 'Light\x20u_Sp' + 'otLight;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'uniform\x20ma' + 't4\x20u_View;' + '\x0d\x0a\x09\x09unifor' + 'm\x20vec4\x20u_P' + 'rojectionP' + 'arams;\x0d\x0a\x09\x09' + 'uniform\x20ve' + 'c4\x20u_Viewp' + 'ort;\x0d\x0a\x09\x09un' + 'iform\x20int\x20' + 'u_Diration' + 'LightCount' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20sampler' + '2D\x20u_Light' + 'Buffer;\x0d\x0a\x09' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_LightClus' + 'terBuffer;' + '\x0d\x0a\x09#endif\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#include\x20' + '\x22Shadow.gl' + 'sl\x22\x0d\x0a#ifde' + 'f\x20CALCULAT' + ('E_SHADOWS\x0d' + '\x0a\x09varying\x20' + 'vec4\x20v_Sha' + 'dowCoord;\x0d' + '\x0a#endif\x0d\x0av' + 'arying\x20flo' + 'at\x20v_posVi' + 'ewZ;\x0d\x0a\x0d\x0aun' + 'iform\x20vec3' + '\x20u_Ambient' + 'Color;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'SplatAlpha' + 'Texture;\x0d\x0a' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_DiffuseT' + 'exture1;\x0d\x0a' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'DiffuseTex' + 'ture2;\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Di' + 'ffuseTextu' + 're3;\x0d\x0aunif' + 'orm\x20sample' + 'r2D\x20u_Diff' + 'useTexture' + '4;\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_Diffus' + 'eTexture5;' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20vec4\x20u_D' + 'iffuseScal' + 'eOffset1;\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Diff' + 'useScaleOf' + 'fset2;\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Diffuse' + 'ScaleOffse' + 't3;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'DiffuseSca' + 'leOffset4;' + '\x0d\x0auniform\x20' + 'vec4\x20u_Dif' + 'fuseScaleO' + 'ffset5;\x0d\x0a\x0d' + '\x0avarying\x20v' + 'ec2\x20v_Texc' + 'oord0;\x0d\x0a\x0d\x0a' + '#ifdef\x20LIG' + 'HTMAP\x0d\x0a\x09un' + 'iform\x20samp' + 'ler2D\x20u_Li' + 'ghtMap;\x0d\x0a\x09' + 'varying\x20ve' + 'c2\x20v_Light' + 'MapUV;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0avo' + 'id\x20main()\x0d' + '\x0a{\x0d\x0a\x09vec4\x20' + 'splatAlpha' + '\x20=\x20vec4(1.' + '0);\x0d\x0a\x09#ifd' + 'ef\x20ExtendT' + 'errain_DET' + 'AIL_NUM1\x0d\x0a' + '\x09\x09splatAlp' + 'ha\x20=\x20textu' + 're2D(u_Spl' + 'atAlphaTex' + 'ture,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09\x09vec4\x20co' + 'lor1\x20=\x20tex' + 'ture2D(u_D' + 'iffuseText' + 'ure1,\x20v_Te' + 'xcoord0\x20*\x20' + 'u_DiffuseS' + 'caleOffset' + '1.xy);\x0d\x0a\x09\x09' + 'gl_FragCol' + 'or.xyz\x20=\x20c' + 'olor1.xyz\x20' + '*\x20splatAlp' + 'ha.r;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20Extend' + 'Terrain_DE' + 'TAIL_NUM2\x0d' + '\x0a\x09\x09splatAl' + 'pha\x20=\x20text' + 'ure2D(u_Sp') + ('latAlphaTe' + 'xture,\x20v_T' + 'excoord0);' + '\x0d\x0a\x09\x09vec4\x20c' + 'olor1\x20=\x20te' + 'xture2D(u_' + 'DiffuseTex' + 'ture1,\x20v_T' + 'excoord0\x20*' + '\x20u_Diffuse' + 'ScaleOffse' + 't1.xy);\x0d\x0a\x09' + '\x09vec4\x20colo' + 'r2\x20=\x20textu' + 're2D(u_Dif' + 'fuseTextur' + 'e2,\x20v_Texc' + 'oord0\x20*\x20u_' + 'DiffuseSca' + 'leOffset2.' + 'xy);\x0d\x0a\x09\x09gl' + '_FragColor' + '.xyz\x20=\x20col' + 'or1.xyz\x20*\x20' + 'splatAlpha' + '.r\x20+\x20color' + '2.xyz\x20*\x20(1' + '.0\x20-\x20splat' + 'Alpha.r);\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20Ex' + 'tendTerrai' + 'n_DETAIL_N' + 'UM3\x0d\x0a\x09\x09spl' + 'atAlpha\x20=\x20' + 'texture2D(' + 'u_SplatAlp' + 'haTexture,' + '\x20v_Texcoor' + 'd0);\x0d\x0a\x09\x09ve' + 'c4\x20color1\x20' + '=\x20texture2' + 'D(u_Diffus' + 'eTexture1,' + '\x20v_Texcoor' + 'd0\x20*\x20u_Dif' + 'fuseScaleO' + 'ffset1.xy)' + ';\x0d\x0a\x09\x09vec4\x20' + 'color2\x20=\x20t' + 'exture2D(u' + '_DiffuseTe' + 'xture2,\x20v_' + 'Texcoord0\x20' + '*\x20u_Diffus' + 'eScaleOffs' + 'et2.xy);\x0d\x0a' + '\x09\x09vec4\x20col' + 'or3\x20=\x20text' + 'ure2D(u_Di' + 'ffuseTextu' + 're3,\x20v_Tex' + 'coord0\x20*\x20u' + '_DiffuseSc' + 'aleOffset3' + '.xy);\x0d\x0a\x09\x09g' + 'l_FragColo' + 'r.xyz\x20=\x20co' + 'lor1.xyz\x20*' + '\x20splatAlph' + 'a.r\x20\x20+\x20col' + 'or2.xyz\x20*\x20' + 'splatAlpha' + '.g\x20+\x20color' + '3.xyz\x20*\x20(1' + '.0\x20-\x20splat' + 'Alpha.r\x20-\x20' + 'splatAlpha' + '.g);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20ExtendT' + 'errain_DET' + 'AIL_NUM4\x0d\x0a' + '\x09\x09splatAlp' + 'ha\x20=\x20textu' + 're2D(u_Spl' + 'atAlphaTex' + 'ture,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09\x09vec4\x20co' + 'lor1\x20=\x20tex' + 'ture2D(u_D' + 'iffuseText' + 'ure1,\x20v_Te' + 'xcoord0\x20*\x20' + 'u_DiffuseS' + 'caleOffset' + '1.xy);\x0d\x0a\x09\x09' + 'vec4\x20color' + '2\x20=\x20textur') + ('e2D(u_Diff' + 'useTexture' + '2,\x20v_Texco' + 'ord0\x20*\x20u_D' + 'iffuseScal' + 'eOffset2.x' + 'y);\x0d\x0a\x09\x09vec' + '4\x20color3\x20=' + '\x20texture2D' + '(u_Diffuse' + 'Texture3,\x20' + 'v_Texcoord' + '0\x20*\x20u_Diff' + 'useScaleOf' + 'fset3.xy);' + '\x0d\x0a\x09\x09vec4\x20c' + 'olor4\x20=\x20te' + 'xture2D(u_' + 'DiffuseTex' + 'ture4,\x20v_T' + 'excoord0\x20*' + '\x20u_Diffuse' + 'ScaleOffse' + 't4.xy);\x0d\x0a\x09' + '\x09gl_FragCo' + 'lor.xyz\x20=\x20' + 'color1.xyz' + '\x20*\x20splatAl' + 'pha.r\x20\x20+\x20c' + 'olor2.xyz\x20' + '*\x20splatAlp' + 'ha.g\x20+\x20col' + 'or3.xyz\x20*\x20' + 'splatAlpha' + '.b\x20+\x20color' + '4.xyz\x20*\x20(1' + '.0\x20-\x20splat' + 'Alpha.r\x20-\x20' + 'splatAlpha' + '.g\x20-\x20splat' + 'Alpha.b);\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20Ex' + 'tendTerrai' + 'n_DETAIL_N' + 'UM5\x0d\x0a\x09\x09spl' + 'atAlpha\x20=\x20' + 'texture2D(' + 'u_SplatAlp' + 'haTexture,' + '\x20v_Texcoor' + 'd0);\x0d\x0a\x09\x09ve' + 'c4\x20color1\x20' + '=\x20texture2' + 'D(u_Diffus' + 'eTexture1,' + '\x20v_Texcoor' + 'd0\x20*\x20u_Dif' + 'fuseScaleO' + 'ffset1.xy)' + ';\x0d\x0a\x09\x09vec4\x20' + 'color2\x20=\x20t' + 'exture2D(u' + '_DiffuseTe' + 'xture2,\x20v_' + 'Texcoord0\x20' + '*\x20u_Diffus' + 'eScaleOffs' + 'et2.xy);\x0d\x0a' + '\x09\x09vec4\x20col' + 'or3\x20=\x20text' + 'ure2D(u_Di' + 'ffuseTextu' + 're3,\x20v_Tex' + 'coord0\x20*\x20u' + '_DiffuseSc' + 'aleOffset3' + '.xy);\x0d\x0a\x09\x09v' + 'ec4\x20color4' + '\x20=\x20texture' + '2D(u_Diffu' + 'seTexture4' + ',\x20v_Texcoo' + 'rd0\x20*\x20u_Di' + 'ffuseScale' + 'Offset4.xy' + ');\x0d\x0a\x09\x09vec4' + '\x20color5\x20=\x20' + 'texture2D(' + 'u_DiffuseT' + 'exture5,\x20v' + '_Texcoord0' + '\x20*\x20u_Diffu' + 'seScaleOff' + 'set5.xy);\x0d' + '\x0a\x09\x09gl_Frag' + 'Color.xyz\x20' + '=\x20color1.x' + 'yz\x20*\x20splat' + 'Alpha.r\x20\x20+') + ('\x20color2.xy' + 'z\x20*\x20splatA' + 'lpha.g\x20+\x20c' + 'olor3.xyz\x20' + '*\x20splatAlp' + 'ha.b\x20+\x20col' + 'or4.xyz\x20*\x20' + 'splatAlpha' + '.a\x20+\x20color' + '5.xyz\x20*\x20(1' + '.0\x20-\x20splat' + 'Alpha.r\x20-\x20' + 'splatAlpha' + '.g\x20-\x20splat' + 'Alpha.b\x20-\x20' + 'splatAlpha' + '.a);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09\x09gl_' + 'FragColor.' + 'w\x20=\x20splatA' + 'lpha.a;\x0d\x0a\x09' + '\x09\x0d\x0a\x09#if\x20de' + 'fined(DIRE' + 'CTIONLIGHT' + ')||defined' + '(POINTLIGH' + 'T)||define' + 'd(SPOTLIGH' + 'T)\x0d\x0a\x09\x09vec3' + '\x20normal\x20=\x20' + 'v_Normal;\x0d' + '\x0a\x09\x09vec3\x20di' + 'f,\x20spe;\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09vec3\x20diff' + 'use\x20=\x20vec3' + '(0.0);\x0d\x0a\x09v' + 'ec3\x20specul' + 'ar=\x20vec3(0' + '.0);\x0d\x0a\x09#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)||def' + 'ined(FOG)\x0d' + '\x0a\x09\x09vec3\x20to' + 'Eye;\x0d\x0a\x09\x09#i' + 'fdef\x20FOG\x0d\x0a' + '\x09\x09\x09toEye=u' + '_CameraPos' + '-v_Positio' + 'nWorld;\x0d\x0a\x09' + '\x09\x09float\x20to' + 'EyeLength=' + 'length(toE' + 'ye);\x0d\x0a\x09\x09\x09t' + 'oEye/=toEy' + 'eLength;\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09toEye=no' + 'rmalize(u_' + 'CameraPos-' + 'v_Position' + 'World);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09#ifdef\x20LE' + 'GACYSINGLE' + 'LIGHTING\x0d\x0a' + '\x09\x09#ifdef\x20D' + 'IRECTIONLI' + 'GHT\x0d\x0a\x09\x09\x09La' + 'yaAirBlinn' + 'PhongDiect' + 'ionLight(v' + 'ec3(0.0),1' + '.0,normal,' + 'vec3(1.0),' + 'toEye,u_Di' + 'rectionLig' + 'ht,dif,spe' + ');\x0d\x0a\x09\x09\x09dif' + 'fuse+=dif;' + '\x0d\x0a\x09\x09\x09specu' + 'lar+=spe;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09\x09#ifd' + 'ef\x20POINTLI' + 'GHT\x0d\x0a\x09\x09\x09La' + 'yaAirBlinn' + 'PhongPoint' + 'Light(v_Po' + 'sitionWorl' + 'd,vec3(0.0' + '),1.0,norm' + 'al,vec3(1.' + '0),toEye,u') + ('_PointLigh' + 't,dif,spe)' + ';\x0d\x0a\x09\x09\x09diff' + 'use+=dif;\x0d' + '\x0a\x09\x09\x09specul' + 'ar+=spe;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x0d\x0a\x09\x09#ifdef' + '\x20SPOTLIGHT' + '\x0d\x0a\x09\x09\x09LayaA' + 'irBlinnPho' + 'ngSpotLigh' + 't(v_Positi' + 'onWorld,ve' + 'c3(0.0),1.' + '0,normal,v' + 'ec3(1.0),t' + 'oEye,u_Spo' + 'tLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09diffuse+=' + 'dif;\x0d\x0a\x09\x09\x09s' + 'pecular+=s' + 'pe;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09#ifde' + 'f\x20DIRECTIO' + 'NLIGHT\x0d\x0a\x09\x09' + '\x09for\x20(int\x20' + 'i\x20=\x200;\x20i\x20<' + '\x20MAX_LIGHT' + '_COUNT;\x20i+' + '+)\x20\x0d\x0a\x09\x09\x09{\x0d' + '\x0a\x09\x09\x09\x09if(i\x20' + '>=\x20u_Dirat' + 'ionLightCo' + 'unt)\x0d\x0a\x09\x09\x09\x09' + '\x09break;\x0d\x0a\x09' + '\x09\x09\x09Directi' + 'onLight\x20di' + 'rectionLig' + 'ht\x20=\x20getDi' + 'rectionLig' + 'ht(u_Light' + 'Buffer,i);' + '\x0d\x0a\x09\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongDiectio' + 'nLight(vec' + '3(0.0),1.0' + ',normal,ve' + 'c3(1.0),to' + 'Eye,direct' + 'ionLight,d' + 'if,spe);\x0d\x0a' + '\x09\x09\x09\x09diffus' + 'e+=dif;\x0d\x0a\x09' + '\x09\x09\x09specula' + 'r+=spe;\x0d\x0a\x09' + '\x09\x09}\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09\x09#if' + '\x20defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '\x0d\x0a\x09\x09\x09ivec4' + '\x20clusterIn' + 'fo\x20=getClu' + 'sterInfo(u' + '_LightClus' + 'terBuffer,' + 'u_View,u_V' + 'iewport,\x20v' + '_PositionW' + 'orld,gl_Fr' + 'agCoord,u_' + 'Projection' + 'Params);\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'POINTLIGHT' + '\x0d\x0a\x09\x09\x09\x09for\x20' + '(int\x20i\x20=\x200' + ';\x20i\x20<\x20MAX_' + 'LIGHT_COUN' + 'T;\x20i++)\x20\x0d\x0a' + '\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09' + '\x09\x09if(i\x20>=\x20' + 'clusterInf' + 'o.x)//Poin' + 'tLightCoun' + 't\x0d\x0a\x09\x09\x09\x09\x09\x09b' + 'reak;\x0d\x0a\x09\x09\x09' + '\x09\x09PointLig' + 'ht\x20pointLi' + 'ght\x20=\x20getP' + 'ointLight(' + 'u_LightBuf' + 'fer,u_Ligh' + 'tClusterBu' + 'ffer,clust') + ('erInfo,i);' + '\x0d\x0a\x09\x09\x09\x09\x09Lay' + 'aAirBlinnP' + 'hongPointL' + 'ight(v_Pos' + 'itionWorld' + ',vec3(0.0)' + ',1.0,norma' + 'l,vec3(1.0' + '),toEye,po' + 'intLight,d' + 'if,spe);\x0d\x0a' + '\x09\x09\x09\x09\x09diffu' + 'se+=dif;\x0d\x0a' + '\x09\x09\x09\x09\x09specu' + 'lar+=spe;\x0d' + '\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09\x09for\x20(i' + 'nt\x20i\x20=\x200;\x20' + 'i\x20<\x20MAX_LI' + 'GHT_COUNT;' + '\x20i++)\x20\x0d\x0a\x09\x09' + '\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09' + 'if(i\x20>=\x20cl' + 'usterInfo.' + 'y)//SpotLi' + 'ghtCount\x0d\x0a' + '\x09\x09\x09\x09\x09\x09brea' + 'k;\x0d\x0a\x09\x09\x09\x09\x09S' + 'potLight\x20s' + 'potLight\x20=' + '\x20getSpotLi' + 'ght(u_Ligh' + 'tBuffer,u_' + 'LightClust' + 'erBuffer,c' + 'lusterInfo' + ',i);\x0d\x0a\x09\x09\x09\x09' + '\x09LayaAirBl' + 'innPhongSp' + 'otLight(v_' + 'PositionWo' + 'rld,vec3(0' + '.0),1.0,no' + 'rmal,vec3(' + '1.0),toEye' + '\x09,spotLigh' + 't,dif,spe)' + ';\x0d\x0a\x09\x09\x09\x09\x09di' + 'ffuse+=dif' + ';\x0d\x0a\x09\x09\x09\x09\x09sp' + 'ecular+=sp' + 'e;\x0d\x0a\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09#endif' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0avec3\x20gl' + 'obalDiffus' + 'e\x20=\x20u_Ambi' + 'entColor;\x0d' + '\x0a#ifdef\x20LI' + 'GHTMAP\x0d\x0a\x09g' + 'lobalDiffu' + 'se\x20+=\x20deco' + 'deHDR(text' + 'ure2D(u_Li' + 'ghtMap,\x20v_' + 'LightMapUV' + '),5.0);\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20CALC' + 'ULATE_SHAD' + 'OWS\x0d\x0a\x09floa' + 't\x20shadowVa' + 'lue\x20=\x20shad' + 'owValue\x20=\x20' + 'sampleShad' + 'owmap(v_Sh' + 'adowCoord)' + ';\x0d\x0a\x09gl_Fra' + 'gColor\x20=\x20v' + 'ec4(gl_Fra' + 'gColor.rgb' + '\x20*\x20(global' + 'Diffuse\x20+\x20' + 'diffuse)\x20*' + '\x20shadowVal' + 'ue,\x20gl_Fra' + 'gColor.a);' + '\x0d\x0a#else\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=\x20vec4(' + 'gl_FragCol' + 'or.rgb\x20*\x20(' + 'globalDiff' + 'use\x20+\x20diff' + 'use),\x20gl_F') + ('ragColor.a' + ');\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(DIRE' + 'CTIONLIGHT' + ')||defined' + '(POINTLIGH' + 'T)||define' + 'd(SPOTLIGH' + 'T)\x0d\x0a\x09#ifde' + 'f\x20CALCULAT' + 'E_SHADOWS\x0d' + '\x0a\x09\x09gl_Frag' + 'Color.rgb\x20' + '+=\x20specula' + 'r\x20*\x20shadow' + 'Value;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09gl' + '_FragColor' + '.rgb\x20+=\x20sp' + 'ecular;\x0d\x0a\x09' + '#endif\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20FOG\x0d\x0a' + '\x09float\x20ler' + 'pFact=clam' + 'p((toEyeLe' + 'ngth-u_Fog' + 'Start)/u_F' + 'ogRange,0.' + '0,1.0);\x0d\x0a\x09' + 'gl_FragCol' + 'or.rgb=mix' + '(gl_FragCo' + 'lor.rgb,u_' + 'FogColor,l' + 'erpFact);\x0d' + '\x0a#endif\x0d\x0a}' + '\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a' + '\x0d\x0a'), _0x260a55 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '2\x20a_Texcoo' + 'rd0;\x0d\x0a\x0d\x0aun' + 'iform\x20mat4' + '\x20u_MvpMatr' + 'ix;\x0d\x0a\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '0;\x0d\x0a\x0d\x0a#if\x20' + 'defined(DI' + 'RECTIONLIG' + 'HT)||defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)||defi' + 'ned(LIGHTM' + 'AP)\x0d\x0a\x09attr' + 'ibute\x20vec3' + '\x20a_Normal;' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_No' + 'rmal;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)||def' + 'ined(FOG)|' + '|(defined(' + 'CALCULATE_' + 'SHADOWS)&&' + 'defined(SH' + 'ADOWMAP_PS' + 'SM1))\x0d\x0a\x09un' + 'iform\x20mat4' + '\x20u_WorldMa' + 't;\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'PositionWo' + 'rld;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20LIGHTMA' + 'P\x0d\x0a\x09varyin' + 'g\x20vec2\x20v_L' + 'ightMapUV;' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Li' + 'ghtmapScal' + 'eOffset;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20CAL' + 'CULATE_SHA' + 'DOWS\x0d\x0a\x09var' + 'ying\x20vec4\x20' + 'v_ShadowCo' + 'ord;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20a_Positio' + 'n;\x0d\x0a\x20\x20\x0d\x0a\x09v' + '_Texcoord0' + '\x20=\x20a_Texco' + 'ord0;\x0d\x0a\x20\x20\x0d' + '\x0a\x09#ifdef\x20L' + 'IGHTMAP\x0d\x0a\x09' + '\x09v_LightMa' + 'pUV\x20=\x20vec2' + '(a_Texcoor' + 'd0.x,\x201.0\x20' + '-\x20a_Texcoo' + 'rd0.y)\x20*\x20u' + '_LightmapS' + 'caleOffset' + '.xy\x20+\x20u_Li' + 'ghtmapScal' + 'eOffset.zw' + ';\x0d\x0a\x09\x09v_Lig' + 'htMapUV.y\x20' + '=\x201.0\x20-\x20v_' + 'LightMapUV' + '.y;\x0d\x0a\x09#end' + 'if\x0d\x0a\x20\x20\x0d\x0a\x09#' + 'if\x20defined' + '(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + ('efined(SPO' + 'TLIGHT)\x0d\x0a\x09' + '\x09v_Normal\x20' + '=\x20a_Normal' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||defin' + 'ed(FOG)||(' + 'defined(CA' + 'LCULATE_SH' + 'ADOWS)&&de' + 'fined(SHAD' + 'OWMAP_PSSM' + '1))\x0d\x0a\x09\x09v_P' + 'ositionWor' + 'ld=(u_Worl' + 'dMat*a_Pos' + 'ition).xyz' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09#ifde' + 'f\x20CALCULAT' + 'E_SHADOWS\x0d' + '\x0a\x09\x09v_Shado' + 'wCoord\x20=\x20g' + 'etShadowCo' + 'ord(vec4(v' + '_PositionW' + 'orld));\x0d\x0a\x09' + '#endif\x0d\x0a\x09g' + 'l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}'), _0x91cb3c = 'struct\x20Lay' + 'aGIInput\x0d\x0a' + '{\x0d\x0a\x09vec2\x20l' + 'ightmapUV;' + '\x0d\x0a};\x0d\x0a\x0d\x0a#d' + 'efine\x20LAYA' + '_SPECCUBE_' + 'LOD_STEPS\x20' + '6.0\x0d\x0a\x0d\x0auni' + 'form\x20vec3\x20' + 'u_AmbientC' + 'olor;\x0d\x0a\x0d\x0a#' + 'if\x20defined' + '(GI_AMBIEN' + 'T_SH)\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHAr;\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHAg;\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHAb;\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHBr;\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHBg;\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHBb;\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Ambient' + 'SHC;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aunif' + 'orm\x20sample' + 'rCube\x20u_Re' + 'flectTextu' + 're;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'ReflectCub' + 'eHDRParams' + ';\x0d\x0a\x0d\x0a\x0d\x0a#if' + 'def\x20GI_AMB' + 'IENT_SH\x0d\x0a\x09' + 'mediump\x20ve' + 'c3\x20shEvalL' + 'inearL0L1(' + 'mediump\x20ve' + 'c4\x20normal)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20x;\x0d\x0a\x09\x09//\x20' + 'Linear\x20(L1' + ')\x20+\x20consta' + 'nt\x20(L0)\x20po' + 'lynomial\x20t' + 'erms\x0d\x0a\x09\x09x.' + 'r\x20=\x20dot(u_' + 'AmbientSHA' + 'r,\x20normal)' + ';\x0d\x0a\x09\x09x.g\x20=' + '\x20dot(u_Amb' + 'ientSHAg,\x20' + 'normal);\x0d\x0a' + '\x09\x09x.b\x20=\x20do' + 't(u_Ambien' + 'tSHAb,\x20nor' + 'mal);\x0d\x0a\x09\x09r' + 'eturn\x20x;\x0d\x0a' + '\x09}\x0d\x0a\x0d\x0a\x09med' + 'iump\x20vec3\x20' + 'shEvalLine' + 'arL2(mediu' + 'mp\x20vec4\x20no' + 'rmal)\x0d\x0a\x09{\x0d' + '\x0a\x09\x09mediump' + '\x20vec3\x20x1,x' + '2;\x0d\x0a\x09\x09//\x204' + '\x20of\x20the\x20qu' + 'adratic\x20(L' + '2)\x20polynom' + 'ials\x0d\x0a\x09\x09me' + 'diump\x20vec4' + '\x20vB\x20=\x20norm' + 'al.xyzz\x20*\x20' + 'normal.yzz' + 'x;\x0d\x0a\x09\x09x1.r' + '\x20=\x20dot(u_A' + 'mbientSHBr' + ',\x20vB);\x0d\x0a\x09\x09' + 'x1.g\x20=\x20dot' + '(u_Ambient' + 'SHBg,\x20vB);' + '\x0d\x0a\x09\x09x1.b\x20=' + '\x20dot(u_Amb' + 'ientSHBb,\x20' + 'vB);\x0d\x0a\x0d\x0a\x09\x09' + ('//\x20Final\x20(' + '5th)\x20quadr' + 'atic\x20(L2)\x20' + 'polynomial' + '\x0d\x0a\x09\x09medium' + 'p\x20float\x20vC' + '\x20=\x20normal.' + 'x*normal.x' + '\x20-\x20normal.' + 'y*normal.y' + ';\x0d\x0a\x09\x09x2\x20=\x20' + 'u_AmbientS' + 'HC.rgb\x20*\x20v' + 'C;\x0d\x0a\x0d\x0a\x09\x09re' + 'turn\x20x1\x20+\x20' + 'x2;\x0d\x0a\x09}\x0d\x0a\x09' + '\x0d\x0a\x09mediump' + '\x20vec3\x20shad' + 'eSHPerPixe' + 'l(mediump\x20' + 'vec3\x20norma' + 'l)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'mediump\x20ve' + 'c3\x20ambient' + 'Contrib;\x0d\x0a' + '\x09\x09mediump\x20' + 'vec4\x20norma' + 'lV4=vec4(-' + 'normal.x,n' + 'ormal.yz,\x20' + '1.0);//Not' + 'e:SH\x20Data\x20' + 'is\x20left-ha' + 'nd,so\x20x\x20ne' + 'ed\x20inverse' + '\x0d\x0a\x09\x09ambien' + 'tContrib\x20=' + '\x20shEvalLin' + 'earL0L1(no' + 'rmalV4);\x0d\x0a' + '\x09\x09ambientC' + 'ontrib\x20+=\x20' + 'shEvalLine' + 'arL2(norma' + 'lV4);\x0d\x0a\x09\x09m' + 'ediump\x20vec' + '3\x20ambient\x20' + '=\x20max(vec3' + '(0.0),\x20amb' + 'ientContri' + 'b);\x0d\x0a\x09\x09amb' + 'ient\x20=\x20lay' + 'aLinearToG' + 'ammaSpace(' + 'ambient);\x0d' + '\x0a\x09\x09return\x20' + 'ambient;\x0d\x0a' + '\x09}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0amedium' + 'p\x20vec3\x20lay' + 'aDecodeDir' + 'ectionalLi' + 'ghtmap\x20(me' + 'diump\x20vec3' + '\x20color,\x20lo' + 'wp\x20vec4\x20di' + 'rTex,\x20medi' + 'ump\x20vec3\x20n' + 'ormalWorld' + ')\x0d\x0a{\x0d\x0a\x20\x20\x20\x20' + '//\x20In\x20dire' + 'ctional\x20(n' + 'on-specula' + 'r)\x20mode\x20En' + 'lighten\x20ba' + 'kes\x20domina' + 'nt\x20light\x20d' + 'irection\x0d\x0a' + '\x20\x20\x20\x20//\x20in\x20' + 'a\x20way,\x20tha' + 't\x20using\x20it' + '\x20for\x20half\x20' + 'Lambert\x20an' + 'd\x20then\x20div' + 'iding\x20by\x20a' + '\x20\x22rebalanc' + 'ing\x20coeffi' + 'cient\x22\x0d\x0a\x20\x20' + '\x20\x20//\x20gives' + '\x20a\x20result\x20' + 'close\x20to\x20p' + 'lain\x20diffu' + 'se\x20respons' + 'e\x20lightmap' + 's,\x20but\x20nor' + 'malmapped.' + '\x0d\x0a\x0d\x0a\x20\x20\x20\x20//' + '\x20Note\x20that' + '\x20dir\x20is\x20no' + 't\x20unit\x20len') + ('gth\x20on\x20pur' + 'pose.\x20Its\x20' + 'length\x20is\x20' + '\x22direction' + 'ality\x22,\x20li' + 'ke\x0d\x0a\x20\x20\x20\x20//' + '\x20for\x20the\x20d' + 'irectional' + '\x20specular\x20' + 'lightmaps.' + '\x0d\x0a\x09lowp\x20ve' + 'c3\x20directi' + 'onal=dirTe' + 'x.xyz\x20-\x200.' + '5;\x0d\x0a\x09direc' + 'tional.x=-' + 'directiona' + 'l.x;//NOTE' + ':because\x20c' + 'oord\x20Syste' + 'm\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20float' + '\x20halfLambe' + 'rt\x20=\x20dot(n' + 'ormalWorld' + ',direction' + 'al)\x20+\x200.5;' + '\x0d\x0a\x0d\x0a\x20\x20\x20\x20re' + 'turn\x20color' + '\x20*\x20halfLam' + 'bert\x20/\x20max' + '(1e-4,\x20dir' + 'Tex.w);\x0d\x0a}' + '\x0d\x0a\x0d\x0avec3\x20l' + 'ayaGIBase(' + 'LayaGIInpu' + 't\x20giInput,' + 'mediump\x20fl' + 'oat\x20occlus' + 'ion,\x20mediu' + 'mp\x20vec3\x20no' + 'rmalWorld)' + '\x0d\x0a{\x0d\x0a\x09vec3' + '\x20indirectD' + 'iffuse;\x0d\x0a\x09' + '#ifdef\x20LIG' + 'HTMAP\x09\x0d\x0a\x09\x09' + 'mediump\x20ve' + 'c3\x20bakedCo' + 'lor\x20=decod' + 'eHDR(textu' + 're2D(u_Lig' + 'htMap,\x20giI' + 'nput.light' + 'mapUV),5.0' + ');\x0d\x0a\x09\x09#ifd' + 'ef\x20LIGHTMA' + 'P_DIRECTIO' + 'NAL\x0d\x0a\x09\x09\x09lo' + 'wp\x20vec4\x20ba' + 'kedDirTex\x20' + '=\x20texture2' + 'D\x20(u_Light' + 'MapDirecti' + 'on,\x20giInpu' + 't.lightmap' + 'UV);\x0d\x0a\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20in' + 'directDiff' + 'use\x20=\x20laya' + 'DecodeDire' + 'ctionalLig' + 'htmap\x20(bak' + 'edColor,\x20b' + 'akedDirTex' + ',\x20normalWo' + 'rld);\x0d\x0a\x09\x09#' + 'else\x20//unD' + 'irectional' + '\x20lightmap\x0d' + '\x0a\x09\x09\x09indire' + 'ctDiffuse\x20' + '=\x20bakedCol' + 'or;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09#ifde' + 'f\x20GI_AMBIE' + 'NT_SH\x0d\x0a\x09\x09\x09' + 'indirectDi' + 'ffuse\x20=\x20sh' + 'adeSHPerPi' + 'xel(normal' + 'World);\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09indirectD' + 'iffuse\x20=\x20u' + '_AmbientCo' + 'lor;\x20//alr' + 'eady\x20in\x20ga' + 'mma\x20space\x0d') + ('\x0a\x09\x09#endif\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09indirec' + 'tDiffuse*=' + 'occlusion;' + '\x0d\x0a\x09return\x20' + 'indirectDi' + 'ffuse;\x0d\x0a}\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20laya' + 'GlossyEnvi' + 'ronment(me' + 'diump\x20vec4' + '\x20glossIn)\x0d' + '\x0a{\x0d\x0a\x09mediu' + 'mp\x20float\x20p' + 'erceptualR' + 'oughness\x20=' + '\x20glossIn.a' + ';\x0d\x0a\x0d\x0a\x09//\x20u' + 'se\x20approxi' + 'mation\x20to\x20' + 'solve,belo' + 'w\x20is\x20more\x20' + 'reasonable' + ',but\x20maybe' + '\x20slow.\x20\x0d\x0a\x09' + '//\x20float\x20m' + '\x20=\x20percept' + 'ualRoughne' + 'ssToRoughn' + 'ess(percep' + 'tualRoughn' + 'ess);\x20//\x20m' + '\x20is\x20the\x20re' + 'al\x20roughne' + 'ss\x20paramet' + 'er\x0d\x0a\x20\x20\x20\x20//' + '\x20const\x20flo' + 'at\x20fEps\x20=\x20' + '1.19209289' + '6e-07F;\x20\x20\x20' + '\x20\x20\x20\x20\x20//\x20sm' + 'allest\x20suc' + 'h\x20that\x201.0' + '+FLT_EPSIL' + 'ON\x20!=\x201.0\x20' + '\x20(+1e-4h\x20i' + 's\x20NOT\x20good' + '\x20here.\x20is\x20' + 'visibly\x20ve' + 'ry\x20wrong)\x0d' + '\x0a\x20\x20\x20\x20//\x20fl' + 'oat\x20n\x20=\x20\x20(' + '2.0/max(fE' + 'ps,\x20m*m))-' + '2.0;\x20\x20\x20\x20\x20\x20' + '\x20\x20//\x20remap' + '\x20to\x20spec\x20p' + 'ower.\x20See\x20' + 'eq.\x2021\x20in\x20' + '-->\x20https:' + '//dl.dropb' + 'oxusercont' + 'ent.com/u/' + '55891920/p' + 'apers/mm_b' + 'rdf.pdf\x0d\x0a\x20' + '\x20\x20\x20//\x20n\x20/=' + '\x204;\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '//\x20remap\x20f' + 'rom\x20n_dot_' + 'h\x20formulat' + 'ino\x20to\x20n_d' + 'ot_r.\x20See\x20' + 'section\x20\x22P' + 're-convolv' + 'ed\x20Cube\x20Ma' + 'ps\x20vs\x20Path' + '\x20Tracers\x22\x20' + '-->\x20https:' + '//s3.amazo' + 'naws.com/d' + 'ocs.knaldt' + 'ech.com/kn' + 'ald/1.0.0/' + 'lys_power_' + 'drops.html' + '\x0d\x0a\x20\x20\x20\x20//\x20p' + 'erceptualR' + 'oughness\x20=' + '\x20pow(\x202/(n' + '+2),\x200.25)' + ';\x20\x20//\x20rema' + 'p\x20back\x20to\x20' + 'square\x20roo' + 't\x20of\x20real\x20') + ('roughness\x20' + '(0.25\x20incl' + 'ude\x20both\x20t' + 'he\x20sqrt\x20ro' + 'ot\x20of\x20the\x20' + 'conversion' + '\x20and\x20sqrt\x20' + 'for\x20going\x20' + 'from\x20rough' + 'ness\x20to\x20pe' + 'rceptualRo' + 'ughness)\x0d\x0a' + '\x09perceptua' + 'lRoughness' + '\x20=\x20percept' + 'ualRoughne' + 'ss\x20*\x20(1.7\x20' + '-\x200.7*perc' + 'eptualRoug' + 'hness);//j' + 'ust\x20a\x20appr' + 'oximation,' + 'but\x20fast.\x0d' + '\x0a\x20\x0d\x0a\x09mediu' + 'mp\x20float\x20m' + 'ip\x20=\x20perce' + 'ptualRough' + 'ness\x20*\x20LAY' + 'A_SPECCUBE' + '_LOD_STEPS' + ';\x0d\x0a\x09medium' + 'p\x20vec3\x20uvw' + '\x20=\x20glossIn' + '.rgb;\x0d\x0a\x09uv' + 'w.x=-uvw.x' + ';//Note:re' + 'flectCube\x20' + 'is\x20left-ha' + 'nd,so\x20x\x20ne' + 'ed\x20inverse' + '\x0d\x0a\x09mediump' + '\x20vec4\x20rgbm' + '=textureCu' + 'beLodEXT(u' + '_ReflectTe' + 'xture,uvw,' + 'mip);\x0d\x0a\x09re' + 'turn\x20decod' + 'eHDR(rgbm,' + 'u_ReflectC' + 'ubeHDRPara' + 'ms.x);\x0d\x0a}\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20laya' + 'GIIndirect' + 'Specular(L' + 'ayaGIInput' + '\x20giInput,m' + 'ediump\x20flo' + 'at\x20occlusi' + 'on,\x20vec4\x20g' + 'lossIn)\x0d\x0a{' + '\x0d\x0a\x09mediump' + '\x20vec3\x20spec' + 'ular\x20=\x20lay' + 'aGlossyEnv' + 'ironment(g' + 'lossIn);\x0d\x0a' + '\x09return\x20sp' + 'ecular\x20*\x20o' + 'cclusion;\x0d' + '\x0a}\x0d\x0a\x0d\x0a\x0d\x0aLa' + 'yaGI\x20layaG' + 'lobalIllum' + 'ination(La' + 'yaGIInput\x20' + 'giInput,me' + 'diump\x20floa' + 't\x20occlusio' + 'n,\x20mediump' + '\x20vec3\x20norm' + 'alWorld,me' + 'diump\x20vec4' + '\x20uvwRoughn' + 'ess)\x0d\x0a{\x0d\x0a\x09' + 'LayaGI\x20gi;' + '\x0d\x0a\x09gi.diff' + 'use\x20=\x20laya' + 'GIBase(giI' + 'nput,occlu' + 'sion,\x20norm' + 'alWorld);\x0d' + '\x0a\x09gi.specu' + 'lar\x20=\x20laya' + 'GIIndirect' + 'Specular(g' + 'iInput,occ' + 'lusion,\x20uv' + 'wRoughness' + ');\x0d\x0a\x09retur') + ('n\x20gi;\x0d\x0a}\x0d\x0a' + '\x0d\x0a\x0d\x0a'), _0x40f800 = '#ifdef\x20GRA' + 'PHICS_API_' + 'GLES3\x0d\x0a\x09#d' + 'efine\x20INVE' + 'RSE_MAT(ma' + 't)\x20inverse' + '(mat)\x0d\x0a#el' + 'se\x0d\x0a\x09#defi' + 'ne\x20INVERSE' + '_MAT(mat)\x20' + 'inverseMat' + '(mat)\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0astr' + 'uct\x20Direct' + 'ionLight\x20{' + '\x0d\x0a\x09vec3\x20co' + 'lor;\x0d\x0a\x09vec' + '3\x20directio' + 'n;\x0d\x0a};\x0d\x0a\x0d\x0a' + 'struct\x20Poi' + 'ntLight\x20{\x0d' + '\x0a\x09vec3\x20col' + 'or;\x0d\x0a\x09vec3' + '\x20position;' + '\x0d\x0a\x09float\x20r' + 'ange;\x0d\x0a};\x0d' + '\x0a\x0d\x0astruct\x20' + 'SpotLight\x20' + '{\x0d\x0a\x09vec3\x20c' + 'olor;\x0d\x0a\x09ve' + 'c3\x20positio' + 'n;\x0d\x0a\x09float' + '\x20range;\x0d\x0a\x09' + 'vec3\x20direc' + 'tion;\x0d\x0a\x09fl' + 'oat\x20spot;\x0d' + '\x0a};\x0d\x0a\x0d\x0astr' + 'uct\x20LayaGI' + '{\x0d\x0a\x09vec3\x20d' + 'iffuse;\x0d\x0a\x09' + 'vec3\x20specu' + 'lar;\x0d\x0a};\x0d\x0a' + '\x0d\x0astruct\x20L' + 'ayaLight{\x0d' + '\x0a\x09vec3\x20col' + 'or;\x0d\x0a\x09vec3' + '\x20dir;\x0d\x0a};\x0d' + '\x0a\x0d\x0aconst\x20i' + 'nt\x20c_Clust' + 'erBufferWi' + 'dth\x20=\x20CLUS' + 'TER_X_COUN' + 'T*CLUSTER_' + 'Y_COUNT;\x0d\x0a' + 'const\x20int\x20' + 'c_ClusterB' + 'ufferHeigh' + 't\x20=\x20CLUSTE' + 'R_Z_COUNT*' + '(1+int(cei' + 'l(float(MA' + 'X_LIGHT_CO' + 'UNT_PER_CL' + 'USTER)/4.0' + ')));\x0d\x0acons' + 't\x20int\x20c_Cl' + 'usterBuffe' + 'rFloatWidt' + 'h\x20=\x20c_Clus' + 'terBufferW' + 'idth*4;\x0d\x0a\x0d' + '\x0a#ifndef\x20G' + 'RAPHICS_AP' + 'I_GLES3\x0d\x0a\x09' + 'mat3\x20inver' + 'seMat(mat3' + '\x20m)\x20{\x0d\x0a\x09\x09f' + 'loat\x20a00\x20=' + '\x20m[0][0],\x20' + 'a01\x20=\x20m[0]' + '[1],\x20a02\x20=' + '\x20m[0][2];\x0d' + '\x0a\x09\x09float\x20a' + '10\x20=\x20m[1][' + '0],\x20a11\x20=\x20' + 'm[1][1],\x20a' + '12\x20=\x20m[1][' + '2];\x0d\x0a\x09\x09flo' + 'at\x20a20\x20=\x20m' + '[2][0],\x20a2' + '1\x20=\x20m[2][1' + '],\x20a22\x20=\x20m' + '[2][2];\x0d\x0a\x0d' + '\x0a\x09\x09float\x20b' + '01\x20=\x20a22\x20*' + '\x20a11\x20-\x20a12' + '\x20*\x20a21;\x0d\x0a\x09' + '\x09float\x20b11' + '\x20=\x20-a22\x20*\x20' + 'a10\x20+\x20a12\x20' + ('*\x20a20;\x0d\x0a\x09\x09' + 'float\x20b21\x20' + '=\x20a21\x20*\x20a1' + '0\x20-\x20a11\x20*\x20' + 'a20;\x0d\x0a\x0d\x0a\x09\x09' + 'float\x20det\x20' + '=\x20a00\x20*\x20b0' + '1\x20+\x20a01\x20*\x20' + 'b11\x20+\x20a02\x20' + '*\x20b21;\x0d\x0a\x0d\x0a' + '\x09\x09return\x20m' + 'at3(b01,\x20(' + '-a22\x20*\x20a01' + '\x20+\x20a02\x20*\x20a' + '21),\x20(a12\x20' + '*\x20a01\x20-\x20a0' + '2\x20*\x20a11),\x0d' + '\x0a\x09\x09\x09\x09\x09b11,' + '\x20(a22\x20*\x20a0' + '0\x20-\x20a02\x20*\x20' + 'a20),\x20(-a1' + '2\x20*\x20a00\x20+\x20' + 'a02\x20*\x20a10)' + ',\x0d\x0a\x09\x09\x09\x09\x09b2' + '1,\x20(-a21\x20*' + '\x20a00\x20+\x20a01' + '\x20*\x20a20),\x20(' + 'a11\x20*\x20a00\x20' + '-\x20a01\x20*\x20a1' + '0))\x20/\x20det;' + '\x0d\x0a\x09}\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aivec' + '4\x20getClust' + 'erInfo(sam' + 'pler2D\x20clu' + 'sterBuffer' + ',mat4\x20view' + 'Matrix,vec' + '4\x20viewport' + ',vec3\x20posi' + 'tion,vec4\x20' + 'fragCoord,' + 'vec4\x20proje' + 'ctParams)\x0d' + '\x0a{\x0d\x0a\x09vec3\x20' + 'viewPos\x20=\x20' + 'vec3(viewM' + 'atrix*vec4' + '(position,' + '\x201.0));\x20//' + 'position\x20i' + 'n\x20viewspac' + 'e\x0d\x0a\x0d\x0a\x09int\x20' + 'clusterXIn' + 'dex\x20=\x20int(' + 'floor(frag' + 'Coord.x/\x20(' + 'float(view' + 'port.z)/fl' + 'oat(CLUSTE' + 'R_X_COUNT)' + ')));\x0d\x0a\x20\x20\x20\x20' + 'int\x20cluste' + 'rYIndex\x20=\x20' + 'int(floor(' + '(viewport.' + 'w\x20*\x20(proje' + 'ctParams.z' + '\x20<0.0?\x200.0' + '\x20:\x201.0)\x20-\x20' + 'fragCoord.' + 'y\x20*\x20projec' + 'tParams.z)' + '/\x20(float(v' + 'iewport.w)' + '/float(CLU' + 'STER_Y_COU' + 'NT))));//M' + 'aybe\x20Flipp' + 'ed\x20Project' + 'Matrix\x0d\x0a\x09f' + 'loat\x20zSlic' + 'eParam\x20=fl' + 'oat(CLUSTE' + 'R_Z_COUNT)' + '/log2(proj' + 'ectParams.' + 'y\x20/\x20projec' + 'tParams.x)' + ';\x0d\x0a\x20\x09int\x20c' + 'lusterZInd' + 'ex\x20=\x20int(f' + 'loor(log2(' + '-viewPos.z' + ')\x20*\x20zSlice' + 'Param-\x20log' + '2(projectP' + 'arams.x)\x20*' + '\x20zSlicePar' + 'am));//pro') + ('jectParams' + '\x20x:cameraN' + 'ear\x20y:came' + 'raFar\x0d\x0a\x0d\x0a\x09' + 'vec2\x20uv=\x20v' + 'ec2((float' + '(clusterXI' + 'ndex\x20+\x20clu' + 'sterYIndex' + '\x20*\x20CLUSTER' + '_X_COUNT)+' + '0.5)/float' + '(c_Cluster' + 'BufferWidt' + 'h),\x0d\x0a\x09\x09\x09\x09(' + 'float(clus' + 'terZIndex)' + '+0.5)/floa' + 't(c_Cluste' + 'rBufferHei' + 'ght));\x0d\x0a\x09v' + 'ec4\x20cluste' + 'rPixel=tex' + 'ture2D(clu' + 'sterBuffer' + ',\x20uv);\x0d\x0a\x09r' + 'eturn\x20ivec' + '4(clusterP' + 'ixel);//X:' + 'Point\x20Coun' + 't\x20Y:Spot\x20C' + 'ount\x20Z、W:L' + 'ight\x20Offse' + 't\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a' + 'int\x20getLig' + 'htIndex(sa' + 'mpler2D\x20cl' + 'usterBuffe' + 'r,int\x20offs' + 'et,int\x20ind' + 'ex)\x20\x0d\x0a{\x0d\x0a\x09' + 'int\x20totalO' + 'ffset=offs' + 'et+index;\x0d' + '\x0a\x09int\x20row=' + 'totalOffse' + 't/c_Cluste' + 'rBufferFlo' + 'atWidth;\x0d\x0a' + '\x09int\x20lastR' + 'owFloat=to' + 'talOffset-' + 'row*c_Clus' + 'terBufferF' + 'loatWidth;' + '\x0d\x0a\x09int\x20col' + '=lastRowFl' + 'oat/4;\x0d\x0a\x09v' + 'ec2\x20uv=vec' + '2((float(c' + 'ol)+0.5)/f' + 'loat(c_Clu' + 'sterBuffer' + 'Width),\x0d\x0a\x09' + '\x09\x09\x09(float(' + 'row)+0.5)/' + 'float(c_Cl' + 'usterBuffe' + 'rHeight));' + '\x0d\x0a\x09vec4\x20te' + 'xel\x20=\x20text' + 'ure2D(clus' + 'terBuffer,' + '\x20uv);\x0d\x0a\x20\x20\x20' + '\x20int\x20pixel' + 'Component\x20' + '=\x20lastRowF' + 'loat-col*4' + ';\x0d\x0a\x20\x20\x20\x20if\x20' + '(pixelComp' + 'onent\x20==\x200' + ')\x20\x0d\x0a\x20\x20\x20\x20\x20\x20' + 'return\x20int' + '(texel.x);' + '\x0d\x0a\x20\x20\x20\x20else' + '\x20if\x20(pixel' + 'Component\x20' + '==\x201)\x20\x0d\x0a\x20\x20' + '\x20\x20\x20\x20return' + '\x20int(texel' + '.y);\x0d\x0a\x20\x20\x20\x20' + 'else\x20if\x20(p' + 'ixelCompon' + 'ent\x20==\x202)\x20' + '\x0d\x0a\x20\x20\x20\x20\x20\x20re' + 'turn\x20int(t' + 'exel.z);\x0d\x0a' + '\x20\x20\x20\x20else\x20/' + '/pixelComp' + 'onent==3\x0d\x0a') + ('\x20\x20\x20\x20\x20\x20retu' + 'rn\x20int(tex' + 'el.w);\x0d\x0a}\x0d' + '\x0a\x0d\x0aDirecti' + 'onLight\x20ge' + 'tDirection' + 'Light(samp' + 'ler2D\x20ligh' + 'tBuffer,in' + 't\x20index)\x20\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20Di' + 'rectionLig' + 'ht\x20light;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20v\x20=\x20(floa' + 't(index)+0' + '.5)/\x20float' + '(MAX_LIGHT' + '_COUNT);\x0d\x0a' + '\x20\x20\x20\x20vec4\x20p' + '1\x20=\x20textur' + 'e2D(lightB' + 'uffer,\x20vec' + '2(0.125,v)' + ');\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20p2\x20=\x20te' + 'xture2D(li' + 'ghtBuffer,' + '\x20vec2(0.37' + '5,v));\x0d\x0a\x09l' + 'ight.color' + '=p1.rgb;\x0d\x0a' + '\x20\x20\x20\x20light.' + 'direction\x20' + '=\x20p2.rgb;\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20light;\x0d\x0a' + '}\x0d\x0a\x0d\x0aPoint' + 'Light\x20getP' + 'ointLight(' + 'sampler2D\x20' + 'lightBuffe' + 'r,sampler2' + 'D\x20clusterB' + 'uffer,ivec' + '4\x20clusterI' + 'nfo,int\x20in' + 'dex)\x20\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20PointL' + 'ight\x20light' + ';\x0d\x0a\x09int\x20po' + 'intIndex=g' + 'etLightInd' + 'ex(cluster' + 'Buffer,clu' + 'sterInfo.z' + '*c_Cluster' + 'BufferFloa' + 'tWidth+clu' + 'sterInfo.w' + ',index);\x0d\x0a' + '\x20\x20\x20\x20float\x20' + 'v\x20=\x20(float' + '(pointInde' + 'x)+0.5)/\x20f' + 'loat(MAX_L' + 'IGHT_COUNT' + ');\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20p1\x20=\x20te' + 'xture2D(li' + 'ghtBuffer,' + '\x20vec2(0.12' + '5,v));\x0d\x0a\x20\x20' + '\x20\x20vec4\x20p2\x20' + '=\x20texture2' + 'D(lightBuf' + 'fer,\x20vec2(' + '0.375,v));' + '\x0d\x0a\x09light.c' + 'olor=p1.rg' + 'b;\x0d\x0a\x09light' + '.range\x20=\x20p' + '1.a;\x0d\x0a\x20\x20\x20\x20' + 'light.posi' + 'tion\x20=\x20p2.' + 'rgb;\x0d\x0a\x20\x20\x20\x20' + 'return\x20lig' + 'ht;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'SpotLight\x20' + 'getSpotLig' + 'ht(sampler' + '2D\x20lightBu' + 'ffer,sampl' + 'er2D\x20clust' + 'erBuffer,i' + 'vec4\x20clust' + 'erInfo,int' + '\x20index)\x20\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20Spo' + 'tLight\x20lig') + ('ht;\x0d\x0a\x09int\x20' + 'spoIndex=g' + 'etLightInd' + 'ex(cluster' + 'Buffer,clu' + 'sterInfo.z' + '*c_Cluster' + 'BufferFloa' + 'tWidth+clu' + 'sterInfo.w' + ',clusterIn' + 'fo.x+index' + ');\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20v\x20=\x20(f' + 'loat(spoIn' + 'dex)+0.5)/' + '\x20float(MAX' + '_LIGHT_COU' + 'NT);\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20p1\x20=\x20' + 'texture2D(' + 'lightBuffe' + 'r,\x20vec2(0.' + '125,v));\x0d\x0a' + '\x20\x20\x20\x20vec4\x20p' + '2\x20=\x20textur' + 'e2D(lightB' + 'uffer,\x20vec' + '2(0.375,v)' + ');\x0d\x0a\x09vec4\x20' + 'p3\x20=\x20textu' + 're2D(light' + 'Buffer,\x20ve' + 'c2(0.625,v' + '));\x0d\x0a\x20\x20\x20\x20l' + 'ight.color' + '\x20=\x20p1.rgb;' + '\x0d\x0a\x09light.r' + 'ange=p1.a;' + '\x0d\x0a\x20\x20\x20\x20ligh' + 't.position' + '\x20=\x20p2.rgb;' + '\x0d\x0a\x09light.s' + 'pot\x20=\x20p2.a' + ';\x0d\x0a\x09light.' + 'direction\x20' + '=\x20p3.rgb;\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20light;\x0d\x0a' + '}\x0d\x0a\x0d\x0a//\x20La' + 'ya中使用衰减纹理\x0d' + '\x0afloat\x20Lay' + 'aAttenuati' + 'on(in\x20vec3' + '\x20L,in\x20floa' + 't\x20invLight' + 'Radius)\x20{\x0d' + '\x0a\x09float\x20fR' + 'atio\x20=\x20cla' + 'mp(length(' + 'L)\x20*\x20invLi' + 'ghtRadius,' + '0.0,1.0);\x0d' + '\x0a\x09fRatio\x20*' + '=\x20fRatio;\x0d' + '\x0a\x09return\x201' + '.0\x20/\x20(1.0\x20' + '+\x2025.0\x20*\x20f' + 'Ratio)*\x20cl' + 'amp(4.0*(1' + '.0\x20-\x20fRati' + 'o),0.0,1.0' + ');\x20//fade\x20' + 'to\x20black\x20a' + 's\x20if\x204\x20pix' + 'el\x20texture' + '\x0d\x0a}\x0d\x0a\x0d\x0a//\x20' + 'Same\x20as\x20Ju' + 'st\x20Cause\x202' + '\x20and\x20Crysi' + 's\x202\x20(you\x20c' + 'an\x20read\x20GP' + 'U\x20Pro\x201\x20bo' + 'ok\x20for\x20mor' + 'e\x20informat' + 'ion)\x0d\x0afloa' + 't\x20BasicAtt' + 'enuation(i' + 'n\x20vec3\x20L,i' + 'n\x20float\x20in' + 'vLightRadi' + 'us)\x20{\x0d\x0a\x09ve' + 'c3\x20distanc' + 'e\x20=\x20L\x20*\x20in' + 'vLightRadi' + 'us;\x0d\x0a\x09floa' + 't\x20attenuat' + 'ion\x20=\x20clam' + 'p(1.0\x20-\x20do' + 't(distance') + (',\x20distance' + '),0.0,1.0)' + ';\x20//\x20Equal' + 's\x20float\x20at' + 'tenuation\x20' + '=\x20saturate' + '(1.0f\x20-\x20do' + 't(L,\x20L)\x20/\x20' + '(lightRadi' + 'us\x20*\x20\x20ligh' + 'tRadius));' + '\x0d\x0a\x09return\x20' + 'attenuatio' + 'n\x20*\x20attenu' + 'ation;\x0d\x0a}\x0d' + '\x0a\x0d\x0a//\x20Insp' + 'ired\x20on\x20ht' + 'tp://fools' + '.slindev.c' + 'om/viewtop' + 'ic.php?f=1' + '1&t=21&vie' + 'w=unread#u' + 'nread\x0d\x0aflo' + 'at\x20Natural' + 'Attenuatio' + 'n(in\x20vec3\x20' + 'L,in\x20float' + '\x20invLightR' + 'adius)\x20{\x0d\x0a' + '\x09float\x20att' + 'enuationFa' + 'ctor\x20=\x2030.' + '0;\x0d\x0a\x09vec3\x20' + 'distance\x20=' + '\x20L\x20*\x20invLi' + 'ghtRadius;' + '\x0d\x0a\x09float\x20a' + 'ttenuation' + '\x20=\x20dot(dis' + 'tance,\x20dis' + 'tance);\x20//' + '\x20Equals\x20fl' + 'oat\x20attenu' + 'ation\x20=\x20do' + 't(L,\x20L)\x20/\x20' + '(lightRadi' + 'us\x20*\x20\x20ligh' + 'tRadius);\x0d' + '\x0a\x09attenuat' + 'ion\x20=\x201.0\x20' + '/\x20(attenua' + 'tion\x20*\x20att' + 'enuationFa' + 'ctor\x20+\x201.0' + ');\x0d\x0a\x09//\x20Se' + 'cond\x20we\x20mo' + 've\x20down\x20th' + 'e\x20function' + '\x20therewith' + '\x20it\x20reache' + 's\x20zero\x20at\x20' + 'abscissa\x201' + ':\x0d\x0a\x09attenu' + 'ationFacto' + 'r\x20=\x201.0\x20/\x20' + '(attenuati' + 'onFactor\x20+' + '\x201.0);\x20//a' + 'ttenuation' + 'Factor\x20con' + 'tains\x20now\x20' + 'the\x20value\x20' + 'we\x20have\x20to' + '\x20subtract\x0d' + '\x0a\x09attenuat' + 'ion\x20=\x20max(' + 'attenuatio' + 'n\x20-\x20attenu' + 'ationFacto' + 'r,\x200.0);\x20/' + '/\x20The\x20max\x20' + 'fixes\x20a\x20bu' + 'g.\x0d\x0a\x09//\x20Fi' + 'nally\x20we\x20e' + 'xpand\x20the\x20' + 'equation\x20a' + 'long\x20the\x20y' + '-axis\x20so\x20t' + 'hat\x20it\x20sta' + 'rts\x20with\x20a' + '\x20function\x20' + 'value\x20of\x201' + '\x20again.\x0d\x0a\x09' + 'attenuatio' + 'n\x20/=\x201.0\x20-' + '\x20attenuati' + 'onFactor;\x0d' + '\x0a\x09return\x20a' + 'ttenuation') + (';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20LayaAir' + 'BlinnPhong' + 'Light\x20(in\x20' + 'vec3\x20specC' + 'olor,in\x20fl' + 'oat\x20specCo' + 'lorIntensi' + 'ty,in\x20vec3' + '\x20normal,in' + '\x20vec3\x20glos' + 's,\x20in\x20vec3' + '\x20viewDir,i' + 'n\x20vec3\x20lig' + 'htColor,\x20i' + 'n\x20vec3\x20lig' + 'htVec,out\x20' + 'vec3\x20diffu' + 'seColor,ou' + 't\x20vec3\x20spe' + 'cularColor' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec3\x20h' + '\x20=\x20normali' + 'ze(viewDir' + '-lightVec)' + ';\x0d\x0a\x09lowp\x20f' + 'loat\x20ln\x20=\x20' + 'max\x20(0.0,\x20' + 'dot\x20(-ligh' + 'tVec,norma' + 'l));\x0d\x0a\x09flo' + 'at\x20nh\x20=\x20ma' + 'x\x20(0.0,\x20do' + 't\x20(h,norma' + 'l));\x0d\x0a\x09dif' + 'fuseColor=' + 'lightColor' + '\x20*\x20ln;\x0d\x0a\x09s' + 'pecularCol' + 'or=lightCo' + 'lor\x20*specC' + 'olor*pow\x20(' + 'nh,\x20specCo' + 'lorIntensi' + 'ty*128.0)\x20' + '*\x20gloss;\x0d\x0a' + '}\x0d\x0a\x0d\x0avoid\x20' + 'LayaAirBli' + 'nnPhongDie' + 'ctionLight' + '\x20(in\x20vec3\x20' + 'specColor,' + 'in\x20float\x20s' + 'pecColorIn' + 'tensity,in' + '\x20vec3\x20norm' + 'al,in\x20vec3' + '\x20gloss,\x20in' + '\x20vec3\x20view' + 'Dir,\x20in\x20Di' + 'rectionLig' + 'ht\x20light,o' + 'ut\x20vec3\x20di' + 'ffuseColor' + ',out\x20vec3\x20' + 'specularCo' + 'lor)\x20{\x0d\x0a\x09v' + 'ec3\x20lightV' + 'ec=normali' + 'ze(light.d' + 'irection);' + '\x0d\x0a\x09LayaAir' + 'BlinnPhong' + 'Light(spec' + 'Color,spec' + 'ColorInten' + 'sity,norma' + 'l,gloss,vi' + 'ewDir,ligh' + 't.color,li' + 'ghtVec,dif' + 'fuseColor,' + 'specularCo' + 'lor);\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20Lay' + 'aAirBlinnP' + 'hongPointL' + 'ight\x20(in\x20v' + 'ec3\x20pos,in' + '\x20vec3\x20spec' + 'Color,in\x20f' + 'loat\x20specC' + 'olorIntens' + 'ity,in\x20vec' + '3\x20normal,i' + 'n\x20vec3\x20glo' + 'ss,\x20in\x20vec' + '3\x20viewDir,' + '\x20in\x20PointL') + ('ight\x20light' + ',out\x20vec3\x20' + 'diffuseCol' + 'or,out\x20vec' + '3\x20specular' + 'Color)\x20{\x0d\x0a' + '\x09vec3\x20ligh' + 'tVec\x20=\x20\x20po' + 's-light.po' + 'sition;\x0d\x0a\x09' + 'LayaAirBli' + 'nnPhongLig' + 'ht(specCol' + 'or,specCol' + 'orIntensit' + 'y,normal,g' + 'loss,viewD' + 'ir,light.c' + 'olor,light' + 'Vec/length' + '(lightVec)' + ',diffuseCo' + 'lor,specul' + 'arColor);\x0d' + '\x0a\x09float\x20at' + 'tenuate\x20=\x20' + 'LayaAttenu' + 'ation(ligh' + 'tVec,\x201.0/' + 'light.rang' + 'e);\x0d\x0a\x09diff' + 'useColor\x20*' + '=\x20attenuat' + 'e;\x0d\x0a\x09specu' + 'larColor*=' + '\x20attenuate' + ';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20LayaAir' + 'BlinnPhong' + 'SpotLight\x20' + '(in\x20vec3\x20p' + 'os,in\x20vec3' + '\x20specColor' + ',in\x20float\x20' + 'specColorI' + 'ntensity,i' + 'n\x20vec3\x20nor' + 'mal,in\x20vec' + '3\x20gloss,\x20i' + 'n\x20vec3\x20vie' + 'wDir,\x20in\x20S' + 'potLight\x20l' + 'ight,out\x20v' + 'ec3\x20diffus' + 'eColor,out' + '\x20vec3\x20spec' + 'ularColor)' + '\x20{\x0d\x0a\x09vec3\x20' + 'lightVec\x20=' + '\x20\x20pos-ligh' + 't.position' + ';\x0d\x0a\x09vec3\x20n' + 'ormalLight' + 'Vec=lightV' + 'ec/length(' + 'lightVec);' + '\x0d\x0a\x09LayaAir' + 'BlinnPhong' + 'Light(spec' + 'Color,spec' + 'ColorInten' + 'sity,norma' + 'l,gloss,vi' + 'ewDir,ligh' + 't.color,no' + 'rmalLightV' + 'ec,diffuse' + 'Color,spec' + 'ularColor)' + ';\x0d\x0a\x09vec2\x20c' + 'osAngles=c' + 'os(vec2(li' + 'ght.spot,l' + 'ight.spot*' + '0.5)*0.5);' + '//ConeAtte' + 'nuation\x0d\x0a\x09' + 'float\x20dl=d' + 'ot(normali' + 'ze(light.d' + 'irection),' + 'normalLigh' + 'tVec);\x0d\x0a\x09d' + 'l*=smooths' + 'tep(cosAng' + 'les[0],cos' + 'Angles[1],' + 'dl);\x0d\x0a\x09flo' + 'at\x20attenua' + 'te\x20=\x20LayaA') + ('ttenuation' + '(lightVec,' + '\x201.0/light' + '.range)*dl' + ';\x0d\x0a\x09diffus' + 'eColor\x20*=a' + 'ttenuate;\x0d' + '\x0a\x09specular' + 'Color\x20*=at' + 'tenuate;\x0d\x0a' + '}\x0d\x0a\x0d\x0avec3\x20' + 'NormalSamp' + 'leToWorldS' + 'pace(vec3\x20' + 'normalMapS' + 'ample,\x20vec' + '3\x20unitNorm' + 'al,\x20vec3\x20t' + 'angent,vec' + '3\x20binormal' + ')\x20{\x0d\x0a\x09vec3' + '\x20normalT\x20=' + 'vec3(2.0*n' + 'ormalMapSa' + 'mple.x\x20-\x201' + '.0,1.0-2.0' + '*normalMap' + 'Sample.y,2' + '.0*normalM' + 'apSample.z' + '\x20-\x201.0);\x0d\x0a' + '\x09mediump\x20v' + 'ec3\x20N\x20=\x20un' + 'itNormal;\x0d' + '\x0a\x09mediump\x20' + 'vec3\x20T\x20=\x20t' + 'angent;\x0d\x0a\x09' + 'mediump\x20ve' + 'c3\x20B\x20=\x20bin' + 'ormal;\x0d\x0a\x09m' + 'at3\x20TBN\x20=\x20' + 'mat3(T,\x20B,' + '\x20N);\x0d\x0a\x0d\x0a\x09/' + '/\x20Transfor' + 'm\x20from\x20tan' + 'gent\x20space' + '\x20to\x20world\x20' + 'space.\x0d\x0a\x09v' + 'ec3\x20bumped' + 'Normal\x20=no' + 'rmalize(TB' + 'N*normalT)' + ';\x0d\x0a\x09return' + '\x20bumpedNor' + 'mal;\x0d\x0a}\x0d\x0a\x0d' + '\x0avec3\x20Norm' + 'alSampleTo' + 'WorldSpace' + '1(vec4\x20nor' + 'malMapSamp' + 'le,\x20vec3\x20t' + 'angent,\x20ve' + 'c3\x20binorma' + 'l,\x20vec3\x20un' + 'itNormal)\x20' + '{\x0d\x0a\x09vec3\x20n' + 'ormalT;\x0d\x0a\x09' + 'normalT.x\x20' + '=\x202.0\x20*\x20no' + 'rmalMapSam' + 'ple.x\x20-\x201.' + '0;\x0d\x0a\x09norma' + 'lT.y\x20=\x201.0' + '\x20-\x202.0\x20*\x20n' + 'ormalMapSa' + 'mple.y;\x0d\x0a\x09' + 'normalT.z\x20' + '=\x20sqrt(1.0' + '\x20-\x20clamp(d' + 'ot(normalT' + '.xy,\x20norma' + 'lT.xy),\x200.' + '0,\x201.0));\x0d' + '\x0a\x0d\x0a\x09vec3\x20T' + '\x20=\x20normali' + 'ze(tangent' + ');\x0d\x0a\x09vec3\x20' + 'B\x20=\x20normal' + 'ize(binorm' + 'al);\x0d\x0a\x09vec' + '3\x20N\x20=\x20norm' + 'alize(unit' + 'Normal);\x0d\x0a' + '\x09mat3\x20TBN\x20' + '=\x20mat3(T,\x20' + 'B,\x20N);\x0d\x0a\x0d\x0a' + '\x09//\x20Transf' + 'orm\x20from\x20t' + 'angent\x20spa' + 'ce\x20to\x20worl') + ('d\x20space.\x0d\x0a' + '\x09vec3\x20bump' + 'edNormal\x20=' + '\x20TBN\x20*\x20nor' + 'malize(nor' + 'malT);\x0d\x0a\x0d\x0a' + '\x09return\x20bu' + 'mpedNormal' + ';\x0d\x0a}\x0d\x0a\x0d\x0ave' + 'c3\x20DecodeL' + 'ightmap(ve' + 'c4\x20color)\x20' + '{\x0d\x0a\x09return' + '\x20color.rgb' + '*color.a*5' + '.0;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec3\x20decod' + 'eHDR(vec4\x20' + 'color,floa' + 't\x20range)\x20{' + '\x0d\x0a\x09return\x20' + 'color.rgb*' + 'color.a*ra' + 'nge;\x0d\x0a}\x0d\x0a\x0d' + '\x0avec2\x20Tran' + 'sformUV(ve' + 'c2\x20texcoor' + 'd,vec4\x20til' + 'ingOffset)' + '\x20{\x0d\x0a\x09vec2\x20' + 'transTexco' + 'ord=vec2(t' + 'excoord.x,' + 'texcoord.y' + '-1.0)*tili' + 'ngOffset.x' + 'y+vec2(til' + 'ingOffset.' + 'z,-tilingO' + 'ffset.w);\x0d' + '\x0a\x09transTex' + 'coord.y+=1' + '.0;\x0d\x0a\x09retu' + 'rn\x20transTe' + 'xcoord;\x0d\x0a}' + '\x0d\x0a\x0d\x0avec4\x20r' + 'emapGLPosi' + 'tionZ(vec4' + '\x20position)' + '\x20{\x0d\x0a\x09posit' + 'ion.z=posi' + 'tion.z\x20*\x202' + '.0\x20-\x20posit' + 'ion.w;\x0d\x0a\x09r' + 'eturn\x20posi' + 'tion;\x0d\x0a}\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec3\x20layaL' + 'inearToGam' + 'maSpace\x20(m' + 'ediump\x20vec' + '3\x20linRGB)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20li' + 'nRGB\x20=\x20max' + '(linRGB,\x20v' + 'ec3(0.0));' + '\x0d\x0a\x20\x20\x20\x20//\x20A' + 'n\x20almost-p' + 'erfect\x20app' + 'roximation' + '\x20from\x20http' + '://chillia' + 'nt.blogspo' + 't.com.au/2' + '012/08/srg' + 'b-approxim' + 'ations-for' + '-hlsl.html' + '?m=1\x0d\x0a\x20\x20\x20\x20' + 'return\x20max' + '(1.055\x20*\x20p' + 'ow(linRGB,' + 'vec3(0.416' + '666667))\x20-' + '\x200.055,\x200.' + '0);\x20\x20\x20\x0d\x0a}\x0d' + '\x0a\x0d\x0aLayaLig' + 'ht\x20layaDir' + 'ectionLigh' + 'tToLight(i' + 'n\x20Directio' + 'nLight\x20lig' + 'ht,in\x20floa' + 't\x20attenuat' + 'e)\x0d\x0a{\x0d\x0a\x09La' + 'yaLight\x20re' + 'light;\x0d\x0a\x09r' + 'elight.col' + 'or\x20=\x20light' + '.color*att') + ('enuate;\x0d\x0a\x09' + 'relight.di' + 'r\x20=\x20light.' + 'direction;' + '\x0d\x0a\x09return\x20' + 'relight;\x0d\x0a' + '}\x0d\x0a\x0d\x0aLayaL' + 'ight\x20layaP' + 'ointLightT' + 'oLight(in\x20' + 'vec3\x20pos,i' + 'n\x20vec3\x20nor' + 'mal,\x20in\x20Po' + 'intLight\x20l' + 'ight,in\x20fl' + 'oat\x20attenu' + 'ate)\x0d\x0a{\x0d\x0a\x09' + 'LayaLight\x20' + 'relight;\x0d\x0a' + '\x09vec3\x20ligh' + 'tVec\x20=\x20\x20po' + 's-light.po' + 'sition;\x0d\x0a\x09' + 'attenuate\x20' + '*=\x20LayaAtt' + 'enuation(l' + 'ightVec,\x201' + '.0/light.r' + 'ange);\x0d\x0a\x09r' + 'elight.col' + 'or\x20=\x20light' + '.color*att' + 'enuate;\x0d\x0a\x09' + 'relight.di' + 'r\x20=\x20normal' + 'ize(lightV' + 'ec);\x0d\x0a\x09ret' + 'urn\x20religh' + 't;\x0d\x0a}\x0d\x0a\x0d\x0aL' + 'ayaLight\x20l' + 'ayaSpotLig' + 'htToLight(' + 'in\x20vec3\x20po' + 's,in\x20vec3\x20' + 'normal,\x20in' + '\x20SpotLight' + '\x20light,in\x20' + 'float\x20atte' + 'nuate)\x0d\x0a{\x0d' + '\x0a\x09LayaLigh' + 't\x20relight;' + '\x0d\x0a\x09vec3\x20li' + 'ghtVec\x20=\x20\x20' + 'pos-light.' + 'position;\x0d' + '\x0a\x09vec3\x20nor' + 'malLightVe' + 'c=lightVec' + '/length(li' + 'ghtVec);\x0d\x0a' + '\x09vec2\x20cosA' + 'ngles=cos(' + 'vec2(light' + '.spot,ligh' + 't.spot*0.5' + ')*0.5);//C' + 'oneAttenua' + 'tion\x0d\x0a\x09flo' + 'at\x20dl=dot(' + 'normalize(' + 'light.dire' + 'ction),nor' + 'malLightVe' + 'c);\x0d\x0a\x09dl*=' + 'smoothstep' + '(cosAngles' + '[0],cosAng' + 'les[1],dl)' + ';\x0d\x0a\x09attenu' + 'ate\x20*=\x20Lay' + 'aAttenuati' + 'on(lightVe' + 'c,\x201.0/lig' + 'ht.range)*' + 'dl;\x0d\x0a\x09reli' + 'ght.dir\x20=\x20' + 'lightVec;\x0d' + '\x0a\x09relight.' + 'color\x20=\x20li' + 'ght.color*' + 'attenuate;' + '\x0d\x0a\x09return\x20' + 'relight;\x0d\x0a' + '}\x0d\x0a\x0d\x0a'), _0x4bc4a1 = '//\x20-------' + '----------' + '----------' + '----------' + '----------' + '----------' + '---------\x0d' + '\x0a//\x20\x20PCF\x20F' + 'iltering\x20T' + 'ent\x20Functi' + 'ons\x0d\x0a//\x20--' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----\x0d\x0a\x0d\x0a//' + '\x20Assuming\x20' + 'a\x20isoceles' + '\x20right\x20ang' + 'led\x20triang' + 'le\x20of\x20heig' + 'ht\x20\x22triang' + 'leHeight\x22\x20' + '(as\x20drawn\x20' + 'below).\x0d\x0a/' + '/\x20This\x20fun' + 'ction\x20retu' + 'rn\x20the\x20are' + 'a\x20of\x20the\x20t' + 'riangle\x20ab' + 'ove\x20the\x20fi' + 'rst\x20texel(' + 'in\x20Y\x20the\x20f' + 'irst\x20texel' + ').\x0d\x0a//\x0d\x0a//' + '\x20|\x5c\x20\x20\x20\x20\x20\x20<' + '--\x2045\x20degr' + 'ee\x20slop\x20is' + 'osceles\x20ri' + 'ght\x20angled' + '\x20triangle\x0d' + '\x0a//\x20|\x20\x5c\x0d\x0a/' + '/\x20----\x20\x20\x20\x20' + '<--\x20length' + '\x20of\x20this\x20s' + 'ide\x20is\x20\x22tr' + 'iangleHeig' + 'ht\x22\x0d\x0a//\x20_\x20' + '_\x20_\x20_\x20<--\x20' + 'texels\x0d\x0afl' + 'oat\x20sample' + 'ShadowGetI' + 'RTriangleT' + 'exelArea(f' + 'loat\x20trian' + 'gleHeight)' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20tria' + 'ngleHeight' + '\x20-\x200.5;\x0d\x0a}' + '\x0d\x0a\x0d\x0a//\x20Ass' + 'uming\x20a\x20is' + 'oceles\x20tri' + 'angle\x20of\x201' + '.5\x20texels\x20' + 'height\x20and' + '\x203\x20texels\x20' + 'wide\x20lying' + '\x20on\x204\x20texe' + 'ls.\x0d\x0a//\x20Th' + 'is\x20functio' + 'n\x20return\x20t' + 'he\x20area\x20of' + '\x20the\x20trian' + 'gle\x20above\x20' + 'each\x20of\x20th' + 'ose\x20texels' + '.\x0d\x0a//\x20\x20\x20\x20|' + '\x20\x20\x20\x20<--\x20of' + 'fset\x20from\x20' + '-0.5\x20to\x200.' + '5,\x200\x20meani' + 'ng\x20triangl' + 'e\x20is\x20exact' + 'ly\x20in\x20the\x20' + 'center\x0d\x0a//' + '\x20\x20\x20/\x20\x5c\x20\x20\x20<' + '--\x2045\x20degr' + 'ee\x20slop\x20is' + 'osceles\x20tr' + 'iangle\x20(ie' + '\x20tent\x20proj' + 'ected\x20in\x202' + 'D)\x0d\x0a//\x20\x20/\x20' + '\x20\x20\x5c\x0d\x0a//\x20_\x20' + '_\x20_\x20_\x20<--\x20' + 'texels\x0d\x0a//' + '\x20X\x20Y\x20Z\x20W\x20<' + ('--\x20result\x20' + 'indices\x20(i' + 'n\x20computed' + 'Area.xyzw\x20' + 'and\x20comput' + 'edAreaUncu' + 't.xyzw)\x0d\x0a/' + '/\x20Top\x20poin' + 't\x20at\x20(righ' + 't,top)\x20in\x20' + 'a\x20texel,le' + 'ft\x20bottom\x20' + 'point\x20at\x20(' + 'middle,mid' + 'dle)\x20in\x20a\x20' + 'texel,righ' + 't\x20bottom\x20p' + 'oint\x20at\x20(m' + 'iddle,midd' + 'le)\x20in\x20a\x20t' + 'exel.\x0d\x0avoi' + 'd\x20sampleSh' + 'adowGetTex' + 'elAreasTen' + 't3x3(float' + '\x20offset,\x20o' + 'ut\x20vec4\x20co' + 'mputedArea' + ',\x20out\x20vec4' + '\x20computedA' + 'reaUncut)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20//' + '\x20Compute\x20t' + 'he\x20exterio' + 'r\x20areas,a\x20' + 'and\x20h\x20is\x20s' + 'ame.\x0d\x0a\x20\x20\x20\x20' + 'float\x20a\x20=\x20' + 'offset\x20+\x200' + '.5;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20offse' + 'tSquaredHa' + 'lved\x20=\x20a\x20*' + '\x20a\x20*\x200.5;\x0d' + '\x0a\x20\x20\x20\x20compu' + 'tedAreaUnc' + 'ut.x\x20=\x20com' + 'putedArea.' + 'x\x20=\x20offset' + 'SquaredHal' + 'ved\x20-\x20offs' + 'et;\x0d\x0a\x20\x20\x20\x20c' + 'omputedAre' + 'aUncut.w\x20=' + '\x20computedA' + 'rea.w\x20=\x20of' + 'fsetSquare' + 'dHalved;\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20//\x20C' + 'ompute\x20the' + '\x20middle\x20ar' + 'eas\x0d\x0a\x20\x20\x20\x20/' + '/\x20For\x20Y\x20:\x20' + 'We\x20find\x20th' + 'e\x20area\x20in\x20' + 'Y\x20of\x20as\x20if' + '\x20the\x20left\x20' + 'section\x20of' + '\x20the\x20isoce' + 'les\x20triang' + 'le\x20would\x0d\x0a' + '\x20\x20\x20\x20//\x20int' + 'ersect\x20the' + '\x20axis\x20betw' + 'een\x20Y\x20and\x20' + 'Z\x20(ie\x20wher' + 'e\x20offset\x20=' + '\x200).\x0d\x0a\x20\x20\x20\x20' + 'computedAr' + 'eaUncut.y\x20' + '=\x20sampleSh' + 'adowGetIRT' + 'riangleTex' + 'elArea(1.5' + '\x20-\x20offset)' + ';\x0d\x0a\x20\x20\x20\x20//\x20' + 'This\x20area\x20' + 'is\x20superio' + 'r\x20to\x20the\x20o' + 'ne\x20we\x20are\x20' + 'looking\x20fo' + 'r\x20if\x20(offs' + 'et\x20<\x200)\x20th' + 'us\x20we\x20need' + '\x20to\x0d\x0a\x20\x20\x20\x20/' + '/\x20subtract' + '\x20the\x20area\x20' + 'of\x20the\x20tri' + 'angle\x20defi' + 'ned\x20by\x20(0,') + ('1.5-offset' + '),\x20(0,1.5+' + 'offset),\x20(' + '-offset,1.' + '5).\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20clamp' + 'edOffsetLe' + 'ft\x20=\x20min(o' + 'ffset,0.0)' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20areaOfS' + 'mallLeftTr' + 'iangle\x20=\x20c' + 'lampedOffs' + 'etLeft\x20*\x20c' + 'lampedOffs' + 'etLeft;\x0d\x0a\x20' + '\x20\x20\x20compute' + 'dArea.y\x20=\x20' + 'computedAr' + 'eaUncut.y\x20' + '-\x20areaOfSm' + 'allLeftTri' + 'angle;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20//\x20We\x20' + 'do\x20the\x20sam' + 'e\x20for\x20the\x20' + 'Z\x20but\x20with' + '\x20the\x20right' + '\x20part\x20of\x20t' + 'he\x20isocele' + 's\x20triangle' + '\x0d\x0a\x20\x20\x20\x20comp' + 'utedAreaUn' + 'cut.z\x20=\x20sa' + 'mpleShadow' + 'GetIRTrian' + 'gleTexelAr' + 'ea(1.5\x20+\x20o' + 'ffset);\x0d\x0a\x20' + '\x20\x20\x20float\x20c' + 'lampedOffs' + 'etRight\x20=\x20' + 'max(offset' + ',0.0);\x0d\x0a\x20\x20' + '\x20\x20float\x20ar' + 'eaOfSmallR' + 'ightTriang' + 'le\x20=\x20clamp' + 'edOffsetRi' + 'ght\x20*\x20clam' + 'pedOffsetR' + 'ight;\x0d\x0a\x20\x20\x20' + '\x20computedA' + 'rea.z\x20=\x20co' + 'mputedArea' + 'Uncut.z\x20-\x20' + 'areaOfSmal' + 'lRightTria' + 'ngle;\x0d\x0a}\x0d\x0a' + '\x0d\x0a//\x20Assum' + 'ing\x20a\x20isoc' + 'eles\x20trian' + 'gle\x20of\x202.5' + '\x20texel\x20hei' + 'ght\x20and\x205\x20' + 'texels\x20wid' + 'e\x20lying\x20on' + '\x206\x20texels.' + '\x0d\x0a//\x20This\x20' + 'function\x20r' + 'eturn\x20the\x20' + 'weight\x20of\x20' + 'each\x20texel' + 's\x20area\x20rel' + 'ative\x20to\x20t' + 'he\x20full\x20tr' + 'iangle\x20are' + 'a.\x0d\x0a//\x20\x20/\x20' + '\x20\x20\x20\x20\x20\x20\x5c\x0d\x0a/' + '/\x20_\x20_\x20_\x20_\x20' + '_\x20_\x20<--\x20te' + 'xels\x0d\x0a//\x200' + '\x201\x202\x203\x204\x205' + '\x20<--\x20compu' + 'ted\x20area\x20i' + 'ndices\x20(in' + '\x20texelsWei' + 'ghts[])\x0d\x0a/' + '/\x20Top\x20poin' + 't\x20at\x20(righ' + 't,top)\x20in\x20' + 'a\x20texel,le' + 'ft\x20bottom\x20' + 'point\x20at\x20(' + 'middle,mid' + 'dle)\x20in\x20a\x20' + 'texel,righ' + 't\x20bottom\x20p' + 'oint\x20at\x20(m') + ('iddle,midd' + 'le)\x20in\x20a\x20t' + 'exel.\x0d\x0avoi' + 'd\x20sampleSh' + 'adowGetTex' + 'elWeightsT' + 'ent5x5(flo' + 'at\x20offset,' + '\x20out\x20vec3\x20' + 'texelsWeig' + 'htsA,\x20out\x20' + 'vec3\x20texel' + 'sWeightsB)' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20v' + 'ec4\x20areaFr' + 'om3texelTr' + 'iangle;\x0d\x0a\x20' + '\x20\x20\x20vec4\x20ar' + 'eaUncutFro' + 'm3texelTri' + 'angle;\x0d\x0a\x20\x20' + '\x20\x20sampleSh' + 'adowGetTex' + 'elAreasTen' + 't3x3(offse' + 't,\x20areaFro' + 'm3texelTri' + 'angle,\x20are' + 'aUncutFrom' + '3texelTria' + 'ngle);\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20//\x20Tri' + 'angle\x20slop' + 'e\x20is\x2045\x20de' + 'gree\x20thus\x20' + 'we\x20can\x20alm' + 'ost\x20reuse\x20' + 'the\x20result' + '\x20of\x20the\x203\x20' + 'texel\x20wide' + '\x20computati' + 'on.\x0d\x0a\x20\x20\x20\x20/' + '/\x20the\x205\x20te' + 'xel\x20wide\x20t' + 'riangle\x20ca' + 'n\x20be\x20seen\x20' + 'as\x20the\x203\x20t' + 'exel\x20wide\x20' + 'one\x20but\x20sh' + 'ifted\x20up\x20b' + 'y\x20one\x20unit' + '/texel.\x0d\x0a\x20' + '\x20\x20\x20//\x200.16' + '\x20is\x201/(the' + '\x20triangle\x20' + 'area)\x0d\x0a\x20\x20\x20' + '\x20texelsWei' + 'ghtsA.x\x20=\x20' + '0.16\x20*\x20(ar' + 'eaFrom3tex' + 'elTriangle' + '.x);\x0d\x0a\x20\x20\x20\x20' + 'texelsWeig' + 'htsA.y\x20=\x200' + '.16\x20*\x20(are' + 'aUncutFrom' + '3texelTria' + 'ngle.y);\x0d\x0a' + '\x20\x20\x20\x20texels' + 'WeightsA.z' + '\x20=\x200.16\x20*\x20' + '(areaFrom3' + 'texelTrian' + 'gle.y\x20+\x201.' + '0);\x0d\x0a\x20\x20\x20\x20t' + 'exelsWeigh' + 'tsB.x\x20=\x200.' + '16\x20*\x20(area' + 'From3texel' + 'Triangle.z' + '\x20+\x201.0);\x0d\x0a' + '\x20\x20\x20\x20texels' + 'WeightsB.y' + '\x20=\x200.16\x20*\x20' + '(areaUncut' + 'From3texel' + 'Triangle.z' + ');\x0d\x0a\x20\x20\x20\x20te' + 'xelsWeight' + 'sB.z\x20=\x200.1' + '6\x20*\x20(areaF' + 'rom3texelT' + 'riangle.w)' + ';\x0d\x0a}\x0d\x0a\x0d\x0a//' + '\x205x5\x20Tent\x20' + 'filter\x20(45' + '\x20degree\x20sl' + 'oped\x20trian' + 'gles\x20in\x20U\x20' + 'and\x20V)\x0d\x0avo') + ('id\x20sampleS' + 'hadowCompu' + 'teSamplesT' + 'ent5x5(vec' + '4\x20shadowMa' + 'pTextureTe' + 'xelSize,\x20v' + 'ec2\x20coord,' + '\x20out\x20float' + '\x20fetchesWe' + 'ights[9],\x20' + 'out\x20vec2\x20f' + 'etchesUV[9' + '])\x0d\x0a{\x0d\x0a\x20\x20\x20' + '\x20//\x20tent\x20b' + 'ase\x20is\x205x5' + '\x20base\x20thus' + '\x20covering\x20' + 'from\x2025\x20to' + '\x2036\x20texels' + ',\x20thus\x20we\x20' + 'need\x209\x20bil' + 'inear\x20PCF\x20' + 'fetches\x0d\x0a\x20' + '\x20\x20\x20vec2\x20te' + 'ntCenterIn' + 'TexelSpace' + '\x20=\x20coord.x' + 'y\x20*\x20shadow' + 'MapTexture' + 'TexelSize.' + 'zw;\x0d\x0a\x20\x20\x20\x20v' + 'ec2\x20center' + 'OfFetchesI' + 'nTexelSpac' + 'e\x20=\x20floor(' + 'tentCenter' + 'InTexelSpa' + 'ce\x20+\x200.5);' + '\x0d\x0a\x20\x20\x20\x20vec2' + '\x20offsetFro' + 'mTentCente' + 'rToCenterO' + 'fFetches\x20=' + '\x20tentCente' + 'rInTexelSp' + 'ace\x20-\x20cent' + 'erOfFetche' + 'sInTexelSp' + 'ace;\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20//\x20find\x20' + 'the\x20weight' + '\x20of\x20each\x20t' + 'exel\x20based' + '\x20on\x20the\x20ar' + 'ea\x20of\x20a\x2045' + '\x20degree\x20sl' + 'op\x20tent\x20ab' + 'ove\x20each\x20o' + 'f\x20them.\x0d\x0a\x20' + '\x20\x20\x20vec3\x20te' + 'xelsWeight' + 'sUA,\x20texel' + 'sWeightsUB' + ';\x0d\x0a\x20\x20\x20\x20vec' + '3\x20texelsWe' + 'ightsVA,\x20t' + 'exelsWeigh' + 'tsVB;\x0d\x0a\x20\x20\x20' + '\x20sampleSha' + 'dowGetTexe' + 'lWeightsTe' + 'nt5x5(offs' + 'etFromTent' + 'CenterToCe' + 'nterOfFetc' + 'hes.x,\x20tex' + 'elsWeights' + 'UA,\x20texels' + 'WeightsUB)' + ';\x0d\x0a\x20\x20\x20\x20sam' + 'pleShadowG' + 'etTexelWei' + 'ghtsTent5x' + '5(offsetFr' + 'omTentCent' + 'erToCenter' + 'OfFetches.' + 'y,\x20texelsW' + 'eightsVA,\x20' + 'texelsWeig' + 'htsVB);\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20//\x20ea' + 'ch\x20fetch\x20w' + 'ill\x20cover\x20' + 'a\x20group\x20of' + '\x202x2\x20texel' + 's,\x20the\x20wei' + 'ght\x20of\x20eac' + 'h\x20group\x20is') + ('\x20the\x20sum\x20o' + 'f\x20the\x20weig' + 'hts\x20of\x20the' + '\x20texels\x0d\x0a\x20' + '\x20\x20\x20vec3\x20fe' + 'tchesWeigh' + 'tsU\x20=\x20vec3' + '(texelsWei' + 'ghtsUA.xz,' + '\x20texelsWei' + 'ghtsUB.y)\x20' + '+\x20vec3(tex' + 'elsWeights' + 'UA.y,\x20texe' + 'lsWeightsU' + 'B.xz);\x0d\x0a\x20\x20' + '\x20\x20vec3\x20fet' + 'chesWeight' + 'sV\x20=\x20vec3(' + 'texelsWeig' + 'htsVA.xz,\x20' + 'texelsWeig' + 'htsVB.y)\x20+' + '\x20vec3(texe' + 'lsWeightsV' + 'A.y,\x20texel' + 'sWeightsVB' + '.xz);\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20//\x20move' + '\x20the\x20PCF\x20b' + 'ilinear\x20fe' + 'tches\x20to\x20r' + 'espect\x20tex' + 'els\x20weight' + 's\x0d\x0a\x20\x20\x20\x20vec' + '3\x20fetchesO' + 'ffsetsU\x20=\x20' + 'vec3(texel' + 'sWeightsUA' + '.y,\x20texels' + 'WeightsUB.' + 'xz)\x20/\x20fetc' + 'hesWeights' + 'U.xyz\x20+\x20ve' + 'c3(-2.5,-0' + '.5,1.5);\x0d\x0a' + '\x20\x20\x20\x20vec3\x20f' + 'etchesOffs' + 'etsV\x20=\x20vec' + '3(texelsWe' + 'ightsVA.y,' + '\x20texelsWei' + 'ghtsVB.xz)' + '\x20/\x20fetches' + 'WeightsV.x' + 'yz\x20+\x20vec3(' + '-2.5,-0.5,' + '1.5);\x0d\x0a\x20\x20\x20' + '\x20fetchesOf' + 'fsetsU\x20*=\x20' + 'shadowMapT' + 'extureTexe' + 'lSize.xxx;' + '\x0d\x0a\x20\x20\x20\x20fetc' + 'hesOffsets' + 'V\x20*=\x20shado' + 'wMapTextur' + 'eTexelSize' + '.yyy;\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20vec2\x20bi' + 'linearFetc' + 'hOrigin\x20=\x20' + 'centerOfFe' + 'tchesInTex' + 'elSpace\x20*\x20' + 'shadowMapT' + 'extureTexe' + 'lSize.xy;\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esUV[0]\x20=\x20' + 'bilinearFe' + 'tchOrigin\x20' + '+\x20vec2(fet' + 'chesOffset' + 'sU.x,\x20fetc' + 'hesOffsets' + 'V.x);\x0d\x0a\x20\x20\x20' + '\x20fetchesUV' + '[1]\x20=\x20bili' + 'nearFetchO' + 'rigin\x20+\x20ve' + 'c2(fetches' + 'OffsetsU.y' + ',\x20fetchesO' + 'ffsetsV.x)' + ';\x0d\x0a\x20\x20\x20\x20fet' + 'chesUV[2]\x20' + '=\x20bilinear' + 'FetchOrigi' + 'n\x20+\x20vec2(f') + ('etchesOffs' + 'etsU.z,\x20fe' + 'tchesOffse' + 'tsV.x);\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'UV[3]\x20=\x20bi' + 'linearFetc' + 'hOrigin\x20+\x20' + 'vec2(fetch' + 'esOffsetsU' + '.x,\x20fetche' + 'sOffsetsV.' + 'y);\x0d\x0a\x20\x20\x20\x20f' + 'etchesUV[4' + ']\x20=\x20biline' + 'arFetchOri' + 'gin\x20+\x20vec2' + '(fetchesOf' + 'fsetsU.y,\x20' + 'fetchesOff' + 'setsV.y);\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esUV[5]\x20=\x20' + 'bilinearFe' + 'tchOrigin\x20' + '+\x20vec2(fet' + 'chesOffset' + 'sU.z,\x20fetc' + 'hesOffsets' + 'V.y);\x0d\x0a\x20\x20\x20' + '\x20fetchesUV' + '[6]\x20=\x20bili' + 'nearFetchO' + 'rigin\x20+\x20ve' + 'c2(fetches' + 'OffsetsU.x' + ',\x20fetchesO' + 'ffsetsV.z)' + ';\x0d\x0a\x20\x20\x20\x20fet' + 'chesUV[7]\x20' + '=\x20bilinear' + 'FetchOrigi' + 'n\x20+\x20vec2(f' + 'etchesOffs' + 'etsU.y,\x20fe' + 'tchesOffse' + 'tsV.z);\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'UV[8]\x20=\x20bi' + 'linearFetc' + 'hOrigin\x20+\x20' + 'vec2(fetch' + 'esOffsetsU' + '.z,\x20fetche' + 'sOffsetsV.' + 'z);\x0d\x0a\x0d\x0a\x20\x20\x20' + '\x20fetchesWe' + 'ights[0]\x20=' + '\x20fetchesWe' + 'ightsU.x\x20*' + '\x20fetchesWe' + 'ightsV.x;\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esWeights[' + '1]\x20=\x20fetch' + 'esWeightsU' + '.y\x20*\x20fetch' + 'esWeightsV' + '.x;\x0d\x0a\x20\x20\x20\x20f' + 'etchesWeig' + 'hts[2]\x20=\x20f' + 'etchesWeig' + 'htsU.z\x20*\x20f' + 'etchesWeig' + 'htsV.x;\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'Weights[3]' + '\x20=\x20fetches' + 'WeightsU.x' + '\x20*\x20fetches' + 'WeightsV.y' + ';\x0d\x0a\x20\x20\x20\x20fet' + 'chesWeight' + 's[4]\x20=\x20fet' + 'chesWeight' + 'sU.y\x20*\x20fet' + 'chesWeight' + 'sV.y;\x0d\x0a\x20\x20\x20' + '\x20fetchesWe' + 'ights[5]\x20=' + '\x20fetchesWe' + 'ightsU.z\x20*' + '\x20fetchesWe' + 'ightsV.y;\x0d' + '\x0a\x20\x20\x20\x20fetch' + 'esWeights[' + '6]\x20=\x20fetch' + 'esWeightsU' + '.x\x20*\x20fetch' + 'esWeightsV') + ('.z;\x0d\x0a\x20\x20\x20\x20f' + 'etchesWeig' + 'hts[7]\x20=\x20f' + 'etchesWeig' + 'htsU.y\x20*\x20f' + 'etchesWeig' + 'htsV.z;\x0d\x0a\x20' + '\x20\x20\x20fetches' + 'Weights[8]' + '\x20=\x20fetches' + 'WeightsU.z' + '\x20*\x20fetches' + 'WeightsV.z' + ';\x0d\x0a}'), _0x38a2a1 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0apreci' + 'sion\x20highp' + '\x20float;\x0d\x0a#' + 'else\x0d\x0aprec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'Color;\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x20\x20gl' + '_FragColor' + '\x20=\x20v_Color' + '\x20*\x20u_Color' + ';\x20\x0d\x0a}\x0d\x0a\x0d\x0a', _0x30ba13 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0auni' + 'form\x20mat4\x20' + 'u_MvpMatri' + 'x;\x0d\x0aunifor' + 'm\x20vec4\x20u_C' + 'olor;\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Color;' + '\x0d\x0avarying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0a\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09gl_P' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20a_Posi' + 'tion;\x0d\x0a\x09v_' + 'Color=a_Co' + 'lor*u_Colo' + 'r;\x0d\x0a\x09gl_Po' + 'sition=rem' + 'apGLPositi' + 'onZ(gl_Pos' + 'ition);\x0d\x0a}', _0x4616a0 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22Lighting' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'hadow.glsl' + '\x22\x0d\x0a\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'DiffuseCol' + 'or;\x0d\x0a\x0d\x0a#if' + '\x20defined(C' + 'OLOR)&&def' + 'ined(ENABL' + 'EVERTEXCOL' + 'OR)\x0d\x0a\x09vary' + 'ing\x20vec4\x20v' + '_Color;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20ALPH' + 'ATEST\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_AlphaT' + 'estValue;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20DI' + 'FFUSEMAP\x0d\x0a' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_DiffuseTe' + 'xture;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)||((def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + '))&&(defin' + 'ed(SPECULA' + 'RMAP)||def' + 'ined(NORMA' + 'LMAP)))\x0d\x0a\x09' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + 'def\x20LIGHTM' + 'AP\x0d\x0a\x09varyi' + 'ng\x20vec2\x20v_' + 'LightMapUV' + ';\x0d\x0a\x09unifor' + 'm\x20sampler2' + 'D\x20u_LightM' + 'ap;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Normal;\x0d\x0a#' + 'if\x20defined' + '(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT)\x0d\x0a\x09' + 'varying\x20ve' + 'c3\x20v_ViewD' + 'ir;\x20\x0d\x0a\x0d\x0a\x09u' + 'niform\x20vec' + '3\x20u_Materi' + 'alSpecular' + ';\x0d\x0a\x09unifor' + 'm\x20float\x20u_' + 'Shininess;' + '\x0d\x0a\x0d\x0a\x09#ifde' + 'f\x20LEGACYSI' + 'NGLELIGHTI' + 'NG\x0d\x0a\x09\x09#ifd' + 'ef\x20DIRECTI' + 'ONLIGHT\x0d\x0a\x09' + '\x09\x09uniform\x20' + 'DirectionL' + 'ight\x20u_Dir' + 'ectionLigh' + ('t;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20POINTLI' + 'GHT\x0d\x0a\x09\x09\x09un' + 'iform\x20Poin' + 'tLight\x20u_P' + 'ointLight;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20SPOTLIGHT' + '\x0d\x0a\x09\x09\x09unifo' + 'rm\x20SpotLig' + 'ht\x20u_SpotL' + 'ight;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09uni' + 'form\x20mat4\x20' + 'u_View;\x0d\x0a\x09' + '\x09uniform\x20v' + 'ec4\x20u_Proj' + 'ectionPara' + 'ms;\x0d\x0a\x09\x09uni' + 'form\x20vec4\x20' + 'u_Viewport' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20int\x20u_D' + 'irationLig' + 'htCount;\x0d\x0a' + '\x09\x09uniform\x20' + 'sampler2D\x20' + 'u_LightBuf' + 'fer;\x0d\x0a\x09\x09un' + 'iform\x20samp' + 'ler2D\x20u_Li' + 'ghtCluster' + 'Buffer;\x0d\x0a\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09#ifdef\x20SP' + 'ECULARMAP\x20' + '\x0d\x0a\x09\x09unifor' + 'm\x20sampler2' + 'D\x20u_Specul' + 'arTexture;' + '\x0d\x0a\x09#endif\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20NO' + 'RMALMAP\x20\x0d\x0a' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_NormalTex' + 'ture;\x0d\x0a\x09va' + 'rying\x20vec3' + '\x20v_Tangent' + ';\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_B' + 'inormal;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20FOG' + '\x0d\x0a\x09uniform' + '\x20float\x20u_F' + 'ogStart;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Fog' + 'Range;\x0d\x0a\x09u' + 'niform\x20vec' + '3\x20u_FogCol' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT)||' + '(defined(C' + 'ALCULATE_S' + 'HADOWS)&&d' + 'efined(SHA' + 'DOW_CASCAD' + 'E))\x0d\x0a\x09vary' + 'ing\x20vec3\x20v' + '_PositionW' + 'orld;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a\x0d\x0a#' + 'include\x20\x22G' + 'lobalIllum' + 'ination.gl' + 'sl\x22;//\x22Glo' + 'balIllumin' + 'ation.glsl' + '\x20use\x20unifo' + 'rm\x20should\x20' + 'at\x20front\x20o' + 'f\x20this\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(CALCULAT' + 'E_SHADOWS)' + '&&!defined' + '(SHADOW_CA' + 'SCADE)\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_Shadow') + ('Coord;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0avo' + 'id\x20main()\x0d' + '\x0a{\x0d\x0a\x09vec3\x20' + 'normal;//l' + 'ight\x20and\x20S' + 'H\x20maybe\x20us' + 'e\x20normal\x0d\x0a' + '\x09#if\x20defin' + 'ed(NORMALM' + 'AP)\x0d\x0a\x09\x09vec' + '3\x20normalMa' + 'pSample\x20=\x20' + 'texture2D(' + 'u_NormalTe' + 'xture,\x20v_T' + 'excoord0).' + 'rgb;\x0d\x0a\x09\x09no' + 'rmal\x20=\x20nor' + 'malize(Nor' + 'malSampleT' + 'oWorldSpac' + 'e(normalMa' + 'pSample,\x20v' + '_Normal,\x20v' + '_Tangent,v' + '_Binormal)' + ');\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09normal' + '\x20=\x20normali' + 'ze(v_Norma' + 'l);\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)\x0d\x0a\x09\x09v' + 'ec3\x20viewDi' + 'r=\x20normali' + 'ze(v_ViewD' + 'ir);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09La' + 'yaGIInput\x20' + 'giInput;\x0d\x0a' + '\x09#ifdef\x20LI' + 'GHTMAP\x09\x0d\x0a\x09' + '\x09giInput.l' + 'ightmapUV=' + 'v_LightMap' + 'UV;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09vec3\x20' + 'globalDiff' + 'use=layaGI' + 'Base(giInp' + 'ut,1.0,nor' + 'mal);\x0d\x0a\x09\x0d\x0a' + '\x09vec4\x20main' + 'Color=u_Di' + 'ffuseColor' + ';\x0d\x0a\x09#ifdef' + '\x20DIFFUSEMA' + 'P\x0d\x0a\x09\x09vec4\x20' + 'difTexColo' + 'r=texture2' + 'D(u_Diffus' + 'eTexture,\x20' + 'v_Texcoord' + '0);\x0d\x0a\x09\x09mai' + 'nColor=mai' + 'nColor*dif' + 'TexColor;\x0d' + '\x0a\x09#endif\x20\x0d' + '\x0a\x09#if\x20defi' + 'ned(COLOR)' + '&&defined(' + 'ENABLEVERT' + 'EXCOLOR)\x0d\x0a' + '\x09\x09mainColo' + 'r=mainColo' + 'r*v_Color;' + '\x0d\x0a\x09#endif\x20' + '\x0d\x0a\x20\x20\x20\x20\x0d\x0a\x09#' + 'ifdef\x20ALPH' + 'ATEST\x0d\x0a\x09\x09i' + 'f(mainColo' + 'r.a<u_Alph' + 'aTestValue' + ')\x0d\x0a\x09\x09\x09disc' + 'ard;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x20\x20\x0d\x0a\x09' + '\x0d\x0a\x09vec3\x20di' + 'ffuse\x20=\x20ve' + 'c3(0.0);\x0d\x0a' + '\x09vec3\x20spec' + 'ular=\x20vec3' + '(0.0);\x0d\x0a\x09#' + 'if\x20defined') + ('(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT)\x0d\x0a\x09' + '\x09vec3\x20dif,' + 'spe;\x0d\x0a\x09\x09#i' + 'fdef\x20SPECU' + 'LARMAP\x0d\x0a\x09\x09' + '\x09vec3\x20glos' + 's=texture2' + 'D(u_Specul' + 'arTexture,' + '\x20v_Texcoor' + 'd0).rgb;\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09#ifdef\x20D' + 'IFFUSEMAP\x0d' + '\x0a\x09\x09\x09\x09vec3\x20' + 'gloss=vec3' + '(difTexCol' + 'or.a);\x0d\x0a\x09\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09\x09vec3\x20glo' + 'ss=vec3(1.' + '0);\x0d\x0a\x09\x09\x09#e' + 'ndif\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09\x0d\x0a' + '\x09\x0d\x0a\x09#ifdef' + '\x20LEGACYSIN' + 'GLELIGHTIN' + 'G\x0d\x0a\x09\x09#ifde' + 'f\x20DIRECTIO' + 'NLIGHT\x0d\x0a\x09\x09' + '\x09LayaAirBl' + 'innPhongDi' + 'ectionLigh' + 't(u_Materi' + 'alSpecular' + ',u_Shinine' + 'ss,normal,' + 'gloss,view' + 'Dir,u_Dire' + 'ctionLight' + ',dif,spe);' + '\x0d\x0a\x09\x09\x09#ifde' + 'f\x20CALCULAT' + 'E_SHADOWS\x0d' + '\x0a\x09\x09\x09\x09#ifde' + 'f\x20SHADOW_C' + 'ASCADE\x0d\x0a\x09\x09' + '\x09\x09\x09vec4\x20sh' + 'adowCoord\x20' + '=\x20getShado' + 'wCoord(vec' + '4(v_Positi' + 'onWorld,1.' + '0));\x0d\x0a\x09\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09\x09vec4\x20sha' + 'dowCoord\x20=' + '\x20v_ShadowC' + 'oord;\x0d\x0a\x09\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09\x09\x09float\x20s' + 'hadowAtten' + 'uation=sam' + 'pleShadowm' + 'ap(shadowC' + 'oord);\x0d\x0a\x09\x09' + '\x09\x09dif\x20*=\x20s' + 'hadowAtten' + 'uation;\x0d\x0a\x09' + '\x09\x09\x09spe\x20*=\x20' + 'shadowAtte' + 'nuation;\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09diffus' + 'e+=dif;\x0d\x0a\x09' + '\x09\x09specular' + '+=spe;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09\x09#ifdef\x20' + 'POINTLIGHT' + '\x0d\x0a\x09\x09\x09LayaA' + 'irBlinnPho' + 'ngPointLig' + 'ht(v_Posit' + 'ionWorld,u' + '_MaterialS' + 'pecular,u_' + 'Shininess,' + 'normal,glo' + 'ss,viewDir' + ',u_PointLi' + 'ght,dif,sp' + 'e);\x0d\x0a\x09\x09\x09di' + 'ffuse+=dif') + (';\x0d\x0a\x09\x09\x09spec' + 'ular+=spe;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x0d\x0a\x09\x09#ifd' + 'ef\x20SPOTLIG' + 'HT\x0d\x0a\x09\x09\x09Lay' + 'aAirBlinnP' + 'hongSpotLi' + 'ght(v_Posi' + 'tionWorld,' + 'u_Material' + 'Specular,u' + '_Shininess' + ',normal,gl' + 'oss,viewDi' + 'r,u_SpotLi' + 'ght,dif,sp' + 'e);\x0d\x0a\x09\x09\x09di' + 'ffuse+=dif' + ';\x0d\x0a\x09\x09\x09spec' + 'ular+=spe;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09#ifdef\x20D' + 'IRECTIONLI' + 'GHT\x0d\x0a\x09\x09\x09fo' + 'r\x20(int\x20i\x20=' + '\x200;\x20i\x20<\x20MA' + 'X_LIGHT_CO' + 'UNT;\x20i++)\x20' + '\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09' + '\x09\x09if(i\x20>=\x20' + 'u_Diration' + 'LightCount' + ')\x0d\x0a\x09\x09\x09\x09\x09br' + 'eak;\x0d\x0a\x09\x09\x09\x09' + 'DirectionL' + 'ight\x20direc' + 'tionLight\x20' + '=\x20getDirec' + 'tionLight(' + 'u_LightBuf' + 'fer,i);\x0d\x0a\x09' + '\x09\x09\x09#ifdef\x20' + 'CALCULATE_' + 'SHADOWS\x0d\x0a\x09' + '\x09\x09\x09\x09if(i\x20=' + '=\x200)\x0d\x0a\x09\x09\x09\x09' + '\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09' + '#ifdef\x20SHA' + 'DOW_CASCAD' + 'E\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + 'vec4\x20shado' + 'wCoord\x20=\x20g' + 'etShadowCo' + 'ord(vec4(v' + '_PositionW' + 'orld,1.0))' + ';\x0d\x0a\x09\x09\x09\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + '\x09\x09\x09vec4\x20sh' + 'adowCoord\x20' + '=\x20v_Shadow' + 'Coord;\x0d\x0a\x09\x09' + '\x09\x09\x09\x09#endif' + '\x0d\x0a\x09\x09\x09\x09\x09\x09di' + 'rectionLig' + 'ht.color\x20*' + '=\x20sampleSh' + 'adowmap(sh' + 'adowCoord)' + ';\x0d\x0a\x09\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09\x09Lay' + 'aAirBlinnP' + 'hongDiecti' + 'onLight(u_' + 'MaterialSp' + 'ecular,u_S' + 'hininess,n' + 'ormal,glos' + 's,viewDir,' + 'directionL' + 'ight,dif,s' + 'pe);\x0d\x0a\x09\x09\x09\x09' + 'diffuse+=d' + 'if;\x0d\x0a\x09\x09\x09\x09s' + 'pecular+=s' + 'pe;\x0d\x0a\x09\x09\x09}\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x09#if\x20def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT)\x0d\x0a\x09\x09' + '\x09ivec4\x20clu' + 'sterInfo\x20=' + 'getCluster' + 'Info(u_Lig' + 'htClusterB') + ('uffer,u_Vi' + 'ew,u_Viewp' + 'ort,\x20v_Pos' + 'itionWorld' + ',gl_FragCo' + 'ord,u_Proj' + 'ectionPara' + 'ms);\x0d\x0a\x09\x09\x09#' + 'ifdef\x20POIN' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09\x09for\x20(int' + '\x20i\x20=\x200;\x20i\x20' + '<\x20MAX_LIGH' + 'T_COUNT;\x20i' + '++)\x20\x0d\x0a\x09\x09\x09\x09' + '{\x0d\x0a\x09\x09\x09\x09\x09if' + '(i\x20>=\x20clus' + 'terInfo.x)' + '//PointLig' + 'htCount\x0d\x0a\x09' + '\x09\x09\x09\x09\x09break' + ';\x0d\x0a\x09\x09\x09\x09\x09Po' + 'intLight\x20p' + 'ointLight\x20' + '=\x20getPoint' + 'Light(u_Li' + 'ghtBuffer,' + 'u_LightClu' + 'sterBuffer' + ',clusterIn' + 'fo,i);\x0d\x0a\x09\x09' + '\x09\x09\x09LayaAir' + 'BlinnPhong' + 'PointLight' + '(v_Positio' + 'nWorld,u_M' + 'aterialSpe' + 'cular,u_Sh' + 'ininess,no' + 'rmal,gloss' + ',viewDir,p' + 'ointLight,' + 'dif,spe);\x0d' + '\x0a\x09\x09\x09\x09\x09diff' + 'use+=dif;\x0d' + '\x0a\x09\x09\x09\x09\x09spec' + 'ular+=spe;' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'SPOTLIGHT\x0d' + '\x0a\x09\x09\x09\x09for\x20(' + 'int\x20i\x20=\x200;' + '\x20i\x20<\x20MAX_L' + 'IGHT_COUNT' + ';\x20i++)\x20\x0d\x0a\x09' + '\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09' + '\x09if(i\x20>=\x20c' + 'lusterInfo' + '.y)//SpotL' + 'ightCount\x0d' + '\x0a\x09\x09\x09\x09\x09\x09bre' + 'ak;\x0d\x0a\x09\x09\x09\x09\x09' + 'SpotLight\x20' + 'spotLight\x20' + '=\x20getSpotL' + 'ight(u_Lig' + 'htBuffer,u' + '_LightClus' + 'terBuffer,' + 'clusterInf' + 'o,i);\x0d\x0a\x09\x09\x09' + '\x09\x09LayaAirB' + 'linnPhongS' + 'potLight(v' + '_PositionW' + 'orld,u_Mat' + 'erialSpecu' + 'lar,u_Shin' + 'iness,norm' + 'al,gloss,v' + 'iewDir,spo' + 'tLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09\x09\x09diffuse' + '+=dif;\x0d\x0a\x09\x09' + '\x09\x09\x09specula' + 'r+=spe;\x0d\x0a\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09g' + 'l_FragColo' + 'r\x20=vec4(ma' + 'inColor.rg' + 'b*(globalD' + 'iffuse\x20+\x20d' + 'iffuse),ma' + 'inColor.a)' + ';\x0d\x0a\x0d\x0a\x09#if\x20') + ('defined(DI' + 'RECTIONLIG' + 'HT)||defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)\x0d\x0a\x09\x09gl' + '_FragColor' + '.rgb+=spec' + 'ular;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x20\x20\x0d' + '\x0a\x09#ifdef\x20F' + 'OG\x0d\x0a\x09\x09floa' + 't\x20lerpFact' + '=clamp((1.' + '0/gl_FragC' + 'oord.w-u_F' + 'ogStart)/u' + '_FogRange,' + '0.0,1.0);\x0d' + '\x0a\x09\x09gl_Frag' + 'Color.rgb=' + 'mix(gl_Fra' + 'gColor.rgb' + ',u_FogColo' + 'r,lerpFact' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a}\x0d\x0a\x0d\x0a'), _0x467c23 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dow.glsl\x22;' + '\x0d\x0a\x0d\x0aattrib' + 'ute\x20vec4\x20a' + '_Position;' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09attr' + 'ibute\x20mat4' + '\x20a_MvpMatr' + 'ix;\x0d\x0a#else' + '\x0d\x0a\x09uniform' + '\x20mat4\x20u_Mv' + 'pMatrix;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)||((def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + '))&&(defin' + 'ed(SPECULA' + 'RMAP)||def' + 'ined(NORMA' + 'LMAP)))||(' + 'defined(LI' + 'GHTMAP)&&d' + 'efined(UV)' + ')\x0d\x0a\x09attrib' + 'ute\x20vec2\x20a' + '_Texcoord0' + ';\x0d\x0a\x09varyin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#if\x20defin' + 'ed(LIGHTMA' + 'P)&&define' + 'd(UV1)\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec2\x20a_Texc' + 'oord1;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20LIGHT' + 'MAP\x0d\x0a\x09unif' + 'orm\x20vec4\x20u' + '_LightmapS' + 'caleOffset' + ';\x0d\x0a\x09varyin' + 'g\x20vec2\x20v_L' + 'ightMapUV;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20C' + 'OLOR\x0d\x0a\x09att' + 'ribute\x20vec' + '4\x20a_Color;' + '\x0d\x0a\x09varying' + '\x20vec4\x20v_Co' + 'lor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20BONE\x0d\x0a\x09' + 'const\x20int\x20' + 'c_MaxBoneC' + 'ount\x20=\x2024;' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'BoneIndice' + 's;\x0d\x0a\x09attri' + 'bute\x20vec4\x20' + 'a_BoneWeig' + 'hts;\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_Bones[c_' + 'MaxBoneCou' + 'nt];\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aattr' + 'ibute\x20vec3' + '\x20a_Normal;' + '\x0d\x0avarying\x20' + 'vec3\x20v_Nor' + 'mal;\x20\x0d\x0a\x0d\x0a#' + 'if\x20defined' + '(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT)\x0d\x0a\x09' + 'uniform\x20ve' + 'c3\x20u_Camer' + 'aPos;\x0d\x0a\x09va' + 'rying\x20vec3' + '\x20v_ViewDir' + (';\x20\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(NORM' + 'ALMAP)\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec4\x20a_Tang' + 'ent0;\x0d\x0a\x09va' + 'rying\x20vec3' + '\x20v_Tangent' + ';\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_B' + 'inormal;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_W' + 'orldMat;\x0d\x0a' + '#else\x0d\x0a\x09un' + 'iform\x20mat4' + '\x20u_WorldMa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT)||(' + 'defined(CA' + 'LCULATE_SH' + 'ADOWS)&&de' + 'fined(SHAD' + 'OW_CASCADE' + '))\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'PositionWo' + 'rld;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(CA' + 'LCULATE_SH' + 'ADOWS)&&!d' + 'efined(SHA' + 'DOW_CASCAD' + 'E)\x0d\x0a\x09varyi' + 'ng\x20vec4\x20v_' + 'ShadowCoor' + 'd;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20TILINGOFF' + 'SET\x0d\x0a\x09unif' + 'orm\x20vec4\x20u' + '_TilingOff' + 'set;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vec4\x20po' + 'sition;\x0d\x0a\x09' + '#ifdef\x20BON' + 'E\x0d\x0a\x09\x09mat4\x20' + 'skinTransf' + 'orm\x20=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.x)]\x20*\x20a_' + 'BoneWeight' + 's.x;\x0d\x0a\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20u_Bon' + 'es[int(a_B' + 'oneIndices' + '.y)]\x20*\x20a_B' + 'oneWeights' + '.y;\x0d\x0a\x09\x09ski' + 'nTransform' + '\x20+=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'z)]\x20*\x20a_Bo' + 'neWeights.' + 'z;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.w' + ')]\x20*\x20a_Bon' + 'eWeights.w' + ';\x0d\x0a\x09\x09posit' + 'ion=skinTr' + 'ansform*a_' + 'Position;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09position=' + 'a_Position' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09\x09gl_P' + 'osition\x20=\x20' + 'a_MvpMatri' + 'x\x20*\x20positi' + 'on;\x0d\x0a\x09#els') + ('e\x0d\x0a\x09\x09gl_Po' + 'sition\x20=\x20u' + '_MvpMatrix' + '\x20*\x20positio' + 'n;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09mat' + '4\x20worldMat' + ';\x0d\x0a\x09#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09\x09wor' + 'ldMat\x20=\x20a_' + 'WorldMat;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09worldMat\x20' + '=\x20u_WorldM' + 'at;\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09mat' + '3\x20worldInv' + 'Mat;\x0d\x0a\x09#if' + 'def\x20BONE\x0d\x0a' + '\x09\x09worldInv' + 'Mat=INVERS' + 'E_MAT(mat3' + '(worldMat*' + 'skinTransf' + 'orm));\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09wo' + 'rldInvMat=' + 'INVERSE_MA' + 'T(mat3(wor' + 'ldMat));\x0d\x0a' + '\x09#endif\x20\x20\x0d' + '\x0a\x09v_Normal' + '=normalize' + '(a_Normal*' + 'worldInvMa' + 't);\x0d\x0a\x09#if\x20' + 'defined(NO' + 'RMALMAP)\x0d\x0a' + '\x09\x09v_Tangen' + 't=normaliz' + 'e(a_Tangen' + 't0.xyz*wor' + 'ldInvMat);' + '\x0d\x0a\x09\x09v_Bino' + 'rmal=cross' + '(v_Normal,' + 'v_Tangent)' + '*a_Tangent' + '0.w;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09#i' + 'f\x20defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT)||(d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)&&def' + 'ined(SHADO' + 'W_CASCADE)' + ')\x0d\x0a\x09\x09vec3\x20' + 'positionWS' + '=(worldMat' + '*position)' + '.xyz;\x0d\x0a\x09\x09#' + 'if\x20defined' + '(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT)\x0d\x0a\x09' + '\x09\x09v_ViewDi' + 'r\x20=\x20u_Came' + 'raPos-posi' + 'tionWS;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#if\x20defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)||(def' + 'ined(CALCU' + 'LATE_SHADO' + 'WS)&&defin' + 'ed(SHADOW_' + 'CASCADE))\x0d' + '\x0a\x09\x09\x09v_Posi' + 'tionWorld\x20' + '=\x20position' + 'WS;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09#if' + '\x20defined(D' + 'IFFUSEMAP)' + '||((define' + 'd(DIRECTIO') + ('NLIGHT)||d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT))&' + '&(defined(' + 'SPECULARMA' + 'P)||define' + 'd(NORMALMA' + 'P)))\x0d\x0a\x09\x09#i' + 'fdef\x20TILIN' + 'GOFFSET\x0d\x0a\x09' + '\x09\x09v_Texcoo' + 'rd0=Transf' + 'ormUV(a_Te' + 'xcoord0,u_' + 'TilingOffs' + 'et);\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09v_' + 'Texcoord0=' + 'a_Texcoord' + '0;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09#ifd' + 'ef\x20LIGHTMA' + 'P\x0d\x0a\x09\x09#ifde' + 'f\x20UV1\x0d\x0a\x09\x09\x09' + 'v_LightMap' + 'UV=vec2(a_' + 'Texcoord1.' + 'x,1.0-a_Te' + 'xcoord1.y)' + '*u_Lightma' + 'pScaleOffs' + 'et.xy+u_Li' + 'ghtmapScal' + 'eOffset.zw' + ';\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09v_Lig' + 'htMapUV=ve' + 'c2(a_Texco' + 'ord0.x,1.0' + '-a_Texcoor' + 'd0.y)*u_Li' + 'ghtmapScal' + 'eOffset.xy' + '+u_Lightma' + 'pScaleOffs' + 'et.zw;\x0d\x0a\x09\x09' + '#endif\x20\x0d\x0a\x09' + '\x09v_LightMa' + 'pUV.y=1.0-' + 'v_LightMap' + 'UV.y;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(COLOR)&&d' + 'efined(ENA' + 'BLEVERTEXC' + 'OLOR)\x0d\x0a\x09\x09v' + '_Color=a_C' + 'olor;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(CALCULATE' + '_SHADOWS)&' + '&!defined(' + 'SHADOW_CAS' + 'CADE)\x0d\x0a\x09\x09v' + '_ShadowCoo' + 'rd\x20=getSha' + 'dowCoord(v' + 'ec4(positi' + 'onWS,1.0))' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09gl_Posi' + 'tion=remap' + 'GLPosition' + 'Z(gl_Posit' + 'ion);\x0d\x0a}'), _0x396f6c = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22ShadowCa' + 'sterFS.gls' + 'l\x22\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09gl_Frag' + 'Color=shad' + 'owCasterFr' + 'agment();\x0d' + '\x0a}', _0x4a72b1 = '#include\x20\x22' + 'ShadowCast' + 'erVS.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tionCS\x20=\x20\x20' + 'shadowCast' + 'erVertex()' + ';\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(positio' + 'nCS);\x0d\x0a}', _0x4e6ccc = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x20\x20pre' + 'cision\x20hig' + 'hp\x20float;\x0d' + '\x0a#else\x0d\x0a\x20\x20' + 'precision\x20' + 'mediump\x20fl' + 'oat;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avary' + 'ing\x20vec4\x20v' + '_Color;\x0d\x0av' + 'arying\x20vec' + '2\x20v_Textur' + 'eCoordinat' + 'e;\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_textur' + 'e;\x0d\x0aunifor' + 'm\x20vec4\x20u_T' + 'intcolor;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09va' + 'rying\x20vec4' + '\x20v_MeshCol' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20FOG\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogSta' + 'rt;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_FogRange' + ';\x0d\x0a\x09#ifdef' + '\x20ADDTIVEFO' + 'G\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09uniform' + '\x20vec3\x20u_Fo' + 'gColor;\x0d\x0a\x09' + '#endif\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x09\x0d\x0a\x09#i' + 'fdef\x20RENDE' + 'RMODE_MESH' + '\x0d\x0a\x09\x09gl_Fra' + 'gColor=v_M' + 'eshColor;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09gl_FragCo' + 'lor=vec4(1' + '.0);\x09\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x09\x0d\x0a' + '\x09#ifdef\x20DI' + 'FFUSEMAP\x0d\x0a' + '\x09\x09#ifdef\x20T' + 'INTCOLOR\x0d\x0a' + '\x09\x09\x09gl_Frag' + 'Color*=tex' + 'ture2D(u_t' + 'exture,v_T' + 'extureCoor' + 'dinate)*u_' + 'Tintcolor*' + '2.0*v_Colo' + 'r;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09gl_F' + 'ragColor*=' + 'texture2D(' + 'u_texture,' + 'v_TextureC' + 'oordinate)' + '*v_Color;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09#ifdef\x20TI' + 'NTCOLOR\x0d\x0a\x09' + '\x09\x09gl_FragC' + 'olor*=u_Ti' + 'ntcolor*2.' + '0*v_Color;' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09gl_Fra' + 'gColor*=v_' + 'Color;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20FO' + 'G\x0d\x0a\x09\x09float' + '\x20lerpFact=' + 'clamp((1.0' + '/gl_FragCo' + 'ord.w-u_Fo' + 'gStart)/u_' + 'FogRange,0' + '.0,1.0);\x0d\x0a' + '\x09\x09#ifdef\x20A' + 'DDTIVEFOG\x0d' + ('\x0a\x09\x09\x09gl_Fra' + 'gColor.rgb' + '=mix(gl_Fr' + 'agColor.rg' + 'b,vec3(0.0' + ',0.0,0.0),' + 'lerpFact);' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09gl_Fra' + 'gColor.rgb' + '=mix(gl_Fr' + 'agColor.rg' + 'b,u_FogCol' + 'or,lerpFac' + 't);\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#end' + 'if\x0d\x0a}'), _0x357822 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0a#' + 'ifdef\x20GL_F' + 'RAGMENT_PR' + 'ECISION_HI' + 'GH\x0d\x0a\x20\x20prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x20\x20p' + 'recision\x20m' + 'ediump\x20flo' + 'at;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(SPH' + 'ERHBILLBOA' + 'RD)||defin' + 'ed(STRETCH' + 'EDBILLBOAR' + 'D)||define' + 'd(HORIZONT' + 'ALBILLBOAR' + 'D)||define' + 'd(VERTICAL' + 'BILLBOARD)' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'CornerText' + 'ureCoordin' + 'ate;\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20RENDERMOD' + 'E_MESH\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec3\x20a_Mesh' + 'Position;\x0d' + '\x0a\x09attribut' + 'e\x20vec4\x20a_M' + 'eshColor;\x0d' + '\x0a\x09attribut' + 'e\x20vec2\x20a_M' + 'eshTexture' + 'Coordinate' + ';\x0d\x0a\x09varyin' + 'g\x20vec4\x20v_M' + 'eshColor;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0aattribute' + '\x20vec4\x20a_Sh' + 'apePositio' + 'nStartLife' + 'Time;\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Direct' + 'ionTime;\x0d\x0a' + 'attribute\x20' + 'vec4\x20a_Sta' + 'rtColor;\x0d\x0a' + 'attribute\x20' + 'vec3\x20a_Sta' + 'rtSize;\x0d\x0aa' + 'ttribute\x20v' + 'ec3\x20a_Star' + 'tRotation0' + ';\x0d\x0aattribu' + 'te\x20float\x20a' + '_StartSpee' + 'd;\x0d\x0a#if\x20de' + 'fined(COLO' + 'ROVERLIFET' + 'IME)||defi' + 'ned(RANDOM' + 'COLOROVERL' + 'IFETIME)||' + 'defined(SI' + 'ZEOVERLIFE' + 'TIMERANDOM' + 'CURVES)||d' + 'efined(SIZ' + 'EOVERLIFET' + 'IMERANDOMC' + 'URVESSEPER' + 'ATE)||defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIMERANDOM' + 'CONSTANTS)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES)\x0d\x0a\x20\x20att' + 'ribute\x20vec' + '4\x20a_Random' + '0;\x0d\x0a#endif' + '\x0d\x0a#if\x20defi' + 'ned(TEXTUR' + 'ESHEETANIM' + 'ATIONRANDO' + 'MCURVE)||d' + ('efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCONSTAN' + 'T)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE)\x0d\x0a\x20\x20at' + 'tribute\x20ve' + 'c4\x20a_Rando' + 'm1;\x0d\x0a#endi' + 'f\x0d\x0aattribu' + 'te\x20vec3\x20a_' + 'Simulation' + 'WorldPosti' + 'on;\x0d\x0aattri' + 'bute\x20vec4\x20' + 'a_Simulati' + 'onWorldRot' + 'ation;\x0d\x0a\x0d\x0a' + 'varying\x20ve' + 'c4\x20v_Color' + ';\x0d\x0a#ifdef\x20' + 'DIFFUSEMAP' + '\x0d\x0a\x09varying' + '\x20vec2\x20v_Te' + 'xtureCoord' + 'inate;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0aun' + 'iform\x20floa' + 't\x20u_Curren' + 'tTime;\x0d\x0aun' + 'iform\x20vec3' + '\x20u_Gravity' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20vec3\x20u_' + 'WorldPosit' + 'ion;\x0d\x0aunif' + 'orm\x20vec4\x20u' + '_WorldRota' + 'tion;\x0d\x0auni' + 'form\x20bool\x20' + 'u_ThreeDSt' + 'artRotatio' + 'n;\x0d\x0aunifor' + 'm\x20int\x20u_Sc' + 'alingMode;' + '\x0d\x0auniform\x20' + 'vec3\x20u_Pos' + 'itionScale' + ';\x0d\x0auniform' + '\x20vec3\x20u_Si' + 'zeScale;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_View;' + '\x0d\x0auniform\x20' + 'mat4\x20u_Pro' + 'jection;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'TRETCHEDBI' + 'LLBOARD\x0d\x0a\x09' + 'uniform\x20ve' + 'c3\x20u_Camer' + 'aPos;\x0d\x0a#en' + 'dif\x0d\x0aunifo' + 'rm\x20vec3\x20u_' + 'CameraDire' + 'ction;//TO' + 'DO:只有几种广告牌' + '模式需要用\x0d\x0auni' + 'form\x20vec3\x20' + 'u_CameraUp' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20\x20float\x20' + 'u_Stretche' + 'dBillboard' + 'LengthScal' + 'e;\x0d\x0aunifor' + 'm\x20\x20float\x20u' + '_Stretched' + 'BillboardS' + 'peedScale;' + '\x0d\x0auniform\x20' + 'int\x20u_Simu' + 'lationSpac' + 'e;\x0d\x0a\x0d\x0a#if\x20' + 'defined(VE' + 'LOCITYOVER' + 'LIFETIMECO' + 'NSTANT)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECUR' + 'VE)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT)||' + 'defined(VE') + ('LOCITYOVER' + 'LIFETIMERA' + 'NDOMCURVE)' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20int\x20\x20u_' + 'VOLSpaceTy' + 'pe;\x0d\x0a#endi' + 'f\x0d\x0a#if\x20def' + 'ined(VELOC' + 'ITYOVERLIF' + 'ETIMECONST' + 'ANT)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CONSTANT)\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec3\x20u_V' + 'OLVelocity' + 'Const;\x0d\x0a#e' + 'ndif\x0d\x0a#if\x20' + 'defined(VE' + 'LOCITYOVER' + 'LIFETIMECU' + 'RVE)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CURVE)\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_VOLV' + 'elocityGra' + 'dientX[4];' + '//x为key,y为' + '速度\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_VOLVeloc' + 'ityGradien' + 'tY[4];//x为' + 'key,y为速度\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec2\x20u_VO' + 'LVelocityG' + 'radientZ[4' + '];//x为key,' + 'y为速度\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCON' + 'STANT\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c3\x20u_VOLVe' + 'locityCons' + 'tMax;\x0d\x0a#en' + 'dif\x0d\x0a#ifde' + 'f\x20VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_VOLVelo' + 'cityGradie' + 'ntMaxX[4];' + '//x为key,y为' + '速度\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_VOLVeloc' + 'ityGradien' + 'tMaxY[4];/' + '/x为key,y为速' + '度\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_VOLVeloci' + 'tyGradient' + 'MaxZ[4];//' + 'x为key,y为速度' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20C' + 'OLOROVERLI' + 'FETIME\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec4\x20u_Colo' + 'rOverLifeG' + 'radientCol' + 'ors[4];//x' + '为key,yzw为C' + 'olor\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_ColorO' + 'verLifeGra' + 'dientAlpha' + 's[4];//x为k' + 'ey,y为Alpha' + '\x0d\x0a#endif\x0d\x0a' + '#ifdef\x20RAN' + 'DOMCOLOROV' + 'ERLIFETIME' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec4\x20u_') + ('ColorOverL' + 'ifeGradien' + 'tColors[4]' + ';//x为key,y' + 'zw为Color\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec2\x20u_Co' + 'lorOverLif' + 'eGradientA' + 'lphas[4];/' + '/x为key,y为A' + 'lpha\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '4\x20u_MaxCol' + 'orOverLife' + 'GradientCo' + 'lors[4];//' + 'x为key,yzw为' + 'Color\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c2\x20u_MaxCo' + 'lorOverLif' + 'eGradientA' + 'lphas[4];/' + '/x为key,y为A' + 'lpha\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'SIZEOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(SIZEOVER' + 'LIFETIMERA' + 'NDOMCURVES' + ')\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_SOLSizeGr' + 'adient[4];' + '//x为key,y为' + '尺寸\x0d\x0a#endif' + '\x0d\x0a#ifdef\x20S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVES\x0d\x0a\x20' + '\x20uniform\x20\x20' + 'vec2\x20u_SOL' + 'SizeGradie' + 'ntMax[4];/' + '/x为key,y为尺' + '寸\x0d\x0a#endif\x0d' + '\x0a#if\x20defin' + 'ed(SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE)||defin' + 'ed(SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE)' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'SOLSizeGra' + 'dientX[4];' + '//x为key,y为' + '尺寸\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_SOLSizeG' + 'radientY[4' + '];//x为key,' + 'y为尺寸\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_SOLSiz' + 'eGradientZ' + '[4];//x为ke' + 'y,y为尺寸\x0d\x0a#e' + 'ndif\x0d\x0a#ifd' + 'ef\x20SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec2\x20u_S' + 'OLSizeGrad' + 'ientMaxX[4' + '];//x为key,' + 'y为尺寸\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_SOLSiz' + 'eGradientM' + 'axY[4];//x' + '为key,y为尺寸\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec2\x20u_S' + 'OLSizeGrad' + 'ientMaxZ[4' + '];//x为key,' + 'y为尺寸\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'fdef\x20ROTAT' + 'IONOVERLIF') + ('ETIME\x0d\x0a\x20\x20#' + 'if\x20defined' + '(ROTATIONO' + 'VERLIFETIM' + 'ECONSTANT)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS)\x0d\x0a\x20\x20' + '\x20\x20uniform\x20' + '\x20float\x20u_R' + 'OLAngularV' + 'elocityCon' + 'st;\x0d\x0a\x20\x20#en' + 'dif\x0d\x0a\x20\x20#if' + 'def\x20ROTATI' + 'ONOVERLIFE' + 'TIMERANDOM' + 'CONSTANTS\x0d' + '\x0a\x20\x20\x20\x20unifo' + 'rm\x20\x20float\x20' + 'u_ROLAngul' + 'arVelocity' + 'ConstMax;\x0d' + '\x0a\x20\x20#endif\x0d' + '\x0a\x20\x20#if\x20def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIMECURVE' + ')||defined' + '(ROTATIONO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VES)\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_ROLA' + 'ngularVelo' + 'cityGradie' + 'nt[4];//x为' + 'key,y为旋转\x0d\x0a' + '\x20\x20#endif\x0d\x0a' + '\x20\x20#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S\x0d\x0a\x20\x20\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_ROLAngu' + 'larVelocit' + 'yGradientM' + 'ax[4];//x为' + 'key,y为旋转\x0d\x0a' + '\x20\x20#endif\x0d\x0a' + '#endif\x0d\x0a#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMESEPER' + 'ATE\x0d\x0a\x20\x20#if' + '\x20defined(R' + 'OTATIONOVE' + 'RLIFETIMEC' + 'ONSTANT)||' + 'defined(RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NTS)\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec3\x20u_ROLA' + 'ngularVelo' + 'cityConstS' + 'eprarate;\x0d' + '\x0a\x20\x20#endif\x0d' + '\x0a\x20\x20#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS\x0d\x0a\x20\x20\x20' + '\x20uniform\x20\x20' + 'vec3\x20u_ROL' + 'AngularVel' + 'ocityConst' + 'MaxSeprara' + 'te;\x0d\x0a\x20\x20#en' + 'dif\x0d\x0a\x20\x20#if' + '\x20defined(R' + 'OTATIONOVE' + 'RLIFETIMEC' + 'URVE)||def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIMERANDO' + 'MCURVES)\x0d\x0a' + '\x20\x20\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'ROLAngular' + 'VelocityGr' + 'adientX[4]' + ';\x0d\x0a\x20\x20\x20\x20uni') + ('form\x20\x20vec2' + '\x20u_ROLAngu' + 'larVelocit' + 'yGradientY' + '[4];\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntZ[4];\x0d\x0a\x20' + '\x20#endif\x0d\x0a\x20' + '\x20#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCURVES' + '\x0d\x0a\x20\x20\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xX[4];\x0d\x0a\x20\x20' + '\x20\x20uniform\x20' + '\x20vec2\x20u_RO' + 'LAngularVe' + 'locityGrad' + 'ientMaxY[4' + '];\x0d\x0a\x20\x20\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_ROLAng' + 'ularVeloci' + 'tyGradient' + 'MaxZ[4];\x0d\x0a' + '\x09uniform\x20\x20' + 'vec2\x20u_ROL' + 'AngularVel' + 'ocityGradi' + 'entMaxW[4]' + ';\x0d\x0a\x20\x20#endi' + 'f\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(TEXTU' + 'RESHEETANI' + 'MATIONCURV' + 'E)||define' + 'd(TEXTURES' + 'HEETANIMAT' + 'IONRANDOMC' + 'URVE)\x0d\x0a\x20\x20u' + 'niform\x20\x20fl' + 'oat\x20u_TSAC' + 'ycles;\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_TSAS' + 'ubUVLength' + ';\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_TSAGradie' + 'ntUVs[4];/' + '/x为key,y为f' + 'rame\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20TEXTURESH' + 'EETANIMATI' + 'ONRANDOMCU' + 'RVE\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_TSAMaxG' + 'radientUVs' + '[4];//x为ke' + 'y,y为frame\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Ti' + 'lingOffset' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0avec3\x20ro' + 'tationByEu' + 'ler(in\x20vec' + '3\x20vector,i' + 'n\x20vec3\x20rot' + ')\x0d\x0a{\x0d\x0a\x09flo' + 'at\x20halfRol' + 'l\x20=\x20rot.z\x20' + '*\x200.5;\x0d\x0a\x20\x20' + '\x20\x20float\x20ha' + 'lfPitch\x20=\x20' + 'rot.x\x20*\x200.' + '5;\x0d\x0a\x09float' + '\x20halfYaw\x20=' + '\x20rot.y\x20*\x200' + '.5;\x0d\x0a\x0d\x0a\x09fl' + 'oat\x20sinRol' + 'l\x20=\x20sin(ha' + 'lfRoll);\x0d\x0a' + '\x09float\x20cos' + 'Roll\x20=\x20cos' + '(halfRoll)' + ';\x0d\x0a\x09float\x20') + ('sinPitch\x20=' + '\x20sin(halfP' + 'itch);\x0d\x0a\x09f' + 'loat\x20cosPi' + 'tch\x20=\x20cos(' + 'halfPitch)' + ';\x0d\x0a\x09float\x20' + 'sinYaw\x20=\x20s' + 'in(halfYaw' + ');\x0d\x0a\x09float' + '\x20cosYaw\x20=\x20' + 'cos(halfYa' + 'w);\x0d\x0a\x0d\x0a\x09fl' + 'oat\x20quaX\x20=' + '\x20(cosYaw\x20*' + '\x20sinPitch\x20' + '*\x20cosRoll)' + '\x20+\x20(sinYaw' + '\x20*\x20cosPitc' + 'h\x20*\x20sinRol' + 'l);\x0d\x0a\x09floa' + 't\x20quaY\x20=\x20(' + 'sinYaw\x20*\x20c' + 'osPitch\x20*\x20' + 'cosRoll)\x20-' + '\x20(cosYaw\x20*' + '\x20sinPitch\x20' + '*\x20sinRoll)' + ';\x0d\x0a\x09float\x20' + 'quaZ\x20=\x20(co' + 'sYaw\x20*\x20cos' + 'Pitch\x20*\x20si' + 'nRoll)\x20-\x20(' + 'sinYaw\x20*\x20s' + 'inPitch\x20*\x20' + 'cosRoll);\x0d' + '\x0a\x09float\x20qu' + 'aW\x20=\x20(cosY' + 'aw\x20*\x20cosPi' + 'tch\x20*\x20cosR' + 'oll)\x20+\x20(si' + 'nYaw\x20*\x20sin' + 'Pitch\x20*\x20si' + 'nRoll);\x0d\x0a\x09' + '\x0d\x0a\x09//vec4\x20' + 'q=vec4(qua' + 'X,quaY,qua' + 'Z,quaW);\x0d\x0a' + '\x09//vec3\x20te' + 'mp\x20=\x20cross' + '(q.xyz,\x20ve' + 'ctor)\x20+\x20q.' + 'w\x20*\x20vector' + ';\x0d\x0a\x09//retu' + 'rn\x20(cross(' + 'temp,\x20-q.x' + 'yz)\x20+\x20dot(' + 'q.xyz,vect' + 'or)\x20*\x20q.xy' + 'z\x20+\x20q.w\x20*\x20' + 'temp);\x0d\x0a\x09\x0d' + '\x0a\x09float\x20x\x20' + '=\x20quaX\x20+\x20q' + 'uaX;\x0d\x0a\x20\x20\x20\x20' + 'float\x20y\x20=\x20' + 'quaY\x20+\x20qua' + 'Y;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20z\x20=\x20qu' + 'aZ\x20+\x20quaZ;' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20wx\x20=\x20qua' + 'W\x20*\x20x;\x0d\x0a\x20\x20' + '\x20\x20float\x20wy' + '\x20=\x20quaW\x20*\x20' + 'y;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20wz\x20=\x20q' + 'uaW\x20*\x20z;\x0d\x0a' + '\x09float\x20xx\x20' + '=\x20quaX\x20*\x20x' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20xy\x20=\x20qu' + 'aX\x20*\x20y;\x0d\x0a\x09' + 'float\x20xz\x20=' + '\x20quaX\x20*\x20z;' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20yy\x20=\x20qua' + 'Y\x20*\x20y;\x0d\x0a\x20\x20' + '\x20\x20float\x20yz' + '\x20=\x20quaY\x20*\x20' + 'z;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20zz\x20=\x20q' + 'uaZ\x20*\x20z;\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20vec3(((' + 'vector.x\x20*' + '\x20((1.0\x20-\x20y' + 'y)\x20-\x20zz))\x20' + '+\x20(vector.' + 'y\x20*\x20(xy\x20-\x20' + 'wz)))\x20+\x20(v') + ('ector.z\x20*\x20' + '(xz\x20+\x20wy))' + ',\x0d\x0a\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20(' + '(vector.x\x20' + '*\x20(xy\x20+\x20wz' + '))\x20+\x20(vect' + 'or.y\x20*\x20((1' + '.0\x20-\x20xx)\x20-' + '\x20zz)))\x20+\x20(' + 'vector.z\x20*' + '\x20(yz\x20-\x20wx)' + '),\x0d\x0a\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '((vector.x' + '\x20*\x20(xz\x20-\x20w' + 'y))\x20+\x20(vec' + 'tor.y\x20*\x20(y' + 'z\x20+\x20wx)))\x20' + '+\x20(vector.' + 'z\x20*\x20((1.0\x20' + '-\x20xx)\x20-\x20yy' + ')));\x0d\x0a\x09\x0d\x0a}' + '\x0d\x0a\x0d\x0a//假定ax' + 'is已经归一化\x0d\x0av' + 'ec3\x20rotati' + 'onByAxis(i' + 'n\x20vec3\x20vec' + 'tor,in\x20vec' + '3\x20axis,\x20in' + '\x20float\x20ang' + 'le)\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20halfA' + 'ngle\x20=\x20ang' + 'le\x20*\x200.5;\x0d' + '\x0a\x09float\x20si' + 'n\x20=\x20sin(ha' + 'lfAngle);\x0d' + '\x0a\x09\x0d\x0a\x09float' + '\x20quaX\x20=\x20ax' + 'is.x\x20*\x20sin' + ';\x0d\x0a\x09float\x20' + 'quaY\x20=\x20axi' + 's.y\x20*\x20sin;' + '\x0d\x0a\x09float\x20q' + 'uaZ\x20=\x20axis' + '.z\x20*\x20sin;\x0d' + '\x0a\x09float\x20qu' + 'aW\x20=\x20cos(h' + 'alfAngle);' + '\x0d\x0a\x09\x0d\x0a\x09//ve' + 'c4\x20q=vec4(' + 'quaX,quaY,' + 'quaZ,quaW)' + ';\x0d\x0a\x09//vec3' + '\x20temp\x20=\x20cr' + 'oss(q.xyz,' + '\x20vector)\x20+' + '\x20q.w\x20*\x20vec' + 'tor;\x0d\x0a\x09//r' + 'eturn\x20(cro' + 'ss(temp,\x20-' + 'q.xyz)\x20+\x20d' + 'ot(q.xyz,v' + 'ector)\x20*\x20q' + '.xyz\x20+\x20q.w' + '\x20*\x20temp);\x0d' + '\x0a\x09\x0d\x0a\x09float' + '\x20x\x20=\x20quaX\x20' + '+\x20quaX;\x0d\x0a\x20' + '\x20\x20\x20float\x20y' + '\x20=\x20quaY\x20+\x20' + 'quaY;\x0d\x0a\x20\x20\x20' + '\x20float\x20z\x20=' + '\x20quaZ\x20+\x20qu' + 'aZ;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20wx\x20=\x20' + 'quaW\x20*\x20x;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20wy\x20=\x20quaW' + '\x20*\x20y;\x0d\x0a\x20\x20\x20' + '\x20float\x20wz\x20' + '=\x20quaW\x20*\x20z' + ';\x0d\x0a\x09float\x20' + 'xx\x20=\x20quaX\x20' + '*\x20x;\x0d\x0a\x20\x20\x20\x20' + 'float\x20xy\x20=' + '\x20quaX\x20*\x20y;' + '\x0d\x0a\x09float\x20x' + 'z\x20=\x20quaX\x20*' + '\x20z;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20yy\x20=\x20' + 'quaY\x20*\x20y;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20yz\x20=\x20quaY' + '\x20*\x20z;\x0d\x0a\x20\x20\x20' + '\x20float\x20zz\x20' + '=\x20quaZ\x20*\x20z' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20vec3') + ('(((vector.' + 'x\x20*\x20((1.0\x20' + '-\x20yy)\x20-\x20zz' + '))\x20+\x20(vect' + 'or.y\x20*\x20(xy' + '\x20-\x20wz)))\x20+' + '\x20(vector.z' + '\x20*\x20(xz\x20+\x20w' + 'y)),\x0d\x0a\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20((vector' + '.x\x20*\x20(xy\x20+' + '\x20wz))\x20+\x20(v' + 'ector.y\x20*\x20' + '((1.0\x20-\x20xx' + ')\x20-\x20zz)))\x20' + '+\x20(vector.' + 'z\x20*\x20(yz\x20-\x20' + 'wx)),\x0d\x0a\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20((vecto' + 'r.x\x20*\x20(xz\x20' + '-\x20wy))\x20+\x20(' + 'vector.y\x20*' + '\x20(yz\x20+\x20wx)' + '))\x20+\x20(vect' + 'or.z\x20*\x20((1' + '.0\x20-\x20xx)\x20-' + '\x20yy)));\x0d\x0a\x09' + '\x0d\x0a}\x0d\x0a\x0d\x0avec' + '3\x20rotation' + 'ByQuaterni' + 'ons(in\x20vec' + '3\x20v,in\x20vec' + '4\x20q)\x20\x0d\x0a{\x0d\x0a' + '\x09return\x20v\x20' + '+\x202.0\x20*\x20cr' + 'oss(q.xyz,' + '\x20cross(q.x' + 'yz,\x20v)\x20+\x20q' + '.w\x20*\x20v);\x0d\x0a' + '}\x0d\x0a\x0d\x0a\x20\x0d\x0a#i' + 'f\x20defined(' + 'VELOCITYOV' + 'ERLIFETIME' + 'CURVE)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCURVE)||' + 'defined(SI' + 'ZEOVERLIFE' + 'TIMECURVE)' + '||defined(' + 'SIZEOVERLI' + 'FETIMECURV' + 'ESEPERATE)' + '||defined(' + 'SIZEOVERLI' + 'FETIMERAND' + 'OMCURVES)|' + '|defined(S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVESSEP' + 'ERATE)\x0d\x0afl' + 'oat\x20getCur' + 'ValueFromG' + 'radientFlo' + 'at(in\x20vec2' + '\x20gradientN' + 'umbers[4],' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20curVa' + 'lue;\x0d\x0a\x09for' + '(int\x20i=1;i' + '<4;i++)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09vec2\x20' + 'gradientNu' + 'mber=gradi' + 'entNumbers' + '[i];\x0d\x0a\x09\x09fl' + 'oat\x20key=gr' + 'adientNumb' + 'er.x;\x0d\x0a\x09\x09i' + 'f(key>=nor' + 'malizedAge' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09vec2\x20last' + 'GradientNu' + 'mber=gradi' + 'entNumbers' + '[i-1];\x0d\x0a\x09\x09' + '\x09float\x20las' + 'tKey=lastG' + 'radientNum' + 'ber.x;\x0d\x0a\x09\x09' + '\x09float\x20age') + ('=(normaliz' + 'edAge-last' + 'Key)/(key-' + 'lastKey);\x0d' + '\x0a\x09\x09\x09curVal' + 'ue=mix(las' + 'tGradientN' + 'umber.y,gr' + 'adientNumb' + 'er.y,age);' + '\x0d\x0a\x09\x09\x09break' + ';\x0d\x0a\x09\x09}\x0d\x0a\x09}' + '\x0d\x0a\x09return\x20' + 'curValue;\x0d' + '\x0a}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE)||defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIMECURVE)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES)\x0d\x0afloat' + '\x20getTotalV' + 'alueFromGr' + 'adientFloa' + 't(in\x20vec2\x20' + 'gradientNu' + 'mbers[4],i' + 'n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20totalV' + 'alue=0.0;\x0d' + '\x0a\x09for(int\x20' + 'i=1;i<4;i+' + '+)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'vec2\x20gradi' + 'entNumber=' + 'gradientNu' + 'mbers[i];\x0d' + '\x0a\x09\x09float\x20k' + 'ey=gradien' + 'tNumber.x;' + '\x0d\x0a\x09\x09vec2\x20l' + 'astGradien' + 'tNumber=gr' + 'adientNumb' + 'ers[i-1];\x0d' + '\x0a\x09\x09float\x20l' + 'astValue=l' + 'astGradien' + 'tNumber.y;' + '\x0d\x0a\x09\x09\x0d\x0a\x09\x09if' + '(key>=norm' + 'alizedAge)' + '{\x0d\x0a\x09\x09\x09floa' + 't\x20lastKey=' + 'lastGradie' + 'ntNumber.x' + ';\x0d\x0a\x09\x09\x09floa' + 't\x20age=(nor' + 'malizedAge' + '-lastKey)/' + '(key-lastK' + 'ey);\x0d\x0a\x09\x09\x09t' + 'otalValue+' + '=(lastValu' + 'e+mix(last' + 'Value,grad' + 'ientNumber' + '.y,age))/2' + '.0*a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.w*(norma' + 'lizedAge-l' + 'astKey);\x0d\x0a' + '\x09\x09\x09break;\x0d' + '\x0a\x09\x09}\x0d\x0a\x09\x09el' + 'se{\x0d\x0a\x09\x09\x09to' + 'talValue+=' + '(lastValue' + '+gradientN' + 'umber.y)/2' + '.0*a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.w*(key-l' + 'astGradien' + 'tNumber.x)') + (';\x0d\x0a\x09\x09}\x0d\x0a\x09}' + '\x0d\x0a\x09return\x20' + 'totalValue' + ';\x0d\x0a}\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(CO' + 'LOROVERLIF' + 'ETIME)||de' + 'fined(RAND' + 'OMCOLOROVE' + 'RLIFETIME)' + '\x0d\x0avec4\x20get' + 'ColorFromG' + 'radient(in' + '\x20vec2\x20grad' + 'ientAlphas' + '[4],in\x20vec' + '4\x20gradient' + 'Colors[4],' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x0d\x0a\x09v' + 'ec4\x20overTi' + 'meColor;\x0d\x0a' + '\x09for(int\x20i' + '=1;i<4;i++' + ')\x0d\x0a\x09{\x0d\x0a\x09\x09v' + 'ec2\x20gradie' + 'ntAlpha=gr' + 'adientAlph' + 'as[i];\x0d\x0a\x09\x09' + 'float\x20alph' + 'aKey=gradi' + 'entAlpha.x' + ';\x0d\x0a\x09\x09if(al' + 'phaKey>=no' + 'rmalizedAg' + 'e)\x0d\x0a\x09\x09{\x0d\x0a\x09' + '\x09\x09vec2\x20las' + 'tGradientA' + 'lpha=gradi' + 'entAlphas[' + 'i-1];\x0d\x0a\x09\x09\x09' + 'float\x20last' + 'AlphaKey=l' + 'astGradien' + 'tAlpha.x;\x0d' + '\x0a\x09\x09\x09float\x20' + 'age=(norma' + 'lizedAge-l' + 'astAlphaKe' + 'y)/(alphaK' + 'ey-lastAlp' + 'haKey);\x0d\x0a\x09' + '\x09\x09overTime' + 'Color.a=mi' + 'x(lastGrad' + 'ientAlpha.' + 'y,gradient' + 'Alpha.y,ag' + 'e);\x0d\x0a\x09\x09\x09br' + 'eak;\x0d\x0a\x09\x09}\x0d' + '\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09f' + 'or(int\x20i=1' + ';i<4;i++)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09vec' + '4\x20gradient' + 'Color=grad' + 'ientColors' + '[i];\x0d\x0a\x09\x09fl' + 'oat\x20colorK' + 'ey=gradien' + 'tColor.x;\x0d' + '\x0a\x09\x09if(colo' + 'rKey>=norm' + 'alizedAge)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'vec4\x20lastG' + 'radientCol' + 'or=gradien' + 'tColors[i-' + '1];\x0d\x0a\x09\x09\x09fl' + 'oat\x20lastCo' + 'lorKey=las' + 'tGradientC' + 'olor.x;\x0d\x0a\x09' + '\x09\x09float\x20ag' + 'e=(normali' + 'zedAge-las' + 'tColorKey)' + '/(colorKey' + '-lastColor' + 'Key);\x0d\x0a\x09\x09\x09' + 'overTimeCo' + 'lor.rgb=mi' + 'x(gradient' + 'Colors[i-1' + '].yzw,grad' + 'ientColor.' + 'yzw,age);\x0d') + ('\x0a\x09\x09\x09break;' + '\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d' + '\x0a\x09return\x20o' + 'verTimeCol' + 'or;\x0d\x0a}\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(TEXTURES' + 'HEETANIMAT' + 'IONCURVE)|' + '|defined(T' + 'EXTURESHEE' + 'TANIMATION' + 'RANDOMCURV' + 'E)\x0d\x0afloat\x20' + 'getFrameFr' + 'omGradient' + '(in\x20vec2\x20g' + 'radientFra' + 'mes[4],in\x20' + 'float\x20norm' + 'alizedAge)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20overTime' + 'Frame;\x0d\x0a\x09f' + 'or(int\x20i=1' + ';i<4;i++)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09vec' + '2\x20gradient' + 'Frame=grad' + 'ientFrames' + '[i];\x0d\x0a\x09\x09fl' + 'oat\x20key=gr' + 'adientFram' + 'e.x;\x0d\x0a\x09\x09if' + '(key>=norm' + 'alizedAge)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'vec2\x20lastG' + 'radientFra' + 'me=gradien' + 'tFrames[i-' + '1];\x0d\x0a\x09\x09\x09fl' + 'oat\x20lastKe' + 'y=lastGrad' + 'ientFrame.' + 'x;\x0d\x0a\x09\x09\x09flo' + 'at\x20age=(no' + 'rmalizedAg' + 'e-lastKey)' + '/(key-last' + 'Key);\x0d\x0a\x09\x09\x09' + 'overTimeFr' + 'ame=mix(la' + 'stGradient' + 'Frame.y,gr' + 'adientFram' + 'e.y,age);\x0d' + '\x0a\x09\x09\x09break;' + '\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d' + '\x0a\x09return\x20f' + 'loor(overT' + 'imeFrame);' + '\x0d\x0a}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECON' + 'STANT)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANT)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCURVE)\x0d' + '\x0avec3\x20comp' + 'uteParticl' + 'eLifeVeloc' + 'ity(in\x20flo' + 'at\x20normali' + 'zedAge)\x0d\x0a{' + '\x0d\x0a\x20\x20vec3\x20o' + 'utLifeVelo' + 'city;\x0d\x0a\x20\x20#' + 'ifdef\x20VELO' + 'CITYOVERLI' + 'FETIMECONS' + 'TANT\x0d\x0a\x09\x20ou' + 'tLifeVeloc' + 'ity=u_VOLV' + 'elocityCon' + 'st;\x20\x0d\x0a\x20\x20#e' + 'ndif\x0d\x0a\x20\x20#i' + 'fdef\x20VELOC') + ('ITYOVERLIF' + 'ETIMECURVE' + '\x0d\x0a\x20\x20\x20\x20\x20out' + 'LifeVeloci' + 'ty=\x20vec3(g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientX' + ',normalize' + 'dAge),getC' + 'urValueFro' + 'mGradientF' + 'loat(u_VOL' + 'VelocityGr' + 'adientY,no' + 'rmalizedAg' + 'e),getCurV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entZ,norma' + 'lizedAge))' + ';\x0d\x0a\x20\x20#endi' + 'f\x0d\x0a\x20\x20#ifde' + 'f\x20VELOCITY' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANT\x0d\x0a\x09\x20' + 'outLifeVel' + 'ocity=mix(' + 'u_VOLVeloc' + 'ityConst,u' + '_VOLVeloci' + 'tyConstMax' + ',vec3(a_Ra' + 'ndom1.y,a_' + 'Random1.z,' + 'a_Random1.' + 'w));\x20\x0d\x0a\x20\x20#' + 'endif\x0d\x0a\x20\x20#' + 'ifdef\x20VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCURVE\x0d\x0a\x20' + '\x20\x20\x20\x20outLif' + 'eVelocity=' + 'vec3(mix(g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientX' + ',normalize' + 'dAge),getC' + 'urValueFro' + 'mGradientF' + 'loat(u_VOL' + 'VelocityGr' + 'adientMaxX' + ',normalize' + 'dAge),a_Ra' + 'ndom1.y),\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20m' + 'ix(getCurV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entY,norma' + 'lizedAge),' + 'getCurValu' + 'eFromGradi' + 'entFloat(u' + '_VOLVeloci' + 'tyGradient' + 'MaxY,norma' + 'lizedAge),' + 'a_Random1.' + 'z),\x0d\x0a\x09\x09\x09\x09\x09' + '\x20mix(getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_VOLV' + 'elocityGra' + 'dientZ,nor' + 'malizedAge' + '),getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntMaxZ,nor' + 'malizedAge' + '),a_Random' + '1.w));\x0d\x0a\x20\x20' + '#endif\x0d\x0a\x09\x09') + ('\x09\x09\x09\x0d\x0a\x20\x20ret' + 'urn\x20outLif' + 'eVelocity;' + '\x0d\x0a}\x20\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avec3' + '\x20computePa' + 'rticlePosi' + 'tion(in\x20ve' + 'c3\x20startVe' + 'locity,\x20in' + '\x20vec3\x20life' + 'Velocity,i' + 'n\x20float\x20ag' + 'e,in\x20float' + '\x20normalize' + 'dAge,vec3\x20' + 'gravityVel' + 'ocity,vec4' + '\x20worldRota' + 'tion)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20vec3\x20st' + 'artPositio' + 'n;\x0d\x0a\x20\x20\x20vec' + '3\x20lifePosi' + 'tion;\x0d\x0a\x20\x20\x20' + '#if\x20define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MECONSTANT' + ')||defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ECURVE)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCONSTAN' + 'T)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE)\x0d\x0a\x09#if' + 'def\x20VELOCI' + 'TYOVERLIFE' + 'TIMECONSTA' + 'NT\x0d\x0a\x09\x09\x20\x20st' + 'artPositio' + 'n=startVel' + 'ocity*age;' + '\x0d\x0a\x09\x09\x20\x20life' + 'Position=l' + 'ifeVelocit' + 'y*age;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20VELOC' + 'ITYOVERLIF' + 'ETIMECURVE' + '\x0d\x0a\x09\x09\x20\x20star' + 'tPosition=' + 'startVeloc' + 'ity*age;\x0d\x0a' + '\x09\x09\x20\x20lifePo' + 'sition=vec' + '3(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_VOLVe' + 'locityGrad' + 'ientX,norm' + 'alizedAge)' + ',getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entY,norma' + 'lizedAge),' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntZ,normal' + 'izedAge));' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#ifdef\x20V' + 'ELOCITYOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANT\x0d\x0a\x09\x09\x20\x20s' + 'tartPositi' + 'on=startVe' + 'locity*age' + ';\x0d\x0a\x09\x09\x20\x20lif' + 'ePosition=' + 'lifeVeloci' + 'ty*age;\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20VELO' + 'CITYOVERLI') + ('FETIMERAND' + 'OMCURVE\x0d\x0a\x09' + '\x09\x20\x20startPo' + 'sition=sta' + 'rtVelocity' + '*age;\x0d\x0a\x09\x09\x20' + '\x20lifePosit' + 'ion=vec3(m' + 'ix(getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_VOLV' + 'elocityGra' + 'dientX,nor' + 'malizedAge' + '),getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_VOLVe' + 'locityGrad' + 'ientMaxX,n' + 'ormalizedA' + 'ge),a_Rand' + 'om1.y)\x0d\x0a\x09\x20' + '\x20\x20\x20\x20\x20,mix(' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntY,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_VOLVeloc' + 'ityGradien' + 'tMaxY,norm' + 'alizedAge)' + ',a_Random1' + '.z)\x0d\x0a\x09\x20\x20\x20\x20' + '\x20\x20,mix(get' + 'TotalValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientZ' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_V' + 'OLVelocity' + 'GradientMa' + 'xZ,normali' + 'zedAge),a_' + 'Random1.w)' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09vec' + '3\x20finalPos' + 'ition;\x0d\x0a\x09i' + 'f(u_VOLSpa' + 'ceType==0)' + '{\x0d\x0a\x09\x20\x20if(u' + '_ScalingMo' + 'de!=2)\x0d\x0a\x09\x20' + '\x20\x20finalPos' + 'ition\x20=rot' + 'ationByQua' + 'ternions(u' + '_PositionS' + 'cale*(a_Sh' + 'apePositio' + 'nStartLife' + 'Time.xyz+s' + 'tartPositi' + 'on+lifePos' + 'ition),wor' + 'ldRotation' + ');\x0d\x0a\x09\x20\x20els' + 'e\x0d\x0a\x09\x20\x20\x20fin' + 'alPosition' + '\x20=rotation' + 'ByQuaterni' + 'ons(u_Posi' + 'tionScale*' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'yz+startPo' + 'sition+lif' + 'ePosition,' + 'worldRotat' + 'ion);\x0d\x0a\x09}\x0d' + '\x0a\x09else{\x0d\x0a\x09' + '\x20\x20if(u_Sca' + 'lingMode!=' + '2)\x0d\x0a\x09\x20\x20\x20\x20f' + 'inalPositi' + 'on\x20=\x20rotat') + ('ionByQuate' + 'rnions(u_P' + 'ositionSca' + 'le*(a_Shap' + 'ePositionS' + 'tartLifeTi' + 'me.xyz+sta' + 'rtPosition' + '),worldRot' + 'ation)+lif' + 'ePosition;' + '\x0d\x0a\x09\x20\x20else\x0d' + '\x0a\x09\x20\x20\x20\x20fina' + 'lPosition\x20' + '=\x20rotation' + 'ByQuaterni' + 'ons(u_Posi' + 'tionScale*' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'yz+startPo' + 'sition,wor' + 'ldRotation' + ')+lifePosi' + 'tion;\x0d\x0a\x09}\x0d' + '\x0a\x20\x20#else\x0d\x0a' + '\x09\x20startPos' + 'ition=star' + 'tVelocity*' + 'age;\x0d\x0a\x09\x20ve' + 'c3\x20finalPo' + 'sition;\x0d\x0a\x09' + '\x20if(u_Scal' + 'ingMode!=2' + ')\x0d\x0a\x09\x09\x09fina' + 'lPosition\x20' + '=\x20rotation' + 'ByQuaterni' + 'ons(u_Posi' + 'tionScale*' + '(a_ShapePo' + 'sitionStar' + 'tLifeTime.' + 'xyz+startP' + 'osition),w' + 'orldRotati' + 'on);\x0d\x0a\x09\x20el' + 'se\x0d\x0a\x09\x20\x20\x20\x09f' + 'inalPositi' + 'on\x20=\x20rotat' + 'ionByQuate' + 'rnions(u_P' + 'ositionSca' + 'le*a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.xyz+star' + 'tPosition,' + 'worldRotat' + 'ion);\x0d\x0a\x20\x20#' + 'endif\x0d\x0a\x20\x20\x0d' + '\x0a\x20\x20if(u_Si' + 'mulationSp' + 'ace==0)\x0d\x0a\x20' + '\x20\x20\x20finalPo' + 'sition=fin' + 'alPosition' + '+a_Simulat' + 'ionWorldPo' + 'stion;\x0d\x0a\x20\x20' + 'else\x20if(u_' + 'Simulation' + 'Space==1)\x20' + '\x0d\x0a\x20\x20\x20\x20fina' + 'lPosition=' + 'finalPosit' + 'ion+u_Worl' + 'dPosition;' + '\x0d\x0a\x20\x20\x0d\x0a\x20\x20fi' + 'nalPositio' + 'n+=0.5*gra' + 'vityVeloci' + 'ty*age;\x0d\x0a\x20' + '\x0d\x0a\x20\x20return' + '\x20\x20finalPos' + 'ition;\x0d\x0a}\x0d' + '\x0a\x0d\x0a\x0d\x0avec4\x20' + 'computePar' + 'ticleColor' + '(in\x20vec4\x20c' + 'olor,in\x20fl' + 'oat\x20normal' + 'izedAge)\x0d\x0a' + '{\x0d\x0a\x09#ifdef' + '\x20COLOROVER' + 'LIFETIME\x0d\x0a' + '\x09\x20\x20color*=' + 'getColorFr' + 'omGradient') + ('(u_ColorOv' + 'erLifeGrad' + 'ientAlphas' + ',u_ColorOv' + 'erLifeGrad' + 'ientColors' + ',normalize' + 'dAge);\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20RA' + 'NDOMCOLORO' + 'VERLIFETIM' + 'E\x0d\x0a\x09\x20\x20colo' + 'r*=mix(get' + 'ColorFromG' + 'radient(u_' + 'ColorOverL' + 'ifeGradien' + 'tAlphas,u_' + 'ColorOverL' + 'ifeGradien' + 'tColors,no' + 'rmalizedAg' + 'e),getColo' + 'rFromGradi' + 'ent(u_MaxC' + 'olorOverLi' + 'feGradient' + 'Alphas,u_M' + 'axColorOve' + 'rLifeGradi' + 'entColors,' + 'normalized' + 'Age),a_Ran' + 'dom0.y);\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20color;\x0d\x0a' + '}\x0d\x0a\x0d\x0avec2\x20' + 'computePar' + 'ticleSizeB' + 'illbard(in' + '\x20vec2\x20size' + ',in\x20float\x20' + 'normalized' + 'Age)\x0d\x0a{\x0d\x0a\x09' + '#ifdef\x20SIZ' + 'EOVERLIFET' + 'IMECURVE\x0d\x0a' + '\x09\x09size*=ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ient,norma' + 'lizedAge);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#ifdef\x20S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVES\x0d\x0a\x09' + '\x20\x20\x20\x20size*=' + 'mix(getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + ',normalize' + 'dAge),getC' + 'urValueFro' + 'mGradientF' + 'loat(u_SOL' + 'SizeGradie' + 'ntMax,norm' + 'alizedAge)' + ',a_Random0' + '.z);\x20\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20SIZEOV' + 'ERLIFETIME' + 'CURVESEPER' + 'ATE\x0d\x0a\x09\x09siz' + 'e*=vec2(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientX,norm' + 'alizedAge)' + ',getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientY,n' + 'ormalizedA' + 'ge));\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20SIZEOV' + 'ERLIFETIME' + 'RANDOMCURV') + ('ESSEPERATE' + '\x0d\x0a\x09\x20\x20\x20\x20siz' + 'e*=vec2(mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientX,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMaxX,norm' + 'alizedAge)' + ',a_Random0' + '.z)\x0d\x0a\x09\x20\x20\x20\x20' + ',mix(getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tY,normali' + 'zedAge),ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientMaxY,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.z));\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'return\x20siz' + 'e;\x0d\x0a}\x0d\x0a\x0d\x0a#' + 'ifdef\x20REND' + 'ERMODE_MES' + 'H\x0d\x0avec3\x20co' + 'mputeParti' + 'cleSizeMes' + 'h(in\x20vec3\x20' + 'size,in\x20fl' + 'oat\x20normal' + 'izedAge)\x0d\x0a' + '{\x0d\x0a\x09#ifdef' + '\x20SIZEOVERL' + 'IFETIMECUR' + 'VE\x0d\x0a\x09\x09size' + '*=getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'Gradient,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S\x0d\x0a\x09\x20\x20\x20\x20si' + 'ze*=mix(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ient,norma' + 'lizedAge),' + 'getCurValu' + 'eFromGradi' + 'entFloat(u' + '_SOLSizeGr' + 'adientMax,' + 'normalized' + 'Age),a_Ran' + 'dom0.z);\x20\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20SI' + 'ZEOVERLIFE' + 'TIMECURVES' + 'EPERATE\x0d\x0a\x09' + '\x09size*=vec' + '3(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientX,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tY,normali' + 'zedAge),ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientZ,norm') + ('alizedAge)' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20SIZEOVERL' + 'IFETIMERAN' + 'DOMCURVESS' + 'EPERATE\x0d\x0a\x09' + '\x20\x20\x20\x20size*=' + 'vec3(mix(g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'SOLSizeGra' + 'dientX,nor' + 'malizedAge' + '),getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientMa' + 'xX,normali' + 'zedAge),a_' + 'Random0.z)' + '\x0d\x0a\x09\x20\x20\x20\x20,mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientY,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMaxY,norm' + 'alizedAge)' + ',a_Random0' + '.z)\x0d\x0a\x09\x09,mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientZ,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMaxZ,norm' + 'alizedAge)' + ',a_Random0' + '.z));\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09ret' + 'urn\x20size;\x0d' + '\x0a}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0afloat\x20' + 'computePar' + 'ticleRotat' + 'ionFloat(i' + 'n\x20float\x20ro' + 'tation,in\x20' + 'float\x20age,' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x20\x0d\x0a\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIME\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMECO' + 'NSTANT\x0d\x0a\x09\x09' + '\x09float\x20age' + 'Rot=u_ROLA' + 'ngularVelo' + 'cityConst*' + 'age;\x0d\x0a\x09\x20\x20\x20' + '\x20\x20\x20\x20\x20rotat' + 'ion+=ageRo' + 't;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMECURVE\x0d\x0a' + '\x09\x09\x09rotatio' + 'n+=getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'nt,normali' + 'zedAge);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCONST') + ('ANTS\x0d\x0a\x09\x09\x09f' + 'loat\x20ageRo' + 't=mix(u_RO' + 'LAngularVe' + 'locityCons' + 't,u_ROLAng' + 'ularVeloci' + 'tyConstMax' + ',a_Random0' + '.w)*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES\x0d\x0a\x09\x09\x09rot' + 'ation+=mix' + '(getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientMax,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.w);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20ROTA' + 'TIONOVERLI' + 'FETIMESEPE' + 'RATE\x0d\x0a\x09\x09#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMECONST' + 'ANT\x0d\x0a\x09\x09\x09fl' + 'oat\x20ageRot' + '=u_ROLAngu' + 'larVelocit' + 'yConstSepr' + 'arate.z*ag' + 'e;\x0d\x0a\x09\x20\x20\x20\x20\x20' + '\x20\x20\x20rotatio' + 'n+=ageRot;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ECURVE\x0d\x0a\x09\x09' + '\x09rotation+' + '=getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + 'Z,normaliz' + 'edAge);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NTS\x0d\x0a\x09\x09\x09fl' + 'oat\x20ageRot' + '=mix(u_ROL' + 'AngularVel' + 'ocityConst' + 'Seprarate.' + 'z,u_ROLAng' + 'ularVeloci' + 'tyConstMax' + 'Seprarate.' + 'z,a_Random' + '0.w)*age;\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + 'rotation+=' + 'ageRot;\x0d\x0a\x09' + '\x20\x20\x20\x20#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VES\x0d\x0a\x09\x09\x09ro' + 'tation+=mi' + 'x(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn') + ('gularVeloc' + 'ityGradien' + 'tZ,normali' + 'zedAge),ge' + 'tTotalValu' + 'eFromGradi' + 'entFloat(u' + '_ROLAngula' + 'rVelocityG' + 'radientMax' + 'Z,normaliz' + 'edAge),a_R' + 'andom0.w))' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x09return\x20' + 'rotation;\x0d' + '\x0a}\x0d\x0a\x0d\x0a#if\x20' + 'defined(RE' + 'NDERMODE_M' + 'ESH)&&(def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIME)||de' + 'fined(ROTA' + 'TIONOVERLI' + 'FETIMESEPE' + 'RATE))\x0d\x0ave' + 'c3\x20compute' + 'ParticleRo' + 'tationVec3' + '(in\x20vec3\x20r' + 'otation,in' + '\x20float\x20age' + ',in\x20float\x20' + 'normalized' + 'Age)\x0d\x0a{\x20\x0d\x0a' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIME\x0d\x0a' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMECO' + 'NSTANT\x0d\x0a\x09\x09' + '\x09float\x20age' + 'Rot=u_ROLA' + 'ngularVelo' + 'cityConst*' + 'age;\x0d\x0a\x09\x20\x20\x20' + '\x20\x20\x20\x20\x20rotat' + 'ion+=ageRo' + 't;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMECURVE\x0d\x0a' + '\x09\x09\x09rotatio' + 'n+=getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'nt,normali' + 'zedAge);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANTS\x0d\x0a\x09\x09\x09f' + 'loat\x20ageRo' + 't=mix(u_RO' + 'LAngularVe' + 'locityCons' + 't,u_ROLAng' + 'ularVeloci' + 'tyConstMax' + ',a_Random0' + '.w)*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES\x0d\x0a\x09\x09\x09rot' + 'ation+=mix' + '(getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien') + ('tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientMax,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.w);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20ROTA' + 'TIONOVERLI' + 'FETIMESEPE' + 'RATE\x0d\x0a\x09\x09#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMECONST' + 'ANT\x0d\x0a\x09\x09\x09ve' + 'c3\x20ageRot=' + 'u_ROLAngul' + 'arVelocity' + 'ConstSepra' + 'rate*age;\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + 'rotation+=' + 'ageRot;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMECU' + 'RVE\x0d\x0a\x09\x09\x09ro' + 'tation+=ve' + 'c3(getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntX,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_ROLAngul' + 'arVelocity' + 'GradientY,' + 'normalized' + 'Age),getTo' + 'talValueFr' + 'omGradient' + 'Float(u_RO' + 'LAngularVe' + 'locityGrad' + 'ientZ,norm' + 'alizedAge)' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS\x0d\x0a' + '\x09\x09\x09vec3\x20ag' + 'eRot=mix(u' + '_ROLAngula' + 'rVelocityC' + 'onstSeprar' + 'ate,u_ROLA' + 'ngularVelo' + 'cityConstM' + 'axSeprarat' + 'e,a_Random' + '0.w)*age;\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + 'rotation+=' + 'ageRot;\x0d\x0a\x09' + '\x20\x20\x20\x20#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VES\x0d\x0a\x09\x09\x09ro' + 'tation+=ve' + 'c3(mix(get' + 'TotalValue' + 'FromGradie' + 'ntFloat(u_' + 'ROLAngular' + 'VelocityGr' + 'adientX,no' + 'rmalizedAg' + 'e),getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntMaxX,nor' + 'malizedAge' + '),a_Random' + '0.w)\x0d\x0a\x09\x20\x20\x20' + '\x20\x20\x20\x20\x20,mix(') + ('getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_ROLAngu' + 'larVelocit' + 'yGradientY' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientMaxY,' + 'normalized' + 'Age),a_Ran' + 'dom0.w)\x0d\x0a\x09' + '\x20\x20\x20\x20\x20\x20\x20\x20,m' + 'ix(getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntZ,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xZ,normali' + 'zedAge),a_' + 'Random0.w)' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09return' + '\x20rotation;' + '\x0d\x0a}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avec2\x20' + 'computePar' + 'ticleUV(in' + '\x20vec2\x20uv,i' + 'n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x20\x0d\x0a\x09#' + 'ifdef\x20TEXT' + 'URESHEETAN' + 'IMATIONCUR' + 'VE\x0d\x0a\x09\x09floa' + 't\x20cycleNor' + 'malizedAge' + '=normalize' + 'dAge*u_TSA' + 'Cycles;\x0d\x0a\x09' + '\x09float\x20fra' + 'me=getFram' + 'eFromGradi' + 'ent(u_TSAG' + 'radientUVs' + ',cycleNorm' + 'alizedAge-' + 'floor(cycl' + 'eNormalize' + 'dAge));\x0d\x0a\x09' + '\x09float\x20tot' + 'alULength=' + 'frame*u_TS' + 'ASubUVLeng' + 'th.x;\x0d\x0a\x09\x09f' + 'loat\x20floor' + 'TotalULeng' + 'th=floor(t' + 'otalULengt' + 'h);\x0d\x0a\x09\x20\x20\x20\x20' + 'uv.x+=tota' + 'lULength-f' + 'loorTotalU' + 'Length;\x0d\x0a\x09' + '\x09uv.y+=flo' + 'orTotalULe' + 'ngth*u_TSA' + 'SubUVLengt' + 'h.y;\x0d\x0a\x20\x20\x20\x20' + '#endif\x0d\x0a\x09#' + 'ifdef\x20TEXT' + 'URESHEETAN' + 'IMATIONRAN' + 'DOMCURVE\x0d\x0a' + '\x09\x09float\x20cy' + 'cleNormali' + 'zedAge=nor' + 'malizedAge' + '*u_TSACycl' + 'es;\x0d\x0a\x09\x09flo' + 'at\x20uvNorma' + 'lizedAge=c' + 'ycleNormal' + 'izedAge-fl') + ('oor(cycleN' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x20\x20\x20' + '\x20float\x20fra' + 'me=floor(m' + 'ix(getFram' + 'eFromGradi' + 'ent(u_TSAG' + 'radientUVs' + ',uvNormali' + 'zedAge),ge' + 'tFrameFrom' + 'Gradient(u' + '_TSAMaxGra' + 'dientUVs,u' + 'vNormalize' + 'dAge),a_Ra' + 'ndom1.x));' + '\x0d\x0a\x09\x09float\x20' + 'totalULeng' + 'th=frame*u' + '_TSASubUVL' + 'ength.x;\x0d\x0a' + '\x09\x09float\x20fl' + 'oorTotalUL' + 'ength=floo' + 'r(totalULe' + 'ngth);\x0d\x0a\x09\x20' + '\x20\x20\x20uv.x+=t' + 'otalULengt' + 'h-floorTot' + 'alULength;' + '\x0d\x0a\x09\x09uv.y+=' + 'floorTotal' + 'ULength*u_' + 'TSASubUVLe' + 'ngth.y;\x0d\x0a\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09return\x20u' + 'v;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20age\x20=\x20u_' + 'CurrentTim' + 'e\x20-\x20a_Dire' + 'ctionTime.' + 'w;\x0d\x0a\x09float' + '\x20normalize' + 'dAge\x20=\x20age' + '/a_ShapePo' + 'sitionStar' + 'tLifeTime.' + 'w;\x0d\x0a\x09vec3\x20' + 'lifeVeloci' + 'ty;\x0d\x0a\x09if(n' + 'ormalizedA' + 'ge<1.0)\x0d\x0a\x09' + '{\x20\x0d\x0a\x09\x09vec3' + '\x20startVelo' + 'city=a_Dir' + 'ectionTime' + '.xyz*a_Sta' + 'rtSpeed;\x0d\x0a' + '\x09\x09#if\x20defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMECONSTA' + 'NT)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMECURVE)|' + '|defined(V' + 'ELOCITYOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANT)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CURVE)\x0d\x0a\x09\x09' + '\x09lifeVeloc' + 'ity=\x20compu' + 'teParticle' + 'LifeVeloci' + 'ty(normali' + 'zedAge);//' + '计算粒子生命周期速度' + '\x0d\x0a\x09\x09#endif' + '\x20\x0d\x0a\x09\x09vec3\x20' + 'gravityVel' + 'ocity=u_Gr' + 'avity*age;' + '\x0d\x0a\x09\x09\x0d\x0a\x09\x09ve' + 'c4\x20worldRo' + 'tation;\x0d\x0a\x09' + '\x09if(u_Simu' + 'lationSpac' + 'e==0)\x0d\x0a\x09\x09\x09' + 'worldRotat' + 'ion=a_Simu') + ('lationWorl' + 'dRotation;' + '\x0d\x0a\x09\x09else\x0d\x0a' + '\x09\x09\x09worldRo' + 'tation=u_W' + 'orldRotati' + 'on;\x0d\x0a\x09\x09\x0d\x0a\x09' + '\x09vec3\x20cent' + 'er=compute' + 'ParticlePo' + 'sition(sta' + 'rtVelocity' + ',\x20lifeVelo' + 'city,\x20age,' + '\x20normalize' + 'dAge,gravi' + 'tyVelocity' + ',worldRota' + 'tion);//计算' + '粒子位置\x0d\x0a\x09\x0d\x0a\x09' + '\x0d\x0a\x09\x09#ifdef' + '\x20SPHERHBIL' + 'LBOARD\x0d\x0a\x09\x09' + '\x09vec2\x20corn' + 'er=a_Corne' + 'rTextureCo' + 'ordinate.x' + 'y;//Billbo' + 'ard模式z轴无效\x0d' + '\x0a\x09\x09\x09vec3\x20c' + 'ameraUpVec' + 'tor\x20=norma' + 'lize(u_Cam' + 'eraUp);//T' + 'ODO:是否外面归一' + '化\x0d\x0a\x09\x09\x09vec3' + '\x20sideVecto' + 'r\x20=\x20normal' + 'ize(cross(' + 'u_CameraDi' + 'rection,ca' + 'meraUpVect' + 'or));\x0d\x0a\x09\x09\x09' + 'vec3\x20upVec' + 'tor\x20=\x20norm' + 'alize(cros' + 's(sideVect' + 'or,u_Camer' + 'aDirection' + '));\x0d\x0a\x09\x09\x09co' + 'rner*=comp' + 'uteParticl' + 'eSizeBillb' + 'ard(a_Star' + 'tSize.xy,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09#' + 'if\x20defined' + '(ROTATIONO' + 'VERLIFETIM' + 'E)||define' + 'd(ROTATION' + 'OVERLIFETI' + 'MESEPERATE' + ')\x0d\x0a\x09\x09\x09\x09if(' + 'u_ThreeDSt' + 'artRotatio' + 'n){\x0d\x0a\x09\x09\x09\x09\x09' + 'vec3\x20rotat' + 'ion=vec3(a' + '_StartRota' + 'tion0.xy,c' + 'omputePart' + 'icleRotati' + 'onFloat(a_' + 'StartRotat' + 'ion0.z,age' + ',normalize' + 'dAge));\x0d\x0a\x09' + '\x09\x09\x09\x09center' + '\x20+=\x20u_Size' + 'Scale.xzy*' + 'rotationBy' + 'Euler(corn' + 'er.x*sideV' + 'ector+corn' + 'er.y*upVec' + 'tor,rotati' + 'on);\x0d\x0a\x09\x09\x09\x09' + '}\x0d\x0a\x09\x09\x09\x09els' + 'e{\x0d\x0a\x09\x09\x09\x09\x09f' + 'loat\x20rot\x20=' + '\x20computePa' + 'rticleRota' + 'tionFloat(' + 'a_StartRot' + 'ation0.x,\x20' + 'age,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09\x09\x09floa') + ('t\x20c\x20=\x20cos(' + 'rot);\x0d\x0a\x09\x09\x09' + '\x09\x09float\x20s\x20' + '=\x20sin(rot)' + ';\x0d\x0a\x09\x09\x09\x09\x09ma' + 't2\x20rotatio' + 'n=\x20mat2(c,' + '\x20-s,\x20s,\x20c)' + ';\x0d\x0a\x09\x09\x09\x09\x09co' + 'rner=rotat' + 'ion*corner' + ';\x0d\x0a\x09\x09\x09\x09\x09ce' + 'nter\x20+=\x20u_' + 'SizeScale.' + 'xzy*(corne' + 'r.x*sideVe' + 'ctor+corne' + 'r.y*upVect' + 'or);\x0d\x0a\x09\x09\x09\x09' + '}\x0d\x0a\x09\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09\x09if(' + 'u_ThreeDSt' + 'artRotatio' + 'n){\x0d\x0a\x09\x09\x09\x09\x09' + 'center\x20+=\x20' + 'u_SizeScal' + 'e.xzy*rota' + 'tionByEule' + 'r(corner.x' + '*sideVecto' + 'r+corner.y' + '*upVector,' + 'a_StartRot' + 'ation0);\x0d\x0a' + '\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09' + '\x09else{\x0d\x0a\x09\x09' + '\x09\x09\x09float\x20c' + '\x20=\x20cos(a_S' + 'tartRotati' + 'on0.x);\x0d\x0a\x09' + '\x09\x09\x09\x09float\x20' + 's\x20=\x20sin(a_' + 'StartRotat' + 'ion0.x);\x0d\x0a' + '\x09\x09\x09\x09\x09mat2\x20' + 'rotation=\x20' + 'mat2(c,\x20-s' + ',\x20s,\x20c);\x0d\x0a' + '\x09\x09\x09\x09\x09corne' + 'r=rotation' + '*corner;\x0d\x0a' + '\x09\x09\x09\x09\x09cente' + 'r\x20+=\x20u_Siz' + 'eScale.xzy' + '*(corner.x' + '*sideVecto' + 'r+corner.y' + '*upVector)' + ';\x0d\x0a\x09\x09\x09\x09}\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09\x09#ifd' + 'ef\x20STRETCH' + 'EDBILLBOAR' + 'D\x0d\x0a\x09\x09\x09vec2' + '\x20corner=a_' + 'CornerText' + 'ureCoordin' + 'ate.xy;//B' + 'illboard模式' + 'z轴无效\x0d\x0a\x09\x09\x09v' + 'ec3\x20veloci' + 'ty;\x0d\x0a\x09\x09\x09#i' + 'f\x20defined(' + 'VELOCITYOV' + 'ERLIFETIME' + 'CONSTANT)|' + '|defined(V' + 'ELOCITYOVE' + 'RLIFETIMEC' + 'URVE)||def' + 'ined(VELOC' + 'ITYOVERLIF' + 'ETIMERANDO' + 'MCONSTANT)' + '||defined(' + 'VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'E)\x0d\x0a\x09\x09\x09\x09if' + '(u_VOLSpac' + 'eType==0)\x0d' + '\x0a\x09\x09\x09\x09veloc' + 'ity=rotati' + 'onByQuater' + 'nions(u_Si' + 'zeScale*(s' + 'tartVeloci' + 'ty+lifeVel' + 'ocity),wor') + ('ldRotation' + ')+gravityV' + 'elocity;\x0d\x0a' + '\x09\x09\x09\x09else\x0d\x0a' + '\x09\x09\x09\x09veloci' + 'ty=rotatio' + 'nByQuatern' + 'ions(u_Siz' + 'eScale*sta' + 'rtVelocity' + ',worldRota' + 'tion)+life' + 'Velocity+g' + 'ravityVelo' + 'city;\x0d\x0a\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09velocity=' + '\x20rotationB' + 'yQuaternio' + 'ns(u_SizeS' + 'cale*start' + 'Velocity,w' + 'orldRotati' + 'on)+gravit' + 'yVelocity;' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x09\x0d\x0a\x09\x09\x09vec' + '3\x20cameraUp' + 'Vector\x20=\x20n' + 'ormalize(v' + 'elocity);\x0d' + '\x0a\x09\x09\x09vec3\x20d' + 'irection\x20=' + '\x20normalize' + '(center-u_' + 'CameraPos)' + ';\x0d\x0a\x09\x09\x09vec3' + '\x20sideVecto' + 'r\x20=\x20normal' + 'ize(cross(' + 'direction,' + 'normalize(' + 'velocity))' + ');\x0d\x0a\x09\x09\x09\x0d\x0a\x09' + '\x09\x09sideVect' + 'or=u_SizeS' + 'cale.xzy*s' + 'ideVector;' + '\x0d\x0a\x09\x09\x09camer' + 'aUpVector=' + 'length(vec' + '3(u_SizeSc' + 'ale.x,0.0,' + '0.0))*came' + 'raUpVector' + ';\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09' + '\x09vec2\x20size' + '=computePa' + 'rticleSize' + 'Billbard(a' + '_StartSize' + '.xy,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09c' + 'onst\x20mat2\x20' + 'rotaionZHa' + 'lfPI=mat2(' + '0.0,\x20-1.0,' + '\x201.0,\x200.0)' + ';\x0d\x0a\x09\x09\x09corn' + 'er=rotaion' + 'ZHalfPI*co' + 'rner;\x0d\x0a\x09\x09\x09' + 'corner.y=c' + 'orner.y-ab' + 's(corner.y' + ');\x0d\x0a\x09\x09\x09\x0d\x0a\x09' + '\x09\x09float\x20sp' + 'eed=length' + '(velocity)' + ';//TODO:\x0d\x0a' + '\x09\x09\x09center\x20' + '+=sign(u_S' + 'izeScale.x' + ')*(sign(u_' + 'StretchedB' + 'illboardLe' + 'ngthScale)' + '*size.x*co' + 'rner.x*sid' + 'eVector+(s' + 'peed*u_Str' + 'etchedBill' + 'boardSpeed' + 'Scale+size' + '.y*u_Stret' + 'chedBillbo' + 'ardLengthS' + 'cale)*corn' + 'er.y*camer') + ('aUpVector)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09\x09#i' + 'fdef\x20HORIZ' + 'ONTALBILLB' + 'OARD\x0d\x0a\x09\x09\x09v' + 'ec2\x20corner' + '=a_CornerT' + 'extureCoor' + 'dinate.xy;' + '//Billboar' + 'd模式z轴无效\x0d\x0a\x09' + '\x09\x09const\x20ve' + 'c3\x20cameraU' + 'pVector=ve' + 'c3(0.0,0.0' + ',1.0);\x0d\x0a\x09\x09' + '\x09const\x20vec' + '3\x20sideVect' + 'or\x20=\x20vec3(' + '-1.0,0.0,0' + '.0);\x0d\x0a\x09\x09\x09\x0d' + '\x0a\x09\x09\x09float\x20' + 'rot\x20=\x20comp' + 'uteParticl' + 'eRotationF' + 'loat(a_Sta' + 'rtRotation' + '0.x,\x20age,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09f' + 'loat\x20c\x20=\x20c' + 'os(rot);\x0d\x0a' + '\x09\x09\x09float\x20s' + '\x20=\x20sin(rot' + ');\x0d\x0a\x09\x09\x09mat' + '2\x20rotation' + '=\x20mat2(c,\x20' + '-s,\x20s,\x20c);' + '\x0d\x0a\x09\x09\x09corne' + 'r=rotation' + '*corner*co' + 's(0.785398' + '1633974483' + '0961566084' + '581988);//' + 'TODO:临时缩小c' + 'os45,不确定U3' + 'D原因\x0d\x0a\x09\x09\x09co' + 'rner*=comp' + 'uteParticl' + 'eSizeBillb' + 'ard(a_Star' + 'tSize.xy,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09c' + 'enter\x20+=u_' + 'SizeScale.' + 'xzy*(corne' + 'r.x*sideVe' + 'ctor+\x20corn' + 'er.y*camer' + 'aUpVector)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09\x09#i' + 'fdef\x20VERTI' + 'CALBILLBOA' + 'RD\x0d\x0a\x09\x09\x09vec' + '2\x20corner=a' + '_CornerTex' + 'tureCoordi' + 'nate.xy;//' + 'Billboard模' + '式z轴无效\x0d\x0a\x09\x09\x09' + 'const\x20vec3' + '\x20cameraUpV' + 'ector\x20=vec' + '3(0.0,1.0,' + '0.0);\x0d\x0a\x09\x09\x09' + 'vec3\x20sideV' + 'ector\x20=\x20no' + 'rmalize(cr' + 'oss(u_Came' + 'raDirectio' + 'n,cameraUp' + 'Vector));\x0d' + '\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09f' + 'loat\x20rot\x20=' + '\x20computePa' + 'rticleRota' + 'tionFloat(' + 'a_StartRot' + 'ation0.x,\x20' + 'age,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09float\x20' + 'c\x20=\x20cos(ro' + 't);\x0d\x0a\x09\x09\x09fl' + 'oat\x20s\x20=\x20si' + 'n(rot);\x0d\x0a\x09') + ('\x09\x09mat2\x20rot' + 'ation=\x20mat' + '2(c,\x20-s,\x20s' + ',\x20c);\x0d\x0a\x09\x09\x09' + 'corner=rot' + 'ation*corn' + 'er*cos(0.7' + '8539816339' + '7448309615' + '6608458198' + '8);//TODO:' + '临时缩小cos45,' + '不确定U3D原因\x0d\x0a' + '\x09\x09\x09corner*' + '=computePa' + 'rticleSize' + 'Billbard(a' + '_StartSize' + '.xy,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09center' + '\x20+=u_SizeS' + 'cale.xzy*(' + 'corner.x*s' + 'ideVector+' + '\x20corner.y*' + 'cameraUpVe' + 'ctor);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09\x09#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09\x09\x09' + 'vec3\x20size=' + 'computePar' + 'ticleSizeM' + 'esh(a_Star' + 'tSize,norm' + 'alizedAge)' + ';\x0d\x0a\x09\x09\x09#if\x20' + 'defined(RO' + 'TATIONOVER' + 'LIFETIME)|' + '|defined(R' + 'OTATIONOVE' + 'RLIFETIMES' + 'EPERATE)\x0d\x0a' + '\x09\x09\x09\x09if(u_T' + 'hreeDStart' + 'Rotation){' + '\x0d\x0a\x09\x09\x09\x09\x09vec' + '3\x20rotation' + '=vec3(a_St' + 'artRotatio' + 'n0.xy,comp' + 'uteParticl' + 'eRotationF' + 'loat(a_Sta' + 'rtRotation' + '0.z,\x20age,n' + 'ormalizedA' + 'ge));\x0d\x0a\x09\x09\x09' + '\x09\x09center+=' + '\x20rotationB' + 'yQuaternio' + 'ns(u_SizeS' + 'cale*rotat' + 'ionByEuler' + '(a_MeshPos' + 'ition*size' + ',rotation)' + ',worldRota' + 'tion);\x0d\x0a\x09\x09' + '\x09\x09}\x0d\x0a\x09\x09\x09\x09e' + 'lse{\x0d\x0a\x09\x09\x09\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIME\x0d\x0a' + '\x09\x09\x09\x09\x09\x09floa' + 't\x20angle=co' + 'mputeParti' + 'cleRotatio' + 'nFloat(a_S' + 'tartRotati' + 'on0.x,\x20age' + ',normalize' + 'dAge);\x0d\x0a\x09\x09' + '\x09\x09\x09\x09if(a_S' + 'hapePositi' + 'onStartLif' + 'eTime.x!=0' + '.0||a_Shap' + 'ePositionS' + 'tartLifeTi' + 'me.y!=0.0)' + '{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + 'center+=\x20(' + 'rotationBy' + 'Quaternion' + 's(rotation' + 'ByAxis(u_S') + ('izeScale*a' + '_MeshPosit' + 'ion*size,n' + 'ormalize(c' + 'ross(vec3(' + '0.0,0.0,1.' + '0),vec3(a_' + 'ShapePosit' + 'ionStartLi' + 'feTime.xy,' + '0.0))),ang' + 'le),worldR' + 'otation));' + '//已验证\x0d\x0a\x09\x09\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09' + '\x09\x09else{\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09#ifd' + 'ef\x20SHAPE\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=\x20u_S' + 'izeScale.x' + 'zy*(rotati' + 'onByQuater' + 'nions(rota' + 'tionByAxis' + '(a_MeshPos' + 'ition*size' + ',vec3(0.0,' + '-1.0,0.0),' + 'angle),wor' + 'ldRotation' + '));\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09if(' + 'u_Simulati' + 'onSpace==0' + ')\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + '\x09\x09center+=' + 'rotationBy' + 'Axis(u_Siz' + 'eScale*a_M' + 'eshPositio' + 'n*size,vec' + '3(0.0,0.0,' + '-1.0),angl' + 'e);//已验证\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09el' + 'se\x20if(u_Si' + 'mulationSp' + 'ace==1)\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=rota' + 'tionByQuat' + 'ernions(u_' + 'SizeScale*' + 'rotationBy' + 'Axis(a_Mes' + 'hPosition*' + 'size,vec3(' + '0.0,0.0,-1' + '.0),angle)' + ',worldRota' + 'tion);//已验' + '证\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09\x09\x09#ifde' + 'f\x20ROTATION' + 'OVERLIFETI' + 'MESEPERATE' + '\x0d\x0a\x09\x09\x09\x09\x09\x09//' + 'TODO:是否应合并' + 'if(u_Three' + 'DStartRota' + 'tion)分支代码,' + '待测试\x0d\x0a\x09\x09\x09\x09\x09' + '\x09vec3\x20angl' + 'e=computeP' + 'articleRot' + 'ationVec3(' + 'vec3(0.0,0' + '.0,-a_Star' + 'tRotation0' + '.x),\x20age,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09\x09' + '\x09\x09center+=' + '\x20(rotation' + 'ByQuaterni' + 'ons(rotati' + 'onByEuler(' + 'u_SizeScal' + 'e*a_MeshPo' + 'sition*siz' + 'e,vec3(ang' + 'le.x,angle' + '.y,angle.z' + ')),worldRo' + 'tation));/') + ('/已验证\x0d\x0a\x09\x09\x09\x09' + '\x09#endif\x09\x09\x0d' + '\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09\x09if(u_Thr' + 'eeDStartRo' + 'tation){\x0d\x0a' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20rotati' + 'onByQuater' + 'nions(u_Si' + 'zeScale*ro' + 'tationByEu' + 'ler(a_Mesh' + 'Position*s' + 'ize,a_Star' + 'tRotation0' + '),worldRot' + 'ation);//已' + '验证\x0d\x0a\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09\x09else{' + '\x0d\x0a\x09\x09\x09\x09\x09if(' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + '!=0.0||a_S' + 'hapePositi' + 'onStartLif' + 'eTime.y!=0' + '.0){\x0d\x0a\x09\x09\x09\x09' + '\x09\x09if(u_Sim' + 'ulationSpa' + 'ce==0)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20rotati' + 'onByAxis(u' + '_SizeScale' + '*a_MeshPos' + 'ition*size' + ',normalize' + '(cross(vec' + '3(0.0,0.0,' + '1.0),vec3(' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'y,0.0))),a' + '_StartRota' + 'tion0.x);\x0d' + '\x0a\x09\x09\x09\x09\x09\x09els' + 'e\x20if(u_Sim' + 'ulationSpa' + 'ce==1)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20(rotat' + 'ionByQuate' + 'rnions(u_S' + 'izeScale*r' + 'otationByA' + 'xis(a_Mesh' + 'Position*s' + 'ize,normal' + 'ize(cross(' + 'vec3(0.0,0' + '.0,1.0),ve' + 'c3(a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.xy,0.0))' + '),a_StartR' + 'otation0.x' + '),worldRot' + 'ation));//' + '已验证\x0d\x0a\x09\x09\x09\x09\x09' + '}\x0d\x0a\x09\x09\x09\x09\x09el' + 'se{\x0d\x0a\x09\x09\x09\x09\x09' + '\x09#ifdef\x20SH' + 'APE\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09if(u_Sim' + 'ulationSpa' + 'ce==0)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09\x09cent' + 'er+=\x20u_Siz' + 'eScale*rot' + 'ationByAxi' + 's(a_MeshPo' + 'sition*siz' + 'e,vec3(0.0' + ',-1.0,0.0)' + ',a_StartRo' + 'tation0.x)' + ';\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + 'else\x20if(u_' + 'Simulation' + 'Space==1)\x0d' + '\x0a\x09\x09\x09\x09\x09\x09\x09\x09c' + 'enter+=\x20ro' + 'tationByQu' + 'aternions(' + 'u_SizeScal') + ('e*rotation' + 'ByAxis(a_M' + 'eshPositio' + 'n*size,vec' + '3(0.0,-1.0' + ',0.0),a_St' + 'artRotatio' + 'n0.x),worl' + 'dRotation)' + ';\x09\x0d\x0a\x09\x09\x09\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09if(u_S' + 'imulationS' + 'pace==0)\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=\x20rot' + 'ationByAxi' + 's(u_SizeSc' + 'ale*a_Mesh' + 'Position*s' + 'ize,vec3(0' + '.0,0.0,-1.' + '0),a_Start' + 'Rotation0.' + 'x);\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09else\x20if(' + 'u_Simulati' + 'onSpace==1' + ')\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + '\x09center+=\x20' + 'rotationBy' + 'Quaternion' + 's(u_SizeSc' + 'ale*rotati' + 'onByAxis(a' + '_MeshPosit' + 'ion*size,v' + 'ec3(0.0,0.' + '0,-1.0),a_' + 'StartRotat' + 'ion0.x),wo' + 'rldRotatio' + 'n);//已验证\x0d\x0a' + '\x09\x09\x09\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09v_MeshC' + 'olor=a_Mes' + 'hColor;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x0d\x0a\x09\x09gl_Pos' + 'ition=u_Pr' + 'ojection*u' + '_View*vec4' + '(center,1.' + '0);\x0d\x0a\x09\x09v_C' + 'olor\x20=\x20com' + 'putePartic' + 'leColor(a_' + 'StartColor' + ',\x20normaliz' + 'edAge);\x0d\x0a\x09' + '\x09#ifdef\x20DI' + 'FFUSEMAP\x0d\x0a' + '\x09\x09\x09#if\x20def' + 'ined(SPHER' + 'HBILLBOARD' + ')||defined' + '(STRETCHED' + 'BILLBOARD)' + '||defined(' + 'HORIZONTAL' + 'BILLBOARD)' + '||defined(' + 'VERTICALBI' + 'LLBOARD)\x0d\x0a' + '\x09\x09\x09\x09v_Text' + 'ureCoordin' + 'ate\x20=compu' + 'teParticle' + 'UV(a_Corne' + 'rTextureCo' + 'ordinate.z' + 'w,\x20normali' + 'zedAge);\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20RENDERMOD' + 'E_MESH\x0d\x0a\x09\x09' + '\x09\x09v_Textur' + 'eCoordinat' + 'e\x20=compute' + 'ParticleUV' + '(a_MeshTex' + 'tureCoordi' + 'nate,\x20norm' + 'alizedAge)' + ';\x0d\x0a\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x09\x0d\x0a\x09') + ('\x09\x09#ifdef\x20T' + 'ILINGOFFSE' + 'T\x0d\x0a\x09\x09\x09\x09v_T' + 'extureCoor' + 'dinate=Tra' + 'nsformUV(v' + '_TextureCo' + 'ordinate,u' + '_TilingOff' + 'set);\x0d\x0a\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x20\x20' + '\x20\x09}\x0d\x0a\x20\x20\x20\x09e' + 'lse\x0d\x0a\x09{\x0d\x0a\x09' + '\x09gl_Positi' + 'on=vec4(2.' + '0,2.0,2.0,' + '1.0);//Dis' + 'card\x20use\x20o' + 'ut\x20of\x20X(-1' + ',1),Y(-1,1' + '),Z(0,1)\x0d\x0a' + '\x09}\x0d\x0a\x09gl_Po' + 'sition=rem' + 'apGLPositi' + 'onZ(gl_Pos' + 'ition);\x0d\x0a}' + '\x0d\x0a\x0d\x0a'), _0x58a8ba = '//\x20allow\x20t' + 'o\x20explicit' + 'ly\x20overrid' + 'e\x20LAYA_BRD' + 'F_GI\x20and\x20L' + 'AYA_BRDF_L' + 'IGHT\x20in\x20cu' + 'stom\x20shade' + 'r,default\x20' + 'is\x20layaBRD' + 'FHighGI\x20an' + 'd\x20layaBRDF' + 'HighLight\x0d' + '\x0a#if\x20!defi' + 'ned\x20(LAYA_' + 'BRDF_GI)\x20\x0d' + '\x0a\x09#if\x20defi' + 'ned(LAYA_P' + 'BR_BRDF_LO' + 'W)\x0d\x0a\x09\x09#def' + 'ine\x20LAYA_B' + 'RDF_GI\x20lay' + 'aBRDFLowGI' + '\x0d\x0a\x09#elif\x20d' + 'efined(LAY' + 'A_PBR_BRDF' + '_HIGH)\x0d\x0a\x09\x09' + '#define\x20LA' + 'YA_BRDF_GI' + '\x20layaBRDFH' + 'ighGI\x0d\x0a\x09#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a#if\x20!d' + 'efined\x20(LA' + 'YA_BRDF_LI' + 'GHT)\x0d\x0a\x09#if' + '\x20defined(L' + 'AYA_PBR_BR' + 'DF_LOW)\x0d\x0a\x09' + '\x09#define\x20L' + 'AYA_BRDF_L' + 'IGHT\x20layaB' + 'RDFLowLigh' + 't\x0d\x0a\x09#elif\x20' + 'defined(LA' + 'YA_PBR_BRD' + 'F_HIGH)\x0d\x0a\x09' + '\x09#define\x20L' + 'AYA_BRDF_L' + 'IGHT\x20layaB' + 'RDFHighLig' + 'ht\x0d\x0a\x09#endi' + 'f\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#define' + '\x20PI\x203.1415' + '9265359\x0d\x0a#' + 'define\x20INV' + '_PI\x200.3183' + '0988618\x0d\x0a\x0d' + '\x0amediump\x20f' + 'loat\x20pow4(' + 'mediump\x20fl' + 'oat\x20x)\x0d\x0a{\x0d' + '\x0a\x09return\x20x' + '\x20*\x20x\x20*\x20x\x20*' + '\x20x;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'mediump\x20fl' + 'oat\x20pow5(m' + 'ediump\x20flo' + 'at\x20x)\x0d\x0a{\x0d\x0a' + '\x09return\x20x\x20' + '*\x20x\x20*\x20x\x20*\x20' + 'x\x20*\x20x;\x0d\x0a}\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20fres' + 'nelLerp(me' + 'diump\x20vec3' + '\x20F0,medium' + 'p\x20vec3\x20F90' + ',mediump\x20f' + 'loat\x20cosA)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20t\x20=\x20pow5' + '(1.0\x20-\x20cos' + 'A);\x20\x20\x20//\x20a' + 'la\x20Schlick' + '\x20interpoli' + 'ation\x0d\x0a\x09re' + 'turn\x20mix(F' + '0,\x20F90,\x20t)' + ';\x0d\x0a}\x0d\x0a\x0d\x0ame' + 'diump\x20vec3' + '\x20fresnelTe' + 'rm(mediump' + '\x20vec3\x20F0,m' + 'ediump\x20flo' + 'at\x20cosA)\x0d\x0a' + '{\x0d\x0a\x09float\x20' + 't\x20=\x20pow5(1' + '.0\x20-\x20cosA)' + (';\x20\x20\x20//\x20ala' + '\x20Schlick\x20i' + 'nterpoliat' + 'ion\x0d\x0a\x09retu' + 'rn\x20F0\x20+\x20(v' + 'ec3(1.0)\x20-' + '\x20F0)\x20*\x20t;\x0d' + '\x0a}\x0d\x0a\x0d\x0a//\x20a' + 'pproximage' + '\x20Schlick\x20w' + 'ith\x20^4\x20ins' + 'tead\x20of\x20^5' + '\x0d\x0amediump\x20' + 'vec3\x20fresn' + 'elLerpFast' + '\x20(mediump\x20' + 'vec3\x20F0,\x20m' + 'ediump\x20vec' + '3\x20F90,medi' + 'ump\x20float\x20' + 'cosA)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20float\x20t\x20' + '=\x20pow4\x20(1.' + '0\x20-\x20cosA);' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20mix\x20(F0' + ',\x20F90,\x20t);' + '\x0d\x0a}\x0d\x0a\x0d\x0aflo' + 'at\x20smoothn' + 'essToPerce' + 'ptualRough' + 'ness(float' + '\x20smoothnes' + 's)\x0d\x0a{\x0d\x0a\x20\x20\x20' + '\x20return\x201.' + '0\x20-\x20smooth' + 'ness;\x0d\x0a}\x0d\x0a' + '\x0d\x0afloat\x20pe' + 'rceptualRo' + 'ughnessToR' + 'oughness(f' + 'loat\x20perce' + 'ptualRough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20perceptua' + 'lRoughness' + '\x20*\x20percept' + 'ualRoughne' + 'ss;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec3\x20safeN' + 'ormalize(v' + 'ec3\x20inVec)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20dp3\x20=\x20ma' + 'x(0.001,do' + 't(inVec,in' + 'Vec));\x0d\x0a\x09r' + 'eturn\x20inVe' + 'c\x20*\x20invers' + 'esqrt(dp3)' + ';\x0d\x0a}\x0d\x0a\x0d\x0a//' + '\x20Note:\x20Dis' + 'ney\x20diffus' + 'e\x20must\x20be\x20' + 'multiply\x20b' + 'y\x20diffuseA' + 'lbedo\x20/\x20PI' + '.\x20This\x20is\x20' + 'done\x20outsi' + 'de\x20of\x20this' + '\x20function.' + '\x0d\x0amediump\x20' + 'float\x20disn' + 'eyDiffuse(' + 'mediump\x20fl' + 'oat\x20NdotV,' + 'mediump\x20fl' + 'oat\x20NdotL,' + 'mediump\x20fl' + 'oat\x20LdotH,' + 'mediump\x20fl' + 'oat\x20percep' + 'tualRoughn' + 'ess)\x0d\x0a{\x0d\x0a\x09' + '//https://' + 'www.cnblog' + 's.com/here' + 'nzhiming/a' + 'rticles/57' + '90389.html' + '\x0d\x0a\x09mediump' + '\x20float\x20fd9' + '0\x20=\x200.5\x20+\x20' + '2.0\x20*\x20Ldot' + 'H\x20*\x20LdotH\x20' + '*\x20perceptu' + 'alRoughnes' + 's;\x0d\x0a\x09//\x20Tw') + ('o\x20schlick\x20' + 'fresnel\x20te' + 'rm\x0d\x0a\x09mediu' + 'mp\x20float\x20l' + 'ightScatte' + 'r\x20=\x20(1.0\x20+' + '\x20(fd90\x20-\x201' + '.0)\x20*\x20pow5' + '(1.0\x20-\x20Ndo' + 'tL));\x0d\x0a\x09me' + 'diump\x20floa' + 't\x20viewScat' + 'ter\x20=\x20(1.0' + '\x20+\x20(fd90\x20-' + '\x201.0)\x20*\x20po' + 'w5(1.0\x20-\x20N' + 'dotV));\x0d\x0a\x0d' + '\x0a\x09return\x20l' + 'ightScatte' + 'r\x20*\x20viewSc' + 'atter;\x0d\x0a}\x0d' + '\x0a\x0d\x0a//\x20Ref:' + '\x20http://jc' + 'gt.org/pub' + 'lished/000' + '3/02/03/pa' + 'per.pdf\x0d\x0af' + 'loat\x20smith' + 'JointGGXVi' + 'sibilityTe' + 'rm(float\x20N' + 'dotL,\x20floa' + 't\x20NdotV,\x20f' + 'loat\x20rough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x09//\x20Origin' + 'al\x20formula' + 'tion:\x0d\x0a\x20\x20\x20' + '\x20//\x20lambda' + '_v\x20\x20\x20\x20=\x20(-' + '1\x20+\x20sqrt(a' + '2\x20*\x20(1\x20-\x20N' + 'dotL2)\x20/\x20N' + 'dotL2\x20+\x201)' + ')\x20*\x200.5f;\x0d' + '\x0a\x20\x20\x20\x20//\x20la' + 'mbda_l\x20\x20\x20\x20' + '=\x20(-1\x20+\x20sq' + 'rt(a2\x20*\x20(1' + '\x20-\x20NdotV2)' + '\x20/\x20NdotV2\x20' + '+\x201))\x20*\x200.' + '5f;\x0d\x0a\x20\x20\x20\x20/' + '/\x20G\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20=\x201\x20/\x20' + '(1\x20+\x20lambd' + 'a_v\x20+\x20lamb' + 'da_l);\x0d\x0a\x0d\x0a' + '\x09//\x20scient' + 'ific\x20code\x20' + 'implement:' + '\x0d\x0a\x09//\x20Reor' + 'der\x20code\x20t' + 'o\x20be\x20more\x20' + 'optimal\x0d\x0a\x20' + '\x20\x20\x20//\x20half' + '\x20a\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20=\x20roughn' + 'ess;\x0d\x0a\x20\x20\x20\x20' + '//\x20half\x20a2' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20=' + '\x20a\x20*\x20a;\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20//\x20ha' + 'lf\x20lambdaV' + '\x20\x20\x20\x20=\x20Ndot' + 'L\x20*\x20sqrt((' + '-NdotV\x20*\x20a' + '2\x20+\x20NdotV)' + '\x20*\x20NdotV\x20+' + '\x20a2);\x0d\x0a\x20\x20\x20' + '\x20//\x20half\x20l' + 'ambdaL\x20\x20\x20\x20' + '=\x20NdotV\x20*\x20' + 'sqrt((-Ndo' + 'tL\x20*\x20a2\x20+\x20' + 'NdotL)\x20*\x20N' + 'dotL\x20+\x20a2)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20/' + '/\x20Simplify' + '\x20visibilit' + 'y\x20term:\x20(2' + '.0f\x20*\x20Ndot' + 'L\x20*\x20NdotV)' + '\x20/\x20\x20((4.0f' + '\x20*\x20NdotL\x20*' + '\x20NdotV)\x20*\x20' + '(lambda_v\x20' + '+\x20lambda_l' + '\x20+\x201e-5f))' + ';\x0d\x0a\x20\x20\x20\x20//\x20') + ('return\x200.5' + 'f\x20/\x20(lambd' + 'aV\x20+\x20lambd' + 'aL\x20+\x201e-5f' + ');\x20\x20\x0d\x0a\x09//\x20' + 'This\x20funct' + 'ion\x20is\x20not' + '\x20intended\x20' + 'to\x20be\x20runn' + 'ing\x20on\x20Mob' + 'ile,theref' + 'ore\x20epsilo' + 'n\x20is\x20small' + 'er\x20than\x20ca' + 'n\x20be\x20repre' + 'sented\x20by\x20' + 'half\x0d\x0a\x0d\x0a\x09/' + '/\x20Approxim' + 'ation\x20of\x20t' + 'he\x20above\x20f' + 'ormulation' + '\x20(simplify' + '\x20the\x20sqrt,' + '\x20not\x20mathe' + 'matically\x20' + 'correct\x20bu' + 't\x20close\x20en' + 'ough)\x0d\x0a\x09fl' + 'oat\x20a\x20=\x20ro' + 'ughness;\x0d\x0a' + '\x09float\x20lam' + 'bdaV\x20=\x20Ndo' + 'tL\x20*\x20(Ndot' + 'V\x20*\x20(1.0\x20-' + '\x20a)\x20+\x20a);\x0d' + '\x0a\x09float\x20la' + 'mbdaL\x20=\x20Nd' + 'otV\x20*\x20(Ndo' + 'tL\x20*\x20(1.0\x20' + '-\x20a)\x20+\x20a);' + '\x0d\x0a\x09return\x20' + '0.5\x20/\x20(lam' + 'bdaV\x20+\x20lam' + 'bdaL\x20+\x201e-' + '5);\x0d\x0a}\x0d\x0a\x0d\x0a' + 'float\x20ggxT' + 'erm(float\x20' + 'NdotH,\x20flo' + 'at\x20roughne' + 'ss)\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20a2\x20=\x20' + 'roughness\x20' + '*\x20roughnes' + 's;\x0d\x0a\x09float' + '\x20d\x20=\x20(Ndot' + 'H\x20*\x20a2\x20-\x20N' + 'dotH)\x20*\x20Nd' + 'otH\x20+\x201.0;' + '\x20//\x202\x20mad\x0d' + '\x0a\x09return\x20I' + 'NV_PI\x20*\x20a2' + '\x20/\x20(d\x20*\x20d\x20' + '+\x201e-7);\x20/' + '/\x20This\x20fun' + 'ction\x20is\x20n' + 'ot\x20intende' + 'd\x20to\x20be\x20ru' + 'nning\x20on\x20M' + 'obile,ther' + 'efore\x20epsi' + 'lon\x20is\x20sma' + 'ller\x20than\x20' + 'what\x20can\x20b' + 'e\x20represen' + 'ted\x20by\x20hal' + 'f//返回值小用ha' + 'lf来返回\x0d\x0a}\x0d\x0a' + '\x0d\x0a//\x20BRDF1' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '-----\x0d\x0a\x0d\x0a/' + '/\x20Note:\x20BR' + 'DF\x20entry\x20p' + 'oints\x20use\x20' + 'smoothness' + '\x20and\x20oneMi' + 'nusReflect' + 'ivity\x20for\x20' + 'optimizati' + 'on\x20purpose' + 's,\x0d\x0a//\x20mos' + 'tly\x20for\x20DX' + '9\x20SM2.0\x20le' + 'vel.\x20Most\x20') + ('of\x20the\x20mat' + 'h\x20is\x20being' + '\x20done\x20on\x20t' + 'hese\x20(1-x)' + '\x20values,\x20a' + 'nd\x20that\x20sa' + 'ves\x20a\x20few\x20' + 'precious\x20A' + 'LU\x20slots.\x0d' + '\x0a\x0d\x0a//\x20Main' + '\x20Physicall' + 'y\x20Based\x20BR' + 'DF\x0d\x0a//\x20Der' + 'ived\x20from\x20' + 'Disney\x20wor' + 'k\x20and\x20base' + 'd\x20on\x20Torra' + 'nce-Sparro' + 'w\x20micro-fa' + 'cet\x20model\x0d' + '\x0a//\x0d\x0a//\x20BR' + 'DF\x20=\x20kD\x20/\x20' + 'pi\x20+\x20kS\x20*\x20' + '(D\x20*\x20V\x20*\x20F' + ')\x20/\x204\x0d\x0a//\x20' + 'I\x20=\x20BRDF\x20*' + '\x20NdotL\x0d\x0a//' + '\x0d\x0a//\x20*NDF\x20' + 'GGX:\x0d\x0a//\x20*' + 'Smith\x20for\x20' + 'Visiblity\x20' + 'term\x0d\x0a//\x20*' + 'Schlick\x20ap' + 'proximatio' + 'n\x20for\x20Fres' + 'nel\x0d\x0amediu' + 'mp\x20vec4\x20la' + 'yaBRDFHigh' + 'Light(medi' + 'ump\x20vec3\x20d' + 'iffColor,\x20' + 'mediump\x20ve' + 'c3\x20specCol' + 'or,\x20medium' + 'p\x20float\x20on' + 'eMinusRefl' + 'ectivity,\x20' + 'float\x20perc' + 'eptualRoug' + 'hness,floa' + 't\x20roughnes' + 's,mediump\x20' + 'float\x20nv,v' + 'ec3\x20normal' + ',\x20vec3\x20vie' + 'wDir,LayaL' + 'ight\x20light' + ')\x0d\x0a{\x0d\x0a\x09vec' + '3\x20halfDir\x20' + '=\x20safeNorm' + 'alize(view' + 'Dir-light.' + 'dir);\x0d\x0a\x0d\x0a\x09' + 'float\x20nl\x20=' + '\x20clamp(dot' + '(normal,\x20-' + 'light.dir)' + ',0.0,1.0);' + '\x0d\x0a\x09float\x20n' + 'h\x20=\x20clamp(' + 'dot(normal' + ',\x20halfDir)' + ',0.0,1.0);' + '\x0d\x0a\x09mediump' + '\x20float\x20lv\x20' + '=\x20clamp(do' + 't(light.di' + 'r,\x20viewDir' + '),0.0,1.0)' + ';\x0d\x0a\x09medium' + 'p\x20float\x20lh' + '\x20=\x20clamp(d' + 'ot(light.d' + 'ir,\x20-halfD' + 'ir),0.0,1.' + '0);\x0d\x0a\x0d\x0a\x09//' + '\x20Diffuse\x20t' + 'erm\x0d\x0a\x09medi' + 'ump\x20float\x20' + 'diffuseTer' + 'm\x20=\x20disney' + 'Diffuse(nv' + ',\x20nl,\x20lh,\x20' + 'perceptual' + 'Roughness)' + '\x20*\x20nl;\x0d\x0a\x0d\x0a' + '\x09//\x20Specul' + 'ar\x20term\x0d\x0a\x20' + '\x20\x20\x20//\x20HACK' + ':\x20theoreti') + ('cally\x20we\x20s' + 'hould\x20divi' + 'de\x20diffuse' + 'Term\x20by\x20Pi' + '\x20and\x20not\x20m' + 'ultiply\x20sp' + 'ecularTerm' + '!\x0d\x0a\x20\x20\x20\x20//\x20' + 'BUT\x20that\x20w' + 'ill\x20make\x20s' + 'hader\x20look' + '\x20significa' + 'ntly\x20darke' + 'r\x20than\x20Leg' + 'acy\x20ones\x0d\x0a' + '\x0d\x0a\x09//\x20GGX\x20' + 'with\x20rough' + 'tness\x20to\x200' + '\x20would\x20mea' + 'n\x20no\x20specu' + 'lar\x20at\x20all' + ',\x20using\x20ma' + 'x(roughnes' + 's,\x200.002)\x20' + 'here\x20to\x20ma' + 'tch\x20HDrend' + 'erloop\x20rou' + 'ghtness\x20re' + 'mapping.\x0d\x0a' + '\x09roughness' + '\x20=\x20max(rou' + 'ghness,\x200.' + '002);\x0d\x0a\x09fl' + 'oat\x20V\x20=\x20sm' + 'ithJointGG' + 'XVisibilit' + 'yTerm(nl,\x20' + 'nv,\x20roughn' + 'ess);\x0d\x0a\x09fl' + 'oat\x20D\x20=\x20gg' + 'xTerm(nh,\x20' + 'roughness)' + ';\x0d\x0a\x0d\x0a\x09floa' + 't\x20specular' + 'Term\x20=\x20V\x20*' + '\x20D\x20*\x20PI;\x20/' + '/\x20Torrance' + '-Sparrow\x20m' + 'odel,\x20Fres' + 'nel\x20is\x20app' + 'lied\x20later' + '\x0d\x0a\x0d\x0a\x09//#if' + 'def\x20LAYA_C' + 'OLORSPACE_' + 'GAMMA\x0d\x0a\x09sp' + 'ecularTerm' + '\x20=\x20sqrt(ma' + 'x(1e-4,\x20sp' + 'ecularTerm' + '));\x0d\x0a\x09//#e' + 'ndif\x0d\x0a\x09spe' + 'cularTerm\x20' + '=\x20max(0.0,' + '\x20specularT' + 'erm\x20*\x20nl);' + '\x0d\x0a\x09\x09\x0d\x0a\x09med' + 'iump\x20vec3\x20' + 'color\x20=\x20di' + 'ffColor\x20*\x20' + 'light.colo' + 'r\x20*\x20diffus' + 'eTerm\x20+\x20sp' + 'ecularTerm' + '\x20*\x20light.c' + 'olor\x20*\x20fre' + 'snelTerm(s' + 'pecColor,\x20' + 'lh);\x0d\x0a\x09ret' + 'urn\x20vec4(c' + 'olor,\x201.0)' + ';\x0d\x0a}\x0d\x0a\x0d\x0ave' + 'c4\x20layaBRD' + 'FHighGI(me' + 'diump\x20vec3' + '\x20diffColor' + ',mediump\x20v' + 'ec3\x20specCo' + 'lor,medium' + 'p\x20float\x20on' + 'eMinusRefl' + 'ectivity,f' + 'loat\x20smoot' + 'hness\x20,flo' + 'at\x20percept' + 'ualRoughne' + 'ss,float\x20r' + 'oughness,m' + 'ediump\x20flo' + 'at\x20nv,vec3' + '\x20normal,\x20v') + ('ec3\x20viewDi' + 'r,LayaGI\x20g' + 'i)\x0d\x0a{\x0d\x0a\x09//' + '\x20surfaceRe' + 'duction\x20=\x20' + 'Int\x20D(Ndot' + 'H)\x20*\x20NdotH' + '\x20*\x20Id(Ndot' + 'L>0)\x20dH\x20=\x20' + '1/(roughne' + 'ss^2+1)\x0d\x0a\x09' + 'float\x20surf' + 'aceReducti' + 'on;\x0d\x0a\x09surf' + 'aceReducti' + 'on\x20=\x201.0\x20-' + '\x200.28*roug' + 'hness*perc' + 'eptualRoug' + 'hness;//\x201' + '-0.28*x^3\x20' + 'as\x20approxi' + 'mation\x20for' + '\x20(1/(x^4+1' + '))^(1/2.2)' + '\x20on\x20the\x20do' + 'main\x20[0;1]' + '\x0d\x0a\x09float\x20g' + 'razingTerm' + '\x20=\x20clamp(s' + 'moothness\x20' + '+\x20(1.0\x20-\x20o' + 'neMinusRef' + 'lectivity)' + ',0.0,1.0);' + '\x0d\x0a\x09mediump' + '\x20vec3\x20colo' + 'r\x20=diffCol' + 'or\x20*\x20gi.di' + 'ffuse\x20+\x20su' + 'rfaceReduc' + 'tion\x20*\x20gi.' + 'specular\x20*' + '\x20fresnelLe' + 'rp(specCol' + 'or,vec3(gr' + 'azingTerm)' + ',\x20nv);\x0d\x0a\x09r' + 'eturn\x20vec4' + '(color,1.0' + ');\x0d\x0a}\x0d\x0a//\x20' + 'BRDF1-----' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '\x0d\x0a\x0d\x0a\x0d\x0a//\x20B' + 'RDF2------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '---------\x0d' + '\x0a//\x20Based\x20' + 'on\x20Minimal' + 'ist\x20CookTo' + 'rrance\x20BRD' + 'F\x0d\x0a//\x20Impl' + 'ementation' + '\x20is\x20slight' + 'ly\x20differe' + 'nt\x20from\x20or' + 'iginal\x20der' + 'ivation:\x20h' + 'ttp://www.' + 'thetenthpl' + 'anet.de/ar' + 'chives/255' + '\x0d\x0a//\x0d\x0a//\x20*' + 'NDF\x20[Modif' + 'ied]\x20GGX:\x0d' + '\x0a//\x20*Modif' + 'ied\x20Keleme' + 'n\x20and\x20Szir' + 'may-​Kalos' + '\x20for\x20Visib' + 'ility\x20term' + '\x0d\x0a//\x20*Fres' + 'nel\x20approx' + 'imated\x20wit' + 'h\x201/LdotH\x0d' + '\x0amediump\x20v' + 'ec4\x20layaBR') + ('DFLowLight' + '\x20(mediump\x20' + 'vec3\x20diffC' + 'olor,\x20medi' + 'ump\x20vec3\x20s' + 'pecColor,m' + 'ediump\x20flo' + 'at\x20oneMinu' + 'sReflectiv' + 'ity,float\x20' + 'perceptual' + 'Roughness,' + 'float\x20roug' + 'hness,medi' + 'ump\x20float\x20' + 'nv,vec3\x20no' + 'rmal,vec3\x20' + 'viewDir,La' + 'yaLight\x20li' + 'ght)\x0d\x0a{\x0d\x0a\x20' + '\x20\x20\x20vec3\x20ha' + 'lfDir\x20=\x20sa' + 'feNormaliz' + 'e\x20(viewDir' + '-light.dir' + ');\x0d\x0a\x20\x20\x20\x20me' + 'diump\x20floa' + 't\x20nl\x20=\x20cla' + 'mp(dot(nor' + 'mal,\x20-ligh' + 't.dir),0.0' + ',1.0);\x0d\x0a\x20\x20' + '\x20\x20float\x20nh' + '\x20=\x20clamp(d' + 'ot(normal,' + '\x20halfDir),' + '0.0,1.0);\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20lh\x20=\x20clam' + 'p(dot(-lig' + 'ht.dir,\x20ha' + 'lfDir),0.0' + ',1.0);\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20//\x20GGX' + '\x20Distribut' + 'ion\x20multip' + 'lied\x20by\x20co' + 'mbined\x20app' + 'roximation' + '\x20of\x20Visibi' + 'lity\x20and\x20F' + 'resnel\x0d\x0a\x20\x20' + '\x20\x20//\x20See\x20\x22' + 'Optimizing' + '\x20PBR\x20for\x20M' + 'obile\x22\x20fro' + 'm\x20Siggraph' + '\x202015\x20movi' + 'ng\x20mobile\x20' + 'graphics\x20c' + 'ourse\x0d\x0a\x20\x20\x20' + '\x20//\x20https:' + '//communit' + 'y.arm.com/' + 'events/115' + '5\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20float' + '\x20a\x20=\x20rough' + 'ness;\x0d\x0a\x20\x20\x20' + '\x20float\x20a2\x20' + '=\x20a*a;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20float\x20' + 'd\x20=\x20nh\x20*\x20n' + 'h\x20*\x20(a2\x20-\x20' + '1.0)\x20+\x201.0' + '0001;\x0d\x0a\x09//' + '\x20#ifdef\x20LA' + 'YA_COLORSP' + 'ACE_GAMMA\x0d' + '\x0a\x09\x09//\x20Tigh' + 'ter\x20approx' + 'imation\x20fo' + 'r\x20Gamma\x20on' + 'ly\x20renderi' + 'ng\x20mode!\x0d\x0a' + '\x09\x09//\x20DVF\x20=' + '\x20sqrt(DVF)' + ';\x0d\x0a\x09\x09//\x20DV' + 'F\x20=\x20(a\x20*\x20s' + 'qrt(.25))\x20' + '/\x20(max(sqr' + 't(0.1),\x20lh' + ')*sqrt(rou' + 'ghness\x20+\x20.' + '5)\x20*\x20d);\x0d\x0a' + '\x09\x09float\x20sp' + 'ecularTerm' + '\x20=\x20a\x20/\x20(ma' + 'x(0.32,\x20lh' + ')\x20*\x20(1.5\x20+') + ('\x20roughness' + ')\x20*\x20d);\x0d\x0a\x09' + '//\x20#else\x0d\x0a' + '\x09//\x20\x09float' + '\x20specularT' + 'erm\x20=\x20a2\x20/' + '\x20(max(0.1f' + ',\x20lh*lh)\x20*' + '\x20(roughnes' + 's\x20+\x200.5f)\x20' + '*\x20(d\x20*\x20d)\x20' + '*\x204);\x0d\x0a\x09//' + '\x20#endif\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20//\x20on' + '\x20mobiles\x20(' + 'where\x20half' + '\x20actually\x20' + 'means\x20some' + 'thing)\x20den' + 'ominator\x20h' + 'ave\x20risk\x20o' + 'f\x20overflow' + '\x0d\x0a\x20\x20\x20\x20//\x20c' + 'lamp\x20below' + '\x20was\x20added' + '\x20specifica' + 'lly\x20to\x20\x22fi' + 'x\x22\x20that,\x20b' + 'ut\x20dx\x20comp' + 'iler\x20(we\x20c' + 'onvert\x20byt' + 'ecode\x20to\x20m' + 'etal/gles)' + '\x0d\x0a\x20\x20\x20\x20//\x20s' + 'ees\x20that\x20s' + 'pecularTer' + 'm\x20have\x20onl' + 'y\x20non-nega' + 'tive\x20terms' + ',\x20so\x20it\x20sk' + 'ips\x20max(0,' + '..)\x20in\x20cla' + 'mp\x20(leavin' + 'g\x20only\x20min' + '(100,...))' + '\x0d\x0a\x0d\x0a\x09//#if' + '\x20defined\x20(' + 'SHADER_API' + '_MOBILE)\x0d\x0a' + '\x20\x20\x20\x20specul' + 'arTerm\x20=\x20s' + 'pecularTer' + 'm\x20-\x201e-4;\x0d' + '\x0a\x09//#endif' + '\x0d\x0a\x0d\x0a\x09//\x20#e' + 'lse\x0d\x0a\x09\x09//\x20' + '//\x20Legacy\x0d' + '\x0a\x09\x09//\x20half' + '\x20specularP' + 'ower\x20=\x20Per' + 'ceptualRou' + 'ghnessToSp' + 'ecPower(pe' + 'rceptualRo' + 'ughness);\x0d' + '\x0a\x09\x09//\x20//\x20M' + 'odified\x20wi' + 'th\x20approxi' + 'mate\x20Visib' + 'ility\x20func' + 'tion\x20that\x20' + 'takes\x20roug' + 'hness\x20into' + '\x20account\x0d\x0a' + '\x09\x09//\x20//\x20Or' + 'iginal\x20((n' + '+1)*N.H^n)' + '\x20/\x20(8*Pi\x20*' + '\x20L.H^3)\x20di' + 'dn\x27t\x20take\x20' + 'into\x20accou' + 'nt\x20roughne' + 'ss\x0d\x0a\x09\x09//\x20/' + '/\x20and\x20prod' + 'uced\x20extre' + 'mely\x20brigh' + 't\x20specular' + '\x20at\x20grazin' + 'g\x20angles\x0d\x0a' + '\x0d\x0a\x09\x09//\x20hal' + 'f\x20invV\x20=\x20l' + 'h\x20*\x20lh\x20*\x20s' + 'moothness\x20' + '+\x20perceptu' + 'alRoughnes' + 's\x20*\x20percep' + 'tualRoughn' + 'ess;\x20//\x20ap' + 'prox\x20Modif' + 'iedKelemen') + ('Visibility' + 'Term(lh,\x20p' + 'erceptualR' + 'oughness);' + '\x0d\x0a\x09\x09//\x20hal' + 'f\x20invF\x20=\x20l' + 'h;\x0d\x0a\x0d\x0a\x09\x09//' + '\x20half\x20spec' + 'ularTerm\x20=' + '\x20((specula' + 'rPower\x20+\x201' + ')\x20*\x20pow\x20(n' + 'h,\x20specula' + 'rPower))\x20/' + '\x20(8\x20*\x20invV' + '\x20*\x20invF\x20+\x20' + '1e-4h);\x0d\x0a\x0d' + '\x0a\x09\x09//\x20#ifd' + 'ef\x20LAYA_CO' + 'LORSPACE_G' + 'AMMA\x0d\x0a\x09\x09//' + '\x20\x09specular' + 'Term\x20=\x20sqr' + 't(max(1e-4' + 'f,\x20specula' + 'rTerm));\x0d\x0a' + '\x09\x09//\x20#endi' + 'f\x0d\x0a\x09//\x20#en' + 'dif\x0d\x0a\x0d\x0a\x09//' + '\x20#if\x20defin' + 'ed\x20(SHADER' + '_API_MOBIL' + 'E)\x0d\x0a\x09\x09spec' + 'ularTerm\x20=' + '\x20clamp(spe' + 'cularTerm,' + '\x200.0,\x20100.' + '0);\x20//\x20Pre' + 'vent\x20FP16\x20' + 'overflow\x20o' + 'n\x20mobiles\x0d' + '\x0a\x09//\x20#endi' + 'f\x0d\x0a\x20\x20\x20\x20\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec3\x20colo' + 'r\x20=\x20(diffC' + 'olor\x20+\x20spe' + 'cularTerm\x20' + '*\x20specColo' + 'r)\x20*\x20light' + '.color\x20*\x20n' + 'l;\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 'return\x20vec' + '4(color,\x201' + '.0);\x0d\x0a}\x0d\x0a\x0d' + '\x0amediump\x20v' + 'ec4\x20layaBR' + 'DFLowGI\x20(m' + 'ediump\x20vec' + '3\x20diffColo' + 'r,\x20mediump' + '\x20vec3\x20spec' + 'Color,medi' + 'ump\x20float\x20' + 'oneMinusRe' + 'flectivity' + ',mediump\x20f' + 'loat\x20smoot' + 'hness,floa' + 't\x20perceptu' + 'alRoughnes' + 's,float\x20ro' + 'ughness,me' + 'diump\x20floa' + 't\x20nv,vec3\x20' + 'normal,vec' + '3\x20viewDir,' + 'LayaGI\x20gi)' + '\x0d\x0a{\x0d\x0a\x09//\x20s' + 'urfaceRedu' + 'ction\x20=\x20In' + 't\x20D(NdotH)' + '\x20*\x20NdotH\x20*' + '\x20Id(NdotL>' + '0)\x20dH\x20=\x201/' + '(realRough' + 'ness^2+1)\x0d' + '\x0a\x0d\x0a\x20\x20\x20\x20//\x20' + '1-0.28*x^3' + '\x20as\x20approx' + 'imation\x20fo' + 'r\x20(1/(x^4+' + '1))^(1/2.2' + ')\x20on\x20the\x20d' + 'omain\x20[0;1' + ']\x0d\x0a\x20\x20\x20\x20//\x20' + '1-x^3*(0.6' + '-0.08*x)\x20\x20' + '\x20approxima' + 'tion\x20for\x201') + ('/(x^4+1)\x0d\x0a' + '\x09//\x20#ifdef' + '\x20LAYA_COLO' + 'RSPACE_GAM' + 'MA\x0d\x0a\x09\x09medi' + 'ump\x20float\x20' + 'surfaceRed' + 'uction\x20=\x200' + '.28;\x0d\x0a\x09//\x20' + '#else\x0d\x0a\x09\x09/' + '/\x20mediump\x20' + 'float\x20surf' + 'aceReducti' + 'on\x20=\x20(0.6-' + '0.08*perce' + 'ptualRough' + 'ness);\x0d\x0a\x09/' + '/\x20#endif\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20surf' + 'aceReducti' + 'on\x20=\x201.0\x20-' + '\x20roughness' + '*perceptua' + 'lRoughness' + '*surfaceRe' + 'duction;\x0d\x0a' + '\x0d\x0a\x09mediump' + '\x20float\x20gra' + 'zingTerm\x20=' + '\x20clamp(smo' + 'othness\x20+\x20' + '(1.0-oneMi' + 'nusReflect' + 'ivity),0.0' + ',1.0);\x0d\x0a\x09m' + 'ediump\x20vec' + '3\x20color\x20=g' + 'i.diffuse\x20' + '*\x20diffColo' + 'r+\x20surface' + 'Reduction\x20' + '*\x20gi.specu' + 'lar\x20*\x20fres' + 'nelLerpFas' + 't\x20(specCol' + 'or,\x20vec3(g' + 'razingTerm' + '),\x20nv);\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20vec4(col' + 'or,\x201.0);\x0d' + '\x0a}\x0d\x0a//\x20BRD' + 'F2--------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '----------' + '-------'), _0x52898f = 'struct\x20Fra' + 'gmentCommo' + 'nData{\x0d\x0a\x09v' + 'ec3\x20diffCo' + 'lor;\x0d\x0a\x09vec' + '3\x20specColo' + 'r;\x0d\x0a\x09float' + '\x20oneMinusR' + 'eflectivit' + 'y;\x0d\x0a\x09float' + '\x20smoothnes' + 's;\x0d\x0a\x09//vec' + '3\x20eyeVec;T' + 'ODO:maybe\x20' + 'can\x20remove' + '\x0d\x0a\x09//float' + '\x20alpha;\x0d\x0a\x09' + '//vec3\x20ref' + 'lUVW;\x0d\x0a};\x0d' + '\x0a\x0d\x0a#ifndef' + '\x20SETUP_BRD' + 'F_INPUT\x0d\x0a\x20' + '\x20\x20\x20#define' + '\x20SETUP_BRD' + 'F_INPUT\x20me' + 'tallicSetu' + 'p//default' + '\x20is\x20metall' + 'icSetup,al' + 'so\x20can\x20be\x20' + 'other.\x20\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0ac' + 'onst\x20mediu' + 'mp\x20vec4\x20di' + 'electricSp' + 'ecularColo' + 'r\x20=\x20vec4(0' + '.220916301' + ',\x200.220916' + '301,\x200.220' + '916301,\x201.' + '0\x20-\x200.2209' + '16301);\x0d\x0a\x0d' + '\x0amediump\x20v' + 'ec3\x20diffus' + 'eAndSpecul' + 'arFromMeta' + 'llic(mediu' + 'mp\x20vec3\x20al' + 'bedo,mediu' + 'mp\x20float\x20m' + 'etallic,\x20o' + 'ut\x20mediump' + '\x20vec3\x20spec' + 'Color,\x20out' + '\x20mediump\x20f' + 'loat\x20oneMi' + 'nusReflect' + 'ivity)\x0d\x0a{\x0d' + '\x0a\x09specColo' + 'r\x20=\x20mix(di' + 'electricSp' + 'ecularColo' + 'r.rgb,\x20alb' + 'edo,\x20metal' + 'lic);\x0d\x0a\x09on' + 'eMinusRefl' + 'ectivity=\x20' + 'dielectric' + 'SpecularCo' + 'lor.a*(1.0' + '-metallic)' + ';//diffuse' + '\x20proportio' + 'n\x0d\x0a\x09return' + '\x20albedo\x20*\x20' + 'oneMinusRe' + 'flectivity' + ';\x0d\x0a}\x0d\x0a\x0d\x0ame' + 'diump\x20floa' + 't\x20specular' + 'Strength(m' + 'ediump\x20vec' + '3\x20specular' + ')\x0d\x0a{\x0d\x0a\x20\x20\x20\x20' + 'return\x20max' + '\x20(max\x20(spe' + 'cular.r,\x20s' + 'pecular.g)' + ',\x20specular' + '.b);\x0d\x0a}\x0d\x0a\x0d' + '\x0a//\x20Diffus' + 'e/Spec\x20Ene' + 'rgy\x20conser' + 'vation\x0d\x0ame' + 'diump\x20vec3' + '\x20energyCon' + 'servationB' + 'etweenDiff' + 'useAndSpec' + ('ular\x20(medi' + 'ump\x20vec3\x20a' + 'lbedo,\x20med' + 'iump\x20vec3\x20' + 'specColor,' + '\x20out\x20mediu' + 'mp\x20float\x20o' + 'neMinusRef' + 'lectivity)' + '\x0d\x0a{\x0d\x0a\x09oneM' + 'inusReflec' + 'tivity\x20=\x201' + '.0\x20-\x20specu' + 'larStrengt' + 'h(specColo' + 'r);\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20albe' + 'do\x20*\x20(vec3' + '(1.0)\x20-\x20sp' + 'ecColor);\x0d' + '\x0a}\x0d\x0a\x0d\x0a#ifd' + 'ef\x20TRANSPA' + 'RENTBLEND\x0d' + '\x0a\x09mediump\x20' + 'vec3\x20preMu' + 'ltiplyAlph' + 'a\x20(mediump' + '\x20vec3\x20diff' + 'Color,\x20med' + 'iump\x20float' + '\x20alpha,\x20me' + 'diump\x20floa' + 't\x20oneMinus' + 'Reflectivi' + 'ty,out\x20med' + 'iump\x20float' + '\x20modifiedA' + 'lpha)\x0d\x0a\x09{\x0d' + '\x0a\x09\x09//\x20Tran' + 'sparency\x20\x27' + 'removes\x27\x20f' + 'rom\x20Diffus' + 'e\x20componen' + 't\x0d\x0a\x09\x09diffC' + 'olor\x20*=\x20al' + 'pha;\x0d\x0a\x09\x09//' + '\x20Reflectiv' + 'ity\x20\x27remov' + 'es\x27\x20from\x20t' + 'he\x20rest\x20of' + '\x20component' + 's,\x20includi' + 'ng\x20Transpa' + 'rency\x0d\x0a\x09\x09/' + '/\x20modified' + 'Alpha\x20=\x201.' + '0-(1.0-alp' + 'ha)*(1.0-r' + 'eflectivit' + 'y)\x20=\x201.0-(' + 'oneMinusRe' + 'flectivity' + '\x20-\x20alpha*o' + 'neMinusRef' + 'lectivity)' + '\x20=\x201.0-one' + 'MinusRefle' + 'ctivity\x20+\x20' + 'alpha*oneM' + 'inusReflec' + 'tivity\x0d\x0a\x09\x09' + 'modifiedAl' + 'pha\x20=\x201.0\x20' + '-\x20oneMinus' + 'Reflectivi' + 'ty\x20+\x20alpha' + '*oneMinusR' + 'eflectivit' + 'y;\x0d\x0a\x09\x09retu' + 'rn\x20diffCol' + 'or;\x0d\x0a\x09}\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0aF' + 'ragmentCom' + 'monData\x20me' + 'tallicSetu' + 'p(vec2\x20uv)' + '\x0d\x0a{\x0d\x0a\x09medi' + 'ump\x20vec2\x20m' + 'etallicGlo' + 'ss\x20=\x20getMe' + 'tallicGlos' + 's(uv);\x0d\x0a\x09m' + 'ediump\x20flo' + 'at\x20metalli' + 'c\x20=\x20metall' + 'icGloss.x;' + '\x0d\x0a\x09mediump' + '\x20float\x20smo' + 'othness\x20=\x20' + 'metallicGl') + ('oss.y;\x20//\x20' + 'this\x20is\x201\x20' + 'minus\x20the\x20' + 'square\x20roo' + 't\x20of\x20real\x20' + 'roughness\x20' + 'm.\x0d\x0a\x09mediu' + 'mp\x20float\x20o' + 'neMinusRef' + 'lectivity;' + '\x0d\x0a\x09mediump' + '\x20vec3\x20spec' + 'Color;\x0d\x0a\x09m' + 'ediump\x20vec' + '3\x20diffColo' + 'r\x20=\x20diffus' + 'eAndSpecul' + 'arFromMeta' + 'llic(albed' + 'o(uv),\x20met' + 'allic,/*ou' + 't*/specCol' + 'or,/*out*/' + 'oneMinusRe' + 'flectivity' + ');\x0d\x0a\x0d\x0a\x09Fra' + 'gmentCommo' + 'nData\x20o;\x0d\x0a' + '\x09o.diffCol' + 'or\x20=\x20diffC' + 'olor;\x0d\x0a\x09o.' + 'specColor\x20' + '=\x20specColo' + 'r;\x0d\x0a\x09o.one' + 'MinusRefle' + 'ctivity\x20=\x20' + 'oneMinusRe' + 'flectivity' + ';\x0d\x0a\x09o.smoo' + 'thness\x20=\x20s' + 'moothness;' + '\x0d\x0a\x09return\x20' + 'o;\x0d\x0a}\x0d\x0a\x0d\x0aF' + 'ragmentCom' + 'monData\x20sp' + 'ecularSetu' + 'p(vec2\x20uv)' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20specGlos' + 's\x20=\x20specul' + 'arGloss(uv' + ');\x0d\x0a\x20\x20\x20\x20me' + 'diump\x20vec3' + '\x20specColor' + '\x20=\x20specGlo' + 'ss.rgb;\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20float\x20smo' + 'othness\x20=\x20' + 'specGloss.' + 'a;\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20fl' + 'oat\x20oneMin' + 'usReflecti' + 'vity;\x0d\x0a\x20\x20\x20' + '\x20mediump\x20v' + 'ec3\x20diffCo' + 'lor\x20=\x20ener' + 'gyConserva' + 'tionBetwee' + 'nDiffuseAn' + 'dSpecular\x20' + '(albedo(uv' + '),\x20specCol' + 'or,\x20/*out*' + '/\x20oneMinus' + 'Reflectivi' + 'ty);\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20Fragment' + 'CommonData' + '\x20o;\x0d\x0a\x20\x20\x20\x20o' + '.diffColor' + '\x20=\x20diffCol' + 'or;\x0d\x0a\x20\x20\x20\x20o' + '.specColor' + '\x20=\x20specCol' + 'or;\x0d\x0a\x20\x20\x20\x20o' + '.oneMinusR' + 'eflectivit' + 'y\x20=\x20oneMin' + 'usReflecti' + 'vity;\x0d\x0a\x20\x20\x20' + '\x20o.smoothn' + 'ess\x20=\x20smoo' + 'thness;\x0d\x0a\x20' + '\x20\x20\x20return\x20' + 'o;\x0d\x0a}\x0d\x0a\x0d\x0aL' + 'ayaGI\x20frag' + 'mentGI(flo') + ('at\x20smoothn' + 'ess,vec3\x20e' + 'yeVec,medi' + 'ump\x20float\x20' + 'occlusion,' + 'mediump\x20ve' + 'c2\x20lightma' + 'pUV,vec3\x20w' + 'orldnormal' + ')\x0d\x0a{\x0d\x0a\x09Lay' + 'aGIInput\x20g' + 'iInput;\x0d\x0a\x09' + '#ifdef\x20LIG' + 'HTMAP\x0d\x0a\x09\x09g' + 'iInput.lig' + 'htmapUV=li' + 'ghtmapUV;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09vec3\x20wo' + 'rldViewDir' + '\x20=\x20-eyeVec' + ';\x0d\x0a\x09medium' + 'p\x20vec4\x20uvw' + 'Roughness;' + '\x0d\x0a\x09uvwRoug' + 'hness.rgb\x20' + '=\x20reflect(' + 'worldViewD' + 'ir,\x20worldn' + 'ormal);//r' + 'eflectUVW\x0d' + '\x0a\x09uvwRough' + 'ness.a=\x20sm' + 'oothnessTo' + 'Perceptual' + 'Roughness(' + 'smoothness' + ');//percep' + 'tualRoughn' + 'ess\x0d\x0a\x0d\x0a\x09re' + 'turn\x20layaG' + 'lobalIllum' + 'ination(gi' + 'Input,occl' + 'usion,\x20wor' + 'ldnormal,\x20' + 'uvwRoughne' + 'ss);\x0d\x0a}\x0d\x0a\x0d' + '\x0a\x0d\x0avec3\x20pe' + 'rPixelWorl' + 'dNormal(ve' + 'c2\x20uv,vec3' + '\x20normal,ve' + 'c3\x20binorma' + 'l,vec3\x20tan' + 'gent)\x0d\x0a{\x0d\x0a' + '\x09#ifdef\x20NO' + 'RMALTEXTUR' + 'E\x0d\x0a\x09\x09mediu' + 'mp\x20vec3\x20no' + 'rmalTangen' + 't=normalIn' + 'TangentSpa' + 'ce(uv);\x0d\x0a\x09' + '\x09vec3\x20norm' + 'alWorld\x20=\x20' + 'normalize(' + 'tangent\x20*\x20' + 'normalTang' + 'ent.x\x20+\x20bi' + 'normal\x20*\x20n' + 'ormalTange' + 'nt.y\x20+\x20nor' + 'mal\x20*\x20norm' + 'alTangent.' + 'z);\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09vec3\x20' + 'normalWorl' + 'd\x20=\x20normal' + 'ize(normal' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x09retur' + 'n\x20normalWo' + 'rld;\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20frag' + 'mentForwar' + 'd()\x0d\x0a{\x0d\x0a\x09v' + 'ec2\x20uv;\x0d\x0a\x09' + '#if\x20define' + 'd(ALBEDOTE' + 'XTURE)||de' + 'fined(META' + 'LLICGLOSST' + 'EXTURE)||d' + 'efined(NOR' + 'MALTEXTURE' + ')||defined' + '(EMISSIONT' + 'EXTURE)||d' + 'efined(OCC') + ('LUSIONTEXT' + 'URE)||defi' + 'ned(PARALL' + 'AXTEXTURE)' + '\x0d\x0a\x09\x09#ifdef' + '\x20PARALLAXT' + 'EXTURE\x0d\x0a\x09\x09' + '\x09uv\x20=\x20para' + 'llax(v_Tex' + 'coord0,nor' + 'malize(v_V' + 'iewDirForP' + 'arallax));' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09uv\x20=\x20v' + '_Texcoord0' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09mediu' + 'mp\x20float\x20a' + 'lpha\x20=\x20get' + 'Alpha(uv);' + '\x0d\x0a\x09#ifdef\x20' + 'ALPHATEST\x0d' + '\x0a\x09\x09if(alph' + 'a<u_AlphaT' + 'estValue)\x0d' + '\x0a\x09\x09\x09discar' + 'd;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09Frag' + 'mentCommon' + 'Data\x20o\x20=\x20S' + 'ETUP_BRDF_' + 'INPUT(uv);' + '\x0d\x0a\x09\x0d\x0a\x09vec3' + '\x20binormal;' + '\x0d\x0a\x09vec3\x20ta' + 'ngent;\x0d\x0a\x09#' + 'ifdef\x20NORM' + 'ALTEXTURE\x0d' + '\x0a\x09\x09tangent' + '\x20=\x20v_Tange' + 'nt;\x0d\x0a\x09\x09bin' + 'ormal\x20=\x20v_' + 'Binormal;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09vec3\x20no' + 'rmal\x20=\x20v_N' + 'ormal;\x0d\x0a\x09v' + 'ec3\x20normal' + 'World\x20=\x20pe' + 'rPixelWorl' + 'dNormal(uv' + ',normal,bi' + 'normal,tan' + 'gent);//In' + '\x20FS\x20if\x20the' + '\x20normal\x20us' + 'e\x20mediump\x20' + 'before\x20nor' + 'malize\x20wil' + 'l\x20cause\x20pr' + 'ecision\x20pr' + 'olem\x20in\x20mo' + 'bile\x20devic' + 'e.\x0d\x0a\x09vec3\x20' + 'eyeVec\x20=\x20n' + 'ormalize(v' + '_EyeVec);\x0d' + '\x0a\x09vec3\x20pos' + 'world\x20=\x20v_' + 'PositionWo' + 'rld;\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20TRAN' + 'SPARENTBLE' + 'ND\x0d\x0a\x09\x09o.di' + 'ffColor=pr' + 'eMultiplyA' + 'lpha(o.dif' + 'fColor,alp' + 'ha,o.oneMi' + 'nusReflect' + 'ivity,/*ou' + 't*/alpha);' + '//\x20shader\x20' + 'relies\x20on\x20' + 'pre-multip' + 'ly\x20alpha-b' + 'lend\x20(srcB' + 'lend\x20=\x20One' + ',\x20dstBlend' + '\x20=\x20OneMinu' + 'sSrcAlpha)' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09medium' + 'p\x20float\x20oc' + 'clusion\x20=\x20' + 'getOcclusi' + 'on(uv);\x0d\x0a\x09' + 'mediump\x20ve') + ('c2\x20lightMa' + 'pUV;\x0d\x0a\x09#if' + 'def\x20LIGHTM' + 'AP\x0d\x0a\x09\x09ligh' + 'tMapUV=v_L' + 'ightMapUV;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09float\x20pe' + 'rceptualRo' + 'ughness\x20=\x20' + 'smoothness' + 'ToPerceptu' + 'alRoughnes' + 's(o.smooth' + 'ness);\x0d\x0a\x09f' + 'loat\x20rough' + 'ness\x20=\x20per' + 'ceptualRou' + 'ghnessToRo' + 'ughness(pe' + 'rceptualRo' + 'ughness);\x0d' + '\x0a\x09float\x20nv' + '\x20=\x20abs(dot' + '(normalWor' + 'ld,\x20eyeVec' + '));\x0d\x0a\x09Laya' + 'GI\x20gi\x20=fra' + 'gmentGI(o.' + 'smoothness' + ',eyeVec,oc' + 'clusion,li' + 'ghtMapUV,n' + 'ormalWorld' + ');\x0d\x0a\x09vec4\x20' + 'color\x20=\x20LA' + 'YA_BRDF_GI' + '(o.diffCol' + 'or,o.specC' + 'olor,o.one' + 'MinusRefle' + 'ctivity,o.' + 'smoothness' + ',perceptua' + 'lRoughness' + ',roughness' + ',nv,normal' + 'World,eyeV' + 'ec,gi);\x0d\x0a\x09' + '\x0d\x0a\x09float\x20s' + 'hadowAtten' + 'uation\x20=\x201' + '.0;\x0d\x0a\x09#ifd' + 'ef\x20LEGACYS' + 'INGLELIGHT' + 'ING\x0d\x0a\x09\x09#if' + 'def\x20DIRECT' + 'IONLIGHT\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'CALCULATE_' + 'SHADOWS\x0d\x0a\x09' + '\x09\x09\x09#ifdef\x20' + 'SHADOW_CAS' + 'CADE\x0d\x0a\x09\x09\x09\x09' + '\x09vec4\x20shad' + 'owCoord\x20=\x20' + 'getShadowC' + 'oord(vec4(' + 'v_Position' + 'World,1.0)' + ');\x0d\x0a\x09\x09\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09\x09\x09' + 'vec4\x20shado' + 'wCoord\x20=\x20v' + '_ShadowCoo' + 'rd;\x0d\x0a\x09\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09\x09' + '\x09shadowAtt' + 'enuation=s' + 'ampleShado' + 'wmap(shado' + 'wCoord);\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09LayaLi' + 'ght\x20dirLig' + 'ht\x20=\x20layaD' + 'irectionLi' + 'ghtToLight' + '(u_Directi' + 'onLight,sh' + 'adowAttenu' + 'ation);\x0d\x0a\x09' + '\x09\x09color+=\x20' + 'LAYA_BRDF_' + 'LIGHT(o.di' + 'ffColor,o.' + 'specColor,' + 'o.oneMinus' + 'Reflectivi' + 'ty,percept') + ('ualRoughne' + 'ss,roughne' + 'ss,nv,norm' + 'alWorld,ey' + 'eVec,dirLi' + 'ght);\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09\x09#ifdef\x20P' + 'OINTLIGHT\x0d' + '\x0a\x09\x09\x09LayaLi' + 'ght\x20poiLig' + 'ht\x20=\x20layaP' + 'ointLightT' + 'oLight(pos' + 'world,norm' + 'alWorld,u_' + 'PointLight' + ',shadowAtt' + 'enuation);' + '\x0d\x0a\x09\x09\x09color' + '+=\x20LAYA_BR' + 'DF_LIGHT(o' + '.diffColor' + ',o.specCol' + 'or,o.oneMi' + 'nusReflect' + 'ivity,perc' + 'eptualRoug' + 'hness,roug' + 'hness,nv,n' + 'ormalWorld' + ',eyeVec,po' + 'iLight);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x0d\x0a\x09\x09#ifd' + 'ef\x20SPOTLIG' + 'HT\x0d\x0a\x09\x09\x20\x20\x20\x20' + 'LayaLight\x20' + 'spoLight\x20=' + '\x20layaSpotL' + 'ightToLigh' + 't(posworld' + ',normalWor' + 'ld,u_SpotL' + 'ight,shado' + 'wAttenuati' + 'on);\x0d\x0a\x09\x09\x09c' + 'olor+=\x20LAY' + 'A_BRDF_LIG' + 'HT(o.diffC' + 'olor,o.spe' + 'cColor,o.o' + 'neMinusRef' + 'lectivity,' + 'perceptual' + 'Roughness,' + 'roughness,' + 'nv,normalW' + 'orld,eyeVe' + 'c,spoLight' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#else' + '\x0d\x0a\x09\x20\x09#ifde' + 'f\x20DIRECTIO' + 'NLIGHT\x0d\x0a\x09\x09' + '\x09for\x20(int\x20' + 'i\x20=\x200;\x20i\x20<' + '\x20MAX_LIGHT' + '_COUNT;\x20i+' + '+)\x20\x0d\x0a\x09\x09\x09{\x0d' + '\x0a\x09\x09\x09\x09if(i\x20' + '>=\x20u_Dirat' + 'ionLightCo' + 'unt)\x0d\x0a\x09\x09\x09\x09' + '\x09break;\x0d\x0a\x09' + '\x09\x09\x09#ifdef\x20' + 'CALCULATE_' + 'SHADOWS\x0d\x0a\x09' + '\x09\x09\x09\x09if(i\x20=' + '=\x200)\x0d\x0a\x09\x09\x09\x09' + '\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09' + '#ifdef\x20SHA' + 'DOW_CASCAD' + 'E\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + 'vec4\x20shado' + 'wCoord\x20=\x20g' + 'etShadowCo' + 'ord(vec4(v' + '_PositionW' + 'orld,1.0))' + ';\x0d\x0a\x09\x09\x09\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + '\x09\x09\x09vec4\x20sh' + 'adowCoord\x20' + '=\x20v_Shadow' + 'Coord;\x0d\x0a\x09\x09' + '\x09\x09\x09\x09#endif' + '\x0d\x0a\x09\x09\x09\x09\x09\x09sh' + 'adowAttenu' + 'ation\x20*=\x20s') + ('ampleShado' + 'wmap(shado' + 'wCoord);\x0d\x0a' + '\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09\x09Direct' + 'ionLight\x20d' + 'irectionLi' + 'ght\x20=\x20getD' + 'irectionLi' + 'ght(u_Ligh' + 'tBuffer,i)' + ';\x0d\x0a\x09\x09\x09\x09Lay' + 'aLight\x20dir' + 'Light\x20=\x20la' + 'yaDirectio' + 'nLightToLi' + 'ght(direct' + 'ionLight,s' + 'hadowAtten' + 'uation);\x0d\x0a' + '\x09\x09\x09\x20\x09color' + '+=LAYA_BRD' + 'F_LIGHT(o.' + 'diffColor,' + 'o.specColo' + 'r,o.oneMin' + 'usReflecti' + 'vity,perce' + 'ptualRough' + 'ness,rough' + 'ness,nv,no' + 'rmalWorld,' + 'eyeVec,dir' + 'Light);\x0d\x0a\x09' + '\x09\x09}\x0d\x0a\x09\x20\x09#e' + 'ndif\x0d\x0a\x09\x09#i' + 'f\x20defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09\x09\x09ivec' + '4\x20clusterI' + 'nfo\x20=getCl' + 'usterInfo(' + 'u_LightClu' + 'sterBuffer' + ',u_View,u_' + 'Viewport,\x20' + 'v_Position' + 'World,gl_F' + 'ragCoord,u' + '_Projectio' + 'nParams);\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09\x09for' + '\x20(int\x20i\x20=\x20' + '0;\x20i\x20<\x20MAX' + '_LIGHT_COU' + 'NT;\x20i++)\x20\x0d' + '\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09' + '\x09\x09\x09if(i\x20>=' + '\x20clusterIn' + 'fo.x)//Poi' + 'ntLightCou' + 'nt\x0d\x0a\x09\x09\x09\x09\x09\x09' + 'break;\x0d\x0a\x09\x09' + '\x09\x09\x09PointLi' + 'ght\x20pointL' + 'ight\x20=\x20get' + 'PointLight' + '(u_LightBu' + 'ffer,u_Lig' + 'htClusterB' + 'uffer,clus' + 'terInfo,i)' + ';\x0d\x0a\x09\x09\x09\x09\x09La' + 'yaLight\x20po' + 'iLight\x20=\x20l' + 'ayaPointLi' + 'ghtToLight' + '(posworld,' + 'normalWorl' + 'd,pointLig' + 'ht,shadowA' + 'ttenuation' + ');\x0d\x0a\x09\x09\x09\x09\x09c' + 'olor+=\x20LAY' + 'A_BRDF_LIG' + 'HT(o.diffC' + 'olor,o.spe' + 'cColor,o.o' + 'neMinusRef' + 'lectivity,' + 'perceptual' + 'Roughness,' + 'roughness,' + 'nv,normalW' + 'orld,eyeVe') + ('c,poiLight' + ');\x0d\x0a\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09#endif' + '\x0d\x0a\x09\x09\x09#ifde' + 'f\x20SPOTLIGH' + 'T\x0d\x0a\x09\x09\x09\x09for' + '\x20(int\x20i\x20=\x20' + '0;\x20i\x20<\x20MAX' + '_LIGHT_COU' + 'NT;\x20i++)\x20\x0d' + '\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09' + '\x09\x09\x09if(i\x20>=' + '\x20clusterIn' + 'fo.y)//Spo' + 'tLightCoun' + 't\x0d\x0a\x09\x09\x09\x09\x09\x09b' + 'reak;\x0d\x0a\x09\x09\x09' + '\x09\x09SpotLigh' + 't\x20spotLigh' + 't\x20=\x20getSpo' + 'tLight(u_L' + 'ightBuffer' + ',u_LightCl' + 'usterBuffe' + 'r,clusterI' + 'nfo,i);\x0d\x0a\x09' + '\x09\x09\x09\x09LayaLi' + 'ght\x20spoLig' + 'ht\x20=\x20layaS' + 'potLightTo' + 'Light(posw' + 'orld,norma' + 'lWorld,spo' + 'tLight,sha' + 'dowAttenua' + 'tion);\x0d\x0a\x09\x09' + '\x09\x09\x09color+=' + '\x20LAYA_BRDF' + '_LIGHT(o.d' + 'iffColor,o' + '.specColor' + ',o.oneMinu' + 'sReflectiv' + 'ity,percep' + 'tualRoughn' + 'ess,roughn' + 'ess,nv,nor' + 'malWorld,e' + 'yeVec,spoL' + 'ight);\x0d\x0a\x09\x09' + '\x09\x09}\x0d\x0a\x09\x09\x09#e' + 'ndif\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09\x20#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20EMIS' + 'SION\x0d\x0a\x09\x09co' + 'lor.rgb\x20+=' + '\x20emission(' + 'uv);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09#i' + 'fdef\x20FOG\x0d\x0a' + '\x09\x09float\x20le' + 'rpFact=cla' + 'mp((1.0/gl' + '_FragCoord' + '.w-u_FogSt' + 'art)/u_Fog' + 'Range,0.0,' + '1.0);\x0d\x0a\x09\x09c' + 'olor.rgb=m' + 'ix(color.r' + 'gb,u_FogCo' + 'lor,lerpFa' + 'ct);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09\x0d\x0a\x09g' + 'l_FragColo' + 'r=vec4(col' + 'or.rgb,alp' + 'ha);\x0d\x0a}\x0d\x0a\x0d' + '\x0a\x0d\x0a'), _0x2e23cf = 'attribute\x20' + 'vec4\x20a_Pos' + 'ition;\x0d\x0a\x0d\x0a' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_M' + 'vpMatrix;\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_W' + 'orldMat;\x0d\x0a' + '#else\x0d\x0a\x09un' + 'iform\x20mat4' + '\x20u_MvpMatr' + 'ix;\x0d\x0a\x09unif' + 'orm\x20mat4\x20u' + '_WorldMat;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20B' + 'ONE\x0d\x0a\x09cons' + 't\x20int\x20c_Ma' + 'xBoneCount' + '\x20=\x2024;\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec4\x20a_Bone' + 'Indices;\x0d\x0a' + '\x09attribute' + '\x20vec4\x20a_Bo' + 'neWeights;' + '\x0d\x0a\x09uniform' + '\x20mat4\x20u_Bo' + 'nes[c_MaxB' + 'oneCount];' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0aattribut' + 'e\x20vec3\x20a_N' + 'ormal;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Normal;' + '\x20\x0d\x0a\x0d\x0a#if\x20d' + 'efined(NOR' + 'MALTEXTURE' + ')||defined' + '(PARALLAXT' + 'EXTURE)\x0d\x0a\x09' + 'attribute\x20' + 'vec4\x20a_Tan' + 'gent0;\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_Tangen' + 't;\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'Binormal;\x0d' + '\x0a\x20\x20\x20\x20#ifde' + 'f\x20PARALLAX' + 'TEXTURE\x0d\x0a\x09' + '\x20\x20\x20\x20varyin' + 'g\x20vec3\x20v_V' + 'iewDirForP' + 'arallax;\x0d\x0a' + '\x20\x20\x20\x20#endif' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(ALBEDO' + 'TEXTURE)||' + 'defined(ME' + 'TALLICGLOS' + 'STEXTURE)|' + '|defined(N' + 'ORMALTEXTU' + 'RE)||defin' + 'ed(EMISSIO' + 'NTEXTURE)|' + '|defined(O' + 'CCLUSIONTE' + 'XTURE)||de' + 'fined(PARA' + 'LLAXTEXTUR' + 'E)||(defin' + 'ed(LIGHTMA' + 'P)&&define' + 'd(UV))\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec2\x20a_Texc' + 'oord0;\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(LI' + 'GHTMAP)&&d' + 'efined(UV1' + ')\x0d\x0a\x09attrib' + 'ute\x20vec2\x20a' + '_Texcoord1' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'LIGHTMAP\x0d\x0a' + '\x09uniform\x20v' + 'ec4\x20u_Ligh' + ('tmapScaleO' + 'ffset;\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_LightM' + 'apUV;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0auni' + 'form\x20vec3\x20' + 'u_CameraPo' + 's;\x0d\x0avaryin' + 'g\x20vec3\x20v_E' + 'yeVec;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Positio' + 'nWorld;\x0d\x0av' + 'arying\x20flo' + 'at\x20v_posVi' + 'ewZ;\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'CALCULATE_' + 'SHADOWS)&&' + '!defined(S' + 'HADOW_CASC' + 'ADE)\x0d\x0a\x09var' + 'ying\x20vec4\x20' + 'v_ShadowCo' + 'ord;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20TILINGO' + 'FFSET\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_TilingO' + 'ffset;\x0d\x0a#e' + 'ndif'), _0x35d9bf = '#ifdef\x20ALP' + 'HATEST\x0d\x0a\x09u' + 'niform\x20flo' + 'at\x20u_Alpha' + 'TestValue;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0auniform\x20' + 'vec4\x20u_Alb' + 'edoColor;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'NORMALTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Norm' + 'alTexture;' + '\x0d\x0a\x09uniform' + '\x20float\x20u_N' + 'ormalScale' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'ALBEDOTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Albe' + 'doTexture;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20M' + 'ETALLICGLO' + 'SSTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_Metallic' + 'GlossTextu' + 're;\x0d\x0a#endi' + 'f\x0d\x0auniform' + '\x20float\x20u_M' + 'etallic;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'PECULARGLO' + 'SSTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_SpecGlos' + 'sTexture;\x0d' + '\x0a#endif\x0d\x0au' + 'niform\x20vec' + '3\x20u_Specul' + 'arColor;\x0d\x0a' + '\x0d\x0auniform\x20' + 'float\x20u_Sm' + 'oothness;\x0d' + '\x0auniform\x20f' + 'loat\x20u_Smo' + 'othnessSca' + 'le;\x0d\x0a\x0d\x0a#if' + 'def\x20PARALL' + 'AXTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_Parallax' + 'Texture;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Par' + 'allaxScale' + ';\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_V' + 'iewDirForP' + 'arallax;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20OCC' + 'LUSIONTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Occl' + 'usionTextu' + 're;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_occlusio' + 'nStrength;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20E' + 'MISSION\x20\x0d\x0a' + '\x09#ifdef\x20EM' + 'ISSIONTEXT' + 'URE\x0d\x0a\x09\x09uni' + 'form\x20sampl' + 'er2D\x20u_Emi' + 'ssionTextu' + 're;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'EmissionCo' + 'lor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(AL' + 'BEDOTEXTUR' + 'E)||define' + 'd(METALLIC' + 'GLOSSTEXTU' + 'RE)||defin' + ('ed(NORMALT' + 'EXTURE)||d' + 'efined(EMI' + 'SSIONTEXTU' + 'RE)||defin' + 'ed(OCCLUSI' + 'ONTEXTURE)' + '||defined(' + 'PARALLAXTE' + 'XTURE)\x0d\x0a\x09v' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20LIGHTMA' + 'P\x0d\x0a\x09varyin' + 'g\x20vec2\x20v_L' + 'ightMapUV;' + '\x0d\x0a\x09uniform' + '\x20sampler2D' + '\x20u_LightMa' + 'p;\x0d\x0a\x09#ifde' + 'f\x20LIGHTMAP' + '_DIRECTION' + 'AL\x0d\x0a\x09\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tMapDirect' + 'ion;\x0d\x0a\x09#en' + 'dif\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Normal;\x20\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '\x0d\x0a\x09#ifdef\x20' + 'LEGACYSING' + 'LELIGHTING' + '\x0d\x0a\x09\x09#ifdef' + '\x20DIRECTION' + 'LIGHT\x0d\x0a\x09\x09\x09' + 'uniform\x20Di' + 'rectionLig' + 'ht\x20u_Direc' + 'tionLight;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09unif' + 'orm\x20PointL' + 'ight\x20u_Poi' + 'ntLight;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09uniform' + '\x20SpotLight' + '\x20u_SpotLig' + 'ht;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09unifo' + 'rm\x20mat4\x20u_' + 'View;\x0d\x0a\x09\x09u' + 'niform\x20vec' + '4\x20u_Projec' + 'tionParams' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20vec4\x20u_' + 'Viewport;\x0d' + '\x0a\x09\x09uniform' + '\x20int\x20u_Dir' + 'ationLight' + 'Count;\x0d\x0a\x09\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'LightBuffe' + 'r;\x0d\x0a\x09\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tClusterBu' + 'ffer;\x0d\x0a\x09#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avary' + 'ing\x20vec3\x20v' + '_EyeVec;\x0d\x0a' + '\x0d\x0a#ifdef\x20N' + 'ORMALTEXTU' + 'RE\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'Tangent;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Bino' + 'rmal;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + 'def\x20FOG\x0d\x0a\x09') + ('uniform\x20fl' + 'oat\x20u_FogS' + 'tart;\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogRan' + 'ge;\x0d\x0a\x09unif' + 'orm\x20vec3\x20u' + '_FogColor;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a\x0d\x0a//后面考虑' + '宏TODO\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Position' + 'World;\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(CALCULAT' + 'E_SHADOWS)' + '&&!defined' + '(SHADOW_CA' + 'SCADE)\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_Shadow' + 'Coord;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a\x0d\x0a' + 'mediump\x20fl' + 'oat\x20lerpOn' + 'eTo(medium' + 'p\x20float\x20b,' + '\x20mediump\x20f' + 'loat\x20t)\x0d\x0a{' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20float\x20' + 'oneMinusT\x20' + '=\x201.0\x20-\x20t;' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20oneMinu' + 'sT\x20+\x20b\x20*\x20t' + ';\x0d\x0a}\x0d\x0a\x0d\x0a#i' + 'fdef\x20EMISS' + 'ION\x20\x0d\x0a\x09vec' + '3\x20emission' + '(vec2\x20uv)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09#if' + 'def\x20EMISSI' + 'ONTEXTURE\x0d' + '\x0a\x09\x09\x09return' + '\x20texture2D' + '(u_Emissio' + 'nTexture,\x20' + 'uv).rgb\x20*\x20' + 'u_Emission' + 'Color.rgb;' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09return' + '\x20u_Emissio' + 'nColor.rgb' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09}\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0amed' + 'iump\x20float' + '\x20getAlpha(' + 'vec2\x20uv)\x0d\x0a' + '{\x0d\x0a\x09#ifdef' + '\x20SMOOTHNES' + 'SSOURCE_AL' + 'BEDOTEXTUR' + 'E_ALPHA\x0d\x0a\x09' + '\x09return\x20u_' + 'AlbedoColo' + 'r.a;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09#ifd' + 'ef\x20ALBEDOT' + 'EXTURE\x0d\x0a\x09\x09' + '\x09return\x20te' + 'xture2D(u_' + 'AlbedoText' + 'ure,\x20uv).a' + '\x20*\x20u_Albed' + 'oColor.a;\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09return\x20' + 'u_AlbedoCo' + 'lor.a;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a}\x0d\x0a' + '\x0d\x0amediump\x20' + 'float\x20getO' + 'cclusion(v' + 'ec2\x20uv)\x0d\x0a{' + '\x0d\x0a\x09#ifdef\x20' + 'OCCLUSIONT' + 'EXTURE\x0d\x0a\x09\x09' + 'mediump\x20fl' + 'oat\x20occ\x20=\x20' + 'texture2D(' + 'u_Occlusio' + 'nTexture,\x20' + 'uv).g;\x0d\x0a\x09\x09' + 'return\x20ler' + 'pOneTo(occ') + (',\x20u_occlus' + 'ionStrengt' + 'h);\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09retur' + 'n\x201.0;\x0d\x0a\x09#' + 'endif\x0d\x0a}\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec3\x20albed' + 'o(vec2\x20uv)' + '\x0d\x0a{\x0d\x0a\x09#ifd' + 'ef\x20ALBEDOT' + 'EXTURE\x0d\x0a\x09\x09' + 'return\x20u_A' + 'lbedoColor' + '.rgb\x20*\x20tex' + 'ture2D(u_A' + 'lbedoTextu' + 're,\x20uv).rg' + 'b;\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09return' + '\x20u_AlbedoC' + 'olor.rgb;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09//TODO:De' + 'tail\x20Textu' + 're\x0d\x0a}\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '2\x20getMetal' + 'licGloss(v' + 'ec2\x20uv)\x0d\x0a{' + '\x0d\x0a\x09mediump' + '\x20vec2\x20ms;/' + '/x\x20is\x20meta' + 'llic,y\x20is\x20' + 'smoothness' + '\x0d\x0a\x09#ifdef\x20' + 'METALLICGL' + 'OSSTEXTURE' + '\x0d\x0a\x09\x09#ifdef' + '\x20SMOOTHNES' + 'SSOURCE_AL' + 'BEDOTEXTUR' + 'E_ALPHA\x0d\x0a\x09' + '\x09\x09ms.x\x20=\x20t' + 'exture2D(u' + '_MetallicG' + 'lossTextur' + 'e,\x20uv).r;\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20ALBEDOTEX' + 'TURE\x0d\x0a\x09\x09\x09\x09' + 'ms.y\x20=\x20tex' + 'ture2D(u_A' + 'lbedoTextu' + 're,\x20uv).a*' + 'u_Smoothne' + 'ssScale;\x0d\x0a' + '\x09\x09\x09#else\x0d\x0a' + '\x09\x09\x09\x09ms.y\x20=' + '\x20u_Smoothn' + 'essScale;\x0d' + '\x0a\x09\x09\x09#endif' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09ms\x20=\x20t' + 'exture2D(u' + '_MetallicG' + 'lossTextur' + 'e,\x20uv).ra;' + '\x0d\x0a\x09\x09\x09ms.y\x20' + '*=\x20u_Smoot' + 'hnessScale' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09ms.x\x20=\x20' + 'u_Metallic' + ';\x0d\x0a\x09\x09#ifde' + 'f\x20SMOOTHNE' + 'SSSOURCE_A' + 'LBEDOTEXTU' + 'RE_ALPHA\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'ALBEDOTEXT' + 'URE\x0d\x0a\x09\x09\x09\x09m' + 's.y\x20=\x20text' + 'ure2D(u_Al' + 'bedoTextur' + 'e,\x20uv).a\x20*' + '\x20u_Smoothn' + 'essScale;\x0d' + '\x0a\x09\x09\x09#else\x0d' + '\x0a\x09\x09\x09\x09ms.y\x20' + '=\x20u_Smooth' + 'nessScale;' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09ms.y\x20' + '=\x20u_Smooth' + 'ness;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09ret') + ('urn\x20ms;\x0d\x0a}' + '\x0d\x0a\x0d\x0amedium' + 'p\x20vec4\x20spe' + 'cularGloss' + '(vec2\x20uv)\x0d' + '\x0a{\x0d\x0a\x09mediu' + 'mp\x20vec4\x20sg' + ';\x0d\x0a\x09#ifdef' + '\x20SPECULARG' + 'LOSSTEXTUR' + 'E\x0d\x0a\x09\x09#ifde' + 'f\x20SMOOTHNE' + 'SSSOURCE_A' + 'LBEDOTEXTU' + 'RE_ALPHA\x0d\x0a' + '\x09\x09\x09sg.rgb\x20' + '=\x20texture2' + 'D(u_SpecGl' + 'ossTexture' + ',\x20uv).rgb;' + '\x0d\x0a\x09\x09\x09#ifde' + 'f\x20ALBEDOTE' + 'XTURE\x0d\x0a\x09\x09\x09' + '\x09sg.a\x20=\x20te' + 'xture2D(u_' + 'AlbedoText' + 'ure,\x20uv).a' + '*u_Smoothn' + 'essScale;\x0d' + '\x0a\x09\x09\x09#else\x0d' + '\x0a\x09\x09\x09\x09sg.a\x20' + '=\x20u_Smooth' + 'nessScale;' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09sg\x20=\x20' + 'texture2D(' + 'u_SpecGlos' + 'sTexture,\x20' + 'uv);\x0d\x0a\x09\x09\x09s' + 'g.a\x20*=\x20u_S' + 'moothnessS' + 'cale;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09sg.' + 'rgb\x20=\x20u_Sp' + 'ecularColo' + 'r.rgb;\x0d\x0a\x09\x09' + '#ifdef\x20SMO' + 'OTHNESSSOU' + 'RCE_ALBEDO' + 'TEXTURE_AL' + 'PHA\x0d\x0a\x09\x09\x09#i' + 'fdef\x20ALBED' + 'OTEXTURE\x0d\x0a' + '\x09\x09\x09\x09sg.a\x20=' + '\x20texture2D' + '(u_AlbedoT' + 'exture,\x20uv' + ').a\x20*\x20u_Sm' + 'oothnessSc' + 'ale;\x0d\x0a\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + 'sg.a\x20=\x20u_S' + 'moothnessS' + 'cale;\x0d\x0a\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + 'sg.a\x20=\x20u_S' + 'moothness;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x09return\x20' + 'sg;\x0d\x0a}\x0d\x0a\x0d\x0a' + '\x0d\x0a#ifdef\x20N' + 'ORMALTEXTU' + 'RE\x0d\x0a\x09mediu' + 'mp\x20vec3\x20un' + 'packScaleN' + 'ormal(medi' + 'ump\x20vec3\x20p' + 'ackednorma' + 'l,\x20mediump' + '\x20float\x20bum' + 'pScale)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09mediu' + 'mp\x20vec3\x20no' + 'rmal\x20=\x20pac' + 'kednormal.' + 'xyz\x20*\x202.0\x20' + '-\x201.0;\x0d\x0a\x09\x09' + 'normal.y=-' + 'normal.y;/' + '/NOTE:beca' + 'use\x20unity\x20' + 'to\x20LayaAir' + '\x20coordSyst' + 'em.\x0d\x0a\x09\x09nor' + 'mal.xy\x20*=\x20' + 'bumpScale;') + ('\x0d\x0a\x09\x09return' + '\x20normal;\x0d\x0a' + '\x09}\x0d\x0a\x09\x0d\x0a\x09me' + 'diump\x20vec3' + '\x20normalInT' + 'angentSpac' + 'e(vec2\x20tex' + 'coords)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09mediu' + 'mp\x20vec3\x20no' + 'rmalTangen' + 't\x20=\x20unpack' + 'ScaleNorma' + 'l(texture2' + 'D(u_Normal' + 'Texture,\x20t' + 'excoords).' + 'rgb,u_Norm' + 'alScale);\x0d' + '\x0a\x09\x09return\x20' + 'normalTang' + 'ent;\x0d\x0a\x09}\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20PAR' + 'ALLAXTEXTU' + 'RE\x0d\x0a\x09mediu' + 'mp\x20vec2\x20pa' + 'rallaxOffs' + 'et1Step(me' + 'diump\x20floa' + 't\x20h,\x20mediu' + 'mp\x20float\x20h' + 'eight,\x20med' + 'iump\x20vec3\x20' + 'viewDir)\x0d\x0a' + '\x09{\x0d\x0a\x09\x09h\x20=\x20' + 'h\x20*\x20height' + '\x20-\x20height\x20' + '/\x202.0;\x0d\x0a\x09\x09' + 'viewDir.z\x20' + '+=\x200.42;\x0d\x0a' + '\x09\x09return\x20h' + '\x20*\x20(viewDi' + 'r.xy\x20/\x20vie' + 'wDir.z);\x0d\x0a' + '\x09}\x0d\x0a\x0d\x0a\x09vec' + '2\x20parallax' + '(vec2\x20texc' + 'oords,\x20med' + 'iump\x20vec3\x20' + 'viewDir)\x0d\x0a' + '\x09{\x0d\x0a\x09\x09medi' + 'ump\x20float\x20' + 'h\x20=\x20textur' + 'e2D(u_Para' + 'llaxTextur' + 'e,\x20texcoor' + 'ds.xy).g;\x0d' + '\x0a\x09\x09vec2\x20of' + 'fset\x20=\x20par' + 'allaxOffse' + 't1Step(h,\x20' + 'u_Parallax' + 'Scale,\x20vie' + 'wDir);\x0d\x0a\x09\x09' + 'return\x20tex' + 'coords+off' + 'set;\x0d\x0a\x09}\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a' + '\x0d\x0a\x0d\x0a'), _0x3addf9 = 'vec2\x20trans' + 'formLightM' + 'apUV(in\x20ve' + 'c2\x20texcoor' + 'd,in\x20vec4\x20' + 'lightmapSc' + 'aleOffset)' + '\x0d\x0a{\x0d\x0a\x09vec2' + '\x20lightMapU' + 'V=vec2(tex' + 'coord.x,1.' + '0-texcoord' + '.y)*lightm' + 'apScaleOff' + 'set.xy+lig' + 'htmapScale' + 'Offset.zw;' + '\x0d\x0a\x09lightMa' + 'pUV.y=1.0-' + 'lightMapUV' + '.y;\x0d\x0a\x09retu' + 'rn\x20lightMa' + 'pUV;\x20\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20ver' + 'texForward' + '()\x0d\x0a{\x0d\x0a\x09ve' + 'c4\x20positio' + 'n;\x0d\x0a\x09#ifde' + 'f\x20BONE\x0d\x0a\x09\x09' + 'mat4\x20skinT' + 'ransform\x20=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.x)]' + '\x20*\x20a_BoneW' + 'eights.x;\x0d' + '\x0a\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.y)]\x20' + '*\x20a_BoneWe' + 'ights.y;\x0d\x0a' + '\x09\x09skinTran' + 'sform\x20+=\x20u' + '_Bones[int' + '(a_BoneInd' + 'ices.z)]\x20*' + '\x20a_BoneWei' + 'ghts.z;\x0d\x0a\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.w)]\x20*\x20' + 'a_BoneWeig' + 'hts.w;\x0d\x0a\x09\x09' + 'position=s' + 'kinTransfo' + 'rm*a_Posit' + 'ion;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09posi' + 'tion=a_Pos' + 'ition;\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09\x09gl_Posi' + 'tion\x20=\x20a_M' + 'vpMatrix\x20*' + '\x20position;' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09gl_Posit' + 'ion\x20=\x20u_Mv' + 'pMatrix\x20*\x20' + 'position;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09mat4\x20wo' + 'rldMat;\x0d\x0a\x09' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09\x09worldMa' + 't\x20=\x20a_Worl' + 'dMat;\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09wor' + 'ldMat\x20=\x20u_' + 'WorldMat;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09v_Posit' + 'ionWorld=(' + 'worldMat*p' + 'osition).x' + 'yz;\x0d\x0a\x0d\x0a\x09#i' + 'f\x20defined(' + 'ALBEDOTEXT' + 'URE)||defi' + 'ned(METALL' + 'ICGLOSSTEX' + 'TURE)||def' + 'ined(NORMA' + ('LTEXTURE)|' + '|defined(E' + 'MISSIONTEX' + 'TURE)||def' + 'ined(OCCLU' + 'SIONTEXTUR' + 'E)||define' + 'd(PARALLAX' + 'TEXTURE)\x0d\x0a' + '\x09\x09#ifdef\x20T' + 'ILINGOFFSE' + 'T\x0d\x0a\x09\x09\x09v_Te' + 'xcoord0=Tr' + 'ansformUV(' + 'a_Texcoord' + '0,u_Tiling' + 'Offset);\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09v_Texcoo' + 'rd0=a_Texc' + 'oord0;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + 'v_EyeVec\x20=' + 'u_CameraPo' + 's-v_Positi' + 'onWorld;//' + 'will\x20norma' + 'lize\x20per-p' + 'ixel\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20LIGH' + 'TMAP\x0d\x0a\x09\x09ve' + 'c2\x20texcoor' + 'd;\x0d\x0a\x09\x09#ifd' + 'ef\x20UV1\x0d\x0a\x09\x09' + '\x09texcoord=' + 'a_Texcoord' + '1;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09texc' + 'oord=a_Tex' + 'coord0;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09v_LightMa' + 'pUV=transf' + 'ormLightMa' + 'pUV(texcoo' + 'rd,u_Light' + 'mapScaleOf' + 'fset);\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + 'mat3\x20world' + 'InvMat;\x0d\x0a\x09' + '#ifdef\x20BON' + 'E\x0d\x0a\x09\x09world' + 'InvMat=INV' + 'ERSE_MAT(m' + 'at3(worldM' + 'at*skinTra' + 'nsform));\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09worldInvM' + 'at=INVERSE' + '_MAT(mat3(' + 'worldMat))' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09v_Nor' + 'mal=normal' + 'ize(a_Norm' + 'al*worldIn' + 'vMat);//if' + '\x20no\x20normal' + 'ize\x20will\x20c' + 'ause\x20preci' + 'sion\x20probl' + 'em.\x0d\x0a\x0d\x0a\x09#i' + 'fdef\x20NORMA' + 'LTEXTURE\x0d\x0a' + '\x09\x09v_Tangen' + 't=normaliz' + 'e(a_Tangen' + 't0.xyz*wor' + 'ldInvMat);' + '\x0d\x0a\x09\x09v_Bino' + 'rmal=cross' + '(v_Normal,' + 'v_Tangent)' + '*a_Tangent' + '0.w;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09#i' + 'fdef\x20PARAL' + 'LAXTEXTURE' + '\x0d\x0a\x09\x09vec3\x20b' + 'inormal\x20=\x20' + 'cross(a_No' + 'rmal,\x20a_Ta' + 'ngent0.xyz' + ')*a_Tangen' + 't0.w;\x0d\x0a\x09\x09m' + 'at3\x20object' + 'TBN\x20=\x20mat3') + ('(a_Tangent' + '0.xyz,\x20bin' + 'ormal,\x20a_N' + 'ormal);\x0d\x0a\x09' + '\x09v_ViewDir' + 'ForParalla' + 'x=(worldIn' + 'vMat*u_Cam' + 'eraPos-pos' + 'ition.xyz)' + '*objectTBN' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09#if\x20d' + 'efined(CAL' + 'CULATE_SHA' + 'DOWS)&&!de' + 'fined(SHAD' + 'OW_CASCADE' + ')\x0d\x0a\x09\x09v_Sha' + 'dowCoord\x20=' + '\x20getShadow' + 'Coord(vec4' + '(v_Positio' + 'nWorld,1.0' + '));\x0d\x0a\x09#end' + 'if\x0d\x0a}'), _0x5ce0d5 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(a' + '_PositionT' + 'excoord.xy' + ',\x200.0,\x201.0' + ');\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x7ab94d = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20vec4\x20' + 'u_MainTex_' + 'TexelSize;' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragDownsam' + 'ple13()\x20{\x0d' + '\x0a\x09mediump\x20' + 'vec4\x20color' + '\x20=\x20downsam' + 'pleBox13Ta' + 'p(u_MainTe' + 'x,\x20v_Texco' + 'ord0,\x20u_Ma' + 'inTex_Texe' + 'lSize.xy);' + '\x0d\x0a\x09gl_Frag' + 'Color\x20=\x20co' + 'lor;\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x20{\x0d\x0a\x09fra' + 'gDownsampl' + 'e13();\x0d\x0a}', _0x111e8a = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20vec4\x20' + 'u_MainTex_' + 'TexelSize;' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragDownsam' + 'ple4()\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20color\x20' + '=\x20downsamp' + 'leBox4Tap(' + 'u_MainTex,' + '\x20v_Texcoor' + 'd0,\x20u_Main' + 'Tex_TexelS' + 'ize.xy);\x0d\x0a' + '\x09gl_FragCo' + 'lor\x20=\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x20{\x0d\x0a\x09fragD' + 'ownsample4' + '();\x0d\x0a}', _0x4d7546 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Aut' + 'oExposureT' + 'ex;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'MainTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Thres' + 'hold;\x20//\x20x' + ':\x20threshol' + 'd\x20value\x20(l' + 'inear),\x20y:' + '\x20threshold' + '\x20-\x20knee,\x20z' + ':\x20knee\x20*\x202' + ',\x20w:\x200.25\x20' + '/\x20knee\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Params;' + '\x20//\x20x:\x20cla' + 'mp,\x20yzw:\x20u' + 'nused\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '4\x20prefilte' + 'r(mediump\x20' + 'vec4\x20color' + ',\x20vec2\x20uv)' + '\x20{\x0d\x0a\x09mediu' + 'mp\x20float\x20a' + 'utoExposur' + 'e\x20=\x20textur' + 'e2D(u_Auto' + 'ExposureTe' + 'x,\x20uv).r;\x0d' + '\x0a\x09color\x20*=' + '\x20autoExpos' + 'ure;\x0d\x0a\x09col' + 'or\x20=\x20min(v' + 'ec4(u_Para' + 'ms.x),\x20col' + 'or);\x20//\x20cl' + 'amp\x20to\x20max' + '\x0d\x0a\x09color\x20=' + '\x20quadratic' + 'Threshold(' + 'color,\x20u_T' + 'hreshold.x' + ',\x20u_Thresh' + 'old.yzw);\x0d' + '\x0a\x09return\x20c' + 'olor;\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20fra' + 'gPrefilter' + '13()\x20{\x0d\x0a\x09m' + 'ediump\x20vec' + '4\x20color\x20=\x20' + 'downsample' + 'Box13Tap(u' + '_MainTex,\x20' + 'v_Texcoord' + '0,\x20u_MainT' + 'ex_TexelSi' + 'ze.xy);\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=\x20prefi' + 'lter(safeH' + 'DR(color),' + '\x20v_Texcoor' + 'd0);\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x20{\x0d\x0a\x09fra' + 'gPrefilter' + '13();\x0d\x0a}', _0x18e5f2 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Aut' + 'oExposureT' + 'ex;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'MainTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Thres' + 'hold;\x20//\x20x' + ':\x20threshol' + 'd\x20value\x20(l' + 'inear),\x20y:' + '\x20threshold' + '\x20-\x20knee,\x20z' + ':\x20knee\x20*\x202' + ',\x20w:\x200.25\x20' + '/\x20knee\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Params;' + '\x20//\x20x:\x20cla' + 'mp,\x20yzw:\x20u' + 'nused\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '4\x20prefilte' + 'r(mediump\x20' + 'vec4\x20color' + ',\x20vec2\x20uv)' + '\x20{\x0d\x0a\x09mediu' + 'mp\x20float\x20a' + 'utoExposur' + 'e\x20=\x20textur' + 'e2D(u_Auto' + 'ExposureTe' + 'x,\x20uv).r;\x0d' + '\x0a\x09color\x20*=' + '\x20autoExpos' + 'ure;\x0d\x0a\x09col' + 'or\x20=\x20min(v' + 'ec4(u_Para' + 'ms.x),\x20col' + 'or);\x20//\x20cl' + 'amp\x20to\x20max' + '\x0d\x0a\x09color\x20=' + '\x20quadratic' + 'Threshold(' + 'color,\x20u_T' + 'hreshold.x' + ',\x20u_Thresh' + 'old.yzw);\x0d' + '\x0a\x09return\x20c' + 'olor;\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20fra' + 'gPrefilter' + '4()\x20{\x0d\x0a\x09me' + 'diump\x20vec4' + '\x20color\x20=\x20d' + 'ownsampleB' + 'ox4Tap(u_M' + 'ainTex,\x20v_' + 'Texcoord0,' + '\x20u_MainTex' + '_TexelSize' + '.xy);\x0d\x0a\x09gl' + '_FragColor' + '\x20=\x20prefilt' + 'er(safeHDR' + '(color),\x20v' + '_Texcoord0' + ');\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x20{\x0d\x0a\x09fragP' + 'refilter4(' + ');\x0d\x0a}', _0x4c3b4b = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Blo' + 'omTex;\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_MainT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20float\x20u' + '_SampleSca' + 'le;\x0d\x0a\x0d\x0amed' + 'iump\x20vec4\x20' + 'combine(me' + 'diump\x20vec4' + '\x20bloom,\x20ve' + 'c2\x20uv)\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20color\x20' + '=\x20texture2' + 'D(u_BloomT' + 'ex,\x20uv);\x0d\x0a' + '\x09return\x20bl' + 'oom\x20+\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20fragUp' + 'sampleBox(' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec4\x20b' + 'loom\x20=\x20ups' + 'ampleBox(u' + '_MainTex,\x20' + 'v_Texcoord' + '0,\x20u_MainT' + 'ex_TexelSi' + 'ze.xy,\x20vec' + '4(u_Sample' + 'Scale));\x0d\x0a' + '\x09gl_FragCo' + 'lor\x20=\x20comb' + 'ine(bloom,' + '\x20v_Texcoor' + 'd0);\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x20{\x0d\x0a\x09fra' + 'gUpsampleB' + 'ox();\x0d\x0a}', _0x11bcd8 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Blo' + 'omTex;\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_MainT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20float\x20u' + '_SampleSca' + 'le;\x0d\x0a\x0d\x0amed' + 'iump\x20vec4\x20' + 'combine(me' + 'diump\x20vec4' + '\x20bloom,\x20ve' + 'c2\x20uv)\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20color\x20' + '=\x20texture2' + 'D(u_BloomT' + 'ex,\x20uv);\x0d\x0a' + '\x09return\x20bl' + 'oom\x20+\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20fragUp' + 'sampleTent' + '()\x20{\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'bloom\x20=\x20up' + 'sampleTent' + '(u_MainTex' + ',\x20v_Texcoo' + 'rd0,\x20u_Mai' + 'nTex_Texel' + 'Size.xy,\x20v' + 'ec4(u_Samp' + 'leScale));' + '\x0d\x0a\x09gl_Frag' + 'Color\x20=\x20co' + 'mbine(bloo' + 'm,\x20v_Texco' + 'ord0);\x0d\x0a}\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x0d\x0a\x09f' + 'ragUpsampl' + 'eTent();\x0d\x0a' + '}', _0x40ba80 = '#include\x20\x22' + 'StdLib.gls' + 'l\x22;\x0d\x0a\x0d\x0a#de' + 'fine\x20EPSIL' + 'ON\x201.0e-4\x0d' + '\x0a\x0d\x0a//\x20Quad' + 'ratic\x20colo' + 'r\x20threshol' + 'ding\x0d\x0a//\x20c' + 'urve\x20=\x20(th' + 'reshold\x20-\x20' + 'knee,\x20knee' + '\x20*\x202,\x200.25' + '\x20/\x20knee)\x0d\x0a' + 'mediump\x20ve' + 'c4\x20quadrat' + 'icThreshol' + 'd(mediump\x20' + 'vec4\x20color' + ',\x20mediump\x20' + 'float\x20thre' + 'shold,\x20med' + 'iump\x20vec3\x20' + 'curve)\x20{\x0d\x0a' + '\x09//\x20Pixel\x20' + 'brightness' + '\x0d\x0a\x09mediump' + '\x20float\x20br\x20' + '=\x20max3(col' + 'or.r,\x20colo' + 'r.g,\x20color' + '.b);\x0d\x0a\x0d\x0a\x09/' + '/\x20Under-th' + 'reshold\x20pa' + 'rt:\x20quadra' + 'tic\x20curve\x0d' + '\x0a\x09mediump\x20' + 'float\x20rq\x20=' + '\x20clamp(br\x20' + '-\x20curve.x,' + '\x200.0,\x20curv' + 'e.y);\x0d\x0a\x09rq' + '\x20=\x20curve.z' + '\x20*\x20rq\x20*\x20rq' + ';\x0d\x0a\x0d\x0a\x09//\x20C' + 'ombine\x20and' + '\x20apply\x20the' + '\x20brightnes' + 's\x20response' + '\x20curve.\x0d\x0a\x09' + 'color\x20*=\x20m' + 'ax(rq,\x20br\x20' + '-\x20threshol' + 'd)\x20/\x20max(b' + 'r,\x20EPSILON' + ');\x0d\x0a\x0d\x0a\x09ret' + 'urn\x20color;' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d' + '\x0a//\x0d\x0a//\x20sR' + 'GB\x20transfe' + 'r\x20function' + 's\x0d\x0a//\x20Fast' + '\x20path\x20ref:' + '\x20http://ch' + 'illiant.bl' + 'ogspot.com' + '.au/2012/0' + '8/srgb-app' + 'roximation' + 's-for-hlsl' + '.html?m=1\x0d' + '\x0a//\x0d\x0amediu' + 'mp\x20vec3\x20sR' + 'GBToLinear' + '(mediump\x20v' + 'ec3\x20c)\x20{\x0d\x0a' + '\x09#ifdef\x20US' + 'E_VERY_FAS' + 'T_SRGB\x0d\x0a\x09\x09' + 'return\x20c\x20*' + '\x20c;\x0d\x0a\x09#eli' + 'f\x20defined(' + 'USE_FAST_S' + 'RGB)\x0d\x0a\x09\x09re' + 'turn\x20c\x20*\x20(' + 'c\x20*\x20(c\x20*\x200' + '.305306011' + '\x20+\x200.68217' + '1111)\x20+\x200.' + '012522878)' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09mediump' + '\x20vec3\x20line' + 'arRGBLo\x20=\x20' + 'c\x20/\x2012.92;' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20pow' + 'er=vec3(2.' + '4,\x202.4,\x202.' + '4);\x0d\x0a\x09\x09med' + ('iump\x20vec3\x20' + 'linearRGBH' + 'i\x20=\x20positi' + 'vePow((c\x20+' + '\x200.055)\x20/\x20' + '1.055,\x20pow' + 'er);\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20linearRGB' + '\x20=vec3((c.' + 'r<=0.04045' + ')\x20?\x20linear' + 'RGBLo.r\x20:\x20' + 'linearRGBH' + 'i.r,(c.g<=' + '0.04045)\x20?' + '\x20linearRGB' + 'Lo.g\x20:\x20lin' + 'earRGBHi.g' + ',(c.b<=0.0' + '4045)\x20?\x20li' + 'nearRGBLo.' + 'b\x20:\x20linear' + 'RGBHi.b);\x0d' + '\x0a\x09\x09return\x20' + 'linearRGB;' + '\x0d\x0a\x09#endif\x0d' + '\x0a}\x0d\x0a\x0d\x0amedi' + 'ump\x20vec4\x20s' + 'RGBToLinea' + 'r(mediump\x20' + 'vec4\x20c){\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20vec4(sRGB' + 'ToLinear(c' + '.rgb),\x20c.a' + ');\x0d\x0a}\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20line' + 'arToSRGB(m' + 'ediump\x20vec' + '3\x20c)\x20{\x0d\x0a\x09#' + 'ifdef\x20USE_' + 'VERY_FAST_' + 'SRGB\x0d\x0a\x09\x09re' + 'turn\x20sqrt(' + 'c);\x0d\x0a\x09#eli' + 'f\x20defined(' + 'USE_FAST_S' + 'RGB)\x0d\x0a\x09\x09re' + 'turn\x20max(1' + '.055\x20*\x20Pos' + 'itivePow(c' + ',\x200.416666' + '667)\x20-\x200.0' + '55,\x200.0);\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09mediump\x20v' + 'ec3\x20sRGBLo' + '\x20=\x20c\x20*\x2012.' + '92;\x0d\x0a\x09\x09med' + 'iump\x20vec3\x20' + 'power=vec3' + '(1.0\x20/\x202.4' + ',\x201.0\x20/\x202.' + '4,\x201.0\x20/\x202' + '.4);\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20sRGBHi\x20=\x20' + '(positiveP' + 'ow(c,\x20powe' + 'r)\x20*\x201.055' + ')\x20-\x200.055;' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20sRG' + 'B\x20=vec3((c' + '.r<=0.0031' + '308)\x20?\x20sRG' + 'BLo.r\x20:\x20sR' + 'GBHi.r,(c.' + 'g<=0.00313' + '08)\x20?\x20sRGB' + 'Lo.g\x20:\x20sRG' + 'BHi.g,(c.b' + '<=0.003130' + '8)\x20?\x20sRGBL' + 'o.b\x20:\x20sRGB' + 'Hi.b);\x0d\x0a\x09\x09' + 'return\x20sRG' + 'B;\x0d\x0a\x09#endi' + 'f\x0d\x0a}\x0d\x0a\x0d\x0ame' + 'diump\x20vec4' + '\x20linearToS' + 'RGB(medium' + 'p\x20vec4\x20c){' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20vec4(li' + 'nearToSRGB' + '(c.rgb),\x20c' + '.a);\x0d\x0a}'), _0x58efa6 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Blo' + 'omTex;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'AutoExposu' + 'reTex;\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Bl' + 'oom_DirtTe' + 'x;\x0d\x0aunifor' + 'm\x20vec4\x20u_B' + 'loomTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Bloom' + '_DirtTileO' + 'ffset;\x20//\x20' + 'xy:\x20tiling' + ',\x20zw:\x20offs' + 'et\x0d\x0aunifor' + 'm\x20mediump\x20' + 'vec3\x20u_Blo' + 'om_Setting' + 's;//\x20x:\x20sa' + 'mpleScale,' + '\x20y:\x20intens' + 'ity,\x20z:\x20di' + 'rt\x20intensi' + 'ty\x0d\x0aunifor' + 'm\x20mediump\x20' + 'vec3\x20u_Blo' + 'om_Color;\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x0d\x0a\x09m' + 'ediump\x20flo' + 'at\x20autoExp' + 'osure\x20=\x20te' + 'xture2D(u_' + 'AutoExposu' + 'reTex,\x20v_T' + 'excoord0).' + 'r;\x0d\x0a\x09mediu' + 'mp\x20vec4\x20co' + 'lor=vec4(0' + '.0);\x0d\x0a\x09col' + 'or\x20=\x20textu' + 're2D(u_Mai' + 'nTex,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09\x0d\x0a\x09color' + '\x20=\x20sRGBToL' + 'inear(colo' + 'r);\x0d\x0a\x09colo' + 'r.rgb\x20*=\x20a' + 'utoExposur' + 'e;\x0d\x0a\x09\x0d\x0a\x09#i' + 'f\x20defined(' + 'BLOOM)||de' + 'fined(BLOO' + 'M_LOW)\x0d\x0a\x09\x09' + '#ifdef\x20BLO' + 'OM\x0d\x0a\x09\x09\x09med' + 'iump\x20vec4\x20' + 'bloom\x20=\x20up' + 'sampleTent' + '(u_BloomTe' + 'x,\x20v_Texco' + 'ord0,\x20u_Bl' + 'oomTex_Tex' + 'elSize.xy,' + '\x20vec4(u_Bl' + 'oom_Settin' + 'gs.x));\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09mediump\x20v' + 'ec4\x20bloom\x20' + '=\x20upsample' + ('Box(u_Bloo' + 'mTex,\x20v_Te' + 'xcoord0,\x20u' + '_BloomTex_' + 'TexelSize.' + 'xy,\x20vec4(u' + '_Bloom_Set' + 'tings.x));' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x0d\x0a\x09\x09//\x20U' + 'Vs\x20should\x20' + 'be\x20Distort' + '(uv\x20*\x20u_Bl' + 'oom_DirtTi' + 'leOffset.x' + 'y\x20+\x20u_Bloo' + 'm_DirtTile' + 'Offset.zw)' + '\x0d\x0a\x09\x09//\x20but' + '\x20consideri' + 'ng\x20we\x20use\x20' + 'a\x20cover-st' + 'yle\x20scale\x20' + 'on\x20the\x20dir' + 't\x20texture\x20' + 'the\x20differ' + 'ence\x0d\x0a\x09\x09//' + '\x20isn\x27t\x20mas' + 'sive\x20so\x20we' + '\x20chose\x20to\x20' + 'save\x20a\x20few' + '\x20ALUs\x20here' + '\x20instead\x20i' + 'n\x20case\x20len' + 's\x20distorti' + 'on\x0d\x0a\x09\x09//\x20i' + 's\x20active\x0d\x0a' + '\x09\x09mediump\x20' + 'vec4\x20dirt\x20' + '=vec4(text' + 'ure2D(u_Bl' + 'oom_DirtTe' + 'x,\x20v_Texco' + 'ord0\x20*\x20u_B' + 'loom_DirtT' + 'ileOffset.' + 'xy\x20+\x20u_Blo' + 'om_DirtTil' + 'eOffset.zw' + ').rgb,\x200.0' + ');\x0d\x0a\x0d\x0a\x09\x09//' + '\x20Additive\x20' + 'bloom\x20(art' + 'ist\x20friend' + 'ly)\x0d\x0a\x09\x09blo' + 'om\x20*=\x20u_Bl' + 'oom_Settin' + 'gs.y;\x0d\x0a\x09\x09d' + 'irt\x20*=\x20u_B' + 'loom_Setti' + 'ngs.z;\x0d\x0a\x09\x09' + 'mediump\x20ve' + 'c4\x20bloomCo' + 'lor=vec4(u' + '_Bloom_Col' + 'or,\x201.0);\x0d' + '\x0a\x09\x09color\x20+' + '=\x20bloom\x20*\x20' + 'bloomColor' + ';\x0d\x0a\x09\x09color' + '\x20+=\x20dirt\x20*' + '\x20bloom;\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09mediump\x20' + 'vec4\x20final' + 'Color\x20=\x20co' + 'lor;\x0d\x0a\x09fin' + 'alColor\x20=\x20' + 'linearToSR' + 'GB(finalCo' + 'lor);\x0d\x0a\x09//' + 'finalColor' + '.rgb\x20=\x20Dit' + 'her(finalC' + 'olor.rgb,\x20' + 'v_Texcoord' + '0);//TODO:' + '抖动\x0d\x0a\x09gl_Fr' + 'agColor\x20=\x20' + 'finalColor' + ';\x0d\x0a}'), _0x4f6a9e = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(a' + '_PositionT' + 'excoord.xy' + ',\x200.0,\x201.0' + ');\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x2bb8c0 = '//\x20Better,' + '\x20temporall' + 'y\x20stable\x20b' + 'ox\x20filteri' + 'ng\x0d\x0a//\x20[Ji' + 'menez14]\x20h' + 'ttp://goo.' + 'gl/eomGso\x0d' + '\x0a//\x20.\x20.\x20.\x20' + '.\x20.\x20.\x20.\x0d\x0a/' + '/\x20.\x20A\x20.\x20B\x20' + '.\x20C\x20.\x0d\x0a//\x20' + '.\x20.\x20D\x20.\x20E\x20' + '.\x20.\x0d\x0a//\x20.\x20' + 'F\x20.\x20G\x20.\x20H\x20' + '.\x0d\x0a//\x20.\x20.\x20' + 'I\x20.\x20J\x20.\x20.\x0d' + '\x0a//\x20.\x20K\x20.\x20' + 'L\x20.\x20M\x20.\x0d\x0a/' + '/\x20.\x20.\x20.\x20.\x20' + '.\x20.\x20.\x0d\x0amed' + 'iump\x20vec4\x20' + 'downsample' + 'Box13Tap(s' + 'ampler2D\x20t' + 'ex,\x20vec2\x20u' + 'v,\x20vec2\x20te' + 'xelSize)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'A\x20=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20texelS' + 'ize\x20*\x20vec2' + '(-1.0,\x20-1.' + '0));\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20ve' + 'c4\x20B\x20=\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20tex' + 'elSize\x20*\x20v' + 'ec2(\x200.0,\x20' + '-1.0));\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec4\x20C\x20=\x20' + 'texture2D(' + 'tex,\x20uv\x20+\x20' + 'texelSize\x20' + '*\x20vec2(\x201.' + '0,\x20-1.0));' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20D' + '\x20=\x20texture' + '2D(tex,\x20uv' + '\x20+\x20texelSi' + 'ze\x20*\x20vec2(' + '-0.5,\x20-0.5' + '));\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20E\x20=\x20text' + 'ure2D(tex,' + '\x20uv\x20+\x20texe' + 'lSize\x20*\x20ve' + 'c2(\x200.5,\x20-' + '0.5));\x0d\x0a\x20\x20' + '\x20\x20mediump\x20' + 'vec4\x20F\x20=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20+\x20t' + 'exelSize\x20*' + '\x20vec2(-1.0' + ',\x20\x200.0));\x0d' + '\x0a\x20\x20\x20\x20mediu' + 'mp\x20vec4\x20G\x20' + '=\x20texture2' + 'D(tex,\x20uv)' + ';\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'H\x20=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20texelS' + 'ize\x20*\x20vec2' + '(\x201.0,\x20\x200.' + '0));\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20ve' + 'c4\x20I\x20=\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20tex' + 'elSize\x20*\x20v' + 'ec2(-0.5,\x20' + '\x200.5));\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec4\x20J\x20=\x20' + 'texture2D(' + 'tex,\x20uv\x20+\x20' + 'texelSize\x20' + '*\x20vec2(\x200.' + '5,\x20\x200.5));' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20K' + ('\x20=\x20texture' + '2D(tex,\x20uv' + '\x20+\x20texelSi' + 'ze\x20*\x20vec2(' + '-1.0,\x20\x201.0' + '));\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20L\x20=\x20text' + 'ure2D(tex,' + '\x20uv\x20+\x20texe' + 'lSize\x20*\x20ve' + 'c2(\x200.0,\x20\x20' + '1.0));\x0d\x0a\x20\x20' + '\x20\x20mediump\x20' + 'vec4\x20M\x20=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20+\x20t' + 'exelSize\x20*' + '\x20vec2(\x201.0' + ',\x20\x201.0));\x0d' + '\x0a\x0d\x0a\x09medium' + 'p\x20vec2\x20sca' + 'le=\x20vec2(0' + '.5,\x200.125)' + ';\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec2\x20' + 'div\x20=\x20(1.0' + '\x20/\x204.0)\x20*\x20' + 'scale;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20vec4\x20o\x20=' + '\x20(D\x20+\x20E\x20+\x20' + 'I\x20+\x20J)\x20*\x20d' + 'iv.x;\x0d\x0a\x20\x20\x20' + '\x20o\x20+=\x20(A\x20+' + '\x20B\x20+\x20G\x20+\x20F' + ')\x20*\x20div.y;' + '\x0d\x0a\x20\x20\x20\x20o\x20+=' + '\x20(B\x20+\x20C\x20+\x20' + 'H\x20+\x20G)\x20*\x20d' + 'iv.y;\x0d\x0a\x20\x20\x20' + '\x20o\x20+=\x20(F\x20+' + '\x20G\x20+\x20L\x20+\x20K' + ')\x20*\x20div.y;' + '\x0d\x0a\x20\x20\x20\x20o\x20+=' + '\x20(G\x20+\x20H\x20+\x20' + 'M\x20+\x20L)\x20*\x20d' + 'iv.y;\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20return\x20' + 'o;\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x20Standard' + '\x20box\x20filte' + 'ring\x0d\x0amedi' + 'ump\x20vec4\x20d' + 'ownsampleB' + 'ox4Tap(sam' + 'pler2D\x20tex' + ',\x20vec2\x20uv,' + '\x20vec2\x20texe' + 'lSize)\x0d\x0a{\x0d' + '\x0a\x20\x20\x20\x20vec4\x20' + 'd\x20=\x20texelS' + 'ize.xyxy\x20*' + '\x20vec4(-1.0' + ',\x20-1.0,\x201.' + '0,\x201.0);\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20s' + '\x20=\x20\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20d.xy);' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.zy);\x0d\x0a\x20' + '\x20\x20\x20s\x20+=\x20te' + 'xture2D(te' + 'x,\x20uv\x20+\x20d.' + 'xw);\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.zw)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20s\x20*\x20' + '(1.0\x20/\x204.0' + ');\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x209-tap\x20bi' + 'linear\x20ups' + 'ampler\x20(te' + 'nt\x20filter)' + '\x0d\x0a//\x20.\x20.\x20.' + '\x20.\x20.\x20.\x20.\x0d\x0a' + '//\x20.\x201\x20.\x202' + '\x20.\x201\x20.\x0d\x0a//' + '\x20.\x20.\x20.\x20.\x20.' + '\x20.\x20.\x0d\x0a//\x20.' + '\x202\x20.\x204\x20.\x202' + '\x20.\x0d\x0a//\x20.\x20.' + '\x20.\x20.\x20.\x20.\x20.' + '\x0d\x0a//\x20.\x201\x20.') + ('\x202\x20.\x201\x20.\x0d\x0a' + '//\x20.\x20.\x20.\x20.' + '\x20.\x20.\x20.\x0d\x0ame' + 'diump\x20vec4' + '\x20upsampleT' + 'ent(sample' + 'r2D\x20tex,\x20v' + 'ec2\x20uv,\x20ve' + 'c2\x20texelSi' + 'ze,\x20vec4\x20s' + 'ampleScale' + ')\x0d\x0a{\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20d\x20=\x20t' + 'exelSize.x' + 'yxy\x20*\x20vec4' + '(1.0,\x201.0,' + '\x20-1.0,\x200.0' + ')\x20*\x20sample' + 'Scale;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20vec4\x20s\x20=' + '\x20\x20texture2' + 'D(tex,\x20uv\x20' + '-\x20d.xy);\x0d\x0a' + '\x20\x20\x20\x20s\x20+=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20-\x20d' + '.wy)\x20*\x202.0' + ';\x0d\x0a\x20\x20\x20\x20s\x20+' + '=\x20texture2' + 'D(tex,\x20uv\x20' + '-\x20d.zy);\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.zw)\x20*\x202' + '.0;\x0d\x0a\x20\x20\x20\x20s' + '\x20+=\x20textur' + 'e2D(tex,\x20u' + 'v)\x20*\x204.0;\x0d' + '\x0a\x20\x20\x20\x20s\x20+=\x20' + 'texture2D(' + 'tex,\x09uv\x20+\x20' + 'd.xw)\x20*\x202.' + '0;\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.zy)' + ';\x0d\x0a\x20\x20\x20\x20s\x20+' + '=\x20texture2' + 'D(tex,\x20uv\x20' + '+\x20d.wy)\x20*\x20' + '2.0;\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.xy)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20s\x20*\x20' + '(1.0\x20/\x2016.' + '0);\x0d\x0a}\x0d\x0a\x0d\x0a' + '//\x20Standar' + 'd\x20box\x20filt' + 'ering\x0d\x0amed' + 'iump\x20vec4\x20' + 'upsampleBo' + 'x(sampler2' + 'D\x20tex,\x20vec' + '2\x20uv,\x20vec2' + '\x20texelSize' + ',\x20vec4\x20sam' + 'pleScale)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20d\x20=\x20tex' + 'elSize.xyx' + 'y\x20*\x20vec4(-' + '1.0,\x20-1.0,' + '\x201.0,\x201.0)' + '\x20*\x200.5\x20*\x20s' + 'ampleScale' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20s\x20=\x20\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20d.x' + 'y);\x0d\x0a\x20\x20\x20\x20s' + '\x20+=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20d.zy);' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.xw);\x0d\x0a\x20' + '\x20\x20\x20s\x20+=\x20te' + 'xture2D(te' + 'x,\x20uv\x20+\x20d.' + 'zw);\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20return\x20s' + '\x20*\x20(1.0\x20/\x20' + '4.0);\x0d\x0a}'), _0x64c08a = '#define\x20HA' + 'LF_MAX\x20\x20\x20\x20' + '\x20\x20\x2065504.0' + '\x20//\x20(2\x20-\x202' + '^-10)\x20*\x202^' + '15\x0d\x0a\x0d\x0a#def' + 'ine\x20FLT_EP' + 'SILON\x20\x20\x20\x201' + '.192092896' + 'e-07\x20//\x20Sm' + 'allest\x20pos' + 'itive\x20numb' + 'er,\x20such\x20t' + 'hat\x201.0\x20+\x20' + 'FLT_EPSILO' + 'N\x20!=\x201.0\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec4\x20safeH' + 'DR(mediump' + '\x20vec4\x20c)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20min(c,' + '\x20HALF_MAX)' + ';\x0d\x0a}\x0d\x0a\x0d\x0afl' + 'oat\x20max3(f' + 'loat\x20a,\x20fl' + 'oat\x20b,\x20flo' + 'at\x20c)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20max(max(a' + ',\x20b),\x20c);\x0d' + '\x0a}\x0d\x0a\x0d\x0avec3' + '\x20positiveP' + 'ow(vec3\x20ba' + 'se,\x20vec3\x20p' + 'ower)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20pow(max(a' + 'bs(base),\x20' + 'vec3(FLT_E' + 'PSILON,\x20FL' + 'T_EPSILON,' + '\x20FLT_EPSIL' + 'ON)),\x20powe' + 'r);\x0d\x0a}', _0x12d594 = '#ifndef\x20GR' + 'APHICS_API' + '_GLES3\x0d\x0a\x09#' + 'define\x20NO_' + 'NATIVE_SHA' + 'DOWMAP\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20NO_NA' + 'TIVE_SHADO' + 'WMAP\x0d\x0a\x09#de' + 'fine\x20TEXTU' + 'RE2D_SHADO' + 'W(textureN' + 'ame)\x20unifo' + 'rm\x20mediump' + '\x20sampler2D' + '\x20textureNa' + 'me\x0d\x0a\x09#defi' + 'ne\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(tex' + 'tureName,\x20' + 'coord3)\x20(t' + 'exture2D(t' + 'extureName' + ',coord3.xy' + ').r<coord3' + '.z?0.0:1.0' + ')\x0d\x0a\x09#defin' + 'e\x20TEXTURE2' + 'D_SHADOW_P' + 'ARAM(shado' + 'wMap)\x20medi' + 'ump\x20sample' + 'r2D\x20shadow' + 'Map\x0d\x0a#else' + '\x0d\x0a\x09#define' + '\x20TEXTURE2D' + '_SHADOW(te' + 'xtureName)' + '\x20uniform\x20m' + 'ediump\x20sam' + 'pler2DShad' + 'ow\x20texture' + 'Name\x0d\x0a\x09#de' + 'fine\x20SAMPL' + 'E_TEXTURE2' + 'D_SHADOW(t' + 'extureName' + ',\x20coord3)\x20' + 'textureLod' + '(textureNa' + 'me,coord3,' + '0.0)\x0d\x0a\x09#de' + 'fine\x20TEXTU' + 'RE2D_SHADO' + 'W_PARAM(sh' + 'adowMap)\x20m' + 'ediump\x20sam' + 'pler2DShad' + 'ow\x20shadowM' + 'ap\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(RECE' + 'IVESHADOW)' + '&&defined(' + 'SHADOW)\x0d\x0a\x20' + '\x20\x20\x20#define' + '\x20CALCULATE' + '_SHADOWS\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Shado' + 'wBias;\x20//\x20' + 'x:\x20depth\x20b' + 'ias,\x20y:\x20no' + 'rmal\x20bias\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'CALCULATE_' + 'SHADOWS\x0d\x0a\x09' + '#include\x20\x22' + 'ShadowSamp' + 'leTent.gls' + 'l\x22\x0d\x0a\x0d\x0a\x09TEX' + 'TURE2D_SHA' + 'DOW(u_Shad' + 'owMap);\x0d\x0a\x09' + 'uniform\x20ve' + 'c4\x20u_Shado' + 'wMapSize;\x0d' + '\x0a\x09uniform\x20' + 'vec4\x20u_Sha' + 'dowParams;' + '\x20//\x20x:\x20sha' + 'dowStrengt' + 'h\x0d\x0a\x09unifor' + 'm\x20mat4\x20u_S' + 'hadowMatri' + 'ces[4];\x0d\x0a\x09' + 'uniform\x20ve' + ('c4\x20u_Shado' + 'wSplitSphe' + 'res[4];//\x20' + 'max\x20cascad' + 'e\x20is\x204\x0d\x0a\x0d\x0a' + '\x09mediump\x20i' + 'nt\x20compute' + 'CascadeInd' + 'ex(vec3\x20po' + 'sitionWS)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09vec' + '3\x20fromCent' + 'er0\x20=\x20posi' + 'tionWS\x20-\x20u' + '_ShadowSpl' + 'itSpheres[' + '0].xyz;\x0d\x0a\x09' + '\x09vec3\x20from' + 'Center1\x20=\x20' + 'positionWS' + '\x20-\x20u_Shado' + 'wSplitSphe' + 'res[1].xyz' + ';\x0d\x0a\x09\x09vec3\x20' + 'fromCenter' + '2\x20=\x20positi' + 'onWS\x20-\x20u_S' + 'hadowSplit' + 'Spheres[2]' + '.xyz;\x0d\x0a\x09\x09v' + 'ec3\x20fromCe' + 'nter3\x20=\x20po' + 'sitionWS\x20-' + '\x20u_ShadowS' + 'plitSphere' + 's[3].xyz;\x0d' + '\x0a\x0d\x0a\x09\x09mediu' + 'mp\x20vec4\x20co' + 'mparison\x20=' + '\x20vec4(\x0d\x0a\x09\x09' + '\x09dot(fromC' + 'enter0,\x20fr' + 'omCenter0)' + '<u_ShadowS' + 'plitSphere' + 's[0].w,\x0d\x0a\x09' + '\x09\x09dot(from' + 'Center1,\x20f' + 'romCenter1' + ')<u_Shadow' + 'SplitSpher' + 'es[1].w,\x0d\x0a' + '\x09\x09\x09dot(fro' + 'mCenter2,\x20' + 'fromCenter' + '2)<u_Shado' + 'wSplitSphe' + 'res[2].w,\x0d' + '\x0a\x09\x09\x09dot(fr' + 'omCenter3,' + '\x20fromCente' + 'r3)<u_Shad' + 'owSplitSph' + 'eres[3].w)' + ';\x0d\x0a\x09\x09compa' + 'rison.yzw\x20' + '=\x20clamp(co' + 'mparison.y' + 'zw\x20-\x20compa' + 'rison.xyz,' + '0.0,1.0);/' + '/keep\x20the\x20' + 'nearest\x0d\x0a\x09' + '\x09mediump\x20v' + 'ec4\x20indexC' + 'oefficient' + '\x20=\x20vec4(4.' + '0,3.0,2.0,' + '1.0);\x0d\x0a\x09\x09m' + 'ediump\x20int' + '\x20index\x20=\x204' + '\x20-\x20int(dot' + '(compariso' + 'n,\x20indexCo' + 'efficient)' + ');\x0d\x0a\x09\x09retu' + 'rn\x20index;\x0d' + '\x0a\x09}\x0d\x0a\x0d\x0a\x09ve' + 'c4\x20getShad' + 'owCoord(ve' + 'c4\x20positio' + 'nWS)\x0d\x0a\x09{\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'HADOW_CASC' + 'ADE\x0d\x0a\x09\x09\x09me' + 'diump\x20int\x20' + 'cascadeInd' + 'ex\x20=\x20compu' + 'teCascadeI' + 'ndex(posit') + ('ionWS.xyz)' + ';\x0d\x0a\x09\x09\x09if(c' + 'ascadeInde' + 'x\x20>\x203)//\x20o' + 'ut\x20of\x20shad' + 'ow\x20range\x20c' + 'ascadeInde' + 'x\x20is\x204.\x0d\x0a\x09' + '\x09\x09\x09return\x20' + 'vec4(0.0);' + '\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09' + '#ifdef\x20GRA' + 'PHICS_API_' + 'GLES3\x0d\x0a\x09\x09\x09' + '\x09return\x20u_' + 'ShadowMatr' + 'ices[casca' + 'deIndex]\x20*' + '\x20positionW' + 'S;\x0d\x0a\x09\x09\x09#el' + 'se\x0d\x0a\x09\x09\x09\x09ma' + 't4\x20shadowM' + 'at;\x0d\x0a\x09\x09\x09\x09i' + 'f(cascadeI' + 'ndex\x20==\x200)' + '\x0d\x0a\x09\x09\x09\x09\x09sha' + 'dowMat\x20=\x20u' + '_ShadowMat' + 'rices[0];\x0d' + '\x0a\x09\x09\x09\x09else\x20' + 'if(cascade' + 'Index\x20==\x201' + ')\x0d\x0a\x09\x09\x09\x09\x09sh' + 'adowMat\x20=\x20' + 'u_ShadowMa' + 'trices[1];' + '\x0d\x0a\x09\x09\x09\x09else' + '\x20if(cascad' + 'eIndex\x20==\x20' + '2)\x0d\x0a\x09\x09\x09\x09\x09s' + 'hadowMat\x20=' + '\x20u_ShadowM' + 'atrices[2]' + ';\x0d\x0a\x09\x09\x09\x09els' + 'e\x0d\x0a\x09\x09\x09\x09\x09sh' + 'adowMat\x20=\x20' + 'u_ShadowMa' + 'trices[3];' + '\x0d\x0a\x09\x09\x09\x09retu' + 'rn\x20shadowM' + 'at\x20*\x20posit' + 'ionWS;\x0d\x0a\x09\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09return\x20u_' + 'ShadowMatr' + 'ices[0]\x20*\x20' + 'positionWS' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09' + 'float\x20samp' + 'leShdowMap' + 'Filtered4(' + 'TEXTURE2D_' + 'SHADOW_PAR' + 'AM(shadowM' + 'ap),vec3\x20s' + 'hadowCoord' + ',vec4\x20shad' + 'owMapSize)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09fl' + 'oat\x20attenu' + 'ation;\x0d\x0a\x09\x09' + 'vec4\x20atten' + 'uation4;\x0d\x0a' + '\x09\x09vec2\x20off' + 'set=shadow' + 'MapSize.xy' + '/2.0;\x0d\x0a\x09\x09v' + 'ec3\x20shadow' + 'Coord0=sha' + 'dowCoord\x20+' + '\x20vec3(-off' + 'set,0.0);\x0d' + '\x0a\x09\x09vec3\x20sh' + 'adowCoord1' + '=shadowCoo' + 'rd\x20+\x20vec3(' + 'offset.x,-' + 'offset.y,0' + '.0);\x0d\x0a\x09\x09ve' + 'c3\x20shadowC' + 'oord2=shad' + 'owCoord\x20+\x20' + 'vec3(-offs' + 'et.x,offse' + 't.y,0.0);\x0d' + '\x0a\x09\x09vec3\x20sh' + 'adowCoord3' + '=shadowCoo') + ('rd\x20+\x20vec3(' + 'offset,0.0' + ');\x0d\x0a\x09\x09atte' + 'nuation4.x' + '\x20=\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(sha' + 'dowMap,\x20sh' + 'adowCoord0' + ');\x0d\x0a\x09\x09atte' + 'nuation4.y' + '\x20=\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(sha' + 'dowMap,\x20sh' + 'adowCoord1' + ');\x0d\x0a\x09\x09atte' + 'nuation4.z' + '\x20=\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(sha' + 'dowMap,\x20sh' + 'adowCoord2' + ');\x0d\x0a\x09\x09atte' + 'nuation4.w' + '\x20=\x20SAMPLE_' + 'TEXTURE2D_' + 'SHADOW(sha' + 'dowMap,\x20sh' + 'adowCoord3' + ');\x0d\x0a\x09\x09atte' + 'nuation\x20=\x20' + 'dot(attenu' + 'ation4,\x20ve' + 'c4(0.25));' + '\x0d\x0a\x09\x09return' + '\x20attenuati' + 'on;\x0d\x0a\x09}\x0d\x0a\x0d' + '\x0a\x09float\x20sa' + 'mpleShdowM' + 'apFiltered' + '9(TEXTURE2' + 'D_SHADOW_P' + 'ARAM(shado' + 'wMap),vec3' + '\x20shadowCoo' + 'rd,vec4\x20sh' + 'adowmapSiz' + 'e)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'float\x20atte' + 'nuation;\x0d\x0a' + '\x09\x09float\x20fe' + 'tchesWeigh' + 'ts[9];\x0d\x0a\x09\x09' + 'vec2\x20fetch' + 'esUV[9];\x0d\x0a' + '\x09\x09sampleSh' + 'adowComput' + 'eSamplesTe' + 'nt5x5(shad' + 'owmapSize,' + '\x20shadowCoo' + 'rd.xy,\x20fet' + 'chesWeight' + 's,\x20fetches' + 'UV);\x0d\x0a\x09\x09at' + 'tenuation\x20' + '=\x20fetchesW' + 'eights[0]\x20' + '*\x20SAMPLE_T' + 'EXTURE2D_S' + 'HADOW(shad' + 'owMap,\x20vec' + '3(fetchesU' + 'V[0].xy,\x20s' + 'hadowCoord' + '.z));\x0d\x0a\x09\x09a' + 'ttenuation' + '\x20+=\x20fetche' + 'sWeights[1' + ']\x20*\x20SAMPLE' + '_TEXTURE2D' + '_SHADOW(sh' + 'adowMap,\x20v' + 'ec3(fetche' + 'sUV[1].xy,' + '\x20shadowCoo' + 'rd.z));\x0d\x0a\x09' + '\x09attenuati' + 'on\x20+=\x20fetc' + 'hesWeights' + '[2]\x20*\x20SAMP' + 'LE_TEXTURE' + '2D_SHADOW(' + 'shadowMap,' + '\x20vec3(fetc' + 'hesUV[2].x' + 'y,\x20shadowC' + 'oord.z));\x0d' + '\x0a\x09\x09attenua') + ('tion\x20+=\x20fe' + 'tchesWeigh' + 'ts[3]\x20*\x20SA' + 'MPLE_TEXTU' + 'RE2D_SHADO' + 'W(shadowMa' + 'p,\x20vec3(fe' + 'tchesUV[3]' + '.xy,\x20shado' + 'wCoord.z))' + ';\x0d\x0a\x09\x09atten' + 'uation\x20+=\x20' + 'fetchesWei' + 'ghts[4]\x20*\x20' + 'SAMPLE_TEX' + 'TURE2D_SHA' + 'DOW(shadow' + 'Map,\x20vec3(' + 'fetchesUV[' + '4].xy,\x20sha' + 'dowCoord.z' + '));\x0d\x0a\x09\x09att' + 'enuation\x20+' + '=\x20fetchesW' + 'eights[5]\x20' + '*\x20SAMPLE_T' + 'EXTURE2D_S' + 'HADOW(shad' + 'owMap,\x20vec' + '3(fetchesU' + 'V[5].xy,\x20s' + 'hadowCoord' + '.z));\x0d\x0a\x09\x09a' + 'ttenuation' + '\x20+=\x20fetche' + 'sWeights[6' + ']\x20*\x20SAMPLE' + '_TEXTURE2D' + '_SHADOW(sh' + 'adowMap,\x20v' + 'ec3(fetche' + 'sUV[6].xy,' + '\x20shadowCoo' + 'rd.z));\x0d\x0a\x09' + '\x09attenuati' + 'on\x20+=\x20fetc' + 'hesWeights' + '[7]\x20*\x20SAMP' + 'LE_TEXTURE' + '2D_SHADOW(' + 'shadowMap,' + '\x20vec3(fetc' + 'hesUV[7].x' + 'y,\x20shadowC' + 'oord.z));\x0d' + '\x0a\x09\x09attenua' + 'tion\x20+=\x20fe' + 'tchesWeigh' + 'ts[8]\x20*\x20SA' + 'MPLE_TEXTU' + 'RE2D_SHADO' + 'W(shadowMa' + 'p,\x20vec3(fe' + 'tchesUV[8]' + '.xy,\x20shado' + 'wCoord.z))' + ';\x0d\x0a\x09\x09retur' + 'n\x20attenuat' + 'ion;\x0d\x0a\x09}\x0d\x0a' + '\x0d\x0a\x09float\x20s' + 'ampleShado' + 'wmap(vec4\x20' + 'shadowCoor' + 'd)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'shadowCoor' + 'd.xyz\x20/=\x20s' + 'hadowCoord' + '.w;\x0d\x0a\x09\x09flo' + 'at\x20attenua' + 'tion\x20=\x201.0' + ';\x0d\x0a\x09\x09if(sh' + 'adowCoord.' + 'z\x20>\x200.0\x20&&' + '\x20shadowCoo' + 'rd.z\x20<\x201.0' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09#if\x20defin' + 'ed(SHADOW_' + 'SOFT_SHADO' + 'W_HIGH)\x0d\x0a\x09' + '\x09\x09\x09attenua' + 'tion\x20=\x20sam' + 'pleShdowMa' + 'pFiltered9' + '(u_ShadowM' + 'ap,shadowC' + 'oord.xyz,u' + '_ShadowMap' + 'Size);\x0d\x0a\x09\x09' + '\x09#elif\x20def') + ('ined(SHADO' + 'W_SOFT_SHA' + 'DOW_LOW)\x0d\x0a' + '\x09\x09\x09\x09attenu' + 'ation\x20=\x20sa' + 'mpleShdowM' + 'apFiltered' + '4(u_Shadow' + 'Map,shadow' + 'Coord.xyz,' + 'u_ShadowMa' + 'pSize);\x0d\x0a\x09' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09\x09attenua' + 'tion\x20=\x20SAM' + 'PLE_TEXTUR' + 'E2D_SHADOW' + '(u_ShadowM' + 'ap,shadowC' + 'oord.xyz);' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x09atte' + 'nuation\x20=\x20' + 'mix(1.0,at' + 'tenuation,' + 'u_ShadowPa' + 'rams.x);//' + 'shadowPara' + 'ms.x:shado' + 'w\x20strength' + '\x0d\x0a\x09\x09}\x0d\x0a\x09\x09r' + 'eturn\x20atte' + 'nuation;\x0d\x0a' + '\x09}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0avec3\x20a' + 'pplyShadow' + 'Bias(vec3\x20' + 'positionWS' + ',\x20vec3\x20nor' + 'malWS,\x20vec' + '3\x20lightDir' + 'ection)\x0d\x0a{' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20invNdotL' + '\x20=\x201.0\x20-\x20c' + 'lamp(dot(-' + 'lightDirec' + 'tion,\x20norm' + 'alWS),0.0,' + '1.0);\x0d\x0a\x20\x20\x20' + '\x20float\x20sca' + 'le\x20=\x20invNd' + 'otL\x20*\x20u_Sh' + 'adowBias.y' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20/' + '/\x20normal\x20b' + 'ias\x20is\x20neg' + 'ative\x20sinc' + 'e\x20we\x20want\x20' + 'to\x20apply\x20a' + 'n\x20inset\x20no' + 'rmal\x20offse' + 't\x0d\x0a\x20\x20\x20\x20pos' + 'itionWS\x20+=' + '\x20-lightDir' + 'ection\x20*\x20u' + '_ShadowBia' + 's.xxx;\x0d\x0a\x20\x20' + '\x20\x20position' + 'WS\x20+=\x20norm' + 'alWS\x20*\x20vec' + '3(scale);\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20position' + 'WS;\x0d\x0a}\x0d\x0a'), _0x376d38 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a#in' + 'clude\x20\x22Sha' + 'dow.glsl\x22\x0d' + '\x0a\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Position;\x0d' + '\x0aattribute' + '\x20vec3\x20a_No' + 'rmal;\x0d\x0a\x0d\x0a#' + 'ifdef\x20BONE' + '\x0d\x0a\x09const\x20i' + 'nt\x20c_MaxBo' + 'neCount\x20=\x20' + '24;\x0d\x0a\x09attr' + 'ibute\x20vec4' + '\x20a_BoneInd' + 'ices;\x0d\x0a\x09at' + 'tribute\x20ve' + 'c4\x20a_BoneW' + 'eights;\x0d\x0a\x09' + 'uniform\x20ma' + 't4\x20u_Bones' + '[c_MaxBone' + 'Count];\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20GPU_' + 'INSTANCE\x0d\x0a' + '\x09attribute' + '\x20mat4\x20a_Wo' + 'rldMat;\x0d\x0a#' + 'else\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_WorldMat' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0auniform' + '\x20mat4\x20u_Vi' + 'ewProjecti' + 'on;\x0d\x0a\x0d\x0auni' + 'form\x20vec3\x20' + 'u_ShadowLi' + 'ghtDirecti' + 'on;\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IFFUSEMAP)' + '||((define' + 'd(DIRECTIO' + 'NLIGHT)||d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT))&' + '&(defined(' + 'SPECULARMA' + 'P)||define' + 'd(NORMALMA' + 'P)))||(def' + 'ined(LIGHT' + 'MAP)&&defi' + 'ned(UV))\x0d\x0a' + '\x09attribute' + '\x20vec2\x20a_Te' + 'xcoord0;\x0d\x0a' + '\x09varying\x20v' + 'ec2\x20v_Texc' + 'oord0;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0ave' + 'c4\x20shadowC' + 'asterVerte' + 'x()\x0d\x0a{\x0d\x0a\x09m' + 'at4\x20worldM' + 'at;\x0d\x0a\x09#ifd' + 'ef\x20GPU_INS' + 'TANCE\x0d\x0a\x09\x09w' + 'orldMat\x20=\x20' + 'a_WorldMat' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09worldMa' + 't\x20=\x20u_Worl' + 'dMat;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x0d\x0a\x09' + '#ifdef\x20BON' + 'E\x0d\x0a\x09\x09mat4\x20' + 'skinTransf' + 'orm\x20=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.x)]\x20*\x20a_' + 'BoneWeight' + 's.x;\x0d\x0a\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20u_Bon' + 'es[int(a_B' + 'oneIndices' + '.y)]\x20*\x20a_B' + 'oneWeights' + '.y;\x0d\x0a\x09\x09ski' + 'nTransform' + '\x20+=\x20u_Bone' + ('s[int(a_Bo' + 'neIndices.' + 'z)]\x20*\x20a_Bo' + 'neWeights.' + 'z;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.w' + ')]\x20*\x20a_Bon' + 'eWeights.w' + ';\x0d\x0a\x09\x09world' + 'Mat\x20=\x20worl' + 'dMat\x20*\x20ski' + 'nTransform' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09vec4\x20' + 'positionWS' + '\x20=\x20worldMa' + 't\x20*\x20a_Posi' + 'tion;\x0d\x0a\x09ve' + 'c3\x20normalW' + 'S\x20=\x20normal' + 'ize(a_Norm' + 'al*INVERSE' + '_MAT(mat3(' + 'worldMat))' + ');//if\x20no\x20' + 'normalize\x20' + 'will\x20cause' + '\x20precision' + '\x20problem\x0d\x0a' + '\x0d\x0a\x09positio' + 'nWS.xyz\x20=\x20' + 'applyShado' + 'wBias(posi' + 'tionWS.xyz' + ',normalWS,' + 'u_ShadowLi' + 'ghtDirecti' + 'on);\x0d\x0a\x0d\x0a\x09v' + 'ec4\x20positi' + 'onCS\x20=\x20u_V' + 'iewProject' + 'ion\x20*\x20posi' + 'tionWS;\x0d\x0a\x09' + 'positionCS' + '.z\x20=\x20max(p' + 'ositionCS.' + 'z,\x200.0);//' + 'min\x20ndc\x20z\x20' + 'is\x200.0\x0d\x0a\x0d\x0a' + '\x09//\x20//TODO' + '没考虑UV动画呢\x0d\x0a' + '\x09//\x20#if\x20de' + 'fined(DIFF' + 'USEMAP)&&d' + 'efined(ALP' + 'HATEST)\x0d\x0a\x09' + '//\x20\x09v_Texc' + 'oord0=a_Te' + 'xcoord0;\x0d\x0a' + '\x09//\x20#endif' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20positio' + 'nCS;\x0d\x0a}\x0d\x0a'), _0x360958 = '//\x20#ifdef\x20' + 'ALPHATEST\x0d' + '\x0a//\x20\x09unifo' + 'rm\x20float\x20u' + '_AlphaTest' + 'Value;\x0d\x0a//' + '\x20#endif\x0d\x0a\x0d' + '\x0a//\x20#ifdef' + '\x20DIFFUSEMA' + 'P\x0d\x0a//\x20\x09uni' + 'form\x20sampl' + 'er2D\x20u_Dif' + 'fuseTextur' + 'e;\x0d\x0a//\x20#en' + 'dif\x0d\x0a\x0d\x0a//\x20' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)||((def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + '))&&(defin' + 'ed(SPECULA' + 'RMAP)||def' + 'ined(NORMA' + 'LMAP)))\x0d\x0a/' + '/\x20\x09varying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + '//\x20#endif\x0d' + '\x0a\x0d\x0avec4\x20sh' + 'adowCaster' + 'Fragment()' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20vec4' + '(0.0);\x0d\x0a\x20\x20' + '\x20\x20//\x20#if\x20d' + 'efined(DIF' + 'FUSEMAP)&&' + 'defined(AL' + 'PHATEST)\x0d\x0a' + '\x09//\x20\x09float' + '\x20alpha\x20=\x20t' + 'exture2D(u' + '_DiffuseTe' + 'xture,v_Te' + 'xcoord0).w' + ';\x0d\x0a\x09//\x20\x09if' + '(\x20alpha\x20<\x20' + 'u_AlphaTes' + 'tValue\x20)\x0d\x0a' + '\x09//\x20\x09{\x0d\x0a\x09/' + '/\x20\x09\x09discar' + 'd;\x0d\x0a\x09//\x20\x09}' + '\x0d\x0a\x09//\x20#end' + 'if\x0d\x0a}\x0d\x0a', _0x5bb4dd = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0apreci' + 'sion\x20highp' + '\x20float;\x0d\x0a#' + 'else\x0d\x0aprec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec3\x20v_Tex' + 'coord;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mplerCube\x20' + 'u_CubeText' + 'ure;\x0d\x0aunif' + 'orm\x20float\x20' + 'u_Exposure' + ';\x0d\x0auniform' + '\x20vec4\x20u_Ti' + 'ntColor;\x0d\x0a' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x09\x0d' + '\x0a\x09vec3\x20col' + 'or=texture' + 'Cube(u_Cub' + 'eTexture,\x20' + 'v_Texcoord' + ').rgb*u_Ti' + 'ntColor.rg' + 'b*u_Exposu' + 're*2.0;\x0d\x0a\x09' + 'gl_FragCol' + 'or=vec4(co' + 'lor,1.0);\x0d' + '\x0a}\x0d\x0a\x0d\x0a', _0xc60afb = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0auni' + 'form\x20mat4\x20' + 'u_ViewProj' + 'ection;\x0d\x0au' + 'niform\x20flo' + 'at\x20u_Rotat' + 'ion;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_Texcoord;' + '\x0d\x0a\x0d\x0a\x0d\x0avec4' + '\x20rotateAro' + 'undYInDegr' + 'ees\x20(vec4\x20' + 'vertex,\x20fl' + 'oat\x20degree' + 's)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20angle\x20' + '=\x20degrees\x20' + '*\x203.141593' + '\x20/\x20180.0;\x0d' + '\x0a\x09float\x20si' + 'na=sin(ang' + 'le);\x0d\x0a\x09flo' + 'at\x20cosa=co' + 's(angle);\x0d' + '\x0a\x09mat2\x20m\x20=' + '\x20mat2(cosa' + ',\x20-sina,\x20s' + 'ina,\x20cosa)' + ';\x0d\x0a\x09return' + '\x20vec4(m*ve' + 'rtex.xz,\x20v' + 'ertex.yw).' + 'xzyw;\x0d\x0a}\x0d\x0a' + '\x09\x09\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tion=rotat' + 'eAroundYIn' + 'Degrees(a_' + 'Position,u' + '_Rotation)' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20u_' + 'ViewProjec' + 'tion*posit' + 'ion;\x0d\x0a\x09v_T' + 'excoord=ve' + 'c3(-a_Posi' + 'tion.x,a_P' + 'osition.yz' + ');//转换坐标系\x0d' + '\x0a\x09gl_Posit' + 'ion=remapG' + 'LPositionZ' + '(gl_Positi' + 'on);\x0d\x0a}\x0d\x0a', _0x36d4d7 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0aconst\x20f' + 'loat\x20MIE_G' + '\x20=\x20-0.990;' + '\x0d\x0aconst\x20fl' + 'oat\x20MIE_G2' + '\x20=\x200.9801;' + '\x0d\x0aconst\x20fl' + 'oat\x20SKY_GR' + 'OUND_THRES' + 'HOLD\x20=\x200.0' + '2;\x0d\x0a\x0d\x0aunif' + 'orm\x20float\x20' + 'u_SunSize;' + '\x0d\x0auniform\x20' + 'float\x20u_Su' + 'nSizeConve' + 'rgence;\x0d\x0au' + 'niform\x20Dir' + 'ectionLigh' + 't\x20u_SunLig' + 'ht;\x0d\x0a\x0d\x0a\x0d\x0av' + 'arying\x20vec' + '3\x20v_Ground' + 'Color;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_SkyColo' + 'r;\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'fdef\x20SUN_H' + 'IGH_QUALIT' + 'Y\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_V' + 'ertex;\x0d\x0a#e' + 'lif\x20define' + 'd(SUN_SIMP' + 'LE)\x0d\x0a\x09vary' + 'ing\x20vec3\x20v' + '_RayDir;\x0d\x0a' + '#else\x0d\x0a\x09va' + 'rying\x20floa' + 't\x20v_SkyGro' + 'undFactor;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(SUN_HI' + 'GH_QUALITY' + ')||defined' + '(SUN_SIMPL' + 'E)\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'SunColor;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a//\x20Calcul' + 'ates\x20the\x20M' + 'ie\x20phase\x20f' + 'unction\x0d\x0af' + 'loat\x20getMi' + 'ePhase(flo' + 'at\x20eyeCos,' + '\x20float\x20eye' + 'Cos2)\x20{\x0d\x0a\x09' + 'float\x20temp' + '\x20=\x201.0\x20+\x20M' + 'IE_G2\x20-\x202.' + '0\x20*\x20MIE_G\x20' + '*\x20eyeCos;\x0d' + '\x0a\x09temp\x20=\x20p' + 'ow(temp,\x20p' + 'ow(u_SunSi' + 'ze,0.65)\x20*' + '\x2010.0);\x0d\x0a\x09' + 'temp\x20=\x20max' + '(temp,1.0e' + '-4);\x20//\x20pr' + 'event\x20divi' + 'sion\x20by\x20ze' + 'ro,\x20esp.\x20i' + 'n\x20half\x20pre' + 'cision\x0d\x0a\x09t' + 'emp\x20=\x201.5\x20' + '*\x20((1.0\x20-\x20' + 'MIE_G2)\x20/\x20' + '(2.0\x20+\x20MIE' + '_G2))\x20*\x20(1' + '.0\x20+\x20eyeCo' + 's2)\x20/\x20temp' + ';\x0d\x0a\x09return' + '\x20temp;\x0d\x0a}\x0d' + ('\x0a\x0d\x0a//\x20Calc' + 'ulates\x20the' + '\x20sun\x20shape' + '\x0d\x0afloat\x20ca' + 'lcSunAtten' + 'uation(vec' + '3\x20lightPos' + ',\x20vec3\x20ray' + ')\x20{\x0d\x0a\x09#ifd' + 'ef\x20SUN_HIG' + 'H_QUALITY\x0d' + '\x0a\x09\x09float\x20f' + 'ocusedEyeC' + 'os\x20=\x20pow(c' + 'lamp(dot(l' + 'ightPos,\x20r' + 'ay),0.0,1.' + '0),\x20u_SunS' + 'izeConverg' + 'ence);\x0d\x0a\x09\x09' + 'return\x20get' + 'MiePhase(-' + 'focusedEye' + 'Cos,\x20focus' + 'edEyeCos\x20*' + '\x20focusedEy' + 'eCos);\x0d\x0a\x09#' + 'else\x20//SUN' + '_SIMPLE\x0d\x0a\x09' + '\x09vec3\x20delt' + 'a\x20=\x20lightP' + 'os\x20-\x20ray;\x0d' + '\x0a\x09\x09float\x20d' + 'ist\x20=\x20leng' + 'th(delta);' + '\x0d\x0a\x09\x09float\x20' + 'spot\x20=\x201.0' + '\x20-\x20smooths' + 'tep(0.0,\x20u' + '_SunSize,\x20' + 'dist);\x0d\x0a\x09\x09' + 'return\x20spo' + 't\x20*\x20spot;\x0d' + '\x0a\x09#endif\x0d\x0a' + '}\x0d\x0a\x0d\x0avoid\x20' + 'main()\x20{\x0d\x0a' + '\x09//\x20if\x20y\x20>' + '\x201\x20[eyeRay' + '.y\x20<\x20-SKY_' + 'GROUND_THR' + 'ESHOLD]\x20-\x20' + 'ground\x0d\x0a\x09/' + '/\x20if\x20y\x20>=\x20' + '0\x20and\x20<\x201\x20' + '[eyeRay.y\x20' + '<=\x200\x20and\x20>' + '\x20-SKY_GROU' + 'ND_THRESHO' + 'LD]\x20-\x20hori' + 'zon\x0d\x0a\x09//\x20i' + 'f\x20y\x20<\x200\x20[e' + 'yeRay.y\x20>\x20' + '0]\x20-\x20sky\x0d\x0a' + '\x09vec3\x20col\x20' + '=\x20vec3(0.0' + ',\x200.0,\x200.0' + ');\x0d\x0a\x0d\x0a\x09#if' + 'def\x20SUN_HI' + 'GH_QUALITY' + '\x0d\x0a\x09\x09vec3\x20r' + 'ay\x20=\x20norma' + 'lize(v_Ver' + 'tex);\x0d\x0a\x09\x09f' + 'loat\x20y\x20=\x20r' + 'ay.y\x20/\x20SKY' + '_GROUND_TH' + 'RESHOLD;\x0d\x0a' + '\x09#elif\x20def' + 'ined(SUN_S' + 'IMPLE)\x20\x0d\x0a\x09' + '\x09vec3\x20ray\x20' + '=\x20v_RayDir' + ';\x0d\x0a\x09\x09float' + '\x20y\x20=\x20ray.y' + '\x20/\x20SKY_GRO' + 'UND_THRESH' + 'OLD;\x09\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09flo' + 'at\x20y\x20=\x20v_S' + 'kyGroundFa' + 'ctor;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09/' + '/\x20if\x20we\x20di' + 'd\x20precalcu' + 'late\x20color' + '\x20in\x20vprog:' + '\x20just\x20do\x20l' + 'erp\x20betwee' + 'n\x20them\x0d\x0a\x09c' + 'ol\x20=\x20mix(v') + ('_SkyColor,' + '\x20v_GroundC' + 'olor,\x20clam' + 'p(y,0.0,1.' + '0));\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(SUN_HIGH_' + 'QUALITY)||' + 'defined(SU' + 'N_SIMPLE)\x0d' + '\x0a\x09\x09if\x20(y\x20<' + '\x200.0)\x0d\x0a\x09\x09\x09' + 'col\x20+=\x20v_S' + 'unColor\x20*\x20' + 'calcSunAtt' + 'enuation(-' + 'u_SunLight' + '.direction' + ',\x20-ray);\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x09col\x20=\x20sq' + 'rt(col);//' + 'linear\x20spa' + 'ce\x20convert' + '\x20to\x20gamma\x20' + 'space\x0d\x0a\x09gl' + '_FragColor' + '=vec4(col,' + '1.0);\x0d\x0a}\x0d\x0a' + '\x0d\x0a'), _0x58e52b = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0a#define' + '\x20OUTER_RAD' + 'IUS\x201.025\x0d' + '\x0a#define\x20R' + 'AYLEIGH\x20(m' + 'ix(0.0,\x200.' + '0025,\x20pow(' + 'u_Atmosphe' + 'reThicknes' + 's,2.5)))//' + '\x20Rayleigh\x20' + 'constant\x20R' + 'ayleigh为夜空' + '光和极光亮度单位\x0d\x0a' + '#define\x20MI' + 'E\x200.0010\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20//\x20Mie\x20co' + 'nstant\x20米氏散' + '射\x0d\x0a#define' + '\x20SUN_BRIGH' + 'TNESS\x2020.0' + '\x20\x20\x20\x20//\x20Sun' + '\x20brightnes' + 's\x0d\x0a#define' + '\x20MAX_SCATT' + 'ER\x2050.0\x20//' + '\x20Maximum\x20s' + 'cattering\x20' + 'value,\x20to\x20' + 'prevent\x20ma' + 'th\x20overflo' + 'ws\x20on\x20Adre' + 'nos\x0d\x0a\x0d\x0acon' + 'st\x20float\x20S' + 'KY_GROUND_' + 'THRESHOLD\x20' + '=\x200.02;\x0d\x0ac' + 'onst\x20float' + '\x20outerRadi' + 'us\x20=\x20OUTER' + '_RADIUS;\x0d\x0a' + 'const\x20floa' + 't\x20outerRad' + 'ius2\x20=\x20OUT' + 'ER_RADIUS*' + 'OUTER_RADI' + 'US;\x0d\x0aconst' + '\x20float\x20inn' + 'erRadius\x20=' + '\x201.0;\x0d\x0acon' + 'st\x20float\x20i' + 'nnerRadius' + '2\x20=\x201.0;\x0d\x0a' + 'const\x20floa' + 't\x20cameraHe' + 'ight\x20=\x200.0' + '001;\x0d\x0a\x0d\x0aco' + 'nst\x20float\x20' + 'HDSundiskI' + 'ntensityFa' + 'ctor\x20=\x2015.' + '0;\x0d\x0aconst\x20' + 'float\x20simp' + 'leSundiskI' + 'ntensityFa' + 'ctor\x20=\x2027.' + '0;\x0d\x0a\x0d\x0acons' + 't\x20float\x20su' + 'nScale\x20=\x204' + '00.0\x20*\x20SUN' + '_BRIGHTNES' + 'S;\x0d\x0aconst\x20' + 'float\x20kmES' + 'un\x20=\x20MIE\x20*' + '\x20SUN_BRIGH' + 'TNESS;\x0d\x0aco' + 'nst\x20float\x20' + 'km4PI\x20=\x20MI' + 'E\x20*\x204.0\x20*\x20' + '3.14159265' + ';\x0d\x0aconst\x20f' + 'loat\x20scale' + '\x20=\x201.0\x20/\x20(' + 'OUTER_RADI' + 'US\x20-\x201.0);' + '\x0d\x0aconst\x20fl' + ('oat\x20scaleD' + 'epth\x20=\x200.2' + '5;\x0d\x0aconst\x20' + 'float\x20scal' + 'eOverScale' + 'Depth\x20=\x20(1' + '.0\x20/\x20(OUTE' + 'R_RADIUS\x20-' + '\x201.0))\x20/\x200' + '.25;\x0d\x0acons' + 't\x20float\x20sa' + 'mples\x20=\x202.' + '0;\x20//\x20THIS' + '\x20IS\x20UNROLL' + 'ED\x20MANUALL' + 'Y,\x20DON\x27T\x20T' + 'OUCH\x0d\x0a\x0d\x0a//' + '\x20RGB\x20wavel' + 'engths\x20\x20\x20\x20' + '\x20\x20\x20\x20.35\x20(.' + '62=158),\x20.' + '43\x20(.68=17' + '4),\x20.525\x20(' + '.75=190)\x0d\x0a' + 'const\x20vec3' + '\x20c_Default' + 'Scattering' + 'Wavelength' + '\x20=\x20vec3(0.' + '65,\x200.57,\x20' + '0.475);//默' + '认散射波长\x0d\x0acon' + 'st\x20vec3\x20c_' + 'VariableRa' + 'ngeForScat' + 'teringWave' + 'length\x20=\x20v' + 'ec3(0.15,\x20' + '0.15,\x200.15' + ');//散射播放的可' + '变范围\x0d\x0a\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Positi' + 'on;\x0d\x0a\x0d\x0auni' + 'form\x20mat4\x20' + 'u_ViewProj' + 'ection;\x0d\x0au' + 'niform\x20vec' + '3\x20u_SkyTin' + 't;\x0d\x0aunifor' + 'm\x20vec3\x20u_G' + 'roundTint;' + '\x0d\x0auniform\x20' + 'float\x20u_Ex' + 'posure;\x0d\x0au' + 'niform\x20flo' + 'at\x20u_Atmos' + 'phereThick' + 'ness;\x0d\x0auni' + 'form\x20Direc' + 'tionLight\x20' + 'u_SunLight' + ';\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'GroundColo' + 'r;\x0d\x0avaryin' + 'g\x20vec3\x20v_S' + 'kyColor;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'UN_HIGH_QU' + 'ALITY\x0d\x0a\x09va' + 'rying\x20vec3' + '\x20v_Vertex;' + '\x0d\x0a#elif\x20de' + 'fined(SUN_' + 'SIMPLE)\x0d\x0a\x09' + 'varying\x20ve' + 'c3\x20v_RayDi' + 'r;\x0d\x0a#else\x0d' + '\x0a\x09varying\x20' + 'float\x20v_Sk' + 'yGroundFac' + 'tor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(SU' + 'N_HIGH_QUA' + 'LITY)||def' + 'ined(SUN_S' + 'IMPLE)\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_SunCol' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a//\x20Ca' + 'lculates\x20t' + 'he\x20Rayleig' + 'h\x20phase\x20fu' + 'nction\x0d\x0afl' + 'oat\x20getRay' + 'leighPhase' + '(vec3\x20ligh') + ('t,\x20vec3\x20ra' + 'y)\x20\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20eyeCo' + 's\x20=\x20dot(li' + 'ght,\x20ray);' + '\x0d\x0a\x09return\x20' + '0.75\x20+\x200.7' + '5*eyeCos*e' + 'yeCos;\x0d\x0a}\x0d' + '\x0a\x0d\x0afloat\x20s' + 'caleAngle(' + 'float\x20inCo' + 's)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20x\x20=\x201.' + '0\x20-\x20inCos;' + '\x0d\x0a\x09return\x20' + '0.25\x20*\x20exp' + '(-0.00287\x20' + '+\x20x*(0.459' + '\x20+\x20x*(3.83' + '\x20+\x20x*(-6.8' + '0\x20+\x20x*5.25' + '))));\x0d\x0a}\x0d\x0a' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain\x20()\x20{\x0d\x0a' + '\x09gl_Positi' + 'on\x20=\x20u_Vie' + 'wProjectio' + 'n*a_Positi' + 'on;\x0d\x0a\x0d\x0a\x09ve' + 'c3\x20skyTint' + 'InGammaSpa' + 'ce\x20=\x20u_Sky' + 'Tint;//支持非' + 'GAMMA空间后要调' + '整\x0d\x0a\x09vec3\x20s' + 'catteringW' + 'avelength\x20' + '=\x20mix(c_De' + 'faultScatt' + 'eringWavel' + 'ength-c_Va' + 'riableRang' + 'eForScatte' + 'ringWavele' + 'ngth,c_Def' + 'aultScatte' + 'ringWavele' + 'ngth+c_Var' + 'iableRange' + 'ForScatter' + 'ingWavelen' + 'gth,vec3(1' + '.0)\x20-\x20skyT' + 'intInGamma' + 'Space);\x20//' + '\x20using\x20Tin' + 't\x20in\x20sRGB+' + '\x20gamma\x20all' + 'ows\x20for\x20mo' + 're\x20visuall' + 'y\x20linear\x20i' + 'nterpolati' + 'on\x20and\x20to\x20' + 'keep\x20(0.5)' + '\x20at\x20(128,\x20' + 'gray\x20in\x20sR' + 'GB)\x20point\x0d' + '\x0a\x09vec3\x20inv' + 'Wavelength' + '\x20=\x201.0\x20/\x20p' + 'ow(scatter' + 'ingWavelen' + 'gth,\x20vec3(' + '4.0));\x0d\x0a\x0d\x0a' + '\x09float\x20krE' + 'Sun\x20=\x20RAYL' + 'EIGH\x20*\x20SUN' + '_BRIGHTNES' + 'S;\x0d\x0a\x09float' + '\x20kr4PI\x20=\x20R' + 'AYLEIGH\x20*\x20' + '4.0\x20*\x203.14' + '159265;\x0d\x0a\x0d' + '\x0a\x09vec3\x20cam' + 'eraPos\x20=\x20v' + 'ec3(0.0,in' + 'nerRadius\x20' + '+\x20cameraHe' + 'ight,0.0);' + '\x20//\x20The\x20ca' + 'mera\x27s\x20cur' + 'rent\x20posit' + 'ion\x0d\x0a\x0d\x0a\x09//' + '\x20Get\x20the\x20r' + 'ay\x20from\x20th' + 'e\x20camera\x20t' + 'o\x20the\x20vert' + 'ex\x20and\x20its' + '\x20length\x20(w') + ('hich\x20is\x20th' + 'e\x20far\x20poin' + 't\x20of\x20the\x20r' + 'ay\x20passing' + '\x20through\x20t' + 'he\x20atmosph' + 'ere)\x0d\x0a\x09vec' + '3\x20eyeRay\x20=' + '\x20normalize' + '(a_Positio' + 'n.xyz);\x0d\x0a\x0d' + '\x0a\x09float\x20fa' + 'r\x20=\x200.0;\x0d\x0a' + '\x09vec3\x20cIn,' + '\x20cOut;\x0d\x0a\x09i' + 'f\x20(eyeRay.' + 'y\x20>=\x200.0)\x20' + '{//\x20Sky\x0d\x0a\x09' + '\x09//\x20Calcul' + 'ate\x20the\x20le' + 'ngth\x20of\x20th' + 'e\x20\x22atmosph' + 'ere\x22\x0d\x0a\x09\x09fa' + 'r\x20=\x20sqrt(o' + 'uterRadius' + '2\x20+\x20innerR' + 'adius2\x20*\x20e' + 'yeRay.y\x20*\x20' + 'eyeRay.y\x20-' + '\x20innerRadi' + 'us2)\x20-\x20inn' + 'erRadius\x20*' + '\x20eyeRay.y;' + '\x0d\x0a\x0d\x0a\x09\x09//\x20C' + 'alculate\x20t' + 'he\x20ray\x27s\x20s' + 'tarting\x20po' + 'sition,\x20th' + 'en\x20calcula' + 'te\x20its\x20sca' + 'ttering\x20of' + 'fset\x0d\x0a\x09\x09fl' + 'oat\x20height' + '\x20=\x20innerRa' + 'dius\x20+\x20cam' + 'eraHeight;' + '\x0d\x0a\x09\x09float\x20' + 'depth\x20=\x20ex' + 'p(scaleOve' + 'rScaleDept' + 'h\x20*\x20-camer' + 'aHeight);\x0d' + '\x0a\x09\x09float\x20s' + 'tartAngle\x20' + '=\x20dot(eyeR' + 'ay,\x20camera' + 'Pos)\x20/\x20hei' + 'ght;\x0d\x0a\x09\x09fl' + 'oat\x20startO' + 'ffset\x20=\x20de' + 'pth*scaleA' + 'ngle(start' + 'Angle);\x0d\x0a\x0d' + '\x0a\x09\x09//\x20Init' + 'ialize\x20the' + '\x20scatterin' + 'g\x20loop\x20var' + 'iables\x0d\x0a\x09\x09' + 'float\x20samp' + 'leLength\x20=' + '\x20far\x20/\x20sam' + 'ples;\x0d\x0a\x09\x09f' + 'loat\x20scale' + 'dLength\x20=\x20' + 'sampleLeng' + 'th\x20*\x20scale' + ';\x0d\x0a\x09\x09vec3\x20' + 'sampleRay\x20' + '=\x20eyeRay\x20*' + '\x20sampleLen' + 'gth;\x0d\x0a\x09\x09ve' + 'c3\x20sampleP' + 'oint\x20=\x20cam' + 'eraPos\x20+\x20s' + 'ampleRay\x20*' + '\x200.5;\x0d\x0a\x0d\x0a\x09' + '\x09vec3\x20fron' + 'tColor\x20=\x20v' + 'ec3(0.0);\x0d' + '\x0a\x09\x09//unrol' + 'ling\x20this\x20' + 'manually\x20t' + 'o\x20avoid\x20so' + 'me\x20platfor' + 'm\x20for\x20loop' + '\x20slow\x0d\x0a\x09\x09{' + '\x0d\x0a\x09\x09\x09float' + '\x20height\x20=\x20' + 'length(sam' + 'plePoint);') + ('\x0d\x0a\x09\x09\x09float' + '\x20depth\x20=\x20e' + 'xp(scaleOv' + 'erScaleDep' + 'th\x20*\x20(inne' + 'rRadius\x20-\x20' + 'height));\x0d' + '\x0a\x09\x09\x09float\x20' + 'lightAngle' + '\x20=\x20dot(-u_' + 'SunLight.d' + 'irection,\x20' + 'samplePoin' + 't)\x20/\x20heigh' + 't;\x0d\x0a\x09\x09\x09flo' + 'at\x20cameraA' + 'ngle\x20=\x20dot' + '(eyeRay,\x20s' + 'amplePoint' + ')\x20/\x20height' + ';\x0d\x0a\x09\x09\x09floa' + 't\x20scatter\x20' + '=\x20(startOf' + 'fset\x20+\x20dep' + 'th*(scaleA' + 'ngle(light' + 'Angle)\x20-\x20s' + 'caleAngle(' + 'cameraAngl' + 'e)));\x0d\x0a\x09\x09\x09' + 'vec3\x20atten' + 'uate\x20=\x20exp' + '(-clamp(sc' + 'atter,\x200.0' + ',\x20MAX_SCAT' + 'TER)\x20*\x20(in' + 'vWavelengt' + 'h\x20*\x20kr4PI\x20' + '+\x20km4PI));' + '\x0d\x0a\x0d\x0a\x09\x09\x09fro' + 'ntColor\x20+=' + '\x20attenuate' + '\x20*\x20(depth\x20' + '*\x20scaledLe' + 'ngth);\x0d\x0a\x09\x09' + '\x09samplePoi' + 'nt\x20+=\x20samp' + 'leRay;\x0d\x0a\x09\x09' + '}\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09float\x20hei' + 'ght\x20=\x20leng' + 'th(sampleP' + 'oint);\x0d\x0a\x09\x09' + '\x09float\x20dep' + 'th\x20=\x20exp(s' + 'caleOverSc' + 'aleDepth\x20*' + '\x20(innerRad' + 'ius\x20-\x20heig' + 'ht));\x0d\x0a\x09\x09\x09' + 'float\x20ligh' + 'tAngle\x20=\x20d' + 'ot(-u_SunL' + 'ight.direc' + 'tion,\x20samp' + 'lePoint)\x20/' + '\x20height;\x0d\x0a' + '\x09\x09\x09float\x20c' + 'ameraAngle' + '\x20=\x20dot(eye' + 'Ray,\x20sampl' + 'ePoint)\x20/\x20' + 'height;\x0d\x0a\x09' + '\x09\x09float\x20sc' + 'atter\x20=\x20(s' + 'tartOffset' + '\x20+\x20depth*(' + 'scaleAngle' + '(lightAngl' + 'e)\x20-\x20scale' + 'Angle(came' + 'raAngle)))' + ';\x0d\x0a\x09\x09\x09vec3' + '\x20attenuate' + '\x20=\x20exp(-cl' + 'amp(scatte' + 'r,\x200.0,\x20MA' + 'X_SCATTER)' + '\x20*\x20(invWav' + 'elength\x20*\x20' + 'kr4PI\x20+\x20km' + '4PI));\x0d\x0a\x0d\x0a' + '\x09\x09\x09frontCo' + 'lor\x20+=\x20att' + 'enuate\x20*\x20(' + 'depth\x20*\x20sc' + 'aledLength' + ');\x0d\x0a\x09\x09\x09sam' + 'plePoint\x20+' + '=\x20sampleRa') + ('y;\x0d\x0a\x09\x09}\x0d\x0a\x0d' + '\x0a\x09\x09//\x20Fina' + 'lly,\x20scale' + '\x20the\x20Mie\x20a' + 'nd\x20Rayleig' + 'h\x20colors\x20a' + 'nd\x20set\x20up\x20' + 'the\x20varyin' + 'g\x20variable' + 's\x20for\x20the\x20' + 'pixel\x20shad' + 'er\x0d\x0a\x09\x09cIn\x20' + '=\x20frontCol' + 'or\x20*\x20(invW' + 'avelength\x20' + '*\x20krESun);' + '\x0d\x0a\x09\x09cOut\x20=' + '\x20frontColo' + 'r\x20*\x20kmESun' + ';\x0d\x0a\x09}\x20else' + '\x20{//\x20Groun' + 'd\x0d\x0a\x09\x09far\x20=' + '\x20(-cameraH' + 'eight)\x20/\x20(' + 'min(-0.001' + ',\x20eyeRay.y' + '));\x0d\x0a\x09\x09vec' + '3\x20pos\x20=\x20ca' + 'meraPos\x20+\x20' + 'far\x20*\x20eyeR' + 'ay;\x0d\x0a\x0d\x0a\x09\x09/' + '/\x20Calculat' + 'e\x20the\x20ray\x27' + 's\x20starting' + '\x20position,' + '\x20then\x20calc' + 'ulate\x20its\x20' + 'scattering' + '\x20offset\x0d\x0a\x09' + '\x09float\x20dep' + 'th\x20=\x20exp((' + '-cameraHei' + 'ght)\x20*\x20(1.' + '0/scaleDep' + 'th));\x0d\x0a\x09\x09f' + 'loat\x20camer' + 'aAngle\x20=\x20d' + 'ot(-eyeRay' + ',\x20pos);\x0d\x0a\x09' + '\x09float\x20lig' + 'htAngle\x20=\x20' + 'dot(-u_Sun' + 'Light.dire' + 'ction,\x20pos' + ');\x0d\x0a\x09\x09floa' + 't\x20cameraSc' + 'ale\x20=\x20scal' + 'eAngle(cam' + 'eraAngle);' + '\x0d\x0a\x09\x09float\x20' + 'lightScale' + '\x20=\x20scaleAn' + 'gle(lightA' + 'ngle);\x0d\x0a\x09\x09' + 'float\x20came' + 'raOffset\x20=' + '\x20depth*cam' + 'eraScale;\x0d' + '\x0a\x09\x09float\x20t' + 'emp\x20=\x20ligh' + 'tScale\x20+\x20c' + 'ameraScale' + ';\x0d\x0a\x0d\x0a\x09\x09//\x20' + 'Initialize' + '\x20the\x20scatt' + 'ering\x20loop' + '\x20variables' + '\x0d\x0a\x09\x09float\x20' + 'sampleLeng' + 'th\x20=\x20far\x20/' + '\x20samples;\x0d' + '\x0a\x09\x09float\x20s' + 'caledLengt' + 'h\x20=\x20sample' + 'Length\x20*\x20s' + 'cale;\x0d\x0a\x09\x09v' + 'ec3\x20sample' + 'Ray\x20=\x20eyeR' + 'ay\x20*\x20sampl' + 'eLength;\x0d\x0a' + '\x09\x09vec3\x20sam' + 'plePoint\x20=' + '\x20cameraPos' + '\x20+\x20sampleR' + 'ay\x20*\x200.5;\x0d' + '\x0a\x0d\x0a\x09\x09//\x20No' + 'w\x20loop\x20thr' + 'ough\x20the\x20s' + 'ample\x20rays' + '\x0d\x0a\x09\x09vec3\x20f') + ('rontColor\x20' + '=\x20vec3(0.0' + ',\x200.0,\x200.0' + ');\x0d\x0a\x09\x09vec3' + '\x20attenuate' + ';\x0d\x0a\x0d\x0a\x09\x09//\x20' + 'Loop\x20remov' + 'ed\x20because' + '\x20we\x20kept\x20h' + 'itting\x20SM2' + '.0\x20temp\x20va' + 'riable\x20lim' + 'its.\x20Doesn' + '\x27t\x20affect\x20' + 'the\x20image\x20' + 'too\x20much.\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09f' + 'loat\x20heigh' + 't\x20=\x20length' + '(samplePoi' + 'nt);\x0d\x0a\x09\x09\x09f' + 'loat\x20depth' + '\x20=\x20exp(sca' + 'leOverScal' + 'eDepth\x20*\x20(' + 'innerRadiu' + 's\x20-\x20height' + '));\x0d\x0a\x09\x09\x09fl' + 'oat\x20scatte' + 'r\x20=\x20depth*' + 'temp\x20-\x20cam' + 'eraOffset;' + '\x0d\x0a\x09\x09\x09atten' + 'uate\x20=\x20exp' + '(-clamp(sc' + 'atter,\x200.0' + ',\x20MAX_SCAT' + 'TER)\x20*\x20(in' + 'vWavelengt' + 'h\x20*\x20kr4PI\x20' + '+\x20km4PI));' + '\x0d\x0a\x09\x09\x09front' + 'Color\x20+=\x20a' + 'ttenuate\x20*' + '\x20(depth\x20*\x20' + 'scaledLeng' + 'th);\x0d\x0a\x09\x09\x09s' + 'amplePoint' + '\x20+=\x20sample' + 'Ray;\x0d\x0a\x09\x09}\x0d' + '\x0a\x0d\x0a\x09\x09cIn\x20=' + '\x20frontColo' + 'r\x20*\x20(invWa' + 'velength\x20*' + '\x20krESun\x20+\x20' + 'kmESun);\x0d\x0a' + '\x09\x09cOut\x20=\x20c' + 'lamp(atten' + 'uate,\x200.0,' + '\x201.0);\x0d\x0a\x09}' + '\x0d\x0a\x0d\x0a\x09#ifde' + 'f\x20SUN_HIGH' + '_QUALITY\x0d\x0a' + '\x09\x09v_Vertex' + '\x20=\x20-a_Posi' + 'tion.xyz;\x0d' + '\x0a\x09#elif\x20de' + 'fined(SUN_' + 'SIMPLE)\x20\x0d\x0a' + '\x09\x09v_RayDir' + '\x20=\x20-eyeRay' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09v_SkyGr' + 'oundFactor' + '\x20=\x20-eyeRay' + '.y\x20/\x20SKY_G' + 'ROUND_THRE' + 'SHOLD;\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '//\x20if\x20we\x20w' + 'ant\x20to\x20cal' + 'culate\x20col' + 'or\x20in\x20vpro' + 'g:\x0d\x0a\x09//\x20in' + '\x20case\x20of\x20l' + 'inear:\x20mul' + 'tiply\x20by\x20_' + 'Exposure\x20i' + 'n\x20here\x20(ev' + 'en\x20in\x20case' + '\x20of\x20lerp\x20i' + 't\x20will\x20be\x20' + 'common\x20mul' + 'tiplier,\x20s' + 'o\x20we\x20can\x20s' + 'kip\x20mul\x20in' + '\x20fshader)\x0d' + '\x0a\x09v_Ground' + 'Color\x20=\x20u_' + 'Exposure\x20*') + ('\x20(cIn\x20+\x20u_' + 'GroundTint' + '*u_GroundT' + 'int\x20*\x20cOut' + ');//u_Grou' + 'ndColor*u_' + 'GroundColo' + 'r\x20is\x20gamma' + '\x20space\x20con' + 'vert\x20to\x20li' + 'near\x20space' + '\x0d\x0a\x09v_SkyCo' + 'lor\x20\x20\x20\x20=\x20u' + '_Exposure\x20' + '*\x20(cIn\x20*\x20g' + 'etRayleigh' + 'Phase(-u_S' + 'unLight.di' + 'rection,\x20-' + 'eyeRay));\x0d' + '\x0a\x0d\x0a\x09\x0d\x0a\x09//\x20' + 'The\x20sun\x20sh' + 'ould\x20have\x20' + 'a\x20stable\x20i' + 'ntensity\x20i' + 'n\x20its\x20cour' + 'se\x20in\x20the\x20' + 'sky.\x20Moreo' + 'ver\x20it\x20sho' + 'uld\x20match\x20' + 'the\x20highli' + 'ght\x20of\x20a\x20p' + 'urely\x20spec' + 'ular\x20mater' + 'ial.\x0d\x0a\x09//\x20' + 'This\x20match' + 'ing\x20was\x20do' + 'ne\x20using\x20t' + 'he\x20Unity3D' + '\x20standard\x20' + 'shader\x20BRD' + 'F1\x20on\x20the\x20' + '5/31/2017\x0d' + '\x0a\x09//\x20Final' + 'ly\x20we\x20want' + '\x20the\x20sun\x20t' + 'o\x20be\x20alway' + 's\x20bright\x20e' + 'ven\x20in\x20LDR' + '\x20thus\x20the\x20' + 'normalizat' + 'ion\x20of\x20the' + '\x20lightColo' + 'r\x20for\x20low\x20' + 'intensity.' + '\x0d\x0a\x09float\x20l' + 'ightColorI' + 'ntensity\x20=' + '\x20clamp(len' + 'gth(u_SunL' + 'ight.color' + '),\x200.25,\x201' + '.0);\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20SUN_' + 'HIGH_QUALI' + 'TY\x20\x0d\x0a\x09\x09v_S' + 'unColor\x20=\x20' + 'HDSundiskI' + 'ntensityFa' + 'ctor\x20*\x20cla' + 'mp(cOut,0.' + '0,1.0)\x20*\x20u' + '_SunLight.' + 'color\x20/\x20li' + 'ghtColorIn' + 'tensity;\x0d\x0a' + '\x09#elif\x20def' + 'ined(SUN_S' + 'IMPLE)\x20\x0d\x0a\x09' + '\x09v_SunColo' + 'r\x20=\x20simple' + 'SundiskInt' + 'ensityFact' + 'or\x20*\x20clamp' + '(cOut\x20*\x20su' + 'nScale,0.0' + ',1.0)\x20*\x20u_' + 'SunLight.c' + 'olor\x20/\x20lig' + 'htColorInt' + 'ensity;\x0d\x0a\x09' + '#endif\x0d\x0a\x09g' + 'l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}\x0d\x0a'), _0x3bb553 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_MainTe' + 'xture;\x0d\x0aun' + 'iform\x20vec4' + '\x20u_MainCol' + 'or;\x0d\x0a\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '0;\x0d\x0avaryin' + 'g\x20vec4\x20v_C' + 'olor;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20color\x20=\x202' + '.0\x20*\x20u_Mai' + 'nColor\x20*\x20v' + '_Color;\x0d\x0a\x09' + '#ifdef\x20MAI' + 'NTEXTURE\x0d\x0a' + '\x09\x09vec4\x20mai' + 'nTextureCo' + 'lor\x20=\x20text' + 'ure2D(u_Ma' + 'inTexture,' + '\x20v_Texcoor' + 'd0);\x0d\x0a\x09\x09co' + 'lor\x20*=\x20mai' + 'nTextureCo' + 'lor;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09gl_F' + 'ragColor\x20=' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20', _0x301093 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec3\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Offset' + 'Vector;\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Colo' + 'r;\x0d\x0aattrib' + 'ute\x20float\x20' + 'a_Texcoord' + '0X;\x0d\x0aattri' + 'bute\x20float' + '\x20a_Texcoor' + 'd0Y;\x0d\x0aattr' + 'ibute\x20floa' + 't\x20a_BirthT' + 'ime;\x0d\x0a\x0d\x0aun' + 'iform\x20mat4' + '\x20u_View;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_Proje' + 'ction;\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Tilin' + 'gOffset;\x0d\x0a' + '\x0d\x0auniform\x20' + 'float\x20u_Cu' + 'rTime;\x0d\x0aun' + 'iform\x20floa' + 't\x20u_LifeTi' + 'me;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'WidthCurve' + '[10];\x0d\x0auni' + 'form\x20int\x20u' + '_WidthCurv' + 'eKeyLength' + ';\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0avarying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0a\x0d\x0aflo' + 'at\x20hermite' + 'Interpolat' + 'e(float\x20t,' + '\x20float\x20out' + 'Tangent,\x20f' + 'loat\x20inTan' + 'gent,\x20floa' + 't\x20duration' + ',\x20float\x20va' + 'lue1,\x20floa' + 't\x20value2)\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20t2\x20=\x20t\x20*\x20' + 't;\x0d\x0a\x09float' + '\x20t3\x20=\x20t2\x20*' + '\x20t;\x0d\x0a\x09floa' + 't\x20a\x20=\x202.0\x20' + '*\x20t3\x20-\x203.0' + '\x20*\x20t2\x20+\x201.' + '0;\x0d\x0a\x09float' + '\x20b\x20=\x20t3\x20-\x20' + '2.0\x20*\x20t2\x20+' + '\x20t;\x0d\x0a\x09floa' + 't\x20c\x20=\x20t3\x20-' + '\x20t2;\x0d\x0a\x09flo' + 'at\x20d\x20=\x20-2.' + '0\x20*\x20t3\x20+\x203' + '.0\x20*\x20t2;\x0d\x0a' + '\x09return\x20a\x20' + '*\x20value1\x20+' + '\x20b\x20*\x20outTa' + 'ngent\x20*\x20du' + 'ration\x20+\x20c' + '\x20*\x20inTange' + 'nt\x20*\x20durat' + 'ion\x20+\x20d\x20*\x20' + 'value2;\x0d\x0a}' + '\x0d\x0a\x0d\x0afloat\x20' + 'getCurWidt' + 'h(in\x20float' + '\x20normalize' + 'Time)\x0d\x0a{\x0d\x0a' + '\x09float\x20wid' + 'th;\x0d\x0a\x09if(n' + 'ormalizeTi' + 'me\x20==\x200.0)' + '{\x0d\x0a\x09\x09width' + '=u_WidthCu' + 'rve[0].w;\x0d' + '\x0a\x09}\x0d\x0a\x09else' + '\x20if(normal' + 'izeTime\x20>=' + '\x201.0){\x0d\x0a\x09\x09' + ('width=u_Wi' + 'dthCurve[u' + '_WidthCurv' + 'eKeyLength' + '\x20-\x201].w;\x0d\x0a' + '\x09}\x0d\x0a\x09else{' + '\x0d\x0a\x09\x09for(in' + 't\x20i\x20=\x200;\x20i' + '\x20<\x2010;\x20i\x20+' + '+\x20)\x0d\x0a\x09\x09{\x0d\x0a' + '\x09\x09\x09if(norm' + 'alizeTime\x20' + '==\x20u_Width' + 'Curve[i].x' + '){\x0d\x0a\x09\x09\x09\x09wi' + 'dth=u_Widt' + 'hCurve[i].' + 'w;\x0d\x0a\x09\x09\x09\x09br' + 'eak;\x0d\x0a\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09' + 'vec4\x20lastF' + 'rame\x20=\x20u_W' + 'idthCurve[' + 'i];\x0d\x0a\x09\x09\x09ve' + 'c4\x20nextFra' + 'me\x20=\x20u_Wid' + 'thCurve[i\x20' + '+\x201];\x0d\x0a\x09\x09\x09' + 'if(normali' + 'zeTime\x20>\x20l' + 'astFrame.x' + '\x20&&\x20normal' + 'izeTime\x20<\x20' + 'nextFrame.' + 'x)\x0d\x0a\x09\x09\x09{\x0d\x0a' + '\x09\x09\x09\x09float\x20' + 'duration\x20=' + '\x20nextFrame' + '.x\x20-\x20lastF' + 'rame.x;\x0d\x0a\x09' + '\x09\x09\x09float\x20t' + '\x20=\x20(normal' + 'izeTime\x20-\x20' + 'lastFrame.' + 'x)\x20/\x20durat' + 'ion;\x0d\x0a\x09\x09\x09\x09' + 'float\x20outT' + 'angent\x20=\x20l' + 'astFrame.z' + ';\x0d\x0a\x09\x09\x09\x09flo' + 'at\x20inTange' + 'nt\x20=\x20nextF' + 'rame.y;\x0d\x0a\x09' + '\x09\x09\x09float\x20v' + 'alue1\x20=\x20la' + 'stFrame.w;' + '\x0d\x0a\x09\x09\x09\x09floa' + 't\x20value2\x20=' + '\x20nextFrame' + '.w;\x0d\x0a\x09\x09\x09\x09w' + 'idth=hermi' + 'teInterpol' + 'ate(t,\x20out' + 'Tangent,\x20i' + 'nTangent,\x20' + 'duration,\x20' + 'value1,\x20va' + 'lue2);\x0d\x0a\x09\x09' + '\x09\x09break;\x0d\x0a' + '\x09\x09\x09}\x0d\x0a\x09\x09}\x0d' + '\x0a\x09}\x0d\x0a\x09retu' + 'rn\x20width;\x0d' + '\x0a}\x09\x0d\x0a\x0d\x0avoi' + 'd\x20main()\x0d\x0a' + '{\x0d\x0a\x09float\x20' + 'normalizeT' + 'ime\x20=\x20(u_C' + 'urTime\x20-\x20a' + '_BirthTime' + ')\x20/\x20u_Life' + 'Time;\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09\x09v_Texc' + 'oord0\x20=\x20ve' + 'c2(a_Texco' + 'ord0X,\x201.0' + '\x20-\x20a_Texco' + 'ord0Y)\x20*\x20u' + '_TilingOff' + 'set.xy\x20+\x20u' + '_TilingOff' + 'set.zw;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09v' + '_Texcoord0' + '\x20=\x20vec2(a_' + 'Texcoord0X' + ',\x20a_Texcoo' + 'rd0Y);\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a') + ('\x09v_Color\x20=' + '\x20a_Color;\x0d' + '\x0a\x09\x0d\x0a\x09gl_Po' + 'sition\x20=\x20u' + '_Projectio' + 'n\x20*\x20u_View' + '\x20*\x20vec4(a_' + 'Position\x20+' + '\x20a_OffsetV' + 'ector\x20*\x20ge' + 'tCurWidth(' + 'normalizeT' + 'ime),1.0);' + '\x0d\x0a\x09gl_Posi' + 'tion=remap' + 'GLPosition' + 'Z(gl_Posit' + 'ion);\x0d\x0a}\x0d\x0a'), _0x2fa4cd = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(COLO' + 'R)&&define' + 'd(ENABLEVE' + 'RTEXCOLOR)' + '\x0d\x0a\x09varying' + '\x20vec4\x20v_Co' + 'lor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20ALBEDOT' + 'EXTURE\x0d\x0a\x09u' + 'niform\x20sam' + 'pler2D\x20u_A' + 'lbedoTextu' + 're;\x0d\x0a\x09vary' + 'ing\x20vec2\x20v' + '_Texcoord0' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0auniform' + '\x20vec4\x20u_Al' + 'bedoColor;' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20ALPHATEST' + '\x0d\x0a\x09uniform' + '\x20float\x20u_A' + 'lphaTestVa' + 'lue;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20FOG\x0d\x0a\x09u' + 'niform\x20flo' + 'at\x20u_FogSt' + 'art;\x0d\x0a\x09uni' + 'form\x20float' + '\x20u_FogRang' + 'e;\x0d\x0a\x09#ifde' + 'f\x20ADDTIVEF' + 'OG\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09unifor' + 'm\x20vec3\x20u_F' + 'ogColor;\x0d\x0a' + '\x09#endif\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20color\x20=\x20\x20' + 'u_AlbedoCo' + 'lor;\x0d\x0a\x09#if' + 'def\x20ALBEDO' + 'TEXTURE\x0d\x0a\x09' + '\x09color\x20*=\x20' + 'texture2D(' + 'u_AlbedoTe' + 'xture,\x20v_T' + 'excoord0);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#if\x20defi' + 'ned(COLOR)' + '&&defined(' + 'ENABLEVERT' + 'EXCOLOR)\x0d\x0a' + '\x09\x09color\x20*=' + '\x20v_Color;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09\x0d\x0a\x09#ifdef' + '\x20ALPHATEST' + '\x0d\x0a\x09\x09if(col' + 'or.a\x20<\x20u_A' + 'lphaTestVa' + 'lue)\x0d\x0a\x09\x09\x09d' + 'iscard;\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09gl_FragC' + 'olor\x20=\x20col' + 'or;\x0d\x0a\x09\x0d\x0a\x09#' + 'ifdef\x20FOG\x0d' + '\x0a\x09\x09float\x20l' + 'erpFact\x20=\x20' + 'clamp((1.0' + '\x20/\x20gl_Frag' + 'Coord.w\x20-\x20' + 'u_FogStart' + ')\x20/\x20u_FogR' + 'ange,\x200.0,' + '\x201.0);\x0d\x0a\x09\x09' + '#ifdef\x20ADD' + 'TIVEFOG\x0d\x0a\x09' + '\x09\x09gl_FragC' + 'olor.rgb\x20=' + '\x20mix(gl_Fr' + 'agColor.rg' + ('b,\x20vec3(0.' + '0),\x20lerpFa' + 'ct);\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09gl' + '_FragColor' + '.rgb\x20=\x20mix' + '(gl_FragCo' + 'lor.rgb,\x20u' + '_FogColor,' + '\x20lerpFact)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0a'), _0x5da02e = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec2\x20a_Texc' + 'oord0;\x0d\x0a\x0d\x0a' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_M' + 'vpMatrix;\x0d' + '\x0a#else\x0d\x0a\x09u' + 'niform\x20mat' + '4\x20u_MvpMat' + 'rix;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aattr' + 'ibute\x20vec4' + '\x20a_Color;\x0d' + '\x0avarying\x20v' + 'ec4\x20v_Colo' + 'r;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'TILINGOFFS' + 'ET\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'TilingOffs' + 'et;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20BONE\x0d\x0a\x09c' + 'onst\x20int\x20c' + '_MaxBoneCo' + 'unt\x20=\x2024;\x0d' + '\x0a\x09attribut' + 'e\x20vec4\x20a_B' + 'oneIndices' + ';\x0d\x0a\x09attrib' + 'ute\x20vec4\x20a' + '_BoneWeigh' + 'ts;\x0d\x0a\x09unif' + 'orm\x20mat4\x20u' + '_Bones[c_M' + 'axBoneCoun' + 't];\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avoid\x20' + 'main()\x20{\x0d\x0a' + '\x09vec4\x20posi' + 'tion;\x0d\x0a\x09#i' + 'fdef\x20BONE\x0d' + '\x0a\x09\x09mat4\x20sk' + 'inTransfor' + 'm\x20=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'x)]\x20*\x20a_Bo' + 'neWeights.' + 'x;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.y' + ')]\x20*\x20a_Bon' + 'eWeights.y' + ';\x0d\x0a\x09\x09skinT' + 'ransform\x20+' + '=\x20u_Bones[' + 'int(a_Bone' + 'Indices.z)' + ']\x20*\x20a_Bone' + 'Weights.z;' + '\x0d\x0a\x09\x09skinTr' + 'ansform\x20+=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.w)]' + '\x20*\x20a_BoneW' + 'eights.w;\x0d' + '\x0a\x09\x09positio' + 'n=skinTran' + 'sform*a_Po' + 'sition;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09p' + 'osition=a_' + 'Position;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09gl_Pos' + 'ition\x20=\x20a_' + 'MvpMatrix\x20' + '*\x20position' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20position;' + ('\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09#ifdef' + '\x20TILINGOFF' + 'SET\x0d\x0a\x09\x09v_T' + 'excoord0=T' + 'ransformUV' + '(a_Texcoor' + 'd0,u_Tilin' + 'gOffset);\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09v_Texcoor' + 'd0=a_Texco' + 'ord0;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(COLOR)&&d' + 'efined(ENA' + 'BLEVERTEXC' + 'OLOR)\x0d\x0a\x09\x09v' + '_Color\x20=\x20a' + '_Color;\x0d\x0a\x09' + '#endif\x0d\x0a\x09g' + 'l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}'), _0x5a3fc3 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20MAINTEXTU' + 'RE\x0d\x0a\x09unifo' + 'rm\x20sampler' + '2D\x20u_MainT' + 'exture;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20NORM' + 'ALTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_NormalTe' + 'xture;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Horizon' + 'Color;\x0d\x0a\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Norma' + 'l;\x0d\x0avaryin' + 'g\x20vec3\x20v_T' + 'angent;\x0d\x0av' + 'arying\x20vec' + '3\x20v_Binorm' + 'al;\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'ViewDir;\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '1;\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'nclude\x20\x22Li' + 'ghting.gls' + 'l\x22\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a' + 'vec3\x20Norma' + 'lSampleToW' + 'orldSpace(' + 'vec4\x20norma' + 'lMapSample' + ')\x20{\x0d\x0a\x09vec3' + '\x20normalT;\x0d' + '\x0a\x09normalT.' + 'x\x20=\x202.0\x20*\x20' + 'normalMapS' + 'ample.x\x20-\x20' + '1.0;\x0d\x0a\x09nor' + 'malT.y\x20=\x201' + '.0\x20-\x202.0\x20*' + '\x20normalMap' + 'Sample.y;\x0d' + '\x0a\x09normalT.' + 'z\x20=\x20sqrt(1' + '.0\x20-\x20clamp' + '(dot(norma' + 'lT.xy,\x20nor' + 'malT.xy),\x20' + '0.0,\x201.0))' + ';\x0d\x0a\x0d\x0a\x09vec3' + '\x20bumpedNor' + 'mal\x20=\x20norm' + 'alize(norm' + 'alT);\x0d\x0a\x0d\x0a\x09' + 'return\x20bum' + 'pedNormal;' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20bumpColor' + '1\x20=\x20textur' + 'e2D(u_Norm' + 'alTexture,' + '\x20v_Texcoor' + 'd0);\x0d\x0a\x09vec' + '4\x20bumpColo' + 'r2\x20=\x20textu' + 're2D(u_Nor' + 'malTexture' + ',\x20v_Texcoo' + 'rd1);\x0d\x0a\x0d\x0a\x09' + 'vec3\x20norma' + 'l1\x20=\x20Norma' + 'lSampleToW' + 'orldSpace(' + 'bumpColor1' + ');\x0d\x0a\x09vec3\x20' + 'normal2\x20=\x20' + 'NormalSamp' + 'leToWorldS' + ('pace(bumpC' + 'olor2);\x0d\x0a\x09' + '\x0d\x0a\x09vec3\x20no' + 'rmal\x20=\x20nor' + 'malize((no' + 'rmal1\x20+\x20no' + 'rmal2)\x20*\x200' + '.5);\x0d\x0a\x09vec' + '3\x20viewDir\x20' + '=\x20normaliz' + 'e(v_ViewDi' + 'r);\x0d\x0a\x09floa' + 't\x20fresnel\x20' + '=\x20dot(view' + 'Dir,\x20norma' + 'l);\x0d\x0a\x09\x0d\x0a\x09v' + 'ec4\x20waterC' + 'olor\x20=\x20tex' + 'ture2D(u_M' + 'ainTexture' + ',\x20vec2(fre' + 'snel,\x20fres' + 'nel));\x0d\x0a\x09\x0d' + '\x0a\x09vec4\x20col' + 'or;\x0d\x0a\x09colo' + 'r.rgb\x20=\x20mi' + 'x(waterCol' + 'or.rgb,\x20u_' + 'HorizonCol' + 'or.rgb,\x20ve' + 'c3(waterCo' + 'lor.a));\x0d\x0a' + '\x09color.a\x20=' + '\x20u_Horizon' + 'Color.a;\x0d\x0a' + '\x09\x0d\x0a\x09gl_Fra' + 'gColor\x20=\x20c' + 'olor;\x0d\x0a}\x0d\x0a' + '\x0d\x0a\x0d\x0a'), _0x41e1f0 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Normal' + ';\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Tangent0;\x0d' + '\x0a\x0d\x0auniform' + '\x20mat4\x20u_Mv' + 'pMatrix;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_World' + 'Mat;\x0d\x0aunif' + 'orm\x20vec3\x20u' + '_CameraPos' + ';\x0d\x0auniform' + '\x20float\x20u_W' + 'aveScale;\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Wave' + 'Speed;\x0d\x0aun' + 'iform\x20floa' + 't\x20u_Time;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec3\x20v_No' + 'rmal;\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Tangent;' + '\x0d\x0avarying\x20' + 'vec3\x20v_Bin' + 'ormal;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_ViewDir' + ';\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord1;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20positionW' + 'orld\x20=\x20u_W' + 'orldMat\x20*\x20' + 'a_Position' + ';\x0d\x0a\x09vec4\x20p' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20a_Posi' + 'tion;\x0d\x0a\x09\x0d\x0a' + '\x09vec4\x20temp' + '\x20=\x20vec4(po' + 'sitionWorl' + 'd.x,\x20posit' + 'ionWorld.z' + ',\x20position' + 'World.x,\x20p' + 'ositionWor' + 'ld.z)\x20*\x20u_' + 'WaveScale\x20' + '+\x20u_WaveSp' + 'eed\x20*\x20u_Wa' + 'veScale\x20*\x20' + 'u_Time;\x0d\x0a\x09' + '\x0d\x0a\x09v_Texco' + 'ord0\x20=\x20tem' + 'p.xy\x20*\x20vec' + '2(0.4,\x200.4' + '5);\x0d\x0a\x09v_Te' + 'xcoord1\x20=\x20' + 'temp.wz;\x0d\x0a' + '\x09\x0d\x0a\x09mat3\x20w' + 'orldMat\x20=\x20' + 'mat3(u_Wor' + 'ldMat);\x0d\x0a\x09' + 'v_Normal\x20=' + '\x20worldMat\x20' + '*\x20a_Normal' + ';\x0d\x0a\x09v_Tang' + 'ent\x20=\x20worl' + 'dMat\x20*\x20a_T' + 'angent0.xy' + 'z;\x0d\x0a\x09v_Bin' + 'ormal\x20=\x20cr' + 'oss(v_Norm' + 'al,\x20v_Tang' + 'ent)\x20*\x20a_T' + 'angent0.w;' + '\x0d\x0a\x09\x0d\x0a\x09v_Vi' + 'ewDir\x20=\x20u_' + 'CameraPos\x20' + '-\x20position' + 'World.xyz;' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20pos' + 'ition;\x0d\x0a\x09g' + ('l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}');
    class _0x378eeb {
        constructor() {
        }
        static ['__init__']() {
            _0x38ffce['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING'] = _0x38ffce['getDefineB' + 'yName']('LEGACYSING' + 'LELIGHTING'), _0x38ffce['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '2'] = _0x38ffce['getDefineB' + 'yName']('GRAPHICS_A' + 'PI_GLES2'), _0x38ffce['SHADERDEFI' + 'NE_GRAPHIC' + 'S_API_GLES' + '3'] = _0x38ffce['getDefineB' + 'yName']('GRAPHICS_A' + 'PI_GLES3'), _0x38ffce['addInclude']('Lighting.g' + 'lsl', _0x40f800), _0x38ffce['addInclude']('ShadowSamp' + 'leTent.gls' + 'l', _0x4bc4a1), _0x38ffce['addInclude']('GlobalIllu' + 'mination.g' + 'lsl', _0x91cb3c), _0x38ffce['addInclude']('Shadow.gls' + 'l', _0x12d594), _0x38ffce['addInclude']('ShadowCast' + 'erVS.glsl', _0x376d38), _0x38ffce['addInclude']('ShadowCast' + 'erFS.glsl', _0x360958), _0x38ffce['addInclude']('Colors.gls' + 'l', _0x40ba80), _0x38ffce['addInclude']('Sampling.g' + 'lsl', _0x2bb8c0), _0x38ffce['addInclude']('StdLib.gls' + 'l', _0x64c08a), _0x38ffce['addInclude']('PBRVSInput' + '.glsl', _0x2e23cf), _0x38ffce['addInclude']('PBRFSInput' + '.glsl', _0x35d9bf), _0x38ffce['addInclude']('LayaPBRBRD' + 'F.glsl', _0x58a8ba), _0x38ffce['addInclude']('PBRCore.gl' + 'sl', _0x52898f), _0x38ffce['addInclude']('PBRVertex.' + 'glsl', _0x3addf9);
            var _0x381a70 = {
                    'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                    'a_Color': _0x3fbee7['MESH_COLOR' + '0'],
                    'a_Normal': _0x3fbee7['MESH_NORMA' + 'L0'],
                    'a_Texcoord0': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0x3fbee7['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0x3fbee7['MESH_BLEND' + 'INDICES0'],
                    'a_Tangent0': _0x3fbee7['MESH_TANGE' + 'NT0'],
                    'a_MvpMatrix': _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0x3fbee7['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x2166df = {
                    'u_Bones': _0x38ffce['PERIOD_CUS' + 'TOM'],
                    'u_DiffuseTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecularTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_AlphaTestValue': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_DiffuseColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_MaterialSpecular': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_Shininess': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_WorldMat': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_LightMapDirection': _0x38ffce['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ViewProjection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                    'u_ReflectTexture': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ReflectIntensity': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowBias': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowLightDirection': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMap': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowParams': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowSplitSpheres': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMatrices': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_ShadowMapSize': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAr': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAg': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHAb': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBr': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBg': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHBb': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_AmbientSHC': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x38ffce['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x38ffce['PERIOD_SCE' + 'NE']
                }, _0x104415 = {
                    's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x28db2d = _0x38ffce['add']('BLINNPHONG', null, null, !0x0), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df);
            _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x467c23, _0x4616a0, _0x104415, 'Forward'), _0x2fbacd['addShaderP' + 'ass'](_0x4a72b1, _0x396f6c, _0x104415, 'ShadowCast' + 'er'), (_0x381a70 = {
                'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                'a_Color': _0x3fbee7['MESH_COLOR' + '0']
            }, _0x2166df = {
                'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_Color': _0x38ffce['PERIOD_MAT' + 'ERIAL']
            }, _0x104415 = {
                's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x28db2d = _0x38ffce['add']('LineShader'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x30ba13, _0x38a2a1, _0x104415), _0x381a70 = {
                'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                'a_Color': _0x3fbee7['MESH_COLOR' + '0'],
                'a_Texcoord0': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0x3fbee7['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0x3fbee7['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0']
            }, _0x2166df = {
                'u_Bones': _0x38ffce['PERIOD_CUS' + 'TOM'],
                'u_AlbedoTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AlphaTestValue': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE']
            }, _0x104415 = {
                's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x28db2d = _0x38ffce['add']('Unlit', null, null, !0x0), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x5da02e, _0x2fa4cd, _0x104415), _0x381a70 = {
                'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                'a_Texcoord0': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0x3fbee7['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0x3fbee7['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0x3fbee7['MESH_MVPMA' + 'TRIX_ROW0']
            }, _0x2166df = {
                'u_Bones': _0x38ffce['PERIOD_CUS' + 'TOM'],
                'u_AlbedoTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AlphaTestValue': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE']
            }, _0x104415 = {
                's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x28db2d = _0x38ffce['add']('Effect', null, null, !0x0), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x23bb35, _0x324e21, _0x104415), _0x381a70 = {
                'a_CornerTextureCoordinate': _0x2894be['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0'],
                'a_MeshPosition': _0x2894be['PARTICLE_P' + 'OSITION0'],
                'a_MeshColor': _0x2894be['PARTICLE_C' + 'OLOR0'],
                'a_MeshTextureCoordinate': _0x2894be['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0'],
                'a_ShapePositionStartLifeTime': _0x2894be['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME'],
                'a_DirectionTime': _0x2894be['PARTICLE_D' + 'IRECTIONTI' + 'ME'],
                'a_StartColor': _0x2894be['PARTICLE_S' + 'TARTCOLOR0'],
                'a_EndColor': _0x2894be['PARTICLE_E' + 'NDCOLOR0'],
                'a_StartSize': _0x2894be['PARTICLE_S' + 'TARTSIZE'],
                'a_StartRotation0': _0x2894be['PARTICLE_S' + 'TARTROTATI' + 'ON'],
                'a_StartSpeed': _0x2894be['PARTICLE_S' + 'TARTSPEED'],
                'a_Random0': _0x2894be['PARTICLE_R' + 'ANDOM0'],
                'a_Random1': _0x2894be['PARTICLE_R' + 'ANDOM1'],
                'a_SimulationWorldPostion': _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N'],
                'a_SimulationWorldRotation': _0x2894be['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON']
            }, _0x2166df = {
                'u_Tintcolor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_texture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_WorldPosition': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_WorldRotation': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_PositionScale': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SizeScale': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ScalingMode': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_Gravity': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ThreeDStartRotation': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_StretchedBillboardLengthScale': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_StretchedBillboardSpeedScale': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SimulationSpace': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_CurrentTime': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ColorOverLifeGradientAlphas': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ColorOverLifeGradientColors': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_MaxColorOverLifeGradientAlphas': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_MaxColorOverLifeGradientColors': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityConst': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientX': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientY': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientZ': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityConstMax': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxX': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxY': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxZ': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_VOLSpaceType': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradient': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientX': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientY': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientZ': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMax': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxX': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxY': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxZ': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConst': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstSeprarate': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradient': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientX': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientY': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientZ': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstMax': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstMaxSeprarate': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMax': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxX': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxY': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxZ': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxW': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_TSACycles': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_TSASubUVLength': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_TSAGradientUVs': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_TSAMaxGradientUVs': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_CameraDirection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_CameraUp': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_View': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_Projection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE']
            }, _0x104415 = {
                's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x28db2d = _0x38ffce['add']('PARTICLESH' + 'URIKEN'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x357822, _0x4e6ccc, _0x104415), _0x381a70 = { 'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'] }, _0x2166df = {
                'u_TintColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Exposure': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Rotation': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_CubeTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_ViewProjection': _0x38ffce['PERIOD_CAM' + 'ERA']
            }, _0x28db2d = _0x38ffce['add']('SkyBox'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0xc60afb, _0x5bb4dd), _0x381a70 = { 'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'] }, _0x2166df = {
                'u_SunSize': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_SunSizeConvergence': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AtmosphereThickness': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_SkyTint': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_GroundTint': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Exposure': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_ViewProjection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_SunLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_SunLight.color': _0x38ffce['PERIOD_SCE' + 'NE']
            }, _0x28db2d = _0x38ffce['add']('SkyBoxProc' + 'edural'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x58e52b, _0x36d4d7), _0x381a70 = {
                'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                'a_Normal': _0x3fbee7['MESH_NORMA' + 'L0'],
                'a_Texcoord0': _0x3fbee7['MESH_TEXTU' + 'RECOORDINA' + 'TE0']
            }, _0x2166df = {
                'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_Viewport': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_ProjectionParams': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_View': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_LightmapScaleOffset': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_LightMap': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_SplatAlphaTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture1': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture2': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture3': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture4': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture5': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset1': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset2': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset3': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset4': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset5': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_FogStart': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_DirationLightCount': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_LightBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_LightClusterBuffer': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_AmbientColor': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_ShadowMap': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_shadowMap2': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_shadowMap3': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_ShadowSplitSpheres': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_ShadowMatrices': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_ShadowMapSize': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_PointLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_PointLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_PointLight.color': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_SpotLight.position': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_SpotLight.direction': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_SpotLight.range': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_SpotLight.spot': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_SpotLight.color': _0x38ffce['PERIOD_SCE' + 'NE']
            }, _0x104415 = {
                's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x28db2d = _0x38ffce['add']('ExtendTerr' + 'ain'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x260a55, _0x39cbef, _0x104415), _0x381a70 = {
                'a_Position': _0x1f1c8d['TRAIL_POSI' + 'TION0'],
                'a_OffsetVector': _0x1f1c8d['TRAIL_OFFS' + 'ETVECTOR'],
                'a_Texcoord0X': _0x1f1c8d['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X'],
                'a_Texcoord0Y': _0x1f1c8d['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'],
                'a_BirthTime': _0x1f1c8d['TRAIL_TIME' + '0'],
                'a_Color': _0x1f1c8d['TRAIL_COLO' + 'R']
            }, _0x2166df = {
                'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_View': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_Projection': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_TilingOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_MainTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_MainColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_CurTime': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_LifeTime': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_WidthCurve': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_WidthCurveKeyLength': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_GradientColorkey': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_GradientAlphakey': _0x38ffce['PERIOD_SPR' + 'ITE']
            }, _0x104415 = {
                's_Cull': _0x38ffce['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x38ffce['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x38ffce['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x38ffce['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x38ffce['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x38ffce['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x28db2d = _0x38ffce['add']('Trail'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x301093, _0x3bb553, _0x104415), _0x381a70 = {
                'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'],
                'a_Normal': _0x3fbee7['MESH_NORMA' + 'L0'],
                'a_Tangent0': _0x3fbee7['MESH_TANGE' + 'NT0']
            }, _0x2166df = {
                'u_MvpMatrix': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x38ffce['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x38ffce['PERIOD_CAM' + 'ERA'],
                'u_Time': _0x38ffce['PERIOD_SCE' + 'NE'],
                'u_MainTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_NormalTexture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_HorizonColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_WaveScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_WaveSpeed': _0x38ffce['PERIOD_MAT' + 'ERIAL']
            }, _0x28db2d = _0x38ffce['add']('WaterPrima' + 'ry'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), _0x2fbacd['addShaderP' + 'ass'](_0x41e1f0, _0x5a3fc3), _0x381a70 = { 'a_PositionTexcoord': _0x3fbee7['MESH_POSIT' + 'ION0'] }, _0x2166df = {
                'u_MainTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_OffsetScale': _0x38ffce['PERIOD_MAT' + 'ERIAL']
            }, _0x28db2d = _0x38ffce['add']('BlitScreen'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd));
            var _0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x367d7c, _0x58ede4)['renderStat' + 'e'];
            _0x33a980['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x381a70 = { 'a_PositionTexcoord': _0x3fbee7['MESH_POSIT' + 'ION0'] }, _0x2166df = {
                'u_MainTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AutoExposureTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_MainTex_TexelSize': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_SampleScale': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Threshold': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Params': _0x38ffce['PERIOD_MAT' + 'ERIAL']
            }, _0x28db2d = _0x38ffce['add']('PostProces' + 'sBloom'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x5ce0d5, _0x4d7546)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x5ce0d5, _0x18e5f2)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x5ce0d5, _0x7ab94d)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x5ce0d5, _0x111e8a)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x5ce0d5, _0x11bcd8)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x5ce0d5, _0x4c3b4b)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'], _0x381a70 = { 'a_PositionTexcoord': _0x3fbee7['MESH_POSIT' + 'ION0'] }, _0x2166df = {
                'u_MainTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_AutoExposureTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_DirtTileOffset': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_DirtTex': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex_TexelSize': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_Settings': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_Color': _0x38ffce['PERIOD_MAT' + 'ERIAL']
            }, _0x28db2d = _0x38ffce['add']('PostProces' + 'sComposite'), _0x2fbacd = new _0x21aa4f(_0x381a70, _0x2166df), _0x28db2d['addSubShad' + 'er'](_0x2fbacd), (_0x33a980 = _0x2fbacd['addShaderP' + 'ass'](_0x4f6a9e, _0x58efa6)['renderStat' + 'e'])['depthTest'] = _0x4ba527['DEPTHTEST_' + 'ALWAYS'], _0x33a980['depthWrite'] = !0x1, _0x33a980['cull'] = _0x4ba527['CULL_NONE'], _0x33a980['blend'] = _0x4ba527['BLEND_DISA' + 'BLE'];
        }
    }
    class _0x3b6a7e extends _0x121492 {
        constructor() {
            super(), this['_direction'] = new _0x43b358(), this['_shadowCas' + 'cadesMode'] = _0xc55b22['ShadowCasc' + 'adesMode']['NoCascades'], this['_shadowTwo' + 'CascadeSpl' + 'its'] = 0x1 / 0x3, this['_shadowFou' + 'rCascadeSp' + 'lits'] = new _0x43b358(0x1 / 0xf, 0.2, 0x7 / 0xf), this['_lightType'] = _0xc55b22['LightType']['Directiona' + 'l'];
        }
        get ['shadowCasc' + 'adesMode']() {
            return this['_shadowCas' + 'cadesMode'];
        }
        set ['shadowCasc' + 'adesMode'](_0xf17b22) {
            this['_shadowCas' + 'cadesMode'] = _0xf17b22;
        }
        get ['shadowTwoC' + 'ascadeSpli' + 'ts']() {
            return this['_shadowTwo' + 'CascadeSpl' + 'its'];
        }
        set ['shadowTwoC' + 'ascadeSpli' + 'ts'](_0x5b70c4) {
            this['_shadowTwo' + 'CascadeSpl' + 'its'] = _0x5b70c4;
        }
        get ['shadowFour' + 'CascadeSpl' + 'its']() {
            return this['_shadowFou' + 'rCascadeSp' + 'lits'];
        }
        set ['shadowFour' + 'CascadeSpl' + 'its'](_0x300d90) {
            if (_0x300d90['x'] > _0x300d90['y'] || _0x300d90['y'] > _0x300d90['z'] || _0x300d90['z'] > 0x1)
                throw 'DiretionLi' + 'ght:Invali' + 'd\x20value.';
            _0x300d90['cloneTo'](this['_shadowFou' + 'rCascadeSp' + 'lits']);
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_direction' + 'Lights']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_direction' + 'Lights']['remove'](this);
        }
    }
    class _0x180a39 extends _0x121492 {
        get ['range']() {
            return this['_range'];
        }
        set ['range'](_0x3db2ac) {
            this['_range'] = _0x3db2ac;
        }
        constructor() {
            super(), this['_range'] = 0x6, this['_lightType'] = _0xc55b22['LightType']['Point'];
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_pointLigh' + 'ts']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_pointLigh' + 'ts']['remove'](this);
        }
        ['_parse'](_0x3c4ba5, _0x367456) {
            super['_parse'](_0x3c4ba5, _0x367456), this['range'] = _0x3c4ba5['range'];
        }
    }
    class _0x26e494 extends _0x121492 {
        get ['spotAngle']() {
            return this['_spotAngle'];
        }
        set ['spotAngle'](_0x4be166) {
            this['_spotAngle'] = Math['max'](Math['min'](_0x4be166, 0xb3), 0x0);
        }
        get ['range']() {
            return this['_range'];
        }
        set ['range'](_0x36980e) {
            this['_range'] = _0x36980e;
        }
        constructor() {
            super(), this['_spotAngle'] = 0x1e, this['_range'] = 0xa, this['_direction'] = new _0x43b358(), this['_lightType'] = _0xc55b22['LightType']['Spot'];
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_spotLight' + 's']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_spotLight' + 's']['remove'](this);
        }
        ['_parse'](_0x3d301e, _0x28296a) {
            super['_parse'](_0x3d301e, _0x28296a), this['range'] = _0x3d301e['range'], this['spotAngle'] = _0x3d301e['spotAngle'];
        }
    }
    class _0x30b055 {
        static ['_createSpr' + 'ite3DInsta' + 'nce'](_0x5616a4, _0x58cdfd, _0x7f2f79) {
            var _0x465072;
            switch (_0x5616a4['type']) {
            case 'Scene3D':
                _0x465072 = new _0x441dfb();
                break;
            case 'Sprite3D':
                _0x465072 = new _0x39cab4();
                break;
            case 'MeshSprite' + '3D':
                _0x465072 = new _0x32da4a(), _0x7f2f79 && _0x5616a4['props']['isStatic'] && _0x7f2f79['push'](_0x465072);
                break;
            case 'SkinnedMes' + 'hSprite3D':
                _0x465072 = new _0x279241();
                break;
            case 'ShuriKenPa' + 'rticle3D':
                _0x465072 = new _0x568b78();
                break;
            case 'Camera':
                _0x465072 = new _0x14e627();
                break;
            case 'DirectionL' + 'ight':
                _0x465072 = new _0x3b6a7e();
                break;
            case 'PointLight':
                _0x465072 = new _0x180a39();
                break;
            case 'SpotLight':
                _0x465072 = new _0x26e494();
                break;
            case 'TrailSprit' + 'e3D':
                _0x465072 = new _0x5f4d1d();
                break;
            default:
                throw new Error('Utils3D:un' + 'identified' + '\x20class\x20typ' + 'e\x20in\x20(.lh)' + '\x20file.');
            }
            var _0x4678e9 = _0x5616a4['child'];
            if (_0x4678e9)
                for (var _0x32445c = 0x0, _0x395328 = _0x4678e9['length']; _0x32445c < _0x395328; _0x32445c++) {
                    var _0x5c796c = _0x30b055['_createSpr' + 'ite3DInsta' + 'nce'](_0x4678e9[_0x32445c], _0x58cdfd, _0x7f2f79);
                    _0x465072['addChild'](_0x5c796c);
                }
            return _0x58cdfd[_0x5616a4['instanceID']] = _0x465072, _0x465072;
        }
        static ['_createCom' + 'ponentInst' + 'ance'](_0x4740e9, _0x415dae) {
            var _0x31e495 = _0x415dae[_0x4740e9['instanceID']];
            _0x31e495['_parse'](_0x4740e9['props'], _0x415dae);
            var _0x578483 = _0x4740e9['child'];
            if (_0x578483) {
                for (var _0x37963f = 0x0, _0x2f22d2 = _0x578483['length']; _0x37963f < _0x2f22d2; _0x37963f++)
                    _0x30b055['_createCom' + 'ponentInst' + 'ance'](_0x578483[_0x37963f], _0x415dae);
            }
            var _0x523623 = _0x4740e9['components'];
            if (_0x523623)
                for (var _0x43ca5a = 0x0, _0x4dd51b = _0x523623['length']; _0x43ca5a < _0x4dd51b; _0x43ca5a++) {
                    var _0x35a6a1 = _0x523623[_0x43ca5a], _0x521f55 = _0x2247ad['ClassUtils']['getRegClas' + 's'](_0x35a6a1['type']);
                    if (_0x521f55)
                        _0x31e495['addCompone' + 'nt'](_0x521f55)['_parse'](_0x35a6a1);
                    else
                        console['warn']('Unkown\x20com' + 'ponent\x20typ' + 'e.');
                }
        }
        static ['_createNod' + 'eByJson02'](_0x4ba235, _0x2e2c91) {
            var _0x528a96 = {}, _0x3dcf92 = _0x30b055['_createSpr' + 'ite3DInsta' + 'nce'](_0x4ba235, _0x528a96, _0x2e2c91);
            return _0x30b055['_createCom' + 'ponentInst' + 'ance'](_0x4ba235, _0x528a96), _0x3dcf92;
        }
        static ['_parse'](_0x3903af, _0x581ba0 = null, _0x5017e1 = null) {
            var _0x1bb6c1, _0x37e161 = _0x3903af['data'], _0x3305ab = [];
            switch (_0x3903af['version']) {
            case 'LAYAHIERAR' + 'CHY:02':
                _0x1bb6c1 = _0x30b055['_createNod' + 'eByJson02'](_0x37e161, _0x3305ab);
                break;
            default:
                _0x1bb6c1 = _0x30b055['_createNod' + 'eByJson'](_0x37e161, _0x3305ab);
            }
            return _0x5bc8f8['combine'](_0x1bb6c1, _0x3305ab), _0x1bb6c1;
        }
        static ['_parseScen' + 'e'](_0x2cff17, _0x325ee9 = null, _0x4b311b = null) {
            var _0x3310fa, _0x5f50cc = _0x2cff17['data'], _0x15e802 = [];
            switch (_0x2cff17['version']) {
            case 'LAYASCENE3' + 'D:02':
                _0x3310fa = _0x30b055['_createNod' + 'eByJson02'](_0x5f50cc, _0x15e802);
                break;
            default:
                _0x3310fa = _0x30b055['_createNod' + 'eByJson'](_0x5f50cc, _0x15e802);
            }
            return _0x5bc8f8['combine'](null, _0x15e802), _0x3310fa;
        }
        static ['_createNod' + 'eByJson'](_0x55dca7, _0x1d56c8) {
            var _0x3dc6cd;
            switch (_0x55dca7['type']) {
            case 'Scene3D':
                _0x3dc6cd = new _0x441dfb();
                break;
            case 'Sprite3D':
                _0x3dc6cd = new _0x39cab4();
                break;
            case 'MeshSprite' + '3D':
                _0x3dc6cd = new _0x32da4a(), _0x1d56c8 && _0x55dca7['props']['isStatic'] && _0x1d56c8['push'](_0x3dc6cd);
                break;
            case 'SkinnedMes' + 'hSprite3D':
                _0x3dc6cd = new _0x279241();
                break;
            case 'ShuriKenPa' + 'rticle3D':
                _0x3dc6cd = new _0x568b78();
                break;
            case 'Camera':
                _0x3dc6cd = new _0x14e627();
                break;
            case 'DirectionL' + 'ight':
                _0x3dc6cd = new _0x3b6a7e();
                break;
            case 'PointLight':
                _0x3dc6cd = new _0x180a39();
                break;
            case 'SpotLight':
                _0x3dc6cd = new _0x26e494();
                break;
            case 'TrailSprit' + 'e3D':
                _0x3dc6cd = new _0x5f4d1d();
                break;
            default:
                throw new Error('Utils3D:un' + 'identified' + '\x20class\x20typ' + 'e\x20in\x20(.lh)' + '\x20file.');
            }
            var _0x5a90b8 = _0x55dca7['child'];
            if (_0x5a90b8)
                for (var _0x40d4f5 = 0x0, _0x15ed10 = _0x5a90b8['length']; _0x40d4f5 < _0x15ed10; _0x40d4f5++) {
                    var _0x5ea80d = _0x30b055['_createNod' + 'eByJson'](_0x5a90b8[_0x40d4f5], _0x1d56c8);
                    _0x3dc6cd['addChild'](_0x5ea80d);
                }
            var _0x2874de = _0x55dca7['components'];
            if (_0x2874de)
                for (var _0x158050 = 0x0, _0x64a5b4 = _0x2874de['length']; _0x158050 < _0x64a5b4; _0x158050++) {
                    var _0x59b198 = _0x2874de[_0x158050], _0x232f70 = _0x2247ad['ClassUtils']['getRegClas' + 's'](_0x59b198['type']);
                    if (_0x232f70)
                        _0x3dc6cd['addCompone' + 'nt'](_0x232f70)['_parse'](_0x59b198);
                    else
                        console['warn']('Unkown\x20com' + 'ponent\x20typ' + 'e.');
                }
            return _0x3dc6cd['_parse'](_0x55dca7['props'], null), _0x3dc6cd;
        }
    }
    class _0x3facdf {
        static ['parse'](_0x20a7f9, _0x5725f8, _0xfe32ca, _0x5e4503) {
            _0x3facdf['_mesh'] = _0xfe32ca, _0x3facdf['_subMeshes'] = _0x5e4503, _0x3facdf['_version'] = _0x5725f8, _0x3facdf['_readData'] = _0x20a7f9, _0x3facdf['READ_DATA'](), _0x3facdf['READ_BLOCK'](), _0x3facdf['READ_STRIN' + 'GS']();
            for (var _0x348e65 = 0x0, _0x1a118e = _0x3facdf['_BLOCK']['count']; _0x348e65 < _0x1a118e; _0x348e65++) {
                _0x3facdf['_readData']['pos'] = _0x3facdf['_BLOCK']['blockStart' + 's'][_0x348e65];
                var _0xcc3f0f = _0x3facdf['_readData']['getUint16'](), _0x3b4f2d = _0x3facdf['_strings'][_0xcc3f0f], _0x33b8c5 = _0x3facdf['READ_' + _0x3b4f2d];
                if (null == _0x33b8c5)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0xcc3f0f + '\x20' + _0x3b4f2d);
                _0x33b8c5['call'](null);
            }
            _0x3facdf['_strings']['length'] = 0x0, _0x3facdf['_readData'] = null, _0x3facdf['_version'] = null, _0x3facdf['_mesh'] = null, _0x3facdf['_subMeshes'] = null;
        }
        static ['_readStrin' + 'g']() {
            return _0x3facdf['_strings'][_0x3facdf['_readData']['getUint16']()];
        }
        static ['READ_DATA']() {
            _0x3facdf['_DATA']['offset'] = _0x3facdf['_readData']['getUint32'](), _0x3facdf['_DATA']['size'] = _0x3facdf['_readData']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x28326d = _0x3facdf['_BLOCK']['count'] = _0x3facdf['_readData']['getUint16'](), _0x44b0ba = _0x3facdf['_BLOCK']['blockStart' + 's'] = [], _0x12d504 = _0x3facdf['_BLOCK']['blockLengt' + 'hs'] = [], _0x1feb66 = 0x0; _0x1feb66 < _0x28326d; _0x1feb66++)
                _0x44b0ba['push'](_0x3facdf['_readData']['getUint32']()), _0x12d504['push'](_0x3facdf['_readData']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x749983 = _0x3facdf['_readData']['getUint32'](), _0x2260dc = _0x3facdf['_readData']['getUint16'](), _0x28f1a5 = _0x3facdf['_readData']['pos'];
            _0x3facdf['_readData']['pos'] = _0x749983 + _0x3facdf['_DATA']['offset'];
            for (var _0x29dcc7 = 0x0; _0x29dcc7 < _0x2260dc; _0x29dcc7++)
                _0x3facdf['_strings'][_0x29dcc7] = _0x3facdf['_readData']['readUTFStr' + 'ing']();
            _0x3facdf['_readData']['pos'] = _0x28f1a5;
        }
        static ['READ_MESH']() {
            var _0x5bbef5, _0x29c239 = _0x2247ad['LayaGL']['instance'], _0x237469 = (_0x3facdf['_readStrin' + 'g'](), _0x3facdf['_readData']['__getBuffe' + 'r']()), _0x14676b = 0x0, _0x2e3dc2 = _0x3facdf['_readData']['getInt16'](), _0x3f6d50 = _0x3facdf['_DATA']['offset'];
            for (_0x5bbef5 = 0x0; _0x5bbef5 < _0x2e3dc2; _0x5bbef5++) {
                var _0x3da24d, _0x3c3703 = _0x3f6d50 + _0x3facdf['_readData']['getUint32'](), _0x4c1af8 = _0x3facdf['_readData']['getUint32'](), _0x1d34fd = _0x237469['slice'](_0x3c3703, _0x3c3703 + _0x4c1af8), _0x3c3330 = new Float32Array(_0x1d34fd), _0x5a9b83 = _0x3facdf['_readStrin' + 'g']();
                switch (_0x3facdf['_version']) {
                case 'LAYAMODEL:' + '0301':
                case 'LAYAMODEL:' + '0400':
                    _0x3da24d = _0x3fbee7['getVertexD' + 'eclaration'](_0x5a9b83);
                    break;
                case 'LAYAMODEL:' + '0401':
                    _0x3da24d = _0x3fbee7['getVertexD' + 'eclaration'](_0x5a9b83, !0x1);
                    break;
                default:
                    throw new Error('LoadModelV' + '03:\x20unknow' + 'n\x20version.');
                }
                if (!_0x3da24d)
                    throw new Error('LoadModelV' + '03:\x20unknow' + 'n\x20vertexDe' + 'claration.');
                var _0x203ad9 = new _0x26d078(0x4 * _0x3c3330['length'], _0x29c239['STATIC_DRA' + 'W'], !0x0);
                _0x203ad9['vertexDecl' + 'aration'] = _0x3da24d, _0x203ad9['setData'](_0x3c3330['buffer']), _0x3facdf['_mesh']['_vertexBuf' + 'fer'] = _0x203ad9, _0x3facdf['_mesh']['_vertexCou' + 'nt'] += _0x203ad9['_byteLengt' + 'h'] / _0x3da24d['vertexStri' + 'de'], _0x14676b += 0x4 * _0x3c3330['length'];
            }
            var _0x4a855e = _0x3f6d50 + _0x3facdf['_readData']['getUint32'](), _0x4d1f07 = _0x3facdf['_readData']['getUint32'](), _0xb23092 = new Uint16Array(_0x237469['slice'](_0x4a855e, _0x4a855e + _0x4d1f07)), _0xfb5629 = new _0x2a6e6b(_0xc55b22['IndexForma' + 't']['UInt16'], _0x4d1f07 / 0x2, _0x29c239['STATIC_DRA' + 'W'], !0x0);
            _0xfb5629['setData'](_0xb23092), _0x3facdf['_mesh']['_indexBuff' + 'er'] = _0xfb5629, _0x14676b += 0x2 * _0xfb5629['indexCount'], _0x3facdf['_mesh']['_setBuffer'](_0x3facdf['_mesh']['_vertexBuf' + 'fer'], _0xfb5629), _0x3facdf['_mesh']['_setCPUMem' + 'ory'](_0x14676b), _0x3facdf['_mesh']['_setGPUMem' + 'ory'](_0x14676b);
            var _0x45a0d8 = _0x3facdf['_mesh']['_boneNames'] = [], _0x4d5981 = _0x3facdf['_readData']['getUint16']();
            for (_0x45a0d8['length'] = _0x4d5981, _0x5bbef5 = 0x0; _0x5bbef5 < _0x4d5981; _0x5bbef5++)
                _0x45a0d8[_0x5bbef5] = _0x3facdf['_strings'][_0x3facdf['_readData']['getUint16']()];
            _0x3facdf['_readData']['pos'] += 0x8;
            var _0xf82917 = _0x3facdf['_readData']['getUint32'](), _0x510378 = _0x3facdf['_readData']['getUint32'](), _0xcc9c4d = new Float32Array(_0x237469['slice'](_0x3f6d50 + _0xf82917, _0x3f6d50 + _0xf82917 + _0x510378)), _0xc56bcd = _0xcc9c4d['length'], _0x42f42b = _0x3facdf['_mesh']['_inverseBi' + 'ndPosesBuf' + 'fer'] = new ArrayBuffer(0x4 * _0xc56bcd);
            for (_0x3facdf['_mesh']['_inverseBi' + 'ndPoses'] = [], _0x5bbef5 = 0x0; _0x5bbef5 < _0xc56bcd; _0x5bbef5 += 0x10) {
                var _0x178cd2 = new _0x334e9d(_0xcc9c4d[_0x5bbef5 + 0x0], _0xcc9c4d[_0x5bbef5 + 0x1], _0xcc9c4d[_0x5bbef5 + 0x2], _0xcc9c4d[_0x5bbef5 + 0x3], _0xcc9c4d[_0x5bbef5 + 0x4], _0xcc9c4d[_0x5bbef5 + 0x5], _0xcc9c4d[_0x5bbef5 + 0x6], _0xcc9c4d[_0x5bbef5 + 0x7], _0xcc9c4d[_0x5bbef5 + 0x8], _0xcc9c4d[_0x5bbef5 + 0x9], _0xcc9c4d[_0x5bbef5 + 0xa], _0xcc9c4d[_0x5bbef5 + 0xb], _0xcc9c4d[_0x5bbef5 + 0xc], _0xcc9c4d[_0x5bbef5 + 0xd], _0xcc9c4d[_0x5bbef5 + 0xe], _0xcc9c4d[_0x5bbef5 + 0xf], new Float32Array(_0x42f42b, 0x4 * _0x5bbef5, 0x10));
                _0x3facdf['_mesh']['_inverseBi' + 'ndPoses'][_0x5bbef5 / 0x10] = _0x178cd2;
            }
            return !0x0;
        }
        static ['READ_SUBME' + 'SH']() {
            var _0x17f8e3 = _0x3facdf['_readData']['__getBuffe' + 'r'](), _0x56e899 = new _0x5d3cd0(_0x3facdf['_mesh']);
            _0x3facdf['_readData']['getInt16'](), _0x3facdf['_readData']['getUint32'](), _0x3facdf['_readData']['getUint32']();
            var _0x2bce36 = _0x3facdf['_readData']['getUint32'](), _0x38f561 = _0x3facdf['_readData']['getUint32'](), _0x1c1359 = _0x3facdf['_mesh']['_indexBuff' + 'er'];
            _0x56e899['_indexBuff' + 'er'] = _0x1c1359, _0x56e899['_setIndexR' + 'ange'](_0x2bce36, _0x38f561);
            var _0x36f83e = _0x3facdf['_mesh']['_vertexBuf' + 'fer'];
            _0x56e899['_vertexBuf' + 'fer'] = _0x36f83e;
            var _0x52b036 = _0x3facdf['_DATA']['offset'], _0x312eba = _0x56e899['_subIndexB' + 'ufferStart'], _0x8cc231 = _0x56e899['_subIndexB' + 'ufferCount'], _0x3f58a7 = _0x56e899['_boneIndic' + 'esList'], _0x588e37 = _0x3facdf['_readData']['getUint16']();
            _0x312eba['length'] = _0x588e37, _0x8cc231['length'] = _0x588e37, _0x3f58a7['length'] = _0x588e37;
            var _0x3b989 = _0x3facdf['_mesh']['_skinnedMa' + 'trixCaches'], _0x3e9155 = _0x3facdf['_subMeshes']['length'];
            _0x3b989['length'] = _0x3facdf['_mesh']['_inverseBi' + 'ndPoses']['length'];
            for (var _0x29b297 = 0x0; _0x29b297 < _0x588e37; _0x29b297++) {
                _0x312eba[_0x29b297] = _0x3facdf['_readData']['getUint32'](), _0x8cc231[_0x29b297] = _0x3facdf['_readData']['getUint32']();
                for (var _0x4baa59 = _0x3facdf['_readData']['getUint32'](), _0x17d3da = _0x3facdf['_readData']['getUint32'](), _0x3a64a3 = _0x3f58a7[_0x29b297] = new Uint16Array(_0x17f8e3['slice'](_0x52b036 + _0x4baa59, _0x52b036 + _0x4baa59 + _0x17d3da)), _0x39c041 = _0x3a64a3['length'], _0x576b31 = 0x0; _0x576b31 < _0x39c041; _0x576b31++) {
                    var _0x2548d8 = _0x3a64a3[_0x576b31];
                    _0x3b989[_0x2548d8] || (_0x3b989[_0x2548d8] = new _0xb709c4(_0x3e9155, _0x29b297, _0x576b31));
                }
            }
            return _0x3facdf['_subMeshes']['push'](_0x56e899), !0x0;
        }
    }
    _0x3facdf['_BLOCK'] = { 'count': 0x0 }, _0x3facdf['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x3facdf['_strings'] = [];
    class _0x544892 {
        static ['parse'](_0x160d50, _0x4874d1, _0xb5786a, _0x1cfee4) {
            _0x544892['_mesh'] = _0xb5786a, _0x544892['_subMeshes'] = _0x1cfee4, _0x544892['_version'] = _0x4874d1, _0x544892['_readData'] = _0x160d50, _0x544892['READ_DATA'](), _0x544892['READ_BLOCK'](), _0x544892['READ_STRIN' + 'GS']();
            for (var _0x4a39 = 0x0, _0x1481d2 = _0x544892['_BLOCK']['count']; _0x4a39 < _0x1481d2; _0x4a39++) {
                _0x544892['_readData']['pos'] = _0x544892['_BLOCK']['blockStart' + 's'][_0x4a39];
                var _0x21d341 = _0x544892['_readData']['getUint16'](), _0x164163 = _0x544892['_strings'][_0x21d341], _0x29bd51 = _0x544892['READ_' + _0x164163];
                if (null == _0x29bd51)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x21d341 + '\x20' + _0x164163);
                _0x29bd51['call'](null);
            }
            _0x544892['_strings']['length'] = 0x0, _0x544892['_readData'] = null, _0x544892['_version'] = null, _0x544892['_mesh'] = null, _0x544892['_subMeshes'] = null;
        }
        static ['_readStrin' + 'g']() {
            return _0x544892['_strings'][_0x544892['_readData']['getUint16']()];
        }
        static ['READ_DATA']() {
            _0x544892['_DATA']['offset'] = _0x544892['_readData']['getUint32'](), _0x544892['_DATA']['size'] = _0x544892['_readData']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x146d6e = _0x544892['_BLOCK']['count'] = _0x544892['_readData']['getUint16'](), _0xb11b99 = _0x544892['_BLOCK']['blockStart' + 's'] = [], _0x4c1bc = _0x544892['_BLOCK']['blockLengt' + 'hs'] = [], _0x4f225f = 0x0; _0x4f225f < _0x146d6e; _0x4f225f++)
                _0xb11b99['push'](_0x544892['_readData']['getUint32']()), _0x4c1bc['push'](_0x544892['_readData']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x3ac671 = _0x544892['_readData']['getUint32'](), _0xd6f3ca = _0x544892['_readData']['getUint16'](), _0x186f47 = _0x544892['_readData']['pos'];
            _0x544892['_readData']['pos'] = _0x3ac671 + _0x544892['_DATA']['offset'];
            for (var _0x3c4f48 = 0x0; _0x3c4f48 < _0xd6f3ca; _0x3c4f48++)
                _0x544892['_strings'][_0x3c4f48] = _0x544892['_readData']['readUTFStr' + 'ing']();
            _0x544892['_readData']['pos'] = _0x186f47;
        }
        static ['READ_MESH']() {
            var _0x22a55b, _0x4b5d79 = _0x2247ad['LayaGL']['instance'], _0x45e430 = 0x0, _0x868bb7 = (_0x544892['_readStrin' + 'g'](), _0x544892['_readData']), _0x1a41a1 = _0x868bb7['__getBuffe' + 'r'](), _0x18360f = _0x868bb7['getInt16'](), _0x124077 = _0x544892['_DATA']['offset'];
            for (_0x22a55b = 0x0; _0x22a55b < _0x18360f; _0x22a55b++) {
                var _0x375043, _0x5f3c27, _0x4e2345, _0x46ef35 = _0x124077 + _0x868bb7['getUint32'](), _0x3df885 = _0x868bb7['getUint32'](), _0x4ab345 = _0x544892['_readStrin' + 'g'](), _0x5b8206 = _0x3fbee7['getVertexD' + 'eclaration'](_0x4ab345, !0x1), _0x3c4c52 = _0x5b8206['vertexStri' + 'de'], _0x44740d = _0x4ab345['split'](','), _0xd39119 = _0x44740d['length'], _0x17859f = _0x544892['_mesh'];
                switch (_0x544892['_version']) {
                case 'LAYAMODEL:' + '05':
                case 'LAYAMODEL:' + '0501':
                    _0x375043 = _0x1a41a1['slice'](_0x46ef35, _0x46ef35 + _0x3df885 * _0x3c4c52), _0x5f3c27 = new Float32Array(_0x375043), _0x4e2345 = new Uint8Array(_0x375043);
                    break;
                case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_05':
                case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501':
                    _0x375043 = new ArrayBuffer(_0x3c4c52 * _0x3df885), _0x5f3c27 = new Float32Array(_0x375043), _0x4e2345 = new Uint8Array(_0x375043);
                    var _0x43abe2 = _0x868bb7['pos'];
                    _0x868bb7['pos'] = _0x46ef35;
                    for (var _0x5e45ff = 0x0; _0x5e45ff < _0x3df885; _0x5e45ff++)
                        for (var _0xcf0ff2, _0x16bb4f = _0x5e45ff * _0x3c4c52, _0x4fe85c = 0x0; _0x4fe85c < _0xd39119; _0x4fe85c++)
                            switch (_0x44740d[_0x4fe85c]) {
                            case 'POSITION':
                                _0x5f3c27[_0xcf0ff2 = _0x16bb4f / 0x4] = _0x43f331['convertToN' + 'umber'](_0x868bb7['getUint16']()), _0x5f3c27[_0xcf0ff2 + 0x1] = _0x43f331['convertToN' + 'umber'](_0x868bb7['getUint16']()), _0x5f3c27[_0xcf0ff2 + 0x2] = _0x43f331['convertToN' + 'umber'](_0x868bb7['getUint16']()), _0x16bb4f += 0xc;
                                break;
                            case 'NORMAL':
                                _0x5f3c27[_0xcf0ff2 = _0x16bb4f / 0x4] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x5f3c27[_0xcf0ff2 + 0x1] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x5f3c27[_0xcf0ff2 + 0x2] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x16bb4f += 0xc;
                                break;
                            case 'COLOR':
                                _0x5f3c27[_0xcf0ff2 = _0x16bb4f / 0x4] = _0x868bb7['getUint8']() / 0xff, _0x5f3c27[_0xcf0ff2 + 0x1] = _0x868bb7['getUint8']() / 0xff, _0x5f3c27[_0xcf0ff2 + 0x2] = _0x868bb7['getUint8']() / 0xff, _0x5f3c27[_0xcf0ff2 + 0x3] = _0x868bb7['getUint8']() / 0xff, _0x16bb4f += 0x10;
                                break;
                            case 'UV':
                            case 'UV1':
                                _0x5f3c27[_0xcf0ff2 = _0x16bb4f / 0x4] = _0x43f331['convertToN' + 'umber'](_0x868bb7['getUint16']()), _0x5f3c27[_0xcf0ff2 + 0x1] = _0x43f331['convertToN' + 'umber'](_0x868bb7['getUint16']()), _0x16bb4f += 0x8;
                                break;
                            case 'BLENDWEIGH' + 'T':
                                _0x5f3c27[_0xcf0ff2 = _0x16bb4f / 0x4] = _0x868bb7['getUint8']() / 0xff, _0x5f3c27[_0xcf0ff2 + 0x1] = _0x868bb7['getUint8']() / 0xff, _0x5f3c27[_0xcf0ff2 + 0x2] = _0x868bb7['getUint8']() / 0xff, _0x5f3c27[_0xcf0ff2 + 0x3] = _0x868bb7['getUint8']() / 0xff, _0x16bb4f += 0x10;
                                break;
                            case 'BLENDINDIC' + 'ES':
                                _0x4e2345[_0x16bb4f] = _0x868bb7['getUint8'](), _0x4e2345[_0x16bb4f + 0x1] = _0x868bb7['getUint8'](), _0x4e2345[_0x16bb4f + 0x2] = _0x868bb7['getUint8'](), _0x4e2345[_0x16bb4f + 0x3] = _0x868bb7['getUint8'](), _0x16bb4f += 0x4;
                                break;
                            case 'TANGENT':
                                _0x5f3c27[_0xcf0ff2 = _0x16bb4f / 0x4] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x5f3c27[_0xcf0ff2 + 0x1] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x5f3c27[_0xcf0ff2 + 0x2] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x5f3c27[_0xcf0ff2 + 0x3] = _0x868bb7['getUint8']() / 127.5 - 0x1, _0x16bb4f += 0x10;
                            }
                    _0x868bb7['pos'] = _0x43abe2;
                }
                var _0x1eeaa1 = new _0x26d078(_0x375043['byteLength'], _0x4b5d79['STATIC_DRA' + 'W'], !0x0);
                _0x1eeaa1['vertexDecl' + 'aration'] = _0x5b8206, _0x1eeaa1['setData'](_0x375043), _0x3df885 = _0x1eeaa1['_byteLengt' + 'h'] / _0x5b8206['vertexStri' + 'de'], (_0x17859f['_indexForm' + 'at'] = _0x3df885 > 0xffff ? _0xc55b22['IndexForma' + 't']['UInt32'] : _0xc55b22['IndexForma' + 't']['UInt16'], _0x17859f['_vertexBuf' + 'fer'] = _0x1eeaa1, _0x17859f['_vertexCou' + 'nt'] += _0x3df885, _0x45e430 += 0x4 * _0x5f3c27['length']);
            }
            var _0x2e8deb, _0x12af65 = _0x124077 + _0x868bb7['getUint32'](), _0x1bab61 = _0x868bb7['getUint32']();
            _0x2e8deb = _0x17859f['indexForma' + 't'] == _0xc55b22['IndexForma' + 't']['UInt32'] ? new Uint32Array(_0x1a41a1['slice'](_0x12af65, _0x12af65 + _0x1bab61)) : new Uint16Array(_0x1a41a1['slice'](_0x12af65, _0x12af65 + _0x1bab61));
            var _0x3119c1 = new _0x2a6e6b(_0x17859f['indexForma' + 't'], _0x2e8deb['length'], _0x4b5d79['STATIC_DRA' + 'W'], !0x0);
            if (_0x3119c1['setData'](_0x2e8deb), _0x17859f['_indexBuff' + 'er'] = _0x3119c1, _0x17859f['_setBuffer'](_0x17859f['_vertexBuf' + 'fer'], _0x3119c1), _0x45e430 += 0x2 * _0x3119c1['indexCount'], _0x17859f['_setCPUMem' + 'ory'](_0x45e430), _0x17859f['_setGPUMem' + 'ory'](_0x45e430), 'LAYAMODEL:' + '0501' == _0x544892['_version'] || 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501' == _0x544892['_version']) {
                var _0x1938f6 = _0x17859f['bounds'], _0x1bc73e = _0x1938f6['getMin'](), _0x37c1a6 = _0x1938f6['getMax']();
                _0x1bc73e['setValue'](_0x868bb7['getFloat32'](), _0x868bb7['getFloat32'](), _0x868bb7['getFloat32']()), _0x37c1a6['setValue'](_0x868bb7['getFloat32'](), _0x868bb7['getFloat32'](), _0x868bb7['getFloat32']()), _0x1938f6['setMin'](_0x1bc73e), _0x1938f6['setMax'](_0x37c1a6), _0x17859f['bounds'] = _0x1938f6;
            }
            var _0x3eb3ef = _0x17859f['_boneNames'] = [], _0x4ae531 = _0x868bb7['getUint16']();
            for (_0x3eb3ef['length'] = _0x4ae531, _0x22a55b = 0x0; _0x22a55b < _0x4ae531; _0x22a55b++)
                _0x3eb3ef[_0x22a55b] = _0x544892['_strings'][_0x868bb7['getUint16']()];
            var _0x399988 = _0x868bb7['getUint32'](), _0xabd9bf = _0x868bb7['getUint32'](), _0x229235 = new Float32Array(_0x1a41a1['slice'](_0x124077 + _0x399988, _0x124077 + _0x399988 + _0xabd9bf)), _0x51c116 = _0x229235['length'], _0x557141 = _0x17859f['_inverseBi' + 'ndPosesBuf' + 'fer'] = new ArrayBuffer(0x4 * _0x51c116);
            for (_0x17859f['_inverseBi' + 'ndPoses'] = [], _0x22a55b = 0x0; _0x22a55b < _0x51c116; _0x22a55b += 0x10) {
                var _0x1000de = new _0x334e9d(_0x229235[_0x22a55b + 0x0], _0x229235[_0x22a55b + 0x1], _0x229235[_0x22a55b + 0x2], _0x229235[_0x22a55b + 0x3], _0x229235[_0x22a55b + 0x4], _0x229235[_0x22a55b + 0x5], _0x229235[_0x22a55b + 0x6], _0x229235[_0x22a55b + 0x7], _0x229235[_0x22a55b + 0x8], _0x229235[_0x22a55b + 0x9], _0x229235[_0x22a55b + 0xa], _0x229235[_0x22a55b + 0xb], _0x229235[_0x22a55b + 0xc], _0x229235[_0x22a55b + 0xd], _0x229235[_0x22a55b + 0xe], _0x229235[_0x22a55b + 0xf], new Float32Array(_0x557141, 0x4 * _0x22a55b, 0x10));
                _0x17859f['_inverseBi' + 'ndPoses'][_0x22a55b / 0x10] = _0x1000de;
            }
            return !0x0;
        }
        static ['READ_SUBME' + 'SH']() {
            var _0x255083 = _0x544892['_readData'], _0x314fd6 = _0x255083['__getBuffe' + 'r'](), _0x5b1de3 = new _0x5d3cd0(_0x544892['_mesh']);
            _0x255083['getInt16']();
            var _0x3ea586 = _0x255083['getUint32'](), _0x5e8433 = _0x255083['getUint32'](), _0x5e0eaa = _0x544892['_mesh']['_indexBuff' + 'er'];
            _0x5b1de3['_indexBuff' + 'er'] = _0x5e0eaa, _0x5b1de3['_setIndexR' + 'ange'](_0x3ea586, _0x5e8433);
            var _0x4251fd = _0x544892['_mesh']['_vertexBuf' + 'fer'];
            _0x5b1de3['_vertexBuf' + 'fer'] = _0x4251fd;
            var _0x4bb685 = _0x544892['_DATA']['offset'], _0x58a467 = _0x5b1de3['_subIndexB' + 'ufferStart'], _0x530c7c = _0x5b1de3['_subIndexB' + 'ufferCount'], _0x481ddf = _0x5b1de3['_boneIndic' + 'esList'], _0x5dd952 = _0x255083['getUint16']();
            _0x58a467['length'] = _0x5dd952, _0x530c7c['length'] = _0x5dd952, _0x481ddf['length'] = _0x5dd952;
            var _0x50aef3 = _0x544892['_mesh']['_skinnedMa' + 'trixCaches'], _0xd77544 = _0x544892['_subMeshes']['length'];
            _0x50aef3['length'] = _0x544892['_mesh']['_inverseBi' + 'ndPoses']['length'];
            for (var _0x21e499 = 0x0; _0x21e499 < _0x5dd952; _0x21e499++) {
                _0x58a467[_0x21e499] = _0x255083['getUint32'](), _0x530c7c[_0x21e499] = _0x255083['getUint32']();
                for (var _0x5cf632 = _0x255083['getUint32'](), _0x39debc = _0x255083['getUint32'](), _0x161429 = _0x481ddf[_0x21e499] = new Uint16Array(_0x314fd6['slice'](_0x4bb685 + _0x5cf632, _0x4bb685 + _0x5cf632 + _0x39debc)), _0x2e9b3b = 0x0, _0x1cf9cd = _0x161429['length']; _0x2e9b3b < _0x1cf9cd; _0x2e9b3b++) {
                    var _0xc5d636 = _0x161429[_0x2e9b3b];
                    _0x50aef3[_0xc5d636] || (_0x50aef3[_0xc5d636] = new _0xb709c4(_0xd77544, _0x21e499, _0x2e9b3b));
                }
            }
            return _0x544892['_subMeshes']['push'](_0x5b1de3), !0x0;
        }
    }
    _0x544892['_BLOCK'] = { 'count': 0x0 }, _0x544892['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x544892['_strings'] = [];
    class _0x3cfa55 {
        static ['_parse'](_0x274b4f, _0xf9019a = null, _0x1535f4 = null) {
            var _0x25549f = new _0x2ace32();
            return _0x3cfa55['read'](_0x274b4f, _0x25549f, _0x25549f['_subMeshes']), _0x25549f;
        }
        static ['read'](_0x53fe97, _0x5ab382, _0x248231) {
            var _0x4564a7 = new _0x2247ad['Byte'](_0x53fe97);
            _0x4564a7['pos'] = 0x0;
            var _0x4e49e6 = _0x4564a7['readUTFStr' + 'ing']();
            switch (_0x4e49e6) {
            case 'LAYAMODEL:' + '0301':
            case 'LAYAMODEL:' + '0400':
            case 'LAYAMODEL:' + '0401':
                _0x3facdf['parse'](_0x4564a7, _0x4e49e6, _0x5ab382, _0x248231);
                break;
            case 'LAYAMODEL:' + '05':
            case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_05':
            case 'LAYAMODEL:' + '0501':
            case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501':
                _0x544892['parse'](_0x4564a7, _0x4e49e6, _0x5ab382, _0x248231);
                break;
            default:
                throw new Error('MeshReader' + ':\x20unknown\x20' + 'mesh\x20versi' + 'on.');
            }
            _0x5ab382['_setSubMes' + 'hes'](_0x248231), 'LAYAMODEL:' + '0501' != _0x4e49e6 && 'LAYAMODEL:' + 'COMPRESSIO' + 'N_0501' != _0x4e49e6 && _0x5ab382['calculateB' + 'ounds']();
        }
    }
    var _0x3bb47f = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#defin' + 'e\x20PI\x203.141' + '59265359\x0d\x0a' + '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0au' + 'niform\x20sam' + 'pler2D\x20u_T' + 'exture;\x0d\x0au' + 'niform\x20vec' + '4\x20u_Textur' + 'eHDRParams' + ';\x0d\x0auniform' + '\x20vec4\x20u_Ti' + 'ntColor;\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec3\x20v_Tex' + 'coord;\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Image18' + '0ScaleAndC' + 'utoff;\x0d\x0ava' + 'rying\x20vec4' + '\x20v_Layout3' + 'DScaleAndO' + 'ffset;\x0d\x0a\x0d\x0a' + 'vec2\x20ToRad' + 'ialCoords(' + 'vec3\x20coord' + 's)\x0d\x0a{\x0d\x0a\x09ve' + 'c3\x20normali' + 'zedCoords\x20' + '=\x20normaliz' + 'e(coords);' + '\x0d\x0a\x09float\x20l' + 'atitude\x20=\x20' + 'acos(norma' + 'lizedCoord' + 's.y);\x0d\x0a\x09fl' + 'oat\x20longit' + 'ude\x20=\x20atan' + '(normalize' + 'dCoords.z,' + 'normalized' + 'Coords.x);' + '\x0d\x0a\x09vec2\x20sp' + 'hereCoords' + '\x20=\x20vec2(lo' + 'ngitude,\x20l' + 'atitude)\x20*' + '\x20vec2(0.5/' + 'PI,\x201.0/PI' + ');\x0d\x0a\x09retur' + 'n\x20vec2(0.5' + ',1.0)\x20-\x20sp' + 'hereCoords' + ';\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x09\x0d\x0a\x09ve' + 'c2\x20tc\x20=\x20To' + 'RadialCoor' + 'ds(v_Texco' + 'ord);\x0d\x0a\x09if' + '\x20(tc.x\x20>\x20v' + '_Image180S' + 'caleAndCut' + 'off.y)\x0d\x0a\x09\x09' + 'gl_FragCol' + 'or=vec4(0,' + '0,0,1);\x0d\x0a\x09' + 'tc.x\x20=\x20mod' + '(tc.x*v_Im' + 'age180Scal' + 'eAndCutoff' + '.x,\x201.0);\x0d' + '\x0a\x09tc\x20=\x20(tc' + '\x20+\x20v_Layou' + 't3DScaleAn' + 'dOffset.xy' + ')\x20*\x20v_Layo' + 'ut3DScaleA' + 'ndOffset.z' + 'w;\x0d\x0a\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'tex\x20=\x20text' + 'ure2D\x20(u_T' + 'exture,\x20tc' + ');\x0d\x0a\x09mediu' + 'mp\x20vec3\x20c\x20' + '=\x20decodeHD' + ('R\x20(tex,\x20u_' + 'TextureHDR' + 'Params.x);' + '\x0d\x0a\x09c\x20=\x20c\x20*' + '\x20u_TintCol' + 'or.rgb\x20*\x202' + '.0;//Gamma' + '\x20Space\x20is\x20' + '2.0,linear' + '\x20space\x20is\x20' + '4.59479380' + '\x0d\x0a\x09gl_Frag' + 'Color=vec4' + '(c,\x201.0);\x0d' + '\x0a}\x0d\x0a\x0d\x0a'), _0x1106c5 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0a#' + 'define\x20PI\x20' + '3.14159265' + '359\x0d\x0a\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Positi' + 'on;\x0d\x0a\x0d\x0auni' + 'form\x20mat4\x20' + 'u_ViewProj' + 'ection;\x0d\x0au' + 'niform\x20flo' + 'at\x20u_Rotat' + 'ion;\x0d\x0a\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Texcoor' + 'd;\x0d\x0avaryin' + 'g\x20vec2\x20v_I' + 'mage180Sca' + 'leAndCutof' + 'f;\x0d\x0avaryin' + 'g\x20vec4\x20v_L' + 'ayout3DSca' + 'leAndOffse' + 't;\x0d\x0a\x0d\x0avec4' + '\x20rotateAro' + 'undYInDegr' + 'ees\x20(vec4\x20' + 'vertex,\x20fl' + 'oat\x20degree' + 's)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20angle\x20' + '=\x20degrees\x20' + '*\x20PI\x20/\x20180' + '.0;\x0d\x0a\x09floa' + 't\x20sina=sin' + '(angle);\x0d\x0a' + '\x09float\x20cos' + 'a=cos(angl' + 'e);\x0d\x0a\x09mat2' + '\x20m\x20=\x20mat2(' + 'cosa,\x20-sin' + 'a,\x20sina,\x20c' + 'osa);\x0d\x0a\x09re' + 'turn\x20vec4(' + 'm*vertex.x' + 'z,\x20vertex.' + 'yw).xzyw;\x0d' + '\x0a}\x0d\x0a\x0d\x0a\x09\x09\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x09vec' + '4\x20position' + '\x20=\x20rotateA' + 'roundYInDe' + 'grees(a_Po' + 'sition,\x20u_' + 'Rotation);' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20u_V' + 'iewProject' + 'ion*positi' + 'on;\x0d\x0a\x0d\x0a\x09v_' + 'Texcoord=v' + 'ec3(-a_Pos' + 'ition.x,-a' + '_Position.' + 'y,a_Positi' + 'on.z);//\x20N' + 'OTE:\x20-a_Po' + 'sition.x\x20c' + 'onvert\x20coo' + 'rds\x20system' + '\x0d\x0a\x0d\x0a\x09//\x20Ca' + 'lculate\x20co' + 'nstant\x20hor' + 'izontal\x20sc' + 'ale\x20and\x20cu' + 'toff\x20for\x201' + '80\x20(vs\x20360' + ')\x20image\x20ty' + 'pe\x0d\x0a\x09v_Ima' + 'ge180Scale' + 'AndCutoff\x20' + '=\x20vec2(1.0' + ',\x201.0);//\x20' + '360\x20degree' + '\x20mode\x0d\x0a\x0d\x0a\x09' + '//\x20Calcula' + 'te\x20constan' + 't\x20scale\x20an' + 'd\x20offset\x20f' + 'or\x203D\x20layo' + 'uts\x0d\x0a\x09v_La' + 'yout3DScal' + 'eAndOffset' + '\x20=\x20vec4(0,' + '0,1,1);\x0d\x0a}' + '\x0d\x0a';
    class _0x347c77 extends _0x57c0e0 {
        constructor() {
            super(), this['_exposure'] = 0x1, this['_textureDe' + 'codeFormat'] = _0x2247ad['TextureDec' + 'odeFormat']['Normal'], this['_textureHD' + 'RParams'] = new _0x4cec8f(0x1, 0x0, 0x0, 0x1), this['setShaderN' + 'ame']('SkyPanoram' + 'ic');
            var _0x35453f = this['_shaderVal' + 'ues'];
            _0x35453f['setVector'](_0x347c77['TINTCOLOR'], new _0x4cec8f(0.5, 0.5, 0.5, 0.5)), _0x35453f['setNumber'](_0x347c77['ROTATION'], 0x0), _0x35453f['setVector'](_0x347c77['TEXTURE_HD' + 'R_PARAMS'], this['_textureHD' + 'RParams']);
        }
        static ['__init__']() {
            var _0x4d7ec0 = { 'a_Position': _0x3fbee7['MESH_POSIT' + 'ION0'] }, _0x427f20 = {
                    'u_TintColor': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_TextureHDRParams': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_Rotation': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_Texture': _0x38ffce['PERIOD_MAT' + 'ERIAL'],
                    'u_ViewProjection': _0x38ffce['PERIOD_CAM' + 'ERA']
                }, _0x23b2a4 = _0x38ffce['add']('SkyPanoram' + 'ic'), _0x542a62 = new _0x21aa4f(_0x4d7ec0, _0x427f20);
            _0x23b2a4['addSubShad' + 'er'](_0x542a62), _0x542a62['addShaderP' + 'ass'](_0x1106c5, _0x3bb47f);
        }
        get ['tintColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x347c77['TINTCOLOR']);
        }
        set ['tintColor'](_0xf3a851) {
            this['_shaderVal' + 'ues']['setVector'](_0x347c77['TINTCOLOR'], _0xf3a851);
        }
        get ['exposure']() {
            return this['_exposure'];
        }
        set ['exposure'](_0x57c6c7) {
            this['_exposure'] !== _0x57c6c7 && (this['_exposure'] = _0x57c6c7, this['_textureDe' + 'codeFormat'] == _0x2247ad['TextureDec' + 'odeFormat']['RGBM'] ? this['_textureHD' + 'RParams']['x'] = _0x57c6c7 * _0x2247ad['BaseTextur' + 'e']['_rgbmRange'] : this['_textureHD' + 'RParams']['x'] = _0x57c6c7);
        }
        get ['rotation']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x347c77['ROTATION']);
        }
        set ['rotation'](_0x1c4c08) {
            this['_shaderVal' + 'ues']['setNumber'](_0x347c77['ROTATION'], _0x1c4c08);
        }
        get ['panoramicT' + 'exture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x347c77['TEXTURE']);
        }
        set ['panoramicT' + 'exture'](_0x370a30) {
            this['_shaderVal' + 'ues']['setTexture'](_0x347c77['TEXTURE'], _0x370a30);
        }
        get ['panoramicT' + 'extureDeco' + 'deFormat']() {
            return this['_textureDe' + 'codeFormat'];
        }
        set ['panoramicT' + 'extureDeco' + 'deFormat'](_0x47823f) {
            this['_textureDe' + 'codeFormat'] !== _0x47823f && (this['_textureDe' + 'codeFormat'] = _0x47823f, _0x47823f == _0x2247ad['TextureDec' + 'odeFormat']['RGBM'] ? this['_textureHD' + 'RParams']['x'] = this['_exposure'] * _0x2247ad['BaseTextur' + 'e']['_rgbmRange'] : this['_textureHD' + 'RParams']['x'] = this['_exposure']);
        }
    }
    _0x347c77['TINTCOLOR'] = _0x38ffce['propertyNa' + 'meToID']('u_TintColo' + 'r'), _0x347c77['EXPOSURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Exposure'), _0x347c77['ROTATION'] = _0x38ffce['propertyNa' + 'meToID']('u_Rotation'), _0x347c77['TEXTURE'] = _0x38ffce['propertyNa' + 'meToID']('u_Texture'), _0x347c77['TEXTURE_HD' + 'R_PARAMS'] = _0x38ffce['propertyNa' + 'meToID']('u_TextureH' + 'DRParams');
    class _0x54dc3e {
        constructor() {
        }
        static get ['enablePhys' + 'ics']() {
            return _0x57b18d['_enablePhy' + 'sics'];
        }
        static ['_cancelLoa' + 'dByUrl'](_0xc47f26) {
            _0x2247ad['Laya']['loader']['cancelLoad' + 'ByUrl'](_0xc47f26), _0x54dc3e['_innerFirs' + 'tLevelLoad' + 'erManager']['cancelLoad' + 'ByUrl'](_0xc47f26), _0x54dc3e['_innerSeco' + 'ndLevelLoa' + 'derManager']['cancelLoad' + 'ByUrl'](_0xc47f26), _0x54dc3e['_innerThir' + 'dLevelLoad' + 'erManager']['cancelLoad' + 'ByUrl'](_0xc47f26), _0x54dc3e['_innerFour' + 'thLevelLoa' + 'derManager']['cancelLoad' + 'ByUrl'](_0xc47f26);
        }
        static ['_changeWeb' + 'GLSize'](_0x3a0620, _0x5f2514) {
            _0x2247ad['WebGL']['onStageRes' + 'ize'](_0x3a0620, _0x5f2514), _0x5ac2c4['clientWidt' + 'h'] = _0x3a0620, _0x5ac2c4['clientHeig' + 'ht'] = _0x5f2514;
        }
        static ['__init__'](_0x59b52b, _0x256c45, _0x5f5bcb) {
            if (_0x2247ad['Config']['isAntialia' + 's'] = _0x5f5bcb['isAntialia' + 's'], _0x2247ad['Config']['isAlpha'] = _0x5f5bcb['isAlpha'], _0x2247ad['Config']['premultipl' + 'iedAlpha'] = _0x5f5bcb['premultipl' + 'iedAlpha'], _0x2247ad['Config']['isStencil'] = _0x5f5bcb['isStencil'], _0x2247ad['WebGL']['enable']()) {
                _0x2247ad['RunDriver']['changeWebG' + 'LSize'] = _0x54dc3e['_changeWeb' + 'GLSize'], _0x2247ad['Render']['is3DMode'] = !0x0, _0x2247ad['Laya']['init'](_0x59b52b, _0x256c45), _0x2247ad['Render']['supportWeb' + 'GLPlusRend' + 'ering'] || (_0x2247ad['LayaGL']['instance'] = _0x2247ad['WebGLConte' + 'xt']['mainContex' + 't'], _0x2247ad['LayaGL']['instance']['createComm' + 'andEncoder'] = function (_0x160e3b = 0x80, _0x646b8 = 0x40, _0xa8f5ae = !0x1) {
                    return new _0x2247ad['CommandEnc' + 'oder'](this, _0x160e3b, _0x646b8, _0xa8f5ae);
                }), _0x5f5bcb['_multiLigh' + 'ting'] = _0x5f5bcb['enableMult' + 'iLight'] && _0x2247ad['SystemUtil' + 's']['supportTex' + 'tureFormat'](_0x2247ad['TextureFor' + 'mat']['R32G32B32A' + '32']), _0x1fc38b['Shader3D'] = _0x38ffce, _0x1fc38b['Scene3D'] = _0x441dfb, _0x1fc38b['MeshRender' + 'StaticBatc' + 'hManager'] = _0x55bbc5, _0x1fc38b['MeshRender' + 'DynamicBat' + 'chManager'] = _0x24a344, _0x1fc38b['SubMeshDyn' + 'amicBatch'] = _0x57c611, _0x1fc38b['Laya3D'] = _0x54dc3e, _0x1fc38b['Matrix4x4'] = _0x334e9d, _0x54dc3e['enableNati' + 've3D'](), _0x163e87['__init__'](), _0x3fbee7['__init__'](), _0x4fa401['__init__'](), _0x26aea6['__init__'](), _0x43dacf['__init__'](), _0x1f1c8d['__init__'](), _0x56ddbb['__init__'](), _0x4b6660['__init__'](), _0x5e7887['__init__'](), _0x57c611['__init__'](), _0x57b18d['_bullet'] = window['Physics3D'], _0x57b18d['_bullet'] && (_0x200f6f['__init__'](), _0x579b03['__init__'](), _0x2e190c['__init__'](), _0x4da2bb['__init__'](), _0x25e128['__init__'](), _0x1eeb8b['__init__'](), _0x5adbea['__init__'](), _0x2bab33['__init__'](), _0x37d35e['__init__']()), _0x378eeb['__init__'](), _0x365e32['init'](), _0x3028f9['__init__'](), _0x2062f1['__init__'](), _0x4f1c9a['__init__'](), _0x347c77['__init__'](), _0x2ace32['__init__'](), _0x39a97b['__init__'](), _0x39cab4['__init__'](), _0x333e4a['__init__'](), _0x32da4a['__init__'](), _0x279241['__init__'](), _0x568b78['__init__'](), _0x5f4d1d['__init__'](), _0x1206fe['__init__'](), _0x441dfb['__init__'](), _0x55bbc5['__init__'](), _0x57c0e0['__initDefi' + 'ne__'](), _0x297e96['__initDefi' + 'ne__'](), _0x26565b['__initDefi' + 'ne__'](), _0x3a7709['__initDefi' + 'ne__'](), _0x112bdf['__initDefi' + 'ne__'](), _0x3769bc['__initDefi' + 'ne__'](), _0xa43ab6['__initDefi' + 'ne__'](), _0x19a695['__initDefi' + 'ne__'](), _0x2651fd['__initDefi' + 'ne__'](), _0x1d84f9['__initDefi' + 'ne__'](), _0x5f3bb6['__initDefi' + 'ne__'](), _0x40b2a5['__initDefi' + 'ne__'](), _0x4bf6e1['__init__'](), _0x2247ad['ClassUtils']['regClass']('Laya.SkyPa' + 'noramicMat' + 'erial', _0x347c77), _0x2247ad['ClassUtils']['regClass']('Laya.Effec' + 'tMaterial', _0xa43ab6), _0x2247ad['ClassUtils']['regClass']('Laya.Unlit' + 'Material', _0x112bdf), _0x2247ad['ClassUtils']['regClass']('Laya.Blinn' + 'PhongMater' + 'ial', _0x26565b), _0x2247ad['ClassUtils']['regClass']('Laya.SkyPr' + 'oceduralMa' + 'terial', _0x3a7709), _0x2247ad['ClassUtils']['regClass']('Laya.PBRSt' + 'andardMate' + 'rial', _0x2062f1), _0x2247ad['ClassUtils']['regClass']('Laya.PBRSp' + 'ecularMate' + 'rial', _0x4f1c9a), _0x2247ad['ClassUtils']['regClass']('Laya.SkyBo' + 'xMaterial', _0x40b2a5), _0x2247ad['ClassUtils']['regClass']('Laya.Water' + 'PrimaryMat' + 'erial', _0x19a695), _0x2247ad['ClassUtils']['regClass']('Laya.Exten' + 'dTerrainMa' + 'terial', _0x1d84f9), _0x2247ad['ClassUtils']['regClass']('Laya.Shuri' + 'kenParticl' + 'eMaterial', _0x2651fd), _0x2247ad['ClassUtils']['regClass']('Laya.Trail' + 'Material', _0x3769bc), _0x2247ad['ClassUtils']['regClass']('Laya.Physi' + 'csCollider', _0x29a886), _0x2247ad['ClassUtils']['regClass']('Laya.Rigid' + 'body3D', _0x37d35e), _0x2247ad['ClassUtils']['regClass']('Laya.Chara' + 'cterContro' + 'ller', _0x2bab33), _0x2247ad['ClassUtils']['regClass']('Laya.Anima' + 'tor', _0x4532ef), _0x2247ad['ClassUtils']['regClass']('PhysicsCol' + 'lider', _0x29a886), _0x2247ad['ClassUtils']['regClass']('CharacterC' + 'ontroller', _0x2bab33), _0x2247ad['ClassUtils']['regClass']('Animator', _0x4532ef), _0x2247ad['ClassUtils']['regClass']('Rigidbody3' + 'D', _0x37d35e), _0x5f3bb6['defaultMat' + 'erial'] = new _0x5f3bb6(), _0x26565b['defaultMat' + 'erial'] = new _0x26565b(), _0xa43ab6['defaultMat' + 'erial'] = new _0xa43ab6(), _0x112bdf['defaultMat' + 'erial'] = new _0x112bdf(), _0x2651fd['defaultMat' + 'erial'] = new _0x2651fd(), _0x3769bc['defaultMat' + 'erial'] = new _0x3769bc(), _0x3a7709['defaultMat' + 'erial'] = new _0x3a7709(), _0x40b2a5['defaultMat' + 'erial'] = new _0x40b2a5(), _0x19a695['defaultMat' + 'erial'] = new _0x19a695(), _0x5f3bb6['defaultMat' + 'erial']['lock'] = !0x0, _0x26565b['defaultMat' + 'erial']['lock'] = !0x0, _0xa43ab6['defaultMat' + 'erial']['lock'] = !0x0, _0x112bdf['defaultMat' + 'erial']['lock'] = !0x0, _0x2651fd['defaultMat' + 'erial']['lock'] = !0x0, _0x3769bc['defaultMat' + 'erial']['lock'] = !0x0, _0x3a7709['defaultMat' + 'erial']['lock'] = !0x0, _0x40b2a5['defaultMat' + 'erial']['lock'] = !0x0, _0x19a695['defaultMat' + 'erial']['lock'] = !0x0, _0x2247ad['Texture2D']['__init__'](), _0x307e95['__init__'](), _0x47c080['__init__'](), _0x1252a2['__init__'](), _0x2118d3['__init__'](), _0x10d4f1['__init__'](), _0x5da8ae['__init__'](), _0x43f331['__init__']();
                var _0x374427 = _0x2247ad['LoaderMana' + 'ger']['createMap'];
                _0x374427['lh'] = [
                    _0x54dc3e['HIERARCHY'],
                    _0x30b055['_parse']
                ], _0x374427['ls'] = [
                    _0x54dc3e['HIERARCHY'],
                    _0x30b055['_parseScen' + 'e']
                ], _0x374427['lm'] = [
                    _0x54dc3e['MESH'],
                    _0x3cfa55['_parse']
                ], _0x374427['lmat'] = [
                    _0x54dc3e['MATERIAL'],
                    _0x57c0e0['_parse']
                ], _0x374427['jpg'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['jpeg'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['bmp'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['gif'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['png'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['dds'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['ktx'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['pvr'] = [
                    _0x54dc3e['TEXTURE2D'],
                    _0x2247ad['Texture2D']['_parse']
                ], _0x374427['lani'] = [
                    _0x54dc3e['ANIMATIONC' + 'LIP'],
                    _0x584142['_parse']
                ], _0x374427['lav'] = [
                    _0x54dc3e['AVATAR'],
                    _0xea2818['_parse']
                ], _0x374427['ltc'] = [
                    _0x54dc3e['TEXTURECUB' + 'E'],
                    _0x307e95['_parse']
                ], _0x374427['ltcb'] = [
                    _0x54dc3e['TEXTURECUB' + 'EBIN'],
                    _0x307e95['_parseBin']
                ];
                var _0x216533 = _0x2247ad['Loader']['parserMap'];
                _0x216533[_0x54dc3e['HIERARCHY']] = _0x54dc3e['_loadHiera' + 'rchy'], _0x216533[_0x54dc3e['MESH']] = _0x54dc3e['_loadMesh'], _0x216533[_0x54dc3e['MATERIAL']] = _0x54dc3e['_loadMater' + 'ial'], _0x216533[_0x54dc3e['TEXTURECUB' + 'E']] = _0x54dc3e['_loadTextu' + 'reCube'], _0x216533[_0x54dc3e['TEXTURECUB' + 'EBIN']] = _0x54dc3e['_loadTextu' + 'reCubeBin'], _0x216533[_0x54dc3e['TEXTURE2D']] = _0x54dc3e['_loadTextu' + 're2D'], _0x216533[_0x54dc3e['ANIMATIONC' + 'LIP']] = _0x54dc3e['_loadAnima' + 'tionClip'], _0x216533[_0x54dc3e['AVATAR']] = _0x54dc3e['_loadAvata' + 'r'], _0x54dc3e['_innerFirs' + 'tLevelLoad' + 'erManager']['on'](_0x2247ad['Event']['ERROR'], null, _0x54dc3e['_eventLoad' + 'ManagerErr' + 'or']), _0x54dc3e['_innerSeco' + 'ndLevelLoa' + 'derManager']['on'](_0x2247ad['Event']['ERROR'], null, _0x54dc3e['_eventLoad' + 'ManagerErr' + 'or']), _0x54dc3e['_innerThir' + 'dLevelLoad' + 'erManager']['on'](_0x2247ad['Event']['ERROR'], null, _0x54dc3e['_eventLoad' + 'ManagerErr' + 'or']), _0x54dc3e['_innerFour' + 'thLevelLoa' + 'derManager']['on'](_0x2247ad['Event']['ERROR'], null, _0x54dc3e['_eventLoad' + 'ManagerErr' + 'or']);
            } else
                alert('Laya3D\x20ini' + 't\x20error,mu' + 'st\x20support' + '\x20webGL!');
        }
        static ['enableNati' + 've3D']() {
            var _0x3e4e70 = _0x5e515b, _0x23cb38 = _0x1c10b8, _0x2be545 = _0x29cfd6, _0x498b14 = _0xea2818, _0xe96187 = _0x5da8ae;
            if (_0x2247ad['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && (_0x3e4e70['prototype']['_initData'] = _0x3e4e70['prototype']['_initDataF' + 'orNative'], _0x3e4e70['prototype']['setBool'] = _0x3e4e70['prototype']['setBoolFor' + 'Native'], _0x3e4e70['prototype']['getBool'] = _0x3e4e70['prototype']['getBoolFor' + 'Native'], _0x3e4e70['prototype']['setInt'] = _0x3e4e70['prototype']['setIntForN' + 'ative'], _0x3e4e70['prototype']['getInt'] = _0x3e4e70['prototype']['getIntForN' + 'ative'], _0x3e4e70['prototype']['setNumber'] = _0x3e4e70['prototype']['setNumberF' + 'orNative'], _0x3e4e70['prototype']['getNumber'] = _0x3e4e70['prototype']['getNumberF' + 'orNative'], _0x3e4e70['prototype']['setVector'] = _0x3e4e70['prototype']['setVectorF' + 'orNative'], _0x3e4e70['prototype']['getVector'] = _0x3e4e70['prototype']['getVectorF' + 'orNative'], _0x3e4e70['prototype']['setVector2'] = _0x3e4e70['prototype']['setVector2' + 'ForNative'], _0x3e4e70['prototype']['getVector2'] = _0x3e4e70['prototype']['getVector2' + 'ForNative'], _0x3e4e70['prototype']['setVector3'] = _0x3e4e70['prototype']['setVector3' + 'ForNative'], _0x3e4e70['prototype']['getVector3'] = _0x3e4e70['prototype']['getVector3' + 'ForNative'], _0x3e4e70['prototype']['setQuatern' + 'ion'] = _0x3e4e70['prototype']['setQuatern' + 'ionForNati' + 've'], _0x3e4e70['prototype']['getQuatern' + 'ion'] = _0x3e4e70['prototype']['getQuatern' + 'ionForNati' + 've'], _0x3e4e70['prototype']['setMatrix4' + 'x4'] = _0x3e4e70['prototype']['setMatrix4' + 'x4ForNativ' + 'e'], _0x3e4e70['prototype']['getMatrix4' + 'x4'] = _0x3e4e70['prototype']['getMatrix4' + 'x4ForNativ' + 'e'], _0x3e4e70['prototype']['setBuffer'] = _0x3e4e70['prototype']['setBufferF' + 'orNative'], _0x3e4e70['prototype']['getBuffer'] = _0x3e4e70['prototype']['getBufferF' + 'orNative'], _0x3e4e70['prototype']['setTexture'] = _0x3e4e70['prototype']['setTexture' + 'ForNative'], _0x3e4e70['prototype']['getTexture'] = _0x3e4e70['prototype']['getTexture' + 'ForNative'], _0x3e4e70['prototype']['setAttribu' + 'te'] = _0x3e4e70['prototype']['setAttribu' + 'teForNativ' + 'e'], _0x3e4e70['prototype']['getAttribu' + 'te'] = _0x3e4e70['prototype']['getAttribu' + 'teForNativ' + 'e'], _0x3e4e70['prototype']['cloneTo'] = _0x3e4e70['prototype']['cloneToFor' + 'Native'], _0x3e4e70['prototype']['getData'] = _0x3e4e70['prototype']['getDataFor' + 'Native'], _0x23cb38['prototype']['_uniformMa' + 'trix2fv'] = _0x23cb38['prototype']['_uniformMa' + 'trix2fvFor' + 'Native'], _0x23cb38['prototype']['_uniformMa' + 'trix3fv'] = _0x23cb38['prototype']['_uniformMa' + 'trix3fvFor' + 'Native'], _0x23cb38['prototype']['_uniformMa' + 'trix4fv'] = _0x23cb38['prototype']['_uniformMa' + 'trix4fvFor' + 'Native'], _0x2247ad['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms'] = _0x2247ad['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms' + 'ForNative']), _0x2247ad['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (_0xe96187['renderObje' + 'ctCulling'] = _0x5da8ae['renderObje' + 'ctCullingN' + 'ative']), _0x2247ad['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                _0x498b14['prototype']['_cloneData' + 'sToAnimato' + 'r'] = _0x498b14['prototype']['_cloneData' + 'sToAnimato' + 'rNative'];
                var _0x1b72b5 = _0x584142;
                _0x1b72b5['prototype']['_evaluateC' + 'lipDatasRe' + 'alTime'] = _0x1b72b5['prototype']['_evaluateC' + 'lipDatasRe' + 'alTimeForN' + 'ative'], _0x2be545['prototype']['_computeSk' + 'innedData'] = _0x2be545['prototype']['_computeSk' + 'innedDataF' + 'orNative'];
            }
        }
        static ['formatRela' + 'tivePath'](_0x15f062, _0x47fe4a) {
            var _0x438f91;
            if (_0x438f91 = _0x15f062 + _0x47fe4a, '.' === _0x47fe4a['charAt'](0x0)) {
                for (var _0x35e977 = _0x438f91['split']('/'), _0x332368 = 0x0, _0x1277b7 = _0x35e977['length']; _0x332368 < _0x1277b7; _0x332368++)
                    if ('..' == _0x35e977[_0x332368]) {
                        var _0x578ced = _0x332368 - 0x1;
                        _0x578ced > 0x0 && '..' !== _0x35e977[_0x578ced] && (_0x35e977['splice'](_0x578ced, 0x2), _0x332368 -= 0x2);
                    }
                _0x438f91 = _0x35e977['join']('/');
            }
            return _0x438f91;
        }
        static ['_endLoad'](_0x503311, _0x2e31d2 = null, _0xe43f97 = null) {
            if (_0xe43f97)
                for (var _0x8b98d9 = 0x0, _0x21f98e = _0xe43f97['length']; _0x8b98d9 < _0x21f98e; _0x8b98d9++) {
                    var _0x543761 = _0x2247ad['Loader']['getRes'](_0xe43f97[_0x8b98d9]);
                    _0x543761 && _0x543761['_removeRef' + 'erence']();
                }
            _0x503311['endLoad'](_0x2e31d2);
        }
        static ['_eventLoad' + 'ManagerErr' + 'or'](_0x114664) {
            _0x2247ad['Laya']['loader']['event'](_0x2247ad['Event']['ERROR'], _0x114664);
        }
        static ['_addHierar' + 'chyInnerUr' + 'ls'](_0x3c5dba, _0x383129, _0x12a834, _0x1262c2, _0x4b5021, _0x58877e, _0x2a56a4 = null, _0x162844 = null) {
            var _0x34057b = _0x54dc3e['formatRela' + 'tivePath'](_0x1262c2, _0x4b5021);
            return _0x12a834 && (_0x34057b += _0x12a834), _0x3c5dba['push']({
                'url': _0x34057b,
                'type': _0x58877e,
                'constructParams': _0x2a56a4,
                'propertyParams': _0x162844
            }), _0x383129['push'](_0x34057b), _0x34057b;
        }
        static ['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0xdf67e, _0x47748e, _0x50528a, _0x2b06c6, _0x1b41fa, _0x501b59, _0x58678a, _0xff1051) {
            var _0x1a4216, _0x29931e, _0x5cec17 = _0xdf67e['props'];
            switch (_0xdf67e['type']) {
            case 'Scene3D':
                var _0x20d85a = _0x5cec17['lightmaps'];
                for (_0x1a4216 = 0x0, _0x29931e = _0x20d85a['length']; _0x1a4216 < _0x29931e; _0x1a4216++) {
                    var _0x5690da = _0x20d85a[_0x1a4216];
                    if (_0x5690da['path'])
                        _0x5690da['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x5690da['path'], _0x54dc3e['TEXTURE2D'], _0x5690da['constructP' + 'arams'], _0x5690da['propertyPa' + 'rams']);
                    else {
                        var _0x574d71 = _0x5690da['color'];
                        _0x574d71['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x574d71['path'], _0x54dc3e['TEXTURE2D'], _0x574d71['constructP' + 'arams'], _0x574d71['propertyPa' + 'rams']);
                        var _0x499db5 = _0x5690da['direction'];
                        _0x499db5 && (_0x499db5['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x499db5['path'], _0x54dc3e['TEXTURE2D'], _0x499db5['constructP' + 'arams'], _0x499db5['propertyPa' + 'rams']));
                    }
                }
                var _0x6ad20f = _0x5cec17['reflection' + 'Texture'];
                _0x6ad20f && (_0x5cec17['reflection'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x2b06c6, _0x501b59, _0x58678a, _0xff1051, _0x6ad20f, _0x54dc3e['TEXTURECUB' + 'E']));
                var _0x4c1a25 = _0x5cec17['reflection'];
                if (_0x4c1a25 && (_0x5cec17['reflection'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x4c1a25, _0x54dc3e['TEXTURECUB' + 'EBIN'])), _0x5cec17['sky']) {
                    var _0x5db6d6 = _0x5cec17['sky']['material'];
                    _0x5db6d6 && (_0x5db6d6['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x50528a, _0x501b59, _0x58678a, _0xff1051, _0x5db6d6['path'], _0x54dc3e['MATERIAL']));
                }
                break;
            case 'Camera':
                var _0x2a9754 = _0x5cec17['skyboxMate' + 'rial'];
                _0x2a9754 && (_0x2a9754['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x50528a, _0x501b59, _0x58678a, _0xff1051, _0x2a9754['path'], _0x54dc3e['MATERIAL']));
                break;
            case 'TrailSprit' + 'e3D':
            case 'MeshSprite' + '3D':
            case 'SkinnedMes' + 'hSprite3D':
                var _0x108a55 = _0x5cec17['meshPath'];
                _0x108a55 && (_0x5cec17['meshPath'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x47748e, _0x501b59, _0x58678a, _0xff1051, _0x108a55, _0x54dc3e['MESH']));
                var _0x56f8ce = _0x5cec17['materials'];
                if (_0x56f8ce) {
                    for (_0x1a4216 = 0x0, _0x29931e = _0x56f8ce['length']; _0x1a4216 < _0x29931e; _0x1a4216++)
                        _0x56f8ce[_0x1a4216]['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x50528a, _0x501b59, _0x58678a, _0xff1051, _0x56f8ce[_0x1a4216]['path'], _0x54dc3e['MATERIAL']);
                }
                break;
            case 'ShuriKenPa' + 'rticle3D':
                if (_0x5cec17['main']) {
                    var _0x11b9a5 = _0x5cec17['renderer']['resources'], _0x2ba34b = _0x11b9a5['mesh'], _0x7f7acc = _0x11b9a5['material'];
                    _0x2ba34b && (_0x11b9a5['mesh'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x47748e, _0x501b59, _0x58678a, _0xff1051, _0x2ba34b, _0x54dc3e['MESH'])), _0x7f7acc && (_0x11b9a5['material'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x50528a, _0x501b59, _0x58678a, _0xff1051, _0x7f7acc, _0x54dc3e['MATERIAL']));
                } else {
                    var _0x4772f9 = _0x5cec17['meshPath'];
                    _0x4772f9 && (_0x5cec17['meshPath'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x47748e, _0x501b59, _0x58678a, _0xff1051, _0x4772f9, _0x54dc3e['MESH'])), _0x5cec17['material']['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x50528a, _0x501b59, _0x58678a, _0xff1051, _0x5cec17['material']['path'], _0x54dc3e['MATERIAL']);
                }
                break;
            case 'Terrain':
                _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x5cec17['dataPath'], _0x54dc3e['TERRAINRES']);
            }
            var _0x1faf42 = _0xdf67e['components'];
            if (_0x1faf42)
                for (var _0x97ac6c = 0x0, _0x38b7dc = _0x1faf42['length']; _0x97ac6c < _0x38b7dc; _0x97ac6c++) {
                    var _0x4ef693 = _0x1faf42[_0x97ac6c];
                    switch (_0x4ef693['type']) {
                    case 'Animator':
                        _0x4ef693['avatarPath'];
                        var _0x4f1de8 = _0x4ef693['avatar'];
                        _0x4f1de8 && (_0x4f1de8['path'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x4f1de8['path'], _0x54dc3e['AVATAR']));
                        var _0x2e5d1d = _0x4ef693['clipPaths'];
                        if (_0x2e5d1d) {
                            for (_0x1a4216 = 0x0, _0x29931e = _0x2e5d1d['length']; _0x1a4216 < _0x29931e; _0x1a4216++)
                                _0x2e5d1d[_0x1a4216] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x2e5d1d[_0x1a4216], _0x54dc3e['ANIMATIONC' + 'LIP']);
                        } else {
                            var _0x4a9842 = _0x4ef693['layers'];
                            for (_0x1a4216 = 0x0; _0x1a4216 < _0x4a9842['length']; _0x1a4216++)
                                for (var _0x1a85a9 = _0x4a9842[_0x1a4216]['states'], _0xab224d = 0x0, _0x23d974 = _0x1a85a9['length']; _0xab224d < _0x23d974; _0xab224d++) {
                                    var _0x4009cf = _0x1a85a9[_0xab224d]['clipPath'];
                                    _0x4009cf && (_0x1a85a9[_0xab224d]['clipPath'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x1b41fa, _0x501b59, _0x58678a, _0xff1051, _0x4009cf, _0x54dc3e['ANIMATIONC' + 'LIP']));
                                }
                        }
                        break;
                    case 'PhysicsCol' + 'lider':
                    case 'Rigidbody3' + 'D':
                    case 'CharacterC' + 'ontroller':
                        var _0x35c6e0 = _0x4ef693['shapes'];
                        for (_0x1a4216 = 0x0; _0x1a4216 < _0x35c6e0['length']; _0x1a4216++) {
                            var _0x35e4e6 = _0x35c6e0[_0x1a4216];
                            if ('MeshCollid' + 'erShape' === _0x35e4e6['type'])
                                (_0x2ba34b = _0x35e4e6['mesh']) && (_0x35e4e6['mesh'] = _0x54dc3e['_addHierar' + 'chyInnerUr' + 'ls'](_0x47748e, _0x501b59, _0x58678a, _0xff1051, _0x2ba34b, _0x54dc3e['MESH']));
                        }
                    }
                }
            var _0x56bbf9 = _0xdf67e['child'];
            for (_0x1a4216 = 0x0, _0x29931e = _0x56bbf9['length']; _0x1a4216 < _0x29931e; _0x1a4216++)
                _0x54dc3e['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x56bbf9[_0x1a4216], _0x47748e, _0x50528a, _0x2b06c6, _0x1b41fa, _0x501b59, _0x58678a, _0xff1051);
        }
        static ['_loadHiera' + 'rchy'](_0x2c5abf) {
            _0x2c5abf['on'](_0x2247ad['Event']['LOADED'], null, _0x54dc3e['_onHierarc' + 'hylhLoaded'], [_0x2c5abf]), _0x2c5abf['load'](_0x2c5abf['url'], _0x2247ad['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_onHierarc' + 'hylhLoaded'](_0x571ce0, _0x158dfd) {
            var _0xfb4cf7 = _0x571ce0['url'], _0x3f6f5b = _0x101904['getURLVeri' + 'on'](_0xfb4cf7), _0x5a2d55 = _0x2247ad['URL']['getPath'](_0xfb4cf7), _0x147355 = [], _0x3ea604 = [], _0x109f29 = [], _0x1a9f9f = [], _0x3a9e5f = [];
            _0x54dc3e['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x158dfd['data'], _0x147355, _0x3ea604, _0x109f29, _0x1a9f9f, _0x3a9e5f, _0x3f6f5b, _0x5a2d55);
            var _0xb6608e = _0x147355['length'] + _0x3ea604['length'] + _0x1a9f9f['length'], _0x22b9c3 = _0xb6608e + 0x1, _0x432546 = 0x1 / _0x22b9c3;
            if (_0x54dc3e['_onProcess' + 'Change'](_0x571ce0, 0x0, _0x432546, 0x1), _0x1a9f9f['length'] > 0x0) {
                var _0x46e4fb = _0xb6608e / _0x22b9c3, _0x499ea5 = _0x2247ad['Handler']['create'](null, _0x54dc3e['_onProcess' + 'Change'], [
                        _0x571ce0,
                        _0x432546,
                        _0x46e4fb
                    ], !0x1);
                _0x54dc3e['_innerFour' + 'thLevelLoa' + 'derManager']['_create'](_0x1a9f9f, !0x1, _0x2247ad['Handler']['create'](null, _0x54dc3e['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'], [
                    _0x571ce0,
                    _0x499ea5,
                    _0x158dfd,
                    _0x3a9e5f,
                    _0x147355,
                    _0x3ea604,
                    _0x109f29,
                    _0x432546 + _0x46e4fb * _0x1a9f9f['length'],
                    _0x46e4fb
                ]), _0x499ea5, null, null, null, 0x1, !0x0);
            } else
                _0x54dc3e['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'](_0x571ce0, null, _0x158dfd, _0x3a9e5f, _0x147355, _0x3ea604, _0x109f29, _0x432546, _0x46e4fb);
        }
        static ['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'](_0x451397, _0x4bb1c7, _0x56501e, _0x3bfced, _0x385434, _0x5491fa, _0x76447e, _0x5442e9, _0x3020f4) {
            if (_0x4bb1c7 && _0x4bb1c7['recover'](), _0x76447e['length'] > 0x0) {
                var _0x381e5f = _0x2247ad['Handler']['create'](null, _0x54dc3e['_onProcess' + 'Change'], [
                    _0x451397,
                    _0x5442e9,
                    _0x3020f4
                ], !0x1);
                _0x54dc3e['_innerThir' + 'dLevelLoad' + 'erManager']['_create'](_0x76447e, !0x1, _0x2247ad['Handler']['create'](null, _0x54dc3e['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'], [
                    _0x451397,
                    _0x381e5f,
                    _0x56501e,
                    _0x3bfced,
                    _0x385434,
                    _0x5491fa,
                    _0x5442e9 + _0x3020f4 * _0x5491fa['length'],
                    _0x3020f4
                ]), _0x4bb1c7, null, null, null, 0x1, !0x0);
            } else
                _0x54dc3e['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'](_0x451397, null, _0x56501e, _0x3bfced, _0x385434, _0x5491fa, _0x5442e9, _0x3020f4);
        }
        static ['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'](_0xa36241, _0x11f712, _0x21e5c9, _0x24e959, _0x34c5d7, _0x553118, _0x3eca8d, _0x2358a8) {
            if (_0x11f712 && _0x11f712['recover'](), _0x553118['length'] > 0x0) {
                var _0x4405c0 = _0x2247ad['Handler']['create'](null, _0x54dc3e['_onProcess' + 'Change'], [
                    _0xa36241,
                    _0x3eca8d,
                    _0x2358a8
                ], !0x1);
                _0x54dc3e['_innerSeco' + 'ndLevelLoa' + 'derManager']['_create'](_0x553118, !0x1, _0x2247ad['Handler']['create'](null, _0x54dc3e['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'], [
                    _0xa36241,
                    _0x4405c0,
                    _0x21e5c9,
                    _0x24e959,
                    _0x34c5d7,
                    _0x3eca8d + _0x2358a8 * _0x553118['length'],
                    _0x2358a8
                ]), _0x11f712, null, null, null, 0x1, !0x0);
            } else
                _0x54dc3e['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'](_0xa36241, null, _0x21e5c9, _0x24e959, _0x34c5d7, _0x3eca8d, _0x2358a8);
        }
        static ['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'](_0x1f1f77, _0x29c92c, _0x37790e, _0x103cfe, _0x31c269, _0x4a7494, _0x50c5b5) {
            if (_0x29c92c && _0x29c92c['recover'](), _0x31c269['length'] > 0x0) {
                var _0x1db043 = _0x2247ad['Handler']['create'](null, _0x54dc3e['_onProcess' + 'Change'], [
                    _0x1f1f77,
                    _0x4a7494,
                    _0x50c5b5
                ], !0x1);
                _0x54dc3e['_innerFirs' + 'tLevelLoad' + 'erManager']['_create'](_0x31c269, !0x1, _0x2247ad['Handler']['create'](null, _0x54dc3e['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'], [
                    _0x1f1f77,
                    _0x1db043,
                    _0x37790e,
                    _0x103cfe
                ]), _0x29c92c, null, null, null, 0x1, !0x0);
            } else
                _0x54dc3e['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'](_0x1f1f77, null, _0x37790e, _0x103cfe);
        }
        static ['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'](_0x2ec235, _0x38c035, _0xc26c80, _0x3b141b) {
            _0x38c035 && _0x38c035['recover'](), _0x2ec235['_cache'] = _0x2ec235['_createCac' + 'he'];
            var _0x2d375a = 'Scene3D' === _0xc26c80['data']['type'] ? _0x30b055['_parseScen' + 'e'](_0xc26c80, _0x2ec235['_propertyP' + 'arams'], _0x2ec235['_construct' + 'Params']) : _0x30b055['_parse'](_0xc26c80, _0x2ec235['_propertyP' + 'arams'], _0x2ec235['_construct' + 'Params']);
            _0x54dc3e['_endLoad'](_0x2ec235, _0x2d375a, _0x3b141b);
        }
        static ['_loadMesh'](_0x2df79c) {
            _0x2df79c['on'](_0x2247ad['Event']['LOADED'], null, _0x54dc3e['_onMeshLmL' + 'oaded'], [_0x2df79c]), _0x2df79c['load'](_0x2df79c['url'], _0x2247ad['Loader']['BUFFER'], !0x1, null, !0x0);
        }
        static ['_onMeshLmL' + 'oaded'](_0x34b5d6, _0x16bc70) {
            _0x34b5d6['_cache'] = _0x34b5d6['_createCac' + 'he'];
            var _0x2659e4 = _0x3cfa55['_parse'](_0x16bc70, _0x34b5d6['_propertyP' + 'arams'], _0x34b5d6['_construct' + 'Params']);
            _0x54dc3e['_endLoad'](_0x34b5d6, _0x2659e4);
        }
        static ['_loadMater' + 'ial'](_0x8da59f) {
            _0x8da59f['on'](_0x2247ad['Event']['LOADED'], null, _0x54dc3e['_onMateril' + 'LmatLoaded'], [_0x8da59f]), _0x8da59f['load'](_0x8da59f['url'], _0x2247ad['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_onMateril' + 'LmatLoaded'](_0x5e265c, _0x58190d) {
            var _0x39ef84, _0x230554 = _0x5e265c['url'], _0x308300 = _0x101904['getURLVeri' + 'on'](_0x230554), _0x321187 = _0x2247ad['URL']['getPath'](_0x230554), _0x35d41f = [], _0x266825 = [];
            _0x58190d['customProp' + 's'];
            switch (_0x58190d['version']) {
            case 'LAYAMATERI' + 'AL:01':
            case 'LAYAMATERI' + 'AL:02':
                var _0xbe8b72, _0x12ac81, _0x2e474b = _0x58190d['props']['textures'];
                if (_0x2e474b)
                    for (_0xbe8b72 = 0x0, _0x12ac81 = _0x2e474b['length']; _0xbe8b72 < _0x12ac81; _0xbe8b72++) {
                        var _0x13e83f = _0x2e474b[_0xbe8b72], _0x3dbe71 = _0x13e83f['path'];
                        _0x3dbe71 && (_0x39ef84 = _0x54dc3e['formatRela' + 'tivePath'](_0x321187, _0x3dbe71), _0x308300 && (_0x39ef84 += _0x308300), _0x35d41f['push']({
                            'url': _0x39ef84,
                            'constructParams': _0x13e83f['constructP' + 'arams'],
                            'propertyParams': _0x13e83f['propertyPa' + 'rams']
                        }), _0x266825['push'](_0x39ef84), _0x13e83f['path'] = _0x39ef84);
                    }
                break;
            default:
                throw new Error('Laya3D:unk' + 'onwn\x20versi' + 'on.');
            }
            var _0x59b254 = _0x35d41f['length'], _0x27b7d6 = _0x59b254 + 0x1, _0x5936d5 = 0x1 / _0x27b7d6;
            if (_0x54dc3e['_onProcess' + 'Change'](_0x5e265c, 0x0, _0x5936d5, 0x1), _0x59b254 > 0x0) {
                var _0x502331 = _0x2247ad['Handler']['create'](null, _0x54dc3e['_onProcess' + 'Change'], [
                    _0x5e265c,
                    _0x5936d5,
                    _0x59b254 / _0x27b7d6
                ], !0x1);
                _0x54dc3e['_innerFour' + 'thLevelLoa' + 'derManager']['_create'](_0x35d41f, !0x1, _0x2247ad['Handler']['create'](null, _0x54dc3e['_onMateial' + 'TexturesLo' + 'aded'], [
                    _0x5e265c,
                    _0x502331,
                    _0x58190d,
                    _0x266825
                ]), _0x502331, null, null, null, 0x1, !0x0);
            } else
                _0x54dc3e['_onMateial' + 'TexturesLo' + 'aded'](_0x5e265c, null, _0x58190d, null);
        }
        static ['_onMateial' + 'TexturesLo' + 'aded'](_0x558245, _0x294888, _0x309fad, _0x1d391a) {
            _0x558245['_cache'] = _0x558245['_createCac' + 'he'];
            var _0x581afb = _0x57c0e0['_parse'](_0x309fad, _0x558245['_propertyP' + 'arams'], _0x558245['_construct' + 'Params']);
            _0x54dc3e['_endLoad'](_0x558245, _0x581afb, _0x1d391a), _0x294888 && _0x294888['recover']();
        }
        static ['_loadAvata' + 'r'](_0x5ac4fb) {
            _0x5ac4fb['on'](_0x2247ad['Event']['LOADED'], null, function (_0x3623bc) {
                _0x5ac4fb['_cache'] = _0x5ac4fb['_createCac' + 'he'];
                var _0x1b896c = _0xea2818['_parse'](_0x3623bc, _0x5ac4fb['_propertyP' + 'arams'], _0x5ac4fb['_construct' + 'Params']);
                _0x54dc3e['_endLoad'](_0x5ac4fb, _0x1b896c);
            }), _0x5ac4fb['load'](_0x5ac4fb['url'], _0x2247ad['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_loadAnima' + 'tionClip'](_0x2ccc94) {
            _0x2ccc94['on'](_0x2247ad['Event']['LOADED'], null, function (_0x45be1b) {
                _0x2ccc94['_cache'] = _0x2ccc94['_createCac' + 'he'];
                var _0x49e50f = _0x584142['_parse'](_0x45be1b, _0x2ccc94['_propertyP' + 'arams'], _0x2ccc94['_construct' + 'Params']);
                _0x54dc3e['_endLoad'](_0x2ccc94, _0x49e50f);
            }), _0x2ccc94['load'](_0x2ccc94['url'], _0x2247ad['Loader']['BUFFER'], !0x1, null, !0x0);
        }
        static ['_loadTextu' + 're2D'](_0x247123) {
            var _0x26d481, _0x30df3d = _0x247123['url'], _0x59181d = _0x30df3d['lastIndexO' + 'f']('.') + 0x1, _0x209d22 = _0x30df3d['indexOf']('?'), _0x4e7b3c = -0x1 == _0x209d22 ? _0x30df3d['length'] : _0x209d22;
            switch (_0x30df3d['substr'](_0x59181d, _0x4e7b3c - _0x59181d)) {
            case 'jpg':
            case 'jpeg':
            case 'bmp':
            case 'gif':
            case 'png':
                _0x26d481 = 'nativeimag' + 'e';
                break;
            case 'dds':
            case 'ktx':
            case 'pvr':
                _0x26d481 = _0x2247ad['Loader']['BUFFER'];
            }
            _0x247123['on'](_0x2247ad['Event']['LOADED'], null, function (_0x33392c) {
                _0x247123['_cache'] = _0x247123['_createCac' + 'he'];
                var _0x2640c4 = _0x2247ad['Texture2D']['_parse'](_0x33392c, _0x247123['_propertyP' + 'arams'], _0x247123['_construct' + 'Params']);
                _0x54dc3e['_endLoad'](_0x247123, _0x2640c4);
            }), _0x247123['load'](_0x247123['url'], _0x26d481, !0x1, null, !0x0);
        }
        static ['_loadTextu' + 'reCube'](_0x2deda0) {
            _0x2deda0['on'](_0x2247ad['Event']['LOADED'], null, _0x54dc3e['_onTexture' + 'CubeLtcLoa' + 'ded'], [_0x2deda0]), _0x2deda0['load'](_0x2deda0['url'], _0x2247ad['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_loadTextu' + 'reCubeBin'](_0x17bb9f) {
            _0x17bb9f['on'](_0x2247ad['Event']['LOADED'], null, _0x402953 => {
                _0x17bb9f['_cache'] = _0x17bb9f['_createCac' + 'he'];
                var _0x434c4e = new _0x2247ad['Byte'](_0x402953);
                if ('LAYATEXTUR' + 'ECUBE:0000' !== _0x434c4e['readUTFStr' + 'ing']())
                    throw 'Laya3D:unk' + 'now\x20versio' + 'n.';
                var _0x45d828 = _0x434c4e['readUint8'](), _0x1e09f2 = _0x434c4e['getUint8'](), _0x3888b0 = _0x434c4e['readUint16'](), _0x371a1a = _0x434c4e['getUint8'](), _0x389da2 = _0x434c4e['getUint8'](), _0x1716b7 = _0x434c4e['getUint8'](), _0x3c4122 = _0x434c4e['getUint8'](), _0x50b9e7 = new _0x307e95(_0x3888b0, _0x45d828, _0x1e09f2 > 0x1);
                _0x50b9e7['filterMode'] = _0x371a1a, _0x50b9e7['wrapModeU'] = _0x389da2, _0x50b9e7['wrapModeV'] = _0x1716b7, _0x50b9e7['anisoLevel'] = _0x3c4122;
                for (var _0x5828ee = _0x434c4e['pos'], _0x5726c8 = _0x3888b0, _0x4c343a = 0x0; _0x4c343a < _0x1e09f2; _0x4c343a++) {
                    for (var _0x5ccc01 = new Array(0x6), _0x5ea9f0 = _0x5726c8 * _0x5726c8 * _0x50b9e7['_getFormat' + 'ByteCount'](), _0x128ed1 = 0x0; _0x128ed1 < 0x6; _0x128ed1++)
                        _0x5ccc01[_0x128ed1] = new Uint8Array(_0x402953, _0x5828ee, _0x5ea9f0), _0x5828ee += _0x5ea9f0;
                    _0x50b9e7['setSixSide' + 'Pixels'](_0x5ccc01, _0x4c343a), _0x5726c8 /= 0x2;
                }
                _0x54dc3e['_endLoad'](_0x17bb9f, _0x50b9e7);
            }), _0x17bb9f['load'](_0x17bb9f['url'], _0x2247ad['Loader']['BUFFER'], !0x1, null, !0x0);
        }
        static ['_onTexture' + 'CubeLtcLoa' + 'ded'](_0x123a7d, _0x1bc8db) {
            var _0xf5dac8 = _0x2247ad['URL']['getPath'](_0x123a7d['url']), _0x187ecd = [
                    _0x54dc3e['formatRela' + 'tivePath'](_0xf5dac8, _0x1bc8db['front']),
                    _0x54dc3e['formatRela' + 'tivePath'](_0xf5dac8, _0x1bc8db['back']),
                    _0x54dc3e['formatRela' + 'tivePath'](_0xf5dac8, _0x1bc8db['left']),
                    _0x54dc3e['formatRela' + 'tivePath'](_0xf5dac8, _0x1bc8db['right']),
                    _0x54dc3e['formatRela' + 'tivePath'](_0xf5dac8, _0x1bc8db['up']),
                    _0x54dc3e['formatRela' + 'tivePath'](_0xf5dac8, _0x1bc8db['down'])
                ];
            _0x54dc3e['_onProcess' + 'Change'](_0x123a7d, 0x0, 0x1 / 0x7, 0x1);
            var _0x591024 = _0x2247ad['Handler']['create'](null, _0x54dc3e['_onProcess' + 'Change'], [
                _0x123a7d,
                0x1 / 0x7,
                0x6 / 0x7
            ], !0x1);
            _0x54dc3e['_innerFour' + 'thLevelLoa' + 'derManager']['load'](_0x187ecd, _0x2247ad['Handler']['create'](null, _0x54dc3e['_onTexture' + 'CubeImages' + 'Loaded'], [
                _0x123a7d,
                _0x187ecd,
                _0x591024
            ]), _0x591024, 'nativeimag' + 'e');
        }
        static ['_onTexture' + 'CubeImages' + 'Loaded'](_0xcec0b9, _0x5d07d4, _0x3cecef) {
            for (var _0xc54b8 = new Array(0x6), _0x266dd0 = 0x0; _0x266dd0 < 0x6; _0x266dd0++)
                _0xc54b8[_0x266dd0] = _0x2247ad['Loader']['getRes'](_0x5d07d4[_0x266dd0]);
            _0xcec0b9['_cache'] = _0xcec0b9['_createCac' + 'he'];
            var _0x29989c = _0x307e95['_parse'](_0xc54b8, _0xcec0b9['_propertyP' + 'arams'], _0xcec0b9['_construct' + 'Params']);
            for (_0x3cecef['recover'](), _0x266dd0 = 0x0; _0x266dd0 < 0x6; _0x266dd0++)
                _0x2247ad['Loader']['clearRes'](_0x5d07d4[_0x266dd0]);
            _0x54dc3e['_endLoad'](_0xcec0b9, _0x29989c);
        }
        static ['_onProcess' + 'Change'](_0x328e0d, _0x3eba76, _0x86f407, _0x47dba6) {
            (_0x47dba6 = _0x3eba76 + _0x47dba6 * _0x86f407) < 0x1 && _0x328e0d['event'](_0x2247ad['Event']['PROGRESS'], _0x47dba6);
        }
        static ['init'](_0x4b5d8f, _0x35d93e, _0x2d9d6a = null, _0x4afa97 = null) {
            if (_0x54dc3e['_isInit'])
                _0x4afa97 && _0x4afa97['run']();
            else {
                _0x54dc3e['_isInit'] = !0x0, _0x2d9d6a && _0x2d9d6a['cloneTo'](_0xb0652e['_config']), _0x2d9d6a = _0xb0652e['_config'], _0x5da8ae['debugFrust' + 'umCulling'] = _0x2d9d6a['debugFrust' + 'umCulling'], _0x54dc3e['_editerEnv' + 'ironment'] = _0x2d9d6a['_editerEnv' + 'ironment'], _0x441dfb['octreeCull' + 'ing'] = _0x2d9d6a['octreeCull' + 'ing'], _0x441dfb['octreeInit' + 'ialSize'] = _0x2d9d6a['octreeInit' + 'ialSize'], _0x441dfb['octreeInit' + 'ialCenter'] = _0x2d9d6a['octreeInit' + 'ialCenter'], _0x441dfb['octreeMinN' + 'odeSize'] = _0x2d9d6a['octreeMinN' + 'odeSize'], _0x441dfb['octreeLoos' + 'eness'] = _0x2d9d6a['octreeLoos' + 'eness'];
                var _0x5c3b65 = window['Physics3D'];
                null == _0x5c3b65 ? (_0x57b18d['_enablePhy' + 'sics'] = !0x1, _0x54dc3e['__init__'](_0x4b5d8f, _0x35d93e, _0x2d9d6a), _0x4afa97 && _0x4afa97['run']()) : (_0x57b18d['_enablePhy' + 'sics'] = !0x0, _0x5c3b65(0x10 * _0x2d9d6a['defaultPhy' + 'sicsMemory'], _0x43f811['_interacti' + 've'])['then'](function () {
                    _0x54dc3e['__init__'](_0x4b5d8f, _0x35d93e, _0x2d9d6a), _0x4afa97 && _0x4afa97['run']();
                }));
            }
        }
    }
    _0x54dc3e['HIERARCHY'] = 'HIERARCHY', _0x54dc3e['MESH'] = 'MESH', _0x54dc3e['MATERIAL'] = 'MATERIAL', _0x54dc3e['TEXTURE2D'] = 'TEXTURE2D', _0x54dc3e['TEXTURECUB' + 'E'] = 'TEXTURECUB' + 'E', _0x54dc3e['TEXTURECUB' + 'EBIN'] = 'TEXTURECUB' + 'EBIN', _0x54dc3e['ANIMATIONC' + 'LIP'] = 'ANIMATIONC' + 'LIP', _0x54dc3e['AVATAR'] = 'AVATAR', _0x54dc3e['TERRAINHEI' + 'GHTDATA'] = 'TERRAINHEI' + 'GHTDATA', _0x54dc3e['TERRAINRES'] = 'TERRAIN', _0x54dc3e['_innerFirs' + 'tLevelLoad' + 'erManager'] = new _0x2247ad['LoaderMana' + 'ger'](), _0x54dc3e['_innerSeco' + 'ndLevelLoa' + 'derManager'] = new _0x2247ad['LoaderMana' + 'ger'](), _0x54dc3e['_innerThir' + 'dLevelLoad' + 'erManager'] = new _0x2247ad['LoaderMana' + 'ger'](), _0x54dc3e['_innerFour' + 'thLevelLoa' + 'derManager'] = new _0x2247ad['LoaderMana' + 'ger'](), _0x54dc3e['_isInit'] = !0x1, _0x54dc3e['_editerEnv' + 'ironment'] = !0x1, _0x54dc3e['physicsSet' + 'tings'] = new _0x47df6f(), window['Laya3D'] = _0x54dc3e;
    class _0x447163 extends _0x2247ad['Component'] {
        constructor() {
            super(...arguments), this['_indexInPo' + 'ol'] = -0x1;
        }
        get ['isSingleto' + 'n']() {
            return !0x1;
        }
        ['_checkProc' + 'essTrigger' + 's']() {
            var _0x520e0c = _0x447163['prototype'];
            return this['onTriggerE' + 'nter'] !== _0x520e0c['onTriggerE' + 'nter'] || (this['onTriggerS' + 'tay'] !== _0x520e0c['onTriggerS' + 'tay'] || this['onTriggerE' + 'xit'] !== _0x520e0c['onTriggerE' + 'xit']);
        }
        ['_checkProc' + 'essCollisi' + 'ons']() {
            var _0x5c5749 = _0x447163['prototype'];
            return this['onCollisio' + 'nEnter'] !== _0x5c5749['onCollisio' + 'nEnter'] || (this['onCollisio' + 'nStay'] !== _0x5c5749['onCollisio' + 'nStay'] || this['onCollisio' + 'nExit'] !== _0x5c5749['onCollisio' + 'nExit']);
        }
        ['_onAwake']() {
            this['onAwake'](), this['onStart'] !== _0x447163['prototype']['onStart'] && _0x2247ad['Laya']['startTimer']['callLater'](this, this['onStart']);
        }
        ['_onEnable']() {
            this['owner']['_scene']['_addScript'](this), this['onEnable']();
        }
        ['_onDisable']() {
            this['owner']['_scene']['_removeScr' + 'ipt'](this), this['owner']['offAllCall' + 'er'](this), this['onDisable']();
        }
        ['_onDestroy']() {
            var _0x5604f8 = this['owner']['_scripts'];
            _0x5604f8['splice'](_0x5604f8['indexOf'](this), 0x1);
            var _0x558017 = this['owner'];
            _0x558017['_needProce' + 'ssTriggers'] = !0x1;
            for (var _0x4b1981 = 0x0, _0x281bd9 = _0x5604f8['length']; _0x4b1981 < _0x281bd9; _0x4b1981++)
                if (_0x5604f8[_0x4b1981]['_checkProc' + 'essTrigger' + 's']()) {
                    _0x558017['_needProce' + 'ssTriggers'] = !0x0;
                    break;
                }
            for (_0x558017['_needProce' + 'ssCollisio' + 'ns'] = !0x1, _0x4b1981 = 0x0, _0x281bd9 = _0x5604f8['length']; _0x4b1981 < _0x281bd9; _0x4b1981++)
                if (_0x5604f8[_0x4b1981]['_checkProc' + 'essCollisi' + 'ons']()) {
                    _0x558017['_needProce' + 'ssCollisio' + 'ns'] = !0x0;
                    break;
                }
            this['onDestroy']();
        }
        ['_isScript']() {
            return !0x0;
        }
        ['_onAdded']() {
            var _0x4e0bce = this['owner'], _0x4bc0e1 = _0x4e0bce['_scripts'];
            _0x4bc0e1 || (_0x4e0bce['_scripts'] = _0x4bc0e1 = []), _0x4bc0e1['push'](this), _0x4e0bce['_needProce' + 'ssCollisio' + 'ns'] || (_0x4e0bce['_needProce' + 'ssCollisio' + 'ns'] = this['_checkProc' + 'essCollisi' + 'ons']()), _0x4e0bce['_needProce' + 'ssTriggers'] || (_0x4e0bce['_needProce' + 'ssTriggers'] = this['_checkProc' + 'essTrigger' + 's']());
        }
        ['onAwake']() {
        }
        ['onEnable']() {
        }
        ['onStart']() {
        }
        ['onTriggerE' + 'nter'](_0x11a9b4) {
        }
        ['onTriggerS' + 'tay'](_0x3d860f) {
        }
        ['onTriggerE' + 'xit'](_0x3ad284) {
        }
        ['onCollisio' + 'nEnter'](_0x5a13a3) {
        }
        ['onCollisio' + 'nStay'](_0x3a4a80) {
        }
        ['onCollisio' + 'nExit'](_0x396c36) {
        }
        ['onMouseDow' + 'n']() {
        }
        ['onMouseDra' + 'g']() {
        }
        ['onMouseCli' + 'ck']() {
        }
        ['onMouseUp']() {
        }
        ['onMouseEnt' + 'er']() {
        }
        ['onMouseOve' + 'r']() {
        }
        ['onMouseOut']() {
        }
        ['onUpdate']() {
        }
        ['onLateUpda' + 'te']() {
        }
        ['onPreRende' + 'r']() {
        }
        ['onPostRend' + 'er']() {
        }
        ['onDisable']() {
        }
        ['onDestroy']() {
        }
    }
    class _0x4bbb4c {
        constructor(_0x7d0334, _0x41e76c, _0x44f945, _0x1d359f) {
            this['_datas'] = [], this['_w'] = _0x7d0334, this['_h'] = _0x41e76c, this['_minHeight'] = _0x44f945, this['_maxHeight'] = _0x1d359f;
        }
        static ['creatFromM' + 'esh'](_0x3ed228, _0x25a317, _0x528399, _0x3c9f51) {
            for (var _0x113a29 = [], _0x330b55 = [], _0x22b6da = _0x3ed228['subMeshCou' + 'nt'], _0x43268c = 0x0; _0x43268c < _0x22b6da; _0x43268c++) {
                for (var _0x41873c = _0x3ed228['getSubMesh'](_0x43268c), _0x1b9fe5 = _0x41873c['_vertexBuf' + 'fer'], _0x2846c5 = _0x1b9fe5['getFloat32' + 'Data'](), _0x1aece7 = [], _0xe6c229 = 0x0; _0xe6c229 < _0x2846c5['length']; _0xe6c229 += _0x1b9fe5['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4) {
                    var _0x137f60 = new _0x43b358(_0x2846c5[_0xe6c229 + 0x0], _0x2846c5[_0xe6c229 + 0x1], _0x2846c5[_0xe6c229 + 0x2]);
                    _0x1aece7['push'](_0x137f60);
                }
                _0x113a29['push'](_0x1aece7);
                var _0x10f1b6 = _0x41873c['_indexBuff' + 'er'];
                _0x330b55['push'](_0x10f1b6['getData']());
            }
            var _0x1e8c14 = _0x3ed228['bounds'], _0x5253c8 = _0x1e8c14['getMin']()['x'], _0x5d04e9 = _0x1e8c14['getMin']()['z'], _0x314fb4 = _0x1e8c14['getMax']()['x'], _0x49e4a5 = _0x1e8c14['getMax']()['z'], _0xac591f = _0x1e8c14['getMin']()['y'], _0x12977b = _0x1e8c14['getMax']()['y'], _0x3022ee = _0x314fb4 - _0x5253c8, _0x1a138d = _0x49e4a5 - _0x5d04e9, _0x7e3ec3 = _0x3c9f51['x'] = _0x3022ee / (_0x25a317 - 0x1), _0xd95500 = _0x3c9f51['y'] = _0x1a138d / (_0x528399 - 0x1), _0x4d6274 = new _0x4bbb4c(_0x25a317, _0x528399, _0xac591f, _0x12977b), _0x424e30 = _0x4bbb4c['_tempRay'], _0x3a00d5 = _0x424e30['direction'];
            _0x3a00d5['x'] = 0x0, _0x3a00d5['y'] = -0x1, _0x3a00d5['z'] = 0x0;
            var _0x3dd259 = _0x12977b + 0.1;
            _0x424e30['origin']['y'] = _0x3dd259;
            for (var _0x9736 = 0x0; _0x9736 < _0x528399; _0x9736++) {
                var _0x23c0d8 = _0x5d04e9 + _0x9736 * _0xd95500;
                _0x4d6274['_datas'][_0x9736] = [];
                for (var _0x4569ef = 0x0; _0x4569ef < _0x25a317; _0x4569ef++) {
                    var _0x316a67 = _0x5253c8 + _0x4569ef * _0x7e3ec3, _0x53ef9f = _0x424e30['origin'];
                    _0x53ef9f['x'] = _0x316a67, _0x53ef9f['z'] = _0x23c0d8;
                    var _0x46510f = _0x4bbb4c['_getPositi' + 'on'](_0x424e30, _0x113a29, _0x330b55);
                    _0x4d6274['_datas'][_0x9736][_0x4569ef] = _0x46510f === Number['MAX_VALUE'] ? NaN : _0x3dd259 - _0x46510f;
                }
            }
            return _0x4d6274;
        }
        static ['createFrom' + 'Image'](_0x48b758, _0x59afe6, _0x4a8f70) {
            for (var _0x1b1822 = _0x48b758['width'], _0x1b7942 = _0x48b758['height'], _0xe35e3a = new _0x4bbb4c(_0x1b1822, _0x1b7942, _0x59afe6, _0x4a8f70), _0x43b0df = (_0x4a8f70 - _0x59afe6) / 0xfe, _0x55ac7b = _0x48b758['getPixels'](), _0x5132f4 = 0x0, _0xea1f22 = 0x0; _0xea1f22 < _0x1b7942; _0xea1f22++)
                for (var _0x794a3f = _0xe35e3a['_datas'][_0xea1f22] = [], _0x54ae2c = 0x0; _0x54ae2c < _0x1b1822; _0x54ae2c++) {
                    var _0x47e675 = _0x55ac7b[_0x5132f4++], _0x3e8054 = _0x55ac7b[_0x5132f4++], _0x97999f = _0x55ac7b[_0x5132f4++], _0x22a01e = _0x55ac7b[_0x5132f4++];
                    _0x794a3f[_0x54ae2c] = 0xff == _0x47e675 && 0xff == _0x3e8054 && 0xff == _0x97999f && 0xff == _0x22a01e ? NaN : (_0x47e675 + _0x3e8054 + _0x97999f) / 0x3 * _0x43b0df + _0x59afe6;
                }
            return _0xe35e3a;
        }
        static ['_getPositi' + 'on'](_0x1abcc0, _0x4b2770, _0x2ffc0c) {
            for (var _0x5c16c4 = Number['MAX_VALUE'], _0x5970d2 = 0x0; _0x5970d2 < _0x4b2770['length']; _0x5970d2++)
                for (var _0x1893a0 = _0x4b2770[_0x5970d2], _0x5e58fd = _0x2ffc0c[_0x5970d2], _0x404f7c = 0x0; _0x404f7c < _0x5e58fd['length']; _0x404f7c += 0x3) {
                    var _0x25a5a7 = _0x1893a0[_0x5e58fd[_0x404f7c + 0x0]], _0x5cae6d = _0x1893a0[_0x5e58fd[_0x404f7c + 0x1]], _0x247ada = _0x1893a0[_0x5e58fd[_0x404f7c + 0x2]], _0x1b1ff0 = _0x514950['rayInterse' + 'ctsTriangl' + 'e'](_0x1abcc0, _0x25a5a7, _0x5cae6d, _0x247ada);
                    !isNaN(_0x1b1ff0) && _0x1b1ff0 < _0x5c16c4 && (_0x5c16c4 = _0x1b1ff0);
                }
            return _0x5c16c4;
        }
        get ['width']() {
            return this['_w'];
        }
        get ['height']() {
            return this['_h'];
        }
        get ['maxHeight']() {
            return this['_maxHeight'];
        }
        get ['minHeight']() {
            return this['_minHeight'];
        }
        ['_inBounds'](_0x3a2478, _0x141ce5) {
            return _0x3a2478 >= 0x0 && _0x3a2478 < this['_h'] && _0x141ce5 >= 0x0 && _0x141ce5 < this['_w'];
        }
        ['getHeight'](_0x476220, _0x5dc0c2) {
            return this['_inBounds'](_0x476220, _0x5dc0c2) ? this['_datas'][_0x476220][_0x5dc0c2] : NaN;
        }
    }
    _0x4bbb4c['_tempRay'] = new _0xbd8983(new _0x43b358(), new _0x43b358());
    class _0x4a3dbb extends _0x32da4a {
        constructor(_0x36f9f9, _0x38b1e7, _0x3dd241 = null) {
            super(_0x36f9f9, _0x3dd241), this['_heightMap'] = _0x38b1e7, this['_cellSize'] = new _0x2d45ed();
        }
        static ['createFrom' + 'Mesh'](_0x523163, _0x21ee4b, _0x36ad83, _0x568e52 = null) {
            var _0xdc902d = new _0x4a3dbb(_0x523163, null, _0x568e52);
            return _0xdc902d['_initCreat' + 'eFromMesh'](_0x21ee4b, _0x36ad83), _0xdc902d;
        }
        static ['createFrom' + 'MeshAndHei' + 'ghtMap'](_0x40c3e2, _0x3e31c5, _0x3ce19a, _0x5aee8d, _0x10d0f2 = null) {
            var _0x55b45d = new _0x4a3dbb(_0x40c3e2, null, _0x10d0f2);
            return _0x55b45d['_initCreat' + 'eFromMeshH' + 'eightMap'](_0x3e31c5, _0x3ce19a, _0x5aee8d), _0x55b45d;
        }
        get ['minX']() {
            var _0x568ca4 = this['transform']['worldMatri' + 'x']['elements'];
            return this['_minX'] * this['_getScaleX']() + _0x568ca4[0xc];
        }
        get ['minZ']() {
            var _0x1cc101 = this['transform']['worldMatri' + 'x']['elements'];
            return this['_minZ'] * this['_getScaleZ']() + _0x1cc101[0xe];
        }
        get ['width']() {
            return (this['_heightMap']['width'] - 0x1) * this['_cellSize']['x'] * this['_getScaleX']();
        }
        get ['depth']() {
            return (this['_heightMap']['height'] - 0x1) * this['_cellSize']['y'] * this['_getScaleZ']();
        }
        ['_disableRo' + 'tation']() {
            var _0x25d3c9 = this['transform']['rotation'];
            _0x25d3c9['x'] = 0x0, _0x25d3c9['y'] = 0x0, _0x25d3c9['z'] = 0x0, _0x25d3c9['w'] = 0x1, this['transform']['rotation'] = _0x25d3c9;
        }
        ['_getScaleX']() {
            var _0x5de674 = this['transform']['worldMatri' + 'x']['elements'], _0x524ac5 = _0x5de674[0x0], _0x50512e = _0x5de674[0x1], _0x2b835b = _0x5de674[0x2];
            return Math['sqrt'](_0x524ac5 * _0x524ac5 + _0x50512e * _0x50512e + _0x2b835b * _0x2b835b);
        }
        ['_getScaleZ']() {
            var _0x57ad1b = this['transform']['worldMatri' + 'x']['elements'], _0x983b6c = _0x57ad1b[0x8], _0x43b0ed = _0x57ad1b[0x9], _0x4746ff = _0x57ad1b[0xa];
            return Math['sqrt'](_0x983b6c * _0x983b6c + _0x43b0ed * _0x43b0ed + _0x4746ff * _0x4746ff);
        }
        ['_initCreat' + 'eFromMesh'](_0x2e2e9c, _0x46167e) {
            this['_heightMap'] = _0x4bbb4c['creatFromM' + 'esh'](this['meshFilter']['sharedMesh'], _0x2e2e9c, _0x46167e, this['_cellSize']);
            var _0x31222f = this['meshFilter']['sharedMesh']['bounds'], _0x23a4a2 = _0x31222f['getMin']();
            _0x31222f['getMax'](), (this['_minX'] = _0x23a4a2['x'], this['_minZ'] = _0x23a4a2['z']);
        }
        ['_initCreat' + 'eFromMeshH' + 'eightMap'](_0x590ee2, _0x12ed82, _0x1d2239) {
            var _0x355ada = this['meshFilter']['sharedMesh']['bounds'];
            this['_heightMap'] = _0x4bbb4c['createFrom' + 'Image'](_0x590ee2, _0x12ed82, _0x1d2239), this['_computeCe' + 'llSize'](_0x355ada);
            var _0x2d9701 = _0x355ada['getMin']();
            _0x355ada['getMax'](), (this['_minX'] = _0x2d9701['x'], this['_minZ'] = _0x2d9701['z']);
        }
        ['_computeCe' + 'llSize'](_0x2c59bd) {
            var _0x1fafaf = _0x2c59bd['getMin'](), _0x2f8a76 = _0x2c59bd['getMax'](), _0x424c67 = _0x1fafaf['x'], _0x598247 = _0x1fafaf['z'], _0x55461e = _0x2f8a76['x'] - _0x424c67, _0x380b00 = _0x2f8a76['z'] - _0x598247;
            this['_cellSize']['x'] = _0x55461e / (this['_heightMap']['width'] - 0x1), this['_cellSize']['y'] = _0x380b00 / (this['_heightMap']['height'] - 0x1);
        }
        ['_update'](_0x12723f) {
            this['_disableRo' + 'tation']();
        }
        ['getHeight'](_0x1f74cb, _0x44cd5d) {
            _0x4a3dbb['_tempVecto' + 'r3']['x'] = _0x1f74cb, _0x4a3dbb['_tempVecto' + 'r3']['y'] = 0x0, _0x4a3dbb['_tempVecto' + 'r3']['z'] = _0x44cd5d, this['_disableRo' + 'tation']();
            var _0x157ff1 = this['transform']['worldMatri' + 'x'];
            _0x157ff1['invert'](_0x4a3dbb['_tempMatri' + 'x4x4']), _0x43b358['transformC' + 'oordinate'](_0x4a3dbb['_tempVecto' + 'r3'], _0x4a3dbb['_tempMatri' + 'x4x4'], _0x4a3dbb['_tempVecto' + 'r3']), _0x1f74cb = _0x4a3dbb['_tempVecto' + 'r3']['x'], _0x44cd5d = _0x4a3dbb['_tempVecto' + 'r3']['z'];
            var _0x238370 = (_0x1f74cb - this['_minX']) / this['_cellSize']['x'], _0x58b22f = (_0x44cd5d - this['_minZ']) / this['_cellSize']['y'], _0x1489a7 = Math['floor'](_0x58b22f), _0x26d90a = Math['floor'](_0x238370), _0x317722 = _0x238370 - _0x26d90a, _0x513cdc = _0x58b22f - _0x1489a7, _0x151889 = _0x157ff1['elements'], _0x29bdec = _0x151889[0x4], _0x1ecf05 = _0x151889[0x5], _0x8745f0 = _0x151889[0x6], _0x12b1b7 = Math['sqrt'](_0x29bdec * _0x29bdec + _0x1ecf05 * _0x1ecf05 + _0x8745f0 * _0x8745f0), _0x2845f1 = _0x151889[0xd], _0x15bea1 = this['_heightMap']['getHeight'](_0x1489a7, _0x26d90a + 0x1), _0x1933c3 = this['_heightMap']['getHeight'](_0x1489a7 + 0x1, _0x26d90a);
            if (isNaN(_0x15bea1) || isNaN(_0x1933c3))
                return NaN;
            if (_0x317722 + _0x513cdc <= 0x1) {
                var _0x41c8aa = this['_heightMap']['getHeight'](_0x1489a7, _0x26d90a);
                return isNaN(_0x41c8aa) ? NaN : (_0x41c8aa + _0x317722 * (_0x15bea1 - _0x41c8aa) + _0x513cdc * (_0x1933c3 - _0x41c8aa)) * _0x12b1b7 + _0x2845f1;
            }
            var _0x4283f7 = this['_heightMap']['getHeight'](_0x1489a7 + 0x1, _0x26d90a + 0x1);
            return isNaN(_0x4283f7) ? NaN : (_0x4283f7 + (0x1 - _0x317722) * (_0x1933c3 - _0x4283f7) + (0x1 - _0x513cdc) * (_0x15bea1 - _0x4283f7)) * _0x12b1b7 + _0x2845f1;
        }
    }
    _0x4a3dbb['_tempVecto' + 'r3'] = new _0x43b358(), _0x4a3dbb['_tempMatri' + 'x4x4'] = new _0x334e9d();
    class _0x3461eb {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0xc);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x3;
        }
        ['add'](_0x5269a7, _0x586cf2) {
            this['_currentLe' + 'ngth'] < 0x8 ? (0x6 === this['_currentLe' + 'ngth'] && 0x1 !== _0x5269a7 && (_0x5269a7 = 0x1, console['log']('GradientDa' + 'taVector2\x20' + 'warning:th' + 'e\x20forth\x20ke' + 'y\x20is\x20\x20be\x20f' + 'orce\x20set\x20t' + 'o\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0x5269a7, this['_elements'][this['_currentLe' + 'ngth']++] = _0x586cf2['x'], this['_elements'][this['_currentLe' + 'ngth']++] = _0x586cf2['y']) : console['log']('GradientDa' + 'taVector2\x20' + 'warning:da' + 'ta\x20count\x20m' + 'ust\x20lessEq' + 'ual\x20than\x204');
        }
        ['cloneTo'](_0x1a05a7) {
            var _0x36ed92 = _0x1a05a7;
            _0x36ed92['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            for (var _0xfd779 = _0x36ed92['_elements'], _0xb76bb7 = 0x0, _0x185526 = this['_elements']['length']; _0xb76bb7 < _0x185526; _0xb76bb7++)
                _0xfd779[_0xb76bb7] = this['_elements'][_0xb76bb7];
        }
        ['clone']() {
            var _0x32c59d = new _0x3461eb();
            return this['cloneTo'](_0x32c59d), _0x32c59d;
        }
    }
    class _0x23ab17 {
        constructor() {
        }
        ['render'](_0x42d0d4) {
        }
    }
    class _0x319b46 extends _0x23ab17 {
        constructor() {
            super(), this['_shader'] = null, this['_shaderDat' + 'a'] = new _0x5e515b(), this['_linearCol' + 'or'] = new _0x151df0(), this['_bloomText' + 'ureTexelSi' + 'ze'] = new _0x4cec8f(), this['_shaderThr' + 'eshold'] = new _0x4cec8f(), this['_shaderPar' + 'ams'] = new _0x4cec8f(), this['_pyramid'] = null, this['_intensity'] = 0x0, this['_threshold'] = 0x1, this['_softKnee'] = 0.5, this['_diffusion'] = 0x7, this['_anamorphi' + 'cRatio'] = 0x0, this['_dirtInten' + 'sity'] = 0x0, this['_shaderSet' + 'ting'] = new _0x4cec8f(), this['_dirtTileO' + 'ffset'] = new _0x4cec8f(), this['clamp'] = 0xffc0, this['color'] = new _0x151df0(0x1, 0x1, 0x1, 0x1), this['fastMode'] = !0x1, this['dirtTextur' + 'e'] = null, this['_shader'] = _0x38ffce['find']('PostProces' + 'sBloom'), this['_pyramid'] = new Array(0x2 * _0x319b46['MAXPYRAMID' + 'SIZE']);
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0x1ac1fc) {
            this['_intensity'] = Math['max'](_0x1ac1fc, 0x0);
        }
        get ['threshold']() {
            return this['_threshold'];
        }
        set ['threshold'](_0xc0249) {
            this['_threshold'] = Math['max'](_0xc0249, 0x0);
        }
        get ['softKnee']() {
            return this['_softKnee'];
        }
        set ['softKnee'](_0x161b71) {
            this['_softKnee'] = Math['min'](Math['max'](_0x161b71, 0x0), 0x1);
        }
        get ['diffusion']() {
            return this['_diffusion'];
        }
        set ['diffusion'](_0x2d228e) {
            this['_diffusion'] = Math['min'](Math['max'](_0x2d228e, 0x1), 0xa);
        }
        get ['anamorphic' + 'Ratio']() {
            return this['_anamorphi' + 'cRatio'];
        }
        set ['anamorphic' + 'Ratio'](_0x4557d1) {
            this['_anamorphi' + 'cRatio'] = Math['min'](Math['max'](_0x4557d1, -0x1), 0x1);
        }
        get ['dirtIntens' + 'ity']() {
            return this['_dirtInten' + 'sity'];
        }
        set ['dirtIntens' + 'ity'](_0x574ac6) {
            this['_dirtInten' + 'sity'] = Math['max'](_0x574ac6, 0x0);
        }
        ['render'](_0x2d998a) {
            var _0x3ded45 = _0x2d998a['command'], _0x2be5a5 = _0x2d998a['camera']['viewport'];
            this['_shaderDat' + 'a']['setTexture'](_0x319b46['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'], _0x2247ad['Texture2D']['whiteTextu' + 're']);
            var _0x2e02d7, _0x1d1439 = this['_anamorphi' + 'cRatio'], _0x32ceb2 = _0x1d1439 < 0x0 ? -_0x1d1439 : 0x0, _0x226495 = _0x1d1439 > 0x0 ? _0x1d1439 : 0x0, _0x1534ae = Math['floor'](_0x2be5a5['width'] / (0x2 - _0x32ceb2)), _0x2794ea = Math['floor'](_0x2be5a5['height'] / (0x2 - _0x226495)), _0x38884c = Math['max'](_0x1534ae, _0x2794ea);
            _0x2e02d7 = Math['log2'](_0x38884c) + this['_diffusion'] - 0xa;
            var _0x14c1dc = Math['floor'](_0x2e02d7), _0x25294e = Math['min'](Math['max'](_0x14c1dc, 0x1), _0x319b46['MAXPYRAMID' + 'SIZE']), _0x1cb0c0 = 0.5 + _0x2e02d7 - _0x14c1dc;
            this['_shaderDat' + 'a']['setNumber'](_0x319b46['SHADERVALU' + 'E_SAMPLESC' + 'ALE'], _0x1cb0c0);
            var _0x215034 = _0x151df0['gammaToLin' + 'earSpace'](this['threshold']), _0x5a6bb7 = _0x215034 * this['_softKnee'] + 0.00001;
            this['_shaderThr' + 'eshold']['setValue'](_0x215034, _0x215034 - _0x5a6bb7, 0x2 * _0x5a6bb7, 0.25 / _0x5a6bb7), this['_shaderDat' + 'a']['setVector'](_0x319b46['SHADERVALU' + 'E_THRESHOL' + 'D'], this['_shaderThr' + 'eshold']);
            var _0x4003bd = _0x151df0['gammaToLin' + 'earSpace'](this['clamp']);
            this['_shaderPar' + 'ams']['setValue'](_0x4003bd, 0x0, 0x0, 0x0), this['_shaderDat' + 'a']['setVector'](_0x319b46['SHADERVALU' + 'E_PARAMS'], this['_shaderPar' + 'ams']);
            for (var _0x5d676c = this['fastMode'] ? 0x1 : 0x0, _0x4c8fbd = _0x2d998a['source'], _0x21cd3e = 0x0; _0x21cd3e < _0x25294e; _0x21cd3e++) {
                var _0x5dd874 = 0x2 * _0x21cd3e, _0x4816a3 = _0x5dd874 + 0x1, _0x3b6c50 = 0x0 == _0x21cd3e ? _0x319b46['SUBSHADER_' + 'PREFILTER1' + '3'] + _0x5d676c : _0x319b46['SUBSHADER_' + 'DOWNSAMPLE' + '13'] + _0x5d676c, _0x257502 = _0x13c6e8['createFrom' + 'Pool'](_0x1534ae, _0x2794ea, _0x2247ad['RenderText' + 'ureFormat']['R8G8B8'], _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']);
                if (_0x257502['filterMode'] = _0x2247ad['FilterMode']['Bilinear'], this['_pyramid'][_0x5dd874] = _0x257502, _0x21cd3e !== _0x25294e - 0x1) {
                    var _0x1e10c0 = _0x13c6e8['createFrom' + 'Pool'](_0x1534ae, _0x2794ea, _0x2247ad['RenderText' + 'ureFormat']['R8G8B8'], _0x2247ad['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']);
                    _0x1e10c0['filterMode'] = _0x2247ad['FilterMode']['Bilinear'], this['_pyramid'][_0x4816a3] = _0x1e10c0;
                }
                _0x3ded45['blitScreen' + 'Triangle'](_0x4c8fbd, _0x257502, null, this['_shader'], this['_shaderDat' + 'a'], _0x3b6c50), _0x4c8fbd = _0x257502, _0x1534ae = Math['max'](Math['floor'](_0x1534ae / 0x2), 0x1), _0x2794ea = Math['max'](Math['floor'](_0x2794ea / 0x2), 0x1);
            }
            var _0x4ecdfb = this['_pyramid'][0x2 * (_0x25294e - 0x1)];
            for (_0x21cd3e = _0x25294e - 0x2; _0x21cd3e >= 0x0; _0x21cd3e--)
                _0x4816a3 = (_0x5dd874 = 0x2 * _0x21cd3e) + 0x1, _0x257502 = this['_pyramid'][_0x5dd874], _0x1e10c0 = this['_pyramid'][_0x4816a3], _0x3ded45['setShaderD' + 'ataTexture'](this['_shaderDat' + 'a'], _0x319b46['SHADERVALU' + 'E_BLOOMTEX'], _0x257502), _0x3ded45['blitScreen' + 'Triangle'](_0x4ecdfb, _0x1e10c0, null, this['_shader'], this['_shaderDat' + 'a'], _0x319b46['SUBSHADER_' + 'UPSAMPLETE' + 'NT'] + _0x5d676c), _0x4ecdfb = _0x1e10c0;
            var _0x395f95 = this['_linearCol' + 'or'];
            this['color']['toLinear'](_0x395f95);
            var _0x31c2bf = Math['pow'](0x2, this['_intensity'] / 0xa) - 0x1, _0x640b81 = this['_shaderSet' + 'ting'];
            this['_shaderSet' + 'ting']['setValue'](_0x1cb0c0, _0x31c2bf, this['_dirtInten' + 'sity'], _0x25294e);
            var _0x19075f = this['dirtTextur' + 'e'] ? this['dirtTextur' + 'e'] : _0x2247ad['Texture2D']['blackTextu' + 're'], _0x1c2f42 = _0x19075f['width'] / _0x19075f['height'], _0x4143c2 = _0x2be5a5['width'] / _0x2be5a5['height'], _0x9a6928 = this['_dirtTileO' + 'ffset'];
            _0x1c2f42 > _0x4143c2 ? _0x9a6928['setValue'](_0x4143c2 / _0x1c2f42, 0x1, 0.5 * (0x1 - _0x9a6928['x']), 0x0) : _0x1c2f42 < _0x4143c2 && _0x9a6928['setValue'](0x1, _0x1c2f42 / _0x4143c2, 0x0, 0.5 * (0x1 - _0x9a6928['y']));
            var _0x49d70f = _0x2d998a['compositeS' + 'haderData'];
            for (this['fastMode'] ? _0x49d70f['addDefine'](_0x1206fe['SHADERDEFI' + 'NE_BLOOM_L' + 'OW']) : _0x49d70f['addDefine'](_0x1206fe['SHADERDEFI' + 'NE_BLOOM']), this['_bloomText' + 'ureTexelSi' + 'ze']['setValue'](0x1 / _0x4ecdfb['width'], 0x1 / _0x4ecdfb['height'], _0x4ecdfb['width'], _0x4ecdfb['height']), _0x49d70f['setVector'](_0x1206fe['SHADERVALU' + 'E_BLOOM_DI' + 'RTTILEOFFS' + 'ET'], _0x9a6928), _0x49d70f['setVector'](_0x1206fe['SHADERVALU' + 'E_BLOOM_SE' + 'TTINGS'], _0x640b81), _0x49d70f['setVector'](_0x1206fe['SHADERVALU' + 'E_BLOOM_CO' + 'LOR'], new _0x4cec8f(_0x395f95['r'], _0x395f95['g'], _0x395f95['b'], _0x395f95['a'])), _0x49d70f['setTexture'](_0x1206fe['SHADERVALU' + 'E_BLOOM_DI' + 'RTTEX'], _0x19075f), _0x49d70f['setTexture'](_0x1206fe['SHADERVALU' + 'E_BLOOMTEX'], _0x4ecdfb), _0x49d70f['setVector'](_0x1206fe['SHADERVALU' + 'E_BLOOMTEX' + '_TEXELSIZE'], this['_bloomText' + 'ureTexelSi' + 'ze']), _0x21cd3e = 0x0; _0x21cd3e < _0x25294e; _0x21cd3e++)
                _0x4816a3 = (_0x5dd874 = 0x2 * _0x21cd3e) + 0x1, _0x13c6e8['recoverToP' + 'ool'](this['_pyramid'][_0x5dd874]), 0x0 !== _0x21cd3e && _0x21cd3e !== _0x25294e - 0x1 && _0x13c6e8['recoverToP' + 'ool'](this['_pyramid'][_0x4816a3]);
            _0x2d998a['deferredRe' + 'leaseTextu' + 'res']['push'](_0x4ecdfb);
        }
    }
    _0x319b46['SHADERVALU' + 'E_MAINTEX'] = _0x38ffce['propertyNa' + 'meToID']('u_MainTex'), _0x319b46['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'] = _0x38ffce['propertyNa' + 'meToID']('u_AutoExpo' + 'sureTex'), _0x319b46['SHADERVALU' + 'E_SAMPLESC' + 'ALE'] = _0x38ffce['propertyNa' + 'meToID']('u_SampleSc' + 'ale'), _0x319b46['SHADERVALU' + 'E_THRESHOL' + 'D'] = _0x38ffce['propertyNa' + 'meToID']('u_Threshol' + 'd'), _0x319b46['SHADERVALU' + 'E_PARAMS'] = _0x38ffce['propertyNa' + 'meToID']('u_Params'), _0x319b46['SHADERVALU' + 'E_BLOOMTEX'] = _0x38ffce['propertyNa' + 'meToID']('u_BloomTex'), _0x319b46['SUBSHADER_' + 'PREFILTER1' + '3'] = 0x0, _0x319b46['SUBSHADER_' + 'PREFILTER4'] = 0x1, _0x319b46['SUBSHADER_' + 'DOWNSAMPLE' + '13'] = 0x2, _0x319b46['SUBSHADER_' + 'DOWNSAMPLE' + '4'] = 0x3, _0x319b46['SUBSHADER_' + 'UPSAMPLETE' + 'NT'] = 0x4, _0x319b46['SUBSHADER_' + 'UPSAMPLEBO' + 'X'] = 0x5, _0x319b46['MAXPYRAMID' + 'SIZE'] = 0x10;
    class _0x5ee55b {
        constructor(_0x5aab0e) {
            if (!(_0x5aab0e instanceof Array) || 0x4 !== _0x5aab0e['length'])
                throw new Error('Rand:Seed\x20' + 'must\x20be\x20an' + '\x20array\x20wit' + 'h\x204\x20number' + 's');
            this['_state0U'] = 0x0 | _0x5aab0e[0x0], this['_state0L'] = 0x0 | _0x5aab0e[0x1], this['_state1U'] = 0x0 | _0x5aab0e[0x2], this['_state1L'] = 0x0 | _0x5aab0e[0x3];
        }
        ['randomint']() {
            var _0xdd50b9 = this['_state0U'], _0x72f0d4 = this['_state0L'], _0xe7e853 = this['_state1U'], _0x4fadb9 = this['_state1L'], _0x556f19 = (_0x4fadb9 >>> 0x0) + (_0x72f0d4 >>> 0x0), _0x230e24 = _0xe7e853 + _0xdd50b9 + (_0x556f19 / 0x2 >>> 0x1f) >>> 0x0, _0x1838b6 = _0x556f19 >>> 0x0;
            this['_state0U'] = _0xe7e853, this['_state0L'] = _0x4fadb9;
            var _0x345890 = 0x0, _0x54bd36 = 0x0;
            return _0x345890 = (_0xdd50b9 ^= _0x345890 = _0xdd50b9 << 0x17 | (-0x200 & _0x72f0d4) >>> 0x9) ^ _0xe7e853, _0x54bd36 = (_0x72f0d4 ^= _0x54bd36 = _0x72f0d4 << 0x17) ^ _0x4fadb9, (_0x345890 ^= _0xdd50b9 >>> 0x12, _0x54bd36 ^= _0x72f0d4 >>> 0x12 | (0x3ffff & _0xdd50b9) << 0xe), (_0x345890 ^= _0xe7e853 >>> 0x5, _0x54bd36 ^= _0x4fadb9 >>> 0x5 | (0x1f & _0xe7e853) << 0x1b, this['_state1U'] = _0x345890, this['_state1L'] = _0x54bd36, [
                _0x230e24,
                _0x1838b6
            ]);
        }
        ['random']() {
            var _0x10ec33 = this['randomint'](), _0x283078 = _0x10ec33[0x0], _0x4a7178 = 0x3ff << 0x14 | _0x283078 >>> 0xc, _0x5b3896 = 0x0 | (_0x10ec33[0x1] >>> 0xc | (0xfff & _0x283078) << 0x14);
            return _0x5ee55b['_CONVERTIO' + 'N_BUFFER']['setUint32'](0x0, _0x4a7178, !0x1), _0x5ee55b['_CONVERTIO' + 'N_BUFFER']['setUint32'](0x4, _0x5b3896, !0x1), _0x5ee55b['_CONVERTIO' + 'N_BUFFER']['getFloat64'](0x0, !0x1) - 0x1;
        }
    }
    _0x5ee55b['_CONVERTIO' + 'N_BUFFER'] = new DataView(new ArrayBuffer(0x8)), _0x5ee55b['defaultRan' + 'd'] = new _0x5ee55b([
        0x0,
        Date['now']() / 0x10000,
        0x0,
        Date['now']() % 0x10000
    ]);
    class _0xa54848 {
        constructor(_0x4f3a54, _0x3565a1) {
            this['_width'] = 0x0, this['_height'] = 0x0, this['_width'] = _0x4f3a54, this['_height'] = _0x3565a1;
        }
        static get ['fullScreen']() {
            return new _0xa54848(-0x1, -0x1);
        }
        get ['width']() {
            return -0x1 === this['_width'] ? _0x5ac2c4['clientWidt' + 'h'] : this['_width'];
        }
        get ['height']() {
            return -0x1 === this['_height'] ? _0x5ac2c4['clientHeig' + 'ht'] : this['_height'];
        }
    }
    _0xc55b22['AlternateL' + 'ightQueue'] = _0x457bd2, _0xc55b22['AnimationC' + 'lip'] = _0x584142, _0xc55b22['AnimationC' + 'lipParser0' + '3'] = _0x5075af, _0xc55b22['AnimationC' + 'lipParser0' + '4'] = _0x3ccdbb, _0xc55b22['AnimationE' + 'vent'] = _0x18867d, _0xc55b22['AnimationN' + 'ode'] = _0x7e09df, _0xc55b22['AnimationT' + 'ransform3D'] = _0x4db44f, _0xc55b22['Animator'] = _0x4532ef, _0xc55b22['AnimatorCo' + 'ntrollerLa' + 'yer'] = _0x4331ba, _0xc55b22['AnimatorPl' + 'ayState'] = _0x1ab5ea, _0xc55b22['AnimatorSt' + 'ate'] = _0x18fb75, _0xc55b22['AnimatorSt' + 'ateScript'] = class {
        constructor() {
        }
        ['onStateEnt' + 'er']() {
        }
        ['onStateUpd' + 'ate']() {
        }
        ['onStateExi' + 't']() {
        }
    }, _0xc55b22['Avatar'] = _0xea2818, _0xc55b22['BaseCamera'] = _0x36f166, _0xc55b22['BaseMateri' + 'al'] = _0x297e96, _0xc55b22['BaseRender'] = _0xc4e4b9, _0xc55b22['BaseShape'] = _0x3a52f1, _0xc55b22['BatchMark'] = _0x5e821c, _0xc55b22['BlinnPhong' + 'Material'] = _0x26565b, _0xc55b22['BlitScreen' + 'QuadCMD'] = _0x1b9aa8, _0xc55b22['BloomEffec' + 't'] = _0x319b46, _0xc55b22['BoundBox'] = _0x11e6d9, _0xc55b22['BoundFrust' + 'um'] = _0x183104, _0xc55b22['BoundSpher' + 'e'] = _0x260d96, _0xc55b22['Bounds'] = _0x252754, _0xc55b22['BoundsOctr' + 'ee'] = _0x15314d, _0xc55b22['BoundsOctr' + 'eeNode'] = _0x4ce0bb, _0xc55b22['BoxCollide' + 'rShape'] = _0x1eeb8b, _0xc55b22['BoxShape'] = _0x1daa58, _0xc55b22['BufferStat' + 'e'] = _0x145b1e, _0xc55b22['BulletInte' + 'ractive'] = _0x43f811, _0xc55b22['Burst'] = _0xe7056e, _0xc55b22['Camera'] = _0x14e627, _0xc55b22['CameraCull' + 'Info'] = _0x945f4a, _0xc55b22['CapsuleCol' + 'liderShape'] = _0x5f1b57, _0xc55b22['CastShadow' + 'List'] = class extends _0x24ac1f {
        constructor() {
            super();
        }
        ['add'](_0x129b05) {
            if (-0x1 !== _0x129b05['_indexInCa' + 'stShadowLi' + 'st'])
                throw 'CastShadow' + 'List:eleme' + 'nt\x20has\x20\x20in' + '\x20\x20CastShad' + 'owList.';
            this['_add'](_0x129b05), _0x129b05['_indexInCa' + 'stShadowLi' + 'st'] = this['length']++;
        }
        ['remove'](_0x4fadef) {
            var _0x32713c = _0x4fadef['_indexInCa' + 'stShadowLi' + 'st'];
            if (this['length']--, _0x32713c !== this['length']) {
                var _0x2db883 = this['elements'][this['length']];
                this['elements'][_0x32713c] = _0x2db883, _0x2db883['_indexInCa' + 'stShadowLi' + 'st'] = _0x32713c;
            }
            _0x4fadef['_indexInCa' + 'stShadowLi' + 'st'] = -0x1;
        }
    }, _0xc55b22['CharacterC' + 'ontroller'] = _0x2bab33, _0xc55b22['CircleShap' + 'e'] = _0x5266b9, _0xc55b22['Cluster'] = _0x3df7f3, _0xc55b22['ColliderSh' + 'ape'] = _0x579b03, _0xc55b22['Collision'] = _0x1b9374, _0xc55b22['CollisionT' + 'ool'] = _0x53e32e, _0xc55b22['CollisionU' + 'tils'] = _0x3b260a, _0xc55b22['Color'] = _0x151df0, _0xc55b22['ColorOverL' + 'ifetime'] = _0xd8e040, _0xc55b22['Command'] = _0x4bf6e1, _0xc55b22['CommandBuf' + 'fer'] = _0x3cf175, _0xc55b22['CompoundCo' + 'lliderShap' + 'e'] = _0x2e190c, _0xc55b22['ConchQuate' + 'rnion'] = _0x4ba8a2, _0xc55b22['ConchVecto' + 'r3'] = _0x37e840, _0xc55b22['ConchVecto' + 'r4'] = _0x2db304, _0xc55b22['ConeCollid' + 'erShape'] = _0x14ad8c, _0xc55b22['ConeShape'] = _0x3a6c30, _0xc55b22['Config3D'] = _0xb0652e, _0xc55b22['Constraint' + '3D'] = class {
        constructor() {
        }
    }, _0xc55b22['Constraint' + 'Component'] = class extends _0x2247ad['Component'] {
        constructor() {
            super(), this['_feedbackE' + 'nabled'] = !0x1;
        }
        get ['enabled']() {
            return super['enabled'];
        }
        set ['enabled'](_0x4ea01f) {
            this['_btConstra' + 'int']['IsEnabled'] = _0x4ea01f, super['enabled'] = _0x4ea01f;
        }
        get ['breakingIm' + 'pulseThres' + 'hold']() {
            return this['_breakingI' + 'mpulseThre' + 'shold'];
        }
        set ['breakingIm' + 'pulseThres' + 'hold'](_0x3f8670) {
            this['_btConstra' + 'int']['BreakingIm' + 'pulseThres' + 'hold'] = _0x3f8670, this['_breakingI' + 'mpulseThre' + 'shold'] = _0x3f8670;
        }
        get ['appliedImp' + 'ulse']() {
            return this['_feedbackE' + 'nabled'] || (this['_btConstra' + 'int']['EnableFeed' + 'back'](!0x0), this['_feedbackE' + 'nabled'] = !0x0), this['_btConstra' + 'int']['AppliedImp' + 'ulse'];
        }
        get ['connectedB' + 'ody']() {
            return this['_connected' + 'Body'];
        }
        set ['connectedB' + 'ody'](_0x56c264) {
            this['_connected' + 'Body'] = _0x56c264;
        }
        ['_onDestroy']() {
            _0x57b18d['_bullet']['destroy'](this['_btConstra' + 'int']), this['_btConstra' + 'int'] = null;
        }
    }, _0xc55b22['ContactPoi' + 'nt'] = _0x354ba1, _0xc55b22['Containmen' + 'tType'] = _0x1d746f, _0xc55b22['CylinderCo' + 'lliderShap' + 'e'] = _0x5adbea, _0xc55b22['DefineData' + 's'] = _0x590056, _0xc55b22['DirectionL' + 'ight'] = _0x3b6a7e, _0xc55b22['DirectionL' + 'ightQueue'] = _0x361eb7, _0xc55b22['DynamicBat' + 'chManager'] = _0xfb8b43, _0xc55b22['EffectMate' + 'rial'] = _0xa43ab6, _0xc55b22['Emission'] = _0x553257, _0xc55b22['ExtendTerr' + 'ainMateria' + 'l'] = _0x1d84f9, _0xc55b22['FloatKeyfr' + 'ame'] = _0x6059d7, _0xc55b22['FrameOverT' + 'ime'] = _0x197328, _0xc55b22['FrustumCul' + 'ling'] = _0x5da8ae, _0xc55b22['GeometryEl' + 'ement'] = _0x25a854, _0xc55b22['Gradient'] = _0x17aae7, _0xc55b22['GradientAn' + 'gularVeloc' + 'ity'] = _0x232103, _0xc55b22['GradientCo' + 'lor'] = _0x1d4320, _0xc55b22['GradientDa' + 'taInt'] = _0x4cee63, _0xc55b22['GradientDa' + 'taNumber'] = _0x16ac95, _0xc55b22['GradientDa' + 'taVector2'] = _0x3461eb, _0xc55b22['GradientMo' + 'de'] = _0x1998c6, _0xc55b22['GradientSi' + 'ze'] = _0x42e41d, _0xc55b22['GradientVe' + 'locity'] = _0x1c4583, _0xc55b22['HalfFloatU' + 'tils'] = _0x43f331, _0xc55b22['HeightMap'] = _0x4bbb4c, _0xc55b22['Heightfiel' + 'dColliderS' + 'hape'] = class {
        constructor() {
        }
    }, _0xc55b22['Hemisphere' + 'Shape'] = _0x4d8541, _0xc55b22['HitResult'] = _0x1958d6, _0xc55b22['ILaya3D'] = _0x1fc38b, _0xc55b22['IndexBuffe' + 'r3D'] = _0x2a6e6b, _0xc55b22['Input3D'] = _0x51dbb0, _0xc55b22['Keyframe'] = _0x498910, _0xc55b22['KeyframeNo' + 'de'] = _0x3f2025, _0xc55b22['KeyframeNo' + 'deList'] = _0x19cd05, _0xc55b22['KeyframeNo' + 'deOwner'] = _0x508071, _0xc55b22['Laya3D'] = _0x54dc3e, _0xc55b22['LightQueue'] = _0x5f15d6, _0xc55b22['LightSprit' + 'e'] = _0x121492, _0xc55b22['Lightmap'] = _0x5822c7, _0xc55b22['LoadModelV' + '04'] = _0x3facdf, _0xc55b22['LoadModelV' + '05'] = _0x544892, _0xc55b22['Material'] = _0x57c0e0, _0xc55b22['MathUtils3' + 'D'] = _0x40af95, _0xc55b22['Matrix3x3'] = _0x348b09, _0xc55b22['Matrix4x4'] = _0x334e9d, _0xc55b22['Mesh'] = _0x2ace32, _0xc55b22['MeshCollid' + 'erShape'] = _0x1cdff8, _0xc55b22['MeshFilter'] = _0x1a6b8b, _0xc55b22['MeshReader'] = _0x3cfa55, _0xc55b22['MeshRender' + 'DynamicBat' + 'chManager'] = _0x24a344, _0xc55b22['MeshRender' + 'StaticBatc' + 'hManager'] = _0x55bbc5, _0xc55b22['MeshRender' + 'er'] = _0x428a80, _0xc55b22['MeshSprite' + '3D'] = _0x32da4a, _0xc55b22['MeshSprite' + '3DShaderDe' + 'claration'] = _0x3303a1, _0xc55b22['MeshTerrai' + 'nSprite3D'] = _0x4a3dbb, _0xc55b22['MouseTouch'] = _0x2d292, _0xc55b22['OctreeMoti' + 'onList'] = _0x108199, _0xc55b22['PBRMateria' + 'l'] = _0x3028f9, _0xc55b22['PBRSpecula' + 'rMaterial'] = _0x4f1c9a, _0xc55b22['PBRStandar' + 'dMaterial'] = _0x2062f1, _0xc55b22['Physics3D'] = _0x57b18d, _0xc55b22['Physics3DU' + 'tils'] = _0x114bf2, _0xc55b22['PhysicsCol' + 'lider'] = _0x29a886, _0xc55b22['PhysicsCom' + 'ponent'] = _0x4da2bb, _0xc55b22['PhysicsSet' + 'tings'] = _0x47df6f, _0xc55b22['PhysicsSim' + 'ulation'] = _0x25e128, _0xc55b22['PhysicsTri' + 'ggerCompon' + 'ent'] = _0x5c3098, _0xc55b22['PhysicsUpd' + 'ateList'] = _0x5ec1a8, _0xc55b22['Picker'] = _0x514950, _0xc55b22['PixelLineD' + 'ata'] = class {
        constructor() {
            this['startPosit' + 'ion'] = new _0x43b358(), this['endPositio' + 'n'] = new _0x43b358(), this['startColor'] = new _0x151df0(), this['endColor'] = new _0x151df0();
        }
        ['cloneTo'](_0x40eddd) {
            this['startPosit' + 'ion']['cloneTo'](_0x40eddd['startPosit' + 'ion']), this['endPositio' + 'n']['cloneTo'](_0x40eddd['endPositio' + 'n']), this['startColor']['cloneTo'](_0x40eddd['startColor']), this['endColor']['cloneTo'](_0x40eddd['endColor']);
        }
    }, _0xc55b22['PixelLineF' + 'ilter'] = _0x215610, _0xc55b22['PixelLineM' + 'aterial'] = _0x5f3bb6, _0xc55b22['PixelLineR' + 'enderer'] = _0x5a528a, _0xc55b22['PixelLineS' + 'prite3D'] = _0x1c8292, _0xc55b22['PixelLineV' + 'ertex'] = _0x4b6660, _0xc55b22['Plane'] = _0x458084, _0xc55b22['Point2Poin' + 'tConstrain' + 't'] = class {
        constructor() {
            this['_pivotInA'] = new _0x43b358(), this['_pivotInB'] = new _0x43b358();
        }
        get ['pivotInA']() {
            return this['_pivotInA'];
        }
        set ['pivotInA'](_0x2aaf37) {
            this['_pivotInA'] = _0x2aaf37;
        }
        get ['pivotInB']() {
            return this['_pivotInB'];
        }
        set ['pivotInB'](_0x227118) {
            this['_pivotInB'] = _0x227118;
        }
        get ['damping']() {
            return this['_damping'];
        }
        set ['damping'](_0x1d0c2c) {
            this['_damping'] = _0x1d0c2c;
        }
        get ['impulseCla' + 'mp']() {
            return this['_impulseCl' + 'amp'];
        }
        set ['impulseCla' + 'mp'](_0x4380e2) {
            this['_impulseCl' + 'amp'] = _0x4380e2;
        }
        get ['tau']() {
            return this['_tau'];
        }
        set ['tau'](_0x169858) {
            this['_tau'] = _0x169858;
        }
    }, _0xc55b22['PointLight'] = _0x180a39, _0xc55b22['PostProces' + 's'] = _0x1206fe, _0xc55b22['PostProces' + 'sEffect'] = _0x23ab17, _0xc55b22['PostProces' + 'sRenderCon' + 'text'] = _0x3f7e39, _0xc55b22['PrimitiveM' + 'esh'] = _0x39a97b, _0xc55b22['Quaternion'] = _0x7cf2d3, _0xc55b22['Quaternion' + 'Keyframe'] = _0x24fa29, _0xc55b22['Rand'] = _0x5614ba, _0xc55b22['RandX'] = _0x5ee55b, _0xc55b22['Ray'] = _0xbd8983, _0xc55b22['RenderCont' + 'ext3D'] = _0x5ac2c4, _0xc55b22['RenderElem' + 'ent'] = _0x978ca7, _0xc55b22['RenderQueu' + 'e'] = _0x5268b8, _0xc55b22['RenderStat' + 'e'] = _0x4ba527, _0xc55b22['RenderText' + 'ure'] = _0x13c6e8, _0xc55b22['Renderable' + 'Sprite3D'] = _0x333e4a, _0xc55b22['Rigidbody3' + 'D'] = _0x37d35e, _0xc55b22['RotationOv' + 'erLifetime'] = _0x5c5745, _0xc55b22['Scene3D'] = _0x441dfb, _0xc55b22['Scene3DSha' + 'derDeclara' + 'tion'] = _0xeb2444, _0xc55b22['Scene3DUti' + 'ls'] = _0x30b055, _0xc55b22['SceneManag' + 'er'] = class {
        constructor() {
        }
    }, _0xc55b22['ScreenQuad'] = _0x2118d3, _0xc55b22['ScreenTria' + 'ngle'] = _0x10d4f1, _0xc55b22['Script3D'] = _0x447163, _0xc55b22['SetRenderT' + 'argetCMD'] = _0x17b1eb, _0xc55b22['SetShaderD' + 'ataTexture' + 'CMD'] = _0x7ea44c, _0xc55b22['Shader3D'] = _0x38ffce, _0xc55b22['ShaderData'] = _0x5e515b, _0xc55b22['ShaderDefi' + 'ne'] = _0x162ed5, _0xc55b22['ShaderInit' + '3D'] = _0x378eeb, _0xc55b22['ShaderInst' + 'ance'] = _0x1c10b8, _0xc55b22['ShaderPass'] = _0x27cd39, _0xc55b22['ShaderVari' + 'able'] = _0x241d18, _0xc55b22['ShaderVari' + 'ant'] = _0x4becb4, _0xc55b22['ShaderVari' + 'antCollect' + 'ion'] = _0x2eb04d, _0xc55b22['ShadowCast' + 'erPass'] = _0x5244b9, _0xc55b22['ShadowCull' + 'Info'] = _0x2a7c4c, _0xc55b22['ShadowSlic' + 'eData'] = _0x3a2f09, _0xc55b22['ShadowUtil' + 's'] = _0x365e32, _0xc55b22['ShapeUtils'] = _0x912501, _0xc55b22['ShuriKenPa' + 'rticle3D'] = _0x568b78, _0xc55b22['ShuriKenPa' + 'rticle3DSh' + 'aderDeclar' + 'ation'] = _0xa664f1, _0xc55b22['ShurikenPa' + 'rticleData'] = _0x54991b, _0xc55b22['ShurikenPa' + 'rticleMate' + 'rial'] = _0x2651fd, _0xc55b22['ShurikenPa' + 'rticleRend' + 'erer'] = _0x3b6f66, _0xc55b22['ShurikenPa' + 'rticleSyst' + 'em'] = _0x1d12c0, _0xc55b22['SimpleSing' + 'letonList'] = _0x5b31a2, _0xc55b22['SingletonL' + 'ist'] = _0x24ac1f, _0xc55b22['Size'] = _0xa54848, _0xc55b22['SizeOverLi' + 'fetime'] = _0x23977d, _0xc55b22['SkinnedMes' + 'hRenderer'] = _0x29cfd6, _0xc55b22['SkinnedMes' + 'hSprite3D'] = _0x279241, _0xc55b22['SkinnedMes' + 'hSprite3DS' + 'haderDecla' + 'ration'] = _0x101967, _0xc55b22['SkyBox'] = _0x47c080, _0xc55b22['SkyBoxMate' + 'rial'] = _0x40b2a5, _0xc55b22['SkyDome'] = _0x1252a2, _0xc55b22['SkyMesh'] = _0x3498e9, _0xc55b22['SkyPanoram' + 'icMaterial'] = _0x347c77, _0xc55b22['SkyProcedu' + 'ralMateria' + 'l'] = _0x3a7709, _0xc55b22['SkyRendere' + 'r'] = _0x2fc668, _0xc55b22['SphereColl' + 'iderShape'] = _0x29616d, _0xc55b22['SphereShap' + 'e'] = _0x3c1b08, _0xc55b22['SphericalH' + 'armonicsL2'] = _0x2bea9c, _0xc55b22['SpotLight'] = _0x26e494, _0xc55b22['Sprite3D'] = _0x39cab4, _0xc55b22['StartFrame'] = _0x300d3f, _0xc55b22['StaticBatc' + 'hManager'] = _0x5bc8f8, _0xc55b22['StaticPlan' + 'eColliderS' + 'hape'] = _0x200f6f, _0xc55b22['SubMesh'] = _0x5d3cd0, _0xc55b22['SubMeshDyn' + 'amicBatch'] = _0x57c611, _0xc55b22['SubMeshIns' + 'tanceBatch'] = _0x5e7887, _0xc55b22['SubMeshRen' + 'derElement'] = _0x19ed1f, _0xc55b22['SubMeshSta' + 'ticBatch'] = _0x2805c6, _0xc55b22['SubShader'] = _0x21aa4f, _0xc55b22['TextMesh'] = class {
        get ['text']() {
            return this['_text'];
        }
        set ['text'](_0x1dfbc7) {
            this['_text'] = _0x1dfbc7;
        }
        get ['fontSize']() {
            return this['_fontSize'];
        }
        set ['fontSize'](_0x9047a2) {
            this['_fontSize'] = _0x9047a2;
        }
        get ['color']() {
            return this['_color'];
        }
        set ['color'](_0x5b04d6) {
            this['_color'] = _0x5b04d6;
        }
        constructor() {
        }
        ['_createVer' + 'texBuffer'](_0x4d0a78) {
        }
        ['_resizeVer' + 'texBuffer'](_0x8e8b31) {
        }
        ['_addChar']() {
        }
    }, _0xc55b22['TextureCub' + 'e'] = _0x307e95, _0xc55b22['TextureGen' + 'erator'] = _0x16f62a, _0xc55b22['TextureMod' + 'e'] = _0x465467, _0xc55b22['TextureShe' + 'etAnimatio' + 'n'] = _0x4fc898, _0xc55b22['Touch'] = _0xe03a3a, _0xc55b22['TrailFilte' + 'r'] = _0x24d7d2, _0xc55b22['TrailGeome' + 'try'] = _0x2f03cd, _0xc55b22['TrailMater' + 'ial'] = _0x3769bc, _0xc55b22['TrailRende' + 'rer'] = _0x1175ec, _0xc55b22['TrailSprit' + 'e3D'] = _0x5f4d1d, _0xc55b22['Transform3' + 'D'] = _0x17c9f4, _0xc55b22['UnlitMater' + 'ial'] = _0x112bdf, _0xc55b22['Utils3D'] = _0x101904, _0xc55b22['Vector2'] = _0x2d45ed, _0xc55b22['Vector3'] = _0x43b358, _0xc55b22['Vector3Key' + 'frame'] = _0x4b790b, _0xc55b22['Vector4'] = _0x4cec8f, _0xc55b22['VelocityOv' + 'erLifetime'] = _0x40a7f3, _0xc55b22['VertexBuff' + 'er3D'] = _0x26d078, _0xc55b22['VertexDecl' + 'aration'] = _0x2ca0b5, _0xc55b22['VertexElem' + 'ent'] = _0x50e0bd, _0xc55b22['VertexElem' + 'entFormat'] = _0x163e87, _0xc55b22['VertexMesh'] = _0x3fbee7, _0xc55b22['VertexPosi' + 'tionTerrai' + 'n'] = _0x56ddbb, _0xc55b22['VertexPosi' + 'tionTextur' + 'e0'] = _0x43dacf, _0xc55b22['VertexShur' + 'iKenPartic' + 'le'] = _0x2894be, _0xc55b22['VertexShur' + 'ikenPartic' + 'leBillboar' + 'd'] = _0x4fa401, _0xc55b22['VertexShur' + 'ikenPartic' + 'leMesh'] = _0x26aea6, _0xc55b22['VertexTrai' + 'l'] = _0x1f1c8d, _0xc55b22['Viewport'] = _0x4c9d87, _0xc55b22['WaterPrima' + 'ryMaterial'] = _0x19a695, _0xc55b22['skinnedMat' + 'rixCache'] = _0xb709c4;
}(window['Laya'] = window['Laya'] || {}, Laya);