function _0x20c1() {
    var _0x3d08c4 = [
        'PostProcessBloom',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_AutoExposureTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20vec4\x20u_Threshold;\x20//\x20x:\x20threshold\x20value\x20(linear),\x20y:\x20threshold\x20-\x20knee,\x20z:\x20knee\x20*\x202,\x20w:\x200.25\x20/\x20knee\x0d\x0auniform\x20vec4\x20u_Params;\x20//\x20x:\x20clamp,\x20yzw:\x20unused\x0d\x0a\x0d\x0amediump\x20vec4\x20prefilter(mediump\x20vec4\x20color,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20float\x20autoExposure\x20=\x20texture2D(u_AutoExposureTex,\x20uv).r;\x0d\x0a\x09color\x20*=\x20autoExposure;\x0d\x0a\x09color\x20=\x20min(vec4(u_Params.x),\x20color);\x20//\x20clamp\x20to\x20max\x0d\x0a\x09color\x20=\x20quadraticThreshold(color,\x20u_Threshold.x,\x20u_Threshold.yzw);\x0d\x0a\x09return\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragPrefilter13()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox13Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20prefilter(safeHDR(color),\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragPrefilter13();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_AutoExposureTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20vec4\x20u_Threshold;\x20//\x20x:\x20threshold\x20value\x20(linear),\x20y:\x20threshold\x20-\x20knee,\x20z:\x20knee\x20*\x202,\x20w:\x200.25\x20/\x20knee\x0d\x0auniform\x20vec4\x20u_Params;\x20//\x20x:\x20clamp,\x20yzw:\x20unused\x0d\x0a\x0d\x0amediump\x20vec4\x20prefilter(mediump\x20vec4\x20color,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20float\x20autoExposure\x20=\x20texture2D(u_AutoExposureTex,\x20uv).r;\x0d\x0a\x09color\x20*=\x20autoExposure;\x0d\x0a\x09color\x20=\x20min(vec4(u_Params.x),\x20color);\x20//\x20clamp\x20to\x20max\x0d\x0a\x09color\x20=\x20quadraticThreshold(color,\x20u_Threshold.x,\x20u_Threshold.yzw);\x0d\x0a\x09return\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragPrefilter4()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox4Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20prefilter(safeHDR(color),\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragPrefilter4();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0a\x0d\x0avoid\x20fragDownsample13()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox13Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragDownsample13();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0a\x0d\x0avoid\x20fragDownsample4()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox4Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragDownsample4();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_BloomTex;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20float\x20u_SampleScale;\x0d\x0a\x0d\x0amediump\x20vec4\x20combine(mediump\x20vec4\x20bloom,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20texture2D(u_BloomTex,\x20uv);\x0d\x0a\x09return\x20bloom\x20+\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragUpsampleTent()\x20{\x0d\x0a\x09mediump\x20vec4\x20bloom\x20=\x20upsampleTent(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy,\x20vec4(u_SampleScale));\x0d\x0a\x09gl_FragColor\x20=\x20combine(bloom,\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragUpsampleTent();\x0d\x0a}',
        '#include\x20\x22Lighting.glsl\x22;\x0a\x0aattribute\x20vec4\x20a_PositionTexcoord;\x0avarying\x20vec2\x20v_Texcoord0;\x0a\x0avoid\x20main()\x20{\x0a\x09gl_Position\x20=\x20vec4(a_PositionTexcoord.xy,\x200.0,\x201.0);\x0a\x09v_Texcoord0\x20=\x20a_PositionTexcoord.zw;\x0a\x09gl_Position\x20=\x20remapGLPositionZ(gl_Position);\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_BloomTex;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_AutoExposureTex;\x0d\x0auniform\x20sampler2D\x20u_Bloom_DirtTex;\x0d\x0auniform\x20vec4\x20u_BloomTex_TexelSize;\x0d\x0auniform\x20vec4\x20u_Bloom_DirtTileOffset;\x20//\x20xy:\x20tiling,\x20zw:\x20offset\x0d\x0auniform\x20mediump\x20vec3\x20u_Bloom_Settings;//\x20x:\x20sampleScale,\x20y:\x20intensity,\x20z:\x20dirt\x20intensity\x0d\x0auniform\x20mediump\x20vec3\x20u_Bloom_Color;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09mediump\x20float\x20autoExposure\x20=\x20texture2D(u_AutoExposureTex,\x20v_Texcoord0).r;\x0d\x0a\x09mediump\x20vec4\x20color=vec4(0.0);\x0d\x0a\x09color\x20=\x20texture2D(u_MainTex,\x20v_Texcoord0);\x0d\x0a\x09\x0d\x0a\x09color\x20=\x20sRGBToLinear(color);\x0d\x0a\x09color.rgb\x20*=\x20autoExposure;\x0d\x0a\x09\x0d\x0a\x09#if\x20defined(BLOOM)||defined(BLOOM_LOW)\x0d\x0a\x09\x09#ifdef\x20BLOOM\x0d\x0a\x09\x09\x09mediump\x20vec4\x20bloom\x20=\x20upsampleTent(u_BloomTex,\x20v_Texcoord0,\x20u_BloomTex_TexelSize.xy,\x20vec4(u_Bloom_Settings.x));\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09mediump\x20vec4\x20bloom\x20=\x20upsampleBox(u_BloomTex,\x20v_Texcoord0,\x20u_BloomTex_TexelSize.xy,\x20vec4(u_Bloom_Settings.x));\x0d\x0a\x09\x09#endif\x0d\x0a\x0d\x0a\x09\x09//\x20UVs\x20should\x20be\x20Distort(uv\x20*\x20u_Bloom_DirtTileOffset.xy\x20+\x20u_Bloom_DirtTileOffset.zw)\x0d\x0a\x09\x09//\x20but\x20considering\x20we\x20use\x20a\x20cover-style\x20scale\x20on\x20the\x20dirt\x20texture\x20the\x20difference\x0d\x0a\x09\x09//\x20isn\x27t\x20massive\x20so\x20we\x20chose\x20to\x20save\x20a\x20few\x20ALUs\x20here\x20instead\x20in\x20case\x20lens\x20distortion\x0d\x0a\x09\x09//\x20is\x20active\x0d\x0a\x09\x09mediump\x20vec4\x20dirt\x20=vec4(texture2D(u_Bloom_DirtTex,\x20v_Texcoord0\x20*\x20u_Bloom_DirtTileOffset.xy\x20+\x20u_Bloom_DirtTileOffset.zw).rgb,\x200.0);\x0d\x0a\x0d\x0a\x09\x09//\x20Additive\x20bloom\x20(artist\x20friendly)\x0d\x0a\x09\x09bloom\x20*=\x20u_Bloom_Settings.y;\x0d\x0a\x09\x09dirt\x20*=\x20u_Bloom_Settings.z;\x0d\x0a\x09\x09mediump\x20vec4\x20bloomColor=vec4(u_Bloom_Color,\x201.0);\x0d\x0a\x09\x09color\x20+=\x20bloom\x20*\x20bloomColor;\x0d\x0a\x09\x09color\x20+=\x20dirt\x20*\x20bloom;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09mediump\x20vec4\x20finalColor\x20=\x20color;\x0d\x0a\x09finalColor\x20=\x20linearToSRGB(finalColor);\x0d\x0a\x09//finalColor.rgb\x20=\x20Dither(finalColor.rgb,\x20v_Texcoord0);//TODO:抖动\x0d\x0a\x09gl_FragColor\x20=\x20finalColor;\x0d\x0a}',
        'shadowCascadesMode',
        'shadowTwoCascadeSplits',
        'shadowFourCascadeSplits',
        'DiretionLight:Invalid\x20value.',
        '_range',
        '_spotAngle',
        '_simpleAnimatorParams',
        '_simpleAnimatorOffset',
        'SHADERDEFINE_SIMPLEBONE',
        'simpleAnimatorTexture',
        '_simpleAnimatorTexture',
        '_simpleAnimatorTextureSize',
        'SIMPLE_SIMPLEANIMATORTEXTURE',
        'simpleAnimatorOffset',
        '_computeAnimatorParamsData',
        'round',
        '_bonesNums',
        'simpleSkinnedMeshRenderer',
        'bonesNums',
        '_setRootBone',
        'animatorTexture',
        'u_SimpleAnimatorTexture',
        'u_SimpleAnimatorParams',
        'Sprite3D',
        'MeshSprite3D',
        'SkinnedMeshSprite3D',
        'SimpleSkinnedMeshSprite3D',
        'ShuriKenParticle3D',
        'ReflectionProbe',
        '_createComponentInstance',
        'instanceID',
        'ClassUtils',
        'addComponent',
        'Unkown\x20component\x20type.',
        '_createNodeByJson02',
        '_createInteractInstance',
        'data',
        'version',
        'LAYAHIERARCHY:02',
        '_createNodeByJson',
        '_parseScene',
        'LAYASCENE3D:02',
        'TrailSprite3D',
        'Utils3D:unidentified\x20class\x20type\x20in\x20(.lh)\x20file.',
        'components',
        '_readData',
        '_readString',
        'READ_BLOCK',
        'READ_MESH',
        'LAYAMODEL:0301',
        'LAYAMODEL:0401',
        'LoadModelV03:\x20unknown\x20version.',
        '__getBuffer',
        'LAYAMODEL:05',
        'LAYAMODEL:0501',
        'LAYAMODEL:COMPRESSION_05',
        'LAYAMODEL:COMPRESSION_0501',
        'byteLength',
        '_inverseBindPosesBuffer',
        'READ_SUBMESH',
        'read',
        'MeshReader:\x20unknown\x20mesh\x20version.',
        '_textureDecodeFormat',
        '_textureHDRParams',
        'SkyPanoramic',
        'TEXTURE_HDR_PARAMS',
        '#include\x20\x22Lighting.glsl\x22;\x0a\x0a#define\x20PI\x203.14159265359\x0a\x0aattribute\x20vec4\x20a_Position;\x0a\x0auniform\x20mat4\x20u_ViewProjection;\x0auniform\x20float\x20u_Rotation;\x0a\x0avarying\x20vec3\x20v_Texcoord;\x0avarying\x20vec2\x20v_Image180ScaleAndCutoff;\x0avarying\x20vec4\x20v_Layout3DScaleAndOffset;\x0a\x0avec4\x20rotateAroundYInDegrees\x20(vec4\x20vertex,\x20float\x20degrees)\x0a{\x0a\x09float\x20angle\x20=\x20degrees\x20*\x20PI\x20/\x20180.0;\x0a\x09float\x20sina=sin(angle);\x0a\x09float\x20cosa=cos(angle);\x0a\x09mat2\x20m\x20=\x20mat2(cosa,\x20-sina,\x20sina,\x20cosa);\x0a\x09return\x20vec4(m*vertex.xz,\x20vertex.yw).xzyw;\x0a}\x0a\x0a\x09\x09\x0avoid\x20main()\x0a{\x0a\x09vec4\x20position\x20=\x20rotateAroundYInDegrees(a_Position,\x20u_Rotation);\x0a\x09gl_Position\x20=\x20u_ViewProjection*position;\x0a\x0a\x09v_Texcoord=vec3(-a_Position.x,-a_Position.y,a_Position.z);//\x20NOTE:\x20-a_Position.x\x20convert\x20coords\x20system\x0a\x0a\x09//\x20Calculate\x20constant\x20horizontal\x20scale\x20and\x20cutoff\x20for\x20180\x20(vs\x20360)\x20image\x20type\x0a\x09v_Image180ScaleAndCutoff\x20=\x20vec2(1.0,\x201.0);//\x20360\x20degree\x20mode\x0a\x0a\x09//\x20Calculate\x20constant\x20scale\x20and\x20offset\x20for\x203D\x20layouts\x0a\x09v_Layout3DScaleAndOffset\x20=\x20vec4(0,0,1,1);\x0a}\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#define\x20PI\x203.14159265359\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_Texture;\x0d\x0auniform\x20vec4\x20u_TextureHDRParams;\x0d\x0auniform\x20vec4\x20u_TintColor;\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Texcoord;\x0d\x0avarying\x20vec2\x20v_Image180ScaleAndCutoff;\x0d\x0avarying\x20vec4\x20v_Layout3DScaleAndOffset;\x0d\x0a\x0d\x0avec2\x20ToRadialCoords(vec3\x20coords)\x0d\x0a{\x0d\x0a\x09vec3\x20normalizedCoords\x20=\x20normalize(coords);\x0d\x0a\x09float\x20latitude\x20=\x20acos(normalizedCoords.y);\x0d\x0a\x09float\x20longitude\x20=\x20atan(normalizedCoords.z,normalizedCoords.x);\x0d\x0a\x09vec2\x20sphereCoords\x20=\x20vec2(longitude,\x20latitude)\x20*\x20vec2(0.5/PI,\x201.0/PI);\x0d\x0a\x09return\x20vec2(0.5,1.0)\x20-\x20sphereCoords;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x09\x0d\x0a\x09vec2\x20tc\x20=\x20ToRadialCoords(v_Texcoord);\x0d\x0a\x09if\x20(tc.x\x20>\x20v_Image180ScaleAndCutoff.y)\x0d\x0a\x09\x09gl_FragColor=vec4(0,0,0,1);\x0d\x0a\x09tc.x\x20=\x20mod(tc.x*v_Image180ScaleAndCutoff.x,\x201.0);\x0d\x0a\x09tc\x20=\x20(tc\x20+\x20v_Layout3DScaleAndOffset.xy)\x20*\x20v_Layout3DScaleAndOffset.zw;\x0d\x0a\x0d\x0a\x09mediump\x20vec4\x20tex\x20=\x20texture2D\x20(u_Texture,\x20tc);\x0d\x0a\x09mediump\x20vec3\x20c\x20=\x20decodeHDR\x20(tex,\x20u_TextureHDRParams.x);\x0d\x0a\x09c\x20=\x20c\x20*\x20u_TintColor.rgb\x20*\x202.0;//Gamma\x20Space\x20is\x202.0,linear\x20space\x20is\x204.59479380\x0d\x0a\x09gl_FragColor=vec4(c,\x201.0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '_exposure',
        '_rgbmRange',
        'panoramicTexture',
        'TEXTURE',
        'panoramicTextureDecodeFormat',
        'enablePhysics',
        'cancelLoadByUrl',
        '_innerFirstLevelLoaderManager',
        '_innerSecondLevelLoaderManager',
        '_innerThirdLevelLoaderManager',
        '_innerFourthLevelLoaderManager',
        '_changeWebGLSize',
        'onStageResize',
        'Config',
        'changeWebGLSize',
        'is3DMode',
        'mainContext',
        'enableNative3D',
        'regClass',
        'Laya.SkyPanoramicMaterial',
        'Laya.EffectMaterial',
        'Laya.BlinnPhongMaterial',
        'Laya.SkyProceduralMaterial',
        'Laya.PBRStandardMaterial',
        'Laya.PBRSpecularMaterial',
        'Laya.SkyBoxMaterial',
        'Laya.WaterPrimaryMaterial',
        'Laya.ExtendTerrainMaterial',
        'Laya.TrailMaterial',
        'Rigidbody3D',
        'Laya.CharacterController',
        'Laya.Animator',
        'PhysicsCollider',
        'Animator',
        'FixedConstraint',
        'ConfigurableConstraint',
        'jpg',
        'TEXTURE2D',
        'jpeg',
        'gif',
        'png',
        'dds',
        'pvr',
        'lani',
        'ltc',
        'ltcb',
        '_parseBin',
        'ltcb.ls',
        'lanit.ls',
        '_SimpleAnimatorTextureParse',
        'parserMap',
        '_loadHierarchy',
        '_loadMesh',
        '_loadMaterial',
        '_loadTextureCube',
        '_loadTextureCubeBin',
        '_loadTexture2D',
        '_loadAvatar',
        '_eventLoadManagerError',
        'ERROR',
        'prototype',
        '_initDataForNative',
        'getVector2ForNative',
        'getVector3ForNative',
        'getQuaternion',
        'getQuaternionForNative',
        'getMatrix4x4',
        'setBufferForNative',
        'getBuffer',
        'getTextureForNative',
        'uploadShaderUniformsForNative',
        'formatRelativePath',
        '_endLoad',
        '_addHierarchyInnerUrls',
        '_getSprite3DHierarchyInnerUrls',
        'constructParams',
        'propertyParams',
        'sky',
        'SIMPLEANIMATORBIN',
        'Terrain',
        'dataPath',
        'avatarPath',
        'clipPaths',
        'clipPath',
        'shapes',
        'MeshColliderShape',
        '_originType',
        'LOADED',
        '_onHierarchylhLoaded',
        'getURLVerion',
        'getPath',
        '_onProcessChange',
        'Handler',
        '_onHierarchyInnerForthLevResouLoaded',
        '_onHierarchyInnerThirdLevResouLoaded',
        '_onHierarchyInnerSecondLevResouLoaded',
        '_onHierarchyInnerFirstLevResouLoaded',
        '_cache',
        '_createCache',
        '_propertyParams',
        '_constructParams',
        '_onMeshLmLoaded',
        'BUFFER',
        'JSON',
        '_onMaterilLmatLoaded',
        'customProps',
        'Laya3D:unkonwn\x20version.',
        '_onMateialTexturesLoaded',
        'lastIndexOf',
        'bmp',
        'KTXTEXTURE',
        'LAYATEXTURECUBE:0000',
        'Laya3D:unknow\x20version.',
        'readUint8',
        '_onTextureCubeLtcLoaded',
        'front',
        'back',
        'left',
        'down',
        '_onTextureCubeImagesLoaded',
        'nativeimage',
        '_isInit',
        'BulletInteractive',
        '_interactive',
        'then',
        'TERRAINHEIGHTDATA',
        'TERRAINRES',
        'SIMPLEANIMATOR',
        '_enableState',
        '_checkProcessTriggers',
        'onTriggerStay',
        'onTriggerExit',
        'onCollisionEnter',
        'onCollisionStay',
        '_onAwake',
        'onStart',
        'startTimer',
        'callLater',
        'offAllCaller',
        '_checkProcessCollisions',
        'onDestroy',
        '_isScript',
        '_onAdded',
        'onCollisionExit',
        'onJointBreak',
        'onMouseOver',
        'onMouseOut',
        'onPreRender',
        '_datas',
        'creatFromMesh',
        '_tempRay',
        '_getPosition',
        'getPixels',
        'rayIntersectsTriangle',
        'maxHeight',
        '_maxHeight',
        '_minHeight',
        '_inBounds',
        '_heightMap',
        '_initCreateFromMesh',
        '_minX',
        '_getScaleX',
        'minZ',
        '_minZ',
        '_getScaleZ',
        'depth',
        '_cellSize',
        '_disableRotation',
        'createFromImage',
        '_computeCellSize',
        'getHeight',
        'GradientDataVector2\x20warning:the\x20forth\x20key\x20is\x20\x20be\x20force\x20set\x20to\x201.',
        '_linearColor',
        '_bloomTextureTexelSize',
        '_shaderParams',
        '_pyramid',
        '_threshold',
        '_diffusion',
        '_anamorphicRatio',
        '_dirtIntensity',
        '_shaderSetting',
        '_dirtTileOffset',
        'clamp',
        'fastMode',
        'dirtTexture',
        'threshold',
        'softKnee',
        '_softKnee',
        'diffusion',
        'anamorphicRatio',
        'dirtIntensity',
        'SHADERVALUE_SAMPLESCALE',
        'SHADERVALUE_PARAMS',
        'SUBSHADER_PREFILTER13',
        'DEPTHSTENCIL_NONE',
        'blitScreenTriangle',
        'SUBSHADER_UPSAMPLETENT',
        'SHADERVALUE_BLOOM_DIRTTILEOFFSET',
        'SHADERVALUE_BLOOMTEX_TEXELSIZE',
        'SHADERVALUE_MAINTEX',
        'u_SampleScale',
        'u_Threshold',
        'u_Params',
        'SUBSHADER_PREFILTER4',
        'SUBSHADER_DOWNSAMPLE13',
        'SUBSHADER_DOWNSAMPLE4',
        '_isNeedUpdate',
        'createInstanceVertexBuffer3D',
        '_instanceData',
        'updateVertexBufferData',
        'InstanceLocation',
        'CUSTOME0',
        'CUSTOME1',
        'CUSTOME2',
        'CUSTOME3',
        '_checkPropertyLegal',
        'Data\x20exists\x20and\x20format\x20does\x20not\x20match',
        'You\x20cannot\x20add\x20a\x20new\x20property\x20to\x20an\x20existing\x20attributeLocation,Please\x20use\x20another\x20attributeLocation',
        'setVectorArray',
        '_creatProperty',
        'setVector3Array',
        'setVector2Array',
        'setNumberArray',
        'getPropertyArray',
        'INSTANCETYPE_ATTRIBUTE',
        'INSTANCETYPE_UNIFORMBUFFER',
        'TransformNormal',
        'NegativeUnitX',
        'UnitY',
        'ForwardLH',
        '_dotArray',
        '_normalizeArray',
        '_lerpArray',
        'createFromMatrix3x3',
        'rotateZ',
        '_state0U',
        '_state0L',
        '_state1U',
        'randomint',
        '_state1L',
        '_CONVERTION_BUFFER',
        'setUint32',
        'getFloat64',
        'fullScreen',
        'AlternateLightQueue',
        'AnimationClipParser03',
        'AnimationClipParser04',
        'AnimationNode',
        'AnimationTransform3D',
        'AnimatorControllerLayer',
        'AnimatorState',
        'AnimatorStateScript',
        'onStateUpdate',
        'Avatar',
        'AvatarMask',
        'BaseCamera',
        'BaseMaterial',
        'BaseShape',
        'BlinnPhongMaterial',
        'BlitScreenQuadCMD',
        'BloomEffect',
        'BoundBox',
        'BoundSphere',
        'Bounds',
        'BoundsOctree',
        'BoundsOctreeNode',
        'BoxShape',
        'Burst',
        'CameraCullInfo',
        'CastShadowList',
        'CastShadowList:element\x20has\x20\x20in\x20\x20CastShadowList.',
        'CircleShape',
        'ClearRenderTextureCMD',
        'Cluster',
        'CollisionUtils',
        'ColorOverLifetime',
        'Command',
        'ConchVector3',
        'ConchVector4',
        'ConeShape',
        'Config3D',
        'ContainmentType',
        'DefineDatas',
        'DepthPass',
        'DrawMeshCMD',
        'DrawMeshInstancedCMD',
        'DrawRenderCMD',
        'DynamicBatchManager',
        'EffectMaterial',
        'Emission',
        'ExtendTerrainMaterial',
        'FloatKeyframe',
        'FrameOverTime',
        'FrustumCulling',
        'GeometryElement',
        'Gradient',
        'GradientAngularVelocity',
        'GradientColor',
        'GradientDataInt',
        'GradientDataVector2',
        'GradientMode',
        'GradientSize',
        'GradientVelocity',
        'Input3D',
        'Keyframe',
        'KeyframeNode',
        'KeyframeNodeOwner',
        'LightQueue',
        'LightSprite',
        'Lightmap',
        'LoadModelV04',
        'LoadModelV05',
        'MaterialInstanceProperty',
        'MaterialInstancePropertyBlock',
        'MathUtils3D',
        'Matrix3x3',
        'Mesh',
        'MeshFilter',
        'MeshReader',
        'MeshRenderer',
        'MeshSprite3DShaderDeclaration',
        'MeshTerrainSprite3D',
        'OctreeMotionList',
        'PBRMaterial',
        'PBRSpecularMaterial',
        'PixelLineData',
        'PixelLineFilter',
        'PixelLineMaterial',
        'PixelLineRenderer',
        'PixelLineSprite3D',
        'PixelLineVertex',
        'PostProcess',
        'PostProcessRenderContext',
        'PrimitiveMesh',
        'QuaternionKeyframe',
        'Rand',
        'RandX',
        'Ray',
        'ReflectionProbeList',
        'RenderContext3D',
        'RenderState',
        'RenderableSprite3D',
        'Scene3DShaderDeclaration',
        'Scene3DUtils',
        'ScreenQuad',
        'ScreenTriangle',
        'Script3D',
        'SetGlobalShaderDataCMD',
        'SetRenderTargetCMD',
        'SetShaderDataCMD',
        'ShaderData',
        'ShaderDefine',
        'ShaderInit3D',
        'ShaderVariable',
        'ShaderVariant',
        'ShadowCasterPass',
        'ShadowCullInfo',
        'ShadowSliceData',
        'ShadowSpotData',
        'ShadowUtils',
        'ShapeUtils',
        'ShurikenParticleMaterial',
        'ShurikenParticleRenderer',
        'ShurikenParticleSystem',
        'SimpleSkinnedMeshRenderer',
        'SingletonList',
        'Size',
        'SkinnedMeshSprite3DShaderDeclaration',
        'SkyBoxMaterial',
        'SkyDome',
        'SkyMesh',
        'SkyProceduralMaterial',
        'SkyRenderer',
        'SphericalHarmonicsL2',
        'StartFrame',
        'StaticBatchManager',
        'SubMesh',
        'SubMeshInstanceBatch',
        'SubMeshStaticBatch',
        'SubShader',
        'TextMesh',
        '_text',
        'fontSize',
        '_fontSize',
        'TextureCube',
        'TextureGenerator',
        'TextureSheetAnimation',
        'Touch',
        'TrailFilter',
        'TrailGeometry',
        'TrailMaterial',
        'TrailRenderer',
        'Transform3D',
        'UnlitMaterial',
        'Vector3Keyframe',
        'VelocityOverLifetime',
        'VertexBuffer3D',
        'VertexDeclaration',
        'VertexElement',
        'VertexMesh',
        'VertexPositionTerrain',
        'VertexPositionTexture0',
        'VertexShuriKenParticle',
        'VertexShurikenParticleBillboard',
        'Viewport',
        'WaterPrimaryMaterial',
        'skinnedMatrixCache',
        '184245SOWxoy',
        '4JYwOTS',
        '436257afRMuW',
        '1116240AuvJaZ',
        '175055sHqYBF',
        '16338RrMjom',
        '658KAyyNm',
        '2904160jlPTNv',
        '14636214fmtmnB',
        'abs',
        'isZero',
        'fastInvSqrt',
        'sqrt',
        'zeroTolerance',
        'MaxValue',
        'MinValue',
        'Deg2Rad',
        'setValue',
        'scale',
        'fromArray',
        'toArray',
        'cloneTo',
        'clone',
        'elements',
        'rewriteNumProperty',
        'defineProperty',
        'ONE',
        'lerp',
        'transformByM4x4',
        'nearEqual',
        'length',
        'lengthSquared',
        'add',
        'Clamp',
        'distanceSquared',
        'distance',
        'dot',
        'max',
        'forNativeElement',
        'ZERO',
        'UnitX',
        'UnitZ',
        'UnitW',
        'min',
        'scalarLengthSquared',
        'normalize',
        'transformV3ToV4',
        'transformCoordinate',
        'cross',
        'equals',
        'toDefault',
        '_tempVector4',
        '_ZERO',
        '_ONE',
        '_UnitX',
        '_UnitY',
        '_UnitZ',
        '_ForwardRH',
        'PBRRenderQuality',
        'High',
        'Low',
        'Shader3D',
        'Scene3D',
        'SubMeshDynamicBatch',
        'Laya3D',
        'Matrix4x4',
        'Physics3D',
        'RenderElement',
        'CommandBuffer',
        'Camera',
        'SubMeshRenderElement',
        '_bullet',
        'StaticPlaneColliderShape',
        '__init__',
        'ColliderShape',
        'CompoundColliderShape',
        'PhysicsComponent',
        'PhysicsSimulation',
        'BoxColliderShape',
        'CylinderColliderShape',
        'CharacterController',
        '__cannoninit__',
        '_cannon',
        'CannonColliderShape',
        'CannonPhysicsComponent',
        'CannonPhysicsSimulation',
        'CannonBoxColliderShape',
        'CannonRigidbody3D',
        '_enablePhysics',
        '_defaultPhysicsMemory',
        '_lightClusterCount',
        '_editerEnvironment',
        'premultipliedAlpha',
        'isStencil',
        'enableMultiLight',
        'octreeInitialSize',
        'octreeInitialCenter',
        'octreeMinNodeSize',
        'octreeLooseness',
        'debugFrustumCulling',
        'pbrRenderQuality',
        'isUseCannonPhysicsEngine',
        '_maxAreaLightCountPerClusterAverage',
        'floor',
        '_maxLightCount',
        'useCannonPhysics',
        '_config',
        'cannonPhysicsSettings',
        'enableDynamicManager',
        'enableDynamicBatch',
        'enableStaticBatch',
        'enableStaticManager',
        'defaultPhysicsMemory',
        'defaultPhysicsMemory\x20must\x20large\x20than\x2016M',
        'maxLightCount',
        'warn',
        'Config3D:\x20maxLightCount\x20must\x20less\x20equal\x202048.',
        'lightClusterCount',
        'Config3D:\x20lightClusterCount\x20X\x20and\x20Y、Z\x20must\x20less\x20equal\x20128.',
        'Config3D:\x20if\x20the\x20area\x20light(PointLight、SpotLight)\x20count\x20is\x20large\x20than\x20',
        ',maybe\x20the\x20far\x20away\x20culster\x20will\x20ingonre\x20some\x20light.',
        'isAntialias',
        'isAlpha',
        'octreeCulling',
        '_ownerPath',
        '_propertys',
        '_keyFrames',
        'keyFramesCount',
        '_setOwnerPathCount',
        '_setOwnerPathByIndex',
        '_joinOwnerPath',
        '_setPropertyCount',
        '_setPropertyByIndex',
        '_joinProperty',
        'join',
        '_setKeyframeCount',
        '_setKeyframeByIndex',
        'getOwnerPathByIndex',
        'getPropertyByIndex',
        'getKeyframeByIndex',
        'time',
        'inTangent',
        'createRotationQuaternion',
        'createFromTranslation',
        'createFromRotation',
        'cos',
        'createFromScaling',
        'createFromMatrix4x4',
        'multiply',
        'determinant',
        'translate',
        'rotate',
        'sin',
        'invert',
        'identity',
        'lookAt',
        '_tempV30',
        '_tempV31',
        '_tempV32',
        'DEFAULT',
        'createFromYawPitchRoll',
        'atan',
        'angleTo',
        'subtract',
        'TEMPVector30',
        'asin',
        'arcTanAngle',
        'slerp',
        'acos',
        'scaling',
        'rotateX',
        'rotateY',
        'getYawPitchRoll',
        'transformQuat',
        'TEMPVector31',
        '_Up',
        'TEMPVector32',
        'TEMPVector33',
        'createRotationY',
        'TEMPMatrix0',
        'createRotationX',
        'TEMPMatrix1',
        'rotationLookAt',
        '_tempMatrix3x3',
        'rotationMatrix',
        'NAN',
        'value',
        'outTangent',
        'READ_DATA',
        '_DATA',
        '_reader',
        'getUint32',
        'size',
        '_BLOCK',
        'getUint16',
        'blockStarts',
        'blockLengths',
        'push',
        'READ_STRINGS',
        'pos',
        '_strings',
        'readUTFString',
        'parse',
        '_animationClip',
        'count',
        'READ_',
        'model\x20file\x20err,no\x20this\x20function:',
        'call',
        'name',
        '_duration',
        'getFloat32',
        'islooping',
        'getByte',
        '_frameRate',
        'getInt16',
        '_nodes',
        '_nodesMap',
        'setNodeByIndex',
        '_indexInList',
        'getUint8',
        'propertyOwner',
        'fullPath',
        'AnimationClipParser03:unknown\x20type.',
        'params',
        'addEvent',
        'offset',
        '_version',
        'READ_ANIMATIONS',
        '_nodesDic',
        'type',
        'nodePath',
        'LAYAANIMATION:04',
        'AnimationClipParser04:unknown\x20type.',
        'LAYAANIMATION:COMPRESSION_04',
        'HalfFloatUtils',
        'convertToNumber',
        'eventName',
        'getInt32',
        'getNodeByIndex',
        'haloTexture',
        '_generateTexture2D',
        'format',
        'TextureFormat',
        'R8G8B8',
        'Alpha8',
        'GeneratedTexture._generateTexture:\x20unkonw\x20texture\x20format.',
        '_createFloatTextureBuffer',
        'Texture2D',
        'R32G32B32A32',
        'filterMode',
        'FilterMode',
        'Point',
        'wrapModeU',
        'wrapModeV',
        'WarpMode',
        '_convertToLayaVec3',
        'btVector3_x',
        '_convertToBulletVec3',
        'btVector3_setValue',
        '_tempArray16_0',
        '_tempArray16_1',
        'keyframeWidth',
        '_rotationTransformScaleSkinAnimation',
        'parentIndex',
        'mulMatrixByArray',
        'mulMatrixByArrayAndMatrixFast',
        '_computeAnimationDatasByArrayAndMatrixFast',
        '_computeAnimationDatasByArrayAndMatrixFastOld',
        'createAffineTransformationArray',
        'transformVector3ArrayByQuat',
        '_tempArray16_3',
        'mulMatrixByArrayFast',
        'transformVector3ArrayToVector3ArrayNormal',
        'transformLightingMapTexcoordArray',
        'indexOf',
        'substr',
        '_mulMatrixArray',
        'quaternionWeight',
        'quaternionConjugate',
        'scaleWeight',
        'pow',
        'scaleBlend',
        'matrix4x4MultiplyFFF',
        'matrix4x4MultiplyFFFForNative',
        'LayaGL',
        'instance',
        'matrix4x4Multiply',
        'matrix4x4MultiplyMFM',
        'anisoLevel',
        '_drawBound',
        'lineCount',
        'maxLineCount',
        '_tempVector3_0',
        '_tempVector3_1',
        'addLine',
        '_getHierarchyPath',
        '_parent',
        'getChildIndex',
        '_getNodeByHierarchyPath',
        'uint8ArrayToArrayBuffer',
        'width',
        'RenderTextureFormat',
        'R16G16B16A16',
        'this\x20function\x20is\x20not\x20surpprt\x20',
        'toString',
        'format\x20Material',
        'getData',
        'Render',
        'isConchApp',
        'HTMLCanvas',
        'lock',
        'createImageData',
        'set',
        'putImageData',
        'source',
        'toDataURL',
        '_tempArray16_2',
        'Resource',
        '_animationEvents',
        'Byte',
        'unknown\x20animationClip\x20version.',
        'ILaya',
        'loader',
        'create',
        'ANIMATIONCLIP',
        'duration',
        '_hermiteInterpolate',
        'isFinite',
        '_hermiteInterpolateVector3',
        '_hermiteInterpolateQuaternion',
        '_evaluateClipDatasRealTime',
        'getTransformActive',
        '_evaluateFrameNodeVector3DatasRealTime',
        '_tempQuaternion0',
        'AnimationClip:unknown\x20node\x20type.',
        '_evaluateClipDatasRealTimeForNative',
        'evaluateClipDatasRealTime',
        '_evaluateFrameNodeQuaternionDatasRealTime',
        '_binarySearchEventIndex',
        'splice',
        '_currentState',
        'normalizedTime',
        '_normalizedTime',
        'animatorState',
        '_resetPlayState',
        '_finish',
        '_startPlayTime',
        '_elapsedTime',
        '_lastIsFront',
        '_normalizedPlayTime',
        '_cloneTo',
        '_playEventIndex',
        '_referenceCount',
        '_playType',
        '_crossDuration',
        '_crossMark',
        '_crossNodesOwnersCount',
        '_crossNodesOwners',
        '_crossNodesOwnersIndicesMap',
        '_srcCrossClipNodeIndices',
        '_statesMap',
        '_states',
        '_playStateInfo',
        'blendingMode',
        'BLENDINGMODE_OVERRIDE',
        'defaultWeight',
        'playOnWake',
        'defaultState',
        '_defaultState',
        'avatarMask',
        '_avatarMask',
        '_removeClip',
        '_animator',
        '_removeReference',
        '_removeKeyframeNodeOwner',
        '_getReferenceCount',
        '_addReference',
        'addState',
        'AnimatorControllerLayer:this\x20stat\x27s\x20name\x20has\x20exist.',
        '_getOwnersByClip',
        'removeState',
        'destroy',
        '_clearReference',
        '_crossPlayStateInfo',
        '_nodeOwners',
        '_currentFrameIndices',
        '_realtimeDatas',
        '_scripts',
        'speed',
        'clipEnd',
        'clip',
        '_clip',
        '_resetFrameIndices',
        'addScript',
        'getScript',
        'getScripts',
        'clipStart',
        'indexInList',
        'referenceCount',
        'updateMark',
        'property',
        'saveCrossFixedValue',
        'crossFixedValue',
        '_avatarPathMap',
        '_catchAnimator',
        'getCatchAnimator',
        'getAllTranfromPath',
        'Component',
        '_linkAvatarSpritesData',
        '_renderableSprites',
        '_controllerLayers',
        '_linkSprites',
        '_speed',
        '_keyframeNodeOwnerMap',
        '_updateMark',
        '_animatorPool',
        'enabled',
        '_update',
        'controllerLayerCount',
        '_linkToSprites',
        'owner',
        'getChildByName',
        'linkSprite3DToAvatarNode',
        '_addKeyframeNodeOwner',
        '_keyframeNodeOwners',
        'defaultValue',
        'constructor',
        '_avatar',
        '_avatarNodeMap',
        '_rootNode',
        'ownerPathCount',
        '_updatePlayer',
        '_lastElapsedTime',
        'onStateExit',
        'apply',
        '_updateEventScript',
        '_eventScript',
        '_updateClipDatas',
        '_applyFloat',
        '_applyPositionAndRotationEuler',
        '_applyRotation',
        '_applyScale',
        '_tempVector31',
        '_applyCrossData',
        'localPosition',
        'localRotation',
        'localScale',
        'localRotationEuler',
        '_setClipDatasToNode',
        '_setCrossClipDatasToNode',
        '_destCrossClipNodeIndices',
        '_setHierarchyAnimator',
        '_hierarchyAnimator',
        '_changeAnimatorToLinkSprite3DNoAvatar',
        '_onDestroy',
        '_clearHierarchyAnimator',
        '_onEnable',
        '_scene',
        'getDefaultState',
        'play',
        '_onDisable',
        'remove',
        '_handleSpriteOwnersBySprite',
        'avatar',
        'getRes',
        'path',
        'linkSprites',
        'layers',
        'weight',
        'states',
        'Loader',
        'setTransformActive',
        'cullingMode',
        'timer',
        '_delta',
        'CULLINGMODE_CULLCOMPLETELY',
        'isRender',
        '_crossPlayState',
        '_updateAvatarNodesToSprite',
        'addControllerLayer',
        'getControllerLayer',
        'Animator:this\x20function\x20is\x20discard,please\x20use\x20animatorControllerLayer.addState()\x20instead.',
        'Animator:this\x20function\x20is\x20discard,please\x20use\x20animatorControllerLayer.removeState()\x20instead.',
        'NEGATIVE_INFINITY',
        'Animator:must\x20have\x20default\x20clip\x20value,please\x20set\x20clip\x20property.',
        '_revertDefaultKeyframeNodes',
        'onStateEnter',
        'Invalid\x20layerIndex\x20',
        'crossFade',
        'Invalid\x20name\x20',
        '_getAvatarOwnersAndInitDatasAsync',
        '_changeHierarchyAnimatorAvatar',
        '_isLinkSpriteToAnimationNodeData',
        '_isLinkSpriteToAnimationNode',
        '_transform',
        'transform',
        '_linkAvatarSprites',
        'worldMatrix',
        'getWorldMatrix',
        '_dummy',
        'isStatic',
        '_owner',
        'updateAnimationNodeWorldMatix',
        '_tempQuaternion1',
        'CULLINGMODE_ALWAYSANIMATE',
        'configPipeLineMode',
        'Forward',
        '_instance',
        'BaseTexture',
        'RenderTextureDepthFormat',
        'DEPTH_16',
        '_mulSampler',
        '_mulSamplerRT',
        '_isCameraTarget',
        '_glTextureType',
        '_height',
        '_depthStencilFormat',
        '_mipmapCount',
        'currentActive',
        '_currentActive',
        'createFromPool',
        '_width',
        '_format',
        '_inPool',
        '_pool',
        'recoverToPool',
        'depthStencilFormat',
        'defaulteTexture',
        'grayTexture',
        '_create',
        '_isWebGL2',
        'createFramebuffer',
        'FRAMEBUFFER',
        '_frameBuffer',
        'Depth',
        'ShadowMap',
        '_mulRenderBuffer',
        'createRenderbuffer',
        'bindRenderbuffer',
        'RENDERBUFFER',
        'RGB8',
        'R8G8B8A8',
        'renderbufferStorageMultisample',
        'RGBA8',
        'RGBA16F',
        'framebufferRenderbuffer',
        'COLOR_ATTACHMENT0',
        'WebGLContext',
        'bindTexture',
        '_glTexture',
        'RGB',
        'UNSIGNED_BYTE',
        'texStorage2D',
        'mipmapCount',
        'texImage2D',
        'ALPHA',
        'RGBA',
        'HALF_FLOAT_OES',
        '_mulFrameBuffer',
        'TEXTURE_2D',
        'framebufferTexture2D',
        'bindFramebuffer',
        'DEPTH_COMPONENT16',
        'DEPTH_COMPONENT',
        'DEPTH_ATTACHMENT',
        'DEPTH24_STENCIL8',
        'DEPTH_STENCIL',
        '_webgl_depth_texture',
        'UNSIGNED_INT_24_8_WEBGL',
        'DEPTH_STENCIL_ATTACHMENT',
        'RenderTexture:\x20depth\x20format\x20RenderTexture\x20must\x20use\x20depthFormat\x20with\x20DEPTH_16\x20and\x20DEPTHSTENCIL_16_8.',
        'COMPARE_REF_TO_TEXTURE',
        '_depthStencilBuffer',
        'STENCIL_8',
        'STENCIL_INDEX8',
        'STENCIL_ATTACHMENT',
        'DEPTHSTENCIL_24_8',
        'RenderTexture:\x20unkonw\x20depth\x20format.',
        'renderbufferStorage',
        'TEXTURE_WRAP_S',
        '_wrapModeU',
        '_setWarpMode',
        'TEXTURE_WRAP_T',
        '_setFilterMode',
        '_filterMode',
        '_setAnisotropy',
        '_readyed',
        '_activeResource',
        '_setGPUMemory',
        'invertY',
        '_end',
        'READ_FRAMEBUFFER',
        'DRAW_FRAMEBUFFER',
        'COLOR',
        'height',
        'NEAREST',
        'threadMode',
        'native\x202\x20thread\x20mode\x20use\x20getDataAsync',
        'checkFramebufferStatus',
        'FRAMEBUFFER_COMPLETE',
        'readPixels',
        '_disposeResource',
        'deleteTexture',
        'deleteFramebuffer',
        'getDataAsync',
        'readPixelsAsync',
        '_mask',
        '_length',
        '_index',
        '_value',
        'addDefineDatas',
        'removeDefineDatas',
        'has',
        'clear',
        '_float32Reader',
        '_bufferUsage',
        '_bufferType',
        '_canRead',
        '_byteLength',
        'bind',
        '_buffer',
        'buffer',
        '_vertexDeclaration',
        'vertexDeclaration',
        'canRead',
        'Buffer',
        '_bindedVertexBuffer',
        '_glBuffer',
        'ARRAY_BUFFER',
        'bufferData',
        'setData',
        'MAX_SAFE_INTEGER',
        'bufferSubData',
        'Can\x27t\x20read\x20data\x20from\x20VertexBuffer\x20with\x20only\x20write\x20flag!',
        'markAsUnreadbale',
        'DATATYPE_FLOAT32ARRAY',
        'DATATYPE_UINT8ARRAY',
        '_elementInfos',
        'FLOAT',
        'getElementInfos',
        'VertexElementFormat:\x20this\x20vertexElementFormat\x20is\x20not\x20implement.',
        'Single',
        'single',
        'vector2',
        'Vector3',
        'vector3',
        'vector4',
        'Color',
        'color',
        'Byte4',
        'byte4',
        'short2',
        'short4',
        'NormalizedShort2',
        'normalizedshort2',
        'halfvector2',
        'halfvector4',
        'createRotationZ',
        'createRotationYawPitchRoll',
        '_tempQuaternion',
        'createRotationAxis',
        'setRotation',
        'setPosition',
        'multiplyForNative',
        'createFromQuaternion',
        'createAffineTransformation',
        '_tempVector1',
        '_tempVector2',
        'tan',
        'createPerspectiveOffCenter',
        'createOrthoOffCenter',
        'row\x20Rows\x20and\x20columns\x20for\x20matrices\x20run\x20from\x200\x20to\x203,\x20inclusive.',
        'column\x20Rows\x20and\x20columns\x20for\x20matrices\x20run\x20from\x200\x20to\x203,\x20inclusive.',
        'setElementByRowColumn',
        'decomposeTransRotScale',
        'decomposeTransRotMatScale',
        'decomposeYawPitchRoll',
        'atan2',
        'transpose',
        'billboard',
        '_tempVector0',
        '_tempVector3',
        'translation',
        'setTranslationVector',
        'getForward',
        'setForward',
        '_tempMatrix4x4',
        '_ownerResource',
        '_data',
        '_defineDatas',
        '_initData',
        'addDefine',
        'removeDefine',
        'hasDefine',
        'clearDefine',
        'getBool',
        'setBool',
        'getInt',
        'setInt',
        'getNumber',
        'setNumber',
        'getVector2',
        'setVector2',
        'getVector3',
        'getVector',
        'setVector',
        'setQuaternion',
        'setMatrix4x4',
        'setBuffer',
        'setTexture',
        'erroTextur',
        'getTexture',
        'setValueData',
        'getValueData',
        'setAttribute',
        'getAttribute',
        'getLength',
        'cloneToForNative',
        '_int32Data',
        '_nativeArray',
        'number',
        'boolean',
        '_frameCount',
        '_runtimeCopyValues',
        'createArrayBufferRef',
        'ARRAY_BUFFER_TYPE_DATA',
        'needRenewArrayBufferForNative',
        'conchRef',
        'updateArrayBufferRef',
        '_ptrID',
        'isSyncToRender',
        'getDataForNative',
        'getIntForNative',
        'setIntForNative',
        'getBoolForNative',
        'setBoolForNative',
        'getNumberForNative',
        '_float32Data',
        'setNumberForNative',
        'getMatrix4x4ForNative',
        'setMatrix4x4ForNative',
        'setReferenceForNative',
        'getVectorForNative',
        'setVectorForNative',
        'setVector2ForNative',
        'setQuaternionForNative',
        'getBufferForNative',
        'getAttributeForNative',
        'setTextureForNative',
        '_getSource',
        'clearRuntimeCopyArray',
        '_SET_RUNTIME_VALUE_MODE_REFERENCE_',
        'createArrayBufferRefs',
        'ARRAY_BUFFER_REF_REFERENCE',
        'getPtrID',
        'syncBufferToRenderThread',
        'setRuntimeValueMode',
        'Stat',
        'obj',
        'clearRefNum',
        '_vertexElementsDic',
        '_vertexStride',
        '_vertexElements',
        '_shaderValues',
        '_elementUsage',
        '_offset',
        'vertexStride',
        'vertexElementCount',
        'getVertexElementByIndex',
        'getVertexElementByUsage',
        '_uniqueIDCounter',
        'elementUsage',
        'applyVertexBuffer',
        '_curBindedBufferState',
        'BufferState:\x20must\x20call\x20bind()\x20function\x20first.',
        'vertexAttribPointer',
        'BufferStateBase',
        'enableVertexAttribArray',
        'layaGPUInstance',
        'vertexAttribDivisor',
        'applyIndexBuffer',
        '_bindedIndexBuffer',
        '_bindForVAO',
        '_vertexBuffer',
        '_vertices',
        '_bufferState',
        'unBind',
        'STATIC_DRAW',
        '_vertexBufferInvertUV',
        '_bufferStateInvertUV',
        'Vector4',
        'SCREENQUAD_POSITION_UV',
        'render',
        'drawArrays',
        'TRIANGLE_STRIP',
        'renderBatches',
        'renderInvertUV',
        '_verticesInvertUV',
        'SCREENTRIANGLE_POSITION_UV',
        'TRIANGLES',
        '_subShaderIndex',
        'shader',
        '_shader',
        'passIndex',
        '_passIndex',
        'getSubShaderAt',
        '_passes',
        'ShaderVariantInfo:Shader\x20don\x27t\x20have\x20passIndex\x20of\x20',
        '_validDefine',
        'getDefineByName',
        'ShaderVariantInfo:Invalid\x20defineName\x20',
        '\x20in\x20',
        '_name',
        '\x20subShaderIndex\x20of\x20',
        '\x20passIndex\x20of\x20',
        '_defineNames',
        'equal',
        '_allCompiled',
        '_variants',
        'allCompiled',
        'variantCount',
        'contatins',
        'getByIndex',
        'compile',
        'compileShaderByDefineNames',
        '_attributeMap',
        '_uniformMap',
        '_enableInstancing',
        '_supportReflectionProbe',
        '_subShaders',
        '_getNamesByDefineData',
        '_maskMap',
        '_defineMap',
        '_defineCounter',
        '_propertyNameMap',
        'replace',
        'ShaderCompile',
        '_clearCR',
        'addInclude',
        'find',
        '_compileDefineDatas',
        'withCompile',
        'Shader3D:\x20unknown\x20passIndex.',
        'Shader3D:\x20unknown\x20shader\x20name.',
        '_preCompileShader',
        'addSubShader',
        'Shader3D:\x20unknown\x20subShaderIndex.',
        'RENDER_STATE_CULL',
        'RENDER_STATE_BLEND_DST',
        'RENDER_STATE_BLEND_DST_RGB',
        'RENDER_STATE_BLEND_SRC_ALPHA',
        'RENDER_STATE_BLEND_DST_ALPHA',
        'RENDER_STATE_BLEND_EQUATION',
        'RENDER_STATE_BLEND_EQUATION_RGB',
        'RENDER_STATE_BLEND_EQUATION_ALPHA',
        'RENDER_STATE_DEPTH_TEST',
        'RENDER_STATE_DEPTH_WRITE',
        'PERIOD_CUSTOM',
        'PERIOD_MATERIAL',
        'PERIOD_SPRITE',
        'PERIOD_SCENE',
        '_propertyNameCounter',
        'debugMode',
        'debugShaderVariantCollection',
        '_commandBuffer',
        '_screenShaderData',
        'BlitScreen',
        'run',
        'recover',
        'setContext',
        '_context',
        'u_MainTex',
        'SCREENTEXTUREOFFSETSCALE_NAME',
        'u_OffsetScale',
        'u_MainTex_TexelSize',
        'SCREENTEXTURE_ID',
        'propertyNameToID',
        'SCREENTEXTURE_NAME',
        'SCREENTEXTUREOFFSETSCALE_ID',
        'MAINTEXTURE_TEXELSIZE_ID',
        'MAINTEXTURE_TEXELSIZE_NAME',
        '_source',
        '_dest',
        '_offsetScale',
        '_shaderData',
        '_subShader',
        '_screenType',
        '_drawDefineCavans',
        'pop',
        '_camera',
        '_internalRenderTexture',
        'camera\x20internalRenderTexture\x20is\x20null,please\x20set\x20camera\x20enableBuiltInRenderTexture',
        '_screenShader',
        'viewport',
        'clientHeight',
        '_defaultOffsetScale',
        '_sourceTexelSize',
        '_start',
        '_compileDefine',
        'uploadUniforms',
        '_materialUniformParamsMap',
        'uploadRenderStateBlendDepth',
        '_SCREENTYPE_TRIANGLE',
        'BlitScreenQuadCMD:unknown\x20screen\x20Type.',
        '_SCREENTYPE_QUAD',
        '_renderTexture',
        'ShaderDataType',
        'Int',
        'Bool',
        'Number',
        'Vector2',
        'Quaternion',
        'Texture',
        '_nameID',
        '_dataType',
        'setVector3',
        '_localPosition',
        '_localScale',
        '_localRotationEuler',
        '_localMatrix',
        '_position',
        '_rotation',
        '_scale',
        '_rotationEuler',
        '_transformFlag',
        '_setTransformFlag',
        'TRANSFORM_LOCALEULER',
        'TRANSFORM_WORLDPOSITION',
        'TRANSFORM_WORLDQUATERNION',
        'TRANSFORM_WORLDEULER',
        'TRANSFORM_WORLDSCALE',
        'TRANSFORM_WORLDMATRIX',
        'getWorldLossyScale',
        'worldNeedUpdate',
        '_getTransformFlag',
        'localPositionX',
        'localPositionY',
        'localPositionZ',
        'TRANSFORM_LOCALMATRIX',
        'localRotationX',
        '_localRotation',
        'localRotationY',
        'localRotationZ',
        'localRotationW',
        '_angleToRandin',
        'TRANSFORM_LOCALQUATERNION',
        'localScaleX',
        'localScaleY',
        'localScaleZ',
        'localRotationEulerX',
        'localRotationEulerY',
        'localRotationEulerZ',
        '_tempVector30',
        '_onWorldRotationTransform',
        'localMatrix',
        'position',
        '_tempMatrix0',
        'rotation',
        'rotationEuler',
        '_worldMatrix',
        '_getScaleMatrix',
        '_tempMatrix3x30',
        '_tempMatrix3x31',
        '_tempMatrix3x32',
        '_setParent',
        '_children',
        '_onWorldTransform',
        'TRANSFORM_CHANGED',
        '_onWorldPositionScaleTransform',
        'event',
        'Event',
        '_onWorldPositionTransform',
        '_onWorldPositionRotationTransform',
        '_onWorldScaleTransform',
        'getRight',
        'setWorldLossyScale',
        '_tempMatrix3x33',
        'Transfrm3D:\x20discard\x20function,please\x20use\x20setWorldLossyScale\x20instead.',
        'Node',
        '_needProcessCollisions',
        '_needProcessTriggers',
        '_id',
        '_isStatic',
        'instantiate',
        'addChild',
        'load',
        'layer',
        '_layer',
        'Layer\x20value\x20must\x20be\x200-30.',
        'URL',
        '_changeAnimatorsToLinkSprite3D',
        'getComponent',
        '_changeHierarchyAnimator',
        '_changeAnimatorAvatar',
        '_onInActiveInScene',
        'scene',
        '_removeScript',
        '_onRemoved',
        'active',
        'Sprite3D:\x20Can\x27t\x20be\x20cloned\x20if\x20the\x20Sprite3D\x20has\x20destroyed.',
        'destroyed',
        '_createSprite3DInstance',
        '_parseSprite3DInstance',
        '_url',
        'clearRes',
        'WORLDMATRIX',
        'u_WorldMat',
        'u_MvpMatrix',
        '_projectionViewWorldMatrix',
        '_renderShaderValue',
        '_mesh',
        '_subMeshIndex',
        '_material',
        'cameraShaderValue',
        'projectionViewMatrix',
        '_matrix',
        'MVPMATRIX',
        'pipelineMode',
        '_pipelineMode',
        '_sceneUniformParamsMap',
        '_spriteUniformParamsMap',
        'uploadRenderStateFrontFace',
        'getInvertFront',
        '_subMeshes',
        '_prepareRender',
        '_render',
        '_clearColor',
        '_backgroundColor',
        '_depth',
        '_clearDepth',
        'clearColor',
        'COLOR_BUFFER_BIT',
        'clearDepth',
        'DEPTH_BUFFER_BIT',
        '_elementRender',
        '_geometry',
        'renderElement',
        'renderType',
        '_updateRenderType',
        '_renderUpdate',
        '_renderUpdateWithCamera',
        'renderSubShader',
        '_uploadMark',
        '_uploadScene',
        '_uploadRenderType',
        '_uploadCameraShaderValue',
        '_cameraUniformParamsMap',
        'RENDERTYPE_NORMAL',
        '_revertBatchRenderUpdate',
        '_renderElements',
        '_renderElementUpdate',
        'no\x20type\x20shaderValue\x20on\x20this\x20CommendBuffer',
        'instanceWorldMatrixDeclaration',
        'MESH_WORLDMATRIX_ROW0',
        'MESH_WORLDMATRIX_ROW1',
        'MESH_WORLDMATRIX_ROW2',
        'getVertexDeclaration',
        '_vertexDeclarationMap',
        'split',
        'POSITION',
        'NORMAL',
        'MESH_NORMAL0',
        'MESH_COLOR0',
        'UV1',
        'MESH_TEXTURECOORDINATE1',
        'BLENDWEIGHT',
        'MESH_BLENDWEIGHT0',
        'BLENDINDICES',
        'TANGENT',
        'MESH_TANGENT0',
        'MESH_POSITION0',
        'MESH_TEXTURECOORDINATE0',
        'MESH_BLENDINDICES0',
        'MESH_WORLDMATRIX_ROW3',
        'MESH_SIMPLEANIMATOR',
        'MESH_CUSTOME0',
        'MESH_CUSTOME1',
        'MESH_CUSTOME2',
        '_instanceWorldMatrixData',
        'maxInstanceCount',
        '_instanceWorldMatrixBuffer',
        'DYNAMIC_DRAW',
        'the\x20number\x20of\x20renderings\x20exceeds\x20the\x20maximum\x20number\x20of\x20merges',
        '_instanceProperty',
        '_drawnums',
        '_updateWorldMatrixBuffer',
        '_setInstanceBuffer',
        '_instanceBufferState',
        'applyInstanceVertexBuffer',
        '_propertyMap',
        '_indexBuffer',
        'orphanStorage',
        '_indexCount',
        'drawElementsInstanced',
        '_indexStart',
        'trianglesFaces',
        'setWorldMatrix',
        'worldMatrixArray\x20length\x20is\x20less\x20then\x20drawnums',
        '_matrixs',
        '_commands',
        '_apply',
        'setShaderDataTexture',
        'setGlobalTexture',
        'setShaderDataVector',
        'setGlobalVector',
        'setShaderDataVector3',
        'setGlobalVector3',
        'setShaderDataVector2',
        'setGlobalVector2',
        'setShaderDataNumber',
        'setGlobalNumber',
        'setShaderDataInt',
        'setGlobalInt',
        'setShaderDataMatrix',
        'setGlobalMatrix',
        'blitScreenQuad',
        'blitScreenQuadByMaterial',
        'shaderData',
        'setRenderTarget',
        'clearRenderTarget',
        'drawMesh',
        'drawRender',
        'drawMeshInstance',
        'supportInstance',
        'destination',
        'camera',
        'compositeShaderData',
        'command',
        'deferredReleaseTextures',
        '_compositeShader',
        'PostProcessComposite',
        '_compositeShaderData',
        '_effects',
        'SHADERDEFINE_BLOOM_LOW',
        'BLOOM_LOW',
        'SHADERDEFINE_BLOOM',
        'BLOOM',
        'FINALPASS',
        'enable',
        '_enable',
        '_init',
        'supportWebGLPlusRendering',
        'SHADERVALUE_AUTOEXPOSURETEX',
        'whiteTexture',
        '_getCanvasHeight',
        '_screenOffsetScale',
        'removeEffect',
        '_applyPostProcessCommandBuffers',
        'SHADERVALUE_BLOOMTEX',
        'u_BloomTex',
        'SHADERVALUE_BLOOM_DIRTTEX',
        'u_Bloom_DirtTex',
        'u_BloomTex_TexelSize',
        'u_Bloom_DirtTileOffset',
        'SHADERVALUE_BLOOM_SETTINGS',
        'u_Bloom_Settings',
        'SHADERVALUE_BLOOM_COLOR',
        'EventDispatcher',
        '_locaEulerlUpdate',
        '_localUpdate',
        '_worldUpdate',
        '_getlocalMatrix',
        '_createAffineTransformationArray',
        '_localQuaternionUpdate',
        '_worldMatrixIndex',
        'setParent',
        'removeChild',
        'getChildByIndex',
        'getChildCount',
        '_cloneNative',
        '_nativeCurCloneCount',
        '_cloneToNative',
        '_nativeNodeCount',
        '_parse',
        'rootNode',
        '_parseNode',
        'AVATAR',
        '_initCloneToAnimator',
        'props',
        'child',
        '_cloneDatasToAnimator',
        '_cloneDatasToAnimatorNative',
        '_animationNodeLocalPositions',
        '_animationNodeLocalRotations',
        '_animationNodeLocalScales',
        '_animationNodeWorldMatrixs',
        '_animationNodeParentIndices',
        'renderQueue',
        'RENDERQUEUE_OPAQUE',
        'alphaTest',
        'Laya',
        'SHADERDEFINE_ALPHATEST',
        'ALPHATEST',
        'getRegClass',
        'LAYAMATERIAL:02',
        'vectors',
        'BaseMaterial:unkonwn\x20color\x20length.',
        'defines',
        'renderStates',
        'blend',
        'cull',
        'depthTest',
        'depthWrite',
        'dstBlend',
        'blendSrc',
        'blendDst',
        'LAYAMATERIAL:03',
        'textures',
        'BaseMaterial:unkonwn\x20version.',
        'ALPHATESTVALUE',
        'alphaTestValue',
        'CULL',
        'BLEND',
        'BLEND_SRC',
        'BLEND_DST',
        'DEPTH_TEST',
        'MaterialDefine',
        '_removeTetxureReference',
        'setShaderName',
        'BaseMaterial:\x20unknown\x20shader\x20name.',
        'getShaderPropertyValue',
        'MATERIAL',
        'RENDERQUEUE_TRANSPARENT',
        'u_AlphaTestValue',
        's_Blend',
        's_BlendSrc',
        's_BlendDst',
        's_DepthTest',
        'DEPTH_WRITE',
        's_DepthWrite',
        '__initDefine__',
        'RENDERQUEUE_ALPHATEST',
        'CULL_BACK',
        'BLEND_DISABLE',
        'srcBlend',
        'BLENDPARAM_ONE',
        'srcBlendRGB',
        'srcBlendAlpha',
        'dstBlendAlpha',
        'BLENDPARAM_ZERO',
        'blendConstColor',
        'blendEquation',
        'blendEquationRGB',
        'blendEquationAlpha',
        'BLENDEQUATION_ADD',
        'DEPTHTEST_LEQUAL',
        'dstBlendRGB',
        'CULL_NONE',
        'BLEND_ENABLE_ALL',
        'BLENDPARAM_SRC_COLOR',
        'BLENDPARAM_ONE_MINUS_SRC_COLOR',
        'BLENDPARAM_DST_COLOR',
        'BLENDPARAM_ONE_MINUS_DST_COLOR',
        'BLENDPARAM_SRC_ALPHA',
        'BLENDPARAM_DST_ALPHA',
        'BLENDPARAM_SRC_ALPHA_SATURATE',
        'BLENDEQUATION_SUBTRACT',
        'DEPTHTEST_NEVER',
        'DEPTHTEST_EQUAL',
        'DEPTHTEST_GREATER',
        'DEPTHTEST_NOTEQUAL',
        'DEPTHTEST_GEQUAL',
        'BLINNPHONG',
        'albedoIntensity',
        'ALBEDOCOLOR',
        'MATERIALSPECULAR',
        'SHININESS',
        'SHADERDEFINE_DIFFUSEMAP',
        'SHADERDEFINE_NORMALMAP',
        'NORMALMAP',
        'SHADERDEFINE_SPECULARMAP',
        'SPECULARMAP',
        'SHADERDEFINE_ENABLEVERTEXCOLOR',
        'ENABLEVERTEXCOLOR',
        'SHADERDEFINE_ENABLETRANSMISSION',
        'ENABLETRANSMISSION',
        'SHADERDEFINE_THICKNESSMAP',
        '_ColorR',
        'albedoColor',
        '_ColorG',
        '_ColorB',
        '_ColorA',
        '_Color',
        '_SpecColorR',
        '_SpecColorG',
        '_SpecColorB',
        '_SpecColorA',
        '_SpecColor',
        'specularColor',
        '_Shininess',
        '_MainTex_STX',
        'TILINGOFFSET',
        'tilingOffset',
        '_MainTex_STY',
        '_MainTex_STZ',
        '_MainTex_STW',
        '_MainTex_ST',
        '_Cutoff',
        'RENDERMODE_OPAQUE',
        'DEPTHTEST_LESS',
        'RENDERMODE_CUTOUT',
        'BLENDPARAM_ONE_MINUS_SRC_ALPHA',
        'Material:renderMode\x20value\x20error.',
        'enableVertexColor',
        'tilingOffsetX',
        'tilingOffsetZ',
        'tilingOffsetW',
        'albedoColorG',
        'albedoColorB',
        'albedoColorA',
        'AlbedoIntensity',
        'specularColorR',
        'specularColorG',
        'specularColorB',
        'specularColorA',
        'ALBEDOTEXTURE',
        'NORMALTEXTURE',
        'normalTexture',
        'specularTexture',
        'SPECULARTEXTURE',
        'enableTransmission',
        'transmissionRate',
        'transmissionRata',
        'TRANSMISSIONRATE',
        'backDiffuse',
        'IBACKDIFFUSE',
        'backScale',
        'IBACKSCALE',
        'thinknessTexture',
        'THINKNESSTEXTURE',
        'transmissionColor',
        'TRANSMISSIONCOLOR',
        'RENDERMODE_TRANSPARENT',
        'u_DiffuseTexture',
        'u_NormalTexture',
        'u_SpecularTexture',
        'u_DiffuseColor',
        'u_MaterialSpecular',
        'u_TransmissionRate',
        'u_BackDiffuse',
        'u_ThinknessTexture',
        'u_AlbedoIntensity',
        'Effect',
        'TINTCOLOR',
        'RENDERMODE_ADDTIVE',
        'SHADERDEFINE_MAINTEXTURE',
        'SHADERDEFINE_ADDTIVEFOG',
        'ADDTIVEFOG',
        '_TintColorR',
        '_TintColorG',
        '_TintColorB',
        '_TintColorA',
        '_TintColor',
        'renderMode',
        'MeshEffectMaterial\x20:\x20renderMode\x20value\x20error.',
        'colorR',
        'colorG',
        'colorB',
        'colorA',
        'texture',
        'MAINTEXTURE',
        'tilingOffsetY',
        'u_AlbedoTexture',
        'u_AlbedoColor',
        'u_TilingOffset',
        'ExtendTerrain',
        'SHADERDEFINE_DETAIL_NUM1',
        'ExtendTerrain_DETAIL_NUM1',
        'SHADERDEFINE_DETAIL_NUM2',
        'ExtendTerrain_DETAIL_NUM2',
        'SHADERDEFINE_DETAIL_NUM3',
        'ExtendTerrain_DETAIL_NUM3',
        'SHADERDEFINE_DETAIL_NUM4',
        'ExtendTerrain_DETAIL_NUM4',
        'SHADERDEFINE_DETAIL_NUM5',
        'ExtendTerrain_DETAIL_NUM5',
        'splatAlphaTexture',
        'SPLATALPHATEXTURE',
        'diffuseTexture1',
        'DIFFUSETEXTURE1',
        '_setDetailNum',
        'diffuseTexture2',
        'DIFFUSETEXTURE2',
        'diffuseTexture3',
        'DIFFUSETEXTURE3',
        'DIFFUSETEXTURE4',
        'diffuseTexture5',
        'DIFFUSETEXTURE5',
        'diffuseScaleOffset1',
        'DIFFUSESCALEOFFSET1',
        'DIFFUSESCALEOFFSET2',
        'diffuseScaleOffset3',
        'DIFFUSESCALEOFFSET3',
        'diffuseScaleOffset4',
        'diffuseScaleOffset5',
        'DIFFUSESCALEOFFSET5',
        'u_SplatAlphaTexture',
        'u_DiffuseTexture1',
        'u_DiffuseTexture2',
        'u_DiffuseTexture3',
        'u_DiffuseTexture4',
        'u_DiffuseScaleOffset2',
        'DIFFUSESCALEOFFSET4',
        'u_DiffuseScaleOffset5',
        'PBRRenderMode',
        'Opaque',
        'Cutout',
        'Fade',
        'Transparent',
        'EMISSIONCOLOR',
        'OCCLUSIONSTRENGTH',
        'NORMALSCALE',
        'SHADERDEFINE_ALBEDOTEXTURE',
        'SHADERDEFINE_PARALLAXTEXTURE',
        'SHADERDEFINE_OCCLUSIONTEXTURE',
        'OCCLUSIONTEXTURE',
        'SHADERDEFINE_EMISSION',
        'EMISSION',
        'EMISSIONTEXTURE',
        'SHADERDEFINE_TRANSPARENTBLEND',
        'SHADERDEFINE_LAYA_PBR_BRDF_LOW',
        'LAYA_PBR_BRDF_LOW',
        'albedoTexture',
        'SHADERDEFINE_NORMALTEXTURE',
        'normalTextureScale',
        'PARALLAXTEXTURE',
        'parallaxTexture',
        'parallaxTextureScale',
        'PARALLAXSCALE',
        'occlusionTextureStrength',
        'smoothness',
        'SMOOTHNESS',
        'smoothnessTextureScale',
        'SMOOTHNESSSCALE',
        'enableEmission',
        'emissionColor',
        'SHADERDEFINE_EMISSIONTEXTURE',
        'PBRMaterial:unknown\x20renderMode\x20value.',
        'u_NormalScale',
        'u_Smoothness',
        'u_SmoothnessScale',
        'u_occlusionStrength',
        'u_ParallaxTexture',
        'u_ParallaxScale',
        'u_EmissionTexture',
        'u_EmissionColor',
        'renderQuality',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0auniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x0d\x0a//传入法线\x0d\x0avarying\x20vec4\x20depthNormals;\x0d\x0a\x0d\x0a\x0d\x0avec4\x20depthNormalsVertex()\x0d\x0a{\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09worldMat\x20=\x20worldMat\x20*\x20skinTransform;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec4\x20positionWS\x20=\x20worldMat\x20*\x20a_Position;\x0d\x0a\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x20\x20\x0d\x0a\x0d\x0a\x09vec3\x20normalWS\x20=\x20normalize(a_Normal*worldInvMat);//if\x20no\x20normalize\x20will\x20cause\x20precision\x20problem\x0d\x0a\x0d\x0a\x09depthNormals.xyz\x20=\x20normalWS;\x0d\x0a\x09vec4\x20positionCS\x20=\x20u_ViewProjection\x20*\x20positionWS;\x0d\x0a\x09depthNormals.w\x20=\x20(positionCS.z\x20*\x202.0\x20-\x20positionCS.w)*u_ProjectionParams.w;\x0d\x0a\x09\x0d\x0a\x20\x20\x20\x20return\x20positionCS;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20positionCS\x20=\x20\x20depthNormalsVertex();\x0d\x0a\x09gl_Position=remapGLPositionZ(positionCS);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a#include\x20\x22DepthNormalUtil.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec4\x20depthNormals;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_FragColor=depthNormalsFragment(depthNormals);\x0d\x0a}',
        'textureID',
        '_stateParamsMap',
        '_ps',
        '_globaluniformMap',
        '_program',
        'createProgram',
        '_vshader',
        '_createShader',
        '_vs',
        'VERTEX_SHADER',
        '_pshader',
        'FRAGMENT_SHADER',
        'attachShader',
        'getProgramParameter',
        '_customUniformParamsMap',
        'useProgram',
        '_curActTexIndex',
        'location',
        'getUniformLocation',
        '[0]',
        'isArray',
        '_addShaderUnifiormFun',
        'PERIOD_CAMERA',
        'Shader3D:\x20period\x20is\x20unkonw.',
        'dataOffset',
        'createCommandEncoder',
        'addShaderUniform',
        '_stateMap',
        '_getRenderState',
        'deleteShader',
        'deleteProgram',
        'caller',
        'BOOL',
        'INT',
        'fun',
        '_uniform1iv',
        '_uniform1fv',
        '_uniform1f',
        'uploadedValue',
        'FLOAT_VEC2',
        '_uniform_vec2v',
        '_uniform_vec2',
        'FLOAT_VEC3',
        '_uniform_vec4v',
        '_uniform_vec4',
        'FLOAT_MAT2',
        '_uniformMatrix2fv',
        'FLOAT_MAT3',
        '_uniformMatrix3fv',
        'FLOAT_MAT4',
        '_uniformMatrix4fv',
        '_uniformMatrix4f',
        'SAMPLER_2D',
        'SAMPLER_2D_SHADOW',
        'uniform1i',
        '_uniform_sampler2D',
        '_uniform_sampler3D',
        'SAMPLER_CUBE',
        '_uniform_samplerCube',
        'compile\x20shader\x20err!',
        'createShader',
        'shaderSource',
        'compileShader',
        'getShaderParameter',
        'COMPILE_STATUS',
        'getShaderInfoLog',
        'uniform1f',
        'uniform2f',
        'uniform2fv',
        '_uniform_vec3',
        'uniform3f',
        'uniform3fv',
        'uniform4f',
        'uniform4fv',
        'uniformMatrix2fv',
        'uniformMatrix4fv',
        'uniform1iv',
        '_uniform_ivec2',
        'uniform2i',
        '_uniform_ivec2v',
        'uniform2iv',
        '_uniform_vec3i',
        'uniform3i',
        'uniform3iv',
        '_uniform_vec4i',
        'uniform4iv',
        'activeTexture',
        'TEXTURE_3D',
        'TEXTURE_CUBE_MAP',
        'shaderCall',
        'LayaGLRunner',
        'uploadShaderUniforms',
        '_shaderPass',
        'renderState',
        'setDepthTest',
        'setDepthFunc',
        'setBlend',
        'RENDER_STATE_BLEND_SRC',
        'setBlendEquation',
        'setBlendFunc',
        'BLEND_ENABLE_SEPERATE',
        'setBlendEquationSeparate',
        'setBlendFuncSeperate',
        'setCullFace',
        'CCW',
        'setFrontFace',
        'uploadCustomUniform',
        '_uniformMatrix2fvForNative',
        '_uniformMatrix3fvForNative',
        'uniformMatrix3fvEx',
        '_uniformMatrix4fvForNative',
        'uniformMatrix4fvEx',
        '_add',
        '_getIndexInList',
        'SimpleSingletonList:',
        '\x20has\x20\x20in\x20\x20SingletonList.',
        '_setIndexInList',
        'clearElement',
        'toLinear',
        'gammaToLinearSpace',
        'linearToGammaSpace',
        'GREEN',
        'BLUE',
        'CYAN',
        'YELLOW',
        'MAGENTA',
        'GRAY',
        'BLACK',
        '_drawTraversalCullingBound',
        '_tempColor0',
        'bounds',
        '_getBoundBox',
        'cullingMask',
        'loopCount',
        '_castShadow',
        'useOcclusionCulling',
        '_needRender',
        '_renderMark',
        '_distanceForSort',
        'getCenter',
        'renderObjectCulling',
        '_opaqueQueue',
        '_transparentQueue',
        '_renders',
        '_clearRenderQueue',
        '_octree',
        'updateMotionObjects',
        'shrinkRootIfPossible',
        '_traversalCulling',
        '_debugTool',
        'drawAllBounds',
        'drawAllObjects',
        '_quickSort',
        'cullingShadow',
        'getCollidingWithCastShadowFrustum',
        'frustumCulling',
        'cullingRenderBounds',
        'cullPlaneCount',
        'cullPlanes',
        'normal',
        'getCollidingWithFrustum',
        'boundFrustum',
        'renderObjectCullingNative',
        '_updateForNative',
        'cullingNative',
        '_boundFrustumBuffer',
        '_cullingBuffer',
        '_cullingBufferResult',
        '_isLayerVisible',
        'culling',
        '_cameraCullInfo',
        '_shadowCullInfo',
        'pointLightCount',
        'spotLightCount',
        'indices',
        '_depthSliceParam',
        '_xSlices',
        '_ySlices',
        'ceil',
        '_clusterTexture',
        '_clusterPixels',
        '_zSlices',
        '_placePointLightToClusters',
        '_clusterDatas',
        'zMin',
        'zMax',
        'yMin',
        'yMax',
        'xMin',
        '_insertConePlane',
        '_shrinkSphereLightZPerspective',
        'log2',
        '_shrinkSpotLightZPerspective',
        '_shrinkSphereLightByBoundOrth',
        'xMax',
        '_shrinkSpotLightByBoundOrth',
        '_shrinkSpotXYByConePerspective',
        '_tempVector32',
        '_tempLightBound',
        'transformV3ToV3',
        'range',
        '_shrinkXYByRadiusPerspective',
        '_updateSpotLightPerspective',
        '_tempVector34',
        'spotAngle',
        '_tempVector33',
        '_updatePointLightOrth',
        '_updateSpotLightOrth',
        'farPlane',
        'nearPlane',
        'viewMatrix',
        '_directionLights',
        '_elements',
        '_spotLights',
        'orthographic',
        'orthographicVerticalSize',
        'aspectRatio',
        '_updateClusterPlaneXY',
        '_clusterXPlanes',
        '_clusterYPlanes',
        '_updatePointLightPerspective',
        'setSubPixels',
        '_tempVector35',
        '_tempVector36',
        '_tempVector37',
        '_coefficients',
        'setCoefficients',
        '_pressedSprite',
        '_pressedLoopCount',
        'sprite',
        'mousePositionY',
        '_identifier',
        'PlaneIntersectionType_Back',
        'PlaneIntersectionType_Front',
        'PlaneIntersectionType_Intersecting',
        'direction',
        'Contains',
        'Intersects',
        'distancePlaneToPoint',
        'distanceSphereToPoint',
        'center',
        'distanceSphereToSphere',
        'radius',
        'origin',
        '_tempV34',
        'intersectsRayAndTriangleRP',
        'intersectsRayAndTriangleRD',
        'intersectsRayAndPoint',
        'scalarLength',
        '_tempV33',
        'intersectsPlaneAndTriangle',
        'intersectsPlaneAndPoint',
        'intersectsRayAndPlaneRP',
        'intersectsRayAndPlaneRD',
        'intersectsRayAndBoxRD',
        'intersectsRayAndBoxRP',
        'intersectsRayAndSphereRD',
        'intersectsSphereAndTriangle',
        'closestPointPointTriangle',
        'intersectsPlaneAndPlane',
        'intersectsPlaneAndPlaneRL',
        'intersectsPlaneAndBox',
        'intersectsBoxAndBox',
        'intersectsBoxAndSphere',
        'intersectsSphereAndSphere',
        'Disjoint',
        'boxContainsBox',
        'boxContainsSphere',
        'sphereContainsPoint',
        'sphereContainsTriangle',
        'sphereContainsSphere',
        '_tempV35',
        '_tempV36',
        'closestPointPlanePoint',
        'closestPointSpherePoint',
        'closestPointSphereSphere',
        'FrustumCorner',
        'FarBottomLeft',
        'FarTopLeft',
        'FarTopRight',
        'FarBottomRight',
        'nearBottomLeft',
        'nearTopLeft',
        'nearTopRight',
        'nearBottomRight',
        'unknown',
        '_near',
        '_far',
        '_left',
        '_right',
        '_top',
        '_bottom',
        'getPlanesFromMatrix',
        'matrix',
        'far',
        'right',
        'top',
        'bottom',
        'equalsBoundFrustum',
        'equalsOtherMatrix',
        'equalsObj',
        'getPlane',
        'getCorners',
        'get3PlaneInterPoint',
        'containsBoundBox',
        'containsBoundSphere',
        'intersectsPlaneAndSphere',
        'minDepth',
        'maxDepth',
        'unprojectFromMat',
        'unprojectFromWVP',
        'MIN_VALUE',
        'NaN',
        'IndexFormat',
        'UInt8',
        'UInt16',
        'UInt32',
        '_indexType',
        'ELEMENT_ARRAY_BUFFER',
        '_indexTypeByteCount',
        'indexType',
        'indexTypeByteCount',
        'IndexBuffer3D:\x20must\x20bind\x20current\x20BufferState.',
        'bindBuffer',
        'drawElements',
        'material',
        'mesh',
        '_isAvailable',
        'LEQUAL',
        'setDepthMask',
        '_tempMatrix1',
        'projectionMatrix',
        'createPerspective',
        'fieldOfView',
        '_applyViewProject',
        '_uploadMaterial',
        'LESS',
        '_skyRenderer',
        '_up',
        '_fieldOfView',
        '_useUserProjectionMatrix',
        '_orthographicVerticalSize',
        'renderingOrder',
        '_nearPlane',
        '_farPlane',
        'skyRenderer',
        '_calculateProjectionMatrix',
        '_orthographic',
        '_renderingOrder',
        'displayedInStage',
        '_cameraPool',
        '_forward',
        'getUp',
        'CAMERAPOS',
        'CAMERADIRECTION',
        'CAMERAUP',
        'addLayer',
        'removeLayer',
        'resetProjectionMatrix',
        '_onActive',
        '_onInActive',
        'skyboxMaterial',
        'stage',
        'off',
        'RESIZE',
        '_onScreenSizeChanged',
        '_tempMatrix4x40',
        'u_CameraPos',
        'VIEWMATRIX',
        'PROJECTMATRIX',
        'u_Projection',
        'VIEWPROJECTMATRIX',
        'u_CameraDirection',
        'VIEWPORT',
        'u_Viewport',
        'PROJECTION_PARAMS',
        'u_ProjectionParams',
        'DEPTHTEXTURE',
        'u_CameraDepthTexture',
        'DEPTHNORMALSTEXTURE',
        'u_CameraDepthNormalsTexture',
        'DEPTHZBUFFERPARAMS',
        'DEPTHMAP',
        'SHADERDEFINE_DEPTHNORMALS',
        'RENDERINGTYPE_FORWARDRENDERING',
        '_invertYScaleMatrix',
        '_invertYProjectionMatrix',
        'CLEARFLAG_SOLIDCOLOR',
        'CLEARFLAG_DEPTHONLY',
        'ShadowMode',
        'None',
        'Hard',
        'SoftLow',
        'SoftHigh',
        'LightType',
        'Directional',
        'Spot',
        '_shadowMode',
        '_isAlternate',
        '_shadowResolution',
        '_shadowDistance',
        '_shadowNearPlane',
        '_lightWoldMatrix',
        '_intensityColor',
        '_lightmapBakedType',
        'LIGHTMAPBAKEDTYPE_REALTIME',
        '_intensity',
        'intensity',
        'shadowDistance',
        'shadowResolution',
        '_shadowDepthBias',
        'shadowNormalBias',
        '_shadowNormalBias',
        'shadowStrength',
        '_shadowStrength',
        'shadowNearPlane',
        'lightmapBakedType',
        'LIGHTMAPBAKEDTYPE_BAKED',
        '_addToScene',
        '_lightCount',
        '_addToLightQueue',
        'LightSprite:light\x20count\x20has\x20large\x20than\x20maxLightCount,the\x20latest\x20added\x20light\x20will\x20be\x20ignore.',
        '_removeFromScene',
        '_alternateLights',
        '_removeFromLightQueue',
        'shift',
        'diffuseColor',
        'log',
        'LightSprite:\x20discard\x20property,please\x20use\x20color\x20property\x20instead.',
        'LIGHTMAPBAKEDTYPE_MIXED',
        'ShadowCascadesMode',
        'NoCascades',
        'TwoCascades',
        'FourCascades',
        'Near',
        'Far',
        'Left',
        'Right',
        'Bottom',
        'Top',
        'supportShadow',
        'SystemUtils',
        'supportRenderTextureFormat',
        'init',
        '_shadowTextureFormat',
        'Bilinear',
        'getShadowBias',
        '_lightType',
        'ShadowUtils:Only\x20spot\x20and\x20directional\x20shadow\x20casters\x20are\x20supported\x20now.',
        'shadowMode',
        'getCameraFrustumPlanes',
        'getFarWithRadius',
        'resolution',
        'offsetX',
        'offsetY',
        'getDirectionLightShadowCullPlanes',
        '_backPlaneFaces',
        '_frustumPlaneNeighbors',
        '_edgePlanePoint2',
        '_adjustNearPlane',
        '_adjustFarPlane',
        'sphereCenterZ',
        'splitBoundSphere',
        'getBoundSphereByFrustum',
        'getMaxTileResolutionInAtlas',
        'getDirectionalLightMatrices',
        'atlasBorderSize',
        'viewProjectMatrix',
        'createLookAt',
        '_shadowMapScaleOffsetMatrix',
        'getSpotLightShadowData',
        'lightWorldMatrix',
        'cameraCullInfo',
        'prepareShadowReceiverShaderValues',
        '_frustumCorners',
        '_frustumTwoPlaneCorners',
        'DepthTextureMode',
        'DepthNormals',
        'MotionVectors',
        'update',
        '_viewPort',
        'depthTexture',
        'depthNormalTexture',
        '_depthNormalsTexture',
        'there\x20is\x20UnDefined\x20type\x20of\x20DepthTextureMode',
        'ShadowCaster',
        '_depthTexture',
        'SHADOW_BIAS',
        'scissor',
        'DepthNormal',
        'SCISSOR_TEST',
        '_setupDepthModeShaderValue',
        'DEFINE_SHADOW_BIAS',
        '_zBufferParams',
        'cleanUp',
        'CameraClearFlags',
        'SolidColor',
        'Sky',
        'DepthOnly',
        'Nothing',
        'CameraEventFlags',
        'BeforeForwardOpaque',
        'BeforeSkyBox',
        'BeforeTransparent',
        'BeforeImageEffect',
        'AfterEveryThing',
        '_viewportParams',
        '_projectionParams',
        '_needBuiltInRenderTexture',
        '_offScreenRenderTexture',
        '_internalCommandBuffer',
        '_cameraEventCommandBuffer',
        '_clusterPlaneCacheFlag',
        'enableRender',
        'clearFlag',
        '_viewMatrix',
        '_projectionViewMatrix',
        '_viewport',
        '_rayViewport',
        '_aspectRatio',
        '_boundFrustum',
        '_onTransformChanged',
        'renderTarget',
        '_needInternalRenderTexture',
        '_getRenderTextureFormat',
        '_renderShadowMap',
        '_preRenderMainPass',
        '_aftRenderMainPass',
        'Camera:\x20the\x20aspect\x20ratio\x20has\x20to\x20be\x20a\x20positive\x20real\x20number.',
        '_calculationViewport',
        '_normalizedViewport',
        'clientWidth',
        'normalizedViewport',
        '_updateViewMatrix',
        '_projectionMatrix',
        'postProcess',
        '_postProcess',
        'enableHDR',
        'Camera:can\x27t\x20enable\x20HDR\x20in\x20this\x20device.',
        'enableBuiltInRenderTexture',
        '_depthTextureMode',
        '_getCanvasWidth',
        '_getRenderTexture',
        '_enableHDR',
        '_prepareCameraToRender',
        '_invertYProjectionViewMatrix',
        '_applyCommandBuffer',
        'begainSample',
        'PERFORMANCE_LAYA_3D_RENDER_RENDERCOMMANDBUFFER',
        'forEach',
        'PerformancePlugin',
        'endSample',
        '_preRenderScript',
        'copyTexSubImage2D',
        '_renderMainPass',
        '_multiLighting',
        'PERFORMANCE_LAYA_3D_RENDER_CLUSTER',
        'PERFORMANCE_LAYA_3D_RENDER_CULLING',
        '_preCulling',
        'depthTextureMode',
        '_renderDepthMode',
        '_clear',
        'PERFORMANCE_LAYA_3D_RENDER_RENDEROPAQUE',
        '_renderScene',
        'SCENERENDERFLAG_SKYBOX',
        'PERFORMANCE_LAYA_3D_RENDER_RENDERTRANSPARENT',
        'SCENERENDERFLAG_RENDERTRANSPARENT',
        '_postRenderScript',
        'PERFORMANCE_LAYA_3D_RENDER_POSTPROCESS',
        'PERFORMANCE_LAYA_3D_RENDER_RENDERDEPTHMDOE',
        'depthPass',
        '_shadowCasterPass',
        'activeInHierarchy',
        'viewportPointToRay',
        'normalizedViewportPointToRay',
        '_tempVector20',
        'calculateCursorRay',
        'worldToViewportPoint',
        'project',
        'clientScaleX',
        'clientScaleY',
        'worldToNormalizedViewportPoint',
        'addCommandBuffer',
        'removeCommandBuffer',
        'removeCommandBuffers',
        '_mouseTouch',
        '_touches',
        '_multiTouchEnabled',
        'cancelable',
        'preventDefault',
        '_eventList',
        '_tempHitResult0',
        '_onCanvasEvent',
        '_pushEventList',
        'addEventListener',
        'mousemove',
        'touchstart',
        'touchend',
        'touchmove',
        'touchcancel',
        '_offCanvasEvent',
        'mousedown',
        'removeEventListener',
        'mouseup',
        'multiTouchEnabled',
        '_touchPool',
        'onMouseDown',
        '_mouseTouchUp',
        'onMouseClick',
        'onMouseUp',
        '_mouseTouchRayCast',
        '_tempRay0',
        'succeeded',
        'mousePositionX',
        '_physicsSimulation',
        'rayCast',
        'collider',
        'onMouseEnter',
        '_changeTouches',
        '_getTouch',
        '_tempPoint',
        'setTo',
        'pageX',
        'pageY',
        '_canvasTransform',
        'invertTransformPoint',
        'changedTouches',
        '_mouseTouchDown',
        'Input3D:unkonwn\x20event\x20type.',
        'onMouseDrag',
        'getTouch',
        '_textureCoordinate0',
        '_slices',
        '_stacks',
        '_radius',
        'indexCount',
        'UNSIGNED_SHORT',
        'TextureCubeFace',
        'PositiveX',
        'NegativeX',
        'NegativeY',
        'PositiveZ',
        'NegativeZ',
        '_wrapModeV',
        '_mipmap',
        '_setPixels',
        'blackTexture',
        '_blackTexture',
        '_grayTexture',
        'setSixSidePixels',
        'setSixSideImageSources',
        'LoaderManager',
        'createMap',
        'Utils',
        'getFilecompatibleExtension',
        'getFileExtension',
        '_getGLFormat',
        'UNPACK_ALIGNMENT',
        'TEXTURE_CUBE_MAP_NEGATIVE_Z',
        'TEXTURE_CUBE_MAP_POSITIVE_X',
        'TEXTURE_CUBE_MAP_NEGATIVE_X',
        'TEXTURE_CUBE_MAP_POSITIVE_Y',
        'TEXTURE_CUBE_MAP_NEGATIVE_Y',
        'pixelStorei',
        'TEXTURE_CUBE_MAP_POSITIVE_Z',
        'TextureCube:\x20image\x20Source\x20can\x27t\x20be\x20null.',
        'TextureCube:\x20each\x20side\x20image\x27s\x20width\x20and\x20height\x20must\x20same.',
        'setPremultiplyAlpha',
        'UNPACK_PREMULTIPLY_ALPHA_WEBGL',
        '_isPot',
        'TextureCube:pixels\x20can\x27t\x20be\x20null.',
        'TextureCube:pixels\x20length\x20should\x20at\x20least\x20',
        'setImageSource',
        'PositiveY',
        'TextureCube:\x20imageSource\x27s\x20width\x20and\x20height\x20must\x20same.',
        'TEXTURECUBE',
        'TEXTURECUBEBIN',
        'getBrightestLight',
        'normalLightOrdering',
        'u_Color',
        '_rotateExtents',
        'setCenterAndExtent',
        'getExtent',
        'createfromPoints',
        'points',
        'MAX_VALUE',
        'merge',
        '_updateFlag',
        '_center',
        '_extent',
        '_boundBox',
        '_setUpdateFlag',
        '_UPDATE_CENTER',
        '_UPDATE_EXTENT',
        '_UPDATE_MIN',
        'getMin',
        '_getMin',
        'setMax',
        '_UPDATE_MAX',
        '_getMax',
        'setCenter',
        '_getUpdateFlag',
        '_getCenter',
        'getMax',
        'setExtent',
        '_getExtent',
        'TEMP_VECTOR3_MAX0',
        'TEMP_VECTOR3_MAX1',
        '_destroyed',
        '_getType',
        'GeometryElement:must\x20override\x20it.',
        '_maxUpdate',
        '_floatBound',
        '_calculateBound',
        '_maxLineCount',
        '_lineCount',
        '_floatCountPerVertices',
        '_bounds',
        '_type',
        '_resizeLineData',
        '_updateLineVertices',
        '_minUpdate',
        'setMin',
        '_reCalculateBound',
        '_removeLineData',
        '_updateLineData',
        '_getLineData',
        'startPosition',
        'endPosition',
        'LINES',
        '_typeCounter',
        'SHADERDEFINE_RECEIVE_SHADOW',
        'SAHDERDEFINE_LIGHTMAP',
        'LIGHTMAP',
        'LIGHTMAP_DIRECTIONAL',
        '_addRenderObject',
        '_onActiveInScene',
        '_allotPickColorByID',
        '_pickIdToSprite',
        'PICKCOLOR',
        '_addToInitStaticBatchManager',
        '_setBelongScene',
        '_setUnBelongScene',
        '_destroy',
        'LIGHTMAPSCALEOFFSET',
        'u_LightmapScaleOffset',
        'u_LightMap',
        'LIGHTMAP_DIRECTION',
        'u_LightMapDirection',
        'REFLECTIONTEXTURE',
        'u_ReflectCubeHDRParams',
        'REFLECTIONCUBE_PROBEPOSITION',
        'u_SpecCubeProbePosition',
        'REFLECTIONCUBE_PROBEBOXMIN',
        'u_SpecCubeBoxMin',
        'batched',
        'instanceWorldMatrixData',
        'instanceWorldMatrixBuffer',
        'instanceSimpleAnimatorBuffer',
        'instanceSimpleAnimatorData',
        'instanceSimpleAnimatorDeclaration',
        'instanceSubMesh',
        'instanceBatchElementList',
        'savedRenderBatches',
        '_isFrontFaceInvert',
        'setTransform',
        'addToTransparentRenderQueue',
        'getFlag',
        '_getRenderQueue',
        'isTransparent',
        'addToOpaqueRenderQueue',
        'RENDERTYPE_INSTANCEBATCH',
        '_uploadRender',
        'RENDERTYPE_STATICBATCH',
        'RENDERTYPE_VERTEXBATCH',
        '_dynamicWorldPositionNormalNeedUpdate',
        '_computeWorldPositionsAndNormals',
        '_indices',
        'transformVector3ArrayToVector3ArrayCoordinate',
        '_dynamicWorldPositions',
        '_dynamicWorldNormals',
        '_onWorldMatrixChanged',
        'setGeometry',
        '_vertexCount',
        'maxAllowVertexCount',
        '_dynamicVertexBatch',
        '_dynamicVertexCount',
        '_dynamicMultiSubMesh',
        'staticBatch',
        '_probReflection',
        '_isScene',
        'getBatchOpaquaMark',
        'lightmapIndex',
        '_batchID',
        '_updateCountMark',
        'staticBatchElementList',
        'receiveShadow',
        '_getBatchRenderElementFromPool',
        'vertexBatchElementList',
        'vertexBatchVertexDeclaration',
        'MeshRenderStaticBatchManager',
        'lastTransparentRenderElement',
        'lastTransparentBatched',
        'MeshRenderDynamicBatchManager',
        'SubMeshRenderElement:\x20unknown\x20renderType',
        '_initBatchSprites',
        '_staticBatches',
        '_batchRenderElementPool',
        '_addToStaticBatchQueue',
        'numChildren',
        '_registerManager',
        '_managers',
        'combine',
        'StaticBatchManager:\x20Sprite\x20',
        '_partition',
        '_compare',
        '_initStaticBatchs',
        'StaticBatch:must\x20override\x20this\x20function.',
        '_batchRenderElementPoolIndex',
        '_garbageCollection',
        'StaticBatchManager:\x20must\x20override\x20it.',
        'dispose',
        '_batchIDCounter',
        '_batchElements',
        '_currentBatchVertexCount',
        '_getStaticBatchBakedVertexs',
        'getFloat32Data',
        '_tempMatrix4x41',
        '_tempMatrix4x42',
        'lightmapScaleOffset',
        'addTest',
        'meshFilter',
        'sharedMesh',
        '_isPartOfStaticBatch',
        '_staticBatch',
        '_currentBatchIndexCount',
        'vertexCount',
        'finishInit',
        'subMeshCount',
        'staticBatchIndexStart',
        'staticBatchIndexEnd',
        '_addGPUMemory',
        'batchOwner',
        'maxBatchVertexCount',
        '_opaqueBatchMarks',
        '_verDec',
        'sharedMaterial',
        '_getStaticBatch',
        '_removeRenderSprite',
        'ReflectionProbeMode',
        'simple',
        '_boxProjection',
        '_size',
        '_reflectionDecodeFormat',
        'TextureDecodeFormat',
        'boxProjection',
        'importance',
        '_importance',
        '_reflectionHDRParams',
        'RGBM',
        '_reflectionTexture',
        'reflectionTexture',
        'boundsMax',
        'boundsMin',
        'reflectionHDRParams',
        'TEMPVECTOR3',
        'boxOffset',
        'reflectionDecodingFormat',
        '_setIndexInReflectionList',
        '_indexInReflectProbList',
        '_getIndexInReflectionList',
        '_reflectionProbeManager',
        '_indexInCastShadowList',
        '_supportOctree',
        '_sharedMaterials',
        '_indexInOctreeMotionList',
        '_reflectionMode',
        '_onWorldMatNeedChange',
        '_lightmapIndex',
        '_lightmapScaleOffset',
        '_materialsInstance',
        '_getInstanceMaterial',
        'slice',
        'sharedMaterials',
        'BaseRender:\x20shadredMaterials\x20value\x20can\x27t\x20be\x20null.',
        '_isSupportReflection',
        '_boundsChange',
        '_calculateBoundingBox',
        '_receiveShadow',
        'castShadow',
        'isPartOfStaticBatch',
        'reflectionMode',
        '_getOctreeNode',
        '_octreeNode',
        '_setOctreeNode',
        'removeMotionObject',
        '(Instance)',
        '_changeMaterialReference',
        '_surportReflectionProbe',
        '_addReflectionProbeUpdate',
        '_applyLightMapParams',
        'lightmaps',
        'lightmapColor',
        'lightmapDirection',
        'SHADERDEFINE_LIGHTMAP_DIRECTIONAL',
        'addMotionObject',
        'BaseRender:\x20must\x20override\x20it.',
        '_OctreeNoRender',
        'markAsUnStatic',
        '_defaultLightmapScaleOffset',
        '_geometryFilter',
        '_tranform',
        '_isRenderActive',
        'PixelLineSprite3D:\x20lineCount\x20can\x27t\x20large\x20than\x20maxLineCount',
        'pixelLineRenderer',
        'spriteCount',
        '_removeRenderObject',
        '_isInRenders',
        '_changeRenderObjects',
        'defaultMaterial',
        'PixelLineSprite3D:\x20lineCount\x20has\x20equal\x20with\x20maxLineCount.',
        'addLines',
        'PixelLineSprite3D:\x20lineCount\x20plus\x20lines\x20count\x20must\x20less\x20than\x20maxLineCount.',
        '_updateLineDatas',
        'removeLine',
        'setLine',
        'getLine',
        '_partitionRenderObject',
        '_objects',
        'baseLength',
        '_setValues',
        '_encapsulates',
        '_looseness',
        '_getChildBound',
        '_tempBoundBox',
        '_getChildCenter',
        '_getChild',
        'BoundsOctreeNode:\x20unknown\x20index.',
        '_shouldMerge',
        '_NUM_OBJECTS_ALLOWED',
        '_mergeChildren',
        '_merge',
        '_minSize',
        '_bestFitChild',
        '_checkAddNode',
        '_remove',
        '_addUp',
        '_getCollidingWithFrustum',
        'octreeNodeCulling',
        '_isContaion',
        '_getCollidingWithCastShadowFrustum',
        '_getCollidingWithBoundBox',
        'hasAnyObjects',
        'getCollidingWithRay',
        'isCollidingWithBoundBox',
        'isCollidingWithRay',
        '_setIndexInMotionList',
        '_getIndexInMotionList',
        '_motionObjects',
        'Minimum\x20node\x20size\x20must\x20be\x20at\x20least\x20as\x20big\x20as\x20the\x20initial\x20world\x20size.\x20Was:\x20',
        '\x20Adjusted\x20to:\x20',
        '_initialSize',
        '_getMaxDepth',
        '_grow',
        'Aborted\x20Add\x20operation\x20as\x20it\x20seemed\x20to\x20be\x20going\x20on\x20forever\x20(',
        ')\x20attempts\x20at\x20growing\x20the\x20octree.',
        'getCollidingWithBoundBox',
        'getMaxBounds',
        'createFromSubPoints',
        'Must\x20be\x20in\x20the\x20range\x20<=\x20',
        'intersectsRayDistance',
        'ShadowLightType',
        'DirectionLight',
        'SpotLight',
        'PointLight',
        '_shadowBias',
        '_shadowMapSize',
        '_shadowSpotMapSize',
        '_shadowMatrices',
        '_maxCascades',
        '_shadowSpotMatrices',
        '_splitBoundSpheres',
        '_shadowMapWidth',
        '_shadowMapHeight',
        '_shadowSliceDatas',
        '_shadowSpotData',
        '_lightSide',
        '_setupShadowCasterShaderValues',
        'SHADOW_LIGHT_DIRECTION',
        '_setupShadowReceiverShaderValues',
        '_light',
        'SHADERDEFINE_SHADOW_CASCADE',
        'SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW',
        'SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH',
        'SHADOW_MAP',
        '_shadowDirectLightMap',
        'SHADOW_MATRICES',
        'SHADOW_PARAMS',
        'SHADOW_SPLIT_SPHERES',
        '_setupSpotShadowReceiverShaderValues',
        'SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH',
        'SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW',
        'SHADOW_SPOTMAP',
        '_shadowSpotLightMap',
        'SHADOW_SPOTMATRICES',
        '_lightUp',
        '_shadowCascadesMode',
        '_cascadeCount',
        '_frustumPlanes',
        '_shadowTwoCascadeSplits',
        '_shadowFourCascadeSplits',
        'applySliceTransform',
        '_shadowParams',
        '_lightForward',
        'cullSphere',
        'getTemporaryShadowTexture',
        'cullingSpotShadow',
        'u_ShadowBias',
        'u_ShadowMatrices',
        'SHADOW_MAP_SIZE',
        'u_ShadowMapSize',
        'u_ShadowMap',
        'u_ShadowParams',
        'u_SpotShadowMapSize',
        'u_SpotShadowMap',
        'u_SpotViewProjectMatrix',
        '_needUpdateAllRender',
        '_sceneReflectionProbe',
        'sceneReflectionProbe',
        'sceneReflectionCubeHDRParam',
        '_updateMotionObjects',
        '_reflectionProbes',
        'calculateBoundsintersection',
        'clearMotionObjects',
        'updateAllRenderObjects',
        'AmbientMode',
        'SphericalHarmonics',
        'Sprite',
        '_pointLights',
        '_lightmaps',
        '_time',
        '_ambientMode',
        '_ambientSphericalHarmonics',
        'Normal',
        '_reflectionIntensity',
        '_collsionTestList',
        '_scriptPool',
        'currentCreationLayer',
        'enableLight',
        '_key',
        'physicsSettings',
        'enableFog',
        'fogStart',
        'fogRange',
        'reflectionIntensity',
        'reflection',
        '_shCoefficients',
        '_reflectionCubeHDRParams',
        '_input',
        '_lightTexture',
        'SHADERDEFINE_FOG',
        'SHADERDEFINE_DIRECTIONLIGHT',
        'SHADERDEFINE_POINTLIGHT',
        'POINTLIGHT',
        'SHADERDEFINE_SPOTLIGHT',
        'SHADOW',
        'SHADOW_SOFT_SHADOW_LOW',
        'SHADOW_SOFT_SHADOW_HIGH',
        'GI_AMBIENT_SH',
        'SHADOW_SPOT',
        'SHADOW_SPOT_SOFT_SHADOW_LOW',
        'SHADOW_SPOT_SOFT_SHADOW_HIGH',
        'SHADERDEFINE_LEGACYSINGALLIGHTING',
        'CannonPhysicsSettings',
        'url',
        '_enableFog',
        'fogColor',
        'FOGCOLOR',
        'FOGSTART',
        'FOGRANGE',
        'ambientMode',
        'SHADERDEFINE_GI_AMBIENT_SH',
        'Scene3D:\x20unknown\x20ambientMode.',
        'AMBIENTCOLOR',
        'ambientColor',
        'ambientSphericalHarmonics',
        '_default',
        '_applySHCoefficients',
        '_ambientSphericalHarmonicsIntensity',
        'ambientSphericalHarmonicsIntensity',
        '_reflection',
        'cannonPhysicsSimulation',
        '_cannonPhysicsSimulation',
        '_timer',
        'input',
        'getCoefficient',
        'AMBIENTSHAR',
        'AMBIENTSHAB',
        'AMBIENTSHBR',
        'AMBIENTSHBG',
        'AMBIENTSHBB',
        'AMBIENTSHC',
        'PERFORMANCE_LAYA_3D',
        'TIME',
        'PERFORMANCE_LAYA_3D_PHYSICS',
        'disableSimulation',
        'PERFORMANCE_LAYA_3D_PHYSICS_SIMULATE',
        'PERFORMANCE_LAYA_3D_PHYSICS_CHARACTORCOLLISION',
        '_addUpdateList',
        '_updateCollisions',
        'PERFORMANCE_LAYA_3D_PHYSICS_EVENTSCRIPTS',
        '_eventScripts',
        '_updatePhysicsTransformFromRender',
        '_simulate',
        'PERFORMANCE_LAYA_3D_UPDATESCRIPT',
        '_clearScript',
        'VideoTexture',
        '_searchIDByPickColor',
        'onEnable',
        'onDisable',
        'canvas',
        '_setCreateURL',
        'formatURL',
        '_getGroup',
        '_group',
        '_setGroup',
        '_needClearScriptPool',
        '_indexInPool',
        '_tempScriptPool',
        'onUpdate',
        '_lateUpdateScript',
        'onLateUpdate',
        '_scene3Ds',
        '_prepareSceneToRender',
        '_lightPixles',
        '_mainDirectionLight',
        '_direction',
        'SUNLIGHTDIRCOLOR',
        'SUNLIGHTDIRECTION',
        '_mainSpotLight',
        'LIGHTBUFFER',
        'CLUSTERBUFFER',
        'LIGHTDIRCOLOR',
        'LIGHTDIRECTION',
        '_mainPointLight',
        'POINTLIGHTCOLOR',
        'POINTLIGHTPOS',
        'POINTLIGHTRANGE',
        'SPOTLIGHTCOLOR',
        'SPOTLIGHTDIRECTION',
        'SPOTLIGHTRANGE',
        '_addScript',
        'onPostRender',
        '_addCamera',
        '_binarySearchIndexInCameraPool',
        '_removeCamera',
        'STENCIL_BUFFER_BIT',
        'disable',
        'SCENERENDERFLAG_RENDERQPAQUE',
        'SkyBox',
        '_curSubmit',
        'SubmitBase',
        'RENDERBASE',
        'addRenderObject',
        'renderSubmit',
        'PERFORMANCE_LAYA_3D_RENDER',
        'set2DRenderConfig',
        'getRenderType',
        'releaseRender',
        'reUse',
        'customReflection',
        'setlightmaps',
        'getlightmaps',
        'HIERARCHY',
        'REFLECTIONMODE_CUSTOM',
        'u_FogStart',
        'u_FogRange',
        'DIRECTIONLIGHTCOUNT',
        'u_DirationLightCount',
        'u_LightBuffer',
        'u_LightClusterBuffer',
        'u_SunLight.color',
        'u_AmbientSHAr',
        'AMBIENTSHAG',
        'u_AmbientSHAg',
        'u_AmbientSHAb',
        'u_AmbientSHBr',
        'u_AmbientSHBg',
        'u_AmbientSHBb',
        'u_AmbientSHC',
        'u_DirectionLight.direction',
        'u_DirectionLight.color',
        'u_PointLight.position',
        'u_PointLight.range',
        'POINTLIGHTATTENUATION',
        'u_PointLight.color',
        'SPOTLIGHTPOS',
        'u_SpotLight.direction',
        'SPOTLIGHTSPOTANGLE',
        'u_SpotLight.spot',
        'u_SpotLight.range',
        'u_AmbientColor',
        'u_Time',
        '_configDefineValues',
        '_cacheSharders',
        '_cacheShaderHierarchy',
        '_renderState',
        '_tags',
        'defs',
        '_compileToTree',
        'ShaderNode',
        'text',
        'noCompile',
        'charAt',
        '#ifdef',
        '#ifndef',
        'match',
        'function():Boolean{return\x20',
        'IFDEF_YES',
        'IFDEF_ELSE',
        '#if',
        '#elif',
        'childs',
        'src',
        'condition',
        '_splitToWordExps3',
        'defined',
        '#else',
        'parent',
        'conditionType',
        '#endif',
        '#include',
        'splitToWords',
        'ShaderCompile\x20error\x20no\x20this\x20include\x20file:',
        'getWith',
        'with',
        'setCondition',
        '_resizeCacheShaderMap',
        '_addDebugShaderVariantCollection',
        '_debugShaderVariantInfo',
        '_debugDefineString',
        '_defineString',
        'WebGL',
        '#ifdef\x20GL_EXT_shader_texture_lod\x0a\x09\x09\x09\x09\x09#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable\x0a\x09\x09\x09\x09#endif\x0a\x09\x09\x09\x09#if\x20!defined(GL_EXT_shader_texture_lod)\x0a\x09\x09\x09\x09\x09#define\x20texture1DLodEXT\x20texture1D\x0a\x09\x09\x09\x09\x09#define\x20texture2DLodEXT\x20texture2D\x0a\x09\x09\x09\x09\x09#define\x20texture2DProjLodEXT\x20texture2DProj\x0a\x09\x09\x09\x09\x09#define\x20texture3DLodEXT\x20texture3D\x0a\x09\x09\x09\x09\x09#define\x20textureCubeLodEXT\x20textureCube\x0a\x09\x09\x09\x09#endif\x0a',
        '#define\x20MAX_LIGHT_COUNT\x20',
        '#define\x20CLUSTER_X_COUNT\x20',
        '#define\x20CLUSTER_Y_COUNT\x20',
        '#define\x20SHADER_CAPAILITY_LEVEL\x20',
        '_shaderCapailityLevel',
        '#define\x20',
        '_VS',
        '#version',
        '_PS',
        'toscript',
        '%cLayaAir:\x20Shader\x20Compile\x20Information---ShaderName:',
        '\x20SubShaderIndex:',
        'color:green',
        'setTag',
        'getTag',
        '_flags',
        'setFlag',
        'addShaderPass',
        'PBRSpecularSmoothnessSource',
        'SpecularTextureAlpha',
        'AlbedoTextureAlpha',
        'PBRSpecular',
        'SPECULARCOLOR',
        'SHADERDEFINE_SPECULARGLOSSTEXTURE',
        'SPECULARGLOSSTEXTURE',
        'SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA',
        'SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA',
        'RENDER_STATE_BLEND',
        '#include\x20\x22PBRVSInput.glsl\x22;\x0a#include\x20\x22Lighting.glsl\x22;\x0a#include\x20\x22PBRVertex.glsl\x22;\x0a\x0avoid\x20main()\x0a{\x0a\x09vertexForward();\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#define\x20SETUP_BRDF_INPUT\x20specularSetup\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22PBRFSInput.glsl\x22;\x0d\x0a#include\x20\x22LayaPBRBRDF.glsl\x22;\x0d\x0a#include\x20\x22GlobalIllumination.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#include\x20\x22PBRCore.glsl\x22;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09fragmentForward();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22ShadowCasterFS.glsl\x22\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_FragColor=shadowCasterFragment();\x0d\x0a}',
        'u_SpecGlossTexture',
        'u_SpecularColor',
        'PBRMetallicSmoothnessSource',
        'MetallicGlossTextureAlpha',
        '_smoothnessSource',
        'PBR',
        'METALLIC',
        'METALLICGLOSSTEXTURE',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#include\x20\x22PBRVSInput.glsl\x22;\x0d\x0a#include\x20\x22PBRVertex.glsl\x22;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vertexForward();\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#include\x20\x22ShadowCasterVS.glsl\x22\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20positionCS\x20=\x20\x20shadowCasterVertex();\x0a\x09gl_Position=remapGLPositionZ(positionCS);\x0a}',
        'metallicGlossTexture',
        'SHADERDEFINE_METALLICGLOSSTEXTURE',
        'metallic',
        'smoothnessSource',
        'u_MetallicGlossTexture',
        'u_Metallic',
        'tintColor',
        'exposure',
        'EXPOSURE',
        'ROTATION',
        'textureCube',
        'u_TintColor',
        'u_Rotation',
        'u_CubeTexture',
        'SkyBoxProcedural',
        'sunDisk',
        'SUN_HIGH_QUALITY',
        'sunSizeConvergence',
        'atmosphereThickness',
        'skyTint',
        'groundTint',
        'SHADERDEFINE_SUN_HIGH_QUALITY',
        'SHADERDEFINE_SUN_SIMPLE',
        'SUN_SIMPLE',
        'SUN_NODE',
        'SkyBoxProceduralMaterial:\x20unknown\x20sun\x20value.',
        'sunSize',
        'SUNSIZE',
        'SUNSIZECONVERGENCE',
        'SKYTINT',
        'GROUNDTINT',
        'u_SunSize',
        'ATMOSPHERETHICKNESS',
        'u_AtmosphereThickness',
        'u_GroundTint',
        'u_Exposure',
        'Unlit',
        '_albedoIntensity',
        'albedoColorR',
        '_AlbedoIntensity',
        'UnlitMaterial\x20:\x20renderMode\x20value\x20error.',
        'WAVESCALE',
        'WAVESPEED',
        'horizonColor',
        'HORIZONCOLOR',
        'mainTexture',
        'waveScale',
        'waveSpeed',
        'u_MainTexture',
        'u_WaveScale',
        '_createRenderElement',
        'getSubMesh',
        'intersects',
        'SHADERDEFINE_UV1',
        'REFLECTIONCUBE_HDR_PARAMS',
        'SHADERDEFINE_SPECCUBE_BOX_PROJECTION',
        'probePosition',
        '_revertStaticBatchDefineUV1',
        'SHADERDEFINE_GPU_INSTANCE',
        '_sharedMesh',
        '_getMeshDefine',
        '_meshVerticeDefine',
        '_onMeshChange',
        'SHADERDEFINE_COLOR',
        'POSITION,NORMAL,COLOR,UV,UV1,TANGENT',
        'maxIndicesCount',
        '_addMemory',
        '_getBatchVertices',
        '_positionOffset',
        '_normalOffset',
        '_colorOffset',
        '_uv0Offset',
        '_sTangentOffset',
        '_getBatchIndices',
        '_flush',
        '_getBufferState',
        '_uv1Offset',
        '_instanceBatchOpaqueMarks',
        '_vertexBatchOpaqueMarks',
        'getInstanceBatchOpaquaMark',
        'getVertexBatchOpaquaMark',
        '_cacheBufferStates',
        '_meshFilter',
        'SHADERDEFINE_UV0',
        'GPU_INSTANCE',
        'SPECCUBE_BOX_PROJECTION',
        'meshRenderer',
        'meshPath',
        'receiveShadows',
        'materials',
        '_addBatchSprite',
        'sortingFudge',
        'Blend',
        '_mode',
        '_maxColorRGBKeysCount',
        '_maxColorAlphaKeysCount',
        '_colorAlphaKeysCount',
        '_alphaElements',
        '_rgbElements',
        'mode',
        '_colorRGBKeysCount',
        'colorAlphaKeysCount',
        'maxColorAlphaKeysCount',
        'addColorRGB',
        'Gradient:warning:data\x20count\x20must\x20lessEqual\x20than\x20',
        'addColorAlpha',
        'updateColorRGB',
        'Gradient:warning:index\x20must\x20lessEqual\x20than\x20colorRGBKeysCount:',
        'updateColorAlpha',
        'Gradient:warning:index\x20must\x20lessEqual\x20than\x20colorAlphaKeysCount:',
        'evaluateColorRGB',
        'Fixed',
        'Gradient:wrong\x20startSearchIndex.',
        'Gradient:unknown\x20mode.',
        'evaluateColorAlpha',
        '_maxCount',
        'minCount',
        '_minCount',
        'maxCount',
        '_constant',
        '_constantMin',
        '_gradientMax',
        'createByGradient',
        '_gradient',
        '_constantMax',
        'createByRandomTwoGradient',
        '_gradientMin',
        'constant',
        'constantMin',
        'constantMax',
        'gradient',
        'gradientMin',
        'gradientMax',
        '_color',
        'createByConstant',
        '_overTime',
        '_overTimeMin',
        '_overTimeMax',
        'createByOverTime',
        'createByRandomTwoOverTime',
        'frameOverTimeData',
        'frameOverTimeDataMin',
        'frameOverTimeDataMax',
        '_separateAxes',
        '_constantSeparate',
        '_gradientX',
        '_gradientY',
        '_gradientZ',
        '_gradientW',
        '_constantMinSeparate',
        '_constantMaxSeparate',
        '_gradientXMin',
        '_gradientXMax',
        '_gradientYMax',
        '_gradientZMin',
        '_gradientWMin',
        '_gradientWMax',
        'createByConstantSeparate',
        'createByGradientSeparate',
        'createByRandomTwoConstant',
        'createByRandomTwoGradientSeparate',
        '_gradientYMin',
        '_gradientZMax',
        'separateAxes',
        'constantSeparate',
        'gradientX',
        'gradientY',
        'gradientZ',
        'gradientW',
        'constantMinSeparate',
        'constantMaxSeparate',
        'gradientXMin',
        'gradientYMax',
        'gradientZMin',
        'gradientZMax',
        'gradientWMax',
        '_currentLength',
        'gradientCount',
        'Warning:data\x20count\x20must\x20lessEqual\x20than\x204',
        'GradientDataNumber\x20warning:the\x20forth\x20key\x20is\x20\x20be\x20force\x20set\x20to\x201.',
        'getKeyByIndex',
        'getValueByIndex',
        'getAverageValue',
        'createByRandomTwoConstantSeparate',
        'gradientXMax',
        'gradientYMin',
        'getMaxSizeInGradient',
        '_angularVelocity',
        'angularVelocity',
        'gradientWMin',
        'ParticleSystemShapeType',
        'Box',
        'Circle',
        'Cone',
        'Hemisphere',
        'Sphere',
        'randomDirection',
        'BaseShape:\x20must\x20override\x20it.',
        '_getSpeedBoundBox',
        '_calculateProceduralBounds',
        '_getShapeBoundBox',
        'getFloat',
        'random',
        '_randomPointUnitArcCircle',
        '_randomPointUnitCircle',
        '_randomPointUnitSphere',
        '_randomPointInsideUnitSphere',
        'generatePositionAndDirection',
        '_randomPointInsideHalfUnitBox',
        'seed',
        'shapeType',
        'emitFromEdge',
        '_tempPositionPoint',
        'arc',
        '_randomPointInsideUnitArcCircle',
        'emitType',
        'angle',
        '_randomPointInsideUnitCircle',
        '_tempDirectionPoint',
        'ConeShape:emitType\x20is\x20invalid.',
        'emitFromShell',
        'randomRow',
        'rowIndex',
        'cycles',
        'enableUVChannels',
        'tiles',
        '_frame',
        'frame',
        'startFrame',
        '_startFrame',
        'space',
        '_velocity',
        'u_WorldPosition',
        'WORLDROTATION',
        'u_WorldRotation',
        'u_PositionScale',
        'SIZESCALE',
        'u_SizeScale',
        'u_ScalingMode',
        'GRAVITY',
        'u_Gravity',
        'THREEDSTARTROTATION',
        'u_ThreeDStartRotation',
        'STRETCHEDBILLBOARDLENGTHSCALE',
        'STRETCHEDBILLBOARDSPEEDSCALE',
        'u_StretchedBillboardSpeedScale',
        'SIMULATIONSPACE',
        'u_SimulationSpace',
        'VOLVELOCITYCONST',
        'VOLVELOCITYGRADIENTX',
        'u_VOLVelocityGradientX',
        'VOLVELOCITYGRADIENTY',
        'VOLVELOCITYGRADIENTZ',
        'u_VOLVelocityGradientZ',
        'VOLVELOCITYGRADIENTXMAX',
        'VOLVELOCITYGRADIENTYMAX',
        'u_VOLVelocityGradientMaxY',
        'VOLVELOCITYGRADIENTZMAX',
        'VOLSPACETYPE',
        'u_ColorOverLifeGradientAlphas',
        'COLOROVERLIFEGRADIENTCOLORS',
        'u_ColorOverLifeGradientColors',
        'MAXCOLOROVERLIFEGRADIENTALPHAS',
        'u_MaxColorOverLifeGradientAlphas',
        'MAXCOLOROVERLIFEGRADIENTCOLORS',
        'u_MaxColorOverLifeGradientColors',
        'SOLSIZEGRADIENT',
        'SOLSIZEGRADIENTX',
        'u_SOLSizeGradientX',
        'SOLSIZEGRADIENTY',
        'u_SOLSizeGradientY',
        'SOLSizeGradientZ',
        'u_SOLSizeGradientZ',
        'SOLSIZEGRADIENTXMAX',
        'u_SOLSizeGradientMaxY',
        'SOLSizeGradientZMAX',
        'ROLANGULARVELOCITYCONST',
        'u_ROLAngularVelocityConst',
        'ROLANGULARVELOCITYCONSTSEPRARATE',
        'u_ROLAngularVelocityConstSeprarate',
        'ROLANGULARVELOCITYGRADIENT',
        'u_ROLAngularVelocityGradient',
        'ROLANGULARVELOCITYGRADIENTX',
        'u_ROLAngularVelocityGradientX',
        'ROLANGULARVELOCITYGRADIENTZ',
        'ROLANGULARVELOCITYCONSTMAXSEPRARATE',
        'u_ROLAngularVelocityConstMaxSeprarate',
        'u_ROLAngularVelocityGradientMax',
        'ROLANGULARVELOCITYGRADIENTXMAX',
        'u_ROLAngularVelocityGradientMaxX',
        'ROLANGULARVELOCITYGRADIENTYMAX',
        'u_ROLAngularVelocityGradientMaxY',
        'ROLANGULARVELOCITYGRADIENTZMAX',
        'u_ROLAngularVelocityGradientMaxZ',
        'ROLANGULARVELOCITYGRADIENTWMAX',
        'u_ROLAngularVelocityGradientMaxW',
        'TEXTURESHEETANIMATIONCYCLES',
        'u_TSACycles',
        'TEXTURESHEETANIMATIONSUBUVLENGTH',
        'u_TSASubUVLength',
        'TEXTURESHEETANIMATIONGRADIENTUVS',
        'TEXTURESHEETANIMATIONGRADIENTMAXUVS',
        'u_TSAMaxGradientUVs',
        'PARTICLESHURIKEN',
        'RENDERMODE_ALPHABLENDED',
        'DIFFUSEMAP',
        'SHADERDEFINE_TINTCOLOR',
        'ShurikenParticleMaterial\x20:\x20renderMode\x20value\x20error.',
        'DIFFUSETEXTURE',
        'u_texture',
        'u_Tintcolor',
        'setColliderCollision',
        'getIColliderCollision',
        'COLLISIONFILTERGROUP_DEFAULTFILTER',
        'COLLISIONFILTERGROUP_STATICFILTER',
        'COLLISIONFILTERGROUP_KINEMATICFILTER',
        'COLLISIONFILTERGROUP_DEBRISFILTER',
        'COLLISIONFILTERGROUP_CUSTOMFILTER1',
        'COLLISIONFILTERGROUP_CUSTOMFILTER3',
        'COLLISIONFILTERGROUP_CUSTOMFILTER4',
        'COLLISIONFILTERGROUP_CUSTOMFILTER5',
        'COLLISIONFILTERGROUP_CUSTOMFILTER7',
        'COLLISIONFILTERGROUP_CUSTOMFILTER8',
        'COLLISIONFILTERGROUP_CUSTOMFILTER9',
        'COLLISIONFILTERGROUP_ALLFILTER',
        'gravity',
        '_finalGravity',
        'stretchedBillboardCameraSpeedScale',
        'stretchedBillboardSpeedScale',
        'stretchedBillboardLengthScale',
        '_renderMode',
        'SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD',
        'SHADERDEFINE_RENDERMODE_MESH',
        'SHADERDEFINE_RENDERMODE_BILLBOARD',
        'SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD',
        'SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD',
        'ShurikenParticleRender:\x20unknown\x20renderMode\x20Value.',
        'particleSystem',
        '_initBufferDatas',
        '_useCustomBounds',
        'customBounds',
        '_simulationSupported',
        'gravityModifier',
        'isAlive',
        'simulationSpace',
        'WORLDPOSITION',
        'scaleMode',
        'POSITIONSCALE',
        'threeDStartRotation',
        'SCALINGMODE',
        'CURRENTTIME',
        '_currentTime',
        'PARTICLE_CORNERTEXTURECOORDINATE0',
        'PARTICLE_POSITION0',
        'PARTICLE_COLOR0',
        'PARTICLE_TEXTURECOORDINATE0',
        'PARTICLE_DIRECTIONTIME',
        'PARTICLE_STARTCOLOR0',
        'PARTICLE_STARTROTATION',
        'PARTICLE_RANDOM1',
        'PARTICLE_SIMULATIONWORLDPOSTION',
        'PARTICLE_SIMULATIONWORLDROTATION',
        '_cornerTextureCoordinate',
        '_positionStartLifeTime',
        '_startRotation0',
        '_startRotation1',
        '_startRotation2',
        '_startSpeed',
        '_randoms1',
        '_simulationWorldPostion',
        'PARTICLE_STARTSIZE',
        'PARTICLE_STARTSPEED',
        'PARTICLE_RANDOM0',
        'cornerTextureCoordinate',
        'velocity',
        '_startSize',
        'startRotation0',
        'startRotation1',
        '_startLifeTime',
        'startSpeed',
        '_randoms0',
        'PARTICLE_SHAPEPOSITIONSTARTLIFETIME',
        '_startColor',
        'startRotation2',
        'startLifeTime',
        'random1',
        'seeds',
        'getFloatFromInt',
        'getByteFromInt',
        'getUint',
        '_temp',
        'getSignedFloat',
        '_emissionRate',
        '_bursts',
        'emissionRate',
        'getBurstsCount',
        'getBurstByIndex',
        'addBurst',
        'removeBurst',
        'MathUtil',
        '_randomInvertRoationArray',
        '_randomInvertRoation',
        'autoRandomSeed',
        '_rand',
        '_randomSeeds',
        'startColorType',
        'startColorConstant',
        'startColor',
        'startColorConstantMin',
        'startColorConstantMax',
        'colorOverLifetime',
        'startSize',
        'startSizeType',
        'startSizeConstantSeparate',
        'startSizeConstant',
        'threeDStartSize',
        'startSizeConstantMaxSeparate',
        'startSizeConstantMin',
        'startSizeConstantMax',
        'sizeOverLifetime',
        'startRotationType',
        'startRotationConstantSeparate',
        'randomizeRotationDirection',
        'startRotation',
        'startRotationConstant',
        'startRotationConstantMinSeparate',
        'startRotationConstantMax',
        'startRotationConstantMin',
        'startLifetimeType',
        '_getStartLifetimeFromGradient',
        'startLifeTimeGradient',
        'startLifetimeConstantMin',
        'startLifetimeConstantMax',
        'emissionTime',
        'startLifeTimeGradientMin',
        'startLifeTimeGradientMax',
        'startUVInfo',
        '_boundingSphere',
        '_boundingBoxCorners',
        '_gravityOffset',
        '_customBounds',
        '_ownerRender',
        '_floatCountPerVertex',
        '_startLifeTimeIndex',
        '_timeIndex',
        '_simulateUpdate',
        '_firstActiveElement',
        '_firstNewElement',
        '_firstFreeElement',
        '_firstRetiredElement',
        '_drawCounter',
        '_bufferMaxParticles',
        '_emission',
        '_isEmitting',
        '_isPlaying',
        '_playStartDelay',
        '_emissionTime',
        '_totalDelayTime',
        '_burstsIndex',
        '_textureSheetAnimation',
        '_startLifetimeType',
        '_startLifetimeConstant',
        '_startLifeTimeGradientMin',
        '_uvLength',
        '_updateMask',
        '_startUpdateLoopCount',
        'looping',
        'startDelayType',
        'startDelay',
        'startDelayMax',
        'startSpeedConstant',
        'startSpeedConstantMin',
        'startSpeedConstantMax',
        'startSizeConstantMinSeparate',
        'startRotationConstantMaxSeparate',
        'playOnAwake',
        'randomSeed',
        'isPerformanceMode',
        '_boundingBox',
        '_frameRateTime',
        'prewarm',
        'startDelayMin',
        '_startLifeTimeGradient',
        '_startLifetimeConstantMin',
        '_startLifeTimeGradientMax',
        '_RANDOMOFFSET',
        'maxParticles',
        'aliveParticleCount',
        'shape',
        '_shape',
        'SHADERDEFINE_SHAPE',
        'isEmitting',
        '_isPaused',
        '_maxStartLifetime',
        'startLifetimeConstant',
        '_startLifetimeConstantMax',
        'velocityOverLifetime',
        '_velocityOverLifetime',
        'SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT',
        'SHADERDEFINE_VELOCITYOVERLIFETIMECURVE',
        'SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT',
        'SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE',
        '_colorOverLifetime',
        'SHADERDEFINE_RANDOMCOLOROVERLIFETIME',
        'SHADERDEFINE_COLOROVERLIFETIME',
        'COLOROVERLIFEGRADIENTALPHAS',
        'SHADERDEFINE_SIZEOVERLIFETIMECURVE',
        'SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE',
        'SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES',
        'SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE',
        'SOLSizeGradientMax',
        '_rotationOverLifetime',
        'rotationOverLifetime',
        'SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE',
        'SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT',
        'SHADERDEFINE_ROTATIONOVERLIFETIMECURVE',
        'SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS',
        'SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES',
        'ROLANGULARVELOCITYGRADIENTY',
        'ROLANGULARVELOCITYCONSTMAX',
        'SHADERDEFINE_ROTATIONOVERLIFETIME',
        'textureSheetAnimation',
        'SHADERDEFINE_TEXTURESHEETANIMATIONCURVE',
        'SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE',
        '_getVertexBuffer',
        'particleRenderer',
        'halfKSqrtOf2',
        '_updateEmission',
        '_maxElapsedTime',
        '_updateParticles',
        '_retireActiveParticles',
        '_freeRetiredParticles',
        '_advanceTime',
        '_updateParticlesSimulationRestart',
        '_burst',
        'stop',
        'emit',
        '_indexStride',
        '_sizeOverLifetime',
        '_tempPosition',
        '_tempDirection',
        'addParticle',
        'startSpeedType',
        'addNewParticlesToVertexBuffer',
        'Utils3D:\x20startDelayType\x20is\x20invalid.',
        'pause',
        '_particleSystem',
        'STRETCHEDBILLBOARD',
        'HORIZONTALBILLBOARD',
        'COLOROVERLIFETIME',
        'RANDOMCOLOROVERLIFETIME',
        'VELOCITYOVERLIFETIMECURVE',
        'VELOCITYOVERLIFETIMERANDOMCONSTANT',
        'VELOCITYOVERLIFETIMERANDOMCURVE',
        'ROTATIONOVERLIFETIME',
        'ROTATIONOVERLIFETIMESEPERATE',
        'ROTATIONOVERLIFETIMECONSTANT',
        'ROTATIONOVERLIFETIMECURVE',
        'ROTATIONOVERLIFETIMERANDOMCONSTANTS',
        'ROTATIONOVERLIFETIMERANDOMCURVES',
        'SIZEOVERLIFETIMECURVESEPERATE',
        'SIZEOVERLIFETIMERANDOMCURVESSEPERATE',
        '_parseModule',
        'bases',
        'vector2s',
        'vector3s',
        'vector4s',
        'gradientDataNumbers',
        'resources',
        'bursts',
        'ShurikenParticle3D:unknown\x20type.',
        'main',
        'emission',
        'ShuriKenParticle3D:unknown\x20shape\x20type.',
        '_initParticleVelocity',
        '_initParticleColor',
        '_initParticleSize',
        '_initParticleRotation',
        '_initParticleFrame',
        'overTime',
        'overTimeMin',
        'overTimeMax',
        '_activeHierarchy',
        '_initStartLife',
        'startLifetimeGradientMax',
        'simulationSpeed',
        'sphereRadius',
        'sphereRandomDirection',
        'hemiSphereRadius',
        'hemiSphereEmitFromShell',
        'hemiSphereRandomDirection',
        'coneRadius',
        'coneRandomDirection',
        'boxZ',
        'circleArc',
        'circleRandomDirection',
        'circleRadius',
        'circleEmitFromEdge',
        'GradientDataColor\x20warning:alpha\x20data\x20length\x20is\x20large\x20than\x204,\x20will\x20ignore\x20the\x20middle\x20data.',
        'key',
        'GradientDataColor\x20warning:rgb\x20data\x20length\x20is\x20large\x20than\x204,\x20will\x20ignore\x20the\x20middle\x20data.',
        'frames',
        'angularVelocitys',
        '_bones',
        '_skinnedDataLoopMarks',
        '_localBounds',
        '_cacheAnimationNode',
        'localBounds',
        'rootBone',
        '_cacheRootBone',
        'bones',
        '_computeSkinnedData',
        '_cacheMesh',
        '_cacheAvatar',
        '_skinnedMatrixCaches',
        '_boneIndicesList',
        '_skinnedData',
        '_computeSubSkinnedData',
        'subMeshIndex',
        'batchIndex',
        '_inverseBindPoses',
        '_getCacheAnimationNodes',
        '_setCacheAnimator',
        '_cacheAnimator',
        'SHADERDEFINE_BONE',
        '_setRootNode',
        'defaultTextureHDRDecodeValues',
        '_rootBone',
        '_cacheRootAnimationNode',
        '_boneNames',
        '_setCacheAvatar',
        'BONE',
        'SIMPLEBONE',
        'skinnedMeshRenderer',
        'boundBox',
        '_tempArray0',
        'u_Bones',
        'SIMPLE_SIMPLEANIMATORPARAMS',
        'SIMPLE_SIMPLEANIMATORTEXTURESIZE',
        'u_SimpleAnimatorTextureSize',
        'Trail',
        'TrailMaterial\x20:\x20renderMode\x20value\x20error.',
        'u_MainColor',
        'TrailAlignment',
        'View',
        'TransformZ',
        'vertexDeclaration1',
        '_vertexDeclaration1',
        'vertexDeclaration2',
        '_vertexDeclaration2',
        'TRAIL_POSITION0',
        'TRAIL_OFFSETVECTOR',
        'TRAIL_TIME0',
        'TRAIL_TEXTURECOORDINATE0Y',
        'TRAIL_TEXTURECOORDINATE0X',
        'TRAIL_COLOR',
        '_floatCountPerVertices1',
        '_floatCountPerVertices2',
        '_increaseSegementCount',
        '_activeIndex',
        '_endIndex',
        '_isTempEndVertex',
        '_vertices1',
        '_vertices2',
        'tmpColor',
        '_disappearBoundsMode',
        '_segementCount',
        'trailRenderer',
        '_vertexBuffer1',
        '_vertexBuffer2',
        '_resizeData',
        '_subBirthTime',
        '_updateTrail',
        '_addTrailByFirstPosition',
        '_addTrailByNextPosition',
        '_resetData',
        '_subDistance',
        '_curtime',
        '_lastFixedVertexPosition',
        '_needAddFirstVertex',
        'alignment',
        '_updateVerticesByPositionData',
        'minVertexDistance',
        '_totalLength',
        '_updateVerticesByPosition',
        '_updateVertexBufferUV',
        'colorGradient',
        'colorRGBKeysCount',
        'textureMode',
        'Stretch',
        '_updateDisappear',
        'fill',
        'ALIGNMENT_VIEW',
        'ALIGNMENT_TRANSFORM_Z',
        'addRenderElement',
        'LIFETIME',
        '_minVertexDistance',
        'widthMultiplier',
        'widthCurve',
        'WIDTHCURVE',
        'WIDTHCURVEKEYLENGTH',
        '_colorGradient',
        '_textureMode',
        '_trialGeometry',
        '_lastPosition',
        'WHITE',
        '_widthCurve',
        'u_LifeTime',
        'u_WidthCurve',
        'u_WidthCurveKeyLength',
        'trailFilter',
        'colorKeys',
        'alphaKeys',
        'maxColorRGBKeysCount',
        '_normal',
        '_textureCoord0',
        '_textureCoord1',
        'TERRAIN_POSITION0',
        'TERRAIN_NORMAL0',
        'TERRAIN_TEXTURECOORDINATE1',
        'textureCoord0',
        '_subIndexBufferStart',
        '_subIndexBufferCount',
        '_setIndexRange',
        'indexFormat',
        'supportElementIndexUint32',
        'UNSIGNED_INT',
        '_indexInMesh',
        'BONES',
        'SubMesh:this\x20device\x20do\x20not\x20support\x20IndexFormat.UInt32.',
        'getIndices',
        '_isReadable',
        '_maxVerticesUpdate',
        '_instanceBufferStateType',
        '_indexFormat',
        '_nativeTempVector31',
        'btVector3_create',
        'MESH',
        'inverseAbsoluteBindPoses',
        '_getPositionElement',
        '_elementFormat',
        '_getVerticeElementData',
        'getUint8Data',
        'Mesh:Unknown\x20elementUsage.',
        'Mesh:\x20the\x20mesh\x20don\x27t\x20have\x20\x20this\x20VertexElement.',
        '_btTriangleMesh',
        'btStridingMeshInterface_destroy',
        '_setCPUMemory',
        '_setSubMeshes',
        '_setBuffer',
        'btTriangleMesh_create',
        '_nativeTempVector30',
        'btTriangleMesh_addTriangle',
        '_minVerticesUpdate',
        'getPositions',
        'Mesh:can\x27t\x20get\x20positions\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        '_setVerticeElementData',
        '_needUpdateBounds',
        'Mesh:can\x27t\x20get\x20colors\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setColors',
        'Mesh:setColors()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'Mesh:can\x27t\x20get\x20uvs\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'Mesh:Invalid\x20channel.',
        'Mesh:setUVs()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'getNormals',
        'Mesh:setNormals()\x20need\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'setTangents',
        'Mesh:setTangents()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'getBoneWeights',
        'Mesh:can\x27t\x20get\x20boneWeights\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'Mesh:can\x27t\x20get\x20boneIndices\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'getVertices',
        'Mesh:can\x27t\x20get\x20indices\x20on\x20subMesh,mesh\x27s\x20isReadable\x20must\x20be\x20true.',
        'Mesh:can\x27t\x20calculate\x20bounds\x20on\x20subMesh,mesh\x27s\x20isReadable\x20must\x20be\x20true.',
        'bufferUsage',
        'cpuMemory',
        'gpuMemory',
        'batchBoneIndex',
        'MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR',
        '_createMesh',
        'calculateBounds',
        'createBox',
        'createCapsule',
        'POSITION,NORMAL,UV',
        'createCone',
        'createFromAxisAngle',
        'createCylinder',
        'createPlane',
        'createQuad',
        'createSphere',
        '#include\x20\x22Lighting.glsl\x22;\x0d\x0a#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0aattribute\x20vec4\x20a_PositionTexcoord;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09gl_Position\x20=\x20vec4(a_PositionTexcoord.xy,\x200.0,\x201.0);\x0d\x0a\x09v_Texcoord0\x20=\x20a_PositionTexcoord.zw;\x0d\x0a\x09gl_Position\x20=\x20remapGLPositionZ(gl_Position);\x0d\x0a}',
        'LEGACYSINGLELIGHTING',
        'SHADERDEFINE_GRAPHICS_API_GLES2',
        'GRAPHICS_API_GLES2',
        'SHADERDEFINE_GRAPHICS_API_GLES3',
        'Lighting.glsl',
        '#ifdef\x20GRAPHICS_API_GLES3\x0d\x0a\x09#define\x20INVERSE_MAT(mat)\x20inverse(mat)\x0d\x0a#else\x0d\x0a\x09#define\x20INVERSE_MAT(mat)\x20inverseMat(mat)\x0d\x0a#endif\x0d\x0a\x0d\x0astruct\x20DirectionLight\x20{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20direction;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20PointLight\x20{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20position;\x0d\x0a\x09float\x20range;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20SpotLight\x20{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20position;\x0d\x0a\x09float\x20range;\x0d\x0a\x09vec3\x20direction;\x0d\x0a\x09float\x20spot;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20LayaGI{\x0d\x0a\x09vec3\x20diffuse;\x0d\x0a\x09vec3\x20specular;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20LayaLight{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20dir;\x0d\x0a};\x0d\x0a\x0d\x0aconst\x20int\x20c_ClusterBufferWidth\x20=\x20CLUSTER_X_COUNT*CLUSTER_Y_COUNT;\x0d\x0aconst\x20int\x20c_ClusterBufferHeight\x20=\x20CLUSTER_Z_COUNT*(1+int(ceil(float(MAX_LIGHT_COUNT_PER_CLUSTER)/4.0)));\x0d\x0aconst\x20int\x20c_ClusterBufferFloatWidth\x20=\x20c_ClusterBufferWidth*4;\x0d\x0a\x0d\x0a#ifndef\x20GRAPHICS_API_GLES3\x0d\x0a\x09mat3\x20inverseMat(mat3\x20m)\x20{\x0d\x0a\x09\x09float\x20a00\x20=\x20m[0][0],\x20a01\x20=\x20m[0][1],\x20a02\x20=\x20m[0][2];\x0d\x0a\x09\x09float\x20a10\x20=\x20m[1][0],\x20a11\x20=\x20m[1][1],\x20a12\x20=\x20m[1][2];\x0d\x0a\x09\x09float\x20a20\x20=\x20m[2][0],\x20a21\x20=\x20m[2][1],\x20a22\x20=\x20m[2][2];\x0d\x0a\x0d\x0a\x09\x09float\x20b01\x20=\x20a22\x20*\x20a11\x20-\x20a12\x20*\x20a21;\x0d\x0a\x09\x09float\x20b11\x20=\x20-a22\x20*\x20a10\x20+\x20a12\x20*\x20a20;\x0d\x0a\x09\x09float\x20b21\x20=\x20a21\x20*\x20a10\x20-\x20a11\x20*\x20a20;\x0d\x0a\x0d\x0a\x09\x09float\x20det\x20=\x20a00\x20*\x20b01\x20+\x20a01\x20*\x20b11\x20+\x20a02\x20*\x20b21;\x0d\x0a\x0d\x0a\x09\x09return\x20mat3(b01,\x20(-a22\x20*\x20a01\x20+\x20a02\x20*\x20a21),\x20(a12\x20*\x20a01\x20-\x20a02\x20*\x20a11),\x0d\x0a\x09\x09\x09\x09\x09b11,\x20(a22\x20*\x20a00\x20-\x20a02\x20*\x20a20),\x20(-a12\x20*\x20a00\x20+\x20a02\x20*\x20a10),\x0d\x0a\x09\x09\x09\x09\x09b21,\x20(-a21\x20*\x20a00\x20+\x20a01\x20*\x20a20),\x20(a11\x20*\x20a00\x20-\x20a01\x20*\x20a10))\x20/\x20det;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20THICKNESSMAP\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_ThinknessTexture;\x0d\x0a\x09#endif\x0d\x0a#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09uniform\x20float\x20u_TransmissionRate;\x0d\x0a\x09uniform\x20float\x20u_BackDiffuse;\x0d\x0a\x09uniform\x20float\x20u_BackScale;\x0d\x0a\x09uniform\x20vec4\x20u_TransmissionColor;\x0d\x0a\x0d\x0a\x0d\x0a\x09vec3\x20SubSurfaceIBack(vec3\x20lightDir,vec3\x20viewDir,float\x20thinknessFactor){\x0d\x0a\x09\x09vec3\x20H\x20=\x20normalize(lightDir);\x0d\x0a\x09\x09float\x20VdotH\x20=\x20pow(clamp(dot(viewDir,H),0.0,1.0),u_BackDiffuse)*u_BackScale;\x0d\x0a\x09\x09vec3\x20I;\x0d\x0a\x09\x09#ifdef\x20THICKNESSMAP\x0d\x0a\x09\x09\x09I\x20=\x20u_TransmissionColor.rgb*VdotH*thinknessFactor;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09I\x20=\x20u_TransmissionColor.rgb*VdotH;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09return\x20I;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0aivec4\x20getClusterInfo(sampler2D\x20clusterBuffer,mat4\x20viewMatrix,vec4\x20viewport,vec3\x20position,vec4\x20fragCoord,vec4\x20projectParams)\x0d\x0a{\x0d\x0a\x09vec3\x20viewPos\x20=\x20vec3(viewMatrix*vec4(position,\x201.0));\x20//position\x20in\x20viewspace\x0d\x0a\x0d\x0a\x09int\x20clusterXIndex\x20=\x20int(floor(fragCoord.x/\x20(float(viewport.z)/float(CLUSTER_X_COUNT))));\x0d\x0a\x20\x20\x20\x20int\x20clusterYIndex\x20=\x20int(floor((viewport.w\x20*\x20(projectParams.z\x20<0.0?\x200.0\x20:\x201.0)\x20-\x20fragCoord.y\x20*\x20projectParams.z)/\x20(float(viewport.w)/float(CLUSTER_Y_COUNT))));//Maybe\x20Flipped\x20ProjectMatrix\x0d\x0a\x09float\x20zSliceParam\x20=float(CLUSTER_Z_COUNT)/log2(projectParams.y\x20/\x20projectParams.x);\x0d\x0a\x20\x09int\x20clusterZIndex\x20=\x20int(floor(log2(-viewPos.z)\x20*\x20zSliceParam-\x20log2(projectParams.x)\x20*\x20zSliceParam));//projectParams\x20x:cameraNear\x20y:cameraFar\x0d\x0a\x0d\x0a\x09vec2\x20uv=\x20vec2((float(clusterXIndex\x20+\x20clusterYIndex\x20*\x20CLUSTER_X_COUNT)+0.5)/float(c_ClusterBufferWidth),\x0d\x0a\x09\x09\x09\x09(float(clusterZIndex)+0.5)/float(c_ClusterBufferHeight));\x0d\x0a\x09vec4\x20clusterPixel=texture2D(clusterBuffer,\x20uv);\x0d\x0a\x09return\x20ivec4(clusterPixel);//X:Point\x20Count\x20Y:Spot\x20Count\x20Z、W:Light\x20Offset\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0aint\x20getLightIndex(sampler2D\x20clusterBuffer,int\x20offset,int\x20index)\x20\x0d\x0a{\x0d\x0a\x09int\x20totalOffset=offset+index;\x0d\x0a\x09int\x20row=totalOffset/c_ClusterBufferFloatWidth;\x0d\x0a\x09int\x20lastRowFloat=totalOffset-row*c_ClusterBufferFloatWidth;\x0d\x0a\x09int\x20col=lastRowFloat/4;\x0d\x0a\x09vec2\x20uv=vec2((float(col)+0.5)/float(c_ClusterBufferWidth),\x0d\x0a\x09\x09\x09\x09(float(row)+0.5)/float(c_ClusterBufferHeight));\x0d\x0a\x09vec4\x20texel\x20=\x20texture2D(clusterBuffer,\x20uv);\x0d\x0a\x20\x20\x20\x20int\x20pixelComponent\x20=\x20lastRowFloat-col*4;\x0d\x0a\x20\x20\x20\x20if\x20(pixelComponent\x20==\x200)\x20\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.x);\x0d\x0a\x20\x20\x20\x20else\x20if\x20(pixelComponent\x20==\x201)\x20\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.y);\x0d\x0a\x20\x20\x20\x20else\x20if\x20(pixelComponent\x20==\x202)\x20\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.z);\x0d\x0a\x20\x20\x20\x20else\x20//pixelComponent==3\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.w);\x0d\x0a}\x0d\x0a\x0d\x0aDirectionLight\x20getDirectionLight(sampler2D\x20lightBuffer,int\x20index)\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20DirectionLight\x20light;\x0d\x0a\x20\x20\x20\x20float\x20v\x20=\x20(float(index)+0.5)/\x20float(MAX_LIGHT_COUNT);\x0d\x0a\x20\x20\x20\x20vec4\x20p1\x20=\x20texture2D(lightBuffer,\x20vec2(0.125,v));\x0d\x0a\x20\x20\x20\x20vec4\x20p2\x20=\x20texture2D(lightBuffer,\x20vec2(0.375,v));\x0d\x0a\x09light.color=p1.rgb;\x0d\x0a\x20\x20\x20\x20light.direction\x20=\x20p2.rgb;\x0d\x0a\x20\x20\x20\x20return\x20light;\x0d\x0a}\x0d\x0a\x0d\x0aPointLight\x20getPointLight(sampler2D\x20lightBuffer,sampler2D\x20clusterBuffer,ivec4\x20clusterInfo,int\x20index)\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20PointLight\x20light;\x0d\x0a\x09int\x20pointIndex=getLightIndex(clusterBuffer,clusterInfo.z*c_ClusterBufferFloatWidth+clusterInfo.w,index);\x0d\x0a\x20\x20\x20\x20float\x20v\x20=\x20(float(pointIndex)+0.5)/\x20float(MAX_LIGHT_COUNT);\x0d\x0a\x20\x20\x20\x20vec4\x20p1\x20=\x20texture2D(lightBuffer,\x20vec2(0.125,v));\x0d\x0a\x20\x20\x20\x20vec4\x20p2\x20=\x20texture2D(lightBuffer,\x20vec2(0.375,v));\x0d\x0a\x09light.color=p1.rgb;\x0d\x0a\x09light.range\x20=\x20p1.a;\x0d\x0a\x20\x20\x20\x20light.position\x20=\x20p2.rgb;\x0d\x0a\x20\x20\x20\x20return\x20light;\x0d\x0a}\x0d\x0a\x0d\x0aSpotLight\x20getSpotLight(sampler2D\x20lightBuffer,sampler2D\x20clusterBuffer,ivec4\x20clusterInfo,int\x20index)\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20SpotLight\x20light;\x0d\x0a\x09int\x20spoIndex=getLightIndex(clusterBuffer,clusterInfo.z*c_ClusterBufferFloatWidth+clusterInfo.w,clusterInfo.x+index);\x0d\x0a\x20\x20\x20\x20float\x20v\x20=\x20(float(spoIndex)+0.5)/\x20float(MAX_LIGHT_COUNT);\x0d\x0a\x20\x20\x20\x20vec4\x20p1\x20=\x20texture2D(lightBuffer,\x20vec2(0.125,v));\x0d\x0a\x20\x20\x20\x20vec4\x20p2\x20=\x20texture2D(lightBuffer,\x20vec2(0.375,v));\x0d\x0a\x09vec4\x20p3\x20=\x20texture2D(lightBuffer,\x20vec2(0.625,v));\x0d\x0a\x20\x20\x20\x20light.color\x20=\x20p1.rgb;\x0d\x0a\x09light.range=p1.a;\x0d\x0a\x20\x20\x20\x20light.position\x20=\x20p2.rgb;\x0d\x0a\x09light.spot\x20=\x20p2.a;\x0d\x0a\x09light.direction\x20=\x20p3.rgb;\x0d\x0a\x20\x20\x20\x20return\x20light;\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Laya中使用衰减纹理\x0d\x0afloat\x20LayaAttenuation(in\x20vec3\x20L,in\x20float\x20invLightRadius)\x20{\x0d\x0a\x09float\x20fRatio\x20=\x20clamp(length(L)\x20*\x20invLightRadius,0.0,1.0);\x0d\x0a\x09fRatio\x20*=\x20fRatio;\x0d\x0a\x09return\x201.0\x20/\x20(1.0\x20+\x2025.0\x20*\x20fRatio)*\x20clamp(4.0*(1.0\x20-\x20fRatio),0.0,1.0);\x20//fade\x20to\x20black\x20as\x20if\x204\x20pixel\x20texture\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Same\x20as\x20Just\x20Cause\x202\x20and\x20Crysis\x202\x20(you\x20can\x20read\x20GPU\x20Pro\x201\x20book\x20for\x20more\x20information)\x0d\x0afloat\x20BasicAttenuation(in\x20vec3\x20L,in\x20float\x20invLightRadius)\x20{\x0d\x0a\x09vec3\x20distance\x20=\x20L\x20*\x20invLightRadius;\x0d\x0a\x09float\x20attenuation\x20=\x20clamp(1.0\x20-\x20dot(distance,\x20distance),0.0,1.0);\x20//\x20Equals\x20float\x20attenuation\x20=\x20saturate(1.0f\x20-\x20dot(L,\x20L)\x20/\x20(lightRadius\x20*\x20\x20lightRadius));\x0d\x0a\x09return\x20attenuation\x20*\x20attenuation;\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Inspired\x20on\x20http://fools.slindev.com/viewtopic.php?f=11&t=21&view=unread#unread\x0d\x0afloat\x20NaturalAttenuation(in\x20vec3\x20L,in\x20float\x20invLightRadius)\x20{\x0d\x0a\x09float\x20attenuationFactor\x20=\x2030.0;\x0d\x0a\x09vec3\x20distance\x20=\x20L\x20*\x20invLightRadius;\x0d\x0a\x09float\x20attenuation\x20=\x20dot(distance,\x20distance);\x20//\x20Equals\x20float\x20attenuation\x20=\x20dot(L,\x20L)\x20/\x20(lightRadius\x20*\x20\x20lightRadius);\x0d\x0a\x09attenuation\x20=\x201.0\x20/\x20(attenuation\x20*\x20attenuationFactor\x20+\x201.0);\x0d\x0a\x09//\x20Second\x20we\x20move\x20down\x20the\x20function\x20therewith\x20it\x20reaches\x20zero\x20at\x20abscissa\x201:\x0d\x0a\x09attenuationFactor\x20=\x201.0\x20/\x20(attenuationFactor\x20+\x201.0);\x20//attenuationFactor\x20contains\x20now\x20the\x20value\x20we\x20have\x20to\x20subtract\x0d\x0a\x09attenuation\x20=\x20max(attenuation\x20-\x20attenuationFactor,\x200.0);\x20//\x20The\x20max\x20fixes\x20a\x20bug.\x0d\x0a\x09//\x20Finally\x20we\x20expand\x20the\x20equation\x20along\x20the\x20y-axis\x20so\x20that\x20it\x20starts\x20with\x20a\x20function\x20value\x20of\x201\x20again.\x0d\x0a\x09attenuation\x20/=\x201.0\x20-\x20attenuationFactor;\x0d\x0a\x09return\x20attenuation;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongLight\x20(in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,in\x20vec3\x20lightColor,\x20in\x20vec3\x20lightVec,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09mediump\x20vec3\x20h\x20=\x20normalize(viewDir-lightVec);\x0d\x0a\x09lowp\x20float\x20ln\x20=\x20max\x20(0.0,\x20dot\x20(-lightVec,normal));\x0d\x0a\x09float\x20nh\x20=\x20max\x20(0.0,\x20dot\x20(h,normal));\x0d\x0a\x09diffuseColor=lightColor\x20*\x20ln;\x0d\x0a\x09specularColor=lightColor\x20*specColor*pow\x20(nh,\x20specColorIntensity*128.0)\x20*\x20gloss;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongDiectionLight\x20(in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20DirectionLight\x20light,float\x20thinknessFactor,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor,out\x20vec3\x20transmisColor)\x20{\x0d\x0a\x09vec3\x20lightVec=normalize(light.direction);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec,diffuseColor,specularColor);\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09diffuseColor\x20*=\x20u_TransmissionRate;\x0d\x0a\x09\x09transmisColor\x20=\x20SubSurfaceIBack(lightVec,\x20viewDir,thinknessFactor)*light.color.rgb*(1.0-u_TransmissionRate);\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongDiectionLight\x20(in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20DirectionLight\x20light,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09vec3\x20lightVec=normalize(light.direction);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec,diffuseColor,specularColor);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongPointLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20PointLight\x20light,float\x20thinknessFactor,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor,out\x20vec3\x20transmisColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec/length(lightVec),diffuseColor,specularColor);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range);\x0d\x0a\x09diffuseColor\x20*=\x20attenuate;\x0d\x0a\x09specularColor*=\x20attenuate;\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09diffuseColor\x20*=\x20u_TransmissionRate;\x0d\x0a\x09\x09transmisColor\x20=\x20SubSurfaceIBack(lightVec,\x20viewDir,thinknessFactor)*light.color.rgb*(1.0-u_TransmissionRate)*attenuate;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongPointLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20PointLight\x20light,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec/length(lightVec),diffuseColor,specularColor);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range);\x0d\x0a\x09diffuseColor\x20*=\x20attenuate;\x0d\x0a\x09specularColor*=\x20attenuate;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongSpotLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20SpotLight\x20light,float\x20thinknessFactor,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor,out\x20vec3\x20transmisColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09vec3\x20normalLightVec=lightVec/length(lightVec);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,normalLightVec,diffuseColor,specularColor);\x0d\x0a\x09vec2\x20cosAngles=cos(vec2(light.spot,light.spot*0.5)*0.5);//ConeAttenuation\x0d\x0a\x09float\x20dl=dot(normalize(light.direction),normalLightVec);\x0d\x0a\x09dl*=smoothstep(cosAngles[0],cosAngles[1],dl);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range)*dl;\x0d\x0a\x09diffuseColor\x20*=attenuate;\x0d\x0a\x09specularColor\x20*=attenuate;\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09diffuseColor\x20*=\x20u_TransmissionRate;\x0d\x0a\x09\x09transmisColor\x20=\x20SubSurfaceIBack(lightVec,\x20viewDir,thinknessFactor)*light.color.rgb*(1.0-u_TransmissionRate)*attenuate;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongSpotLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20SpotLight\x20light,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09vec3\x20normalLightVec=lightVec/length(lightVec);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,normalLightVec,diffuseColor,specularColor);\x0d\x0a\x09vec2\x20cosAngles=cos(vec2(light.spot,light.spot*0.5)*0.5);//ConeAttenuation\x0d\x0a\x09float\x20dl=dot(normalize(light.direction),normalLightVec);\x0d\x0a\x09dl*=smoothstep(cosAngles[0],cosAngles[1],dl);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range)*dl;\x0d\x0a\x09diffuseColor\x20*=attenuate;\x0d\x0a\x09specularColor\x20*=attenuate;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0avec3\x20NormalSampleToWorldSpace(vec3\x20normalMapSample,\x20vec3\x20unitNormal,\x20vec3\x20tangent,vec3\x20binormal)\x20{\x0d\x0a\x09vec3\x20normalT\x20=vec3(2.0*normalMapSample.x\x20-\x201.0,1.0-2.0*normalMapSample.y,2.0*normalMapSample.z\x20-\x201.0);\x0d\x0a\x09mediump\x20vec3\x20N\x20=\x20unitNormal;\x0d\x0a\x09mediump\x20vec3\x20T\x20=\x20tangent;\x0d\x0a\x09mediump\x20vec3\x20B\x20=\x20binormal;\x0d\x0a\x09mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);\x0d\x0a\x0d\x0a\x09//\x20Transform\x20from\x20tangent\x20space\x20to\x20world\x20space.\x0d\x0a\x09vec3\x20bumpedNormal\x20=normalize(TBN*normalT);\x0d\x0a\x09return\x20bumpedNormal;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20NormalSampleToWorldSpace1(vec4\x20normalMapSample,\x20vec3\x20tangent,\x20vec3\x20binormal,\x20vec3\x20unitNormal)\x20{\x0d\x0a\x09vec3\x20normalT;\x0d\x0a\x09normalT.x\x20=\x202.0\x20*\x20normalMapSample.x\x20-\x201.0;\x0d\x0a\x09normalT.y\x20=\x201.0\x20-\x202.0\x20*\x20normalMapSample.y;\x0d\x0a\x09normalT.z\x20=\x20sqrt(1.0\x20-\x20clamp(dot(normalT.xy,\x20normalT.xy),\x200.0,\x201.0));\x0d\x0a\x0d\x0a\x09vec3\x20T\x20=\x20normalize(tangent);\x0d\x0a\x09vec3\x20B\x20=\x20normalize(binormal);\x0d\x0a\x09vec3\x20N\x20=\x20normalize(unitNormal);\x0d\x0a\x09mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);\x0d\x0a\x0d\x0a\x09//\x20Transform\x20from\x20tangent\x20space\x20to\x20world\x20space.\x0d\x0a\x09vec3\x20bumpedNormal\x20=\x20TBN\x20*\x20normalize(normalT);\x0d\x0a\x0d\x0a\x09return\x20bumpedNormal;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20DecodeLightmap(vec4\x20color)\x20{\x0d\x0a\x09return\x20color.rgb*color.a*5.0;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20decodeHDR(vec4\x20color,float\x20range)\x20{\x0d\x0a\x09return\x20color.rgb*color.a*range;\x0d\x0a}\x0d\x0a\x0d\x0avec2\x20TransformUV(vec2\x20texcoord,vec4\x20tilingOffset)\x20{\x0d\x0a\x09vec2\x20transTexcoord=vec2(texcoord.x,texcoord.y-1.0)*tilingOffset.xy+vec2(tilingOffset.z,-tilingOffset.w);\x0d\x0a\x09transTexcoord.y+=1.0;\x0d\x0a\x09return\x20transTexcoord;\x0d\x0a}\x0d\x0a\x0d\x0avec4\x20remapGLPositionZ(vec4\x20position)\x20{\x0d\x0a\x09position.z=position.z\x20*\x202.0\x20-\x20position.w;\x0d\x0a\x09return\x20position;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20layaLinearToGammaSpace\x20(mediump\x20vec3\x20linRGB)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20linRGB\x20=\x20max(linRGB,\x20vec3(0.0));\x0d\x0a\x20\x20\x20\x20//\x20An\x20almost-perfect\x20approximation\x20from\x20http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1\x0d\x0a\x20\x20\x20\x20return\x20max(1.055\x20*\x20pow(linRGB,vec3(0.416666667))\x20-\x200.055,\x200.0);\x20\x20\x20\x0d\x0a}\x0d\x0a\x0d\x0aLayaLight\x20layaDirectionLightToLight(in\x20DirectionLight\x20light,in\x20float\x20attenuate)\x0d\x0a{\x0d\x0a\x09LayaLight\x20relight;\x0d\x0a\x09relight.color\x20=\x20light.color*attenuate;\x0d\x0a\x09relight.dir\x20=\x20light.direction;\x0d\x0a\x09return\x20relight;\x0d\x0a}\x0d\x0a\x0d\x0aLayaLight\x20layaPointLightToLight(in\x20vec3\x20pos,in\x20vec3\x20normal,\x20in\x20PointLight\x20light,in\x20float\x20attenuate)\x0d\x0a{\x0d\x0a\x09LayaLight\x20relight;\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09attenuate\x20*=\x20LayaAttenuation(lightVec,\x201.0/light.range);\x0d\x0a\x09relight.color\x20=\x20light.color*attenuate;\x0d\x0a\x09relight.dir\x20=\x20normalize(lightVec);\x0d\x0a\x09return\x20relight;\x0d\x0a}\x0d\x0a\x0d\x0aLayaLight\x20layaSpotLightToLight(in\x20vec3\x20pos,in\x20vec3\x20normal,\x20in\x20SpotLight\x20light,in\x20float\x20attenuate)\x0d\x0a{\x0d\x0a\x09LayaLight\x20relight;\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09vec3\x20normalLightVec=lightVec/length(lightVec);\x0d\x0a\x09vec2\x20cosAngles=cos(vec2(light.spot,light.spot*0.5)*0.5);//ConeAttenuation\x0d\x0a\x09float\x20dl=dot(normalize(light.direction),normalLightVec);\x0d\x0a\x09dl*=smoothstep(cosAngles[0],cosAngles[1],dl);\x0d\x0a\x09attenuate\x20*=\x20LayaAttenuation(lightVec,\x201.0/light.range)*dl;\x0d\x0a\x09relight.dir\x20=\x20normalLightVec;\x0d\x0a\x09relight.color\x20=\x20light.color*attenuate;\x0d\x0a\x09return\x20relight;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a',
        '//\x20------------------------------------------------------------------\x0a//\x20\x20PCF\x20Filtering\x20Tent\x20Functions\x0a//\x20------------------------------------------------------------------\x0a\x0a//\x20Assuming\x20a\x20isoceles\x20right\x20angled\x20triangle\x20of\x20height\x20\x22triangleHeight\x22\x20(as\x20drawn\x20below).\x0a//\x20This\x20function\x20return\x20the\x20area\x20of\x20the\x20triangle\x20above\x20the\x20first\x20texel(in\x20Y\x20the\x20first\x20texel).\x0a//\x0a//\x20|\x5c\x20\x20\x20\x20\x20\x20<--\x2045\x20degree\x20slop\x20isosceles\x20right\x20angled\x20triangle\x0a//\x20|\x20\x5c\x0a//\x20----\x20\x20\x20\x20<--\x20length\x20of\x20this\x20side\x20is\x20\x22triangleHeight\x22\x0a//\x20_\x20_\x20_\x20_\x20<--\x20texels\x0afloat\x20sampleShadowGetIRTriangleTexelArea(float\x20triangleHeight)\x0a{\x0a\x20\x20\x20\x20return\x20triangleHeight\x20-\x200.5;\x0a}\x0a\x0a//\x20Assuming\x20a\x20isoceles\x20triangle\x20of\x201.5\x20texels\x20height\x20and\x203\x20texels\x20wide\x20lying\x20on\x204\x20texels.\x0a//\x20This\x20function\x20return\x20the\x20area\x20of\x20the\x20triangle\x20above\x20each\x20of\x20those\x20texels.\x0a//\x20\x20\x20\x20|\x20\x20\x20\x20<--\x20offset\x20from\x20-0.5\x20to\x200.5,\x200\x20meaning\x20triangle\x20is\x20exactly\x20in\x20the\x20center\x0a//\x20\x20\x20/\x20\x5c\x20\x20\x20<--\x2045\x20degree\x20slop\x20isosceles\x20triangle\x20(ie\x20tent\x20projected\x20in\x202D)\x0a//\x20\x20/\x20\x20\x20\x5c\x0a//\x20_\x20_\x20_\x20_\x20<--\x20texels\x0a//\x20X\x20Y\x20Z\x20W\x20<--\x20result\x20indices\x20(in\x20computedArea.xyzw\x20and\x20computedAreaUncut.xyzw)\x0a//\x20Top\x20point\x20at\x20(right,top)\x20in\x20a\x20texel,left\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel,right\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel.\x0avoid\x20sampleShadowGetTexelAreasTent3x3(float\x20offset,\x20out\x20vec4\x20computedArea,\x20out\x20vec4\x20computedAreaUncut)\x0a{\x0a\x20\x20\x20\x20//\x20Compute\x20the\x20exterior\x20areas,a\x20and\x20h\x20is\x20same.\x0a\x20\x20\x20\x20float\x20a\x20=\x20offset\x20+\x200.5;\x0a\x20\x20\x20\x20float\x20offsetSquaredHalved\x20=\x20a\x20*\x20a\x20*\x200.5;\x0a\x20\x20\x20\x20computedAreaUncut.x\x20=\x20computedArea.x\x20=\x20offsetSquaredHalved\x20-\x20offset;\x0a\x20\x20\x20\x20computedAreaUncut.w\x20=\x20computedArea.w\x20=\x20offsetSquaredHalved;\x0a\x0a\x20\x20\x20\x20//\x20Compute\x20the\x20middle\x20areas\x0a\x20\x20\x20\x20//\x20For\x20Y\x20:\x20We\x20find\x20the\x20area\x20in\x20Y\x20of\x20as\x20if\x20the\x20left\x20section\x20of\x20the\x20isoceles\x20triangle\x20would\x0a\x20\x20\x20\x20//\x20intersect\x20the\x20axis\x20between\x20Y\x20and\x20Z\x20(ie\x20where\x20offset\x20=\x200).\x0a\x20\x20\x20\x20computedAreaUncut.y\x20=\x20sampleShadowGetIRTriangleTexelArea(1.5\x20-\x20offset);\x0a\x20\x20\x20\x20//\x20This\x20area\x20is\x20superior\x20to\x20the\x20one\x20we\x20are\x20looking\x20for\x20if\x20(offset\x20<\x200)\x20thus\x20we\x20need\x20to\x0a\x20\x20\x20\x20//\x20subtract\x20the\x20area\x20of\x20the\x20triangle\x20defined\x20by\x20(0,1.5-offset),\x20(0,1.5+offset),\x20(-offset,1.5).\x0a\x20\x20\x20\x20float\x20clampedOffsetLeft\x20=\x20min(offset,0.0);\x0a\x20\x20\x20\x20float\x20areaOfSmallLeftTriangle\x20=\x20clampedOffsetLeft\x20*\x20clampedOffsetLeft;\x0a\x20\x20\x20\x20computedArea.y\x20=\x20computedAreaUncut.y\x20-\x20areaOfSmallLeftTriangle;\x0a\x0a\x20\x20\x20\x20//\x20We\x20do\x20the\x20same\x20for\x20the\x20Z\x20but\x20with\x20the\x20right\x20part\x20of\x20the\x20isoceles\x20triangle\x0a\x20\x20\x20\x20computedAreaUncut.z\x20=\x20sampleShadowGetIRTriangleTexelArea(1.5\x20+\x20offset);\x0a\x20\x20\x20\x20float\x20clampedOffsetRight\x20=\x20max(offset,0.0);\x0a\x20\x20\x20\x20float\x20areaOfSmallRightTriangle\x20=\x20clampedOffsetRight\x20*\x20clampedOffsetRight;\x0a\x20\x20\x20\x20computedArea.z\x20=\x20computedAreaUncut.z\x20-\x20areaOfSmallRightTriangle;\x0a}\x0a\x0a//\x20Assuming\x20a\x20isoceles\x20triangle\x20of\x202.5\x20texel\x20height\x20and\x205\x20texels\x20wide\x20lying\x20on\x206\x20texels.\x0a//\x20This\x20function\x20return\x20the\x20weight\x20of\x20each\x20texels\x20area\x20relative\x20to\x20the\x20full\x20triangle\x20area.\x0a//\x20\x20/\x20\x20\x20\x20\x20\x20\x20\x5c\x0a//\x20_\x20_\x20_\x20_\x20_\x20_\x20<--\x20texels\x0a//\x200\x201\x202\x203\x204\x205\x20<--\x20computed\x20area\x20indices\x20(in\x20texelsWeights[])\x0a//\x20Top\x20point\x20at\x20(right,top)\x20in\x20a\x20texel,left\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel,right\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel.\x0avoid\x20sampleShadowGetTexelWeightsTent5x5(float\x20offset,\x20out\x20vec3\x20texelsWeightsA,\x20out\x20vec3\x20texelsWeightsB)\x0a{\x0a\x20\x20\x20\x20vec4\x20areaFrom3texelTriangle;\x0a\x20\x20\x20\x20vec4\x20areaUncutFrom3texelTriangle;\x0a\x20\x20\x20\x20sampleShadowGetTexelAreasTent3x3(offset,\x20areaFrom3texelTriangle,\x20areaUncutFrom3texelTriangle);\x0a\x0a\x20\x20\x20\x20//\x20Triangle\x20slope\x20is\x2045\x20degree\x20thus\x20we\x20can\x20almost\x20reuse\x20the\x20result\x20of\x20the\x203\x20texel\x20wide\x20computation.\x0a\x20\x20\x20\x20//\x20the\x205\x20texel\x20wide\x20triangle\x20can\x20be\x20seen\x20as\x20the\x203\x20texel\x20wide\x20one\x20but\x20shifted\x20up\x20by\x20one\x20unit/texel.\x0a\x20\x20\x20\x20//\x200.16\x20is\x201/(the\x20triangle\x20area)\x0a\x20\x20\x20\x20texelsWeightsA.x\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.x);\x0a\x20\x20\x20\x20texelsWeightsA.y\x20=\x200.16\x20*\x20(areaUncutFrom3texelTriangle.y);\x0a\x20\x20\x20\x20texelsWeightsA.z\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.y\x20+\x201.0);\x0a\x20\x20\x20\x20texelsWeightsB.x\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.z\x20+\x201.0);\x0a\x20\x20\x20\x20texelsWeightsB.y\x20=\x200.16\x20*\x20(areaUncutFrom3texelTriangle.z);\x0a\x20\x20\x20\x20texelsWeightsB.z\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.w);\x0a}\x0a\x0a//\x205x5\x20Tent\x20filter\x20(45\x20degree\x20sloped\x20triangles\x20in\x20U\x20and\x20V)\x0avoid\x20sampleShadowComputeSamplesTent5x5(vec4\x20shadowMapTextureTexelSize,\x20vec2\x20coord,\x20out\x20float\x20fetchesWeights[9],\x20out\x20vec2\x20fetchesUV[9])\x0a{\x0a\x20\x20\x20\x20//\x20tent\x20base\x20is\x205x5\x20base\x20thus\x20covering\x20from\x2025\x20to\x2036\x20texels,\x20thus\x20we\x20need\x209\x20bilinear\x20PCF\x20fetches\x0a\x20\x20\x20\x20vec2\x20tentCenterInTexelSpace\x20=\x20coord.xy\x20*\x20shadowMapTextureTexelSize.zw;\x0a\x20\x20\x20\x20vec2\x20centerOfFetchesInTexelSpace\x20=\x20floor(tentCenterInTexelSpace\x20+\x200.5);\x0a\x20\x20\x20\x20vec2\x20offsetFromTentCenterToCenterOfFetches\x20=\x20tentCenterInTexelSpace\x20-\x20centerOfFetchesInTexelSpace;\x0a\x0a\x20\x20\x20\x20//\x20find\x20the\x20weight\x20of\x20each\x20texel\x20based\x20on\x20the\x20area\x20of\x20a\x2045\x20degree\x20slop\x20tent\x20above\x20each\x20of\x20them.\x0a\x20\x20\x20\x20vec3\x20texelsWeightsUA,\x20texelsWeightsUB;\x0a\x20\x20\x20\x20vec3\x20texelsWeightsVA,\x20texelsWeightsVB;\x0a\x20\x20\x20\x20sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.x,\x20texelsWeightsUA,\x20texelsWeightsUB);\x0a\x20\x20\x20\x20sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.y,\x20texelsWeightsVA,\x20texelsWeightsVB);\x0a\x0a\x20\x20\x20\x20//\x20each\x20fetch\x20will\x20cover\x20a\x20group\x20of\x202x2\x20texels,\x20the\x20weight\x20of\x20each\x20group\x20is\x20the\x20sum\x20of\x20the\x20weights\x20of\x20the\x20texels\x0a\x20\x20\x20\x20vec3\x20fetchesWeightsU\x20=\x20vec3(texelsWeightsUA.xz,\x20texelsWeightsUB.y)\x20+\x20vec3(texelsWeightsUA.y,\x20texelsWeightsUB.xz);\x0a\x20\x20\x20\x20vec3\x20fetchesWeightsV\x20=\x20vec3(texelsWeightsVA.xz,\x20texelsWeightsVB.y)\x20+\x20vec3(texelsWeightsVA.y,\x20texelsWeightsVB.xz);\x0a\x0a\x20\x20\x20\x20//\x20move\x20the\x20PCF\x20bilinear\x20fetches\x20to\x20respect\x20texels\x20weights\x0a\x20\x20\x20\x20vec3\x20fetchesOffsetsU\x20=\x20vec3(texelsWeightsUA.y,\x20texelsWeightsUB.xz)\x20/\x20fetchesWeightsU.xyz\x20+\x20vec3(-2.5,-0.5,1.5);\x0a\x20\x20\x20\x20vec3\x20fetchesOffsetsV\x20=\x20vec3(texelsWeightsVA.y,\x20texelsWeightsVB.xz)\x20/\x20fetchesWeightsV.xyz\x20+\x20vec3(-2.5,-0.5,1.5);\x0a\x20\x20\x20\x20fetchesOffsetsU\x20*=\x20shadowMapTextureTexelSize.xxx;\x0a\x20\x20\x20\x20fetchesOffsetsV\x20*=\x20shadowMapTextureTexelSize.yyy;\x0a\x0a\x20\x20\x20\x20vec2\x20bilinearFetchOrigin\x20=\x20centerOfFetchesInTexelSpace\x20*\x20shadowMapTextureTexelSize.xy;\x0a\x20\x20\x20\x20fetchesUV[0]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.x,\x20fetchesOffsetsV.x);\x0a\x20\x20\x20\x20fetchesUV[1]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.y,\x20fetchesOffsetsV.x);\x0a\x20\x20\x20\x20fetchesUV[2]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.z,\x20fetchesOffsetsV.x);\x0a\x20\x20\x20\x20fetchesUV[3]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.x,\x20fetchesOffsetsV.y);\x0a\x20\x20\x20\x20fetchesUV[4]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.y,\x20fetchesOffsetsV.y);\x0a\x20\x20\x20\x20fetchesUV[5]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.z,\x20fetchesOffsetsV.y);\x0a\x20\x20\x20\x20fetchesUV[6]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.x,\x20fetchesOffsetsV.z);\x0a\x20\x20\x20\x20fetchesUV[7]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.y,\x20fetchesOffsetsV.z);\x0a\x20\x20\x20\x20fetchesUV[8]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.z,\x20fetchesOffsetsV.z);\x0a\x0a\x20\x20\x20\x20fetchesWeights[0]\x20=\x20fetchesWeightsU.x\x20*\x20fetchesWeightsV.x;\x0a\x20\x20\x20\x20fetchesWeights[1]\x20=\x20fetchesWeightsU.y\x20*\x20fetchesWeightsV.x;\x0a\x20\x20\x20\x20fetchesWeights[2]\x20=\x20fetchesWeightsU.z\x20*\x20fetchesWeightsV.x;\x0a\x20\x20\x20\x20fetchesWeights[3]\x20=\x20fetchesWeightsU.x\x20*\x20fetchesWeightsV.y;\x0a\x20\x20\x20\x20fetchesWeights[4]\x20=\x20fetchesWeightsU.y\x20*\x20fetchesWeightsV.y;\x0a\x20\x20\x20\x20fetchesWeights[5]\x20=\x20fetchesWeightsU.z\x20*\x20fetchesWeightsV.y;\x0a\x20\x20\x20\x20fetchesWeights[6]\x20=\x20fetchesWeightsU.x\x20*\x20fetchesWeightsV.z;\x0a\x20\x20\x20\x20fetchesWeights[7]\x20=\x20fetchesWeightsU.y\x20*\x20fetchesWeightsV.z;\x0a\x20\x20\x20\x20fetchesWeights[8]\x20=\x20fetchesWeightsU.z\x20*\x20fetchesWeightsV.z;\x0a}',
        'GlobalIllumination.glsl',
        'struct\x20LayaGIInput\x0d\x0a{\x0d\x0a\x09vec2\x20lightmapUV;\x0d\x0a\x09vec3\x20worldPos;\x0d\x0a};\x0d\x0a\x0d\x0a#define\x20LAYA_SPECCUBE_LOD_STEPS\x206.0\x0d\x0a\x0d\x0auniform\x20vec3\x20u_AmbientColor;\x0d\x0a\x0d\x0a#if\x20defined(GI_AMBIENT_SH)\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHAr;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHAg;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHAb;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHBr;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHBg;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHBb;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHC;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20samplerCube\x20u_ReflectTexture;\x0d\x0auniform\x20vec4\x20u_ReflectCubeHDRParams;\x0d\x0a\x0d\x0a#ifdef\x20SPECCUBE_BOX_PROJECTION\x0d\x0a\x09uniform\x20vec3\x20u_SpecCubeProbePosition;\x0d\x0a\x09uniform\x20vec3\x20u_SpecCubeBoxMax;\x0d\x0a\x09uniform\x20vec3\x20u_SpecCubeBoxMin;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20GI_AMBIENT_SH\x0d\x0a\x09mediump\x20vec3\x20shEvalLinearL0L1(mediump\x20vec4\x20normal)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20x;\x0d\x0a\x09\x09//\x20Linear\x20(L1)\x20+\x20constant\x20(L0)\x20polynomial\x20terms\x0d\x0a\x09\x09x.r\x20=\x20dot(u_AmbientSHAr,\x20normal);\x0d\x0a\x09\x09x.g\x20=\x20dot(u_AmbientSHAg,\x20normal);\x0d\x0a\x09\x09x.b\x20=\x20dot(u_AmbientSHAb,\x20normal);\x0d\x0a\x09\x09return\x20x;\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09mediump\x20vec3\x20shEvalLinearL2(mediump\x20vec4\x20normal)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20x1,x2;\x0d\x0a\x09\x09//\x204\x20of\x20the\x20quadratic\x20(L2)\x20polynomials\x0d\x0a\x09\x09mediump\x20vec4\x20vB\x20=\x20normal.xyzz\x20*\x20normal.yzzx;\x0d\x0a\x09\x09x1.r\x20=\x20dot(u_AmbientSHBr,\x20vB);\x0d\x0a\x09\x09x1.g\x20=\x20dot(u_AmbientSHBg,\x20vB);\x0d\x0a\x09\x09x1.b\x20=\x20dot(u_AmbientSHBb,\x20vB);\x0d\x0a\x0d\x0a\x09\x09//\x20Final\x20(5th)\x20quadratic\x20(L2)\x20polynomial\x0d\x0a\x09\x09mediump\x20float\x20vC\x20=\x20normal.x*normal.x\x20-\x20normal.y*normal.y;\x0d\x0a\x09\x09x2\x20=\x20u_AmbientSHC.rgb\x20*\x20vC;\x0d\x0a\x0d\x0a\x09\x09return\x20x1\x20+\x20x2;\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09mediump\x20vec3\x20shadeSHPerPixel(mediump\x20vec3\x20normal)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20ambientContrib;\x0d\x0a\x09\x09mediump\x20vec4\x20normalV4=vec4(-normal.x,normal.yz,\x201.0);//Note:SH\x20Data\x20is\x20left-hand,so\x20x\x20need\x20inverse\x0d\x0a\x09\x09ambientContrib\x20=\x20shEvalLinearL0L1(normalV4);\x0d\x0a\x09\x09ambientContrib\x20+=\x20shEvalLinearL2(normalV4);\x0d\x0a\x09\x09mediump\x20vec3\x20ambient\x20=\x20max(vec3(0.0),\x20ambientContrib);\x0d\x0a\x09\x09ambient\x20=\x20layaLinearToGammaSpace(ambient);\x0d\x0a\x09\x09return\x20ambient;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x20mediump\x20vec3\x20BoxProjectedCubemapDirection(mediump\x20vec3\x20worldRefl,mediump\x20vec3\x20worldPos,mediump\x20vec3\x20cubemapCenter,mediump\x20vec3\x20boxMin,mediump\x20vec3\x20boxMax){\x0d\x0a\x09\x20mediump\x20vec3\x20nrdir\x20=\x20normalize(worldRefl);\x0d\x0a\x09\x20mediump\x20vec3\x20rbmax\x20=\x20(boxMax\x20-\x20worldPos);\x0d\x0a\x09\x20mediump\x20vec3\x20rbmin\x20=\x20(boxMin\x20-\x20worldPos);\x0d\x0a\x09\x20mediump\x20vec3\x20select\x20=\x20step(vec3(0.0),\x20worldRefl);\x0d\x0a\x09\x20mediump\x20vec3\x20rbminmax\x20=\x20mix(rbmin,\x20rbmax,\x20select);\x0d\x0a\x09rbminmax\x20=\x20rbminmax\x20/\x20nrdir;\x0d\x0a\x09mediump\x20float\x20scalar\x20=\x20min(min(rbminmax.x,\x20rbminmax.y),\x20rbminmax.z);\x0d\x0a\x09\x20mediump\x20vec3\x20worldChangeRefl\x20=\x20nrdir\x20*\x20scalar\x20+\x20(worldPos\x20-\x20cubemapCenter);\x0d\x0a\x09return\x20worldChangeRefl;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0amediump\x20vec3\x20layaDecodeDirectionalLightmap\x20(mediump\x20vec3\x20color,\x20lowp\x20vec4\x20dirTex,\x20mediump\x20vec3\x20normalWorld)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20//\x20In\x20directional\x20(non-specular)\x20mode\x20Enlighten\x20bakes\x20dominant\x20light\x20direction\x0d\x0a\x20\x20\x20\x20//\x20in\x20a\x20way,\x20that\x20using\x20it\x20for\x20half\x20Lambert\x20and\x20then\x20dividing\x20by\x20a\x20\x22rebalancing\x20coefficient\x22\x0d\x0a\x20\x20\x20\x20//\x20gives\x20a\x20result\x20close\x20to\x20plain\x20diffuse\x20response\x20lightmaps,\x20but\x20normalmapped.\x0d\x0a\x0d\x0a\x20\x20\x20\x20//\x20Note\x20that\x20dir\x20is\x20not\x20unit\x20length\x20on\x20purpose.\x20Its\x20length\x20is\x20\x22directionality\x22,\x20like\x0d\x0a\x20\x20\x20\x20//\x20for\x20the\x20directional\x20specular\x20lightmaps.\x0d\x0a\x09lowp\x20vec3\x20directional=dirTex.xyz\x20-\x200.5;\x0d\x0a\x09directional.x=-directional.x;//NOTE:because\x20coord\x20System\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20halfLambert\x20=\x20dot(normalWorld,directional)\x20+\x200.5;\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20color\x20*\x20halfLambert\x20/\x20max(1e-4,\x20dirTex.w);\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20layaGIBase(LayaGIInput\x20giInput,mediump\x20float\x20occlusion,\x20mediump\x20vec3\x20normalWorld)\x0d\x0a{\x0d\x0a\x09vec3\x20indirectDiffuse;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x09\x0d\x0a\x09\x09mediump\x20vec3\x20bakedColor\x20=decodeHDR(texture2D(u_LightMap,\x20giInput.lightmapUV),5.0);\x0d\x0a\x09\x09#ifdef\x20LIGHTMAP_DIRECTIONAL\x0d\x0a\x09\x09\x09lowp\x20vec4\x20bakedDirTex\x20=\x20texture2D\x20(u_LightMapDirection,\x20giInput.lightmapUV);\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20indirectDiffuse\x20=\x20layaDecodeDirectionalLightmap\x20(bakedColor,\x20bakedDirTex,\x20normalWorld);\x0d\x0a\x09\x09#else\x20//unDirectional\x20lightmap\x0d\x0a\x09\x09\x09indirectDiffuse\x20=\x20bakedColor;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20GI_AMBIENT_SH\x0d\x0a\x09\x09\x09indirectDiffuse\x20=\x20shadeSHPerPixel(normalWorld);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09indirectDiffuse\x20=\x20u_AmbientColor;\x20//already\x20in\x20gamma\x20space\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09indirectDiffuse*=occlusion;\x0d\x0a\x09return\x20indirectDiffuse;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20layaGlossyEnvironment(mediump\x20vec4\x20glossIn)\x0d\x0a{\x0d\x0a\x09mediump\x20float\x20perceptualRoughness\x20=\x20glossIn.a;\x0d\x0a\x0d\x0a\x09//\x20use\x20approximation\x20to\x20solve,below\x20is\x20more\x20reasonable,but\x20maybe\x20slow.\x20\x0d\x0a\x09//\x20float\x20m\x20=\x20perceptualRoughnessToRoughness(perceptualRoughness);\x20//\x20m\x20is\x20the\x20real\x20roughness\x20parameter\x0d\x0a\x20\x20\x20\x20//\x20const\x20float\x20fEps\x20=\x201.192092896e-07F;\x20\x20\x20\x20\x20\x20\x20\x20//\x20smallest\x20such\x20that\x201.0+FLT_EPSILON\x20!=\x201.0\x20\x20(+1e-4h\x20is\x20NOT\x20good\x20here.\x20is\x20visibly\x20very\x20wrong)\x0d\x0a\x20\x20\x20\x20//\x20float\x20n\x20=\x20\x20(2.0/max(fEps,\x20m*m))-2.0;\x20\x20\x20\x20\x20\x20\x20\x20//\x20remap\x20to\x20spec\x20power.\x20See\x20eq.\x2021\x20in\x20-->\x20https://dl.dropboxusercontent.com/u/55891920/papers/mm_brdf.pdf\x0d\x0a\x20\x20\x20\x20//\x20n\x20/=\x204;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20remap\x20from\x20n_dot_h\x20formulatino\x20to\x20n_dot_r.\x20See\x20section\x20\x22Pre-convolved\x20Cube\x20Maps\x20vs\x20Path\x20Tracers\x22\x20-->\x20https://s3.amazonaws.com/docs.knaldtech.com/knald/1.0.0/lys_power_drops.html\x0d\x0a\x20\x20\x20\x20//\x20perceptualRoughness\x20=\x20pow(\x202/(n+2),\x200.25);\x20\x20//\x20remap\x20back\x20to\x20square\x20root\x20of\x20real\x20roughness\x20(0.25\x20include\x20both\x20the\x20sqrt\x20root\x20of\x20the\x20conversion\x20and\x20sqrt\x20for\x20going\x20from\x20roughness\x20to\x20perceptualRoughness)\x0d\x0a\x09perceptualRoughness\x20=\x20perceptualRoughness\x20*\x20(1.7\x20-\x200.7*perceptualRoughness);//just\x20a\x20approximation,but\x20fast.\x0d\x0a\x20\x0d\x0a\x09mediump\x20float\x20mip\x20=\x20perceptualRoughness\x20*\x20LAYA_SPECCUBE_LOD_STEPS;\x0d\x0a\x09mediump\x20vec3\x20uvw\x20=\x20glossIn.rgb;\x0d\x0a\x09uvw.x=-uvw.x;//Note:reflectCube\x20is\x20left-hand,so\x20x\x20need\x20inverse\x0d\x0a\x09mediump\x20vec4\x20rgbm=textureCubeLodEXT(u_ReflectTexture,uvw,mip);\x0d\x0a\x09return\x20decodeHDR(rgbm,u_ReflectCubeHDRParams.x);\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20layaGIIndirectSpecular(LayaGIInput\x20giInput,mediump\x20float\x20occlusion,\x20vec4\x20glossIn)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SPECCUBE_BOX_PROJECTION\x0d\x0a\x09\x09vec3\x20originalReflUVW\x20=\x20glossIn.xyz;\x0d\x0a\x09\x09glossIn.xyz\x20=BoxProjectedCubemapDirection(originalReflUVW,giInput.worldPos,u_SpecCubeProbePosition,u_SpecCubeBoxMin,u_SpecCubeBoxMax);\x0d\x0a\x09#endif\x0d\x0a\x09mediump\x20vec3\x20specular\x20=\x20layaGlossyEnvironment(glossIn);\x0d\x0a\x09return\x20specular\x20*\x20occlusion;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0aLayaGI\x20layaGlobalIllumination(LayaGIInput\x20giInput,mediump\x20float\x20occlusion,\x20mediump\x20vec3\x20normalWorld,mediump\x20vec4\x20uvwRoughness)\x0d\x0a{\x0d\x0a\x09LayaGI\x20gi;\x0d\x0a\x09gi.diffuse\x20=\x20layaGIBase(giInput,occlusion,\x20normalWorld);\x0d\x0a\x09gi.specular\x20=\x20layaGIIndirectSpecular(giInput,occlusion,\x20uvwRoughness);\x0d\x0a\x09return\x20gi;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a',
        'Shadow.glsl',
        '#ifndef\x20GRAPHICS_API_GLES3\x0d\x0a\x09#define\x20NO_NATIVE_SHADOWMAP\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(NO_NATIVE_SHADOWMAP)\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW(textureName)\x20uniform\x20mediump\x20sampler2D\x20textureName\x0d\x0a\x09#define\x20SAMPLE_TEXTURE2D_SHADOW(textureName,\x20coord3)\x20(texture2D(textureName,coord3.xy).r<coord3.z?0.0:1.0)\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW_PARAM(shadowMap)\x20mediump\x20sampler2D\x20shadowMap\x0d\x0a#else\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW(textureName)\x20uniform\x20mediump\x20sampler2DShadow\x20textureName\x0d\x0a\x09#define\x20SAMPLE_TEXTURE2D_SHADOW(textureName,\x20coord3)\x20textureLod(textureName,coord3,0.0)\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW_PARAM(shadowMap)\x20mediump\x20sampler2DShadow\x20shadowMap\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(RECEIVESHADOW)&&defined(SHADOW)\x0d\x0a\x20\x20\x20\x20#define\x20CALCULATE_SHADOWS\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(RECEIVESHADOW)&&defined(SHADOW_SPOT)\x0d\x0a\x09#define\x20CALCULATE_SPOTSHADOWS\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_ShadowBias;\x20//\x20x:\x20depth\x20bias,\x20y:\x20normal\x20bias\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09#include\x20\x22ShadowSampleTent.glsl\x22\x0d\x0a\x09uniform\x20vec4\x20u_ShadowMapSize;\x0d\x0a\x09uniform\x20vec4\x20u_SpotShadowMapSize;\x0d\x0a\x09uniform\x20vec4\x20u_ShadowParams;\x20//\x20x:\x20shadowStrength\x20y:\x20ShadowSpotLightStrength\x0d\x0a\x09\x0d\x0a\x09float\x20sampleShdowMapFiltered4(TEXTURE2D_SHADOW_PARAM(shadowMap),vec3\x20shadowCoord,vec4\x20shadowMapSize)\x0d\x0a\x09{\x0d\x0a\x09\x09float\x20attenuation;\x0d\x0a\x09\x09vec4\x20attenuation4;\x0d\x0a\x09\x09vec2\x20offset=shadowMapSize.xy/2.0;\x0d\x0a\x09\x09vec3\x20shadowCoord0=shadowCoord\x20+\x20vec3(-offset,0.0);\x0d\x0a\x09\x09vec3\x20shadowCoord1=shadowCoord\x20+\x20vec3(offset.x,-offset.y,0.0);\x0d\x0a\x09\x09vec3\x20shadowCoord2=shadowCoord\x20+\x20vec3(-offset.x,offset.y,0.0);\x0d\x0a\x09\x09vec3\x20shadowCoord3=shadowCoord\x20+\x20vec3(offset,0.0);\x0d\x0a\x09\x09attenuation4.x\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord0);\x0d\x0a\x09\x09attenuation4.y\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord1);\x0d\x0a\x09\x09attenuation4.z\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord2);\x0d\x0a\x09\x09attenuation4.w\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord3);\x0d\x0a\x09\x09attenuation\x20=\x20dot(attenuation4,\x20vec4(0.25));\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09float\x20sampleShdowMapFiltered9(TEXTURE2D_SHADOW_PARAM(shadowMap),vec3\x20shadowCoord,vec4\x20shadowmapSize)\x0d\x0a\x09{\x0d\x0a\x09\x09float\x20attenuation;\x0d\x0a\x09\x09float\x20fetchesWeights[9];\x0d\x0a\x09\x09vec2\x20fetchesUV[9];\x0d\x0a\x09\x09sampleShadowComputeSamplesTent5x5(shadowmapSize,\x20shadowCoord.xy,\x20fetchesWeights,\x20fetchesUV);\x0d\x0a\x09\x09attenuation\x20=\x20fetchesWeights[0]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[0].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[1]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[1].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[2]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[2].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[3]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[3].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[4]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[4].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[5]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[5].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[6]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[6].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[7]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[7].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[8]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[8].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)\x0d\x0a\x0d\x0a\x09TEXTURE2D_SHADOW(u_ShadowMap);\x0d\x0a\x0d\x0a\x09uniform\x20mat4\x20u_ShadowMatrices[4];\x0d\x0a\x09uniform\x20vec4\x20u_ShadowSplitSpheres[4];//\x20max\x20cascade\x20is\x204\x0d\x0a\x0d\x0a\x09mediump\x20int\x20computeCascadeIndex(vec3\x20positionWS)\x0d\x0a\x09{\x0d\x0a\x09\x09vec3\x20fromCenter0\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[0].xyz;\x0d\x0a\x09\x09vec3\x20fromCenter1\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[1].xyz;\x0d\x0a\x09\x09vec3\x20fromCenter2\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[2].xyz;\x0d\x0a\x09\x09vec3\x20fromCenter3\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[3].xyz;\x0d\x0a\x0d\x0a\x09\x09mediump\x20vec4\x20comparison\x20=\x20vec4(\x0d\x0a\x09\x09\x09dot(fromCenter0,\x20fromCenter0)<u_ShadowSplitSpheres[0].w,\x0d\x0a\x09\x09\x09dot(fromCenter1,\x20fromCenter1)<u_ShadowSplitSpheres[1].w,\x0d\x0a\x09\x09\x09dot(fromCenter2,\x20fromCenter2)<u_ShadowSplitSpheres[2].w,\x0d\x0a\x09\x09\x09dot(fromCenter3,\x20fromCenter3)<u_ShadowSplitSpheres[3].w);\x0d\x0a\x09\x09comparison.yzw\x20=\x20clamp(comparison.yzw\x20-\x20comparison.xyz,0.0,1.0);//keep\x20the\x20nearest\x0d\x0a\x09\x09mediump\x20vec4\x20indexCoefficient\x20=\x20vec4(4.0,3.0,2.0,1.0);\x0d\x0a\x09\x09mediump\x20int\x20index\x20=\x204\x20-\x20int(dot(comparison,\x20indexCoefficient));\x0d\x0a\x09\x09return\x20index;\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09vec4\x20getShadowCoord(vec4\x20positionWS)\x0d\x0a\x09{\x0d\x0a\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09mediump\x20int\x20cascadeIndex\x20=\x20computeCascadeIndex(positionWS.xyz);\x0d\x0a\x09\x09\x09if(cascadeIndex\x20>\x203)//\x20out\x20of\x20shadow\x20range\x20cascadeIndex\x20is\x204.\x0d\x0a\x09\x09\x09\x09return\x20vec4(0.0);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09#ifdef\x20GRAPHICS_API_GLES3\x0d\x0a\x09\x09\x09\x09return\x20u_ShadowMatrices[cascadeIndex]\x20*\x20positionWS;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09mat4\x20shadowMat;\x0d\x0a\x09\x09\x09\x09if(cascadeIndex\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[0];\x0d\x0a\x09\x09\x09\x09else\x20if(cascadeIndex\x20==\x201)\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[1];\x0d\x0a\x09\x09\x09\x09else\x20if(cascadeIndex\x20==\x202)\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[2];\x0d\x0a\x09\x09\x09\x09else\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[3];\x0d\x0a\x09\x09\x09\x09return\x20shadowMat\x20*\x20positionWS;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09return\x20u_ShadowMatrices[0]\x20*\x20positionWS;\x0d\x0a\x09\x09#endif\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09float\x20sampleShadowmap(vec4\x20shadowCoord)\x0d\x0a\x09{\x0d\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0d\x0a\x09\x09float\x20attenuation\x20=\x201.0;\x0d\x0a\x09\x09if(shadowCoord.z\x20>\x200.0\x20&&\x20shadowCoord.z\x20<\x201.0)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09#if\x20defined(SHADOW_SOFT_SHADOW_HIGH)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered9(u_ShadowMap,shadowCoord.xyz,u_ShadowMapSize);\x0d\x0a\x09\x09\x09#elif\x20defined(SHADOW_SOFT_SHADOW_LOW)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered4(u_ShadowMap,shadowCoord.xyz,u_ShadowMapSize);\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20SAMPLE_TEXTURE2D_SHADOW(u_ShadowMap,shadowCoord.xyz);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09attenuation\x20=\x20mix(1.0,attenuation,u_ShadowParams.x);//shadowParams.x:shadow\x20strength\x0d\x0a\x09\x09}\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader���Զ���ĺ겻����ifdef\x20����ĳ�if\x20defined\x0d\x0a\x09TEXTURE2D_SHADOW(u_SpotShadowMap);\x0d\x0a\x09uniform\x20mat4\x20u_SpotViewProjectMatrix;\x0d\x0a\x09float\x20sampleSpotShadowmap(vec4\x20shadowCoord)\x0d\x0a\x09{\x0d\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0d\x0a\x09\x09float\x20attenuation\x20=\x201.0;\x0d\x0a\x09\x09shadowCoord.xy\x20+=1.0;\x0d\x0a\x09\x09shadowCoord.xy/=2.0;\x20\x0d\x0a\x09\x09if(shadowCoord.z\x20>\x200.0\x20&&\x20shadowCoord.z\x20<\x201.0)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09#if\x20defined(SHADOW_SPOT_SOFT_SHADOW_HIGH)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered9(u_SpotShadowMap,shadowCoord.xyz,u_SpotShadowMapSize);\x0d\x0a\x09\x09\x09#elif\x20defined(SHADOW_SPOT_SOFT_SHADOW_LOW)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered4(u_SpotShadowMap,shadowCoord.xyz,u_SpotShadowMapSize);\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20SAMPLE_TEXTURE2D_SHADOW(u_SpotShadowMap,shadowCoord.xyz);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09attenuation\x20=\x20mix(1.0,attenuation,u_ShadowParams.y);//shadowParams.y:shadow\x20strength\x0d\x0a\x09\x09}\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0avec3\x20applyShadowBias(vec3\x20positionWS,\x20vec3\x20normalWS,\x20vec3\x20lightDirection)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20float\x20invNdotL\x20=\x201.0\x20-\x20clamp(dot(-lightDirection,\x20normalWS),0.0,1.0);\x0d\x0a\x20\x20\x20\x20float\x20scale\x20=\x20invNdotL\x20*\x20u_ShadowBias.y;\x0d\x0a\x0d\x0a\x20\x20\x20\x20//\x20normal\x20bias\x20is\x20negative\x20since\x20we\x20want\x20to\x20apply\x20an\x20inset\x20normal\x20offset\x0d\x0a\x20\x20\x20\x20positionWS\x20+=\x20-lightDirection\x20*\x20u_ShadowBias.xxx;\x0d\x0a\x20\x20\x20\x20positionWS\x20+=\x20normalWS\x20*\x20vec3(scale);\x0d\x0a\x20\x20\x20\x20return\x20positionWS;\x0d\x0a}\x0d\x0a',
        'ShadowCasterVS.glsl',
        '#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x0d\x0a#ifdef\x20SHADOW\x0d\x0a\x09uniform\x20vec3\x20u_ShadowLightDirection;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avec4\x20shadowCasterVertex()\x0d\x0a{\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09worldMat\x20=\x20worldMat\x20*\x20skinTransform;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec4\x20positionWS\x20=\x20worldMat\x20*\x20a_Position;\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x20\x20\x0d\x0a\x0d\x0a\x09vec3\x20normalWS\x20=\x20normalize(a_Normal*worldInvMat);//if\x20no\x20normalize\x20will\x20cause\x20precision\x20problem\x0d\x0a\x09#ifdef\x20SHADOW\x0d\x0a\x09\x09positionWS.xyz\x20=\x20applyShadowBias(positionWS.xyz,normalWS,u_ShadowLightDirection);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec4\x20positionCS\x20=\x20u_ViewProjection\x20*\x20positionWS;\x0d\x0a\x09#ifdef\x20SHADOW_SPOT\x0d\x0a\x09\x09positionCS.z\x20=\x20positionCS.z-u_ShadowBias.x/positionCS.w;\x0d\x0a\x09#endif\x0d\x0a\x09positionCS.z\x20=\x20max(positionCS.z,\x200.0);//min\x20ndc\x20z\x20is\x200.0\x0d\x0a\x09\x0d\x0a\x09//\x20//TODO没考虑UV动画呢\x0d\x0a\x09//\x20#if\x20defined(DIFFUSEMAP)&&defined(ALPHATEST)\x0d\x0a\x09//\x20\x09v_Texcoord0=a_Texcoord0;\x0d\x0a\x09//\x20#endif\x0d\x0a\x20\x20\x20\x20return\x20positionCS;\x0d\x0a}\x0d\x0a',
        'ShadowCasterFS.glsl',
        'vec4\x20shadowCasterFragment()\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x20vec4(0.0);\x0d\x0a}\x0d\x0a',
        'Colors.glsl',
        '#include\x20\x22StdLib.glsl\x22;\x0a\x0a#define\x20EPSILON\x201.0e-4\x0a\x0a//\x20Quadratic\x20color\x20thresholding\x0a//\x20curve\x20=\x20(threshold\x20-\x20knee,\x20knee\x20*\x202,\x200.25\x20/\x20knee)\x0amediump\x20vec4\x20quadraticThreshold(mediump\x20vec4\x20color,\x20mediump\x20float\x20threshold,\x20mediump\x20vec3\x20curve)\x20{\x0a\x09//\x20Pixel\x20brightness\x0a\x09mediump\x20float\x20br\x20=\x20max3(color.r,\x20color.g,\x20color.b);\x0a\x0a\x09//\x20Under-threshold\x20part:\x20quadratic\x20curve\x0a\x09mediump\x20float\x20rq\x20=\x20clamp(br\x20-\x20curve.x,\x200.0,\x20curve.y);\x0a\x09rq\x20=\x20curve.z\x20*\x20rq\x20*\x20rq;\x0a\x0a\x09//\x20Combine\x20and\x20apply\x20the\x20brightness\x20response\x20curve.\x0a\x09color\x20*=\x20max(rq,\x20br\x20-\x20threshold)\x20/\x20max(br,\x20EPSILON);\x0a\x0a\x09return\x20color;\x0a}\x0a\x0a\x0a\x0a//\x0a//\x20sRGB\x20transfer\x20functions\x0a//\x20Fast\x20path\x20ref:\x20http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1\x0a//\x0amediump\x20vec3\x20sRGBToLinear(mediump\x20vec3\x20c)\x20{\x0a\x09#ifdef\x20USE_VERY_FAST_SRGB\x0a\x09\x09return\x20c\x20*\x20c;\x0a\x09#elif\x20defined(USE_FAST_SRGB)\x0a\x09\x09return\x20c\x20*\x20(c\x20*\x20(c\x20*\x200.305306011\x20+\x200.682171111)\x20+\x200.012522878);\x0a\x09#else\x0a\x09\x09mediump\x20vec3\x20linearRGBLo\x20=\x20c\x20/\x2012.92;\x0a\x09\x09mediump\x20vec3\x20power=vec3(2.4,\x202.4,\x202.4);\x0a\x09\x09mediump\x20vec3\x20linearRGBHi\x20=\x20positivePow((c\x20+\x200.055)\x20/\x201.055,\x20power);\x0a\x09\x09mediump\x20vec3\x20linearRGB\x20=vec3((c.r<=0.04045)\x20?\x20linearRGBLo.r\x20:\x20linearRGBHi.r,(c.g<=0.04045)\x20?\x20linearRGBLo.g\x20:\x20linearRGBHi.g,(c.b<=0.04045)\x20?\x20linearRGBLo.b\x20:\x20linearRGBHi.b);\x0a\x09\x09return\x20linearRGB;\x0a\x09#endif\x0a}\x0a\x0amediump\x20vec4\x20sRGBToLinear(mediump\x20vec4\x20c){\x0a\x20\x20\x20\x20return\x20vec4(sRGBToLinear(c.rgb),\x20c.a);\x0a}\x0a\x0a\x0a\x0amediump\x20vec3\x20linearToSRGB(mediump\x20vec3\x20c)\x20{\x0a\x09#ifdef\x20USE_VERY_FAST_SRGB\x0a\x09\x09return\x20sqrt(c);\x0a\x09#elif\x20defined(USE_FAST_SRGB)\x0a\x09\x09return\x20max(1.055\x20*\x20PositivePow(c,\x200.416666667)\x20-\x200.055,\x200.0);\x0a\x09#else\x0a\x09\x09mediump\x20vec3\x20sRGBLo\x20=\x20c\x20*\x2012.92;\x0a\x09\x09mediump\x20vec3\x20power=vec3(1.0\x20/\x202.4,\x201.0\x20/\x202.4,\x201.0\x20/\x202.4);\x0a\x09\x09mediump\x20vec3\x20sRGBHi\x20=\x20(positivePow(c,\x20power)\x20*\x201.055)\x20-\x200.055;\x0a\x09\x09mediump\x20vec3\x20sRGB\x20=vec3((c.r<=0.0031308)\x20?\x20sRGBLo.r\x20:\x20sRGBHi.r,(c.g<=0.0031308)\x20?\x20sRGBLo.g\x20:\x20sRGBHi.g,(c.b<=0.0031308)\x20?\x20sRGBLo.b\x20:\x20sRGBHi.b);\x0a\x09\x09return\x20sRGB;\x0a\x09#endif\x0a}\x0a\x0amediump\x20vec4\x20linearToSRGB(mediump\x20vec4\x20c){\x0a\x20\x20\x20\x20return\x20vec4(linearToSRGB(c.rgb),\x20c.a);\x0a}',
        '//\x20Better,\x20temporally\x20stable\x20box\x20filtering\x0a//\x20[Jimenez14]\x20http://goo.gl/eomGso\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x20A\x20.\x20B\x20.\x20C\x20.\x0a//\x20.\x20.\x20D\x20.\x20E\x20.\x20.\x0a//\x20.\x20F\x20.\x20G\x20.\x20H\x20.\x0a//\x20.\x20.\x20I\x20.\x20J\x20.\x20.\x0a//\x20.\x20K\x20.\x20L\x20.\x20M\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0amediump\x20vec4\x20downsampleBox13Tap(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize)\x0a{\x0a\x20\x20\x20\x20mediump\x20vec4\x20A\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-1.0,\x20-1.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20B\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.0,\x20-1.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20C\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x201.0,\x20-1.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20D\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-0.5,\x20-0.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20E\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.5,\x20-0.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20F\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-1.0,\x20\x200.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20G\x20=\x20texture2D(tex,\x20uv);\x0a\x20\x20\x20\x20mediump\x20vec4\x20H\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x201.0,\x20\x200.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20I\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-0.5,\x20\x200.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20J\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.5,\x20\x200.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20K\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-1.0,\x20\x201.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20L\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.0,\x20\x201.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20M\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x201.0,\x20\x201.0));\x0a\x0a\x09mediump\x20vec2\x20scale=\x20vec2(0.5,\x200.125);\x0a\x20\x20\x20\x20mediump\x20vec2\x20div\x20=\x20(1.0\x20/\x204.0)\x20*\x20scale;\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20o\x20=\x20(D\x20+\x20E\x20+\x20I\x20+\x20J)\x20*\x20div.x;\x0a\x20\x20\x20\x20o\x20+=\x20(A\x20+\x20B\x20+\x20G\x20+\x20F)\x20*\x20div.y;\x0a\x20\x20\x20\x20o\x20+=\x20(B\x20+\x20C\x20+\x20H\x20+\x20G)\x20*\x20div.y;\x0a\x20\x20\x20\x20o\x20+=\x20(F\x20+\x20G\x20+\x20L\x20+\x20K)\x20*\x20div.y;\x0a\x20\x20\x20\x20o\x20+=\x20(G\x20+\x20H\x20+\x20M\x20+\x20L)\x20*\x20div.y;\x0a\x0a\x20\x20\x20\x20return\x20o;\x0a}\x0a\x0a//\x20Standard\x20box\x20filtering\x0amediump\x20vec4\x20downsampleBox4Tap(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize)\x0a{\x0a\x20\x20\x20\x20vec4\x20d\x20=\x20texelSize.xyxy\x20*\x20vec4(-1.0,\x20-1.0,\x201.0,\x201.0);\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20s\x20=\x20\x20texture2D(tex,\x20uv\x20+\x20d.xy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.xw);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zw);\x0a\x0a\x20\x20\x20\x20return\x20s\x20*\x20(1.0\x20/\x204.0);\x0a}\x0a\x0a//\x209-tap\x20bilinear\x20upsampler\x20(tent\x20filter)\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x201\x20.\x202\x20.\x201\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x202\x20.\x204\x20.\x202\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x201\x20.\x202\x20.\x201\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0amediump\x20vec4\x20upsampleTent(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize,\x20vec4\x20sampleScale)\x0a{\x0a\x20\x20\x20\x20vec4\x20d\x20=\x20texelSize.xyxy\x20*\x20vec4(1.0,\x201.0,\x20-1.0,\x200.0)\x20*\x20sampleScale;\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20s\x20=\x20\x20texture2D(tex,\x20uv\x20-\x20d.xy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20-\x20d.wy)\x20*\x202.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20-\x20d.zy);\x0a\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zw)\x20*\x202.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv)\x20*\x204.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x09uv\x20+\x20d.xw)\x20*\x202.0;\x0a\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.wy)\x20*\x202.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.xy);\x0a\x0a\x20\x20\x20\x20return\x20s\x20*\x20(1.0\x20/\x2016.0);\x0a}\x0a\x0a//\x20Standard\x20box\x20filtering\x0amediump\x20vec4\x20upsampleBox(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize,\x20vec4\x20sampleScale)\x0a{\x0a\x20\x20\x20\x20vec4\x20d\x20=\x20texelSize.xyxy\x20*\x20vec4(-1.0,\x20-1.0,\x201.0,\x201.0)\x20*\x200.5\x20*\x20sampleScale;\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20s\x20=\x20\x20texture2D(tex,\x20uv\x20+\x20d.xy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.xw);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zw);\x0a\x0a\x20\x20\x20\x20return\x20s\x20*\x20(1.0\x20/\x204.0);\x0a}',
        'StdLib.glsl',
        '#define\x20HALF_MAX\x20\x20\x20\x20\x20\x20\x2065504.0\x20//\x20(2\x20-\x202^-10)\x20*\x202^15\x0a\x0a#define\x20FLT_EPSILON\x20\x20\x20\x201.192092896e-07\x20//\x20Smallest\x20positive\x20number,\x20such\x20that\x201.0\x20+\x20FLT_EPSILON\x20!=\x201.0\x0a\x0amediump\x20vec4\x20safeHDR(mediump\x20vec4\x20c)\x0a{\x0a\x20\x20\x20\x20return\x20min(c,\x20HALF_MAX);\x0a}\x0a\x0afloat\x20max3(float\x20a,\x20float\x20b,\x20float\x20c)\x0a{\x0a\x20\x20\x20\x20return\x20max(max(a,\x20b),\x20c);\x0a}\x0a\x0avec3\x20positivePow(vec3\x20base,\x20vec3\x20power)\x0a{\x0a\x20\x20\x20\x20return\x20pow(max(abs(base),\x20vec3(FLT_EPSILON,\x20FLT_EPSILON,\x20FLT_EPSILON)),\x20power);\x0a}',
        'PBRVSInput.glsl',
        'attribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0avarying\x20vec3\x20v_Normal;\x20\x0d\x0a\x0d\x0a#if\x20defined(NORMALTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09attribute\x20vec4\x20a_Tangent0;\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a\x20\x20\x20\x20#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09\x20\x20\x20\x20varying\x20vec3\x20v_ViewDirForParallax;\x0d\x0a\x20\x20\x20\x20#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)||(defined(LIGHTMAP)&&defined(UV))\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(LIGHTMAP)&&defined(UV1)\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord1;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09uniform\x20vec4\x20u_LightmapScaleOffset;\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec3\x20u_CameraPos;\x0d\x0avarying\x20vec3\x20v_EyeVec;\x0d\x0avarying\x20vec3\x20v_PositionWorld;\x0d\x0avarying\x20float\x20v_posViewZ;\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a',
        '#ifdef\x20ALPHATEST\x0d\x0a\x09uniform\x20float\x20u_AlphaTestValue;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_AlbedoColor;\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_NormalTexture;\x0d\x0a\x09uniform\x20float\x20u_NormalScale;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_AlbedoTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20METALLICGLOSSTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_MetallicGlossTexture;\x0d\x0a#endif\x0d\x0auniform\x20float\x20u_Metallic;\x0d\x0a\x0d\x0a#ifdef\x20SPECULARGLOSSTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_SpecGlossTexture;\x0d\x0a#endif\x0d\x0auniform\x20vec3\x20u_SpecularColor;\x0d\x0a\x0d\x0auniform\x20float\x20u_Smoothness;\x0d\x0auniform\x20float\x20u_SmoothnessScale;\x0d\x0a\x0d\x0a#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_ParallaxTexture;\x0d\x0a\x09uniform\x20float\x20u_ParallaxScale;\x0d\x0a\x09varying\x20vec3\x20v_ViewDirForParallax;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20OCCLUSIONTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_OcclusionTexture;\x0d\x0a\x09uniform\x20float\x20u_occlusionStrength;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20EMISSION\x20\x0d\x0a\x09#ifdef\x20EMISSIONTEXTURE\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_EmissionTexture;\x0d\x0a\x09#endif\x0d\x0a\x09uniform\x20vec4\x20u_EmissionColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a\x09uniform\x20sampler2D\x20u_LightMap;\x0d\x0a\x09#ifdef\x20LIGHTMAP_DIRECTIONAL\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightMapDirection;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Normal;\x20\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09uniform\x20DirectionLight\x20u_DirectionLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09uniform\x20PointLight\x20u_PointLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09uniform\x20SpotLight\x20u_SpotLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20mat4\x20u_View;\x0d\x0a\x09\x09uniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x09\x09uniform\x20vec4\x20u_Viewport;\x0d\x0a\x09\x09uniform\x20int\x20u_DirationLightCount;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightBuffer;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightClusterBuffer;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_EyeVec;\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a//后面考虑宏TODO\x0d\x0avarying\x20vec3\x20v_PositionWorld;\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0amediump\x20float\x20lerpOneTo(mediump\x20float\x20b,\x20mediump\x20float\x20t)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20oneMinusT\x20=\x201.0\x20-\x20t;\x0d\x0a\x20\x20\x20\x20return\x20oneMinusT\x20+\x20b\x20*\x20t;\x0d\x0a}\x0d\x0a\x0d\x0a#ifdef\x20EMISSION\x20\x0d\x0a\x09vec3\x20emission(vec2\x20uv)\x0d\x0a\x09{\x0d\x0a\x09\x09#ifdef\x20EMISSIONTEXTURE\x0d\x0a\x09\x09\x09return\x20texture2D(u_EmissionTexture,\x20uv).rgb\x20*\x20u_EmissionColor.rgb;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09return\x20u_EmissionColor.rgb;\x0d\x0a\x09\x09#endif\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0amediump\x20float\x20getAlpha(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09return\x20u_AlbedoColor.a;\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09return\x20texture2D(u_AlbedoTexture,\x20uv).a\x20*\x20u_AlbedoColor.a;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09return\x20u_AlbedoColor.a;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20float\x20getOcclusion(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09#ifdef\x20OCCLUSIONTEXTURE\x0d\x0a\x09\x09mediump\x20float\x20occ\x20=\x20texture2D(u_OcclusionTexture,\x20uv).g;\x0d\x0a\x09\x09return\x20lerpOneTo(occ,\x20u_occlusionStrength);\x0d\x0a\x09#else\x0d\x0a\x09\x09return\x201.0;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20albedo(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09return\x20u_AlbedoColor.rgb\x20*\x20texture2D(u_AlbedoTexture,\x20uv).rgb;\x0d\x0a\x09#else\x0d\x0a\x09\x09return\x20u_AlbedoColor.rgb;\x0d\x0a\x09#endif\x0d\x0a\x09//TODO:Detail\x20Texture\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec2\x20getMetallicGloss(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09mediump\x20vec2\x20ms;//x\x20is\x20metallic,y\x20is\x20smoothness\x0d\x0a\x09#ifdef\x20METALLICGLOSSTEXTURE\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09ms.x\x20=\x20texture2D(u_MetallicGlossTexture,\x20uv).r;\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a*u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09ms\x20=\x20texture2D(u_MetallicGlossTexture,\x20uv).ra;\x0d\x0a\x09\x09\x09ms.y\x20*=\x20u_SmoothnessScale;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09ms.x\x20=\x20u_Metallic;\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a\x20*\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09ms.y\x20=\x20u_Smoothness;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09return\x20ms;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec4\x20specularGloss(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09mediump\x20vec4\x20sg;\x0d\x0a\x09#ifdef\x20SPECULARGLOSSTEXTURE\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09sg.rgb\x20=\x20texture2D(u_SpecGlossTexture,\x20uv).rgb;\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a*u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09sg\x20=\x20texture2D(u_SpecGlossTexture,\x20uv);\x0d\x0a\x09\x09\x09sg.a\x20*=\x20u_SmoothnessScale;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09sg.rgb\x20=\x20u_SpecularColor.rgb;\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a\x20*\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09sg.a\x20=\x20u_Smoothness;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09\x09return\x20sg;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09mediump\x20vec3\x20unpackScaleNormal(mediump\x20vec3\x20packednormal,\x20mediump\x20float\x20bumpScale)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20normal\x20=\x20packednormal.xyz\x20*\x202.0\x20-\x201.0;\x0d\x0a\x09\x09normal.y=-normal.y;//NOTE:because\x20unity\x20to\x20LayaAir\x20coordSystem.\x0d\x0a\x09\x09normal.xy\x20*=\x20bumpScale;\x0d\x0a\x09\x09return\x20normal;\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09mediump\x20vec3\x20normalInTangentSpace(vec2\x20texcoords)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20normalTangent\x20=\x20unpackScaleNormal(texture2D(u_NormalTexture,\x20texcoords).rgb,u_NormalScale);\x0d\x0a\x09\x09return\x20normalTangent;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09mediump\x20vec2\x20parallaxOffset1Step(mediump\x20float\x20h,\x20mediump\x20float\x20height,\x20mediump\x20vec3\x20viewDir)\x0d\x0a\x09{\x0d\x0a\x09\x09h\x20=\x20h\x20*\x20height\x20-\x20height\x20/\x202.0;\x0d\x0a\x09\x09viewDir.z\x20+=\x200.42;\x0d\x0a\x09\x09return\x20h\x20*\x20(viewDir.xy\x20/\x20viewDir.z);\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09vec2\x20parallax(vec2\x20texcoords,\x20mediump\x20vec3\x20viewDir)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20float\x20h\x20=\x20texture2D(u_ParallaxTexture,\x20texcoords.xy).g;\x0d\x0a\x09\x09vec2\x20offset\x20=\x20parallaxOffset1Step(h,\x20u_ParallaxScale,\x20viewDir);\x0d\x0a\x09\x09return\x20texcoords+offset;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a',
        'LayaPBRBRDF.glsl',
        '//\x20allow\x20to\x20explicitly\x20override\x20LAYA_BRDF_GI\x20and\x20LAYA_BRDF_LIGHT\x20in\x20custom\x20shader,default\x20is\x20layaBRDFHighGI\x20and\x20layaBRDFHighLight\x0a#if\x20!defined\x20(LAYA_BRDF_GI)\x20\x0a\x09#if\x20defined(LAYA_PBR_BRDF_LOW)\x0a\x09\x09#define\x20LAYA_BRDF_GI\x20layaBRDFLowGI\x0a\x09#elif\x20defined(LAYA_PBR_BRDF_HIGH)\x0a\x09\x09#define\x20LAYA_BRDF_GI\x20layaBRDFHighGI\x0a\x09#endif\x0a#endif\x0a#if\x20!defined\x20(LAYA_BRDF_LIGHT)\x0a\x09#if\x20defined(LAYA_PBR_BRDF_LOW)\x0a\x09\x09#define\x20LAYA_BRDF_LIGHT\x20layaBRDFLowLight\x0a\x09#elif\x20defined(LAYA_PBR_BRDF_HIGH)\x0a\x09\x09#define\x20LAYA_BRDF_LIGHT\x20layaBRDFHighLight\x0a\x09#endif\x0a#endif\x0a\x0a#define\x20PI\x203.14159265359\x0a#define\x20INV_PI\x200.31830988618\x0a\x0amediump\x20float\x20pow4(mediump\x20float\x20x)\x0a{\x0a\x09return\x20x\x20*\x20x\x20*\x20x\x20*\x20x;\x0a}\x0a\x0amediump\x20float\x20pow5(mediump\x20float\x20x)\x0a{\x0a\x09return\x20x\x20*\x20x\x20*\x20x\x20*\x20x\x20*\x20x;\x0a}\x0a\x0amediump\x20vec3\x20fresnelLerp(mediump\x20vec3\x20F0,mediump\x20vec3\x20F90,mediump\x20float\x20cosA)\x0a{\x0a\x09float\x20t\x20=\x20pow5(1.0\x20-\x20cosA);\x20\x20\x20//\x20ala\x20Schlick\x20interpoliation\x0a\x09return\x20mix(F0,\x20F90,\x20t);\x0a}\x0a\x0amediump\x20vec3\x20fresnelTerm(mediump\x20vec3\x20F0,mediump\x20float\x20cosA)\x0a{\x0a\x09float\x20t\x20=\x20pow5(1.0\x20-\x20cosA);\x20\x20\x20//\x20ala\x20Schlick\x20interpoliation\x0a\x09return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20t;\x0a}\x0a\x0a//\x20approximage\x20Schlick\x20with\x20^4\x20instead\x20of\x20^5\x0amediump\x20vec3\x20fresnelLerpFast\x20(mediump\x20vec3\x20F0,\x20mediump\x20vec3\x20F90,mediump\x20float\x20cosA)\x0a{\x0a\x20\x20\x20\x20mediump\x20float\x20t\x20=\x20pow4\x20(1.0\x20-\x20cosA);\x0a\x20\x20\x20\x20return\x20mix\x20(F0,\x20F90,\x20t);\x0a}\x0a\x0afloat\x20smoothnessToPerceptualRoughness(float\x20smoothness)\x0a{\x0a\x20\x20\x20\x20return\x201.0\x20-\x20smoothness;\x0a}\x0a\x0afloat\x20perceptualRoughnessToRoughness(float\x20perceptualRoughness)\x0a{\x0a\x20\x20\x20\x20return\x20perceptualRoughness\x20*\x20perceptualRoughness;\x0a}\x0a\x0avec3\x20safeNormalize(vec3\x20inVec)\x0a{\x0a\x09float\x20dp3\x20=\x20max(0.001,dot(inVec,inVec));\x0a\x09return\x20inVec\x20*\x20inversesqrt(dp3);\x0a}\x0a\x0a//\x20Note:\x20Disney\x20diffuse\x20must\x20be\x20multiply\x20by\x20diffuseAlbedo\x20/\x20PI.\x20This\x20is\x20done\x20outside\x20of\x20this\x20function.\x0amediump\x20float\x20disneyDiffuse(mediump\x20float\x20NdotV,mediump\x20float\x20NdotL,mediump\x20float\x20LdotH,mediump\x20float\x20perceptualRoughness)\x0a{\x0a\x09//https://www.cnblogs.com/herenzhiming/articles/5790389.html\x0a\x09mediump\x20float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdotH\x20*\x20LdotH\x20*\x20perceptualRoughness;\x0a\x09//\x20Two\x20schlick\x20fresnel\x20term\x0a\x09mediump\x20float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow5(1.0\x20-\x20NdotL));\x0a\x09mediump\x20float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow5(1.0\x20-\x20NdotV));\x0a\x0a\x09return\x20lightScatter\x20*\x20viewScatter;\x0a}\x0a\x0a//\x20Ref:\x20http://jcgt.org/published/0003/02/03/paper.pdf\x0afloat\x20smithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)\x0a{\x0a\x09//\x20Original\x20formulation:\x0a\x20\x20\x20\x20//\x20lambda_v\x20\x20\x20\x20=\x20(-1\x20+\x20sqrt(a2\x20*\x20(1\x20-\x20NdotL2)\x20/\x20NdotL2\x20+\x201))\x20*\x200.5f;\x0a\x20\x20\x20\x20//\x20lambda_l\x20\x20\x20\x20=\x20(-1\x20+\x20sqrt(a2\x20*\x20(1\x20-\x20NdotV2)\x20/\x20NdotV2\x20+\x201))\x20*\x200.5f;\x0a\x20\x20\x20\x20//\x20G\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x201\x20/\x20(1\x20+\x20lambda_v\x20+\x20lambda_l);\x0a\x0a\x09//\x20scientific\x20code\x20implement:\x0a\x09//\x20Reorder\x20code\x20to\x20be\x20more\x20optimal\x0a\x20\x20\x20\x20//\x20half\x20a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20roughness;\x0a\x20\x20\x20\x20//\x20half\x20a2\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20a\x20*\x20a;\x0a\x0a\x20\x20\x20\x20//\x20half\x20lambdaV\x20\x20\x20\x20=\x20NdotL\x20*\x20sqrt((-NdotV\x20*\x20a2\x20+\x20NdotV)\x20*\x20NdotV\x20+\x20a2);\x0a\x20\x20\x20\x20//\x20half\x20lambdaL\x20\x20\x20\x20=\x20NdotV\x20*\x20sqrt((-NdotL\x20*\x20a2\x20+\x20NdotL)\x20*\x20NdotL\x20+\x20a2);\x0a\x0a\x20\x20\x20\x20//\x20Simplify\x20visibility\x20term:\x20(2.0f\x20*\x20NdotL\x20*\x20NdotV)\x20/\x20\x20((4.0f\x20*\x20NdotL\x20*\x20NdotV)\x20*\x20(lambda_v\x20+\x20lambda_l\x20+\x201e-5f));\x0a\x20\x20\x20\x20//\x20return\x200.5f\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x201e-5f);\x20\x20\x0a\x09//\x20This\x20function\x20is\x20not\x20intended\x20to\x20be\x20running\x20on\x20Mobile,therefore\x20epsilon\x20is\x20smaller\x20than\x20can\x20be\x20represented\x20by\x20half\x0a\x0a\x09//\x20Approximation\x20of\x20the\x20above\x20formulation\x20(simplify\x20the\x20sqrt,\x20not\x20mathematically\x20correct\x20but\x20close\x20enough)\x0a\x09float\x20a\x20=\x20roughness;\x0a\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);\x0a\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);\x0a\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x201e-5);\x0a}\x0a\x0afloat\x20ggxTerm(float\x20NdotH,\x20float\x20roughness)\x0a{\x0a\x09float\x20a2\x20=\x20roughness\x20*\x20roughness;\x0a\x09float\x20d\x20=\x20(NdotH\x20*\x20a2\x20-\x20NdotH)\x20*\x20NdotH\x20+\x201.0;\x20//\x202\x20mad\x0a\x09return\x20INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x201e-7);\x20//\x20This\x20function\x20is\x20not\x20intended\x20to\x20be\x20running\x20on\x20Mobile,therefore\x20epsilon\x20is\x20smaller\x20than\x20what\x20can\x20be\x20represented\x20by\x20half//返回值小用half来返回\x0a}\x0a\x0a//\x20BRDF1-------------------------------------------------------------------------------------\x0a\x0a//\x20Note:\x20BRDF\x20entry\x20points\x20use\x20smoothness\x20and\x20oneMinusReflectivity\x20for\x20optimization\x20purposes,\x0a//\x20mostly\x20for\x20DX9\x20SM2.0\x20level.\x20Most\x20of\x20the\x20math\x20is\x20being\x20done\x20on\x20these\x20(1-x)\x20values,\x20and\x20that\x20saves\x20a\x20few\x20precious\x20ALU\x20slots.\x0a\x0a//\x20Main\x20Physically\x20Based\x20BRDF\x0a//\x20Derived\x20from\x20Disney\x20work\x20and\x20based\x20on\x20Torrance-Sparrow\x20micro-facet\x20model\x0a//\x0a//\x20BRDF\x20=\x20kD\x20/\x20pi\x20+\x20kS\x20*\x20(D\x20*\x20V\x20*\x20F)\x20/\x204\x0a//\x20I\x20=\x20BRDF\x20*\x20NdotL\x0a//\x0a//\x20*NDF\x20GGX:\x0a//\x20*Smith\x20for\x20Visiblity\x20term\x0a//\x20*Schlick\x20approximation\x20for\x20Fresnel\x0amediump\x20vec4\x20layaBRDFHighLight(mediump\x20vec3\x20diffColor,\x20mediump\x20vec3\x20specColor,\x20mediump\x20float\x20oneMinusReflectivity,\x20float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,\x20vec3\x20viewDir,LayaLight\x20light)\x0a{\x0a\x09vec3\x20halfDir\x20=\x20safeNormalize(viewDir-light.dir);\x0a\x0a\x09float\x20nl\x20=\x20clamp(dot(normal,\x20-light.dir),0.0,1.0);\x0a\x09float\x20nh\x20=\x20clamp(dot(normal,\x20halfDir),0.0,1.0);\x0a\x09mediump\x20float\x20lv\x20=\x20clamp(dot(light.dir,\x20viewDir),0.0,1.0);\x0a\x09mediump\x20float\x20lh\x20=\x20clamp(dot(light.dir,\x20-halfDir),0.0,1.0);\x0a\x0a\x09//\x20Diffuse\x20term\x0a\x09mediump\x20float\x20diffuseTerm\x20=\x20disneyDiffuse(nv,\x20nl,\x20lh,\x20perceptualRoughness)\x20*\x20nl;\x0a\x0a\x09//\x20Specular\x20term\x0a\x20\x20\x20\x20//\x20HACK:\x20theoretically\x20we\x20should\x20divide\x20diffuseTerm\x20by\x20Pi\x20and\x20not\x20multiply\x20specularTerm!\x0a\x20\x20\x20\x20//\x20BUT\x20that\x20will\x20make\x20shader\x20look\x20significantly\x20darker\x20than\x20Legacy\x20ones\x0a\x0a\x09//\x20GGX\x20with\x20roughtness\x20to\x200\x20would\x20mean\x20no\x20specular\x20at\x20all,\x20using\x20max(roughness,\x200.002)\x20here\x20to\x20match\x20HDrenderloop\x20roughtness\x20remapping.\x0a\x09roughness\x20=\x20max(roughness,\x200.002);\x0a\x09float\x20V\x20=\x20smithJointGGXVisibilityTerm(nl,\x20nv,\x20roughness);\x0a\x09float\x20D\x20=\x20ggxTerm(nh,\x20roughness);\x0a\x0a\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20PI;\x20//\x20Torrance-Sparrow\x20model,\x20Fresnel\x20is\x20applied\x20later\x0a\x0a\x09//#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09specularTerm\x20=\x20sqrt(max(1e-4,\x20specularTerm));\x0a\x09//#endif\x0a\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20nl);\x0a\x09\x09\x0a\x09mediump\x20vec3\x20color\x20=\x20diffColor\x20*\x20light.color\x20*\x20diffuseTerm\x20+\x20specularTerm\x20*\x20light.color\x20*\x20fresnelTerm(specColor,\x20lh);\x0a\x09return\x20vec4(color,\x201.0);\x0a}\x0a\x0avec4\x20layaBRDFHighGI(mediump\x20vec3\x20diffColor,mediump\x20vec3\x20specColor,mediump\x20float\x20oneMinusReflectivity,float\x20smoothness\x20,float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,\x20vec3\x20viewDir,LayaGI\x20gi)\x0a{\x0a\x09//\x20surfaceReduction\x20=\x20Int\x20D(NdotH)\x20*\x20NdotH\x20*\x20Id(NdotL>0)\x20dH\x20=\x201/(roughness^2+1)\x0a\x09float\x20surfaceReduction;\x0a\x09surfaceReduction\x20=\x201.0\x20-\x200.28*roughness*perceptualRoughness;//\x201-0.28*x^3\x20as\x20approximation\x20for\x20(1/(x^4+1))^(1/2.2)\x20on\x20the\x20domain\x20[0;1]\x0a\x09float\x20grazingTerm\x20=\x20clamp(smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity),0.0,1.0);\x0a\x09mediump\x20vec3\x20color\x20=diffColor\x20*\x20gi.diffuse\x20+\x20surfaceReduction\x20*\x20gi.specular\x20*\x20fresnelLerp(specColor,vec3(grazingTerm),\x20nv);\x0a\x09return\x20vec4(color,1.0);\x0a}\x0a//\x20BRDF1-------------------------------------------------------------------------------------\x0a\x0a\x0a//\x20BRDF2-------------------------------------------------------------------------------------\x0a//\x20Based\x20on\x20Minimalist\x20CookTorrance\x20BRDF\x0a//\x20Implementation\x20is\x20slightly\x20different\x20from\x20original\x20derivation:\x20http://www.thetenthplanet.de/archives/255\x0a//\x0a//\x20*NDF\x20[Modified]\x20GGX:\x0a//\x20*Modified\x20Kelemen\x20and\x20Szirmay-​Kalos\x20for\x20Visibility\x20term\x0a//\x20*Fresnel\x20approximated\x20with\x201/LdotH\x0amediump\x20vec4\x20layaBRDFLowLight\x20(mediump\x20vec3\x20diffColor,\x20mediump\x20vec3\x20specColor,mediump\x20float\x20oneMinusReflectivity,float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,vec3\x20viewDir,LayaLight\x20light)\x0a{\x0a\x20\x20\x20\x20vec3\x20halfDir\x20=\x20safeNormalize\x20(viewDir-light.dir);\x0a\x20\x20\x20\x20mediump\x20float\x20nl\x20=\x20clamp(dot(normal,\x20-light.dir),0.0,1.0);\x0a\x20\x20\x20\x20float\x20nh\x20=\x20clamp(dot(normal,\x20halfDir),0.0,1.0);\x0a\x20\x20\x20\x20float\x20lh\x20=\x20clamp(dot(-light.dir,\x20halfDir),0.0,1.0);\x0a\x0a\x20\x20\x20\x20//\x20GGX\x20Distribution\x20multiplied\x20by\x20combined\x20approximation\x20of\x20Visibility\x20and\x20Fresnel\x0a\x20\x20\x20\x20//\x20See\x20\x22Optimizing\x20PBR\x20for\x20Mobile\x22\x20from\x20Siggraph\x202015\x20moving\x20mobile\x20graphics\x20course\x0a\x20\x20\x20\x20//\x20https://community.arm.com/events/1155\x0a\x20\x20\x20\x20mediump\x20float\x20a\x20=\x20roughness;\x0a\x20\x20\x20\x20float\x20a2\x20=\x20a*a;\x0a\x0a\x20\x20\x20\x20float\x20d\x20=\x20nh\x20*\x20nh\x20*\x20(a2\x20-\x201.0)\x20+\x201.00001;\x0a\x09//\x20#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09\x09//\x20Tighter\x20approximation\x20for\x20Gamma\x20only\x20rendering\x20mode!\x0a\x09\x09//\x20DVF\x20=\x20sqrt(DVF);\x0a\x09\x09//\x20DVF\x20=\x20(a\x20*\x20sqrt(.25))\x20/\x20(max(sqrt(0.1),\x20lh)*sqrt(roughness\x20+\x20.5)\x20*\x20d);\x0a\x09\x09float\x20specularTerm\x20=\x20a\x20/\x20(max(0.32,\x20lh)\x20*\x20(1.5\x20+\x20roughness)\x20*\x20d);\x0a\x09//\x20#else\x0a\x09//\x20\x09float\x20specularTerm\x20=\x20a2\x20/\x20(max(0.1f,\x20lh*lh)\x20*\x20(roughness\x20+\x200.5f)\x20*\x20(d\x20*\x20d)\x20*\x204);\x0a\x09//\x20#endif\x0a\x0a\x20\x20\x20\x20//\x20on\x20mobiles\x20(where\x20half\x20actually\x20means\x20something)\x20denominator\x20have\x20risk\x20of\x20overflow\x0a\x20\x20\x20\x20//\x20clamp\x20below\x20was\x20added\x20specifically\x20to\x20\x22fix\x22\x20that,\x20but\x20dx\x20compiler\x20(we\x20convert\x20bytecode\x20to\x20metal/gles)\x0a\x20\x20\x20\x20//\x20sees\x20that\x20specularTerm\x20have\x20only\x20non-negative\x20terms,\x20so\x20it\x20skips\x20max(0,..)\x20in\x20clamp\x20(leaving\x20only\x20min(100,...))\x0a\x0a\x09//#if\x20defined\x20(SHADER_API_MOBILE)\x0a\x20\x20\x20\x20specularTerm\x20=\x20specularTerm\x20-\x201e-4;\x0a\x09//#endif\x0a\x0a\x09//\x20#else\x0a\x09\x09//\x20//\x20Legacy\x0a\x09\x09//\x20half\x20specularPower\x20=\x20PerceptualRoughnessToSpecPower(perceptualRoughness);\x0a\x09\x09//\x20//\x20Modified\x20with\x20approximate\x20Visibility\x20function\x20that\x20takes\x20roughness\x20into\x20account\x0a\x09\x09//\x20//\x20Original\x20((n+1)*N.H^n)\x20/\x20(8*Pi\x20*\x20L.H^3)\x20didn\x27t\x20take\x20into\x20account\x20roughness\x0a\x09\x09//\x20//\x20and\x20produced\x20extremely\x20bright\x20specular\x20at\x20grazing\x20angles\x0a\x0a\x09\x09//\x20half\x20invV\x20=\x20lh\x20*\x20lh\x20*\x20smoothness\x20+\x20perceptualRoughness\x20*\x20perceptualRoughness;\x20//\x20approx\x20ModifiedKelemenVisibilityTerm(lh,\x20perceptualRoughness);\x0a\x09\x09//\x20half\x20invF\x20=\x20lh;\x0a\x0a\x09\x09//\x20half\x20specularTerm\x20=\x20((specularPower\x20+\x201)\x20*\x20pow\x20(nh,\x20specularPower))\x20/\x20(8\x20*\x20invV\x20*\x20invF\x20+\x201e-4h);\x0a\x0a\x09\x09//\x20#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09\x09//\x20\x09specularTerm\x20=\x20sqrt(max(1e-4f,\x20specularTerm));\x0a\x09\x09//\x20#endif\x0a\x09//\x20#endif\x0a\x0a\x09//\x20#if\x20defined\x20(SHADER_API_MOBILE)\x0a\x09\x09specularTerm\x20=\x20clamp(specularTerm,\x200.0,\x20100.0);\x20//\x20Prevent\x20FP16\x20overflow\x20on\x20mobiles\x0a\x09//\x20#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20mediump\x20vec3\x20color\x20=\x20(diffColor\x20+\x20specularTerm\x20*\x20specColor)\x20*\x20light.color\x20*\x20nl;\x0a\x0a\x20\x20\x20\x20return\x20vec4(color,\x201.0);\x0a}\x0a\x0amediump\x20vec4\x20layaBRDFLowGI\x20(mediump\x20vec3\x20diffColor,\x20mediump\x20vec3\x20specColor,mediump\x20float\x20oneMinusReflectivity,mediump\x20float\x20smoothness,float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,vec3\x20viewDir,LayaGI\x20gi)\x0a{\x0a\x09//\x20surfaceReduction\x20=\x20Int\x20D(NdotH)\x20*\x20NdotH\x20*\x20Id(NdotL>0)\x20dH\x20=\x201/(realRoughness^2+1)\x0a\x0a\x20\x20\x20\x20//\x201-0.28*x^3\x20as\x20approximation\x20for\x20(1/(x^4+1))^(1/2.2)\x20on\x20the\x20domain\x20[0;1]\x0a\x20\x20\x20\x20//\x201-x^3*(0.6-0.08*x)\x20\x20\x20approximation\x20for\x201/(x^4+1)\x0a\x09//\x20#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09\x09mediump\x20float\x20surfaceReduction\x20=\x200.28;\x0a\x09//\x20#else\x0a\x09\x09//\x20mediump\x20float\x20surfaceReduction\x20=\x20(0.6-0.08*perceptualRoughness);\x0a\x09//\x20#endif\x0a\x0a\x20\x20\x20\x20surfaceReduction\x20=\x201.0\x20-\x20roughness*perceptualRoughness*surfaceReduction;\x0a\x0a\x09mediump\x20float\x20grazingTerm\x20=\x20clamp(smoothness\x20+\x20(1.0-oneMinusReflectivity),0.0,1.0);\x0a\x09mediump\x20vec3\x20color\x20=gi.diffuse\x20*\x20diffColor+\x20surfaceReduction\x20*\x20gi.specular\x20*\x20fresnelLerpFast\x20(specColor,\x20vec3(grazingTerm),\x20nv);\x0a\x0a\x20\x20\x20\x20return\x20vec4(color,\x201.0);\x0a}\x0a//\x20BRDF2-------------------------------------------------------------------------------------',
        'PBRVertex.glsl',
        'LayaUtile.glsl',
        '\x0d\x0a\x0d\x0a//SimpleSkinnedMesh\x0d\x0a#ifdef\x20SIMPLEBONE\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09attribute\x20vec4\x20a_SimpleTextureParams;\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec4\x20u_SimpleAnimatorParams;\x0d\x0a\x09#endif\x0d\x0a\x09uniform\x20sampler2D\x20u_SimpleAnimatorTexture;\x0d\x0a\x0d\x0a\x09uniform\x20float\x20u_SimpleAnimatorTextureSize;\x20\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20SIMPLEBONE\x0d\x0a\x09mat4\x20loadMatFromTexture(float\x20FramePos,int\x20boneIndices,float\x20offset)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20uv;\x0d\x0a\x09\x09float\x20PixelPos\x20=\x20FramePos+float(boneIndices)*4.0;\x0d\x0a\x09\x09float\x20halfOffset\x20=\x20offset\x20*\x200.5;\x0d\x0a\x09\x09float\x20uvoffset\x20=\x20PixelPos/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09uv.y\x20=\x20floor(uvoffset)*offset+halfOffset;\x0d\x0a\x09\x09uv.x\x20=\x20mod(float(PixelPos),u_SimpleAnimatorTextureSize)*offset+halfOffset;\x0d\x0a\x09\x09vec4\x20mat0row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09uv.x+=offset;\x0d\x0a\x09\x09vec4\x20mat1row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09uv.x+=offset;\x0d\x0a\x09\x09vec4\x20mat2row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09uv.x+=offset;\x0d\x0a\x09\x09vec4\x20mat3row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09mat4\x20m\x20=mat4(mat0row.x,mat0row.y,mat0row.z,mat0row.w,\x0d\x0a\x09\x09\x09\x09mat1row.x,mat1row.y,mat1row.z,mat1row.w,\x0d\x0a\x09\x09\x09\x09mat2row.x,mat2row.y,mat2row.z,mat2row.w,\x0d\x0a\x09\x09\x09\x09mat3row.x,mat3row.y,mat3row.z,mat3row.w);\x0d\x0a\x09\x09return\x20m;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a',
        'DepthNormalUtil.glsl',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22\x0d\x0a#include\x20\x22Shadow.glsl\x22;\x0d\x0a\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIFFUSEMAP)||defined(THICKNESSMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(LIGHTMAP)&&defined(UV1)\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord1;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09uniform\x20vec4\x20u_LightmapScaleOffset;\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOR\x0d\x0a\x09attribute\x20vec4\x20a_Color;\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0avarying\x20vec3\x20v_Normal;\x20\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09uniform\x20vec3\x20u_CameraPos;\x0d\x0a\x09varying\x20vec3\x20v_ViewDir;\x20\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(NORMALMAP)\x0d\x0a\x09attribute\x20vec4\x20a_Tangent0;\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=\x20u_ViewProjection\x20*\x20worldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x20\x20\x0d\x0a\x09v_Normal=normalize(a_Normal*worldInvMat);\x0d\x0a\x09#if\x20defined(NORMALMAP)\x0d\x0a\x09\x09v_Tangent=normalize(a_Tangent0.xyz*worldInvMat);\x0d\x0a\x09\x09v_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09\x09vec3\x20positionWS=(worldMat*position).xyz;\x0d\x0a\x09\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09v_ViewDir\x20=\x20u_CameraPos-positionWS;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09\x09\x09v_PositionWorld\x20=\x20positionWS;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIFFUSEMAP)||defined(THICKNESSMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\x0d\x0a\x09\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09#ifdef\x20UV1\x0d\x0a\x09\x09\x09v_LightMapUV=vec2(a_Texcoord1.x,1.0-a_Texcoord1.y)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09v_LightMapUV=vec2(a_Texcoord0.x,1.0-a_Texcoord0.y)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\x0d\x0a\x09\x09#endif\x20\x0d\x0a\x09\x09v_LightMapUV.y=1.0-v_LightMapUV.y;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09v_Color=a_Color;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09\x09v_ShadowCoord\x20=getShadowCoord(vec4(positionWS,1.0));\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09v_SpotShadowCoord\x20=\x20u_SpotViewProjectMatrix*vec4(positionWS,1.0);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        'LineShader',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0auniform\x20vec4\x20u_Color;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x20\x20gl_FragColor\x20=\x20v_Color\x20*\x20u_Color;\x20\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0aattribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=u_ViewProjection\x20*\x20a_WorldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09v_Color\x20=\x20a_Color;\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0aattribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOR\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=\x20u_ViewProjection\x20*\x20a_WorldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x09\x09\x0d\x0a\x09#ifdef\x20COLOR\x0d\x0a\x09\x09v_Color\x20=\x20a_Color;\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOR\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20MAINTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_AlbedoTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_AlbedoColor;\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20color\x20=\x20\x202.0\x20*\x20u_AlbedoColor;\x0d\x0a\x09#ifdef\x20COLOR\x0d\x0a\x09\x09color\x20*=\x20v_Color;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20MAINTEXTURE\x0d\x0a\x09\x09color\x20*=\x20texture2D(u_AlbedoTexture,\x20v_Texcoord0);\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact\x20=\x20clamp((1.0\x20/\x20gl_FragCoord.w\x20-\x20u_FogStart)\x20/\x20u_FogRange,\x200.0,\x201.0);\x0d\x0a\x09\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20vec3(0.0),\x20lerpFact);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20u_FogColor,\x20lerpFact);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0a',
        'PARTICLE_ENDCOLOR0',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x20\x20precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x20\x20precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0avarying\x20vec2\x20v_TextureCoordinate;\x0d\x0auniform\x20sampler2D\x20u_texture;\x0d\x0auniform\x20vec4\x20u_Tintcolor;\x0d\x0a\x0d\x0a#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09varying\x20vec4\x20v_MeshColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x09\x0d\x0a\x09#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09\x09gl_FragColor=v_MeshColor;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_FragColor=vec4(1.0);\x09\x0d\x0a\x09#endif\x0d\x0a\x09\x09\x0d\x0a\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09#ifdef\x20TINTCOLOR\x0d\x0a\x09\x09\x09gl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*u_Tintcolor*2.0*v_Color;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*v_Color;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20TINTCOLOR\x0d\x0a\x09\x09\x09gl_FragColor*=u_Tintcolor*2.0*v_Color;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor*=v_Color;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09\x09\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Texcoord;\x0d\x0a\x0d\x0auniform\x20samplerCube\x20u_CubeTexture;\x0d\x0auniform\x20float\x20u_Exposure;\x0d\x0auniform\x20vec4\x20u_TintColor;\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x09\x0d\x0a\x09vec3\x20color=textureCube(u_CubeTexture,\x20v_Texcoord).rgb*u_TintColor.rgb*u_Exposure*2.0;\x0d\x0a\x09gl_FragColor=vec4(color,1.0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0a#define\x20OUTER_RADIUS\x201.025\x0d\x0a#define\x20RAYLEIGH\x20(mix(0.0,\x200.0025,\x20pow(u_AtmosphereThickness,2.5)))//\x20Rayleigh\x20constant\x20Rayleigh为夜空光和极光亮度单位\x0d\x0a#define\x20MIE\x200.0010\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20Mie\x20constant\x20米氏散射\x0d\x0a#define\x20SUN_BRIGHTNESS\x2020.0\x20\x20\x20\x20//\x20Sun\x20brightness\x0d\x0a#define\x20MAX_SCATTER\x2050.0\x20//\x20Maximum\x20scattering\x20value,\x20to\x20prevent\x20math\x20overflows\x20on\x20Adrenos\x0d\x0a\x0d\x0aconst\x20float\x20SKY_GROUND_THRESHOLD\x20=\x200.02;\x0d\x0aconst\x20float\x20outerRadius\x20=\x20OUTER_RADIUS;\x0d\x0aconst\x20float\x20outerRadius2\x20=\x20OUTER_RADIUS*OUTER_RADIUS;\x0d\x0aconst\x20float\x20innerRadius\x20=\x201.0;\x0d\x0aconst\x20float\x20innerRadius2\x20=\x201.0;\x0d\x0aconst\x20float\x20cameraHeight\x20=\x200.0001;\x0d\x0a\x0d\x0aconst\x20float\x20HDSundiskIntensityFactor\x20=\x2015.0;\x0d\x0aconst\x20float\x20simpleSundiskIntensityFactor\x20=\x2027.0;\x0d\x0a\x0d\x0aconst\x20float\x20sunScale\x20=\x20400.0\x20*\x20SUN_BRIGHTNESS;\x0d\x0aconst\x20float\x20kmESun\x20=\x20MIE\x20*\x20SUN_BRIGHTNESS;\x0d\x0aconst\x20float\x20km4PI\x20=\x20MIE\x20*\x204.0\x20*\x203.14159265;\x0d\x0aconst\x20float\x20scale\x20=\x201.0\x20/\x20(OUTER_RADIUS\x20-\x201.0);\x0d\x0aconst\x20float\x20scaleDepth\x20=\x200.25;\x0d\x0aconst\x20float\x20scaleOverScaleDepth\x20=\x20(1.0\x20/\x20(OUTER_RADIUS\x20-\x201.0))\x20/\x200.25;\x0d\x0aconst\x20float\x20samples\x20=\x202.0;\x20//\x20THIS\x20IS\x20UNROLLED\x20MANUALLY,\x20DON\x27T\x20TOUCH\x0d\x0a\x0d\x0a//\x20RGB\x20wavelengths\x20\x20\x20\x20\x20\x20\x20\x20.35\x20(.62=158),\x20.43\x20(.68=174),\x20.525\x20(.75=190)\x0d\x0aconst\x20vec3\x20c_DefaultScatteringWavelength\x20=\x20vec3(0.65,\x200.57,\x200.475);//默认散射波长\x0d\x0aconst\x20vec3\x20c_VariableRangeForScatteringWavelength\x20=\x20vec3(0.15,\x200.15,\x200.15);//散射播放的可变范围\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0auniform\x20vec3\x20u_SkyTint;\x0d\x0auniform\x20vec3\x20u_GroundTint;\x0d\x0auniform\x20float\x20u_Exposure;\x0d\x0auniform\x20float\x20u_AtmosphereThickness;\x0d\x0auniform\x20DirectionLight\x20u_SunLight;\x0d\x0a\x0d\x0avarying\x20vec3\x20v_GroundColor;\x0d\x0avarying\x20vec3\x20v_SkyColor;\x0d\x0a\x0d\x0a#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09varying\x20vec3\x20v_Vertex;\x0d\x0a#elif\x20defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_RayDir;\x0d\x0a#else\x0d\x0a\x09varying\x20float\x20v_SkyGroundFactor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_SunColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a//\x20Calculates\x20the\x20Rayleigh\x20phase\x20function\x0d\x0afloat\x20getRayleighPhase(vec3\x20light,\x20vec3\x20ray)\x20\x0d\x0a{\x0d\x0a\x09float\x20eyeCos\x20=\x20dot(light,\x20ray);\x0d\x0a\x09return\x200.75\x20+\x200.75*eyeCos*eyeCos;\x0d\x0a}\x0d\x0a\x0d\x0afloat\x20scaleAngle(float\x20inCos)\x0d\x0a{\x0d\x0a\x09float\x20x\x20=\x201.0\x20-\x20inCos;\x0d\x0a\x09return\x200.25\x20*\x20exp(-0.00287\x20+\x20x*(0.459\x20+\x20x*(3.83\x20+\x20x*(-6.80\x20+\x20x*5.25))));\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main\x20()\x20{\x0d\x0a\x09gl_Position\x20=\x20u_ViewProjection*a_Position;\x0d\x0a\x0d\x0a\x09vec3\x20skyTintInGammaSpace\x20=\x20u_SkyTint;//支持非GAMMA空间后要调整\x0d\x0a\x09vec3\x20scatteringWavelength\x20=\x20mix(c_DefaultScatteringWavelength-c_VariableRangeForScatteringWavelength,c_DefaultScatteringWavelength+c_VariableRangeForScatteringWavelength,vec3(1.0)\x20-\x20skyTintInGammaSpace);\x20//\x20using\x20Tint\x20in\x20sRGB+\x20gamma\x20allows\x20for\x20more\x20visually\x20linear\x20interpolation\x20and\x20to\x20keep\x20(0.5)\x20at\x20(128,\x20gray\x20in\x20sRGB)\x20point\x0d\x0a\x09vec3\x20invWavelength\x20=\x201.0\x20/\x20pow(scatteringWavelength,\x20vec3(4.0));\x0d\x0a\x0d\x0a\x09float\x20krESun\x20=\x20RAYLEIGH\x20*\x20SUN_BRIGHTNESS;\x0d\x0a\x09float\x20kr4PI\x20=\x20RAYLEIGH\x20*\x204.0\x20*\x203.14159265;\x0d\x0a\x0d\x0a\x09vec3\x20cameraPos\x20=\x20vec3(0.0,innerRadius\x20+\x20cameraHeight,0.0);\x20//\x20The\x20camera\x27s\x20current\x20position\x0d\x0a\x0d\x0a\x09//\x20Get\x20the\x20ray\x20from\x20the\x20camera\x20to\x20the\x20vertex\x20and\x20its\x20length\x20(which\x20is\x20the\x20far\x20point\x20of\x20the\x20ray\x20passing\x20through\x20the\x20atmosphere)\x0d\x0a\x09vec3\x20eyeRay\x20=\x20normalize(a_Position.xyz);\x0d\x0a\x0d\x0a\x09float\x20far\x20=\x200.0;\x0d\x0a\x09vec3\x20cIn,\x20cOut;\x0d\x0a\x09if\x20(eyeRay.y\x20>=\x200.0)\x20{//\x20Sky\x0d\x0a\x09\x09//\x20Calculate\x20the\x20length\x20of\x20the\x20\x22atmosphere\x22\x0d\x0a\x09\x09far\x20=\x20sqrt(outerRadius2\x20+\x20innerRadius2\x20*\x20eyeRay.y\x20*\x20eyeRay.y\x20-\x20innerRadius2)\x20-\x20innerRadius\x20*\x20eyeRay.y;\x0d\x0a\x0d\x0a\x09\x09//\x20Calculate\x20the\x20ray\x27s\x20starting\x20position,\x20then\x20calculate\x20its\x20scattering\x20offset\x0d\x0a\x09\x09float\x20height\x20=\x20innerRadius\x20+\x20cameraHeight;\x0d\x0a\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20-cameraHeight);\x0d\x0a\x09\x09float\x20startAngle\x20=\x20dot(eyeRay,\x20cameraPos)\x20/\x20height;\x0d\x0a\x09\x09float\x20startOffset\x20=\x20depth*scaleAngle(startAngle);\x0d\x0a\x0d\x0a\x09\x09//\x20Initialize\x20the\x20scattering\x20loop\x20variables\x0d\x0a\x09\x09float\x20sampleLength\x20=\x20far\x20/\x20samples;\x0d\x0a\x09\x09float\x20scaledLength\x20=\x20sampleLength\x20*\x20scale;\x0d\x0a\x09\x09vec3\x20sampleRay\x20=\x20eyeRay\x20*\x20sampleLength;\x0d\x0a\x09\x09vec3\x20samplePoint\x20=\x20cameraPos\x20+\x20sampleRay\x20*\x200.5;\x0d\x0a\x0d\x0a\x09\x09vec3\x20frontColor\x20=\x20vec3(0.0);\x0d\x0a\x09\x09//unrolling\x20this\x20manually\x20to\x20avoid\x20some\x20platform\x20for\x20loop\x20slow\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09float\x20height\x20=\x20length(samplePoint);\x0d\x0a\x09\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20(innerRadius\x20-\x20height));\x0d\x0a\x09\x09\x09float\x20lightAngle\x20=\x20dot(-u_SunLight.direction,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20cameraAngle\x20=\x20dot(eyeRay,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20scatter\x20=\x20(startOffset\x20+\x20depth*(scaleAngle(lightAngle)\x20-\x20scaleAngle(cameraAngle)));\x0d\x0a\x09\x09\x09vec3\x20attenuate\x20=\x20exp(-clamp(scatter,\x200.0,\x20MAX_SCATTER)\x20*\x20(invWavelength\x20*\x20kr4PI\x20+\x20km4PI));\x0d\x0a\x0d\x0a\x09\x09\x09frontColor\x20+=\x20attenuate\x20*\x20(depth\x20*\x20scaledLength);\x0d\x0a\x09\x09\x09samplePoint\x20+=\x20sampleRay;\x0d\x0a\x09\x09}\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09float\x20height\x20=\x20length(samplePoint);\x0d\x0a\x09\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20(innerRadius\x20-\x20height));\x0d\x0a\x09\x09\x09float\x20lightAngle\x20=\x20dot(-u_SunLight.direction,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20cameraAngle\x20=\x20dot(eyeRay,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20scatter\x20=\x20(startOffset\x20+\x20depth*(scaleAngle(lightAngle)\x20-\x20scaleAngle(cameraAngle)));\x0d\x0a\x09\x09\x09vec3\x20attenuate\x20=\x20exp(-clamp(scatter,\x200.0,\x20MAX_SCATTER)\x20*\x20(invWavelength\x20*\x20kr4PI\x20+\x20km4PI));\x0d\x0a\x0d\x0a\x09\x09\x09frontColor\x20+=\x20attenuate\x20*\x20(depth\x20*\x20scaledLength);\x0d\x0a\x09\x09\x09samplePoint\x20+=\x20sampleRay;\x0d\x0a\x09\x09}\x0d\x0a\x0d\x0a\x09\x09//\x20Finally,\x20scale\x20the\x20Mie\x20and\x20Rayleigh\x20colors\x20and\x20set\x20up\x20the\x20varying\x20variables\x20for\x20the\x20pixel\x20shader\x0d\x0a\x09\x09cIn\x20=\x20frontColor\x20*\x20(invWavelength\x20*\x20krESun);\x0d\x0a\x09\x09cOut\x20=\x20frontColor\x20*\x20kmESun;\x0d\x0a\x09}\x20else\x20{//\x20Ground\x0d\x0a\x09\x09far\x20=\x20(-cameraHeight)\x20/\x20(min(-0.001,\x20eyeRay.y));\x0d\x0a\x09\x09vec3\x20pos\x20=\x20cameraPos\x20+\x20far\x20*\x20eyeRay;\x0d\x0a\x0d\x0a\x09\x09//\x20Calculate\x20the\x20ray\x27s\x20starting\x20position,\x20then\x20calculate\x20its\x20scattering\x20offset\x0d\x0a\x09\x09float\x20depth\x20=\x20exp((-cameraHeight)\x20*\x20(1.0/scaleDepth));\x0d\x0a\x09\x09float\x20cameraAngle\x20=\x20dot(-eyeRay,\x20pos);\x0d\x0a\x09\x09float\x20lightAngle\x20=\x20dot(-u_SunLight.direction,\x20pos);\x0d\x0a\x09\x09float\x20cameraScale\x20=\x20scaleAngle(cameraAngle);\x0d\x0a\x09\x09float\x20lightScale\x20=\x20scaleAngle(lightAngle);\x0d\x0a\x09\x09float\x20cameraOffset\x20=\x20depth*cameraScale;\x0d\x0a\x09\x09float\x20temp\x20=\x20lightScale\x20+\x20cameraScale;\x0d\x0a\x0d\x0a\x09\x09//\x20Initialize\x20the\x20scattering\x20loop\x20variables\x0d\x0a\x09\x09float\x20sampleLength\x20=\x20far\x20/\x20samples;\x0d\x0a\x09\x09float\x20scaledLength\x20=\x20sampleLength\x20*\x20scale;\x0d\x0a\x09\x09vec3\x20sampleRay\x20=\x20eyeRay\x20*\x20sampleLength;\x0d\x0a\x09\x09vec3\x20samplePoint\x20=\x20cameraPos\x20+\x20sampleRay\x20*\x200.5;\x0d\x0a\x0d\x0a\x09\x09//\x20Now\x20loop\x20through\x20the\x20sample\x20rays\x0d\x0a\x09\x09vec3\x20frontColor\x20=\x20vec3(0.0,\x200.0,\x200.0);\x0d\x0a\x09\x09vec3\x20attenuate;\x0d\x0a\x0d\x0a\x09\x09//\x20Loop\x20removed\x20because\x20we\x20kept\x20hitting\x20SM2.0\x20temp\x20variable\x20limits.\x20Doesn\x27t\x20affect\x20the\x20image\x20too\x20much.\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09float\x20height\x20=\x20length(samplePoint);\x0d\x0a\x09\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20(innerRadius\x20-\x20height));\x0d\x0a\x09\x09\x09float\x20scatter\x20=\x20depth*temp\x20-\x20cameraOffset;\x0d\x0a\x09\x09\x09attenuate\x20=\x20exp(-clamp(scatter,\x200.0,\x20MAX_SCATTER)\x20*\x20(invWavelength\x20*\x20kr4PI\x20+\x20km4PI));\x0d\x0a\x09\x09\x09frontColor\x20+=\x20attenuate\x20*\x20(depth\x20*\x20scaledLength);\x0d\x0a\x09\x09\x09samplePoint\x20+=\x20sampleRay;\x0d\x0a\x09\x09}\x0d\x0a\x0d\x0a\x09\x09cIn\x20=\x20frontColor\x20*\x20(invWavelength\x20*\x20krESun\x20+\x20kmESun);\x0d\x0a\x09\x09cOut\x20=\x20clamp(attenuate,\x200.0,\x201.0);\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09\x09v_Vertex\x20=\x20-a_Position.xyz;\x0d\x0a\x09#elif\x20defined(SUN_SIMPLE)\x20\x0d\x0a\x09\x09v_RayDir\x20=\x20-eyeRay;\x0d\x0a\x09#else\x0d\x0a\x09\x09v_SkyGroundFactor\x20=\x20-eyeRay.y\x20/\x20SKY_GROUND_THRESHOLD;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09//\x20if\x20we\x20want\x20to\x20calculate\x20color\x20in\x20vprog:\x0d\x0a\x09//\x20in\x20case\x20of\x20linear:\x20multiply\x20by\x20_Exposure\x20in\x20here\x20(even\x20in\x20case\x20of\x20lerp\x20it\x20will\x20be\x20common\x20multiplier,\x20so\x20we\x20can\x20skip\x20mul\x20in\x20fshader)\x0d\x0a\x09v_GroundColor\x20=\x20u_Exposure\x20*\x20(cIn\x20+\x20u_GroundTint*u_GroundTint\x20*\x20cOut);//u_GroundColor*u_GroundColor\x20is\x20gamma\x20space\x20convert\x20to\x20linear\x20space\x0d\x0a\x09v_SkyColor\x20\x20\x20\x20=\x20u_Exposure\x20*\x20(cIn\x20*\x20getRayleighPhase(-u_SunLight.direction,\x20-eyeRay));\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09//\x20The\x20sun\x20should\x20have\x20a\x20stable\x20intensity\x20in\x20its\x20course\x20in\x20the\x20sky.\x20Moreover\x20it\x20should\x20match\x20the\x20highlight\x20of\x20a\x20purely\x20specular\x20material.\x0d\x0a\x09//\x20This\x20matching\x20was\x20done\x20using\x20the\x20Unity3D\x20standard\x20shader\x20BRDF1\x20on\x20the\x205/31/2017\x0d\x0a\x09//\x20Finally\x20we\x20want\x20the\x20sun\x20to\x20be\x20always\x20bright\x20even\x20in\x20LDR\x20thus\x20the\x20normalization\x20of\x20the\x20lightColor\x20for\x20low\x20intensity.\x0d\x0a\x09float\x20lightColorIntensity\x20=\x20clamp(length(u_SunLight.color),\x200.25,\x201.0);\x0d\x0a\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x20\x0d\x0a\x09\x09v_SunColor\x20=\x20HDSundiskIntensityFactor\x20*\x20clamp(cOut,0.0,1.0)\x20*\x20u_SunLight.color\x20/\x20lightColorIntensity;\x0d\x0a\x09#elif\x20defined(SUN_SIMPLE)\x20\x0d\x0a\x09\x09v_SunColor\x20=\x20simpleSundiskIntensityFactor\x20*\x20clamp(cOut\x20*\x20sunScale,0.0,1.0)\x20*\x20u_SunLight.color\x20/\x20lightColorIntensity;\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aconst\x20float\x20MIE_G\x20=\x20-0.990;\x0d\x0aconst\x20float\x20MIE_G2\x20=\x200.9801;\x0d\x0aconst\x20float\x20SKY_GROUND_THRESHOLD\x20=\x200.02;\x0d\x0a\x0d\x0auniform\x20float\x20u_SunSize;\x0d\x0auniform\x20float\x20u_SunSizeConvergence;\x0d\x0auniform\x20DirectionLight\x20u_SunLight;\x0d\x0a\x0d\x0a\x0d\x0avarying\x20vec3\x20v_GroundColor;\x0d\x0avarying\x20vec3\x20v_SkyColor;\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09varying\x20vec3\x20v_Vertex;\x0d\x0a#elif\x20defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_RayDir;\x0d\x0a#else\x0d\x0a\x09varying\x20float\x20v_SkyGroundFactor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_SunColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a//\x20Calculates\x20the\x20Mie\x20phase\x20function\x0d\x0afloat\x20getMiePhase(float\x20eyeCos,\x20float\x20eyeCos2)\x20{\x0d\x0a\x09float\x20temp\x20=\x201.0\x20+\x20MIE_G2\x20-\x202.0\x20*\x20MIE_G\x20*\x20eyeCos;\x0d\x0a\x09temp\x20=\x20pow(temp,\x20pow(u_SunSize,0.65)\x20*\x2010.0);\x0d\x0a\x09temp\x20=\x20max(temp,1.0e-4);\x20//\x20prevent\x20division\x20by\x20zero,\x20esp.\x20in\x20half\x20precision\x0d\x0a\x09temp\x20=\x201.5\x20*\x20((1.0\x20-\x20MIE_G2)\x20/\x20(2.0\x20+\x20MIE_G2))\x20*\x20(1.0\x20+\x20eyeCos2)\x20/\x20temp;\x0d\x0a\x09return\x20temp;\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Calculates\x20the\x20sun\x20shape\x0d\x0afloat\x20calcSunAttenuation(vec3\x20lightPos,\x20vec3\x20ray)\x20{\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09\x09float\x20focusedEyeCos\x20=\x20pow(clamp(dot(lightPos,\x20ray),0.0,1.0),\x20u_SunSizeConvergence);\x0d\x0a\x09\x09return\x20getMiePhase(-focusedEyeCos,\x20focusedEyeCos\x20*\x20focusedEyeCos);\x0d\x0a\x09#else\x20//SUN_SIMPLE\x0d\x0a\x09\x09vec3\x20delta\x20=\x20lightPos\x20-\x20ray;\x0d\x0a\x09\x09float\x20dist\x20=\x20length(delta);\x0d\x0a\x09\x09float\x20spot\x20=\x201.0\x20-\x20smoothstep(0.0,\x20u_SunSize,\x20dist);\x0d\x0a\x09\x09return\x20spot\x20*\x20spot;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09//\x20if\x20y\x20>\x201\x20[eyeRay.y\x20<\x20-SKY_GROUND_THRESHOLD]\x20-\x20ground\x0d\x0a\x09//\x20if\x20y\x20>=\x200\x20and\x20<\x201\x20[eyeRay.y\x20<=\x200\x20and\x20>\x20-SKY_GROUND_THRESHOLD]\x20-\x20horizon\x0d\x0a\x09//\x20if\x20y\x20<\x200\x20[eyeRay.y\x20>\x200]\x20-\x20sky\x0d\x0a\x09vec3\x20col\x20=\x20vec3(0.0,\x200.0,\x200.0);\x0d\x0a\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09\x09vec3\x20ray\x20=\x20normalize(v_Vertex);\x0d\x0a\x09\x09float\x20y\x20=\x20ray.y\x20/\x20SKY_GROUND_THRESHOLD;\x0d\x0a\x09#elif\x20defined(SUN_SIMPLE)\x20\x0d\x0a\x09\x09vec3\x20ray\x20=\x20v_RayDir;\x0d\x0a\x09\x09float\x20y\x20=\x20ray.y\x20/\x20SKY_GROUND_THRESHOLD;\x09\x0d\x0a\x09#else\x0d\x0a\x09\x09float\x20y\x20=\x20v_SkyGroundFactor;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09//\x20if\x20we\x20did\x20precalculate\x20color\x20in\x20vprog:\x20just\x20do\x20lerp\x20between\x20them\x0d\x0a\x09col\x20=\x20mix(v_SkyColor,\x20v_GroundColor,\x20clamp(y,0.0,1.0));\x0d\x0a\x0d\x0a\x09#if\x20defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\x0d\x0a\x09\x09if\x20(y\x20<\x200.0)\x0d\x0a\x09\x09\x09col\x20+=\x20v_SunColor\x20*\x20calcSunAttenuation(-u_SunLight.direction,\x20-ray);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09col\x20=\x20sqrt(col);//linear\x20space\x20convert\x20to\x20gamma\x20space\x0d\x0a\x09gl_FragColor=vec4(col,1.0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x0d\x0auniform\x20mat4\x20u_MvpMatrix;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\x0d\x0a\x09attribute\x20vec3\x20a_Normal;\x0d\x0a\x09varying\x20vec3\x20v_Normal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(CALCULATE_SHADOWS)&&defined(SHADOWMAP_PSSM1))\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a\x09uniform\x20vec4\x20u_LightmapScaleOffset;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)//shader���Զ���ĺ겻����ifdef\x20����ĳ�if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20a_Position;\x0d\x0a\x20\x20\x0d\x0a\x09v_Texcoord0\x20=\x20a_Texcoord0;\x0d\x0a\x20\x20\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09v_LightMapUV\x20=\x20vec2(a_Texcoord0.x,\x201.0\x20-\x20a_Texcoord0.y)\x20*\x20u_LightmapScaleOffset.xy\x20+\x20u_LightmapScaleOffset.zw;\x0d\x0a\x09\x09v_LightMapUV.y\x20=\x201.0\x20-\x20v_LightMapUV.y;\x0d\x0a\x09#endif\x0d\x0a\x20\x20\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09v_Normal\x20=\x20a_Normal;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(CALCULATE_SHADOWS)&&defined(SHADOWMAP_PSSM1))\x0d\x0a\x09\x09v_PositionWorld=(u_WorldMat*a_Position).xyz;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)//shader���Զ���ĺ겻����ifdef\x20����ĳ�if\x20defined\x0d\x0a\x09\x09v_ShadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld));\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\x0d\x0a\x09uniform\x20vec3\x20u_CameraPos;\x0d\x0a\x09varying\x20vec3\x20v_Normal;\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09uniform\x20DirectionLight\x20u_DirectionLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09uniform\x20PointLight\x20u_PointLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09uniform\x20SpotLight\x20u_SpotLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20mat4\x20u_View;\x0d\x0a\x09\x09uniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x09\x09uniform\x20vec4\x20u_Viewport;\x0d\x0a\x09\x09uniform\x20int\x20u_DirationLightCount;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightBuffer;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightClusterBuffer;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0avarying\x20float\x20v_posViewZ;\x0d\x0a\x0d\x0auniform\x20vec3\x20u_AmbientColor;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_SplatAlphaTexture;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture1;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture2;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture3;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture4;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture5;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset1;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset2;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset3;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset4;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset5;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09uniform\x20sampler2D\x20u_LightMap;\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20splatAlpha\x20=\x20vec4(1.0);\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM1\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM2\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20+\x20color2.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM3\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09vec4\x20color3\x20=\x20texture2D(u_DiffuseTexture3,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset3.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20\x20+\x20color2.xyz\x20*\x20splatAlpha.g\x20+\x20color3.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r\x20-\x20splatAlpha.g);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM4\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09vec4\x20color3\x20=\x20texture2D(u_DiffuseTexture3,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset3.xy);\x0d\x0a\x09\x09vec4\x20color4\x20=\x20texture2D(u_DiffuseTexture4,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset4.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20\x20+\x20color2.xyz\x20*\x20splatAlpha.g\x20+\x20color3.xyz\x20*\x20splatAlpha.b\x20+\x20color4.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r\x20-\x20splatAlpha.g\x20-\x20splatAlpha.b);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM5\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09vec4\x20color3\x20=\x20texture2D(u_DiffuseTexture3,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset3.xy);\x0d\x0a\x09\x09vec4\x20color4\x20=\x20texture2D(u_DiffuseTexture4,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset4.xy);\x0d\x0a\x09\x09vec4\x20color5\x20=\x20texture2D(u_DiffuseTexture5,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset5.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20\x20+\x20color2.xyz\x20*\x20splatAlpha.g\x20+\x20color3.xyz\x20*\x20splatAlpha.b\x20+\x20color4.xyz\x20*\x20splatAlpha.a\x20+\x20color5.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r\x20-\x20splatAlpha.g\x20-\x20splatAlpha.b\x20-\x20splatAlpha.a);\x0d\x0a\x09#endif\x0d\x0a\x09\x09gl_FragColor.w\x20=\x20splatAlpha.a;\x0d\x0a\x09\x09\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09vec3\x20normal\x20=\x20v_Normal;\x0d\x0a\x09\x09vec3\x20dif,\x20spe;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec3\x20diffuse\x20=\x20vec3(0.0);\x0d\x0a\x09vec3\x20specular=\x20vec3(0.0);\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\x0d\x0a\x09\x09vec3\x20toEye;\x0d\x0a\x09\x09#ifdef\x20FOG\x0d\x0a\x09\x09\x09toEye=u_CameraPos-v_PositionWorld;\x0d\x0a\x09\x09\x09float\x20toEyeLength=length(toEye);\x0d\x0a\x09\x09\x09toEye/=toEyeLength;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09toEye=normalize(u_CameraPos-v_PositionWorld);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongDiectionLight(vec3(0.0),1.0,normal,vec3(1.0),toEye,u_DirectionLight,dif,spe);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye,u_PointLight,dif,spe);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09#endif\x0d\x0a\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye,u_SpotLight,dif,spe);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09if(i\x20>=\x20u_DirationLightCount)\x0d\x0a\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09DirectionLight\x20directionLight\x20=\x20getDirectionLight(u_LightBuffer,i);\x0d\x0a\x09\x09\x09\x09LayaAirBlinnPhongDiectionLight(vec3(0.0),1.0,normal,vec3(1.0),toEye,directionLight,dif,spe);\x0d\x0a\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09ivec4\x20clusterInfo\x20=getClusterInfo(u_LightClusterBuffer,u_View,u_Viewport,\x20v_PositionWorld,gl_FragCoord,u_ProjectionParams);\x0d\x0a\x09\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.x)//PointLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09PointLight\x20pointLight\x20=\x20getPointLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye,pointLight,dif,spe);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.y)//SpotLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09SpotLight\x20spotLight\x20=\x20getSpotLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye\x09,spotLight,dif,spe);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0avec3\x20globalDiffuse\x20=\x20u_AmbientColor;\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09globalDiffuse\x20+=\x20decodeHDR(texture2D(u_LightMap,\x20v_LightMapUV),5.0);\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09float\x20shadowValue\x20=\x20shadowValue\x20=\x20sampleShadowmap(v_ShadowCoord);\x0d\x0a\x09gl_FragColor\x20=\x20vec4(gl_FragColor.rgb\x20*\x20(globalDiffuse\x20+\x20diffuse)\x20*\x20shadowValue,\x20gl_FragColor.a);\x0d\x0a#else\x0d\x0a\x09gl_FragColor\x20=\x20vec4(gl_FragColor.rgb\x20*\x20(globalDiffuse\x20+\x20diffuse),\x20gl_FragColor.a);\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09gl_FragColor.rgb\x20+=\x20specular\x20*\x20shadowValue;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_FragColor.rgb\x20+=\x20specular;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09float\x20lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\x0d\x0a#endif\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec3\x20a_Position;\x0d\x0aattribute\x20vec3\x20a_OffsetVector;\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0aattribute\x20float\x20a_Texcoord0X;\x0d\x0aattribute\x20float\x20a_Texcoord0Y;\x0d\x0aattribute\x20float\x20a_BirthTime;\x0d\x0a\x0d\x0auniform\x20mat4\x20u_View;\x0d\x0auniform\x20mat4\x20u_Projection;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0auniform\x20float\x20u_CurTime;\x0d\x0auniform\x20float\x20u_LifeTime;\x0d\x0auniform\x20vec4\x20u_WidthCurve[10];\x0d\x0auniform\x20int\x20u_WidthCurveKeyLength;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a\x0d\x0afloat\x20hermiteInterpolate(float\x20t,\x20float\x20outTangent,\x20float\x20inTangent,\x20float\x20duration,\x20float\x20value1,\x20float\x20value2)\x0d\x0a{\x0d\x0a\x09float\x20t2\x20=\x20t\x20*\x20t;\x0d\x0a\x09float\x20t3\x20=\x20t2\x20*\x20t;\x0d\x0a\x09float\x20a\x20=\x202.0\x20*\x20t3\x20-\x203.0\x20*\x20t2\x20+\x201.0;\x0d\x0a\x09float\x20b\x20=\x20t3\x20-\x202.0\x20*\x20t2\x20+\x20t;\x0d\x0a\x09float\x20c\x20=\x20t3\x20-\x20t2;\x0d\x0a\x09float\x20d\x20=\x20-2.0\x20*\x20t3\x20+\x203.0\x20*\x20t2;\x0d\x0a\x09return\x20a\x20*\x20value1\x20+\x20b\x20*\x20outTangent\x20*\x20duration\x20+\x20c\x20*\x20inTangent\x20*\x20duration\x20+\x20d\x20*\x20value2;\x0d\x0a}\x0d\x0a\x0d\x0afloat\x20getCurWidth(in\x20float\x20normalizeTime)\x0d\x0a{\x0d\x0a\x09float\x20width;\x0d\x0a\x09if(normalizeTime\x20==\x200.0){\x0d\x0a\x09\x09width=u_WidthCurve[0].w;\x0d\x0a\x09}\x0d\x0a\x09else\x20if(normalizeTime\x20>=\x201.0){\x0d\x0a\x09\x09width=u_WidthCurve[u_WidthCurveKeyLength\x20-\x201].w;\x0d\x0a\x09}\x0d\x0a\x09else{\x0d\x0a\x09\x09for(int\x20i\x20=\x200;\x20i\x20<\x2010;\x20i\x20++\x20)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09if(normalizeTime\x20==\x20u_WidthCurve[i].x){\x0d\x0a\x09\x09\x09\x09width=u_WidthCurve[i].w;\x0d\x0a\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09vec4\x20lastFrame\x20=\x20u_WidthCurve[i];\x0d\x0a\x09\x09\x09vec4\x20nextFrame\x20=\x20u_WidthCurve[i\x20+\x201];\x0d\x0a\x09\x09\x09if(normalizeTime\x20>\x20lastFrame.x\x20&&\x20normalizeTime\x20<\x20nextFrame.x)\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09float\x20duration\x20=\x20nextFrame.x\x20-\x20lastFrame.x;\x0d\x0a\x09\x09\x09\x09float\x20t\x20=\x20(normalizeTime\x20-\x20lastFrame.x)\x20/\x20duration;\x0d\x0a\x09\x09\x09\x09float\x20outTangent\x20=\x20lastFrame.z;\x0d\x0a\x09\x09\x09\x09float\x20inTangent\x20=\x20nextFrame.y;\x0d\x0a\x09\x09\x09\x09float\x20value1\x20=\x20lastFrame.w;\x0d\x0a\x09\x09\x09\x09float\x20value2\x20=\x20nextFrame.w;\x0d\x0a\x09\x09\x09\x09width=hermiteInterpolate(t,\x20outTangent,\x20inTangent,\x20duration,\x20value1,\x20value2);\x0d\x0a\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20width;\x0d\x0a}\x09\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09float\x20normalizeTime\x20=\x20(u_CurTime\x20-\x20a_BirthTime)\x20/\x20u_LifeTime;\x0d\x0a\x09\x0d\x0a\x09v_Texcoord0\x20=\x20vec2(a_Texcoord0X,\x201.0\x20-\x20a_Texcoord0Y)\x20*\x20u_TilingOffset.xy\x20+\x20u_TilingOffset.zw;\x0d\x0a\x09\x0d\x0a\x09v_Color\x20=\x20a_Color;\x0d\x0a\x09\x0d\x0a\x09vec3\x20cameraPos\x20=\x20(u_View*vec4(a_Position,1.0)).rgb;\x0d\x0a\x09gl_Position\x20=\x20u_Projection\x20*\x20vec4(cameraPos+a_OffsetVector\x20*\x20getCurWidth(normalizeTime),1.0);\x0d\x0a\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTexture;\x0d\x0auniform\x20vec4\x20u_MainColor;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20color\x20=\x202.0\x20*\x20u_MainColor\x20*\x20v_Color;\x0d\x0a\x09#ifdef\x20MAINTEXTURE\x0d\x0a\x09\x09vec4\x20mainTextureColor\x20=\x20texture2D(u_MainTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09color\x20*=\x20mainTextureColor;\x0d\x0a\x09#endif\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20',
        'WaterPrimary',
        '#include\x20\x22Lighting.glsl\x22;\x0a\x0aattribute\x20vec4\x20a_Position;\x0aattribute\x20vec3\x20a_Normal;\x0aattribute\x20vec4\x20a_Tangent0;\x0a\x0auniform\x20mat4\x20u_MvpMatrix;\x0auniform\x20mat4\x20u_WorldMat;\x0auniform\x20vec3\x20u_CameraPos;\x0auniform\x20float\x20u_WaveScale;\x0auniform\x20vec4\x20u_WaveSpeed;\x0auniform\x20float\x20u_Time;\x0a\x0avarying\x20vec3\x20v_Normal;\x0avarying\x20vec3\x20v_Tangent;\x0avarying\x20vec3\x20v_Binormal;\x0avarying\x20vec3\x20v_ViewDir;\x0avarying\x20vec2\x20v_Texcoord0;\x0avarying\x20vec2\x20v_Texcoord1;\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20positionWorld\x20=\x20u_WorldMat\x20*\x20a_Position;\x0a\x09vec4\x20position\x20=\x20u_MvpMatrix\x20*\x20a_Position;\x0a\x09\x0a\x09vec4\x20temp\x20=\x20vec4(positionWorld.x,\x20positionWorld.z,\x20positionWorld.x,\x20positionWorld.z)\x20*\x20u_WaveScale\x20+\x20u_WaveSpeed\x20*\x20u_WaveScale\x20*\x20u_Time;\x0a\x09\x0a\x09v_Texcoord0\x20=\x20temp.xy\x20*\x20vec2(0.4,\x200.45);\x0a\x09v_Texcoord1\x20=\x20temp.wz;\x0a\x09\x0a\x09mat3\x20worldMat\x20=\x20mat3(u_WorldMat);\x0a\x09v_Normal\x20=\x20worldMat\x20*\x20a_Normal;\x0a\x09v_Tangent\x20=\x20worldMat\x20*\x20a_Tangent0.xyz;\x0a\x09v_Binormal\x20=\x20cross(v_Normal,\x20v_Tangent)\x20*\x20a_Tangent0.w;\x0a\x09\x0a\x09v_ViewDir\x20=\x20u_CameraPos\x20-\x20positionWorld.xyz;\x0a\x09gl_Position\x20=\x20position;\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20MAINTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_MainTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_NormalTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_HorizonColor;\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Normal;\x0d\x0avarying\x20vec3\x20v_Tangent;\x0d\x0avarying\x20vec3\x20v_Binormal;\x0d\x0avarying\x20vec3\x20v_ViewDir;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0avarying\x20vec2\x20v_Texcoord1;\x0d\x0a\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0avec3\x20NormalSampleToWorldSpace(vec4\x20normalMapSample)\x20{\x0d\x0a\x09vec3\x20normalT;\x0d\x0a\x09normalT.x\x20=\x202.0\x20*\x20normalMapSample.x\x20-\x201.0;\x0d\x0a\x09normalT.y\x20=\x201.0\x20-\x202.0\x20*\x20normalMapSample.y;\x0d\x0a\x09normalT.z\x20=\x20sqrt(1.0\x20-\x20clamp(dot(normalT.xy,\x20normalT.xy),\x200.0,\x201.0));\x0d\x0a\x0d\x0a\x09vec3\x20bumpedNormal\x20=\x20normalize(normalT);\x0d\x0a\x0d\x0a\x09return\x20bumpedNormal;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20bumpColor1\x20=\x20texture2D(u_NormalTexture,\x20v_Texcoord0);\x0d\x0a\x09vec4\x20bumpColor2\x20=\x20texture2D(u_NormalTexture,\x20v_Texcoord1);\x0d\x0a\x0d\x0a\x09vec3\x20normal1\x20=\x20NormalSampleToWorldSpace(bumpColor1);\x0d\x0a\x09vec3\x20normal2\x20=\x20NormalSampleToWorldSpace(bumpColor2);\x0d\x0a\x09\x0d\x0a\x09vec3\x20normal\x20=\x20normalize((normal1\x20+\x20normal2)\x20*\x200.5);\x0d\x0a\x09vec3\x20viewDir\x20=\x20normalize(v_ViewDir);\x0d\x0a\x09float\x20fresnel\x20=\x20dot(viewDir,\x20normal);\x0d\x0a\x09\x0d\x0a\x09vec4\x20waterColor\x20=\x20texture2D(u_MainTexture,\x20vec2(fresnel,\x20fresnel));\x0d\x0a\x09\x0d\x0a\x09vec4\x20color;\x0d\x0a\x09color.rgb\x20=\x20mix(waterColor.rgb,\x20u_HorizonColor.rgb,\x20vec3(waterColor.a));\x0d\x0a\x09color.a\x20=\x20u_HorizonColor.a;\x0d\x0a\x09\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a',
        '#include\x20\x22Lighting.glsl\x22;\x0d\x0a#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0aattribute\x20vec4\x20a_PositionTexcoord;\x0d\x0auniform\x20vec4\x20u_OffsetScale;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x09\x0d\x0a\x09gl_Position\x20=\x20vec4(u_OffsetScale.x*2.0-1.0+(a_PositionTexcoord.x+1.0)*u_OffsetScale.z,(1.0-((u_OffsetScale.y*2.0-1.0+(-a_PositionTexcoord.y+1.0)*u_OffsetScale.w)+1.0)/2.0)*2.0-1.0,\x200.0,\x201.0);\x09\x0d\x0a\x09v_Texcoord0\x20=\x20a_PositionTexcoord.zw;\x0d\x0a\x09gl_Position\x20=\x20remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09gl_FragColor\x20=\x20texture2D(u_MainTex,\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        'DEPTHTEST_ALWAYS'
    ];
    _0x20c1 = function () {
        return _0x3d08c4;
    };
    return _0x20c1();
}
var _0x3117a1 = _0x1c7f;
function _0x1c7f(_0x363bc3, _0x264772) {
    var _0x20c193 = _0x20c1();
    return _0x1c7f = function (_0x1c7f2b, _0x599637) {
        _0x1c7f2b = _0x1c7f2b - 0x1e7;
        var _0x43950f = _0x20c193[_0x1c7f2b];
        return _0x43950f;
    }, _0x1c7f(_0x363bc3, _0x264772);
}
(function (_0x172b9a, _0x3e4cda) {
    var _0x4c221a = _0x1c7f, _0x30c874 = _0x172b9a();
    while (!![]) {
        try {
            var _0x1a9a09 = -parseInt(_0x4c221a(0x1e7)) / 0x1 + parseInt(_0x4c221a(0x1e8)) / 0x2 * (-parseInt(_0x4c221a(0x1e9)) / 0x3) + -parseInt(_0x4c221a(0x1ea)) / 0x4 + -parseInt(_0x4c221a(0x1eb)) / 0x5 + parseInt(_0x4c221a(0x1ec)) / 0x6 * (-parseInt(_0x4c221a(0x1ed)) / 0x7) + -parseInt(_0x4c221a(0x1ee)) / 0x8 + parseInt(_0x4c221a(0x1ef)) / 0x9;
            if (_0x1a9a09 === _0x3e4cda)
                break;
            else
                _0x30c874['push'](_0x30c874['shift']());
        } catch (_0x58883f) {
            _0x30c874['push'](_0x30c874['shift']());
        }
    }
}(_0x20c1, 0x353fe), !function (_0x18be32, _0x387b86) {
    'use strict';
    var _0x6027f5 = _0x1c7f;
    class _0x255128 {
        constructor() {
        }
        static ['isZero'](_0x3715f7) {
            var _0x5bf03a = _0x1c7f;
            return Math[_0x5bf03a(0x1f0)](_0x3715f7) < _0x255128['zeroTolerance'];
        }
        static ['nearEqual'](_0x4130f6, _0x5e4a64) {
            var _0x38fa91 = _0x1c7f;
            return !!_0x255128[_0x38fa91(0x1f1)](_0x4130f6 - _0x5e4a64);
        }
        static [_0x6027f5(0x1f2)](_0x2943f8) {
            var _0x3911c7 = _0x6027f5;
            return _0x255128[_0x3911c7(0x1f1)](_0x2943f8) ? _0x2943f8 : 0x1 / Math[_0x3911c7(0x1f3)](_0x2943f8);
        }
    }
    _0x255128[_0x6027f5(0x1f4)] = 0.000001, _0x255128[_0x6027f5(0x1f5)] = 0xffffff048ff9e8000000000000000000, _0x255128[_0x6027f5(0x1f6)] = -0xffffff048ff9e8000000000000000000, _0x255128[_0x6027f5(0x1f7)] = Math['PI'] / 0xb4;
    class _0x30a72c {
        constructor(_0x27453b = 0x0, _0x285356 = 0x0) {
            this['x'] = _0x27453b, this['y'] = _0x285356;
        }
        [_0x6027f5(0x1f8)](_0x5d286b, _0x2bc28b) {
            this['x'] = _0x5d286b, this['y'] = _0x2bc28b;
        }
        static [_0x6027f5(0x1f9)](_0x5a614d, _0x150172, _0x18d1b3) {
            _0x18d1b3['x'] = _0x5a614d['x'] * _0x150172, _0x18d1b3['y'] = _0x5a614d['y'] * _0x150172;
        }
        [_0x6027f5(0x1fa)](_0x2a207a, _0x4b17f8 = 0x0) {
            this['x'] = _0x2a207a[_0x4b17f8 + 0x0], this['y'] = _0x2a207a[_0x4b17f8 + 0x1];
        }
        [_0x6027f5(0x1fb)](_0x26f421, _0x523ee5 = 0x0) {
            _0x26f421[_0x523ee5 + 0x0] = this['x'], _0x26f421[_0x523ee5 + 0x1] = this['y'];
        }
        [_0x6027f5(0x1fc)](_0x501b67) {
            var _0x25f792 = _0x501b67;
            _0x25f792['x'] = this['x'], _0x25f792['y'] = this['y'];
        }
        static ['dot'](_0x59eeef, _0x5e1ae7) {
            return _0x59eeef['x'] * _0x5e1ae7['x'] + _0x59eeef['y'] * _0x5e1ae7['y'];
        }
        static ['normalize'](_0x3353b4, _0x1ac2c7) {
            var _0x3bb0ad = _0x6027f5, _0x56c18b = _0x3353b4['x'], _0xc07836 = _0x3353b4['y'], _0x224a46 = _0x56c18b * _0x56c18b + _0xc07836 * _0xc07836;
            _0x224a46 > 0x0 && (_0x224a46 = 0x1 / Math[_0x3bb0ad(0x1f3)](_0x224a46), _0x1ac2c7['x'] = _0x56c18b * _0x224a46, _0x1ac2c7['y'] = _0xc07836 * _0x224a46);
        }
        static ['scalarLength'](_0xef603b) {
            var _0xd64dee = _0x6027f5, _0x461e12 = _0xef603b['x'], _0x276e38 = _0xef603b['y'];
            return Math[_0xd64dee(0x1f3)](_0x461e12 * _0x461e12 + _0x276e38 * _0x276e38);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1c1113 = new _0x30a72c();
            return this['cloneTo'](_0x1c1113), _0x1c1113;
        }
        ['forNativeElement'](_0x2055e1 = null) {
            var _0x566b5f = _0x6027f5;
            _0x2055e1 ? (this[_0x566b5f(0x1fe)] = _0x2055e1, this[_0x566b5f(0x1fe)][0x0] = this['x'], this[_0x566b5f(0x1fe)][0x1] = this['y']) : this['elements'] = new Float32Array([
                this['x'],
                this['y']
            ]), _0x30a72c[_0x566b5f(0x1ff)](this, 'x', 0x0), _0x30a72c[_0x566b5f(0x1ff)](this, 'y', 0x1);
        }
        static [_0x6027f5(0x1ff)](_0x406acb, _0x1ddf89, _0x21f048) {
            var _0x471e71 = _0x6027f5;
            Object[_0x471e71(0x200)](_0x406acb, _0x1ddf89, {
                'get': function () {
                    var _0x333625 = _0x471e71;
                    return this[_0x333625(0x1fe)][_0x21f048];
                },
                'set': function (_0x2442b9) {
                    this['elements'][_0x21f048] = _0x2442b9;
                }
            });
        }
    }
    _0x30a72c['ZERO'] = new _0x30a72c(0x0, 0x0), _0x30a72c[_0x6027f5(0x201)] = new _0x30a72c(0x1, 0x1);
    class _0x5b8e4e {
        constructor(_0x37c2d3 = 0x0, _0x158684 = 0x0, _0x4b10be = 0x0, _0x12b93d = 0x0) {
            this['x'] = _0x37c2d3, this['y'] = _0x158684, this['z'] = _0x4b10be, this['w'] = _0x12b93d;
        }
        [_0x6027f5(0x1f8)](_0x2a7bae, _0x593177, _0x53f929, _0x2a0c9d) {
            this['x'] = _0x2a7bae, this['y'] = _0x593177, this['z'] = _0x53f929, this['w'] = _0x2a0c9d;
        }
        ['fromArray'](_0x1d07b6, _0x501d49 = 0x0) {
            this['x'] = _0x1d07b6[_0x501d49 + 0x0], this['y'] = _0x1d07b6[_0x501d49 + 0x1], this['z'] = _0x1d07b6[_0x501d49 + 0x2], this['w'] = _0x1d07b6[_0x501d49 + 0x3];
        }
        ['toArray'](_0x3122e1, _0x12adef = 0x0) {
            _0x3122e1[_0x12adef + 0x0] = this['x'], _0x3122e1[_0x12adef + 0x1] = this['y'], _0x3122e1[_0x12adef + 0x2] = this['z'], _0x3122e1[_0x12adef + 0x3] = this['w'];
        }
        [_0x6027f5(0x1fc)](_0x8bbf33) {
            var _0xce1a2d = _0x8bbf33;
            _0xce1a2d['x'] = this['x'], _0xce1a2d['y'] = this['y'], _0xce1a2d['z'] = this['z'], _0xce1a2d['w'] = this['w'];
        }
        ['clone']() {
            var _0xa3536a = _0x6027f5, _0x588aed = new _0x5b8e4e();
            return this[_0xa3536a(0x1fc)](_0x588aed), _0x588aed;
        }
        static [_0x6027f5(0x202)](_0x3f8047, _0x831154, _0x24d6e3, _0x189a83) {
            var _0x35e0db = _0x3f8047['x'], _0x59f487 = _0x3f8047['y'], _0x3f5204 = _0x3f8047['z'], _0x14c89e = _0x3f8047['w'];
            _0x189a83['x'] = _0x35e0db + _0x24d6e3 * (_0x831154['x'] - _0x35e0db), _0x189a83['y'] = _0x59f487 + _0x24d6e3 * (_0x831154['y'] - _0x59f487), _0x189a83['z'] = _0x3f5204 + _0x24d6e3 * (_0x831154['z'] - _0x3f5204), _0x189a83['w'] = _0x14c89e + _0x24d6e3 * (_0x831154['w'] - _0x14c89e);
        }
        static [_0x6027f5(0x203)](_0x1570da, _0x431d72, _0x3b769b) {
            var _0x1c1380 = _0x6027f5, _0x1d334c = _0x1570da['x'], _0x5ec557 = _0x1570da['y'], _0x5ae19d = _0x1570da['z'], _0x3e47a0 = _0x1570da['w'], _0x1f3500 = _0x431d72[_0x1c1380(0x1fe)];
            _0x3b769b['x'] = _0x1d334c * _0x1f3500[0x0] + _0x5ec557 * _0x1f3500[0x4] + _0x5ae19d * _0x1f3500[0x8] + _0x3e47a0 * _0x1f3500[0xc], _0x3b769b['y'] = _0x1d334c * _0x1f3500[0x1] + _0x5ec557 * _0x1f3500[0x5] + _0x5ae19d * _0x1f3500[0x9] + _0x3e47a0 * _0x1f3500[0xd], _0x3b769b['z'] = _0x1d334c * _0x1f3500[0x2] + _0x5ec557 * _0x1f3500[0x6] + _0x5ae19d * _0x1f3500[0xa] + _0x3e47a0 * _0x1f3500[0xe], _0x3b769b['w'] = _0x1d334c * _0x1f3500[0x3] + _0x5ec557 * _0x1f3500[0x7] + _0x5ae19d * _0x1f3500[0xb] + _0x3e47a0 * _0x1f3500[0xf];
        }
        static ['equals'](_0x25fd05, _0x4f1d82) {
            var _0x220cbd = _0x6027f5;
            return _0x255128[_0x220cbd(0x204)](Math[_0x220cbd(0x1f0)](_0x25fd05['x']), Math[_0x220cbd(0x1f0)](_0x4f1d82['x'])) && _0x255128['nearEqual'](Math['abs'](_0x25fd05['y']), Math[_0x220cbd(0x1f0)](_0x4f1d82['y'])) && _0x255128[_0x220cbd(0x204)](Math[_0x220cbd(0x1f0)](_0x25fd05['z']), Math[_0x220cbd(0x1f0)](_0x4f1d82['z'])) && _0x255128[_0x220cbd(0x204)](Math[_0x220cbd(0x1f0)](_0x25fd05['w']), Math[_0x220cbd(0x1f0)](_0x4f1d82['w']));
        }
        [_0x6027f5(0x205)]() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        [_0x6027f5(0x206)]() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x4587d6, _0x1761a9) {
            var _0x2169fd = _0x4587d6['length']();
            if (_0x2169fd > 0x0) {
                var _0x170d40 = 0x1 / _0x2169fd;
                _0x1761a9['x'] = _0x4587d6['x'] * _0x170d40, _0x1761a9['y'] = _0x4587d6['y'] * _0x170d40, _0x1761a9['z'] = _0x4587d6['z'] * _0x170d40, _0x1761a9['w'] = _0x4587d6['w'] * _0x170d40;
            }
        }
        static [_0x6027f5(0x207)](_0x42787a, _0xb2b24b, _0x434167) {
            _0x434167['x'] = _0x42787a['x'] + _0xb2b24b['x'], _0x434167['y'] = _0x42787a['y'] + _0xb2b24b['y'], _0x434167['z'] = _0x42787a['z'] + _0xb2b24b['z'], _0x434167['w'] = _0x42787a['w'] + _0xb2b24b['w'];
        }
        static ['subtract'](_0x47cb1, _0x16b744, _0x2e03ed) {
            _0x2e03ed['x'] = _0x47cb1['x'] - _0x16b744['x'], _0x2e03ed['y'] = _0x47cb1['y'] - _0x16b744['y'], _0x2e03ed['z'] = _0x47cb1['z'] - _0x16b744['z'], _0x2e03ed['w'] = _0x47cb1['w'] - _0x16b744['w'];
        }
        static ['multiply'](_0x840203, _0x2c9a47, _0x1688f0) {
            _0x1688f0['x'] = _0x840203['x'] * _0x2c9a47['x'], _0x1688f0['y'] = _0x840203['y'] * _0x2c9a47['y'], _0x1688f0['z'] = _0x840203['z'] * _0x2c9a47['z'], _0x1688f0['w'] = _0x840203['w'] * _0x2c9a47['w'];
        }
        static [_0x6027f5(0x1f9)](_0x2ddd2f, _0x453b21, _0x332052) {
            _0x332052['x'] = _0x2ddd2f['x'] * _0x453b21, _0x332052['y'] = _0x2ddd2f['y'] * _0x453b21, _0x332052['z'] = _0x2ddd2f['z'] * _0x453b21, _0x332052['w'] = _0x2ddd2f['w'] * _0x453b21;
        }
        static [_0x6027f5(0x208)](_0x587a5b, _0x143f7d, _0x170729, _0x4a4da8) {
            var _0x25bb29 = _0x587a5b['x'], _0x273b35 = _0x587a5b['y'], _0x5cffb1 = _0x587a5b['z'], _0x35f842 = _0x587a5b['w'], _0x25291e = _0x143f7d['x'], _0x4da9cd = _0x143f7d['y'], _0x2681bf = _0x143f7d['z'], _0x4f7188 = _0x143f7d['w'], _0x2ee9a4 = _0x170729['x'], _0x3103a9 = _0x170729['y'], _0x3b29e8 = _0x170729['z'], _0x1ef55b = _0x170729['w'];
            _0x25bb29 = (_0x25bb29 = _0x25bb29 > _0x2ee9a4 ? _0x2ee9a4 : _0x25bb29) < _0x25291e ? _0x25291e : _0x25bb29, _0x273b35 = (_0x273b35 = _0x273b35 > _0x3103a9 ? _0x3103a9 : _0x273b35) < _0x4da9cd ? _0x4da9cd : _0x273b35, _0x5cffb1 = (_0x5cffb1 = _0x5cffb1 > _0x3b29e8 ? _0x3b29e8 : _0x5cffb1) < _0x2681bf ? _0x2681bf : _0x5cffb1, _0x35f842 = (_0x35f842 = _0x35f842 > _0x1ef55b ? _0x1ef55b : _0x35f842) < _0x4f7188 ? _0x4f7188 : _0x35f842, _0x4a4da8['x'] = _0x25bb29, _0x4a4da8['y'] = _0x273b35, _0x4a4da8['z'] = _0x5cffb1, _0x4a4da8['w'] = _0x35f842;
        }
        static [_0x6027f5(0x209)](_0x40b97d, _0x22e5c1) {
            var _0x3bcb27 = _0x40b97d['x'] - _0x22e5c1['x'], _0x1c5100 = _0x40b97d['y'] - _0x22e5c1['y'], _0x1c4267 = _0x40b97d['z'] - _0x22e5c1['z'], _0x155c58 = _0x40b97d['w'] - _0x22e5c1['w'];
            return _0x3bcb27 * _0x3bcb27 + _0x1c5100 * _0x1c5100 + _0x1c4267 * _0x1c4267 + _0x155c58 * _0x155c58;
        }
        static [_0x6027f5(0x20a)](_0xb31a8e, _0x1b602a) {
            var _0x194dae = _0xb31a8e['x'] - _0x1b602a['x'], _0x2cafc3 = _0xb31a8e['y'] - _0x1b602a['y'], _0x18c59e = _0xb31a8e['z'] - _0x1b602a['z'], _0x7f00ef = _0xb31a8e['w'] - _0x1b602a['w'];
            return Math['sqrt'](_0x194dae * _0x194dae + _0x2cafc3 * _0x2cafc3 + _0x18c59e * _0x18c59e + _0x7f00ef * _0x7f00ef);
        }
        static [_0x6027f5(0x20b)](_0x5f5fce, _0x5a7188) {
            return _0x5f5fce['x'] * _0x5a7188['x'] + _0x5f5fce['y'] * _0x5a7188['y'] + _0x5f5fce['z'] * _0x5a7188['z'] + _0x5f5fce['w'] * _0x5a7188['w'];
        }
        static ['min'](_0x4d791a, _0x1f9a27, _0x211a63) {
            _0x211a63['x'] = Math['min'](_0x4d791a['x'], _0x1f9a27['x']), _0x211a63['y'] = Math['min'](_0x4d791a['y'], _0x1f9a27['y']), _0x211a63['z'] = Math['min'](_0x4d791a['z'], _0x1f9a27['z']), _0x211a63['w'] = Math['min'](_0x4d791a['w'], _0x1f9a27['w']);
        }
        static ['max'](_0x261d00, _0x289e34, _0x88480b) {
            var _0x32b81e = _0x6027f5;
            _0x88480b['x'] = Math[_0x32b81e(0x20c)](_0x261d00['x'], _0x289e34['x']), _0x88480b['y'] = Math[_0x32b81e(0x20c)](_0x261d00['y'], _0x289e34['y']), _0x88480b['z'] = Math[_0x32b81e(0x20c)](_0x261d00['z'], _0x289e34['z']), _0x88480b['w'] = Math[_0x32b81e(0x20c)](_0x261d00['w'], _0x289e34['w']);
        }
        [_0x6027f5(0x20d)](_0x3888fb = null) {
            var _0x3bb841 = _0x6027f5;
            _0x3888fb ? (this[_0x3bb841(0x1fe)] = _0x3888fb, this[_0x3bb841(0x1fe)][0x0] = this['x'], this[_0x3bb841(0x1fe)][0x1] = this['y'], this[_0x3bb841(0x1fe)][0x2] = this['z'], this[_0x3bb841(0x1fe)][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x30a72c[_0x3bb841(0x1ff)](this, 'x', 0x0), _0x30a72c[_0x3bb841(0x1ff)](this, 'y', 0x1), _0x30a72c[_0x3bb841(0x1ff)](this, 'z', 0x2), _0x30a72c[_0x3bb841(0x1ff)](this, 'w', 0x3);
        }
    }
    _0x5b8e4e[_0x6027f5(0x20e)] = new _0x5b8e4e(), _0x5b8e4e['ONE'] = new _0x5b8e4e(0x1, 0x1, 0x1, 0x1), _0x5b8e4e[_0x6027f5(0x20f)] = new _0x5b8e4e(0x1, 0x0, 0x0, 0x0), _0x5b8e4e['UnitY'] = new _0x5b8e4e(0x0, 0x1, 0x0, 0x0), _0x5b8e4e[_0x6027f5(0x210)] = new _0x5b8e4e(0x0, 0x0, 0x1, 0x0), _0x5b8e4e[_0x6027f5(0x211)] = new _0x5b8e4e(0x0, 0x0, 0x0, 0x1);
    class _0x3697cd {
        constructor(_0x2215a8 = 0x0, _0x853c62 = 0x0, _0x4edc9f = 0x0) {
            this['x'] = _0x2215a8, this['y'] = _0x853c62, this['z'] = _0x4edc9f;
        }
        static [_0x6027f5(0x209)](_0x2ad499, _0x2dd316) {
            var _0x1e24b0 = _0x2ad499['x'] - _0x2dd316['x'], _0x4a6a1f = _0x2ad499['y'] - _0x2dd316['y'], _0x22b1e3 = _0x2ad499['z'] - _0x2dd316['z'];
            return _0x1e24b0 * _0x1e24b0 + _0x4a6a1f * _0x4a6a1f + _0x22b1e3 * _0x22b1e3;
        }
        static [_0x6027f5(0x20a)](_0x2f71ad, _0x8857fe) {
            var _0x476034 = _0x6027f5, _0x18d257 = _0x2f71ad['x'] - _0x8857fe['x'], _0x135c39 = _0x2f71ad['y'] - _0x8857fe['y'], _0x243003 = _0x2f71ad['z'] - _0x8857fe['z'];
            return Math[_0x476034(0x1f3)](_0x18d257 * _0x18d257 + _0x135c39 * _0x135c39 + _0x243003 * _0x243003);
        }
        static [_0x6027f5(0x212)](_0x1b9045, _0x30cdb2, _0x3b74c5) {
            var _0x5a3af3 = _0x6027f5;
            _0x3b74c5['x'] = Math['min'](_0x1b9045['x'], _0x30cdb2['x']), _0x3b74c5['y'] = Math['min'](_0x1b9045['y'], _0x30cdb2['y']), _0x3b74c5['z'] = Math[_0x5a3af3(0x212)](_0x1b9045['z'], _0x30cdb2['z']);
        }
        static [_0x6027f5(0x20c)](_0x446924, _0x59d5fe, _0x39390c) {
            var _0xa03bf7 = _0x6027f5;
            _0x39390c['x'] = Math['max'](_0x446924['x'], _0x59d5fe['x']), _0x39390c['y'] = Math[_0xa03bf7(0x20c)](_0x446924['y'], _0x59d5fe['y']), _0x39390c['z'] = Math[_0xa03bf7(0x20c)](_0x446924['z'], _0x59d5fe['z']);
        }
        static ['transformQuat'](_0x3f7b9b, _0x4d2299, _0x3e04d4) {
            var _0x2691d1 = _0x3f7b9b['x'], _0x11a2e7 = _0x3f7b9b['y'], _0x28e5ba = _0x3f7b9b['z'], _0x354136 = _0x4d2299['x'], _0x295db9 = _0x4d2299['y'], _0x3bf026 = _0x4d2299['z'], _0x4a2971 = _0x4d2299['w'], _0x30ee16 = _0x4a2971 * _0x2691d1 + _0x295db9 * _0x28e5ba - _0x3bf026 * _0x11a2e7, _0x2fcc16 = _0x4a2971 * _0x11a2e7 + _0x3bf026 * _0x2691d1 - _0x354136 * _0x28e5ba, _0x19b762 = _0x4a2971 * _0x28e5ba + _0x354136 * _0x11a2e7 - _0x295db9 * _0x2691d1, _0x175dc3 = -_0x354136 * _0x2691d1 - _0x295db9 * _0x11a2e7 - _0x3bf026 * _0x28e5ba;
            _0x3e04d4['x'] = _0x30ee16 * _0x4a2971 + _0x175dc3 * -_0x354136 + _0x2fcc16 * -_0x3bf026 - _0x19b762 * -_0x295db9, _0x3e04d4['y'] = _0x2fcc16 * _0x4a2971 + _0x175dc3 * -_0x295db9 + _0x19b762 * -_0x354136 - _0x30ee16 * -_0x3bf026, _0x3e04d4['z'] = _0x19b762 * _0x4a2971 + _0x175dc3 * -_0x3bf026 + _0x30ee16 * -_0x295db9 - _0x2fcc16 * -_0x354136;
        }
        static ['scalarLength'](_0x1a55cc) {
            var _0x261885 = _0x6027f5, _0x4bd0b9 = _0x1a55cc['x'], _0x2e35c8 = _0x1a55cc['y'], _0x6ae9b1 = _0x1a55cc['z'];
            return Math[_0x261885(0x1f3)](_0x4bd0b9 * _0x4bd0b9 + _0x2e35c8 * _0x2e35c8 + _0x6ae9b1 * _0x6ae9b1);
        }
        static [_0x6027f5(0x213)](_0x1cdc4f) {
            var _0x1167d8 = _0x1cdc4f['x'], _0x2dc440 = _0x1cdc4f['y'], _0xad56ee = _0x1cdc4f['z'];
            return _0x1167d8 * _0x1167d8 + _0x2dc440 * _0x2dc440 + _0xad56ee * _0xad56ee;
        }
        static [_0x6027f5(0x214)](_0x201efd, _0xbd0f46) {
            var _0x589e3a = _0x6027f5, _0x1a229a = _0x201efd['x'], _0x49803b = _0x201efd['y'], _0x396b26 = _0x201efd['z'], _0x2599e9 = _0x1a229a * _0x1a229a + _0x49803b * _0x49803b + _0x396b26 * _0x396b26;
            _0x2599e9 > 0x0 && (_0x2599e9 = 0x1 / Math[_0x589e3a(0x1f3)](_0x2599e9), _0xbd0f46['x'] = _0x1a229a * _0x2599e9, _0xbd0f46['y'] = _0x49803b * _0x2599e9, _0xbd0f46['z'] = _0x396b26 * _0x2599e9);
        }
        static ['multiply'](_0x1c168b, _0x4fe3dd, _0x36c03a) {
            _0x36c03a['x'] = _0x1c168b['x'] * _0x4fe3dd['x'], _0x36c03a['y'] = _0x1c168b['y'] * _0x4fe3dd['y'], _0x36c03a['z'] = _0x1c168b['z'] * _0x4fe3dd['z'];
        }
        static [_0x6027f5(0x1f9)](_0x4aa5be, _0x446ec0, _0xae76c7) {
            _0xae76c7['x'] = _0x4aa5be['x'] * _0x446ec0, _0xae76c7['y'] = _0x4aa5be['y'] * _0x446ec0, _0xae76c7['z'] = _0x4aa5be['z'] * _0x446ec0;
        }
        static ['lerp'](_0x49f2c0, _0x28e301, _0x15fe26, _0x86faa0) {
            var _0x2262fe = _0x49f2c0['x'], _0x49e305 = _0x49f2c0['y'], _0x53611b = _0x49f2c0['z'];
            _0x86faa0['x'] = _0x2262fe + _0x15fe26 * (_0x28e301['x'] - _0x2262fe), _0x86faa0['y'] = _0x49e305 + _0x15fe26 * (_0x28e301['y'] - _0x49e305), _0x86faa0['z'] = _0x53611b + _0x15fe26 * (_0x28e301['z'] - _0x53611b);
        }
        static ['transformV3ToV3'](_0x2977db, _0x283a58, _0x5f4e21) {
            var _0x55b644 = _0x3697cd['_tempVector4'];
            _0x3697cd['transformV3ToV4'](_0x2977db, _0x283a58, _0x55b644), _0x5f4e21['x'] = _0x55b644['x'], _0x5f4e21['y'] = _0x55b644['y'], _0x5f4e21['z'] = _0x55b644['z'];
        }
        static [_0x6027f5(0x215)](_0x404acf, _0x7ff0af, _0x497f93) {
            var _0x24f426 = _0x6027f5, _0x480733 = _0x404acf['x'], _0x977465 = _0x404acf['y'], _0x18299a = _0x404acf['z'], _0x2e8372 = _0x7ff0af[_0x24f426(0x1fe)];
            _0x497f93['x'] = _0x480733 * _0x2e8372[0x0] + _0x977465 * _0x2e8372[0x4] + _0x18299a * _0x2e8372[0x8] + _0x2e8372[0xc], _0x497f93['y'] = _0x480733 * _0x2e8372[0x1] + _0x977465 * _0x2e8372[0x5] + _0x18299a * _0x2e8372[0x9] + _0x2e8372[0xd], _0x497f93['z'] = _0x480733 * _0x2e8372[0x2] + _0x977465 * _0x2e8372[0x6] + _0x18299a * _0x2e8372[0xa] + _0x2e8372[0xe], _0x497f93['w'] = _0x480733 * _0x2e8372[0x3] + _0x977465 * _0x2e8372[0x7] + _0x18299a * _0x2e8372[0xb] + _0x2e8372[0xf];
        }
        static ['TransformNormal'](_0xa4e4bc, _0xc8b69a, _0x1606c3) {
            var _0x29adaf = _0x6027f5, _0x96b531 = _0xa4e4bc['x'], _0x33d577 = _0xa4e4bc['y'], _0x20e211 = _0xa4e4bc['z'], _0x53001b = _0xc8b69a[_0x29adaf(0x1fe)];
            _0x1606c3['x'] = _0x96b531 * _0x53001b[0x0] + _0x33d577 * _0x53001b[0x4] + _0x20e211 * _0x53001b[0x8], _0x1606c3['y'] = _0x96b531 * _0x53001b[0x1] + _0x33d577 * _0x53001b[0x5] + _0x20e211 * _0x53001b[0x9], _0x1606c3['z'] = _0x96b531 * _0x53001b[0x2] + _0x33d577 * _0x53001b[0x6] + _0x20e211 * _0x53001b[0xa];
        }
        static [_0x6027f5(0x216)](_0x11caa4, _0x14eb73, _0x52c004) {
            var _0xfa81b = _0x6027f5, _0xa994d5 = _0x11caa4['x'], _0xdf7dc0 = _0x11caa4['y'], _0x491c05 = _0x11caa4['z'], _0xc455b3 = _0x14eb73[_0xfa81b(0x1fe)], _0x47c396 = _0xa994d5 * _0xc455b3[0x3] + _0xdf7dc0 * _0xc455b3[0x7] + _0x491c05 * _0xc455b3[0xb] + _0xc455b3[0xf];
            _0x52c004['x'] = (_0xa994d5 * _0xc455b3[0x0] + _0xdf7dc0 * _0xc455b3[0x4] + _0x491c05 * _0xc455b3[0x8] + _0xc455b3[0xc]) / _0x47c396, _0x52c004['y'] = (_0xa994d5 * _0xc455b3[0x1] + _0xdf7dc0 * _0xc455b3[0x5] + _0x491c05 * _0xc455b3[0x9] + _0xc455b3[0xd]) / _0x47c396, _0x52c004['z'] = (_0xa994d5 * _0xc455b3[0x2] + _0xdf7dc0 * _0xc455b3[0x6] + _0x491c05 * _0xc455b3[0xa] + _0xc455b3[0xe]) / _0x47c396;
        }
        static [_0x6027f5(0x208)](_0x3ca471, _0x513549, _0x3f8e05, _0x557907) {
            var _0x509624 = _0x3ca471['x'], _0x2c48cb = _0x3ca471['y'], _0x367fa5 = _0x3ca471['z'], _0x257031 = _0x513549['x'], _0x2b4686 = _0x513549['y'], _0x15b4ad = _0x513549['z'], _0x1c592d = _0x3f8e05['x'], _0x4002e8 = _0x3f8e05['y'], _0x18a7db = _0x3f8e05['z'];
            _0x509624 = (_0x509624 = _0x509624 > _0x1c592d ? _0x1c592d : _0x509624) < _0x257031 ? _0x257031 : _0x509624, _0x2c48cb = (_0x2c48cb = _0x2c48cb > _0x4002e8 ? _0x4002e8 : _0x2c48cb) < _0x2b4686 ? _0x2b4686 : _0x2c48cb, _0x367fa5 = (_0x367fa5 = _0x367fa5 > _0x18a7db ? _0x18a7db : _0x367fa5) < _0x15b4ad ? _0x15b4ad : _0x367fa5, _0x557907['x'] = _0x509624, _0x557907['y'] = _0x2c48cb, _0x557907['z'] = _0x367fa5;
        }
        static [_0x6027f5(0x207)](_0x250f0a, _0x5abf05, _0x1e15bc) {
            _0x1e15bc['x'] = _0x250f0a['x'] + _0x5abf05['x'], _0x1e15bc['y'] = _0x250f0a['y'] + _0x5abf05['y'], _0x1e15bc['z'] = _0x250f0a['z'] + _0x5abf05['z'];
        }
        static ['subtract'](_0x348e68, _0x4bc445, _0x59bbb0) {
            _0x59bbb0['x'] = _0x348e68['x'] - _0x4bc445['x'], _0x59bbb0['y'] = _0x348e68['y'] - _0x4bc445['y'], _0x59bbb0['z'] = _0x348e68['z'] - _0x4bc445['z'];
        }
        static [_0x6027f5(0x217)](_0x21f4cb, _0x5ee493, _0x550f11) {
            var _0x311e0d = _0x21f4cb['x'], _0x45fb83 = _0x21f4cb['y'], _0x5e946b = _0x21f4cb['z'], _0x23ff18 = _0x5ee493['x'], _0x51ab23 = _0x5ee493['y'], _0x3dabdc = _0x5ee493['z'];
            _0x550f11['x'] = _0x45fb83 * _0x3dabdc - _0x5e946b * _0x51ab23, _0x550f11['y'] = _0x5e946b * _0x23ff18 - _0x311e0d * _0x3dabdc, _0x550f11['z'] = _0x311e0d * _0x51ab23 - _0x45fb83 * _0x23ff18;
        }
        static [_0x6027f5(0x20b)](_0xdfbaf5, _0x902e56) {
            return _0xdfbaf5['x'] * _0x902e56['x'] + _0xdfbaf5['y'] * _0x902e56['y'] + _0xdfbaf5['z'] * _0x902e56['z'];
        }
        static [_0x6027f5(0x218)](_0x50abca, _0x1ae213) {
            var _0x100a9e = _0x6027f5;
            return _0x255128[_0x100a9e(0x204)](_0x50abca['x'], _0x1ae213['x']) && _0x255128[_0x100a9e(0x204)](_0x50abca['y'], _0x1ae213['y']) && _0x255128[_0x100a9e(0x204)](_0x50abca['z'], _0x1ae213['z']);
        }
        [_0x6027f5(0x1f8)](_0x44e7ba, _0x5ecd30, _0x1288b7) {
            this['x'] = _0x44e7ba, this['y'] = _0x5ecd30, this['z'] = _0x1288b7;
        }
        ['fromArray'](_0x12a5c7, _0x4c42fd = 0x0) {
            this['x'] = _0x12a5c7[_0x4c42fd + 0x0], this['y'] = _0x12a5c7[_0x4c42fd + 0x1], this['z'] = _0x12a5c7[_0x4c42fd + 0x2];
        }
        [_0x6027f5(0x1fb)](_0x12d565, _0x3954a3 = 0x0) {
            _0x12d565[_0x3954a3 + 0x0] = this['x'], _0x12d565[_0x3954a3 + 0x1] = this['y'], _0x12d565[_0x3954a3 + 0x2] = this['z'];
        }
        [_0x6027f5(0x1fc)](_0x484a90) {
            var _0x20b8d0 = _0x484a90;
            _0x20b8d0['x'] = this['x'], _0x20b8d0['y'] = this['y'], _0x20b8d0['z'] = this['z'];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x5c6fa5 = new _0x3697cd();
            return this['cloneTo'](_0x5c6fa5), _0x5c6fa5;
        }
        [_0x6027f5(0x219)]() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0;
        }
        [_0x6027f5(0x20d)](_0x38d2bd = null) {
            var _0x45481f = _0x6027f5;
            _0x38d2bd ? (this['elements'] = _0x38d2bd, this[_0x45481f(0x1fe)][0x0] = this['x'], this[_0x45481f(0x1fe)][0x1] = this['y'], this[_0x45481f(0x1fe)][0x2] = this['z']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z']
            ]), _0x30a72c['rewriteNumProperty'](this, 'x', 0x0), _0x30a72c[_0x45481f(0x1ff)](this, 'y', 0x1), _0x30a72c[_0x45481f(0x1ff)](this, 'z', 0x2);
        }
    }
    var _0x51269e, _0x614fe9, _0x9f80d5;
    _0x3697cd[_0x6027f5(0x21a)] = new _0x5b8e4e(), _0x3697cd[_0x6027f5(0x21b)] = new _0x3697cd(0x0, 0x0, 0x0), _0x3697cd[_0x6027f5(0x21c)] = new _0x3697cd(0x1, 0x1, 0x1), _0x3697cd['_NegativeUnitX'] = new _0x3697cd(-0x1, 0x0, 0x0), _0x3697cd[_0x6027f5(0x21d)] = new _0x3697cd(0x1, 0x0, 0x0), _0x3697cd[_0x6027f5(0x21e)] = new _0x3697cd(0x0, 0x1, 0x0), _0x3697cd[_0x6027f5(0x21f)] = new _0x3697cd(0x0, 0x0, 0x1), _0x3697cd[_0x6027f5(0x220)] = new _0x3697cd(0x0, 0x0, -0x1), _0x3697cd['_ForwardLH'] = new _0x3697cd(0x0, 0x0, 0x1), _0x3697cd['_Up'] = new _0x3697cd(0x0, 0x1, 0x0), (_0x51269e = _0x18be32[_0x6027f5(0x221)] || (_0x18be32['PBRRenderQuality'] = {}))[_0x51269e[_0x6027f5(0x222)] = 0x0] = _0x6027f5(0x222), _0x51269e[_0x51269e[_0x6027f5(0x223)] = 0x1] = _0x6027f5(0x223);
    class _0x525782 {
    }
    _0x525782[_0x6027f5(0x224)] = null, _0x525782[_0x6027f5(0x225)] = null, _0x525782['MeshRenderStaticBatchManager'] = null, _0x525782['MeshRenderDynamicBatchManager'] = null, _0x525782[_0x6027f5(0x226)] = null, _0x525782[_0x6027f5(0x227)] = null, _0x525782[_0x6027f5(0x228)] = null, _0x525782[_0x6027f5(0x229)] = null, _0x525782['ShadowLightType'] = null, _0x525782[_0x6027f5(0x22a)] = null, _0x525782[_0x6027f5(0x22b)] = null, _0x525782[_0x6027f5(0x22c)] = null, _0x525782[_0x6027f5(0x22d)] = null;
    class _0x567245 {
        static ['__bulletinit__']() {
            var _0x4d6b5c = _0x6027f5;
            this[_0x4d6b5c(0x22e)] = window[_0x4d6b5c(0x229)], this[_0x4d6b5c(0x22e)] && (_0x387b86[_0x4d6b5c(0x22f)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x231)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x232)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x233)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x234)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x235)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x236)][_0x4d6b5c(0x230)](), _0x387b86[_0x4d6b5c(0x237)][_0x4d6b5c(0x230)](), _0x387b86['Rigidbody3D'][_0x4d6b5c(0x230)]());
        }
        static [_0x6027f5(0x238)]() {
            var _0x744ffd = _0x6027f5;
            this[_0x744ffd(0x239)] = window['CANNON'], this[_0x744ffd(0x239)] && (_0x387b86[_0x744ffd(0x23a)][_0x744ffd(0x230)](), _0x387b86[_0x744ffd(0x23b)][_0x744ffd(0x230)](), _0x387b86[_0x744ffd(0x23c)]['__init__'](), _0x387b86[_0x744ffd(0x23d)][_0x744ffd(0x230)](), _0x387b86[_0x744ffd(0x23e)][_0x744ffd(0x230)]());
        }
    }
    _0x567245['_bullet'] = null, _0x567245[_0x6027f5(0x239)] = null, _0x567245[_0x6027f5(0x23f)] = !0x1;
    class _0x362537 {
        constructor() {
            var _0x2ca2c0 = _0x6027f5;
            this[_0x2ca2c0(0x240)] = 0x10, this['_maxLightCount'] = 0x20, this[_0x2ca2c0(0x241)] = new _0x3697cd(0xc, 0xc, 0xc), this[_0x2ca2c0(0x242)] = !0x1, this['isAntialias'] = !0x0, this['isAlpha'] = !0x1, this[_0x2ca2c0(0x243)] = !0x0, this[_0x2ca2c0(0x244)] = !0x0, this[_0x2ca2c0(0x245)] = !0x0, this['octreeCulling'] = !0x1, this[_0x2ca2c0(0x246)] = 0x40, this[_0x2ca2c0(0x247)] = new _0x3697cd(0x0, 0x0, 0x0), this[_0x2ca2c0(0x248)] = 0x2, this[_0x2ca2c0(0x249)] = 1.25, this[_0x2ca2c0(0x24a)] = !0x1, this[_0x2ca2c0(0x24b)] = _0x18be32[_0x2ca2c0(0x221)][_0x2ca2c0(0x222)], this[_0x2ca2c0(0x24c)] = !0x1, this[_0x2ca2c0(0x24d)] = Math[_0x2ca2c0(0x212)](0x4 * Math[_0x2ca2c0(0x24e)](0x800 / this[_0x2ca2c0(0x241)]['z'] - 0x1), this[_0x2ca2c0(0x24f)]);
        }
        static get [_0x6027f5(0x250)]() {
            return _0x362537['_config']['isUseCannonPhysicsEngine'];
        }
        static set ['useCannonPhysics'](_0x1ef325) {
            var _0x3b9566 = _0x6027f5;
            _0x362537[_0x3b9566(0x251)]['isUseCannonPhysicsEngine'] = _0x1ef325, _0x1ef325 && (_0x567245['__cannoninit__'](), _0x525782[_0x3b9566(0x225)][_0x3b9566(0x252)] || (_0x525782[_0x3b9566(0x225)][_0x3b9566(0x252)] = new _0x387b86['CannonPhysicsSettings']()));
        }
        static set [_0x6027f5(0x253)](_0x2a7ce2) {
            var _0x2ce57a = _0x6027f5;
            _0x525782[_0x2ce57a(0x22d)][_0x2ce57a(0x254)] = _0x2a7ce2;
        }
        static get [_0x6027f5(0x253)]() {
            var _0x36e4d7 = _0x6027f5;
            return _0x525782[_0x36e4d7(0x22d)][_0x36e4d7(0x254)];
        }
        static set ['enableStaticManager'](_0x315c3f) {
            var _0x41598a = _0x6027f5;
            _0x525782['SubMeshRenderElement'][_0x41598a(0x255)] = _0x315c3f;
        }
        static get [_0x6027f5(0x256)]() {
            var _0x3a7a8b = _0x6027f5;
            return _0x525782[_0x3a7a8b(0x22d)][_0x3a7a8b(0x255)];
        }
        get ['defaultPhysicsMemory']() {
            return this['_defaultPhysicsMemory'];
        }
        set [_0x6027f5(0x257)](_0x729105) {
            var _0x5765d2 = _0x6027f5;
            if (_0x729105 < 0x10)
                throw _0x5765d2(0x258);
            this[_0x5765d2(0x240)] = _0x729105;
        }
        get [_0x6027f5(0x259)]() {
            var _0x110c08 = _0x6027f5;
            return this[_0x110c08(0x24f)];
        }
        set [_0x6027f5(0x259)](_0x1ece47) {
            var _0x54d52e = _0x6027f5;
            _0x1ece47 > 0x800 ? (this[_0x54d52e(0x24f)] = 0x800, console[_0x54d52e(0x25a)](_0x54d52e(0x25b))) : this[_0x54d52e(0x24f)] = _0x1ece47;
        }
        get ['lightClusterCount']() {
            var _0x40e400 = _0x6027f5;
            return this[_0x40e400(0x241)];
        }
        set [_0x6027f5(0x25c)](_0x29d87c) {
            var _0x51a982 = _0x6027f5;
            _0x29d87c['x'] > 0x80 || _0x29d87c['y'] > 0x80 || _0x29d87c['z'] > 0x80 ? (this[_0x51a982(0x241)][_0x51a982(0x1f8)](Math['min'](_0x29d87c['x'], 0x80), Math[_0x51a982(0x212)](_0x29d87c['y'], 0x80), Math[_0x51a982(0x212)](_0x29d87c['z'], 0x80)), console[_0x51a982(0x25a)](_0x51a982(0x25d))) : _0x29d87c[_0x51a982(0x1fc)](this[_0x51a982(0x241)]);
            var _0x4b7770 = 0x4 * Math[_0x51a982(0x24e)](0x800 / this[_0x51a982(0x241)]['z'] - 0x1);
            _0x4b7770 < this['_maxLightCount'] && console[_0x51a982(0x25a)](_0x51a982(0x25e) + _0x4b7770 + _0x51a982(0x25f)), this['_maxAreaLightCountPerClusterAverage'] = Math[_0x51a982(0x212)](_0x4b7770, this['_maxLightCount']);
        }
        [_0x6027f5(0x1fc)](_0x4b3a1b) {
            var _0x5ed84b = _0x6027f5, _0x444682 = _0x4b3a1b;
            _0x444682[_0x5ed84b(0x240)] = this['_defaultPhysicsMemory'], _0x444682[_0x5ed84b(0x242)] = this[_0x5ed84b(0x242)], _0x444682[_0x5ed84b(0x260)] = this[_0x5ed84b(0x260)], _0x444682[_0x5ed84b(0x261)] = this[_0x5ed84b(0x261)], _0x444682[_0x5ed84b(0x243)] = this[_0x5ed84b(0x243)], _0x444682[_0x5ed84b(0x244)] = this[_0x5ed84b(0x244)], _0x444682[_0x5ed84b(0x262)] = this['octreeCulling'], this[_0x5ed84b(0x247)]['cloneTo'](_0x444682[_0x5ed84b(0x247)]), _0x444682[_0x5ed84b(0x246)] = this['octreeInitialSize'], _0x444682[_0x5ed84b(0x248)] = this[_0x5ed84b(0x248)], _0x444682[_0x5ed84b(0x249)] = this[_0x5ed84b(0x249)], _0x444682['debugFrustumCulling'] = this[_0x5ed84b(0x24a)], _0x444682[_0x5ed84b(0x259)] = this[_0x5ed84b(0x259)], _0x444682[_0x5ed84b(0x245)] = this['enableMultiLight'];
            var _0x4ff7bb = _0x444682[_0x5ed84b(0x25c)];
            this['lightClusterCount'][_0x5ed84b(0x1fc)](_0x4ff7bb), _0x444682[_0x5ed84b(0x25c)] = _0x4ff7bb, _0x444682['pbrRenderQuality'] = this['pbrRenderQuality'];
        }
        ['clone']() {
            var _0x341e22 = _0x6027f5, _0x243af2 = new _0x362537();
            return this[_0x341e22(0x1fc)](_0x243af2), _0x243af2;
        }
    }
    _0x362537[_0x6027f5(0x251)] = new _0x362537(), window['Config3D'] = _0x362537;
    class _0x359f9a {
        constructor() {
            var _0x294e47 = _0x6027f5;
            this[_0x294e47(0x263)] = [], this[_0x294e47(0x264)] = [], this[_0x294e47(0x265)] = [];
        }
        get ['ownerPathCount']() {
            var _0x16f88e = _0x6027f5;
            return this[_0x16f88e(0x263)][_0x16f88e(0x205)];
        }
        get ['propertyCount']() {
            var _0x324bb8 = _0x6027f5;
            return this[_0x324bb8(0x264)][_0x324bb8(0x205)];
        }
        get [_0x6027f5(0x266)]() {
            var _0x32b81f = _0x6027f5;
            return this[_0x32b81f(0x265)][_0x32b81f(0x205)];
        }
        [_0x6027f5(0x267)](_0x56cc32) {
            var _0x579ab7 = _0x6027f5;
            this[_0x579ab7(0x263)][_0x579ab7(0x205)] = _0x56cc32;
        }
        [_0x6027f5(0x268)](_0x49fad6, _0x4fb412) {
            var _0x11de99 = _0x6027f5;
            this[_0x11de99(0x263)][_0x49fad6] = _0x4fb412;
        }
        [_0x6027f5(0x269)](_0x342efb) {
            return this['_ownerPath']['join'](_0x342efb);
        }
        [_0x6027f5(0x26a)](_0x5a5568) {
            var _0x137041 = _0x6027f5;
            this[_0x137041(0x264)][_0x137041(0x205)] = _0x5a5568;
        }
        [_0x6027f5(0x26b)](_0x93a828, _0x23523f) {
            var _0x4edc3d = _0x6027f5;
            this[_0x4edc3d(0x264)][_0x93a828] = _0x23523f;
        }
        [_0x6027f5(0x26c)](_0xd57cc7) {
            var _0x4144cd = _0x6027f5;
            return this[_0x4144cd(0x264)][_0x4144cd(0x26d)](_0xd57cc7);
        }
        [_0x6027f5(0x26e)](_0x37243e) {
            this['_keyFrames']['length'] = _0x37243e;
        }
        [_0x6027f5(0x26f)](_0x255d9c, _0x4ab319) {
            var _0x4d92f9 = _0x6027f5;
            this[_0x4d92f9(0x265)][_0x255d9c] = _0x4ab319;
        }
        [_0x6027f5(0x270)](_0x134e43) {
            return this['_ownerPath'][_0x134e43];
        }
        [_0x6027f5(0x271)](_0x1c3c7d) {
            var _0x530bc6 = _0x6027f5;
            return this[_0x530bc6(0x264)][_0x1c3c7d];
        }
        [_0x6027f5(0x272)](_0x53e20c) {
            var _0x4e2f93 = _0x6027f5;
            return this[_0x4e2f93(0x265)][_0x53e20c];
        }
    }
    class _0x258046 {
        constructor() {
        }
    }
    class _0x12dcd5 {
        constructor() {
        }
        [_0x6027f5(0x1fc)](_0x241487) {
            var _0x5c982c = _0x6027f5;
            _0x241487[_0x5c982c(0x273)] = this[_0x5c982c(0x273)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1a17d7 = _0x6027f5, _0x344c11 = new _0x12dcd5();
            return this[_0x1a17d7(0x1fc)](_0x344c11), _0x344c11;
        }
    }
    class _0x25af36 extends _0x12dcd5 {
        constructor() {
            super();
        }
        ['cloneTo'](_0x4ac41b) {
            var _0x1c409a = _0x6027f5;
            super['cloneTo'](_0x4ac41b);
            var _0xf63af1 = _0x4ac41b;
            _0xf63af1[_0x1c409a(0x274)] = this[_0x1c409a(0x274)], _0xf63af1['outTangent'] = this['outTangent'], _0xf63af1['value'] = this['value'];
        }
    }
    class _0x5e1bd2 {
        constructor() {
            var _0x8ee70e = _0x6027f5, _0x4f8481 = this[_0x8ee70e(0x1fe)] = new Float32Array(0x9);
            _0x4f8481[0x0] = 0x1, _0x4f8481[0x1] = 0x0, _0x4f8481[0x2] = 0x0, _0x4f8481[0x3] = 0x0, _0x4f8481[0x4] = 0x1, _0x4f8481[0x5] = 0x0, _0x4f8481[0x6] = 0x0, _0x4f8481[0x7] = 0x0, _0x4f8481[0x8] = 0x1;
        }
        static [_0x6027f5(0x275)](_0x4c2bb0, _0x187cdb) {
            var _0x38eb99 = _0x6027f5, _0x51e071 = _0x4c2bb0['x'], _0x1d3c5b = _0x4c2bb0['y'], _0x39787e = _0x4c2bb0['z'], _0xa181a8 = _0x4c2bb0['w'], _0x1314ef = _0x51e071 * _0x51e071, _0x48576e = _0x1d3c5b * _0x1d3c5b, _0x9f87f1 = _0x39787e * _0x39787e, _0x5ef4b9 = _0x51e071 * _0x1d3c5b, _0x4c15a2 = _0x39787e * _0xa181a8, _0x2991fc = _0x39787e * _0x51e071, _0x4f3b57 = _0x1d3c5b * _0xa181a8, _0x3c846e = _0x1d3c5b * _0x39787e, _0x364b6d = _0x51e071 * _0xa181a8, _0x35ae7e = _0x187cdb[_0x38eb99(0x1fe)];
            _0x35ae7e[0x0] = 0x1 - 0x2 * (_0x48576e + _0x9f87f1), _0x35ae7e[0x1] = 0x2 * (_0x5ef4b9 + _0x4c15a2), _0x35ae7e[0x2] = 0x2 * (_0x2991fc - _0x4f3b57), _0x35ae7e[0x3] = 0x2 * (_0x5ef4b9 - _0x4c15a2), _0x35ae7e[0x4] = 0x1 - 0x2 * (_0x9f87f1 + _0x1314ef), _0x35ae7e[0x5] = 0x2 * (_0x3c846e + _0x364b6d), _0x35ae7e[0x6] = 0x2 * (_0x2991fc + _0x4f3b57), _0x35ae7e[0x7] = 0x2 * (_0x3c846e - _0x364b6d), _0x35ae7e[0x8] = 0x1 - 0x2 * (_0x48576e + _0x1314ef);
        }
        static [_0x6027f5(0x276)](_0x30f846, _0x2a7e82) {
            var _0x18409e = _0x6027f5, _0x24ef66 = _0x2a7e82[_0x18409e(0x1fe)];
            _0x24ef66[0x0] = 0x1, _0x24ef66[0x1] = 0x0, _0x24ef66[0x2] = 0x0, _0x24ef66[0x3] = 0x0, _0x24ef66[0x4] = 0x1, _0x24ef66[0x5] = 0x0, _0x24ef66[0x6] = _0x30f846['x'], _0x24ef66[0x7] = _0x30f846['y'], _0x24ef66[0x8] = 0x1;
        }
        static [_0x6027f5(0x277)](_0xd6e49a, _0x4dee0d) {
            var _0x222539 = _0x6027f5, _0x2aa809 = _0x4dee0d[_0x222539(0x1fe)], _0x2bbddb = Math['sin'](_0xd6e49a), _0x21843e = Math[_0x222539(0x278)](_0xd6e49a);
            _0x2aa809[0x0] = _0x21843e, _0x2aa809[0x1] = _0x2bbddb, _0x2aa809[0x2] = 0x0, _0x2aa809[0x3] = -_0x2bbddb, _0x2aa809[0x4] = _0x21843e, _0x2aa809[0x5] = 0x0, _0x2aa809[0x6] = 0x0, _0x2aa809[0x7] = 0x0, _0x2aa809[0x8] = 0x1;
        }
        static [_0x6027f5(0x279)](_0x2e28ea, _0x36ab03) {
            var _0x1fe341 = _0x6027f5, _0x3eb79b = _0x36ab03[_0x1fe341(0x1fe)];
            _0x3eb79b[0x0] = _0x2e28ea['x'], _0x3eb79b[0x1] = 0x0, _0x3eb79b[0x2] = 0x0, _0x3eb79b[0x3] = 0x0, _0x3eb79b[0x4] = _0x2e28ea['y'], _0x3eb79b[0x5] = 0x0, _0x3eb79b[0x6] = 0x0, _0x3eb79b[0x7] = 0x0, _0x3eb79b[0x8] = _0x2e28ea['z'];
        }
        static [_0x6027f5(0x27a)](_0x3dc014, _0x3e08e8) {
            var _0x3796fc = _0x6027f5, _0xe2efd3 = _0x3dc014[_0x3796fc(0x1fe)], _0x52d451 = _0x3e08e8[_0x3796fc(0x1fe)];
            _0x52d451[0x0] = _0xe2efd3[0x0], _0x52d451[0x1] = _0xe2efd3[0x1], _0x52d451[0x2] = _0xe2efd3[0x2], _0x52d451[0x3] = _0xe2efd3[0x4], _0x52d451[0x4] = _0xe2efd3[0x5], _0x52d451[0x5] = _0xe2efd3[0x6], _0x52d451[0x6] = _0xe2efd3[0x8], _0x52d451[0x7] = _0xe2efd3[0x9], _0x52d451[0x8] = _0xe2efd3[0xa];
        }
        static [_0x6027f5(0x27b)](_0xe73ed0, _0x34a55e, _0x468d80) {
            var _0x4d62e3 = _0x6027f5, _0x4c6a12 = _0xe73ed0[_0x4d62e3(0x1fe)], _0x5e0f96 = _0x34a55e[_0x4d62e3(0x1fe)], _0xabd138 = _0x468d80[_0x4d62e3(0x1fe)], _0x5286bf = _0x4c6a12[0x0], _0x53fc79 = _0x4c6a12[0x1], _0x580025 = _0x4c6a12[0x2], _0x49838b = _0x4c6a12[0x3], _0x26f736 = _0x4c6a12[0x4], _0x1dca4c = _0x4c6a12[0x5], _0x122d54 = _0x4c6a12[0x6], _0x56c497 = _0x4c6a12[0x7], _0x65ce73 = _0x4c6a12[0x8], _0x419102 = _0x5e0f96[0x0], _0x1b7f41 = _0x5e0f96[0x1], _0xa3ccc3 = _0x5e0f96[0x2], _0x56da34 = _0x5e0f96[0x3], _0x5a186d = _0x5e0f96[0x4], _0x73d4c7 = _0x5e0f96[0x5], _0x5463e4 = _0x5e0f96[0x6], _0x35b0c6 = _0x5e0f96[0x7], _0x14ec1c = _0x5e0f96[0x8];
            _0xabd138[0x0] = _0x419102 * _0x5286bf + _0x1b7f41 * _0x49838b + _0xa3ccc3 * _0x122d54, _0xabd138[0x1] = _0x419102 * _0x53fc79 + _0x1b7f41 * _0x26f736 + _0xa3ccc3 * _0x35b0c6, _0xabd138[0x2] = _0x419102 * _0x580025 + _0x1b7f41 * _0x1dca4c + _0xa3ccc3 * _0x65ce73, _0xabd138[0x3] = _0x56da34 * _0x5286bf + _0x5a186d * _0x49838b + _0x73d4c7 * _0x122d54, _0xabd138[0x4] = _0x56da34 * _0x53fc79 + _0x5a186d * _0x26f736 + _0x73d4c7 * _0x56c497, _0xabd138[0x5] = _0x56da34 * _0x580025 + _0x5a186d * _0x1dca4c + _0x73d4c7 * _0x65ce73, _0xabd138[0x6] = _0x5463e4 * _0x5286bf + _0x35b0c6 * _0x49838b + _0x14ec1c * _0x122d54, _0xabd138[0x7] = _0x5463e4 * _0x53fc79 + _0x35b0c6 * _0x26f736 + _0x14ec1c * _0x56c497, _0xabd138[0x8] = _0x5463e4 * _0x580025 + _0x35b0c6 * _0x1dca4c + _0x14ec1c * _0x65ce73;
        }
        [_0x6027f5(0x27c)]() {
            var _0x3da11a = _0x6027f5, _0x164fc3 = this[_0x3da11a(0x1fe)], _0x49226d = _0x164fc3[0x0], _0x460a78 = _0x164fc3[0x1], _0xc271ec = _0x164fc3[0x2], _0x51ad3b = _0x164fc3[0x3], _0x547e26 = _0x164fc3[0x4], _0x51024e = _0x164fc3[0x5], _0x3b1227 = _0x164fc3[0x6], _0x755c86 = _0x164fc3[0x7], _0xc5396c = _0x164fc3[0x8];
            return _0x49226d * (_0xc5396c * _0x547e26 - _0x51024e * _0x755c86) + _0x460a78 * (-_0xc5396c * _0x51ad3b + _0x51024e * _0x3b1227) + _0xc271ec * (_0x755c86 * _0x51ad3b - _0x547e26 * _0x3b1227);
        }
        [_0x6027f5(0x27d)](_0x29c769, _0x3b42f9) {
            var _0x171cc0 = _0x6027f5, _0x172fec = _0x3b42f9['elements'], _0x1713a7 = this[_0x171cc0(0x1fe)], _0x1bb6a7 = _0x1713a7[0x0], _0x50802e = _0x1713a7[0x1], _0x346852 = _0x1713a7[0x2], _0x567727 = _0x1713a7[0x3], _0x233d42 = _0x1713a7[0x4], _0x10a695 = _0x1713a7[0x5], _0x51280a = _0x1713a7[0x6], _0x2e1623 = _0x1713a7[0x7], _0x8ce201 = _0x1713a7[0x8], _0x14379a = _0x29c769['x'], _0x26da7a = _0x29c769['y'];
            _0x172fec[0x0] = _0x1bb6a7, _0x172fec[0x1] = _0x50802e, _0x172fec[0x2] = _0x346852, _0x172fec[0x3] = _0x567727, _0x172fec[0x4] = _0x233d42, _0x172fec[0x5] = _0x10a695, _0x172fec[0x6] = _0x14379a * _0x1bb6a7 + _0x26da7a * _0x567727 + _0x51280a, _0x172fec[0x7] = _0x14379a * _0x50802e + _0x26da7a * _0x233d42 + _0x2e1623, _0x172fec[0x8] = _0x14379a * _0x346852 + _0x26da7a * _0x10a695 + _0x8ce201;
        }
        [_0x6027f5(0x27e)](_0xfca986, _0x558655) {
            var _0x361e33 = _0x6027f5, _0x360e9a = _0x558655[_0x361e33(0x1fe)], _0x1fd0c6 = this[_0x361e33(0x1fe)], _0x5f5804 = _0x1fd0c6[0x0], _0xa3cc2b = _0x1fd0c6[0x1], _0x538e72 = _0x1fd0c6[0x2], _0x26ac70 = _0x1fd0c6[0x3], _0x5b4386 = _0x1fd0c6[0x4], _0x28725f = _0x1fd0c6[0x5], _0x11044a = _0x1fd0c6[0x6], _0x2a4098 = _0x1fd0c6[0x7], _0x128303 = _0x1fd0c6[0x8], _0x486c1e = Math[_0x361e33(0x27f)](_0xfca986), _0x294e15 = Math[_0x361e33(0x278)](_0xfca986);
            _0x360e9a[0x0] = _0x294e15 * _0x5f5804 + _0x486c1e * _0x26ac70, _0x360e9a[0x1] = _0x294e15 * _0xa3cc2b + _0x486c1e * _0x5b4386, _0x360e9a[0x2] = _0x294e15 * _0x538e72 + _0x486c1e * _0x28725f, _0x360e9a[0x3] = _0x294e15 * _0x26ac70 - _0x486c1e * _0x5f5804, _0x360e9a[0x4] = _0x294e15 * _0x5b4386 - _0x486c1e * _0xa3cc2b, _0x360e9a[0x5] = _0x294e15 * _0x28725f - _0x486c1e * _0x538e72, _0x360e9a[0x6] = _0x11044a, _0x360e9a[0x7] = _0x2a4098, _0x360e9a[0x8] = _0x128303;
        }
        ['scale'](_0x3aef7a, _0x14ca05) {
            var _0x4a40e1 = _0x6027f5, _0x21280a = _0x14ca05[_0x4a40e1(0x1fe)], _0x50b9a0 = this[_0x4a40e1(0x1fe)], _0x652c19 = _0x3aef7a['x'], _0x4d49a4 = _0x3aef7a['y'];
            _0x21280a[0x0] = _0x652c19 * _0x50b9a0[0x0], _0x21280a[0x1] = _0x652c19 * _0x50b9a0[0x1], _0x21280a[0x2] = _0x652c19 * _0x50b9a0[0x2], _0x21280a[0x3] = _0x4d49a4 * _0x50b9a0[0x3], _0x21280a[0x4] = _0x4d49a4 * _0x50b9a0[0x4], _0x21280a[0x5] = _0x4d49a4 * _0x50b9a0[0x5], _0x21280a[0x6] = _0x50b9a0[0x6], _0x21280a[0x7] = _0x50b9a0[0x7], _0x21280a[0x8] = _0x50b9a0[0x8];
        }
        [_0x6027f5(0x280)](_0x40c771) {
            var _0x3ce614 = _0x6027f5, _0x5d5511 = _0x40c771[_0x3ce614(0x1fe)], _0x512098 = this[_0x3ce614(0x1fe)], _0x2b3c4a = _0x512098[0x0], _0x29f427 = _0x512098[0x1], _0x515a4e = _0x512098[0x2], _0x5b901d = _0x512098[0x3], _0x181624 = _0x512098[0x4], _0x2756b0 = _0x512098[0x5], _0x3c9f9b = _0x512098[0x6], _0x4f214c = _0x512098[0x7], _0x113780 = _0x512098[0x8], _0xffd999 = _0x113780 * _0x181624 - _0x2756b0 * _0x4f214c, _0x262ec5 = -_0x113780 * _0x5b901d + _0x2756b0 * _0x3c9f9b, _0x54714f = _0x4f214c * _0x5b901d - _0x181624 * _0x3c9f9b, _0x4a49de = _0x2b3c4a * _0xffd999 + _0x29f427 * _0x262ec5 + _0x515a4e * _0x54714f;
            _0x4a49de && (_0x4a49de = 0x1 / _0x4a49de, _0x5d5511[0x0] = _0xffd999 * _0x4a49de, _0x5d5511[0x1] = (-_0x113780 * _0x29f427 + _0x515a4e * _0x4f214c) * _0x4a49de, _0x5d5511[0x2] = (_0x2756b0 * _0x29f427 - _0x515a4e * _0x181624) * _0x4a49de, _0x5d5511[0x3] = _0x262ec5 * _0x4a49de, _0x5d5511[0x4] = (_0x113780 * _0x2b3c4a - _0x515a4e * _0x3c9f9b) * _0x4a49de, _0x5d5511[0x5] = (-_0x2756b0 * _0x2b3c4a + _0x515a4e * _0x5b901d) * _0x4a49de, _0x5d5511[0x6] = _0x54714f * _0x4a49de, _0x5d5511[0x7] = (-_0x4f214c * _0x2b3c4a + _0x29f427 * _0x3c9f9b) * _0x4a49de, _0x5d5511[0x8] = (_0x181624 * _0x2b3c4a - _0x29f427 * _0x5b901d) * _0x4a49de);
        }
        ['transpose'](_0x43db73) {
            var _0x3b551c = _0x6027f5, _0xeda1c8 = _0x43db73[_0x3b551c(0x1fe)], _0x57d16c = this[_0x3b551c(0x1fe)];
            if (_0x43db73 === this) {
                var _0x25accc = _0x57d16c[0x1], _0xa8b591 = _0x57d16c[0x2], _0x472b27 = _0x57d16c[0x5];
                _0xeda1c8[0x1] = _0x57d16c[0x3], _0xeda1c8[0x2] = _0x57d16c[0x6], _0xeda1c8[0x3] = _0x25accc, _0xeda1c8[0x5] = _0x57d16c[0x7], _0xeda1c8[0x6] = _0xa8b591, _0xeda1c8[0x7] = _0x472b27;
            } else
                _0xeda1c8[0x0] = _0x57d16c[0x0], _0xeda1c8[0x1] = _0x57d16c[0x3], _0xeda1c8[0x2] = _0x57d16c[0x6], _0xeda1c8[0x3] = _0x57d16c[0x1], _0xeda1c8[0x4] = _0x57d16c[0x4], _0xeda1c8[0x5] = _0x57d16c[0x7], _0xeda1c8[0x6] = _0x57d16c[0x2], _0xeda1c8[0x7] = _0x57d16c[0x5], _0xeda1c8[0x8] = _0x57d16c[0x8];
        }
        [_0x6027f5(0x281)]() {
            var _0x879927 = this['elements'];
            _0x879927[0x0] = 0x1, _0x879927[0x1] = 0x0, _0x879927[0x2] = 0x0, _0x879927[0x3] = 0x0, _0x879927[0x4] = 0x1, _0x879927[0x5] = 0x0, _0x879927[0x6] = 0x0, _0x879927[0x7] = 0x0, _0x879927[0x8] = 0x1;
        }
        [_0x6027f5(0x1fc)](_0x1981e2) {
            var _0x365002 = _0x6027f5, _0x10799e, _0x1ef7ea, _0x51b857;
            if ((_0x1ef7ea = this['elements']) !== (_0x51b857 = _0x1981e2[_0x365002(0x1fe)])) {
                for (_0x10799e = 0x0; _0x10799e < 0x9; ++_0x10799e)
                    _0x51b857[_0x10799e] = _0x1ef7ea[_0x10799e];
            }
        }
        [_0x6027f5(0x1fd)]() {
            var _0x43c2dc = _0x6027f5, _0x69121f = new _0x5e1bd2();
            return this[_0x43c2dc(0x1fc)](_0x69121f), _0x69121f;
        }
        static [_0x6027f5(0x282)](_0x3342df, _0x5af05f, _0x150f9f, _0x318dfe) {
            var _0x3fbc65 = _0x6027f5;
            _0x3697cd['subtract'](_0x3342df, _0x5af05f, _0x5e1bd2[_0x3fbc65(0x283)]), _0x3697cd['normalize'](_0x5e1bd2[_0x3fbc65(0x283)], _0x5e1bd2[_0x3fbc65(0x283)]), _0x3697cd[_0x3fbc65(0x217)](_0x150f9f, _0x5e1bd2[_0x3fbc65(0x283)], _0x5e1bd2[_0x3fbc65(0x284)]), _0x3697cd[_0x3fbc65(0x214)](_0x5e1bd2['_tempV31'], _0x5e1bd2[_0x3fbc65(0x284)]), _0x3697cd[_0x3fbc65(0x217)](_0x5e1bd2[_0x3fbc65(0x283)], _0x5e1bd2[_0x3fbc65(0x284)], _0x5e1bd2[_0x3fbc65(0x285)]);
            var _0x343593 = _0x5e1bd2[_0x3fbc65(0x283)], _0xc5a2e6 = _0x5e1bd2['_tempV31'], _0x3691fe = _0x5e1bd2[_0x3fbc65(0x285)], _0xd877ed = _0x318dfe[_0x3fbc65(0x1fe)];
            _0xd877ed[0x0] = _0xc5a2e6['x'], _0xd877ed[0x3] = _0xc5a2e6['y'], _0xd877ed[0x6] = _0xc5a2e6['z'], _0xd877ed[0x1] = _0x3691fe['x'], _0xd877ed[0x4] = _0x3691fe['y'], _0xd877ed[0x7] = _0x3691fe['z'], _0xd877ed[0x2] = _0x343593['x'], _0xd877ed[0x5] = _0x343593['y'], _0xd877ed[0x8] = _0x343593['z'];
        }
    }
    _0x5e1bd2[_0x6027f5(0x286)] = new _0x5e1bd2(), _0x5e1bd2[_0x6027f5(0x283)] = new _0x3697cd(), _0x5e1bd2['_tempV31'] = new _0x3697cd(), _0x5e1bd2['_tempV32'] = new _0x3697cd();
    class _0x528999 {
        constructor(_0x27ead7 = 0x0, _0x711b14 = 0x0, _0x5eff69 = 0x0, _0x5af7aa = 0x1) {
            this['x'] = _0x27ead7, this['y'] = _0x711b14, this['z'] = _0x5eff69, this['w'] = _0x5af7aa;
        }
        static [_0x6027f5(0x287)](_0x339080, _0x5ac44c, _0x40ec08, _0x1bdce1) {
            var _0x1c170d = _0x6027f5, _0xe634d8 = 0.5 * _0x40ec08, _0x50607b = 0.5 * _0x5ac44c, _0x1e39b9 = 0.5 * _0x339080, _0x52fd45 = Math[_0x1c170d(0x27f)](_0xe634d8), _0x5498d7 = Math['cos'](_0xe634d8), _0x3d4050 = Math[_0x1c170d(0x27f)](_0x50607b), _0xb748c7 = Math[_0x1c170d(0x278)](_0x50607b), _0x5c8fe8 = Math[_0x1c170d(0x27f)](_0x1e39b9), _0x3aef3b = Math[_0x1c170d(0x278)](_0x1e39b9);
            _0x1bdce1['x'] = _0x3aef3b * _0x3d4050 * _0x5498d7 + _0x5c8fe8 * _0xb748c7 * _0x52fd45, _0x1bdce1['y'] = _0x5c8fe8 * _0xb748c7 * _0x5498d7 - _0x3aef3b * _0x3d4050 * _0x52fd45, _0x1bdce1['z'] = _0x3aef3b * _0xb748c7 * _0x52fd45 - _0x5c8fe8 * _0x3d4050 * _0x5498d7, _0x1bdce1['w'] = _0x3aef3b * _0xb748c7 * _0x5498d7 + _0x5c8fe8 * _0x3d4050 * _0x52fd45;
        }
        static [_0x6027f5(0x27b)](_0x51bccd, _0x12d285, _0x1b562f) {
            var _0x116607 = _0x51bccd['x'], _0x48b297 = _0x51bccd['y'], _0x3c868a = _0x51bccd['z'], _0x5711c7 = _0x51bccd['w'], _0xb0890c = _0x12d285['x'], _0x5a4a61 = _0x12d285['y'], _0x5c5396 = _0x12d285['z'], _0xfce373 = _0x12d285['w'], _0x327616 = _0x48b297 * _0x5c5396 - _0x3c868a * _0x5a4a61, _0x392e9c = _0x3c868a * _0xb0890c - _0x116607 * _0x5c5396, _0xb3b79d = _0x116607 * _0x5a4a61 - _0x48b297 * _0xb0890c, _0x4d7838 = _0x116607 * _0xb0890c + _0x48b297 * _0x5a4a61 + _0x3c868a * _0x5c5396;
            _0x1b562f['x'] = _0x116607 * _0xfce373 + _0xb0890c * _0x5711c7 + _0x327616, _0x1b562f['y'] = _0x48b297 * _0xfce373 + _0x5a4a61 * _0x5711c7 + _0x392e9c, _0x1b562f['z'] = _0x3c868a * _0xfce373 + _0x5c5396 * _0x5711c7 + _0xb3b79d, _0x1b562f['w'] = _0x5711c7 * _0xfce373 - _0x4d7838;
        }
        static ['arcTanAngle'](_0x23ace1, _0xdaaf62) {
            var _0x23af92 = _0x6027f5;
            return 0x0 == _0x23ace1 ? 0x1 == _0xdaaf62 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x23ace1 > 0x0 ? Math[_0x23af92(0x288)](_0xdaaf62 / _0x23ace1) : _0x23ace1 < 0x0 ? _0xdaaf62 > 0x0 ? Math[_0x23af92(0x288)](_0xdaaf62 / _0x23ace1) + Math['PI'] : Math[_0x23af92(0x288)](_0xdaaf62 / _0x23ace1) - Math['PI'] : 0x0;
        }
        static [_0x6027f5(0x289)](_0x5a4f6f, _0x88109, _0x58adae) {
            var _0x49e12f = _0x6027f5;
            _0x3697cd[_0x49e12f(0x28a)](_0x88109, _0x5a4f6f, _0x528999[_0x49e12f(0x28b)]), _0x3697cd['normalize'](_0x528999[_0x49e12f(0x28b)], _0x528999[_0x49e12f(0x28b)]), _0x58adae['x'] = Math[_0x49e12f(0x28c)](_0x528999[_0x49e12f(0x28b)]['y']), _0x58adae['y'] = _0x528999[_0x49e12f(0x28d)](-_0x528999[_0x49e12f(0x28b)]['z'], -_0x528999[_0x49e12f(0x28b)]['x']);
        }
        static ['createFromAxisAngle'](_0x12d126, _0x861982, _0x4e2502) {
            var _0x1f4517 = _0x6027f5;
            _0x861982 *= 0.5;
            var _0x60a932 = Math[_0x1f4517(0x27f)](_0x861982);
            _0x4e2502['x'] = _0x60a932 * _0x12d126['x'], _0x4e2502['y'] = _0x60a932 * _0x12d126['y'], _0x4e2502['z'] = _0x60a932 * _0x12d126['z'], _0x4e2502['w'] = Math[_0x1f4517(0x278)](_0x861982);
        }
        static [_0x6027f5(0x27a)](_0xa03230, _0x2f7b88) {
            var _0x22a039 = _0x6027f5, _0x48b006, _0x32c155, _0xaa13af = _0xa03230[_0x22a039(0x1fe)], _0x50a04b = _0xaa13af[0x0] + _0xaa13af[0x5] + _0xaa13af[0xa];
            _0x50a04b > 0x0 ? (_0x48b006 = Math['sqrt'](_0x50a04b + 0x1), _0x2f7b88['w'] = 0.5 * _0x48b006, _0x48b006 = 0.5 / _0x48b006, _0x2f7b88['x'] = (_0xaa13af[0x6] - _0xaa13af[0x9]) * _0x48b006, _0x2f7b88['y'] = (_0xaa13af[0x8] - _0xaa13af[0x2]) * _0x48b006, _0x2f7b88['z'] = (_0xaa13af[0x1] - _0xaa13af[0x4]) * _0x48b006) : _0xaa13af[0x0] >= _0xaa13af[0x5] && _0xaa13af[0x0] >= _0xaa13af[0xa] ? (_0x32c155 = 0.5 / (_0x48b006 = Math[_0x22a039(0x1f3)](0x1 + _0xaa13af[0x0] - _0xaa13af[0x5] - _0xaa13af[0xa])), _0x2f7b88['x'] = 0.5 * _0x48b006, _0x2f7b88['y'] = (_0xaa13af[0x1] + _0xaa13af[0x4]) * _0x32c155, _0x2f7b88['z'] = (_0xaa13af[0x2] + _0xaa13af[0x8]) * _0x32c155, _0x2f7b88['w'] = (_0xaa13af[0x6] - _0xaa13af[0x9]) * _0x32c155) : _0xaa13af[0x5] > _0xaa13af[0xa] ? (_0x32c155 = 0.5 / (_0x48b006 = Math[_0x22a039(0x1f3)](0x1 + _0xaa13af[0x5] - _0xaa13af[0x0] - _0xaa13af[0xa])), _0x2f7b88['x'] = (_0xaa13af[0x4] + _0xaa13af[0x1]) * _0x32c155, _0x2f7b88['y'] = 0.5 * _0x48b006, _0x2f7b88['z'] = (_0xaa13af[0x9] + _0xaa13af[0x6]) * _0x32c155, _0x2f7b88['w'] = (_0xaa13af[0x8] - _0xaa13af[0x2]) * _0x32c155) : (_0x32c155 = 0.5 / (_0x48b006 = Math[_0x22a039(0x1f3)](0x1 + _0xaa13af[0xa] - _0xaa13af[0x0] - _0xaa13af[0x5])), _0x2f7b88['x'] = (_0xaa13af[0x8] + _0xaa13af[0x2]) * _0x32c155, _0x2f7b88['y'] = (_0xaa13af[0x9] + _0xaa13af[0x6]) * _0x32c155, _0x2f7b88['z'] = 0.5 * _0x48b006, _0x2f7b88['w'] = (_0xaa13af[0x1] - _0xaa13af[0x4]) * _0x32c155);
        }
        static [_0x6027f5(0x28e)](_0x3b236d, _0x21f553, _0x570ec1, _0xf7dcc6) {
            var _0x24e2c3 = _0x6027f5, _0x596f65, _0x59b68e, _0xa6486, _0x3ec0b9, _0x4f623e, _0x1e9b3f = _0x3b236d['x'], _0x528537 = _0x3b236d['y'], _0x1aa009 = _0x3b236d['z'], _0x482f25 = _0x3b236d['w'], _0xb08aa = _0x21f553['x'], _0xc43966 = _0x21f553['y'], _0x57bca0 = _0x21f553['z'], _0x200bbd = _0x21f553['w'];
            return (_0x59b68e = _0x1e9b3f * _0xb08aa + _0x528537 * _0xc43966 + _0x1aa009 * _0x57bca0 + _0x482f25 * _0x200bbd) < 0x0 && (_0x59b68e = -_0x59b68e, _0xb08aa = -_0xb08aa, _0xc43966 = -_0xc43966, _0x57bca0 = -_0x57bca0, _0x200bbd = -_0x200bbd), 0x1 - _0x59b68e > 0.000001 ? (_0x596f65 = Math[_0x24e2c3(0x28f)](_0x59b68e), _0xa6486 = Math[_0x24e2c3(0x27f)](_0x596f65), _0x3ec0b9 = Math[_0x24e2c3(0x27f)]((0x1 - _0x570ec1) * _0x596f65) / _0xa6486, _0x4f623e = Math[_0x24e2c3(0x27f)](_0x570ec1 * _0x596f65) / _0xa6486) : (_0x3ec0b9 = 0x1 - _0x570ec1, _0x4f623e = _0x570ec1), _0xf7dcc6['x'] = _0x3ec0b9 * _0x1e9b3f + _0x4f623e * _0xb08aa, _0xf7dcc6['y'] = _0x3ec0b9 * _0x528537 + _0x4f623e * _0xc43966, _0xf7dcc6['z'] = _0x3ec0b9 * _0x1aa009 + _0x4f623e * _0x57bca0, _0xf7dcc6['w'] = _0x3ec0b9 * _0x482f25 + _0x4f623e * _0x200bbd, _0xf7dcc6;
        }
        static [_0x6027f5(0x202)](_0x34e2d5, _0x4f203f, _0x1d8765, _0x58680c) {
            var _0x40aee2 = _0x6027f5, _0x14b540 = 0x1 - _0x1d8765;
            _0x528999[_0x40aee2(0x20b)](_0x34e2d5, _0x4f203f) >= 0x0 ? (_0x58680c['x'] = _0x14b540 * _0x34e2d5['x'] + _0x1d8765 * _0x4f203f['x'], _0x58680c['y'] = _0x14b540 * _0x34e2d5['y'] + _0x1d8765 * _0x4f203f['y'], _0x58680c['z'] = _0x14b540 * _0x34e2d5['z'] + _0x1d8765 * _0x4f203f['z'], _0x58680c['w'] = _0x14b540 * _0x34e2d5['w'] + _0x1d8765 * _0x4f203f['w']) : (_0x58680c['x'] = _0x14b540 * _0x34e2d5['x'] - _0x1d8765 * _0x4f203f['x'], _0x58680c['y'] = _0x14b540 * _0x34e2d5['y'] - _0x1d8765 * _0x4f203f['y'], _0x58680c['z'] = _0x14b540 * _0x34e2d5['z'] - _0x1d8765 * _0x4f203f['z'], _0x58680c['w'] = _0x14b540 * _0x34e2d5['w'] - _0x1d8765 * _0x4f203f['w']), _0x58680c['normalize'](_0x58680c);
        }
        static ['add'](_0xb7109b, _0x4aabfa, _0x170444) {
            _0x170444['x'] = _0xb7109b['x'] + _0x4aabfa['x'], _0x170444['y'] = _0xb7109b['y'] + _0x4aabfa['y'], _0x170444['z'] = _0xb7109b['z'] + _0x4aabfa['z'], _0x170444['w'] = _0xb7109b['w'] + _0x4aabfa['w'];
        }
        static ['dot'](_0x4f10e0, _0x368966) {
            return _0x4f10e0['x'] * _0x368966['x'] + _0x4f10e0['y'] * _0x368966['y'] + _0x4f10e0['z'] * _0x368966['z'] + _0x4f10e0['w'] * _0x368966['w'];
        }
        [_0x6027f5(0x290)](_0x50bb4a, _0x2819a0) {
            _0x2819a0['x'] = this['x'] * _0x50bb4a, _0x2819a0['y'] = this['y'] * _0x50bb4a, _0x2819a0['z'] = this['z'] * _0x50bb4a, _0x2819a0['w'] = this['w'] * _0x50bb4a;
        }
        [_0x6027f5(0x214)](_0x1899e2) {
            var _0x37273b = _0x6027f5, _0x26ba51 = this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
            _0x26ba51 > 0x0 && (_0x26ba51 = 0x1 / Math[_0x37273b(0x1f3)](_0x26ba51), _0x1899e2['x'] = this['x'] * _0x26ba51, _0x1899e2['y'] = this['y'] * _0x26ba51, _0x1899e2['z'] = this['z'] * _0x26ba51, _0x1899e2['w'] = this['w'] * _0x26ba51);
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        [_0x6027f5(0x291)](_0x4ad5ff, _0x5cc5fe) {
            var _0x482ff2 = _0x6027f5;
            _0x4ad5ff *= 0.5;
            var _0x3874e6 = Math[_0x482ff2(0x27f)](_0x4ad5ff), _0x47683b = Math['cos'](_0x4ad5ff);
            _0x5cc5fe['x'] = this['x'] * _0x47683b + this['w'] * _0x3874e6, _0x5cc5fe['y'] = this['y'] * _0x47683b + this['z'] * _0x3874e6, _0x5cc5fe['z'] = this['z'] * _0x47683b - this['y'] * _0x3874e6, _0x5cc5fe['w'] = this['w'] * _0x47683b - this['x'] * _0x3874e6;
        }
        [_0x6027f5(0x292)](_0x2607ce, _0x123b5d) {
            var _0x39aa73 = _0x6027f5;
            _0x2607ce *= 0.5;
            var _0x49cd10 = Math[_0x39aa73(0x27f)](_0x2607ce), _0x3be070 = Math[_0x39aa73(0x278)](_0x2607ce);
            _0x123b5d['x'] = this['x'] * _0x3be070 - this['z'] * _0x49cd10, _0x123b5d['y'] = this['y'] * _0x3be070 + this['w'] * _0x49cd10, _0x123b5d['z'] = this['z'] * _0x3be070 + this['x'] * _0x49cd10, _0x123b5d['w'] = this['w'] * _0x3be070 - this['y'] * _0x49cd10;
        }
        ['rotateZ'](_0x22634e, _0x142eb2) {
            var _0x2d6f12 = _0x6027f5;
            _0x22634e *= 0.5;
            var _0x2b01c6 = Math[_0x2d6f12(0x27f)](_0x22634e), _0x2d1f3c = Math[_0x2d6f12(0x278)](_0x22634e);
            _0x142eb2['x'] = this['x'] * _0x2d1f3c + this['y'] * _0x2b01c6, _0x142eb2['y'] = this['y'] * _0x2d1f3c - this['x'] * _0x2b01c6, _0x142eb2['z'] = this['z'] * _0x2d1f3c + this['w'] * _0x2b01c6, _0x142eb2['w'] = this['w'] * _0x2d1f3c - this['z'] * _0x2b01c6;
        }
        [_0x6027f5(0x293)](_0x457fb7) {
            var _0x508cfd = _0x6027f5;
            _0x3697cd[_0x508cfd(0x294)](_0x3697cd['_ForwardRH'], this, _0x528999[_0x508cfd(0x295)]), _0x3697cd[_0x508cfd(0x294)](_0x3697cd[_0x508cfd(0x296)], this, _0x528999[_0x508cfd(0x297)]);
            var _0x2b1e5a = _0x528999['TEMPVector32'];
            _0x528999['angleTo'](_0x3697cd[_0x508cfd(0x21b)], _0x528999[_0x508cfd(0x295)], _0x528999[_0x508cfd(0x298)]);
            var _0x563abc = _0x528999[_0x508cfd(0x298)];
            _0x563abc['x'] == Math['PI'] / 0x2 ? (_0x563abc['y'] = _0x528999[_0x508cfd(0x28d)](_0x2b1e5a['z'], _0x2b1e5a['x']), _0x563abc['z'] = 0x0) : _0x563abc['x'] == -Math['PI'] / 0x2 ? (_0x563abc['y'] = _0x528999[_0x508cfd(0x28d)](-_0x2b1e5a['z'], -_0x2b1e5a['x']), _0x563abc['z'] = 0x0) : (_0x525782[_0x508cfd(0x228)][_0x508cfd(0x299)](-_0x563abc['y'], _0x525782[_0x508cfd(0x228)][_0x508cfd(0x29a)]), _0x525782['Matrix4x4'][_0x508cfd(0x29b)](-_0x563abc['x'], _0x525782[_0x508cfd(0x228)]['TEMPMatrix1']), _0x3697cd[_0x508cfd(0x216)](_0x528999[_0x508cfd(0x297)], _0x525782[_0x508cfd(0x228)][_0x508cfd(0x29a)], _0x528999['TEMPVector32']), _0x3697cd['transformCoordinate'](_0x528999[_0x508cfd(0x297)], _0x525782['Matrix4x4'][_0x508cfd(0x29c)], _0x528999[_0x508cfd(0x297)]), _0x563abc['z'] = _0x528999[_0x508cfd(0x28d)](_0x2b1e5a['y'], -_0x2b1e5a['x'])), _0x563abc['y'] <= -Math['PI'] && (_0x563abc['y'] = Math['PI']), _0x563abc['z'] <= -Math['PI'] && (_0x563abc['z'] = Math['PI']), _0x563abc['y'] >= Math['PI'] && _0x563abc['z'] >= Math['PI'] && (_0x563abc['y'] = 0x0, _0x563abc['z'] = 0x0, _0x563abc['x'] = Math['PI'] - _0x563abc['x']);
            var _0x3233ca = _0x457fb7;
            _0x3233ca['x'] = _0x563abc['y'], _0x3233ca['y'] = _0x563abc['x'], _0x3233ca['z'] = _0x563abc['z'];
        }
        [_0x6027f5(0x280)](_0xdf59c4) {
            var _0x3d2c75 = this['x'], _0x24d598 = this['y'], _0x45a8c0 = this['z'], _0x1057dd = this['w'], _0x3a47a2 = _0x3d2c75 * _0x3d2c75 + _0x24d598 * _0x24d598 + _0x45a8c0 * _0x45a8c0 + _0x1057dd * _0x1057dd, _0x4778ed = _0x3a47a2 ? 0x1 / _0x3a47a2 : 0x0;
            _0xdf59c4['x'] = -_0x3d2c75 * _0x4778ed, _0xdf59c4['y'] = -_0x24d598 * _0x4778ed, _0xdf59c4['z'] = -_0x45a8c0 * _0x4778ed, _0xdf59c4['w'] = _0x1057dd * _0x4778ed;
        }
        ['identity']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0, this['w'] = 0x1;
        }
        [_0x6027f5(0x1fa)](_0x88ba6d, _0x2fccb4 = 0x0) {
            this['x'] = _0x88ba6d[_0x2fccb4 + 0x0], this['y'] = _0x88ba6d[_0x2fccb4 + 0x1], this['z'] = _0x88ba6d[_0x2fccb4 + 0x2], this['w'] = _0x88ba6d[_0x2fccb4 + 0x3];
        }
        [_0x6027f5(0x1fc)](_0x578943) {
            this !== _0x578943 && (_0x578943['x'] = this['x'], _0x578943['y'] = this['y'], _0x578943['z'] = this['z'], _0x578943['w'] = this['w']);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x238cd4 = new _0x528999();
            return this['cloneTo'](_0x238cd4), _0x238cd4;
        }
        [_0x6027f5(0x218)](_0x2a2b1b) {
            var _0x8a54f = _0x6027f5;
            return _0x255128['nearEqual'](this['x'], _0x2a2b1b['x']) && _0x255128[_0x8a54f(0x204)](this['y'], _0x2a2b1b['y']) && _0x255128[_0x8a54f(0x204)](this['z'], _0x2a2b1b['z']) && _0x255128[_0x8a54f(0x204)](this['w'], _0x2a2b1b['w']);
        }
        static [_0x6027f5(0x29d)](_0xa039ef, _0x3174f7, _0x5d2ad9) {
            var _0x1262f2 = _0x6027f5;
            _0x528999[_0x1262f2(0x282)](_0x3697cd[_0x1262f2(0x21b)], _0xa039ef, _0x3174f7, _0x5d2ad9);
        }
        static [_0x6027f5(0x282)](_0x7f5e44, _0x4b7591, _0x3409e9, _0x3b258b) {
            var _0x1ebfad = _0x6027f5;
            _0x5e1bd2[_0x1ebfad(0x282)](_0x7f5e44, _0x4b7591, _0x3409e9, _0x528999['_tempMatrix3x3']), _0x528999['rotationMatrix'](_0x528999[_0x1ebfad(0x29e)], _0x3b258b);
        }
        ['lengthSquared']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static [_0x6027f5(0x280)](_0x4b17b6, _0x104e28) {
            var _0x4af45c = _0x6027f5, _0x5d7629 = _0x4b17b6[_0x4af45c(0x206)]();
            _0x255128[_0x4af45c(0x1f1)](_0x5d7629) || (_0x5d7629 = 0x1 / _0x5d7629, _0x104e28['x'] = -_0x4b17b6['x'] * _0x5d7629, _0x104e28['y'] = -_0x4b17b6['y'] * _0x5d7629, _0x104e28['z'] = -_0x4b17b6['z'] * _0x5d7629, _0x104e28['w'] = _0x4b17b6['w'] * _0x5d7629);
        }
        static [_0x6027f5(0x29f)](_0x49474b, _0x42c069) {
            var _0x2cc02b = _0x6027f5, _0x59595b, _0x458e89, _0x2bd81b = _0x49474b['elements'], _0x1bc222 = _0x2bd81b[0x0], _0xcdb0c3 = _0x2bd81b[0x1], _0x4f192e = _0x2bd81b[0x2], _0x3564e8 = _0x2bd81b[0x3], _0x573a80 = _0x2bd81b[0x4], _0x1f0de0 = _0x2bd81b[0x5], _0x7cd153 = _0x2bd81b[0x6], _0x203d35 = _0x2bd81b[0x7], _0x5d820b = _0x2bd81b[0x8], _0x3d5adf = _0x1bc222 + _0x573a80 + _0x5d820b;
            _0x3d5adf > 0x0 ? (_0x59595b = Math[_0x2cc02b(0x1f3)](_0x3d5adf + 0x1), _0x42c069['w'] = 0.5 * _0x59595b, _0x59595b = 0.5 / _0x59595b, _0x42c069['x'] = (_0x1f0de0 - _0x203d35) * _0x59595b, _0x42c069['y'] = (_0x7cd153 - _0x4f192e) * _0x59595b, _0x42c069['z'] = (_0xcdb0c3 - _0x3564e8) * _0x59595b) : _0x1bc222 >= _0x573a80 && _0x1bc222 >= _0x5d820b ? (_0x458e89 = 0.5 / (_0x59595b = Math[_0x2cc02b(0x1f3)](0x1 + _0x1bc222 - _0x573a80 - _0x5d820b)), _0x42c069['x'] = 0.5 * _0x59595b, _0x42c069['y'] = (_0xcdb0c3 + _0x3564e8) * _0x458e89, _0x42c069['z'] = (_0x4f192e + _0x7cd153) * _0x458e89, _0x42c069['w'] = (_0x1f0de0 - _0x203d35) * _0x458e89) : _0x573a80 > _0x5d820b ? (_0x458e89 = 0.5 / (_0x59595b = Math[_0x2cc02b(0x1f3)](0x1 + _0x573a80 - _0x1bc222 - _0x5d820b)), _0x42c069['x'] = (_0x3564e8 + _0xcdb0c3) * _0x458e89, _0x42c069['y'] = 0.5 * _0x59595b, _0x42c069['z'] = (_0x203d35 + _0x1f0de0) * _0x458e89, _0x42c069['w'] = (_0x7cd153 - _0x4f192e) * _0x458e89) : (_0x458e89 = 0.5 / (_0x59595b = Math[_0x2cc02b(0x1f3)](0x1 + _0x5d820b - _0x1bc222 - _0x573a80)), _0x42c069['x'] = (_0x7cd153 + _0x4f192e) * _0x458e89, _0x42c069['y'] = (_0x203d35 + _0x1f0de0) * _0x458e89, _0x42c069['z'] = 0.5 * _0x59595b, _0x42c069['w'] = (_0xcdb0c3 - _0x3564e8) * _0x458e89);
        }
        [_0x6027f5(0x20d)](_0x55f0de = null) {
            var _0x4ab2ec = _0x6027f5;
            _0x55f0de ? (this[_0x4ab2ec(0x1fe)] = _0x55f0de, this['elements'][0x0] = this['x'], this[_0x4ab2ec(0x1fe)][0x1] = this['y'], this[_0x4ab2ec(0x1fe)][0x2] = this['z'], this[_0x4ab2ec(0x1fe)][0x3] = this['w']) : this[_0x4ab2ec(0x1fe)] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x30a72c[_0x4ab2ec(0x1ff)](this, 'x', 0x0), _0x30a72c[_0x4ab2ec(0x1ff)](this, 'y', 0x1), _0x30a72c[_0x4ab2ec(0x1ff)](this, 'z', 0x2), _0x30a72c[_0x4ab2ec(0x1ff)](this, 'w', 0x3);
        }
    }
    _0x528999[_0x6027f5(0x28b)] = new _0x3697cd(), _0x528999[_0x6027f5(0x295)] = new _0x3697cd(), _0x528999['TEMPVector32'] = new _0x3697cd(), _0x528999[_0x6027f5(0x298)] = new _0x3697cd(), _0x528999[_0x6027f5(0x29e)] = new _0x5e1bd2(), _0x528999[_0x6027f5(0x286)] = new _0x528999(), _0x528999[_0x6027f5(0x2a0)] = new _0x528999(NaN, NaN, NaN, NaN);
    class _0x18a7c7 extends _0x12dcd5 {
        constructor() {
            var _0x5ab59a = _0x6027f5;
            super(), this[_0x5ab59a(0x274)] = new _0x5b8e4e(), this['outTangent'] = new _0x5b8e4e(), this[_0x5ab59a(0x2a1)] = new _0x528999();
        }
        ['cloneTo'](_0x48dee6) {
            var _0xfa71ea = _0x6027f5;
            super[_0xfa71ea(0x1fc)](_0x48dee6);
            var _0x2cb044 = _0x48dee6;
            this['inTangent'][_0xfa71ea(0x1fc)](_0x2cb044['inTangent']), this[_0xfa71ea(0x2a2)]['cloneTo'](_0x2cb044[_0xfa71ea(0x2a2)]), this[_0xfa71ea(0x2a1)][_0xfa71ea(0x1fc)](_0x2cb044[_0xfa71ea(0x2a1)]);
        }
    }
    class _0x1b6908 extends _0x12dcd5 {
        constructor() {
            var _0x351f72 = _0x6027f5;
            super(), this['inTangent'] = new _0x3697cd(), this[_0x351f72(0x2a2)] = new _0x3697cd(), this[_0x351f72(0x2a1)] = new _0x3697cd();
        }
        [_0x6027f5(0x1fc)](_0x2be37e) {
            var _0x398372 = _0x6027f5;
            super[_0x398372(0x1fc)](_0x2be37e);
            var _0x5a881f = _0x2be37e;
            this[_0x398372(0x274)][_0x398372(0x1fc)](_0x5a881f[_0x398372(0x274)]), this['outTangent']['cloneTo'](_0x5a881f[_0x398372(0x2a2)]), this[_0x398372(0x2a1)][_0x398372(0x1fc)](_0x5a881f[_0x398372(0x2a1)]);
        }
    }
    class _0x489078 {
        static [_0x6027f5(0x2a3)]() {
            var _0x3624b8 = _0x6027f5;
            _0x489078[_0x3624b8(0x2a4)]['offset'] = _0x489078[_0x3624b8(0x2a5)][_0x3624b8(0x2a6)](), _0x489078['_DATA'][_0x3624b8(0x2a7)] = _0x489078['_reader'][_0x3624b8(0x2a6)]();
        }
        static ['READ_BLOCK']() {
            var _0x267845 = _0x6027f5;
            for (var _0x1f526c = _0x489078[_0x267845(0x2a8)]['count'] = _0x489078[_0x267845(0x2a5)][_0x267845(0x2a9)](), _0x380101 = _0x489078[_0x267845(0x2a8)][_0x267845(0x2aa)] = [], _0x4bca77 = _0x489078[_0x267845(0x2a8)][_0x267845(0x2ab)] = [], _0x3ee48f = 0x0; _0x3ee48f < _0x1f526c; _0x3ee48f++)
                _0x380101['push'](_0x489078[_0x267845(0x2a5)][_0x267845(0x2a6)]()), _0x4bca77[_0x267845(0x2ac)](_0x489078[_0x267845(0x2a5)][_0x267845(0x2a6)]());
        }
        static [_0x6027f5(0x2ad)]() {
            var _0x4756e8 = _0x6027f5, _0x21aac2 = _0x489078[_0x4756e8(0x2a5)][_0x4756e8(0x2a6)](), _0x4c0b7a = _0x489078[_0x4756e8(0x2a5)][_0x4756e8(0x2a9)](), _0x3222ff = _0x489078[_0x4756e8(0x2a5)]['pos'];
            _0x489078['_reader'][_0x4756e8(0x2ae)] = _0x21aac2 + _0x489078[_0x4756e8(0x2a4)]['offset'];
            for (var _0x55f912 = 0x0; _0x55f912 < _0x4c0b7a; _0x55f912++)
                _0x489078[_0x4756e8(0x2af)][_0x55f912] = _0x489078[_0x4756e8(0x2a5)][_0x4756e8(0x2b0)]();
            _0x489078[_0x4756e8(0x2a5)][_0x4756e8(0x2ae)] = _0x3222ff;
        }
        static [_0x6027f5(0x2b1)](_0x411521, _0x28feea) {
            var _0x36b1cd = _0x6027f5;
            _0x489078[_0x36b1cd(0x2b2)] = _0x411521, _0x489078[_0x36b1cd(0x2a5)] = _0x28feea, _0x489078[_0x36b1cd(0x2a3)](), _0x489078['READ_BLOCK'](), _0x489078['READ_STRINGS']();
            for (var _0x387860 = 0x0, _0x29d819 = _0x489078[_0x36b1cd(0x2a8)][_0x36b1cd(0x2b3)]; _0x387860 < _0x29d819; _0x387860++) {
                var _0xd140b2 = _0x28feea['getUint16'](), _0x15766f = _0x489078[_0x36b1cd(0x2af)][_0xd140b2], _0x5dbb38 = _0x489078[_0x36b1cd(0x2b4) + _0x15766f];
                if (null == _0x5dbb38)
                    throw new Error(_0x36b1cd(0x2b5) + _0xd140b2 + '\x20' + _0x15766f);
                _0x5dbb38[_0x36b1cd(0x2b6)](null);
            }
        }
        static ['READ_ANIMATIONS']() {
            var _0x558941 = _0x6027f5, _0x58d487, _0x184311, _0x39def9, _0x42c171 = _0x489078[_0x558941(0x2a5)], _0x328a3a = [], _0x1adab5 = _0x42c171['getUint16']();
            for (_0x328a3a[_0x558941(0x205)] = _0x1adab5, _0x58d487 = 0x0; _0x58d487 < _0x1adab5; _0x58d487++)
                _0x328a3a[_0x58d487] = _0x42c171['getFloat32']();
            var _0x339419 = _0x489078[_0x558941(0x2b2)];
            _0x339419[_0x558941(0x2b7)] = _0x489078['_strings'][_0x42c171[_0x558941(0x2a9)]()];
            var _0x20283b = _0x339419[_0x558941(0x2b8)] = _0x42c171[_0x558941(0x2b9)]();
            _0x339419[_0x558941(0x2ba)] = !!_0x42c171[_0x558941(0x2bb)](), _0x339419[_0x558941(0x2bc)] = _0x42c171[_0x558941(0x2bd)]();
            var _0x18859d = _0x42c171['getInt16'](), _0xe4fc5c = _0x339419[_0x558941(0x2be)];
            _0xe4fc5c[_0x558941(0x2b3)] = _0x18859d;
            var _0x18b2bf = _0x339419[_0x558941(0x2bf)] = {}, _0x4eefc5 = _0x339419['_nodesDic'] = {};
            for (_0x58d487 = 0x0; _0x58d487 < _0x18859d; _0x58d487++) {
                _0x39def9 = new _0x359f9a(), _0xe4fc5c[_0x558941(0x2c0)](_0x58d487, _0x39def9), _0x39def9[_0x558941(0x2c1)] = _0x58d487;
                var _0x173374 = _0x39def9['type'] = _0x42c171[_0x558941(0x2c2)](), _0x4143a1 = _0x42c171['getUint16']();
                for (_0x39def9['_setOwnerPathCount'](_0x4143a1), _0x184311 = 0x0; _0x184311 < _0x4143a1; _0x184311++)
                    _0x39def9['_setOwnerPathByIndex'](_0x184311, _0x489078[_0x558941(0x2af)][_0x42c171[_0x558941(0x2a9)]()]);
                var _0x5935bd = _0x39def9['_joinOwnerPath']('/'), _0x2d0482 = _0x18b2bf[_0x5935bd];
                _0x2d0482 || (_0x18b2bf[_0x5935bd] = _0x2d0482 = []), _0x2d0482[_0x558941(0x2ac)](_0x39def9), _0x39def9[_0x558941(0x2c3)] = _0x489078[_0x558941(0x2af)][_0x42c171[_0x558941(0x2a9)]()];
                var _0x5045c7 = _0x42c171[_0x558941(0x2a9)]();
                for (_0x39def9['_setPropertyCount'](_0x5045c7), _0x184311 = 0x0; _0x184311 < _0x5045c7; _0x184311++)
                    _0x39def9[_0x558941(0x26b)](_0x184311, _0x489078[_0x558941(0x2af)][_0x42c171['getUint16']()]);
                var _0x1ddbf5 = _0x5935bd + '.' + _0x39def9[_0x558941(0x2c3)] + '.' + _0x39def9[_0x558941(0x26c)]('.');
                _0x4eefc5[_0x1ddbf5] = _0x39def9, _0x39def9[_0x558941(0x2c4)] = _0x1ddbf5;
                var _0xf7fe03 = _0x42c171['getUint16']();
                for (_0x39def9[_0x558941(0x26e)](_0xf7fe03), _0x184311 = 0x0; _0x184311 < _0xf7fe03; _0x184311++)
                    switch (_0x173374) {
                    case 0x0:
                        var _0x26e4ec = new _0x25af36();
                        _0x39def9[_0x558941(0x26f)](_0x184311, _0x26e4ec), _0x26e4ec[_0x558941(0x273)] = _0x328a3a[_0x42c171[_0x558941(0x2a9)]()], _0x26e4ec[_0x558941(0x274)] = _0x42c171['getFloat32'](), _0x26e4ec[_0x558941(0x2a2)] = _0x42c171[_0x558941(0x2b9)](), _0x26e4ec['value'] = _0x42c171[_0x558941(0x2b9)]();
                        break;
                    case 0x1:
                    case 0x3:
                    case 0x4:
                        var _0x56b6bd = new _0x1b6908();
                        _0x39def9[_0x558941(0x26f)](_0x184311, _0x56b6bd), _0x56b6bd[_0x558941(0x273)] = _0x328a3a[_0x42c171['getUint16']()];
                        var _0x1954e7 = _0x56b6bd[_0x558941(0x274)], _0x261ceb = _0x56b6bd[_0x558941(0x2a2)], _0x12e3f4 = _0x56b6bd['value'];
                        _0x1954e7['x'] = _0x42c171[_0x558941(0x2b9)](), _0x1954e7['y'] = _0x42c171[_0x558941(0x2b9)](), _0x1954e7['z'] = _0x42c171[_0x558941(0x2b9)](), _0x261ceb['x'] = _0x42c171[_0x558941(0x2b9)](), _0x261ceb['y'] = _0x42c171[_0x558941(0x2b9)](), _0x261ceb['z'] = _0x42c171[_0x558941(0x2b9)](), _0x12e3f4['x'] = _0x42c171[_0x558941(0x2b9)](), _0x12e3f4['y'] = _0x42c171[_0x558941(0x2b9)](), _0x12e3f4['z'] = _0x42c171['getFloat32']();
                        break;
                    case 0x2:
                        var _0x1ca6ec = new _0x18a7c7();
                        _0x39def9[_0x558941(0x26f)](_0x184311, _0x1ca6ec), _0x1ca6ec[_0x558941(0x273)] = _0x328a3a[_0x42c171[_0x558941(0x2a9)]()];
                        var _0x16c53e = _0x1ca6ec[_0x558941(0x274)], _0x59afa4 = _0x1ca6ec[_0x558941(0x2a2)], _0x20e930 = _0x1ca6ec['value'];
                        _0x16c53e['x'] = _0x42c171['getFloat32'](), _0x16c53e['y'] = _0x42c171[_0x558941(0x2b9)](), _0x16c53e['z'] = _0x42c171['getFloat32'](), _0x16c53e['w'] = _0x42c171[_0x558941(0x2b9)](), _0x59afa4['x'] = _0x42c171['getFloat32'](), _0x59afa4['y'] = _0x42c171[_0x558941(0x2b9)](), _0x59afa4['z'] = _0x42c171[_0x558941(0x2b9)](), _0x59afa4['w'] = _0x42c171[_0x558941(0x2b9)](), _0x20e930['x'] = _0x42c171['getFloat32'](), _0x20e930['y'] = _0x42c171[_0x558941(0x2b9)](), _0x20e930['z'] = _0x42c171[_0x558941(0x2b9)](), _0x20e930['w'] = _0x42c171['getFloat32']();
                        break;
                    default:
                        throw _0x558941(0x2c5);
                    }
            }
            var _0x1dbddb = _0x42c171[_0x558941(0x2a9)]();
            for (_0x58d487 = 0x0; _0x58d487 < _0x1dbddb; _0x58d487++) {
                var _0x21f855 = new _0x258046();
                _0x21f855[_0x558941(0x273)] = Math[_0x558941(0x212)](_0x20283b, _0x42c171[_0x558941(0x2b9)]()), _0x21f855['eventName'] = _0x489078['_strings'][_0x42c171[_0x558941(0x2a9)]()];
                var _0x2cd0e1 = [], _0x345781 = _0x42c171[_0x558941(0x2a9)]();
                for (_0x345781 > 0x0 && (_0x21f855[_0x558941(0x2c6)] = _0x2cd0e1 = []), _0x184311 = 0x0; _0x184311 < _0x345781; _0x184311++) {
                    switch (_0x42c171[_0x558941(0x2bb)]()) {
                    case 0x0:
                        _0x2cd0e1['push'](!!_0x42c171[_0x558941(0x2bb)]());
                        break;
                    case 0x1:
                        _0x2cd0e1[_0x558941(0x2ac)](_0x42c171['getInt32']());
                        break;
                    case 0x2:
                        _0x2cd0e1['push'](_0x42c171[_0x558941(0x2b9)]());
                        break;
                    case 0x3:
                        _0x2cd0e1[_0x558941(0x2ac)](_0x489078[_0x558941(0x2af)][_0x42c171['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20type.');
                    }
                }
                _0x339419[_0x558941(0x2c7)](_0x21f855);
            }
        }
    }
    _0x489078['_strings'] = [], _0x489078[_0x6027f5(0x2a8)] = { 'count': 0x0 }, _0x489078[_0x6027f5(0x2a4)] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x23997e {
        static [_0x6027f5(0x2a3)]() {
            var _0x2df2b3 = _0x6027f5;
            _0x23997e[_0x2df2b3(0x2a4)][_0x2df2b3(0x2c8)] = _0x23997e[_0x2df2b3(0x2a5)][_0x2df2b3(0x2a6)](), _0x23997e[_0x2df2b3(0x2a4)]['size'] = _0x23997e[_0x2df2b3(0x2a5)]['getUint32']();
        }
        static ['READ_BLOCK']() {
            var _0x214513 = _0x6027f5;
            for (var _0x367048 = _0x23997e['_BLOCK'][_0x214513(0x2b3)] = _0x23997e['_reader'][_0x214513(0x2a9)](), _0x3a174a = _0x23997e[_0x214513(0x2a8)][_0x214513(0x2aa)] = [], _0x3faa3e = _0x23997e[_0x214513(0x2a8)][_0x214513(0x2ab)] = [], _0x188dcf = 0x0; _0x188dcf < _0x367048; _0x188dcf++)
                _0x3a174a['push'](_0x23997e[_0x214513(0x2a5)][_0x214513(0x2a6)]()), _0x3faa3e[_0x214513(0x2ac)](_0x23997e[_0x214513(0x2a5)]['getUint32']());
        }
        static [_0x6027f5(0x2ad)]() {
            var _0x1be163 = _0x6027f5, _0x351ca6 = _0x23997e[_0x1be163(0x2a5)][_0x1be163(0x2a6)](), _0x37878f = _0x23997e['_reader']['getUint16'](), _0x5a3ac4 = _0x23997e[_0x1be163(0x2a5)][_0x1be163(0x2ae)];
            _0x23997e['_reader'][_0x1be163(0x2ae)] = _0x351ca6 + _0x23997e[_0x1be163(0x2a4)][_0x1be163(0x2c8)];
            for (var _0x1489c7 = 0x0; _0x1489c7 < _0x37878f; _0x1489c7++)
                _0x23997e['_strings'][_0x1489c7] = _0x23997e['_reader'][_0x1be163(0x2b0)]();
            _0x23997e['_reader']['pos'] = _0x5a3ac4;
        }
        static [_0x6027f5(0x2b1)](_0x32b617, _0x4bddcb, _0x4b3c0c) {
            var _0xdd7a07 = _0x6027f5;
            _0x23997e['_animationClip'] = _0x32b617, _0x23997e[_0xdd7a07(0x2a5)] = _0x4bddcb, _0x23997e['_version'] = _0x4b3c0c, _0x23997e[_0xdd7a07(0x2a3)](), _0x23997e['READ_BLOCK'](), _0x23997e[_0xdd7a07(0x2ad)]();
            for (var _0x2d67d7 = 0x0, _0x2274f7 = _0x23997e[_0xdd7a07(0x2a8)][_0xdd7a07(0x2b3)]; _0x2d67d7 < _0x2274f7; _0x2d67d7++) {
                var _0xd390ff = _0x4bddcb['getUint16'](), _0x20091e = _0x23997e[_0xdd7a07(0x2af)][_0xd390ff], _0x47a8ce = _0x23997e[_0xdd7a07(0x2b4) + _0x20091e];
                if (null == _0x47a8ce)
                    throw new Error(_0xdd7a07(0x2b5) + _0xd390ff + '\x20' + _0x20091e);
                _0x47a8ce[_0xdd7a07(0x2b6)](null);
            }
            _0x23997e[_0xdd7a07(0x2c9)] = null, _0x23997e[_0xdd7a07(0x2a5)] = null, _0x23997e[_0xdd7a07(0x2b2)] = null;
        }
        static [_0x6027f5(0x2ca)]() {
            var _0x5e351d = _0x6027f5, _0xd55cf0, _0x2def32, _0x4aa912, _0x4c5ad0 = _0x23997e['_reader'], _0x1214d8 = [], _0x306d96 = _0x4c5ad0['getUint16']();
            for (_0x1214d8['length'] = _0x306d96, _0xd55cf0 = 0x0; _0xd55cf0 < _0x306d96; _0xd55cf0++)
                _0x1214d8[_0xd55cf0] = _0x4c5ad0[_0x5e351d(0x2b9)]();
            var _0x1458e9 = _0x23997e[_0x5e351d(0x2b2)];
            _0x1458e9['name'] = _0x23997e[_0x5e351d(0x2af)][_0x4c5ad0[_0x5e351d(0x2a9)]()];
            var _0xd04655 = _0x1458e9[_0x5e351d(0x2b8)] = _0x4c5ad0[_0x5e351d(0x2b9)]();
            _0x1458e9[_0x5e351d(0x2ba)] = !!_0x4c5ad0['getByte'](), _0x1458e9['_frameRate'] = _0x4c5ad0[_0x5e351d(0x2bd)]();
            var _0x2b2331 = _0x4c5ad0[_0x5e351d(0x2bd)](), _0x24943b = _0x1458e9['_nodes'];
            _0x24943b['count'] = _0x2b2331;
            var _0x8e8060 = _0x1458e9['_nodesMap'] = {}, _0x59731f = _0x1458e9[_0x5e351d(0x2cb)] = {};
            for (_0xd55cf0 = 0x0; _0xd55cf0 < _0x2b2331; _0xd55cf0++) {
                _0x4aa912 = new _0x359f9a(), _0x24943b['setNodeByIndex'](_0xd55cf0, _0x4aa912), _0x4aa912[_0x5e351d(0x2c1)] = _0xd55cf0;
                var _0x3eac6b = _0x4aa912[_0x5e351d(0x2cc)] = _0x4c5ad0[_0x5e351d(0x2c2)](), _0x5feaba = _0x4c5ad0[_0x5e351d(0x2a9)]();
                for (_0x4aa912['_setOwnerPathCount'](_0x5feaba), _0x2def32 = 0x0; _0x2def32 < _0x5feaba; _0x2def32++)
                    _0x4aa912[_0x5e351d(0x268)](_0x2def32, _0x23997e[_0x5e351d(0x2af)][_0x4c5ad0[_0x5e351d(0x2a9)]()]);
                var _0x427f81 = _0x4aa912['_joinOwnerPath']('/'), _0x3f8dc4 = _0x8e8060[_0x427f81];
                _0x3f8dc4 || (_0x8e8060[_0x427f81] = _0x3f8dc4 = []), _0x3f8dc4['push'](_0x4aa912), _0x4aa912['propertyOwner'] = _0x23997e[_0x5e351d(0x2af)][_0x4c5ad0[_0x5e351d(0x2a9)]()];
                var _0x122902 = _0x4c5ad0[_0x5e351d(0x2a9)]();
                for (_0x4aa912['_setPropertyCount'](_0x122902), _0x2def32 = 0x0; _0x2def32 < _0x122902; _0x2def32++)
                    _0x4aa912[_0x5e351d(0x26b)](_0x2def32, _0x23997e[_0x5e351d(0x2af)][_0x4c5ad0['getUint16']()]);
                var _0x5e70eb = _0x427f81 + '.' + _0x4aa912['propertyOwner'] + '.' + _0x4aa912[_0x5e351d(0x26c)]('.');
                _0x59731f[_0x5e70eb] = _0x4aa912, _0x4aa912['fullPath'] = _0x5e70eb, _0x4aa912[_0x5e351d(0x2cd)] = _0x427f81;
                var _0x3330d1 = _0x4c5ad0[_0x5e351d(0x2a9)]();
                switch (_0x4aa912[_0x5e351d(0x26e)](_0x3330d1), _0x23997e[_0x5e351d(0x2c9)]) {
                case _0x5e351d(0x2ce):
                    for (_0x2def32 = 0x0; _0x2def32 < _0x3330d1; _0x2def32++)
                        switch (_0x3eac6b) {
                        case 0x0:
                            var _0x7e58bf = new _0x25af36();
                            _0x4aa912[_0x5e351d(0x26f)](_0x2def32, _0x7e58bf), _0x7e58bf[_0x5e351d(0x273)] = _0x1214d8[_0x4c5ad0[_0x5e351d(0x2a9)]()], _0x7e58bf[_0x5e351d(0x274)] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x7e58bf[_0x5e351d(0x2a2)] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x7e58bf[_0x5e351d(0x2a1)] = _0x4c5ad0[_0x5e351d(0x2b9)]();
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            var _0x19d02d = new _0x1b6908();
                            _0x4aa912[_0x5e351d(0x26f)](_0x2def32, _0x19d02d), _0x19d02d[_0x5e351d(0x273)] = _0x1214d8[_0x4c5ad0[_0x5e351d(0x2a9)]()];
                            var _0x4172e2 = _0x19d02d[_0x5e351d(0x274)], _0x1a8c5e = _0x19d02d['outTangent'], _0x4595ad = _0x19d02d['value'];
                            _0x4172e2['x'] = _0x4c5ad0['getFloat32'](), _0x4172e2['y'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x4172e2['z'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x1a8c5e['x'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x1a8c5e['y'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x1a8c5e['z'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x4595ad['x'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x4595ad['y'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x4595ad['z'] = _0x4c5ad0['getFloat32']();
                            break;
                        case 0x2:
                            var _0x3dfb0c = new _0x18a7c7();
                            _0x4aa912['_setKeyframeByIndex'](_0x2def32, _0x3dfb0c), _0x3dfb0c[_0x5e351d(0x273)] = _0x1214d8[_0x4c5ad0[_0x5e351d(0x2a9)]()];
                            var _0x48a651 = _0x3dfb0c[_0x5e351d(0x274)], _0x238327 = _0x3dfb0c[_0x5e351d(0x2a2)], _0x41b81a = _0x3dfb0c[_0x5e351d(0x2a1)];
                            _0x48a651['x'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x48a651['y'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x48a651['z'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x48a651['w'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x238327['x'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x238327['y'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x238327['z'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x238327['w'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x41b81a['x'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x41b81a['y'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x41b81a['z'] = _0x4c5ad0[_0x5e351d(0x2b9)](), _0x41b81a['w'] = _0x4c5ad0[_0x5e351d(0x2b9)]();
                            break;
                        default:
                            throw _0x5e351d(0x2cf);
                        }
                    break;
                case _0x5e351d(0x2d0):
                    for (_0x2def32 = 0x0; _0x2def32 < _0x3330d1; _0x2def32++)
                        switch (_0x3eac6b) {
                        case 0x0:
                            _0x7e58bf = new _0x25af36(), _0x4aa912[_0x5e351d(0x26f)](_0x2def32, _0x7e58bf), _0x7e58bf['time'] = _0x1214d8[_0x4c5ad0[_0x5e351d(0x2a9)]()], _0x7e58bf[_0x5e351d(0x274)] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x7e58bf[_0x5e351d(0x2a2)] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x7e58bf['value'] = _0x387b86['HalfFloatUtils']['convertToNumber'](_0x4c5ad0['getUint16']());
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x19d02d = new _0x1b6908(), _0x4aa912[_0x5e351d(0x26f)](_0x2def32, _0x19d02d), _0x19d02d[_0x5e351d(0x273)] = _0x1214d8[_0x4c5ad0[_0x5e351d(0x2a9)]()], _0x4172e2 = _0x19d02d[_0x5e351d(0x274)], _0x1a8c5e = _0x19d02d['outTangent'], _0x4595ad = _0x19d02d[_0x5e351d(0x2a1)], _0x4172e2['x'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x4172e2['y'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x4172e2['z'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x1a8c5e['x'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x1a8c5e['y'] = _0x387b86['HalfFloatUtils'][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x1a8c5e['z'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x4595ad['x'] = _0x387b86[_0x5e351d(0x2d1)]['convertToNumber'](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x4595ad['y'] = _0x387b86[_0x5e351d(0x2d1)]['convertToNumber'](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x4595ad['z'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]());
                            break;
                        case 0x2:
                            _0x3dfb0c = new _0x18a7c7(), _0x4aa912[_0x5e351d(0x26f)](_0x2def32, _0x3dfb0c), _0x3dfb0c[_0x5e351d(0x273)] = _0x1214d8[_0x4c5ad0['getUint16']()], _0x48a651 = _0x3dfb0c[_0x5e351d(0x274)], _0x238327 = _0x3dfb0c[_0x5e351d(0x2a2)], _0x41b81a = _0x3dfb0c['value'], _0x48a651['x'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x48a651['y'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x48a651['z'] = _0x387b86[_0x5e351d(0x2d1)]['convertToNumber'](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x48a651['w'] = _0x387b86['HalfFloatUtils'][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x238327['x'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x238327['y'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x238327['z'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x238327['w'] = _0x387b86['HalfFloatUtils'][_0x5e351d(0x2d2)](_0x4c5ad0[_0x5e351d(0x2a9)]()), _0x41b81a['x'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x41b81a['y'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x41b81a['z'] = _0x387b86[_0x5e351d(0x2d1)][_0x5e351d(0x2d2)](_0x4c5ad0['getUint16']()), _0x41b81a['w'] = _0x387b86[_0x5e351d(0x2d1)]['convertToNumber'](_0x4c5ad0[_0x5e351d(0x2a9)]());
                            break;
                        default:
                            throw _0x5e351d(0x2cf);
                        }
                }
            }
            var _0x28102c = _0x4c5ad0[_0x5e351d(0x2a9)]();
            for (_0xd55cf0 = 0x0; _0xd55cf0 < _0x28102c; _0xd55cf0++) {
                var _0x102294 = new _0x258046();
                _0x102294[_0x5e351d(0x273)] = Math[_0x5e351d(0x212)](_0xd04655, _0x4c5ad0[_0x5e351d(0x2b9)]()), _0x102294[_0x5e351d(0x2d3)] = _0x23997e[_0x5e351d(0x2af)][_0x4c5ad0['getUint16']()];
                var _0x5abe54 = [], _0x5f3bba = _0x4c5ad0[_0x5e351d(0x2a9)]();
                for (_0x5f3bba > 0x0 && (_0x102294['params'] = _0x5abe54 = []), _0x2def32 = 0x0; _0x2def32 < _0x5f3bba; _0x2def32++) {
                    switch (_0x4c5ad0[_0x5e351d(0x2bb)]()) {
                    case 0x0:
                        _0x5abe54[_0x5e351d(0x2ac)](!!_0x4c5ad0[_0x5e351d(0x2bb)]());
                        break;
                    case 0x1:
                        _0x5abe54[_0x5e351d(0x2ac)](_0x4c5ad0[_0x5e351d(0x2d4)]());
                        break;
                    case 0x2:
                        _0x5abe54[_0x5e351d(0x2ac)](_0x4c5ad0[_0x5e351d(0x2b9)]());
                        break;
                    case 0x3:
                        _0x5abe54[_0x5e351d(0x2ac)](_0x23997e[_0x5e351d(0x2af)][_0x4c5ad0[_0x5e351d(0x2a9)]()]);
                        break;
                    default:
                        throw new Error('unknown\x20type.');
                    }
                }
                _0x1458e9['addEvent'](_0x102294);
            }
        }
    }
    _0x23997e[_0x6027f5(0x2af)] = [], _0x23997e[_0x6027f5(0x2a8)] = { 'count': 0x0 }, _0x23997e['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x317236 {
        constructor() {
            var _0xe0a3d3 = _0x6027f5;
            this[_0xe0a3d3(0x2be)] = [];
        }
        get [_0x6027f5(0x2b3)]() {
            var _0x4f0e67 = _0x6027f5;
            return this['_nodes'][_0x4f0e67(0x205)];
        }
        set [_0x6027f5(0x2b3)](_0xb9241) {
            var _0x18a567 = _0x6027f5;
            this[_0x18a567(0x2be)][_0x18a567(0x205)] = _0xb9241;
        }
        [_0x6027f5(0x2d5)](_0x2a0463) {
            var _0x3d0c8d = _0x6027f5;
            return this[_0x3d0c8d(0x2be)][_0x2a0463];
        }
        [_0x6027f5(0x2c0)](_0x22c86b, _0x294194) {
            var _0xf5b303 = _0x6027f5;
            this[_0xf5b303(0x2be)][_0x22c86b] = _0x294194;
        }
    }
    class _0xe5eba5 {
        constructor() {
        }
        static ['lightAttenTexture'](_0x4694bb, _0x5e8afd, _0x1ec160, _0x594d84, _0x4aa219, _0x1f406e) {
            var _0x3b1875 = _0x6027f5, _0x5affe8 = _0x4694bb / _0x1ec160, _0xd7bf24 = 0x1 / (0x1 + 0x19 * _0x5affe8);
            _0x5affe8 >= 0.64 && (_0x5affe8 > 0x1 ? _0xd7bf24 = 0x0 : _0xd7bf24 *= 0x1 - (_0x5affe8 - 0.64) / 0.36), _0x1f406e[_0x4aa219] = Math[_0x3b1875(0x24e)](0xff * _0xd7bf24 + 0.5);
        }
        static [_0x6027f5(0x2d6)](_0x146d38, _0x14ecc7, _0x3235fc, _0x48ce62, _0x1d0bdb, _0x161c49) {
            var _0x59177c = _0x6027f5, _0x44bb8f = (_0x146d38 - (_0x3235fc >>= 0x1)) / _0x3235fc, _0x2b7650 = (_0x14ecc7 - (_0x48ce62 >>= 0x1)) / _0x48ce62, _0x2e6132 = _0x44bb8f * _0x44bb8f + _0x2b7650 * _0x2b7650;
            _0x2e6132 > 0x1 && (_0x2e6132 = 0x1), _0x161c49[_0x1d0bdb] = Math[_0x59177c(0x24e)](0xff * (0x1 - _0x2e6132) + 0.5);
        }
        static [_0x6027f5(0x2d7)](_0x39d9f0, _0x2f38f4, _0x541744, _0x3758be) {
            var _0x488987 = _0x6027f5, _0x117173 = 0x0, _0xa543b4 = 0x0;
            switch (_0x39d9f0[_0x488987(0x2d8)]) {
            case _0x387b86[_0x488987(0x2d9)][_0x488987(0x2da)]:
                _0xa543b4 = 0x3;
                break;
            case _0x387b86['TextureFormat']['R8G8B8A8']:
                _0xa543b4 = 0x4;
                break;
            case _0x387b86[_0x488987(0x2d9)][_0x488987(0x2db)]:
                _0xa543b4 = 0x1;
                break;
            default:
                throw _0x488987(0x2dc);
            }
            for (var _0x37be66 = new Uint8Array(_0x2f38f4 * _0x541744 * _0xa543b4), _0x37a444 = 0x0; _0x37a444 < _0x541744; _0x37a444++)
                for (var _0x111154 = 0x0; _0x111154 < _0x2f38f4; _0x111154++)
                    _0x3758be(_0x111154, _0x37a444, _0x2f38f4, _0x541744, _0x117173, _0x37be66), _0x117173 += _0xa543b4;
            _0x39d9f0['setPixels'](_0x37be66);
        }
    }
    class _0x3acd08 {
        static [_0x6027f5(0x2dd)](_0x24f91d, _0x2951d8) {
            var _0x4d96a2 = _0x6027f5, _0x22a7bd = new _0x387b86[(_0x4d96a2(0x2de))](_0x24f91d, _0x2951d8, _0x387b86[_0x4d96a2(0x2d9)][_0x4d96a2(0x2df)], !0x1, !0x1);
            return _0x22a7bd[_0x4d96a2(0x2e0)] = _0x387b86[_0x4d96a2(0x2e1)][_0x4d96a2(0x2e2)], _0x22a7bd[_0x4d96a2(0x2e3)] = _0x387b86['WarpMode'][_0x4d96a2(0x208)], _0x22a7bd[_0x4d96a2(0x2e4)] = _0x387b86[_0x4d96a2(0x2e5)][_0x4d96a2(0x208)], _0x22a7bd['anisoLevel'] = 0x0, _0x22a7bd;
        }
        static [_0x6027f5(0x2e6)](_0x1f26c2, _0x283389, _0x2bd14e) {
            var _0x5d0efa = _0x6027f5, _0x199823 = _0x525782[_0x5d0efa(0x229)][_0x5d0efa(0x22e)];
            _0x283389['x'] = _0x2bd14e ? -_0x199823[_0x5d0efa(0x2e7)](_0x1f26c2) : _0x199823[_0x5d0efa(0x2e7)](_0x1f26c2), _0x283389['y'] = _0x199823['btVector3_y'](_0x1f26c2), _0x283389['z'] = _0x199823['btVector3_z'](_0x1f26c2);
        }
        static [_0x6027f5(0x2e8)](_0x15dc44, _0xcbfc80, _0xbc4892) {
            var _0x5bdf05 = _0x6027f5;
            _0x525782[_0x5bdf05(0x229)][_0x5bdf05(0x22e)][_0x5bdf05(0x2e9)](_0xcbfc80, _0xbc4892 ? -_0x15dc44['x'] : _0x15dc44['x'], _0x15dc44['y'], _0x15dc44['z']);
        }
        static ['_rotationTransformScaleSkinAnimation'](_0x58ff38, _0x3c68c0, _0x41c767, _0x5a1900, _0x2c339f, _0x3cdc27, _0x5ee3bb, _0x234c26, _0xf33397, _0x53674d, _0x16d230, _0x91e763) {
            var _0x3f9ed9 = _0x6027f5, _0x55d40d, _0x2c2760, _0x2894eb, _0x1ccf3e, _0x2843be, _0x2fd63b = _0x3acd08[_0x3f9ed9(0x2ea)], _0x549838 = _0x3acd08[_0x3f9ed9(0x2eb)], _0x485475 = _0x3acd08['_tempArray16_2'], _0x36b922 = _0x5a1900 + _0x5a1900, _0x1cd0b5 = _0x2c339f + _0x2c339f, _0x529269 = _0x3cdc27 + _0x3cdc27, _0xbb0123 = _0x5a1900 * _0x36b922, _0x203433 = _0x2c339f * _0x36b922, _0x5c814a = _0x2c339f * _0x1cd0b5, _0x22a449 = _0x3cdc27 * _0x36b922, _0x39ff06 = _0x3cdc27 * _0x1cd0b5, _0xe3f986 = _0x3cdc27 * _0x529269, _0x1002da = _0x5ee3bb * _0x36b922, _0x2c28bf = _0x5ee3bb * _0x1cd0b5, _0x6af6bf = _0x5ee3bb * _0x529269;
            for (_0x2fd63b[0xf] = 0x1, _0x2fd63b[0x0] = 0x1 - _0x5c814a - _0xe3f986, _0x2fd63b[0x1] = _0x203433 + _0x6af6bf, _0x2fd63b[0x2] = _0x22a449 - _0x2c28bf, _0x2fd63b[0x4] = _0x203433 - _0x6af6bf, _0x2fd63b[0x5] = 0x1 - _0xbb0123 - _0xe3f986, _0x2fd63b[0x6] = _0x39ff06 + _0x1002da, _0x2fd63b[0x8] = _0x22a449 + _0x2c28bf, _0x2fd63b[0x9] = _0x39ff06 - _0x1002da, _0x2fd63b[0xa] = 0x1 - _0xbb0123 - _0x5c814a, _0x549838[0xf] = 0x1, _0x549838[0x0] = _0x234c26, _0x549838[0x5] = _0xf33397, _0x549838[0xa] = _0x53674d, _0x55d40d = 0x0; _0x55d40d < 0x4; _0x55d40d++)
                _0x2c2760 = _0x2fd63b[_0x55d40d], _0x2894eb = _0x2fd63b[_0x55d40d + 0x4], _0x1ccf3e = _0x2fd63b[_0x55d40d + 0x8], _0x2843be = _0x2fd63b[_0x55d40d + 0xc], _0x485475[_0x55d40d] = _0x2c2760, _0x485475[_0x55d40d + 0x4] = _0x2894eb, _0x485475[_0x55d40d + 0x8] = _0x1ccf3e, _0x485475[_0x55d40d + 0xc] = _0x2c2760 * _0x58ff38 + _0x2894eb * _0x3c68c0 + _0x1ccf3e * _0x41c767 + _0x2843be;
            for (_0x55d40d = 0x0; _0x55d40d < 0x4; _0x55d40d++)
                _0x2c2760 = _0x485475[_0x55d40d], _0x2894eb = _0x485475[_0x55d40d + 0x4], _0x1ccf3e = _0x485475[_0x55d40d + 0x8], _0x2843be = _0x485475[_0x55d40d + 0xc], _0x16d230[_0x55d40d + _0x91e763] = _0x2c2760 * _0x549838[0x0] + _0x2894eb * _0x549838[0x1] + _0x1ccf3e * _0x549838[0x2] + _0x2843be * _0x549838[0x3], _0x16d230[_0x55d40d + _0x91e763 + 0x4] = _0x2c2760 * _0x549838[0x4] + _0x2894eb * _0x549838[0x5] + _0x1ccf3e * _0x549838[0x6] + _0x2843be * _0x549838[0x7], _0x16d230[_0x55d40d + _0x91e763 + 0x8] = _0x2c2760 * _0x549838[0x8] + _0x2894eb * _0x549838[0x9] + _0x1ccf3e * _0x549838[0xa] + _0x2843be * _0x549838[0xb], _0x16d230[_0x55d40d + _0x91e763 + 0xc] = _0x2c2760 * _0x549838[0xc] + _0x2894eb * _0x549838[0xd] + _0x1ccf3e * _0x549838[0xe] + _0x2843be * _0x549838[0xf];
        }
        static ['_computeBoneAndAnimationDatasByBindPoseMatrxix'](_0x1f16a4, _0x491d71, _0x18411f, _0x3c5e0b, _0x26d2ea, _0x201913) {
            var _0x1840a7 = _0x6027f5, _0x5ea91e, _0x325842, _0x289d98 = 0x0, _0x984bcf = 0x0, _0x306902 = _0x1f16a4[_0x1840a7(0x205)];
            for (_0x5ea91e = 0x0; _0x5ea91e < _0x306902; _0x289d98 += _0x1f16a4[_0x5ea91e][_0x1840a7(0x2ec)], _0x984bcf += 0x10, _0x5ea91e++)
                _0x3acd08[_0x1840a7(0x2ed)](_0x491d71[_0x289d98 + 0x0], _0x491d71[_0x289d98 + 0x1], _0x491d71[_0x289d98 + 0x2], _0x491d71[_0x289d98 + 0x3], _0x491d71[_0x289d98 + 0x4], _0x491d71[_0x289d98 + 0x5], _0x491d71[_0x289d98 + 0x6], _0x491d71[_0x289d98 + 0x7], _0x491d71[_0x289d98 + 0x8], _0x491d71[_0x289d98 + 0x9], _0x3c5e0b, _0x984bcf), 0x0 != _0x5ea91e && (_0x325842 = 0x10 * _0x1f16a4[_0x5ea91e][_0x1840a7(0x2ee)], _0x3acd08[_0x1840a7(0x2ef)](_0x3c5e0b, _0x325842, _0x3c5e0b, _0x984bcf, _0x3c5e0b, _0x984bcf));
            var _0x176e13 = _0x18411f[_0x1840a7(0x205)];
            for (_0x5ea91e = 0x0; _0x5ea91e < _0x176e13; _0x5ea91e++)
                _0x3acd08[_0x1840a7(0x2f0)](_0x3c5e0b, 0x10 * _0x201913[_0x5ea91e], _0x18411f[_0x5ea91e], _0x26d2ea, 0x10 * _0x5ea91e);
        }
        static [_0x6027f5(0x2f1)](_0x2eba0a, _0x5da436, _0x409a6b, _0x83c5c3) {
            var _0x559198 = _0x6027f5;
            for (var _0x5e94b4 = 0x0, _0x45deee = _0x2eba0a[_0x559198(0x205)]; _0x5e94b4 < _0x45deee; _0x5e94b4++)
                _0x3acd08['mulMatrixByArrayAndMatrixFast'](_0x5da436, 0x10 * _0x83c5c3[_0x5e94b4], _0x2eba0a[_0x5e94b4], _0x409a6b, 0x10 * _0x5e94b4);
        }
        static ['_computeBoneAndAnimationDatasByBindPoseMatrxixOld'](_0x438273, _0x398800, _0x81cf48, _0x41a14d, _0x27105f) {
            var _0x1d1c0d = _0x6027f5, _0x2ea144, _0x20c3e0, _0x1b3974 = 0x0, _0x337754 = 0x0, _0x22ddf3 = _0x438273[_0x1d1c0d(0x205)];
            for (_0x2ea144 = 0x0; _0x2ea144 < _0x22ddf3; _0x1b3974 += _0x438273[_0x2ea144][_0x1d1c0d(0x2ec)], _0x337754 += 0x10, _0x2ea144++)
                _0x3acd08[_0x1d1c0d(0x2ed)](_0x398800[_0x1b3974 + 0x7], _0x398800[_0x1b3974 + 0x8], _0x398800[_0x1b3974 + 0x9], _0x398800[_0x1b3974 + 0x3], _0x398800[_0x1b3974 + 0x4], _0x398800[_0x1b3974 + 0x5], _0x398800[_0x1b3974 + 0x6], _0x398800[_0x1b3974 + 0x0], _0x398800[_0x1b3974 + 0x1], _0x398800[_0x1b3974 + 0x2], _0x41a14d, _0x337754), 0x0 != _0x2ea144 && (_0x20c3e0 = 0x10 * _0x438273[_0x2ea144]['parentIndex'], _0x3acd08[_0x1d1c0d(0x2ef)](_0x41a14d, _0x20c3e0, _0x41a14d, _0x337754, _0x41a14d, _0x337754));
            var _0x583c81 = _0x81cf48[_0x1d1c0d(0x205)];
            for (_0x2ea144 = 0x0; _0x2ea144 < _0x583c81; _0x2ea144++) {
                var _0x414767 = 0x10 * _0x2ea144;
                _0x3acd08[_0x1d1c0d(0x2f0)](_0x41a14d, _0x414767, _0x81cf48[_0x2ea144], _0x27105f, _0x414767);
            }
        }
        static [_0x6027f5(0x2f2)](_0x57765b, _0x561da9, _0x1ca266) {
            var _0x5d31ad = _0x6027f5;
            for (var _0x460982 = _0x57765b['length'], _0x3328a6 = 0x0; _0x3328a6 < _0x460982; _0x3328a6++) {
                var _0x4b65ea = 0x10 * _0x3328a6;
                _0x3acd08[_0x5d31ad(0x2f0)](_0x561da9, _0x4b65ea, _0x57765b[_0x3328a6], _0x1ca266, _0x4b65ea);
            }
        }
        static ['_computeRootAnimationData'](_0x290c6c, _0x7eb3ff, _0x32ebab) {
            var _0x1c3c50 = _0x6027f5;
            for (var _0x6ec760 = 0x0, _0x28cd7e = 0x0, _0x43242b = 0x0, _0x33099 = _0x290c6c[_0x1c3c50(0x205)]; _0x6ec760 < _0x33099; _0x28cd7e += _0x290c6c[_0x6ec760]['keyframeWidth'], _0x43242b += 0x10, _0x6ec760++)
                _0x3acd08[_0x1c3c50(0x2f3)](_0x7eb3ff[_0x28cd7e + 0x0], _0x7eb3ff[_0x28cd7e + 0x1], _0x7eb3ff[_0x28cd7e + 0x2], _0x7eb3ff[_0x28cd7e + 0x3], _0x7eb3ff[_0x28cd7e + 0x4], _0x7eb3ff[_0x28cd7e + 0x5], _0x7eb3ff[_0x28cd7e + 0x6], _0x7eb3ff[_0x28cd7e + 0x7], _0x7eb3ff[_0x28cd7e + 0x8], _0x7eb3ff[_0x28cd7e + 0x9], _0x32ebab, _0x43242b);
        }
        static [_0x6027f5(0x2f4)](_0x299230, _0x3c0cad, _0x35df75, _0x5ba7df, _0x26117c) {
            var _0x537f18 = _0x299230[_0x3c0cad], _0x19705d = _0x299230[_0x3c0cad + 0x1], _0x399028 = _0x299230[_0x3c0cad + 0x2], _0x4961bb = _0x35df75['x'], _0x5cacf7 = _0x35df75['y'], _0x894ebe = _0x35df75['z'], _0x5c4fbd = _0x35df75['w'], _0x3cadbb = _0x5c4fbd * _0x537f18 + _0x5cacf7 * _0x399028 - _0x894ebe * _0x19705d, _0x2c0832 = _0x5c4fbd * _0x19705d + _0x894ebe * _0x537f18 - _0x4961bb * _0x399028, _0x406bee = _0x5c4fbd * _0x399028 + _0x4961bb * _0x19705d - _0x5cacf7 * _0x537f18, _0x8f2a50 = -_0x4961bb * _0x537f18 - _0x5cacf7 * _0x19705d - _0x894ebe * _0x399028;
            _0x5ba7df[_0x26117c] = _0x3cadbb * _0x5c4fbd + _0x8f2a50 * -_0x4961bb + _0x2c0832 * -_0x894ebe - _0x406bee * -_0x5cacf7, _0x5ba7df[_0x26117c + 0x1] = _0x2c0832 * _0x5c4fbd + _0x8f2a50 * -_0x5cacf7 + _0x406bee * -_0x4961bb - _0x3cadbb * -_0x894ebe, _0x5ba7df[_0x26117c + 0x2] = _0x406bee * _0x5c4fbd + _0x8f2a50 * -_0x894ebe + _0x3cadbb * -_0x5cacf7 - _0x2c0832 * -_0x4961bb;
        }
        static [_0x6027f5(0x2ef)](_0x296ce3, _0x41cae4, _0x3f2657, _0x30191d, _0x1d7cb5, _0x1e7480) {
            var _0x5040d6 = _0x6027f5, _0x53a866, _0x4899e9, _0x4f5343, _0x34300f, _0x1ba8eb;
            if (_0x1d7cb5 === _0x3f2657) {
                for (_0x3f2657 = _0x3acd08[_0x5040d6(0x2f5)], _0x53a866 = 0x0; _0x53a866 < 0x10; ++_0x53a866)
                    _0x3f2657[_0x53a866] = _0x1d7cb5[_0x1e7480 + _0x53a866];
                _0x30191d = 0x0;
            }
            for (_0x53a866 = 0x0; _0x53a866 < 0x4; _0x53a866++)
                _0x4899e9 = _0x296ce3[_0x41cae4 + _0x53a866], _0x4f5343 = _0x296ce3[_0x41cae4 + _0x53a866 + 0x4], _0x34300f = _0x296ce3[_0x41cae4 + _0x53a866 + 0x8], _0x1ba8eb = _0x296ce3[_0x41cae4 + _0x53a866 + 0xc], _0x1d7cb5[_0x1e7480 + _0x53a866] = _0x4899e9 * _0x3f2657[_0x30191d + 0x0] + _0x4f5343 * _0x3f2657[_0x30191d + 0x1] + _0x34300f * _0x3f2657[_0x30191d + 0x2] + _0x1ba8eb * _0x3f2657[_0x30191d + 0x3], _0x1d7cb5[_0x1e7480 + _0x53a866 + 0x4] = _0x4899e9 * _0x3f2657[_0x30191d + 0x4] + _0x4f5343 * _0x3f2657[_0x30191d + 0x5] + _0x34300f * _0x3f2657[_0x30191d + 0x6] + _0x1ba8eb * _0x3f2657[_0x30191d + 0x7], _0x1d7cb5[_0x1e7480 + _0x53a866 + 0x8] = _0x4899e9 * _0x3f2657[_0x30191d + 0x8] + _0x4f5343 * _0x3f2657[_0x30191d + 0x9] + _0x34300f * _0x3f2657[_0x30191d + 0xa] + _0x1ba8eb * _0x3f2657[_0x30191d + 0xb], _0x1d7cb5[_0x1e7480 + _0x53a866 + 0xc] = _0x4899e9 * _0x3f2657[_0x30191d + 0xc] + _0x4f5343 * _0x3f2657[_0x30191d + 0xd] + _0x34300f * _0x3f2657[_0x30191d + 0xe] + _0x1ba8eb * _0x3f2657[_0x30191d + 0xf];
        }
        static [_0x6027f5(0x2f6)](_0x1a2971, _0x54053e, _0x1aab86, _0x3dfbdb, _0x3362cf, _0x5ed461) {
            var _0x2ecfe8, _0x2a5e46, _0x2fdb86, _0x2e0f93, _0xf9f7f7;
            for (_0x2ecfe8 = 0x0; _0x2ecfe8 < 0x4; _0x2ecfe8++)
                _0x2a5e46 = _0x1a2971[_0x54053e + _0x2ecfe8], _0x2fdb86 = _0x1a2971[_0x54053e + _0x2ecfe8 + 0x4], _0x2e0f93 = _0x1a2971[_0x54053e + _0x2ecfe8 + 0x8], _0xf9f7f7 = _0x1a2971[_0x54053e + _0x2ecfe8 + 0xc], _0x3362cf[_0x5ed461 + _0x2ecfe8] = _0x2a5e46 * _0x1aab86[_0x3dfbdb + 0x0] + _0x2fdb86 * _0x1aab86[_0x3dfbdb + 0x1] + _0x2e0f93 * _0x1aab86[_0x3dfbdb + 0x2] + _0xf9f7f7 * _0x1aab86[_0x3dfbdb + 0x3], _0x3362cf[_0x5ed461 + _0x2ecfe8 + 0x4] = _0x2a5e46 * _0x1aab86[_0x3dfbdb + 0x4] + _0x2fdb86 * _0x1aab86[_0x3dfbdb + 0x5] + _0x2e0f93 * _0x1aab86[_0x3dfbdb + 0x6] + _0xf9f7f7 * _0x1aab86[_0x3dfbdb + 0x7], _0x3362cf[_0x5ed461 + _0x2ecfe8 + 0x8] = _0x2a5e46 * _0x1aab86[_0x3dfbdb + 0x8] + _0x2fdb86 * _0x1aab86[_0x3dfbdb + 0x9] + _0x2e0f93 * _0x1aab86[_0x3dfbdb + 0xa] + _0xf9f7f7 * _0x1aab86[_0x3dfbdb + 0xb], _0x3362cf[_0x5ed461 + _0x2ecfe8 + 0xc] = _0x2a5e46 * _0x1aab86[_0x3dfbdb + 0xc] + _0x2fdb86 * _0x1aab86[_0x3dfbdb + 0xd] + _0x2e0f93 * _0x1aab86[_0x3dfbdb + 0xe] + _0xf9f7f7 * _0x1aab86[_0x3dfbdb + 0xf];
        }
        static ['mulMatrixByArrayAndMatrixFast'](_0x4ec65d, _0x262edf, _0x4d5f7c, _0x580f6b, _0x141844) {
            var _0x290978 = _0x6027f5, _0x3f2e67, _0x205857, _0x419839, _0x314f1a, _0x528b64, _0x473ad2 = _0x4d5f7c[_0x290978(0x1fe)], _0x423d80 = _0x473ad2[0x0], _0x2cd591 = _0x473ad2[0x1], _0x236f35 = _0x473ad2[0x2], _0x14df7f = _0x473ad2[0x3], _0xc2f245 = _0x473ad2[0x4], _0x2eda85 = _0x473ad2[0x5], _0x415fdc = _0x473ad2[0x6], _0x350ba2 = _0x473ad2[0x7], _0x1de78d = _0x473ad2[0x8], _0x455f13 = _0x473ad2[0x9], _0x339104 = _0x473ad2[0xa], _0xf5daf7 = _0x473ad2[0xb], _0x88a17b = _0x473ad2[0xc], _0x1a6c33 = _0x473ad2[0xd], _0x346f38 = _0x473ad2[0xe], _0x3db852 = _0x473ad2[0xf], _0x2d7a9a = _0x262edf, _0x384246 = _0x262edf + 0x4, _0x238460 = _0x262edf + 0x8, _0x45d367 = _0x262edf + 0xc, _0x565a88 = _0x141844, _0x4ad085 = _0x141844 + 0x4, _0x174700 = _0x141844 + 0x8, _0x5563d4 = _0x141844 + 0xc;
            for (_0x3f2e67 = 0x0; _0x3f2e67 < 0x4; _0x3f2e67++)
                _0x205857 = _0x4ec65d[_0x2d7a9a + _0x3f2e67], _0x419839 = _0x4ec65d[_0x384246 + _0x3f2e67], _0x314f1a = _0x4ec65d[_0x238460 + _0x3f2e67], _0x528b64 = _0x4ec65d[_0x45d367 + _0x3f2e67], _0x580f6b[_0x565a88 + _0x3f2e67] = _0x205857 * _0x423d80 + _0x419839 * _0x2cd591 + _0x314f1a * _0x236f35 + _0x528b64 * _0x14df7f, _0x580f6b[_0x4ad085 + _0x3f2e67] = _0x205857 * _0xc2f245 + _0x419839 * _0x2eda85 + _0x314f1a * _0x415fdc + _0x528b64 * _0x350ba2, _0x580f6b[_0x174700 + _0x3f2e67] = _0x205857 * _0x1de78d + _0x419839 * _0x455f13 + _0x314f1a * _0x339104 + _0x528b64 * _0xf5daf7, _0x580f6b[_0x5563d4 + _0x3f2e67] = _0x205857 * _0x88a17b + _0x419839 * _0x1a6c33 + _0x314f1a * _0x346f38 + _0x528b64 * _0x3db852;
        }
        static [_0x6027f5(0x2f3)](_0x101d4b, _0x1548a0, _0x90b40a, _0x1820c5, _0x55254b, _0x4b360a, _0x50a158, _0x50f9be, _0x1492c9, _0x427191, _0x15c30b, _0x1f3039) {
            var _0x188ef6 = _0x1820c5 + _0x1820c5, _0xaf38a6 = _0x55254b + _0x55254b, _0xaaec6a = _0x4b360a + _0x4b360a, _0x13d9f7 = _0x1820c5 * _0x188ef6, _0xe8a815 = _0x1820c5 * _0xaf38a6, _0x5b0203 = _0x1820c5 * _0xaaec6a, _0x4d545b = _0x55254b * _0xaf38a6, _0x540689 = _0x55254b * _0xaaec6a, _0x588fe2 = _0x4b360a * _0xaaec6a, _0x4f31b6 = _0x50a158 * _0x188ef6, _0x34ee2e = _0x50a158 * _0xaf38a6, _0x29f660 = _0x50a158 * _0xaaec6a;
            _0x15c30b[_0x1f3039 + 0x0] = (0x1 - (_0x4d545b + _0x588fe2)) * _0x50f9be, _0x15c30b[_0x1f3039 + 0x1] = (_0xe8a815 + _0x29f660) * _0x50f9be, _0x15c30b[_0x1f3039 + 0x2] = (_0x5b0203 - _0x34ee2e) * _0x50f9be, _0x15c30b[_0x1f3039 + 0x3] = 0x0, _0x15c30b[_0x1f3039 + 0x4] = (_0xe8a815 - _0x29f660) * _0x1492c9, _0x15c30b[_0x1f3039 + 0x5] = (0x1 - (_0x13d9f7 + _0x588fe2)) * _0x1492c9, _0x15c30b[_0x1f3039 + 0x6] = (_0x540689 + _0x4f31b6) * _0x1492c9, _0x15c30b[_0x1f3039 + 0x7] = 0x0, _0x15c30b[_0x1f3039 + 0x8] = (_0x5b0203 + _0x34ee2e) * _0x427191, _0x15c30b[_0x1f3039 + 0x9] = (_0x540689 - _0x4f31b6) * _0x427191, _0x15c30b[_0x1f3039 + 0xa] = (0x1 - (_0x13d9f7 + _0x4d545b)) * _0x427191, _0x15c30b[_0x1f3039 + 0xb] = 0x0, _0x15c30b[_0x1f3039 + 0xc] = _0x101d4b, _0x15c30b[_0x1f3039 + 0xd] = _0x1548a0, _0x15c30b[_0x1f3039 + 0xe] = _0x90b40a, _0x15c30b[_0x1f3039 + 0xf] = 0x1;
        }
        static ['transformVector3ArrayToVector3ArrayCoordinate'](_0x1b6467, _0x3abfaf, _0x2fa099, _0x39d10d, _0x298ad5) {
            var _0x59f1ff = _0x6027f5, _0x768315 = _0x1b6467[_0x3abfaf + 0x0], _0x4c9102 = _0x1b6467[_0x3abfaf + 0x1], _0x4eb21a = _0x1b6467[_0x3abfaf + 0x2], _0x487c4d = _0x2fa099[_0x59f1ff(0x1fe)], _0x49e1cf = _0x768315 * _0x487c4d[0x3] + _0x4c9102 * _0x487c4d[0x7] + _0x4eb21a * _0x487c4d[0xb] + _0x487c4d[0xf];
            _0x39d10d[_0x298ad5] = _0x768315 * _0x487c4d[0x0] + _0x4c9102 * _0x487c4d[0x4] + _0x4eb21a * _0x487c4d[0x8] + _0x487c4d[0xc] / _0x49e1cf, _0x39d10d[_0x298ad5 + 0x1] = _0x768315 * _0x487c4d[0x1] + _0x4c9102 * _0x487c4d[0x5] + _0x4eb21a * _0x487c4d[0x9] + _0x487c4d[0xd] / _0x49e1cf, _0x39d10d[_0x298ad5 + 0x2] = _0x768315 * _0x487c4d[0x2] + _0x4c9102 * _0x487c4d[0x6] + _0x4eb21a * _0x487c4d[0xa] + _0x487c4d[0xe] / _0x49e1cf;
        }
        static [_0x6027f5(0x2f7)](_0x1f1daf, _0x4acf7b, _0x3487a1, _0xe164a7, _0x3bf95b) {
            var _0x39f249 = _0x1f1daf[_0x4acf7b + 0x0], _0x38fb2a = _0x1f1daf[_0x4acf7b + 0x1], _0x5d6343 = _0x1f1daf[_0x4acf7b + 0x2], _0x34e3ad = _0x3487a1['elements'];
            _0xe164a7[_0x3bf95b] = _0x39f249 * _0x34e3ad[0x0] + _0x38fb2a * _0x34e3ad[0x4] + _0x5d6343 * _0x34e3ad[0x8], _0xe164a7[_0x3bf95b + 0x1] = _0x39f249 * _0x34e3ad[0x1] + _0x38fb2a * _0x34e3ad[0x5] + _0x5d6343 * _0x34e3ad[0x9], _0xe164a7[_0x3bf95b + 0x2] = _0x39f249 * _0x34e3ad[0x2] + _0x38fb2a * _0x34e3ad[0x6] + _0x5d6343 * _0x34e3ad[0xa];
        }
        static [_0x6027f5(0x2f8)](_0xfc25f, _0x550b6e, _0x126266, _0x1557c, _0x572d62) {
            _0x1557c[_0x572d62 + 0x0] = _0xfc25f[_0x550b6e + 0x0] * _0x126266['x'] + _0x126266['z'], _0x1557c[_0x572d62 + 0x1] = 0x1 - ((0x1 - _0xfc25f[_0x550b6e + 0x1]) * _0x126266['y'] + _0x126266['w']);
        }
        static ['getURLVerion'](_0x5259b8) {
            var _0x209184 = _0x6027f5, _0x5d7933 = _0x5259b8[_0x209184(0x2f9)]('?');
            return _0x5d7933 >= 0x0 ? _0x5259b8[_0x209184(0x2fa)](_0x5d7933) : null;
        }
        static ['_createAffineTransformationArray'](_0x30c4c9, _0x39bba7, _0x4451dd, _0x47d117) {
            var _0x2f295a = _0x39bba7['x'], _0x7e7c95 = _0x39bba7['y'], _0x1e5f5d = _0x39bba7['z'], _0x3d801f = _0x39bba7['w'], _0xc56243 = _0x2f295a + _0x2f295a, _0x20497a = _0x7e7c95 + _0x7e7c95, _0x2a834d = _0x1e5f5d + _0x1e5f5d, _0x29b164 = _0x2f295a * _0xc56243, _0x152b8c = _0x2f295a * _0x20497a, _0x326ade = _0x2f295a * _0x2a834d, _0x138e23 = _0x7e7c95 * _0x20497a, _0x5a3738 = _0x7e7c95 * _0x2a834d, _0x1ccff7 = _0x1e5f5d * _0x2a834d, _0xd60573 = _0x3d801f * _0xc56243, _0x37e4ef = _0x3d801f * _0x20497a, _0x1c43c1 = _0x3d801f * _0x2a834d, _0x39e11a = _0x4451dd['x'], _0x336254 = _0x4451dd['y'], _0x10cc4a = _0x4451dd['z'];
            _0x47d117[0x0] = (0x1 - (_0x138e23 + _0x1ccff7)) * _0x39e11a, _0x47d117[0x1] = (_0x152b8c + _0x1c43c1) * _0x39e11a, _0x47d117[0x2] = (_0x326ade - _0x37e4ef) * _0x39e11a, _0x47d117[0x3] = 0x0, _0x47d117[0x4] = (_0x152b8c - _0x1c43c1) * _0x336254, _0x47d117[0x5] = (0x1 - (_0x29b164 + _0x1ccff7)) * _0x336254, _0x47d117[0x6] = (_0x5a3738 + _0xd60573) * _0x336254, _0x47d117[0x7] = 0x0, _0x47d117[0x8] = (_0x326ade + _0x37e4ef) * _0x10cc4a, _0x47d117[0x9] = (_0x5a3738 - _0xd60573) * _0x10cc4a, _0x47d117[0xa] = (0x1 - (_0x29b164 + _0x138e23)) * _0x10cc4a, _0x47d117[0xb] = 0x0, _0x47d117[0xc] = _0x30c4c9['x'], _0x47d117[0xd] = _0x30c4c9['y'], _0x47d117[0xe] = _0x30c4c9['z'], _0x47d117[0xf] = 0x1;
        }
        static [_0x6027f5(0x2fb)](_0x27e353, _0x123c96, _0x338812, _0x53b4c6, _0x141d17) {
            var _0x52f6f6 = _0x123c96, _0x8c9b5d = _0x27e353, _0x50e79f = _0x53b4c6, _0x52b03e = _0x52f6f6[_0x338812], _0x26090f = _0x52f6f6[_0x338812 + 0x1], _0xe9d6c0 = _0x52f6f6[_0x338812 + 0x2], _0x49452f = _0x52f6f6[_0x338812 + 0x3], _0x485a42 = _0x52f6f6[_0x338812 + 0x4], _0x2bf47f = _0x52f6f6[_0x338812 + 0x5], _0x47090b = _0x52f6f6[_0x338812 + 0x6], _0x27d073 = _0x52f6f6[_0x338812 + 0x7], _0xd49630 = _0x52f6f6[_0x338812 + 0x8], _0x48b37a = _0x52f6f6[_0x338812 + 0x9], _0x105965 = _0x52f6f6[_0x338812 + 0xa], _0x3fb313 = _0x52f6f6[_0x338812 + 0xb], _0xb3c61e = _0x52f6f6[_0x338812 + 0xc], _0x4fe923 = _0x52f6f6[_0x338812 + 0xd], _0x3ec976 = _0x52f6f6[_0x338812 + 0xe], _0x999e1 = _0x52f6f6[_0x338812 + 0xf], _0x49da6b = _0x8c9b5d[0x0], _0x51ba8a = _0x8c9b5d[0x1], _0x5d848e = _0x8c9b5d[0x2], _0x140486 = _0x8c9b5d[0x3], _0x1b2469 = _0x8c9b5d[0x4], _0x4dbae5 = _0x8c9b5d[0x5], _0x252d75 = _0x8c9b5d[0x6], _0x27d191 = _0x8c9b5d[0x7], _0x49878a = _0x8c9b5d[0x8], _0x9fbce2 = _0x8c9b5d[0x9], _0x100366 = _0x8c9b5d[0xa], _0x4c7018 = _0x8c9b5d[0xb], _0x17685d = _0x8c9b5d[0xc], _0x420650 = _0x8c9b5d[0xd], _0x598366 = _0x8c9b5d[0xe], _0x51edc4 = _0x8c9b5d[0xf];
            _0x50e79f[_0x141d17] = _0x52b03e * _0x49da6b + _0x26090f * _0x1b2469 + _0xe9d6c0 * _0x49878a + _0x49452f * _0x17685d, _0x50e79f[_0x141d17 + 0x1] = _0x52b03e * _0x51ba8a + _0x26090f * _0x4dbae5 + _0xe9d6c0 * _0x9fbce2 + _0x49452f * _0x420650, _0x50e79f[_0x141d17 + 0x2] = _0x52b03e * _0x5d848e + _0x26090f * _0x252d75 + _0xe9d6c0 * _0x100366 + _0x49452f * _0x598366, _0x50e79f[_0x141d17 + 0x3] = _0x52b03e * _0x140486 + _0x26090f * _0x27d191 + _0xe9d6c0 * _0x4c7018 + _0x49452f * _0x51edc4, _0x50e79f[_0x141d17 + 0x4] = _0x485a42 * _0x49da6b + _0x2bf47f * _0x1b2469 + _0x47090b * _0x49878a + _0x27d073 * _0x17685d, _0x50e79f[_0x141d17 + 0x5] = _0x485a42 * _0x51ba8a + _0x2bf47f * _0x4dbae5 + _0x47090b * _0x9fbce2 + _0x27d073 * _0x420650, _0x50e79f[_0x141d17 + 0x6] = _0x485a42 * _0x5d848e + _0x2bf47f * _0x252d75 + _0x47090b * _0x100366 + _0x27d073 * _0x598366, _0x50e79f[_0x141d17 + 0x7] = _0x485a42 * _0x140486 + _0x2bf47f * _0x27d191 + _0x47090b * _0x4c7018 + _0x27d073 * _0x51edc4, _0x50e79f[_0x141d17 + 0x8] = _0xd49630 * _0x49da6b + _0x48b37a * _0x1b2469 + _0x105965 * _0x49878a + _0x3fb313 * _0x17685d, _0x50e79f[_0x141d17 + 0x9] = _0xd49630 * _0x51ba8a + _0x48b37a * _0x4dbae5 + _0x105965 * _0x9fbce2 + _0x3fb313 * _0x420650, _0x50e79f[_0x141d17 + 0xa] = _0xd49630 * _0x5d848e + _0x48b37a * _0x252d75 + _0x105965 * _0x100366 + _0x3fb313 * _0x598366, _0x50e79f[_0x141d17 + 0xb] = _0xd49630 * _0x140486 + _0x48b37a * _0x27d191 + _0x105965 * _0x4c7018 + _0x3fb313 * _0x51edc4, _0x50e79f[_0x141d17 + 0xc] = _0xb3c61e * _0x49da6b + _0x4fe923 * _0x1b2469 + _0x3ec976 * _0x49878a + _0x999e1 * _0x17685d, _0x50e79f[_0x141d17 + 0xd] = _0xb3c61e * _0x51ba8a + _0x4fe923 * _0x4dbae5 + _0x3ec976 * _0x9fbce2 + _0x999e1 * _0x420650, _0x50e79f[_0x141d17 + 0xe] = _0xb3c61e * _0x5d848e + _0x4fe923 * _0x252d75 + _0x3ec976 * _0x100366 + _0x999e1 * _0x598366, _0x50e79f[_0x141d17 + 0xf] = _0xb3c61e * _0x140486 + _0x4fe923 * _0x27d191 + _0x3ec976 * _0x4c7018 + _0x999e1 * _0x51edc4;
        }
        static [_0x6027f5(0x28d)](_0x42c970, _0x295941) {
            var _0x155af2 = _0x6027f5;
            return 0x0 == _0x42c970 ? 0x1 == _0x295941 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x42c970 > 0x0 ? Math[_0x155af2(0x288)](_0x295941 / _0x42c970) : _0x42c970 < 0x0 ? _0x295941 > 0x0 ? Math[_0x155af2(0x288)](_0x295941 / _0x42c970) + Math['PI'] : Math[_0x155af2(0x288)](_0x295941 / _0x42c970) - Math['PI'] : 0x0;
        }
        static [_0x6027f5(0x289)](_0x3caa8e, _0x4b201, _0x341efd) {
            var _0x19d2cd = _0x6027f5;
            _0x3697cd[_0x19d2cd(0x28a)](_0x4b201, _0x3caa8e, _0x528999[_0x19d2cd(0x28b)]), _0x3697cd[_0x19d2cd(0x214)](_0x528999[_0x19d2cd(0x28b)], _0x528999['TEMPVector30']), _0x341efd['x'] = Math['asin'](_0x528999[_0x19d2cd(0x28b)]['y']), _0x341efd['y'] = _0x3acd08[_0x19d2cd(0x28d)](-_0x528999['TEMPVector30']['z'], -_0x528999[_0x19d2cd(0x28b)]['x']);
        }
        static [_0x6027f5(0x294)](_0x4a62b6, _0x59d3fc, _0x24c4ca) {
            var _0x4b54e6 = _0x59d3fc, _0x41ee62 = _0x4a62b6['x'], _0x10bc97 = _0x4a62b6['y'], _0x3dc29d = _0x4a62b6['z'], _0x247543 = _0x4b54e6[0x0], _0x543f18 = _0x4b54e6[0x1], _0x8c1a5a = _0x4b54e6[0x2], _0x19d178 = _0x4b54e6[0x3], _0x2d25c6 = _0x19d178 * _0x41ee62 + _0x543f18 * _0x3dc29d - _0x8c1a5a * _0x10bc97, _0x157086 = _0x19d178 * _0x10bc97 + _0x8c1a5a * _0x41ee62 - _0x247543 * _0x3dc29d, _0x8ccc37 = _0x19d178 * _0x3dc29d + _0x247543 * _0x10bc97 - _0x543f18 * _0x41ee62, _0x3d0189 = -_0x247543 * _0x41ee62 - _0x543f18 * _0x10bc97 - _0x8c1a5a * _0x3dc29d;
            _0x24c4ca['x'] = _0x2d25c6 * _0x19d178 + _0x3d0189 * -_0x247543 + _0x157086 * -_0x8c1a5a - _0x8ccc37 * -_0x543f18, _0x24c4ca['y'] = _0x157086 * _0x19d178 + _0x3d0189 * -_0x543f18 + _0x8ccc37 * -_0x247543 - _0x2d25c6 * -_0x8c1a5a, _0x24c4ca['z'] = _0x8ccc37 * _0x19d178 + _0x3d0189 * -_0x8c1a5a + _0x2d25c6 * -_0x543f18 - _0x157086 * -_0x247543;
        }
        static [_0x6027f5(0x2fc)](_0x502ce3, _0x559e31, _0x479fca) {
            _0x479fca['x'] = _0x502ce3['x'] * _0x559e31, _0x479fca['y'] = _0x502ce3['y'] * _0x559e31, _0x479fca['z'] = _0x502ce3['z'] * _0x559e31, _0x479fca['w'] = _0x502ce3['w'];
        }
        static [_0x6027f5(0x2fd)](_0x478258, _0x274c98) {
            _0x274c98['x'] = -_0x478258['x'], _0x274c98['y'] = -_0x478258['y'], _0x274c98['z'] = -_0x478258['z'], _0x274c98['w'] = _0x478258['w'];
        }
        static [_0x6027f5(0x2fe)](_0x3fd8ab, _0x62947d, _0x40cec8) {
            var _0x190ae5 = _0x6027f5, _0x579e1a = _0x3fd8ab['x'], _0x83f593 = _0x3fd8ab['y'], _0x3328e4 = _0x3fd8ab['z'];
            _0x40cec8['x'] = _0x579e1a > 0x0 ? Math[_0x190ae5(0x2ff)](Math[_0x190ae5(0x1f0)](_0x579e1a), _0x62947d) : -Math[_0x190ae5(0x2ff)](Math['abs'](_0x579e1a), _0x62947d), _0x40cec8['y'] = _0x83f593 > 0x0 ? Math['pow'](Math['abs'](_0x83f593), _0x62947d) : -Math[_0x190ae5(0x2ff)](Math['abs'](_0x83f593), _0x62947d), _0x40cec8['z'] = _0x3328e4 > 0x0 ? Math[_0x190ae5(0x2ff)](Math[_0x190ae5(0x1f0)](_0x3328e4), _0x62947d) : -Math['pow'](Math[_0x190ae5(0x1f0)](_0x3328e4), _0x62947d);
        }
        static [_0x6027f5(0x300)](_0x1ebbba, _0x14122e, _0x39bf08, _0x400c0a) {
            var _0x5a6023 = _0x6027f5, _0x584c9e = _0x3acd08['_tempVector3_0'], _0x20099d = _0x3acd08['_tempVector3_1'];
            _0x3acd08['scaleWeight'](_0x1ebbba, 0x1 - _0x39bf08, _0x584c9e), _0x3acd08[_0x5a6023(0x2fe)](_0x14122e, _0x39bf08, _0x20099d);
            var _0x3232de = _0x39bf08 > 0.5 ? _0x14122e : _0x1ebbba;
            _0x400c0a['x'] = _0x3232de['x'] > 0x0 ? Math[_0x5a6023(0x1f0)](_0x584c9e['x'] * _0x20099d['x']) : -Math['abs'](_0x584c9e['x'] * _0x20099d['x']), _0x400c0a['y'] = _0x3232de['y'] > 0x0 ? Math[_0x5a6023(0x1f0)](_0x584c9e['y'] * _0x20099d['y']) : -Math[_0x5a6023(0x1f0)](_0x584c9e['y'] * _0x20099d['y']), _0x400c0a['z'] = _0x3232de['z'] > 0x0 ? Math[_0x5a6023(0x1f0)](_0x584c9e['z'] * _0x20099d['z']) : -Math[_0x5a6023(0x1f0)](_0x584c9e['z'] * _0x20099d['z']);
        }
        static [_0x6027f5(0x301)](_0x2e03e9, _0x119928, _0x1ffe27) {
            var _0x109032, _0x346d47, _0x153029, _0x1cf373, _0x4a1ea7;
            if (_0x1ffe27 === _0x119928) {
                for (_0x119928 = new Float32Array(0x10), _0x109032 = 0x0; _0x109032 < 0x10; ++_0x109032)
                    _0x119928[_0x109032] = _0x1ffe27[_0x109032];
            }
            var _0x4b799d = _0x119928[0x0], _0x534af4 = _0x119928[0x1], _0x3f4200 = _0x119928[0x2], _0x17e5c3 = _0x119928[0x3], _0x24c1bd = _0x119928[0x4], _0x4214f0 = _0x119928[0x5], _0x12d160 = _0x119928[0x6], _0x534279 = _0x119928[0x7], _0x5bebe9 = _0x119928[0x8], _0x38f86a = _0x119928[0x9], _0x3ae572 = _0x119928[0xa], _0x2d7db7 = _0x119928[0xb], _0x3e5bb1 = _0x119928[0xc], _0x1af780 = _0x119928[0xd], _0x49bc63 = _0x119928[0xe], _0x526bdb = _0x119928[0xf];
            for (_0x109032 = 0x0; _0x109032 < 0x4; _0x109032++)
                _0x346d47 = _0x2e03e9[_0x109032], _0x153029 = _0x2e03e9[_0x109032 + 0x4], _0x1cf373 = _0x2e03e9[_0x109032 + 0x8], _0x4a1ea7 = _0x2e03e9[_0x109032 + 0xc], _0x1ffe27[_0x109032] = _0x346d47 * _0x4b799d + _0x153029 * _0x534af4 + _0x1cf373 * _0x3f4200 + _0x4a1ea7 * _0x17e5c3, _0x1ffe27[_0x109032 + 0x4] = _0x346d47 * _0x24c1bd + _0x153029 * _0x4214f0 + _0x1cf373 * _0x12d160 + _0x4a1ea7 * _0x534279, _0x1ffe27[_0x109032 + 0x8] = _0x346d47 * _0x5bebe9 + _0x153029 * _0x38f86a + _0x1cf373 * _0x3ae572 + _0x4a1ea7 * _0x2d7db7, _0x1ffe27[_0x109032 + 0xc] = _0x346d47 * _0x3e5bb1 + _0x153029 * _0x1af780 + _0x1cf373 * _0x49bc63 + _0x4a1ea7 * _0x526bdb;
        }
        static [_0x6027f5(0x302)](_0x2b0af9, _0x2e0bcc, _0x585312) {
            var _0x451c59 = _0x6027f5;
            _0x387b86[_0x451c59(0x303)][_0x451c59(0x304)][_0x451c59(0x305)](_0x2b0af9, _0x2e0bcc, _0x585312);
        }
        static [_0x6027f5(0x306)](_0x53f570, _0x39809f, _0x40a425) {
            var _0x1fa884 = _0x6027f5;
            _0x3acd08[_0x1fa884(0x301)](_0x53f570['elements'], _0x39809f, _0x40a425['elements']);
        }
        static ['_buildTexture2D'](_0xaaec63, _0x46074f, _0x10d727, _0x2e4877, _0x590c59 = !0x1) {
            var _0x198547 = _0x6027f5, _0x680dff = new _0x387b86['Texture2D'](_0xaaec63, _0x46074f, _0x10d727, _0x590c59, !0x0);
            return _0x680dff[_0x198547(0x307)] = 0x1, _0x680dff[_0x198547(0x2e0)] = _0x387b86['FilterMode'][_0x198547(0x2e2)], _0xe5eba5[_0x198547(0x2d7)](_0x680dff, _0xaaec63, _0x46074f, _0x2e4877), _0x680dff;
        }
        static [_0x6027f5(0x308)](_0x597764, _0x406335, _0xf6f525) {
            var _0x1957e7 = _0x6027f5;
            _0x597764[_0x1957e7(0x309)] + 0xc > _0x597764['maxLineCount'] && (_0x597764[_0x1957e7(0x30a)] += 0xc);
            var _0xed7e66 = _0x3acd08[_0x1957e7(0x30b)], _0x1b5176 = _0x3acd08[_0x1957e7(0x30c)], _0x23a470 = _0x406335[_0x1957e7(0x212)], _0x33cf5d = _0x406335[_0x1957e7(0x20c)];
            _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x23a470['y'], _0x23a470['z']), _0x1b5176[_0x1957e7(0x1f8)](_0x33cf5d['x'], _0x23a470['y'], _0x23a470['z']), _0x597764[_0x1957e7(0x30d)](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x23a470['y'], _0x23a470['z']), _0x1b5176[_0x1957e7(0x1f8)](_0x23a470['x'], _0x23a470['y'], _0x33cf5d['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66['setValue'](_0x33cf5d['x'], _0x23a470['y'], _0x23a470['z']), _0x1b5176[_0x1957e7(0x1f8)](_0x33cf5d['x'], _0x23a470['y'], _0x33cf5d['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66['setValue'](_0x23a470['x'], _0x23a470['y'], _0x33cf5d['z']), _0x1b5176[_0x1957e7(0x1f8)](_0x33cf5d['x'], _0x23a470['y'], _0x33cf5d['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x23a470['y'], _0x23a470['z']), _0x1b5176['setValue'](_0x23a470['x'], _0x33cf5d['y'], _0x23a470['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x23a470['y'], _0x33cf5d['z']), _0x1b5176['setValue'](_0x23a470['x'], _0x33cf5d['y'], _0x33cf5d['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x33cf5d['x'], _0x23a470['y'], _0x23a470['z']), _0x1b5176['setValue'](_0x33cf5d['x'], _0x33cf5d['y'], _0x23a470['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66['setValue'](_0x33cf5d['x'], _0x23a470['y'], _0x33cf5d['z']), _0x1b5176['setValue'](_0x33cf5d['x'], _0x33cf5d['y'], _0x33cf5d['z']), _0x597764[_0x1957e7(0x30d)](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x33cf5d['y'], _0x23a470['z']), _0x1b5176[_0x1957e7(0x1f8)](_0x33cf5d['x'], _0x33cf5d['y'], _0x23a470['z']), _0x597764[_0x1957e7(0x30d)](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x33cf5d['y'], _0x23a470['z']), _0x1b5176['setValue'](_0x23a470['x'], _0x33cf5d['y'], _0x33cf5d['z']), _0x597764[_0x1957e7(0x30d)](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66['setValue'](_0x33cf5d['x'], _0x33cf5d['y'], _0x23a470['z']), _0x1b5176[_0x1957e7(0x1f8)](_0x33cf5d['x'], _0x33cf5d['y'], _0x33cf5d['z']), _0x597764['addLine'](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525), _0xed7e66[_0x1957e7(0x1f8)](_0x23a470['x'], _0x33cf5d['y'], _0x33cf5d['z']), _0x1b5176['setValue'](_0x33cf5d['x'], _0x33cf5d['y'], _0x33cf5d['z']), _0x597764[_0x1957e7(0x30d)](_0xed7e66, _0x1b5176, _0xf6f525, _0xf6f525);
        }
        static [_0x6027f5(0x30e)](_0x3e002b, _0x2f265d, _0xf9ab9d) {
            var _0x3bf9ae = _0x6027f5;
            _0xf9ab9d[_0x3bf9ae(0x205)] = 0x0;
            for (var _0x505cd4 = _0x2f265d; _0x505cd4 !== _0x3e002b;) {
                var _0x33d32d = _0x505cd4[_0x3bf9ae(0x30f)];
                if (!_0x33d32d)
                    return null;
                _0xf9ab9d['push'](_0x33d32d[_0x3bf9ae(0x310)](_0x505cd4)), _0x505cd4 = _0x33d32d;
            }
            return _0xf9ab9d;
        }
        static [_0x6027f5(0x311)](_0x2d832e, _0x194474) {
            var _0x42505d = _0x6027f5;
            for (var _0x1b3ae3 = _0x2d832e, _0x4f16d5 = _0x194474[_0x42505d(0x205)] - 0x1; _0x4f16d5 >= 0x0; _0x4f16d5--)
                _0x1b3ae3 = _0x1b3ae3['getChildAt'](_0x194474[_0x4f16d5]);
            return _0x1b3ae3;
        }
        static [_0x6027f5(0x312)](_0x3a8061) {
            var _0x4b35b7 = _0x6027f5;
            let _0x17f249, _0x447b07 = _0x3a8061[_0x4b35b7(0x313)], _0x3a4776 = _0x3a8061['height'];
            switch (_0x3a8061['format']) {
            case _0x387b86[_0x4b35b7(0x314)]['R8G8B8']:
            case _0x387b86['RenderTextureFormat']['R8G8B8A8']:
                _0x17f249 = new Uint8Array(_0x447b07 * _0x3a4776 * 0x4);
                break;
            case _0x387b86['RenderTextureFormat'][_0x4b35b7(0x315)]:
                _0x17f249 = new Float32Array(_0x447b07 * _0x3a4776 * 0x4);
                break;
            default:
                throw _0x4b35b7(0x316) + _0x3a8061[_0x4b35b7(0x2d8)][_0x4b35b7(0x317)]() + _0x4b35b7(0x318);
            }
            switch (_0x3a8061[_0x4b35b7(0x319)](0x0, 0x0, _0x3a8061[_0x4b35b7(0x313)], _0x3a8061['height'], _0x17f249), _0x3a8061[_0x4b35b7(0x2d8)]) {
            case _0x387b86[_0x4b35b7(0x314)][_0x4b35b7(0x315)]:
                let _0xd8b0e0 = _0x17f249, _0x3b8cc9 = new Uint8Array(_0x447b07 * _0x3a4776 * 0x4);
                for (let _0x1a5441 = 0x0, _0x2ed778 = _0xd8b0e0[_0x4b35b7(0x205)]; _0x1a5441 < _0x2ed778; _0x1a5441++)
                    _0x3b8cc9[_0x1a5441] = Math[_0x4b35b7(0x212)](Math['floor'](0xff * _0xd8b0e0[_0x1a5441]), 0xff);
                _0x17f249 = _0x3b8cc9;
            }
            let _0x14c674 = _0x17f249;
            var _0x17851f;
            if (_0x387b86[_0x4b35b7(0x31a)][_0x4b35b7(0x31b)]);
            else {
                var _0xc7084f = new _0x387b86[(_0x4b35b7(0x31c))](!0x0);
                _0xc7084f[_0x4b35b7(0x31d)] = !0x0, _0xc7084f['size'](_0x447b07, _0x3a4776);
                var _0x331be6 = _0xc7084f['getContext']('2d'), _0xbca670 = _0x331be6[_0x4b35b7(0x31e)](_0x447b07, _0x3a4776);
                _0xbca670['data'][_0x4b35b7(0x31f)](new Uint8ClampedArray(_0x14c674)), _0x331be6[_0x4b35b7(0x320)](_0xbca670, 0x0, 0x0), _0x17851f = _0xc7084f[_0x4b35b7(0x321)][_0x4b35b7(0x322)](), _0xc7084f['destroy']();
            }
            return _0x17851f;
        }
    }
    _0x3acd08[_0x6027f5(0x30b)] = new _0x3697cd(), _0x3acd08['_tempVector3_1'] = new _0x3697cd(), _0x3acd08[_0x6027f5(0x2ea)] = new Float32Array(0x10), _0x3acd08[_0x6027f5(0x2eb)] = new Float32Array(0x10), _0x3acd08[_0x6027f5(0x323)] = new Float32Array(0x10), _0x3acd08['_tempArray16_3'] = new Float32Array(0x10), _0x3acd08['_compIdToNode'] = new Object();
    class _0x1120e5 extends _0x387b86[_0x6027f5(0x324)] {
        constructor() {
            var _0x400124 = _0x6027f5;
            super(), this[_0x400124(0x2b8)] = 0x0, this[_0x400124(0x2bc)] = 0x0, this['_nodes'] = new _0x317236(), this[_0x400124(0x2ba)] = !0x1, this[_0x400124(0x325)] = [];
        }
        static ['_parse'](_0x5d2e4b) {
            var _0x50aea1 = _0x6027f5, _0x291214 = new _0x1120e5(), _0x23d3d1 = new _0x387b86[(_0x50aea1(0x326))](_0x5d2e4b), _0x53c39b = _0x23d3d1[_0x50aea1(0x2b0)]();
            switch (_0x53c39b) {
            case 'LAYAANIMATION:03':
                _0x489078[_0x50aea1(0x2b1)](_0x291214, _0x23d3d1);
                break;
            case _0x50aea1(0x2ce):
            case 'LAYAANIMATION:COMPRESSION_04':
                _0x23997e[_0x50aea1(0x2b1)](_0x291214, _0x23d3d1, _0x53c39b);
                break;
            default:
                throw _0x50aea1(0x327);
            }
            return _0x291214;
        }
        static ['load'](_0xacb4f8, _0x2b7704) {
            var _0x1c7b0d = _0x6027f5;
            _0x387b86[_0x1c7b0d(0x328)][_0x1c7b0d(0x329)][_0x1c7b0d(0x32a)](_0xacb4f8, _0x2b7704, null, _0x1120e5[_0x1c7b0d(0x32b)]);
        }
        [_0x6027f5(0x32c)]() {
            var _0x3f1a2d = _0x6027f5;
            return this[_0x3f1a2d(0x2b8)];
        }
        [_0x6027f5(0x32d)](_0x5f4f97, _0x2a6a2a, _0x485756, _0x486785) {
            var _0x4cac53 = _0x6027f5, _0x2cf088 = _0x5f4f97[_0x4cac53(0x2a2)], _0x339346 = _0x2a6a2a['inTangent'];
            if (Number[_0x4cac53(0x32e)](_0x2cf088) && Number['isFinite'](_0x339346)) {
                var _0x585be7 = _0x485756 * _0x485756, _0xd2286 = _0x585be7 * _0x485756, _0x4aba85 = _0xd2286 - 0x2 * _0x585be7 + _0x485756, _0xdc680e = _0xd2286 - _0x585be7, _0x56054b = -0x2 * _0xd2286 + 0x3 * _0x585be7;
                return (0x2 * _0xd2286 - 0x3 * _0x585be7 + 0x1) * _0x5f4f97[_0x4cac53(0x2a1)] + _0x4aba85 * _0x2cf088 * _0x486785 + _0xdc680e * _0x339346 * _0x486785 + _0x56054b * _0x2a6a2a[_0x4cac53(0x2a1)];
            }
            return _0x5f4f97[_0x4cac53(0x2a1)];
        }
        [_0x6027f5(0x32f)](_0x314b9c, _0x52b885, _0x161d0a, _0x4e488d, _0x3369b9) {
            var _0x4a1496 = _0x6027f5, _0x3f2843 = _0x314b9c[_0x4a1496(0x2a1)], _0x3a7d3d = _0x314b9c[_0x4a1496(0x2a2)], _0x5297e8 = _0x52b885[_0x4a1496(0x2a1)], _0x2b7567 = _0x52b885[_0x4a1496(0x274)], _0x190003 = _0x161d0a * _0x161d0a, _0x5e2619 = _0x190003 * _0x161d0a, _0x36b32d = 0x2 * _0x5e2619 - 0x3 * _0x190003 + 0x1, _0x4c0e15 = _0x5e2619 - 0x2 * _0x190003 + _0x161d0a, _0x4d33b2 = _0x5e2619 - _0x190003, _0x351559 = -0x2 * _0x5e2619 + 0x3 * _0x190003, _0x5eeb26 = _0x3a7d3d['x'], _0x4ca5de = _0x2b7567['x'];
            Number[_0x4a1496(0x32e)](_0x5eeb26) && Number[_0x4a1496(0x32e)](_0x4ca5de) ? _0x3369b9['x'] = _0x36b32d * _0x3f2843['x'] + _0x4c0e15 * _0x5eeb26 * _0x4e488d + _0x4d33b2 * _0x4ca5de * _0x4e488d + _0x351559 * _0x5297e8['x'] : _0x3369b9['x'] = _0x3f2843['x'], _0x5eeb26 = _0x3a7d3d['y'], _0x4ca5de = _0x2b7567['y'], Number[_0x4a1496(0x32e)](_0x5eeb26) && Number[_0x4a1496(0x32e)](_0x4ca5de) ? _0x3369b9['y'] = _0x36b32d * _0x3f2843['y'] + _0x4c0e15 * _0x5eeb26 * _0x4e488d + _0x4d33b2 * _0x4ca5de * _0x4e488d + _0x351559 * _0x5297e8['y'] : _0x3369b9['y'] = _0x3f2843['y'], _0x5eeb26 = _0x3a7d3d['z'], _0x4ca5de = _0x2b7567['z'], Number[_0x4a1496(0x32e)](_0x5eeb26) && Number['isFinite'](_0x4ca5de) ? _0x3369b9['z'] = _0x36b32d * _0x3f2843['z'] + _0x4c0e15 * _0x5eeb26 * _0x4e488d + _0x4d33b2 * _0x4ca5de * _0x4e488d + _0x351559 * _0x5297e8['z'] : _0x3369b9['z'] = _0x3f2843['z'];
        }
        [_0x6027f5(0x330)](_0x29d68d, _0xa73d83, _0x505097, _0x271e72, _0x4e2a5d) {
            var _0x1df4b4 = _0x6027f5, _0x1e2c16 = _0x29d68d[_0x1df4b4(0x2a1)], _0x470f2e = _0x29d68d[_0x1df4b4(0x2a2)], _0x250d49 = _0xa73d83[_0x1df4b4(0x2a1)], _0x522926 = _0xa73d83[_0x1df4b4(0x274)], _0xbd1ee7 = _0x505097 * _0x505097, _0xc5099d = _0xbd1ee7 * _0x505097, _0x365b31 = 0x2 * _0xc5099d - 0x3 * _0xbd1ee7 + 0x1, _0xd2983 = _0xc5099d - 0x2 * _0xbd1ee7 + _0x505097, _0xf066fb = _0xc5099d - _0xbd1ee7, _0x1d89a2 = -0x2 * _0xc5099d + 0x3 * _0xbd1ee7, _0x97f8a2 = _0x470f2e['x'], _0x43d245 = _0x522926['x'];
            Number[_0x1df4b4(0x32e)](_0x97f8a2) && Number['isFinite'](_0x43d245) ? _0x4e2a5d['x'] = _0x365b31 * _0x1e2c16['x'] + _0xd2983 * _0x97f8a2 * _0x271e72 + _0xf066fb * _0x43d245 * _0x271e72 + _0x1d89a2 * _0x250d49['x'] : _0x4e2a5d['x'] = _0x1e2c16['x'], _0x97f8a2 = _0x470f2e['y'], _0x43d245 = _0x522926['y'], Number['isFinite'](_0x97f8a2) && Number['isFinite'](_0x43d245) ? _0x4e2a5d['y'] = _0x365b31 * _0x1e2c16['y'] + _0xd2983 * _0x97f8a2 * _0x271e72 + _0xf066fb * _0x43d245 * _0x271e72 + _0x1d89a2 * _0x250d49['y'] : _0x4e2a5d['y'] = _0x1e2c16['y'], _0x97f8a2 = _0x470f2e['z'], _0x43d245 = _0x522926['z'], Number[_0x1df4b4(0x32e)](_0x97f8a2) && Number[_0x1df4b4(0x32e)](_0x43d245) ? _0x4e2a5d['z'] = _0x365b31 * _0x1e2c16['z'] + _0xd2983 * _0x97f8a2 * _0x271e72 + _0xf066fb * _0x43d245 * _0x271e72 + _0x1d89a2 * _0x250d49['z'] : _0x4e2a5d['z'] = _0x1e2c16['z'], _0x97f8a2 = _0x470f2e['w'], _0x43d245 = _0x522926['w'], Number['isFinite'](_0x97f8a2) && Number[_0x1df4b4(0x32e)](_0x43d245) ? _0x4e2a5d['w'] = _0x365b31 * _0x1e2c16['w'] + _0xd2983 * _0x97f8a2 * _0x271e72 + _0xf066fb * _0x43d245 * _0x271e72 + _0x1d89a2 * _0x250d49['w'] : _0x4e2a5d['w'] = _0x1e2c16['w'];
        }
        [_0x6027f5(0x331)](_0x170855, _0x44fed2, _0x1504ed, _0x3bcebb, _0x2d6905, _0x1d5752, _0x4c3186) {
            var _0x37f8cf = _0x6027f5;
            for (var _0x34384b = 0x0, _0xf89f69 = _0x170855['count']; _0x34384b < _0xf89f69; _0x34384b++) {
                var _0x352aba, _0x33eb81 = _0x170855[_0x37f8cf(0x2d5)](_0x34384b), _0x1f231c = _0x33eb81[_0x37f8cf(0x2cc)], _0x893aea = _0x33eb81['_keyFrames'], _0x801d5c = _0x893aea[_0x37f8cf(0x205)], _0x2d5112 = _0x1504ed[_0x34384b];
                if (!_0x4c3186 || _0x4c3186[_0x37f8cf(0x332)](_0x33eb81['nodePath'])) {
                    if (_0x2d6905) {
                        for (-0x1 !== _0x2d5112 && _0x44fed2 < _0x893aea[_0x2d5112]['time'] && (_0x2d5112 = -0x1, _0x1504ed[_0x34384b] = _0x2d5112), _0x352aba = _0x2d5112 + 0x1; _0x352aba < _0x801d5c && !(_0x893aea[_0x352aba][_0x37f8cf(0x273)] > _0x44fed2);)
                            _0x2d5112++, _0x352aba++, _0x1504ed[_0x34384b] = _0x2d5112;
                    } else {
                        for ((_0x352aba = _0x2d5112 + 0x1) !== _0x801d5c && _0x44fed2 > _0x893aea[_0x352aba][_0x37f8cf(0x273)] && (_0x2d5112 = _0x801d5c - 0x1, _0x1504ed[_0x34384b] = _0x2d5112), _0x352aba = _0x2d5112 + 0x1; _0x2d5112 > -0x1 && !(_0x893aea[_0x2d5112][_0x37f8cf(0x273)] < _0x44fed2);)
                            _0x2d5112--, _0x352aba--, _0x1504ed[_0x34384b] = _0x2d5112;
                    }
                    var _0x410479 = _0x352aba === _0x801d5c;
                    switch (_0x1f231c) {
                    case 0x0:
                        if (-0x1 !== _0x2d5112) {
                            var _0x3eb2d6 = _0x893aea[_0x2d5112];
                            if (_0x410479)
                                _0x1d5752[_0x34384b] = _0x3eb2d6[_0x37f8cf(0x2a1)];
                            else {
                                var _0xdac0c5, _0x4153ac = _0x893aea[_0x352aba], _0x55d0b8 = _0x4153ac[_0x37f8cf(0x273)] - _0x3eb2d6['time'];
                                _0xdac0c5 = 0x0 !== _0x55d0b8 ? (_0x44fed2 - _0x3eb2d6['time']) / _0x55d0b8 : 0x0, _0x1d5752[_0x34384b] = this[_0x37f8cf(0x32d)](_0x3eb2d6, _0x4153ac, _0xdac0c5, _0x55d0b8);
                            }
                        } else
                            _0x1d5752[_0x34384b] = _0x893aea[0x0][_0x37f8cf(0x2a1)];
                        _0x3bcebb && (_0x1d5752[_0x34384b] = _0x1d5752[_0x34384b] - _0x893aea[0x0][_0x37f8cf(0x2a1)]);
                        break;
                    case 0x1:
                    case 0x4:
                        var _0x30896c = _0x1d5752[_0x34384b];
                        if (this[_0x37f8cf(0x333)](_0x893aea, _0x2d5112, _0x410479, _0x44fed2, _0x30896c), _0x3bcebb) {
                            var _0x292240 = _0x893aea[0x0][_0x37f8cf(0x2a1)];
                            _0x30896c['x'] -= _0x292240['x'], _0x30896c['y'] -= _0x292240['y'], _0x30896c['z'] -= _0x292240['z'];
                        }
                        break;
                    case 0x2:
                        var _0x5708b4 = _0x1d5752[_0x34384b];
                        if (this['_evaluateFrameNodeQuaternionDatasRealTime'](_0x893aea, _0x2d5112, _0x410479, _0x44fed2, _0x5708b4), _0x3bcebb) {
                            var _0x3cba28 = _0x1120e5[_0x37f8cf(0x334)], _0x3abea5 = _0x893aea[0x0][_0x37f8cf(0x2a1)];
                            _0x3acd08[_0x37f8cf(0x2fd)](_0x3abea5, _0x3cba28), _0x528999[_0x37f8cf(0x27b)](_0x3cba28, _0x5708b4, _0x5708b4);
                        }
                        break;
                    case 0x3:
                        _0x30896c = _0x1d5752[_0x34384b], this[_0x37f8cf(0x333)](_0x893aea, _0x2d5112, _0x410479, _0x44fed2, _0x30896c), _0x3bcebb && (_0x292240 = _0x893aea[0x0][_0x37f8cf(0x2a1)], _0x30896c['x'] /= _0x292240['x'], _0x30896c['y'] /= _0x292240['y'], _0x30896c['z'] /= _0x292240['z']);
                        break;
                    default:
                        throw _0x37f8cf(0x335);
                    }
                }
            }
        }
        [_0x6027f5(0x336)](_0x5b1d69, _0x48cfcd, _0x2c4689, _0x13c672) {
            var _0x3481f1 = _0x6027f5;
            _0x387b86[_0x3481f1(0x303)]['instance'][_0x3481f1(0x337)](_0x5b1d69['_nativeObj'], _0x48cfcd, _0x2c4689, _0x13c672);
        }
        [_0x6027f5(0x333)](_0x4a9c5b, _0x409a30, _0x40bbb6, _0xe944e3, _0x1c92b2) {
            var _0x5eab1a = _0x6027f5;
            if (-0x1 !== _0x409a30) {
                var _0xb17a67 = _0x4a9c5b[_0x409a30];
                if (_0x40bbb6) {
                    var _0x45ae84 = _0xb17a67['value'];
                    _0x1c92b2['x'] = _0x45ae84['x'], _0x1c92b2['y'] = _0x45ae84['y'], _0x1c92b2['z'] = _0x45ae84['z'];
                } else {
                    var _0x5ac5f3, _0x1f5475 = _0x4a9c5b[_0x409a30 + 0x1], _0x489af1 = _0xb17a67[_0x5eab1a(0x273)], _0x40ffb5 = _0x1f5475[_0x5eab1a(0x273)] - _0x489af1;
                    _0x5ac5f3 = 0x0 !== _0x40ffb5 ? (_0xe944e3 - _0x489af1) / _0x40ffb5 : 0x0, this['_hermiteInterpolateVector3'](_0xb17a67, _0x1f5475, _0x5ac5f3, _0x40ffb5, _0x1c92b2);
                }
            } else {
                var _0x130848 = _0x4a9c5b[0x0]['value'];
                _0x1c92b2['x'] = _0x130848['x'], _0x1c92b2['y'] = _0x130848['y'], _0x1c92b2['z'] = _0x130848['z'];
            }
        }
        [_0x6027f5(0x338)](_0x30a2c1, _0x565726, _0x2277f8, _0x4ec97e, _0x382c8a) {
            var _0x47ca3a = _0x6027f5;
            if (-0x1 !== _0x565726) {
                var _0x350cb0 = _0x30a2c1[_0x565726];
                if (_0x2277f8) {
                    var _0x4ab8fc = _0x350cb0[_0x47ca3a(0x2a1)];
                    _0x382c8a['x'] = _0x4ab8fc['x'], _0x382c8a['y'] = _0x4ab8fc['y'], _0x382c8a['z'] = _0x4ab8fc['z'], _0x382c8a['w'] = _0x4ab8fc['w'];
                } else {
                    var _0x473c1b, _0x3f805b = _0x30a2c1[_0x565726 + 0x1], _0x12c85e = _0x350cb0[_0x47ca3a(0x273)], _0x39af0a = _0x3f805b[_0x47ca3a(0x273)] - _0x12c85e;
                    _0x473c1b = 0x0 !== _0x39af0a ? (_0x4ec97e - _0x12c85e) / _0x39af0a : 0x0, this[_0x47ca3a(0x330)](_0x350cb0, _0x3f805b, _0x473c1b, _0x39af0a, _0x382c8a);
                }
            } else {
                var _0x1cf315 = _0x30a2c1[0x0][_0x47ca3a(0x2a1)];
                _0x382c8a['x'] = _0x1cf315['x'], _0x382c8a['y'] = _0x1cf315['y'], _0x382c8a['z'] = _0x1cf315['z'], _0x382c8a['w'] = _0x1cf315['w'];
            }
        }
        [_0x6027f5(0x339)](_0x3fb8f2) {
            var _0x93978c = _0x6027f5;
            for (var _0xcc222d, _0x58abef = 0x0, _0x274aca = this[_0x93978c(0x325)][_0x93978c(0x205)] - 0x1; _0x58abef <= _0x274aca;) {
                _0xcc222d = Math[_0x93978c(0x24e)]((_0x58abef + _0x274aca) / 0x2);
                var _0x12c735 = this[_0x93978c(0x325)][_0xcc222d][_0x93978c(0x273)];
                if (_0x12c735 == _0x3fb8f2)
                    return _0xcc222d;
                _0x12c735 > _0x3fb8f2 ? _0x274aca = _0xcc222d - 0x1 : _0x58abef = _0xcc222d + 0x1;
            }
            return _0x58abef;
        }
        [_0x6027f5(0x2c7)](_0x29ce01) {
            var _0x485a19 = _0x6027f5, _0xe8f61 = this[_0x485a19(0x339)](_0x29ce01['time']);
            this[_0x485a19(0x325)][_0x485a19(0x33a)](_0xe8f61, 0x0, _0x29ce01);
        }
        ['_disposeResource']() {
            var _0x2f46d0 = _0x6027f5;
            this[_0x2f46d0(0x2be)] = null, this[_0x2f46d0(0x2bf)] = null;
        }
    }
    _0x1120e5[_0x6027f5(0x32b)] = _0x6027f5(0x32b), _0x1120e5[_0x6027f5(0x334)] = new _0x528999();
    class _0x363193 {
        constructor() {
            var _0x525021 = _0x6027f5;
            this[_0x525021(0x33b)] = null;
        }
        get [_0x6027f5(0x33c)]() {
            var _0x494928 = _0x6027f5;
            return this[_0x494928(0x33d)];
        }
        get [_0x6027f5(0x32c)]() {
            var _0x3dac66 = _0x6027f5;
            return this[_0x3dac66(0x2b8)];
        }
        get [_0x6027f5(0x33e)]() {
            var _0x313d62 = _0x6027f5;
            return this[_0x313d62(0x33b)];
        }
        [_0x6027f5(0x33f)](_0x187b80, _0x593df6) {
            var _0x4a76b1 = _0x6027f5;
            this[_0x4a76b1(0x340)] = !0x1, this[_0x4a76b1(0x341)] = _0x187b80, this[_0x4a76b1(0x342)] = _0x187b80, this['_playEventIndex'] = 0x0, this[_0x4a76b1(0x343)] = !0x0, this[_0x4a76b1(0x33d)] = this[_0x4a76b1(0x342)] / _0x593df6;
            var _0xe45600 = this[_0x4a76b1(0x33d)] % 0x1;
            this[_0x4a76b1(0x344)] = _0xe45600 < 0x0 ? _0xe45600 + 0x1 : _0xe45600;
        }
        [_0x6027f5(0x345)](_0x448995) {
            var _0x254e03 = _0x6027f5;
            _0x448995['_finish'] = this[_0x254e03(0x340)], _0x448995[_0x254e03(0x341)] = this[_0x254e03(0x341)], _0x448995[_0x254e03(0x342)] = this['_elapsedTime'], _0x448995[_0x254e03(0x33d)] = this[_0x254e03(0x33d)], _0x448995[_0x254e03(0x344)] = this[_0x254e03(0x344)], _0x448995['_playEventIndex'] = this[_0x254e03(0x346)], _0x448995[_0x254e03(0x343)] = this[_0x254e03(0x343)];
        }
    }
    class _0x5059f4 {
        constructor(_0x5dd13b) {
            var _0x224ac4 = _0x6027f5;
            this[_0x224ac4(0x347)] = 0x0, this[_0x224ac4(0x348)] = -0x1, this[_0x224ac4(0x349)] = -0x1, this[_0x224ac4(0x34a)] = 0x0, this[_0x224ac4(0x34b)] = 0x0, this[_0x224ac4(0x34c)] = [], this[_0x224ac4(0x34d)] = {}, this[_0x224ac4(0x34e)] = [], this['_destCrossClipNodeIndices'] = [], this[_0x224ac4(0x34f)] = {}, this[_0x224ac4(0x350)] = [], this[_0x224ac4(0x351)] = new _0x363193(), this['_crossPlayStateInfo'] = new _0x363193(), this[_0x224ac4(0x352)] = _0x5059f4[_0x224ac4(0x353)], this[_0x224ac4(0x354)] = 0x1, this[_0x224ac4(0x355)] = !0x0, this[_0x224ac4(0x2b7)] = _0x5dd13b;
        }
        get [_0x6027f5(0x356)]() {
            var _0x50f43a = _0x6027f5;
            return this[_0x50f43a(0x357)];
        }
        set [_0x6027f5(0x356)](_0xc0502a) {
            var _0x358e43 = _0x6027f5;
            this[_0x358e43(0x357)] = _0xc0502a, this[_0x358e43(0x34f)][_0xc0502a[_0x358e43(0x2b7)]] = _0xc0502a;
        }
        get [_0x6027f5(0x358)]() {
            var _0x1e8048 = _0x6027f5;
            return this[_0x1e8048(0x359)];
        }
        set [_0x6027f5(0x358)](_0x5ee612) {
            var _0x579625 = _0x6027f5;
            this[_0x579625(0x359)] = _0x5ee612;
        }
        [_0x6027f5(0x35a)](_0x554b2a, _0x46e335, _0x484b31, _0x196acd) {
            var _0x23efd3 = _0x6027f5, _0x1c8d8a = _0x196acd['_clip'], _0x1a0ea3 = _0x554b2a[_0x484b31];
            if (_0x554b2a[_0x23efd3(0x33a)](_0x484b31, 0x1), delete _0x46e335[_0x196acd[_0x23efd3(0x2b7)]], this[_0x23efd3(0x35b)]) {
                var _0x47cb6e = _0x1c8d8a[_0x23efd3(0x2be)], _0x415fc8 = _0x1a0ea3['_nodeOwners'];
                _0x1c8d8a[_0x23efd3(0x35c)]();
                for (var _0x533c92 = 0x0, _0xa6c958 = _0x47cb6e[_0x23efd3(0x2b3)]; _0x533c92 < _0xa6c958; _0x533c92++)
                    this['_animator'][_0x23efd3(0x35d)](_0x415fc8, _0x47cb6e[_0x23efd3(0x2d5)](_0x533c92));
            }
        }
        [_0x6027f5(0x35e)]() {
            var _0x5b2dbb = _0x6027f5;
            return this[_0x5b2dbb(0x347)];
        }
        [_0x6027f5(0x35f)](_0xae9ef6 = 0x1) {
            var _0x503605 = _0x6027f5;
            for (var _0x3120e1 = 0x0, _0x378fb0 = this[_0x503605(0x350)][_0x503605(0x205)]; _0x3120e1 < _0x378fb0; _0x3120e1++)
                this[_0x503605(0x350)][_0x3120e1]['_addReference'](_0xae9ef6);
            this[_0x503605(0x347)] += _0xae9ef6;
        }
        [_0x6027f5(0x35c)](_0x180c23 = 0x1) {
            var _0x6f1d7 = _0x6027f5;
            for (var _0x26226b = 0x0, _0x5400b6 = this[_0x6f1d7(0x350)][_0x6f1d7(0x205)]; _0x26226b < _0x5400b6; _0x26226b++)
                this[_0x6f1d7(0x350)][_0x26226b][_0x6f1d7(0x35c)](_0x180c23);
            this['_referenceCount'] -= _0x180c23;
        }
        ['_clearReference']() {
            var _0x593168 = _0x6027f5;
            this[_0x593168(0x35c)](-this[_0x593168(0x347)]);
        }
        ['getCurrentPlayState']() {
            var _0x4bde58 = _0x6027f5;
            return this[_0x4bde58(0x351)];
        }
        ['getAnimatorState'](_0x52a9de) {
            var _0x4314d8 = _0x6027f5, _0x5f1159 = this[_0x4314d8(0x34f)][_0x52a9de];
            return _0x5f1159 || null;
        }
        [_0x6027f5(0x360)](_0x387bd6) {
            var _0x766b18 = _0x6027f5, _0x43bd75 = _0x387bd6['name'];
            if (this[_0x766b18(0x34f)][_0x43bd75])
                throw _0x766b18(0x361);
            this[_0x766b18(0x34f)][_0x43bd75] = _0x387bd6, this[_0x766b18(0x350)][_0x766b18(0x2ac)](_0x387bd6), this[_0x766b18(0x35b)] && (_0x387bd6['_clip']['_addReference'](), this['_animator'][_0x766b18(0x362)](_0x387bd6));
        }
        [_0x6027f5(0x363)](_0x425f4f) {
            for (var _0x4c5a32 = this['_states'], _0xa4b308 = -0x1, _0x76e4c9 = 0x0, _0x105ba2 = _0x4c5a32['length']; _0x76e4c9 < _0x105ba2; _0x76e4c9++)
                if (_0x4c5a32[_0x76e4c9] === _0x425f4f) {
                    _0xa4b308 = _0x76e4c9;
                    break;
                }
            -0x1 !== _0xa4b308 && this['_removeClip'](_0x4c5a32, this['_statesMap'], _0xa4b308, _0x425f4f);
        }
        [_0x6027f5(0x364)]() {
            var _0x5f10ab = _0x6027f5;
            this[_0x5f10ab(0x365)](), this['_statesMap'] = null, this[_0x5f10ab(0x350)] = [], this['_playStateInfo'] = null, this[_0x5f10ab(0x366)] = null, this[_0x5f10ab(0x357)] = null;
        }
        [_0x6027f5(0x1fc)](_0x3edc05) {
            var _0x10eced = _0x6027f5, _0x6b96f4 = _0x3edc05;
            _0x6b96f4['name'] = this['name'], _0x6b96f4['blendingMode'] = this[_0x10eced(0x352)], _0x6b96f4[_0x10eced(0x354)] = this[_0x10eced(0x354)], _0x6b96f4[_0x10eced(0x355)] = this[_0x10eced(0x355)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x48f6d9 = _0x6027f5, _0x3e7d51 = new _0x5059f4(this[_0x48f6d9(0x2b7)]);
            return this[_0x48f6d9(0x1fc)](_0x3e7d51), _0x3e7d51;
        }
    }
    _0x5059f4['BLENDINGMODE_OVERRIDE'] = 0x0, _0x5059f4['BLENDINGMODE_ADDTIVE'] = 0x1;
    class _0x176511 {
        constructor() {
            var _0x3dfba9 = _0x6027f5;
            this['_referenceCount'] = 0x0, this['_clip'] = null, this[_0x3dfba9(0x367)] = [], this[_0x3dfba9(0x368)] = null, this[_0x3dfba9(0x369)] = [], this[_0x3dfba9(0x36a)] = null, this[_0x3dfba9(0x36b)] = 0x1, this['clipStart'] = 0x0, this[_0x3dfba9(0x36c)] = 0x1;
        }
        get [_0x6027f5(0x36d)]() {
            var _0x547dec = _0x6027f5;
            return this[_0x547dec(0x36e)];
        }
        set [_0x6027f5(0x36d)](_0x3cd1f6) {
            var _0x2d0be0 = _0x6027f5;
            if (this[_0x2d0be0(0x36e)] !== _0x3cd1f6) {
                if (this['_clip'] && this[_0x2d0be0(0x347)] > 0x0 && this[_0x2d0be0(0x36e)]['_removeReference'](this[_0x2d0be0(0x347)]), _0x3cd1f6) {
                    var _0x2b805b = this[_0x2d0be0(0x369)], _0xf0d2bd = _0x3cd1f6[_0x2d0be0(0x2be)], _0x1f55bf = _0xf0d2bd['count'];
                    this[_0x2d0be0(0x368)] = new Int16Array(_0x1f55bf), this['_resetFrameIndices'](), this[_0x2d0be0(0x347)] > 0x0 && _0x3cd1f6[_0x2d0be0(0x35f)](this[_0x2d0be0(0x347)]), this['_realtimeDatas']['length'] = _0x1f55bf;
                    for (var _0x3f88ba = 0x0; _0x3f88ba < _0x1f55bf; _0x3f88ba++)
                        switch (_0xf0d2bd[_0x2d0be0(0x2d5)](_0x3f88ba)[_0x2d0be0(0x2cc)]) {
                        case 0x0:
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x2b805b[_0x3f88ba] = new _0x3697cd();
                            break;
                        case 0x2:
                            _0x2b805b[_0x3f88ba] = new _0x528999();
                            break;
                        default:
                            throw _0x2d0be0(0x2cf);
                        }
                }
                this[_0x2d0be0(0x36e)] = _0x3cd1f6;
            }
        }
        [_0x6027f5(0x35e)]() {
            var _0x5b5ea1 = _0x6027f5;
            return this[_0x5b5ea1(0x347)];
        }
        [_0x6027f5(0x35f)](_0x333812 = 0x1) {
            var _0x4bd23c = _0x6027f5;
            this['_clip'] && this['_clip']['_addReference'](_0x333812), this[_0x4bd23c(0x347)] += _0x333812;
        }
        ['_removeReference'](_0x4b863b = 0x1) {
            var _0x3ffea6 = _0x6027f5;
            this[_0x3ffea6(0x36e)] && this[_0x3ffea6(0x36e)]['_removeReference'](_0x4b863b), this['_referenceCount'] -= _0x4b863b;
        }
        [_0x6027f5(0x365)]() {
            var _0x976448 = _0x6027f5;
            this[_0x976448(0x35c)](-this[_0x976448(0x347)]);
        }
        [_0x6027f5(0x36f)]() {
            var _0x570953 = _0x6027f5;
            for (var _0x5f5d2a = 0x0, _0x33118b = this[_0x570953(0x368)][_0x570953(0x205)]; _0x5f5d2a < _0x33118b; _0x5f5d2a++)
                this['_currentFrameIndices'][_0x5f5d2a] = -0x1;
        }
        [_0x6027f5(0x370)](_0x21a92d) {
            var _0x12b2e0 = _0x6027f5, _0xb17dec = new _0x21a92d();
            return this[_0x12b2e0(0x36a)] = this[_0x12b2e0(0x36a)] || [], this[_0x12b2e0(0x36a)][_0x12b2e0(0x2ac)](_0xb17dec), _0xb17dec;
        }
        [_0x6027f5(0x371)](_0x47e24e) {
            var _0xaabb81 = _0x6027f5;
            if (this[_0xaabb81(0x36a)])
                for (var _0x4179df = 0x0, _0x584031 = this['_scripts'][_0xaabb81(0x205)]; _0x4179df < _0x584031; _0x4179df++) {
                    var _0x240b3c = this['_scripts'][_0x4179df];
                    if (_0x240b3c instanceof _0x47e24e)
                        return _0x240b3c;
                }
            return null;
        }
        [_0x6027f5(0x372)](_0x164832) {
            var _0x510860 = _0x6027f5, _0x18115a = null;
            if (this[_0x510860(0x36a)])
                for (var _0x222867 = 0x0, _0x250cb9 = this[_0x510860(0x36a)][_0x510860(0x205)]; _0x222867 < _0x250cb9; _0x222867++) {
                    var _0x18b925 = this[_0x510860(0x36a)][_0x222867];
                    _0x18b925 instanceof _0x164832 && (_0x18115a = _0x18115a || [])[_0x510860(0x2ac)](_0x18b925);
                }
            return _0x18115a;
        }
        [_0x6027f5(0x1fc)](_0x257dc3) {
            var _0x5d60c6 = _0x6027f5, _0x4a6fd0 = _0x257dc3;
            _0x4a6fd0[_0x5d60c6(0x2b7)] = this[_0x5d60c6(0x2b7)], _0x4a6fd0[_0x5d60c6(0x36b)] = this[_0x5d60c6(0x36b)], _0x4a6fd0['clipStart'] = this[_0x5d60c6(0x373)], _0x4a6fd0['clipEnd'] = this[_0x5d60c6(0x36c)], _0x4a6fd0['clip'] = this[_0x5d60c6(0x36e)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x32650c = _0x6027f5, _0xf2ba2a = new _0x176511();
            return this[_0x32650c(0x1fc)](_0xf2ba2a), _0xf2ba2a;
        }
    }
    class _0x3a8900 {
        constructor() {
            var _0x109ffa = _0x6027f5;
            this[_0x109ffa(0x374)] = -0x1, this[_0x109ffa(0x375)] = 0x0, this[_0x109ffa(0x376)] = -0x1, this[_0x109ffa(0x2cc)] = -0x1, this[_0x109ffa(0x2c4)] = null, this[_0x109ffa(0x2c3)] = null, this[_0x109ffa(0x377)] = null, this['defaultValue'] = null, this['value'] = null, this['crossFixedValue'] = null;
        }
        [_0x6027f5(0x378)]() {
            var _0x4b622d = _0x6027f5;
            if (this[_0x4b622d(0x2c3)])
                switch (this[_0x4b622d(0x2cc)]) {
                case 0x0:
                    this[_0x4b622d(0x379)] = this[_0x4b622d(0x2a1)];
                    break;
                case 0x1:
                case 0x3:
                case 0x4:
                case 0x2:
                    this[_0x4b622d(0x2a1)]['cloneTo'](this['crossFixedValue']);
                    break;
                default:
                    throw 'Animator:unknown\x20type.';
                }
        }
    }
    class _0x5ace57 {
        constructor(_0x63ceeb) {
            var _0x249d58 = _0x6027f5;
            this[_0x249d58(0x37a)] = {}, this[_0x249d58(0x37b)] = _0x63ceeb;
        }
        get [_0x6027f5(0x37c)]() {
            var _0x221e44 = _0x6027f5;
            return this[_0x221e44(0x37b)];
        }
        [_0x6027f5(0x332)](_0x1f9bdd) {
            var _0xb3adfe = _0x6027f5;
            return this[_0xb3adfe(0x37a)][_0x1f9bdd];
        }
        ['setTransformActive'](_0x1c2774, _0x21e713) {
            var _0x4d6db0 = _0x6027f5;
            this[_0x4d6db0(0x37a)][_0x1c2774] = _0x21e713;
        }
        [_0x6027f5(0x37d)]() {
            return this['_avatarPathMap'];
        }
    }
    class _0x493c7d extends _0x387b86[_0x6027f5(0x37e)] {
        constructor() {
            var _0x50668d = _0x6027f5;
            super(), this['_keyframeNodeOwners'] = [], this[_0x50668d(0x37f)] = {}, this['_linkAvatarSprites'] = [], this[_0x50668d(0x380)] = [], this['cullingMode'] = _0x493c7d['CULLINGMODE_CULLCOMPLETELY'], this[_0x50668d(0x381)] = [], this[_0x50668d(0x382)] = {}, this[_0x50668d(0x383)] = 0x1, this[_0x50668d(0x384)] = {}, this[_0x50668d(0x385)] = 0x0;
        }
        static ['_update'](_0x31d122) {
            var _0x2bcb58 = _0x6027f5;
            for (var _0x247843 = _0x31d122[_0x2bcb58(0x386)], _0x4bfc70 = _0x247843[_0x2bcb58(0x1fe)], _0x4f3e9e = 0x0, _0x124d6a = _0x247843[_0x2bcb58(0x205)]; _0x4f3e9e < _0x124d6a; _0x4f3e9e++) {
                var _0x3efdf6 = _0x4bfc70[_0x4f3e9e];
                _0x3efdf6 && _0x3efdf6[_0x2bcb58(0x387)] && _0x3efdf6[_0x2bcb58(0x388)]();
            }
        }
        get [_0x6027f5(0x36b)]() {
            return this['_speed'];
        }
        set [_0x6027f5(0x36b)](_0x277e7e) {
            var _0x53f646 = _0x6027f5;
            this[_0x53f646(0x383)] = _0x277e7e;
        }
        get [_0x6027f5(0x389)]() {
            var _0x2182a7 = _0x6027f5;
            return this[_0x2182a7(0x381)]['length'];
        }
        [_0x6027f5(0x38a)](_0x17eb1f) {
            var _0x252dad = _0x6027f5;
            for (var _0x24664e in _0x17eb1f) {
                for (var _0x1a395a = this[_0x252dad(0x38b)], _0x1d8ec5 = _0x17eb1f[_0x24664e], _0xc06023 = 0x0, _0xf24131 = _0x1d8ec5[_0x252dad(0x205)]; _0xc06023 < _0xf24131; _0xc06023++) {
                    var _0x5d6e9d = _0x1d8ec5[_0xc06023];
                    if ('' === _0x5d6e9d)
                        break;
                    if (!(_0x1a395a = _0x1a395a[_0x252dad(0x38c)](_0x5d6e9d)))
                        break;
                }
                _0x1a395a && this[_0x252dad(0x38d)](_0x24664e, _0x1a395a);
            }
        }
        [_0x6027f5(0x38e)](_0x24543a, _0x5cad1e, _0x352f6b) {
            var _0x5cb737 = _0x6027f5, _0x4479a9 = _0x5cad1e[_0x5cb737(0x2c1)], _0x5a50e9 = _0x5cad1e['fullPath'], _0xa0a4eb = this[_0x5cb737(0x384)][_0x5a50e9];
            if (_0xa0a4eb)
                _0xa0a4eb[_0x5cb737(0x375)]++, _0x24543a[_0x4479a9] = _0xa0a4eb;
            else {
                for (var _0x5c5938 = _0x352f6b, _0x43427c = 0x0, _0x2accd9 = _0x5cad1e['propertyCount']; _0x43427c < _0x2accd9 && (_0x5c5938 = _0x5c5938[_0x5cad1e[_0x5cb737(0x271)](_0x43427c)]); _0x43427c++);
                (_0xa0a4eb = this[_0x5cb737(0x384)][_0x5a50e9] = new _0x3a8900())[_0x5cb737(0x2c4)] = _0x5a50e9, _0xa0a4eb['indexInList'] = this[_0x5cb737(0x38f)][_0x5cb737(0x205)], _0xa0a4eb[_0x5cb737(0x375)] = 0x1, _0xa0a4eb['propertyOwner'] = _0x352f6b;
                var _0xb521a7 = _0x5cad1e['propertyCount'], _0x32d89b = [];
                for (_0x43427c = 0x0; _0x43427c < _0xb521a7; _0x43427c++)
                    _0x32d89b[_0x43427c] = _0x5cad1e['getPropertyByIndex'](_0x43427c);
                if (_0xa0a4eb[_0x5cb737(0x377)] = _0x32d89b, _0xa0a4eb[_0x5cb737(0x2cc)] = _0x5cad1e[_0x5cb737(0x2cc)], _0x5c5938) {
                    if (0x0 === _0x5cad1e['type'])
                        _0xa0a4eb[_0x5cb737(0x390)] = _0x5c5938;
                    else {
                        var _0x332e4f = new _0x5c5938[(_0x5cb737(0x391))]();
                        _0x5c5938[_0x5cb737(0x1fc)](_0x332e4f), _0xa0a4eb[_0x5cb737(0x390)] = _0x332e4f, _0xa0a4eb[_0x5cb737(0x2a1)] = new _0x5c5938[(_0x5cb737(0x391))](), _0xa0a4eb[_0x5cb737(0x379)] = new _0x5c5938['constructor']();
                    }
                }
                this[_0x5cb737(0x38f)]['push'](_0xa0a4eb), _0x24543a[_0x4479a9] = _0xa0a4eb;
            }
        }
        ['_removeKeyframeNodeOwner'](_0x3b8a95, _0x520a3e) {
            var _0x474932 = _0x6027f5, _0xc223e1 = _0x520a3e[_0x474932(0x2c4)], _0x1eab3e = this[_0x474932(0x384)][_0xc223e1];
            _0x1eab3e && (_0x1eab3e[_0x474932(0x375)]--, 0x0 === _0x1eab3e[_0x474932(0x375)] && (delete this[_0x474932(0x384)][_0xc223e1], this[_0x474932(0x38f)][_0x474932(0x33a)](this[_0x474932(0x38f)][_0x474932(0x2f9)](_0x1eab3e), 0x1)), _0x3b8a95[_0x520a3e[_0x474932(0x2c1)]] = null);
        }
        [_0x6027f5(0x362)](_0x4a2314) {
            var _0x599fae = _0x6027f5, _0x1446ca = _0x4a2314[_0x599fae(0x36e)][_0x599fae(0x2be)], _0x12071f = _0x1446ca['count'], _0x354075 = _0x4a2314['_nodeOwners'];
            _0x354075[_0x599fae(0x205)] = _0x12071f;
            for (var _0x2cc4d3 = 0x0; _0x2cc4d3 < _0x12071f; _0x2cc4d3++) {
                for (var _0x525c77 = _0x1446ca[_0x599fae(0x2d5)](_0x2cc4d3), _0x44b08e = this[_0x599fae(0x392)] ? this[_0x599fae(0x393)][this[_0x599fae(0x392)][_0x599fae(0x394)][_0x599fae(0x2b7)]] : this[_0x599fae(0x38b)], _0x54b264 = 0x0, _0x4ae21c = _0x525c77[_0x599fae(0x395)]; _0x54b264 < _0x4ae21c; _0x54b264++) {
                    var _0x300ad0 = _0x525c77['getOwnerPathByIndex'](_0x54b264);
                    if ('' === _0x300ad0)
                        break;
                    if (!(_0x44b08e = _0x44b08e[_0x599fae(0x38c)](_0x300ad0)))
                        break;
                }
                if (_0x44b08e) {
                    var _0x357002 = _0x525c77[_0x599fae(0x2c3)];
                    _0x357002 && (_0x44b08e = _0x44b08e[_0x357002]), _0x44b08e && this[_0x599fae(0x38e)](_0x354075, _0x525c77, _0x44b08e);
                }
            }
        }
        [_0x6027f5(0x396)](_0x46e1f1, _0x3c3760, _0x58b52e, _0x252e23) {
            var _0x3a9bb2 = _0x6027f5, _0x3b060c = _0x46e1f1['_clip']['_duration'] * (_0x46e1f1['clipEnd'] - _0x46e1f1[_0x3a9bb2(0x373)]), _0x266c23 = _0x3c3760[_0x3a9bb2(0x342)], _0x31dabe = _0x266c23 + _0x58b52e;
            _0x3c3760[_0x3a9bb2(0x397)] = _0x266c23, _0x3c3760[_0x3a9bb2(0x342)] = _0x31dabe;
            var _0x496666 = _0x31dabe / _0x3b060c;
            _0x3c3760[_0x3a9bb2(0x33d)] = _0x496666;
            var _0x2eb8ee = _0x496666 % 0x1;
            _0x3c3760[_0x3a9bb2(0x344)] = _0x2eb8ee < 0x0 ? _0x2eb8ee + 0x1 : _0x2eb8ee, _0x3c3760['_duration'] = _0x3b060c;
            var _0x51e8dd = _0x46e1f1[_0x3a9bb2(0x36a)];
            if (!_0x252e23 && _0x31dabe >= _0x3b060c) {
                if (_0x3c3760[_0x3a9bb2(0x340)] = !0x0, _0x3c3760[_0x3a9bb2(0x342)] = _0x3b060c, _0x3c3760[_0x3a9bb2(0x344)] = 0x1, _0x51e8dd) {
                    for (var _0x20897f = 0x0, _0x3a2dec = _0x51e8dd[_0x3a9bb2(0x205)]; _0x20897f < _0x3a2dec; _0x20897f++)
                        _0x51e8dd[_0x20897f][_0x3a9bb2(0x398)]();
                }
            } else {
                if (_0x51e8dd) {
                    for (_0x20897f = 0x0, _0x3a2dec = _0x51e8dd[_0x3a9bb2(0x205)]; _0x20897f < _0x3a2dec; _0x20897f++)
                        _0x51e8dd[_0x20897f]['onStateUpdate']();
                }
            }
        }
        ['_eventScript'](_0x16b839, _0xcf61bf, _0x4189f3, _0x39810e, _0x3c1c4f) {
            var _0x4f74bc = _0x6027f5;
            if (_0x3c1c4f)
                for (var _0x5f462e = _0xcf61bf['length']; _0x4189f3 < _0x5f462e; _0x4189f3++) {
                    var _0x3c1963 = _0xcf61bf[_0x4189f3];
                    if (!(_0x3c1963[_0x4f74bc(0x273)] <= _0x39810e))
                        break;
                    for (var _0x56877a = 0x0, _0x505dde = _0x16b839[_0x4f74bc(0x205)]; _0x56877a < _0x505dde; _0x56877a++) {
                        var _0xa0696f = _0x16b839[_0x56877a], _0x98556e = _0xa0696f[_0x3c1963[_0x4f74bc(0x2d3)]];
                        _0x98556e && _0x98556e[_0x4f74bc(0x399)](_0xa0696f, _0x3c1963[_0x4f74bc(0x2c6)]);
                    }
                }
            else {
                for (; _0x4189f3 >= 0x0 && (_0x3c1963 = _0xcf61bf[_0x4189f3])[_0x4f74bc(0x273)] >= _0x39810e; _0x4189f3--)
                    for (_0x56877a = 0x0, _0x505dde = _0x16b839[_0x4f74bc(0x205)]; _0x56877a < _0x505dde; _0x56877a++)
                        (_0x98556e = (_0xa0696f = _0x16b839[_0x56877a])[_0x3c1963['eventName']]) && _0x98556e['apply'](_0xa0696f, _0x3c1963[_0x4f74bc(0x2c6)]);
            }
            return _0x4189f3;
        }
        [_0x6027f5(0x39a)](_0xbe4f9, _0x29e28c) {
            var _0x20691f = _0x6027f5, _0x296fcf = this[_0x20691f(0x38b)]['_scripts'];
            if (_0x296fcf) {
                var _0x2c1300 = _0xbe4f9[_0x20691f(0x36e)], _0x2e4358 = _0x2c1300[_0x20691f(0x325)], _0x393da8 = _0x2c1300[_0x20691f(0x2b8)], _0x14e993 = _0x29e28c['_elapsedTime'], _0xf2ab17 = _0x14e993 % _0x393da8, _0x17c83a = Math['abs'](Math['floor'](_0x14e993 / _0x393da8) - Math[_0x20691f(0x24e)](_0x29e28c[_0x20691f(0x397)] / _0x393da8)), _0x5510a5 = _0x29e28c[_0x20691f(0x342)] >= _0x29e28c[_0x20691f(0x397)];
                _0x29e28c['_lastIsFront'] !== _0x5510a5 && (_0x5510a5 ? _0x29e28c[_0x20691f(0x346)]++ : _0x29e28c['_playEventIndex']--, _0x29e28c[_0x20691f(0x343)] = _0x5510a5);
                var _0x5ee28c = _0x29e28c[_0x20691f(0x346)];
                if (_0x5510a5) {
                    var _0x59b438 = this[_0x20691f(0x39b)](_0x296fcf, _0x2e4358, _0x29e28c[_0x20691f(0x346)], _0x17c83a > 0x0 ? _0x393da8 : _0xf2ab17, !0x0);
                    _0x5ee28c === _0x29e28c[_0x20691f(0x346)] && (_0x29e28c[_0x20691f(0x346)] = _0x59b438);
                    for (var _0x42b234 = 0x0, _0x3a7fdb = _0x17c83a - 0x1; _0x42b234 < _0x3a7fdb; _0x42b234++)
                        this[_0x20691f(0x39b)](_0x296fcf, _0x2e4358, 0x0, _0x393da8, !0x0);
                    _0x17c83a > 0x0 && _0xf2ab17 > 0x0 && (_0x29e28c['_playEventIndex'] = this[_0x20691f(0x39b)](_0x296fcf, _0x2e4358, 0x0, _0xf2ab17, !0x0));
                } else {
                    _0x59b438 = this[_0x20691f(0x39b)](_0x296fcf, _0x2e4358, _0x29e28c['_playEventIndex'], _0x17c83a > 0x0 ? 0x0 : _0xf2ab17, !0x1), _0x5ee28c === _0x29e28c[_0x20691f(0x346)] && (_0x29e28c[_0x20691f(0x346)] = _0x59b438);
                    var _0x4558d0 = _0x2e4358[_0x20691f(0x205)] - 0x1;
                    for (_0x42b234 = 0x0, _0x3a7fdb = _0x17c83a - 0x1; _0x42b234 < _0x3a7fdb; _0x42b234++)
                        this[_0x20691f(0x39b)](_0x296fcf, _0x2e4358, _0x4558d0, 0x0, !0x1);
                    _0x17c83a > 0x0 && _0xf2ab17 > 0x0 && (_0x29e28c[_0x20691f(0x346)] = this['_eventScript'](_0x296fcf, _0x2e4358, _0x4558d0, _0xf2ab17, !0x1));
                }
            }
        }
        [_0x6027f5(0x39c)](_0x5df5ff, _0x44674b, _0x1d0144, _0x4a3ce1 = null) {
            var _0xcc4910 = _0x6027f5, _0x256db2 = _0x5df5ff[_0xcc4910(0x36e)], _0x7e1d3a = _0x256db2[_0xcc4910(0x2b8)], _0x3d7626 = _0x5df5ff[_0xcc4910(0x373)] * _0x7e1d3a + _0x1d0144[_0xcc4910(0x344)] * _0x1d0144[_0xcc4910(0x2b8)], _0x76fc82 = _0x5df5ff[_0xcc4910(0x368)], _0x1dd55b = _0x1d0144['_elapsedTime'] > _0x1d0144[_0xcc4910(0x397)];
            _0x256db2['_evaluateClipDatasRealTime'](_0x256db2[_0xcc4910(0x2be)], _0x3d7626, _0x76fc82, _0x44674b, _0x1dd55b, _0x5df5ff[_0xcc4910(0x369)], _0x4a3ce1);
        }
        [_0x6027f5(0x39d)](_0x663e40, _0x45a7a0, _0x56d9eb, _0x22ee1a, _0xc2673d, _0x5b6827, _0x5c0f73) {
            var _0x4dcd6c = _0x6027f5;
            if (_0x56d9eb['updateMark'] === this[_0x4dcd6c(0x385)]) {
                if (_0x22ee1a)
                    _0x663e40[_0x45a7a0] += _0xc2673d * _0x5c0f73;
                else {
                    var _0x3a896e = _0x663e40[_0x45a7a0];
                    _0x663e40[_0x45a7a0] = _0x3a896e + _0xc2673d * (_0x5c0f73 - _0x3a896e);
                }
            } else {
                if (_0x5b6827)
                    _0x663e40[_0x45a7a0] = _0x22ee1a ? _0x56d9eb[_0x4dcd6c(0x390)] + _0x5c0f73 : _0x5c0f73;
                else {
                    if (_0x22ee1a)
                        _0x663e40[_0x45a7a0] = _0x56d9eb[_0x4dcd6c(0x390)] + _0xc2673d * _0x5c0f73;
                    else {
                        var _0x4d525f = _0x56d9eb['defaultValue'];
                        _0x663e40[_0x45a7a0] = _0x4d525f + _0xc2673d * (_0x5c0f73 - _0x4d525f);
                    }
                }
            }
        }
        [_0x6027f5(0x39e)](_0x20b2bc, _0x2e7178, _0x8c3aee, _0x4430ee, _0x1ed377, _0x4257b7) {
            var _0x59a0c4 = _0x6027f5;
            if (_0x20b2bc[_0x59a0c4(0x376)] === this[_0x59a0c4(0x385)]) {
                if (_0x2e7178)
                    _0x4257b7['x'] += _0x8c3aee * _0x1ed377['x'], _0x4257b7['y'] += _0x8c3aee * _0x1ed377['y'], _0x4257b7['z'] += _0x8c3aee * _0x1ed377['z'];
                else {
                    var _0x1ed572 = _0x4257b7['x'], _0x40a472 = _0x4257b7['y'], _0x1bb0c8 = _0x4257b7['z'];
                    _0x4257b7['x'] = _0x1ed572 + _0x8c3aee * (_0x1ed377['x'] - _0x1ed572), _0x4257b7['y'] = _0x40a472 + _0x8c3aee * (_0x1ed377['y'] - _0x40a472), _0x4257b7['z'] = _0x1bb0c8 + _0x8c3aee * (_0x1ed377['z'] - _0x1bb0c8);
                }
            } else {
                if (_0x4430ee) {
                    if (_0x2e7178) {
                        var _0x1b9ab2 = _0x20b2bc[_0x59a0c4(0x390)];
                        _0x4257b7['x'] = _0x1b9ab2['x'] + _0x1ed377['x'], _0x4257b7['y'] = _0x1b9ab2['y'] + _0x1ed377['y'], _0x4257b7['z'] = _0x1b9ab2['z'] + _0x1ed377['z'];
                    } else
                        _0x4257b7['x'] = _0x1ed377['x'], _0x4257b7['y'] = _0x1ed377['y'], _0x4257b7['z'] = _0x1ed377['z'];
                } else {
                    if (_0x1b9ab2 = _0x20b2bc[_0x59a0c4(0x390)], _0x2e7178)
                        _0x4257b7['x'] = _0x1b9ab2['x'] + _0x8c3aee * _0x1ed377['x'], _0x4257b7['y'] = _0x1b9ab2['y'] + _0x8c3aee * _0x1ed377['y'], _0x4257b7['z'] = _0x1b9ab2['z'] + _0x8c3aee * _0x1ed377['z'];
                    else {
                        var _0x2165e4 = _0x1b9ab2['x'], _0xb91464 = _0x1b9ab2['y'], _0x4d0b99 = _0x1b9ab2['z'];
                        _0x4257b7['x'] = _0x2165e4 + _0x8c3aee * (_0x1ed377['x'] - _0x2165e4), _0x4257b7['y'] = _0xb91464 + _0x8c3aee * (_0x1ed377['y'] - _0xb91464), _0x4257b7['z'] = _0x4d0b99 + _0x8c3aee * (_0x1ed377['z'] - _0x4d0b99);
                    }
                }
            }
        }
        [_0x6027f5(0x39f)](_0x1033c6, _0x18b03d, _0x37aee8, _0x4f0b34, _0x1f9158, _0x4804e0) {
            var _0xbc6724 = _0x6027f5;
            if (_0x1033c6[_0xbc6724(0x376)] === this[_0xbc6724(0x385)]) {
                if (_0x18b03d) {
                    var _0x889ab5 = _0x493c7d['_tempQuaternion1'];
                    _0x3acd08[_0xbc6724(0x2fc)](_0x1f9158, _0x37aee8, _0x889ab5), _0x889ab5[_0xbc6724(0x214)](_0x889ab5), _0x528999[_0xbc6724(0x27b)](_0x4804e0, _0x889ab5, _0x4804e0);
                } else
                    _0x528999[_0xbc6724(0x202)](_0x4804e0, _0x1f9158, _0x37aee8, _0x4804e0);
            } else {
                if (_0x4f0b34) {
                    if (_0x18b03d) {
                        var _0x1fee52 = _0x1033c6['defaultValue'];
                        _0x528999[_0xbc6724(0x27b)](_0x1fee52, _0x1f9158, _0x4804e0);
                    } else
                        _0x4804e0['x'] = _0x1f9158['x'], _0x4804e0['y'] = _0x1f9158['y'], _0x4804e0['z'] = _0x1f9158['z'], _0x4804e0['w'] = _0x1f9158['w'];
                } else
                    _0x1fee52 = _0x1033c6['defaultValue'], _0x18b03d ? (_0x889ab5 = _0x493c7d['_tempQuaternion1'], _0x3acd08[_0xbc6724(0x2fc)](_0x1f9158, _0x37aee8, _0x889ab5), _0x889ab5[_0xbc6724(0x214)](_0x889ab5), _0x528999['multiply'](_0x1fee52, _0x889ab5, _0x4804e0)) : _0x528999[_0xbc6724(0x202)](_0x1fee52, _0x1f9158, _0x37aee8, _0x4804e0);
            }
        }
        [_0x6027f5(0x3a0)](_0x103703, _0x5a3fec, _0x7ad03b, _0x97760f, _0x44ba79, _0x19cc3e) {
            var _0x2cab97 = _0x6027f5;
            if (_0x103703['updateMark'] === this[_0x2cab97(0x385)]) {
                if (_0x5a3fec) {
                    var _0x156b48 = _0x493c7d[_0x2cab97(0x3a1)];
                    _0x3acd08['scaleWeight'](_0x44ba79, _0x7ad03b, _0x156b48), _0x19cc3e['x'] = _0x19cc3e['x'] * _0x156b48['x'], _0x19cc3e['y'] = _0x19cc3e['y'] * _0x156b48['y'], _0x19cc3e['z'] = _0x19cc3e['z'] * _0x156b48['z'];
                } else
                    _0x3acd08[_0x2cab97(0x300)](_0x19cc3e, _0x44ba79, _0x7ad03b, _0x19cc3e);
            } else {
                if (_0x97760f) {
                    if (_0x5a3fec) {
                        var _0x545230 = _0x103703[_0x2cab97(0x390)];
                        _0x19cc3e['x'] = _0x545230['x'] * _0x44ba79['x'], _0x19cc3e['y'] = _0x545230['y'] * _0x44ba79['y'], _0x19cc3e['z'] = _0x545230['z'] * _0x44ba79['z'];
                    } else
                        _0x19cc3e['x'] = _0x44ba79['x'], _0x19cc3e['y'] = _0x44ba79['y'], _0x19cc3e['z'] = _0x44ba79['z'];
                } else
                    _0x545230 = _0x103703[_0x2cab97(0x390)], _0x5a3fec ? (_0x156b48 = _0x493c7d[_0x2cab97(0x3a1)], _0x3acd08[_0x2cab97(0x2fe)](_0x44ba79, _0x7ad03b, _0x156b48), _0x19cc3e['x'] = _0x545230['x'] * _0x156b48['x'], _0x19cc3e['y'] = _0x545230['y'] * _0x156b48['y'], _0x19cc3e['z'] = _0x545230['z'] * _0x156b48['z']) : _0x3acd08[_0x2cab97(0x300)](_0x545230, _0x44ba79, _0x7ad03b, _0x19cc3e);
            }
        }
        [_0x6027f5(0x3a2)](_0x2e0258, _0x29ceda, _0x511efb, _0x1ad936, _0x44f028, _0x28b214, _0x6e06a2) {
            var _0x3622a9 = _0x6027f5, _0x4fa6d3 = _0x2e0258[_0x3622a9(0x2c3)];
            if (_0x4fa6d3) {
                switch (_0x2e0258[_0x3622a9(0x2cc)]) {
                case 0x0:
                    for (var _0x5b11cb = _0x2e0258[_0x3622a9(0x377)], _0x1dcf1c = _0x5b11cb[_0x3622a9(0x205)] - 0x1, _0x222720 = 0x0; _0x222720 < _0x1dcf1c && (_0x4fa6d3 = _0x4fa6d3[_0x5b11cb[_0x222720]]); _0x222720++);
                    var _0x397e33 = _0x44f028 + _0x6e06a2 * (_0x28b214 - _0x44f028);
                    _0x2e0258['value'] = _0x397e33, _0x4fa6d3 && this[_0x3622a9(0x39d)](_0x4fa6d3, _0x5b11cb[_0x1dcf1c], _0x2e0258, _0x29ceda, _0x511efb, _0x1ad936, _0x397e33);
                    break;
                case 0x1:
                    var _0x91d1fb = _0x4fa6d3['localPosition'], _0xd5bdb4 = _0x2e0258[_0x3622a9(0x2a1)], _0x4c94cf = _0x44f028['x'], _0x5db395 = _0x44f028['y'], _0x5946d7 = _0x44f028['z'];
                    _0xd5bdb4['x'] = _0x4c94cf + _0x6e06a2 * (_0x28b214['x'] - _0x4c94cf), _0xd5bdb4['y'] = _0x5db395 + _0x6e06a2 * (_0x28b214['y'] - _0x5db395), _0xd5bdb4['z'] = _0x5946d7 + _0x6e06a2 * (_0x28b214['z'] - _0x5946d7), this['_applyPositionAndRotationEuler'](_0x2e0258, _0x29ceda, _0x511efb, _0x1ad936, _0xd5bdb4, _0x91d1fb), _0x4fa6d3[_0x3622a9(0x3a3)] = _0x91d1fb;
                    break;
                case 0x2:
                    var _0x1a5c4c = _0x4fa6d3['localRotation'], _0x4b8965 = _0x2e0258[_0x3622a9(0x2a1)];
                    _0x528999['lerp'](_0x44f028, _0x28b214, _0x6e06a2, _0x4b8965), this['_applyRotation'](_0x2e0258, _0x29ceda, _0x511efb, _0x1ad936, _0x4b8965, _0x1a5c4c), _0x4fa6d3[_0x3622a9(0x3a4)] = _0x1a5c4c;
                    break;
                case 0x3:
                    var _0x5396de = _0x4fa6d3[_0x3622a9(0x3a5)], _0x36c7b1 = _0x2e0258[_0x3622a9(0x2a1)];
                    _0x3acd08[_0x3622a9(0x300)](_0x44f028, _0x28b214, _0x6e06a2, _0x36c7b1), this[_0x3622a9(0x3a0)](_0x2e0258, _0x29ceda, _0x511efb, _0x1ad936, _0x36c7b1, _0x5396de), _0x4fa6d3[_0x3622a9(0x3a5)] = _0x5396de;
                    break;
                case 0x4:
                    var _0xfc3801 = _0x4fa6d3['localRotationEuler'], _0xd721de = _0x2e0258[_0x3622a9(0x2a1)];
                    _0x4c94cf = _0x44f028['x'], _0x5db395 = _0x44f028['y'], _0x5946d7 = _0x44f028['z'], _0xd721de['x'] = _0x4c94cf + _0x6e06a2 * (_0x28b214['x'] - _0x4c94cf), _0xd721de['y'] = _0x5db395 + _0x6e06a2 * (_0x28b214['y'] - _0x5db395), _0xd721de['z'] = _0x5946d7 + _0x6e06a2 * (_0x28b214['z'] - _0x5946d7), this[_0x3622a9(0x39e)](_0x2e0258, _0x29ceda, _0x511efb, _0x1ad936, _0xd721de, _0xfc3801), _0x4fa6d3[_0x3622a9(0x3a6)] = _0xfc3801;
                }
                _0x2e0258[_0x3622a9(0x376)] = this[_0x3622a9(0x385)];
            }
        }
        [_0x6027f5(0x3a7)](_0x734058, _0x5a0097, _0x43d789, _0x5201e6, _0xc87c67 = null) {
            var _0x4033bf = _0x6027f5;
            for (var _0x2eaf17 = _0x734058[_0x4033bf(0x369)], _0x20f5b5 = _0x734058[_0x4033bf(0x36e)]['_nodes'], _0x519b26 = _0x734058[_0x4033bf(0x367)], _0x108c10 = 0x0, _0x3dd4c8 = _0x20f5b5[_0x4033bf(0x2b3)]; _0x108c10 < _0x3dd4c8; _0x108c10++) {
                var _0x23c320 = _0x519b26[_0x108c10];
                if (_0x23c320) {
                    var _0x189fcb = _0x20f5b5[_0x4033bf(0x2d5)](_0x108c10);
                    if (_0xc87c67[_0x4033bf(0x358)] && !_0xc87c67[_0x4033bf(0x358)][_0x4033bf(0x332)](_0x189fcb[_0x4033bf(0x2cd)]))
                        continue;
                    var _0x11e649 = _0x23c320[_0x4033bf(0x2c3)];
                    if (_0x11e649) {
                        switch (_0x23c320['type']) {
                        case 0x0:
                            for (var _0x38f63a = _0x23c320[_0x4033bf(0x377)], _0x5b0f1c = _0x38f63a['length'] - 0x1, _0x24e539 = 0x0; _0x24e539 < _0x5b0f1c && (_0x11e649 = _0x11e649[_0x38f63a[_0x24e539]]); _0x24e539++);
                            _0x11e649 && this[_0x4033bf(0x39d)](_0x11e649, _0x38f63a[_0x5b0f1c], _0x23c320, _0x5a0097, _0x43d789, _0x5201e6, _0x2eaf17[_0x108c10]);
                            break;
                        case 0x1:
                            var _0x47de69 = _0x11e649['localPosition'];
                            this['_applyPositionAndRotationEuler'](_0x23c320, _0x5a0097, _0x43d789, _0x5201e6, _0x2eaf17[_0x108c10], _0x47de69), _0x11e649[_0x4033bf(0x3a3)] = _0x47de69;
                            break;
                        case 0x2:
                            var _0x1579af = _0x11e649['localRotation'];
                            this[_0x4033bf(0x39f)](_0x23c320, _0x5a0097, _0x43d789, _0x5201e6, _0x2eaf17[_0x108c10], _0x1579af), _0x11e649['localRotation'] = _0x1579af;
                            break;
                        case 0x3:
                            var _0xad6f19 = _0x11e649[_0x4033bf(0x3a5)];
                            this['_applyScale'](_0x23c320, _0x5a0097, _0x43d789, _0x5201e6, _0x2eaf17[_0x108c10], _0xad6f19), _0x11e649[_0x4033bf(0x3a5)] = _0xad6f19;
                            break;
                        case 0x4:
                            var _0xc7b41a = _0x11e649[_0x4033bf(0x3a6)];
                            this[_0x4033bf(0x39e)](_0x23c320, _0x5a0097, _0x43d789, _0x5201e6, _0x2eaf17[_0x108c10], _0xc7b41a), _0x11e649[_0x4033bf(0x3a6)] = _0xc7b41a;
                        }
                        _0x23c320[_0x4033bf(0x376)] = this['_updateMark'];
                    }
                }
            }
        }
        [_0x6027f5(0x3a8)](_0x1771fa, _0x286d50, _0x3c78ef, _0x27282e, _0x55abdd) {
            var _0x332df4 = _0x6027f5;
            for (var _0x35deca = _0x1771fa[_0x332df4(0x34c)], _0x2cc65e = _0x1771fa[_0x332df4(0x34b)], _0x38b734 = _0x1771fa[_0x332df4(0x352)] !== _0x5059f4['BLENDINGMODE_OVERRIDE'], _0x41a344 = _0x1771fa[_0x332df4(0x354)], _0x33f36a = _0x3c78ef[_0x332df4(0x369)], _0x480a8a = _0x1771fa[_0x332df4(0x3a9)], _0x1853ca = _0x3c78ef['_nodeOwners'], _0x3d526a = _0x286d50[_0x332df4(0x369)], _0x45f303 = _0x1771fa[_0x332df4(0x34e)], _0x8352b0 = _0x286d50[_0x332df4(0x367)], _0x4aba1f = 0x0; _0x4aba1f < _0x2cc65e; _0x4aba1f++) {
                var _0x1a31f1 = _0x35deca[_0x4aba1f];
                if (_0x1a31f1) {
                    var _0x1f8cf8 = _0x45f303[_0x4aba1f], _0x193a12 = _0x480a8a[_0x4aba1f], _0x30e8ce = -0x1 !== _0x1f8cf8 ? _0x3d526a[_0x1f8cf8] : _0x1853ca[_0x193a12]['defaultValue'], _0x2cc036 = -0x1 !== _0x193a12 ? _0x33f36a[_0x193a12] : _0x8352b0[_0x1f8cf8][_0x332df4(0x390)];
                    this[_0x332df4(0x3a2)](_0x1a31f1, _0x38b734, _0x41a344, _0x55abdd, _0x30e8ce, _0x2cc036, _0x27282e);
                }
            }
        }
        ['_setFixedCrossClipDatasToNode'](_0x354772, _0x1c5069, _0x2bdbf7, _0x424d9a) {
            var _0x552c4e = _0x6027f5;
            for (var _0x338e14 = _0x354772[_0x552c4e(0x34c)], _0x563962 = _0x354772[_0x552c4e(0x34b)], _0x3f7386 = _0x354772['blendingMode'] !== _0x5059f4[_0x552c4e(0x353)], _0x4a92c5 = _0x354772[_0x552c4e(0x354)], _0x312110 = _0x1c5069[_0x552c4e(0x369)], _0x4abea5 = _0x354772[_0x552c4e(0x3a9)], _0x3b3b65 = 0x0; _0x3b3b65 < _0x563962; _0x3b3b65++) {
                var _0xf95ab2 = _0x338e14[_0x3b3b65];
                if (_0xf95ab2) {
                    var _0x2065a8 = _0x4abea5[_0x3b3b65], _0x209cbd = _0xf95ab2[_0x552c4e(0x379)], _0xdbbb6b = -0x1 !== _0x2065a8 ? _0x312110[_0x2065a8] : _0xf95ab2[_0x552c4e(0x390)];
                    this[_0x552c4e(0x3a2)](_0xf95ab2, _0x3f7386, _0x4a92c5, _0x424d9a, _0x209cbd, _0xdbbb6b, _0x2bdbf7);
                }
            }
        }
        ['_revertDefaultKeyframeNodes'](_0x167dbd) {
            var _0x1961b9 = _0x6027f5;
            for (var _0x363475 = _0x167dbd['_nodeOwners'], _0x53249e = 0x0, _0x18e321 = _0x363475[_0x1961b9(0x205)]; _0x53249e < _0x18e321; _0x53249e++) {
                var _0x3c6509 = _0x363475[_0x53249e];
                if (_0x3c6509) {
                    var _0xd8ae9e = _0x3c6509[_0x1961b9(0x2c3)];
                    if (_0xd8ae9e)
                        switch (_0x3c6509[_0x1961b9(0x2cc)]) {
                        case 0x0:
                            for (var _0xf6f787 = _0x3c6509[_0x1961b9(0x377)], _0x40de65 = _0xf6f787[_0x1961b9(0x205)] - 0x1, _0x518e1c = 0x0; _0x518e1c < _0x40de65 && (_0xd8ae9e = _0xd8ae9e[_0xf6f787[_0x518e1c]]); _0x518e1c++);
                            _0xd8ae9e[_0xf6f787[_0x40de65]] = _0x3c6509[_0x1961b9(0x390)];
                            break;
                        case 0x1:
                            var _0x5976c2 = _0xd8ae9e[_0x1961b9(0x3a3)], _0x19e634 = _0x3c6509[_0x1961b9(0x390)];
                            _0x5976c2['x'] = _0x19e634['x'], _0x5976c2['y'] = _0x19e634['y'], _0x5976c2['z'] = _0x19e634['z'], _0xd8ae9e[_0x1961b9(0x3a3)] = _0x5976c2;
                            break;
                        case 0x2:
                            var _0x4bbcfc = _0xd8ae9e[_0x1961b9(0x3a4)], _0x41a33b = _0x3c6509[_0x1961b9(0x390)];
                            _0x4bbcfc['x'] = _0x41a33b['x'], _0x4bbcfc['y'] = _0x41a33b['y'], _0x4bbcfc['z'] = _0x41a33b['z'], _0x4bbcfc['w'] = _0x41a33b['w'], _0xd8ae9e['localRotation'] = _0x4bbcfc;
                            break;
                        case 0x3:
                            var _0x496de2 = _0xd8ae9e[_0x1961b9(0x3a5)];
                            _0x19e634 = _0x3c6509[_0x1961b9(0x390)], _0x496de2['x'] = _0x19e634['x'], _0x496de2['y'] = _0x19e634['y'], _0x496de2['z'] = _0x19e634['z'], _0xd8ae9e['localScale'] = _0x496de2;
                            break;
                        case 0x4:
                            var _0x26eaaa = _0xd8ae9e[_0x1961b9(0x3a6)];
                            _0x19e634 = _0x3c6509['defaultValue'], _0x26eaaa['x'] = _0x19e634['x'], _0x26eaaa['y'] = _0x19e634['y'], _0x26eaaa['z'] = _0x19e634['z'], _0xd8ae9e[_0x1961b9(0x3a6)] = _0x26eaaa;
                            break;
                        default:
                            throw 'Animator:unknown\x20type.';
                        }
                }
            }
        }
        ['_onAdded']() {
            var _0x2c8df3 = _0x6027f5, _0x1f6d80 = this[_0x2c8df3(0x38b)][_0x2c8df3(0x30f)];
            this[_0x2c8df3(0x38b)][_0x2c8df3(0x3aa)](this, _0x1f6d80 ? _0x1f6d80[_0x2c8df3(0x3ab)] : null), this[_0x2c8df3(0x38b)][_0x2c8df3(0x3ac)](this, !0x0, []);
        }
        [_0x6027f5(0x3ad)]() {
            var _0xcf69ac = _0x6027f5;
            for (var _0x4a40ec = 0x0, _0x3e52a5 = this[_0xcf69ac(0x381)][_0xcf69ac(0x205)]; _0x4a40ec < _0x3e52a5; _0x4a40ec++)
                this[_0xcf69ac(0x381)][_0x4a40ec][_0xcf69ac(0x35c)]();
            var _0x34f450 = this[_0xcf69ac(0x38b)][_0xcf69ac(0x30f)];
            this[_0xcf69ac(0x38b)][_0xcf69ac(0x3ae)](this, _0x34f450 ? _0x34f450[_0xcf69ac(0x3ab)] : null);
        }
        [_0x6027f5(0x3af)]() {
            var _0x432cb7 = _0x6027f5;
            this[_0x432cb7(0x38b)][_0x432cb7(0x3b0)][_0x432cb7(0x386)][_0x432cb7(0x207)](this);
            for (var _0x491bd3 = 0x0, _0x30a2d5 = this['_controllerLayers'][_0x432cb7(0x205)]; _0x491bd3 < _0x30a2d5; _0x491bd3++) {
                if (this['_controllerLayers'][_0x491bd3][_0x432cb7(0x355)])
                    this[_0x432cb7(0x3b1)](_0x491bd3) && this[_0x432cb7(0x3b2)](null, _0x491bd3, 0x0);
            }
        }
        [_0x6027f5(0x3b3)]() {
            var _0xfc9de7 = _0x6027f5;
            this[_0xfc9de7(0x38b)][_0xfc9de7(0x3b0)][_0xfc9de7(0x386)][_0xfc9de7(0x3b4)](this);
        }
        [_0x6027f5(0x3b5)](_0x4d6bef, _0x4aebfb, _0x3fccb3) {
            var _0x79f5cb = _0x6027f5;
            for (var _0x3b0088 = 0x0, _0x1282cd = this[_0x79f5cb(0x381)]['length']; _0x3b0088 < _0x1282cd; _0x3b0088++)
                for (var _0x4f0096 = this[_0x79f5cb(0x381)][_0x3b0088][_0x79f5cb(0x350)], _0x548b88 = 0x0, _0x52a895 = _0x4f0096[_0x79f5cb(0x205)]; _0x548b88 < _0x52a895; _0x548b88++) {
                    var _0xb5ccb = _0x4f0096[_0x548b88], _0x8c217f = _0xb5ccb[_0x79f5cb(0x36e)], _0x5ba2b1 = _0x4aebfb[_0x79f5cb(0x26d)]('/'), _0x193086 = _0x8c217f['_nodesMap'][_0x5ba2b1];
                    if (_0x193086) {
                        for (var _0x561361 = _0xb5ccb['_nodeOwners'], _0x19bec6 = 0x0, _0x41915b = _0x193086[_0x79f5cb(0x205)]; _0x19bec6 < _0x41915b; _0x19bec6++)
                            _0x4d6bef ? this['_addKeyframeNodeOwner'](_0x561361, _0x193086[_0x19bec6], _0x3fccb3) : this['_removeKeyframeNodeOwner'](_0x561361, _0x193086[_0x19bec6]);
                    }
                }
        }
        ['_parse'](_0x4ee98b) {
            var _0x1d1729 = _0x6027f5, _0x2cdc8d = _0x4ee98b[_0x1d1729(0x3b6)];
            if (_0x2cdc8d) {
                this[_0x1d1729(0x3b6)] = _0x387b86['Loader'][_0x1d1729(0x3b7)](_0x2cdc8d[_0x1d1729(0x3b8)]);
                var _0x3ccd56 = _0x2cdc8d[_0x1d1729(0x3b9)];
                this[_0x1d1729(0x382)] = _0x3ccd56, this[_0x1d1729(0x38a)](_0x3ccd56);
            }
            for (var _0x4f8d93 = _0x4ee98b['playOnWake'], _0x5e9736 = _0x4ee98b[_0x1d1729(0x3ba)], _0x22dc2a = 0x0; _0x22dc2a < _0x5e9736[_0x1d1729(0x205)]; _0x22dc2a++) {
                var _0x4853a9 = _0x5e9736[_0x22dc2a], _0x2ccc8b = new _0x5059f4(_0x4853a9['name']);
                _0x2ccc8b[_0x1d1729(0x354)] = 0x0 === _0x22dc2a ? 0x1 : _0x4853a9[_0x1d1729(0x3bb)];
                var _0x1ea4fc = _0x4853a9[_0x1d1729(0x352)];
                _0x1ea4fc && (_0x2ccc8b['blendingMode'] = _0x1ea4fc), this['addControllerLayer'](_0x2ccc8b);
                for (var _0x5862c8 = _0x4853a9[_0x1d1729(0x3bc)], _0x10ae6e = 0x0, _0x1b052a = _0x5862c8[_0x1d1729(0x205)]; _0x10ae6e < _0x1b052a; _0x10ae6e++) {
                    var _0x5f2672 = _0x5862c8[_0x10ae6e], _0x12068d = _0x5f2672['clipPath'];
                    if (_0x12068d) {
                        var _0x533f5e, _0x32901e = _0x5f2672[_0x1d1729(0x2b7)];
                        if (_0x533f5e = _0x387b86[_0x1d1729(0x3bd)][_0x1d1729(0x3b7)](_0x12068d)) {
                            var _0x1de100 = new _0x176511();
                            _0x1de100['name'] = _0x32901e, _0x1de100[_0x1d1729(0x36d)] = _0x533f5e, _0x2ccc8b[_0x1d1729(0x360)](_0x1de100), 0x0 === _0x10ae6e && (this['getControllerLayer'](_0x22dc2a)[_0x1d1729(0x356)] = _0x1de100);
                        }
                    }
                }
                void 0x0 !== _0x4f8d93 && (_0x2ccc8b[_0x1d1729(0x355)] = _0x4f8d93);
                let _0x41ba4c = _0x4853a9[_0x1d1729(0x358)];
                if (_0x41ba4c) {
                    let _0x485169 = new _0x5ace57(this);
                    for (var _0x295862 in (_0x2ccc8b[_0x1d1729(0x358)] = _0x485169, _0x41ba4c))
                        _0x485169[_0x1d1729(0x3be)](_0x295862, _0x41ba4c[_0x295862]);
                }
            }
            var _0x1c0725 = _0x4ee98b[_0x1d1729(0x3bf)];
            void 0x0 !== _0x1c0725 && (this[_0x1d1729(0x3bf)] = _0x1c0725);
        }
        [_0x6027f5(0x388)]() {
            var _0x247d5f = _0x6027f5, _0x265645 = this['owner']['_scene'][_0x247d5f(0x3c0)][_0x247d5f(0x3c1)] / 0x3e8;
            if (0x0 !== this[_0x247d5f(0x383)] && 0x0 !== _0x265645) {
                var _0x47b16f;
                if (this[_0x247d5f(0x3bf)] === _0x493c7d[_0x247d5f(0x3c2)]) {
                    _0x47b16f = !0x1;
                    for (var _0x455a66 = 0x0, _0x2cc5b5 = this[_0x247d5f(0x380)][_0x247d5f(0x205)]; _0x455a66 < _0x2cc5b5; _0x455a66++)
                        if (this[_0x247d5f(0x380)][_0x455a66]['_render'][_0x247d5f(0x3c3)]) {
                            _0x47b16f = !0x0;
                            break;
                        }
                } else
                    _0x47b16f = !0x0;
                for (this['_updateMark']++, _0x455a66 = 0x0, _0x2cc5b5 = this[_0x247d5f(0x381)][_0x247d5f(0x205)]; _0x455a66 < _0x2cc5b5; _0x455a66++) {
                    var _0x5c5ba3 = this['_controllerLayers'][_0x455a66], _0x1cf365 = _0x5c5ba3[_0x247d5f(0x351)], _0x54d4b6 = _0x5c5ba3[_0x247d5f(0x366)];
                    switch (_0x415cc2 = _0x5c5ba3['blendingMode'] !== _0x5059f4[_0x247d5f(0x353)], _0x5c5ba3[_0x247d5f(0x348)]) {
                    case 0x0:
                        var _0xa07507 = _0x1cf365['_currentState'], _0x1160c5 = _0xa07507['_clip'], _0x295b84 = this[_0x247d5f(0x383)] * _0xa07507[_0x247d5f(0x36b)], _0x44d075 = _0x1cf365[_0x247d5f(0x340)];
                        if (_0x44d075 || this['_updatePlayer'](_0xa07507, _0x1cf365, _0x265645 * _0x295b84, _0x1160c5[_0x247d5f(0x2ba)]), _0x47b16f) {
                            var _0x415cc2 = _0x5c5ba3[_0x247d5f(0x352)] !== _0x5059f4[_0x247d5f(0x353)];
                            this['_updateClipDatas'](_0xa07507, _0x415cc2, _0x1cf365, _0x5c5ba3[_0x247d5f(0x358)]), this[_0x247d5f(0x3a7)](_0xa07507, _0x415cc2, _0x5c5ba3[_0x247d5f(0x354)], 0x0 === _0x455a66, _0x5c5ba3), _0x44d075 || this[_0x247d5f(0x39a)](_0xa07507, _0x1cf365);
                        }
                        break;
                    case 0x1:
                        _0x1160c5 = (_0xa07507 = _0x1cf365['_currentState'])[_0x247d5f(0x36e)];
                        var _0x251c72 = _0x5c5ba3[_0x247d5f(0x3c4)], _0x5bf24c = _0x251c72[_0x247d5f(0x36e)], _0x23644b = _0x5c5ba3[_0x247d5f(0x349)], _0x1de3da = _0x54d4b6[_0x247d5f(0x341)], _0x487898 = _0x5bf24c[_0x247d5f(0x2b8)] - _0x1de3da, _0x509272 = _0x23644b > _0x487898 ? _0x487898 / _0x23644b : 0x1, _0x4c9736 = this[_0x247d5f(0x383)] * _0x251c72['speed'];
                        this['_updatePlayer'](_0x251c72, _0x54d4b6, _0x265645 * _0x509272 * _0x4c9736, _0x5bf24c[_0x247d5f(0x2ba)]);
                        var _0x115aed = (_0x54d4b6[_0x247d5f(0x342)] - _0x1de3da) / _0x509272 / _0x23644b;
                        _0x115aed >= 0x1 ? _0x47b16f && (this['_updateClipDatas'](_0x251c72, _0x415cc2, _0x54d4b6, _0x5c5ba3[_0x247d5f(0x358)]), this['_setClipDatasToNode'](_0x251c72, _0x415cc2, _0x5c5ba3[_0x247d5f(0x354)], 0x0 === _0x455a66, _0x5c5ba3), _0x5c5ba3[_0x247d5f(0x348)] = 0x0, _0x1cf365[_0x247d5f(0x33b)] = _0x251c72, _0x54d4b6[_0x247d5f(0x345)](_0x1cf365)) : (_0x1cf365[_0x247d5f(0x340)] || (_0x295b84 = this[_0x247d5f(0x383)] * _0xa07507[_0x247d5f(0x36b)], this[_0x247d5f(0x396)](_0xa07507, _0x1cf365, _0x265645 * _0x295b84, _0x1160c5[_0x247d5f(0x2ba)]), _0x47b16f && this[_0x247d5f(0x39c)](_0xa07507, _0x415cc2, _0x1cf365, _0x5c5ba3['avatarMask'])), _0x47b16f && (this[_0x247d5f(0x39c)](_0x251c72, _0x415cc2, _0x54d4b6, _0x5c5ba3[_0x247d5f(0x358)]), this['_setCrossClipDatasToNode'](_0x5c5ba3, _0xa07507, _0x251c72, _0x115aed, 0x0 === _0x455a66))), _0x47b16f && (this['_updateEventScript'](_0xa07507, _0x1cf365), this[_0x247d5f(0x39a)](_0x251c72, _0x54d4b6));
                        break;
                    case 0x2:
                        _0x5bf24c = (_0x251c72 = _0x5c5ba3['_crossPlayState'])[_0x247d5f(0x36e)], _0x23644b = _0x5c5ba3[_0x247d5f(0x349)], _0x1de3da = _0x54d4b6[_0x247d5f(0x341)], _0x509272 = _0x23644b > (_0x487898 = _0x5bf24c[_0x247d5f(0x2b8)] - _0x1de3da) ? _0x487898 / _0x23644b : 0x1, _0x4c9736 = this[_0x247d5f(0x383)] * _0x251c72[_0x247d5f(0x36b)], this[_0x247d5f(0x396)](_0x251c72, _0x54d4b6, _0x265645 * _0x509272 * _0x4c9736, _0x5bf24c['islooping']), _0x47b16f && ((_0x115aed = (_0x54d4b6['_elapsedTime'] - _0x1de3da) / _0x509272 / _0x23644b) >= 0x1 ? (this[_0x247d5f(0x39c)](_0x251c72, _0x415cc2, _0x54d4b6, _0x5c5ba3[_0x247d5f(0x358)]), this[_0x247d5f(0x3a7)](_0x251c72, _0x415cc2, 0x1, 0x0 === _0x455a66, _0x5c5ba3), _0x5c5ba3[_0x247d5f(0x348)] = 0x0, _0x1cf365['_currentState'] = _0x251c72, _0x54d4b6[_0x247d5f(0x345)](_0x1cf365)) : (this[_0x247d5f(0x39c)](_0x251c72, _0x415cc2, _0x54d4b6, _0x5c5ba3[_0x247d5f(0x358)]), this['_setFixedCrossClipDatasToNode'](_0x5c5ba3, _0x251c72, _0x115aed, 0x0 === _0x455a66)), this[_0x247d5f(0x39a)](_0x251c72, _0x54d4b6));
                    }
                }
                _0x47b16f && this[_0x247d5f(0x392)] && this[_0x247d5f(0x3c5)]();
            }
        }
        [_0x6027f5(0x345)](_0x4af293) {
            var _0x52e986 = _0x6027f5, _0x2904d8 = _0x4af293;
            _0x2904d8[_0x52e986(0x3b6)] = this[_0x52e986(0x3b6)], _0x2904d8['cullingMode'] = this[_0x52e986(0x3bf)];
            for (var _0x39e4cf = 0x0, _0x1a0d2d = this[_0x52e986(0x381)][_0x52e986(0x205)]; _0x39e4cf < _0x1a0d2d; _0x39e4cf++) {
                var _0x15b673 = this[_0x52e986(0x381)][_0x39e4cf];
                _0x2904d8[_0x52e986(0x3c6)](_0x15b673[_0x52e986(0x1fd)]());
                for (var _0x37e4ed = _0x15b673['_states'], _0x3ff1e4 = 0x0, _0xf85ecf = _0x37e4ed[_0x52e986(0x205)]; _0x3ff1e4 < _0xf85ecf; _0x3ff1e4++) {
                    var _0x5810d3 = _0x37e4ed[_0x3ff1e4][_0x52e986(0x1fd)](), _0x171fe7 = _0x2904d8[_0x52e986(0x3c7)](_0x39e4cf);
                    _0x171fe7['addState'](_0x5810d3), 0x0 == _0x3ff1e4 && (_0x171fe7['defaultState'] = _0x5810d3);
                }
            }
            _0x2904d8['_linkSprites'] = this['_linkSprites'], _0x2904d8[_0x52e986(0x38a)](this['_linkSprites']);
        }
        [_0x6027f5(0x3b1)](_0x4e5e9b = 0x0) {
            var _0x381201 = _0x6027f5;
            return this[_0x381201(0x381)][_0x4e5e9b][_0x381201(0x356)];
        }
        [_0x6027f5(0x360)](_0x49c78d, _0x39a510 = 0x0) {
            var _0x2fb5db = _0x6027f5;
            this[_0x2fb5db(0x381)][_0x39a510][_0x2fb5db(0x360)](_0x49c78d), console[_0x2fb5db(0x25a)](_0x2fb5db(0x3c8));
        }
        [_0x6027f5(0x363)](_0x4809df, _0x2183d6 = 0x0) {
            var _0x15f662 = _0x6027f5;
            this[_0x15f662(0x381)][_0x2183d6][_0x15f662(0x363)](_0x4809df), console['warn'](_0x15f662(0x3c9));
        }
        ['addControllerLayer'](_0x2b7d1c) {
            var _0x22c88b = _0x6027f5;
            this[_0x22c88b(0x381)][_0x22c88b(0x2ac)](_0x2b7d1c), _0x2b7d1c[_0x22c88b(0x35b)] = this, _0x2b7d1c[_0x22c88b(0x35f)]();
            for (var _0x2b353c = _0x2b7d1c[_0x22c88b(0x350)], _0xf66645 = 0x0, _0x333488 = _0x2b353c[_0x22c88b(0x205)]; _0xf66645 < _0x333488; _0xf66645++)
                this[_0x22c88b(0x362)](_0x2b353c[_0xf66645]);
        }
        [_0x6027f5(0x3c7)](_0x14d64b = 0x0) {
            var _0x5196c4 = _0x6027f5;
            return this[_0x5196c4(0x381)][_0x14d64b];
        }
        [_0x6027f5(0x3b2)](_0x2101fb = null, _0x2cc4b2 = 0x0, _0x54fc1e = Number[_0x6027f5(0x3ca)]) {
            var _0x189620 = _0x6027f5, _0x4f7e73 = this[_0x189620(0x381)][_0x2cc4b2];
            if (_0x4f7e73) {
                var _0x270fb1 = _0x4f7e73['defaultState'];
                if (!_0x2101fb && !_0x270fb1)
                    throw new Error(_0x189620(0x3cb));
                var _0x753617 = _0x4f7e73['_playStateInfo'], _0x3b3b11 = _0x753617['_currentState'], _0x93bd0b = _0x2101fb ? _0x4f7e73['_statesMap'][_0x2101fb] : _0x270fb1, _0x57048e = _0x93bd0b[_0x189620(0x36e)]['_duration'], _0x42d416 = _0x93bd0b['_clip'][_0x189620(0x2b8)] * (_0x93bd0b[_0x189620(0x36c)] - _0x93bd0b[_0x189620(0x373)]);
                _0x3b3b11 !== _0x93bd0b ? (_0x54fc1e !== Number['NEGATIVE_INFINITY'] ? _0x753617[_0x189620(0x33f)](_0x57048e * _0x54fc1e, _0x42d416) : _0x753617['_resetPlayState'](0x0, _0x42d416), null !== _0x3b3b11 && _0x3b3b11 !== _0x93bd0b && this[_0x189620(0x3cc)](_0x3b3b11), _0x4f7e73['_playType'] = 0x0, _0x753617['_currentState'] = _0x93bd0b) : _0x54fc1e !== Number['NEGATIVE_INFINITY'] && (_0x753617[_0x189620(0x33f)](_0x57048e * _0x54fc1e, _0x42d416), _0x4f7e73[_0x189620(0x348)] = 0x0);
                var _0x54f9e6 = _0x93bd0b[_0x189620(0x36a)];
                if (_0x54f9e6) {
                    for (var _0xca8e9f = 0x0, _0x357b06 = _0x54f9e6[_0x189620(0x205)]; _0xca8e9f < _0x357b06; _0xca8e9f++)
                        _0x54f9e6[_0xca8e9f][_0x189620(0x3cd)]();
                }
            } else
                console[_0x189620(0x25a)](_0x189620(0x3ce) + _0x2cc4b2 + '.');
        }
        [_0x6027f5(0x3cf)](_0x121388, _0x205c25, _0x14410f = 0x0, _0x44fc3f = Number[_0x6027f5(0x3ca)]) {
            var _0x47da76 = _0x6027f5, _0x310d4e = this[_0x47da76(0x381)][_0x14410f];
            if (_0x310d4e) {
                var _0x15cc44 = _0x310d4e[_0x47da76(0x34f)][_0x121388];
                if (_0x15cc44) {
                    var _0x1416e1 = _0x310d4e[_0x47da76(0x348)];
                    if (-0x1 === _0x1416e1)
                        return void this[_0x47da76(0x3b2)](_0x121388, _0x14410f, _0x44fc3f);
                    var _0x2c59fd = _0x310d4e[_0x47da76(0x366)], _0x2dda28 = _0x310d4e[_0x47da76(0x34c)], _0x31b148 = _0x310d4e['_crossNodesOwnersIndicesMap'], _0x1e385c = _0x310d4e[_0x47da76(0x351)][_0x47da76(0x33b)], _0x401e90 = _0x15cc44[_0x47da76(0x367)], _0x4c93d0 = _0x310d4e[_0x47da76(0x3a9)], _0x33db8e = _0x15cc44[_0x47da76(0x36e)], _0x23d3ac = _0x33db8e[_0x47da76(0x2be)], _0x3a97aa = _0x33db8e[_0x47da76(0x2cb)], _0xe07dc4 = 0x0;
                    switch (_0x1416e1) {
                    case 0x0:
                        var _0x594cfb = _0x1e385c[_0x47da76(0x367)], _0x1122e2 = _0x310d4e[_0x47da76(0x34e)], _0x531b83 = _0x1e385c[_0x47da76(0x36e)], _0x4e7775 = _0x531b83['_nodes'], _0x210eed = _0x531b83[_0x47da76(0x2cb)];
                        _0x310d4e['_playType'] = 0x1;
                        var _0x71a69b = ++_0x310d4e['_crossMark'];
                        _0xe07dc4 = _0x310d4e[_0x47da76(0x34b)] = 0x0;
                        for (var _0x5a3165 = 0x0, _0x2f740f = _0x4e7775['count']; _0x5a3165 < _0x2f740f; _0x5a3165++) {
                            var _0x8a5ab7 = _0x4e7775[_0x47da76(0x2d5)](_0x5a3165), _0x29bbf5 = _0x8a5ab7[_0x47da76(0x2c1)], _0x5c0dc5 = _0x594cfb[_0x29bbf5];
                            if (_0x5c0dc5) {
                                var _0x30faf8 = _0x8a5ab7[_0x47da76(0x2c4)];
                                _0x1122e2[_0xe07dc4] = _0x29bbf5;
                                var _0x14c137 = _0x3a97aa[_0x30faf8];
                                _0x4c93d0[_0xe07dc4] = _0x14c137 ? _0x14c137[_0x47da76(0x2c1)] : -0x1, _0x31b148[_0x30faf8] = _0x71a69b, _0x2dda28[_0xe07dc4] = _0x5c0dc5, _0xe07dc4++;
                            }
                        }
                        for (_0x5a3165 = 0x0, _0x2f740f = _0x23d3ac[_0x47da76(0x2b3)]; _0x5a3165 < _0x2f740f; _0x5a3165++) {
                            var _0x3fcc70 = (_0x14c137 = _0x23d3ac['getNodeByIndex'](_0x5a3165))['_indexInList'], _0x24806d = _0x401e90[_0x3fcc70];
                            if (_0x24806d) {
                                var _0xb3524f = _0x14c137[_0x47da76(0x2c4)];
                                _0x210eed[_0xb3524f] || (_0x1122e2[_0xe07dc4] = -0x1, _0x4c93d0[_0xe07dc4] = _0x3fcc70, _0x31b148[_0xb3524f] = _0x71a69b, _0x2dda28[_0xe07dc4] = _0x24806d, _0xe07dc4++);
                            }
                        }
                        break;
                    case 0x1:
                    case 0x2:
                        for (_0x310d4e[_0x47da76(0x348)] = 0x2, _0x5a3165 = 0x0, _0x2f740f = _0x2dda28[_0x47da76(0x205)]; _0x5a3165 < _0x2f740f; _0x5a3165++) {
                            var _0x4a7ff1 = _0x2dda28[_0x5a3165];
                            _0x4a7ff1['saveCrossFixedValue'](), _0x14c137 = _0x3a97aa[_0x4a7ff1[_0x47da76(0x2c4)]], _0x4c93d0[_0x5a3165] = _0x14c137 ? _0x14c137[_0x47da76(0x2c1)] : -0x1;
                        }
                        for (_0xe07dc4 = _0x310d4e['_crossNodesOwnersCount'], _0x71a69b = _0x310d4e[_0x47da76(0x34a)], _0x5a3165 = 0x0, _0x2f740f = _0x23d3ac[_0x47da76(0x2b3)]; _0x5a3165 < _0x2f740f; _0x5a3165++)
                            (_0x24806d = _0x401e90[_0x3fcc70 = (_0x14c137 = _0x23d3ac[_0x47da76(0x2d5)](_0x5a3165))[_0x47da76(0x2c1)]]) && _0x31b148[_0xb3524f = _0x14c137['fullPath']] !== _0x71a69b && (_0x4c93d0[_0xe07dc4] = _0x3fcc70, _0x31b148[_0xb3524f] = _0x71a69b, _0x4a7ff1 = _0x401e90[_0x3fcc70], _0x2dda28[_0xe07dc4] = _0x4a7ff1, _0x4a7ff1[_0x47da76(0x378)](), _0xe07dc4++);
                    }
                    _0x310d4e['_crossNodesOwnersCount'] = _0xe07dc4, _0x310d4e['_crossPlayState'] = _0x15cc44, _0x310d4e[_0x47da76(0x349)] = _0x1e385c[_0x47da76(0x36e)][_0x47da76(0x2b8)] * _0x205c25, _0x44fc3f !== Number['NEGATIVE_INFINITY'] ? _0x2c59fd[_0x47da76(0x33f)](_0x33db8e[_0x47da76(0x2b8)] * _0x44fc3f, _0x310d4e[_0x47da76(0x349)]) : _0x2c59fd[_0x47da76(0x33f)](0x0, _0x310d4e[_0x47da76(0x349)]);
                    var _0x36df4d = _0x15cc44[_0x47da76(0x36a)];
                    if (_0x36df4d) {
                        for (_0x5a3165 = 0x0, _0x2f740f = _0x36df4d[_0x47da76(0x205)]; _0x5a3165 < _0x2f740f; _0x5a3165++)
                            _0x36df4d[_0x5a3165][_0x47da76(0x3cd)]();
                    }
                } else
                    console[_0x47da76(0x25a)](_0x47da76(0x3d0) + _0x14410f + '.');
            } else
                console[_0x47da76(0x25a)](_0x47da76(0x3ce) + _0x14410f + '.');
        }
        ['getCurrentAnimatorPlayState'](_0x1b7726 = 0x0) {
            var _0x5bf472 = _0x6027f5;
            return this[_0x5bf472(0x381)][_0x1b7726][_0x5bf472(0x351)];
        }
        get ['avatar']() {
            return this['_avatar'];
        }
        set [_0x6027f5(0x3b6)](_0x169e65) {
            var _0x3ae116 = _0x6027f5;
            if (this['_avatar'] !== _0x169e65) {
                if (this[_0x3ae116(0x392)] = _0x169e65, _0x169e65)
                    this[_0x3ae116(0x3d1)](), this[_0x3ae116(0x38b)][_0x3ae116(0x3d2)](this, _0x169e65);
                else {
                    var _0xbc983d = this[_0x3ae116(0x38b)][_0x3ae116(0x30f)];
                    this['owner'][_0x3ae116(0x3d2)](this, _0xbc983d ? _0xbc983d['_hierarchyAnimator'][_0x3ae116(0x392)] : null);
                }
            }
        }
        [_0x6027f5(0x3d3)](_0x1085b2, _0x336fa2, _0x1ee8b9) {
            var _0x2f45b5 = _0x6027f5, _0x34ff5b = this[_0x2f45b5(0x37f)][_0x336fa2];
            if (_0x1ee8b9)
                _0x34ff5b || (this[_0x2f45b5(0x37f)][_0x336fa2] = _0x34ff5b = []), _0x34ff5b[_0x2f45b5(0x2ac)](_0x1085b2);
            else {
                var _0xaadc81 = _0x34ff5b['indexOf'](_0x1085b2);
                _0x34ff5b[_0x2f45b5(0x33a)](_0xaadc81, 0x1);
            }
        }
        ['_getAvatarOwnersAndInitDatasAsync']() {
            var _0x3667b3 = _0x6027f5;
            for (var _0x4c4669 = 0x0, _0x3f2e6d = this['_controllerLayers'][_0x3667b3(0x205)]; _0x4c4669 < _0x3f2e6d; _0x4c4669++)
                for (var _0x35ac8d = this[_0x3667b3(0x381)][_0x4c4669]['_states'], _0x165831 = 0x0, _0x1d41d0 = _0x35ac8d[_0x3667b3(0x205)]; _0x165831 < _0x1d41d0; _0x165831++)
                    this[_0x3667b3(0x362)](_0x35ac8d[_0x165831]);
            for (var _0x275ec6 in (this[_0x3667b3(0x392)]['_cloneDatasToAnimator'](this), this[_0x3667b3(0x37f)])) {
                var _0x504530 = this['_linkAvatarSpritesData'][_0x275ec6];
                if (_0x504530) {
                    for (var _0x4299cf = 0x0, _0x1627d3 = _0x504530[_0x3667b3(0x205)]; _0x4299cf < _0x1627d3; _0x4299cf++)
                        this[_0x3667b3(0x3d4)](_0x504530[_0x4299cf], _0x275ec6, !0x0);
                }
            }
        }
        [_0x6027f5(0x3d4)](_0x3db2b7, _0x13e7e3, _0x154504) {
            var _0x4db510 = _0x6027f5;
            if (this[_0x4db510(0x392)]) {
                var _0x2c3117 = this[_0x4db510(0x393)][_0x13e7e3];
                if (_0x2c3117) {
                    if (_0x154504) {
                        _0x3db2b7[_0x4db510(0x3d5)]['_dummy'] = _0x2c3117[_0x4db510(0x3d6)], this[_0x4db510(0x3d7)][_0x4db510(0x2ac)](_0x3db2b7);
                        var _0x33f697 = _0x2c3117[_0x4db510(0x3d6)], _0x1a5c73 = _0x3db2b7[_0x4db510(0x3d6)];
                        if (!_0x1a5c73[_0x4db510(0x38b)]['isStatic'] && _0x33f697) {
                            var _0x5263b4 = _0x1a5c73[_0x4db510(0x3d8)], _0x54551c = this[_0x4db510(0x38b)][_0x4db510(0x3d5)][_0x4db510(0x30f)];
                            if (_0x54551c)
                                _0x3acd08[_0x4db510(0x306)](_0x54551c['worldMatrix'], _0x33f697[_0x4db510(0x3d9)](), _0x5263b4);
                            else {
                                for (var _0x19d3ac = _0x5263b4['elements'], _0x59dadd = _0x33f697[_0x4db510(0x3d9)](), _0x241ef0 = 0x0; _0x241ef0 < 0x10; _0x241ef0++)
                                    _0x19d3ac[_0x241ef0] = _0x59dadd[_0x241ef0];
                            }
                            _0x1a5c73['worldMatrix'] = _0x5263b4;
                        }
                    } else
                        _0x3db2b7[_0x4db510(0x3d5)][_0x4db510(0x3da)] = null, this['_linkAvatarSprites'][_0x4db510(0x33a)](this[_0x4db510(0x3d7)]['indexOf'](_0x3db2b7), 0x1);
                }
            }
        }
        [_0x6027f5(0x3c5)]() {
            var _0x211a03 = _0x6027f5;
            for (var _0x35561c = 0x0, _0x4b458e = this[_0x211a03(0x3d7)]['length']; _0x35561c < _0x4b458e; _0x35561c++) {
                var _0x25ca48 = this[_0x211a03(0x3d7)][_0x35561c], _0x55de63 = _0x25ca48[_0x211a03(0x3d6)][_0x211a03(0x3da)], _0x4da6f4 = _0x25ca48[_0x211a03(0x3d6)];
                if (!_0x4da6f4['owner'][_0x211a03(0x3db)] && _0x55de63) {
                    var _0x433eea = _0x4da6f4[_0x211a03(0x3d8)], _0x315416 = this[_0x211a03(0x38b)][_0x211a03(0x3d5)];
                    _0x3acd08[_0x211a03(0x306)](_0x315416[_0x211a03(0x3d8)], _0x55de63['getWorldMatrix'](), _0x433eea), _0x4da6f4[_0x211a03(0x3d8)] = _0x433eea;
                }
            }
        }
        ['linkSprite3DToAvatarNode'](_0x8cfdd3, _0x401633) {
            var _0x495435 = _0x6027f5;
            return this[_0x495435(0x3d3)](_0x401633, _0x8cfdd3, !0x0), this[_0x495435(0x3d4)](_0x401633, _0x8cfdd3, !0x0), !0x0;
        }
        ['unLinkSprite3DToAvatarNode'](_0x2b772b) {
            var _0x399c94 = _0x6027f5, _0xda8045 = _0x2b772b[_0x399c94(0x3d6)][_0x399c94(0x3da)];
            if (_0xda8045) {
                var _0x2b6609 = _0xda8045[_0x399c94(0x3dc)][_0x399c94(0x2b7)];
                return this['_isLinkSpriteToAnimationNodeData'](_0x2b772b, _0x2b6609, !0x1), this[_0x399c94(0x3d4)](_0x2b772b, _0x2b6609, !0x1), !0x0;
            }
            return !0x1;
        }
        ['_updateAnimationNodeWorldMatix'](_0x3e88c5, _0x530c22, _0x296609, _0x1b6fe4, _0x2fbdbf) {
            var _0x45b565 = _0x6027f5;
            _0x387b86['LayaGL'][_0x45b565(0x304)][_0x45b565(0x3dd)](_0x3e88c5, _0x530c22, _0x296609, _0x2fbdbf, _0x1b6fe4);
        }
    }
    _0x493c7d[_0x6027f5(0x3a1)] = new _0x3697cd(), _0x493c7d[_0x6027f5(0x3de)] = new _0x528999(), _0x493c7d[_0x6027f5(0x3df)] = 0x0, _0x493c7d[_0x6027f5(0x3c2)] = 0x2;
    class _0x50b403 {
        constructor() {
            var _0x5bf1c3 = _0x6027f5;
            this['invertY'] = !0x1, this[_0x5bf1c3(0x3e0)] = _0x5bf1c3(0x3e1);
        }
    }
    _0x50b403[_0x6027f5(0x3e2)] = new _0x50b403();
    class _0x26547d extends _0x387b86[_0x6027f5(0x3e3)] {
        constructor(_0xe74cb2, _0x37f29f, _0x2f34fb = _0x387b86[_0x6027f5(0x314)][_0x6027f5(0x2da)], _0x3fc085 = _0x387b86[_0x6027f5(0x3e4)][_0x6027f5(0x3e5)], _0x3797c3 = 0x1) {
            var _0x518a36 = _0x6027f5;
            super(_0x2f34fb, !0x1), this['_inPool'] = !0x1, this[_0x518a36(0x3e6)] = 0x1, this[_0x518a36(0x3e7)] = !0x1, this[_0x518a36(0x3e8)] = !0x1, this[_0x518a36(0x3e9)] = _0x387b86['LayaGL'][_0x518a36(0x304)]['TEXTURE_2D'], this['_width'] = _0xe74cb2, this[_0x518a36(0x3ea)] = _0x37f29f, this[_0x518a36(0x3eb)] = _0x3fc085, this[_0x518a36(0x3ec)] = 0x1, this[_0x518a36(0x3e6)] = _0x3797c3, this['_create'](_0xe74cb2, _0x37f29f);
        }
        static get [_0x6027f5(0x3ed)]() {
            var _0x11476c = _0x6027f5;
            return _0x26547d[_0x11476c(0x3ee)];
        }
        static [_0x6027f5(0x3ef)](_0xbe2ca5, _0x386840, _0x4611c3 = _0x387b86[_0x6027f5(0x314)][_0x6027f5(0x2da)], _0x3fbfb5 = _0x387b86['RenderTextureDepthFormat'][_0x6027f5(0x3e5)], _0xfdf449 = 0x1) {
            var _0x24a1e0 = _0x6027f5;
            for (var _0x5e3f96, _0x5e4431 = 0x0, _0xb78ad8 = _0x26547d['_pool'][_0x24a1e0(0x205)]; _0x5e4431 < _0xb78ad8; _0x5e4431++)
                if ((_0x5e3f96 = _0x26547d['_pool'][_0x5e4431])[_0x24a1e0(0x3f0)] == _0xbe2ca5 && _0x5e3f96[_0x24a1e0(0x3ea)] == _0x386840 && _0x5e3f96[_0x24a1e0(0x3f1)] == _0x4611c3 && _0x5e3f96[_0x24a1e0(0x3eb)] == _0x3fbfb5 && _0x5e3f96[_0x24a1e0(0x3e6)] == _0xfdf449) {
                    _0x5e3f96[_0x24a1e0(0x3f2)] = !0x1;
                    var _0x4ff361 = _0x26547d['_pool'][_0xb78ad8 - 0x1];
                    return _0x26547d[_0x24a1e0(0x3f3)][_0x5e4431] = _0x4ff361, _0x26547d[_0x24a1e0(0x3f3)]['length'] -= 0x1, _0x5e3f96;
                }
            return (_0x5e3f96 = new _0x26547d(_0xbe2ca5, _0x386840, _0x4611c3, _0x3fbfb5, _0xfdf449))[_0x24a1e0(0x31d)] = !0x0, _0x5e3f96;
        }
        static [_0x6027f5(0x3f4)](_0x5196a1) {
            var _0x18f3d2 = _0x6027f5;
            _0x5196a1['_inPool'] || (_0x26547d['_pool'][_0x18f3d2(0x2ac)](_0x5196a1), _0x5196a1[_0x18f3d2(0x3f2)] = !0x0);
        }
        get [_0x6027f5(0x3f5)]() {
            var _0x2111df = _0x6027f5;
            return this[_0x2111df(0x3eb)];
        }
        get [_0x6027f5(0x3f6)]() {
            var _0x36b495 = _0x6027f5;
            return _0x387b86[_0x36b495(0x2de)][_0x36b495(0x3f7)];
        }
        get ['mulSampler']() {
            return this['_mulSampler'];
        }
        [_0x6027f5(0x3f8)](_0x4f1e4f, _0x5197e9) {
            var _0x5928ae = _0x6027f5, _0x353998 = _0x387b86[_0x5928ae(0x303)][_0x5928ae(0x304)], _0x38092e = _0x353998, _0x327ccc = this[_0x5928ae(0x3e9)], _0xfa7778 = _0x387b86[_0x5928ae(0x303)]['layaGPUInstance'], _0x463f56 = _0xfa7778[_0x5928ae(0x3f9)], _0x29d1ee = this['_format'];
            if (this['_frameBuffer'] = _0x353998[_0x5928ae(0x3fa)](), _0x353998['bindFramebuffer'](_0x353998[_0x5928ae(0x3fb)], this[_0x5928ae(0x3fc)]), this[_0x5928ae(0x3e7)] = _0x463f56 && this['_mulSampler'] > 0x1, _0x29d1ee !== _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x3fd)] && _0x29d1ee !== _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x3fe)]) {
                if (this['_mulSamplerRT']) {
                    switch (this[_0x5928ae(0x3ff)] = _0x38092e[_0x5928ae(0x400)](), _0x38092e[_0x5928ae(0x401)](_0x38092e[_0x5928ae(0x402)], this['_mulRenderBuffer']), _0x29d1ee) {
                    case _0x387b86[_0x5928ae(0x314)]['R8G8B8']:
                        _0x38092e['renderbufferStorageMultisample'](_0x38092e[_0x5928ae(0x402)], this['_mulSampler'], _0x38092e[_0x5928ae(0x403)], _0x4f1e4f, _0x5197e9);
                        break;
                    case _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x404)]:
                        _0x38092e[_0x5928ae(0x405)](_0x38092e[_0x5928ae(0x402)], this[_0x5928ae(0x3e6)], _0x38092e[_0x5928ae(0x406)], _0x4f1e4f, _0x5197e9);
                        break;
                    case _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x2db)]:
                        _0x38092e[_0x5928ae(0x405)](_0x38092e[_0x5928ae(0x402)], this[_0x5928ae(0x3e6)], _0x38092e['ALPHA'], _0x4f1e4f, _0x5197e9);
                        break;
                    case _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x315)]:
                        _0x38092e['renderbufferStorageMultisample'](_0x38092e[_0x5928ae(0x402)], this[_0x5928ae(0x3e6)], _0x38092e[_0x5928ae(0x407)], _0x4f1e4f, _0x5197e9);
                    }
                    _0x38092e[_0x5928ae(0x408)](_0x353998[_0x5928ae(0x3fb)], _0x353998[_0x5928ae(0x409)], _0x353998[_0x5928ae(0x402)], this[_0x5928ae(0x3ff)]);
                }
                switch (_0x387b86[_0x5928ae(0x40a)][_0x5928ae(0x40b)](_0x353998, _0x327ccc, this[_0x5928ae(0x40c)]), _0x29d1ee) {
                case _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x2da)]:
                    _0x463f56 ? _0x38092e['texStorage2D'](_0x327ccc, this[_0x5928ae(0x3ec)], _0x38092e[_0x5928ae(0x403)], _0x4f1e4f, _0x5197e9) : _0x353998['texImage2D'](_0x327ccc, 0x0, _0x353998[_0x5928ae(0x40d)], _0x4f1e4f, _0x5197e9, 0x0, _0x353998[_0x5928ae(0x40d)], _0x353998[_0x5928ae(0x40e)], null);
                    break;
                case _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x404)]:
                    _0x463f56 ? _0x38092e[_0x5928ae(0x40f)](_0x327ccc, this[_0x5928ae(0x3ec)], _0x38092e[_0x5928ae(0x406)], _0x4f1e4f, _0x5197e9) : _0x353998['texImage2D'](_0x327ccc, 0x0, _0x353998['RGBA'], _0x4f1e4f, _0x5197e9, 0x0, _0x353998['RGBA'], _0x353998[_0x5928ae(0x40e)], null);
                    break;
                case _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x2db)]:
                    _0x463f56 ? _0x38092e[_0x5928ae(0x40f)](_0x327ccc, this[_0x5928ae(0x410)], _0x38092e['R8'], _0x4f1e4f, _0x5197e9) : _0x353998[_0x5928ae(0x411)](_0x327ccc, 0x0, _0x353998[_0x5928ae(0x412)], _0x4f1e4f, _0x5197e9, 0x0, _0x353998[_0x5928ae(0x412)], _0x353998[_0x5928ae(0x40e)], null);
                    break;
                case _0x387b86['RenderTextureFormat'][_0x5928ae(0x315)]:
                    _0x463f56 ? _0x38092e[_0x5928ae(0x40f)](_0x327ccc, this[_0x5928ae(0x3ec)], _0x38092e[_0x5928ae(0x407)], _0x4f1e4f, _0x5197e9) : _0x353998[_0x5928ae(0x411)](_0x327ccc, 0x0, _0x353998[_0x5928ae(0x413)], _0x4f1e4f, _0x5197e9, 0x0, _0x353998[_0x5928ae(0x413)], _0xfa7778['_oesTextureHalfFloat'][_0x5928ae(0x414)], null);
                }
                this[_0x5928ae(0x3e7)] ? (this[_0x5928ae(0x415)] = _0x38092e[_0x5928ae(0x3fa)](), _0x353998['bindFramebuffer'](_0x353998['FRAMEBUFFER'], this[_0x5928ae(0x415)]), _0x353998['framebufferTexture2D'](_0x38092e[_0x5928ae(0x3fb)], _0x38092e[_0x5928ae(0x409)], _0x38092e[_0x5928ae(0x416)], this[_0x5928ae(0x40c)], 0x0)) : _0x353998[_0x5928ae(0x417)](_0x353998[_0x5928ae(0x3fb)], _0x353998[_0x5928ae(0x409)], _0x353998[_0x5928ae(0x416)], this[_0x5928ae(0x40c)], 0x0);
            }
            if (_0x29d1ee == _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x3fd)] || _0x29d1ee == _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x3fe)]) {
                switch (_0x353998[_0x5928ae(0x418)](_0x353998[_0x5928ae(0x3fb)], this[_0x5928ae(0x3fc)]), _0x387b86[_0x5928ae(0x40a)][_0x5928ae(0x40b)](_0x353998, _0x327ccc, this[_0x5928ae(0x40c)]), this[_0x5928ae(0x2e0)] = _0x387b86[_0x5928ae(0x2e1)]['Point'], this['_depthStencilFormat']) {
                case _0x387b86['RenderTextureDepthFormat'][_0x5928ae(0x3e5)]:
                    _0x463f56 ? _0x38092e[_0x5928ae(0x40f)](_0x327ccc, this[_0x5928ae(0x3ec)], _0x38092e[_0x5928ae(0x419)], _0x4f1e4f, _0x5197e9) : _0x353998[_0x5928ae(0x411)](_0x327ccc, 0x0, _0x353998[_0x5928ae(0x41a)], _0x4f1e4f, _0x5197e9, 0x0, _0x353998[_0x5928ae(0x41a)], _0x353998['UNSIGNED_SHORT'], null), _0x353998['framebufferTexture2D'](_0x353998['FRAMEBUFFER'], _0x353998[_0x5928ae(0x41b)], _0x353998[_0x5928ae(0x416)], this[_0x5928ae(0x40c)], 0x0);
                    break;
                case _0x387b86[_0x5928ae(0x3e4)]['DEPTHSTENCIL_24_8']:
                    _0x463f56 ? _0x38092e[_0x5928ae(0x40f)](_0x327ccc, this[_0x5928ae(0x3ec)], _0x38092e[_0x5928ae(0x41c)], _0x4f1e4f, _0x5197e9) : _0x353998['texImage2D'](_0x327ccc, 0x0, _0x353998[_0x5928ae(0x41d)], _0x4f1e4f, _0x5197e9, 0x0, _0x353998['DEPTH_STENCIL'], _0xfa7778[_0x5928ae(0x41e)][_0x5928ae(0x41f)], null), _0x353998[_0x5928ae(0x417)](_0x353998[_0x5928ae(0x3fb)], _0x353998[_0x5928ae(0x420)], _0x353998[_0x5928ae(0x416)], this[_0x5928ae(0x40c)], 0x0);
                    break;
                default:
                    throw _0x5928ae(0x421);
                }
                _0x463f56 && _0x29d1ee == _0x387b86[_0x5928ae(0x314)][_0x5928ae(0x3fe)] && _0x38092e['texParameteri'](_0x327ccc, _0x38092e['TEXTURE_COMPARE_MODE'], _0x38092e[_0x5928ae(0x422)]);
            } else {
                if (_0x353998[_0x5928ae(0x418)](_0x353998[_0x5928ae(0x3fb)], this['_frameBuffer']), this['_depthStencilFormat'] !== _0x387b86[_0x5928ae(0x3e4)]['DEPTHSTENCIL_NONE']) {
                    if (this[_0x5928ae(0x423)] = _0x353998[_0x5928ae(0x400)](), _0x353998[_0x5928ae(0x401)](_0x353998[_0x5928ae(0x402)], this['_depthStencilBuffer']), this[_0x5928ae(0x3e7)])
                        switch (this['_depthStencilFormat']) {
                        case _0x387b86[_0x5928ae(0x3e4)][_0x5928ae(0x3e5)]:
                            _0x38092e['renderbufferStorageMultisample'](_0x353998[_0x5928ae(0x402)], this[_0x5928ae(0x3e6)], _0x38092e['DEPTH_COMPONENT16'], _0x4f1e4f, _0x5197e9), _0x38092e['framebufferRenderbuffer'](_0x353998[_0x5928ae(0x3fb)], _0x38092e[_0x5928ae(0x41b)], _0x353998['RENDERBUFFER'], this[_0x5928ae(0x423)]);
                            break;
                        case _0x387b86[_0x5928ae(0x3e4)][_0x5928ae(0x424)]:
                            _0x38092e[_0x5928ae(0x405)](_0x353998['RENDERBUFFER'], this[_0x5928ae(0x3e6)], _0x38092e[_0x5928ae(0x425)], _0x4f1e4f, _0x5197e9), _0x38092e['framebufferRenderbuffer'](_0x353998[_0x5928ae(0x3fb)], _0x38092e[_0x5928ae(0x426)], _0x353998[_0x5928ae(0x402)], this['_depthStencilBuffer']);
                            break;
                        case _0x387b86[_0x5928ae(0x3e4)][_0x5928ae(0x427)]:
                            _0x38092e['renderbufferStorageMultisample'](_0x353998[_0x5928ae(0x402)], this['_mulSampler'], _0x38092e['DEPTH_STENCIL'], _0x4f1e4f, _0x5197e9), _0x38092e['framebufferRenderbuffer'](_0x353998[_0x5928ae(0x3fb)], _0x38092e[_0x5928ae(0x420)], _0x353998[_0x5928ae(0x402)], this['_depthStencilBuffer']);
                            break;
                        default:
                            throw _0x5928ae(0x428);
                        }
                    else
                        switch (this['_depthStencilFormat']) {
                        case _0x387b86[_0x5928ae(0x3e4)]['DEPTH_16']:
                            _0x353998['renderbufferStorage'](_0x353998[_0x5928ae(0x402)], _0x353998['DEPTH_COMPONENT16'], _0x4f1e4f, _0x5197e9), _0x353998[_0x5928ae(0x408)](_0x353998[_0x5928ae(0x3fb)], _0x38092e[_0x5928ae(0x41b)], _0x353998[_0x5928ae(0x402)], this['_depthStencilBuffer']);
                            break;
                        case _0x387b86['RenderTextureDepthFormat'][_0x5928ae(0x424)]:
                            _0x353998[_0x5928ae(0x429)](_0x353998[_0x5928ae(0x402)], _0x353998[_0x5928ae(0x425)], _0x4f1e4f, _0x5197e9), _0x353998[_0x5928ae(0x408)](_0x353998['FRAMEBUFFER'], _0x353998[_0x5928ae(0x426)], _0x353998[_0x5928ae(0x402)], this['_depthStencilBuffer']);
                            break;
                        case _0x387b86['RenderTextureDepthFormat']['DEPTHSTENCIL_24_8']:
                            _0x353998[_0x5928ae(0x429)](_0x353998[_0x5928ae(0x402)], _0x353998[_0x5928ae(0x41d)], _0x4f1e4f, _0x5197e9), _0x353998[_0x5928ae(0x408)](_0x353998[_0x5928ae(0x3fb)], _0x353998[_0x5928ae(0x420)], _0x353998['RENDERBUFFER'], this[_0x5928ae(0x423)]);
                            break;
                        default:
                            throw _0x5928ae(0x428);
                        }
                    _0x353998[_0x5928ae(0x401)](_0x353998[_0x5928ae(0x402)], null);
                }
            }
            _0x353998[_0x5928ae(0x418)](_0x353998[_0x5928ae(0x3fb)], null), this['_setWarpMode'](_0x353998[_0x5928ae(0x42a)], this[_0x5928ae(0x42b)]), this[_0x5928ae(0x42c)](_0x353998[_0x5928ae(0x42d)], this['_wrapModeV']), this[_0x5928ae(0x42e)](this[_0x5928ae(0x42f)]), this[_0x5928ae(0x430)](this['_anisoLevel']), this[_0x5928ae(0x431)] = !0x0, this[_0x5928ae(0x432)](), this[_0x5928ae(0x433)](_0x4f1e4f * _0x5197e9 * 0x4);
        }
        ['_start']() {
            var _0x2e85b5 = _0x6027f5, _0x1a6cc8 = _0x387b86[_0x2e85b5(0x303)][_0x2e85b5(0x304)];
            _0x1a6cc8[_0x2e85b5(0x418)](_0x1a6cc8[_0x2e85b5(0x3fb)], this[_0x2e85b5(0x3fc)]), _0x26547d[_0x2e85b5(0x3ee)] = this, this[_0x2e85b5(0x3e8)] && (_0x50b403['_instance'][_0x2e85b5(0x434)] = !0x0), this['_readyed'] = !0x1;
        }
        [_0x6027f5(0x435)]() {
            var _0x4ce04a = _0x6027f5, _0x2a9cc5 = _0x387b86[_0x4ce04a(0x303)][_0x4ce04a(0x304)], _0x557aa9 = _0x2a9cc5;
            this[_0x4ce04a(0x3e7)] && (_0x557aa9[_0x4ce04a(0x418)](_0x557aa9[_0x4ce04a(0x436)], this[_0x4ce04a(0x3fc)]), _0x557aa9[_0x4ce04a(0x418)](_0x557aa9[_0x4ce04a(0x437)], this[_0x4ce04a(0x415)]), _0x557aa9['clearBufferfv'](_0x557aa9[_0x4ce04a(0x438)], 0x0, [
                0x0,
                0x0,
                0x0,
                0x0
            ]), _0x557aa9['blitFramebuffer'](0x0, 0x0, this[_0x4ce04a(0x313)], this[_0x4ce04a(0x439)], 0x0, 0x0, this[_0x4ce04a(0x3f0)], this[_0x4ce04a(0x3ea)], _0x557aa9['COLOR_BUFFER_BIT'], _0x2a9cc5[_0x4ce04a(0x43a)])), _0x2a9cc5[_0x4ce04a(0x418)](_0x2a9cc5[_0x4ce04a(0x3fb)], null), _0x26547d['_currentActive'] = null, this[_0x4ce04a(0x3e8)] && (_0x50b403[_0x4ce04a(0x3e2)][_0x4ce04a(0x434)] = !0x1), this[_0x4ce04a(0x431)] = !0x0;
        }
        [_0x6027f5(0x319)](_0x5d5e93, _0x46ac0c, _0x3b37c9, _0x1153cf, _0x27f3cb) {
            var _0x46e988 = _0x6027f5;
            if (_0x387b86[_0x46e988(0x31a)]['isConchApp'] && 0x2 == window['conchConfig'][_0x46e988(0x43b)])
                throw _0x46e988(0x43c);
            var _0xdf011f = _0x387b86[_0x46e988(0x303)][_0x46e988(0x304)];
            if (_0xdf011f[_0x46e988(0x418)](_0xdf011f[_0x46e988(0x3fb)], this['_frameBuffer']), !(_0xdf011f[_0x46e988(0x43d)](_0xdf011f[_0x46e988(0x3fb)]) === _0xdf011f[_0x46e988(0x43e)]))
                return _0xdf011f['bindFramebuffer'](_0xdf011f[_0x46e988(0x3fb)], null), null;
            switch (this[_0x46e988(0x2d8)]) {
            case _0x387b86[_0x46e988(0x314)][_0x46e988(0x2da)]:
            case _0x387b86[_0x46e988(0x314)][_0x46e988(0x404)]:
                _0xdf011f['readPixels'](_0x5d5e93, _0x46ac0c, _0x3b37c9, _0x1153cf, _0xdf011f[_0x46e988(0x413)], _0xdf011f[_0x46e988(0x40e)], _0x27f3cb);
                break;
            case _0x387b86[_0x46e988(0x314)][_0x46e988(0x315)]:
                _0xdf011f[_0x46e988(0x43f)](_0x5d5e93, _0x46ac0c, _0x3b37c9, _0x1153cf, _0xdf011f[_0x46e988(0x413)], _0xdf011f['FLOAT'], _0x27f3cb);
            }
            return _0xdf011f[_0x46e988(0x418)](_0xdf011f[_0x46e988(0x3fb)], null), _0x27f3cb;
        }
        [_0x6027f5(0x440)]() {
            var _0x21692b = _0x6027f5;
            if (this[_0x21692b(0x3fc)]) {
                var _0x4b93a0 = _0x387b86['LayaGL'][_0x21692b(0x304)];
                _0x4b93a0[_0x21692b(0x441)](this[_0x21692b(0x40c)]), _0x4b93a0[_0x21692b(0x442)](this[_0x21692b(0x3fc)]), _0x4b93a0['deleteRenderbuffer'](this[_0x21692b(0x423)]), this[_0x21692b(0x40c)] = null, this[_0x21692b(0x3fc)] = null, this[_0x21692b(0x423)] = null, this[_0x21692b(0x433)](0x0);
            }
        }
        [_0x6027f5(0x443)](_0x2f7c5a, _0x5393fa, _0x56165e, _0x2cebf2, _0x4b8234) {
            var _0xab4ac9 = _0x6027f5, _0x5f2de7 = _0x387b86[_0xab4ac9(0x303)][_0xab4ac9(0x304)];
            _0x5f2de7[_0xab4ac9(0x418)](_0x5f2de7[_0xab4ac9(0x3fb)], this[_0xab4ac9(0x3fc)]), _0x5f2de7[_0xab4ac9(0x444)](_0x2f7c5a, _0x5393fa, _0x56165e, _0x2cebf2, _0x5f2de7[_0xab4ac9(0x413)], _0x5f2de7[_0xab4ac9(0x40e)], function (_0x21fb37) {
                _0x4b8234(new Uint8Array(_0x21fb37));
            }), _0x5f2de7[_0xab4ac9(0x418)](_0x5f2de7[_0xab4ac9(0x3fb)], null);
        }
    }
    _0x26547d['_pool'] = [];
    class _0x1ff4c5 {
        constructor() {
            var _0x46b5aa = _0x6027f5;
            this[_0x46b5aa(0x445)] = [], this[_0x46b5aa(0x446)] = 0x0;
        }
        ['_intersectionDefineDatas'](_0x409112) {
            var _0x242946 = _0x6027f5;
            for (var _0x224f8f = _0x409112['_mask'], _0x4a6bea = this[_0x242946(0x445)], _0x65a9f = this[_0x242946(0x446)] - 0x1; _0x65a9f >= 0x0; _0x65a9f--) {
                var _0x4df307 = _0x4a6bea[_0x65a9f] & _0x224f8f[_0x65a9f];
                0x0 == _0x4df307 && _0x65a9f == this[_0x242946(0x446)] - 0x1 ? this[_0x242946(0x446)]-- : _0x4a6bea[_0x65a9f] = _0x4df307;
            }
        }
        [_0x6027f5(0x207)](_0x1c2772) {
            var _0x405391 = _0x6027f5, _0x59fd33 = _0x1c2772[_0x405391(0x447)], _0x9f01f1 = _0x59fd33 + 0x1, _0x33ec90 = this[_0x405391(0x445)], _0x453c90 = this[_0x405391(0x446)];
            if (_0x453c90 < _0x9f01f1) {
                for (_0x33ec90[_0x405391(0x205)] < _0x9f01f1 && (_0x33ec90[_0x405391(0x205)] = _0x9f01f1); _0x453c90 < _0x59fd33; _0x453c90++)
                    _0x33ec90[_0x453c90] = 0x0;
                _0x33ec90[_0x59fd33] = _0x1c2772[_0x405391(0x448)], this['_length'] = _0x9f01f1;
            } else
                _0x33ec90[_0x59fd33] |= _0x1c2772[_0x405391(0x448)];
        }
        [_0x6027f5(0x3b4)](_0x45bb2c) {
            var _0x13bee9 = _0x6027f5, _0x12edc0 = _0x45bb2c[_0x13bee9(0x447)], _0x2a15a8 = this['_mask'], _0x2358cf = this[_0x13bee9(0x446)] - 0x1;
            if (!(_0x12edc0 > _0x2358cf)) {
                var _0x3778cb = _0x2a15a8[_0x12edc0] & ~_0x45bb2c[_0x13bee9(0x448)];
                _0x12edc0 == _0x2358cf && 0x0 === _0x3778cb ? this[_0x13bee9(0x446)]-- : _0x2a15a8[_0x12edc0] = _0x3778cb;
            }
        }
        [_0x6027f5(0x449)](_0x401f65) {
            var _0x5c66dd = _0x6027f5, _0x2eb300 = _0x401f65[_0x5c66dd(0x445)], _0x303dbc = _0x401f65[_0x5c66dd(0x446)], _0xac4e8e = this[_0x5c66dd(0x445)], _0x4720b6 = this[_0x5c66dd(0x446)];
            if (_0x4720b6 < _0x303dbc) {
                _0xac4e8e[_0x5c66dd(0x205)] = _0x303dbc;
                for (var _0x30ad62 = 0x0; _0x30ad62 < _0x4720b6; _0x30ad62++)
                    _0xac4e8e[_0x30ad62] |= _0x2eb300[_0x30ad62];
                for (; _0x30ad62 < _0x303dbc; _0x30ad62++)
                    _0xac4e8e[_0x30ad62] = _0x2eb300[_0x30ad62];
                this['_length'] = _0x303dbc;
            } else {
                for (_0x30ad62 = 0x0; _0x30ad62 < _0x303dbc; _0x30ad62++)
                    _0xac4e8e[_0x30ad62] |= _0x2eb300[_0x30ad62];
            }
        }
        [_0x6027f5(0x44a)](_0x59aa43) {
            var _0x43a1d2 = _0x6027f5;
            for (var _0x3a987c = _0x59aa43[_0x43a1d2(0x445)], _0x5eb494 = this['_mask'], _0x4070a8 = this['_length'] - 0x1, _0x56a644 = Math[_0x43a1d2(0x212)](_0x59aa43[_0x43a1d2(0x446)], _0x4070a8); _0x56a644 >= 0x0; _0x56a644--) {
                var _0x2524ca = _0x5eb494[_0x56a644] & ~_0x3a987c[_0x56a644];
                _0x56a644 == _0x4070a8 && 0x0 === _0x2524ca ? (_0x4070a8--, this[_0x43a1d2(0x446)]--) : _0x5eb494[_0x56a644] = _0x2524ca;
            }
        }
        [_0x6027f5(0x44b)](_0x387c51) {
            var _0x5348c3 = _0x6027f5, _0x3eb3c2 = _0x387c51[_0x5348c3(0x447)];
            return !(_0x3eb3c2 >= this[_0x5348c3(0x446)]) && 0x0 != (this[_0x5348c3(0x445)][_0x3eb3c2] & _0x387c51[_0x5348c3(0x448)]);
        }
        [_0x6027f5(0x44c)]() {
            var _0x41e6c3 = _0x6027f5;
            this[_0x41e6c3(0x446)] = 0x0;
        }
        [_0x6027f5(0x1fc)](_0x8f631c) {
            var _0x2e9f8f = _0x6027f5, _0x2eaded = _0x8f631c, _0x348fe7 = _0x2eaded['_mask'], _0xc4153d = this[_0x2e9f8f(0x445)], _0x228b60 = this[_0x2e9f8f(0x446)];
            _0x348fe7[_0x2e9f8f(0x205)] = _0x228b60;
            for (var _0x23be3b = 0x0; _0x23be3b < _0x228b60; _0x23be3b++)
                _0x348fe7[_0x23be3b] = _0xc4153d[_0x23be3b];
            _0x2eaded[_0x2e9f8f(0x446)] = _0x228b60;
        }
        [_0x6027f5(0x1fd)]() {
            var _0x135260 = new _0x1ff4c5();
            return this['cloneTo'](_0x135260), _0x135260;
        }
    }
    class _0x2ce777 extends _0x387b86['Buffer'] {
        constructor(_0x21424c, _0x5cd8f4, _0x1a40c8 = !0x1) {
            var _0x3faffd = _0x6027f5;
            super(), this['_vertexDeclaration'] = null, this[_0x3faffd(0x44d)] = null;
            var _0x5abe08 = _0x387b86['LayaGL'][_0x3faffd(0x304)];
            this[_0x3faffd(0x44e)] = _0x5cd8f4, this[_0x3faffd(0x44f)] = _0x5abe08['ARRAY_BUFFER'], this[_0x3faffd(0x450)] = _0x1a40c8, this[_0x3faffd(0x451)] = _0x21424c, this[_0x3faffd(0x452)](), _0x5abe08['bufferData'](this[_0x3faffd(0x44f)], this[_0x3faffd(0x451)], this[_0x3faffd(0x44e)]), _0x1a40c8 && (this[_0x3faffd(0x453)] = new Uint8Array(_0x21424c), this['_float32Reader'] = new Float32Array(this['_buffer'][_0x3faffd(0x454)]));
        }
        get ['vertexDeclaration']() {
            var _0x3d6f6d = _0x6027f5;
            return this[_0x3d6f6d(0x455)];
        }
        set [_0x6027f5(0x456)](_0x3a5f66) {
            var _0x1f5fda = _0x6027f5;
            this[_0x1f5fda(0x455)] = _0x3a5f66;
        }
        get [_0x6027f5(0x457)]() {
            return this['_canRead'];
        }
        [_0x6027f5(0x452)]() {
            var _0x149f79 = _0x6027f5;
            if (_0x387b86[_0x149f79(0x458)][_0x149f79(0x459)] !== this[_0x149f79(0x45a)]) {
                var _0xa85e71 = _0x387b86[_0x149f79(0x303)][_0x149f79(0x304)];
                return _0xa85e71['bindBuffer'](_0xa85e71[_0x149f79(0x45b)], this[_0x149f79(0x45a)]), _0x387b86[_0x149f79(0x458)][_0x149f79(0x459)] = this['_glBuffer'], !0x0;
            }
            return !0x1;
        }
        ['orphanStorage']() {
            var _0x389d8f = _0x6027f5;
            this[_0x389d8f(0x452)](), _0x387b86[_0x389d8f(0x303)][_0x389d8f(0x304)][_0x389d8f(0x45c)](this[_0x389d8f(0x44f)], this['_byteLength'], this[_0x389d8f(0x44e)]);
        }
        [_0x6027f5(0x45d)](_0x146140, _0x113a57 = 0x0, _0x1b7edd = 0x0, _0x245d62 = Number[_0x6027f5(0x45e)]) {
            var _0x43b276 = _0x6027f5;
            if (this[_0x43b276(0x452)](), 0x0 !== _0x1b7edd || _0x245d62 !== Number[_0x43b276(0x45e)]) {
                var _0x2b1677 = new Uint8Array(_0x146140, _0x1b7edd, _0x245d62);
                _0x387b86[_0x43b276(0x303)]['instance'][_0x43b276(0x45f)](this[_0x43b276(0x44f)], _0x113a57, _0x2b1677), this[_0x43b276(0x450)] && this[_0x43b276(0x453)][_0x43b276(0x31f)](_0x2b1677, _0x113a57);
            } else
                _0x387b86[_0x43b276(0x303)][_0x43b276(0x304)]['bufferSubData'](this[_0x43b276(0x44f)], _0x113a57, _0x146140), this['_canRead'] && this[_0x43b276(0x453)][_0x43b276(0x31f)](new Uint8Array(_0x146140), _0x113a57);
        }
        ['getUint8Data']() {
            var _0x3316f7 = _0x6027f5;
            if (this[_0x3316f7(0x450)])
                return this['_buffer'];
            throw new Error(_0x3316f7(0x460));
        }
        ['getFloat32Data']() {
            var _0x55e735 = _0x6027f5;
            if (this['_canRead'])
                return this[_0x55e735(0x44d)];
            throw new Error(_0x55e735(0x460));
        }
        [_0x6027f5(0x461)]() {
            var _0x4eb631 = _0x6027f5;
            this[_0x4eb631(0x450)] = !0x1, this[_0x4eb631(0x453)] = null, this[_0x4eb631(0x44d)] = null;
        }
        ['destroy']() {
            var _0x2815e0 = _0x6027f5;
            super['destroy'](), this['_buffer'] = null, this[_0x2815e0(0x44d)] = null, this[_0x2815e0(0x455)] = null, this[_0x2815e0(0x451)] = 0x0;
        }
    }
    _0x2ce777[_0x6027f5(0x462)] = 0x0, _0x2ce777[_0x6027f5(0x463)] = 0x1;
    class _0x53b5cc {
        static ['__init__']() {
            var _0x14b26e = _0x6027f5, _0x2cd45c = _0x387b86[_0x14b26e(0x303)][_0x14b26e(0x304)];
            _0x53b5cc[_0x14b26e(0x464)] = {
                'single': [
                    0x1,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'vector2': [
                    0x2,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'vector3': [
                    0x3,
                    _0x2cd45c['FLOAT'],
                    0x0
                ],
                'vector4': [
                    0x4,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'color': [
                    0x4,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'byte4': [
                    0x4,
                    _0x2cd45c[_0x14b26e(0x40e)],
                    0x0
                ],
                'short2': [
                    0x2,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'short4': [
                    0x4,
                    _0x2cd45c['FLOAT'],
                    0x0
                ],
                'normalizedshort2': [
                    0x2,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'normalizedshort4': [
                    0x4,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'halfvector2': [
                    0x2,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ],
                'halfvector4': [
                    0x4,
                    _0x2cd45c[_0x14b26e(0x465)],
                    0x0
                ]
            };
        }
        static [_0x6027f5(0x466)](_0x455dc4) {
            var _0xa84fa7 = _0x6027f5, _0x2419f2 = _0x53b5cc[_0xa84fa7(0x464)][_0x455dc4];
            if (_0x2419f2)
                return _0x2419f2;
            throw _0xa84fa7(0x467);
        }
    }
    _0x53b5cc[_0x6027f5(0x468)] = _0x6027f5(0x469), _0x53b5cc['Vector2'] = _0x6027f5(0x46a), _0x53b5cc[_0x6027f5(0x46b)] = _0x6027f5(0x46c), _0x53b5cc['Vector4'] = _0x6027f5(0x46d), _0x53b5cc[_0x6027f5(0x46e)] = _0x6027f5(0x46f), _0x53b5cc[_0x6027f5(0x470)] = _0x6027f5(0x471), _0x53b5cc['Short2'] = _0x6027f5(0x472), _0x53b5cc['Short4'] = _0x6027f5(0x473), _0x53b5cc[_0x6027f5(0x474)] = _0x6027f5(0x475), _0x53b5cc['NormalizedShort4'] = 'normalizedshort4', _0x53b5cc['HalfVector2'] = _0x6027f5(0x476), _0x53b5cc['HalfVector4'] = _0x6027f5(0x477);
    class _0x6b4d98 {
        constructor(_0x4d738f = 0x1, _0x5cdea2 = 0x0, _0x2060c4 = 0x0, _0x57f231 = 0x0, _0x5d2439 = 0x0, _0x38b580 = 0x1, _0x300bb6 = 0x0, _0x546dd5 = 0x0, _0x60e608 = 0x0, _0x17412e = 0x0, _0x263975 = 0x1, _0x55ef3d = 0x0, _0x3395df = 0x0, _0x117f28 = 0x0, _0x34852c = 0x0, _0x230faa = 0x1, _0x215120 = null) {
            var _0x1484f1 = _0x6027f5, _0x5c72de = this[_0x1484f1(0x1fe)] = _0x215120 || new Float32Array(0x10);
            _0x5c72de[0x0] = _0x4d738f, _0x5c72de[0x1] = _0x5cdea2, _0x5c72de[0x2] = _0x2060c4, _0x5c72de[0x3] = _0x57f231, _0x5c72de[0x4] = _0x5d2439, _0x5c72de[0x5] = _0x38b580, _0x5c72de[0x6] = _0x300bb6, _0x5c72de[0x7] = _0x546dd5, _0x5c72de[0x8] = _0x60e608, _0x5c72de[0x9] = _0x17412e, _0x5c72de[0xa] = _0x263975, _0x5c72de[0xb] = _0x55ef3d, _0x5c72de[0xc] = _0x3395df, _0x5c72de[0xd] = _0x117f28, _0x5c72de[0xe] = _0x34852c, _0x5c72de[0xf] = _0x230faa;
        }
        static [_0x6027f5(0x29b)](_0x5136f5, _0x267d2e) {
            var _0x5857d7 = _0x6027f5, _0x1963f9 = _0x267d2e[_0x5857d7(0x1fe)], _0x5f1d5c = Math[_0x5857d7(0x27f)](_0x5136f5), _0x34fe39 = Math[_0x5857d7(0x278)](_0x5136f5);
            _0x1963f9[0x1] = _0x1963f9[0x2] = _0x1963f9[0x3] = _0x1963f9[0x4] = _0x1963f9[0x7] = _0x1963f9[0x8] = _0x1963f9[0xb] = _0x1963f9[0xc] = _0x1963f9[0xd] = _0x1963f9[0xe] = 0x0, _0x1963f9[0x0] = _0x1963f9[0xf] = 0x1, _0x1963f9[0x5] = _0x1963f9[0xa] = _0x34fe39, _0x1963f9[0x6] = _0x5f1d5c, _0x1963f9[0x9] = -_0x5f1d5c;
        }
        static [_0x6027f5(0x299)](_0x2cbceb, _0x39e29b) {
            var _0x3a087e = _0x6027f5, _0x27e705 = _0x39e29b[_0x3a087e(0x1fe)], _0x1262c0 = Math[_0x3a087e(0x27f)](_0x2cbceb), _0x2cd558 = Math['cos'](_0x2cbceb);
            _0x27e705[0x1] = _0x27e705[0x3] = _0x27e705[0x4] = _0x27e705[0x6] = _0x27e705[0x7] = _0x27e705[0x9] = _0x27e705[0xb] = _0x27e705[0xc] = _0x27e705[0xd] = _0x27e705[0xe] = 0x0, _0x27e705[0x5] = _0x27e705[0xf] = 0x1, _0x27e705[0x0] = _0x27e705[0xa] = _0x2cd558, _0x27e705[0x2] = -_0x1262c0, _0x27e705[0x8] = _0x1262c0;
        }
        static [_0x6027f5(0x478)](_0x14ed8f, _0xc96f2c) {
            var _0xf506bd = _0x6027f5, _0x56ec1a = _0xc96f2c['elements'], _0xe0c9e0 = Math['sin'](_0x14ed8f), _0x3a7899 = Math[_0xf506bd(0x278)](_0x14ed8f);
            _0x56ec1a[0x2] = _0x56ec1a[0x3] = _0x56ec1a[0x6] = _0x56ec1a[0x7] = _0x56ec1a[0x8] = _0x56ec1a[0x9] = _0x56ec1a[0xb] = _0x56ec1a[0xc] = _0x56ec1a[0xd] = _0x56ec1a[0xe] = 0x0, _0x56ec1a[0xa] = _0x56ec1a[0xf] = 0x1, _0x56ec1a[0x0] = _0x56ec1a[0x5] = _0x3a7899, _0x56ec1a[0x1] = _0xe0c9e0, _0x56ec1a[0x4] = -_0xe0c9e0;
        }
        static [_0x6027f5(0x479)](_0x8e5a91, _0x48c8f8, _0x48eb15, _0x347e72) {
            var _0x347589 = _0x6027f5;
            _0x528999[_0x347589(0x287)](_0x8e5a91, _0x48c8f8, _0x48eb15, _0x6b4d98[_0x347589(0x47a)]), _0x6b4d98[_0x347589(0x275)](_0x6b4d98[_0x347589(0x47a)], _0x347e72);
        }
        static [_0x6027f5(0x47b)](_0x399009, _0x387639, _0x210415) {
            var _0x9db53 = _0x6027f5, _0x5c535d = _0x399009['x'], _0x2a08d2 = _0x399009['y'], _0x3b0afe = _0x399009['z'], _0x33a83d = Math[_0x9db53(0x278)](_0x387639), _0x24272d = Math['sin'](_0x387639), _0x1411b2 = _0x5c535d * _0x5c535d, _0xa5b4c9 = _0x2a08d2 * _0x2a08d2, _0x4c74f9 = _0x3b0afe * _0x3b0afe, _0x550f1f = _0x5c535d * _0x2a08d2, _0x5efa91 = _0x5c535d * _0x3b0afe, _0x31e8d8 = _0x2a08d2 * _0x3b0afe, _0x3c7065 = _0x210415[_0x9db53(0x1fe)];
            _0x3c7065[0x3] = _0x3c7065[0x7] = _0x3c7065[0xb] = _0x3c7065[0xc] = _0x3c7065[0xd] = _0x3c7065[0xe] = 0x0, _0x3c7065[0xf] = 0x1, _0x3c7065[0x0] = _0x1411b2 + _0x33a83d * (0x1 - _0x1411b2), _0x3c7065[0x1] = _0x550f1f - _0x33a83d * _0x550f1f + _0x24272d * _0x3b0afe, _0x3c7065[0x2] = _0x5efa91 - _0x33a83d * _0x5efa91 - _0x24272d * _0x2a08d2, _0x3c7065[0x4] = _0x550f1f - _0x33a83d * _0x550f1f - _0x24272d * _0x3b0afe, _0x3c7065[0x5] = _0xa5b4c9 + _0x33a83d * (0x1 - _0xa5b4c9), _0x3c7065[0x6] = _0x31e8d8 - _0x33a83d * _0x31e8d8 + _0x24272d * _0x5c535d, _0x3c7065[0x8] = _0x5efa91 - _0x33a83d * _0x5efa91 + _0x24272d * _0x2a08d2, _0x3c7065[0x9] = _0x31e8d8 - _0x33a83d * _0x31e8d8 - _0x24272d * _0x5c535d, _0x3c7065[0xa] = _0x4c74f9 + _0x33a83d * (0x1 - _0x4c74f9);
        }
        [_0x6027f5(0x47c)](_0x5a2d0d) {
            var _0x593b8d = _0x6027f5, _0xf1d15e = _0x5a2d0d['x'], _0x27f6cf = _0x5a2d0d['y'], _0x51382d = _0x5a2d0d['z'], _0x1af4c1 = _0x5a2d0d['w'], _0x492530 = _0xf1d15e * _0xf1d15e, _0x2bec34 = _0x27f6cf * _0x27f6cf, _0x2f0d2e = _0x51382d * _0x51382d, _0x5b9ab3 = _0xf1d15e * _0x27f6cf, _0x4b7799 = _0x51382d * _0x1af4c1, _0x261896 = _0x51382d * _0xf1d15e, _0x481f45 = _0x27f6cf * _0x1af4c1, _0x55392f = _0x27f6cf * _0x51382d, _0x220f0f = _0xf1d15e * _0x1af4c1, _0xdfca35 = this[_0x593b8d(0x1fe)];
            _0xdfca35[0x0] = 0x1 - 0x2 * (_0x2bec34 + _0x2f0d2e), _0xdfca35[0x1] = 0x2 * (_0x5b9ab3 + _0x4b7799), _0xdfca35[0x2] = 0x2 * (_0x261896 - _0x481f45), _0xdfca35[0x4] = 0x2 * (_0x5b9ab3 - _0x4b7799), _0xdfca35[0x5] = 0x1 - 0x2 * (_0x2f0d2e + _0x492530), _0xdfca35[0x6] = 0x2 * (_0x55392f + _0x220f0f), _0xdfca35[0x8] = 0x2 * (_0x261896 + _0x481f45), _0xdfca35[0x9] = 0x2 * (_0x55392f - _0x220f0f), _0xdfca35[0xa] = 0x1 - 0x2 * (_0x2bec34 + _0x492530);
        }
        [_0x6027f5(0x47d)](_0x2587d3) {
            var _0x7637b = _0x6027f5, _0xf898eb = this[_0x7637b(0x1fe)];
            _0xf898eb[0xc] = _0x2587d3['x'], _0xf898eb[0xd] = _0x2587d3['y'], _0xf898eb[0xe] = _0x2587d3['z'];
        }
        static [_0x6027f5(0x275)](_0x4ab846, _0x97cb44) {
            var _0x4ee5e3 = _0x6027f5, _0x84d098 = _0x97cb44[_0x4ee5e3(0x1fe)], _0xe83899 = _0x4ab846['x'], _0x3dfc72 = _0x4ab846['y'], _0xcaed8 = _0x4ab846['z'], _0x30232b = _0x4ab846['w'], _0x539639 = _0xe83899 * _0xe83899, _0x46fc1a = _0x3dfc72 * _0x3dfc72, _0x327fca = _0xcaed8 * _0xcaed8, _0x54d196 = _0xe83899 * _0x3dfc72, _0x53823e = _0xcaed8 * _0x30232b, _0x3306ac = _0xcaed8 * _0xe83899, _0x497861 = _0x3dfc72 * _0x30232b, _0x3767f7 = _0x3dfc72 * _0xcaed8, _0x51ff0d = _0xe83899 * _0x30232b;
            _0x84d098[0x3] = _0x84d098[0x7] = _0x84d098[0xb] = _0x84d098[0xc] = _0x84d098[0xd] = _0x84d098[0xe] = 0x0, _0x84d098[0xf] = 0x1, _0x84d098[0x0] = 0x1 - 0x2 * (_0x46fc1a + _0x327fca), _0x84d098[0x1] = 0x2 * (_0x54d196 + _0x53823e), _0x84d098[0x2] = 0x2 * (_0x3306ac - _0x497861), _0x84d098[0x4] = 0x2 * (_0x54d196 - _0x53823e), _0x84d098[0x5] = 0x1 - 0x2 * (_0x327fca + _0x539639), _0x84d098[0x6] = 0x2 * (_0x3767f7 + _0x51ff0d), _0x84d098[0x8] = 0x2 * (_0x3306ac + _0x497861), _0x84d098[0x9] = 0x2 * (_0x3767f7 - _0x51ff0d), _0x84d098[0xa] = 0x1 - 0x2 * (_0x46fc1a + _0x539639);
        }
        static ['createTranslate'](_0x8fadd0, _0x45c9ca) {
            var _0x23ab87 = _0x6027f5, _0x14d559 = _0x45c9ca[_0x23ab87(0x1fe)];
            _0x14d559[0x4] = _0x14d559[0x8] = _0x14d559[0x1] = _0x14d559[0x9] = _0x14d559[0x2] = _0x14d559[0x6] = _0x14d559[0x3] = _0x14d559[0x7] = _0x14d559[0xb] = 0x0, _0x14d559[0x0] = _0x14d559[0x5] = _0x14d559[0xa] = _0x14d559[0xf] = 0x1, _0x14d559[0xc] = _0x8fadd0['x'], _0x14d559[0xd] = _0x8fadd0['y'], _0x14d559[0xe] = _0x8fadd0['z'];
        }
        static ['createScaling'](_0x6e2342, _0x113616) {
            var _0x509c78 = _0x113616['elements'];
            _0x509c78[0x0] = _0x6e2342['x'], _0x509c78[0x5] = _0x6e2342['y'], _0x509c78[0xa] = _0x6e2342['z'], _0x509c78[0x1] = _0x509c78[0x4] = _0x509c78[0x8] = _0x509c78[0xc] = _0x509c78[0x9] = _0x509c78[0xd] = _0x509c78[0x2] = _0x509c78[0x6] = _0x509c78[0xe] = _0x509c78[0x3] = _0x509c78[0x7] = _0x509c78[0xb] = 0x0, _0x509c78[0xf] = 0x1;
        }
        static ['multiply'](_0x296a9f, _0x7f8420, _0x33dfca) {
            var _0x479ffb = _0x6027f5, _0x3eef64 = _0x7f8420['elements'], _0x13a26a = _0x296a9f[_0x479ffb(0x1fe)], _0xe51653 = _0x33dfca[_0x479ffb(0x1fe)], _0x272758 = _0x3eef64[0x0], _0x56df4d = _0x3eef64[0x1], _0x232c42 = _0x3eef64[0x2], _0x28acdd = _0x3eef64[0x3], _0x25d074 = _0x3eef64[0x4], _0x35d23e = _0x3eef64[0x5], _0x17d6eb = _0x3eef64[0x6], _0x4de61a = _0x3eef64[0x7], _0x273ab6 = _0x3eef64[0x8], _0x504dcb = _0x3eef64[0x9], _0xb63d47 = _0x3eef64[0xa], _0x8f3b1a = _0x3eef64[0xb], _0x5f4eaf = _0x3eef64[0xc], _0x2894b4 = _0x3eef64[0xd], _0x4a592f = _0x3eef64[0xe], _0x2d6ef9 = _0x3eef64[0xf], _0x22bde4 = _0x13a26a[0x0], _0x4f443b = _0x13a26a[0x1], _0x2bcc21 = _0x13a26a[0x2], _0x142fca = _0x13a26a[0x3], _0x58b324 = _0x13a26a[0x4], _0x5648e3 = _0x13a26a[0x5], _0x3f1845 = _0x13a26a[0x6], _0x57d439 = _0x13a26a[0x7], _0x1c4301 = _0x13a26a[0x8], _0x441725 = _0x13a26a[0x9], _0x3c1fa6 = _0x13a26a[0xa], _0x545d20 = _0x13a26a[0xb], _0x4319d1 = _0x13a26a[0xc], _0x22cc3b = _0x13a26a[0xd], _0x45c6ea = _0x13a26a[0xe], _0x104f75 = _0x13a26a[0xf];
            _0xe51653[0x0] = _0x272758 * _0x22bde4 + _0x56df4d * _0x58b324 + _0x232c42 * _0x1c4301 + _0x28acdd * _0x4319d1, _0xe51653[0x1] = _0x272758 * _0x4f443b + _0x56df4d * _0x5648e3 + _0x232c42 * _0x441725 + _0x28acdd * _0x22cc3b, _0xe51653[0x2] = _0x272758 * _0x2bcc21 + _0x56df4d * _0x3f1845 + _0x232c42 * _0x3c1fa6 + _0x28acdd * _0x45c6ea, _0xe51653[0x3] = _0x272758 * _0x142fca + _0x56df4d * _0x57d439 + _0x232c42 * _0x545d20 + _0x28acdd * _0x104f75, _0xe51653[0x4] = _0x25d074 * _0x22bde4 + _0x35d23e * _0x58b324 + _0x17d6eb * _0x1c4301 + _0x4de61a * _0x4319d1, _0xe51653[0x5] = _0x25d074 * _0x4f443b + _0x35d23e * _0x5648e3 + _0x17d6eb * _0x441725 + _0x4de61a * _0x22cc3b, _0xe51653[0x6] = _0x25d074 * _0x2bcc21 + _0x35d23e * _0x3f1845 + _0x17d6eb * _0x3c1fa6 + _0x4de61a * _0x45c6ea, _0xe51653[0x7] = _0x25d074 * _0x142fca + _0x35d23e * _0x57d439 + _0x17d6eb * _0x545d20 + _0x4de61a * _0x104f75, _0xe51653[0x8] = _0x273ab6 * _0x22bde4 + _0x504dcb * _0x58b324 + _0xb63d47 * _0x1c4301 + _0x8f3b1a * _0x4319d1, _0xe51653[0x9] = _0x273ab6 * _0x4f443b + _0x504dcb * _0x5648e3 + _0xb63d47 * _0x441725 + _0x8f3b1a * _0x22cc3b, _0xe51653[0xa] = _0x273ab6 * _0x2bcc21 + _0x504dcb * _0x3f1845 + _0xb63d47 * _0x3c1fa6 + _0x8f3b1a * _0x45c6ea, _0xe51653[0xb] = _0x273ab6 * _0x142fca + _0x504dcb * _0x57d439 + _0xb63d47 * _0x545d20 + _0x8f3b1a * _0x104f75, _0xe51653[0xc] = _0x5f4eaf * _0x22bde4 + _0x2894b4 * _0x58b324 + _0x4a592f * _0x1c4301 + _0x2d6ef9 * _0x4319d1, _0xe51653[0xd] = _0x5f4eaf * _0x4f443b + _0x2894b4 * _0x5648e3 + _0x4a592f * _0x441725 + _0x2d6ef9 * _0x22cc3b, _0xe51653[0xe] = _0x5f4eaf * _0x2bcc21 + _0x2894b4 * _0x3f1845 + _0x4a592f * _0x3c1fa6 + _0x2d6ef9 * _0x45c6ea, _0xe51653[0xf] = _0x5f4eaf * _0x142fca + _0x2894b4 * _0x57d439 + _0x4a592f * _0x545d20 + _0x2d6ef9 * _0x104f75;
        }
        static [_0x6027f5(0x47e)](_0x39edb4, _0xb02608, _0x1f2710) {
            var _0x5a2156 = _0x6027f5;
            _0x387b86[_0x5a2156(0x303)][_0x5a2156(0x304)][_0x5a2156(0x305)](_0x39edb4['elements'], _0xb02608[_0x5a2156(0x1fe)], _0x1f2710['elements']);
        }
        static [_0x6027f5(0x47f)](_0x1a2191, _0x56b18c) {
            var _0x1464aa = _0x56b18c['elements'], _0x1ca9f7 = _0x1a2191['x'], _0x100541 = _0x1a2191['y'], _0x3b290a = _0x1a2191['z'], _0x1bfcc3 = _0x1a2191['w'], _0x40bbff = _0x1ca9f7 + _0x1ca9f7, _0x484325 = _0x100541 + _0x100541, _0x4d0412 = _0x3b290a + _0x3b290a, _0x9f50c5 = _0x1ca9f7 * _0x40bbff, _0x5779f1 = _0x100541 * _0x40bbff, _0x5931ec = _0x100541 * _0x484325, _0x112ecf = _0x3b290a * _0x40bbff, _0x524646 = _0x3b290a * _0x484325, _0x13ae59 = _0x3b290a * _0x4d0412, _0x35da46 = _0x1bfcc3 * _0x40bbff, _0x2ca6a8 = _0x1bfcc3 * _0x484325, _0xdad3eb = _0x1bfcc3 * _0x4d0412;
            _0x1464aa[0x0] = 0x1 - _0x5931ec - _0x13ae59, _0x1464aa[0x1] = _0x5779f1 + _0xdad3eb, _0x1464aa[0x2] = _0x112ecf - _0x2ca6a8, _0x1464aa[0x3] = 0x0, _0x1464aa[0x4] = _0x5779f1 - _0xdad3eb, _0x1464aa[0x5] = 0x1 - _0x9f50c5 - _0x13ae59, _0x1464aa[0x6] = _0x524646 + _0x35da46, _0x1464aa[0x7] = 0x0, _0x1464aa[0x8] = _0x112ecf + _0x2ca6a8, _0x1464aa[0x9] = _0x524646 - _0x35da46, _0x1464aa[0xa] = 0x1 - _0x9f50c5 - _0x5931ec, _0x1464aa[0xb] = 0x0, _0x1464aa[0xc] = 0x0, _0x1464aa[0xd] = 0x0, _0x1464aa[0xe] = 0x0, _0x1464aa[0xf] = 0x1;
        }
        static [_0x6027f5(0x480)](_0x1b2d51, _0x596158, _0x13163b, _0x438921) {
            var _0x5475b8 = _0x6027f5, _0x439ebf = _0x438921[_0x5475b8(0x1fe)], _0xebdd1f = _0x596158['x'], _0x53afb8 = _0x596158['y'], _0x32529d = _0x596158['z'], _0x16dc7b = _0x596158['w'], _0x3ed6bf = _0xebdd1f + _0xebdd1f, _0x391e4d = _0x53afb8 + _0x53afb8, _0x202ef3 = _0x32529d + _0x32529d, _0x4ec011 = _0xebdd1f * _0x3ed6bf, _0x424dd4 = _0xebdd1f * _0x391e4d, _0x2cecb6 = _0xebdd1f * _0x202ef3, _0x3ecdbe = _0x53afb8 * _0x391e4d, _0x38126a = _0x53afb8 * _0x202ef3, _0x1634af = _0x32529d * _0x202ef3, _0x276548 = _0x16dc7b * _0x3ed6bf, _0xe17116 = _0x16dc7b * _0x391e4d, _0xaa4099 = _0x16dc7b * _0x202ef3, _0x32672e = _0x13163b['x'], _0x40dc9f = _0x13163b['y'], _0x30d4a7 = _0x13163b['z'];
            _0x439ebf[0x0] = (0x1 - (_0x3ecdbe + _0x1634af)) * _0x32672e, _0x439ebf[0x1] = (_0x424dd4 + _0xaa4099) * _0x32672e, _0x439ebf[0x2] = (_0x2cecb6 - _0xe17116) * _0x32672e, _0x439ebf[0x3] = 0x0, _0x439ebf[0x4] = (_0x424dd4 - _0xaa4099) * _0x40dc9f, _0x439ebf[0x5] = (0x1 - (_0x4ec011 + _0x1634af)) * _0x40dc9f, _0x439ebf[0x6] = (_0x38126a + _0x276548) * _0x40dc9f, _0x439ebf[0x7] = 0x0, _0x439ebf[0x8] = (_0x2cecb6 + _0xe17116) * _0x30d4a7, _0x439ebf[0x9] = (_0x38126a - _0x276548) * _0x30d4a7, _0x439ebf[0xa] = (0x1 - (_0x4ec011 + _0x3ecdbe)) * _0x30d4a7, _0x439ebf[0xb] = 0x0, _0x439ebf[0xc] = _0x1b2d51['x'], _0x439ebf[0xd] = _0x1b2d51['y'], _0x439ebf[0xe] = _0x1b2d51['z'], _0x439ebf[0xf] = 0x1;
        }
        static ['createLookAt'](_0x211c54, _0x377afb, _0x249440, _0x1d42f5) {
            var _0xfc5c10 = _0x6027f5, _0x3f8e99 = _0x1d42f5[_0xfc5c10(0x1fe)], _0x55a43e = _0x6b4d98['_tempVector0'], _0x4db516 = _0x6b4d98[_0xfc5c10(0x481)], _0x10cb8e = _0x6b4d98[_0xfc5c10(0x482)];
            _0x3697cd[_0xfc5c10(0x28a)](_0x211c54, _0x377afb, _0x10cb8e), _0x3697cd['normalize'](_0x10cb8e, _0x10cb8e), _0x3697cd[_0xfc5c10(0x217)](_0x249440, _0x10cb8e, _0x55a43e), _0x3697cd[_0xfc5c10(0x214)](_0x55a43e, _0x55a43e), _0x3697cd[_0xfc5c10(0x217)](_0x10cb8e, _0x55a43e, _0x4db516), _0x3f8e99[0x3] = _0x3f8e99[0x7] = _0x3f8e99[0xb] = 0x0, _0x3f8e99[0xf] = 0x1, _0x3f8e99[0x0] = _0x55a43e['x'], _0x3f8e99[0x4] = _0x55a43e['y'], _0x3f8e99[0x8] = _0x55a43e['z'], _0x3f8e99[0x1] = _0x4db516['x'], _0x3f8e99[0x5] = _0x4db516['y'], _0x3f8e99[0x9] = _0x4db516['z'], _0x3f8e99[0x2] = _0x10cb8e['x'], _0x3f8e99[0x6] = _0x10cb8e['y'], _0x3f8e99[0xa] = _0x10cb8e['z'], _0x3f8e99[0xc] = -_0x3697cd[_0xfc5c10(0x20b)](_0x55a43e, _0x211c54), _0x3f8e99[0xd] = -_0x3697cd['dot'](_0x4db516, _0x211c54), _0x3f8e99[0xe] = -_0x3697cd['dot'](_0x10cb8e, _0x211c54);
        }
        static ['createPerspective'](_0x5c45cf, _0x1386b0, _0x44bb58, _0x91608f, _0x36f54e) {
            var _0x4e3c60 = _0x6027f5, _0x4bf6e8 = 0x1 / Math[_0x4e3c60(0x483)](0.5 * _0x5c45cf), _0x3645d7 = _0x44bb58 / (_0x4bf6e8 / _0x1386b0), _0xb26df1 = _0x44bb58 / _0x4bf6e8;
            _0x6b4d98['createPerspectiveOffCenter'](-_0x3645d7, _0x3645d7, -_0xb26df1, _0xb26df1, _0x44bb58, _0x91608f, _0x36f54e);
        }
        static [_0x6027f5(0x484)](_0x4b8925, _0x1570c5, _0x5dce80, _0x2eaa7f, _0x1f7641, _0x84a2e8, _0x131a71) {
            var _0x328528 = _0x6027f5, _0x3d58ed = _0x131a71[_0x328528(0x1fe)], _0x1efd2c = _0x84a2e8 / (_0x84a2e8 - _0x1f7641);
            _0x3d58ed[0x1] = _0x3d58ed[0x2] = _0x3d58ed[0x3] = _0x3d58ed[0x4] = _0x3d58ed[0x6] = _0x3d58ed[0x7] = _0x3d58ed[0xc] = _0x3d58ed[0xd] = _0x3d58ed[0xf] = 0x0, _0x3d58ed[0x0] = 0x2 * _0x1f7641 / (_0x1570c5 - _0x4b8925), _0x3d58ed[0x5] = 0x2 * _0x1f7641 / (_0x2eaa7f - _0x5dce80), _0x3d58ed[0x8] = (_0x4b8925 + _0x1570c5) / (_0x1570c5 - _0x4b8925), _0x3d58ed[0x9] = (_0x2eaa7f + _0x5dce80) / (_0x2eaa7f - _0x5dce80), _0x3d58ed[0xa] = -_0x1efd2c, _0x3d58ed[0xb] = -0x1, _0x3d58ed[0xe] = -_0x1f7641 * _0x1efd2c;
        }
        static [_0x6027f5(0x485)](_0xef8e33, _0x573b2b, _0x3b5de3, _0xd3854b, _0x158f90, _0x323e4c, _0x55d546) {
            var _0x376650 = _0x6027f5, _0x144b2e = _0x55d546[_0x376650(0x1fe)], _0x90c3a0 = 0x1 / (_0x323e4c - _0x158f90);
            _0x144b2e[0x1] = _0x144b2e[0x2] = _0x144b2e[0x3] = _0x144b2e[0x4] = _0x144b2e[0x6] = _0x144b2e[0x8] = _0x144b2e[0x7] = _0x144b2e[0x9] = _0x144b2e[0xb] = 0x0, _0x144b2e[0xf] = 0x1, _0x144b2e[0x0] = 0x2 / (_0x573b2b - _0xef8e33), _0x144b2e[0x5] = 0x2 / (_0xd3854b - _0x3b5de3), _0x144b2e[0xa] = -_0x90c3a0, _0x144b2e[0xc] = (_0xef8e33 + _0x573b2b) / (_0xef8e33 - _0x573b2b), _0x144b2e[0xd] = (_0xd3854b + _0x3b5de3) / (_0x3b5de3 - _0xd3854b), _0x144b2e[0xe] = -_0x158f90 * _0x90c3a0;
        }
        ['getElementByRowColumn'](_0x3e4137, _0x566e02) {
            var _0x456bf2 = _0x6027f5;
            if (_0x3e4137 < 0x0 || _0x3e4137 > 0x3)
                throw new Error(_0x456bf2(0x486));
            if (_0x566e02 < 0x0 || _0x566e02 > 0x3)
                throw new Error(_0x456bf2(0x487));
            return this['elements'][0x4 * _0x3e4137 + _0x566e02];
        }
        [_0x6027f5(0x488)](_0x215b03, _0x43faca, _0x28a15b) {
            var _0x2c0c27 = _0x6027f5;
            if (_0x215b03 < 0x0 || _0x215b03 > 0x3)
                throw new Error(_0x2c0c27(0x486));
            if (_0x43faca < 0x0 || _0x43faca > 0x3)
                throw new Error(_0x2c0c27(0x487));
            this[_0x2c0c27(0x1fe)][0x4 * _0x215b03 + _0x43faca] = _0x28a15b;
        }
        ['equalsOtherMatrix'](_0x1760b8) {
            var _0x47f317 = _0x6027f5, _0x32ccc7 = this[_0x47f317(0x1fe)], _0x452f69 = _0x1760b8[_0x47f317(0x1fe)];
            return _0x255128[_0x47f317(0x204)](_0x32ccc7[0x0], _0x452f69[0x0]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0x1], _0x452f69[0x1]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0x2], _0x452f69[0x2]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0x3], _0x452f69[0x3]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0x4], _0x452f69[0x4]) && _0x255128['nearEqual'](_0x32ccc7[0x5], _0x452f69[0x5]) && _0x255128['nearEqual'](_0x32ccc7[0x6], _0x452f69[0x6]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0x7], _0x452f69[0x7]) && _0x255128['nearEqual'](_0x32ccc7[0x8], _0x452f69[0x8]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0x9], _0x452f69[0x9]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0xa], _0x452f69[0xa]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0xb], _0x452f69[0xb]) && _0x255128['nearEqual'](_0x32ccc7[0xc], _0x452f69[0xc]) && _0x255128['nearEqual'](_0x32ccc7[0xd], _0x452f69[0xd]) && _0x255128[_0x47f317(0x204)](_0x32ccc7[0xe], _0x452f69[0xe]) && _0x255128['nearEqual'](_0x32ccc7[0xf], _0x452f69[0xf]);
        }
        [_0x6027f5(0x489)](_0x49d03a, _0x582485, _0x4036e9) {
            var _0x531472 = _0x6027f5, _0x4a80e9 = _0x6b4d98['_tempMatrix4x4'];
            return this[_0x531472(0x48a)](_0x49d03a, _0x4a80e9, _0x4036e9) ? (_0x528999[_0x531472(0x27a)](_0x4a80e9, _0x582485), !0x0) : (_0x582485[_0x531472(0x281)](), !0x1);
        }
        [_0x6027f5(0x48a)](_0x3274ee, _0x239c66, _0x130a6b) {
            var _0x56a448 = _0x6027f5, _0x234772 = this['elements'], _0x508e1f = _0x3274ee, _0x290f99 = _0x239c66[_0x56a448(0x1fe)], _0xb1b7b0 = _0x130a6b;
            _0x508e1f['x'] = _0x234772[0xc], _0x508e1f['y'] = _0x234772[0xd], _0x508e1f['z'] = _0x234772[0xe];
            var _0x531680 = _0x234772[0x0], _0x5f4ad8 = _0x234772[0x1], _0x5c9cae = _0x234772[0x2], _0x239d82 = _0x234772[0x4], _0x3e8ebb = _0x234772[0x5], _0x3a73b8 = _0x234772[0x6], _0x4a6d2f = _0x234772[0x8], _0x4a030a = _0x234772[0x9], _0x507cc2 = _0x234772[0xa], _0x187936 = _0xb1b7b0['x'] = Math['sqrt'](_0x531680 * _0x531680 + _0x5f4ad8 * _0x5f4ad8 + _0x5c9cae * _0x5c9cae), _0x5b6a55 = _0xb1b7b0['y'] = Math['sqrt'](_0x239d82 * _0x239d82 + _0x3e8ebb * _0x3e8ebb + _0x3a73b8 * _0x3a73b8), _0x205d83 = _0xb1b7b0['z'] = Math[_0x56a448(0x1f3)](_0x4a6d2f * _0x4a6d2f + _0x4a030a * _0x4a030a + _0x507cc2 * _0x507cc2);
            if (_0x255128[_0x56a448(0x1f1)](_0x187936) || _0x255128[_0x56a448(0x1f1)](_0x5b6a55) || _0x255128[_0x56a448(0x1f1)](_0x205d83))
                return _0x290f99[0x1] = _0x290f99[0x2] = _0x290f99[0x3] = _0x290f99[0x4] = _0x290f99[0x6] = _0x290f99[0x7] = _0x290f99[0x8] = _0x290f99[0x9] = _0x290f99[0xb] = _0x290f99[0xc] = _0x290f99[0xd] = _0x290f99[0xe] = 0x0, _0x290f99[0x0] = _0x290f99[0x5] = _0x290f99[0xa] = _0x290f99[0xf] = 0x1, !0x1;
            var _0x354359 = _0x6b4d98['_tempVector0'];
            _0x354359['x'] = _0x4a6d2f / _0x205d83, _0x354359['y'] = _0x4a030a / _0x205d83, _0x354359['z'] = _0x507cc2 / _0x205d83;
            var _0x3239cc = _0x6b4d98[_0x56a448(0x481)];
            _0x3239cc['x'] = _0x531680 / _0x187936, _0x3239cc['y'] = _0x5f4ad8 / _0x187936, _0x3239cc['z'] = _0x5c9cae / _0x187936;
            var _0x23520d = _0x6b4d98[_0x56a448(0x482)];
            _0x3697cd[_0x56a448(0x217)](_0x354359, _0x3239cc, _0x23520d);
            var _0x2cb8dc = _0x6b4d98[_0x56a448(0x481)];
            return _0x3697cd[_0x56a448(0x217)](_0x23520d, _0x354359, _0x2cb8dc), _0x290f99[0x3] = _0x290f99[0x7] = _0x290f99[0xb] = _0x290f99[0xc] = _0x290f99[0xd] = _0x290f99[0xe] = 0x0, _0x290f99[0xf] = 0x1, _0x290f99[0x0] = _0x2cb8dc['x'], _0x290f99[0x1] = _0x2cb8dc['y'], _0x290f99[0x2] = _0x2cb8dc['z'], _0x290f99[0x4] = _0x23520d['x'], _0x290f99[0x5] = _0x23520d['y'], _0x290f99[0x6] = _0x23520d['z'], _0x290f99[0x8] = _0x354359['x'], _0x290f99[0x9] = _0x354359['y'], _0x290f99[0xa] = _0x354359['z'], _0x290f99[0x0] * _0x531680 + _0x290f99[0x1] * _0x5f4ad8 + _0x290f99[0x2] * _0x5c9cae < 0x0 && (_0xb1b7b0['x'] = -_0x187936), _0x290f99[0x4] * _0x239d82 + _0x290f99[0x5] * _0x3e8ebb + _0x290f99[0x6] * _0x3a73b8 < 0x0 && (_0xb1b7b0['y'] = -_0x5b6a55), _0x290f99[0x8] * _0x4a6d2f + _0x290f99[0x9] * _0x4a030a + _0x290f99[0xa] * _0x507cc2 < 0x0 && (_0xb1b7b0['z'] = -_0x205d83), !0x0;
        }
        [_0x6027f5(0x48b)](_0x29fe8c) {
            var _0x3de167 = _0x6027f5, _0x13a8ce = Math['asin'](-this[_0x3de167(0x1fe)][0x9]);
            _0x29fe8c['y'] = _0x13a8ce, Math['cos'](_0x13a8ce) > _0x255128[_0x3de167(0x1f4)] ? (_0x29fe8c['z'] = Math[_0x3de167(0x48c)](this['elements'][0x1], this[_0x3de167(0x1fe)][0x5]), _0x29fe8c['x'] = Math['atan2'](this['elements'][0x8], this[_0x3de167(0x1fe)][0xa])) : (_0x29fe8c['z'] = Math[_0x3de167(0x48c)](-this[_0x3de167(0x1fe)][0x4], this[_0x3de167(0x1fe)][0x0]), _0x29fe8c['x'] = 0x0);
        }
        [_0x6027f5(0x214)]() {
            var _0xcfbd21 = _0x6027f5, _0x227a3b = this[_0xcfbd21(0x1fe)], _0xd9df4 = _0x227a3b[0x0], _0x7690c9 = _0x227a3b[0x1], _0x284929 = _0x227a3b[0x2], _0x51a9ff = Math[_0xcfbd21(0x1f3)](_0xd9df4 * _0xd9df4 + _0x7690c9 * _0x7690c9 + _0x284929 * _0x284929);
            if (!_0x51a9ff)
                return _0x227a3b[0x0] = 0x0, _0x227a3b[0x1] = 0x0, void (_0x227a3b[0x2] = 0x0);
            0x1 != _0x51a9ff && (_0x51a9ff = 0x1 / _0x51a9ff, _0x227a3b[0x0] = _0xd9df4 * _0x51a9ff, _0x227a3b[0x1] = _0x7690c9 * _0x51a9ff, _0x227a3b[0x2] = _0x284929 * _0x51a9ff);
        }
        [_0x6027f5(0x48d)]() {
            var _0x4bc505, _0x48ff63;
            return _0x48ff63 = (_0x4bc505 = this['elements'])[0x1], _0x4bc505[0x1] = _0x4bc505[0x4], _0x4bc505[0x4] = _0x48ff63, _0x48ff63 = _0x4bc505[0x2], _0x4bc505[0x2] = _0x4bc505[0x8], _0x4bc505[0x8] = _0x48ff63, _0x48ff63 = _0x4bc505[0x3], _0x4bc505[0x3] = _0x4bc505[0xc], _0x4bc505[0xc] = _0x48ff63, _0x48ff63 = _0x4bc505[0x6], _0x4bc505[0x6] = _0x4bc505[0x9], _0x4bc505[0x9] = _0x48ff63, _0x48ff63 = _0x4bc505[0x7], _0x4bc505[0x7] = _0x4bc505[0xd], _0x4bc505[0xd] = _0x48ff63, _0x48ff63 = _0x4bc505[0xb], _0x4bc505[0xb] = _0x4bc505[0xe], _0x4bc505[0xe] = _0x48ff63, this;
        }
        [_0x6027f5(0x280)](_0x485717) {
            var _0x3d512a = _0x6027f5, _0x1f669f = this[_0x3d512a(0x1fe)], _0x124ba1 = _0x485717[_0x3d512a(0x1fe)], _0x39d12c = _0x1f669f[0x0], _0x176759 = _0x1f669f[0x1], _0x4676d2 = _0x1f669f[0x2], _0x39e985 = _0x1f669f[0x3], _0x3cf577 = _0x1f669f[0x4], _0x9340e4 = _0x1f669f[0x5], _0x34695a = _0x1f669f[0x6], _0x5e2803 = _0x1f669f[0x7], _0x40dae3 = _0x1f669f[0x8], _0x3139d6 = _0x1f669f[0x9], _0x171742 = _0x1f669f[0xa], _0xa77b4d = _0x1f669f[0xb], _0x766a56 = _0x1f669f[0xc], _0x5de60e = _0x1f669f[0xd], _0x46b565 = _0x1f669f[0xe], _0x258261 = _0x1f669f[0xf], _0x55a7ad = _0x39d12c * _0x9340e4 - _0x176759 * _0x3cf577, _0x5c51c8 = _0x39d12c * _0x34695a - _0x4676d2 * _0x3cf577, _0x18e7de = _0x39d12c * _0x5e2803 - _0x39e985 * _0x3cf577, _0x5df7a4 = _0x176759 * _0x34695a - _0x4676d2 * _0x9340e4, _0x452f2f = _0x176759 * _0x5e2803 - _0x39e985 * _0x9340e4, _0x1e1e23 = _0x4676d2 * _0x5e2803 - _0x39e985 * _0x34695a, _0x1ab4ab = _0x40dae3 * _0x5de60e - _0x3139d6 * _0x766a56, _0xa7cf65 = _0x40dae3 * _0x46b565 - _0x171742 * _0x766a56, _0x3866a9 = _0x40dae3 * _0x258261 - _0xa77b4d * _0x766a56, _0x3d4f29 = _0x3139d6 * _0x46b565 - _0x171742 * _0x5de60e, _0x280447 = _0x3139d6 * _0x258261 - _0xa77b4d * _0x5de60e, _0x1a3381 = _0x171742 * _0x258261 - _0xa77b4d * _0x46b565, _0x56aefb = _0x55a7ad * _0x1a3381 - _0x5c51c8 * _0x280447 + _0x18e7de * _0x3d4f29 + _0x5df7a4 * _0x3866a9 - _0x452f2f * _0xa7cf65 + _0x1e1e23 * _0x1ab4ab;
            0x0 !== Math[_0x3d512a(0x1f0)](_0x56aefb) && (_0x56aefb = 0x1 / _0x56aefb, _0x124ba1[0x0] = (_0x9340e4 * _0x1a3381 - _0x34695a * _0x280447 + _0x5e2803 * _0x3d4f29) * _0x56aefb, _0x124ba1[0x1] = (_0x4676d2 * _0x280447 - _0x176759 * _0x1a3381 - _0x39e985 * _0x3d4f29) * _0x56aefb, _0x124ba1[0x2] = (_0x5de60e * _0x1e1e23 - _0x46b565 * _0x452f2f + _0x258261 * _0x5df7a4) * _0x56aefb, _0x124ba1[0x3] = (_0x171742 * _0x452f2f - _0x3139d6 * _0x1e1e23 - _0xa77b4d * _0x5df7a4) * _0x56aefb, _0x124ba1[0x4] = (_0x34695a * _0x3866a9 - _0x3cf577 * _0x1a3381 - _0x5e2803 * _0xa7cf65) * _0x56aefb, _0x124ba1[0x5] = (_0x39d12c * _0x1a3381 - _0x4676d2 * _0x3866a9 + _0x39e985 * _0xa7cf65) * _0x56aefb, _0x124ba1[0x6] = (_0x46b565 * _0x18e7de - _0x766a56 * _0x1e1e23 - _0x258261 * _0x5c51c8) * _0x56aefb, _0x124ba1[0x7] = (_0x40dae3 * _0x1e1e23 - _0x171742 * _0x18e7de + _0xa77b4d * _0x5c51c8) * _0x56aefb, _0x124ba1[0x8] = (_0x3cf577 * _0x280447 - _0x9340e4 * _0x3866a9 + _0x5e2803 * _0x1ab4ab) * _0x56aefb, _0x124ba1[0x9] = (_0x176759 * _0x3866a9 - _0x39d12c * _0x280447 - _0x39e985 * _0x1ab4ab) * _0x56aefb, _0x124ba1[0xa] = (_0x766a56 * _0x452f2f - _0x5de60e * _0x18e7de + _0x258261 * _0x55a7ad) * _0x56aefb, _0x124ba1[0xb] = (_0x3139d6 * _0x18e7de - _0x40dae3 * _0x452f2f - _0xa77b4d * _0x55a7ad) * _0x56aefb, _0x124ba1[0xc] = (_0x9340e4 * _0xa7cf65 - _0x3cf577 * _0x3d4f29 - _0x34695a * _0x1ab4ab) * _0x56aefb, _0x124ba1[0xd] = (_0x39d12c * _0x3d4f29 - _0x176759 * _0xa7cf65 + _0x4676d2 * _0x1ab4ab) * _0x56aefb, _0x124ba1[0xe] = (_0x5de60e * _0x5c51c8 - _0x766a56 * _0x5df7a4 - _0x46b565 * _0x55a7ad) * _0x56aefb, _0x124ba1[0xf] = (_0x40dae3 * _0x5df7a4 - _0x3139d6 * _0x5c51c8 + _0x171742 * _0x55a7ad) * _0x56aefb);
        }
        static [_0x6027f5(0x48e)](_0x58ac67, _0x1e5199, _0x2a5654, _0xb7e6eb, _0x23caf7) {
            var _0x323c17 = _0x6027f5;
            _0x3697cd[_0x323c17(0x28a)](_0x58ac67, _0x1e5199, _0x6b4d98['_tempVector0']);
            var _0x2d6593 = _0x3697cd[_0x323c17(0x213)](_0x6b4d98[_0x323c17(0x48f)]);
            _0x255128[_0x323c17(0x1f1)](_0x2d6593) ? (_0x3697cd['scale'](_0xb7e6eb, -0x1, _0x6b4d98[_0x323c17(0x481)]), _0x6b4d98[_0x323c17(0x481)][_0x323c17(0x1fc)](_0x6b4d98['_tempVector0'])) : _0x3697cd[_0x323c17(0x1f9)](_0x6b4d98[_0x323c17(0x48f)], 0x1 / Math[_0x323c17(0x1f3)](_0x2d6593), _0x6b4d98[_0x323c17(0x48f)]), _0x3697cd[_0x323c17(0x217)](_0x2a5654, _0x6b4d98[_0x323c17(0x48f)], _0x6b4d98[_0x323c17(0x482)]), _0x3697cd['normalize'](_0x6b4d98['_tempVector2'], _0x6b4d98[_0x323c17(0x482)]), _0x3697cd[_0x323c17(0x217)](_0x6b4d98[_0x323c17(0x48f)], _0x6b4d98[_0x323c17(0x482)], _0x6b4d98[_0x323c17(0x490)]);
            var _0x3c4499 = _0x6b4d98['_tempVector2'], _0x479cbe = _0x6b4d98['_tempVector3'], _0x37aa69 = _0x6b4d98['_tempVector0'], _0x4aca3a = _0x58ac67, _0xb203b6 = _0x23caf7[_0x323c17(0x1fe)];
            _0xb203b6[0x0] = _0x3c4499['x'], _0xb203b6[0x1] = _0x3c4499['y'], _0xb203b6[0x2] = _0x3c4499['z'], _0xb203b6[0x3] = 0x0, _0xb203b6[0x4] = _0x479cbe['x'], _0xb203b6[0x5] = _0x479cbe['y'], _0xb203b6[0x6] = _0x479cbe['z'], _0xb203b6[0x7] = 0x0, _0xb203b6[0x8] = _0x37aa69['x'], _0xb203b6[0x9] = _0x37aa69['y'], _0xb203b6[0xa] = _0x37aa69['z'], _0xb203b6[0xb] = 0x0, _0xb203b6[0xc] = _0x4aca3a['x'], _0xb203b6[0xd] = _0x4aca3a['y'], _0xb203b6[0xe] = _0x4aca3a['z'], _0xb203b6[0xf] = 0x1;
        }
        [_0x6027f5(0x281)]() {
            var _0x4fef0a = _0x6027f5, _0x4717f5 = this[_0x4fef0a(0x1fe)];
            _0x4717f5[0x1] = _0x4717f5[0x2] = _0x4717f5[0x3] = _0x4717f5[0x4] = _0x4717f5[0x6] = _0x4717f5[0x7] = _0x4717f5[0x8] = _0x4717f5[0x9] = _0x4717f5[0xb] = _0x4717f5[0xc] = _0x4717f5[0xd] = _0x4717f5[0xe] = 0x0, _0x4717f5[0x0] = _0x4717f5[0x5] = _0x4717f5[0xa] = _0x4717f5[0xf] = 0x1;
        }
        [_0x6027f5(0x1fc)](_0x225cb4) {
            var _0x49ffe4 = _0x6027f5, _0x1d2740, _0x172f6a, _0x2d7149;
            if ((_0x172f6a = this[_0x49ffe4(0x1fe)]) !== (_0x2d7149 = _0x225cb4['elements'])) {
                for (_0x1d2740 = 0x0; _0x1d2740 < 0x10; ++_0x1d2740)
                    _0x2d7149[_0x1d2740] = _0x172f6a[_0x1d2740];
            }
        }
        ['clone']() {
            var _0x5db4ff = _0x6027f5, _0x2c2982 = new _0x6b4d98();
            return this[_0x5db4ff(0x1fc)](_0x2c2982), _0x2c2982;
        }
        static [_0x6027f5(0x491)](_0x3e2683, _0x28c5e8) {
            var _0x543bce = _0x6027f5, _0x364bc7 = _0x28c5e8[_0x543bce(0x1fe)];
            _0x364bc7[0x0] = _0x364bc7[0x5] = _0x364bc7[0xa] = _0x364bc7[0xf] = 0x1, _0x364bc7[0xc] = _0x3e2683['x'], _0x364bc7[0xd] = _0x3e2683['y'], _0x364bc7[0xe] = _0x3e2683['z'];
        }
        ['getTranslationVector'](_0x3fcafa) {
            var _0x83a1d0 = _0x6027f5, _0x162c0b = this[_0x83a1d0(0x1fe)];
            _0x3fcafa['x'] = _0x162c0b[0xc], _0x3fcafa['y'] = _0x162c0b[0xd], _0x3fcafa['z'] = _0x162c0b[0xe];
        }
        [_0x6027f5(0x492)](_0x3cc217) {
            var _0x569e16 = this['elements'], _0x4fa948 = _0x3cc217;
            _0x569e16[0xc] = _0x4fa948['x'], _0x569e16[0xd] = _0x4fa948['y'], _0x569e16[0xe] = _0x4fa948['z'];
        }
        [_0x6027f5(0x493)](_0x4c93b7) {
            var _0x344451 = _0x6027f5, _0x16dda1 = this[_0x344451(0x1fe)];
            _0x4c93b7['x'] = -_0x16dda1[0x8], _0x4c93b7['y'] = -_0x16dda1[0x9], _0x4c93b7['z'] = -_0x16dda1[0xa];
        }
        [_0x6027f5(0x494)](_0x41318c) {
            var _0x99998a = this['elements'];
            _0x99998a[0x8] = -_0x41318c['x'], _0x99998a[0x9] = -_0x41318c['y'], _0x99998a[0xa] = -_0x41318c['z'];
        }
        ['getInvertFront']() {
            var _0x4ffdc0 = _0x6027f5;
            this[_0x4ffdc0(0x489)](_0x6b4d98[_0x4ffdc0(0x48f)], _0x6b4d98[_0x4ffdc0(0x47a)], _0x6b4d98[_0x4ffdc0(0x481)]);
            var _0x35bfe1 = _0x6b4d98['_tempVector1'], _0x445cfb = _0x35bfe1['x'] < 0x0;
            return _0x35bfe1['y'] < 0x0 && (_0x445cfb = !_0x445cfb), _0x35bfe1['z'] < 0x0 && (_0x445cfb = !_0x445cfb), _0x445cfb;
        }
    }
    _0x6b4d98[_0x6027f5(0x495)] = new _0x6b4d98(), _0x6b4d98[_0x6027f5(0x29a)] = new _0x6b4d98(), _0x6b4d98['TEMPMatrix1'] = new _0x6b4d98(), _0x6b4d98['_tempVector0'] = new _0x3697cd(), _0x6b4d98[_0x6027f5(0x481)] = new _0x3697cd(), _0x6b4d98['_tempVector2'] = new _0x3697cd(), _0x6b4d98[_0x6027f5(0x490)] = new _0x3697cd(), _0x6b4d98[_0x6027f5(0x47a)] = new _0x528999(), _0x6b4d98[_0x6027f5(0x286)] = new _0x6b4d98(), _0x6b4d98[_0x6027f5(0x20e)] = new _0x6b4d98(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0);
    class _0x3985fd {
        constructor(_0x175ae3 = null) {
            var _0x2dbd57 = _0x6027f5;
            this[_0x2dbd57(0x496)] = null, this[_0x2dbd57(0x497)] = null, this[_0x2dbd57(0x498)] = new _0x1ff4c5(), this['_runtimeCopyValues'] = [], this[_0x2dbd57(0x496)] = _0x175ae3, this[_0x2dbd57(0x499)]();
        }
        [_0x6027f5(0x499)]() {
            this['_data'] = {};
        }
        [_0x6027f5(0x319)]() {
            var _0x505abe = _0x6027f5;
            return this[_0x505abe(0x497)];
        }
        [_0x6027f5(0x49a)](_0x555458) {
            var _0x3e1721 = _0x6027f5;
            this[_0x3e1721(0x498)][_0x3e1721(0x207)](_0x555458);
        }
        [_0x6027f5(0x49b)](_0x4e1899) {
            var _0x18ebd4 = _0x6027f5;
            this[_0x18ebd4(0x498)]['remove'](_0x4e1899);
        }
        [_0x6027f5(0x49c)](_0x1a33b6) {
            var _0xfb4949 = _0x6027f5;
            return this[_0xfb4949(0x498)][_0xfb4949(0x44b)](_0x1a33b6);
        }
        [_0x6027f5(0x49d)]() {
            var _0x27ab55 = _0x6027f5;
            this[_0x27ab55(0x498)]['clear']();
        }
        [_0x6027f5(0x49e)](_0x2dad0f) {
            return this['_data'][_0x2dad0f];
        }
        [_0x6027f5(0x49f)](_0x3d8b78, _0x5e9a10) {
            var _0x424d3c = _0x6027f5;
            this[_0x424d3c(0x497)][_0x3d8b78] = _0x5e9a10;
        }
        [_0x6027f5(0x4a0)](_0x98516a) {
            var _0x312056 = _0x6027f5;
            return this[_0x312056(0x497)][_0x98516a];
        }
        [_0x6027f5(0x4a1)](_0xcb4b50, _0x2fc6f8) {
            var _0x17e1f1 = _0x6027f5;
            this[_0x17e1f1(0x497)][_0xcb4b50] = _0x2fc6f8;
        }
        [_0x6027f5(0x4a2)](_0x482dc2) {
            var _0x4c1bd9 = _0x6027f5;
            return this[_0x4c1bd9(0x497)][_0x482dc2];
        }
        [_0x6027f5(0x4a3)](_0x34e8a5, _0x335bb8) {
            var _0x28f6cf = _0x6027f5;
            this[_0x28f6cf(0x497)][_0x34e8a5] = _0x335bb8;
        }
        [_0x6027f5(0x4a4)](_0xd48c5c) {
            var _0x31a9f4 = _0x6027f5;
            return this[_0x31a9f4(0x497)][_0xd48c5c];
        }
        [_0x6027f5(0x4a5)](_0x211a64, _0x1ba968) {
            var _0x509680 = _0x6027f5;
            this[_0x509680(0x497)][_0x211a64] = _0x1ba968;
        }
        [_0x6027f5(0x4a6)](_0x2cd919) {
            return this['_data'][_0x2cd919];
        }
        ['setVector3'](_0x1e3c41, _0x288cb0) {
            this['_data'][_0x1e3c41] = _0x288cb0;
        }
        [_0x6027f5(0x4a7)](_0x3c9078) {
            var _0x114cf2 = _0x6027f5;
            return this[_0x114cf2(0x497)][_0x3c9078];
        }
        [_0x6027f5(0x4a8)](_0x271a65, _0x2e33f6) {
            var _0x38e32d = _0x6027f5;
            this[_0x38e32d(0x497)][_0x271a65] = _0x2e33f6;
        }
        ['getQuaternion'](_0x58d95a) {
            return this['_data'][_0x58d95a];
        }
        [_0x6027f5(0x4a9)](_0x5ae12a, _0x41d7fa) {
            this['_data'][_0x5ae12a] = _0x41d7fa;
        }
        ['getMatrix4x4'](_0x505fd1) {
            var _0x3ef53b = _0x6027f5;
            return this[_0x3ef53b(0x497)][_0x505fd1];
        }
        [_0x6027f5(0x4aa)](_0x3228b0, _0x5704cc) {
            var _0x12ec8a = _0x6027f5;
            this[_0x12ec8a(0x497)][_0x3228b0] = _0x5704cc;
        }
        ['getBuffer'](_0x799314) {
            var _0x43acb8 = _0x6027f5;
            return this[_0x43acb8(0x497)][_0x799314];
        }
        [_0x6027f5(0x4ab)](_0x1fd843, _0x55a044) {
            var _0x3e0c21 = _0x6027f5;
            this[_0x3e0c21(0x497)][_0x1fd843] = _0x55a044;
        }
        [_0x6027f5(0x4ac)](_0x2852ae, _0x3b236a) {
            var _0x10f8e5 = _0x6027f5, _0x18af9f = this[_0x10f8e5(0x497)][_0x2852ae];
            this[_0x10f8e5(0x497)][_0x2852ae] = _0x3b236a || _0x387b86[_0x10f8e5(0x2de)][_0x10f8e5(0x4ad)], this[_0x10f8e5(0x496)] && this[_0x10f8e5(0x496)][_0x10f8e5(0x375)] > 0x0 && (_0x18af9f && _0x18af9f[_0x10f8e5(0x35c)](), _0x3b236a && _0x3b236a['_addReference']());
        }
        [_0x6027f5(0x4ae)](_0x271726) {
            var _0x53ba97 = _0x6027f5;
            return this[_0x53ba97(0x497)][_0x271726];
        }
        [_0x6027f5(0x4af)](_0x525c32, _0x4f408f) {
            var _0xb4fc9b = _0x6027f5;
            this[_0xb4fc9b(0x497)][_0x525c32] = _0x4f408f;
        }
        [_0x6027f5(0x4b0)](_0x2a219a) {
            var _0xa54e14 = _0x6027f5;
            return this[_0xa54e14(0x497)][_0x2a219a];
        }
        [_0x6027f5(0x4b1)](_0x36d06f, _0x28e559) {
            var _0x23753d = _0x6027f5;
            this[_0x23753d(0x497)][_0x36d06f] = _0x28e559;
        }
        [_0x6027f5(0x4b2)](_0x11e508) {
            var _0x516343 = _0x6027f5;
            return this[_0x516343(0x497)][_0x11e508];
        }
        [_0x6027f5(0x4b3)]() {
            var _0x1b434a = _0x6027f5;
            return this[_0x1b434a(0x497)]['length'];
        }
        ['setLength'](_0x2865b2) {
            var _0x34ba76 = _0x6027f5;
            this[_0x34ba76(0x497)][_0x34ba76(0x205)] = _0x2865b2;
        }
        [_0x6027f5(0x1fc)](_0x567b1b) {
            var _0x5335f3 = _0x6027f5, _0x1ccbb5 = _0x567b1b, _0x46839d = _0x1ccbb5['_data'];
            for (var _0x56eb8b in this[_0x5335f3(0x497)]) {
                var _0x5e6607 = this[_0x5335f3(0x497)][_0x56eb8b];
                if (null != _0x5e6607) {
                    if ('number' == typeof _0x5e6607)
                        _0x46839d[_0x56eb8b] = _0x5e6607;
                    else {
                        if ('number' == typeof _0x5e6607)
                            _0x46839d[_0x56eb8b] = _0x5e6607;
                        else {
                            if ('boolean' == typeof _0x5e6607)
                                _0x46839d[_0x56eb8b] = _0x5e6607;
                            else {
                                if (_0x5e6607 instanceof _0x30a72c) {
                                    var _0x98f4b3 = _0x46839d[_0x56eb8b] || (_0x46839d[_0x56eb8b] = new _0x30a72c());
                                    _0x5e6607[_0x5335f3(0x1fc)](_0x98f4b3), _0x46839d[_0x56eb8b] = _0x98f4b3;
                                } else {
                                    if (_0x5e6607 instanceof _0x3697cd) {
                                        var _0x1aad89 = _0x46839d[_0x56eb8b] || (_0x46839d[_0x56eb8b] = new _0x3697cd());
                                        _0x5e6607[_0x5335f3(0x1fc)](_0x1aad89), _0x46839d[_0x56eb8b] = _0x1aad89;
                                    } else {
                                        if (_0x5e6607 instanceof _0x5b8e4e) {
                                            var _0x2bbeb4 = _0x46839d[_0x56eb8b] || (_0x46839d[_0x56eb8b] = new _0x5b8e4e());
                                            _0x5e6607['cloneTo'](_0x2bbeb4), _0x46839d[_0x56eb8b] = _0x2bbeb4;
                                        } else {
                                            if (_0x5e6607 instanceof _0x6b4d98) {
                                                var _0x4502e6 = _0x46839d[_0x56eb8b] || (_0x46839d[_0x56eb8b] = new _0x6b4d98());
                                                _0x5e6607[_0x5335f3(0x1fc)](_0x4502e6), _0x46839d[_0x56eb8b] = _0x4502e6;
                                            } else
                                                _0x5e6607 instanceof _0x387b86[_0x5335f3(0x3e3)] && (_0x46839d[_0x56eb8b] = _0x5e6607);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this[_0x5335f3(0x498)][_0x5335f3(0x1fc)](_0x1ccbb5[_0x5335f3(0x498)]);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1b15f2 = _0x6027f5, _0x5caec8 = new _0x3985fd();
            return this[_0x1b15f2(0x1fc)](_0x5caec8), _0x5caec8;
        }
        [_0x6027f5(0x4b4)](_0x271a5b) {
            var _0x4cab82 = _0x6027f5, _0x4060b5 = _0x271a5b;
            this['_int32Data'][_0x4cab82(0x205)] - _0x4060b5[_0x4cab82(0x4b5)][_0x4cab82(0x205)] > 0x0 && _0x4060b5['needRenewArrayBufferForNative'](this[_0x4cab82(0x4b5)]['length']), _0x4060b5['_int32Data']['set'](this['_int32Data'], 0x0);
            var _0x384aa3 = _0x4060b5[_0x4cab82(0x4b6)], _0x466d22 = this[_0x4cab82(0x4b6)][_0x4cab82(0x205)];
            _0x384aa3['length'] = _0x466d22;
            for (var _0x4a4594 = 0x0; _0x4a4594 < _0x466d22; _0x4a4594++) {
                var _0x27bca3 = this[_0x4cab82(0x4b6)][_0x4a4594];
                if (_0x27bca3) {
                    if (_0x4cab82(0x4b7) == typeof _0x27bca3)
                        _0x384aa3[_0x4a4594] = _0x27bca3, _0x4060b5['setNumber'](_0x4a4594, _0x27bca3);
                    else {
                        if (_0x4cab82(0x4b7) == typeof _0x27bca3)
                            _0x384aa3[_0x4a4594] = _0x27bca3, _0x4060b5[_0x4cab82(0x4a1)](_0x4a4594, _0x27bca3);
                        else {
                            if (_0x4cab82(0x4b8) == typeof _0x27bca3)
                                _0x384aa3[_0x4a4594] = _0x27bca3, _0x4060b5[_0x4cab82(0x49f)](_0x4a4594, _0x27bca3);
                            else {
                                if (_0x27bca3 instanceof _0x30a72c) {
                                    var _0x9f7ca9 = _0x384aa3[_0x4a4594] || (_0x384aa3[_0x4a4594] = new _0x30a72c());
                                    _0x27bca3[_0x4cab82(0x1fc)](_0x9f7ca9), _0x384aa3[_0x4a4594] = _0x9f7ca9, _0x4060b5[_0x4cab82(0x4a5)](_0x4a4594, _0x9f7ca9);
                                } else {
                                    if (_0x27bca3 instanceof _0x3697cd) {
                                        var _0x1f63ea = _0x384aa3[_0x4a4594] || (_0x384aa3[_0x4a4594] = new _0x3697cd());
                                        _0x27bca3['cloneTo'](_0x1f63ea), _0x384aa3[_0x4a4594] = _0x1f63ea, _0x4060b5['setVector3'](_0x4a4594, _0x1f63ea);
                                    } else {
                                        if (_0x27bca3 instanceof _0x5b8e4e) {
                                            var _0x379ea1 = _0x384aa3[_0x4a4594] || (_0x384aa3[_0x4a4594] = new _0x5b8e4e());
                                            _0x27bca3[_0x4cab82(0x1fc)](_0x379ea1), _0x384aa3[_0x4a4594] = _0x379ea1, _0x4060b5[_0x4cab82(0x4a8)](_0x4a4594, _0x379ea1);
                                        } else {
                                            if (_0x27bca3 instanceof _0x6b4d98) {
                                                var _0xd8dd30 = _0x384aa3[_0x4a4594] || (_0x384aa3[_0x4a4594] = new _0x6b4d98());
                                                _0x27bca3[_0x4cab82(0x1fc)](_0xd8dd30), _0x384aa3[_0x4a4594] = _0xd8dd30, _0x4060b5[_0x4cab82(0x4aa)](_0x4a4594, _0xd8dd30);
                                            } else
                                                _0x27bca3 instanceof _0x387b86['BaseTexture'] && (_0x384aa3[_0x4a4594] = _0x27bca3, _0x4060b5['setTexture'](_0x4a4594, _0x27bca3));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this[_0x4cab82(0x498)]['cloneTo'](_0x4060b5['_defineDatas']);
        }
        ['_initDataForNative']() {
            var _0x63f120 = _0x6027f5;
            this[_0x63f120(0x4b9)] = -0x1, this[_0x63f120(0x4ba)][_0x63f120(0x205)] = 0x0, this[_0x63f120(0x4b6)] = [], this[_0x63f120(0x497)] = new ArrayBuffer(0x20), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Data'] = new Float32Array(this[_0x63f120(0x497)]), _0x387b86[_0x63f120(0x303)]['instance'][_0x63f120(0x4bb)](this[_0x63f120(0x497)], _0x387b86[_0x63f120(0x303)][_0x63f120(0x4bc)], !0x0);
        }
        [_0x6027f5(0x4bd)](_0x263734) {
            var _0x4c0a8d = _0x6027f5;
            if (_0x263734 >= this['_int32Data']['length']) {
                var _0x58a941 = 0x4 * (_0x263734 + 0x1), _0x540289 = this[_0x4c0a8d(0x4b5)], _0x43b939 = this[_0x4c0a8d(0x497)][_0x4c0a8d(0x4be)], _0x200b26 = this[_0x4c0a8d(0x497)]['_ptrID'];
                this[_0x4c0a8d(0x497)] = new ArrayBuffer(_0x58a941), this['_int32Data'] = new Int32Array(this[_0x4c0a8d(0x497)]), this['_float32Data'] = new Float32Array(this['_data']), this[_0x4c0a8d(0x497)][_0x4c0a8d(0x4be)] = _0x43b939, this[_0x4c0a8d(0x497)]['_ptrID'] = _0x200b26, _0x540289 && this[_0x4c0a8d(0x4b5)][_0x4c0a8d(0x31f)](_0x540289, 0x0);
                var _0x128e22 = _0x387b86[_0x4c0a8d(0x303)][_0x4c0a8d(0x304)];
                _0x128e22[_0x4c0a8d(0x4bf)] ? _0x128e22['updateArrayBufferRef'](this[_0x4c0a8d(0x497)][_0x4c0a8d(0x4c0)], _0x43b939['isSyncToRender'](), this['_data']) : window['conch']['updateArrayBufferRef'](this[_0x4c0a8d(0x497)][_0x4c0a8d(0x4c0)], _0x43b939[_0x4c0a8d(0x4c1)](), this[_0x4c0a8d(0x497)]);
            }
        }
        [_0x6027f5(0x4c2)]() {
            return this['_nativeArray'];
        }
        [_0x6027f5(0x4c3)](_0x501b11) {
            var _0x67f767 = _0x6027f5;
            return this[_0x67f767(0x4b5)][_0x501b11];
        }
        [_0x6027f5(0x4c4)](_0x518332, _0x3cca21) {
            var _0x593620 = _0x6027f5;
            this[_0x593620(0x4bd)](_0x518332), this[_0x593620(0x4b5)][_0x518332] = _0x3cca21, this[_0x593620(0x4b6)][_0x518332] = _0x3cca21;
        }
        [_0x6027f5(0x4c5)](_0x484eee) {
            return 0x1 == this['_int32Data'][_0x484eee];
        }
        [_0x6027f5(0x4c6)](_0x2c3669, _0x1eed92) {
            var _0x4db057 = _0x6027f5;
            this[_0x4db057(0x4bd)](_0x2c3669), this[_0x4db057(0x4b5)][_0x2c3669] = _0x1eed92 ? 0x1 : 0x0, this[_0x4db057(0x4b6)][_0x2c3669] = _0x1eed92;
        }
        [_0x6027f5(0x4c7)](_0x4c5fdf) {
            var _0x131a03 = _0x6027f5;
            return this[_0x131a03(0x4c8)][_0x4c5fdf];
        }
        [_0x6027f5(0x4c9)](_0x50cf81, _0x1559b3) {
            var _0x440873 = _0x6027f5;
            this[_0x440873(0x4bd)](_0x50cf81), this[_0x440873(0x4c8)][_0x50cf81] = _0x1559b3, this[_0x440873(0x4b6)][_0x50cf81] = _0x1559b3;
        }
        [_0x6027f5(0x4ca)](_0x5c50be) {
            return this['_nativeArray'][_0x5c50be];
        }
        [_0x6027f5(0x4cb)](_0x567fee, _0x1cf26e) {
            var _0x138c03 = _0x6027f5;
            this[_0x138c03(0x4bd)](_0x567fee), this[_0x138c03(0x4b6)][_0x567fee] = _0x1cf26e;
            var _0x142ebf = this[_0x138c03(0x4cc)](_0x1cf26e[_0x138c03(0x1fe)]);
            this[_0x138c03(0x4b5)][_0x567fee] = _0x142ebf;
        }
        [_0x6027f5(0x4cd)](_0x3acc6c) {
            var _0x2fb738 = _0x6027f5;
            return this[_0x2fb738(0x4b6)][_0x3acc6c];
        }
        [_0x6027f5(0x4ce)](_0x37b2b4, _0x284ec3) {
            var _0xe653d1 = _0x6027f5;
            this[_0xe653d1(0x4bd)](_0x37b2b4), this[_0xe653d1(0x4b6)][_0x37b2b4] = _0x284ec3, _0x284ec3['elements'] || _0x284ec3[_0xe653d1(0x20d)]();
            var _0x235b35 = this[_0xe653d1(0x4cc)](_0x284ec3[_0xe653d1(0x1fe)]);
            this[_0xe653d1(0x4b5)][_0x37b2b4] = _0x235b35;
        }
        ['getVector2ForNative'](_0x5637d7) {
            var _0x23aa0d = _0x6027f5;
            return this[_0x23aa0d(0x4b6)][_0x5637d7];
        }
        [_0x6027f5(0x4cf)](_0x30c356, _0x28cb5a) {
            var _0x50a9e0 = _0x6027f5;
            this[_0x50a9e0(0x4bd)](_0x30c356), this['_nativeArray'][_0x30c356] = _0x28cb5a, _0x28cb5a['elements'] || _0x28cb5a['forNativeElement']();
            var _0x3c25fe = this[_0x50a9e0(0x4cc)](_0x28cb5a[_0x50a9e0(0x1fe)]);
            this['_int32Data'][_0x30c356] = _0x3c25fe;
        }
        ['getVector3ForNative'](_0x19d156) {
            return this['_nativeArray'][_0x19d156];
        }
        ['setVector3ForNative'](_0x1c29fd, _0x1245d7) {
            var _0x3d7f8b = _0x6027f5;
            this[_0x3d7f8b(0x4bd)](_0x1c29fd), this['_nativeArray'][_0x1c29fd] = _0x1245d7, _0x1245d7['elements'] || _0x1245d7[_0x3d7f8b(0x20d)]();
            var _0x56c55f = this[_0x3d7f8b(0x4cc)](_0x1245d7[_0x3d7f8b(0x1fe)]);
            this[_0x3d7f8b(0x4b5)][_0x1c29fd] = _0x56c55f;
        }
        ['getQuaternionForNative'](_0x2392d5) {
            var _0x562649 = _0x6027f5;
            return this[_0x562649(0x4b6)][_0x2392d5];
        }
        [_0x6027f5(0x4d0)](_0x17eef9, _0x582971) {
            var _0x4911fd = _0x6027f5;
            this['needRenewArrayBufferForNative'](_0x17eef9), this[_0x4911fd(0x4b6)][_0x17eef9] = _0x582971, _0x582971[_0x4911fd(0x1fe)] || _0x582971[_0x4911fd(0x20d)]();
            var _0x131274 = this[_0x4911fd(0x4cc)](_0x582971[_0x4911fd(0x1fe)]);
            this[_0x4911fd(0x4b5)][_0x17eef9] = _0x131274;
        }
        [_0x6027f5(0x4d1)](_0x1804c4) {
            var _0x2afae0 = _0x6027f5;
            return this[_0x2afae0(0x4b6)][_0x1804c4];
        }
        ['setBufferForNative'](_0x595fdc, _0x349b7a) {
            var _0x40b93c = _0x6027f5;
            this[_0x40b93c(0x4bd)](_0x595fdc), this[_0x40b93c(0x4b6)][_0x595fdc] = _0x349b7a;
            var _0x279252 = this[_0x40b93c(0x4cc)](_0x349b7a);
            this['_int32Data'][_0x595fdc] = _0x279252;
        }
        [_0x6027f5(0x4d2)](_0x28e567) {
            var _0x5a8d24 = _0x6027f5;
            return this[_0x5a8d24(0x4b6)][_0x28e567];
        }
        ['setAttributeForNative'](_0x261953, _0x50bcdd) {
            var _0xd6fd9d = _0x6027f5;
            this[_0xd6fd9d(0x4b6)][_0x261953] = _0x50bcdd, _0x50bcdd[_0xd6fd9d(0x4c0)] || _0x387b86[_0xd6fd9d(0x303)]['instance'][_0xd6fd9d(0x4bb)](_0x50bcdd, _0x387b86[_0xd6fd9d(0x303)][_0xd6fd9d(0x4bc)], !0x0), _0x387b86[_0xd6fd9d(0x303)][_0xd6fd9d(0x304)]['syncBufferToRenderThread'](_0x50bcdd), this['_int32Data'][_0x261953] = _0x50bcdd[_0xd6fd9d(0x4c0)];
        }
        ['getTextureForNative'](_0x2c1aae) {
            var _0x59aca3 = _0x6027f5;
            return this[_0x59aca3(0x4b6)][_0x2c1aae];
        }
        [_0x6027f5(0x4d3)](_0x1b15ea, _0x3b6155) {
            var _0xf28a8b = _0x6027f5;
            if (_0x3b6155) {
                this[_0xf28a8b(0x4bd)](_0x1b15ea);
                var _0x1d8b81 = this[_0xf28a8b(0x4b6)][_0x1b15ea];
                this[_0xf28a8b(0x4b6)][_0x1b15ea] = _0x3b6155;
                var _0x57d5df = _0x3b6155[_0xf28a8b(0x4d4)]() || _0x3b6155[_0xf28a8b(0x3f6)]['_getSource']();
                this['_int32Data'][_0x1b15ea] = _0x57d5df['id'], this[_0xf28a8b(0x496)] && this['_ownerResource']['referenceCount'] > 0x0 && (_0x1d8b81 && _0x1d8b81[_0xf28a8b(0x35c)](), _0x3b6155 && _0x3b6155[_0xf28a8b(0x35f)]());
            }
        }
        [_0x6027f5(0x4cc)](_0x105b63) {
            var _0x1bf7c4 = _0x6027f5;
            this[_0x1bf7c4(0x4d5)]();
            var _0x4caef7 = 0x0, _0x1173b0 = 0x0;
            return _0x3985fd[_0x1bf7c4(0x4d6)] ? (_0x387b86[_0x1bf7c4(0x303)]['instance'][_0x1bf7c4(0x4d7)](_0x105b63, _0x387b86[_0x1bf7c4(0x303)][_0x1bf7c4(0x4bc)], !0x0, _0x387b86['LayaGL'][_0x1bf7c4(0x4d8)]), _0x4caef7 = 0x0, _0x1173b0 = _0x105b63[_0x1bf7c4(0x4d9)](_0x4caef7)) : (_0x387b86[_0x1bf7c4(0x303)][_0x1bf7c4(0x304)]['createArrayBufferRefs'](_0x105b63, _0x387b86[_0x1bf7c4(0x303)]['ARRAY_BUFFER_TYPE_DATA'], !0x0, _0x387b86[_0x1bf7c4(0x303)]['ARRAY_BUFFER_REF_COPY']), _0x4caef7 = _0x105b63['getRefNum']() - 0x1, _0x1173b0 = _0x105b63['getPtrID'](_0x4caef7), this[_0x1bf7c4(0x4ba)][_0x1bf7c4(0x2ac)]({
                'obj': _0x105b63,
                'refID': _0x4caef7,
                'ptrID': _0x1173b0
            })), _0x387b86['LayaGL']['instance'][_0x1bf7c4(0x4da)](_0x105b63, _0x4caef7), _0x1173b0;
        }
        static [_0x6027f5(0x4db)](_0x4e031b) {
            var _0x4ee09e = _0x6027f5;
            _0x3985fd[_0x4ee09e(0x4d6)] = _0x4e031b;
        }
        [_0x6027f5(0x4d5)]() {
            var _0x16dcc6 = _0x6027f5, _0x539eec = _0x387b86[_0x16dcc6(0x4dc)]['loopCount'];
            if (this[_0x16dcc6(0x4b9)] != _0x539eec) {
                this[_0x16dcc6(0x4b9)] = _0x539eec;
                for (var _0x44216f = 0x0, _0x41348e = this[_0x16dcc6(0x4ba)][_0x16dcc6(0x205)]; _0x44216f < _0x41348e; _0x44216f++) {
                    this['_runtimeCopyValues'][_0x44216f][_0x16dcc6(0x4dd)][_0x16dcc6(0x4de)]();
                }
                this[_0x16dcc6(0x4ba)]['length'] = 0x0;
            }
        }
    }
    _0x3985fd[_0x6027f5(0x4d6)] = !0x0;
    class _0x4b2139 {
        constructor(_0x5d7e08, _0x179a2f) {
            var _0x4b1fd9 = _0x6027f5;
            this['_id'] = ++_0x4b2139['_uniqueIDCounter'], this[_0x4b1fd9(0x4df)] = {}, this[_0x4b1fd9(0x4e0)] = _0x5d7e08, this[_0x4b1fd9(0x4e1)] = _0x179a2f;
            var _0x11cbb3 = _0x179a2f[_0x4b1fd9(0x205)];
            this[_0x4b1fd9(0x4e2)] = new _0x3985fd(null);
            for (var _0x1a6069 = 0x0; _0x1a6069 < _0x11cbb3; _0x1a6069++) {
                var _0x635df7 = _0x179a2f[_0x1a6069], _0x313aba = _0x635df7[_0x4b1fd9(0x4e3)];
                this[_0x4b1fd9(0x4df)][_0x313aba] = _0x635df7;
                var _0x20ce0f = new Int32Array(0x5), _0x204a09 = _0x53b5cc[_0x4b1fd9(0x466)](_0x635df7['_elementFormat']);
                _0x20ce0f[0x0] = _0x204a09[0x0], _0x20ce0f[0x1] = _0x204a09[0x1], _0x20ce0f[0x2] = _0x204a09[0x2], _0x20ce0f[0x3] = this['_vertexStride'], _0x20ce0f[0x4] = _0x635df7[_0x4b1fd9(0x4e4)], this[_0x4b1fd9(0x4e2)][_0x4b1fd9(0x4b1)](_0x313aba, _0x20ce0f);
            }
        }
        get ['id']() {
            return this['_id'];
        }
        get [_0x6027f5(0x4e5)]() {
            var _0x52c4b7 = _0x6027f5;
            return this[_0x52c4b7(0x4e0)];
        }
        get [_0x6027f5(0x4e6)]() {
            var _0x34ce78 = _0x6027f5;
            return this['_vertexElements'][_0x34ce78(0x205)];
        }
        [_0x6027f5(0x4e7)](_0x241f6a) {
            var _0x19c7a5 = _0x6027f5;
            return this[_0x19c7a5(0x4e1)][_0x241f6a];
        }
        [_0x6027f5(0x4e8)](_0xd64961) {
            var _0x493a68 = _0x6027f5;
            return this[_0x493a68(0x4df)][_0xd64961];
        }
    }
    _0x4b2139[_0x6027f5(0x4e9)] = 0x1;
    class _0x25649b {
        constructor(_0xe83c11, _0x110530, _0x3e7f10) {
            var _0x6f1f0f = _0x6027f5;
            this['_offset'] = _0xe83c11, this['_elementFormat'] = _0x110530, this[_0x6f1f0f(0x4e3)] = _0x3e7f10;
        }
        get [_0x6027f5(0x2c8)]() {
            var _0x24a589 = _0x6027f5;
            return this[_0x24a589(0x4e4)];
        }
        get ['elementFormat']() {
            return this['_elementFormat'];
        }
        get [_0x6027f5(0x4ea)]() {
            var _0xf07330 = _0x6027f5;
            return this[_0xf07330(0x4e3)];
        }
    }
    class _0x5b1dae extends _0x387b86['BufferStateBase'] {
        constructor() {
            super();
        }
        [_0x6027f5(0x4eb)](_0x57a3a7) {
            var _0x384a7a = _0x6027f5;
            if (_0x387b86['BufferStateBase'][_0x384a7a(0x4ec)] !== this)
                throw _0x384a7a(0x4ed);
            var _0x7f543a = _0x387b86[_0x384a7a(0x303)]['instance'], _0x164ae7 = _0x57a3a7[_0x384a7a(0x456)], _0x5029cc = _0x164ae7['_shaderValues'][_0x384a7a(0x319)]();
            for (var _0xd58475 in (this[_0x384a7a(0x456)] = _0x164ae7, _0x57a3a7['bind'](), _0x5029cc)) {
                var _0xc42735 = parseInt(_0xd58475), _0xfed31a = _0x5029cc[_0xd58475];
                _0x7f543a['enableVertexAttribArray'](_0xc42735), _0x7f543a[_0x384a7a(0x4ee)](_0xc42735, _0xfed31a[0x0], _0xfed31a[0x1], !!_0xfed31a[0x2], _0xfed31a[0x3], _0xfed31a[0x4]);
            }
        }
        ['applyVertexBuffers'](_0x3087de) {
            var _0x21f0dd = _0x6027f5;
            if (_0x387b86[_0x21f0dd(0x4ef)]['_curBindedBufferState'] !== this)
                throw 'BufferState:\x20must\x20call\x20bind()\x20function\x20first.';
            for (var _0x48f1d9 = _0x387b86[_0x21f0dd(0x303)]['instance'], _0x525629 = 0x0, _0x405631 = _0x3087de[_0x21f0dd(0x205)]; _0x525629 < _0x405631; _0x525629++) {
                var _0xab2b8d = _0x3087de[_0x525629], _0x41f4d2 = _0xab2b8d[_0x21f0dd(0x456)][_0x21f0dd(0x4e2)]['getData']();
                for (var _0x37feb2 in (_0xab2b8d['bind'](), _0x41f4d2)) {
                    var _0x5f580f = parseInt(_0x37feb2), _0x10a11d = _0x41f4d2[_0x37feb2];
                    _0x48f1d9[_0x21f0dd(0x4f0)](_0x5f580f), _0x48f1d9[_0x21f0dd(0x4ee)](_0x5f580f, _0x10a11d[0x0], _0x10a11d[0x1], !!_0x10a11d[0x2], _0x10a11d[0x3], _0x10a11d[0x4]);
                }
            }
        }
        ['applyInstanceVertexBuffer'](_0x20c821) {
            var _0x5f42bc = _0x6027f5;
            if (_0x387b86[_0x5f42bc(0x303)]['layaGPUInstance']['supportInstance']()) {
                if (_0x387b86['BufferStateBase'][_0x5f42bc(0x4ec)] !== this)
                    throw _0x5f42bc(0x4ed);
                var _0x344108 = _0x387b86[_0x5f42bc(0x303)][_0x5f42bc(0x304)], _0x429f5a = _0x20c821[_0x5f42bc(0x456)][_0x5f42bc(0x4e2)][_0x5f42bc(0x319)]();
                for (var _0x10ad11 in (_0x20c821[_0x5f42bc(0x452)](), _0x429f5a)) {
                    var _0x2b751a = parseInt(_0x10ad11), _0x5b715a = _0x429f5a[_0x10ad11];
                    _0x344108[_0x5f42bc(0x4f0)](_0x2b751a), _0x344108['vertexAttribPointer'](_0x2b751a, _0x5b715a[0x0], _0x5b715a[0x1], !!_0x5b715a[0x2], _0x5b715a[0x3], _0x5b715a[0x4]), _0x387b86[_0x5f42bc(0x303)][_0x5f42bc(0x4f1)][_0x5f42bc(0x4f2)](_0x2b751a, 0x1);
                }
            }
        }
        [_0x6027f5(0x4f3)](_0x21c264) {
            var _0x55c36f = _0x6027f5;
            if (_0x387b86[_0x55c36f(0x4ef)][_0x55c36f(0x4ec)] !== this)
                throw 'BufferState:\x20must\x20call\x20bind()\x20function\x20first.';
            this[_0x55c36f(0x4f4)] !== _0x21c264 && (_0x21c264[_0x55c36f(0x4f5)](), this[_0x55c36f(0x4f4)] = _0x21c264);
        }
    }
    class _0x39fe36 extends _0x387b86[_0x6027f5(0x324)] {
        constructor() {
            var _0x182f57 = _0x6027f5;
            super(), this['_bufferState'] = new _0x5b1dae(), this['_bufferStateInvertUV'] = new _0x5b1dae();
            var _0x2b1536 = _0x387b86[_0x182f57(0x303)][_0x182f57(0x304)];
            this['_vertexBuffer'] = new _0x2ce777(0x40, _0x2b1536['STATIC_DRAW'], !0x1), this[_0x182f57(0x4f6)][_0x182f57(0x456)] = _0x39fe36[_0x182f57(0x455)], this[_0x182f57(0x4f6)][_0x182f57(0x45d)](_0x39fe36[_0x182f57(0x4f7)][_0x182f57(0x454)]), this[_0x182f57(0x4f8)][_0x182f57(0x452)](), this['_bufferState'][_0x182f57(0x4eb)](this[_0x182f57(0x4f6)]), this[_0x182f57(0x4f8)][_0x182f57(0x4f9)](), this['_vertexBufferInvertUV'] = new _0x2ce777(0x40, _0x2b1536[_0x182f57(0x4fa)], !0x1), this['_vertexBufferInvertUV'][_0x182f57(0x456)] = _0x39fe36[_0x182f57(0x455)], this[_0x182f57(0x4fb)][_0x182f57(0x45d)](_0x39fe36['_verticesInvertUV']['buffer']), this[_0x182f57(0x4fc)][_0x182f57(0x452)](), this[_0x182f57(0x4fc)][_0x182f57(0x4eb)](this['_vertexBufferInvertUV']), this[_0x182f57(0x4fc)]['unBind'](), this[_0x182f57(0x433)](this[_0x182f57(0x4f6)]['_byteLength'] + this[_0x182f57(0x4fb)][_0x182f57(0x451)]);
        }
        static [_0x6027f5(0x230)]() {
            var _0x105e7f = _0x6027f5;
            _0x39fe36['_vertexDeclaration'] = new _0x4b2139(0x10, [new _0x25649b(0x0, _0x53b5cc[_0x105e7f(0x4fd)], _0x39fe36[_0x105e7f(0x4fe)])]), _0x39fe36[_0x105e7f(0x304)] = new _0x39fe36(), _0x39fe36[_0x105e7f(0x304)][_0x105e7f(0x31d)] = !0x0;
        }
        [_0x6027f5(0x4ff)]() {
            var _0x32db6a = _0x6027f5, _0x16297d = _0x387b86[_0x32db6a(0x303)][_0x32db6a(0x304)];
            this[_0x32db6a(0x4f8)][_0x32db6a(0x452)](), _0x16297d[_0x32db6a(0x500)](_0x16297d[_0x32db6a(0x501)], 0x0, 0x4), _0x387b86[_0x32db6a(0x4dc)][_0x32db6a(0x502)]++;
        }
        [_0x6027f5(0x503)]() {
            var _0x3272ad = _0x6027f5, _0x185030 = _0x387b86[_0x3272ad(0x303)][_0x3272ad(0x304)];
            this[_0x3272ad(0x4fc)][_0x3272ad(0x452)](), _0x185030[_0x3272ad(0x500)](_0x185030['TRIANGLE_STRIP'], 0x0, 0x4), _0x387b86[_0x3272ad(0x4dc)][_0x3272ad(0x502)]++;
        }
        [_0x6027f5(0x364)]() {
            var _0x53ce0f = _0x6027f5;
            super[_0x53ce0f(0x364)](), this['_bufferState'][_0x53ce0f(0x364)](), this[_0x53ce0f(0x4f6)][_0x53ce0f(0x364)](), this[_0x53ce0f(0x4fc)][_0x53ce0f(0x364)](), this[_0x53ce0f(0x4fb)]['destroy'](), this[_0x53ce0f(0x433)](0x0);
        }
    }
    _0x39fe36[_0x6027f5(0x4fe)] = 0x0, _0x39fe36[_0x6027f5(0x4f7)] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        -0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        -0x1,
        0x0,
        0x0
    ]), _0x39fe36['_verticesInvertUV'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        0x0,
        -0x1,
        -0x1,
        0x0,
        0x1
    ]);
    class _0x22efc5 extends _0x387b86[_0x6027f5(0x324)] {
        constructor() {
            var _0x249e6b = _0x6027f5;
            super(), this[_0x249e6b(0x4f8)] = new _0x5b1dae(), this['_bufferStateInvertUV'] = new _0x5b1dae();
            var _0x5dc20f = _0x387b86['LayaGL'][_0x249e6b(0x304)];
            this[_0x249e6b(0x4f6)] = new _0x2ce777(0x30, _0x5dc20f[_0x249e6b(0x4fa)], !0x1), this[_0x249e6b(0x4f6)][_0x249e6b(0x456)] = _0x22efc5[_0x249e6b(0x455)], this[_0x249e6b(0x4f6)]['setData'](_0x22efc5[_0x249e6b(0x4f7)][_0x249e6b(0x454)]), this[_0x249e6b(0x4f8)]['bind'](), this[_0x249e6b(0x4f8)][_0x249e6b(0x4eb)](this[_0x249e6b(0x4f6)]), this[_0x249e6b(0x4f8)][_0x249e6b(0x4f9)](), this['_vertexBufferInvertUV'] = new _0x2ce777(0x30, _0x5dc20f[_0x249e6b(0x4fa)], !0x1), this[_0x249e6b(0x4fb)][_0x249e6b(0x456)] = _0x22efc5[_0x249e6b(0x455)], this[_0x249e6b(0x4fb)]['setData'](_0x22efc5[_0x249e6b(0x504)][_0x249e6b(0x454)]), this[_0x249e6b(0x4fc)][_0x249e6b(0x452)](), this['_bufferStateInvertUV']['applyVertexBuffer'](this['_vertexBufferInvertUV']), this['_bufferStateInvertUV'][_0x249e6b(0x4f9)](), this['_setGPUMemory'](this[_0x249e6b(0x4f6)][_0x249e6b(0x451)] + this[_0x249e6b(0x4fb)][_0x249e6b(0x451)]);
        }
        static [_0x6027f5(0x230)]() {
            var _0x51c511 = _0x6027f5;
            _0x22efc5[_0x51c511(0x455)] = new _0x4b2139(0x10, [new _0x25649b(0x0, _0x53b5cc[_0x51c511(0x4fd)], _0x22efc5[_0x51c511(0x505)])]), _0x22efc5[_0x51c511(0x304)] = new _0x22efc5(), _0x22efc5[_0x51c511(0x304)][_0x51c511(0x31d)] = !0x0;
        }
        [_0x6027f5(0x4ff)]() {
            var _0x456740 = _0x6027f5, _0x4e06b6 = _0x387b86[_0x456740(0x303)][_0x456740(0x304)];
            this['_bufferState'][_0x456740(0x452)](), _0x4e06b6[_0x456740(0x500)](_0x4e06b6[_0x456740(0x506)], 0x0, 0x3), _0x387b86[_0x456740(0x4dc)][_0x456740(0x502)]++;
        }
        [_0x6027f5(0x503)]() {
            var _0x8a2726 = _0x6027f5, _0x236f94 = _0x387b86[_0x8a2726(0x303)][_0x8a2726(0x304)];
            this[_0x8a2726(0x4fc)][_0x8a2726(0x452)](), _0x236f94[_0x8a2726(0x500)](_0x236f94['TRIANGLES'], 0x0, 0x3), _0x387b86[_0x8a2726(0x4dc)][_0x8a2726(0x502)]++;
        }
        [_0x6027f5(0x364)]() {
            var _0xf091fb = _0x6027f5;
            super[_0xf091fb(0x364)](), this[_0xf091fb(0x4f8)][_0xf091fb(0x364)](), this[_0xf091fb(0x4f6)][_0xf091fb(0x364)](), this[_0xf091fb(0x4fc)][_0xf091fb(0x364)](), this[_0xf091fb(0x4fb)][_0xf091fb(0x364)](), this['_setGPUMemory'](0x0);
        }
    }
    _0x22efc5['SCREENTRIANGLE_POSITION_UV'] = 0x0, _0x22efc5[_0x6027f5(0x4f7)] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x0,
        -0x1,
        0x3,
        0x0,
        0x2,
        0x3,
        -0x1,
        0x2,
        0x0
    ]), _0x22efc5[_0x6027f5(0x504)] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x1,
        -0x1,
        0x3,
        0x0,
        -0x1,
        0x3,
        -0x1,
        0x2,
        0x1
    ]);
    class _0x2145e2 {
        constructor(_0x1b7829, _0x35d4a8) {
            var _0xd68db3 = _0x6027f5;
            this[_0xd68db3(0x447)] = _0x1b7829, this[_0xd68db3(0x448)] = _0x35d4a8;
        }
    }
    class _0x64cfdc {
        constructor(_0x4bd23a, _0x457942, _0x31568e, _0xf63ff9) {
            var _0x47113c = _0x6027f5;
            this[_0x47113c(0x507)] = 0x0, this['_passIndex'] = 0x0, this['setValue'](_0x4bd23a, _0x457942, _0x31568e, _0xf63ff9);
        }
        get [_0x6027f5(0x508)]() {
            var _0x155dce = _0x6027f5;
            return this[_0x155dce(0x509)];
        }
        get ['subShaderIndex']() {
            var _0x2ce177 = _0x6027f5;
            return this[_0x2ce177(0x507)];
        }
        get [_0x6027f5(0x50a)]() {
            var _0x5150b6 = _0x6027f5;
            return this[_0x5150b6(0x50b)];
        }
        get ['defineNames']() {
            return this['_defineNames'];
        }
        [_0x6027f5(0x1f8)](_0x3a993f, _0x8ef1a5, _0x41797e, _0x56f3ca) {
            var _0x3add99 = _0x6027f5;
            if (!_0x3a993f)
                throw 'ShaderVariantInfo:Shader\x20can\x27t\x20be\x20null.';
            var _0xf6878b = _0x3a993f[_0x3add99(0x50c)](_0x8ef1a5);
            if (!_0xf6878b)
                throw 'ShaderVariantInfo:Shader\x20don\x27t\x20have\x20subShaderIndex\x20of\x20' + _0x8ef1a5 + '.';
            var _0x122c07 = _0xf6878b[_0x3add99(0x50d)][_0x41797e];
            if (!_0x122c07)
                throw _0x3add99(0x50e) + _0x41797e + '.';
            for (var _0x3083df = _0x122c07[_0x3add99(0x50f)], _0x5aa3ba = 0x0, _0x3a8b17 = _0x56f3ca['length']; _0x5aa3ba < _0x3a8b17; _0x5aa3ba++) {
                var _0x21ea3d = _0x56f3ca[_0x5aa3ba];
                if (!_0x3083df[_0x3add99(0x44b)](_0x525782['Shader3D'][_0x3add99(0x510)](_0x21ea3d)))
                    throw _0x3add99(0x511) + _0x21ea3d + _0x3add99(0x512) + _0x3a993f[_0x3add99(0x513)] + _0x3add99(0x514) + _0x8ef1a5 + _0x3add99(0x515) + _0x41797e + '.';
            }
            this[_0x3add99(0x509)] = _0x3a993f, this[_0x3add99(0x507)] = _0x8ef1a5, this[_0x3add99(0x50b)] = _0x41797e, this[_0x3add99(0x516)] = _0x56f3ca;
        }
        [_0x6027f5(0x517)](_0x3b4927) {
            var _0x398fcd = _0x6027f5;
            if (this[_0x398fcd(0x509)] !== _0x3b4927['_shader'] || this[_0x398fcd(0x507)] !== _0x3b4927[_0x398fcd(0x507)] || this[_0x398fcd(0x50b)] !== _0x3b4927['_passIndex'])
                return !0x1;
            var _0x34ef11 = this[_0x398fcd(0x516)], _0x20e515 = _0x3b4927['_defineNames'];
            if (_0x34ef11[_0x398fcd(0x205)] !== _0x20e515[_0x398fcd(0x205)])
                return !0x1;
            for (var _0x222e57 = 0x0, _0x354e1c = this[_0x398fcd(0x516)][_0x398fcd(0x205)]; _0x222e57 < _0x354e1c; _0x222e57++)
                if (_0x34ef11[_0x222e57] !== _0x20e515[_0x222e57])
                    return !0x1;
            return !0x0;
        }
        [_0x6027f5(0x1fd)]() {
            var _0xbf4361 = _0x6027f5;
            return new _0x64cfdc(this[_0xbf4361(0x509)], this['_subShaderIndex'], this[_0xbf4361(0x50b)], this[_0xbf4361(0x516)]['slice']());
        }
    }
    class _0x39eed8 {
        constructor() {
            var _0x6d9eac = _0x6027f5;
            this[_0x6d9eac(0x518)] = !0x1, this[_0x6d9eac(0x519)] = [];
        }
        get [_0x6027f5(0x51a)]() {
            var _0x56f419 = _0x6027f5;
            return this[_0x56f419(0x518)];
        }
        get [_0x6027f5(0x51b)]() {
            var _0x44194c = _0x6027f5;
            return this[_0x44194c(0x519)][_0x44194c(0x205)];
        }
        ['add'](_0x1d9e46) {
            var _0x5b5ae7 = _0x6027f5;
            for (var _0x479cec = 0x0, _0x1e56f8 = this[_0x5b5ae7(0x519)]['length']; _0x479cec < _0x1e56f8; _0x479cec++)
                if (this[_0x5b5ae7(0x519)][_0x479cec][_0x5b5ae7(0x517)](_0x1d9e46))
                    return !0x1;
            return this[_0x5b5ae7(0x519)][_0x5b5ae7(0x2ac)](_0x1d9e46[_0x5b5ae7(0x1fd)]()), this[_0x5b5ae7(0x518)] = !0x1, !0x0;
        }
        ['remove'](_0xb6d5fa) {
            var _0x21842f = _0x6027f5;
            for (var _0x24f902 = 0x0, _0x516bd3 = this[_0x21842f(0x519)][_0x21842f(0x205)]; _0x24f902 < _0x516bd3; _0x24f902++)
                if (this['_variants'][_0x24f902]['equal'](_0xb6d5fa))
                    return this[_0x21842f(0x519)][_0x21842f(0x33a)](_0x24f902, 0x1), !0x0;
            return !0x1;
        }
        [_0x6027f5(0x51c)](_0xc0cf2e) {
            var _0x3e6bb3 = _0x6027f5;
            for (var _0x15ad3c = 0x0, _0x59f802 = this['_variants']['length']; _0x15ad3c < _0x59f802; _0x15ad3c++)
                if (this[_0x3e6bb3(0x519)][_0x15ad3c][_0x3e6bb3(0x517)](_0xc0cf2e))
                    return !0x0;
            return !0x1;
        }
        [_0x6027f5(0x51d)](_0x349099) {
            var _0x8cc9af = _0x6027f5;
            return this[_0x8cc9af(0x519)][_0x349099];
        }
        [_0x6027f5(0x44c)]() {
            var _0x482b28 = _0x6027f5;
            this[_0x482b28(0x519)][_0x482b28(0x205)] = 0x0;
        }
        [_0x6027f5(0x51e)]() {
            var _0x52cb07 = _0x6027f5;
            if (!this[_0x52cb07(0x518)]) {
                for (var _0x12017a = this['_variants'], _0x27847a = 0x0, _0x51bb90 = _0x12017a[_0x52cb07(0x205)]; _0x27847a < _0x51bb90; _0x27847a++) {
                    var _0x15cb38 = _0x12017a[_0x27847a];
                    _0x525782['Shader3D'][_0x52cb07(0x51f)](_0x15cb38[_0x52cb07(0x509)][_0x52cb07(0x513)], _0x15cb38[_0x52cb07(0x507)], _0x15cb38[_0x52cb07(0x50b)], _0x15cb38['_defineNames']);
                }
                this['_allCompiled'] = !0x0;
            }
        }
    }
    class _0x3a9f31 {
        constructor(_0x5a1dda, _0x29b04c, _0x2962f7, _0x5e017f, _0x43f747) {
            var _0x3d9640 = _0x6027f5;
            this[_0x3d9640(0x520)] = null, this[_0x3d9640(0x521)] = null, this[_0x3d9640(0x522)] = !0x1, this[_0x3d9640(0x523)] = !0x1, this[_0x3d9640(0x524)] = [], this[_0x3d9640(0x513)] = _0x5a1dda, this[_0x3d9640(0x520)] = _0x29b04c, this['_uniformMap'] = _0x2962f7, this[_0x3d9640(0x522)] = _0x5e017f, this[_0x3d9640(0x523)] = _0x43f747;
        }
        static [_0x6027f5(0x525)](_0x4ab16c, _0x5b216d) {
            var _0x2a5612 = _0x6027f5, _0x28b9e0 = _0x3a9f31[_0x2a5612(0x526)], _0x2b825e = _0x4ab16c[_0x2a5612(0x445)];
            _0x5b216d[_0x2a5612(0x205)] = 0x0;
            for (var _0x4193da = 0x0, _0x56fa2e = _0x4ab16c['_length']; _0x4193da < _0x56fa2e; _0x4193da++)
                for (var _0x3795f2 = _0x28b9e0[_0x4193da], _0x2a2de4 = _0x2b825e[_0x4193da], _0x50cff0 = 0x0; _0x50cff0 < 0x20; _0x50cff0++) {
                    var _0x3f71d5 = 0x1 << _0x50cff0;
                    if (_0x2a2de4 > 0x0 && _0x3f71d5 > _0x2a2de4)
                        break;
                    _0x2a2de4 & _0x3f71d5 && _0x5b216d['push'](_0x3795f2[_0x3f71d5]);
                }
        }
        static ['getDefineByName'](_0x286e2b) {
            var _0x3e8434 = _0x6027f5, _0x46042e = _0x3a9f31[_0x3e8434(0x527)][_0x286e2b];
            if (!_0x46042e) {
                var _0x4d0421 = _0x3a9f31[_0x3e8434(0x526)], _0x362a26 = _0x3a9f31['_defineCounter'], _0x1626ec = Math[_0x3e8434(0x24e)](_0x362a26 / 0x20), _0x5c7c03 = 0x1 << _0x362a26 % 0x20;
                _0x46042e = new _0x2145e2(_0x1626ec, _0x5c7c03), _0x3a9f31[_0x3e8434(0x527)][_0x286e2b] = _0x46042e, _0x1626ec == _0x4d0421[_0x3e8434(0x205)] && (_0x4d0421['length']++, _0x4d0421[_0x1626ec] = {}), _0x4d0421[_0x1626ec][_0x5c7c03] = _0x286e2b, _0x3a9f31[_0x3e8434(0x528)]++;
            }
            return _0x46042e;
        }
        static ['propertyNameToID'](_0x5ea314) {
            var _0x17863d = _0x6027f5;
            if (null != _0x3a9f31['_propertyNameMap'][_0x5ea314])
                return _0x3a9f31[_0x17863d(0x529)][_0x5ea314];
            var _0x3d146a = _0x3a9f31['_propertyNameCounter']++;
            return _0x3a9f31['_propertyNameMap'][_0x5ea314] = _0x3d146a, _0x3a9f31[_0x17863d(0x529)][_0x3d146a] = _0x5ea314, _0x3d146a;
        }
        static ['addInclude'](_0x3f0c38, _0x336abf) {
            var _0x2be996 = _0x6027f5;
            _0x336abf = _0x336abf[_0x2be996(0x52a)](_0x387b86[_0x2be996(0x52b)][_0x2be996(0x52c)], ''), _0x387b86[_0x2be996(0x52b)][_0x2be996(0x52d)](_0x3f0c38, _0x336abf);
        }
        static ['compileShaderByDefineNames'](_0x54037d, _0x36d32d, _0x9136d6, _0x274c43) {
            var _0x18a7f7 = _0x6027f5, _0x44533c = _0x3a9f31[_0x18a7f7(0x52e)](_0x54037d);
            if (_0x44533c) {
                var _0x4ffb11 = _0x44533c['getSubShaderAt'](_0x36d32d);
                if (_0x4ffb11) {
                    var _0x12005e = _0x4ffb11[_0x18a7f7(0x50d)][_0x9136d6];
                    if (_0x12005e) {
                        var _0x5c9dba = _0x3a9f31[_0x18a7f7(0x52f)];
                        _0x5c9dba[_0x18a7f7(0x44c)]();
                        for (var _0x22454c = 0x0, _0x337fcd = _0x274c43['length']; _0x22454c < _0x337fcd; _0x22454c++)
                            _0x5c9dba[_0x18a7f7(0x207)](_0x3a9f31['getDefineByName'](_0x274c43[_0x22454c]));
                        _0x12005e[_0x18a7f7(0x530)](_0x5c9dba);
                    } else
                        console['warn'](_0x18a7f7(0x531));
                } else
                    console[_0x18a7f7(0x25a)]('Shader3D:\x20unknown\x20subShaderIndex.');
            } else
                console[_0x18a7f7(0x25a)](_0x18a7f7(0x532));
        }
        static [_0x6027f5(0x207)](_0x5a988e, _0x516acd = null, _0x30be8a = null, _0x51a152 = !0x1, _0xf342e = !0x1) {
            var _0x49b7a4 = _0x6027f5;
            return _0x3a9f31[_0x49b7a4(0x533)][_0x5a988e] = new _0x3a9f31(_0x5a988e, _0x516acd, _0x30be8a, _0x51a152, _0xf342e);
        }
        static [_0x6027f5(0x52e)](_0x33d9ab) {
            var _0x1173ed = _0x6027f5;
            return _0x3a9f31[_0x1173ed(0x533)][_0x33d9ab];
        }
        get [_0x6027f5(0x2b7)]() {
            var _0x59a388 = _0x6027f5;
            return this[_0x59a388(0x513)];
        }
        [_0x6027f5(0x534)](_0x4a7ee0) {
            var _0x5a90d7 = _0x6027f5;
            this[_0x5a90d7(0x524)][_0x5a90d7(0x2ac)](_0x4a7ee0), _0x4a7ee0[_0x5a90d7(0x3dc)] = this;
        }
        [_0x6027f5(0x50c)](_0x46a1d3) {
            var _0x5607a7 = _0x6027f5;
            return this[_0x5607a7(0x524)][_0x46a1d3];
        }
        static ['compileShader'](_0x2e644f, _0x417eb8, _0x584633, ..._0x4ff65f) {
            var _0x1cd190 = _0x6027f5, _0x577295 = _0x3a9f31[_0x1cd190(0x52e)](_0x2e644f);
            if (_0x577295) {
                var _0xda02cf = _0x577295[_0x1cd190(0x50c)](_0x417eb8);
                if (_0xda02cf) {
                    var _0x51d2fd = _0xda02cf[_0x1cd190(0x50d)][_0x584633];
                    if (_0x51d2fd) {
                        var _0x46d18e = _0x3a9f31[_0x1cd190(0x52f)], _0x48d006 = _0x46d18e[_0x1cd190(0x445)];
                        _0x48d006[_0x1cd190(0x205)] = 0x0;
                        for (var _0x388d01 = 0x0, _0x1d7741 = _0x4ff65f[_0x1cd190(0x205)]; _0x388d01 < _0x1d7741; _0x388d01++)
                            _0x48d006[_0x1cd190(0x2ac)](_0x4ff65f[_0x388d01]);
                        _0x46d18e[_0x1cd190(0x446)] = _0x4ff65f['length'], _0x51d2fd[_0x1cd190(0x530)](_0x46d18e);
                    } else
                        console[_0x1cd190(0x25a)](_0x1cd190(0x531));
                } else
                    console[_0x1cd190(0x25a)](_0x1cd190(0x535));
            } else
                console[_0x1cd190(0x25a)](_0x1cd190(0x532));
        }
    }
    _0x3a9f31[_0x6027f5(0x52f)] = new _0x1ff4c5(), _0x3a9f31[_0x6027f5(0x536)] = 0x0, _0x3a9f31['RENDER_STATE_BLEND'] = 0x1, _0x3a9f31['RENDER_STATE_BLEND_SRC'] = 0x2, _0x3a9f31[_0x6027f5(0x537)] = 0x3, _0x3a9f31['RENDER_STATE_BLEND_SRC_RGB'] = 0x4, _0x3a9f31[_0x6027f5(0x538)] = 0x5, _0x3a9f31[_0x6027f5(0x539)] = 0x6, _0x3a9f31[_0x6027f5(0x53a)] = 0x7, _0x3a9f31['RENDER_STATE_BLEND_CONST_COLOR'] = 0x8, _0x3a9f31[_0x6027f5(0x53b)] = 0x9, _0x3a9f31[_0x6027f5(0x53c)] = 0xa, _0x3a9f31[_0x6027f5(0x53d)] = 0xb, _0x3a9f31[_0x6027f5(0x53e)] = 0xc, _0x3a9f31[_0x6027f5(0x53f)] = 0xd, _0x3a9f31[_0x6027f5(0x540)] = 0x0, _0x3a9f31[_0x6027f5(0x541)] = 0x1, _0x3a9f31[_0x6027f5(0x542)] = 0x2, _0x3a9f31['PERIOD_CAMERA'] = 0x3, _0x3a9f31[_0x6027f5(0x543)] = 0x4, _0x3a9f31['_propertyNameMap'] = {}, _0x3a9f31[_0x6027f5(0x544)] = 0x0, _0x3a9f31[_0x6027f5(0x528)] = 0x0, _0x3a9f31[_0x6027f5(0x527)] = {}, _0x3a9f31[_0x6027f5(0x533)] = {}, _0x3a9f31[_0x6027f5(0x526)] = [], _0x3a9f31[_0x6027f5(0x545)] = !0x1, _0x3a9f31[_0x6027f5(0x546)] = new _0x39eed8();
    class _0x47a986 {
        constructor() {
            var _0x4f4025 = _0x6027f5;
            this[_0x4f4025(0x547)] = null;
        }
        static [_0x6027f5(0x230)]() {
            var _0x131df6 = _0x6027f5;
            _0x47a986[_0x131df6(0x548)] = new _0x3985fd(), _0x47a986['_screenShader'] = _0x3a9f31['find'](_0x131df6(0x549));
        }
        [_0x6027f5(0x54a)]() {
        }
        [_0x6027f5(0x54b)]() {
            var _0x404760 = _0x6027f5;
            this[_0x404760(0x547)] = null;
        }
        [_0x6027f5(0x54c)](_0xe73ebf) {
            var _0x28225d = _0x6027f5;
            this[_0x28225d(0x54d)] = _0xe73ebf;
        }
    }
    _0x47a986['SCREENTEXTURE_NAME'] = _0x6027f5(0x54e), _0x47a986[_0x6027f5(0x54f)] = _0x6027f5(0x550), _0x47a986['MAINTEXTURE_TEXELSIZE_NAME'] = _0x6027f5(0x551), _0x47a986[_0x6027f5(0x552)] = _0x3a9f31[_0x6027f5(0x553)](_0x47a986[_0x6027f5(0x554)]), _0x47a986[_0x6027f5(0x555)] = _0x3a9f31[_0x6027f5(0x553)](_0x47a986[_0x6027f5(0x54f)]), _0x47a986[_0x6027f5(0x556)] = _0x3a9f31[_0x6027f5(0x553)](_0x47a986[_0x6027f5(0x557)]);
    class _0xcc3875 extends _0x47a986 {
        constructor() {
            var _0x5babdc = _0x6027f5;
            super(...arguments), this[_0x5babdc(0x558)] = null, this[_0x5babdc(0x559)] = null, this[_0x5babdc(0x55a)] = null, this[_0x5babdc(0x509)] = null, this[_0x5babdc(0x55b)] = null, this[_0x5babdc(0x55c)] = 0x0, this['_sourceTexelSize'] = new _0x5b8e4e(), this[_0x5babdc(0x55d)] = 0x0, this[_0x5babdc(0x55e)] = !0x1;
        }
        static [_0x6027f5(0x32a)](_0x13d4c9, _0x30d6ce, _0x2aa514 = null, _0x5c5e56 = null, _0x2f607e = null, _0x45ee4b = 0x0, _0x342834 = _0xcc3875['_SCREENTYPE_QUAD'], _0x3fe4ce = null, _0x357955 = !0x1) {
            var _0x8d8e05 = _0x6027f5, _0x431e9b;
            return (_0x431e9b = _0xcc3875[_0x8d8e05(0x3f3)]['length'] > 0x0 ? _0xcc3875['_pool'][_0x8d8e05(0x55f)]() : new _0xcc3875())[_0x8d8e05(0x558)] = _0x13d4c9, _0x431e9b[_0x8d8e05(0x559)] = _0x30d6ce, _0x431e9b[_0x8d8e05(0x55a)] = _0x2aa514, _0x431e9b[_0x8d8e05(0x509)] = _0x5c5e56, _0x431e9b[_0x8d8e05(0x55b)] = _0x2f607e, _0x431e9b[_0x8d8e05(0x55c)] = _0x45ee4b, _0x431e9b[_0x8d8e05(0x55d)] = _0x342834, _0x431e9b[_0x8d8e05(0x547)] = _0x3fe4ce, _0x431e9b[_0x8d8e05(0x55e)] = _0x357955, _0x431e9b;
        }
        [_0x6027f5(0x54a)]() {
            var _0x4bb81b = _0x6027f5, _0x1aaed0;
            if (this[_0x4bb81b(0x558)])
                _0x1aaed0 = this[_0x4bb81b(0x558)];
            else {
                if (!this[_0x4bb81b(0x547)][_0x4bb81b(0x560)][_0x4bb81b(0x561)])
                    throw _0x4bb81b(0x562);
                _0x1aaed0 = this[_0x4bb81b(0x547)]['_camera'][_0x4bb81b(0x561)];
            }
            var _0x22fa6a = this['_shader'] || _0x47a986[_0x4bb81b(0x563)], _0x50b1bd = this[_0x4bb81b(0x55b)] || _0x47a986[_0x4bb81b(0x548)], _0x1c038f = this['_dest'] || this['_drawDefineCavans'] ? this['_dest'] : this['_commandBuffer'][_0x4bb81b(0x560)][_0x4bb81b(0x561)];
            if (_0x1c038f)
                _0x387b86[_0x4bb81b(0x303)]['instance'][_0x4bb81b(0x564)](0x0, 0x0, _0x1c038f[_0x4bb81b(0x313)], _0x1c038f[_0x4bb81b(0x439)]);
            else {
                let _0x3adbee = this[_0x4bb81b(0x547)][_0x4bb81b(0x560)][_0x4bb81b(0x564)], _0x118214 = _0x3adbee['height'], _0x1cd745 = _0x50b403[_0x4bb81b(0x565)] - _0x3adbee['y'] - _0x118214;
                _0x387b86['LayaGL'][_0x4bb81b(0x304)][_0x4bb81b(0x564)](_0x3adbee['x'], _0x1cd745, _0x3adbee[_0x4bb81b(0x313)], _0x118214);
            }
            _0x50b1bd[_0x4bb81b(0x4ac)](_0x47a986[_0x4bb81b(0x552)], _0x1aaed0), _0x50b1bd[_0x4bb81b(0x4a8)](_0x47a986['SCREENTEXTUREOFFSETSCALE_ID'], this[_0x4bb81b(0x55a)] || _0xcc3875[_0x4bb81b(0x566)]), this[_0x4bb81b(0x567)][_0x4bb81b(0x1f8)](0x1 / _0x1aaed0[_0x4bb81b(0x313)], 0x1 / _0x1aaed0[_0x4bb81b(0x439)], _0x1aaed0[_0x4bb81b(0x313)], _0x1aaed0['height']), _0x50b1bd[_0x4bb81b(0x4a8)](_0x47a986[_0x4bb81b(0x556)], this[_0x4bb81b(0x567)]), _0x26547d[_0x4bb81b(0x3ed)] && _0x26547d[_0x4bb81b(0x3ed)][_0x4bb81b(0x435)](), _0x1c038f && _0x1c038f[_0x4bb81b(0x568)]();
            for (var _0x2f6196 = _0x22fa6a[_0x4bb81b(0x50c)](this[_0x4bb81b(0x55c)])[_0x4bb81b(0x50d)], _0x284802 = 0x0, _0x1d4b58 = _0x2f6196[_0x4bb81b(0x205)]; _0x284802 < _0x1d4b58; _0x284802++) {
                var _0xf37e1a = _0xcc3875[_0x4bb81b(0x569)];
                _0x50b1bd['_defineDatas'][_0x4bb81b(0x1fc)](_0xf37e1a);
                var _0x40a885 = _0x2f6196[_0x284802][_0x4bb81b(0x530)](_0xf37e1a);
                switch (_0x40a885[_0x4bb81b(0x452)](), _0x40a885[_0x4bb81b(0x56a)](_0x40a885[_0x4bb81b(0x56b)], _0x50b1bd, !0x0), _0x40a885[_0x4bb81b(0x56c)](_0x50b1bd), _0x40a885['uploadRenderStateFrontFace'](_0x50b1bd, !0x1, null), this[_0x4bb81b(0x55d)]) {
                case _0xcc3875['_SCREENTYPE_QUAD']:
                    _0x50b403['_instance'][_0x4bb81b(0x434)] ? _0x39fe36['instance'][_0x4bb81b(0x503)]() : _0x39fe36[_0x4bb81b(0x304)]['render']();
                    break;
                case _0xcc3875[_0x4bb81b(0x56d)]:
                    _0x50b403[_0x4bb81b(0x3e2)]['invertY'] ? _0x22efc5[_0x4bb81b(0x304)][_0x4bb81b(0x503)]() : _0x22efc5[_0x4bb81b(0x304)]['render']();
                    break;
                default:
                    throw _0x4bb81b(0x56e);
                }
            }
            _0x1c038f && _0x1c038f[_0x4bb81b(0x435)]();
        }
        [_0x6027f5(0x54b)]() {
            var _0xff7439 = _0x6027f5;
            _0xcc3875[_0xff7439(0x3f3)]['push'](this), this[_0xff7439(0x558)] = null, this['_dest'] = null, this[_0xff7439(0x55a)] = null, this[_0xff7439(0x509)] = null, this[_0xff7439(0x55b)] = null, this['_drawDefineCavans'] = !0x1, super['recover']();
        }
    }
    _0xcc3875[_0x6027f5(0x56f)] = 0x0, _0xcc3875[_0x6027f5(0x56d)] = 0x1, _0xcc3875[_0x6027f5(0x569)] = new _0x1ff4c5(), _0xcc3875['_pool'] = [], _0xcc3875[_0x6027f5(0x566)] = new _0x5b8e4e(0x0, 0x0, 0x1, 0x1);
    class _0x32f706 extends _0x47a986 {
        constructor() {
            var _0x1364db = _0x6027f5;
            super(...arguments), this[_0x1364db(0x570)] = null;
        }
        static ['create'](_0x1e0da4) {
            var _0x3dfc14 = _0x6027f5, _0x1ac455;
            return (_0x1ac455 = _0x32f706[_0x3dfc14(0x3f3)]['length'] > 0x0 ? _0x32f706[_0x3dfc14(0x3f3)][_0x3dfc14(0x55f)]() : new _0x32f706())[_0x3dfc14(0x570)] = _0x1e0da4, _0x1ac455;
        }
        [_0x6027f5(0x54a)]() {
            var _0x34504f = _0x6027f5;
            _0x26547d[_0x34504f(0x3ed)] && _0x26547d[_0x34504f(0x3ed)][_0x34504f(0x435)](), _0x387b86[_0x34504f(0x303)][_0x34504f(0x304)][_0x34504f(0x564)](0x0, 0x0, this[_0x34504f(0x570)]['width'], this[_0x34504f(0x570)][_0x34504f(0x439)]), this['_renderTexture'][_0x34504f(0x568)]();
        }
        [_0x6027f5(0x54b)]() {
            var _0x1223f3 = _0x6027f5;
            _0x32f706[_0x1223f3(0x3f3)]['push'](this), this[_0x1223f3(0x570)] = null;
        }
    }
    _0x32f706['_pool'] = [], (_0x614fe9 = _0x18be32[_0x6027f5(0x571)] || (_0x18be32[_0x6027f5(0x571)] = {}))[_0x614fe9['Int'] = 0x0] = _0x6027f5(0x572), _0x614fe9[_0x614fe9[_0x6027f5(0x573)] = 0x1] = _0x6027f5(0x573), _0x614fe9[_0x614fe9[_0x6027f5(0x574)] = 0x2] = _0x6027f5(0x574), _0x614fe9[_0x614fe9[_0x6027f5(0x575)] = 0x3] = 'Vector2', _0x614fe9[_0x614fe9['Vector3'] = 0x4] = _0x6027f5(0x46b), _0x614fe9[_0x614fe9['Vector4'] = 0x5] = _0x6027f5(0x4fd), _0x614fe9[_0x614fe9[_0x6027f5(0x576)] = 0x6] = 'Quaternion', _0x614fe9[_0x614fe9[_0x6027f5(0x228)] = 0x7] = _0x6027f5(0x228), _0x614fe9[_0x614fe9[_0x6027f5(0x458)] = 0x8] = _0x6027f5(0x458), _0x614fe9[_0x614fe9[_0x6027f5(0x577)] = 0x9] = _0x6027f5(0x577);
    class _0x301fd5 extends _0x47a986 {
        constructor() {
            var _0x59d005 = _0x6027f5;
            super(...arguments), this[_0x59d005(0x55b)] = null, this[_0x59d005(0x578)] = 0x0, this[_0x59d005(0x448)] = null, this['_dataType'] = -0x1;
        }
        static [_0x6027f5(0x32a)](_0x3dc59f, _0x1026c5, _0xb31ed, _0x498e39, _0x176122) {
            var _0x9d5e7e = _0x6027f5, _0x2427a9;
            return (_0x2427a9 = _0x301fd5['_pool'][_0x9d5e7e(0x205)] > 0x0 ? _0x301fd5[_0x9d5e7e(0x3f3)][_0x9d5e7e(0x55f)]() : new _0x301fd5())[_0x9d5e7e(0x55b)] = _0x3dc59f, _0x2427a9[_0x9d5e7e(0x578)] = _0x1026c5, _0x2427a9['_value'] = _0xb31ed, _0x2427a9['_dataType'] = _0x498e39, _0x2427a9['_commandBuffer'] = _0x176122, _0x2427a9;
        }
        [_0x6027f5(0x54a)]() {
            var _0x4698be = _0x6027f5;
            switch (this[_0x4698be(0x579)]) {
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x572)]:
                this[_0x4698be(0x55b)][_0x4698be(0x4a1)](this[_0x4698be(0x578)], this[_0x4698be(0x448)]);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x574)]:
                this[_0x4698be(0x55b)][_0x4698be(0x4a3)](this[_0x4698be(0x578)], this['_value']);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x573)]:
                this[_0x4698be(0x55b)][_0x4698be(0x49f)](this['_nameID'], this['_value']);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x228)]:
                this[_0x4698be(0x55b)]['setMatrix4x4'](this[_0x4698be(0x578)], this['_value']);
                break;
            case _0x18be32[_0x4698be(0x571)]['Quaternion']:
                this[_0x4698be(0x55b)][_0x4698be(0x4a9)](this[_0x4698be(0x578)], this[_0x4698be(0x448)]);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x577)]:
                this[_0x4698be(0x55b)]['setTexture'](this[_0x4698be(0x578)], this[_0x4698be(0x448)]);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x4fd)]:
                this['_shaderData'][_0x4698be(0x4a8)](this[_0x4698be(0x578)], this['_value']);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x575)]:
                this[_0x4698be(0x55b)][_0x4698be(0x4a5)](this[_0x4698be(0x578)], this[_0x4698be(0x448)]);
                break;
            case _0x18be32['ShaderDataType']['Vector3']:
                this[_0x4698be(0x55b)][_0x4698be(0x57a)](this[_0x4698be(0x578)], this[_0x4698be(0x448)]);
                break;
            case _0x18be32[_0x4698be(0x571)][_0x4698be(0x458)]:
                this[_0x4698be(0x55b)][_0x4698be(0x4ab)](this[_0x4698be(0x578)], this[_0x4698be(0x448)]);
                break;
            default:
                throw 'no\x20type\x20shaderValue\x20on\x20this\x20CommendBuffer';
            }
        }
        [_0x6027f5(0x54b)]() {
            var _0x540ff4 = _0x6027f5;
            _0x301fd5[_0x540ff4(0x3f3)][_0x540ff4(0x2ac)](this), this[_0x540ff4(0x55b)] = null, this[_0x540ff4(0x578)] = 0x0, this[_0x540ff4(0x448)] = null, this['_dataType'] = -0x1;
        }
    }
    _0x301fd5[_0x6027f5(0x3f3)] = [];
    class _0xaeafd1 extends _0x387b86['EventDispatcher'] {
        constructor(_0x17fefa) {
            var _0x459b1f = _0x6027f5;
            super(), this[_0x459b1f(0x57b)] = new _0x3697cd(0x0, 0x0, 0x0), this['_localRotation'] = new _0x528999(0x0, 0x0, 0x0, 0x1), this[_0x459b1f(0x57c)] = new _0x3697cd(0x1, 0x1, 0x1), this[_0x459b1f(0x57d)] = new _0x3697cd(0x0, 0x0, 0x0), this[_0x459b1f(0x57e)] = new _0x6b4d98(), this[_0x459b1f(0x57f)] = new _0x3697cd(0x0, 0x0, 0x0), this[_0x459b1f(0x580)] = new _0x528999(0x0, 0x0, 0x0, 0x1), this[_0x459b1f(0x581)] = new _0x3697cd(0x1, 0x1, 0x1), this[_0x459b1f(0x582)] = new _0x3697cd(0x0, 0x0, 0x0), this['_worldMatrix'] = new _0x6b4d98(), this['_children'] = null, this['_parent'] = null, this[_0x459b1f(0x3da)] = null, this[_0x459b1f(0x583)] = 0x0, this[_0x459b1f(0x3dc)] = _0x17fefa, this['_children'] = [], this[_0x459b1f(0x584)](_0xaeafd1['TRANSFORM_LOCALQUATERNION'] | _0xaeafd1[_0x459b1f(0x585)] | _0xaeafd1['TRANSFORM_LOCALMATRIX'], !0x1), this['_setTransformFlag'](_0xaeafd1[_0x459b1f(0x586)] | _0xaeafd1[_0x459b1f(0x587)] | _0xaeafd1[_0x459b1f(0x588)] | _0xaeafd1[_0x459b1f(0x589)] | _0xaeafd1[_0x459b1f(0x58a)], !0x0);
        }
        get ['_isFrontFaceInvert']() {
            var _0x50cd6a = _0x6027f5, _0x234546 = this[_0x50cd6a(0x58b)](), _0x4e0232 = _0x234546['x'] < 0x0;
            return _0x234546['y'] < 0x0 && (_0x4e0232 = !_0x4e0232), _0x234546['z'] < 0x0 && (_0x4e0232 = !_0x4e0232), _0x4e0232;
        }
        get ['owner']() {
            return this['_owner'];
        }
        get [_0x6027f5(0x58c)]() {
            var _0x3400f7 = _0x6027f5;
            return this[_0x3400f7(0x58d)](_0xaeafd1['TRANSFORM_WORLDMATRIX']);
        }
        get ['localPositionX']() {
            var _0x10f054 = _0x6027f5;
            return this[_0x10f054(0x57b)]['x'];
        }
        set [_0x6027f5(0x58e)](_0x392df8) {
            var _0x3b824b = _0x6027f5;
            this[_0x3b824b(0x57b)]['x'] = _0x392df8, this[_0x3b824b(0x3a3)] = this[_0x3b824b(0x57b)];
        }
        get ['localPositionY']() {
            var _0x40567b = _0x6027f5;
            return this[_0x40567b(0x57b)]['y'];
        }
        set [_0x6027f5(0x58f)](_0x449331) {
            var _0x3b9a91 = _0x6027f5;
            this[_0x3b9a91(0x57b)]['y'] = _0x449331, this[_0x3b9a91(0x3a3)] = this[_0x3b9a91(0x57b)];
        }
        get [_0x6027f5(0x590)]() {
            var _0x262556 = _0x6027f5;
            return this[_0x262556(0x57b)]['z'];
        }
        set [_0x6027f5(0x590)](_0x5ad263) {
            var _0x2594ac = _0x6027f5;
            this['_localPosition']['z'] = _0x5ad263, this[_0x2594ac(0x3a3)] = this[_0x2594ac(0x57b)];
        }
        get [_0x6027f5(0x3a3)]() {
            var _0x3962c9 = _0x6027f5;
            return this[_0x3962c9(0x57b)];
        }
        set ['localPosition'](_0x120517) {
            var _0x55c64d = _0x6027f5;
            this[_0x55c64d(0x57b)] !== _0x120517 && _0x120517['cloneTo'](this[_0x55c64d(0x57b)]), this[_0x55c64d(0x584)](_0xaeafd1[_0x55c64d(0x591)], !0x0), this['_onWorldPositionTransform']();
        }
        get [_0x6027f5(0x592)]() {
            var _0x2413b4 = _0x6027f5;
            return this[_0x2413b4(0x3a4)]['x'];
        }
        set ['localRotationX'](_0x27c521) {
            var _0x356938 = _0x6027f5;
            this['_localRotation']['x'] = _0x27c521, this['localRotation'] = this[_0x356938(0x593)];
        }
        get ['localRotationY']() {
            var _0x58911b = _0x6027f5;
            return this[_0x58911b(0x3a4)]['y'];
        }
        set [_0x6027f5(0x594)](_0x2dce53) {
            var _0x5bc6ea = _0x6027f5;
            this[_0x5bc6ea(0x593)]['y'] = _0x2dce53, this[_0x5bc6ea(0x3a4)] = this[_0x5bc6ea(0x593)];
        }
        get [_0x6027f5(0x595)]() {
            var _0x4573be = _0x6027f5;
            return this[_0x4573be(0x3a4)]['z'];
        }
        set ['localRotationZ'](_0x365d54) {
            var _0x391435 = _0x6027f5;
            this[_0x391435(0x593)]['z'] = _0x365d54, this['localRotation'] = this[_0x391435(0x593)];
        }
        get [_0x6027f5(0x596)]() {
            var _0x30b371 = _0x6027f5;
            return this[_0x30b371(0x3a4)]['w'];
        }
        set [_0x6027f5(0x596)](_0x44a3f5) {
            var _0xaaf59 = _0x6027f5;
            this['_localRotation']['w'] = _0x44a3f5, this['localRotation'] = this[_0xaaf59(0x593)];
        }
        get [_0x6027f5(0x3a4)]() {
            var _0x10dcc6 = _0x6027f5;
            if (this[_0x10dcc6(0x58d)](_0xaeafd1['TRANSFORM_LOCALQUATERNION'])) {
                var _0x268de9 = this[_0x10dcc6(0x57d)];
                _0x528999['createFromYawPitchRoll'](_0x268de9['y'] / _0xaeafd1[_0x10dcc6(0x597)], _0x268de9['x'] / _0xaeafd1[_0x10dcc6(0x597)], _0x268de9['z'] / _0xaeafd1[_0x10dcc6(0x597)], this[_0x10dcc6(0x593)]), this['_setTransformFlag'](_0xaeafd1['TRANSFORM_LOCALQUATERNION'], !0x1);
            }
            return this[_0x10dcc6(0x593)];
        }
        set [_0x6027f5(0x3a4)](_0x176614) {
            var _0x4f9035 = _0x6027f5;
            this['_localRotation'] !== _0x176614 && _0x176614[_0x4f9035(0x1fc)](this[_0x4f9035(0x593)]), this[_0x4f9035(0x593)][_0x4f9035(0x214)](this[_0x4f9035(0x593)]), this[_0x4f9035(0x584)](_0xaeafd1['TRANSFORM_LOCALEULER'] | _0xaeafd1['TRANSFORM_LOCALMATRIX'], !0x0), this[_0x4f9035(0x584)](_0xaeafd1[_0x4f9035(0x598)], !0x1), this['_onWorldRotationTransform']();
        }
        get [_0x6027f5(0x599)]() {
            return this['_localScale']['x'];
        }
        set ['localScaleX'](_0x316c01) {
            var _0x173c9c = _0x6027f5;
            this[_0x173c9c(0x57c)]['x'] = _0x316c01, this[_0x173c9c(0x3a5)] = this[_0x173c9c(0x57c)];
        }
        get [_0x6027f5(0x59a)]() {
            var _0x245dd2 = _0x6027f5;
            return this[_0x245dd2(0x57c)]['y'];
        }
        set [_0x6027f5(0x59a)](_0xb8cac1) {
            var _0xc96c05 = _0x6027f5;
            this[_0xc96c05(0x57c)]['y'] = _0xb8cac1, this['localScale'] = this[_0xc96c05(0x57c)];
        }
        get [_0x6027f5(0x59b)]() {
            return this['_localScale']['z'];
        }
        set [_0x6027f5(0x59b)](_0x2a95df) {
            var _0x1ba8a7 = _0x6027f5;
            this[_0x1ba8a7(0x57c)]['z'] = _0x2a95df, this[_0x1ba8a7(0x3a5)] = this['_localScale'];
        }
        get [_0x6027f5(0x3a5)]() {
            var _0x2941d6 = _0x6027f5;
            return this[_0x2941d6(0x57c)];
        }
        set [_0x6027f5(0x3a5)](_0x4a9a8c) {
            var _0x13a5a2 = _0x6027f5;
            this['_localScale'] !== _0x4a9a8c && _0x4a9a8c[_0x13a5a2(0x1fc)](this[_0x13a5a2(0x57c)]), this[_0x13a5a2(0x584)](_0xaeafd1[_0x13a5a2(0x591)], !0x0), this['_onWorldScaleTransform']();
        }
        get [_0x6027f5(0x59c)]() {
            var _0x565bf9 = _0x6027f5;
            return this[_0x565bf9(0x3a6)]['x'];
        }
        set ['localRotationEulerX'](_0x3afbb2) {
            var _0x10ab9e = _0x6027f5;
            this['_localRotationEuler']['x'] = _0x3afbb2, this[_0x10ab9e(0x3a6)] = this['_localRotationEuler'];
        }
        get [_0x6027f5(0x59d)]() {
            var _0x300c1d = _0x6027f5;
            return this[_0x300c1d(0x3a6)]['y'];
        }
        set [_0x6027f5(0x59d)](_0x26e76b) {
            var _0x5c80ef = _0x6027f5;
            this[_0x5c80ef(0x57d)]['y'] = _0x26e76b, this['localRotationEuler'] = this[_0x5c80ef(0x57d)];
        }
        get [_0x6027f5(0x59e)]() {
            var _0x11fa98 = _0x6027f5;
            return this[_0x11fa98(0x3a6)]['z'];
        }
        set [_0x6027f5(0x59e)](_0x4339c1) {
            var _0x2d4191 = _0x6027f5;
            this[_0x2d4191(0x57d)]['z'] = _0x4339c1, this[_0x2d4191(0x3a6)] = this[_0x2d4191(0x57d)];
        }
        get ['localRotationEuler']() {
            var _0xf65e96 = _0x6027f5;
            if (this[_0xf65e96(0x58d)](_0xaeafd1['TRANSFORM_LOCALEULER'])) {
                this[_0xf65e96(0x593)]['getYawPitchRoll'](_0xaeafd1[_0xf65e96(0x59f)]);
                var _0x5a095d = _0xaeafd1['_tempVector30'], _0x4d0980 = this[_0xf65e96(0x57d)];
                _0x4d0980['x'] = _0x5a095d['y'] * _0xaeafd1[_0xf65e96(0x597)], _0x4d0980['y'] = _0x5a095d['x'] * _0xaeafd1['_angleToRandin'], _0x4d0980['z'] = _0x5a095d['z'] * _0xaeafd1[_0xf65e96(0x597)], this['_setTransformFlag'](_0xaeafd1[_0xf65e96(0x585)], !0x1);
            }
            return this[_0xf65e96(0x57d)];
        }
        set [_0x6027f5(0x3a6)](_0x14d94e) {
            var _0x342b3f = _0x6027f5;
            this[_0x342b3f(0x57d)] !== _0x14d94e && _0x14d94e[_0x342b3f(0x1fc)](this['_localRotationEuler']), this['_setTransformFlag'](_0xaeafd1[_0x342b3f(0x585)], !0x1), this[_0x342b3f(0x584)](_0xaeafd1['TRANSFORM_LOCALQUATERNION'] | _0xaeafd1[_0x342b3f(0x591)], !0x0), this[_0x342b3f(0x5a0)]();
        }
        get [_0x6027f5(0x5a1)]() {
            var _0x20d2f9 = _0x6027f5;
            return this[_0x20d2f9(0x58d)](_0xaeafd1[_0x20d2f9(0x591)]) && (_0x6b4d98['createAffineTransformation'](this['_localPosition'], this[_0x20d2f9(0x3a4)], this['_localScale'], this[_0x20d2f9(0x57e)]), this[_0x20d2f9(0x584)](_0xaeafd1[_0x20d2f9(0x591)], !0x1)), this['_localMatrix'];
        }
        set [_0x6027f5(0x5a1)](_0x2d8a06) {
            var _0x160673 = _0x6027f5;
            this[_0x160673(0x57e)] !== _0x2d8a06 && _0x2d8a06[_0x160673(0x1fc)](this[_0x160673(0x57e)]), this[_0x160673(0x57e)][_0x160673(0x489)](this[_0x160673(0x57b)], this[_0x160673(0x593)], this[_0x160673(0x57c)]), this[_0x160673(0x584)](_0xaeafd1['TRANSFORM_LOCALEULER'], !0x0), this[_0x160673(0x584)](_0xaeafd1[_0x160673(0x591)], !0x1), this['_onWorldTransform']();
        }
        get ['position']() {
            var _0x5b192b = _0x6027f5;
            if (this[_0x5b192b(0x58d)](_0xaeafd1[_0x5b192b(0x586)])) {
                if (null != this[_0x5b192b(0x30f)]) {
                    var _0x3633fa = this[_0x5b192b(0x3d8)][_0x5b192b(0x1fe)];
                    this[_0x5b192b(0x57f)]['x'] = _0x3633fa[0xc], this[_0x5b192b(0x57f)]['y'] = _0x3633fa[0xd], this['_position']['z'] = _0x3633fa[0xe];
                } else
                    this[_0x5b192b(0x57b)][_0x5b192b(0x1fc)](this['_position']);
                this[_0x5b192b(0x584)](_0xaeafd1[_0x5b192b(0x586)], !0x1);
            }
            return this['_position'];
        }
        set [_0x6027f5(0x5a2)](_0x6dc1ac) {
            var _0x5ee2a4 = _0x6027f5;
            if (null != this[_0x5ee2a4(0x30f)]) {
                var _0x46b15b = _0xaeafd1[_0x5ee2a4(0x5a3)];
                this['_parent'][_0x5ee2a4(0x3d8)][_0x5ee2a4(0x280)](_0x46b15b), _0x3697cd[_0x5ee2a4(0x216)](_0x6dc1ac, _0x46b15b, this[_0x5ee2a4(0x57b)]);
            } else
                _0x6dc1ac['cloneTo'](this[_0x5ee2a4(0x57b)]);
            this[_0x5ee2a4(0x3a3)] = this[_0x5ee2a4(0x57b)], this[_0x5ee2a4(0x57f)] !== _0x6dc1ac && _0x6dc1ac[_0x5ee2a4(0x1fc)](this[_0x5ee2a4(0x57f)]), this[_0x5ee2a4(0x584)](_0xaeafd1[_0x5ee2a4(0x586)], !0x1);
        }
        get [_0x6027f5(0x5a4)]() {
            var _0x3ca897 = _0x6027f5;
            return this[_0x3ca897(0x58d)](_0xaeafd1[_0x3ca897(0x587)]) && (null != this[_0x3ca897(0x30f)] ? _0x528999[_0x3ca897(0x27b)](this[_0x3ca897(0x30f)][_0x3ca897(0x5a4)], this[_0x3ca897(0x3a4)], this[_0x3ca897(0x580)]) : this[_0x3ca897(0x3a4)][_0x3ca897(0x1fc)](this[_0x3ca897(0x580)]), this[_0x3ca897(0x584)](_0xaeafd1['TRANSFORM_WORLDQUATERNION'], !0x1)), this['_rotation'];
        }
        set ['rotation'](_0x473c4d) {
            var _0x2571ac = _0x6027f5;
            null != this[_0x2571ac(0x30f)] ? (this[_0x2571ac(0x30f)][_0x2571ac(0x5a4)][_0x2571ac(0x280)](_0xaeafd1[_0x2571ac(0x334)]), _0x528999[_0x2571ac(0x27b)](_0xaeafd1[_0x2571ac(0x334)], _0x473c4d, this[_0x2571ac(0x593)])) : _0x473c4d[_0x2571ac(0x1fc)](this[_0x2571ac(0x593)]), this['localRotation'] = this[_0x2571ac(0x593)], _0x473c4d !== this[_0x2571ac(0x580)] && _0x473c4d[_0x2571ac(0x1fc)](this[_0x2571ac(0x580)]), this[_0x2571ac(0x584)](_0xaeafd1[_0x2571ac(0x587)], !0x1);
        }
        get ['rotationEuler']() {
            var _0x79f67d = _0x6027f5;
            if (this[_0x79f67d(0x58d)](_0xaeafd1[_0x79f67d(0x588)])) {
                this[_0x79f67d(0x5a4)][_0x79f67d(0x293)](_0xaeafd1['_tempVector30']);
                var _0x26a5f0 = _0xaeafd1['_tempVector30'], _0x30214a = this['_rotationEuler'];
                _0x30214a['x'] = _0x26a5f0['y'] * _0xaeafd1['_angleToRandin'], _0x30214a['y'] = _0x26a5f0['x'] * _0xaeafd1[_0x79f67d(0x597)], _0x30214a['z'] = _0x26a5f0['z'] * _0xaeafd1[_0x79f67d(0x597)], this[_0x79f67d(0x584)](_0xaeafd1[_0x79f67d(0x588)], !0x1);
            }
            return this['_rotationEuler'];
        }
        set [_0x6027f5(0x5a5)](_0x3487a9) {
            var _0x25d22e = _0x6027f5;
            _0x528999[_0x25d22e(0x287)](_0x3487a9['y'] / _0xaeafd1[_0x25d22e(0x597)], _0x3487a9['x'] / _0xaeafd1[_0x25d22e(0x597)], _0x3487a9['z'] / _0xaeafd1[_0x25d22e(0x597)], this[_0x25d22e(0x580)]), this['rotation'] = this['_rotation'], this[_0x25d22e(0x582)] !== _0x3487a9 && _0x3487a9['cloneTo'](this[_0x25d22e(0x582)]), this[_0x25d22e(0x584)](_0xaeafd1[_0x25d22e(0x588)], !0x1);
        }
        get ['worldMatrix']() {
            var _0x555f7a = _0x6027f5;
            return this[_0x555f7a(0x58d)](_0xaeafd1[_0x555f7a(0x58a)]) && (null != this[_0x555f7a(0x30f)] ? _0x6b4d98[_0x555f7a(0x27b)](this[_0x555f7a(0x30f)][_0x555f7a(0x3d8)], this[_0x555f7a(0x5a1)], this[_0x555f7a(0x5a6)]) : this[_0x555f7a(0x5a1)]['cloneTo'](this[_0x555f7a(0x5a6)]), this[_0x555f7a(0x584)](_0xaeafd1[_0x555f7a(0x58a)], !0x1)), this[_0x555f7a(0x5a6)];
        }
        set [_0x6027f5(0x3d8)](_0x296ffd) {
            var _0x3e1091 = _0x6027f5;
            null === this['_parent'] ? _0x296ffd[_0x3e1091(0x1fc)](this[_0x3e1091(0x57e)]) : (this[_0x3e1091(0x30f)]['worldMatrix'][_0x3e1091(0x280)](this[_0x3e1091(0x57e)]), _0x6b4d98[_0x3e1091(0x27b)](this['_localMatrix'], _0x296ffd, this[_0x3e1091(0x57e)])), this[_0x3e1091(0x5a1)] = this['_localMatrix'], this[_0x3e1091(0x5a6)] !== _0x296ffd && _0x296ffd['cloneTo'](this['_worldMatrix']), this[_0x3e1091(0x584)](_0xaeafd1[_0x3e1091(0x58a)], !0x1);
        }
        [_0x6027f5(0x5a7)]() {
            var _0xe7a257 = _0x6027f5, _0x4aa50d = _0xaeafd1['_tempQuaternion0'], _0x454936 = _0xaeafd1[_0xe7a257(0x5a8)], _0x461135 = _0xaeafd1[_0xe7a257(0x5a9)], _0x1f3410 = _0xaeafd1[_0xe7a257(0x5aa)];
            return _0x5e1bd2[_0xe7a257(0x27a)](this[_0xe7a257(0x3d8)], _0x461135), this[_0xe7a257(0x5a4)]['invert'](_0x4aa50d), _0x5e1bd2[_0xe7a257(0x275)](_0x4aa50d, _0x454936), _0x5e1bd2[_0xe7a257(0x27b)](_0x454936, _0x461135, _0x1f3410), _0x1f3410;
        }
        [_0x6027f5(0x584)](_0xbf262e, _0x224337) {
            _0x224337 ? this['_transformFlag'] |= _0xbf262e : this['_transformFlag'] &= ~_0xbf262e;
        }
        [_0x6027f5(0x58d)](_0x3cdfa4) {
            var _0x59ca82 = _0x6027f5;
            return 0x0 != (this[_0x59ca82(0x583)] & _0x3cdfa4);
        }
        [_0x6027f5(0x5ab)](_0x4fc678) {
            var _0x38770e = _0x6027f5;
            if (this[_0x38770e(0x30f)] !== _0x4fc678) {
                if (this[_0x38770e(0x30f)]) {
                    var _0x2e84b2 = this[_0x38770e(0x30f)][_0x38770e(0x5ac)], _0x2877bd = _0x2e84b2[_0x38770e(0x2f9)](this);
                    _0x2e84b2['splice'](_0x2877bd, 0x1);
                }
                _0x4fc678 && (_0x4fc678[_0x38770e(0x5ac)][_0x38770e(0x2ac)](this), _0x4fc678 && this[_0x38770e(0x5ad)]()), this[_0x38770e(0x30f)] = _0x4fc678;
            }
        }
        ['_onWorldPositionRotationTransform']() {
            var _0x5a058f = _0x6027f5;
            this[_0x5a058f(0x58d)](_0xaeafd1[_0x5a058f(0x58a)]) && this[_0x5a058f(0x58d)](_0xaeafd1[_0x5a058f(0x586)]) && this[_0x5a058f(0x58d)](_0xaeafd1[_0x5a058f(0x587)]) && this[_0x5a058f(0x58d)](_0xaeafd1[_0x5a058f(0x588)]) || (this[_0x5a058f(0x584)](_0xaeafd1[_0x5a058f(0x58a)] | _0xaeafd1[_0x5a058f(0x586)] | _0xaeafd1[_0x5a058f(0x587)] | _0xaeafd1['TRANSFORM_WORLDEULER'], !0x0), this['event'](_0x387b86['Event'][_0x5a058f(0x5ae)], this[_0x5a058f(0x583)]));
            for (var _0x53babd = 0x0, _0x33624b = this[_0x5a058f(0x5ac)][_0x5a058f(0x205)]; _0x53babd < _0x33624b; _0x53babd++)
                this['_children'][_0x53babd]['_onWorldPositionRotationTransform']();
        }
        [_0x6027f5(0x5af)]() {
            var _0x1f4b3d = _0x6027f5;
            this[_0x1f4b3d(0x58d)](_0xaeafd1[_0x1f4b3d(0x58a)]) && this[_0x1f4b3d(0x58d)](_0xaeafd1[_0x1f4b3d(0x586)]) && this['_getTransformFlag'](_0xaeafd1['TRANSFORM_WORLDSCALE']) || (this[_0x1f4b3d(0x584)](_0xaeafd1[_0x1f4b3d(0x58a)] | _0xaeafd1[_0x1f4b3d(0x586)] | _0xaeafd1['TRANSFORM_WORLDSCALE'], !0x0), this[_0x1f4b3d(0x5b0)](_0x387b86[_0x1f4b3d(0x5b1)]['TRANSFORM_CHANGED'], this['_transformFlag']));
            for (var _0x263b33 = 0x0, _0x1a2432 = this[_0x1f4b3d(0x5ac)][_0x1f4b3d(0x205)]; _0x263b33 < _0x1a2432; _0x263b33++)
                this[_0x1f4b3d(0x5ac)][_0x263b33][_0x1f4b3d(0x5af)]();
        }
        [_0x6027f5(0x5b2)]() {
            var _0x390729 = _0x6027f5;
            this[_0x390729(0x58d)](_0xaeafd1[_0x390729(0x58a)]) && this['_getTransformFlag'](_0xaeafd1[_0x390729(0x586)]) || (this['_setTransformFlag'](_0xaeafd1[_0x390729(0x58a)] | _0xaeafd1[_0x390729(0x586)], !0x0), this['event'](_0x387b86[_0x390729(0x5b1)]['TRANSFORM_CHANGED'], this[_0x390729(0x583)]));
            for (var _0x435291 = 0x0, _0x59c4f8 = this[_0x390729(0x5ac)][_0x390729(0x205)]; _0x435291 < _0x59c4f8; _0x435291++)
                this[_0x390729(0x5ac)][_0x435291][_0x390729(0x5b2)]();
        }
        [_0x6027f5(0x5a0)]() {
            var _0x4ce3d8 = _0x6027f5;
            this[_0x4ce3d8(0x58d)](_0xaeafd1[_0x4ce3d8(0x58a)]) && this['_getTransformFlag'](_0xaeafd1['TRANSFORM_WORLDQUATERNION']) && this['_getTransformFlag'](_0xaeafd1[_0x4ce3d8(0x588)]) || (this['_setTransformFlag'](_0xaeafd1['TRANSFORM_WORLDMATRIX'] | _0xaeafd1['TRANSFORM_WORLDQUATERNION'] | _0xaeafd1[_0x4ce3d8(0x588)], !0x0), this[_0x4ce3d8(0x5b0)](_0x387b86[_0x4ce3d8(0x5b1)]['TRANSFORM_CHANGED'], this['_transformFlag']));
            for (var _0x33a565 = 0x0, _0x55bfd2 = this[_0x4ce3d8(0x5ac)][_0x4ce3d8(0x205)]; _0x33a565 < _0x55bfd2; _0x33a565++)
                this['_children'][_0x33a565][_0x4ce3d8(0x5b3)]();
        }
        [_0x6027f5(0x5b4)]() {
            var _0x4fd243 = _0x6027f5;
            this[_0x4fd243(0x58d)](_0xaeafd1[_0x4fd243(0x58a)]) && this[_0x4fd243(0x58d)](_0xaeafd1[_0x4fd243(0x589)]) || (this[_0x4fd243(0x584)](_0xaeafd1[_0x4fd243(0x58a)] | _0xaeafd1[_0x4fd243(0x589)], !0x0), this[_0x4fd243(0x5b0)](_0x387b86[_0x4fd243(0x5b1)]['TRANSFORM_CHANGED'], this[_0x4fd243(0x583)]));
            for (var _0x58df21 = 0x0, _0x4ebd37 = this[_0x4fd243(0x5ac)][_0x4fd243(0x205)]; _0x58df21 < _0x4ebd37; _0x58df21++)
                this[_0x4fd243(0x5ac)][_0x58df21]['_onWorldPositionScaleTransform']();
        }
        [_0x6027f5(0x5ad)]() {
            var _0xfb7116 = _0x6027f5;
            this[_0xfb7116(0x58d)](_0xaeafd1[_0xfb7116(0x58a)]) && this[_0xfb7116(0x58d)](_0xaeafd1[_0xfb7116(0x586)]) && this['_getTransformFlag'](_0xaeafd1[_0xfb7116(0x587)]) && this[_0xfb7116(0x58d)](_0xaeafd1[_0xfb7116(0x588)]) && this[_0xfb7116(0x58d)](_0xaeafd1[_0xfb7116(0x589)]) || (this[_0xfb7116(0x584)](_0xaeafd1[_0xfb7116(0x58a)] | _0xaeafd1[_0xfb7116(0x586)] | _0xaeafd1[_0xfb7116(0x587)] | _0xaeafd1[_0xfb7116(0x588)] | _0xaeafd1[_0xfb7116(0x589)], !0x0), this[_0xfb7116(0x5b0)](_0x387b86[_0xfb7116(0x5b1)][_0xfb7116(0x5ae)], this[_0xfb7116(0x583)]));
            for (var _0x256474 = 0x0, _0xd5fb2d = this[_0xfb7116(0x5ac)][_0xfb7116(0x205)]; _0x256474 < _0xd5fb2d; _0x256474++)
                this['_children'][_0x256474]['_onWorldTransform']();
        }
        [_0x6027f5(0x27d)](_0x2a98be, _0x2e946c = !0x0) {
            var _0x7bdf66 = _0x6027f5;
            _0x2e946c ? (_0x6b4d98['createFromQuaternion'](this[_0x7bdf66(0x3a4)], _0xaeafd1[_0x7bdf66(0x5a3)]), _0x3697cd[_0x7bdf66(0x216)](_0x2a98be, _0xaeafd1['_tempMatrix0'], _0xaeafd1['_tempVector30']), _0x3697cd[_0x7bdf66(0x207)](this[_0x7bdf66(0x3a3)], _0xaeafd1['_tempVector30'], this[_0x7bdf66(0x57b)]), this[_0x7bdf66(0x3a3)] = this[_0x7bdf66(0x57b)]) : (_0x3697cd['add'](this[_0x7bdf66(0x5a2)], _0x2a98be, this[_0x7bdf66(0x57f)]), this[_0x7bdf66(0x5a2)] = this[_0x7bdf66(0x57f)]);
        }
        [_0x6027f5(0x27e)](_0x179252, _0x6108cf = !0x0, _0x4e8855 = !0x0) {
            var _0x347311 = _0x6027f5, _0x38d118;
            _0x4e8855 ? _0x38d118 = _0x179252 : (_0x3697cd['scale'](_0x179252, Math['PI'] / 0xb4, _0xaeafd1[_0x347311(0x59f)]), _0x38d118 = _0xaeafd1[_0x347311(0x59f)]), _0x528999[_0x347311(0x287)](_0x38d118['y'], _0x38d118['x'], _0x38d118['z'], _0xaeafd1['_tempQuaternion0']), _0x6108cf ? (_0x528999[_0x347311(0x27b)](this[_0x347311(0x593)], _0xaeafd1['_tempQuaternion0'], this[_0x347311(0x593)]), this[_0x347311(0x3a4)] = this[_0x347311(0x593)]) : (_0x528999['multiply'](_0xaeafd1[_0x347311(0x334)], this[_0x347311(0x5a4)], this[_0x347311(0x580)]), this['rotation'] = this[_0x347311(0x580)]);
        }
        [_0x6027f5(0x493)](_0x40e910) {
            var _0x25e7cf = _0x6027f5, _0x4c1a97 = this[_0x25e7cf(0x3d8)][_0x25e7cf(0x1fe)];
            _0x40e910['x'] = -_0x4c1a97[0x8], _0x40e910['y'] = -_0x4c1a97[0x9], _0x40e910['z'] = -_0x4c1a97[0xa];
        }
        ['getUp'](_0x247ef9) {
            var _0x2cb7c0 = _0x6027f5, _0x3644fd = this[_0x2cb7c0(0x3d8)][_0x2cb7c0(0x1fe)];
            _0x247ef9['x'] = _0x3644fd[0x4], _0x247ef9['y'] = _0x3644fd[0x5], _0x247ef9['z'] = _0x3644fd[0x6];
        }
        [_0x6027f5(0x5b5)](_0x39da37) {
            var _0x134b97 = _0x6027f5, _0x28c3fc = this[_0x134b97(0x3d8)][_0x134b97(0x1fe)];
            _0x39da37['x'] = _0x28c3fc[0x0], _0x39da37['y'] = _0x28c3fc[0x1], _0x39da37['z'] = _0x28c3fc[0x2];
        }
        [_0x6027f5(0x282)](_0x5a511f, _0x34cde0, _0x757e76 = !0x1) {
            var _0x5ac9d6 = _0x6027f5, _0x287a64;
            if (_0x757e76) {
                if (_0x287a64 = this[_0x5ac9d6(0x57b)], Math['abs'](_0x287a64['x'] - _0x5a511f['x']) < _0x255128[_0x5ac9d6(0x1f4)] && Math[_0x5ac9d6(0x1f0)](_0x287a64['y'] - _0x5a511f['y']) < _0x255128[_0x5ac9d6(0x1f4)] && Math[_0x5ac9d6(0x1f0)](_0x287a64['z'] - _0x5a511f['z']) < _0x255128[_0x5ac9d6(0x1f4)])
                    return;
                _0x528999[_0x5ac9d6(0x282)](this['_localPosition'], _0x5a511f, _0x34cde0, this['_localRotation']), this[_0x5ac9d6(0x593)][_0x5ac9d6(0x280)](this['_localRotation']), this[_0x5ac9d6(0x3a4)] = this[_0x5ac9d6(0x593)];
            } else {
                var _0x250aeb = this['position'];
                if (_0x287a64 = _0x250aeb, Math['abs'](_0x287a64['x'] - _0x5a511f['x']) < _0x255128['zeroTolerance'] && Math[_0x5ac9d6(0x1f0)](_0x287a64['y'] - _0x5a511f['y']) < _0x255128[_0x5ac9d6(0x1f4)] && Math['abs'](_0x287a64['z'] - _0x5a511f['z']) < _0x255128[_0x5ac9d6(0x1f4)])
                    return;
                _0x528999[_0x5ac9d6(0x282)](_0x250aeb, _0x5a511f, _0x34cde0, this['_rotation']), this[_0x5ac9d6(0x580)]['invert'](this[_0x5ac9d6(0x580)]), this[_0x5ac9d6(0x5a4)] = this[_0x5ac9d6(0x580)];
            }
        }
        [_0x6027f5(0x58b)]() {
            var _0xfced08 = _0x6027f5;
            if (this[_0xfced08(0x58d)](_0xaeafd1['TRANSFORM_WORLDSCALE'])) {
                if (null !== this['_parent']) {
                    var _0x22250e = this['_getScaleMatrix']()[_0xfced08(0x1fe)];
                    this[_0xfced08(0x581)]['x'] = _0x22250e[0x0], this[_0xfced08(0x581)]['y'] = _0x22250e[0x4], this[_0xfced08(0x581)]['z'] = _0x22250e[0x8];
                } else
                    this[_0xfced08(0x57c)][_0xfced08(0x1fc)](this[_0xfced08(0x581)]);
                this[_0xfced08(0x584)](_0xaeafd1['TRANSFORM_WORLDSCALE'], !0x1);
            }
            return this['_scale'];
        }
        [_0x6027f5(0x5b6)](_0x6bbdbc) {
            var _0x8ee440 = _0x6027f5;
            if (null !== this[_0x8ee440(0x30f)]) {
                var _0x1d0b22 = _0xaeafd1[_0x8ee440(0x5b7)], _0x583d97 = _0xaeafd1[_0x8ee440(0x5b7)], _0x306912 = _0x583d97[_0x8ee440(0x1fe)], _0x546842 = this['_parent'][_0x8ee440(0x5a7)]();
                _0x546842[_0x8ee440(0x280)](_0x546842), _0x5e1bd2[_0x8ee440(0x279)](_0x6bbdbc, _0x1d0b22), _0x5e1bd2[_0x8ee440(0x27b)](_0x546842, _0x1d0b22, _0x583d97), this[_0x8ee440(0x57c)]['x'] = _0x306912[0x0], this[_0x8ee440(0x57c)]['y'] = _0x306912[0x4], this['_localScale']['z'] = _0x306912[0x8];
            } else
                _0x6bbdbc['cloneTo'](this['_localScale']);
            this[_0x8ee440(0x3a5)] = this[_0x8ee440(0x57c)], this[_0x8ee440(0x581)] !== _0x6bbdbc && _0x6bbdbc[_0x8ee440(0x1fc)](this['_scale']), this[_0x8ee440(0x584)](_0xaeafd1[_0x8ee440(0x589)], !0x1);
        }
        get [_0x6027f5(0x1f9)]() {
            var _0x427d44 = _0x6027f5;
            return console[_0x427d44(0x25a)]('Transfrm3D:\x20discard\x20function,please\x20use\x20getWorldLossyScale\x20instead.'), this[_0x427d44(0x58b)]();
        }
        set ['scale'](_0x348871) {
            var _0x2dacdd = _0x6027f5;
            console['warn'](_0x2dacdd(0x5b8)), this[_0x2dacdd(0x5b6)](_0x348871);
        }
    }
    _0xaeafd1[_0x6027f5(0x59f)] = new _0x3697cd(), _0xaeafd1[_0x6027f5(0x334)] = new _0x528999(), _0xaeafd1[_0x6027f5(0x5a3)] = new _0x6b4d98(), _0xaeafd1[_0x6027f5(0x5a8)] = new _0x5e1bd2(), _0xaeafd1[_0x6027f5(0x5a9)] = new _0x5e1bd2(), _0xaeafd1[_0x6027f5(0x5aa)] = new _0x5e1bd2(), _0xaeafd1['_tempMatrix3x33'] = new _0x5e1bd2(), _0xaeafd1[_0x6027f5(0x598)] = 0x1, _0xaeafd1[_0x6027f5(0x585)] = 0x2, _0xaeafd1[_0x6027f5(0x591)] = 0x4, _0xaeafd1[_0x6027f5(0x586)] = 0x8, _0xaeafd1['TRANSFORM_WORLDQUATERNION'] = 0x10, _0xaeafd1[_0x6027f5(0x589)] = 0x20, _0xaeafd1[_0x6027f5(0x58a)] = 0x40, _0xaeafd1['TRANSFORM_WORLDEULER'] = 0x80, _0xaeafd1['_angleToRandin'] = 0xb4 / Math['PI'];
    class _0x44a154 extends _0x387b86[_0x6027f5(0x5b9)] {
        constructor(_0x248fb4 = null, _0x2c6423 = !0x1) {
            var _0x300660 = _0x6027f5;
            super(), this[_0x300660(0x5ba)] = !0x1, this[_0x300660(0x5bb)] = !0x1, this[_0x300660(0x5bc)] = ++_0x44a154[_0x300660(0x4e9)], this['_transform'] = new _0xaeafd1(this), this[_0x300660(0x5bd)] = _0x2c6423, this['layer'] = 0x0, this['name'] = _0x248fb4 || 'New\x20Sprite3D';
        }
        static [_0x6027f5(0x230)]() {
        }
        static [_0x6027f5(0x5be)](_0x5d3415, _0x587202 = null, _0x2dde07 = !0x0, _0x1d897b = null, _0x546350 = null) {
            var _0x3d6bb9 = _0x6027f5, _0x4cbf2e = _0x5d3415[_0x3d6bb9(0x1fd)]();
            _0x587202 && _0x587202[_0x3d6bb9(0x5bf)](_0x4cbf2e);
            var _0xcf5e81 = _0x4cbf2e[_0x3d6bb9(0x3d6)];
            if (_0x2dde07) {
                var _0x538f8a = _0xcf5e81[_0x3d6bb9(0x3d8)];
                _0x5d3415['transform'][_0x3d6bb9(0x3d8)][_0x3d6bb9(0x1fc)](_0x538f8a), _0xcf5e81[_0x3d6bb9(0x3d8)] = _0x538f8a;
            } else
                _0x1d897b && (_0xcf5e81['position'] = _0x1d897b), _0x546350 && (_0xcf5e81['rotation'] = _0x546350);
            return _0x4cbf2e;
        }
        static [_0x6027f5(0x5c0)](_0x4d50db, _0xc4966e) {
            var _0x23a616 = _0x6027f5;
            _0x387b86['Laya'][_0x23a616(0x329)][_0x23a616(0x32a)](_0x4d50db, _0xc4966e, null, _0x44a154['HIERARCHY']);
        }
        get ['id']() {
            var _0x4aaa0f = _0x6027f5;
            return this[_0x4aaa0f(0x5bc)];
        }
        get [_0x6027f5(0x5c1)]() {
            var _0x5e6488 = _0x6027f5;
            return this[_0x5e6488(0x5c2)];
        }
        set [_0x6027f5(0x5c1)](_0x89935f) {
            var _0x1bdaec = _0x6027f5;
            if (this[_0x1bdaec(0x5c2)] !== _0x89935f) {
                if (!(_0x89935f >= 0x0 && _0x89935f <= 0x1e))
                    throw new Error(_0x1bdaec(0x5c3));
                this[_0x1bdaec(0x5c2)] = _0x89935f;
            }
        }
        get ['url']() {
            return this['_url'];
        }
        get [_0x6027f5(0x3db)]() {
            var _0x3dc1b8 = _0x6027f5;
            return this[_0x3dc1b8(0x5bd)];
        }
        get [_0x6027f5(0x3d6)]() {
            var _0x25a411 = _0x6027f5;
            return this[_0x25a411(0x3d5)];
        }
        ['_setCreateURL'](_0x2d04c4) {
            var _0x5c7461 = _0x6027f5;
            this['_url'] = _0x387b86[_0x5c7461(0x5c4)]['formatURL'](_0x2d04c4);
        }
        [_0x6027f5(0x5c5)](_0x59bf88, _0x50bace, _0x221c5c) {
            var _0xe4ccd6 = _0x6027f5, _0x3a91b9 = this[_0xe4ccd6(0x5c6)](_0x493c7d);
            if (_0x3a91b9 && (_0x3a91b9['avatar'] || _0x59bf88['_changeAnimatorToLinkSprite3DNoAvatar'](_0x3a91b9, _0x50bace, _0x221c5c)), this[_0xe4ccd6(0x30f)] && this[_0xe4ccd6(0x30f)] instanceof _0x44a154) {
                _0x221c5c['unshift'](this[_0xe4ccd6(0x30f)][_0xe4ccd6(0x2b7)]);
                var _0x455b48 = this[_0xe4ccd6(0x30f)];
                _0x455b48[_0xe4ccd6(0x3ab)] && _0x455b48['_changeAnimatorsToLinkSprite3D'](_0x59bf88, _0x50bace, _0x221c5c);
            }
        }
        [_0x6027f5(0x3aa)](_0x2cf084, _0x5e87bb) {
            var _0x5d9352 = _0x6027f5;
            this[_0x5d9352(0x5c7)](_0x2cf084), this[_0x5d9352(0x5c8)](_0x2cf084['avatar']);
            for (var _0x55a44f = 0x0, _0x4c3c6d = this[_0x5d9352(0x5ac)][_0x5d9352(0x205)]; _0x55a44f < _0x4c3c6d; _0x55a44f++) {
                var _0x2e141b = this[_0x5d9352(0x5ac)][_0x55a44f];
                _0x2e141b[_0x5d9352(0x3ab)] == _0x5e87bb && _0x2e141b[_0x5d9352(0x3aa)](_0x2cf084, _0x5e87bb);
            }
        }
        [_0x6027f5(0x3ae)](_0x19c173, _0x62c38) {
            var _0x4433d5 = _0x6027f5;
            this[_0x4433d5(0x5c7)](_0x62c38), this[_0x4433d5(0x5c8)](_0x62c38 ? _0x62c38[_0x4433d5(0x3b6)] : null);
            for (var _0x487d1f = 0x0, _0x2c12c0 = this[_0x4433d5(0x5ac)][_0x4433d5(0x205)]; _0x487d1f < _0x2c12c0; _0x487d1f++) {
                var _0x3bf3ab = this[_0x4433d5(0x5ac)][_0x487d1f];
                _0x3bf3ab['_hierarchyAnimator'] == _0x19c173 && _0x3bf3ab['_clearHierarchyAnimator'](_0x19c173, _0x62c38);
            }
        }
        [_0x6027f5(0x3d2)](_0x3e0260, _0x6d10cd) {
            var _0x3f3926 = _0x6027f5;
            this[_0x3f3926(0x5c8)](_0x6d10cd);
            for (var _0x241974 = 0x0, _0x30329e = this['_children'][_0x3f3926(0x205)]; _0x241974 < _0x30329e; _0x241974++) {
                var _0x577f01 = this[_0x3f3926(0x5ac)][_0x241974];
                _0x577f01['_hierarchyAnimator'] == _0x3e0260 && _0x577f01[_0x3f3926(0x3d2)](_0x3e0260, _0x6d10cd);
            }
        }
        ['_changeAnimatorToLinkSprite3DNoAvatar'](_0x203ea1, _0x1bfff1, _0x30a5a6) {
            var _0x393f52 = _0x6027f5;
            _0x203ea1[_0x393f52(0x3b5)](_0x1bfff1, _0x30a5a6, this);
            for (var _0x8b1cb5 = 0x0, _0x9f3fe3 = this[_0x393f52(0x5ac)][_0x393f52(0x205)]; _0x8b1cb5 < _0x9f3fe3; _0x8b1cb5++) {
                var _0x30c100 = this[_0x393f52(0x5ac)][_0x8b1cb5], _0x5df1e8 = _0x30a5a6[_0x393f52(0x205)];
                _0x30a5a6[_0x393f52(0x2ac)](_0x30c100[_0x393f52(0x2b7)]), _0x30c100['_changeAnimatorToLinkSprite3DNoAvatar'](_0x203ea1, _0x1bfff1, _0x30a5a6), _0x30a5a6['splice'](_0x5df1e8, 0x1);
            }
        }
        [_0x6027f5(0x5c7)](_0x5f3b86) {
            var _0x22b77c = _0x6027f5;
            this[_0x22b77c(0x3ab)] = _0x5f3b86;
        }
        [_0x6027f5(0x5c8)](_0x188d55) {
        }
        [_0x6027f5(0x5c9)]() {
            var _0x15b1af = _0x6027f5;
            if (super[_0x15b1af(0x5c9)](), this[_0x15b1af(0x36a)]) {
                for (let _0x337669 = 0x0, _0xff2a4e = this[_0x15b1af(0x36a)][_0x15b1af(0x205)]; _0x337669 < _0xff2a4e; _0x337669++)
                    this[_0x15b1af(0x5ca)][_0x15b1af(0x5cb)](this['_scripts'][_0x337669]);
            }
        }
        ['_onAdded']() {
            var _0x57a7e2 = _0x6027f5;
            if (this[_0x57a7e2(0x30f)] instanceof _0x44a154) {
                var _0x55998a = this[_0x57a7e2(0x30f)];
                this[_0x57a7e2(0x3d6)][_0x57a7e2(0x5ab)](_0x55998a['transform']), _0x55998a[_0x57a7e2(0x3ab)] && (!this['_hierarchyAnimator'] && this[_0x57a7e2(0x3aa)](_0x55998a[_0x57a7e2(0x3ab)], null), _0x55998a[_0x57a7e2(0x5c5)](this, !0x0, [this[_0x57a7e2(0x2b7)]]));
            }
            super['_onAdded']();
        }
        [_0x6027f5(0x5cc)]() {
            var _0x48f012 = _0x6027f5;
            if (super[_0x48f012(0x5cc)](), this[_0x48f012(0x30f)] instanceof _0x44a154) {
                var _0x11bab7 = this[_0x48f012(0x30f)];
                this['transform'][_0x48f012(0x5ab)](null), _0x11bab7[_0x48f012(0x3ab)] && (this[_0x48f012(0x3ab)] == _0x11bab7[_0x48f012(0x3ab)] && this[_0x48f012(0x3ae)](_0x11bab7[_0x48f012(0x3ab)], null), _0x11bab7[_0x48f012(0x5c5)](this, !0x1, [this['name']]));
            }
        }
        ['_parse'](_0x1b0e81, _0x2d2cb8) {
            var _0xcf2767 = _0x6027f5;
            if (void 0x0 !== _0x1b0e81[_0xcf2767(0x3db)] && (this[_0xcf2767(0x5bd)] = _0x1b0e81[_0xcf2767(0x3db)]), void 0x0 !== _0x1b0e81['active'] && (this[_0xcf2767(0x5cd)] = _0x1b0e81[_0xcf2767(0x5cd)]), null != _0x1b0e81[_0xcf2767(0x2b7)] && (this[_0xcf2767(0x2b7)] = _0x1b0e81[_0xcf2767(0x2b7)]), void 0x0 !== _0x1b0e81[_0xcf2767(0x5a2)]) {
                var _0x163a5e = this[_0xcf2767(0x3d6)][_0xcf2767(0x3a3)];
                _0x163a5e['fromArray'](_0x1b0e81['position']), this['transform'][_0xcf2767(0x3a3)] = _0x163a5e;
            }
            if (void 0x0 !== _0x1b0e81[_0xcf2767(0x5a5)]) {
                var _0x5504c8 = this['transform'][_0xcf2767(0x3a6)];
                _0x5504c8[_0xcf2767(0x1fa)](_0x1b0e81['rotationEuler']), this[_0xcf2767(0x3d6)]['localRotationEuler'] = _0x5504c8;
            }
            if (void 0x0 !== _0x1b0e81[_0xcf2767(0x5a4)]) {
                var _0x4002f7 = this[_0xcf2767(0x3d6)][_0xcf2767(0x3a4)];
                _0x4002f7[_0xcf2767(0x1fa)](_0x1b0e81[_0xcf2767(0x5a4)]), this['transform'][_0xcf2767(0x3a4)] = _0x4002f7;
            }
            if (void 0x0 !== _0x1b0e81[_0xcf2767(0x1f9)]) {
                var _0x5f0d7b = this[_0xcf2767(0x3d6)]['localScale'];
                _0x5f0d7b[_0xcf2767(0x1fa)](_0x1b0e81[_0xcf2767(0x1f9)]), this[_0xcf2767(0x3d6)][_0xcf2767(0x3a5)] = _0x5f0d7b;
            }
            null != _0x1b0e81['layer'] && (this['layer'] = _0x1b0e81[_0xcf2767(0x5c1)]);
        }
        ['_cloneTo'](_0x4d29ea, _0x45c756, _0x51ec47) {
            var _0x438c48 = _0x6027f5;
            if (this['destroyed'])
                throw new Error(_0x438c48(0x5ce));
            var _0x586284 = _0x4d29ea, _0x23f7a2 = this[_0x438c48(0x3d5)], _0x11cec3 = _0x586284[_0x438c48(0x3d5)];
            _0x586284['name'] = this['name'], _0x586284[_0x438c48(0x5cf)] = this[_0x438c48(0x5cf)], _0x586284[_0x438c48(0x5cd)] = this[_0x438c48(0x5cd)], _0x11cec3[_0x438c48(0x3a3)] = _0x23f7a2['localPosition'], _0x11cec3[_0x438c48(0x3a4)] = _0x23f7a2[_0x438c48(0x3a4)], _0x11cec3['localScale'] = _0x23f7a2[_0x438c48(0x3a5)], _0x586284[_0x438c48(0x5bd)] = this['_isStatic'], _0x586284[_0x438c48(0x5c1)] = this[_0x438c48(0x5c1)], super[_0x438c48(0x345)](_0x586284, _0x45c756, _0x51ec47);
        }
        static ['_createSprite3DInstance'](_0xbf1ec8) {
            var _0x17c1f6 = _0x6027f5;
            for (var _0x5acb6b = _0xbf1ec8[_0x17c1f6(0x3f8)](), _0x552e1c = _0xbf1ec8[_0x17c1f6(0x5ac)], _0x5037bf = 0x0, _0x230e86 = _0x552e1c['length']; _0x5037bf < _0x230e86; _0x5037bf++) {
                var _0x29aa92 = _0x44a154[_0x17c1f6(0x5d0)](_0x552e1c[_0x5037bf]);
                _0x5acb6b['addChild'](_0x29aa92);
            }
            return _0x5acb6b;
        }
        static [_0x6027f5(0x5d1)](_0x1dfa86, _0x59820e, _0x2a245a, _0x3d1446) {
            var _0x5b0786 = _0x6027f5;
            for (var _0xa8996b = _0x2a245a['_children'], _0x305a0d = _0x3d1446['_children'], _0x261691 = 0x0, _0xdd8d7 = _0xa8996b['length']; _0x261691 < _0xdd8d7; _0x261691++)
                _0x44a154[_0x5b0786(0x5d1)](_0x1dfa86, _0x59820e, _0xa8996b[_0x261691], _0x305a0d[_0x261691]);
            _0x2a245a[_0x5b0786(0x345)](_0x3d1446, _0x1dfa86, _0x59820e);
        }
        ['clone']() {
            var _0x733c25 = _0x44a154['_createSprite3DInstance'](this);
            return _0x44a154['_parseSprite3DInstance'](this, _0x733c25, this, _0x733c25), _0x733c25;
        }
        [_0x6027f5(0x364)](_0x106f07 = !0x0) {
            var _0x3143ab = _0x6027f5;
            this['destroyed'] || (super['destroy'](_0x106f07), this['_transform'] = null, this[_0x3143ab(0x36a)] = null, this[_0x3143ab(0x5d2)] && _0x387b86[_0x3143ab(0x3bd)][_0x3143ab(0x5d3)](this[_0x3143ab(0x5d2)]));
        }
        ['_create']() {
            return new _0x44a154();
        }
    }
    _0x44a154['HIERARCHY'] = 'HIERARCHY', _0x44a154[_0x6027f5(0x5d4)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x5d5)), _0x44a154['MVPMATRIX'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x5d6)), _0x44a154[_0x6027f5(0x4e9)] = 0x0;
    class _0x7a6ad extends _0x47a986 {
        constructor() {
            var _0x372505 = _0x6027f5;
            super(), this[_0x372505(0x5d7)] = new _0x6b4d98(), this[_0x372505(0x5d8)] = new _0x3985fd(), this[_0x372505(0x5d8)] = new _0x3985fd(null);
        }
        static [_0x6027f5(0x32a)](_0x5287b2, _0x18eecf, _0x2904d0, _0x4f9764, _0x4d5a92, _0x3fd8b2) {
            var _0x124465 = _0x6027f5, _0x3c7ff6;
            return (_0x3c7ff6 = _0x7a6ad[_0x124465(0x3f3)][_0x124465(0x205)] > 0x0 ? _0x7a6ad[_0x124465(0x3f3)][_0x124465(0x55f)]() : new _0x7a6ad())[_0x124465(0x5d9)] = _0x5287b2, _0x3c7ff6['_matrix'] = _0x18eecf, _0x3c7ff6['_material'] = _0x2904d0, _0x3c7ff6[_0x124465(0x5da)] = _0x4f9764, _0x3c7ff6[_0x124465(0x507)] = _0x4d5a92, _0x3c7ff6['_commandBuffer'] = _0x3fd8b2, _0x3c7ff6;
        }
        [_0x6027f5(0x54a)]() {
            var _0x441796 = _0x6027f5, _0x54c651 = this[_0x441796(0x5db)][_0x441796(0x509)][_0x441796(0x50c)](this[_0x441796(0x507)]);
            this[_0x441796(0x54c)](this[_0x441796(0x547)][_0x441796(0x54d)]);
            var _0x325d74 = this[_0x441796(0x54d)], _0x2d14a4 = _0x325d74[_0x441796(0x434)], _0xc565bf = _0x325d74[_0x441796(0x5ca)], _0x18ffc5 = _0x325d74[_0x441796(0x5dc)], _0xa1b284 = _0x325d74[_0x441796(0x5dd)];
            _0x6b4d98[_0x441796(0x27b)](_0xa1b284, this[_0x441796(0x5de)], this[_0x441796(0x5d7)]), this[_0x441796(0x5d8)][_0x441796(0x4aa)](_0x44a154['WORLDMATRIX'], this[_0x441796(0x5de)]), this[_0x441796(0x5d8)][_0x441796(0x4aa)](_0x44a154[_0x441796(0x5df)], this['_projectionViewWorldMatrix']);
            for (var _0x306835 = _0x325d74[_0x441796(0x5e0)], _0x2d9d47 = _0x54c651[_0x441796(0x50d)], _0x4e3462 = 0x0, _0x411bf4 = _0x2d9d47[_0x441796(0x205)]; _0x4e3462 < _0x411bf4; _0x4e3462++) {
                var _0x30b77 = _0x2d9d47[_0x4e3462];
                if (_0x30b77[_0x441796(0x5e1)] === _0x306835) {
                    var _0x3cc2d2 = _0x7a6ad[_0x441796(0x569)];
                    _0xc565bf[_0x441796(0x4e2)][_0x441796(0x498)]['cloneTo'](_0x3cc2d2), _0x3cc2d2[_0x441796(0x449)](this['_renderShaderValue']['_defineDatas']), _0x3cc2d2[_0x441796(0x449)](this[_0x441796(0x5db)][_0x441796(0x4e2)][_0x441796(0x498)]);
                    var _0x151a18 = _0x325d74[_0x441796(0x508)] = _0x30b77[_0x441796(0x530)](_0x3cc2d2);
                    _0x151a18[_0x441796(0x452)](), _0x151a18[_0x441796(0x56a)](_0x151a18[_0x441796(0x5e2)], _0xc565bf[_0x441796(0x4e2)], !0x0), _0x151a18[_0x441796(0x56a)](_0x151a18[_0x441796(0x5e3)], this['_renderShaderValue'], !0x0), _0x151a18[_0x441796(0x56a)](_0x151a18['_cameraUniformParamsMap'], _0x18ffc5, !0x0);
                    var _0x19f15b = this[_0x441796(0x5db)][_0x441796(0x4e2)];
                    _0x151a18['uploadUniforms'](_0x151a18[_0x441796(0x56b)], _0x19f15b, !0x0), _0x151a18[_0x441796(0x56c)](_0x19f15b), _0x151a18[_0x441796(0x5e4)](_0x19f15b, _0x2d14a4, this[_0x441796(0x5de)][_0x441796(0x5e5)]());
                }
            }
            var _0x2250b1, _0x113cd0 = this['_mesh'][_0x441796(0x5e6)];
            if (-0x1 == this[_0x441796(0x5da)]) {
                for (var _0x4302bd = 0x0, _0x3c0af0 = _0x113cd0[_0x441796(0x205)]; _0x4302bd < _0x3c0af0; _0x4302bd++)
                    (_0x2250b1 = _0x113cd0[_0x4302bd])[_0x441796(0x5e7)](_0x325d74) && _0x2250b1[_0x441796(0x5e8)](_0x325d74);
            } else
                (_0x2250b1 = (_0x113cd0 = this[_0x441796(0x5d9)][_0x441796(0x5e6)])[this[_0x441796(0x5da)]])['_prepareRender'](_0x325d74) && _0x2250b1['_render'](_0x325d74);
        }
        ['recover']() {
            var _0x1292ab = _0x6027f5;
            _0x7a6ad['_pool'][_0x1292ab(0x2ac)](this), this[_0x1292ab(0x5d8)][_0x1292ab(0x49d)](), this[_0x1292ab(0x5d8)][_0x1292ab(0x499)]();
        }
    }
    _0x7a6ad[_0x6027f5(0x3f3)] = [], _0x7a6ad[_0x6027f5(0x569)] = new _0x1ff4c5();
    class _0x34c120 extends _0x47a986 {
        constructor() {
            var _0x1f5299 = _0x6027f5;
            super(...arguments), this[_0x1f5299(0x5e9)] = !0x1, this['_clearDepth'] = !0x1, this[_0x1f5299(0x5ea)] = new _0x5b8e4e(), this[_0x1f5299(0x5eb)] = 0x1;
        }
        static [_0x6027f5(0x32a)](_0x4da09b, _0x406f7f, _0x23efbb, _0x3295dc = 0x1, _0x57a3b4) {
            var _0x50ce17 = _0x6027f5, _0x4c5648;
            return (_0x4c5648 = _0x34c120[_0x50ce17(0x3f3)]['length'] > 0x0 ? _0x34c120[_0x50ce17(0x3f3)][_0x50ce17(0x55f)]() : new _0x34c120())[_0x50ce17(0x5e9)] = _0x4da09b, _0x4c5648[_0x50ce17(0x5ec)] = _0x406f7f, _0x23efbb[_0x50ce17(0x1fc)](_0x4c5648['_backgroundColor']), _0x4c5648['_depth'] = _0x3295dc, _0x4c5648['_commandBuffer'] = _0x57a3b4, _0x4c5648;
        }
        ['run']() {
            var _0x515ad1 = _0x6027f5, _0x21b76d, _0x3035f9 = _0x387b86['LayaGL'][_0x515ad1(0x304)], _0x4da83b = this[_0x515ad1(0x5ea)];
            this[_0x515ad1(0x5e9)] && (_0x3035f9[_0x515ad1(0x5ed)](_0x4da83b['x'], _0x4da83b['y'], _0x4da83b['z'], _0x4da83b['w']), _0x21b76d |= _0x3035f9[_0x515ad1(0x5ee)]), this['_clearDepth'] && (_0x3035f9[_0x515ad1(0x5ef)](this[_0x515ad1(0x5eb)]), _0x21b76d |= _0x3035f9[_0x515ad1(0x5f0)]), (this[_0x515ad1(0x5e9)] || this[_0x515ad1(0x5ec)]) && _0x3035f9[_0x515ad1(0x44c)](_0x21b76d);
        }
        ['recover']() {
        }
    }
    _0x34c120[_0x6027f5(0x3f3)] = [];
    class _0x15c6da extends _0x47a986 {
        static [_0x6027f5(0x32a)](_0x3a290a, _0x549830, _0x41c9fc, _0x37b53d) {
            var _0x35bec8 = _0x6027f5, _0x5e601d;
            return (_0x5e601d = _0x15c6da[_0x35bec8(0x3f3)][_0x35bec8(0x205)] > 0x0 ? _0x15c6da[_0x35bec8(0x3f3)][_0x35bec8(0x55f)]() : new _0x15c6da())[_0x35bec8(0x5e8)] = _0x3a290a, _0x5e601d[_0x35bec8(0x5db)] = _0x549830, _0x5e601d[_0x35bec8(0x507)] = _0x41c9fc, _0x5e601d['_commandBuffer'] = _0x37b53d, _0x5e601d;
        }
        [_0x6027f5(0x5f1)](_0x5906ed, _0x182320) {
            var _0x57e46f = _0x6027f5, _0x4e4ee9, _0x5a9ec6, _0x423e20, _0x4e2a88 = _0x182320[_0x57e46f(0x434)], _0x30ba23 = _0x525782[_0x57e46f(0x22c)]['_updateMark'], _0x573321 = _0x182320[_0x57e46f(0x5ca)];
            this[_0x57e46f(0x5e8)]['_scene'] = _0x182320['scene'];
            var _0x4c2a43 = _0x182320[_0x57e46f(0x5dc)], _0x50530c = _0x5906ed['_transform'], _0x215565 = _0x5906ed[_0x57e46f(0x5f2)];
            _0x182320[_0x57e46f(0x5f3)] = _0x5906ed, _0x30ba23 !== _0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x385)] || _0x5906ed[_0x57e46f(0x5f4)] !== _0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x5f5)] ? (_0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x5f6)](_0x182320, _0x50530c), _0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x5f7)](_0x182320, _0x50530c), _0x5906ed['render'][_0x57e46f(0x385)] = _0x30ba23, _0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x5f5)] = _0x5906ed[_0x57e46f(0x5f4)]) : _0x5906ed[_0x57e46f(0x5f4)] == _0x525782[_0x57e46f(0x22a)]['RENDERTYPE_INSTANCEBATCH'] && (_0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x5f6)](_0x182320, _0x50530c), _0x5906ed[_0x57e46f(0x4ff)]['_renderUpdateWithCamera'](_0x182320, _0x50530c));
            var _0x551ea0 = _0x182320[_0x57e46f(0x5e0)];
            if (_0x215565[_0x57e46f(0x5e7)](_0x182320))
                for (var _0x28ecbe = _0x5906ed[_0x57e46f(0x5f8)][_0x57e46f(0x50d)], _0x4f6fe8 = 0x0, _0x5cb5dc = _0x28ecbe['length']; _0x4f6fe8 < _0x5cb5dc; _0x4f6fe8++) {
                    var _0x471b12 = _0x28ecbe[_0x4f6fe8];
                    if (_0x471b12[_0x57e46f(0x5e1)] === _0x551ea0) {
                        var _0x314e5e = _0x15c6da[_0x57e46f(0x569)];
                        _0x573321[_0x57e46f(0x4e2)][_0x57e46f(0x498)]['cloneTo'](_0x314e5e), _0x314e5e['addDefineDatas'](_0x5906ed['render'][_0x57e46f(0x4e2)][_0x57e46f(0x498)]), _0x314e5e[_0x57e46f(0x449)](this[_0x57e46f(0x5db)]['_shaderValues'][_0x57e46f(0x498)]);
                        var _0x15a494 = _0x182320[_0x57e46f(0x508)] = _0x471b12[_0x57e46f(0x530)](_0x314e5e), _0x346eba = _0x15a494['bind'](), _0x25fd8c = _0x30ba23 !== _0x15a494[_0x57e46f(0x5f9)], _0x32c54d = _0x15a494[_0x57e46f(0x5fa)] !== _0x573321 || _0x25fd8c;
                        (_0x32c54d || _0x346eba) && (_0x15a494[_0x57e46f(0x56a)](_0x15a494[_0x57e46f(0x5e2)], _0x573321[_0x57e46f(0x4e2)], _0x32c54d), _0x15a494['_uploadScene'] = _0x573321);
                        var _0x2d440e = _0x15a494['_uploadRender'] !== _0x5906ed[_0x57e46f(0x4ff)] || _0x15a494[_0x57e46f(0x5fb)] !== _0x5906ed[_0x57e46f(0x5f4)] || _0x25fd8c;
                        (_0x2d440e || _0x346eba) && (_0x15a494['uploadUniforms'](_0x15a494[_0x57e46f(0x5e3)], _0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x4e2)], _0x2d440e), _0x15a494['_uploadRender'] = _0x5906ed['render'], _0x15a494[_0x57e46f(0x5fb)] = _0x5906ed['renderType']);
                        var _0x4338b9 = _0x15a494[_0x57e46f(0x5fc)] !== _0x4c2a43 || _0x25fd8c;
                        (_0x4338b9 || _0x346eba) && (_0x15a494[_0x57e46f(0x56a)](_0x15a494[_0x57e46f(0x5fd)], _0x4c2a43, _0x4338b9), _0x15a494[_0x57e46f(0x5fc)] = _0x4c2a43);
                        var _0x4377e2 = _0x15a494['_uploadMaterial'] !== this[_0x57e46f(0x5db)] || _0x25fd8c;
                        (_0x4377e2 || _0x346eba) && (_0x15a494[_0x57e46f(0x56a)](_0x15a494['_materialUniformParamsMap'], this[_0x57e46f(0x5db)][_0x57e46f(0x4e2)], _0x4377e2), _0x15a494['_uploadMaterial'] = this[_0x57e46f(0x5db)]);
                        var _0x2277fa = this[_0x57e46f(0x5db)][_0x57e46f(0x4e2)];
                        _0x4e4ee9 !== this[_0x57e46f(0x5db)] || _0x5a9ec6 !== _0x15a494 ? (_0x15a494[_0x57e46f(0x56c)](_0x2277fa), _0x15a494[_0x57e46f(0x5e4)](_0x2277fa, _0x4e2a88, _0x5906ed['getInvertFront']()), _0x4e4ee9 = this['_material'], _0x5a9ec6 = _0x15a494, _0x423e20 = _0x5906ed[_0x57e46f(0x4ff)]) : _0x423e20 !== _0x5906ed[_0x57e46f(0x4ff)] && (_0x15a494[_0x57e46f(0x5e4)](_0x2277fa, _0x4e2a88, _0x5906ed[_0x57e46f(0x5e5)]()), _0x423e20 = _0x5906ed[_0x57e46f(0x4ff)]), _0x215565['_render'](_0x182320), _0x15a494['_uploadMark'] = _0x30ba23;
                    }
                }
            _0x5906ed['renderType'] !== _0x525782[_0x57e46f(0x22a)][_0x57e46f(0x5fe)] && _0x5906ed[_0x57e46f(0x4ff)][_0x57e46f(0x5ff)](_0x182320);
        }
        [_0x6027f5(0x54a)]() {
            var _0x46dcad = _0x6027f5;
            if (!this[_0x46dcad(0x5db)])
                throw 'This\x20render\x20command\x20material\x20cannot\x20be\x20empty';
            this['setContext'](this[_0x46dcad(0x547)][_0x46dcad(0x54d)]);
            for (var _0x45089f = this['_context'], _0x47583d = (_0x45089f[_0x46dcad(0x5ca)], this[_0x46dcad(0x5e8)][_0x46dcad(0x600)]), _0x1b089e = 0x0, _0x21ee6c = _0x47583d[_0x46dcad(0x205)]; _0x1b089e < _0x21ee6c; _0x1b089e++) {
                var _0x5182af = _0x47583d[_0x1b089e];
                this[_0x46dcad(0x601)](_0x5182af), this[_0x46dcad(0x5f1)](_0x5182af, _0x45089f);
            }
        }
        [_0x6027f5(0x601)](_0x433481) {
            var _0x5b9ce8 = _0x6027f5;
            this[_0x5b9ce8(0x5db)] && (_0x433481[_0x5b9ce8(0x5f8)] = this[_0x5b9ce8(0x5db)][_0x5b9ce8(0x509)][_0x5b9ce8(0x50c)](this['_subShaderIndex']));
        }
        [_0x6027f5(0x54b)]() {
            var _0x2b2948 = _0x6027f5;
            _0x15c6da['_pool'][_0x2b2948(0x2ac)](this);
        }
    }
    _0x15c6da[_0x6027f5(0x3f3)] = [], _0x15c6da['_compileDefine'] = new _0x1ff4c5();
    class _0x1d9bbb extends _0x47a986 {
        constructor() {
            var _0x2f9f7e = _0x6027f5;
            super(...arguments), this[_0x2f9f7e(0x578)] = 0x0, this[_0x2f9f7e(0x448)] = null, this['_dataType'] = -0x1;
        }
        static [_0x6027f5(0x32a)](_0x2838d0, _0x1b00fc, _0x545813, _0x29cdf0) {
            var _0x1c6252 = _0x6027f5, _0x1ec4bb;
            return (_0x1ec4bb = _0x1d9bbb[_0x1c6252(0x3f3)][_0x1c6252(0x205)] > 0x0 ? _0x1d9bbb[_0x1c6252(0x3f3)][_0x1c6252(0x55f)]() : new _0x1d9bbb())[_0x1c6252(0x578)] = _0x2838d0, _0x1ec4bb['_value'] = _0x1b00fc, _0x1ec4bb['_dataType'] = _0x545813, _0x1ec4bb['_commandBuffer'] = _0x29cdf0, _0x1ec4bb;
        }
        [_0x6027f5(0x54a)]() {
            var _0x1e8320 = _0x6027f5, _0x1d3ca0 = this['_commandBuffer'][_0x1e8320(0x560)][_0x1e8320(0x5ca)][_0x1e8320(0x4e2)];
            switch (this[_0x1e8320(0x579)]) {
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x572)]:
                _0x1d3ca0[_0x1e8320(0x4a1)](this[_0x1e8320(0x578)], this['_value']);
                break;
            case _0x18be32['ShaderDataType'][_0x1e8320(0x574)]:
                _0x1d3ca0['setNumber'](this['_nameID'], this[_0x1e8320(0x448)]);
                break;
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x573)]:
                _0x1d3ca0[_0x1e8320(0x49f)](this[_0x1e8320(0x578)], this[_0x1e8320(0x448)]);
                break;
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x228)]:
                _0x1d3ca0[_0x1e8320(0x4aa)](this[_0x1e8320(0x578)], this[_0x1e8320(0x448)]);
                break;
            case _0x18be32[_0x1e8320(0x571)]['Quaternion']:
                _0x1d3ca0['setQuaternion'](this['_nameID'], this[_0x1e8320(0x448)]);
                break;
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x577)]:
                _0x1d3ca0['setTexture'](this[_0x1e8320(0x578)], this[_0x1e8320(0x448)]);
                break;
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x4fd)]:
                _0x1d3ca0['setVector'](this['_nameID'], this['_value']);
                break;
            case _0x18be32['ShaderDataType'][_0x1e8320(0x575)]:
                _0x1d3ca0[_0x1e8320(0x4a5)](this[_0x1e8320(0x578)], this['_value']);
                break;
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x46b)]:
                _0x1d3ca0[_0x1e8320(0x57a)](this[_0x1e8320(0x578)], this[_0x1e8320(0x448)]);
                break;
            case _0x18be32[_0x1e8320(0x571)][_0x1e8320(0x458)]:
                _0x1d3ca0['setBuffer'](this[_0x1e8320(0x578)], this['_value']);
                break;
            default:
                throw _0x1e8320(0x602);
            }
        }
        ['recover']() {
            var _0xc5ca7 = _0x6027f5;
            _0x1d9bbb[_0xc5ca7(0x3f3)][_0xc5ca7(0x2ac)](this), this[_0xc5ca7(0x578)] = 0x0, this[_0xc5ca7(0x448)] = null, this[_0xc5ca7(0x579)] = -0x1;
        }
    }
    _0x1d9bbb[_0x6027f5(0x3f3)] = [];
    class _0x2553d1 {
    }
    class _0x73b54a {
        static ['__init__']() {
            var _0x38f28c = _0x6027f5;
            _0x73b54a[_0x38f28c(0x603)] = new _0x4b2139(0x40, [
                new _0x25649b(0x0, _0x53b5cc[_0x38f28c(0x4fd)], _0x73b54a[_0x38f28c(0x604)]),
                new _0x25649b(0x10, _0x53b5cc[_0x38f28c(0x4fd)], _0x73b54a[_0x38f28c(0x605)]),
                new _0x25649b(0x20, _0x53b5cc[_0x38f28c(0x4fd)], _0x73b54a[_0x38f28c(0x606)]),
                new _0x25649b(0x30, _0x53b5cc[_0x38f28c(0x4fd)], _0x73b54a['MESH_WORLDMATRIX_ROW3'])
            ]), _0x73b54a['instanceSimpleAnimatorDeclaration'] = new _0x4b2139(0x10, [new _0x25649b(0x0, _0x53b5cc[_0x38f28c(0x4fd)], _0x73b54a['MESH_SIMPLEANIMATOR'])]);
        }
        static [_0x6027f5(0x607)](_0x5833f4, _0x2bb66b = !0x0) {
            var _0x16be0b = _0x6027f5, _0x1d2aeb = _0x73b54a[_0x16be0b(0x608)][_0x5833f4 + (_0x2bb66b ? '_0' : '_1')];
            if (!_0x1d2aeb) {
                for (var _0x59ca4b = _0x5833f4[_0x16be0b(0x609)](','), _0x5bc1ad = 0x0, _0xf6ffe3 = [], _0x5666ea = 0x0, _0xcb8bbc = _0x59ca4b[_0x16be0b(0x205)]; _0x5666ea < _0xcb8bbc; _0x5666ea++) {
                    var _0x4f1ea8;
                    switch (_0x59ca4b[_0x5666ea]) {
                    case _0x16be0b(0x60a):
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x46b)], _0x73b54a['MESH_POSITION0']), _0x5bc1ad += 0xc;
                        break;
                    case _0x16be0b(0x60b):
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc['Vector3'], _0x73b54a[_0x16be0b(0x60c)]), _0x5bc1ad += 0xc;
                        break;
                    case _0x16be0b(0x438):
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc['Vector4'], _0x73b54a[_0x16be0b(0x60d)]), _0x5bc1ad += 0x10;
                        break;
                    case 'UV':
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x575)], _0x73b54a['MESH_TEXTURECOORDINATE0']), _0x5bc1ad += 0x8;
                        break;
                    case _0x16be0b(0x60e):
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x575)], _0x73b54a[_0x16be0b(0x60f)]), _0x5bc1ad += 0x8;
                        break;
                    case _0x16be0b(0x610):
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x4fd)], _0x73b54a[_0x16be0b(0x611)]), _0x5bc1ad += 0x10;
                        break;
                    case _0x16be0b(0x612):
                        _0x2bb66b ? (_0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x4fd)], _0x73b54a['MESH_BLENDINDICES0']), _0x5bc1ad += 0x10) : (_0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x470)], _0x73b54a['MESH_BLENDINDICES0']), _0x5bc1ad += 0x4);
                        break;
                    case _0x16be0b(0x613):
                        _0x4f1ea8 = new _0x25649b(_0x5bc1ad, _0x53b5cc[_0x16be0b(0x4fd)], _0x73b54a[_0x16be0b(0x614)]), _0x5bc1ad += 0x10;
                        break;
                    default:
                        throw 'VertexMesh:\x20unknown\x20vertex\x20flag.';
                    }
                    _0xf6ffe3['push'](_0x4f1ea8);
                }
                _0x1d2aeb = new _0x4b2139(_0x5bc1ad, _0xf6ffe3), _0x73b54a[_0x16be0b(0x608)][_0x5833f4 + (_0x2bb66b ? '_0' : '_1')] = _0x1d2aeb;
            }
            return _0x1d2aeb;
        }
    }
    _0x73b54a[_0x6027f5(0x615)] = 0x0, _0x73b54a[_0x6027f5(0x60d)] = 0x1, _0x73b54a[_0x6027f5(0x616)] = 0x2, _0x73b54a[_0x6027f5(0x60c)] = 0x3, _0x73b54a[_0x6027f5(0x614)] = 0x4, _0x73b54a[_0x6027f5(0x617)] = 0x5, _0x73b54a[_0x6027f5(0x611)] = 0x6, _0x73b54a[_0x6027f5(0x60f)] = 0x7, _0x73b54a[_0x6027f5(0x604)] = 0x8, _0x73b54a[_0x6027f5(0x605)] = 0x9, _0x73b54a[_0x6027f5(0x606)] = 0xa, _0x73b54a[_0x6027f5(0x618)] = 0xb, _0x73b54a[_0x6027f5(0x619)] = 0xc, _0x73b54a[_0x6027f5(0x61a)] = 0xc, _0x73b54a[_0x6027f5(0x61b)] = 0xd, _0x73b54a[_0x6027f5(0x61c)] = 0xe, _0x73b54a['MESH_CUSTOME3'] = 0xf, _0x73b54a['_vertexDeclarationMap'] = {};
    class _0x3e3537 extends _0x47a986 {
        constructor() {
            var _0x3c166f = _0x6027f5;
            super(), this[_0x3c166f(0x5d8)] = new _0x3985fd(null);
            let _0x2a661b = _0x387b86[_0x3c166f(0x303)][_0x3c166f(0x304)];
            this[_0x3c166f(0x61d)] = new Float32Array(0x10 * _0x3e3537[_0x3c166f(0x61e)]), this[_0x3c166f(0x61f)] = new _0x2ce777(0x4 * this[_0x3c166f(0x61d)][_0x3c166f(0x205)], _0x2a661b[_0x3c166f(0x620)]), this[_0x3c166f(0x61f)][_0x3c166f(0x456)] = _0x73b54a[_0x3c166f(0x603)];
        }
        static [_0x6027f5(0x32a)](_0x3d140d, _0x1baf23, _0x136b00, _0x15fe4e, _0x5acce6, _0x1c2131, _0x54591e, _0x19f47b) {
            var _0x4934dd = _0x6027f5, _0x5c9bcf;
            if (_0x136b00 && _0x136b00['length'] > 0x400 || _0x54591e > _0x3e3537['maxInstanceCount'])
                throw _0x4934dd(0x621);
            return (_0x5c9bcf = _0x3e3537[_0x4934dd(0x3f3)]['length'] > 0x0 ? _0x3e3537[_0x4934dd(0x3f3)]['pop']() : new _0x3e3537())['_mesh'] = _0x3d140d, _0x5c9bcf['_matrixs'] = _0x136b00, _0x5c9bcf['_material'] = _0x15fe4e, _0x5c9bcf[_0x4934dd(0x5da)] = _0x1baf23, _0x5c9bcf[_0x4934dd(0x507)] = _0x5acce6, _0x5c9bcf[_0x4934dd(0x547)] = _0x19f47b, _0x5c9bcf[_0x4934dd(0x622)] = _0x1c2131, _0x5c9bcf[_0x4934dd(0x623)] = _0x54591e, _0x136b00 || _0x5c9bcf[_0x4934dd(0x624)](), _0x5c9bcf[_0x4934dd(0x625)](), _0x5c9bcf;
        }
        [_0x6027f5(0x625)]() {
            var _0x3acaae = _0x6027f5;
            let _0x5da2e3 = this[_0x3acaae(0x626)] = new _0x5b1dae();
            _0x5da2e3[_0x3acaae(0x452)](), _0x5da2e3[_0x3acaae(0x4eb)](this[_0x3acaae(0x5d9)][_0x3acaae(0x4f6)]), _0x5da2e3[_0x3acaae(0x627)](this['_instanceWorldMatrixBuffer']);
            let _0x4b02c1 = this[_0x3acaae(0x622)][_0x3acaae(0x628)];
            for (let _0x2ab4f1 in _0x4b02c1)
                _0x5da2e3[_0x3acaae(0x627)](_0x4b02c1[_0x2ab4f1][_0x3acaae(0x4f6)]);
            _0x5da2e3[_0x3acaae(0x4f3)](this[_0x3acaae(0x5d9)][_0x3acaae(0x629)]), _0x5da2e3[_0x3acaae(0x4f9)]();
        }
        [_0x6027f5(0x624)]() {
            var _0x1c3564 = _0x6027f5;
            let _0x1da263 = this[_0x1c3564(0x61d)], _0xb08095 = this[_0x1c3564(0x623)];
            for (let _0x269ed4 = 0x0; _0x269ed4 < _0xb08095; _0x269ed4++)
                _0x1da263[_0x1c3564(0x31f)](this['_matrixs'][_0x269ed4][_0x1c3564(0x1fe)], 0x10 * _0x269ed4);
            let _0x15179c = this['_instanceWorldMatrixBuffer'];
            _0x15179c[_0x1c3564(0x62a)](), _0x15179c['setData'](_0x1da263['buffer'], 0x0, 0x0, 0x40 * _0xb08095);
        }
        [_0x6027f5(0x5e8)](_0x34b991) {
            var _0x514bb7 = _0x6027f5;
            let _0x2deb7e = _0x387b86[_0x514bb7(0x303)]['instance'];
            var _0x5f575b = this[_0x514bb7(0x623)], _0x5db8a1 = _0x34b991[_0x514bb7(0x62b)];
            this[_0x514bb7(0x626)]['bind'](), _0x387b86[_0x514bb7(0x303)]['layaGPUInstance'][_0x514bb7(0x62c)](_0x2deb7e[_0x514bb7(0x506)], _0x5db8a1, _0x2deb7e['UNSIGNED_SHORT'], 0x2 * _0x34b991[_0x514bb7(0x62d)], _0x5f575b), _0x387b86['Stat'][_0x514bb7(0x502)]++, _0x387b86['Stat'][_0x514bb7(0x62e)] += _0x5db8a1 * _0x5f575b / 0x3;
        }
        ['run']() {
            var _0x4481d2 = _0x6027f5;
            let _0x3516e5 = this['_material'][_0x4481d2(0x509)][_0x4481d2(0x50c)](this[_0x4481d2(0x507)]);
            this[_0x4481d2(0x54c)](this['_commandBuffer'][_0x4481d2(0x54d)]);
            let _0x3fe11b = this[_0x4481d2(0x54d)], _0x12c9f6 = _0x3fe11b[_0x4481d2(0x434)], _0x23c5ef = _0x3fe11b[_0x4481d2(0x5ca)], _0x57a2fb = _0x3fe11b[_0x4481d2(0x5dc)], _0x6f1934 = _0x3fe11b[_0x4481d2(0x5e0)];
            this[_0x4481d2(0x5d8)][_0x4481d2(0x49a)](_0x2553d1['SHADERDEFINE_GPU_INSTANCE']);
            let _0x156289 = _0x3516e5['_passes'];
            for (let _0x3d2228 = 0x0, _0x54bfc2 = _0x156289['length']; _0x3d2228 < _0x54bfc2; _0x3d2228++) {
                let _0x2dfd82 = _0x156289[_0x3d2228];
                if (_0x2dfd82['_pipelineMode'] !== _0x6f1934)
                    continue;
                let _0x4bf980 = _0x3e3537[_0x4481d2(0x569)];
                _0x23c5ef[_0x4481d2(0x4e2)][_0x4481d2(0x498)]['cloneTo'](_0x4bf980), _0x4bf980[_0x4481d2(0x449)](this[_0x4481d2(0x5d8)][_0x4481d2(0x498)]), _0x4bf980[_0x4481d2(0x449)](this[_0x4481d2(0x5db)][_0x4481d2(0x4e2)][_0x4481d2(0x498)]);
                let _0x3a47d3 = _0x3fe11b[_0x4481d2(0x508)] = _0x2dfd82['withCompile'](_0x4bf980);
                _0x3a47d3[_0x4481d2(0x452)](), _0x3a47d3[_0x4481d2(0x56a)](_0x3a47d3[_0x4481d2(0x5e2)], _0x23c5ef[_0x4481d2(0x4e2)], !0x0), _0x3a47d3[_0x4481d2(0x56a)](_0x3a47d3[_0x4481d2(0x5e3)], this[_0x4481d2(0x5d8)], !0x0), _0x3a47d3[_0x4481d2(0x56a)](_0x3a47d3[_0x4481d2(0x5fd)], _0x57a2fb, !0x0);
                let _0x188a22 = this['_material']['_shaderValues'];
                _0x3a47d3[_0x4481d2(0x56a)](_0x3a47d3['_materialUniformParamsMap'], _0x188a22, !0x0), _0x3a47d3[_0x4481d2(0x56c)](_0x188a22), _0x3a47d3[_0x4481d2(0x5e4)](_0x188a22, _0x12c9f6, !0x1);
            }
            let _0x373df8 = this[_0x4481d2(0x622)][_0x4481d2(0x628)];
            for (let _0x20b6ec in _0x373df8)
                _0x373df8[_0x20b6ec]['updateVertexBufferData'](this[_0x4481d2(0x623)]);
            let _0x29dc55, _0x5896c6 = this[_0x4481d2(0x5d9)][_0x4481d2(0x5e6)];
            if (-0x1 == this['_subMeshIndex']) {
                for (let _0x2e541f = 0x0, _0x40b5da = _0x5896c6[_0x4481d2(0x205)]; _0x2e541f < _0x40b5da; _0x2e541f++)
                    _0x29dc55 = _0x5896c6[_0x2e541f], _0x29dc55[_0x4481d2(0x5e7)](_0x3fe11b) && this[_0x4481d2(0x5e8)](_0x29dc55);
            } else
                _0x29dc55 = this[_0x4481d2(0x5d9)][_0x4481d2(0x5e6)][this['_subMeshIndex']], _0x29dc55[_0x4481d2(0x5e7)](_0x3fe11b) && this[_0x4481d2(0x5e8)](_0x29dc55);
        }
        [_0x6027f5(0x62f)](_0x1303d7) {
            var _0x795570 = _0x6027f5;
            if (_0x1303d7['length'] < this[_0x795570(0x623)])
                throw _0x795570(0x630);
            this[_0x795570(0x631)] = _0x1303d7, this['_matrixs'] && this['_updateWorldMatrixBuffer']();
        }
        ['setDrawNums'](_0x374e96) {
            var _0x295899 = _0x6027f5;
            if (this[_0x295899(0x631)] && this[_0x295899(0x631)]['length'] < _0x374e96)
                throw _0x295899(0x630);
            this[_0x295899(0x623)] = _0x374e96, this['_matrixs'] && this[_0x295899(0x624)]();
        }
        [_0x6027f5(0x54b)]() {
            var _0x5c99bb = _0x6027f5;
            _0x3e3537[_0x5c99bb(0x3f3)][_0x5c99bb(0x2ac)](this), this[_0x5c99bb(0x5d8)][_0x5c99bb(0x49d)](), this[_0x5c99bb(0x5d8)][_0x5c99bb(0x499)](), this['_instanceBufferState'][_0x5c99bb(0x364)](), this['_instanceBufferState'] = null;
        }
    }
    _0x3e3537['_pool'] = [], _0x3e3537[_0x6027f5(0x569)] = new _0x1ff4c5(), _0x3e3537[_0x6027f5(0x61e)] = 0x400;
    class _0x3f18cf {
        constructor() {
            var _0x3c72b0 = _0x6027f5;
            this['_camera'] = null, this[_0x3c72b0(0x632)] = [];
        }
        [_0x6027f5(0x633)]() {
            var _0x53e8f9 = _0x6027f5;
            for (var _0x5a96b4 = 0x0, _0x1a243e = this['_commands'][_0x53e8f9(0x205)]; _0x5a96b4 < _0x1a243e; _0x5a96b4++)
                this[_0x53e8f9(0x632)][_0x5a96b4]['run']();
        }
        [_0x6027f5(0x634)](_0x10e288, _0x464b47, _0x592519) {
            var _0x3a9c82 = _0x6027f5;
            this[_0x3a9c82(0x632)][_0x3a9c82(0x2ac)](_0x301fd5[_0x3a9c82(0x32a)](_0x10e288, _0x464b47, _0x592519, _0x18be32[_0x3a9c82(0x571)][_0x3a9c82(0x577)], this));
        }
        [_0x6027f5(0x635)](_0x32e255, _0x3c8513) {
            var _0x38c5ca = _0x6027f5;
            this[_0x38c5ca(0x632)][_0x38c5ca(0x2ac)](_0x1d9bbb[_0x38c5ca(0x32a)](_0x32e255, _0x3c8513, _0x18be32[_0x38c5ca(0x571)]['Texture'], this));
        }
        [_0x6027f5(0x636)](_0x1e0abf, _0x2e9bba, _0x215de8) {
            var _0xdedf2c = _0x6027f5;
            this[_0xdedf2c(0x632)][_0xdedf2c(0x2ac)](_0x301fd5[_0xdedf2c(0x32a)](_0x1e0abf, _0x2e9bba, _0x215de8, _0x18be32[_0xdedf2c(0x571)]['Vector4'], this));
        }
        [_0x6027f5(0x637)](_0x1c8b15, _0x1c1c44) {
            var _0xf5e530 = _0x6027f5;
            this[_0xf5e530(0x632)][_0xf5e530(0x2ac)](_0x1d9bbb[_0xf5e530(0x32a)](_0x1c8b15, _0x1c1c44, _0x18be32[_0xf5e530(0x571)][_0xf5e530(0x4fd)], this));
        }
        [_0x6027f5(0x638)](_0x160d61, _0x20d857, _0x411d29) {
            var _0x5a2cec = _0x6027f5;
            this[_0x5a2cec(0x632)]['push'](_0x301fd5['create'](_0x160d61, _0x20d857, _0x411d29, _0x18be32[_0x5a2cec(0x571)]['Vector3'], this));
        }
        [_0x6027f5(0x639)](_0x3af2d7, _0x343319) {
            var _0x14e4db = _0x6027f5;
            this[_0x14e4db(0x632)][_0x14e4db(0x2ac)](_0x1d9bbb[_0x14e4db(0x32a)](_0x3af2d7, _0x343319, _0x18be32[_0x14e4db(0x571)][_0x14e4db(0x46b)], this));
        }
        [_0x6027f5(0x63a)](_0x4f0406, _0x585497, _0x480a7e) {
            var _0x2def77 = _0x6027f5;
            this['_commands'][_0x2def77(0x2ac)](_0x301fd5[_0x2def77(0x32a)](_0x4f0406, _0x585497, _0x480a7e, _0x18be32[_0x2def77(0x571)][_0x2def77(0x575)], this));
        }
        [_0x6027f5(0x63b)](_0x31a2b9, _0x2825cc) {
            var _0x206423 = _0x6027f5;
            this['_commands'][_0x206423(0x2ac)](_0x1d9bbb[_0x206423(0x32a)](_0x31a2b9, _0x2825cc, _0x18be32[_0x206423(0x571)]['Vector2'], this));
        }
        [_0x6027f5(0x63c)](_0x336228, _0x502004, _0xb4d439) {
            var _0x5e6ca2 = _0x6027f5;
            this[_0x5e6ca2(0x632)][_0x5e6ca2(0x2ac)](_0x301fd5[_0x5e6ca2(0x32a)](_0x336228, _0x502004, _0xb4d439, _0x18be32['ShaderDataType'][_0x5e6ca2(0x574)], this));
        }
        [_0x6027f5(0x63d)](_0x4bde7c, _0x12d82e) {
            var _0x891d9a = _0x6027f5;
            this['_commands'][_0x891d9a(0x2ac)](_0x1d9bbb['create'](_0x4bde7c, _0x12d82e, _0x18be32[_0x891d9a(0x571)][_0x891d9a(0x574)], this));
        }
        [_0x6027f5(0x63e)](_0x2e755c, _0x57ccb4, _0x20073d) {
            var _0x59b984 = _0x6027f5;
            this['_commands'][_0x59b984(0x2ac)](_0x301fd5[_0x59b984(0x32a)](_0x2e755c, _0x57ccb4, _0x20073d, _0x18be32[_0x59b984(0x571)]['Int'], this));
        }
        [_0x6027f5(0x63f)](_0x444510, _0x1e6085) {
            var _0x24bfd7 = _0x6027f5;
            this[_0x24bfd7(0x632)][_0x24bfd7(0x2ac)](_0x1d9bbb[_0x24bfd7(0x32a)](_0x444510, _0x1e6085, _0x18be32[_0x24bfd7(0x571)][_0x24bfd7(0x572)], this));
        }
        [_0x6027f5(0x640)](_0x41fca7, _0x779c1e, _0x4cae8f) {
            var _0x297241 = _0x6027f5;
            this['_commands'][_0x297241(0x2ac)](_0x301fd5[_0x297241(0x32a)](_0x41fca7, _0x779c1e, _0x4cae8f, _0x18be32['ShaderDataType'][_0x297241(0x228)], this));
        }
        [_0x6027f5(0x641)](_0x1abb71, _0x54f02f) {
            var _0x1b1f8c = _0x6027f5;
            this['_commands'][_0x1b1f8c(0x2ac)](_0x1d9bbb[_0x1b1f8c(0x32a)](_0x1abb71, _0x54f02f, _0x18be32[_0x1b1f8c(0x571)][_0x1b1f8c(0x228)], this));
        }
        [_0x6027f5(0x642)](_0x44eeff, _0x549972, _0x4661e2 = null, _0x3cc0c7 = null, _0x2bbc80 = null, _0x527a01 = 0x0, _0x2b2b84 = !0x1) {
            var _0x2c78b2 = _0x6027f5;
            this[_0x2c78b2(0x632)]['push'](_0xcc3875[_0x2c78b2(0x32a)](_0x44eeff, _0x549972, _0x4661e2, _0x3cc0c7, _0x2bbc80, _0x527a01, _0xcc3875[_0x2c78b2(0x56f)], this, _0x2b2b84));
        }
        [_0x6027f5(0x643)](_0x3bdd0a, _0x1993ad, _0x5170c2 = null, _0x5c5aa5 = null, _0x45652d = 0x0) {
            var _0x34a86b = _0x6027f5, _0x554f69, _0x2f6839;
            _0x5c5aa5 && (_0x554f69 = _0x5c5aa5[_0x34a86b(0x509)], _0x2f6839 = _0x5c5aa5[_0x34a86b(0x644)]), this['_commands']['push'](_0xcc3875['create'](_0x3bdd0a, _0x1993ad, _0x5170c2, _0x554f69, _0x2f6839, _0x45652d, _0xcc3875['_SCREENTYPE_QUAD'], this));
        }
        ['blitScreenTriangle'](_0x19665f, _0x24af56, _0x4107ac = null, _0xc4297f = null, _0x4b3304 = null, _0x6dc693 = 0x0, _0x4d29fe = !0x1) {
            var _0x1afd4e = _0x6027f5;
            this[_0x1afd4e(0x632)]['push'](_0xcc3875[_0x1afd4e(0x32a)](_0x19665f, _0x24af56, _0x4107ac, _0xc4297f, _0x4b3304, _0x6dc693, _0xcc3875[_0x1afd4e(0x56d)], this, _0x4d29fe));
        }
        [_0x6027f5(0x645)](_0x11eda4) {
            var _0x5203bc = _0x6027f5;
            this[_0x5203bc(0x632)][_0x5203bc(0x2ac)](_0x32f706[_0x5203bc(0x32a)](_0x11eda4));
        }
        [_0x6027f5(0x646)](_0x539107, _0xab7cf0, _0x293adf, _0x3745c9 = 0x1) {
            var _0x1965fd = _0x6027f5;
            this[_0x1965fd(0x632)][_0x1965fd(0x2ac)](_0x34c120['create'](_0x539107, _0xab7cf0, _0x293adf, _0x3745c9, this));
        }
        [_0x6027f5(0x647)](_0x1a3292, _0x3b55cd, _0x1372a4, _0x2aeab3, _0x3d3252) {
            var _0x1d34b1 = _0x6027f5;
            this[_0x1d34b1(0x632)][_0x1d34b1(0x2ac)](_0x7a6ad[_0x1d34b1(0x32a)](_0x1a3292, _0x3b55cd, _0x1372a4, _0x2aeab3, _0x3d3252, this));
        }
        [_0x6027f5(0x648)](_0x11e787, _0x4adb9d, _0x50943a) {
            var _0x10df66 = _0x6027f5;
            this[_0x10df66(0x632)][_0x10df66(0x2ac)](_0x15c6da['create'](_0x11e787, _0x4adb9d, _0x50943a, this));
        }
        [_0x6027f5(0x649)](_0x1ce7e5, _0x53a700, _0x1ecb04, _0x4b53e0, _0x164e0d, _0x4d9571, _0x19d322) {
            var _0x247057 = _0x6027f5;
            if (!_0x387b86[_0x247057(0x303)][_0x247057(0x4f1)][_0x247057(0x64a)]())
                return null;
            var _0x6a7571 = _0x3e3537[_0x247057(0x32a)](_0x1ce7e5, _0x53a700, _0x1ecb04, _0x4b53e0, _0x164e0d, _0x4d9571, _0x19d322, this);
            return this[_0x247057(0x632)][_0x247057(0x2ac)](_0x6a7571), _0x6a7571;
        }
        [_0x6027f5(0x44c)]() {
            var _0x3eb253 = _0x6027f5;
            for (var _0xff549c = 0x0, _0x1530db = this[_0x3eb253(0x632)][_0x3eb253(0x205)]; _0xff549c < _0x1530db; _0xff549c++)
                this[_0x3eb253(0x632)][_0xff549c][_0x3eb253(0x54b)]();
            this[_0x3eb253(0x632)]['length'] = 0x0;
        }
    }
    class _0x13d567 {
        constructor() {
            var _0x31b0c2 = _0x6027f5;
            this['source'] = null, this[_0x31b0c2(0x64b)] = null, this[_0x31b0c2(0x64c)] = null, this[_0x31b0c2(0x64d)] = null, this[_0x31b0c2(0x64e)] = null, this[_0x31b0c2(0x64f)] = [];
        }
    }
    class _0x1f6982 {
        constructor() {
            var _0x247dec = _0x6027f5;
            this[_0x247dec(0x650)] = _0x3a9f31['find'](_0x247dec(0x651)), this[_0x247dec(0x652)] = new _0x3985fd(), this[_0x247dec(0x653)] = [], this['_enable'] = !0x0, this[_0x247dec(0x54d)] = null, this[_0x247dec(0x54d)] = new _0x13d567(), this[_0x247dec(0x54d)][_0x247dec(0x64d)] = this[_0x247dec(0x652)], this[_0x247dec(0x54d)]['command'] = new _0x3f18cf();
        }
        static [_0x6027f5(0x230)]() {
            var _0x1d7fbc = _0x6027f5;
            _0x1f6982[_0x1d7fbc(0x654)] = _0x3a9f31[_0x1d7fbc(0x510)](_0x1d7fbc(0x655)), _0x1f6982[_0x1d7fbc(0x656)] = _0x3a9f31[_0x1d7fbc(0x510)](_0x1d7fbc(0x657)), _0x1f6982['SHADERDEFINE_FINALPASS'] = _0x3a9f31[_0x1d7fbc(0x510)](_0x1d7fbc(0x658));
        }
        get [_0x6027f5(0x659)]() {
            var _0x490de9 = _0x6027f5;
            return this[_0x490de9(0x65a)];
        }
        set [_0x6027f5(0x659)](_0x22b43e) {
            var _0x2f7eb3 = _0x6027f5;
            this[_0x2f7eb3(0x65a)] = _0x22b43e;
        }
        [_0x6027f5(0x65b)](_0x4a3cb0) {
            var _0x53c111 = _0x6027f5;
            this[_0x53c111(0x54d)]['camera'] = _0x4a3cb0, this[_0x53c111(0x54d)][_0x53c111(0x64e)][_0x53c111(0x560)] = _0x4a3cb0;
        }
        ['_render']() {
            var _0x10af47 = _0x6027f5, _0x1486f8 = _0x3985fd[_0x10af47(0x4d6)];
            _0x387b86['ILaya']['Render'][_0x10af47(0x65c)] && _0x3985fd['setRuntimeValueMode'](!0x1);
            var _0x5efc5e = this[_0x10af47(0x54d)][_0x10af47(0x64c)], _0x1d6664 = _0x5efc5e[_0x10af47(0x564)], _0x28462d = _0x5efc5e[_0x10af47(0x561)], _0x2b5c53 = _0x28462d;
            this['_context'][_0x10af47(0x64e)][_0x10af47(0x44c)](), this[_0x10af47(0x54d)]['source'] = _0x2b5c53, this[_0x10af47(0x54d)][_0x10af47(0x64b)] = _0x28462d, this['_context'][_0x10af47(0x64d)]['clearDefine'](), this[_0x10af47(0x54d)][_0x10af47(0x64d)][_0x10af47(0x4ac)](_0x1f6982[_0x10af47(0x65d)], _0x387b86[_0x10af47(0x2de)][_0x10af47(0x65e)]);
            for (var _0xf3628c = 0x0, _0x372453 = this[_0x10af47(0x653)][_0x10af47(0x205)]; _0xf3628c < _0x372453; _0xf3628c++)
                this[_0x10af47(0x653)][_0xf3628c][_0x10af47(0x4ff)](this[_0x10af47(0x54d)]);
            this[_0x10af47(0x652)][_0x10af47(0x49a)](_0x1f6982['SHADERDEFINE_FINALPASS']);
            var _0xb85600 = _0x5efc5e['_offScreenRenderTexture'], _0x26d8a8 = _0xb85600 || null;
            this[_0x10af47(0x54d)][_0x10af47(0x64b)] = _0x26d8a8;
            var _0x577f89 = _0x5efc5e['_getCanvasWidth'](), _0x2104be = _0x5efc5e[_0x10af47(0x65f)]();
            _0x5efc5e['_screenOffsetScale']['setValue'](_0x1d6664['x'] / _0x577f89, _0x1d6664['y'] / _0x2104be, _0x1d6664['width'] / _0x577f89, _0x1d6664[_0x10af47(0x439)] / _0x2104be), this[_0x10af47(0x54d)]['command']['blitScreenTriangle'](this[_0x10af47(0x54d)][_0x10af47(0x321)], _0x26d8a8, _0x5efc5e[_0x10af47(0x660)], this['_compositeShader'], this[_0x10af47(0x652)], 0x0, !0x0), _0x26547d[_0x10af47(0x3f4)](_0x2b5c53);
            var _0x313b5b = this[_0x10af47(0x54d)][_0x10af47(0x64f)];
            for (_0xf3628c = 0x0, _0x372453 = _0x313b5b[_0x10af47(0x205)]; _0xf3628c < _0x372453; _0xf3628c++)
                _0x26547d[_0x10af47(0x3f4)](_0x313b5b[_0xf3628c]);
            _0x313b5b['length'] = 0x0, _0x387b86[_0x10af47(0x328)][_0x10af47(0x31a)][_0x10af47(0x65c)] && _0x3985fd['setRuntimeValueMode'](_0x1486f8);
        }
        ['addEffect'](_0x271078) {
            var _0x634df1 = _0x6027f5;
            this[_0x634df1(0x653)][_0x634df1(0x2ac)](_0x271078);
        }
        [_0x6027f5(0x661)](_0xe43f8f) {
            var _0x2da110 = _0x6027f5, _0x3cdbf4 = this['_effects']['indexOf'](_0xe43f8f);
            -0x1 !== _0x3cdbf4 && this[_0x2da110(0x653)][_0x2da110(0x33a)](_0x3cdbf4, 0x1);
        }
        [_0x6027f5(0x662)]() {
            var _0x544537 = _0x6027f5;
            this[_0x544537(0x54d)][_0x544537(0x64e)][_0x544537(0x633)]();
        }
    }
    _0x1f6982['SHADERVALUE_MAINTEX'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x54e)), _0x1f6982[_0x6027f5(0x663)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x664)), _0x1f6982[_0x6027f5(0x65d)] = _0x3a9f31['propertyNameToID']('u_AutoExposureTex'), _0x1f6982[_0x6027f5(0x665)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x666)), _0x1f6982['SHADERVALUE_BLOOMTEX_TEXELSIZE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x667)), _0x1f6982['SHADERVALUE_BLOOM_DIRTTILEOFFSET'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x668)), _0x1f6982[_0x6027f5(0x669)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x66a)), _0x1f6982[_0x6027f5(0x66b)] = _0x3a9f31[_0x6027f5(0x553)]('u_Bloom_Color');
    class _0x3a8938 extends _0x387b86[_0x6027f5(0x66c)] {
        constructor(_0x3b87eb) {
            var _0x567988 = _0x6027f5;
            super(), this[_0x567988(0x3dc)] = _0x3b87eb, this['_children'] = [], this[_0x567988(0x57e)] = new Float32Array(0x10), this[_0x567988(0x57b)] = new _0x3697cd(), this['_localRotation'] = new _0x528999(), this[_0x567988(0x57c)] = new _0x3697cd(), this[_0x567988(0x5a6)] = new Float32Array(0x10), this['_localQuaternionUpdate'] = !0x1, this[_0x567988(0x66d)] = !0x1, this[_0x567988(0x66e)] = !0x1, this[_0x567988(0x66f)] = !0x0;
        }
        [_0x6027f5(0x670)]() {
            var _0x54556c = _0x6027f5;
            return this['_localUpdate'] && (_0x3acd08[_0x54556c(0x671)](this['_localPosition'], this[_0x54556c(0x593)], this[_0x54556c(0x57c)], this[_0x54556c(0x57e)]), this['_localUpdate'] = !0x1), this['_localMatrix'];
        }
        [_0x6027f5(0x5ad)]() {
            var _0x14e3ba = _0x6027f5;
            if (!this['_worldUpdate']) {
                this[_0x14e3ba(0x66f)] = !0x0, this[_0x14e3ba(0x5b0)](_0x387b86[_0x14e3ba(0x5b1)][_0x14e3ba(0x5ae)]);
                for (var _0x3e37a5 = 0x0, _0x590048 = this['_children'][_0x14e3ba(0x205)]; _0x3e37a5 < _0x590048; _0x3e37a5++)
                    this[_0x14e3ba(0x5ac)][_0x3e37a5][_0x14e3ba(0x5ad)]();
            }
        }
        get [_0x6027f5(0x3a3)]() {
            return this['_localPosition'];
        }
        set [_0x6027f5(0x3a3)](_0x5f12ff) {
            var _0x1ac269 = _0x6027f5;
            this[_0x1ac269(0x57b)] = _0x5f12ff, this[_0x1ac269(0x66e)] = !0x0, this[_0x1ac269(0x5ad)]();
        }
        get [_0x6027f5(0x3a4)]() {
            var _0x2b6e3e = _0x6027f5;
            if (this[_0x2b6e3e(0x672)]) {
                var _0x3dbcd9 = this[_0x2b6e3e(0x57d)];
                _0x528999[_0x2b6e3e(0x287)](_0x3dbcd9['y'] / _0x3a8938['_angleToRandin'], _0x3dbcd9['x'] / _0x3a8938[_0x2b6e3e(0x597)], _0x3dbcd9['z'] / _0x3a8938[_0x2b6e3e(0x597)], this[_0x2b6e3e(0x593)]), this['_localQuaternionUpdate'] = !0x1;
            }
            return this[_0x2b6e3e(0x593)];
        }
        set [_0x6027f5(0x3a4)](_0x262ccb) {
            var _0x22c157 = _0x6027f5;
            this['_localRotation'] = _0x262ccb, this[_0x22c157(0x66d)] = !0x0, this[_0x22c157(0x672)] = !0x1, this[_0x22c157(0x66e)] = !0x0, this[_0x22c157(0x5ad)]();
        }
        get [_0x6027f5(0x3a5)]() {
            return this['_localScale'];
        }
        set [_0x6027f5(0x3a5)](_0x14a43c) {
            var _0x48b876 = _0x6027f5;
            this['_localScale'] = _0x14a43c, this[_0x48b876(0x66e)] = !0x0, this[_0x48b876(0x5ad)]();
        }
        get [_0x6027f5(0x3a6)]() {
            var _0xa37e2f = _0x6027f5;
            if (this[_0xa37e2f(0x66d)]) {
                this['_localRotation']['getYawPitchRoll'](_0x3a8938['_tempVector3']);
                var _0x228d7d = _0x3a8938['_tempVector3'], _0xd71b5e = this['_localRotationEuler'];
                _0xd71b5e['x'] = _0x228d7d['y'] * _0x3a8938[_0xa37e2f(0x597)], _0xd71b5e['y'] = _0x228d7d['x'] * _0x3a8938['_angleToRandin'], _0xd71b5e['z'] = _0x228d7d['z'] * _0x3a8938[_0xa37e2f(0x597)], this[_0xa37e2f(0x66d)] = !0x1;
            }
            return this[_0xa37e2f(0x57d)];
        }
        set [_0x6027f5(0x3a6)](_0x44d011) {
            var _0x3ed503 = _0x6027f5;
            this[_0x3ed503(0x57d)] = _0x44d011, this[_0x3ed503(0x66d)] = !0x1, this[_0x3ed503(0x672)] = !0x0, this[_0x3ed503(0x66e)] = !0x0, this[_0x3ed503(0x5ad)]();
        }
        [_0x6027f5(0x3d9)]() {
            var _0x53df12 = _0x6027f5;
            if (this[_0x53df12(0x66f)]) {
                if (null != this['_parent'])
                    _0x3acd08[_0x53df12(0x301)](this['_parent'][_0x53df12(0x3d9)](), this[_0x53df12(0x670)](), this[_0x53df12(0x5a6)]);
                else {
                    var _0x14f25d = this[_0x53df12(0x5a6)];
                    _0x14f25d[0x1] = _0x14f25d[0x2] = _0x14f25d[0x3] = _0x14f25d[0x4] = _0x14f25d[0x6] = _0x14f25d[0x7] = _0x14f25d[0x8] = _0x14f25d[0x9] = _0x14f25d[0xb] = _0x14f25d[0xc] = _0x14f25d[0xd] = _0x14f25d[0xe] = 0x0, _0x14f25d[0x0] = _0x14f25d[0x5] = _0x14f25d[0xa] = _0x14f25d[0xf] = 0x1;
                }
                this[_0x53df12(0x66f)] = !0x1;
            }
            return this[_0x53df12(0x5a6)];
        }
        ['setParent'](_0x259a2d) {
            var _0x111251 = _0x6027f5;
            if (this['_parent'] !== _0x259a2d) {
                if (this['_parent']) {
                    var _0x5d51e0 = this[_0x111251(0x30f)][_0x111251(0x5ac)], _0x5a8ea4 = _0x5d51e0[_0x111251(0x2f9)](this);
                    _0x5d51e0[_0x111251(0x33a)](_0x5a8ea4, 0x1);
                }
                _0x259a2d && (_0x259a2d[_0x111251(0x5ac)]['push'](this), _0x259a2d && this[_0x111251(0x5ad)]()), this[_0x111251(0x30f)] = _0x259a2d;
            }
        }
    }
    _0x3a8938[_0x6027f5(0x490)] = new _0x3697cd(), _0x3a8938[_0x6027f5(0x597)] = 0xb4 / Math['PI'];
    class _0x486daf {
        constructor() {
            var _0x27cb73 = _0x6027f5;
            this[_0x27cb73(0x30f)] = null, this[_0x27cb73(0x2b7)] = null, this[_0x27cb73(0x673)] = 0x0, this['_children'] = [], this[_0x27cb73(0x3d6)] = new _0x3a8938(this);
        }
        ['addChild'](_0x26052f) {
            var _0x3c3a6f = _0x6027f5;
            _0x26052f[_0x3c3a6f(0x30f)] = this, _0x26052f['transform'][_0x3c3a6f(0x674)](this[_0x3c3a6f(0x3d6)]), this['_children']['push'](_0x26052f);
        }
        [_0x6027f5(0x675)](_0x24d59a) {
            var _0x351113 = _0x6027f5, _0x2c563b = this['_children'][_0x351113(0x2f9)](_0x24d59a);
            -0x1 !== _0x2c563b && this[_0x351113(0x5ac)]['splice'](_0x2c563b, 0x1);
        }
        [_0x6027f5(0x38c)](_0x32b8f8) {
            var _0x3e4a37 = _0x6027f5;
            for (var _0x43274c = 0x0, _0x5ed238 = this[_0x3e4a37(0x5ac)][_0x3e4a37(0x205)]; _0x43274c < _0x5ed238; _0x43274c++) {
                var _0x145c8b = this[_0x3e4a37(0x5ac)][_0x43274c];
                if (_0x145c8b[_0x3e4a37(0x2b7)] === _0x32b8f8)
                    return _0x145c8b;
            }
            return null;
        }
        [_0x6027f5(0x676)](_0xce1d68) {
            var _0x14be5e = _0x6027f5;
            return this[_0x14be5e(0x5ac)][_0xce1d68];
        }
        [_0x6027f5(0x677)]() {
            var _0x3cd555 = _0x6027f5;
            return this[_0x3cd555(0x5ac)]['length'];
        }
        [_0x6027f5(0x1fc)](_0x91de31) {
            var _0x249b9d = _0x6027f5, _0x3fcbdd = _0x91de31;
            _0x3fcbdd[_0x249b9d(0x2b7)] = this[_0x249b9d(0x2b7)];
            for (var _0x4fec54 = 0x0, _0x5bbb90 = this['_children']['length']; _0x4fec54 < _0x5bbb90; _0x4fec54++) {
                var _0x3c63cc = this[_0x249b9d(0x5ac)][_0x4fec54], _0x2a946a = _0x3c63cc[_0x249b9d(0x1fd)]();
                _0x3fcbdd[_0x249b9d(0x5bf)](_0x2a946a);
                var _0x5c96e8 = _0x3c63cc['transform'], _0x3fa7b7 = _0x2a946a[_0x249b9d(0x3d6)], _0x3446ee = _0x3fa7b7['localPosition'], _0x32a0de = _0x3fa7b7['localRotation'], _0x4faf70 = _0x3fa7b7[_0x249b9d(0x3a5)];
                _0x5c96e8['localPosition'][_0x249b9d(0x1fc)](_0x3446ee), _0x5c96e8[_0x249b9d(0x3a4)][_0x249b9d(0x1fc)](_0x32a0de), _0x5c96e8[_0x249b9d(0x3a5)][_0x249b9d(0x1fc)](_0x4faf70), _0x3fa7b7[_0x249b9d(0x3a3)] = _0x3446ee, _0x3fa7b7[_0x249b9d(0x3a4)] = _0x32a0de, _0x3fa7b7['localScale'] = _0x4faf70;
            }
        }
        [_0x6027f5(0x1fd)]() {
            var _0x8db488 = _0x6027f5, _0xfb0f74 = new _0x486daf();
            return this[_0x8db488(0x1fc)](_0xfb0f74), _0xfb0f74;
        }
        [_0x6027f5(0x678)](_0x2e9c88, _0x1ffe44, _0x253947, _0x347e35, _0x12238b, _0x7ec9d5, _0x22b8aa) {
            var _0x1bea20 = _0x6027f5, _0x354530 = _0x22b8aa[_0x1bea20(0x679)];
            _0x12238b[_0x354530] = _0x7ec9d5;
            var _0x23a830 = new _0x486daf();
            return _0x23a830[_0x1bea20(0x673)] = _0x354530, this[_0x1bea20(0x67a)](_0x23a830, _0x2e9c88, _0x1ffe44, _0x253947, _0x347e35, _0x12238b, _0x354530, _0x22b8aa), _0x23a830;
        }
        ['_cloneToNative'](_0x6b5019, _0x40fc77, _0x2f665d, _0x2bf3b0, _0x12d7d2, _0x567bc3, _0x3e20ad, _0x134835) {
            var _0x543826 = _0x6027f5, _0x128768 = _0x6b5019;
            _0x128768[_0x543826(0x2b7)] = this[_0x543826(0x2b7)];
            for (var _0x8b02f6 = 0x0, _0x1b6141 = this[_0x543826(0x5ac)][_0x543826(0x205)]; _0x8b02f6 < _0x1b6141; _0x8b02f6++) {
                var _0x207781 = this[_0x543826(0x5ac)][_0x8b02f6];
                _0x134835[_0x543826(0x679)]++;
                var _0x5ca649 = _0x207781[_0x543826(0x678)](_0x40fc77, _0x2f665d, _0x2bf3b0, _0x12d7d2, _0x567bc3, _0x3e20ad, _0x134835);
                _0x128768[_0x543826(0x5bf)](_0x5ca649);
                var _0x450395 = _0x207781[_0x543826(0x3d6)], _0x4f2b4c = _0x5ca649['transform'], _0x2814c1 = _0x4f2b4c[_0x543826(0x3a3)], _0x1e5753 = _0x4f2b4c[_0x543826(0x3a4)], _0x5ee6c8 = _0x4f2b4c['localScale'];
                _0x450395['localPosition']['cloneTo'](_0x2814c1), _0x450395[_0x543826(0x3a4)][_0x543826(0x1fc)](_0x1e5753), _0x450395[_0x543826(0x3a5)]['cloneTo'](_0x5ee6c8), _0x4f2b4c[_0x543826(0x3a3)] = _0x2814c1, _0x4f2b4c[_0x543826(0x3a4)] = _0x1e5753, _0x4f2b4c[_0x543826(0x3a5)] = _0x5ee6c8;
            }
        }
    }
    class _0x43545b extends _0x387b86[_0x6027f5(0x324)] {
        constructor() {
            var _0x44e9fd = _0x6027f5;
            super(), this[_0x44e9fd(0x67b)] = 0x0, this[_0x44e9fd(0x679)] = 0x0;
        }
        static [_0x6027f5(0x67c)](_0x2e4ec0, _0x27f71d = null, _0x50e9d0 = null) {
            var _0x165a7d = _0x6027f5, _0x17e348 = new _0x43545b();
            if (_0x17e348[_0x165a7d(0x394)] = new _0x486daf(), _0x2e4ec0['version']) {
                var _0x6b766a = _0x2e4ec0[_0x165a7d(0x67d)];
                _0x6b766a && _0x17e348[_0x165a7d(0x67e)](_0x6b766a, _0x17e348[_0x165a7d(0x394)]);
            }
            return _0x17e348;
        }
        static [_0x6027f5(0x5c0)](_0x4e1830, _0x3c7a87) {
            var _0x4666e2 = _0x6027f5;
            _0x387b86[_0x4666e2(0x328)][_0x4666e2(0x329)][_0x4666e2(0x32a)](_0x4e1830, _0x3c7a87, null, _0x43545b[_0x4666e2(0x67f)]);
        }
        [_0x6027f5(0x680)](_0xcb2245, _0x405edf) {
            var _0x92748e = _0x6027f5;
            _0x405edf[_0x92748e(0x393)][_0xcb2245[_0x92748e(0x2b7)]] = _0xcb2245;
            for (var _0x207f26 = 0x0, _0x59eedd = _0xcb2245[_0x92748e(0x677)](); _0x207f26 < _0x59eedd; _0x207f26++)
                this['_initCloneToAnimator'](_0xcb2245['getChildByIndex'](_0x207f26), _0x405edf);
        }
        [_0x6027f5(0x67e)](_0x4e6c35, _0x42403c) {
            var _0x3c5c0a = _0x6027f5, _0x35f0c6 = _0x4e6c35[_0x3c5c0a(0x681)]['name'];
            _0x42403c[_0x3c5c0a(0x2b7)] = _0x35f0c6;
            var _0x4bf3ae = _0x4e6c35[_0x3c5c0a(0x681)], _0x4447b0 = _0x42403c['transform'], _0x503514 = _0x4447b0[_0x3c5c0a(0x3a3)], _0x5f0f06 = _0x4447b0[_0x3c5c0a(0x3a4)], _0x2744cd = _0x4447b0['localScale'];
            _0x503514[_0x3c5c0a(0x1fa)](_0x4bf3ae[_0x3c5c0a(0x27d)]), _0x5f0f06[_0x3c5c0a(0x1fa)](_0x4bf3ae['rotation']), _0x2744cd['fromArray'](_0x4bf3ae[_0x3c5c0a(0x1f9)]), _0x4447b0[_0x3c5c0a(0x3a3)] = _0x503514, _0x4447b0[_0x3c5c0a(0x3a4)] = _0x5f0f06, _0x4447b0['localScale'] = _0x2744cd;
            for (var _0x53533f = _0x4e6c35[_0x3c5c0a(0x682)], _0x453ba5 = 0x0, _0x57bc98 = _0x53533f[_0x3c5c0a(0x205)]; _0x453ba5 < _0x57bc98; _0x453ba5++) {
                var _0x4b82eb = _0x53533f[_0x453ba5], _0x760c22 = new _0x486daf();
                _0x42403c[_0x3c5c0a(0x5bf)](_0x760c22), this[_0x3c5c0a(0x67e)](_0x4b82eb, _0x760c22);
            }
        }
        [_0x6027f5(0x683)](_0x4fa174) {
            var _0x2fe438 = _0x6027f5, _0x512719;
            _0x512719 = this['_rootNode'][_0x2fe438(0x1fd)]();
            var _0x16dade = this[_0x2fe438(0x394)][_0x2fe438(0x3d6)], _0x180d84 = _0x512719[_0x2fe438(0x3d6)], _0x3e5b94 = _0x180d84[_0x2fe438(0x3a3)], _0x462ed3 = _0x180d84[_0x2fe438(0x3a4)], _0x4e2497 = _0x180d84['localScale'];
            _0x16dade['localPosition']['cloneTo'](_0x3e5b94), _0x16dade['localRotation'][_0x2fe438(0x1fc)](_0x462ed3), _0x16dade[_0x2fe438(0x3a5)][_0x2fe438(0x1fc)](_0x4e2497), _0x180d84[_0x2fe438(0x3a3)] = _0x3e5b94, _0x180d84[_0x2fe438(0x3a4)] = _0x462ed3, _0x180d84[_0x2fe438(0x3a5)] = _0x4e2497, _0x4fa174[_0x2fe438(0x393)] = {}, this[_0x2fe438(0x680)](_0x512719, _0x4fa174);
        }
        ['cloneTo'](_0x327e6d) {
            var _0x5fe316 = _0x6027f5, _0x3b880e = _0x327e6d, _0x35038c = this[_0x5fe316(0x394)][_0x5fe316(0x1fd)]();
            _0x3b880e[_0x5fe316(0x394)] = _0x35038c;
        }
        [_0x6027f5(0x1fd)]() {
            var _0x4b8ca0 = _0x6027f5, _0x4e8534 = new _0x43545b();
            return this[_0x4b8ca0(0x1fc)](_0x4e8534), _0x4e8534;
        }
        [_0x6027f5(0x684)](_0x1889f7) {
            var _0x5d7f34 = _0x6027f5, _0x86bb00 = new Float32Array(0x3 * this[_0x5d7f34(0x67b)]), _0x2ce88f = new Float32Array(0x4 * this[_0x5d7f34(0x67b)]), _0x3f6e78 = new Float32Array(0x3 * this[_0x5d7f34(0x67b)]), _0x5bc200 = new Float32Array(0x10 * this[_0x5d7f34(0x67b)]), _0x4d35e0 = new Int16Array(this[_0x5d7f34(0x67b)]);
            _0x1889f7[_0x5d7f34(0x685)] = _0x86bb00, _0x1889f7[_0x5d7f34(0x686)] = _0x2ce88f, _0x1889f7[_0x5d7f34(0x687)] = _0x3f6e78, _0x1889f7[_0x5d7f34(0x688)] = _0x5bc200, _0x1889f7[_0x5d7f34(0x689)] = _0x4d35e0, this['_nativeCurCloneCount'] = 0x0;
            var _0x38158b = this[_0x5d7f34(0x394)]['_cloneNative'](_0x86bb00, _0x2ce88f, _0x3f6e78, _0x5bc200, _0x4d35e0, -0x1, this), _0x3478cf = this[_0x5d7f34(0x394)]['transform'], _0x3fc903 = _0x38158b[_0x5d7f34(0x3d6)], _0x30b89e = _0x3fc903['localPosition'], _0x1c5e5d = _0x3fc903[_0x5d7f34(0x3a4)], _0x43a75b = _0x3fc903[_0x5d7f34(0x3a5)];
            _0x3478cf['localPosition'][_0x5d7f34(0x1fc)](_0x30b89e), _0x3478cf[_0x5d7f34(0x3a4)][_0x5d7f34(0x1fc)](_0x1c5e5d), _0x3478cf['localScale'][_0x5d7f34(0x1fc)](_0x43a75b), _0x3fc903[_0x5d7f34(0x3a3)] = _0x30b89e, _0x3fc903['localRotation'] = _0x1c5e5d, _0x3fc903['localScale'] = _0x43a75b, _0x1889f7['_avatarNodeMap'] = {}, this[_0x5d7f34(0x680)](_0x38158b, _0x1889f7);
        }
    }
    _0x43545b[_0x6027f5(0x67f)] = 'AVATAR';
    class _0xe2444c extends _0x387b86[_0x6027f5(0x324)] {
        constructor() {
            var _0x1dbc8d = _0x6027f5;
            super(), this[_0x1dbc8d(0x4e2)] = new _0x3985fd(this), this[_0x1dbc8d(0x68a)] = _0xe2444c[_0x1dbc8d(0x68b)], this[_0x1dbc8d(0x68c)] = !0x1;
        }
        static [_0x6027f5(0x5c0)](_0x157761, _0x5751cd) {
            var _0xa82240 = _0x6027f5;
            _0x387b86[_0xa82240(0x68d)][_0xa82240(0x329)][_0xa82240(0x32a)](_0x157761, _0x5751cd, null, _0xe2444c['MATERIAL']);
        }
        static ['__initDefine__']() {
            var _0x28a972 = _0x6027f5;
            _0xe2444c[_0x28a972(0x68e)] = _0x3a9f31['getDefineByName'](_0x28a972(0x68f));
        }
        static [_0x6027f5(0x67c)](_0x44e174, _0x4ca140 = null, _0x43d7ae = null) {
            var _0xabae6c = _0x6027f5, _0x58233b, _0x2a28bc = _0x44e174, _0x58c73d = _0x2a28bc['props'], _0x45fcc5 = _0x58c73d['type'], _0x1342aa = _0x387b86['ClassUtils'][_0xabae6c(0x690)](_0x45fcc5);
            switch (_0x1342aa ? _0x58233b = new _0x1342aa() : (_0x58233b = new _0xe2444c())['setShaderName'](_0x45fcc5), _0x2a28bc['version']) {
            case 'LAYAMATERIAL:01':
            case _0xabae6c(0x691):
                for (var _0x1323bc in _0x58c73d)
                    switch (_0x1323bc) {
                    case _0xabae6c(0x2cc):
                        break;
                    case _0xabae6c(0x692):
                        var _0x2ee651 = _0x58c73d[_0x1323bc];
                        for (_0x429ac8 = 0x0, _0x2bca0b = _0x2ee651['length']; _0x429ac8 < _0x2bca0b; _0x429ac8++) {
                            var _0x3cec49 = _0x2ee651[_0x429ac8];
                            switch ((_0x19adbf = _0x3cec49[_0xabae6c(0x2a1)])[_0xabae6c(0x205)]) {
                            case 0x2:
                                _0x58233b[_0x3cec49['name']] = new _0x30a72c(_0x19adbf[0x0], _0x19adbf[0x1]);
                                break;
                            case 0x3:
                                _0x58233b[_0x3cec49[_0xabae6c(0x2b7)]] = new _0x3697cd(_0x19adbf[0x0], _0x19adbf[0x1], _0x19adbf[0x2]);
                                break;
                            case 0x4:
                                _0x58233b[_0x3cec49['name']] = new _0x5b8e4e(_0x19adbf[0x0], _0x19adbf[0x1], _0x19adbf[0x2], _0x19adbf[0x3]);
                                break;
                            default:
                                throw new Error(_0xabae6c(0x693));
                            }
                        }
                        break;
                    case 'textures':
                        for (_0x429ac8 = 0x0, _0x2bca0b = (_0x3aa96d = _0x58c73d[_0x1323bc])[_0xabae6c(0x205)]; _0x429ac8 < _0x2bca0b; _0x429ac8++) {
                            (_0x27f36f = (_0x520049 = _0x3aa96d[_0x429ac8])[_0xabae6c(0x3b8)]) && (_0x58233b[_0x520049[_0xabae6c(0x2b7)]] = _0x387b86['Loader'][_0xabae6c(0x3b7)](_0x27f36f));
                        }
                        break;
                    case _0xabae6c(0x694):
                        for (_0x429ac8 = 0x0, _0x2bca0b = (_0x4080a8 = _0x58c73d[_0x1323bc])['length']; _0x429ac8 < _0x2bca0b; _0x429ac8++) {
                            var _0x449ef2 = _0x3a9f31[_0xabae6c(0x510)](_0x4080a8[_0x429ac8]);
                            _0x58233b[_0xabae6c(0x4e2)][_0xabae6c(0x49a)](_0x449ef2);
                        }
                        break;
                    case _0xabae6c(0x695):
                        var _0x5b1a14 = _0x58c73d[_0x1323bc][0x0], _0x136fe2 = _0x58233b;
                        _0x136fe2[_0xabae6c(0x696)] = _0x5b1a14[_0xabae6c(0x696)], _0x136fe2[_0xabae6c(0x697)] = _0x5b1a14['cull'], _0x136fe2[_0xabae6c(0x698)] = _0x5b1a14['depthTest'], _0x136fe2[_0xabae6c(0x699)] = _0x5b1a14['depthWrite'], _0x136fe2['blendSrc'] = _0x5b1a14['srcBlend'], _0x136fe2['blendDst'] = _0x5b1a14[_0xabae6c(0x69a)];
                        break;
                    case _0xabae6c(0x697):
                        _0x58233b['cull'] = _0x58c73d[_0x1323bc];
                        break;
                    case 'blend':
                        _0x58233b[_0xabae6c(0x696)] = _0x58c73d[_0x1323bc];
                        break;
                    case _0xabae6c(0x699):
                        _0x58233b[_0xabae6c(0x699)] = _0x58c73d[_0x1323bc];
                        break;
                    case 'srcBlend':
                        _0x58233b[_0xabae6c(0x69b)] = _0x58c73d[_0x1323bc];
                        break;
                    case _0xabae6c(0x69a):
                        _0x58233b[_0xabae6c(0x69c)] = _0x58c73d[_0x1323bc];
                        break;
                    default:
                        _0x58233b[_0x1323bc] = _0x58c73d[_0x1323bc];
                    }
                break;
            case _0xabae6c(0x69d):
                var _0x429ac8, _0x2bca0b;
                for (var _0x1323bc in _0x58c73d)
                    switch (_0x1323bc) {
                    case _0xabae6c(0x2cc):
                    case 'name':
                        break;
                    case 'defines':
                        var _0x4080a8;
                        for (_0x429ac8 = 0x0, _0x2bca0b = (_0x4080a8 = _0x58c73d[_0x1323bc])[_0xabae6c(0x205)]; _0x429ac8 < _0x2bca0b; _0x429ac8++) {
                            _0x449ef2 = _0x3a9f31[_0xabae6c(0x510)](_0x4080a8[_0x429ac8]), _0x58233b['_shaderValues'][_0xabae6c(0x49a)](_0x449ef2);
                        }
                        break;
                    case _0xabae6c(0x69e):
                        var _0x3aa96d;
                        for (_0x429ac8 = 0x0, _0x2bca0b = (_0x3aa96d = _0x58c73d[_0x1323bc])[_0xabae6c(0x205)]; _0x429ac8 < _0x2bca0b; _0x429ac8++) {
                            var _0x520049, _0x27f36f;
                            (_0x27f36f = (_0x520049 = _0x3aa96d[_0x429ac8])['path']) && _0x58233b[_0xabae6c(0x4e2)][_0xabae6c(0x4ac)](_0x3a9f31[_0xabae6c(0x553)](_0x520049[_0xabae6c(0x2b7)]), _0x387b86[_0xabae6c(0x3bd)][_0xabae6c(0x3b7)](_0x27f36f));
                        }
                        break;
                    default:
                        var _0x19adbf, _0xa9acef = _0x58c73d[_0x1323bc], _0x2a7931 = _0x3a9f31[_0xabae6c(0x553)](_0x1323bc);
                        if (_0xa9acef[_0xabae6c(0x205)])
                            switch ((_0x19adbf = _0xa9acef)[_0xabae6c(0x205)]) {
                            case 0x2:
                                _0x58233b[_0xabae6c(0x4e2)][_0xabae6c(0x4a5)](_0x2a7931, new _0x30a72c(_0x19adbf[0x0], _0x19adbf[0x1]));
                                break;
                            case 0x3:
                                _0x58233b['_shaderValues'][_0xabae6c(0x57a)](_0x2a7931, new _0x3697cd(_0x19adbf[0x0], _0x19adbf[0x1], _0x19adbf[0x2]));
                                break;
                            case 0x4:
                                _0x58233b[_0xabae6c(0x4e2)][_0xabae6c(0x4a8)](_0x2a7931, new _0x5b8e4e(_0x19adbf[0x0], _0x19adbf[0x1], _0x19adbf[0x2], _0x19adbf[0x3]));
                                break;
                            default:
                                throw new Error(_0xabae6c(0x693));
                            }
                        else
                            _0x58233b[_0xabae6c(0x4e2)][_0xabae6c(0x4a3)](_0x2a7931, _0x58c73d[_0x1323bc]);
                    }
                break;
            default:
                throw new Error(_0xabae6c(0x69f));
            }
            return _0x58233b;
        }
        get [_0x6027f5(0x644)]() {
            var _0x51ddc3 = _0x6027f5;
            return this[_0x51ddc3(0x4e2)];
        }
        get ['alphaTestValue']() {
            var _0x358ca6 = _0x6027f5;
            return this[_0x358ca6(0x4e2)]['getNumber'](_0xe2444c[_0x358ca6(0x6a0)]);
        }
        set [_0x6027f5(0x6a1)](_0x1a7c62) {
            var _0xdea1c3 = _0x6027f5;
            this[_0xdea1c3(0x4e2)][_0xdea1c3(0x4a3)](_0xe2444c['ALPHATESTVALUE'], _0x1a7c62);
        }
        get [_0x6027f5(0x68c)]() {
            var _0x39d5b8 = _0x6027f5;
            return this[_0x39d5b8(0x644)][_0x39d5b8(0x49c)](_0xe2444c['SHADERDEFINE_ALPHATEST']);
        }
        set [_0x6027f5(0x68c)](_0x1cc996) {
            var _0x47b8a0 = _0x6027f5;
            _0x1cc996 ? this['_shaderValues'][_0x47b8a0(0x49a)](_0xe2444c['SHADERDEFINE_ALPHATEST']) : this[_0x47b8a0(0x4e2)][_0x47b8a0(0x49b)](_0xe2444c[_0x47b8a0(0x68e)]);
        }
        get [_0x6027f5(0x699)]() {
            var _0x4b9917 = _0x6027f5;
            return this[_0x4b9917(0x4e2)][_0x4b9917(0x49e)](_0xe2444c['DEPTH_WRITE']);
        }
        set [_0x6027f5(0x699)](_0x58ef6b) {
            var _0xa29f85 = _0x6027f5;
            this[_0xa29f85(0x4e2)]['setBool'](_0xe2444c['DEPTH_WRITE'], _0x58ef6b);
        }
        get [_0x6027f5(0x697)]() {
            return this['_shaderValues']['getInt'](_0xe2444c['CULL']);
        }
        set [_0x6027f5(0x697)](_0xf2aa9a) {
            var _0x22b711 = _0x6027f5;
            this[_0x22b711(0x4e2)][_0x22b711(0x4a1)](_0xe2444c[_0x22b711(0x6a2)], _0xf2aa9a);
        }
        get [_0x6027f5(0x696)]() {
            var _0x3f36ab = _0x6027f5;
            return this[_0x3f36ab(0x4e2)]['getInt'](_0xe2444c[_0x3f36ab(0x6a3)]);
        }
        set [_0x6027f5(0x696)](_0x198ff4) {
            var _0x2d4864 = _0x6027f5;
            this[_0x2d4864(0x4e2)][_0x2d4864(0x4a1)](_0xe2444c[_0x2d4864(0x6a3)], _0x198ff4);
        }
        get ['blendSrc']() {
            var _0x280e17 = _0x6027f5;
            return this[_0x280e17(0x4e2)]['getInt'](_0xe2444c[_0x280e17(0x6a4)]);
        }
        set [_0x6027f5(0x69b)](_0x1cb1f0) {
            var _0x4df96e = _0x6027f5;
            this[_0x4df96e(0x4e2)][_0x4df96e(0x4a1)](_0xe2444c[_0x4df96e(0x6a4)], _0x1cb1f0);
        }
        get [_0x6027f5(0x69c)]() {
            var _0x27bad1 = _0x6027f5;
            return this['_shaderValues'][_0x27bad1(0x4a0)](_0xe2444c['BLEND_DST']);
        }
        set ['blendDst'](_0x57e926) {
            var _0x283115 = _0x6027f5;
            this['_shaderValues'][_0x283115(0x4a1)](_0xe2444c[_0x283115(0x6a5)], _0x57e926);
        }
        get [_0x6027f5(0x698)]() {
            var _0x4a996d = _0x6027f5;
            return this[_0x4a996d(0x4e2)][_0x4a996d(0x4a0)](_0xe2444c[_0x4a996d(0x6a6)]);
        }
        set [_0x6027f5(0x698)](_0x33c341) {
            var _0x57c528 = _0x6027f5;
            this[_0x57c528(0x4e2)][_0x57c528(0x4a1)](_0xe2444c[_0x57c528(0x6a6)], _0x33c341);
        }
        get ['MaterialProperty']() {
            var _0x493678 = _0x6027f5;
            let _0x1537c7 = {};
            var _0x206e64 = this[_0x493678(0x4e2)]['getData']();
            for (let _0x5aea62 in _0x206e64)
                _0x1537c7[_0x3a9f31[_0x493678(0x529)][parseInt(_0x5aea62)]] = _0x206e64[_0x5aea62];
            return _0x1537c7;
        }
        get [_0x6027f5(0x6a7)]() {
            var _0x2532df = _0x6027f5;
            let _0x2ba001 = new Array(), _0x26e644 = this[_0x2532df(0x4e2)][_0x2532df(0x498)];
            return _0x3a9f31[_0x2532df(0x525)](_0x26e644, _0x2ba001), _0x2ba001;
        }
        [_0x6027f5(0x6a8)]() {
            var _0x56581a = _0x6027f5, _0x3f743d = this[_0x56581a(0x4e2)][_0x56581a(0x319)]();
            for (var _0x3990f5 in _0x3f743d) {
                var _0xc48c5f = _0x3f743d[_0x3990f5];
                _0xc48c5f && _0xc48c5f instanceof _0x387b86['BaseTexture'] && _0xc48c5f[_0x56581a(0x35c)]();
            }
        }
        [_0x6027f5(0x440)]() {
            var _0x558838 = _0x6027f5;
            this[_0x558838(0x347)] > 0x0 && this[_0x558838(0x6a8)](), this[_0x558838(0x4e2)] = null;
        }
        ['_addReference'](_0x2a6706 = 0x1) {
            var _0x5f48d6 = _0x6027f5;
            super['_addReference'](_0x2a6706);
            var _0x460106 = this['_shaderValues'][_0x5f48d6(0x319)]();
            for (var _0x303275 in _0x460106) {
                var _0xaaae0e = _0x460106[_0x303275];
                _0xaaae0e && _0xaaae0e instanceof _0x387b86['BaseTexture'] && _0xaaae0e[_0x5f48d6(0x35f)]();
            }
        }
        ['_removeReference'](_0x21dc8e = 0x1) {
            var _0x14cc61 = _0x6027f5;
            super[_0x14cc61(0x35c)](_0x21dc8e), this[_0x14cc61(0x6a8)]();
        }
        [_0x6027f5(0x6a9)](_0x1e73d7) {
            var _0x31d7b8 = _0x6027f5;
            if (this[_0x31d7b8(0x509)] = _0x3a9f31[_0x31d7b8(0x52e)](_0x1e73d7), !this[_0x31d7b8(0x509)])
                throw new Error(_0x31d7b8(0x6aa));
        }
        ['setShaderPropertyValue'](_0x541779, _0xa7e647) {
            var _0x289290 = _0x6027f5;
            this[_0x289290(0x644)][_0x289290(0x4af)](_0x3a9f31[_0x289290(0x553)](_0x541779), _0xa7e647);
        }
        [_0x6027f5(0x6ab)](_0x30ef41) {
            var _0x442ff4 = _0x6027f5;
            return this['shaderData'][_0x442ff4(0x4b0)](_0x3a9f31[_0x442ff4(0x553)](_0x30ef41));
        }
        [_0x6027f5(0x1fc)](_0x5811a4) {
            var _0x519d85 = _0x6027f5, _0x4e2446 = _0x5811a4;
            _0x4e2446['name'] = this['name'], _0x4e2446[_0x519d85(0x68a)] = this[_0x519d85(0x68a)], this[_0x519d85(0x4e2)][_0x519d85(0x1fc)](_0x4e2446[_0x519d85(0x4e2)]);
        }
        ['clone']() {
            var _0x52eb9b = new _0xe2444c();
            return this['cloneTo'](_0x52eb9b), _0x52eb9b;
        }
        get ['_defineDatas']() {
            var _0x492306 = _0x6027f5;
            return this['_shaderValues'][_0x492306(0x498)];
        }
    }
    _0xe2444c[_0x6027f5(0x6ac)] = _0x6027f5(0x6ac), _0xe2444c['RENDERQUEUE_OPAQUE'] = 0x7d0, _0xe2444c['RENDERQUEUE_ALPHATEST'] = 0x992, _0xe2444c[_0x6027f5(0x6ad)] = 0xbb8, _0xe2444c[_0x6027f5(0x6a0)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x6ae)), _0xe2444c[_0x6027f5(0x6a2)] = _0x3a9f31[_0x6027f5(0x553)]('s_Cull'), _0xe2444c[_0x6027f5(0x6a3)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x6af)), _0xe2444c[_0x6027f5(0x6a4)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x6b0)), _0xe2444c['BLEND_DST'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x6b1)), _0xe2444c[_0x6027f5(0x6a6)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x6b2)), _0xe2444c[_0x6027f5(0x6b3)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x6b4));
    class _0x1ed784 {
        static [_0x6027f5(0x5c0)](_0xe0c8e9, _0x46a264) {
            var _0x33532b = _0x6027f5;
            _0x387b86['Laya'][_0x33532b(0x329)][_0x33532b(0x32a)](_0xe0c8e9, _0x46a264, null, _0xe2444c['MATERIAL']);
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x4857a5 = _0x6027f5;
            _0x1ed784[_0x4857a5(0x68e)] = _0xe2444c[_0x4857a5(0x68e)];
        }
    }
    _0x1ed784[_0x6027f5(0x6ac)] = _0x6027f5(0x6ac), _0x1ed784[_0x6027f5(0x68b)] = 0x7d0, _0x1ed784[_0x6027f5(0x6b6)] = 0x992, _0x1ed784[_0x6027f5(0x6ad)] = 0xbb8, _0x1ed784[_0x6027f5(0x6a0)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x6ae));
    class _0x47a097 {
        constructor() {
            var _0x576d31 = _0x6027f5;
            this[_0x576d31(0x697)] = _0x47a097[_0x576d31(0x6b7)], this[_0x576d31(0x696)] = _0x47a097[_0x576d31(0x6b8)], this[_0x576d31(0x6b9)] = _0x47a097[_0x576d31(0x6ba)], this[_0x576d31(0x69a)] = _0x47a097['BLENDPARAM_ZERO'], this[_0x576d31(0x6bb)] = _0x47a097[_0x576d31(0x6ba)], this['dstBlendRGB'] = _0x47a097['BLENDPARAM_ZERO'], this[_0x576d31(0x6bc)] = _0x47a097[_0x576d31(0x6ba)], this[_0x576d31(0x6bd)] = _0x47a097[_0x576d31(0x6be)], this[_0x576d31(0x6bf)] = new _0x5b8e4e(0x1, 0x1, 0x1, 0x1), this[_0x576d31(0x6c0)] = _0x47a097['BLENDEQUATION_ADD'], this[_0x576d31(0x6c1)] = _0x47a097['BLENDEQUATION_ADD'], this[_0x576d31(0x6c2)] = _0x47a097[_0x576d31(0x6c3)], this[_0x576d31(0x698)] = _0x47a097[_0x576d31(0x6c4)], this[_0x576d31(0x699)] = !0x0;
        }
        ['cloneTo'](_0x4b20db) {
            var _0x3cfad7 = _0x6027f5, _0x3857f1 = _0x4b20db;
            _0x3857f1[_0x3cfad7(0x697)] = this[_0x3cfad7(0x697)], _0x3857f1[_0x3cfad7(0x696)] = this[_0x3cfad7(0x696)], _0x3857f1['srcBlend'] = this[_0x3cfad7(0x6b9)], _0x3857f1['dstBlend'] = this[_0x3cfad7(0x69a)], _0x3857f1[_0x3cfad7(0x6bb)] = this[_0x3cfad7(0x6bb)], _0x3857f1[_0x3cfad7(0x6c5)] = this[_0x3cfad7(0x6c5)], _0x3857f1['srcBlendAlpha'] = this[_0x3cfad7(0x6bc)], _0x3857f1[_0x3cfad7(0x6bd)] = this[_0x3cfad7(0x6bd)], this[_0x3cfad7(0x6bf)][_0x3cfad7(0x1fc)](_0x3857f1['blendConstColor']), _0x3857f1[_0x3cfad7(0x6c0)] = this[_0x3cfad7(0x6c0)], _0x3857f1[_0x3cfad7(0x6c1)] = this[_0x3cfad7(0x6c1)], _0x3857f1['blendEquationAlpha'] = this[_0x3cfad7(0x6c2)], _0x3857f1[_0x3cfad7(0x698)] = this[_0x3cfad7(0x698)], _0x3857f1[_0x3cfad7(0x699)] = this[_0x3cfad7(0x699)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x4516f0 = _0x6027f5, _0x1d9288 = new _0x47a097();
            return this[_0x4516f0(0x1fc)](_0x1d9288), _0x1d9288;
        }
    }
    _0x47a097[_0x6027f5(0x6c6)] = 0x0, _0x47a097['CULL_FRONT'] = 0x1, _0x47a097['CULL_BACK'] = 0x2, _0x47a097['BLEND_DISABLE'] = 0x0, _0x47a097[_0x6027f5(0x6c7)] = 0x1, _0x47a097['BLEND_ENABLE_SEPERATE'] = 0x2, _0x47a097[_0x6027f5(0x6be)] = 0x0, _0x47a097[_0x6027f5(0x6ba)] = 0x1, _0x47a097[_0x6027f5(0x6c8)] = 0x300, _0x47a097[_0x6027f5(0x6c9)] = 0x301, _0x47a097[_0x6027f5(0x6ca)] = 0x306, _0x47a097[_0x6027f5(0x6cb)] = 0x307, _0x47a097[_0x6027f5(0x6cc)] = 0x302, _0x47a097['BLENDPARAM_ONE_MINUS_SRC_ALPHA'] = 0x303, _0x47a097[_0x6027f5(0x6cd)] = 0x304, _0x47a097['BLENDPARAM_ONE_MINUS_DST_ALPHA'] = 0x305, _0x47a097[_0x6027f5(0x6ce)] = 0x308, _0x47a097[_0x6027f5(0x6c3)] = 0x8006, _0x47a097[_0x6027f5(0x6cf)] = 0x800a, _0x47a097['BLENDEQUATION_REVERSE_SUBTRACT'] = 0x800b, _0x47a097['DEPTHTEST_OFF'] = 0x0, _0x47a097[_0x6027f5(0x6d0)] = 0x200, _0x47a097['DEPTHTEST_LESS'] = 0x201, _0x47a097[_0x6027f5(0x6d1)] = 0x202, _0x47a097[_0x6027f5(0x6c4)] = 0x203, _0x47a097[_0x6027f5(0x6d2)] = 0x204, _0x47a097[_0x6027f5(0x6d3)] = 0x205, _0x47a097[_0x6027f5(0x6d4)] = 0x206, _0x47a097['DEPTHTEST_ALWAYS'] = 0x207;
    class _0x3c2eb1 extends _0xe2444c {
        constructor() {
            var _0x581aba = _0x6027f5;
            super(), this[_0x581aba(0x6a9)](_0x581aba(0x6d5)), this[_0x581aba(0x6d6)] = 0x1;
            var _0x4289eb = this['_shaderValues'];
            _0x4289eb['setVector'](_0x3c2eb1[_0x581aba(0x6d7)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), _0x4289eb['setVector'](_0x3c2eb1[_0x581aba(0x6d8)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), _0x4289eb[_0x581aba(0x4a3)](_0x3c2eb1[_0x581aba(0x6d9)], 0.078125), _0x4289eb['setNumber'](_0xe2444c[_0x581aba(0x6a0)], 0.5), _0x4289eb[_0x581aba(0x4a8)](_0x3c2eb1['TILINGOFFSET'], new _0x5b8e4e(0x1, 0x1, 0x0, 0x0)), this[_0x581aba(0x6d6)] = 0x1, this['renderMode'] = _0x3c2eb1['RENDERMODE_OPAQUE'];
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x339609 = _0x6027f5;
            _0x3c2eb1[_0x339609(0x6da)] = _0x3a9f31[_0x339609(0x510)]('DIFFUSEMAP'), _0x3c2eb1[_0x339609(0x6db)] = _0x3a9f31[_0x339609(0x510)](_0x339609(0x6dc)), _0x3c2eb1[_0x339609(0x6dd)] = _0x3a9f31[_0x339609(0x510)](_0x339609(0x6de)), _0x3c2eb1[_0x339609(0x6df)] = _0x3a9f31['getDefineByName'](_0x339609(0x6e0)), _0x3c2eb1[_0x339609(0x6e1)] = _0x3a9f31[_0x339609(0x510)](_0x339609(0x6e2)), _0x3c2eb1[_0x339609(0x6e3)] = _0x3a9f31[_0x339609(0x510)]('THICKNESSMAP');
        }
        get [_0x6027f5(0x6e4)]() {
            var _0x37266d = _0x6027f5;
            return this[_0x37266d(0x6e5)]['x'];
        }
        set [_0x6027f5(0x6e4)](_0x3723b5) {
            var _0x14f27a = _0x6027f5;
            let _0x58e03d = this[_0x14f27a(0x6e5)];
            _0x58e03d['x'] = _0x3723b5, this[_0x14f27a(0x6e5)] = _0x58e03d;
        }
        get [_0x6027f5(0x6e6)]() {
            return this['albedoColor']['y'];
        }
        set [_0x6027f5(0x6e6)](_0x278ed8) {
            var _0x42383e = _0x6027f5;
            let _0x472ea0 = this[_0x42383e(0x6e5)];
            _0x472ea0['y'] = _0x278ed8, this['albedoColor'] = _0x472ea0;
        }
        get [_0x6027f5(0x6e7)]() {
            var _0x4b1bfc = _0x6027f5;
            return this[_0x4b1bfc(0x6e5)]['z'];
        }
        set ['_ColorB'](_0x2c9845) {
            var _0x2a91d1 = _0x6027f5;
            let _0x3f8e83 = this[_0x2a91d1(0x6e5)];
            _0x3f8e83['z'] = _0x2c9845, this[_0x2a91d1(0x6e5)] = _0x3f8e83;
        }
        get ['_ColorA']() {
            var _0x26771e = _0x6027f5;
            return this[_0x26771e(0x6e5)]['w'];
        }
        set [_0x6027f5(0x6e8)](_0xbbe160) {
            var _0x4d5e2b = _0x6027f5;
            let _0x3381ef = this[_0x4d5e2b(0x6e5)];
            _0x3381ef['w'] = _0xbbe160, this[_0x4d5e2b(0x6e5)] = _0x3381ef;
        }
        get [_0x6027f5(0x6e9)]() {
            var _0x5996bc = _0x6027f5;
            return this[_0x5996bc(0x4e2)][_0x5996bc(0x4a7)](_0x3c2eb1[_0x5996bc(0x6d7)]);
        }
        set [_0x6027f5(0x6e9)](_0x6826c2) {
            var _0x2733c0 = _0x6027f5;
            this[_0x2733c0(0x6e5)] = _0x6826c2;
        }
        get [_0x6027f5(0x6ea)]() {
            var _0x185931 = _0x6027f5;
            return this[_0x185931(0x4e2)][_0x185931(0x4a7)](_0x3c2eb1[_0x185931(0x6d8)])['x'];
        }
        set ['_SpecColorR'](_0x42eed7) {
            var _0x5dcfd7 = _0x6027f5;
            this[_0x5dcfd7(0x4e2)][_0x5dcfd7(0x4a7)](_0x3c2eb1['MATERIALSPECULAR'])['x'] = _0x42eed7;
        }
        get [_0x6027f5(0x6eb)]() {
            var _0x2703bf = _0x6027f5;
            return this[_0x2703bf(0x4e2)]['getVector'](_0x3c2eb1['MATERIALSPECULAR'])['y'];
        }
        set [_0x6027f5(0x6eb)](_0x2ba7db) {
            var _0x1fe1c9 = _0x6027f5;
            this[_0x1fe1c9(0x4e2)][_0x1fe1c9(0x4a7)](_0x3c2eb1[_0x1fe1c9(0x6d8)])['y'] = _0x2ba7db;
        }
        get [_0x6027f5(0x6ec)]() {
            var _0xdc67a = _0x6027f5;
            return this[_0xdc67a(0x4e2)][_0xdc67a(0x4a7)](_0x3c2eb1[_0xdc67a(0x6d8)])['z'];
        }
        set [_0x6027f5(0x6ec)](_0x3b8ad9) {
            var _0x26e355 = _0x6027f5;
            this['_shaderValues'][_0x26e355(0x4a7)](_0x3c2eb1[_0x26e355(0x6d8)])['z'] = _0x3b8ad9;
        }
        get [_0x6027f5(0x6ed)]() {
            var _0x1d5d52 = _0x6027f5;
            return this[_0x1d5d52(0x4e2)][_0x1d5d52(0x4a7)](_0x3c2eb1['MATERIALSPECULAR'])['w'];
        }
        set [_0x6027f5(0x6ed)](_0x5c61df) {
            var _0x3a60e8 = _0x6027f5;
            this[_0x3a60e8(0x4e2)]['getVector'](_0x3c2eb1[_0x3a60e8(0x6d8)])['w'] = _0x5c61df;
        }
        get ['_SpecColor']() {
            var _0x55dce9 = _0x6027f5;
            return this[_0x55dce9(0x4e2)][_0x55dce9(0x4a7)](_0x3c2eb1[_0x55dce9(0x6d8)]);
        }
        set [_0x6027f5(0x6ee)](_0x18bb8e) {
            var _0x124da2 = _0x6027f5;
            this[_0x124da2(0x6ef)] = _0x18bb8e;
        }
        get [_0x6027f5(0x6f0)]() {
            var _0x15bb42 = _0x6027f5;
            return this[_0x15bb42(0x4e2)][_0x15bb42(0x4a2)](_0x3c2eb1['SHININESS']);
        }
        set [_0x6027f5(0x6f0)](_0x450578) {
            var _0x2ae6ce = _0x6027f5;
            _0x450578 = Math['max'](0x0, Math['min'](0x1, _0x450578)), this[_0x2ae6ce(0x4e2)][_0x2ae6ce(0x4a3)](_0x3c2eb1[_0x2ae6ce(0x6d9)], _0x450578);
        }
        get [_0x6027f5(0x6f1)]() {
            var _0x534525 = _0x6027f5;
            return this[_0x534525(0x4e2)][_0x534525(0x4a7)](_0x3c2eb1[_0x534525(0x6f2)])['x'];
        }
        set ['_MainTex_STX'](_0x43ae81) {
            var _0xd35896 = _0x6027f5, _0x16b230 = this[_0xd35896(0x4e2)][_0xd35896(0x4a7)](_0x3c2eb1[_0xd35896(0x6f2)]);
            _0x16b230['x'] = _0x43ae81, this[_0xd35896(0x6f3)] = _0x16b230;
        }
        get [_0x6027f5(0x6f4)]() {
            var _0x539451 = _0x6027f5;
            return this[_0x539451(0x4e2)][_0x539451(0x4a7)](_0x3c2eb1[_0x539451(0x6f2)])['y'];
        }
        set [_0x6027f5(0x6f4)](_0x1d9f95) {
            var _0x3fce07 = _0x6027f5, _0x599057 = this['_shaderValues'][_0x3fce07(0x4a7)](_0x3c2eb1[_0x3fce07(0x6f2)]);
            _0x599057['y'] = _0x1d9f95, this[_0x3fce07(0x6f3)] = _0x599057;
        }
        get ['_MainTex_STZ']() {
            var _0x355a29 = _0x6027f5;
            return this['_shaderValues']['getVector'](_0x3c2eb1[_0x355a29(0x6f2)])['z'];
        }
        set [_0x6027f5(0x6f5)](_0x1dea1b) {
            var _0x2d7ef1 = _0x6027f5, _0x29b170 = this[_0x2d7ef1(0x4e2)]['getVector'](_0x3c2eb1['TILINGOFFSET']);
            _0x29b170['z'] = _0x1dea1b, this['tilingOffset'] = _0x29b170;
        }
        get [_0x6027f5(0x6f6)]() {
            var _0x4481f2 = _0x6027f5;
            return this['_shaderValues'][_0x4481f2(0x4a7)](_0x3c2eb1[_0x4481f2(0x6f2)])['w'];
        }
        set [_0x6027f5(0x6f6)](_0x4af800) {
            var _0x149b9a = _0x6027f5, _0x4813c8 = this[_0x149b9a(0x4e2)][_0x149b9a(0x4a7)](_0x3c2eb1['TILINGOFFSET']);
            _0x4813c8['w'] = _0x4af800, this['tilingOffset'] = _0x4813c8;
        }
        get ['_MainTex_ST']() {
            var _0x306285 = _0x6027f5;
            return this['_shaderValues']['getVector'](_0x3c2eb1[_0x306285(0x6f2)]);
        }
        set [_0x6027f5(0x6f7)](_0x48ba32) {
            var _0x3156fe = _0x6027f5;
            this[_0x3156fe(0x6f3)] = _0x48ba32;
        }
        get [_0x6027f5(0x6f8)]() {
            return this['alphaTestValue'];
        }
        set [_0x6027f5(0x6f8)](_0x7c2254) {
            var _0x49eb18 = _0x6027f5;
            this[_0x49eb18(0x6a1)] = _0x7c2254;
        }
        set ['renderMode'](_0x5369f7) {
            var _0x17e46b = _0x6027f5;
            switch (_0x5369f7) {
            case _0x3c2eb1[_0x17e46b(0x6f9)]:
                this[_0x17e46b(0x68c)] = !0x1, this[_0x17e46b(0x68a)] = _0xe2444c[_0x17e46b(0x68b)], this[_0x17e46b(0x699)] = !0x0, this[_0x17e46b(0x697)] = _0x47a097[_0x17e46b(0x6b7)], this['blend'] = _0x47a097['BLEND_DISABLE'], this[_0x17e46b(0x698)] = _0x47a097[_0x17e46b(0x6fa)];
                break;
            case _0x3c2eb1[_0x17e46b(0x6fb)]:
                this['renderQueue'] = _0xe2444c[_0x17e46b(0x6b6)], this[_0x17e46b(0x68c)] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x47a097['CULL_BACK'], this[_0x17e46b(0x696)] = _0x47a097[_0x17e46b(0x6b8)], this[_0x17e46b(0x698)] = _0x47a097[_0x17e46b(0x6fa)];
                break;
            case _0x3c2eb1['RENDERMODE_TRANSPARENT']:
                this[_0x17e46b(0x68a)] = _0xe2444c['RENDERQUEUE_TRANSPARENT'], this[_0x17e46b(0x68c)] = !0x1, this[_0x17e46b(0x699)] = !0x1, this[_0x17e46b(0x697)] = _0x47a097[_0x17e46b(0x6b7)], this[_0x17e46b(0x696)] = _0x47a097[_0x17e46b(0x6c7)], this[_0x17e46b(0x69b)] = _0x47a097[_0x17e46b(0x6cc)], this['blendDst'] = _0x47a097[_0x17e46b(0x6fc)], this[_0x17e46b(0x698)] = _0x47a097['DEPTHTEST_LESS'];
                break;
            default:
                throw new Error(_0x17e46b(0x6fd));
            }
        }
        get [_0x6027f5(0x6fe)]() {
            var _0x5620a5 = _0x6027f5;
            return this[_0x5620a5(0x4e2)][_0x5620a5(0x49c)](_0x3c2eb1['SHADERDEFINE_ENABLEVERTEXCOLOR']);
        }
        set [_0x6027f5(0x6fe)](_0x9dee25) {
            var _0x26f927 = _0x6027f5;
            _0x9dee25 ? this[_0x26f927(0x4e2)][_0x26f927(0x49a)](_0x3c2eb1[_0x26f927(0x6df)]) : this[_0x26f927(0x4e2)][_0x26f927(0x49b)](_0x3c2eb1[_0x26f927(0x6df)]);
        }
        get [_0x6027f5(0x6ff)]() {
            var _0x293b15 = _0x6027f5;
            return this[_0x293b15(0x6f1)];
        }
        set [_0x6027f5(0x6ff)](_0x4b170e) {
            this['_MainTex_STX'] = _0x4b170e;
        }
        get ['tilingOffsetY']() {
            var _0xf5ba3f = _0x6027f5;
            return this[_0xf5ba3f(0x6f4)];
        }
        set ['tilingOffsetY'](_0xab4f5a) {
            this['_MainTex_STY'] = _0xab4f5a;
        }
        get ['tilingOffsetZ']() {
            return this['_MainTex_STZ'];
        }
        set [_0x6027f5(0x700)](_0x3033a6) {
            var _0x43c854 = _0x6027f5;
            this[_0x43c854(0x6f5)] = _0x3033a6;
        }
        get [_0x6027f5(0x701)]() {
            return this['_MainTex_STW'];
        }
        set [_0x6027f5(0x701)](_0x28195d) {
            this['_MainTex_STW'] = _0x28195d;
        }
        get [_0x6027f5(0x6f3)]() {
            var _0x1ca1d5 = _0x6027f5;
            return this[_0x1ca1d5(0x4e2)]['getVector'](_0x3c2eb1[_0x1ca1d5(0x6f2)]);
        }
        set ['tilingOffset'](_0x58c333) {
            var _0x58579c = _0x6027f5;
            _0x58c333 ? this[_0x58579c(0x4e2)][_0x58579c(0x4a8)](_0x3c2eb1[_0x58579c(0x6f2)], _0x58c333) : this['_shaderValues'][_0x58579c(0x4a7)](_0x3c2eb1['TILINGOFFSET'])[_0x58579c(0x1f8)](0x1, 0x1, 0x0, 0x0);
        }
        get ['albedoColorR']() {
            var _0x32fab0 = _0x6027f5;
            return this[_0x32fab0(0x6e4)];
        }
        set ['albedoColorR'](_0x4ffa49) {
            this['_ColorR'] = _0x4ffa49;
        }
        get [_0x6027f5(0x702)]() {
            var _0x3d07fd = _0x6027f5;
            return this[_0x3d07fd(0x6e6)];
        }
        set [_0x6027f5(0x702)](_0x52c9a9) {
            var _0x20d44b = _0x6027f5;
            this[_0x20d44b(0x6e6)] = _0x52c9a9;
        }
        get [_0x6027f5(0x703)]() {
            return this['_ColorB'];
        }
        set [_0x6027f5(0x703)](_0x7f1af5) {
            var _0x4fbaab = _0x6027f5;
            this[_0x4fbaab(0x6e7)] = _0x7f1af5;
        }
        get ['albedoColorA']() {
            var _0x3426f4 = _0x6027f5;
            return this[_0x3426f4(0x6e8)];
        }
        set [_0x6027f5(0x704)](_0x28ff99) {
            this['_ColorA'] = _0x28ff99;
        }
        get [_0x6027f5(0x6e5)]() {
            var _0x22d748 = _0x6027f5;
            return this[_0x22d748(0x4e2)]['getVector'](_0x3c2eb1[_0x22d748(0x6d7)]);
        }
        set ['albedoColor'](_0x5eecb9) {
            var _0x56d883 = _0x6027f5;
            this['_shaderValues'][_0x56d883(0x4a8)](_0x3c2eb1[_0x56d883(0x6d7)], _0x5eecb9);
        }
        get [_0x6027f5(0x6d6)]() {
            var _0x3a32df = _0x6027f5;
            return this[_0x3a32df(0x4e2)][_0x3a32df(0x4a2)](_0x3c2eb1[_0x3a32df(0x705)]);
        }
        set [_0x6027f5(0x6d6)](_0x191029) {
            var _0x5d12df = _0x6027f5;
            this[_0x5d12df(0x4e2)][_0x5d12df(0x4a3)](_0x3c2eb1[_0x5d12df(0x705)], _0x191029);
        }
        get ['specularColorR']() {
            var _0x594755 = _0x6027f5;
            return this[_0x594755(0x6ea)];
        }
        set [_0x6027f5(0x706)](_0x4b94d1) {
            var _0x2aa056 = _0x6027f5;
            this[_0x2aa056(0x6ea)] = _0x4b94d1;
        }
        get [_0x6027f5(0x707)]() {
            return this['_SpecColorG'];
        }
        set ['specularColorG'](_0x4ddfe4) {
            this['_SpecColorG'] = _0x4ddfe4;
        }
        get ['specularColorB']() {
            var _0x5cf989 = _0x6027f5;
            return this[_0x5cf989(0x6ec)];
        }
        set [_0x6027f5(0x708)](_0x4368a4) {
            var _0x469a95 = _0x6027f5;
            this[_0x469a95(0x6ec)] = _0x4368a4;
        }
        get [_0x6027f5(0x709)]() {
            return this['_SpecColorA'];
        }
        set [_0x6027f5(0x709)](_0x458109) {
            this['_SpecColorA'] = _0x458109;
        }
        get [_0x6027f5(0x6ef)]() {
            var _0x175948 = _0x6027f5;
            return this[_0x175948(0x4e2)]['getVector'](_0x3c2eb1[_0x175948(0x6d8)]);
        }
        set [_0x6027f5(0x6ef)](_0x372902) {
            var _0x5142ad = _0x6027f5;
            this[_0x5142ad(0x4e2)]['setVector'](_0x3c2eb1[_0x5142ad(0x6d8)], _0x372902);
        }
        get ['shininess']() {
            var _0x8e3676 = _0x6027f5;
            return this[_0x8e3676(0x6f0)];
        }
        set ['shininess'](_0x3b170d) {
            var _0x376862 = _0x6027f5;
            this[_0x376862(0x6f0)] = _0x3b170d;
        }
        get ['albedoTexture']() {
            var _0x7d05db = _0x6027f5;
            return this[_0x7d05db(0x4e2)][_0x7d05db(0x4ae)](_0x3c2eb1[_0x7d05db(0x70a)]);
        }
        set ['albedoTexture'](_0x490f5b) {
            var _0x975a2f = _0x6027f5;
            _0x490f5b ? this[_0x975a2f(0x4e2)]['addDefine'](_0x3c2eb1['SHADERDEFINE_DIFFUSEMAP']) : this[_0x975a2f(0x4e2)][_0x975a2f(0x49b)](_0x3c2eb1[_0x975a2f(0x6da)]), this['_shaderValues'][_0x975a2f(0x4ac)](_0x3c2eb1[_0x975a2f(0x70a)], _0x490f5b);
        }
        get ['normalTexture']() {
            var _0x3114c2 = _0x6027f5;
            return this['_shaderValues']['getTexture'](_0x3c2eb1[_0x3114c2(0x70b)]);
        }
        set [_0x6027f5(0x70c)](_0x4a64d0) {
            var _0x196e53 = _0x6027f5;
            _0x4a64d0 ? this[_0x196e53(0x4e2)][_0x196e53(0x49a)](_0x3c2eb1[_0x196e53(0x6db)]) : this[_0x196e53(0x4e2)][_0x196e53(0x49b)](_0x3c2eb1[_0x196e53(0x6db)]), this[_0x196e53(0x4e2)][_0x196e53(0x4ac)](_0x3c2eb1[_0x196e53(0x70b)], _0x4a64d0);
        }
        get [_0x6027f5(0x70d)]() {
            var _0x5a189a = _0x6027f5;
            return this[_0x5a189a(0x4e2)]['getTexture'](_0x3c2eb1[_0x5a189a(0x70e)]);
        }
        set [_0x6027f5(0x70d)](_0x2d2404) {
            var _0x745b49 = _0x6027f5;
            _0x2d2404 ? this[_0x745b49(0x4e2)][_0x745b49(0x49a)](_0x3c2eb1[_0x745b49(0x6dd)]) : this[_0x745b49(0x4e2)]['removeDefine'](_0x3c2eb1['SHADERDEFINE_SPECULARMAP']), this['_shaderValues'][_0x745b49(0x4ac)](_0x3c2eb1[_0x745b49(0x70e)], _0x2d2404);
        }
        get [_0x6027f5(0x70f)]() {
            var _0x37d800 = _0x6027f5;
            return this[_0x37d800(0x4e2)]['hasDefine'](_0x3c2eb1['SHADERDEFINE_ENABLETRANSMISSION']);
        }
        set [_0x6027f5(0x70f)](_0x43b32c) {
            var _0x386703 = _0x6027f5;
            _0x43b32c ? this[_0x386703(0x4e2)][_0x386703(0x49a)](_0x3c2eb1[_0x386703(0x6e1)]) : this[_0x386703(0x4e2)][_0x386703(0x49b)](_0x3c2eb1[_0x386703(0x6e1)]);
        }
        get [_0x6027f5(0x710)]() {
            var _0x4763ba = _0x6027f5;
            return this['_shaderValues'][_0x4763ba(0x4a2)](_0x3c2eb1['TRANSMISSIONRATE']);
        }
        set [_0x6027f5(0x711)](_0x78a93d) {
            var _0x2b39c7 = _0x6027f5;
            this['_shaderValues'][_0x2b39c7(0x4a3)](_0x3c2eb1[_0x2b39c7(0x712)], _0x78a93d);
        }
        get [_0x6027f5(0x713)]() {
            var _0x3f4c9b = _0x6027f5;
            return this[_0x3f4c9b(0x4e2)][_0x3f4c9b(0x4a2)](_0x3c2eb1[_0x3f4c9b(0x714)]);
        }
        set [_0x6027f5(0x713)](_0xf7c0b8) {
            var _0x524c17 = _0x6027f5;
            this[_0x524c17(0x4e2)][_0x524c17(0x4a3)](_0x3c2eb1[_0x524c17(0x714)], Math[_0x524c17(0x20c)](_0xf7c0b8, 0x1));
        }
        get [_0x6027f5(0x715)]() {
            var _0x2d6fd1 = _0x6027f5;
            return this[_0x2d6fd1(0x4e2)]['getNumber'](_0x3c2eb1[_0x2d6fd1(0x716)]);
        }
        set ['backScale'](_0x657289) {
            var _0x33dc42 = _0x6027f5;
            this[_0x33dc42(0x4e2)][_0x33dc42(0x4a3)](_0x3c2eb1[_0x33dc42(0x716)], _0x657289);
        }
        get [_0x6027f5(0x717)]() {
            var _0xeb8d56 = _0x6027f5;
            return this[_0xeb8d56(0x4e2)][_0xeb8d56(0x4ae)](_0x3c2eb1['THINKNESSTEXTURE']);
        }
        set [_0x6027f5(0x717)](_0x451c55) {
            var _0x5ab70f = _0x6027f5;
            _0x451c55 ? this[_0x5ab70f(0x4e2)][_0x5ab70f(0x49a)](_0x3c2eb1[_0x5ab70f(0x6e3)]) : this[_0x5ab70f(0x4e2)]['removeDefine'](_0x3c2eb1['SHADERDEFINE_THICKNESSMAP']), this[_0x5ab70f(0x4e2)][_0x5ab70f(0x4ac)](_0x3c2eb1[_0x5ab70f(0x718)], _0x451c55);
        }
        get [_0x6027f5(0x719)]() {
            var _0x4f81d6 = _0x6027f5;
            return this[_0x4f81d6(0x4e2)][_0x4f81d6(0x4a7)](_0x3c2eb1[_0x4f81d6(0x71a)]);
        }
        set [_0x6027f5(0x719)](_0x2790e1) {
            var _0x57515e = _0x6027f5;
            this[_0x57515e(0x4e2)][_0x57515e(0x4a8)](_0x3c2eb1[_0x57515e(0x71a)], _0x2790e1);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x101518 = _0x6027f5, _0x361afd = new _0x3c2eb1();
            return this[_0x101518(0x1fc)](_0x361afd), _0x361afd;
        }
        ['cloneTo'](_0x2a9b22) {
            var _0x4cd043 = _0x6027f5;
            super['cloneTo'](_0x2a9b22);
            var _0x1ecadc = _0x2a9b22;
            _0x1ecadc['albedoIntensity'] = this[_0x4cd043(0x6d6)], _0x1ecadc[_0x4cd043(0x6fe)] = this[_0x4cd043(0x6fe)], this[_0x4cd043(0x6e5)][_0x4cd043(0x1fc)](_0x1ecadc['albedoColor']);
        }
    }
    _0x3c2eb1[_0x6027f5(0x6f9)] = 0x0, _0x3c2eb1[_0x6027f5(0x6fb)] = 0x1, _0x3c2eb1[_0x6027f5(0x71b)] = 0x2, _0x3c2eb1[_0x6027f5(0x70a)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x71c)), _0x3c2eb1['NORMALTEXTURE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x71d)), _0x3c2eb1[_0x6027f5(0x70e)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x71e)), _0x3c2eb1[_0x6027f5(0x6d7)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x71f)), _0x3c2eb1[_0x6027f5(0x6d8)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x720)), _0x3c2eb1['SHININESS'] = _0x3a9f31[_0x6027f5(0x553)]('u_Shininess'), _0x3c2eb1[_0x6027f5(0x6f2)] = _0x3a9f31[_0x6027f5(0x553)]('u_TilingOffset'), _0x3c2eb1['TRANSMISSIONRATE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x721)), _0x3c2eb1['IBACKDIFFUSE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x722)), _0x3c2eb1['IBACKSCALE'] = _0x3a9f31['propertyNameToID']('u_BackScale'), _0x3c2eb1[_0x6027f5(0x718)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x723)), _0x3c2eb1[_0x6027f5(0x71a)] = _0x3a9f31['propertyNameToID']('u_TransmissionColor'), _0x3c2eb1[_0x6027f5(0x705)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x724));
    class _0x50b2a3 extends _0xe2444c {
        constructor() {
            var _0x55fb6d = _0x6027f5;
            super(), this[_0x55fb6d(0x6a9)](_0x55fb6d(0x725)), this[_0x55fb6d(0x4e2)][_0x55fb6d(0x4a8)](_0x50b2a3['TILINGOFFSET'], new _0x5b8e4e(0x1, 0x1, 0x0, 0x0)), this[_0x55fb6d(0x4e2)][_0x55fb6d(0x4a8)](_0x50b2a3[_0x55fb6d(0x726)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x50b2a3[_0x55fb6d(0x727)];
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x384995 = _0x6027f5;
            _0x50b2a3[_0x384995(0x728)] = _0x3a9f31[_0x384995(0x510)]('MAINTEXTURE'), _0x50b2a3[_0x384995(0x729)] = _0x3a9f31[_0x384995(0x510)](_0x384995(0x72a));
        }
        get [_0x6027f5(0x72b)]() {
            return this['color']['x'];
        }
        set ['_TintColorR'](_0xb19688) {
            var _0x29be41 = _0x6027f5;
            let _0x34200f = this['color'];
            _0x34200f['x'] = _0xb19688, this[_0x29be41(0x46f)] = _0x34200f;
        }
        get [_0x6027f5(0x72c)]() {
            var _0x137faa = _0x6027f5;
            return this[_0x137faa(0x46f)]['y'];
        }
        set ['_TintColorG'](_0x13087c) {
            var _0x2091d8 = _0x6027f5;
            let _0x17f36c = this[_0x2091d8(0x46f)];
            _0x17f36c['y'] = _0x13087c, this[_0x2091d8(0x46f)] = _0x17f36c;
        }
        get [_0x6027f5(0x72d)]() {
            var _0x3a58bc = _0x6027f5;
            return this[_0x3a58bc(0x46f)]['z'];
        }
        set [_0x6027f5(0x72d)](_0x4d2396) {
            var _0x523ec8 = _0x6027f5;
            let _0xc146aa = this[_0x523ec8(0x46f)];
            _0xc146aa['z'] = _0x4d2396, this[_0x523ec8(0x46f)] = _0xc146aa;
        }
        get [_0x6027f5(0x72e)]() {
            var _0x4b547b = _0x6027f5;
            return this[_0x4b547b(0x46f)]['w'];
        }
        set ['_TintColorA'](_0x138fd8) {
            var _0x3f3bed = _0x6027f5;
            let _0xf88f1e = this[_0x3f3bed(0x46f)];
            _0xf88f1e['w'] = _0x138fd8, this[_0x3f3bed(0x46f)] = _0xf88f1e;
        }
        get [_0x6027f5(0x72f)]() {
            var _0x26e55a = _0x6027f5;
            return this[_0x26e55a(0x4e2)]['getVector'](_0x50b2a3[_0x26e55a(0x726)]);
        }
        set [_0x6027f5(0x72f)](_0x3d748c) {
            var _0x14ed61 = _0x6027f5;
            this[_0x14ed61(0x46f)] = _0x3d748c;
        }
        get [_0x6027f5(0x6f1)]() {
            var _0x5249b3 = _0x6027f5;
            return this[_0x5249b3(0x4e2)][_0x5249b3(0x4a7)](_0x50b2a3[_0x5249b3(0x6f2)])['x'];
        }
        set ['_MainTex_STX'](_0x21f0eb) {
            var _0x4740ab = _0x6027f5, _0x4a6390 = this['_shaderValues'][_0x4740ab(0x4a7)](_0x50b2a3['TILINGOFFSET']);
            _0x4a6390['x'] = _0x21f0eb, this[_0x4740ab(0x6f3)] = _0x4a6390;
        }
        get ['_MainTex_STY']() {
            var _0x128903 = _0x6027f5;
            return this['_shaderValues'][_0x128903(0x4a7)](_0x50b2a3['TILINGOFFSET'])['y'];
        }
        set [_0x6027f5(0x6f4)](_0x15d684) {
            var _0x1f5716 = _0x6027f5, _0x2da4f3 = this[_0x1f5716(0x4e2)]['getVector'](_0x50b2a3[_0x1f5716(0x6f2)]);
            _0x2da4f3['y'] = _0x15d684, this['tilingOffset'] = _0x2da4f3;
        }
        get ['_MainTex_STZ']() {
            var _0x42b6b4 = _0x6027f5;
            return this['_shaderValues'][_0x42b6b4(0x4a7)](_0x50b2a3[_0x42b6b4(0x6f2)])['z'];
        }
        set [_0x6027f5(0x6f5)](_0x355472) {
            var _0x515398 = _0x6027f5, _0x25b2e2 = this[_0x515398(0x4e2)][_0x515398(0x4a7)](_0x50b2a3[_0x515398(0x6f2)]);
            _0x25b2e2['z'] = _0x355472, this[_0x515398(0x6f3)] = _0x25b2e2;
        }
        get [_0x6027f5(0x6f6)]() {
            var _0x24d8e0 = _0x6027f5;
            return this['_shaderValues'][_0x24d8e0(0x4a7)](_0x50b2a3['TILINGOFFSET'])['w'];
        }
        set [_0x6027f5(0x6f6)](_0x134b3c) {
            var _0x22ce24 = _0x6027f5, _0x35bee9 = this[_0x22ce24(0x4e2)][_0x22ce24(0x4a7)](_0x50b2a3[_0x22ce24(0x6f2)]);
            _0x35bee9['w'] = _0x134b3c, this[_0x22ce24(0x6f3)] = _0x35bee9;
        }
        get [_0x6027f5(0x6f7)]() {
            var _0x324c90 = _0x6027f5;
            return this[_0x324c90(0x4e2)][_0x324c90(0x4a7)](_0x50b2a3[_0x324c90(0x6f2)]);
        }
        set ['_MainTex_ST'](_0x2730f5) {
            this['tilingOffset'] = _0x2730f5;
        }
        set [_0x6027f5(0x730)](_0x2c3769) {
            var _0x42c49d = _0x6027f5;
            switch (_0x2c3769) {
            case _0x50b2a3['RENDERMODE_ADDTIVE']:
                this[_0x42c49d(0x68a)] = _0xe2444c[_0x42c49d(0x6ad)], this[_0x42c49d(0x68c)] = !0x1, this[_0x42c49d(0x699)] = !0x1, this[_0x42c49d(0x697)] = _0x47a097[_0x42c49d(0x6c6)], this[_0x42c49d(0x696)] = _0x47a097[_0x42c49d(0x6c7)], this[_0x42c49d(0x69b)] = _0x47a097[_0x42c49d(0x6cc)], this[_0x42c49d(0x69c)] = _0x47a097['BLENDPARAM_ONE'], this[_0x42c49d(0x698)] = _0x47a097[_0x42c49d(0x6fa)], this['_shaderValues'][_0x42c49d(0x49a)](_0x50b2a3[_0x42c49d(0x729)]);
                break;
            case _0x50b2a3['RENDERMODE_ALPHABLENDED']:
                this[_0x42c49d(0x68a)] = _0xe2444c[_0x42c49d(0x6ad)], this['alphaTest'] = !0x1, this[_0x42c49d(0x699)] = !0x1, this[_0x42c49d(0x697)] = _0x47a097[_0x42c49d(0x6c6)], this[_0x42c49d(0x696)] = _0x47a097[_0x42c49d(0x6c7)], this[_0x42c49d(0x69b)] = _0x47a097[_0x42c49d(0x6cc)], this['blendDst'] = _0x47a097['BLENDPARAM_ONE_MINUS_SRC_ALPHA'], this[_0x42c49d(0x698)] = _0x47a097[_0x42c49d(0x6fa)], this['_shaderValues'][_0x42c49d(0x49b)](_0x50b2a3[_0x42c49d(0x729)]);
                break;
            default:
                throw new Error(_0x42c49d(0x731));
            }
        }
        get [_0x6027f5(0x732)]() {
            var _0x10d3c3 = _0x6027f5;
            return this[_0x10d3c3(0x72b)];
        }
        set [_0x6027f5(0x732)](_0x3a254f) {
            var _0x9c750e = _0x6027f5;
            this[_0x9c750e(0x72b)] = _0x3a254f;
        }
        get [_0x6027f5(0x733)]() {
            var _0x1265a9 = _0x6027f5;
            return this[_0x1265a9(0x72c)];
        }
        set ['colorG'](_0x1d016c) {
            var _0x533ef5 = _0x6027f5;
            this[_0x533ef5(0x72c)] = _0x1d016c;
        }
        get [_0x6027f5(0x734)]() {
            return this['_TintColorB'];
        }
        set ['colorB'](_0x4d1020) {
            this['_TintColorB'] = _0x4d1020;
        }
        get ['colorA']() {
            var _0x3c161a = _0x6027f5;
            return this[_0x3c161a(0x72e)];
        }
        set [_0x6027f5(0x735)](_0x2e1613) {
            var _0x420bfc = _0x6027f5;
            this[_0x420bfc(0x72e)] = _0x2e1613;
        }
        get [_0x6027f5(0x46f)]() {
            var _0x5d1bd6 = _0x6027f5;
            return this[_0x5d1bd6(0x4e2)][_0x5d1bd6(0x4a7)](_0x50b2a3[_0x5d1bd6(0x726)]);
        }
        set [_0x6027f5(0x46f)](_0x49faf0) {
            var _0x25bdc6 = _0x6027f5;
            this['_shaderValues']['setVector'](_0x50b2a3[_0x25bdc6(0x726)], _0x49faf0);
        }
        get [_0x6027f5(0x736)]() {
            var _0x36a01b = _0x6027f5;
            return this[_0x36a01b(0x4e2)]['getTexture'](_0x50b2a3['MAINTEXTURE']);
        }
        set [_0x6027f5(0x736)](_0x391559) {
            var _0x160b59 = _0x6027f5;
            _0x391559 ? this[_0x160b59(0x4e2)][_0x160b59(0x49a)](_0x50b2a3[_0x160b59(0x728)]) : this['_shaderValues'][_0x160b59(0x49b)](_0x50b2a3[_0x160b59(0x728)]), this[_0x160b59(0x4e2)]['setTexture'](_0x50b2a3[_0x160b59(0x737)], _0x391559);
        }
        get ['tilingOffsetX']() {
            return this['_MainTex_STX'];
        }
        set [_0x6027f5(0x6ff)](_0x115d62) {
            var _0x5e6af9 = _0x6027f5;
            this[_0x5e6af9(0x6f1)] = _0x115d62;
        }
        get [_0x6027f5(0x738)]() {
            var _0x3da937 = _0x6027f5;
            return this[_0x3da937(0x6f4)];
        }
        set ['tilingOffsetY'](_0x30a339) {
            this['_MainTex_STY'] = _0x30a339;
        }
        get ['tilingOffsetZ']() {
            var _0x403473 = _0x6027f5;
            return this[_0x403473(0x6f5)];
        }
        set [_0x6027f5(0x700)](_0x8000fa) {
            var _0x59698b = _0x6027f5;
            this[_0x59698b(0x6f5)] = _0x8000fa;
        }
        get ['tilingOffsetW']() {
            var _0x56e5bb = _0x6027f5;
            return this[_0x56e5bb(0x6f6)];
        }
        set [_0x6027f5(0x701)](_0xf79a9c) {
            var _0x1a61a5 = _0x6027f5;
            this[_0x1a61a5(0x6f6)] = _0xf79a9c;
        }
        get [_0x6027f5(0x6f3)]() {
            var _0x503694 = _0x6027f5;
            return this[_0x503694(0x4e2)][_0x503694(0x4a7)](_0x50b2a3[_0x503694(0x6f2)]);
        }
        set [_0x6027f5(0x6f3)](_0xcbd788) {
            var _0x494a0a = _0x6027f5;
            _0xcbd788 ? this['_shaderValues'][_0x494a0a(0x4a8)](_0x50b2a3[_0x494a0a(0x6f2)], _0xcbd788) : this[_0x494a0a(0x4e2)][_0x494a0a(0x4a7)](_0x50b2a3[_0x494a0a(0x6f2)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x266104 = new _0x50b2a3();
            return this['cloneTo'](_0x266104), _0x266104;
        }
    }
    _0x50b2a3['RENDERMODE_ADDTIVE'] = 0x0, _0x50b2a3['RENDERMODE_ALPHABLENDED'] = 0x1, _0x50b2a3['MAINTEXTURE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x739)), _0x50b2a3[_0x6027f5(0x726)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x73a)), _0x50b2a3['TILINGOFFSET'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x73b));
    class _0x12f0c4 extends _0xe2444c {
        constructor() {
            var _0x241f0e = _0x6027f5;
            super(), this[_0x241f0e(0x6a9)](_0x241f0e(0x73c)), this[_0x241f0e(0x730)] = _0x12f0c4['RENDERMODE_OPAQUE'];
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x18c763 = _0x6027f5;
            _0x12f0c4[_0x18c763(0x73d)] = _0x3a9f31[_0x18c763(0x510)](_0x18c763(0x73e)), _0x12f0c4[_0x18c763(0x73f)] = _0x3a9f31[_0x18c763(0x510)](_0x18c763(0x740)), _0x12f0c4[_0x18c763(0x741)] = _0x3a9f31['getDefineByName'](_0x18c763(0x742)), _0x12f0c4[_0x18c763(0x743)] = _0x3a9f31[_0x18c763(0x510)](_0x18c763(0x744)), _0x12f0c4[_0x18c763(0x745)] = _0x3a9f31['getDefineByName'](_0x18c763(0x746));
        }
        get [_0x6027f5(0x747)]() {
            var _0x1354a0 = _0x6027f5;
            return this[_0x1354a0(0x4e2)][_0x1354a0(0x4ae)](_0x12f0c4[_0x1354a0(0x748)]);
        }
        set [_0x6027f5(0x747)](_0x50ea2c) {
            var _0x3aa0aa = _0x6027f5;
            this[_0x3aa0aa(0x4e2)][_0x3aa0aa(0x4ac)](_0x12f0c4[_0x3aa0aa(0x748)], _0x50ea2c);
        }
        get [_0x6027f5(0x749)]() {
            var _0x3a037f = _0x6027f5;
            return this[_0x3a037f(0x4e2)]['getTexture'](_0x12f0c4[_0x3a037f(0x74a)]);
        }
        set [_0x6027f5(0x749)](_0x362289) {
            var _0x3a1a35 = _0x6027f5;
            this['_shaderValues'][_0x3a1a35(0x4ac)](_0x12f0c4[_0x3a1a35(0x74a)], _0x362289), this[_0x3a1a35(0x74b)](0x1);
        }
        get [_0x6027f5(0x74c)]() {
            var _0x427f01 = _0x6027f5;
            return this[_0x427f01(0x4e2)][_0x427f01(0x4ae)](_0x12f0c4[_0x427f01(0x74d)]);
        }
        set ['diffuseTexture2'](_0x37c355) {
            var _0x3a9b80 = _0x6027f5;
            this[_0x3a9b80(0x4e2)][_0x3a9b80(0x4ac)](_0x12f0c4['DIFFUSETEXTURE2'], _0x37c355), this['_setDetailNum'](0x2);
        }
        get [_0x6027f5(0x74e)]() {
            var _0x3102f9 = _0x6027f5;
            return this['_shaderValues'][_0x3102f9(0x4ae)](_0x12f0c4[_0x3102f9(0x74f)]);
        }
        set [_0x6027f5(0x74e)](_0x4e9ec6) {
            var _0x5aa7bf = _0x6027f5;
            this[_0x5aa7bf(0x4e2)][_0x5aa7bf(0x4ac)](_0x12f0c4[_0x5aa7bf(0x74f)], _0x4e9ec6), this['_setDetailNum'](0x3);
        }
        get ['diffuseTexture4']() {
            var _0x309c02 = _0x6027f5;
            return this[_0x309c02(0x4e2)][_0x309c02(0x4ae)](_0x12f0c4[_0x309c02(0x750)]);
        }
        set ['diffuseTexture4'](_0x241f01) {
            var _0x3a2888 = _0x6027f5;
            this[_0x3a2888(0x4e2)][_0x3a2888(0x4ac)](_0x12f0c4[_0x3a2888(0x750)], _0x241f01), this[_0x3a2888(0x74b)](0x4);
        }
        get [_0x6027f5(0x751)]() {
            var _0x2f3254 = _0x6027f5;
            return this[_0x2f3254(0x4e2)][_0x2f3254(0x4ae)](_0x12f0c4[_0x2f3254(0x752)]);
        }
        set [_0x6027f5(0x751)](_0x177fdd) {
            var _0x2f11b5 = _0x6027f5;
            this['_shaderValues'][_0x2f11b5(0x4ac)](_0x12f0c4[_0x2f11b5(0x752)], _0x177fdd), this[_0x2f11b5(0x74b)](0x5);
        }
        set [_0x6027f5(0x753)](_0x409afd) {
            var _0x11a991 = _0x6027f5;
            this['_shaderValues'][_0x11a991(0x4a8)](_0x12f0c4[_0x11a991(0x754)], _0x409afd);
        }
        set ['diffuseScaleOffset2'](_0x210858) {
            var _0x15b8bc = _0x6027f5;
            this[_0x15b8bc(0x4e2)][_0x15b8bc(0x4a8)](_0x12f0c4[_0x15b8bc(0x755)], _0x210858);
        }
        set [_0x6027f5(0x756)](_0x381d3f) {
            var _0x3fa1a7 = _0x6027f5;
            this[_0x3fa1a7(0x4e2)][_0x3fa1a7(0x4a8)](_0x12f0c4[_0x3fa1a7(0x757)], _0x381d3f);
        }
        set [_0x6027f5(0x758)](_0x3b5a07) {
            var _0x2b3f26 = _0x6027f5;
            this[_0x2b3f26(0x4e2)][_0x2b3f26(0x4a8)](_0x12f0c4['DIFFUSESCALEOFFSET4'], _0x3b5a07);
        }
        set [_0x6027f5(0x759)](_0x19fc80) {
            var _0x3cd355 = _0x6027f5;
            this['_shaderValues']['setVector'](_0x12f0c4[_0x3cd355(0x75a)], _0x19fc80);
        }
        set ['renderMode'](_0x3b0e3b) {
            var _0x5b6afd = _0x6027f5;
            switch (_0x3b0e3b) {
            case _0x12f0c4[_0x5b6afd(0x6f9)]:
                this['renderQueue'] = _0xe2444c[_0x5b6afd(0x68b)], this[_0x5b6afd(0x699)] = !0x0, this[_0x5b6afd(0x697)] = _0x47a097[_0x5b6afd(0x6b7)], this[_0x5b6afd(0x696)] = _0x47a097[_0x5b6afd(0x6b8)], this[_0x5b6afd(0x698)] = _0x47a097['DEPTHTEST_LESS'];
                break;
            case _0x12f0c4[_0x5b6afd(0x71b)]:
                this[_0x5b6afd(0x68a)] = _0xe2444c['RENDERQUEUE_OPAQUE'], this[_0x5b6afd(0x699)] = !0x1, this[_0x5b6afd(0x697)] = _0x47a097[_0x5b6afd(0x6b7)], this['blend'] = _0x47a097['BLEND_ENABLE_ALL'], this[_0x5b6afd(0x69b)] = _0x47a097['BLENDPARAM_SRC_ALPHA'], this[_0x5b6afd(0x69c)] = _0x47a097[_0x5b6afd(0x6fc)], this['depthTest'] = _0x47a097[_0x5b6afd(0x6c4)];
                break;
            default:
                throw new Error('ExtendTerrainMaterial:renderMode\x20value\x20error.');
            }
        }
        ['_setDetailNum'](_0x48d14f) {
            var _0x982e9f = _0x6027f5;
            switch (_0x48d14f) {
            case 0x1:
                this['_shaderValues']['addDefine'](_0x12f0c4[_0x982e9f(0x73d)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x73f)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4['SHADERDEFINE_DETAIL_NUM3']), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4['SHADERDEFINE_DETAIL_NUM4']), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x745)]);
                break;
            case 0x2:
                this['_shaderValues'][_0x982e9f(0x49a)](_0x12f0c4[_0x982e9f(0x73f)]), this[_0x982e9f(0x4e2)]['removeDefine'](_0x12f0c4[_0x982e9f(0x73d)]), this['_shaderValues'][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x741)]), this['_shaderValues'][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x743)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x745)]);
                break;
            case 0x3:
                this[_0x982e9f(0x4e2)]['addDefine'](_0x12f0c4[_0x982e9f(0x741)]), this['_shaderValues']['removeDefine'](_0x12f0c4[_0x982e9f(0x73d)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x73f)]), this[_0x982e9f(0x4e2)]['removeDefine'](_0x12f0c4[_0x982e9f(0x743)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4['SHADERDEFINE_DETAIL_NUM5']);
                break;
            case 0x4:
                this['_shaderValues'][_0x982e9f(0x49a)](_0x12f0c4[_0x982e9f(0x743)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4['SHADERDEFINE_DETAIL_NUM1']), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x73f)]), this['_shaderValues'][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x741)]), this[_0x982e9f(0x4e2)]['removeDefine'](_0x12f0c4[_0x982e9f(0x745)]);
                break;
            case 0x5:
                this[_0x982e9f(0x4e2)]['addDefine'](_0x12f0c4[_0x982e9f(0x745)]), this[_0x982e9f(0x4e2)][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x73d)]), this[_0x982e9f(0x4e2)]['removeDefine'](_0x12f0c4['SHADERDEFINE_DETAIL_NUM2']), this['_shaderValues'][_0x982e9f(0x49b)](_0x12f0c4[_0x982e9f(0x741)]), this['_shaderValues']['removeDefine'](_0x12f0c4[_0x982e9f(0x743)]);
            }
        }
        ['clone']() {
            var _0x2c40b6 = _0x6027f5, _0x53e5ef = new _0x12f0c4();
            return this[_0x2c40b6(0x1fc)](_0x53e5ef), _0x53e5ef;
        }
    }
    _0x12f0c4[_0x6027f5(0x6f9)] = 0x1, _0x12f0c4[_0x6027f5(0x71b)] = 0x2, _0x12f0c4[_0x6027f5(0x748)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x75b)), _0x12f0c4['DIFFUSETEXTURE1'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x75c)), _0x12f0c4[_0x6027f5(0x74d)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x75d)), _0x12f0c4['DIFFUSETEXTURE3'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x75e)), _0x12f0c4[_0x6027f5(0x750)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x75f)), _0x12f0c4[_0x6027f5(0x752)] = _0x3a9f31[_0x6027f5(0x553)]('u_DiffuseTexture5'), _0x12f0c4[_0x6027f5(0x754)] = _0x3a9f31[_0x6027f5(0x553)]('u_DiffuseScaleOffset1'), _0x12f0c4['DIFFUSESCALEOFFSET2'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x760)), _0x12f0c4[_0x6027f5(0x757)] = _0x3a9f31[_0x6027f5(0x553)]('u_DiffuseScaleOffset3'), _0x12f0c4[_0x6027f5(0x761)] = _0x3a9f31['propertyNameToID']('u_DiffuseScaleOffset4'), _0x12f0c4['DIFFUSESCALEOFFSET5'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x762)), (_0x9f80d5 = _0x18be32[_0x6027f5(0x763)] || (_0x18be32[_0x6027f5(0x763)] = {}))[_0x9f80d5[_0x6027f5(0x764)] = 0x0] = _0x6027f5(0x764), _0x9f80d5[_0x9f80d5[_0x6027f5(0x765)] = 0x1] = _0x6027f5(0x765), _0x9f80d5[_0x9f80d5[_0x6027f5(0x766)] = 0x2] = _0x6027f5(0x766), _0x9f80d5[_0x9f80d5[_0x6027f5(0x767)] = 0x3] = _0x6027f5(0x767);
    class _0x5d5c8f extends _0xe2444c {
        constructor() {
            var _0x15d8eb = _0x6027f5;
            super(), this['_shaderValues'][_0x15d8eb(0x4a8)](_0x5d5c8f[_0x15d8eb(0x6d7)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), this['_shaderValues'][_0x15d8eb(0x4a8)](_0x5d5c8f[_0x15d8eb(0x768)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), this[_0x15d8eb(0x4e2)]['setVector'](_0x5d5c8f[_0x15d8eb(0x6f2)], new _0x5b8e4e(0x1, 0x1, 0x0, 0x0)), this[_0x15d8eb(0x4e2)][_0x15d8eb(0x4a3)](_0x5d5c8f['SMOOTHNESS'], 0.5), this['_shaderValues']['setNumber'](_0x5d5c8f['SMOOTHNESSSCALE'], 0x1), this[_0x15d8eb(0x4e2)][_0x15d8eb(0x4a3)](_0x5d5c8f[_0x15d8eb(0x769)], 0x1), this[_0x15d8eb(0x4e2)][_0x15d8eb(0x4a3)](_0x5d5c8f[_0x15d8eb(0x76a)], 0x1), this['_shaderValues']['setNumber'](_0x5d5c8f['PARALLAXSCALE'], 0.001), this[_0x15d8eb(0x4e2)][_0x15d8eb(0x4a3)](_0xe2444c[_0x15d8eb(0x6a0)], 0.5), this[_0x15d8eb(0x730)] = _0x18be32['PBRRenderMode'][_0x15d8eb(0x764)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x199ed7 = _0x6027f5;
            _0x5d5c8f[_0x199ed7(0x76b)] = _0x3a9f31['getDefineByName'](_0x199ed7(0x70a)), _0x5d5c8f['SHADERDEFINE_NORMALTEXTURE'] = _0x3a9f31[_0x199ed7(0x510)](_0x199ed7(0x70b)), _0x5d5c8f[_0x199ed7(0x76c)] = _0x3a9f31[_0x199ed7(0x510)]('PARALLAXTEXTURE'), _0x5d5c8f[_0x199ed7(0x76d)] = _0x3a9f31['getDefineByName'](_0x199ed7(0x76e)), _0x5d5c8f[_0x199ed7(0x76f)] = _0x3a9f31['getDefineByName'](_0x199ed7(0x770)), _0x5d5c8f['SHADERDEFINE_EMISSIONTEXTURE'] = _0x3a9f31[_0x199ed7(0x510)](_0x199ed7(0x771)), _0x5d5c8f[_0x199ed7(0x772)] = _0x3a9f31['getDefineByName']('TRANSPARENTBLEND'), _0x5d5c8f['SHADERDEFINE_LAYA_PBR_BRDF_HIGH'] = _0x3a9f31[_0x199ed7(0x510)]('LAYA_PBR_BRDF_HIGH'), _0x5d5c8f[_0x199ed7(0x773)] = _0x3a9f31[_0x199ed7(0x510)](_0x199ed7(0x774));
        }
        get ['albedoColor']() {
            var _0x586d56 = _0x6027f5;
            return this['_shaderValues'][_0x586d56(0x4a7)](_0x5d5c8f[_0x586d56(0x6d7)]);
        }
        set [_0x6027f5(0x6e5)](_0x3b75fa) {
            var _0x2c2c22 = _0x6027f5;
            this[_0x2c2c22(0x4e2)][_0x2c2c22(0x4a8)](_0x5d5c8f[_0x2c2c22(0x6d7)], _0x3b75fa);
        }
        get [_0x6027f5(0x775)]() {
            var _0x1ea151 = _0x6027f5;
            return this[_0x1ea151(0x4e2)]['getTexture'](_0x5d5c8f[_0x1ea151(0x70a)]);
        }
        set ['albedoTexture'](_0x264548) {
            var _0x4f8135 = _0x6027f5;
            _0x264548 ? this[_0x4f8135(0x4e2)][_0x4f8135(0x49a)](_0x5d5c8f['SHADERDEFINE_ALBEDOTEXTURE']) : this[_0x4f8135(0x4e2)][_0x4f8135(0x49b)](_0x5d5c8f[_0x4f8135(0x76b)]), this[_0x4f8135(0x4e2)]['setTexture'](_0x5d5c8f[_0x4f8135(0x70a)], _0x264548);
        }
        get [_0x6027f5(0x70c)]() {
            var _0x4dd84e = _0x6027f5;
            return this[_0x4dd84e(0x4e2)]['getTexture'](_0x5d5c8f['NORMALTEXTURE']);
        }
        set [_0x6027f5(0x70c)](_0x38536c) {
            var _0x2c26cf = _0x6027f5;
            _0x38536c ? this[_0x2c26cf(0x4e2)][_0x2c26cf(0x49a)](_0x5d5c8f[_0x2c26cf(0x776)]) : this['_shaderValues'][_0x2c26cf(0x49b)](_0x5d5c8f['SHADERDEFINE_NORMALTEXTURE']), this[_0x2c26cf(0x4e2)][_0x2c26cf(0x4ac)](_0x5d5c8f['NORMALTEXTURE'], _0x38536c);
        }
        get [_0x6027f5(0x777)]() {
            var _0x4a5822 = _0x6027f5;
            return this[_0x4a5822(0x4e2)][_0x4a5822(0x4a2)](_0x5d5c8f['NORMALSCALE']);
        }
        set [_0x6027f5(0x777)](_0x7c53e2) {
            var _0x5a0f49 = _0x6027f5;
            this[_0x5a0f49(0x4e2)][_0x5a0f49(0x4a3)](_0x5d5c8f[_0x5a0f49(0x76a)], _0x7c53e2);
        }
        get ['parallaxTexture']() {
            var _0xb477da = _0x6027f5;
            return this[_0xb477da(0x4e2)]['getTexture'](_0x5d5c8f[_0xb477da(0x778)]);
        }
        set [_0x6027f5(0x779)](_0x2887cd) {
            var _0x3defb7 = _0x6027f5;
            _0x2887cd ? this['_shaderValues'][_0x3defb7(0x49a)](_0x5d5c8f[_0x3defb7(0x76c)]) : this[_0x3defb7(0x4e2)][_0x3defb7(0x49b)](_0x5d5c8f[_0x3defb7(0x76c)]), this[_0x3defb7(0x4e2)]['setTexture'](_0x5d5c8f[_0x3defb7(0x778)], _0x2887cd);
        }
        get [_0x6027f5(0x77a)]() {
            var _0x4c199c = _0x6027f5;
            return this[_0x4c199c(0x4e2)][_0x4c199c(0x4a2)](_0x5d5c8f[_0x4c199c(0x77b)]);
        }
        set [_0x6027f5(0x77a)](_0x1992a3) {
            var _0x76dd4f = _0x6027f5;
            this[_0x76dd4f(0x4e2)]['setNumber'](_0x5d5c8f['PARALLAXSCALE'], Math[_0x76dd4f(0x20c)](0.005, Math[_0x76dd4f(0x212)](0.08, _0x1992a3)));
        }
        get ['occlusionTexture']() {
            var _0x2954d1 = _0x6027f5;
            return this[_0x2954d1(0x4e2)][_0x2954d1(0x4ae)](_0x5d5c8f[_0x2954d1(0x76e)]);
        }
        set ['occlusionTexture'](_0x251418) {
            var _0x421410 = _0x6027f5;
            _0x251418 ? this[_0x421410(0x4e2)][_0x421410(0x49a)](_0x5d5c8f[_0x421410(0x76d)]) : this['_shaderValues']['removeDefine'](_0x5d5c8f[_0x421410(0x76d)]), this[_0x421410(0x4e2)][_0x421410(0x4ac)](_0x5d5c8f[_0x421410(0x76e)], _0x251418);
        }
        get ['occlusionTextureStrength']() {
            var _0x4928c0 = _0x6027f5;
            return this['_shaderValues'][_0x4928c0(0x4a2)](_0x5d5c8f[_0x4928c0(0x769)]);
        }
        set [_0x6027f5(0x77c)](_0x1b1d0e) {
            var _0x59a955 = _0x6027f5;
            this['_shaderValues']['setNumber'](_0x5d5c8f[_0x59a955(0x769)], Math[_0x59a955(0x20c)](0x0, Math[_0x59a955(0x212)](0x1, _0x1b1d0e)));
        }
        get [_0x6027f5(0x77d)]() {
            var _0x13b863 = _0x6027f5;
            return this[_0x13b863(0x4e2)][_0x13b863(0x4a2)](_0x5d5c8f['SMOOTHNESS']);
        }
        set [_0x6027f5(0x77d)](_0x6f1e61) {
            var _0x8ad626 = _0x6027f5;
            this[_0x8ad626(0x4e2)]['setNumber'](_0x5d5c8f[_0x8ad626(0x77e)], Math[_0x8ad626(0x20c)](0x0, Math[_0x8ad626(0x212)](0x1, _0x6f1e61)));
        }
        get [_0x6027f5(0x77f)]() {
            var _0x11b5d0 = _0x6027f5;
            return this[_0x11b5d0(0x4e2)][_0x11b5d0(0x4a2)](_0x5d5c8f[_0x11b5d0(0x780)]);
        }
        set ['smoothnessTextureScale'](_0x4d189c) {
            var _0x370f18 = _0x6027f5;
            this[_0x370f18(0x4e2)][_0x370f18(0x4a3)](_0x5d5c8f[_0x370f18(0x780)], Math['max'](0x0, Math[_0x370f18(0x212)](0x1, _0x4d189c)));
        }
        get ['enableEmission']() {
            return this['_shaderValues']['hasDefine'](_0x5d5c8f['SHADERDEFINE_EMISSION']);
        }
        set [_0x6027f5(0x781)](_0x2a8ebc) {
            var _0x26bec9 = _0x6027f5;
            _0x2a8ebc ? this[_0x26bec9(0x4e2)][_0x26bec9(0x49a)](_0x5d5c8f[_0x26bec9(0x76f)]) : this['_shaderValues']['removeDefine'](_0x5d5c8f[_0x26bec9(0x76f)]);
        }
        get [_0x6027f5(0x782)]() {
            var _0x583dd6 = _0x6027f5;
            return this[_0x583dd6(0x4e2)]['getVector'](_0x5d5c8f[_0x583dd6(0x768)]);
        }
        set [_0x6027f5(0x782)](_0x25057b) {
            var _0x124085 = _0x6027f5;
            this[_0x124085(0x4e2)]['setVector'](_0x5d5c8f[_0x124085(0x768)], _0x25057b);
        }
        get ['emissionTexture']() {
            var _0x25c826 = _0x6027f5;
            return this['_shaderValues'][_0x25c826(0x4ae)](_0x5d5c8f[_0x25c826(0x771)]);
        }
        set ['emissionTexture'](_0xeefbb1) {
            var _0x87ef92 = _0x6027f5;
            _0xeefbb1 ? this[_0x87ef92(0x4e2)][_0x87ef92(0x49a)](_0x5d5c8f[_0x87ef92(0x783)]) : this[_0x87ef92(0x4e2)]['removeDefine'](_0x5d5c8f[_0x87ef92(0x783)]), this[_0x87ef92(0x4e2)][_0x87ef92(0x4ac)](_0x5d5c8f[_0x87ef92(0x771)], _0xeefbb1);
        }
        get [_0x6027f5(0x6f3)]() {
            var _0x1caa9e = _0x6027f5;
            return this[_0x1caa9e(0x4e2)]['getVector'](_0x5d5c8f[_0x1caa9e(0x6f2)]);
        }
        set [_0x6027f5(0x6f3)](_0x4e337d) {
            var _0x3f7581 = _0x6027f5;
            _0x4e337d ? this[_0x3f7581(0x4e2)][_0x3f7581(0x4a8)](_0x5d5c8f[_0x3f7581(0x6f2)], _0x4e337d) : this[_0x3f7581(0x4e2)]['getVector'](_0x5d5c8f[_0x3f7581(0x6f2)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        set [_0x6027f5(0x730)](_0x5dcb62) {
            var _0x29b71f = _0x6027f5;
            switch (_0x5dcb62) {
            case _0x18be32[_0x29b71f(0x763)][_0x29b71f(0x764)]:
                this[_0x29b71f(0x68c)] = !0x1, this[_0x29b71f(0x68a)] = _0xe2444c[_0x29b71f(0x68b)], this[_0x29b71f(0x699)] = !0x0, this['cull'] = _0x47a097[_0x29b71f(0x6b7)], this[_0x29b71f(0x696)] = _0x47a097[_0x29b71f(0x6b8)], this[_0x29b71f(0x698)] = _0x47a097['DEPTHTEST_LESS'], this['_shaderValues']['removeDefine'](_0x5d5c8f[_0x29b71f(0x772)]);
                break;
            case _0x18be32['PBRRenderMode'][_0x29b71f(0x765)]:
                this[_0x29b71f(0x68a)] = _0xe2444c[_0x29b71f(0x6b6)], this[_0x29b71f(0x68c)] = !0x0, this[_0x29b71f(0x699)] = !0x0, this[_0x29b71f(0x697)] = _0x47a097[_0x29b71f(0x6b7)], this[_0x29b71f(0x696)] = _0x47a097['BLEND_DISABLE'], this[_0x29b71f(0x698)] = _0x47a097[_0x29b71f(0x6fa)], this[_0x29b71f(0x4e2)][_0x29b71f(0x49b)](_0x5d5c8f[_0x29b71f(0x772)]);
                break;
            case _0x18be32['PBRRenderMode']['Fade']:
                this[_0x29b71f(0x68a)] = _0xe2444c[_0x29b71f(0x6ad)], this[_0x29b71f(0x68c)] = !0x1, this[_0x29b71f(0x699)] = !0x1, this[_0x29b71f(0x697)] = _0x47a097['CULL_BACK'], this[_0x29b71f(0x696)] = _0x47a097[_0x29b71f(0x6c7)], this[_0x29b71f(0x69b)] = _0x47a097[_0x29b71f(0x6cc)], this[_0x29b71f(0x69c)] = _0x47a097[_0x29b71f(0x6fc)], this[_0x29b71f(0x698)] = _0x47a097[_0x29b71f(0x6fa)], this[_0x29b71f(0x4e2)][_0x29b71f(0x49b)](_0x5d5c8f[_0x29b71f(0x772)]);
                break;
            case _0x18be32[_0x29b71f(0x763)][_0x29b71f(0x767)]:
                this[_0x29b71f(0x68a)] = _0xe2444c[_0x29b71f(0x6ad)], this['alphaTest'] = !0x1, this[_0x29b71f(0x699)] = !0x1, this['cull'] = _0x47a097[_0x29b71f(0x6b7)], this[_0x29b71f(0x696)] = _0x47a097[_0x29b71f(0x6c7)], this[_0x29b71f(0x69b)] = _0x47a097[_0x29b71f(0x6ba)], this['blendDst'] = _0x47a097[_0x29b71f(0x6fc)], this['depthTest'] = _0x47a097[_0x29b71f(0x6fa)], this['_shaderValues'][_0x29b71f(0x49a)](_0x5d5c8f[_0x29b71f(0x772)]);
                break;
            default:
                throw new Error(_0x29b71f(0x784));
            }
        }
    }
    _0x5d5c8f[_0x6027f5(0x70a)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x739)), _0x5d5c8f[_0x6027f5(0x6d7)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x73a)), _0x5d5c8f[_0x6027f5(0x6f2)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x73b)), _0x5d5c8f[_0x6027f5(0x70b)] = _0x3a9f31['propertyNameToID']('u_NormalTexture'), _0x5d5c8f[_0x6027f5(0x76a)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x785)), _0x5d5c8f['SMOOTHNESS'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x786)), _0x5d5c8f[_0x6027f5(0x780)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x787)), _0x5d5c8f['OCCLUSIONTEXTURE'] = _0x3a9f31[_0x6027f5(0x553)]('u_OcclusionTexture'), _0x5d5c8f[_0x6027f5(0x769)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x788)), _0x5d5c8f[_0x6027f5(0x778)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x789)), _0x5d5c8f[_0x6027f5(0x77b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x78a)), _0x5d5c8f[_0x6027f5(0x771)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x78b)), _0x5d5c8f[_0x6027f5(0x768)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x78c)), _0x5d5c8f[_0x6027f5(0x78d)] = _0x18be32[_0x6027f5(0x221)]['High'];
    var _0x54eafa, _0x8a1a54, _0x276727, _0x4200bf, _0x5e3c58, _0x23952c, _0x161139, _0x195ec0, _0x3f6464, _0xabc5fe, _0x50ebd1, _0x460a4c, _0x4fdbf7, _0x22ad5f, _0x45efea = _0x6027f5(0x78e), _0x420443 = _0x6027f5(0x78f);
    class _0x38b639 {
        constructor() {
            var _0x472c87 = _0x6027f5;
            this[_0x472c87(0x790)] = -0x1;
        }
    }
    class _0x230f9c extends _0x387b86[_0x6027f5(0x324)] {
        constructor(_0x13449d, _0x11c944, _0x3887da, _0x59d83c, _0x2f4cf0) {
            var _0x5198e5 = _0x6027f5;
            super(), this[_0x5198e5(0x791)] = [], this[_0x5198e5(0x5f9)] = -0x1, this[_0x5198e5(0x5fb)] = -0x1, this['_vs'] = _0x13449d, this[_0x5198e5(0x792)] = _0x11c944, this[_0x5198e5(0x520)] = _0x3887da, this[_0x5198e5(0x521)] = _0x59d83c, this['_shaderPass'] = _0x2f4cf0, this[_0x5198e5(0x793)] = {}, this[_0x5198e5(0x3f8)](), this['lock'] = !0x0;
        }
        [_0x6027f5(0x3f8)]() {
            var _0xeeadbd = _0x6027f5, _0x4dc1bf = _0x387b86[_0xeeadbd(0x303)][_0xeeadbd(0x304)];
            for (var _0x42bd65 in (this[_0xeeadbd(0x794)] = _0x4dc1bf[_0xeeadbd(0x795)](), this[_0xeeadbd(0x796)] = this[_0xeeadbd(0x797)](_0x4dc1bf, this[_0xeeadbd(0x798)], _0x4dc1bf[_0xeeadbd(0x799)]), this[_0xeeadbd(0x79a)] = this[_0xeeadbd(0x797)](_0x4dc1bf, this[_0xeeadbd(0x792)], _0x4dc1bf[_0xeeadbd(0x79b)]), _0x4dc1bf[_0xeeadbd(0x79c)](this[_0xeeadbd(0x794)], this[_0xeeadbd(0x796)]), _0x4dc1bf[_0xeeadbd(0x79c)](this[_0xeeadbd(0x794)], this[_0xeeadbd(0x79a)]), this[_0xeeadbd(0x520)]))
                _0x4dc1bf['bindAttribLocation'](this[_0xeeadbd(0x794)], this[_0xeeadbd(0x520)][_0x42bd65], _0x42bd65);
            if (_0x4dc1bf['linkProgram'](this[_0xeeadbd(0x794)]), !_0x387b86[_0xeeadbd(0x31a)][_0xeeadbd(0x31b)] && _0x3a9f31[_0xeeadbd(0x545)] && !_0x4dc1bf[_0xeeadbd(0x79d)](this['_program'], _0x4dc1bf['LINK_STATUS']))
                throw _0x4dc1bf['getProgramInfoLog'](this[_0xeeadbd(0x794)]);
            var _0x20c9cc = [], _0x476587 = [], _0x3af678 = [], _0x4c60bf = [], _0x339e72 = [];
            this[_0xeeadbd(0x79e)] = [];
            var _0x5d7e0b, _0x38e55c, _0x5ad2c3, _0x510fcb = _0x4dc1bf[_0xeeadbd(0x79d)](this[_0xeeadbd(0x794)], _0x4dc1bf['ACTIVE_UNIFORMS']);
            for (_0x387b86[_0xeeadbd(0x40a)][_0xeeadbd(0x79f)](_0x4dc1bf, this['_program']), this[_0xeeadbd(0x7a0)] = 0x0, _0x38e55c = 0x0; _0x38e55c < _0x510fcb; _0x38e55c++) {
                var _0x56625a = _0x4dc1bf['getActiveUniform'](this[_0xeeadbd(0x794)], _0x38e55c), _0x356ec6 = _0x56625a[_0xeeadbd(0x2b7)];
                (_0x5d7e0b = new _0x38b639())[_0xeeadbd(0x7a1)] = _0x4dc1bf[_0xeeadbd(0x7a2)](this[_0xeeadbd(0x794)], _0x356ec6), _0x356ec6[_0xeeadbd(0x2f9)](_0xeeadbd(0x7a3)) > 0x0 ? (_0x5d7e0b[_0xeeadbd(0x2b7)] = _0x356ec6 = _0x356ec6[_0xeeadbd(0x2fa)](0x0, _0x356ec6['length'] - 0x3), _0x5d7e0b[_0xeeadbd(0x7a4)] = !0x0) : (_0x5d7e0b[_0xeeadbd(0x2b7)] = _0x356ec6, _0x5d7e0b[_0xeeadbd(0x7a4)] = !0x1), _0x5d7e0b[_0xeeadbd(0x2cc)] = _0x56625a[_0xeeadbd(0x2cc)], this[_0xeeadbd(0x7a5)](_0x5d7e0b);
                var _0x58a422 = this[_0xeeadbd(0x521)][_0x356ec6];
                if (null != _0x58a422)
                    switch (_0x5d7e0b['dataOffset'] = _0x3a9f31[_0xeeadbd(0x553)](_0x356ec6), _0x58a422) {
                    case _0x3a9f31['PERIOD_CUSTOM']:
                        _0x339e72[_0xeeadbd(0x2ac)](_0x5d7e0b);
                        break;
                    case _0x3a9f31[_0xeeadbd(0x541)]:
                        _0x4c60bf[_0xeeadbd(0x2ac)](_0x5d7e0b);
                        break;
                    case _0x3a9f31[_0xeeadbd(0x542)]:
                        _0x3af678[_0xeeadbd(0x2ac)](_0x5d7e0b);
                        break;
                    case _0x3a9f31[_0xeeadbd(0x7a6)]:
                        _0x476587[_0xeeadbd(0x2ac)](_0x5d7e0b);
                        break;
                    case _0x3a9f31[_0xeeadbd(0x543)]:
                        _0x20c9cc[_0xeeadbd(0x2ac)](_0x5d7e0b);
                        break;
                    default:
                        throw new Error(_0xeeadbd(0x7a7));
                    }
                else
                    _0x5d7e0b[_0xeeadbd(0x7a8)] = _0x3a9f31[_0xeeadbd(0x553)](_0x356ec6), this['_globaluniformMap'][_0x356ec6] = _0x3a9f31['PERIOD_SCENE'], _0x20c9cc['push'](_0x5d7e0b);
            }
            for (this[_0xeeadbd(0x5e2)] = _0x387b86[_0xeeadbd(0x303)][_0xeeadbd(0x304)][_0xeeadbd(0x7a9)](0x4 * _0x20c9cc['length'] * 0x5 + 0x4, 0x40, !0x0), _0x38e55c = 0x0, _0x5ad2c3 = _0x20c9cc['length']; _0x38e55c < _0x5ad2c3; _0x38e55c++)
                this[_0xeeadbd(0x5e2)][_0xeeadbd(0x7aa)](_0x20c9cc[_0x38e55c]);
            for (this[_0xeeadbd(0x5fd)] = _0x387b86[_0xeeadbd(0x303)][_0xeeadbd(0x304)][_0xeeadbd(0x7a9)](0x4 * _0x476587[_0xeeadbd(0x205)] * 0x5 + 0x4, 0x40, !0x0), _0x38e55c = 0x0, _0x5ad2c3 = _0x476587[_0xeeadbd(0x205)]; _0x38e55c < _0x5ad2c3; _0x38e55c++)
                this[_0xeeadbd(0x5fd)][_0xeeadbd(0x7aa)](_0x476587[_0x38e55c]);
            for (this['_spriteUniformParamsMap'] = _0x387b86[_0xeeadbd(0x303)][_0xeeadbd(0x304)][_0xeeadbd(0x7a9)](0x4 * _0x3af678[_0xeeadbd(0x205)] * 0x5 + 0x4, 0x40, !0x0), _0x38e55c = 0x0, _0x5ad2c3 = _0x3af678[_0xeeadbd(0x205)]; _0x38e55c < _0x5ad2c3; _0x38e55c++)
                this[_0xeeadbd(0x5e3)][_0xeeadbd(0x7aa)](_0x3af678[_0x38e55c]);
            for (this[_0xeeadbd(0x56b)] = _0x387b86[_0xeeadbd(0x303)][_0xeeadbd(0x304)]['createCommandEncoder'](0x4 * _0x4c60bf[_0xeeadbd(0x205)] * 0x5 + 0x4, 0x40, !0x0), _0x38e55c = 0x0, _0x5ad2c3 = _0x4c60bf['length']; _0x38e55c < _0x5ad2c3; _0x38e55c++)
                this[_0xeeadbd(0x56b)][_0xeeadbd(0x7aa)](_0x4c60bf[_0x38e55c]);
            for (this[_0xeeadbd(0x79e)][_0xeeadbd(0x205)] = _0x339e72['length'], _0x38e55c = 0x0, _0x5ad2c3 = _0x339e72['length']; _0x38e55c < _0x5ad2c3; _0x38e55c++) {
                var _0xda012d = _0x339e72[_0x38e55c];
                this[_0xeeadbd(0x79e)][_0xda012d[_0xeeadbd(0x7a8)]] = _0xda012d;
            }
            var _0x532ad4 = this['_shaderPass'][_0xeeadbd(0x7ab)];
            for (var _0x25e7b2 in _0x532ad4)
                this[_0xeeadbd(0x791)][_0x532ad4[_0x25e7b2]] = _0x3a9f31[_0xeeadbd(0x553)](_0x25e7b2);
        }
        [_0x6027f5(0x7ac)](_0x241151, _0xe59173) {
            var _0x386b8c = this['_stateParamsMap'][_0xe59173];
            return null == _0x386b8c ? null : _0x241151[_0x386b8c];
        }
        ['_disposeResource']() {
            var _0x54c8eb = _0x6027f5;
            _0x387b86[_0x54c8eb(0x303)]['instance'][_0x54c8eb(0x7ad)](this[_0x54c8eb(0x796)]), _0x387b86[_0x54c8eb(0x303)][_0x54c8eb(0x304)][_0x54c8eb(0x7ad)](this[_0x54c8eb(0x79a)]), _0x387b86[_0x54c8eb(0x303)]['instance'][_0x54c8eb(0x7ae)](this[_0x54c8eb(0x794)]), this[_0x54c8eb(0x796)] = this[_0x54c8eb(0x79a)] = this[_0x54c8eb(0x794)] = null, this[_0x54c8eb(0x433)](0x0), this[_0x54c8eb(0x7a0)] = 0x0;
        }
        [_0x6027f5(0x7a5)](_0x39730d) {
            var _0x33666f = _0x6027f5, _0x3ee567 = _0x387b86[_0x33666f(0x303)]['instance'];
            _0x39730d[_0x33666f(0x7af)] = this;
            var _0x3900b4 = _0x39730d[_0x33666f(0x7a4)];
            switch (_0x39730d[_0x33666f(0x2cc)]) {
            case _0x3ee567[_0x33666f(0x7b0)]:
                _0x39730d['fun'] = this['_uniform1i'], _0x39730d['uploadedValue'] = new Array(0x1);
                break;
            case _0x3ee567[_0x33666f(0x7b1)]:
                _0x39730d[_0x33666f(0x7b2)] = _0x3900b4 ? this[_0x33666f(0x7b3)] : this['_uniform1i'], _0x39730d['uploadedValue'] = new Array(0x1);
                break;
            case _0x3ee567[_0x33666f(0x465)]:
                _0x39730d[_0x33666f(0x7b2)] = _0x3900b4 ? this[_0x33666f(0x7b4)] : this[_0x33666f(0x7b5)], _0x39730d[_0x33666f(0x7b6)] = new Array(0x1);
                break;
            case _0x3ee567[_0x33666f(0x7b7)]:
                _0x39730d[_0x33666f(0x7b2)] = _0x3900b4 ? this[_0x33666f(0x7b8)] : this[_0x33666f(0x7b9)], _0x39730d[_0x33666f(0x7b6)] = new Array(0x2);
                break;
            case _0x3ee567[_0x33666f(0x7ba)]:
                _0x39730d[_0x33666f(0x7b2)] = _0x3900b4 ? this['_uniform_vec3v'] : this['_uniform_vec3'], _0x39730d[_0x33666f(0x7b6)] = new Array(0x3);
                break;
            case _0x3ee567['FLOAT_VEC4']:
                _0x39730d['fun'] = _0x3900b4 ? this[_0x33666f(0x7bb)] : this[_0x33666f(0x7bc)], _0x39730d[_0x33666f(0x7b6)] = new Array(0x4);
                break;
            case _0x3ee567[_0x33666f(0x7bd)]:
                _0x39730d[_0x33666f(0x7b2)] = this[_0x33666f(0x7be)];
                break;
            case _0x3ee567[_0x33666f(0x7bf)]:
                _0x39730d[_0x33666f(0x7b2)] = this[_0x33666f(0x7c0)];
                break;
            case _0x3ee567[_0x33666f(0x7c1)]:
                _0x39730d['fun'] = _0x3900b4 ? this[_0x33666f(0x7c2)] : this[_0x33666f(0x7c3)];
                break;
            case _0x3ee567[_0x33666f(0x7c4)]:
            case _0x3ee567[_0x33666f(0x7c5)]:
                _0x3ee567[_0x33666f(0x7c6)](_0x39730d['location'], this['_curActTexIndex']), _0x39730d[_0x33666f(0x790)] = _0x387b86[_0x33666f(0x40a)]['_glTextureIDs'][this[_0x33666f(0x7a0)]++], _0x39730d[_0x33666f(0x7b2)] = this[_0x33666f(0x7c7)];
                break;
            case 0x8b5f:
                _0x3ee567[_0x33666f(0x7c6)](_0x39730d[_0x33666f(0x7a1)], this['_curActTexIndex']), _0x39730d[_0x33666f(0x790)] = _0x387b86[_0x33666f(0x40a)]['_glTextureIDs'][this['_curActTexIndex']++], _0x39730d[_0x33666f(0x7b2)] = this[_0x33666f(0x7c8)];
                break;
            case _0x3ee567[_0x33666f(0x7c9)]:
                _0x3ee567['uniform1i'](_0x39730d[_0x33666f(0x7a1)], this[_0x33666f(0x7a0)]), _0x39730d['textureID'] = _0x387b86[_0x33666f(0x40a)]['_glTextureIDs'][this[_0x33666f(0x7a0)]++], _0x39730d[_0x33666f(0x7b2)] = this[_0x33666f(0x7ca)];
                break;
            default:
                throw new Error(_0x33666f(0x7cb));
            }
        }
        [_0x6027f5(0x797)](_0x850d86, _0x4d3e96, _0x1cf733) {
            var _0x356c7e = _0x6027f5, _0x598b4c = _0x850d86[_0x356c7e(0x7cc)](_0x1cf733);
            if (_0x850d86[_0x356c7e(0x7cd)](_0x598b4c, _0x4d3e96), _0x850d86[_0x356c7e(0x7ce)](_0x598b4c), _0x3a9f31[_0x356c7e(0x545)] && !_0x850d86[_0x356c7e(0x7cf)](_0x598b4c, _0x850d86[_0x356c7e(0x7d0)]))
                throw _0x850d86[_0x356c7e(0x7d1)](_0x598b4c);
            return _0x598b4c;
        }
        [_0x6027f5(0x7b5)](_0x5e60e7, _0x1773da) {
            var _0x498465 = _0x6027f5, _0x110d45 = _0x5e60e7['uploadedValue'];
            return _0x110d45[0x0] !== _0x1773da ? (_0x387b86[_0x498465(0x303)]['instance'][_0x498465(0x7d2)](_0x5e60e7[_0x498465(0x7a1)], _0x110d45[0x0] = _0x1773da), 0x1) : 0x0;
        }
        [_0x6027f5(0x7b4)](_0x367e36, _0xde2a0a) {
            var _0x1d638b = _0x6027f5;
            if (_0xde2a0a[_0x1d638b(0x205)] < 0x4) {
                var _0x275919 = _0x367e36[_0x1d638b(0x7b6)];
                return _0x275919[0x0] !== _0xde2a0a[0x0] || _0x275919[0x1] !== _0xde2a0a[0x1] || _0x275919[0x2] !== _0xde2a0a[0x2] || _0x275919[0x3] !== _0xde2a0a[0x3] ? (_0x387b86['LayaGL'][_0x1d638b(0x304)]['uniform1fv'](_0x367e36[_0x1d638b(0x7a1)], _0xde2a0a), _0x275919[0x0] = _0xde2a0a[0x0], _0x275919[0x1] = _0xde2a0a[0x1], _0x275919[0x2] = _0xde2a0a[0x2], _0x275919[0x3] = _0xde2a0a[0x3], 0x1) : 0x0;
            }
            return _0x387b86[_0x1d638b(0x303)]['instance']['uniform1fv'](_0x367e36[_0x1d638b(0x7a1)], _0xde2a0a), 0x1;
        }
        [_0x6027f5(0x7b9)](_0x4aad78, _0x17f8ae) {
            var _0x56957b = _0x6027f5, _0x33fc99 = _0x4aad78['uploadedValue'];
            return _0x33fc99[0x0] !== _0x17f8ae['x'] || _0x33fc99[0x1] !== _0x17f8ae['y'] ? (_0x387b86[_0x56957b(0x303)][_0x56957b(0x304)][_0x56957b(0x7d3)](_0x4aad78['location'], _0x33fc99[0x0] = _0x17f8ae['x'], _0x33fc99[0x1] = _0x17f8ae['y']), 0x1) : 0x0;
        }
        [_0x6027f5(0x7b8)](_0x122db0, _0x123f6f) {
            var _0xdf1ba0 = _0x6027f5;
            if (_0x123f6f[_0xdf1ba0(0x205)] < 0x2) {
                var _0x18dc58 = _0x122db0['uploadedValue'];
                return _0x18dc58[0x0] !== _0x123f6f[0x0] || _0x18dc58[0x1] !== _0x123f6f[0x1] || _0x18dc58[0x2] !== _0x123f6f[0x2] || _0x18dc58[0x3] !== _0x123f6f[0x3] ? (_0x387b86[_0xdf1ba0(0x303)][_0xdf1ba0(0x304)][_0xdf1ba0(0x7d4)](_0x122db0[_0xdf1ba0(0x7a1)], _0x123f6f), _0x18dc58[0x0] = _0x123f6f[0x0], _0x18dc58[0x1] = _0x123f6f[0x1], _0x18dc58[0x2] = _0x123f6f[0x2], _0x18dc58[0x3] = _0x123f6f[0x3], 0x1) : 0x0;
            }
            return _0x387b86[_0xdf1ba0(0x303)]['instance']['uniform2fv'](_0x122db0['location'], _0x123f6f), 0x1;
        }
        [_0x6027f5(0x7d5)](_0x3af2d8, _0x518d78) {
            var _0xf3f133 = _0x6027f5, _0x35a055 = _0x3af2d8[_0xf3f133(0x7b6)];
            return _0x35a055[0x0] !== _0x518d78['x'] || _0x35a055[0x1] !== _0x518d78['y'] || _0x35a055[0x2] !== _0x518d78['z'] ? (_0x387b86[_0xf3f133(0x303)][_0xf3f133(0x304)][_0xf3f133(0x7d6)](_0x3af2d8['location'], _0x35a055[0x0] = _0x518d78['x'], _0x35a055[0x1] = _0x518d78['y'], _0x35a055[0x2] = _0x518d78['z']), 0x1) : 0x0;
        }
        ['_uniform_vec3v'](_0x4ed7a8, _0xf616d2) {
            var _0x55fed1 = _0x6027f5;
            return _0x387b86['LayaGL']['instance'][_0x55fed1(0x7d7)](_0x4ed7a8['location'], _0xf616d2), 0x1;
        }
        [_0x6027f5(0x7bc)](_0xd38fc3, _0x57c7d1) {
            var _0xdb123c = _0x6027f5, _0x82b14 = _0xd38fc3[_0xdb123c(0x7b6)];
            return _0x82b14[0x0] !== _0x57c7d1['x'] || _0x82b14[0x1] !== _0x57c7d1['y'] || _0x82b14[0x2] !== _0x57c7d1['z'] || _0x82b14[0x3] !== _0x57c7d1['w'] ? (_0x387b86[_0xdb123c(0x303)][_0xdb123c(0x304)][_0xdb123c(0x7d8)](_0xd38fc3[_0xdb123c(0x7a1)], _0x82b14[0x0] = _0x57c7d1['x'], _0x82b14[0x1] = _0x57c7d1['y'], _0x82b14[0x2] = _0x57c7d1['z'], _0x82b14[0x3] = _0x57c7d1['w']), 0x1) : 0x0;
        }
        [_0x6027f5(0x7bb)](_0x238fd6, _0x647700) {
            var _0x16b12b = _0x6027f5;
            return _0x387b86['LayaGL'][_0x16b12b(0x304)][_0x16b12b(0x7d9)](_0x238fd6['location'], _0x647700), 0x1;
        }
        [_0x6027f5(0x7be)](_0x339944, _0x5f102c) {
            var _0x43ff8b = _0x6027f5;
            return _0x387b86[_0x43ff8b(0x303)][_0x43ff8b(0x304)][_0x43ff8b(0x7da)](_0x339944[_0x43ff8b(0x7a1)], !0x1, _0x5f102c), 0x1;
        }
        [_0x6027f5(0x7c0)](_0x2adab9, _0x5ecbef) {
            var _0x576ca3 = _0x6027f5;
            return _0x387b86[_0x576ca3(0x303)][_0x576ca3(0x304)]['uniformMatrix3fv'](_0x2adab9['location'], !0x1, _0x5ecbef), 0x1;
        }
        [_0x6027f5(0x7c3)](_0x381f59, _0x45ae86) {
            var _0x557b9e = _0x6027f5, _0x356ef6 = _0x45ae86[_0x557b9e(0x1fe)];
            return _0x387b86['LayaGL'][_0x557b9e(0x304)][_0x557b9e(0x7db)](_0x381f59['location'], !0x1, _0x356ef6), 0x1;
        }
        [_0x6027f5(0x7c2)](_0x56cf8d, _0x44eecb) {
            var _0x38ee91 = _0x6027f5;
            return _0x387b86[_0x38ee91(0x303)][_0x38ee91(0x304)][_0x38ee91(0x7db)](_0x56cf8d['location'], !0x1, _0x44eecb), 0x1;
        }
        ['_uniform1i'](_0x2ecb7a, _0x31b075) {
            var _0x412a89 = _0x6027f5, _0x41482f = _0x2ecb7a[_0x412a89(0x7b6)];
            return _0x41482f[0x0] !== _0x31b075 ? (_0x387b86[_0x412a89(0x303)][_0x412a89(0x304)]['uniform1i'](_0x2ecb7a[_0x412a89(0x7a1)], _0x41482f[0x0] = _0x31b075), 0x1) : 0x0;
        }
        [_0x6027f5(0x7b3)](_0x1df1a8, _0x316c17) {
            var _0x54bfdc = _0x6027f5;
            return _0x387b86[_0x54bfdc(0x303)]['instance'][_0x54bfdc(0x7dc)](_0x1df1a8[_0x54bfdc(0x7a1)], _0x316c17), 0x1;
        }
        [_0x6027f5(0x7dd)](_0x425797, _0x5af4c0) {
            var _0x3324ca = _0x6027f5, _0x14ead4 = _0x425797['uploadedValue'];
            return _0x14ead4[0x0] !== _0x5af4c0[0x0] || _0x14ead4[0x1] !== _0x5af4c0[0x1] ? (_0x387b86[_0x3324ca(0x303)][_0x3324ca(0x304)][_0x3324ca(0x7de)](_0x425797[_0x3324ca(0x7a1)], _0x14ead4[0x0] = _0x5af4c0[0x0], _0x14ead4[0x1] = _0x5af4c0[0x1]), 0x1) : 0x0;
        }
        [_0x6027f5(0x7df)](_0x3da5c1, _0x2e0346) {
            var _0x21adac = _0x6027f5;
            return _0x387b86['LayaGL'][_0x21adac(0x304)][_0x21adac(0x7e0)](_0x3da5c1[_0x21adac(0x7a1)], _0x2e0346), 0x1;
        }
        [_0x6027f5(0x7e1)](_0x1bc5b7, _0x41cfff) {
            var _0x5d1d5d = _0x6027f5, _0x43fa07 = _0x1bc5b7[_0x5d1d5d(0x7b6)];
            return _0x43fa07[0x0] !== _0x41cfff[0x0] || _0x43fa07[0x1] !== _0x41cfff[0x1] || _0x43fa07[0x2] !== _0x41cfff[0x2] ? (_0x387b86['LayaGL'][_0x5d1d5d(0x304)][_0x5d1d5d(0x7e2)](_0x1bc5b7[_0x5d1d5d(0x7a1)], _0x43fa07[0x0] = _0x41cfff[0x0], _0x43fa07[0x1] = _0x41cfff[0x1], _0x43fa07[0x2] = _0x41cfff[0x2]), 0x1) : 0x0;
        }
        ['_uniform_vec3vi'](_0x37d128, _0x23ec28) {
            var _0x12c34a = _0x6027f5;
            return _0x387b86['LayaGL'][_0x12c34a(0x304)][_0x12c34a(0x7e3)](_0x37d128['location'], _0x23ec28), 0x1;
        }
        [_0x6027f5(0x7e4)](_0x4df34f, _0x23e355) {
            var _0x5bb0b1 = _0x6027f5, _0x4c6b06 = _0x4df34f[_0x5bb0b1(0x7b6)];
            return _0x4c6b06[0x0] !== _0x23e355[0x0] || _0x4c6b06[0x1] !== _0x23e355[0x1] || _0x4c6b06[0x2] !== _0x23e355[0x2] || _0x4c6b06[0x3] !== _0x23e355[0x3] ? (_0x387b86[_0x5bb0b1(0x303)]['instance']['uniform4i'](_0x4df34f[_0x5bb0b1(0x7a1)], _0x4c6b06[0x0] = _0x23e355[0x0], _0x4c6b06[0x1] = _0x23e355[0x1], _0x4c6b06[0x2] = _0x23e355[0x2], _0x4c6b06[0x3] = _0x23e355[0x3]), 0x1) : 0x0;
        }
        ['_uniform_vec4vi'](_0x149896, _0x4d8a09) {
            var _0x30e92b = _0x6027f5;
            return _0x387b86[_0x30e92b(0x303)][_0x30e92b(0x304)][_0x30e92b(0x7e5)](_0x149896[_0x30e92b(0x7a1)], _0x4d8a09), 0x1;
        }
        [_0x6027f5(0x7c7)](_0x33d337, _0x2d1d55) {
            var _0x49accc = _0x6027f5, _0x2d3fed = _0x2d1d55[_0x49accc(0x4d4)]() || _0x2d1d55[_0x49accc(0x3f6)][_0x49accc(0x4d4)](), _0x2ac28d = _0x387b86[_0x49accc(0x303)][_0x49accc(0x304)];
            return _0x387b86[_0x49accc(0x40a)]['activeTexture'](_0x2ac28d, _0x33d337[_0x49accc(0x790)]), _0x387b86[_0x49accc(0x40a)][_0x49accc(0x40b)](_0x2ac28d, _0x2ac28d['TEXTURE_2D'], _0x2d3fed), 0x0;
        }
        [_0x6027f5(0x7c8)](_0x5b6cc4, _0x3dd2b9) {
            var _0x6de276 = _0x6027f5, _0x31444d = _0x3dd2b9[_0x6de276(0x4d4)]() || _0x3dd2b9[_0x6de276(0x3f6)][_0x6de276(0x4d4)](), _0x333a74 = _0x387b86['LayaGL'][_0x6de276(0x304)];
            return _0x387b86[_0x6de276(0x40a)][_0x6de276(0x7e6)](_0x333a74, _0x5b6cc4[_0x6de276(0x790)]), _0x387b86[_0x6de276(0x40a)]['bindTexture'](_0x333a74, WebGL2RenderingContext[_0x6de276(0x7e7)], _0x31444d), 0x0;
        }
        [_0x6027f5(0x7ca)](_0x19d74b, _0x1cccc3) {
            var _0x42b34d = _0x6027f5, _0x5224e9 = _0x1cccc3[_0x42b34d(0x4d4)]() || _0x1cccc3[_0x42b34d(0x3f6)][_0x42b34d(0x4d4)](), _0x2e6012 = _0x387b86[_0x42b34d(0x303)]['instance'];
            return _0x387b86['WebGLContext'][_0x42b34d(0x7e6)](_0x2e6012, _0x19d74b['textureID']), _0x387b86[_0x42b34d(0x40a)]['bindTexture'](_0x2e6012, _0x2e6012[_0x42b34d(0x7e8)], _0x5224e9), 0x0;
        }
        [_0x6027f5(0x452)]() {
            var _0x57cf6f = _0x6027f5;
            return _0x387b86[_0x57cf6f(0x40a)][_0x57cf6f(0x79f)](_0x387b86['LayaGL'][_0x57cf6f(0x304)], this['_program']);
        }
        ['uploadUniforms'](_0x15590d, _0x3caeee, _0xf1567d) {
            var _0x4fadbf = _0x6027f5;
            _0x387b86[_0x4fadbf(0x4dc)][_0x4fadbf(0x7e9)] += _0x387b86[_0x4fadbf(0x7ea)][_0x4fadbf(0x7eb)](_0x387b86[_0x4fadbf(0x303)]['instance'], _0x15590d, _0x3caeee, _0xf1567d);
        }
        [_0x6027f5(0x56c)](_0x2cb219) {
            var _0x192777 = _0x6027f5, _0x2897b8 = _0x387b86[_0x192777(0x303)]['instance'], _0x3ba3fa = this[_0x192777(0x7ec)][_0x192777(0x7ed)], _0x5de792 = _0x2cb219[_0x192777(0x319)](), _0x353d49 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31['RENDER_STATE_DEPTH_WRITE']), _0x203817 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x53e)]), _0x3e8e3a = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31['RENDER_STATE_BLEND']);
            switch (null == _0x353d49 && (_0x353d49 = _0x3ba3fa[_0x192777(0x699)]), null == _0x203817 && (_0x203817 = _0x3ba3fa['depthTest']), null == _0x3e8e3a && (_0x3e8e3a = _0x3ba3fa['blend']), _0x387b86[_0x192777(0x40a)]['setDepthMask'](_0x2897b8, _0x353d49), _0x203817 === _0x47a097['DEPTHTEST_OFF'] ? _0x387b86['WebGLContext'][_0x192777(0x7ee)](_0x2897b8, !0x1) : (_0x387b86[_0x192777(0x40a)][_0x192777(0x7ee)](_0x2897b8, !0x0), _0x387b86[_0x192777(0x40a)][_0x192777(0x7ef)](_0x2897b8, _0x203817)), _0x3e8e3a) {
            case _0x47a097[_0x192777(0x6b8)]:
                _0x387b86[_0x192777(0x40a)][_0x192777(0x7f0)](_0x2897b8, !0x1);
                break;
            case _0x47a097[_0x192777(0x6c7)]:
                var _0x13a6ae = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31['RENDER_STATE_BLEND_EQUATION']), _0xbce427 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x7f1)]), _0x1be75f = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x537)]);
                null == _0x13a6ae && (_0x13a6ae = _0x3ba3fa[_0x192777(0x6c0)]), null == _0xbce427 && (_0xbce427 = _0x3ba3fa[_0x192777(0x6b9)]), null == _0x1be75f && (_0x1be75f = _0x3ba3fa[_0x192777(0x69a)]), _0x387b86[_0x192777(0x40a)][_0x192777(0x7f0)](_0x2897b8, !0x0), _0x387b86[_0x192777(0x40a)][_0x192777(0x7f2)](_0x2897b8, _0x13a6ae), _0x387b86[_0x192777(0x40a)][_0x192777(0x7f3)](_0x2897b8, _0xbce427, _0x1be75f);
                break;
            case _0x47a097[_0x192777(0x7f4)]:
                var _0x44e7df = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x53c)]), _0x2482a8 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x53d)]), _0x54cf39 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31['RENDER_STATE_BLEND_SRC_RGB']), _0x41ea07 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x538)]), _0x31c5a2 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x539)]), _0x4e9173 = this[_0x192777(0x7ac)](_0x5de792, _0x3a9f31[_0x192777(0x53a)]);
                null == _0x44e7df && (_0x44e7df = _0x3ba3fa[_0x192777(0x6c1)]), null == _0x2482a8 && (_0x2482a8 = _0x3ba3fa[_0x192777(0x6c2)]), null == _0x54cf39 && (_0x54cf39 = _0x3ba3fa[_0x192777(0x6bb)]), null == _0x41ea07 && (_0x41ea07 = _0x3ba3fa[_0x192777(0x6c5)]), null == _0x31c5a2 && (_0x31c5a2 = _0x3ba3fa[_0x192777(0x6bc)]), null == _0x4e9173 && (_0x4e9173 = _0x3ba3fa[_0x192777(0x6bd)]), _0x387b86[_0x192777(0x40a)][_0x192777(0x7f0)](_0x2897b8, !0x0), _0x387b86[_0x192777(0x40a)][_0x192777(0x7f5)](_0x2897b8, _0x44e7df, _0x2482a8), _0x387b86[_0x192777(0x40a)][_0x192777(0x7f6)](_0x2897b8, _0x54cf39, _0x41ea07, _0x31c5a2, _0x4e9173);
            }
        }
        [_0x6027f5(0x5e4)](_0xcb6aeb, _0x56f93e, _0xe5a4ec) {
            var _0x50b678 = _0x6027f5, _0x3ddd5f, _0x6926cd = _0x387b86[_0x50b678(0x303)]['instance'], _0x25658c = this[_0x50b678(0x7ec)]['renderState'], _0x11742d = _0xcb6aeb[_0x50b678(0x319)](), _0x2a15fb = this[_0x50b678(0x7ac)](_0x11742d, _0x3a9f31[_0x50b678(0x536)]);
            switch (null == _0x2a15fb && (_0x2a15fb = _0x25658c[_0x50b678(0x697)]), _0x2a15fb) {
            case _0x47a097[_0x50b678(0x6c6)]:
                _0x387b86[_0x50b678(0x40a)][_0x50b678(0x7f7)](_0x6926cd, !0x1);
                break;
            case _0x47a097['CULL_FRONT']:
                _0x387b86['WebGLContext'][_0x50b678(0x7f7)](_0x6926cd, !0x0), _0x3ddd5f = _0x56f93e ? _0xe5a4ec ? _0x6926cd[_0x50b678(0x7f8)] : _0x6926cd['CW'] : _0xe5a4ec ? _0x6926cd['CW'] : _0x6926cd[_0x50b678(0x7f8)], _0x387b86[_0x50b678(0x40a)][_0x50b678(0x7f9)](_0x6926cd, _0x3ddd5f);
                break;
            case _0x47a097[_0x50b678(0x6b7)]:
                _0x387b86[_0x50b678(0x40a)][_0x50b678(0x7f7)](_0x6926cd, !0x0), _0x3ddd5f = _0x56f93e ? _0xe5a4ec ? _0x6926cd['CW'] : _0x6926cd[_0x50b678(0x7f8)] : _0xe5a4ec ? _0x6926cd[_0x50b678(0x7f8)] : _0x6926cd['CW'], _0x387b86[_0x50b678(0x40a)][_0x50b678(0x7f9)](_0x6926cd, _0x3ddd5f);
            }
        }
        [_0x6027f5(0x7fa)](_0xdfde07, _0x1e3e37) {
            var _0x59dd06 = _0x6027f5;
            _0x387b86[_0x59dd06(0x4dc)][_0x59dd06(0x7e9)] += _0x387b86['LayaGLRunner'][_0x59dd06(0x7fa)](_0x387b86[_0x59dd06(0x303)][_0x59dd06(0x304)], this[_0x59dd06(0x79e)], _0xdfde07, _0x1e3e37);
        }
        [_0x6027f5(0x7fb)](_0xf6dd2b, _0x538e2b) {
            var _0x1ce30b = _0x6027f5;
            return _0x387b86[_0x1ce30b(0x303)][_0x1ce30b(0x304)]['uniformMatrix2fvEx'](_0xf6dd2b[_0x1ce30b(0x7a1)], !0x1, _0x538e2b), 0x1;
        }
        [_0x6027f5(0x7fc)](_0x414c4e, _0x40a53c) {
            var _0x366460 = _0x6027f5;
            return _0x387b86[_0x366460(0x303)][_0x366460(0x304)][_0x366460(0x7fd)](_0x414c4e['location'], !0x1, _0x40a53c), 0x1;
        }
        [_0x6027f5(0x7fe)](_0x18d4b6, _0x3dad1f) {
            var _0x488ac7 = _0x6027f5;
            return _0x387b86['LayaGL'][_0x488ac7(0x304)][_0x488ac7(0x7ff)](_0x18d4b6[_0x488ac7(0x7a1)], !0x1, _0x3dad1f), 0x1;
        }
    }
    class _0x2af7e0 {
        constructor() {
            var _0x51a7c7 = _0x6027f5;
            this[_0x51a7c7(0x1fe)] = [], this[_0x51a7c7(0x205)] = 0x0;
        }
        [_0x6027f5(0x800)](_0x480bd3) {
            var _0xb5467e = _0x6027f5;
            this['length'] === this[_0xb5467e(0x1fe)][_0xb5467e(0x205)] ? this[_0xb5467e(0x1fe)][_0xb5467e(0x2ac)](_0x480bd3) : this[_0xb5467e(0x1fe)][this[_0xb5467e(0x205)]] = _0x480bd3;
        }
        ['add'](_0x12726a) {
            var _0x41fdb2 = _0x6027f5;
            this[_0x41fdb2(0x205)] === this[_0x41fdb2(0x1fe)][_0x41fdb2(0x205)] ? this[_0x41fdb2(0x1fe)][_0x41fdb2(0x2ac)](_0x12726a) : this['elements'][this[_0x41fdb2(0x205)]] = _0x12726a, this['length']++;
        }
    }
    class _0x3a62b0 extends _0x2af7e0 {
        constructor() {
            super();
        }
        [_0x6027f5(0x207)](_0x333f62) {
            var _0x5a998f = _0x6027f5;
            if (-0x1 !== _0x333f62[_0x5a998f(0x801)]())
                throw _0x5a998f(0x802) + _0x333f62 + _0x5a998f(0x803);
            this['_add'](_0x333f62), _0x333f62[_0x5a998f(0x804)](this[_0x5a998f(0x205)]++);
        }
        ['remove'](_0x270551) {
            var _0x238ac6 = _0x6027f5, _0x47a278 = _0x270551['_getIndexInList']();
            if (this[_0x238ac6(0x205)]--, _0x47a278 !== this['length']) {
                var _0x203183 = this[_0x238ac6(0x1fe)][this[_0x238ac6(0x205)]];
                this['elements'][_0x47a278] = _0x203183, _0x203183['_setIndexInList'](_0x47a278);
            }
            _0x270551[_0x238ac6(0x804)](-0x1);
        }
        [_0x6027f5(0x44c)]() {
            var _0x3e9a53 = _0x6027f5;
            for (var _0x2e3232 = this['elements'], _0x49b20d = 0x0, _0x523522 = this[_0x3e9a53(0x205)]; _0x49b20d < _0x523522; _0x49b20d++)
                _0x2e3232[_0x49b20d]['_setIndexInList'](-0x1);
            this[_0x3e9a53(0x205)] = 0x0;
        }
        [_0x6027f5(0x805)]() {
            var _0x5316fe = _0x6027f5;
            this[_0x5316fe(0x1fe)] = null, this[_0x5316fe(0x205)] = 0x0;
        }
    }
    class _0x441c6d {
        constructor(_0x38a2c1 = 0x1, _0x52fc4a = 0x1, _0x1e64a5 = 0x1, _0x365c80 = 0x1) {
            this['r'] = _0x38a2c1, this['g'] = _0x52fc4a, this['b'] = _0x1e64a5, this['a'] = _0x365c80;
        }
        static ['gammaToLinearSpace'](_0x1079c0) {
            var _0x5d2f49 = _0x6027f5;
            return _0x1079c0 <= 0.04045 ? _0x1079c0 / 12.92 : _0x1079c0 < 0x1 ? Math['pow']((_0x1079c0 + 0.055) / 1.055, 2.4) : Math[_0x5d2f49(0x2ff)](_0x1079c0, 2.4);
        }
        static ['linearToGammaSpace'](_0x1976cf) {
            var _0x1e320a = _0x6027f5;
            return _0x1976cf <= 0x0 ? 0x0 : _0x1976cf <= 0.0031308 ? 12.92 * _0x1976cf : _0x1976cf <= 0x1 ? 1.055 * Math[_0x1e320a(0x2ff)](_0x1976cf, 0.41666) - 0.055 : Math[_0x1e320a(0x2ff)](_0x1976cf, 0.41666);
        }
        [_0x6027f5(0x806)](_0x1cff08) {
            var _0x4173ee = _0x6027f5;
            _0x1cff08['r'] = _0x441c6d[_0x4173ee(0x807)](this['r']), _0x1cff08['g'] = _0x441c6d[_0x4173ee(0x807)](this['g']), _0x1cff08['b'] = _0x441c6d[_0x4173ee(0x807)](this['b']);
        }
        ['toGamma'](_0x151fbc) {
            var _0x3b556a = _0x6027f5;
            _0x151fbc['r'] = _0x441c6d[_0x3b556a(0x808)](this['r']), _0x151fbc['g'] = _0x441c6d[_0x3b556a(0x808)](this['g']), _0x151fbc['b'] = _0x441c6d[_0x3b556a(0x808)](this['b']);
        }
        [_0x6027f5(0x1fc)](_0x5843dc) {
            var _0x1285f3 = _0x5843dc;
            _0x1285f3['r'] = this['r'], _0x1285f3['g'] = this['g'], _0x1285f3['b'] = this['b'], _0x1285f3['a'] = this['a'];
        }
        ['clone']() {
            var _0x1d87bc = _0x6027f5, _0x3067da = new _0x441c6d();
            return this[_0x1d87bc(0x1fc)](_0x3067da), _0x3067da;
        }
        ['forNativeElement']() {
        }
    }
    _0x441c6d['RED'] = new _0x441c6d(0x1, 0x0, 0x0, 0x1), _0x441c6d[_0x6027f5(0x809)] = new _0x441c6d(0x0, 0x1, 0x0, 0x1), _0x441c6d[_0x6027f5(0x80a)] = new _0x441c6d(0x0, 0x0, 0x1, 0x1), _0x441c6d[_0x6027f5(0x80b)] = new _0x441c6d(0x0, 0x1, 0x1, 0x1), _0x441c6d[_0x6027f5(0x80c)] = new _0x441c6d(0x1, 0.92, 0.016, 0x1), _0x441c6d[_0x6027f5(0x80d)] = new _0x441c6d(0x1, 0x0, 0x1, 0x1), _0x441c6d[_0x6027f5(0x80e)] = new _0x441c6d(0.5, 0.5, 0.5, 0x1), _0x441c6d['WHITE'] = new _0x441c6d(0x1, 0x1, 0x1, 0x1), _0x441c6d[_0x6027f5(0x80f)] = new _0x441c6d(0x0, 0x0, 0x0, 0x1);
    class _0x3217fb {
    }
    class _0x191220 {
    }
    class _0x1b438f {
        static [_0x6027f5(0x230)]() {
        }
        static [_0x6027f5(0x810)](_0x4ad6bd, _0x38e68e) {
            var _0x154076 = _0x6027f5;
            for (var _0x57ff72 = _0x4ad6bd['elements'], _0x1d166f = 0x0, _0x170edf = _0x4ad6bd['length']; _0x1d166f < _0x170edf; _0x1d166f++) {
                var _0x333c97 = _0x1b438f[_0x154076(0x811)];
                _0x333c97['r'] = 0x0, _0x333c97['g'] = 0x1, _0x333c97['b'] = 0x0, _0x333c97['a'] = 0x1, _0x3acd08[_0x154076(0x308)](_0x38e68e, _0x57ff72[_0x1d166f][_0x154076(0x812)][_0x154076(0x813)](), _0x333c97);
            }
        }
        static ['_traversalCulling'](_0x18e095, _0x4e70fe, _0x30e102, _0xa5cf11, _0x22ebf3, _0x447a60, _0x2b82de) {
            var _0x2d7a56 = _0x6027f5;
            for (var _0xde0fb7 = _0xa5cf11[_0x2d7a56(0x1fe)], _0x5816fb = _0x18e095['boundFrustum'], _0x47c7f7 = _0x18e095[_0x2d7a56(0x5a2)], _0x4a99c8 = _0x18e095[_0x2d7a56(0x814)], _0x2e8f4c = _0x387b86['Stat'][_0x2d7a56(0x815)], _0x136822 = 0x0, _0x146ac9 = _0xa5cf11[_0x2d7a56(0x205)]; _0x136822 < _0x146ac9; _0x136822++) {
                var _0x55812d = _0xde0fb7[_0x136822];
                if ((_0x2b82de ? _0x55812d[_0x2d7a56(0x816)] && _0x55812d['_enable'] : 0x0 != (Math[_0x2d7a56(0x2ff)](0x2, _0x55812d[_0x2d7a56(0x3dc)][_0x2d7a56(0x5c2)]) & _0x4a99c8) && _0x55812d[_0x2d7a56(0x65a)]) && (_0x387b86[_0x2d7a56(0x4dc)]['frustumCulling']++, !_0x18e095[_0x2d7a56(0x817)] || _0x55812d[_0x2d7a56(0x818)](_0x5816fb, _0x30e102))) {
                    _0x55812d[_0x2d7a56(0x819)] = _0x2e8f4c, _0x55812d[_0x2d7a56(0x81a)] = _0x3697cd['distance'](_0x55812d[_0x2d7a56(0x812)][_0x2d7a56(0x81b)](), _0x47c7f7);
                    for (var _0x2f2ba3 = _0x55812d[_0x2d7a56(0x600)], _0x4c6880 = 0x0, _0xb15936 = _0x2f2ba3['length']; _0x4c6880 < _0xb15936; _0x4c6880++)
                        _0x2f2ba3[_0x4c6880][_0x2d7a56(0x388)](_0x4e70fe, _0x30e102, _0x22ebf3, _0x447a60);
                }
            }
        }
        static [_0x6027f5(0x81c)](_0x317412, _0xd91c6f, _0x22a1ad, _0x3011d7, _0x5b7571, _0x53b448) {
            var _0x4bfd97 = _0x6027f5, _0x435c52 = _0xd91c6f[_0x4bfd97(0x81d)], _0x431fc3 = _0xd91c6f[_0x4bfd97(0x81e)], _0x4c89a0 = _0xd91c6f[_0x4bfd97(0x81f)];
            _0xd91c6f[_0x4bfd97(0x820)]();
            var _0x1c9469 = _0xd91c6f[_0x4bfd97(0x821)];
            if (_0x1c9469 && (_0x1c9469[_0x4bfd97(0x822)](), _0x1c9469[_0x4bfd97(0x823)](), _0x1c9469['getCollidingWithFrustum'](_0x317412, _0x22a1ad, _0x3011d7, _0x5b7571, _0x53b448)), _0x1b438f[_0x4bfd97(0x824)](_0x317412, _0xd91c6f, _0x22a1ad, _0x4c89a0, _0x3011d7, _0x5b7571, _0x53b448), _0x1b438f[_0x4bfd97(0x24a)]) {
                var _0x50c734 = _0xd91c6f[_0x4bfd97(0x825)];
                _0x50c734['clear'](), _0x1c9469 && (_0x1c9469[_0x4bfd97(0x826)](_0x50c734), _0x1c9469[_0x4bfd97(0x827)](_0x50c734)), _0x1b438f[_0x4bfd97(0x810)](_0x4c89a0, _0x50c734);
            }
            var _0x361118 = _0x435c52[_0x4bfd97(0x1fe)][_0x4bfd97(0x205)];
            _0x361118 > 0x0 && _0x435c52[_0x4bfd97(0x828)](0x0, _0x361118 - 0x1), (_0x361118 = _0x431fc3['elements']['length']) > 0x0 && _0x431fc3[_0x4bfd97(0x828)](0x0, _0x361118 - 0x1);
        }
        static [_0x6027f5(0x829)](_0x53e9b6, _0x18f057, _0x2678b4) {
            var _0x1d691a = _0x6027f5;
            _0x18f057[_0x1d691a(0x820)]();
            var _0x306222 = _0x18f057[_0x1d691a(0x81d)];
            if (_0x18f057[_0x1d691a(0x821)]) {
                let _0x47587e = _0x18f057[_0x1d691a(0x821)];
                _0x47587e[_0x1d691a(0x822)](), _0x47587e[_0x1d691a(0x823)](), _0x47587e[_0x1d691a(0x394)][_0x1d691a(0x82a)](_0x53e9b6, _0x2678b4);
            } else
                for (var _0x2b6efb = _0x18f057[_0x1d691a(0x81f)], _0x5f5424 = _0x53e9b6[_0x1d691a(0x5a2)], _0x577d06 = _0x2b6efb[_0x1d691a(0x1fe)], _0x390834 = _0x387b86[_0x1d691a(0x4dc)][_0x1d691a(0x815)], _0x1bc6c3 = 0x0, _0x4b41e8 = _0x2b6efb[_0x1d691a(0x205)]; _0x1bc6c3 < _0x4b41e8; _0x1bc6c3++) {
                    var _0x5cd39d = _0x577d06[_0x1bc6c3];
                    if (_0x5cd39d[_0x1d691a(0x816)] && _0x5cd39d['_enable']) {
                        if (_0x387b86['Stat'][_0x1d691a(0x82b)]++, _0x1b438f[_0x1d691a(0x82c)](_0x5cd39d[_0x1d691a(0x812)], _0x53e9b6)) {
                            _0x5cd39d['_renderMark'] = _0x390834, _0x5cd39d[_0x1d691a(0x81a)] = _0x3697cd[_0x1d691a(0x20a)](_0x5cd39d[_0x1d691a(0x812)]['getCenter'](), _0x5f5424);
                            for (var _0x25444a = _0x5cd39d[_0x1d691a(0x600)], _0x232f2e = 0x0, _0x2d45f2 = _0x25444a[_0x1d691a(0x205)]; _0x232f2e < _0x2d45f2; _0x232f2e++)
                                _0x25444a[_0x232f2e][_0x1d691a(0x388)](_0x18f057, _0x2678b4, null, null);
                        }
                    }
                }
            return _0x306222[_0x1d691a(0x1fe)][_0x1d691a(0x205)] > 0x0;
        }
        static [_0x6027f5(0x82c)](_0x43324a, _0x16924f) {
            var _0x481e48 = _0x6027f5;
            for (var _0x1f4bcb = _0x16924f[_0x481e48(0x82d)], _0x113d05 = _0x16924f[_0x481e48(0x82e)], _0x5baf59 = _0x43324a['getMin'](), _0x4433c7 = _0x43324a['getMax'](), _0x5858f0 = _0x5baf59['x'], _0x471bfa = _0x5baf59['y'], _0x445ab0 = _0x5baf59['z'], _0x48242d = _0x4433c7['x'], _0x3f2cb6 = _0x4433c7['y'], _0x3df519 = _0x4433c7['z'], _0x1fad7c = !0x0, _0x2d055f = 0x0; _0x2d055f < _0x1f4bcb; _0x2d055f++) {
                var _0x5bd5ae = _0x113d05[_0x2d055f], _0x5b1b08 = _0x5bd5ae[_0x481e48(0x82f)];
                if (_0x5bd5ae[_0x481e48(0x20a)] + _0x5b1b08['x'] * (_0x5b1b08['x'] < 0x0 ? _0x5858f0 : _0x48242d) + _0x5b1b08['y'] * (_0x5b1b08['y'] < 0x0 ? _0x471bfa : _0x3f2cb6) + _0x5b1b08['z'] * (_0x5b1b08['z'] < 0x0 ? _0x445ab0 : _0x3df519) < 0x0) {
                    _0x1fad7c = !0x1;
                    break;
                }
            }
            return _0x1fad7c;
        }
        static ['cullingSpotShadow'](_0xbc4cdc, _0x3cfa14, _0x597d3a) {
            var _0xd97139 = _0x6027f5, _0x598624 = _0x3cfa14['_opaqueQueue'];
            if (_0x3cfa14['_clearRenderQueue'](), _0x3cfa14[_0xd97139(0x821)]) {
                let _0x418b98 = _0x3cfa14['_octree'];
                _0x418b98[_0xd97139(0x822)](), _0x418b98[_0xd97139(0x823)](), _0x418b98[_0xd97139(0x830)](_0xbc4cdc, _0x597d3a, null, null, !0x0);
            } else
                for (var _0x2ad0b9 = _0x3cfa14[_0xd97139(0x81f)], _0x85534a = _0x2ad0b9[_0xd97139(0x1fe)], _0x2d342f = _0x387b86['Stat'][_0xd97139(0x815)], _0x394ff3 = 0x0, _0x234372 = _0x2ad0b9[_0xd97139(0x205)]; _0x394ff3 < _0x234372; _0x394ff3++) {
                    var _0x2d6890 = _0x85534a[_0x394ff3];
                    if (_0x2d6890[_0xd97139(0x816)] && _0x2d6890[_0xd97139(0x65a)] && _0x2d6890[_0xd97139(0x818)](_0xbc4cdc[_0xd97139(0x831)], _0x597d3a)) {
                        var _0x1bbc4c = _0x2d6890['bounds'];
                        _0x2d6890[_0xd97139(0x819)] = _0x2d342f, _0x2d6890[_0xd97139(0x81a)] = _0x3697cd['distance'](_0x1bbc4c[_0xd97139(0x81b)](), _0xbc4cdc[_0xd97139(0x5a2)]);
                        for (var _0x26a19c = _0x2d6890[_0xd97139(0x600)], _0x1bc2b9 = 0x0, _0x53f5bf = _0x26a19c[_0xd97139(0x205)]; _0x1bc2b9 < _0x53f5bf; _0x1bc2b9++)
                            _0x26a19c[_0x1bc2b9][_0xd97139(0x388)](_0x3cfa14, _0x597d3a, null, null);
                    }
                }
            return _0x598624[_0xd97139(0x1fe)][_0xd97139(0x205)] > 0x0;
        }
        static [_0x6027f5(0x832)](_0x302728, _0x1b286a, _0x66ad5f, _0x4c14c5, _0x100913, _0x53f785) {
            var _0x166055 = _0x6027f5, _0x559fd9, _0x152010, _0x1ca0de, _0x2806c8 = _0x1b286a[_0x166055(0x81d)], _0x3d0dea = _0x1b286a[_0x166055(0x81e)];
            _0x1b286a[_0x166055(0x820)]();
            var _0x27a4e4 = _0x4c14c5[_0x166055(0x205)], _0x479c98 = _0x4c14c5[_0x166055(0x1fe)];
            for (_0x559fd9 = 0x0; _0x559fd9 < _0x27a4e4; _0x559fd9++)
                _0x479c98[_0x559fd9][_0x166055(0x812)], _0x479c98[_0x559fd9][_0x166055(0x833)] && _0x479c98[_0x559fd9][_0x166055(0x833)](_0x66ad5f);
            _0x1b438f[_0x166055(0x834)](_0x302728[_0x166055(0x835)], _0x1b438f[_0x166055(0x836)], _0x1b286a['_cullingBufferIndices'], _0x27a4e4, _0x1b286a[_0x166055(0x837)]);
            var _0x57c5f1 = _0x387b86[_0x166055(0x4dc)][_0x166055(0x815)], _0x43af7c = _0x66ad5f[_0x166055(0x64c)][_0x166055(0x3d5)][_0x166055(0x5a2)];
            for (_0x559fd9 = 0x0; _0x559fd9 < _0x27a4e4; _0x559fd9++) {
                var _0x2debb9 = _0x479c98[_0x559fd9];
                if (!_0x302728[_0x166055(0x817)] || _0x302728[_0x166055(0x838)](_0x2debb9[_0x166055(0x3dc)][_0x166055(0x5c2)]) && _0x2debb9['_enable'] && _0x1b286a[_0x166055(0x837)][_0x559fd9]) {
                    _0x2debb9[_0x166055(0x819)] = _0x57c5f1, _0x2debb9[_0x166055(0x81a)] = _0x3697cd['distance'](_0x2debb9[_0x166055(0x812)][_0x166055(0x81b)](), _0x43af7c);
                    var _0x2d5102 = _0x2debb9[_0x166055(0x600)];
                    for (_0x152010 = 0x0, _0x1ca0de = _0x2d5102[_0x166055(0x205)]; _0x152010 < _0x1ca0de; _0x152010++) {
                        _0x2d5102[_0x152010][_0x166055(0x388)](_0x1b286a, _0x66ad5f, _0x100913, _0x53f785);
                    }
                }
            }
            var _0xaf2083 = _0x2806c8[_0x166055(0x1fe)][_0x166055(0x205)];
            _0xaf2083 > 0x0 && _0x2806c8[_0x166055(0x828)](0x0, _0xaf2083 - 0x1), (_0xaf2083 = _0x3d0dea['elements'][_0x166055(0x205)]) > 0x0 && _0x3d0dea[_0x166055(0x828)](0x0, _0xaf2083 - 0x1);
        }
        static ['cullingNative'](_0x1707f9, _0x35f972, _0x1bbd94, _0x73523b, _0x4839de) {
            var _0x27bb37 = _0x6027f5;
            return _0x387b86['LayaGL']['instance'][_0x27bb37(0x839)](_0x1707f9, _0x35f972, _0x1bbd94, _0x73523b, _0x4839de);
        }
    }
    _0x1b438f[_0x6027f5(0x811)] = new _0x441c6d(), _0x1b438f[_0x6027f5(0x83a)] = new _0x3217fb(), _0x1b438f[_0x6027f5(0x83b)] = new _0x191220(), _0x1b438f[_0x6027f5(0x24a)] = !0x1;
    class _0x2ed296 {
        constructor() {
            var _0x2781e9 = _0x6027f5;
            this[_0x2781e9(0x376)] = -0x1, this[_0x2781e9(0x83c)] = 0x0, this[_0x2781e9(0x83d)] = 0x0, this[_0x2781e9(0x83e)] = [];
        }
    }
    class _0x1ae54c {
        constructor(_0x5c233a, _0x401363, _0x37f9a4, _0x23e0ae) {
            var _0x21e928 = _0x6027f5;
            this[_0x21e928(0x385)] = 0x0, this[_0x21e928(0x83f)] = new _0x30a72c(), this[_0x21e928(0x840)] = _0x5c233a, this[_0x21e928(0x841)] = _0x401363, this['_zSlices'] = _0x37f9a4;
            var _0x4ac70b = _0x5c233a * _0x401363, _0x10eb6a = _0x37f9a4 * (0x1 + Math[_0x21e928(0x842)](_0x23e0ae / 0x4));
            this['_clusterTexture'] = _0x3acd08[_0x21e928(0x2dd)](_0x4ac70b, _0x10eb6a), this[_0x21e928(0x843)][_0x21e928(0x31d)] = !0x0, this[_0x21e928(0x844)] = new Float32Array(_0x4ac70b * _0x10eb6a * 0x4);
            for (var _0x26aa71 = new Array(this[_0x21e928(0x845)]), _0x2e3d99 = 0x0; _0x2e3d99 < this[_0x21e928(0x845)]; _0x2e3d99++) {
                _0x26aa71[_0x2e3d99] = new Array(this[_0x21e928(0x841)]);
                for (var _0x2a9a0f = 0x0; _0x2a9a0f < this[_0x21e928(0x841)]; _0x2a9a0f++) {
                    _0x26aa71[_0x2e3d99][_0x2a9a0f] = new Array(this[_0x21e928(0x840)]);
                    for (var _0x3747c7 = 0x0; _0x3747c7 < this[_0x21e928(0x840)]; _0x3747c7++)
                        _0x26aa71[_0x2e3d99][_0x2a9a0f][_0x3747c7] = new _0x2ed296();
                }
            }
            this['_clusterDatas'] = _0x26aa71;
        }
        [_0x6027f5(0x846)](_0x5c4724, _0x3c6372) {
            var _0x46fe41 = _0x6027f5;
            for (var _0x359a37 = this[_0x46fe41(0x847)], _0x5edb1d = this[_0x46fe41(0x385)], _0x324838 = _0x3c6372[_0x46fe41(0x848)], _0x539ed4 = _0x3c6372[_0x46fe41(0x849)]; _0x324838 < _0x539ed4; _0x324838++)
                for (var _0x48c179 = _0x3c6372[_0x46fe41(0x84a)], _0x3a0511 = _0x3c6372[_0x46fe41(0x84b)]; _0x48c179 < _0x3a0511; _0x48c179++)
                    for (var _0x4bd656 = _0x3c6372['xMin'], _0x151443 = _0x3c6372['xMax']; _0x4bd656 < _0x151443; _0x4bd656++) {
                        var _0x30fdd9 = _0x359a37[_0x324838][_0x48c179][_0x4bd656];
                        _0x30fdd9[_0x46fe41(0x376)] != _0x5edb1d && (_0x30fdd9[_0x46fe41(0x83c)] = 0x0, _0x30fdd9[_0x46fe41(0x83d)] = 0x0, _0x30fdd9[_0x46fe41(0x376)] = _0x5edb1d);
                        var _0x2b026e = _0x30fdd9[_0x46fe41(0x83e)], _0x49e1e3 = _0x30fdd9[_0x46fe41(0x83c)]++;
                        _0x49e1e3 < _0x2b026e[_0x46fe41(0x205)] ? _0x2b026e[_0x49e1e3] = _0x5c4724 : _0x2b026e[_0x46fe41(0x2ac)](_0x5c4724);
                    }
        }
        ['_placeSpotLightToClusters'](_0x34efe8, _0x47e932) {
            var _0x371b33 = _0x6027f5;
            for (var _0x44157a = this[_0x371b33(0x847)], _0x5f1e8a = this[_0x371b33(0x385)], _0x5bc7b7 = _0x47e932[_0x371b33(0x848)], _0x15c213 = _0x47e932[_0x371b33(0x849)]; _0x5bc7b7 < _0x15c213; _0x5bc7b7++)
                for (var _0x337117 = _0x47e932[_0x371b33(0x84a)], _0x3a40d9 = _0x47e932[_0x371b33(0x84b)]; _0x337117 < _0x3a40d9; _0x337117++)
                    for (var _0x423f44 = _0x47e932[_0x371b33(0x84c)], _0x1755e = _0x47e932['xMax']; _0x423f44 < _0x1755e; _0x423f44++) {
                        var _0x366517 = _0x44157a[_0x5bc7b7][_0x337117][_0x423f44];
                        _0x366517[_0x371b33(0x376)] != _0x5f1e8a && (_0x366517['pointLightCount'] = 0x0, _0x366517[_0x371b33(0x83d)] = 0x0, _0x366517[_0x371b33(0x376)] = _0x5f1e8a);
                        var _0x46bfb5 = _0x366517[_0x371b33(0x83e)], _0x363c5 = _0x366517[_0x371b33(0x83c)] + _0x366517['spotLightCount']++;
                        _0x363c5 < _0x46bfb5[_0x371b33(0x205)] ? _0x46bfb5[_0x363c5] = _0x34efe8 : _0x46bfb5['push'](_0x34efe8);
                    }
        }
        [_0x6027f5(0x84d)](_0x1beebb, _0x15ae17, _0x509378, _0x52de3d, _0x44f2d5) {
            var _0x1e7f47 = _0x6027f5, _0x54a562 = _0x1ae54c['_tempVector36'], _0x36351b = _0x1ae54c['_tempVector37'];
            _0x3697cd['cross'](_0x44f2d5, _0x15ae17, _0x54a562), _0x3697cd[_0x1e7f47(0x217)](_0x54a562, _0x15ae17, _0x36351b), _0x3697cd[_0x1e7f47(0x214)](_0x36351b, _0x36351b);
            var _0x4a9e8a = _0x509378 * Math[_0x1e7f47(0x483)](_0x52de3d), _0x32544d = _0x1beebb['x'] + _0x509378 * _0x15ae17['x'] + _0x4a9e8a * _0x36351b['x'], _0x2f9f18 = _0x1beebb['y'] + _0x509378 * _0x15ae17['y'] + _0x4a9e8a * _0x36351b['y'], _0x4c528d = _0x1beebb['z'] + _0x509378 * _0x15ae17['z'] + _0x4a9e8a * _0x36351b['z'];
            return _0x32544d * _0x44f2d5['x'] + _0x2f9f18 * _0x44f2d5['y'] + _0x4c528d * _0x44f2d5['z'] <= 0x0 || _0x1beebb['x'] * _0x44f2d5['x'] + _0x1beebb['y'] * _0x44f2d5['y'] + _0x1beebb['z'] * _0x44f2d5['z'] <= 0x0;
        }
        [_0x6027f5(0x84e)](_0x35d2c6, _0xae2187, _0x42fe1f, _0x4e4e39, _0x2a6870) {
            var _0x10a1ae = _0x6027f5, _0x619421 = _0x42fe1f['z'], _0x3ea0f1 = _0x619421 - _0x4e4e39, _0x4fb88d = _0x619421 + _0x4e4e39;
            if (_0x3ea0f1 > _0xae2187 || _0x4fb88d <= _0x35d2c6)
                return !0x1;
            var _0x361ed2 = this['_depthSliceParam'];
            return _0x2a6870[_0x10a1ae(0x848)] = Math['floor'](Math[_0x10a1ae(0x84f)](Math[_0x10a1ae(0x20c)](_0x3ea0f1, _0x35d2c6)) * _0x361ed2['x'] - _0x361ed2['y']), _0x2a6870['zMax'] = Math[_0x10a1ae(0x212)](Math['ceil'](Math[_0x10a1ae(0x84f)](_0x4fb88d) * _0x361ed2['x'] - _0x361ed2['y']), this[_0x10a1ae(0x845)]), !0x0;
        }
        [_0x6027f5(0x850)](_0x348814, _0xde1aab, _0x4e4606, _0x3e2d9a, _0x5761ec, _0x43ee42, _0xc42127) {
            var _0xf30575 = _0x6027f5, _0x27fb83 = _0x3e2d9a['x'], _0x1f2f8a = _0x3e2d9a['y'], _0x577620 = _0x3e2d9a['z'], _0x5ef300 = Math[_0xf30575(0x483)](_0x43ee42) * _0x5761ec, _0x469e60 = _0x4e4606['x'], _0x47e405 = _0x4e4606['y'], _0x43bc3b = _0x4e4606['z'], _0xe15d0f = _0x27fb83 - _0x469e60, _0x2b0743 = _0x1f2f8a - _0x47e405, _0x2269f2 = _0x577620 - _0x43bc3b, _0x2df4e5 = _0xe15d0f * _0xe15d0f + _0x2b0743 * _0x2b0743 + _0x2269f2 * _0x2269f2, _0x358539 = Math[_0xf30575(0x1f3)](0x1 - _0x2269f2 * _0x2269f2 / _0x2df4e5), _0x44804a = Math[_0xf30575(0x20c)](Math['min'](_0x43bc3b, _0x577620 - _0x358539 * _0x5ef300), _0x4e4606['z'] - _0x5761ec), _0x4960bb = Math['min'](Math[_0xf30575(0x20c)](_0x43bc3b, _0x577620 + _0x358539 * _0x5ef300), _0x4e4606['z'] + _0x5761ec);
            if (_0x44804a > _0xde1aab || _0x4960bb <= _0x348814)
                return !0x1;
            var _0x448de4 = this[_0xf30575(0x83f)];
            return _0xc42127[_0xf30575(0x848)] = Math[_0xf30575(0x24e)](Math['log2'](Math['max'](_0x44804a, _0x348814)) * _0x448de4['x'] - _0x448de4['y']), _0xc42127[_0xf30575(0x849)] = Math[_0xf30575(0x212)](Math[_0xf30575(0x842)](Math[_0xf30575(0x84f)](_0x4960bb) * _0x448de4['x'] - _0x448de4['y']), this[_0xf30575(0x845)]), !0x0;
        }
        [_0x6027f5(0x851)](_0x2184a8, _0xba30b5, _0x21dd3b, _0x4833d5, _0x4c9981, _0x41f07d, _0x2a4210) {
            var _0x14eba8 = _0x6027f5, _0x49f1c0 = _0x4c9981['z'], _0x5ac1e8 = _0x49f1c0 - _0x41f07d, _0xab19df = _0x49f1c0 + _0x41f07d;
            if (_0x5ac1e8 > _0x4833d5 || _0xab19df <= _0x21dd3b)
                return !0x1;
            var _0x47d120 = _0x4c9981['x'], _0x5d3321 = _0x47d120 - _0x41f07d, _0x3546ff = _0x47d120 + _0x41f07d;
            if (_0x5d3321 > _0x2184a8 || _0x3546ff <= -_0x2184a8)
                return !0x1;
            var _0x2a89a2 = _0x4c9981['y'], _0x2a8cfe = _0x2a89a2 - _0x41f07d, _0x4ad6b5 = _0x2a89a2 + _0x41f07d;
            if (_0x2a8cfe > _0xba30b5 || _0x4ad6b5 <= -_0xba30b5)
                return !0x1;
            var _0x3c5808 = this[_0x14eba8(0x840)], _0x733f = this[_0x14eba8(0x841)], _0x4ec287 = this['_depthSliceParam'], _0x3e7f1c = 0x2 * _0x2184a8 / _0x3c5808, _0x1b3730 = 0x2 * _0xba30b5 / _0x733f;
            return _0x2a4210[_0x14eba8(0x84c)] = Math[_0x14eba8(0x20c)](Math[_0x14eba8(0x24e)]((_0x5d3321 + _0x2184a8) / _0x3e7f1c), 0x0), _0x2a4210[_0x14eba8(0x852)] = Math[_0x14eba8(0x212)](Math[_0x14eba8(0x842)]((_0x3546ff + _0x2184a8) / _0x3e7f1c), _0x3c5808), _0x2a4210[_0x14eba8(0x84a)] = Math[_0x14eba8(0x20c)](Math[_0x14eba8(0x24e)]((_0xba30b5 - _0x4ad6b5) / _0x1b3730), 0x0), _0x2a4210[_0x14eba8(0x84b)] = Math['min'](Math[_0x14eba8(0x842)]((_0xba30b5 - _0x2a8cfe) / _0x1b3730), _0x733f), _0x2a4210[_0x14eba8(0x848)] = Math[_0x14eba8(0x24e)](Math[_0x14eba8(0x84f)](Math[_0x14eba8(0x20c)](_0x5ac1e8, _0x21dd3b)) * _0x4ec287['x'] - _0x4ec287['y']), _0x2a4210[_0x14eba8(0x849)] = Math[_0x14eba8(0x212)](Math['ceil'](Math[_0x14eba8(0x84f)](_0xab19df) * _0x4ec287['x'] - _0x4ec287['y']), this[_0x14eba8(0x845)]), !0x0;
        }
        [_0x6027f5(0x853)](_0xabba94, _0x1256d4, _0x3a8e69, _0x8b5cb9, _0x727b4f, _0x6f8d23, _0x25e07a, _0x515b97, _0x24732a) {
            var _0x4a66a3 = _0x6027f5, _0x3800ed = _0x6f8d23['x'], _0x4cff5b = _0x6f8d23['y'], _0x3976d7 = _0x6f8d23['z'], _0x23dceb = Math['tan'](_0x515b97) * _0x25e07a, _0x347aab = _0x727b4f['x'], _0x4d1972 = _0x727b4f['y'], _0x4dd089 = _0x727b4f['z'], _0x5f3453 = _0x3800ed - _0x347aab, _0x4fa8ff = _0x4cff5b - _0x4d1972, _0x90db2f = _0x3976d7 - _0x4dd089, _0x2534a6 = _0x5f3453 * _0x5f3453 + _0x4fa8ff * _0x4fa8ff + _0x90db2f * _0x90db2f, _0x1c7ef5 = Math[_0x4a66a3(0x1f3)](0x1 - _0x90db2f * _0x90db2f / _0x2534a6), _0x518799 = Math[_0x4a66a3(0x20c)](Math[_0x4a66a3(0x212)](_0x4dd089, _0x3976d7 - _0x1c7ef5 * _0x23dceb), _0x727b4f['z'] - _0x25e07a), _0x499f57 = Math['min'](Math[_0x4a66a3(0x20c)](_0x4dd089, _0x3976d7 + _0x1c7ef5 * _0x23dceb), _0x727b4f['z'] + _0x25e07a);
            if (_0x518799 > _0x8b5cb9 || _0x499f57 <= _0x3a8e69)
                return !0x1;
            var _0x1e0bfa = Math[_0x4a66a3(0x1f3)](0x1 - _0x5f3453 * _0x5f3453 / _0x2534a6), _0x2f3c19 = Math['max'](Math['min'](_0x347aab, _0x3800ed - _0x1e0bfa * _0x23dceb), _0x727b4f['x'] - _0x25e07a), _0x411226 = Math[_0x4a66a3(0x212)](Math[_0x4a66a3(0x20c)](_0x347aab, _0x3800ed + _0x1e0bfa * _0x23dceb), _0x727b4f['x'] + _0x25e07a);
            if (_0x2f3c19 > _0xabba94 || _0x411226 <= -_0xabba94)
                return !0x1;
            var _0xb2ee50 = Math['sqrt'](0x1 - _0x4fa8ff * _0x4fa8ff / _0x2534a6), _0x4f12ba = Math[_0x4a66a3(0x20c)](Math[_0x4a66a3(0x212)](_0x4d1972, _0x4cff5b - _0xb2ee50 * _0x23dceb), _0x727b4f['y'] - _0x25e07a), _0x442938 = Math['min'](Math[_0x4a66a3(0x20c)](_0x4d1972, _0x4cff5b + _0xb2ee50 * _0x23dceb), _0x727b4f['y'] + _0x25e07a);
            if (_0x4f12ba > _0x1256d4 || _0x442938 <= -_0x1256d4)
                return !0x1;
            var _0x1cc778 = this['_xSlices'], _0x1b7781 = this[_0x4a66a3(0x841)], _0x90725d = this['_depthSliceParam'], _0x3e4e9c = 0x2 * _0xabba94 / _0x1cc778, _0x605a32 = 0x2 * _0x1256d4 / _0x1b7781;
            return _0x24732a[_0x4a66a3(0x84c)] = Math[_0x4a66a3(0x20c)](Math['floor']((_0x2f3c19 + _0xabba94) / _0x3e4e9c), 0x0), _0x24732a[_0x4a66a3(0x852)] = Math[_0x4a66a3(0x212)](Math['ceil']((_0x411226 + _0xabba94) / _0x3e4e9c), _0x1cc778), _0x24732a[_0x4a66a3(0x84a)] = Math[_0x4a66a3(0x20c)](Math[_0x4a66a3(0x24e)]((_0x1256d4 - _0x442938) / _0x605a32), 0x0), _0x24732a[_0x4a66a3(0x84b)] = Math[_0x4a66a3(0x212)](Math[_0x4a66a3(0x842)]((_0x1256d4 - _0x4f12ba) / _0x605a32), _0x1b7781), _0x24732a['zMin'] = Math['floor'](Math[_0x4a66a3(0x84f)](Math['max'](_0x518799, _0x3a8e69)) * _0x90725d['x'] - _0x90725d['y']), _0x24732a[_0x4a66a3(0x849)] = Math[_0x4a66a3(0x212)](Math[_0x4a66a3(0x842)](Math[_0x4a66a3(0x84f)](_0x499f57) * _0x90725d['x'] - _0x90725d['y']), this[_0x4a66a3(0x845)]), !0x0;
        }
        ['_shrinkXYByRadiusPerspective'](_0x4cceda, _0x1bda7f, _0x4ff08e, _0xf0bf7, _0x5a14e8) {
            var _0x935ec6 = _0x6027f5, _0x194bbc, _0xea5b07, _0x24278b, _0x2ab1d3, _0x14bb11, _0x595c9a = _0x4cceda['x'], _0xec196d = _0x4cceda['y'], _0x211d88 = _0x4cceda['z'], _0x420761 = this[_0x935ec6(0x841)] + 0x1;
            for (_0x14bb11 = 0x0; _0x14bb11 < _0x420761; _0x14bb11++) {
                if (_0xec196d * (_0x55804b = _0x5a14e8[_0x14bb11])['y'] + _0x211d88 * _0x55804b['z'] < _0x1bda7f) {
                    _0xea5b07 = Math[_0x935ec6(0x20c)](0x0, _0x14bb11 - 0x1);
                    break;
                }
            }
            if (_0x14bb11 == _0x420761)
                return !0x1;
            for (_0x2ab1d3 = this[_0x935ec6(0x841)], _0x14bb11 = _0xea5b07 + 0x1; _0x14bb11 < _0x420761; _0x14bb11++) {
                if (_0xec196d * (_0x55804b = _0x5a14e8[_0x14bb11])['y'] + _0x211d88 * _0x55804b['z'] <= -_0x1bda7f) {
                    _0x2ab1d3 = Math[_0x935ec6(0x20c)](0x0, _0x14bb11);
                    break;
                }
            }
            for (_0x420761 = this[_0x935ec6(0x840)] + 0x1, _0x14bb11 = 0x0; _0x14bb11 < _0x420761; _0x14bb11++) {
                if (_0x595c9a * (_0x55804b = _0xf0bf7[_0x14bb11])['x'] + _0x211d88 * _0x55804b['z'] < _0x1bda7f) {
                    _0x194bbc = Math['max'](0x0, _0x14bb11 - 0x1);
                    break;
                }
            }
            for (_0x24278b = this[_0x935ec6(0x840)], _0x14bb11 = _0x194bbc + 0x1; _0x14bb11 < _0x420761; _0x14bb11++) {
                var _0x55804b;
                if (_0x595c9a * (_0x55804b = _0xf0bf7[_0x14bb11])['x'] + _0x211d88 * _0x55804b['z'] <= -_0x1bda7f) {
                    _0x24278b = Math['max'](0x0, _0x14bb11);
                    break;
                }
            }
            return _0x4ff08e[_0x935ec6(0x84c)] = _0x194bbc, _0x4ff08e[_0x935ec6(0x852)] = _0x24278b, _0x4ff08e[_0x935ec6(0x84a)] = _0xea5b07, _0x4ff08e['yMax'] = _0x2ab1d3, !0x0;
        }
        [_0x6027f5(0x854)](_0x427079, _0x277e45, _0x31076f, _0xb6fd4e, _0x1ddf48, _0xd08a5b, _0x1df36c) {
            var _0x451059 = _0x6027f5;
            for (var _0x102991, _0x2a8f26, _0x4caf91, _0x32b510, _0x3ffaa3 = _0x1ae54c[_0x451059(0x855)], _0x5abde1 = _0x1ddf48[_0x451059(0x84b)] + 0x1, _0x21d049 = _0x1ddf48[_0x451059(0x84a)] + 0x1; _0x21d049 < _0x5abde1; _0x21d049++)
                if (this[_0x451059(0x84d)](_0x427079, _0x277e45, _0x31076f, _0xb6fd4e, _0x1df36c[_0x21d049])) {
                    _0x2a8f26 = Math[_0x451059(0x20c)](0x0, _0x21d049 - 0x1);
                    break;
                }
            _0x32b510 = _0x1ddf48[_0x451059(0x84b)];
            for (_0x21d049 = _0x2a8f26 + 0x1; _0x21d049 < _0x5abde1; _0x21d049++) {
                var _0x2e14a1 = _0x1df36c[_0x21d049];
                if (_0x3ffaa3[_0x451059(0x1f8)](0x0, -_0x2e14a1['y'], -_0x2e14a1['z']), !this[_0x451059(0x84d)](_0x427079, _0x277e45, _0x31076f, _0xb6fd4e, _0x3ffaa3)) {
                    _0x32b510 = Math['max'](0x0, _0x21d049);
                    break;
                }
            }
            _0x5abde1 = _0x1ddf48[_0x451059(0x852)] + 0x1;
            for (_0x21d049 = _0x1ddf48[_0x451059(0x84c)] + 0x1; _0x21d049 < _0x5abde1; _0x21d049++)
                if (this[_0x451059(0x84d)](_0x427079, _0x277e45, _0x31076f, _0xb6fd4e, _0xd08a5b[_0x21d049])) {
                    _0x102991 = Math[_0x451059(0x20c)](0x0, _0x21d049 - 0x1);
                    break;
                }
            _0x4caf91 = _0x1ddf48[_0x451059(0x852)];
            for (_0x21d049 = _0x102991 + 0x1; _0x21d049 < _0x5abde1; _0x21d049++) {
                _0x2e14a1 = _0xd08a5b[_0x21d049];
                if (_0x3ffaa3[_0x451059(0x1f8)](-_0x2e14a1['x'], 0x0, -_0x2e14a1['z']), !this[_0x451059(0x84d)](_0x427079, _0x277e45, _0x31076f, _0xb6fd4e, _0x3ffaa3)) {
                    _0x4caf91 = Math[_0x451059(0x20c)](0x0, _0x21d049);
                    break;
                }
            }
            _0x1ddf48['xMin'] = _0x102991, _0x1ddf48['xMax'] = _0x4caf91, _0x1ddf48[_0x451059(0x84a)] = _0x2a8f26, _0x1ddf48[_0x451059(0x84b)] = _0x32b510;
        }
        ['_updatePointLightPerspective'](_0x2a46b4, _0x3809d1, _0x409c94, _0x5e0c6e, _0x4e10ca, _0x4cce3d, _0x33303b) {
            var _0x328b06 = _0x6027f5, _0x2a6b28 = _0x1ae54c[_0x328b06(0x856)], _0x4a014d = _0x1ae54c[_0x328b06(0x59f)];
            _0x3697cd[_0x328b06(0x857)](_0x5e0c6e[_0x328b06(0x3d5)][_0x328b06(0x5a2)], _0x409c94, _0x4a014d), _0x4a014d['z'] *= -0x1, this['_shrinkSphereLightZPerspective'](_0x2a46b4, _0x3809d1, _0x4a014d, _0x5e0c6e[_0x328b06(0x858)], _0x2a6b28) && this[_0x328b06(0x859)](_0x4a014d, _0x5e0c6e[_0x328b06(0x858)], _0x2a6b28, _0x4cce3d, _0x33303b) && this['_placePointLightToClusters'](_0x4e10ca, _0x2a6b28);
        }
        [_0x6027f5(0x85a)](_0x1b7822, _0x25d673, _0x400179, _0x5cd85f, _0x2f9be6, _0x7a98fc, _0x26d4dc) {
            var _0xebe8c3 = _0x6027f5, _0x7e9ef = _0x1ae54c[_0xebe8c3(0x856)], _0x3c7621 = _0x1ae54c[_0xebe8c3(0x59f)], _0xf53295 = _0x1ae54c[_0xebe8c3(0x3a1)], _0x466da5 = _0x1ae54c[_0xebe8c3(0x85b)], _0x395cc7 = _0x5cd85f[_0xebe8c3(0x3d5)][_0xebe8c3(0x5a2)], _0x5f2141 = _0x5cd85f[_0xebe8c3(0x858)];
            _0x5cd85f[_0xebe8c3(0x3d5)][_0xebe8c3(0x3d8)][_0xebe8c3(0x493)](_0xf53295), _0x3697cd[_0xebe8c3(0x214)](_0xf53295, _0xf53295), _0x3697cd[_0xebe8c3(0x1f9)](_0xf53295, _0x5f2141, _0x466da5), _0x3697cd['add'](_0x395cc7, _0x466da5, _0x466da5), _0x3697cd[_0xebe8c3(0x857)](_0x395cc7, _0x400179, _0x3c7621), _0x3697cd[_0xebe8c3(0x857)](_0x466da5, _0x400179, _0x466da5), _0x3c7621['z'] *= -0x1, _0x466da5['z'] *= -0x1;
            var _0x567f85 = _0x5cd85f[_0xebe8c3(0x85c)] / 0x2 * Math['PI'] / 0xb4;
            if (this[_0xebe8c3(0x850)](_0x1b7822, _0x25d673, _0x3c7621, _0x466da5, _0x5f2141, _0x567f85, _0x7e9ef) && this[_0xebe8c3(0x859)](_0x3c7621, _0x5f2141, _0x7e9ef, _0x7a98fc, _0x26d4dc)) {
                var _0x35ceaa = _0x1ae54c[_0xebe8c3(0x85d)];
                _0x35ceaa['x'] = _0x466da5['x'] - _0x3c7621['x'], _0x35ceaa['y'] = _0x466da5['y'] - _0x3c7621['y'], _0x35ceaa['z'] = _0x466da5['z'] - _0x3c7621['z'], _0x3697cd[_0xebe8c3(0x214)](_0x35ceaa, _0x35ceaa), this[_0xebe8c3(0x854)](_0x3c7621, _0x35ceaa, _0x5f2141, _0x567f85, _0x7e9ef, _0x7a98fc, _0x26d4dc), this['_placeSpotLightToClusters'](_0x2f9be6, _0x7e9ef);
            }
        }
        [_0x6027f5(0x85e)](_0x27350a, _0x24de73, _0x11c906, _0x360821, _0x88accb, _0x47a87a, _0x380181) {
            var _0xa61867 = _0x6027f5, _0x1c0cd5 = _0x1ae54c['_tempLightBound'], _0x33164b = _0x1ae54c[_0xa61867(0x59f)];
            _0x3697cd[_0xa61867(0x857)](_0x47a87a[_0xa61867(0x3d5)][_0xa61867(0x5a2)], _0x88accb, _0x33164b), _0x33164b['z'] *= -0x1, this['_shrinkSphereLightByBoundOrth'](_0x27350a, _0x24de73, _0x11c906, _0x360821, _0x33164b, _0x47a87a[_0xa61867(0x858)], _0x1c0cd5) && this[_0xa61867(0x846)](_0x380181, _0x1c0cd5);
        }
        [_0x6027f5(0x85f)](_0x32f61f, _0x2b80b4, _0x5816cf, _0x5b2fb1, _0x272c5b, _0x165a74, _0x3665f9) {
            var _0x3d0652 = _0x6027f5, _0x653a7 = _0x1ae54c[_0x3d0652(0x856)], _0x1641d6 = _0x1ae54c[_0x3d0652(0x59f)], _0x35828e = _0x1ae54c[_0x3d0652(0x3a1)], _0x5b1d7c = _0x1ae54c[_0x3d0652(0x85b)], _0x21cd24 = _0x165a74[_0x3d0652(0x3d5)][_0x3d0652(0x5a2)], _0xe105d3 = _0x165a74['range'];
            _0x165a74[_0x3d0652(0x3d5)]['worldMatrix']['getForward'](_0x35828e), _0x3697cd[_0x3d0652(0x214)](_0x35828e, _0x35828e), _0x3697cd[_0x3d0652(0x1f9)](_0x35828e, _0xe105d3, _0x5b1d7c), _0x3697cd['add'](_0x21cd24, _0x5b1d7c, _0x5b1d7c), _0x3697cd[_0x3d0652(0x857)](_0x21cd24, _0x272c5b, _0x1641d6), _0x3697cd[_0x3d0652(0x857)](_0x5b1d7c, _0x272c5b, _0x5b1d7c), _0x1641d6['z'] *= -0x1, _0x5b1d7c['z'] *= -0x1;
            var _0x38f9ec = _0x165a74[_0x3d0652(0x85c)] / 0x2 * Math['PI'] / 0xb4;
            this[_0x3d0652(0x853)](_0x32f61f, _0x2b80b4, _0x5816cf, _0x5b2fb1, _0x1641d6, _0x5b1d7c, _0xe105d3, _0x38f9ec, _0x653a7) && this['_placeSpotLightToClusters'](_0x3665f9, _0x653a7);
        }
        ['update'](_0x5efeeb, _0x33440a) {
            var _0x580e0c = _0x6027f5;
            this[_0x580e0c(0x385)]++;
            var _0x1be3ba = _0x5efeeb['nearPlane'];
            this[_0x580e0c(0x83f)]['x'] = _0x362537[_0x580e0c(0x251)]['lightClusterCount']['z'] / Math['log2'](_0x5efeeb[_0x580e0c(0x860)] / _0x1be3ba), this[_0x580e0c(0x83f)]['y'] = Math[_0x580e0c(0x84f)](_0x1be3ba) * this['_depthSliceParam']['x'];
            var _0x208a8c = _0x5efeeb[_0x580e0c(0x861)], _0x23912a = _0x5efeeb[_0x580e0c(0x860)], _0x163abb = _0x5efeeb[_0x580e0c(0x862)], _0x3f566e = _0x33440a[_0x580e0c(0x863)][_0x580e0c(0x446)], _0x407ab7 = _0x33440a['_pointLights'], _0x361c75 = _0x407ab7[_0x580e0c(0x446)], _0x8e3335 = _0x407ab7[_0x580e0c(0x864)], _0x21fdb5 = _0x33440a[_0x580e0c(0x865)], _0x486502 = _0x21fdb5[_0x580e0c(0x446)], _0x161910 = _0x21fdb5[_0x580e0c(0x864)];
            if (_0x5efeeb[_0x580e0c(0x866)]) {
                for (var _0x8de408 = _0x5efeeb[_0x580e0c(0x867)] / 0x2, _0x1bfb60 = _0x8de408 * _0x5efeeb[_0x580e0c(0x868)], _0x32e551 = 0x0; _0x32e551 < _0x361c75; _0x32e551++, _0x3f566e++)
                    this['_updatePointLightOrth'](_0x1bfb60, _0x8de408, _0x208a8c, _0x23912a, _0x163abb, _0x8e3335[_0x32e551], _0x3f566e);
                for (_0x32e551 = 0x0; _0x32e551 < _0x486502; _0x32e551++, _0x3f566e++)
                    this['_updateSpotLightOrth'](_0x1bfb60, _0x8de408, _0x208a8c, _0x23912a, _0x163abb, _0x161910[_0x32e551], _0x3f566e);
            } else {
                _0x5efeeb[_0x580e0c(0x869)]();
                var _0x1e2266 = _0x5efeeb[_0x580e0c(0x86a)], _0x488f90 = _0x5efeeb[_0x580e0c(0x86b)];
                for (_0x32e551 = 0x0; _0x32e551 < _0x361c75; _0x32e551++, _0x3f566e++)
                    this[_0x580e0c(0x86c)](_0x208a8c, _0x23912a, _0x163abb, _0x8e3335[_0x32e551], _0x3f566e, _0x1e2266, _0x488f90);
                for (_0x32e551 = 0x0; _0x32e551 < _0x486502; _0x32e551++, _0x3f566e++)
                    this['_updateSpotLightPerspective'](_0x208a8c, _0x23912a, _0x163abb, _0x161910[_0x32e551], _0x3f566e, _0x1e2266, _0x488f90);
            }
            if (_0x361c75 + _0x486502 > 0x0) {
                for (var _0x5d370c = this[_0x580e0c(0x840)], _0x28a6ba = this['_ySlices'], _0x3e62b6 = this[_0x580e0c(0x845)], _0xee2790 = _0x5d370c * _0x28a6ba * 0x4, _0x3ed6d0 = _0xee2790 * _0x3e62b6, _0x182a3b = this[_0x580e0c(0x844)], _0x17dd8d = _0x182a3b[_0x580e0c(0x205)], _0x46569d = this[_0x580e0c(0x847)], _0x4eaaed = this['_updateMark'], _0xa89d15 = !0x0, _0xe9a727 = 0x0; _0xe9a727 < _0x3e62b6; _0xe9a727++)
                    for (var _0x121b1 = 0x0; _0x121b1 < _0x28a6ba; _0x121b1++)
                        for (var _0x354fb5 = 0x0; _0x354fb5 < _0x5d370c; _0x354fb5++) {
                            var _0x178463 = _0x46569d[_0xe9a727][_0x121b1][_0x354fb5], _0x3e4746 = 0x4 * (_0x354fb5 + _0x121b1 * _0x5d370c + _0xe9a727 * _0x5d370c * _0x28a6ba);
                            if (_0x178463[_0x580e0c(0x376)] !== _0x4eaaed)
                                _0x182a3b[_0x3e4746] = 0x0, _0x182a3b[_0x3e4746 + 0x1] = 0x0;
                            else {
                                if (_0xa89d15) {
                                    var _0x568f3e = _0x178463[_0x580e0c(0x83e)], _0xbd2573 = _0x178463[_0x580e0c(0x83c)], _0x5069fd = _0x178463[_0x580e0c(0x83d)], _0x26a753 = _0xbd2573 + _0x5069fd;
                                    if (_0x3ed6d0 + _0x26a753 < _0x17dd8d) {
                                        _0x182a3b[_0x3e4746] = _0xbd2573, _0x182a3b[_0x3e4746 + 0x1] = _0x5069fd, _0x182a3b[_0x3e4746 + 0x2] = Math[_0x580e0c(0x24e)](_0x3ed6d0 / _0xee2790), _0x182a3b[_0x3e4746 + 0x3] = _0x3ed6d0 % _0xee2790;
                                        for (_0x32e551 = 0x0; _0x32e551 < _0x26a753; _0x32e551++)
                                            _0x182a3b[_0x3ed6d0++] = _0x568f3e[_0x32e551];
                                    } else {
                                        _0x26a753 = _0x17dd8d - (_0x3ed6d0 + _0x26a753), _0xbd2573 = Math[_0x580e0c(0x212)](_0xbd2573, _0x26a753), _0x182a3b[_0x3e4746] = _0xbd2573, _0x182a3b[_0x3e4746 + 0x1] = Math[_0x580e0c(0x212)](_0x5069fd, _0x26a753 - _0xbd2573), _0x182a3b[_0x3e4746 + 0x2] = Math[_0x580e0c(0x24e)](_0x3ed6d0 / _0xee2790), _0x182a3b[_0x3e4746 + 0x3] = _0x3ed6d0 % _0xee2790;
                                        for (_0x32e551 = 0x0; _0x32e551 < _0x26a753; _0x32e551++)
                                            _0x182a3b[_0x3ed6d0++] = _0x568f3e[_0x32e551];
                                        _0xa89d15 = !0x1;
                                    }
                                }
                            }
                        }
                var _0x10ee6b = this[_0x580e0c(0x843)][_0x580e0c(0x313)];
                this[_0x580e0c(0x843)][_0x580e0c(0x86d)](0x0, 0x0, _0x10ee6b, Math['ceil'](_0x3ed6d0 / (0x4 * _0x10ee6b)), _0x182a3b);
            }
        }
    }
    _0x1ae54c['_tempVector30'] = new _0x3697cd(), _0x1ae54c[_0x6027f5(0x3a1)] = new _0x3697cd(), _0x1ae54c[_0x6027f5(0x855)] = new _0x3697cd(), _0x1ae54c['_tempVector33'] = new _0x3697cd(), _0x1ae54c['_tempVector34'] = new _0x3697cd(), _0x1ae54c[_0x6027f5(0x86e)] = new _0x3697cd(), _0x1ae54c[_0x6027f5(0x86f)] = new _0x3697cd(), _0x1ae54c[_0x6027f5(0x870)] = new _0x3697cd(), _0x1ae54c[_0x6027f5(0x856)] = new class {
    }();
    class _0x44b580 {
        constructor() {
            var _0x5f2ae2 = _0x6027f5;
            this[_0x5f2ae2(0x871)] = new Float32Array(0x1b);
        }
        ['getCoefficient'](_0x25bdb8, _0x480370) {
            var _0x458826 = _0x6027f5;
            return this[_0x458826(0x871)][0x9 * _0x25bdb8 + _0x480370];
        }
        ['setCoefficient'](_0xa1f047, _0x339dab, _0xdfe9f1) {
            this['_coefficients'][0x9 * _0xa1f047 + _0x339dab] = _0xdfe9f1;
        }
        [_0x6027f5(0x872)](_0x26dca8, _0x1c93a4, _0x3770cc, _0x1a6c91, _0x1d7e43, _0x5b2ad0, _0xc2a77a, _0x9b0a88, _0x5a005c, _0x34ce3a) {
            var _0x48fc41 = _0x6027f5, _0xe9facf = 0x9 * _0x26dca8;
            this['_coefficients'][_0xe9facf] = _0x1c93a4, this[_0x48fc41(0x871)][++_0xe9facf] = _0x3770cc, this[_0x48fc41(0x871)][++_0xe9facf] = _0x1a6c91, this[_0x48fc41(0x871)][++_0xe9facf] = _0x1d7e43, this['_coefficients'][++_0xe9facf] = _0x5b2ad0, this[_0x48fc41(0x871)][++_0xe9facf] = _0xc2a77a, this[_0x48fc41(0x871)][++_0xe9facf] = _0x9b0a88, this[_0x48fc41(0x871)][++_0xe9facf] = _0x5a005c, this['_coefficients'][++_0xe9facf] = _0x34ce3a;
        }
        [_0x6027f5(0x1fc)](_0x550675) {
            var _0x3b7dcb = _0x6027f5;
            if (this !== _0x550675) {
                for (var _0x47841b = this[_0x3b7dcb(0x871)], _0x4af50f = _0x550675['_coefficients'], _0x176a5f = 0x0; _0x176a5f < 0x1b; _0x176a5f++)
                    _0x4af50f[_0x176a5f] = _0x47841b[_0x176a5f];
            }
        }
    }
    _0x44b580['_default'] = new _0x44b580();
    class _0x312819 {
        constructor() {
            var _0x1a456c = _0x6027f5;
            this[_0x1a456c(0x873)] = null, this[_0x1a456c(0x874)] = -0x1, this[_0x1a456c(0x875)] = null, this['mousePositionX'] = 0x0, this[_0x1a456c(0x876)] = 0x0;
        }
    }
    class _0x337cb9 {
        constructor() {
            var _0x2be920 = _0x6027f5;
            this[_0x2be920(0x2c1)] = -0x1, this[_0x2be920(0x877)] = -0x1, this[_0x2be920(0x57f)] = new _0x30a72c();
        }
        get ['identifier']() {
            var _0x5ac0f5 = _0x6027f5;
            return this[_0x5ac0f5(0x877)];
        }
        get [_0x6027f5(0x5a2)]() {
            var _0x11cc57 = _0x6027f5;
            return this[_0x11cc57(0x57f)];
        }
        [_0x6027f5(0x801)]() {
            var _0x41476a = _0x6027f5;
            return this[_0x41476a(0x2c1)];
        }
        ['_setIndexInList'](_0x176515) {
            var _0x5a07a4 = _0x6027f5;
            this[_0x5a07a4(0x2c1)] = _0x176515;
        }
    }
    class _0x5a837f {
        constructor(_0x4b96ff, _0x2ffa26 = 0x0) {
            this['normal'] = _0x4b96ff, this['distance'] = _0x2ffa26;
        }
        static ['createPlaneBy3P'](_0x2ef463, _0x5967c2, _0x2b439a, _0x5a996f) {
            var _0x33a90c = _0x6027f5, _0x92805d = _0x5967c2['x'] - _0x2ef463['x'], _0x22a6e5 = _0x5967c2['y'] - _0x2ef463['y'], _0x299268 = _0x5967c2['z'] - _0x2ef463['z'], _0x228f53 = _0x2b439a['x'] - _0x2ef463['x'], _0x4f66b2 = _0x2b439a['y'] - _0x2ef463['y'], _0x4da02e = _0x2b439a['z'] - _0x2ef463['z'], _0x13b41f = _0x22a6e5 * _0x4da02e - _0x299268 * _0x4f66b2, _0x54c435 = _0x299268 * _0x228f53 - _0x92805d * _0x4da02e, _0x46f2f0 = _0x92805d * _0x4f66b2 - _0x22a6e5 * _0x228f53, _0x22e0d7 = 0x1 / Math[_0x33a90c(0x1f3)](_0x13b41f * _0x13b41f + _0x54c435 * _0x54c435 + _0x46f2f0 * _0x46f2f0), _0x26acf4 = _0x13b41f * _0x22e0d7, _0x19ffb3 = _0x54c435 * _0x22e0d7, _0x5d6652 = _0x46f2f0 * _0x22e0d7, _0x1f80d2 = _0x5a996f['normal'];
            _0x1f80d2['x'] = _0x26acf4, _0x1f80d2['y'] = _0x19ffb3, _0x1f80d2['z'] = _0x5d6652, _0x5a996f[_0x33a90c(0x20a)] = -(_0x26acf4 * _0x2ef463['x'] + _0x19ffb3 * _0x2ef463['y'] + _0x5d6652 * _0x2ef463['z']);
        }
        [_0x6027f5(0x214)]() {
            var _0x5c9a81 = _0x6027f5, _0x2245d3 = this[_0x5c9a81(0x82f)]['x'], _0x3b3942 = this[_0x5c9a81(0x82f)]['y'], _0x3d9b72 = this['normal']['z'], _0x2da213 = 0x1 / Math['sqrt'](_0x2245d3 * _0x2245d3 + _0x3b3942 * _0x3b3942 + _0x3d9b72 * _0x3d9b72);
            this['normal']['x'] = _0x2245d3 * _0x2da213, this[_0x5c9a81(0x82f)]['y'] = _0x3b3942 * _0x2da213, this[_0x5c9a81(0x82f)]['z'] = _0x3d9b72 * _0x2da213, this[_0x5c9a81(0x20a)] *= _0x2da213;
        }
        ['cloneTo'](_0x904db0) {
            var _0x2dfb60 = _0x6027f5, _0x184d7b = _0x904db0;
            this[_0x2dfb60(0x82f)][_0x2dfb60(0x1fc)](_0x184d7b[_0x2dfb60(0x82f)]), _0x184d7b[_0x2dfb60(0x20a)] = this[_0x2dfb60(0x20a)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x4595a9 = _0x6027f5, _0xf54596 = new _0x5a837f(new _0x3697cd());
            return this[_0x4595a9(0x1fc)](_0xf54596), _0xf54596;
        }
    }
    _0x5a837f[_0x6027f5(0x878)] = 0x0, _0x5a837f[_0x6027f5(0x879)] = 0x1, _0x5a837f[_0x6027f5(0x87a)] = 0x2;
    class _0x31e56b {
        constructor(_0x26e00a, _0x22864b) {
            var _0x33b5c4 = _0x6027f5;
            this['origin'] = _0x26e00a, this[_0x33b5c4(0x87b)] = _0x22864b;
        }
    }
    class _0x156c38 {
    }
    _0x156c38['Disjoint'] = 0x0, _0x156c38[_0x6027f5(0x87c)] = 0x1, _0x156c38[_0x6027f5(0x87d)] = 0x2;
    class _0x4dcbd3 {
        constructor() {
        }
        static [_0x6027f5(0x87e)](_0x1cd318, _0x287b24) {
            var _0x537fa2 = _0x6027f5;
            return _0x3697cd[_0x537fa2(0x20b)](_0x1cd318[_0x537fa2(0x82f)], _0x287b24) - _0x1cd318[_0x537fa2(0x20a)];
        }
        static ['distanceBoxToPoint'](_0x132bc8, _0x1a7c02) {
            var _0x4f4203 = _0x6027f5, _0x914335 = _0x132bc8['min'], _0x23362c = _0x914335['x'], _0x34d92a = _0x914335['y'], _0x26e992 = _0x914335['z'], _0x4daba7 = _0x132bc8[_0x4f4203(0x20c)], _0x5d9194 = _0x4daba7['x'], _0x5f17b1 = _0x4daba7['y'], _0x5e8ad7 = _0x4daba7['z'], _0xbdebd6 = _0x1a7c02['x'], _0x364ba9 = _0x1a7c02['y'], _0x39e20a = _0x1a7c02['z'], _0x344e59 = 0x0;
            return _0xbdebd6 < _0x23362c && (_0x344e59 += (_0x23362c - _0xbdebd6) * (_0x23362c - _0xbdebd6)), _0xbdebd6 > _0x5d9194 && (_0x344e59 += (_0x5d9194 - _0xbdebd6) * (_0x5d9194 - _0xbdebd6)), _0x364ba9 < _0x34d92a && (_0x344e59 += (_0x34d92a - _0x364ba9) * (_0x34d92a - _0x364ba9)), _0x364ba9 > _0x5f17b1 && (_0x344e59 += (_0x5f17b1 - _0x364ba9) * (_0x5f17b1 - _0x364ba9)), _0x39e20a < _0x26e992 && (_0x344e59 += (_0x26e992 - _0x39e20a) * (_0x26e992 - _0x39e20a)), _0x39e20a > _0x5e8ad7 && (_0x344e59 += (_0x5e8ad7 - _0x39e20a) * (_0x5e8ad7 - _0x39e20a)), Math[_0x4f4203(0x1f3)](_0x344e59);
        }
        static ['distanceBoxToBox'](_0xb4b010, _0x17e1f0) {
            var _0x1568bc = _0x6027f5, _0x3a563e, _0x4e0e9b = _0xb4b010[_0x1568bc(0x212)], _0x3e5406 = _0x4e0e9b['x'], _0x4df586 = _0x4e0e9b['y'], _0x31ccdd = _0x4e0e9b['z'], _0x46e828 = _0xb4b010['max'], _0x7611f5 = _0x46e828['x'], _0x521125 = _0x46e828['y'], _0x3b257d = _0x46e828['z'], _0x3a1128 = _0x17e1f0[_0x1568bc(0x212)], _0x46c0b2 = _0x3a1128['x'], _0x373c5a = _0x3a1128['y'], _0xe85d8e = _0x3a1128['z'], _0x3880f9 = _0x17e1f0[_0x1568bc(0x20c)], _0x3883f7 = _0x3880f9['x'], _0x886ed0 = _0x3880f9['y'], _0x5d28e4 = _0x3880f9['z'], _0x16db2a = 0x0;
            return _0x3e5406 > _0x3883f7 ? _0x16db2a += (_0x3a563e = _0x3e5406 - _0x3883f7) * _0x3a563e : _0x46c0b2 > _0x7611f5 && (_0x16db2a += (_0x3a563e = _0x46c0b2 - _0x7611f5) * _0x3a563e), _0x4df586 > _0x886ed0 ? _0x16db2a += (_0x3a563e = _0x4df586 - _0x886ed0) * _0x3a563e : _0x373c5a > _0x521125 && (_0x16db2a += (_0x3a563e = _0x373c5a - _0x521125) * _0x3a563e), _0x31ccdd > _0x5d28e4 ? _0x16db2a += (_0x3a563e = _0x31ccdd - _0x5d28e4) * _0x3a563e : _0xe85d8e > _0x3b257d && (_0x16db2a += (_0x3a563e = _0xe85d8e - _0x3b257d) * _0x3a563e), Math[_0x1568bc(0x1f3)](_0x16db2a);
        }
        static [_0x6027f5(0x87f)](_0x1e4344, _0x4e0b4f) {
            var _0x18eeff = _0x6027f5, _0x170ac7 = Math['sqrt'](_0x3697cd[_0x18eeff(0x209)](_0x1e4344[_0x18eeff(0x880)], _0x4e0b4f));
            return _0x170ac7 -= _0x1e4344['radius'], Math[_0x18eeff(0x20c)](_0x170ac7, 0x0);
        }
        static [_0x6027f5(0x881)](_0x2c1e4d, _0x2907ae) {
            var _0x4d4b65 = _0x6027f5, _0x391929 = Math[_0x4d4b65(0x1f3)](_0x3697cd['distanceSquared'](_0x2c1e4d['center'], _0x2907ae[_0x4d4b65(0x880)]));
            return _0x391929 -= _0x2c1e4d[_0x4d4b65(0x882)] + _0x2907ae[_0x4d4b65(0x882)], Math[_0x4d4b65(0x20c)](_0x391929, 0x0);
        }
        static ['intersectsRayAndTriangleRD'](_0x57c270, _0x2d5111, _0x1cfeac, _0x43393d, _0x58d453) {
            var _0x12b93e = _0x6027f5, _0x2c7b60 = _0x57c270[_0x12b93e(0x883)], _0x24721c = _0x2c7b60['x'], _0x5ec6c9 = _0x2c7b60['y'], _0x27d526 = _0x2c7b60['z'], _0x897410 = _0x57c270[_0x12b93e(0x87b)], _0x11876e = _0x897410['x'], _0x1bc10e = _0x897410['y'], _0x5af201 = _0x897410['z'], _0x43a3f7 = _0x2d5111['x'], _0x57a5ec = _0x2d5111['y'], _0x46f2cb = _0x2d5111['z'], _0x2379f5 = _0x1cfeac['x'], _0x1adbb3 = _0x1cfeac['y'], _0x2c1ffd = _0x1cfeac['z'], _0xaa637d = _0x43393d['x'], _0x2db60d = _0x43393d['y'], _0x292199 = _0x43393d['z'], _0x4815e5 = _0x4dcbd3[_0x12b93e(0x283)]['x'], _0x191ed3 = _0x4dcbd3[_0x12b93e(0x283)]['y'], _0x16eddb = _0x4dcbd3[_0x12b93e(0x283)]['z'];
            _0x4815e5 = _0x2379f5 - _0x43a3f7, _0x191ed3 = _0x1adbb3 - _0x57a5ec, _0x16eddb = _0x2c1ffd - _0x46f2cb;
            var _0x203bd1 = _0x4dcbd3[_0x12b93e(0x284)]['x'], _0x306a44 = _0x4dcbd3[_0x12b93e(0x284)]['y'], _0x18ab93 = _0x4dcbd3[_0x12b93e(0x284)]['z'];
            _0x203bd1 = _0xaa637d - _0x43a3f7, _0x306a44 = _0x2db60d - _0x57a5ec, _0x18ab93 = _0x292199 - _0x46f2cb;
            var _0x40dcfd = _0x4dcbd3[_0x12b93e(0x285)]['x'], _0x929435 = _0x4dcbd3[_0x12b93e(0x285)]['y'], _0x36e4fc = _0x4dcbd3[_0x12b93e(0x285)]['z'], _0x49838f = _0x4815e5 * (_0x40dcfd = _0x1bc10e * _0x18ab93 - _0x5af201 * _0x306a44) + _0x191ed3 * (_0x929435 = _0x5af201 * _0x203bd1 - _0x11876e * _0x18ab93) + _0x16eddb * (_0x36e4fc = _0x11876e * _0x306a44 - _0x1bc10e * _0x203bd1);
            if (_0x255128['isZero'](_0x49838f))
                return !0x1;
            var _0x3a81bb = 0x1 / _0x49838f, _0x30ee4c = _0x4dcbd3['_tempV33']['x'], _0x1b13f6 = _0x4dcbd3['_tempV33']['y'], _0x5dd389 = _0x4dcbd3['_tempV33']['z'], _0x5be852 = (_0x30ee4c = _0x24721c - _0x43a3f7) * _0x40dcfd + (_0x1b13f6 = _0x5ec6c9 - _0x57a5ec) * _0x929435 + (_0x5dd389 = _0x27d526 - _0x46f2cb) * _0x36e4fc;
            if ((_0x5be852 *= _0x3a81bb) < 0x0 || _0x5be852 > 0x1)
                return !0x1;
            var _0x377190 = _0x4dcbd3['_tempV34']['x'], _0x2f1610 = _0x4dcbd3[_0x12b93e(0x884)]['y'], _0x479aeb = _0x4dcbd3[_0x12b93e(0x884)]['z'], _0x553f8f = _0x11876e * (_0x377190 = _0x1b13f6 * _0x16eddb - _0x5dd389 * _0x191ed3) + _0x1bc10e * (_0x2f1610 = _0x5dd389 * _0x4815e5 - _0x30ee4c * _0x16eddb) + _0x5af201 * (_0x479aeb = _0x30ee4c * _0x191ed3 - _0x1b13f6 * _0x4815e5);
            if ((_0x553f8f *= _0x3a81bb) < 0x0 || _0x5be852 + _0x553f8f > 0x1)
                return !0x1;
            var _0x57c298 = _0x203bd1 * _0x377190 + _0x306a44 * _0x2f1610 + _0x18ab93 * _0x479aeb;
            return !((_0x57c298 *= _0x3a81bb) < 0x0);
        }
        static [_0x6027f5(0x885)](_0xe1130, _0xc4012c, _0x47e991, _0x156c7e, _0x156dc6) {
            var _0x3ab36f = _0x6027f5;
            return _0x4dcbd3[_0x3ab36f(0x886)](_0xe1130, _0xc4012c, _0x47e991, _0x156c7e, void 0x0) ? (_0x3697cd['scale'](_0xe1130[_0x3ab36f(0x87b)], void 0x0, _0x4dcbd3[_0x3ab36f(0x283)]), _0x3697cd[_0x3ab36f(0x207)](_0xe1130['origin'], _0x4dcbd3[_0x3ab36f(0x283)], _0x156dc6), !0x0) : (_0x156dc6 = _0x3697cd['_ZERO'], !0x1);
        }
        static [_0x6027f5(0x887)](_0x5d5b5c, _0x55dc54) {
            var _0x3a10bf = _0x6027f5;
            _0x3697cd[_0x3a10bf(0x28a)](_0x5d5b5c[_0x3a10bf(0x883)], _0x55dc54, _0x4dcbd3[_0x3a10bf(0x283)]);
            var _0x4a2df6 = _0x3697cd['dot'](_0x4dcbd3[_0x3a10bf(0x283)], _0x5d5b5c[_0x3a10bf(0x87b)]), _0x59303b = _0x3697cd[_0x3a10bf(0x20b)](_0x4dcbd3[_0x3a10bf(0x283)], _0x4dcbd3[_0x3a10bf(0x283)]) - _0x255128['zeroTolerance'];
            return !(_0x59303b > 0x0 && _0x4a2df6 > 0x0) && !(_0x4a2df6 * _0x4a2df6 - _0x59303b < 0x0);
        }
        static ['intersectsRayAndRay'](_0x113809, _0x1c3298, _0x4f7b8c) {
            var _0x56763e = _0x6027f5, _0x46c113 = _0x113809[_0x56763e(0x883)], _0x5b6249 = _0x46c113['x'], _0x3e7917 = _0x46c113['y'], _0x25633e = _0x46c113['z'], _0x58a0a6 = _0x113809['direction'], _0x38bf0a = _0x58a0a6['x'], _0x3d5706 = _0x58a0a6['y'], _0x253900 = _0x58a0a6['z'], _0x4b71ce = _0x1c3298[_0x56763e(0x883)], _0x1a298e = _0x4b71ce['x'], _0x3ed1fc = _0x4b71ce['y'], _0x47705e = _0x4b71ce['z'], _0x792c20 = _0x1c3298['direction'], _0x158a18 = _0x792c20['x'], _0x2ee070 = _0x792c20['y'], _0x1171bb = _0x792c20['z'];
            _0x3697cd[_0x56763e(0x217)](_0x58a0a6, _0x792c20, _0x4dcbd3[_0x56763e(0x283)]);
            var _0x4b9499 = _0x4dcbd3['_tempV30'], _0x25194c = _0x3697cd[_0x56763e(0x888)](_0x4dcbd3[_0x56763e(0x283)]);
            if (_0x255128[_0x56763e(0x1f1)](_0x25194c) && _0x255128[_0x56763e(0x204)](_0x1a298e, _0x5b6249) && _0x255128[_0x56763e(0x204)](_0x3ed1fc, _0x3e7917) && _0x255128[_0x56763e(0x204)](_0x47705e, _0x25633e))
                return !0x0;
            _0x25194c *= _0x25194c;
            var _0x1fb51c = _0x1a298e - _0x5b6249, _0x36c73c = _0x3ed1fc - _0x3e7917, _0x4fef0d = _0x47705e - _0x25633e, _0x4d61db = _0x158a18, _0x5813d8 = _0x2ee070, _0x2329f8 = _0x1171bb, _0x1ba087 = _0x4b9499['x'], _0x142f3b = _0x4b9499['y'], _0x485e7f = _0x4b9499['z'], _0x38ee8e = _0x1fb51c * _0x5813d8 * _0x485e7f + _0x36c73c * _0x2329f8 * _0x1ba087 + _0x4fef0d * _0x4d61db * _0x142f3b - _0x1fb51c * _0x2329f8 * _0x142f3b - _0x36c73c * _0x4d61db * _0x485e7f - _0x4fef0d * _0x5813d8 * _0x1ba087;
            _0x4d61db = _0x38bf0a, _0x5813d8 = _0x3d5706, _0x2329f8 = _0x253900;
            var _0x42e77c = _0x38ee8e / _0x25194c;
            _0x3697cd[_0x56763e(0x1f9)](_0x58a0a6, _0x42e77c, _0x4dcbd3['_tempV30']), _0x3697cd[_0x56763e(0x1f9)](_0x792c20, _0x42e77c, _0x4dcbd3['_tempV31']), _0x3697cd[_0x56763e(0x207)](_0x46c113, _0x4dcbd3[_0x56763e(0x283)], _0x4dcbd3[_0x56763e(0x285)]), _0x3697cd[_0x56763e(0x207)](_0x4b71ce, _0x4dcbd3[_0x56763e(0x284)], _0x4dcbd3[_0x56763e(0x889)]);
            var _0x35bb29 = _0x4dcbd3[_0x56763e(0x285)], _0x23aa5f = _0x4dcbd3[_0x56763e(0x889)];
            return !!(_0x255128[_0x56763e(0x204)](_0x23aa5f['x'], _0x35bb29['x']) && _0x255128[_0x56763e(0x204)](_0x23aa5f['y'], _0x35bb29['y']) && _0x255128['nearEqual'](_0x23aa5f['z'], _0x35bb29['z']));
        }
        static [_0x6027f5(0x88a)](_0x3ca043, _0x349bd6, _0x3f3648, _0x33de8f) {
            var _0x4dc5ba = _0x6027f5, _0x4a1497 = _0x4dcbd3[_0x4dc5ba(0x88b)](_0x3ca043, _0x349bd6), _0x419225 = _0x4dcbd3['intersectsPlaneAndPoint'](_0x3ca043, _0x3f3648), _0x21ac1b = _0x4dcbd3[_0x4dc5ba(0x88b)](_0x3ca043, _0x33de8f);
            return _0x4a1497 == _0x5a837f['PlaneIntersectionType_Front'] && _0x419225 == _0x5a837f['PlaneIntersectionType_Front'] && _0x21ac1b == _0x5a837f[_0x4dc5ba(0x879)] ? _0x5a837f['PlaneIntersectionType_Front'] : _0x4a1497 == _0x5a837f['PlaneIntersectionType_Back'] && _0x419225 == _0x5a837f['PlaneIntersectionType_Back'] && _0x21ac1b == _0x5a837f['PlaneIntersectionType_Back'] ? _0x5a837f[_0x4dc5ba(0x878)] : _0x5a837f[_0x4dc5ba(0x87a)];
        }
        static ['intersectsRayAndPlaneRD'](_0x1f6324, _0x4eb13f) {
            var _0x44f864 = _0x6027f5, _0x1b5164 = _0x4eb13f[_0x44f864(0x82f)], _0x2d65b5 = _0x3697cd[_0x44f864(0x20b)](_0x1b5164, _0x1f6324['direction']);
            if (Math[_0x44f864(0x1f0)](_0x2d65b5) < _0x255128['zeroTolerance'])
                return -0x1;
            var _0x4fc483 = _0x3697cd[_0x44f864(0x20b)](_0x1b5164, _0x1f6324[_0x44f864(0x883)]), _0x2e82a3 = (-_0x4eb13f['distance'] - _0x4fc483) / _0x2d65b5;
            if (_0x2e82a3 < 0x0) {
                if (_0x2e82a3 < -_0x255128['zeroTolerance'])
                    return -0x1;
                _0x2e82a3 = 0x0;
            }
            return _0x2e82a3;
        }
        static [_0x6027f5(0x88c)](_0xf2c4ff, _0x297562, _0xa35a05) {
            var _0x179f01 = _0x6027f5, _0x59b763 = _0x4dcbd3[_0x179f01(0x88d)](_0xf2c4ff, _0x297562);
            if (-0x1 == _0x59b763)
                return _0xa35a05[_0x179f01(0x1f8)](0x0, 0x0, 0x0), !0x1;
            var _0x588200 = _0x4dcbd3[_0x179f01(0x283)];
            return _0x3697cd[_0x179f01(0x1f9)](_0xf2c4ff[_0x179f01(0x87b)], _0x59b763, _0x588200), _0x3697cd[_0x179f01(0x207)](_0xf2c4ff[_0x179f01(0x883)], _0x588200, _0xa35a05), !0x0;
        }
        static [_0x6027f5(0x88e)](_0xa6a6e4, _0x4ad10d) {
            var _0x285457 = _0x6027f5, _0x2d4c6d = _0xa6a6e4[_0x285457(0x883)], _0x321338 = _0x2d4c6d['x'], _0x4e4489 = _0x2d4c6d['y'], _0x155b62 = _0x2d4c6d['z'], _0x1a8cdb = _0xa6a6e4[_0x285457(0x87b)], _0x5002e9 = _0x1a8cdb['x'], _0x3432a2 = _0x1a8cdb['y'], _0xae516e = _0x1a8cdb['z'], _0x5054bb = _0x4ad10d['min'], _0x3550c9 = _0x5054bb['x'], _0x4214e3 = _0x5054bb['y'], _0x3580df = _0x5054bb['z'], _0x30c936 = _0x4ad10d[_0x285457(0x20c)], _0x6796f3 = _0x30c936['x'], _0x3afcf4 = _0x30c936['y'], _0x11d3ed = _0x30c936['z'], _0x2fef05 = 0x0, _0x14ad61 = _0x255128['MaxValue'];
            if (_0x255128[_0x285457(0x1f1)](_0x5002e9)) {
                if (_0x321338 < _0x3550c9 || _0x321338 > _0x6796f3)
                    return -0x1;
            } else {
                var _0x3a54cc = 0x1 / _0x5002e9, _0x13dd4c = (_0x3550c9 - _0x321338) * _0x3a54cc, _0x517949 = (_0x6796f3 - _0x321338) * _0x3a54cc;
                if (_0x13dd4c > _0x517949) {
                    var _0x4acd15 = _0x13dd4c;
                    _0x13dd4c = _0x517949, _0x517949 = _0x4acd15;
                }
                if ((_0x2fef05 = Math['max'](_0x13dd4c, _0x2fef05)) > (_0x14ad61 = Math[_0x285457(0x212)](_0x517949, _0x14ad61)))
                    return -0x1;
            }
            if (_0x255128[_0x285457(0x1f1)](_0x3432a2)) {
                if (_0x4e4489 < _0x4214e3 || _0x4e4489 > _0x3afcf4)
                    return -0x1;
            } else {
                var _0x41cedf = 0x1 / _0x3432a2, _0x11a82c = (_0x4214e3 - _0x4e4489) * _0x41cedf, _0x2e2165 = (_0x3afcf4 - _0x4e4489) * _0x41cedf;
                if (_0x11a82c > _0x2e2165) {
                    var _0x29d4c7 = _0x11a82c;
                    _0x11a82c = _0x2e2165, _0x2e2165 = _0x29d4c7;
                }
                if ((_0x2fef05 = Math['max'](_0x11a82c, _0x2fef05)) > (_0x14ad61 = Math[_0x285457(0x212)](_0x2e2165, _0x14ad61)))
                    return -0x1;
            }
            if (_0x255128[_0x285457(0x1f1)](_0xae516e)) {
                if (_0x155b62 < _0x3580df || _0x155b62 > _0x11d3ed)
                    return -0x1;
            } else {
                var _0x13acac = 0x1 / _0xae516e, _0xc9ca60 = (_0x3580df - _0x155b62) * _0x13acac, _0x14f2ea = (_0x11d3ed - _0x155b62) * _0x13acac;
                if (_0xc9ca60 > _0x14f2ea) {
                    var _0x481054 = _0xc9ca60;
                    _0xc9ca60 = _0x14f2ea, _0x14f2ea = _0x481054;
                }
                if ((_0x2fef05 = Math[_0x285457(0x20c)](_0xc9ca60, _0x2fef05)) > (_0x14ad61 = Math[_0x285457(0x212)](_0x14f2ea, _0x14ad61)))
                    return -0x1;
            }
            return _0x2fef05;
        }
        static [_0x6027f5(0x88f)](_0x308bb8, _0x3afbb4, _0x416c71) {
            var _0x3de128 = _0x6027f5, _0x397f6b = _0x4dcbd3[_0x3de128(0x88e)](_0x308bb8, _0x3afbb4);
            return -0x1 === _0x397f6b ? (_0x3697cd[_0x3de128(0x21b)][_0x3de128(0x1fc)](_0x416c71), _0x397f6b) : (_0x3697cd['scale'](_0x308bb8['direction'], _0x397f6b, _0x4dcbd3[_0x3de128(0x283)]), _0x3697cd[_0x3de128(0x207)](_0x308bb8[_0x3de128(0x883)], _0x4dcbd3[_0x3de128(0x283)], _0x4dcbd3[_0x3de128(0x284)]), _0x4dcbd3[_0x3de128(0x284)]['cloneTo'](_0x416c71), _0x397f6b);
        }
        static ['intersectsRayAndSphereRD'](_0x1f3df3, _0x2ba4b9) {
            var _0x26fa94 = _0x6027f5, _0x5c3ee2 = _0x2ba4b9[_0x26fa94(0x882)];
            _0x3697cd['subtract'](_0x1f3df3[_0x26fa94(0x883)], _0x2ba4b9['center'], _0x4dcbd3[_0x26fa94(0x283)]);
            var _0x4967cf = _0x3697cd['dot'](_0x4dcbd3['_tempV30'], _0x1f3df3['direction']), _0x147771 = _0x3697cd['dot'](_0x4dcbd3[_0x26fa94(0x283)], _0x4dcbd3['_tempV30']) - _0x5c3ee2 * _0x5c3ee2;
            if (_0x147771 > 0x0 && _0x4967cf > 0x0)
                return -0x1;
            var _0x29a966 = _0x4967cf * _0x4967cf - _0x147771;
            if (_0x29a966 < 0x0)
                return -0x1;
            var _0x37c6e3 = -_0x4967cf - Math[_0x26fa94(0x1f3)](_0x29a966);
            return _0x37c6e3 < 0x0 && (_0x37c6e3 = 0x0), _0x37c6e3;
        }
        static ['intersectsRayAndSphereRP'](_0x887573, _0x180d55, _0x428c77) {
            var _0xb74b33 = _0x6027f5, _0x23511d = _0x4dcbd3[_0xb74b33(0x890)](_0x887573, _0x180d55);
            return -0x1 === _0x23511d ? (_0x3697cd[_0xb74b33(0x21b)][_0xb74b33(0x1fc)](_0x428c77), _0x23511d) : (_0x3697cd[_0xb74b33(0x1f9)](_0x887573[_0xb74b33(0x87b)], _0x23511d, _0x4dcbd3[_0xb74b33(0x283)]), _0x3697cd['add'](_0x887573[_0xb74b33(0x883)], _0x4dcbd3['_tempV30'], _0x4dcbd3[_0xb74b33(0x284)]), _0x4dcbd3[_0xb74b33(0x284)]['cloneTo'](_0x428c77), _0x23511d);
        }
        static [_0x6027f5(0x891)](_0x533c16, _0xc8fd8a, _0x418277, _0x5d31ba) {
            var _0x4a3ded = _0x6027f5, _0x16e8fd = _0x533c16['center'], _0x3dd458 = _0x533c16[_0x4a3ded(0x882)];
            return _0x4dcbd3[_0x4a3ded(0x892)](_0x16e8fd, _0xc8fd8a, _0x418277, _0x5d31ba, _0x4dcbd3[_0x4a3ded(0x283)]), _0x3697cd[_0x4a3ded(0x28a)](_0x4dcbd3[_0x4a3ded(0x283)], _0x16e8fd, _0x4dcbd3['_tempV31']), _0x3697cd[_0x4a3ded(0x20b)](_0x4dcbd3[_0x4a3ded(0x284)], _0x4dcbd3[_0x4a3ded(0x284)]) <= _0x3dd458 * _0x3dd458;
        }
        static [_0x6027f5(0x88b)](_0x3d6540, _0x1caf3b) {
            var _0x3f8082 = _0x6027f5, _0x4300fd = _0x3697cd[_0x3f8082(0x20b)](_0x3d6540[_0x3f8082(0x82f)], _0x1caf3b) + _0x3d6540['distance'];
            return _0x4300fd > 0x0 ? _0x5a837f[_0x3f8082(0x879)] : _0x4300fd < 0x0 ? _0x5a837f['PlaneIntersectionType_Back'] : _0x5a837f[_0x3f8082(0x87a)];
        }
        static [_0x6027f5(0x893)](_0x347f9b, _0x8af527) {
            var _0xfa1bdb = _0x6027f5;
            _0x3697cd[_0xfa1bdb(0x217)](_0x347f9b[_0xfa1bdb(0x82f)], _0x8af527[_0xfa1bdb(0x82f)], _0x4dcbd3['_tempV30']);
            var _0x33e74f = _0x3697cd[_0xfa1bdb(0x20b)](_0x4dcbd3[_0xfa1bdb(0x283)], _0x4dcbd3['_tempV30']);
            return !_0x255128[_0xfa1bdb(0x1f1)](_0x33e74f);
        }
        static [_0x6027f5(0x894)](_0x1c3f3d, _0x16447b, _0xd4629c) {
            var _0x563a01 = _0x6027f5, _0x55c806 = _0x1c3f3d[_0x563a01(0x82f)], _0x1b9991 = _0x16447b[_0x563a01(0x82f)];
            _0x3697cd[_0x563a01(0x217)](_0x55c806, _0x1b9991, _0x4dcbd3[_0x563a01(0x884)]);
            var _0x3dc876 = _0x3697cd['dot'](_0x4dcbd3['_tempV34'], _0x4dcbd3[_0x563a01(0x884)]);
            return !_0x255128[_0x563a01(0x1f1)](_0x3dc876) && (_0x3697cd['scale'](_0x1b9991, _0x1c3f3d[_0x563a01(0x20a)], _0x4dcbd3[_0x563a01(0x283)]), _0x3697cd['scale'](_0x55c806, _0x16447b[_0x563a01(0x20a)], _0x4dcbd3['_tempV31']), _0x3697cd[_0x563a01(0x28a)](_0x4dcbd3[_0x563a01(0x283)], _0x4dcbd3[_0x563a01(0x284)], _0x4dcbd3[_0x563a01(0x285)]), _0x3697cd[_0x563a01(0x217)](_0x4dcbd3[_0x563a01(0x285)], _0x4dcbd3[_0x563a01(0x884)], _0x4dcbd3[_0x563a01(0x889)]), _0x3697cd[_0x563a01(0x214)](_0x4dcbd3[_0x563a01(0x884)], _0x4dcbd3['_tempV34']), !0x0);
        }
        static [_0x6027f5(0x895)](_0xe85abd, _0x146597) {
            var _0x85c0f5 = _0x6027f5, _0x46de77 = _0xe85abd[_0x85c0f5(0x20a)], _0x367c1d = _0xe85abd[_0x85c0f5(0x82f)], _0x511a91 = _0x367c1d['x'], _0x161ce7 = _0x367c1d['y'], _0x4328a5 = _0x367c1d['z'], _0x2e7b55 = _0x146597[_0x85c0f5(0x212)], _0x29413d = _0x2e7b55['x'], _0x1066c8 = _0x2e7b55['y'], _0x215d9e = _0x2e7b55['z'], _0x4aae60 = _0x146597['max'], _0x2700a0 = _0x4aae60['x'], _0x379185 = _0x4aae60['y'], _0x58b0d3 = _0x4aae60['z'];
            _0x4dcbd3[_0x85c0f5(0x283)]['x'] = _0x511a91 > 0x0 ? _0x29413d : _0x2700a0, _0x4dcbd3[_0x85c0f5(0x283)]['y'] = _0x161ce7 > 0x0 ? _0x1066c8 : _0x379185, _0x4dcbd3[_0x85c0f5(0x283)]['z'] = _0x4328a5 > 0x0 ? _0x215d9e : _0x58b0d3, _0x4dcbd3[_0x85c0f5(0x284)]['x'] = _0x511a91 > 0x0 ? _0x2700a0 : _0x29413d, _0x4dcbd3[_0x85c0f5(0x284)]['y'] = _0x161ce7 > 0x0 ? _0x379185 : _0x1066c8, _0x4dcbd3['_tempV31']['z'] = _0x4328a5 > 0x0 ? _0x58b0d3 : _0x215d9e;
            var _0x3b58a2 = _0x3697cd[_0x85c0f5(0x20b)](_0x367c1d, _0x4dcbd3[_0x85c0f5(0x283)]);
            return _0x3b58a2 + _0x46de77 > 0x0 ? _0x5a837f['PlaneIntersectionType_Front'] : (_0x3b58a2 = _0x3697cd[_0x85c0f5(0x20b)](_0x367c1d, _0x4dcbd3['_tempV31'])) + _0x46de77 < 0x0 ? _0x5a837f[_0x85c0f5(0x878)] : _0x5a837f['PlaneIntersectionType_Intersecting'];
        }
        static ['intersectsPlaneAndSphere'](_0x2eefc1, _0xa48b99) {
            var _0x142519 = _0x6027f5, _0x22fcef = _0xa48b99['radius'], _0x5e6980 = _0x3697cd['dot'](_0x2eefc1[_0x142519(0x82f)], _0xa48b99[_0x142519(0x880)]) + _0x2eefc1[_0x142519(0x20a)];
            return _0x5e6980 > _0x22fcef ? _0x5a837f[_0x142519(0x879)] : _0x5e6980 < -_0x22fcef ? _0x5a837f[_0x142519(0x878)] : _0x5a837f[_0x142519(0x87a)];
        }
        static [_0x6027f5(0x896)](_0x3bd3ef, _0x5a1366) {
            var _0x9d3d19 = _0x6027f5, _0x5acca5 = _0x3bd3ef[_0x9d3d19(0x212)], _0x183551 = _0x3bd3ef[_0x9d3d19(0x20c)], _0xa3bfca = _0x5a1366[_0x9d3d19(0x212)], _0x5caec6 = _0x5a1366['max'];
            return !(_0x5acca5['x'] > _0x5caec6['x'] || _0xa3bfca['x'] > _0x183551['x']) && (!(_0x5acca5['y'] > _0x5caec6['y'] || _0xa3bfca['y'] > _0x183551['y']) && !(_0x5acca5['z'] > _0x5caec6['z'] || _0xa3bfca['z'] > _0x183551['z']));
        }
        static [_0x6027f5(0x897)](_0x352227, _0x24aa62) {
            var _0x182c28 = _0x6027f5, _0x1bf0fc = _0x24aa62[_0x182c28(0x880)], _0xda72f1 = _0x24aa62['radius'], _0x1bcf02 = _0x4dcbd3[_0x182c28(0x283)];
            return _0x3697cd[_0x182c28(0x208)](_0x1bf0fc, _0x352227[_0x182c28(0x212)], _0x352227[_0x182c28(0x20c)], _0x1bcf02), _0x3697cd[_0x182c28(0x209)](_0x1bf0fc, _0x1bcf02) <= _0xda72f1 * _0xda72f1;
        }
        static [_0x6027f5(0x898)](_0x8726ec, _0x397778) {
            var _0x5f0859 = _0x6027f5, _0x550aa2 = _0x8726ec[_0x5f0859(0x882)] + _0x397778[_0x5f0859(0x882)];
            return _0x3697cd[_0x5f0859(0x209)](_0x8726ec[_0x5f0859(0x880)], _0x397778['center']) <= _0x550aa2 * _0x550aa2;
        }
        static ['boxContainsPoint'](_0x522259, _0x5e6e6f) {
            var _0x4c5e92 = _0x6027f5, _0xb1f822 = _0x522259[_0x4c5e92(0x212)], _0x569eda = _0x522259[_0x4c5e92(0x20c)];
            return _0xb1f822['x'] <= _0x5e6e6f['x'] && _0x569eda['x'] >= _0x5e6e6f['x'] && _0xb1f822['y'] <= _0x5e6e6f['y'] && _0x569eda['y'] >= _0x5e6e6f['y'] && _0xb1f822['z'] <= _0x5e6e6f['z'] && _0x569eda['z'] >= _0x5e6e6f['z'] ? _0x156c38[_0x4c5e92(0x87c)] : _0x156c38[_0x4c5e92(0x899)];
        }
        static [_0x6027f5(0x89a)](_0x1fe1ae, _0x9a4189) {
            var _0x3f8aae = _0x6027f5, _0x4ff655 = _0x1fe1ae[_0x3f8aae(0x212)], _0x4fa220 = _0x4ff655['x'], _0x3fa674 = _0x4ff655['y'], _0x1e00e8 = _0x4ff655['z'], _0x4cb066 = _0x1fe1ae[_0x3f8aae(0x20c)], _0x1507fd = _0x4cb066['x'], _0x2c80e0 = _0x4cb066['y'], _0x5bd058 = _0x4cb066['z'], _0xe2bc0a = _0x9a4189[_0x3f8aae(0x212)], _0x4ce948 = _0xe2bc0a['x'], _0x12262e = _0xe2bc0a['y'], _0x535b34 = _0xe2bc0a['z'], _0x32f041 = _0x9a4189[_0x3f8aae(0x20c)], _0x728cc0 = _0x32f041['x'], _0x54feaf = _0x32f041['y'], _0x4c727b = _0x32f041['z'];
            return _0x1507fd < _0x4ce948 || _0x4fa220 > _0x728cc0 || _0x2c80e0 < _0x12262e || _0x3fa674 > _0x54feaf || _0x5bd058 < _0x535b34 || _0x1e00e8 > _0x4c727b ? _0x156c38[_0x3f8aae(0x899)] : _0x4fa220 <= _0x4ce948 && _0x728cc0 <= _0x1507fd && _0x3fa674 <= _0x12262e && _0x54feaf <= _0x2c80e0 && _0x1e00e8 <= _0x535b34 && _0x4c727b <= _0x5bd058 ? _0x156c38[_0x3f8aae(0x87c)] : _0x156c38['Intersects'];
        }
        static [_0x6027f5(0x89b)](_0x592328, _0x215c2c) {
            var _0x294113 = _0x6027f5, _0x1582cc = _0x592328[_0x294113(0x212)], _0x2c731c = _0x1582cc['x'], _0x2e4ec5 = _0x1582cc['y'], _0x4efdd1 = _0x1582cc['z'], _0x4e8ac2 = _0x592328['max'], _0x2f7208 = _0x4e8ac2['x'], _0x51a835 = _0x4e8ac2['y'], _0x13d433 = _0x4e8ac2['z'], _0x3ed904 = _0x215c2c[_0x294113(0x880)], _0x21019a = _0x3ed904['x'], _0x246dab = _0x3ed904['y'], _0x252ddf = _0x3ed904['z'], _0x513fc2 = _0x215c2c[_0x294113(0x882)];
            return _0x3697cd[_0x294113(0x208)](_0x3ed904, _0x1582cc, _0x4e8ac2, _0x4dcbd3['_tempV30']), _0x3697cd[_0x294113(0x209)](_0x3ed904, _0x4dcbd3['_tempV30']) > _0x513fc2 * _0x513fc2 ? _0x156c38[_0x294113(0x899)] : _0x2c731c + _0x513fc2 <= _0x21019a && _0x21019a <= _0x2f7208 - _0x513fc2 && _0x2f7208 - _0x2c731c > _0x513fc2 && _0x2e4ec5 + _0x513fc2 <= _0x246dab && _0x246dab <= _0x51a835 - _0x513fc2 && _0x51a835 - _0x2e4ec5 > _0x513fc2 && _0x4efdd1 + _0x513fc2 <= _0x252ddf && _0x252ddf <= _0x13d433 - _0x513fc2 && _0x13d433 - _0x4efdd1 > _0x513fc2 ? _0x156c38[_0x294113(0x87c)] : _0x156c38['Intersects'];
        }
        static [_0x6027f5(0x89c)](_0x4c71db, _0x1c8caf) {
            var _0x4d6703 = _0x6027f5;
            return _0x3697cd['distanceSquared'](_0x1c8caf, _0x4c71db[_0x4d6703(0x880)]) <= _0x4c71db[_0x4d6703(0x882)] * _0x4c71db[_0x4d6703(0x882)] ? _0x156c38[_0x4d6703(0x87c)] : _0x156c38['Disjoint'];
        }
        static [_0x6027f5(0x89d)](_0x93e9cf, _0x135afd, _0x3af90c, _0x20fec9) {
            var _0x31e321 = _0x6027f5, _0x1b13b1 = _0x4dcbd3[_0x31e321(0x89c)](_0x93e9cf, _0x135afd), _0xdbd33e = _0x4dcbd3[_0x31e321(0x89c)](_0x93e9cf, _0x3af90c), _0x18779a = _0x4dcbd3[_0x31e321(0x89c)](_0x93e9cf, _0x20fec9);
            return _0x1b13b1 == _0x156c38['Contains'] && _0xdbd33e == _0x156c38[_0x31e321(0x87c)] && _0x18779a == _0x156c38[_0x31e321(0x87c)] ? _0x156c38['Contains'] : _0x4dcbd3['intersectsSphereAndTriangle'](_0x93e9cf, _0x135afd, _0x3af90c, _0x20fec9) ? _0x156c38[_0x31e321(0x87d)] : _0x156c38[_0x31e321(0x899)];
        }
        static ['sphereContainsBox'](_0x1d45aa, _0x40d687) {
            var _0x39a90d = _0x6027f5, _0x43ec55 = _0x1d45aa[_0x39a90d(0x880)], _0x1736aa = _0x43ec55['x'], _0x38859e = _0x43ec55['y'], _0x2eaeb9 = _0x43ec55['z'], _0x4606eb = _0x1d45aa[_0x39a90d(0x882)], _0x48a9a2 = _0x40d687[_0x39a90d(0x212)], _0x1fb9a2 = _0x48a9a2['x'], _0x4ae084 = _0x48a9a2['y'], _0x502a19 = _0x48a9a2['z'], _0x579375 = _0x40d687['max'], _0x46c946 = _0x579375['x'], _0x2a9173 = _0x579375['y'], _0x545798 = _0x579375['z'], _0x49f2f7 = _0x4dcbd3['_tempV30'];
            _0x49f2f7['x'], _0x49f2f7['y'], _0x49f2f7['z'];
            if (!_0x4dcbd3[_0x39a90d(0x897)](_0x40d687, _0x1d45aa))
                return _0x156c38[_0x39a90d(0x899)];
            var _0x52e7c4 = _0x4606eb * _0x4606eb;
            return _0x1736aa - _0x1fb9a2, _0x38859e - _0x2a9173, _0x2eaeb9 - _0x545798, _0x3697cd['scalarLengthSquared'](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38[_0x39a90d(0x87d)] : (_0x1736aa - _0x46c946, _0x38859e - _0x2a9173, _0x2eaeb9 - _0x545798, _0x3697cd['scalarLengthSquared'](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38[_0x39a90d(0x87d)] : (_0x1736aa - _0x46c946, _0x38859e - _0x4ae084, _0x2eaeb9 - _0x545798, _0x3697cd[_0x39a90d(0x213)](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38[_0x39a90d(0x87d)] : (_0x1736aa - _0x1fb9a2, _0x38859e - _0x4ae084, _0x2eaeb9 - _0x545798, _0x3697cd[_0x39a90d(0x213)](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38['Intersects'] : (_0x1736aa - _0x1fb9a2, _0x38859e - _0x2a9173, _0x2eaeb9 - _0x502a19, _0x3697cd[_0x39a90d(0x213)](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38[_0x39a90d(0x87d)] : (_0x1736aa - _0x46c946, _0x38859e - _0x2a9173, _0x2eaeb9 - _0x502a19, _0x3697cd['scalarLengthSquared'](_0x4dcbd3['_tempV30']) > _0x52e7c4 ? _0x156c38[_0x39a90d(0x87d)] : (_0x1736aa - _0x46c946, _0x38859e - _0x4ae084, _0x2eaeb9 - _0x502a19, _0x3697cd[_0x39a90d(0x213)](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38['Intersects'] : (_0x1736aa - _0x1fb9a2, _0x38859e - _0x4ae084, _0x2eaeb9 - _0x502a19, _0x3697cd[_0x39a90d(0x213)](_0x4dcbd3[_0x39a90d(0x283)]) > _0x52e7c4 ? _0x156c38[_0x39a90d(0x87d)] : _0x156c38[_0x39a90d(0x87c)])))))));
        }
        static [_0x6027f5(0x89e)](_0x4e7329, _0x49df6f) {
            var _0x138dac = _0x6027f5, _0x87f05c = _0x4e7329[_0x138dac(0x882)], _0xe52835 = _0x49df6f[_0x138dac(0x882)], _0x4b54e3 = _0x3697cd['distance'](_0x4e7329[_0x138dac(0x880)], _0x49df6f[_0x138dac(0x880)]);
            return _0x87f05c + _0xe52835 < _0x4b54e3 ? _0x156c38['Disjoint'] : _0x87f05c - _0xe52835 < _0x4b54e3 ? _0x156c38['Intersects'] : _0x156c38[_0x138dac(0x87c)];
        }
        static ['closestPointPointTriangle'](_0x5b3c2d, _0x35ffdb, _0x567288, _0x3f48d4, _0x21ae63) {
            var _0x3c619c = _0x6027f5;
            _0x3697cd[_0x3c619c(0x28a)](_0x567288, _0x35ffdb, _0x4dcbd3[_0x3c619c(0x283)]), _0x3697cd[_0x3c619c(0x28a)](_0x3f48d4, _0x35ffdb, _0x4dcbd3[_0x3c619c(0x284)]), _0x3697cd[_0x3c619c(0x28a)](_0x5b3c2d, _0x35ffdb, _0x4dcbd3['_tempV32']), _0x3697cd['subtract'](_0x5b3c2d, _0x567288, _0x4dcbd3['_tempV33']), _0x3697cd[_0x3c619c(0x28a)](_0x5b3c2d, _0x3f48d4, _0x4dcbd3[_0x3c619c(0x884)]);
            var _0x3dff32 = _0x3697cd[_0x3c619c(0x20b)](_0x4dcbd3[_0x3c619c(0x283)], _0x4dcbd3[_0x3c619c(0x285)]), _0x2dc008 = _0x3697cd['dot'](_0x4dcbd3['_tempV31'], _0x4dcbd3[_0x3c619c(0x285)]), _0x1fa631 = _0x3697cd[_0x3c619c(0x20b)](_0x4dcbd3[_0x3c619c(0x283)], _0x4dcbd3[_0x3c619c(0x889)]), _0x46fbce = _0x3697cd['dot'](_0x4dcbd3[_0x3c619c(0x284)], _0x4dcbd3['_tempV33']), _0x218546 = _0x3697cd[_0x3c619c(0x20b)](_0x4dcbd3[_0x3c619c(0x283)], _0x4dcbd3[_0x3c619c(0x884)]), _0x327ffe = _0x3697cd[_0x3c619c(0x20b)](_0x4dcbd3[_0x3c619c(0x284)], _0x4dcbd3[_0x3c619c(0x884)]);
            if (_0x3dff32 <= 0x0 && _0x2dc008 <= 0x0)
                _0x35ffdb['cloneTo'](_0x21ae63);
            else {
                if (_0x1fa631 >= 0x0 && _0x46fbce <= _0x1fa631)
                    _0x567288[_0x3c619c(0x1fc)](_0x21ae63);
                else {
                    var _0x258a98 = _0x3dff32 * _0x46fbce - _0x1fa631 * _0x2dc008;
                    if (_0x258a98 <= 0x0 && _0x3dff32 >= 0x0 && _0x1fa631 <= 0x0) {
                        var _0x103c30 = _0x3dff32 / (_0x3dff32 - _0x1fa631);
                        return _0x3697cd[_0x3c619c(0x1f9)](_0x4dcbd3[_0x3c619c(0x283)], _0x103c30, _0x21ae63), void _0x3697cd['add'](_0x35ffdb, _0x21ae63, _0x21ae63);
                    }
                    if (_0x327ffe >= 0x0 && _0x218546 <= _0x327ffe)
                        _0x3f48d4[_0x3c619c(0x1fc)](_0x21ae63);
                    else {
                        var _0x5b9994 = _0x218546 * _0x2dc008 - _0x3dff32 * _0x327ffe;
                        if (_0x5b9994 <= 0x0 && _0x2dc008 >= 0x0 && _0x327ffe <= 0x0) {
                            var _0x15fc28 = _0x2dc008 / (_0x2dc008 - _0x327ffe);
                            return _0x3697cd['scale'](_0x4dcbd3['_tempV31'], _0x15fc28, _0x21ae63), void _0x3697cd[_0x3c619c(0x207)](_0x35ffdb, _0x21ae63, _0x21ae63);
                        }
                        var _0x10956f = _0x1fa631 * _0x327ffe - _0x218546 * _0x46fbce;
                        if (_0x10956f <= 0x0 && _0x46fbce - _0x1fa631 >= 0x0 && _0x218546 - _0x327ffe >= 0x0) {
                            var _0x179baf = (_0x46fbce - _0x1fa631) / (_0x46fbce - _0x1fa631 + (_0x218546 - _0x327ffe));
                            return _0x3697cd[_0x3c619c(0x28a)](_0x3f48d4, _0x567288, _0x21ae63), _0x3697cd[_0x3c619c(0x1f9)](_0x21ae63, _0x179baf, _0x21ae63), void _0x3697cd[_0x3c619c(0x207)](_0x567288, _0x21ae63, _0x21ae63);
                        }
                        var _0x2b9c7a = 0x1 / (_0x10956f + _0x5b9994 + _0x258a98), _0x40de1f = _0x5b9994 * _0x2b9c7a, _0x39bb78 = _0x258a98 * _0x2b9c7a;
                        _0x3697cd[_0x3c619c(0x1f9)](_0x4dcbd3[_0x3c619c(0x283)], _0x40de1f, _0x4dcbd3['_tempV35']), _0x3697cd[_0x3c619c(0x1f9)](_0x4dcbd3[_0x3c619c(0x284)], _0x39bb78, _0x4dcbd3['_tempV36']), _0x3697cd['add'](_0x4dcbd3[_0x3c619c(0x89f)], _0x4dcbd3[_0x3c619c(0x8a0)], _0x21ae63), _0x3697cd[_0x3c619c(0x207)](_0x35ffdb, _0x21ae63, _0x21ae63);
                    }
                }
            }
        }
        static [_0x6027f5(0x8a1)](_0x4571df, _0x444976, _0x342f8a) {
            var _0x1574a7 = _0x6027f5, _0x4dd51b = _0x4571df[_0x1574a7(0x82f)], _0x5a63dc = _0x3697cd[_0x1574a7(0x20b)](_0x4dd51b, _0x444976) - _0x4571df[_0x1574a7(0x20a)];
            _0x3697cd[_0x1574a7(0x1f9)](_0x4dd51b, _0x5a63dc, _0x4dcbd3[_0x1574a7(0x283)]), _0x3697cd['subtract'](_0x444976, _0x4dcbd3[_0x1574a7(0x283)], _0x342f8a);
        }
        static ['closestPointBoxPoint'](_0xe3c5ff, _0x152815, _0x50a0df) {
            var _0x3075a3 = _0x6027f5;
            _0x3697cd[_0x3075a3(0x20c)](_0x152815, _0xe3c5ff[_0x3075a3(0x212)], _0x4dcbd3[_0x3075a3(0x283)]), _0x3697cd[_0x3075a3(0x212)](_0x4dcbd3[_0x3075a3(0x283)], _0xe3c5ff['max'], _0x50a0df);
        }
        static [_0x6027f5(0x8a2)](_0xad646e, _0x4b64e9, _0x4f66f4) {
            var _0x5cdf35 = _0x6027f5, _0x4b25b6 = _0xad646e[_0x5cdf35(0x880)];
            _0x3697cd['subtract'](_0x4b64e9, _0x4b25b6, _0x4f66f4), _0x3697cd[_0x5cdf35(0x214)](_0x4f66f4, _0x4f66f4), _0x3697cd[_0x5cdf35(0x1f9)](_0x4f66f4, _0xad646e[_0x5cdf35(0x882)], _0x4f66f4), _0x3697cd[_0x5cdf35(0x207)](_0x4f66f4, _0x4b25b6, _0x4f66f4);
        }
        static [_0x6027f5(0x8a3)](_0x322bad, _0x1df7f2, _0x495924) {
            var _0xc8fb74 = _0x6027f5, _0x2c3667 = _0x322bad[_0xc8fb74(0x880)];
            _0x3697cd[_0xc8fb74(0x28a)](_0x1df7f2[_0xc8fb74(0x880)], _0x2c3667, _0x495924), _0x3697cd[_0xc8fb74(0x214)](_0x495924, _0x495924), _0x3697cd[_0xc8fb74(0x1f9)](_0x495924, _0x322bad[_0xc8fb74(0x882)], _0x495924), _0x3697cd['add'](_0x495924, _0x2c3667, _0x495924);
        }
    }
    _0x4dcbd3['_tempV30'] = new _0x3697cd(), _0x4dcbd3[_0x6027f5(0x284)] = new _0x3697cd(), _0x4dcbd3[_0x6027f5(0x285)] = new _0x3697cd(), _0x4dcbd3['_tempV33'] = new _0x3697cd(), _0x4dcbd3['_tempV34'] = new _0x3697cd(), _0x4dcbd3[_0x6027f5(0x89f)] = new _0x3697cd(), _0x4dcbd3[_0x6027f5(0x8a0)] = new _0x3697cd(), (_0x54eafa = _0x18be32[_0x6027f5(0x8a4)] || (_0x18be32[_0x6027f5(0x8a4)] = {}))[_0x54eafa[_0x6027f5(0x8a5)] = 0x0] = _0x6027f5(0x8a5), _0x54eafa[_0x54eafa[_0x6027f5(0x8a6)] = 0x1] = _0x6027f5(0x8a6), _0x54eafa[_0x54eafa[_0x6027f5(0x8a7)] = 0x2] = _0x6027f5(0x8a7), _0x54eafa[_0x54eafa[_0x6027f5(0x8a8)] = 0x3] = _0x6027f5(0x8a8), _0x54eafa[_0x54eafa[_0x6027f5(0x8a9)] = 0x4] = _0x6027f5(0x8a9), _0x54eafa[_0x54eafa[_0x6027f5(0x8aa)] = 0x5] = _0x6027f5(0x8aa), _0x54eafa[_0x54eafa[_0x6027f5(0x8ab)] = 0x6] = _0x6027f5(0x8ab), _0x54eafa[_0x54eafa[_0x6027f5(0x8ac)] = 0x7] = _0x6027f5(0x8ac), _0x54eafa[_0x54eafa[_0x6027f5(0x8ad)] = 0x8] = _0x6027f5(0x8ad);
    class _0x1391ac {
        constructor(_0x2602b5) {
            var _0x8d8ac = _0x6027f5;
            this['_matrix'] = _0x2602b5, this[_0x8d8ac(0x8ae)] = new _0x5a837f(new _0x3697cd()), this[_0x8d8ac(0x8af)] = new _0x5a837f(new _0x3697cd()), this[_0x8d8ac(0x8b0)] = new _0x5a837f(new _0x3697cd()), this[_0x8d8ac(0x8b1)] = new _0x5a837f(new _0x3697cd()), this[_0x8d8ac(0x8b2)] = new _0x5a837f(new _0x3697cd()), this[_0x8d8ac(0x8b3)] = new _0x5a837f(new _0x3697cd()), _0x1391ac[_0x8d8ac(0x8b4)](this[_0x8d8ac(0x5de)], this[_0x8d8ac(0x8ae)], this[_0x8d8ac(0x8af)], this[_0x8d8ac(0x8b0)], this['_right'], this[_0x8d8ac(0x8b2)], this[_0x8d8ac(0x8b3)]);
        }
        static [_0x6027f5(0x8b4)](_0x26ecb0, _0x38493f, _0x1b0f58, _0x56a044, _0x4850ed, _0x1e38d6, _0x4f1e9c) {
            var _0x340842 = _0x6027f5, _0x188327 = _0x26ecb0['elements'], _0x2912b6 = _0x188327[0x0], _0x4d7325 = _0x188327[0x1], _0x590eb3 = _0x188327[0x2], _0x29efb8 = _0x188327[0x3], _0x10cfba = _0x188327[0x4], _0x2d572a = _0x188327[0x5], _0x3c684d = _0x188327[0x6], _0x202563 = _0x188327[0x7], _0x94e320 = _0x188327[0x8], _0x3725ad = _0x188327[0x9], _0x297022 = _0x188327[0xa], _0x49ab0e = _0x188327[0xb], _0x5167cc = _0x188327[0xc], _0x3fbe23 = _0x188327[0xd], _0x1ad248 = _0x188327[0xe], _0x4f85d2 = _0x188327[0xf], _0x1d7c6e = _0x38493f[_0x340842(0x82f)];
            _0x1d7c6e['x'] = _0x590eb3, _0x1d7c6e['y'] = _0x3c684d, _0x1d7c6e['z'] = _0x297022, _0x38493f[_0x340842(0x20a)] = _0x1ad248, _0x38493f[_0x340842(0x214)]();
            var _0x543cbb = _0x1b0f58[_0x340842(0x82f)];
            _0x543cbb['x'] = _0x29efb8 - _0x590eb3, _0x543cbb['y'] = _0x202563 - _0x3c684d, _0x543cbb['z'] = _0x49ab0e - _0x297022, _0x1b0f58[_0x340842(0x20a)] = _0x4f85d2 - _0x1ad248, _0x1b0f58[_0x340842(0x214)]();
            var _0x30ad5c = _0x56a044[_0x340842(0x82f)];
            _0x30ad5c['x'] = _0x29efb8 + _0x2912b6, _0x30ad5c['y'] = _0x202563 + _0x10cfba, _0x30ad5c['z'] = _0x49ab0e + _0x94e320, _0x56a044[_0x340842(0x20a)] = _0x4f85d2 + _0x5167cc, _0x56a044[_0x340842(0x214)]();
            var _0x2ad1c6 = _0x4850ed[_0x340842(0x82f)];
            _0x2ad1c6['x'] = _0x29efb8 - _0x2912b6, _0x2ad1c6['y'] = _0x202563 - _0x10cfba, _0x2ad1c6['z'] = _0x49ab0e - _0x94e320, _0x4850ed[_0x340842(0x20a)] = _0x4f85d2 - _0x5167cc, _0x4850ed[_0x340842(0x214)]();
            var _0x38ceb2 = _0x1e38d6[_0x340842(0x82f)];
            _0x38ceb2['x'] = _0x29efb8 - _0x4d7325, _0x38ceb2['y'] = _0x202563 - _0x2d572a, _0x38ceb2['z'] = _0x49ab0e - _0x3725ad, _0x1e38d6[_0x340842(0x20a)] = _0x4f85d2 - _0x3fbe23, _0x1e38d6[_0x340842(0x214)]();
            var _0x5cffba = _0x4f1e9c[_0x340842(0x82f)];
            _0x5cffba['x'] = _0x29efb8 + _0x4d7325, _0x5cffba['y'] = _0x202563 + _0x2d572a, _0x5cffba['z'] = _0x49ab0e + _0x3725ad, _0x4f1e9c['distance'] = _0x4f85d2 + _0x3fbe23, _0x4f1e9c[_0x340842(0x214)]();
        }
        get [_0x6027f5(0x8b5)]() {
            return this['_matrix'];
        }
        set [_0x6027f5(0x8b5)](_0x348c92) {
            var _0x4e0e01 = _0x6027f5;
            _0x348c92['cloneTo'](this['_matrix']), _0x1391ac[_0x4e0e01(0x8b4)](this[_0x4e0e01(0x5de)], this[_0x4e0e01(0x8ae)], this[_0x4e0e01(0x8af)], this[_0x4e0e01(0x8b0)], this['_right'], this[_0x4e0e01(0x8b2)], this[_0x4e0e01(0x8b3)]);
        }
        get ['near']() {
            var _0x4994b0 = _0x6027f5;
            return this[_0x4994b0(0x8ae)];
        }
        get [_0x6027f5(0x8b6)]() {
            var _0x28a4d9 = _0x6027f5;
            return this[_0x28a4d9(0x8af)];
        }
        get ['left']() {
            return this['_left'];
        }
        get [_0x6027f5(0x8b7)]() {
            var _0x5b24db = _0x6027f5;
            return this[_0x5b24db(0x8b1)];
        }
        get [_0x6027f5(0x8b8)]() {
            var _0x4d8495 = _0x6027f5;
            return this[_0x4d8495(0x8b2)];
        }
        get [_0x6027f5(0x8b9)]() {
            var _0xf86893 = _0x6027f5;
            return this[_0xf86893(0x8b3)];
        }
        [_0x6027f5(0x8ba)](_0x1dcd38) {
            var _0xfbc269 = _0x6027f5;
            return this[_0xfbc269(0x5de)][_0xfbc269(0x8bb)](_0x1dcd38[_0xfbc269(0x8b5)]);
        }
        [_0x6027f5(0x8bc)](_0x3eed01) {
            if (_0x3eed01 instanceof _0x1391ac) {
                var _0x1b2264 = _0x3eed01;
                return this['equalsBoundFrustum'](_0x1b2264);
            }
            return !0x1;
        }
        [_0x6027f5(0x8bd)](_0x2f062a) {
            var _0x96bbf4 = _0x6027f5;
            switch (_0x2f062a) {
            case 0x0:
                return this['_near'];
            case 0x1:
                return this[_0x96bbf4(0x8af)];
            case 0x2:
                return this['_left'];
            case 0x3:
                return this[_0x96bbf4(0x8b1)];
            case 0x4:
                return this[_0x96bbf4(0x8b2)];
            case 0x5:
                return this[_0x96bbf4(0x8b3)];
            default:
                return null;
            }
        }
        static ['get3PlaneInterPoint'](_0x103ed1, _0x298ebe, _0x3b03b9, _0x1e90fd) {
            var _0x2a7c9f = _0x6027f5, _0x4db787 = _0x103ed1[_0x2a7c9f(0x82f)], _0x26ab33 = _0x298ebe[_0x2a7c9f(0x82f)], _0x142fe0 = _0x3b03b9['normal'];
            _0x3697cd[_0x2a7c9f(0x217)](_0x26ab33, _0x142fe0, _0x1391ac[_0x2a7c9f(0x283)]), _0x3697cd['cross'](_0x142fe0, _0x4db787, _0x1391ac[_0x2a7c9f(0x284)]), _0x3697cd[_0x2a7c9f(0x217)](_0x4db787, _0x26ab33, _0x1391ac['_tempV32']);
            var _0x3b7ae0 = _0x3697cd[_0x2a7c9f(0x20b)](_0x4db787, _0x1391ac['_tempV30']), _0x3b8601 = _0x3697cd[_0x2a7c9f(0x20b)](_0x26ab33, _0x1391ac['_tempV31']), _0x53523e = _0x3697cd[_0x2a7c9f(0x20b)](_0x142fe0, _0x1391ac['_tempV32']);
            _0x3697cd[_0x2a7c9f(0x1f9)](_0x1391ac[_0x2a7c9f(0x283)], -_0x103ed1[_0x2a7c9f(0x20a)] / _0x3b7ae0, _0x1391ac[_0x2a7c9f(0x889)]), _0x3697cd[_0x2a7c9f(0x1f9)](_0x1391ac[_0x2a7c9f(0x284)], -_0x298ebe[_0x2a7c9f(0x20a)] / _0x3b8601, _0x1391ac[_0x2a7c9f(0x884)]), _0x3697cd['scale'](_0x1391ac[_0x2a7c9f(0x285)], -_0x3b03b9[_0x2a7c9f(0x20a)] / _0x53523e, _0x1391ac['_tempV35']), _0x3697cd[_0x2a7c9f(0x207)](_0x1391ac[_0x2a7c9f(0x889)], _0x1391ac['_tempV34'], _0x1391ac[_0x2a7c9f(0x8a0)]), _0x3697cd[_0x2a7c9f(0x207)](_0x1391ac[_0x2a7c9f(0x89f)], _0x1391ac['_tempV36'], _0x1e90fd);
        }
        [_0x6027f5(0x8be)](_0x2775a1) {
            var _0x19ff9c = _0x6027f5;
            _0x1391ac[_0x19ff9c(0x8bf)](this['_near'], this[_0x19ff9c(0x8b3)], this[_0x19ff9c(0x8b1)], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8ac)]]), _0x1391ac[_0x19ff9c(0x8bf)](this['_near'], this[_0x19ff9c(0x8b2)], this[_0x19ff9c(0x8b1)], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8ab)]]), _0x1391ac[_0x19ff9c(0x8bf)](this[_0x19ff9c(0x8ae)], this[_0x19ff9c(0x8b2)], this[_0x19ff9c(0x8b0)], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8aa)]]), _0x1391ac['get3PlaneInterPoint'](this['_near'], this[_0x19ff9c(0x8b3)], this['_left'], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8a9)]]), _0x1391ac[_0x19ff9c(0x8bf)](this[_0x19ff9c(0x8af)], this[_0x19ff9c(0x8b3)], this[_0x19ff9c(0x8b1)], _0x2775a1[_0x18be32['FrustumCorner'][_0x19ff9c(0x8a8)]]), _0x1391ac['get3PlaneInterPoint'](this[_0x19ff9c(0x8af)], this[_0x19ff9c(0x8b2)], this[_0x19ff9c(0x8b1)], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8a7)]]), _0x1391ac[_0x19ff9c(0x8bf)](this[_0x19ff9c(0x8af)], this[_0x19ff9c(0x8b2)], this[_0x19ff9c(0x8b0)], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8a6)]]), _0x1391ac[_0x19ff9c(0x8bf)](this[_0x19ff9c(0x8af)], this[_0x19ff9c(0x8b3)], this['_left'], _0x2775a1[_0x18be32[_0x19ff9c(0x8a4)][_0x19ff9c(0x8a5)]]);
        }
        ['containsPoint'](_0x455754) {
            var _0x2da4ea = _0x6027f5;
            for (var _0x4f3986 = _0x5a837f[_0x2da4ea(0x879)], _0x355f8f = _0x5a837f[_0x2da4ea(0x879)], _0xf8c720 = 0x0; _0xf8c720 < 0x6; _0xf8c720++) {
                switch (_0xf8c720) {
                case 0x0:
                    _0x355f8f = _0x4dcbd3['intersectsPlaneAndPoint'](this[_0x2da4ea(0x8ae)], _0x455754);
                    break;
                case 0x1:
                    _0x355f8f = _0x4dcbd3[_0x2da4ea(0x88b)](this[_0x2da4ea(0x8af)], _0x455754);
                    break;
                case 0x2:
                    _0x355f8f = _0x4dcbd3[_0x2da4ea(0x88b)](this[_0x2da4ea(0x8b0)], _0x455754);
                    break;
                case 0x3:
                    _0x355f8f = _0x4dcbd3[_0x2da4ea(0x88b)](this[_0x2da4ea(0x8b1)], _0x455754);
                    break;
                case 0x4:
                    _0x355f8f = _0x4dcbd3['intersectsPlaneAndPoint'](this[_0x2da4ea(0x8b2)], _0x455754);
                    break;
                case 0x5:
                    _0x355f8f = _0x4dcbd3['intersectsPlaneAndPoint'](this[_0x2da4ea(0x8b3)], _0x455754);
                }
                switch (_0x355f8f) {
                case _0x5a837f[_0x2da4ea(0x878)]:
                    return _0x156c38[_0x2da4ea(0x899)];
                case _0x5a837f[_0x2da4ea(0x87a)]:
                    _0x4f3986 = _0x5a837f['PlaneIntersectionType_Intersecting'];
                }
            }
            switch (_0x4f3986) {
            case _0x5a837f[_0x2da4ea(0x87a)]:
                return _0x156c38['Intersects'];
            default:
                return _0x156c38[_0x2da4ea(0x87c)];
            }
        }
        ['intersects'](_0x559e49) {
            var _0x7686a9 = _0x6027f5, _0x5ae584 = _0x559e49[_0x7686a9(0x212)], _0x961ea2 = _0x559e49[_0x7686a9(0x20c)], _0x442508 = _0x5ae584['x'], _0x2cc204 = _0x5ae584['y'], _0x217b24 = _0x5ae584['z'], _0x15d28b = _0x961ea2['x'], _0x1c2a9a = _0x961ea2['y'], _0x1bd465 = _0x961ea2['z'], _0x336d7a = this[_0x7686a9(0x8ae)][_0x7686a9(0x82f)];
            if (this['_near'][_0x7686a9(0x20a)] + _0x336d7a['x'] * (_0x336d7a['x'] < 0x0 ? _0x442508 : _0x15d28b) + _0x336d7a['y'] * (_0x336d7a['y'] < 0x0 ? _0x2cc204 : _0x1c2a9a) + _0x336d7a['z'] * (_0x336d7a['z'] < 0x0 ? _0x217b24 : _0x1bd465) < 0x0)
                return !0x1;
            var _0x39607d = this[_0x7686a9(0x8b0)][_0x7686a9(0x82f)];
            if (this[_0x7686a9(0x8b0)]['distance'] + _0x39607d['x'] * (_0x39607d['x'] < 0x0 ? _0x442508 : _0x15d28b) + _0x39607d['y'] * (_0x39607d['y'] < 0x0 ? _0x2cc204 : _0x1c2a9a) + _0x39607d['z'] * (_0x39607d['z'] < 0x0 ? _0x217b24 : _0x1bd465) < 0x0)
                return !0x1;
            var _0x20d812 = this[_0x7686a9(0x8b1)][_0x7686a9(0x82f)];
            if (this[_0x7686a9(0x8b1)][_0x7686a9(0x20a)] + _0x20d812['x'] * (_0x20d812['x'] < 0x0 ? _0x442508 : _0x15d28b) + _0x20d812['y'] * (_0x20d812['y'] < 0x0 ? _0x2cc204 : _0x1c2a9a) + _0x20d812['z'] * (_0x20d812['z'] < 0x0 ? _0x217b24 : _0x1bd465) < 0x0)
                return !0x1;
            var _0x3135fe = this[_0x7686a9(0x8b3)]['normal'];
            if (this[_0x7686a9(0x8b3)][_0x7686a9(0x20a)] + _0x3135fe['x'] * (_0x3135fe['x'] < 0x0 ? _0x442508 : _0x15d28b) + _0x3135fe['y'] * (_0x3135fe['y'] < 0x0 ? _0x2cc204 : _0x1c2a9a) + _0x3135fe['z'] * (_0x3135fe['z'] < 0x0 ? _0x217b24 : _0x1bd465) < 0x0)
                return !0x1;
            var _0x505518 = this[_0x7686a9(0x8b2)][_0x7686a9(0x82f)];
            if (this['_top']['distance'] + _0x505518['x'] * (_0x505518['x'] < 0x0 ? _0x442508 : _0x15d28b) + _0x505518['y'] * (_0x505518['y'] < 0x0 ? _0x2cc204 : _0x1c2a9a) + _0x505518['z'] * (_0x505518['z'] < 0x0 ? _0x217b24 : _0x1bd465) < 0x0)
                return !0x1;
            var _0x3d9c9c = this['_far']['normal'];
            return !(this[_0x7686a9(0x8af)][_0x7686a9(0x20a)] + _0x3d9c9c['x'] * (_0x3d9c9c['x'] < 0x0 ? _0x442508 : _0x15d28b) + _0x3d9c9c['y'] * (_0x3d9c9c['y'] < 0x0 ? _0x2cc204 : _0x1c2a9a) + _0x3d9c9c['z'] * (_0x3d9c9c['z'] < 0x0 ? _0x217b24 : _0x1bd465) < 0x0);
        }
        [_0x6027f5(0x8c0)](_0x49f0df) {
            var _0x6a1c6c = _0x6027f5;
            for (var _0x9e5de5 = _0x1391ac['_tempV30'], _0x3ad0d7 = _0x1391ac['_tempV31'], _0xf84458 = _0x49f0df[_0x6a1c6c(0x212)], _0x1fe7a1 = _0x49f0df['max'], _0x17b098 = _0x156c38['Contains'], _0x3ec96a = 0x0; _0x3ec96a < 0x6; _0x3ec96a++) {
                var _0x3cd820 = this[_0x6a1c6c(0x8bd)](_0x3ec96a), _0x8dfc2a = _0x3cd820[_0x6a1c6c(0x82f)];
                if (_0x8dfc2a['x'] >= 0x0 ? (_0x9e5de5['x'] = _0x1fe7a1['x'], _0x3ad0d7['x'] = _0xf84458['x']) : (_0x9e5de5['x'] = _0xf84458['x'], _0x3ad0d7['x'] = _0x1fe7a1['x']), _0x8dfc2a['y'] >= 0x0 ? (_0x9e5de5['y'] = _0x1fe7a1['y'], _0x3ad0d7['y'] = _0xf84458['y']) : (_0x9e5de5['y'] = _0xf84458['y'], _0x3ad0d7['y'] = _0x1fe7a1['y']), _0x8dfc2a['z'] >= 0x0 ? (_0x9e5de5['z'] = _0x1fe7a1['z'], _0x3ad0d7['z'] = _0xf84458['z']) : (_0x9e5de5['z'] = _0xf84458['z'], _0x3ad0d7['z'] = _0x1fe7a1['z']), _0x4dcbd3[_0x6a1c6c(0x88b)](_0x3cd820, _0x9e5de5) === _0x5a837f[_0x6a1c6c(0x878)])
                    return _0x156c38[_0x6a1c6c(0x899)];
                _0x4dcbd3[_0x6a1c6c(0x88b)](_0x3cd820, _0x3ad0d7) === _0x5a837f['PlaneIntersectionType_Back'] && (_0x17b098 = _0x156c38[_0x6a1c6c(0x87d)]);
            }
            return _0x17b098;
        }
        [_0x6027f5(0x8c1)](_0x58a4e1) {
            var _0x2be435 = _0x6027f5;
            for (var _0x1e01cf = _0x5a837f[_0x2be435(0x879)], _0x384b7b = _0x5a837f[_0x2be435(0x879)], _0x141ebd = 0x0; _0x141ebd < 0x6; _0x141ebd++) {
                switch (_0x141ebd) {
                case 0x0:
                    _0x384b7b = _0x4dcbd3['intersectsPlaneAndSphere'](this[_0x2be435(0x8ae)], _0x58a4e1);
                    break;
                case 0x1:
                    _0x384b7b = _0x4dcbd3['intersectsPlaneAndSphere'](this[_0x2be435(0x8af)], _0x58a4e1);
                    break;
                case 0x2:
                    _0x384b7b = _0x4dcbd3['intersectsPlaneAndSphere'](this[_0x2be435(0x8b0)], _0x58a4e1);
                    break;
                case 0x3:
                    _0x384b7b = _0x4dcbd3[_0x2be435(0x8c2)](this['_right'], _0x58a4e1);
                    break;
                case 0x4:
                    _0x384b7b = _0x4dcbd3[_0x2be435(0x8c2)](this['_top'], _0x58a4e1);
                    break;
                case 0x5:
                    _0x384b7b = _0x4dcbd3[_0x2be435(0x8c2)](this[_0x2be435(0x8b3)], _0x58a4e1);
                }
                switch (_0x384b7b) {
                case _0x5a837f[_0x2be435(0x878)]:
                    return _0x156c38[_0x2be435(0x899)];
                case _0x5a837f[_0x2be435(0x87a)]:
                    _0x1e01cf = _0x5a837f[_0x2be435(0x87a)];
                }
            }
            switch (_0x1e01cf) {
            case _0x5a837f[_0x2be435(0x87a)]:
                return _0x156c38[_0x2be435(0x87d)];
            default:
                return _0x156c38['Contains'];
            }
        }
    }
    _0x1391ac[_0x6027f5(0x283)] = new _0x3697cd(), _0x1391ac[_0x6027f5(0x284)] = new _0x3697cd(), _0x1391ac[_0x6027f5(0x285)] = new _0x3697cd(), _0x1391ac['_tempV33'] = new _0x3697cd(), _0x1391ac[_0x6027f5(0x884)] = new _0x3697cd(), _0x1391ac['_tempV35'] = new _0x3697cd(), _0x1391ac['_tempV36'] = new _0x3697cd();
    class _0x573b01 {
        constructor(_0x11647b, _0xbb22fe, _0x316dad, _0xbd17a9) {
            var _0x3212ec = _0x6027f5;
            this[_0x3212ec(0x8c3)] = 0x0, this[_0x3212ec(0x8c4)] = 0x1, this['x'] = _0x11647b, this['y'] = _0xbb22fe, this['width'] = _0x316dad, this[_0x3212ec(0x439)] = _0xbd17a9;
        }
        ['project'](_0x31959c, _0x57b2d2, _0x54bfe2) {
            var _0x198305 = _0x6027f5;
            _0x3697cd[_0x198305(0x215)](_0x31959c, _0x57b2d2, _0x54bfe2);
            var _0xd24554 = _0x54bfe2['x'], _0x41c2ce = _0x54bfe2['y'], _0x28c300 = _0x54bfe2['z'], _0x50da42 = _0x54bfe2['w'];
            0x1 !== _0x50da42 && (_0xd24554 /= _0x50da42, _0x41c2ce /= _0x50da42, _0x28c300 /= _0x50da42), _0x54bfe2['x'] = 0.5 * (_0xd24554 + 0x1) * this['width'] + this['x'], _0x54bfe2['y'] = 0.5 * (0x1 - _0x41c2ce) * this[_0x198305(0x439)] + this['y'], _0x54bfe2['z'] = _0x28c300 * (this[_0x198305(0x8c4)] - this[_0x198305(0x8c3)]) + this['minDepth'];
        }
        [_0x6027f5(0x8c5)](_0x268f52, _0x38fefd, _0x4d7581) {
            var _0x597c9b = _0x6027f5, _0x3b4592 = _0x38fefd[_0x597c9b(0x1fe)];
            _0x4d7581['x'] = (_0x268f52['x'] - this['x']) / this[_0x597c9b(0x313)] * 0x2 - 0x1, _0x4d7581['y'] = -((_0x268f52['y'] - this['y']) / this[_0x597c9b(0x439)] * 0x2 - 0x1), _0x4d7581['z'] = (_0x268f52['z'] - this[_0x597c9b(0x8c3)]) / (this[_0x597c9b(0x8c4)] - this[_0x597c9b(0x8c3)]);
            var _0x493f95 = _0x4d7581['x'] * _0x3b4592[0x3] + _0x4d7581['y'] * _0x3b4592[0x7] + _0x4d7581['z'] * _0x3b4592[0xb] + _0x3b4592[0xf];
            _0x3697cd[_0x597c9b(0x857)](_0x4d7581, _0x38fefd, _0x4d7581), 0x1 !== _0x493f95 && (_0x4d7581['x'] = _0x4d7581['x'] / _0x493f95, _0x4d7581['y'] = _0x4d7581['y'] / _0x493f95, _0x4d7581['z'] = _0x4d7581['z'] / _0x493f95);
        }
        [_0x6027f5(0x8c6)](_0x3c1146, _0x2de575, _0x143ff3, _0xf797cf, _0x10cb2b) {
            var _0x9bae17 = _0x6027f5;
            _0x6b4d98[_0x9bae17(0x27b)](_0x2de575, _0x143ff3, _0x573b01[_0x9bae17(0x495)]), _0xf797cf && _0x6b4d98[_0x9bae17(0x27b)](_0x573b01[_0x9bae17(0x495)], _0xf797cf, _0x573b01['_tempMatrix4x4']), _0x573b01[_0x9bae17(0x495)][_0x9bae17(0x280)](_0x573b01[_0x9bae17(0x495)]), this[_0x9bae17(0x8c5)](_0x3c1146, _0x573b01[_0x9bae17(0x495)], _0x10cb2b);
        }
        [_0x6027f5(0x1fc)](_0x587d96) {
            var _0x41211b = _0x6027f5;
            _0x587d96['x'] = this['x'], _0x587d96['y'] = this['y'], _0x587d96[_0x41211b(0x313)] = this[_0x41211b(0x313)], _0x587d96[_0x41211b(0x439)] = this[_0x41211b(0x439)], _0x587d96['minDepth'] = this[_0x41211b(0x8c3)], _0x587d96[_0x41211b(0x8c4)] = this[_0x41211b(0x8c4)];
        }
    }
    _0x573b01['_tempMatrix4x4'] = new _0x6b4d98();
    class _0x353f39 {
        constructor() {
        }
        static ['calculateCursorRay'](_0x42e756, _0x2a78fe, _0x21ee86, _0x617db9, _0x13e356, _0x549885) {
            var _0x1b764a = _0x6027f5, _0x48fa6c = _0x42e756['x'], _0x155ec0 = _0x42e756['y'], _0x630829 = _0x353f39[_0x1b764a(0x59f)], _0x557406 = _0x630829;
            _0x557406['x'] = _0x48fa6c, _0x557406['y'] = _0x155ec0, _0x557406['z'] = _0x2a78fe[_0x1b764a(0x8c3)];
            var _0x361b8f = _0x353f39[_0x1b764a(0x3a1)], _0x9cef94 = _0x361b8f;
            _0x9cef94['x'] = _0x48fa6c, _0x9cef94['y'] = _0x155ec0, _0x9cef94['z'] = _0x2a78fe[_0x1b764a(0x8c4)];
            var _0x39943d = _0x549885[_0x1b764a(0x883)], _0x4ed41e = _0x353f39[_0x1b764a(0x855)];
            _0x2a78fe[_0x1b764a(0x8c6)](_0x630829, _0x21ee86, _0x617db9, _0x13e356, _0x39943d), _0x2a78fe[_0x1b764a(0x8c6)](_0x361b8f, _0x21ee86, _0x617db9, _0x13e356, _0x4ed41e);
            var _0xdc6984 = _0x549885[_0x1b764a(0x87b)];
            _0xdc6984['x'] = _0x4ed41e['x'] - _0x39943d['x'], _0xdc6984['y'] = _0x4ed41e['y'] - _0x39943d['y'], _0xdc6984['z'] = _0x4ed41e['z'] - _0x39943d['z'], _0x3697cd[_0x1b764a(0x214)](_0x549885[_0x1b764a(0x87b)], _0x549885[_0x1b764a(0x87b)]);
        }
        static ['rayIntersectsTriangle'](_0x195cdb, _0x254bf0, _0x394817, _0x132c74) {
            var _0x404c19 = _0x6027f5, _0x2fbbe7 = _0x353f39[_0x404c19(0x59f)], _0x634cb0 = _0x353f39[_0x404c19(0x3a1)];
            _0x3697cd[_0x404c19(0x28a)](_0x394817, _0x254bf0, _0x2fbbe7), _0x3697cd[_0x404c19(0x28a)](_0x132c74, _0x254bf0, _0x634cb0);
            var _0x5c6f0d, _0x25fbb1 = _0x353f39[_0x404c19(0x855)];
            if (_0x3697cd[_0x404c19(0x217)](_0x195cdb[_0x404c19(0x87b)], _0x634cb0, _0x25fbb1), (_0x5c6f0d = _0x3697cd[_0x404c19(0x20b)](_0x2fbbe7, _0x25fbb1)) > -Number[_0x404c19(0x8c7)] && _0x5c6f0d < Number['MIN_VALUE'])
                return Number[_0x404c19(0x8c8)];
            var _0x524730, _0x9d095d = 0x1 / _0x5c6f0d, _0x47feb9 = _0x353f39[_0x404c19(0x85d)];
            if (_0x3697cd['subtract'](_0x195cdb[_0x404c19(0x883)], _0x254bf0, _0x47feb9), _0x524730 = _0x3697cd[_0x404c19(0x20b)](_0x47feb9, _0x25fbb1), (_0x524730 *= _0x9d095d) < 0x0 || _0x524730 > 0x1)
                return Number['NaN'];
            var _0x25cb15, _0x448aca, _0x309203 = _0x353f39[_0x404c19(0x85b)];
            return _0x3697cd[_0x404c19(0x217)](_0x47feb9, _0x2fbbe7, _0x309203), _0x25cb15 = _0x3697cd[_0x404c19(0x20b)](_0x195cdb[_0x404c19(0x87b)], _0x309203), (_0x25cb15 *= _0x9d095d) < 0x0 || _0x524730 + _0x25cb15 > 0x1 ? Number[_0x404c19(0x8c8)] : (_0x448aca = _0x3697cd[_0x404c19(0x20b)](_0x634cb0, _0x309203), (_0x448aca *= _0x9d095d) < 0x0 ? Number['NaN'] : _0x448aca);
        }
    }
    _0x353f39[_0x6027f5(0x59f)] = new _0x3697cd(), _0x353f39['_tempVector31'] = new _0x3697cd(), _0x353f39[_0x6027f5(0x855)] = new _0x3697cd(), _0x353f39['_tempVector33'] = new _0x3697cd(), _0x353f39[_0x6027f5(0x85b)] = new _0x3697cd(), (_0x8a1a54 = _0x18be32[_0x6027f5(0x8c9)] || (_0x18be32[_0x6027f5(0x8c9)] = {}))[_0x8a1a54['UInt8'] = 0x0] = _0x6027f5(0x8ca), _0x8a1a54[_0x8a1a54[_0x6027f5(0x8cb)] = 0x1] = _0x6027f5(0x8cb), _0x8a1a54[_0x8a1a54[_0x6027f5(0x8cc)] = 0x2] = _0x6027f5(0x8cc);
    class _0x67ef8f extends _0x387b86[_0x6027f5(0x458)] {
        constructor(_0x13367e, _0x59ab43, _0x345cd4 = 0x88e4, _0x38271f = !0x1) {
            var _0x5ef057 = _0x6027f5;
            switch (super(), this[_0x5ef057(0x8cd)] = _0x13367e, this['_indexCount'] = _0x59ab43, this['_bufferUsage'] = _0x345cd4, this[_0x5ef057(0x44f)] = _0x387b86[_0x5ef057(0x303)][_0x5ef057(0x304)][_0x5ef057(0x8ce)], this[_0x5ef057(0x450)] = _0x38271f, _0x13367e) {
            case _0x18be32[_0x5ef057(0x8c9)][_0x5ef057(0x8cc)]:
                this['_indexTypeByteCount'] = 0x4;
                break;
            case _0x18be32[_0x5ef057(0x8c9)]['UInt16']:
                this[_0x5ef057(0x8cf)] = 0x2;
                break;
            case _0x18be32[_0x5ef057(0x8c9)][_0x5ef057(0x8ca)]:
                this['_indexTypeByteCount'] = 0x1;
                break;
            default:
                throw new Error('unidentification\x20index\x20type.');
            }
            var _0x1ad07c = this['_indexTypeByteCount'] * _0x59ab43, _0x491b14 = _0x387b86['BufferStateBase'][_0x5ef057(0x4ec)];
            if (this[_0x5ef057(0x451)] = _0x1ad07c, _0x491b14 ? _0x491b14[_0x5ef057(0x4f4)] === this ? _0x387b86['LayaGL'][_0x5ef057(0x304)]['bufferData'](this[_0x5ef057(0x44f)], _0x1ad07c, this[_0x5ef057(0x44e)]) : (_0x491b14[_0x5ef057(0x4f9)](), this[_0x5ef057(0x452)](), _0x387b86[_0x5ef057(0x303)]['instance']['bufferData'](this[_0x5ef057(0x44f)], _0x1ad07c, this[_0x5ef057(0x44e)]), _0x491b14['bind']()) : (this['bind'](), _0x387b86[_0x5ef057(0x303)]['instance'][_0x5ef057(0x45c)](this[_0x5ef057(0x44f)], _0x1ad07c, this[_0x5ef057(0x44e)])), _0x38271f)
                switch (_0x13367e) {
                case _0x18be32[_0x5ef057(0x8c9)][_0x5ef057(0x8cc)]:
                    this[_0x5ef057(0x453)] = new Uint32Array(_0x59ab43);
                    break;
                case _0x18be32[_0x5ef057(0x8c9)][_0x5ef057(0x8cb)]:
                    this[_0x5ef057(0x453)] = new Uint16Array(_0x59ab43);
                    break;
                case _0x18be32[_0x5ef057(0x8c9)][_0x5ef057(0x8ca)]:
                    this['_buffer'] = new Uint8Array(_0x59ab43);
                }
        }
        get [_0x6027f5(0x8d0)]() {
            return this['_indexType'];
        }
        get [_0x6027f5(0x8d1)]() {
            var _0x22af83 = _0x6027f5;
            return this[_0x22af83(0x8cf)];
        }
        get ['indexCount']() {
            var _0x29f036 = _0x6027f5;
            return this[_0x29f036(0x62b)];
        }
        get [_0x6027f5(0x457)]() {
            var _0xa05b5e = _0x6027f5;
            return this[_0xa05b5e(0x450)];
        }
        ['_bindForVAO']() {
            var _0xb624f0 = _0x6027f5;
            if (!_0x387b86[_0xb624f0(0x4ef)][_0xb624f0(0x4ec)])
                throw _0xb624f0(0x8d2);
            var _0x15b09c = _0x387b86['LayaGL'][_0xb624f0(0x304)];
            _0x15b09c[_0xb624f0(0x8d3)](_0x15b09c[_0xb624f0(0x8ce)], this[_0xb624f0(0x45a)]);
        }
        [_0x6027f5(0x452)]() {
            var _0x4c8343 = _0x6027f5;
            if (_0x387b86[_0x4c8343(0x4ef)][_0x4c8343(0x4ec)])
                throw 'IndexBuffer3D:\x20must\x20unbind\x20current\x20BufferState.';
            if (_0x387b86[_0x4c8343(0x458)][_0x4c8343(0x4f4)] !== this[_0x4c8343(0x45a)]) {
                var _0x393654 = _0x387b86['LayaGL'][_0x4c8343(0x304)];
                return _0x393654[_0x4c8343(0x8d3)](_0x393654[_0x4c8343(0x8ce)], this[_0x4c8343(0x45a)]), _0x387b86[_0x4c8343(0x458)][_0x4c8343(0x4f4)] = this[_0x4c8343(0x45a)], !0x0;
            }
            return !0x1;
        }
        [_0x6027f5(0x45d)](_0x1d8aa2, _0x525565 = 0x0, _0x11d815 = 0x0, _0x3cfe7b = 0xffffffff) {
            var _0x4f51de = _0x6027f5, _0x50bcc0 = this[_0x4f51de(0x8cf)];
            if (0x0 !== _0x11d815 || 0xffffffff !== _0x3cfe7b)
                switch (this[_0x4f51de(0x8cd)]) {
                case _0x18be32[_0x4f51de(0x8c9)][_0x4f51de(0x8cc)]:
                    _0x1d8aa2 = new Uint32Array(_0x1d8aa2[_0x4f51de(0x454)], _0x11d815 * _0x50bcc0, _0x3cfe7b);
                    break;
                case _0x18be32[_0x4f51de(0x8c9)][_0x4f51de(0x8cb)]:
                    _0x1d8aa2 = new Uint16Array(_0x1d8aa2[_0x4f51de(0x454)], _0x11d815 * _0x50bcc0, _0x3cfe7b);
                    break;
                case _0x18be32['IndexFormat'][_0x4f51de(0x8ca)]:
                    _0x1d8aa2 = new Uint8Array(_0x1d8aa2[_0x4f51de(0x454)], _0x11d815 * _0x50bcc0, _0x3cfe7b);
                }
            var _0x78b0ab = _0x387b86[_0x4f51de(0x4ef)][_0x4f51de(0x4ec)];
            if (_0x78b0ab ? _0x78b0ab[_0x4f51de(0x4f4)] === this ? _0x387b86['LayaGL'][_0x4f51de(0x304)][_0x4f51de(0x45f)](this[_0x4f51de(0x44f)], _0x525565 * _0x50bcc0, _0x1d8aa2) : (_0x78b0ab[_0x4f51de(0x4f9)](), this[_0x4f51de(0x452)](), _0x387b86[_0x4f51de(0x303)][_0x4f51de(0x304)][_0x4f51de(0x45f)](this[_0x4f51de(0x44f)], _0x525565 * _0x50bcc0, _0x1d8aa2), _0x78b0ab[_0x4f51de(0x452)]()) : (this[_0x4f51de(0x452)](), _0x387b86[_0x4f51de(0x303)]['instance']['bufferSubData'](this[_0x4f51de(0x44f)], _0x525565 * _0x50bcc0, _0x1d8aa2)), this[_0x4f51de(0x450)]) {
                if (0x0 !== _0x525565 || 0x0 !== _0x11d815 || 0xffffffff !== _0x3cfe7b) {
                    var _0x3fe2e9 = this[_0x4f51de(0x453)][_0x4f51de(0x205)] - _0x525565;
                    _0x3cfe7b > _0x3fe2e9 && (_0x3cfe7b = _0x3fe2e9);
                    for (var _0x4ee7ef = 0x0; _0x4ee7ef < _0x3cfe7b; _0x4ee7ef++)
                        this[_0x4f51de(0x453)][_0x525565 + _0x4ee7ef] = _0x1d8aa2[_0x4ee7ef];
                } else
                    this['_buffer'] = _0x1d8aa2;
            }
        }
        [_0x6027f5(0x319)]() {
            var _0x27e986 = _0x6027f5;
            if (this[_0x27e986(0x450)])
                return this[_0x27e986(0x453)];
            throw new Error('Can\x27t\x20read\x20data\x20from\x20VertexBuffer\x20with\x20only\x20write\x20flag!');
        }
        [_0x6027f5(0x364)]() {
            var _0x23d9f7 = _0x6027f5;
            super[_0x23d9f7(0x364)](), this[_0x23d9f7(0x453)] = null, this['_byteLength'] = 0x0, this[_0x23d9f7(0x62b)] = 0x0;
        }
    }
    class _0x5bd0bd {
        constructor() {
        }
        ['_render'](_0x44428a) {
        }
    }
    class _0x5ee7a8 extends _0x5bd0bd {
        constructor() {
            var _0x208243 = _0x6027f5;
            super();
            var _0xdf1570 = _0x387b86[_0x208243(0x303)][_0x208243(0x304)], _0x15ed69 = new Float32Array([
                    -0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    0x1
                ]), _0x188a41 = new Uint8Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x0,
                    0x3,
                    0x7,
                    0x7,
                    0x4,
                    0x0,
                    0x1,
                    0x5,
                    0x6,
                    0x6,
                    0x2,
                    0x1,
                    0x3,
                    0x2,
                    0x6,
                    0x6,
                    0x7,
                    0x3,
                    0x0,
                    0x4,
                    0x5,
                    0x5,
                    0x1,
                    0x0
                ]), _0x4daccd = _0x73b54a[_0x208243(0x607)](_0x208243(0x60a));
            this[_0x208243(0x4f6)] = new _0x2ce777(0x8 * _0x4daccd[_0x208243(0x4e5)], _0xdf1570[_0x208243(0x4fa)], !0x1), this[_0x208243(0x4f6)][_0x208243(0x456)] = _0x4daccd, this[_0x208243(0x629)] = new _0x67ef8f(_0x18be32['IndexFormat']['UInt8'], 0x24, _0xdf1570[_0x208243(0x4fa)], !0x1), this[_0x208243(0x4f6)][_0x208243(0x45d)](_0x15ed69['buffer']), this[_0x208243(0x629)][_0x208243(0x45d)](_0x188a41);
            var _0x2c521c = new _0x5b1dae();
            _0x2c521c['bind'](), _0x2c521c[_0x208243(0x4eb)](this[_0x208243(0x4f6)]), _0x2c521c['applyIndexBuffer'](this[_0x208243(0x629)]), _0x2c521c['unBind'](), this[_0x208243(0x4f8)] = _0x2c521c;
        }
        static [_0x6027f5(0x230)]() {
            var _0x70208e = _0x6027f5;
            _0x5ee7a8[_0x70208e(0x304)] = new _0x5ee7a8();
        }
        [_0x6027f5(0x5e8)](_0x1cdd54) {
            var _0x37f941 = _0x6027f5, _0x2fbad9 = _0x387b86[_0x37f941(0x303)]['instance'];
            _0x2fbad9[_0x37f941(0x8d4)](_0x2fbad9[_0x37f941(0x506)], 0x24, _0x2fbad9[_0x37f941(0x40e)], 0x0), _0x387b86[_0x37f941(0x4dc)]['trianglesFaces'] += 0xc, _0x387b86[_0x37f941(0x4dc)][_0x37f941(0x502)]++;
        }
    }
    class _0xc214db {
        constructor() {
            var _0x644675 = _0x6027f5;
            this[_0x644675(0x5d9)] = _0x5ee7a8[_0x644675(0x304)];
        }
        get [_0x6027f5(0x8d5)]() {
            var _0x4133b2 = _0x6027f5;
            return this[_0x4133b2(0x5db)];
        }
        set [_0x6027f5(0x8d5)](_0x23da50) {
            var _0x45b913 = _0x6027f5;
            this[_0x45b913(0x5db)] !== _0x23da50 && (this[_0x45b913(0x5db)] && this[_0x45b913(0x5db)][_0x45b913(0x35c)](), _0x23da50 && _0x23da50[_0x45b913(0x35f)](), this[_0x45b913(0x5db)] = _0x23da50);
        }
        get [_0x6027f5(0x8d6)]() {
            var _0x21e466 = _0x6027f5;
            return this[_0x21e466(0x5d9)];
        }
        set [_0x6027f5(0x8d6)](_0xe86d5c) {
            this['_mesh'] !== _0xe86d5c && (this['_mesh'] = _0xe86d5c);
        }
        [_0x6027f5(0x8d7)]() {
            var _0x26a676 = _0x6027f5;
            return !(!this['_material'] || !this[_0x26a676(0x5d9)]);
        }
        [_0x6027f5(0x5e8)](_0xae286f) {
            var _0x210d3d = _0x6027f5;
            if (this[_0x210d3d(0x5db)] && this['_mesh']) {
                var _0x13f84c = _0x387b86['LayaGL'][_0x210d3d(0x304)], _0xf5d70a = _0xae286f[_0x210d3d(0x5ca)], _0x503c8c = _0xae286f[_0x210d3d(0x5dc)], _0x409a02 = _0xae286f[_0x210d3d(0x64c)], _0x10060c = _0x3985fd['_SET_RUNTIME_VALUE_MODE_REFERENCE_'];
                _0x387b86[_0x210d3d(0x328)][_0x210d3d(0x31a)][_0x210d3d(0x65c)] && _0x3985fd[_0x210d3d(0x4db)](!0x1), _0x387b86['WebGLContext'][_0x210d3d(0x7f7)](_0x13f84c, !0x1), _0x387b86[_0x210d3d(0x40a)]['setDepthFunc'](_0x13f84c, _0x13f84c[_0x210d3d(0x8d8)]), _0x387b86[_0x210d3d(0x40a)][_0x210d3d(0x8d9)](_0x13f84c, !0x1);
                var _0x220aef = _0xc214db['_compileDefine'];
                this['_material'][_0x210d3d(0x4e2)][_0x210d3d(0x498)][_0x210d3d(0x1fc)](_0x220aef);
                var _0x5cb0d2 = _0xae286f[_0x210d3d(0x508)] = this[_0x210d3d(0x5db)][_0x210d3d(0x509)][_0x210d3d(0x50c)](0x0)[_0x210d3d(0x50d)][0x0]['withCompile'](_0x220aef), _0x2f6f8c = _0x5cb0d2[_0x210d3d(0x452)](), _0x3d69ef = _0x387b86[_0x210d3d(0x4dc)][_0x210d3d(0x815)] !== _0x5cb0d2['_uploadMark'], _0x2273b1 = _0x5cb0d2['_uploadScene'] !== _0xf5d70a || _0x3d69ef;
                (_0x2273b1 || _0x2f6f8c) && (_0x5cb0d2[_0x210d3d(0x56a)](_0x5cb0d2[_0x210d3d(0x5e2)], _0xf5d70a[_0x210d3d(0x4e2)], _0x2273b1), _0x5cb0d2[_0x210d3d(0x5fa)] = _0xf5d70a);
                var _0x207777 = _0x5cb0d2['_uploadCameraShaderValue'] !== _0x503c8c || _0x3d69ef;
                if (_0x207777 || _0x2f6f8c) {
                    var _0x41abcd = _0xc214db[_0x210d3d(0x5a3)], _0x13fcdd = _0xc214db[_0x210d3d(0x8da)];
                    _0x409a02[_0x210d3d(0x862)]['cloneTo'](_0x41abcd), _0x409a02[_0x210d3d(0x8db)]['cloneTo'](_0x13fcdd), _0x41abcd[_0x210d3d(0x492)](_0x3697cd[_0x210d3d(0x21b)]), _0x409a02[_0x210d3d(0x866)] && _0x6b4d98[_0x210d3d(0x8dc)](_0x409a02['fieldOfView'], _0x409a02[_0x210d3d(0x868)], _0x409a02[_0x210d3d(0x861)], _0x409a02['farPlane'], _0x13fcdd);
                    var _0x36dc20 = 0x1 / Math['tan'](3.1416 * _0x409a02[_0x210d3d(0x8dd)] / 0xb4 * 0.5);
                    _0x13fcdd['elements'][0x0] = _0x36dc20 / _0x409a02[_0x210d3d(0x868)], _0x13fcdd[_0x210d3d(0x1fe)][0x5] = _0x36dc20, _0x13fcdd['elements'][0xa] = -0.999999, _0x13fcdd[_0x210d3d(0x1fe)][0xb] = -0x1, _0x13fcdd[_0x210d3d(0x1fe)][0xe] = -0x0, _0x409a02[_0x210d3d(0x8de)](_0xae286f, _0x41abcd, _0x13fcdd), _0x5cb0d2['uploadUniforms'](_0x5cb0d2['_cameraUniformParamsMap'], _0x503c8c, _0x207777), _0x5cb0d2[_0x210d3d(0x5fc)] = _0x503c8c;
                }
                var _0x4b41e7 = _0x5cb0d2['_uploadMaterial'] !== this[_0x210d3d(0x5db)] || _0x3d69ef;
                (_0x4b41e7 || _0x2f6f8c) && (_0x5cb0d2['uploadUniforms'](_0x5cb0d2['_materialUniformParamsMap'], this[_0x210d3d(0x5db)][_0x210d3d(0x4e2)], _0x4b41e7), _0x5cb0d2[_0x210d3d(0x8df)] = this[_0x210d3d(0x5db)]), this[_0x210d3d(0x5d9)][_0x210d3d(0x4f8)][_0x210d3d(0x452)](), this[_0x210d3d(0x5d9)][_0x210d3d(0x5e8)](_0xae286f), _0x387b86[_0x210d3d(0x328)]['Render'][_0x210d3d(0x65c)] && _0x3985fd[_0x210d3d(0x4db)](_0x10060c), _0x387b86[_0x210d3d(0x40a)][_0x210d3d(0x7ef)](_0x13f84c, _0x13f84c[_0x210d3d(0x8e0)]), _0x387b86['WebGLContext']['setDepthMask'](_0x13f84c, !0x0), _0x409a02[_0x210d3d(0x8de)](_0xae286f, _0x409a02['viewMatrix'], _0x409a02[_0x210d3d(0x8db)]);
            }
        }
        [_0x6027f5(0x364)]() {
            var _0x52bff0 = _0x6027f5;
            this[_0x52bff0(0x5db)] && (this['_material']['_removeReference'](), this[_0x52bff0(0x5db)] = null);
        }
    }
    _0xc214db[_0x6027f5(0x5a3)] = new _0x6b4d98(), _0xc214db[_0x6027f5(0x8da)] = new _0x6b4d98(), _0xc214db[_0x6027f5(0x569)] = new _0x1ff4c5();
    class _0x1d2570 extends _0x44a154 {
        constructor(_0x283800 = 0.3, _0x461ce2 = 0x3e8) {
            var _0x1f8bb5 = _0x6027f5;
            super(), this[_0x1f8bb5(0x8e1)] = new _0xc214db(), this['_forward'] = new _0x3697cd(), this[_0x1f8bb5(0x8e2)] = new _0x3697cd(), this[_0x1f8bb5(0x5ed)] = new _0x5b8e4e(0x64 / 0xff, 0x95 / 0xff, 0xed / 0xff, 0x1), this[_0x1f8bb5(0x4e2)] = new _0x3985fd(null), this[_0x1f8bb5(0x8e3)] = 0x3c, this[_0x1f8bb5(0x8e4)] = !0x1, this['_orthographic'] = !0x1, this[_0x1f8bb5(0x8e5)] = 0xa, this[_0x1f8bb5(0x8e6)] = 0x0, this[_0x1f8bb5(0x8e7)] = _0x283800, this[_0x1f8bb5(0x8e8)] = _0x461ce2, this[_0x1f8bb5(0x814)] = 0x7fffffff, this[_0x1f8bb5(0x817)] = !0x0;
        }
        get [_0x6027f5(0x8e9)]() {
            var _0x515514 = _0x6027f5;
            return this[_0x515514(0x8e1)];
        }
        get ['fieldOfView']() {
            var _0x53687d = _0x6027f5;
            return this[_0x53687d(0x8e3)];
        }
        set ['fieldOfView'](_0x446d1a) {
            var _0x34f276 = _0x6027f5;
            this['_fieldOfView'] = _0x446d1a, this[_0x34f276(0x8ea)]();
        }
        get [_0x6027f5(0x861)]() {
            var _0x2a4103 = _0x6027f5;
            return this[_0x2a4103(0x8e7)];
        }
        set ['nearPlane'](_0x270112) {
            var _0x1f9048 = _0x6027f5;
            this[_0x1f9048(0x8e7)] = _0x270112, this[_0x1f9048(0x8ea)]();
        }
        get [_0x6027f5(0x860)]() {
            var _0x50c241 = _0x6027f5;
            return this[_0x50c241(0x8e8)];
        }
        set ['farPlane'](_0x4bd48a) {
            var _0x257cd2 = _0x6027f5;
            this[_0x257cd2(0x8e8)] = _0x4bd48a, this[_0x257cd2(0x8ea)]();
        }
        get [_0x6027f5(0x866)]() {
            var _0x5b7d6d = _0x6027f5;
            return this[_0x5b7d6d(0x8eb)];
        }
        set ['orthographic'](_0x5cd886) {
            var _0x5bdc8c = _0x6027f5;
            this[_0x5bdc8c(0x8eb)] = _0x5cd886, this[_0x5bdc8c(0x8ea)]();
        }
        get [_0x6027f5(0x867)]() {
            var _0x81bb74 = _0x6027f5;
            return this[_0x81bb74(0x8e5)];
        }
        set [_0x6027f5(0x867)](_0xb7ec2f) {
            var _0x102293 = _0x6027f5;
            this[_0x102293(0x8e5)] = _0xb7ec2f, this[_0x102293(0x8ea)]();
        }
        get [_0x6027f5(0x8e6)]() {
            var _0x1adb44 = _0x6027f5;
            return this[_0x1adb44(0x8ec)];
        }
        set [_0x6027f5(0x8e6)](_0x2fe52b) {
            this['_renderingOrder'] = _0x2fe52b, this['_sortCamerasByRenderingOrder']();
        }
        ['_sortCamerasByRenderingOrder']() {
            var _0x11b7cf = _0x6027f5;
            if (this[_0x11b7cf(0x8ed)]) {
                for (var _0x3fbb84 = this[_0x11b7cf(0x5ca)][_0x11b7cf(0x8ee)], _0x4c5c41 = _0x3fbb84[_0x11b7cf(0x205)] - 0x1, _0x3b1229 = 0x0; _0x3b1229 < _0x4c5c41; _0x3b1229++)
                    if (_0x3fbb84[_0x3b1229][_0x11b7cf(0x8e6)] > _0x3fbb84[_0x4c5c41]['renderingOrder']) {
                        var _0x30c404 = _0x3fbb84[_0x3b1229];
                        _0x3fbb84[_0x3b1229] = _0x3fbb84[_0x4c5c41], _0x3fbb84[_0x4c5c41] = _0x30c404;
                    }
            }
        }
        ['_calculateProjectionMatrix']() {
        }
        ['_onScreenSizeChanged']() {
            var _0xc67fc0 = _0x6027f5;
            this[_0xc67fc0(0x8ea)]();
        }
        ['_prepareCameraToRender']() {
            var _0x44c6f9 = _0x6027f5, _0x3e56e0 = this[_0x44c6f9(0x4e2)];
            this[_0x44c6f9(0x3d6)][_0x44c6f9(0x493)](this[_0x44c6f9(0x8ef)]), this[_0x44c6f9(0x3d6)][_0x44c6f9(0x8f0)](this[_0x44c6f9(0x8e2)]), _0x3e56e0['setVector3'](_0x1d2570[_0x44c6f9(0x8f1)], this[_0x44c6f9(0x3d6)][_0x44c6f9(0x5a2)]), _0x3e56e0[_0x44c6f9(0x57a)](_0x1d2570[_0x44c6f9(0x8f2)], this[_0x44c6f9(0x8ef)]), _0x3e56e0[_0x44c6f9(0x57a)](_0x1d2570[_0x44c6f9(0x8f3)], this['_up']);
        }
        [_0x6027f5(0x4ff)](_0x5d05b2 = null, _0xd1d417 = null) {
        }
        [_0x6027f5(0x8f4)](_0x594263) {
            var _0x520b1b = _0x6027f5;
            this[_0x520b1b(0x814)] |= Math[_0x520b1b(0x2ff)](0x2, _0x594263);
        }
        [_0x6027f5(0x8f5)](_0x469657) {
            var _0x204eab = _0x6027f5;
            this[_0x204eab(0x814)] &= ~Math[_0x204eab(0x2ff)](0x2, _0x469657);
        }
        ['addAllLayers']() {
            this['cullingMask'] = 0x7fffffff;
        }
        ['removeAllLayers']() {
            var _0x1e0bef = _0x6027f5;
            this[_0x1e0bef(0x814)] = 0x0;
        }
        [_0x6027f5(0x8f6)]() {
            var _0x2aed03 = _0x6027f5;
            this[_0x2aed03(0x8e4)] = !0x1, this[_0x2aed03(0x8ea)]();
        }
        [_0x6027f5(0x8f7)]() {
            var _0x58682e = _0x6027f5;
            this[_0x58682e(0x3b0)]['_addCamera'](this), super['_onActive']();
        }
        [_0x6027f5(0x8f8)]() {
            var _0x37fc07 = _0x6027f5;
            this['_scene']['_removeCamera'](this), super[_0x37fc07(0x8f8)]();
        }
        [_0x6027f5(0x67c)](_0x2cc485, _0x2bf7d0) {
            var _0x174adc = _0x6027f5;
            super['_parse'](_0x2cc485, _0x2bf7d0), this[_0x174adc(0x866)] = _0x2cc485['orthographic'], void 0x0 !== _0x2cc485[_0x174adc(0x867)] && (this[_0x174adc(0x867)] = _0x2cc485['orthographicVerticalSize']), void 0x0 !== _0x2cc485['fieldOfView'] && (this[_0x174adc(0x8dd)] = _0x2cc485[_0x174adc(0x8dd)]), this['nearPlane'] = _0x2cc485[_0x174adc(0x861)], this[_0x174adc(0x860)] = _0x2cc485[_0x174adc(0x860)];
            var _0x3b9fdf = _0x2cc485[_0x174adc(0x5ed)];
            this['clearColor'] = new _0x5b8e4e(_0x3b9fdf[0x0], _0x3b9fdf[0x1], _0x3b9fdf[0x2], _0x3b9fdf[0x3]);
            var _0x55d504 = _0x2cc485[_0x174adc(0x8f9)];
            _0x55d504 && (this[_0x174adc(0x8e1)][_0x174adc(0x8d5)] = _0x387b86[_0x174adc(0x3bd)][_0x174adc(0x3b7)](_0x55d504['path']));
        }
        [_0x6027f5(0x364)](_0x1400cd = !0x0) {
            var _0xab420b = _0x6027f5;
            this[_0xab420b(0x8e1)][_0xab420b(0x364)](), this[_0xab420b(0x8e1)] = null, _0x387b86[_0xab420b(0x68d)][_0xab420b(0x8fa)][_0xab420b(0x8fb)](_0x387b86['Event'][_0xab420b(0x8fc)], this, this[_0xab420b(0x8fd)]), super[_0xab420b(0x364)](_0x1400cd);
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x1d2570();
        }
    }
    _0x1d2570[_0x6027f5(0x8fe)] = new _0x6b4d98(), _0x1d2570['CAMERAPOS'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x8ff)), _0x1d2570[_0x6027f5(0x900)] = _0x3a9f31[_0x6027f5(0x553)]('u_View'), _0x1d2570[_0x6027f5(0x901)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x902)), _0x1d2570[_0x6027f5(0x903)] = _0x3a9f31[_0x6027f5(0x553)]('u_ViewProjection'), _0x1d2570[_0x6027f5(0x8f2)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x904)), _0x1d2570[_0x6027f5(0x8f3)] = _0x3a9f31[_0x6027f5(0x553)]('u_CameraUp'), _0x1d2570[_0x6027f5(0x905)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x906)), _0x1d2570[_0x6027f5(0x907)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x908)), _0x1d2570[_0x6027f5(0x909)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x90a)), _0x1d2570[_0x6027f5(0x90b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x90c)), _0x1d2570[_0x6027f5(0x90d)] = _0x3a9f31[_0x6027f5(0x553)]('u_ZBufferParams'), _0x1d2570['SHADERDEFINE_DEPTH'] = _0x3a9f31['getDefineByName'](_0x6027f5(0x90e)), _0x1d2570[_0x6027f5(0x90f)] = _0x3a9f31[_0x6027f5(0x510)]('DEPTHNORMALSMAP'), _0x1d2570['RENDERINGTYPE_DEFERREDLIGHTING'] = 'DEFERREDLIGHTING', _0x1d2570[_0x6027f5(0x910)] = 'FORWARDRENDERING', _0x1d2570[_0x6027f5(0x911)] = new _0x6b4d98(0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), _0x1d2570[_0x6027f5(0x912)] = new _0x6b4d98(), _0x1d2570['_invertYProjectionViewMatrix'] = new _0x6b4d98(), _0x1d2570[_0x6027f5(0x913)] = 0x0, _0x1d2570['CLEARFLAG_SKY'] = 0x1, _0x1d2570[_0x6027f5(0x914)] = 0x2, _0x1d2570['CLEARFLAG_NONE'] = 0x3, (_0x276727 = _0x18be32[_0x6027f5(0x915)] || (_0x18be32['ShadowMode'] = {}))[_0x276727[_0x6027f5(0x916)] = 0x0] = _0x6027f5(0x916), _0x276727[_0x276727[_0x6027f5(0x917)] = 0x1] = _0x6027f5(0x917), _0x276727[_0x276727[_0x6027f5(0x918)] = 0x2] = _0x6027f5(0x918), _0x276727[_0x276727[_0x6027f5(0x919)] = 0x3] = 'SoftHigh';
    class _0x43184a {
    }
    (_0x4200bf = _0x18be32[_0x6027f5(0x91a)] || (_0x18be32[_0x6027f5(0x91a)] = {}))[_0x4200bf[_0x6027f5(0x91b)] = 0x0] = _0x6027f5(0x91b), _0x4200bf[_0x4200bf['Spot'] = 0x1] = _0x6027f5(0x91c), _0x4200bf[_0x4200bf[_0x6027f5(0x2e2)] = 0x2] = 'Point';
    class _0x413cad extends _0x44a154 {
        constructor() {
            var _0x413b73 = _0x6027f5;
            super(), this[_0x413b73(0x91d)] = _0x18be32[_0x413b73(0x915)][_0x413b73(0x916)], this[_0x413b73(0x91e)] = !0x1, this[_0x413b73(0x91f)] = 0x800, this[_0x413b73(0x920)] = 0x32, this['_shadowDepthBias'] = 0x1, this['_shadowNormalBias'] = 0x1, this[_0x413b73(0x921)] = 0.1, this['_shadowStrength'] = 0x1, this[_0x413b73(0x922)] = new _0x6b4d98(), this['_intensity'] = 0x1, this[_0x413b73(0x923)] = new _0x3697cd(), this[_0x413b73(0x46f)] = new _0x3697cd(0x1, 0x1, 0x1), this[_0x413b73(0x924)] = _0x413cad[_0x413b73(0x925)];
        }
        get ['intensity']() {
            var _0x35bb78 = _0x6027f5;
            return this[_0x35bb78(0x926)];
        }
        set [_0x6027f5(0x927)](_0x147fe6) {
            var _0x47f86f = _0x6027f5;
            this[_0x47f86f(0x926)] = _0x147fe6;
        }
        get ['shadowMode']() {
            return this['_shadowMode'];
        }
        set ['shadowMode'](_0x133bc8) {
            this['_shadowMode'] = _0x133bc8;
        }
        get [_0x6027f5(0x928)]() {
            return this['_shadowDistance'];
        }
        set [_0x6027f5(0x928)](_0x199321) {
            var _0x1d0c35 = _0x6027f5;
            this[_0x1d0c35(0x920)] = _0x199321;
        }
        get [_0x6027f5(0x929)]() {
            var _0x1c4064 = _0x6027f5;
            return this[_0x1c4064(0x91f)];
        }
        set [_0x6027f5(0x929)](_0x4f4c83) {
            this['_shadowResolution'] = _0x4f4c83;
        }
        get ['shadowDepthBias']() {
            var _0x4731b5 = _0x6027f5;
            return this[_0x4731b5(0x92a)];
        }
        set ['shadowDepthBias'](_0x382b8f) {
            var _0x4307e3 = _0x6027f5;
            this[_0x4307e3(0x92a)] = _0x382b8f;
        }
        get [_0x6027f5(0x92b)]() {
            return this['_shadowNormalBias'];
        }
        set [_0x6027f5(0x92b)](_0x48942c) {
            var _0x5363fe = _0x6027f5;
            this[_0x5363fe(0x92c)] = _0x48942c;
        }
        get [_0x6027f5(0x92d)]() {
            var _0x50a894 = _0x6027f5;
            return this[_0x50a894(0x92e)];
        }
        set [_0x6027f5(0x92d)](_0x4f77ae) {
            var _0x596213 = _0x6027f5;
            this[_0x596213(0x92e)] = _0x4f77ae;
        }
        get [_0x6027f5(0x92f)]() {
            var _0x3c5c77 = _0x6027f5;
            return this[_0x3c5c77(0x921)];
        }
        set [_0x6027f5(0x92f)](_0x49e157) {
            var _0x593cf6 = _0x6027f5;
            this[_0x593cf6(0x921)] = _0x49e157;
        }
        get [_0x6027f5(0x930)]() {
            var _0x2a3415 = _0x6027f5;
            return this[_0x2a3415(0x924)];
        }
        set [_0x6027f5(0x930)](_0xcfdebe) {
            var _0x4c0176 = _0x6027f5;
            this[_0x4c0176(0x924)] !== _0xcfdebe && (this[_0x4c0176(0x924)] = _0xcfdebe, this['activeInHierarchy'] && (_0xcfdebe !== _0x413cad[_0x4c0176(0x931)] ? this[_0x4c0176(0x932)]() : this['_removeFromScene']()));
        }
        get ['lightWorldMatrix']() {
            var _0x58e89d = _0x6027f5, _0x5e7ec5 = this['transform']['position'], _0x5f0511 = this[_0x58e89d(0x3d6)][_0x58e89d(0x5a4)];
            return _0x6b4d98[_0x58e89d(0x480)](_0x5e7ec5, _0x5f0511, _0x3697cd['_ONE'], this[_0x58e89d(0x922)]), this[_0x58e89d(0x922)];
        }
        [_0x6027f5(0x67c)](_0x2458c9, _0x4b2db4) {
            var _0x46df7a = _0x6027f5;
            super[_0x46df7a(0x67c)](_0x2458c9, _0x4b2db4);
            var _0x28db7f = _0x2458c9[_0x46df7a(0x46f)];
            this[_0x46df7a(0x46f)]['fromArray'](_0x28db7f), this[_0x46df7a(0x927)] = _0x2458c9['intensity'], this[_0x46df7a(0x930)] = _0x2458c9['lightmapBakedType'];
        }
        [_0x6027f5(0x345)](_0x2d27cb, _0x2c6453, _0x41a2eb) {
            var _0x1bcb2b = _0x6027f5;
            super[_0x1bcb2b(0x345)](_0x2d27cb, _0x2c6453, _0x41a2eb);
            var _0x114a6f = _0x2d27cb;
            _0x114a6f[_0x1bcb2b(0x46f)] = this['color']['clone'](), _0x114a6f[_0x1bcb2b(0x927)] = this['intensity'], _0x114a6f[_0x1bcb2b(0x930)] = this[_0x1bcb2b(0x930)];
        }
        [_0x6027f5(0x932)]() {
            var _0x8ee52f = _0x6027f5, _0x1e2899 = this[_0x8ee52f(0x3b0)], _0x2b804a = _0x362537[_0x8ee52f(0x251)]['maxLightCount'];
            _0x1e2899[_0x8ee52f(0x933)] < _0x2b804a ? (_0x1e2899[_0x8ee52f(0x933)]++, this[_0x8ee52f(0x934)](), this[_0x8ee52f(0x91e)] = !0x1) : (_0x1e2899['_alternateLights']['add'](this), this[_0x8ee52f(0x91e)] = !0x0, console[_0x8ee52f(0x25a)](_0x8ee52f(0x935)));
        }
        [_0x6027f5(0x936)]() {
            var _0x1256b0 = _0x6027f5, _0x3c70df = this[_0x1256b0(0x3b0)];
            if (this[_0x1256b0(0x91e)])
                _0x3c70df[_0x1256b0(0x937)]['remove'](this);
            else {
                if (_0x3c70df[_0x1256b0(0x933)]--, this[_0x1256b0(0x938)](), _0x3c70df[_0x1256b0(0x937)]['_length'] > 0x0) {
                    var _0x498051 = _0x3c70df[_0x1256b0(0x937)][_0x1256b0(0x939)]();
                    _0x498051[_0x1256b0(0x934)](), _0x498051[_0x1256b0(0x91e)] = !0x1, _0x3c70df[_0x1256b0(0x933)]++;
                }
            }
        }
        [_0x6027f5(0x934)]() {
        }
        ['_removeFromLightQueue']() {
        }
        [_0x6027f5(0x8f7)]() {
            var _0x16c9c5 = _0x6027f5;
            super[_0x16c9c5(0x8f7)](), this[_0x16c9c5(0x930)] !== _0x413cad[_0x16c9c5(0x931)] && this[_0x16c9c5(0x932)]();
        }
        [_0x6027f5(0x8f8)]() {
            var _0x45a675 = _0x6027f5;
            super[_0x45a675(0x8f8)](), this['lightmapBakedType'] !== _0x413cad['LIGHTMAPBAKEDTYPE_BAKED'] && this[_0x45a675(0x936)]();
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x413cad();
        }
        get [_0x6027f5(0x93a)]() {
            var _0x4208a0 = _0x6027f5;
            return console[_0x4208a0(0x93b)](_0x4208a0(0x93c)), this['color'];
        }
        set [_0x6027f5(0x93a)](_0x13dc9c) {
            var _0x45872c = _0x6027f5;
            console[_0x45872c(0x93b)](_0x45872c(0x93c)), this[_0x45872c(0x46f)] = _0x13dc9c;
        }
    }
    _0x413cad[_0x6027f5(0x925)] = 0x0, _0x413cad[_0x6027f5(0x93d)] = 0x1, _0x413cad[_0x6027f5(0x931)] = 0x2, (_0x5e3c58 = _0x18be32[_0x6027f5(0x93e)] || (_0x18be32[_0x6027f5(0x93e)] = {}))[_0x5e3c58[_0x6027f5(0x93f)] = 0x0] = _0x6027f5(0x93f), _0x5e3c58[_0x5e3c58['TwoCascades'] = 0x1] = _0x6027f5(0x940), _0x5e3c58[_0x5e3c58[_0x6027f5(0x941)] = 0x2] = _0x6027f5(0x941), function (_0x196b75) {
        var _0x5754a5 = _0x6027f5;
        _0x196b75[_0x196b75[_0x5754a5(0x942)] = 0x0] = _0x5754a5(0x942), _0x196b75[_0x196b75['Far'] = 0x1] = _0x5754a5(0x943), _0x196b75[_0x196b75[_0x5754a5(0x944)] = 0x2] = 'Left', _0x196b75[_0x196b75[_0x5754a5(0x945)] = 0x3] = _0x5754a5(0x945), _0x196b75[_0x196b75[_0x5754a5(0x946)] = 0x4] = _0x5754a5(0x946), _0x196b75[_0x196b75[_0x5754a5(0x947)] = 0x5] = _0x5754a5(0x947);
    }(_0x23952c || (_0x23952c = {}));
    class _0x3c155f {
        static [_0x6027f5(0x948)]() {
            var _0x592c15 = _0x6027f5;
            return _0x387b86[_0x592c15(0x303)][_0x592c15(0x4f1)]['_isWebGL2'] || _0x387b86[_0x592c15(0x949)][_0x592c15(0x94a)](_0x387b86[_0x592c15(0x314)][_0x592c15(0x3fd)]);
        }
        static [_0x6027f5(0x94b)]() {
            var _0xaed4f = _0x6027f5;
            _0x387b86[_0xaed4f(0x303)][_0xaed4f(0x4f1)][_0xaed4f(0x3f9)] ? _0x3c155f[_0xaed4f(0x94c)] = _0x387b86[_0xaed4f(0x314)][_0xaed4f(0x3fe)] : _0x3c155f[_0xaed4f(0x94c)] = _0x387b86['RenderTextureFormat'][_0xaed4f(0x3fd)];
        }
        static ['getTemporaryShadowTexture'](_0x44eeba, _0x489c6e, _0x34b3e3) {
            var _0x22f3ce = _0x6027f5, _0x559611 = _0x26547d[_0x22f3ce(0x3ef)](_0x44eeba, _0x489c6e, _0x3c155f[_0x22f3ce(0x94c)], _0x34b3e3);
            return _0x559611[_0x22f3ce(0x2e0)] = _0x387b86['FilterMode'][_0x22f3ce(0x94d)], _0x559611['wrapModeU'] = _0x387b86[_0x22f3ce(0x2e5)][_0x22f3ce(0x208)], _0x559611[_0x22f3ce(0x2e4)] = _0x387b86[_0x22f3ce(0x2e5)][_0x22f3ce(0x208)], _0x559611;
        }
        static [_0x6027f5(0x94e)](_0x4a878d, _0x4fbbab, _0x3d8350, _0x1aba70) {
            var _0x213944 = _0x6027f5, _0x4cea7d;
            _0x4a878d[_0x213944(0x94f)] == _0x18be32[_0x213944(0x91a)][_0x213944(0x91b)] ? _0x4cea7d = 0x2 / _0x4fbbab[_0x213944(0x1fe)][0x0] : _0x4a878d['_lightType'] == _0x18be32['LightType']['Spot'] ? _0x4cea7d = Math['tan'](0.5 * _0x4a878d[_0x213944(0x85c)] * _0x255128[_0x213944(0x1f7)]) * _0x4a878d['range'] : (console[_0x213944(0x25a)](_0x213944(0x950)), _0x4cea7d = 0x0);
            var _0xfac7fa = _0x4cea7d / _0x3d8350, _0x37c248 = -_0x4a878d[_0x213944(0x92a)] * _0xfac7fa, _0x38d9cd = -_0x4a878d['_shadowNormalBias'] * _0xfac7fa;
            if (_0x4a878d[_0x213944(0x951)] == _0x18be32['ShadowMode'][_0x213944(0x919)]) {
                const _0x5b2be9 = 2.5;
                _0x37c248 *= _0x5b2be9, _0x38d9cd *= _0x5b2be9;
            }
            _0x1aba70[_0x213944(0x1f8)](_0x37c248, _0x38d9cd, 0x0, 0x0);
        }
        static [_0x6027f5(0x952)](_0x3a0879, _0x14cc99) {
            var _0x38ebf5 = _0x6027f5;
            _0x1391ac[_0x38ebf5(0x8b4)](_0x3a0879, _0x14cc99[_0x23952c[_0x38ebf5(0x942)]], _0x14cc99[_0x23952c[_0x38ebf5(0x943)]], _0x14cc99[_0x23952c[_0x38ebf5(0x944)]], _0x14cc99[_0x23952c['Right']], _0x14cc99[_0x23952c['Top']], _0x14cc99[_0x23952c[_0x38ebf5(0x946)]]);
        }
        static ['getFarWithRadius'](_0x256eb1, _0x215b3c) {
            var _0x51b219 = _0x6027f5;
            return Math[_0x51b219(0x1f3)](_0x256eb1 * _0x256eb1 / _0x215b3c);
        }
        static ['getCascadesSplitDistance'](_0x2966a4, _0x4a6897, _0x2dd52e, _0x12a1ac, _0x5e1edd, _0x1cd957, _0x2f1fc1, _0x1966d5) {
            var _0x2f4f78 = _0x6027f5;
            _0x1966d5[0x0] = _0x2dd52e;
            var _0x14bd56 = _0x12a1ac - _0x2dd52e, _0x3ad6ef = Math[_0x2f4f78(0x483)](0.5 * _0x5e1edd), _0xd78882 = 0x1 + _0x3ad6ef * _0x3ad6ef * (_0x1cd957 * _0x1cd957 + 0x1);
            switch (_0x2f1fc1) {
            case _0x18be32['ShadowCascadesMode'][_0x2f4f78(0x93f)]:
                _0x1966d5[0x1] = _0x3c155f[_0x2f4f78(0x953)](_0x12a1ac, _0xd78882);
                break;
            case _0x18be32[_0x2f4f78(0x93e)][_0x2f4f78(0x940)]:
                _0x1966d5[0x1] = _0x3c155f[_0x2f4f78(0x953)](_0x2dd52e + _0x14bd56 * _0x2966a4, _0xd78882), _0x1966d5[0x2] = _0x3c155f[_0x2f4f78(0x953)](_0x12a1ac, _0xd78882);
                break;
            case _0x18be32[_0x2f4f78(0x93e)][_0x2f4f78(0x941)]:
                _0x1966d5[0x1] = _0x3c155f[_0x2f4f78(0x953)](_0x2dd52e + _0x14bd56 * _0x4a6897['x'], _0xd78882), _0x1966d5[0x2] = _0x3c155f[_0x2f4f78(0x953)](_0x2dd52e + _0x14bd56 * _0x4a6897['y'], _0xd78882), _0x1966d5[0x3] = _0x3c155f[_0x2f4f78(0x953)](_0x2dd52e + _0x14bd56 * _0x4a6897['z'], _0xd78882), _0x1966d5[0x4] = _0x3c155f['getFarWithRadius'](_0x12a1ac, _0xd78882);
            }
        }
        static ['applySliceTransform'](_0x5c81a8, _0x204e43, _0x259a4b, _0x15bec6, _0x25903b) {
            var _0xef6f50 = _0x6027f5, _0x24d745 = _0x3c155f[_0xef6f50(0x5a3)]['elements'], _0x386b6e = 0x1 / _0x204e43, _0x2a1f46 = 0x1 / _0x259a4b;
            _0x24d745[0x0] = _0x5c81a8[_0xef6f50(0x954)] * _0x386b6e, _0x24d745[0x5] = _0x5c81a8[_0xef6f50(0x954)] * _0x2a1f46, _0x24d745[0xc] = _0x5c81a8[_0xef6f50(0x955)] * _0x386b6e, _0x24d745[0xd] = _0x5c81a8[_0xef6f50(0x956)] * _0x2a1f46, _0x24d745[0x1] = _0x24d745[0x2] = _0x24d745[0x2] = _0x24d745[0x4] = _0x24d745[0x6] = _0x24d745[0x7] = _0x24d745[0x8] = _0x24d745[0x9] = _0x24d745[0xb] = _0x24d745[0xe] = 0x0, _0x24d745[0xa] = _0x24d745[0xf] = 0x1;
            var _0x2edcf8 = 0x10 * _0x15bec6;
            _0x3acd08[_0xef6f50(0x2fb)](_0x24d745, _0x25903b, _0x2edcf8, _0x25903b, _0x2edcf8);
        }
        static [_0x6027f5(0x957)](_0x168fb1, _0x27f10c, _0x44ab5f, _0x2d39e5, _0x1b13cf, _0x557882) {
            var _0x40916c = _0x6027f5, _0x493555 = _0x3c155f['_frustumCorners'], _0x3d0e93 = _0x3c155f[_0x40916c(0x958)], _0x24dee7 = _0x3c155f[_0x40916c(0x959)], _0x4d02d9 = _0x3c155f['_frustumTwoPlaneCorners'], _0x5db4f2 = _0x3c155f[_0x40916c(0x95a)], _0x3a6efb = _0x557882['cullPlanes'], _0x5cae9a = _0x168fb1[_0x23952c[_0x40916c(0x942)]], _0x18f41e = _0x168fb1[_0x23952c[_0x40916c(0x943)]], _0xfde391 = _0x168fb1[_0x23952c['Left']], _0x47ba00 = _0x168fb1[_0x23952c['Right']], _0x8a2e61 = _0x168fb1[_0x23952c[_0x40916c(0x946)]], _0x59278c = _0x168fb1[_0x23952c[_0x40916c(0x947)]], _0x4bbd52 = _0x44ab5f[_0x27f10c] - _0x2d39e5, _0x58d02d = _0x3c155f[_0x40916c(0x95b)], _0x1e3a6e = _0x3c155f[_0x40916c(0x95c)];
            _0x5cae9a[_0x40916c(0x82f)][_0x40916c(0x1fc)](_0x58d02d[_0x40916c(0x82f)]), _0x18f41e[_0x40916c(0x82f)][_0x40916c(0x1fc)](_0x1e3a6e['normal']), _0x58d02d[_0x40916c(0x20a)] = _0x5cae9a[_0x40916c(0x20a)] - _0x4bbd52, _0x1e3a6e[_0x40916c(0x20a)] = Math['min'](-_0x5cae9a[_0x40916c(0x20a)] + _0x557882[_0x40916c(0x95d)] + _0x557882[_0x40916c(0x95e)]['radius'], _0x18f41e[_0x40916c(0x20a)]), _0x1391ac[_0x40916c(0x8bf)](_0x58d02d, _0x8a2e61, _0x47ba00, _0x493555[_0x18be32[_0x40916c(0x8a4)][_0x40916c(0x8ac)]]), _0x1391ac['get3PlaneInterPoint'](_0x58d02d, _0x59278c, _0x47ba00, _0x493555[_0x18be32[_0x40916c(0x8a4)][_0x40916c(0x8ab)]]), _0x1391ac['get3PlaneInterPoint'](_0x58d02d, _0x59278c, _0xfde391, _0x493555[_0x18be32[_0x40916c(0x8a4)]['nearTopLeft']]), _0x1391ac[_0x40916c(0x8bf)](_0x58d02d, _0x8a2e61, _0xfde391, _0x493555[_0x18be32[_0x40916c(0x8a4)][_0x40916c(0x8a9)]]), _0x1391ac[_0x40916c(0x8bf)](_0x1e3a6e, _0x8a2e61, _0x47ba00, _0x493555[_0x18be32[_0x40916c(0x8a4)][_0x40916c(0x8a8)]]), _0x1391ac['get3PlaneInterPoint'](_0x1e3a6e, _0x59278c, _0x47ba00, _0x493555[_0x18be32[_0x40916c(0x8a4)][_0x40916c(0x8a7)]]), _0x1391ac['get3PlaneInterPoint'](_0x1e3a6e, _0x59278c, _0xfde391, _0x493555[_0x18be32['FrustumCorner']['FarTopLeft']]), _0x1391ac[_0x40916c(0x8bf)](_0x1e3a6e, _0x8a2e61, _0xfde391, _0x493555[_0x18be32[_0x40916c(0x8a4)][_0x40916c(0x8a5)]]);
            for (var _0x1bfb4c = 0x0, _0x14cdf7 = 0x0; _0x14cdf7 < 0x6; _0x14cdf7++) {
                var _0x32dab3;
                switch (_0x14cdf7) {
                case _0x23952c[_0x40916c(0x942)]:
                    _0x32dab3 = _0x58d02d;
                    break;
                case _0x23952c[_0x40916c(0x943)]:
                    _0x32dab3 = _0x1e3a6e;
                    break;
                default:
                    _0x32dab3 = _0x168fb1[_0x14cdf7];
                }
                _0x3697cd[_0x40916c(0x20b)](_0x32dab3[_0x40916c(0x82f)], _0x1b13cf) < 0x0 && (_0x32dab3[_0x40916c(0x1fc)](_0x3a6efb[_0x1bfb4c]), _0x3d0e93[_0x1bfb4c] = _0x14cdf7, _0x1bfb4c++);
            }
            var _0x29f7ce = _0x1bfb4c;
            for (_0x14cdf7 = 0x0; _0x14cdf7 < _0x1bfb4c; _0x14cdf7++)
                for (var _0x4de6e1 = _0x3d0e93[_0x14cdf7], _0x4ef7ee = _0x24dee7[_0x4de6e1], _0x5f55cf = 0x0; _0x5f55cf < 0x4; _0x5f55cf++) {
                    for (var _0xa8ee85 = _0x4ef7ee[_0x5f55cf], _0x129b3d = !0x0, _0x442509 = 0x0; _0x442509 < _0x1bfb4c; _0x442509++)
                        if (_0xa8ee85 == _0x3d0e93[_0x442509]) {
                            _0x129b3d = !0x1;
                            break;
                        }
                    if (_0x129b3d) {
                        var _0x3d86e0 = _0x4d02d9[_0x4de6e1][_0xa8ee85], _0x3182e2 = _0x493555[_0x3d86e0[0x0]], _0x45b28d = _0x493555[_0x3d86e0[0x1]];
                        _0x3697cd[_0x40916c(0x207)](_0x3182e2, _0x1b13cf, _0x5db4f2), _0x5a837f['createPlaneBy3P'](_0x3182e2, _0x45b28d, _0x5db4f2, _0x3a6efb[_0x29f7ce++]);
                    }
                }
            _0x557882[_0x40916c(0x82d)] = _0x29f7ce;
        }
        static [_0x6027f5(0x95f)](_0x1c2787, _0x107ebc, _0x3b0250, _0xa77f4e, _0xe030f8, _0x30a2ba, _0xbe1eb3) {
            var _0x40fbf0 = _0x6027f5, _0x349d13, _0x41345c, _0xce159d = Math[_0x40fbf0(0x1f3)](0x1 + _0xa77f4e * _0xa77f4e) * Math[_0x40fbf0(0x483)](_0x3b0250 / 0x2), _0x1fff34 = _0xce159d * _0xce159d, _0xab8861 = _0x107ebc - _0x1c2787, _0x797f59 = _0x107ebc + _0x1c2787;
            _0x1fff34 > _0xab8861 / _0x797f59 ? (_0x349d13 = _0x107ebc, _0x41345c = _0x107ebc * _0xce159d) : (_0x349d13 = 0.5 * _0x797f59 * (0x1 + _0x1fff34), _0x41345c = 0.5 * Math[_0x40fbf0(0x1f3)](_0xab8861 * _0xab8861 + 0x2 * (_0x107ebc * _0x107ebc + _0x1c2787 * _0x1c2787) * _0x1fff34 + _0x797f59 * _0x797f59 * _0x1fff34 * _0x1fff34));
            var _0x4a4a95 = _0xbe1eb3[_0x40fbf0(0x880)];
            return _0xbe1eb3[_0x40fbf0(0x882)] = _0x41345c, _0x3697cd[_0x40fbf0(0x1f9)](_0x30a2ba, _0x349d13, _0x4a4a95), _0x3697cd['add'](_0xe030f8, _0x4a4a95, _0x4a4a95), _0x349d13;
        }
        static [_0x6027f5(0x960)](_0x1e102b, _0x39ea3a, _0x55582e) {
            var _0x3faa7b = _0x6027f5;
            for (var _0x5299bc = Math['min'](_0x1e102b, _0x39ea3a), _0x4c8a83 = Math['floor'](_0x1e102b / _0x5299bc) * Math[_0x3faa7b(0x24e)](_0x39ea3a / _0x5299bc); _0x4c8a83 < _0x55582e;)
                _0x5299bc = Math[_0x3faa7b(0x24e)](_0x5299bc >> 0x1), _0x4c8a83 = Math[_0x3faa7b(0x24e)](_0x1e102b / _0x5299bc) * Math['floor'](_0x39ea3a / _0x5299bc);
            return _0x5299bc;
        }
        static [_0x6027f5(0x961)](_0x198b06, _0x26b813, _0xcb63f2, _0x105fac, _0x3f9ff4, _0x569e5a, _0x17c99a, _0x389cc2) {
            var _0x3db140 = _0x6027f5, _0x120224 = _0x17c99a[_0x3db140(0x95e)], _0x4193bc = _0x120224[_0x3db140(0x880)], _0x3e78ef = _0x120224[_0x3db140(0x882)], _0x182b10 = _0x569e5a / 0x2, _0x37cfd2 = _0x3e78ef * _0x182b10 / (_0x182b10 - _0x3c155f[_0x3db140(0x962)]), _0x39d195 = 0x2 * _0x37cfd2, _0x113e2f = _0x569e5a / _0x39d195, _0x50bcb8 = _0x39d195 / _0x569e5a, _0x13f8a1 = Math[_0x3db140(0x842)](_0x3697cd[_0x3db140(0x20b)](_0x4193bc, _0x198b06) * _0x113e2f) * _0x50bcb8, _0x274cd6 = Math[_0x3db140(0x842)](_0x3697cd[_0x3db140(0x20b)](_0x4193bc, _0x26b813) * _0x113e2f) * _0x50bcb8, _0x1058f4 = _0x3697cd[_0x3db140(0x20b)](_0x4193bc, _0xcb63f2);
            _0x4193bc['x'] = _0x198b06['x'] * _0x13f8a1 + _0x26b813['x'] * _0x274cd6 + _0xcb63f2['x'] * _0x1058f4, _0x4193bc['y'] = _0x198b06['y'] * _0x13f8a1 + _0x26b813['y'] * _0x274cd6 + _0xcb63f2['y'] * _0x1058f4, _0x4193bc['z'] = _0x198b06['z'] * _0x13f8a1 + _0x26b813['z'] * _0x274cd6 + _0xcb63f2['z'] * _0x1058f4;
            var _0x432434 = _0x17c99a[_0x3db140(0x5a2)], _0x43d5f2 = _0x17c99a[_0x3db140(0x862)], _0xcbb585 = _0x17c99a[_0x3db140(0x8db)], _0xf4436e = _0x17c99a[_0x3db140(0x963)];
            _0x17c99a[_0x3db140(0x954)] = _0x569e5a, _0x17c99a[_0x3db140(0x955)] = _0x105fac % 0x2 * _0x569e5a, _0x17c99a[_0x3db140(0x956)] = Math[_0x3db140(0x24e)](_0x105fac / 0x2) * _0x569e5a, _0x3697cd['scale'](_0xcb63f2, _0x3e78ef + _0x3f9ff4, _0x432434), _0x3697cd[_0x3db140(0x28a)](_0x4193bc, _0x432434, _0x432434), _0x6b4d98[_0x3db140(0x964)](_0x432434, _0x4193bc, _0x198b06, _0x43d5f2), _0x6b4d98['createOrthoOffCenter'](-_0x37cfd2, _0x37cfd2, -_0x37cfd2, _0x37cfd2, 0x0, 0x2 * _0x3e78ef + _0x3f9ff4, _0xcbb585), _0x6b4d98[_0x3db140(0x27b)](_0xcbb585, _0x43d5f2, _0xf4436e), _0x3acd08[_0x3db140(0x2fb)](_0x3c155f[_0x3db140(0x965)]['elements'], _0xf4436e[_0x3db140(0x1fe)], 0x0, _0x389cc2, 0x10 * _0x105fac);
        }
        static [_0x6027f5(0x966)](_0x49ad75, _0xc38a75, _0x73d656, _0x2297e9, _0x140adc, _0x4efec9) {
            var _0x30f693 = _0x6027f5, _0x39571b = _0x49ad75[_0x30f693(0x5a2)] = _0xc38a75[_0x30f693(0x3d6)][_0x30f693(0x5a2)];
            _0x49ad75[_0x30f693(0x954)] = _0x73d656, _0x4efec9[_0x30f693(0x1f8)](0x1 / _0x73d656, 0x1 / _0x73d656, _0x73d656, _0x73d656), _0x49ad75[_0x30f693(0x955)] = 0x0, _0x49ad75[_0x30f693(0x956)] = 0x0;
            var _0x26006e = _0xc38a75[_0x30f693(0x967)], _0x570d19 = _0x49ad75[_0x30f693(0x862)], _0x2f9681 = _0x49ad75[_0x30f693(0x8db)], _0x2fb7a7 = _0x49ad75[_0x30f693(0x963)], _0x30411f = _0x49ad75[_0x30f693(0x968)]['boundFrustum'];
            _0x26006e[_0x30f693(0x280)](_0x570d19), _0x6b4d98['createPerspective'](3.1416 * _0xc38a75['spotAngle'] / 0xb4, 0x1, 0.1, _0xc38a75[_0x30f693(0x858)], _0x2f9681), _0x2297e9['y'] = _0xc38a75[_0x30f693(0x92d)], _0x6b4d98[_0x30f693(0x27b)](_0x2f9681, _0x570d19, _0x2fb7a7), _0x30411f[_0x30f693(0x8b5)] = _0x2fb7a7, _0x2fb7a7[_0x30f693(0x1fc)](_0x140adc), _0x49ad75[_0x30f693(0x968)][_0x30f693(0x5a2)] = _0x39571b;
        }
        static [_0x6027f5(0x969)](_0x4dfad1, _0x56f652, _0x58db5c, _0x495a16, _0x327f4e, _0x2e14ac, _0x5914cd, _0x30e29e, _0xa3144f) {
            var _0x564bfc = _0x6027f5;
            if (_0x2e14ac[_0x564bfc(0x1f8)](0x1 / _0x56f652, 0x1 / _0x58db5c, _0x56f652, _0x58db5c), _0x5914cd[_0x564bfc(0x1f8)](_0x4dfad1[_0x564bfc(0x92e)], 0x0, 0x0, 0x0), _0x327f4e > 0x1) {
                const _0x127009 = 0x10;
                for (var _0x25f5c6 = _0x327f4e * _0x127009, _0x30ec50 = 0x4 * _0x127009; _0x25f5c6 < _0x30ec50; _0x25f5c6++)
                    _0x30e29e[_0x25f5c6] = 0x0;
                for (_0x25f5c6 = 0x0; _0x25f5c6 < _0x327f4e; _0x25f5c6++) {
                    var _0x1e82c0 = _0x495a16[_0x25f5c6][_0x564bfc(0x95e)], _0x3b1f66 = _0x1e82c0[_0x564bfc(0x880)], _0x4f8824 = _0x1e82c0[_0x564bfc(0x882)], _0x57b994 = 0x4 * _0x25f5c6;
                    _0xa3144f[_0x57b994] = _0x3b1f66['x'], _0xa3144f[_0x57b994 + 0x1] = _0x3b1f66['y'], _0xa3144f[_0x57b994 + 0x2] = _0x3b1f66['z'], _0xa3144f[_0x57b994 + 0x3] = _0x4f8824 * _0x4f8824;
                }
                const _0x2868a2 = 0x4;
                for (_0x25f5c6 = _0x327f4e * _0x2868a2, _0x30ec50 = 0x4 * _0x2868a2; _0x25f5c6 < _0x30ec50; _0x25f5c6++)
                    _0xa3144f[_0x25f5c6] = 0x0;
            }
        }
    }
    _0x3c155f[_0x6027f5(0x5a3)] = new _0x6b4d98(), _0x3c155f['_shadowMapScaleOffsetMatrix'] = new _0x6b4d98(0.5, 0x0, 0x0, 0x0, 0x0, 0.5, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1), _0x3c155f[_0x6027f5(0x96a)] = [
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd()
    ], _0x3c155f[_0x6027f5(0x95b)] = new _0x5a837f(new _0x3697cd()), _0x3c155f[_0x6027f5(0x95c)] = new _0x5a837f(new _0x3697cd()), _0x3c155f[_0x6027f5(0x958)] = new Array(0x5), _0x3c155f[_0x6027f5(0x95a)] = new _0x3697cd(), _0x3c155f[_0x6027f5(0x959)] = [
        [
            _0x23952c['Left'],
            _0x23952c[_0x6027f5(0x945)],
            _0x23952c['Top'],
            _0x23952c[_0x6027f5(0x946)]
        ],
        [
            _0x23952c[_0x6027f5(0x944)],
            _0x23952c[_0x6027f5(0x945)],
            _0x23952c[_0x6027f5(0x947)],
            _0x23952c['Bottom']
        ],
        [
            _0x23952c[_0x6027f5(0x942)],
            _0x23952c[_0x6027f5(0x943)],
            _0x23952c[_0x6027f5(0x947)],
            _0x23952c[_0x6027f5(0x946)]
        ],
        [
            _0x23952c[_0x6027f5(0x942)],
            _0x23952c[_0x6027f5(0x943)],
            _0x23952c[_0x6027f5(0x947)],
            _0x23952c['Bottom']
        ],
        [
            _0x23952c[_0x6027f5(0x942)],
            _0x23952c[_0x6027f5(0x943)],
            _0x23952c[_0x6027f5(0x944)],
            _0x23952c['Right']
        ],
        [
            _0x23952c['Near'],
            _0x23952c['Far'],
            _0x23952c[_0x6027f5(0x944)],
            _0x23952c[_0x6027f5(0x945)]
        ]
    ], _0x3c155f[_0x6027f5(0x96b)] = [
        [
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)]['unknown']
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)]['unknown'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a9)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8aa)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)]['nearTopRight'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ac)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ac)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a9)]
            ],
            [
                _0x18be32['FrustumCorner'][_0x6027f5(0x8aa)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ab)]
            ]
        ],
        [
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)]['unknown']
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)]['unknown']
            ],
            [
                _0x18be32['FrustumCorner'][_0x6027f5(0x8a6)],
                _0x18be32[_0x6027f5(0x8a4)]['FarBottomLeft']
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a8)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a7)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)]['FarBottomLeft'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a8)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a7)],
                _0x18be32['FrustumCorner']['FarTopLeft']
            ]
        ],
        [
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8aa)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a9)]
            ],
            [
                _0x18be32['FrustumCorner'][_0x6027f5(0x8a5)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a6)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)]
            ],
            [
                _0x18be32['FrustumCorner']['unknown'],
                _0x18be32[_0x6027f5(0x8a4)]['unknown']
            ],
            [
                _0x18be32['FrustumCorner']['nearBottomLeft'],
                _0x18be32['FrustumCorner'][_0x6027f5(0x8a5)]
            ],
            [
                _0x18be32['FrustumCorner'][_0x6027f5(0x8a6)],
                _0x18be32[_0x6027f5(0x8a4)]['nearTopLeft']
            ]
        ],
        [
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ac)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ab)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)]['FarTopRight'],
                _0x18be32['FrustumCorner']['FarBottomRight']
            ],
            [
                _0x18be32['FrustumCorner']['unknown'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)]
            ],
            [
                _0x18be32['FrustumCorner']['unknown'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a8)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ac)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ab)],
                _0x18be32[_0x6027f5(0x8a4)]['FarTopRight']
            ]
        ],
        [
            [
                _0x18be32[_0x6027f5(0x8a4)]['nearBottomLeft'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ac)]
            ],
            [
                _0x18be32['FrustumCorner'][_0x6027f5(0x8a8)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a5)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a5)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a9)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ac)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a8)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)]['unknown'],
                _0x18be32['FrustumCorner'][_0x6027f5(0x8ad)]
            ],
            [
                _0x18be32['FrustumCorner'][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)]
            ]
        ],
        [
            [
                _0x18be32[_0x6027f5(0x8a4)]['nearTopRight'],
                _0x18be32[_0x6027f5(0x8a4)]['nearTopLeft']
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a6)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a7)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8aa)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8a6)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)]['FarTopRight'],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ab)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)]
            ],
            [
                _0x18be32[_0x6027f5(0x8a4)][_0x6027f5(0x8ad)],
                _0x18be32[_0x6027f5(0x8a4)]['unknown']
            ]
        ]
    ], _0x3c155f[_0x6027f5(0x962)] = 0x4, (_0x161139 = _0x18be32[_0x6027f5(0x96c)] || (_0x18be32['DepthTextureMode'] = {}))[_0x161139[_0x6027f5(0x916)] = 0x0] = 'None', _0x161139[_0x161139[_0x6027f5(0x3fd)] = 0x1] = _0x6027f5(0x3fd), _0x161139[_0x161139['DepthNormals'] = 0x2] = _0x6027f5(0x96d), _0x161139[_0x161139[_0x6027f5(0x96e)] = 0x4] = _0x6027f5(0x96e);
    class _0x10c835 {
        constructor() {
            this['_zBufferParams'] = new _0x5b8e4e();
        }
        [_0x6027f5(0x96f)](_0x299dba, _0x5b102e) {
            var _0x1ce1ad = _0x6027f5;
            switch (this[_0x1ce1ad(0x970)] = _0x299dba[_0x1ce1ad(0x564)], this[_0x1ce1ad(0x560)] = _0x299dba, _0x5b102e) {
            case _0x18be32[_0x1ce1ad(0x96c)][_0x1ce1ad(0x3fd)]:
                _0x299dba[_0x1ce1ad(0x971)] = this['_depthTexture'] = _0x26547d[_0x1ce1ad(0x3ef)](this[_0x1ce1ad(0x970)][_0x1ce1ad(0x313)], this['_viewPort'][_0x1ce1ad(0x439)], _0x387b86[_0x1ce1ad(0x314)][_0x1ce1ad(0x3fd)], _0x387b86[_0x1ce1ad(0x3e4)]['DEPTH_16']);
                break;
            case _0x18be32['DepthTextureMode'][_0x1ce1ad(0x96d)]:
                _0x299dba[_0x1ce1ad(0x972)] = this[_0x1ce1ad(0x973)] = _0x26547d[_0x1ce1ad(0x3ef)](this[_0x1ce1ad(0x970)][_0x1ce1ad(0x313)], this[_0x1ce1ad(0x970)]['height'], _0x387b86[_0x1ce1ad(0x314)][_0x1ce1ad(0x404)], _0x387b86[_0x1ce1ad(0x3e4)][_0x1ce1ad(0x3e5)]);
                break;
            case _0x18be32[_0x1ce1ad(0x96c)][_0x1ce1ad(0x96e)]:
                break;
            default:
                throw _0x1ce1ad(0x974);
            }
        }
        ['render'](_0x369a61, _0x32548a) {
            var _0x1e655c = _0x6027f5, _0x14e849 = _0x369a61[_0x1e655c(0x5ca)];
            switch (_0x32548a) {
            case _0x18be32[_0x1e655c(0x96c)][_0x1e655c(0x3fd)]:
                var _0x39c781 = _0x14e849[_0x1e655c(0x4e2)];
                _0x369a61[_0x1e655c(0x5e0)] = _0x1e655c(0x975), _0x3985fd['setRuntimeValueMode'](!0x1), this[_0x1e655c(0x976)][_0x1e655c(0x568)](), _0x39c781['setVector'](_0x10c835['DEFINE_SHADOW_BIAS'], _0x10c835[_0x1e655c(0x977)]);
                var _0x16a994 = _0x387b86[_0x1e655c(0x303)][_0x1e655c(0x304)], _0x50945d = this[_0x1e655c(0x970)]['x'], _0x5cab08 = this['_viewPort']['y'];
                _0x16a994[_0x1e655c(0x659)](_0x16a994['SCISSOR_TEST']), _0x16a994[_0x1e655c(0x564)](_0x50945d, _0x5cab08, this[_0x1e655c(0x970)][_0x1e655c(0x313)], this[_0x1e655c(0x970)][_0x1e655c(0x439)]), _0x16a994[_0x1e655c(0x978)](_0x50945d, _0x5cab08, this[_0x1e655c(0x970)][_0x1e655c(0x313)], this[_0x1e655c(0x970)][_0x1e655c(0x439)]), _0x16a994[_0x1e655c(0x44c)](_0x16a994[_0x1e655c(0x5f0)]), _0x14e849[_0x1e655c(0x81d)][_0x1e655c(0x5e8)](_0x369a61), this[_0x1e655c(0x976)]['_end'](), _0x3985fd[_0x1e655c(0x4db)](!0x0), this['_setupDepthModeShaderValue'](_0x32548a, this[_0x1e655c(0x560)]), _0x369a61[_0x1e655c(0x5e0)] = _0x369a61['configPipeLineMode'];
                break;
            case _0x18be32['DepthTextureMode'][_0x1e655c(0x96d)]:
                _0x39c781 = _0x14e849[_0x1e655c(0x4e2)], (_0x369a61[_0x1e655c(0x5e0)] = _0x1e655c(0x979), _0x3985fd[_0x1e655c(0x4db)](!0x1), this['_depthNormalsTexture'][_0x1e655c(0x568)]()), (_0x16a994 = _0x387b86[_0x1e655c(0x303)][_0x1e655c(0x304)], _0x50945d = this[_0x1e655c(0x970)]['x'], _0x5cab08 = this['_viewPort']['y']), (_0x16a994[_0x1e655c(0x659)](_0x16a994[_0x1e655c(0x97a)]), _0x16a994[_0x1e655c(0x564)](_0x50945d, _0x5cab08, this[_0x1e655c(0x970)][_0x1e655c(0x313)], this[_0x1e655c(0x970)]['height']), _0x16a994[_0x1e655c(0x978)](_0x50945d, _0x5cab08, this[_0x1e655c(0x970)][_0x1e655c(0x313)], this[_0x1e655c(0x970)][_0x1e655c(0x439)]), _0x16a994[_0x1e655c(0x5ed)](0x0, 0x0, 0x1, 0x0), _0x16a994[_0x1e655c(0x44c)](_0x16a994[_0x1e655c(0x5f0)] | _0x16a994['COLOR_BUFFER_BIT']), _0x14e849[_0x1e655c(0x81d)]['_render'](_0x369a61), this[_0x1e655c(0x973)]['_end'](), _0x3985fd[_0x1e655c(0x4db)](!0x0), this[_0x1e655c(0x97b)](_0x32548a, this[_0x1e655c(0x560)]), _0x369a61[_0x1e655c(0x5e0)] = _0x369a61[_0x1e655c(0x3e0)]);
                break;
            case _0x18be32[_0x1e655c(0x96c)][_0x1e655c(0x96e)]:
                break;
            default:
                throw 'there\x20is\x20UnDefined\x20type\x20of\x20DepthTextureMode';
            }
        }
        ['_setupDepthModeShaderValue'](_0x16dd88, _0x3d9851) {
            var _0x44d3e9 = _0x6027f5;
            switch (_0x16dd88) {
            case _0x18be32[_0x44d3e9(0x96c)]['Depth']:
                var _0x182a0b = _0x3d9851[_0x44d3e9(0x860)], _0x17413e = _0x3d9851['nearPlane'];
                this['_zBufferParams'][_0x44d3e9(0x1f8)](0x1 - _0x182a0b / _0x17413e, _0x182a0b / _0x17413e, (_0x17413e - _0x182a0b) / (_0x17413e * _0x182a0b), 0x1 / _0x17413e), _0x3d9851[_0x44d3e9(0x4e2)]['setVector'](_0x10c835[_0x44d3e9(0x97c)], _0x10c835['SHADOW_BIAS']), _0x3d9851[_0x44d3e9(0x4e2)]['setTexture'](_0x10c835[_0x44d3e9(0x909)], this[_0x44d3e9(0x976)]), _0x3d9851['_shaderValues'][_0x44d3e9(0x4a8)](_0x10c835[_0x44d3e9(0x90d)], this[_0x44d3e9(0x97d)]);
                break;
            case _0x18be32[_0x44d3e9(0x96c)][_0x44d3e9(0x96d)]:
                _0x3d9851[_0x44d3e9(0x4e2)][_0x44d3e9(0x4ac)](_0x10c835[_0x44d3e9(0x90b)], this['_depthNormalsTexture']);
                break;
            case _0x18be32[_0x44d3e9(0x96c)]['MotionVectors']:
                break;
            default:
                throw _0x44d3e9(0x974);
            }
        }
        [_0x6027f5(0x97e)]() {
            var _0x20ff79 = _0x6027f5;
            this['_depthTexture'] && _0x26547d[_0x20ff79(0x3f4)](this[_0x20ff79(0x976)]), this['_depthNormalsTexture'] && _0x26547d['recoverToPool'](this[_0x20ff79(0x973)]), this[_0x20ff79(0x976)] = null, this[_0x20ff79(0x973)] = null;
        }
    }
    _0x10c835['SHADOW_BIAS'] = new _0x5b8e4e(), _0x10c835[_0x6027f5(0x97c)] = _0x3a9f31['propertyNameToID']('u_ShadowBias'), _0x10c835[_0x6027f5(0x909)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x90a)), _0x10c835['DEPTHNORMALSTEXTURE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x90c)), _0x10c835[_0x6027f5(0x90d)] = _0x3a9f31[_0x6027f5(0x553)]('u_ZBufferParams'), (_0x195ec0 = _0x18be32[_0x6027f5(0x97f)] || (_0x18be32['CameraClearFlags'] = {}))[_0x195ec0[_0x6027f5(0x980)] = 0x0] = _0x6027f5(0x980), _0x195ec0[_0x195ec0[_0x6027f5(0x981)] = 0x1] = 'Sky', _0x195ec0[_0x195ec0[_0x6027f5(0x982)] = 0x2] = 'DepthOnly', _0x195ec0[_0x195ec0[_0x6027f5(0x983)] = 0x3] = _0x6027f5(0x983), (_0x3f6464 = _0x18be32['CameraEventFlags'] || (_0x18be32[_0x6027f5(0x984)] = {}))[_0x3f6464[_0x6027f5(0x985)] = 0x0] = _0x6027f5(0x985), _0x3f6464[_0x3f6464['BeforeSkyBox'] = 0x2] = _0x6027f5(0x986), _0x3f6464[_0x3f6464[_0x6027f5(0x987)] = 0x4] = 'BeforeTransparent', _0x3f6464[_0x3f6464[_0x6027f5(0x988)] = 0x6] = _0x6027f5(0x988), _0x3f6464[_0x3f6464[_0x6027f5(0x989)] = 0x8] = 'AfterEveryThing';
    class _0x55cd9b extends _0x1d2570 {
        constructor(_0x307a07 = 0x0, _0x5e6a3b = 0.3, _0x5ab8fd = 0x3e8) {
            var _0x69037b = _0x6027f5;
            super(_0x5e6a3b, _0x5ab8fd), this['_updateViewMatrix'] = !0x0, this['_postProcess'] = null, this['_enableHDR'] = !0x1, this[_0x69037b(0x98a)] = new _0x5b8e4e(), this[_0x69037b(0x98b)] = new _0x5b8e4e(), this[_0x69037b(0x98c)] = !0x1, this[_0x69037b(0x98d)] = null, this['_internalRenderTexture'] = null, this[_0x69037b(0x98e)] = new _0x3f18cf(), this[_0x69037b(0x98f)] = {}, this[_0x69037b(0x990)] = new _0x30a72c(-0x1, -0x1), this[_0x69037b(0x660)] = new _0x5b8e4e(), this[_0x69037b(0x991)] = !0x0, this[_0x69037b(0x992)] = _0x18be32[_0x69037b(0x97f)][_0x69037b(0x980)], this[_0x69037b(0x993)] = new _0x6b4d98(), this['_projectionMatrix'] = new _0x6b4d98(), this[_0x69037b(0x994)] = new _0x6b4d98(), this[_0x69037b(0x995)] = new _0x573b01(0x0, 0x0, 0x0, 0x0), this['_normalizedViewport'] = new _0x573b01(0x0, 0x0, 0x1, 0x1), this[_0x69037b(0x996)] = new _0x573b01(0x0, 0x0, 0x0, 0x0), this[_0x69037b(0x997)] = _0x307a07, this[_0x69037b(0x998)] = new _0x1391ac(new _0x6b4d98()), this[_0x69037b(0x8ea)](), _0x387b86[_0x69037b(0x68d)]['stage']['on'](_0x387b86[_0x69037b(0x5b1)][_0x69037b(0x8fc)], this, this[_0x69037b(0x8fd)]), this[_0x69037b(0x3d6)]['on'](_0x387b86[_0x69037b(0x5b1)]['TRANSFORM_CHANGED'], this, this[_0x69037b(0x999)]);
        }
        static ['drawRenderTextureByScene'](_0x23d7ff, _0x43ce35, _0x3af5d8, _0x778687 = null, _0xed4a21 = null) {
            var _0x2d50da = _0x6027f5;
            _0x23d7ff['renderTarget'] != _0x3af5d8 && (_0x23d7ff['renderTarget'] && _0x26547d[_0x2d50da(0x3f4)](_0x23d7ff[_0x2d50da(0x99a)]), _0x23d7ff['renderTarget'] = _0x3af5d8);
            var _0x11a077 = _0x23d7ff[_0x2d50da(0x564)], _0x15c990 = _0x23d7ff[_0x2d50da(0x99b)](), _0x109019 = _0x50b403[_0x2d50da(0x3e2)];
            _0x43ce35 = _0x109019[_0x2d50da(0x5ca)] = _0x43ce35, (_0x109019[_0x2d50da(0x5e0)] = _0x109019[_0x2d50da(0x3e0)], _0x15c990 ? (_0x23d7ff['_internalRenderTexture'] = _0x26547d[_0x2d50da(0x3ef)](_0x11a077[_0x2d50da(0x313)], _0x11a077[_0x2d50da(0x439)], _0x23d7ff[_0x2d50da(0x99c)](), _0x387b86['RenderTextureDepthFormat'][_0x2d50da(0x3e5)]), _0x23d7ff[_0x2d50da(0x561)][_0x2d50da(0x2e0)] = _0x387b86[_0x2d50da(0x2e1)][_0x2d50da(0x94d)]) : _0x23d7ff[_0x2d50da(0x561)] = null);
            var _0x185d06 = _0x23d7ff[_0x2d50da(0x99d)](_0x43ce35, _0x109019);
            return _0x23d7ff[_0x2d50da(0x99e)](_0x109019, _0x43ce35, _0x15c990, _0x11a077), _0x23d7ff['_renderMainPass'](_0x109019, _0x11a077, _0x43ce35, _0x778687, _0xed4a21, _0x15c990), _0x23d7ff[_0x2d50da(0x99f)](_0x185d06), _0x23d7ff[_0x2d50da(0x99a)];
        }
        get [_0x6027f5(0x868)]() {
            var _0xde0fac = _0x6027f5;
            if (0x0 === this['_aspectRatio']) {
                var _0x28d80f = this[_0xde0fac(0x564)];
                return _0x28d80f[_0xde0fac(0x313)] / _0x28d80f[_0xde0fac(0x439)];
            }
            return this[_0xde0fac(0x997)];
        }
        set ['aspectRatio'](_0x5cde4e) {
            var _0x3925f3 = _0x6027f5;
            if (_0x5cde4e < 0x0)
                throw new Error(_0x3925f3(0x9a0));
            this[_0x3925f3(0x997)] = _0x5cde4e, this[_0x3925f3(0x8ea)]();
        }
        get [_0x6027f5(0x564)]() {
            var _0x43ec5c = _0x6027f5;
            return this['_offScreenRenderTexture'] ? this[_0x43ec5c(0x9a1)](this[_0x43ec5c(0x9a2)], this[_0x43ec5c(0x98d)][_0x43ec5c(0x313)], this[_0x43ec5c(0x98d)][_0x43ec5c(0x439)]) : this[_0x43ec5c(0x9a1)](this['_normalizedViewport'], _0x50b403[_0x43ec5c(0x9a3)], _0x50b403[_0x43ec5c(0x565)]), this['_viewport'];
        }
        set [_0x6027f5(0x564)](_0x49a2ab) {
            var _0x1302ba = _0x6027f5, _0x344cf0, _0x43733a;
            this[_0x1302ba(0x98d)] ? (_0x344cf0 = this[_0x1302ba(0x98d)][_0x1302ba(0x313)], _0x43733a = this['_offScreenRenderTexture'][_0x1302ba(0x439)]) : (_0x344cf0 = _0x50b403['clientWidth'], _0x43733a = _0x50b403[_0x1302ba(0x565)]), this['_normalizedViewport']['x'] = _0x49a2ab['x'] / _0x344cf0, this[_0x1302ba(0x9a2)]['y'] = _0x49a2ab['y'] / _0x43733a, this[_0x1302ba(0x9a2)]['width'] = _0x49a2ab[_0x1302ba(0x313)] / _0x344cf0, this[_0x1302ba(0x9a2)][_0x1302ba(0x439)] = _0x49a2ab[_0x1302ba(0x439)] / _0x43733a, this[_0x1302ba(0x9a1)](this[_0x1302ba(0x9a2)], _0x344cf0, _0x43733a), this[_0x1302ba(0x8ea)]();
        }
        get [_0x6027f5(0x9a4)]() {
            var _0x369f4d = _0x6027f5;
            return this[_0x369f4d(0x9a2)];
        }
        set [_0x6027f5(0x9a4)](_0x1fe34a) {
            var _0xec5725 = _0x6027f5, _0x51447c, _0x1e623e;
            this[_0xec5725(0x98d)] ? (_0x51447c = this[_0xec5725(0x98d)]['width'], _0x1e623e = this[_0xec5725(0x98d)][_0xec5725(0x439)]) : (_0x51447c = _0x50b403[_0xec5725(0x9a3)], _0x1e623e = _0x50b403[_0xec5725(0x565)]), this[_0xec5725(0x9a2)] !== _0x1fe34a && _0x1fe34a[_0xec5725(0x1fc)](this['_normalizedViewport']), this['_calculationViewport'](_0x1fe34a, _0x51447c, _0x1e623e), this[_0xec5725(0x8ea)]();
        }
        get [_0x6027f5(0x862)]() {
            var _0x3c4de2 = _0x6027f5;
            if (this[_0x3c4de2(0x9a5)]) {
                var _0x407e46 = this[_0x3c4de2(0x3d6)]['getWorldLossyScale'](), _0x8bb71 = _0x407e46['x'], _0x4329c4 = _0x407e46['y'], _0x2d00e3 = _0x407e46['z'], _0x7ff0a6 = this['_viewMatrix'][_0x3c4de2(0x1fe)];
                this[_0x3c4de2(0x3d6)][_0x3c4de2(0x3d8)][_0x3c4de2(0x1fc)](this['_viewMatrix']), _0x7ff0a6[0x0] /= _0x8bb71, _0x7ff0a6[0x1] /= _0x8bb71, _0x7ff0a6[0x2] /= _0x8bb71, _0x7ff0a6[0x4] /= _0x4329c4, _0x7ff0a6[0x5] /= _0x4329c4, _0x7ff0a6[0x6] /= _0x4329c4, _0x7ff0a6[0x8] /= _0x2d00e3, _0x7ff0a6[0x9] /= _0x2d00e3, _0x7ff0a6[0xa] /= _0x2d00e3, this['_viewMatrix'][_0x3c4de2(0x280)](this['_viewMatrix']), this[_0x3c4de2(0x9a5)] = !0x1;
            }
            return this[_0x3c4de2(0x993)];
        }
        get [_0x6027f5(0x8db)]() {
            var _0xc4d20f = _0x6027f5;
            return this[_0xc4d20f(0x9a6)];
        }
        set [_0x6027f5(0x8db)](_0x32539f) {
            var _0x5c7c01 = _0x6027f5;
            this[_0x5c7c01(0x9a6)] = _0x32539f, this[_0x5c7c01(0x8e4)] = !0x0;
        }
        get [_0x6027f5(0x5dd)]() {
            var _0x335050 = _0x6027f5;
            return _0x6b4d98['multiply'](this[_0x335050(0x8db)], this[_0x335050(0x862)], this[_0x335050(0x994)]), this[_0x335050(0x994)];
        }
        get ['boundFrustum']() {
            var _0x49f6b3 = _0x6027f5;
            return this[_0x49f6b3(0x998)][_0x49f6b3(0x8b5)] = this[_0x49f6b3(0x5dd)], this[_0x49f6b3(0x998)];
        }
        get [_0x6027f5(0x99a)]() {
            var _0x1c9c63 = _0x6027f5;
            return this[_0x1c9c63(0x98d)];
        }
        set [_0x6027f5(0x99a)](_0x5f41ae) {
            var _0x1734a9 = _0x6027f5, _0x11d3de = this['_offScreenRenderTexture'];
            _0x11d3de !== _0x5f41ae && (_0x11d3de && (_0x11d3de[_0x1734a9(0x3e8)] = !0x1), _0x5f41ae && (_0x5f41ae['_isCameraTarget'] = !0x0), this[_0x1734a9(0x98d)] = _0x5f41ae, this['_calculateProjectionMatrix']());
        }
        get [_0x6027f5(0x9a7)]() {
            var _0x313a71 = _0x6027f5;
            return this[_0x313a71(0x9a8)];
        }
        set [_0x6027f5(0x9a7)](_0x52dc5e) {
            var _0x1b59c3 = _0x6027f5;
            this[_0x1b59c3(0x9a8)] = _0x52dc5e, _0x52dc5e && _0x52dc5e && _0x52dc5e['_init'](this);
        }
        get ['enableHDR']() {
            return this['_enableHDR'];
        }
        set [_0x6027f5(0x9a9)](_0x20e054) {
            var _0xb0bce2 = _0x6027f5;
            !_0x20e054 || _0x387b86[_0xb0bce2(0x949)][_0xb0bce2(0x94a)](_0x387b86['RenderTextureFormat'][_0xb0bce2(0x315)]) ? this['_enableHDR'] = _0x20e054 : console[_0xb0bce2(0x25a)](_0xb0bce2(0x9aa));
        }
        get [_0x6027f5(0x9ab)]() {
            return this['_needBuiltInRenderTexture'];
        }
        set [_0x6027f5(0x9ab)](_0xe9d1a6) {
            var _0xd82117 = _0x6027f5;
            this[_0xd82117(0x98c)] = _0xe9d1a6;
        }
        get ['depthTextureMode']() {
            var _0x11d5dc = _0x6027f5;
            return this[_0x11d5dc(0x9ac)];
        }
        set ['depthTextureMode'](_0x14497b) {
            var _0x113f92 = _0x6027f5;
            this[_0x113f92(0x9ac)] = _0x14497b;
        }
        ['_calculationViewport'](_0x147daa, _0x18b608, _0x1c9cdc) {
            var _0x1e59dc = _0x6027f5, _0x5042b9 = _0x147daa['x'] * _0x18b608, _0x1a30af = _0x147daa['y'] * _0x1c9cdc, _0x2a1e82 = _0x5042b9 + Math[_0x1e59dc(0x20c)](_0x147daa[_0x1e59dc(0x313)] * _0x18b608, 0x0), _0x5ae01a = _0x1a30af + Math[_0x1e59dc(0x20c)](_0x147daa[_0x1e59dc(0x439)] * _0x1c9cdc, 0x0), _0x5543bf = Math[_0x1e59dc(0x842)](_0x5042b9), _0x3616d4 = Math['ceil'](_0x1a30af), _0x1e3845 = Math['floor'](_0x2a1e82), _0x4d1da0 = Math['floor'](_0x5ae01a), _0x484303 = _0x5543bf - _0x5042b9 >= 0.5 ? Math[_0x1e59dc(0x24e)](_0x5042b9) : _0x5543bf, _0x16e525 = _0x3616d4 - _0x1a30af >= 0.5 ? Math[_0x1e59dc(0x24e)](_0x1a30af) : _0x3616d4, _0x4ffefa = _0x2a1e82 - _0x1e3845 >= 0.5 ? Math[_0x1e59dc(0x842)](_0x2a1e82) : _0x1e3845, _0x55d3be = _0x5ae01a - _0x4d1da0 >= 0.5 ? Math[_0x1e59dc(0x842)](_0x5ae01a) : _0x4d1da0;
            this[_0x1e59dc(0x995)]['x'] = _0x484303, this['_viewport']['y'] = _0x16e525, this[_0x1e59dc(0x995)]['width'] = _0x4ffefa - _0x484303, this[_0x1e59dc(0x995)][_0x1e59dc(0x439)] = _0x55d3be - _0x16e525;
        }
        [_0x6027f5(0x8ea)]() {
            var _0x652f86 = _0x6027f5;
            if (!this[_0x652f86(0x8e4)]) {
                if (this[_0x652f86(0x8eb)]) {
                    var _0x171ecc = 0.5 * this['orthographicVerticalSize'], _0x41a90a = _0x171ecc * this[_0x652f86(0x868)];
                    _0x6b4d98[_0x652f86(0x485)](-_0x41a90a, _0x41a90a, -_0x171ecc, _0x171ecc, this[_0x652f86(0x861)], this[_0x652f86(0x860)], this[_0x652f86(0x9a6)]);
                } else
                    _0x6b4d98[_0x652f86(0x8dc)](3.1416 * this[_0x652f86(0x8dd)] / 0xb4, this[_0x652f86(0x868)], this[_0x652f86(0x861)], this[_0x652f86(0x860)], this[_0x652f86(0x9a6)]);
            }
        }
        [_0x6027f5(0x838)](_0x1b27ec) {
            var _0x28cae7 = _0x6027f5;
            return 0x0 != (Math[_0x28cae7(0x2ff)](0x2, _0x1b27ec) & this[_0x28cae7(0x814)]);
        }
        [_0x6027f5(0x999)](_0x5115b0) {
            (_0x5115b0 &= _0xaeafd1['TRANSFORM_WORLDMATRIX']) && (this['_updateViewMatrix'] = !0x0);
        }
        [_0x6027f5(0x67c)](_0x9e184c, _0x248861) {
            var _0x546f97 = _0x6027f5;
            super['_parse'](_0x9e184c, _0x248861);
            var _0x2810fa = _0x9e184c[_0x546f97(0x992)];
            void 0x0 !== _0x2810fa && (this[_0x546f97(0x992)] = _0x2810fa);
            var _0x15ccd0 = _0x9e184c[_0x546f97(0x564)];
            this[_0x546f97(0x9a4)] = new _0x573b01(_0x15ccd0[0x0], _0x15ccd0[0x1], _0x15ccd0[0x2], _0x15ccd0[0x3]);
            var _0x2a83fe = _0x9e184c[_0x546f97(0x9a9)];
            void 0x0 !== _0x2a83fe && (this['enableHDR'] = _0x2a83fe);
        }
        ['clone']() {
            var _0x1d6c17 = _0x6027f5;
            let _0x50efa0 = super['clone']();
            return _0x50efa0['clearFlag'] = this[_0x1d6c17(0x992)], _0x50efa0['viewport'] = this[_0x1d6c17(0x564)], this[_0x1d6c17(0x9a4)][_0x1d6c17(0x1fc)](_0x50efa0[_0x1d6c17(0x9a4)]), _0x50efa0[_0x1d6c17(0x9a9)] = this[_0x1d6c17(0x9a9)], _0x50efa0['farPlane'] = this[_0x1d6c17(0x860)], _0x50efa0['nearPlane'] = this['nearPlane'], _0x50efa0['fieldOfView'] = this[_0x1d6c17(0x8dd)], _0x50efa0[_0x1d6c17(0x866)] = this[_0x1d6c17(0x866)], _0x50efa0;
        }
        [_0x6027f5(0x9ad)]() {
            var _0x1e790b = _0x6027f5;
            return this[_0x1e790b(0x98d)] ? this[_0x1e790b(0x98d)][_0x1e790b(0x313)] : _0x50b403[_0x1e790b(0x9a3)];
        }
        [_0x6027f5(0x65f)]() {
            var _0x2a123e = _0x6027f5;
            return this[_0x2a123e(0x98d)] ? this['_offScreenRenderTexture'][_0x2a123e(0x439)] : _0x50b403[_0x2a123e(0x565)];
        }
        [_0x6027f5(0x9ae)]() {
            var _0x3a39cb = _0x6027f5;
            return this[_0x3a39cb(0x561)] || this[_0x3a39cb(0x98d)];
        }
        [_0x6027f5(0x99b)]() {
            var _0x16ed73 = _0x6027f5;
            return !!(this['_postProcess'] && this[_0x16ed73(0x9a8)]['enable'] || this[_0x16ed73(0x9af)] || this[_0x16ed73(0x98c)]);
        }
        [_0x6027f5(0x99c)]() {
            var _0x5944a2 = _0x6027f5;
            return this[_0x5944a2(0x9af)] ? _0x387b86['RenderTextureFormat'][_0x5944a2(0x315)] : _0x387b86[_0x5944a2(0x314)][_0x5944a2(0x2da)];
        }
        [_0x6027f5(0x9b0)]() {
            var _0x11bd39 = _0x6027f5;
            super[_0x11bd39(0x9b0)]();
            var _0x23c85c = this['viewport'];
            this['_viewportParams']['setValue'](_0x23c85c['x'], _0x23c85c['y'], _0x23c85c[_0x11bd39(0x313)], _0x23c85c[_0x11bd39(0x439)]), this[_0x11bd39(0x98b)]['setValue'](this[_0x11bd39(0x8e7)], this[_0x11bd39(0x8e8)], _0x50b403[_0x11bd39(0x3e2)][_0x11bd39(0x434)] ? -0x1 : 0x1, 0x1 / this[_0x11bd39(0x860)]), this[_0x11bd39(0x4e2)]['setVector'](_0x1d2570[_0x11bd39(0x905)], this[_0x11bd39(0x98a)]), this[_0x11bd39(0x4e2)][_0x11bd39(0x4a8)](_0x1d2570['PROJECTION_PARAMS'], this[_0x11bd39(0x98b)]);
        }
        [_0x6027f5(0x8de)](_0x16bcb7, _0x539f0a, _0x52d54c) {
            var _0x18e4e1 = _0x6027f5, _0x428150, _0x5a0745 = this[_0x18e4e1(0x4e2)];
            _0x16bcb7[_0x18e4e1(0x434)] ? (_0x6b4d98[_0x18e4e1(0x27b)](_0x1d2570['_invertYScaleMatrix'], _0x52d54c, _0x1d2570[_0x18e4e1(0x912)]), _0x6b4d98[_0x18e4e1(0x27b)](_0x1d2570['_invertYProjectionMatrix'], _0x539f0a, _0x1d2570[_0x18e4e1(0x9b1)]), _0x52d54c = _0x1d2570[_0x18e4e1(0x912)], _0x428150 = _0x1d2570[_0x18e4e1(0x9b1)]) : (_0x6b4d98[_0x18e4e1(0x27b)](_0x52d54c, _0x539f0a, this[_0x18e4e1(0x994)]), _0x428150 = this['_projectionViewMatrix']), _0x16bcb7[_0x18e4e1(0x862)] = _0x539f0a, _0x16bcb7[_0x18e4e1(0x8db)] = _0x52d54c, _0x16bcb7[_0x18e4e1(0x5dd)] = _0x428150, _0x5a0745[_0x18e4e1(0x4aa)](_0x1d2570[_0x18e4e1(0x900)], _0x539f0a), _0x5a0745[_0x18e4e1(0x4aa)](_0x1d2570[_0x18e4e1(0x901)], _0x52d54c), _0x5a0745[_0x18e4e1(0x4aa)](_0x1d2570['VIEWPROJECTMATRIX'], _0x428150);
        }
        ['_updateClusterPlaneXY']() {
            var _0x31a106 = _0x6027f5, _0x3adaf4 = this[_0x31a106(0x8dd)], _0x55dc6f = this[_0x31a106(0x868)];
            if (this['_clusterPlaneCacheFlag']['x'] !== _0x3adaf4 || this[_0x31a106(0x990)]['y'] !== _0x55dc6f) {
                var _0x651716 = _0x362537[_0x31a106(0x251)][_0x31a106(0x25c)], _0x3375dc = _0x651716['x'], _0x6d7e3d = _0x651716['y'], _0x43cb3c = _0x3375dc + 0x1, _0x14e93e = _0x6d7e3d + 0x1, _0x2ccbb1 = this['_clusterXPlanes'], _0x375477 = this[_0x31a106(0x86b)];
                if (!_0x2ccbb1) {
                    _0x2ccbb1 = this[_0x31a106(0x86a)] = new Array(_0x43cb3c), _0x375477 = this['_clusterYPlanes'] = new Array(_0x14e93e);
                    for (var _0x5f1f6f = 0x0; _0x5f1f6f < _0x43cb3c; _0x5f1f6f++)
                        _0x2ccbb1[_0x5f1f6f] = new _0x3697cd();
                    for (_0x5f1f6f = 0x0; _0x5f1f6f < _0x14e93e; _0x5f1f6f++)
                        _0x375477[_0x5f1f6f] = new _0x3697cd();
                }
                var _0x3e4759 = Math[_0x31a106(0x483)](this[_0x31a106(0x8dd)] / 0x2 * Math['PI'] / 0xb4), _0x2bd995 = this[_0x31a106(0x868)] * _0x3e4759, _0x1e2281 = 0x2 * _0x3e4759 / _0x3375dc, _0x599a55 = 0x2 * _0x2bd995 / _0x6d7e3d;
                for (_0x5f1f6f = 0x0; _0x5f1f6f < _0x43cb3c; _0x5f1f6f++) {
                    var _0x3b4486 = _0x599a55 * _0x5f1f6f - _0x2bd995, _0x597544 = 0x1 / Math[_0x31a106(0x1f3)](0x1 + _0x3b4486 * _0x3b4486);
                    _0x2ccbb1[_0x5f1f6f]['setValue'](_0x597544, 0x0, -_0x3b4486 * _0x597544);
                }
                for (_0x5f1f6f = 0x0; _0x5f1f6f < _0x14e93e; _0x5f1f6f++) {
                    _0x3b4486 = _0x3e4759 - _0x1e2281 * _0x5f1f6f;
                    var _0x187ac6 = -0x1 / Math[_0x31a106(0x1f3)](0x1 + _0x3b4486 * _0x3b4486);
                    _0x375477[_0x5f1f6f]['setValue'](0x0, _0x187ac6, -_0x3b4486 * _0x187ac6);
                }
                this[_0x31a106(0x990)]['x'] = _0x3adaf4, this[_0x31a106(0x990)]['y'] = _0x55dc6f;
            }
        }
        [_0x6027f5(0x9b2)](_0xf86a7f, _0x3b7bd2) {
            var _0x46f3e0 = _0x6027f5;
            _0x387b86['PerformancePlugin'][_0x46f3e0(0x9b3)](_0x387b86['PerformancePlugin'][_0x46f3e0(0x9b4)]);
            var _0x30d963 = _0x387b86[_0x46f3e0(0x303)][_0x46f3e0(0x304)], _0x5b1e2e = this['_cameraEventCommandBuffer'][_0xf86a7f];
            _0x5b1e2e && 0x0 != _0x5b1e2e[_0x46f3e0(0x205)] && (_0x5b1e2e[_0x46f3e0(0x9b5)](function (_0x141458) {
                var _0x28a6cb = _0x46f3e0;
                _0x141458[_0x28a6cb(0x54d)] = _0x3b7bd2, _0x141458['_apply']();
            }), _0x26547d[_0x46f3e0(0x3ed)] && _0x26547d['currentActive'][_0x46f3e0(0x435)](), this[_0x46f3e0(0x561)] || this[_0x46f3e0(0x98d)] ? this['_getRenderTexture']()[_0x46f3e0(0x568)]() : _0x30d963[_0x46f3e0(0x418)](_0x30d963[_0x46f3e0(0x3fb)], null), _0x30d963[_0x46f3e0(0x564)](0x0, 0x0, _0x3b7bd2[_0x46f3e0(0x564)][_0x46f3e0(0x313)], _0x3b7bd2[_0x46f3e0(0x564)][_0x46f3e0(0x439)]), _0x387b86[_0x46f3e0(0x9b6)][_0x46f3e0(0x9b7)](_0x387b86[_0x46f3e0(0x9b6)]['PERFORMANCE_LAYA_3D_RENDER_RENDERCOMMANDBUFFER']));
        }
        [_0x6027f5(0x99d)](_0x55d455, _0x25432c) {
        }
        [_0x6027f5(0x99e)](_0x22d26c, _0x163129, _0x456276, _0x555b1d) {
            var _0x456907 = _0x6027f5;
            _0x22d26c[_0x456907(0x64c)] = this, _0x22d26c['cameraShaderValue'] = this[_0x456907(0x4e2)], _0x55cd9b['_updateMark']++, _0x163129[_0x456907(0x9b8)]();
            var _0x3cb369 = _0x387b86[_0x456907(0x303)][_0x456907(0x304)];
            if (_0x456276 && !this[_0x456907(0x98d)] && (this['clearFlag'] == _0x18be32[_0x456907(0x97f)]['DepthOnly'] || this[_0x456907(0x992)] == _0x18be32[_0x456907(0x97f)][_0x456907(0x983)])) {
                if (this[_0x456907(0x9af)]) {
                    var _0x495b43 = _0x26547d[_0x456907(0x3ef)](_0x555b1d[_0x456907(0x313)], _0x555b1d['height'], _0x387b86[_0x456907(0x314)][_0x456907(0x2da)], _0x387b86[_0x456907(0x3e4)]['DEPTH_16']);
                    _0x495b43[_0x456907(0x2e0)] = _0x387b86[_0x456907(0x2e1)][_0x456907(0x94d)], _0x387b86[_0x456907(0x40a)][_0x456907(0x40b)](_0x3cb369, _0x3cb369[_0x456907(0x416)], _0x495b43[_0x456907(0x4d4)]()), _0x3cb369[_0x456907(0x9b9)](_0x3cb369[_0x456907(0x416)], 0x0, 0x0, 0x0, _0x555b1d['x'], _0x50b403[_0x456907(0x565)] - (_0x555b1d['y'] + _0x555b1d[_0x456907(0x439)]), _0x555b1d[_0x456907(0x313)], _0x555b1d[_0x456907(0x439)]);
                    var _0x58731c = _0xcc3875[_0x456907(0x32a)](_0x495b43, this[_0x456907(0x561)]);
                    _0x58731c[_0x456907(0x54a)](), _0x58731c['recover'](), _0x26547d[_0x456907(0x3f4)](_0x495b43);
                } else
                    _0x387b86[_0x456907(0x40a)][_0x456907(0x40b)](_0x3cb369, _0x3cb369[_0x456907(0x416)], this[_0x456907(0x561)]['_getSource']()), _0x3cb369[_0x456907(0x9b9)](_0x3cb369[_0x456907(0x416)], 0x0, 0x0, 0x0, _0x555b1d['x'], _0x50b403[_0x456907(0x565)] - (_0x555b1d['y'] + _0x555b1d['height']), _0x555b1d[_0x456907(0x313)], _0x555b1d[_0x456907(0x439)]);
            }
        }
        [_0x6027f5(0x9ba)](_0x2d4427, _0x3ffeed, _0x3b2a0d, _0x2ef4d3, _0x327a04, _0x58d4a0) {
            var _0x113df4 = _0x6027f5, _0x58b864 = _0x387b86['LayaGL']['instance'], _0x3b115f = this[_0x113df4(0x9ae)]();
            _0x2d4427['viewport'] = _0x3ffeed, this['_prepareCameraToRender']();
            var _0x219334 = _0x362537[_0x113df4(0x251)][_0x113df4(0x9bb)];
            if (_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9b3)](_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9bc)]), _0x219334 && _0x1ae54c[_0x113df4(0x304)][_0x113df4(0x96f)](this, _0x3b2a0d), _0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9b7)](_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9bc)]), _0x387b86['PerformancePlugin'][_0x113df4(0x9b3)](_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9bd)]), _0x3b2a0d[_0x113df4(0x9be)](_0x2d4427, this, _0x2ef4d3, _0x327a04), _0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9b7)](_0x387b86['PerformancePlugin']['PERFORMANCE_LAYA_3D_RENDER_CULLING']), 0x0 != this[_0x113df4(0x9bf)] && (this['_applyViewProject'](_0x2d4427, this[_0x113df4(0x862)], this['_projectionMatrix']), this[_0x113df4(0x9c0)](_0x2d4427)), _0x3b115f && _0x3b115f[_0x113df4(0x568)](), this[_0x113df4(0x8de)](_0x2d4427, this[_0x113df4(0x862)], this[_0x113df4(0x9a6)]), _0x3b2a0d[_0x113df4(0x9c1)](_0x58b864, _0x2d4427), this['_applyCommandBuffer'](_0x18be32[_0x113df4(0x984)][_0x113df4(0x985)], _0x2d4427), _0x387b86['PerformancePlugin']['begainSample'](_0x387b86['PerformancePlugin'][_0x113df4(0x9c2)]), _0x3b2a0d[_0x113df4(0x9c3)](_0x2d4427, _0x525782['Scene3D']['SCENERENDERFLAG_RENDERQPAQUE']), _0x387b86[_0x113df4(0x9b6)]['endSample'](_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9c2)]), this[_0x113df4(0x9b2)](_0x18be32[_0x113df4(0x984)][_0x113df4(0x986)], _0x2d4427), _0x3b2a0d['_renderScene'](_0x2d4427, _0x525782['Scene3D'][_0x113df4(0x9c4)]), this[_0x113df4(0x9b2)](_0x18be32['CameraEventFlags'][_0x113df4(0x987)], _0x2d4427), _0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9b3)](_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9c5)]), _0x3b2a0d[_0x113df4(0x9c3)](_0x2d4427, _0x525782[_0x113df4(0x225)][_0x113df4(0x9c6)]), _0x387b86['PerformancePlugin']['endSample'](_0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9c5)]), _0x3b2a0d[_0x113df4(0x9c7)](), this['_applyCommandBuffer'](_0x18be32[_0x113df4(0x984)][_0x113df4(0x988)], _0x2d4427), _0x3b115f && _0x3b115f[_0x113df4(0x435)](), _0x58d4a0) {
                if (this[_0x113df4(0x9a8)] && this[_0x113df4(0x9a8)]['enable'])
                    _0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9b3)](_0x387b86['PerformancePlugin']['PERFORMANCE_LAYA_3D_RENDER_POSTPROCESS']), this[_0x113df4(0x9a8)][_0x113df4(0x5e8)](), this[_0x113df4(0x9a8)][_0x113df4(0x662)](), _0x387b86[_0x113df4(0x9b6)][_0x113df4(0x9b7)](_0x387b86['PerformancePlugin'][_0x113df4(0x9c8)]);
                else {
                    if (this[_0x113df4(0x9af)] || this[_0x113df4(0x98c)]) {
                        var _0x28d602 = this[_0x113df4(0x9ad)](), _0x4f2bc4 = this[_0x113df4(0x65f)]();
                        this['_screenOffsetScale'][_0x113df4(0x1f8)](_0x3ffeed['x'] / _0x28d602, _0x3ffeed['y'] / _0x4f2bc4, _0x3ffeed[_0x113df4(0x313)] / _0x28d602, _0x3ffeed[_0x113df4(0x439)] / _0x4f2bc4), this[_0x113df4(0x98e)][_0x113df4(0x560)] = this, this[_0x113df4(0x98e)][_0x113df4(0x642)](this[_0x113df4(0x561)], this[_0x113df4(0x98d)] ? this[_0x113df4(0x98d)] : null, this['_screenOffsetScale'], null, null, 0x0, !0x0), this['_internalCommandBuffer'][_0x113df4(0x633)](), this['_internalCommandBuffer'][_0x113df4(0x44c)]();
                    }
                }
                _0x26547d[_0x113df4(0x3f4)](this['_internalRenderTexture']);
            }
            this[_0x113df4(0x9b2)](_0x18be32[_0x113df4(0x984)][_0x113df4(0x989)], _0x2d4427);
        }
        [_0x6027f5(0x9c0)](_0x575543) {
            var _0x56cf5f = _0x6027f5;
            _0x387b86[_0x56cf5f(0x9b6)]['begainSample'](_0x387b86['PerformancePlugin'][_0x56cf5f(0x9c9)]);
            var _0x229de1 = this[_0x56cf5f(0x9ac)];
            0x0 != (_0x229de1 & _0x18be32[_0x56cf5f(0x96c)][_0x56cf5f(0x3fd)]) && (_0x55cd9b[_0x56cf5f(0x9ca)]['update'](this, _0x18be32[_0x56cf5f(0x96c)][_0x56cf5f(0x3fd)]), _0x55cd9b[_0x56cf5f(0x9ca)][_0x56cf5f(0x4ff)](_0x575543, _0x18be32[_0x56cf5f(0x96c)][_0x56cf5f(0x3fd)])), 0x0 != (_0x229de1 & _0x18be32[_0x56cf5f(0x96c)][_0x56cf5f(0x96d)]) && (_0x55cd9b['depthPass'][_0x56cf5f(0x96f)](this, _0x18be32[_0x56cf5f(0x96c)][_0x56cf5f(0x96d)]), _0x55cd9b[_0x56cf5f(0x9ca)]['render'](_0x575543, _0x18be32['DepthTextureMode'][_0x56cf5f(0x96d)])), _0x387b86[_0x56cf5f(0x9b6)]['endSample'](_0x387b86['PerformancePlugin'][_0x56cf5f(0x9c9)]);
        }
        get [_0x6027f5(0x971)]() {
            return this['_depthTexture'];
        }
        set [_0x6027f5(0x971)](_0x30589f) {
            var _0x5cb804 = _0x6027f5;
            this[_0x5cb804(0x976)] = _0x30589f;
        }
        get ['depthNormalTexture']() {
            var _0x1f8eda = _0x6027f5;
            return this[_0x1f8eda(0x973)];
        }
        set [_0x6027f5(0x972)](_0x45169d) {
            var _0x4f280f = _0x6027f5;
            this[_0x4f280f(0x973)] = _0x45169d;
        }
        [_0x6027f5(0x99f)](_0xf09eba) {
            var _0x487895 = _0x6027f5;
            _0xf09eba && _0x525782[_0x487895(0x225)][_0x487895(0x9cb)][_0x487895(0x97e)](), _0x55cd9b[_0x487895(0x9ca)][_0x487895(0x97e)]();
        }
        [_0x6027f5(0x4ff)](_0xd8f5a6 = null, _0x567297 = null) {
            var _0x334cac = _0x6027f5;
            if (this[_0x334cac(0x9cc)]) {
                var _0x3d9034 = this['viewport'], _0x19ab2c = this['_needInternalRenderTexture'](), _0x30633b = _0x50b403[_0x334cac(0x3e2)], _0x4f8138 = _0x30633b[_0x334cac(0x5ca)] = this['_scene'];
                _0x30633b[_0x334cac(0x5e0)] = _0x30633b['configPipeLineMode'], _0x19ab2c ? (this[_0x334cac(0x561)] = _0x26547d[_0x334cac(0x3ef)](_0x3d9034[_0x334cac(0x313)], _0x3d9034[_0x334cac(0x439)], this[_0x334cac(0x99c)](), _0x387b86['RenderTextureDepthFormat'][_0x334cac(0x3e5)], 0x4), this[_0x334cac(0x561)][_0x334cac(0x2e0)] = _0x387b86[_0x334cac(0x2e1)][_0x334cac(0x94d)]) : this[_0x334cac(0x561)] = null;
                var _0xa55812 = this['_renderShadowMap'](_0x4f8138, _0x30633b);
                this['_preRenderMainPass'](_0x30633b, _0x4f8138, _0x19ab2c, _0x3d9034), this[_0x334cac(0x9ba)](_0x30633b, _0x3d9034, _0x4f8138, _0xd8f5a6, _0x567297, _0x19ab2c), this[_0x334cac(0x99f)](_0xa55812);
            }
        }
        [_0x6027f5(0x9cd)](_0x14e18e, _0x381ed6) {
            var _0x232314 = _0x6027f5;
            this[_0x232314(0x996)]['x'] = this[_0x232314(0x564)]['x'], this['_rayViewport']['y'] = this[_0x232314(0x564)]['y'], this[_0x232314(0x996)][_0x232314(0x313)] = _0x387b86['Laya'][_0x232314(0x8fa)]['_width'], this['_rayViewport']['height'] = _0x387b86[_0x232314(0x68d)][_0x232314(0x8fa)][_0x232314(0x3ea)], _0x353f39['calculateCursorRay'](_0x14e18e, this[_0x232314(0x996)], this[_0x232314(0x9a6)], this[_0x232314(0x862)], null, _0x381ed6);
        }
        [_0x6027f5(0x9ce)](_0x10b60b, _0x37d069) {
            var _0x1fad52 = _0x6027f5, _0x2855b7 = _0x55cd9b[_0x1fad52(0x9cf)], _0x50478f = this['viewport'];
            _0x2855b7['x'] = _0x10b60b['x'] * _0x50478f['width'], _0x2855b7['y'] = _0x10b60b['y'] * _0x50478f[_0x1fad52(0x439)], _0x353f39[_0x1fad52(0x9d0)](_0x2855b7, this[_0x1fad52(0x564)], this[_0x1fad52(0x9a6)], this[_0x1fad52(0x862)], null, _0x37d069);
        }
        [_0x6027f5(0x9d1)](_0x2bea18, _0x174aa5) {
            var _0x213601 = _0x6027f5;
            _0x6b4d98[_0x213601(0x27b)](this['_projectionMatrix'], this[_0x213601(0x993)], this[_0x213601(0x994)]), this[_0x213601(0x564)][_0x213601(0x9d2)](_0x2bea18, this[_0x213601(0x994)], _0x174aa5), _0x174aa5['x'] = _0x174aa5['x'] / _0x387b86[_0x213601(0x68d)]['stage'][_0x213601(0x9d3)], _0x174aa5['y'] = _0x174aa5['y'] / _0x387b86[_0x213601(0x68d)][_0x213601(0x8fa)][_0x213601(0x9d4)];
        }
        [_0x6027f5(0x9d5)](_0x22a5a1, _0x4adfef) {
            var _0xab3c9f = _0x6027f5;
            _0x6b4d98['multiply'](this[_0xab3c9f(0x9a6)], this['_viewMatrix'], this['_projectionViewMatrix']), this['normalizedViewport'][_0xab3c9f(0x9d2)](_0x22a5a1, this[_0xab3c9f(0x994)], _0x4adfef), _0x4adfef['x'] = _0x4adfef['x'] / _0x387b86[_0xab3c9f(0x68d)]['stage'][_0xab3c9f(0x9d3)], _0x4adfef['y'] = _0x4adfef['y'] / _0x387b86[_0xab3c9f(0x68d)][_0xab3c9f(0x8fa)][_0xab3c9f(0x9d4)];
        }
        ['convertScreenCoordToOrthographicCoord'](_0x21ed7a, _0x1fa77f) {
            var _0x402ea9 = _0x6027f5;
            if (this[_0x402ea9(0x8eb)]) {
                var _0xd7a729 = _0x50b403[_0x402ea9(0x9a3)], _0x2c38a7 = _0x50b403[_0x402ea9(0x565)], _0x4d01a7 = this['orthographicVerticalSize'] * this[_0x402ea9(0x868)] / _0xd7a729, _0x187615 = this[_0x402ea9(0x867)] / _0x2c38a7;
                return _0x1fa77f['x'] = (-_0xd7a729 / 0x2 + _0x21ed7a['x'] * _0x387b86[_0x402ea9(0x68d)][_0x402ea9(0x8fa)][_0x402ea9(0x9d3)]) * _0x4d01a7, _0x1fa77f['y'] = (_0x2c38a7 / 0x2 - _0x21ed7a['y'] * _0x387b86[_0x402ea9(0x68d)][_0x402ea9(0x8fa)][_0x402ea9(0x9d4)]) * _0x187615, _0x1fa77f['z'] = (this[_0x402ea9(0x861)] - this[_0x402ea9(0x860)]) * (_0x21ed7a['z'] + 0x1) / 0x2 - this[_0x402ea9(0x861)], _0x3697cd[_0x402ea9(0x216)](_0x1fa77f, this[_0x402ea9(0x3d6)][_0x402ea9(0x3d8)], _0x1fa77f), !0x0;
            }
            return !0x1;
        }
        [_0x6027f5(0x364)](_0x1e9a13 = !0x0) {
            var _0x16be14 = _0x6027f5;
            this[_0x16be14(0x98d)] = null, this['transform'][_0x16be14(0x8fb)](_0x387b86[_0x16be14(0x5b1)]['TRANSFORM_CHANGED'], this, this[_0x16be14(0x999)]), super['destroy'](_0x1e9a13);
        }
        [_0x6027f5(0x9d6)](_0x30b781, _0x5dbdbe) {
            var _0x13cead = _0x6027f5, _0x3c859a = this[_0x13cead(0x98f)][_0x30b781];
            _0x3c859a || (_0x3c859a = this['_cameraEventCommandBuffer'][_0x30b781] = []), _0x3c859a['indexOf'](_0x5dbdbe) < 0x0 && _0x3c859a[_0x13cead(0x2ac)](_0x5dbdbe), _0x5dbdbe[_0x13cead(0x560)] = this;
        }
        [_0x6027f5(0x9d7)](_0x3e77fd, _0x58f750) {
            var _0x57ec21 = _0x6027f5, _0x4c5ff0 = this['_cameraEventCommandBuffer'][_0x3e77fd];
            if (!_0x4c5ff0)
                throw 'Camera:unknown\x20event.';
            var _0x361ef0 = _0x4c5ff0['indexOf'](_0x58f750);
            -0x1 != _0x361ef0 && _0x4c5ff0[_0x57ec21(0x33a)](_0x361ef0, 0x1);
        }
        [_0x6027f5(0x9d8)](_0x32040c) {
            var _0x49be0c = _0x6027f5;
            this['_cameraEventCommandBuffer'][_0x32040c] && (this[_0x49be0c(0x98f)][_0x32040c][_0x49be0c(0x205)] = 0x0);
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x55cd9b();
        }
    }
    _0x55cd9b[_0x6027f5(0x9cf)] = new _0x30a72c(), _0x55cd9b[_0x6027f5(0x385)] = 0x0, _0x55cd9b[_0x6027f5(0x9ca)] = new _0x10c835();
    class _0x3c295f {
        constructor() {
            var _0x451937 = _0x6027f5;
            this['_eventList'] = [], this[_0x451937(0x9d9)] = new _0x312819(), this['_touchPool'] = [], this[_0x451937(0x9da)] = new _0x3a62b0(), this[_0x451937(0x9db)] = !0x0, this['_pushEventList'] = (_0x163aff => {
                var _0x2eb0bf = _0x451937;
                _0x163aff[_0x2eb0bf(0x9dc)] && _0x163aff[_0x2eb0bf(0x9dd)](), this[_0x2eb0bf(0x9de)][_0x2eb0bf(0x2ac)](_0x163aff);
            })[_0x451937(0x452)](this);
        }
        [_0x6027f5(0x230)](_0x43760c, _0x185025) {
            var _0x4c7dbe = _0x6027f5;
            this['_scene'] = _0x185025, _0x567245[_0x4c7dbe(0x22e)] && (_0x3c295f[_0x4c7dbe(0x9df)] = new _0x387b86['HitResult']()), _0x43760c['oncontextmenu'] = function (_0x3f7677) {
                return !0x1;
            };
        }
        [_0x6027f5(0x9e0)](_0x590038) {
            var _0xf6cf1e = _0x6027f5;
            _0x590038['addEventListener']('mousedown', this[_0xf6cf1e(0x9e1)]), _0x590038['addEventListener']('mouseup', this['_pushEventList'], !0x0), _0x590038[_0xf6cf1e(0x9e2)](_0xf6cf1e(0x9e3), this[_0xf6cf1e(0x9e1)], !0x0), _0x590038['addEventListener'](_0xf6cf1e(0x9e4), this[_0xf6cf1e(0x9e1)]), _0x590038[_0xf6cf1e(0x9e2)](_0xf6cf1e(0x9e5), this['_pushEventList'], !0x0), _0x590038['addEventListener'](_0xf6cf1e(0x9e6), this['_pushEventList'], !0x0), _0x590038[_0xf6cf1e(0x9e2)](_0xf6cf1e(0x9e7), this[_0xf6cf1e(0x9e1)], !0x0);
        }
        [_0x6027f5(0x9e8)](_0x392504) {
            var _0xde8bd8 = _0x6027f5;
            _0x392504['removeEventListener'](_0xde8bd8(0x9e9), this[_0xde8bd8(0x9e1)]), _0x392504[_0xde8bd8(0x9ea)](_0xde8bd8(0x9eb), this[_0xde8bd8(0x9e1)], !0x0), _0x392504[_0xde8bd8(0x9ea)]('mousemove', this['_pushEventList'], !0x0), _0x392504[_0xde8bd8(0x9ea)](_0xde8bd8(0x9e4), this[_0xde8bd8(0x9e1)]), _0x392504[_0xde8bd8(0x9ea)](_0xde8bd8(0x9e5), this['_pushEventList'], !0x0), _0x392504['removeEventListener'](_0xde8bd8(0x9e6), this['_pushEventList'], !0x0), _0x392504[_0xde8bd8(0x9ea)](_0xde8bd8(0x9e7), this[_0xde8bd8(0x9e1)], !0x0), this[_0xde8bd8(0x9de)][_0xde8bd8(0x205)] = 0x0, this[_0xde8bd8(0x9da)][_0xde8bd8(0x44c)]();
        }
        ['touchCount']() {
            return this['_touches']['length'];
        }
        get [_0x6027f5(0x9ec)]() {
            var _0x4e98c2 = _0x6027f5;
            return this[_0x4e98c2(0x9db)];
        }
        set [_0x6027f5(0x9ec)](_0x3deb4c) {
            this['_multiTouchEnabled'] = _0x3deb4c;
        }
        ['_getTouch'](_0x3e3698, _0x56073d) {
            var _0x573be4 = _0x6027f5, _0x42d235 = this[_0x573be4(0x9ed)][_0x3e3698];
            return 0x0 == _0x56073d && _0x42d235 && -0x1 != _0x42d235['_getIndexInList']() || 0x1 == _0x56073d && _0x42d235 && -0x1 == _0x42d235['_getIndexInList']() ? null : (_0x42d235 || (_0x42d235 = new _0x337cb9(), this[_0x573be4(0x9ed)][_0x3e3698] = _0x42d235, _0x42d235[_0x573be4(0x877)] = _0x3e3698), _0x42d235);
        }
        ['_mouseTouchDown']() {
            var _0x5044fe = _0x6027f5, _0x209828 = this[_0x5044fe(0x9d9)], _0x420f37 = _0x209828[_0x5044fe(0x875)];
            if (_0x209828['_pressedSprite'] = _0x420f37, _0x209828[_0x5044fe(0x874)] = _0x387b86[_0x5044fe(0x4dc)][_0x5044fe(0x815)], _0x420f37) {
                var _0x50e5d1 = _0x420f37['_scripts'];
                if (_0x50e5d1) {
                    for (var _0x523749 = 0x0, _0x157547 = _0x50e5d1[_0x5044fe(0x205)]; _0x523749 < _0x157547; _0x523749++)
                        _0x50e5d1[_0x523749][_0x5044fe(0x9ee)]();
                }
            }
        }
        [_0x6027f5(0x9ef)]() {
            var _0x22ab12 = _0x6027f5, _0x31d320, _0x7958b5, _0x2d4d1a = this[_0x22ab12(0x9d9)], _0xbceede = _0x2d4d1a[_0x22ab12(0x873)];
            _0x2d4d1a['_pressedSprite'] = null, _0x2d4d1a[_0x22ab12(0x874)] = -0x1;
            var _0x4f949a = _0x2d4d1a[_0x22ab12(0x875)];
            if (_0x4f949a && _0x4f949a === _0xbceede) {
                var _0x3ff538 = _0x4f949a['_scripts'];
                if (_0x3ff538) {
                    for (_0x31d320 = 0x0, _0x7958b5 = _0x3ff538[_0x22ab12(0x205)]; _0x31d320 < _0x7958b5; _0x31d320++)
                        _0x3ff538[_0x31d320][_0x22ab12(0x9f0)]();
                }
            }
            if (_0xbceede) {
                var _0x429c64 = _0xbceede[_0x22ab12(0x36a)];
                if (_0x429c64) {
                    for (_0x31d320 = 0x0, _0x7958b5 = _0x429c64['length']; _0x31d320 < _0x7958b5; _0x31d320++)
                        _0x429c64[_0x31d320][_0x22ab12(0x9f1)]();
                }
            }
        }
        [_0x6027f5(0x9f2)](_0x5b422b) {
            var _0x3c7e6d = _0x6027f5;
            if (_0x567245[_0x3c7e6d(0x22e)] || _0x567245[_0x3c7e6d(0x239)]) {
                var _0x3dec85 = _0x3c295f[_0x3c7e6d(0x9df)], _0x3105d3 = _0x3c295f[_0x3c7e6d(0x9cf)], _0xf7cc05 = _0x3c295f[_0x3c7e6d(0x9f3)];
                _0x3dec85[_0x3c7e6d(0x9f4)] = !0x1;
                var _0x515eb0 = this['_mouseTouch'][_0x3c7e6d(0x9f5)], _0x598851 = this[_0x3c7e6d(0x9d9)][_0x3c7e6d(0x876)];
                _0x3105d3['x'] = _0x515eb0, _0x3105d3['y'] = _0x598851;
                for (var _0x2cf09f = _0x5b422b['length'] - 0x1; _0x2cf09f >= 0x0; _0x2cf09f--) {
                    var _0x5c6ca6 = _0x5b422b[_0x2cf09f], _0x1b63f6 = _0x5c6ca6[_0x3c7e6d(0x564)];
                    if (_0x3105d3['x'] >= _0x1b63f6['x'] && _0x3105d3['y'] >= _0x1b63f6['y'] && _0x3105d3['x'] <= _0x1b63f6[_0x3c7e6d(0x313)] && _0x3105d3['y'] <= _0x1b63f6[_0x3c7e6d(0x439)]) {
                        if (_0x5c6ca6['viewportPointToRay'](_0x3105d3, _0xf7cc05), this[_0x3c7e6d(0x3b0)][_0x3c7e6d(0x9f6)][_0x3c7e6d(0x9f7)](_0xf7cc05, _0x3dec85) || _0x5c6ca6[_0x3c7e6d(0x992)] === _0x18be32['CameraClearFlags']['SolidColor'] || _0x5c6ca6['clearFlag'] === _0x18be32[_0x3c7e6d(0x97f)][_0x3c7e6d(0x981)])
                            break;
                    }
                }
                var _0x1b1464 = this[_0x3c7e6d(0x9d9)], _0x5eedf5 = _0x1b1464[_0x3c7e6d(0x875)];
                if (_0x3dec85[_0x3c7e6d(0x9f4)]) {
                    var _0x3cb16e = _0x3dec85[_0x3c7e6d(0x9f8)][_0x3c7e6d(0x38b)];
                    _0x1b1464[_0x3c7e6d(0x875)] = _0x3cb16e;
                    var _0x43deb4 = _0x3cb16e['_scripts'];
                    if (_0x5eedf5 !== _0x3cb16e && _0x43deb4) {
                        for (var _0x9c349f = 0x0, _0x3bc06d = _0x43deb4['length']; _0x9c349f < _0x3bc06d; _0x9c349f++)
                            _0x43deb4[_0x9c349f][_0x3c7e6d(0x9f9)]();
                    }
                } else
                    _0x1b1464[_0x3c7e6d(0x875)] = null;
                if (_0x5eedf5 && _0x5eedf5 !== _0x3cb16e) {
                    var _0x28a686 = _0x5eedf5[_0x3c7e6d(0x36a)];
                    if (_0x28a686) {
                        for (_0x9c349f = 0x0, _0x3bc06d = _0x28a686[_0x3c7e6d(0x205)]; _0x9c349f < _0x3bc06d; _0x9c349f++)
                            _0x28a686[_0x9c349f]['onMouseOut']();
                    }
                }
            }
        }
        [_0x6027f5(0x9fa)](_0x4268b9, _0x5ae4d3) {
            var _0xe19847 = _0x6027f5;
            for (var _0xc5c023 = 0x0, _0x256ba9 = 0x0, _0x420b85 = this[_0xe19847(0x9da)][_0xe19847(0x205)], _0x670efd = 0x0, _0x22b232 = _0x4268b9[_0xe19847(0x205)]; _0x670efd < _0x22b232; _0x670efd++) {
                var _0x45d582 = _0x4268b9[_0x670efd], _0x318dec = _0x45d582['identifier'];
                if (this[_0xe19847(0x9db)] || 0x0 === this['_touches']['length'] || 0x0 != _0x5ae4d3) {
                    var _0x21134f = this[_0xe19847(0x9fb)](_0x318dec, _0x5ae4d3);
                    if (0x1 != _0x5ae4d3 || _0x21134f) {
                        var _0x386772 = this['_touchPool'][_0x318dec][_0xe19847(0x57f)], _0x4d9182 = _0x3c295f[_0xe19847(0x9fc)];
                        _0x4d9182[_0xe19847(0x9fd)](_0x45d582[_0xe19847(0x9fe)], _0x45d582[_0xe19847(0x9ff)]), _0x387b86[_0xe19847(0x328)][_0xe19847(0x8fa)][_0xe19847(0xa00)][_0xe19847(0xa01)](_0x4d9182);
                        var _0x24e4ad = _0x4d9182['x'], _0x5d4a58 = _0x4d9182['y'];
                        switch (_0x5ae4d3) {
                        case 0x0:
                            _0x21134f && this[_0xe19847(0x9da)][_0xe19847(0x207)](_0x21134f), _0xc5c023 += _0x24e4ad, _0x256ba9 += _0x5d4a58;
                            break;
                        case 0x1:
                            _0x21134f && this[_0xe19847(0x9da)][_0xe19847(0x3b4)](_0x21134f), _0xc5c023 -= _0x24e4ad, _0x256ba9 -= _0x5d4a58;
                            break;
                        case 0x2:
                            _0xc5c023 = _0x24e4ad - _0x386772['x'], _0x256ba9 = _0x5d4a58 - _0x386772['y'];
                        }
                        _0x386772['x'] = _0x24e4ad, _0x386772['y'] = _0x5d4a58;
                    }
                }
            }
            var _0x5a964d = this['_touches']['length'];
            0x0 === _0x5a964d ? (this['_mouseTouch'][_0xe19847(0x9f5)] = 0x0, this[_0xe19847(0x9d9)]['mousePositionY'] = 0x0) : (this['_mouseTouch'][_0xe19847(0x9f5)] = (this['_mouseTouch']['mousePositionX'] * _0x420b85 + _0xc5c023) / _0x5a964d, this[_0xe19847(0x9d9)]['mousePositionY'] = (this[_0xe19847(0x9d9)][_0xe19847(0x876)] * _0x420b85 + _0x256ba9) / _0x5a964d);
        }
        [_0x6027f5(0x388)]() {
            var _0x3abca9 = _0x6027f5, _0xa169c5, _0x53c367, _0x8588b4, _0x355f73, _0x1d8607 = _0x567245[_0x3abca9(0x23f)] && !_0x387b86[_0x3abca9(0x234)]['disableSimulation'];
            _0x53c367 = this[_0x3abca9(0x9de)][_0x3abca9(0x205)];
            var _0xa0a668 = this[_0x3abca9(0x3b0)][_0x3abca9(0x8ee)];
            if (_0x53c367 > 0x0) {
                var _0x455d4e = !0x1;
                for (_0xa169c5 = 0x0; _0xa169c5 < _0x53c367; _0xa169c5++) {
                    var _0x279b15 = this[_0x3abca9(0x9de)][_0xa169c5];
                    switch (_0x279b15['type']) {
                    case 'mousedown':
                        _0x1d8607 && this['_mouseTouchDown']();
                        break;
                    case _0x3abca9(0x9eb):
                        _0x1d8607 && this['_mouseTouchUp']();
                        break;
                    case 'mousemove':
                        var _0x41543f = _0x3c295f[_0x3abca9(0x9fc)];
                        _0x41543f[_0x3abca9(0x9fd)](_0x279b15[_0x3abca9(0x9fe)], _0x279b15['pageY']), _0x387b86[_0x3abca9(0x328)][_0x3abca9(0x8fa)]['_canvasTransform'][_0x3abca9(0xa01)](_0x41543f), this[_0x3abca9(0x9d9)][_0x3abca9(0x9f5)] = _0x41543f['x'], this[_0x3abca9(0x9d9)]['mousePositionY'] = _0x41543f['y'], _0x1d8607 && (_0x455d4e = !0x0);
                        break;
                    case _0x3abca9(0x9e4):
                        var _0x1e393b = this[_0x3abca9(0x9da)]['length'];
                        this[_0x3abca9(0x9fa)](_0x279b15[_0x3abca9(0xa02)], 0x0), _0x1d8607 && (!_0x362537[_0x3abca9(0x251)][_0x3abca9(0x24c)] && this[_0x3abca9(0x9f2)](_0xa0a668), 0x0 === _0x1e393b && this[_0x3abca9(0xa03)]());
                        break;
                    case 'touchend':
                    case 'touchcancel':
                        this[_0x3abca9(0x9fa)](_0x279b15[_0x3abca9(0xa02)], 0x1), _0x1d8607 && 0x0 === this['_touches'][_0x3abca9(0x205)] && this['_mouseTouchUp']();
                        break;
                    case _0x3abca9(0x9e6):
                        this[_0x3abca9(0x9fa)](_0x279b15[_0x3abca9(0xa02)], 0x2), _0x1d8607 && (_0x455d4e = !0x0);
                        break;
                    default:
                        throw _0x3abca9(0xa04);
                    }
                }
                _0x455d4e && !_0x362537['_config'][_0x3abca9(0x24c)] && this[_0x3abca9(0x9f2)](_0xa0a668), this[_0x3abca9(0x9de)][_0x3abca9(0x205)] = 0x0;
            }
            if (_0x1d8607) {
                var _0x219c71 = this[_0x3abca9(0x9d9)], _0x29f710 = _0x219c71[_0x3abca9(0x873)];
                if (_0x29f710 && _0x387b86[_0x3abca9(0x4dc)]['loopCount'] > _0x219c71[_0x3abca9(0x874)]) {
                    var _0x22c0a1 = _0x29f710['_scripts'];
                    if (_0x22c0a1) {
                        for (_0x8588b4 = 0x0, _0x355f73 = _0x22c0a1[_0x3abca9(0x205)]; _0x8588b4 < _0x355f73; _0x8588b4++)
                            _0x22c0a1[_0x8588b4][_0x3abca9(0xa05)]();
                    }
                }
                var _0x20c579 = _0x219c71['sprite'];
                if (_0x20c579) {
                    var _0x1e92b4 = _0x20c579[_0x3abca9(0x36a)];
                    if (_0x1e92b4) {
                        for (_0x8588b4 = 0x0, _0x355f73 = _0x1e92b4['length']; _0x8588b4 < _0x355f73; _0x8588b4++)
                            _0x1e92b4[_0x8588b4]['onMouseOver']();
                    }
                }
            }
        }
        [_0x6027f5(0xa06)](_0x3d95c3) {
            var _0xb5ca92 = _0x6027f5;
            return _0x3d95c3 < this[_0xb5ca92(0x9da)][_0xb5ca92(0x205)] ? this['_touches'][_0xb5ca92(0x1fe)][_0x3d95c3] : null;
        }
    }
    _0x3c295f[_0x6027f5(0x9fc)] = new _0x387b86[(_0x6027f5(0x2e2))](), _0x3c295f['_tempVector20'] = new _0x30a72c(), _0x3c295f[_0x6027f5(0x9f3)] = new _0x31e56b(new _0x3697cd(), new _0x3697cd());
    class _0x3e85a5 {
        constructor(_0x33c58c, _0xeca3d7) {
            var _0x443a7b = _0x6027f5;
            this[_0x443a7b(0x57f)] = _0x33c58c, this[_0x443a7b(0xa07)] = _0xeca3d7;
        }
        static get [_0x6027f5(0x456)]() {
            var _0x26b59b = _0x6027f5;
            return _0x3e85a5[_0x26b59b(0x455)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x21303d = _0x6027f5;
            _0x3e85a5[_0x21303d(0x455)] = new _0x4b2139(0x14, [
                new _0x25649b(0x0, _0x53b5cc[_0x21303d(0x46b)], _0x73b54a['MESH_POSITION0']),
                new _0x25649b(0xc, _0x53b5cc[_0x21303d(0x575)], _0x73b54a['MESH_TEXTURECOORDINATE0'])
            ]);
        }
        get [_0x6027f5(0x5a2)]() {
            var _0x334d36 = _0x6027f5;
            return this[_0x334d36(0x57f)];
        }
        get ['textureCoordinate0']() {
            return this['_textureCoordinate0'];
        }
        get ['vertexDeclaration']() {
            return _0x3e85a5['_vertexDeclaration'];
        }
    }
    class _0x224a66 extends _0x5bd0bd {
        constructor(_0x4b9a79 = 0x30, _0x58fe0d = 0x30) {
            var _0x302cc2 = _0x6027f5;
            super();
            var _0x25328d = _0x387b86[_0x302cc2(0x303)][_0x302cc2(0x304)];
            this['_stacks'] = _0x4b9a79, this[_0x302cc2(0xa08)] = _0x58fe0d;
            for (var _0x257e30 = _0x3e85a5[_0x302cc2(0x456)], _0x32aa2a = _0x257e30[_0x302cc2(0x4e5)] / 0x4, _0x33ae83 = (this[_0x302cc2(0xa09)] + 0x1) * (this['_slices'] + 0x1), _0x4e9fbe = 0x3 * this[_0x302cc2(0xa09)] * (this[_0x302cc2(0xa08)] + 0x1) * 0x2, _0x528904 = new Float32Array(_0x33ae83 * _0x32aa2a), _0x2eb098 = new Uint16Array(_0x4e9fbe), _0x575092 = Math['PI'] / this[_0x302cc2(0xa09)], _0x570415 = 0x2 * Math['PI'] / this[_0x302cc2(0xa08)], _0x56b9ef = 0x0, _0x43a0e9 = 0x0, _0xa65f44 = 0x0, _0x417789 = 0x0; _0x417789 < this[_0x302cc2(0xa09)] + 0x1; _0x417789++)
                for (var _0x445d71 = Math['sin'](_0x417789 * _0x575092), _0x20fd26 = Math['cos'](_0x417789 * _0x575092), _0x383c49 = 0x0; _0x383c49 < this[_0x302cc2(0xa08)] + 0x1; _0x383c49++) {
                    var _0x4fb453 = _0x445d71 * Math[_0x302cc2(0x27f)](_0x383c49 * _0x570415), _0x354395 = _0x445d71 * Math[_0x302cc2(0x278)](_0x383c49 * _0x570415);
                    _0x528904[_0x43a0e9 + 0x0] = _0x4fb453 * _0x224a66[_0x302cc2(0xa0a)], _0x528904[_0x43a0e9 + 0x1] = _0x20fd26 * _0x224a66[_0x302cc2(0xa0a)], _0x528904[_0x43a0e9 + 0x2] = _0x354395 * _0x224a66[_0x302cc2(0xa0a)], _0x528904[_0x43a0e9 + 0x3] = -_0x383c49 / this[_0x302cc2(0xa08)] + 0.75, _0x528904[_0x43a0e9 + 0x4] = _0x417789 / this[_0x302cc2(0xa09)], _0x43a0e9 += _0x32aa2a, _0x417789 != this[_0x302cc2(0xa09)] - 0x1 && (_0x2eb098[_0xa65f44++] = _0x56b9ef + 0x1, _0x2eb098[_0xa65f44++] = _0x56b9ef, _0x2eb098[_0xa65f44++] = _0x56b9ef + (this[_0x302cc2(0xa08)] + 0x1), _0x2eb098[_0xa65f44++] = _0x56b9ef + (this[_0x302cc2(0xa08)] + 0x1), _0x2eb098[_0xa65f44++] = _0x56b9ef, _0x2eb098[_0xa65f44++] = _0x56b9ef + this['_slices'], _0x56b9ef++);
                }
            this[_0x302cc2(0x4f6)] = new _0x2ce777(0x4 * _0x528904[_0x302cc2(0x205)], _0x25328d[_0x302cc2(0x4fa)], !0x1), this[_0x302cc2(0x4f6)][_0x302cc2(0x456)] = _0x257e30, this[_0x302cc2(0x629)] = new _0x67ef8f(_0x18be32[_0x302cc2(0x8c9)][_0x302cc2(0x8cb)], _0x2eb098['length'], _0x25328d[_0x302cc2(0x4fa)], !0x1), this[_0x302cc2(0x4f6)][_0x302cc2(0x45d)](_0x528904[_0x302cc2(0x454)]), this[_0x302cc2(0x629)]['setData'](_0x2eb098);
            var _0x3ee252 = new _0x5b1dae();
            _0x3ee252[_0x302cc2(0x452)](), _0x3ee252[_0x302cc2(0x4eb)](this[_0x302cc2(0x4f6)]), _0x3ee252[_0x302cc2(0x4f3)](this[_0x302cc2(0x629)]), _0x3ee252[_0x302cc2(0x4f9)](), this[_0x302cc2(0x4f8)] = _0x3ee252;
        }
        static [_0x6027f5(0x230)]() {
            var _0x258874 = _0x6027f5;
            _0x224a66[_0x258874(0x304)] = new _0x224a66();
        }
        get ['stacks']() {
            return this['_stacks'];
        }
        get ['slices']() {
            var _0x32e9a2 = _0x6027f5;
            return this[_0x32e9a2(0xa08)];
        }
        [_0x6027f5(0x5e8)](_0x12f84a) {
            var _0x5e32a5 = _0x6027f5, _0xf1dfe1 = _0x387b86[_0x5e32a5(0x303)][_0x5e32a5(0x304)], _0x5b2597 = this[_0x5e32a5(0x629)][_0x5e32a5(0xa0b)];
            _0xf1dfe1[_0x5e32a5(0x8d4)](_0xf1dfe1[_0x5e32a5(0x506)], _0x5b2597, _0xf1dfe1[_0x5e32a5(0xa0c)], 0x0), _0x387b86['Stat'][_0x5e32a5(0x62e)] += _0x5b2597 / 0x3, _0x387b86['Stat']['renderBatches']++;
        }
    }
    _0x224a66[_0x6027f5(0xa0a)] = 0x1, (_0xabc5fe = _0x18be32[_0x6027f5(0xa0d)] || (_0x18be32[_0x6027f5(0xa0d)] = {}))[_0xabc5fe['PositiveX'] = 0x0] = _0x6027f5(0xa0e), _0xabc5fe[_0xabc5fe[_0x6027f5(0xa0f)] = 0x1] = _0x6027f5(0xa0f), _0xabc5fe[_0xabc5fe['PositiveY'] = 0x2] = 'PositiveY', _0xabc5fe[_0xabc5fe['NegativeY'] = 0x3] = _0x6027f5(0xa10), _0xabc5fe[_0xabc5fe[_0x6027f5(0xa11)] = 0x4] = 'PositiveZ', _0xabc5fe[_0xabc5fe[_0x6027f5(0xa12)] = 0x5] = _0x6027f5(0xa12);
    class _0x2fe14f extends _0x387b86['BaseTexture'] {
        constructor(_0x136a99, _0x48079b = _0x387b86[_0x6027f5(0x2d9)][_0x6027f5(0x2da)], _0x19c527 = !0x1) {
            var _0x186046 = _0x6027f5;
            super(_0x48079b, _0x19c527), this['_glTextureType'] = _0x387b86[_0x186046(0x303)][_0x186046(0x304)][_0x186046(0x7e8)], this['_width'] = _0x136a99, this[_0x186046(0x3ea)] = _0x136a99;
            var _0x1d97df = _0x387b86[_0x186046(0x303)][_0x186046(0x304)];
            if (this[_0x186046(0x42c)](_0x1d97df[_0x186046(0x42a)], this[_0x186046(0x42b)]), this[_0x186046(0x42c)](_0x1d97df[_0x186046(0x42d)], this[_0x186046(0xa13)]), this[_0x186046(0x42e)](this[_0x186046(0x42f)]), this[_0x186046(0x430)](this['_anisoLevel']), this[_0x186046(0xa14)]) {
                this[_0x186046(0x3ec)] = Math[_0x186046(0x842)](Math[_0x186046(0x84f)](_0x136a99)) + 0x1;
                for (var _0xa9cd3e = 0x0; _0xa9cd3e < this[_0x186046(0x3ec)]; _0xa9cd3e++)
                    this[_0x186046(0xa15)]([], _0xa9cd3e, Math[_0x186046(0x20c)](_0x136a99 >> _0xa9cd3e, 0x1), Math['max'](_0x136a99 >> _0xa9cd3e, 0x1));
                this[_0x186046(0x433)](_0x136a99 * _0x136a99 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6);
            } else
                this[_0x186046(0x3ec)] = 0x1, this[_0x186046(0x433)](_0x136a99 * _0x136a99 * 0x4 * 0x6);
        }
        static get [_0x6027f5(0xa16)]() {
            var _0x3ee0d3 = _0x6027f5;
            return _0x2fe14f[_0x3ee0d3(0xa17)];
        }
        static get [_0x6027f5(0x3f7)]() {
            var _0x2de673 = _0x6027f5;
            return _0x2fe14f[_0x2de673(0xa18)];
        }
        static ['__init__']() {
            var _0x330632 = _0x6027f5, _0x3f2592 = new _0x2fe14f(0x1, _0x387b86['TextureFormat'][_0x330632(0x2da)], !0x1), _0x4c2aa4 = new _0x2fe14f(0x1, _0x387b86[_0x330632(0x2d9)][_0x330632(0x2da)], !0x1), _0x44d31a = new Uint8Array(0x3);
            _0x44d31a[0x0] = 0x0, _0x44d31a[0x1] = 0x0, _0x44d31a[0x2] = 0x0, _0x3f2592[_0x330632(0xa19)]([
                _0x44d31a,
                _0x44d31a,
                _0x44d31a,
                _0x44d31a,
                _0x44d31a,
                _0x44d31a
            ]), _0x3f2592['lock'] = !0x0, _0x44d31a[0x0] = 0x80, _0x44d31a[0x1] = 0x80, _0x44d31a[0x2] = 0x80, _0x4c2aa4[_0x330632(0xa19)]([
                _0x44d31a,
                _0x44d31a,
                _0x44d31a,
                _0x44d31a,
                _0x44d31a,
                _0x44d31a
            ]), _0x4c2aa4[_0x330632(0x31d)] = !0x0, _0x2fe14f[_0x330632(0xa18)] = _0x4c2aa4, _0x2fe14f[_0x330632(0xa17)] = _0x3f2592;
        }
        static [_0x6027f5(0x67c)](_0x39557f, _0x9e4033 = null, _0x2bd428 = null) {
            var _0x558836 = _0x6027f5, _0x413835 = _0x2bd428 ? new _0x2fe14f(0x0, _0x2bd428[0x0], _0x2bd428[0x1]) : new _0x2fe14f(0x0);
            return _0x413835[_0x558836(0xa1a)](_0x39557f), _0x413835;
        }
        static ['_parseBin'](_0x59338c, _0x3147e7 = null, _0xcd74e5 = null) {
            var _0x1a04c2 = _0x6027f5, _0x4c8cf6 = _0xcd74e5 ? new _0x2fe14f(0x0, _0xcd74e5[0x0], _0xcd74e5[0x1]) : new _0x2fe14f(0x0);
            return _0x4c8cf6[_0x1a04c2(0xa1a)](_0x59338c), _0x4c8cf6;
        }
        static ['load'](_0x534416, _0xb84560) {
            var _0x3d8e43 = _0x6027f5, _0x1ba6bc = _0x387b86[_0x3d8e43(0xa1b)][_0x3d8e43(0xa1c)][_0x387b86[_0x3d8e43(0xa1d)][_0x3d8e43(0xa1e)](_0x534416)] ? _0x387b86[_0x3d8e43(0xa1d)][_0x3d8e43(0xa1e)](_0x534416) : _0x387b86[_0x3d8e43(0xa1d)][_0x3d8e43(0xa1f)](_0x534416), _0x2d25d7 = _0x387b86[_0x3d8e43(0xa1b)][_0x3d8e43(0xa1c)][_0x1ba6bc] ? _0x387b86[_0x3d8e43(0xa1b)][_0x3d8e43(0xa1c)][_0x1ba6bc][0x0] : null;
            _0x387b86[_0x3d8e43(0x328)][_0x3d8e43(0x329)]['create'](_0x534416, _0xb84560, null, _0x2d25d7);
        }
        get [_0x6027f5(0x3f6)]() {
            return _0x2fe14f['grayTexture'];
        }
        [_0x6027f5(0xa15)](_0x1ec356, _0x21406c, _0x28d62d, _0xb40bc) {
            var _0x1d8b4f = _0x6027f5, _0x39a1e9 = _0x387b86[_0x1d8b4f(0x303)][_0x1d8b4f(0x304)], _0xd863fb = this[_0x1d8b4f(0xa20)]();
            _0x387b86[_0x1d8b4f(0x40a)]['bindTexture'](_0x39a1e9, this['_glTextureType'], this[_0x1d8b4f(0x40c)]), this['format'] === _0x387b86[_0x1d8b4f(0x2d9)][_0x1d8b4f(0x2da)] ? (_0x39a1e9['pixelStorei'](_0x39a1e9[_0x1d8b4f(0xa21)], 0x1), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9['TEXTURE_CUBE_MAP_POSITIVE_Z'], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9['UNSIGNED_BYTE'], _0x1ec356[0x0]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa22)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9['UNSIGNED_BYTE'], _0x1ec356[0x1]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa23)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9['UNSIGNED_BYTE'], _0x1ec356[0x2]), _0x39a1e9['texImage2D'](_0x39a1e9[_0x1d8b4f(0xa24)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9[_0x1d8b4f(0x40e)], _0x1ec356[0x3]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa25)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9[_0x1d8b4f(0x40e)], _0x1ec356[0x4]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa26)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9['UNSIGNED_BYTE'], _0x1ec356[0x5]), _0x39a1e9[_0x1d8b4f(0xa27)](_0x39a1e9['UNPACK_ALIGNMENT'], 0x4)) : (_0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa28)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9['UNSIGNED_BYTE'], _0x1ec356[0x0]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9['TEXTURE_CUBE_MAP_NEGATIVE_Z'], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9[_0x1d8b4f(0x40e)], _0x1ec356[0x1]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa23)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9['UNSIGNED_BYTE'], _0x1ec356[0x2]), _0x39a1e9['texImage2D'](_0x39a1e9[_0x1d8b4f(0xa24)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9[_0x1d8b4f(0x40e)], _0x1ec356[0x3]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa25)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9[_0x1d8b4f(0x40e)], _0x1ec356[0x4]), _0x39a1e9[_0x1d8b4f(0x411)](_0x39a1e9[_0x1d8b4f(0xa26)], _0x21406c, _0xd863fb, _0x28d62d, _0xb40bc, 0x0, _0xd863fb, _0x39a1e9[_0x1d8b4f(0x40e)], _0x1ec356[0x5]));
        }
        [_0x6027f5(0xa1a)](_0x4537ea, _0x383b72 = !0x1) {
            var _0x31bbe3 = _0x6027f5;
            for (var _0x155895, _0x1c0ff0, _0x15816f = 0x0; _0x15816f < 0x6; _0x15816f++) {
                var _0x528d9f = _0x4537ea[_0x15816f];
                if (!_0x528d9f)
                    return void console[_0x31bbe3(0x93b)](_0x31bbe3(0xa29));
                var _0x2bb4b8 = _0x528d9f['width'], _0x1ebc57 = _0x528d9f[_0x31bbe3(0x439)];
                if (_0x15816f > 0x0 && _0x155895 !== _0x2bb4b8)
                    return void console[_0x31bbe3(0x93b)](_0x31bbe3(0xa2a));
                if ((_0x155895 = _0x2bb4b8) !== (_0x1c0ff0 = _0x1ebc57))
                    return void console[_0x31bbe3(0x93b)](_0x31bbe3(0xa2a));
            }
            this[_0x31bbe3(0x3f0)] = _0x155895, this[_0x31bbe3(0x3ea)] = _0x1c0ff0;
            var _0x589670 = _0x387b86[_0x31bbe3(0x303)][_0x31bbe3(0x304)];
            _0x387b86['WebGLContext'][_0x31bbe3(0x40b)](_0x589670, this['_glTextureType'], this[_0x31bbe3(0x40c)]);
            var _0x4de96d = this[_0x31bbe3(0xa20)]();
            if (_0x387b86[_0x31bbe3(0x31a)][_0x31bbe3(0x31b)]) {
                if (0x1 == _0x383b72) {
                    for (var _0x2dbad4 = 0x0; _0x2dbad4 < 0x6; _0x2dbad4++)
                        _0x4537ea[_0x2dbad4][_0x31bbe3(0xa2b)](_0x383b72);
                }
                _0x589670[_0x31bbe3(0x411)](_0x589670[_0x31bbe3(0xa28)], 0x0, _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x0]), _0x589670['texImage2D'](_0x589670[_0x31bbe3(0xa22)], 0x0, _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x413)], _0x589670['UNSIGNED_BYTE'], _0x4537ea[0x1]), _0x589670[_0x31bbe3(0x411)](_0x589670[_0x31bbe3(0xa23)], 0x0, _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x2]), _0x589670['texImage2D'](_0x589670[_0x31bbe3(0xa24)], 0x0, _0x589670[_0x31bbe3(0x413)], _0x589670['RGBA'], _0x589670['UNSIGNED_BYTE'], _0x4537ea[0x3]), _0x589670['texImage2D'](_0x589670[_0x31bbe3(0xa25)], 0x0, _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x4]), _0x589670[_0x31bbe3(0x411)](_0x589670['TEXTURE_CUBE_MAP_NEGATIVE_Y'], 0x0, _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x413)], _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x5]);
            } else
                _0x383b72 && _0x589670[_0x31bbe3(0xa27)](_0x589670[_0x31bbe3(0xa2c)], !0x0), _0x589670[_0x31bbe3(0x411)](_0x589670[_0x31bbe3(0xa28)], 0x0, _0x4de96d, _0x4de96d, _0x589670['UNSIGNED_BYTE'], _0x4537ea[0x0]), _0x589670[_0x31bbe3(0x411)](_0x589670[_0x31bbe3(0xa22)], 0x0, _0x4de96d, _0x4de96d, _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x1]), _0x589670[_0x31bbe3(0x411)](_0x589670['TEXTURE_CUBE_MAP_POSITIVE_X'], 0x0, _0x4de96d, _0x4de96d, _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x2]), _0x589670[_0x31bbe3(0x411)](_0x589670['TEXTURE_CUBE_MAP_NEGATIVE_X'], 0x0, _0x4de96d, _0x4de96d, _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x3]), _0x589670[_0x31bbe3(0x411)](_0x589670[_0x31bbe3(0xa25)], 0x0, _0x4de96d, _0x4de96d, _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x4]), _0x589670[_0x31bbe3(0x411)](_0x589670[_0x31bbe3(0xa26)], 0x0, _0x4de96d, _0x4de96d, _0x589670[_0x31bbe3(0x40e)], _0x4537ea[0x5]), _0x383b72 && _0x589670[_0x31bbe3(0xa27)](_0x589670[_0x31bbe3(0xa2c)], !0x1);
            this[_0x31bbe3(0xa14)] && this[_0x31bbe3(0xa2d)](_0x155895) && this[_0x31bbe3(0xa2d)](_0x1c0ff0) ? (_0x589670['generateMipmap'](this[_0x31bbe3(0x3e9)]), this[_0x31bbe3(0x433)](_0x155895 * _0x1c0ff0 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this[_0x31bbe3(0x433)](_0x155895 * _0x1c0ff0 * 0x4 * 0x6), this[_0x31bbe3(0x42c)](_0x589670['TEXTURE_WRAP_S'], this[_0x31bbe3(0x42b)]), this[_0x31bbe3(0x42c)](_0x589670[_0x31bbe3(0x42d)], this[_0x31bbe3(0xa13)]), this[_0x31bbe3(0x42e)](this[_0x31bbe3(0x42f)]), this[_0x31bbe3(0x431)] = !0x0, this[_0x31bbe3(0x432)]();
        }
        [_0x6027f5(0xa19)](_0x49dccd, _0x45599b = 0x0) {
            var _0x243934 = _0x6027f5;
            if (!_0x49dccd)
                throw new Error(_0x243934(0xa2e));
            var _0x5de50a = Math[_0x243934(0x20c)](this['_width'] >> _0x45599b, 0x1), _0x551d0f = Math['max'](this[_0x243934(0x3ea)] >> _0x45599b, 0x1), _0x1b4bdc = _0x5de50a * _0x551d0f * this['_getFormatByteCount']();
            if (_0x49dccd[0x0][_0x243934(0x205)] < _0x1b4bdc)
                throw _0x243934(0xa2f) + _0x1b4bdc + '.';
            if (this[_0x243934(0xa15)](_0x49dccd, _0x45599b, _0x5de50a, _0x551d0f), 0x0 === _0x45599b) {
                var _0x184f32 = _0x387b86[_0x243934(0x303)][_0x243934(0x304)];
                this[_0x243934(0x42c)](_0x184f32['TEXTURE_WRAP_S'], this[_0x243934(0x42b)]), this['_setWarpMode'](_0x184f32['TEXTURE_WRAP_T'], this['_wrapModeV']);
            }
            this[_0x243934(0x431)] = !0x0, this[_0x243934(0x432)]();
        }
        [_0x6027f5(0xa30)](_0x58b752, _0x2f3a6a, _0x2f5501 = 0x0) {
            var _0x3bf9a4 = _0x6027f5, _0x433f53 = this[_0x3bf9a4(0x3f0)], _0x5085ab = this[_0x3bf9a4(0x3ea)];
            if (!_0x2f3a6a || _0x433f53 === _0x2f3a6a[_0x3bf9a4(0x313)] && _0x5085ab === _0x2f3a6a[_0x3bf9a4(0x439)]) {
                var _0x4459dc = _0x387b86['LayaGL'][_0x3bf9a4(0x304)];
                _0x387b86[_0x3bf9a4(0x40a)][_0x3bf9a4(0x40b)](_0x4459dc, this['_glTextureType'], this[_0x3bf9a4(0x40c)]);
                var _0xf55a0c = this[_0x3bf9a4(0xa20)]();
                switch (_0x58b752) {
                case _0x18be32[_0x3bf9a4(0xa0d)]['NegativeX']:
                    _0x4459dc[_0x3bf9a4(0x411)](_0x4459dc[_0x3bf9a4(0xa24)], _0x2f5501, _0xf55a0c, _0xf55a0c, _0x4459dc[_0x3bf9a4(0x40e)], _0x2f3a6a);
                    break;
                case _0x18be32[_0x3bf9a4(0xa0d)]['PositiveX']:
                    _0x4459dc[_0x3bf9a4(0x411)](_0x4459dc[_0x3bf9a4(0xa23)], _0x2f5501, _0xf55a0c, _0xf55a0c, _0x4459dc[_0x3bf9a4(0x40e)], _0x2f3a6a);
                    break;
                case _0x18be32[_0x3bf9a4(0xa0d)][_0x3bf9a4(0xa10)]:
                    _0x4459dc[_0x3bf9a4(0x411)](_0x4459dc[_0x3bf9a4(0xa26)], _0x2f5501, _0xf55a0c, _0xf55a0c, _0x4459dc[_0x3bf9a4(0x40e)], _0x2f3a6a);
                    break;
                case _0x18be32[_0x3bf9a4(0xa0d)][_0x3bf9a4(0xa31)]:
                    _0x4459dc[_0x3bf9a4(0x411)](_0x4459dc[_0x3bf9a4(0xa25)], _0x2f5501, _0xf55a0c, _0xf55a0c, _0x4459dc['UNSIGNED_BYTE'], _0x2f3a6a);
                    break;
                case _0x18be32['TextureCubeFace']['NegativeZ']:
                    _0x4459dc['texImage2D'](_0x4459dc['TEXTURE_CUBE_MAP_NEGATIVE_Z'], _0x2f5501, _0xf55a0c, _0xf55a0c, _0x4459dc[_0x3bf9a4(0x40e)], _0x2f3a6a);
                    break;
                case _0x18be32['TextureCubeFace']['PositiveZ']:
                    _0x4459dc[_0x3bf9a4(0x411)](_0x4459dc[_0x3bf9a4(0xa28)], _0x2f5501, _0xf55a0c, _0xf55a0c, _0x4459dc['UNSIGNED_BYTE'], _0x2f3a6a);
                }
                this[_0x3bf9a4(0xa14)] && this['_isPot'](_0x433f53) && this[_0x3bf9a4(0xa2d)](_0x5085ab) ? (_0x4459dc['generateMipmap'](this[_0x3bf9a4(0x3e9)]), this[_0x3bf9a4(0x433)](_0x433f53 * _0x5085ab * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this[_0x3bf9a4(0x433)](_0x433f53 * _0x5085ab * 0x4 * 0x6), this[_0x3bf9a4(0x42c)](_0x4459dc[_0x3bf9a4(0x42a)], this[_0x3bf9a4(0x42b)]), this[_0x3bf9a4(0x42c)](_0x4459dc[_0x3bf9a4(0x42d)], this[_0x3bf9a4(0xa13)]), this['_setFilterMode'](this[_0x3bf9a4(0x42f)]), this[_0x3bf9a4(0x431)] = !0x0;
            } else
                console[_0x3bf9a4(0x93b)](_0x3bf9a4(0xa32));
        }
    }
    _0x2fe14f[_0x6027f5(0xa33)] = _0x6027f5(0xa33), _0x2fe14f[_0x6027f5(0xa34)] = _0x6027f5(0xa34);
    class _0x2c6a45 {
        constructor() {
            var _0x5d7bcb = _0x6027f5;
            this['_length'] = 0x0, this[_0x5d7bcb(0x864)] = [];
        }
        [_0x6027f5(0x207)](_0x3ee8a4) {
            var _0x5bc0d7 = _0x6027f5;
            this['_length'] === this[_0x5bc0d7(0x864)]['length'] ? this[_0x5bc0d7(0x864)][_0x5bc0d7(0x2ac)](_0x3ee8a4) : this[_0x5bc0d7(0x864)][this['_length']] = _0x3ee8a4, this[_0x5bc0d7(0x446)]++;
        }
        [_0x6027f5(0x3b4)](_0x3d28cd) {
            var _0x4ed950 = _0x6027f5, _0x4e17c1 = this['_elements'][_0x4ed950(0x2f9)](_0x3d28cd);
            if (this[_0x4ed950(0x446)]--, _0x4e17c1 !== this[_0x4ed950(0x446)]) {
                var _0x13296e = this['_elements'][this['_length']];
                this[_0x4ed950(0x864)][_0x4e17c1] = _0x13296e;
            }
        }
        [_0x6027f5(0x939)]() {
            var _0x2ec659 = _0x6027f5;
            return this['_length']--, this[_0x2ec659(0x864)][_0x2ec659(0x939)]();
        }
        [_0x6027f5(0xa35)]() {
            var _0x31e6ed = _0x6027f5;
            for (var _0x54824e, _0xefd061 = -0x1, _0x2eedea = this[_0x31e6ed(0x864)], _0x3a9f79 = 0x0; _0x3a9f79 < this[_0x31e6ed(0x446)]; _0x3a9f79++) {
                var _0x32bd48 = _0x2eedea[_0x3a9f79]['_intensity'];
                _0xefd061 < _0x32bd48 && (_0xefd061 = _0x32bd48, _0x54824e = _0x3a9f79);
            }
            return _0x54824e;
        }
        [_0x6027f5(0xa36)](_0x4cb4b6) {
            var _0x1535cc = _0x6027f5, _0x188a87 = this[_0x1535cc(0x864)][0x0];
            this['_elements'][0x0] = this['_elements'][_0x4cb4b6], this['_elements'][_0x4cb4b6] = _0x188a87;
        }
    }
    class _0x254d71 extends _0x2c6a45 {
        ['remove'](_0x55da45) {
            var _0x595a4e = _0x6027f5, _0x337e9c = this[_0x595a4e(0x864)][_0x595a4e(0x2f9)](_0x55da45);
            this[_0x595a4e(0x864)][_0x595a4e(0x33a)](_0x337e9c, 0x1), this[_0x595a4e(0x446)]--;
        }
    }
    class _0x5b1b35 extends _0xe2444c {
        constructor() {
            var _0x290386 = _0x6027f5;
            super(), this[_0x290386(0x6a9)]('LineShader'), this['_shaderValues'][_0x290386(0x4a8)](_0x5b1b35[_0x290386(0x438)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1));
        }
        static ['__initDefine__']() {
        }
        get [_0x6027f5(0x46f)]() {
            var _0x45a991 = _0x6027f5;
            return this[_0x45a991(0x4e2)][_0x45a991(0x4a7)](_0x5b1b35[_0x45a991(0x438)]);
        }
        set [_0x6027f5(0x46f)](_0x167ace) {
            var _0x45ee1a = _0x6027f5;
            this[_0x45ee1a(0x4e2)][_0x45ee1a(0x4a8)](_0x5b1b35[_0x45ee1a(0x438)], _0x167ace);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x46de52 = _0x6027f5, _0x2a2d29 = new _0x5b1b35();
            return this[_0x46de52(0x1fc)](_0x2a2d29), _0x2a2d29;
        }
    }
    _0x5b1b35[_0x6027f5(0x438)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xa37));
    class _0x4dce5e {
        constructor(_0x434747, _0x5c2a3a) {
            var _0x527fa5 = _0x6027f5;
            this[_0x527fa5(0x212)] = _0x434747, this[_0x527fa5(0x20c)] = _0x5c2a3a;
        }
        [_0x6027f5(0xa38)](_0x4ce09e, _0x1ac3c8, _0x362348) {
            var _0x555e03 = _0x6027f5, _0x2ee001 = _0x4ce09e['x'], _0x50d04d = _0x4ce09e['y'], _0x2b32e3 = _0x4ce09e['z'], _0xb589b1 = _0x1ac3c8['elements'];
            _0x362348['x'] = Math[_0x555e03(0x1f0)](_0xb589b1[0x0] * _0x2ee001) + Math[_0x555e03(0x1f0)](_0xb589b1[0x4] * _0x50d04d) + Math[_0x555e03(0x1f0)](_0xb589b1[0x8] * _0x2b32e3), _0x362348['y'] = Math['abs'](_0xb589b1[0x1] * _0x2ee001) + Math[_0x555e03(0x1f0)](_0xb589b1[0x5] * _0x50d04d) + Math[_0x555e03(0x1f0)](_0xb589b1[0x9] * _0x2b32e3), _0x362348['z'] = Math[_0x555e03(0x1f0)](_0xb589b1[0x2] * _0x2ee001) + Math[_0x555e03(0x1f0)](_0xb589b1[0x6] * _0x50d04d) + Math['abs'](_0xb589b1[0xa] * _0x2b32e3);
        }
        ['getCorners'](_0x3b1b9d) {
            var _0x7936ba = _0x6027f5;
            _0x3b1b9d[_0x7936ba(0x205)] = 0x8;
            var _0x5b9ab4 = this[_0x7936ba(0x212)]['x'], _0x1d63a1 = this[_0x7936ba(0x212)]['y'], _0x2dbf3f = this[_0x7936ba(0x212)]['z'], _0x30cf7f = this[_0x7936ba(0x20c)]['x'], _0x186183 = this[_0x7936ba(0x20c)]['y'], _0x4b76bd = this[_0x7936ba(0x20c)]['z'];
            _0x3b1b9d[0x0] = new _0x3697cd(_0x5b9ab4, _0x186183, _0x4b76bd), _0x3b1b9d[0x1] = new _0x3697cd(_0x30cf7f, _0x186183, _0x4b76bd), _0x3b1b9d[0x2] = new _0x3697cd(_0x30cf7f, _0x1d63a1, _0x4b76bd), _0x3b1b9d[0x3] = new _0x3697cd(_0x5b9ab4, _0x1d63a1, _0x4b76bd), _0x3b1b9d[0x4] = new _0x3697cd(_0x5b9ab4, _0x186183, _0x2dbf3f), _0x3b1b9d[0x5] = new _0x3697cd(_0x30cf7f, _0x186183, _0x2dbf3f), _0x3b1b9d[0x6] = new _0x3697cd(_0x30cf7f, _0x1d63a1, _0x2dbf3f), _0x3b1b9d[0x7] = new _0x3697cd(_0x5b9ab4, _0x1d63a1, _0x2dbf3f);
        }
        ['getCenter'](_0x36a3b9) {
            var _0x223854 = _0x6027f5;
            _0x3697cd[_0x223854(0x207)](this['min'], this[_0x223854(0x20c)], _0x36a3b9), _0x3697cd[_0x223854(0x1f9)](_0x36a3b9, 0.5, _0x36a3b9);
        }
        ['getExtent'](_0x11a9b1) {
            var _0x3412a2 = _0x6027f5;
            _0x3697cd[_0x3412a2(0x28a)](this['max'], this[_0x3412a2(0x212)], _0x11a9b1), _0x3697cd[_0x3412a2(0x1f9)](_0x11a9b1, 0.5, _0x11a9b1);
        }
        [_0x6027f5(0xa39)](_0x3ba88c, _0xd0b1b5) {
            var _0x1eec40 = _0x6027f5;
            _0x3697cd[_0x1eec40(0x28a)](_0x3ba88c, _0xd0b1b5, this[_0x1eec40(0x212)]), _0x3697cd['add'](_0x3ba88c, _0xd0b1b5, this['max']);
        }
        ['tranform'](_0x15bbf0, _0x47f82e) {
            var _0x46768e = _0x6027f5, _0x2bb42e = _0x4dce5e[_0x46768e(0x59f)], _0x5beaef = _0x4dce5e[_0x46768e(0x3a1)];
            this[_0x46768e(0x81b)](_0x2bb42e), this[_0x46768e(0xa3a)](_0x5beaef), _0x3697cd[_0x46768e(0x216)](_0x2bb42e, _0x15bbf0, _0x2bb42e), this[_0x46768e(0xa38)](_0x5beaef, _0x15bbf0, _0x5beaef), _0x47f82e[_0x46768e(0xa39)](_0x2bb42e, _0x5beaef);
        }
        [_0x6027f5(0x219)]() {
            var _0x10ffc1 = _0x6027f5;
            this['min'][_0x10ffc1(0x219)](), this[_0x10ffc1(0x20c)][_0x10ffc1(0x219)]();
        }
        static [_0x6027f5(0xa3b)](_0x4fb6bc, _0xf156d5) {
            var _0x2a82f6 = _0x6027f5;
            if (null == _0x4fb6bc)
                throw new Error(_0x2a82f6(0xa3c));
            var _0x239730 = _0xf156d5[_0x2a82f6(0x212)], _0x2b21b4 = _0xf156d5['max'];
            _0x239730['x'] = Number[_0x2a82f6(0xa3d)], _0x239730['y'] = Number['MAX_VALUE'], _0x239730['z'] = Number['MAX_VALUE'], _0x2b21b4['x'] = -Number[_0x2a82f6(0xa3d)], _0x2b21b4['y'] = -Number[_0x2a82f6(0xa3d)], _0x2b21b4['z'] = -Number[_0x2a82f6(0xa3d)];
            for (var _0x42df4f = 0x0, _0x10b86c = _0x4fb6bc['length']; _0x42df4f < _0x10b86c; ++_0x42df4f)
                _0x3697cd[_0x2a82f6(0x212)](_0x239730, _0x4fb6bc[_0x42df4f], _0x239730), _0x3697cd[_0x2a82f6(0x20c)](_0x2b21b4, _0x4fb6bc[_0x42df4f], _0x2b21b4);
        }
        static [_0x6027f5(0xa3e)](_0x5d9777, _0x44912e, _0x5d1550) {
            var _0x1df8d2 = _0x6027f5;
            _0x3697cd[_0x1df8d2(0x212)](_0x5d9777[_0x1df8d2(0x212)], _0x44912e['min'], _0x5d1550[_0x1df8d2(0x212)]), _0x3697cd['max'](_0x5d9777['max'], _0x44912e[_0x1df8d2(0x20c)], _0x5d1550[_0x1df8d2(0x20c)]);
        }
        [_0x6027f5(0x1fc)](_0x1c8eec) {
            var _0x935430 = _0x6027f5, _0x2439d0 = _0x1c8eec;
            this[_0x935430(0x212)][_0x935430(0x1fc)](_0x2439d0[_0x935430(0x212)]), this[_0x935430(0x20c)]['cloneTo'](_0x2439d0['max']);
        }
        [_0x6027f5(0x1fd)]() {
            var _0xc5e517 = _0x6027f5, _0x177f91 = new _0x4dce5e(new _0x3697cd(), new _0x3697cd());
            return this[_0xc5e517(0x1fc)](_0x177f91), _0x177f91;
        }
    }
    _0x4dce5e[_0x6027f5(0x59f)] = new _0x3697cd(), _0x4dce5e[_0x6027f5(0x3a1)] = new _0x3697cd();
    class _0xf16d64 {
        constructor(_0x150ae8, _0x479b46) {
            var _0x2e1c02 = _0x6027f5;
            this[_0x2e1c02(0xa3f)] = 0x0, this[_0x2e1c02(0xa40)] = new _0x3697cd(), this[_0x2e1c02(0xa41)] = new _0x3697cd(), this['_boundBox'] = new _0x4dce5e(new _0x3697cd(), new _0x3697cd()), _0x150ae8[_0x2e1c02(0x1fc)](this[_0x2e1c02(0xa42)]['min']), _0x479b46['cloneTo'](this[_0x2e1c02(0xa42)]['max']), this[_0x2e1c02(0xa43)](_0xf16d64[_0x2e1c02(0xa44)] | _0xf16d64[_0x2e1c02(0xa45)], !0x0);
        }
        ['setMin'](_0x460110) {
            var _0xb9a468 = _0x6027f5, _0x1f2809 = this[_0xb9a468(0xa42)][_0xb9a468(0x212)];
            _0x460110 !== _0x1f2809 && _0x460110[_0xb9a468(0x1fc)](_0x1f2809), this[_0xb9a468(0xa43)](_0xf16d64['_UPDATE_CENTER'] | _0xf16d64['_UPDATE_EXTENT'], !0x0), this[_0xb9a468(0xa43)](_0xf16d64[_0xb9a468(0xa46)], !0x1);
        }
        [_0x6027f5(0xa47)]() {
            var _0x1c20ac = _0x6027f5, _0x2310a1 = this[_0x1c20ac(0xa42)][_0x1c20ac(0x212)];
            return this['_getUpdateFlag'](_0xf16d64['_UPDATE_MIN']) && (this[_0x1c20ac(0xa48)](this[_0x1c20ac(0x81b)](), this[_0x1c20ac(0xa3a)](), _0x2310a1), this[_0x1c20ac(0xa43)](_0xf16d64[_0x1c20ac(0xa46)], !0x1)), _0x2310a1;
        }
        [_0x6027f5(0xa49)](_0x32434a) {
            var _0x147ab6 = _0x6027f5, _0xa6e62b = this['_boundBox'][_0x147ab6(0x20c)];
            _0x32434a !== _0xa6e62b && _0x32434a['cloneTo'](_0xa6e62b), this[_0x147ab6(0xa43)](_0xf16d64['_UPDATE_CENTER'] | _0xf16d64[_0x147ab6(0xa45)], !0x0), this[_0x147ab6(0xa43)](_0xf16d64['_UPDATE_MAX'], !0x1);
        }
        ['getMax']() {
            var _0x424e24 = _0x6027f5, _0x64f08f = this['_boundBox']['max'];
            return this['_getUpdateFlag'](_0xf16d64[_0x424e24(0xa4a)]) && (this[_0x424e24(0xa4b)](this[_0x424e24(0x81b)](), this[_0x424e24(0xa3a)](), _0x64f08f), this[_0x424e24(0xa43)](_0xf16d64[_0x424e24(0xa4a)], !0x1)), _0x64f08f;
        }
        [_0x6027f5(0xa4c)](_0x20d601) {
            var _0xcce1e4 = _0x6027f5;
            _0x20d601 !== this[_0xcce1e4(0xa40)] && _0x20d601[_0xcce1e4(0x1fc)](this[_0xcce1e4(0xa40)]), this['_setUpdateFlag'](_0xf16d64[_0xcce1e4(0xa46)] | _0xf16d64[_0xcce1e4(0xa4a)], !0x0), this[_0xcce1e4(0xa43)](_0xf16d64[_0xcce1e4(0xa44)], !0x1);
        }
        [_0x6027f5(0x81b)]() {
            var _0x5234d0 = _0x6027f5;
            return this[_0x5234d0(0xa4d)](_0xf16d64[_0x5234d0(0xa44)]) && (this[_0x5234d0(0xa4e)](this[_0x5234d0(0xa47)](), this[_0x5234d0(0xa4f)](), this[_0x5234d0(0xa40)]), this['_setUpdateFlag'](_0xf16d64['_UPDATE_CENTER'], !0x1)), this[_0x5234d0(0xa40)];
        }
        [_0x6027f5(0xa50)](_0x5b99f1) {
            var _0x49c360 = _0x6027f5;
            _0x5b99f1 !== this[_0x49c360(0xa41)] && _0x5b99f1[_0x49c360(0x1fc)](this['_extent']), this['_setUpdateFlag'](_0xf16d64[_0x49c360(0xa46)] | _0xf16d64[_0x49c360(0xa4a)], !0x0), this[_0x49c360(0xa43)](_0xf16d64[_0x49c360(0xa45)], !0x1);
        }
        [_0x6027f5(0xa3a)]() {
            var _0x37e03d = _0x6027f5;
            return this[_0x37e03d(0xa4d)](_0xf16d64['_UPDATE_EXTENT']) && (this[_0x37e03d(0xa51)](this[_0x37e03d(0xa47)](), this[_0x37e03d(0xa4f)](), this[_0x37e03d(0xa41)]), this[_0x37e03d(0xa43)](_0xf16d64[_0x37e03d(0xa45)], !0x1)), this['_extent'];
        }
        ['_getUpdateFlag'](_0x2d554e) {
            return 0x0 != (this['_updateFlag'] & _0x2d554e);
        }
        [_0x6027f5(0xa43)](_0x314902, _0x4cb5b2) {
            var _0x328032 = _0x6027f5;
            _0x4cb5b2 ? this[_0x328032(0xa3f)] |= _0x314902 : this[_0x328032(0xa3f)] &= ~_0x314902;
        }
        [_0x6027f5(0xa4e)](_0x24dae5, _0x4ed31a, _0x5c04b) {
            var _0x37f236 = _0x6027f5;
            _0x3697cd[_0x37f236(0x207)](_0x24dae5, _0x4ed31a, _0x5c04b), _0x3697cd[_0x37f236(0x1f9)](_0x5c04b, 0.5, _0x5c04b);
        }
        [_0x6027f5(0xa51)](_0x142935, _0x5139a5, _0x2c56bc) {
            var _0xf3da1d = _0x6027f5;
            _0x3697cd['subtract'](_0x5139a5, _0x142935, _0x2c56bc), _0x3697cd[_0xf3da1d(0x1f9)](_0x2c56bc, 0.5, _0x2c56bc);
        }
        [_0x6027f5(0xa48)](_0x2b585e, _0xe7bfc6, _0x3aab31) {
            var _0x206019 = _0x6027f5;
            _0x3697cd[_0x206019(0x28a)](_0x2b585e, _0xe7bfc6, _0x3aab31);
        }
        [_0x6027f5(0xa4b)](_0x2c647e, _0x470785, _0x33feb7) {
            var _0x4481fa = _0x6027f5;
            _0x3697cd[_0x4481fa(0x207)](_0x2c647e, _0x470785, _0x33feb7);
        }
        [_0x6027f5(0xa38)](_0x34e182, _0x1cd3d3, _0x33879a) {
            var _0xa50106 = _0x6027f5, _0x2abc8f = _0x34e182['x'], _0x4de25a = _0x34e182['y'], _0xb03f74 = _0x34e182['z'], _0x164f99 = _0x1cd3d3[_0xa50106(0x1fe)];
            _0x33879a['x'] = Math[_0xa50106(0x1f0)](_0x164f99[0x0] * _0x2abc8f) + Math[_0xa50106(0x1f0)](_0x164f99[0x4] * _0x4de25a) + Math[_0xa50106(0x1f0)](_0x164f99[0x8] * _0xb03f74), _0x33879a['y'] = Math[_0xa50106(0x1f0)](_0x164f99[0x1] * _0x2abc8f) + Math[_0xa50106(0x1f0)](_0x164f99[0x5] * _0x4de25a) + Math['abs'](_0x164f99[0x9] * _0xb03f74), _0x33879a['z'] = Math['abs'](_0x164f99[0x2] * _0x2abc8f) + Math[_0xa50106(0x1f0)](_0x164f99[0x6] * _0x4de25a) + Math[_0xa50106(0x1f0)](_0x164f99[0xa] * _0xb03f74);
        }
        ['_tranform'](_0x33209f, _0x502d4a) {
            var _0x784024 = _0x6027f5, _0x9ba4ec = _0x502d4a[_0x784024(0xa40)], _0x1bd18b = _0x502d4a['_extent'];
            _0x3697cd[_0x784024(0x216)](this[_0x784024(0x81b)](), _0x33209f, _0x9ba4ec), this[_0x784024(0xa38)](this[_0x784024(0xa3a)](), _0x33209f, _0x1bd18b), _0x502d4a[_0x784024(0xa42)][_0x784024(0xa39)](_0x9ba4ec, _0x1bd18b), _0x502d4a[_0x784024(0xa3f)] = 0x0;
        }
        ['_getBoundBox']() {
            var _0x112871 = _0x6027f5;
            if (this[_0x112871(0xa3f)] & _0xf16d64[_0x112871(0xa46)]) {
                var _0x30ea19 = this['_boundBox'][_0x112871(0x212)];
                this['_getMin'](this[_0x112871(0x81b)](), this[_0x112871(0xa3a)](), _0x30ea19), this[_0x112871(0xa43)](_0xf16d64[_0x112871(0xa46)], !0x1);
            }
            if (this[_0x112871(0xa3f)] & _0xf16d64[_0x112871(0xa4a)]) {
                var _0x465698 = this[_0x112871(0xa42)]['max'];
                this[_0x112871(0xa4b)](this[_0x112871(0x81b)](), this[_0x112871(0xa3a)](), _0x465698), this[_0x112871(0xa43)](_0xf16d64['_UPDATE_MAX'], !0x1);
            }
            return this[_0x112871(0xa42)];
        }
        ['calculateBoundsintersection'](_0x42522f) {
            var _0x39969e = _0x6027f5, _0x2b681a = this['getMax'](), _0x4457b9 = this['getMin'](), _0x525a78 = _0x42522f[_0x39969e(0xa4f)](), _0x377336 = _0x42522f[_0x39969e(0xa47)](), _0x5082aa = _0xf16d64[_0x39969e(0xa52)], _0x55a8dd = _0xf16d64['TEMP_VECTOR3_MAX1'], _0x3b13c0 = this['getExtent'](), _0x153144 = _0x42522f[_0x39969e(0xa3a)]();
            return _0x5082aa['setValue'](Math[_0x39969e(0x20c)](_0x2b681a['x'], _0x525a78['x']) - Math[_0x39969e(0x212)](_0x4457b9['x'], _0x377336['x']), Math['max'](_0x2b681a['y'], _0x525a78['y']) - Math[_0x39969e(0x212)](_0x4457b9['y'], _0x377336['y']), Math['max'](_0x2b681a['z'], _0x525a78['z']) - Math['min'](_0x4457b9['z'], _0x377336['z'])), _0x55a8dd[_0x39969e(0x1f8)](0x2 * (_0x3b13c0['x'] + _0x153144['x']), 0x2 * (_0x3b13c0['y'] + _0x153144['y']), 0x2 * (_0x3b13c0['z'] + _0x153144['z'])), _0x5082aa['x'] > _0x55a8dd['x'] || _0x5082aa['y'] > _0x55a8dd['y'] || _0x5082aa['z'] > _0x55a8dd['z'] ? -0x1 : (_0x55a8dd['x'] - _0x5082aa['x']) * (_0x55a8dd['y'] - _0x5082aa['y']) * (_0x55a8dd['z'] - _0x5082aa['z']);
        }
        ['cloneTo'](_0x3773eb) {
            var _0x4c2740 = _0x6027f5, _0xe13d3d = _0x3773eb;
            this['getMin']()[_0x4c2740(0x1fc)](_0xe13d3d[_0x4c2740(0xa42)][_0x4c2740(0x212)]), this[_0x4c2740(0xa4f)]()[_0x4c2740(0x1fc)](_0xe13d3d['_boundBox']['max']), this[_0x4c2740(0x81b)]()[_0x4c2740(0x1fc)](_0xe13d3d[_0x4c2740(0xa40)]), this[_0x4c2740(0xa3a)]()[_0x4c2740(0x1fc)](_0xe13d3d['_extent']), _0xe13d3d[_0x4c2740(0xa3f)] = 0x0;
        }
        ['clone']() {
            var _0x461f8d = _0x6027f5, _0x273159 = new _0xf16d64(new _0x3697cd(), new _0x3697cd());
            return this[_0x461f8d(0x1fc)](_0x273159), _0x273159;
        }
    }
    _0xf16d64[_0x6027f5(0xa46)] = 0x1, _0xf16d64[_0x6027f5(0xa4a)] = 0x2, _0xf16d64[_0x6027f5(0xa44)] = 0x4, _0xf16d64[_0x6027f5(0xa45)] = 0x8, _0xf16d64[_0x6027f5(0xa52)] = new _0x3697cd(), _0xf16d64[_0x6027f5(0xa53)] = new _0x3697cd();
    class _0x2be7a6 {
        constructor() {
            var _0x5a2064 = _0x6027f5;
            this[_0x5a2064(0xa54)] = !0x1;
        }
        get [_0x6027f5(0x5cf)]() {
            var _0x185301 = _0x6027f5;
            return this[_0x185301(0xa54)];
        }
        [_0x6027f5(0xa55)]() {
            var _0x20bd02 = _0x6027f5;
            throw _0x20bd02(0xa56);
        }
        [_0x6027f5(0x5e7)](_0x30774f) {
            return !0x0;
        }
        [_0x6027f5(0x5e8)](_0x12896b) {
            var _0x1f6e39 = _0x6027f5;
            throw _0x1f6e39(0xa56);
        }
        [_0x6027f5(0x364)]() {
            var _0xa37257 = _0x6027f5;
            this[_0xa37257(0xa54)] || (this[_0xa37257(0xa54)] = !0x0);
        }
    }
    _0x2be7a6['_typeCounter'] = 0x0;
    class _0x551dd1 {
        constructor() {
        }
        static get [_0x6027f5(0x456)]() {
            var _0x44ad00 = _0x6027f5;
            return _0x551dd1[_0x44ad00(0x455)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x138df5 = _0x6027f5;
            _0x551dd1[_0x138df5(0x455)] = new _0x4b2139(0x1c, [
                new _0x25649b(0x0, _0x53b5cc[_0x138df5(0x46b)], _0x73b54a[_0x138df5(0x615)]),
                new _0x25649b(0xc, _0x53b5cc['Vector4'], _0x73b54a[_0x138df5(0x60d)])
            ]);
        }
        get [_0x6027f5(0x456)]() {
            var _0x3d1329 = _0x6027f5;
            return _0x551dd1[_0x3d1329(0x455)];
        }
    }
    class _0xdddb6a extends _0x2be7a6 {
        constructor(_0x2f713d, _0x1370be) {
            var _0x38f6d4 = _0x6027f5;
            super(), this['_floatCountPerVertices'] = 0x7, this['_minUpdate'] = Number['MAX_VALUE'], this[_0x38f6d4(0xa57)] = Number['MIN_VALUE'], this[_0x38f6d4(0x4f8)] = new _0x5b1dae(), this[_0x38f6d4(0xa58)] = new Float32Array(0x6), this[_0x38f6d4(0xa59)] = !0x1, this[_0x38f6d4(0xa5a)] = 0x0, this[_0x38f6d4(0xa5b)] = 0x0;
            var _0x5f200d = 0x2 * _0x1370be;
            this[_0x38f6d4(0x3dc)] = _0x2f713d, this[_0x38f6d4(0xa5a)] = _0x1370be, this['_vertices'] = new Float32Array(_0x5f200d * this[_0x38f6d4(0xa5c)]), this['_vertexBuffer'] = new _0x2ce777(_0x551dd1[_0x38f6d4(0x456)]['vertexStride'] * _0x5f200d, _0x387b86[_0x38f6d4(0x303)][_0x38f6d4(0x304)]['STATIC_DRAW'], !0x1), this['_vertexBuffer'][_0x38f6d4(0x456)] = _0x551dd1[_0x38f6d4(0x456)], this['_bufferState'][_0x38f6d4(0x452)](), this[_0x38f6d4(0x4f8)][_0x38f6d4(0x4eb)](this[_0x38f6d4(0x4f6)]), this[_0x38f6d4(0x4f8)][_0x38f6d4(0x4f9)]();
            var _0x53eed9 = _0xdddb6a[_0x38f6d4(0x48f)], _0x83c2d8 = _0xdddb6a[_0x38f6d4(0x481)];
            _0x53eed9[_0x38f6d4(0x1f8)](Number[_0x38f6d4(0xa3d)], Number['MAX_VALUE'], Number[_0x38f6d4(0xa3d)]), _0x83c2d8[_0x38f6d4(0x1f8)](-Number[_0x38f6d4(0xa3d)], -Number[_0x38f6d4(0xa3d)], -Number[_0x38f6d4(0xa3d)]), this[_0x38f6d4(0xa5d)] = new _0xf16d64(_0x53eed9, _0x83c2d8);
        }
        [_0x6027f5(0xa55)]() {
            var _0x5480c7 = _0x6027f5;
            return _0xdddb6a[_0x5480c7(0xa5e)];
        }
        [_0x6027f5(0xa5f)](_0x428d9e) {
            var _0x227104 = _0x6027f5, _0xb98f0a = 0x2 * _0x428d9e, _0x25199e = this[_0x227104(0x4f7)];
            this[_0x227104(0x4f6)][_0x227104(0x364)](), this['_maxLineCount'] = _0x428d9e;
            var _0x459b6e = _0xb98f0a * this[_0x227104(0xa5c)];
            this[_0x227104(0x4f7)] = new Float32Array(_0x459b6e), this['_vertexBuffer'] = new _0x2ce777(_0x551dd1['vertexDeclaration'][_0x227104(0x4e5)] * _0xb98f0a, _0x387b86[_0x227104(0x303)][_0x227104(0x304)]['STATIC_DRAW'], !0x1), this[_0x227104(0x4f6)][_0x227104(0x456)] = _0x551dd1['vertexDeclaration'], _0x459b6e < _0x25199e['length'] ? (this['_vertices'][_0x227104(0x31f)](new Float32Array(_0x25199e[_0x227104(0x454)], 0x0, _0x459b6e)), this[_0x227104(0x4f6)][_0x227104(0x45d)](this[_0x227104(0x4f7)][_0x227104(0x454)], 0x0, 0x0, 0x4 * _0x459b6e)) : (this[_0x227104(0x4f7)]['set'](_0x25199e), this['_vertexBuffer'][_0x227104(0x45d)](this['_vertices'][_0x227104(0x454)], 0x0, 0x0, 0x4 * _0x25199e[_0x227104(0x205)])), this[_0x227104(0x4f8)][_0x227104(0x452)](), this[_0x227104(0x4f8)][_0x227104(0x4eb)](this[_0x227104(0x4f6)]), this[_0x227104(0x4f8)]['unBind']();
        }
        [_0x6027f5(0xa60)](_0xad7712, _0xbffaae, _0x22ccc2, _0x3502a5, _0x6fd50c) {
            var _0x11337b = _0x6027f5;
            _0xbffaae && (this['_vertices'][_0xad7712 + 0x0] = _0xbffaae['x'], this[_0x11337b(0x4f7)][_0xad7712 + 0x1] = _0xbffaae['y'], this['_vertices'][_0xad7712 + 0x2] = _0xbffaae['z']), _0x3502a5 && (this[_0x11337b(0x4f7)][_0xad7712 + 0x3] = _0x3502a5['r'], this[_0x11337b(0x4f7)][_0xad7712 + 0x4] = _0x3502a5['g'], this[_0x11337b(0x4f7)][_0xad7712 + 0x5] = _0x3502a5['b'], this[_0x11337b(0x4f7)][_0xad7712 + 0x6] = _0x3502a5['a']), _0x22ccc2 && (this[_0x11337b(0x4f7)][_0xad7712 + 0x7] = _0x22ccc2['x'], this[_0x11337b(0x4f7)][_0xad7712 + 0x8] = _0x22ccc2['y'], this[_0x11337b(0x4f7)][_0xad7712 + 0x9] = _0x22ccc2['z']), _0x6fd50c && (this[_0x11337b(0x4f7)][_0xad7712 + 0xa] = _0x6fd50c['r'], this[_0x11337b(0x4f7)][_0xad7712 + 0xb] = _0x6fd50c['g'], this[_0x11337b(0x4f7)][_0xad7712 + 0xc] = _0x6fd50c['b'], this[_0x11337b(0x4f7)][_0xad7712 + 0xd] = _0x6fd50c['a']), this[_0x11337b(0xa61)] = Math['min'](this[_0x11337b(0xa61)], _0xad7712), this[_0x11337b(0xa57)] = Math[_0x11337b(0x20c)](this[_0x11337b(0xa57)], _0xad7712 + 0x2 * this[_0x11337b(0xa5c)]);
            var _0x2f1147 = this[_0x11337b(0xa5d)], _0x22f1f4 = this['_floatBound'], _0x5848aa = _0x2f1147['getMin'](), _0x6b5885 = _0x2f1147[_0x11337b(0xa4f)]();
            _0x3697cd[_0x11337b(0x212)](_0x5848aa, _0xbffaae, _0x5848aa), _0x3697cd[_0x11337b(0x212)](_0x5848aa, _0x22ccc2, _0x5848aa), _0x3697cd['max'](_0x6b5885, _0xbffaae, _0x6b5885), _0x3697cd['max'](_0x6b5885, _0x22ccc2, _0x6b5885), _0x2f1147[_0x11337b(0xa62)](_0x5848aa), _0x2f1147['setMax'](_0x6b5885), _0x22f1f4[0x0] = _0x5848aa['x'], _0x22f1f4[0x1] = _0x5848aa['y'], _0x22f1f4[0x2] = _0x5848aa['z'], _0x22f1f4[0x3] = _0x6b5885['x'], _0x22f1f4[0x4] = _0x6b5885['y'], _0x22f1f4[0x5] = _0x6b5885['z'];
        }
        [_0x6027f5(0xa63)]() {
            var _0x1126d9 = _0x6027f5;
            if (this[_0x1126d9(0xa59)]) {
                var _0x2649c2 = this[_0x1126d9(0x4f7)], _0x35109d = _0xdddb6a[_0x1126d9(0x48f)], _0x5787ca = _0xdddb6a['_tempVector1'];
                _0x35109d['setValue'](Number['MAX_VALUE'], Number[_0x1126d9(0xa3d)], Number[_0x1126d9(0xa3d)]), _0x5787ca['setValue'](-Number[_0x1126d9(0xa3d)], -Number[_0x1126d9(0xa3d)], -Number['MAX_VALUE']);
                for (var _0x5cd41d = 0x0; _0x5cd41d < 0x2 * this[_0x1126d9(0xa5b)]; ++_0x5cd41d) {
                    var _0x382f6d = this[_0x1126d9(0xa5c)] * _0x5cd41d, _0x1f4b3f = _0x2649c2[_0x382f6d + 0x0], _0x4ff3ab = _0x2649c2[_0x382f6d + 0x1], _0x2930a7 = _0x2649c2[_0x382f6d + 0x2];
                    _0x35109d['x'] = Math[_0x1126d9(0x212)](_0x1f4b3f, _0x35109d['x']), _0x35109d['y'] = Math['min'](_0x4ff3ab, _0x35109d['y']), _0x35109d['z'] = Math[_0x1126d9(0x212)](_0x2930a7, _0x35109d['z']), _0x5787ca['x'] = Math[_0x1126d9(0x20c)](_0x1f4b3f, _0x5787ca['x']), _0x5787ca['y'] = Math[_0x1126d9(0x20c)](_0x4ff3ab, _0x5787ca['y']), _0x5787ca['z'] = Math['max'](_0x2930a7, _0x5787ca['z']);
                }
                this[_0x1126d9(0xa5d)][_0x1126d9(0xa62)](_0x35109d), this['_bounds'][_0x1126d9(0xa49)](_0x5787ca);
                var _0x4f50b = this[_0x1126d9(0xa58)];
                _0x4f50b[0x0] = _0x35109d['x'], _0x4f50b[0x1] = _0x35109d['y'], _0x4f50b[0x2] = _0x35109d['z'], _0x4f50b[0x3] = _0x5787ca['x'], _0x4f50b[0x4] = _0x5787ca['y'], _0x4f50b[0x5] = _0x5787ca['z'], this['_calculateBound'] = !0x1;
            }
        }
        [_0x6027f5(0xa64)](_0x2bfc23) {
            var _0x122110 = _0x6027f5, _0x5c51c9 = 0x2 * this['_floatCountPerVertices'], _0x531412 = _0x2bfc23 + 0x1, _0xdecc2b = _0x2bfc23 * _0x5c51c9, _0x1460b4 = this[_0x122110(0x4f7)], _0x5951cc = new Float32Array(_0x1460b4['buffer'], _0x531412 * _0x5c51c9 * 0x4, (this[_0x122110(0xa5b)] - _0x531412) * _0x5c51c9);
            _0x1460b4[_0x122110(0x31f)](_0x5951cc, _0xdecc2b), this['_minUpdate'] = Math[_0x122110(0x212)](this['_minUpdate'], _0xdecc2b), this['_maxUpdate'] = Math[_0x122110(0x20c)](this['_maxUpdate'], _0xdecc2b + _0x5951cc[_0x122110(0x205)]), this[_0x122110(0xa5b)]--;
            var _0x5069dc = this[_0x122110(0xa58)], _0x2ec26 = _0x1460b4[_0xdecc2b], _0x51dbec = _0x1460b4[_0xdecc2b + 0x1], _0x56d456 = _0x1460b4[_0xdecc2b + 0x2], _0x5768a2 = _0x1460b4[_0xdecc2b + 0x7], _0x708e3 = _0x1460b4[_0xdecc2b + 0x8], _0x4aba8d = _0x1460b4[_0xdecc2b + 0x9], _0x242a76 = _0x5069dc[0x0], _0x13a40f = _0x5069dc[0x1], _0x56799c = _0x5069dc[0x2], _0x392c9e = _0x5069dc[0x3], _0x738c1 = _0x5069dc[0x4], _0x4de080 = _0x5069dc[0x5];
            _0x2ec26 !== _0x242a76 && _0x2ec26 !== _0x392c9e && _0x51dbec !== _0x13a40f && _0x51dbec !== _0x738c1 && _0x56d456 !== _0x56799c && _0x56d456 !== _0x4de080 && _0x5768a2 !== _0x242a76 && _0x5768a2 !== _0x392c9e && _0x708e3 !== _0x13a40f && _0x708e3 !== _0x738c1 && _0x4aba8d !== _0x56799c && _0x4aba8d !== _0x4de080 || (this[_0x122110(0xa59)] = !0x0);
        }
        [_0x6027f5(0xa65)](_0x591aa3, _0x44e45b, _0x7786f0, _0x31cfdf, _0x479fc3) {
            var _0x15d5d7 = _0x6027f5, _0x41dfe4 = 0x2 * this[_0x15d5d7(0xa5c)];
            this[_0x15d5d7(0xa60)](_0x591aa3 * _0x41dfe4, _0x44e45b, _0x7786f0, _0x31cfdf, _0x479fc3);
        }
        ['_updateLineDatas'](_0x12529b, _0x304bb3) {
            for (var _0x11ccfd = 0x2 * this['_floatCountPerVertices'], _0x4b6bf6 = _0x304bb3['length'], _0x52ed18 = 0x0; _0x52ed18 < _0x4b6bf6; _0x52ed18++) {
                var _0xe991f2 = _0x304bb3[_0x52ed18];
                this['_updateLineVertices']((_0x12529b + _0x52ed18) * _0x11ccfd, _0xe991f2['startPosition'], _0xe991f2['endPosition'], _0xe991f2['startColor'], _0xe991f2['endColor']);
            }
        }
        [_0x6027f5(0xa66)](_0x2a9353, _0x42a144) {
            var _0x46a0f8 = _0x6027f5, _0x1fe87b = _0x42a144[_0x46a0f8(0xa67)], _0x3c567b = _0x42a144['startColor'], _0x3b913b = _0x42a144[_0x46a0f8(0xa68)], _0x184313 = _0x42a144['endColor'], _0x12687d = this['_vertices'], _0x481369 = _0x2a9353 * this[_0x46a0f8(0xa5c)] * 0x2;
            _0x1fe87b['x'] = _0x12687d[_0x481369 + 0x0], _0x1fe87b['y'] = _0x12687d[_0x481369 + 0x1], _0x1fe87b['z'] = _0x12687d[_0x481369 + 0x2], _0x3c567b['r'] = _0x12687d[_0x481369 + 0x3], _0x3c567b['g'] = _0x12687d[_0x481369 + 0x4], _0x3c567b['b'] = _0x12687d[_0x481369 + 0x5], _0x3c567b['a'] = _0x12687d[_0x481369 + 0x6], _0x3b913b['x'] = _0x12687d[_0x481369 + 0x7], _0x3b913b['y'] = _0x12687d[_0x481369 + 0x8], _0x3b913b['z'] = _0x12687d[_0x481369 + 0x9], _0x184313['r'] = _0x12687d[_0x481369 + 0xa], _0x184313['g'] = _0x12687d[_0x481369 + 0xb], _0x184313['b'] = _0x12687d[_0x481369 + 0xc], _0x184313['a'] = _0x12687d[_0x481369 + 0xd];
        }
        [_0x6027f5(0x5e7)](_0x5e37ae) {
            return !0x0;
        }
        [_0x6027f5(0x5e8)](_0x2d8ac0) {
            var _0x2b0b46 = _0x6027f5;
            if (this[_0x2b0b46(0xa61)] !== Number[_0x2b0b46(0xa3d)] && this[_0x2b0b46(0xa57)] !== Number['MIN_VALUE'] && (this['_vertexBuffer'][_0x2b0b46(0x45d)](this[_0x2b0b46(0x4f7)]['buffer'], 0x4 * this['_minUpdate'], 0x4 * this[_0x2b0b46(0xa61)], 0x4 * (this[_0x2b0b46(0xa57)] - this[_0x2b0b46(0xa61)])), this['_minUpdate'] = Number[_0x2b0b46(0xa3d)], this[_0x2b0b46(0xa57)] = Number['MIN_VALUE']), this[_0x2b0b46(0xa5b)] > 0x0) {
                this[_0x2b0b46(0x4f8)][_0x2b0b46(0x452)]();
                var _0x1b3498 = _0x387b86[_0x2b0b46(0x303)][_0x2b0b46(0x304)];
                _0x1b3498[_0x2b0b46(0x500)](_0x1b3498[_0x2b0b46(0xa69)], 0x0, 0x2 * this[_0x2b0b46(0xa5b)]), _0x387b86[_0x2b0b46(0x4dc)][_0x2b0b46(0x502)]++;
            }
        }
        [_0x6027f5(0x364)]() {
            var _0x3fa430 = _0x6027f5;
            this[_0x3fa430(0xa54)] || (super[_0x3fa430(0x364)](), this[_0x3fa430(0x4f8)][_0x3fa430(0x364)](), this[_0x3fa430(0x4f6)][_0x3fa430(0x364)](), this[_0x3fa430(0x4f8)] = null, this[_0x3fa430(0x4f6)] = null, this[_0x3fa430(0x4f7)] = null);
        }
    }
    _0xdddb6a[_0x6027f5(0x48f)] = new _0x3697cd(), _0xdddb6a['_tempVector1'] = new _0x3697cd(), _0xdddb6a[_0x6027f5(0xa5e)] = _0x2be7a6[_0x6027f5(0xa6a)]++;
    class _0x221092 extends _0x44a154 {
        constructor(_0xa3955f) {
            super(_0xa3955f);
        }
        static ['__init__']() {
            var _0x3f9d44 = _0x6027f5;
            _0x221092[_0x3f9d44(0xa6b)] = _0x3a9f31['getDefineByName']('RECEIVESHADOW'), _0x221092[_0x3f9d44(0xa6c)] = _0x3a9f31[_0x3f9d44(0x510)](_0x3f9d44(0xa6d)), _0x221092['SHADERDEFINE_LIGHTMAP_DIRECTIONAL'] = _0x3a9f31['getDefineByName'](_0x3f9d44(0xa6e));
        }
        ['_onInActive']() {
            var _0x25ef1e = _0x6027f5;
            super[_0x25ef1e(0x8f8)](), this[_0x25ef1e(0x3b0)]['_removeRenderObject'](this[_0x25ef1e(0x5e8)]);
        }
        [_0x6027f5(0x8f7)]() {
            var _0x5c5f06 = _0x6027f5;
            super[_0x5c5f06(0x8f7)](), this[_0x5c5f06(0x3b0)][_0x5c5f06(0xa6f)](this[_0x5c5f06(0x5e8)]);
        }
        [_0x6027f5(0xa70)]() {
            var _0x37d949 = _0x6027f5;
            if (super[_0x37d949(0xa70)](), _0x525782[_0x37d949(0x227)][_0x37d949(0x242)]) {
                var _0x39b9ab = this[_0x37d949(0x3b0)], _0x330415 = new _0x5b8e4e();
                _0x39b9ab[_0x37d949(0xa71)](this['id'], _0x330415), _0x39b9ab[_0x37d949(0xa72)][this['id']] = this, this[_0x37d949(0x5e8)][_0x37d949(0x4e2)][_0x37d949(0x4a8)](_0x221092[_0x37d949(0xa73)], _0x330415);
            }
        }
        [_0x6027f5(0xa74)]() {
        }
        [_0x6027f5(0xa75)](_0x51ca4e) {
            var _0x38ad6e = _0x6027f5;
            super[_0x38ad6e(0xa75)](_0x51ca4e), this[_0x38ad6e(0x5e8)][_0x38ad6e(0xa75)](_0x51ca4e);
        }
        ['_setUnBelongScene']() {
            var _0x2adf7c = _0x6027f5;
            this[_0x2adf7c(0x5cf)] || (this[_0x2adf7c(0x5e8)]['_shaderValues'][_0x2adf7c(0x49b)](_0x221092[_0x2adf7c(0xa6c)]), this['_render'][_0x2adf7c(0xa76)](), super[_0x2adf7c(0xa76)]());
        }
        [_0x6027f5(0x5c7)](_0x2e9e22) {
            var _0x170cad = _0x6027f5;
            if (this[_0x170cad(0x3ab)]) {
                var _0x1ae0d8 = this['_hierarchyAnimator']['_renderableSprites'];
                _0x1ae0d8[_0x170cad(0x33a)](_0x1ae0d8['indexOf'](this), 0x1);
            }
            _0x2e9e22 && _0x2e9e22[_0x170cad(0x380)][_0x170cad(0x2ac)](this), super[_0x170cad(0x5c7)](_0x2e9e22);
        }
        [_0x6027f5(0x364)](_0x390b73 = !0x0) {
            var _0x4397b3 = _0x6027f5;
            super[_0x4397b3(0x364)](_0x390b73), this[_0x4397b3(0x5e8)][_0x4397b3(0xa77)](), this[_0x4397b3(0x5e8)] = null;
        }
        [_0x6027f5(0x3f8)]() {
            var _0x47e8dc = _0x6027f5;
            return new _0x221092(this[_0x47e8dc(0x2b7)]);
        }
    }
    _0x221092[_0x6027f5(0xa78)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xa79)), _0x221092[_0x6027f5(0xa6d)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xa7a)), _0x221092[_0x6027f5(0xa7b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xa7c)), _0x221092['PICKCOLOR'] = _0x3a9f31[_0x6027f5(0x553)]('u_PickColor'), _0x221092[_0x6027f5(0xa7d)] = _0x3a9f31[_0x6027f5(0x553)]('u_ReflectTexture'), _0x221092['REFLECTIONCUBE_HDR_PARAMS'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xa7e)), _0x221092[_0x6027f5(0xa7f)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xa80)), _0x221092['REFLECTIONCUBE_PROBEBOXMAX'] = _0x3a9f31[_0x6027f5(0x553)]('u_SpecCubeBoxMax'), _0x221092[_0x6027f5(0xa81)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xa82));
    class _0x4f55ba {
        constructor() {
            var _0x16f470 = _0x6027f5;
            this[_0x16f470(0x376)] = -0x1, this['indexInList'] = -0x1, this[_0x16f470(0xa83)] = !0x1;
        }
    }
    class _0x4da149 extends _0x2be7a6 {
        constructor() {
            var _0x212bc9 = _0x6027f5;
            super(), this[_0x212bc9(0xa84)] = new Float32Array(0x10 * _0x4da149[_0x212bc9(0x61e)]), this['instanceSimpleAnimatorData'] = new Float32Array(0x4 * _0x4da149[_0x212bc9(0x61e)]);
            var _0x440119 = _0x387b86[_0x212bc9(0x303)][_0x212bc9(0x304)];
            this['instanceWorldMatrixBuffer'] = new _0x2ce777(0x4 * this[_0x212bc9(0xa84)][_0x212bc9(0x205)], _0x440119['DYNAMIC_DRAW']), this[_0x212bc9(0xa85)][_0x212bc9(0x456)] = _0x73b54a[_0x212bc9(0x603)], this[_0x212bc9(0xa86)] = new _0x2ce777(0x4 * this[_0x212bc9(0xa87)][_0x212bc9(0x205)], _0x440119[_0x212bc9(0x620)]), this['instanceSimpleAnimatorBuffer'][_0x212bc9(0x456)] = _0x73b54a[_0x212bc9(0xa88)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x1d74f8 = _0x6027f5;
            _0x4da149[_0x1d74f8(0x304)] = new _0x4da149();
        }
        ['_render'](_0x519d2d) {
            var _0x36c0d4 = _0x6027f5, _0x12065b = _0x387b86[_0x36c0d4(0x303)][_0x36c0d4(0x304)], _0x591285 = _0x519d2d['renderElement'], _0x17bdc9 = _0x591285[_0x36c0d4(0xa89)], _0x1a345a = _0x591285[_0x36c0d4(0xa8a)][_0x36c0d4(0x205)], _0x53aeff = _0x17bdc9[_0x36c0d4(0x62b)];
            _0x17bdc9[_0x36c0d4(0x5d9)][_0x36c0d4(0x626)][_0x36c0d4(0x452)](), _0x387b86[_0x36c0d4(0x303)][_0x36c0d4(0x4f1)][_0x36c0d4(0x62c)](_0x12065b[_0x36c0d4(0x506)], _0x53aeff, _0x12065b[_0x36c0d4(0xa0c)], 0x2 * _0x17bdc9[_0x36c0d4(0x62d)], _0x1a345a), _0x387b86['Stat'][_0x36c0d4(0x502)]++, _0x387b86[_0x36c0d4(0x4dc)][_0x36c0d4(0xa8b)] += _0x1a345a - 0x1, _0x387b86['Stat'][_0x36c0d4(0x62e)] += _0x53aeff * _0x1a345a / 0x3;
        }
    }
    _0x4da149[_0x6027f5(0x61e)] = 0x400;
    class _0x50feff {
        constructor() {
            var _0x15f418 = _0x6027f5;
            this[_0x15f418(0x5f8)] = null, this[_0x15f418(0x5f4)] = _0x50feff[_0x15f418(0x5fe)];
        }
        [_0x6027f5(0x5e5)]() {
            var _0x1a07d9 = _0x6027f5;
            return this[_0x1a07d9(0x3d5)][_0x1a07d9(0xa8c)];
        }
        [_0x6027f5(0xa8d)](_0xfcebce) {
            var _0x500b42 = _0x6027f5;
            this[_0x500b42(0x3d5)] = _0xfcebce;
        }
        ['setGeometry'](_0x24f274) {
            var _0xe7d74d = _0x6027f5;
            this[_0xe7d74d(0x5f2)] = _0x24f274;
        }
        ['addToOpaqueRenderQueue'](_0x3679f0, _0x51285b) {
            var _0x44fe59 = _0x6027f5;
            _0x51285b[_0x44fe59(0x1fe)]['add'](this);
        }
        [_0x6027f5(0xa8e)](_0xcf0c7e, _0x749568) {
            var _0x36fe05 = _0x6027f5;
            _0x749568[_0x36fe05(0x1fe)][_0x36fe05(0x207)](this), _0x749568['lastTransparentBatched'] = !0x1, _0x749568['lastTransparentRenderElement'] = this;
        }
        [_0x6027f5(0x388)](_0x3b4704, _0x4ac5ea, _0x9358ad, _0x36944f, _0x50993e = 0x0) {
            var _0x4949c0 = _0x6027f5;
            if (this[_0x4949c0(0x8d5)]) {
                var _0x1973eb = this['material'][_0x4949c0(0x509)][_0x4949c0(0x50c)](0x0);
                if (this[_0x4949c0(0x5f8)] = null, _0x9358ad) {
                    if (_0x36944f) {
                        var _0x228866 = _0x1973eb[_0x4949c0(0xa8f)](_0x36944f);
                        if (!_0x228866)
                            return;
                        for (var _0x4287cf = _0x9358ad[_0x4949c0(0x524)], _0x1ffb5b = 0x0, _0x12d18d = _0x4287cf['length']; _0x1ffb5b < _0x12d18d; _0x1ffb5b++) {
                            var _0x2b2534 = _0x4287cf[_0x1ffb5b];
                            if (_0x228866 === _0x2b2534[_0x4949c0(0xa8f)](_0x36944f)) {
                                this['renderSubShader'] = _0x2b2534;
                                break;
                            }
                        }
                        if (!this[_0x4949c0(0x5f8)])
                            return;
                    } else
                        this[_0x4949c0(0x5f8)] = _0x9358ad[_0x4949c0(0x50c)](_0x50993e);
                } else
                    this[_0x4949c0(0x5f8)] = _0x1973eb;
                var _0x578c35 = _0x3b4704[_0x4949c0(0xa90)](this[_0x4949c0(0x8d5)]['renderQueue']);
                _0x578c35[_0x4949c0(0xa91)] ? this[_0x4949c0(0xa8e)](_0x4ac5ea, _0x578c35) : this[_0x4949c0(0xa92)](_0x4ac5ea, _0x578c35);
            }
        }
        ['_render'](_0x24426f) {
            var _0x2bab40 = _0x6027f5, _0x354b02, _0x5350f4, _0xac7f48, _0x4c5bcf = _0x24426f['invertY'], _0x254054 = _0x55cd9b[_0x2bab40(0x385)], _0x266e4a = _0x24426f[_0x2bab40(0x5ca)], _0x3e6de3 = _0x24426f[_0x2bab40(0x5dc)], _0x2c1fea = this[_0x2bab40(0x3d5)], _0x5835dd = this[_0x2bab40(0x5f2)];
            _0x24426f['renderElement'] = this, _0x254054 !== this['render'][_0x2bab40(0x385)] || this[_0x2bab40(0x5f4)] !== this[_0x2bab40(0x4ff)][_0x2bab40(0x5f5)] ? (this[_0x2bab40(0x4ff)][_0x2bab40(0x5f6)](_0x24426f, _0x2c1fea), this['render'][_0x2bab40(0x5f7)](_0x24426f, _0x2c1fea), this[_0x2bab40(0x4ff)][_0x2bab40(0x385)] = _0x254054, this[_0x2bab40(0x4ff)][_0x2bab40(0x5f5)] = this[_0x2bab40(0x5f4)]) : this[_0x2bab40(0x5f4)] == _0x50feff[_0x2bab40(0xa93)] && (this[_0x2bab40(0x4ff)]['_renderUpdate'](_0x24426f, _0x2c1fea), this['render'][_0x2bab40(0x5f7)](_0x24426f, _0x2c1fea));
            var _0x55ea36 = _0x24426f[_0x2bab40(0x5e0)];
            if (_0x5835dd[_0x2bab40(0x5e7)](_0x24426f))
                for (var _0x3d0c9e = this[_0x2bab40(0x5f8)][_0x2bab40(0x50d)], _0x5dc691 = 0x0, _0x5073d9 = _0x3d0c9e['length']; _0x5dc691 < _0x5073d9; _0x5dc691++) {
                    var _0x3c1ad5 = _0x3d0c9e[_0x5dc691];
                    if (_0x3c1ad5[_0x2bab40(0x5e1)] === _0x55ea36) {
                        var _0xb06ba6 = _0x50feff[_0x2bab40(0x569)];
                        _0x266e4a[_0x2bab40(0x4e2)][_0x2bab40(0x498)]['cloneTo'](_0xb06ba6), _0xb06ba6[_0x2bab40(0x449)](this[_0x2bab40(0x4ff)][_0x2bab40(0x4e2)][_0x2bab40(0x498)]), _0xb06ba6[_0x2bab40(0x449)](this['material']['_shaderValues'][_0x2bab40(0x498)]);
                        var _0x58e6d6 = _0x24426f[_0x2bab40(0x508)] = _0x3c1ad5['withCompile'](_0xb06ba6), _0x9fb97e = _0x58e6d6['bind'](), _0x1fc63f = _0x254054 !== _0x58e6d6[_0x2bab40(0x5f9)], _0x5bdd95 = _0x58e6d6[_0x2bab40(0x5fa)] !== _0x266e4a || _0x1fc63f;
                        (_0x5bdd95 || _0x9fb97e) && (_0x58e6d6[_0x2bab40(0x56a)](_0x58e6d6[_0x2bab40(0x5e2)], _0x266e4a[_0x2bab40(0x4e2)], _0x5bdd95), _0x58e6d6['_uploadScene'] = _0x266e4a);
                        var _0x58ba36 = _0x58e6d6['_uploadRender'] !== this['render'] || _0x58e6d6['_uploadRenderType'] !== this[_0x2bab40(0x5f4)] || _0x1fc63f;
                        (_0x58ba36 || _0x9fb97e) && (_0x58e6d6['uploadUniforms'](_0x58e6d6[_0x2bab40(0x5e3)], this[_0x2bab40(0x4ff)]['_shaderValues'], _0x58ba36), _0x58e6d6[_0x2bab40(0xa94)] = this[_0x2bab40(0x4ff)], _0x58e6d6[_0x2bab40(0x5fb)] = this[_0x2bab40(0x5f4)]);
                        var _0x58a108 = _0x58e6d6[_0x2bab40(0x5fc)] !== _0x3e6de3 || _0x1fc63f;
                        (_0x58a108 || _0x9fb97e) && (_0x58e6d6[_0x2bab40(0x56a)](_0x58e6d6[_0x2bab40(0x5fd)], _0x3e6de3, _0x58a108), _0x58e6d6[_0x2bab40(0x5fc)] = _0x3e6de3);
                        var _0x3a284b = _0x58e6d6[_0x2bab40(0x8df)] !== this[_0x2bab40(0x8d5)] || _0x1fc63f;
                        (_0x3a284b || _0x9fb97e) && (_0x58e6d6[_0x2bab40(0x56a)](_0x58e6d6['_materialUniformParamsMap'], this['material'][_0x2bab40(0x4e2)], _0x3a284b), _0x58e6d6[_0x2bab40(0x8df)] = this[_0x2bab40(0x8d5)]);
                        var _0x3b68ff = this['material'][_0x2bab40(0x4e2)];
                        _0x354b02 !== this[_0x2bab40(0x8d5)] || _0x5350f4 !== _0x58e6d6 ? (_0x58e6d6['uploadRenderStateBlendDepth'](_0x3b68ff), _0x58e6d6[_0x2bab40(0x5e4)](_0x3b68ff, _0x4c5bcf, this['getInvertFront']()), _0x354b02 = this[_0x2bab40(0x8d5)], _0x5350f4 = _0x58e6d6, _0xac7f48 = this['render']) : _0xac7f48 !== this['render'] && (_0x58e6d6[_0x2bab40(0x5e4)](_0x3b68ff, _0x4c5bcf, this[_0x2bab40(0x5e5)]()), _0xac7f48 = this[_0x2bab40(0x4ff)]), _0x5835dd[_0x2bab40(0x5e8)](_0x24426f), _0x58e6d6[_0x2bab40(0x5f9)] = _0x254054;
                    }
                }
            this[_0x2bab40(0x5f4)] !== _0x50feff[_0x2bab40(0x5fe)] && this[_0x2bab40(0x4ff)]['_revertBatchRenderUpdate'](_0x24426f);
        }
        [_0x6027f5(0x364)]() {
            var _0x130d1a = _0x6027f5;
            this[_0x130d1a(0x3d5)] = null, this[_0x130d1a(0x5f2)] = null, this[_0x130d1a(0x8d5)] = null, this[_0x130d1a(0x4ff)] = null;
        }
    }
    _0x50feff[_0x6027f5(0x5fe)] = 0x0, _0x50feff[_0x6027f5(0xa95)] = 0x1, _0x50feff['RENDERTYPE_INSTANCEBATCH'] = 0x2, _0x50feff[_0x6027f5(0xa96)] = 0x3, _0x50feff['_compileDefine'] = new _0x1ff4c5();
    class _0x2057f1 extends _0x50feff {
        constructor() {
            super(), this['_dynamicWorldPositionNormalNeedUpdate'] = !0x0;
        }
        ['_onWorldMatrixChanged']() {
            var _0x1c6b7d = _0x6027f5;
            this[_0x1c6b7d(0xa97)] = !0x0;
        }
        [_0x6027f5(0xa98)](_0x5ba837, _0x38e597, _0x4b696b, _0x5245d2) {
            var _0x3d3d53 = _0x6027f5;
            if (this['_dynamicWorldPositionNormalNeedUpdate']) {
                for (var _0x155e9b = this[_0x3d3d53(0x5f2)], _0x3e7d4b = _0x155e9b[_0x3d3d53(0x4f6)], _0x4b00b5 = _0x3e7d4b['vertexDeclaration']['vertexStride'] / 0x4, _0x38d056 = _0x3e7d4b['getFloat32Data'](), _0x555d9a = this['_transform'][_0x3d3d53(0x3d8)], _0x31e29d = this[_0x3d3d53(0x3d5)]['rotation'], _0x34258a = _0x155e9b[_0x3d3d53(0xa99)], _0x1a7ad0 = 0x0; _0x1a7ad0 < _0x5245d2; _0x1a7ad0++) {
                    var _0x371827 = (_0x4b696b ? _0x34258a[_0x1a7ad0] : _0x1a7ad0) * _0x4b00b5, _0x5ccf0f = 0x3 * _0x1a7ad0;
                    _0x3acd08[_0x3d3d53(0xa9a)](_0x38d056, _0x371827 + _0x5ba837, _0x555d9a, this[_0x3d3d53(0xa9b)], _0x5ccf0f), -0x1 !== _0x38e597 && _0x3acd08[_0x3d3d53(0x2f4)](_0x38d056, _0x371827 + _0x38e597, _0x31e29d, this[_0x3d3d53(0xa9c)], _0x5ccf0f);
                }
                this[_0x3d3d53(0xa97)] = !0x1;
            }
        }
        [_0x6027f5(0xa8d)](_0x2525b7) {
            var _0x33ddc8 = _0x6027f5;
            this[_0x33ddc8(0x3d5)] !== _0x2525b7 && (this[_0x33ddc8(0x3d5)] && this['_transform'][_0x33ddc8(0x8fb)](_0x387b86['Event']['TRANSFORM_CHANGED'], this, this[_0x33ddc8(0xa9d)]), _0x2525b7 && _0x2525b7['on'](_0x387b86[_0x33ddc8(0x5b1)][_0x33ddc8(0x5ae)], this, this[_0x33ddc8(0xa9d)]), this[_0x33ddc8(0xa97)] = !0x0, this[_0x33ddc8(0x3d5)] = _0x2525b7);
        }
        [_0x6027f5(0xa9e)](_0x56f204) {
            var _0x76243 = _0x6027f5;
            if (this[_0x76243(0x5f2)] !== _0x56f204) {
                var _0x5f19a1 = _0x56f204, _0x1f0e57 = _0x5f19a1['_mesh'];
                if (_0x1f0e57) {
                    var _0x50a456 = _0x1f0e57[_0x76243(0x5e6)]['length'] > 0x1, _0x116c1d = _0x50a456 ? _0x5f19a1[_0x76243(0x62b)] : _0x1f0e57[_0x76243(0xa9f)];
                    if (_0x116c1d <= _0x525782[_0x76243(0x226)][_0x76243(0xaa0)]) {
                        var _0x35211e = 0x3 * _0x116c1d;
                        this[_0x76243(0xaa1)] = !0x0, this['_dynamicWorldPositions'] = new Float32Array(_0x35211e), this[_0x76243(0xa9c)] = new Float32Array(_0x35211e), this[_0x76243(0xaa2)] = _0x116c1d, this[_0x76243(0xaa3)] = _0x50a456;
                    } else
                        this[_0x76243(0xaa1)] = !0x1;
                }
                this[_0x76243(0x5f2)] = _0x56f204;
            }
        }
        ['addToOpaqueRenderQueue'](_0x284a57, _0x309b08) {
            var _0xcc61fb = _0x6027f5, _0x55d607 = this[_0xcc61fb(0xaa4)], _0x46739d = _0x309b08[_0xcc61fb(0x1fe)], _0x2e3182 = _0x46739d['elements'];
            if (_0x55d607 && (!this[_0xcc61fb(0x4ff)][_0xcc61fb(0xaa5)] || this[_0xcc61fb(0x4ff)]['_probReflection'][_0xcc61fb(0xaa6)]) && _0x2057f1[_0xcc61fb(0x255)]) {
                var _0x554955 = _0x525782['MeshRenderStaticBatchManager'][_0xcc61fb(0x304)], _0x3cc576 = _0x554955[_0xcc61fb(0xaa7)](this[_0xcc61fb(0x4ff)][_0xcc61fb(0xaa8)] + 0x1, this['render']['receiveShadow'], this[_0xcc61fb(0x8d5)]['id'], _0x55d607[_0xcc61fb(0xaa9)]);
                if (_0x554955[_0xcc61fb(0xaaa)] === _0x3cc576[_0xcc61fb(0x376)]) {
                    var _0x582266 = _0x3cc576[_0xcc61fb(0x374)];
                    if (_0x3cc576['batched'])
                        _0x2e3182[_0x582266]['staticBatchElementList'][_0xcc61fb(0x207)](this);
                    else {
                        var _0x3cf64b = _0x2e3182[_0x582266], _0x21cc07 = _0x3cf64b[_0xcc61fb(0x4ff)], _0x5436c0 = _0x554955['_getBatchRenderElementFromPool']();
                        _0x5436c0['renderType'] = _0x50feff[_0xcc61fb(0xa95)], _0x5436c0[_0xcc61fb(0xa9e)](_0x55d607), _0x5436c0[_0xcc61fb(0x8d5)] = _0x3cf64b['material'];
                        var _0x111f98 = _0x55d607['batchOwner'], _0x2f1ca2 = _0x111f98 ? _0x111f98[_0xcc61fb(0x3d5)] : null;
                        _0x5436c0[_0xcc61fb(0xa8d)](_0x2f1ca2), _0x5436c0[_0xcc61fb(0x4ff)] = _0x21cc07, _0x5436c0[_0xcc61fb(0x5f8)] = _0x3cf64b[_0xcc61fb(0x5f8)];
                        var _0x2a8ee3 = _0x5436c0[_0xcc61fb(0xaab)];
                        _0x2a8ee3[_0xcc61fb(0x205)] = 0x0, _0x2a8ee3[_0xcc61fb(0x207)](_0x3cf64b), _0x2a8ee3[_0xcc61fb(0x207)](this), _0x2e3182[_0x582266] = _0x5436c0, _0x3cc576['batched'] = !0x0;
                    }
                } else
                    _0x3cc576[_0xcc61fb(0x376)] = _0x554955[_0xcc61fb(0xaaa)], _0x3cc576[_0xcc61fb(0x374)] = _0x46739d[_0xcc61fb(0x205)], _0x3cc576['batched'] = !0x1, _0x46739d['add'](this);
            } else {
                if (_0x2057f1[_0xcc61fb(0x254)] && this[_0xcc61fb(0x5f8)][_0xcc61fb(0x3dc)][_0xcc61fb(0x522)] && _0x387b86[_0xcc61fb(0x303)][_0xcc61fb(0x4f1)][_0xcc61fb(0x64a)]() && this[_0xcc61fb(0x4ff)][_0xcc61fb(0xaa8)] < 0x0 && (!this['render'][_0xcc61fb(0xaa5)] || this[_0xcc61fb(0x4ff)][_0xcc61fb(0xaa5)][_0xcc61fb(0xaa6)])) {
                    var _0x45f24d = this[_0xcc61fb(0x5f2)], _0x383d41 = _0x525782['MeshRenderDynamicBatchManager'][_0xcc61fb(0x304)], _0x269102 = _0x383d41['getInstanceBatchOpaquaMark'](this[_0xcc61fb(0x4ff)][_0xcc61fb(0xaac)], this[_0xcc61fb(0x8d5)]['id'], _0x45f24d[_0xcc61fb(0x5bc)], this['_transform'][_0xcc61fb(0xa8c)]);
                    if (_0x383d41[_0xcc61fb(0xaaa)] === _0x269102['updateMark']) {
                        var _0x413099 = _0x269102['indexInList'];
                        if (_0x269102['batched']) {
                            var _0x1e8e91 = _0x2e3182[_0x413099][_0xcc61fb(0xa8a)];
                            _0x1e8e91[_0xcc61fb(0x205)] === _0x4da149['maxInstanceCount'] ? (_0x269102[_0xcc61fb(0x376)] = _0x383d41['_updateCountMark'], _0x269102['indexInList'] = _0x46739d['length'], _0x269102[_0xcc61fb(0xa83)] = !0x1, _0x46739d[_0xcc61fb(0x207)](this)) : _0x1e8e91[_0xcc61fb(0x207)](this);
                        } else {
                            var _0x2038e4 = _0x2e3182[_0x413099], _0x3e6ca0 = _0x2038e4['render'], _0x579750 = _0x383d41[_0xcc61fb(0xaad)]();
                            _0x579750[_0xcc61fb(0x5f4)] = _0x50feff[_0xcc61fb(0xa93)], _0x579750[_0xcc61fb(0xa9e)](_0x4da149[_0xcc61fb(0x304)]), _0x579750[_0xcc61fb(0x8d5)] = _0x2038e4[_0xcc61fb(0x8d5)], _0x579750[_0xcc61fb(0xa8d)](null), _0x579750[_0xcc61fb(0x4ff)] = _0x3e6ca0, _0x579750[_0xcc61fb(0xa89)] = _0x45f24d, _0x579750[_0xcc61fb(0x5f8)] = _0x2038e4['renderSubShader'];
                            var _0x156199 = _0x579750[_0xcc61fb(0xa8a)];
                            _0x156199[_0xcc61fb(0x205)] = 0x0, _0x156199['add'](_0x2038e4), _0x156199[_0xcc61fb(0x207)](this), _0x2e3182[_0x413099] = _0x579750, _0x269102['batched'] = !0x0;
                        }
                    } else
                        _0x269102['updateMark'] = _0x383d41['_updateCountMark'], _0x269102[_0xcc61fb(0x374)] = _0x46739d[_0xcc61fb(0x205)], _0x269102[_0xcc61fb(0xa83)] = !0x1, _0x46739d['add'](this);
                } else {
                    if (this[_0xcc61fb(0xaa1)] && _0x2057f1[_0xcc61fb(0x254)]) {
                        var _0x558d7c = this[_0xcc61fb(0x5f2)][_0xcc61fb(0x4f6)]['vertexDeclaration'], _0x42ead3 = _0x525782['MeshRenderDynamicBatchManager'][_0xcc61fb(0x304)], _0x5aadd7 = _0x42ead3['getVertexBatchOpaquaMark'](this[_0xcc61fb(0x4ff)][_0xcc61fb(0xaa8)] + 0x1, this['render'][_0xcc61fb(0xaac)], this['material']['id'], _0x558d7c['id']);
                        if (_0x42ead3['_updateCountMark'] === _0x5aadd7['updateMark']) {
                            var _0x3c0600 = _0x5aadd7[_0xcc61fb(0x374)];
                            if (_0x5aadd7[_0xcc61fb(0xa83)])
                                _0x2e3182[_0x3c0600][_0xcc61fb(0xaae)][_0xcc61fb(0x207)](this);
                            else {
                                var _0x3bc776 = _0x2e3182[_0x3c0600], _0x553205 = _0x3bc776[_0xcc61fb(0x4ff)], _0x411b58 = _0x42ead3[_0xcc61fb(0xaad)]();
                                _0x411b58[_0xcc61fb(0x5f4)] = _0x50feff['RENDERTYPE_VERTEXBATCH'], _0x411b58[_0xcc61fb(0xa9e)](_0x525782[_0xcc61fb(0x226)][_0xcc61fb(0x304)]), _0x411b58[_0xcc61fb(0x8d5)] = _0x3bc776[_0xcc61fb(0x8d5)], _0x411b58[_0xcc61fb(0xa8d)](null), _0x411b58['render'] = _0x553205, _0x411b58[_0xcc61fb(0xaaf)] = _0x558d7c, _0x411b58[_0xcc61fb(0x5f8)] = _0x3bc776['renderSubShader'];
                                var _0x1efadf = _0x411b58[_0xcc61fb(0xaae)];
                                _0x1efadf['length'] = 0x0, _0x1efadf['add'](_0x3bc776), _0x1efadf[_0xcc61fb(0x207)](this), _0x2e3182[_0x3c0600] = _0x411b58, _0x5aadd7['batched'] = !0x0;
                            }
                        } else
                            _0x5aadd7[_0xcc61fb(0x376)] = _0x42ead3[_0xcc61fb(0xaaa)], _0x5aadd7['indexInList'] = _0x46739d[_0xcc61fb(0x205)], _0x5aadd7['batched'] = !0x1, _0x46739d['add'](this);
                    } else
                        _0x46739d[_0xcc61fb(0x207)](this);
                }
            }
        }
        [_0x6027f5(0xa8e)](_0x479b2f, _0x1419c4) {
            var _0x517b8c = _0x6027f5, _0x372d7e = this[_0x517b8c(0xaa4)], _0x4f92b7 = _0x1419c4[_0x517b8c(0x1fe)], _0x4664b1 = _0x4f92b7[_0x517b8c(0x1fe)];
            if (_0x372d7e && _0x2057f1[_0x517b8c(0x255)]) {
                var _0x1bdbae = _0x525782[_0x517b8c(0xab0)][_0x517b8c(0x304)], _0x172973 = _0x1419c4[_0x517b8c(0xab1)];
                if (_0x172973) {
                    var _0x940c06 = _0x172973[_0x517b8c(0x4ff)];
                    if (_0x172973[_0x517b8c(0x5f2)]['_getType']() !== this['_geometry'][_0x517b8c(0xa55)]() || _0x172973[_0x517b8c(0xaa4)] !== _0x372d7e || _0x172973[_0x517b8c(0x8d5)] !== this[_0x517b8c(0x8d5)] || _0x940c06[_0x517b8c(0xaac)] !== this[_0x517b8c(0x4ff)][_0x517b8c(0xaac)] || _0x940c06[_0x517b8c(0xaa8)] !== this[_0x517b8c(0x4ff)][_0x517b8c(0xaa8)])
                        _0x4f92b7['add'](this), _0x1419c4[_0x517b8c(0xab2)] = !0x1;
                    else {
                        if (_0x1419c4['lastTransparentBatched'])
                            _0x4664b1[_0x4f92b7['length'] - 0x1][_0x517b8c(0xaab)][_0x517b8c(0x207)](this);
                        else {
                            var _0x4fab8a = _0x1bdbae['_getBatchRenderElementFromPool']();
                            _0x4fab8a['renderType'] = _0x50feff['RENDERTYPE_STATICBATCH'], _0x4fab8a['setGeometry'](_0x372d7e), _0x4fab8a[_0x517b8c(0x8d5)] = _0x172973['material'];
                            var _0x499389 = _0x372d7e['batchOwner'], _0x9f9eb6 = _0x499389 ? _0x499389[_0x517b8c(0x3d5)] : null;
                            _0x4fab8a[_0x517b8c(0xa8d)](_0x9f9eb6), _0x4fab8a[_0x517b8c(0x4ff)] = this[_0x517b8c(0x4ff)], _0x4fab8a[_0x517b8c(0x5f8)] = _0x172973[_0x517b8c(0x5f8)];
                            var _0x2faf8a = _0x4fab8a[_0x517b8c(0xaab)];
                            _0x2faf8a['length'] = 0x0, _0x2faf8a[_0x517b8c(0x207)](_0x172973), _0x2faf8a[_0x517b8c(0x207)](this), _0x4664b1[_0x4f92b7[_0x517b8c(0x205)] - 0x1] = _0x4fab8a;
                        }
                        _0x1419c4[_0x517b8c(0xab2)] = !0x0;
                    }
                } else
                    _0x4f92b7[_0x517b8c(0x207)](this), _0x1419c4[_0x517b8c(0xab2)] = !0x1;
            } else {
                if (_0x2057f1[_0x517b8c(0x254)] && this[_0x517b8c(0x5f8)][_0x517b8c(0x3dc)][_0x517b8c(0x522)] && _0x387b86[_0x517b8c(0x303)][_0x517b8c(0x4f1)][_0x517b8c(0x64a)]() && this[_0x517b8c(0x4ff)][_0x517b8c(0xaa8)] < 0x0 && (!this[_0x517b8c(0x4ff)][_0x517b8c(0xaa5)] || this[_0x517b8c(0x4ff)][_0x517b8c(0xaa5)]['_isScene'])) {
                    var _0x35b2ab = this[_0x517b8c(0x5f2)], _0x5887ab = _0x525782[_0x517b8c(0xab3)]['instance'], _0x54ffbe = _0x1419c4['lastTransparentRenderElement'];
                    if (_0x54ffbe) {
                        var _0x39b32c = _0x54ffbe['render'];
                        if (_0x54ffbe[_0x517b8c(0x5f2)][_0x517b8c(0xa55)]() !== this[_0x517b8c(0x5f2)][_0x517b8c(0xa55)]() || _0x54ffbe[_0x517b8c(0x5f2)] !== _0x35b2ab || _0x54ffbe[_0x517b8c(0x8d5)] !== this[_0x517b8c(0x8d5)] || _0x39b32c[_0x517b8c(0xaac)] !== this[_0x517b8c(0x4ff)][_0x517b8c(0xaac)])
                            _0x4f92b7[_0x517b8c(0x207)](this), _0x1419c4[_0x517b8c(0xab2)] = !0x1;
                        else {
                            if (_0x1419c4[_0x517b8c(0xab2)]) {
                                var _0x2d26ed = _0x4664b1[_0x4f92b7[_0x517b8c(0x205)] - 0x1][_0x517b8c(0xa8a)];
                                _0x2d26ed['length'] === _0x4da149['maxInstanceCount'] ? (_0x4f92b7[_0x517b8c(0x207)](this), _0x1419c4['lastTransparentBatched'] = !0x1) : (_0x2d26ed[_0x517b8c(0x207)](this), _0x1419c4[_0x517b8c(0xab2)] = !0x0);
                            } else {
                                var _0x236fe4 = _0x5887ab['_getBatchRenderElementFromPool']();
                                _0x236fe4[_0x517b8c(0x5f4)] = _0x50feff[_0x517b8c(0xa93)], _0x236fe4[_0x517b8c(0xa9e)](_0x4da149[_0x517b8c(0x304)]), _0x236fe4[_0x517b8c(0x8d5)] = _0x54ffbe[_0x517b8c(0x8d5)], _0x236fe4[_0x517b8c(0xa8d)](null), _0x236fe4[_0x517b8c(0x4ff)] = this[_0x517b8c(0x4ff)], _0x236fe4[_0x517b8c(0xa89)] = _0x35b2ab, _0x236fe4['renderSubShader'] = _0x54ffbe[_0x517b8c(0x5f8)];
                                var _0x4ce182 = _0x236fe4[_0x517b8c(0xa8a)];
                                _0x4ce182[_0x517b8c(0x205)] = 0x0, _0x4ce182['add'](_0x54ffbe), _0x4ce182[_0x517b8c(0x207)](this), _0x4664b1[_0x4f92b7[_0x517b8c(0x205)] - 0x1] = _0x236fe4, _0x1419c4['lastTransparentBatched'] = !0x0;
                            }
                        }
                    } else
                        _0x4f92b7[_0x517b8c(0x207)](this), _0x1419c4[_0x517b8c(0xab2)] = !0x1;
                } else {
                    if (this[_0x517b8c(0xaa1)] && _0x2057f1[_0x517b8c(0x254)]) {
                        var _0x447be6 = this[_0x517b8c(0x5f2)]['_vertexBuffer'][_0x517b8c(0x456)], _0xea96b8 = _0x525782[_0x517b8c(0xab3)][_0x517b8c(0x304)], _0x1d6048 = _0x1419c4[_0x517b8c(0xab1)];
                        if (_0x1d6048) {
                            var _0x121ba2 = _0x1d6048['render'];
                            if (_0x1d6048[_0x517b8c(0xaa1)] && _0x1d6048['_geometry'][_0x517b8c(0xa55)]() === this['_geometry'][_0x517b8c(0xa55)]() && _0x1d6048[_0x517b8c(0x5f2)][_0x517b8c(0x4f6)][_0x517b8c(0x455)] === _0x447be6 && _0x1d6048[_0x517b8c(0x8d5)] === this[_0x517b8c(0x8d5)] && _0x121ba2[_0x517b8c(0xaac)] === this[_0x517b8c(0x4ff)][_0x517b8c(0xaac)] && _0x121ba2['lightmapIndex'] === this['render'][_0x517b8c(0xaa8)]) {
                                if (_0x1419c4['lastTransparentBatched'])
                                    _0x4664b1[_0x4f92b7['length'] - 0x1]['vertexBatchElementList'][_0x517b8c(0x207)](this);
                                else {
                                    var _0x1a62db = _0xea96b8[_0x517b8c(0xaad)]();
                                    _0x1a62db[_0x517b8c(0x5f4)] = _0x50feff[_0x517b8c(0xa96)], _0x1a62db[_0x517b8c(0xa9e)](_0x525782['SubMeshDynamicBatch'][_0x517b8c(0x304)]), _0x1a62db[_0x517b8c(0x8d5)] = _0x1d6048['material'], _0x1a62db['setTransform'](null), _0x1a62db[_0x517b8c(0x4ff)] = this[_0x517b8c(0x4ff)], _0x1a62db[_0x517b8c(0xaaf)] = _0x447be6, _0x1a62db[_0x517b8c(0x5f8)] = _0x1d6048[_0x517b8c(0x5f8)];
                                    var _0x8885af = _0x1a62db[_0x517b8c(0xaae)];
                                    _0x8885af['length'] = 0x0, _0x8885af[_0x517b8c(0x207)](_0x1d6048), _0x8885af[_0x517b8c(0x207)](this), _0x4664b1[_0x4f92b7[_0x517b8c(0x205)] - 0x1] = _0x1a62db;
                                }
                                _0x1419c4[_0x517b8c(0xab2)] = !0x0;
                            } else
                                _0x4f92b7[_0x517b8c(0x207)](this), _0x1419c4[_0x517b8c(0xab2)] = !0x1;
                        } else
                            _0x4f92b7[_0x517b8c(0x207)](this), _0x1419c4[_0x517b8c(0xab2)] = !0x1;
                    } else
                        _0x4f92b7[_0x517b8c(0x207)](this);
                }
            }
            _0x1419c4['lastTransparentRenderElement'] = this;
        }
        ['getInvertFront']() {
            var _0x2609a8 = _0x6027f5;
            switch (this[_0x2609a8(0x5f4)]) {
            case _0x50feff[_0x2609a8(0x5fe)]:
                return this['_transform'][_0x2609a8(0xa8c)];
            case _0x50feff[_0x2609a8(0xa95)]:
            case _0x50feff['RENDERTYPE_VERTEXBATCH']:
                return !0x1;
            case _0x50feff['RENDERTYPE_INSTANCEBATCH']:
                return this[_0x2609a8(0xa8a)][_0x2609a8(0x1fe)][0x0][_0x2609a8(0x3d5)][_0x2609a8(0xa8c)];
            default:
                throw _0x2609a8(0xab4);
            }
        }
        [_0x6027f5(0x364)]() {
            var _0x1b57c0 = _0x6027f5;
            super['destroy'](), this[_0x1b57c0(0xa9b)] = null, this['_dynamicWorldNormals'] = null, this[_0x1b57c0(0xaa4)] = null, this['staticBatchElementList'] = null, this[_0x1b57c0(0xaae)] = null, this[_0x1b57c0(0xaaf)] = null;
        }
    }
    _0x2057f1[_0x6027f5(0x254)] = !0x0, _0x2057f1[_0x6027f5(0x255)] = !0x0;
    class _0x423717 {
        constructor() {
            var _0x5b1686 = _0x6027f5;
            this[_0x5b1686(0xab5)] = [], this[_0x5b1686(0xab6)] = {}, this['_batchRenderElementPoolIndex'] = 0x0, this[_0x5b1686(0xab7)] = [];
        }
        static [_0x6027f5(0xab8)](_0x23e914, _0x4bb1a1) {
            var _0x2c7829 = _0x6027f5;
            _0x23e914 instanceof _0x221092 && _0x4bb1a1[_0x2c7829(0x2ac)](_0x23e914);
            for (var _0xcc0556 = 0x0, _0x2f80a0 = _0x23e914[_0x2c7829(0xab9)]; _0xcc0556 < _0x2f80a0; _0xcc0556++)
                _0x423717[_0x2c7829(0xab8)](_0x23e914[_0x2c7829(0x5ac)][_0xcc0556], _0x4bb1a1);
        }
        static [_0x6027f5(0xaba)](_0x42b67f) {
            var _0x58d434 = _0x6027f5;
            _0x423717[_0x58d434(0xabb)][_0x58d434(0x2ac)](_0x42b67f);
        }
        static [_0x6027f5(0xabc)](_0x57c764, _0x12e991 = null) {
            var _0x1f6a78 = _0x6027f5;
            _0x12e991 || (_0x12e991 = [], _0x57c764 && _0x423717['_addToStaticBatchQueue'](_0x57c764, _0x12e991));
            var _0x5d7fa5 = _0x12e991['length'];
            if (_0x5d7fa5 > 0x0) {
                for (var _0x6fbd48 = 0x0; _0x6fbd48 < _0x5d7fa5; _0x6fbd48++) {
                    var _0xd83162 = _0x12e991[_0x6fbd48];
                    _0xd83162[_0x1f6a78(0x5cf)] || (_0xd83162[_0x1f6a78(0x5e8)]['_isPartOfStaticBatch'] ? console['warn'](_0x1f6a78(0xabd) + _0xd83162[_0x1f6a78(0x2b7)] + '\x20has\x20a\x20part\x20of\x20Static\x20Batch,it\x20will\x20be\x20ignore.') : _0xd83162[_0x1f6a78(0xa74)]());
                }
                for (var _0x14d21a = 0x0, _0x26171c = _0x423717['_managers'][_0x1f6a78(0x205)]; _0x14d21a < _0x26171c; _0x14d21a++) {
                    _0x423717[_0x1f6a78(0xabb)][_0x14d21a]['_initStaticBatchs'](_0x57c764);
                }
            }
        }
        [_0x6027f5(0xabe)](_0x44ca2a, _0xa1e2e9, _0x459d32) {
            var _0x50a831 = _0x6027f5;
            for (var _0x5a3551 = _0x44ca2a[Math['floor']((_0x459d32 + _0xa1e2e9) / 0x2)]; _0xa1e2e9 <= _0x459d32;) {
                for (; this[_0x50a831(0xabf)](_0x44ca2a[_0xa1e2e9], _0x5a3551) < 0x0;)
                    _0xa1e2e9++;
                for (; this[_0x50a831(0xabf)](_0x44ca2a[_0x459d32], _0x5a3551) > 0x0;)
                    _0x459d32--;
                if (_0xa1e2e9 < _0x459d32) {
                    var _0x52684f = _0x44ca2a[_0xa1e2e9];
                    _0x44ca2a[_0xa1e2e9] = _0x44ca2a[_0x459d32], _0x44ca2a[_0x459d32] = _0x52684f, _0xa1e2e9++, _0x459d32--;
                } else {
                    if (_0xa1e2e9 === _0x459d32) {
                        _0xa1e2e9++;
                        break;
                    }
                }
            }
            return _0xa1e2e9;
        }
        [_0x6027f5(0x828)](_0x3708b6, _0x3a56f0, _0x1a8556) {
            var _0x4b47b5 = _0x6027f5;
            if (_0x3708b6[_0x4b47b5(0x205)] > 0x1) {
                var _0x178d50 = this[_0x4b47b5(0xabe)](_0x3708b6, _0x3a56f0, _0x1a8556), _0x4d0b51 = _0x178d50 - 0x1;
                _0x3a56f0 < _0x4d0b51 && this[_0x4b47b5(0x828)](_0x3708b6, _0x3a56f0, _0x4d0b51), _0x178d50 < _0x1a8556 && this[_0x4b47b5(0x828)](_0x3708b6, _0x178d50, _0x1a8556);
            }
        }
        [_0x6027f5(0xabf)](_0x51c339, _0x53ce3f) {
            throw 'StaticBatch:must\x20override\x20this\x20function.';
        }
        [_0x6027f5(0xac0)](_0x31431c) {
            throw 'StaticBatch:must\x20override\x20this\x20function.';
        }
        [_0x6027f5(0xaad)]() {
            var _0x23a7d9 = _0x6027f5;
            throw _0x23a7d9(0xac1);
        }
        ['_addBatchSprite'](_0x17d451) {
            var _0x2c6c4e = _0x6027f5;
            this[_0x2c6c4e(0xab5)][_0x2c6c4e(0x2ac)](_0x17d451);
        }
        [_0x6027f5(0x9c1)]() {
            var _0xe138f8 = _0x6027f5;
            this[_0xe138f8(0xac2)] = 0x0;
        }
        [_0x6027f5(0xac3)]() {
            var _0x596b4d = _0x6027f5;
            throw _0x596b4d(0xac4);
        }
        [_0x6027f5(0xac5)]() {
            var _0x397224 = _0x6027f5;
            this[_0x397224(0xab6)] = null;
        }
    }
    _0x423717[_0x6027f5(0xabb)] = [];
    class _0x2fcfcc extends _0x2be7a6 {
        constructor(_0x46a4ea, _0x2b652c) {
            var _0x465ee6 = _0x6027f5;
            super(), this[_0x465ee6(0x4f8)] = new _0x5b1dae(), this[_0x465ee6(0xaa9)] = _0x2fcfcc[_0x465ee6(0xac6)]++, this[_0x465ee6(0xac7)] = [], this[_0x465ee6(0xac8)] = 0x0, this['_currentBatchIndexCount'] = 0x0, this[_0x465ee6(0x455)] = _0x2b652c, this['batchOwner'] = _0x46a4ea;
        }
        [_0x6027f5(0xac9)](_0x5982c8, _0x6ff5b8, _0x542a5c, _0x3c1c59, _0x2423a5, _0x3de837) {
            var _0x1a3bcb = _0x6027f5, _0x5005b6, _0x1ba6ae = _0x3de837[_0x1a3bcb(0x4f6)], _0x3874a9 = _0x1ba6ae[_0x1a3bcb(0x456)], _0x59626d = _0x3874a9[_0x1a3bcb(0x4e8)](_0x73b54a[_0x1a3bcb(0x615)])[_0x1a3bcb(0x4e4)] / 0x4, _0x24d642 = _0x3874a9[_0x1a3bcb(0x4e8)](_0x73b54a[_0x1a3bcb(0x60c)]), _0x595b22 = _0x24d642 ? _0x24d642[_0x1a3bcb(0x4e4)] / 0x4 : -0x1, _0x3dcd9d = _0x3874a9['getVertexElementByUsage'](_0x73b54a[_0x1a3bcb(0x60d)]), _0x29196b = _0x3dcd9d ? _0x3dcd9d['_offset'] / 0x4 : -0x1, _0x49767d = _0x3874a9[_0x1a3bcb(0x4e8)](_0x73b54a[_0x1a3bcb(0x616)]), _0x36c494 = _0x49767d ? _0x49767d[_0x1a3bcb(0x4e4)] / 0x4 : -0x1, _0x4365e6 = _0x3874a9['getVertexElementByUsage'](_0x73b54a[_0x1a3bcb(0x60f)]), _0x477520 = _0x4365e6 ? _0x4365e6[_0x1a3bcb(0x4e4)] / 0x4 : -0x1, _0x3d4bf0 = _0x3874a9[_0x1a3bcb(0x4e8)](_0x73b54a['MESH_TANGENT0']), _0x2048e2 = _0x3d4bf0 ? _0x3d4bf0[_0x1a3bcb(0x4e4)] / 0x4 : -0x1, _0xb1e150 = _0x3874a9['vertexStride'] / 0x4, _0x4e9f90 = _0x1ba6ae[_0x1a3bcb(0xaca)]();
            _0x542a5c ? (_0x542a5c[_0x1a3bcb(0x3d8)][_0x1a3bcb(0x280)](_0x2fcfcc[_0x1a3bcb(0x8fe)]), _0x5005b6 = _0x2fcfcc[_0x1a3bcb(0xacb)], _0x6b4d98[_0x1a3bcb(0x27b)](_0x2fcfcc[_0x1a3bcb(0x8fe)], _0x3c1c59[_0x1a3bcb(0x3d8)], _0x5005b6)) : _0x5005b6 = _0x3c1c59[_0x1a3bcb(0x3d8)];
            var _0x563b71 = _0x2fcfcc[_0x1a3bcb(0xacc)];
            _0x5005b6[_0x1a3bcb(0x280)](_0x563b71), _0x563b71['transpose']();
            var _0x4da6f6 = _0x2fcfcc[_0x1a3bcb(0x334)];
            _0x5005b6[_0x1a3bcb(0x489)](_0x2fcfcc[_0x1a3bcb(0x59f)], _0x4da6f6, _0x2fcfcc['_tempVector31']);
            for (var _0x2af3ef = _0x2423a5[_0x1a3bcb(0xacd)], _0x558238 = _0x3de837['vertexCount'], _0x9ed0ff = 0x0; _0x9ed0ff < _0x558238; _0x9ed0ff++) {
                var _0x495417, _0x441e95, _0x41dfa1 = _0x9ed0ff * _0xb1e150, _0x1351ce = 0x12 * (_0x9ed0ff + _0x6ff5b8);
                _0x3acd08[_0x1a3bcb(0xa9a)](_0x4e9f90, _0x41dfa1 + _0x59626d, _0x5005b6, _0x5982c8, _0x1351ce + 0x0), -0x1 !== _0x595b22 && _0x3acd08[_0x1a3bcb(0x2f7)](_0x4e9f90, _0x41dfa1 + _0x595b22, _0x563b71, _0x5982c8, _0x1351ce + 0x3);
                var _0x46b589 = _0x1351ce + 0x6;
                if (-0x1 !== _0x29196b) {
                    var _0x4897f1 = _0x41dfa1 + _0x29196b;
                    for (_0x495417 = 0x0, _0x441e95 = 0x4; _0x495417 < _0x441e95; _0x495417++)
                        _0x5982c8[_0x46b589 + _0x495417] = _0x4e9f90[_0x4897f1 + _0x495417];
                } else {
                    for (_0x495417 = 0x0, _0x441e95 = 0x4; _0x495417 < _0x441e95; _0x495417++)
                        _0x5982c8[_0x46b589 + _0x495417] = 0x1;
                }
                if (-0x1 !== _0x36c494) {
                    var _0x412655 = _0x41dfa1 + _0x36c494;
                    _0x5982c8[_0x1351ce + 0xa] = _0x4e9f90[_0x412655], _0x5982c8[_0x1351ce + 0xb] = _0x4e9f90[_0x412655 + 0x1];
                }
                if (_0x2af3ef && (-0x1 !== _0x477520 ? _0x3acd08['transformLightingMapTexcoordArray'](_0x4e9f90, _0x41dfa1 + _0x477520, _0x2af3ef, _0x5982c8, _0x1351ce + 0xc) : _0x3acd08[_0x1a3bcb(0x2f8)](_0x4e9f90, _0x41dfa1 + _0x36c494, _0x2af3ef, _0x5982c8, _0x1351ce + 0xc)), -0x1 !== _0x2048e2) {
                    var _0x12335e = _0x41dfa1 + _0x2048e2;
                    _0x3acd08[_0x1a3bcb(0x2f7)](_0x4e9f90, _0x12335e, _0x563b71, _0x5982c8, _0x1351ce + 0xe), _0x5982c8[_0x1351ce + 0x11] = _0x4e9f90[_0x12335e + 0x3];
                }
            }
            return _0x558238;
        }
        [_0x6027f5(0xace)](_0x21daa9) {
            var _0xe99ea1 = _0x6027f5, _0x1fd1c3 = _0x21daa9[_0xe99ea1(0xacf)][_0xe99ea1(0xad0)]['vertexCount'];
            return !(this[_0xe99ea1(0xac8)] + _0x1fd1c3 > _0x2fcfcc['maxBatchVertexCount']);
        }
        [_0x6027f5(0x207)](_0x455d60) {
            var _0x1f49f2 = _0x6027f5, _0x3c0e3c = _0x455d60[_0x1f49f2(0xacf)]['sharedMesh'], _0x4b6d0a = _0x3c0e3c['vertexCount'];
            this[_0x1f49f2(0xac7)][_0x1f49f2(0x2ac)](_0x455d60);
            var _0xd7bacf = _0x455d60[_0x1f49f2(0x5e8)];
            _0xd7bacf[_0x1f49f2(0xad1)] = !0x0, _0xd7bacf[_0x1f49f2(0xad2)] = this;
            for (var _0x386c45 = _0xd7bacf[_0x1f49f2(0x600)], _0x520fba = 0x0, _0x427731 = _0x386c45[_0x1f49f2(0x205)]; _0x520fba < _0x427731; _0x520fba++)
                _0x386c45[_0x520fba][_0x1f49f2(0xaa4)] = this;
            this[_0x1f49f2(0xad3)] += _0x3c0e3c[_0x1f49f2(0x629)][_0x1f49f2(0xa0b)], this['_currentBatchVertexCount'] += _0x4b6d0a;
        }
        [_0x6027f5(0x3b4)](_0x50fffc) {
            var _0x39bc5c = _0x6027f5, _0x563adf = _0x50fffc[_0x39bc5c(0xacf)][_0x39bc5c(0xad0)], _0xc67cdc = this['_batchElements'][_0x39bc5c(0x2f9)](_0x50fffc);
            if (-0x1 !== _0xc67cdc) {
                this[_0x39bc5c(0xac7)][_0x39bc5c(0x33a)](_0xc67cdc, 0x1);
                for (var _0xe3f304 = _0x50fffc[_0x39bc5c(0x5e8)][_0x39bc5c(0x600)], _0x505681 = 0x0, _0x4ebeab = _0xe3f304[_0x39bc5c(0x205)]; _0x505681 < _0x4ebeab; _0x505681++)
                    _0xe3f304[_0x505681]['staticBatch'] = null;
                this[_0x39bc5c(0xad3)] = this[_0x39bc5c(0xad3)] - _0x563adf[_0x39bc5c(0x629)]['indexCount'], this[_0x39bc5c(0xac8)] = this['_currentBatchVertexCount'] - _0x563adf[_0x39bc5c(0xad4)], _0x50fffc['_render']['_isPartOfStaticBatch'] = !0x1;
            }
        }
        [_0x6027f5(0xad5)]() {
            var _0x1fd439 = _0x6027f5;
            this[_0x1fd439(0x4f6)] && (this[_0x1fd439(0x4f6)][_0x1fd439(0x364)](), this['_indexBuffer'][_0x1fd439(0x364)](), _0x387b86['Resource']['_addGPUMemory'](-(this[_0x1fd439(0x4f6)][_0x1fd439(0x451)] + this[_0x1fd439(0x629)][_0x1fd439(0x451)])));
            var _0x1f11a1 = _0x387b86[_0x1fd439(0x303)][_0x1fd439(0x304)], _0x2e81d4 = 0x0, _0x87f000 = 0x0, _0xd40e59 = this['batchOwner'], _0x1b5dc1 = this[_0x1fd439(0x455)]['vertexStride'] / 0x4, _0x4a88f4 = new Float32Array(_0x1b5dc1 * this['_currentBatchVertexCount']), _0x45ab4a = new Uint16Array(this[_0x1fd439(0xad3)]);
            this[_0x1fd439(0x4f6)] = new _0x2ce777(this['_vertexDeclaration'][_0x1fd439(0x4e5)] * this['_currentBatchVertexCount'], _0x1f11a1[_0x1fd439(0x4fa)]), this[_0x1fd439(0x4f6)][_0x1fd439(0x456)] = this[_0x1fd439(0x455)], this[_0x1fd439(0x629)] = new _0x67ef8f(_0x18be32[_0x1fd439(0x8c9)][_0x1fd439(0x8cb)], this[_0x1fd439(0xad3)], _0x1f11a1[_0x1fd439(0x4fa)]);
            for (var _0x18242f = 0x0, _0x333f5e = this['_batchElements'][_0x1fd439(0x205)]; _0x18242f < _0x333f5e; _0x18242f++) {
                for (var _0x2fef80, _0x22f2a4 = this['_batchElements'][_0x18242f], _0x6b4e71 = _0x22f2a4['meshFilter'][_0x1fd439(0xad0)], _0x283a28 = this[_0x1fd439(0xac9)](_0x4a88f4, _0x2e81d4, _0xd40e59 ? _0xd40e59[_0x1fd439(0x3d5)] : null, _0x22f2a4[_0x1fd439(0x3d5)], _0x22f2a4['_render'], _0x6b4e71), _0xb53a78 = _0x6b4e71[_0x1fd439(0x629)][_0x1fd439(0x319)](), _0x463ae5 = _0x2e81d4, _0x13d342 = _0x87f000 + _0xb53a78[_0x1fd439(0x205)], _0x335cbb = _0x22f2a4[_0x1fd439(0x5e8)][_0x1fd439(0x600)], _0x515cd3 = 0x0, _0x8867bd = _0x6b4e71[_0x1fd439(0xad6)]; _0x515cd3 < _0x8867bd; _0x515cd3++) {
                    var _0x24f831 = _0x6b4e71[_0x1fd439(0x5e6)][_0x515cd3], _0x5901a4 = _0x87f000 + _0x24f831[_0x1fd439(0x62d)], _0x1894c5 = _0x335cbb[_0x515cd3];
                    _0x1894c5[_0x1fd439(0xad7)] = _0x5901a4, _0x1894c5[_0x1fd439(0xad8)] = _0x5901a4 + _0x24f831[_0x1fd439(0x62b)];
                }
                if (_0x45ab4a[_0x1fd439(0x31f)](_0xb53a78, _0x87f000), _0xd40e59 ? _0x22f2a4['_transform'][_0x1fd439(0xa8c)] !== _0xd40e59['transform']['_isFrontFaceInvert'] : _0x22f2a4[_0x1fd439(0x3d5)]['_isFrontFaceInvert'])
                    for (_0x2fef80 = _0x87f000; _0x2fef80 < _0x13d342; _0x2fef80 += 0x3) {
                        _0x45ab4a[_0x2fef80] = _0x463ae5 + _0x45ab4a[_0x2fef80];
                        var _0xc0f729 = _0x45ab4a[_0x2fef80 + 0x1], _0x384861 = _0x45ab4a[_0x2fef80 + 0x2];
                        _0x45ab4a[_0x2fef80 + 0x1] = _0x463ae5 + _0x384861, _0x45ab4a[_0x2fef80 + 0x2] = _0x463ae5 + _0xc0f729;
                    }
                else {
                    for (_0x2fef80 = _0x87f000; _0x2fef80 < _0x13d342; _0x2fef80 += 0x3)
                        _0x45ab4a[_0x2fef80] = _0x463ae5 + _0x45ab4a[_0x2fef80], _0x45ab4a[_0x2fef80 + 0x1] = _0x463ae5 + _0x45ab4a[_0x2fef80 + 0x1], _0x45ab4a[_0x2fef80 + 0x2] = _0x463ae5 + _0x45ab4a[_0x2fef80 + 0x2];
                }
                _0x87f000 += _0xb53a78['length'], _0x2e81d4 += _0x283a28;
            }
            this[_0x1fd439(0x4f6)][_0x1fd439(0x45d)](_0x4a88f4[_0x1fd439(0x454)]), this['_indexBuffer']['setData'](_0x45ab4a);
            var _0x1b45a9 = this[_0x1fd439(0x4f6)]['_byteLength'] + this['_indexBuffer']['_byteLength'];
            _0x387b86[_0x1fd439(0x324)]['_addGPUMemory'](_0x1b45a9), this[_0x1fd439(0x4f8)][_0x1fd439(0x452)](), this[_0x1fd439(0x4f8)][_0x1fd439(0x4eb)](this['_vertexBuffer']), this[_0x1fd439(0x4f8)][_0x1fd439(0x4f3)](this[_0x1fd439(0x629)]), this[_0x1fd439(0x4f8)][_0x1fd439(0x4f9)]();
        }
        [_0x6027f5(0x5e8)](_0x1fd801) {
            var _0x29047b = _0x6027f5;
            this[_0x29047b(0x4f8)][_0x29047b(0x452)]();
            for (var _0x3585ea = _0x387b86['LayaGL'][_0x29047b(0x304)], _0xc8347f = _0x1fd801[_0x29047b(0x5f3)][_0x29047b(0xaab)], _0x58655c = _0xc8347f[_0x29047b(0x1fe)], _0x5c8f5a = 0x0, _0x43f92c = 0x0, _0x3266a9 = _0xc8347f[_0x29047b(0x205)], _0x2dc1c5 = 0x1; _0x2dc1c5 < _0x3266a9; _0x2dc1c5++) {
                if (_0x58655c[_0x2dc1c5 - 0x1][_0x29047b(0xad8)] !== _0x58655c[_0x2dc1c5]['staticBatchIndexStart']) {
                    var _0x2240f2 = _0x58655c[_0x5c8f5a][_0x29047b(0xad7)], _0x2b98ad = _0x58655c[_0x43f92c][_0x29047b(0xad8)] - _0x2240f2;
                    _0x3585ea[_0x29047b(0x8d4)](_0x3585ea[_0x29047b(0x506)], _0x2b98ad, _0x3585ea['UNSIGNED_SHORT'], 0x2 * _0x2240f2), _0x5c8f5a = ++_0x43f92c, _0x387b86['Stat'][_0x29047b(0x62e)] += _0x2b98ad / 0x3;
                } else
                    _0x43f92c++;
            }
            _0x2240f2 = _0x58655c[_0x5c8f5a][_0x29047b(0xad7)], _0x2b98ad = _0x58655c[_0x43f92c][_0x29047b(0xad8)] - _0x2240f2, _0x3585ea[_0x29047b(0x8d4)](_0x3585ea[_0x29047b(0x506)], _0x2b98ad, _0x3585ea['UNSIGNED_SHORT'], 0x2 * _0x2240f2), _0x387b86['Stat'][_0x29047b(0x502)]++, _0x387b86[_0x29047b(0x4dc)][_0x29047b(0xa8b)] += _0x3266a9 - 0x1, _0x387b86[_0x29047b(0x4dc)][_0x29047b(0x62e)] += _0x2b98ad / 0x3;
        }
        ['dispose']() {
            var _0x361070 = _0x6027f5, _0x2d9bd3 = this[_0x361070(0x4f6)][_0x361070(0x451)] + this[_0x361070(0x629)][_0x361070(0x451)];
            _0x387b86['Resource'][_0x361070(0xad9)](-_0x2d9bd3), this[_0x361070(0xac7)] = null, this[_0x361070(0xada)] = null, this[_0x361070(0x455)] = null, this['_bufferState'][_0x361070(0x364)](), this[_0x361070(0x4f6)]['destroy'](), this[_0x361070(0x629)]['destroy'](), this[_0x361070(0x4f6)] = null, this[_0x361070(0x629)] = null, this['_bufferState'] = null;
        }
    }
    _0x2fcfcc[_0x6027f5(0x59f)] = new _0x3697cd(), _0x2fcfcc[_0x6027f5(0x3a1)] = new _0x3697cd(), _0x2fcfcc[_0x6027f5(0x334)] = new _0x528999(), _0x2fcfcc['_tempMatrix4x40'] = new _0x6b4d98(), _0x2fcfcc[_0x6027f5(0xacb)] = new _0x6b4d98(), _0x2fcfcc[_0x6027f5(0xacc)] = new _0x6b4d98(), _0x2fcfcc[_0x6027f5(0xadb)] = 0xffff, _0x2fcfcc['_batchIDCounter'] = 0x0;
    class _0x34c00f extends _0x423717 {
        constructor() {
            var _0x4e3943 = _0x6027f5;
            super(), this[_0x4e3943(0xadc)] = [], this['_updateCountMark'] = 0x0;
        }
        static ['__init__']() {
            var _0x4a56d9 = _0x6027f5;
            _0x34c00f[_0x4a56d9(0xadd)] = _0x73b54a[_0x4a56d9(0x607)]('POSITION,NORMAL,COLOR,UV,UV1,TANGENT');
        }
        [_0x6027f5(0xabf)](_0xbb4d6, _0x20d38d) {
            var _0x3bc663 = _0x6027f5, _0x4069a2 = _0xbb4d6['_render'], _0xefaa5f = _0x20d38d['_render'], _0x117582 = _0xbb4d6[_0x3bc663(0xacf)][_0x3bc663(0xad0)], _0x1f1e8e = _0x20d38d['meshFilter'][_0x3bc663(0xad0)], _0xd63083 = _0x4069a2[_0x3bc663(0xaa8)] - _0xefaa5f[_0x3bc663(0xaa8)];
            if (0x0 === _0xd63083) {
                var _0x528d82 = (_0x4069a2[_0x3bc663(0xaac)] ? 0x1 : 0x0) - (_0xefaa5f[_0x3bc663(0xaac)] ? 0x1 : 0x0);
                if (0x0 === _0x528d82) {
                    var _0x24fd19 = _0x4069a2[_0x3bc663(0xade)] && _0xefaa5f[_0x3bc663(0xade)] ? _0x4069a2[_0x3bc663(0xade)]['id'] - _0xefaa5f['sharedMaterial']['id'] : 0x0;
                    if (0x0 === _0x24fd19) {
                        var _0x2ed84e = _0x117582['_vertexBuffer'][_0x3bc663(0x456)]['id'] - _0x1f1e8e['_vertexBuffer']['vertexDeclaration']['id'];
                        return 0x0 === _0x2ed84e ? _0x1f1e8e[_0x3bc663(0x629)][_0x3bc663(0xa0b)] - _0x117582['_indexBuffer'][_0x3bc663(0xa0b)] : _0x2ed84e;
                    }
                    return _0x24fd19;
                }
                return _0x528d82;
            }
            return _0xd63083;
        }
        [_0x6027f5(0xaad)]() {
            var _0x2c807d = _0x6027f5, _0x257285 = this[_0x2c807d(0xab7)][this[_0x2c807d(0xac2)]++];
            return _0x257285 || (_0x257285 = new _0x2057f1(), this[_0x2c807d(0xab7)][this[_0x2c807d(0xac2)] - 0x1] = _0x257285, _0x257285[_0x2c807d(0xaab)] = new _0x2af7e0()), _0x257285;
        }
        [_0x6027f5(0xadf)](_0x43b714, _0x13f005, _0x315419) {
            var _0x5c37bb = _0x6027f5, _0xcc67ab = _0x43b714[_0x315419];
            return _0xcc67ab || (_0xcc67ab = _0x43b714[_0x315419] = new _0x2fcfcc(_0x13f005, _0x34c00f['_verDec']), this['_staticBatches'][_0xcc67ab[_0x5c37bb(0xaa9)]] = _0xcc67ab), _0xcc67ab;
        }
        ['_initStaticBatchs'](_0x336a29) {
            var _0x3a10b7 = _0x6027f5, _0x5d8e37 = this[_0x3a10b7(0xab5)];
            this[_0x3a10b7(0x828)](_0x5d8e37, 0x0, _0x5d8e37[_0x3a10b7(0x205)] - 0x1);
            for (var _0x3092c1, _0x3c7357 = [], _0x4d71b1 = !0x1, _0x22155e = 0x0, _0x3a84a4 = 0x0, _0x1518c1 = _0x5d8e37['length']; _0x3a84a4 < _0x1518c1; _0x3a84a4++) {
                var _0x53cbaf = _0x5d8e37[_0x3a84a4];
                if (_0x4d71b1)
                    _0x3092c1['addTest'](_0x53cbaf) ? _0x3092c1[_0x3a10b7(0x207)](_0x53cbaf) : (_0x4d71b1 = !0x1, _0x22155e++);
                else
                    _0x3a84a4 !== _0x1518c1 - 0x1 && ((_0x3092c1 = this[_0x3a10b7(0xadf)](_0x3c7357, _0x336a29, _0x22155e))[_0x3a10b7(0x207)](_0x53cbaf), _0x4d71b1 = !0x0);
            }
            for (_0x3a84a4 = 0x0, _0x1518c1 = _0x3c7357['length']; _0x3a84a4 < _0x1518c1; _0x3a84a4++) {
                var _0x5ad1e1 = _0x3c7357[_0x3a84a4];
                _0x5ad1e1 && _0x5ad1e1[_0x3a10b7(0xad5)]();
            }
            this[_0x3a10b7(0xab5)][_0x3a10b7(0x205)] = 0x0;
        }
        [_0x6027f5(0xae0)](_0x453178) {
            var _0x454cda = _0x6027f5, _0x247221 = _0x453178[_0x454cda(0x5e8)], _0x44c2d4 = _0x247221['_staticBatch'], _0x142eca = _0x44c2d4[_0x454cda(0xac7)], _0x43e741 = _0x142eca[_0x454cda(0x2f9)](_0x453178);
            if (-0x1 !== _0x43e741) {
                _0x142eca['splice'](_0x43e741, 0x1), _0x247221['_staticBatch'] = null;
                for (var _0x3b828a = _0x247221[_0x454cda(0x600)], _0x15b348 = 0x0, _0x53c336 = _0x3b828a[_0x454cda(0x205)]; _0x15b348 < _0x53c336; _0x15b348++)
                    _0x3b828a[_0x15b348]['staticBatch'] = null;
            }
            0x0 === _0x142eca[_0x454cda(0x205)] && (delete this[_0x454cda(0xab6)][_0x44c2d4[_0x454cda(0xaa9)]], _0x44c2d4[_0x454cda(0xac5)]());
        }
        [_0x6027f5(0x9c1)]() {
            var _0x3e5383 = _0x6027f5;
            super[_0x3e5383(0x9c1)](), this[_0x3e5383(0xaaa)]++;
        }
        [_0x6027f5(0xac3)]() {
            var _0x40bed2 = _0x6027f5;
            for (var _0x5825d3 in this[_0x40bed2(0xab6)]) {
                var _0x5e5e69 = this[_0x40bed2(0xab6)][_0x5825d3];
                0x0 === _0x5e5e69[_0x40bed2(0xac7)][_0x40bed2(0x205)] && (_0x5e5e69['dispose'](), delete this[_0x40bed2(0xab6)][_0x5825d3]);
            }
        }
        ['getBatchOpaquaMark'](_0x237e71, _0x36d937, _0x50bbfd, _0x5ee448) {
            var _0xc85b55 = _0x6027f5, _0x391a25 = _0x36d937 ? 0x1 : 0x0, _0x323270 = this[_0xc85b55(0xadc)][_0x237e71] || (this['_opaqueBatchMarks'][_0x237e71] = []), _0x58bc2f = _0x323270[_0x391a25] || (_0x323270[_0x391a25] = []), _0x1187e2 = _0x58bc2f[_0x50bbfd] || (_0x58bc2f[_0x50bbfd] = []);
            return _0x1187e2[_0x5ee448] || (_0x1187e2[_0x5ee448] = new _0x4f55ba());
        }
    }
    _0x34c00f[_0x6027f5(0x304)] = new _0x34c00f(), (_0x50ebd1 = _0x18be32[_0x6027f5(0xae1)] || (_0x18be32['ReflectionProbeMode'] = {}))[_0x50ebd1[_0x6027f5(0x8fb)] = 0x0] = _0x6027f5(0x8fb), _0x50ebd1[_0x50ebd1[_0x6027f5(0xae2)] = 0x1] = _0x6027f5(0xae2);
    class _0x24dd24 extends _0x44a154 {
        constructor() {
            var _0xb0ce1c = _0x6027f5;
            super(), this[_0xb0ce1c(0xae3)] = !0x1, this[_0xb0ce1c(0xae4)] = new _0x3697cd(), this['_offset'] = new _0x3697cd(), this['_reflectionHDRParams'] = new _0x5b8e4e(), this[_0xb0ce1c(0xae5)] = _0x387b86[_0xb0ce1c(0xae6)]['Normal'], this[_0xb0ce1c(0xaa6)] = !0x1;
        }
        get [_0x6027f5(0xae7)]() {
            var _0x20b57d = _0x6027f5;
            return this[_0x20b57d(0xae3)];
        }
        set [_0x6027f5(0xae7)](_0x3b6846) {
            var _0x4bc677 = _0x6027f5;
            this[_0x4bc677(0xae3)] = _0x3b6846;
        }
        get [_0x6027f5(0xae8)]() {
            var _0x32a13e = _0x6027f5;
            return this[_0x32a13e(0xae9)];
        }
        set [_0x6027f5(0xae8)](_0x59118f) {
            var _0x15bde1 = _0x6027f5;
            this[_0x15bde1(0xae9)] = _0x59118f;
        }
        get [_0x6027f5(0x927)]() {
            var _0x58c708 = _0x6027f5;
            return this[_0x58c708(0x926)];
        }
        set [_0x6027f5(0x927)](_0x20c172) {
            var _0x54cf4b = _0x6027f5;
            _0x20c172 = Math['max'](Math[_0x54cf4b(0x212)](_0x20c172, 0x1), 0x0), this[_0x54cf4b(0xaea)]['x'] = _0x20c172, this[_0x54cf4b(0xae5)] == _0x387b86[_0x54cf4b(0xae6)][_0x54cf4b(0xaeb)] && (this[_0x54cf4b(0xaea)]['x'] *= 0x5), this['_intensity'] = _0x20c172;
        }
        get ['reflectionTexture']() {
            var _0x59f9b6 = _0x6027f5;
            return this[_0x59f9b6(0xaec)];
        }
        set [_0x6027f5(0xaed)](_0xa218d1) {
            var _0x21afa7 = _0x6027f5;
            this[_0x21afa7(0xaec)] = _0xa218d1, this[_0x21afa7(0xaec)]['_addReference']();
        }
        get [_0x6027f5(0x812)]() {
            var _0x2a10be = _0x6027f5;
            return this[_0x2a10be(0xa5d)];
        }
        set ['bounds'](_0x5dc341) {
            var _0x856417 = _0x6027f5;
            this[_0x856417(0xa5d)] = _0x5dc341;
        }
        get [_0x6027f5(0xaee)]() {
            var _0x331f67 = _0x6027f5;
            return this['_bounds'][_0x331f67(0xa4f)]();
        }
        get [_0x6027f5(0xaef)]() {
            var _0x10cae6 = _0x6027f5;
            return this['_bounds'][_0x10cae6(0xa47)]();
        }
        get ['probePosition']() {
            var _0x573351 = _0x6027f5;
            return this[_0x573351(0x3d6)][_0x573351(0x5a2)];
        }
        get [_0x6027f5(0xaf0)]() {
            var _0x558101 = _0x6027f5;
            return this[_0x558101(0xaea)];
        }
        set [_0x6027f5(0xaf0)](_0x57165a) {
            this['_reflectionHDRParams'] = _0x57165a;
        }
        [_0x6027f5(0x67c)](_0x5c6ed4, _0x24d899) {
            var _0x34aacc = _0x6027f5;
            super[_0x34aacc(0x67c)](_0x5c6ed4, _0x24d899), this[_0x34aacc(0xae3)] = _0x5c6ed4[_0x34aacc(0xae7)], this[_0x34aacc(0xae9)] = _0x5c6ed4[_0x34aacc(0xae8)], this['_reflectionTexture'] = _0x387b86[_0x34aacc(0x3bd)][_0x34aacc(0x3b7)](_0x5c6ed4['reflection']);
            var _0x4a3453 = this[_0x34aacc(0x3d6)]['position'];
            this[_0x34aacc(0xae4)][_0x34aacc(0x1fa)](_0x5c6ed4['boxSize']), _0x3697cd['scale'](this[_0x34aacc(0xae4)], 0.5, _0x24dd24[_0x34aacc(0xaf1)]), this['_offset'][_0x34aacc(0x1fa)](_0x5c6ed4[_0x34aacc(0xaf2)]);
            var _0x20ea22 = new _0x3697cd(), _0xb4edd2 = new _0x3697cd();
            _0x3697cd[_0x34aacc(0x207)](_0x4a3453, _0x24dd24['TEMPVECTOR3'], _0xb4edd2), _0x3697cd[_0x34aacc(0x207)](_0xb4edd2, this['_offset'], _0xb4edd2), _0x3697cd[_0x34aacc(0x28a)](_0x4a3453, _0x24dd24[_0x34aacc(0xaf1)], _0x20ea22), _0x3697cd[_0x34aacc(0x207)](_0x20ea22, this['_offset'], _0x20ea22), this[_0x34aacc(0xae5)] = _0x5c6ed4[_0x34aacc(0xaf3)], this['intensity'] = _0x5c6ed4[_0x34aacc(0x927)], this[_0x34aacc(0xa5d)] ? (this[_0x34aacc(0xa5d)][_0x34aacc(0xa62)](_0x20ea22), this[_0x34aacc(0xa5d)]['setMax'](_0xb4edd2)) : this[_0x34aacc(0x812)] = new _0xf16d64(_0x20ea22, _0xb4edd2);
        }
        [_0x6027f5(0xaf4)](_0x18b746) {
            var _0x51bc27 = _0x6027f5;
            this[_0x51bc27(0xaf5)] = _0x18b746;
        }
        [_0x6027f5(0xaf6)]() {
            var _0x5e38fb = _0x6027f5;
            return this[_0x5e38fb(0xaf5)];
        }
        ['_onActive']() {
            var _0x1986a9 = _0x6027f5;
            super[_0x1986a9(0x8f7)](), this[_0x1986a9(0xaec)] && this[_0x1986a9(0x5ca)][_0x1986a9(0xaf7)]['add'](this);
        }
        [_0x6027f5(0x8f8)]() {
            var _0x154909 = _0x6027f5;
            super[_0x154909(0x8f8)](), this[_0x154909(0xaed)] && this[_0x154909(0x5ca)][_0x154909(0xaf7)]['remove'](this);
        }
        [_0x6027f5(0x364)](_0xd68ce6 = !0x0) {
            var _0x24c91f = _0x6027f5;
            this[_0x24c91f(0x5cf)] || (super[_0x24c91f(0x364)](_0xd68ce6), this[_0x24c91f(0xaec)] && this['_reflectionTexture'][_0x24c91f(0x35c)](), this['_reflectionTexture'] = null, this['_bounds'] = null);
        }
        [_0x6027f5(0x345)](_0x953359, _0x2b8e54, _0x34957e) {
            var _0x94a10 = _0x6027f5, _0x57f763 = _0x953359;
            _0x57f763[_0x94a10(0x812)] = this['bounds'], _0x57f763[_0x94a10(0xae7)] = this[_0x94a10(0xae7)], _0x57f763['importance'] = this['importance'], _0x57f763['_size'] = this['_size'], _0x57f763[_0x94a10(0x4e4)] = this['_offset'], _0x57f763[_0x94a10(0x927)] = this['intensity'], _0x57f763['reflectionHDRParams'] = this[_0x94a10(0xaf0)], super[_0x94a10(0x345)](_0x953359, _0x2b8e54, _0x34957e);
        }
    }
    _0x24dd24[_0x6027f5(0xaf1)] = new _0x3697cd(), _0x24dd24['defaultTextureHDRDecodeValues'] = new _0x5b8e4e(0x1, 0x1, 0x0, 0x0);
    class _0x40d4de extends _0x387b86[_0x6027f5(0x66c)] {
        constructor(_0x2c5a4f) {
            var _0x27415f = _0x6027f5;
            super(), this['_lightmapScaleOffset'] = new _0x5b8e4e(0x1, 0x1, 0x0, 0x0), this['_indexInList'] = -0x1, this[_0x27415f(0xaf8)] = -0x1, this['_boundsChange'] = !0x0, this[_0x27415f(0x816)] = !0x1, this[_0x27415f(0xaf9)] = !0x0, this[_0x27415f(0xafa)] = [], this['_renderMark'] = -0x1, this[_0x27415f(0xafb)] = -0x1, this[_0x27415f(0xafc)] = _0x18be32[_0x27415f(0xae1)][_0x27415f(0xae2)], this['_updateMark'] = -0x1, this[_0x27415f(0x5f5)] = -0x1, this[_0x27415f(0xad1)] = !0x1, this[_0x27415f(0xad2)] = null, this[_0x27415f(0x5bc)] = ++_0x40d4de['_uniqueIDCounter'], this['_indexInCastShadowList'] = -0x1, this[_0x27415f(0xa5d)] = new _0xf16d64(_0x3697cd[_0x27415f(0x21b)], _0x3697cd[_0x27415f(0x21b)]), this['_renderElements'] = [], this['_owner'] = _0x2c5a4f, this['_enable'] = !0x0, this['_materialsInstance'] = [], this['_shaderValues'] = new _0x3985fd(null), this[_0x27415f(0xaa8)] = -0x1, this[_0x27415f(0xaac)] = !0x1, this['sortingFudge'] = 0x0, _0x2c5a4f && this['_owner'][_0x27415f(0x3d6)]['on'](_0x387b86[_0x27415f(0x5b1)][_0x27415f(0x5ae)], this, this[_0x27415f(0xafd)]);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['lightmapIndex']() {
            var _0x3999f4 = _0x6027f5;
            return this[_0x3999f4(0xafe)];
        }
        set [_0x6027f5(0xaa8)](_0x52b7e4) {
            var _0x164806 = _0x6027f5;
            this[_0x164806(0xafe)] = _0x52b7e4;
        }
        get [_0x6027f5(0xacd)]() {
            return this['_lightmapScaleOffset'];
        }
        set ['lightmapScaleOffset'](_0x38d42f) {
            var _0x188296 = _0x6027f5;
            if (!_0x38d42f)
                throw 'BaseRender:\x20lightmapScaleOffset\x20can\x27t\x20be\x20null.';
            this[_0x188296(0xaff)] = _0x38d42f, this[_0x188296(0x4e2)]['setVector'](_0x221092[_0x188296(0xa78)], _0x38d42f);
        }
        get [_0x6027f5(0x659)]() {
            var _0x46eb34 = _0x6027f5;
            return this[_0x46eb34(0x65a)];
        }
        set [_0x6027f5(0x659)](_0x4b59d0) {
            var _0x13bce5 = _0x6027f5;
            this[_0x13bce5(0x65a)] = !!_0x4b59d0;
        }
        get [_0x6027f5(0x8d5)]() {
            var _0x4a273c = _0x6027f5, _0x126078 = this[_0x4a273c(0xafa)][0x0];
            if (_0x126078 && !this[_0x4a273c(0xb00)][0x0]) {
                var _0x39fcc3 = this[_0x4a273c(0xb01)](_0x126078, 0x0), _0x4ecacc = this[_0x4a273c(0x600)][0x0];
                _0x4ecacc && (_0x4ecacc[_0x4a273c(0x8d5)] = _0x39fcc3);
            }
            return this['_sharedMaterials'][0x0];
        }
        set [_0x6027f5(0x8d5)](_0xbda263) {
            var _0x7c4cbe = _0x6027f5;
            this[_0x7c4cbe(0xade)] = _0xbda263, this['_isSupportReflection']();
        }
        get ['materials']() {
            var _0x3cd7c7 = _0x6027f5;
            for (var _0x5aac87 = 0x0, _0xa8d17c = this[_0x3cd7c7(0xafa)]['length']; _0x5aac87 < _0xa8d17c; _0x5aac87++)
                if (!this[_0x3cd7c7(0xb00)][_0x5aac87]) {
                    var _0x235d82 = this[_0x3cd7c7(0xb01)](this[_0x3cd7c7(0xafa)][_0x5aac87], _0x5aac87), _0x2931d2 = this[_0x3cd7c7(0x600)][_0x5aac87];
                    _0x2931d2 && (_0x2931d2[_0x3cd7c7(0x8d5)] = _0x235d82);
                }
            return this[_0x3cd7c7(0xafa)][_0x3cd7c7(0xb02)]();
        }
        set ['materials'](_0x2e5f05) {
            this['sharedMaterials'] = _0x2e5f05, this['_isSupportReflection']();
        }
        get [_0x6027f5(0xade)]() {
            var _0x339afe = _0x6027f5;
            return this[_0x339afe(0xafa)][0x0];
        }
        set [_0x6027f5(0xade)](_0x180184) {
            var _0x1385d0 = _0x6027f5, _0x2db70d = this[_0x1385d0(0xafa)][0x0];
            if (_0x2db70d !== _0x180184) {
                this['_sharedMaterials'][0x0] = _0x180184, this[_0x1385d0(0xb00)][0x0] = !0x1, this['_changeMaterialReference'](_0x2db70d, _0x180184);
                var _0x4083fd = this['_renderElements'][0x0];
                _0x4083fd && (_0x4083fd[_0x1385d0(0x8d5)] = _0x180184);
            }
            this['_isSupportReflection']();
        }
        get [_0x6027f5(0xb03)]() {
            var _0x3735d2 = _0x6027f5;
            return this[_0x3735d2(0xafa)][_0x3735d2(0xb02)]();
        }
        set [_0x6027f5(0xb03)](_0x3b9bbe) {
            var _0x264683 = _0x6027f5;
            for (var _0x534932 = this[_0x264683(0xb00)], _0x49014e = this[_0x264683(0xafa)], _0x5aa1ab = 0x0, _0x52b1f6 = _0x49014e['length']; _0x5aa1ab < _0x52b1f6; _0x5aa1ab++) {
                var _0x3f66ac = _0x49014e[_0x5aa1ab];
                _0x3f66ac && _0x3f66ac['_removeReference']();
            }
            if (!_0x3b9bbe)
                throw new Error(_0x264683(0xb04));
            var _0x1bc35c = _0x3b9bbe['length'];
            for (_0x534932[_0x264683(0x205)] = _0x1bc35c, _0x49014e[_0x264683(0x205)] = _0x1bc35c, _0x5aa1ab = 0x0; _0x5aa1ab < _0x1bc35c; _0x5aa1ab++) {
                _0x3f66ac = _0x49014e[_0x5aa1ab];
                var _0x4b2e64 = _0x3b9bbe[_0x5aa1ab];
                if (_0x3f66ac !== _0x4b2e64) {
                    _0x534932[_0x5aa1ab] = !0x1;
                    var _0x2be1c8 = this[_0x264683(0x600)][_0x5aa1ab];
                    _0x2be1c8 && (_0x2be1c8[_0x264683(0x8d5)] = _0x4b2e64);
                }
                _0x4b2e64 && _0x4b2e64['_addReference'](), _0x49014e[_0x5aa1ab] = _0x4b2e64;
            }
            this[_0x264683(0xb05)]();
        }
        get ['bounds']() {
            var _0x4b0963 = _0x6027f5;
            return this[_0x4b0963(0xb06)] && (this[_0x4b0963(0xb07)](), this[_0x4b0963(0xb06)] = !0x1), this[_0x4b0963(0xa5d)];
        }
        set [_0x6027f5(0xaac)](_0x5074f0) {
            var _0x791fdf = _0x6027f5;
            this[_0x791fdf(0xb08)] !== _0x5074f0 && (this[_0x791fdf(0xb08)] = _0x5074f0, _0x5074f0 ? this[_0x791fdf(0x4e2)][_0x791fdf(0x49a)](_0x221092[_0x791fdf(0xa6b)]) : this['_shaderValues'][_0x791fdf(0x49b)](_0x221092[_0x791fdf(0xa6b)]));
        }
        get ['receiveShadow']() {
            var _0x7d065f = _0x6027f5;
            return this[_0x7d065f(0xb08)];
        }
        get [_0x6027f5(0xb09)]() {
            var _0xf817d3 = _0x6027f5;
            return this[_0xf817d3(0x816)];
        }
        set ['castShadow'](_0x86464e) {
            var _0x1d3038 = _0x6027f5;
            this[_0x1d3038(0x816)] = _0x86464e;
        }
        get [_0x6027f5(0xb0a)]() {
            var _0xc22a93 = _0x6027f5;
            return this[_0xc22a93(0xad1)];
        }
        get [_0x6027f5(0x3c3)]() {
            var _0x2a7201 = _0x6027f5;
            return -0x1 == this['_renderMark'] || this['_renderMark'] == _0x387b86[_0x2a7201(0x4dc)][_0x2a7201(0x815)] - 0x1;
        }
        set [_0x6027f5(0xb0b)](_0x2edfd4) {
            var _0x5820ce = _0x6027f5;
            this[_0x5820ce(0xafc)] = _0x2edfd4;
        }
        get [_0x6027f5(0xb0b)]() {
            var _0x1dd0c0 = _0x6027f5;
            return this[_0x1dd0c0(0xafc)];
        }
        [_0x6027f5(0xb0c)]() {
            var _0x46e205 = _0x6027f5;
            return this[_0x46e205(0xb0d)];
        }
        [_0x6027f5(0xb0e)](_0x52f732) {
            var _0x5deabf = _0x6027f5;
            _0x52f732 || -0x1 !== this['_indexInOctreeMotionList'] && this[_0x5deabf(0xb0d)][_0x5deabf(0x821)][_0x5deabf(0xb0f)](this), this['_octreeNode'] = _0x52f732;
        }
        ['_getIndexInMotionList']() {
            var _0x20e0b5 = _0x6027f5;
            return this[_0x20e0b5(0xafb)];
        }
        ['_setIndexInMotionList'](_0x283233) {
            var _0x4736b1 = _0x6027f5;
            this[_0x4736b1(0xafb)] = _0x283233;
        }
        ['_changeMaterialReference'](_0x48c0e8, _0x3f4f09) {
            var _0x53a831 = _0x6027f5;
            _0x48c0e8 && _0x48c0e8[_0x53a831(0x35c)](), _0x3f4f09[_0x53a831(0x35f)]();
        }
        ['_getInstanceMaterial'](_0x1e49b1, _0x2e6336) {
            var _0x1d9e27 = _0x6027f5, _0x3da905 = _0x1e49b1[_0x1d9e27(0x1fd)]();
            return _0x3da905[_0x1d9e27(0x2b7)] = _0x3da905['name'] + _0x1d9e27(0xb10), this[_0x1d9e27(0xb00)][_0x2e6336] = !0x0, this[_0x1d9e27(0xb11)](this[_0x1d9e27(0xafa)][_0x2e6336], _0x3da905), this[_0x1d9e27(0xafa)][_0x2e6336] = _0x3da905, _0x3da905;
        }
        ['_isSupportReflection']() {
            var _0x253471 = _0x6027f5;
            this['_surportReflectionProbe'] = !0x1;
            for (var _0x30b6ac = this[_0x253471(0xafa)], _0x4bca74 = 0x0, _0x769666 = _0x30b6ac[_0x253471(0x205)]; _0x4bca74 < _0x769666; _0x4bca74++) {
                var _0x4a92c8 = _0x30b6ac[_0x4bca74];
                this[_0x253471(0xb12)] = this[_0x253471(0xb12)] || _0x4a92c8 && _0x4a92c8[_0x253471(0x509)]['_supportReflectionProbe'];
            }
        }
        [_0x6027f5(0xb13)]() {
            var _0x5bb619 = _0x6027f5;
            this[_0x5bb619(0xb12)] && 0x1 == this['_reflectionMode'] && this[_0x5bb619(0x3b0)] && this[_0x5bb619(0x3b0)][_0x5bb619(0xaf7)]['addMotionObject'](this);
        }
        [_0x6027f5(0xb14)]() {
            var _0x3a45b0 = _0x6027f5, _0x365c06 = this['_scene'][_0x3a45b0(0xb15)], _0x437aeb = this['_shaderValues'], _0x4a73a8 = this[_0x3a45b0(0xafe)];
            if (_0x4a73a8 >= 0x0 && _0x4a73a8 < _0x365c06[_0x3a45b0(0x205)]) {
                var _0x4a24d5 = _0x365c06[_0x4a73a8];
                _0x437aeb[_0x3a45b0(0x4ac)](_0x221092[_0x3a45b0(0xa6d)], _0x4a24d5[_0x3a45b0(0xb16)]), _0x437aeb[_0x3a45b0(0x49a)](_0x221092[_0x3a45b0(0xa6c)]), _0x4a24d5[_0x3a45b0(0xb17)] ? (_0x437aeb[_0x3a45b0(0x4ac)](_0x221092[_0x3a45b0(0xa7b)], _0x4a24d5[_0x3a45b0(0xb17)]), _0x437aeb[_0x3a45b0(0x49a)](_0x221092[_0x3a45b0(0xb18)])) : _0x437aeb[_0x3a45b0(0x49b)](_0x221092['SHADERDEFINE_LIGHTMAP_DIRECTIONAL']);
            } else
                _0x437aeb[_0x3a45b0(0x49b)](_0x221092['SAHDERDEFINE_LIGHTMAP']), _0x437aeb[_0x3a45b0(0x49b)](_0x221092['SHADERDEFINE_LIGHTMAP_DIRECTIONAL']);
        }
        [_0x6027f5(0xafd)](_0x5df9af) {
            var _0x2f4d1b = _0x6027f5;
            this['_boundsChange'] = !0x0, this['_octreeNode'] && (_0x5df9af &= _0xaeafd1[_0x2f4d1b(0x586)] | _0xaeafd1['TRANSFORM_WORLDQUATERNION'] | _0xaeafd1['TRANSFORM_WORLDSCALE']) && -0x1 === this[_0x2f4d1b(0xafb)] && this[_0x2f4d1b(0xb0d)][_0x2f4d1b(0x821)][_0x2f4d1b(0xb19)](this), this[_0x2f4d1b(0xb13)]();
        }
        ['_calculateBoundingBox']() {
            var _0x5b724d = _0x6027f5;
            throw _0x5b724d(0xb1a);
        }
        [_0x6027f5(0x801)]() {
            var _0x2c17d3 = _0x6027f5;
            return this[_0x2c17d3(0x2c1)];
        }
        [_0x6027f5(0x804)](_0x3ecfcf) {
            var _0x132e78 = _0x6027f5;
            this[_0x132e78(0x2c1)] = _0x3ecfcf;
        }
        ['_setBelongScene'](_0x48c852) {
            var _0x37ed96 = _0x6027f5;
            this[_0x37ed96(0x3b0)] = _0x48c852;
        }
        [_0x6027f5(0xa76)]() {
            this['_scene'] = null;
        }
        [_0x6027f5(0x818)](_0x55308a, _0x49d7e9) {
            return !0x0;
        }
        [_0x6027f5(0xb1b)]() {
        }
        [_0x6027f5(0x5f6)](_0x49b786, _0xf0c9a7) {
        }
        ['_renderUpdateWithCamera'](_0x2f8b23, _0x539c7b) {
        }
        [_0x6027f5(0x5ff)](_0x284d2c) {
        }
        ['_destroy']() {
            var _0x3c6c1d = _0x6027f5;
            -0x1 !== this['_indexInOctreeMotionList'] && this['_octreeNode'][_0x3c6c1d(0x821)][_0x3c6c1d(0xb0f)](this), this['offAll']();
            var _0x59a19b = 0x0, _0x86b74b = 0x0;
            for (_0x59a19b = 0x0, _0x86b74b = this[_0x3c6c1d(0x600)][_0x3c6c1d(0x205)]; _0x59a19b < _0x86b74b; _0x59a19b++)
                this[_0x3c6c1d(0x600)][_0x59a19b][_0x3c6c1d(0x364)]();
            for (_0x59a19b = 0x0, _0x86b74b = this[_0x3c6c1d(0xafa)][_0x3c6c1d(0x205)]; _0x59a19b < _0x86b74b; _0x59a19b++)
                this[_0x3c6c1d(0xafa)][_0x59a19b]['destroyed'] || this[_0x3c6c1d(0xafa)][_0x59a19b][_0x3c6c1d(0x35c)]();
            this[_0x3c6c1d(0x600)] = null, this[_0x3c6c1d(0x3dc)] = null, this[_0x3c6c1d(0xafa)] = null, this[_0x3c6c1d(0xa5d)] = null, this[_0x3c6c1d(0xaff)] = null, this['_scene'] = null;
        }
        [_0x6027f5(0xb1c)]() {
            var _0x2a2bbb = _0x6027f5;
            this[_0x2a2bbb(0xad1)] && (_0x34c00f[_0x2a2bbb(0x304)][_0x2a2bbb(0xae0)](this[_0x2a2bbb(0x3dc)]), this[_0x2a2bbb(0xad1)] = !0x1);
        }
    }
    _0x40d4de['_tempBoundBoxCorners'] = [
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd(),
        new _0x3697cd()
    ], _0x40d4de[_0x6027f5(0x4e9)] = 0x0, _0x40d4de[_0x6027f5(0xb1d)] = new _0x5b8e4e(0x1, 0x1, 0x0, 0x0);
    class _0x4d90da extends _0x40d4de {
        constructor(_0x2e0dfa) {
            var _0x230af4 = _0x6027f5;
            super(_0x2e0dfa), this[_0x230af4(0x5d7)] = new _0x6b4d98();
        }
        [_0x6027f5(0xb07)]() {
            var _0x1d91b3 = _0x6027f5, _0x741eee = this[_0x1d91b3(0x3dc)][_0x1d91b3(0x3d6)]['worldMatrix'], _0x43a5c3 = this[_0x1d91b3(0x3dc)][_0x1d91b3(0xb1e)];
            _0x43a5c3['_reCalculateBound'](), _0x43a5c3[_0x1d91b3(0xa5d)][_0x1d91b3(0xb1f)](_0x741eee, this[_0x1d91b3(0xa5d)]);
        }
        [_0x6027f5(0x5f7)](_0x404201, _0x58a286) {
            var _0x3f4ea2 = _0x6027f5, _0x99ed3f = _0x404201[_0x3f4ea2(0x5dd)], _0x44fdb5 = this[_0x3f4ea2(0x4e2)];
            if (_0x58a286) {
                var _0xc72e8b = _0x58a286[_0x3f4ea2(0x3d8)];
                _0x44fdb5[_0x3f4ea2(0x4aa)](_0x44a154[_0x3f4ea2(0x5d4)], _0xc72e8b), _0x6b4d98[_0x3f4ea2(0x27b)](_0x99ed3f, _0xc72e8b, this[_0x3f4ea2(0x5d7)]), _0x44fdb5['setMatrix4x4'](_0x44a154['MVPMATRIX'], this[_0x3f4ea2(0x5d7)]);
            } else
                _0x44fdb5['setMatrix4x4'](_0x44a154[_0x3f4ea2(0x5d4)], _0x6b4d98[_0x3f4ea2(0x286)]), _0x44fdb5[_0x3f4ea2(0x4aa)](_0x44a154[_0x3f4ea2(0x5df)], _0x99ed3f);
        }
    }
    class _0x1570e6 extends _0x221092 {
        constructor(_0x2ce4b9 = 0x2, _0xaee5b6 = null) {
            var _0xe0978f = _0x6027f5;
            super(_0xaee5b6), this[_0xe0978f(0xb20)] = !0x1, this['_isInRenders'] = !0x1, this[_0xe0978f(0xb1e)] = new _0xdddb6a(this, _0x2ce4b9), this['_render'] = new _0x4d90da(this), this['_changeRenderObjects'](0x0, _0x5b1b35['defaultMaterial']);
        }
        get [_0x6027f5(0x30a)]() {
            var _0x294d4e = _0x6027f5;
            return this['_geometryFilter'][_0x294d4e(0xa5a)];
        }
        set [_0x6027f5(0x30a)](_0x36d369) {
            var _0x15f661 = _0x6027f5;
            this[_0x15f661(0xb1e)][_0x15f661(0xa5f)](_0x36d369), this[_0x15f661(0xb1e)][_0x15f661(0xa5b)] = Math['min'](this[_0x15f661(0xb1e)][_0x15f661(0xa5b)], _0x36d369);
        }
        get [_0x6027f5(0x309)]() {
            var _0xa20c1a = _0x6027f5;
            return this[_0xa20c1a(0xb1e)][_0xa20c1a(0xa5b)];
        }
        set [_0x6027f5(0x309)](_0x3a5345) {
            var _0x54db5b = _0x6027f5;
            if (_0x3a5345 > this[_0x54db5b(0x30a)])
                throw _0x54db5b(0xb21);
            this['_geometryFilter'][_0x54db5b(0xa5b)] = _0x3a5345;
        }
        get [_0x6027f5(0xb22)]() {
            return this['_render'];
        }
        [_0x6027f5(0x8f8)]() {
            var _0x2a3411 = _0x6027f5;
            _0x387b86[_0x2a3411(0x4dc)][_0x2a3411(0xb23)]--, 0x0 != this['_geometryFilter'][_0x2a3411(0xa5b)] && this[_0x2a3411(0xb20)] && (this[_0x2a3411(0x3b0)][_0x2a3411(0xb24)](this[_0x2a3411(0x5e8)]), this[_0x2a3411(0xb25)] = !0x1), this[_0x2a3411(0xb20)] = !0x1;
        }
        [_0x6027f5(0x8f7)]() {
            var _0x256afb = _0x6027f5;
            _0x387b86[_0x256afb(0x4dc)][_0x256afb(0xb23)]++, this[_0x256afb(0xb20)] = !0x0, 0x0 != this['_geometryFilter']['_lineCount'] && (this['_scene'][_0x256afb(0xa6f)](this[_0x256afb(0x5e8)]), this[_0x256afb(0xb25)] = !0x0);
        }
        [_0x6027f5(0xb26)](_0x4ead9a, _0x193254) {
            var _0x412675 = _0x6027f5, _0x451ed4 = this[_0x412675(0x5e8)]['_renderElements'];
            _0x193254 || (_0x193254 = _0x5b1b35[_0x412675(0xb27)]);
            var _0x436972 = _0x451ed4[_0x4ead9a];
            _0x436972 || (_0x436972 = _0x451ed4[_0x4ead9a] = new _0x50feff()), _0x436972['setTransform'](this[_0x412675(0x3d5)]), _0x436972[_0x412675(0xa9e)](this['_geometryFilter']), _0x436972[_0x412675(0x4ff)] = this[_0x412675(0x5e8)], _0x436972[_0x412675(0x8d5)] = _0x193254;
        }
        [_0x6027f5(0x30d)](_0x2bdce1, _0x5034cc, _0x3c1f7f, _0x1a5821) {
            var _0x53a5a1 = _0x6027f5;
            if (this[_0x53a5a1(0xb1e)][_0x53a5a1(0xa5b)] === this['_geometryFilter']['_maxLineCount'])
                throw _0x53a5a1(0xb28);
            this[_0x53a5a1(0xb1e)]['_updateLineData'](this[_0x53a5a1(0xb1e)][_0x53a5a1(0xa5b)]++, _0x2bdce1, _0x5034cc, _0x3c1f7f, _0x1a5821), this[_0x53a5a1(0xb20)] && !this['_isInRenders'] && this['_geometryFilter']['_lineCount'] > 0x0 && (this['_scene'][_0x53a5a1(0xa6f)](this['_render']), this[_0x53a5a1(0xb25)] = !0x0);
        }
        [_0x6027f5(0xb29)](_0x525c45) {
            var _0x39cd28 = _0x6027f5, _0x5697f3 = this[_0x39cd28(0xb1e)]['_lineCount'], _0x148fae = _0x525c45['length'];
            if (_0x5697f3 + _0x148fae > this[_0x39cd28(0xb1e)]['_maxLineCount'])
                throw _0x39cd28(0xb2a);
            this[_0x39cd28(0xb1e)][_0x39cd28(0xb2b)](_0x5697f3, _0x525c45), this['_geometryFilter']['_lineCount'] += _0x148fae, this['_isRenderActive'] && !this[_0x39cd28(0xb25)] && this[_0x39cd28(0xb1e)][_0x39cd28(0xa5b)] > 0x0 && (this[_0x39cd28(0x3b0)][_0x39cd28(0xa6f)](this['_render']), this[_0x39cd28(0xb25)] = !0x0);
        }
        [_0x6027f5(0xb2c)](_0x25df33) {
            var _0x2fc5c6 = _0x6027f5;
            if (!(_0x25df33 < this[_0x2fc5c6(0xb1e)][_0x2fc5c6(0xa5b)]))
                throw 'PixelLineSprite3D:\x20index\x20must\x20less\x20than\x20lineCount.';
            this[_0x2fc5c6(0xb1e)][_0x2fc5c6(0xa64)](_0x25df33), this[_0x2fc5c6(0xb20)] && this[_0x2fc5c6(0xb25)] && 0x0 == this[_0x2fc5c6(0xb1e)][_0x2fc5c6(0xa5b)] && (this[_0x2fc5c6(0x3b0)][_0x2fc5c6(0xb24)](this[_0x2fc5c6(0x5e8)]), this[_0x2fc5c6(0xb25)] = !0x1);
        }
        [_0x6027f5(0xb2d)](_0x4b6894, _0x462bdd, _0x315a1a, _0x41766a, _0x1af0a9) {
            var _0x54a922 = _0x6027f5;
            if (!(_0x4b6894 < this[_0x54a922(0xb1e)][_0x54a922(0xa5b)]))
                throw 'PixelLineSprite3D:\x20index\x20must\x20less\x20than\x20lineCount.';
            this[_0x54a922(0xb1e)][_0x54a922(0xa65)](_0x4b6894, _0x462bdd, _0x315a1a, _0x41766a, _0x1af0a9);
        }
        [_0x6027f5(0xb2e)](_0x44425a, _0x4ce9e6) {
            var _0x41baf4 = _0x6027f5;
            if (!(_0x44425a < this['lineCount']))
                throw 'PixelLineSprite3D:\x20index\x20must\x20less\x20than\x20lineCount.';
            this[_0x41baf4(0xb1e)][_0x41baf4(0xa66)](_0x44425a, _0x4ce9e6);
        }
        ['clear']() {
            var _0x490662 = _0x6027f5;
            this[_0x490662(0xb1e)][_0x490662(0xa5b)] = 0x0, this['_isRenderActive'] && this[_0x490662(0xb25)] && (this[_0x490662(0x3b0)]['_removeRenderObject'](this[_0x490662(0x5e8)]), this[_0x490662(0xb25)] = !0x1);
        }
        ['_create']() {
            return new _0x1570e6();
        }
    }
    class _0x53bb9f {
        constructor(_0x342102 = !0x1) {
            var _0x3a1113 = _0x6027f5;
            this[_0x3a1113(0xa91)] = !0x1, this[_0x3a1113(0x1fe)] = new _0x2af7e0(), this[_0x3a1113(0xab1)] = null, this['lastTransparentBatched'] = !0x1, this[_0x3a1113(0xa91)] = _0x342102;
        }
        [_0x6027f5(0xabf)](_0x5353b6, _0x2aca14) {
            var _0x31110f = _0x6027f5, _0xd796fc = _0x5353b6[_0x31110f(0x8d5)][_0x31110f(0x68a)] - _0x2aca14[_0x31110f(0x8d5)][_0x31110f(0x68a)];
            return 0x0 === _0xd796fc ? (this[_0x31110f(0xa91)] ? _0x2aca14[_0x31110f(0x4ff)][_0x31110f(0x81a)] - _0x5353b6['render'][_0x31110f(0x81a)] : _0x5353b6[_0x31110f(0x4ff)][_0x31110f(0x81a)] - _0x2aca14[_0x31110f(0x4ff)][_0x31110f(0x81a)]) + _0x2aca14[_0x31110f(0x4ff)]['sortingFudge'] - _0x5353b6[_0x31110f(0x4ff)]['sortingFudge'] : _0xd796fc;
        }
        [_0x6027f5(0xb2f)](_0x2abd20, _0x56570e) {
            var _0x1a5a8f = _0x6027f5;
            for (var _0x2c146b = this[_0x1a5a8f(0x1fe)]['elements'], _0x247544 = _0x2c146b[Math['floor']((_0x56570e + _0x2abd20) / 0x2)]; _0x2abd20 <= _0x56570e;) {
                for (; this['_compare'](_0x2c146b[_0x2abd20], _0x247544) < 0x0;)
                    _0x2abd20++;
                for (; this[_0x1a5a8f(0xabf)](_0x2c146b[_0x56570e], _0x247544) > 0x0;)
                    _0x56570e--;
                if (_0x2abd20 < _0x56570e) {
                    var _0x34cc32 = _0x2c146b[_0x2abd20];
                    _0x2c146b[_0x2abd20] = _0x2c146b[_0x56570e], _0x2c146b[_0x56570e] = _0x34cc32, _0x2abd20++, _0x56570e--;
                } else {
                    if (_0x2abd20 === _0x56570e) {
                        _0x2abd20++;
                        break;
                    }
                }
            }
            return _0x2abd20;
        }
        ['_quickSort'](_0x118b57, _0x34d151) {
            var _0x1cf3cd = _0x6027f5;
            if (this[_0x1cf3cd(0x1fe)]['length'] > 0x1) {
                var _0x37259a = this[_0x1cf3cd(0xb2f)](_0x118b57, _0x34d151), _0x8536a8 = _0x37259a - 0x1;
                _0x118b57 < _0x8536a8 && this[_0x1cf3cd(0x828)](_0x118b57, _0x8536a8), _0x37259a < _0x34d151 && this[_0x1cf3cd(0x828)](_0x37259a, _0x34d151);
            }
        }
        [_0x6027f5(0x5e8)](_0x3d1727) {
            var _0x500827 = _0x6027f5;
            for (var _0x58a98d = this[_0x500827(0x1fe)][_0x500827(0x1fe)], _0x3e9837 = 0x0, _0x56aabe = this[_0x500827(0x1fe)][_0x500827(0x205)]; _0x3e9837 < _0x56aabe; _0x3e9837++)
                _0x58a98d[_0x3e9837][_0x500827(0x5e8)](_0x3d1727);
        }
        [_0x6027f5(0x44c)]() {
            var _0x1af6ef = _0x6027f5;
            this[_0x1af6ef(0x1fe)]['length'] = 0x0, this[_0x1af6ef(0xab1)] = null, this[_0x1af6ef(0xab2)] = !0x1;
        }
    }
    class _0x5b83ac {
        constructor(_0xb1b4dc, _0x1cead, _0x1cf594, _0x4b0c7f) {
            var _0x15ddd1 = _0x6027f5;
            this['_bounds'] = new _0x4dce5e(new _0x3697cd(), new _0x3697cd()), this[_0x15ddd1(0xb30)] = [], this['_isContaion'] = !0x1, this['center'] = new _0x3697cd(), this[_0x15ddd1(0xb31)] = 0x0, this[_0x15ddd1(0xb32)](_0xb1b4dc, _0x1cead, _0x1cf594, _0x4b0c7f);
        }
        static [_0x6027f5(0xb33)](_0x5a3500, _0x39b2e5) {
            var _0x439fb6 = _0x6027f5;
            return _0x4dcbd3['boxContainsBox'](_0x5a3500, _0x39b2e5) == _0x156c38[_0x439fb6(0x87c)];
        }
        [_0x6027f5(0xb32)](_0x374aee, _0x3fadf0, _0x4f0766, _0x5d8ff0) {
            var _0x14aac4 = _0x6027f5;
            this['_octree'] = _0x374aee, this[_0x14aac4(0x30f)] = _0x3fadf0, this['baseLength'] = _0x4f0766, _0x5d8ff0[_0x14aac4(0x1fc)](this[_0x14aac4(0x880)]);
            var _0x35ab24 = this['_bounds'][_0x14aac4(0x212)], _0x21e56f = this[_0x14aac4(0xa5d)][_0x14aac4(0x20c)], _0x2c0db3 = _0x374aee[_0x14aac4(0xb34)] * _0x4f0766 / 0x2;
            _0x35ab24[_0x14aac4(0x1f8)](_0x5d8ff0['x'] - _0x2c0db3, _0x5d8ff0['y'] - _0x2c0db3, _0x5d8ff0['z'] - _0x2c0db3), _0x21e56f[_0x14aac4(0x1f8)](_0x5d8ff0['x'] + _0x2c0db3, _0x5d8ff0['y'] + _0x2c0db3, _0x5d8ff0['z'] + _0x2c0db3);
        }
        [_0x6027f5(0xb35)](_0x2db449) {
            var _0x3a2217 = _0x6027f5;
            if (null != this[_0x3a2217(0x5ac)] && this[_0x3a2217(0x5ac)][_0x2db449])
                return this[_0x3a2217(0x5ac)][_0x2db449][_0x3a2217(0xa5d)];
            var _0x309ce5 = this[_0x3a2217(0xb31)] / 0x4, _0x327d52 = this['baseLength'] / 0x2 * this[_0x3a2217(0x821)][_0x3a2217(0xb34)] / 0x2, _0x329447 = _0x5b83ac[_0x3a2217(0xb36)], _0x31e3a6 = _0x329447['min'], _0xf620d4 = _0x329447[_0x3a2217(0x20c)];
            switch (_0x2db449) {
            case 0x0:
                _0x31e3a6['x'] = this[_0x3a2217(0x880)]['x'] - _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] + _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this['center']['z'] - _0x309ce5 - _0x327d52, _0xf620d4['x'] = this[_0x3a2217(0x880)]['x'] - _0x309ce5 + _0x327d52, _0xf620d4['y'] = this['center']['y'] + _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] - _0x309ce5 + _0x327d52;
                break;
            case 0x1:
                _0x31e3a6['x'] = this[_0x3a2217(0x880)]['x'] + _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this['center']['y'] + _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this['center']['z'] - _0x309ce5 - _0x327d52, _0xf620d4['x'] = this['center']['x'] + _0x309ce5 + _0x327d52, _0xf620d4['y'] = this[_0x3a2217(0x880)]['y'] + _0x309ce5 + _0x327d52, _0xf620d4['z'] = this['center']['z'] - _0x309ce5 + _0x327d52;
                break;
            case 0x2:
                _0x31e3a6['x'] = this['center']['x'] - _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] + _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 - _0x327d52, _0xf620d4['x'] = this['center']['x'] - _0x309ce5 + _0x327d52, _0xf620d4['y'] = this[_0x3a2217(0x880)]['y'] + _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 + _0x327d52;
                break;
            case 0x3:
                _0x31e3a6['x'] = this[_0x3a2217(0x880)]['x'] + _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] + _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 - _0x327d52, _0xf620d4['x'] = this['center']['x'] + _0x309ce5 + _0x327d52, _0xf620d4['y'] = this[_0x3a2217(0x880)]['y'] + _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 + _0x327d52;
                break;
            case 0x4:
                _0x31e3a6['x'] = this['center']['x'] - _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] - _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this[_0x3a2217(0x880)]['z'] - _0x309ce5 - _0x327d52, _0xf620d4['x'] = this[_0x3a2217(0x880)]['x'] - _0x309ce5 + _0x327d52, _0xf620d4['y'] = this['center']['y'] - _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] - _0x309ce5 + _0x327d52;
                break;
            case 0x5:
                _0x31e3a6['x'] = this[_0x3a2217(0x880)]['x'] + _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] - _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this['center']['z'] - _0x309ce5 - _0x327d52, _0xf620d4['x'] = this[_0x3a2217(0x880)]['x'] + _0x309ce5 + _0x327d52, _0xf620d4['y'] = this[_0x3a2217(0x880)]['y'] - _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] - _0x309ce5 + _0x327d52;
                break;
            case 0x6:
                _0x31e3a6['x'] = this[_0x3a2217(0x880)]['x'] - _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] - _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 - _0x327d52, _0xf620d4['x'] = this[_0x3a2217(0x880)]['x'] - _0x309ce5 + _0x327d52, _0xf620d4['y'] = this[_0x3a2217(0x880)]['y'] - _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 + _0x327d52;
                break;
            case 0x7:
                _0x31e3a6['x'] = this['center']['x'] + _0x309ce5 - _0x327d52, _0x31e3a6['y'] = this[_0x3a2217(0x880)]['y'] - _0x309ce5 - _0x327d52, _0x31e3a6['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 - _0x327d52, _0xf620d4['x'] = this['center']['x'] + _0x309ce5 + _0x327d52, _0xf620d4['y'] = this['center']['y'] - _0x309ce5 + _0x327d52, _0xf620d4['z'] = this[_0x3a2217(0x880)]['z'] + _0x309ce5 + _0x327d52;
            }
            return _0x329447;
        }
        [_0x6027f5(0xb37)](_0x35f864) {
            var _0x113ee3 = _0x6027f5;
            if (null != this['_children'])
                return this[_0x113ee3(0x5ac)][_0x35f864]['center'];
            var _0x14c6a8 = this[_0x113ee3(0xb31)] / 0x4, _0x2d38f2 = _0x5b83ac[_0x113ee3(0x59f)];
            switch (_0x35f864) {
            case 0x0:
                _0x2d38f2['x'] = this[_0x113ee3(0x880)]['x'] - _0x14c6a8, _0x2d38f2['y'] = this[_0x113ee3(0x880)]['y'] + _0x14c6a8, _0x2d38f2['z'] = this[_0x113ee3(0x880)]['z'] - _0x14c6a8;
                break;
            case 0x1:
                _0x2d38f2['x'] = this[_0x113ee3(0x880)]['x'] + _0x14c6a8, _0x2d38f2['y'] = this[_0x113ee3(0x880)]['y'] + _0x14c6a8, _0x2d38f2['z'] = this[_0x113ee3(0x880)]['z'] - _0x14c6a8;
                break;
            case 0x2:
                _0x2d38f2['x'] = this['center']['x'] - _0x14c6a8, _0x2d38f2['y'] = this[_0x113ee3(0x880)]['y'] + _0x14c6a8, _0x2d38f2['z'] = this['center']['z'] + _0x14c6a8;
                break;
            case 0x3:
                _0x2d38f2['x'] = this[_0x113ee3(0x880)]['x'] + _0x14c6a8, _0x2d38f2['y'] = this['center']['y'] + _0x14c6a8, _0x2d38f2['z'] = this[_0x113ee3(0x880)]['z'] + _0x14c6a8;
                break;
            case 0x4:
                _0x2d38f2['x'] = this[_0x113ee3(0x880)]['x'] - _0x14c6a8, _0x2d38f2['y'] = this['center']['y'] - _0x14c6a8, _0x2d38f2['z'] = this[_0x113ee3(0x880)]['z'] - _0x14c6a8;
                break;
            case 0x5:
                _0x2d38f2['x'] = this[_0x113ee3(0x880)]['x'] + _0x14c6a8, _0x2d38f2['y'] = this['center']['y'] - _0x14c6a8, _0x2d38f2['z'] = this[_0x113ee3(0x880)]['z'] - _0x14c6a8;
                break;
            case 0x6:
                _0x2d38f2['x'] = this[_0x113ee3(0x880)]['x'] - _0x14c6a8, _0x2d38f2['y'] = this[_0x113ee3(0x880)]['y'] - _0x14c6a8, _0x2d38f2['z'] = this[_0x113ee3(0x880)]['z'] + _0x14c6a8;
                break;
            case 0x7:
                _0x2d38f2['x'] = this['center']['x'] + _0x14c6a8, _0x2d38f2['y'] = this[_0x113ee3(0x880)]['y'] - _0x14c6a8, _0x2d38f2['z'] = this['center']['z'] + _0x14c6a8;
            }
            return _0x2d38f2;
        }
        [_0x6027f5(0xb38)](_0x2524e7) {
            var _0x4454b4 = _0x6027f5, _0x46b4f9 = this['baseLength'] / 0x4;
            switch (this[_0x4454b4(0x5ac)] || (this[_0x4454b4(0x5ac)] = []), _0x2524e7) {
            case 0x0:
                return this[_0x4454b4(0x5ac)][0x0] || (this['_children'][0x0] = new _0x5b83ac(this[_0x4454b4(0x821)], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this[_0x4454b4(0x880)]['x'] + -_0x46b4f9, this[_0x4454b4(0x880)]['y'] + _0x46b4f9, this[_0x4454b4(0x880)]['z'] - _0x46b4f9)));
            case 0x1:
                return this[_0x4454b4(0x5ac)][0x1] || (this['_children'][0x1] = new _0x5b83ac(this[_0x4454b4(0x821)], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this[_0x4454b4(0x880)]['x'] + _0x46b4f9, this['center']['y'] + _0x46b4f9, this['center']['z'] - _0x46b4f9)));
            case 0x2:
                return this[_0x4454b4(0x5ac)][0x2] || (this[_0x4454b4(0x5ac)][0x2] = new _0x5b83ac(this[_0x4454b4(0x821)], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this['center']['x'] - _0x46b4f9, this[_0x4454b4(0x880)]['y'] + _0x46b4f9, this[_0x4454b4(0x880)]['z'] + _0x46b4f9)));
            case 0x3:
                return this[_0x4454b4(0x5ac)][0x3] || (this[_0x4454b4(0x5ac)][0x3] = new _0x5b83ac(this['_octree'], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this[_0x4454b4(0x880)]['x'] + _0x46b4f9, this[_0x4454b4(0x880)]['y'] + _0x46b4f9, this[_0x4454b4(0x880)]['z'] + _0x46b4f9)));
            case 0x4:
                return this[_0x4454b4(0x5ac)][0x4] || (this['_children'][0x4] = new _0x5b83ac(this[_0x4454b4(0x821)], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this[_0x4454b4(0x880)]['x'] - _0x46b4f9, this[_0x4454b4(0x880)]['y'] - _0x46b4f9, this[_0x4454b4(0x880)]['z'] - _0x46b4f9)));
            case 0x5:
                return this[_0x4454b4(0x5ac)][0x5] || (this['_children'][0x5] = new _0x5b83ac(this[_0x4454b4(0x821)], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this[_0x4454b4(0x880)]['x'] + _0x46b4f9, this[_0x4454b4(0x880)]['y'] - _0x46b4f9, this[_0x4454b4(0x880)]['z'] - _0x46b4f9)));
            case 0x6:
                return this[_0x4454b4(0x5ac)][0x6] || (this['_children'][0x6] = new _0x5b83ac(this['_octree'], this, this['baseLength'] / 0x2, new _0x3697cd(this[_0x4454b4(0x880)]['x'] - _0x46b4f9, this['center']['y'] - _0x46b4f9, this[_0x4454b4(0x880)]['z'] + _0x46b4f9)));
            case 0x7:
                return this['_children'][0x7] || (this[_0x4454b4(0x5ac)][0x7] = new _0x5b83ac(this[_0x4454b4(0x821)], this, this[_0x4454b4(0xb31)] / 0x2, new _0x3697cd(this['center']['x'] + _0x46b4f9, this['center']['y'] - _0x46b4f9, this['center']['z'] + _0x46b4f9)));
            default:
                throw _0x4454b4(0xb39);
            }
        }
        [_0x6027f5(0xb3a)]() {
            var _0x282056 = _0x6027f5;
            for (var _0x21ad99 = this[_0x282056(0xb30)][_0x282056(0x205)], _0x43cfba = 0x0; _0x43cfba < 0x8; _0x43cfba++) {
                var _0x1603a2 = this[_0x282056(0x5ac)][_0x43cfba];
                if (_0x1603a2) {
                    if (null != _0x1603a2['_children'])
                        return !0x1;
                    _0x21ad99 += _0x1603a2[_0x282056(0xb30)]['length'];
                }
            }
            return _0x21ad99 <= _0x5b83ac[_0x282056(0xb3b)];
        }
        [_0x6027f5(0xb3c)]() {
            var _0x5ee26d = _0x6027f5;
            for (var _0x1003b4 = 0x0; _0x1003b4 < 0x8; _0x1003b4++) {
                var _0x5a04f4 = this[_0x5ee26d(0x5ac)][_0x1003b4];
                if (_0x5a04f4) {
                    _0x5a04f4['_parent'] = null;
                    for (var _0x4fd011 = _0x5a04f4[_0x5ee26d(0xb30)], _0x21f632 = _0x4fd011['length'] - 0x1; _0x21f632 >= 0x0; _0x21f632--) {
                        var _0x231a2f = _0x4fd011[_0x21f632];
                        this[_0x5ee26d(0xb30)][_0x5ee26d(0x2ac)](_0x231a2f), _0x231a2f['_setOctreeNode'](this);
                    }
                }
            }
            this[_0x5ee26d(0x5ac)] = null;
        }
        [_0x6027f5(0xb3d)]() {
            var _0x378e84 = _0x6027f5;
            if (null === this['_children']) {
                var _0xf02f46 = this['_parent'];
                _0xf02f46 && _0xf02f46[_0x378e84(0xb3a)]() && (_0xf02f46[_0x378e84(0xb3c)](), _0xf02f46[_0x378e84(0xb3d)]());
            }
        }
        ['_checkAddNode'](_0x5f3617) {
            var _0x66139a = _0x6027f5;
            if (null == this[_0x66139a(0x5ac)]) {
                if (this[_0x66139a(0xb30)][_0x66139a(0x205)] < _0x5b83ac[_0x66139a(0xb3b)] || this[_0x66139a(0xb31)] / 0x2 < this[_0x66139a(0x821)][_0x66139a(0xb3e)])
                    return this;
                for (var _0x7cac3 = this[_0x66139a(0xb30)][_0x66139a(0x205)] - 0x1; _0x7cac3 >= 0x0; _0x7cac3--) {
                    var _0x489b27 = this[_0x66139a(0xb30)][_0x7cac3], _0x40ef1d = this[_0x66139a(0xb3f)](_0x489b27[_0x66139a(0x812)][_0x66139a(0x81b)]());
                    _0x5b83ac['_encapsulates'](this[_0x66139a(0xb35)](_0x40ef1d), _0x489b27[_0x66139a(0x812)][_0x66139a(0x813)]()) && (this[_0x66139a(0xb30)][_0x66139a(0x33a)](this[_0x66139a(0xb30)][_0x66139a(0x2f9)](_0x489b27), 0x1), this[_0x66139a(0xb38)](_0x40ef1d)[_0x66139a(0x800)](_0x489b27));
                }
            }
            var _0x181925 = this[_0x66139a(0xb3f)](_0x5f3617[_0x66139a(0x812)][_0x66139a(0x81b)]());
            return _0x5b83ac[_0x66139a(0xb33)](this[_0x66139a(0xb35)](_0x181925), _0x5f3617[_0x66139a(0x812)][_0x66139a(0x813)]()) ? this[_0x66139a(0xb38)](_0x181925)[_0x66139a(0xb40)](_0x5f3617) : this;
        }
        [_0x6027f5(0x800)](_0x1d401b) {
            var _0x52a037 = _0x6027f5, _0x240ae0 = this[_0x52a037(0xb40)](_0x1d401b);
            _0x240ae0[_0x52a037(0xb30)]['push'](_0x1d401b), _0x1d401b['_setOctreeNode'](_0x240ae0);
        }
        [_0x6027f5(0xb41)](_0x16b024) {
            var _0x54594e = _0x6027f5, _0x285e19 = this[_0x54594e(0xb30)]['indexOf'](_0x16b024);
            this['_objects']['splice'](_0x285e19, 0x1), _0x16b024[_0x54594e(0xb0e)](null), this[_0x54594e(0xb3d)]();
        }
        ['_addUp'](_0x34a7a9) {
            var _0x2e5025 = _0x6027f5;
            return _0x4dcbd3[_0x2e5025(0x89a)](this['_bounds'], _0x34a7a9['bounds'][_0x2e5025(0x813)]()) === _0x156c38['Contains'] ? (this[_0x2e5025(0x800)](_0x34a7a9), !0x0) : !!this[_0x2e5025(0x30f)] && this['_parent'][_0x2e5025(0xb42)](_0x34a7a9);
        }
        [_0x6027f5(0xb43)](_0x56abeb, _0x2ad765, _0x114210, _0x54dcd1, _0x11a8e9, _0x522d5c) {
            var _0x4ca628 = _0x6027f5, _0x4440e8 = _0x56abeb[_0x4ca628(0x831)], _0x5e344c = _0x56abeb[_0x4ca628(0x5a2)], _0x3bbddd = _0x56abeb[_0x4ca628(0x814)];
            if (_0x114210) {
                var _0x5d71cb = _0x4440e8[_0x4ca628(0x8c0)](this['_bounds']);
                if (_0x387b86[_0x4ca628(0x4dc)][_0x4ca628(0xb44)]++, _0x5d71cb === _0x156c38[_0x4ca628(0x899)]) {
                    for (var _0x3f0209 = 0x0, _0xa431b3 = this[_0x4ca628(0xb30)][_0x4ca628(0x205)]; _0x3f0209 < _0xa431b3; _0x3f0209++)
                        this[_0x4ca628(0xb30)][_0x3f0209][_0x4ca628(0xb1b)]();
                    return;
                }
                _0x114210 = _0x5d71cb === _0x156c38['Intersects'];
            }
            this[_0x4ca628(0xb45)] = !_0x114210;
            var _0x32c4ed = _0x2ad765[_0x4ca628(0x5ca)], _0x2c85bf = _0x387b86['Stat'][_0x4ca628(0x815)];
            for (_0x3f0209 = 0x0, _0xa431b3 = this[_0x4ca628(0xb30)][_0x4ca628(0x205)]; _0x3f0209 < _0xa431b3; _0x3f0209++) {
                var _0x1c6687 = this[_0x4ca628(0xb30)][_0x3f0209];
                if (_0x522d5c ? _0x1c6687['_castShadow'] && _0x1c6687['_enable'] : 0x0 != (Math[_0x4ca628(0x2ff)](0x2, _0x1c6687['_owner'][_0x4ca628(0x5c2)]) & _0x3bbddd) && _0x1c6687[_0x4ca628(0x65a)]) {
                    if (_0x114210 && (_0x387b86[_0x4ca628(0x4dc)]['frustumCulling']++, !_0x1c6687[_0x4ca628(0x818)](_0x4440e8, _0x2ad765)))
                        continue;
                    _0x1c6687['_renderMark'] = _0x2c85bf, _0x1c6687[_0x4ca628(0x81a)] = _0x3697cd[_0x4ca628(0x20a)](_0x1c6687[_0x4ca628(0x812)]['getCenter'](), _0x5e344c);
                    for (var _0x6439d1 = _0x1c6687['_renderElements'], _0x99b178 = 0x0, _0x2a43aa = _0x6439d1[_0x4ca628(0x205)]; _0x99b178 < _0x2a43aa; _0x99b178++) {
                        _0x6439d1[_0x99b178][_0x4ca628(0x388)](_0x32c4ed, _0x2ad765, _0x54dcd1, _0x11a8e9);
                    }
                }
            }
            if (null != this['_children'])
                for (_0x3f0209 = 0x0; _0x3f0209 < 0x8; _0x3f0209++) {
                    var _0x236680 = this['_children'][_0x3f0209];
                    _0x236680 && _0x236680[_0x4ca628(0xb43)](_0x56abeb, _0x2ad765, _0x114210, _0x54dcd1, _0x11a8e9, _0x522d5c);
                }
        }
        [_0x6027f5(0xb46)](_0x133c61, _0x480019) {
            var _0x5f45fb = _0x6027f5;
            for (var _0x28779a = _0x133c61[_0x5f45fb(0x82d)], _0x5c403b = _0x133c61[_0x5f45fb(0x82e)], _0x5a4f67 = this['_bounds'][_0x5f45fb(0x212)], _0x32acfd = this[_0x5f45fb(0xa5d)][_0x5f45fb(0x20c)], _0xcbb4c1 = _0x5a4f67['x'], _0x52c42f = _0x5a4f67['y'], _0x4e7431 = _0x5a4f67['z'], _0x144b11 = _0x32acfd['x'], _0x624bd2 = _0x32acfd['y'], _0x24e3c0 = _0x32acfd['z'], _0x370cce = !0x0, _0x398dfc = 0x0; _0x398dfc < _0x28779a; _0x398dfc++) {
                var _0x4efded = (_0x3fed0f = _0x5c403b[_0x398dfc])[_0x5f45fb(0x82f)];
                if (_0x3fed0f[_0x5f45fb(0x20a)] + _0x4efded['x'] * (_0x4efded['x'] < 0x0 ? _0xcbb4c1 : _0x144b11) + _0x4efded['y'] * (_0x4efded['y'] < 0x0 ? _0x52c42f : _0x624bd2) + _0x4efded['z'] * (_0x4efded['z'] < 0x0 ? _0x4e7431 : _0x24e3c0) < 0x0) {
                    _0x370cce = !0x1;
                    break;
                }
            }
            if (_0x370cce) {
                for (var _0xf8a1fb = _0x480019[_0x5f45fb(0x5ca)], _0x454b16 = _0x387b86[_0x5f45fb(0x4dc)][_0x5f45fb(0x815)], _0x3d9f57 = 0x0, _0x3e62c6 = this[_0x5f45fb(0xb30)][_0x5f45fb(0x205)]; _0x3d9f57 < _0x3e62c6; _0x3d9f57++) {
                    var _0x24f4c6, _0x1f03b0 = this[_0x5f45fb(0xb30)][_0x3d9f57];
                    let _0x4cab84 = !0x0;
                    if (_0x24f4c6 = _0x1f03b0['_castShadow'] && _0x1f03b0[_0x5f45fb(0x65a)])
                        for (_0x398dfc = 0x0; _0x398dfc < _0x28779a; _0x398dfc++) {
                            var _0x3fed0f;
                            _0x4efded = (_0x3fed0f = _0x5c403b[_0x398dfc])['normal'];
                            if (_0x3fed0f[_0x5f45fb(0x20a)] + _0x4efded['x'] * (_0x4efded['x'] < 0x0 ? _0xcbb4c1 : _0x144b11) + _0x4efded['y'] * (_0x4efded['y'] < 0x0 ? _0x52c42f : _0x624bd2) + _0x4efded['z'] * (_0x4efded['z'] < 0x0 ? _0x4e7431 : _0x24e3c0) < 0x0) {
                                _0x4cab84 = !0x1;
                                break;
                            }
                        }
                    if (_0x4cab84 && _0x24f4c6) {
                        _0x1f03b0[_0x5f45fb(0x819)] = _0x454b16, _0x1f03b0['_distanceForSort'] = _0x3697cd[_0x5f45fb(0x20a)](_0x1f03b0[_0x5f45fb(0x812)][_0x5f45fb(0x81b)](), _0x133c61[_0x5f45fb(0x5a2)]);
                        for (var _0x4cf9c1 = _0x1f03b0[_0x5f45fb(0x600)], _0x2e5a98 = (_0x398dfc = 0x0, _0x4cf9c1[_0x5f45fb(0x205)]); _0x398dfc < _0x2e5a98; _0x398dfc++) {
                            _0x4cf9c1[_0x398dfc][_0x5f45fb(0x388)](_0xf8a1fb, _0x480019, null, null);
                        }
                    }
                }
                if (null != this[_0x5f45fb(0x5ac)])
                    for (_0x3d9f57 = 0x0; _0x3d9f57 < 0x8; _0x3d9f57++) {
                        var _0x375e88 = this[_0x5f45fb(0x5ac)][_0x3d9f57];
                        _0x375e88 && _0x375e88[_0x5f45fb(0xb46)](_0x133c61, _0x480019);
                    }
            }
        }
        [_0x6027f5(0xb47)](_0x79736a, _0x483a07, _0x4d7b1f) {
            var _0x2f182f = _0x6027f5;
            if (_0x483a07) {
                var _0x549c6b = _0x4dcbd3[_0x2f182f(0x89a)](this[_0x2f182f(0xa5d)], _0x79736a);
                if (_0x549c6b === _0x156c38[_0x2f182f(0x899)])
                    return;
                _0x483a07 = _0x549c6b === _0x156c38[_0x2f182f(0x87d)];
            }
            if (_0x483a07)
                for (var _0x8eab66 = 0x0, _0x2eaaf9 = this[_0x2f182f(0xb30)]['length']; _0x8eab66 < _0x2eaaf9; _0x8eab66++) {
                    var _0x3879fe = this[_0x2f182f(0xb30)][_0x8eab66];
                    _0x4dcbd3['intersectsBoxAndBox'](_0x3879fe[_0x2f182f(0x812)][_0x2f182f(0x813)](), _0x79736a) && _0x4d7b1f[_0x2f182f(0x2ac)](_0x3879fe);
                }
            if (null != this['_children'])
                for (_0x8eab66 = 0x0; _0x8eab66 < 0x8; _0x8eab66++) {
                    this[_0x2f182f(0x5ac)][_0x8eab66][_0x2f182f(0xb47)](_0x79736a, _0x483a07, _0x4d7b1f);
                }
        }
        [_0x6027f5(0xb3f)](_0x4c3e61) {
            var _0x41fbd7 = _0x6027f5;
            return (_0x4c3e61['x'] <= this[_0x41fbd7(0x880)]['x'] ? 0x0 : 0x1) + (_0x4c3e61['y'] >= this[_0x41fbd7(0x880)]['y'] ? 0x0 : 0x4) + (_0x4c3e61['z'] <= this[_0x41fbd7(0x880)]['z'] ? 0x0 : 0x2);
        }
        [_0x6027f5(0x388)](_0x1d71dd) {
            var _0x144e47 = _0x6027f5;
            if (_0x4dcbd3['boxContainsBox'](this[_0x144e47(0xa5d)], _0x1d71dd[_0x144e47(0x812)][_0x144e47(0x813)]()) === _0x156c38[_0x144e47(0x87c)]) {
                var _0x4559f0 = this['_checkAddNode'](_0x1d71dd);
                if (_0x4559f0 !== _0x1d71dd[_0x144e47(0xb0c)]()) {
                    _0x4559f0[_0x144e47(0xb30)][_0x144e47(0x2ac)](_0x1d71dd), _0x1d71dd['_setOctreeNode'](_0x4559f0);
                    var _0x346a3e = this[_0x144e47(0xb30)]['indexOf'](_0x1d71dd);
                    this[_0x144e47(0xb30)][_0x144e47(0x33a)](_0x346a3e, 0x1), this[_0x144e47(0xb3d)]();
                }
                return !0x0;
            }
            if (this[_0x144e47(0x30f)]) {
                var _0x28898d = this[_0x144e47(0x30f)][_0x144e47(0xb42)](_0x1d71dd);
                return _0x28898d && (_0x346a3e = this[_0x144e47(0xb30)]['indexOf'](_0x1d71dd), this['_objects'][_0x144e47(0x33a)](_0x346a3e, 0x1), this['_merge']()), _0x28898d;
            }
            return !0x1;
        }
        ['add'](_0x25331f) {
            var _0x84b07a = _0x6027f5;
            return !!_0x5b83ac[_0x84b07a(0xb33)](this[_0x84b07a(0xa5d)], _0x25331f[_0x84b07a(0x812)][_0x84b07a(0x813)]()) && (this[_0x84b07a(0x800)](_0x25331f), !0x0);
        }
        [_0x6027f5(0x3b4)](_0x2df0ab) {
            var _0xca857a = _0x6027f5;
            return _0x2df0ab[_0xca857a(0xb0c)]() === this && (this[_0xca857a(0xb41)](_0x2df0ab), !0x0);
        }
        [_0x6027f5(0x96f)](_0x497d7f) {
            var _0x1d1b0d = _0x6027f5;
            return _0x497d7f[_0x1d1b0d(0xb0c)]() === this && this[_0x1d1b0d(0x388)](_0x497d7f);
        }
        ['shrinkIfPossible'](_0x2ff50e) {
            var _0x91b172 = _0x6027f5;
            if (this['baseLength'] < 0x2 * _0x2ff50e)
                return this;
            for (var _0x57ee14 = -0x1, _0x312496 = 0x0, _0x5e7cea = this[_0x91b172(0xb30)]['length']; _0x312496 < _0x5e7cea; _0x312496++) {
                var _0x4c739c = this[_0x91b172(0xb30)][_0x312496], _0x4fe2b8 = this[_0x91b172(0xb3f)](_0x4c739c[_0x91b172(0x812)][_0x91b172(0x81b)]());
                if (0x0 != _0x312496 && _0x4fe2b8 != _0x57ee14)
                    return this;
                var _0x457cbf = this[_0x91b172(0xb35)](_0x4fe2b8);
                if (!_0x5b83ac[_0x91b172(0xb33)](_0x457cbf, _0x4c739c[_0x91b172(0x812)][_0x91b172(0x813)]()))
                    return this;
                0x0 == _0x312496 && (_0x57ee14 = _0x4fe2b8);
            }
            if (null == this[_0x91b172(0x5ac)]) {
                if (-0x1 != _0x57ee14) {
                    var _0x5e63e5 = this[_0x91b172(0xb37)](_0x57ee14);
                    this['_setValues'](this[_0x91b172(0x821)], null, this[_0x91b172(0xb31)] / 0x2, _0x5e63e5);
                }
                return this;
            }
            var _0x30bd96 = !0x1;
            for (_0x312496 = 0x0, _0x5e7cea = this[_0x91b172(0x5ac)][_0x91b172(0x205)]; _0x312496 < _0x5e7cea; _0x312496++) {
                var _0x4b1248 = this[_0x91b172(0x5ac)][_0x312496];
                if (_0x4b1248 && _0x4b1248[_0x91b172(0xb48)]()) {
                    if (_0x30bd96)
                        return this;
                    if (_0x57ee14 >= 0x0 && _0x57ee14 != _0x312496)
                        return this;
                    _0x30bd96 = !0x0, _0x57ee14 = _0x312496;
                }
            }
            if (-0x1 != _0x57ee14) {
                var _0x3fb577 = this[_0x91b172(0x5ac)][_0x57ee14];
                return _0x3fb577[_0x91b172(0x30f)] = null, _0x3fb577;
            }
            return this;
        }
        [_0x6027f5(0xb48)]() {
            var _0x49e907 = _0x6027f5;
            if (this[_0x49e907(0xb30)][_0x49e907(0x205)] > 0x0)
                return !0x0;
            if (null != this[_0x49e907(0x5ac)])
                for (var _0x5f5b31 = 0x0; _0x5f5b31 < 0x8; _0x5f5b31++) {
                    var _0x9aedd = this[_0x49e907(0x5ac)][_0x5f5b31];
                    if (_0x9aedd && _0x9aedd[_0x49e907(0xb48)]())
                        return !0x0;
                }
            return !0x1;
        }
        ['getCollidingWithBoundBox'](_0x379956, _0x1437da) {
            var _0x3527b7 = _0x6027f5;
            this[_0x3527b7(0xb47)](_0x379956, !0x0, _0x1437da);
        }
        [_0x6027f5(0xb49)](_0x1310ea, _0x40634c, _0x2323f7 = Number['MAX_VALUE']) {
            var _0xf0000e = _0x6027f5, _0x1304e7 = _0x4dcbd3[_0xf0000e(0x88e)](_0x1310ea, this['_bounds']);
            if (!(-0x1 == _0x1304e7 || _0x1304e7 > _0x2323f7)) {
                for (var _0x2ed2cb = 0x0, _0x4a1dd3 = this[_0xf0000e(0xb30)][_0xf0000e(0x205)]; _0x2ed2cb < _0x4a1dd3; _0x2ed2cb++) {
                    var _0x36f898 = this['_objects'][_0x2ed2cb];
                    -0x1 !== (_0x1304e7 = _0x4dcbd3[_0xf0000e(0x88e)](_0x1310ea, _0x36f898[_0xf0000e(0x812)][_0xf0000e(0x813)]())) && _0x1304e7 <= _0x2323f7 && _0x40634c[_0xf0000e(0x2ac)](_0x36f898);
                }
                if (null != this[_0xf0000e(0x5ac)])
                    for (_0x2ed2cb = 0x0; _0x2ed2cb < 0x8; _0x2ed2cb++) {
                        this[_0xf0000e(0x5ac)][_0x2ed2cb]['getCollidingWithRay'](_0x1310ea, _0x40634c, _0x2323f7);
                    }
            }
        }
        [_0x6027f5(0x830)](_0x308c8e, _0x119202, _0x314716, _0x573667, _0x8a0061) {
            var _0x3b86cd = _0x6027f5;
            this[_0x3b86cd(0xb43)](_0x308c8e, _0x119202, !0x0, _0x314716, _0x573667, _0x8a0061);
        }
        [_0x6027f5(0x82a)](_0x3f5b4e, _0x99bd2c) {
            this['_getCollidingWithCastShadowFrustum'](_0x3f5b4e, _0x99bd2c);
        }
        [_0x6027f5(0xb4a)](_0x18c5aa) {
            var _0xf0464d = _0x6027f5;
            if (!_0x4dcbd3[_0xf0464d(0x896)](this[_0xf0464d(0xa5d)], _0x18c5aa))
                return !0x1;
            for (var _0xe955d0 = 0x0, _0x26020c = this[_0xf0464d(0xb30)][_0xf0464d(0x205)]; _0xe955d0 < _0x26020c; _0xe955d0++) {
                var _0x22173e = this[_0xf0464d(0xb30)][_0xe955d0];
                if (_0x4dcbd3['intersectsBoxAndBox'](_0x22173e[_0xf0464d(0x812)][_0xf0464d(0x813)](), _0x18c5aa))
                    return !0x0;
            }
            if (null != this[_0xf0464d(0x5ac)])
                for (_0xe955d0 = 0x0; _0xe955d0 < 0x8; _0xe955d0++) {
                    if (this[_0xf0464d(0x5ac)][_0xe955d0][_0xf0464d(0xb4a)](_0x18c5aa))
                        return !0x0;
                }
            return !0x1;
        }
        [_0x6027f5(0xb4b)](_0x2bab39, _0xc45172 = Number[_0x6027f5(0xa3d)]) {
            var _0x397a78 = _0x6027f5, _0x31bf0e = _0x4dcbd3[_0x397a78(0x88e)](_0x2bab39, this['_bounds']);
            if (-0x1 == _0x31bf0e || _0x31bf0e > _0xc45172)
                return !0x1;
            for (var _0x23c42a = 0x0, _0x11a7c = this[_0x397a78(0xb30)][_0x397a78(0x205)]; _0x23c42a < _0x11a7c; _0x23c42a++) {
                var _0x14f430 = this[_0x397a78(0xb30)][_0x23c42a];
                if (-0x1 !== (_0x31bf0e = _0x4dcbd3[_0x397a78(0x88e)](_0x2bab39, _0x14f430['bounds'][_0x397a78(0x813)]())) && _0x31bf0e <= _0xc45172)
                    return !0x0;
            }
            if (null != this[_0x397a78(0x5ac)])
                for (_0x23c42a = 0x0; _0x23c42a < 0x8; _0x23c42a++) {
                    if (this['_children'][_0x23c42a][_0x397a78(0xb4b)](_0x2bab39, _0xc45172))
                        return !0x0;
                }
            return !0x1;
        }
        ['getBound']() {
            var _0x107417 = _0x6027f5;
            return this[_0x107417(0xa5d)];
        }
        [_0x6027f5(0x826)](_0x8ba799, _0x198f55, _0x3eb428) {
            var _0x21069f = _0x6027f5;
            if (null !== this['_children'] || 0x0 != this[_0x21069f(0xb30)]['length']) {
                _0x198f55++;
                var _0x42a89e = _0x5b83ac[_0x21069f(0x811)];
                if (this[_0x21069f(0xb45)])
                    _0x42a89e['r'] = 0x0, _0x42a89e['g'] = 0x0, _0x42a89e['b'] = 0x1;
                else {
                    var _0x128d48 = _0x3eb428 ? _0x198f55 / _0x3eb428 : 0x0;
                    _0x42a89e['r'] = 0x1 - _0x128d48, _0x42a89e['g'] = _0x128d48, _0x42a89e['b'] = 0x0;
                }
                if (_0x42a89e['a'] = 0.3, _0x3acd08[_0x21069f(0x308)](_0x8ba799, this[_0x21069f(0xa5d)], _0x42a89e), null != this[_0x21069f(0x5ac)])
                    for (var _0x2db08d = 0x0; _0x2db08d < 0x8; _0x2db08d++) {
                        var _0x2ec90b = this[_0x21069f(0x5ac)][_0x2db08d];
                        _0x2ec90b && _0x2ec90b['drawAllBounds'](_0x8ba799, _0x198f55, _0x3eb428);
                    }
            }
        }
        [_0x6027f5(0x827)](_0x26d974, _0x120ad0, _0x390126) {
            var _0x1e5a83 = _0x6027f5;
            _0x120ad0++;
            var _0x30dabc = _0x5b83ac[_0x1e5a83(0x811)];
            if (this[_0x1e5a83(0xb45)])
                _0x30dabc['r'] = 0x0, _0x30dabc['g'] = 0x0, _0x30dabc['b'] = 0x1;
            else {
                var _0x283c79 = _0x390126 ? _0x120ad0 / _0x390126 : 0x0;
                _0x30dabc['r'] = 0x1 - _0x283c79, _0x30dabc['g'] = _0x283c79, _0x30dabc['b'] = 0x0;
            }
            _0x30dabc['a'] = 0x1;
            for (var _0x16b1e0 = 0x0, _0x46bad1 = this[_0x1e5a83(0xb30)]['length']; _0x16b1e0 < _0x46bad1; _0x16b1e0++)
                _0x3acd08[_0x1e5a83(0x308)](_0x26d974, this[_0x1e5a83(0xb30)][_0x16b1e0][_0x1e5a83(0x812)][_0x1e5a83(0x813)](), _0x30dabc);
            if (null != this[_0x1e5a83(0x5ac)])
                for (_0x16b1e0 = 0x0; _0x16b1e0 < 0x8; _0x16b1e0++) {
                    var _0x41384d = this[_0x1e5a83(0x5ac)][_0x16b1e0];
                    _0x41384d && _0x41384d['drawAllObjects'](_0x26d974, _0x120ad0, _0x390126);
                }
        }
    }
    _0x5b83ac[_0x6027f5(0x59f)] = new _0x3697cd(), _0x5b83ac[_0x6027f5(0x811)] = new _0x441c6d(), _0x5b83ac[_0x6027f5(0xb36)] = new _0x4dce5e(new _0x3697cd(), new _0x3697cd()), _0x5b83ac[_0x6027f5(0xb3b)] = 0x8;
    class _0x5aa7d5 extends _0x2af7e0 {
        constructor() {
            super();
        }
        [_0x6027f5(0x207)](_0x5ab3d0) {
            var _0x48c496 = _0x6027f5;
            if (-0x1 !== _0x5ab3d0['_getIndexInMotionList']())
                throw 'OctreeMotionList:element\x20has\x20\x20in\x20\x20PhysicsUpdateList.';
            this[_0x48c496(0x800)](_0x5ab3d0), _0x5ab3d0[_0x48c496(0xb4c)](this[_0x48c496(0x205)]++);
        }
        [_0x6027f5(0x3b4)](_0x1e6b6c) {
            var _0x7276ef = _0x6027f5, _0x577d6f = _0x1e6b6c[_0x7276ef(0xb4d)]();
            if (this['length']--, _0x577d6f !== this[_0x7276ef(0x205)]) {
                var _0x300e7a = this['elements'][this[_0x7276ef(0x205)]];
                this[_0x7276ef(0x1fe)][_0x577d6f] = _0x300e7a, _0x300e7a[_0x7276ef(0xb4c)](_0x577d6f);
            }
            _0x1e6b6c[_0x7276ef(0xb4c)](-0x1);
        }
    }
    class _0x132b38 {
        constructor(_0x941264, _0x431b97, _0x13d09b, _0x2cdc5b) {
            var _0x17b2da = _0x6027f5;
            this[_0x17b2da(0xb4e)] = new _0x5aa7d5(), this[_0x17b2da(0x2b3)] = 0x0, _0x13d09b > _0x941264 && (console[_0x17b2da(0x25a)](_0x17b2da(0xb4f) + _0x13d09b + _0x17b2da(0xb50) + _0x941264), _0x13d09b = _0x941264), this[_0x17b2da(0xb51)] = _0x941264, this['_minSize'] = _0x13d09b, this[_0x17b2da(0xb34)] = Math[_0x17b2da(0x212)](Math[_0x17b2da(0x20c)](_0x2cdc5b, 0x1), 0x2), this[_0x17b2da(0x394)] = new _0x5b83ac(this, null, _0x941264, _0x431b97);
        }
        [_0x6027f5(0xb52)](_0x5d3632, _0x3916bc) {
            var _0x148f48 = _0x6027f5;
            _0x3916bc++;
            var _0x422cec = _0x5d3632[_0x148f48(0x5ac)];
            if (null != _0x422cec)
                for (var _0x312946 = _0x3916bc, _0x5c7cd3 = 0x0, _0x3126ea = _0x422cec['length']; _0x5c7cd3 < _0x3126ea; _0x5c7cd3++) {
                    var _0x882568 = _0x422cec[_0x5c7cd3];
                    _0x882568 && (_0x3916bc = Math[_0x148f48(0x20c)](this[_0x148f48(0xb52)](_0x882568, _0x312946), _0x3916bc));
                }
            return _0x3916bc;
        }
        [_0x6027f5(0xb53)](_0x351375) {
            var _0x1b9cdd = _0x6027f5, _0x1da3b4 = _0x351375['x'] >= 0x0 ? 0x1 : -0x1, _0x5b7cf7 = _0x351375['y'] >= 0x0 ? 0x1 : -0x1, _0x302a40 = _0x351375['z'] >= 0x0 ? 0x1 : -0x1, _0x1dba97 = this[_0x1b9cdd(0x394)], _0x2cb208 = this['_rootNode'][_0x1b9cdd(0xb31)] / 0x2, _0x8fda27 = 0x2 * this['_rootNode']['baseLength'], _0x3665df = this[_0x1b9cdd(0x394)][_0x1b9cdd(0x880)], _0x154acf = new _0x3697cd(_0x3665df['x'] + _0x1da3b4 * _0x2cb208, _0x3665df['y'] + _0x5b7cf7 * _0x2cb208, _0x3665df['z'] + _0x302a40 * _0x2cb208);
            if (this[_0x1b9cdd(0x394)] = new _0x5b83ac(this, null, _0x8fda27, _0x154acf), _0x1dba97[_0x1b9cdd(0xb48)]()) {
                for (var _0x4eb3e2 = this[_0x1b9cdd(0x394)][_0x1b9cdd(0xb3f)](_0x1dba97['center']), _0x5abdd3 = [], _0x43e46d = 0x0; _0x43e46d < 0x8; _0x43e46d++)
                    _0x43e46d == _0x4eb3e2 && (_0x1dba97[_0x1b9cdd(0x30f)] = this['_rootNode'], _0x5abdd3[_0x43e46d] = _0x1dba97);
                this[_0x1b9cdd(0x394)]['_children'] = _0x5abdd3;
            }
        }
        [_0x6027f5(0x207)](_0x6e5174) {
            var _0x10ff31 = _0x6027f5;
            for (var _0x283284 = 0x0; !this['_rootNode'][_0x10ff31(0x207)](_0x6e5174);) {
                var _0x33ee28 = _0x132b38['_tempVector30'];
                if (_0x3697cd[_0x10ff31(0x28a)](_0x6e5174[_0x10ff31(0x812)][_0x10ff31(0x81b)](), this[_0x10ff31(0x394)][_0x10ff31(0x880)], _0x33ee28), this[_0x10ff31(0xb53)](_0x33ee28), ++_0x283284 > 0x14)
                    throw _0x10ff31(0xb54) + (_0x283284 - 0x1) + _0x10ff31(0xb55);
            }
            this[_0x10ff31(0x2b3)]++;
        }
        [_0x6027f5(0x3b4)](_0x57f773) {
            var _0x4f72fc = _0x6027f5, _0x37cae9 = _0x57f773[_0x4f72fc(0xb0c)]()[_0x4f72fc(0x3b4)](_0x57f773);
            return _0x37cae9 && this[_0x4f72fc(0x2b3)]--, _0x37cae9;
        }
        [_0x6027f5(0x96f)](_0x3f0808) {
            var _0x152223 = _0x6027f5, _0x1e1b42 = 0x0, _0x3b1109 = _0x3f0808['_getOctreeNode']();
            if (_0x3b1109) {
                for (; !_0x3b1109[_0x152223(0x388)](_0x3f0808);) {
                    var _0x1097d0 = _0x132b38['_tempVector30'];
                    if (_0x3697cd[_0x152223(0x28a)](_0x3f0808[_0x152223(0x812)][_0x152223(0x81b)](), this[_0x152223(0x394)]['center'], _0x1097d0), this['_grow'](_0x1097d0), ++_0x1e1b42 > 0x14)
                        throw _0x152223(0xb54) + (_0x1e1b42 - 0x1) + ')\x20attempts\x20at\x20growing\x20the\x20octree.';
                }
                return !0x0;
            }
            return !0x1;
        }
        ['shrinkRootIfPossible']() {
            var _0x8a1139 = _0x6027f5;
            this['_rootNode'] = this[_0x8a1139(0x394)]['shrinkIfPossible'](this[_0x8a1139(0xb51)]);
        }
        [_0x6027f5(0xb19)](_0x57c2a9) {
            var _0x2c47d5 = _0x6027f5;
            this[_0x2c47d5(0xb4e)][_0x2c47d5(0x207)](_0x57c2a9);
        }
        [_0x6027f5(0xb0f)](_0x4ac902) {
            var _0x176bd5 = _0x6027f5;
            this[_0x176bd5(0xb4e)][_0x176bd5(0x3b4)](_0x4ac902);
        }
        [_0x6027f5(0x822)]() {
            var _0x2158f1 = _0x6027f5;
            for (var _0x2aef29 = this[_0x2158f1(0xb4e)]['elements'], _0x499d86 = 0x0, _0x51d4d9 = this[_0x2158f1(0xb4e)][_0x2158f1(0x205)]; _0x499d86 < _0x51d4d9; _0x499d86++) {
                var _0xf4b2c = _0x2aef29[_0x499d86];
                this['update'](_0xf4b2c), _0xf4b2c['_setIndexInMotionList'](-0x1);
            }
            this[_0x2158f1(0xb4e)][_0x2158f1(0x205)] = 0x0;
        }
        [_0x6027f5(0xb4a)](_0x27301e) {
            var _0x5561b7 = _0x6027f5;
            return this['_rootNode'][_0x5561b7(0xb4a)](_0x27301e);
        }
        [_0x6027f5(0xb4b)](_0xfe55c8, _0x5e45bd = Number['MAX_VALUE']) {
            var _0x38d774 = _0x6027f5;
            return this[_0x38d774(0x394)][_0x38d774(0xb4b)](_0xfe55c8, _0x5e45bd);
        }
        [_0x6027f5(0xb56)](_0x59d701, _0x50e3d5) {
            var _0x509609 = _0x6027f5;
            this[_0x509609(0x394)][_0x509609(0xb56)](_0x59d701, _0x50e3d5);
        }
        [_0x6027f5(0xb49)](_0x264642, _0x32a277, _0x3b6efa = Number[_0x6027f5(0xa3d)]) {
            var _0x1d040e = _0x6027f5;
            this[_0x1d040e(0x394)][_0x1d040e(0xb49)](_0x264642, _0x32a277, _0x3b6efa);
        }
        [_0x6027f5(0x830)](_0x417296, _0x2c5be1, _0x243352, _0x2238fe, _0x3efb11) {
            var _0x46e6d1 = _0x6027f5;
            this[_0x46e6d1(0x394)][_0x46e6d1(0x830)](_0x417296, _0x2c5be1, _0x243352, _0x2238fe, _0x3efb11);
        }
        [_0x6027f5(0xb57)]() {
            return this['_rootNode']['getBound']();
        }
        [_0x6027f5(0x826)](_0x5bb45e) {
            var _0x4d4035 = _0x6027f5, _0x4cfc43 = this[_0x4d4035(0xb52)](this['_rootNode'], -0x1);
            this[_0x4d4035(0x394)][_0x4d4035(0x826)](_0x5bb45e, -0x1, _0x4cfc43);
        }
        ['drawAllObjects'](_0x38028e) {
            var _0x3d7d10 = _0x6027f5, _0x2e01d8 = this[_0x3d7d10(0xb52)](this[_0x3d7d10(0x394)], -0x1);
            this[_0x3d7d10(0x394)][_0x3d7d10(0x827)](_0x38028e, -0x1, _0x2e01d8);
        }
    }
    _0x132b38[_0x6027f5(0x59f)] = new _0x3697cd();
    class _0x3c3cd4 {
    }
    class _0x1d9351 {
        constructor(_0x445252, _0x1bdbbc) {
            var _0x32cd9d = _0x6027f5;
            this[_0x32cd9d(0x880)] = _0x445252, this['radius'] = _0x1bdbbc;
        }
        ['toDefault']() {
            var _0x5ab578 = _0x6027f5;
            this[_0x5ab578(0x880)][_0x5ab578(0x219)](), this['radius'] = 0x0;
        }
        static [_0x6027f5(0xb58)](_0x195010, _0x4f4a59, _0x4514d9, _0x56f6f4) {
            var _0x34c9c6 = _0x6027f5;
            if (null == _0x195010)
                throw new Error(_0x34c9c6(0xa3c));
            if (_0x4f4a59 < 0x0 || _0x4f4a59 >= _0x195010[_0x34c9c6(0x205)])
                throw new Error('start' + _0x4f4a59 + 'Must\x20be\x20in\x20the\x20range\x20[0,\x20' + (_0x195010[_0x34c9c6(0x205)] - 0x1) + ']');
            if (_0x4514d9 < 0x0 || _0x4f4a59 + _0x4514d9 > _0x195010[_0x34c9c6(0x205)])
                throw new Error(_0x34c9c6(0x2b3) + _0x4514d9 + _0x34c9c6(0xb59) + _0x195010[_0x34c9c6(0x205)] + '}');
            var _0x4102cb = _0x4f4a59 + _0x4514d9, _0x14e59b = _0x1d9351[_0x34c9c6(0x490)];
            _0x14e59b['x'] = 0x0, _0x14e59b['y'] = 0x0, _0x14e59b['z'] = 0x0;
            for (var _0x4c390f = _0x4f4a59; _0x4c390f < _0x4102cb; ++_0x4c390f)
                _0x3697cd[_0x34c9c6(0x207)](_0x195010[_0x4c390f], _0x14e59b, _0x14e59b);
            var _0x18ce83 = _0x56f6f4['center'];
            _0x3697cd[_0x34c9c6(0x1f9)](_0x14e59b, 0x1 / _0x4514d9, _0x18ce83);
            var _0x28a56a = 0x0;
            for (_0x4c390f = _0x4f4a59; _0x4c390f < _0x4102cb; ++_0x4c390f) {
                var _0x1e5c84 = _0x3697cd[_0x34c9c6(0x209)](_0x18ce83, _0x195010[_0x4c390f]);
                _0x1e5c84 > _0x28a56a && (_0x28a56a = _0x1e5c84);
            }
            _0x56f6f4['radius'] = Math['sqrt'](_0x28a56a);
        }
        static [_0x6027f5(0xa3b)](_0x5ed6d5, _0x2390ac) {
            var _0x411932 = _0x6027f5;
            if (null == _0x5ed6d5)
                throw new Error(_0x411932(0xa3c));
            _0x1d9351[_0x411932(0xb58)](_0x5ed6d5, 0x0, _0x5ed6d5[_0x411932(0x205)], _0x2390ac);
        }
        [_0x6027f5(0xb5a)](_0x2573ea) {
            var _0x3b8a10 = _0x6027f5;
            return _0x4dcbd3[_0x3b8a10(0x890)](_0x2573ea, this);
        }
        ['intersectsRayPoint'](_0x30efdd, _0x3af4d4) {
            return _0x4dcbd3['intersectsRayAndSphereRP'](_0x30efdd, this, _0x3af4d4);
        }
        [_0x6027f5(0x1fc)](_0x1b1176) {
            var _0x4f5681 = _0x6027f5, _0x18fbe7 = _0x1b1176;
            this[_0x4f5681(0x880)][_0x4f5681(0x1fc)](_0x18fbe7[_0x4f5681(0x880)]), _0x18fbe7[_0x4f5681(0x882)] = this[_0x4f5681(0x882)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x2d9a4d = new _0x1d9351(new _0x3697cd(), 0x0);
            return this['cloneTo'](_0x2d9a4d), _0x2d9a4d;
        }
    }
    _0x1d9351[_0x6027f5(0x490)] = new _0x3697cd();
    class _0x483d68 {
        constructor() {
            var _0x37af68 = _0x6027f5;
            this[_0x37af68(0x5dc)] = new _0x3985fd(), this['position'] = new _0x3697cd(), this['viewMatrix'] = new _0x6b4d98(), this['projectionMatrix'] = new _0x6b4d98(), this[_0x37af68(0x963)] = new _0x6b4d98(), this[_0x37af68(0x82e)] = [
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd()),
                new _0x5a837f(new _0x3697cd())
            ], this[_0x37af68(0x95e)] = new _0x1d9351(new _0x3697cd(), 0x0);
        }
    }
    class _0x5bab53 {
        constructor() {
            var _0x3792cc = _0x6027f5;
            this[_0x3792cc(0x5dc)] = new _0x3985fd(), this[_0x3792cc(0x5a2)] = new _0x3697cd(), this[_0x3792cc(0x862)] = new _0x6b4d98(), this[_0x3792cc(0x8db)] = new _0x6b4d98(), this[_0x3792cc(0x963)] = new _0x6b4d98(), this[_0x3792cc(0x968)] = new _0x3217fb();
        }
    }
    (_0x460a4c = _0x18be32[_0x6027f5(0xb5b)] || (_0x18be32[_0x6027f5(0xb5b)] = {}))[_0x460a4c[_0x6027f5(0xb5c)] = 0x0] = _0x6027f5(0xb5c), _0x460a4c[_0x460a4c[_0x6027f5(0xb5d)] = 0x1] = 'SpotLight', _0x460a4c[_0x460a4c[_0x6027f5(0xb5e)] = 0x2] = 'PointLight';
    class _0x170273 {
        constructor() {
            var _0x34d46a = _0x6027f5;
            this[_0x34d46a(0xb5f)] = new _0x5b8e4e(), this['_shadowParams'] = new _0x5b8e4e(), this[_0x34d46a(0xb60)] = new _0x5b8e4e(), this[_0x34d46a(0xb61)] = new _0x5b8e4e(), this[_0x34d46a(0xb62)] = new Float32Array(0x10 * _0x170273[_0x34d46a(0xb63)]), this[_0x34d46a(0xb64)] = new _0x6b4d98(), this[_0x34d46a(0xb65)] = new Float32Array(0x4 * _0x170273[_0x34d46a(0xb63)]), this['_cascadeCount'] = 0x0, this[_0x34d46a(0xb66)] = 0x0, this[_0x34d46a(0xb67)] = 0x0, this[_0x34d46a(0xb68)] = [
                new _0x483d68(),
                new _0x483d68(),
                new _0x483d68(),
                new _0x483d68()
            ], this[_0x34d46a(0xb69)] = new _0x5bab53(), this['_lightUp'] = new _0x3697cd(), this[_0x34d46a(0xb6a)] = new _0x3697cd(), this['_lightForward'] = new _0x3697cd(), this[_0x34d46a(0xb69)]['cameraCullInfo'][_0x34d46a(0x831)] = new _0x1391ac(new _0x6b4d98());
        }
        [_0x6027f5(0xb6b)](_0x5cc949, _0x47226c, _0x1eba9a, _0x1f5d55, _0x2bef81, _0x589462, _0x459fc5) {
            var _0x245240 = _0x6027f5;
            switch (_0x47226c[_0x245240(0x4a8)](_0x170273[_0x245240(0x977)], _0x589462), _0x459fc5) {
            case _0x18be32['LightType'][_0x245240(0x91b)]:
                _0x47226c[_0x245240(0x57a)](_0x170273[_0x245240(0xb6c)], _0x1f5d55);
                break;
            case _0x18be32[_0x245240(0x91a)][_0x245240(0x91c)]:
                _0x47226c[_0x245240(0x4a8)](_0x170273['SHADOW_PARAMS'], _0x2bef81);
                break;
            case _0x18be32[_0x245240(0x91a)]['Point']:
            }
            var _0x3b8c56 = _0x1eba9a[_0x245240(0x5dc)];
            _0x3b8c56[_0x245240(0x4aa)](_0x1d2570['VIEWMATRIX'], _0x1eba9a['viewMatrix']), _0x3b8c56[_0x245240(0x4aa)](_0x1d2570['PROJECTMATRIX'], _0x1eba9a['projectionMatrix']), _0x3b8c56[_0x245240(0x4aa)](_0x1d2570['VIEWPROJECTMATRIX'], _0x1eba9a[_0x245240(0x963)]), _0x5cc949[_0x245240(0x862)] = _0x1eba9a['viewMatrix'], _0x5cc949[_0x245240(0x8db)] = _0x1eba9a[_0x245240(0x8db)], _0x5cc949[_0x245240(0x5dd)] = _0x1eba9a[_0x245240(0x963)];
        }
        [_0x6027f5(0xb6d)](_0x2ca2b6) {
            var _0x3a430b = _0x6027f5, _0x23a2fa = this[_0x3a430b(0xb6e)];
            switch (_0x23a2fa['shadowCascadesMode'] !== _0x18be32[_0x3a430b(0x93e)]['NoCascades'] ? _0x2ca2b6[_0x3a430b(0x49a)](_0x43184a[_0x3a430b(0xb6f)]) : _0x2ca2b6[_0x3a430b(0x49b)](_0x43184a[_0x3a430b(0xb6f)]), _0x23a2fa[_0x3a430b(0x951)]) {
            case _0x18be32[_0x3a430b(0x915)][_0x3a430b(0x917)]:
                _0x2ca2b6['removeDefine'](_0x43184a[_0x3a430b(0xb70)]), _0x2ca2b6[_0x3a430b(0x49b)](_0x43184a[_0x3a430b(0xb71)]);
                break;
            case _0x18be32['ShadowMode'][_0x3a430b(0x918)]:
                _0x2ca2b6[_0x3a430b(0x49a)](_0x43184a[_0x3a430b(0xb70)]), _0x2ca2b6[_0x3a430b(0x49b)](_0x43184a[_0x3a430b(0xb71)]);
                break;
            case _0x18be32[_0x3a430b(0x915)][_0x3a430b(0x919)]:
                _0x2ca2b6[_0x3a430b(0x49a)](_0x43184a['SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH']), _0x2ca2b6['removeDefine'](_0x43184a[_0x3a430b(0xb70)]);
            }
            _0x2ca2b6[_0x3a430b(0x4ac)](_0x170273[_0x3a430b(0xb72)], this[_0x3a430b(0xb73)]), _0x2ca2b6[_0x3a430b(0x4ab)](_0x170273[_0x3a430b(0xb74)], this[_0x3a430b(0xb62)]), _0x2ca2b6[_0x3a430b(0x4a8)](_0x170273['SHADOW_MAP_SIZE'], this[_0x3a430b(0xb60)]), _0x2ca2b6['setVector'](_0x170273[_0x3a430b(0xb75)], this['_shadowParams']), _0x2ca2b6['setBuffer'](_0x170273[_0x3a430b(0xb76)], this['_splitBoundSpheres']);
        }
        [_0x6027f5(0xb77)](_0x44dc50) {
            var _0x3a9c1e = _0x6027f5;
            switch (this['_light'][_0x3a9c1e(0x951)]) {
            case _0x18be32[_0x3a9c1e(0x915)]['Hard']:
                _0x44dc50[_0x3a9c1e(0x49b)](_0x43184a[_0x3a9c1e(0xb78)]), _0x44dc50[_0x3a9c1e(0x49b)](_0x43184a[_0x3a9c1e(0xb79)]);
                break;
            case _0x18be32[_0x3a9c1e(0x915)][_0x3a9c1e(0x918)]:
                _0x44dc50[_0x3a9c1e(0x49a)](_0x43184a[_0x3a9c1e(0xb79)]), _0x44dc50[_0x3a9c1e(0x49b)](_0x43184a[_0x3a9c1e(0xb78)]);
                break;
            case _0x18be32[_0x3a9c1e(0x915)][_0x3a9c1e(0x919)]:
                _0x44dc50['addDefine'](_0x43184a[_0x3a9c1e(0xb78)]), _0x44dc50[_0x3a9c1e(0x49b)](_0x43184a[_0x3a9c1e(0xb79)]);
            }
            _0x44dc50[_0x3a9c1e(0x4ac)](_0x170273[_0x3a9c1e(0xb7a)], this[_0x3a9c1e(0xb7b)]), _0x44dc50['setMatrix4x4'](_0x170273[_0x3a9c1e(0xb7c)], this['_shadowSpotMatrices']), _0x44dc50['setVector'](_0x170273['SHADOW_SPOTMAP_SIZE'], this[_0x3a9c1e(0xb61)]), _0x44dc50[_0x3a9c1e(0x4a8)](_0x170273[_0x3a9c1e(0xb75)], this['_shadowParams']);
        }
        [_0x6027f5(0x96f)](_0x2d4f4e, _0x4317cc, _0x19a123) {
            var _0xd664f0 = _0x6027f5;
            switch (_0x19a123) {
            case _0x18be32[_0xd664f0(0xb5b)][_0xd664f0(0xb5c)]:
                this['_light'] = _0x4317cc;
                var _0x2b8bab = (_0x20b63b = _0x170273[_0xd664f0(0x5a3)])[_0xd664f0(0x1fe)], _0x115c5f = this[_0xd664f0(0xb7d)], _0x71eaa = this[_0xd664f0(0xb6a)], _0xba6cc7 = this['_lightForward'];
                _0x6b4d98[_0xd664f0(0x47f)](_0x4317cc[_0xd664f0(0x3d5)][_0xd664f0(0x5a4)], _0x20b63b), _0x71eaa['setValue'](_0x2b8bab[0x0], _0x2b8bab[0x1], _0x2b8bab[0x2]), _0x115c5f[_0xd664f0(0x1f8)](_0x2b8bab[0x4], _0x2b8bab[0x5], _0x2b8bab[0x6]), _0xba6cc7[_0xd664f0(0x1f8)](-_0x2b8bab[0x8], -_0x2b8bab[0x9], -_0x2b8bab[0xa]);
                var _0x29ea9c, _0x4c62c7, _0x700cb3, _0x268f48, _0x4cfb5a = _0x4317cc[_0xd664f0(0x91f)], _0x32f4c5 = _0x4317cc[_0xd664f0(0xb7e)];
                _0x32f4c5 == _0x18be32[_0xd664f0(0x93e)][_0xd664f0(0x93f)] ? (_0x29ea9c = 0x1, _0x4c62c7 = _0x4cfb5a, _0x700cb3 = _0x4cfb5a, _0x268f48 = _0x4cfb5a) : (_0x29ea9c = _0x32f4c5 == _0x18be32[_0xd664f0(0x93e)][_0xd664f0(0x940)] ? 0x2 : 0x4, _0x700cb3 = 0x2 * (_0x4c62c7 = _0x3c155f[_0xd664f0(0x960)](_0x4cfb5a, _0x4cfb5a, _0x29ea9c)), _0x268f48 = _0x32f4c5 == _0x18be32[_0xd664f0(0x93e)][_0xd664f0(0x940)] ? _0x4c62c7 : 0x2 * _0x4c62c7), this[_0xd664f0(0xb7f)] = _0x29ea9c, this[_0xd664f0(0xb66)] = _0x700cb3, this[_0xd664f0(0xb67)] = _0x268f48;
                var _0x19eca4 = _0x170273['_cascadesSplitDistance'], _0x4eaac3 = _0x170273[_0xd664f0(0xb80)], _0x22cbe8 = _0x2d4f4e[_0xd664f0(0x861)], _0x392656 = Math[_0xd664f0(0x212)](_0x2d4f4e[_0xd664f0(0x860)], _0x4317cc[_0xd664f0(0x920)]), _0x2044d9 = this[_0xd664f0(0xb62)], _0x35eccc = this[_0xd664f0(0xb65)];
                _0x3c155f['getCascadesSplitDistance'](_0x4317cc[_0xd664f0(0xb81)], _0x4317cc[_0xd664f0(0xb82)], _0x22cbe8, _0x392656, _0x2d4f4e[_0xd664f0(0x8dd)] * _0x255128[_0xd664f0(0x1f7)], _0x2d4f4e['aspectRatio'], _0x32f4c5, _0x19eca4), _0x3c155f['getCameraFrustumPlanes'](_0x2d4f4e[_0xd664f0(0x5dd)], _0x4eaac3);
                var _0x39d509 = _0x170273[_0xd664f0(0x59f)];
                _0x2d4f4e['_transform']['getForward'](_0x39d509), _0x3697cd[_0xd664f0(0x214)](_0x39d509, _0x39d509);
                for (var _0x1ebd50 = 0x0; _0x1ebd50 < _0x29ea9c; _0x1ebd50++) {
                    var _0x55b7d4 = this[_0xd664f0(0xb68)][_0x1ebd50];
                    _0x55b7d4[_0xd664f0(0x95d)] = _0x3c155f[_0xd664f0(0x95f)](_0x19eca4[_0x1ebd50], _0x19eca4[_0x1ebd50 + 0x1], _0x2d4f4e['fieldOfView'] * _0x255128[_0xd664f0(0x1f7)], _0x2d4f4e['aspectRatio'], _0x2d4f4e[_0xd664f0(0x3d5)][_0xd664f0(0x5a2)], _0x39d509, _0x55b7d4[_0xd664f0(0x95e)]), _0x3c155f[_0xd664f0(0x957)](_0x4eaac3, _0x1ebd50, _0x19eca4, _0x22cbe8, _0xba6cc7, _0x55b7d4), _0x3c155f[_0xd664f0(0x961)](_0x115c5f, _0x71eaa, _0xba6cc7, _0x1ebd50, _0x4317cc['_shadowNearPlane'], _0x4c62c7, _0x55b7d4, _0x2044d9), _0x29ea9c > 0x1 && _0x3c155f[_0xd664f0(0xb83)](_0x55b7d4, _0x700cb3, _0x268f48, _0x1ebd50, _0x2044d9);
                }
                _0x3c155f[_0xd664f0(0x969)](_0x4317cc, _0x700cb3, _0x268f48, this[_0xd664f0(0xb68)], _0x29ea9c, this[_0xd664f0(0xb60)], this[_0xd664f0(0xb84)], _0x2044d9, _0x35eccc);
                break;
            case _0x18be32[_0xd664f0(0xb5b)][_0xd664f0(0xb5d)]:
                this['_light'] = _0x4317cc;
                var _0x20b63b = _0x170273[_0xd664f0(0x5a3)], _0x29d8da = (_0xba6cc7 = this[_0xd664f0(0xb85)], this[_0xd664f0(0xb6e)][_0xd664f0(0x91f)]);
                this[_0xd664f0(0xb66)] = _0x29d8da, this[_0xd664f0(0xb67)] = _0x29d8da;
                var _0xf585fe = this[_0xd664f0(0xb69)];
                _0x3c155f[_0xd664f0(0x966)](_0xf585fe, this['_light'], _0x29d8da, this[_0xd664f0(0xb84)], this['_shadowSpotMatrices'], this[_0xd664f0(0xb61)]);
                break;
            case _0x18be32[_0xd664f0(0xb5b)][_0xd664f0(0xb5e)]:
                break;
            default:
                throw 'There\x20is\x20no\x20shadow\x20of\x20this\x20type';
            }
        }
        [_0x6027f5(0x4ff)](_0x382525, _0x34edfc, _0x48b5ce) {
            var _0x1baf67 = _0x6027f5;
            switch (_0x48b5ce) {
            case _0x18be32[_0x1baf67(0xb5b)]['DirectionLight']:
                var _0xe9ddee = _0x34edfc[_0x1baf67(0x4e2)];
                _0x382525[_0x1baf67(0x5e0)] = _0x1baf67(0x975), _0x3985fd['setRuntimeValueMode'](!0x1), (_0x2abd60 = this[_0x1baf67(0xb73)] = _0x3c155f['getTemporaryShadowTexture'](this[_0x1baf67(0xb66)], this['_shadowMapHeight'], _0x387b86[_0x1baf67(0x3e4)][_0x1baf67(0x3e5)]))[_0x1baf67(0x568)]();
                for (var _0x4b0258 = this[_0x1baf67(0xb6e)], _0x2ec705 = 0x0, _0xd0e96b = this[_0x1baf67(0xb7f)]; _0x2ec705 < _0xd0e96b; _0x2ec705++) {
                    var _0x22b91b = this[_0x1baf67(0xb68)][_0x2ec705];
                    _0x3c155f[_0x1baf67(0x94e)](_0x4b0258, _0x22b91b['projectionMatrix'], _0x22b91b[_0x1baf67(0x954)], this['_shadowBias']), this[_0x1baf67(0xb6b)](_0x382525, _0xe9ddee, _0x22b91b, this['_lightForward'], this[_0x1baf67(0xb84)], this[_0x1baf67(0xb5f)], _0x18be32[_0x1baf67(0x91a)]['Directional']);
                    var _0x3f0f0a = _0x1b438f[_0x1baf67(0x83b)];
                    _0x3f0f0a[_0x1baf67(0x5a2)] = _0x22b91b[_0x1baf67(0x5a2)], _0x3f0f0a[_0x1baf67(0x82e)] = _0x22b91b['cullPlanes'], _0x3f0f0a[_0x1baf67(0x82d)] = _0x22b91b[_0x1baf67(0x82d)], _0x3f0f0a[_0x1baf67(0xb86)] = _0x22b91b[_0x1baf67(0x95e)], _0x3f0f0a[_0x1baf67(0x87b)] = this[_0x1baf67(0xb85)];
                    var _0x2efa5e = _0x1b438f[_0x1baf67(0x829)](_0x3f0f0a, _0x34edfc, _0x382525);
                    _0x382525['cameraShaderValue'] = _0x22b91b[_0x1baf67(0x5dc)], _0x55cd9b[_0x1baf67(0x385)]++;
                    var _0x4c0cf8 = _0x387b86[_0x1baf67(0x303)][_0x1baf67(0x304)], _0x453eb5 = _0x22b91b['resolution'], _0x45234d = _0x22b91b[_0x1baf67(0x955)], _0x581484 = _0x22b91b[_0x1baf67(0x956)];
                    _0x4c0cf8[_0x1baf67(0x659)](_0x4c0cf8[_0x1baf67(0x97a)]), _0x4c0cf8['viewport'](_0x45234d, _0x581484, _0x453eb5, _0x453eb5), _0x4c0cf8['scissor'](_0x45234d, _0x581484, _0x453eb5, _0x453eb5), _0x4c0cf8[_0x1baf67(0x44c)](_0x4c0cf8['DEPTH_BUFFER_BIT']), _0x2efa5e && (_0x4c0cf8['scissor'](_0x45234d + 0x1, _0x581484 + 0x1, _0x453eb5 - 0x2, _0x453eb5 - 0x2), _0x34edfc[_0x1baf67(0x81d)][_0x1baf67(0x5e8)](_0x382525));
                }
                _0x2abd60['_end'](), this[_0x1baf67(0xb6d)](_0xe9ddee), _0x3985fd[_0x1baf67(0x4db)](!0x0), _0x382525[_0x1baf67(0x5e0)] = _0x382525[_0x1baf67(0x3e0)];
                break;
            case _0x18be32[_0x1baf67(0xb5b)]['SpotLight']:
                _0xe9ddee = _0x34edfc[_0x1baf67(0x4e2)], (_0x382525[_0x1baf67(0x5e0)] = _0x1baf67(0x975), _0x3985fd[_0x1baf67(0x4db)](!0x1));
                var _0x2abd60, _0x3f997d = this[_0x1baf67(0xb6e)];
                (_0x2abd60 = this[_0x1baf67(0xb7b)] = _0x3c155f[_0x1baf67(0xb87)](this[_0x1baf67(0xb66)], this[_0x1baf67(0xb67)], _0x387b86['RenderTextureDepthFormat'][_0x1baf67(0x3e5)]))[_0x1baf67(0x568)]();
                var _0x5273c1 = this[_0x1baf67(0xb69)];
                _0x3c155f[_0x1baf67(0x94e)](_0x3f997d, _0x5273c1['projectionMatrix'], _0x5273c1[_0x1baf67(0x954)], this[_0x1baf67(0xb5f)]), this[_0x1baf67(0xb6b)](_0x382525, _0xe9ddee, _0x5273c1, this['_light'][_0x1baf67(0x3d6)][_0x1baf67(0x5a2)], this[_0x1baf67(0xb84)], this[_0x1baf67(0xb5f)], _0x18be32[_0x1baf67(0x91a)][_0x1baf67(0x91c)]), _0x2efa5e = _0x1b438f[_0x1baf67(0xb88)](_0x5273c1['cameraCullInfo'], _0x34edfc, _0x382525), (_0x382525[_0x1baf67(0x5dc)] = _0x5273c1['cameraShaderValue'], _0x55cd9b[_0x1baf67(0x385)]++, (_0x4c0cf8 = _0x387b86['LayaGL']['instance'])['enable'](_0x4c0cf8[_0x1baf67(0x97a)]), _0x4c0cf8['viewport'](_0x5273c1[_0x1baf67(0x955)], _0x5273c1[_0x1baf67(0x956)], _0x5273c1[_0x1baf67(0x954)], _0x5273c1[_0x1baf67(0x954)]), _0x4c0cf8[_0x1baf67(0x978)](_0x5273c1['offsetX'], _0x5273c1[_0x1baf67(0x956)], _0x5273c1[_0x1baf67(0x954)], _0x5273c1[_0x1baf67(0x954)]), _0x4c0cf8['clear'](_0x4c0cf8[_0x1baf67(0x5f0)]), _0x2efa5e && (_0x4c0cf8[_0x1baf67(0x978)](_0x5273c1[_0x1baf67(0x955)], _0x5273c1[_0x1baf67(0x956)], _0x5273c1[_0x1baf67(0x954)], _0x5273c1[_0x1baf67(0x954)]), _0x34edfc['_opaqueQueue']['_render'](_0x382525)), _0x2abd60['_end'](), this[_0x1baf67(0xb77)](_0xe9ddee), _0x3985fd['setRuntimeValueMode'](!0x0), _0x382525[_0x1baf67(0x5e0)] = _0x382525[_0x1baf67(0x3e0)]);
                break;
            case _0x18be32[_0x1baf67(0xb5b)][_0x1baf67(0xb5e)]:
                break;
            default:
                throw 'There\x20is\x20no\x20shadow\x20of\x20this\x20type';
            }
        }
        [_0x6027f5(0x97e)]() {
            var _0x166492 = _0x6027f5;
            this[_0x166492(0xb73)] && _0x26547d[_0x166492(0x3f4)](this[_0x166492(0xb73)]), this['_shadowSpotLightMap'] && _0x26547d['recoverToPool'](this['_shadowSpotLightMap']), this['_shadowDirectLightMap'] = null, this[_0x166492(0xb7b)] = null, this['_light'] = null;
        }
    }
    _0x170273[_0x6027f5(0x59f)] = new _0x3697cd(), _0x170273[_0x6027f5(0x5a3)] = new _0x6b4d98(), _0x170273[_0x6027f5(0x977)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xb89)), _0x170273[_0x6027f5(0xb6c)] = _0x3a9f31[_0x6027f5(0x553)]('u_ShadowLightDirection'), _0x170273['SHADOW_SPLIT_SPHERES'] = _0x3a9f31['propertyNameToID']('u_ShadowSplitSpheres'), _0x170273[_0x6027f5(0xb74)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xb8a)), _0x170273[_0x6027f5(0xb8b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xb8c)), _0x170273[_0x6027f5(0xb72)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xb8d)), _0x170273[_0x6027f5(0xb75)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xb8e)), _0x170273['SHADOW_SPOTMAP_SIZE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xb8f)), _0x170273[_0x6027f5(0xb7a)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xb90)), _0x170273[_0x6027f5(0xb7c)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xb91)), _0x170273['_maxCascades'] = 0x4, _0x170273['_cascadesSplitDistance'] = new Array(_0x170273[_0x6027f5(0xb63)] + 0x1), _0x170273[_0x6027f5(0xb80)] = new Array(new _0x5a837f(new _0x3697cd()), new _0x5a837f(new _0x3697cd()), new _0x5a837f(new _0x3697cd()), new _0x5a837f(new _0x3697cd()), new _0x5a837f(new _0x3697cd()), new _0x5a837f(new _0x3697cd()));
    class _0x557675 {
        constructor() {
            this['_batchRenderElementPool'] = [];
        }
        static [_0x6027f5(0xaba)](_0x32e9ae) {
            var _0x582768 = _0x6027f5;
            _0x557675[_0x582768(0xabb)][_0x582768(0x2ac)](_0x32e9ae);
        }
        ['_clear']() {
            var _0xda2bd = _0x6027f5;
            this[_0xda2bd(0xac2)] = 0x0;
        }
        [_0x6027f5(0xaad)]() {
            var _0x4a640e = _0x6027f5;
            throw _0x4a640e(0xac1);
        }
        [_0x6027f5(0xac5)]() {
        }
    }
    _0x557675['_managers'] = [];
    class _0x20337f extends _0x2af7e0 {
        constructor() {
            super();
        }
        [_0x6027f5(0x207)](_0x206926) {
            var _0x26423a = _0x6027f5;
            this['_add'](_0x206926), _0x206926['_setIndexInReflectionList'](this[_0x26423a(0x205)]++);
        }
        [_0x6027f5(0x3b4)](_0x2a7fa1) {
            var _0x703fea = _0x6027f5, _0x119823 = _0x2a7fa1[_0x703fea(0xaf6)]();
            if (this['length']--, _0x119823 !== this[_0x703fea(0x205)]) {
                var _0x17d0ec = this[_0x703fea(0x1fe)][this[_0x703fea(0x205)]];
                this[_0x703fea(0x1fe)][_0x119823] = _0x17d0ec, _0x17d0ec[_0x703fea(0xaf4)](_0x119823);
            }
            _0x2a7fa1['_setIndexInReflectionList'](-0x1);
        }
    }
    class _0x5071f6 {
        constructor() {
            var _0x29139e = _0x6027f5;
            this['_reflectionProbes'] = new _0x20337f(), this['_motionObjects'] = new _0x2af7e0(), this[_0x29139e(0xb92)] = !0x1, this[_0x29139e(0xb93)] = new _0x24dd24(), this['_sceneReflectionProbe']['bounds'] = new _0xf16d64(new _0x3697cd(0x0, 0x0, 0x0), new _0x3697cd(0x0, 0x0, 0x0)), this[_0x29139e(0xb93)]['boxProjection'] = !0x1, this[_0x29139e(0xb93)][_0x29139e(0xaa6)] = !0x0;
        }
        set [_0x6027f5(0xb94)](_0x200928) {
            var _0x4af326 = _0x6027f5;
            this[_0x4af326(0xb93)][_0x4af326(0xaed)] = _0x200928;
        }
        set [_0x6027f5(0xb95)](_0x2f4194) {
            this['_sceneReflectionProbe']['reflectionHDRParams'] = _0x2f4194;
        }
        [_0x6027f5(0xb96)](_0x44fe04) {
            var _0x5384c4 = _0x6027f5;
            if (0x0 != this[_0x5384c4(0xb97)][_0x5384c4(0x205)]) {
                for (var _0x35320f, _0x2601bd, _0x27a157 = this['_reflectionProbes'][_0x5384c4(0x1fe)], _0x513143 = 0x0, _0x221cf9 = _0x44fe04[_0x5384c4(0x812)], _0x186832 = 0x0, _0x57005d = this[_0x5384c4(0xb97)][_0x5384c4(0x205)]; _0x186832 < _0x57005d; _0x186832++) {
                    var _0x538c8f = _0x27a157[_0x186832];
                    if (_0x35320f) {
                        if (_0x35320f[_0x5384c4(0xae8)] > _0x538c8f[_0x5384c4(0xae8)])
                            continue;
                        if ((_0x2601bd = _0x221cf9[_0x5384c4(0xb98)](_0x538c8f[_0x5384c4(0x812)])) < _0x513143 && _0x35320f[_0x5384c4(0xae8)] == _0x538c8f['importance'])
                            continue;
                    } else {
                        if ((_0x2601bd = _0x221cf9[_0x5384c4(0xb98)](_0x538c8f[_0x5384c4(0x812)])) < _0x513143)
                            continue;
                    }
                    _0x35320f = _0x538c8f, _0x513143 = _0x2601bd;
                }
                !_0x35320f && this[_0x5384c4(0xb93)] && (_0x35320f = this[_0x5384c4(0xb93)]), _0x44fe04[_0x5384c4(0xaa5)] = _0x35320f;
            } else
                _0x44fe04['_probReflection'] = this[_0x5384c4(0xb93)];
        }
        [_0x6027f5(0x207)](_0x178c01) {
            var _0x453308 = _0x6027f5;
            this['_reflectionProbes']['add'](_0x178c01), this[_0x453308(0xb92)] = !0x0;
        }
        [_0x6027f5(0x3b4)](_0x469df9) {
            var _0x360749 = _0x6027f5;
            this[_0x360749(0xb97)][_0x360749(0x3b4)](_0x469df9), this[_0x360749(0xb92)] = !0x0;
        }
        ['addMotionObject'](_0x8e5a78) {
            var _0xdc667 = _0x6027f5;
            this[_0xdc667(0xb4e)][_0xdc667(0x207)](_0x8e5a78);
        }
        [_0x6027f5(0x96f)]() {
            var _0x6d6a28 = _0x6027f5;
            for (var _0x356561 = this[_0x6d6a28(0xb4e)][_0x6d6a28(0x1fe)], _0x3eb302 = 0x0, _0x522404 = this['_motionObjects'][_0x6d6a28(0x205)]; _0x3eb302 < _0x522404; _0x3eb302++)
                this[_0x6d6a28(0xb96)](_0x356561[_0x3eb302]);
            this[_0x6d6a28(0xb99)]();
        }
        [_0x6027f5(0xb9a)](_0x2064aa) {
            var _0x4f2a17 = _0x6027f5;
            for (var _0x1b9b93 = _0x2064aa[_0x4f2a17(0x1fe)], _0xf86fa1 = 0x0, _0x5cdbbe = _0x2064aa['length']; _0xf86fa1 < _0x5cdbbe; _0xf86fa1++)
                this[_0x4f2a17(0xb96)](_0x1b9b93[_0xf86fa1]);
            this[_0x4f2a17(0xb92)] = !0x1;
        }
        [_0x6027f5(0xb99)]() {
            var _0x3106b9 = _0x6027f5;
            this[_0x3106b9(0xb4e)][_0x3106b9(0x205)] = 0x0;
        }
        [_0x6027f5(0x364)]() {
        }
    }
    (_0x4fdbf7 = _0x18be32[_0x6027f5(0xb9b)] || (_0x18be32[_0x6027f5(0xb9b)] = {}))[_0x4fdbf7['SolidColor'] = 0x0] = _0x6027f5(0x980), _0x4fdbf7[_0x4fdbf7[_0x6027f5(0xb9c)] = 0x1] = _0x6027f5(0xb9c);
    class _0x9c4b57 extends _0x387b86[_0x6027f5(0xb9d)] {
        constructor() {
            var _0x26a771 = _0x6027f5;
            super(), this[_0x26a771(0x933)] = 0x0, this[_0x26a771(0xb9e)] = new _0x2c6a45(), this[_0x26a771(0x865)] = new _0x2c6a45(), this[_0x26a771(0x863)] = new _0x2c6a45(), this[_0x26a771(0x937)] = new _0x254d71(), this[_0x26a771(0xb9f)] = [], this[_0x26a771(0x8e1)] = new _0xc214db(), this['_input'] = new _0x3c295f(), this['_timer'] = _0x387b86[_0x26a771(0x328)][_0x26a771(0x3c0)], this[_0x26a771(0xba0)] = 0x0, this['_shCoefficients'] = new Array(0x7), this[_0x26a771(0xba1)] = _0x18be32[_0x26a771(0xb9b)][_0x26a771(0x980)], this[_0x26a771(0xba2)] = new _0x44b580(), this['_ambientSphericalHarmonicsIntensity'] = 0x1, this[_0x26a771(0xae5)] = _0x387b86[_0x26a771(0xae6)][_0x26a771(0xba3)], this[_0x26a771(0xba4)] = 0x1, this[_0x26a771(0xba5)] = [], this[_0x26a771(0x81f)] = new _0x3a62b0(), this['_opaqueQueue'] = new _0x53bb9f(!0x1), this[_0x26a771(0x81e)] = new _0x53bb9f(!0x0), this[_0x26a771(0x8ee)] = [], this[_0x26a771(0x386)] = new _0x3a62b0(), this[_0x26a771(0xba6)] = new Array(), this['_tempScriptPool'] = new Array(), this['_needClearScriptPool'] = !0x1, this['_reflectionCubeHDRParams'] = new _0x5b8e4e(), this[_0x26a771(0xaf7)] = new _0x5071f6(), this[_0x26a771(0xba7)] = Math[_0x26a771(0x2ff)](0x2, 0x0), this[_0x26a771(0xba8)] = !0x0, this[_0x26a771(0xba9)] = new _0x387b86['SubmitKey'](), this[_0x26a771(0xa72)] = new Object(), this[_0x26a771(0xafc)] = 0x0, !_0x362537['_config'][_0x26a771(0x24c)] && _0x567245[_0x26a771(0x22e)] ? this[_0x26a771(0x9f6)] = new _0x387b86[(_0x26a771(0x234))](_0x9c4b57[_0x26a771(0xbaa)]) : _0x567245[_0x26a771(0x239)] && (this['_cannonPhysicsSimulation'] = new _0x387b86[(_0x26a771(0x23c))](_0x9c4b57[_0x26a771(0x252)])), this[_0x26a771(0x4e2)] = new _0x3985fd(null), this[_0x26a771(0xbab)] = !0x1, this[_0x26a771(0xbac)] = 0x12c, this[_0x26a771(0xbad)] = 0x3e8, this['fogColor'] = new _0x3697cd(0.7, 0.7, 0.7), this['ambientColor'] = new _0x3697cd(0.212, 0.227, 0.259), this[_0x26a771(0xbae)] = 0x1, this[_0x26a771(0xbaf)] = _0x2fe14f[_0x26a771(0xa16)];
            for (var _0x587126 = 0x0; _0x587126 < 0x7; _0x587126++)
                this[_0x26a771(0xbb0)][_0x587126] = new _0x5b8e4e();
            if (this['_reflectionProbeManager'][_0x26a771(0xb95)] = this[_0x26a771(0xbb1)], this[_0x26a771(0x3b0)] = this, this[_0x26a771(0xbb2)]['__init__'](_0x387b86[_0x26a771(0x31a)]['canvas'], this), _0x9c4b57[_0x26a771(0x262)] && (this[_0x26a771(0x821)] = new _0x132b38(_0x9c4b57[_0x26a771(0x246)], _0x9c4b57['octreeInitialCenter'], _0x9c4b57[_0x26a771(0x248)], _0x9c4b57[_0x26a771(0x249)])), _0x1b438f[_0x26a771(0x24a)]) {
                this[_0x26a771(0x825)] = new _0x1570e6();
                var _0xddc0b = new _0x5b1b35();
                _0xddc0b[_0x26a771(0x68a)] = _0xe2444c[_0x26a771(0x6ad)], _0xddc0b['alphaTest'] = !0x1, _0xddc0b[_0x26a771(0x699)] = !0x1, _0xddc0b[_0x26a771(0x697)] = _0x47a097[_0x26a771(0x6b7)], _0xddc0b['blend'] = _0x47a097[_0x26a771(0x6c7)], _0xddc0b[_0x26a771(0x69b)] = _0x47a097[_0x26a771(0x6cc)], _0xddc0b[_0x26a771(0x69c)] = _0x47a097[_0x26a771(0x6fc)], _0xddc0b['depthTest'] = _0x47a097[_0x26a771(0x6fa)], this[_0x26a771(0x825)][_0x26a771(0xb22)]['sharedMaterial'] = _0xddc0b;
            }
        }
        static [_0x6027f5(0x230)]() {
            var _0x47fb85 = _0x6027f5, _0x2b4628 = _0x362537[_0x47fb85(0x251)];
            if (_0x2b4628[_0x47fb85(0x9bb)]) {
                const _0x1b4251 = 0x4;
                var _0x1b9658 = _0x2b4628[_0x47fb85(0x259)], _0x36a12e = _0x2b4628[_0x47fb85(0x25c)];
                _0x1ae54c['instance'] = new _0x1ae54c(_0x36a12e['x'], _0x36a12e['y'], _0x36a12e['z'], Math['min'](_0x2b4628[_0x47fb85(0x259)], _0x2b4628['_maxAreaLightCountPerClusterAverage'])), _0x9c4b57['_lightTexture'] = _0x3acd08['_createFloatTextureBuffer'](_0x1b4251, _0x1b9658), _0x9c4b57[_0x47fb85(0xbb3)]['lock'] = !0x0, _0x9c4b57['_lightPixles'] = new Float32Array(_0x1b9658 * _0x1b4251 * 0x4);
            }
            _0x43184a[_0x47fb85(0xbb4)] = _0x3a9f31[_0x47fb85(0x510)]('FOG'), _0x43184a[_0x47fb85(0xbb5)] = _0x3a9f31['getDefineByName']('DIRECTIONLIGHT'), _0x43184a[_0x47fb85(0xbb6)] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbb7)), _0x43184a[_0x47fb85(0xbb8)] = _0x3a9f31[_0x47fb85(0x510)]('SPOTLIGHT'), _0x43184a['SHADERDEFINE_SHADOW'] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbb9)), _0x43184a[_0x47fb85(0xb6f)] = _0x3a9f31[_0x47fb85(0x510)]('SHADOW_CASCADE'), _0x43184a[_0x47fb85(0xb70)] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbba)), _0x43184a[_0x47fb85(0xb71)] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbbb)), _0x43184a['SHADERDEFINE_GI_AMBIENT_SH'] = _0x3a9f31['getDefineByName'](_0x47fb85(0xbbc)), _0x43184a['SHADERDEFINE_SHADOW_SPOT'] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbbd)), _0x43184a['SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW'] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbbe)), _0x43184a['SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH'] = _0x3a9f31[_0x47fb85(0x510)](_0x47fb85(0xbbf));
            var _0x26bda6 = _0x362537[_0x47fb85(0x251)], _0x54550d = _0x9c4b57['_configDefineValues'];
            switch (_0x26bda6[_0x47fb85(0x9bb)] || _0x54550d['add'](_0x3a9f31[_0x47fb85(0xbc0)]), _0x387b86['LayaGL'][_0x47fb85(0x4f1)][_0x47fb85(0x3f9)] ? _0x54550d[_0x47fb85(0x207)](_0x3a9f31['SHADERDEFINE_GRAPHICS_API_GLES3']) : _0x54550d[_0x47fb85(0x207)](_0x3a9f31['SHADERDEFINE_GRAPHICS_API_GLES2']), _0x26bda6[_0x47fb85(0x24b)]) {
            case _0x18be32[_0x47fb85(0x221)]['High']:
                _0x54550d[_0x47fb85(0x207)](_0x5d5c8f['SHADERDEFINE_LAYA_PBR_BRDF_HIGH']);
                break;
            case _0x18be32[_0x47fb85(0x221)][_0x47fb85(0x223)]:
                _0x54550d[_0x47fb85(0x207)](_0x5d5c8f[_0x47fb85(0x773)]);
                break;
            default:
                throw 'Scene3D:unknown\x20shader\x20quality.';
            }
            _0x26bda6[_0x47fb85(0x24c)] ? _0x567245[_0x47fb85(0x239)] && (_0x9c4b57['cannonPhysicsSettings'] = new _0x387b86[(_0x47fb85(0xbc1))]()) : _0x567245['_bullet'] && (_0x9c4b57[_0x47fb85(0xbaa)] = new _0x387b86['PhysicsSettings']());
        }
        static [_0x6027f5(0x5c0)](_0x169784, _0x206065) {
            var _0x10768a = _0x6027f5;
            _0x387b86[_0x10768a(0x328)][_0x10768a(0x329)]['create'](_0x169784, _0x206065, null, _0x9c4b57['HIERARCHY']);
        }
        get [_0x6027f5(0xbc2)]() {
            var _0xe0509c = _0x6027f5;
            return this[_0xe0509c(0x5d2)];
        }
        get [_0x6027f5(0xbab)]() {
            return this['_enableFog'];
        }
        set [_0x6027f5(0xbab)](_0x36a4ec) {
            var _0x3ea665 = _0x6027f5;
            this[_0x3ea665(0xbc3)] !== _0x36a4ec && (this[_0x3ea665(0xbc3)] = _0x36a4ec, _0x36a4ec ? this[_0x3ea665(0x4e2)]['addDefine'](_0x43184a[_0x3ea665(0xbb4)]) : this[_0x3ea665(0x4e2)][_0x3ea665(0x49b)](_0x43184a[_0x3ea665(0xbb4)]));
        }
        get [_0x6027f5(0xbc4)]() {
            var _0x398e16 = _0x6027f5;
            return this[_0x398e16(0x4e2)][_0x398e16(0x4a6)](_0x9c4b57[_0x398e16(0xbc5)]);
        }
        set [_0x6027f5(0xbc4)](_0x4f4efc) {
            var _0x4f5286 = _0x6027f5;
            this[_0x4f5286(0x4e2)][_0x4f5286(0x57a)](_0x9c4b57[_0x4f5286(0xbc5)], _0x4f4efc);
        }
        get ['fogStart']() {
            var _0x448118 = _0x6027f5;
            return this[_0x448118(0x4e2)][_0x448118(0x4a2)](_0x9c4b57[_0x448118(0xbc6)]);
        }
        set [_0x6027f5(0xbac)](_0x3722ca) {
            var _0x5def3d = _0x6027f5;
            this[_0x5def3d(0x4e2)][_0x5def3d(0x4a3)](_0x9c4b57['FOGSTART'], _0x3722ca);
        }
        get ['fogRange']() {
            var _0x3aae8a = _0x6027f5;
            return this['_shaderValues']['getNumber'](_0x9c4b57[_0x3aae8a(0xbc7)]);
        }
        set [_0x6027f5(0xbad)](_0x1626f6) {
            var _0x29e7c2 = _0x6027f5;
            this['_shaderValues'][_0x29e7c2(0x4a3)](_0x9c4b57['FOGRANGE'], _0x1626f6);
        }
        get [_0x6027f5(0xbc8)]() {
            var _0x914437 = _0x6027f5;
            return this[_0x914437(0xba1)];
        }
        set [_0x6027f5(0xbc8)](_0x1c5b5e) {
            var _0x1655b4 = _0x6027f5;
            if (this['_ambientMode'] !== _0x1c5b5e) {
                switch (_0x1c5b5e) {
                case _0x18be32[_0x1655b4(0xb9b)]['SolidColor']:
                    this[_0x1655b4(0x4e2)][_0x1655b4(0x49b)](_0x43184a[_0x1655b4(0xbc9)]);
                    break;
                case _0x18be32[_0x1655b4(0xb9b)][_0x1655b4(0xb9c)]:
                    this[_0x1655b4(0x4e2)]['addDefine'](_0x43184a[_0x1655b4(0xbc9)]);
                    break;
                default:
                    throw _0x1655b4(0xbca);
                }
                this['_ambientMode'] = _0x1c5b5e;
            }
        }
        get ['ambientColor']() {
            var _0x5b9f03 = _0x6027f5;
            return this[_0x5b9f03(0x4e2)][_0x5b9f03(0x4a6)](_0x9c4b57[_0x5b9f03(0xbcb)]);
        }
        set [_0x6027f5(0xbcc)](_0x193427) {
            var _0x2ad078 = _0x6027f5;
            this[_0x2ad078(0x4e2)]['setVector3'](_0x9c4b57['AMBIENTCOLOR'], _0x193427);
        }
        get [_0x6027f5(0xbcd)]() {
            var _0x52976 = _0x6027f5;
            return this[_0x52976(0xba2)];
        }
        set ['ambientSphericalHarmonics'](_0x17dcc3) {
            var _0x15c06b = _0x6027f5, _0x4dc0fd = _0x17dcc3 || _0x44b580[_0x15c06b(0xbce)];
            this[_0x15c06b(0xbcf)](_0x4dc0fd, Math[_0x15c06b(0x2ff)](this[_0x15c06b(0xbd0)], 2.2)), this['_ambientSphericalHarmonics'] != _0x17dcc3 && _0x17dcc3[_0x15c06b(0x1fc)](this[_0x15c06b(0xba2)]);
        }
        get ['ambientSphericalHarmonicsIntensity']() {
            return this['_ambientSphericalHarmonicsIntensity'];
        }
        set [_0x6027f5(0xbd1)](_0x3425b8) {
            var _0x2b86ba = _0x6027f5;
            if (_0x3425b8 = Math['max'](Math[_0x2b86ba(0x212)](_0x3425b8, 0x8), 0x0), this[_0x2b86ba(0xbd0)] !== _0x3425b8) {
                var _0x3743f2 = this[_0x2b86ba(0xba2)] || _0x44b580['_default'];
                this[_0x2b86ba(0xbcf)](_0x3743f2, Math['pow'](_0x3425b8, 2.2)), this[_0x2b86ba(0xbd0)] = _0x3425b8;
            }
        }
        get [_0x6027f5(0xbaf)]() {
            return this['_reflection'];
        }
        set [_0x6027f5(0xbaf)](_0x5df302) {
            var _0x3e350f = _0x6027f5;
            _0x5df302 = _0x5df302 || _0x2fe14f['blackTexture'], this[_0x3e350f(0xbd2)] != _0x5df302 && (_0x5df302[_0x3e350f(0x35f)](), this[_0x3e350f(0xaf7)][_0x3e350f(0xb94)] = _0x5df302, this[_0x3e350f(0xbd2)] = _0x5df302, this['_reflectionProbeManager'][_0x3e350f(0xb92)] = !0x0);
        }
        get [_0x6027f5(0xaf3)]() {
            return this['_reflectionDecodeFormat'];
        }
        set [_0x6027f5(0xaf3)](_0xcf68f8) {
            var _0x4b0c77 = _0x6027f5;
            this['_reflectionDecodeFormat'] != _0xcf68f8 && (this[_0x4b0c77(0xbb1)]['x'] = this['_reflectionIntensity'], this[_0x4b0c77(0xae5)] == _0x387b86['TextureDecodeFormat'][_0x4b0c77(0xaeb)] && (this['_reflectionCubeHDRParams']['x'] *= 0x5), this[_0x4b0c77(0xae5)] = _0xcf68f8, this[_0x4b0c77(0xaf7)]['sceneReflectionCubeHDRParam'] = this[_0x4b0c77(0xbb1)]);
        }
        get [_0x6027f5(0xbae)]() {
            var _0x861c5e = _0x6027f5;
            return this[_0x861c5e(0xba4)];
        }
        set ['reflectionIntensity'](_0x227a7d) {
            var _0x3bb234 = _0x6027f5;
            _0x227a7d = Math[_0x3bb234(0x20c)](Math[_0x3bb234(0x212)](_0x227a7d, 0x1), 0x0), this[_0x3bb234(0xbb1)]['x'] = _0x227a7d, this[_0x3bb234(0xae5)] == _0x387b86['TextureDecodeFormat']['RGBM'] && (this['_reflectionCubeHDRParams']['x'] *= 0x5), this[_0x3bb234(0xba4)] = _0x227a7d, this[_0x3bb234(0xaf7)]['sceneReflectionCubeHDRParam'] = this[_0x3bb234(0xbb1)];
        }
        get [_0x6027f5(0x8e9)]() {
            var _0x34f006 = _0x6027f5;
            return this[_0x34f006(0x8e1)];
        }
        get ['physicsSimulation']() {
            var _0x1e91f6 = _0x6027f5;
            return this[_0x1e91f6(0x9f6)];
        }
        get [_0x6027f5(0xbd3)]() {
            var _0x4758bc = _0x6027f5;
            return this[_0x4758bc(0xbd4)];
        }
        get [_0x6027f5(0x3c0)]() {
            return this['_timer'];
        }
        set [_0x6027f5(0x3c0)](_0xc69338) {
            var _0x38c03f = _0x6027f5;
            this[_0x38c03f(0xbd5)] = _0xc69338;
        }
        get [_0x6027f5(0xbd6)]() {
            var _0x45028f = _0x6027f5;
            return this[_0x45028f(0xbb2)];
        }
        get [_0x6027f5(0xb15)]() {
            return this['_lightmaps']['slice']();
        }
        set [_0x6027f5(0xb15)](_0x1f12f0) {
            var _0xc0b2ce = _0x6027f5, _0x1f66c5 = this[_0xc0b2ce(0xb9f)];
            if (_0x1f66c5)
                for (var _0x430532 = 0x0, _0x3b7b68 = _0x1f66c5[_0xc0b2ce(0x205)]; _0x430532 < _0x3b7b68; _0x430532++) {
                    (_0x13201b = _0x1f66c5[_0x430532])[_0xc0b2ce(0xb16)][_0xc0b2ce(0x35c)](), _0x13201b['lightmapDirection'][_0xc0b2ce(0x35c)]();
                }
            if (_0x1f12f0) {
                var _0x540174 = _0x1f12f0['length'];
                for (_0x1f66c5[_0xc0b2ce(0x205)] = _0x540174, _0x430532 = 0x0; _0x430532 < _0x540174; _0x430532++) {
                    var _0x13201b;
                    (_0x13201b = _0x1f12f0[_0x430532])[_0xc0b2ce(0xb16)] && _0x13201b['lightmapColor']['_addReference'](), _0x13201b[_0xc0b2ce(0xb17)] && _0x13201b[_0xc0b2ce(0xb17)][_0xc0b2ce(0x35f)](), _0x1f66c5[_0x430532] = _0x13201b;
                }
            } else
                _0x1f66c5['length'] = 0x0;
        }
        [_0x6027f5(0xbcf)](_0x4e3773, _0x5e1fd9) {
            var _0x4f2605 = _0x6027f5;
            for (var _0xb94151 = this['_shCoefficients'], _0x307530 = 0x0; _0x307530 < 0x3; _0x307530++) {
                var _0x5d7d61 = _0xb94151[_0x307530], _0x4d86ee = _0xb94151[_0x307530 + 0x3];
                _0x5d7d61['setValue'](_0x4e3773[_0x4f2605(0xbd7)](_0x307530, 0x3) * _0x5e1fd9, _0x4e3773[_0x4f2605(0xbd7)](_0x307530, 0x1) * _0x5e1fd9, _0x4e3773['getCoefficient'](_0x307530, 0x2) * _0x5e1fd9, (_0x4e3773['getCoefficient'](_0x307530, 0x0) - _0x4e3773[_0x4f2605(0xbd7)](_0x307530, 0x6)) * _0x5e1fd9), _0x4d86ee[_0x4f2605(0x1f8)](_0x4e3773['getCoefficient'](_0x307530, 0x4) * _0x5e1fd9, _0x4e3773[_0x4f2605(0xbd7)](_0x307530, 0x5) * _0x5e1fd9, 0x3 * _0x4e3773[_0x4f2605(0xbd7)](_0x307530, 0x6) * _0x5e1fd9, _0x4e3773[_0x4f2605(0xbd7)](_0x307530, 0x7) * _0x5e1fd9);
            }
            _0xb94151[0x6]['setValue'](_0x4e3773[_0x4f2605(0xbd7)](0x0, 0x8) * _0x5e1fd9, _0x4e3773[_0x4f2605(0xbd7)](0x1, 0x8) * _0x5e1fd9, _0x4e3773[_0x4f2605(0xbd7)](0x2, 0x8) * _0x5e1fd9, 0x1);
            var _0x3a83a0 = this['_shaderValues'];
            _0x3a83a0[_0x4f2605(0x4a8)](_0x9c4b57[_0x4f2605(0xbd8)], _0xb94151[0x0]), _0x3a83a0[_0x4f2605(0x4a8)](_0x9c4b57['AMBIENTSHAG'], _0xb94151[0x1]), _0x3a83a0[_0x4f2605(0x4a8)](_0x9c4b57[_0x4f2605(0xbd9)], _0xb94151[0x2]), _0x3a83a0[_0x4f2605(0x4a8)](_0x9c4b57[_0x4f2605(0xbda)], _0xb94151[0x3]), _0x3a83a0['setVector'](_0x9c4b57[_0x4f2605(0xbdb)], _0xb94151[0x4]), _0x3a83a0[_0x4f2605(0x4a8)](_0x9c4b57[_0x4f2605(0xbdc)], _0xb94151[0x5]), _0x3a83a0[_0x4f2605(0x4a8)](_0x9c4b57[_0x4f2605(0xbdd)], _0xb94151[0x6]);
        }
        [_0x6027f5(0x388)]() {
            var _0x460270 = _0x6027f5;
            _0x387b86[_0x460270(0x9b6)]['begainSample'](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbde)]);
            var _0x15d605 = this['timer'][_0x460270(0x3c1)] / 0x3e8;
            this['_time'] += _0x15d605, this[_0x460270(0x4e2)]['setNumber'](_0x9c4b57[_0x460270(0xbdf)], this[_0x460270(0xba0)]), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b3)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbe0)]);
            var _0x21fa17 = this[_0x460270(0x9f6)];
            if (!_0x567245[_0x460270(0x23f)] || _0x387b86[_0x460270(0x234)][_0x460270(0xbe1)] || _0x362537[_0x460270(0x251)][_0x460270(0x24c)] || (_0x21fa17['_updatePhysicsTransformFromRender'](), _0x387b86[_0x460270(0x233)]['_addUpdateList'] = !0x1, _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b3)](_0x387b86['PerformancePlugin'][_0x460270(0xbe2)]), _0x21fa17['_simulate'](_0x15d605), _0x387b86['PerformancePlugin'][_0x460270(0x9b7)](_0x387b86[_0x460270(0x9b6)]['PERFORMANCE_LAYA_3D_PHYSICS_SIMULATE']), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b3)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbe3)]), _0x21fa17['_updateCharacters'](), _0x387b86[_0x460270(0x233)][_0x460270(0xbe4)] = !0x0, _0x21fa17[_0x460270(0xbe5)](), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b7)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbe3)]), _0x387b86['PerformancePlugin'][_0x460270(0x9b3)](_0x387b86['PerformancePlugin'][_0x460270(0xbe6)]), _0x21fa17[_0x460270(0xbe7)](), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b7)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbe6)])), _0x567245['_cannon'] && _0x362537[_0x460270(0x251)][_0x460270(0x24c)]) {
                var _0x4c19b7 = this['_cannonPhysicsSimulation'];
                _0x4c19b7[_0x460270(0xbe8)](), _0x387b86[_0x460270(0x23b)][_0x460270(0xbe4)] = !0x1, _0x4c19b7[_0x460270(0xbe9)](_0x15d605), _0x387b86[_0x460270(0x23b)]['_addUpdateList'] = !0x0, _0x4c19b7[_0x460270(0xbe5)](), _0x4c19b7[_0x460270(0xbe7)]();
            }
            _0x387b86['PerformancePlugin'][_0x460270(0x9b7)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbe0)]), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b3)](_0x387b86['PerformancePlugin'][_0x460270(0xbea)]), this[_0x460270(0xbb2)][_0x460270(0x388)](), this[_0x460270(0xbeb)](), this['_updateScript'](), _0x493c7d['_update'](this), _0x387b86[_0x460270(0xbec)][_0x460270(0x388)](), this[_0x460270(0xaf7)][_0x460270(0xb92)] ? this['_reflectionProbeManager']['updateAllRenderObjects'](this[_0x460270(0x81f)]) : this[_0x460270(0xaf7)]['update'](), this['_lateUpdateScript'](), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b7)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbea)]), _0x387b86[_0x460270(0x9b6)][_0x460270(0x9b7)](_0x387b86[_0x460270(0x9b6)][_0x460270(0xbde)]);
        }
        ['_binarySearchIndexInCameraPool'](_0x4c5c7b) {
            var _0x256955 = _0x6027f5;
            for (var _0x573790, _0x4d1189 = 0x0, _0x261a9d = this[_0x256955(0x8ee)][_0x256955(0x205)] - 0x1; _0x4d1189 <= _0x261a9d;) {
                _0x573790 = Math[_0x256955(0x24e)]((_0x4d1189 + _0x261a9d) / 0x2);
                var _0x523c6e = this['_cameraPool'][_0x573790][_0x256955(0x8ec)];
                if (_0x523c6e == _0x4c5c7b[_0x256955(0x8ec)])
                    return _0x573790;
                _0x523c6e > _0x4c5c7b['_renderingOrder'] ? _0x261a9d = _0x573790 - 0x1 : _0x4d1189 = _0x573790 + 0x1;
            }
            return _0x4d1189;
        }
        [_0x6027f5(0xa71)](_0x288a2b, _0x54c218) {
            var _0x5b0d8d = _0x6027f5, _0x565c6a = Math[_0x5b0d8d(0x24e)](_0x288a2b / 0xfe01);
            _0x288a2b -= 0xff * _0x565c6a * 0xff;
            var _0x3e9422 = Math['floor'](_0x288a2b / 0xff), _0x220c7d = _0x288a2b -= 0xff * _0x3e9422;
            _0x54c218['x'] = _0x565c6a / 0xff, _0x54c218['y'] = _0x3e9422 / 0xff, _0x54c218['z'] = _0x220c7d / 0xff, _0x54c218['w'] = 0x1;
        }
        [_0x6027f5(0xbed)](_0x177e98) {
            return 0xff * _0x177e98['x'] * 0xff + 0xff * _0x177e98['y'] + _0x177e98['z'];
        }
        [_0x6027f5(0xbee)]() {
            var _0x12de0e = _0x6027f5;
            this[_0x12de0e(0xbb2)]['_onCanvasEvent'](_0x387b86[_0x12de0e(0x31a)]['canvas']);
        }
        [_0x6027f5(0xbef)]() {
            var _0x12c86e = _0x6027f5;
            this[_0x12c86e(0xbb2)][_0x12c86e(0x9e8)](_0x387b86[_0x12c86e(0x31a)][_0x12c86e(0xbf0)]);
        }
        [_0x6027f5(0xbf1)](_0x2772c6) {
            var _0xb93c72 = _0x6027f5;
            this[_0xb93c72(0x5d2)] = _0x387b86[_0xb93c72(0x5c4)][_0xb93c72(0xbf2)](_0x2772c6);
        }
        [_0x6027f5(0xbf3)]() {
            var _0x59abde = _0x6027f5;
            return this[_0x59abde(0xbf4)];
        }
        [_0x6027f5(0xbf5)](_0x48c0dc) {
            var _0x21e51f = _0x6027f5;
            this[_0x21e51f(0xbf4)] = _0x48c0dc;
        }
        ['_clearScript']() {
            var _0x4c994b = _0x6027f5;
            if (this[_0x4c994b(0xbf6)]) {
                for (var _0x486bf2 = this['_scriptPool'], _0x4df234 = 0x0, _0x28b61d = _0x486bf2[_0x4c994b(0x205)]; _0x4df234 < _0x28b61d; _0x4df234++) {
                    var _0x4bfb34 = _0x486bf2[_0x4df234];
                    _0x4bfb34 && (_0x4bfb34[_0x4c994b(0xbf7)] = this[_0x4c994b(0xbf8)][_0x4c994b(0x205)], this[_0x4c994b(0xbf8)][_0x4c994b(0x2ac)](_0x4bfb34));
                }
                this[_0x4c994b(0xba6)] = this[_0x4c994b(0xbf8)], _0x486bf2[_0x4c994b(0x205)] = 0x0, this[_0x4c994b(0xbf8)] = _0x486bf2, this[_0x4c994b(0xbf6)] = !0x1;
            }
        }
        ['_updateScript']() {
            var _0x565ce5 = _0x6027f5;
            for (var _0xcea3f0 = this[_0x565ce5(0xba6)], _0x380b90 = 0x0, _0x4879d9 = _0xcea3f0[_0x565ce5(0x205)]; _0x380b90 < _0x4879d9; _0x380b90++) {
                var _0x68adcf = _0xcea3f0[_0x380b90];
                _0x68adcf && _0x68adcf[_0x565ce5(0x387)] && _0x68adcf[_0x565ce5(0xbf9)]();
            }
        }
        [_0x6027f5(0xbfa)]() {
            var _0x28b117 = _0x6027f5;
            for (var _0x1d61d2 = this['_scriptPool'], _0xebe2bd = 0x0, _0x8cdac3 = _0x1d61d2[_0x28b117(0x205)]; _0xebe2bd < _0x8cdac3; _0xebe2bd++) {
                var _0x527200 = _0x1d61d2[_0xebe2bd];
                _0x527200 && _0x527200[_0x28b117(0x387)] && _0x527200[_0x28b117(0xbfb)]();
            }
        }
        [_0x6027f5(0x8f7)]() {
            var _0x2ea2cf = _0x6027f5;
            super[_0x2ea2cf(0x8f7)](), _0x387b86[_0x2ea2cf(0x328)][_0x2ea2cf(0x8fa)][_0x2ea2cf(0xbfc)][_0x2ea2cf(0x2ac)](this);
        }
        [_0x6027f5(0x8f8)]() {
            var _0x2f070e = _0x6027f5;
            super[_0x2f070e(0x8f8)]();
            var _0x3cf667 = _0x387b86['ILaya'][_0x2f070e(0x8fa)][_0x2f070e(0xbfc)];
            _0x3cf667['splice'](_0x3cf667[_0x2f070e(0x2f9)](this), 0x1);
        }
        [_0x6027f5(0xbfd)]() {
            var _0x4587da = _0x6027f5, _0x44a8d6 = this['_shaderValues'];
            if (_0x362537[_0x4587da(0x251)][_0x4587da(0x9bb)]) {
                var _0x532316 = _0x9c4b57[_0x4587da(0xbb3)], _0x7a931f = _0x9c4b57[_0x4587da(0xbfe)];
                const _0x5c5010 = _0x532316[_0x4587da(0x313)], _0x484afa = 0x4 * _0x5c5010;
                var _0x1d53b7 = 0x0, _0x2a7772 = this[_0x4587da(0x863)][_0x4587da(0x446)], _0x269aba = this[_0x4587da(0x863)][_0x4587da(0x864)];
                if (_0x2a7772 > 0x0) {
                    var _0x217e03 = this['_directionLights'][_0x4587da(0xa35)]();
                    this[_0x4587da(0xbff)] = _0x269aba[_0x217e03], this[_0x4587da(0x863)][_0x4587da(0xa36)](_0x217e03);
                    for (var _0x29dcea = 0x0; _0x29dcea < _0x2a7772; _0x29dcea++, _0x1d53b7++) {
                        var _0x54aac7 = (_0x4b8469 = _0x269aba[_0x29dcea])[_0x4587da(0xc00)], _0x473815 = _0x4b8469[_0x4587da(0x923)], _0x87d31a = _0x484afa * _0x1d53b7;
                        _0x3697cd[_0x4587da(0x1f9)](_0x4b8469[_0x4587da(0x46f)], _0x4b8469[_0x4587da(0x926)], _0x473815), _0x4b8469[_0x4587da(0x3d6)]['worldMatrix'][_0x4587da(0x493)](_0x54aac7), _0x3697cd[_0x4587da(0x214)](_0x54aac7, _0x54aac7), _0x7a931f[_0x87d31a] = _0x473815['x'], _0x7a931f[_0x87d31a + 0x1] = _0x473815['y'], _0x7a931f[_0x87d31a + 0x2] = _0x473815['z'], _0x7a931f[_0x87d31a + 0x4] = _0x54aac7['x'], _0x7a931f[_0x87d31a + 0x5] = _0x54aac7['y'], _0x7a931f[_0x87d31a + 0x6] = _0x54aac7['z'], 0x0 == _0x29dcea && (_0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc01)], _0x473815), _0x44a8d6['setVector3'](_0x9c4b57[_0x4587da(0xc02)], _0x54aac7));
                    }
                    _0x44a8d6[_0x4587da(0x49a)](_0x43184a[_0x4587da(0xbb5)]);
                } else
                    _0x44a8d6[_0x4587da(0x49b)](_0x43184a['SHADERDEFINE_DIRECTIONLIGHT']);
                var _0x246ba2 = this[_0x4587da(0xb9e)]['_length'];
                if (_0x246ba2 > 0x0) {
                    var _0x14dc93 = this[_0x4587da(0xb9e)]['_elements'], _0x351c3b = this[_0x4587da(0xb9e)][_0x4587da(0xa35)]();
                    this['_mainPointLight'] = _0x14dc93[_0x351c3b], this[_0x4587da(0xb9e)]['normalLightOrdering'](_0x351c3b);
                    for (_0x29dcea = 0x0; _0x29dcea < _0x246ba2; _0x29dcea++, _0x1d53b7++) {
                        var _0x5e326a = (_0x4456fa = _0x14dc93[_0x29dcea])[_0x4587da(0x3d6)][_0x4587da(0x5a2)];
                        _0x473815 = _0x4456fa[_0x4587da(0x923)], _0x87d31a = _0x484afa * _0x1d53b7, (_0x3697cd[_0x4587da(0x1f9)](_0x4456fa['color'], _0x4456fa[_0x4587da(0x926)], _0x473815), _0x7a931f[_0x87d31a] = _0x473815['x'], _0x7a931f[_0x87d31a + 0x1] = _0x473815['y'], _0x7a931f[_0x87d31a + 0x2] = _0x473815['z'], _0x7a931f[_0x87d31a + 0x3] = _0x4456fa[_0x4587da(0x858)], _0x7a931f[_0x87d31a + 0x4] = _0x5e326a['x'], _0x7a931f[_0x87d31a + 0x5] = _0x5e326a['y'], _0x7a931f[_0x87d31a + 0x6] = _0x5e326a['z']);
                    }
                    _0x44a8d6[_0x4587da(0x49a)](_0x43184a[_0x4587da(0xbb6)]);
                } else
                    _0x44a8d6[_0x4587da(0x49b)](_0x43184a[_0x4587da(0xbb6)]);
                var _0x5b593a = this[_0x4587da(0x865)][_0x4587da(0x446)];
                if (_0x5b593a > 0x0) {
                    var _0x31ac1b = this[_0x4587da(0x865)][_0x4587da(0x864)], _0x4ea566 = this[_0x4587da(0x865)][_0x4587da(0xa35)]();
                    this[_0x4587da(0xc03)] = _0x31ac1b[_0x4ea566], this['_spotLights'][_0x4587da(0xa36)](_0x4ea566);
                    for (_0x29dcea = 0x0; _0x29dcea < _0x5b593a; _0x29dcea++, _0x1d53b7++) {
                        var _0x13193b = _0x31ac1b[_0x29dcea];
                        _0x54aac7 = _0x13193b[_0x4587da(0xc00)], _0x5e326a = _0x13193b[_0x4587da(0x3d6)][_0x4587da(0x5a2)], _0x473815 = _0x13193b[_0x4587da(0x923)], _0x87d31a = _0x484afa * _0x1d53b7, (_0x3697cd[_0x4587da(0x1f9)](_0x13193b[_0x4587da(0x46f)], _0x13193b['_intensity'], _0x473815), _0x13193b[_0x4587da(0x3d6)][_0x4587da(0x3d8)][_0x4587da(0x493)](_0x54aac7), _0x3697cd['normalize'](_0x54aac7, _0x54aac7), _0x7a931f[_0x87d31a] = _0x473815['x'], _0x7a931f[_0x87d31a + 0x1] = _0x473815['y'], _0x7a931f[_0x87d31a + 0x2] = _0x473815['z'], _0x7a931f[_0x87d31a + 0x3] = _0x13193b['range'], _0x7a931f[_0x87d31a + 0x4] = _0x5e326a['x'], _0x7a931f[_0x87d31a + 0x5] = _0x5e326a['y'], _0x7a931f[_0x87d31a + 0x6] = _0x5e326a['z'], _0x7a931f[_0x87d31a + 0x7] = _0x13193b['spotAngle'] * Math['PI'] / 0xb4, _0x7a931f[_0x87d31a + 0x8] = _0x54aac7['x'], _0x7a931f[_0x87d31a + 0x9] = _0x54aac7['y'], _0x7a931f[_0x87d31a + 0xa] = _0x54aac7['z']);
                    }
                    _0x44a8d6[_0x4587da(0x49a)](_0x43184a['SHADERDEFINE_SPOTLIGHT']);
                } else
                    _0x44a8d6[_0x4587da(0x49b)](_0x43184a[_0x4587da(0xbb8)]);
                _0x1d53b7 > 0x0 && _0x532316[_0x4587da(0x86d)](0x0, 0x0, _0x5c5010, _0x1d53b7, _0x7a931f, 0x0), _0x44a8d6[_0x4587da(0x4ac)](_0x9c4b57[_0x4587da(0xc04)], _0x532316), _0x44a8d6[_0x4587da(0x4a1)](_0x9c4b57['DIRECTIONLIGHTCOUNT'], this['_directionLights'][_0x4587da(0x446)]), _0x44a8d6[_0x4587da(0x4ac)](_0x9c4b57[_0x4587da(0xc05)], _0x1ae54c[_0x4587da(0x304)][_0x4587da(0x843)]);
            } else {
                if (this[_0x4587da(0x863)][_0x4587da(0x446)] > 0x0) {
                    var _0x4b8469 = this[_0x4587da(0x863)][_0x4587da(0x864)][0x0];
                    this[_0x4587da(0xbff)] = _0x4b8469, _0x3697cd[_0x4587da(0x1f9)](_0x4b8469[_0x4587da(0x46f)], _0x4b8469['_intensity'], _0x4b8469[_0x4587da(0x923)]), _0x4b8469['transform'][_0x4587da(0x3d8)]['getForward'](_0x4b8469['_direction']), _0x3697cd[_0x4587da(0x214)](_0x4b8469[_0x4587da(0xc00)], _0x4b8469[_0x4587da(0xc00)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc06)], _0x4b8469[_0x4587da(0x923)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc07)], _0x4b8469[_0x4587da(0xc00)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57['SUNLIGHTDIRCOLOR'], _0x4b8469[_0x4587da(0x923)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc02)], _0x4b8469['_direction']), _0x44a8d6[_0x4587da(0x49a)](_0x43184a[_0x4587da(0xbb5)]);
                } else
                    _0x44a8d6[_0x4587da(0x49b)](_0x43184a['SHADERDEFINE_DIRECTIONLIGHT']);
                if (this[_0x4587da(0xb9e)][_0x4587da(0x446)] > 0x0) {
                    var _0x4456fa = this['_pointLights'][_0x4587da(0x864)][0x0];
                    this[_0x4587da(0xc08)] = _0x4456fa, _0x3697cd[_0x4587da(0x1f9)](_0x4456fa[_0x4587da(0x46f)], _0x4456fa[_0x4587da(0x926)], _0x4456fa[_0x4587da(0x923)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc09)], _0x4456fa[_0x4587da(0x923)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc0a)], _0x4456fa[_0x4587da(0x3d6)]['position']), _0x44a8d6['setNumber'](_0x9c4b57[_0x4587da(0xc0b)], _0x4456fa[_0x4587da(0x858)]), _0x44a8d6['addDefine'](_0x43184a['SHADERDEFINE_POINTLIGHT']);
                } else
                    _0x44a8d6[_0x4587da(0x49b)](_0x43184a[_0x4587da(0xbb6)]);
                if (this[_0x4587da(0x865)]['_length'] > 0x0) {
                    var _0x17f786 = this[_0x4587da(0x865)][_0x4587da(0x864)][0x0];
                    this['_mainSpotLight'] = _0x17f786, _0x3697cd[_0x4587da(0x1f9)](_0x17f786['color'], _0x17f786['_intensity'], _0x17f786[_0x4587da(0x923)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc0c)], _0x17f786[_0x4587da(0x923)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57['SPOTLIGHTPOS'], _0x17f786['transform'][_0x4587da(0x5a2)]), _0x17f786['transform'][_0x4587da(0x3d8)][_0x4587da(0x493)](_0x17f786[_0x4587da(0xc00)]), _0x3697cd[_0x4587da(0x214)](_0x17f786[_0x4587da(0xc00)], _0x17f786[_0x4587da(0xc00)]), _0x44a8d6[_0x4587da(0x57a)](_0x9c4b57[_0x4587da(0xc0d)], _0x17f786[_0x4587da(0xc00)]), _0x44a8d6[_0x4587da(0x4a3)](_0x9c4b57[_0x4587da(0xc0e)], _0x17f786[_0x4587da(0x858)]), _0x44a8d6['setNumber'](_0x9c4b57['SPOTLIGHTSPOTANGLE'], _0x17f786[_0x4587da(0x85c)] * Math['PI'] / 0xb4), _0x44a8d6['addDefine'](_0x43184a[_0x4587da(0xbb8)]);
                } else
                    _0x44a8d6['removeDefine'](_0x43184a[_0x4587da(0xbb8)]);
            }
        }
        [_0x6027f5(0xc0f)](_0x173700) {
            var _0x48463f = _0x6027f5;
            if (-0x1 == _0x173700[_0x48463f(0xbf7)]) {
                var _0x36753a = this[_0x48463f(0xba6)];
                _0x173700[_0x48463f(0xbf7)] = _0x36753a[_0x48463f(0x205)], _0x36753a[_0x48463f(0x2ac)](_0x173700);
            }
        }
        [_0x6027f5(0x5cb)](_0x40b867) {
            var _0x4920b0 = _0x6027f5;
            -0x1 != _0x40b867['_indexInPool'] && (this[_0x4920b0(0xba6)][_0x40b867[_0x4920b0(0xbf7)]] = null, _0x40b867['_indexInPool'] = -0x1, this[_0x4920b0(0xbf6)] = !0x0);
        }
        [_0x6027f5(0x9b8)]() {
            var _0x170f0e = _0x6027f5;
            for (var _0x309cf0 = this[_0x170f0e(0xba6)], _0x1e09e9 = 0x0, _0x1aee4d = _0x309cf0['length']; _0x1e09e9 < _0x1aee4d; _0x1e09e9++) {
                var _0x19f8d4 = _0x309cf0[_0x1e09e9];
                _0x19f8d4 && _0x19f8d4[_0x170f0e(0x387)] && _0x19f8d4['onPreRender']();
            }
        }
        [_0x6027f5(0x9c7)]() {
            var _0x1c5f73 = _0x6027f5;
            for (var _0x3243ae = this[_0x1c5f73(0xba6)], _0x34820c = 0x0, _0x1e14c4 = _0x3243ae['length']; _0x34820c < _0x1e14c4; _0x34820c++) {
                var _0x77c523 = _0x3243ae[_0x34820c];
                _0x77c523 && _0x77c523['enabled'] && _0x77c523[_0x1c5f73(0xc10)]();
            }
        }
        [_0x6027f5(0xc11)](_0x505f2f) {
            var _0x3dab1e = _0x6027f5;
            for (var _0x4d8fc3 = this[_0x3dab1e(0xc12)](_0x505f2f), _0x35e9fe = _0x505f2f[_0x3dab1e(0x8ec)], _0x4b125c = this['_cameraPool'][_0x3dab1e(0x205)]; _0x4d8fc3 < _0x4b125c && this[_0x3dab1e(0x8ee)][_0x4d8fc3]['_renderingOrder'] <= _0x35e9fe;)
                _0x4d8fc3++;
            this['_cameraPool']['splice'](_0x4d8fc3, 0x0, _0x505f2f);
        }
        [_0x6027f5(0xc13)](_0x5ae4cf) {
            var _0x549585 = _0x6027f5;
            this['_cameraPool']['splice'](this['_cameraPool'][_0x549585(0x2f9)](_0x5ae4cf), 0x1);
        }
        [_0x6027f5(0x9be)](_0x437381, _0x426657, _0x448af0, _0x365866) {
            var _0x2896f7 = _0x6027f5, _0x152f1b = _0x1b438f['_cameraCullInfo'];
            _0x152f1b[_0x2896f7(0x5a2)] = _0x426657['_transform'][_0x2896f7(0x5a2)], _0x152f1b[_0x2896f7(0x814)] = _0x426657[_0x2896f7(0x814)], _0x152f1b[_0x2896f7(0x831)] = _0x426657[_0x2896f7(0x831)], _0x152f1b[_0x2896f7(0x817)] = _0x426657[_0x2896f7(0x817)], _0x1b438f['renderObjectCulling'](_0x152f1b, this, _0x437381, _0x448af0, _0x365866, !0x1);
        }
        [_0x6027f5(0x9c1)](_0x54190a, _0xc375c6) {
            var _0x1425cb = _0x6027f5, _0x1d9b17, _0x1272f5, _0x332d7f, _0x595e4b = _0xc375c6[_0x1425cb(0x564)], _0x2a2aaf = _0xc375c6[_0x1425cb(0x64c)], _0x51c07f = _0x2a2aaf[_0x1425cb(0x9ae)](), _0x34a7b8 = _0x595e4b[_0x1425cb(0x313)], _0x162879 = _0x595e4b[_0x1425cb(0x439)];
            _0x2a2aaf['_needInternalRenderTexture']() ? (_0x1d9b17 = 0x0, _0x1272f5 = 0x0) : (_0x1d9b17 = _0x595e4b['x'], _0x1272f5 = _0x2a2aaf[_0x1425cb(0x65f)]() - _0x595e4b['y'] - _0x162879), _0x54190a[_0x1425cb(0x564)](_0x1d9b17, _0x1272f5, _0x34a7b8, _0x162879);
            var _0x27c631 = _0x2a2aaf['clearFlag'];
            switch (_0x27c631 !== _0x18be32['CameraClearFlags'][_0x1425cb(0x981)] || _0x2a2aaf[_0x1425cb(0x8e9)]['_isAvailable']() || this[_0x1425cb(0x8e1)][_0x1425cb(0x8d7)]() || (_0x27c631 = _0x18be32[_0x1425cb(0x97f)][_0x1425cb(0x980)]), _0x27c631) {
            case _0x18be32[_0x1425cb(0x97f)][_0x1425cb(0x980)]:
                var _0x47f153 = _0x2a2aaf[_0x1425cb(0x5ed)];
                if (_0x54190a['enable'](_0x54190a['SCISSOR_TEST']), _0x54190a[_0x1425cb(0x978)](_0x1d9b17, _0x1272f5, _0x34a7b8, _0x162879), _0x47f153 ? _0x54190a[_0x1425cb(0x5ed)](_0x47f153['x'], _0x47f153['y'], _0x47f153['z'], _0x47f153['w']) : _0x54190a['clearColor'](0x0, 0x0, 0x0, 0x0), _0x51c07f)
                    switch (_0x332d7f = _0x54190a['COLOR_BUFFER_BIT'], _0x51c07f[_0x1425cb(0x3f5)]) {
                    case _0x387b86[_0x1425cb(0x3e4)][_0x1425cb(0x3e5)]:
                        _0x332d7f |= _0x54190a['DEPTH_BUFFER_BIT'];
                        break;
                    case _0x387b86[_0x1425cb(0x3e4)]['STENCIL_8']:
                        _0x332d7f |= _0x54190a['STENCIL_BUFFER_BIT'];
                        break;
                    case _0x387b86[_0x1425cb(0x3e4)][_0x1425cb(0x427)]:
                        _0x332d7f |= _0x54190a['DEPTH_BUFFER_BIT'], _0x332d7f |= _0x54190a[_0x1425cb(0xc14)];
                    }
                else
                    _0x332d7f = _0x54190a[_0x1425cb(0x5ee)] | _0x54190a['DEPTH_BUFFER_BIT'];
                _0x387b86[_0x1425cb(0x40a)][_0x1425cb(0x8d9)](_0x54190a, !0x0), _0x54190a[_0x1425cb(0x44c)](_0x332d7f), _0x54190a[_0x1425cb(0xc15)](_0x54190a['SCISSOR_TEST']);
                break;
            case _0x18be32['CameraClearFlags']['Sky']:
            case _0x18be32['CameraClearFlags'][_0x1425cb(0x982)]:
                if (_0x54190a['enable'](_0x54190a[_0x1425cb(0x97a)]), _0x54190a[_0x1425cb(0x978)](_0x1d9b17, _0x1272f5, _0x34a7b8, _0x162879), _0x51c07f)
                    switch (_0x51c07f[_0x1425cb(0x3f5)]) {
                    case _0x387b86[_0x1425cb(0x3e4)][_0x1425cb(0x3e5)]:
                        _0x332d7f = _0x54190a['DEPTH_BUFFER_BIT'];
                        break;
                    case _0x387b86[_0x1425cb(0x3e4)][_0x1425cb(0x424)]:
                        _0x332d7f = _0x54190a[_0x1425cb(0xc14)];
                        break;
                    case _0x387b86[_0x1425cb(0x3e4)][_0x1425cb(0x427)]:
                        _0x332d7f = _0x54190a[_0x1425cb(0x5f0)] | _0x54190a['STENCIL_BUFFER_BIT'];
                    }
                else
                    _0x332d7f = _0x54190a[_0x1425cb(0x5f0)];
                _0x387b86[_0x1425cb(0x40a)][_0x1425cb(0x8d9)](_0x54190a, !0x0), _0x54190a[_0x1425cb(0x44c)](_0x332d7f), _0x54190a[_0x1425cb(0xc15)](_0x54190a['SCISSOR_TEST']);
                break;
            case _0x18be32[_0x1425cb(0x97f)][_0x1425cb(0x983)]:
                break;
            default:
                throw new Error('Scene3D:camera\x20clearFlag\x20invalid.');
            }
        }
        [_0x6027f5(0x9c3)](_0x1b4783, _0x4d60f7) {
            var _0x40b749 = _0x6027f5, _0x7923b1 = _0x1b4783[_0x40b749(0x64c)];
            switch (_0x4d60f7) {
            case _0x9c4b57[_0x40b749(0xc16)]:
                this['_opaqueQueue']['_render'](_0x1b4783);
                break;
            case _0x9c4b57[_0x40b749(0x9c4)]:
                _0x7923b1['clearFlag'] === _0x18be32[_0x40b749(0x97f)][_0x40b749(0x981)] && (_0x7923b1[_0x40b749(0x8e9)][_0x40b749(0x8d7)]() ? _0x7923b1[_0x40b749(0x8e9)]['_render'](_0x1b4783) : this[_0x40b749(0x8e1)][_0x40b749(0x8d7)]() && this[_0x40b749(0x8e1)][_0x40b749(0x5e8)](_0x1b4783));
                break;
            case _0x9c4b57['SCENERENDERFLAG_RENDERTRANSPARENT']:
                if (this[_0x40b749(0x81e)][_0x40b749(0x5e8)](_0x1b4783), _0x1b438f[_0x40b749(0x24a)]) {
                    for (var _0x45fa44 = this[_0x40b749(0x825)]['_render'][_0x40b749(0x600)], _0x53fb3b = 0x0, _0x2ea833 = _0x45fa44[_0x40b749(0x205)]; _0x53fb3b < _0x2ea833; _0x53fb3b++)
                        _0x45fa44[_0x53fb3b][_0x40b749(0x388)](this, _0x1b4783, null, null), _0x45fa44[_0x53fb3b][_0x40b749(0x5e8)](_0x1b4783);
                }
            }
        }
        [_0x6027f5(0x67c)](_0x1ec559, _0x1f7c06) {
            var _0x41741b = _0x6027f5, _0x4deecc = _0x1ec559[_0x41741b(0xb15)];
            if (_0x4deecc) {
                for (var _0xdb5f4f = _0x4deecc[_0x41741b(0x205)], _0x31d7ac = new Array(_0xdb5f4f), _0x55a81e = 0x0; _0x55a81e < _0xdb5f4f; _0x55a81e++) {
                    var _0x3e7326 = new _0x3c3cd4(), _0x1f1032 = _0x4deecc[_0x55a81e];
                    _0x1f1032[_0x41741b(0x3b8)] ? _0x3e7326[_0x41741b(0xb16)] = _0x387b86[_0x41741b(0x3bd)][_0x41741b(0x3b7)](_0x1f1032[_0x41741b(0x3b8)]) : (_0x3e7326[_0x41741b(0xb16)] = _0x387b86['Loader'][_0x41741b(0x3b7)](_0x1f1032[_0x41741b(0x46f)]['path']), _0x1f1032[_0x41741b(0x87b)] && (_0x3e7326[_0x41741b(0xb17)] = _0x387b86[_0x41741b(0x3bd)][_0x41741b(0x3b7)](_0x1f1032['direction'][_0x41741b(0x3b8)]))), _0x31d7ac[_0x55a81e] = _0x3e7326;
                }
                this[_0x41741b(0xb15)] = _0x31d7ac;
            }
            var _0x261771 = _0x1ec559[_0x41741b(0xbcc)];
            if (_0x261771) {
                var _0xc19ae1 = this[_0x41741b(0xbcc)];
                _0xc19ae1[_0x41741b(0x1fa)](_0x261771), this['ambientColor'] = _0xc19ae1;
            }
            var _0x4f9b7f = _0x1ec559['sky'];
            if (_0x4f9b7f)
                switch (this[_0x41741b(0x8e1)][_0x41741b(0x8d5)] = _0x387b86[_0x41741b(0x3bd)][_0x41741b(0x3b7)](_0x4f9b7f[_0x41741b(0x8d5)][_0x41741b(0x3b8)]), _0x4f9b7f[_0x41741b(0x8d6)]) {
                case _0x41741b(0xc17):
                    this[_0x41741b(0x8e1)][_0x41741b(0x8d6)] = _0x5ee7a8[_0x41741b(0x304)];
                    break;
                case 'SkyDome':
                    this[_0x41741b(0x8e1)][_0x41741b(0x8d6)] = _0x224a66['instance'];
                    break;
                default:
                    this[_0x41741b(0x8e9)][_0x41741b(0x8d6)] = _0x5ee7a8[_0x41741b(0x304)];
                }
            this[_0x41741b(0xbab)] = _0x1ec559['enableFog'], this[_0x41741b(0xbac)] = _0x1ec559[_0x41741b(0xbac)], this['fogRange'] = _0x1ec559['fogRange'];
            var _0x55e4de = _0x1ec559[_0x41741b(0xbc4)];
            if (_0x55e4de) {
                var _0x450345 = this[_0x41741b(0xbc4)];
                _0x450345[_0x41741b(0x1fa)](_0x55e4de), this[_0x41741b(0xbc4)] = _0x450345;
            }
            var _0x26167b = _0x1ec559['ambientSphericalHarmonics'];
            if (_0x26167b) {
                var _0x23324e = this[_0x41741b(0xbcd)];
                for (_0x55a81e = 0x0; _0x55a81e < 0x3; _0x55a81e++) {
                    var _0x170a09 = 0x9 * _0x55a81e;
                    _0x23324e[_0x41741b(0x872)](_0x55a81e, _0x26167b[_0x170a09], _0x26167b[_0x170a09 + 0x1], _0x26167b[_0x170a09 + 0x2], _0x26167b[_0x170a09 + 0x3], _0x26167b[_0x170a09 + 0x4], _0x26167b[_0x170a09 + 0x5], _0x26167b[_0x170a09 + 0x6], _0x26167b[_0x170a09 + 0x7], _0x26167b[_0x170a09 + 0x8]);
                }
                this[_0x41741b(0xbcd)] = _0x23324e;
            }
            var _0x5e2d30 = _0x1ec559['reflection'];
            null != _0x5e2d30 && (this['reflection'] = _0x387b86[_0x41741b(0x3bd)][_0x41741b(0x3b7)](_0x5e2d30));
            var _0x5ecad5 = _0x1ec559[_0x41741b(0xaf3)];
            null != _0x5ecad5 && (this[_0x41741b(0xaf3)] = _0x5ecad5);
            var _0x29254b = _0x1ec559[_0x41741b(0xbc8)];
            null != _0x29254b && (this[_0x41741b(0xbc8)] = _0x29254b);
            var _0x106138 = _0x1ec559[_0x41741b(0xbd1)];
            null != _0x106138 && (this[_0x41741b(0xbd1)] = _0x106138);
            var _0x301eff = _0x1ec559[_0x41741b(0xbae)];
            null != _0x301eff && (this['reflectionIntensity'] = _0x301eff);
        }
        [_0x6027f5(0xa6f)](_0x246b55) {
            var _0x7c6b2 = _0x6027f5;
            this['_octree'] && _0x246b55[_0x7c6b2(0xaf9)] ? this[_0x7c6b2(0x821)][_0x7c6b2(0x207)](_0x246b55) : this[_0x7c6b2(0x81f)][_0x7c6b2(0x207)](_0x246b55), _0x246b55[_0x7c6b2(0xb13)]();
        }
        ['_removeRenderObject'](_0x46cdac) {
            var _0x49b4dc = _0x6027f5;
            this[_0x49b4dc(0x821)] && _0x46cdac[_0x49b4dc(0xaf9)] ? this['_octree'][_0x49b4dc(0x3b4)](_0x46cdac) : this[_0x49b4dc(0x81f)][_0x49b4dc(0x3b4)](_0x46cdac);
        }
        [_0x6027f5(0xa90)](_0x163312) {
            var _0x1aeaca = _0x6027f5;
            return _0x163312 <= 0x9c4 ? this[_0x1aeaca(0x81d)] : this[_0x1aeaca(0x81e)];
        }
        [_0x6027f5(0x820)]() {
            var _0x22fccc = _0x6027f5;
            this[_0x22fccc(0x81d)][_0x22fccc(0x44c)](), this[_0x22fccc(0x81e)][_0x22fccc(0x44c)]();
            for (var _0x1f2a87 = _0x423717[_0x22fccc(0xabb)], _0x476275 = 0x0, _0x3b0d15 = _0x1f2a87['length']; _0x476275 < _0x3b0d15; _0x476275++)
                _0x1f2a87[_0x476275]['_clear']();
            var _0x1075d1 = _0x557675['_managers'];
            for (_0x476275 = 0x0, _0x3b0d15 = _0x1075d1[_0x22fccc(0x205)]; _0x476275 < _0x3b0d15; _0x476275++)
                _0x1075d1[_0x476275][_0x22fccc(0x9c1)]();
        }
        [_0x6027f5(0x364)](_0x2fb476 = !0x0) {
            var _0x5355d5 = _0x6027f5;
            if (!this[_0x5355d5(0x5cf)]) {
                super[_0x5355d5(0x364)](_0x2fb476), this[_0x5355d5(0x8e1)][_0x5355d5(0x364)](), this[_0x5355d5(0x8e1)] = null, this[_0x5355d5(0x863)] = null, this['_pointLights'] = null, this['_spotLights'] = null, this[_0x5355d5(0x937)] = null, this[_0x5355d5(0x4e2)] = null, this[_0x5355d5(0x81f)][_0x5355d5(0x805)](), this[_0x5355d5(0x386)][_0x5355d5(0x805)](), this[_0x5355d5(0x81f)] = null, this[_0x5355d5(0x386)] = null, this[_0x5355d5(0x8ee)] = null, this[_0x5355d5(0x821)] = null, this['_physicsSimulation'] && this[_0x5355d5(0x9f6)][_0x5355d5(0xa77)](), this['_reflection'][_0x5355d5(0x35c)](), this[_0x5355d5(0xbd2)] = null;
                var _0x3e658b = this['_lightmaps'];
                if (_0x3e658b)
                    for (var _0x5867b8 = 0x0, _0x1b4272 = _0x3e658b['length']; _0x5867b8 < _0x1b4272; _0x5867b8++) {
                        var _0x4c2109 = _0x3e658b[_0x5867b8];
                        _0x4c2109['lightmapColor'] && _0x4c2109[_0x5355d5(0xb16)][_0x5355d5(0x35c)](), _0x4c2109[_0x5355d5(0xb17)] && _0x4c2109[_0x5355d5(0xb17)][_0x5355d5(0x35c)]();
                    }
                this[_0x5355d5(0xb9f)] = null, this[_0x5355d5(0xaf7)][_0x5355d5(0x364)](), _0x387b86[_0x5355d5(0x3bd)][_0x5355d5(0x5d3)](this[_0x5355d5(0xbc2)]);
            }
        }
        ['render'](_0x23e963) {
            var _0xe68d35 = _0x6027f5;
            _0x23e963[_0xe68d35(0xc18)] = _0x387b86[_0xe68d35(0xc19)][_0xe68d35(0xc1a)], this[_0xe68d35(0x5ac)]['length'] > 0x0 && _0x23e963[_0xe68d35(0xc1b)](this);
        }
        [_0x6027f5(0xc1c)]() {
            var _0x388e10 = _0x6027f5, _0x48dd3f, _0x32b5a9, _0x2ab3b3;
            for (_0x387b86[_0x388e10(0x9b6)][_0x388e10(0x9b3)](_0x387b86[_0x388e10(0x9b6)][_0x388e10(0xbde)]), this[_0x388e10(0xbfd)](), _0x387b86[_0x388e10(0x9b6)][_0x388e10(0x9b3)](_0x387b86[_0x388e10(0x9b6)][_0x388e10(0xc1d)]), _0x48dd3f = 0x0, _0x2ab3b3 = (_0x32b5a9 = this[_0x388e10(0x8ee)][_0x388e10(0x205)]) - 0x1; _0x48dd3f < _0x32b5a9; _0x48dd3f++) {
                _0x387b86['Render'][_0x388e10(0x65c)] && _0x3985fd[_0x388e10(0x4db)](_0x48dd3f == _0x2ab3b3);
                var _0x4c58df = this[_0x388e10(0x8ee)][_0x48dd3f];
                _0x4c58df[_0x388e10(0x991)] && _0x4c58df[_0x388e10(0x4ff)]();
            }
            return _0x387b86['PerformancePlugin'][_0x388e10(0x9b7)](_0x387b86[_0x388e10(0x9b6)][_0x388e10(0xc1d)]), _0x387b86['Context'][_0x388e10(0xc1e)](), _0x387b86[_0x388e10(0x9b6)][_0x388e10(0x9b7)](_0x387b86[_0x388e10(0x9b6)]['PERFORMANCE_LAYA_3D']), 0x1;
        }
        [_0x6027f5(0xc1f)]() {
            return 0x0;
        }
        [_0x6027f5(0xc20)]() {
        }
        [_0x6027f5(0xc21)](_0x1bad3b, _0x427fbc) {
            return 0x0;
        }
        ['setGlobalShaderValue'](_0x3a4785, _0x312aa3, _0x5904c1) {
            var _0xaab492 = _0x6027f5, _0x232c9e = _0x3a9f31['propertyNameToID'](_0x3a4785);
            switch (_0x312aa3) {
            case _0x18be32[_0xaab492(0x571)][_0xaab492(0x572)]:
                this[_0xaab492(0x4e2)]['setInt'](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32[_0xaab492(0x571)]['Number']:
                this['_shaderValues'][_0xaab492(0x4a3)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32['ShaderDataType'][_0xaab492(0x573)]:
                this[_0xaab492(0x4e2)][_0xaab492(0x49f)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32[_0xaab492(0x571)][_0xaab492(0x228)]:
                this[_0xaab492(0x4e2)][_0xaab492(0x4aa)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32[_0xaab492(0x571)][_0xaab492(0x576)]:
                this[_0xaab492(0x4e2)][_0xaab492(0x4a9)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32[_0xaab492(0x571)][_0xaab492(0x577)]:
                this['_shaderValues'][_0xaab492(0x4ac)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32['ShaderDataType'][_0xaab492(0x4fd)]:
                this['_shaderValues'][_0xaab492(0x4a8)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32[_0xaab492(0x571)]['Vector2']:
                this[_0xaab492(0x4e2)][_0xaab492(0x4a5)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32['ShaderDataType'][_0xaab492(0x46b)]:
                this['_shaderValues'][_0xaab492(0x57a)](_0x232c9e, _0x5904c1);
                break;
            case _0x18be32[_0xaab492(0x571)][_0xaab492(0x458)]:
                this[_0xaab492(0x4e2)]['setBuffer'](_0x232c9e, _0x5904c1);
            }
        }
        get ['customReflection']() {
            return this['_reflection'];
        }
        set [_0x6027f5(0xc22)](_0x30efa9) {
            var _0x5c014b = _0x6027f5;
            this[_0x5c014b(0xbd2)] != _0x30efa9 && (_0x30efa9['_addReference'](), this['_reflectionProbeManager'][_0x5c014b(0xb94)] = _0x30efa9, this[_0x5c014b(0xbd2)] = _0x30efa9);
        }
        get ['reflectionMode']() {
            var _0x2f088b = _0x6027f5;
            return this[_0x2f088b(0xafc)];
        }
        set ['reflectionMode'](_0x5166a5) {
            var _0x136069 = _0x6027f5;
            this[_0x136069(0xafc)] = _0x5166a5;
        }
        [_0x6027f5(0xc23)](_0x402e55) {
            var _0x553095 = _0x6027f5;
            for (var _0x3a41b7 = this[_0x553095(0xb9f)], _0x50368b = 0x0, _0x3dd50d = _0x3a41b7[_0x553095(0x205)]; _0x50368b < _0x3dd50d; _0x50368b++)
                _0x3a41b7[_0x50368b][_0x553095(0xb16)][_0x553095(0x35c)]();
            if (!_0x402e55)
                throw new Error('Scene3D:\x20value\x20value\x20can\x27t\x20be\x20null.');
            var _0x5e1d18 = _0x402e55['length'];
            for (_0x3a41b7[_0x553095(0x205)] = _0x5e1d18, _0x50368b = 0x0; _0x50368b < _0x5e1d18; _0x50368b++) {
                var _0x2ce19a = _0x402e55[_0x50368b];
                _0x2ce19a[_0x553095(0x35f)](), _0x3a41b7[_0x50368b] || (_0x3a41b7[_0x50368b] = new _0x3c3cd4()), _0x3a41b7[_0x50368b]['lightmapColor'] = _0x2ce19a;
            }
        }
        [_0x6027f5(0xc24)]() {
            var _0x534793 = _0x6027f5;
            for (var _0x2e4ed9 = new Array(this[_0x534793(0xb9f)][_0x534793(0x205)]), _0x5730b7 = 0x0; _0x5730b7 < this[_0x534793(0xb9f)]['length']; _0x5730b7++)
                _0x2e4ed9[_0x5730b7] = this['_lightmaps'][_0x5730b7][_0x534793(0xb16)];
            return _0x2e4ed9;
        }
    }
    _0x9c4b57['_shadowCasterPass'] = new _0x170273(), _0x9c4b57[_0x6027f5(0xc25)] = 'HIERARCHY', _0x9c4b57[_0x6027f5(0x262)] = !0x1, _0x9c4b57[_0x6027f5(0x246)] = 0x40, _0x9c4b57['octreeInitialCenter'] = new _0x3697cd(0x0, 0x0, 0x0), _0x9c4b57[_0x6027f5(0x248)] = 0x2, _0x9c4b57[_0x6027f5(0x249)] = 1.25, _0x9c4b57['REFLECTIONMODE_SKYBOX'] = 0x0, _0x9c4b57[_0x6027f5(0xc26)] = 0x1, _0x9c4b57[_0x6027f5(0xc16)] = 0x0, _0x9c4b57['SCENERENDERFLAG_SKYBOX'] = 0x1, _0x9c4b57[_0x6027f5(0x9c6)] = 0x2, _0x9c4b57[_0x6027f5(0xbc5)] = _0x3a9f31[_0x6027f5(0x553)]('u_FogColor'), _0x9c4b57['FOGSTART'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc27)), _0x9c4b57[_0x6027f5(0xbc7)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc28)), _0x9c4b57[_0x6027f5(0xc29)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc2a)), _0x9c4b57['LIGHTBUFFER'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc2b)), _0x9c4b57[_0x6027f5(0xc05)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc2c)), _0x9c4b57[_0x6027f5(0xc02)] = _0x3a9f31[_0x6027f5(0x553)]('u_SunLight.direction'), _0x9c4b57[_0x6027f5(0xc01)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc2d)), _0x9c4b57[_0x6027f5(0xbd8)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc2e)), _0x9c4b57[_0x6027f5(0xc2f)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc30)), _0x9c4b57[_0x6027f5(0xbd9)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc31)), _0x9c4b57[_0x6027f5(0xbda)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc32)), _0x9c4b57[_0x6027f5(0xbdb)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc33)), _0x9c4b57[_0x6027f5(0xbdc)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc34)), _0x9c4b57[_0x6027f5(0xbdd)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc35)), _0x9c4b57['LIGHTDIRECTION'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc36)), _0x9c4b57[_0x6027f5(0xc06)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc37)), _0x9c4b57[_0x6027f5(0xc0a)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc38)), _0x9c4b57[_0x6027f5(0xc0b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc39)), _0x9c4b57[_0x6027f5(0xc3a)] = _0x3a9f31[_0x6027f5(0x553)]('u_PointLight.attenuation'), _0x9c4b57['POINTLIGHTCOLOR'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc3b)), _0x9c4b57[_0x6027f5(0xc3c)] = _0x3a9f31['propertyNameToID']('u_SpotLight.position'), _0x9c4b57['SPOTLIGHTDIRECTION'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc3d)), _0x9c4b57[_0x6027f5(0xc3e)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc3f)), _0x9c4b57[_0x6027f5(0xc0e)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc40)), _0x9c4b57[_0x6027f5(0xc0c)] = _0x3a9f31[_0x6027f5(0x553)]('u_SpotLight.color'), _0x9c4b57['AMBIENTCOLOR'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc41)), _0x9c4b57[_0x6027f5(0xbdf)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xc42)), _0x9c4b57[_0x6027f5(0xc43)] = new _0x1ff4c5();
    class _0xe5c8a extends _0x387b86[_0x6027f5(0x52b)] {
        constructor(_0x2a9d7e, _0x20653d, _0x2253c0, _0x5e77d7) {
            var _0x45ef3b = _0x6027f5;
            for (var _0x52a2e1 in (super(_0x20653d, _0x2253c0, null), this[_0x45ef3b(0xc44)] = {}, this[_0x45ef3b(0xc45)] = 0x1, this[_0x45ef3b(0xc46)] = new _0x47a097(), this[_0x45ef3b(0x50f)] = new _0x1ff4c5(), this[_0x45ef3b(0xc47)] = {}, this['_owner'] = _0x2a9d7e, this[_0x45ef3b(0x7ab)] = _0x5e77d7, this[_0x45ef3b(0xc48)]))
                this[_0x45ef3b(0x50f)][_0x45ef3b(0x207)](_0x3a9f31[_0x45ef3b(0x510)](_0x52a2e1));
        }
        get [_0x6027f5(0x7ed)]() {
            var _0x5e90ff = _0x6027f5;
            return this[_0x5e90ff(0xc46)];
        }
        [_0x6027f5(0xc49)](_0x2548da, _0x358f6a, _0x41fe0f, _0x52b48e, _0x47dcc7) {
            var _0x4548dd = _0x6027f5, _0x3ef634, _0x39039a, _0x4333bf, _0x555f0d, _0x5f3f1d, _0x76caae, _0xdb4056, _0x17832c, _0x457eaa, _0x38ab80, _0x3baa80;
            for (_0x457eaa = _0x41fe0f; _0x457eaa < _0x358f6a[_0x4548dd(0x205)]; _0x457eaa++)
                if (!((_0x4333bf = _0x358f6a[_0x457eaa])[_0x4548dd(0x205)] < 0x1) && 0x0 !== (_0x76caae = _0x4333bf['indexOf']('//'))) {
                    if (_0x76caae >= 0x0 && (_0x4333bf = _0x4333bf['substr'](0x0, _0x76caae)), _0x3ef634 = _0x17832c || new _0x387b86[(_0x4548dd(0xc4a))](_0x52b48e), _0x17832c = null, _0x3ef634[_0x4548dd(0xc4b)] = _0x4333bf, _0x3ef634[_0x4548dd(0xc4c)] = !0x0, (_0x76caae = _0x4333bf[_0x4548dd(0x2f9)]('#')) >= 0x0) {
                        for (_0x555f0d = '#', _0x3baa80 = _0x76caae + 0x1, _0x38ab80 = _0x4333bf[_0x4548dd(0x205)]; _0x3baa80 < _0x38ab80; _0x3baa80++) {
                            var _0x129cd9 = _0x4333bf[_0x4548dd(0xc4d)](_0x3baa80);
                            if ('\x20' === _0x129cd9 || '\x09' === _0x129cd9 || '?' === _0x129cd9)
                                break;
                            _0x555f0d += _0x129cd9;
                        }
                        switch (_0x3ef634[_0x4548dd(0x2b7)] = _0x555f0d, _0x555f0d) {
                        case _0x4548dd(0xc4e):
                        case _0x4548dd(0xc4f):
                            if (_0x3ef634['src'] = _0x4333bf, _0x3ef634[_0x4548dd(0xc4c)] = null != _0x4333bf[_0x4548dd(0xc50)](/[!&|()=<>]/), _0x3ef634[_0x4548dd(0xc4c)] ? console[_0x4548dd(0x93b)](_0x4548dd(0xc51) + _0x4333bf[_0x4548dd(0x2fa)](_0x76caae + _0x3ef634[_0x4548dd(0x2b7)][_0x4548dd(0x205)]) + '}') : (_0xdb4056 = _0x4333bf[_0x4548dd(0x52a)](/^\s*/, '')[_0x4548dd(0x609)](/\s+/), _0x3ef634['setCondition'](_0xdb4056[0x1], '#ifdef' === _0x555f0d ? _0x387b86[_0x4548dd(0x52b)][_0x4548dd(0xc52)] : _0x387b86['ShaderCompile'][_0x4548dd(0xc53)]), _0x3ef634['text'] = '//' + _0x3ef634[_0x4548dd(0xc4b)]), _0x3ef634[_0x4548dd(0x674)](_0x2548da), _0x2548da = _0x3ef634, _0x47dcc7) {
                                for (_0xdb4056 = _0x4333bf['substr'](_0x3baa80)[_0x4548dd(0x609)](_0x387b86[_0x4548dd(0x52b)]['_splitToWordExps3']), _0x3baa80 = 0x0; _0x3baa80 < _0xdb4056[_0x4548dd(0x205)]; _0x3baa80++)
                                    (_0x4333bf = _0xdb4056[_0x3baa80])[_0x4548dd(0x205)] && (_0x47dcc7[_0x4333bf] = !0x0);
                            }
                            continue;
                        case _0x4548dd(0xc54):
                        case '#elif':
                            if (_0x3ef634['src'] = _0x4333bf, _0x3ef634['noCompile'] = !0x0, _0x4548dd(0xc55) == _0x555f0d && ((_0x39039a = (_0x2548da = _0x2548da['parent'])[_0x4548dd(0xc56)][_0x2548da[_0x4548dd(0xc56)]['length'] - 0x1])[_0x4548dd(0xc4b)] = _0x39039a[_0x4548dd(0xc57)], _0x39039a['noCompile'] = !0x0, _0x39039a[_0x4548dd(0xc58)] = null), _0x3ef634[_0x4548dd(0x674)](_0x2548da), _0x2548da = _0x3ef634, _0x47dcc7) {
                                for (_0xdb4056 = _0x4333bf[_0x4548dd(0x2fa)](_0x3baa80)[_0x4548dd(0x609)](_0x387b86[_0x4548dd(0x52b)][_0x4548dd(0xc59)]), _0x3baa80 = 0x0; _0x3baa80 < _0xdb4056[_0x4548dd(0x205)]; _0x3baa80++)
                                    (_0x4333bf = _0xdb4056[_0x3baa80])[_0x4548dd(0x205)] && _0x4548dd(0xc5a) != _0x4333bf && (_0x47dcc7[_0x4333bf] = !0x0);
                            }
                            continue;
                        case _0x4548dd(0xc5b):
                            _0x3ef634[_0x4548dd(0xc57)] = _0x4333bf, _0x39039a = (_0x2548da = _0x2548da[_0x4548dd(0xc5c)])[_0x4548dd(0xc56)][_0x2548da[_0x4548dd(0xc56)][_0x4548dd(0x205)] - 0x1], _0x3ef634[_0x4548dd(0xc4c)] = _0x39039a[_0x4548dd(0xc4c)], _0x3ef634[_0x4548dd(0xc4c)] || (_0x3ef634[_0x4548dd(0xc58)] = _0x39039a[_0x4548dd(0xc58)], _0x3ef634[_0x4548dd(0xc5d)] = _0x39039a[_0x4548dd(0xc5d)] == _0x387b86[_0x4548dd(0x52b)][_0x4548dd(0xc52)] ? _0x387b86[_0x4548dd(0x52b)]['IFDEF_ELSE'] : _0x387b86[_0x4548dd(0x52b)]['IFDEF_YES'], _0x3ef634[_0x4548dd(0xc4b)] = '//' + _0x3ef634[_0x4548dd(0xc4b)] + '\x20' + _0x39039a[_0x4548dd(0xc4b)] + '\x20' + _0x3ef634['conditionType']), _0x3ef634[_0x4548dd(0x674)](_0x2548da), _0x2548da = _0x3ef634;
                            continue;
                        case _0x4548dd(0xc5e):
                            _0x39039a = (_0x2548da = _0x2548da['parent'])[_0x4548dd(0xc56)][_0x2548da[_0x4548dd(0xc56)][_0x4548dd(0x205)] - 0x1], _0x3ef634[_0x4548dd(0xc4c)] = _0x39039a[_0x4548dd(0xc4c)], _0x3ef634[_0x4548dd(0xc4c)] || (_0x3ef634['text'] = '//' + _0x3ef634['text']), _0x3ef634[_0x4548dd(0x674)](_0x2548da);
                            continue;
                        case _0x4548dd(0xc5f):
                            _0xdb4056 = _0x387b86['ShaderCompile'][_0x4548dd(0xc60)](_0x4333bf, null);
                            var _0x202e69 = _0x387b86[_0x4548dd(0x52b)]['includes'][_0xdb4056[0x1]];
                            if (!_0x202e69)
                                throw _0x4548dd(0xc61) + _0xdb4056[0x1];
                            if ((_0x76caae = _0xdb4056[0x0][_0x4548dd(0x2f9)]('?')) < 0x0) {
                                _0x3ef634['setParent'](_0x2548da), _0x4333bf = _0x202e69[_0x4548dd(0xc62)](_0x4548dd(0xc63) == _0xdb4056[0x2] ? _0xdb4056[0x3] : null), this[_0x4548dd(0xc49)](_0x3ef634, _0x4333bf['split']('\x0a'), 0x0, _0x52b48e, _0x47dcc7), _0x3ef634['text'] = '';
                                continue;
                            }
                            _0x3ef634[_0x4548dd(0xc64)](_0xdb4056[0x0][_0x4548dd(0x2fa)](_0x76caae + 0x1), _0x387b86[_0x4548dd(0x52b)][_0x4548dd(0xc52)]), _0x3ef634[_0x4548dd(0xc4b)] = _0x202e69[_0x4548dd(0xc62)]('with' == _0xdb4056[0x2] ? _0xdb4056[0x3] : null);
                            break;
                        case '#import':
                            _0x5f3f1d = (_0xdb4056 = _0x387b86[_0x4548dd(0x52b)][_0x4548dd(0xc60)](_0x4333bf, null))[0x1], _0x52b48e['push']({
                                'node': _0x3ef634,
                                'file': _0x387b86[_0x4548dd(0x52b)]['includes'][_0x5f3f1d],
                                'ofs': _0x3ef634[_0x4548dd(0xc4b)]['length']
                            });
                            continue;
                        }
                    } else {
                        if ((_0x39039a = _0x2548da['childs'][_0x2548da[_0x4548dd(0xc56)][_0x4548dd(0x205)] - 0x1]) && !_0x39039a[_0x4548dd(0x2b7)]) {
                            _0x52b48e['length'] > 0x0 && _0x387b86['ShaderCompile'][_0x4548dd(0xc60)](_0x4333bf, _0x39039a), _0x17832c = _0x3ef634, _0x39039a[_0x4548dd(0xc4b)] += '\x0a' + _0x4333bf;
                            continue;
                        }
                        _0x52b48e[_0x4548dd(0x205)] > 0x0 && _0x387b86[_0x4548dd(0x52b)][_0x4548dd(0xc60)](_0x4333bf, _0x3ef634);
                    }
                    _0x3ef634[_0x4548dd(0x674)](_0x2548da);
                }
        }
        [_0x6027f5(0xc65)](_0x21a27b, _0xd70107, _0x2964e1) {
            var _0x294013 = _0x6027f5, _0x1a1ecc = this[_0x294013(0xc45)] - 0x1;
            if (_0xd70107 == _0x1a1ecc) {
                for (var _0x87da89 in _0x21a27b)
                    for (var _0x388c47 = _0x21a27b[_0x87da89], _0x224877 = 0x0, _0x45129d = _0x2964e1 - _0x1a1ecc; _0x224877 < _0x45129d; _0x224877++)
                        _0x224877 == _0x45129d - 0x1 ? _0x21a27b[0x0] = _0x388c47 : _0x21a27b = _0x21a27b[0x0 == _0x224877 ? _0x87da89 : 0x0] = {};
                this[_0x294013(0xc45)] = _0x2964e1;
            } else {
                for (var _0x87da89 in _0x21a27b)
                    this['_resizeCacheShaderMap'](_0x21a27b[_0x87da89], ++_0xd70107, _0x2964e1);
            }
        }
        [_0x6027f5(0xc66)](_0x19ffa5, _0x297fc9, _0x1d84f2) {
            var _0x41f836 = _0x6027f5, _0x2323d5 = _0x3a9f31[_0x41f836(0xc67)], _0x3e640f = this[_0x41f836(0x3dc)], _0x9ce467 = _0x3e640f[_0x41f836(0x3dc)], _0x3c1050 = _0x19ffa5[_0x41f836(0x445)];
            _0x3a9f31['_getNamesByDefineData'](_0x19ffa5, _0x297fc9), _0x1d84f2[_0x41f836(0x205)] = _0x3c1050[_0x41f836(0x205)];
            for (var _0x506fce = 0x0, _0x3998eb = _0x3c1050[_0x41f836(0x205)]; _0x506fce < _0x3998eb; _0x506fce++)
                _0x1d84f2[_0x506fce] = _0x3c1050[_0x506fce];
            _0x2323d5 ? _0x2323d5[_0x41f836(0x1f8)](_0x9ce467, _0x9ce467['_subShaders'][_0x41f836(0x2f9)](_0x3e640f), _0x3e640f[_0x41f836(0x50d)]['indexOf'](this), _0x297fc9) : _0x3a9f31[_0x41f836(0xc67)] = _0x2323d5 = new _0x64cfdc(_0x9ce467, _0x9ce467[_0x41f836(0x524)][_0x41f836(0x2f9)](_0x3e640f), _0x3e640f[_0x41f836(0x50d)]['indexOf'](this), _0x297fc9), _0x3a9f31['debugShaderVariantCollection']['add'](_0x2323d5);
        }
        [_0x6027f5(0x530)](_0x436428) {
            var _0x4af360 = _0x6027f5, _0x30677c, _0x275ddf = _0xe5c8a[_0x4af360(0xc68)], _0x41394b = _0xe5c8a['_debugDefineMask'];
            _0x436428['_intersectionDefineDatas'](this[_0x4af360(0x50f)]), _0x3a9f31[_0x4af360(0x545)] && (_0x30677c = _0x436428[_0x4af360(0x446)], this[_0x4af360(0xc66)](_0x436428, _0x275ddf, _0x41394b)), _0x436428[_0x4af360(0x449)](_0x9c4b57[_0x4af360(0xc43)]);
            var _0x5e79bc = this['_cacheSharders'], _0x4f4253 = _0x436428[_0x4af360(0x446)];
            _0x4f4253 > this[_0x4af360(0xc45)] && (this[_0x4af360(0xc65)](_0x5e79bc, 0x0, _0x4f4253), this[_0x4af360(0xc45)] = _0x4f4253);
            for (var _0x5e1ffe = _0x436428[_0x4af360(0x445)], _0x2a676a = _0x436428[_0x4af360(0x446)] - 0x1, _0x4d4fca = this[_0x4af360(0xc45)] - 0x1, _0x32947b = 0x0; _0x32947b < _0x4d4fca; _0x32947b++) {
                var _0x4b8fc5 = _0x2a676a < _0x32947b ? 0x0 : _0x5e1ffe[_0x32947b], _0x35e684 = _0x5e79bc[_0x4b8fc5];
                _0x35e684 || (_0x5e79bc[_0x4b8fc5] = _0x35e684 = {}), _0x5e79bc = _0x35e684;
            }
            var _0x3df664 = _0x2a676a < _0x4d4fca ? 0x0 : _0x5e1ffe[_0x4d4fca], _0x4f09ca = _0x5e79bc[_0x3df664];
            if (_0x4f09ca)
                return _0x4f09ca;
            var _0x3d391e = _0xe5c8a[_0x4af360(0xc69)];
            _0x3a9f31['_getNamesByDefineData'](_0x436428, _0x3d391e);
            var _0x344970, _0x4e9b5b, _0xc95bf4 = _0x362537[_0x4af360(0x251)], _0x590cd5 = _0xc95bf4[_0x4af360(0x25c)], _0x5b236d = {}, _0x2da0b1 = '';
            _0x387b86[_0x4af360(0xc6a)][_0x4af360(0x3f9)] ? (_0x344970 = '#version\x20300\x20es\x0a\x0a\x09\x09\x09\x09#define\x20attribute\x20in\x0a\x09\x09\x09\x09#define\x20varying\x20out\x0a\x09\x09\x09\x09#define\x20texture2D\x20texture\x0a', _0x4e9b5b = '#version\x20300\x20es\x0a\x0a\x09\x09\x09\x09#define\x20varying\x20in\x0a\x09\x09\x09\x09out\x20highp\x20vec4\x20pc_fragColor;\x0a\x09\x09\x09\x09#define\x20gl_FragColor\x20pc_fragColor\x0a\x09\x09\x09\x09#define\x20gl_FragDepthEXT\x20gl_FragDepth\x0a\x09\x09\x09\x09#define\x20texture2D\x20texture\x0a\x09\x09\x09\x09#define\x20textureCube\x20texture\x0a\x09\x09\x09\x09#define\x20texture2DProj\x20textureProj\x0a\x09\x09\x09\x09#define\x20texture2DLodEXT\x20textureLod\x0a\x09\x09\x09\x09#define\x20texture2DProjLodEXT\x20textureProjLod\x0a\x09\x09\x09\x09#define\x20textureCubeLodEXT\x20textureLod\x0a\x09\x09\x09\x09#define\x20texture2DGradEXT\x20textureGrad\x0a\x09\x09\x09\x09#define\x20texture2DProjGradEXT\x20textureProjGrad\x0a\x09\x09\x09\x09#define\x20textureCubeGradEXT\x20textureGrad\x0a') : (_0x344970 = '', _0x4e9b5b = _0x4af360(0xc6b)), _0x2da0b1 += _0x4af360(0xc6c) + _0xc95bf4[_0x4af360(0x259)] + '\x0a', _0x2da0b1 += '#define\x20MAX_LIGHT_COUNT_PER_CLUSTER\x20' + _0xc95bf4[_0x4af360(0x24d)] + '\x0a', _0x2da0b1 += _0x4af360(0xc6d) + _0x590cd5['x'] + '\x0a', _0x2da0b1 += _0x4af360(0xc6e) + _0x590cd5['y'] + '\x0a', _0x2da0b1 += '#define\x20CLUSTER_Z_COUNT\x20' + _0x590cd5['z'] + '\x0a', _0x2da0b1 += _0x4af360(0xc6f) + _0x387b86['SystemUtils'][_0x4af360(0xc70)] + '\x0a', _0x32947b = 0x0;
            for (var _0x2e73c5 = _0x3d391e[_0x4af360(0x205)]; _0x32947b < _0x2e73c5; _0x32947b++) {
                var _0x35801b = _0x3d391e[_0x32947b];
                _0x2da0b1 += _0x4af360(0xc71) + _0x35801b + '\x0a', _0x5b236d[_0x35801b] = !0x0;
            }
            var _0x23da21 = this[_0x4af360(0xc72)]['toscript'](_0x5b236d, []), _0x483203 = '';
            0x0 == _0x23da21[0x0][_0x4af360(0x2f9)](_0x4af360(0xc73)) && (_0x483203 = _0x23da21[0x0] + '\x0a', _0x23da21[_0x4af360(0x939)]());
            var _0x47cd0e = this[_0x4af360(0xc74)][_0x4af360(0xc75)](_0x5b236d, []), _0x5a0fc6 = '';
            if (0x0 == _0x47cd0e[0x0]['indexOf'](_0x4af360(0xc73)) && (_0x5a0fc6 = _0x47cd0e[0x0] + '\x0a', _0x47cd0e[_0x4af360(0x939)]()), _0x4f09ca = new _0x230f9c(_0x483203 + _0x344970 + _0x2da0b1 + _0x23da21[_0x4af360(0x26d)]('\x0a'), _0x5a0fc6 + _0x4e9b5b + _0x2da0b1 + _0x47cd0e[_0x4af360(0x26d)]('\x0a'), this[_0x4af360(0x3dc)][_0x4af360(0x520)], this[_0x4af360(0x3dc)][_0x4af360(0x521)] || this['_owner']['_owner'][_0x4af360(0x521)], this), _0x5e79bc[_0x3df664] = _0x4f09ca, _0x3a9f31[_0x4af360(0x545)]) {
                var _0x1900d3 = '', _0x102c63 = '';
                for (_0x32947b = 0x0, _0x2e73c5 = _0x30677c; _0x32947b < _0x2e73c5; _0x32947b++)
                    _0x102c63 += _0x32947b == _0x2e73c5 - 0x1 ? _0x41394b[_0x32947b] : _0x41394b[_0x32947b] + ',';
                for (_0x32947b = 0x0, _0x2e73c5 = _0x275ddf[_0x4af360(0x205)]; _0x32947b < _0x2e73c5; _0x32947b++)
                    _0x1900d3 += _0x32947b == _0x2e73c5 - 0x1 ? _0x275ddf[_0x32947b] : _0x275ddf[_0x32947b] + ',';
                console[_0x4af360(0x93b)](_0x4af360(0xc76) + this[_0x4af360(0x3dc)][_0x4af360(0x3dc)][_0x4af360(0x513)] + _0x4af360(0xc77) + this[_0x4af360(0x3dc)]['_owner']['_subShaders'][_0x4af360(0x2f9)](this[_0x4af360(0x3dc)]) + '\x20PassIndex:' + this[_0x4af360(0x3dc)]['_passes']['indexOf'](this) + '\x20DefineMask:[' + _0x102c63 + ']\x20DefineNames:[' + _0x1900d3 + ']', _0x4af360(0xc78));
            }
            return _0x4f09ca;
        }
        [_0x6027f5(0xc79)](_0x1bbb1b, _0xd9c141) {
            var _0x37d6c4 = _0x6027f5;
            _0xd9c141 ? this['_tags'][_0x1bbb1b] = _0xd9c141 : delete this[_0x37d6c4(0xc47)][_0x1bbb1b];
        }
        [_0x6027f5(0xc7a)](_0x3faaa5) {
            var _0x53275f = _0x6027f5;
            return this[_0x53275f(0xc47)][_0x3faaa5];
        }
    }
    _0xe5c8a[_0x6027f5(0xc69)] = [], _0xe5c8a[_0x6027f5(0xc68)] = [], _0xe5c8a['_debugDefineMask'] = [];
    class _0x8750c3 {
        constructor(_0x3dd8dc, _0x577793) {
            var _0x526270 = _0x6027f5;
            this[_0x526270(0xc7b)] = {}, this[_0x526270(0x50d)] = [], this[_0x526270(0x520)] = _0x3dd8dc, this[_0x526270(0x521)] = _0x577793;
        }
        [_0x6027f5(0xc7c)](_0x14399c, _0x5b91f1) {
            var _0x3d6fc0 = _0x6027f5;
            _0x5b91f1 ? this[_0x3d6fc0(0xc7b)][_0x14399c] = _0x5b91f1 : delete this['_flags'][_0x14399c];
        }
        [_0x6027f5(0xa8f)](_0x9959b3) {
            var _0x26717 = _0x6027f5;
            return this[_0x26717(0xc7b)][_0x9959b3];
        }
        [_0x6027f5(0xc7d)](_0x4b487c, _0x6c16eb, _0x2bda41 = null, _0x359e1b = _0x6027f5(0x3e1)) {
            var _0x55f4b3 = _0x6027f5, _0x2b0efc = new _0xe5c8a(this, _0x4b487c, _0x6c16eb, _0x2bda41);
            return _0x2b0efc['_pipelineMode'] = _0x359e1b, this['_passes'][_0x55f4b3(0x2ac)](_0x2b0efc), _0x2b0efc;
        }
    }
    (_0x22ad5f = _0x18be32[_0x6027f5(0xc7e)] || (_0x18be32[_0x6027f5(0xc7e)] = {}))[_0x22ad5f[_0x6027f5(0xc7f)] = 0x0] = 'SpecularTextureAlpha', _0x22ad5f[_0x22ad5f[_0x6027f5(0xc80)] = 0x1] = _0x6027f5(0xc80);
    class _0xe57706 extends _0x5d5c8f {
        constructor() {
            var _0x5407b4 = _0x6027f5;
            super(), this[_0x5407b4(0x6a9)](_0x5407b4(0xc81)), this['_shaderValues']['setVector'](_0xe57706[_0x5407b4(0xc82)], new _0x5b8e4e(0.2, 0.2, 0.2, 0x1));
        }
        static ['__init__']() {
            var _0x23c80e = _0x6027f5;
            _0xe57706[_0x23c80e(0xc83)] = _0x3a9f31['getDefineByName'](_0x23c80e(0xc84)), _0xe57706[_0x23c80e(0xc85)] = _0x3a9f31[_0x23c80e(0x510)](_0x23c80e(0xc86));
            var _0xe5234 = {
                    'a_Position': _0x73b54a[_0x23c80e(0x615)],
                    'a_Normal': _0x73b54a[_0x23c80e(0x60c)],
                    'a_Tangent0': _0x73b54a[_0x23c80e(0x614)],
                    'a_Texcoord0': _0x73b54a[_0x23c80e(0x616)],
                    'a_Texcoord1': _0x73b54a[_0x23c80e(0x60f)],
                    'a_BoneWeights': _0x73b54a['MESH_BLENDWEIGHT0'],
                    'a_BoneIndices': _0x73b54a[_0x23c80e(0x617)],
                    'a_WorldMat': _0x73b54a[_0x23c80e(0x604)],
                    'a_SimpleTextureParams': _0x73b54a[_0x23c80e(0x619)]
                }, _0x125afc = {
                    'u_Bones': _0x3a9f31[_0x23c80e(0x540)],
                    'u_MvpMatrix': _0x3a9f31[_0x23c80e(0x542)],
                    'u_WorldMat': _0x3a9f31[_0x23c80e(0x542)],
                    'u_LightmapScaleOffset': _0x3a9f31[_0x23c80e(0x542)],
                    'u_LightMap': _0x3a9f31[_0x23c80e(0x542)],
                    'u_LightMapDirection': _0x3a9f31[_0x23c80e(0x542)],
                    'u_SimpleAnimatorTexture': _0x3a9f31[_0x23c80e(0x542)],
                    'u_SimpleAnimatorParams': _0x3a9f31[_0x23c80e(0x542)],
                    'u_SimpleAnimatorTextureSize': _0x3a9f31[_0x23c80e(0x542)],
                    'u_ReflectCubeHDRParams': _0x3a9f31[_0x23c80e(0x542)],
                    'u_ReflectTexture': _0x3a9f31[_0x23c80e(0x542)],
                    'u_SpecCubeProbePosition': _0x3a9f31['PERIOD_SPRITE'],
                    'u_SpecCubeBoxMax': _0x3a9f31[_0x23c80e(0x542)],
                    'u_SpecCubeBoxMin': _0x3a9f31['PERIOD_SPRITE'],
                    'u_CameraPos': _0x3a9f31[_0x23c80e(0x7a6)],
                    'u_View': _0x3a9f31[_0x23c80e(0x7a6)],
                    'u_ProjectionParams': _0x3a9f31['PERIOD_CAMERA'],
                    'u_Viewport': _0x3a9f31[_0x23c80e(0x7a6)],
                    'u_ViewProjection': _0x3a9f31[_0x23c80e(0x7a6)],
                    'u_AlphaTestValue': _0x3a9f31[_0x23c80e(0x541)],
                    'u_AlbedoColor': _0x3a9f31[_0x23c80e(0x541)],
                    'u_EmissionColor': _0x3a9f31[_0x23c80e(0x541)],
                    'u_AlbedoTexture': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_NormalTexture': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_ParallaxTexture': _0x3a9f31[_0x23c80e(0x541)],
                    'u_OcclusionTexture': _0x3a9f31[_0x23c80e(0x541)],
                    'u_EmissionTexture': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_Smoothness': _0x3a9f31[_0x23c80e(0x541)],
                    'u_SmoothnessScale': _0x3a9f31[_0x23c80e(0x541)],
                    'u_occlusionStrength': _0x3a9f31[_0x23c80e(0x541)],
                    'u_NormalScale': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_ParallaxScale': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_TilingOffset': _0x3a9f31[_0x23c80e(0x541)],
                    'u_SpecGlossTexture': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_SpecularColor': _0x3a9f31[_0x23c80e(0x541)],
                    'u_AmbientColor': _0x3a9f31[_0x23c80e(0x543)],
                    'u_FogStart': _0x3a9f31[_0x23c80e(0x543)],
                    'u_FogRange': _0x3a9f31['PERIOD_SCENE'],
                    'u_FogColor': _0x3a9f31[_0x23c80e(0x543)],
                    'u_DirationLightCount': _0x3a9f31[_0x23c80e(0x543)],
                    'u_LightBuffer': _0x3a9f31[_0x23c80e(0x543)],
                    'u_LightClusterBuffer': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowBias': _0x3a9f31[_0x23c80e(0x543)],
                    'u_ShadowLightDirection': _0x3a9f31[_0x23c80e(0x543)],
                    'u_ShadowMap': _0x3a9f31[_0x23c80e(0x543)],
                    'u_ShadowParams': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowSplitSpheres': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowMatrices': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowMapSize': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotShadowMap': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotViewProjectMatrix': _0x3a9f31[_0x23c80e(0x543)],
                    'u_ShadowLightPosition': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHAr': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHAg': _0x3a9f31[_0x23c80e(0x543)],
                    'u_AmbientSHAb': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHBr': _0x3a9f31[_0x23c80e(0x543)],
                    'u_AmbientSHBg': _0x3a9f31[_0x23c80e(0x543)],
                    'u_AmbientSHBb': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHC': _0x3a9f31[_0x23c80e(0x543)],
                    'u_DirectionLight.direction': _0x3a9f31[_0x23c80e(0x543)],
                    'u_DirectionLight.color': _0x3a9f31[_0x23c80e(0x543)],
                    'u_PointLight.position': _0x3a9f31[_0x23c80e(0x543)],
                    'u_PointLight.range': _0x3a9f31[_0x23c80e(0x543)],
                    'u_PointLight.color': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotLight.position': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotLight.direction': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotLight.range': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotLight.spot': _0x3a9f31[_0x23c80e(0x543)],
                    'u_SpotLight.color': _0x3a9f31['PERIOD_SCENE']
                }, _0x4b47f7 = {
                    's_Cull': _0x3a9f31[_0x23c80e(0x536)],
                    's_Blend': _0x3a9f31[_0x23c80e(0xc87)],
                    's_BlendSrc': _0x3a9f31[_0x23c80e(0x7f1)],
                    's_BlendDst': _0x3a9f31[_0x23c80e(0x537)],
                    's_DepthTest': _0x3a9f31[_0x23c80e(0x53e)],
                    's_DepthWrite': _0x3a9f31['RENDER_STATE_DEPTH_WRITE']
                }, _0x584d9c = _0x3a9f31[_0x23c80e(0x207)](_0x23c80e(0xc81), _0xe5234, _0x125afc, !0x0, !0x0), _0x2f7399 = new _0x8750c3(_0xe5234, _0x125afc);
            _0x584d9c[_0x23c80e(0x534)](_0x2f7399), _0x2f7399[_0x23c80e(0xc7d)](_0x23c80e(0xc88), _0x23c80e(0xc89), _0x4b47f7, _0x23c80e(0x3e1)), _0x2f7399['addShaderPass']('#include\x20\x22ShadowCasterVS.glsl\x22\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20positionCS\x20=\x20\x20shadowCasterVertex();\x0a\x09gl_Position=remapGLPositionZ(positionCS);\x0a}', _0x23c80e(0xc8a), _0x4b47f7, _0x23c80e(0x975)), _0x2f7399['addShaderPass'](_0x45efea, _0x420443, _0x4b47f7, _0x23c80e(0x979));
        }
        get [_0x6027f5(0x70d)]() {
            var _0x4ee8d2 = _0x6027f5;
            return this[_0x4ee8d2(0x4e2)][_0x4ee8d2(0x4ae)](_0xe57706['SPECULARTEXTURE']);
        }
        set [_0x6027f5(0x70d)](_0x498fe7) {
            var _0x2f714b = _0x6027f5;
            _0x498fe7 ? this[_0x2f714b(0x4e2)][_0x2f714b(0x49a)](_0xe57706[_0x2f714b(0xc83)]) : this['_shaderValues'][_0x2f714b(0x49b)](_0xe57706[_0x2f714b(0xc83)]), this[_0x2f714b(0x4e2)]['setTexture'](_0xe57706[_0x2f714b(0x70e)], _0x498fe7);
        }
        get ['specularColor']() {
            var _0x2b65b0 = _0x6027f5;
            return this[_0x2b65b0(0x4e2)][_0x2b65b0(0x4a7)](_0xe57706[_0x2b65b0(0xc82)]);
        }
        set ['specularColor'](_0x5505a5) {
            var _0x4febe3 = _0x6027f5;
            this[_0x4febe3(0x4e2)]['setVector'](_0xe57706[_0x4febe3(0xc82)], _0x5505a5);
        }
        ['clone']() {
            var _0x52cf95 = new _0xe57706();
            return this['cloneTo'](_0x52cf95), _0x52cf95;
        }
    }
    _0xe57706[_0x6027f5(0x70e)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc8b)), _0xe57706[_0x6027f5(0xc82)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc8c));
    var _0x5979dd, _0x70f4ab, _0x413036;
    (_0x5979dd = _0x18be32[_0x6027f5(0xc8d)] || (_0x18be32[_0x6027f5(0xc8d)] = {}))[_0x5979dd[_0x6027f5(0xc8e)] = 0x0] = _0x6027f5(0xc8e), _0x5979dd[_0x5979dd[_0x6027f5(0xc80)] = 0x1] = _0x6027f5(0xc80);
    class _0x40d85b extends _0x5d5c8f {
        constructor() {
            var _0x24007d = _0x6027f5;
            super(), this[_0x24007d(0xc8f)] = 0x0, this[_0x24007d(0x6a9)](_0x24007d(0xc90)), this[_0x24007d(0x4e2)][_0x24007d(0x4a3)](_0x40d85b[_0x24007d(0xc91)], 0x0);
        }
        static [_0x6027f5(0x230)]() {
            var _0x1bcd18 = _0x6027f5;
            _0x40d85b['SHADERDEFINE_METALLICGLOSSTEXTURE'] = _0x3a9f31['getDefineByName'](_0x1bcd18(0xc92)), _0x40d85b[_0x1bcd18(0xc85)] = _0x3a9f31[_0x1bcd18(0x510)](_0x1bcd18(0xc86));
            var _0x1f4e6e = {
                    'a_Position': _0x73b54a[_0x1bcd18(0x615)],
                    'a_Normal': _0x73b54a[_0x1bcd18(0x60c)],
                    'a_Tangent0': _0x73b54a[_0x1bcd18(0x614)],
                    'a_Texcoord0': _0x73b54a[_0x1bcd18(0x616)],
                    'a_Texcoord1': _0x73b54a[_0x1bcd18(0x60f)],
                    'a_BoneWeights': _0x73b54a['MESH_BLENDWEIGHT0'],
                    'a_BoneIndices': _0x73b54a[_0x1bcd18(0x617)],
                    'a_WorldMat': _0x73b54a['MESH_WORLDMATRIX_ROW0'],
                    'a_SimpleTextureParams': _0x73b54a[_0x1bcd18(0x619)]
                }, _0x1ea056 = {
                    'u_Bones': _0x3a9f31[_0x1bcd18(0x540)],
                    'u_MvpMatrix': _0x3a9f31['PERIOD_SPRITE'],
                    'u_WorldMat': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_LightmapScaleOffset': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_LightMap': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_LightMapDirection': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_SimpleAnimatorTexture': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_SimpleAnimatorParams': _0x3a9f31['PERIOD_SPRITE'],
                    'u_SimpleAnimatorTextureSize': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_ReflectCubeHDRParams': _0x3a9f31['PERIOD_SPRITE'],
                    'u_ReflectTexture': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_SpecCubeProbePosition': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_SpecCubeBoxMax': _0x3a9f31[_0x1bcd18(0x542)],
                    'u_SpecCubeBoxMin': _0x3a9f31['PERIOD_SPRITE'],
                    'u_CameraPos': _0x3a9f31[_0x1bcd18(0x7a6)],
                    'u_View': _0x3a9f31[_0x1bcd18(0x7a6)],
                    'u_ProjectionParams': _0x3a9f31[_0x1bcd18(0x7a6)],
                    'u_Viewport': _0x3a9f31[_0x1bcd18(0x7a6)],
                    'u_ViewProjection': _0x3a9f31[_0x1bcd18(0x7a6)],
                    'u_AlphaTestValue': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_AlbedoColor': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_EmissionColor': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_AlbedoTexture': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_NormalTexture': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_ParallaxTexture': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_OcclusionTexture': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_EmissionTexture': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_Smoothness': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_SmoothnessScale': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_occlusionStrength': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_NormalScale': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_ParallaxScale': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_TilingOffset': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_MetallicGlossTexture': _0x3a9f31[_0x1bcd18(0x541)],
                    'u_Metallic': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_AmbientColor': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_FogStart': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_FogRange': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_FogColor': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_DirationLightCount': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_LightBuffer': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_LightClusterBuffer': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowBias': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowLightDirection': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowMap': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowParams': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowSplitSpheres': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowMatrices': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowMapSize': _0x3a9f31['PERIOD_SCENE'],
                    'u_SpotShadowMap': _0x3a9f31['PERIOD_SCENE'],
                    'u_SpotViewProjectMatrix': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_ShadowLightPosition': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_AmbientSHAr': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_AmbientSHAg': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_AmbientSHAb': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHBr': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_AmbientSHBg': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_AmbientSHBb': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHC': _0x3a9f31['PERIOD_SCENE'],
                    'u_DirectionLight.direction': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_DirectionLight.color': _0x3a9f31['PERIOD_SCENE'],
                    'u_PointLight.position': _0x3a9f31['PERIOD_SCENE'],
                    'u_PointLight.range': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_PointLight.color': _0x3a9f31['PERIOD_SCENE'],
                    'u_SpotLight.position': _0x3a9f31['PERIOD_SCENE'],
                    'u_SpotLight.direction': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_SpotLight.range': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_SpotLight.spot': _0x3a9f31[_0x1bcd18(0x543)],
                    'u_SpotLight.color': _0x3a9f31[_0x1bcd18(0x543)]
                }, _0x4f6419 = {
                    's_Cull': _0x3a9f31[_0x1bcd18(0x536)],
                    's_Blend': _0x3a9f31[_0x1bcd18(0xc87)],
                    's_BlendSrc': _0x3a9f31[_0x1bcd18(0x7f1)],
                    's_BlendDst': _0x3a9f31[_0x1bcd18(0x537)],
                    's_DepthTest': _0x3a9f31[_0x1bcd18(0x53e)],
                    's_DepthWrite': _0x3a9f31[_0x1bcd18(0x53f)]
                }, _0x1fcc39 = _0x3a9f31[_0x1bcd18(0x207)](_0x1bcd18(0xc90), _0x1f4e6e, _0x1ea056, !0x0, !0x0), _0x5f55f5 = new _0x8750c3(_0x1f4e6e, _0x1ea056);
            _0x1fcc39['addSubShader'](_0x5f55f5), _0x5f55f5[_0x1bcd18(0xc7d)](_0x1bcd18(0xc93), '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#include\x20\x22PBRFSInput.glsl\x22;\x0d\x0a#include\x20\x22LayaPBRBRDF.glsl\x22;\x0d\x0a#include\x20\x22GlobalIllumination.glsl\x22;\x0d\x0a#include\x20\x22PBRCore.glsl\x22;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09fragmentForward();\x0d\x0a}', _0x4f6419, _0x1bcd18(0x3e1)), _0x5f55f5[_0x1bcd18(0xc7d)](_0x1bcd18(0xc94), '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22ShadowCasterFS.glsl\x22\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_FragColor=shadowCasterFragment();\x0d\x0a}', _0x4f6419, _0x1bcd18(0x975)), _0x5f55f5[_0x1bcd18(0xc7d)](_0x45efea, _0x420443, _0x4f6419, _0x1bcd18(0x979));
        }
        get [_0x6027f5(0xc95)]() {
            var _0x9c6a0f = _0x6027f5;
            return this['_shaderValues'][_0x9c6a0f(0x4ae)](_0x40d85b[_0x9c6a0f(0xc92)]);
        }
        set [_0x6027f5(0xc95)](_0x1743ac) {
            var _0x2942c0 = _0x6027f5;
            _0x1743ac ? this[_0x2942c0(0x4e2)][_0x2942c0(0x49a)](_0x40d85b[_0x2942c0(0xc96)]) : this['_shaderValues']['removeDefine'](_0x40d85b[_0x2942c0(0xc96)]), this['_shaderValues'][_0x2942c0(0x4ac)](_0x40d85b['METALLICGLOSSTEXTURE'], _0x1743ac);
        }
        get ['metallic']() {
            var _0x22e64a = _0x6027f5;
            return this[_0x22e64a(0x4e2)][_0x22e64a(0x4a2)](_0x40d85b['METALLIC']);
        }
        set [_0x6027f5(0xc97)](_0x3cdde8) {
            var _0x46fd59 = _0x6027f5;
            this['_shaderValues']['setNumber'](_0x40d85b[_0x46fd59(0xc91)], Math[_0x46fd59(0x20c)](0x0, Math[_0x46fd59(0x212)](0x1, _0x3cdde8)));
        }
        get ['smoothnessSource']() {
            var _0x2d994d = _0x6027f5;
            return this[_0x2d994d(0xc8f)];
        }
        set [_0x6027f5(0xc98)](_0x5d7348) {
            var _0x57db5c = _0x6027f5;
            _0x5d7348 ? this[_0x57db5c(0x4e2)]['addDefine'](_0x40d85b[_0x57db5c(0xc85)]) : this[_0x57db5c(0x4e2)]['removeDefine'](_0x40d85b['SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA']), this[_0x57db5c(0xc8f)] = _0x5d7348;
        }
        [_0x6027f5(0x1fd)]() {
            var _0x118f34 = new _0x40d85b();
            return this['cloneTo'](_0x118f34), _0x118f34;
        }
    }
    _0x40d85b['METALLICGLOSSTEXTURE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc99)), _0x40d85b[_0x6027f5(0xc91)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xc9a));
    class _0x4842a3 extends _0xe2444c {
        constructor() {
            var _0x1201b9 = _0x6027f5;
            super(), this[_0x1201b9(0x6a9)](_0x1201b9(0xc17)), this['tintColor'] = new _0x5b8e4e(0.5, 0.5, 0.5, 0.5), this['exposure'] = 0x1, this[_0x1201b9(0x5a4)] = 0x0;
        }
        static [_0x6027f5(0x6b5)]() {
        }
        get [_0x6027f5(0xc9b)]() {
            var _0x1277ab = _0x6027f5;
            return this[_0x1277ab(0x4e2)]['getVector'](_0x4842a3[_0x1277ab(0x726)]);
        }
        set [_0x6027f5(0xc9b)](_0x2bd935) {
            var _0x52f92f = _0x6027f5;
            this[_0x52f92f(0x4e2)][_0x52f92f(0x4a8)](_0x4842a3[_0x52f92f(0x726)], _0x2bd935);
        }
        get [_0x6027f5(0xc9c)]() {
            var _0x2ef3c8 = _0x6027f5;
            return this[_0x2ef3c8(0x4e2)][_0x2ef3c8(0x4a2)](_0x4842a3[_0x2ef3c8(0xc9d)]);
        }
        set ['exposure'](_0x5a3f45) {
            var _0x5901ab = _0x6027f5;
            this[_0x5901ab(0x4e2)][_0x5901ab(0x4a3)](_0x4842a3['EXPOSURE'], _0x5a3f45);
        }
        get [_0x6027f5(0x5a4)]() {
            var _0x388578 = _0x6027f5;
            return this['_shaderValues']['getNumber'](_0x4842a3[_0x388578(0xc9e)]);
        }
        set [_0x6027f5(0x5a4)](_0x554196) {
            var _0x3882f1 = _0x6027f5;
            this['_shaderValues'][_0x3882f1(0x4a3)](_0x4842a3[_0x3882f1(0xc9e)], _0x554196);
        }
        get ['textureCube']() {
            var _0x5912b7 = _0x6027f5;
            return this[_0x5912b7(0x4e2)][_0x5912b7(0x4ae)](_0x4842a3[_0x5912b7(0xa33)]);
        }
        set [_0x6027f5(0xc9f)](_0x3579d7) {
            var _0x3bbe53 = _0x6027f5;
            this[_0x3bbe53(0x4e2)][_0x3bbe53(0x4ac)](_0x4842a3[_0x3bbe53(0xa33)], _0x3579d7);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x3c25f2 = _0x6027f5, _0x2d73ad = new _0x4842a3();
            return this[_0x3c25f2(0x1fc)](_0x2d73ad), _0x2d73ad;
        }
    }
    _0x4842a3[_0x6027f5(0x726)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xca0)), _0x4842a3[_0x6027f5(0xc9d)] = _0x3a9f31[_0x6027f5(0x553)]('u_Exposure'), _0x4842a3[_0x6027f5(0xc9e)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xca1)), _0x4842a3['TEXTURECUBE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xca2));
    class _0xdfb891 extends _0xe2444c {
        constructor() {
            var _0x462ee3 = _0x6027f5;
            super(), this[_0x462ee3(0x6a9)](_0x462ee3(0xca3)), this[_0x462ee3(0xca4)] = _0xdfb891[_0x462ee3(0xca5)], this['sunSize'] = 0.04, this[_0x462ee3(0xca6)] = 0x5, this[_0x462ee3(0xca7)] = 0x1, this[_0x462ee3(0xca8)] = new _0x5b8e4e(0.5, 0.5, 0.5, 0x1), this[_0x462ee3(0xca9)] = new _0x5b8e4e(0.369, 0.349, 0.341, 0x1), this[_0x462ee3(0xc9c)] = 1.3;
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x4dc053 = _0x6027f5;
            _0xdfb891[_0x4dc053(0xcaa)] = _0x3a9f31[_0x4dc053(0x510)](_0x4dc053(0xca5)), _0xdfb891[_0x4dc053(0xcab)] = _0x3a9f31[_0x4dc053(0x510)]('SUN_SIMPLE');
        }
        get [_0x6027f5(0xca4)]() {
            return this['_sunDisk'];
        }
        set [_0x6027f5(0xca4)](_0x342abc) {
            var _0x187257 = _0x6027f5;
            switch (_0x342abc) {
            case _0xdfb891['SUN_HIGH_QUALITY']:
                this['_shaderValues'][_0x187257(0x49b)](_0xdfb891['SHADERDEFINE_SUN_SIMPLE']), this[_0x187257(0x4e2)][_0x187257(0x49a)](_0xdfb891[_0x187257(0xcaa)]);
                break;
            case _0xdfb891[_0x187257(0xcac)]:
                this[_0x187257(0x4e2)][_0x187257(0x49b)](_0xdfb891[_0x187257(0xcaa)]), this[_0x187257(0x4e2)][_0x187257(0x49a)](_0xdfb891[_0x187257(0xcab)]);
                break;
            case _0xdfb891[_0x187257(0xcad)]:
                this['_shaderValues'][_0x187257(0x49b)](_0xdfb891[_0x187257(0xcaa)]), this['_shaderValues']['removeDefine'](_0xdfb891[_0x187257(0xcab)]);
                break;
            default:
                throw _0x187257(0xcae);
            }
            this['_sunDisk'] = _0x342abc;
        }
        get [_0x6027f5(0xcaf)]() {
            var _0x23b556 = _0x6027f5;
            return this['_shaderValues'][_0x23b556(0x4a2)](_0xdfb891[_0x23b556(0xcb0)]);
        }
        set ['sunSize'](_0x374e6e) {
            var _0xfc480c = _0x6027f5;
            _0x374e6e = Math[_0xfc480c(0x212)](Math['max'](0x0, _0x374e6e), 0x1), this[_0xfc480c(0x4e2)]['setNumber'](_0xdfb891[_0xfc480c(0xcb0)], _0x374e6e);
        }
        get ['sunSizeConvergence']() {
            var _0x3a1669 = _0x6027f5;
            return this[_0x3a1669(0x4e2)][_0x3a1669(0x4a2)](_0xdfb891[_0x3a1669(0xcb1)]);
        }
        set ['sunSizeConvergence'](_0xf9c8ae) {
            var _0x2b898b = _0x6027f5;
            _0xf9c8ae = Math[_0x2b898b(0x212)](Math[_0x2b898b(0x20c)](0x0, _0xf9c8ae), 0x14), this[_0x2b898b(0x4e2)][_0x2b898b(0x4a3)](_0xdfb891[_0x2b898b(0xcb1)], _0xf9c8ae);
        }
        get [_0x6027f5(0xca7)]() {
            var _0x5bb604 = _0x6027f5;
            return this[_0x5bb604(0x4e2)][_0x5bb604(0x4a2)](_0xdfb891['ATMOSPHERETHICKNESS']);
        }
        set [_0x6027f5(0xca7)](_0x45530a) {
            var _0x44811d = _0x6027f5;
            _0x45530a = Math['min'](Math[_0x44811d(0x20c)](0x0, _0x45530a), 0x5), this[_0x44811d(0x4e2)][_0x44811d(0x4a3)](_0xdfb891['ATMOSPHERETHICKNESS'], _0x45530a);
        }
        get [_0x6027f5(0xca8)]() {
            var _0x4d58d5 = _0x6027f5;
            return this[_0x4d58d5(0x4e2)]['getVector'](_0xdfb891[_0x4d58d5(0xcb2)]);
        }
        set ['skyTint'](_0x3d3734) {
            var _0x3d8e20 = _0x6027f5;
            this[_0x3d8e20(0x4e2)][_0x3d8e20(0x4a8)](_0xdfb891[_0x3d8e20(0xcb2)], _0x3d3734);
        }
        get [_0x6027f5(0xca9)]() {
            var _0x5e5fce = _0x6027f5;
            return this[_0x5e5fce(0x4e2)][_0x5e5fce(0x4a7)](_0xdfb891[_0x5e5fce(0xcb3)]);
        }
        set ['groundTint'](_0x4ff9c4) {
            var _0xba23c2 = _0x6027f5;
            this[_0xba23c2(0x4e2)][_0xba23c2(0x4a8)](_0xdfb891[_0xba23c2(0xcb3)], _0x4ff9c4);
        }
        get [_0x6027f5(0xc9c)]() {
            var _0x388b64 = _0x6027f5;
            return this[_0x388b64(0x4e2)]['getNumber'](_0xdfb891['EXPOSURE']);
        }
        set [_0x6027f5(0xc9c)](_0xa7ea79) {
            var _0x549802 = _0x6027f5;
            _0xa7ea79 = Math[_0x549802(0x212)](Math[_0x549802(0x20c)](0x0, _0xa7ea79), 0x8), this['_shaderValues'][_0x549802(0x4a3)](_0xdfb891[_0x549802(0xc9d)], _0xa7ea79);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1ce077 = new _0xdfb891();
            return this['cloneTo'](_0x1ce077), _0x1ce077;
        }
    }
    _0xdfb891[_0x6027f5(0xcad)] = 0x0, _0xdfb891['SUN_SIMPLE'] = 0x1, _0xdfb891['SUN_HIGH_QUALITY'] = 0x2, _0xdfb891[_0x6027f5(0xcb0)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xcb4)), _0xdfb891['SUNSIZECONVERGENCE'] = _0x3a9f31[_0x6027f5(0x553)]('u_SunSizeConvergence'), _0xdfb891[_0x6027f5(0xcb5)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xcb6)), _0xdfb891[_0x6027f5(0xcb2)] = _0x3a9f31[_0x6027f5(0x553)]('u_SkyTint'), _0xdfb891[_0x6027f5(0xcb3)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xcb7)), _0xdfb891[_0x6027f5(0xc9d)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xcb8));
    class _0x34269a extends _0xe2444c {
        constructor() {
            var _0x4fc4b9 = _0x6027f5;
            super(), this[_0x4fc4b9(0x6a9)](_0x4fc4b9(0xcb9)), this[_0x4fc4b9(0x4e2)][_0x4fc4b9(0x4a8)](_0x34269a['ALBEDOCOLOR'], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), this[_0x4fc4b9(0x4e2)]['setVector'](_0x34269a[_0x4fc4b9(0x6f2)], new _0x5b8e4e(0x1, 0x1, 0x0, 0x0)), this[_0x4fc4b9(0x730)] = _0x34269a[_0x4fc4b9(0x6f9)], this[_0x4fc4b9(0x6d6)] = 0x1;
        }
        static ['__initDefine__']() {
            var _0x34d2f8 = _0x6027f5;
            _0x34269a[_0x34d2f8(0x76b)] = _0x3a9f31[_0x34d2f8(0x510)]('ALBEDOTEXTURE'), _0x34269a['SHADERDEFINE_ENABLEVERTEXCOLOR'] = _0x3a9f31[_0x34d2f8(0x510)](_0x34d2f8(0x6e0));
        }
        get [_0x6027f5(0x6e4)]() {
            return this['albedoColor']['x'];
        }
        set ['_ColorR'](_0x3015ed) {
            var _0x14b7b0 = _0x6027f5;
            let _0x20038d = this[_0x14b7b0(0x6e5)];
            _0x20038d['x'] = _0x3015ed, this[_0x14b7b0(0x6e5)] = _0x20038d;
        }
        get ['_ColorG']() {
            var _0x168ee3 = _0x6027f5;
            return this[_0x168ee3(0x6e5)]['y'];
        }
        set [_0x6027f5(0x6e6)](_0x88291f) {
            var _0x1c9f39 = _0x6027f5;
            let _0x420e50 = this[_0x1c9f39(0x6e5)];
            _0x420e50['y'] = _0x88291f, this[_0x1c9f39(0x6e5)] = _0x420e50;
        }
        get ['_ColorB']() {
            var _0x5dbdcc = _0x6027f5;
            return this[_0x5dbdcc(0x6e5)]['z'];
        }
        set [_0x6027f5(0x6e7)](_0x5bd643) {
            var _0x4da50d = _0x6027f5;
            let _0x13f38a = this[_0x4da50d(0x6e5)];
            _0x13f38a['z'] = _0x5bd643, this['albedoColor'] = _0x13f38a;
        }
        get [_0x6027f5(0x6e8)]() {
            return this['albedoColor']['w'];
        }
        set ['_ColorA'](_0x41802b) {
            var _0x1cb194 = _0x6027f5;
            let _0x2d0569 = this[_0x1cb194(0x6e5)];
            _0x2d0569['w'] = _0x41802b, this[_0x1cb194(0x6e5)] = _0x2d0569;
        }
        get [_0x6027f5(0x6e9)]() {
            var _0x21dc89 = _0x6027f5;
            return this[_0x21dc89(0x4e2)][_0x21dc89(0x4a7)](_0x34269a[_0x21dc89(0x6d7)]);
        }
        set [_0x6027f5(0x6e9)](_0x2c24fa) {
            var _0x3b34f7 = _0x6027f5;
            this[_0x3b34f7(0x6e5)] = _0x2c24fa;
        }
        get ['_AlbedoIntensity']() {
            var _0x5d6b75 = _0x6027f5;
            return this[_0x5d6b75(0xcba)];
        }
        set ['_AlbedoIntensity'](_0x250414) {
            var _0x79e80f = _0x6027f5;
            if (this[_0x79e80f(0xcba)] !== _0x250414) {
                var _0x5ed7bd = this[_0x79e80f(0x4e2)][_0x79e80f(0x4a7)](_0x34269a[_0x79e80f(0x6d7)]);
                _0x5b8e4e['scale'](this[_0x79e80f(0x6e5)], _0x250414, _0x5ed7bd), this['_albedoIntensity'] = _0x250414, this[_0x79e80f(0x4e2)][_0x79e80f(0x4a8)](_0x34269a['ALBEDOCOLOR'], _0x5ed7bd);
            }
        }
        get [_0x6027f5(0x6f1)]() {
            var _0x534c9f = _0x6027f5;
            return this['_shaderValues'][_0x534c9f(0x4a7)](_0x34269a[_0x534c9f(0x6f2)])['x'];
        }
        set [_0x6027f5(0x6f1)](_0x30e30d) {
            var _0x391fca = _0x6027f5, _0x13d68c = this[_0x391fca(0x4e2)][_0x391fca(0x4a7)](_0x34269a['TILINGOFFSET']);
            _0x13d68c['x'] = _0x30e30d, this[_0x391fca(0x6f3)] = _0x13d68c;
        }
        get [_0x6027f5(0x6f4)]() {
            var _0x36764e = _0x6027f5;
            return this[_0x36764e(0x4e2)]['getVector'](_0x34269a[_0x36764e(0x6f2)])['y'];
        }
        set [_0x6027f5(0x6f4)](_0x3f879f) {
            var _0x51031d = _0x6027f5, _0xf8fe8d = this[_0x51031d(0x4e2)][_0x51031d(0x4a7)](_0x34269a['TILINGOFFSET']);
            _0xf8fe8d['y'] = _0x3f879f, this['tilingOffset'] = _0xf8fe8d;
        }
        get ['_MainTex_STZ']() {
            var _0x4435b3 = _0x6027f5;
            return this[_0x4435b3(0x4e2)][_0x4435b3(0x4a7)](_0x34269a[_0x4435b3(0x6f2)])['z'];
        }
        set [_0x6027f5(0x6f5)](_0x26b582) {
            var _0x26f8e2 = _0x6027f5, _0x4bf6ad = this[_0x26f8e2(0x4e2)][_0x26f8e2(0x4a7)](_0x34269a[_0x26f8e2(0x6f2)]);
            _0x4bf6ad['z'] = _0x26b582, this[_0x26f8e2(0x6f3)] = _0x4bf6ad;
        }
        get [_0x6027f5(0x6f6)]() {
            var _0x1a6c81 = _0x6027f5;
            return this[_0x1a6c81(0x4e2)][_0x1a6c81(0x4a7)](_0x34269a[_0x1a6c81(0x6f2)])['w'];
        }
        set [_0x6027f5(0x6f6)](_0x138043) {
            var _0x15ca67 = _0x6027f5, _0x3f3028 = this[_0x15ca67(0x4e2)]['getVector'](_0x34269a[_0x15ca67(0x6f2)]);
            _0x3f3028['w'] = _0x138043, this[_0x15ca67(0x6f3)] = _0x3f3028;
        }
        get [_0x6027f5(0x6f7)]() {
            var _0x1448d1 = _0x6027f5;
            return this[_0x1448d1(0x4e2)][_0x1448d1(0x4a7)](_0x34269a[_0x1448d1(0x6f2)]);
        }
        set [_0x6027f5(0x6f7)](_0x82928a) {
            var _0x2df665 = _0x6027f5;
            this[_0x2df665(0x6f3)] = _0x82928a;
        }
        get [_0x6027f5(0x6f8)]() {
            var _0x2fed3a = _0x6027f5;
            return this[_0x2fed3a(0x6a1)];
        }
        set [_0x6027f5(0x6f8)](_0x2a43cc) {
            var _0x18379b = _0x6027f5;
            this[_0x18379b(0x6a1)] = _0x2a43cc;
        }
        get [_0x6027f5(0xcbb)]() {
            var _0x414095 = _0x6027f5;
            return this[_0x414095(0x6e4)];
        }
        set ['albedoColorR'](_0x2eee5d) {
            this['_ColorR'] = _0x2eee5d;
        }
        get [_0x6027f5(0x702)]() {
            var _0x5ebac7 = _0x6027f5;
            return this[_0x5ebac7(0x6e6)];
        }
        set [_0x6027f5(0x702)](_0x513e7a) {
            this['_ColorG'] = _0x513e7a;
        }
        get [_0x6027f5(0x703)]() {
            var _0x3a7727 = _0x6027f5;
            return this[_0x3a7727(0x6e7)];
        }
        set [_0x6027f5(0x703)](_0x5db351) {
            var _0x4f83c3 = _0x6027f5;
            this[_0x4f83c3(0x6e7)] = _0x5db351;
        }
        get ['albedoColorA']() {
            var _0x216cdc = _0x6027f5;
            return this[_0x216cdc(0x6e8)];
        }
        set ['albedoColorA'](_0x5b1040) {
            var _0x36381d = _0x6027f5;
            this[_0x36381d(0x6e8)] = _0x5b1040;
        }
        get [_0x6027f5(0x6e5)]() {
            var _0x2330c9 = _0x6027f5;
            return this[_0x2330c9(0x4e2)][_0x2330c9(0x4a7)](_0x34269a[_0x2330c9(0x6d7)]);
        }
        set [_0x6027f5(0x6e5)](_0x138745) {
            var _0x2c2a73 = _0x6027f5, _0x10643f = this[_0x2c2a73(0x4e2)][_0x2c2a73(0x4a7)](_0x34269a['ALBEDOCOLOR']);
            _0x5b8e4e[_0x2c2a73(0x1f9)](_0x138745, this['_albedoIntensity'], _0x10643f), this['_shaderValues']['setVector'](_0x34269a[_0x2c2a73(0x6d7)], _0x10643f);
        }
        get [_0x6027f5(0x6d6)]() {
            var _0xecda60 = _0x6027f5;
            return this[_0xecda60(0xcba)];
        }
        set ['albedoIntensity'](_0x34448f) {
            var _0xe319f5 = _0x6027f5;
            this[_0xe319f5(0xcbc)] = _0x34448f;
        }
        get ['albedoTexture']() {
            var _0x4be60e = _0x6027f5;
            return this['_shaderValues']['getTexture'](_0x34269a[_0x4be60e(0x70a)]);
        }
        set [_0x6027f5(0x775)](_0x5dd7dc) {
            var _0x46550d = _0x6027f5;
            _0x5dd7dc ? this['_shaderValues'][_0x46550d(0x49a)](_0x34269a[_0x46550d(0x76b)]) : this[_0x46550d(0x4e2)]['removeDefine'](_0x34269a['SHADERDEFINE_ALBEDOTEXTURE']), this[_0x46550d(0x4e2)][_0x46550d(0x4ac)](_0x34269a[_0x46550d(0x70a)], _0x5dd7dc);
        }
        get [_0x6027f5(0x6ff)]() {
            return this['_MainTex_STX'];
        }
        set ['tilingOffsetX'](_0x103d4f) {
            var _0x1cd9e1 = _0x6027f5;
            this[_0x1cd9e1(0x6f1)] = _0x103d4f;
        }
        get [_0x6027f5(0x738)]() {
            var _0x4a63ff = _0x6027f5;
            return this[_0x4a63ff(0x6f4)];
        }
        set [_0x6027f5(0x738)](_0x56d5f3) {
            this['_MainTex_STY'] = _0x56d5f3;
        }
        get [_0x6027f5(0x700)]() {
            var _0x178ed4 = _0x6027f5;
            return this[_0x178ed4(0x6f5)];
        }
        set ['tilingOffsetZ'](_0x16591e) {
            var _0x3ce31d = _0x6027f5;
            this[_0x3ce31d(0x6f5)] = _0x16591e;
        }
        get [_0x6027f5(0x701)]() {
            var _0x6a8d0a = _0x6027f5;
            return this[_0x6a8d0a(0x6f6)];
        }
        set [_0x6027f5(0x701)](_0x2ff70e) {
            var _0xea030 = _0x6027f5;
            this[_0xea030(0x6f6)] = _0x2ff70e;
        }
        get ['tilingOffset']() {
            var _0x4a8029 = _0x6027f5;
            return this[_0x4a8029(0x4e2)][_0x4a8029(0x4a7)](_0x34269a[_0x4a8029(0x6f2)]);
        }
        set [_0x6027f5(0x6f3)](_0x148351) {
            var _0x3f8e3c = _0x6027f5;
            _0x148351 ? this[_0x3f8e3c(0x4e2)][_0x3f8e3c(0x4a8)](_0x34269a['TILINGOFFSET'], _0x148351) : this['_shaderValues'][_0x3f8e3c(0x4a7)](_0x34269a[_0x3f8e3c(0x6f2)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        get [_0x6027f5(0x6fe)]() {
            var _0x1d5cfe = _0x6027f5;
            return this[_0x1d5cfe(0x4e2)][_0x1d5cfe(0x49c)](_0x34269a['SHADERDEFINE_ENABLEVERTEXCOLOR']);
        }
        set ['enableVertexColor'](_0x3691ba) {
            var _0x2d355a = _0x6027f5;
            _0x3691ba ? this[_0x2d355a(0x4e2)][_0x2d355a(0x49a)](_0x34269a['SHADERDEFINE_ENABLEVERTEXCOLOR']) : this[_0x2d355a(0x4e2)][_0x2d355a(0x49b)](_0x34269a[_0x2d355a(0x6df)]);
        }
        set ['renderMode'](_0x2e1dd1) {
            var _0x5b8f34 = _0x6027f5;
            switch (_0x2e1dd1) {
            case _0x34269a['RENDERMODE_OPAQUE']:
                this[_0x5b8f34(0x68c)] = !0x1, this['renderQueue'] = _0xe2444c[_0x5b8f34(0x68b)], this['depthWrite'] = !0x0, this[_0x5b8f34(0x697)] = _0x47a097[_0x5b8f34(0x6b7)], this[_0x5b8f34(0x696)] = _0x47a097[_0x5b8f34(0x6b8)], this[_0x5b8f34(0x698)] = _0x47a097['DEPTHTEST_LESS'];
                break;
            case _0x34269a[_0x5b8f34(0x6fb)]:
                this[_0x5b8f34(0x68a)] = _0xe2444c['RENDERQUEUE_ALPHATEST'], this[_0x5b8f34(0x68c)] = !0x0, this[_0x5b8f34(0x699)] = !0x0, this[_0x5b8f34(0x697)] = _0x47a097['CULL_BACK'], this[_0x5b8f34(0x696)] = _0x47a097[_0x5b8f34(0x6b8)], this['depthTest'] = _0x47a097[_0x5b8f34(0x6fa)];
                break;
            case _0x34269a[_0x5b8f34(0x71b)]:
                this[_0x5b8f34(0x68a)] = _0xe2444c[_0x5b8f34(0x6ad)], this[_0x5b8f34(0x68c)] = !0x1, this['depthWrite'] = !0x1, this[_0x5b8f34(0x697)] = _0x47a097[_0x5b8f34(0x6b7)], this[_0x5b8f34(0x696)] = _0x47a097[_0x5b8f34(0x6c7)], this['blendSrc'] = _0x47a097[_0x5b8f34(0x6cc)], this[_0x5b8f34(0x69c)] = _0x47a097[_0x5b8f34(0x6fc)], this[_0x5b8f34(0x698)] = _0x47a097[_0x5b8f34(0x6fa)];
                break;
            default:
                throw new Error(_0x5b8f34(0xcbd));
            }
        }
        [_0x6027f5(0x1fd)]() {
            var _0x3ea3aa = _0x6027f5, _0x458dbe = new _0x34269a();
            return this[_0x3ea3aa(0x1fc)](_0x458dbe), _0x458dbe;
        }
    }
    _0x34269a[_0x6027f5(0x6f9)] = 0x0, _0x34269a[_0x6027f5(0x6fb)] = 0x1, _0x34269a['RENDERMODE_TRANSPARENT'] = 0x2, _0x34269a['RENDERMODE_ADDTIVE'] = 0x3, _0x34269a[_0x6027f5(0x70a)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x739)), _0x34269a[_0x6027f5(0x6d7)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x73a)), _0x34269a[_0x6027f5(0x6f2)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x73b));
    class _0x9bc6bd extends _0xe2444c {
        constructor() {
            var _0x380b66 = _0x6027f5;
            super(), this[_0x380b66(0x6a9)]('WaterPrimary'), this['_shaderValues'][_0x380b66(0x4a8)](_0x9bc6bd['HORIZONCOLOR'], new _0x5b8e4e(0.172, 0.463, 0.435, 0x0)), this[_0x380b66(0x4e2)][_0x380b66(0x4a3)](_0x9bc6bd[_0x380b66(0xcbe)], 0.15), this[_0x380b66(0x4e2)]['setVector'](_0x9bc6bd[_0x380b66(0xcbf)], new _0x5b8e4e(0x13, 0x9, -0x10, -0x7));
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x489c5d = _0x6027f5;
            _0x9bc6bd[_0x489c5d(0x728)] = _0x3a9f31[_0x489c5d(0x510)]('MAINTEXTURE'), _0x9bc6bd[_0x489c5d(0x776)] = _0x3a9f31[_0x489c5d(0x510)](_0x489c5d(0x70b));
        }
        get [_0x6027f5(0xcc0)]() {
            var _0xc74ffa = _0x6027f5;
            return this[_0xc74ffa(0x4e2)][_0xc74ffa(0x4a7)](_0x9bc6bd[_0xc74ffa(0xcc1)]);
        }
        set ['horizonColor'](_0x4079ec) {
            var _0x3d4445 = _0x6027f5;
            this[_0x3d4445(0x4e2)]['setVector'](_0x9bc6bd[_0x3d4445(0xcc1)], _0x4079ec);
        }
        get [_0x6027f5(0xcc2)]() {
            var _0x6642b = _0x6027f5;
            return this[_0x6642b(0x4e2)][_0x6642b(0x4ae)](_0x9bc6bd['MAINTEXTURE']);
        }
        set [_0x6027f5(0xcc2)](_0x5600f4) {
            var _0x97d877 = _0x6027f5;
            _0x5600f4 ? this['_shaderValues'][_0x97d877(0x49a)](_0x9bc6bd[_0x97d877(0x728)]) : this[_0x97d877(0x4e2)][_0x97d877(0x49b)](_0x9bc6bd['SHADERDEFINE_MAINTEXTURE']), this[_0x97d877(0x4e2)][_0x97d877(0x4ac)](_0x9bc6bd[_0x97d877(0x737)], _0x5600f4);
        }
        get [_0x6027f5(0x70c)]() {
            var _0x322fc = _0x6027f5;
            return this[_0x322fc(0x4e2)]['getTexture'](_0x9bc6bd['NORMALTEXTURE']);
        }
        set ['normalTexture'](_0x5a3bf7) {
            var _0x20a8c9 = _0x6027f5;
            _0x5a3bf7 ? this[_0x20a8c9(0x4e2)][_0x20a8c9(0x49a)](_0x9bc6bd[_0x20a8c9(0x776)]) : this[_0x20a8c9(0x4e2)]['removeDefine'](_0x9bc6bd[_0x20a8c9(0x776)]), this[_0x20a8c9(0x4e2)][_0x20a8c9(0x4ac)](_0x9bc6bd[_0x20a8c9(0x70b)], _0x5a3bf7);
        }
        get [_0x6027f5(0xcc3)]() {
            var _0x136491 = _0x6027f5;
            return this[_0x136491(0x4e2)][_0x136491(0x4a2)](_0x9bc6bd[_0x136491(0xcbe)]);
        }
        set [_0x6027f5(0xcc3)](_0x4a8af4) {
            var _0x44c298 = _0x6027f5;
            this[_0x44c298(0x4e2)][_0x44c298(0x4a3)](_0x9bc6bd[_0x44c298(0xcbe)], _0x4a8af4);
        }
        get [_0x6027f5(0xcc4)]() {
            var _0x510808 = _0x6027f5;
            return this[_0x510808(0x4e2)]['getVector'](_0x9bc6bd[_0x510808(0xcbf)]);
        }
        set [_0x6027f5(0xcc4)](_0x5f5445) {
            var _0x2cd295 = _0x6027f5;
            this[_0x2cd295(0x4e2)][_0x2cd295(0x4a8)](_0x9bc6bd['WAVESPEED'], _0x5f5445);
        }
        ['clone']() {
            var _0x1d2bf7 = new _0x9bc6bd();
            return this['cloneTo'](_0x1d2bf7), _0x1d2bf7;
        }
    }
    _0x9bc6bd[_0x6027f5(0xcc1)] = _0x3a9f31[_0x6027f5(0x553)]('u_HorizonColor'), _0x9bc6bd[_0x6027f5(0x737)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xcc5)), _0x9bc6bd[_0x6027f5(0x70b)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x71d)), _0x9bc6bd[_0x6027f5(0xcbe)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xcc6)), _0x9bc6bd[_0x6027f5(0xcbf)] = _0x3a9f31['propertyNameToID']('u_WaveSpeed');
    class _0x5b1dcc extends _0x40d4de {
        constructor(_0x2a8932) {
            var _0x3e416e = _0x6027f5;
            super(_0x2a8932), this['_revertStaticBatchDefineUV1'] = !0x1, this[_0x3e416e(0x5d7)] = new _0x6b4d98();
        }
        [_0x6027f5(0xcc7)]() {
            return new _0x2057f1();
        }
        ['_onMeshChange'](_0x3e9f7e) {
            var _0x180583 = _0x6027f5;
            if (_0x3e9f7e) {
                var _0x32e85c = _0x3e9f7e['subMeshCount'];
                this['_renderElements'][_0x180583(0x205)] = _0x32e85c;
                for (var _0x30f76e = 0x0; _0x30f76e < _0x32e85c; _0x30f76e++) {
                    var _0x13178 = this[_0x180583(0x600)][_0x30f76e];
                    if (!_0x13178) {
                        var _0x523025 = this[_0x180583(0xb03)][_0x30f76e];
                        (_0x13178 = this['_renderElements'][_0x30f76e] = this[_0x180583(0xcc7)]())['setTransform'](this[_0x180583(0x3dc)][_0x180583(0x3d5)]), _0x13178[_0x180583(0x4ff)] = this, _0x13178[_0x180583(0x8d5)] = _0x523025 || _0x3c2eb1[_0x180583(0xb27)];
                    }
                    _0x13178[_0x180583(0xa9e)](_0x3e9f7e[_0x180583(0xcc8)](_0x30f76e));
                }
            } else
                this['_renderElements'][_0x180583(0x205)] = 0x0;
            this[_0x180583(0xb06)] = !0x0;
        }
        ['_calculateBoundingBox']() {
            var _0x1a838f = _0x6027f5, _0x42b635 = this[_0x1a838f(0x3dc)]['meshFilter'][_0x1a838f(0xad0)];
            if (_0x42b635) {
                var _0x346e5b = this[_0x1a838f(0x3dc)][_0x1a838f(0x3d6)][_0x1a838f(0x3d8)];
                _0x42b635['bounds'][_0x1a838f(0xb1f)](_0x346e5b, this['_bounds']);
            }
        }
        [_0x6027f5(0x818)](_0x1f1bb9, _0x5519ff) {
            var _0x13c7a2 = _0x6027f5;
            return !_0x1f1bb9 || _0x1f1bb9[_0x13c7a2(0xcc9)](this[_0x13c7a2(0x812)]['_getBoundBox']());
        }
        [_0x6027f5(0x5f6)](_0x55e7cb, _0x5168f8) {
            var _0x180678 = _0x6027f5;
            this[_0x180678(0xb14)]();
            var _0x1032c3 = _0x55e7cb[_0x180678(0x5f3)];
            switch (_0x1032c3[_0x180678(0x5f4)]) {
            case _0x50feff[_0x180678(0x5fe)]:
                this[_0x180678(0x4e2)]['setMatrix4x4'](_0x44a154['WORLDMATRIX'], _0x5168f8[_0x180678(0x3d8)]);
                break;
            case _0x50feff[_0x180678(0xa95)]:
                _0x5168f8 ? this['_shaderValues'][_0x180678(0x4aa)](_0x44a154[_0x180678(0x5d4)], _0x5168f8[_0x180678(0x3d8)]) : this[_0x180678(0x4e2)]['setMatrix4x4'](_0x44a154[_0x180678(0x5d4)], _0x6b4d98['DEFAULT']), this['_shaderValues']['hasDefine'](_0x2553d1[_0x180678(0xcca)]) ? this['_revertStaticBatchDefineUV1'] = !0x1 : (this[_0x180678(0x4e2)][_0x180678(0x49a)](_0x2553d1[_0x180678(0xcca)]), this['_revertStaticBatchDefineUV1'] = !0x0), this[_0x180678(0x4e2)]['setVector'](_0x221092[_0x180678(0xa78)], _0x40d4de[_0x180678(0xb1d)]);
                break;
            case _0x50feff[_0x180678(0xa96)]:
                this['_shaderValues'][_0x180678(0x4aa)](_0x44a154['WORLDMATRIX'], _0x6b4d98['DEFAULT']);
                break;
            case _0x50feff[_0x180678(0xa93)]:
                for (var _0x3461f4 = _0x4da149[_0x180678(0x304)][_0x180678(0xa84)], _0x3cd1cf = _0x1032c3['instanceBatchElementList'], _0x438868 = _0x3cd1cf[_0x180678(0x1fe)], _0x303c1b = _0x3cd1cf['length'], _0x7a4558 = 0x0; _0x7a4558 < _0x303c1b; _0x7a4558++)
                    _0x3461f4[_0x180678(0x31f)](_0x438868[_0x7a4558][_0x180678(0x3d5)][_0x180678(0x3d8)][_0x180678(0x1fe)], 0x10 * _0x7a4558);
                var _0x21ea9f = _0x4da149[_0x180678(0x304)]['instanceWorldMatrixBuffer'];
                _0x21ea9f[_0x180678(0x62a)](), _0x21ea9f[_0x180678(0x45d)](_0x3461f4[_0x180678(0x454)], 0x0, 0x0, 0x10 * _0x303c1b * 0x4), this[_0x180678(0x4e2)][_0x180678(0x49a)](_0x2553d1['SHADERDEFINE_GPU_INSTANCE']);
            }
            this[_0x180678(0xaa5)] && (this[_0x180678(0xafc)] == _0x18be32[_0x180678(0xae1)][_0x180678(0x8fb)] ? (this[_0x180678(0x4e2)]['removeDefine'](_0x2553d1['SHADERDEFINE_SPECCUBE_BOX_PROJECTION']), this[_0x180678(0x4e2)]['setVector'](_0x221092[_0x180678(0xccb)], _0x24dd24['defaultTextureHDRDecodeValues']), this['_shaderValues']['setTexture'](_0x221092['REFLECTIONTEXTURE'], _0x2fe14f[_0x180678(0xa16)])) : (this[_0x180678(0xaa5)][_0x180678(0xae7)] ? (this[_0x180678(0x4e2)]['addDefine'](_0x2553d1[_0x180678(0xccc)]), this['_shaderValues']['setVector3'](_0x221092[_0x180678(0xa7f)], this['_probReflection'][_0x180678(0xccd)]), this[_0x180678(0x4e2)][_0x180678(0x57a)](_0x221092['REFLECTIONCUBE_PROBEBOXMAX'], this['_probReflection'][_0x180678(0xaee)]), this['_shaderValues'][_0x180678(0x57a)](_0x221092['REFLECTIONCUBE_PROBEBOXMIN'], this['_probReflection']['boundsMin'])) : this[_0x180678(0x4e2)][_0x180678(0x49b)](_0x2553d1[_0x180678(0xccc)]), this['_shaderValues'][_0x180678(0x4ac)](_0x221092[_0x180678(0xa7d)], this[_0x180678(0xaa5)]['reflectionTexture']), this[_0x180678(0x4e2)]['setVector'](_0x221092[_0x180678(0xccb)], this[_0x180678(0xaa5)]['reflectionHDRParams'])));
        }
        ['_renderUpdateWithCamera'](_0x30592c, _0x3e3f4a) {
            var _0x5ef924 = _0x6027f5, _0x4352d3 = _0x30592c[_0x5ef924(0x5dd)];
            if (_0x4352d3)
                switch (_0x30592c['renderElement'][_0x5ef924(0x5f4)]) {
                case _0x50feff[_0x5ef924(0x5fe)]:
                case _0x50feff[_0x5ef924(0xa95)]:
                case _0x50feff[_0x5ef924(0xa96)]:
                    _0x3e3f4a ? (_0x6b4d98[_0x5ef924(0x27b)](_0x4352d3, _0x3e3f4a[_0x5ef924(0x3d8)], this[_0x5ef924(0x5d7)]), this['_shaderValues'][_0x5ef924(0x4aa)](_0x44a154['MVPMATRIX'], this[_0x5ef924(0x5d7)])) : this[_0x5ef924(0x4e2)][_0x5ef924(0x4aa)](_0x44a154[_0x5ef924(0x5df)], _0x4352d3);
                }
        }
        [_0x6027f5(0x5ff)](_0x36ef52) {
            var _0x44f0c8 = _0x6027f5;
            switch (_0x36ef52[_0x44f0c8(0x5f3)][_0x44f0c8(0x5f4)]) {
            case _0x50feff[_0x44f0c8(0xa95)]:
                this[_0x44f0c8(0xcce)] && this[_0x44f0c8(0x4e2)]['removeDefine'](_0x2553d1[_0x44f0c8(0xcca)]), this[_0x44f0c8(0x4e2)]['setVector'](_0x221092[_0x44f0c8(0xa78)], this[_0x44f0c8(0xacd)]);
                break;
            case _0x50feff[_0x44f0c8(0xa93)]:
                this[_0x44f0c8(0x4e2)][_0x44f0c8(0x49b)](_0x2553d1[_0x44f0c8(0xccf)]);
            }
        }
        [_0x6027f5(0xa77)]() {
            var _0x441a7a = _0x6027f5;
            this[_0x441a7a(0xad1)] && _0x34c00f[_0x441a7a(0x304)][_0x441a7a(0xae0)](this[_0x441a7a(0x3dc)]), super[_0x441a7a(0xa77)]();
        }
    }
    class _0x1f703e {
        constructor(_0x38d4b1) {
            var _0x561ec0 = _0x6027f5;
            this[_0x561ec0(0x3dc)] = _0x38d4b1;
        }
        get [_0x6027f5(0xad0)]() {
            var _0x4f4052 = _0x6027f5;
            return this[_0x4f4052(0xcd0)];
        }
        set [_0x6027f5(0xad0)](_0x13b35f) {
            var _0x27c692 = _0x6027f5;
            if (this[_0x27c692(0xcd0)] !== _0x13b35f) {
                var _0x474f99 = this['_owner'][_0x27c692(0x5e8)]['_shaderValues'], _0x937bd8 = this[_0x27c692(0xcd0)];
                if (_0x937bd8) {
                    _0x937bd8[_0x27c692(0x35c)](), this[_0x27c692(0xcd1)](_0x937bd8, _0x1f703e[_0x27c692(0xcd2)]);
                    for (var _0x59318c = 0x0, _0x4dd6c3 = _0x1f703e['_meshVerticeDefine'][_0x27c692(0x205)]; _0x59318c < _0x4dd6c3; _0x59318c++)
                        _0x474f99[_0x27c692(0x49b)](_0x1f703e[_0x27c692(0xcd2)][_0x59318c]);
                }
                if (_0x13b35f) {
                    _0x13b35f['_addReference'](), this[_0x27c692(0xcd1)](_0x13b35f, _0x1f703e[_0x27c692(0xcd2)]);
                    for (_0x59318c = 0x0, _0x4dd6c3 = _0x1f703e['_meshVerticeDefine'][_0x27c692(0x205)]; _0x59318c < _0x4dd6c3; _0x59318c++)
                        _0x474f99[_0x27c692(0x49a)](_0x1f703e['_meshVerticeDefine'][_0x59318c]);
                }
                this[_0x27c692(0x3dc)][_0x27c692(0x5e8)][_0x27c692(0xcd3)](_0x13b35f), this[_0x27c692(0xcd0)] = _0x13b35f;
            }
        }
        ['_getMeshDefine'](_0x5f41ab, _0x40ade3) {
            var _0x114158 = _0x6027f5;
            _0x40ade3[_0x114158(0x205)] = 0x0;
            for (var _0x583537 = 0x0, _0x54bb6c = _0x5f41ab[_0x114158(0x5e6)][_0x114158(0x205)]; _0x583537 < _0x54bb6c; _0x583537++)
                for (var _0x2d2784 = _0x5f41ab[_0x114158(0xcc8)](_0x583537)[_0x114158(0x4f6)]['_vertexDeclaration'][_0x114158(0x4e1)], _0x3ce95d = 0x0, _0xed62d6 = _0x2d2784[_0x114158(0x205)]; _0x3ce95d < _0xed62d6; _0x3ce95d++) {
                    switch (_0x2d2784[_0x3ce95d][_0x114158(0x4e3)]) {
                    case _0x73b54a[_0x114158(0x60d)]:
                        _0x40ade3['push'](_0x2553d1[_0x114158(0xcd4)]);
                        break;
                    case _0x73b54a[_0x114158(0x616)]:
                        _0x40ade3[_0x114158(0x2ac)](_0x2553d1['SHADERDEFINE_UV0']);
                        break;
                    case _0x73b54a[_0x114158(0x60f)]:
                        _0x40ade3['push'](_0x2553d1['SHADERDEFINE_UV1']);
                    }
                }
        }
        [_0x6027f5(0x364)]() {
            var _0x142590 = _0x6027f5;
            this[_0x142590(0x3dc)] = null, this[_0x142590(0xcd0)] && (this['_sharedMesh'][_0x142590(0x35c)](), this['_sharedMesh'] = null);
        }
    }
    _0x1f703e[_0x6027f5(0xcd2)] = [];
    class _0xc8c0ff extends _0x2be7a6 {
        constructor() {
            var _0x13db52 = _0x6027f5;
            super(), this[_0x13db52(0x4f8)] = new _0x5b1dae();
            var _0x3057d3 = _0x387b86['LayaGL']['instance'], _0x26b77c = _0x73b54a[_0x13db52(0x607)](_0x13db52(0xcd5))[_0x13db52(0x4e5)] * _0xc8c0ff['maxIndicesCount'];
            this[_0x13db52(0x4f7)] = new Float32Array(_0x26b77c / 0x4), this[_0x13db52(0x4f6)] = new _0x2ce777(_0x26b77c, _0x3057d3[_0x13db52(0x620)]), this[_0x13db52(0xa99)] = new Int16Array(_0xc8c0ff[_0x13db52(0xcd6)]), this[_0x13db52(0x629)] = new _0x67ef8f(_0x18be32[_0x13db52(0x8c9)]['UInt16'], this[_0x13db52(0xa99)]['length'], _0x3057d3['DYNAMIC_DRAW']);
            var _0x233b47 = this[_0x13db52(0x4f6)][_0x13db52(0x451)] + this[_0x13db52(0x629)][_0x13db52(0x451)];
            _0x387b86['Resource'][_0x13db52(0xcd7)](_0x233b47, _0x233b47);
        }
        static [_0x6027f5(0x230)]() {
            _0xc8c0ff['instance'] = new _0xc8c0ff();
        }
        [_0x6027f5(0xcd8)](_0x424095, _0x2fcb97, _0x58f8b8, _0x491807, _0x54704d) {
            var _0x1bb70f = _0x6027f5, _0x56f4dd = _0x424095[_0x1bb70f(0x4e5)] / 0x4, _0xd218a7 = _0x54704d[_0x1bb70f(0x4f6)]['getFloat32Data'](), _0x41ae89 = _0x491807[_0x1bb70f(0xaa3)], _0x228b66 = _0x491807['_dynamicVertexCount'];
            _0x491807[_0x1bb70f(0xa98)](this[_0x1bb70f(0xcd9)], this[_0x1bb70f(0xcda)], _0x41ae89, _0x228b66);
            for (var _0x552821 = _0x491807[_0x1bb70f(0xa9b)], _0x3e9c96 = _0x491807[_0x1bb70f(0xa9c)], _0x5329ef = _0x54704d[_0x1bb70f(0xa99)], _0x1a9c7d = 0x0; _0x1a9c7d < _0x228b66; _0x1a9c7d++) {
                var _0x6d1d11 = (_0x41ae89 ? _0x5329ef[_0x1a9c7d] : _0x1a9c7d) * _0x56f4dd, _0x2a0926 = (_0x1a9c7d + _0x58f8b8) * _0x56f4dd, _0x2793c0 = 0x3 * _0x1a9c7d, _0x86c107 = _0x2a0926 + this[_0x1bb70f(0xcd9)];
                _0x2fcb97[_0x86c107] = _0x552821[_0x2793c0], _0x2fcb97[_0x86c107 + 0x1] = _0x552821[_0x2793c0 + 0x1], _0x2fcb97[_0x86c107 + 0x2] = _0x552821[_0x2793c0 + 0x2], -0x1 !== this[_0x1bb70f(0xcda)] && (_0x2fcb97[_0x86c107 = _0x2a0926 + this[_0x1bb70f(0xcda)]] = _0x3e9c96[_0x2793c0], _0x2fcb97[_0x86c107 + 0x1] = _0x3e9c96[_0x2793c0 + 0x1], _0x2fcb97[_0x86c107 + 0x2] = _0x3e9c96[_0x2793c0 + 0x2]), -0x1 !== this[_0x1bb70f(0xcdb)] && (_0x86c107 = _0x2a0926 + this[_0x1bb70f(0xcdb)], _0x2793c0 = _0x6d1d11 + this['_colorOffset'], _0x2fcb97[_0x86c107] = _0xd218a7[_0x2793c0], _0x2fcb97[_0x86c107 + 0x1] = _0xd218a7[_0x2793c0 + 0x1], _0x2fcb97[_0x86c107 + 0x2] = _0xd218a7[_0x2793c0 + 0x2], _0x2fcb97[_0x86c107 + 0x3] = _0xd218a7[_0x2793c0 + 0x3]), -0x1 !== this[_0x1bb70f(0xcdc)] && (_0x86c107 = _0x2a0926 + this[_0x1bb70f(0xcdc)], _0x2793c0 = _0x6d1d11 + this['_uv0Offset'], _0x2fcb97[_0x86c107] = _0xd218a7[_0x2793c0], _0x2fcb97[_0x86c107 + 0x1] = _0xd218a7[_0x2793c0 + 0x1]), -0x1 !== this[_0x1bb70f(0xcdd)] && (_0x86c107 = _0x2a0926 + this[_0x1bb70f(0xcdd)], _0x2793c0 = _0x6d1d11 + this[_0x1bb70f(0xcdd)], _0x2fcb97[_0x86c107] = _0xd218a7[_0x2793c0], _0x2fcb97[_0x86c107 + 0x1] = _0xd218a7[_0x2793c0 + 0x1], _0x2fcb97[_0x86c107 + 0x2] = _0xd218a7[_0x2793c0 + 0x2], _0x2fcb97[_0x86c107 + 0x3] = _0xd218a7[_0x2793c0 + 0x3], _0x86c107 = _0x2a0926 + this[_0x1bb70f(0xcdd)], _0x2793c0 = _0x6d1d11 + this[_0x1bb70f(0xcdd)], _0x2fcb97[_0x86c107] = _0xd218a7[_0x2793c0], _0x2fcb97[_0x86c107 + 0x1] = _0xd218a7[_0x2793c0 + 0x1], _0x2fcb97[_0x86c107 + 0x2] = _0xd218a7[_0x2793c0 + 0x2], _0x2fcb97[_0x86c107 + 0x3] = _0xd218a7[_0x2793c0 + 0x3]);
            }
        }
        [_0x6027f5(0xcde)](_0x2897db, _0x5f1854, _0x313220, _0x59e694, _0x481abe, _0x53dfdd) {
            var _0x2fa8e6 = _0x6027f5, _0x4bf7de, _0x5d48e7, _0xcf6b74, _0xa4e111 = _0x481abe[_0x2fa8e6(0xa99)], _0x3631f9 = _0x59e694[_0x2fa8e6(0xa8c)];
            if (_0x53dfdd) {
                if (_0x3631f9)
                    for (_0x4bf7de = 0x0, _0x5d48e7 = _0xa4e111[_0x2fa8e6(0x205)]; _0x4bf7de < _0x5d48e7; _0x4bf7de += 0x3) {
                        var _0x402939 = _0x313220 + _0x4bf7de;
                        _0x2897db[_0xcf6b74 = _0x5f1854 + _0x4bf7de] = _0x402939, _0x2897db[_0xcf6b74 + 0x1] = _0x402939 + 0x2, _0x2897db[_0xcf6b74 + 0x2] = _0x402939 + 0x1;
                    }
                else {
                    for (_0x4bf7de = 0x0, _0x5d48e7 = _0xa4e111[_0x2fa8e6(0x205)]; _0x4bf7de < _0x5d48e7; _0x4bf7de += 0x3)
                        _0x402939 = _0x313220 + _0x4bf7de, _0x2897db[_0xcf6b74 = _0x5f1854 + _0x4bf7de] = _0x402939, _0x2897db[_0xcf6b74 + 0x1] = _0x402939 + 0x1, _0x2897db[_0xcf6b74 + 0x2] = _0x402939 + 0x2;
                }
            } else {
                if (_0x3631f9) {
                    for (_0x4bf7de = 0x0, _0x5d48e7 = _0xa4e111[_0x2fa8e6(0x205)]; _0x4bf7de < _0x5d48e7; _0x4bf7de += 0x3)
                        _0x2897db[_0xcf6b74 = _0x5f1854 + _0x4bf7de] = _0x313220 + _0xa4e111[_0x4bf7de], _0x2897db[_0xcf6b74 + 0x1] = _0x313220 + _0xa4e111[_0x4bf7de + 0x2], _0x2897db[_0xcf6b74 + 0x2] = _0x313220 + _0xa4e111[_0x4bf7de + 0x1];
                } else {
                    for (_0x4bf7de = 0x0, _0x5d48e7 = _0xa4e111['length']; _0x4bf7de < _0x5d48e7; _0x4bf7de += 0x3)
                        _0x2897db[_0xcf6b74 = _0x5f1854 + _0x4bf7de] = _0x313220 + _0xa4e111[_0x4bf7de], _0x2897db[_0xcf6b74 + 0x1] = _0x313220 + _0xa4e111[_0x4bf7de + 0x1], _0x2897db[_0xcf6b74 + 0x2] = _0x313220 + _0xa4e111[_0x4bf7de + 0x2];
                }
            }
        }
        [_0x6027f5(0xcdf)](_0x4d7641, _0x4c401c) {
            var _0x2a3469 = _0x6027f5, _0x20d557 = _0x387b86['LayaGL'][_0x2a3469(0x304)];
            this[_0x2a3469(0x4f6)][_0x2a3469(0x45d)](this[_0x2a3469(0x4f7)][_0x2a3469(0x454)], 0x0, 0x0, _0x4d7641 * this[_0x2a3469(0x4f8)][_0x2a3469(0x456)][_0x2a3469(0x4e5)]), this['_indexBuffer'][_0x2a3469(0x45d)](this['_indices'], 0x0, 0x0, _0x4c401c), _0x20d557['drawElements'](_0x20d557['TRIANGLES'], _0x4c401c, _0x20d557[_0x2a3469(0xa0c)], 0x0);
        }
        ['_prepareRender'](_0x32646d) {
            var _0x13edb9 = _0x6027f5, _0x1fbc28 = _0x32646d['renderElement'][_0x13edb9(0xaaf)];
            this[_0x13edb9(0x4f8)] = _0x525782['MeshRenderDynamicBatchManager'][_0x13edb9(0x304)][_0x13edb9(0xce0)](_0x1fbc28), this[_0x13edb9(0xcd9)] = _0x1fbc28[_0x13edb9(0x4e8)](_0x73b54a[_0x13edb9(0x615)])[_0x13edb9(0x4e4)] / 0x4;
            var _0x37d2da = _0x1fbc28[_0x13edb9(0x4e8)](_0x73b54a[_0x13edb9(0x60c)]);
            this[_0x13edb9(0xcda)] = _0x37d2da ? _0x37d2da[_0x13edb9(0x4e4)] / 0x4 : -0x1;
            var _0x3a0e71 = _0x1fbc28[_0x13edb9(0x4e8)](_0x73b54a[_0x13edb9(0x60d)]);
            this[_0x13edb9(0xcdb)] = _0x3a0e71 ? _0x3a0e71[_0x13edb9(0x4e4)] / 0x4 : -0x1;
            var _0x460fef = _0x1fbc28[_0x13edb9(0x4e8)](_0x73b54a[_0x13edb9(0x616)]);
            this[_0x13edb9(0xcdc)] = _0x460fef ? _0x460fef[_0x13edb9(0x4e4)] / 0x4 : -0x1;
            var _0x176684 = _0x1fbc28[_0x13edb9(0x4e8)](_0x73b54a[_0x13edb9(0x60f)]);
            this[_0x13edb9(0xce1)] = _0x176684 ? _0x176684[_0x13edb9(0x4e4)] / 0x4 : -0x1;
            var _0x3a1c55 = _0x1fbc28[_0x13edb9(0x4e8)](_0x73b54a['MESH_TANGENT0']);
            return this[_0x13edb9(0xcdd)] = _0x3a1c55 ? _0x3a1c55[_0x13edb9(0x4e4)] / 0x4 : -0x1, !0x0;
        }
        [_0x6027f5(0x5e8)](_0x809350) {
            var _0x3e1805 = _0x6027f5;
            this[_0x3e1805(0x4f8)]['bind']();
            for (var _0x11a355 = _0x809350[_0x3e1805(0x5f3)], _0x3f12b4 = _0x11a355[_0x3e1805(0xaaf)], _0x27ab74 = _0x11a355['vertexBatchElementList'], _0xb0f108 = 0x0, _0x3c4a6e = 0x0, _0x14c673 = 0x0, _0xe51920 = _0x27ab74[_0x3e1805(0x205)], _0x364a01 = _0x27ab74[_0x3e1805(0x1fe)], _0x17ef3c = 0x0; _0x17ef3c < _0xe51920; _0x17ef3c++) {
                var _0x3c8f42 = _0x364a01[_0x17ef3c], _0x3fd668 = _0x3c8f42[_0x3e1805(0x5f2)], _0x419faf = _0x3fd668['_indexCount'];
                _0x3c4a6e + _0x419faf > _0xc8c0ff['maxIndicesCount'] && (this[_0x3e1805(0xcdf)](_0xb0f108, _0x3c4a6e), _0x14c673++, _0x387b86[_0x3e1805(0x4dc)][_0x3e1805(0x62e)] += _0x3c4a6e / 0x3, _0xb0f108 = _0x3c4a6e = 0x0);
                var _0x1bb495 = _0x3c8f42[_0x3e1805(0x3d5)];
                this[_0x3e1805(0xcd8)](_0x3f12b4, this[_0x3e1805(0x4f7)], _0xb0f108, _0x3c8f42, _0x3fd668), this[_0x3e1805(0xcde)](this[_0x3e1805(0xa99)], _0x3c4a6e, _0xb0f108, _0x1bb495, _0x3fd668, _0x3c8f42[_0x3e1805(0xaa3)]), _0xb0f108 += _0x3c8f42[_0x3e1805(0xaa2)], _0x3c4a6e += _0x419faf;
            }
            this[_0x3e1805(0xcdf)](_0xb0f108, _0x3c4a6e), _0x14c673++, _0x387b86[_0x3e1805(0x4dc)][_0x3e1805(0x502)] += _0x14c673, _0x387b86[_0x3e1805(0x4dc)][_0x3e1805(0xa8b)] += _0xe51920 - _0x14c673, _0x387b86['Stat'][_0x3e1805(0x62e)] += _0x3c4a6e / 0x3;
        }
    }
    _0xc8c0ff[_0x6027f5(0xaa0)] = 0xa, _0xc8c0ff['maxAllowAttribueCount'] = 0x384, _0xc8c0ff[_0x6027f5(0xcd6)] = 0x7d00;
    class _0x4474ea extends _0x557675 {
        constructor() {
            var _0x16ae90 = _0x6027f5;
            super(), this[_0x16ae90(0xce2)] = [], this[_0x16ae90(0xce3)] = [], this['_cacheBufferStates'] = [], this[_0x16ae90(0xaaa)] = 0x0;
        }
        [_0x6027f5(0xce4)](_0x449acc, _0x7a2a1a, _0x5d9037, _0x48969c) {
            var _0x4e1fc2 = _0x6027f5, _0x21f249 = this['_instanceBatchOpaqueMarks'][_0x449acc ? 0x0 : 0x1] || (this[_0x4e1fc2(0xce2)][_0x449acc ? 0x0 : 0x1] = []), _0x37ab7d = _0x21f249[_0x7a2a1a] || (_0x21f249[_0x7a2a1a] = []), _0x581e18 = _0x37ab7d[_0x5d9037] || (_0x37ab7d[_0x5d9037] = []);
            return _0x581e18[_0x48969c ? 0x1 : 0x0] || (_0x581e18[_0x48969c ? 0x1 : 0x0] = new _0x4f55ba());
        }
        [_0x6027f5(0xce5)](_0xb2513d, _0x14fbef, _0x242f96, _0xede3da) {
            var _0x36c15f = _0x6027f5, _0x49fcfa = this[_0x36c15f(0xce3)][_0xb2513d] || (this[_0x36c15f(0xce3)][_0xb2513d] = []), _0x38a528 = _0x49fcfa[_0x14fbef ? 0x0 : 0x1] || (_0x49fcfa[_0x14fbef ? 0x0 : 0x1] = []), _0x26e9f6 = _0x38a528[_0x242f96] || (_0x38a528[_0x242f96] = []);
            return _0x26e9f6[_0xede3da] || (_0x26e9f6[_0xede3da] = new _0x4f55ba());
        }
        [_0x6027f5(0xce0)](_0x4e68e6) {
            var _0xcff27c = _0x6027f5, _0x1532ca = this[_0xcff27c(0xce6)][_0x4e68e6['id']];
            if (!_0x1532ca) {
                var _0x98ce67 = _0xc8c0ff[_0xcff27c(0x304)];
                (_0x1532ca = new _0x5b1dae())[_0xcff27c(0x452)]();
                var _0x22f892 = _0x98ce67[_0xcff27c(0x4f6)];
                _0x22f892[_0xcff27c(0x456)] = _0x4e68e6, _0x1532ca[_0xcff27c(0x4eb)](_0x22f892), _0x1532ca['applyIndexBuffer'](_0x98ce67[_0xcff27c(0x629)]), _0x1532ca[_0xcff27c(0x4f9)](), this[_0xcff27c(0xce6)][_0x4e68e6['id']] = _0x1532ca;
            }
            return _0x1532ca;
        }
        [_0x6027f5(0xaad)]() {
            var _0x5574b7 = _0x6027f5, _0x2e994e = this['_batchRenderElementPool'][this['_batchRenderElementPoolIndex']++];
            return _0x2e994e || (_0x2e994e = new _0x2057f1(), this[_0x5574b7(0xab7)][this[_0x5574b7(0xac2)] - 0x1] = _0x2e994e, _0x2e994e['vertexBatchElementList'] = new _0x2af7e0(), _0x2e994e[_0x5574b7(0xa8a)] = new _0x2af7e0()), _0x2e994e;
        }
        [_0x6027f5(0x9c1)]() {
            var _0x3bbab0 = _0x6027f5;
            super[_0x3bbab0(0x9c1)](), this[_0x3bbab0(0xaaa)]++;
        }
    }
    _0x4474ea[_0x6027f5(0x304)] = new _0x4474ea();
    class _0x8ce47b extends _0x221092 {
        constructor(_0xd19e51 = null, _0x44a3be = null) {
            var _0x1a5e92 = _0x6027f5;
            super(_0x44a3be), this[_0x1a5e92(0xce7)] = new _0x1f703e(this), this['_render'] = new _0x5b1dcc(this), _0xd19e51 && (this['_meshFilter'][_0x1a5e92(0xad0)] = _0xd19e51);
        }
        static [_0x6027f5(0x230)]() {
            var _0x127ec5 = _0x6027f5;
            _0x2553d1[_0x127ec5(0xce8)] = _0x3a9f31[_0x127ec5(0x510)]('UV'), _0x2553d1[_0x127ec5(0xcd4)] = _0x3a9f31[_0x127ec5(0x510)](_0x127ec5(0x438)), _0x2553d1[_0x127ec5(0xcca)] = _0x3a9f31['getDefineByName'](_0x127ec5(0x60e)), _0x2553d1[_0x127ec5(0xccf)] = _0x3a9f31[_0x127ec5(0x510)](_0x127ec5(0xce9)), _0x2553d1[_0x127ec5(0xccc)] = _0x3a9f31[_0x127ec5(0x510)](_0x127ec5(0xcea)), _0x423717[_0x127ec5(0xaba)](_0x34c00f[_0x127ec5(0x304)]), _0x557675['_registerManager'](_0x4474ea[_0x127ec5(0x304)]);
        }
        get [_0x6027f5(0xacf)]() {
            var _0x3ba46c = _0x6027f5;
            return this[_0x3ba46c(0xce7)];
        }
        get [_0x6027f5(0xceb)]() {
            var _0x5491b2 = _0x6027f5;
            return this[_0x5491b2(0x5e8)];
        }
        [_0x6027f5(0x67c)](_0x25707f, _0x3adb6a) {
            var _0x4a8359 = _0x6027f5;
            super[_0x4a8359(0x67c)](_0x25707f, _0x3adb6a);
            var _0x5b76b2 = this['meshRenderer'], _0x16acfc = _0x25707f[_0x4a8359(0xaa8)];
            null != _0x16acfc && (_0x5b76b2[_0x4a8359(0xaa8)] = _0x16acfc);
            var _0x357295 = _0x25707f['lightmapScaleOffset'];
            _0x357295 && (_0x5b76b2[_0x4a8359(0xacd)] = new _0x5b8e4e(_0x357295[0x0], _0x357295[0x1], _0x357295[0x2], _0x357295[0x3])), null != _0x25707f['meshPath'] && (this[_0x4a8359(0xacf)]['sharedMesh'] = _0x387b86[_0x4a8359(0x3bd)][_0x4a8359(0x3b7)](_0x25707f[_0x4a8359(0xcec)])), null != _0x25707f[_0x4a8359(0x991)] && (_0x5b76b2['enable'] = _0x25707f[_0x4a8359(0x991)]), null != _0x25707f[_0x4a8359(0xced)] && (_0x5b76b2[_0x4a8359(0xaac)] = _0x25707f['receiveShadows']), null != _0x25707f['castShadow'] && (_0x5b76b2[_0x4a8359(0xb09)] = _0x25707f['castShadow']);
            var _0x26face = _0x25707f[_0x4a8359(0xcee)];
            if (_0x26face) {
                var _0x19da54 = _0x5b76b2[_0x4a8359(0xb03)], _0x53a607 = _0x26face[_0x4a8359(0x205)];
                _0x19da54[_0x4a8359(0x205)] = _0x53a607;
                for (var _0x51cd6b = 0x0; _0x51cd6b < _0x53a607; _0x51cd6b++)
                    _0x19da54[_0x51cd6b] = _0x387b86[_0x4a8359(0x3bd)][_0x4a8359(0x3b7)](_0x26face[_0x51cd6b][_0x4a8359(0x3b8)]);
                _0x5b76b2[_0x4a8359(0xb03)] = _0x19da54;
            }
        }
        ['_addToInitStaticBatchManager']() {
            var _0x317cb2 = _0x6027f5;
            this[_0x317cb2(0xacf)][_0x317cb2(0xad0)] && _0x34c00f['instance'][_0x317cb2(0xcef)](this);
        }
        [_0x6027f5(0x345)](_0x16c315, _0x214edc, _0xfeacb9) {
            var _0x13f4af = _0x6027f5, _0x3ddb4c = _0x16c315;
            _0x3ddb4c['_meshFilter'][_0x13f4af(0xad0)] = this[_0x13f4af(0xce7)][_0x13f4af(0xad0)];
            var _0x2e8fd9 = this[_0x13f4af(0x5e8)], _0x22165b = _0x3ddb4c[_0x13f4af(0x5e8)];
            _0x22165b['enable'] = _0x2e8fd9[_0x13f4af(0x659)], _0x22165b['sharedMaterials'] = _0x2e8fd9[_0x13f4af(0xb03)], _0x22165b[_0x13f4af(0xb09)] = _0x2e8fd9[_0x13f4af(0xb09)];
            var _0x99aa5f = _0x2e8fd9[_0x13f4af(0xacd)];
            _0x99aa5f && (_0x22165b[_0x13f4af(0xacd)] = _0x99aa5f[_0x13f4af(0x1fd)]()), _0x22165b[_0x13f4af(0xaa8)] = _0x2e8fd9[_0x13f4af(0xaa8)], _0x22165b[_0x13f4af(0xaac)] = _0x2e8fd9[_0x13f4af(0xaac)], _0x22165b['sortingFudge'] = _0x2e8fd9[_0x13f4af(0xcf0)], super['_cloneTo'](_0x16c315, _0x214edc, _0xfeacb9);
        }
        [_0x6027f5(0x364)](_0x4d841e = !0x0) {
            var _0xf08307 = _0x6027f5;
            this[_0xf08307(0x5cf)] || (super[_0xf08307(0x364)](_0x4d841e), this['_meshFilter'][_0xf08307(0x364)]());
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x8ce47b();
        }
    }
    class _0x117a28 {
    }
    _0x117a28[_0x6027f5(0xcf1)] = 0x0, _0x117a28['Fixed'] = 0x1;
    class _0x1d08e8 {
        constructor(_0x35ecdf, _0xc952e8) {
            var _0x13fe3d = _0x6027f5;
            this[_0x13fe3d(0xcf2)] = 0x0, this[_0x13fe3d(0xcf3)] = 0x0, this[_0x13fe3d(0xcf4)] = 0x0, this['_colorRGBKeysCount'] = 0x0, this[_0x13fe3d(0xcf5)] = 0x0, this[_0x13fe3d(0xcf6)] = null, this[_0x13fe3d(0xcf7)] = null, this[_0x13fe3d(0xcf3)] = _0x35ecdf, this[_0x13fe3d(0xcf4)] = _0xc952e8, this[_0x13fe3d(0xcf7)] = new Float32Array(0x4 * _0x35ecdf), this['_alphaElements'] = new Float32Array(0x2 * _0xc952e8);
        }
        get [_0x6027f5(0xcf8)]() {
            var _0x30a2a2 = _0x6027f5;
            return this[_0x30a2a2(0xcf2)];
        }
        set [_0x6027f5(0xcf8)](_0x5cad83) {
            this['_mode'] = _0x5cad83;
        }
        get ['colorRGBKeysCount']() {
            var _0x520805 = _0x6027f5;
            return this[_0x520805(0xcf9)];
        }
        get [_0x6027f5(0xcfa)]() {
            var _0x359e64 = _0x6027f5;
            return this[_0x359e64(0xcf5)];
        }
        get ['maxColorRGBKeysCount']() {
            var _0x54f1c7 = _0x6027f5;
            return this[_0x54f1c7(0xcf3)];
        }
        get [_0x6027f5(0xcfb)]() {
            return this['_maxColorAlphaKeysCount'];
        }
        [_0x6027f5(0xcfc)](_0xac6680, _0x3ad967) {
            var _0x333338 = _0x6027f5;
            if (this[_0x333338(0xcf9)] < this[_0x333338(0xcf3)]) {
                var _0x1eb601 = 0x4 * this[_0x333338(0xcf9)];
                this['_rgbElements'][_0x1eb601] = _0xac6680, this[_0x333338(0xcf7)][_0x1eb601 + 0x1] = _0x3ad967['r'], this[_0x333338(0xcf7)][_0x1eb601 + 0x2] = _0x3ad967['g'], this[_0x333338(0xcf7)][_0x1eb601 + 0x3] = _0x3ad967['b'], this['_colorRGBKeysCount']++;
            } else
                console[_0x333338(0x25a)](_0x333338(0xcfd) + this[_0x333338(0xcf3)]);
        }
        [_0x6027f5(0xcfe)](_0x569c4a, _0x499494) {
            var _0x19de2a = _0x6027f5;
            if (this['_colorAlphaKeysCount'] < this[_0x19de2a(0xcf4)]) {
                var _0x132498 = 0x2 * this[_0x19de2a(0xcf5)];
                this[_0x19de2a(0xcf6)][_0x132498] = _0x569c4a, this[_0x19de2a(0xcf6)][_0x132498 + 0x1] = _0x499494, this[_0x19de2a(0xcf5)]++;
            } else
                console['warn'](_0x19de2a(0xcfd) + this['_maxColorAlphaKeysCount']);
        }
        [_0x6027f5(0xcff)](_0x739b51, _0x44b7ba, _0x336196) {
            var _0x2b45d8 = _0x6027f5;
            if (_0x739b51 < this[_0x2b45d8(0xcf9)]) {
                var _0xf7a1bb = 0x4 * _0x739b51;
                this[_0x2b45d8(0xcf7)][_0xf7a1bb] = _0x44b7ba, this['_rgbElements'][_0xf7a1bb + 0x1] = _0x336196['r'], this['_rgbElements'][_0xf7a1bb + 0x2] = _0x336196['g'], this[_0x2b45d8(0xcf7)][_0xf7a1bb + 0x3] = _0x336196['b'];
            } else
                console[_0x2b45d8(0x25a)](_0x2b45d8(0xd00) + this['_colorRGBKeysCount']);
        }
        [_0x6027f5(0xd01)](_0x1134fb, _0x4bc0d6, _0x44c583) {
            var _0x5eb1d0 = _0x6027f5;
            if (_0x1134fb < this[_0x5eb1d0(0xcf5)]) {
                var _0x20dfaf = 0x2 * _0x1134fb;
                this['_alphaElements'][_0x20dfaf] = _0x4bc0d6, this[_0x5eb1d0(0xcf6)][_0x20dfaf + 0x1] = _0x44c583;
            } else
                console[_0x5eb1d0(0x25a)](_0x5eb1d0(0xd02) + this['_colorAlphaKeysCount']);
        }
        [_0x6027f5(0xd03)](_0xc61a25, _0x5f310f, _0x2d0e75 = 0x0, _0x28f214 = !0x1) {
            var _0x36fc80 = _0x6027f5;
            _0xc61a25 = Math['min'](Math[_0x36fc80(0x20c)](_0xc61a25, 0x0), 0x1);
            var _0x3178ec = this[_0x36fc80(0xcf7)], _0x4a00ea = _0x2d0e75;
            if (_0x28f214)
                for (var _0x5acef1 = _0x4a00ea; _0x5acef1 >= 0x0; _0x5acef1--) {
                    var _0xe01978 = 0x4 * _0x5acef1;
                    if (_0xc61a25 === (_0x3523af = _0x3178ec[_0xe01978]))
                        return _0x5f310f['r'] = _0x3178ec[_0xe01978 + 0x1], _0x5f310f['g'] = _0x3178ec[_0xe01978 + 0x2], _0x5f310f['b'] = _0x3178ec[_0xe01978 + 0x3], _0x4a00ea;
                    switch (this[_0x36fc80(0xcf2)]) {
                    case _0x117a28[_0x36fc80(0xcf1)]:
                        if (_0xc61a25 > _0x3523af) {
                            if (_0xc61a25 > (_0x57216a = _0x3178ec[_0xe01978 + 0x4]))
                                throw 'Gradient:wrong\x20startSearchIndex.';
                            var _0x1e31fc = _0x57216a - _0x3523af, _0x1c1773 = _0x57216a - _0xc61a25, _0x2839b8 = _0xc61a25 - _0x3523af;
                            return _0x5f310f['r'] = (_0x1c1773 * _0x3178ec[_0xe01978 + 0x1] + _0x2839b8 * _0x3178ec[_0xe01978 + 0x5]) / _0x1e31fc, _0x5f310f['g'] = (_0x1c1773 * _0x3178ec[_0xe01978 + 0x2] + _0x2839b8 * _0x3178ec[_0xe01978 + 0x6]) / _0x1e31fc, _0x5f310f['b'] = (_0x1c1773 * _0x3178ec[_0xe01978 + 0x3] + _0x2839b8 * _0x3178ec[_0xe01978 + 0x7]) / _0x1e31fc, _0x4a00ea;
                        }
                        _0x4a00ea--;
                        continue;
                    case _0x117a28[_0x36fc80(0xd04)]:
                        if (_0xc61a25 > _0x3523af) {
                            if (_0xc61a25 > _0x3178ec[_0xe01978 + 0x4])
                                throw _0x36fc80(0xd05);
                            return _0x5f310f['r'] = _0x3178ec[_0xe01978 + 0x5], _0x5f310f['g'] = _0x3178ec[_0xe01978 + 0x6], _0x5f310f['b'] = _0x3178ec[_0xe01978 + 0x7], _0x4a00ea;
                        }
                        _0x4a00ea--;
                        continue;
                    default:
                        throw 'Gradient:unknown\x20mode.';
                    }
                }
            else {
                _0x5acef1 = 0x0;
                for (var _0x54cec3 = this[_0x36fc80(0xcf7)]['length']; _0x5acef1 < _0x54cec3; _0x5acef1++) {
                    var _0x57216a;
                    if (_0xc61a25 === (_0x57216a = _0x3178ec[_0xe01978 = 0x4 * _0x5acef1]))
                        return _0x5f310f['r'] = _0x3178ec[_0xe01978 + 0x1], _0x5f310f['g'] = _0x3178ec[_0xe01978 + 0x2], _0x5f310f['b'] = _0x3178ec[_0xe01978 + 0x3], _0x4a00ea;
                    switch (this[_0x36fc80(0xcf2)]) {
                    case _0x117a28[_0x36fc80(0xcf1)]:
                        if (_0xc61a25 < _0x57216a) {
                            var _0x3523af;
                            if (_0xc61a25 < (_0x3523af = _0x3178ec[_0xe01978 - 0x4]))
                                throw 'Gradient:wrong\x20startSearchIndex.';
                            return _0x1e31fc = _0x57216a - _0x3523af, _0x1c1773 = _0x57216a - _0xc61a25, _0x2839b8 = _0xc61a25 - _0x3523af, (_0x5f310f['r'] = (_0x1c1773 * _0x3178ec[_0xe01978 - 0x3] + _0x2839b8 * _0x3178ec[_0xe01978 + 0x1]) / _0x1e31fc, _0x5f310f['g'] = (_0x1c1773 * _0x3178ec[_0xe01978 - 0x2] + _0x2839b8 * _0x3178ec[_0xe01978 + 0x2]) / _0x1e31fc, _0x5f310f['b'] = (_0x1c1773 * _0x3178ec[_0xe01978 - 0x1] + _0x2839b8 * _0x3178ec[_0xe01978 + 0x3]) / _0x1e31fc, _0x4a00ea);
                        }
                        _0x4a00ea++;
                        continue;
                    case _0x117a28[_0x36fc80(0xd04)]:
                        if (_0xc61a25 < _0x57216a) {
                            if (_0xc61a25 < _0x3178ec[_0xe01978 - 0x4])
                                throw _0x36fc80(0xd05);
                            return _0x5f310f['r'] = _0x3178ec[_0xe01978 + 0x1], _0x5f310f['g'] = _0x3178ec[_0xe01978 + 0x2], _0x5f310f['b'] = _0x3178ec[_0xe01978 + 0x3], _0x4a00ea;
                        }
                        _0x4a00ea++;
                        continue;
                    default:
                        throw _0x36fc80(0xd06);
                    }
                }
            }
            return _0x4a00ea;
        }
        [_0x6027f5(0xd07)](_0x3fc762, _0x19c14d, _0x35ae59 = 0x0, _0x24c9d9 = !0x1) {
            var _0x1b4459 = _0x6027f5;
            _0x3fc762 = Math[_0x1b4459(0x212)](Math[_0x1b4459(0x20c)](_0x3fc762, 0x0), 0x1);
            var _0x44de22 = this['_alphaElements'], _0x4e022a = _0x35ae59;
            if (_0x24c9d9)
                for (var _0x71f92e = _0x4e022a; _0x71f92e >= 0x0; _0x71f92e--) {
                    if (_0x3fc762 === (_0x268681 = _0x44de22[_0x1a639f = 0x2 * _0x71f92e]))
                        return _0x19c14d['a'] = _0x44de22[_0x1a639f + 0x1], _0x4e022a;
                    switch (this[_0x1b4459(0xcf2)]) {
                    case _0x117a28[_0x1b4459(0xcf1)]:
                        if (_0x3fc762 > _0x268681) {
                            if (_0x3fc762 > (_0xc61be8 = _0x44de22[_0x1a639f + 0x2]))
                                throw _0x1b4459(0xd05);
                            var _0x3f8908 = _0xc61be8 - _0x268681, _0x1dfc63 = _0xc61be8 - _0x3fc762, _0x86edab = _0x3fc762 - _0x268681;
                            return _0x19c14d['a'] = (_0x1dfc63 * _0x44de22[_0x1a639f + 0x1] + _0x86edab * _0x44de22[_0x1a639f + 0x3]) / _0x3f8908, _0x4e022a;
                        }
                        _0x4e022a--;
                        continue;
                    case _0x117a28[_0x1b4459(0xd04)]:
                        if (_0x3fc762 > _0x268681) {
                            if (_0x3fc762 > _0x44de22[_0x1a639f + 0x2])
                                throw _0x1b4459(0xd05);
                            return _0x19c14d['a'] = _0x44de22[_0x1a639f + 0x3], _0x4e022a;
                        }
                        _0x4e022a--;
                        continue;
                    default:
                        throw _0x1b4459(0xd06);
                    }
                }
            else {
                _0x71f92e = _0x4e022a;
                for (var _0x1cfefe = this['_alphaElements'][_0x1b4459(0x205)]; _0x71f92e < _0x1cfefe; _0x71f92e++) {
                    var _0x1a639f, _0xc61be8;
                    if (_0x3fc762 === (_0xc61be8 = _0x44de22[_0x1a639f = 0x2 * _0x71f92e]))
                        return _0x19c14d['a'] = _0x44de22[_0x1a639f + 0x1], _0x4e022a;
                    switch (this['_mode']) {
                    case _0x117a28[_0x1b4459(0xcf1)]:
                        if (_0x3fc762 < _0xc61be8) {
                            var _0x268681;
                            if (_0x3fc762 < (_0x268681 = _0x44de22[_0x1a639f - 0x2]))
                                throw _0x1b4459(0xd05);
                            return _0x3f8908 = _0xc61be8 - _0x268681, _0x1dfc63 = _0xc61be8 - _0x3fc762, _0x86edab = _0x3fc762 - _0x268681, (_0x19c14d['a'] = (_0x1dfc63 * _0x44de22[_0x1a639f - 0x1] + _0x86edab * _0x44de22[_0x1a639f + 0x1]) / _0x3f8908, _0x4e022a);
                        }
                        _0x4e022a++;
                        continue;
                    case _0x117a28['Fixed']:
                        if (_0x3fc762 < _0xc61be8) {
                            if (_0x3fc762 < _0x44de22[_0x1a639f - 0x2])
                                throw _0x1b4459(0xd05);
                            return _0x19c14d['a'] = _0x44de22[_0x1a639f + 0x1], _0x4e022a;
                        }
                        _0x4e022a++;
                        continue;
                    default:
                        throw _0x1b4459(0xd06);
                    }
                }
            }
            return _0x4e022a;
        }
        [_0x6027f5(0x1fc)](_0x22db0e) {
            var _0x175217 = _0x6027f5, _0x3e2dd3, _0x469751, _0x7c744e = _0x22db0e;
            _0x7c744e[_0x175217(0xcf5)] = this['_colorAlphaKeysCount'];
            var _0x4ed625 = _0x7c744e['_alphaElements'];
            for (_0x3e2dd3 = 0x0, _0x469751 = this[_0x175217(0xcf6)][_0x175217(0x205)]; _0x3e2dd3 < _0x469751; _0x3e2dd3++)
                _0x4ed625[_0x3e2dd3] = this[_0x175217(0xcf6)][_0x3e2dd3];
            _0x7c744e[_0x175217(0xcf9)] = this[_0x175217(0xcf9)];
            var _0x4483e0 = _0x7c744e[_0x175217(0xcf7)];
            for (_0x3e2dd3 = 0x0, _0x469751 = this[_0x175217(0xcf7)]['length']; _0x3e2dd3 < _0x469751; _0x3e2dd3++)
                _0x4483e0[_0x3e2dd3] = this[_0x175217(0xcf7)][_0x3e2dd3];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x28517d = _0x6027f5, _0x23dc5f = new _0x1d08e8(this['_maxColorRGBKeysCount'], this[_0x28517d(0xcf4)]);
            return this[_0x28517d(0x1fc)](_0x23dc5f), _0x23dc5f;
        }
    }
    class _0xe35791 {
        constructor(_0x176e99, _0x2871ae, _0x4dd132) {
            var _0x414408 = _0x6027f5;
            this[_0x414408(0xba0)] = _0x176e99, this['_minCount'] = _0x2871ae, this[_0x414408(0xd08)] = _0x4dd132;
        }
        get ['time']() {
            var _0x124be0 = _0x6027f5;
            return this[_0x124be0(0xba0)];
        }
        get [_0x6027f5(0xd09)]() {
            var _0x1b7cf0 = _0x6027f5;
            return this[_0x1b7cf0(0xd0a)];
        }
        get [_0x6027f5(0xd0b)]() {
            var _0x4da7de = _0x6027f5;
            return this[_0x4da7de(0xd08)];
        }
        [_0x6027f5(0x1fc)](_0x5d9448) {
            var _0x411b32 = _0x6027f5, _0x1bc574 = _0x5d9448;
            _0x1bc574[_0x411b32(0xba0)] = this[_0x411b32(0xba0)], _0x1bc574[_0x411b32(0xd0a)] = this[_0x411b32(0xd0a)], _0x1bc574[_0x411b32(0xd08)] = this['_maxCount'];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x53e7a3 = _0x6027f5, _0x25cc82 = new _0xe35791(this['_time'], this['_minCount'], this['_maxCount']);
            return this[_0x53e7a3(0x1fc)](_0x25cc82), _0x25cc82;
        }
    }
    class _0x138396 {
        constructor() {
            var _0x216004 = _0x6027f5;
            this[_0x216004(0xa5e)] = 0x0, this[_0x216004(0xd0c)] = null, this[_0x216004(0xd0d)] = null, this['_constantMax'] = null, this['_gradient'] = null, this['_gradientMin'] = null, this[_0x216004(0xd0e)] = null;
        }
        static ['createByConstant'](_0x45430d) {
            var _0x204b82 = _0x6027f5, _0x436c59 = new _0x138396();
            return _0x436c59[_0x204b82(0xa5e)] = 0x0, _0x436c59[_0x204b82(0xd0c)] = _0x45430d, _0x436c59;
        }
        static [_0x6027f5(0xd0f)](_0x103288) {
            var _0x4ec814 = _0x6027f5, _0x21d1a9 = new _0x138396();
            return _0x21d1a9[_0x4ec814(0xa5e)] = 0x1, _0x21d1a9[_0x4ec814(0xd10)] = _0x103288, _0x21d1a9;
        }
        static ['createByRandomTwoConstant'](_0x450485, _0x213c62) {
            var _0x2c3b4e = _0x6027f5, _0x1f10fe = new _0x138396();
            return _0x1f10fe[_0x2c3b4e(0xa5e)] = 0x2, _0x1f10fe['_constantMin'] = _0x450485, _0x1f10fe[_0x2c3b4e(0xd11)] = _0x213c62, _0x1f10fe;
        }
        static [_0x6027f5(0xd12)](_0x2da881, _0x56e5a5) {
            var _0x36a00c = _0x6027f5, _0x4f179d = new _0x138396();
            return _0x4f179d[_0x36a00c(0xa5e)] = 0x3, _0x4f179d[_0x36a00c(0xd13)] = _0x2da881, _0x4f179d[_0x36a00c(0xd0e)] = _0x56e5a5, _0x4f179d;
        }
        get [_0x6027f5(0x2cc)]() {
            return this['_type'];
        }
        get [_0x6027f5(0xd14)]() {
            return this['_constant'];
        }
        get [_0x6027f5(0xd15)]() {
            var _0x5e1b43 = _0x6027f5;
            return this[_0x5e1b43(0xd0d)];
        }
        get [_0x6027f5(0xd16)]() {
            return this['_constantMax'];
        }
        get [_0x6027f5(0xd17)]() {
            var _0x55149e = _0x6027f5;
            return this[_0x55149e(0xd10)];
        }
        get [_0x6027f5(0xd18)]() {
            var _0x2dd2ce = _0x6027f5;
            return this[_0x2dd2ce(0xd13)];
        }
        get [_0x6027f5(0xd19)]() {
            var _0x44b6aa = _0x6027f5;
            return this[_0x44b6aa(0xd0e)];
        }
        ['cloneTo'](_0x3bf0dd) {
            var _0x1fe0f2 = _0x6027f5, _0x540880 = _0x3bf0dd;
            _0x540880[_0x1fe0f2(0xa5e)] = this[_0x1fe0f2(0xa5e)], this[_0x1fe0f2(0xd0c)][_0x1fe0f2(0x1fc)](_0x540880[_0x1fe0f2(0xd0c)]), this[_0x1fe0f2(0xd0d)][_0x1fe0f2(0x1fc)](_0x540880[_0x1fe0f2(0xd0d)]), this[_0x1fe0f2(0xd11)][_0x1fe0f2(0x1fc)](_0x540880['_constantMax']), this[_0x1fe0f2(0xd10)][_0x1fe0f2(0x1fc)](_0x540880['_gradient']), this[_0x1fe0f2(0xd13)][_0x1fe0f2(0x1fc)](_0x540880[_0x1fe0f2(0xd13)]), this['_gradientMax'][_0x1fe0f2(0x1fc)](_0x540880[_0x1fe0f2(0xd0e)]);
        }
        ['clone']() {
            var _0x4e83fd = _0x6027f5, _0x27f85c = new _0x138396();
            return this[_0x4e83fd(0x1fc)](_0x27f85c), _0x27f85c;
        }
    }
    class _0x12356 {
        constructor(_0x319f88) {
            var _0x1ecd9a = _0x6027f5;
            this[_0x1ecd9a(0xd1a)] = _0x319f88;
        }
        get [_0x6027f5(0x46f)]() {
            var _0x1798c9 = _0x6027f5;
            return this[_0x1798c9(0xd1a)];
        }
        ['cloneTo'](_0x480fae) {
            var _0x30f372 = _0x6027f5, _0xd128df = _0x480fae;
            this['_color'][_0x30f372(0x1fc)](_0xd128df[_0x30f372(0xd1a)]), _0xd128df['enable'] = this['enable'];
        }
        [_0x6027f5(0x1fd)]() {
            var _0xa95d52 = _0x6027f5, _0x31b31c;
            switch (this[_0xa95d52(0xd1a)][_0xa95d52(0x2cc)]) {
            case 0x0:
                _0x31b31c = _0x138396[_0xa95d52(0xd1b)](this[_0xa95d52(0xd1a)][_0xa95d52(0xd14)]['clone']());
                break;
            case 0x1:
                _0x31b31c = _0x138396[_0xa95d52(0xd0f)](this[_0xa95d52(0xd1a)][_0xa95d52(0xd17)][_0xa95d52(0x1fd)]());
                break;
            case 0x2:
                _0x31b31c = _0x138396['createByRandomTwoConstant'](this[_0xa95d52(0xd1a)][_0xa95d52(0xd15)][_0xa95d52(0x1fd)](), this[_0xa95d52(0xd1a)][_0xa95d52(0xd16)]['clone']());
                break;
            case 0x3:
                _0x31b31c = _0x138396['createByRandomTwoGradient'](this[_0xa95d52(0xd1a)]['gradientMin'][_0xa95d52(0x1fd)](), this[_0xa95d52(0xd1a)][_0xa95d52(0xd19)][_0xa95d52(0x1fd)]());
            }
            var _0x3566ca = new _0x12356(_0x31b31c);
            return _0x3566ca['enable'] = this['enable'], _0x3566ca;
        }
    }
    class _0xae37d7 {
        constructor() {
            var _0x25bc55 = _0x6027f5;
            this[_0x25bc55(0xa5e)] = 0x0, this[_0x25bc55(0xd0c)] = 0x0, this[_0x25bc55(0xd1c)] = null, this[_0x25bc55(0xd0d)] = 0x0, this[_0x25bc55(0xd11)] = 0x0, this[_0x25bc55(0xd1d)] = null, this[_0x25bc55(0xd1e)] = null;
        }
        static ['createByConstant'](_0x449c31 = 0x0) {
            var _0x371a71 = _0x6027f5, _0x3a543a = new _0xae37d7();
            return _0x3a543a[_0x371a71(0xa5e)] = 0x0, _0x3a543a[_0x371a71(0xd0c)] = _0x449c31, _0x3a543a;
        }
        static [_0x6027f5(0xd1f)](_0x40c3c0) {
            var _0x53d164 = _0x6027f5, _0x107ef3 = new _0xae37d7();
            return _0x107ef3[_0x53d164(0xa5e)] = 0x1, _0x107ef3[_0x53d164(0xd1c)] = _0x40c3c0, _0x107ef3;
        }
        static ['createByRandomTwoConstant'](_0x3c4d9b = 0x0, _0x5dfa1c = 0x0) {
            var _0x4aa6a5 = _0x6027f5, _0x3d7c0c = new _0xae37d7();
            return _0x3d7c0c[_0x4aa6a5(0xa5e)] = 0x2, _0x3d7c0c[_0x4aa6a5(0xd0d)] = _0x3c4d9b, _0x3d7c0c[_0x4aa6a5(0xd11)] = _0x5dfa1c, _0x3d7c0c;
        }
        static [_0x6027f5(0xd20)](_0x4e7226, _0x323460) {
            var _0x1de9a0 = _0x6027f5, _0x5d522a = new _0xae37d7();
            return _0x5d522a[_0x1de9a0(0xa5e)] = 0x3, _0x5d522a[_0x1de9a0(0xd1d)] = _0x4e7226, _0x5d522a['_overTimeMax'] = _0x323460, _0x5d522a;
        }
        get [_0x6027f5(0x2cc)]() {
            return this['_type'];
        }
        get ['constant']() {
            var _0x15f449 = _0x6027f5;
            return this[_0x15f449(0xd0c)];
        }
        get [_0x6027f5(0xd21)]() {
            var _0x4134ee = _0x6027f5;
            return this[_0x4134ee(0xd1c)];
        }
        get [_0x6027f5(0xd15)]() {
            var _0xc56b09 = _0x6027f5;
            return this[_0xc56b09(0xd0d)];
        }
        get [_0x6027f5(0xd16)]() {
            var _0x2bb5ff = _0x6027f5;
            return this[_0x2bb5ff(0xd11)];
        }
        get [_0x6027f5(0xd22)]() {
            var _0x7fa38d = _0x6027f5;
            return this[_0x7fa38d(0xd1d)];
        }
        get [_0x6027f5(0xd23)]() {
            var _0x2232bc = _0x6027f5;
            return this[_0x2232bc(0xd1e)];
        }
        [_0x6027f5(0x1fc)](_0x20727f) {
            var _0x46bc48 = _0x6027f5, _0x2d4732 = _0x20727f;
            _0x2d4732[_0x46bc48(0xa5e)] = this[_0x46bc48(0xa5e)], _0x2d4732[_0x46bc48(0xd0c)] = this[_0x46bc48(0xd0c)], this[_0x46bc48(0xd1c)] && this['_overTime'][_0x46bc48(0x1fc)](_0x2d4732['_overTime']), _0x2d4732[_0x46bc48(0xd0d)] = this[_0x46bc48(0xd0d)], _0x2d4732[_0x46bc48(0xd11)] = this[_0x46bc48(0xd11)], this[_0x46bc48(0xd1d)] && this[_0x46bc48(0xd1d)][_0x46bc48(0x1fc)](_0x2d4732[_0x46bc48(0xd1d)]), this[_0x46bc48(0xd1e)] && this[_0x46bc48(0xd1e)]['cloneTo'](_0x2d4732[_0x46bc48(0xd1e)]);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x370c78 = _0x6027f5, _0x3c0409 = new _0xae37d7();
            return this[_0x370c78(0x1fc)](_0x3c0409), _0x3c0409;
        }
    }
    class _0x23370c {
        constructor() {
            var _0x674148 = _0x6027f5;
            this[_0x674148(0xa5e)] = 0x0, this[_0x674148(0xd24)] = !0x1, this[_0x674148(0xd0c)] = 0x0, this[_0x674148(0xd25)] = null, this[_0x674148(0xd10)] = null, this[_0x674148(0xd26)] = null, this[_0x674148(0xd27)] = null, this[_0x674148(0xd28)] = null, this[_0x674148(0xd29)] = null, this['_constantMin'] = 0x0, this[_0x674148(0xd11)] = 0x0, this[_0x674148(0xd2a)] = null, this[_0x674148(0xd2b)] = null, this[_0x674148(0xd13)] = null, this[_0x674148(0xd0e)] = null, this[_0x674148(0xd2c)] = null, this[_0x674148(0xd2d)] = null, this['_gradientYMin'] = null, this[_0x674148(0xd2e)] = null, this[_0x674148(0xd2f)] = null, this['_gradientZMax'] = null, this[_0x674148(0xd30)] = null, this[_0x674148(0xd31)] = null;
        }
        static [_0x6027f5(0xd1b)](_0x20d4aa) {
            var _0x35c232 = _0x6027f5, _0x25eb25 = new _0x23370c();
            return _0x25eb25[_0x35c232(0xa5e)] = 0x0, _0x25eb25['_separateAxes'] = !0x1, _0x25eb25[_0x35c232(0xd0c)] = _0x20d4aa, _0x25eb25;
        }
        static [_0x6027f5(0xd32)](_0xdaff2b) {
            var _0x2632a5 = _0x6027f5, _0x2b3a9a = new _0x23370c();
            return _0x2b3a9a['_type'] = 0x0, _0x2b3a9a[_0x2632a5(0xd24)] = !0x0, _0x2b3a9a[_0x2632a5(0xd25)] = _0xdaff2b, _0x2b3a9a;
        }
        static ['createByGradient'](_0x1558d6) {
            var _0x1d9a74 = _0x6027f5, _0x279c36 = new _0x23370c();
            return _0x279c36[_0x1d9a74(0xa5e)] = 0x1, _0x279c36['_separateAxes'] = !0x1, _0x279c36[_0x1d9a74(0xd10)] = _0x1558d6, _0x279c36;
        }
        static [_0x6027f5(0xd33)](_0x3dd619, _0x46bdb5, _0x283ca3) {
            var _0x4daa70 = _0x6027f5, _0x592df8 = new _0x23370c();
            return _0x592df8[_0x4daa70(0xa5e)] = 0x1, _0x592df8[_0x4daa70(0xd24)] = !0x0, _0x592df8['_gradientX'] = _0x3dd619, _0x592df8[_0x4daa70(0xd27)] = _0x46bdb5, _0x592df8['_gradientZ'] = _0x283ca3, _0x592df8;
        }
        static [_0x6027f5(0xd34)](_0x3129cb, _0x3b273e) {
            var _0x122887 = _0x6027f5, _0x38d36a = new _0x23370c();
            return _0x38d36a['_type'] = 0x2, _0x38d36a[_0x122887(0xd24)] = !0x1, _0x38d36a[_0x122887(0xd0d)] = _0x3129cb, _0x38d36a['_constantMax'] = _0x3b273e, _0x38d36a;
        }
        static ['createByRandomTwoConstantSeparate'](_0x1f7363, _0x504e58) {
            var _0x1d3990 = _0x6027f5, _0x42aca1 = new _0x23370c();
            return _0x42aca1['_type'] = 0x2, _0x42aca1['_separateAxes'] = !0x0, _0x42aca1[_0x1d3990(0xd2a)] = _0x1f7363, _0x42aca1['_constantMaxSeparate'] = _0x504e58, _0x42aca1;
        }
        static [_0x6027f5(0xd12)](_0x887acf, _0x2fff58) {
            var _0x47450f = _0x6027f5, _0x3248c6 = new _0x23370c();
            return _0x3248c6[_0x47450f(0xa5e)] = 0x3, _0x3248c6[_0x47450f(0xd24)] = !0x1, _0x3248c6[_0x47450f(0xd13)] = _0x887acf, _0x3248c6[_0x47450f(0xd0e)] = _0x2fff58, _0x3248c6;
        }
        static [_0x6027f5(0xd35)](_0x47bd22, _0x2f5b5a, _0x3c6029, _0x2e49f0, _0x19332d, _0x94887b, _0x2b8a8e, _0xd7d4c4) {
            var _0x2eb9e2 = _0x6027f5, _0x1fdc75 = new _0x23370c();
            return _0x1fdc75[_0x2eb9e2(0xa5e)] = 0x3, _0x1fdc75['_separateAxes'] = !0x0, _0x1fdc75[_0x2eb9e2(0xd2c)] = _0x47bd22, _0x1fdc75[_0x2eb9e2(0xd2d)] = _0x2f5b5a, _0x1fdc75[_0x2eb9e2(0xd36)] = _0x3c6029, _0x1fdc75['_gradientYMax'] = _0x2e49f0, _0x1fdc75[_0x2eb9e2(0xd2f)] = _0x19332d, _0x1fdc75[_0x2eb9e2(0xd37)] = _0x94887b, _0x1fdc75[_0x2eb9e2(0xd30)] = _0x2b8a8e, _0x1fdc75[_0x2eb9e2(0xd31)] = _0xd7d4c4, _0x1fdc75;
        }
        get [_0x6027f5(0x2cc)]() {
            var _0x336fe9 = _0x6027f5;
            return this[_0x336fe9(0xa5e)];
        }
        get [_0x6027f5(0xd38)]() {
            var _0x5e80c5 = _0x6027f5;
            return this[_0x5e80c5(0xd24)];
        }
        get [_0x6027f5(0xd14)]() {
            var _0x4fdaee = _0x6027f5;
            return this[_0x4fdaee(0xd0c)];
        }
        get [_0x6027f5(0xd39)]() {
            var _0x50f5b2 = _0x6027f5;
            return this[_0x50f5b2(0xd25)];
        }
        get ['gradient']() {
            var _0x41c4e2 = _0x6027f5;
            return this[_0x41c4e2(0xd10)];
        }
        get [_0x6027f5(0xd3a)]() {
            var _0x47d43c = _0x6027f5;
            return this[_0x47d43c(0xd26)];
        }
        get [_0x6027f5(0xd3b)]() {
            return this['_gradientY'];
        }
        get [_0x6027f5(0xd3c)]() {
            var _0x4d5e0a = _0x6027f5;
            return this[_0x4d5e0a(0xd28)];
        }
        get [_0x6027f5(0xd3d)]() {
            var _0x3abcd7 = _0x6027f5;
            return this[_0x3abcd7(0xd29)];
        }
        get [_0x6027f5(0xd15)]() {
            var _0xdb35e = _0x6027f5;
            return this[_0xdb35e(0xd0d)];
        }
        get [_0x6027f5(0xd16)]() {
            var _0x59f9f0 = _0x6027f5;
            return this[_0x59f9f0(0xd11)];
        }
        get [_0x6027f5(0xd3e)]() {
            var _0x41a52b = _0x6027f5;
            return this[_0x41a52b(0xd2a)];
        }
        get [_0x6027f5(0xd3f)]() {
            var _0x19036c = _0x6027f5;
            return this[_0x19036c(0xd2b)];
        }
        get ['gradientMin']() {
            var _0x1f6244 = _0x6027f5;
            return this[_0x1f6244(0xd13)];
        }
        get [_0x6027f5(0xd19)]() {
            var _0x5801ad = _0x6027f5;
            return this[_0x5801ad(0xd0e)];
        }
        get [_0x6027f5(0xd40)]() {
            return this['_gradientXMin'];
        }
        get ['gradientXMax']() {
            var _0x30082b = _0x6027f5;
            return this[_0x30082b(0xd2d)];
        }
        get ['gradientYMin']() {
            var _0x2051cd = _0x6027f5;
            return this[_0x2051cd(0xd36)];
        }
        get [_0x6027f5(0xd41)]() {
            var _0x412df6 = _0x6027f5;
            return this[_0x412df6(0xd2e)];
        }
        get [_0x6027f5(0xd42)]() {
            var _0xe16170 = _0x6027f5;
            return this[_0xe16170(0xd2f)];
        }
        get [_0x6027f5(0xd43)]() {
            var _0x169b00 = _0x6027f5;
            return this[_0x169b00(0xd37)];
        }
        get ['gradientWMin']() {
            var _0x5dddfa = _0x6027f5;
            return this[_0x5dddfa(0xd30)];
        }
        get [_0x6027f5(0xd44)]() {
            var _0x29d4ec = _0x6027f5;
            return this[_0x29d4ec(0xd31)];
        }
        [_0x6027f5(0x1fc)](_0x810b8b) {
            var _0x20774f = _0x6027f5, _0x49597a = _0x810b8b;
            _0x49597a[_0x20774f(0xa5e)] = this[_0x20774f(0xa5e)], _0x49597a[_0x20774f(0xd24)] = this[_0x20774f(0xd24)], _0x49597a[_0x20774f(0xd0c)] = this[_0x20774f(0xd0c)], this[_0x20774f(0xd25)][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd25)]), this['_gradient']['cloneTo'](_0x49597a[_0x20774f(0xd10)]), this['_gradientX'][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd26)]), this['_gradientY'][_0x20774f(0x1fc)](_0x49597a['_gradientY']), this[_0x20774f(0xd28)][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd28)]), _0x49597a['_constantMin'] = this[_0x20774f(0xd0d)], _0x49597a[_0x20774f(0xd11)] = this[_0x20774f(0xd11)], this[_0x20774f(0xd2a)][_0x20774f(0x1fc)](_0x49597a['_constantMinSeparate']), this[_0x20774f(0xd2b)][_0x20774f(0x1fc)](_0x49597a['_constantMaxSeparate']), this['_gradientMin'][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd13)]), this[_0x20774f(0xd0e)][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd0e)]), this[_0x20774f(0xd2c)][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd2c)]), this['_gradientXMax'][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd2d)]), this[_0x20774f(0xd36)][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd36)]), this[_0x20774f(0xd2e)]['cloneTo'](_0x49597a[_0x20774f(0xd2e)]), this[_0x20774f(0xd2f)]['cloneTo'](_0x49597a[_0x20774f(0xd2f)]), this['_gradientZMax'][_0x20774f(0x1fc)](_0x49597a[_0x20774f(0xd37)]);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1c88dc = new _0x23370c();
            return this['cloneTo'](_0x1c88dc), _0x1c88dc;
        }
    }
    class _0x5da7ff {
        constructor() {
            var _0x14f0b2 = _0x6027f5;
            this[_0x14f0b2(0xd45)] = 0x0, this[_0x14f0b2(0x864)] = new Float32Array(0x8);
        }
        get [_0x6027f5(0xd46)]() {
            var _0x4dd6de = _0x6027f5;
            return this[_0x4dd6de(0xd45)] / 0x2;
        }
        [_0x6027f5(0x207)](_0x25d43c, _0x155e81) {
            var _0x1171d3 = _0x6027f5;
            this['_currentLength'] < 0x8 ? (0x6 === this['_currentLength'] && 0x1 !== _0x25d43c && (_0x25d43c = 0x1, console[_0x1171d3(0x93b)]('Warning:the\x20forth\x20key\x20is\x20\x20be\x20force\x20set\x20to\x201.')), this[_0x1171d3(0x864)][this[_0x1171d3(0xd45)]++] = _0x25d43c, this[_0x1171d3(0x864)][this[_0x1171d3(0xd45)]++] = _0x155e81) : console[_0x1171d3(0x93b)](_0x1171d3(0xd47));
        }
        ['cloneTo'](_0xb21722) {
            var _0x5ebe9f = _0x6027f5, _0x3c16f1 = _0xb21722;
            _0x3c16f1['_currentLength'] = this[_0x5ebe9f(0xd45)];
            for (var _0x24c4b6 = _0x3c16f1[_0x5ebe9f(0x864)], _0x55893e = 0x0, _0xcf612a = this[_0x5ebe9f(0x864)][_0x5ebe9f(0x205)]; _0x55893e < _0xcf612a; _0x55893e++)
                _0x24c4b6[_0x55893e] = this[_0x5ebe9f(0x864)][_0x55893e];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x38151e = _0x6027f5, _0x5b3bcb = new _0x5da7ff();
            return this[_0x38151e(0x1fc)](_0x5b3bcb), _0x5b3bcb;
        }
    }
    class _0x239637 {
        constructor() {
            var _0x231e53 = _0x6027f5;
            this['_currentLength'] = 0x0, this[_0x231e53(0x864)] = new Float32Array(0x8);
        }
        get [_0x6027f5(0xd46)]() {
            var _0x2d8847 = _0x6027f5;
            return this[_0x2d8847(0xd45)] / 0x2;
        }
        [_0x6027f5(0x207)](_0x211a75, _0x1cb236) {
            var _0x447a09 = _0x6027f5;
            this[_0x447a09(0xd45)] < 0x8 ? (0x6 === this['_currentLength'] && 0x1 !== _0x211a75 && (_0x211a75 = 0x1, console[_0x447a09(0x93b)](_0x447a09(0xd48))), this[_0x447a09(0x864)][this[_0x447a09(0xd45)]++] = _0x211a75, this['_elements'][this[_0x447a09(0xd45)]++] = _0x1cb236) : console[_0x447a09(0x93b)]('GradientDataNumber\x20warning:data\x20count\x20must\x20lessEqual\x20than\x204');
        }
        [_0x6027f5(0xd49)](_0x3b87e1) {
            var _0x418771 = _0x6027f5;
            return this[_0x418771(0x864)][0x2 * _0x3b87e1];
        }
        [_0x6027f5(0xd4a)](_0x2d25c7) {
            return this['_elements'][0x2 * _0x2d25c7 + 0x1];
        }
        [_0x6027f5(0xd4b)]() {
            var _0x201901 = _0x6027f5;
            for (var _0x253811 = 0x0, _0x31bbce = 0x0, _0x14cca3 = 0x0, _0x2f4e4f = this[_0x201901(0xd45)] - 0x2; _0x14cca3 < _0x2f4e4f; _0x14cca3 += 0x2) {
                var _0x2356ba = this[_0x201901(0x864)][_0x14cca3 + 0x1];
                _0x2356ba += this[_0x201901(0x864)][_0x14cca3 + 0x3], _0x253811 += _0x2356ba *= this[_0x201901(0x864)][_0x14cca3 + 0x2] - this['_elements'][_0x14cca3], _0x31bbce++;
            }
            return _0x253811 / _0x31bbce;
        }
        [_0x6027f5(0x1fc)](_0x3391d4) {
            var _0x415dd7 = _0x6027f5, _0x3ab7c3 = _0x3391d4;
            _0x3ab7c3[_0x415dd7(0xd45)] = this[_0x415dd7(0xd45)];
            for (var _0x369e17 = _0x3ab7c3['_elements'], _0x35a979 = 0x0, _0xecea82 = this[_0x415dd7(0x864)][_0x415dd7(0x205)]; _0x35a979 < _0xecea82; _0x35a979++)
                _0x369e17[_0x35a979] = this['_elements'][_0x35a979];
        }
        ['clone']() {
            var _0x4ea4ae = new _0x239637();
            return this['cloneTo'](_0x4ea4ae), _0x4ea4ae;
        }
    }
    class _0x5bbf53 {
        constructor() {
            var _0x4d6fe0 = _0x6027f5;
            this[_0x4d6fe0(0xa5e)] = 0x0, this[_0x4d6fe0(0xd24)] = !0x1, this[_0x4d6fe0(0xd10)] = null, this[_0x4d6fe0(0xd26)] = null, this[_0x4d6fe0(0xd27)] = null, this[_0x4d6fe0(0xd28)] = null, this[_0x4d6fe0(0xd0d)] = 0x0, this[_0x4d6fe0(0xd11)] = 0x0, this[_0x4d6fe0(0xd2a)] = null, this[_0x4d6fe0(0xd2b)] = null, this[_0x4d6fe0(0xd13)] = null, this[_0x4d6fe0(0xd0e)] = null, this[_0x4d6fe0(0xd2c)] = null, this[_0x4d6fe0(0xd2d)] = null, this[_0x4d6fe0(0xd36)] = null, this[_0x4d6fe0(0xd2e)] = null, this[_0x4d6fe0(0xd2f)] = null, this[_0x4d6fe0(0xd37)] = null;
        }
        static [_0x6027f5(0xd0f)](_0x7b5ad8) {
            var _0x878f53 = _0x6027f5, _0x40740b = new _0x5bbf53();
            return _0x40740b[_0x878f53(0xa5e)] = 0x0, _0x40740b['_separateAxes'] = !0x1, _0x40740b['_gradient'] = _0x7b5ad8, _0x40740b;
        }
        static [_0x6027f5(0xd33)](_0x663d58, _0xa8b65d, _0x5bcd4c) {
            var _0x33d667 = _0x6027f5, _0x298b16 = new _0x5bbf53();
            return _0x298b16[_0x33d667(0xa5e)] = 0x0, _0x298b16['_separateAxes'] = !0x0, _0x298b16['_gradientX'] = _0x663d58, _0x298b16[_0x33d667(0xd27)] = _0xa8b65d, _0x298b16['_gradientZ'] = _0x5bcd4c, _0x298b16;
        }
        static [_0x6027f5(0xd34)](_0xa375b6, _0x3b1864) {
            var _0x5bff78 = _0x6027f5, _0x4d67f1 = new _0x5bbf53();
            return _0x4d67f1[_0x5bff78(0xa5e)] = 0x1, _0x4d67f1['_separateAxes'] = !0x1, _0x4d67f1[_0x5bff78(0xd0d)] = _0xa375b6, _0x4d67f1[_0x5bff78(0xd11)] = _0x3b1864, _0x4d67f1;
        }
        static [_0x6027f5(0xd4c)](_0x142c65, _0xf2451a) {
            var _0x2a62d2 = _0x6027f5, _0x2b744b = new _0x5bbf53();
            return _0x2b744b[_0x2a62d2(0xa5e)] = 0x1, _0x2b744b[_0x2a62d2(0xd24)] = !0x0, _0x2b744b['_constantMinSeparate'] = _0x142c65, _0x2b744b[_0x2a62d2(0xd2b)] = _0xf2451a, _0x2b744b;
        }
        static [_0x6027f5(0xd12)](_0x2a3cb7, _0x31a452) {
            var _0x1bd977 = _0x6027f5, _0x3359ea = new _0x5bbf53();
            return _0x3359ea['_type'] = 0x2, _0x3359ea[_0x1bd977(0xd24)] = !0x1, _0x3359ea[_0x1bd977(0xd13)] = _0x2a3cb7, _0x3359ea['_gradientMax'] = _0x31a452, _0x3359ea;
        }
        static [_0x6027f5(0xd35)](_0x29cc01, _0x41056f, _0x1c78d5, _0x378166, _0x6fb30f, _0x225858) {
            var _0x3258df = _0x6027f5, _0x46d20f = new _0x5bbf53();
            return _0x46d20f['_type'] = 0x2, _0x46d20f[_0x3258df(0xd24)] = !0x0, _0x46d20f[_0x3258df(0xd2c)] = _0x29cc01, _0x46d20f[_0x3258df(0xd2d)] = _0x41056f, _0x46d20f['_gradientYMin'] = _0x1c78d5, _0x46d20f[_0x3258df(0xd2e)] = _0x378166, _0x46d20f[_0x3258df(0xd2f)] = _0x6fb30f, _0x46d20f[_0x3258df(0xd37)] = _0x225858, _0x46d20f;
        }
        get ['type']() {
            return this['_type'];
        }
        get [_0x6027f5(0xd38)]() {
            var _0x1bf0f9 = _0x6027f5;
            return this[_0x1bf0f9(0xd24)];
        }
        get [_0x6027f5(0xd17)]() {
            return this['_gradient'];
        }
        get [_0x6027f5(0xd3a)]() {
            return this['_gradientX'];
        }
        get [_0x6027f5(0xd3b)]() {
            var _0x11cd33 = _0x6027f5;
            return this[_0x11cd33(0xd27)];
        }
        get [_0x6027f5(0xd3c)]() {
            return this['_gradientZ'];
        }
        get [_0x6027f5(0xd15)]() {
            var _0x50f4e8 = _0x6027f5;
            return this[_0x50f4e8(0xd0d)];
        }
        get [_0x6027f5(0xd16)]() {
            var _0x5bc0a9 = _0x6027f5;
            return this[_0x5bc0a9(0xd11)];
        }
        get [_0x6027f5(0xd3e)]() {
            var _0xeb7ab5 = _0x6027f5;
            return this[_0xeb7ab5(0xd2a)];
        }
        get [_0x6027f5(0xd3f)]() {
            var _0xb22cb2 = _0x6027f5;
            return this[_0xb22cb2(0xd2b)];
        }
        get [_0x6027f5(0xd18)]() {
            var _0x4ab6b7 = _0x6027f5;
            return this[_0x4ab6b7(0xd13)];
        }
        get [_0x6027f5(0xd19)]() {
            return this['_gradientMax'];
        }
        get ['gradientXMin']() {
            var _0x55e49d = _0x6027f5;
            return this[_0x55e49d(0xd2c)];
        }
        get [_0x6027f5(0xd4d)]() {
            return this['_gradientXMax'];
        }
        get [_0x6027f5(0xd4e)]() {
            return this['_gradientYMin'];
        }
        get [_0x6027f5(0xd41)]() {
            var _0xb5d5b9 = _0x6027f5;
            return this[_0xb5d5b9(0xd2e)];
        }
        get ['gradientZMin']() {
            var _0x488a23 = _0x6027f5;
            return this[_0x488a23(0xd2f)];
        }
        get [_0x6027f5(0xd43)]() {
            return this['_gradientZMax'];
        }
        [_0x6027f5(0xd4f)](_0xafa154 = !0x1) {
            var _0x592694 = _0x6027f5, _0x2663f6, _0x2a20d5, _0x16c50c = -Number[_0x592694(0xa3d)];
            switch (this[_0x592694(0xa5e)]) {
            case 0x0:
                if (this['_separateAxes']) {
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this['_gradientX']['gradientCount']; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd26)][_0x592694(0xd4a)](_0x2663f6));
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd27)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd27)][_0x592694(0xd4a)](_0x2663f6));
                    if (_0xafa154) {
                        for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd28)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                            _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd28)][_0x592694(0xd4a)](_0x2663f6));
                    }
                } else {
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd10)]['gradientCount']; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd10)][_0x592694(0xd4a)](_0x2663f6));
                }
                break;
            case 0x1:
                this[_0x592694(0xd24)] ? (_0x16c50c = Math[_0x592694(0x20c)](this['_constantMinSeparate']['x'], this['_constantMaxSeparate']['x']), _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd2a)]['y']), _0xafa154 && (_0x16c50c = _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd2b)]['z']))) : _0x16c50c = Math[_0x592694(0x20c)](this['_constantMin'], this[_0x592694(0xd11)]);
                break;
            case 0x2:
                if (this[_0x592694(0xd24)]) {
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd2c)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd2c)][_0x592694(0xd4a)](_0x2663f6));
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd2d)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd2d)][_0x592694(0xd4a)](_0x2663f6));
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd36)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd36)][_0x592694(0xd4a)](_0x2663f6));
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd37)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this['_gradientZMax']['getValueByIndex'](_0x2663f6));
                    if (_0xafa154) {
                        for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd2f)]['gradientCount']; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                            _0x16c50c = Math[_0x592694(0x20c)](_0x16c50c, this[_0x592694(0xd2f)][_0x592694(0xd4a)](_0x2663f6));
                        for (_0x2663f6 = 0x0, _0x2a20d5 = this['_gradientZMax']['gradientCount']; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                            _0x16c50c = Math['max'](_0x16c50c, this[_0x592694(0xd37)][_0x592694(0xd4a)](_0x2663f6));
                    }
                } else {
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd13)][_0x592694(0xd46)]; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math['max'](_0x16c50c, this[_0x592694(0xd13)][_0x592694(0xd4a)](_0x2663f6));
                    for (_0x2663f6 = 0x0, _0x2a20d5 = this[_0x592694(0xd0e)]['gradientCount']; _0x2663f6 < _0x2a20d5; _0x2663f6++)
                        _0x16c50c = Math['max'](_0x16c50c, this[_0x592694(0xd0e)][_0x592694(0xd4a)](_0x2663f6));
                }
            }
            return _0x16c50c;
        }
        [_0x6027f5(0x1fc)](_0x2c2645) {
            var _0x37ea5c = _0x6027f5, _0x2e7cf9 = _0x2c2645;
            _0x2e7cf9[_0x37ea5c(0xa5e)] = this['_type'], _0x2e7cf9[_0x37ea5c(0xd24)] = this[_0x37ea5c(0xd24)], this['_gradient'][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd10)]), this[_0x37ea5c(0xd26)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd26)]), this[_0x37ea5c(0xd27)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd27)]), this[_0x37ea5c(0xd28)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd28)]), _0x2e7cf9[_0x37ea5c(0xd0d)] = this[_0x37ea5c(0xd0d)], _0x2e7cf9[_0x37ea5c(0xd11)] = this[_0x37ea5c(0xd11)], this[_0x37ea5c(0xd2a)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd2a)]), this[_0x37ea5c(0xd2b)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd2b)]), this[_0x37ea5c(0xd13)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd13)]), this['_gradientMax']['cloneTo'](_0x2e7cf9[_0x37ea5c(0xd0e)]), this[_0x37ea5c(0xd2c)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd2c)]), this[_0x37ea5c(0xd2d)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd2d)]), this[_0x37ea5c(0xd36)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd36)]), this[_0x37ea5c(0xd2e)][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd2e)]), this['_gradientZMin'][_0x37ea5c(0x1fc)](_0x2e7cf9['_gradientZMin']), this['_gradientZMax'][_0x37ea5c(0x1fc)](_0x2e7cf9[_0x37ea5c(0xd37)]);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x6cb71 = new _0x5bbf53();
            return this['cloneTo'](_0x6cb71), _0x6cb71;
        }
    }
    class _0x5c43e7 {
        constructor() {
            var _0x3930b5 = _0x6027f5;
            this[_0x3930b5(0xa5e)] = 0x0, this['_constant'] = null, this[_0x3930b5(0xd26)] = null, this[_0x3930b5(0xd27)] = null, this[_0x3930b5(0xd28)] = null, this[_0x3930b5(0xd0d)] = null, this[_0x3930b5(0xd11)] = null, this[_0x3930b5(0xd2c)] = null, this[_0x3930b5(0xd2d)] = null, this['_gradientYMin'] = null, this[_0x3930b5(0xd2e)] = null, this[_0x3930b5(0xd2f)] = null, this[_0x3930b5(0xd37)] = null;
        }
        static [_0x6027f5(0xd1b)](_0x252249) {
            var _0x2705c0 = _0x6027f5, _0x30f653 = new _0x5c43e7();
            return _0x30f653[_0x2705c0(0xa5e)] = 0x0, _0x30f653[_0x2705c0(0xd0c)] = _0x252249, _0x30f653;
        }
        static ['createByGradient'](_0x544b8e, _0x2eb090, _0x4c0b54) {
            var _0x465dc7 = _0x6027f5, _0x2b4600 = new _0x5c43e7();
            return _0x2b4600['_type'] = 0x1, _0x2b4600[_0x465dc7(0xd26)] = _0x544b8e, _0x2b4600[_0x465dc7(0xd27)] = _0x2eb090, _0x2b4600[_0x465dc7(0xd28)] = _0x4c0b54, _0x2b4600;
        }
        static [_0x6027f5(0xd34)](_0x26152e, _0x5642da) {
            var _0x40b74f = _0x6027f5, _0x5bdda3 = new _0x5c43e7();
            return _0x5bdda3[_0x40b74f(0xa5e)] = 0x2, _0x5bdda3[_0x40b74f(0xd0d)] = _0x26152e, _0x5bdda3['_constantMax'] = _0x5642da, _0x5bdda3;
        }
        static [_0x6027f5(0xd12)](_0x32c137, _0x480c31, _0x42433b, _0x12c661, _0x60f098, _0x24a32f) {
            var _0x4d767d = _0x6027f5, _0x479a34 = new _0x5c43e7();
            return _0x479a34[_0x4d767d(0xa5e)] = 0x3, _0x479a34[_0x4d767d(0xd2c)] = _0x32c137, _0x479a34['_gradientXMax'] = _0x480c31, _0x479a34[_0x4d767d(0xd36)] = _0x42433b, _0x479a34[_0x4d767d(0xd2e)] = _0x12c661, _0x479a34[_0x4d767d(0xd2f)] = _0x60f098, _0x479a34['_gradientZMax'] = _0x24a32f, _0x479a34;
        }
        get [_0x6027f5(0x2cc)]() {
            var _0x372972 = _0x6027f5;
            return this[_0x372972(0xa5e)];
        }
        get [_0x6027f5(0xd14)]() {
            return this['_constant'];
        }
        get [_0x6027f5(0xd3a)]() {
            var _0x42440e = _0x6027f5;
            return this[_0x42440e(0xd26)];
        }
        get [_0x6027f5(0xd3b)]() {
            var _0x50a5f8 = _0x6027f5;
            return this[_0x50a5f8(0xd27)];
        }
        get ['gradientZ']() {
            var _0x4ddc8d = _0x6027f5;
            return this[_0x4ddc8d(0xd28)];
        }
        get [_0x6027f5(0xd15)]() {
            var _0x142ce3 = _0x6027f5;
            return this[_0x142ce3(0xd0d)];
        }
        get ['constantMax']() {
            return this['_constantMax'];
        }
        get [_0x6027f5(0xd40)]() {
            var _0x4f67c6 = _0x6027f5;
            return this[_0x4f67c6(0xd2c)];
        }
        get [_0x6027f5(0xd4d)]() {
            return this['_gradientXMax'];
        }
        get [_0x6027f5(0xd4e)]() {
            var _0x277e8c = _0x6027f5;
            return this[_0x277e8c(0xd36)];
        }
        get [_0x6027f5(0xd41)]() {
            return this['_gradientYMax'];
        }
        get [_0x6027f5(0xd42)]() {
            var _0x5ba9a3 = _0x6027f5;
            return this[_0x5ba9a3(0xd2f)];
        }
        get ['gradientZMax']() {
            var _0x1c219a = _0x6027f5;
            return this[_0x1c219a(0xd37)];
        }
        [_0x6027f5(0x1fc)](_0x4713f0) {
            var _0x44d92f = _0x6027f5, _0x17d7b9 = _0x4713f0;
            _0x17d7b9[_0x44d92f(0xa5e)] = this[_0x44d92f(0xa5e)], this[_0x44d92f(0xd0c)]['cloneTo'](_0x17d7b9[_0x44d92f(0xd0c)]), this[_0x44d92f(0xd26)][_0x44d92f(0x1fc)](_0x17d7b9['_gradientX']), this[_0x44d92f(0xd27)][_0x44d92f(0x1fc)](_0x17d7b9['_gradientY']), this[_0x44d92f(0xd28)][_0x44d92f(0x1fc)](_0x17d7b9[_0x44d92f(0xd28)]), this[_0x44d92f(0xd0d)]['cloneTo'](_0x17d7b9[_0x44d92f(0xd0d)]), this[_0x44d92f(0xd11)][_0x44d92f(0x1fc)](_0x17d7b9[_0x44d92f(0xd11)]), this[_0x44d92f(0xd2c)][_0x44d92f(0x1fc)](_0x17d7b9['_gradientXMin']), this[_0x44d92f(0xd2d)][_0x44d92f(0x1fc)](_0x17d7b9[_0x44d92f(0xd2d)]), this[_0x44d92f(0xd36)][_0x44d92f(0x1fc)](_0x17d7b9[_0x44d92f(0xd36)]), this[_0x44d92f(0xd2e)]['cloneTo'](_0x17d7b9['_gradientYMax']), this[_0x44d92f(0xd2f)]['cloneTo'](_0x17d7b9['_gradientZMin']), this[_0x44d92f(0xd37)]['cloneTo'](_0x17d7b9[_0x44d92f(0xd37)]);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1cd633 = _0x6027f5, _0x5ea260 = new _0x5c43e7();
            return this[_0x1cd633(0x1fc)](_0x5ea260), _0x5ea260;
        }
    }
    class _0xc99a84 {
        constructor(_0x1d2657) {
            var _0x15a0c3 = _0x6027f5;
            this[_0x15a0c3(0xd50)] = _0x1d2657;
        }
        get [_0x6027f5(0xd51)]() {
            return this['_angularVelocity'];
        }
        ['cloneTo'](_0x2f226e) {
            var _0xcddb6 = _0x6027f5, _0x3a59a7 = _0x2f226e;
            this[_0xcddb6(0xd50)]['cloneTo'](_0x3a59a7[_0xcddb6(0xd50)]), _0x3a59a7[_0xcddb6(0x659)] = this['enable'];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x3dff1d = _0x6027f5, _0x1c877b;
            switch (this['_angularVelocity'][_0x3dff1d(0x2cc)]) {
            case 0x0:
                _0x1c877b = this[_0x3dff1d(0xd50)][_0x3dff1d(0xd38)] ? _0x23370c[_0x3dff1d(0xd32)](this[_0x3dff1d(0xd50)][_0x3dff1d(0xd39)][_0x3dff1d(0x1fd)]()) : _0x23370c[_0x3dff1d(0xd1b)](this[_0x3dff1d(0xd50)][_0x3dff1d(0xd14)]);
                break;
            case 0x1:
                _0x1c877b = this[_0x3dff1d(0xd50)][_0x3dff1d(0xd38)] ? _0x23370c['createByGradientSeparate'](this[_0x3dff1d(0xd50)]['gradientX'][_0x3dff1d(0x1fd)](), this[_0x3dff1d(0xd50)][_0x3dff1d(0xd3b)]['clone'](), this[_0x3dff1d(0xd50)]['gradientZ'][_0x3dff1d(0x1fd)]()) : _0x23370c[_0x3dff1d(0xd0f)](this['_angularVelocity'][_0x3dff1d(0xd17)][_0x3dff1d(0x1fd)]());
                break;
            case 0x2:
                _0x1c877b = this[_0x3dff1d(0xd50)]['separateAxes'] ? _0x23370c[_0x3dff1d(0xd4c)](this['_angularVelocity'][_0x3dff1d(0xd3e)][_0x3dff1d(0x1fd)](), this[_0x3dff1d(0xd50)][_0x3dff1d(0xd3f)]['clone']()) : _0x23370c[_0x3dff1d(0xd34)](this[_0x3dff1d(0xd50)][_0x3dff1d(0xd15)], this[_0x3dff1d(0xd50)][_0x3dff1d(0xd16)]);
                break;
            case 0x3:
                _0x1c877b = this['_angularVelocity'][_0x3dff1d(0xd38)] ? _0x23370c[_0x3dff1d(0xd35)](this[_0x3dff1d(0xd50)][_0x3dff1d(0xd40)]['clone'](), this[_0x3dff1d(0xd50)]['gradientYMin'][_0x3dff1d(0x1fd)](), this['_angularVelocity']['gradientZMin'][_0x3dff1d(0x1fd)](), this['_angularVelocity'][_0x3dff1d(0xd52)]['clone'](), this[_0x3dff1d(0xd50)][_0x3dff1d(0xd4d)][_0x3dff1d(0x1fd)](), this[_0x3dff1d(0xd50)][_0x3dff1d(0xd41)][_0x3dff1d(0x1fd)](), this[_0x3dff1d(0xd50)]['gradientZMax']['clone'](), this['_angularVelocity']['gradientWMax']['clone']()) : _0x23370c[_0x3dff1d(0xd12)](this[_0x3dff1d(0xd50)]['gradientMin'][_0x3dff1d(0x1fd)](), this[_0x3dff1d(0xd50)][_0x3dff1d(0xd19)]['clone']());
            }
            var _0x4fa5ce = new _0xc99a84(_0x1c877b);
            return _0x4fa5ce['enable'] = this[_0x3dff1d(0x659)], _0x4fa5ce;
        }
    }
    (_0x70f4ab = _0x18be32[_0x6027f5(0xd53)] || (_0x18be32[_0x6027f5(0xd53)] = {}))[_0x70f4ab[_0x6027f5(0xd54)] = 0x0] = _0x6027f5(0xd54), _0x70f4ab[_0x70f4ab[_0x6027f5(0xd55)] = 0x1] = _0x6027f5(0xd55), _0x70f4ab[_0x70f4ab[_0x6027f5(0xd56)] = 0x2] = 'Cone', _0x70f4ab[_0x70f4ab['Hemisphere'] = 0x3] = _0x6027f5(0xd57), _0x70f4ab[_0x70f4ab[_0x6027f5(0xd58)] = 0x4] = 'Sphere';
    class _0x584c19 {
        constructor() {
            var _0xaa918d = _0x6027f5;
            this[_0xaa918d(0x659)] = !0x0, this[_0xaa918d(0xd59)] = 0x0;
        }
        ['_getShapeBoundBox'](_0x3f96ca) {
            var _0x3bfff4 = _0x6027f5;
            throw new Error(_0x3bfff4(0xd5a));
        }
        [_0x6027f5(0xd5b)](_0x5cc083) {
            var _0x7a123b = _0x6027f5;
            throw new Error(_0x7a123b(0xd5a));
        }
        ['generatePositionAndDirection'](_0x35f425, _0x192657, _0x30879d = null, _0xb80162 = null) {
            var _0x1ebb36 = _0x6027f5;
            throw new Error(_0x1ebb36(0xd5a));
        }
        [_0x6027f5(0xd5c)](_0x36a76c, _0x110557, _0x4cf2f4) {
            var _0x576215 = _0x6027f5;
            this[_0x576215(0xd5d)](_0x36a76c);
            var _0x306323 = _0x36a76c[_0x576215(0x212)], _0x9d17ef = _0x36a76c[_0x576215(0x20c)];
            _0x3697cd[_0x576215(0x27b)](_0x306323, _0x110557, _0x306323), _0x3697cd['multiply'](_0x9d17ef, _0x110557, _0x9d17ef);
            var _0x191ef0 = new _0x4dce5e(new _0x3697cd(), new _0x3697cd());
            this[_0x576215(0xd59)] ? (_0x191ef0[_0x576215(0x212)] = new _0x3697cd(-0x1, -0x1, -0x1), _0x191ef0[_0x576215(0x20c)] = new _0x3697cd(0x1, 0x1, 0x1)) : this[_0x576215(0xd5b)](_0x191ef0);
            var _0x3009b9 = new _0x4dce5e(new _0x3697cd(), new _0x3697cd()), _0x4973e9 = _0x3009b9['min'], _0x3c6bc7 = _0x3009b9[_0x576215(0x20c)];
            _0x3697cd[_0x576215(0x1f9)](_0x191ef0[_0x576215(0x212)], _0x4cf2f4['y'], _0x4973e9), _0x3697cd[_0x576215(0x1f9)](_0x191ef0[_0x576215(0x20c)], _0x4cf2f4['y'], _0x3c6bc7), _0x3697cd[_0x576215(0x207)](_0x36a76c[_0x576215(0x212)], _0x4973e9, _0x4973e9), _0x3697cd[_0x576215(0x207)](_0x36a76c[_0x576215(0x20c)], _0x3c6bc7, _0x3c6bc7), _0x3697cd[_0x576215(0x212)](_0x36a76c[_0x576215(0x212)], _0x4973e9, _0x36a76c['min']), _0x3697cd[_0x576215(0x20c)](_0x36a76c[_0x576215(0x20c)], _0x4973e9, _0x36a76c[_0x576215(0x20c)]);
            var _0x521908 = new _0x4dce5e(new _0x3697cd(), new _0x3697cd()), _0xa214ca = _0x521908[_0x576215(0x212)], _0x28718e = _0x521908[_0x576215(0x20c)];
            _0x3697cd[_0x576215(0x1f9)](_0x191ef0[_0x576215(0x212)], _0x4cf2f4['x'], _0xa214ca), _0x3697cd['scale'](_0x191ef0['max'], _0x4cf2f4['x'], _0x28718e), _0x3697cd[_0x576215(0x212)](_0x521908[_0x576215(0x212)], _0x28718e, _0x4973e9), _0x3697cd[_0x576215(0x20c)](_0x521908[_0x576215(0x212)], _0x28718e, _0x3c6bc7), _0x3697cd[_0x576215(0x212)](_0x36a76c[_0x576215(0x212)], _0x4973e9, _0x36a76c[_0x576215(0x212)]), _0x3697cd[_0x576215(0x20c)](_0x36a76c[_0x576215(0x20c)], _0x4973e9, _0x36a76c[_0x576215(0x20c)]);
        }
        [_0x6027f5(0x1fc)](_0x1bd0b5) {
            var _0x56bb21 = _0x6027f5;
            _0x1bd0b5[_0x56bb21(0x659)] = this['enable'];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x57bd61 = _0x6027f5, _0x5ce16b = new _0x584c19();
            return this[_0x57bd61(0x1fc)](_0x5ce16b), _0x5ce16b;
        }
    }
    class _0x522276 {
        static ['_randomPointUnitArcCircle'](_0x422161, _0x18140f, _0x251121 = null) {
            var _0x4e1f0e = _0x6027f5, _0x255882;
            _0x255882 = _0x251121 ? _0x251121[_0x4e1f0e(0xd5e)]() * _0x422161 : Math[_0x4e1f0e(0xd5f)]() * _0x422161, _0x18140f['x'] = Math['cos'](_0x255882), _0x18140f['y'] = Math[_0x4e1f0e(0x27f)](_0x255882);
        }
        static ['_randomPointInsideUnitArcCircle'](_0x47aa3c, _0x224d69, _0x408a65 = null) {
            var _0x2c2cd8 = _0x6027f5, _0x18de71;
            _0x522276[_0x2c2cd8(0xd60)](_0x47aa3c, _0x224d69, _0x408a65), _0x18de71 = _0x408a65 ? Math[_0x2c2cd8(0x2ff)](_0x408a65[_0x2c2cd8(0xd5e)](), 0.5) : Math[_0x2c2cd8(0x2ff)](Math[_0x2c2cd8(0xd5f)](), 0.5), _0x224d69['x'] = _0x224d69['x'] * _0x18de71, _0x224d69['y'] = _0x224d69['y'] * _0x18de71;
        }
        static [_0x6027f5(0xd61)](_0x2394c0, _0x583572 = null) {
            var _0x525a1e = _0x6027f5, _0x5ab900;
            _0x5ab900 = _0x583572 ? _0x583572['getFloat']() * Math['PI'] * 0x2 : Math[_0x525a1e(0xd5f)]() * Math['PI'] * 0x2, _0x2394c0['x'] = Math['cos'](_0x5ab900), _0x2394c0['y'] = Math[_0x525a1e(0x27f)](_0x5ab900);
        }
        static ['_randomPointInsideUnitCircle'](_0x540143, _0x39074f = null) {
            var _0x24a22c = _0x6027f5, _0xab761d;
            _0x522276[_0x24a22c(0xd61)](_0x540143), _0xab761d = _0x39074f ? Math[_0x24a22c(0x2ff)](_0x39074f['getFloat'](), 0.5) : Math['pow'](Math[_0x24a22c(0xd5f)](), 0.5), _0x540143['x'] = _0x540143['x'] * _0xab761d, _0x540143['y'] = _0x540143['y'] * _0xab761d;
        }
        static [_0x6027f5(0xd62)](_0x39ff6d, _0x583a7f = null) {
            var _0x37a40e = _0x6027f5, _0x37e6b7, _0x4abfe7;
            _0x583a7f ? (_0x37e6b7 = _0x39ff6d['z'] = 0x2 * _0x583a7f['getFloat']() - 0x1, _0x4abfe7 = _0x583a7f['getFloat']() * Math['PI'] * 0x2) : (_0x37e6b7 = _0x39ff6d['z'] = 0x2 * Math[_0x37a40e(0xd5f)]() - 0x1, _0x4abfe7 = Math[_0x37a40e(0xd5f)]() * Math['PI'] * 0x2);
            var _0x158da1 = Math[_0x37a40e(0x1f3)](0x1 - _0x37e6b7 * _0x37e6b7);
            _0x39ff6d['x'] = _0x158da1 * Math[_0x37a40e(0x278)](_0x4abfe7), _0x39ff6d['y'] = _0x158da1 * Math[_0x37a40e(0x27f)](_0x4abfe7);
        }
        static [_0x6027f5(0xd63)](_0x7199ac, _0x143f1e = null) {
            var _0x3c9109 = _0x6027f5, _0x1e6acc;
            _0x522276['_randomPointUnitSphere'](_0x7199ac), _0x1e6acc = _0x143f1e ? Math[_0x3c9109(0x2ff)](_0x143f1e['getFloat'](), 0x1 / 0x3) : Math[_0x3c9109(0x2ff)](Math[_0x3c9109(0xd5f)](), 0x1 / 0x3), _0x7199ac['x'] = _0x7199ac['x'] * _0x1e6acc, _0x7199ac['y'] = _0x7199ac['y'] * _0x1e6acc, _0x7199ac['z'] = _0x7199ac['z'] * _0x1e6acc;
        }
        static ['_randomPointInsideHalfUnitBox'](_0x225374, _0x91caa0 = null) {
            var _0x4c703c = _0x6027f5;
            _0x91caa0 ? (_0x225374['x'] = _0x91caa0[_0x4c703c(0xd5e)]() - 0.5, _0x225374['y'] = _0x91caa0['getFloat']() - 0.5, _0x225374['z'] = _0x91caa0['getFloat']() - 0.5) : (_0x225374['x'] = Math[_0x4c703c(0xd5f)]() - 0.5, _0x225374['y'] = Math[_0x4c703c(0xd5f)]() - 0.5, _0x225374['z'] = Math[_0x4c703c(0xd5f)]() - 0.5);
        }
        constructor() {
        }
    }
    class _0x5a361a extends _0x584c19 {
        constructor() {
            var _0x5c617d = _0x6027f5;
            super(), this['shapeType'] = _0x18be32[_0x5c617d(0xd53)]['Box'], this['x'] = 0x1, this['y'] = 0x1, this['z'] = 0x1;
        }
        [_0x6027f5(0xd5d)](_0x150200) {
            var _0x414c87 = _0x6027f5, _0x128c15 = _0x150200[_0x414c87(0x212)];
            _0x128c15['x'] = 0.5 * -this['x'], _0x128c15['y'] = 0.5 * -this['y'], _0x128c15['z'] = 0.5 * -this['z'];
            var _0x53e476 = _0x150200['max'];
            _0x53e476['x'] = 0.5 * this['x'], _0x53e476['y'] = 0.5 * this['y'], _0x53e476['z'] = 0.5 * this['z'];
        }
        [_0x6027f5(0xd5b)](_0x4776a2) {
            var _0x77cf43 = _0x6027f5, _0x48f632 = _0x4776a2[_0x77cf43(0x212)];
            _0x48f632['x'] = 0x0, _0x48f632['y'] = 0x0, _0x48f632['z'] = 0x0;
            var _0x1e1b99 = _0x4776a2[_0x77cf43(0x20c)];
            _0x1e1b99['x'] = 0x0, _0x1e1b99['y'] = 0x1, _0x1e1b99['z'] = 0x0;
        }
        [_0x6027f5(0xd64)](_0x3e5cfa, _0x2086a8, _0x4f3160 = null, _0x2e718c = null) {
            var _0x3428d9 = _0x6027f5;
            _0x4f3160 ? (_0x4f3160['seed'] = _0x2e718c[0x10], _0x522276[_0x3428d9(0xd65)](_0x3e5cfa, _0x4f3160), _0x2e718c[0x10] = _0x4f3160[_0x3428d9(0xd66)]) : _0x522276[_0x3428d9(0xd65)](_0x3e5cfa), _0x3e5cfa['x'] = this['x'] * _0x3e5cfa['x'], _0x3e5cfa['y'] = this['y'] * _0x3e5cfa['y'], _0x3e5cfa['z'] = this['z'] * _0x3e5cfa['z'], this[_0x3428d9(0xd59)] ? _0x4f3160 ? (_0x4f3160[_0x3428d9(0xd66)] = _0x2e718c[0x11], _0x522276['_randomPointUnitSphere'](_0x2086a8, _0x4f3160), _0x2e718c[0x11] = _0x4f3160['seed']) : _0x522276['_randomPointUnitSphere'](_0x2086a8) : (_0x2086a8['x'] = 0x0, _0x2086a8['y'] = 0x0, _0x2086a8['z'] = 0x1);
        }
        [_0x6027f5(0x1fc)](_0x245a04) {
            var _0x3afc2d = _0x6027f5;
            super[_0x3afc2d(0x1fc)](_0x245a04);
            var _0x2a3a10 = _0x245a04;
            _0x2a3a10['x'] = this['x'], _0x2a3a10['y'] = this['y'], _0x2a3a10['z'] = this['z'], _0x2a3a10[_0x3afc2d(0xd59)] = this[_0x3afc2d(0xd59)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1a9ab5 = _0x6027f5, _0x12cb2e = new _0x5a361a();
            return this[_0x1a9ab5(0x1fc)](_0x12cb2e), _0x12cb2e;
        }
    }
    class _0xbe7dc2 extends _0x584c19 {
        constructor() {
            var _0x48e7c8 = _0x6027f5;
            super(), this[_0x48e7c8(0xd67)] = _0x18be32[_0x48e7c8(0xd53)]['Circle'], this['radius'] = 0x1, this['arc'] = 0x2 * Math['PI'], this[_0x48e7c8(0xd68)] = !0x1;
        }
        ['_getShapeBoundBox'](_0x4b180f) {
            var _0x1386bd = _0x6027f5, _0x450a0a = _0x4b180f[_0x1386bd(0x212)];
            _0x450a0a['x'] = _0x450a0a['z'] = -this[_0x1386bd(0x882)], _0x450a0a['y'] = 0x0;
            var _0xf622ae = _0x4b180f[_0x1386bd(0x20c)];
            _0xf622ae['x'] = _0xf622ae['z'] = this[_0x1386bd(0x882)], _0xf622ae['y'] = 0x0;
        }
        [_0x6027f5(0xd5b)](_0x1c4701) {
            var _0xb90fbe = _0x6027f5, _0x24d33e = _0x1c4701[_0xb90fbe(0x212)];
            _0x24d33e['x'] = _0x24d33e['y'] = -0x1, _0x24d33e['z'] = 0x0;
            var _0x45c310 = _0x1c4701[_0xb90fbe(0x20c)];
            _0x45c310['x'] = _0x45c310['y'] = 0x1, _0x45c310['z'] = 0x0;
        }
        [_0x6027f5(0xd64)](_0x447822, _0x44822f, _0xed9cb9 = null, _0x2d7a33 = null) {
            var _0x449698 = _0x6027f5, _0x17b730 = _0xbe7dc2[_0x449698(0xd69)];
            _0xed9cb9 ? (_0xed9cb9[_0x449698(0xd66)] = _0x2d7a33[0x10], this[_0x449698(0xd68)] ? _0x522276[_0x449698(0xd60)](this[_0x449698(0xd6a)], _0xbe7dc2['_tempPositionPoint'], _0xed9cb9) : _0x522276[_0x449698(0xd6b)](this[_0x449698(0xd6a)], _0xbe7dc2[_0x449698(0xd69)], _0xed9cb9), _0x2d7a33[0x10] = _0xed9cb9[_0x449698(0xd66)]) : this['emitFromEdge'] ? _0x522276[_0x449698(0xd60)](this['arc'], _0xbe7dc2[_0x449698(0xd69)]) : _0x522276['_randomPointInsideUnitArcCircle'](this['arc'], _0xbe7dc2['_tempPositionPoint']), _0x447822['x'] = -_0x17b730['x'], _0x447822['y'] = _0x17b730['y'], _0x447822['z'] = 0x0, _0x3697cd[_0x449698(0x1f9)](_0x447822, this['radius'], _0x447822), this[_0x449698(0xd59)] ? _0xed9cb9 ? (_0xed9cb9[_0x449698(0xd66)] = _0x2d7a33[0x11], _0x522276['_randomPointUnitSphere'](_0x44822f, _0xed9cb9), _0x2d7a33[0x11] = _0xed9cb9[_0x449698(0xd66)]) : _0x522276['_randomPointUnitSphere'](_0x44822f) : _0x447822['cloneTo'](_0x44822f);
        }
        [_0x6027f5(0x1fc)](_0x433268) {
            var _0x2a1090 = _0x6027f5;
            super[_0x2a1090(0x1fc)](_0x433268);
            var _0x122ec1 = _0x433268;
            _0x122ec1['radius'] = this[_0x2a1090(0x882)], _0x122ec1[_0x2a1090(0xd6a)] = this[_0x2a1090(0xd6a)], _0x122ec1[_0x2a1090(0xd68)] = this[_0x2a1090(0xd68)], _0x122ec1[_0x2a1090(0xd59)] = this[_0x2a1090(0xd59)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x2d36ab = _0x6027f5, _0x5ee081 = new _0xbe7dc2();
            return this[_0x2d36ab(0x1fc)](_0x5ee081), _0x5ee081;
        }
    }
    _0xbe7dc2[_0x6027f5(0xd69)] = new _0x30a72c();
    class _0x49c361 extends _0x584c19 {
        constructor() {
            var _0x13096e = _0x6027f5;
            super(), this['shapeType'] = _0x18be32[_0x13096e(0xd53)]['Cone'], this['angle'] = 0x19 / 0xb4 * Math['PI'], this[_0x13096e(0x882)] = 0x1, this[_0x13096e(0x205)] = 0x5, this[_0x13096e(0xd6c)] = 0x0;
        }
        [_0x6027f5(0xd5d)](_0xad57a5) {
            var _0x1b9eec = _0x6027f5;
            const _0x5e332f = this[_0x1b9eec(0x882)] + this[_0x1b9eec(0x205)] * Math[_0x1b9eec(0x27f)](this['angle']), _0x3e69bf = this[_0x1b9eec(0x205)] * Math[_0x1b9eec(0x278)](this[_0x1b9eec(0xd6d)]);
            var _0x16d77e = _0xad57a5['min'];
            _0x16d77e['x'] = _0x16d77e['y'] = -_0x5e332f, _0x16d77e['z'] = 0x0;
            var _0x11e2a3 = _0xad57a5[_0x1b9eec(0x20c)];
            _0x11e2a3['x'] = _0x11e2a3['y'] = _0x5e332f, _0x11e2a3['z'] = _0x3e69bf;
        }
        [_0x6027f5(0xd5b)](_0x3a361f) {
            var _0x15a262 = _0x6027f5;
            const _0x33e127 = Math[_0x15a262(0x27f)](this['angle']);
            var _0x41c79f = _0x3a361f[_0x15a262(0x212)];
            _0x41c79f['x'] = _0x41c79f['y'] = -_0x33e127, _0x41c79f['z'] = 0x0;
            var _0x2bb828 = _0x3a361f['max'];
            _0x2bb828['x'] = _0x2bb828['y'] = _0x33e127, _0x2bb828['z'] = 0x1;
        }
        [_0x6027f5(0xd64)](_0x3b9cb3, _0x128781, _0x1394e9 = null, _0x109c4e = null) {
            var _0x305c65 = _0x6027f5, _0x1dba63, _0x5da458, _0x4aa4a4, _0x2c038 = _0x49c361[_0x305c65(0xd69)], _0x59c19f = Math[_0x305c65(0x278)](this[_0x305c65(0xd6d)]), _0x134f75 = Math[_0x305c65(0x27f)](this[_0x305c65(0xd6d)]);
            switch (this[_0x305c65(0xd6c)]) {
            case 0x0:
                _0x1394e9 ? (_0x1394e9['seed'] = _0x109c4e[0x10], _0x522276[_0x305c65(0xd6e)](_0x49c361[_0x305c65(0xd69)], _0x1394e9), _0x109c4e[0x10] = _0x1394e9['seed']) : _0x522276[_0x305c65(0xd6e)](_0x49c361['_tempPositionPoint']), _0x1dba63 = _0x2c038['x'], _0x5da458 = _0x2c038['y'], _0x3b9cb3['x'] = _0x1dba63 * this['radius'], _0x3b9cb3['y'] = _0x5da458 * this[_0x305c65(0x882)], _0x3b9cb3['z'] = 0x0, this['randomDirection'] ? (_0x1394e9 ? (_0x1394e9[_0x305c65(0xd66)] = _0x109c4e[0x11], _0x522276[_0x305c65(0xd6e)](_0x49c361[_0x305c65(0xd6f)], _0x1394e9), _0x109c4e[0x11] = _0x1394e9[_0x305c65(0xd66)]) : _0x522276[_0x305c65(0xd6e)](_0x49c361[_0x305c65(0xd6f)]), _0x4aa4a4 = _0x49c361[_0x305c65(0xd6f)], _0x128781['x'] = _0x4aa4a4['x'] * _0x134f75, _0x128781['y'] = _0x4aa4a4['y'] * _0x134f75) : (_0x128781['x'] = _0x1dba63 * _0x134f75, _0x128781['y'] = _0x5da458 * _0x134f75), _0x128781['z'] = _0x59c19f;
                break;
            case 0x1:
                _0x1394e9 ? (_0x1394e9[_0x305c65(0xd66)] = _0x109c4e[0x10], _0x522276['_randomPointUnitCircle'](_0x49c361[_0x305c65(0xd69)], _0x1394e9), _0x109c4e[0x10] = _0x1394e9[_0x305c65(0xd66)]) : _0x522276[_0x305c65(0xd61)](_0x49c361['_tempPositionPoint']), _0x1dba63 = _0x2c038['x'], _0x5da458 = _0x2c038['y'], _0x3b9cb3['x'] = _0x1dba63 * this[_0x305c65(0x882)], _0x3b9cb3['y'] = _0x5da458 * this[_0x305c65(0x882)], _0x3b9cb3['z'] = 0x0, this[_0x305c65(0xd59)] ? (_0x1394e9 ? (_0x1394e9[_0x305c65(0xd66)] = _0x109c4e[0x11], _0x522276['_randomPointInsideUnitCircle'](_0x49c361['_tempDirectionPoint'], _0x1394e9), _0x109c4e[0x11] = _0x1394e9[_0x305c65(0xd66)]) : _0x522276[_0x305c65(0xd6e)](_0x49c361[_0x305c65(0xd6f)]), _0x4aa4a4 = _0x49c361[_0x305c65(0xd6f)], _0x128781['x'] = _0x4aa4a4['x'] * _0x134f75, _0x128781['y'] = _0x4aa4a4['y'] * _0x134f75) : (_0x128781['x'] = _0x1dba63 * _0x134f75, _0x128781['y'] = _0x5da458 * _0x134f75), _0x128781['z'] = _0x59c19f;
                break;
            case 0x2:
                _0x1394e9 ? (_0x1394e9[_0x305c65(0xd66)] = _0x109c4e[0x10], _0x522276[_0x305c65(0xd6e)](_0x49c361[_0x305c65(0xd69)], _0x1394e9)) : _0x522276[_0x305c65(0xd6e)](_0x49c361[_0x305c65(0xd69)]), _0x1dba63 = _0x2c038['x'], _0x5da458 = _0x2c038['y'], _0x3b9cb3['x'] = _0x1dba63 * this['radius'], _0x3b9cb3['y'] = _0x5da458 * this[_0x305c65(0x882)], _0x3b9cb3['z'] = 0x0, _0x128781['x'] = _0x1dba63 * _0x134f75, _0x128781['y'] = _0x5da458 * _0x134f75, _0x128781['z'] = _0x59c19f, _0x3697cd[_0x305c65(0x214)](_0x128781, _0x128781), _0x1394e9 ? (_0x3697cd[_0x305c65(0x1f9)](_0x128781, this['length'] * _0x1394e9['getFloat'](), _0x128781), _0x109c4e[0x10] = _0x1394e9['seed']) : _0x3697cd[_0x305c65(0x1f9)](_0x128781, this[_0x305c65(0x205)] * Math[_0x305c65(0xd5f)](), _0x128781), _0x3697cd['add'](_0x3b9cb3, _0x128781, _0x3b9cb3), this[_0x305c65(0xd59)] && (_0x1394e9 ? (_0x1394e9[_0x305c65(0xd66)] = _0x109c4e[0x11], _0x522276['_randomPointUnitSphere'](_0x128781, _0x1394e9), _0x109c4e[0x11] = _0x1394e9[_0x305c65(0xd66)]) : _0x522276['_randomPointUnitSphere'](_0x128781));
                break;
            case 0x3:
                _0x1394e9 ? (_0x1394e9[_0x305c65(0xd66)] = _0x109c4e[0x10], _0x522276[_0x305c65(0xd61)](_0x49c361[_0x305c65(0xd69)], _0x1394e9)) : _0x522276[_0x305c65(0xd61)](_0x49c361[_0x305c65(0xd69)]), _0x1dba63 = _0x2c038['x'], _0x5da458 = _0x2c038['y'], _0x3b9cb3['x'] = _0x1dba63 * this[_0x305c65(0x882)], _0x3b9cb3['y'] = _0x5da458 * this['radius'], _0x3b9cb3['z'] = 0x0, _0x128781['x'] = _0x1dba63 * _0x134f75, _0x128781['y'] = _0x5da458 * _0x134f75, _0x128781['z'] = _0x59c19f, _0x3697cd[_0x305c65(0x214)](_0x128781, _0x128781), _0x1394e9 ? (_0x3697cd['scale'](_0x128781, this['length'] * _0x1394e9[_0x305c65(0xd5e)](), _0x128781), _0x109c4e[0x10] = _0x1394e9[_0x305c65(0xd66)]) : _0x3697cd['scale'](_0x128781, this[_0x305c65(0x205)] * Math['random'](), _0x128781), _0x3697cd[_0x305c65(0x207)](_0x3b9cb3, _0x128781, _0x3b9cb3), this[_0x305c65(0xd59)] && (_0x1394e9 ? (_0x1394e9['seed'] = _0x109c4e[0x11], _0x522276[_0x305c65(0xd62)](_0x128781, _0x1394e9), _0x109c4e[0x11] = _0x1394e9[_0x305c65(0xd66)]) : _0x522276[_0x305c65(0xd62)](_0x128781));
                break;
            default:
                throw new Error(_0x305c65(0xd70));
            }
        }
        ['cloneTo'](_0x34be80) {
            var _0x372357 = _0x6027f5;
            super[_0x372357(0x1fc)](_0x34be80);
            var _0x2295c6 = _0x34be80;
            _0x2295c6['angle'] = this[_0x372357(0xd6d)], _0x2295c6['radius'] = this[_0x372357(0x882)], _0x2295c6[_0x372357(0x205)] = this[_0x372357(0x205)], _0x2295c6[_0x372357(0xd6c)] = this[_0x372357(0xd6c)], _0x2295c6[_0x372357(0xd59)] = this[_0x372357(0xd59)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x3b02c5 = _0x6027f5, _0x235002 = new _0x49c361();
            return this[_0x3b02c5(0x1fc)](_0x235002), _0x235002;
        }
    }
    _0x49c361['_tempPositionPoint'] = new _0x30a72c(), _0x49c361[_0x6027f5(0xd6f)] = new _0x30a72c();
    class _0x4d35b2 extends _0x584c19 {
        constructor() {
            var _0x39f090 = _0x6027f5;
            super(), this[_0x39f090(0xd67)] = _0x18be32[_0x39f090(0xd53)][_0x39f090(0xd57)], this[_0x39f090(0x882)] = 0x1, this['emitFromShell'] = !0x1;
        }
        [_0x6027f5(0xd5d)](_0x3c1992) {
            var _0x28c59d = _0x6027f5, _0x3a07e4 = _0x3c1992[_0x28c59d(0x212)];
            _0x3a07e4['x'] = _0x3a07e4['y'] = _0x3a07e4['z'] = -this['radius'];
            var _0x4e502d = _0x3c1992[_0x28c59d(0x20c)];
            _0x4e502d['x'] = _0x4e502d['y'] = this[_0x28c59d(0x882)], _0x4e502d['z'] = 0x0;
        }
        [_0x6027f5(0xd5b)](_0xcc4939) {
            var _0x4227aa = _0x6027f5, _0x2508fc = _0xcc4939[_0x4227aa(0x212)];
            _0x2508fc['x'] = _0x2508fc['y'] = -0x1, _0x2508fc['z'] = 0x0;
            var _0x46568f = _0xcc4939[_0x4227aa(0x20c)];
            _0x46568f['x'] = _0x46568f['y'] = _0x46568f['z'] = 0x1;
        }
        [_0x6027f5(0xd64)](_0x5c0e14, _0x30e24a, _0x37e7c0 = null, _0x3741a1 = null) {
            var _0x2ccedd = _0x6027f5;
            _0x37e7c0 ? (_0x37e7c0['seed'] = _0x3741a1[0x10], this[_0x2ccedd(0xd71)] ? _0x522276['_randomPointUnitSphere'](_0x5c0e14, _0x37e7c0) : _0x522276['_randomPointInsideUnitSphere'](_0x5c0e14, _0x37e7c0), _0x3741a1[0x10] = _0x37e7c0[_0x2ccedd(0xd66)]) : this['emitFromShell'] ? _0x522276[_0x2ccedd(0xd62)](_0x5c0e14) : _0x522276[_0x2ccedd(0xd63)](_0x5c0e14), _0x3697cd[_0x2ccedd(0x1f9)](_0x5c0e14, this[_0x2ccedd(0x882)], _0x5c0e14);
            var _0x29ba60 = _0x5c0e14['z'];
            _0x29ba60 < 0x0 && (_0x5c0e14['z'] = -0x1 * _0x29ba60), this['randomDirection'] ? _0x37e7c0 ? (_0x37e7c0[_0x2ccedd(0xd66)] = _0x3741a1[0x11], _0x522276['_randomPointUnitSphere'](_0x30e24a, _0x37e7c0), _0x3741a1[0x11] = _0x37e7c0[_0x2ccedd(0xd66)]) : _0x522276['_randomPointUnitSphere'](_0x30e24a) : _0x5c0e14[_0x2ccedd(0x1fc)](_0x30e24a);
        }
        [_0x6027f5(0x1fc)](_0x4cd9c0) {
            var _0x449dea = _0x6027f5;
            super[_0x449dea(0x1fc)](_0x4cd9c0);
            var _0x15a4d4 = _0x4cd9c0;
            _0x15a4d4['radius'] = this[_0x449dea(0x882)], _0x15a4d4[_0x449dea(0xd71)] = this[_0x449dea(0xd71)], _0x15a4d4['randomDirection'] = this[_0x449dea(0xd59)];
        }
        ['clone']() {
            var _0x12be51 = _0x6027f5, _0x278274 = new _0x4d35b2();
            return this[_0x12be51(0x1fc)](_0x278274), _0x278274;
        }
    }
    class _0x47a2d1 extends _0x584c19 {
        constructor() {
            var _0x8839b4 = _0x6027f5;
            super(), this[_0x8839b4(0xd67)] = _0x18be32['ParticleSystemShapeType']['Sphere'], this[_0x8839b4(0x882)] = 0x1, this[_0x8839b4(0xd71)] = !0x1;
        }
        [_0x6027f5(0xd5d)](_0x30d286) {
            var _0x519e1d = _0x6027f5, _0x8e55c2 = _0x30d286[_0x519e1d(0x212)];
            _0x8e55c2['x'] = _0x8e55c2['y'] = _0x8e55c2['z'] = -this['radius'];
            var _0x2d60ea = _0x30d286[_0x519e1d(0x20c)];
            _0x2d60ea['x'] = _0x2d60ea['y'] = _0x2d60ea['z'] = this[_0x519e1d(0x882)];
        }
        [_0x6027f5(0xd5b)](_0x316ad0) {
            var _0x273470 = _0x6027f5, _0x5e1670 = _0x316ad0[_0x273470(0x212)];
            _0x5e1670['x'] = _0x5e1670['y'] = _0x5e1670['z'] = -0x1;
            var _0x234882 = _0x316ad0[_0x273470(0x20c)];
            _0x234882['x'] = _0x234882['y'] = _0x234882['z'] = 0x1;
        }
        [_0x6027f5(0xd64)](_0x3421c2, _0x4cce93, _0x5a3ff8 = null, _0x587e0f = null) {
            var _0x45d5db = _0x6027f5;
            _0x5a3ff8 ? (_0x5a3ff8[_0x45d5db(0xd66)] = _0x587e0f[0x10], this[_0x45d5db(0xd71)] ? _0x522276[_0x45d5db(0xd62)](_0x3421c2, _0x5a3ff8) : _0x522276[_0x45d5db(0xd63)](_0x3421c2, _0x5a3ff8), _0x587e0f[0x10] = _0x5a3ff8[_0x45d5db(0xd66)]) : this[_0x45d5db(0xd71)] ? _0x522276[_0x45d5db(0xd62)](_0x3421c2) : _0x522276['_randomPointInsideUnitSphere'](_0x3421c2), _0x3697cd['scale'](_0x3421c2, this['radius'], _0x3421c2), this['randomDirection'] ? _0x5a3ff8 ? (_0x5a3ff8[_0x45d5db(0xd66)] = _0x587e0f[0x11], _0x522276[_0x45d5db(0xd62)](_0x4cce93, _0x5a3ff8), _0x587e0f[0x11] = _0x5a3ff8['seed']) : _0x522276[_0x45d5db(0xd62)](_0x4cce93) : _0x3421c2[_0x45d5db(0x1fc)](_0x4cce93);
        }
        [_0x6027f5(0x1fc)](_0x2bac75) {
            var _0x50e21a = _0x6027f5;
            super[_0x50e21a(0x1fc)](_0x2bac75);
            var _0x3d685c = _0x2bac75;
            _0x3d685c[_0x50e21a(0x882)] = this[_0x50e21a(0x882)], _0x3d685c[_0x50e21a(0xd71)] = this[_0x50e21a(0xd71)], _0x3d685c['randomDirection'] = this[_0x50e21a(0xd59)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x3bd668 = _0x6027f5, _0x95092f = new _0x47a2d1();
            return this[_0x3bd668(0x1fc)](_0x95092f), _0x95092f;
        }
    }
    class _0x2570df {
        constructor(_0x5740d4) {
            var _0x15f260 = _0x6027f5;
            this[_0x15f260(0xae4)] = _0x5740d4;
        }
        get [_0x6027f5(0x2a7)]() {
            var _0x5e9aff = _0x6027f5;
            return this[_0x5e9aff(0xae4)];
        }
        [_0x6027f5(0x1fc)](_0x32930e) {
            var _0x1ab422 = _0x6027f5, _0x56089c = _0x32930e;
            this[_0x1ab422(0xae4)]['cloneTo'](_0x56089c[_0x1ab422(0xae4)]), _0x56089c[_0x1ab422(0x659)] = this['enable'];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x22debc = _0x6027f5, _0x516aed;
            switch (this[_0x22debc(0xae4)]['type']) {
            case 0x0:
                _0x516aed = this['_size'][_0x22debc(0xd38)] ? _0x5bbf53[_0x22debc(0xd33)](this[_0x22debc(0xae4)][_0x22debc(0xd3a)][_0x22debc(0x1fd)](), this[_0x22debc(0xae4)]['gradientY'][_0x22debc(0x1fd)](), this['_size']['gradientZ']['clone']()) : _0x5bbf53[_0x22debc(0xd0f)](this[_0x22debc(0xae4)]['gradient'][_0x22debc(0x1fd)]());
                break;
            case 0x1:
                _0x516aed = this[_0x22debc(0xae4)][_0x22debc(0xd38)] ? _0x5bbf53[_0x22debc(0xd4c)](this['_size'][_0x22debc(0xd3e)]['clone'](), this['_size'][_0x22debc(0xd3f)]['clone']()) : _0x5bbf53[_0x22debc(0xd34)](this[_0x22debc(0xae4)]['constantMin'], this[_0x22debc(0xae4)][_0x22debc(0xd16)]);
                break;
            case 0x2:
                _0x516aed = this[_0x22debc(0xae4)][_0x22debc(0xd38)] ? _0x5bbf53['createByRandomTwoGradientSeparate'](this[_0x22debc(0xae4)][_0x22debc(0xd40)]['clone'](), this['_size'][_0x22debc(0xd4e)][_0x22debc(0x1fd)](), this[_0x22debc(0xae4)][_0x22debc(0xd42)][_0x22debc(0x1fd)](), this[_0x22debc(0xae4)]['gradientXMax'][_0x22debc(0x1fd)](), this[_0x22debc(0xae4)]['gradientYMax']['clone'](), this[_0x22debc(0xae4)][_0x22debc(0xd43)][_0x22debc(0x1fd)]()) : _0x5bbf53[_0x22debc(0xd12)](this['_size'][_0x22debc(0xd18)][_0x22debc(0x1fd)](), this[_0x22debc(0xae4)]['gradientMax']['clone']());
            }
            var _0x20a746 = new _0x2570df(_0x516aed);
            return _0x20a746[_0x22debc(0x659)] = this['enable'], _0x20a746;
        }
    }
    class _0x3e5b1d {
        constructor() {
            var _0xeb6db6 = _0x6027f5;
            this[_0xeb6db6(0xa5e)] = 0x0, this['_constant'] = 0x0, this[_0xeb6db6(0xd0d)] = 0x0, this[_0xeb6db6(0xd11)] = 0x0;
        }
        static [_0x6027f5(0xd1b)](_0x453991 = 0x0) {
            var _0x5b17ea = _0x6027f5, _0x118b28 = new _0x3e5b1d();
            return _0x118b28[_0x5b17ea(0xa5e)] = 0x0, _0x118b28[_0x5b17ea(0xd0c)] = _0x453991, _0x118b28;
        }
        static [_0x6027f5(0xd34)](_0x5182a8 = 0x0, _0x28f33f = 0x0) {
            var _0x11f9f4 = _0x6027f5, _0x3d26bb = new _0x3e5b1d();
            return _0x3d26bb[_0x11f9f4(0xa5e)] = 0x1, _0x3d26bb['_constantMin'] = _0x5182a8, _0x3d26bb[_0x11f9f4(0xd11)] = _0x28f33f, _0x3d26bb;
        }
        get ['type']() {
            var _0x96bbeb = _0x6027f5;
            return this[_0x96bbeb(0xa5e)];
        }
        get [_0x6027f5(0xd14)]() {
            return this['_constant'];
        }
        get [_0x6027f5(0xd15)]() {
            return this['_constantMin'];
        }
        get [_0x6027f5(0xd16)]() {
            var _0x5c6daf = _0x6027f5;
            return this[_0x5c6daf(0xd11)];
        }
        [_0x6027f5(0x1fc)](_0x4c004f) {
            var _0x3c80bd = _0x6027f5, _0x4960b8 = _0x4c004f;
            _0x4960b8['_type'] = this[_0x3c80bd(0xa5e)], _0x4960b8[_0x3c80bd(0xd0c)] = this[_0x3c80bd(0xd0c)], _0x4960b8['_constantMin'] = this[_0x3c80bd(0xd0d)], _0x4960b8[_0x3c80bd(0xd11)] = this[_0x3c80bd(0xd11)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x48316b = new _0x3e5b1d();
            return this['cloneTo'](_0x48316b), _0x48316b;
        }
    }
    class _0x593b73 {
        constructor(_0x4be802, _0x2d918e) {
            var _0x1b790e = _0x6027f5;
            this[_0x1b790e(0x2cc)] = 0x0, this[_0x1b790e(0xd72)] = !0x1, this[_0x1b790e(0xd73)] = 0x0, this[_0x1b790e(0xd74)] = 0x0, this[_0x1b790e(0xd75)] = 0x0, this[_0x1b790e(0x659)] = !0x1, this[_0x1b790e(0xd76)] = new _0x30a72c(0x1, 0x1), this['type'] = 0x0, this[_0x1b790e(0xd72)] = !0x0, this[_0x1b790e(0xd73)] = 0x0, this[_0x1b790e(0xd74)] = 0x1, this[_0x1b790e(0xd75)] = 0x1, this[_0x1b790e(0xd77)] = _0x4be802, this['_startFrame'] = _0x2d918e;
        }
        get [_0x6027f5(0xd78)]() {
            var _0x1a3d8d = _0x6027f5;
            return this[_0x1a3d8d(0xd77)];
        }
        get [_0x6027f5(0xd79)]() {
            var _0x2acf91 = _0x6027f5;
            return this[_0x2acf91(0xd7a)];
        }
        [_0x6027f5(0x1fc)](_0x2126c8) {
            var _0x29fb51 = _0x6027f5, _0x14240e = _0x2126c8;
            this['tiles'][_0x29fb51(0x1fc)](_0x14240e[_0x29fb51(0xd76)]), _0x14240e['type'] = this[_0x29fb51(0x2cc)], _0x14240e[_0x29fb51(0xd72)] = this[_0x29fb51(0xd72)], _0x14240e[_0x29fb51(0xd73)] = this[_0x29fb51(0xd73)], _0x14240e[_0x29fb51(0xd74)] = this['cycles'], _0x14240e[_0x29fb51(0xd75)] = this['enableUVChannels'], _0x14240e[_0x29fb51(0x659)] = this['enable'], this[_0x29fb51(0xd77)]['cloneTo'](_0x14240e['_frame']), this['_startFrame']['cloneTo'](_0x14240e['_startFrame']);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x4e8725 = _0x6027f5, _0x3c9b33, _0x404154;
            switch (this[_0x4e8725(0xd77)][_0x4e8725(0x2cc)]) {
            case 0x0:
                _0x3c9b33 = _0xae37d7[_0x4e8725(0xd1b)](this[_0x4e8725(0xd77)][_0x4e8725(0xd14)]);
                break;
            case 0x1:
                _0x3c9b33 = _0xae37d7[_0x4e8725(0xd1f)](this[_0x4e8725(0xd77)][_0x4e8725(0xd21)]['clone']());
                break;
            case 0x2:
                _0x3c9b33 = _0xae37d7[_0x4e8725(0xd34)](this[_0x4e8725(0xd77)][_0x4e8725(0xd15)], this[_0x4e8725(0xd77)]['constantMax']);
                break;
            case 0x3:
                _0x3c9b33 = _0xae37d7[_0x4e8725(0xd20)](this[_0x4e8725(0xd77)][_0x4e8725(0xd22)]['clone'](), this['_frame'][_0x4e8725(0xd23)][_0x4e8725(0x1fd)]());
            }
            switch (this[_0x4e8725(0xd7a)]['type']) {
            case 0x0:
                _0x404154 = _0x3e5b1d[_0x4e8725(0xd1b)](this[_0x4e8725(0xd7a)]['constant']);
                break;
            case 0x1:
                _0x404154 = _0x3e5b1d[_0x4e8725(0xd34)](this[_0x4e8725(0xd7a)]['constantMin'], this['_startFrame'][_0x4e8725(0xd16)]);
            }
            var _0xc23763 = new _0x593b73(_0x3c9b33, _0x404154);
            return this[_0x4e8725(0x1fc)](_0xc23763), _0xc23763;
        }
    }
    class _0x13760e {
        constructor(_0x1b8f17) {
            var _0x4e59c2 = _0x6027f5;
            this[_0x4e59c2(0x659)] = !0x1, this[_0x4e59c2(0xd7b)] = 0x0, this[_0x4e59c2(0xd7c)] = _0x1b8f17;
        }
        get ['velocity']() {
            var _0x5e1bd7 = _0x6027f5;
            return this[_0x5e1bd7(0xd7c)];
        }
        [_0x6027f5(0x1fc)](_0x2f766a) {
            var _0x1a956 = _0x6027f5, _0x19c260 = _0x2f766a;
            this['_velocity'][_0x1a956(0x1fc)](_0x19c260[_0x1a956(0xd7c)]), _0x19c260[_0x1a956(0x659)] = this[_0x1a956(0x659)], _0x19c260[_0x1a956(0xd7b)] = this[_0x1a956(0xd7b)];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x106020 = _0x6027f5, _0x162ec7;
            switch (this[_0x106020(0xd7c)][_0x106020(0x2cc)]) {
            case 0x0:
                _0x162ec7 = _0x5c43e7[_0x106020(0xd1b)](this[_0x106020(0xd7c)][_0x106020(0xd14)][_0x106020(0x1fd)]());
                break;
            case 0x1:
                _0x162ec7 = _0x5c43e7[_0x106020(0xd0f)](this[_0x106020(0xd7c)][_0x106020(0xd3a)]['clone'](), this['_velocity']['gradientY'][_0x106020(0x1fd)](), this[_0x106020(0xd7c)][_0x106020(0xd3c)][_0x106020(0x1fd)]());
                break;
            case 0x2:
                _0x162ec7 = _0x5c43e7[_0x106020(0xd34)](this['_velocity']['constantMin'][_0x106020(0x1fd)](), this['_velocity'][_0x106020(0xd16)][_0x106020(0x1fd)]());
                break;
            case 0x3:
                _0x162ec7 = _0x5c43e7['createByRandomTwoGradient'](this[_0x106020(0xd7c)][_0x106020(0xd40)]['clone'](), this[_0x106020(0xd7c)][_0x106020(0xd4d)][_0x106020(0x1fd)](), this[_0x106020(0xd7c)][_0x106020(0xd4e)][_0x106020(0x1fd)](), this['_velocity'][_0x106020(0xd41)][_0x106020(0x1fd)](), this[_0x106020(0xd7c)]['gradientZMin'][_0x106020(0x1fd)](), this[_0x106020(0xd7c)][_0x106020(0xd43)]['clone']());
            }
            var _0x442d75 = new _0x13760e(_0x162ec7);
            return _0x442d75[_0x106020(0x659)] = this[_0x106020(0x659)], _0x442d75[_0x106020(0xd7b)] = this[_0x106020(0xd7b)], _0x442d75;
        }
    }
    class _0x54eac9 {
    }
    _0x54eac9['WORLDPOSITION'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd7d)), _0x54eac9[_0x6027f5(0xd7e)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd7f)), _0x54eac9['POSITIONSCALE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd80)), _0x54eac9[_0x6027f5(0xd81)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd82)), _0x54eac9['SCALINGMODE'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd83)), _0x54eac9[_0x6027f5(0xd84)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd85)), _0x54eac9[_0x6027f5(0xd86)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd87)), _0x54eac9[_0x6027f5(0xd88)] = _0x3a9f31['propertyNameToID']('u_StretchedBillboardLengthScale'), _0x54eac9[_0x6027f5(0xd89)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd8a)), _0x54eac9[_0x6027f5(0xd8b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd8c)), _0x54eac9['CURRENTTIME'] = _0x3a9f31[_0x6027f5(0x553)]('u_CurrentTime'), _0x54eac9[_0x6027f5(0xd8d)] = _0x3a9f31['propertyNameToID']('u_VOLVelocityConst'), _0x54eac9[_0x6027f5(0xd8e)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd8f)), _0x54eac9[_0x6027f5(0xd90)] = _0x3a9f31[_0x6027f5(0x553)]('u_VOLVelocityGradientY'), _0x54eac9[_0x6027f5(0xd91)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd92)), _0x54eac9['VOLVELOCITYCONSTMAX'] = _0x3a9f31['propertyNameToID']('u_VOLVelocityConstMax'), _0x54eac9[_0x6027f5(0xd93)] = _0x3a9f31[_0x6027f5(0x553)]('u_VOLVelocityGradientMaxX'), _0x54eac9[_0x6027f5(0xd94)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xd95)), _0x54eac9[_0x6027f5(0xd96)] = _0x3a9f31['propertyNameToID']('u_VOLVelocityGradientMaxZ'), _0x54eac9[_0x6027f5(0xd97)] = _0x3a9f31[_0x6027f5(0x553)]('u_VOLSpaceType'), _0x54eac9['COLOROVERLIFEGRADIENTALPHAS'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xd98)), _0x54eac9[_0x6027f5(0xd99)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd9a)), _0x54eac9[_0x6027f5(0xd9b)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd9c)), _0x54eac9[_0x6027f5(0xd9d)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xd9e)), _0x54eac9[_0x6027f5(0xd9f)] = _0x3a9f31[_0x6027f5(0x553)]('u_SOLSizeGradient'), _0x54eac9[_0x6027f5(0xda0)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xda1)), _0x54eac9[_0x6027f5(0xda2)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xda3)), _0x54eac9[_0x6027f5(0xda4)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xda5)), _0x54eac9['SOLSizeGradientMax'] = _0x3a9f31[_0x6027f5(0x553)]('u_SOLSizeGradientMax'), _0x54eac9[_0x6027f5(0xda6)] = _0x3a9f31[_0x6027f5(0x553)]('u_SOLSizeGradientMaxX'), _0x54eac9['SOLSIZEGRADIENTYMAX'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xda7)), _0x54eac9[_0x6027f5(0xda8)] = _0x3a9f31['propertyNameToID']('u_SOLSizeGradientMaxZ'), _0x54eac9[_0x6027f5(0xda9)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdaa)), _0x54eac9[_0x6027f5(0xdab)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdac)), _0x54eac9[_0x6027f5(0xdad)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdae)), _0x54eac9[_0x6027f5(0xdaf)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xdb0)), _0x54eac9['ROLANGULARVELOCITYGRADIENTY'] = _0x3a9f31[_0x6027f5(0x553)]('u_ROLAngularVelocityGradientY'), _0x54eac9[_0x6027f5(0xdb1)] = _0x3a9f31['propertyNameToID']('u_ROLAngularVelocityGradientZ'), _0x54eac9['ROLANGULARVELOCITYCONSTMAX'] = _0x3a9f31[_0x6027f5(0x553)]('u_ROLAngularVelocityConstMax'), _0x54eac9[_0x6027f5(0xdb2)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdb3)), _0x54eac9['ROLANGULARVELOCITYGRADIENTMAX'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdb4)), _0x54eac9[_0x6027f5(0xdb5)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xdb6)), _0x54eac9[_0x6027f5(0xdb7)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdb8)), _0x54eac9[_0x6027f5(0xdb9)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdba)), _0x54eac9[_0x6027f5(0xdbb)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdbc)), _0x54eac9[_0x6027f5(0xdbd)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xdbe)), _0x54eac9[_0x6027f5(0xdbf)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdc0)), _0x54eac9[_0x6027f5(0xdc1)] = _0x3a9f31[_0x6027f5(0x553)]('u_TSAGradientUVs'), _0x54eac9[_0x6027f5(0xdc2)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xdc3));
    class _0x3a9279 extends _0xe2444c {
        constructor() {
            var _0x5b4abd = _0x6027f5;
            super(), this[_0x5b4abd(0x6a9)](_0x5b4abd(0xdc4)), this['_color'] = new _0x5b8e4e(0x1, 0x1, 0x1, 0x1), this[_0x5b4abd(0x4e2)][_0x5b4abd(0x4a8)](_0x3a9279[_0x5b4abd(0x6f2)], new _0x5b8e4e(0x1, 0x1, 0x0, 0x0)), this[_0x5b4abd(0x730)] = _0x3a9279[_0x5b4abd(0xdc5)];
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x1cac1c = _0x6027f5;
            _0x3a9279['SHADERDEFINE_DIFFUSEMAP'] = _0x3a9f31[_0x1cac1c(0x510)](_0x1cac1c(0xdc6)), _0x3a9279[_0x1cac1c(0xdc7)] = _0x3a9f31[_0x1cac1c(0x510)](_0x1cac1c(0x726)), _0x3a9279[_0x1cac1c(0x729)] = _0x3a9f31['getDefineByName'](_0x1cac1c(0x72a));
        }
        get [_0x6027f5(0x72f)]() {
            return this['color'];
        }
        set ['_TintColor'](_0x58fac3) {
            var _0xd5a8e7 = _0x6027f5;
            this[_0xd5a8e7(0x46f)] = _0x58fac3;
        }
        get [_0x6027f5(0x72b)]() {
            var _0x41035f = _0x6027f5;
            return this[_0x41035f(0xd1a)]['x'];
        }
        set [_0x6027f5(0x72b)](_0x514ca8) {
            var _0x920f77 = _0x6027f5;
            this[_0x920f77(0xd1a)]['x'] = _0x514ca8, this[_0x920f77(0x46f)] = this['_color'];
        }
        get [_0x6027f5(0x72c)]() {
            var _0x4c37c5 = _0x6027f5;
            return this[_0x4c37c5(0xd1a)]['y'];
        }
        set [_0x6027f5(0x72c)](_0x2fad79) {
            var _0x54cb4f = _0x6027f5;
            this[_0x54cb4f(0xd1a)]['y'] = _0x2fad79, this[_0x54cb4f(0x46f)] = this['_color'];
        }
        get ['_TintColorB']() {
            var _0x2e1de4 = _0x6027f5;
            return this[_0x2e1de4(0xd1a)]['z'];
        }
        set [_0x6027f5(0x72d)](_0x1bc862) {
            var _0x256ad9 = _0x6027f5;
            this[_0x256ad9(0xd1a)]['z'] = _0x1bc862, this[_0x256ad9(0x46f)] = this[_0x256ad9(0xd1a)];
        }
        get [_0x6027f5(0x72e)]() {
            var _0x1fc1bd = _0x6027f5;
            return this[_0x1fc1bd(0xd1a)]['w'];
        }
        set [_0x6027f5(0x72e)](_0x4263c1) {
            var _0x57883d = _0x6027f5;
            this[_0x57883d(0xd1a)]['w'] = _0x4263c1, this[_0x57883d(0x46f)] = this[_0x57883d(0xd1a)];
        }
        get ['_MainTex_ST']() {
            var _0x3191ac = _0x6027f5;
            return this['_shaderValues'][_0x3191ac(0x4a7)](_0x3a9279[_0x3191ac(0x6f2)]);
        }
        set [_0x6027f5(0x6f7)](_0x37fbe9) {
            var _0x8e9e8c = _0x6027f5, _0x8abe0 = this[_0x8e9e8c(0x4e2)][_0x8e9e8c(0x4a7)](_0x3a9279[_0x8e9e8c(0x6f2)]);
            _0x8abe0['setValue'](_0x37fbe9['x'], _0x37fbe9['y'], _0x37fbe9['z'], _0x37fbe9['w']), this[_0x8e9e8c(0x6f3)] = _0x8abe0;
        }
        get [_0x6027f5(0x6f1)]() {
            var _0x2ee9eb = _0x6027f5;
            return this['_shaderValues'][_0x2ee9eb(0x4a7)](_0x3a9279[_0x2ee9eb(0x6f2)])['x'];
        }
        set [_0x6027f5(0x6f1)](_0x417462) {
            var _0x184f67 = _0x6027f5, _0x97b400 = this[_0x184f67(0x4e2)][_0x184f67(0x4a7)](_0x3a9279['TILINGOFFSET']);
            _0x97b400['x'] = _0x417462, this[_0x184f67(0x6f3)] = _0x97b400;
        }
        get [_0x6027f5(0x6f4)]() {
            var _0xf139be = _0x6027f5;
            return this[_0xf139be(0x4e2)]['getVector'](_0x3a9279[_0xf139be(0x6f2)])['y'];
        }
        set ['_MainTex_STY'](_0x344fff) {
            var _0x210ec2 = _0x6027f5, _0x3bf896 = this[_0x210ec2(0x4e2)][_0x210ec2(0x4a7)](_0x3a9279[_0x210ec2(0x6f2)]);
            _0x3bf896['y'] = _0x344fff, this[_0x210ec2(0x6f3)] = _0x3bf896;
        }
        get [_0x6027f5(0x6f5)]() {
            var _0x11258f = _0x6027f5;
            return this[_0x11258f(0x4e2)][_0x11258f(0x4a7)](_0x3a9279[_0x11258f(0x6f2)])['z'];
        }
        set [_0x6027f5(0x6f5)](_0x281fff) {
            var _0x366852 = _0x6027f5, _0x115eb5 = this[_0x366852(0x4e2)][_0x366852(0x4a7)](_0x3a9279[_0x366852(0x6f2)]);
            _0x115eb5['z'] = _0x281fff, this[_0x366852(0x6f3)] = _0x115eb5;
        }
        get [_0x6027f5(0x6f6)]() {
            var _0x560c95 = _0x6027f5;
            return this[_0x560c95(0x4e2)]['getVector'](_0x3a9279[_0x560c95(0x6f2)])['w'];
        }
        set [_0x6027f5(0x6f6)](_0x3b8650) {
            var _0x20c1ba = _0x6027f5, _0x1148b5 = this[_0x20c1ba(0x4e2)][_0x20c1ba(0x4a7)](_0x3a9279['TILINGOFFSET']);
            _0x1148b5['w'] = _0x3b8650, this[_0x20c1ba(0x6f3)] = _0x1148b5;
        }
        set ['renderMode'](_0x31ddc1) {
            var _0x116893 = _0x6027f5;
            switch (_0x31ddc1) {
            case _0x3a9279['RENDERMODE_ADDTIVE']:
                this['renderQueue'] = _0xe2444c['RENDERQUEUE_TRANSPARENT'], this[_0x116893(0x699)] = !0x1, this[_0x116893(0x697)] = _0x47a097[_0x116893(0x6c6)], this[_0x116893(0x696)] = _0x47a097[_0x116893(0x6c7)], this[_0x116893(0x69b)] = _0x47a097[_0x116893(0x6cc)], this[_0x116893(0x69c)] = _0x47a097[_0x116893(0x6ba)], this[_0x116893(0x68c)] = !0x1, this[_0x116893(0x4e2)]['addDefine'](_0x3a9279[_0x116893(0x729)]);
                break;
            case _0x3a9279['RENDERMODE_ALPHABLENDED']:
                this[_0x116893(0x68a)] = _0xe2444c[_0x116893(0x6ad)], this[_0x116893(0x699)] = !0x1, this['cull'] = _0x47a097[_0x116893(0x6c6)], this['blend'] = _0x47a097[_0x116893(0x6c7)], this[_0x116893(0x69b)] = _0x47a097[_0x116893(0x6cc)], this[_0x116893(0x69c)] = _0x47a097[_0x116893(0x6fc)], this[_0x116893(0x68c)] = !0x1, this[_0x116893(0x4e2)][_0x116893(0x49b)](_0x3a9279[_0x116893(0x729)]);
                break;
            default:
                throw new Error(_0x116893(0xdc8));
            }
        }
        get [_0x6027f5(0x732)]() {
            var _0x908750 = _0x6027f5;
            return this[_0x908750(0x72b)];
        }
        set [_0x6027f5(0x732)](_0x135d16) {
            var _0x572313 = _0x6027f5;
            this[_0x572313(0x72b)] = _0x135d16;
        }
        get ['colorG']() {
            var _0x909517 = _0x6027f5;
            return this[_0x909517(0x72c)];
        }
        set ['colorG'](_0x39da09) {
            var _0x4cc811 = _0x6027f5;
            this[_0x4cc811(0x72c)] = _0x39da09;
        }
        get [_0x6027f5(0x734)]() {
            return this['_TintColorB'];
        }
        set [_0x6027f5(0x734)](_0xdc89f1) {
            var _0x18492a = _0x6027f5;
            this[_0x18492a(0x72d)] = _0xdc89f1;
        }
        get [_0x6027f5(0x735)]() {
            var _0x45e604 = _0x6027f5;
            return this[_0x45e604(0x72e)];
        }
        set ['colorA'](_0x1f7d42) {
            var _0x5d54b7 = _0x6027f5;
            this[_0x5d54b7(0x72e)] = _0x1f7d42;
        }
        get [_0x6027f5(0x46f)]() {
            var _0x144164 = _0x6027f5;
            return this['_shaderValues'][_0x144164(0x4a7)](_0x3a9279[_0x144164(0x726)]);
        }
        set [_0x6027f5(0x46f)](_0x555900) {
            var _0x3b2ac9 = _0x6027f5;
            _0x555900 ? this['_shaderValues']['addDefine'](_0x3a9279[_0x3b2ac9(0xdc7)]) : this[_0x3b2ac9(0x4e2)]['removeDefine'](_0x3a9279[_0x3b2ac9(0xdc7)]), this[_0x3b2ac9(0x4e2)][_0x3b2ac9(0x4a8)](_0x3a9279[_0x3b2ac9(0x726)], _0x555900);
        }
        get ['tilingOffsetX']() {
            var _0xb367a1 = _0x6027f5;
            return this[_0xb367a1(0x6f1)];
        }
        set [_0x6027f5(0x6ff)](_0x100b9f) {
            var _0x1590f2 = _0x6027f5;
            this[_0x1590f2(0x6f1)] = _0x100b9f;
        }
        get ['tilingOffsetY']() {
            var _0x1511ce = _0x6027f5;
            return this[_0x1511ce(0x6f4)];
        }
        set [_0x6027f5(0x738)](_0x164def) {
            var _0x3b4f34 = _0x6027f5;
            this[_0x3b4f34(0x6f4)] = _0x164def;
        }
        get ['tilingOffsetZ']() {
            var _0x51ec44 = _0x6027f5;
            return this[_0x51ec44(0x6f5)];
        }
        set [_0x6027f5(0x700)](_0x1aa767) {
            var _0x5177e2 = _0x6027f5;
            this[_0x5177e2(0x6f5)] = _0x1aa767;
        }
        get ['tilingOffsetW']() {
            var _0x398724 = _0x6027f5;
            return this[_0x398724(0x6f6)];
        }
        set ['tilingOffsetW'](_0x45b003) {
            var _0x263ac2 = _0x6027f5;
            this[_0x263ac2(0x6f6)] = _0x45b003;
        }
        get [_0x6027f5(0x6f3)]() {
            var _0x3b8971 = _0x6027f5;
            return this[_0x3b8971(0x4e2)]['getVector'](_0x3a9279[_0x3b8971(0x6f2)]);
        }
        set [_0x6027f5(0x6f3)](_0x1deaad) {
            var _0xe33366 = _0x6027f5;
            _0x1deaad ? this[_0xe33366(0x4e2)]['setVector'](_0x3a9279['TILINGOFFSET'], _0x1deaad) : this[_0xe33366(0x4e2)][_0xe33366(0x4a7)](_0x3a9279[_0xe33366(0x6f2)])[_0xe33366(0x1f8)](0x1, 0x1, 0x0, 0x0);
        }
        get [_0x6027f5(0x736)]() {
            var _0xdbf6de = _0x6027f5;
            return this[_0xdbf6de(0x4e2)][_0xdbf6de(0x4ae)](_0x3a9279[_0xdbf6de(0xdc9)]);
        }
        set [_0x6027f5(0x736)](_0x4e4cf7) {
            var _0x2665d0 = _0x6027f5;
            _0x4e4cf7 ? this[_0x2665d0(0x4e2)][_0x2665d0(0x49a)](_0x3a9279['SHADERDEFINE_DIFFUSEMAP']) : this[_0x2665d0(0x4e2)]['removeDefine'](_0x3a9279['SHADERDEFINE_DIFFUSEMAP']), this[_0x2665d0(0x4e2)][_0x2665d0(0x4ac)](_0x3a9279[_0x2665d0(0xdc9)], _0x4e4cf7);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x197033 = _0x6027f5, _0x17864f = new _0x3a9279();
            return this[_0x197033(0x1fc)](_0x17864f), _0x17864f;
        }
    }
    _0x3a9279[_0x6027f5(0xdc5)] = 0x0, _0x3a9279[_0x6027f5(0x727)] = 0x1, _0x3a9279[_0x6027f5(0xdc9)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xdca)), _0x3a9279['TINTCOLOR'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xdcb)), _0x3a9279[_0x6027f5(0x6f2)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x73b));
    class _0x48c5dd {
        constructor() {
        }
        static [_0x6027f5(0xdcc)](_0x202752, _0xc0e05e, _0xb2e0f9) {
        }
        static [_0x6027f5(0xdcd)](_0x20ebb2, _0x68f13) {
            return !0x1;
        }
    }
    _0x48c5dd[_0x6027f5(0xdce)] = 0x1, _0x48c5dd[_0x6027f5(0xdcf)] = 0x2, _0x48c5dd[_0x6027f5(0xdd0)] = 0x4, _0x48c5dd[_0x6027f5(0xdd1)] = 0x8, _0x48c5dd['COLLISIONFILTERGROUP_SENSORTRIGGER'] = 0x10, _0x48c5dd['COLLISIONFILTERGROUP_CHARACTERFILTER'] = 0x20, _0x48c5dd[_0x6027f5(0xdd2)] = 0x40, _0x48c5dd['COLLISIONFILTERGROUP_CUSTOMFILTER2'] = 0x80, _0x48c5dd[_0x6027f5(0xdd3)] = 0x100, _0x48c5dd[_0x6027f5(0xdd4)] = 0x200, _0x48c5dd[_0x6027f5(0xdd5)] = 0x400, _0x48c5dd['COLLISIONFILTERGROUP_CUSTOMFILTER6'] = 0x800, _0x48c5dd[_0x6027f5(0xdd6)] = 0x1000, _0x48c5dd[_0x6027f5(0xdd7)] = 0x2000, _0x48c5dd[_0x6027f5(0xdd8)] = 0x4000, _0x48c5dd['COLLISIONFILTERGROUP_CUSTOMFILTER10'] = 0x8000, _0x48c5dd[_0x6027f5(0xdd9)] = -0x1, _0x48c5dd[_0x6027f5(0xdda)] = new _0x3697cd(0x0, -9.81, 0x0);
    class _0xa7c03a extends _0x40d4de {
        constructor(_0x2f43e9) {
            var _0x3fb165 = _0x6027f5;
            super(_0x2f43e9), this[_0x3fb165(0xddb)] = new _0x3697cd(), this['_mesh'] = null, this[_0x3fb165(0xddc)] = 0x0, this[_0x3fb165(0xddd)] = 0x0, this[_0x3fb165(0xdde)] = 0x2, this['renderMode'] = 0x0, this[_0x3fb165(0xaf9)] = !0x1;
        }
        get [_0x6027f5(0x730)]() {
            return this['_renderMode'];
        }
        set ['renderMode'](_0x40c767) {
            var _0x1b18bd = _0x6027f5;
            if (this[_0x1b18bd(0xddf)] !== _0x40c767) {
                var _0x1cfe01 = this[_0x1b18bd(0x4e2)];
                switch (this[_0x1b18bd(0xddf)]) {
                case 0x0:
                    _0x1cfe01[_0x1b18bd(0x49b)](_0x54eac9['SHADERDEFINE_RENDERMODE_BILLBOARD']);
                    break;
                case 0x1:
                    _0x1cfe01[_0x1b18bd(0x49b)](_0x54eac9['SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD']);
                    break;
                case 0x2:
                    _0x1cfe01[_0x1b18bd(0x49b)](_0x54eac9['SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD']);
                    break;
                case 0x3:
                    _0x1cfe01[_0x1b18bd(0x49b)](_0x54eac9[_0x1b18bd(0xde0)]);
                    break;
                case 0x4:
                    _0x1cfe01['removeDefine'](_0x54eac9[_0x1b18bd(0xde1)]);
                }
                switch (this[_0x1b18bd(0xddf)] = _0x40c767, _0x40c767) {
                case 0x0:
                    _0x1cfe01[_0x1b18bd(0x49a)](_0x54eac9[_0x1b18bd(0xde2)]);
                    break;
                case 0x1:
                    _0x1cfe01[_0x1b18bd(0x49a)](_0x54eac9[_0x1b18bd(0xde3)]);
                    break;
                case 0x2:
                    _0x1cfe01[_0x1b18bd(0x49a)](_0x54eac9[_0x1b18bd(0xde4)]);
                    break;
                case 0x3:
                    _0x1cfe01[_0x1b18bd(0x49a)](_0x54eac9[_0x1b18bd(0xde0)]);
                    break;
                case 0x4:
                    _0x1cfe01['addDefine'](_0x54eac9[_0x1b18bd(0xde1)]);
                    break;
                default:
                    throw new Error(_0x1b18bd(0xde5));
                }
                var _0x54ba54 = this[_0x1b18bd(0x3dc)][_0x1b18bd(0xde6)];
                _0x54ba54 && _0x54ba54[_0x1b18bd(0xde7)]();
            }
        }
        get [_0x6027f5(0x8d6)]() {
            var _0x528d9d = _0x6027f5;
            return this[_0x528d9d(0x5d9)];
        }
        set [_0x6027f5(0x8d6)](_0x5bc238) {
            var _0x194a1f = _0x6027f5;
            this['_mesh'] !== _0x5bc238 && (this[_0x194a1f(0x5d9)] && this[_0x194a1f(0x5d9)][_0x194a1f(0x35c)](), this[_0x194a1f(0x5d9)] = _0x5bc238, _0x5bc238 && _0x5bc238['_addReference'](), this[_0x194a1f(0x3dc)]['particleSystem']['_initBufferDatas']());
        }
        ['_calculateBoundingBox']() {
            var _0x203e07 = _0x6027f5, _0x3cf0f1 = this[_0x203e07(0x3dc)][_0x203e07(0xde6)];
            if (_0x3cf0f1[_0x203e07(0xde8)])
                _0x3cf0f1[_0x203e07(0xde9)][_0x203e07(0xb1f)](this['_owner']['transform']['worldMatrix'], this[_0x203e07(0xa5d)]);
            else {
                if (_0x3cf0f1[_0x203e07(0xdea)]()) {
                    if (_0x3cf0f1['_generateBounds'](), _0x3cf0f1[_0x203e07(0xa5d)][_0x203e07(0xb1f)](this['_owner']['transform']['worldMatrix'], this[_0x203e07(0xa5d)]), 0x0 != _0x3cf0f1[_0x203e07(0xdeb)]) {
                        var _0x44ab2a = this[_0x203e07(0xa5d)]['getMax'](), _0x459ac6 = this[_0x203e07(0xa5d)]['getMin'](), _0x2a69f5 = _0x3cf0f1['_gravityOffset'];
                        _0x44ab2a['y'] -= _0x2a69f5['x'], _0x459ac6['y'] -= _0x2a69f5['y'], this[_0x203e07(0xa5d)][_0x203e07(0xa49)](_0x44ab2a), this[_0x203e07(0xa5d)][_0x203e07(0xa62)](_0x459ac6);
                    }
                } else
                    (_0x459ac6 = this['_bounds'][_0x203e07(0xa47)]())[_0x203e07(0x1f8)](-Number[_0x203e07(0xa3d)], -Number[_0x203e07(0xa3d)], -Number[_0x203e07(0xa3d)]), this[_0x203e07(0xa5d)][_0x203e07(0xa62)](_0x459ac6), (_0x44ab2a = this[_0x203e07(0xa5d)][_0x203e07(0xa4f)]())['setValue'](Number[_0x203e07(0xa3d)], Number[_0x203e07(0xa3d)], Number['MAX_VALUE']), this['_bounds'][_0x203e07(0xa49)](_0x44ab2a);
            }
        }
        ['_needRender'](_0x2801d7, _0xad8181) {
            var _0x2c3291 = _0x6027f5;
            return !_0x2801d7 || !!_0x2801d7[_0x2c3291(0xcc9)](this['bounds'][_0x2c3291(0x813)]()) && !!this[_0x2c3291(0x3dc)][_0x2c3291(0xde6)][_0x2c3291(0xdec)];
        }
        [_0x6027f5(0x5f6)](_0x209955, _0x1ff827) {
            var _0x341c5b = _0x6027f5, _0x2bd5ba = this[_0x341c5b(0x3dc)][_0x341c5b(0xde6)], _0x57cdbe = this[_0x341c5b(0x4e2)], _0x429eab = this[_0x341c5b(0x3dc)][_0x341c5b(0x3d6)];
            switch (_0x2bd5ba[_0x341c5b(0xded)]) {
            case 0x0:
                break;
            case 0x1:
                _0x57cdbe[_0x341c5b(0x57a)](_0x54eac9[_0x341c5b(0xdee)], _0x429eab[_0x341c5b(0x5a2)]), _0x57cdbe[_0x341c5b(0x4a9)](_0x54eac9[_0x341c5b(0xd7e)], _0x429eab[_0x341c5b(0x5a4)]);
                break;
            default:
                throw new Error('ShurikenParticleMaterial:\x20SimulationSpace\x20value\x20is\x20invalid.');
            }
            switch (_0x2bd5ba[_0x341c5b(0xdef)]) {
            case 0x0:
                var _0x2287a4 = _0x429eab[_0x341c5b(0x58b)]();
                _0x57cdbe['setVector3'](_0x54eac9['POSITIONSCALE'], _0x2287a4), _0x57cdbe['setVector3'](_0x54eac9[_0x341c5b(0xd81)], _0x2287a4);
                break;
            case 0x1:
                var _0x5a7649 = _0x429eab[_0x341c5b(0x3a5)];
                _0x57cdbe['setVector3'](_0x54eac9[_0x341c5b(0xdf0)], _0x5a7649), _0x57cdbe[_0x341c5b(0x57a)](_0x54eac9['SIZESCALE'], _0x5a7649);
                break;
            case 0x2:
                _0x57cdbe[_0x341c5b(0x57a)](_0x54eac9[_0x341c5b(0xdf0)], _0x429eab[_0x341c5b(0x58b)]()), _0x57cdbe[_0x341c5b(0x57a)](_0x54eac9[_0x341c5b(0xd81)], _0x3697cd[_0x341c5b(0x21c)]);
            }
            _0x3697cd[_0x341c5b(0x1f9)](_0x48c5dd['gravity'], _0x2bd5ba[_0x341c5b(0xdeb)], this[_0x341c5b(0xddb)]), _0x57cdbe['setVector3'](_0x54eac9[_0x341c5b(0xd84)], this[_0x341c5b(0xddb)]), _0x57cdbe[_0x341c5b(0x4a1)](_0x54eac9[_0x341c5b(0xd8b)], _0x2bd5ba['simulationSpace']), _0x57cdbe['setBool'](_0x54eac9[_0x341c5b(0xd86)], _0x2bd5ba[_0x341c5b(0xdf1)]), _0x57cdbe[_0x341c5b(0x4a1)](_0x54eac9[_0x341c5b(0xdf2)], _0x2bd5ba[_0x341c5b(0xdef)]), _0x57cdbe[_0x341c5b(0x4a3)](_0x54eac9[_0x341c5b(0xd88)], this[_0x341c5b(0xdde)]), _0x57cdbe[_0x341c5b(0x4a3)](_0x54eac9[_0x341c5b(0xd89)], this['stretchedBillboardSpeedScale']), _0x57cdbe[_0x341c5b(0x4a3)](_0x54eac9[_0x341c5b(0xdf3)], _0x2bd5ba[_0x341c5b(0xdf4)]);
        }
        get [_0x6027f5(0x812)]() {
            var _0x425d42 = _0x6027f5;
            return this[_0x425d42(0xb06)] && (this[_0x425d42(0xb07)](), this['_boundsChange'] = !0x1), this[_0x425d42(0xa5d)];
        }
        ['_destroy']() {
            var _0x4d7e84 = _0x6027f5;
            super['_destroy'](), this[_0x4d7e84(0x5d9)] && (this[_0x4d7e84(0x5d9)][_0x4d7e84(0x35c)](), this[_0x4d7e84(0x5d9)] = null);
        }
    }
    class _0x3c247f {
        constructor() {
        }
    }
    _0x3c247f[_0x6027f5(0xdf5)] = 0x5, _0x3c247f[_0x6027f5(0xdf6)] = 0x1, _0x3c247f[_0x6027f5(0xdf7)] = 0x2, _0x3c247f[_0x6027f5(0xdf8)] = 0x3, _0x3c247f['PARTICLE_SHAPEPOSITIONSTARTLIFETIME'] = 0x4, _0x3c247f[_0x6027f5(0xdf9)] = 0x0, _0x3c247f[_0x6027f5(0xdfa)] = 0x6, _0x3c247f['PARTICLE_ENDCOLOR0'] = 0x7, _0x3c247f['PARTICLE_STARTSIZE'] = 0x8, _0x3c247f[_0x6027f5(0xdfb)] = 0x9, _0x3c247f['PARTICLE_STARTSPEED'] = 0xa, _0x3c247f['PARTICLE_RANDOM0'] = 0xb, _0x3c247f[_0x6027f5(0xdfc)] = 0xc, _0x3c247f[_0x6027f5(0xdfd)] = 0xd, _0x3c247f[_0x6027f5(0xdfe)] = 0xe;
    class _0x11443b extends _0x3c247f {
        constructor(_0x8af568, _0x4dbfbe, _0x37a019, _0x72f335, _0xa2e2c9, _0x3b95df, _0x595bca, _0x5d8ac7, _0x2f375a, _0x7b3b4f, _0x28aae1, _0x524ec1, _0x5d0979, _0x33f4c3) {
            var _0x5271b0 = _0x6027f5;
            super(), this[_0x5271b0(0xdff)] = _0x8af568, this[_0x5271b0(0xe00)] = _0x4dbfbe, this[_0x5271b0(0xd7c)] = _0x37a019, this['_startColor'] = _0x72f335, this['_startSize'] = _0xa2e2c9, this[_0x5271b0(0xe01)] = _0x3b95df, this[_0x5271b0(0xe02)] = _0x595bca, this[_0x5271b0(0xe03)] = _0x5d8ac7, this['_startLifeTime'] = _0x2f375a, this['_time'] = _0x7b3b4f, this[_0x5271b0(0xe04)] = _0x28aae1, this['_randoms0'] = _0x524ec1, this[_0x5271b0(0xe05)] = _0x5d0979, this[_0x5271b0(0xe06)] = _0x33f4c3;
        }
        static get [_0x6027f5(0x456)]() {
            var _0xdd85ce = _0x6027f5;
            return _0x11443b[_0xdd85ce(0x455)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x4162a1 = _0x6027f5;
            _0x11443b['_vertexDeclaration'] = new _0x4b2139(0x98, [
                new _0x25649b(0x0, _0x53b5cc[_0x4162a1(0x4fd)], _0x3c247f['PARTICLE_CORNERTEXTURECOORDINATE0']),
                new _0x25649b(0x10, _0x53b5cc[_0x4162a1(0x4fd)], _0x3c247f['PARTICLE_SHAPEPOSITIONSTARTLIFETIME']),
                new _0x25649b(0x20, _0x53b5cc[_0x4162a1(0x4fd)], _0x3c247f[_0x4162a1(0xdf9)]),
                new _0x25649b(0x30, _0x53b5cc['Vector4'], _0x3c247f['PARTICLE_STARTCOLOR0']),
                new _0x25649b(0x40, _0x53b5cc[_0x4162a1(0x46b)], _0x3c247f[_0x4162a1(0xe07)]),
                new _0x25649b(0x4c, _0x53b5cc['Vector3'], _0x3c247f[_0x4162a1(0xdfb)]),
                new _0x25649b(0x58, _0x53b5cc[_0x4162a1(0x468)], _0x3c247f[_0x4162a1(0xe08)]),
                new _0x25649b(0x5c, _0x53b5cc['Vector4'], _0x3c247f[_0x4162a1(0xe09)]),
                new _0x25649b(0x6c, _0x53b5cc['Vector4'], _0x3c247f['PARTICLE_RANDOM1']),
                new _0x25649b(0x7c, _0x53b5cc[_0x4162a1(0x46b)], _0x3c247f[_0x4162a1(0xdfd)]),
                new _0x25649b(0x88, _0x53b5cc[_0x4162a1(0x4fd)], _0x3c247f[_0x4162a1(0xdfe)])
            ]);
        }
        get [_0x6027f5(0xe0a)]() {
            return this['_cornerTextureCoordinate'];
        }
        get ['positionStartLifeTime']() {
            var _0x4fbc40 = _0x6027f5;
            return this[_0x4fbc40(0xe00)];
        }
        get [_0x6027f5(0xe0b)]() {
            var _0x492b3c = _0x6027f5;
            return this[_0x492b3c(0xd7c)];
        }
        get ['startColor']() {
            return this['_startColor'];
        }
        get ['startSize']() {
            var _0x32bccb = _0x6027f5;
            return this[_0x32bccb(0xe0c)];
        }
        get [_0x6027f5(0xe0d)]() {
            return this['_startRotation0'];
        }
        get [_0x6027f5(0xe0e)]() {
            var _0x50e81f = _0x6027f5;
            return this[_0x50e81f(0xe02)];
        }
        get ['startRotation2']() {
            var _0x1c8ce2 = _0x6027f5;
            return this[_0x1c8ce2(0xe03)];
        }
        get ['startLifeTime']() {
            var _0x256885 = _0x6027f5;
            return this[_0x256885(0xe0f)];
        }
        get [_0x6027f5(0x273)]() {
            return this['_time'];
        }
        get [_0x6027f5(0xe10)]() {
            var _0x1e2496 = _0x6027f5;
            return this[_0x1e2496(0xe04)];
        }
        get ['random0']() {
            var _0x11b18a = _0x6027f5;
            return this[_0x11b18a(0xe11)];
        }
        get ['random1']() {
            var _0x40efbd = _0x6027f5;
            return this[_0x40efbd(0xe05)];
        }
        get ['simulationWorldPostion']() {
            var _0x5a01c6 = _0x6027f5;
            return this[_0x5a01c6(0xe06)];
        }
    }
    class _0x107170 extends _0x3c247f {
        constructor(_0x534810, _0xcab5f5, _0x30ef73, _0x402ef8, _0x2ffcf4, _0x12107c, _0x17ba65, _0x475e39, _0xd54ba, _0x308207, _0x321a22, _0x5e4a60, _0x599900, _0x16b559) {
            var _0x152f6a = _0x6027f5;
            super(), this[_0x152f6a(0xdff)] = _0x534810, this[_0x152f6a(0xe00)] = _0xcab5f5, this[_0x152f6a(0xd7c)] = _0x30ef73, this['_startColor'] = _0x402ef8, this[_0x152f6a(0xe0c)] = _0x2ffcf4, this[_0x152f6a(0xe01)] = _0x12107c, this[_0x152f6a(0xe02)] = _0x17ba65, this[_0x152f6a(0xe03)] = _0x475e39, this[_0x152f6a(0xe0f)] = _0xd54ba, this[_0x152f6a(0xba0)] = _0x308207, this['_startSpeed'] = _0x321a22, this[_0x152f6a(0xe11)] = _0x5e4a60, this[_0x152f6a(0xe05)] = _0x599900, this[_0x152f6a(0xe06)] = _0x16b559;
        }
        static ['__init__']() {
            var _0x225db0 = _0x6027f5;
            _0x107170['_vertexDeclaration'] = new _0x4b2139(0xac, [
                new _0x25649b(0x0, _0x53b5cc['Vector3'], _0x3c247f[_0x225db0(0xdf6)]),
                new _0x25649b(0xc, _0x53b5cc[_0x225db0(0x4fd)], _0x3c247f['PARTICLE_COLOR0']),
                new _0x25649b(0x1c, _0x53b5cc['Vector2'], _0x3c247f[_0x225db0(0xdf8)]),
                new _0x25649b(0x24, _0x53b5cc['Vector4'], _0x3c247f[_0x225db0(0xe12)]),
                new _0x25649b(0x34, _0x53b5cc[_0x225db0(0x4fd)], _0x3c247f[_0x225db0(0xdf9)]),
                new _0x25649b(0x44, _0x53b5cc[_0x225db0(0x4fd)], _0x3c247f[_0x225db0(0xdfa)]),
                new _0x25649b(0x54, _0x53b5cc['Vector3'], _0x3c247f[_0x225db0(0xe07)]),
                new _0x25649b(0x60, _0x53b5cc[_0x225db0(0x46b)], _0x3c247f[_0x225db0(0xdfb)]),
                new _0x25649b(0x6c, _0x53b5cc[_0x225db0(0x468)], _0x3c247f[_0x225db0(0xe08)]),
                new _0x25649b(0x70, _0x53b5cc['Vector4'], _0x3c247f[_0x225db0(0xe09)]),
                new _0x25649b(0x80, _0x53b5cc[_0x225db0(0x4fd)], _0x3c247f['PARTICLE_RANDOM1']),
                new _0x25649b(0x90, _0x53b5cc[_0x225db0(0x46b)], _0x3c247f[_0x225db0(0xdfd)]),
                new _0x25649b(0x9c, _0x53b5cc['Vector4'], _0x3c247f[_0x225db0(0xdfe)])
            ]);
        }
        static get [_0x6027f5(0x456)]() {
            return _0x107170['_vertexDeclaration'];
        }
        get [_0x6027f5(0xe0a)]() {
            var _0x5989f0 = _0x6027f5;
            return this[_0x5989f0(0xdff)];
        }
        get ['position']() {
            var _0x138fb1 = _0x6027f5;
            return this[_0x138fb1(0xe00)];
        }
        get [_0x6027f5(0xe0b)]() {
            return this['_velocity'];
        }
        get ['startColor']() {
            var _0x59e3cb = _0x6027f5;
            return this[_0x59e3cb(0xe13)];
        }
        get ['startSize']() {
            var _0x3252b5 = _0x6027f5;
            return this[_0x3252b5(0xe0c)];
        }
        get [_0x6027f5(0xe0d)]() {
            var _0x50f41e = _0x6027f5;
            return this[_0x50f41e(0xe01)];
        }
        get ['startRotation1']() {
            var _0x1750de = _0x6027f5;
            return this[_0x1750de(0xe02)];
        }
        get [_0x6027f5(0xe14)]() {
            var _0x7f6f6f = _0x6027f5;
            return this[_0x7f6f6f(0xe03)];
        }
        get [_0x6027f5(0xe15)]() {
            var _0x47e676 = _0x6027f5;
            return this[_0x47e676(0xe0f)];
        }
        get [_0x6027f5(0x273)]() {
            var _0xfd835b = _0x6027f5;
            return this[_0xfd835b(0xba0)];
        }
        get [_0x6027f5(0xe10)]() {
            return this['_startSpeed'];
        }
        get ['random0']() {
            var _0x4bda61 = _0x6027f5;
            return this[_0x4bda61(0xe11)];
        }
        get [_0x6027f5(0xe16)]() {
            var _0xf958a7 = _0x6027f5;
            return this[_0xf958a7(0xe05)];
        }
        get ['simulationWorldPostion']() {
            return this['_simulationWorldPostion'];
        }
    }
    class _0x44a5c1 {
        constructor(_0x2e37b7) {
            var _0x3b99cd = _0x6027f5;
            this['_temp'] = new Uint32Array(0x1), this[_0x3b99cd(0xe17)] = new Uint32Array(0x4), this[_0x3b99cd(0xe17)][0x0] = _0x2e37b7, this[_0x3b99cd(0xe17)][0x1] = 0x6c078965 * this['seeds'][0x0] + 0x1, this['seeds'][0x2] = 0x6c078965 * this[_0x3b99cd(0xe17)][0x1] + 0x1, this[_0x3b99cd(0xe17)][0x3] = 0x6c078965 * this[_0x3b99cd(0xe17)][0x2] + 0x1;
        }
        static [_0x6027f5(0xe18)](_0xf181a6) {
            return 0x1 / 0x7fffff * (0x7fffff & _0xf181a6);
        }
        static [_0x6027f5(0xe19)](_0x5f2bce) {
            return (0x7fffff & _0x5f2bce) >>> 0xf;
        }
        get [_0x6027f5(0xd66)]() {
            var _0x32aff4 = _0x6027f5;
            return this[_0x32aff4(0xe17)][0x0];
        }
        set ['seed'](_0xd1eecf) {
            var _0x4cede5 = _0x6027f5;
            this[_0x4cede5(0xe17)][0x0] = _0xd1eecf, this[_0x4cede5(0xe17)][0x1] = 0x6c078965 * this[_0x4cede5(0xe17)][0x0] + 0x1, this[_0x4cede5(0xe17)][0x2] = 0x6c078965 * this[_0x4cede5(0xe17)][0x1] + 0x1, this[_0x4cede5(0xe17)][0x3] = 0x6c078965 * this['seeds'][0x2] + 0x1;
        }
        [_0x6027f5(0xe1a)]() {
            var _0x4c1f5f = _0x6027f5;
            return this[_0x4c1f5f(0xe1b)][0x0] = this['seeds'][0x0] ^ this[_0x4c1f5f(0xe17)][0x0] << 0xb, this['seeds'][0x0] = this[_0x4c1f5f(0xe17)][0x1], this[_0x4c1f5f(0xe17)][0x1] = this['seeds'][0x2], this[_0x4c1f5f(0xe17)][0x2] = this[_0x4c1f5f(0xe17)][0x3], this[_0x4c1f5f(0xe17)][0x3] = this[_0x4c1f5f(0xe17)][0x3] ^ this['seeds'][0x3] >>> 0x13 ^ this[_0x4c1f5f(0xe1b)][0x0] ^ this[_0x4c1f5f(0xe1b)][0x0] >>> 0x8, this['seeds'][0x3];
        }
        [_0x6027f5(0xd5e)]() {
            var _0x4b2eb0 = _0x6027f5;
            return this[_0x4b2eb0(0xe1a)](), (0x7fffff & this[_0x4b2eb0(0xe17)][0x3]) * (0x1 / 0x7fffff);
        }
        [_0x6027f5(0xe1c)]() {
            var _0x569374 = _0x6027f5;
            return 0x2 * this[_0x569374(0xd5e)]() - 0x1;
        }
    }
    class _0x46a7c9 {
        constructor() {
            var _0x5a73ea = _0x6027f5;
            this[_0x5a73ea(0xe1d)] = 0xa, this[_0x5a73ea(0xa54)] = !0x1, this[_0x5a73ea(0xe1e)] = [];
        }
        set [_0x6027f5(0xe1f)](_0x55ddd2) {
            var _0x592ea9 = _0x6027f5;
            if (_0x55ddd2 < 0x0)
                throw new Error('ParticleBaseShape:emissionRate\x20value\x20must\x20large\x20or\x20equal\x20than\x200.');
            this[_0x592ea9(0xe1d)] = _0x55ddd2;
        }
        get [_0x6027f5(0xe1f)]() {
            var _0x262b6f = _0x6027f5;
            return this[_0x262b6f(0xe1d)];
        }
        get [_0x6027f5(0x5cf)]() {
            var _0x32b157 = _0x6027f5;
            return this[_0x32b157(0xa54)];
        }
        [_0x6027f5(0x364)]() {
            var _0x50058d = _0x6027f5;
            this['_bursts'] = null, this[_0x50058d(0xa54)] = !0x0;
        }
        [_0x6027f5(0xe20)]() {
            var _0x3ef42b = _0x6027f5;
            return this[_0x3ef42b(0xe1e)]['length'];
        }
        [_0x6027f5(0xe21)](_0x2f08f3) {
            var _0x448930 = _0x6027f5;
            return this[_0x448930(0xe1e)][_0x2f08f3];
        }
        [_0x6027f5(0xe22)](_0x25f0e5) {
            var _0x4ac0b7 = _0x6027f5, _0x5b59d1 = this['_bursts'][_0x4ac0b7(0x205)];
            if (_0x5b59d1 > 0x0) {
                for (var _0x57a68d = 0x0; _0x57a68d < _0x5b59d1; _0x57a68d++)
                    this[_0x4ac0b7(0xe1e)][_0x57a68d][_0x4ac0b7(0x273)] > _0x25f0e5[_0x4ac0b7(0x273)] && this[_0x4ac0b7(0xe1e)][_0x4ac0b7(0x33a)](_0x57a68d, 0x0, _0x25f0e5);
            }
            this['_bursts'][_0x4ac0b7(0x2ac)](_0x25f0e5);
        }
        [_0x6027f5(0xe23)](_0x43a18f) {
            var _0x1bcbe8 = _0x6027f5, _0x209254 = this[_0x1bcbe8(0xe1e)][_0x1bcbe8(0x2f9)](_0x43a18f);
            -0x1 !== _0x209254 && this[_0x1bcbe8(0xe1e)][_0x1bcbe8(0x33a)](_0x209254, 0x1);
        }
        ['removeBurstByIndex'](_0x41b8f7) {
            var _0x5444a8 = _0x6027f5;
            this[_0x5444a8(0xe1e)][_0x5444a8(0x33a)](_0x41b8f7, 0x1);
        }
        ['clearBurst']() {
            var _0x84d30a = _0x6027f5;
            this['_bursts'][_0x84d30a(0x205)] = 0x0;
        }
        [_0x6027f5(0x1fc)](_0x1b0fff) {
            var _0x4519d1 = _0x6027f5, _0x313dac = _0x1b0fff, _0x150c21 = _0x313dac[_0x4519d1(0xe1e)];
            _0x150c21[_0x4519d1(0x205)] = this['_bursts']['length'];
            for (var _0x2ee61b = 0x0, _0x535996 = this[_0x4519d1(0xe1e)][_0x4519d1(0x205)]; _0x2ee61b < _0x535996; _0x2ee61b++) {
                var _0x214e9a = _0x150c21[_0x2ee61b];
                _0x214e9a ? this[_0x4519d1(0xe1e)][_0x2ee61b][_0x4519d1(0x1fc)](_0x214e9a) : _0x150c21[_0x2ee61b] = this[_0x4519d1(0xe1e)][_0x2ee61b][_0x4519d1(0x1fd)]();
            }
            _0x313dac[_0x4519d1(0xe1d)] = this[_0x4519d1(0xe1d)], _0x313dac[_0x4519d1(0x659)] = this[_0x4519d1(0x659)];
        }
        ['clone']() {
            var _0x54251c = _0x6027f5, _0x8bbd11 = new _0x46a7c9();
            return this[_0x54251c(0x1fc)](_0x8bbd11), _0x8bbd11;
        }
    }
    class _0xe4da7f {
        constructor() {
        }
        static ['_getStartLifetimeFromGradient'](_0x45d027, _0x1790e4) {
            var _0x4bc4eb = _0x6027f5;
            for (var _0x1a2be1 = 0x1, _0x52bf45 = _0x45d027['gradientCount']; _0x1a2be1 < _0x52bf45; _0x1a2be1++) {
                var _0x2aefed = _0x45d027[_0x4bc4eb(0xd49)](_0x1a2be1);
                if (_0x2aefed >= _0x1790e4) {
                    var _0x17bddc = _0x45d027[_0x4bc4eb(0xd49)](_0x1a2be1 - 0x1), _0x17511c = (_0x1790e4 - _0x17bddc) / (_0x2aefed - _0x17bddc);
                    return _0x387b86[_0x4bc4eb(0xe24)][_0x4bc4eb(0x202)](_0x45d027[_0x4bc4eb(0xd4a)](_0x1a2be1 - 0x1), _0x45d027[_0x4bc4eb(0xd4a)](_0x1a2be1), _0x17511c);
                }
            }
            throw new Error('ShurikenParticleData:\x20can\x27t\x20get\x20value\x20foam\x20startLifeTimeGradient.');
        }
        static [_0x6027f5(0xe25)](_0x3e5684, _0x8d9018, _0x1eb9a8, _0x38c57a, _0x10196d) {
            var _0x41b058 = _0x6027f5, _0x2c5ac8;
            _0x38c57a ? (_0x38c57a[_0x41b058(0xd66)] = _0x10196d[0x6], _0x2c5ac8 = _0x38c57a[_0x41b058(0xd5e)](), _0x10196d[0x6] = _0x38c57a[_0x41b058(0xd66)]) : _0x2c5ac8 = Math['random'](), _0x2c5ac8 < _0x1eb9a8 ? (_0x8d9018['x'] = -_0x3e5684['x'], _0x8d9018['y'] = -_0x3e5684['y'], _0x8d9018['z'] = -_0x3e5684['z']) : (_0x8d9018['x'] = _0x3e5684['x'], _0x8d9018['y'] = _0x3e5684['y'], _0x8d9018['z'] = _0x3e5684['z']);
        }
        static [_0x6027f5(0xe26)](_0x585e61, _0x4863e0, _0xee4c99, _0x1bae43) {
            var _0x160049 = _0x6027f5, _0x20cc44;
            return _0xee4c99 ? (_0xee4c99[_0x160049(0xd66)] = _0x1bae43[0x6], _0x20cc44 = _0xee4c99[_0x160049(0xd5e)](), _0x1bae43[0x6] = _0xee4c99[_0x160049(0xd66)]) : _0x20cc44 = Math[_0x160049(0xd5f)](), _0x20cc44 < _0x4863e0 && (_0x585e61 = -_0x585e61), _0x585e61;
        }
        static [_0x6027f5(0x32a)](_0x5e8557, _0x14280f) {
            var _0x18e82a = _0x6027f5, _0x542334 = _0x5e8557[_0x18e82a(0xe27)], _0x3861a1 = _0x5e8557[_0x18e82a(0xe28)], _0x1ff88d = _0x5e8557[_0x18e82a(0xe29)];
            switch (_0x5e8557[_0x18e82a(0xe2a)]) {
            case 0x0:
                var _0x25b634 = _0x5e8557[_0x18e82a(0xe2b)];
                _0xe4da7f[_0x18e82a(0xe2c)]['x'] = _0x25b634['x'], _0xe4da7f[_0x18e82a(0xe2c)]['y'] = _0x25b634['y'], _0xe4da7f['startColor']['z'] = _0x25b634['z'], _0xe4da7f[_0x18e82a(0xe2c)]['w'] = _0x25b634['w'];
                break;
            case 0x2:
                _0x542334 ? _0x5b8e4e[_0x18e82a(0x202)](_0x5e8557[_0x18e82a(0xe2d)], _0x5e8557[_0x18e82a(0xe2e)], Math[_0x18e82a(0xd5f)](), _0xe4da7f[_0x18e82a(0xe2c)]) : (_0x3861a1['seed'] = _0x1ff88d[0x3], _0x5b8e4e['lerp'](_0x5e8557[_0x18e82a(0xe2d)], _0x5e8557[_0x18e82a(0xe2e)], _0x3861a1[_0x18e82a(0xd5e)](), _0xe4da7f[_0x18e82a(0xe2c)]), _0x1ff88d[0x3] = _0x3861a1[_0x18e82a(0xd66)]);
            }
            var _0x2a8b1c = _0x5e8557[_0x18e82a(0xe2f)];
            if (_0x2a8b1c && _0x2a8b1c[_0x18e82a(0x659)]) {
                var _0x5685c9 = _0x2a8b1c[_0x18e82a(0x46f)];
                switch (_0x5685c9[_0x18e82a(0x2cc)]) {
                case 0x0:
                    _0xe4da7f[_0x18e82a(0xe2c)]['x'] = _0xe4da7f[_0x18e82a(0xe2c)]['x'] * _0x5685c9[_0x18e82a(0xd14)]['x'], _0xe4da7f[_0x18e82a(0xe2c)]['y'] = _0xe4da7f[_0x18e82a(0xe2c)]['y'] * _0x5685c9[_0x18e82a(0xd14)]['y'], _0xe4da7f[_0x18e82a(0xe2c)]['z'] = _0xe4da7f[_0x18e82a(0xe2c)]['z'] * _0x5685c9[_0x18e82a(0xd14)]['z'], _0xe4da7f[_0x18e82a(0xe2c)]['w'] = _0xe4da7f[_0x18e82a(0xe2c)]['w'] * _0x5685c9[_0x18e82a(0xd14)]['w'];
                    break;
                case 0x2:
                    var _0x1f642e;
                    _0x542334 ? _0x1f642e = Math['random']() : (_0x3861a1['seed'] = _0x1ff88d[0xa], _0x1f642e = _0x3861a1['getFloat'](), _0x1ff88d[0xa] = _0x3861a1[_0x18e82a(0xd66)]);
                    var _0x3f0fee = _0x5685c9['constantMin'], _0x2390e5 = _0x5685c9[_0x18e82a(0xd16)];
                    _0xe4da7f['startColor']['x'] = _0xe4da7f[_0x18e82a(0xe2c)]['x'] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x3f0fee['x'], _0x2390e5['x'], _0x1f642e), _0xe4da7f['startColor']['y'] = _0xe4da7f[_0x18e82a(0xe2c)]['y'] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x3f0fee['y'], _0x2390e5['y'], _0x1f642e), _0xe4da7f[_0x18e82a(0xe2c)]['z'] = _0xe4da7f[_0x18e82a(0xe2c)]['z'] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x3f0fee['z'], _0x2390e5['z'], _0x1f642e), _0xe4da7f[_0x18e82a(0xe2c)]['w'] = _0xe4da7f['startColor']['w'] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x3f0fee['w'], _0x2390e5['w'], _0x1f642e);
                }
            }
            var _0x40f2a8 = _0xe4da7f[_0x18e82a(0xe30)];
            switch (_0x5e8557[_0x18e82a(0xe31)]) {
            case 0x0:
                if (_0x5e8557['threeDStartSize']) {
                    var _0x4cc024 = _0x5e8557[_0x18e82a(0xe32)];
                    _0x40f2a8[0x0] = _0x4cc024['x'], _0x40f2a8[0x1] = _0x4cc024['y'], _0x40f2a8[0x2] = _0x4cc024['z'];
                } else
                    _0x40f2a8[0x0] = _0x40f2a8[0x1] = _0x40f2a8[0x2] = _0x5e8557[_0x18e82a(0xe33)];
                break;
            case 0x2:
                if (_0x5e8557[_0x18e82a(0xe34)]) {
                    var _0xe0fd9f = _0x5e8557['startSizeConstantMinSeparate'], _0x237ace = _0x5e8557[_0x18e82a(0xe35)];
                    _0x542334 ? (_0x40f2a8[0x0] = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0xe0fd9f['x'], _0x237ace['x'], Math[_0x18e82a(0xd5f)]()), _0x40f2a8[0x1] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0xe0fd9f['y'], _0x237ace['y'], Math[_0x18e82a(0xd5f)]()), _0x40f2a8[0x2] = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0xe0fd9f['z'], _0x237ace['z'], Math['random']())) : (_0x3861a1['seed'] = _0x1ff88d[0x4], _0x40f2a8[0x0] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0xe0fd9f['x'], _0x237ace['x'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x40f2a8[0x1] = _0x387b86['MathUtil'][_0x18e82a(0x202)](_0xe0fd9f['y'], _0x237ace['y'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x40f2a8[0x2] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0xe0fd9f['z'], _0x237ace['z'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0x4] = _0x3861a1[_0x18e82a(0xd66)]);
                } else
                    _0x542334 ? _0x40f2a8[0x0] = _0x40f2a8[0x1] = _0x40f2a8[0x2] = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5e8557[_0x18e82a(0xe36)], _0x5e8557[_0x18e82a(0xe37)], Math['random']()) : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0x4], _0x40f2a8[0x0] = _0x40f2a8[0x1] = _0x40f2a8[0x2] = _0x387b86['MathUtil']['lerp'](_0x5e8557[_0x18e82a(0xe36)], _0x5e8557['startSizeConstantMax'], _0x3861a1['getFloat']()), _0x1ff88d[0x4] = _0x3861a1[_0x18e82a(0xd66)]);
            }
            var _0x4459f5 = _0x5e8557[_0x18e82a(0xe38)];
            if (_0x4459f5 && _0x4459f5[_0x18e82a(0x659)] && 0x1 === _0x4459f5['size'][_0x18e82a(0x2cc)]) {
                var _0x286cdb, _0x5cd45a = _0x4459f5[_0x18e82a(0x2a7)];
                if (_0x5cd45a[_0x18e82a(0xd38)])
                    _0x542334 ? (_0x40f2a8[0x0] = _0x40f2a8[0x0] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5cd45a[_0x18e82a(0xd3e)]['x'], _0x5cd45a[_0x18e82a(0xd3f)]['x'], Math[_0x18e82a(0xd5f)]()), _0x40f2a8[0x1] = _0x40f2a8[0x1] * _0x387b86[_0x18e82a(0xe24)]['lerp'](_0x5cd45a['constantMinSeparate']['y'], _0x5cd45a[_0x18e82a(0xd3f)]['y'], Math['random']()), _0x40f2a8[0x2] = _0x40f2a8[0x2] * _0x387b86[_0x18e82a(0xe24)]['lerp'](_0x5cd45a[_0x18e82a(0xd3e)]['z'], _0x5cd45a[_0x18e82a(0xd3f)]['z'], Math[_0x18e82a(0xd5f)]())) : (_0x3861a1['seed'] = _0x1ff88d[0xb], _0x40f2a8[0x0] = _0x40f2a8[0x0] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5cd45a[_0x18e82a(0xd3e)]['x'], _0x5cd45a['constantMaxSeparate']['x'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x40f2a8[0x1] = _0x40f2a8[0x1] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5cd45a[_0x18e82a(0xd3e)]['y'], _0x5cd45a['constantMaxSeparate']['y'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x40f2a8[0x2] = _0x40f2a8[0x2] * _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5cd45a[_0x18e82a(0xd3e)]['z'], _0x5cd45a[_0x18e82a(0xd3f)]['z'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0xb] = _0x3861a1[_0x18e82a(0xd66)]);
                else
                    _0x542334 ? _0x286cdb = _0x387b86['MathUtil']['lerp'](_0x5cd45a['constantMin'], _0x5cd45a[_0x18e82a(0xd16)], Math[_0x18e82a(0xd5f)]()) : (_0x3861a1['seed'] = _0x1ff88d[0xb], _0x286cdb = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5cd45a[_0x18e82a(0xd15)], _0x5cd45a[_0x18e82a(0xd16)], _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0xb] = _0x3861a1[_0x18e82a(0xd66)]), _0x40f2a8[0x0] = _0x40f2a8[0x0] * _0x286cdb, _0x40f2a8[0x1] = _0x40f2a8[0x1] * _0x286cdb, _0x40f2a8[0x2] = _0x40f2a8[0x2] * _0x286cdb;
            }
            var _0x5ebbcf = _0x14280f[_0x18e82a(0x730)];
            if (0x1 !== _0x5ebbcf)
                switch (_0x5e8557[_0x18e82a(0xe39)]) {
                case 0x0:
                    if (_0x5e8557['threeDStartRotation']) {
                        var _0x5d9856 = _0x5e8557[_0x18e82a(0xe3a)], _0x1378e3 = _0xe4da7f[_0x18e82a(0x59f)];
                        _0xe4da7f[_0x18e82a(0xe25)](_0x5d9856, _0x1378e3, _0x5e8557[_0x18e82a(0xe3b)], _0x542334 ? null : _0x3861a1, _0x1ff88d), _0xe4da7f[_0x18e82a(0xe3c)][0x0] = _0x1378e3['x'], _0xe4da7f[_0x18e82a(0xe3c)][0x1] = _0x1378e3['y'], _0xe4da7f['startRotation'][0x2] = 0x4 !== _0x5ebbcf ? -_0x1378e3['z'] : _0x1378e3['z'];
                    } else
                        _0xe4da7f[_0x18e82a(0xe3c)][0x0] = _0xe4da7f['_randomInvertRoation'](_0x5e8557[_0x18e82a(0xe3d)], _0x5e8557['randomizeRotationDirection'], _0x542334 ? null : _0x3861a1, _0x1ff88d), _0xe4da7f[_0x18e82a(0xe3c)][0x1] = 0x0, _0xe4da7f[_0x18e82a(0xe3c)][0x2] = 0x0;
                    break;
                case 0x2:
                    if (_0x5e8557[_0x18e82a(0xdf1)]) {
                        var _0x5d3fd4 = _0x5e8557[_0x18e82a(0xe3e)], _0x3c12a4 = _0x5e8557['startRotationConstantMaxSeparate'], _0x36ccc6 = _0xe4da7f[_0x18e82a(0x59f)];
                        _0x542334 ? (_0x36ccc6['x'] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0x5d3fd4['x'], _0x3c12a4['x'], Math[_0x18e82a(0xd5f)]()), _0x36ccc6['y'] = _0x387b86['MathUtil']['lerp'](_0x5d3fd4['y'], _0x3c12a4['y'], Math[_0x18e82a(0xd5f)]()), _0x36ccc6['z'] = _0x387b86['MathUtil'][_0x18e82a(0x202)](_0x5d3fd4['z'], _0x3c12a4['z'], Math['random']())) : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0x5], _0x36ccc6['x'] = _0x387b86['MathUtil']['lerp'](_0x5d3fd4['x'], _0x3c12a4['x'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x36ccc6['y'] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0x5d3fd4['y'], _0x3c12a4['y'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x36ccc6['z'] = _0x387b86['MathUtil'][_0x18e82a(0x202)](_0x5d3fd4['z'], _0x3c12a4['z'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0x5] = _0x3861a1[_0x18e82a(0xd66)]), _0xe4da7f[_0x18e82a(0xe25)](_0x36ccc6, _0x36ccc6, _0x5e8557[_0x18e82a(0xe3b)], _0x542334 ? null : _0x3861a1, _0x1ff88d), _0xe4da7f[_0x18e82a(0xe3c)][0x0] = _0x36ccc6['x'], _0xe4da7f[_0x18e82a(0xe3c)][0x1] = _0x36ccc6['y'], _0xe4da7f[_0x18e82a(0xe3c)][0x2] = 0x4 !== _0x5ebbcf ? -_0x36ccc6['z'] : _0x36ccc6['z'];
                    } else
                        _0x542334 ? _0xe4da7f[_0x18e82a(0xe3c)][0x0] = _0xe4da7f[_0x18e82a(0xe26)](_0x387b86[_0x18e82a(0xe24)]['lerp'](_0x5e8557['startRotationConstantMin'], _0x5e8557[_0x18e82a(0xe3f)], Math[_0x18e82a(0xd5f)]()), _0x5e8557[_0x18e82a(0xe3b)], _0x542334 ? null : _0x3861a1, _0x1ff88d) : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0x5], _0xe4da7f[_0x18e82a(0xe3c)][0x0] = _0xe4da7f[_0x18e82a(0xe26)](_0x387b86['MathUtil'][_0x18e82a(0x202)](_0x5e8557[_0x18e82a(0xe40)], _0x5e8557['startRotationConstantMax'], _0x3861a1[_0x18e82a(0xd5e)]()), _0x5e8557[_0x18e82a(0xe3b)], _0x542334 ? null : _0x3861a1, _0x1ff88d), _0x1ff88d[0x5] = _0x3861a1[_0x18e82a(0xd66)]);
                }
            switch (_0x5e8557[_0x18e82a(0xe41)]) {
            case 0x0:
                _0xe4da7f[_0x18e82a(0xe15)] = _0x5e8557['startLifetimeConstant'];
                break;
            case 0x1:
                _0xe4da7f[_0x18e82a(0xe15)] = _0xe4da7f[_0x18e82a(0xe42)](_0x5e8557[_0x18e82a(0xe43)], _0x5e8557['emissionTime']);
                break;
            case 0x2:
                _0x542334 ? _0xe4da7f[_0x18e82a(0xe15)] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0x5e8557[_0x18e82a(0xe44)], _0x5e8557[_0x18e82a(0xe45)], Math[_0x18e82a(0xd5f)]()) : (_0x3861a1['seed'] = _0x1ff88d[0x7], _0xe4da7f['startLifeTime'] = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5e8557[_0x18e82a(0xe44)], _0x5e8557[_0x18e82a(0xe45)], _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0x7] = _0x3861a1['seed']);
                break;
            case 0x3:
                var _0x4eaa05 = _0x5e8557[_0x18e82a(0xe46)];
                _0x542334 ? _0xe4da7f[_0x18e82a(0xe15)] = _0x387b86[_0x18e82a(0xe24)]['lerp'](_0xe4da7f[_0x18e82a(0xe42)](_0x5e8557[_0x18e82a(0xe47)], _0x4eaa05), _0xe4da7f[_0x18e82a(0xe42)](_0x5e8557[_0x18e82a(0xe48)], _0x4eaa05), Math['random']()) : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0x7], _0xe4da7f[_0x18e82a(0xe15)] = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0xe4da7f[_0x18e82a(0xe42)](_0x5e8557[_0x18e82a(0xe47)], _0x4eaa05), _0xe4da7f[_0x18e82a(0xe42)](_0x5e8557[_0x18e82a(0xe48)], _0x4eaa05), _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0x7] = _0x3861a1[_0x18e82a(0xd66)]);
            }
            var _0x14a8a4 = _0x5e8557['textureSheetAnimation'];
            if (_0x14a8a4 && _0x14a8a4[_0x18e82a(0x659)]) {
                var _0x4c4521, _0x16f784 = _0x14a8a4[_0x18e82a(0xd76)], _0x14b4e = _0x16f784['x'], _0x15fff2 = _0x16f784['y'], _0x5c6327 = 0x1 / _0x14b4e, _0x10e719 = 0x1 / _0x15fff2, _0x5052de = _0x14a8a4['startFrame'];
                switch (_0x5052de['type']) {
                case 0x0:
                    _0x4c4521 = _0x5052de[_0x18e82a(0xd14)];
                    break;
                case 0x1:
                    _0x542334 ? _0x4c4521 = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5052de[_0x18e82a(0xd15)], _0x5052de[_0x18e82a(0xd16)], Math[_0x18e82a(0xd5f)]()) : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0xe], _0x4c4521 = _0x387b86[_0x18e82a(0xe24)][_0x18e82a(0x202)](_0x5052de[_0x18e82a(0xd15)], _0x5052de[_0x18e82a(0xd16)], _0x3861a1[_0x18e82a(0xd5e)]()), _0x1ff88d[0xe] = _0x3861a1[_0x18e82a(0xd66)]);
                }
                var _0x215510 = _0x14a8a4[_0x18e82a(0xd78)], _0x1f6276 = _0x14a8a4['cycles'];
                switch (_0x215510[_0x18e82a(0x2cc)]) {
                case 0x0:
                    _0x4c4521 += _0x215510[_0x18e82a(0xd14)] * _0x1f6276;
                    break;
                case 0x2:
                    _0x542334 ? _0x4c4521 += _0x387b86[_0x18e82a(0xe24)]['lerp'](_0x215510[_0x18e82a(0xd15)], _0x215510[_0x18e82a(0xd16)], Math[_0x18e82a(0xd5f)]()) * _0x1f6276 : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0xf], _0x4c4521 += _0x387b86['MathUtil'][_0x18e82a(0x202)](_0x215510[_0x18e82a(0xd15)], _0x215510[_0x18e82a(0xd16)], _0x3861a1[_0x18e82a(0xd5e)]()) * _0x1f6276, _0x1ff88d[0xf] = _0x3861a1[_0x18e82a(0xd66)]);
                }
                var _0x37b25b = 0x0;
                switch (_0x14a8a4[_0x18e82a(0x2cc)]) {
                case 0x0:
                    _0x37b25b = Math['floor'](_0x4c4521 / _0x14b4e);
                    break;
                case 0x1:
                    _0x14a8a4[_0x18e82a(0xd72)] ? _0x542334 ? _0x37b25b = Math[_0x18e82a(0x24e)](Math[_0x18e82a(0xd5f)]() * _0x15fff2) : (_0x3861a1[_0x18e82a(0xd66)] = _0x1ff88d[0xd], _0x37b25b = Math[_0x18e82a(0x24e)](_0x3861a1[_0x18e82a(0xd5e)]() * _0x15fff2), _0x1ff88d[0xd] = _0x3861a1['seed']) : _0x37b25b = _0x14a8a4[_0x18e82a(0xd73)];
                }
                var _0x210677 = Math[_0x18e82a(0x24e)](_0x4c4521 % _0x14b4e);
                _0xe4da7f['startUVInfo'] = _0xe4da7f['startUVInfo'], _0xe4da7f[_0x18e82a(0xe49)][0x0] = _0x5c6327, _0xe4da7f[_0x18e82a(0xe49)][0x1] = _0x10e719, _0xe4da7f[_0x18e82a(0xe49)][0x2] = _0x210677 * _0x5c6327, _0xe4da7f[_0x18e82a(0xe49)][0x3] = _0x37b25b * _0x10e719;
            } else
                _0xe4da7f['startUVInfo'] = _0xe4da7f['startUVInfo'], _0xe4da7f['startUVInfo'][0x0] = 0x1, _0xe4da7f[_0x18e82a(0xe49)][0x1] = 0x1, _0xe4da7f[_0x18e82a(0xe49)][0x2] = 0x0, _0xe4da7f[_0x18e82a(0xe49)][0x3] = 0x0;
        }
    }
    _0xe4da7f[_0x6027f5(0x59f)] = new _0x3697cd(), _0xe4da7f[_0x6027f5(0xe2c)] = new _0x5b8e4e(), _0xe4da7f[_0x6027f5(0xe30)] = new Float32Array(0x3), _0xe4da7f[_0x6027f5(0xe3c)] = new Float32Array(0x3), _0xe4da7f[_0x6027f5(0xe49)] = new Float32Array(0x4);
    class _0xec89de extends _0x2be7a6 {
        constructor(_0x3cdb6a) {
            var _0x385fc4 = _0x6027f5;
            super(), this[_0x385fc4(0xe4a)] = null, this['_boundingBox'] = null, this[_0x385fc4(0xe4b)] = null, this[_0x385fc4(0xa5d)] = null, this[_0x385fc4(0xe4c)] = new _0x30a72c(), this[_0x385fc4(0xe4d)] = null, this[_0x385fc4(0xde8)] = !0x1, this['_owner'] = null, this[_0x385fc4(0xe4e)] = null, this[_0x385fc4(0x4f7)] = null, this[_0x385fc4(0xe4f)] = 0x0, this[_0x385fc4(0xe50)] = 0x0, this[_0x385fc4(0xe51)] = 0x0, this[_0x385fc4(0xe52)] = !0x1, this[_0x385fc4(0xe53)] = 0x0, this[_0x385fc4(0xe54)] = 0x0, this[_0x385fc4(0xe55)] = 0x0, this[_0x385fc4(0xe56)] = 0x0, this[_0x385fc4(0xe57)] = 0x0, this[_0x385fc4(0xe58)] = 0x0, this[_0x385fc4(0xe59)] = null, this['_shape'] = null, this[_0x385fc4(0xe5a)] = !0x1, this[_0x385fc4(0xe5b)] = !0x1, this['_isPaused'] = !0x1, this[_0x385fc4(0xe5c)] = 0x0, this['_frameRateTime'] = 0x0, this[_0x385fc4(0xe5d)] = 0x0, this[_0x385fc4(0xe5e)] = 0x0, this[_0x385fc4(0xe5f)] = 0x0, this['_velocityOverLifetime'] = null, this['_colorOverLifetime'] = null, this['_sizeOverLifetime'] = null, this['_rotationOverLifetime'] = null, this[_0x385fc4(0xe60)] = null, this[_0x385fc4(0xe61)] = 0x0, this[_0x385fc4(0xe62)] = 0x0, this['_startLifeTimeGradient'] = null, this['_startLifetimeConstantMin'] = 0x0, this['_startLifetimeConstantMax'] = 0x0, this[_0x385fc4(0xe63)] = null, this['_startLifeTimeGradientMax'] = null, this['_maxStartLifetime'] = 0x0, this[_0x385fc4(0xe64)] = new _0x30a72c(), this[_0x385fc4(0x4e0)] = 0x0, this['_indexStride'] = 0x0, this[_0x385fc4(0x4f6)] = null, this['_indexBuffer'] = null, this[_0x385fc4(0x4f8)] = new _0x5b1dae(), this[_0x385fc4(0xe65)] = 0x0, this[_0x385fc4(0xdf4)] = 0x0, this[_0x385fc4(0xe66)] = 0x0, this[_0x385fc4(0xe28)] = null, this['_randomSeeds'] = null, this['duration'] = 0x0, this[_0x385fc4(0xe67)] = !0x1, this['prewarm'] = !0x1, this[_0x385fc4(0xe68)] = 0x0, this[_0x385fc4(0xe69)] = 0x0, this['startDelayMin'] = 0x0, this[_0x385fc4(0xe6a)] = 0x0, this['startSpeedType'] = 0x0, this[_0x385fc4(0xe6b)] = 0x0, this[_0x385fc4(0xe6c)] = 0x0, this[_0x385fc4(0xe6d)] = 0x0, this['threeDStartSize'] = !0x1, this['startSizeType'] = 0x0, this[_0x385fc4(0xe33)] = 0x0, this[_0x385fc4(0xe32)] = null, this[_0x385fc4(0xe36)] = 0x0, this[_0x385fc4(0xe37)] = 0x0, this[_0x385fc4(0xe6e)] = null, this[_0x385fc4(0xe35)] = null, this[_0x385fc4(0xdf1)] = !0x1, this[_0x385fc4(0xe39)] = 0x0, this[_0x385fc4(0xe3d)] = 0x0, this['startRotationConstantSeparate'] = null, this[_0x385fc4(0xe40)] = 0x0, this['startRotationConstantMax'] = 0x0, this[_0x385fc4(0xe3e)] = null, this[_0x385fc4(0xe6f)] = null, this[_0x385fc4(0xe3b)] = 0x0, this['startColorType'] = 0x0, this[_0x385fc4(0xe2b)] = new _0x5b8e4e(0x1, 0x1, 0x1, 0x1), this[_0x385fc4(0xe2d)] = new _0x5b8e4e(0x0, 0x0, 0x0, 0x0), this[_0x385fc4(0xe2e)] = new _0x5b8e4e(0x1, 0x1, 0x1, 0x1), this[_0x385fc4(0xdeb)] = 0x0, this[_0x385fc4(0xded)] = 0x0, this['simulationSpeed'] = 0x1, this[_0x385fc4(0xdef)] = 0x1, this[_0x385fc4(0xe70)] = !0x1, this[_0x385fc4(0xe71)] = null, this[_0x385fc4(0xe27)] = !0x1, this[_0x385fc4(0xe72)] = !0x1, this['_firstActiveElement'] = 0x0, this[_0x385fc4(0xe54)] = 0x0, this[_0x385fc4(0xe55)] = 0x0, this[_0x385fc4(0xe56)] = 0x0, this[_0x385fc4(0x3dc)] = _0x3cdb6a, this['_ownerRender'] = _0x3cdb6a['particleRenderer'], this[_0x385fc4(0xe4b)] = [], this[_0x385fc4(0xe4a)] = new _0x1d9351(new _0x3697cd(), Number[_0x385fc4(0xa3d)]), this[_0x385fc4(0xe73)] = new _0x4dce5e(new _0x3697cd(-Number[_0x385fc4(0xa3d)], -Number[_0x385fc4(0xa3d)], -Number['MAX_VALUE']), new _0x3697cd(Number['MAX_VALUE'], Number[_0x385fc4(0xa3d)], Number[_0x385fc4(0xa3d)])), this[_0x385fc4(0xa5d)] = new _0xf16d64(this[_0x385fc4(0xe73)]['min'], this[_0x385fc4(0xe73)][_0x385fc4(0x20c)]), this[_0x385fc4(0xde8)] = !0x1, this['_currentTime'] = 0x0, this[_0x385fc4(0xe5a)] = !0x1, this[_0x385fc4(0xe5b)] = !0x1, this['_isPaused'] = !0x1, this[_0x385fc4(0xe5f)] = 0x0, this[_0x385fc4(0xe74)] = 0x0, this['_emissionTime'] = 0x0, this[_0x385fc4(0xe5e)] = 0x0, this[_0x385fc4(0xe52)] = !0x1, this[_0x385fc4(0xe58)] = 0x1, this[_0x385fc4(0x32c)] = 0x5, this[_0x385fc4(0xe67)] = !0x0, this[_0x385fc4(0xe75)] = !0x1, this[_0x385fc4(0xe68)] = 0x0, this['startDelay'] = 0x0, this[_0x385fc4(0xe76)] = 0x0, this[_0x385fc4(0xe6a)] = 0x0, this[_0x385fc4(0xe61)] = 0x0, this[_0x385fc4(0xe62)] = 0x5, this[_0x385fc4(0xe77)] = new _0x239637(), this[_0x385fc4(0xe78)] = 0x0, this['_startLifetimeConstantMax'] = 0x5, this[_0x385fc4(0xe63)] = new _0x239637(), this[_0x385fc4(0xe79)] = new _0x239637(), this['_maxStartLifetime'] = 0x5, this['startSpeedType'] = 0x0, this[_0x385fc4(0xe6b)] = 0x5, this['startSpeedConstantMin'] = 0x0, this[_0x385fc4(0xe6d)] = 0x5, this[_0x385fc4(0xe34)] = !0x1, this[_0x385fc4(0xe31)] = 0x0, this['startSizeConstant'] = 0x1, this['startSizeConstantSeparate'] = new _0x3697cd(0x1, 0x1, 0x1), this[_0x385fc4(0xe36)] = 0x0, this[_0x385fc4(0xe37)] = 0x1, this[_0x385fc4(0xe6e)] = new _0x3697cd(0x0, 0x0, 0x0), this[_0x385fc4(0xe35)] = new _0x3697cd(0x1, 0x1, 0x1), this[_0x385fc4(0xdf1)] = !0x1, this['startRotationType'] = 0x0, this['startRotationConstant'] = 0x0, this[_0x385fc4(0xe3a)] = new _0x3697cd(0x0, 0x0, 0x0), this['startRotationConstantMin'] = 0x0, this[_0x385fc4(0xe3f)] = 0x0, this[_0x385fc4(0xe3e)] = new _0x3697cd(0x0, 0x0, 0x0), this[_0x385fc4(0xe6f)] = new _0x3697cd(0x0, 0x0, 0x0), this[_0x385fc4(0xdeb)] = 0x0, this[_0x385fc4(0xded)] = 0x1, this[_0x385fc4(0xdef)] = 0x1, this[_0x385fc4(0xe70)] = !0x0, this[_0x385fc4(0xe28)] = new _0x44a5c1(0x0), this[_0x385fc4(0xe27)] = !0x0, this[_0x385fc4(0xe71)] = new Uint32Array(0x1), this[_0x385fc4(0xe29)] = new Uint32Array(_0xec89de[_0x385fc4(0xe7a)]['length']), this[_0x385fc4(0xe72)] = !0x0, this[_0x385fc4(0xe59)] = new _0x46a7c9(), this[_0x385fc4(0xe59)]['enable'] = !0x0;
        }
        get [_0x6027f5(0xe7b)]() {
            var _0x20cee0 = _0x6027f5;
            return this[_0x20cee0(0xe58)] - 0x1;
        }
        set [_0x6027f5(0xe7b)](_0x9d2458) {
            var _0x3a7ce2 = _0x6027f5, _0x29b2c3 = _0x9d2458 + 0x1;
            _0x29b2c3 !== this[_0x3a7ce2(0xe58)] && (this['_bufferMaxParticles'] = _0x29b2c3, this['_initBufferDatas']());
        }
        get ['emission']() {
            var _0x65a60d = _0x6027f5;
            return this[_0x65a60d(0xe59)];
        }
        get [_0x6027f5(0xe7c)]() {
            var _0x1866d6 = _0x6027f5;
            return this[_0x1866d6(0xe54)] >= this['_firstRetiredElement'] ? this['_firstNewElement'] - this[_0x1866d6(0xe56)] : this[_0x1866d6(0xe58)] - this[_0x1866d6(0xe56)] + this[_0x1866d6(0xe54)];
        }
        get [_0x6027f5(0xe46)]() {
            var _0x310bbb = _0x6027f5;
            return this[_0x310bbb(0xe5d)] > this[_0x310bbb(0x32c)] ? this[_0x310bbb(0x32c)] : this[_0x310bbb(0xe5d)];
        }
        get [_0x6027f5(0xe7d)]() {
            var _0x2b004b = _0x6027f5;
            return this[_0x2b004b(0xe7e)];
        }
        set [_0x6027f5(0xe7d)](_0x5a87f0) {
            var _0xef67b9 = _0x6027f5;
            this[_0xef67b9(0xe7e)] !== _0x5a87f0 && (_0x5a87f0 && _0x5a87f0[_0xef67b9(0x659)] ? this[_0xef67b9(0x3dc)][_0xef67b9(0x5e8)]['_shaderValues'][_0xef67b9(0x49a)](_0x54eac9['SHADERDEFINE_SHAPE']) : this[_0xef67b9(0x3dc)][_0xef67b9(0x5e8)][_0xef67b9(0x4e2)][_0xef67b9(0x49b)](_0x54eac9[_0xef67b9(0xe7f)]), this[_0xef67b9(0xe7e)] = _0x5a87f0);
        }
        get [_0x6027f5(0xdec)]() {
            var _0x54c14b = _0x6027f5;
            return !!(this[_0x54c14b(0xe5b)] || this[_0x54c14b(0xe7c)] > 0x0);
        }
        get [_0x6027f5(0xe80)]() {
            var _0x558922 = _0x6027f5;
            return this[_0x558922(0xe5a)];
        }
        get ['isPlaying']() {
            return this['_isPlaying'];
        }
        get ['isPaused']() {
            var _0x34ebca = _0x6027f5;
            return this[_0x34ebca(0xe81)];
        }
        get [_0x6027f5(0xe41)]() {
            var _0x9c7fb7 = _0x6027f5;
            return this[_0x9c7fb7(0xe61)];
        }
        set [_0x6027f5(0xe41)](_0x53bf71) {
            var _0x25b799 = _0x6027f5, _0x334586, _0x22a62c;
            switch (this[_0x25b799(0xe41)]) {
            case 0x0:
                this[_0x25b799(0xe82)] = this[_0x25b799(0xe83)];
                break;
            case 0x1:
                this[_0x25b799(0xe82)] = -Number[_0x25b799(0xa3d)];
                var _0x1391f8 = _0x1391f8;
                for (_0x334586 = 0x0, _0x22a62c = _0x1391f8[_0x25b799(0xd46)]; _0x334586 < _0x22a62c; _0x334586++)
                    this[_0x25b799(0xe82)] = Math[_0x25b799(0x20c)](this['_maxStartLifetime'], _0x1391f8[_0x25b799(0xd4a)](_0x334586));
                break;
            case 0x2:
                this[_0x25b799(0xe82)] = Math[_0x25b799(0x20c)](this[_0x25b799(0xe44)], this[_0x25b799(0xe45)]);
                break;
            case 0x3:
                this[_0x25b799(0xe82)] = -Number[_0x25b799(0xa3d)];
                var _0x242d6c = _0x242d6c;
                for (_0x334586 = 0x0, _0x22a62c = _0x242d6c['gradientCount']; _0x334586 < _0x22a62c; _0x334586++)
                    this['_maxStartLifetime'] = Math[_0x25b799(0x20c)](this[_0x25b799(0xe82)], _0x242d6c[_0x25b799(0xd4a)](_0x334586));
                var _0x1b4f7e = _0x1b4f7e;
                for (_0x334586 = 0x0, _0x22a62c = _0x1b4f7e['gradientCount']; _0x334586 < _0x22a62c; _0x334586++)
                    this[_0x25b799(0xe82)] = Math[_0x25b799(0x20c)](this['_maxStartLifetime'], _0x1b4f7e['getValueByIndex'](_0x334586));
            }
            this['_startLifetimeType'] = _0x53bf71;
        }
        get ['startLifetimeConstant']() {
            var _0x47f8e0 = _0x6027f5;
            return this[_0x47f8e0(0xe62)];
        }
        set [_0x6027f5(0xe83)](_0xc793dc) {
            var _0x5d9495 = _0x6027f5;
            0x0 === this[_0x5d9495(0xe61)] && (this['_maxStartLifetime'] = _0xc793dc), this['_startLifetimeConstant'] = _0xc793dc;
        }
        get ['startLifeTimeGradient']() {
            var _0x4ece41 = _0x6027f5;
            return this[_0x4ece41(0xe77)];
        }
        set [_0x6027f5(0xe43)](_0x2f585f) {
            var _0x3b1fb0 = _0x6027f5;
            if (0x1 === this[_0x3b1fb0(0xe61)]) {
                this[_0x3b1fb0(0xe82)] = -Number[_0x3b1fb0(0xa3d)];
                for (var _0x17321e = 0x0, _0x5d7679 = _0x2f585f[_0x3b1fb0(0xd46)]; _0x17321e < _0x5d7679; _0x17321e++)
                    this[_0x3b1fb0(0xe82)] = Math[_0x3b1fb0(0x20c)](this['_maxStartLifetime'], _0x2f585f['getValueByIndex'](_0x17321e));
            }
            this[_0x3b1fb0(0xe77)] = _0x2f585f;
        }
        get ['startLifetimeConstantMin']() {
            var _0xa96b6c = _0x6027f5;
            return this[_0xa96b6c(0xe78)];
        }
        set [_0x6027f5(0xe44)](_0x3df34c) {
            var _0x46a45a = _0x6027f5;
            0x2 === this[_0x46a45a(0xe61)] && (this[_0x46a45a(0xe82)] = Math['max'](_0x3df34c, this[_0x46a45a(0xe84)])), this[_0x46a45a(0xe78)] = _0x3df34c;
        }
        get [_0x6027f5(0xe45)]() {
            return this['_startLifetimeConstantMax'];
        }
        set [_0x6027f5(0xe45)](_0x123927) {
            var _0x9a1652 = _0x6027f5;
            0x2 === this[_0x9a1652(0xe61)] && (this[_0x9a1652(0xe82)] = Math[_0x9a1652(0x20c)](this[_0x9a1652(0xe78)], _0x123927)), this['_startLifetimeConstantMax'] = _0x123927;
        }
        get [_0x6027f5(0xe47)]() {
            var _0x528bcd = _0x6027f5;
            return this[_0x528bcd(0xe63)];
        }
        set ['startLifeTimeGradientMin'](_0x581034) {
            var _0x57a8d7 = _0x6027f5;
            if (0x3 === this['_startLifetimeType']) {
                var _0x2e39f5, _0x1de778;
                for (this[_0x57a8d7(0xe82)] = -Number[_0x57a8d7(0xa3d)], _0x2e39f5 = 0x0, _0x1de778 = _0x581034[_0x57a8d7(0xd46)]; _0x2e39f5 < _0x1de778; _0x2e39f5++)
                    this[_0x57a8d7(0xe82)] = Math[_0x57a8d7(0x20c)](this['_maxStartLifetime'], _0x581034[_0x57a8d7(0xd4a)](_0x2e39f5));
                for (_0x2e39f5 = 0x0, _0x1de778 = this[_0x57a8d7(0xe79)][_0x57a8d7(0xd46)]; _0x2e39f5 < _0x1de778; _0x2e39f5++)
                    this[_0x57a8d7(0xe82)] = Math[_0x57a8d7(0x20c)](this[_0x57a8d7(0xe82)], this[_0x57a8d7(0xe79)][_0x57a8d7(0xd4a)](_0x2e39f5));
            }
            this[_0x57a8d7(0xe63)] = _0x581034;
        }
        get [_0x6027f5(0xe48)]() {
            var _0x4e3360 = _0x6027f5;
            return this[_0x4e3360(0xe79)];
        }
        set [_0x6027f5(0xe48)](_0xaf0adb) {
            var _0x56ae57 = _0x6027f5;
            if (0x3 === this[_0x56ae57(0xe61)]) {
                var _0x5b6116, _0x50bddb;
                for (this[_0x56ae57(0xe82)] = -Number['MAX_VALUE'], _0x5b6116 = 0x0, _0x50bddb = this['_startLifeTimeGradientMin']['gradientCount']; _0x5b6116 < _0x50bddb; _0x5b6116++)
                    this[_0x56ae57(0xe82)] = Math['max'](this[_0x56ae57(0xe82)], this[_0x56ae57(0xe63)][_0x56ae57(0xd4a)](_0x5b6116));
                for (_0x5b6116 = 0x0, _0x50bddb = _0xaf0adb[_0x56ae57(0xd46)]; _0x5b6116 < _0x50bddb; _0x5b6116++)
                    this[_0x56ae57(0xe82)] = Math['max'](this[_0x56ae57(0xe82)], _0xaf0adb[_0x56ae57(0xd4a)](_0x5b6116));
            }
            this[_0x56ae57(0xe79)] = _0xaf0adb;
        }
        get [_0x6027f5(0xe85)]() {
            var _0x31e336 = _0x6027f5;
            return this[_0x31e336(0xe86)];
        }
        set [_0x6027f5(0xe85)](_0x2cd89d) {
            var _0x2be25f = _0x6027f5, _0x1c7ce7 = this['_owner'][_0x2be25f(0x5e8)]['_shaderValues'];
            if (_0x2cd89d) {
                var _0xf17da8 = _0x2cd89d[_0x2be25f(0xe0b)], _0x502d71 = _0xf17da8[_0x2be25f(0x2cc)];
                if (_0x2cd89d[_0x2be25f(0x659)])
                    switch (_0x502d71) {
                    case 0x0:
                        _0x1c7ce7['addDefine'](_0x54eac9[_0x2be25f(0xe87)]);
                        break;
                    case 0x1:
                        _0x1c7ce7[_0x2be25f(0x49a)](_0x54eac9[_0x2be25f(0xe88)]);
                        break;
                    case 0x2:
                        _0x1c7ce7['addDefine'](_0x54eac9['SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT']);
                        break;
                    case 0x3:
                        _0x1c7ce7[_0x2be25f(0x49a)](_0x54eac9['SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE']);
                    }
                else
                    _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe87)]), _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe88)]), _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe89)]), _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe8a)]);
                switch (_0x502d71) {
                case 0x0:
                    _0x1c7ce7[_0x2be25f(0x57a)](_0x54eac9['VOLVELOCITYCONST'], _0xf17da8['constant']);
                    break;
                case 0x1:
                    _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd8e)], _0xf17da8[_0x2be25f(0xd3a)]['_elements']), _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd90)], _0xf17da8[_0x2be25f(0xd3b)][_0x2be25f(0x864)]), _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9['VOLVELOCITYGRADIENTZ'], _0xf17da8[_0x2be25f(0xd3c)][_0x2be25f(0x864)]);
                    break;
                case 0x2:
                    _0x1c7ce7['setVector3'](_0x54eac9['VOLVELOCITYCONST'], _0xf17da8[_0x2be25f(0xd15)]), _0x1c7ce7['setVector3'](_0x54eac9['VOLVELOCITYCONSTMAX'], _0xf17da8['constantMax']);
                    break;
                case 0x3:
                    _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd8e)], _0xf17da8[_0x2be25f(0xd40)][_0x2be25f(0x864)]), _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd93)], _0xf17da8[_0x2be25f(0xd4d)][_0x2be25f(0x864)]), _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd90)], _0xf17da8[_0x2be25f(0xd4e)][_0x2be25f(0x864)]), _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd94)], _0xf17da8[_0x2be25f(0xd41)][_0x2be25f(0x864)]), _0x1c7ce7[_0x2be25f(0x4ab)](_0x54eac9[_0x2be25f(0xd91)], _0xf17da8['gradientZMin'][_0x2be25f(0x864)]), _0x1c7ce7['setBuffer'](_0x54eac9['VOLVELOCITYGRADIENTZMAX'], _0xf17da8[_0x2be25f(0xd43)][_0x2be25f(0x864)]);
                }
                _0x1c7ce7[_0x2be25f(0x4a1)](_0x54eac9['VOLSPACETYPE'], _0x2cd89d['space']);
            } else
                _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe87)]), _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9['SHADERDEFINE_VELOCITYOVERLIFETIMECURVE']), _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe89)]), _0x1c7ce7[_0x2be25f(0x49b)](_0x54eac9[_0x2be25f(0xe8a)]);
            this[_0x2be25f(0xe86)] = _0x2cd89d;
        }
        get [_0x6027f5(0xe2f)]() {
            var _0x436190 = _0x6027f5;
            return this[_0x436190(0xe8b)];
        }
        set [_0x6027f5(0xe2f)](_0x207a2f) {
            var _0x458179 = _0x6027f5, _0x52fa7f = this[_0x458179(0x3dc)][_0x458179(0x5e8)]['_shaderValues'];
            if (_0x207a2f) {
                var _0x4c4c4a = _0x207a2f[_0x458179(0x46f)];
                if (_0x207a2f[_0x458179(0x659)])
                    switch (_0x4c4c4a['type']) {
                    case 0x1:
                        _0x52fa7f[_0x458179(0x49a)](_0x54eac9['SHADERDEFINE_COLOROVERLIFETIME']);
                        break;
                    case 0x3:
                        _0x52fa7f[_0x458179(0x49a)](_0x54eac9[_0x458179(0xe8c)]);
                    }
                else
                    _0x52fa7f[_0x458179(0x49b)](_0x54eac9[_0x458179(0xe8d)]), _0x52fa7f['removeDefine'](_0x54eac9['SHADERDEFINE_RANDOMCOLOROVERLIFETIME']);
                switch (_0x4c4c4a[_0x458179(0x2cc)]) {
                case 0x1:
                    var _0x42c1a4 = _0x4c4c4a[_0x458179(0xd17)];
                    _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xe8e)], _0x42c1a4[_0x458179(0xcf6)]), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xd99)], _0x42c1a4[_0x458179(0xcf7)]);
                    break;
                case 0x3:
                    var _0x1ac117 = _0x4c4c4a['gradientMin'], _0x1fc48c = _0x4c4c4a[_0x458179(0xd19)];
                    _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xe8e)], _0x1ac117[_0x458179(0xcf6)]), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xd99)], _0x1ac117[_0x458179(0xcf7)]), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xd9b)], _0x1fc48c[_0x458179(0xcf6)]), _0x52fa7f['setBuffer'](_0x54eac9[_0x458179(0xd9d)], _0x1fc48c[_0x458179(0xcf7)]);
                }
            } else
                _0x52fa7f[_0x458179(0x49b)](_0x54eac9[_0x458179(0xe8d)]), _0x52fa7f[_0x458179(0x49b)](_0x54eac9[_0x458179(0xe8c)]), _0x52fa7f['setBuffer'](_0x54eac9[_0x458179(0xe8e)], _0x42c1a4[_0x458179(0xcf6)]), _0x52fa7f['setBuffer'](_0x54eac9[_0x458179(0xd99)], _0x42c1a4['_rgbElements']), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9['COLOROVERLIFEGRADIENTALPHAS'], _0x1ac117[_0x458179(0xcf6)]), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9['COLOROVERLIFEGRADIENTCOLORS'], _0x1ac117['_rgbElements']), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xd9b)], _0x1fc48c[_0x458179(0xcf6)]), _0x52fa7f[_0x458179(0x4ab)](_0x54eac9[_0x458179(0xd9d)], _0x1fc48c['_rgbElements']);
            this[_0x458179(0xe8b)] = _0x207a2f;
        }
        get ['sizeOverLifetime']() {
            return this['_sizeOverLifetime'];
        }
        set ['sizeOverLifetime'](_0x2ed624) {
            var _0x99b995 = _0x6027f5, _0x23d8ad = this[_0x99b995(0x3dc)][_0x99b995(0x5e8)][_0x99b995(0x4e2)];
            if (_0x2ed624) {
                var _0x27f600 = _0x2ed624[_0x99b995(0x2a7)], _0x218b35 = _0x27f600[_0x99b995(0xd38)], _0x512e62 = _0x27f600[_0x99b995(0x2cc)];
                if (_0x2ed624['enable'])
                    switch (_0x512e62) {
                    case 0x0:
                        _0x218b35 ? _0x23d8ad[_0x99b995(0x49a)](_0x54eac9['SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE']) : _0x23d8ad[_0x99b995(0x49a)](_0x54eac9[_0x99b995(0xe8f)]);
                        break;
                    case 0x2:
                        _0x218b35 ? _0x23d8ad['addDefine'](_0x54eac9[_0x99b995(0xe90)]) : _0x23d8ad[_0x99b995(0x49a)](_0x54eac9[_0x99b995(0xe91)]);
                    }
                else
                    _0x23d8ad[_0x99b995(0x49b)](_0x54eac9['SHADERDEFINE_SIZEOVERLIFETIMECURVE']), _0x23d8ad[_0x99b995(0x49b)](_0x54eac9[_0x99b995(0xe92)]), _0x23d8ad['removeDefine'](_0x54eac9['SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES']), _0x23d8ad['removeDefine'](_0x54eac9[_0x99b995(0xe90)]);
                switch (_0x512e62) {
                case 0x0:
                    _0x218b35 ? (_0x23d8ad[_0x99b995(0x4ab)](_0x54eac9[_0x99b995(0xda0)], _0x27f600[_0x99b995(0xd3a)]['_elements']), _0x23d8ad[_0x99b995(0x4ab)](_0x54eac9[_0x99b995(0xda2)], _0x27f600[_0x99b995(0xd3b)][_0x99b995(0x864)]), _0x23d8ad[_0x99b995(0x4ab)](_0x54eac9[_0x99b995(0xda4)], _0x27f600['gradientZ']['_elements'])) : _0x23d8ad['setBuffer'](_0x54eac9[_0x99b995(0xd9f)], _0x27f600['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x218b35 ? (_0x23d8ad[_0x99b995(0x4ab)](_0x54eac9['SOLSIZEGRADIENTX'], _0x27f600[_0x99b995(0xd40)][_0x99b995(0x864)]), _0x23d8ad['setBuffer'](_0x54eac9[_0x99b995(0xda6)], _0x27f600[_0x99b995(0xd4d)][_0x99b995(0x864)]), _0x23d8ad['setBuffer'](_0x54eac9[_0x99b995(0xda2)], _0x27f600[_0x99b995(0xd4e)][_0x99b995(0x864)]), _0x23d8ad[_0x99b995(0x4ab)](_0x54eac9['SOLSIZEGRADIENTYMAX'], _0x27f600[_0x99b995(0xd41)][_0x99b995(0x864)]), _0x23d8ad['setBuffer'](_0x54eac9[_0x99b995(0xda4)], _0x27f600[_0x99b995(0xd42)][_0x99b995(0x864)]), _0x23d8ad['setBuffer'](_0x54eac9['SOLSizeGradientZMAX'], _0x27f600[_0x99b995(0xd43)][_0x99b995(0x864)])) : (_0x23d8ad['setBuffer'](_0x54eac9[_0x99b995(0xd9f)], _0x27f600[_0x99b995(0xd18)][_0x99b995(0x864)]), _0x23d8ad[_0x99b995(0x4ab)](_0x54eac9[_0x99b995(0xe93)], _0x27f600[_0x99b995(0xd19)][_0x99b995(0x864)]));
                }
            } else
                _0x23d8ad[_0x99b995(0x49b)](_0x54eac9['SHADERDEFINE_SIZEOVERLIFETIMECURVE']), _0x23d8ad[_0x99b995(0x49b)](_0x54eac9[_0x99b995(0xe92)]), _0x23d8ad[_0x99b995(0x49b)](_0x54eac9['SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES']), _0x23d8ad['removeDefine'](_0x54eac9[_0x99b995(0xe90)]);
            this['_sizeOverLifetime'] = _0x2ed624;
        }
        get ['rotationOverLifetime']() {
            var _0x427f38 = _0x6027f5;
            return this[_0x427f38(0xe94)];
        }
        set [_0x6027f5(0xe95)](_0x13c45d) {
            var _0x27a949 = _0x6027f5, _0x2d18f8 = this[_0x27a949(0x3dc)]['_render']['_shaderValues'];
            if (_0x13c45d) {
                var _0x15cf29 = _0x13c45d['angularVelocity'];
                if (!_0x15cf29)
                    return;
                var _0x44b4b7 = _0x15cf29['separateAxes'], _0xdc9edd = _0x15cf29['type'];
                if (_0x13c45d[_0x27a949(0x659)])
                    switch (_0x44b4b7 ? _0x2d18f8[_0x27a949(0x49a)](_0x54eac9[_0x27a949(0xe96)]) : _0x2d18f8[_0x27a949(0x49a)](_0x54eac9['SHADERDEFINE_ROTATIONOVERLIFETIME']), _0xdc9edd) {
                    case 0x0:
                        _0x2d18f8[_0x27a949(0x49a)](_0x54eac9[_0x27a949(0xe97)]);
                        break;
                    case 0x1:
                        _0x2d18f8['addDefine'](_0x54eac9[_0x27a949(0xe98)]);
                        break;
                    case 0x2:
                        _0x2d18f8[_0x27a949(0x49a)](_0x54eac9[_0x27a949(0xe99)]);
                        break;
                    case 0x3:
                        _0x2d18f8[_0x27a949(0x49a)](_0x54eac9[_0x27a949(0xe9a)]);
                    }
                else
                    _0x2d18f8[_0x27a949(0x49b)](_0x54eac9['SHADERDEFINE_ROTATIONOVERLIFETIME']), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe96)]), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe97)]), _0x2d18f8['removeDefine'](_0x54eac9[_0x27a949(0xe98)]), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe99)]), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe9a)]);
                switch (_0xdc9edd) {
                case 0x0:
                    _0x44b4b7 ? _0x2d18f8['setVector3'](_0x54eac9[_0x27a949(0xdab)], _0x15cf29[_0x27a949(0xd39)]) : _0x2d18f8['setNumber'](_0x54eac9['ROLANGULARVELOCITYCONST'], _0x15cf29[_0x27a949(0xd14)]);
                    break;
                case 0x1:
                    _0x44b4b7 ? (_0x2d18f8[_0x27a949(0x4ab)](_0x54eac9[_0x27a949(0xdaf)], _0x15cf29[_0x27a949(0xd3a)][_0x27a949(0x864)]), _0x2d18f8[_0x27a949(0x4ab)](_0x54eac9[_0x27a949(0xe9b)], _0x15cf29[_0x27a949(0xd3b)][_0x27a949(0x864)]), _0x2d18f8[_0x27a949(0x4ab)](_0x54eac9[_0x27a949(0xdb1)], _0x15cf29[_0x27a949(0xd3c)][_0x27a949(0x864)])) : _0x2d18f8[_0x27a949(0x4ab)](_0x54eac9[_0x27a949(0xdad)], _0x15cf29[_0x27a949(0xd17)][_0x27a949(0x864)]);
                    break;
                case 0x2:
                    _0x44b4b7 ? (_0x2d18f8[_0x27a949(0x57a)](_0x54eac9[_0x27a949(0xdab)], _0x15cf29[_0x27a949(0xd3e)]), _0x2d18f8[_0x27a949(0x57a)](_0x54eac9[_0x27a949(0xdb2)], _0x15cf29[_0x27a949(0xd3f)])) : (_0x2d18f8[_0x27a949(0x4a3)](_0x54eac9['ROLANGULARVELOCITYCONST'], _0x15cf29[_0x27a949(0xd15)]), _0x2d18f8['setNumber'](_0x54eac9[_0x27a949(0xe9c)], _0x15cf29[_0x27a949(0xd16)]));
                    break;
                case 0x3:
                    _0x44b4b7 ? (_0x2d18f8[_0x27a949(0x4ab)](_0x54eac9['ROLANGULARVELOCITYGRADIENTX'], _0x15cf29[_0x27a949(0xd40)][_0x27a949(0x864)]), _0x2d18f8[_0x27a949(0x4ab)](_0x54eac9['ROLANGULARVELOCITYGRADIENTXMAX'], _0x15cf29['gradientXMax'][_0x27a949(0x864)]), _0x2d18f8['setBuffer'](_0x54eac9['ROLANGULARVELOCITYGRADIENTY'], _0x15cf29[_0x27a949(0xd4e)][_0x27a949(0x864)]), _0x2d18f8[_0x27a949(0x4ab)](_0x54eac9['ROLANGULARVELOCITYGRADIENTYMAX'], _0x15cf29[_0x27a949(0xd41)][_0x27a949(0x864)]), _0x2d18f8[_0x27a949(0x4ab)](_0x54eac9[_0x27a949(0xdb1)], _0x15cf29['gradientZMin'][_0x27a949(0x864)]), _0x2d18f8['setBuffer'](_0x54eac9[_0x27a949(0xdb9)], _0x15cf29['gradientZMax'][_0x27a949(0x864)])) : (_0x2d18f8[_0x27a949(0x4ab)](_0x54eac9[_0x27a949(0xdad)], _0x15cf29[_0x27a949(0xd18)][_0x27a949(0x864)]), _0x2d18f8['setBuffer'](_0x54eac9['ROLANGULARVELOCITYGRADIENTMAX'], _0x15cf29[_0x27a949(0xd19)][_0x27a949(0x864)]));
                }
            } else
                _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe9d)]), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe96)]), _0x2d18f8['removeDefine'](_0x54eac9['SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT']), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe98)]), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe99)]), _0x2d18f8[_0x27a949(0x49b)](_0x54eac9[_0x27a949(0xe9a)]);
            this[_0x27a949(0xe94)] = _0x13c45d;
        }
        get [_0x6027f5(0xe9e)]() {
            var _0x1a2025 = _0x6027f5;
            return this[_0x1a2025(0xe60)];
        }
        set [_0x6027f5(0xe9e)](_0x7a0460) {
            var _0x52b582 = _0x6027f5, _0x414221 = this['_owner'][_0x52b582(0x5e8)][_0x52b582(0x4e2)];
            if (_0x7a0460) {
                var _0x3897c4 = _0x7a0460[_0x52b582(0xd78)], _0x32d84d = _0x3897c4[_0x52b582(0x2cc)];
                if (_0x7a0460[_0x52b582(0x659)])
                    switch (_0x32d84d) {
                    case 0x1:
                        _0x414221[_0x52b582(0x49a)](_0x54eac9[_0x52b582(0xe9f)]);
                        break;
                    case 0x3:
                        _0x414221[_0x52b582(0x49a)](_0x54eac9[_0x52b582(0xea0)]);
                    }
                else
                    _0x414221[_0x52b582(0x49b)](_0x54eac9['SHADERDEFINE_TEXTURESHEETANIMATIONCURVE']), _0x414221[_0x52b582(0x49b)](_0x54eac9[_0x52b582(0xea0)]);
                if (0x1 === _0x32d84d || 0x3 === _0x32d84d) {
                    _0x414221[_0x52b582(0x4a3)](_0x54eac9[_0x52b582(0xdbd)], _0x7a0460[_0x52b582(0xd74)]);
                    var _0x5c1cf2 = _0x7a0460[_0x52b582(0xd76)], _0x3de4a3 = this[_0x52b582(0xe64)];
                    _0x3de4a3['x'] = 0x1 / _0x5c1cf2['x'], _0x3de4a3['y'] = 0x1 / _0x5c1cf2['y'], _0x414221[_0x52b582(0x4a5)](_0x54eac9['TEXTURESHEETANIMATIONSUBUVLENGTH'], this[_0x52b582(0xe64)]);
                }
                switch (_0x32d84d) {
                case 0x1:
                    _0x414221[_0x52b582(0x4ab)](_0x54eac9[_0x52b582(0xdc1)], _0x3897c4[_0x52b582(0xd21)][_0x52b582(0x864)]);
                    break;
                case 0x3:
                    _0x414221[_0x52b582(0x4ab)](_0x54eac9['TEXTURESHEETANIMATIONGRADIENTUVS'], _0x3897c4['frameOverTimeDataMin'][_0x52b582(0x864)]), _0x414221[_0x52b582(0x4ab)](_0x54eac9[_0x52b582(0xdc2)], _0x3897c4['frameOverTimeDataMax'][_0x52b582(0x864)]);
                }
            } else
                _0x414221[_0x52b582(0x49b)](_0x54eac9['SHADERDEFINE_TEXTURESHEETANIMATIONCURVE']), _0x414221[_0x52b582(0x49b)](_0x54eac9['SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE']);
            this[_0x52b582(0xe60)] = _0x7a0460;
        }
        [_0x6027f5(0xea1)](_0x4d3eb9 = 0x0) {
            var _0x23c237 = _0x6027f5;
            return 0x0 === _0x4d3eb9 ? this[_0x23c237(0x4f6)] : null;
        }
        ['_getIndexBuffer']() {
            return this['_indexBuffer'];
        }
        ['_generateBoundingSphere']() {
            var _0x1864c0 = _0x6027f5, _0x8850e4 = this['_boundingSphere']['center'];
            _0x8850e4['x'] = 0x0, _0x8850e4['y'] = 0x0, _0x8850e4['z'] = 0x0, this[_0x1864c0(0xe4a)][_0x1864c0(0x882)] = Number[_0x1864c0(0xa3d)];
        }
        ['_generateBounds']() {
            var _0x45e443 = _0x6027f5, _0x53e05e = this[_0x45e443(0x3dc)][_0x45e443(0xea2)], _0x3ceda6 = this['_bounds'][_0x45e443(0xa47)](), _0x418fad = this[_0x45e443(0xa5d)]['getMax'](), _0xf2ca71 = 0x0;
            switch (this[_0x45e443(0xe41)]) {
            case 0x0:
                _0xf2ca71 = this[_0x45e443(0xe62)];
                break;
            case 0x2:
                _0xf2ca71 = this[_0x45e443(0xe84)];
            }
            var _0x213299 = 0x0;
            switch (this['startSpeedType']) {
            case 0x0:
                _0x213299 = this[_0x45e443(0xe6b)];
                break;
            case 0x2:
                _0x213299 = this[_0x45e443(0xe6d)];
            }
            var _0x506b13 = 0x0;
            if (this[_0x45e443(0xe34)])
                switch (this['startSizeType']) {
                case 0x0:
                    _0x506b13 = Math[_0x45e443(0x20c)](this['startSizeConstantSeparate']['x'], this[_0x45e443(0xe32)]['y'], this[_0x45e443(0xe32)]['z']);
                    break;
                case 0x2:
                    _0x506b13 = Math[_0x45e443(0x20c)](this[_0x45e443(0xe35)]['x'], this['startSizeConstantMaxSeparate']['y'], this[_0x45e443(0xe35)]['z']);
                }
            else
                switch (this[_0x45e443(0xe31)]) {
                case 0x0:
                    _0x506b13 = this[_0x45e443(0xe33)];
                    break;
                case 0x2:
                    _0x506b13 = this['startSizeConstantMax'];
                }
            var _0x163cda = _0xec89de[_0x45e443(0x59f)], _0xcf5a6a = _0xec89de[_0x45e443(0x3a1)], _0xae08bb = _0xec89de[_0x45e443(0x855)], _0x159490 = _0xec89de['_tempVector33'];
            if (_0x163cda['setValue'](0x0, 0x0, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](0x0, 0x0, 0x0), _0xae08bb[_0x45e443(0x1f8)](0x0, 0x0, 0x0), _0x159490[_0x45e443(0x1f8)](0x0, 0x0, 0x0), this['shape'] && this['shape']['enable'])
                switch (this['shape'][_0x45e443(0xd67)]) {
                case _0x18be32[_0x45e443(0xd53)][_0x45e443(0xd58)]:
                    var _0x3d51a0 = this[_0x45e443(0xe7d)];
                    _0x163cda[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xae08bb[_0x45e443(0x1f8)](_0x3d51a0[_0x45e443(0x882)], _0x3d51a0['radius'], _0x3d51a0[_0x45e443(0x882)]), _0x159490[_0x45e443(0x1f8)](_0x3d51a0[_0x45e443(0x882)], _0x3d51a0[_0x45e443(0x882)], _0x3d51a0[_0x45e443(0x882)]);
                    break;
                case _0x18be32[_0x45e443(0xd53)][_0x45e443(0xd57)]:
                    var _0x563f6c = this[_0x45e443(0xe7d)];
                    _0x163cda[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xae08bb['setValue'](_0x563f6c[_0x45e443(0x882)], _0x563f6c[_0x45e443(0x882)], _0x563f6c[_0x45e443(0x882)]), _0x159490[_0x45e443(0x1f8)](_0x563f6c[_0x45e443(0x882)], _0x563f6c['radius'], 0x0);
                    break;
                case _0x18be32['ParticleSystemShapeType']['Cone']:
                    var _0x355a24 = this['shape'];
                    if (0x0 == _0x355a24[_0x45e443(0xd6c)] || 0x1 == _0x355a24['emitType']) {
                        var _0x2f2270 = _0x355a24['angle'], _0x46bf18 = Math[_0x45e443(0x27f)](_0x2f2270);
                        _0x163cda['setValue'](_0x46bf18, _0x46bf18, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](_0x46bf18, _0x46bf18, 0x0), _0xae08bb['setValue'](_0x355a24[_0x45e443(0x882)], _0x355a24[_0x45e443(0x882)], 0x0), _0x159490[_0x45e443(0x1f8)](_0x355a24['radius'], _0x355a24[_0x45e443(0x882)], 0x0);
                        break;
                    }
                    if (0x2 == _0x355a24['emitType'] || 0x3 == _0x355a24[_0x45e443(0xd6c)]) {
                        _0x2f2270 = _0x355a24[_0x45e443(0xd6d)], _0x46bf18 = Math['sin'](_0x2f2270);
                        var _0x14cb95 = _0x355a24[_0x45e443(0x205)];
                        _0x163cda[_0x45e443(0x1f8)](_0x46bf18, _0x46bf18, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](_0x46bf18, _0x46bf18, 0x0);
                        var _0x39a822 = Math[_0x45e443(0x483)](_0x2f2270), _0x2e44b7 = _0x355a24['radius'] + _0x14cb95 * _0x39a822;
                        _0xae08bb[_0x45e443(0x1f8)](_0x2e44b7, _0x2e44b7, _0x14cb95), _0x159490['setValue'](_0x2e44b7, _0x2e44b7, 0x0);
                    }
                    break;
                case _0x18be32[_0x45e443(0xd53)][_0x45e443(0xd54)]:
                    var _0x1c2cce = this[_0x45e443(0xe7d)];
                    0x0 != this[_0x45e443(0xe7d)][_0x45e443(0xd59)] && (_0x163cda[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](0x1, 0x1, 0x1)), _0xae08bb[_0x45e443(0x1f8)](_0x1c2cce['x'] / 0x2, _0x1c2cce['y'] / 0x2, _0x1c2cce['z'] / 0x2), _0x159490[_0x45e443(0x1f8)](_0x1c2cce['x'] / 0x2, _0x1c2cce['y'] / 0x2, _0x1c2cce['z'] / 0x2);
                    break;
                case _0x18be32[_0x45e443(0xd53)][_0x45e443(0xd55)]:
                    var _0x25c27b = this[_0x45e443(0xe7d)];
                    _0x163cda[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xcf5a6a[_0x45e443(0x1f8)](0x1, 0x1, 0x1), _0xae08bb[_0x45e443(0x1f8)](_0x25c27b[_0x45e443(0x882)], _0x25c27b[_0x45e443(0x882)], 0x0), _0x159490[_0x45e443(0x1f8)](_0x25c27b[_0x45e443(0x882)], _0x25c27b[_0x45e443(0x882)], 0x0);
                }
            var _0x18850c = 0x0, _0x5d4360 = 0x4 == _0x53e05e[_0x45e443(0x730)];
            switch (_0x53e05e['renderMode']) {
            case 0x0:
            case 0x1:
            case 0x2:
            case 0x3:
                _0x18850c = _0xec89de[_0x45e443(0xea3)];
                break;
            case 0x4:
                var _0x4288a7 = _0x53e05e[_0x45e443(0x8d6)][_0x45e443(0x812)];
                _0x18850c = Math['sqrt'](Math['pow'](_0x4288a7['getExtent']()['x'], 0x2) + Math['pow'](_0x4288a7['getExtent']()['y'], 0x2) + Math['pow'](_0x4288a7[_0x45e443(0xa3a)]()['z'], 0x2));
            }
            var _0x5f5379 = _0xec89de['_tempVector36'];
            if (_0x5f5379['setValue'](0x1, 0x1, 0x1), this['sizeOverLifetime'] && this[_0x45e443(0xe38)][_0x45e443(0x659)]) {
                var _0x1913dd = this[_0x45e443(0xe38)]['size']['getMaxSizeInGradient'](_0x5d4360);
                _0x5f5379[_0x45e443(0x1f8)](_0x1913dd, _0x1913dd, _0x1913dd);
            }
            var _0x5c3131 = _0x18850c * _0x506b13;
            _0x3697cd['scale'](_0x5f5379, _0x5c3131, _0x5f5379);
            var _0x30b708 = _0xec89de['_tempVector34'], _0x51d711 = _0xec89de[_0x45e443(0x86e)];
            if (_0x213299 > 0x0 ? (_0x3697cd[_0x45e443(0x1f9)](_0x163cda, _0x213299, _0x30b708), _0x3697cd[_0x45e443(0x1f9)](_0xcf5a6a, _0x213299, _0x51d711)) : (_0x3697cd[_0x45e443(0x1f9)](_0x163cda, -_0x213299, _0x51d711), _0x3697cd[_0x45e443(0x1f9)](_0xcf5a6a, -_0x213299, _0x30b708)), this[_0x45e443(0xe85)] && this['velocityOverLifetime'][_0x45e443(0x659)]) {
                var _0x279013 = this[_0x45e443(0xe85)][_0x45e443(0xe0b)], _0x981fad = _0xec89de['_tempVector37'];
                switch (_0x981fad[_0x45e443(0x1f8)](0x0, 0x0, 0x0), _0x279013[_0x45e443(0x2cc)]) {
                case 0x0:
                    _0x279013[_0x45e443(0xd14)][_0x45e443(0x1fc)](_0x981fad);
                    break;
                case 0x2:
                    _0x279013[_0x45e443(0xd16)]['cloneTo'](_0x981fad);
                    break;
                case 0x1:
                    var _0xa490bb = _0x279013['gradientX'][_0x45e443(0xd4b)](), _0x535193 = _0x279013[_0x45e443(0xd3b)][_0x45e443(0xd4b)](), _0xb62160 = _0x279013['gradientZ']['getAverageValue']();
                    _0x981fad[_0x45e443(0x1f8)](_0xa490bb, _0x535193, _0xb62160);
                    break;
                case 0x3:
                    var _0xcdf87e = _0x279013['gradientXMax'][_0x45e443(0xd4b)](), _0x170e07 = _0x279013['gradientYMax']['getAverageValue'](), _0x2ef9a6 = _0x279013[_0x45e443(0xd43)][_0x45e443(0xd4b)]();
                    _0x981fad[_0x45e443(0x1f8)](_0xcdf87e, _0x170e07, _0x2ef9a6);
                }
                0x1 == this[_0x45e443(0xe85)]['space'] && _0x3697cd[_0x45e443(0x857)](_0x981fad, this[_0x45e443(0x3dc)][_0x45e443(0x3d6)][_0x45e443(0x3d8)], _0x981fad), _0x3697cd[_0x45e443(0x207)](_0x30b708, _0x981fad, _0x30b708), _0x3697cd['subtract'](_0x51d711, _0x981fad, _0x51d711), _0x3697cd[_0x45e443(0x20c)](_0x30b708, _0x3697cd['_ZERO'], _0x30b708), _0x3697cd[_0x45e443(0x20c)](_0x51d711, _0x3697cd[_0x45e443(0x21b)], _0x51d711);
            }
            _0x3697cd[_0x45e443(0x1f9)](_0x30b708, _0xf2ca71, _0x30b708), _0x3697cd['scale'](_0x51d711, _0xf2ca71, _0x51d711);
            var _0xaa0598 = this[_0x45e443(0xdeb)];
            if (0x0 != _0xaa0598) {
                var _0x4adedb = 0.5 * _0xec89de['g'] * _0xaa0598 * _0xf2ca71 * _0xf2ca71, _0x3d6c94 = _0x30b708['y'] - _0x4adedb, _0x1f090d = _0x51d711['y'] + _0x4adedb;
                _0x3d6c94 = _0x3d6c94 > 0x0 ? _0x3d6c94 : 0x0, _0x1f090d = _0x1f090d > 0x0 ? _0x1f090d : 0x0, this['_gravityOffset'][_0x45e443(0x1f8)](_0x30b708['y'] - _0x3d6c94, _0x1f090d - _0x51d711['y']);
            }
            _0x3697cd[_0x45e443(0x207)](_0x30b708, _0x5f5379, _0x418fad), _0x3697cd[_0x45e443(0x207)](_0x418fad, _0xae08bb, _0x418fad), _0x3697cd['add'](_0x51d711, _0x5f5379, _0x3ceda6), _0x3697cd[_0x45e443(0x207)](_0x3ceda6, _0x159490, _0x3ceda6), _0x3697cd['scale'](_0x3ceda6, -0x1, _0x3ceda6), this[_0x45e443(0xa5d)][_0x45e443(0xa62)](_0x3ceda6), this['_bounds'][_0x45e443(0xa49)](_0x418fad);
        }
        get [_0x6027f5(0xde9)]() {
            var _0x1b2c50 = _0x6027f5;
            return this[_0x1b2c50(0xe4d)];
        }
        set [_0x6027f5(0xde9)](_0x365db8) {
            var _0x50ff15 = _0x6027f5;
            this['_useCustomBounds'] = !!_0x365db8, this[_0x50ff15(0xe4d)] = _0x365db8;
        }
        [_0x6027f5(0xdea)]() {
            var _0xea23fd = _0x6027f5;
            return 0x0 != this[_0xea23fd(0xded)];
        }
        [_0x6027f5(0xea4)]() {
            var _0x63b014 = _0x6027f5;
            if (this[_0x63b014(0xdec)]) {
                if (this[_0x63b014(0xe52)])
                    this[_0x63b014(0xe52)] = !0x1;
                else {
                    var _0x3d47a2 = this['_startUpdateLoopCount'] === _0x387b86[_0x63b014(0x4dc)][_0x63b014(0x815)] || this[_0x63b014(0xe81)] ? 0x0 : this[_0x63b014(0x3dc)][_0x63b014(0x3b0)]['timer'][_0x63b014(0x3c1)] / 0x3e8;
                    _0x3d47a2 = Math[_0x63b014(0x212)](_0xec89de[_0x63b014(0xea5)], _0x3d47a2 * this['simulationSpeed']), this['_updateParticles'](_0x3d47a2);
                }
            }
        }
        [_0x6027f5(0xea6)](_0x3d7ac0) {
            var _0x5aaffb = _0x6027f5;
            (0x4 !== this[_0x5aaffb(0xe4e)][_0x5aaffb(0x730)] || this[_0x5aaffb(0xe4e)][_0x5aaffb(0x8d6)]) && (this[_0x5aaffb(0xdf4)] += _0x3d7ac0, this[_0x5aaffb(0xea7)](), this[_0x5aaffb(0xea8)](), this[_0x5aaffb(0xe5e)] += _0x3d7ac0, this[_0x5aaffb(0xe5e)] < this[_0x5aaffb(0xe5c)] || this['_emission'][_0x5aaffb(0x659)] && this[_0x5aaffb(0xe5a)] && !this[_0x5aaffb(0xe81)] && this[_0x5aaffb(0xea9)](_0x3d7ac0, this[_0x5aaffb(0xdf4)]));
        }
        [_0x6027f5(0xeaa)](_0x23969b) {
            var _0x491303 = _0x6027f5;
            this['_firstActiveElement'] = 0x0, this['_firstNewElement'] = 0x0, this[_0x491303(0xe55)] = 0x0, this['_firstRetiredElement'] = 0x0, this[_0x491303(0xe5f)] = 0x0, this[_0x491303(0xe74)] = _0x23969b, this[_0x491303(0xe5d)] = 0x0, this[_0x491303(0xe5e)] = 0x0, this[_0x491303(0xdf4)] = _0x23969b;
            var _0x2c6b84 = _0x23969b;
            _0x2c6b84 < this[_0x491303(0xe5c)] ? this[_0x491303(0xe5e)] = _0x2c6b84 : this[_0x491303(0xe59)][_0x491303(0x659)] && this[_0x491303(0xea9)](_0x23969b, _0x23969b);
        }
        [_0x6027f5(0xea7)]() {
            var _0x4dc7ef = _0x6027f5;
            for (; this[_0x4dc7ef(0xe53)] != this[_0x4dc7ef(0xe54)];) {
                var _0x5c9e3b = this['_firstActiveElement'] * this[_0x4dc7ef(0xe4f)] * this[_0x4dc7ef(0x4e0)], _0x2139f7 = _0x5c9e3b + this['_timeIndex'];
                if (this[_0x4dc7ef(0xdf4)] - this[_0x4dc7ef(0x4f7)][_0x2139f7] + 0.0001 < this[_0x4dc7ef(0x4f7)][_0x5c9e3b + this[_0x4dc7ef(0xe50)]])
                    break;
                this[_0x4dc7ef(0x4f7)][_0x2139f7] = this[_0x4dc7ef(0xe57)], this[_0x4dc7ef(0xe53)]++, this['_firstActiveElement'] >= this[_0x4dc7ef(0xe58)] && (this[_0x4dc7ef(0xe53)] = 0x0);
            }
        }
        ['_freeRetiredParticles']() {
            var _0x5215ce = _0x6027f5;
            for (; this[_0x5215ce(0xe56)] != this[_0x5215ce(0xe53)];) {
                this[_0x5215ce(0xe57)], this[_0x5215ce(0x4f7)][this['_firstRetiredElement'] * this[_0x5215ce(0xe4f)] * this['_vertexStride'] + this[_0x5215ce(0xe51)]], (this[_0x5215ce(0xe56)]++, this[_0x5215ce(0xe56)] >= this[_0x5215ce(0xe58)] && (this[_0x5215ce(0xe56)] = 0x0));
            }
        }
        [_0x6027f5(0xeab)](_0x74cbf6, _0x58cd61) {
            var _0x493063 = _0x6027f5;
            for (var _0x25cc3a = 0x0, _0x371d13 = this[_0x493063(0xe59)]['_bursts'], _0x5f41c3 = _0x371d13[_0x493063(0x205)]; this[_0x493063(0xe5f)] < _0x5f41c3; this[_0x493063(0xe5f)]++) {
                var _0x373b56, _0x3a9372 = _0x371d13[this[_0x493063(0xe5f)]], _0x53eec9 = _0x3a9372[_0x493063(0x273)];
                if (!(_0x74cbf6 <= _0x53eec9 && _0x53eec9 < _0x58cd61))
                    break;
                this[_0x493063(0xe27)] ? _0x373b56 = _0x387b86[_0x493063(0xe24)][_0x493063(0x202)](_0x3a9372[_0x493063(0xd09)], _0x3a9372[_0x493063(0xd0b)], Math[_0x493063(0xd5f)]()) : (this[_0x493063(0xe28)][_0x493063(0xd66)] = this[_0x493063(0xe29)][0x0], _0x373b56 = _0x387b86[_0x493063(0xe24)][_0x493063(0x202)](_0x3a9372[_0x493063(0xd09)], _0x3a9372[_0x493063(0xd0b)], this['_rand']['getFloat']()), this['_randomSeeds'][0x0] = this[_0x493063(0xe28)][_0x493063(0xd66)]), _0x25cc3a += _0x373b56;
            }
            return _0x25cc3a;
        }
        ['_advanceTime'](_0x428683, _0xeb8d49) {
            var _0x137550 = _0x6027f5, _0x3522c5, _0x3d4334 = this['_emissionTime'];
            this['_emissionTime'] += _0x428683;
            var _0x100f8f = 0x0;
            if (this['_emissionTime'] > this[_0x137550(0x32c)]) {
                if (!this[_0x137550(0xe67)]) {
                    for (_0x100f8f = Math[_0x137550(0x212)](this[_0x137550(0xe7b)] - this[_0x137550(0xe7c)], _0x100f8f), _0x3522c5 = 0x0; _0x3522c5 < _0x100f8f; _0x3522c5++)
                        this['emit'](_0xeb8d49);
                    return this[_0x137550(0xe5b)] = !0x1, void this[_0x137550(0xeac)]();
                }
                _0x100f8f += this['_burst'](_0x3d4334, this[_0x137550(0xe5d)]), this[_0x137550(0xe5d)] -= this[_0x137550(0x32c)], this[_0x137550(0xe5f)] = 0x0, _0x100f8f += this[_0x137550(0xeab)](0x0, this[_0x137550(0xe5d)]);
            } else
                _0x100f8f += this[_0x137550(0xeab)](_0x3d4334, this['_emissionTime']);
            for (_0x100f8f = Math[_0x137550(0x212)](this[_0x137550(0xe7b)] - this[_0x137550(0xe7c)], _0x100f8f), _0x3522c5 = 0x0; _0x3522c5 < _0x100f8f; _0x3522c5++)
                this[_0x137550(0xead)](_0xeb8d49);
            var _0x1739f4 = this['emission']['emissionRate'];
            if (_0x1739f4 > 0x0) {
                var _0x37ba0e = 0x1 / _0x1739f4;
                for (this[_0x137550(0xe74)] += _0x37ba0e, this[_0x137550(0xe74)] = this['_currentTime'] - (this[_0x137550(0xdf4)] - this[_0x137550(0xe74)]) % this['_maxStartLifetime']; this[_0x137550(0xe74)] <= _0xeb8d49 && this['emit'](this['_frameRateTime']);)
                    this[_0x137550(0xe74)] += _0x37ba0e;
                this['_frameRateTime'] = Math[_0x137550(0x24e)](_0xeb8d49 / _0x37ba0e) * _0x37ba0e;
            }
        }
        [_0x6027f5(0xde7)]() {
            var _0x10b919 = _0x6027f5;
            if (this[_0x10b919(0x4f6)]) {
                var _0x5e94f4 = this[_0x10b919(0x4f6)][_0x10b919(0x451)] + 0x2 * this['_indexBuffer'][_0x10b919(0xa0b)];
                this[_0x10b919(0x4f6)][_0x10b919(0x364)](), this[_0x10b919(0x629)][_0x10b919(0x364)](), _0x387b86[_0x10b919(0x324)][_0x10b919(0xcd7)](-_0x5e94f4, -_0x5e94f4);
            }
            var _0x2e37d9 = _0x387b86[_0x10b919(0x303)][_0x10b919(0x304)], _0x2c24a8 = this[_0x10b919(0xe4e)], _0x2ceccc = _0x2c24a8[_0x10b919(0x730)];
            if (-0x1 !== _0x2ceccc && this[_0x10b919(0xe7b)] > 0x0) {
                var _0x4d70d8, _0x299883, _0x59290e, _0x1fc302, _0x252322, _0x44927b, _0x308aac, _0x3e2341 = 0x0, _0x3df9a2 = (_0x5e94f4 = 0x0, _0x2c24a8['mesh']);
                if (0x4 === _0x2ceccc) {
                    if (_0x3df9a2) {
                        _0x308aac = _0x107170[_0x10b919(0x456)], this[_0x10b919(0xe4f)] = _0x308aac[_0x10b919(0x4e5)] / 0x4, this[_0x10b919(0xe50)] = 0xc, this[_0x10b919(0xe51)] = 0x10, this[_0x10b919(0x4e0)] = _0x3df9a2[_0x10b919(0xa9f)];
                        var _0x1cc07f = this['_bufferMaxParticles'] * this[_0x10b919(0x4e0)], _0x132a48 = _0x1cc07f % 0xffff;
                        if (Math[_0x10b919(0x24e)](_0x1cc07f / 0xffff) + 0x1 > 0x1)
                            throw new Error('ShurikenParticleSystem:the\x20maxParticleCount\x20multiply\x20mesh\x20vertexCount\x20is\x20large\x20than\x2065535.');
                        _0x3e2341 = _0x308aac['vertexStride'] * _0x132a48, this[_0x10b919(0x4f6)] = new _0x2ce777(_0x3e2341, _0x2e37d9[_0x10b919(0x620)]), this[_0x10b919(0x4f6)][_0x10b919(0x456)] = _0x308aac, this[_0x10b919(0x4f7)] = new Float32Array(this[_0x10b919(0xe4f)] * _0x132a48), this['_indexStride'] = _0x3df9a2[_0x10b919(0x629)]['indexCount'];
                        var _0x4a178d = _0x3df9a2[_0x10b919(0x629)][_0x10b919(0x319)](), _0x5b4b0d = this['_bufferMaxParticles'] * this[_0x10b919(0xeae)];
                        for (this[_0x10b919(0x629)] = new _0x67ef8f(_0x18be32[_0x10b919(0x8c9)][_0x10b919(0x8cb)], _0x5b4b0d, _0x2e37d9['STATIC_DRAW']), _0x4d70d8 = new Uint16Array(_0x5b4b0d), _0x5e94f4 = _0x3e2341 + 0x2 * _0x5b4b0d, _0x252322 = 0x0, _0x299883 = 0x0; _0x299883 < this[_0x10b919(0xe58)]; _0x299883++) {
                            var _0x31c581 = _0x299883 * this[_0x10b919(0x4e0)];
                            for (_0x59290e = 0x0, _0x1fc302 = _0x4a178d[_0x10b919(0x205)]; _0x59290e < _0x1fc302; _0x59290e++)
                                _0x4d70d8[_0x252322++] = _0x31c581 + _0x4a178d[_0x59290e];
                        }
                        this[_0x10b919(0x629)][_0x10b919(0x45d)](_0x4d70d8), this[_0x10b919(0x4f8)][_0x10b919(0x452)](), this['_bufferState']['applyVertexBuffer'](this[_0x10b919(0x4f6)]), this[_0x10b919(0x4f8)][_0x10b919(0x4f3)](this[_0x10b919(0x629)]), this[_0x10b919(0x4f8)][_0x10b919(0x4f9)]();
                    }
                } else {
                    for (_0x308aac = _0x11443b['vertexDeclaration'], this[_0x10b919(0xe4f)] = _0x308aac[_0x10b919(0x4e5)] / 0x4, this[_0x10b919(0xe50)] = 0x7, this['_timeIndex'] = 0xb, this[_0x10b919(0x4e0)] = 0x4, _0x3e2341 = _0x308aac[_0x10b919(0x4e5)] * this[_0x10b919(0xe58)] * this['_vertexStride'], this[_0x10b919(0x4f6)] = new _0x2ce777(_0x3e2341, _0x2e37d9['DYNAMIC_DRAW']), this[_0x10b919(0x4f6)][_0x10b919(0x456)] = _0x308aac, this['_vertices'] = new Float32Array(this['_floatCountPerVertex'] * this[_0x10b919(0xe58)] * this[_0x10b919(0x4e0)]), _0x299883 = 0x0; _0x299883 < this[_0x10b919(0xe58)]; _0x299883++)
                        _0x44927b = _0x299883 * this[_0x10b919(0xe4f)] * this[_0x10b919(0x4e0)], this[_0x10b919(0x4f7)][_0x44927b] = -0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x1] = -0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x2] = 0x0, this[_0x10b919(0x4f7)][_0x44927b + 0x3] = 0x1, _0x44927b += this[_0x10b919(0xe4f)], this[_0x10b919(0x4f7)][_0x44927b] = 0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x1] = -0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x2] = 0x1, this['_vertices'][_0x44927b + 0x3] = 0x1, _0x44927b += this[_0x10b919(0xe4f)], this[_0x10b919(0x4f7)][_0x44927b] = 0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x1] = 0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x2] = 0x1, this[_0x10b919(0x4f7)][_0x44927b + 0x3] = 0x0, _0x44927b += this[_0x10b919(0xe4f)], this[_0x10b919(0x4f7)][_0x44927b] = -0.5, this[_0x10b919(0x4f7)][_0x44927b + 0x1] = 0.5, this['_vertices'][_0x44927b + 0x2] = 0x0, this[_0x10b919(0x4f7)][_0x44927b + 0x3] = 0x0;
                    for (this[_0x10b919(0xeae)] = 0x6, this[_0x10b919(0x629)] = new _0x67ef8f(_0x18be32[_0x10b919(0x8c9)][_0x10b919(0x8cb)], 0x6 * this['_bufferMaxParticles'], _0x2e37d9[_0x10b919(0x4fa)]), _0x4d70d8 = new Uint16Array(0x6 * this[_0x10b919(0xe58)]), _0x299883 = 0x0; _0x299883 < this[_0x10b919(0xe58)]; _0x299883++) {
                        _0x252322 = 0x6 * _0x299883;
                        var _0x46b938 = _0x299883 * this['_vertexStride'], _0x26a98a = _0x46b938 + 0x2;
                        _0x4d70d8[_0x252322++] = _0x46b938, _0x4d70d8[_0x252322++] = _0x26a98a, _0x4d70d8[_0x252322++] = _0x46b938 + 0x1, _0x4d70d8[_0x252322++] = _0x46b938, _0x4d70d8[_0x252322++] = _0x46b938 + 0x3, _0x4d70d8[_0x252322++] = _0x26a98a;
                    }
                    this[_0x10b919(0x629)][_0x10b919(0x45d)](_0x4d70d8), _0x5e94f4 = _0x3e2341 + 0x6 * this[_0x10b919(0xe58)] * 0x2, this[_0x10b919(0x4f8)]['bind'](), this[_0x10b919(0x4f8)]['applyVertexBuffer'](this[_0x10b919(0x4f6)]), this[_0x10b919(0x4f8)]['applyIndexBuffer'](this[_0x10b919(0x629)]), this['_bufferState'][_0x10b919(0x4f9)]();
                }
                _0x387b86[_0x10b919(0x324)][_0x10b919(0xcd7)](_0x5e94f4, _0x5e94f4);
            }
        }
        [_0x6027f5(0x364)]() {
            var _0x330eb4 = _0x6027f5;
            super['destroy']();
            var _0x5285df = this[_0x330eb4(0x4f6)][_0x330eb4(0x451)] + 0x2 * this[_0x330eb4(0x629)][_0x330eb4(0xa0b)];
            _0x387b86['Resource'][_0x330eb4(0xcd7)](-_0x5285df, -_0x5285df), this[_0x330eb4(0x4f8)]['destroy'](), this['_vertexBuffer'][_0x330eb4(0x364)](), this['_indexBuffer']['destroy'](), this[_0x330eb4(0xe59)][_0x330eb4(0x364)](), this[_0x330eb4(0xe73)] = null, this['_boundingSphere'] = null, this[_0x330eb4(0xe4b)] = null, this[_0x330eb4(0xa5d)] = null, this[_0x330eb4(0xe4d)] = null, this[_0x330eb4(0x4f8)] = null, this['_vertexBuffer'] = null, this[_0x330eb4(0x629)] = null, this[_0x330eb4(0x3dc)] = null, this[_0x330eb4(0x4f7)] = null, this[_0x330eb4(0x629)] = null, this['_emission'] = null, this[_0x330eb4(0xe7e)] = null, this['startLifeTimeGradient'] = null, this[_0x330eb4(0xe47)] = null, this[_0x330eb4(0xe48)] = null, this[_0x330eb4(0xe32)] = null, this[_0x330eb4(0xe6e)] = null, this[_0x330eb4(0xe35)] = null, this[_0x330eb4(0xe3a)] = null, this[_0x330eb4(0xe3e)] = null, this['startRotationConstantMaxSeparate'] = null, this[_0x330eb4(0xe2b)] = null, this[_0x330eb4(0xe2d)] = null, this['startColorConstantMax'] = null, this[_0x330eb4(0xe86)] = null, this[_0x330eb4(0xe8b)] = null, this[_0x330eb4(0xeaf)] = null, this[_0x330eb4(0xe94)] = null, this[_0x330eb4(0xe60)] = null;
        }
        [_0x6027f5(0xead)](_0x418784) {
            var _0x25f19a = _0x6027f5, _0x262627 = _0xec89de[_0x25f19a(0xeb0)], _0x394b37 = _0xec89de[_0x25f19a(0xeb1)];
            return this['_shape'] && this[_0x25f19a(0xe7e)]['enable'] ? this[_0x25f19a(0xe27)] ? this[_0x25f19a(0xe7e)][_0x25f19a(0xd64)](_0x262627, _0x394b37) : this[_0x25f19a(0xe7e)]['generatePositionAndDirection'](_0x262627, _0x394b37, this[_0x25f19a(0xe28)], this[_0x25f19a(0xe29)]) : (_0x262627['x'] = _0x262627['y'] = _0x262627['z'] = 0x0, _0x394b37['x'] = _0x394b37['y'] = 0x0, _0x394b37['z'] = 0x1), this[_0x25f19a(0xeb2)](_0x262627, _0x394b37, _0x418784);
        }
        [_0x6027f5(0xeb2)](_0x39ebe1, _0x95323d, _0xdf87a8) {
            var _0x118249 = _0x6027f5;
            _0x3697cd['normalize'](_0x95323d, _0x95323d);
            var _0x3bcbaa = this[_0x118249(0xe55)] + 0x1;
            if (_0x3bcbaa >= this[_0x118249(0xe58)] && (_0x3bcbaa = 0x0), _0x3bcbaa === this['_firstRetiredElement'])
                return !0x1;
            var _0x396366, _0x5c4d4a, _0x3aa5f7, _0x370318, _0x5727c9, _0x365c1a, _0x2f9267, _0x48725e, _0x341c7c, _0x6f38b, _0xe2193 = this[_0x118249(0x3dc)][_0x118249(0x3d6)];
            if (_0xe4da7f['create'](this, this[_0x118249(0xe4e)]), this[_0x118249(0xdf4)] - _0xdf87a8 >= _0xe4da7f['startLifeTime'])
                return !0x0;
            switch (0x0 == this[_0x118249(0xded)] && (_0x396366 = _0xe2193['position'], _0x5c4d4a = _0xe2193['rotation']), this[_0x118249(0xeb3)]) {
            case 0x0:
                _0x3aa5f7 = this[_0x118249(0xe6b)];
                break;
            case 0x2:
                this[_0x118249(0xe27)] ? _0x3aa5f7 = _0x387b86[_0x118249(0xe24)][_0x118249(0x202)](this[_0x118249(0xe6c)], this['startSpeedConstantMax'], Math['random']()) : (this['_rand'][_0x118249(0xd66)] = this[_0x118249(0xe29)][0x8], _0x3aa5f7 = _0x387b86['MathUtil'][_0x118249(0x202)](this['startSpeedConstantMin'], this[_0x118249(0xe6d)], this[_0x118249(0xe28)]['getFloat']()), this[_0x118249(0xe29)][0x8] = this[_0x118249(0xe28)][_0x118249(0xd66)]);
            }
            var _0x3ba4b2 = this['_velocityOverLifetime'] && this[_0x118249(0xe86)]['enable'];
            if (_0x3ba4b2) {
                var _0x5930e6 = this[_0x118249(0xe86)][_0x118249(0xe0b)]['type'];
                0x2 === _0x5930e6 || 0x3 === _0x5930e6 ? this[_0x118249(0xe27)] ? (_0x370318 = Math[_0x118249(0xd5f)](), _0x5727c9 = Math['random'](), _0x365c1a = Math['random']()) : (this[_0x118249(0xe28)][_0x118249(0xd66)] = this[_0x118249(0xe29)][0x9], _0x370318 = this[_0x118249(0xe28)][_0x118249(0xd5e)](), _0x5727c9 = this[_0x118249(0xe28)]['getFloat'](), _0x365c1a = this[_0x118249(0xe28)][_0x118249(0xd5e)](), this[_0x118249(0xe29)][0x9] = this[_0x118249(0xe28)]['seed']) : _0x3ba4b2 = !0x1;
            } else
                _0x3ba4b2 = !0x1;
            var _0x4f053a = this[_0x118249(0xe8b)] && this['_colorOverLifetime'][_0x118249(0x659)];
            _0x4f053a ? 0x3 === this[_0x118249(0xe8b)][_0x118249(0x46f)]['type'] ? this[_0x118249(0xe27)] ? _0x2f9267 = Math[_0x118249(0xd5f)]() : (this[_0x118249(0xe28)][_0x118249(0xd66)] = this[_0x118249(0xe29)][0xa], _0x2f9267 = this[_0x118249(0xe28)]['getFloat'](), this[_0x118249(0xe29)][0xa] = this[_0x118249(0xe28)][_0x118249(0xd66)]) : _0x4f053a = !0x1 : _0x4f053a = !0x1;
            var _0x4668cb = this[_0x118249(0xeaf)] && this['_sizeOverLifetime'][_0x118249(0x659)];
            _0x4668cb ? 0x3 === this['_sizeOverLifetime'][_0x118249(0x2a7)][_0x118249(0x2cc)] ? this[_0x118249(0xe27)] ? _0x48725e = Math[_0x118249(0xd5f)]() : (this[_0x118249(0xe28)][_0x118249(0xd66)] = this[_0x118249(0xe29)][0xb], _0x48725e = this['_rand'][_0x118249(0xd5e)](), this[_0x118249(0xe29)][0xb] = this[_0x118249(0xe28)][_0x118249(0xd66)]) : _0x4668cb = !0x1 : _0x4668cb = !0x1;
            var _0x3c4afd = this[_0x118249(0xe94)] && this[_0x118249(0xe94)][_0x118249(0x659)];
            if (_0x3c4afd) {
                var _0x5257b4 = this[_0x118249(0xe94)]['angularVelocity'][_0x118249(0x2cc)];
                0x2 === _0x5257b4 || 0x3 === _0x5257b4 ? this[_0x118249(0xe27)] ? _0x341c7c = Math[_0x118249(0xd5f)]() : (this[_0x118249(0xe28)][_0x118249(0xd66)] = this[_0x118249(0xe29)][0xc], _0x341c7c = this['_rand'][_0x118249(0xd5e)](), this[_0x118249(0xe29)][0xc] = this[_0x118249(0xe28)][_0x118249(0xd66)]) : _0x3c4afd = !0x1;
            } else
                _0x3c4afd = !0x1;
            var _0x2d6002 = this['_textureSheetAnimation'] && this[_0x118249(0xe60)][_0x118249(0x659)];
            _0x2d6002 ? 0x3 === this[_0x118249(0xe60)][_0x118249(0xd78)][_0x118249(0x2cc)] ? this[_0x118249(0xe27)] ? _0x6f38b = Math[_0x118249(0xd5f)]() : (this[_0x118249(0xe28)][_0x118249(0xd66)] = this[_0x118249(0xe29)][0xf], _0x6f38b = this['_rand'][_0x118249(0xd5e)](), this['_randomSeeds'][0xf] = this[_0x118249(0xe28)][_0x118249(0xd66)]) : _0x2d6002 = !0x1 : _0x2d6002 = !0x1;
            var _0x135502, _0x237f2e, _0x3dfb9a, _0x3f4e63, _0x14fbfb, _0x13fd93, _0x2f90dd = this[_0x118249(0xe55)] * this[_0x118249(0xe4f)] * this[_0x118249(0x4e0)], _0xa6c8e4 = _0xe4da7f[_0x118249(0xe49)][0x0], _0x454915 = _0xe4da7f[_0x118249(0xe49)][0x1], _0x5a4780 = _0xe4da7f[_0x118249(0xe49)][0x2], _0x59c1b6 = _0xe4da7f[_0x118249(0xe49)][0x3], _0x42ba0d = this['_ownerRender'];
            if (0x4 === _0x42ba0d[_0x118249(0x730)]) {
                var _0xa2b744 = _0x42ba0d[_0x118249(0x8d6)]['_vertexBuffer'];
                _0x135502 = _0xa2b744[_0x118249(0xaca)]();
                var _0x2eae2a = _0xa2b744[_0x118249(0x456)];
                _0x3dfb9a = _0x2eae2a['getVertexElementByUsage'](_0x73b54a[_0x118249(0x615)])[_0x118249(0x4e4)] / 0x4;
                var _0x4861d9 = _0x2eae2a[_0x118249(0x4e8)](_0x73b54a['MESH_COLOR0']);
                _0x3f4e63 = _0x4861d9 ? _0x4861d9[_0x118249(0x4e4)] / 0x4 : -0x1;
                var _0x146f30 = _0x2eae2a[_0x118249(0x4e8)](_0x73b54a[_0x118249(0x616)]);
                _0x14fbfb = _0x146f30 ? _0x146f30[_0x118249(0x4e4)] / 0x4 : -0x1, _0x237f2e = _0x2eae2a[_0x118249(0x4e5)] / 0x4, _0x13fd93 = 0x0;
            } else {
                this[_0x118249(0x4f7)][_0x2f90dd + 0x2] = _0x5a4780, this[_0x118249(0x4f7)][_0x2f90dd + 0x3] = _0x59c1b6 + _0x454915;
                var _0x2723f3 = _0x2f90dd + this[_0x118249(0xe4f)];
                this[_0x118249(0x4f7)][_0x2723f3 + 0x2] = _0x5a4780 + _0xa6c8e4, this[_0x118249(0x4f7)][_0x2723f3 + 0x3] = _0x59c1b6 + _0x454915;
                var _0x15347b = _0x2723f3 + this[_0x118249(0xe4f)];
                this[_0x118249(0x4f7)][_0x15347b + 0x2] = _0x5a4780 + _0xa6c8e4, this['_vertices'][_0x15347b + 0x3] = _0x59c1b6;
                var _0x193ebb = _0x15347b + this[_0x118249(0xe4f)];
                this[_0x118249(0x4f7)][_0x193ebb + 0x2] = _0x5a4780, this['_vertices'][_0x193ebb + 0x3] = _0x59c1b6;
            }
            for (var _0x3da83e = _0x2f90dd, _0x30fcb6 = _0x2f90dd + this['_floatCountPerVertex'] * this[_0x118249(0x4e0)]; _0x3da83e < _0x30fcb6; _0x3da83e += this[_0x118249(0xe4f)]) {
                var _0x195011;
                if (0x4 === _0x42ba0d['renderMode']) {
                    _0x195011 = _0x3da83e;
                    var _0x211c9d = _0x237f2e * _0x13fd93++, _0x1d86da = _0x211c9d + _0x3dfb9a;
                    this['_vertices'][_0x195011++] = _0x135502[_0x1d86da++], this[_0x118249(0x4f7)][_0x195011++] = _0x135502[_0x1d86da++], this[_0x118249(0x4f7)][_0x195011++] = _0x135502[_0x1d86da], -0x1 === _0x3f4e63 ? (this['_vertices'][_0x195011++] = 0x1, this[_0x118249(0x4f7)][_0x195011++] = 0x1, this[_0x118249(0x4f7)][_0x195011++] = 0x1, this[_0x118249(0x4f7)][_0x195011++] = 0x1) : (_0x1d86da = _0x211c9d + _0x3f4e63, this[_0x118249(0x4f7)][_0x195011++] = _0x135502[_0x1d86da++], this[_0x118249(0x4f7)][_0x195011++] = _0x135502[_0x1d86da++], this[_0x118249(0x4f7)][_0x195011++] = _0x135502[_0x1d86da++], this['_vertices'][_0x195011++] = _0x135502[_0x1d86da]), -0x1 === _0x14fbfb ? (this['_vertices'][_0x195011++] = 0x0, this['_vertices'][_0x195011++] = 0x0) : (_0x1d86da = _0x211c9d + _0x14fbfb, this[_0x118249(0x4f7)][_0x195011++] = _0x5a4780 + _0x135502[_0x1d86da++] * _0xa6c8e4, this[_0x118249(0x4f7)][_0x195011++] = _0x59c1b6 + _0x135502[_0x1d86da] * _0x454915);
                } else
                    _0x195011 = _0x3da83e + 0x4;
                switch (this[_0x118249(0x4f7)][_0x195011++] = _0x39ebe1['x'], this[_0x118249(0x4f7)][_0x195011++] = _0x39ebe1['y'], this[_0x118249(0x4f7)][_0x195011++] = _0x39ebe1['z'], this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f['startLifeTime'], this['_vertices'][_0x195011++] = _0x95323d['x'], this['_vertices'][_0x195011++] = _0x95323d['y'], this[_0x118249(0x4f7)][_0x195011++] = _0x95323d['z'], this[_0x118249(0x4f7)][_0x195011++] = _0xdf87a8, this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f[_0x118249(0xe2c)]['x'], this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f[_0x118249(0xe2c)]['y'], this['_vertices'][_0x195011++] = _0xe4da7f[_0x118249(0xe2c)]['z'], this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f[_0x118249(0xe2c)]['w'], this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f[_0x118249(0xe30)][0x0], this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f[_0x118249(0xe30)][0x1], this['_vertices'][_0x195011++] = _0xe4da7f[_0x118249(0xe30)][0x2], this['_vertices'][_0x195011++] = _0xe4da7f['startRotation'][0x0], this['_vertices'][_0x195011++] = _0xe4da7f[_0x118249(0xe3c)][0x1], this[_0x118249(0x4f7)][_0x195011++] = _0xe4da7f[_0x118249(0xe3c)][0x2], this['_vertices'][_0x195011++] = _0x3aa5f7, _0x4f053a && (this[_0x118249(0x4f7)][_0x195011 + 0x1] = _0x2f9267), _0x4668cb && (this[_0x118249(0x4f7)][_0x195011 + 0x2] = _0x48725e), _0x3c4afd && (this[_0x118249(0x4f7)][_0x195011 + 0x3] = _0x341c7c), _0x2d6002 && (this['_vertices'][_0x195011 + 0x4] = _0x6f38b), _0x3ba4b2 && (this[_0x118249(0x4f7)][_0x195011 + 0x5] = _0x370318, this['_vertices'][_0x195011 + 0x6] = _0x5727c9, this[_0x118249(0x4f7)][_0x195011 + 0x7] = _0x365c1a), this[_0x118249(0xded)]) {
                case 0x0:
                    _0x195011 += 0x8, this[_0x118249(0x4f7)][_0x195011++] = _0x396366['x'], this[_0x118249(0x4f7)][_0x195011++] = _0x396366['y'], this[_0x118249(0x4f7)][_0x195011++] = _0x396366['z'], this['_vertices'][_0x195011++] = _0x5c4d4a['x'], this['_vertices'][_0x195011++] = _0x5c4d4a['y'], this['_vertices'][_0x195011++] = _0x5c4d4a['z'], this[_0x118249(0x4f7)][_0x195011++] = _0x5c4d4a['w'];
                    break;
                case 0x1:
                    break;
                default:
                    throw new Error('ShurikenParticleMaterial:\x20SimulationSpace\x20value\x20is\x20invalid.');
                }
            }
            return this['_firstFreeElement'] = _0x3bcbaa, !0x0;
        }
        [_0x6027f5(0xeb4)]() {
            var _0x382c73 = _0x6027f5, _0x3dddc0, _0x26b516 = this[_0x382c73(0x4e0)] * this[_0x382c73(0xe4f)] * 0x4;
            this[_0x382c73(0xe54)] < this[_0x382c73(0xe55)] ? (_0x3dddc0 = this[_0x382c73(0xe54)] * _0x26b516, this['_vertexBuffer'][_0x382c73(0x45d)](this[_0x382c73(0x4f7)][_0x382c73(0x454)], _0x3dddc0, _0x3dddc0, (this[_0x382c73(0xe55)] - this[_0x382c73(0xe54)]) * _0x26b516)) : (_0x3dddc0 = this[_0x382c73(0xe54)] * _0x26b516, this[_0x382c73(0x4f6)][_0x382c73(0x45d)](this[_0x382c73(0x4f7)][_0x382c73(0x454)], _0x3dddc0, _0x3dddc0, (this[_0x382c73(0xe58)] - this[_0x382c73(0xe54)]) * _0x26b516), this[_0x382c73(0xe55)] > 0x0 && this[_0x382c73(0x4f6)][_0x382c73(0x45d)](this[_0x382c73(0x4f7)][_0x382c73(0x454)], 0x0, 0x0, this[_0x382c73(0xe55)] * _0x26b516)), this[_0x382c73(0xe54)] = this['_firstFreeElement'];
        }
        [_0x6027f5(0xa55)]() {
            var _0x332aea = _0x6027f5;
            return _0xec89de[_0x332aea(0xa5e)];
        }
        [_0x6027f5(0x5e7)](_0x217efd) {
            var _0x2d17c6 = _0x6027f5;
            return this[_0x2d17c6(0xe65)] != _0x387b86[_0x2d17c6(0x4dc)][_0x2d17c6(0x815)] && (this[_0x2d17c6(0xe65)] = _0x387b86['Stat'][_0x2d17c6(0x815)], this[_0x2d17c6(0xea4)](), this[_0x2d17c6(0xe54)] != this[_0x2d17c6(0xe55)] && this[_0x2d17c6(0xeb4)](), this[_0x2d17c6(0xe57)]++), this[_0x2d17c6(0xe53)] != this[_0x2d17c6(0xe55)];
        }
        [_0x6027f5(0x5e8)](_0x32a529) {
            var _0x5144fd = _0x6027f5, _0x193328;
            this[_0x5144fd(0x4f8)][_0x5144fd(0x452)]();
            var _0x32e9a3 = _0x387b86['LayaGL'][_0x5144fd(0x304)];
            this[_0x5144fd(0xe53)] < this[_0x5144fd(0xe55)] ? (_0x193328 = (this[_0x5144fd(0xe55)] - this['_firstActiveElement']) * this['_indexStride'], _0x32e9a3['drawElements'](_0x32e9a3[_0x5144fd(0x506)], _0x193328, _0x32e9a3[_0x5144fd(0xa0c)], 0x2 * this['_firstActiveElement'] * this[_0x5144fd(0xeae)]), _0x387b86[_0x5144fd(0x4dc)][_0x5144fd(0x62e)] += _0x193328 / 0x3, _0x387b86[_0x5144fd(0x4dc)]['renderBatches']++) : (_0x193328 = (this[_0x5144fd(0xe58)] - this['_firstActiveElement']) * this['_indexStride'], _0x32e9a3['drawElements'](_0x32e9a3[_0x5144fd(0x506)], _0x193328, _0x32e9a3['UNSIGNED_SHORT'], 0x2 * this[_0x5144fd(0xe53)] * this[_0x5144fd(0xeae)]), _0x387b86[_0x5144fd(0x4dc)]['trianglesFaces'] += _0x193328 / 0x3, _0x387b86['Stat'][_0x5144fd(0x502)]++, this[_0x5144fd(0xe55)] > 0x0 && (_0x193328 = this[_0x5144fd(0xe55)] * this[_0x5144fd(0xeae)], _0x32e9a3[_0x5144fd(0x8d4)](_0x32e9a3['TRIANGLES'], _0x193328, _0x32e9a3['UNSIGNED_SHORT'], 0x0), _0x387b86[_0x5144fd(0x4dc)]['trianglesFaces'] += _0x193328 / 0x3, _0x387b86['Stat'][_0x5144fd(0x502)]++));
        }
        [_0x6027f5(0x3b2)]() {
            var _0x5c6e1d = _0x6027f5;
            if (this[_0x5c6e1d(0xe5f)] = 0x0, this[_0x5c6e1d(0xe5a)] = !0x0, this[_0x5c6e1d(0xe5b)] = !0x0, this[_0x5c6e1d(0xe81)] = !0x1, this[_0x5c6e1d(0xe5d)] = 0x0, this['_totalDelayTime'] = 0x0, !this[_0x5c6e1d(0xe27)]) {
                for (var _0x3f3f94 = 0x0, _0x80fcc2 = this[_0x5c6e1d(0xe29)]['length']; _0x3f3f94 < _0x80fcc2; _0x3f3f94++)
                    this['_randomSeeds'][_0x3f3f94] = this[_0x5c6e1d(0xe71)][0x0] + _0xec89de[_0x5c6e1d(0xe7a)][_0x3f3f94];
            }
            switch (this[_0x5c6e1d(0xe68)]) {
            case 0x0:
                this['_playStartDelay'] = this[_0x5c6e1d(0xe69)];
                break;
            case 0x1:
                this[_0x5c6e1d(0xe27)] ? this[_0x5c6e1d(0xe5c)] = _0x387b86['MathUtil'][_0x5c6e1d(0x202)](this[_0x5c6e1d(0xe76)], this['startDelayMax'], Math['random']()) : (this[_0x5c6e1d(0xe28)]['seed'] = this[_0x5c6e1d(0xe29)][0x2], this[_0x5c6e1d(0xe5c)] = _0x387b86[_0x5c6e1d(0xe24)][_0x5c6e1d(0x202)](this[_0x5c6e1d(0xe76)], this['startDelayMax'], this[_0x5c6e1d(0xe28)][_0x5c6e1d(0xd5e)]()), this['_randomSeeds'][0x2] = this['_rand']['seed']);
                break;
            default:
                throw new Error(_0x5c6e1d(0xeb5));
            }
            this[_0x5c6e1d(0xe74)] = this[_0x5c6e1d(0xdf4)] + this['_playStartDelay'], this[_0x5c6e1d(0xe66)] = _0x387b86['Stat'][_0x5c6e1d(0x815)];
        }
        [_0x6027f5(0xeb6)]() {
            this['_isPaused'] = !0x0;
        }
        ['simulate'](_0x384fe3, _0x146f22 = !0x0) {
            var _0x26d1fe = _0x6027f5;
            this[_0x26d1fe(0xe52)] = !0x0, _0x146f22 ? this[_0x26d1fe(0xeaa)](_0x384fe3) : (this[_0x26d1fe(0xe81)] = !0x1, this[_0x26d1fe(0xea6)](_0x384fe3)), this[_0x26d1fe(0xeb6)]();
        }
        [_0x6027f5(0xeac)]() {
            var _0x2baed8 = _0x6027f5;
            this[_0x2baed8(0xe5f)] = 0x0, this[_0x2baed8(0xe5a)] = !0x1, this[_0x2baed8(0xe5d)] = 0x0;
        }
        ['cloneTo'](_0x488273) {
            var _0x4edb18 = _0x6027f5, _0x28e9f4 = _0x488273;
            _0x28e9f4[_0x4edb18(0xde8)] = this[_0x4edb18(0xde8)], this[_0x4edb18(0xe4d)] && this[_0x4edb18(0xe4d)]['cloneTo'](_0x28e9f4[_0x4edb18(0xe4d)]), _0x28e9f4[_0x4edb18(0x32c)] = this[_0x4edb18(0x32c)], _0x28e9f4[_0x4edb18(0xe67)] = this['looping'], _0x28e9f4[_0x4edb18(0xe75)] = this[_0x4edb18(0xe75)], _0x28e9f4['startDelayType'] = this[_0x4edb18(0xe68)], _0x28e9f4['startDelay'] = this[_0x4edb18(0xe69)], _0x28e9f4[_0x4edb18(0xe76)] = this[_0x4edb18(0xe76)], _0x28e9f4[_0x4edb18(0xe6a)] = this['startDelayMax'], _0x28e9f4[_0x4edb18(0xe82)] = this[_0x4edb18(0xe82)], _0x28e9f4['startLifetimeType'] = this[_0x4edb18(0xe41)], _0x28e9f4[_0x4edb18(0xe83)] = this[_0x4edb18(0xe83)], this['startLifeTimeGradient'][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe43)]), _0x28e9f4['startLifetimeConstantMin'] = this[_0x4edb18(0xe44)], _0x28e9f4['startLifetimeConstantMax'] = this[_0x4edb18(0xe45)], this[_0x4edb18(0xe47)][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe47)]), this[_0x4edb18(0xe48)]['cloneTo'](_0x28e9f4[_0x4edb18(0xe48)]), _0x28e9f4[_0x4edb18(0xeb3)] = this['startSpeedType'], _0x28e9f4['startSpeedConstant'] = this[_0x4edb18(0xe6b)], _0x28e9f4[_0x4edb18(0xe6c)] = this[_0x4edb18(0xe6c)], _0x28e9f4[_0x4edb18(0xe6d)] = this['startSpeedConstantMax'], _0x28e9f4['threeDStartSize'] = this['threeDStartSize'], _0x28e9f4[_0x4edb18(0xe31)] = this['startSizeType'], _0x28e9f4[_0x4edb18(0xe33)] = this[_0x4edb18(0xe33)], this['startSizeConstantSeparate'][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe32)]), _0x28e9f4[_0x4edb18(0xe36)] = this['startSizeConstantMin'], _0x28e9f4[_0x4edb18(0xe37)] = this[_0x4edb18(0xe37)], this[_0x4edb18(0xe6e)][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe6e)]), this[_0x4edb18(0xe35)][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe35)]), _0x28e9f4[_0x4edb18(0xdf1)] = this[_0x4edb18(0xdf1)], _0x28e9f4[_0x4edb18(0xe39)] = this[_0x4edb18(0xe39)], _0x28e9f4[_0x4edb18(0xe3d)] = this['startRotationConstant'], this[_0x4edb18(0xe3a)][_0x4edb18(0x1fc)](_0x28e9f4['startRotationConstantSeparate']), _0x28e9f4[_0x4edb18(0xe40)] = this['startRotationConstantMin'], _0x28e9f4[_0x4edb18(0xe3f)] = this[_0x4edb18(0xe3f)], this[_0x4edb18(0xe3e)][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe3e)]), this[_0x4edb18(0xe6f)][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe6f)]), _0x28e9f4['randomizeRotationDirection'] = this[_0x4edb18(0xe3b)], _0x28e9f4['startColorType'] = this[_0x4edb18(0xe2a)], this[_0x4edb18(0xe2b)][_0x4edb18(0x1fc)](_0x28e9f4[_0x4edb18(0xe2b)]), this['startColorConstantMin']['cloneTo'](_0x28e9f4[_0x4edb18(0xe2d)]), this[_0x4edb18(0xe2e)][_0x4edb18(0x1fc)](_0x28e9f4['startColorConstantMax']), _0x28e9f4['gravityModifier'] = this[_0x4edb18(0xdeb)], _0x28e9f4[_0x4edb18(0xded)] = this[_0x4edb18(0xded)], _0x28e9f4[_0x4edb18(0xdef)] = this[_0x4edb18(0xdef)], _0x28e9f4[_0x4edb18(0xe70)] = this['playOnAwake'], _0x28e9f4[_0x4edb18(0xe27)] = this['autoRandomSeed'], _0x28e9f4[_0x4edb18(0xe71)][0x0] = this[_0x4edb18(0xe71)][0x0], _0x28e9f4[_0x4edb18(0xe7b)] = this['maxParticles'], this[_0x4edb18(0xe59)] && (_0x28e9f4[_0x4edb18(0xe59)] = this[_0x4edb18(0xe59)][_0x4edb18(0x1fd)]()), this[_0x4edb18(0xe7d)] && (_0x28e9f4[_0x4edb18(0xe7d)] = this[_0x4edb18(0xe7d)][_0x4edb18(0x1fd)]()), this[_0x4edb18(0xe85)] && (_0x28e9f4[_0x4edb18(0xe85)] = this[_0x4edb18(0xe85)]['clone']()), this[_0x4edb18(0xe2f)] && (_0x28e9f4[_0x4edb18(0xe2f)] = this[_0x4edb18(0xe2f)]['clone']()), this[_0x4edb18(0xe38)] && (_0x28e9f4['sizeOverLifetime'] = this[_0x4edb18(0xe38)]['clone']()), this[_0x4edb18(0xe95)] && (_0x28e9f4[_0x4edb18(0xe95)] = this['rotationOverLifetime'][_0x4edb18(0x1fd)]()), this[_0x4edb18(0xe9e)] && (_0x28e9f4[_0x4edb18(0xe9e)] = this[_0x4edb18(0xe9e)][_0x4edb18(0x1fd)]()), _0x28e9f4['isPerformanceMode'] = this['isPerformanceMode'], _0x28e9f4[_0x4edb18(0xe5a)] = this[_0x4edb18(0xe5a)], _0x28e9f4['_isPlaying'] = this[_0x4edb18(0xe5b)], _0x28e9f4[_0x4edb18(0xe81)] = this[_0x4edb18(0xe81)], _0x28e9f4[_0x4edb18(0xe5c)] = this[_0x4edb18(0xe5c)], _0x28e9f4[_0x4edb18(0xe74)] = this[_0x4edb18(0xe74)], _0x28e9f4['_emissionTime'] = this[_0x4edb18(0xe5d)], _0x28e9f4[_0x4edb18(0xe5e)] = this[_0x4edb18(0xe5e)], _0x28e9f4[_0x4edb18(0xe5f)] = this['_burstsIndex'];
        }
        ['clone']() {
            var _0x31210f = _0x6027f5, _0x14a9ad = new _0xec89de(null);
            return this[_0x31210f(0x1fc)](_0x14a9ad), _0x14a9ad;
        }
    }
    _0xec89de[_0x6027f5(0xe7a)] = new Uint32Array([
        0x23571a3e,
        0xc34f56fe,
        0x13371337,
        0x12460f3b,
        0x6aed452e,
        0xdec4aea1,
        0x96aa4de3,
        0x8d2c8431,
        0xf3857f6f,
        0xe0fbd834,
        0x13740583,
        0x591bc05c,
        0x40eb95e4,
        0xbc524e5f,
        0xaf502044,
        0xa614b381,
        0x1034e524,
        0xfc524e5f
    ]), _0xec89de[_0x6027f5(0xea3)] = 0.71, _0xec89de['g'] = 9.8, _0xec89de['_maxElapsedTime'] = 0x1 / 0x3, _0xec89de[_0x6027f5(0x59f)] = new _0x3697cd(), _0xec89de[_0x6027f5(0x3a1)] = new _0x3697cd(), _0xec89de[_0x6027f5(0x855)] = new _0x3697cd(), _0xec89de[_0x6027f5(0x85d)] = new _0x3697cd(), _0xec89de[_0x6027f5(0x85b)] = new _0x3697cd(), _0xec89de[_0x6027f5(0x86e)] = new _0x3697cd(), _0xec89de[_0x6027f5(0x86f)] = new _0x3697cd(), _0xec89de['_tempVector37'] = new _0x3697cd(), _0xec89de[_0x6027f5(0xeb0)] = new _0x3697cd(), _0xec89de[_0x6027f5(0xeb1)] = new _0x3697cd(), _0xec89de[_0x6027f5(0xa5e)] = _0x2be7a6[_0x6027f5(0xa6a)]++;
    class _0x47d536 extends _0x221092 {
        constructor() {
            var _0x43fc78 = _0x6027f5;
            super(null), this[_0x43fc78(0x5e8)] = new _0xa7c03a(this), this[_0x43fc78(0xeb7)] = new _0xec89de(this);
            var _0x461059 = this[_0x43fc78(0x5e8)][_0x43fc78(0x600)][0x0] = new _0x50feff();
            _0x461059[_0x43fc78(0xa8d)](this[_0x43fc78(0x3d5)]), _0x461059[_0x43fc78(0x4ff)] = this[_0x43fc78(0x5e8)], _0x461059[_0x43fc78(0xa9e)](this[_0x43fc78(0xeb7)]), _0x461059['material'] = _0x3a9279[_0x43fc78(0xb27)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x1c0cd9 = _0x6027f5;
            _0x54eac9[_0x1c0cd9(0xde2)] = _0x3a9f31[_0x1c0cd9(0x510)]('SPHERHBILLBOARD'), _0x54eac9[_0x1c0cd9(0xde3)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xeb8)), _0x54eac9['SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD'] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xeb9)), _0x54eac9['SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD'] = _0x3a9f31[_0x1c0cd9(0x510)]('VERTICALBILLBOARD'), _0x54eac9['SHADERDEFINE_COLOROVERLIFETIME'] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xeba)), _0x54eac9[_0x1c0cd9(0xe8c)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xebb)), _0x54eac9[_0x1c0cd9(0xe87)] = _0x3a9f31[_0x1c0cd9(0x510)]('VELOCITYOVERLIFETIMECONSTANT'), _0x54eac9['SHADERDEFINE_VELOCITYOVERLIFETIMECURVE'] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xebc)), _0x54eac9['SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT'] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xebd)), _0x54eac9[_0x1c0cd9(0xe8a)] = _0x3a9f31['getDefineByName'](_0x1c0cd9(0xebe)), _0x54eac9[_0x1c0cd9(0xe9f)] = _0x3a9f31[_0x1c0cd9(0x510)]('TEXTURESHEETANIMATIONCURVE'), _0x54eac9[_0x1c0cd9(0xea0)] = _0x3a9f31[_0x1c0cd9(0x510)]('TEXTURESHEETANIMATIONRANDOMCURVE'), _0x54eac9[_0x1c0cd9(0xe9d)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xebf)), _0x54eac9[_0x1c0cd9(0xe96)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xec0)), _0x54eac9['SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT'] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xec1)), _0x54eac9['SHADERDEFINE_ROTATIONOVERLIFETIMECURVE'] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xec2)), _0x54eac9[_0x1c0cd9(0xe99)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xec3)), _0x54eac9['SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES'] = _0x3a9f31['getDefineByName'](_0x1c0cd9(0xec4)), _0x54eac9[_0x1c0cd9(0xe8f)] = _0x3a9f31[_0x1c0cd9(0x510)]('SIZEOVERLIFETIMECURVE'), _0x54eac9[_0x1c0cd9(0xe92)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xec5)), _0x54eac9[_0x1c0cd9(0xe91)] = _0x3a9f31['getDefineByName']('SIZEOVERLIFETIMERANDOMCURVES'), _0x54eac9[_0x1c0cd9(0xe90)] = _0x3a9f31[_0x1c0cd9(0x510)](_0x1c0cd9(0xec6)), _0x54eac9['SHADERDEFINE_RENDERMODE_MESH'] = _0x3a9f31[_0x1c0cd9(0x510)]('RENDERMODE_MESH'), _0x54eac9[_0x1c0cd9(0xe7f)] = _0x3a9f31['getDefineByName']('SHAPE');
        }
        get [_0x6027f5(0xde6)]() {
            return this['_particleSystem'];
        }
        get [_0x6027f5(0xea2)]() {
            return this['_render'];
        }
        [_0x6027f5(0xec7)](_0x491d27, _0x134e3e) {
            var _0x3aa45e = _0x6027f5;
            for (var _0x4c5d41 in _0x134e3e)
                switch (_0x4c5d41) {
                case _0x3aa45e(0xec8):
                    var _0x24eba7 = _0x134e3e[_0x3aa45e(0xec8)];
                    for (var _0x4c8dfa in _0x24eba7)
                        _0x491d27[_0x4c8dfa] = _0x24eba7[_0x4c8dfa];
                    break;
                case 'vector2s':
                    var _0x33de04 = _0x134e3e[_0x3aa45e(0xec9)];
                    for (var _0x4c8dfa in _0x33de04) {
                        var _0x5daa4f = _0x491d27[_0x4c8dfa], _0x402227 = _0x33de04[_0x4c8dfa];
                        _0x5daa4f['setValue'](_0x402227[0x0], _0x402227[0x1]), _0x491d27[_0x4c8dfa] = _0x5daa4f;
                    }
                    break;
                case 'vector3s':
                    var _0x6d48ba = _0x134e3e[_0x3aa45e(0xeca)];
                    for (var _0x4c8dfa in _0x6d48ba) {
                        var _0x53cdf1 = _0x491d27[_0x4c8dfa], _0x51117a = _0x6d48ba[_0x4c8dfa];
                        _0x53cdf1[_0x3aa45e(0x1f8)](_0x51117a[0x0], _0x51117a[0x1], _0x51117a[0x2]), _0x491d27[_0x4c8dfa] = _0x53cdf1;
                    }
                    break;
                case _0x3aa45e(0xecb):
                    var _0x19a24c = _0x134e3e['vector4s'];
                    for (var _0x4c8dfa in _0x19a24c) {
                        var _0x2c9770 = _0x491d27[_0x4c8dfa], _0x40de20 = _0x19a24c[_0x4c8dfa];
                        _0x2c9770[_0x3aa45e(0x1f8)](_0x40de20[0x0], _0x40de20[0x1], _0x40de20[0x2], _0x40de20[0x3]), _0x491d27[_0x4c8dfa] = _0x2c9770;
                    }
                    break;
                case 'gradientDataNumbers':
                    var _0x46e971 = _0x134e3e[_0x3aa45e(0xecc)];
                    for (var _0x4c8dfa in _0x46e971) {
                        for (var _0x581c1f = _0x491d27[_0x4c8dfa], _0x56d27e = _0x134e3e[_0x4c8dfa], _0x3a7d05 = 0x0, _0x27836e = _0x56d27e[_0x3aa45e(0x205)]; _0x3a7d05 < _0x27836e; _0x3a7d05++) {
                            var _0x33d362 = _0x56d27e[_0x3a7d05];
                            _0x581c1f[_0x3aa45e(0x207)](_0x33d362['key'], _0x33d362[_0x3aa45e(0x2a1)]);
                        }
                        _0x491d27[_0x4c8dfa] = _0x581c1f;
                    }
                    break;
                case _0x3aa45e(0xecd):
                    var _0x178f3d = _0x134e3e[_0x3aa45e(0xecd)];
                    for (var _0x4c8dfa in _0x178f3d)
                        _0x491d27[_0x4c8dfa] = _0x387b86[_0x3aa45e(0x3bd)]['getRes'](_0x178f3d[_0x4c8dfa]);
                    break;
                case _0x3aa45e(0xece):
                    var _0x59abca = _0x134e3e[_0x3aa45e(0xece)];
                    for (_0x3a7d05 = 0x0, _0x27836e = _0x59abca[_0x3aa45e(0x205)]; _0x3a7d05 < _0x27836e; _0x3a7d05++) {
                        var _0x349e4f = _0x59abca[_0x3a7d05];
                        _0x491d27['addBurst'](new _0xe35791(_0x349e4f[_0x3aa45e(0x273)], _0x349e4f[_0x3aa45e(0x212)], _0x349e4f[_0x3aa45e(0x20c)]));
                    }
                    break;
                case _0x3aa45e(0xe71):
                    _0x491d27[_0x3aa45e(0xe71)][0x0] = _0x134e3e[_0x3aa45e(0xe71)];
                    break;
                case _0x3aa45e(0xd67):
                case _0x3aa45e(0x2cc):
                case _0x3aa45e(0x46f):
                case _0x3aa45e(0x2a7):
                case 'frame':
                case _0x3aa45e(0xd79):
                case _0x3aa45e(0xd51):
                case _0x3aa45e(0xe0b):
                    break;
                default:
                    throw _0x3aa45e(0xecf);
                }
        }
        [_0x6027f5(0x67c)](_0x39257d, _0x318d71) {
            var _0x1dea67 = _0x6027f5;
            if (super[_0x1dea67(0x67c)](_0x39257d, _0x318d71), _0x39257d[_0x1dea67(0xed0)]) {
                var _0x3d1387 = this[_0x1dea67(0xde6)], _0x412153 = this[_0x1dea67(0xea2)];
                this[_0x1dea67(0xec7)](_0x412153, _0x39257d['renderer']), this[_0x1dea67(0xec7)](_0x3d1387, _0x39257d['main']), this['_parseModule'](_0x3d1387[_0x1dea67(0xed1)], _0x39257d['emission']);
                var _0xce4287 = _0x39257d['shape'];
                if (_0xce4287) {
                    var _0x44bc9b;
                    switch (_0xce4287[_0x1dea67(0xd67)]) {
                    case 0x0:
                        _0x44bc9b = new _0x47a2d1();
                        break;
                    case 0x1:
                        _0x44bc9b = new _0x4d35b2();
                        break;
                    case 0x2:
                        _0x44bc9b = new _0x49c361();
                        break;
                    case 0x3:
                        _0x44bc9b = new _0x5a361a();
                        break;
                    case 0x7:
                        _0x44bc9b = new _0xbe7dc2();
                        break;
                    default:
                        throw _0x1dea67(0xed2);
                    }
                    this[_0x1dea67(0xec7)](_0x44bc9b, _0xce4287), _0x3d1387[_0x1dea67(0xe7d)] = _0x44bc9b;
                }
                var _0x575179 = _0x39257d[_0x1dea67(0xe85)];
                if (_0x575179) {
                    var _0x580641, _0x427a7b = _0x575179[_0x1dea67(0xe0b)];
                    switch (_0x427a7b[_0x1dea67(0x2cc)]) {
                    case 0x0:
                        var _0x2df39a = _0x427a7b[_0x1dea67(0xd14)];
                        _0x580641 = _0x5c43e7[_0x1dea67(0xd1b)](_0x2df39a ? new _0x3697cd(_0x2df39a[0x0], _0x2df39a[0x1], _0x2df39a[0x2]) : new _0x3697cd(0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x580641 = _0x5c43e7['createByGradient'](this[_0x1dea67(0xed3)](_0x427a7b[_0x1dea67(0xd3a)]), this[_0x1dea67(0xed3)](_0x427a7b['gradientY']), this['_initParticleVelocity'](_0x427a7b[_0x1dea67(0xd3c)]));
                        break;
                    case 0x2:
                        var _0x1815e4 = _0x427a7b[_0x1dea67(0xd15)], _0x25fd3e = _0x427a7b['constantMax'];
                        _0x580641 = _0x5c43e7[_0x1dea67(0xd34)](_0x1815e4 ? new _0x3697cd(_0x1815e4[0x0], _0x1815e4[0x1], _0x1815e4[0x2]) : new _0x3697cd(0x0, 0x0, 0x0), _0x25fd3e ? new _0x3697cd(_0x25fd3e[0x0], _0x25fd3e[0x1], _0x25fd3e[0x2]) : new _0x3697cd(0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x580641 = _0x5c43e7['createByRandomTwoGradient'](this[_0x1dea67(0xed3)](_0x427a7b[_0x1dea67(0xd40)]), this[_0x1dea67(0xed3)](_0x427a7b[_0x1dea67(0xd4d)]), this[_0x1dea67(0xed3)](_0x427a7b[_0x1dea67(0xd4e)]), this[_0x1dea67(0xed3)](_0x427a7b['gradientYMax']), this[_0x1dea67(0xed3)](_0x427a7b['gradientZMin']), this[_0x1dea67(0xed3)](_0x427a7b[_0x1dea67(0xd43)]));
                    }
                    var _0x4d242f = new _0x13760e(_0x580641);
                    this[_0x1dea67(0xec7)](_0x4d242f, _0x575179), _0x3d1387[_0x1dea67(0xe85)] = _0x4d242f;
                }
                var _0x41c7f8 = _0x39257d[_0x1dea67(0xe2f)];
                if (_0x41c7f8) {
                    var _0x561bf9, _0x3c9317 = _0x41c7f8[_0x1dea67(0x46f)];
                    switch (_0x3c9317[_0x1dea67(0x2cc)]) {
                    case 0x0:
                        var _0x128803 = _0x3c9317[_0x1dea67(0xd14)];
                        _0x561bf9 = _0x138396['createByConstant'](_0x128803 ? new _0x5b8e4e(_0x128803[0x0], _0x128803[0x1], _0x128803[0x2], _0x128803[0x3]) : new _0x5b8e4e(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x561bf9 = _0x138396[_0x1dea67(0xd0f)](this[_0x1dea67(0xed4)](_0x3c9317[_0x1dea67(0xd17)]));
                        break;
                    case 0x2:
                        var _0x169b56 = _0x3c9317['constantMin'], _0x57f799 = _0x3c9317[_0x1dea67(0xd16)];
                        _0x561bf9 = _0x138396[_0x1dea67(0xd34)](_0x169b56 ? new _0x5b8e4e(_0x169b56[0x0], _0x169b56[0x1], _0x169b56[0x2], _0x169b56[0x3]) : new _0x5b8e4e(0x0, 0x0, 0x0, 0x0), _0x169b56 ? new _0x5b8e4e(_0x57f799[0x0], _0x57f799[0x1], _0x57f799[0x2], _0x57f799[0x3]) : new _0x5b8e4e(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x561bf9 = _0x138396[_0x1dea67(0xd12)](this[_0x1dea67(0xed4)](_0x3c9317[_0x1dea67(0xd18)]), this[_0x1dea67(0xed4)](_0x3c9317[_0x1dea67(0xd19)]));
                    }
                    var _0x2e1115 = new _0x12356(_0x561bf9);
                    this[_0x1dea67(0xec7)](_0x2e1115, _0x41c7f8), _0x3d1387[_0x1dea67(0xe2f)] = _0x2e1115;
                }
                var _0x175679 = _0x39257d[_0x1dea67(0xe38)];
                if (_0x175679) {
                    var _0x20e2ee, _0x5db860 = _0x175679['size'];
                    switch (_0x5db860['type']) {
                    case 0x0:
                        _0x20e2ee = _0x5db860[_0x1dea67(0xd38)] ? _0x5bbf53[_0x1dea67(0xd33)](this[_0x1dea67(0xed5)](_0x5db860['gradientX']), this[_0x1dea67(0xed5)](_0x5db860[_0x1dea67(0xd3b)]), this['_initParticleSize'](_0x5db860[_0x1dea67(0xd3c)])) : _0x5bbf53['createByGradient'](this['_initParticleSize'](_0x5db860[_0x1dea67(0xd17)]));
                        break;
                    case 0x1:
                        if (_0x5db860[_0x1dea67(0xd38)]) {
                            var _0x152c1d = _0x5db860['constantMinSeparate'], _0x5a91c5 = _0x5db860[_0x1dea67(0xd3f)];
                            _0x20e2ee = _0x5bbf53[_0x1dea67(0xd4c)](_0x152c1d ? new _0x3697cd(_0x152c1d[0x0], _0x152c1d[0x1], _0x152c1d[0x2]) : new _0x3697cd(0x0, 0x0, 0x0), _0x5a91c5 ? new _0x3697cd(_0x5a91c5[0x0], _0x5a91c5[0x1], _0x5a91c5[0x2]) : new _0x3697cd(0x0, 0x0, 0x0));
                        } else
                            _0x20e2ee = _0x5bbf53[_0x1dea67(0xd34)](_0x5db860[_0x1dea67(0xd15)] || 0x0, _0x5db860['constantMax'] || 0x0);
                        break;
                    case 0x2:
                        _0x20e2ee = _0x5db860['separateAxes'] ? _0x5bbf53[_0x1dea67(0xd35)](this['_initParticleSize'](_0x5db860[_0x1dea67(0xd40)]), this[_0x1dea67(0xed5)](_0x5db860['gradientYMin']), this[_0x1dea67(0xed5)](_0x5db860[_0x1dea67(0xd42)]), this[_0x1dea67(0xed5)](_0x5db860['gradientXMax']), this[_0x1dea67(0xed5)](_0x5db860[_0x1dea67(0xd41)]), this[_0x1dea67(0xed5)](_0x5db860[_0x1dea67(0xd43)])) : _0x5bbf53[_0x1dea67(0xd12)](this[_0x1dea67(0xed5)](_0x5db860[_0x1dea67(0xd18)]), this[_0x1dea67(0xed5)](_0x5db860[_0x1dea67(0xd19)]));
                    }
                    var _0x29e09c = new _0x2570df(_0x20e2ee);
                    this[_0x1dea67(0xec7)](_0x29e09c, _0x175679), _0x3d1387[_0x1dea67(0xe38)] = _0x29e09c;
                }
                var _0x15ec20 = _0x39257d[_0x1dea67(0xe95)];
                if (_0x15ec20) {
                    var _0xcc174a, _0x2297cc = _0x15ec20[_0x1dea67(0xd51)];
                    switch (_0x2297cc[_0x1dea67(0x2cc)]) {
                    case 0x0:
                        if (_0x2297cc[_0x1dea67(0xd38)]) {
                            var _0x1bec67 = _0x2297cc[_0x1dea67(0xd39)];
                            _0xcc174a = _0x23370c[_0x1dea67(0xd32)](_0x1bec67 ? new _0x3697cd(_0x1bec67[0x0], _0x1bec67[0x1], _0x1bec67[0x2]) : new _0x3697cd(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0xcc174a = _0x23370c[_0x1dea67(0xd1b)](_0x2297cc[_0x1dea67(0xd14)] || Math['PI'] / 0x4);
                        break;
                    case 0x1:
                        _0xcc174a = _0x2297cc[_0x1dea67(0xd38)] ? _0x23370c[_0x1dea67(0xd33)](this[_0x1dea67(0xed6)](_0x2297cc[_0x1dea67(0xd3a)]), this[_0x1dea67(0xed6)](_0x2297cc[_0x1dea67(0xd3b)]), this[_0x1dea67(0xed6)](_0x2297cc[_0x1dea67(0xd3c)])) : _0x23370c[_0x1dea67(0xd0f)](this[_0x1dea67(0xed6)](_0x2297cc['gradient']));
                        break;
                    case 0x2:
                        if (_0x2297cc['separateAxes']) {
                            var _0xb67073 = _0x2297cc['constantMinSeparate'], _0x12872f = _0x2297cc['constantMaxSeparate'];
                            _0xcc174a = _0x23370c[_0x1dea67(0xd4c)](_0xb67073 ? new _0x3697cd(_0xb67073[0x0], _0xb67073[0x1], _0xb67073[0x2]) : new _0x3697cd(0x0, 0x0, 0x0), _0x12872f ? new _0x3697cd(_0x12872f[0x0], _0x12872f[0x1], _0x12872f[0x2]) : new _0x3697cd(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0xcc174a = _0x23370c[_0x1dea67(0xd34)](_0x2297cc[_0x1dea67(0xd15)] || 0x0, _0x2297cc[_0x1dea67(0xd16)] || Math['PI'] / 0x4);
                        break;
                    case 0x3:
                        _0x2297cc['separateAxes'] || (_0xcc174a = _0x23370c[_0x1dea67(0xd12)](this['_initParticleRotation'](_0x2297cc[_0x1dea67(0xd18)]), this[_0x1dea67(0xed6)](_0x2297cc[_0x1dea67(0xd19)])));
                    }
                    var _0x2455dd = new _0xc99a84(_0xcc174a);
                    this[_0x1dea67(0xec7)](_0x2455dd, _0x15ec20), _0x3d1387[_0x1dea67(0xe95)] = _0x2455dd;
                }
                var _0x2d4d43 = _0x39257d[_0x1dea67(0xe9e)];
                if (_0x2d4d43) {
                    var _0x377386, _0x24ce0b = _0x2d4d43['frame'];
                    switch (_0x24ce0b['type']) {
                    case 0x0:
                        _0x377386 = _0xae37d7[_0x1dea67(0xd1b)](_0x24ce0b[_0x1dea67(0xd14)]);
                        break;
                    case 0x1:
                        _0x377386 = _0xae37d7[_0x1dea67(0xd1f)](this[_0x1dea67(0xed7)](_0x24ce0b[_0x1dea67(0xed8)]));
                        break;
                    case 0x2:
                        _0x377386 = _0xae37d7[_0x1dea67(0xd34)](_0x24ce0b[_0x1dea67(0xd15)], _0x24ce0b['constantMax']);
                        break;
                    case 0x3:
                        _0x377386 = _0xae37d7[_0x1dea67(0xd20)](this['_initParticleFrame'](_0x24ce0b[_0x1dea67(0xed9)]), this['_initParticleFrame'](_0x24ce0b[_0x1dea67(0xeda)]));
                    }
                    var _0x3b7687, _0x43e39e = _0x2d4d43[_0x1dea67(0xd79)];
                    switch (_0x43e39e[_0x1dea67(0x2cc)]) {
                    case 0x0:
                        _0x3b7687 = _0x3e5b1d[_0x1dea67(0xd1b)](_0x43e39e['constant']);
                        break;
                    case 0x1:
                        _0x3b7687 = _0x3e5b1d[_0x1dea67(0xd34)](_0x43e39e['constantMin'], _0x43e39e[_0x1dea67(0xd16)]);
                    }
                    var _0x3d251b = new _0x593b73(_0x377386, _0x3b7687);
                    this['_parseModule'](_0x3d251b, _0x2d4d43), _0x3d1387['textureSheetAnimation'] = _0x3d251b;
                }
            } else
                this['_parseOld'](_0x39257d);
        }
        ['_activeHierarchy'](_0x256415) {
            var _0x1ef048 = _0x6027f5;
            super[_0x1ef048(0xedb)](_0x256415), this[_0x1ef048(0xde6)][_0x1ef048(0xe70)] && this[_0x1ef048(0xde6)]['play']();
        }
        ['_inActiveHierarchy'](_0x37e86b) {
            var _0x303abd = _0x6027f5;
            super['_inActiveHierarchy'](_0x37e86b), this[_0x303abd(0xde6)]['isAlive'] && this[_0x303abd(0xde6)]['simulate'](0x0, !0x0);
        }
        [_0x6027f5(0x345)](_0x13e750, _0x272e2b, _0x30e369) {
            var _0x3ba418 = _0x6027f5, _0x452a20 = _0x13e750, _0xd052c3 = _0x452a20[_0x3ba418(0xeb7)];
            this[_0x3ba418(0xeb7)][_0x3ba418(0x1fc)](_0xd052c3);
            var _0x54d419 = _0x452a20[_0x3ba418(0x5e8)], _0x1390a1 = this['_render'];
            _0x54d419[_0x3ba418(0xb03)] = _0x1390a1[_0x3ba418(0xb03)], _0x54d419[_0x3ba418(0x659)] = _0x1390a1[_0x3ba418(0x659)], _0x54d419[_0x3ba418(0x730)] = _0x1390a1[_0x3ba418(0x730)], _0x54d419[_0x3ba418(0x8d6)] = _0x1390a1[_0x3ba418(0x8d6)], _0x54d419[_0x3ba418(0xddc)] = _0x1390a1[_0x3ba418(0xddc)], _0x54d419[_0x3ba418(0xddd)] = _0x1390a1[_0x3ba418(0xddd)], _0x54d419[_0x3ba418(0xdde)] = _0x1390a1[_0x3ba418(0xdde)], _0x54d419[_0x3ba418(0xcf0)] = _0x1390a1[_0x3ba418(0xcf0)], super['_cloneTo'](_0x13e750, _0x272e2b, _0x30e369);
        }
        [_0x6027f5(0x364)](_0x44c274 = !0x0) {
            var _0x2e5bb6 = _0x6027f5;
            this[_0x2e5bb6(0x5cf)] || (super[_0x2e5bb6(0x364)](_0x44c274), this[_0x2e5bb6(0xeb7)]['destroy'](), this['_particleSystem'] = null);
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x47d536();
        }
        ['_parseOld'](_0x5a29a5) {
            var _0x5188e2 = _0x6027f5;
            const _0x52b7a3 = Math['PI'] / 0xb4;
            var _0xa66fe0, _0x1a2caf, _0x154f33, _0x4a59b3 = this[_0x5188e2(0xea2)], _0x495a28 = _0x5a29a5[_0x5188e2(0x8d5)];
            _0x495a28 && (_0x154f33 = _0x387b86['Loader'][_0x5188e2(0x3b7)](_0x495a28['path'])), _0x4a59b3[_0x5188e2(0xade)] = _0x154f33;
            var _0x1eedf5 = _0x5a29a5[_0x5188e2(0xcec)];
            _0x1eedf5 && (_0x4a59b3[_0x5188e2(0x8d6)] = _0x387b86[_0x5188e2(0x3bd)]['getRes'](_0x1eedf5)), _0x4a59b3[_0x5188e2(0x730)] = _0x5a29a5['renderMode'], _0x4a59b3[_0x5188e2(0xddc)] = _0x5a29a5[_0x5188e2(0xddc)], _0x4a59b3[_0x5188e2(0xddd)] = _0x5a29a5[_0x5188e2(0xddd)], _0x4a59b3[_0x5188e2(0xdde)] = _0x5a29a5['stretchedBillboardLengthScale'], _0x4a59b3[_0x5188e2(0xcf0)] = _0x5a29a5[_0x5188e2(0xcf0)] ? _0x5a29a5[_0x5188e2(0xcf0)] : 0x0;
            var _0x24877a = this[_0x5188e2(0xde6)];
            _0x24877a[_0x5188e2(0xe72)] = _0x5a29a5[_0x5188e2(0xe72)], _0x24877a[_0x5188e2(0x32c)] = _0x5a29a5['duration'], _0x24877a[_0x5188e2(0xe67)] = _0x5a29a5[_0x5188e2(0xe67)], _0x24877a[_0x5188e2(0xe75)] = _0x5a29a5['prewarm'], _0x24877a[_0x5188e2(0xe68)] = _0x5a29a5[_0x5188e2(0xe68)], _0x24877a[_0x5188e2(0xe69)] = _0x5a29a5[_0x5188e2(0xe69)], _0x24877a[_0x5188e2(0xe76)] = _0x5a29a5['startDelayMin'], _0x24877a['startDelayMax'] = _0x5a29a5[_0x5188e2(0xe6a)], _0x24877a[_0x5188e2(0xe41)] = _0x5a29a5[_0x5188e2(0xe41)], _0x24877a[_0x5188e2(0xe83)] = _0x5a29a5[_0x5188e2(0xe83)], _0x24877a[_0x5188e2(0xe43)] = _0x47d536[_0x5188e2(0xedc)](_0x5a29a5['startLifetimeGradient']), _0x24877a[_0x5188e2(0xe44)] = _0x5a29a5['startLifetimeConstantMin'], _0x24877a['startLifetimeConstantMax'] = _0x5a29a5[_0x5188e2(0xe45)], _0x24877a[_0x5188e2(0xe47)] = _0x47d536[_0x5188e2(0xedc)](_0x5a29a5['startLifetimeGradientMin']), _0x24877a[_0x5188e2(0xe48)] = _0x47d536[_0x5188e2(0xedc)](_0x5a29a5[_0x5188e2(0xedd)]), _0x24877a[_0x5188e2(0xeb3)] = _0x5a29a5['startSpeedType'], _0x24877a['startSpeedConstant'] = _0x5a29a5['startSpeedConstant'], _0x24877a['startSpeedConstantMin'] = _0x5a29a5[_0x5188e2(0xe6c)], _0x24877a[_0x5188e2(0xe6d)] = _0x5a29a5[_0x5188e2(0xe6d)], _0x24877a[_0x5188e2(0xe34)] = _0x5a29a5[_0x5188e2(0xe34)], _0x24877a[_0x5188e2(0xe31)] = _0x5a29a5[_0x5188e2(0xe31)], _0x24877a[_0x5188e2(0xe33)] = _0x5a29a5['startSizeConstant'];
            var _0xef4501 = _0x5a29a5[_0x5188e2(0xe32)], _0x3a664f = _0x24877a['startSizeConstantSeparate'];
            _0x3a664f['x'] = _0xef4501[0x0], _0x3a664f['y'] = _0xef4501[0x1], _0x3a664f['z'] = _0xef4501[0x2], _0x24877a[_0x5188e2(0xe36)] = _0x5a29a5[_0x5188e2(0xe36)], _0x24877a[_0x5188e2(0xe37)] = _0x5a29a5[_0x5188e2(0xe37)];
            var _0x31e85e = _0x5a29a5['startSizeConstantMinSeparate'], _0x251fef = _0x24877a[_0x5188e2(0xe6e)];
            _0x251fef['x'] = _0x31e85e[0x0], _0x251fef['y'] = _0x31e85e[0x1], _0x251fef['z'] = _0x31e85e[0x2];
            var _0x2314aa = _0x5a29a5[_0x5188e2(0xe35)], _0x133a44 = _0x24877a[_0x5188e2(0xe35)];
            _0x133a44['x'] = _0x2314aa[0x0], _0x133a44['y'] = _0x2314aa[0x1], _0x133a44['z'] = _0x2314aa[0x2], _0x24877a[_0x5188e2(0xdf1)] = _0x5a29a5['threeDStartRotation'], _0x24877a[_0x5188e2(0xe39)] = _0x5a29a5[_0x5188e2(0xe39)], _0x24877a[_0x5188e2(0xe3d)] = _0x5a29a5[_0x5188e2(0xe3d)] * _0x52b7a3;
            var _0x1ec278 = _0x5a29a5[_0x5188e2(0xe3a)], _0x281efa = _0x24877a[_0x5188e2(0xe3a)];
            _0x281efa['x'] = _0x1ec278[0x0] * _0x52b7a3, _0x281efa['y'] = _0x1ec278[0x1] * _0x52b7a3, _0x281efa['z'] = _0x1ec278[0x2] * _0x52b7a3, _0x24877a[_0x5188e2(0xe40)] = _0x5a29a5[_0x5188e2(0xe40)] * _0x52b7a3, _0x24877a['startRotationConstantMax'] = _0x5a29a5[_0x5188e2(0xe3f)] * _0x52b7a3;
            var _0x304925 = _0x5a29a5[_0x5188e2(0xe3e)], _0xb0c103 = _0x24877a['startRotationConstantMinSeparate'];
            _0xb0c103['x'] = _0x304925[0x0] * _0x52b7a3, _0xb0c103['y'] = _0x304925[0x1] * _0x52b7a3, _0xb0c103['z'] = _0x304925[0x2] * _0x52b7a3;
            var _0x4977f9 = _0x5a29a5[_0x5188e2(0xe6f)], _0x46a683 = _0x24877a[_0x5188e2(0xe6f)];
            _0x46a683['x'] = _0x4977f9[0x0] * _0x52b7a3, _0x46a683['y'] = _0x4977f9[0x1] * _0x52b7a3, _0x46a683['z'] = _0x4977f9[0x2] * _0x52b7a3, _0x24877a[_0x5188e2(0xe3b)] = _0x5a29a5['randomizeRotationDirection'], _0x24877a[_0x5188e2(0xe2a)] = _0x5a29a5['startColorType'];
            var _0x4973d5 = _0x5a29a5[_0x5188e2(0xe2b)], _0xe315db = _0x24877a[_0x5188e2(0xe2b)];
            _0xe315db['x'] = _0x4973d5[0x0], _0xe315db['y'] = _0x4973d5[0x1], _0xe315db['z'] = _0x4973d5[0x2], _0xe315db['w'] = _0x4973d5[0x3];
            var _0x589752 = _0x5a29a5[_0x5188e2(0xe2d)], _0x339805 = _0x24877a[_0x5188e2(0xe2d)];
            _0x339805['x'] = _0x589752[0x0], _0x339805['y'] = _0x589752[0x1], _0x339805['z'] = _0x589752[0x2], _0x339805['w'] = _0x589752[0x3];
            var _0xc1492c = _0x5a29a5['startColorConstantMax'], _0x232c41 = _0x24877a[_0x5188e2(0xe2e)];
            _0x232c41['x'] = _0xc1492c[0x0], _0x232c41['y'] = _0xc1492c[0x1], _0x232c41['z'] = _0xc1492c[0x2], _0x232c41['w'] = _0xc1492c[0x3], _0x24877a[_0x5188e2(0xdeb)] = _0x5a29a5[_0x5188e2(0xdeb)], _0x24877a['simulationSpace'] = _0x5a29a5[_0x5188e2(0xded)], void 0x0 !== _0x5a29a5['simulationSpeed'] && (_0x24877a[_0x5188e2(0xede)] = _0x5a29a5['simulationSpeed']), _0x24877a[_0x5188e2(0xdef)] = _0x5a29a5[_0x5188e2(0xdef)], _0x24877a[_0x5188e2(0xe70)] = _0x5a29a5['playOnAwake'], _0x24877a[_0x5188e2(0xe7b)] = _0x5a29a5['maxParticles'];
            var _0x166463 = _0x5a29a5['autoRandomSeed'];
            null != _0x166463 && (_0x24877a['autoRandomSeed'] = _0x166463);
            var _0x391521 = _0x5a29a5[_0x5188e2(0xe71)];
            null != _0x391521 && (_0x24877a[_0x5188e2(0xe71)][0x0] = _0x391521);
            var _0x51a80d = _0x5a29a5['emission'], _0x2aa103 = _0x24877a['emission'];
            if (_0x51a80d) {
                _0x2aa103[_0x5188e2(0xe1f)] = _0x51a80d[_0x5188e2(0xe1f)];
                var _0x43249e = _0x51a80d[_0x5188e2(0xece)];
                if (_0x43249e)
                    for (_0xa66fe0 = 0x0, _0x1a2caf = _0x43249e['length']; _0xa66fe0 < _0x1a2caf; _0xa66fe0++) {
                        var _0x3c836e = _0x43249e[_0xa66fe0];
                        _0x2aa103[_0x5188e2(0xe22)](new _0xe35791(_0x3c836e[_0x5188e2(0x273)], _0x3c836e[_0x5188e2(0x212)], _0x3c836e[_0x5188e2(0x20c)]));
                    }
                _0x2aa103['enable'] = _0x51a80d[_0x5188e2(0x659)];
            } else
                _0x2aa103['enable'] = !0x1;
            var _0x46c864 = _0x5a29a5[_0x5188e2(0xe7d)];
            if (_0x46c864) {
                var _0x3d03b8;
                switch (_0x46c864[_0x5188e2(0xd67)]) {
                case 0x0:
                    var _0x316440;
                    _0x3d03b8 = _0x316440 = new _0x47a2d1(), _0x316440[_0x5188e2(0x882)] = _0x46c864[_0x5188e2(0xedf)], _0x316440[_0x5188e2(0xd71)] = _0x46c864['sphereEmitFromShell'], _0x316440['randomDirection'] = _0x46c864[_0x5188e2(0xee0)];
                    break;
                case 0x1:
                    var _0x47c500;
                    _0x3d03b8 = _0x47c500 = new _0x4d35b2(), _0x47c500[_0x5188e2(0x882)] = _0x46c864[_0x5188e2(0xee1)], _0x47c500['emitFromShell'] = _0x46c864[_0x5188e2(0xee2)], _0x47c500['randomDirection'] = _0x46c864[_0x5188e2(0xee3)];
                    break;
                case 0x2:
                    var _0x1f62ca;
                    _0x3d03b8 = _0x1f62ca = new _0x49c361(), _0x1f62ca[_0x5188e2(0xd6d)] = _0x46c864['coneAngle'] * _0x52b7a3, _0x1f62ca['radius'] = _0x46c864[_0x5188e2(0xee4)], _0x1f62ca[_0x5188e2(0x205)] = _0x46c864['coneLength'], _0x1f62ca[_0x5188e2(0xd6c)] = _0x46c864['coneEmitType'], _0x1f62ca[_0x5188e2(0xd59)] = _0x46c864[_0x5188e2(0xee5)];
                    break;
                case 0x3:
                    var _0x47ca91;
                    _0x3d03b8 = _0x47ca91 = new _0x5a361a(), _0x47ca91['x'] = _0x46c864['boxX'], _0x47ca91['y'] = _0x46c864['boxY'], _0x47ca91['z'] = _0x46c864[_0x5188e2(0xee6)], _0x47ca91['randomDirection'] = _0x46c864['boxRandomDirection'];
                    break;
                case 0x7:
                    var _0x29d38c;
                    _0x3d03b8 = _0x29d38c = new _0xbe7dc2(), _0x29d38c['radius'] = _0x46c864['circleRadius'], _0x29d38c[_0x5188e2(0xd6a)] = _0x46c864[_0x5188e2(0xee7)] * _0x52b7a3, _0x29d38c[_0x5188e2(0xd68)] = _0x46c864['circleEmitFromEdge'], _0x29d38c[_0x5188e2(0xd59)] = _0x46c864[_0x5188e2(0xee8)];
                    break;
                default:
                    var _0x3c8b4d;
                    _0x3d03b8 = _0x3c8b4d = new _0xbe7dc2(), _0x3c8b4d[_0x5188e2(0x882)] = _0x46c864[_0x5188e2(0xee9)], _0x3c8b4d[_0x5188e2(0xd6a)] = _0x46c864[_0x5188e2(0xee7)] * _0x52b7a3, _0x3c8b4d[_0x5188e2(0xd68)] = _0x46c864[_0x5188e2(0xeea)], _0x3c8b4d[_0x5188e2(0xd59)] = _0x46c864[_0x5188e2(0xee8)];
                }
                _0x3d03b8[_0x5188e2(0x659)] = _0x46c864[_0x5188e2(0x659)], _0x24877a[_0x5188e2(0xe7d)] = _0x3d03b8;
            }
            var _0x12d749 = _0x5a29a5['velocityOverLifetime'];
            if (_0x12d749) {
                var _0x2f09c7, _0x1bce3d = _0x12d749['velocity'];
                switch (_0x1bce3d[_0x5188e2(0x2cc)]) {
                case 0x0:
                    var _0x254d70 = _0x1bce3d['constant'];
                    _0x2f09c7 = _0x5c43e7[_0x5188e2(0xd1b)](new _0x3697cd(_0x254d70[0x0], _0x254d70[0x1], _0x254d70[0x2]));
                    break;
                case 0x1:
                    _0x2f09c7 = _0x5c43e7[_0x5188e2(0xd0f)](this['_initParticleVelocity'](_0x1bce3d[_0x5188e2(0xd3a)]), this[_0x5188e2(0xed3)](_0x1bce3d[_0x5188e2(0xd3b)]), this[_0x5188e2(0xed3)](_0x1bce3d['gradientZ']));
                    break;
                case 0x2:
                    var _0x5c0863 = _0x1bce3d[_0x5188e2(0xd15)], _0x5bea74 = _0x1bce3d[_0x5188e2(0xd16)];
                    _0x2f09c7 = _0x5c43e7[_0x5188e2(0xd34)](new _0x3697cd(_0x5c0863[0x0], _0x5c0863[0x1], _0x5c0863[0x2]), new _0x3697cd(_0x5bea74[0x0], _0x5bea74[0x1], _0x5bea74[0x2]));
                    break;
                case 0x3:
                    _0x2f09c7 = _0x5c43e7[_0x5188e2(0xd12)](this[_0x5188e2(0xed3)](_0x1bce3d[_0x5188e2(0xd40)]), this[_0x5188e2(0xed3)](_0x1bce3d[_0x5188e2(0xd4d)]), this['_initParticleVelocity'](_0x1bce3d['gradientYMin']), this[_0x5188e2(0xed3)](_0x1bce3d[_0x5188e2(0xd41)]), this[_0x5188e2(0xed3)](_0x1bce3d['gradientZMin']), this[_0x5188e2(0xed3)](_0x1bce3d[_0x5188e2(0xd43)]));
                }
                var _0x58494d = new _0x13760e(_0x2f09c7);
                _0x58494d[_0x5188e2(0xd7b)] = _0x12d749[_0x5188e2(0xd7b)], _0x58494d[_0x5188e2(0x659)] = _0x12d749[_0x5188e2(0x659)], _0x24877a[_0x5188e2(0xe85)] = _0x58494d;
            }
            var _0x5c3f2c = _0x5a29a5[_0x5188e2(0xe2f)];
            if (_0x5c3f2c) {
                var _0xd486cb, _0x1d4051 = _0x5c3f2c[_0x5188e2(0x46f)];
                switch (_0x1d4051[_0x5188e2(0x2cc)]) {
                case 0x0:
                    var _0x193300 = _0x1d4051[_0x5188e2(0xd14)];
                    _0xd486cb = _0x138396['createByConstant'](new _0x5b8e4e(_0x193300[0x0], _0x193300[0x1], _0x193300[0x2], _0x193300[0x3]));
                    break;
                case 0x1:
                    _0xd486cb = _0x138396[_0x5188e2(0xd0f)](this[_0x5188e2(0xed4)](_0x1d4051[_0x5188e2(0xd17)]));
                    break;
                case 0x2:
                    var _0x20c60b = _0x1d4051[_0x5188e2(0xd15)], _0x57a6e6 = _0x1d4051[_0x5188e2(0xd16)];
                    _0xd486cb = _0x138396['createByRandomTwoConstant'](new _0x5b8e4e(_0x20c60b[0x0], _0x20c60b[0x1], _0x20c60b[0x2], _0x20c60b[0x3]), new _0x5b8e4e(_0x57a6e6[0x0], _0x57a6e6[0x1], _0x57a6e6[0x2], _0x57a6e6[0x3]));
                    break;
                case 0x3:
                    _0xd486cb = _0x138396['createByRandomTwoGradient'](this[_0x5188e2(0xed4)](_0x1d4051['gradientMin']), this[_0x5188e2(0xed4)](_0x1d4051[_0x5188e2(0xd19)]));
                }
                var _0xe6bbf0 = new _0x12356(_0xd486cb);
                _0xe6bbf0[_0x5188e2(0x659)] = _0x5c3f2c[_0x5188e2(0x659)], _0x24877a[_0x5188e2(0xe2f)] = _0xe6bbf0;
            }
            var _0xc7c6ba = _0x5a29a5['sizeOverLifetime'];
            if (_0xc7c6ba) {
                var _0x7877b3, _0x5b64e8 = _0xc7c6ba[_0x5188e2(0x2a7)];
                switch (_0x5b64e8[_0x5188e2(0x2cc)]) {
                case 0x0:
                    _0x7877b3 = _0x5b64e8['separateAxes'] ? _0x5bbf53['createByGradientSeparate'](this[_0x5188e2(0xed5)](_0x5b64e8['gradientX']), this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd3b)]), this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd3c)])) : _0x5bbf53['createByGradient'](this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd17)]));
                    break;
                case 0x1:
                    if (_0x5b64e8[_0x5188e2(0xd38)]) {
                        var _0x7f6fb = _0x5b64e8['constantMinSeparate'], _0x1ba5bd = _0x5b64e8[_0x5188e2(0xd3f)];
                        _0x7877b3 = _0x5bbf53['createByRandomTwoConstantSeparate'](new _0x3697cd(_0x7f6fb[0x0], _0x7f6fb[0x1], _0x7f6fb[0x2]), new _0x3697cd(_0x1ba5bd[0x0], _0x1ba5bd[0x1], _0x1ba5bd[0x2]));
                    } else
                        _0x7877b3 = _0x5bbf53[_0x5188e2(0xd34)](_0x5b64e8[_0x5188e2(0xd15)], _0x5b64e8[_0x5188e2(0xd16)]);
                    break;
                case 0x2:
                    _0x7877b3 = _0x5b64e8[_0x5188e2(0xd38)] ? _0x5bbf53['createByRandomTwoGradientSeparate'](this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd40)]), this['_initParticleSize'](_0x5b64e8[_0x5188e2(0xd4e)]), this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd42)]), this[_0x5188e2(0xed5)](_0x5b64e8['gradientXMax']), this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd41)]), this[_0x5188e2(0xed5)](_0x5b64e8['gradientZMax'])) : _0x5bbf53[_0x5188e2(0xd12)](this[_0x5188e2(0xed5)](_0x5b64e8['gradientMin']), this[_0x5188e2(0xed5)](_0x5b64e8[_0x5188e2(0xd19)]));
                }
                var _0x433809 = new _0x2570df(_0x7877b3);
                _0x433809[_0x5188e2(0x659)] = _0xc7c6ba['enable'], _0x24877a[_0x5188e2(0xe38)] = _0x433809;
            }
            var _0x211538 = _0x5a29a5[_0x5188e2(0xe95)];
            if (_0x211538) {
                var _0x207a3b, _0x48bae2 = _0x211538[_0x5188e2(0xd51)];
                switch (_0x48bae2[_0x5188e2(0x2cc)]) {
                case 0x0:
                    if (_0x48bae2[_0x5188e2(0xd38)]) {
                        var _0x12eb1a = _0x48bae2[_0x5188e2(0xd39)];
                        _0x207a3b = _0x23370c['createByConstantSeparate'](new _0x3697cd(_0x12eb1a[0x0] * _0x52b7a3, _0x12eb1a[0x1] * _0x52b7a3, _0x12eb1a[0x2] * _0x52b7a3));
                    } else
                        _0x207a3b = _0x23370c[_0x5188e2(0xd1b)](_0x48bae2[_0x5188e2(0xd14)] * _0x52b7a3);
                    break;
                case 0x1:
                    _0x207a3b = _0x48bae2[_0x5188e2(0xd38)] ? _0x23370c[_0x5188e2(0xd33)](this['_initParticleRotation'](_0x48bae2[_0x5188e2(0xd3a)]), this[_0x5188e2(0xed6)](_0x48bae2[_0x5188e2(0xd3b)]), this[_0x5188e2(0xed6)](_0x48bae2['gradientZ'])) : _0x23370c[_0x5188e2(0xd0f)](this[_0x5188e2(0xed6)](_0x48bae2[_0x5188e2(0xd17)]));
                    break;
                case 0x2:
                    if (_0x48bae2[_0x5188e2(0xd38)]) {
                        var _0x5dd419 = _0x48bae2[_0x5188e2(0xd3e)], _0xb7c61d = _0x48bae2[_0x5188e2(0xd3f)];
                        _0x207a3b = _0x23370c['createByRandomTwoConstantSeparate'](new _0x3697cd(_0x5dd419[0x0] * _0x52b7a3, _0x5dd419[0x1] * _0x52b7a3, _0x5dd419[0x2] * _0x52b7a3), new _0x3697cd(_0xb7c61d[0x0] * _0x52b7a3, _0xb7c61d[0x1] * _0x52b7a3, _0xb7c61d[0x2] * _0x52b7a3));
                    } else
                        _0x207a3b = _0x23370c[_0x5188e2(0xd34)](_0x48bae2['constantMin'] * _0x52b7a3, _0x48bae2[_0x5188e2(0xd16)] * _0x52b7a3);
                    break;
                case 0x3:
                    _0x48bae2[_0x5188e2(0xd38)] || (_0x207a3b = _0x23370c[_0x5188e2(0xd12)](this['_initParticleRotation'](_0x48bae2[_0x5188e2(0xd18)]), this['_initParticleRotation'](_0x48bae2[_0x5188e2(0xd19)])));
                }
                var _0xe9e611 = new _0xc99a84(_0x207a3b);
                _0xe9e611[_0x5188e2(0x659)] = _0x211538['enable'], _0x24877a['rotationOverLifetime'] = _0xe9e611;
            }
            var _0xa1ea8a = _0x5a29a5[_0x5188e2(0xe9e)];
            if (_0xa1ea8a) {
                var _0x22ead0, _0x21baad = _0xa1ea8a[_0x5188e2(0xd78)];
                switch (_0x21baad[_0x5188e2(0x2cc)]) {
                case 0x0:
                    _0x22ead0 = _0xae37d7[_0x5188e2(0xd1b)](_0x21baad[_0x5188e2(0xd14)]);
                    break;
                case 0x1:
                    _0x22ead0 = _0xae37d7['createByOverTime'](this['_initParticleFrame'](_0x21baad[_0x5188e2(0xed8)]));
                    break;
                case 0x2:
                    _0x22ead0 = _0xae37d7['createByRandomTwoConstant'](_0x21baad['constantMin'], _0x21baad[_0x5188e2(0xd16)]);
                    break;
                case 0x3:
                    _0x22ead0 = _0xae37d7[_0x5188e2(0xd20)](this[_0x5188e2(0xed7)](_0x21baad['overTimeMin']), this['_initParticleFrame'](_0x21baad['overTimeMax']));
                }
                var _0x28a4d2, _0x131859 = _0xa1ea8a['startFrame'];
                switch (_0x131859[_0x5188e2(0x2cc)]) {
                case 0x0:
                    _0x28a4d2 = _0x3e5b1d[_0x5188e2(0xd1b)](_0x131859[_0x5188e2(0xd14)]);
                    break;
                case 0x1:
                    _0x28a4d2 = _0x3e5b1d['createByRandomTwoConstant'](_0x131859['constantMin'], _0x131859[_0x5188e2(0xd16)]);
                }
                var _0x4a0d1b = new _0x593b73(_0x22ead0, _0x28a4d2);
                _0x4a0d1b[_0x5188e2(0x659)] = _0xa1ea8a[_0x5188e2(0x659)];
                var _0x553dde = _0xa1ea8a[_0x5188e2(0xd76)];
                _0x4a0d1b[_0x5188e2(0xd76)] = new _0x30a72c(_0x553dde[0x0], _0x553dde[0x1]), _0x4a0d1b['type'] = _0xa1ea8a[_0x5188e2(0x2cc)], _0x4a0d1b[_0x5188e2(0xd72)] = _0xa1ea8a[_0x5188e2(0xd72)];
                var _0x411d01 = _0xa1ea8a[_0x5188e2(0xd73)];
                void 0x0 !== _0x411d01 && (_0x4a0d1b[_0x5188e2(0xd73)] = _0x411d01), _0x4a0d1b[_0x5188e2(0xd74)] = _0xa1ea8a[_0x5188e2(0xd74)], _0x24877a[_0x5188e2(0xe9e)] = _0x4a0d1b;
            }
        }
        [_0x6027f5(0xed4)](_0x1920de) {
            var _0x50f474 = _0x6027f5, _0x50e973 = new _0x1d08e8(0x4, 0x4);
            if (_0x1920de) {
                var _0x160456, _0x536e1d, _0x23dc29 = _0x1920de['alphas'];
                if (_0x23dc29)
                    for (_0x160456 = 0x0, _0x536e1d = _0x23dc29[_0x50f474(0x205)]; _0x160456 < _0x536e1d; _0x160456++) {
                        0x3 == _0x160456 && _0x536e1d > 0x4 && (_0x160456 = _0x536e1d - 0x1, console[_0x50f474(0x25a)](_0x50f474(0xeeb)));
                        var _0x1f42dc = _0x23dc29[_0x160456];
                        _0x50e973[_0x50f474(0xcfe)](_0x1f42dc[_0x50f474(0xeec)], _0x1f42dc[_0x50f474(0x2a1)]);
                    }
                else
                    _0x50e973[_0x50f474(0xcfe)](0x0, 0x1), _0x50e973['addColorAlpha'](0x1, 0x1);
                var _0x5a6d78 = _0x1920de['rgbs'];
                if (_0x5a6d78)
                    for (_0x160456 = 0x0, _0x536e1d = _0x5a6d78[_0x50f474(0x205)]; _0x160456 < _0x536e1d; _0x160456++) {
                        0x3 == _0x160456 && _0x536e1d > 0x4 && (_0x160456 = _0x536e1d - 0x1, console[_0x50f474(0x25a)](_0x50f474(0xeed)));
                        var _0x3c5496 = _0x5a6d78[_0x160456], _0x1de7e7 = _0x3c5496['value'];
                        _0x50e973[_0x50f474(0xcfc)](_0x3c5496[_0x50f474(0xeec)], new _0x441c6d(_0x1de7e7[0x0], _0x1de7e7[0x1], _0x1de7e7[0x2], 0x1));
                    }
                else
                    _0x50e973[_0x50f474(0xcfc)](0x0, new _0x441c6d(0x1, 0x1, 0x1, 0x1)), _0x50e973[_0x50f474(0xcfc)](0x1, new _0x441c6d(0x1, 0x1, 0x1, 0x1));
            } else
                _0x50e973[_0x50f474(0xcfe)](0x0, 0x1), _0x50e973[_0x50f474(0xcfe)](0x1, 0x1), _0x50e973[_0x50f474(0xcfc)](0x0, new _0x441c6d(0x1, 0x1, 0x1, 0x1)), _0x50e973['addColorRGB'](0x1, new _0x441c6d(0x1, 0x1, 0x1, 0x1));
            return _0x50e973;
        }
        [_0x6027f5(0xed7)](_0x5123c2) {
            var _0x35c903 = _0x6027f5, _0x566c79 = new _0x5da7ff();
            if (_0x5123c2)
                for (var _0x3e54c7 = _0x5123c2[_0x35c903(0xeee)], _0x1cf85c = 0x0, _0x4fce65 = _0x3e54c7[_0x35c903(0x205)]; _0x1cf85c < _0x4fce65; _0x1cf85c++) {
                    var _0x46a816 = _0x3e54c7[_0x1cf85c];
                    _0x566c79[_0x35c903(0x207)](_0x46a816[_0x35c903(0xeec)], _0x46a816[_0x35c903(0x2a1)]);
                }
            else
                _0x566c79[_0x35c903(0x207)](0x0, 0x0), _0x566c79[_0x35c903(0x207)](0x1, 0x1);
            return _0x566c79;
        }
        static [_0x6027f5(0xedc)](_0x5e0263) {
            var _0x4afbb6 = _0x6027f5;
            for (var _0x37502f = new _0x239637(), _0x2baa83 = _0x5e0263['startLifetimes'], _0x55e50d = 0x0, _0x32262b = _0x2baa83[_0x4afbb6(0x205)]; _0x55e50d < _0x32262b; _0x55e50d++) {
                var _0x238b1e = _0x2baa83[_0x55e50d];
                _0x37502f[_0x4afbb6(0x207)](_0x238b1e[_0x4afbb6(0xeec)], _0x238b1e[_0x4afbb6(0x2a1)]);
            }
            return _0x37502f;
        }
        ['_initParticleVelocity'](_0x195b7a) {
            var _0x5e18b6 = _0x6027f5;
            for (var _0x3d8b90 = new _0x239637(), _0xd49cb3 = _0x195b7a['velocitys'], _0xc3e856 = 0x0, _0x37fbf9 = _0xd49cb3[_0x5e18b6(0x205)]; _0xc3e856 < _0x37fbf9; _0xc3e856++) {
                var _0x2d4d48 = _0xd49cb3[_0xc3e856];
                _0x3d8b90[_0x5e18b6(0x207)](_0x2d4d48[_0x5e18b6(0xeec)], _0x2d4d48[_0x5e18b6(0x2a1)]);
            }
            return _0x3d8b90;
        }
        [_0x6027f5(0xed5)](_0xff7f8d) {
            var _0x48cba9 = _0x6027f5, _0x3a14ab = new _0x239637();
            if (_0xff7f8d)
                for (var _0x23db92 = _0xff7f8d['sizes'], _0x47efb2 = 0x0, _0x3b0c5f = _0x23db92[_0x48cba9(0x205)]; _0x47efb2 < _0x3b0c5f; _0x47efb2++) {
                    var _0x51de94 = _0x23db92[_0x47efb2];
                    _0x3a14ab[_0x48cba9(0x207)](_0x51de94[_0x48cba9(0xeec)], _0x51de94['value']);
                }
            else
                _0x3a14ab[_0x48cba9(0x207)](0x0, 0x0), _0x3a14ab[_0x48cba9(0x207)](0x1, 0x1);
            return _0x3a14ab;
        }
        [_0x6027f5(0xed6)](_0x3020dd) {
            var _0x393649 = _0x6027f5;
            for (var _0x782ab7 = new _0x239637(), _0x33e816 = _0x3020dd[_0x393649(0xeef)], _0xf92995 = 0x0, _0x88d904 = _0x33e816[_0x393649(0x205)]; _0xf92995 < _0x88d904; _0xf92995++) {
                var _0x3b97e4 = _0x33e816[_0xf92995];
                _0x782ab7[_0x393649(0x207)](_0x3b97e4[_0x393649(0xeec)], _0x3b97e4[_0x393649(0x2a1)] / 0xb4 * Math['PI']);
            }
            return _0x782ab7;
        }
    }
    class _0x4cc24a {
    }
    class _0x357af4 extends _0x5b1dcc {
        constructor(_0x3f4e96) {
            var _0x175fac = _0x6027f5;
            super(_0x3f4e96), this[_0x175fac(0xef0)] = [], this[_0x175fac(0xef1)] = [], this[_0x175fac(0xef2)] = new _0xf16d64(_0x3697cd['_ZERO'], _0x3697cd[_0x175fac(0x21b)]), this[_0x175fac(0xef3)] = [];
        }
        get ['localBounds']() {
            var _0x581a59 = _0x6027f5;
            return this[_0x581a59(0xef2)];
        }
        set [_0x6027f5(0xef4)](_0x42c44a) {
            var _0x16485b = _0x6027f5;
            this[_0x16485b(0xef2)] = _0x42c44a;
        }
        get [_0x6027f5(0xef5)]() {
            var _0x180aeb = _0x6027f5;
            return this[_0x180aeb(0xef6)];
        }
        set ['rootBone'](_0x7aa044) {
            var _0x282ce0 = _0x6027f5;
            this['_cacheRootBone'] != _0x7aa044 && (this[_0x282ce0(0xef6)] ? this[_0x282ce0(0xef6)]['transform']['off'](_0x387b86['Event']['TRANSFORM_CHANGED'], this, this['_onWorldMatNeedChange']) : this[_0x282ce0(0x3dc)][_0x282ce0(0x3d6)][_0x282ce0(0x8fb)](_0x387b86[_0x282ce0(0x5b1)][_0x282ce0(0x5ae)], this, this[_0x282ce0(0xafd)]), _0x7aa044 ? _0x7aa044[_0x282ce0(0x3d6)]['on'](_0x387b86[_0x282ce0(0x5b1)][_0x282ce0(0x5ae)], this, this[_0x282ce0(0xafd)]) : this[_0x282ce0(0x3dc)][_0x282ce0(0x3d6)]['on'](_0x387b86[_0x282ce0(0x5b1)][_0x282ce0(0x5ae)], this, this['_onWorldMatNeedChange']), this[_0x282ce0(0xef6)] = _0x7aa044, this[_0x282ce0(0xafd)](_0xaeafd1[_0x282ce0(0x586)] | _0xaeafd1[_0x282ce0(0x587)] | _0xaeafd1[_0x282ce0(0x589)]));
        }
        get [_0x6027f5(0xef7)]() {
            var _0x5b478e = _0x6027f5;
            return this[_0x5b478e(0xef0)];
        }
        [_0x6027f5(0xef8)]() {
            var _0x574a90 = _0x6027f5;
            if (this[_0x574a90(0xef9)] && this[_0x574a90(0xefa)] || this[_0x574a90(0xef9)] && !this['_cacheAvatar']) {
                for (var _0x3c8644 = this['_cacheMesh']['_inverseBindPoses'], _0x2bac1c = this['_cacheMesh'][_0x574a90(0xefb)], _0x51e553 = 0x0, _0x32834d = this[_0x574a90(0xef9)]['subMeshCount']; _0x51e553 < _0x32834d; _0x51e553++)
                    for (var _0x5b9350 = this[_0x574a90(0xef9)][_0x574a90(0xcc8)](_0x51e553)[_0x574a90(0xefc)], _0x329f15 = this[_0x574a90(0xefd)][_0x51e553], _0x369ac2 = 0x0, _0x5bf309 = _0x5b9350['length']; _0x369ac2 < _0x5bf309; _0x369ac2++) {
                        var _0x1cdc7a = _0x5b9350[_0x369ac2];
                        this['_computeSubSkinnedData'](_0x3c8644, _0x1cdc7a, _0x329f15[_0x369ac2], _0x2bac1c);
                    }
            }
        }
        [_0x6027f5(0xefe)](_0x3ced5d, _0x51b4f0, _0x151c3c, _0x634e39) {
            var _0x344fa1 = _0x6027f5;
            for (var _0x450a10 = 0x0, _0x3ae103 = _0x51b4f0[_0x344fa1(0x205)]; _0x450a10 < _0x3ae103; _0x450a10++) {
                var _0x2a555e = _0x51b4f0[_0x450a10];
                if (this['_skinnedDataLoopMarks'][_0x2a555e] === _0x387b86['Stat'][_0x344fa1(0x815)]) {
                    for (var _0x7d7901 = _0x634e39[_0x2a555e], _0x54e51c = this[_0x344fa1(0xefd)][_0x7d7901[_0x344fa1(0xeff)]][_0x7d7901[_0x344fa1(0xf00)]], _0x3227dc = 0x10 * _0x7d7901['batchBoneIndex'], _0x27e770 = 0x10 * _0x450a10, _0x4c0bf7 = 0x0; _0x4c0bf7 < 0x10; _0x4c0bf7++)
                        _0x151c3c[_0x27e770 + _0x4c0bf7] = _0x54e51c[_0x3227dc + _0x4c0bf7];
                } else
                    this[_0x344fa1(0xefa)] ? _0x3acd08[_0x344fa1(0x2fb)](this[_0x344fa1(0xef3)][_0x2a555e][_0x344fa1(0x3d6)][_0x344fa1(0x3d9)](), _0x3ced5d[_0x2a555e][_0x344fa1(0x1fe)], 0x0, _0x151c3c, 0x10 * _0x450a10) : _0x3acd08['_mulMatrixArray'](this['_bones'][_0x2a555e][_0x344fa1(0x3d6)]['worldMatrix'][_0x344fa1(0x1fe)], _0x3ced5d[_0x2a555e]['elements'], 0x0, _0x151c3c, 0x10 * _0x450a10), this['_skinnedDataLoopMarks'][_0x2a555e] = _0x387b86[_0x344fa1(0x4dc)][_0x344fa1(0x815)];
            }
        }
        ['_onWorldMatNeedChange'](_0x15b5f7) {
            var _0x2a173d = _0x6027f5;
            this[_0x2a173d(0xb06)] = !0x0, this['_octreeNode'] && (this['_cacheAvatar'] ? -0x1 === this[_0x2a173d(0xafb)] && this[_0x2a173d(0xb0d)][_0x2a173d(0x821)][_0x2a173d(0xb19)](this) : (_0x15b5f7 &= _0xaeafd1[_0x2a173d(0x586)] | _0xaeafd1[_0x2a173d(0x587)] | _0xaeafd1[_0x2a173d(0x589)]) && -0x1 === this[_0x2a173d(0xafb)] && this['_octreeNode'][_0x2a173d(0x821)][_0x2a173d(0xb19)](this));
        }
        [_0x6027f5(0xcc7)]() {
            return new _0x50feff();
        }
        ['_onMeshChange'](_0x3fde4a) {
            var _0x448f95 = _0x6027f5;
            super[_0x448f95(0xcd3)](_0x3fde4a), this[_0x448f95(0xef9)] = _0x3fde4a;
            var _0x4e6caf = _0x3fde4a[_0x448f95(0xad6)];
            this[_0x448f95(0xefd)] = [], this[_0x448f95(0xef1)]['length'] = _0x3fde4a[_0x448f95(0xf01)][_0x448f95(0x205)];
            for (var _0xf7bcef = 0x0; _0xf7bcef < _0x4e6caf; _0xf7bcef++)
                for (var _0x3fe4da = _0x3fde4a['getSubMesh'](_0xf7bcef)[_0x448f95(0xefc)], _0x2b48fe = _0x3fe4da[_0x448f95(0x205)], _0x2ae39b = this[_0x448f95(0xefd)][_0xf7bcef] = [], _0x482ab3 = 0x0; _0x482ab3 < _0x2b48fe; _0x482ab3++)
                    _0x2ae39b[_0x482ab3] = new Float32Array(0x10 * _0x3fe4da[_0x482ab3]['length']);
            this[_0x448f95(0xefa)] && _0x3fde4a && this[_0x448f95(0xf02)]();
        }
        [_0x6027f5(0xf03)](_0x3bfdc3) {
            var _0x1ed5e2 = _0x6027f5;
            this[_0x1ed5e2(0xf04)] = _0x3bfdc3, this['_shaderValues'][_0x1ed5e2(0x49a)](_0x4cc24a[_0x1ed5e2(0xf05)]), this[_0x1ed5e2(0xf06)]();
        }
        [_0x6027f5(0xb07)]() {
            var _0x24dfcb = _0x6027f5;
            if (this[_0x24dfcb(0xefa)]) {
                if (this[_0x24dfcb(0xf04)] && this['_rootBone']) {
                    var _0x2cc5b4 = _0x357af4[_0x24dfcb(0x495)];
                    _0x3acd08[_0x24dfcb(0x306)](this[_0x24dfcb(0xf04)][_0x24dfcb(0x38b)][_0x24dfcb(0x3d6)][_0x24dfcb(0x3d8)], this['_cacheRootAnimationNode']['transform'][_0x24dfcb(0x3d9)](), _0x2cc5b4), this[_0x24dfcb(0xef2)][_0x24dfcb(0xb1f)](_0x2cc5b4, this[_0x24dfcb(0xa5d)]);
                } else
                    super[_0x24dfcb(0xb07)]();
            } else
                this['_cacheRootBone'] ? this[_0x24dfcb(0xef2)]['_tranform'](this['_cacheRootBone']['transform']['worldMatrix'], this[_0x24dfcb(0xa5d)]) : this[_0x24dfcb(0xef2)][_0x24dfcb(0xb1f)](this[_0x24dfcb(0x3dc)]['transform'][_0x24dfcb(0x3d8)], this['_bounds']);
        }
        [_0x6027f5(0x5f6)](_0x5eebf9, _0x31a7b3) {
            var _0x221a48 = _0x6027f5;
            if (this['_cacheAnimator']) {
                if (this[_0x221a48(0xef8)](), this[_0x221a48(0xefa)]) {
                    var _0xdc6a5b = this['_cacheAnimator']['owner'][_0x221a48(0x3d5)];
                    this[_0x221a48(0x4e2)][_0x221a48(0x4aa)](_0x44a154[_0x221a48(0x5d4)], _0xdc6a5b['worldMatrix']);
                } else
                    this[_0x221a48(0x4e2)]['setMatrix4x4'](_0x44a154['WORLDMATRIX'], _0x6b4d98[_0x221a48(0x286)]);
            } else
                this['_shaderValues']['setMatrix4x4'](_0x44a154[_0x221a48(0x5d4)], _0x31a7b3[_0x221a48(0x3d8)]);
            this[_0x221a48(0xaa5)] && (this[_0x221a48(0xafc)] == _0x18be32[_0x221a48(0xae1)]['off'] ? (this['_shaderValues'][_0x221a48(0x49b)](_0x2553d1['SHADERDEFINE_SPECCUBE_BOX_PROJECTION']), this['_shaderValues']['setVector'](_0x221092[_0x221a48(0xccb)], _0x24dd24[_0x221a48(0xf07)]), this[_0x221a48(0x4e2)][_0x221a48(0x4ac)](_0x221092[_0x221a48(0xa7d)], _0x2fe14f['blackTexture'])) : (this[_0x221a48(0xaa5)][_0x221a48(0xae7)] ? (this[_0x221a48(0x4e2)][_0x221a48(0x49a)](_0x2553d1['SHADERDEFINE_SPECCUBE_BOX_PROJECTION']), this[_0x221a48(0x4e2)][_0x221a48(0x57a)](_0x221092[_0x221a48(0xa7f)], this[_0x221a48(0xaa5)]['probePosition']), this[_0x221a48(0x4e2)]['setVector3'](_0x221092['REFLECTIONCUBE_PROBEBOXMAX'], this['_probReflection'][_0x221a48(0xaee)]), this[_0x221a48(0x4e2)]['setVector3'](_0x221092[_0x221a48(0xa81)], this[_0x221a48(0xaa5)]['boundsMin'])) : this[_0x221a48(0x4e2)][_0x221a48(0x49b)](_0x2553d1['SHADERDEFINE_SPECCUBE_BOX_PROJECTION']), this['_shaderValues']['setTexture'](_0x221092[_0x221a48(0xa7d)], this[_0x221a48(0xaa5)][_0x221a48(0xaed)]), this[_0x221a48(0x4e2)][_0x221a48(0x4a8)](_0x221092['REFLECTIONCUBE_HDR_PARAMS'], this[_0x221a48(0xaa5)][_0x221a48(0xaf0)])));
        }
        ['_renderUpdateWithCamera'](_0x1bfae9, _0x527d4e) {
            var _0x3dac2e = _0x6027f5, _0x24d524 = _0x1bfae9[_0x3dac2e(0x5dd)];
            if (this['_cacheAnimator']) {
                if (this[_0x3dac2e(0xefa)]) {
                    var _0xc8326a = this[_0x3dac2e(0xf04)][_0x3dac2e(0x38b)][_0x3dac2e(0x3d5)];
                    _0x6b4d98[_0x3dac2e(0x27b)](_0x24d524, _0xc8326a[_0x3dac2e(0x3d8)], this[_0x3dac2e(0x5d7)]), this[_0x3dac2e(0x4e2)]['setMatrix4x4'](_0x44a154['MVPMATRIX'], this[_0x3dac2e(0x5d7)]);
                } else
                    this['_shaderValues'][_0x3dac2e(0x4aa)](_0x44a154[_0x3dac2e(0x5df)], _0x24d524);
            } else
                _0x6b4d98[_0x3dac2e(0x27b)](_0x24d524, _0x527d4e[_0x3dac2e(0x3d8)], this[_0x3dac2e(0x5d7)]), this[_0x3dac2e(0x4e2)][_0x3dac2e(0x4aa)](_0x44a154['MVPMATRIX'], this[_0x3dac2e(0x5d7)]);
        }
        [_0x6027f5(0xa77)]() {
            var _0x57a005 = _0x6027f5;
            super[_0x57a005(0xa77)](), this[_0x57a005(0xefa)] ? this['_cacheRootAnimationNode'] && this['_cacheRootAnimationNode']['transform'][_0x57a005(0x8fb)](_0x387b86[_0x57a005(0x5b1)][_0x57a005(0x5ae)], this, this['_onWorldMatNeedChange']) : this[_0x57a005(0xef6)] ? !this[_0x57a005(0xef6)][_0x57a005(0x5cf)] && this[_0x57a005(0xef6)][_0x57a005(0x3d6)]['off'](_0x387b86[_0x57a005(0x5b1)][_0x57a005(0x5ae)], this, this[_0x57a005(0xafd)]) : this[_0x57a005(0x3dc)] && !this['_owner'][_0x57a005(0x5cf)] && this['_owner'][_0x57a005(0x3d6)][_0x57a005(0x8fb)](_0x387b86['Event'][_0x57a005(0x5ae)], this, this['_onWorldMatNeedChange']);
        }
        get [_0x6027f5(0x812)]() {
            var _0x18355e = _0x6027f5;
            return (this[_0x18355e(0xb06)] || this[_0x18355e(0xefa)]) && (this[_0x18355e(0xb07)](), this[_0x18355e(0xb06)] = !0x1), this[_0x18355e(0xa5d)];
        }
        ['_setRootBone'](_0x57e9eb) {
            var _0x2fc62b = _0x6027f5;
            this[_0x2fc62b(0xf08)] = _0x57e9eb, this[_0x2fc62b(0xf06)]();
        }
        [_0x6027f5(0xf06)]() {
            var _0x29bbb7 = _0x6027f5, _0x4583ea;
            _0x4583ea = this[_0x29bbb7(0xf04)] && this[_0x29bbb7(0xf08)] && this[_0x29bbb7(0xefa)] ? this['_cacheAnimator']['_avatarNodeMap'][this[_0x29bbb7(0xf08)]] : null, this[_0x29bbb7(0xf09)] != _0x4583ea && (this[_0x29bbb7(0xafd)](_0xaeafd1[_0x29bbb7(0x586)] | _0xaeafd1[_0x29bbb7(0x587)] | _0xaeafd1[_0x29bbb7(0x589)]), this[_0x29bbb7(0x3dc)][_0x29bbb7(0x3d6)][_0x29bbb7(0x8fb)](_0x387b86[_0x29bbb7(0x5b1)]['TRANSFORM_CHANGED'], this, this[_0x29bbb7(0xafd)]), this[_0x29bbb7(0xf09)] && this['_cacheRootAnimationNode'][_0x29bbb7(0x3d6)]['off'](_0x387b86[_0x29bbb7(0x5b1)][_0x29bbb7(0x5ae)], this, this[_0x29bbb7(0xafd)]), _0x4583ea && _0x4583ea['transform']['on'](_0x387b86[_0x29bbb7(0x5b1)][_0x29bbb7(0x5ae)], this, this['_onWorldMatNeedChange']), this[_0x29bbb7(0xf09)] = _0x4583ea);
        }
        [_0x6027f5(0xf02)]() {
            var _0x441490 = _0x6027f5, _0x3f1e64 = this[_0x441490(0xef9)][_0x441490(0xf0a)], _0x57b506 = this[_0x441490(0xef9)][_0x441490(0xf01)][_0x441490(0x205)];
            this[_0x441490(0xef3)][_0x441490(0x205)] = _0x57b506;
            for (var _0x37dec3 = this[_0x441490(0xf04)]['_avatarNodeMap'], _0x6f2dda = 0x0; _0x6f2dda < _0x57b506; _0x6f2dda++) {
                var _0x3feb3e = _0x37dec3[_0x3f1e64[_0x6f2dda]];
                this[_0x441490(0xef3)][_0x6f2dda] = _0x3feb3e;
            }
        }
        [_0x6027f5(0xf0b)](_0x5717fe) {
            var _0x302a39 = _0x6027f5;
            this[_0x302a39(0xefa)] !== _0x5717fe && (this[_0x302a39(0xef9)] ? (this[_0x302a39(0xefa)] = _0x5717fe, _0x5717fe && (this[_0x302a39(0x4e2)][_0x302a39(0x49a)](_0x4cc24a['SHADERDEFINE_BONE']), this[_0x302a39(0xf02)]())) : this[_0x302a39(0xefa)] = _0x5717fe, this[_0x302a39(0xf06)]());
        }
    }
    _0x357af4['_tempMatrix4x4'] = new _0x6b4d98();
    class _0x45dde3 extends _0x221092 {
        constructor(_0x4c41df = null, _0x264ddc = null) {
            var _0x3089a6 = _0x6027f5;
            super(_0x264ddc), this[_0x3089a6(0xce7)] = new _0x1f703e(this), this[_0x3089a6(0x5e8)] = new _0x357af4(this), _0x4c41df && (this['_meshFilter']['sharedMesh'] = _0x4c41df);
        }
        static [_0x6027f5(0x230)]() {
            var _0x26f2ed = _0x6027f5;
            _0x4cc24a[_0x26f2ed(0xf05)] = _0x3a9f31[_0x26f2ed(0x510)](_0x26f2ed(0xf0c)), _0x4cc24a['SHADERDEFINE_SIMPLEBONE'] = _0x3a9f31[_0x26f2ed(0x510)](_0x26f2ed(0xf0d));
        }
        get ['meshFilter']() {
            var _0x1df613 = _0x6027f5;
            return this[_0x1df613(0xce7)];
        }
        get [_0x6027f5(0xf0e)]() {
            var _0x5c2b2e = _0x6027f5;
            return this[_0x5c2b2e(0x5e8)];
        }
        [_0x6027f5(0x67c)](_0x5a3688, _0x55173b) {
            var _0x32aacc = _0x6027f5;
            super[_0x32aacc(0x67c)](_0x5a3688, _0x55173b);
            var _0x584881 = this['skinnedMeshRenderer'], _0x352018 = _0x5a3688[_0x32aacc(0xaa8)];
            null != _0x352018 && (_0x584881[_0x32aacc(0xaa8)] = _0x352018);
            var _0x2f2930, _0x172775 = _0x5a3688['lightmapScaleOffset'];
            if (_0x172775 && (_0x584881[_0x32aacc(0xacd)] = new _0x5b8e4e(_0x172775[0x0], _0x172775[0x1], _0x172775[0x2], _0x172775[0x3])), null != _0x5a3688[_0x32aacc(0x991)] && (_0x584881[_0x32aacc(0x659)] = _0x5a3688[_0x32aacc(0x991)]), null != _0x5a3688[_0x32aacc(0xced)] && (_0x584881[_0x32aacc(0xaac)] = _0x5a3688['receiveShadows']), null != _0x5a3688[_0x32aacc(0xb09)] && (_0x584881[_0x32aacc(0xb09)] = _0x5a3688[_0x32aacc(0xb09)]), _0x2f2930 = _0x5a3688[_0x32aacc(0xcec)]) {
                var _0x22624f = _0x387b86['Loader'][_0x32aacc(0x3b7)](_0x2f2930);
                _0x22624f && (this[_0x32aacc(0xacf)][_0x32aacc(0xad0)] = _0x22624f);
            }
            var _0x4b0717 = _0x5a3688[_0x32aacc(0xcee)];
            if (_0x4b0717) {
                var _0x5d6978 = _0x584881[_0x32aacc(0xb03)], _0x2a92f1 = _0x4b0717[_0x32aacc(0x205)];
                _0x5d6978[_0x32aacc(0x205)] = _0x2a92f1;
                for (var _0x306cd9 = 0x0; _0x306cd9 < _0x2a92f1; _0x306cd9++)
                    _0x5d6978[_0x306cd9] = _0x387b86[_0x32aacc(0x3bd)][_0x32aacc(0x3b7)](_0x4b0717[_0x306cd9][_0x32aacc(0x3b8)]);
                _0x584881['sharedMaterials'] = _0x5d6978;
            }
            var _0x398e46 = _0x5a3688[_0x32aacc(0xf0f)], _0x200787 = _0x398e46[_0x32aacc(0x212)], _0x402ffd = _0x398e46[_0x32aacc(0x20c)];
            if (_0x584881[_0x32aacc(0xef4)]['setMin'](new _0x3697cd(_0x200787[0x0], _0x200787[0x1], _0x200787[0x2])), _0x584881[_0x32aacc(0xef4)][_0x32aacc(0xa49)](new _0x3697cd(_0x402ffd[0x0], _0x402ffd[0x1], _0x402ffd[0x2])), _0x55173b) {
                var _0x2b4c9b = _0x5a3688[_0x32aacc(0xef5)];
                _0x584881[_0x32aacc(0xef5)] = _0x55173b[_0x2b4c9b];
                var _0x2a0153, _0x269425 = _0x5a3688['bones'];
                for (_0x306cd9 = 0x0, _0x2a0153 = _0x269425['length']; _0x306cd9 < _0x2a0153; _0x306cd9++)
                    _0x584881[_0x32aacc(0xef7)][_0x32aacc(0x2ac)](_0x55173b[_0x269425[_0x306cd9]]);
            } else
                _0x5a3688[_0x32aacc(0xef5)] && _0x584881['_setRootBone'](_0x5a3688[_0x32aacc(0xef5)]);
        }
        ['_changeHierarchyAnimator'](_0x11a28e) {
            var _0x498a02 = _0x6027f5;
            super[_0x498a02(0x5c7)](_0x11a28e), this[_0x498a02(0xf0e)][_0x498a02(0xf03)](_0x11a28e);
        }
        [_0x6027f5(0x5c8)](_0xf419f1) {
            var _0x307a9a = _0x6027f5;
            this[_0x307a9a(0xf0e)]['_setCacheAvatar'](_0xf419f1);
        }
        [_0x6027f5(0x345)](_0x5a9a2e, _0xb07719, _0x410ce5) {
            var _0x2163bd = _0x6027f5, _0x190252 = _0x5a9a2e;
            _0x190252[_0x2163bd(0xacf)][_0x2163bd(0xad0)] = this[_0x2163bd(0xacf)][_0x2163bd(0xad0)];
            var _0x2dba06 = this[_0x2163bd(0x5e8)], _0xa16eac = _0x190252[_0x2163bd(0x5e8)];
            _0xa16eac['enable'] = _0x2dba06[_0x2163bd(0x659)], _0xa16eac['sharedMaterials'] = _0x2dba06[_0x2163bd(0xb03)], _0xa16eac['castShadow'] = _0x2dba06['castShadow'];
            var _0x22985d = _0x2dba06['lightmapScaleOffset'];
            _0x22985d && (_0xa16eac[_0x2163bd(0xacd)] = _0x22985d['clone']()), _0xa16eac[_0x2163bd(0xaac)] = _0x2dba06[_0x2163bd(0xaac)], _0xa16eac[_0x2163bd(0xcf0)] = _0x2dba06[_0x2163bd(0xcf0)], _0xa16eac[_0x2163bd(0xf08)] = _0x2dba06[_0x2163bd(0xf08)];
            var _0x1c7028 = _0x2dba06[_0x2163bd(0xef7)], _0xbdaea6 = _0xa16eac[_0x2163bd(0xef7)], _0x1cac26 = _0x1c7028[_0x2163bd(0x205)];
            _0xbdaea6['length'] = _0x1cac26;
            var _0x3d7287 = _0x2dba06['rootBone'];
            if (_0x3d7287) {
                var _0x35207d = _0x3acd08[_0x2163bd(0x30e)](_0xb07719, _0x3d7287, _0x45dde3[_0x2163bd(0xf10)]);
                _0xa16eac[_0x2163bd(0xef5)] = _0x35207d ? _0x3acd08[_0x2163bd(0x311)](_0x410ce5, _0x35207d) : _0x3d7287;
            }
            for (var _0x2cd13f = 0x0; _0x2cd13f < _0x1c7028[_0x2163bd(0x205)]; _0x2cd13f++)
                _0x35207d = _0x3acd08[_0x2163bd(0x30e)](_0xb07719, _0x1c7028[_0x2cd13f], _0x45dde3['_tempArray0']), _0xbdaea6[_0x2cd13f] = _0x35207d ? _0x3acd08[_0x2163bd(0x311)](_0x410ce5, _0x35207d) : _0x1c7028[_0x2cd13f];
            var _0x3b0533 = _0x2dba06['localBounds'];
            _0x3b0533 && _0x3b0533['cloneTo'](_0xa16eac['localBounds']), super[_0x2163bd(0x345)](_0x5a9a2e, _0xb07719, _0x410ce5);
        }
        [_0x6027f5(0x364)](_0x47e3f4 = !0x0) {
            var _0x3c549f = _0x6027f5;
            this['destroyed'] || (super[_0x3c549f(0x364)](_0x47e3f4), this['_meshFilter']['destroy']());
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x45dde3();
        }
    }
    _0x45dde3['_tempArray0'] = [], _0x45dde3['BONES'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf11)), _0x45dde3['SIMPLE_SIMPLEANIMATORTEXTURE'] = _0x3a9f31['propertyNameToID']('u_SimpleAnimatorTexture'), _0x45dde3[_0x6027f5(0xf12)] = _0x3a9f31[_0x6027f5(0x553)]('u_SimpleAnimatorParams'), _0x45dde3[_0x6027f5(0xf13)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf14));
    class _0x52600c extends _0xe2444c {
        constructor() {
            var _0x497bc3 = _0x6027f5;
            super(), this['setShaderName'](_0x497bc3(0xf15)), this[_0x497bc3(0xd1a)] = new _0x5b8e4e(0x1, 0x1, 0x1, 0x1), this['_shaderValues'][_0x497bc3(0x4a8)](_0x52600c['TILINGOFFSET'], new _0x5b8e4e(0x1, 0x1, 0x0, 0x0)), this[_0x497bc3(0x4e2)][_0x497bc3(0x4a8)](_0x52600c[_0x497bc3(0x726)], new _0x5b8e4e(0x1, 0x1, 0x1, 0x1)), this[_0x497bc3(0x730)] = _0x52600c['RENDERMODE_ALPHABLENDED'];
        }
        static [_0x6027f5(0x6b5)]() {
            var _0x5cd0cc = _0x6027f5;
            _0x52600c[_0x5cd0cc(0x728)] = _0x3a9f31['getDefineByName'](_0x5cd0cc(0x737)), _0x52600c['SHADERDEFINE_ADDTIVEFOG'] = _0x3a9f31[_0x5cd0cc(0x510)](_0x5cd0cc(0x72a));
        }
        get [_0x6027f5(0x72b)]() {
            var _0x37b6c0 = _0x6027f5;
            return this[_0x37b6c0(0xd1a)]['x'];
        }
        set [_0x6027f5(0x72b)](_0x3a7920) {
            var _0x31d701 = _0x6027f5;
            this[_0x31d701(0xd1a)]['x'] = _0x3a7920, this[_0x31d701(0x46f)] = this['_color'];
        }
        get ['_TintColorG']() {
            var _0x44b1db = _0x6027f5;
            return this[_0x44b1db(0xd1a)]['y'];
        }
        set [_0x6027f5(0x72c)](_0x486e34) {
            var _0x237deb = _0x6027f5;
            this[_0x237deb(0xd1a)]['y'] = _0x486e34, this['color'] = this['_color'];
        }
        get [_0x6027f5(0x72d)]() {
            var _0x1709cd = _0x6027f5;
            return this[_0x1709cd(0xd1a)]['z'];
        }
        set [_0x6027f5(0x72d)](_0x520144) {
            var _0x4fdf90 = _0x6027f5;
            this[_0x4fdf90(0xd1a)]['z'] = _0x520144, this[_0x4fdf90(0x46f)] = this[_0x4fdf90(0xd1a)];
        }
        get [_0x6027f5(0x72e)]() {
            return this['_color']['w'];
        }
        set [_0x6027f5(0x72e)](_0x522388) {
            var _0x5bd722 = _0x6027f5;
            this[_0x5bd722(0xd1a)]['w'] = _0x522388, this[_0x5bd722(0x46f)] = this['_color'];
        }
        get ['_MainTex_STX']() {
            var _0x2b99ac = _0x6027f5;
            return this[_0x2b99ac(0x4e2)][_0x2b99ac(0x4a7)](_0x52600c[_0x2b99ac(0x6f2)])['x'];
        }
        set [_0x6027f5(0x6f1)](_0x3b826b) {
            var _0x1d7509 = _0x6027f5, _0x1805dc = this[_0x1d7509(0x4e2)][_0x1d7509(0x4a7)](_0x52600c['TILINGOFFSET']);
            _0x1805dc['x'] = _0x3b826b, this['tilingOffset'] = _0x1805dc;
        }
        get ['_MainTex_STY']() {
            var _0x11e3a4 = _0x6027f5;
            return this[_0x11e3a4(0x4e2)][_0x11e3a4(0x4a7)](_0x52600c[_0x11e3a4(0x6f2)])['y'];
        }
        set [_0x6027f5(0x6f4)](_0x41780e) {
            var _0x10c0fd = _0x6027f5, _0x2f89d8 = this[_0x10c0fd(0x4e2)][_0x10c0fd(0x4a7)](_0x52600c[_0x10c0fd(0x6f2)]);
            _0x2f89d8['y'] = _0x41780e, this[_0x10c0fd(0x6f3)] = _0x2f89d8;
        }
        get [_0x6027f5(0x6f5)]() {
            var _0x82e9e2 = _0x6027f5;
            return this[_0x82e9e2(0x4e2)]['getVector'](_0x52600c[_0x82e9e2(0x6f2)])['z'];
        }
        set ['_MainTex_STZ'](_0x4292c3) {
            var _0x1041d4 = _0x6027f5, _0x2e80c2 = this[_0x1041d4(0x4e2)][_0x1041d4(0x4a7)](_0x52600c[_0x1041d4(0x6f2)]);
            _0x2e80c2['z'] = _0x4292c3, this[_0x1041d4(0x6f3)] = _0x2e80c2;
        }
        get [_0x6027f5(0x6f6)]() {
            var _0x84dd81 = _0x6027f5;
            return this['_shaderValues'][_0x84dd81(0x4a7)](_0x52600c[_0x84dd81(0x6f2)])['w'];
        }
        set [_0x6027f5(0x6f6)](_0x346795) {
            var _0x5af3f9 = _0x6027f5, _0x5e8358 = this[_0x5af3f9(0x4e2)][_0x5af3f9(0x4a7)](_0x52600c[_0x5af3f9(0x6f2)]);
            _0x5e8358['w'] = _0x346795, this[_0x5af3f9(0x6f3)] = _0x5e8358;
        }
        set [_0x6027f5(0x730)](_0x4acc0a) {
            var _0xcf180 = _0x6027f5;
            switch (_0x4acc0a) {
            case _0x52600c[_0xcf180(0x727)]:
                this[_0xcf180(0x68a)] = _0xe2444c[_0xcf180(0x6ad)], this[_0xcf180(0x68c)] = !0x1, this[_0xcf180(0x699)] = !0x1, this[_0xcf180(0x697)] = _0x47a097['CULL_NONE'], this[_0xcf180(0x696)] = _0x47a097['BLEND_ENABLE_ALL'], this[_0xcf180(0x69b)] = _0x47a097[_0xcf180(0x6cc)], this[_0xcf180(0x69c)] = _0x47a097[_0xcf180(0x6ba)], this[_0xcf180(0x698)] = _0x47a097[_0xcf180(0x6fa)], this[_0xcf180(0x4e2)]['addDefine'](_0x52600c[_0xcf180(0x729)]);
                break;
            case _0x52600c['RENDERMODE_ALPHABLENDED']:
                this['renderQueue'] = _0xe2444c[_0xcf180(0x6ad)], this['alphaTest'] = !0x1, this[_0xcf180(0x699)] = !0x1, this[_0xcf180(0x697)] = _0x47a097['CULL_NONE'], this[_0xcf180(0x696)] = _0x47a097[_0xcf180(0x6c7)], this[_0xcf180(0x69b)] = _0x47a097[_0xcf180(0x6cc)], this[_0xcf180(0x69c)] = _0x47a097[_0xcf180(0x6fc)], this[_0xcf180(0x698)] = _0x47a097[_0xcf180(0x6fa)], this['_shaderValues']['removeDefine'](_0x52600c['SHADERDEFINE_ADDTIVEFOG']);
                break;
            default:
                throw new Error(_0xcf180(0xf16));
            }
        }
        get [_0x6027f5(0x732)]() {
            var _0x496633 = _0x6027f5;
            return this[_0x496633(0x72b)];
        }
        set [_0x6027f5(0x732)](_0x11131b) {
            this['_TintColorR'] = _0x11131b;
        }
        get ['colorG']() {
            var _0x282b7a = _0x6027f5;
            return this[_0x282b7a(0x72c)];
        }
        set [_0x6027f5(0x733)](_0x39b24a) {
            var _0x15b871 = _0x6027f5;
            this[_0x15b871(0x72c)] = _0x39b24a;
        }
        get [_0x6027f5(0x734)]() {
            var _0x1fc650 = _0x6027f5;
            return this[_0x1fc650(0x72d)];
        }
        set [_0x6027f5(0x734)](_0x1ac253) {
            var _0x4cbe08 = _0x6027f5;
            this[_0x4cbe08(0x72d)] = _0x1ac253;
        }
        get [_0x6027f5(0x735)]() {
            return this['_TintColorA'];
        }
        set [_0x6027f5(0x735)](_0x4f6ddb) {
            var _0x5ba9b3 = _0x6027f5;
            this[_0x5ba9b3(0x72e)] = _0x4f6ddb;
        }
        get [_0x6027f5(0x46f)]() {
            var _0x2b8224 = _0x6027f5;
            return this[_0x2b8224(0x4e2)]['getVector'](_0x52600c[_0x2b8224(0x726)]);
        }
        set ['color'](_0xe2e98a) {
            var _0x5068f5 = _0x6027f5;
            this['_shaderValues'][_0x5068f5(0x4a8)](_0x52600c['TINTCOLOR'], _0xe2e98a);
        }
        get [_0x6027f5(0x736)]() {
            var _0x1857a7 = _0x6027f5;
            return this[_0x1857a7(0x4e2)]['getTexture'](_0x52600c[_0x1857a7(0x737)]);
        }
        set [_0x6027f5(0x736)](_0x3b85e8) {
            var _0x3ab33b = _0x6027f5;
            _0x3b85e8 ? this[_0x3ab33b(0x4e2)][_0x3ab33b(0x49a)](_0x52600c[_0x3ab33b(0x728)]) : this[_0x3ab33b(0x4e2)][_0x3ab33b(0x49b)](_0x52600c[_0x3ab33b(0x728)]), this['_shaderValues']['setTexture'](_0x52600c[_0x3ab33b(0x737)], _0x3b85e8);
        }
        get [_0x6027f5(0x6ff)]() {
            var _0x18d82c = _0x6027f5;
            return this[_0x18d82c(0x6f1)];
        }
        set [_0x6027f5(0x6ff)](_0x148487) {
            this['_MainTex_STX'] = _0x148487;
        }
        get [_0x6027f5(0x738)]() {
            var _0x63bb11 = _0x6027f5;
            return this[_0x63bb11(0x6f4)];
        }
        set ['tilingOffsetY'](_0x46307e) {
            var _0x1e7538 = _0x6027f5;
            this[_0x1e7538(0x6f4)] = _0x46307e;
        }
        get [_0x6027f5(0x700)]() {
            var _0x362dd9 = _0x6027f5;
            return this[_0x362dd9(0x6f5)];
        }
        set [_0x6027f5(0x700)](_0xbd93eb) {
            var _0x28888e = _0x6027f5;
            this[_0x28888e(0x6f5)] = _0xbd93eb;
        }
        get ['tilingOffsetW']() {
            return this['_MainTex_STW'];
        }
        set [_0x6027f5(0x701)](_0x3e44af) {
            this['_MainTex_STW'] = _0x3e44af;
        }
        get [_0x6027f5(0x6f3)]() {
            var _0x4f6f8b = _0x6027f5;
            return this[_0x4f6f8b(0x4e2)][_0x4f6f8b(0x4a7)](_0x52600c['TILINGOFFSET']);
        }
        set [_0x6027f5(0x6f3)](_0x447a2) {
            var _0xf7735e = _0x6027f5;
            _0x447a2 ? this[_0xf7735e(0x4e2)][_0xf7735e(0x4a8)](_0x52600c[_0xf7735e(0x6f2)], _0x447a2) : this['_shaderValues']['getVector'](_0x52600c[_0xf7735e(0x6f2)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        ['clone']() {
            var _0x290727 = _0x6027f5, _0x4b66a3 = new _0x52600c();
            return this[_0x290727(0x1fc)](_0x4b66a3), _0x4b66a3;
        }
    }
    _0x52600c[_0x6027f5(0xdc5)] = 0x0, _0x52600c[_0x6027f5(0x727)] = 0x1, _0x52600c[_0x6027f5(0x737)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xcc5)), _0x52600c[_0x6027f5(0x726)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf17)), _0x52600c[_0x6027f5(0x6f2)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0x73b));
    class _0x3b4301 {
    }
    _0x3b4301['Stretch'] = 0x0, _0x3b4301['Tile'] = 0x1, (_0x413036 = _0x18be32[_0x6027f5(0xf18)] || (_0x18be32[_0x6027f5(0xf18)] = {}))[_0x413036[_0x6027f5(0xf19)] = 0x0] = 'View', _0x413036[_0x413036[_0x6027f5(0xf1a)] = 0x1] = _0x6027f5(0xf1a);
    class _0x2113d8 {
        static get [_0x6027f5(0xf1b)]() {
            var _0x5b55cf = _0x6027f5;
            return _0x2113d8[_0x5b55cf(0xf1c)];
        }
        static get [_0x6027f5(0xf1d)]() {
            var _0x4d46c8 = _0x6027f5;
            return _0x2113d8[_0x4d46c8(0xf1e)];
        }
        get ['vertexDeclaration']() {
            var _0x2c276a = _0x6027f5;
            return _0x2113d8[_0x2c276a(0xf1c)];
        }
        static [_0x6027f5(0x230)]() {
            var _0x11e8a6 = _0x6027f5;
            _0x2113d8[_0x11e8a6(0xf1c)] = new _0x4b2139(0x20, [
                new _0x25649b(0x0, _0x53b5cc[_0x11e8a6(0x46b)], _0x2113d8[_0x11e8a6(0xf1f)]),
                new _0x25649b(0xc, _0x53b5cc[_0x11e8a6(0x46b)], _0x2113d8[_0x11e8a6(0xf20)]),
                new _0x25649b(0x18, _0x53b5cc[_0x11e8a6(0x468)], _0x2113d8[_0x11e8a6(0xf21)]),
                new _0x25649b(0x1c, _0x53b5cc['Single'], _0x2113d8[_0x11e8a6(0xf22)])
            ]), _0x2113d8[_0x11e8a6(0xf1e)] = new _0x4b2139(0x14, [
                new _0x25649b(0x0, _0x53b5cc[_0x11e8a6(0x468)], _0x2113d8[_0x11e8a6(0xf23)]),
                new _0x25649b(0x4, _0x53b5cc['Color'], _0x2113d8[_0x11e8a6(0xf24)])
            ]);
        }
    }
    _0x2113d8[_0x6027f5(0xf1f)] = 0x0, _0x2113d8[_0x6027f5(0xf20)] = 0x1, _0x2113d8[_0x6027f5(0xf21)] = 0x2, _0x2113d8['TRAIL_TEXTURECOORDINATE0Y'] = 0x3, _0x2113d8[_0x6027f5(0xf23)] = 0x4, _0x2113d8[_0x6027f5(0xf24)] = 0x5;
    class _0x359f23 extends _0x2be7a6 {
        constructor(_0x4f3e75) {
            var _0x2b45b1 = _0x6027f5;
            super(), this[_0x2b45b1(0xf25)] = 0x8, this[_0x2b45b1(0xf26)] = 0x5, this[_0x2b45b1(0xf27)] = 0x10, this[_0x2b45b1(0xf28)] = 0x0, this[_0x2b45b1(0xf29)] = 0x0, this['_needAddFirstVertex'] = !0x1, this[_0x2b45b1(0xf2a)] = !0x1, this[_0x2b45b1(0xf2b)] = null, this[_0x2b45b1(0xf2c)] = null, this['_lastFixedVertexPosition'] = new _0x3697cd(), this[_0x2b45b1(0x4f8)] = new _0x5b1dae(), this[_0x2b45b1(0xf2d)] = new _0x441c6d(), this[_0x2b45b1(0xf2e)] = !0x1, this[_0x2b45b1(0x3dc)] = _0x4f3e75, this[_0x2b45b1(0xf2f)] = this['_increaseSegementCount'], this['_resizeData'](this[_0x2b45b1(0xf2f)], this[_0x2b45b1(0x4f8)]);
            var _0x2d98d5 = this[_0x2b45b1(0x3dc)][_0x2b45b1(0x3dc)][_0x2b45b1(0xf30)]['bounds'], _0x477467 = this[_0x2b45b1(0x3dc)][_0x2b45b1(0x3dc)][_0x2b45b1(0x3d6)][_0x2b45b1(0x5a2)];
            _0x2d98d5[_0x2b45b1(0xa62)](_0x477467), _0x2d98d5[_0x2b45b1(0xa49)](_0x477467);
        }
        ['_resizeData'](_0x2f4ff6, _0x2d8c7e) {
            var _0x495227 = _0x6027f5;
            this['_subBirthTime'] = new Float32Array(_0x2f4ff6), this['_subDistance'] = new Float64Array(_0x2f4ff6);
            var _0xcfe1d3 = _0x387b86['LayaGL'][_0x495227(0x304)], _0x4bd2a8 = 0x2 * _0x2f4ff6, _0x59456a = _0x2113d8[_0x495227(0xf1b)], _0x5afb4c = _0x2113d8[_0x495227(0xf1d)], _0x33a1b5 = [], _0x36412e = _0x4bd2a8 * _0x59456a['vertexStride'], _0x1f0cf9 = _0x4bd2a8 * _0x5afb4c[_0x495227(0x4e5)], _0x5501c2 = _0x36412e + _0x1f0cf9;
            this[_0x495227(0xf2b)] = new Float32Array(_0x4bd2a8 * this[_0x495227(0xf25)]), this[_0x495227(0xf2c)] = new Float32Array(_0x4bd2a8 * this[_0x495227(0xf26)]), this[_0x495227(0xf31)] = new _0x2ce777(_0x36412e, _0xcfe1d3[_0x495227(0x4fa)], !0x1), this[_0x495227(0xf31)]['vertexDeclaration'] = _0x59456a, this['_vertexBuffer2'] = new _0x2ce777(_0x1f0cf9, _0xcfe1d3[_0x495227(0x620)], !0x1), this[_0x495227(0xf32)]['vertexDeclaration'] = _0x5afb4c, _0x33a1b5[_0x495227(0x2ac)](this[_0x495227(0xf31)]), _0x33a1b5[_0x495227(0x2ac)](this[_0x495227(0xf32)]), _0x2d8c7e[_0x495227(0x452)](), _0x2d8c7e['applyVertexBuffers'](_0x33a1b5), _0x2d8c7e[_0x495227(0x4f9)](), _0x387b86[_0x495227(0x324)]['_addMemory'](_0x5501c2, _0x5501c2);
        }
        ['_resetData']() {
            var _0x1cf26c = _0x6027f5, _0x2e88c8 = this[_0x1cf26c(0xf29)] - this[_0x1cf26c(0xf28)], _0x3a0e7a = new Float32Array(this[_0x1cf26c(0xf2b)][_0x1cf26c(0x454)], 0x2 * this[_0x1cf26c(0xf25)] * this[_0x1cf26c(0xf28)] * 0x4, 0x2 * this[_0x1cf26c(0xf25)] * _0x2e88c8), _0xa08c4b = new Float32Array(this[_0x1cf26c(0xf2c)][_0x1cf26c(0x454)], 0x2 * this[_0x1cf26c(0xf26)] * this['_activeIndex'] * 0x4, 0x2 * this[_0x1cf26c(0xf26)] * _0x2e88c8), _0x7fa84e = new Float64Array(this['_subDistance'][_0x1cf26c(0x454)], 0x8 * this['_activeIndex'], _0x2e88c8), _0x599965 = new Float32Array(this['_subBirthTime'][_0x1cf26c(0x454)], 0x4 * this[_0x1cf26c(0xf28)], _0x2e88c8);
            if (_0x2e88c8 === this['_segementCount']) {
                var _0x48b41b = this[_0x1cf26c(0xf31)][_0x1cf26c(0x451)] + this[_0x1cf26c(0xf32)][_0x1cf26c(0x451)];
                _0x387b86[_0x1cf26c(0x324)][_0x1cf26c(0xcd7)](-_0x48b41b, -_0x48b41b), this['_vertexBuffer1'][_0x1cf26c(0x364)](), this['_vertexBuffer2'][_0x1cf26c(0x364)](), this[_0x1cf26c(0xf2f)] += this[_0x1cf26c(0xf27)], this[_0x1cf26c(0xf33)](this[_0x1cf26c(0xf2f)], this[_0x1cf26c(0x4f8)]);
            }
            this[_0x1cf26c(0xf2b)]['set'](_0x3a0e7a, 0x0), this[_0x1cf26c(0xf2c)][_0x1cf26c(0x31f)](_0xa08c4b, 0x0), this['_subDistance'][_0x1cf26c(0x31f)](_0x7fa84e, 0x0), this[_0x1cf26c(0xf34)][_0x1cf26c(0x31f)](_0x599965, 0x0), this['_endIndex'] = _0x2e88c8, this[_0x1cf26c(0xf28)] = 0x0, this[_0x1cf26c(0xf31)][_0x1cf26c(0x45d)](this[_0x1cf26c(0xf2b)][_0x1cf26c(0x454)], 0x0, 0x2 * this['_floatCountPerVertices1'] * this[_0x1cf26c(0xf28)] * 0x4, 0x2 * this[_0x1cf26c(0xf25)] * _0x2e88c8 * 0x4), this[_0x1cf26c(0xf32)][_0x1cf26c(0x45d)](this[_0x1cf26c(0xf2c)]['buffer'], 0x0, 0x2 * this[_0x1cf26c(0xf26)] * this[_0x1cf26c(0xf28)] * 0x4, 0x2 * this[_0x1cf26c(0xf26)] * _0x2e88c8 * 0x4);
        }
        [_0x6027f5(0xf35)](_0x18cce9, _0x327113, _0x3c0d25) {
            var _0x28515f = _0x6027f5;
            _0x3697cd[_0x28515f(0x218)](_0x327113, _0x3c0d25) || (this[_0x28515f(0xf29)] - this[_0x28515f(0xf28)] == 0x0 ? this[_0x28515f(0xf36)](_0x18cce9, _0x3c0d25) : this[_0x28515f(0xf37)](_0x18cce9, _0x3c0d25));
        }
        [_0x6027f5(0xf36)](_0x302a4d, _0x172117) {
            var _0xa373e7 = _0x6027f5;
            this[_0xa373e7(0xf29)] === this[_0xa373e7(0xf2f)] && this[_0xa373e7(0xf38)](), this[_0xa373e7(0xf39)][this[_0xa373e7(0xf29)]] = 0x0, this[_0xa373e7(0xf34)][this[_0xa373e7(0xf29)]] = this[_0xa373e7(0x3dc)][_0xa373e7(0xf3a)], this[_0xa373e7(0xf29)]++, _0x172117['cloneTo'](this[_0xa373e7(0xf3b)]), this[_0xa373e7(0xf3c)] = !0x0;
        }
        [_0x6027f5(0xf37)](_0x546079, _0x5c3fd1) {
            var _0xd91142 = _0x6027f5, _0x5f36dd = _0x359f23['_tempVector30'], _0x261266 = _0x359f23[_0xd91142(0x3a1)];
            switch (this[_0xd91142(0x3dc)][_0xd91142(0xf3d)]) {
            case _0x18be32['TrailAlignment'][_0xd91142(0xf19)]:
                var _0x5b3df1 = _0x546079[_0xd91142(0x862)];
                _0x3697cd['transformCoordinate'](_0x5c3fd1, _0x5b3df1, _0x359f23[_0xd91142(0x85d)]), _0x3697cd[_0xd91142(0x216)](this[_0xd91142(0xf3b)], _0x5b3df1, _0x359f23['_tempVector34']), _0x3697cd[_0xd91142(0x28a)](_0x359f23['_tempVector33'], _0x359f23['_tempVector34'], _0x5f36dd), _0x3697cd[_0xd91142(0x217)](_0x359f23[_0xd91142(0x85d)], _0x5f36dd, _0x261266);
                break;
            case _0x18be32['TrailAlignment'][_0xd91142(0xf1a)]:
                _0x3697cd[_0xd91142(0x28a)](_0x5c3fd1, this[_0xd91142(0xf3b)], _0x5f36dd);
                var _0x36dec9 = _0x359f23[_0xd91142(0x855)];
                this[_0xd91142(0x3dc)]['_owner'][_0xd91142(0x3d6)][_0xd91142(0x493)](_0x36dec9), _0x3697cd[_0xd91142(0x217)](_0x5f36dd, _0x36dec9, _0x261266);
            }
            _0x3697cd[_0xd91142(0x214)](_0x261266, _0x261266), _0x3697cd[_0xd91142(0x1f9)](_0x261266, this[_0xd91142(0x3dc)]['widthMultiplier'] / 0x2, _0x261266);
            var _0xfe1770, _0x185c15, _0x1417bc = _0x3697cd[_0xd91142(0x888)](_0x5f36dd);
            this[_0xd91142(0xf3c)] && (this[_0xd91142(0xf3e)](_0x5c3fd1, _0x261266, this['_endIndex'] - 0x1), this[_0xd91142(0xf3c)] = !0x1), _0x1417bc - this[_0xd91142(0x3dc)][_0xd91142(0xf3f)] >= _0x255128['zeroTolerance'] ? (this[_0xd91142(0xf2a)] ? (_0xfe1770 = this[_0xd91142(0xf29)] - 0x1, _0x185c15 = _0x1417bc - this[_0xd91142(0xf39)][_0xfe1770], this['_updateVerticesByPosition'](_0x5c3fd1, _0x261266, _0x1417bc, _0xfe1770), this[_0xd91142(0x3dc)][_0xd91142(0xf40)] += _0x185c15) : (this['_endIndex'] === this[_0xd91142(0xf2f)] && this[_0xd91142(0xf38)](), this[_0xd91142(0xf41)](_0x5c3fd1, _0x261266, _0x1417bc, this[_0xd91142(0xf29)]), this[_0xd91142(0x3dc)][_0xd91142(0xf40)] += _0x1417bc, this[_0xd91142(0xf29)]++), _0x5c3fd1[_0xd91142(0x1fc)](this[_0xd91142(0xf3b)]), this[_0xd91142(0xf2a)] = !0x1) : (this['_isTempEndVertex'] ? (_0xfe1770 = this[_0xd91142(0xf29)] - 0x1, _0x185c15 = _0x1417bc - this[_0xd91142(0xf39)][_0xfe1770], this[_0xd91142(0xf41)](_0x5c3fd1, _0x261266, _0x1417bc, _0xfe1770), this[_0xd91142(0x3dc)][_0xd91142(0xf40)] += _0x185c15) : (this['_endIndex'] === this[_0xd91142(0xf2f)] && this[_0xd91142(0xf38)](), this[_0xd91142(0xf41)](_0x5c3fd1, _0x261266, _0x1417bc, this[_0xd91142(0xf29)]), this[_0xd91142(0x3dc)][_0xd91142(0xf40)] += _0x1417bc, this[_0xd91142(0xf29)]++), this[_0xd91142(0xf2a)] = !0x0);
        }
        [_0x6027f5(0xf3e)](_0x35a187, _0x103e49, _0x1e558e) {
            var _0x381ff3 = _0x6027f5, _0x261c9b = 0x2 * this[_0x381ff3(0xf25)] * _0x1e558e, _0x564d7b = this[_0x381ff3(0x3dc)][_0x381ff3(0xf3a)];
            this['_vertices1'][_0x261c9b] = _0x35a187['x'], this[_0x381ff3(0xf2b)][_0x261c9b + 0x1] = _0x35a187['y'], this[_0x381ff3(0xf2b)][_0x261c9b + 0x2] = _0x35a187['z'], this['_vertices1'][_0x261c9b + 0x3] = -_0x103e49['x'], this[_0x381ff3(0xf2b)][_0x261c9b + 0x4] = -_0x103e49['y'], this[_0x381ff3(0xf2b)][_0x261c9b + 0x5] = -_0x103e49['z'], this['_vertices1'][_0x261c9b + 0x6] = _0x564d7b, this['_vertices1'][_0x261c9b + 0x7] = 0x1, this[_0x381ff3(0xf2b)][_0x261c9b + 0x8] = _0x35a187['x'], this[_0x381ff3(0xf2b)][_0x261c9b + 0x9] = _0x35a187['y'], this['_vertices1'][_0x261c9b + 0xa] = _0x35a187['z'], this[_0x381ff3(0xf2b)][_0x261c9b + 0xb] = _0x103e49['x'], this[_0x381ff3(0xf2b)][_0x261c9b + 0xc] = _0x103e49['y'], this[_0x381ff3(0xf2b)][_0x261c9b + 0xd] = _0x103e49['z'], this[_0x381ff3(0xf2b)][_0x261c9b + 0xe] = _0x564d7b, this['_vertices1'][_0x261c9b + 0xf] = 0x0;
            var _0x3714e9 = this[_0x381ff3(0x3dc)][_0x381ff3(0x3dc)][_0x381ff3(0xf30)][_0x381ff3(0x812)], _0x3907d8 = _0x3714e9[_0x381ff3(0xa47)](), _0x3bf3f6 = _0x3714e9['getMax'](), _0xf9fc2e = _0x359f23['_tempVector35'], _0x2ac255 = _0x359f23[_0x381ff3(0x86f)], _0x3211b6 = _0x359f23[_0x381ff3(0x855)];
            _0x3697cd[_0x381ff3(0x207)](_0x35a187, _0x103e49, _0xf9fc2e), _0x3697cd['subtract'](_0x35a187, _0x103e49, _0x2ac255), _0x3697cd['min'](_0x2ac255, _0xf9fc2e, _0x3211b6), _0x3697cd[_0x381ff3(0x212)](_0x3907d8, _0x3211b6, _0x3907d8), _0x3714e9[_0x381ff3(0xa62)](_0x3907d8), _0x3697cd[_0x381ff3(0x20c)](_0xf9fc2e, _0x2ac255, _0x3211b6), _0x3697cd['max'](_0x3bf3f6, _0x3211b6, _0x3bf3f6), _0x3714e9['setMax'](_0x3bf3f6);
            var _0x377623 = 0x2 * this[_0x381ff3(0xf25)];
            this[_0x381ff3(0xf31)][_0x381ff3(0x45d)](this[_0x381ff3(0xf2b)][_0x381ff3(0x454)], 0x4 * _0x261c9b, 0x4 * _0x261c9b, 0x4 * _0x377623);
        }
        [_0x6027f5(0xf41)](_0x4259a3, _0x162dda, _0x37c096, _0x43304a) {
            var _0x481c58 = _0x6027f5;
            this[_0x481c58(0xf3e)](_0x4259a3, _0x162dda, _0x43304a), this[_0x481c58(0xf39)][_0x43304a] = _0x37c096, this[_0x481c58(0xf34)][_0x43304a] = this[_0x481c58(0x3dc)][_0x481c58(0xf3a)];
        }
        [_0x6027f5(0xf42)]() {
            var _0x529238 = _0x6027f5, _0x364d72, _0x4dbc72, _0x26710d;
            if (this[_0x529238(0xf2e)]) {
                _0x364d72 = this[_0x529238(0x3dc)][_0x529238(0x3dc)]['trailRenderer']['bounds'];
                var _0x52835a = this[_0x529238(0x3dc)][_0x529238(0x3dc)][_0x529238(0x3d6)][_0x529238(0x5a2)];
                _0x364d72[_0x529238(0xa62)](_0x52835a), _0x364d72['setMax'](_0x52835a), _0x4dbc72 = _0x364d72['getMin'](), _0x26710d = _0x364d72['getMax']();
            }
            for (var _0x118b2a = this[_0x529238(0xf29)], _0x42bf72 = 0x0, _0x370521 = this['_owner'][_0x529238(0xf43)], _0x3b359d = _0x370521[_0x529238(0xcfa)] - 0x1, _0x300139 = _0x370521[_0x529238(0xf44)] - 0x1, _0xe2a80e = this[_0x529238(0x3dc)][_0x529238(0xf40)], _0x16efa1 = 0x2 * this['_floatCountPerVertices2'], _0x3848b2 = this[_0x529238(0xf28)]; _0x3848b2 < _0x118b2a; _0x3848b2++) {
                var _0x3bb17d, _0xe1ebe0;
                _0x3848b2 !== this['_activeIndex'] && (_0x42bf72 += this['_subDistance'][_0x3848b2]), this['_owner'][_0x529238(0xf45)] == _0x3b4301[_0x529238(0xf46)] ? _0xe1ebe0 = _0x3bb17d = 0x1 - _0x42bf72 / _0xe2a80e : (_0xe1ebe0 = 0x1 - _0x42bf72 / _0xe2a80e, _0x3bb17d = 0x1 - (_0xe2a80e - _0x42bf72)), _0x300139 = _0x370521['evaluateColorRGB'](_0xe1ebe0, this[_0x529238(0xf2d)], _0x300139, !0x0), _0x3b359d = _0x370521['evaluateColorAlpha'](_0xe1ebe0, this[_0x529238(0xf2d)], _0x3b359d, !0x0);
                var _0x582d2e = _0x3848b2 * _0x16efa1;
                if (this[_0x529238(0xf2c)][_0x582d2e + 0x0] = _0x3bb17d, this[_0x529238(0xf2c)][_0x582d2e + 0x1] = this[_0x529238(0xf2d)]['r'], this[_0x529238(0xf2c)][_0x582d2e + 0x2] = this[_0x529238(0xf2d)]['g'], this['_vertices2'][_0x582d2e + 0x3] = this[_0x529238(0xf2d)]['b'], this['_vertices2'][_0x582d2e + 0x4] = this[_0x529238(0xf2d)]['a'], this[_0x529238(0xf2c)][_0x582d2e + 0x5] = _0x3bb17d, this[_0x529238(0xf2c)][_0x582d2e + 0x6] = this['tmpColor']['r'], this[_0x529238(0xf2c)][_0x582d2e + 0x7] = this['tmpColor']['g'], this['_vertices2'][_0x582d2e + 0x8] = this['tmpColor']['b'], this[_0x529238(0xf2c)][_0x582d2e + 0x9] = this['tmpColor']['a'], this['_disappearBoundsMode']) {
                    var _0x54dadb = 0x2 * this[_0x529238(0xf25)] * _0x3848b2, _0x56647d = _0x359f23[_0x529238(0x855)], _0x1ef779 = _0x359f23['_tempVector33'], _0x376f42 = _0x359f23[_0x529238(0x85b)];
                    _0x56647d[_0x529238(0x1f8)](this['_vertices1'][_0x54dadb + 0x0], this['_vertices1'][_0x54dadb + 0x1], this[_0x529238(0xf2b)][_0x54dadb + 0x2]), _0x1ef779[_0x529238(0x1f8)](this['_vertices1'][_0x54dadb + 0x3], this['_vertices1'][_0x54dadb + 0x4], this[_0x529238(0xf2b)][_0x54dadb + 0x5]), _0x3697cd['add'](_0x56647d, _0x1ef779, _0x376f42), _0x3697cd[_0x529238(0x212)](_0x376f42, _0x4dbc72, _0x4dbc72), _0x3697cd['max'](_0x376f42, _0x26710d, _0x26710d), _0x3697cd[_0x529238(0x28a)](_0x56647d, _0x1ef779, _0x376f42), _0x3697cd['min'](_0x376f42, _0x4dbc72, _0x4dbc72), _0x3697cd['max'](_0x376f42, _0x26710d, _0x26710d);
                }
            }
            this[_0x529238(0xf2e)] && (_0x364d72[_0x529238(0xa62)](_0x4dbc72), _0x364d72[_0x529238(0xa49)](_0x26710d), this[_0x529238(0xf2e)] = !0x1);
            var _0x4d861c = this[_0x529238(0xf28)] * _0x16efa1;
            this['_vertexBuffer2'][_0x529238(0x45d)](this[_0x529238(0xf2c)][_0x529238(0x454)], 0x4 * _0x4d861c, 0x4 * _0x4d861c, 0x4 * (_0x118b2a * _0x16efa1 - _0x4d861c));
        }
        [_0x6027f5(0xf47)]() {
            var _0x438fe9 = _0x6027f5;
            for (var _0x2c7be2 = this['_endIndex'], _0x4025d0 = this[_0x438fe9(0xf28)]; _0x4025d0 < _0x2c7be2 && this[_0x438fe9(0x3dc)][_0x438fe9(0xf3a)] - this[_0x438fe9(0xf34)][_0x4025d0] >= this[_0x438fe9(0x3dc)][_0x438fe9(0x273)] + _0x255128[_0x438fe9(0x1f4)]; _0x4025d0++) {
                var _0x12f5b6 = _0x4025d0 + 0x1;
                if (_0x12f5b6 !== _0x2c7be2 && (this['_owner'][_0x438fe9(0xf40)] -= this[_0x438fe9(0xf39)][_0x12f5b6]), this[_0x438fe9(0xf2a)] && _0x12f5b6 === _0x2c7be2 - 0x1) {
                    var _0x2af1fc = this[_0x438fe9(0xf3b)];
                    _0x2af1fc['x'] = this[_0x438fe9(0xf2b)][0x0], _0x2af1fc['y'] = this[_0x438fe9(0xf2b)][0x1], _0x2af1fc['z'] = this[_0x438fe9(0xf2b)][0x2], this[_0x438fe9(0xf2a)] = !0x1;
                }
                this[_0x438fe9(0xf28)]++, this[_0x438fe9(0xf2e)] = !0x0;
            }
        }
        [_0x6027f5(0xa55)]() {
            var _0x368601 = _0x6027f5;
            return _0x359f23[_0x368601(0xa5e)];
        }
        ['_prepareRender'](_0x49ac56) {
            var _0x1b238c = _0x6027f5;
            return this[_0x1b238c(0xf29)] - this['_activeIndex'] > 0x1;
        }
        [_0x6027f5(0x5e8)](_0x4dc86e) {
            var _0x20c733 = _0x6027f5;
            this[_0x20c733(0x4f8)][_0x20c733(0x452)]();
            var _0x16ecee = _0x387b86['LayaGL'][_0x20c733(0x304)], _0x183f76 = 0x2 * this[_0x20c733(0xf28)], _0x2c1c61 = 0x2 * this['_endIndex'] - _0x183f76;
            _0x16ecee[_0x20c733(0x500)](_0x16ecee[_0x20c733(0x501)], _0x183f76, _0x2c1c61), _0x387b86['Stat']['renderBatches']++, _0x387b86[_0x20c733(0x4dc)][_0x20c733(0x62e)] += _0x2c1c61 - 0x2;
        }
        [_0x6027f5(0x364)]() {
            var _0x3a9cb4 = _0x6027f5;
            super[_0x3a9cb4(0x364)]();
            var _0x1f317d = this['_vertexBuffer1'][_0x3a9cb4(0x451)] + this[_0x3a9cb4(0xf32)][_0x3a9cb4(0x451)];
            _0x387b86[_0x3a9cb4(0x324)][_0x3a9cb4(0xcd7)](-_0x1f317d, -_0x1f317d), this[_0x3a9cb4(0x4f8)]['destroy'](), this[_0x3a9cb4(0xf31)][_0x3a9cb4(0x364)](), this[_0x3a9cb4(0xf32)][_0x3a9cb4(0x364)](), this[_0x3a9cb4(0x4f8)] = null, this[_0x3a9cb4(0xf2b)] = null, this[_0x3a9cb4(0xf31)] = null, this[_0x3a9cb4(0xf2c)] = null, this['_vertexBuffer2'] = null, this['_subBirthTime'] = null, this[_0x3a9cb4(0xf39)] = null, this[_0x3a9cb4(0xf3b)] = null, this['_disappearBoundsMode'] = !0x1;
        }
        [_0x6027f5(0x44c)]() {
            var _0x4509eb = _0x6027f5;
            this['_activeIndex'] = 0x0, this[_0x4509eb(0xf29)] = 0x0, this[_0x4509eb(0xf2e)] = !0x1, this[_0x4509eb(0xf34)][_0x4509eb(0xf48)](0x0), this[_0x4509eb(0xf39)][_0x4509eb(0xf48)](0x0), this['_segementCount'] = 0x0, this['_isTempEndVertex'] = !0x1, this['_needAddFirstVertex'] = !0x1, this[_0x4509eb(0xf3b)][_0x4509eb(0x1f8)](0x0, 0x0, 0x0);
        }
    }
    _0x359f23[_0x6027f5(0xf49)] = 0x0, _0x359f23[_0x6027f5(0xf4a)] = 0x1, _0x359f23['_tempVector30'] = new _0x3697cd(), _0x359f23[_0x6027f5(0x3a1)] = new _0x3697cd(), _0x359f23[_0x6027f5(0x855)] = new _0x3697cd(), _0x359f23[_0x6027f5(0x85d)] = new _0x3697cd(), _0x359f23['_tempVector34'] = new _0x3697cd(), _0x359f23[_0x6027f5(0x86e)] = new _0x3697cd(), _0x359f23[_0x6027f5(0x86f)] = new _0x3697cd(), _0x359f23[_0x6027f5(0xa5e)] = _0x2be7a6[_0x6027f5(0xa6a)]++;
    class _0x54ef03 {
        constructor(_0x432132) {
            var _0x3a1c0a = _0x6027f5;
            this[_0x3a1c0a(0xf40)] = 0x0, this['_lastPosition'] = new _0x3697cd(), this[_0x3a1c0a(0xf3a)] = 0x0, this['alignment'] = _0x54ef03['ALIGNMENT_VIEW'], this[_0x3a1c0a(0x3dc)] = _0x432132, this['_initDefaultData'](), this[_0x3a1c0a(0xf4b)]();
        }
        get [_0x6027f5(0x273)]() {
            var _0x2c49ab = _0x6027f5;
            return this[_0x2c49ab(0xba0)];
        }
        set [_0x6027f5(0x273)](_0x51028f) {
            var _0x50fbdd = _0x6027f5;
            this[_0x50fbdd(0xba0)] = _0x51028f, this[_0x50fbdd(0x3dc)][_0x50fbdd(0x5e8)][_0x50fbdd(0x4e2)]['setNumber'](_0x54ef03[_0x50fbdd(0xf4c)], _0x51028f);
        }
        get [_0x6027f5(0xf3f)]() {
            var _0x4c75ad = _0x6027f5;
            return this[_0x4c75ad(0xf4d)];
        }
        set [_0x6027f5(0xf3f)](_0x6cd8e6) {
            this['_minVertexDistance'] = _0x6cd8e6;
        }
        get [_0x6027f5(0xf4e)]() {
            return this['_widthMultiplier'];
        }
        set [_0x6027f5(0xf4e)](_0xc50cbf) {
            this['_widthMultiplier'] = _0xc50cbf;
        }
        get [_0x6027f5(0xf4f)]() {
            return this['_widthCurve'];
        }
        set [_0x6027f5(0xf4f)](_0x4062c1) {
            var _0x39f1ce = _0x6027f5;
            this['_widthCurve'] = _0x4062c1;
            var _0x7eec4a, _0x312b43, _0x50b79e = new Float32Array(0x4 * _0x4062c1['length']), _0x4fc59c = 0x0;
            for (_0x7eec4a = 0x0, _0x312b43 = _0x4062c1[_0x39f1ce(0x205)]; _0x7eec4a < _0x312b43; _0x7eec4a++)
                _0x50b79e[_0x4fc59c++] = _0x4062c1[_0x7eec4a][_0x39f1ce(0x273)], _0x50b79e[_0x4fc59c++] = _0x4062c1[_0x7eec4a]['inTangent'], _0x50b79e[_0x4fc59c++] = _0x4062c1[_0x7eec4a][_0x39f1ce(0x2a2)], _0x50b79e[_0x4fc59c++] = _0x4062c1[_0x7eec4a][_0x39f1ce(0x2a1)];
            this[_0x39f1ce(0x3dc)][_0x39f1ce(0x5e8)][_0x39f1ce(0x4e2)]['setBuffer'](_0x54ef03[_0x39f1ce(0xf50)], _0x50b79e), this['_owner']['_render']['_shaderValues']['setInt'](_0x54ef03[_0x39f1ce(0xf51)], _0x4062c1[_0x39f1ce(0x205)]);
        }
        get [_0x6027f5(0xf43)]() {
            return this['_colorGradient'];
        }
        set [_0x6027f5(0xf43)](_0x5c6ef0) {
            var _0x17ee85 = _0x6027f5;
            this[_0x17ee85(0xf52)] = _0x5c6ef0;
        }
        get [_0x6027f5(0xf45)]() {
            var _0x4c3ebf = _0x6027f5;
            return this[_0x4c3ebf(0xf53)];
        }
        set [_0x6027f5(0xf45)](_0x3fff13) {
            this['_textureMode'] = _0x3fff13;
        }
        ['addRenderElement']() {
            var _0x181882 = _0x6027f5, _0xad9ed9 = this['_owner'][_0x181882(0x5e8)], _0x1e95df = _0xad9ed9['_renderElements'], _0x2a3d74 = _0xad9ed9['sharedMaterials'][0x0];
            _0x2a3d74 || (_0x2a3d74 = _0x52600c['defaultMaterial']);
            var _0x229899 = new _0x50feff();
            _0x229899['setTransform'](this[_0x181882(0x3dc)][_0x181882(0x3d5)]), _0x229899[_0x181882(0x4ff)] = _0xad9ed9, _0x229899[_0x181882(0x8d5)] = _0x2a3d74, this[_0x181882(0xf54)] = new _0x359f23(this), _0x229899['setGeometry'](this[_0x181882(0xf54)]), _0x1e95df[_0x181882(0x2ac)](_0x229899);
        }
        [_0x6027f5(0x388)](_0x17748a) {
            var _0x27e2bc = _0x6027f5, _0x43ca59 = this[_0x27e2bc(0x3dc)]['_render'];
            this[_0x27e2bc(0xf3a)] += _0x17748a[_0x27e2bc(0x5ca)][_0x27e2bc(0x3c0)][_0x27e2bc(0x3c1)] / 0x3e8, _0x43ca59['_shaderValues'][_0x27e2bc(0x4a3)](_0x54ef03['CURTIME'], this[_0x27e2bc(0xf3a)]);
            var _0x39cd1c = this[_0x27e2bc(0x3dc)][_0x27e2bc(0x3d6)][_0x27e2bc(0x5a2)], _0x3dd741 = _0x43ca59[_0x27e2bc(0x600)][0x0]['_geometry'];
            _0x3dd741['_updateDisappear'](), _0x3dd741['_updateTrail'](_0x17748a[_0x27e2bc(0x64c)], this[_0x27e2bc(0xf55)], _0x39cd1c), _0x3dd741[_0x27e2bc(0xf42)](), _0x39cd1c[_0x27e2bc(0x1fc)](this[_0x27e2bc(0xf55)]);
        }
        ['_initDefaultData']() {
            var _0x5dc85f = _0x6027f5;
            this['time'] = 0x5, this[_0x5dc85f(0xf3f)] = 0.1, this[_0x5dc85f(0xf4e)] = 0x1, this[_0x5dc85f(0xf45)] = _0x3b4301[_0x5dc85f(0xf46)];
            var _0x1f59db = [], _0x243dc4 = new _0x25af36();
            _0x243dc4[_0x5dc85f(0x273)] = 0x0, _0x243dc4[_0x5dc85f(0x274)] = 0x0, _0x243dc4[_0x5dc85f(0x2a2)] = 0x0, _0x243dc4[_0x5dc85f(0x2a1)] = 0x1, _0x1f59db[_0x5dc85f(0x2ac)](_0x243dc4);
            var _0x4529a5 = new _0x25af36();
            _0x4529a5[_0x5dc85f(0x273)] = 0x1, _0x4529a5[_0x5dc85f(0x274)] = 0x0, _0x4529a5['outTangent'] = 0x0, _0x4529a5[_0x5dc85f(0x2a1)] = 0x1, _0x1f59db[_0x5dc85f(0x2ac)](_0x4529a5), this[_0x5dc85f(0xf4f)] = _0x1f59db;
            var _0x5c93e7 = new _0x1d08e8(0x2, 0x2);
            _0x5c93e7[_0x5dc85f(0xcf8)] = _0x117a28[_0x5dc85f(0xcf1)], _0x5c93e7[_0x5dc85f(0xcfc)](0x0, _0x441c6d['WHITE']), _0x5c93e7[_0x5dc85f(0xcfc)](0x1, _0x441c6d[_0x5dc85f(0xf56)]), _0x5c93e7['addColorAlpha'](0x0, 0x1), _0x5c93e7[_0x5dc85f(0xcfe)](0x1, 0x1), this[_0x5dc85f(0xf43)] = _0x5c93e7;
        }
        [_0x6027f5(0x364)]() {
            var _0xa155b8 = _0x6027f5;
            this[_0xa155b8(0xf54)]['destroy'](), this[_0xa155b8(0xf54)] = null, this[_0xa155b8(0xf57)] = null, this[_0xa155b8(0xf52)] = null;
        }
        [_0x6027f5(0x44c)]() {
            var _0x54f56b = _0x6027f5;
            this[_0x54f56b(0xf54)][_0x54f56b(0x44c)](), this['_lastPosition']['setValue'](0x0, 0x0, 0x0), this['_curtime'] = 0x0, this['_totalLength'] = 0x0;
        }
    }
    _0x54ef03['CURTIME'] = _0x3a9f31[_0x6027f5(0x553)]('u_CurTime'), _0x54ef03[_0x6027f5(0xf4c)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf58)), _0x54ef03[_0x6027f5(0xf50)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf59)), _0x54ef03[_0x6027f5(0xf51)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf5a)), _0x54ef03['ALIGNMENT_VIEW'] = 0x0, _0x54ef03[_0x6027f5(0xf4a)] = 0x1;
    class _0x3366d4 extends _0x40d4de {
        constructor(_0x3475c1) {
            var _0x630f43 = _0x6027f5;
            super(_0x3475c1), this[_0x630f43(0x5d7)] = new _0x6b4d98();
        }
        ['_calculateBoundingBox']() {
        }
        [_0x6027f5(0x818)](_0x1090e3, _0x366860) {
            var _0x5b187e = _0x6027f5;
            return this[_0x5b187e(0x3dc)][_0x5b187e(0xf5b)][_0x5b187e(0x388)](_0x366860), !_0x1090e3 || _0x1090e3[_0x5b187e(0xcc9)](this[_0x5b187e(0x812)][_0x5b187e(0x813)]());
        }
        ['_updateForNative'](_0x12b51b) {
            var _0x507897 = _0x6027f5;
            this[_0x507897(0x3dc)][_0x507897(0xf5b)][_0x507897(0x388)](_0x12b51b);
        }
        [_0x6027f5(0x5f6)](_0xa01e8, _0xa4e150) {
            super['_renderUpdate'](_0xa01e8, _0xa4e150);
        }
        [_0x6027f5(0x5f7)](_0x1ff828, _0x5acb8c) {
            var _0x4e3857 = _0x6027f5, _0x193123 = _0x1ff828[_0x4e3857(0x5dd)];
            _0x5acb8c ? (_0x6b4d98[_0x4e3857(0x27b)](_0x193123, _0x5acb8c[_0x4e3857(0x3d8)], this[_0x4e3857(0x5d7)]), this[_0x4e3857(0x4e2)][_0x4e3857(0x4aa)](_0x44a154[_0x4e3857(0x5df)], this['_projectionViewWorldMatrix'])) : this[_0x4e3857(0x4e2)]['setMatrix4x4'](_0x44a154[_0x4e3857(0x5df)], _0x193123);
        }
    }
    class _0x8b289e extends _0x221092 {
        constructor(_0x323960 = null) {
            var _0x438ecc = _0x6027f5;
            super(_0x323960), this[_0x438ecc(0x5e8)] = new _0x3366d4(this), this[_0x438ecc(0xb1e)] = new _0x54ef03(this);
        }
        static ['__init__']() {
        }
        get [_0x6027f5(0xf5b)]() {
            var _0x34a6f6 = _0x6027f5;
            return this[_0x34a6f6(0xb1e)];
        }
        get ['trailRenderer']() {
            var _0xce1cc = _0x6027f5;
            return this[_0xce1cc(0x5e8)];
        }
        [_0x6027f5(0x67c)](_0x214f4e, _0x97d6ac) {
            var _0x52a1e3 = _0x6027f5;
            super['_parse'](_0x214f4e, _0x97d6ac);
            var _0x28cbd5, _0x2dd8fc, _0x37137e = this[_0x52a1e3(0x5e8)], _0x523ce2 = this[_0x52a1e3(0xb1e)], _0x966e23 = _0x214f4e[_0x52a1e3(0xcee)];
            if (_0x966e23) {
                var _0x169c9a = _0x37137e['sharedMaterials'], _0x61ec81 = _0x966e23[_0x52a1e3(0x205)];
                for (_0x169c9a['length'] = _0x61ec81, _0x28cbd5 = 0x0; _0x28cbd5 < _0x61ec81; _0x28cbd5++)
                    _0x169c9a[_0x28cbd5] = _0x387b86[_0x52a1e3(0x3bd)]['getRes'](_0x966e23[_0x28cbd5][_0x52a1e3(0x3b8)]);
                _0x37137e['sharedMaterials'] = _0x169c9a;
            }
            _0x523ce2['time'] = _0x214f4e[_0x52a1e3(0x273)], _0x523ce2[_0x52a1e3(0xf3f)] = _0x214f4e[_0x52a1e3(0xf3f)], _0x523ce2[_0x52a1e3(0xf4e)] = _0x214f4e[_0x52a1e3(0xf4e)], _0x523ce2['textureMode'] = _0x214f4e[_0x52a1e3(0xf45)], null != _0x214f4e[_0x52a1e3(0xf3d)] && (_0x523ce2[_0x52a1e3(0xf3d)] = _0x214f4e[_0x52a1e3(0xf3d)]);
            var _0x10aaaa = [], _0x5c9b74 = _0x214f4e[_0x52a1e3(0xf4f)];
            for (_0x28cbd5 = 0x0, _0x2dd8fc = _0x5c9b74[_0x52a1e3(0x205)]; _0x28cbd5 < _0x2dd8fc; _0x28cbd5++) {
                var _0x21c17a = new _0x25af36();
                _0x21c17a[_0x52a1e3(0x273)] = _0x5c9b74[_0x28cbd5][_0x52a1e3(0x273)], _0x21c17a[_0x52a1e3(0x274)] = _0x5c9b74[_0x28cbd5][_0x52a1e3(0x274)], _0x21c17a[_0x52a1e3(0x2a2)] = _0x5c9b74[_0x28cbd5][_0x52a1e3(0x2a2)], _0x21c17a[_0x52a1e3(0x2a1)] = _0x5c9b74[_0x28cbd5]['value'], _0x10aaaa[_0x52a1e3(0x2ac)](_0x21c17a);
            }
            _0x523ce2[_0x52a1e3(0xf4f)] = _0x10aaaa;
            var _0x438f82 = _0x214f4e[_0x52a1e3(0xf43)], _0x367910 = _0x438f82[_0x52a1e3(0xf5c)], _0x2c21db = _0x438f82[_0x52a1e3(0xf5d)], _0x402bca = new _0x1d08e8(_0x367910[_0x52a1e3(0x205)], _0x2c21db[_0x52a1e3(0x205)]);
            for (_0x402bca[_0x52a1e3(0xcf8)] = _0x438f82[_0x52a1e3(0xcf8)], _0x28cbd5 = 0x0, _0x2dd8fc = _0x367910[_0x52a1e3(0x205)]; _0x28cbd5 < _0x2dd8fc; _0x28cbd5++) {
                var _0x553953 = _0x367910[_0x28cbd5];
                _0x402bca['addColorRGB'](_0x553953[_0x52a1e3(0x273)], new _0x441c6d(_0x553953[_0x52a1e3(0x2a1)][0x0], _0x553953[_0x52a1e3(0x2a1)][0x1], _0x553953[_0x52a1e3(0x2a1)][0x2], 0x1));
            }
            for (_0x28cbd5 = 0x0, _0x2dd8fc = _0x2c21db[_0x52a1e3(0x205)]; _0x28cbd5 < _0x2dd8fc; _0x28cbd5++) {
                var _0x114f81 = _0x2c21db[_0x28cbd5];
                _0x402bca[_0x52a1e3(0xcfe)](_0x114f81[_0x52a1e3(0x273)], _0x114f81[_0x52a1e3(0x2a1)]);
            }
            _0x523ce2[_0x52a1e3(0xf43)] = _0x402bca;
        }
        ['_onActive']() {
            var _0x2855aa = _0x6027f5;
            super[_0x2855aa(0x8f7)](), this[_0x2855aa(0x3d5)][_0x2855aa(0x5a2)][_0x2855aa(0x1fc)](this['_geometryFilter'][_0x2855aa(0xf55)]);
        }
        [_0x6027f5(0x345)](_0x798dc2, _0x470753, _0x16586d) {
            var _0x5c2de5 = _0x6027f5, _0x525dde, _0x58cc06;
            super['_cloneTo'](_0x798dc2, _0x470753, _0x16586d);
            var _0x322416 = _0x798dc2, _0x2982b6 = _0x322416[_0x5c2de5(0xf5b)];
            _0x2982b6[_0x5c2de5(0x273)] = this[_0x5c2de5(0xf5b)][_0x5c2de5(0x273)], _0x2982b6[_0x5c2de5(0xf3f)] = this['trailFilter'][_0x5c2de5(0xf3f)], _0x2982b6[_0x5c2de5(0xf4e)] = this[_0x5c2de5(0xf5b)]['widthMultiplier'], _0x2982b6[_0x5c2de5(0xf45)] = this['trailFilter']['textureMode'], _0x2982b6['alignment'] = this[_0x5c2de5(0xf5b)][_0x5c2de5(0xf3d)];
            var _0x372865 = this[_0x5c2de5(0xf5b)]['widthCurve'], _0x25b3cb = [];
            for (_0x525dde = 0x0, _0x58cc06 = _0x372865['length']; _0x525dde < _0x58cc06; _0x525dde++) {
                var _0x5c32d8 = new _0x25af36();
                _0x372865[_0x525dde][_0x5c2de5(0x1fc)](_0x5c32d8), _0x25b3cb[_0x5c2de5(0x2ac)](_0x5c32d8);
            }
            _0x2982b6[_0x5c2de5(0xf4f)] = _0x25b3cb;
            var _0x34a592 = new _0x1d08e8(this[_0x5c2de5(0xf5b)][_0x5c2de5(0xf43)][_0x5c2de5(0xf5e)], this[_0x5c2de5(0xf5b)][_0x5c2de5(0xf43)][_0x5c2de5(0xcfb)]);
            this[_0x5c2de5(0xf5b)][_0x5c2de5(0xf43)][_0x5c2de5(0x1fc)](_0x34a592), _0x2982b6[_0x5c2de5(0xf43)] = _0x34a592, _0x322416['trailRenderer'][_0x5c2de5(0xade)] = this['trailRenderer'][_0x5c2de5(0xade)];
        }
        [_0x6027f5(0x364)](_0x5655d0 = !0x0) {
            var _0x2ac0b1 = _0x6027f5;
            this[_0x2ac0b1(0x5cf)] || (super[_0x2ac0b1(0x364)](_0x5655d0), this[_0x2ac0b1(0xb1e)]['destroy'](), this['_geometryFilter'] = null);
        }
        ['clear']() {
            var _0x1ee978 = _0x6027f5;
            this[_0x1ee978(0xb1e)][_0x1ee978(0x44c)]();
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x8b289e();
        }
    }
    class _0x14d998 {
        constructor(_0x1eea9c, _0x208100, _0x515974, _0x1346cf) {
            var _0x59bbeb = _0x6027f5;
            this[_0x59bbeb(0x57f)] = _0x1eea9c, this[_0x59bbeb(0xf5f)] = _0x208100, this[_0x59bbeb(0xf60)] = _0x515974, this[_0x59bbeb(0xf61)] = _0x1346cf;
        }
        static [_0x6027f5(0x230)]() {
            var _0x16a710 = _0x6027f5;
            _0x14d998[_0x16a710(0x455)] = new _0x4b2139(0x28, [
                new _0x25649b(0x0, _0x53b5cc[_0x16a710(0x46b)], _0x14d998[_0x16a710(0xf62)]),
                new _0x25649b(0xc, _0x53b5cc[_0x16a710(0x46b)], _0x14d998[_0x16a710(0xf63)]),
                new _0x25649b(0x18, _0x53b5cc[_0x16a710(0x575)], _0x14d998['TERRAIN_TEXTURECOORDINATE0']),
                new _0x25649b(0x20, _0x53b5cc[_0x16a710(0x575)], _0x14d998[_0x16a710(0xf64)])
            ]);
        }
        static get [_0x6027f5(0x456)]() {
            var _0x2b3372 = _0x6027f5;
            return _0x14d998[_0x2b3372(0x455)];
        }
        get ['position']() {
            return this['_position'];
        }
        get [_0x6027f5(0x82f)]() {
            var _0x56aa14 = _0x6027f5;
            return this[_0x56aa14(0xf5f)];
        }
        get [_0x6027f5(0xf65)]() {
            var _0x1d0a21 = _0x6027f5;
            return this[_0x1d0a21(0xf60)];
        }
        get ['textureCoord1']() {
            var _0x34852d = _0x6027f5;
            return this[_0x34852d(0xf61)];
        }
        get [_0x6027f5(0x456)]() {
            var _0xd7903 = _0x6027f5;
            return _0x14d998[_0xd7903(0x455)];
        }
    }
    _0x14d998[_0x6027f5(0xf62)] = 0x0, _0x14d998[_0x6027f5(0xf63)] = 0x1, _0x14d998['TERRAIN_TEXTURECOORDINATE0'] = 0x2, _0x14d998[_0x6027f5(0xf64)] = 0x3;
    class _0x5e1dab extends _0x2be7a6 {
        constructor(_0x13e1e8) {
            var _0x3d8553 = _0x6027f5;
            super(), this[_0x3d8553(0x5bc)] = ++_0x5e1dab[_0x3d8553(0x4e9)], this[_0x3d8553(0x5d9)] = _0x13e1e8, this[_0x3d8553(0xefc)] = [], this[_0x3d8553(0xf66)] = [], this[_0x3d8553(0xf67)] = [];
        }
        get [_0x6027f5(0xa0b)]() {
            var _0x12b2b3 = _0x6027f5;
            return this[_0x12b2b3(0x62b)];
        }
        [_0x6027f5(0xf68)](_0x2dcf17, _0x812590, _0x4f9de3 = _0x18be32[_0x6027f5(0x8c9)]['UInt16']) {
            var _0x170ce9 = _0x6027f5;
            this[_0x170ce9(0x62d)] = _0x2dcf17, this[_0x170ce9(0x62b)] = _0x812590, _0x4f9de3 == _0x18be32[_0x170ce9(0x8c9)][_0x170ce9(0x8cb)] ? this[_0x170ce9(0xa99)] = new Uint16Array(this[_0x170ce9(0x629)][_0x170ce9(0x319)]()['buffer'], 0x2 * _0x2dcf17, _0x812590) : this[_0x170ce9(0xa99)] = new Uint32Array(this[_0x170ce9(0x629)][_0x170ce9(0x319)]()[_0x170ce9(0x454)], 0x4 * _0x2dcf17, _0x812590);
        }
        ['_getType']() {
            return _0x5e1dab['_type'];
        }
        ['_prepareRender'](_0x16f95a) {
            return this['_mesh']['_uploadVerticesData'](), !0x0;
        }
        ['_render'](_0x43b782) {
            var _0x218d95 = _0x6027f5, _0x4f97b9 = this[_0x218d95(0x5d9)];
            if (_0x4f97b9[_0x218d95(0xf69)] !== _0x18be32['IndexFormat'][_0x218d95(0x8cc)] || _0x387b86[_0x218d95(0x303)][_0x218d95(0x4f1)][_0x218d95(0xf6a)]()) {
                var _0x2c6cbf, _0x525760, _0x520a1a = _0x387b86[_0x218d95(0x303)][_0x218d95(0x304)], _0x45f9bc = _0x43b782[_0x218d95(0x5f3)] ? _0x43b782['renderElement'][_0x218d95(0x4ff)][_0x218d95(0xefd)] : null;
                switch (_0x4f97b9[_0x218d95(0xf69)]) {
                case _0x18be32[_0x218d95(0x8c9)][_0x218d95(0x8cc)]:
                    _0x2c6cbf = _0x520a1a[_0x218d95(0xf6b)], _0x525760 = 0x4;
                    break;
                case _0x18be32[_0x218d95(0x8c9)][_0x218d95(0x8cb)]:
                    _0x2c6cbf = _0x520a1a[_0x218d95(0xa0c)], _0x525760 = 0x2;
                    break;
                case _0x18be32['IndexFormat'][_0x218d95(0x8ca)]:
                    _0x2c6cbf = _0x520a1a[_0x218d95(0x40e)], _0x525760 = 0x1;
                }
                if (_0x4f97b9['_bufferState']['bind'](), _0x45f9bc) {
                    for (var _0x48c771 = _0x45f9bc[this[_0x218d95(0xf6c)]], _0x1ddafe = 0x0, _0x3826c5 = this[_0x218d95(0xefc)][_0x218d95(0x205)]; _0x1ddafe < _0x3826c5; _0x1ddafe++)
                        _0x43b782[_0x218d95(0x508)][_0x218d95(0x7fa)](_0x45dde3[_0x218d95(0xf6d)], _0x48c771[_0x1ddafe]), _0x520a1a['drawElements'](_0x520a1a[_0x218d95(0x506)], this[_0x218d95(0xf67)][_0x1ddafe], _0x2c6cbf, this[_0x218d95(0xf66)][_0x1ddafe] * _0x525760);
                } else
                    _0x520a1a[_0x218d95(0x8d4)](_0x520a1a['TRIANGLES'], this[_0x218d95(0x62b)], _0x2c6cbf, this[_0x218d95(0x62d)] * _0x525760);
                _0x387b86[_0x218d95(0x4dc)][_0x218d95(0x62e)] += this['_indexCount'] / 0x3, _0x387b86[_0x218d95(0x4dc)][_0x218d95(0x502)]++;
            } else
                console[_0x218d95(0x25a)](_0x218d95(0xf6e));
        }
        [_0x6027f5(0xf6f)]() {
            var _0xb6424e = _0x6027f5;
            if (this[_0xb6424e(0x5d9)][_0xb6424e(0xf70)])
                return this['_indices']['slice']();
            throw 'SubMesh:can\x27t\x20get\x20indices\x20on\x20subMesh,mesh\x27s\x20isReadable\x20must\x20be\x20true.';
        }
        ['setIndices'](_0x555d91) {
            var _0x3e0d1c = _0x6027f5;
            this['_indexBuffer'][_0x3e0d1c(0x45d)](_0x555d91, this[_0x3e0d1c(0x62d)], 0x0, this['_indexCount']);
        }
        ['destroy']() {
            var _0x23c412 = _0x6027f5;
            this[_0x23c412(0xa54)] || (super[_0x23c412(0x364)](), this[_0x23c412(0x629)]['destroy'](), this[_0x23c412(0x629)] = null, this[_0x23c412(0x5d9)] = null, this[_0x23c412(0xefc)] = null, this[_0x23c412(0xf66)] = null, this[_0x23c412(0xf67)] = null, this['_skinAnimationDatas'] = null);
        }
    }
    _0x5e1dab[_0x6027f5(0x4e9)] = 0x0, _0x5e1dab[_0x6027f5(0xa5e)] = _0x2be7a6['_typeCounter']++;
    class _0x28557f {
        constructor(_0x17c632, _0x51f9a8, _0x256a80) {
            var _0x3b326e = _0x6027f5;
            this[_0x3b326e(0xeff)] = _0x17c632, this['batchIndex'] = _0x51f9a8, this['batchBoneIndex'] = _0x256a80;
        }
    }
    class _0x588bb2 extends _0x387b86['Resource'] {
        constructor(_0x4e204e = !0x0) {
            var _0x177748 = _0x6027f5;
            super(), this[_0x177748(0x59f)] = new _0x3697cd(), this['_tempVector31'] = new _0x3697cd(), this[_0x177748(0x855)] = new _0x3697cd(), this['_minVerticesUpdate'] = -0x1, this[_0x177748(0xf71)] = -0x1, this['_needUpdateBounds'] = !0x0, this[_0x177748(0xa5d)] = new _0xf16d64(new _0x3697cd(), new _0x3697cd()), this[_0x177748(0x4f8)] = new _0x5b1dae(), this[_0x177748(0x626)] = new _0x5b1dae(), this[_0x177748(0xf72)] = 0x0, this['_vertexBuffer'] = null, this[_0x177748(0x629)] = null, this[_0x177748(0xefb)] = [], this[_0x177748(0xa9f)] = 0x0, this[_0x177748(0xf73)] = _0x18be32[_0x177748(0x8c9)][_0x177748(0x8cb)], this['_isReadable'] = _0x4e204e, this[_0x177748(0x5e6)] = [];
        }
        static ['__init__']() {
            var _0x198983 = _0x6027f5, _0x5f0f6b = _0x567245[_0x198983(0x22e)];
            _0x5f0f6b && (_0x588bb2['_nativeTempVector30'] = _0x5f0f6b['btVector3_create'](0x0, 0x0, 0x0), _0x588bb2[_0x198983(0xf74)] = _0x5f0f6b[_0x198983(0xf75)](0x0, 0x0, 0x0), _0x588bb2['_nativeTempVector32'] = _0x5f0f6b[_0x198983(0xf75)](0x0, 0x0, 0x0));
        }
        static [_0x6027f5(0x5c0)](_0x322e30, _0x2d17f1) {
            var _0x1a5361 = _0x6027f5;
            _0x387b86['ILaya'][_0x1a5361(0x329)][_0x1a5361(0x32a)](_0x322e30, _0x2d17f1, null, _0x588bb2[_0x1a5361(0xf76)]);
        }
        get [_0x6027f5(0xf77)]() {
            var _0x293718 = _0x6027f5;
            return this[_0x293718(0xf01)];
        }
        get [_0x6027f5(0xad4)]() {
            var _0x204222 = _0x6027f5;
            return this[_0x204222(0xa9f)];
        }
        get [_0x6027f5(0xa0b)]() {
            var _0x167fee = _0x6027f5;
            return this[_0x167fee(0x629)][_0x167fee(0xa0b)];
        }
        get [_0x6027f5(0xad6)]() {
            var _0x33626f = _0x6027f5;
            return this['_subMeshes'][_0x33626f(0x205)];
        }
        get [_0x6027f5(0x812)]() {
            return this['_bounds'];
        }
        set [_0x6027f5(0x812)](_0x5976fe) {
            var _0x7360f2 = _0x6027f5;
            this[_0x7360f2(0xa5d)] !== _0x5976fe && _0x5976fe[_0x7360f2(0x1fc)](this[_0x7360f2(0xa5d)]);
        }
        get [_0x6027f5(0xf69)]() {
            var _0x2f45e9 = _0x6027f5;
            return this[_0x2f45e9(0xf73)];
        }
        [_0x6027f5(0xf78)](_0x83cd33) {
            var _0x49ed1c = _0x6027f5;
            for (var _0x37300f = _0x83cd33[_0x49ed1c(0x456)]['_vertexElements'], _0x22dc27 = 0x0, _0x4a8cff = _0x37300f[_0x49ed1c(0x205)]; _0x22dc27 < _0x4a8cff; _0x22dc27++) {
                var _0x21f1f6 = _0x37300f[_0x22dc27];
                if (_0x21f1f6[_0x49ed1c(0xf79)] === _0x53b5cc['Vector3'] && _0x21f1f6[_0x49ed1c(0x4e3)] === _0x73b54a[_0x49ed1c(0x615)])
                    return _0x21f1f6;
            }
            return null;
        }
        [_0x6027f5(0xf7a)](_0x3429e4, _0x51a42f) {
            var _0x51a649 = _0x6027f5;
            _0x3429e4[_0x51a649(0x205)] = this['_vertexCount'];
            var _0x2b8af4 = this[_0x51a649(0x4f6)]['vertexDeclaration'], _0x1f9ad2 = _0x2b8af4[_0x51a649(0x4e8)](_0x51a42f);
            if (_0x1f9ad2) {
                var _0x15ba8b = this[_0x51a649(0x4f6)][_0x51a649(0xf7b)](), _0x53620b = this[_0x51a649(0x4f6)]['getFloat32Data'](), _0x14e411 = _0x2b8af4['vertexStride'], _0x2d61f0 = _0x14e411 / 0x4, _0x2c88d1 = _0x1f9ad2[_0x51a649(0x4e4)], _0x13876d = _0x2c88d1 / 0x4;
                switch (_0x51a42f) {
                case _0x73b54a['MESH_TEXTURECOORDINATE0']:
                case _0x73b54a[_0x51a649(0x60f)]:
                    for (var _0x2ca1de = 0x0; _0x2ca1de < this[_0x51a649(0xa9f)]; _0x2ca1de++) {
                        var _0x1b1ac5 = _0x2d61f0 * _0x2ca1de + _0x13876d;
                        _0x3429e4[_0x2ca1de] = new _0x30a72c(_0x53620b[_0x1b1ac5], _0x53620b[_0x1b1ac5 + 0x1]);
                    }
                    break;
                case _0x73b54a[_0x51a649(0x615)]:
                case _0x73b54a[_0x51a649(0x60c)]:
                    for (_0x2ca1de = 0x0; _0x2ca1de < this[_0x51a649(0xa9f)]; _0x2ca1de++) {
                        _0x1b1ac5 = _0x2d61f0 * _0x2ca1de + _0x13876d, _0x3429e4[_0x2ca1de] = new _0x3697cd(_0x53620b[_0x1b1ac5], _0x53620b[_0x1b1ac5 + 0x1], _0x53620b[_0x1b1ac5 + 0x2]);
                    }
                    break;
                case _0x73b54a[_0x51a649(0x614)]:
                case _0x73b54a[_0x51a649(0x611)]:
                    for (_0x2ca1de = 0x0; _0x2ca1de < this[_0x51a649(0xa9f)]; _0x2ca1de++) {
                        _0x1b1ac5 = _0x2d61f0 * _0x2ca1de + _0x13876d, _0x3429e4[_0x2ca1de] = new _0x5b8e4e(_0x53620b[_0x1b1ac5], _0x53620b[_0x1b1ac5 + 0x1], _0x53620b[_0x1b1ac5 + 0x2], _0x53620b[_0x1b1ac5 + 0x3]);
                    }
                    break;
                case _0x73b54a[_0x51a649(0x60d)]:
                    for (_0x2ca1de = 0x0; _0x2ca1de < this[_0x51a649(0xa9f)]; _0x2ca1de++) {
                        _0x1b1ac5 = _0x2d61f0 * _0x2ca1de + _0x13876d, _0x3429e4[_0x2ca1de] = new _0x441c6d(_0x53620b[_0x1b1ac5], _0x53620b[_0x1b1ac5 + 0x1], _0x53620b[_0x1b1ac5 + 0x2], _0x53620b[_0x1b1ac5 + 0x3]);
                    }
                    break;
                case _0x73b54a[_0x51a649(0x617)]:
                    for (_0x2ca1de = 0x0; _0x2ca1de < this[_0x51a649(0xa9f)]; _0x2ca1de++) {
                        _0x1b1ac5 = _0x14e411 * _0x2ca1de + _0x2c88d1, _0x3429e4[_0x2ca1de] = new _0x5b8e4e(_0x15ba8b[_0x1b1ac5], _0x15ba8b[_0x1b1ac5 + 0x1], _0x15ba8b[_0x1b1ac5 + 0x2], _0x15ba8b[_0x1b1ac5 + 0x3]);
                    }
                    break;
                default:
                    throw _0x51a649(0xf7c);
                }
            }
        }
        ['_setVerticeElementData'](_0x1abaf3, _0x3f218c) {
            var _0x2ee063 = _0x6027f5, _0x1583a2 = this['_vertexBuffer']['vertexDeclaration'], _0x1fed9f = _0x1583a2[_0x2ee063(0x4e8)](_0x3f218c);
            if (_0x1fed9f) {
                var _0x34b49e = this[_0x2ee063(0x4f6)]['getUint8Data'](), _0x470017 = this[_0x2ee063(0x4f6)][_0x2ee063(0xaca)](), _0xeaf10 = _0x1583a2[_0x2ee063(0x4e5)], _0x400005 = _0xeaf10 / 0x4, _0x8f15b = _0x1fed9f[_0x2ee063(0x4e4)], _0x22ad4b = _0x8f15b / 0x4;
                switch (_0x3f218c) {
                case _0x73b54a[_0x2ee063(0x616)]:
                case _0x73b54a[_0x2ee063(0x60f)]:
                    for (var _0x181262 = 0x0, _0x1ab3df = _0x1abaf3[_0x2ee063(0x205)]; _0x181262 < _0x1ab3df; _0x181262++) {
                        var _0x4be024 = _0x400005 * _0x181262 + _0x22ad4b, _0x330d94 = _0x1abaf3[_0x181262];
                        _0x470017[_0x4be024] = _0x330d94['x'], _0x470017[_0x4be024 + 0x1] = _0x330d94['y'];
                    }
                    break;
                case _0x73b54a['MESH_POSITION0']:
                case _0x73b54a[_0x2ee063(0x60c)]:
                    for (_0x181262 = 0x0, _0x1ab3df = _0x1abaf3[_0x2ee063(0x205)]; _0x181262 < _0x1ab3df; _0x181262++) {
                        _0x4be024 = _0x400005 * _0x181262 + _0x22ad4b;
                        var _0x27c7f3 = _0x1abaf3[_0x181262];
                        _0x470017[_0x4be024] = _0x27c7f3['x'], _0x470017[_0x4be024 + 0x1] = _0x27c7f3['y'], _0x470017[_0x4be024 + 0x2] = _0x27c7f3['z'];
                    }
                    break;
                case _0x73b54a[_0x2ee063(0x614)]:
                case _0x73b54a[_0x2ee063(0x611)]:
                    for (_0x181262 = 0x0, _0x1ab3df = _0x1abaf3[_0x2ee063(0x205)]; _0x181262 < _0x1ab3df; _0x181262++) {
                        _0x4be024 = _0x400005 * _0x181262 + _0x22ad4b;
                        var _0x57d712 = _0x1abaf3[_0x181262];
                        _0x470017[_0x4be024] = _0x57d712['x'], _0x470017[_0x4be024 + 0x1] = _0x57d712['y'], _0x470017[_0x4be024 + 0x2] = _0x57d712['z'], _0x470017[_0x4be024 + 0x3] = _0x57d712['w'];
                    }
                    break;
                case _0x73b54a[_0x2ee063(0x60d)]:
                    for (_0x181262 = 0x0, _0x1ab3df = _0x1abaf3[_0x2ee063(0x205)]; _0x181262 < _0x1ab3df; _0x181262++) {
                        _0x4be024 = _0x400005 * _0x181262 + _0x22ad4b;
                        var _0xd0cdd4 = _0x1abaf3[_0x181262];
                        _0x470017[_0x4be024] = _0xd0cdd4['r'], _0x470017[_0x4be024 + 0x1] = _0xd0cdd4['g'], _0x470017[_0x4be024 + 0x2] = _0xd0cdd4['b'], _0x470017[_0x4be024 + 0x3] = _0xd0cdd4['a'];
                    }
                    break;
                case _0x73b54a['MESH_BLENDINDICES0']:
                    for (_0x181262 = 0x0, _0x1ab3df = _0x1abaf3[_0x2ee063(0x205)]; _0x181262 < _0x1ab3df; _0x181262++) {
                        _0x4be024 = _0xeaf10 * _0x181262 + _0x8f15b, _0x57d712 = _0x1abaf3[_0x181262], (_0x34b49e[_0x4be024] = _0x57d712['x'], _0x34b49e[_0x4be024 + 0x1] = _0x57d712['y'], _0x34b49e[_0x4be024 + 0x2] = _0x57d712['z'], _0x34b49e[_0x4be024 + 0x3] = _0x57d712['w']);
                    }
                    break;
                default:
                    throw _0x2ee063(0xf7c);
                }
                this['_minVerticesUpdate'] = 0x0, this[_0x2ee063(0xf71)] = Number[_0x2ee063(0x45e)];
            } else
                console[_0x2ee063(0x25a)](_0x2ee063(0xf7d));
        }
        [_0x6027f5(0x440)]() {
            var _0x1580e6 = _0x6027f5;
            for (var _0x59eb39 = 0x0, _0x9de435 = this[_0x1580e6(0x5e6)][_0x1580e6(0x205)]; _0x59eb39 < _0x9de435; _0x59eb39++)
                this[_0x1580e6(0x5e6)][_0x59eb39]['destroy']();
            this[_0x1580e6(0xf7e)] && _0x567245[_0x1580e6(0x22e)][_0x1580e6(0xf7f)](this[_0x1580e6(0xf7e)]), this[_0x1580e6(0x4f6)][_0x1580e6(0x364)](), this[_0x1580e6(0x629)][_0x1580e6(0x364)](), this['_bufferState'][_0x1580e6(0x364)](), this[_0x1580e6(0x626)][_0x1580e6(0x364)](), this[_0x1580e6(0xf80)](0x0), this['_setGPUMemory'](0x0), this[_0x1580e6(0x4f8)] = null, this[_0x1580e6(0x626)] = null, this[_0x1580e6(0x4f6)] = null, this[_0x1580e6(0x629)] = null, this['_subMeshes'] = null, this[_0x1580e6(0xf7e)] = null, this[_0x1580e6(0x629)] = null, this['_boneNames'] = null, this[_0x1580e6(0xf01)] = null;
        }
        [_0x6027f5(0xf81)](_0x1b4ac4) {
            var _0x3ddfb9 = _0x6027f5;
            this[_0x3ddfb9(0x5e6)] = _0x1b4ac4;
            for (var _0x55c719 = 0x0, _0x3aa0c4 = _0x1b4ac4[_0x3ddfb9(0x205)]; _0x55c719 < _0x3aa0c4; _0x55c719++)
                _0x1b4ac4[_0x55c719]['_indexInMesh'] = _0x55c719;
        }
        [_0x6027f5(0xf82)](_0x30f8d4, _0x359c64) {
            var _0x299c6c = _0x6027f5, _0xe5f389 = this[_0x299c6c(0x4f8)];
            _0xe5f389['bind'](), _0xe5f389[_0x299c6c(0x4eb)](_0x30f8d4), _0xe5f389[_0x299c6c(0x4f3)](_0x359c64), _0xe5f389[_0x299c6c(0x4f9)]();
        }
        ['_setInstanceBuffer'](_0x1142b9) {
            var _0x1beab7 = _0x6027f5, _0x2608c1 = this[_0x1beab7(0x626)];
            switch (_0x2608c1['bind'](), _0x2608c1[_0x1beab7(0x4eb)](this[_0x1beab7(0x4f6)]), _0x2608c1[_0x1beab7(0x627)](_0x4da149[_0x1beab7(0x304)][_0x1beab7(0xa85)]), _0x1142b9) {
            case _0x588bb2['MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR']:
                _0x2608c1[_0x1beab7(0x627)](_0x4da149[_0x1beab7(0x304)][_0x1beab7(0xa86)]);
            }
            _0x2608c1[_0x1beab7(0x4f3)](this[_0x1beab7(0x629)]), _0x2608c1['unBind']();
        }
        ['_getPhysicMesh']() {
            var _0xa00fca = _0x6027f5;
            if (!this['_btTriangleMesh']) {
                for (var _0x430573 = _0x567245[_0xa00fca(0x22e)], _0x205bf3 = _0x430573[_0xa00fca(0xf83)](), _0x598c79 = _0x588bb2[_0xa00fca(0xf84)], _0x27a67e = _0x588bb2[_0xa00fca(0xf74)], _0x44d273 = _0x588bb2['_nativeTempVector32'], _0xa2bf60 = this[_0xa00fca(0x59f)], _0xca8bff = this[_0xa00fca(0x3a1)], _0x5f37bc = this['_tempVector32'], _0x146942 = this[_0xa00fca(0x4f6)], _0x379d54 = this['_getPositionElement'](_0x146942), _0x58423e = _0x146942[_0xa00fca(0xaca)](), _0x4fd9ee = _0x146942[_0xa00fca(0x456)]['vertexStride'] / 0x4, _0x309ee9 = _0x379d54['_offset'] / 0x4, _0x5060ff = this[_0xa00fca(0x629)]['getData'](), _0xfc3d1a = 0x0, _0x395ed4 = _0x5060ff[_0xa00fca(0x205)]; _0xfc3d1a < _0x395ed4; _0xfc3d1a += 0x3) {
                    var _0x99e3eb = _0x5060ff[_0xfc3d1a] * _0x4fd9ee + _0x309ee9, _0x4d6d02 = _0x5060ff[_0xfc3d1a + 0x1] * _0x4fd9ee + _0x309ee9, _0x290bb1 = _0x5060ff[_0xfc3d1a + 0x2] * _0x4fd9ee + _0x309ee9;
                    _0xa2bf60[_0xa00fca(0x1f8)](_0x58423e[_0x99e3eb], _0x58423e[_0x99e3eb + 0x1], _0x58423e[_0x99e3eb + 0x2]), _0xca8bff[_0xa00fca(0x1f8)](_0x58423e[_0x4d6d02], _0x58423e[_0x4d6d02 + 0x1], _0x58423e[_0x4d6d02 + 0x2]), _0x5f37bc[_0xa00fca(0x1f8)](_0x58423e[_0x290bb1], _0x58423e[_0x290bb1 + 0x1], _0x58423e[_0x290bb1 + 0x2]), _0x3acd08[_0xa00fca(0x2e8)](_0xa2bf60, _0x598c79, !0x0), _0x3acd08[_0xa00fca(0x2e8)](_0xca8bff, _0x27a67e, !0x0), _0x3acd08[_0xa00fca(0x2e8)](_0x5f37bc, _0x44d273, !0x0), _0x430573[_0xa00fca(0xf85)](_0x205bf3, _0x598c79, _0x27a67e, _0x44d273, !0x0);
                }
                this[_0xa00fca(0xf7e)] = _0x205bf3;
            }
            return this[_0xa00fca(0xf7e)];
        }
        ['_uploadVerticesData']() {
            var _0x4ce945 = _0x6027f5, _0x2afbc4 = this[_0x4ce945(0xf86)], _0x1d1fe3 = this[_0x4ce945(0xf71)];
            if (-0x1 !== _0x2afbc4 && -0x1 !== _0x1d1fe3) {
                var _0x5b2bcb = _0x2afbc4;
                this['_vertexBuffer'][_0x4ce945(0x45d)](this['_vertexBuffer']['getUint8Data']()[_0x4ce945(0x454)], _0x5b2bcb, _0x5b2bcb, _0x1d1fe3 - _0x2afbc4), this[_0x4ce945(0xf86)] = -0x1, this['_maxVerticesUpdate'] = -0x1;
            }
        }
        [_0x6027f5(0xcc8)](_0x1226dd) {
            var _0x25611d = _0x6027f5;
            return this[_0x25611d(0x5e6)][_0x1226dd];
        }
        [_0x6027f5(0xf87)](_0x298571) {
            var _0x1f8ca8 = _0x6027f5;
            if (!this['_isReadable'])
                throw _0x1f8ca8(0xf88);
            this['_getVerticeElementData'](_0x298571, _0x73b54a[_0x1f8ca8(0x615)]);
        }
        ['setPositions'](_0x1769d3) {
            var _0x53ef50 = _0x6027f5;
            if (!this[_0x53ef50(0xf70)])
                throw 'Mesh:setPosition()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().';
            this[_0x53ef50(0xf89)](_0x1769d3, _0x73b54a[_0x53ef50(0x615)]), this[_0x53ef50(0xf8a)] = !0x0;
        }
        ['getColors'](_0x5a026a) {
            var _0x102c05 = _0x6027f5;
            if (!this[_0x102c05(0xf70)])
                throw _0x102c05(0xf8b);
            this[_0x102c05(0xf7a)](_0x5a026a, _0x73b54a['MESH_COLOR0']);
        }
        [_0x6027f5(0xf8c)](_0x51564d) {
            var _0x5e2c74 = _0x6027f5;
            if (!this[_0x5e2c74(0xf70)])
                throw _0x5e2c74(0xf8d);
            this['_setVerticeElementData'](_0x51564d, _0x73b54a[_0x5e2c74(0x60d)]);
        }
        ['getUVs'](_0x4ac8a1, _0x14a936 = 0x0) {
            var _0x3f7a4c = _0x6027f5;
            if (!this[_0x3f7a4c(0xf70)])
                throw _0x3f7a4c(0xf8e);
            switch (_0x14a936) {
            case 0x0:
                this[_0x3f7a4c(0xf7a)](_0x4ac8a1, _0x73b54a[_0x3f7a4c(0x616)]);
                break;
            case 0x1:
                this[_0x3f7a4c(0xf7a)](_0x4ac8a1, _0x73b54a[_0x3f7a4c(0x60f)]);
                break;
            default:
                throw _0x3f7a4c(0xf8f);
            }
        }
        ['setUVs'](_0x50b5d1, _0x473caf = 0x0) {
            var _0x37f2cd = _0x6027f5;
            if (!this[_0x37f2cd(0xf70)])
                throw _0x37f2cd(0xf90);
            switch (_0x473caf) {
            case 0x0:
                this['_setVerticeElementData'](_0x50b5d1, _0x73b54a['MESH_TEXTURECOORDINATE0']);
                break;
            case 0x1:
                this['_setVerticeElementData'](_0x50b5d1, _0x73b54a[_0x37f2cd(0x60f)]);
                break;
            default:
                throw _0x37f2cd(0xf8f);
            }
        }
        [_0x6027f5(0xf91)](_0x29a3bc) {
            var _0xcf1817 = _0x6027f5;
            if (!this[_0xcf1817(0xf70)])
                throw _0xcf1817(0xf8b);
            this[_0xcf1817(0xf7a)](_0x29a3bc, _0x73b54a[_0xcf1817(0x60c)]);
        }
        ['setNormals'](_0x412fbe) {
            var _0x498416 = _0x6027f5;
            if (!this[_0x498416(0xf70)])
                throw _0x498416(0xf92);
            this[_0x498416(0xf89)](_0x412fbe, _0x73b54a[_0x498416(0x60c)]);
        }
        ['getTangents'](_0x2f4e8d) {
            var _0x424319 = _0x6027f5;
            if (!this[_0x424319(0xf70)])
                throw _0x424319(0xf8b);
            this[_0x424319(0xf7a)](_0x2f4e8d, _0x73b54a[_0x424319(0x614)]);
        }
        [_0x6027f5(0xf93)](_0x2557a) {
            var _0x1c2dd3 = _0x6027f5;
            if (!this['_isReadable'])
                throw _0x1c2dd3(0xf94);
            this[_0x1c2dd3(0xf89)](_0x2557a, _0x73b54a[_0x1c2dd3(0x614)]);
        }
        [_0x6027f5(0xf95)](_0x35eeff) {
            var _0x493deb = _0x6027f5;
            if (!this[_0x493deb(0xf70)])
                throw _0x493deb(0xf96);
            this['_getVerticeElementData'](_0x35eeff, _0x73b54a[_0x493deb(0x611)]);
        }
        ['setBoneWeights'](_0x244580) {
            var _0x1ec0fa = _0x6027f5;
            if (!this[_0x1ec0fa(0xf70)])
                throw 'Mesh:setBoneWeights()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().';
            this['_setVerticeElementData'](_0x244580, _0x73b54a[_0x1ec0fa(0x611)]);
        }
        ['getBoneIndices'](_0x21bba6) {
            var _0x2b5199 = _0x6027f5;
            if (!this[_0x2b5199(0xf70)])
                throw _0x2b5199(0xf97);
            this[_0x2b5199(0xf7a)](_0x21bba6, _0x73b54a['MESH_BLENDINDICES0']);
        }
        ['setBoneIndices'](_0x4dc2f7) {
            var _0x558741 = _0x6027f5;
            if (!this[_0x558741(0xf70)])
                throw 'Mesh:setBoneIndices()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().';
            this[_0x558741(0xf89)](_0x4dc2f7, _0x73b54a[_0x558741(0x617)]);
        }
        [_0x6027f5(0x461)]() {
            var _0xe7246d = _0x6027f5;
            this['_uploadVerticesData'](), this[_0xe7246d(0x4f6)][_0xe7246d(0x461)](), this[_0xe7246d(0xf70)] = !0x1;
        }
        [_0x6027f5(0x607)]() {
            var _0x45dad0 = _0x6027f5;
            return this[_0x45dad0(0x4f6)][_0x45dad0(0x455)];
        }
        [_0x6027f5(0xf98)]() {
            var _0x582e91 = _0x6027f5;
            if (this[_0x582e91(0xf70)])
                return this[_0x582e91(0x4f6)][_0x582e91(0xf7b)]()[_0x582e91(0x454)][_0x582e91(0xb02)](0x0);
            throw 'Mesh:can\x27t\x20get\x20vertices\x20on\x20mesh,isReadable\x20must\x20be\x20true.';
        }
        ['setVertices'](_0x14976a) {
            var _0x3d79b9 = _0x6027f5;
            this[_0x3d79b9(0x4f6)]['setData'](_0x14976a), this[_0x3d79b9(0xf8a)] = !0x0;
        }
        ['getIndices']() {
            var _0x321911 = _0x6027f5;
            if (this[_0x321911(0xf70)])
                return this[_0x321911(0x629)][_0x321911(0x319)]()[_0x321911(0xb02)]();
            throw _0x321911(0xf99);
        }
        ['setIndices'](_0x3da4bb) {
            var _0x1a1b7d = _0x6027f5, _0x2978a4;
            _0x3da4bb instanceof Uint32Array ? _0x2978a4 = _0x18be32[_0x1a1b7d(0x8c9)][_0x1a1b7d(0x8cc)] : _0x3da4bb instanceof Uint16Array ? _0x2978a4 = _0x18be32[_0x1a1b7d(0x8c9)]['UInt16'] : _0x3da4bb instanceof Uint8Array && (_0x2978a4 = _0x18be32[_0x1a1b7d(0x8c9)][_0x1a1b7d(0x8ca)]);
            var _0xae8f44 = this['_indexBuffer'];
            this['_indexFormat'] === _0x2978a4 && _0xae8f44[_0x1a1b7d(0xa0b)] === _0x3da4bb[_0x1a1b7d(0x205)] || (_0xae8f44['destroy'](), this[_0x1a1b7d(0x629)] = _0xae8f44 = new _0x67ef8f(_0x2978a4, _0x3da4bb[_0x1a1b7d(0x205)], _0x387b86['LayaGL'][_0x1a1b7d(0x304)][_0x1a1b7d(0x4fa)], this[_0x1a1b7d(0xf70)])), _0xae8f44[_0x1a1b7d(0x45d)](_0x3da4bb), this[_0x1a1b7d(0xf73)] = _0x2978a4;
        }
        ['calculateBounds']() {
            var _0x28a51d = _0x6027f5;
            if (!this[_0x28a51d(0xf70)])
                throw _0x28a51d(0xf9a);
            if (this[_0x28a51d(0xf8a)]) {
                var _0x1315a2 = this[_0x28a51d(0x59f)], _0x451b19 = this['_tempVector31'];
                _0x1315a2['x'] = _0x1315a2['y'] = _0x1315a2['z'] = Number[_0x28a51d(0xa3d)], _0x451b19['x'] = _0x451b19['y'] = _0x451b19['z'] = -Number[_0x28a51d(0xa3d)];
                for (var _0x2e14e9 = this['_vertexBuffer'], _0x39d032 = this[_0x28a51d(0xf78)](_0x2e14e9), _0x5371b0 = _0x2e14e9['getFloat32Data'](), _0xd29566 = _0x2e14e9[_0x28a51d(0x456)][_0x28a51d(0x4e5)] / 0x4, _0x538e26 = _0x39d032['_offset'] / 0x4, _0x4208cb = 0x0, _0x546e11 = _0x5371b0[_0x28a51d(0x205)]; _0x4208cb < _0x546e11; _0x4208cb += _0xd29566) {
                    var _0xb6a117 = _0x4208cb + _0x538e26, _0x2eb0c7 = _0x5371b0[_0xb6a117], _0x577ff6 = _0x5371b0[_0xb6a117 + 0x1], _0x4bc673 = _0x5371b0[_0xb6a117 + 0x2];
                    _0x1315a2['x'] = Math[_0x28a51d(0x212)](_0x1315a2['x'], _0x2eb0c7), _0x1315a2['y'] = Math[_0x28a51d(0x212)](_0x1315a2['y'], _0x577ff6), _0x1315a2['z'] = Math[_0x28a51d(0x212)](_0x1315a2['z'], _0x4bc673), _0x451b19['x'] = Math[_0x28a51d(0x20c)](_0x451b19['x'], _0x2eb0c7), _0x451b19['y'] = Math[_0x28a51d(0x20c)](_0x451b19['y'], _0x577ff6), _0x451b19['z'] = Math[_0x28a51d(0x20c)](_0x451b19['z'], _0x4bc673);
                }
                this[_0x28a51d(0xa5d)][_0x28a51d(0xa62)](_0x1315a2), this[_0x28a51d(0xa5d)][_0x28a51d(0xa49)](_0x451b19), this[_0x28a51d(0xf8a)] = !0x1;
            }
        }
        ['cloneTo'](_0x6f7c05) {
            var _0x3108bc = _0x6027f5, _0x483403 = _0x6f7c05, _0x16329a = this[_0x3108bc(0x4f6)], _0x167e21 = new _0x2ce777(_0x16329a[_0x3108bc(0x451)], _0x16329a[_0x3108bc(0xf9b)], _0x16329a[_0x3108bc(0x457)]);
            _0x167e21['vertexDeclaration'] = _0x16329a[_0x3108bc(0x456)], _0x167e21[_0x3108bc(0x45d)](_0x16329a[_0x3108bc(0xf7b)]()[_0x3108bc(0xb02)]()[_0x3108bc(0x454)]), _0x483403['_vertexBuffer'] = _0x167e21, _0x483403[_0x3108bc(0xa9f)] = this['_vertexCount'];
            var _0x5ba703, _0x2c921b = this[_0x3108bc(0x629)], _0x2a6393 = new _0x67ef8f(_0x18be32[_0x3108bc(0x8c9)][_0x3108bc(0x8cb)], _0x2c921b[_0x3108bc(0xa0b)], _0x2c921b[_0x3108bc(0xf9b)], _0x2c921b[_0x3108bc(0x457)]);
            _0x2a6393[_0x3108bc(0x45d)](_0x2c921b[_0x3108bc(0x319)]()['slice']()), _0x483403[_0x3108bc(0x629)] = _0x2a6393, _0x483403['_setBuffer'](_0x483403[_0x3108bc(0x4f6)], _0x2a6393), _0x483403['_setInstanceBuffer'](this[_0x3108bc(0xf72)]), _0x483403['_setCPUMemory'](this[_0x3108bc(0xf9c)]), _0x483403[_0x3108bc(0x433)](this[_0x3108bc(0xf9d)]);
            var _0xe517fe = this[_0x3108bc(0xf0a)];
            if (_0xe517fe) {
                var _0x38fcc4 = _0x483403[_0x3108bc(0xf0a)] = [];
                for (_0x5ba703 = 0x0; _0x5ba703 < _0xe517fe[_0x3108bc(0x205)]; _0x5ba703++)
                    _0x38fcc4[_0x5ba703] = _0xe517fe[_0x5ba703];
            }
            var _0x4af9b2 = this['_inverseBindPoses'];
            if (_0x4af9b2) {
                var _0x4a5a61 = _0x483403['_inverseBindPoses'] = [];
                for (_0x5ba703 = 0x0; _0x5ba703 < _0x4af9b2[_0x3108bc(0x205)]; _0x5ba703++)
                    _0x4a5a61[_0x5ba703] = _0x4af9b2[_0x5ba703];
            }
            var _0x22610c = this['_skinnedMatrixCaches'][_0x3108bc(0x205)];
            for (_0x483403['_skinnedMatrixCaches']['length'] = _0x22610c, _0x5ba703 = 0x0; _0x5ba703 < _0x22610c; _0x5ba703++) {
                var _0x46ad02 = this[_0x3108bc(0xefb)][_0x5ba703];
                _0x483403[_0x3108bc(0xefb)][_0x5ba703] = new _0x28557f(_0x46ad02[_0x3108bc(0xeff)], _0x46ad02[_0x3108bc(0xf00)], _0x46ad02[_0x3108bc(0xf9e)]);
            }
            for (_0x5ba703 = 0x0; _0x5ba703 < this[_0x3108bc(0xad6)]; _0x5ba703++) {
                var _0x17f356 = this['_subMeshes'][_0x5ba703], _0x535fab = _0x17f356[_0x3108bc(0xf66)], _0x69e0d4 = _0x17f356[_0x3108bc(0xf67)], _0x1ef97e = _0x17f356['_boneIndicesList'], _0x2078a8 = new _0x5e1dab(_0x483403);
                _0x2078a8[_0x3108bc(0xf66)][_0x3108bc(0x205)] = _0x535fab['length'], _0x2078a8['_subIndexBufferCount']['length'] = _0x69e0d4['length'], _0x2078a8['_boneIndicesList'][_0x3108bc(0x205)] = _0x1ef97e[_0x3108bc(0x205)];
                for (var _0x2cc229 = 0x0; _0x2cc229 < _0x535fab[_0x3108bc(0x205)]; _0x2cc229++)
                    _0x2078a8[_0x3108bc(0xf66)][_0x2cc229] = _0x535fab[_0x2cc229];
                for (_0x2cc229 = 0x0; _0x2cc229 < _0x69e0d4[_0x3108bc(0x205)]; _0x2cc229++)
                    _0x2078a8['_subIndexBufferCount'][_0x2cc229] = _0x69e0d4[_0x2cc229];
                for (_0x2cc229 = 0x0; _0x2cc229 < _0x1ef97e[_0x3108bc(0x205)]; _0x2cc229++)
                    _0x2078a8['_boneIndicesList'][_0x2cc229] = new Uint16Array(_0x1ef97e[_0x2cc229]);
                _0x2078a8['_indexBuffer'] = _0x2a6393, _0x2078a8['_indexStart'] = _0x17f356[_0x3108bc(0x62d)], _0x2078a8['_indexCount'] = _0x17f356[_0x3108bc(0x62b)], _0x2078a8['_indices'] = new Uint16Array(_0x2a6393[_0x3108bc(0x319)]()[_0x3108bc(0x454)], 0x2 * _0x17f356[_0x3108bc(0x62d)], _0x17f356[_0x3108bc(0x62b)]);
                var _0xb4f2c8 = _0x483403[_0x3108bc(0x4f6)];
                _0x2078a8[_0x3108bc(0x4f6)] = _0xb4f2c8, _0x483403['_subMeshes'][_0x3108bc(0x2ac)](_0x2078a8);
            }
            _0x483403[_0x3108bc(0xf81)](_0x483403[_0x3108bc(0x5e6)]);
        }
        [_0x6027f5(0x1fd)]() {
            var _0x3a3a97 = new _0x588bb2();
            return this['cloneTo'](_0x3a3a97), _0x3a3a97;
        }
    }
    _0x588bb2[_0x6027f5(0xf76)] = _0x6027f5(0xf76), _0x588bb2['MESH_INSTANCEBUFFER_TYPE_NORMAL'] = 0x0, _0x588bb2[_0x6027f5(0xf9f)] = 0x1;
    class _0x3955c2 {
        static [_0x6027f5(0x230)]() {
        }
        static [_0x6027f5(0xfa0)](_0x1a711f, _0x5e0c1b, _0x364e89) {
            var _0x2b41eb = _0x6027f5, _0xe544fe = _0x387b86[_0x2b41eb(0x303)]['instance'], _0x5e8e62 = new _0x588bb2(), _0x147d5e = new _0x5e1dab(_0x5e8e62), _0x59a40e = new _0x2ce777(0x4 * _0x5e0c1b[_0x2b41eb(0x205)], _0xe544fe['STATIC_DRAW'], !0x0);
            _0x59a40e['vertexDeclaration'] = _0x1a711f, _0x59a40e[_0x2b41eb(0x45d)](_0x5e0c1b[_0x2b41eb(0x454)]), _0x5e8e62[_0x2b41eb(0x4f6)] = _0x59a40e, _0x5e8e62[_0x2b41eb(0xa9f)] = _0x59a40e['_byteLength'] / _0x1a711f[_0x2b41eb(0x4e5)];
            var _0x8f08de = new _0x67ef8f(_0x18be32['IndexFormat']['UInt16'], _0x364e89[_0x2b41eb(0x205)], _0xe544fe[_0x2b41eb(0x4fa)], !0x0);
            _0x8f08de['setData'](_0x364e89), _0x5e8e62['_indexBuffer'] = _0x8f08de, _0x5e8e62[_0x2b41eb(0xf82)](_0x59a40e, _0x8f08de), _0x5e8e62[_0x2b41eb(0x625)](_0x5e8e62[_0x2b41eb(0xf72)]), _0x147d5e[_0x2b41eb(0x4f6)] = _0x59a40e, _0x147d5e[_0x2b41eb(0x629)] = _0x8f08de, _0x147d5e[_0x2b41eb(0xf68)](0x0, _0x8f08de[_0x2b41eb(0xa0b)]);
            var _0x293daa = _0x147d5e[_0x2b41eb(0xf66)], _0x3323c7 = _0x147d5e[_0x2b41eb(0xf67)], _0x781bd9 = _0x147d5e[_0x2b41eb(0xefc)];
            _0x293daa['length'] = 0x1, _0x3323c7[_0x2b41eb(0x205)] = 0x1, _0x781bd9[_0x2b41eb(0x205)] = 0x1, _0x293daa[0x0] = 0x0, _0x3323c7[0x0] = _0x8f08de[_0x2b41eb(0xa0b)];
            var _0x86893 = [];
            _0x86893[_0x2b41eb(0x2ac)](_0x147d5e), _0x5e8e62[_0x2b41eb(0xf81)](_0x86893), _0x5e8e62[_0x2b41eb(0xfa1)]();
            var _0x293006 = _0x59a40e['_byteLength'] + _0x8f08de[_0x2b41eb(0x451)];
            return _0x5e8e62[_0x2b41eb(0xf80)](_0x293006), _0x5e8e62[_0x2b41eb(0x433)](_0x293006), _0x5e8e62;
        }
        static [_0x6027f5(0xfa2)](_0x3bd2fd = 0x1, _0x5b9289 = 0x1, _0x36ce2f = 0x1) {
            var _0x44a1f6 = _0x6027f5, _0xbaf2dd = _0x73b54a['getVertexDeclaration']('POSITION,NORMAL,UV'), _0x48bea5 = _0x3bd2fd / 0x2, _0x2da8ef = _0x5b9289 / 0x2, _0x37bff5 = _0x36ce2f / 0x2, _0x2f5fd6 = new Float32Array([
                    -_0x48bea5,
                    _0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    _0x48bea5,
                    _0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x0,
                    _0x48bea5,
                    _0x2da8ef,
                    _0x37bff5,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x1,
                    -_0x48bea5,
                    _0x2da8ef,
                    _0x37bff5,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    -_0x48bea5,
                    -_0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    _0x48bea5,
                    -_0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x1,
                    _0x48bea5,
                    -_0x2da8ef,
                    _0x37bff5,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x0,
                    -_0x48bea5,
                    -_0x2da8ef,
                    _0x37bff5,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    -_0x48bea5,
                    _0x2da8ef,
                    -_0x37bff5,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    -_0x48bea5,
                    _0x2da8ef,
                    _0x37bff5,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    -_0x48bea5,
                    -_0x2da8ef,
                    _0x37bff5,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x48bea5,
                    -_0x2da8ef,
                    -_0x37bff5,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x48bea5,
                    _0x2da8ef,
                    -_0x37bff5,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    _0x48bea5,
                    _0x2da8ef,
                    _0x37bff5,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    _0x48bea5,
                    -_0x2da8ef,
                    _0x37bff5,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x48bea5,
                    -_0x2da8ef,
                    -_0x37bff5,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x48bea5,
                    _0x2da8ef,
                    _0x37bff5,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x48bea5,
                    _0x2da8ef,
                    _0x37bff5,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    _0x48bea5,
                    -_0x2da8ef,
                    _0x37bff5,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1,
                    -_0x48bea5,
                    -_0x2da8ef,
                    _0x37bff5,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    -_0x48bea5,
                    _0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x0,
                    _0x48bea5,
                    _0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    _0x48bea5,
                    -_0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    -_0x48bea5,
                    -_0x2da8ef,
                    -_0x37bff5,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x1
                ]), _0x1eaa8d = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x8,
                    0x9,
                    0xa,
                    0xa,
                    0xb,
                    0x8,
                    0xc,
                    0xf,
                    0xe,
                    0xe,
                    0xd,
                    0xc,
                    0x10,
                    0x11,
                    0x12,
                    0x12,
                    0x13,
                    0x10,
                    0x14,
                    0x17,
                    0x16,
                    0x16,
                    0x15,
                    0x14
                ]);
            return _0x3955c2[_0x44a1f6(0xfa0)](_0xbaf2dd, _0x2f5fd6, _0x1eaa8d);
        }
        static [_0x6027f5(0xfa3)](_0x247af2 = 0.5, _0x109856 = 0x2, _0x3fcd97 = 0x10, _0x272506 = 0x20) {
            var _0x1788ad = _0x6027f5, _0xcc1b89, _0x11c432, _0x4f8239 = (_0x3fcd97 + 0x1) * (_0x272506 + 0x1) * 0x2 + 0x2 * (_0x272506 + 0x1), _0x3f1180 = 0x3 * _0x3fcd97 * (_0x272506 + 0x1) * 0x2 * 0x2 + 0x2 * _0x272506 * 0x3, _0x128851 = _0x73b54a['getVertexDeclaration'](_0x1788ad(0xfa4)), _0xdc9df7 = _0x128851[_0x1788ad(0x4e5)] / 0x4, _0x3953df = new Float32Array(_0x4f8239 * _0xdc9df7), _0x2994e8 = new Uint16Array(_0x3f1180), _0x16c304 = Math['PI'] / 0x2 / _0x3fcd97, _0x241707 = 0x2 * Math['PI'] / _0x272506, _0x16f083 = _0x109856 / 0x2 - _0x247af2, _0x598e9c = 0x0, _0xe5921e = 0x0, _0x4237d6 = 0x0, _0x594baf = 0x0, _0x4a7299 = 0x0, _0x1b6063 = 0x0;
            for (_0xcc1b89 = 0x0; _0xcc1b89 <= _0x3fcd97; _0xcc1b89++)
                for (_0x11c432 = 0x0; _0x11c432 <= _0x272506; _0x11c432++)
                    _0x598e9c = _0x247af2 * Math[_0x1788ad(0x278)](_0xcc1b89 * _0x16c304) * Math[_0x1788ad(0x278)](_0x11c432 * _0x241707 + Math['PI']), _0xe5921e = _0x247af2 * Math['sin'](_0xcc1b89 * _0x16c304), _0x4237d6 = _0x247af2 * Math[_0x1788ad(0x278)](_0xcc1b89 * _0x16c304) * Math[_0x1788ad(0x27f)](_0x11c432 * _0x241707 + Math['PI']), _0x3953df[_0x594baf++] = _0x598e9c, _0x3953df[_0x594baf++] = _0xe5921e + _0x16f083, _0x3953df[_0x594baf++] = _0x4237d6, _0x3953df[_0x594baf++] = _0x598e9c, _0x3953df[_0x594baf++] = _0xe5921e, _0x3953df[_0x594baf++] = _0x4237d6, _0x3953df[_0x594baf++] = 0x1 - _0x11c432 / _0x272506, _0x3953df[_0x594baf++] = (0x1 - _0xcc1b89 / _0x3fcd97) * (Math['PI'] * _0x247af2 / 0x2 / (_0x109856 + Math['PI'] * _0x247af2)), _0xcc1b89 < _0x3fcd97 && (_0x2994e8[_0x4a7299++] = _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + (_0x272506 + 0x1), _0x2994e8[_0x4a7299++] = _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432, _0x2994e8[_0x4a7299++] = _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + 0x1, _0x2994e8[_0x4a7299++] = _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + _0x272506, _0x2994e8[_0x4a7299++] = _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432, _0x2994e8[_0x4a7299++] = _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + (_0x272506 + 0x1));
            for (_0x1b6063 += (_0x3fcd97 + 0x1) * (_0x272506 + 0x1), _0xcc1b89 = 0x0; _0xcc1b89 <= _0x3fcd97; _0xcc1b89++)
                for (_0x11c432 = 0x0; _0x11c432 <= _0x272506; _0x11c432++)
                    _0x598e9c = _0x247af2 * Math['cos'](_0xcc1b89 * _0x16c304) * Math['cos'](_0x11c432 * _0x241707 + Math['PI']), _0xe5921e = _0x247af2 * Math['sin'](-_0xcc1b89 * _0x16c304), _0x4237d6 = _0x247af2 * Math[_0x1788ad(0x278)](_0xcc1b89 * _0x16c304) * Math['sin'](_0x11c432 * _0x241707 + Math['PI']), _0x3953df[_0x594baf++] = _0x598e9c, _0x3953df[_0x594baf++] = _0xe5921e - _0x16f083, _0x3953df[_0x594baf++] = _0x4237d6, _0x3953df[_0x594baf++] = _0x598e9c, _0x3953df[_0x594baf++] = _0xe5921e, _0x3953df[_0x594baf++] = _0x4237d6, _0x3953df[_0x594baf++] = 0x1 - _0x11c432 / _0x272506, _0x3953df[_0x594baf++] = (_0xcc1b89 / _0x3fcd97 * (Math['PI'] * _0x247af2 / 0x2) + (_0x109856 + Math['PI'] * _0x247af2 / 0x2)) / (_0x109856 + Math['PI'] * _0x247af2), _0xcc1b89 < _0x3fcd97 && (_0x2994e8[_0x4a7299++] = _0x1b6063 + _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432, _0x2994e8[_0x4a7299++] = _0x1b6063 + _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + (_0x272506 + 0x1), _0x2994e8[_0x4a7299++] = _0x1b6063 + _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + 0x1, _0x2994e8[_0x4a7299++] = _0x1b6063 + _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432, _0x2994e8[_0x4a7299++] = _0x1b6063 + _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + _0x272506, _0x2994e8[_0x4a7299++] = _0x1b6063 + _0xcc1b89 * (_0x272506 + 0x1) + _0x11c432 + (_0x272506 + 0x1));
            for (_0x1b6063 += (_0x3fcd97 + 0x1) * (_0x272506 + 0x1), _0x11c432 = 0x0; _0x11c432 <= _0x272506; _0x11c432++)
                _0x598e9c = _0x247af2 * Math[_0x1788ad(0x278)](_0x11c432 * _0x241707 + Math['PI']), _0xe5921e = _0x16f083, _0x4237d6 = _0x247af2 * Math[_0x1788ad(0x27f)](_0x11c432 * _0x241707 + Math['PI']), _0x3953df[_0x594baf++] = _0x598e9c, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = _0x598e9c, _0x3953df[_0x594baf++] = _0xe5921e, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = -_0xe5921e, _0x3953df[_0x594baf++] = _0x4237d6, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = _0x4237d6, _0x3953df[_0x594baf++] = _0x598e9c, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = _0x598e9c, _0x3953df[_0x594baf++] = 0x0, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = 0x0, _0x3953df[_0x594baf++] = _0x4237d6, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = _0x4237d6, _0x3953df[_0x594baf++] = 0x1 - 0x1 * _0x11c432 / _0x272506, _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = 0x1 - 0x1 * _0x11c432 / _0x272506, _0x3953df[_0x594baf++] = Math['PI'] * _0x247af2 / 0x2 / (_0x109856 + Math['PI'] * _0x247af2), _0x3953df[_0x594baf + 0x8 * (_0x272506 + 0x1) - 0x1] = (Math['PI'] * _0x247af2 / 0x2 + _0x109856) / (_0x109856 + Math['PI'] * _0x247af2);
            for (_0x11c432 = 0x0; _0x11c432 < _0x272506; _0x11c432++)
                _0x2994e8[_0x4a7299++] = _0x11c432 + _0x1b6063 + (_0x272506 + 0x1), _0x2994e8[_0x4a7299++] = _0x11c432 + _0x1b6063 + 0x1, _0x2994e8[_0x4a7299++] = _0x11c432 + _0x1b6063, _0x2994e8[_0x4a7299++] = _0x11c432 + _0x1b6063 + (_0x272506 + 0x1), _0x2994e8[_0x4a7299++] = _0x11c432 + _0x1b6063 + (_0x272506 + 0x1) + 0x1, _0x2994e8[_0x4a7299++] = _0x11c432 + _0x1b6063 + 0x1;
            return _0x1b6063 += 0x2 * (_0x272506 + 0x1), _0x3955c2[_0x1788ad(0xfa0)](_0x128851, _0x3953df, _0x2994e8);
        }
        static [_0x6027f5(0xfa5)](_0x1dc54f = 0.5, _0xfbcb77 = 0x1, _0x3ce4ea = 0x20) {
            var _0xec29d7 = _0x6027f5;
            for (var _0x4198ba, _0x349b98 = _0x3ce4ea + 0x1 + 0x1 + 0x2 * (_0x3ce4ea + 0x1), _0x46db6e = 0x6 * _0x3ce4ea + 0x3 * _0x3ce4ea, _0x5aa47b = _0x73b54a[_0xec29d7(0x607)]('POSITION,NORMAL,UV'), _0xec0820 = _0x5aa47b[_0xec29d7(0x4e5)] / 0x4, _0x3b2632 = new Float32Array(_0x349b98 * _0xec0820), _0x1a2131 = new Uint16Array(_0x46db6e), _0x3ed96f = 0x2 * Math['PI'] / _0x3ce4ea, _0x4ac401 = _0xfbcb77 / 0x2, _0x48f4f5 = 0x0, _0x374330 = 0x0, _0x31fc39 = 0x0, _0x28e7d7 = 0x0, _0x11cd79 = 0x0, _0x3f48ae = new _0x3697cd(), _0x4b921f = new _0x3697cd(0x0, -0x1, 0x0), _0x73eaa8 = new _0x3697cd(0x0, _0x4ac401, 0x0), _0x2bfbfd = new _0x3697cd(), _0x55143a = new _0x3697cd(), _0x15271b = new _0x528999(), _0x7b92c5 = new _0x3697cd(), _0x2ccdaf = 0x0, _0x332ea0 = 0x0, _0x3f3c3b = 0x0; _0x3f3c3b <= _0x3ce4ea; _0x3f3c3b++)
                _0x48f4f5 = _0x3f3c3b * _0x3ed96f, _0x31fc39 = Math[_0xec29d7(0x278)](_0x48f4f5 + Math['PI']) * _0x1dc54f, _0x28e7d7 = _0x4ac401, _0x11cd79 = Math[_0xec29d7(0x27f)](_0x48f4f5 + Math['PI']) * _0x1dc54f, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = _0x31fc39, _0x3b2632[_0x2ccdaf++] = _0x28e7d7, _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = -_0x28e7d7, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = _0x11cd79, _0x3f48ae['x'] = _0x31fc39, _0x3f48ae['y'] = 0x0, _0x3f48ae['z'] = _0x11cd79, _0x2bfbfd['x'] = _0x31fc39, _0x2bfbfd['y'] = -_0x28e7d7, _0x2bfbfd['z'] = _0x11cd79, _0x3697cd[_0xec29d7(0x28a)](_0x2bfbfd, _0x73eaa8, _0x55143a), _0x3697cd[_0xec29d7(0x214)](_0x55143a, _0x55143a), _0x4198ba = Math['acos'](_0x3697cd[_0xec29d7(0x20b)](_0x4b921f, _0x55143a)), _0x3697cd['cross'](_0x4b921f, _0x55143a, _0x7b92c5), _0x3697cd[_0xec29d7(0x214)](_0x7b92c5, _0x7b92c5), _0x528999[_0xec29d7(0xfa6)](_0x7b92c5, _0x4198ba, _0x15271b), _0x3697cd['normalize'](_0x3f48ae, _0x3f48ae), _0x3697cd[_0xec29d7(0x294)](_0x3f48ae, _0x15271b, _0x3f48ae), _0x3697cd[_0xec29d7(0x214)](_0x3f48ae, _0x3f48ae), _0x3b2632[_0x2ccdaf++] = _0x3f48ae['x'], _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = _0x3f48ae['x'], _0x3b2632[_0x2ccdaf++] = _0x3f48ae['y'], _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = _0x3f48ae['y'], _0x3b2632[_0x2ccdaf++] = _0x3f48ae['z'], _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = _0x3f48ae['z'], _0x3b2632[_0x2ccdaf++] = 0x1 - 0x1 * _0x3f3c3b / _0x3ce4ea, _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = 0x1 - 0x1 * _0x3f3c3b / _0x3ce4ea, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf + 0x8 * (_0x3ce4ea + 0x1) - 0x1] = 0x1;
            _0x2ccdaf += 0x8 * (_0x3ce4ea + 0x1);
            for (var _0x4a9952 = 0x0; _0x4a9952 < _0x3ce4ea; _0x4a9952++)
                _0x1a2131[_0x332ea0++] = _0x4a9952 + _0x374330 + (_0x3ce4ea + 0x1), _0x1a2131[_0x332ea0++] = _0x4a9952 + _0x374330 + 0x1, _0x1a2131[_0x332ea0++] = _0x4a9952 + _0x374330, _0x1a2131[_0x332ea0++] = _0x4a9952 + _0x374330 + (_0x3ce4ea + 0x1), _0x1a2131[_0x332ea0++] = _0x4a9952 + _0x374330 + (_0x3ce4ea + 0x1) + 0x1, _0x1a2131[_0x332ea0++] = _0x4a9952 + _0x374330 + 0x1;
            _0x374330 += 0x2 * (_0x3ce4ea + 0x1);
            for (var _0xa2e390 = 0x0; _0xa2e390 <= _0x3ce4ea; _0xa2e390++)
                0x0 === _0xa2e390 && (_0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf++] = -_0x4ac401, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf++] = -0x1, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf++] = 0.5, _0x3b2632[_0x2ccdaf++] = 0.5), _0x48f4f5 = _0xa2e390 * _0x3ed96f, _0x31fc39 = Math[_0xec29d7(0x278)](_0x48f4f5 + Math['PI']) * _0x1dc54f, _0x28e7d7 = -_0x4ac401, _0x11cd79 = Math[_0xec29d7(0x27f)](_0x48f4f5 + Math['PI']) * _0x1dc54f, _0x3b2632[_0x2ccdaf++] = _0x31fc39, _0x3b2632[_0x2ccdaf++] = _0x28e7d7, _0x3b2632[_0x2ccdaf++] = _0x11cd79, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf++] = -0x1, _0x3b2632[_0x2ccdaf++] = 0x0, _0x3b2632[_0x2ccdaf++] = 0.5 + 0.5 * Math['cos'](_0x48f4f5), _0x3b2632[_0x2ccdaf++] = 0.5 + 0.5 * Math[_0xec29d7(0x27f)](_0x48f4f5);
            for (var _0x3b605a = 0x0; _0x3b605a < _0x3ce4ea; _0x3b605a++)
                _0x1a2131[_0x332ea0++] = 0x0 + _0x374330, _0x1a2131[_0x332ea0++] = _0x3b605a + 0x2 + _0x374330, _0x1a2131[_0x332ea0++] = _0x3b605a + 0x1 + _0x374330;
            return _0x374330 += _0x3ce4ea + 0x1 + 0x1, _0x3955c2[_0xec29d7(0xfa0)](_0x5aa47b, _0x3b2632, _0x1a2131);
        }
        static [_0x6027f5(0xfa7)](_0x314248 = 0.5, _0x214087 = 0x2, _0x10ba7b = 0x20) {
            var _0x375891 = _0x6027f5;
            for (var _0x249545 = _0x10ba7b + 0x1 + 0x1 + 0x2 * (_0x10ba7b + 0x1) + (_0x10ba7b + 0x1 + 0x1), _0x154c60 = 0x3 * _0x10ba7b + 0x6 * _0x10ba7b + 0x3 * _0x10ba7b, _0x5ecb3b = _0x73b54a[_0x375891(0x607)](_0x375891(0xfa4)), _0x46729a = _0x5ecb3b[_0x375891(0x4e5)] / 0x4, _0x1a4f93 = new Float32Array(_0x249545 * _0x46729a), _0x3ac640 = new Uint16Array(_0x154c60), _0x6d894e = 0x2 * Math['PI'] / _0x10ba7b, _0x52b726 = _0x214087 / 0x2, _0x1c4191 = 0x0, _0x598877 = 0x0, _0x251417 = 0x0, _0x1c4be4 = 0x0, _0x5eea15 = 0x0, _0x5d3ede = 0x0, _0x41e895 = 0x0, _0x56132b = 0x0; _0x56132b <= _0x10ba7b; _0x56132b++)
                0x0 === _0x56132b && (_0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = _0x52b726, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0x1, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0.5, _0x1a4f93[_0x5d3ede++] = 0.5), _0x1c4191 = _0x56132b * _0x6d894e, _0x251417 = Math[_0x375891(0x278)](_0x1c4191) * _0x314248, _0x1c4be4 = _0x52b726, _0x5eea15 = Math['sin'](_0x1c4191) * _0x314248, _0x1a4f93[_0x5d3ede++] = _0x251417, _0x1a4f93[_0x5d3ede++] = _0x1c4be4, _0x1a4f93[_0x5d3ede++] = _0x5eea15, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0x1, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0.5 + 0.5 * Math[_0x375891(0x278)](_0x1c4191), _0x1a4f93[_0x5d3ede++] = 0.5 + 0.5 * Math['sin'](_0x1c4191);
            for (var _0x5b3aea = 0x0; _0x5b3aea < _0x10ba7b; _0x5b3aea++)
                _0x3ac640[_0x41e895++] = 0x0, _0x3ac640[_0x41e895++] = _0x5b3aea + 0x1, _0x3ac640[_0x41e895++] = _0x5b3aea + 0x2;
            _0x598877 += _0x10ba7b + 0x1 + 0x1;
            for (var _0x442465 = 0x0; _0x442465 <= _0x10ba7b; _0x442465++)
                _0x1c4191 = _0x442465 * _0x6d894e, _0x251417 = Math[_0x375891(0x278)](_0x1c4191 + Math['PI']) * _0x314248, _0x1c4be4 = _0x52b726, _0x5eea15 = Math['sin'](_0x1c4191 + Math['PI']) * _0x314248, _0x1a4f93[_0x5d3ede++] = _0x251417, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = _0x251417, _0x1a4f93[_0x5d3ede++] = _0x1c4be4, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = -_0x1c4be4, _0x1a4f93[_0x5d3ede++] = _0x5eea15, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = _0x5eea15, _0x1a4f93[_0x5d3ede++] = _0x251417, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = _0x251417, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = 0x0, _0x1a4f93[_0x5d3ede++] = _0x5eea15, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = _0x5eea15, _0x1a4f93[_0x5d3ede++] = 0x1 - 0x1 * _0x442465 / _0x10ba7b, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = 0x1 - 0x1 * _0x442465 / _0x10ba7b, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede + 0x8 * (_0x10ba7b + 0x1) - 0x1] = 0x1;
            _0x5d3ede += 0x8 * (_0x10ba7b + 0x1);
            for (var _0x4492f2 = 0x0; _0x4492f2 < _0x10ba7b; _0x4492f2++)
                _0x3ac640[_0x41e895++] = _0x4492f2 + _0x598877 + (_0x10ba7b + 0x1), _0x3ac640[_0x41e895++] = _0x4492f2 + _0x598877 + 0x1, _0x3ac640[_0x41e895++] = _0x4492f2 + _0x598877, _0x3ac640[_0x41e895++] = _0x4492f2 + _0x598877 + (_0x10ba7b + 0x1), _0x3ac640[_0x41e895++] = _0x4492f2 + _0x598877 + (_0x10ba7b + 0x1) + 0x1, _0x3ac640[_0x41e895++] = _0x4492f2 + _0x598877 + 0x1;
            _0x598877 += 0x2 * (_0x10ba7b + 0x1);
            for (var _0x2cb399 = 0x0; _0x2cb399 <= _0x10ba7b; _0x2cb399++)
                0x0 === _0x2cb399 && (_0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = -_0x52b726, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = -0x1, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0.5, _0x1a4f93[_0x5d3ede++] = 0.5), _0x1c4191 = _0x2cb399 * _0x6d894e, _0x251417 = Math[_0x375891(0x278)](_0x1c4191 + Math['PI']) * _0x314248, _0x1c4be4 = -_0x52b726, _0x5eea15 = Math[_0x375891(0x27f)](_0x1c4191 + Math['PI']) * _0x314248, _0x1a4f93[_0x5d3ede++] = _0x251417, _0x1a4f93[_0x5d3ede++] = _0x1c4be4, _0x1a4f93[_0x5d3ede++] = _0x5eea15, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = -0x1, _0x1a4f93[_0x5d3ede++] = 0x0, _0x1a4f93[_0x5d3ede++] = 0.5 + 0.5 * Math[_0x375891(0x278)](_0x1c4191), _0x1a4f93[_0x5d3ede++] = 0.5 + 0.5 * Math[_0x375891(0x27f)](_0x1c4191);
            for (var _0x1db819 = 0x0; _0x1db819 < _0x10ba7b; _0x1db819++)
                _0x3ac640[_0x41e895++] = 0x0 + _0x598877, _0x3ac640[_0x41e895++] = _0x1db819 + 0x2 + _0x598877, _0x3ac640[_0x41e895++] = _0x1db819 + 0x1 + _0x598877;
            return _0x598877 += _0x10ba7b + 0x1 + 0x1, _0x3955c2[_0x375891(0xfa0)](_0x5ecb3b, _0x1a4f93, _0x3ac640);
        }
        static [_0x6027f5(0xfa8)](_0x101f0b = 0xa, _0x543a1d = 0xa, _0x38251e = 0xa, _0x4b7eb1 = 0xa) {
            var _0x37f7d7 = _0x6027f5;
            for (var _0x584d33 = (_0x38251e + 0x1) * (_0x4b7eb1 + 0x1), _0x3fd7c8 = new Uint16Array(_0x38251e * _0x4b7eb1 * 0x2 * 0x3), _0x146c91 = _0x73b54a['getVertexDeclaration'](_0x37f7d7(0xfa4)), _0x44faa6 = _0x146c91[_0x37f7d7(0x4e5)] / 0x4, _0x25384d = new Float32Array(_0x584d33 * _0x44faa6), _0x1bfc2c = _0x101f0b / 0x2, _0x16121f = _0x543a1d / 0x2, _0x5b6e78 = _0x101f0b / _0x38251e, _0x2b16fb = _0x543a1d / _0x4b7eb1, _0x56d7de = 0x0, _0x359f40 = 0x0; _0x359f40 <= _0x4b7eb1; _0x359f40++)
                for (var _0x180fa4 = 0x0; _0x180fa4 <= _0x38251e; _0x180fa4++)
                    _0x25384d[_0x56d7de++] = _0x180fa4 * _0x5b6e78 - _0x1bfc2c, _0x25384d[_0x56d7de++] = 0x0, _0x25384d[_0x56d7de++] = _0x359f40 * _0x2b16fb - _0x16121f, _0x25384d[_0x56d7de++] = 0x0, _0x25384d[_0x56d7de++] = 0x1, _0x25384d[_0x56d7de++] = 0x0, _0x25384d[_0x56d7de++] = 0x1 * _0x180fa4 / _0x38251e, _0x25384d[_0x56d7de++] = 0x1 * _0x359f40 / _0x4b7eb1;
            var _0x266575 = 0x0;
            for (_0x359f40 = 0x0; _0x359f40 < _0x4b7eb1; _0x359f40++)
                for (_0x180fa4 = 0x0; _0x180fa4 < _0x38251e; _0x180fa4++)
                    _0x3fd7c8[_0x266575++] = (_0x359f40 + 0x1) * (_0x38251e + 0x1) + _0x180fa4, _0x3fd7c8[_0x266575++] = _0x359f40 * (_0x38251e + 0x1) + _0x180fa4, _0x3fd7c8[_0x266575++] = (_0x359f40 + 0x1) * (_0x38251e + 0x1) + _0x180fa4 + 0x1, _0x3fd7c8[_0x266575++] = _0x359f40 * (_0x38251e + 0x1) + _0x180fa4, _0x3fd7c8[_0x266575++] = _0x359f40 * (_0x38251e + 0x1) + _0x180fa4 + 0x1, _0x3fd7c8[_0x266575++] = (_0x359f40 + 0x1) * (_0x38251e + 0x1) + _0x180fa4 + 0x1;
            return _0x3955c2[_0x37f7d7(0xfa0)](_0x146c91, _0x25384d, _0x3fd7c8);
        }
        static [_0x6027f5(0xfa9)](_0x32993b = 0x1, _0x562332 = 0x1) {
            var _0x61a630 = _0x6027f5, _0x33b282 = _0x73b54a[_0x61a630(0x607)](_0x61a630(0xfa4)), _0x29293a = _0x32993b / 0x2, _0x3a5de6 = _0x562332 / 0x2, _0x245b17 = new Float32Array([
                    -_0x29293a,
                    _0x3a5de6,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x29293a,
                    _0x3a5de6,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    -_0x29293a,
                    -_0x3a5de6,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    _0x29293a,
                    -_0x3a5de6,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1
                ]), _0x5d245a = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x3,
                    0x2,
                    0x1
                ]);
            return _0x3955c2[_0x61a630(0xfa0)](_0x33b282, _0x245b17, _0x5d245a);
        }
        static [_0x6027f5(0xfaa)](_0x1863ed = 0.5, _0x3faa3d = 0x20, _0x2824c2 = 0x20) {
            var _0x2bbbd8 = _0x6027f5, _0x3a3246 = (_0x3faa3d + 0x1) * (_0x2824c2 + 0x1), _0x18b0a9 = 0x3 * _0x3faa3d * (_0x2824c2 + 0x1) * 0x2, _0xb716ec = new Uint16Array(_0x18b0a9), _0x54273b = _0x73b54a[_0x2bbbd8(0x607)](_0x2bbbd8(0xfa4)), _0x40daf3 = _0x54273b[_0x2bbbd8(0x4e5)] / 0x4, _0x20ff64 = new Float32Array(_0x3a3246 * _0x40daf3), _0x48e45e = Math['PI'] / _0x3faa3d, _0x1a326e = 0x2 * Math['PI'] / _0x2824c2, _0x2b1ecd = 0x0;
            _0x3a3246 = 0x0, _0x18b0a9 = 0x0;
            for (var _0x2a5f32 = 0x0; _0x2a5f32 < _0x3faa3d + 0x1; _0x2a5f32++)
                for (var _0x470d81 = Math[_0x2bbbd8(0x27f)](_0x2a5f32 * _0x48e45e), _0x3f98e5 = Math[_0x2bbbd8(0x278)](_0x2a5f32 * _0x48e45e), _0x3461a7 = 0x0; _0x3461a7 < _0x2824c2 + 0x1; _0x3461a7++) {
                    var _0xb44a28 = _0x470d81 * Math['sin'](_0x3461a7 * _0x1a326e + 0x1 * Math['PI'] / 0x2), _0x46d0d8 = _0x470d81 * Math['cos'](_0x3461a7 * _0x1a326e + 0x1 * Math['PI'] / 0x2);
                    _0x20ff64[_0x3a3246 + 0x0] = _0xb44a28 * _0x1863ed, _0x20ff64[_0x3a3246 + 0x1] = _0x3f98e5 * _0x1863ed, _0x20ff64[_0x3a3246 + 0x2] = _0x46d0d8 * _0x1863ed, _0x20ff64[_0x3a3246 + 0x3] = _0xb44a28, _0x20ff64[_0x3a3246 + 0x4] = _0x3f98e5, _0x20ff64[_0x3a3246 + 0x5] = _0x46d0d8, _0x20ff64[_0x3a3246 + 0x6] = _0x3461a7 / _0x2824c2, _0x20ff64[_0x3a3246 + 0x7] = _0x2a5f32 / _0x3faa3d, _0x3a3246 += _0x40daf3, _0x2a5f32 != _0x3faa3d - 0x1 && (_0xb716ec[_0x18b0a9++] = _0x2b1ecd + (_0x2824c2 + 0x1), _0xb716ec[_0x18b0a9++] = _0x2b1ecd, _0xb716ec[_0x18b0a9++] = _0x2b1ecd + 0x1, _0xb716ec[_0x18b0a9++] = _0x2b1ecd + _0x2824c2, _0xb716ec[_0x18b0a9++] = _0x2b1ecd, _0xb716ec[_0x18b0a9++] = _0x2b1ecd + (_0x2824c2 + 0x1), _0x2b1ecd++);
                }
            return _0x3955c2[_0x2bbbd8(0xfa0)](_0x54273b, _0x20ff64, _0xb716ec);
        }
    }
    var _0x2f122d = _0x6027f5(0xfab);
    class _0x5d0120 {
        constructor() {
        }
        static [_0x6027f5(0x230)]() {
            var _0xe35b55 = _0x6027f5;
            _0x3a9f31[_0xe35b55(0xbc0)] = _0x3a9f31[_0xe35b55(0x510)](_0xe35b55(0xfac)), _0x3a9f31[_0xe35b55(0xfad)] = _0x3a9f31['getDefineByName'](_0xe35b55(0xfae)), _0x3a9f31[_0xe35b55(0xfaf)] = _0x3a9f31[_0xe35b55(0x510)]('GRAPHICS_API_GLES3'), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfb0), _0xe35b55(0xfb1)), _0x3a9f31['addInclude']('ShadowSampleTent.glsl', _0xe35b55(0xfb2)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfb3), _0xe35b55(0xfb4)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfb5), _0xe35b55(0xfb6)), _0x3a9f31['addInclude'](_0xe35b55(0xfb7), _0xe35b55(0xfb8)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfb9), _0xe35b55(0xfba)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfbb), _0xe35b55(0xfbc)), _0x3a9f31[_0xe35b55(0x52d)]('Sampling.glsl', _0xe35b55(0xfbd)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfbe), _0xe35b55(0xfbf)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfc0), _0xe35b55(0xfc1)), _0x3a9f31[_0xe35b55(0x52d)]('PBRFSInput.glsl', _0xe35b55(0xfc2)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfc3), _0xe35b55(0xfc4)), _0x3a9f31[_0xe35b55(0x52d)]('PBRCore.glsl', 'struct\x20FragmentCommonData{\x0d\x0a\x09vec3\x20diffColor;\x0d\x0a\x09vec3\x20specColor;\x0d\x0a\x09float\x20oneMinusReflectivity;\x0d\x0a\x09float\x20smoothness;\x0d\x0a\x09//vec3\x20eyeVec;TODO:maybe\x20can\x20remove\x0d\x0a\x09//float\x20alpha;\x0d\x0a\x09//vec3\x20reflUVW;\x0d\x0a};\x0d\x0a\x0d\x0a#if\x20!defined(SETUP_BRDF_INPUT)//shader内部的宏需要将改成#ifdef改成#if类型\x20不然会被Laya的shader分析器优化掉\x0d\x0a\x20\x20\x20\x20#define\x20SETUP_BRDF_INPUT\x20metallicSetup//default\x20is\x20metallicSetup,also\x20can\x20be\x20other.\x20\x0d\x0a#endif\x0d\x0a\x0d\x0aconst\x20mediump\x20vec4\x20dielectricSpecularColor\x20=\x20vec4(0.220916301,\x200.220916301,\x200.220916301,\x201.0\x20-\x200.220916301);\x0d\x0a\x0d\x0amediump\x20vec3\x20diffuseAndSpecularFromMetallic(mediump\x20vec3\x20albedo,mediump\x20float\x20metallic,\x20out\x20mediump\x20vec3\x20specColor,\x20out\x20mediump\x20float\x20oneMinusReflectivity)\x0d\x0a{\x0d\x0a\x09specColor\x20=\x20mix(dielectricSpecularColor.rgb,\x20albedo,\x20metallic);\x0d\x0a\x09oneMinusReflectivity=\x20dielectricSpecularColor.a*(1.0-metallic);//diffuse\x20proportion\x0d\x0a\x09return\x20albedo\x20*\x20oneMinusReflectivity;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20float\x20specularStrength(mediump\x20vec3\x20specular)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x20max\x20(max\x20(specular.r,\x20specular.g),\x20specular.b);\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Diffuse/Spec\x20Energy\x20conservation\x0d\x0amediump\x20vec3\x20energyConservationBetweenDiffuseAndSpecular\x20(mediump\x20vec3\x20albedo,\x20mediump\x20vec3\x20specColor,\x20out\x20mediump\x20float\x20oneMinusReflectivity)\x0d\x0a{\x0d\x0a\x09oneMinusReflectivity\x20=\x201.0\x20-\x20specularStrength(specColor);\x0d\x0a\x20\x20\x20\x20return\x20albedo\x20*\x20(vec3(1.0)\x20-\x20specColor);\x0d\x0a}\x0d\x0a\x0d\x0a#ifdef\x20TRANSPARENTBLEND\x0d\x0a\x09mediump\x20vec3\x20preMultiplyAlpha\x20(mediump\x20vec3\x20diffColor,\x20mediump\x20float\x20alpha,\x20mediump\x20float\x20oneMinusReflectivity,out\x20mediump\x20float\x20modifiedAlpha)\x0d\x0a\x09{\x0d\x0a\x09\x09//\x20Transparency\x20\x27removes\x27\x20from\x20Diffuse\x20component\x0d\x0a\x09\x09diffColor\x20*=\x20alpha;\x0d\x0a\x09\x09//\x20Reflectivity\x20\x27removes\x27\x20from\x20the\x20rest\x20of\x20components,\x20including\x20Transparency\x0d\x0a\x09\x09//\x20modifiedAlpha\x20=\x201.0-(1.0-alpha)*(1.0-reflectivity)\x20=\x201.0-(oneMinusReflectivity\x20-\x20alpha*oneMinusReflectivity)\x20=\x201.0-oneMinusReflectivity\x20+\x20alpha*oneMinusReflectivity\x0d\x0a\x09\x09modifiedAlpha\x20=\x201.0\x20-\x20oneMinusReflectivity\x20+\x20alpha*oneMinusReflectivity;\x0d\x0a\x09\x09return\x20diffColor;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0aFragmentCommonData\x20metallicSetup(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09mediump\x20vec2\x20metallicGloss\x20=\x20getMetallicGloss(uv);\x0d\x0a\x09mediump\x20float\x20metallic\x20=\x20metallicGloss.x;\x0d\x0a\x09mediump\x20float\x20smoothness\x20=\x20metallicGloss.y;\x20//\x20this\x20is\x201\x20minus\x20the\x20square\x20root\x20of\x20real\x20roughness\x20m.\x0d\x0a\x09mediump\x20float\x20oneMinusReflectivity;\x0d\x0a\x09mediump\x20vec3\x20specColor;\x0d\x0a\x09mediump\x20vec3\x20diffColor\x20=\x20diffuseAndSpecularFromMetallic(albedo(uv),\x20metallic,/*out*/specColor,/*out*/oneMinusReflectivity);\x0d\x0a\x0d\x0a\x09FragmentCommonData\x20o;\x0d\x0a\x09o.diffColor\x20=\x20diffColor;\x0d\x0a\x09o.specColor\x20=\x20specColor;\x0d\x0a\x09o.oneMinusReflectivity\x20=\x20oneMinusReflectivity;\x0d\x0a\x09o.smoothness\x20=\x20smoothness;\x0d\x0a\x09return\x20o;\x0d\x0a}\x0d\x0a\x0d\x0aFragmentCommonData\x20specularSetup(vec2\x20uv)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20mediump\x20vec4\x20specGloss\x20=\x20specularGloss(uv);\x0d\x0a\x20\x20\x20\x20mediump\x20vec3\x20specColor\x20=\x20specGloss.rgb;\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20smoothness\x20=\x20specGloss.a;\x0d\x0a\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20oneMinusReflectivity;\x0d\x0a\x20\x20\x20\x20mediump\x20vec3\x20diffColor\x20=\x20energyConservationBetweenDiffuseAndSpecular\x20(albedo(uv),\x20specColor,\x20/*out*/\x20oneMinusReflectivity);\x0d\x0a\x0d\x0a\x20\x20\x20\x20FragmentCommonData\x20o;\x0d\x0a\x20\x20\x20\x20o.diffColor\x20=\x20diffColor;\x0d\x0a\x20\x20\x20\x20o.specColor\x20=\x20specColor;\x0d\x0a\x20\x20\x20\x20o.oneMinusReflectivity\x20=\x20oneMinusReflectivity;\x0d\x0a\x20\x20\x20\x20o.smoothness\x20=\x20smoothness;\x0d\x0a\x20\x20\x20\x20return\x20o;\x0d\x0a}\x0d\x0a\x0d\x0aLayaGI\x20fragmentGI(float\x20smoothness,vec3\x20eyeVec,mediump\x20float\x20occlusion,mediump\x20vec2\x20lightmapUV,vec3\x20worldnormal,vec3\x20worldPos)\x0d\x0a{\x0d\x0a\x09LayaGIInput\x20giInput;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09giInput.lightmapUV=lightmapUV;\x0d\x0a\x09#endif\x0d\x0a\x09giInput.worldPos\x20=\x20worldPos;\x0d\x0a\x0d\x0a\x09vec3\x20worldViewDir\x20=\x20-eyeVec;\x0d\x0a\x09mediump\x20vec4\x20uvwRoughness;\x0d\x0a\x09uvwRoughness.rgb\x20=\x20reflect(worldViewDir,\x20worldnormal);//reflectUVW\x0d\x0a\x09uvwRoughness.a=\x20smoothnessToPerceptualRoughness(smoothness);//perceptualRoughness\x0d\x0a\x0d\x0a\x09return\x20layaGlobalIllumination(giInput,occlusion,\x20worldnormal,\x20uvwRoughness);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avec3\x20perPixelWorldNormal(vec2\x20uv,vec3\x20normal,vec3\x20binormal,vec3\x20tangent)\x0d\x0a{\x0d\x0a\x09#ifdef\x20NORMALTEXTURE\x0d\x0a\x09\x09mediump\x20vec3\x20normalTangent=normalInTangentSpace(uv);\x0d\x0a\x09\x09vec3\x20normalWorld\x20=\x20normalize(tangent\x20*\x20normalTangent.x\x20+\x20binormal\x20*\x20normalTangent.y\x20+\x20normal\x20*\x20normalTangent.z);\x0d\x0a\x09#else\x0d\x0a\x09\x09vec3\x20normalWorld\x20=\x20normalize(normal);\x0d\x0a\x09#endif\x0d\x0a\x09\x09return\x20normalWorld;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragmentForward()\x0d\x0a{\x0d\x0a\x09vec2\x20uv;\x0d\x0a\x09#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09\x09#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09\x09\x09uv\x20=\x20parallax(v_Texcoord0,normalize(v_ViewDirForParallax));\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09uv\x20=\x20v_Texcoord0;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mediump\x20float\x20alpha\x20=\x20getAlpha(uv);\x0d\x0a\x09#ifdef\x20ALPHATEST\x0d\x0a\x09\x09if(alpha<u_AlphaTestValue)\x0d\x0a\x09\x09\x09discard;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09FragmentCommonData\x20o\x20=\x20SETUP_BRDF_INPUT(uv);\x0d\x0a\x09\x0d\x0a\x09vec3\x20binormal;\x0d\x0a\x09vec3\x20tangent;\x0d\x0a\x09#ifdef\x20NORMALTEXTURE\x0d\x0a\x09\x09tangent\x20=\x20v_Tangent;\x0d\x0a\x09\x09binormal\x20=\x20v_Binormal;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec3\x20normal\x20=\x20v_Normal;\x0d\x0a\x09vec3\x20normalWorld\x20=\x20perPixelWorldNormal(uv,normal,binormal,tangent);//In\x20FS\x20if\x20the\x20normal\x20use\x20mediump\x20before\x20normalize\x20will\x20cause\x20precision\x20prolem\x20in\x20mobile\x20device.\x0d\x0a\x09vec3\x20eyeVec\x20=\x20normalize(v_EyeVec);\x0d\x0a\x09vec3\x20posworld\x20=\x20v_PositionWorld;\x0d\x0a\x0d\x0a\x09#ifdef\x20TRANSPARENTBLEND\x0d\x0a\x09\x09o.diffColor=preMultiplyAlpha(o.diffColor,alpha,o.oneMinusReflectivity,/*out*/alpha);//\x20shader\x20relies\x20on\x20pre-multiply\x20alpha-blend\x20(srcBlend\x20=\x20One,\x20dstBlend\x20=\x20OneMinusSrcAlpha)\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mediump\x20float\x20occlusion\x20=\x20getOcclusion(uv);\x0d\x0a\x09mediump\x20vec2\x20lightMapUV;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09lightMapUV=v_LightMapUV;\x0d\x0a\x09#endif\x0d\x0a\x09float\x20perceptualRoughness\x20=\x20smoothnessToPerceptualRoughness(o.smoothness);\x0d\x0a\x09float\x20roughness\x20=\x20perceptualRoughnessToRoughness(perceptualRoughness);\x0d\x0a\x09float\x20nv\x20=\x20abs(dot(normalWorld,\x20eyeVec));\x0d\x0a\x09LayaGI\x20gi\x20=fragmentGI(o.smoothness,eyeVec,occlusion,lightMapUV,normalWorld,posworld);\x0d\x0a\x09vec4\x20color\x20=\x20LAYA_BRDF_GI(o.diffColor,o.specColor,o.oneMinusReflectivity,o.smoothness,perceptualRoughness,roughness,nv,normalWorld,eyeVec,gi);\x0d\x0a\x09\x0d\x0a\x09float\x20shadowAttenuation\x20=\x201.0;\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09shadowAttenuation=sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09LayaLight\x20dirLight\x20=\x20layaDirectionLightToLight(u_DirectionLight,shadowAttenuation);\x0d\x0a\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,dirLight);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09LayaLight\x20poiLight\x20=\x20layaPointLightToLight(posworld,normalWorld,u_PointLight,shadowAttenuation);\x0d\x0a\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,poiLight);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09shadowAttenuation\x20=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x20\x20\x20\x20LayaLight\x20spoLight\x20=\x20layaSpotLightToLight(posworld,normalWorld,u_SpotLight,shadowAttenuation);\x0d\x0a\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,spoLight);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x20\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09\x09if(i\x20>=\x20u_DirationLightCount)\x0d\x0a\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09\x09shadowAttenuation\x20*=\x20sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09DirectionLight\x20directionLight\x20=\x20getDirectionLight(u_LightBuffer,i);\x0d\x0a\x09\x09\x09\x09LayaLight\x20dirLight\x20=\x20layaDirectionLightToLight(directionLight,shadowAttenuation);\x0d\x0a\x09\x09\x09\x20\x09color+=LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,dirLight);\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x20\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09ivec4\x20clusterInfo\x20=getClusterInfo(u_LightClusterBuffer,u_View,u_Viewport,\x20v_PositionWorld,gl_FragCoord,u_ProjectionParams);\x0d\x0a\x09\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.x)//PointLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09PointLight\x20pointLight\x20=\x20getPointLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaLight\x20poiLight\x20=\x20layaPointLightToLight(posworld,normalWorld,pointLight,shadowAttenuation);\x0d\x0a\x09\x09\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,poiLight);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.y)//SpotLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09\x09shadowAttenuation=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09SpotLight\x20spotLight\x20=\x20getSpotLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaLight\x20spoLight\x20=\x20layaSpotLightToLight(posworld,normalWorld,spotLight,shadowAttenuation);\x0d\x0a\x09\x09\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,spoLight);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x20#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20EMISSION\x0d\x0a\x09\x09color.rgb\x20+=\x20emission(uv);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09\x09color.rgb=mix(color.rgb,u_FogColor,lerpFact);\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09gl_FragColor=vec4(color.rgb,alpha);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a'), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfc5), 'vec2\x20transformLightMapUV(in\x20vec2\x20texcoord,in\x20vec4\x20lightmapScaleOffset)\x0d\x0a{\x0d\x0a\x09vec2\x20lightMapUV=vec2(texcoord.x,1.0-texcoord.y)*lightmapScaleOffset.xy+lightmapScaleOffset.zw;\x0d\x0a\x09lightMapUV.y=1.0-lightMapUV.y;\x0d\x0a\x09return\x20lightMapUV;\x20\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20vertexForward()\x0d\x0a{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=\x20u_ViewProjection\x20*\x20worldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09\x0d\x0a\x0d\x0a\x09v_PositionWorld=(worldMat*position).xyz;\x0d\x0a\x0d\x0a\x09#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09v_EyeVec\x20=u_CameraPos-v_PositionWorld;//will\x20normalize\x20per-pixel\x0d\x0a\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09vec2\x20texcoord;\x0d\x0a\x09\x09#ifdef\x20UV1\x0d\x0a\x09\x09\x09texcoord=a_Texcoord1;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09texcoord=a_Texcoord0;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09v_LightMapUV=transformLightMapUV(texcoord,u_LightmapScaleOffset);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09v_Normal=normalize(a_Normal*worldInvMat);//if\x20no\x20normalize\x20will\x20cause\x20precision\x20problem.\x0d\x0a\x0d\x0a\x09#ifdef\x20NORMALTEXTURE\x0d\x0a\x09\x09v_Tangent=normalize(a_Tangent0.xyz*worldInvMat);\x0d\x0a\x09\x09v_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09\x09vec3\x20binormal\x20=\x20cross(a_Normal,\x20a_Tangent0.xyz)*a_Tangent0.w;\x0d\x0a\x09\x09mat3\x20objectTBN\x20=\x20mat3(a_Tangent0.xyz,\x20binormal,\x20a_Normal);\x0d\x0a\x09\x09v_ViewDirForParallax\x20=(u_CameraPos*worldInvMat-position.xyz)*objectTBN;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09\x09v_ShadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09v_SpotShadowCoord\x20=\x20u_SpotViewProjectMatrix*vec4(v_PositionWorld,1.0);\x0d\x0a\x09#endif\x0d\x0a}'), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfc6), _0xe35b55(0xfc7)), _0x3a9f31[_0xe35b55(0x52d)](_0xe35b55(0xfc8), '#define\x20SAMPLE_DEPTH_TEXTURE(textureName,coord2)\x20(texture2D(textureName,coord2).r)\x0d\x0a//此方法库用来压缩解析深度贴图，法线深度贴图\x0d\x0a\x0d\x0a/*camera\x20传入的Texture以及*/\x0d\x0auniform\x20sampler2D\x20u_CameraDepthTexture;\x0d\x0auniform\x20vec4\x20u_ZBufferParams;\x0d\x0auniform\x20sampler2D\x20u_CameraDepthNormalsTexture;\x0d\x0a\x0d\x0a//\x20Encoding/decoding\x20view\x20space\x20normals\x20into\x202D\x200..1\x20vector\x0d\x0avec2\x20EncodeViewNormalStereo(\x20vec3\x20n\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20n.z\x20=\x20abs(n.z);\x0d\x0a\x20\x20\x20\x20float\x20kScale\x20=\x201.7777;\x0d\x0a\x20\x20\x20\x20vec2\x20enc;\x0d\x0a\x20\x20\x20\x20enc\x20=\x20n.xy\x20/\x20(n.z+1.0);\x0d\x0a\x20\x20\x20\x20enc\x20/=\x20kScale;\x0d\x0a\x20\x20\x20\x20enc\x20=\x20enc*0.5+0.5;\x0d\x0a\x20\x20\x20\x20return\x20enc;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20DecodeViewNormalStereo(\x20vec4\x20enc4\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20float\x20kScale\x20=\x201.7777;\x0d\x0a\x20\x20\x20\x20vec3\x20nn\x20=\x20enc4.xyz*vec3(2.0*kScale,2.0*kScale,0.0)\x20+\x20vec3(-kScale,-kScale,1.0);\x0d\x0a\x20\x20\x20\x20float\x20g\x20=\x202.0\x20/\x20dot(nn.xyz,nn.xyz);\x0d\x0a\x20\x20\x20\x20vec3\x20n;\x0d\x0a\x20\x20\x20\x20n.xy\x20=\x20g*nn.xy;\x0d\x0a\x20\x20\x20\x20n.z\x20=\x20g-1.0;\x0d\x0a\x20\x20\x20\x20return\x20n;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a//\x20Encoding/decoding\x20[0..1)\x20floats\x20into\x208\x20bit/channel\x20RG.\x20Note\x20that\x201.0\x20will\x20not\x20be\x20encoded\x20properly.\x0d\x0avec2\x20EncodeFloatRG(\x20float\x20v\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20vec2\x20kEncodeMul\x20=\x20vec2(1.0,\x20255.0);\x0d\x0a\x20\x20\x20\x20float\x20kEncodeBit\x20=\x201.0/255.0;\x0d\x0a\x20\x20\x20\x20vec2\x20enc\x20=\x20kEncodeMul\x20*\x20v;\x0d\x0a\x20\x20\x20\x20enc\x20=\x20fract(enc);\x0d\x0a\x20\x20\x20\x20enc.x\x20-=\x20enc.y\x20*\x20kEncodeBit;\x0d\x0a\x20\x20\x20\x20return\x20enc;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0afloat\x20DecodeFloatRG(\x20vec2\x20enc\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20vec2\x20kDecodeDot\x20=\x20vec2(1.0,\x201.0/255.0);\x0d\x0a\x20\x20\x20\x20return\x20dot(\x20enc,\x20kDecodeDot\x20);\x0d\x0a}\x0d\x0a\x0d\x0avec4\x20EncodeDepthNormal(float\x20depth,vec3\x20normals){\x0d\x0a\x09vec4\x20encode;\x0d\x0a\x09encode.xy\x20=\x20EncodeViewNormalStereo(normals);\x0d\x0a\x09encode.zw\x20=\x20EncodeFloatRG(depth);\x0d\x0a\x20\x20\x20\x20return\x20encode;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20DecodeDepthNormal(\x20vec4\x20enc,\x20out\x20float\x20depth,\x20out\x20vec3\x20normal\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20depth\x20=\x20DecodeFloatRG\x20(enc.zw);\x0d\x0a\x20\x20\x20\x20normal\x20=\x20DecodeViewNormalStereo\x20(enc);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0avec4\x20depthNormalsFragment(vec4\x20depthNormal)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x20EncodeDepthNormal(depthNormal.w,depthNormal.xyz);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a//\x20Z\x20buffer\x20to\x20linear\x200..1\x20depth\x0d\x0afloat\x20Linear01Depth(float\x20z,vec4\x20zbufferParams)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x201.0\x20/\x20(zbufferParams.x\x20*\x20z\x20+\x20zbufferParams.y);\x0d\x0a}\x0d\x0a//\x20Z\x20buffer\x20to\x20linear\x20depth\x0d\x0afloat\x20LinearEyeDepth(float\x20z,vec4\x20zbufferParams)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x201.0\x20/\x20(zbufferParams.z\x20*\x20z\x20+\x20zbufferParams.w);\x0d\x0a}\x0d\x0a');
            var _0x56d3f8 = {
                    'a_Position': _0x73b54a['MESH_POSITION0'],
                    'a_Color': _0x73b54a['MESH_COLOR0'],
                    'a_Normal': _0x73b54a[_0xe35b55(0x60c)],
                    'a_Texcoord0': _0x73b54a[_0xe35b55(0x616)],
                    'a_Texcoord1': _0x73b54a['MESH_TEXTURECOORDINATE1'],
                    'a_BoneWeights': _0x73b54a[_0xe35b55(0x611)],
                    'a_BoneIndices': _0x73b54a[_0xe35b55(0x617)],
                    'a_Tangent0': _0x73b54a[_0xe35b55(0x614)],
                    'a_WorldMat': _0x73b54a['MESH_WORLDMATRIX_ROW0'],
                    'a_SimpleTextureParams': _0x73b54a['MESH_SIMPLEANIMATOR']
                }, _0x35ae73 = {
                    'u_Bones': _0x3a9f31[_0xe35b55(0x540)],
                    'u_DiffuseTexture': _0x3a9f31[_0xe35b55(0x541)],
                    'u_SpecularTexture': _0x3a9f31[_0xe35b55(0x541)],
                    'u_NormalTexture': _0x3a9f31[_0xe35b55(0x541)],
                    'u_AlphaTestValue': _0x3a9f31[_0xe35b55(0x541)],
                    'u_DiffuseColor': _0x3a9f31[_0xe35b55(0x541)],
                    'u_AlbedoIntensity': _0x3a9f31[_0xe35b55(0x541)],
                    'u_MaterialSpecular': _0x3a9f31[_0xe35b55(0x541)],
                    'u_Shininess': _0x3a9f31[_0xe35b55(0x541)],
                    'u_TilingOffset': _0x3a9f31[_0xe35b55(0x541)],
                    'u_TransmissionRate': _0x3a9f31[_0xe35b55(0x541)],
                    'u_BackDiffuse': _0x3a9f31[_0xe35b55(0x541)],
                    'u_BackScale': _0x3a9f31[_0xe35b55(0x541)],
                    'u_ThinknessTexture': _0x3a9f31[_0xe35b55(0x541)],
                    'u_TransmissionColor': _0x3a9f31[_0xe35b55(0x541)],
                    'u_WorldMat': _0x3a9f31[_0xe35b55(0x542)],
                    'u_MvpMatrix': _0x3a9f31[_0xe35b55(0x542)],
                    'u_LightmapScaleOffset': _0x3a9f31[_0xe35b55(0x542)],
                    'u_LightMap': _0x3a9f31[_0xe35b55(0x542)],
                    'u_LightMapDirection': _0x3a9f31['PERIOD_SPRITE'],
                    'u_SimpleAnimatorTexture': _0x3a9f31[_0xe35b55(0x542)],
                    'u_SimpleAnimatorParams': _0x3a9f31['PERIOD_SPRITE'],
                    'u_SimpleAnimatorTextureSize': _0x3a9f31[_0xe35b55(0x542)],
                    'u_CameraPos': _0x3a9f31[_0xe35b55(0x7a6)],
                    'u_Viewport': _0x3a9f31['PERIOD_CAMERA'],
                    'u_ProjectionParams': _0x3a9f31[_0xe35b55(0x7a6)],
                    'u_View': _0x3a9f31['PERIOD_CAMERA'],
                    'u_ViewProjection': _0x3a9f31[_0xe35b55(0x7a6)],
                    'u_ReflectTexture': _0x3a9f31['PERIOD_SCENE'],
                    'u_FogStart': _0x3a9f31[_0xe35b55(0x543)],
                    'u_FogRange': _0x3a9f31[_0xe35b55(0x543)],
                    'u_FogColor': _0x3a9f31[_0xe35b55(0x543)],
                    'u_DirationLightCount': _0x3a9f31[_0xe35b55(0x543)],
                    'u_LightBuffer': _0x3a9f31['PERIOD_SCENE'],
                    'u_LightClusterBuffer': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientColor': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowBias': _0x3a9f31[_0xe35b55(0x543)],
                    'u_ShadowLightDirection': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowMap': _0x3a9f31['PERIOD_SCENE'],
                    'u_ShadowParams': _0x3a9f31[_0xe35b55(0x543)],
                    'u_ShadowSplitSpheres': _0x3a9f31[_0xe35b55(0x543)],
                    'u_ShadowMatrices': _0x3a9f31[_0xe35b55(0x543)],
                    'u_ShadowMapSize': _0x3a9f31[_0xe35b55(0x543)],
                    'u_SpotShadowMap': _0x3a9f31[_0xe35b55(0x543)],
                    'u_SpotViewProjectMatrix': _0x3a9f31[_0xe35b55(0x543)],
                    'u_ShadowLightPosition': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientSHAr': _0x3a9f31['PERIOD_SCENE'],
                    'u_AmbientSHAg': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientSHAb': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientSHBr': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientSHBg': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientSHBb': _0x3a9f31[_0xe35b55(0x543)],
                    'u_AmbientSHC': _0x3a9f31[_0xe35b55(0x543)],
                    'u_DirectionLight.color': _0x3a9f31[_0xe35b55(0x543)],
                    'u_DirectionLight.direction': _0x3a9f31[_0xe35b55(0x543)],
                    'u_PointLight.position': _0x3a9f31[_0xe35b55(0x543)],
                    'u_PointLight.range': _0x3a9f31['PERIOD_SCENE'],
                    'u_PointLight.color': _0x3a9f31[_0xe35b55(0x543)],
                    'u_SpotLight.position': _0x3a9f31[_0xe35b55(0x543)],
                    'u_SpotLight.direction': _0x3a9f31[_0xe35b55(0x543)],
                    'u_SpotLight.range': _0x3a9f31[_0xe35b55(0x543)],
                    'u_SpotLight.spot': _0x3a9f31['PERIOD_SCENE'],
                    'u_SpotLight.color': _0x3a9f31['PERIOD_SCENE']
                }, _0x206e0c = {
                    's_Cull': _0x3a9f31[_0xe35b55(0x536)],
                    's_Blend': _0x3a9f31[_0xe35b55(0xc87)],
                    's_BlendSrc': _0x3a9f31['RENDER_STATE_BLEND_SRC'],
                    's_BlendDst': _0x3a9f31[_0xe35b55(0x537)],
                    's_DepthTest': _0x3a9f31[_0xe35b55(0x53e)],
                    's_DepthWrite': _0x3a9f31['RENDER_STATE_DEPTH_WRITE']
                }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)]('BLINNPHONG', null, null, !0x0), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73);
            _0x173ca6['addSubShader'](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfc9), '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a\x0d\x0auniform\x20vec4\x20u_DiffuseColor;\x0d\x0auniform\x20float\x20u_AlbedoIntensity;\x0d\x0a\x0d\x0a#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20ALPHATEST\x0d\x0a\x09uniform\x20float\x20u_AlphaTestValue;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20DIFFUSEMAP\x0d\x0a\x09uniform\x20sampler2D\x20u_DiffuseTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(DIFFUSEMAP)||defined(THICKNESSMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a\x09uniform\x20sampler2D\x20u_LightMap;\x0d\x0a\x09#ifdef\x20LIGHTMAP_DIRECTIONAL\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightMapDirection;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Normal;\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09varying\x20vec3\x20v_ViewDir;\x20\x0d\x0a\x0d\x0a\x09uniform\x20vec3\x20u_MaterialSpecular;\x0d\x0a\x09uniform\x20float\x20u_Shininess;\x0d\x0a\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09uniform\x20DirectionLight\x20u_DirectionLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09uniform\x20PointLight\x20u_PointLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09uniform\x20SpotLight\x20u_SpotLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20mat4\x20u_View;\x0d\x0a\x09\x09uniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x09\x09uniform\x20vec4\x20u_Viewport;\x0d\x0a\x09\x09uniform\x20int\x20u_DirationLightCount;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightBuffer;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightClusterBuffer;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20SPECULARMAP\x20\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_SpecularTexture;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20NORMALMAP\x20\x0d\x0a\x09uniform\x20sampler2D\x20u_NormalTexture;\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#include\x20\x22GlobalIllumination.glsl\x22;//\x22GlobalIllumination.glsl\x20use\x20uniform\x20should\x20at\x20front\x20of\x20this\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec3\x20normal;//light\x20and\x20SH\x20maybe\x20use\x20normal\x0d\x0a\x09#if\x20defined(NORMALMAP)\x0d\x0a\x09\x09vec3\x20normalMapSample\x20=\x20texture2D(u_NormalTexture,\x20v_Texcoord0).rgb;\x0d\x0a\x09\x09normal\x20=\x20normalize(NormalSampleToWorldSpace(normalMapSample,\x20v_Normal,\x20v_Tangent,v_Binormal));\x0d\x0a\x09#else\x0d\x0a\x09\x09normal\x20=\x20normalize(v_Normal);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09vec3\x20viewDir=\x20normalize(v_ViewDir);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09LayaGIInput\x20giInput;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x09\x0d\x0a\x09\x09giInput.lightmapUV=v_LightMapUV;\x0d\x0a\x09#endif\x0d\x0a\x09vec3\x20globalDiffuse=layaGIBase(giInput,1.0,normal);\x0d\x0a\x09\x0d\x0a\x09vec4\x20mainColor\x20=\x20u_DiffuseColor\x20*\x20u_AlbedoIntensity;\x0d\x0a\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09vec4\x20difTexColor=texture2D(u_DiffuseTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09mainColor=mainColor*difTexColor;\x0d\x0a\x09#endif\x20\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09mainColor=mainColor*v_Color;\x0d\x0a\x09#endif\x20\x0d\x0a\x20\x20\x20\x20\x0d\x0a\x09#ifdef\x20ALPHATEST\x0d\x0a\x09\x09if(mainColor.a<u_AlphaTestValue)\x0d\x0a\x09\x09\x09discard;\x0d\x0a\x09#endif\x0d\x0a\x20\x20\x0d\x0a\x09\x0d\x0a\x09vec3\x20diffuse\x20=\x20vec3(0.0);\x0d\x0a\x09vec3\x20specular=\x20vec3(0.0);\x0d\x0a\x09vec3\x20transmissionDiffuse\x20=\x20vec3(0.0);\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09vec3\x20dif,spe,transmis;\x0d\x0a\x09\x09float\x20transmissionFactor;\x0d\x0a\x09\x09#ifdef\x20SPECULARMAP\x0d\x0a\x09\x09\x09vec3\x20gloss=texture2D(u_SpecularTexture,\x20v_Texcoord0).rgb;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09\x09\x09vec3\x20gloss=vec3(difTexColor.a);\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09vec3\x20gloss=vec3(1.0);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20THICKNESSMAP\x0d\x0a\x09\x09\x09transmissionFactor\x20=\x20texture2D(u_ThinknessTexture,\x20v_Texcoord0).r;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_DirectionLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09float\x20shadowAttenuation=sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09\x09dif\x20*=\x20shadowAttenuation;\x0d\x0a\x09\x09\x09\x09spe\x20*=\x20shadowAttenuation;\x0d\x0a\x09\x09\x09\x09transmis\x20*=shadowAttenuation;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_PointLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09#endif\x0d\x0a\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_SpotLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09float\x20spotShadowAttenuation\x20=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09\x09dif\x20*=\x20spotShadowAttenuation;\x0d\x0a\x09\x09\x09\x09spe\x20*=\x20spotShadowAttenuation;\x0d\x0a\x09\x09\x09\x09transmis\x20*=spotShadowAttenuation;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09if(i\x20>=\x20u_DirationLightCount)\x0d\x0a\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09DirectionLight\x20directionLight\x20=\x20getDirectionLight(u_LightBuffer,i);\x0d\x0a\x09\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09\x09directionLight.color\x20*=\x20sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09LayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,directionLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09ivec4\x20clusterInfo\x20=getClusterInfo(u_LightClusterBuffer,u_View,u_Viewport,\x20v_PositionWorld,gl_FragCoord,u_ProjectionParams);\x0d\x0a\x09\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.x)//PointLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09PointLight\x20pointLight\x20=\x20getPointLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,pointLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.y)//SpotLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09SpotLight\x20spotLight\x20=\x20getSpotLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09\x09spotLight.color\x20*=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,spotLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09gl_FragColor\x20=vec4(mainColor.rgb*(globalDiffuse\x20+\x20diffuse),mainColor.a);\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09gl_FragColor.rgb+=specular;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09gl_FragColor.rgb+=\x20transmissionDiffuse;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09\x20\x20\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09//gl_FragColor.rgb\x20=transmissionDiffuse;\x0d\x0a}\x0d\x0a\x0d\x0a', _0x206e0c, _0xe35b55(0x3e1)), _0x4ea38f['addShaderPass']('#include\x20\x22ShadowCasterVS.glsl\x22\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20positionCS\x20=\x20\x20shadowCasterVertex();\x0a\x09gl_Position=remapGLPositionZ(positionCS);\x0a}', _0xe35b55(0xc8a), _0x206e0c, _0xe35b55(0x975)), (_0x4ea38f[_0xe35b55(0xc7d)](_0x45efea, _0x420443, _0x206e0c, _0xe35b55(0x979)), _0x56d3f8 = {
                'a_Position': _0x73b54a[_0xe35b55(0x615)],
                'a_Color': _0x73b54a[_0xe35b55(0x60d)]
            }, _0x35ae73 = {
                'u_MvpMatrix': _0x3a9f31[_0xe35b55(0x542)],
                'u_Color': _0x3a9f31[_0xe35b55(0x541)]
            }, _0x206e0c = {
                's_Cull': _0x3a9f31['RENDER_STATE_CULL'],
                's_Blend': _0x3a9f31[_0xe35b55(0xc87)],
                's_BlendSrc': _0x3a9f31['RENDER_STATE_BLEND_SRC'],
                's_BlendDst': _0x3a9f31[_0xe35b55(0x537)],
                's_DepthTest': _0x3a9f31[_0xe35b55(0x53e)],
                's_DepthWrite': _0x3a9f31['RENDER_STATE_DEPTH_WRITE']
            }, _0x173ca6 = _0x3a9f31['add'](_0xe35b55(0xfca)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f['addShaderPass']('#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0auniform\x20mat4\x20u_MvpMatrix;\x0d\x0auniform\x20vec4\x20u_Color;\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20a_Position;\x0d\x0a\x09v_Color=a_Color*u_Color;\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}', _0xe35b55(0xfcb), _0x206e0c), _0x56d3f8 = {
                'a_Position': _0x73b54a['MESH_POSITION0'],
                'a_Color': _0x73b54a['MESH_COLOR0'],
                'a_Texcoord0': _0x73b54a[_0xe35b55(0x616)],
                'a_BoneWeights': _0x73b54a['MESH_BLENDWEIGHT0'],
                'a_BoneIndices': _0x73b54a[_0xe35b55(0x617)],
                'a_WorldMat': _0x73b54a['MESH_WORLDMATRIX_ROW0'],
                'a_SimpleTextureParams': _0x73b54a[_0xe35b55(0x619)]
            }, _0x35ae73 = {
                'u_Bones': _0x3a9f31[_0xe35b55(0x540)],
                'u_AlbedoTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_AlbedoColor': _0x3a9f31[_0xe35b55(0x541)],
                'u_TilingOffset': _0x3a9f31[_0xe35b55(0x541)],
                'u_AlphaTestValue': _0x3a9f31[_0xe35b55(0x541)],
                'u_MvpMatrix': _0x3a9f31['PERIOD_SPRITE'],
                'u_ViewProjection': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_SimpleAnimatorTexture': _0x3a9f31[_0xe35b55(0x542)],
                'u_SimpleAnimatorParams': _0x3a9f31[_0xe35b55(0x542)],
                'u_SimpleAnimatorTextureSize': _0x3a9f31[_0xe35b55(0x542)],
                'u_FogStart': _0x3a9f31[_0xe35b55(0x543)],
                'u_FogRange': _0x3a9f31[_0xe35b55(0x543)],
                'u_FogColor': _0x3a9f31[_0xe35b55(0x543)]
            }, _0x206e0c = {
                's_Cull': _0x3a9f31[_0xe35b55(0x536)],
                's_Blend': _0x3a9f31['RENDER_STATE_BLEND'],
                's_BlendSrc': _0x3a9f31[_0xe35b55(0x7f1)],
                's_BlendDst': _0x3a9f31['RENDER_STATE_BLEND_DST'],
                's_DepthTest': _0x3a9f31[_0xe35b55(0x53e)],
                's_DepthWrite': _0x3a9f31['RENDER_STATE_DEPTH_WRITE']
            }, _0x173ca6 = _0x3a9f31['add'](_0xe35b55(0xcb9), null, null, !0x0), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfcc), '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_AlbedoTexture;\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_AlbedoColor;\x0d\x0a\x0d\x0a#ifdef\x20ALPHATEST\x0d\x0a\x09uniform\x20float\x20u_AlphaTestValue;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20color\x20=\x20\x20u_AlbedoColor;\x0d\x0a\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09color\x20*=\x20texture2D(u_AlbedoTexture,\x20v_Texcoord0);\x0d\x0a\x09#endif\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09color\x20*=\x20v_Color;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20ALPHATEST\x0d\x0a\x09\x09if(color.a\x20<\x20u_AlphaTestValue)\x0d\x0a\x09\x09\x09discard;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact\x20=\x20clamp((1.0\x20/\x20gl_FragCoord.w\x20-\x20u_FogStart)\x20/\x20u_FogRange,\x200.0,\x201.0);\x0d\x0a\x09\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20vec3(0.0),\x20lerpFact);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20u_FogColor,\x20lerpFact);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0a', _0x206e0c), _0x56d3f8 = {
                'a_Position': _0x73b54a[_0xe35b55(0x615)],
                'a_Texcoord0': _0x73b54a['MESH_TEXTURECOORDINATE0'],
                'a_BoneWeights': _0x73b54a[_0xe35b55(0x611)],
                'a_BoneIndices': _0x73b54a[_0xe35b55(0x617)],
                'a_WorldMat': _0x73b54a['MESH_WORLDMATRIX_ROW0'],
                'a_SimpleTextureParams': _0x73b54a[_0xe35b55(0x619)]
            }, _0x35ae73 = {
                'u_Bones': _0x3a9f31[_0xe35b55(0x540)],
                'u_AlbedoTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_AlbedoColor': _0x3a9f31[_0xe35b55(0x541)],
                'u_TilingOffset': _0x3a9f31[_0xe35b55(0x541)],
                'u_AlphaTestValue': _0x3a9f31[_0xe35b55(0x541)],
                'u_ViewProjection': _0x3a9f31['PERIOD_CAMERA'],
                'u_MvpMatrix': _0x3a9f31['PERIOD_SPRITE'],
                'u_SimpleAnimatorTexture': _0x3a9f31[_0xe35b55(0x542)],
                'u_SimpleAnimatorParams': _0x3a9f31[_0xe35b55(0x542)],
                'u_SimpleAnimatorTextureSize': _0x3a9f31['PERIOD_SPRITE'],
                'u_FogStart': _0x3a9f31['PERIOD_SCENE'],
                'u_FogRange': _0x3a9f31[_0xe35b55(0x543)],
                'u_FogColor': _0x3a9f31['PERIOD_SCENE']
            }, _0x206e0c = {
                's_Cull': _0x3a9f31[_0xe35b55(0x536)],
                's_Blend': _0x3a9f31[_0xe35b55(0xc87)],
                's_BlendSrc': _0x3a9f31[_0xe35b55(0x7f1)],
                's_BlendDst': _0x3a9f31[_0xe35b55(0x537)],
                's_DepthTest': _0x3a9f31[_0xe35b55(0x53e)],
                's_DepthWrite': _0x3a9f31[_0xe35b55(0x53f)]
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0x725), null, null, !0x0), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfcd), _0xe35b55(0xfce), _0x206e0c), _0x56d3f8 = {
                'a_CornerTextureCoordinate': _0x3c247f[_0xe35b55(0xdf5)],
                'a_MeshPosition': _0x3c247f[_0xe35b55(0xdf6)],
                'a_MeshColor': _0x3c247f[_0xe35b55(0xdf7)],
                'a_MeshTextureCoordinate': _0x3c247f['PARTICLE_TEXTURECOORDINATE0'],
                'a_ShapePositionStartLifeTime': _0x3c247f[_0xe35b55(0xe12)],
                'a_DirectionTime': _0x3c247f[_0xe35b55(0xdf9)],
                'a_StartColor': _0x3c247f['PARTICLE_STARTCOLOR0'],
                'a_EndColor': _0x3c247f[_0xe35b55(0xfcf)],
                'a_StartSize': _0x3c247f['PARTICLE_STARTSIZE'],
                'a_StartRotation0': _0x3c247f[_0xe35b55(0xdfb)],
                'a_StartSpeed': _0x3c247f[_0xe35b55(0xe08)],
                'a_Random0': _0x3c247f[_0xe35b55(0xe09)],
                'a_Random1': _0x3c247f[_0xe35b55(0xdfc)],
                'a_SimulationWorldPostion': _0x3c247f[_0xe35b55(0xdfd)],
                'a_SimulationWorldRotation': _0x3c247f[_0xe35b55(0xdfe)]
            }, _0x35ae73 = {
                'u_Tintcolor': _0x3a9f31[_0xe35b55(0x541)],
                'u_TilingOffset': _0x3a9f31[_0xe35b55(0x541)],
                'u_texture': _0x3a9f31[_0xe35b55(0x541)],
                'u_WorldPosition': _0x3a9f31[_0xe35b55(0x542)],
                'u_WorldRotation': _0x3a9f31[_0xe35b55(0x542)],
                'u_PositionScale': _0x3a9f31[_0xe35b55(0x542)],
                'u_SizeScale': _0x3a9f31[_0xe35b55(0x542)],
                'u_ScalingMode': _0x3a9f31['PERIOD_SPRITE'],
                'u_Gravity': _0x3a9f31[_0xe35b55(0x542)],
                'u_ThreeDStartRotation': _0x3a9f31['PERIOD_SPRITE'],
                'u_StretchedBillboardLengthScale': _0x3a9f31['PERIOD_SPRITE'],
                'u_StretchedBillboardSpeedScale': _0x3a9f31[_0xe35b55(0x542)],
                'u_SimulationSpace': _0x3a9f31['PERIOD_SPRITE'],
                'u_CurrentTime': _0x3a9f31[_0xe35b55(0x542)],
                'u_ColorOverLifeGradientAlphas': _0x3a9f31[_0xe35b55(0x542)],
                'u_ColorOverLifeGradientColors': _0x3a9f31[_0xe35b55(0x542)],
                'u_MaxColorOverLifeGradientAlphas': _0x3a9f31[_0xe35b55(0x542)],
                'u_MaxColorOverLifeGradientColors': _0x3a9f31['PERIOD_SPRITE'],
                'u_VOLVelocityConst': _0x3a9f31[_0xe35b55(0x542)],
                'u_VOLVelocityGradientX': _0x3a9f31[_0xe35b55(0x542)],
                'u_VOLVelocityGradientY': _0x3a9f31[_0xe35b55(0x542)],
                'u_VOLVelocityGradientZ': _0x3a9f31['PERIOD_SPRITE'],
                'u_VOLVelocityConstMax': _0x3a9f31['PERIOD_SPRITE'],
                'u_VOLVelocityGradientMaxX': _0x3a9f31[_0xe35b55(0x542)],
                'u_VOLVelocityGradientMaxY': _0x3a9f31[_0xe35b55(0x542)],
                'u_VOLVelocityGradientMaxZ': _0x3a9f31[_0xe35b55(0x542)],
                'u_VOLSpaceType': _0x3a9f31['PERIOD_SPRITE'],
                'u_SOLSizeGradient': _0x3a9f31['PERIOD_SPRITE'],
                'u_SOLSizeGradientX': _0x3a9f31[_0xe35b55(0x542)],
                'u_SOLSizeGradientY': _0x3a9f31[_0xe35b55(0x542)],
                'u_SOLSizeGradientZ': _0x3a9f31[_0xe35b55(0x542)],
                'u_SOLSizeGradientMax': _0x3a9f31['PERIOD_SPRITE'],
                'u_SOLSizeGradientMaxX': _0x3a9f31[_0xe35b55(0x542)],
                'u_SOLSizeGradientMaxY': _0x3a9f31[_0xe35b55(0x542)],
                'u_SOLSizeGradientMaxZ': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityConst': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityConstSeprarate': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradient': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientX': _0x3a9f31['PERIOD_SPRITE'],
                'u_ROLAngularVelocityGradientY': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientZ': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityConstMax': _0x3a9f31['PERIOD_SPRITE'],
                'u_ROLAngularVelocityConstMaxSeprarate': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientMax': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientMaxX': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientMaxY': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientMaxZ': _0x3a9f31[_0xe35b55(0x542)],
                'u_ROLAngularVelocityGradientMaxW': _0x3a9f31[_0xe35b55(0x542)],
                'u_TSACycles': _0x3a9f31[_0xe35b55(0x542)],
                'u_TSASubUVLength': _0x3a9f31['PERIOD_SPRITE'],
                'u_TSAGradientUVs': _0x3a9f31[_0xe35b55(0x542)],
                'u_TSAMaxGradientUVs': _0x3a9f31[_0xe35b55(0x542)],
                'u_CameraPos': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_CameraDirection': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_CameraUp': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_View': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_Projection': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_FogStart': _0x3a9f31[_0xe35b55(0x543)],
                'u_FogRange': _0x3a9f31[_0xe35b55(0x543)],
                'u_FogColor': _0x3a9f31['PERIOD_SCENE']
            }, _0x206e0c = {
                's_Cull': _0x3a9f31[_0xe35b55(0x536)],
                's_Blend': _0x3a9f31['RENDER_STATE_BLEND'],
                's_BlendSrc': _0x3a9f31[_0xe35b55(0x7f1)],
                's_BlendDst': _0x3a9f31[_0xe35b55(0x537)],
                's_DepthTest': _0x3a9f31['RENDER_STATE_DEPTH_TEST'],
                's_DepthWrite': _0x3a9f31['RENDER_STATE_DEPTH_WRITE']
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0xdc4)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6['addSubShader'](_0x4ea38f), _0x4ea38f['addShaderPass']('//\x20#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0a//修改这里剔除没有用到的光照函数，增加粒子的编译速度\x0d\x0avec2\x20TransformUV(vec2\x20texcoord,vec4\x20tilingOffset)\x20{\x0d\x0a\x09vec2\x20transTexcoord=vec2(texcoord.x,texcoord.y-1.0)*tilingOffset.xy+vec2(tilingOffset.z,-tilingOffset.w);\x0d\x0a\x09transTexcoord.y+=1.0;\x0d\x0a\x09return\x20transTexcoord;\x0d\x0a}\x0d\x0a\x0d\x0avec4\x20remapGLPositionZ(vec4\x20position)\x20{\x0d\x0a\x09position.z=position.z\x20*\x202.0\x20-\x20position.w;\x0d\x0a\x09return\x20position;\x0d\x0a}\x0d\x0a\x0d\x0a#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)\x0d\x0a\x20\x20precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x20\x20precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\x0d\x0a\x09attribute\x20vec4\x20a_CornerTextureCoordinate;\x0d\x0a#endif\x0d\x0a#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09attribute\x20vec3\x20a_MeshPosition;\x0d\x0a\x09attribute\x20vec4\x20a_MeshColor;\x0d\x0a\x09attribute\x20vec2\x20a_MeshTextureCoordinate;\x0d\x0a\x09varying\x20vec4\x20v_MeshColor;\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_ShapePositionStartLifeTime;\x0d\x0aattribute\x20vec4\x20a_DirectionTime;\x0d\x0aattribute\x20vec4\x20a_StartColor;\x0d\x0aattribute\x20vec3\x20a_StartSize;\x0d\x0aattribute\x20vec3\x20a_StartRotation0;\x0d\x0aattribute\x20float\x20a_StartSpeed;\x0d\x0a#if\x20defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20attribute\x20vec4\x20a_Random0;\x0d\x0a#endif\x0d\x0a#if\x20defined(TEXTURESHEETANIMATIONRANDOMCURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x20\x20attribute\x20vec4\x20a_Random1;\x0d\x0a#endif\x0d\x0aattribute\x20vec3\x20a_SimulationWorldPostion;\x0d\x0aattribute\x20vec4\x20a_SimulationWorldRotation;\x0d\x0a\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a#ifdef\x20DIFFUSEMAP\x0d\x0a\x09varying\x20vec2\x20v_TextureCoordinate;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20float\x20u_CurrentTime;\x0d\x0auniform\x20vec3\x20u_Gravity;\x0d\x0a\x0d\x0auniform\x20vec3\x20u_WorldPosition;\x0d\x0auniform\x20vec4\x20u_WorldRotation;\x0d\x0auniform\x20bool\x20u_ThreeDStartRotation;\x0d\x0auniform\x20int\x20u_ScalingMode;\x0d\x0auniform\x20vec3\x20u_PositionScale;\x0d\x0auniform\x20vec3\x20u_SizeScale;\x0d\x0auniform\x20mat4\x20u_View;\x0d\x0auniform\x20mat4\x20u_Projection;\x0d\x0a\x0d\x0a#ifdef\x20STRETCHEDBILLBOARD\x0d\x0a\x09uniform\x20vec3\x20u_CameraPos;\x0d\x0a#endif\x0d\x0auniform\x20vec3\x20u_CameraDirection;//TODO:只有几种广告牌模式需要用\x0d\x0auniform\x20vec3\x20u_CameraUp;\x0d\x0a\x0d\x0auniform\x20\x20float\x20u_StretchedBillboardLengthScale;\x0d\x0auniform\x20\x20float\x20u_StretchedBillboardSpeedScale;\x0d\x0auniform\x20int\x20u_SimulationSpace;\x0d\x0a\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x20\x20uniform\x20\x20int\x20\x20u_VOLSpaceType;\x0d\x0a#endif\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\x0d\x0a\x20\x20uniform\x20\x20vec3\x20u_VOLVelocityConst;\x0d\x0a#endif\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientX[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientY[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientZ[4];//x为key,y为速度\x0d\x0a#endif\x0d\x0a#ifdef\x20VELOCITYOVERLIFETIMERANDOMCONSTANT\x0d\x0a\x20\x20uniform\x20\x20vec3\x20u_VOLVelocityConstMax;\x0d\x0a#endif\x0d\x0a#ifdef\x20VELOCITYOVERLIFETIMERANDOMCURVE\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientMaxX[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientMaxY[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientMaxZ[4];//x为key,y为速度\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOROVERLIFETIME\x0d\x0a\x20\x20uniform\x20\x20vec4\x20u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\x0d\x0a#endif\x0d\x0a#ifdef\x20RANDOMCOLOROVERLIFETIME\x0d\x0a\x20\x20uniform\x20\x20vec4\x20u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\x0d\x0a\x20\x20uniform\x20\x20vec4\x20u_MaxColorOverLifeGradientColors[4];//x为key,yzw为Color\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_MaxColorOverLifeGradientAlphas[4];//x为key,y为Alpha\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradient[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a#ifdef\x20SIZEOVERLIFETIMERANDOMCURVES\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMax[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a#if\x20defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientX[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientY[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientZ[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a#ifdef\x20SIZEOVERLIFETIMERANDOMCURVESSEPERATE\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMaxX[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMaxY[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMaxZ[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20float\x20u_ROLAngularVelocityConst;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x20\x20\x20\x20uniform\x20\x20float\x20u_ROLAngularVelocityConstMax;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradient[4];//x为key,y为旋转\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMax[4];//x为key,y为旋转\x0d\x0a\x20\x20#endif\x0d\x0a#endif\x0d\x0a#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec3\x20u_ROLAngularVelocityConstSeprarate;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec3\x20u_ROLAngularVelocityConstMaxSeprarate;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientX[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientY[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientZ[4];\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxX[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxY[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxZ[4];\x0d\x0a\x09uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxW[4];\x0d\x0a\x20\x20#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\x0d\x0a\x20\x20uniform\x20\x20float\x20u_TSACycles;\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_TSASubUVLength;\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_TSAGradientUVs[4];//x为key,y为frame\x0d\x0a#endif\x0d\x0a#ifdef\x20TEXTURESHEETANIMATIONRANDOMCURVE\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_TSAMaxGradientUVs[4];//x为key,y为frame\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0avec3\x20rotationByEuler(in\x20vec3\x20vector,in\x20vec3\x20rot)\x0d\x0a{\x0d\x0a\x09float\x20halfRoll\x20=\x20rot.z\x20*\x200.5;\x0d\x0a\x20\x20\x20\x20float\x20halfPitch\x20=\x20rot.x\x20*\x200.5;\x0d\x0a\x09float\x20halfYaw\x20=\x20rot.y\x20*\x200.5;\x0d\x0a\x0d\x0a\x09float\x20sinRoll\x20=\x20sin(halfRoll);\x0d\x0a\x09float\x20cosRoll\x20=\x20cos(halfRoll);\x0d\x0a\x09float\x20sinPitch\x20=\x20sin(halfPitch);\x0d\x0a\x09float\x20cosPitch\x20=\x20cos(halfPitch);\x0d\x0a\x09float\x20sinYaw\x20=\x20sin(halfYaw);\x0d\x0a\x09float\x20cosYaw\x20=\x20cos(halfYaw);\x0d\x0a\x0d\x0a\x09float\x20quaX\x20=\x20(cosYaw\x20*\x20sinPitch\x20*\x20cosRoll)\x20+\x20(sinYaw\x20*\x20cosPitch\x20*\x20sinRoll);\x0d\x0a\x09float\x20quaY\x20=\x20(sinYaw\x20*\x20cosPitch\x20*\x20cosRoll)\x20-\x20(cosYaw\x20*\x20sinPitch\x20*\x20sinRoll);\x0d\x0a\x09float\x20quaZ\x20=\x20(cosYaw\x20*\x20cosPitch\x20*\x20sinRoll)\x20-\x20(sinYaw\x20*\x20sinPitch\x20*\x20cosRoll);\x0d\x0a\x09float\x20quaW\x20=\x20(cosYaw\x20*\x20cosPitch\x20*\x20cosRoll)\x20+\x20(sinYaw\x20*\x20sinPitch\x20*\x20sinRoll);\x0d\x0a\x09\x0d\x0a\x09//vec4\x20q=vec4(quaX,quaY,quaZ,quaW);\x0d\x0a\x09//vec3\x20temp\x20=\x20cross(q.xyz,\x20vector)\x20+\x20q.w\x20*\x20vector;\x0d\x0a\x09//return\x20(cross(temp,\x20-q.xyz)\x20+\x20dot(q.xyz,vector)\x20*\x20q.xyz\x20+\x20q.w\x20*\x20temp);\x0d\x0a\x09\x0d\x0a\x09float\x20x\x20=\x20quaX\x20+\x20quaX;\x0d\x0a\x20\x20\x20\x20float\x20y\x20=\x20quaY\x20+\x20quaY;\x0d\x0a\x20\x20\x20\x20float\x20z\x20=\x20quaZ\x20+\x20quaZ;\x0d\x0a\x20\x20\x20\x20float\x20wx\x20=\x20quaW\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20wy\x20=\x20quaW\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20wz\x20=\x20quaW\x20*\x20z;\x0d\x0a\x09float\x20xx\x20=\x20quaX\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20xy\x20=\x20quaX\x20*\x20y;\x0d\x0a\x09float\x20xz\x20=\x20quaX\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20yy\x20=\x20quaY\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20yz\x20=\x20quaY\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20zz\x20=\x20quaZ\x20*\x20z;\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20vec3(((vector.x\x20*\x20((1.0\x20-\x20yy)\x20-\x20zz))\x20+\x20(vector.y\x20*\x20(xy\x20-\x20wz)))\x20+\x20(vector.z\x20*\x20(xz\x20+\x20wy)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xy\x20+\x20wz))\x20+\x20(vector.y\x20*\x20((1.0\x20-\x20xx)\x20-\x20zz)))\x20+\x20(vector.z\x20*\x20(yz\x20-\x20wx)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xz\x20-\x20wy))\x20+\x20(vector.y\x20*\x20(yz\x20+\x20wx)))\x20+\x20(vector.z\x20*\x20((1.0\x20-\x20xx)\x20-\x20yy)));\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0a//假定axis已经归一化\x0d\x0avec3\x20rotationByAxis(in\x20vec3\x20vector,in\x20vec3\x20axis,\x20in\x20float\x20angle)\x0d\x0a{\x0d\x0a\x09float\x20halfAngle\x20=\x20angle\x20*\x200.5;\x0d\x0a\x09float\x20sin\x20=\x20sin(halfAngle);\x0d\x0a\x09\x0d\x0a\x09float\x20quaX\x20=\x20axis.x\x20*\x20sin;\x0d\x0a\x09float\x20quaY\x20=\x20axis.y\x20*\x20sin;\x0d\x0a\x09float\x20quaZ\x20=\x20axis.z\x20*\x20sin;\x0d\x0a\x09float\x20quaW\x20=\x20cos(halfAngle);\x0d\x0a\x09\x0d\x0a\x09//vec4\x20q=vec4(quaX,quaY,quaZ,quaW);\x0d\x0a\x09//vec3\x20temp\x20=\x20cross(q.xyz,\x20vector)\x20+\x20q.w\x20*\x20vector;\x0d\x0a\x09//return\x20(cross(temp,\x20-q.xyz)\x20+\x20dot(q.xyz,vector)\x20*\x20q.xyz\x20+\x20q.w\x20*\x20temp);\x0d\x0a\x09\x0d\x0a\x09float\x20x\x20=\x20quaX\x20+\x20quaX;\x0d\x0a\x20\x20\x20\x20float\x20y\x20=\x20quaY\x20+\x20quaY;\x0d\x0a\x20\x20\x20\x20float\x20z\x20=\x20quaZ\x20+\x20quaZ;\x0d\x0a\x20\x20\x20\x20float\x20wx\x20=\x20quaW\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20wy\x20=\x20quaW\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20wz\x20=\x20quaW\x20*\x20z;\x0d\x0a\x09float\x20xx\x20=\x20quaX\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20xy\x20=\x20quaX\x20*\x20y;\x0d\x0a\x09float\x20xz\x20=\x20quaX\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20yy\x20=\x20quaY\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20yz\x20=\x20quaY\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20zz\x20=\x20quaZ\x20*\x20z;\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20vec3(((vector.x\x20*\x20((1.0\x20-\x20yy)\x20-\x20zz))\x20+\x20(vector.y\x20*\x20(xy\x20-\x20wz)))\x20+\x20(vector.z\x20*\x20(xz\x20+\x20wy)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xy\x20+\x20wz))\x20+\x20(vector.y\x20*\x20((1.0\x20-\x20xx)\x20-\x20zz)))\x20+\x20(vector.z\x20*\x20(yz\x20-\x20wx)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xz\x20-\x20wy))\x20+\x20(vector.y\x20*\x20(yz\x20+\x20wx)))\x20+\x20(vector.z\x20*\x20((1.0\x20-\x20xx)\x20-\x20yy)));\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20rotationByQuaternions(in\x20vec3\x20v,in\x20vec4\x20q)\x20\x0d\x0a{\x0d\x0a\x09return\x20v\x20+\x202.0\x20*\x20cross(q.xyz,\x20cross(q.xyz,\x20v)\x20+\x20q.w\x20*\x20v);\x0d\x0a}\x0d\x0a\x0d\x0a\x20\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\x0d\x0afloat\x20getCurValueFromGradientFloat(in\x20vec2\x20gradientNumbers[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09float\x20curValue;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientNumber=gradientNumbers[i];\x0d\x0a\x09\x09float\x20key=gradientNumber.x;\x0d\x0a\x09\x09if(key>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec2\x20lastGradientNumber=gradientNumbers[i-1];\x0d\x0a\x09\x09\x09float\x20lastKey=lastGradientNumber.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastKey)/(key-lastKey);\x0d\x0a\x09\x09\x09curValue=mix(lastGradientNumber.y,gradientNumber.y,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20curValue;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0afloat\x20getTotalValueFromGradientFloat(in\x20vec2\x20gradientNumbers[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09float\x20totalValue=0.0;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientNumber=gradientNumbers[i];\x0d\x0a\x09\x09float\x20key=gradientNumber.x;\x0d\x0a\x09\x09vec2\x20lastGradientNumber=gradientNumbers[i-1];\x0d\x0a\x09\x09float\x20lastValue=lastGradientNumber.y;\x0d\x0a\x09\x09\x0d\x0a\x09\x09if(key>=normalizedAge){\x0d\x0a\x09\x09\x09float\x20lastKey=lastGradientNumber.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastKey)/(key-lastKey);\x0d\x0a\x09\x09\x09totalValue+=(lastValue+mix(lastValue,gradientNumber.y,age))/2.0*a_ShapePositionStartLifeTime.w*(normalizedAge-lastKey);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09\x09else{\x0d\x0a\x09\x09\x09totalValue+=(lastValue+gradientNumber.y)/2.0*a_ShapePositionStartLifeTime.w*(key-lastGradientNumber.x);\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20totalValue;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)\x0d\x0avec4\x20getColorFromGradient(in\x20vec2\x20gradientAlphas[4],in\x20vec4\x20gradientColors[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09vec4\x20overTimeColor;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientAlpha=gradientAlphas[i];\x0d\x0a\x09\x09float\x20alphaKey=gradientAlpha.x;\x0d\x0a\x09\x09if(alphaKey>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec2\x20lastGradientAlpha=gradientAlphas[i-1];\x0d\x0a\x09\x09\x09float\x20lastAlphaKey=lastGradientAlpha.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastAlphaKey)/(alphaKey-lastAlphaKey);\x0d\x0a\x09\x09\x09overTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec4\x20gradientColor=gradientColors[i];\x0d\x0a\x09\x09float\x20colorKey=gradientColor.x;\x0d\x0a\x09\x09if(colorKey>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec4\x20lastGradientColor=gradientColors[i-1];\x0d\x0a\x09\x09\x09float\x20lastColorKey=lastGradientColor.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastColorKey)/(colorKey-lastColorKey);\x0d\x0a\x09\x09\x09overTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20overTimeColor;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\x0d\x0afloat\x20getFrameFromGradient(in\x20vec2\x20gradientFrames[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09float\x20overTimeFrame;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientFrame=gradientFrames[i];\x0d\x0a\x09\x09float\x20key=gradientFrame.x;\x0d\x0a\x09\x09if(key>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec2\x20lastGradientFrame=gradientFrames[i-1];\x0d\x0a\x09\x09\x09float\x20lastKey=lastGradientFrame.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastKey)/(key-lastKey);\x0d\x0a\x09\x09\x09overTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20floor(overTimeFrame);\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0avec3\x20computeParticleLifeVelocity(in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x20\x20vec3\x20outLifeVelocity;\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMECONSTANT\x0d\x0a\x09\x20outLifeVelocity=u_VOLVelocityConst;\x20\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMECURVE\x0d\x0a\x20\x20\x20\x20\x20outLifeVelocity=\x20vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMERANDOMCONSTANT\x0d\x0a\x09\x20outLifeVelocity=mix(u_VOLVelocityConst,u_VOLVelocityConstMax,vec3(a_Random1.y,a_Random1.z,a_Random1.w));\x20\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMERANDOMCURVE\x0d\x0a\x20\x20\x20\x20\x20outLifeVelocity=vec3(mix(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y),\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z),\x0d\x0a\x09\x09\x09\x09\x09\x20mix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\x0d\x0a\x20\x20#endif\x0d\x0a\x09\x09\x09\x09\x09\x0d\x0a\x20\x20return\x20outLifeVelocity;\x0d\x0a}\x20\x0d\x0a#endif\x0d\x0a\x0d\x0avec3\x20computeParticlePosition(in\x20vec3\x20startVelocity,\x20in\x20vec3\x20lifeVelocity,in\x20float\x20age,in\x20float\x20normalizedAge,vec3\x20gravityVelocity,vec4\x20worldRotation)\x0d\x0a{\x0d\x0a\x20\x20\x20vec3\x20startPosition;\x0d\x0a\x20\x20\x20vec3\x20lifePosition;\x0d\x0a\x20\x20\x20#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=lifeVelocity*age;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMECURVE\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMERANDOMCONSTANT\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=lifeVelocity*age;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMERANDOMCURVE\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=vec3(mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09vec3\x20finalPosition;\x0d\x0a\x09if(u_VOLSpaceType==0){\x0d\x0a\x09\x20\x20if(u_ScalingMode!=2)\x0d\x0a\x09\x20\x20\x20finalPosition\x20=rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition),worldRotation);\x0d\x0a\x09\x20\x20else\x0d\x0a\x09\x20\x20\x20finalPosition\x20=rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition,worldRotation);\x0d\x0a\x09}\x0d\x0a\x09else{\x0d\x0a\x09\x20\x20if(u_ScalingMode!=2)\x0d\x0a\x09\x20\x20\x20\x20finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation)+lifePosition;\x0d\x0a\x09\x20\x20else\x0d\x0a\x09\x20\x20\x20\x20finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation)+lifePosition;\x0d\x0a\x09}\x0d\x0a\x20\x20#else\x0d\x0a\x09\x20startPosition=startVelocity*age;\x0d\x0a\x09\x20vec3\x20finalPosition;\x0d\x0a\x09\x20if(u_ScalingMode!=2)\x0d\x0a\x09\x09\x09finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation);\x0d\x0a\x09\x20else\x0d\x0a\x09\x20\x20\x20\x09finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation);\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20\x0d\x0a\x20\x20if(u_SimulationSpace==0)\x0d\x0a\x20\x20\x20\x20finalPosition=finalPosition+a_SimulationWorldPostion;\x0d\x0a\x20\x20else\x20if(u_SimulationSpace==1)\x20\x0d\x0a\x20\x20\x20\x20finalPosition=finalPosition+u_WorldPosition;\x0d\x0a\x20\x20\x0d\x0a\x20\x20finalPosition+=0.5*gravityVelocity*age;\x0d\x0a\x20\x0d\x0a\x20\x20return\x20\x20finalPosition;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avec4\x20computeParticleColor(in\x20vec4\x20color,in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09#ifdef\x20COLOROVERLIFETIME\x0d\x0a\x09\x20\x20color*=getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge);\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20RANDOMCOLOROVERLIFETIME\x0d\x0a\x09\x20\x20color*=mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge),getColorFromGradient(u_MaxColorOverLifeGradientAlphas,u_MaxColorOverLifeGradientColors,normalizedAge),a_Random0.y);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avec2\x20computeParticleSizeBillbard(in\x20vec2\x20size,in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVE\x0d\x0a\x09\x09size*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x20\x20\x20\x20size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z);\x20\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVESEPERATE\x0d\x0a\x09\x09size*=vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge));\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVESSEPERATE\x0d\x0a\x09\x20\x20\x20\x20size*=vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\x0d\x0a\x09\x20\x20\x20\x20,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z));\x0d\x0a\x09#endif\x0d\x0a\x09return\x20size;\x0d\x0a}\x0d\x0a\x0d\x0a#ifdef\x20RENDERMODE_MESH\x0d\x0avec3\x20computeParticleSizeMesh(in\x20vec3\x20size,in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVE\x0d\x0a\x09\x09size*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x20\x20\x20\x20size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z);\x20\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVESEPERATE\x0d\x0a\x09\x09size*=vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge));\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVESSEPERATE\x0d\x0a\x09\x20\x20\x20\x20size*=vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\x0d\x0a\x09\x20\x20\x20\x20,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z)\x0d\x0a\x09\x09,mix(getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ,normalizedAge),a_Random0.z));\x0d\x0a\x09#endif\x0d\x0a\x09return\x20size;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0afloat\x20computeParticleRotationFloat(in\x20float\x20rotation,in\x20float\x20age,in\x20float\x20normalizedAge)\x0d\x0a{\x20\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09float\x20ageRot=u_ROLAngularVelocityConst*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09float\x20ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09float\x20ageRot=u_ROLAngularVelocityConstSeprarate.z*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09float\x20ageRot=mix(u_ROLAngularVelocityConstSeprarate.z,u_ROLAngularVelocityConstMaxSeprarate.z,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09return\x20rotation;\x0d\x0a}\x0d\x0a\x0d\x0a#if\x20defined(RENDERMODE_MESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE))\x0d\x0avec3\x20computeParticleRotationVec3(in\x20vec3\x20rotation,in\x20float\x20age,in\x20float\x20normalizedAge)\x0d\x0a{\x20\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09float\x20ageRot=u_ROLAngularVelocityConst*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09float\x20ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09vec3\x20ageRot=u_ROLAngularVelocityConstSeprarate*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge));\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09vec3\x20ageRot=mix(u_ROLAngularVelocityConstSeprarate,u_ROLAngularVelocityConstMaxSeprarate,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,normalizedAge),a_Random0.w)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,normalizedAge),a_Random0.w)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09return\x20rotation;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0avec2\x20computeParticleUV(in\x20vec2\x20uv,in\x20float\x20normalizedAge)\x0d\x0a{\x20\x0d\x0a\x09#ifdef\x20TEXTURESHEETANIMATIONCURVE\x0d\x0a\x09\x09float\x20cycleNormalizedAge=normalizedAge*u_TSACycles;\x0d\x0a\x09\x09float\x20frame=getFrameFromGradient(u_TSAGradientUVs,cycleNormalizedAge-floor(cycleNormalizedAge));\x0d\x0a\x09\x09float\x20totalULength=frame*u_TSASubUVLength.x;\x0d\x0a\x09\x09float\x20floorTotalULength=floor(totalULength);\x0d\x0a\x09\x20\x20\x20\x20uv.x+=totalULength-floorTotalULength;\x0d\x0a\x09\x09uv.y+=floorTotalULength*u_TSASubUVLength.y;\x0d\x0a\x20\x20\x20\x20#endif\x0d\x0a\x09#ifdef\x20TEXTURESHEETANIMATIONRANDOMCURVE\x0d\x0a\x09\x09float\x20cycleNormalizedAge=normalizedAge*u_TSACycles;\x0d\x0a\x09\x09float\x20uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\x0d\x0a\x09\x20\x20\x20\x20float\x20frame=floor(mix(getFrameFromGradient(u_TSAGradientUVs,uvNormalizedAge),getFrameFromGradient(u_TSAMaxGradientUVs,uvNormalizedAge),a_Random1.x));\x0d\x0a\x09\x09float\x20totalULength=frame*u_TSASubUVLength.x;\x0d\x0a\x09\x09float\x20floorTotalULength=floor(totalULength);\x0d\x0a\x09\x20\x20\x20\x20uv.x+=totalULength-floorTotalULength;\x0d\x0a\x09\x09uv.y+=floorTotalULength*u_TSASubUVLength.y;\x0d\x0a\x20\x20\x20\x20#endif\x0d\x0a\x09return\x20uv;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09float\x20age\x20=\x20u_CurrentTime\x20-\x20a_DirectionTime.w;\x0d\x0a\x09float\x20normalizedAge\x20=\x20age/a_ShapePositionStartLifeTime.w;\x0d\x0a\x09vec3\x20lifeVelocity;\x0d\x0a\x09if(normalizedAge<1.0)\x0d\x0a\x09{\x20\x0d\x0a\x09\x09vec3\x20startVelocity=a_DirectionTime.xyz*a_StartSpeed;\x0d\x0a\x09\x09#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x09\x09\x09lifeVelocity=\x20computeParticleLifeVelocity(normalizedAge);//计算粒子生命周期速度\x0d\x0a\x09\x09#endif\x20\x0d\x0a\x09\x09vec3\x20gravityVelocity=u_Gravity*age;\x0d\x0a\x09\x09\x0d\x0a\x09\x09vec4\x20worldRotation;\x0d\x0a\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09worldRotation=a_SimulationWorldRotation;\x0d\x0a\x09\x09else\x0d\x0a\x09\x09\x09worldRotation=u_WorldRotation;\x0d\x0a\x09\x09\x0d\x0a\x09\x09vec3\x20center=computeParticlePosition(startVelocity,\x20lifeVelocity,\x20age,\x20normalizedAge,gravityVelocity,worldRotation);//计算粒子位置\x0d\x0a\x09\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20SPHERHBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09vec3\x20cameraUpVector\x20=normalize(u_CameraUp);//TODO:是否外面归一化\x0d\x0a\x09\x09\x09vec3\x20sideVector\x20=\x20normalize(cross(u_CameraDirection,cameraUpVector));\x0d\x0a\x09\x09\x09vec3\x20upVector\x20=\x20normalize(cross(sideVector,u_CameraDirection));\x0d\x0a\x09\x09\x09corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09#if\x20defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09vec3\x20rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,age,normalizedAge));\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,rotation);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09float\x20rot\x20=\x20computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09\x09\x09float\x20c\x20=\x20cos(rot);\x0d\x0a\x09\x09\x09\x09\x09float\x20s\x20=\x20sin(rot);\x0d\x0a\x09\x09\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09\x09\x09corner=rotation*corner;\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,a_StartRotation0);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09float\x20c\x20=\x20cos(a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09float\x20s\x20=\x20sin(a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09\x09\x09corner=rotation*corner;\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20STRETCHEDBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09vec3\x20velocity;\x0d\x0a\x09\x09\x09#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x09\x09\x09\x09if(u_VOLSpaceType==0)\x0d\x0a\x09\x09\x09\x09velocity=rotationByQuaternions(u_SizeScale*(startVelocity+lifeVelocity),worldRotation)+gravityVelocity;\x0d\x0a\x09\x09\x09\x09else\x0d\x0a\x09\x09\x09\x09velocity=rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+lifeVelocity+gravityVelocity;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09velocity=\x20rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+gravityVelocity;\x0d\x0a\x09\x09\x09#endif\x09\x0d\x0a\x09\x09\x09vec3\x20cameraUpVector\x20=\x20normalize(velocity);\x0d\x0a\x09\x09\x09vec3\x20direction\x20=\x20normalize(center-u_CameraPos);\x0d\x0a\x09\x09\x09vec3\x20sideVector\x20=\x20normalize(cross(direction,normalize(velocity)));\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09sideVector=u_SizeScale.xzy*sideVector;\x0d\x0a\x09\x09\x09cameraUpVector=length(vec3(u_SizeScale.x,0.0,0.0))*cameraUpVector;\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09vec2\x20size=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09const\x20mat2\x20rotaionZHalfPI=mat2(0.0,\x20-1.0,\x201.0,\x200.0);\x0d\x0a\x09\x09\x09corner=rotaionZHalfPI*corner;\x0d\x0a\x09\x09\x09corner.y=corner.y-abs(corner.y);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09float\x20speed=length(velocity);//TODO:\x0d\x0a\x09\x09\x09center\x20+=sign(u_SizeScale.x)*(sign(u_StretchedBillboardLengthScale)*size.x*corner.x*sideVector+(speed*u_StretchedBillboardSpeedScale+size.y*u_StretchedBillboardLengthScale)*corner.y*cameraUpVector);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20HORIZONTALBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09const\x20vec3\x20cameraUpVector=vec3(0.0,0.0,1.0);\x0d\x0a\x09\x09\x09const\x20vec3\x20sideVector\x20=\x20vec3(-1.0,0.0,0.0);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09float\x20rot\x20=\x20computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09float\x20c\x20=\x20cos(rot);\x0d\x0a\x09\x09\x09float\x20s\x20=\x20sin(rot);\x0d\x0a\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\x0d\x0a\x09\x09\x09corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09center\x20+=u_SizeScale.xzy*(corner.x*sideVector+\x20corner.y*cameraUpVector);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20VERTICALBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09const\x20vec3\x20cameraUpVector\x20=vec3(0.0,1.0,0.0);\x0d\x0a\x09\x09\x09vec3\x20sideVector\x20=\x20normalize(cross(u_CameraDirection,cameraUpVector));\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09float\x20rot\x20=\x20computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09float\x20c\x20=\x20cos(rot);\x0d\x0a\x09\x09\x09float\x20s\x20=\x20sin(rot);\x0d\x0a\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\x0d\x0a\x09\x09\x09corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09center\x20+=u_SizeScale.xzy*(corner.x*sideVector+\x20corner.y*cameraUpVector);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09\x09\x09vec3\x20size=computeParticleSizeMesh(a_StartSize,normalizedAge);\x0d\x0a\x09\x09\x09#if\x20defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09vec3\x20rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,\x20age,normalizedAge));\x0d\x0a\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,rotation),worldRotation);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x09\x09\x09\x09\x09\x09float\x20angle=computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09\x09\x09\x09if(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\x0d\x0a\x09\x09\x09\x09\x09\x09\x09center+=\x20(rotationByQuaternions(rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),angle),worldRotation));//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#ifdef\x20SHAPE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20u_SizeScale.xzy*(rotationByQuaternions(rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09center+=rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle);//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09center+=rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle),worldRotation);//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x09\x09\x09\x09\x09\x09//TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\x0d\x0a\x09\x09\x09\x09\x09\x09vec3\x20angle=computeParticleRotationVec3(vec3(0.0,0.0,-a_StartRotation0.x),\x20age,normalizedAge);\x0d\x0a\x09\x09\x09\x09\x09\x09center+=\x20(rotationByQuaternions(rotationByEuler(u_SizeScale*a_MeshPosition*size,vec3(angle.x,angle.y,angle.z)),worldRotation));//已验证\x0d\x0a\x09\x09\x09\x09\x09#endif\x09\x09\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,a_StartRotation0),worldRotation);//已验证\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09if(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\x0d\x0a\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09center+=\x20(rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x),worldRotation));//已验证\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09\x09#ifdef\x20SHAPE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x),worldRotation);\x09\x0d\x0a\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x),worldRotation);//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09v_MeshColor=a_MeshColor;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09gl_Position=u_Projection*u_View*vec4(center,1.0);\x0d\x0a\x09\x09v_Color\x20=\x20computeParticleColor(a_StartColor,\x20normalizedAge);\x0d\x0a\x09\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09\x09#if\x20defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\x0d\x0a\x09\x09\x09\x09v_TextureCoordinate\x20=computeParticleUV(a_CornerTextureCoordinate.zw,\x20normalizedAge);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09\x09\x09\x09v_TextureCoordinate\x20=computeParticleUV(a_MeshTextureCoordinate,\x20normalizedAge);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09v_TextureCoordinate=TransformUV(v_TextureCoordinate,u_TilingOffset);\x0d\x0a\x09\x09#endif\x0d\x0a\x20\x20\x20\x09}\x0d\x0a\x20\x20\x20\x09else\x0d\x0a\x09{\x0d\x0a\x09\x09gl_Position=vec4(2.0,2.0,2.0,1.0);//Discard\x20use\x20out\x20of\x20X(-1,1),Y(-1,1),Z(0,1)\x0d\x0a\x09}\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a\x0d\x0a', _0xe35b55(0xfd0), _0x206e0c), _0x56d3f8 = { 'a_Position': _0x73b54a[_0xe35b55(0x615)] }, _0x35ae73 = {
                'u_TintColor': _0x3a9f31['PERIOD_MATERIAL'],
                'u_Exposure': _0x3a9f31['PERIOD_MATERIAL'],
                'u_Rotation': _0x3a9f31[_0xe35b55(0x541)],
                'u_CubeTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_ViewProjection': _0x3a9f31[_0xe35b55(0x7a6)]
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0xc17)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)]('#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0auniform\x20float\x20u_Rotation;\x0d\x0avarying\x20vec3\x20v_Texcoord;\x0d\x0a\x0d\x0a\x0d\x0avec4\x20rotateAroundYInDegrees\x20(vec4\x20vertex,\x20float\x20degrees)\x0d\x0a{\x0d\x0a\x09float\x20angle\x20=\x20degrees\x20*\x203.141593\x20/\x20180.0;\x0d\x0a\x09float\x20sina=sin(angle);\x0d\x0a\x09float\x20cosa=cos(angle);\x0d\x0a\x09mat2\x20m\x20=\x20mat2(cosa,\x20-sina,\x20sina,\x20cosa);\x0d\x0a\x09return\x20vec4(m*vertex.xz,\x20vertex.yw).xzyw;\x0d\x0a}\x0d\x0a\x09\x09\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20position=rotateAroundYInDegrees(a_Position,u_Rotation);\x0d\x0a\x09gl_Position\x20=\x20u_ViewProjection*position;\x0d\x0a\x09v_Texcoord=vec3(-a_Position.x,a_Position.yz);//转换坐标系\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a', _0xe35b55(0xfd1)), _0x56d3f8 = { 'a_Position': _0x73b54a['MESH_POSITION0'] }, _0x35ae73 = {
                'u_SunSize': _0x3a9f31['PERIOD_MATERIAL'],
                'u_SunSizeConvergence': _0x3a9f31[_0xe35b55(0x541)],
                'u_AtmosphereThickness': _0x3a9f31['PERIOD_MATERIAL'],
                'u_SkyTint': _0x3a9f31['PERIOD_MATERIAL'],
                'u_GroundTint': _0x3a9f31[_0xe35b55(0x541)],
                'u_Exposure': _0x3a9f31[_0xe35b55(0x541)],
                'u_ViewProjection': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_SunLight.direction': _0x3a9f31[_0xe35b55(0x543)],
                'u_SunLight.color': _0x3a9f31['PERIOD_SCENE']
            }, _0x173ca6 = _0x3a9f31['add']('SkyBoxProcedural'), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f['addShaderPass'](_0xe35b55(0xfd2), _0xe35b55(0xfd3)), _0x56d3f8 = {
                'a_Position': _0x73b54a[_0xe35b55(0x615)],
                'a_Normal': _0x73b54a[_0xe35b55(0x60c)],
                'a_Texcoord0': _0x73b54a['MESH_TEXTURECOORDINATE0']
            }, _0x35ae73 = {
                'u_MvpMatrix': _0x3a9f31['PERIOD_SPRITE'],
                'u_WorldMat': _0x3a9f31['PERIOD_SPRITE'],
                'u_CameraPos': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_Viewport': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_ProjectionParams': _0x3a9f31['PERIOD_CAMERA'],
                'u_View': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_LightmapScaleOffset': _0x3a9f31['PERIOD_SPRITE'],
                'u_LightMap': _0x3a9f31[_0xe35b55(0x542)],
                'u_SplatAlphaTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_DiffuseTexture1': _0x3a9f31['PERIOD_MATERIAL'],
                'u_DiffuseTexture2': _0x3a9f31['PERIOD_MATERIAL'],
                'u_DiffuseTexture3': _0x3a9f31['PERIOD_MATERIAL'],
                'u_DiffuseTexture4': _0x3a9f31[_0xe35b55(0x541)],
                'u_DiffuseTexture5': _0x3a9f31['PERIOD_MATERIAL'],
                'u_DiffuseScaleOffset1': _0x3a9f31['PERIOD_MATERIAL'],
                'u_DiffuseScaleOffset2': _0x3a9f31[_0xe35b55(0x541)],
                'u_DiffuseScaleOffset3': _0x3a9f31[_0xe35b55(0x541)],
                'u_DiffuseScaleOffset4': _0x3a9f31[_0xe35b55(0x541)],
                'u_DiffuseScaleOffset5': _0x3a9f31[_0xe35b55(0x541)],
                'u_FogStart': _0x3a9f31[_0xe35b55(0x543)],
                'u_FogRange': _0x3a9f31['PERIOD_SCENE'],
                'u_FogColor': _0x3a9f31[_0xe35b55(0x543)],
                'u_DirationLightCount': _0x3a9f31['PERIOD_SCENE'],
                'u_LightBuffer': _0x3a9f31[_0xe35b55(0x543)],
                'u_LightClusterBuffer': _0x3a9f31[_0xe35b55(0x543)],
                'u_AmbientColor': _0x3a9f31[_0xe35b55(0x543)],
                'u_ShadowMap': _0x3a9f31['PERIOD_SCENE'],
                'u_shadowMap2': _0x3a9f31['PERIOD_SCENE'],
                'u_shadowMap3': _0x3a9f31[_0xe35b55(0x543)],
                'u_ShadowSplitSpheres': _0x3a9f31[_0xe35b55(0x543)],
                'u_ShadowMatrices': _0x3a9f31[_0xe35b55(0x543)],
                'u_ShadowMapSize': _0x3a9f31[_0xe35b55(0x543)],
                'u_DirectionLight.color': _0x3a9f31['PERIOD_SCENE'],
                'u_DirectionLight.direction': _0x3a9f31[_0xe35b55(0x543)],
                'u_PointLight.position': _0x3a9f31[_0xe35b55(0x543)],
                'u_PointLight.range': _0x3a9f31['PERIOD_SCENE'],
                'u_PointLight.color': _0x3a9f31[_0xe35b55(0x543)],
                'u_SpotLight.position': _0x3a9f31['PERIOD_SCENE'],
                'u_SpotLight.direction': _0x3a9f31[_0xe35b55(0x543)],
                'u_SpotLight.range': _0x3a9f31[_0xe35b55(0x543)],
                'u_SpotLight.spot': _0x3a9f31[_0xe35b55(0x543)],
                'u_SpotLight.color': _0x3a9f31[_0xe35b55(0x543)]
            }, _0x206e0c = {
                's_Cull': _0x3a9f31[_0xe35b55(0x536)],
                's_Blend': _0x3a9f31['RENDER_STATE_BLEND'],
                's_BlendSrc': _0x3a9f31[_0xe35b55(0x7f1)],
                's_BlendDst': _0x3a9f31[_0xe35b55(0x537)],
                's_DepthTest': _0x3a9f31['RENDER_STATE_DEPTH_TEST'],
                's_DepthWrite': _0x3a9f31['RENDER_STATE_DEPTH_WRITE']
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0x73c)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfd4), _0xe35b55(0xfd5), _0x206e0c), _0x56d3f8 = {
                'a_Position': _0x2113d8[_0xe35b55(0xf1f)],
                'a_OffsetVector': _0x2113d8[_0xe35b55(0xf20)],
                'a_Texcoord0X': _0x2113d8[_0xe35b55(0xf23)],
                'a_Texcoord0Y': _0x2113d8[_0xe35b55(0xf22)],
                'a_BirthTime': _0x2113d8['TRAIL_TIME0'],
                'a_Color': _0x2113d8[_0xe35b55(0xf24)]
            }, _0x35ae73 = {
                'u_MvpMatrix': _0x3a9f31[_0xe35b55(0x542)],
                'u_View': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_Projection': _0x3a9f31[_0xe35b55(0x7a6)],
                'u_TilingOffset': _0x3a9f31[_0xe35b55(0x541)],
                'u_MainTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_MainColor': _0x3a9f31[_0xe35b55(0x541)],
                'u_CurTime': _0x3a9f31[_0xe35b55(0x542)],
                'u_LifeTime': _0x3a9f31['PERIOD_SPRITE'],
                'u_WidthCurve': _0x3a9f31[_0xe35b55(0x542)],
                'u_WidthCurveKeyLength': _0x3a9f31['PERIOD_SPRITE'],
                'u_GradientColorkey': _0x3a9f31['PERIOD_SPRITE'],
                'u_GradientAlphakey': _0x3a9f31[_0xe35b55(0x542)]
            }, _0x206e0c = {
                's_Cull': _0x3a9f31[_0xe35b55(0x536)],
                's_Blend': _0x3a9f31['RENDER_STATE_BLEND'],
                's_BlendSrc': _0x3a9f31['RENDER_STATE_BLEND_SRC'],
                's_BlendDst': _0x3a9f31[_0xe35b55(0x537)],
                's_DepthTest': _0x3a9f31['RENDER_STATE_DEPTH_TEST'],
                's_DepthWrite': _0x3a9f31[_0xe35b55(0x53f)]
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0xf15)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfd6), _0xe35b55(0xfd7), _0x206e0c), _0x56d3f8 = {
                'a_Position': _0x73b54a[_0xe35b55(0x615)],
                'a_Normal': _0x73b54a[_0xe35b55(0x60c)],
                'a_Tangent0': _0x73b54a[_0xe35b55(0x614)]
            }, _0x35ae73 = {
                'u_MvpMatrix': _0x3a9f31[_0xe35b55(0x542)],
                'u_WorldMat': _0x3a9f31[_0xe35b55(0x542)],
                'u_CameraPos': _0x3a9f31['PERIOD_CAMERA'],
                'u_Time': _0x3a9f31[_0xe35b55(0x543)],
                'u_MainTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_NormalTexture': _0x3a9f31[_0xe35b55(0x541)],
                'u_HorizonColor': _0x3a9f31[_0xe35b55(0x541)],
                'u_WaveScale': _0x3a9f31['PERIOD_MATERIAL'],
                'u_WaveSpeed': _0x3a9f31[_0xe35b55(0x541)]
            }, _0x173ca6 = _0x3a9f31['add'](_0xe35b55(0xfd8)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfd9), _0xe35b55(0xfda)), _0x56d3f8 = { 'a_PositionTexcoord': _0x73b54a[_0xe35b55(0x615)] }, _0x35ae73 = {
                'u_MainTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_OffsetScale': _0x3a9f31['PERIOD_MATERIAL']
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0x549)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f));
            var _0x51c13a = _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfdb), _0xe35b55(0xfdc))[_0xe35b55(0x7ed)];
            _0x51c13a[_0xe35b55(0x698)] = _0x47a097[_0xe35b55(0xfdd)], _0x51c13a[_0xe35b55(0x699)] = !0x1, _0x51c13a[_0xe35b55(0x697)] = _0x47a097[_0xe35b55(0x6c6)], _0x51c13a['blend'] = _0x47a097[_0xe35b55(0x6b8)], _0x56d3f8 = { 'a_PositionTexcoord': _0x73b54a[_0xe35b55(0x615)] }, _0x35ae73 = {
                'u_MainTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_BloomTex': _0x3a9f31['PERIOD_MATERIAL'],
                'u_AutoExposureTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_MainTex_TexelSize': _0x3a9f31[_0xe35b55(0x541)],
                'u_SampleScale': _0x3a9f31[_0xe35b55(0x541)],
                'u_Threshold': _0x3a9f31[_0xe35b55(0x541)],
                'u_Params': _0x3a9f31[_0xe35b55(0x541)]
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0xfde)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f[_0xe35b55(0xc7d)](_0x2f122d, _0xe35b55(0xfdf))[_0xe35b55(0x7ed)])[_0xe35b55(0x698)] = _0x47a097[_0xe35b55(0xfdd)], _0x51c13a['depthWrite'] = !0x1, _0x51c13a[_0xe35b55(0x697)] = _0x47a097['CULL_NONE'], _0x51c13a[_0xe35b55(0x696)] = _0x47a097[_0xe35b55(0x6b8)], _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f[_0xe35b55(0xc7d)](_0x2f122d, _0xe35b55(0xfe0))[_0xe35b55(0x7ed)])[_0xe35b55(0x698)] = _0x47a097[_0xe35b55(0xfdd)], _0x51c13a[_0xe35b55(0x699)] = !0x1, _0x51c13a[_0xe35b55(0x697)] = _0x47a097['CULL_NONE'], _0x51c13a['blend'] = _0x47a097[_0xe35b55(0x6b8)], _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f[_0xe35b55(0xc7d)](_0x2f122d, _0xe35b55(0xfe1))['renderState'])['depthTest'] = _0x47a097['DEPTHTEST_ALWAYS'], _0x51c13a['depthWrite'] = !0x1, _0x51c13a['cull'] = _0x47a097[_0xe35b55(0x6c6)], _0x51c13a[_0xe35b55(0x696)] = _0x47a097[_0xe35b55(0x6b8)], _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f['addShaderPass'](_0x2f122d, _0xe35b55(0xfe2))[_0xe35b55(0x7ed)])['depthTest'] = _0x47a097['DEPTHTEST_ALWAYS'], _0x51c13a[_0xe35b55(0x699)] = !0x1, _0x51c13a['cull'] = _0x47a097['CULL_NONE'], _0x51c13a['blend'] = _0x47a097['BLEND_DISABLE'], _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f['addShaderPass'](_0x2f122d, _0xe35b55(0xfe3))[_0xe35b55(0x7ed)])[_0xe35b55(0x698)] = _0x47a097[_0xe35b55(0xfdd)], _0x51c13a[_0xe35b55(0x699)] = !0x1, _0x51c13a[_0xe35b55(0x697)] = _0x47a097['CULL_NONE'], _0x51c13a[_0xe35b55(0x696)] = _0x47a097['BLEND_DISABLE'], _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f[_0xe35b55(0xc7d)](_0x2f122d, '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_BloomTex;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20float\x20u_SampleScale;\x0d\x0a\x0d\x0amediump\x20vec4\x20combine(mediump\x20vec4\x20bloom,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20texture2D(u_BloomTex,\x20uv);\x0d\x0a\x09return\x20bloom\x20+\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragUpsampleBox()\x20{\x0d\x0a\x09mediump\x20vec4\x20bloom\x20=\x20upsampleBox(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy,\x20vec4(u_SampleScale));\x0d\x0a\x09gl_FragColor\x20=\x20combine(bloom,\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragUpsampleBox();\x0d\x0a}')[_0xe35b55(0x7ed)])[_0xe35b55(0x698)] = _0x47a097['DEPTHTEST_ALWAYS'], _0x51c13a['depthWrite'] = !0x1, _0x51c13a[_0xe35b55(0x697)] = _0x47a097['CULL_NONE'], _0x51c13a[_0xe35b55(0x696)] = _0x47a097['BLEND_DISABLE'], _0x56d3f8 = { 'a_PositionTexcoord': _0x73b54a[_0xe35b55(0x615)] }, _0x35ae73 = {
                'u_MainTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_BloomTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_AutoExposureTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_Bloom_DirtTileOffset': _0x3a9f31[_0xe35b55(0x541)],
                'u_Bloom_DirtTex': _0x3a9f31[_0xe35b55(0x541)],
                'u_BloomTex_TexelSize': _0x3a9f31[_0xe35b55(0x541)],
                'u_Bloom_Settings': _0x3a9f31[_0xe35b55(0x541)],
                'u_Bloom_Color': _0x3a9f31[_0xe35b55(0x541)]
            }, _0x173ca6 = _0x3a9f31[_0xe35b55(0x207)](_0xe35b55(0x651)), _0x4ea38f = new _0x8750c3(_0x56d3f8, _0x35ae73), _0x173ca6[_0xe35b55(0x534)](_0x4ea38f), (_0x51c13a = _0x4ea38f[_0xe35b55(0xc7d)](_0xe35b55(0xfe4), _0xe35b55(0xfe5))[_0xe35b55(0x7ed)])['depthTest'] = _0x47a097[_0xe35b55(0xfdd)], _0x51c13a[_0xe35b55(0x699)] = !0x1, _0x51c13a[_0xe35b55(0x697)] = _0x47a097[_0xe35b55(0x6c6)], _0x51c13a['blend'] = _0x47a097[_0xe35b55(0x6b8)];
        }
    }
    class _0xf16363 extends _0x413cad {
        constructor() {
            var _0x19a72b = _0x6027f5;
            super(), this[_0x19a72b(0xc00)] = new _0x3697cd(), this['_shadowCascadesMode'] = _0x18be32[_0x19a72b(0x93e)]['NoCascades'], this[_0x19a72b(0xb81)] = 0x1 / 0x3, this[_0x19a72b(0xb82)] = new _0x3697cd(0x1 / 0xf, 0.2, 0x7 / 0xf), this['_lightType'] = _0x18be32[_0x19a72b(0x91a)][_0x19a72b(0x91b)];
        }
        get [_0x6027f5(0xfe6)]() {
            return this['_shadowCascadesMode'];
        }
        set [_0x6027f5(0xfe6)](_0x106e2f) {
            var _0x42d131 = _0x6027f5;
            this[_0x42d131(0xb7e)] = _0x106e2f;
        }
        get [_0x6027f5(0xfe7)]() {
            var _0x58663b = _0x6027f5;
            return this[_0x58663b(0xb81)];
        }
        set ['shadowTwoCascadeSplits'](_0x1a2d5b) {
            this['_shadowTwoCascadeSplits'] = _0x1a2d5b;
        }
        get ['shadowFourCascadeSplits']() {
            var _0x3847e3 = _0x6027f5;
            return this[_0x3847e3(0xb82)];
        }
        set [_0x6027f5(0xfe8)](_0x109236) {
            var _0xf151d7 = _0x6027f5;
            if (_0x109236['x'] > _0x109236['y'] || _0x109236['y'] > _0x109236['z'] || _0x109236['z'] > 0x1)
                throw _0xf151d7(0xfe9);
            _0x109236['cloneTo'](this[_0xf151d7(0xb82)]);
        }
        [_0x6027f5(0x934)]() {
            this['_scene']['_directionLights']['add'](this);
        }
        [_0x6027f5(0x938)]() {
            var _0x5b7ad1 = _0x6027f5;
            this[_0x5b7ad1(0x3b0)][_0x5b7ad1(0x863)]['remove'](this);
        }
        ['_create']() {
            return new _0xf16363();
        }
    }
    class _0xcfaab4 extends _0x413cad {
        constructor() {
            var _0x5055a8 = _0x6027f5;
            super(), this[_0x5055a8(0xfea)] = 0x6, this['_lightType'] = _0x18be32['LightType']['Point'];
        }
        get [_0x6027f5(0x858)]() {
            var _0x4c9dbe = _0x6027f5;
            return this[_0x4c9dbe(0xfea)];
        }
        set [_0x6027f5(0x858)](_0x3654a9) {
            var _0x1ccf8b = _0x6027f5;
            this[_0x1ccf8b(0xfea)] = _0x3654a9;
        }
        ['_addToLightQueue']() {
            var _0x295eae = _0x6027f5;
            this[_0x295eae(0x3b0)][_0x295eae(0xb9e)][_0x295eae(0x207)](this);
        }
        ['_removeFromLightQueue']() {
            var _0x211816 = _0x6027f5;
            this[_0x211816(0x3b0)][_0x211816(0xb9e)][_0x211816(0x3b4)](this);
        }
        [_0x6027f5(0x67c)](_0x1914ea, _0x55cb02) {
            var _0x12c8ed = _0x6027f5;
            super[_0x12c8ed(0x67c)](_0x1914ea, _0x55cb02), this[_0x12c8ed(0x858)] = _0x1914ea[_0x12c8ed(0x858)];
        }
        [_0x6027f5(0x345)](_0x325aa5, _0x57e816, _0x1e8a47) {
            var _0x1b6fcd = _0x6027f5;
            super['_cloneTo'](_0x325aa5, _0x57e816, _0x1e8a47);
            var _0x58fc71 = _0x325aa5;
            _0x58fc71['range'] = this[_0x1b6fcd(0x858)], _0x58fc71[_0x1b6fcd(0x94f)] = _0x18be32[_0x1b6fcd(0x91a)]['Point'];
        }
        ['_create']() {
            return new _0xcfaab4();
        }
    }
    class _0x21b275 extends _0x413cad {
        constructor() {
            var _0x3054bd = _0x6027f5;
            super(), this[_0x3054bd(0xfeb)] = 0x1e, this[_0x3054bd(0xfea)] = 0xa, this['_direction'] = new _0x3697cd(), this[_0x3054bd(0x94f)] = _0x18be32['LightType'][_0x3054bd(0x91c)];
        }
        get [_0x6027f5(0x85c)]() {
            var _0x3a1020 = _0x6027f5;
            return this[_0x3a1020(0xfeb)];
        }
        set [_0x6027f5(0x85c)](_0x5d1254) {
            var _0x1f06a5 = _0x6027f5;
            this['_spotAngle'] = Math['max'](Math[_0x1f06a5(0x212)](_0x5d1254, 0xb3), 0x0);
        }
        get [_0x6027f5(0x858)]() {
            var _0x18a906 = _0x6027f5;
            return this[_0x18a906(0xfea)];
        }
        set [_0x6027f5(0x858)](_0x4f7f1b) {
            var _0x407c13 = _0x6027f5;
            this[_0x407c13(0xfea)] = _0x4f7f1b;
        }
        [_0x6027f5(0x934)]() {
            var _0x45a884 = _0x6027f5;
            this[_0x45a884(0x3b0)]['_spotLights'][_0x45a884(0x207)](this);
        }
        [_0x6027f5(0x938)]() {
            var _0x274686 = _0x6027f5;
            this[_0x274686(0x3b0)][_0x274686(0x865)][_0x274686(0x3b4)](this);
        }
        [_0x6027f5(0x67c)](_0x2563fc, _0x53cc80) {
            var _0x55bce6 = _0x6027f5;
            super[_0x55bce6(0x67c)](_0x2563fc, _0x53cc80), this['range'] = _0x2563fc[_0x55bce6(0x858)], this[_0x55bce6(0x85c)] = _0x2563fc['spotAngle'];
        }
        ['_cloneTo'](_0x501527, _0x18bb4d, _0x4f6f5d) {
            var _0x1662ee = _0x6027f5;
            super['_cloneTo'](_0x501527, _0x18bb4d, _0x4f6f5d);
            var _0x14c697 = _0x501527;
            _0x14c697[_0x1662ee(0x858)] = this['range'], _0x14c697[_0x1662ee(0x85c)] = this['spotAngle'];
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x21b275();
        }
    }
    class _0x5adade extends _0x357af4 {
        constructor(_0x14d281) {
            var _0x50259a = _0x6027f5;
            super(_0x14d281), this[_0x50259a(0xfec)] = new _0x5b8e4e(), this[_0x50259a(0xfed)] = new _0x30a72c(), this['_shaderValues'][_0x50259a(0x49a)](_0x4cc24a[_0x50259a(0xfee)]), this[_0x50259a(0x4e2)][_0x50259a(0x49a)](_0x4cc24a[_0x50259a(0xf05)]);
        }
        get [_0x6027f5(0xfef)]() {
            var _0x53428c = _0x6027f5;
            return this[_0x53428c(0xff0)];
        }
        set ['simpleAnimatorTexture'](_0x43f8dc) {
            var _0x35c7c6 = _0x6027f5;
            this[_0x35c7c6(0xff0)] = _0x43f8dc, this[_0x35c7c6(0xff1)] = _0x43f8dc[_0x35c7c6(0x313)], this[_0x35c7c6(0x4e2)][_0x35c7c6(0x4ac)](_0x5adade[_0x35c7c6(0xff2)], _0x43f8dc), _0x43f8dc[_0x35c7c6(0x35f)](), this[_0x35c7c6(0x4e2)][_0x35c7c6(0x4a3)](_0x5adade[_0x35c7c6(0xf13)], this[_0x35c7c6(0xff1)]);
        }
        get [_0x6027f5(0xff3)]() {
            var _0x3a5338 = _0x6027f5;
            return this[_0x3a5338(0xfed)];
        }
        set [_0x6027f5(0xff3)](_0x451fd8) {
            var _0x34fea3 = _0x6027f5;
            _0x451fd8[_0x34fea3(0x1fc)](this[_0x34fea3(0xfed)]);
        }
        [_0x6027f5(0xff4)]() {
            var _0x403bf3 = _0x6027f5;
            this[_0x403bf3(0xef9)] && (this[_0x403bf3(0xfec)]['x'] = this['_simpleAnimatorOffset']['x'], this['_simpleAnimatorParams']['y'] = Math[_0x403bf3(0xff5)](this[_0x403bf3(0xfed)]['y']) * this[_0x403bf3(0xff6)] * 0x4);
        }
        ['_createRenderElement']() {
            return new _0x2057f1();
        }
        [_0x6027f5(0xf03)](_0xf5cd5f) {
            var _0x354e88 = _0x6027f5;
            this['_cacheAnimator'] = _0xf5cd5f, this[_0x354e88(0x4e2)][_0x354e88(0x49a)](_0x4cc24a['SHADERDEFINE_SIMPLEBONE']);
        }
        [_0x6027f5(0xcd3)](_0xc71670) {
            var _0x438b39 = _0x6027f5;
            super[_0x438b39(0xcd3)](_0xc71670), this[_0x438b39(0xef9)] = _0xc71670;
        }
        ['_renderUpdate'](_0x5344b2, _0xe4d45) {
            var _0x3d2c5a = _0x6027f5, _0x3a629f = _0x5344b2['renderElement'];
            switch (_0x3a629f[_0x3d2c5a(0x5f4)]) {
            case _0x50feff['RENDERTYPE_NORMAL']:
                if (this[_0x3d2c5a(0xf04)]) {
                    var _0x2a1d52 = this['_cacheAnimator'][_0x3d2c5a(0x38b)][_0x3d2c5a(0x3d6)][_0x3d2c5a(0x3d8)];
                    this[_0x3d2c5a(0x4e2)][_0x3d2c5a(0x4aa)](_0x44a154[_0x3d2c5a(0x5d4)], _0x2a1d52);
                } else
                    this['_shaderValues']['setMatrix4x4'](_0x44a154[_0x3d2c5a(0x5d4)], _0xe4d45['worldMatrix']);
                this['_computeAnimatorParamsData'](), this['_shaderValues']['setVector'](_0x5adade[_0x3d2c5a(0xf12)], this[_0x3d2c5a(0xfec)]);
                break;
            case _0x50feff[_0x3d2c5a(0xa93)]:
                var _0x3fb478 = _0x4da149['instance'][_0x3d2c5a(0xa84)], _0x2d0efb = _0x3a629f[_0x3d2c5a(0xa8a)], _0x102565 = _0x2d0efb[_0x3d2c5a(0x1fe)], _0x245443 = _0x2d0efb['length'];
                if (this[_0x3d2c5a(0xf04)])
                    for (var _0x16ff26 = 0x0; _0x16ff26 < _0x245443; _0x16ff26++) {
                        var _0x91aeba = _0x102565[_0x16ff26][_0x3d2c5a(0x4ff)][_0x3d2c5a(0xf04)][_0x3d2c5a(0x38b)][_0x3d2c5a(0x3d5)][_0x3d2c5a(0x3d8)];
                        _0x3fb478['set'](_0x91aeba[_0x3d2c5a(0x1fe)], 0x10 * _0x16ff26);
                    }
                else {
                    for (_0x16ff26 = 0x0; _0x16ff26 < _0x245443; _0x16ff26++)
                        _0x3fb478[_0x3d2c5a(0x31f)](_0x102565[_0x16ff26][_0x3d2c5a(0x3d5)][_0x3d2c5a(0x3d8)]['elements'], 0x10 * _0x16ff26);
                }
                var _0x16ce4c = _0x4da149['instance']['instanceWorldMatrixBuffer'];
                _0x16ce4c[_0x3d2c5a(0x62a)](), _0x16ce4c[_0x3d2c5a(0x45d)](_0x3fb478[_0x3d2c5a(0x454)], 0x0, 0x0, 0x10 * _0x245443 * 0x4), this[_0x3d2c5a(0x4e2)]['addDefine'](_0x2553d1[_0x3d2c5a(0xccf)]);
                var _0x5131a6 = _0x4da149[_0x3d2c5a(0x304)][_0x3d2c5a(0xa87)];
                if (this[_0x3d2c5a(0xf04)])
                    for (_0x16ff26 = 0x0; _0x16ff26 < _0x245443; _0x16ff26++) {
                        var _0x3ba146 = _0x102565[_0x16ff26]['render'];
                        _0x3ba146['_computeAnimatorParamsData']();
                        var _0x15d86d = _0x3ba146[_0x3d2c5a(0xfec)], _0x196f0b = 0x4 * _0x16ff26;
                        _0x5131a6[_0x196f0b] = _0x15d86d['x'], _0x5131a6[_0x196f0b + 0x1] = _0x15d86d['y'];
                    }
                else {
                    for (_0x16ff26 = 0x0; _0x16ff26 < _0x245443; _0x16ff26++)
                        _0x5131a6[_0x196f0b] = 0x0, _0x5131a6[_0x196f0b + 0x1] = 0x0;
                }
                var _0x5c69ce = _0x4da149[_0x3d2c5a(0x304)][_0x3d2c5a(0xa86)];
                _0x5c69ce[_0x3d2c5a(0x62a)](), _0x5c69ce[_0x3d2c5a(0x45d)](_0x5131a6[_0x3d2c5a(0x454)], 0x0, 0x0, 0x4 * _0x245443 * 0x4);
            }
        }
        [_0x6027f5(0x5f7)](_0x3f1bf1, _0x436b7) {
            var _0x3bd184 = _0x6027f5, _0x1af44b = _0x3f1bf1[_0x3bd184(0x5dd)];
            if (_0x1af44b)
                switch (_0x3f1bf1[_0x3bd184(0x5f3)][_0x3bd184(0x5f4)]) {
                case _0x50feff[_0x3bd184(0x5fe)]:
                    if (this['_cacheAnimator']) {
                        var _0x411394 = this['_cacheAnimator'][_0x3bd184(0x38b)][_0x3bd184(0x3d5)][_0x3bd184(0x3d8)];
                        _0x6b4d98[_0x3bd184(0x27b)](_0x1af44b, _0x411394, this[_0x3bd184(0x5d7)]), this[_0x3bd184(0x4e2)]['setMatrix4x4'](_0x44a154[_0x3bd184(0x5df)], this[_0x3bd184(0x5d7)]);
                    } else
                        _0x6b4d98['multiply'](_0x1af44b, _0x436b7['worldMatrix'], this[_0x3bd184(0x5d7)]), this[_0x3bd184(0x4e2)][_0x3bd184(0x4aa)](_0x44a154['MVPMATRIX'], this['_projectionViewWorldMatrix']);
                }
        }
        ['_destroy']() {
            var _0x33937f = _0x6027f5;
            this[_0x33937f(0xef6)] && !this['_cacheRootBone'][_0x33937f(0x5cf)] && this['_cacheRootBone']['transform'][_0x33937f(0x8fb)](_0x387b86[_0x33937f(0x5b1)][_0x33937f(0x5ae)], this, this[_0x33937f(0xafd)]), this[_0x33937f(0xff0)] && this['_simpleAnimatorTexture'][_0x33937f(0x35c)](), this['_simpleAnimatorTexture'] = null;
        }
    }
    class _0x1a32b6 extends _0x221092 {
        constructor(_0x44519f = null, _0x44f635 = null) {
            var _0xc4895f = _0x6027f5;
            super(_0x44f635), this[_0xc4895f(0xce7)] = new _0x1f703e(this), this[_0xc4895f(0x5e8)] = new _0x5adade(this), _0x44519f && (this[_0xc4895f(0xce7)][_0xc4895f(0xad0)] = _0x44519f);
        }
        static [_0x6027f5(0x230)]() {
            var _0x4a3a11 = _0x6027f5;
            _0x5adade[_0x4a3a11(0xf12)] = _0x1a32b6['SIMPLE_SIMPLEANIMATORPARAMS'], _0x5adade[_0x4a3a11(0xff2)] = _0x1a32b6[_0x4a3a11(0xff2)], _0x5adade[_0x4a3a11(0xf13)] = _0x1a32b6[_0x4a3a11(0xf13)];
        }
        get [_0x6027f5(0xacf)]() {
            return this['_meshFilter'];
        }
        get [_0x6027f5(0xff7)]() {
            var _0x599806 = _0x6027f5;
            return this[_0x599806(0x5e8)];
        }
        [_0x6027f5(0x67c)](_0x44523b, _0x515134) {
            var _0x1ad0ef = _0x6027f5;
            super['_parse'](_0x44523b, _0x515134);
            var _0x752025 = this[_0x1ad0ef(0xff7)], _0x5f2c9e = _0x44523b['lightmapIndex'];
            null != _0x5f2c9e && (_0x752025[_0x1ad0ef(0xaa8)] = _0x5f2c9e);
            var _0x1e1392, _0x2e174b = _0x44523b[_0x1ad0ef(0xacd)];
            if (_0x2e174b && (_0x752025[_0x1ad0ef(0xacd)] = new _0x5b8e4e(_0x2e174b[0x0], _0x2e174b[0x1], _0x2e174b[0x2], _0x2e174b[0x3])), null != _0x44523b[_0x1ad0ef(0x991)] && (_0x752025[_0x1ad0ef(0x659)] = _0x44523b['enableRender']), null != _0x44523b[_0x1ad0ef(0xced)] && (_0x752025['receiveShadow'] = _0x44523b[_0x1ad0ef(0xced)]), null != _0x44523b[_0x1ad0ef(0xb09)] && (_0x752025[_0x1ad0ef(0xb09)] = _0x44523b[_0x1ad0ef(0xb09)]), _0x1e1392 = _0x44523b[_0x1ad0ef(0xcec)]) {
                var _0x596ee8 = _0x387b86[_0x1ad0ef(0x3bd)][_0x1ad0ef(0x3b7)](_0x1e1392);
                _0x596ee8 && (this[_0x1ad0ef(0xacf)][_0x1ad0ef(0xad0)] = _0x596ee8);
            }
            var _0x322a5c = _0x44523b['materials'];
            if (_0x322a5c) {
                var _0xe7f7c1 = _0x752025[_0x1ad0ef(0xb03)], _0x4c988b = _0x322a5c['length'];
                _0xe7f7c1[_0x1ad0ef(0x205)] = _0x4c988b;
                for (var _0x5c66aa = 0x0; _0x5c66aa < _0x4c988b; _0x5c66aa++)
                    _0xe7f7c1[_0x5c66aa] = _0x387b86['Loader']['getRes'](_0x322a5c[_0x5c66aa][_0x1ad0ef(0x3b8)]);
                _0x752025[_0x1ad0ef(0xb03)] = _0xe7f7c1;
            }
            var _0x174636 = _0x44523b['boundBox'], _0xc79b95 = _0x174636[_0x1ad0ef(0x212)], _0x54d80d = _0x174636[_0x1ad0ef(0x20c)];
            if (_0x752025[_0x1ad0ef(0xef4)][_0x1ad0ef(0xa62)](new _0x3697cd(_0xc79b95[0x0], _0xc79b95[0x1], _0xc79b95[0x2])), _0x752025['localBounds'][_0x1ad0ef(0xa49)](new _0x3697cd(_0x54d80d[0x0], _0x54d80d[0x1], _0x54d80d[0x2])), _0x515134) {
                var _0x55f6e6 = _0x44523b[_0x1ad0ef(0xef5)];
                _0x752025[_0x1ad0ef(0xef5)] = _0x515134[_0x55f6e6];
                var _0x5f4ca1, _0x47a321 = _0x44523b[_0x1ad0ef(0xef7)];
                for (_0x5c66aa = 0x0, _0x5f4ca1 = _0x47a321[_0x1ad0ef(0x205)]; _0x5c66aa < _0x5f4ca1; _0x5c66aa++)
                    _0x752025[_0x1ad0ef(0xef7)][_0x1ad0ef(0x2ac)](_0x515134[_0x47a321[_0x5c66aa]]);
                _0x752025['_bonesNums'] = _0x44523b['bonesNums'] ? _0x44523b[_0x1ad0ef(0xff8)] : _0x752025[_0x1ad0ef(0xef7)][_0x1ad0ef(0x205)];
            } else
                _0x44523b['rootBone'] && _0x752025[_0x1ad0ef(0xff9)](_0x44523b[_0x1ad0ef(0xef5)]);
            var _0x3103a7 = _0x44523b[_0x1ad0ef(0xffa)];
            if (_0x3103a7) {
                var _0xb3e622 = _0x387b86[_0x1ad0ef(0x3bd)][_0x1ad0ef(0x3b7)](_0x3103a7);
                _0x752025[_0x1ad0ef(0xfef)] = _0xb3e622;
            }
        }
        [_0x6027f5(0x5c7)](_0x2ebc04) {
            var _0xf541db = _0x6027f5;
            super[_0xf541db(0x5c7)](_0x2ebc04), this[_0xf541db(0xff7)][_0xf541db(0xf03)](_0x2ebc04);
        }
        [_0x6027f5(0x345)](_0x376fa7, _0x3d72a7, _0xfb0331) {
            var _0x4cedb7 = _0x6027f5, _0x27d232 = _0x376fa7;
            _0x27d232['meshFilter'][_0x4cedb7(0xad0)] = this[_0x4cedb7(0xacf)][_0x4cedb7(0xad0)];
            var _0x32fd97 = this[_0x4cedb7(0x5e8)], _0x90ce4a = _0x27d232[_0x4cedb7(0x5e8)];
            _0x90ce4a[_0x4cedb7(0x659)] = _0x32fd97[_0x4cedb7(0x659)], _0x90ce4a[_0x4cedb7(0xb03)] = _0x32fd97[_0x4cedb7(0xb03)], _0x90ce4a['castShadow'] = _0x32fd97[_0x4cedb7(0xb09)];
            var _0x516447 = _0x32fd97[_0x4cedb7(0xacd)];
            _0x516447 && (_0x90ce4a['lightmapScaleOffset'] = _0x516447[_0x4cedb7(0x1fd)]()), _0x90ce4a[_0x4cedb7(0xaac)] = _0x32fd97[_0x4cedb7(0xaac)], _0x90ce4a['sortingFudge'] = _0x32fd97[_0x4cedb7(0xcf0)], _0x90ce4a[_0x4cedb7(0xf08)] = _0x32fd97[_0x4cedb7(0xf08)];
            var _0x328ad4 = _0x32fd97[_0x4cedb7(0xef7)], _0x1c0e7e = _0x90ce4a['bones'], _0x5cf675 = _0x328ad4[_0x4cedb7(0x205)];
            _0x1c0e7e[_0x4cedb7(0x205)] = _0x5cf675;
            var _0x34fa10 = _0x32fd97['rootBone'];
            if (_0x34fa10) {
                var _0x559c40 = _0x3acd08[_0x4cedb7(0x30e)](_0x3d72a7, _0x34fa10, _0x1a32b6['_tempArray0']);
                _0x90ce4a[_0x4cedb7(0xef5)] = _0x559c40 ? _0x3acd08[_0x4cedb7(0x311)](_0xfb0331, _0x559c40) : _0x34fa10;
            }
            for (var _0x402772 = 0x0; _0x402772 < _0x328ad4['length']; _0x402772++)
                _0x559c40 = _0x3acd08[_0x4cedb7(0x30e)](_0x3d72a7, _0x328ad4[_0x402772], _0x1a32b6['_tempArray0']), _0x1c0e7e[_0x402772] = _0x559c40 ? _0x3acd08['_getNodeByHierarchyPath'](_0xfb0331, _0x559c40) : _0x328ad4[_0x402772];
            var _0x4b926f = _0x32fd97[_0x4cedb7(0xef4)];
            _0x4b926f && _0x4b926f[_0x4cedb7(0x1fc)](_0x90ce4a[_0x4cedb7(0xef4)]), _0x90ce4a[_0x4cedb7(0xff3)] = _0x32fd97['simpleAnimatorOffset'], _0x90ce4a[_0x4cedb7(0xfef)] = _0x32fd97[_0x4cedb7(0xfef)], _0x90ce4a['_bonesNums'] = _0x32fd97[_0x4cedb7(0xff6)], super[_0x4cedb7(0x345)](_0x376fa7, _0x3d72a7, _0xfb0331);
        }
        [_0x6027f5(0x364)](_0x382021 = !0x0) {
            var _0x38cfed = _0x6027f5;
            this[_0x38cfed(0x5cf)] || (super[_0x38cfed(0x364)](_0x382021), this[_0x38cfed(0xce7)][_0x38cfed(0x364)]());
        }
        [_0x6027f5(0x3f8)]() {
            return new _0x1a32b6();
        }
    }
    _0x1a32b6[_0x6027f5(0xf10)] = [], _0x1a32b6['SIMPLE_SIMPLEANIMATORTEXTURE'] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xffb)), _0x1a32b6[_0x6027f5(0xf12)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xffc)), _0x1a32b6[_0x6027f5(0xf13)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0xf14));
    class _0x565b79 {
        static [_0x6027f5(0x5d0)](_0x58aa57, _0x5aa8de, _0x3e42da) {
            var _0x37811d = _0x6027f5, _0x420473;
            switch (_0x58aa57[_0x37811d(0x2cc)]) {
            case 'Scene3D':
                _0x420473 = new _0x9c4b57();
                break;
            case _0x37811d(0xffd):
                _0x420473 = new _0x44a154();
                break;
            case _0x37811d(0xffe):
                _0x420473 = new _0x8ce47b(), _0x3e42da && _0x58aa57['props'][_0x37811d(0x3db)] && _0x3e42da['push'](_0x420473);
                break;
            case _0x37811d(0xfff):
                _0x420473 = new _0x45dde3();
                break;
            case _0x37811d(0x1000):
                _0x420473 = new _0x1a32b6();
                break;
            case _0x37811d(0x1001):
                _0x420473 = new _0x47d536();
                break;
            case _0x37811d(0x22c):
                _0x420473 = new _0x55cd9b();
                break;
            case _0x37811d(0xb5c):
                _0x420473 = new _0xf16363();
                break;
            case _0x37811d(0xb5e):
                _0x420473 = new _0xcfaab4();
                break;
            case 'SpotLight':
                _0x420473 = new _0x21b275();
                break;
            case 'TrailSprite3D':
                _0x420473 = new _0x8b289e();
                break;
            case _0x37811d(0x1002):
                _0x420473 = new _0x24dd24();
                break;
            default:
                throw new Error('Utils3D:unidentified\x20class\x20type\x20in\x20(.lh)\x20file.');
            }
            var _0x12e6d7 = _0x58aa57[_0x37811d(0x682)];
            if (_0x12e6d7)
                for (var _0x1aa8db = 0x0, _0x1538a9 = _0x12e6d7[_0x37811d(0x205)]; _0x1aa8db < _0x1538a9; _0x1aa8db++) {
                    var _0x328947 = _0x565b79[_0x37811d(0x5d0)](_0x12e6d7[_0x1aa8db], _0x5aa8de, _0x3e42da);
                    _0x420473[_0x37811d(0x5bf)](_0x328947);
                }
            return _0x5aa8de[_0x58aa57['instanceID']] = _0x420473, _0x420473;
        }
        static [_0x6027f5(0x1003)](_0xe1be28, _0x361ed4, _0x36f44c) {
            var _0x5b03fe = _0x6027f5, _0x258f33 = _0x361ed4[_0xe1be28[_0x5b03fe(0x1004)]];
            _0x258f33[_0x5b03fe(0x67c)](_0xe1be28[_0x5b03fe(0x681)], _0x361ed4);
            var _0x5c0a43 = _0xe1be28[_0x5b03fe(0x682)];
            if (_0x5c0a43) {
                for (var _0x54d4a4 = 0x0, _0x3c18cb = _0x5c0a43[_0x5b03fe(0x205)]; _0x54d4a4 < _0x3c18cb; _0x54d4a4++)
                    _0x565b79[_0x5b03fe(0x1003)](_0x5c0a43[_0x54d4a4], _0x361ed4, _0x36f44c);
            }
            var _0x3edbae = _0xe1be28['components'];
            if (_0x3edbae)
                for (var _0xa3cec4 = 0x0, _0x419a0c = _0x3edbae[_0x5b03fe(0x205)]; _0xa3cec4 < _0x419a0c; _0xa3cec4++) {
                    var _0x541d5f = _0x3edbae[_0xa3cec4], _0x584130 = _0x387b86[_0x5b03fe(0x1005)][_0x5b03fe(0x690)](_0x541d5f[_0x5b03fe(0x2cc)]);
                    if (_0x584130)
                        _0x258f33[_0x5b03fe(0x1006)](_0x584130)['_parse'](_0x541d5f, _0x36f44c);
                    else
                        console['warn'](_0x5b03fe(0x1007));
                }
        }
        static [_0x6027f5(0x1008)](_0x41f30f, _0x3eb2e8) {
            var _0x8a193b = _0x6027f5, _0x23a5fd = {}, _0x30b22c = {
                    'component': [],
                    'data': []
                }, _0xda6700 = _0x565b79[_0x8a193b(0x5d0)](_0x41f30f, _0x23a5fd, _0x3eb2e8);
            return _0x565b79[_0x8a193b(0x1003)](_0x41f30f, _0x23a5fd, _0x30b22c), _0x565b79[_0x8a193b(0x1009)](_0x30b22c, _0x23a5fd), _0xda6700;
        }
        static [_0x6027f5(0x1009)](_0x18fb8a, _0x569906) {
            var _0x39acc7 = _0x6027f5;
            for (var _0x122ca9 = _0x18fb8a['component'], _0x3eff19 = _0x18fb8a[_0x39acc7(0x100a)], _0x4728f7 = 0x0, _0x400d92 = _0x122ca9['length']; _0x4728f7 < _0x400d92; _0x4728f7++)
                _0x122ca9[_0x4728f7]['_parseInteractive'](_0x3eff19[_0x4728f7], _0x569906);
        }
        static [_0x6027f5(0x67c)](_0x3aa304, _0x14bdea = null, _0x3a5c35 = null) {
            var _0x1e6b3e = _0x6027f5, _0x4b5a56, _0x2eeb2a = _0x3aa304['data'], _0xce0052 = [];
            switch (_0x3aa304[_0x1e6b3e(0x100b)]) {
            case _0x1e6b3e(0x100c):
                _0x4b5a56 = _0x565b79[_0x1e6b3e(0x1008)](_0x2eeb2a, _0xce0052);
                break;
            default:
                _0x4b5a56 = _0x565b79[_0x1e6b3e(0x100d)](_0x2eeb2a, _0xce0052);
            }
            return _0x423717[_0x1e6b3e(0xabc)](_0x4b5a56, _0xce0052), _0x4b5a56;
        }
        static [_0x6027f5(0x100e)](_0x3687e1, _0x124da1 = null, _0x4781c0 = null) {
            var _0x4a2db4 = _0x6027f5, _0x1e0a97, _0x58e55b = _0x3687e1[_0x4a2db4(0x100a)], _0x187966 = [];
            switch (_0x3687e1[_0x4a2db4(0x100b)]) {
            case _0x4a2db4(0x100f):
                _0x1e0a97 = _0x565b79[_0x4a2db4(0x1008)](_0x58e55b, _0x187966);
                break;
            default:
                _0x1e0a97 = _0x565b79[_0x4a2db4(0x100d)](_0x58e55b, _0x187966);
            }
            return _0x423717[_0x4a2db4(0xabc)](null, _0x187966), _0x1e0a97;
        }
        static ['_createNodeByJson'](_0x544394, _0x23be9d) {
            var _0x19cf10 = _0x6027f5, _0x35b7ec;
            switch (_0x544394['type']) {
            case 'Scene3D':
                _0x35b7ec = new _0x9c4b57();
                break;
            case 'Sprite3D':
                _0x35b7ec = new _0x44a154();
                break;
            case _0x19cf10(0xffe):
                _0x35b7ec = new _0x8ce47b(), _0x23be9d && _0x544394[_0x19cf10(0x681)][_0x19cf10(0x3db)] && _0x23be9d[_0x19cf10(0x2ac)](_0x35b7ec);
                break;
            case _0x19cf10(0xfff):
                _0x35b7ec = new _0x45dde3();
                break;
            case _0x19cf10(0x1001):
                _0x35b7ec = new _0x47d536();
                break;
            case _0x19cf10(0x22c):
                _0x35b7ec = new _0x55cd9b();
                break;
            case _0x19cf10(0xb5c):
                _0x35b7ec = new _0xf16363();
                break;
            case _0x19cf10(0xb5e):
                _0x35b7ec = new _0xcfaab4();
                break;
            case _0x19cf10(0xb5d):
                _0x35b7ec = new _0x21b275();
                break;
            case _0x19cf10(0x1010):
                _0x35b7ec = new _0x8b289e();
                break;
            default:
                throw new Error(_0x19cf10(0x1011));
            }
            var _0x216e84 = _0x544394[_0x19cf10(0x682)];
            if (_0x216e84)
                for (var _0x5bc04f = 0x0, _0x1ffcee = _0x216e84[_0x19cf10(0x205)]; _0x5bc04f < _0x1ffcee; _0x5bc04f++) {
                    var _0x1301c = _0x565b79[_0x19cf10(0x100d)](_0x216e84[_0x5bc04f], _0x23be9d);
                    _0x35b7ec[_0x19cf10(0x5bf)](_0x1301c);
                }
            var _0x11722d = _0x544394[_0x19cf10(0x1012)];
            if (_0x11722d)
                for (var _0x3e7770 = 0x0, _0x9645f9 = _0x11722d['length']; _0x3e7770 < _0x9645f9; _0x3e7770++) {
                    var _0x3ef541 = _0x11722d[_0x3e7770], _0x1e2c50 = _0x387b86[_0x19cf10(0x1005)][_0x19cf10(0x690)](_0x3ef541[_0x19cf10(0x2cc)]);
                    if (_0x1e2c50)
                        _0x35b7ec[_0x19cf10(0x1006)](_0x1e2c50)[_0x19cf10(0x67c)](_0x3ef541);
                    else
                        console['warn'](_0x19cf10(0x1007));
                }
            return _0x35b7ec[_0x19cf10(0x67c)](_0x544394['props'], null), _0x35b7ec;
        }
    }
    class _0x309b4e {
        static [_0x6027f5(0x2b1)](_0x564b14, _0x315fb5, _0x5f0dcd, _0x12b356) {
            var _0x57837b = _0x6027f5;
            _0x309b4e['_mesh'] = _0x5f0dcd, _0x309b4e[_0x57837b(0x5e6)] = _0x12b356, _0x309b4e[_0x57837b(0x2c9)] = _0x315fb5, _0x309b4e['_readData'] = _0x564b14, _0x309b4e[_0x57837b(0x2a3)](), _0x309b4e['READ_BLOCK'](), _0x309b4e['READ_STRINGS']();
            for (var _0x5d57c5 = 0x0, _0x58fe8c = _0x309b4e['_BLOCK'][_0x57837b(0x2b3)]; _0x5d57c5 < _0x58fe8c; _0x5d57c5++) {
                _0x309b4e[_0x57837b(0x1013)][_0x57837b(0x2ae)] = _0x309b4e[_0x57837b(0x2a8)][_0x57837b(0x2aa)][_0x5d57c5];
                var _0x18235d = _0x309b4e['_readData'][_0x57837b(0x2a9)](), _0x58c074 = _0x309b4e[_0x57837b(0x2af)][_0x18235d], _0x295f30 = _0x309b4e['READ_' + _0x58c074];
                if (null == _0x295f30)
                    throw new Error(_0x57837b(0x2b5) + _0x18235d + '\x20' + _0x58c074);
                _0x295f30['call'](null);
            }
            _0x309b4e[_0x57837b(0x2af)][_0x57837b(0x205)] = 0x0, _0x309b4e[_0x57837b(0x1013)] = null, _0x309b4e[_0x57837b(0x2c9)] = null, _0x309b4e[_0x57837b(0x5d9)] = null, _0x309b4e[_0x57837b(0x5e6)] = null;
        }
        static [_0x6027f5(0x1014)]() {
            var _0x1e2329 = _0x6027f5;
            return _0x309b4e['_strings'][_0x309b4e[_0x1e2329(0x1013)][_0x1e2329(0x2a9)]()];
        }
        static [_0x6027f5(0x2a3)]() {
            var _0xf3e786 = _0x6027f5;
            _0x309b4e[_0xf3e786(0x2a4)]['offset'] = _0x309b4e['_readData'][_0xf3e786(0x2a6)](), _0x309b4e[_0xf3e786(0x2a4)]['size'] = _0x309b4e[_0xf3e786(0x1013)]['getUint32']();
        }
        static [_0x6027f5(0x1015)]() {
            var _0x2cb5f9 = _0x6027f5;
            for (var _0x56a94d = _0x309b4e[_0x2cb5f9(0x2a8)][_0x2cb5f9(0x2b3)] = _0x309b4e[_0x2cb5f9(0x1013)]['getUint16'](), _0x21c803 = _0x309b4e[_0x2cb5f9(0x2a8)]['blockStarts'] = [], _0x44571b = _0x309b4e[_0x2cb5f9(0x2a8)]['blockLengths'] = [], _0xa32fd3 = 0x0; _0xa32fd3 < _0x56a94d; _0xa32fd3++)
                _0x21c803[_0x2cb5f9(0x2ac)](_0x309b4e[_0x2cb5f9(0x1013)][_0x2cb5f9(0x2a6)]()), _0x44571b['push'](_0x309b4e[_0x2cb5f9(0x1013)][_0x2cb5f9(0x2a6)]());
        }
        static [_0x6027f5(0x2ad)]() {
            var _0x19f3a6 = _0x6027f5, _0x384815 = _0x309b4e['_readData']['getUint32'](), _0x351475 = _0x309b4e[_0x19f3a6(0x1013)]['getUint16'](), _0x126a4e = _0x309b4e[_0x19f3a6(0x1013)][_0x19f3a6(0x2ae)];
            _0x309b4e['_readData'][_0x19f3a6(0x2ae)] = _0x384815 + _0x309b4e['_DATA']['offset'];
            for (var _0x5e87d5 = 0x0; _0x5e87d5 < _0x351475; _0x5e87d5++)
                _0x309b4e['_strings'][_0x5e87d5] = _0x309b4e['_readData'][_0x19f3a6(0x2b0)]();
            _0x309b4e[_0x19f3a6(0x1013)]['pos'] = _0x126a4e;
        }
        static [_0x6027f5(0x1016)]() {
            var _0x5daa64 = _0x6027f5, _0x55cb57, _0x27651d = _0x387b86[_0x5daa64(0x303)][_0x5daa64(0x304)], _0x2b3182 = (_0x309b4e['_readString'](), _0x309b4e[_0x5daa64(0x1013)]['__getBuffer']()), _0x39217e = 0x0, _0x5424db = _0x309b4e[_0x5daa64(0x1013)][_0x5daa64(0x2bd)](), _0x5981c5 = _0x309b4e[_0x5daa64(0x2a4)][_0x5daa64(0x2c8)];
            for (_0x55cb57 = 0x0; _0x55cb57 < _0x5424db; _0x55cb57++) {
                var _0x2fc7fa, _0x4f3ac2 = _0x5981c5 + _0x309b4e[_0x5daa64(0x1013)]['getUint32'](), _0x4bc1b3 = _0x309b4e[_0x5daa64(0x1013)][_0x5daa64(0x2a6)](), _0x42159e = _0x2b3182[_0x5daa64(0xb02)](_0x4f3ac2, _0x4f3ac2 + _0x4bc1b3), _0x4a1312 = new Float32Array(_0x42159e), _0x15a055 = _0x309b4e[_0x5daa64(0x1014)]();
                switch (_0x309b4e[_0x5daa64(0x2c9)]) {
                case _0x5daa64(0x1017):
                case 'LAYAMODEL:0400':
                    _0x2fc7fa = _0x73b54a[_0x5daa64(0x607)](_0x15a055);
                    break;
                case _0x5daa64(0x1018):
                    _0x2fc7fa = _0x73b54a[_0x5daa64(0x607)](_0x15a055, !0x1);
                    break;
                default:
                    throw new Error(_0x5daa64(0x1019));
                }
                if (!_0x2fc7fa)
                    throw new Error('LoadModelV03:\x20unknown\x20vertexDeclaration.');
                var _0x20f708 = new _0x2ce777(0x4 * _0x4a1312[_0x5daa64(0x205)], _0x27651d['STATIC_DRAW'], !0x0);
                _0x20f708['vertexDeclaration'] = _0x2fc7fa, _0x20f708[_0x5daa64(0x45d)](_0x4a1312[_0x5daa64(0x454)]), _0x309b4e[_0x5daa64(0x5d9)]['_vertexBuffer'] = _0x20f708, _0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0xa9f)] += _0x20f708['_byteLength'] / _0x2fc7fa[_0x5daa64(0x4e5)], _0x39217e += 0x4 * _0x4a1312[_0x5daa64(0x205)];
            }
            var _0x5005f1 = _0x5981c5 + _0x309b4e[_0x5daa64(0x1013)][_0x5daa64(0x2a6)](), _0x48c016 = _0x309b4e[_0x5daa64(0x1013)][_0x5daa64(0x2a6)](), _0x189e48 = new Uint16Array(_0x2b3182[_0x5daa64(0xb02)](_0x5005f1, _0x5005f1 + _0x48c016)), _0x458b75 = new _0x67ef8f(_0x18be32[_0x5daa64(0x8c9)][_0x5daa64(0x8cb)], _0x48c016 / 0x2, _0x27651d[_0x5daa64(0x4fa)], !0x0);
            _0x458b75[_0x5daa64(0x45d)](_0x189e48), _0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0x629)] = _0x458b75, _0x39217e += 0x2 * _0x458b75[_0x5daa64(0xa0b)], _0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0xf82)](_0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0x4f6)], _0x458b75), _0x309b4e['_mesh'][_0x5daa64(0xf80)](_0x39217e), _0x309b4e[_0x5daa64(0x5d9)]['_setGPUMemory'](_0x39217e);
            var _0x4fb949 = _0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0xf0a)] = [], _0x500285 = _0x309b4e[_0x5daa64(0x1013)]['getUint16']();
            for (_0x4fb949['length'] = _0x500285, _0x55cb57 = 0x0; _0x55cb57 < _0x500285; _0x55cb57++)
                _0x4fb949[_0x55cb57] = _0x309b4e[_0x5daa64(0x2af)][_0x309b4e[_0x5daa64(0x1013)][_0x5daa64(0x2a9)]()];
            _0x309b4e['_readData'][_0x5daa64(0x2ae)] += 0x8;
            var _0x301fad = _0x309b4e['_readData'][_0x5daa64(0x2a6)](), _0x5d1364 = _0x309b4e['_readData'][_0x5daa64(0x2a6)](), _0x278771 = new Float32Array(_0x2b3182[_0x5daa64(0xb02)](_0x5981c5 + _0x301fad, _0x5981c5 + _0x301fad + _0x5d1364)), _0xfd4c9e = _0x278771[_0x5daa64(0x205)], _0x52370b = _0x309b4e[_0x5daa64(0x5d9)]['_inverseBindPosesBuffer'] = new ArrayBuffer(0x4 * _0xfd4c9e);
            for (_0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0xf01)] = [], _0x309b4e['_mesh'][_0x5daa64(0xf72)] = 0x0 != _0xfd4c9e ? _0x588bb2[_0x5daa64(0xf9f)] : _0x588bb2['MESH_INSTANCEBUFFER_TYPE_NORMAL'], _0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0x625)](_0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0xf72)]), _0x55cb57 = 0x0; _0x55cb57 < _0xfd4c9e; _0x55cb57 += 0x10) {
                var _0x20a7e4 = new _0x6b4d98(_0x278771[_0x55cb57 + 0x0], _0x278771[_0x55cb57 + 0x1], _0x278771[_0x55cb57 + 0x2], _0x278771[_0x55cb57 + 0x3], _0x278771[_0x55cb57 + 0x4], _0x278771[_0x55cb57 + 0x5], _0x278771[_0x55cb57 + 0x6], _0x278771[_0x55cb57 + 0x7], _0x278771[_0x55cb57 + 0x8], _0x278771[_0x55cb57 + 0x9], _0x278771[_0x55cb57 + 0xa], _0x278771[_0x55cb57 + 0xb], _0x278771[_0x55cb57 + 0xc], _0x278771[_0x55cb57 + 0xd], _0x278771[_0x55cb57 + 0xe], _0x278771[_0x55cb57 + 0xf], new Float32Array(_0x52370b, 0x4 * _0x55cb57, 0x10));
                _0x309b4e[_0x5daa64(0x5d9)][_0x5daa64(0xf01)][_0x55cb57 / 0x10] = _0x20a7e4;
            }
            return !0x0;
        }
        static ['READ_SUBMESH']() {
            var _0x46f7c0 = _0x6027f5, _0x289832 = _0x309b4e['_readData'][_0x46f7c0(0x101a)](), _0x37e093 = new _0x5e1dab(_0x309b4e[_0x46f7c0(0x5d9)]);
            _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2bd)](), _0x309b4e[_0x46f7c0(0x1013)]['getUint32'](), _0x309b4e['_readData']['getUint32']();
            var _0x3fc05c = _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2a6)](), _0x17ed72 = _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2a6)](), _0x5edf9b = _0x309b4e[_0x46f7c0(0x5d9)][_0x46f7c0(0x629)];
            _0x37e093[_0x46f7c0(0x629)] = _0x5edf9b, _0x37e093[_0x46f7c0(0xf68)](_0x3fc05c, _0x17ed72);
            var _0x14f592 = _0x309b4e[_0x46f7c0(0x5d9)][_0x46f7c0(0x4f6)];
            _0x37e093['_vertexBuffer'] = _0x14f592;
            var _0x45b226 = _0x309b4e[_0x46f7c0(0x2a4)][_0x46f7c0(0x2c8)], _0x1998be = _0x37e093[_0x46f7c0(0xf66)], _0x4115aa = _0x37e093[_0x46f7c0(0xf67)], _0x57b950 = _0x37e093[_0x46f7c0(0xefc)], _0x233e28 = _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2a9)]();
            _0x1998be[_0x46f7c0(0x205)] = _0x233e28, _0x4115aa[_0x46f7c0(0x205)] = _0x233e28, _0x57b950[_0x46f7c0(0x205)] = _0x233e28;
            var _0xb9311d = _0x309b4e['_mesh'][_0x46f7c0(0xefb)], _0x5c6093 = _0x309b4e[_0x46f7c0(0x5e6)][_0x46f7c0(0x205)];
            _0xb9311d[_0x46f7c0(0x205)] = _0x309b4e[_0x46f7c0(0x5d9)][_0x46f7c0(0xf01)][_0x46f7c0(0x205)];
            for (var _0x524991 = 0x0; _0x524991 < _0x233e28; _0x524991++) {
                _0x1998be[_0x524991] = _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2a6)](), _0x4115aa[_0x524991] = _0x309b4e['_readData'][_0x46f7c0(0x2a6)]();
                for (var _0x4ca090 = _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2a6)](), _0x4ed1ea = _0x309b4e[_0x46f7c0(0x1013)][_0x46f7c0(0x2a6)](), _0x57c9de = _0x57b950[_0x524991] = new Uint16Array(_0x289832[_0x46f7c0(0xb02)](_0x45b226 + _0x4ca090, _0x45b226 + _0x4ca090 + _0x4ed1ea)), _0x26d1cd = _0x57c9de[_0x46f7c0(0x205)], _0x460cfa = 0x0; _0x460cfa < _0x26d1cd; _0x460cfa++) {
                    var _0x93ff2d = _0x57c9de[_0x460cfa];
                    _0xb9311d[_0x93ff2d] || (_0xb9311d[_0x93ff2d] = new _0x28557f(_0x5c6093, _0x524991, _0x460cfa));
                }
            }
            return _0x309b4e['_subMeshes'][_0x46f7c0(0x2ac)](_0x37e093), !0x0;
        }
    }
    _0x309b4e[_0x6027f5(0x2a8)] = { 'count': 0x0 }, _0x309b4e['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x309b4e[_0x6027f5(0x2af)] = [];
    class _0x47de96 {
        static [_0x6027f5(0x2b1)](_0x4eb1db, _0x400012, _0x5c5a9d, _0x49491c) {
            var _0x4430c8 = _0x6027f5;
            _0x47de96[_0x4430c8(0x5d9)] = _0x5c5a9d, _0x47de96['_subMeshes'] = _0x49491c, _0x47de96[_0x4430c8(0x2c9)] = _0x400012, _0x47de96[_0x4430c8(0x1013)] = _0x4eb1db, _0x47de96[_0x4430c8(0x2a3)](), _0x47de96[_0x4430c8(0x1015)](), _0x47de96[_0x4430c8(0x2ad)]();
            for (var _0x5beacd = 0x0, _0x2af779 = _0x47de96[_0x4430c8(0x2a8)][_0x4430c8(0x2b3)]; _0x5beacd < _0x2af779; _0x5beacd++) {
                _0x47de96[_0x4430c8(0x1013)][_0x4430c8(0x2ae)] = _0x47de96[_0x4430c8(0x2a8)][_0x4430c8(0x2aa)][_0x5beacd];
                var _0x368e00 = _0x47de96[_0x4430c8(0x1013)][_0x4430c8(0x2a9)](), _0x383d46 = _0x47de96['_strings'][_0x368e00], _0x268591 = _0x47de96[_0x4430c8(0x2b4) + _0x383d46];
                if (null == _0x268591)
                    throw new Error('model\x20file\x20err,no\x20this\x20function:' + _0x368e00 + '\x20' + _0x383d46);
                _0x268591[_0x4430c8(0x2b6)](null);
            }
            _0x47de96[_0x4430c8(0x2af)][_0x4430c8(0x205)] = 0x0, _0x47de96[_0x4430c8(0x1013)] = null, _0x47de96[_0x4430c8(0x2c9)] = null, _0x47de96[_0x4430c8(0x5d9)] = null, _0x47de96[_0x4430c8(0x5e6)] = null;
        }
        static ['_readString']() {
            var _0x4ad54e = _0x6027f5;
            return _0x47de96[_0x4ad54e(0x2af)][_0x47de96['_readData'][_0x4ad54e(0x2a9)]()];
        }
        static ['READ_DATA']() {
            var _0x25389f = _0x6027f5;
            _0x47de96[_0x25389f(0x2a4)]['offset'] = _0x47de96['_readData']['getUint32'](), _0x47de96[_0x25389f(0x2a4)][_0x25389f(0x2a7)] = _0x47de96[_0x25389f(0x1013)][_0x25389f(0x2a6)]();
        }
        static [_0x6027f5(0x1015)]() {
            var _0xc16f3c = _0x6027f5;
            for (var _0x1d72b4 = _0x47de96['_BLOCK'][_0xc16f3c(0x2b3)] = _0x47de96['_readData'][_0xc16f3c(0x2a9)](), _0x2f05a5 = _0x47de96[_0xc16f3c(0x2a8)]['blockStarts'] = [], _0x482b9a = _0x47de96[_0xc16f3c(0x2a8)]['blockLengths'] = [], _0x37ff88 = 0x0; _0x37ff88 < _0x1d72b4; _0x37ff88++)
                _0x2f05a5[_0xc16f3c(0x2ac)](_0x47de96[_0xc16f3c(0x1013)][_0xc16f3c(0x2a6)]()), _0x482b9a['push'](_0x47de96[_0xc16f3c(0x1013)][_0xc16f3c(0x2a6)]());
        }
        static [_0x6027f5(0x2ad)]() {
            var _0x135e96 = _0x6027f5, _0x54fb38 = _0x47de96[_0x135e96(0x1013)]['getUint32'](), _0x2f7e47 = _0x47de96[_0x135e96(0x1013)][_0x135e96(0x2a9)](), _0x4a6722 = _0x47de96['_readData'][_0x135e96(0x2ae)];
            _0x47de96[_0x135e96(0x1013)][_0x135e96(0x2ae)] = _0x54fb38 + _0x47de96[_0x135e96(0x2a4)][_0x135e96(0x2c8)];
            for (var _0x478777 = 0x0; _0x478777 < _0x2f7e47; _0x478777++)
                _0x47de96[_0x135e96(0x2af)][_0x478777] = _0x47de96[_0x135e96(0x1013)][_0x135e96(0x2b0)]();
            _0x47de96[_0x135e96(0x1013)][_0x135e96(0x2ae)] = _0x4a6722;
        }
        static ['READ_MESH']() {
            var _0x5ea939 = _0x6027f5, _0x178ec3, _0xa904f0 = _0x387b86['LayaGL'][_0x5ea939(0x304)], _0x52b6b2 = 0x0, _0x5ceb3d = (_0x47de96[_0x5ea939(0x1014)](), _0x47de96['_readData']), _0x4a6563 = _0x5ceb3d['__getBuffer'](), _0x4c3ed5 = _0x5ceb3d[_0x5ea939(0x2bd)](), _0x5be8a9 = _0x47de96[_0x5ea939(0x2a4)]['offset'];
            for (_0x178ec3 = 0x0; _0x178ec3 < _0x4c3ed5; _0x178ec3++) {
                var _0x158c07, _0x340343, _0x3ba524, _0x40d41a = _0x5be8a9 + _0x5ceb3d[_0x5ea939(0x2a6)](), _0x8c6a0d = _0x5ceb3d[_0x5ea939(0x2a6)](), _0x46bcaa = _0x47de96[_0x5ea939(0x1014)](), _0x305507 = _0x73b54a[_0x5ea939(0x607)](_0x46bcaa, !0x1), _0x2250f1 = _0x305507[_0x5ea939(0x4e5)], _0x43e7df = _0x46bcaa[_0x5ea939(0x609)](','), _0x4faf91 = _0x43e7df[_0x5ea939(0x205)], _0x46b6e7 = _0x47de96[_0x5ea939(0x5d9)];
                switch (_0x47de96[_0x5ea939(0x2c9)]) {
                case _0x5ea939(0x101b):
                case _0x5ea939(0x101c):
                    _0x158c07 = _0x4a6563[_0x5ea939(0xb02)](_0x40d41a, _0x40d41a + _0x8c6a0d * _0x2250f1), _0x340343 = new Float32Array(_0x158c07), _0x3ba524 = new Uint8Array(_0x158c07);
                    break;
                case _0x5ea939(0x101d):
                case _0x5ea939(0x101e):
                    _0x158c07 = new ArrayBuffer(_0x2250f1 * _0x8c6a0d), _0x340343 = new Float32Array(_0x158c07), _0x3ba524 = new Uint8Array(_0x158c07);
                    var _0x3295ba = _0x5ceb3d['pos'];
                    _0x5ceb3d[_0x5ea939(0x2ae)] = _0x40d41a;
                    for (var _0x5a46ea = 0x0; _0x5a46ea < _0x8c6a0d; _0x5a46ea++)
                        for (var _0x3896a5, _0x1cbb9c = _0x5a46ea * _0x2250f1, _0x32f6b9 = 0x0; _0x32f6b9 < _0x4faf91; _0x32f6b9++)
                            switch (_0x43e7df[_0x32f6b9]) {
                            case _0x5ea939(0x60a):
                                _0x340343[_0x3896a5 = _0x1cbb9c / 0x4] = _0x387b86['HalfFloatUtils'][_0x5ea939(0x2d2)](_0x5ceb3d[_0x5ea939(0x2a9)]()), _0x340343[_0x3896a5 + 0x1] = _0x387b86[_0x5ea939(0x2d1)][_0x5ea939(0x2d2)](_0x5ceb3d[_0x5ea939(0x2a9)]()), _0x340343[_0x3896a5 + 0x2] = _0x387b86[_0x5ea939(0x2d1)][_0x5ea939(0x2d2)](_0x5ceb3d[_0x5ea939(0x2a9)]()), _0x1cbb9c += 0xc;
                                break;
                            case _0x5ea939(0x60b):
                                _0x340343[_0x3896a5 = _0x1cbb9c / 0x4] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 127.5 - 0x1, _0x340343[_0x3896a5 + 0x1] = _0x5ceb3d['getUint8']() / 127.5 - 0x1, _0x340343[_0x3896a5 + 0x2] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 127.5 - 0x1, _0x1cbb9c += 0xc;
                                break;
                            case _0x5ea939(0x438):
                                _0x340343[_0x3896a5 = _0x1cbb9c / 0x4] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x340343[_0x3896a5 + 0x1] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x340343[_0x3896a5 + 0x2] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x340343[_0x3896a5 + 0x3] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x1cbb9c += 0x10;
                                break;
                            case 'UV':
                            case _0x5ea939(0x60e):
                                _0x340343[_0x3896a5 = _0x1cbb9c / 0x4] = _0x387b86[_0x5ea939(0x2d1)][_0x5ea939(0x2d2)](_0x5ceb3d[_0x5ea939(0x2a9)]()), _0x340343[_0x3896a5 + 0x1] = _0x387b86[_0x5ea939(0x2d1)][_0x5ea939(0x2d2)](_0x5ceb3d['getUint16']()), _0x1cbb9c += 0x8;
                                break;
                            case _0x5ea939(0x610):
                                _0x340343[_0x3896a5 = _0x1cbb9c / 0x4] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x340343[_0x3896a5 + 0x1] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x340343[_0x3896a5 + 0x2] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 0xff, _0x340343[_0x3896a5 + 0x3] = _0x5ceb3d['getUint8']() / 0xff, _0x1cbb9c += 0x10;
                                break;
                            case _0x5ea939(0x612):
                                _0x3ba524[_0x1cbb9c] = _0x5ceb3d[_0x5ea939(0x2c2)](), _0x3ba524[_0x1cbb9c + 0x1] = _0x5ceb3d['getUint8'](), _0x3ba524[_0x1cbb9c + 0x2] = _0x5ceb3d['getUint8'](), _0x3ba524[_0x1cbb9c + 0x3] = _0x5ceb3d[_0x5ea939(0x2c2)](), _0x1cbb9c += 0x4;
                                break;
                            case _0x5ea939(0x613):
                                _0x340343[_0x3896a5 = _0x1cbb9c / 0x4] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 127.5 - 0x1, _0x340343[_0x3896a5 + 0x1] = _0x5ceb3d['getUint8']() / 127.5 - 0x1, _0x340343[_0x3896a5 + 0x2] = _0x5ceb3d[_0x5ea939(0x2c2)]() / 127.5 - 0x1, _0x340343[_0x3896a5 + 0x3] = _0x5ceb3d['getUint8']() / 127.5 - 0x1, _0x1cbb9c += 0x10;
                            }
                    _0x5ceb3d[_0x5ea939(0x2ae)] = _0x3295ba;
                }
                var _0x30ad9f = new _0x2ce777(_0x158c07[_0x5ea939(0x101f)], _0xa904f0[_0x5ea939(0x4fa)], !0x0);
                _0x30ad9f['vertexDeclaration'] = _0x305507, _0x30ad9f[_0x5ea939(0x45d)](_0x158c07), _0x8c6a0d = _0x30ad9f[_0x5ea939(0x451)] / _0x305507[_0x5ea939(0x4e5)], (_0x46b6e7['_indexFormat'] = _0x8c6a0d > 0xffff ? _0x18be32[_0x5ea939(0x8c9)]['UInt32'] : _0x18be32['IndexFormat']['UInt16'], _0x46b6e7[_0x5ea939(0x4f6)] = _0x30ad9f, _0x46b6e7[_0x5ea939(0xa9f)] += _0x8c6a0d, _0x52b6b2 += 0x4 * _0x340343[_0x5ea939(0x205)]);
            }
            var _0x7b0520, _0x4a04c7 = _0x5be8a9 + _0x5ceb3d[_0x5ea939(0x2a6)](), _0x47eb90 = _0x5ceb3d[_0x5ea939(0x2a6)]();
            _0x7b0520 = _0x46b6e7[_0x5ea939(0xf69)] == _0x18be32[_0x5ea939(0x8c9)][_0x5ea939(0x8cc)] ? new Uint32Array(_0x4a6563['slice'](_0x4a04c7, _0x4a04c7 + _0x47eb90)) : new Uint16Array(_0x4a6563[_0x5ea939(0xb02)](_0x4a04c7, _0x4a04c7 + _0x47eb90));
            var _0x539e30 = new _0x67ef8f(_0x46b6e7['indexFormat'], _0x7b0520[_0x5ea939(0x205)], _0xa904f0[_0x5ea939(0x4fa)], !0x0);
            if (_0x539e30[_0x5ea939(0x45d)](_0x7b0520), _0x46b6e7[_0x5ea939(0x629)] = _0x539e30, _0x46b6e7[_0x5ea939(0xf82)](_0x46b6e7[_0x5ea939(0x4f6)], _0x539e30), _0x52b6b2 += 0x2 * _0x539e30[_0x5ea939(0xa0b)], _0x46b6e7[_0x5ea939(0xf80)](_0x52b6b2), _0x46b6e7[_0x5ea939(0x433)](_0x52b6b2), _0x5ea939(0x101c) == _0x47de96[_0x5ea939(0x2c9)] || 'LAYAMODEL:COMPRESSION_0501' == _0x47de96[_0x5ea939(0x2c9)]) {
                var _0x525d09 = _0x46b6e7['bounds'], _0x3c8cea = _0x525d09[_0x5ea939(0xa47)](), _0x54bf82 = _0x525d09['getMax']();
                _0x3c8cea[_0x5ea939(0x1f8)](_0x5ceb3d[_0x5ea939(0x2b9)](), _0x5ceb3d[_0x5ea939(0x2b9)](), _0x5ceb3d[_0x5ea939(0x2b9)]()), _0x54bf82[_0x5ea939(0x1f8)](_0x5ceb3d['getFloat32'](), _0x5ceb3d['getFloat32'](), _0x5ceb3d[_0x5ea939(0x2b9)]()), _0x525d09[_0x5ea939(0xa62)](_0x3c8cea), _0x525d09[_0x5ea939(0xa49)](_0x54bf82), _0x46b6e7[_0x5ea939(0x812)] = _0x525d09;
            }
            var _0x2d7b97 = _0x46b6e7[_0x5ea939(0xf0a)] = [], _0x5757aa = _0x5ceb3d[_0x5ea939(0x2a9)]();
            for (_0x2d7b97[_0x5ea939(0x205)] = _0x5757aa, _0x178ec3 = 0x0; _0x178ec3 < _0x5757aa; _0x178ec3++)
                _0x2d7b97[_0x178ec3] = _0x47de96['_strings'][_0x5ceb3d['getUint16']()];
            var _0x499291 = _0x5ceb3d[_0x5ea939(0x2a6)](), _0xa9ed10 = _0x5ceb3d['getUint32'](), _0x476fb8 = new Float32Array(_0x4a6563['slice'](_0x5be8a9 + _0x499291, _0x5be8a9 + _0x499291 + _0xa9ed10)), _0x36a2e3 = _0x476fb8['length'], _0x153819 = _0x46b6e7[_0x5ea939(0x1020)] = new ArrayBuffer(0x4 * _0x36a2e3);
            for (_0x46b6e7[_0x5ea939(0xf01)] = [], _0x46b6e7[_0x5ea939(0xf72)] = 0x0 != _0x36a2e3 ? _0x588bb2[_0x5ea939(0xf9f)] : _0x588bb2['MESH_INSTANCEBUFFER_TYPE_NORMAL'], _0x46b6e7[_0x5ea939(0x625)](_0x46b6e7['_instanceBufferStateType']), _0x178ec3 = 0x0; _0x178ec3 < _0x36a2e3; _0x178ec3 += 0x10) {
                var _0x461eb8 = new _0x6b4d98(_0x476fb8[_0x178ec3 + 0x0], _0x476fb8[_0x178ec3 + 0x1], _0x476fb8[_0x178ec3 + 0x2], _0x476fb8[_0x178ec3 + 0x3], _0x476fb8[_0x178ec3 + 0x4], _0x476fb8[_0x178ec3 + 0x5], _0x476fb8[_0x178ec3 + 0x6], _0x476fb8[_0x178ec3 + 0x7], _0x476fb8[_0x178ec3 + 0x8], _0x476fb8[_0x178ec3 + 0x9], _0x476fb8[_0x178ec3 + 0xa], _0x476fb8[_0x178ec3 + 0xb], _0x476fb8[_0x178ec3 + 0xc], _0x476fb8[_0x178ec3 + 0xd], _0x476fb8[_0x178ec3 + 0xe], _0x476fb8[_0x178ec3 + 0xf], new Float32Array(_0x153819, 0x4 * _0x178ec3, 0x10));
                _0x46b6e7[_0x5ea939(0xf01)][_0x178ec3 / 0x10] = _0x461eb8;
            }
            return !0x0;
        }
        static [_0x6027f5(0x1021)]() {
            var _0x5c9d31 = _0x6027f5, _0x295e58 = _0x47de96[_0x5c9d31(0x1013)], _0x581175 = _0x295e58[_0x5c9d31(0x101a)](), _0x3901b5 = new _0x5e1dab(_0x47de96[_0x5c9d31(0x5d9)]);
            _0x295e58[_0x5c9d31(0x2bd)]();
            var _0x3bfc2e = _0x295e58[_0x5c9d31(0x2a6)](), _0xccf81b = _0x295e58['getUint32'](), _0x579a5f = _0x47de96[_0x5c9d31(0x5d9)]['_indexBuffer'];
            _0x3901b5[_0x5c9d31(0x629)] = _0x579a5f, _0x3901b5[_0x5c9d31(0xf68)](_0x3bfc2e, _0xccf81b);
            var _0xe11b88 = _0x47de96['_mesh'][_0x5c9d31(0x4f6)];
            _0x3901b5[_0x5c9d31(0x4f6)] = _0xe11b88;
            var _0x578e21 = _0x47de96[_0x5c9d31(0x2a4)][_0x5c9d31(0x2c8)], _0xb7b472 = _0x3901b5[_0x5c9d31(0xf66)], _0x1fa0e7 = _0x3901b5[_0x5c9d31(0xf67)], _0xa31736 = _0x3901b5[_0x5c9d31(0xefc)], _0x313edc = _0x295e58['getUint16']();
            _0xb7b472[_0x5c9d31(0x205)] = _0x313edc, _0x1fa0e7[_0x5c9d31(0x205)] = _0x313edc, _0xa31736[_0x5c9d31(0x205)] = _0x313edc;
            var _0x223a87 = _0x47de96['_mesh'][_0x5c9d31(0xefb)], _0x11c6f4 = _0x47de96[_0x5c9d31(0x5e6)][_0x5c9d31(0x205)];
            _0x223a87[_0x5c9d31(0x205)] = _0x47de96['_mesh'][_0x5c9d31(0xf01)]['length'];
            for (var _0x36cd25 = 0x0; _0x36cd25 < _0x313edc; _0x36cd25++) {
                _0xb7b472[_0x36cd25] = _0x295e58[_0x5c9d31(0x2a6)](), _0x1fa0e7[_0x36cd25] = _0x295e58['getUint32']();
                for (var _0x537471 = _0x295e58[_0x5c9d31(0x2a6)](), _0x50a506 = _0x295e58[_0x5c9d31(0x2a6)](), _0x1f6b28 = _0xa31736[_0x36cd25] = new Uint16Array(_0x581175['slice'](_0x578e21 + _0x537471, _0x578e21 + _0x537471 + _0x50a506)), _0x44dbf4 = 0x0, _0x430095 = _0x1f6b28[_0x5c9d31(0x205)]; _0x44dbf4 < _0x430095; _0x44dbf4++) {
                    var _0x56dc05 = _0x1f6b28[_0x44dbf4];
                    _0x223a87[_0x56dc05] || (_0x223a87[_0x56dc05] = new _0x28557f(_0x11c6f4, _0x36cd25, _0x44dbf4));
                }
            }
            return _0x47de96['_subMeshes'][_0x5c9d31(0x2ac)](_0x3901b5), !0x0;
        }
    }
    _0x47de96['_BLOCK'] = { 'count': 0x0 }, _0x47de96[_0x6027f5(0x2a4)] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x47de96[_0x6027f5(0x2af)] = [];
    class _0x188a34 {
        static ['_parse'](_0x2e2d58, _0x5395f6 = null, _0x3429d7 = null) {
            var _0x1bf9cf = _0x6027f5, _0x1d6fc1 = new _0x588bb2();
            return _0x188a34[_0x1bf9cf(0x1022)](_0x2e2d58, _0x1d6fc1, _0x1d6fc1[_0x1bf9cf(0x5e6)]), _0x1d6fc1;
        }
        static [_0x6027f5(0x1022)](_0x1cde2c, _0x1e8536, _0x2aa060) {
            var _0x1a891f = _0x6027f5, _0x295dbf = new _0x387b86['Byte'](_0x1cde2c);
            _0x295dbf[_0x1a891f(0x2ae)] = 0x0;
            var _0x5b2b32 = _0x295dbf[_0x1a891f(0x2b0)]();
            switch (_0x5b2b32) {
            case 'LAYAMODEL:0301':
            case 'LAYAMODEL:0400':
            case _0x1a891f(0x1018):
                _0x309b4e[_0x1a891f(0x2b1)](_0x295dbf, _0x5b2b32, _0x1e8536, _0x2aa060);
                break;
            case _0x1a891f(0x101b):
            case _0x1a891f(0x101d):
            case _0x1a891f(0x101c):
            case _0x1a891f(0x101e):
                _0x47de96[_0x1a891f(0x2b1)](_0x295dbf, _0x5b2b32, _0x1e8536, _0x2aa060);
                break;
            default:
                throw new Error(_0x1a891f(0x1023));
            }
            _0x1e8536[_0x1a891f(0xf81)](_0x2aa060), 'LAYAMODEL:0501' != _0x5b2b32 && _0x1a891f(0x101e) != _0x5b2b32 && _0x1e8536[_0x1a891f(0xfa1)]();
        }
    }
    var _0x4203e6;
    class _0x577d6a extends _0xe2444c {
        constructor() {
            var _0x3a4f4c = _0x6027f5;
            super(), this['_exposure'] = 0x1, this[_0x3a4f4c(0x1024)] = _0x387b86[_0x3a4f4c(0xae6)][_0x3a4f4c(0xba3)], this[_0x3a4f4c(0x1025)] = new _0x5b8e4e(0x1, 0x0, 0x0, 0x1), this[_0x3a4f4c(0x6a9)](_0x3a4f4c(0x1026));
            var _0x12ccaa = this['_shaderValues'];
            _0x12ccaa[_0x3a4f4c(0x4a8)](_0x577d6a[_0x3a4f4c(0x726)], new _0x5b8e4e(0.5, 0.5, 0.5, 0.5)), _0x12ccaa[_0x3a4f4c(0x4a3)](_0x577d6a[_0x3a4f4c(0xc9e)], 0x0), _0x12ccaa[_0x3a4f4c(0x4a8)](_0x577d6a[_0x3a4f4c(0x1027)], this[_0x3a4f4c(0x1025)]);
        }
        static [_0x6027f5(0x230)]() {
            var _0x194f3c = _0x6027f5, _0x1d2304 = { 'a_Position': _0x73b54a['MESH_POSITION0'] }, _0x5cb4a3 = {
                    'u_TintColor': _0x3a9f31[_0x194f3c(0x541)],
                    'u_TextureHDRParams': _0x3a9f31[_0x194f3c(0x541)],
                    'u_Rotation': _0x3a9f31['PERIOD_MATERIAL'],
                    'u_Texture': _0x3a9f31[_0x194f3c(0x541)],
                    'u_ViewProjection': _0x3a9f31[_0x194f3c(0x7a6)]
                }, _0x5d3498 = _0x3a9f31[_0x194f3c(0x207)]('SkyPanoramic'), _0x19c5d2 = new _0x8750c3(_0x1d2304, _0x5cb4a3);
            _0x5d3498[_0x194f3c(0x534)](_0x19c5d2), _0x19c5d2[_0x194f3c(0xc7d)](_0x194f3c(0x1028), _0x194f3c(0x1029));
        }
        get [_0x6027f5(0xc9b)]() {
            var _0x320103 = _0x6027f5;
            return this[_0x320103(0x4e2)][_0x320103(0x4a7)](_0x577d6a['TINTCOLOR']);
        }
        set [_0x6027f5(0xc9b)](_0x3360b7) {
            var _0x16eda0 = _0x6027f5;
            this[_0x16eda0(0x4e2)][_0x16eda0(0x4a8)](_0x577d6a[_0x16eda0(0x726)], _0x3360b7);
        }
        get [_0x6027f5(0xc9c)]() {
            var _0x773e1c = _0x6027f5;
            return this[_0x773e1c(0x102a)];
        }
        set [_0x6027f5(0xc9c)](_0x487bdc) {
            var _0x1e87eb = _0x6027f5;
            this['_exposure'] !== _0x487bdc && (this[_0x1e87eb(0x102a)] = _0x487bdc, this[_0x1e87eb(0x1024)] == _0x387b86['TextureDecodeFormat'][_0x1e87eb(0xaeb)] ? this[_0x1e87eb(0x1025)]['x'] = _0x487bdc * _0x387b86[_0x1e87eb(0x3e3)][_0x1e87eb(0x102b)] : this['_textureHDRParams']['x'] = _0x487bdc);
        }
        get [_0x6027f5(0x5a4)]() {
            var _0x517af5 = _0x6027f5;
            return this[_0x517af5(0x4e2)][_0x517af5(0x4a2)](_0x577d6a[_0x517af5(0xc9e)]);
        }
        set [_0x6027f5(0x5a4)](_0x32ae66) {
            var _0x51b302 = _0x6027f5;
            this[_0x51b302(0x4e2)][_0x51b302(0x4a3)](_0x577d6a[_0x51b302(0xc9e)], _0x32ae66);
        }
        get [_0x6027f5(0x102c)]() {
            var _0x18e67d = _0x6027f5;
            return this[_0x18e67d(0x4e2)]['getTexture'](_0x577d6a[_0x18e67d(0x102d)]);
        }
        set [_0x6027f5(0x102c)](_0x2c133a) {
            var _0x39b588 = _0x6027f5;
            this[_0x39b588(0x4e2)][_0x39b588(0x4ac)](_0x577d6a[_0x39b588(0x102d)], _0x2c133a);
        }
        get ['panoramicTextureDecodeFormat']() {
            var _0x1cbeb5 = _0x6027f5;
            return this[_0x1cbeb5(0x1024)];
        }
        set [_0x6027f5(0x102e)](_0x3de3ad) {
            var _0xe8c74b = _0x6027f5;
            this[_0xe8c74b(0x1024)] !== _0x3de3ad && (this[_0xe8c74b(0x1024)] = _0x3de3ad, _0x3de3ad == _0x387b86[_0xe8c74b(0xae6)][_0xe8c74b(0xaeb)] ? this[_0xe8c74b(0x1025)]['x'] = this[_0xe8c74b(0x102a)] * _0x387b86[_0xe8c74b(0x3e3)][_0xe8c74b(0x102b)] : this[_0xe8c74b(0x1025)]['x'] = this['_exposure']);
        }
    }
    _0x577d6a[_0x6027f5(0x726)] = _0x3a9f31[_0x6027f5(0x553)]('u_TintColor'), _0x577d6a[_0x6027f5(0xc9d)] = _0x3a9f31['propertyNameToID'](_0x6027f5(0xcb8)), _0x577d6a[_0x6027f5(0xc9e)] = _0x3a9f31['propertyNameToID']('u_Rotation'), _0x577d6a[_0x6027f5(0x102d)] = _0x3a9f31['propertyNameToID']('u_Texture'), _0x577d6a[_0x6027f5(0x1027)] = _0x3a9f31[_0x6027f5(0x553)]('u_TextureHDRParams');
    class _0x2e0676 {
        constructor() {
        }
        static get [_0x6027f5(0x102f)]() {
            return _0x567245['_enablePhysics'];
        }
        static ['_cancelLoadByUrl'](_0x2ab823) {
            var _0x15a645 = _0x6027f5;
            _0x387b86[_0x15a645(0x68d)][_0x15a645(0x329)][_0x15a645(0x1030)](_0x2ab823), _0x2e0676[_0x15a645(0x1031)][_0x15a645(0x1030)](_0x2ab823), _0x2e0676[_0x15a645(0x1032)][_0x15a645(0x1030)](_0x2ab823), _0x2e0676[_0x15a645(0x1033)][_0x15a645(0x1030)](_0x2ab823), _0x2e0676[_0x15a645(0x1034)][_0x15a645(0x1030)](_0x2ab823);
        }
        static [_0x6027f5(0x1035)](_0x4683d1, _0x3f30e3) {
            var _0x99273e = _0x6027f5;
            _0x387b86[_0x99273e(0xc6a)][_0x99273e(0x1036)](_0x4683d1, _0x3f30e3), _0x50b403[_0x99273e(0x9a3)] = _0x4683d1, _0x50b403[_0x99273e(0x565)] = _0x3f30e3;
        }
        static [_0x6027f5(0x230)](_0x5b5c4e, _0x3365ae, _0x5999ee) {
            var _0x49bf22 = _0x6027f5;
            if (_0x387b86[_0x49bf22(0x1037)][_0x49bf22(0x260)] = _0x5999ee[_0x49bf22(0x260)], _0x387b86['Config'][_0x49bf22(0x261)] = _0x5999ee['isAlpha'], _0x387b86[_0x49bf22(0x1037)]['premultipliedAlpha'] = _0x5999ee['premultipliedAlpha'], _0x387b86[_0x49bf22(0x1037)][_0x49bf22(0x244)] = _0x5999ee['isStencil'], _0x387b86[_0x49bf22(0xc6a)]['enable']()) {
                _0x387b86['RunDriver'][_0x49bf22(0x1038)] = _0x2e0676['_changeWebGLSize'], _0x387b86[_0x49bf22(0x31a)][_0x49bf22(0x1039)] = !0x0, _0x387b86[_0x49bf22(0x68d)][_0x49bf22(0x94b)](_0x5b5c4e, _0x3365ae), _0x387b86[_0x49bf22(0x31a)][_0x49bf22(0x65c)] || (_0x387b86[_0x49bf22(0x303)]['instance'] = _0x387b86[_0x49bf22(0x40a)][_0x49bf22(0x103a)], _0x387b86[_0x49bf22(0x303)]['instance']['createCommandEncoder'] = function (_0x58b58d = 0x80, _0x5b6b7c = 0x40, _0x426146 = !0x1) {
                    return new _0x387b86['CommandEncoder'](this, _0x58b58d, _0x5b6b7c, _0x426146);
                }), _0x5999ee[_0x49bf22(0x9bb)] = _0x5999ee[_0x49bf22(0x245)] && _0x387b86['SystemUtils']['supportTextureFormat'](_0x387b86[_0x49bf22(0x2d9)]['R32G32B32A32']), _0x525782['Shader3D'] = _0x3a9f31, _0x525782[_0x49bf22(0x225)] = _0x9c4b57, _0x525782[_0x49bf22(0xab0)] = _0x34c00f, _0x525782[_0x49bf22(0xab3)] = _0x4474ea, _0x525782[_0x49bf22(0x226)] = _0xc8c0ff, _0x525782[_0x49bf22(0x227)] = _0x2e0676, _0x525782[_0x49bf22(0x228)] = _0x6b4d98, _0x525782['Physics3D'] = _0x567245, _0x525782[_0x49bf22(0xb5b)] = _0x18be32[_0x49bf22(0xb5b)], _0x525782['Camera'] = _0x55cd9b, _0x525782[_0x49bf22(0x22b)] = _0x3f18cf, _0x525782[_0x49bf22(0x22a)] = _0x50feff, _0x525782[_0x49bf22(0x22d)] = _0x2057f1, _0x2e0676[_0x49bf22(0x103b)](), _0x5999ee[_0x49bf22(0x24c)] && _0x567245['__cannoninit__'](), _0x567245['__bulletinit__'](), _0x53b5cc['__init__'](), _0x73b54a['__init__'](), _0x11443b[_0x49bf22(0x230)](), _0x107170[_0x49bf22(0x230)](), _0x3e85a5[_0x49bf22(0x230)](), _0x2113d8[_0x49bf22(0x230)](), _0x14d998[_0x49bf22(0x230)](), _0x551dd1['__init__'](), _0x4da149[_0x49bf22(0x230)](), _0xc8c0ff[_0x49bf22(0x230)](), _0x5d0120[_0x49bf22(0x230)](), _0x3c155f[_0x49bf22(0x94b)](), _0x5d5c8f[_0x49bf22(0x230)](), _0x40d85b[_0x49bf22(0x230)](), _0xe57706[_0x49bf22(0x230)](), _0x577d6a[_0x49bf22(0x230)](), _0x588bb2[_0x49bf22(0x230)](), _0x3955c2[_0x49bf22(0x230)](), _0x44a154['__init__'](), _0x221092[_0x49bf22(0x230)](), _0x8ce47b['__init__'](), _0x45dde3[_0x49bf22(0x230)](), _0x1a32b6[_0x49bf22(0x230)](), _0x47d536[_0x49bf22(0x230)](), _0x8b289e[_0x49bf22(0x230)](), _0x1f6982['__init__'](), _0x9c4b57[_0x49bf22(0x230)](), _0x34c00f[_0x49bf22(0x230)](), _0xe2444c[_0x49bf22(0x6b5)](), _0x1ed784[_0x49bf22(0x6b5)](), _0x3c2eb1[_0x49bf22(0x6b5)](), _0xdfb891[_0x49bf22(0x6b5)](), _0x34269a[_0x49bf22(0x6b5)](), _0x52600c[_0x49bf22(0x6b5)](), _0x50b2a3[_0x49bf22(0x6b5)](), _0x9bc6bd[_0x49bf22(0x6b5)](), _0x3a9279['__initDefine__'](), _0x12f0c4[_0x49bf22(0x6b5)](), _0x5b1b35['__initDefine__'](), _0x4842a3[_0x49bf22(0x6b5)](), _0x47a986['__init__'](), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x103d), _0x577d6a), _0x387b86['ClassUtils'][_0x49bf22(0x103c)](_0x49bf22(0x103e), _0x50b2a3), _0x387b86[_0x49bf22(0x1005)]['regClass']('Laya.UnlitMaterial', _0x34269a), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x103f), _0x3c2eb1), _0x387b86[_0x49bf22(0x1005)]['regClass'](_0x49bf22(0x1040), _0xdfb891), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x1041), _0x40d85b), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x1042), _0xe57706), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x1043), _0x4842a3), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x1044), _0x9bc6bd), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x1045), _0x12f0c4), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)]('Laya.ShurikenParticleMaterial', _0x3a9279), _0x387b86['ClassUtils']['regClass'](_0x49bf22(0x1046), _0x52600c), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)]('Laya.PhysicsCollider', _0x387b86['PhysicsCollider']), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)]('Laya.Rigidbody3D', _0x387b86[_0x49bf22(0x1047)]), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x1048), _0x387b86[_0x49bf22(0x237)]), _0x387b86['ClassUtils'][_0x49bf22(0x103c)](_0x49bf22(0x1049), _0x493c7d), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x104a), _0x387b86[_0x49bf22(0x104a)]), _0x387b86['ClassUtils'][_0x49bf22(0x103c)](_0x49bf22(0x237), _0x387b86[_0x49bf22(0x237)]), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x104b), _0x493c7d), _0x387b86['ClassUtils'][_0x49bf22(0x103c)](_0x49bf22(0x1047), _0x387b86['Rigidbody3D']), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x104c), _0x387b86[_0x49bf22(0x104c)]), _0x387b86[_0x49bf22(0x1005)][_0x49bf22(0x103c)](_0x49bf22(0x104d), _0x387b86[_0x49bf22(0x104d)]), _0x5b1b35[_0x49bf22(0xb27)] = new _0x5b1b35(), _0x3c2eb1[_0x49bf22(0xb27)] = new _0x3c2eb1(), _0x50b2a3[_0x49bf22(0xb27)] = new _0x50b2a3(), _0x34269a['defaultMaterial'] = new _0x34269a(), _0x3a9279[_0x49bf22(0xb27)] = new _0x3a9279(), _0x52600c[_0x49bf22(0xb27)] = new _0x52600c(), _0xdfb891[_0x49bf22(0xb27)] = new _0xdfb891(), _0x4842a3[_0x49bf22(0xb27)] = new _0x4842a3(), _0x9bc6bd[_0x49bf22(0xb27)] = new _0x9bc6bd(), _0x5b1b35['defaultMaterial'][_0x49bf22(0x31d)] = !0x0, _0x3c2eb1[_0x49bf22(0xb27)][_0x49bf22(0x31d)] = !0x0, _0x50b2a3[_0x49bf22(0xb27)][_0x49bf22(0x31d)] = !0x0, _0x34269a['defaultMaterial'][_0x49bf22(0x31d)] = !0x0, _0x3a9279[_0x49bf22(0xb27)][_0x49bf22(0x31d)] = !0x0, _0x52600c[_0x49bf22(0xb27)][_0x49bf22(0x31d)] = !0x0, _0xdfb891[_0x49bf22(0xb27)][_0x49bf22(0x31d)] = !0x0, _0x4842a3['defaultMaterial'][_0x49bf22(0x31d)] = !0x0, _0x9bc6bd[_0x49bf22(0xb27)]['lock'] = !0x0, _0x387b86[_0x49bf22(0x2de)][_0x49bf22(0x230)](), _0x2fe14f['__init__'](), _0x5ee7a8[_0x49bf22(0x230)](), _0x224a66[_0x49bf22(0x230)](), _0x39fe36['__init__'](), _0x22efc5[_0x49bf22(0x230)](), _0x1b438f[_0x49bf22(0x230)](), _0x387b86[_0x49bf22(0x2d1)][_0x49bf22(0x230)]();
                var _0x578643 = _0x387b86[_0x49bf22(0xa1b)][_0x49bf22(0xa1c)];
                _0x578643['lh'] = [
                    _0x2e0676[_0x49bf22(0xc25)],
                    _0x565b79['_parse']
                ], _0x578643['ls'] = [
                    _0x2e0676[_0x49bf22(0xc25)],
                    _0x565b79[_0x49bf22(0x100e)]
                ], _0x578643['lm'] = [
                    _0x2e0676[_0x49bf22(0xf76)],
                    _0x188a34['_parse']
                ], _0x578643['lmat'] = [
                    _0x2e0676['MATERIAL'],
                    _0xe2444c[_0x49bf22(0x67c)]
                ], _0x578643[_0x49bf22(0x104e)] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86['Texture2D']['_parse']
                ], _0x578643[_0x49bf22(0x1050)] = [
                    _0x2e0676['TEXTURE2D'],
                    _0x387b86[_0x49bf22(0x2de)][_0x49bf22(0x67c)]
                ], _0x578643['bmp'] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86[_0x49bf22(0x2de)][_0x49bf22(0x67c)]
                ], _0x578643[_0x49bf22(0x1051)] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86[_0x49bf22(0x2de)][_0x49bf22(0x67c)]
                ], _0x578643[_0x49bf22(0x1052)] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86[_0x49bf22(0x2de)][_0x49bf22(0x67c)]
                ], _0x578643[_0x49bf22(0x1053)] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86['Texture2D'][_0x49bf22(0x67c)]
                ], _0x578643['ktx'] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86[_0x49bf22(0x2de)]['_parse']
                ], _0x578643[_0x49bf22(0x1054)] = [
                    _0x2e0676['TEXTURE2D'],
                    _0x387b86['Texture2D'][_0x49bf22(0x67c)]
                ], _0x578643[_0x49bf22(0x1055)] = [
                    _0x2e0676[_0x49bf22(0x32b)],
                    _0x1120e5[_0x49bf22(0x67c)]
                ], _0x578643['lav'] = [
                    _0x2e0676[_0x49bf22(0x67f)],
                    _0x43545b[_0x49bf22(0x67c)]
                ], _0x578643[_0x49bf22(0x1056)] = [
                    _0x2e0676['TEXTURECUBE'],
                    _0x2fe14f['_parse']
                ], _0x578643[_0x49bf22(0x1057)] = [
                    _0x2e0676['TEXTURECUBEBIN'],
                    _0x2fe14f[_0x49bf22(0x1058)]
                ], _0x578643[_0x49bf22(0x1059)] = [
                    _0x2e0676['TEXTURECUBEBIN'],
                    _0x2fe14f[_0x49bf22(0x1058)]
                ], _0x578643[_0x49bf22(0x105a)] = [
                    _0x2e0676[_0x49bf22(0x104f)],
                    _0x387b86[_0x49bf22(0x2de)][_0x49bf22(0x105b)]
                ];
                var _0x54d252 = _0x387b86['Loader'][_0x49bf22(0x105c)];
                _0x54d252[_0x2e0676['HIERARCHY']] = _0x2e0676[_0x49bf22(0x105d)], _0x54d252[_0x2e0676['MESH']] = _0x2e0676[_0x49bf22(0x105e)], _0x54d252[_0x2e0676['MATERIAL']] = _0x2e0676[_0x49bf22(0x105f)], _0x54d252[_0x2e0676['TEXTURECUBE']] = _0x2e0676[_0x49bf22(0x1060)], _0x54d252[_0x2e0676[_0x49bf22(0xa34)]] = _0x2e0676[_0x49bf22(0x1061)], _0x54d252[_0x2e0676['TEXTURE2D']] = _0x2e0676[_0x49bf22(0x1062)], _0x54d252[_0x2e0676[_0x49bf22(0x32b)]] = _0x2e0676['_loadAnimationClip'], _0x54d252[_0x2e0676[_0x49bf22(0x67f)]] = _0x2e0676[_0x49bf22(0x1063)], _0x54d252[_0x2e0676['SIMPLEANIMATORBIN']] = _0x2e0676['_loadSimpleAnimator'], _0x2e0676[_0x49bf22(0x1031)]['on'](_0x387b86[_0x49bf22(0x5b1)]['ERROR'], null, _0x2e0676[_0x49bf22(0x1064)]), _0x2e0676['_innerSecondLevelLoaderManager']['on'](_0x387b86[_0x49bf22(0x5b1)][_0x49bf22(0x1065)], null, _0x2e0676[_0x49bf22(0x1064)]), _0x2e0676[_0x49bf22(0x1033)]['on'](_0x387b86[_0x49bf22(0x5b1)][_0x49bf22(0x1065)], null, _0x2e0676['_eventLoadManagerError']), _0x2e0676['_innerFourthLevelLoaderManager']['on'](_0x387b86['Event'][_0x49bf22(0x1065)], null, _0x2e0676[_0x49bf22(0x1064)]);
            } else
                alert('Laya3D\x20init\x20error,must\x20support\x20webGL!');
        }
        static [_0x6027f5(0x103b)]() {
            var _0x2c3904 = _0x6027f5, _0x973509 = _0x3985fd, _0x236de2 = _0x230f9c;
            _0x387b86['Render'][_0x2c3904(0x65c)] && (_0x973509['prototype'][_0x2c3904(0x499)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x1067)], _0x973509['prototype'][_0x2c3904(0x49f)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4c6)], _0x973509['prototype'][_0x2c3904(0x49e)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4c5)], _0x973509['prototype'][_0x2c3904(0x4a1)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4c4)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4a0)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4c3)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4a3)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4c9)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4a2)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4c7)], _0x973509['prototype']['setVector'] = _0x973509[_0x2c3904(0x1066)]['setVectorForNative'], _0x973509[_0x2c3904(0x1066)]['getVector'] = _0x973509[_0x2c3904(0x1066)]['getVectorForNative'], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4a5)] = _0x973509[_0x2c3904(0x1066)]['setVector2ForNative'], _0x973509['prototype'][_0x2c3904(0x4a4)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x1068)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x57a)] = _0x973509['prototype']['setVector3ForNative'], _0x973509[_0x2c3904(0x1066)]['getVector3'] = _0x973509['prototype'][_0x2c3904(0x1069)], _0x973509['prototype'][_0x2c3904(0x4a9)] = _0x973509['prototype'][_0x2c3904(0x4d0)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x106a)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x106b)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4aa)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4cb)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x106c)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4ca)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4ab)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x106d)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x106e)] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4d1)], _0x973509['prototype'][_0x2c3904(0x4ac)] = _0x973509[_0x2c3904(0x1066)]['setTextureForNative'], _0x973509['prototype']['getTexture'] = _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x106f)], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x4b1)] = _0x973509[_0x2c3904(0x1066)]['setAttributeForNative'], _0x973509[_0x2c3904(0x1066)]['getAttribute'] = _0x973509[_0x2c3904(0x1066)]['getAttributeForNative'], _0x973509['prototype'][_0x2c3904(0x1fc)] = _0x973509[_0x2c3904(0x1066)]['cloneToForNative'], _0x973509[_0x2c3904(0x1066)][_0x2c3904(0x319)] = _0x973509[_0x2c3904(0x1066)]['getDataForNative'], _0x236de2['prototype']['_uniformMatrix2fv'] = _0x236de2['prototype'][_0x2c3904(0x7fb)], _0x236de2['prototype'][_0x2c3904(0x7c0)] = _0x236de2['prototype']['_uniformMatrix3fvForNative'], _0x236de2['prototype']['_uniformMatrix4fv'] = _0x236de2[_0x2c3904(0x1066)][_0x2c3904(0x7fe)], _0x387b86[_0x2c3904(0x7ea)]['uploadShaderUniforms'] = _0x387b86[_0x2c3904(0x7ea)][_0x2c3904(0x1070)]);
        }
        static [_0x6027f5(0x1071)](_0x5d7b8c, _0x169528) {
            var _0x26f5c2 = _0x6027f5, _0xddc1c0;
            if (_0xddc1c0 = _0x5d7b8c + _0x169528, '.' === _0x169528[_0x26f5c2(0xc4d)](0x0)) {
                for (var _0x41b169 = _0xddc1c0[_0x26f5c2(0x609)]('/'), _0x570b7d = 0x0, _0x4c5385 = _0x41b169[_0x26f5c2(0x205)]; _0x570b7d < _0x4c5385; _0x570b7d++)
                    if ('..' == _0x41b169[_0x570b7d]) {
                        var _0x181590 = _0x570b7d - 0x1;
                        _0x181590 > 0x0 && '..' !== _0x41b169[_0x181590] && (_0x41b169[_0x26f5c2(0x33a)](_0x181590, 0x2), _0x570b7d -= 0x2);
                    }
                _0xddc1c0 = _0x41b169[_0x26f5c2(0x26d)]('/');
            }
            return _0xddc1c0;
        }
        static [_0x6027f5(0x1072)](_0xaef8b, _0x4c2f54 = null, _0x527817 = null) {
            var _0x446ed3 = _0x6027f5;
            if (_0x527817)
                for (var _0x3d8d03 = 0x0, _0x402691 = _0x527817['length']; _0x3d8d03 < _0x402691; _0x3d8d03++) {
                    var _0x1abe45 = _0x387b86['Loader'][_0x446ed3(0x3b7)](_0x527817[_0x3d8d03]);
                    _0x1abe45 && _0x1abe45['_removeReference']();
                }
            _0xaef8b['endLoad'](_0x4c2f54);
        }
        static [_0x6027f5(0x1064)](_0x243cd9) {
            var _0x5278ab = _0x6027f5;
            _0x387b86[_0x5278ab(0x68d)]['loader'][_0x5278ab(0x5b0)](_0x387b86[_0x5278ab(0x5b1)][_0x5278ab(0x1065)], _0x243cd9);
        }
        static [_0x6027f5(0x1073)](_0x4d3dc3, _0x38c489, _0x508e8b, _0x109d86, _0x43e1cb, _0x5418b0, _0x4f4e63 = null, _0x427f30 = null) {
            var _0x2fc3c6 = _0x6027f5, _0x383ee0 = _0x2e0676[_0x2fc3c6(0x1071)](_0x109d86, _0x43e1cb);
            return _0x508e8b && (_0x383ee0 += _0x508e8b), _0x4d3dc3[_0x2fc3c6(0x2ac)]({
                'url': _0x383ee0,
                'type': _0x5418b0,
                'constructParams': _0x4f4e63,
                'propertyParams': _0x427f30
            }), _0x38c489[_0x2fc3c6(0x2ac)](_0x383ee0), _0x383ee0;
        }
        static [_0x6027f5(0x1074)](_0x164227, _0x5b95de, _0x1fd15f, _0x3cd373, _0x267a9d, _0x4be14c, _0xafcca5, _0x12a118) {
            var _0x340217 = _0x6027f5, _0x28a7fe, _0x40f4ba, _0x2fc2b = _0x164227[_0x340217(0x681)];
            switch (_0x164227[_0x340217(0x2cc)]) {
            case _0x340217(0x225):
                var _0x2d4f47 = _0x2fc2b[_0x340217(0xb15)];
                for (_0x28a7fe = 0x0, _0x40f4ba = _0x2d4f47[_0x340217(0x205)]; _0x28a7fe < _0x40f4ba; _0x28a7fe++) {
                    var _0x28402e = _0x2d4f47[_0x28a7fe];
                    if (_0x28402e[_0x340217(0x3b8)])
                        _0x28402e['path'] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x28402e[_0x340217(0x3b8)], _0x2e0676[_0x340217(0x104f)], _0x28402e[_0x340217(0x1075)], _0x28402e[_0x340217(0x1076)]);
                    else {
                        var _0x26c411 = _0x28402e[_0x340217(0x46f)];
                        _0x26c411[_0x340217(0x3b8)] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x26c411['path'], _0x2e0676['TEXTURE2D'], _0x26c411[_0x340217(0x1075)], _0x26c411[_0x340217(0x1076)]);
                        var _0x3ad728 = _0x28402e[_0x340217(0x87b)];
                        _0x3ad728 && (_0x3ad728[_0x340217(0x3b8)] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x3ad728[_0x340217(0x3b8)], _0x2e0676[_0x340217(0x104f)], _0x3ad728[_0x340217(0x1075)], _0x3ad728[_0x340217(0x1076)]));
                    }
                }
                var _0x148523 = _0x2fc2b[_0x340217(0xaed)];
                _0x148523 && (_0x2fc2b[_0x340217(0xbaf)] = _0x2e0676[_0x340217(0x1073)](_0x3cd373, _0x4be14c, _0xafcca5, _0x12a118, _0x148523, _0x2e0676['TEXTURECUBE']));
                var _0x1dbae4 = _0x2fc2b[_0x340217(0xbaf)];
                if (_0x1dbae4 && (_0x2fc2b['reflection'] = _0x2e0676['_addHierarchyInnerUrls'](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x1dbae4, _0x2e0676[_0x340217(0xa34)])), _0x2fc2b['sky']) {
                    var _0x15cc67 = _0x2fc2b[_0x340217(0x1077)][_0x340217(0x8d5)];
                    _0x15cc67 && (_0x15cc67[_0x340217(0x3b8)] = _0x2e0676[_0x340217(0x1073)](_0x1fd15f, _0x4be14c, _0xafcca5, _0x12a118, _0x15cc67[_0x340217(0x3b8)], _0x2e0676[_0x340217(0x6ac)]));
                }
                break;
            case 'Camera':
                var _0xce153e = _0x2fc2b[_0x340217(0x8f9)];
                _0xce153e && (_0xce153e[_0x340217(0x3b8)] = _0x2e0676[_0x340217(0x1073)](_0x1fd15f, _0x4be14c, _0xafcca5, _0x12a118, _0xce153e['path'], _0x2e0676[_0x340217(0x6ac)]));
                break;
            case _0x340217(0x1010):
            case _0x340217(0xffe):
            case _0x340217(0xfff):
            case _0x340217(0x1000):
                var _0x14db38 = _0x2fc2b['meshPath'];
                _0x14db38 && (_0x2fc2b[_0x340217(0xcec)] = _0x2e0676['_addHierarchyInnerUrls'](_0x5b95de, _0x4be14c, _0xafcca5, _0x12a118, _0x14db38, _0x2e0676['MESH']));
                var _0x2bf9ee = _0x2fc2b[_0x340217(0xcee)];
                if (_0x2bf9ee) {
                    for (_0x28a7fe = 0x0, _0x40f4ba = _0x2bf9ee[_0x340217(0x205)]; _0x28a7fe < _0x40f4ba; _0x28a7fe++)
                        _0x2bf9ee[_0x28a7fe][_0x340217(0x3b8)] = _0x2e0676[_0x340217(0x1073)](_0x1fd15f, _0x4be14c, _0xafcca5, _0x12a118, _0x2bf9ee[_0x28a7fe][_0x340217(0x3b8)], _0x2e0676[_0x340217(0x6ac)]);
                }
                _0x340217(0x1000) == _0x164227['type'] && _0x2fc2b[_0x340217(0xffa)] && (_0x2fc2b[_0x340217(0xffa)] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x2fc2b['animatorTexture'], _0x2e0676[_0x340217(0x1078)]));
                break;
            case _0x340217(0x1001):
                if (_0x2fc2b[_0x340217(0xed0)]) {
                    var _0x51fc45 = _0x2fc2b['renderer'][_0x340217(0xecd)], _0x151144 = _0x51fc45['mesh'], _0x346288 = _0x51fc45['material'];
                    _0x151144 && (_0x51fc45[_0x340217(0x8d6)] = _0x2e0676[_0x340217(0x1073)](_0x5b95de, _0x4be14c, _0xafcca5, _0x12a118, _0x151144, _0x2e0676['MESH'])), _0x346288 && (_0x51fc45[_0x340217(0x8d5)] = _0x2e0676[_0x340217(0x1073)](_0x1fd15f, _0x4be14c, _0xafcca5, _0x12a118, _0x346288, _0x2e0676[_0x340217(0x6ac)]));
                } else {
                    var _0x9714a3 = _0x2fc2b[_0x340217(0xcec)];
                    _0x9714a3 && (_0x2fc2b[_0x340217(0xcec)] = _0x2e0676[_0x340217(0x1073)](_0x5b95de, _0x4be14c, _0xafcca5, _0x12a118, _0x9714a3, _0x2e0676[_0x340217(0xf76)])), _0x2fc2b[_0x340217(0x8d5)]['path'] = _0x2e0676[_0x340217(0x1073)](_0x1fd15f, _0x4be14c, _0xafcca5, _0x12a118, _0x2fc2b['material'][_0x340217(0x3b8)], _0x2e0676[_0x340217(0x6ac)]);
                }
                break;
            case _0x340217(0x1079):
                _0x2e0676['_addHierarchyInnerUrls'](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x2fc2b[_0x340217(0x107a)], _0x2e0676['TERRAINRES']);
                break;
            case _0x340217(0x1002):
                var _0x154d76 = _0x2fc2b[_0x340217(0xbaf)];
                _0x154d76 && (_0x2fc2b[_0x340217(0xbaf)] = _0x2e0676['_addHierarchyInnerUrls'](_0x5b95de, _0x4be14c, _0xafcca5, _0x12a118, _0x154d76, _0x2e0676['TEXTURECUBEBIN']));
            }
            var _0x13d9a9 = _0x164227[_0x340217(0x1012)];
            if (_0x13d9a9)
                for (var _0x97b145 = 0x0, _0x5c67a1 = _0x13d9a9['length']; _0x97b145 < _0x5c67a1; _0x97b145++) {
                    var _0x1d588c = _0x13d9a9[_0x97b145];
                    switch (_0x1d588c['type']) {
                    case 'Animator':
                        _0x1d588c[_0x340217(0x107b)];
                        var _0x51565c = _0x1d588c[_0x340217(0x3b6)];
                        _0x51565c && (_0x51565c[_0x340217(0x3b8)] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x51565c['path'], _0x2e0676[_0x340217(0x67f)]));
                        var _0x4d4573 = _0x1d588c[_0x340217(0x107c)];
                        if (_0x4d4573) {
                            for (_0x28a7fe = 0x0, _0x40f4ba = _0x4d4573[_0x340217(0x205)]; _0x28a7fe < _0x40f4ba; _0x28a7fe++)
                                _0x4d4573[_0x28a7fe] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x4d4573[_0x28a7fe], _0x2e0676[_0x340217(0x32b)]);
                        } else {
                            var _0x59b03e = _0x1d588c['layers'];
                            for (_0x28a7fe = 0x0; _0x28a7fe < _0x59b03e[_0x340217(0x205)]; _0x28a7fe++)
                                for (var _0x25b085 = _0x59b03e[_0x28a7fe][_0x340217(0x3bc)], _0x10e920 = 0x0, _0x4d24bd = _0x25b085[_0x340217(0x205)]; _0x10e920 < _0x4d24bd; _0x10e920++) {
                                    var _0x56b3b4 = _0x25b085[_0x10e920]['clipPath'];
                                    _0x56b3b4 && (_0x25b085[_0x10e920][_0x340217(0x107d)] = _0x2e0676[_0x340217(0x1073)](_0x267a9d, _0x4be14c, _0xafcca5, _0x12a118, _0x56b3b4, _0x2e0676[_0x340217(0x32b)]));
                                }
                        }
                        break;
                    case _0x340217(0x104a):
                    case 'Rigidbody3D':
                    case 'CharacterController':
                        var _0x480378 = _0x1d588c[_0x340217(0x107e)];
                        for (_0x28a7fe = 0x0; _0x28a7fe < _0x480378[_0x340217(0x205)]; _0x28a7fe++) {
                            var _0x5d7a59 = _0x480378[_0x28a7fe];
                            if (_0x340217(0x107f) === _0x5d7a59[_0x340217(0x2cc)])
                                (_0x151144 = _0x5d7a59[_0x340217(0x8d6)]) && (_0x5d7a59[_0x340217(0x8d6)] = _0x2e0676[_0x340217(0x1073)](_0x5b95de, _0x4be14c, _0xafcca5, _0x12a118, _0x151144, _0x2e0676[_0x340217(0xf76)]));
                        }
                    }
                }
            var _0x34bec6 = _0x164227[_0x340217(0x682)];
            for (_0x28a7fe = 0x0, _0x40f4ba = _0x34bec6[_0x340217(0x205)]; _0x28a7fe < _0x40f4ba; _0x28a7fe++)
                _0x2e0676[_0x340217(0x1074)](_0x34bec6[_0x28a7fe], _0x5b95de, _0x1fd15f, _0x3cd373, _0x267a9d, _0x4be14c, _0xafcca5, _0x12a118);
        }
        static [_0x6027f5(0x105d)](_0x465618) {
            var _0x593e1f = _0x6027f5;
            _0x465618[_0x593e1f(0x1080)] = _0x465618[_0x593e1f(0x2cc)], _0x465618['on'](_0x387b86[_0x593e1f(0x5b1)][_0x593e1f(0x1081)], null, _0x2e0676[_0x593e1f(0x1082)], [_0x465618]), _0x465618['load'](_0x465618['url'], _0x387b86[_0x593e1f(0x3bd)]['JSON'], !0x1, null, !0x0);
        }
        static [_0x6027f5(0x1082)](_0x13e2b6, _0x1e69f5) {
            var _0x2d54d4 = _0x6027f5, _0x5342ab = _0x13e2b6['url'], _0x3b82c2 = _0x3acd08[_0x2d54d4(0x1083)](_0x5342ab), _0x365194 = _0x387b86['URL'][_0x2d54d4(0x1084)](_0x5342ab), _0x34606f = [], _0x5a302c = [], _0x465b04 = [], _0x8ed818 = [], _0x1eb8b2 = [];
            _0x2e0676[_0x2d54d4(0x1074)](_0x1e69f5['data'], _0x34606f, _0x5a302c, _0x465b04, _0x8ed818, _0x1eb8b2, _0x3b82c2, _0x365194);
            var _0x2d618c = _0x34606f[_0x2d54d4(0x205)] + _0x5a302c['length'] + _0x8ed818[_0x2d54d4(0x205)], _0x3d29f6 = _0x2d618c + 0x1, _0x125c39 = 0x1 / _0x3d29f6;
            if (_0x2e0676[_0x2d54d4(0x1085)](_0x13e2b6, 0x0, _0x125c39, 0x1), _0x8ed818[_0x2d54d4(0x205)] > 0x0) {
                var _0x493404 = _0x2d618c / _0x3d29f6, _0x2fe7e1 = _0x387b86[_0x2d54d4(0x1086)][_0x2d54d4(0x32a)](null, _0x2e0676[_0x2d54d4(0x1085)], [
                        _0x13e2b6,
                        _0x125c39,
                        _0x493404
                    ], !0x1);
                _0x2e0676[_0x2d54d4(0x1034)][_0x2d54d4(0x3f8)](_0x8ed818, !0x1, _0x387b86[_0x2d54d4(0x1086)][_0x2d54d4(0x32a)](null, _0x2e0676[_0x2d54d4(0x1087)], [
                    _0x13e2b6,
                    _0x2fe7e1,
                    _0x1e69f5,
                    _0x1eb8b2,
                    _0x34606f,
                    _0x5a302c,
                    _0x465b04,
                    _0x125c39 + _0x493404 * _0x8ed818[_0x2d54d4(0x205)],
                    _0x493404
                ]), _0x2fe7e1, null, null, null, 0x1, !0x0);
            } else
                _0x2e0676[_0x2d54d4(0x1087)](_0x13e2b6, null, _0x1e69f5, _0x1eb8b2, _0x34606f, _0x5a302c, _0x465b04, _0x125c39, _0x493404);
        }
        static ['_onHierarchyInnerForthLevResouLoaded'](_0x804884, _0x407163, _0x11fb70, _0x1327c8, _0x1e561b, _0xb143ac, _0x382aeb, _0x411231, _0x501ff4) {
            var _0x17b2bf = _0x6027f5;
            if (_0x407163 && _0x407163['recover'](), _0x382aeb[_0x17b2bf(0x205)] > 0x0) {
                var _0x36da7f = _0x387b86[_0x17b2bf(0x1086)][_0x17b2bf(0x32a)](null, _0x2e0676[_0x17b2bf(0x1085)], [
                    _0x804884,
                    _0x411231,
                    _0x501ff4
                ], !0x1);
                _0x2e0676[_0x17b2bf(0x1033)][_0x17b2bf(0x3f8)](_0x382aeb, !0x1, _0x387b86[_0x17b2bf(0x1086)]['create'](null, _0x2e0676[_0x17b2bf(0x1088)], [
                    _0x804884,
                    _0x36da7f,
                    _0x11fb70,
                    _0x1327c8,
                    _0x1e561b,
                    _0xb143ac,
                    _0x411231 + _0x501ff4 * _0xb143ac[_0x17b2bf(0x205)],
                    _0x501ff4
                ]), _0x407163, null, null, null, 0x1, !0x0);
            } else
                _0x2e0676['_onHierarchyInnerThirdLevResouLoaded'](_0x804884, null, _0x11fb70, _0x1327c8, _0x1e561b, _0xb143ac, _0x411231, _0x501ff4);
        }
        static [_0x6027f5(0x1088)](_0x322939, _0x155e31, _0x1b84df, _0x46a8db, _0x5419f2, _0x1cbc18, _0x37a668, _0x5a02c7) {
            var _0x49217a = _0x6027f5;
            if (_0x155e31 && _0x155e31[_0x49217a(0x54b)](), _0x1cbc18[_0x49217a(0x205)] > 0x0) {
                var _0x1ffa31 = _0x387b86[_0x49217a(0x1086)][_0x49217a(0x32a)](null, _0x2e0676[_0x49217a(0x1085)], [
                    _0x322939,
                    _0x37a668,
                    _0x5a02c7
                ], !0x1);
                _0x2e0676['_innerSecondLevelLoaderManager'][_0x49217a(0x3f8)](_0x1cbc18, !0x1, _0x387b86[_0x49217a(0x1086)][_0x49217a(0x32a)](null, _0x2e0676[_0x49217a(0x1089)], [
                    _0x322939,
                    _0x1ffa31,
                    _0x1b84df,
                    _0x46a8db,
                    _0x5419f2,
                    _0x37a668 + _0x5a02c7 * _0x1cbc18[_0x49217a(0x205)],
                    _0x5a02c7
                ]), _0x155e31, null, null, null, 0x1, !0x0);
            } else
                _0x2e0676[_0x49217a(0x1089)](_0x322939, null, _0x1b84df, _0x46a8db, _0x5419f2, _0x37a668, _0x5a02c7);
        }
        static [_0x6027f5(0x1089)](_0x42a00b, _0x18cfde, _0x3b9926, _0x22b573, _0x462388, _0x4adbad, _0xd4d742) {
            var _0x2c9fee = _0x6027f5;
            if (_0x18cfde && _0x18cfde[_0x2c9fee(0x54b)](), _0x462388[_0x2c9fee(0x205)] > 0x0) {
                var _0x159722 = _0x387b86['Handler'][_0x2c9fee(0x32a)](null, _0x2e0676[_0x2c9fee(0x1085)], [
                    _0x42a00b,
                    _0x4adbad,
                    _0xd4d742
                ], !0x1);
                _0x2e0676[_0x2c9fee(0x1031)]['_create'](_0x462388, !0x1, _0x387b86[_0x2c9fee(0x1086)][_0x2c9fee(0x32a)](null, _0x2e0676['_onHierarchyInnerFirstLevResouLoaded'], [
                    _0x42a00b,
                    _0x159722,
                    _0x3b9926,
                    _0x22b573
                ]), _0x18cfde, null, null, null, 0x1, !0x0);
            } else
                _0x2e0676[_0x2c9fee(0x108a)](_0x42a00b, null, _0x3b9926, _0x22b573);
        }
        static [_0x6027f5(0x108a)](_0x39c6bd, _0x91fb12, _0x4e2575, _0x1028d7) {
            var _0x191a5c = _0x6027f5;
            _0x91fb12 && _0x91fb12['recover'](), _0x39c6bd[_0x191a5c(0x108b)] = _0x39c6bd[_0x191a5c(0x108c)];
            var _0x41422f = _0x191a5c(0x225) === _0x4e2575[_0x191a5c(0x100a)]['type'] ? _0x565b79[_0x191a5c(0x100e)](_0x4e2575, _0x39c6bd[_0x191a5c(0x108d)], _0x39c6bd[_0x191a5c(0x108e)]) : _0x565b79[_0x191a5c(0x67c)](_0x4e2575, _0x39c6bd[_0x191a5c(0x108d)], _0x39c6bd[_0x191a5c(0x108e)]);
            _0x2e0676['_endLoad'](_0x39c6bd, _0x41422f, _0x1028d7);
        }
        static [_0x6027f5(0x105e)](_0x4df2e0) {
            var _0x50cb02 = _0x6027f5;
            _0x4df2e0['on'](_0x387b86[_0x50cb02(0x5b1)]['LOADED'], null, _0x2e0676[_0x50cb02(0x108f)], [_0x4df2e0]), _0x4df2e0[_0x50cb02(0x5c0)](_0x4df2e0['url'], _0x387b86[_0x50cb02(0x3bd)][_0x50cb02(0x1090)], !0x1, null, !0x0);
        }
        static [_0x6027f5(0x108f)](_0x38fd74, _0x5bac45) {
            var _0x25f8a7 = _0x6027f5;
            _0x38fd74[_0x25f8a7(0x108b)] = _0x38fd74[_0x25f8a7(0x108c)];
            var _0x5f23d6 = _0x188a34[_0x25f8a7(0x67c)](_0x5bac45, _0x38fd74[_0x25f8a7(0x108d)], _0x38fd74[_0x25f8a7(0x108e)]);
            _0x2e0676['_endLoad'](_0x38fd74, _0x5f23d6);
        }
        static ['_loadMaterial'](_0x4bff91) {
            var _0x5ad2bd = _0x6027f5;
            _0x4bff91['on'](_0x387b86[_0x5ad2bd(0x5b1)][_0x5ad2bd(0x1081)], null, _0x2e0676['_onMaterilLmatLoaded'], [_0x4bff91]), _0x4bff91[_0x5ad2bd(0x5c0)](_0x4bff91[_0x5ad2bd(0xbc2)], _0x387b86['Loader'][_0x5ad2bd(0x1091)], !0x1, null, !0x0);
        }
        static [_0x6027f5(0x1092)](_0x40f8f3, _0x1b94ae) {
            var _0x528b5d = _0x6027f5, _0x4798b5, _0x141d72 = _0x40f8f3[_0x528b5d(0xbc2)], _0x4243d5 = _0x3acd08['getURLVerion'](_0x141d72), _0x70ca5a = _0x387b86[_0x528b5d(0x5c4)][_0x528b5d(0x1084)](_0x141d72), _0x18ecab = [], _0x27af6d = [];
            _0x1b94ae[_0x528b5d(0x1093)];
            switch (_0x1b94ae['version']) {
            case 'LAYAMATERIAL:01':
            case _0x528b5d(0x691):
            case _0x528b5d(0x69d):
                var _0x5e6dda, _0x4b31e6, _0x68404e = _0x1b94ae[_0x528b5d(0x681)][_0x528b5d(0x69e)];
                if (_0x68404e)
                    for (_0x5e6dda = 0x0, _0x4b31e6 = _0x68404e[_0x528b5d(0x205)]; _0x5e6dda < _0x4b31e6; _0x5e6dda++) {
                        var _0x13489b = _0x68404e[_0x5e6dda], _0x328bde = _0x13489b[_0x528b5d(0x3b8)];
                        _0x328bde && (_0x4798b5 = _0x2e0676['formatRelativePath'](_0x70ca5a, _0x328bde), _0x4243d5 && (_0x4798b5 += _0x4243d5), _0x18ecab[_0x528b5d(0x2ac)]({
                            'url': _0x4798b5,
                            'constructParams': _0x13489b['constructParams'],
                            'propertyParams': _0x13489b[_0x528b5d(0x1076)]
                        }), _0x27af6d[_0x528b5d(0x2ac)](_0x4798b5), _0x13489b[_0x528b5d(0x3b8)] = _0x4798b5);
                    }
                break;
            default:
                throw new Error(_0x528b5d(0x1094));
            }
            var _0x3b7dc3 = _0x18ecab[_0x528b5d(0x205)], _0x35c58f = _0x3b7dc3 + 0x1, _0x512616 = 0x1 / _0x35c58f;
            if (_0x2e0676['_onProcessChange'](_0x40f8f3, 0x0, _0x512616, 0x1), _0x3b7dc3 > 0x0) {
                var _0xee4d20 = _0x387b86[_0x528b5d(0x1086)][_0x528b5d(0x32a)](null, _0x2e0676[_0x528b5d(0x1085)], [
                    _0x40f8f3,
                    _0x512616,
                    _0x3b7dc3 / _0x35c58f
                ], !0x1);
                _0x2e0676['_innerFourthLevelLoaderManager'][_0x528b5d(0x3f8)](_0x18ecab, !0x1, _0x387b86['Handler'][_0x528b5d(0x32a)](null, _0x2e0676[_0x528b5d(0x1095)], [
                    _0x40f8f3,
                    _0xee4d20,
                    _0x1b94ae,
                    _0x27af6d
                ]), _0xee4d20, null, null, null, 0x1, !0x0);
            } else
                _0x2e0676[_0x528b5d(0x1095)](_0x40f8f3, null, _0x1b94ae, null);
        }
        static ['_onMateialTexturesLoaded'](_0x1b6562, _0x5b8dc4, _0xad9d65, _0x39ec33) {
            var _0x30c70c = _0x6027f5;
            _0x1b6562[_0x30c70c(0x108b)] = _0x1b6562[_0x30c70c(0x108c)];
            var _0x4526cd = _0xe2444c[_0x30c70c(0x67c)](_0xad9d65, _0x1b6562[_0x30c70c(0x108d)], _0x1b6562[_0x30c70c(0x108e)]);
            _0x2e0676[_0x30c70c(0x1072)](_0x1b6562, _0x4526cd, _0x39ec33), _0x5b8dc4 && _0x5b8dc4[_0x30c70c(0x54b)]();
        }
        static [_0x6027f5(0x1063)](_0x52b204) {
            var _0x190b40 = _0x6027f5;
            _0x52b204['on'](_0x387b86[_0x190b40(0x5b1)]['LOADED'], null, function (_0x52c8cf) {
                var _0x529fb4 = _0x190b40;
                _0x52b204[_0x529fb4(0x108b)] = _0x52b204[_0x529fb4(0x108c)];
                var _0xaa4795 = _0x43545b[_0x529fb4(0x67c)](_0x52c8cf, _0x52b204[_0x529fb4(0x108d)], _0x52b204['_constructParams']);
                _0x2e0676[_0x529fb4(0x1072)](_0x52b204, _0xaa4795);
            }), _0x52b204[_0x190b40(0x5c0)](_0x52b204['url'], _0x387b86[_0x190b40(0x3bd)][_0x190b40(0x1091)], !0x1, null, !0x0);
        }
        static ['_loadSimpleAnimator'](_0x3fb1bd) {
            var _0x40761c = _0x6027f5;
            _0x3fb1bd['on'](_0x387b86[_0x40761c(0x5b1)][_0x40761c(0x1081)], null, function (_0x1b3bc6) {
                var _0x366d31 = _0x40761c;
                _0x3fb1bd['_cache'] = _0x3fb1bd[_0x366d31(0x108c)];
                var _0x5927a5 = _0x387b86['Texture2D'][_0x366d31(0x105b)](_0x1b3bc6, _0x3fb1bd[_0x366d31(0x108d)], _0x3fb1bd[_0x366d31(0x108e)]);
                _0x2e0676[_0x366d31(0x1072)](_0x3fb1bd, _0x5927a5);
            }), _0x3fb1bd[_0x40761c(0x5c0)](_0x3fb1bd[_0x40761c(0xbc2)], _0x387b86[_0x40761c(0x3bd)][_0x40761c(0x1090)], !0x1, null, !0x0);
        }
        static ['_loadAnimationClip'](_0x2f5b75) {
            var _0x10d5d0 = _0x6027f5;
            _0x2f5b75['on'](_0x387b86['Event'][_0x10d5d0(0x1081)], null, function (_0x378b22) {
                var _0x248309 = _0x10d5d0;
                _0x2f5b75[_0x248309(0x108b)] = _0x2f5b75['_createCache'];
                var _0x5a6eee = _0x1120e5[_0x248309(0x67c)](_0x378b22);
                _0x2e0676['_endLoad'](_0x2f5b75, _0x5a6eee);
            }), _0x2f5b75['load'](_0x2f5b75['url'], _0x387b86[_0x10d5d0(0x3bd)][_0x10d5d0(0x1090)], !0x1, null, !0x0);
        }
        static [_0x6027f5(0x1062)](_0x5103ce) {
            var _0x1574ab = _0x6027f5, _0x3f8019, _0x2667ab = _0x5103ce[_0x1574ab(0xbc2)], _0x51b21d = _0x2667ab[_0x1574ab(0x1096)]('.') + 0x1, _0x274026 = _0x2667ab[_0x1574ab(0x2f9)]('?'), _0x571db2 = -0x1 == _0x274026 ? _0x2667ab[_0x1574ab(0x205)] : _0x274026;
            switch (_0x2667ab[_0x1574ab(0x2fa)](_0x51b21d, _0x571db2 - _0x51b21d)) {
            case _0x1574ab(0x104e):
            case _0x1574ab(0x1050):
            case _0x1574ab(0x1097):
            case _0x1574ab(0x1051):
            case _0x1574ab(0x1052):
                _0x3f8019 = 'nativeimage';
                break;
            case _0x1574ab(0x1053):
                _0x3f8019 = _0x387b86['Loader']['BUFFER'];
                break;
            case 'ktx':
                _0x3f8019 = _0x387b86[_0x1574ab(0x3bd)][_0x1574ab(0x1090)], !_0x5103ce['_constructParams'] && (_0x5103ce['_constructParams'] = []), _0x5103ce[_0x1574ab(0x108e)][0x2] = _0x387b86[_0x1574ab(0x2d9)][_0x1574ab(0x1098)];
                break;
            case _0x1574ab(0x1054):
                _0x3f8019 = _0x387b86['Loader'][_0x1574ab(0x1090)], !_0x5103ce[_0x1574ab(0x108e)] && (_0x5103ce[_0x1574ab(0x108e)] = []), _0x5103ce[_0x1574ab(0x108d)][0x2] = _0x387b86[_0x1574ab(0x2d9)]['PVRTEXTURE'];
            }
            _0x5103ce['on'](_0x387b86[_0x1574ab(0x5b1)][_0x1574ab(0x1081)], null, function (_0x397b2a) {
                var _0x39856b = _0x1574ab;
                _0x5103ce['_cache'] = _0x5103ce[_0x39856b(0x108c)];
                var _0x2fc61b = _0x387b86['Texture2D']['_parse'](_0x397b2a, _0x5103ce[_0x39856b(0x108d)], _0x5103ce[_0x39856b(0x108e)]);
                _0x2e0676['_endLoad'](_0x5103ce, _0x2fc61b);
            }), _0x5103ce[_0x1574ab(0x5c0)](_0x5103ce[_0x1574ab(0xbc2)], _0x3f8019, !0x1, null, !0x0);
        }
        static [_0x6027f5(0x1060)](_0x45912e) {
            var _0x1145b5 = _0x6027f5;
            _0x45912e['on'](_0x387b86[_0x1145b5(0x5b1)][_0x1145b5(0x1081)], null, _0x2e0676['_onTextureCubeLtcLoaded'], [_0x45912e]), _0x45912e['load'](_0x45912e[_0x1145b5(0xbc2)], _0x387b86[_0x1145b5(0x3bd)][_0x1145b5(0x1091)], !0x1, null, !0x0);
        }
        static [_0x6027f5(0x1061)](_0x56a6cb) {
            var _0xafbbec = _0x6027f5;
            _0x56a6cb['on'](_0x387b86[_0xafbbec(0x5b1)][_0xafbbec(0x1081)], null, _0x5ca981 => {
                var _0x5456fb = _0xafbbec;
                _0x56a6cb['_cache'] = _0x56a6cb[_0x5456fb(0x108c)];
                var _0x2074c9 = new _0x387b86[(_0x5456fb(0x326))](_0x5ca981);
                if (_0x5456fb(0x1099) !== _0x2074c9[_0x5456fb(0x2b0)]())
                    throw _0x5456fb(0x109a);
                var _0x5e3b2d = _0x2074c9[_0x5456fb(0x109b)](), _0x5b1003 = _0x2074c9[_0x5456fb(0x2c2)](), _0x56ad4a = _0x2074c9['readUint16'](), _0x47d684 = _0x2074c9[_0x5456fb(0x2c2)](), _0x5c849a = _0x2074c9[_0x5456fb(0x2c2)](), _0x1907b9 = _0x2074c9[_0x5456fb(0x2c2)](), _0x50e4ca = _0x2074c9[_0x5456fb(0x2c2)](), _0x583ac4 = new _0x2fe14f(_0x56ad4a, _0x5e3b2d, _0x5b1003 > 0x1);
                _0x583ac4[_0x5456fb(0x2e0)] = _0x47d684, _0x583ac4[_0x5456fb(0x2e3)] = _0x5c849a, _0x583ac4['wrapModeV'] = _0x1907b9, _0x583ac4[_0x5456fb(0x307)] = _0x50e4ca;
                for (var _0x12b3d1 = _0x2074c9[_0x5456fb(0x2ae)], _0x5db5bf = _0x56ad4a, _0x5ff84d = 0x0; _0x5ff84d < _0x5b1003; _0x5ff84d++) {
                    for (var _0x5488c8 = new Array(0x6), _0x302264 = _0x5db5bf * _0x5db5bf * _0x583ac4['_getFormatByteCount'](), _0x1dc055 = 0x0; _0x1dc055 < 0x6; _0x1dc055++)
                        _0x5488c8[_0x1dc055] = new Uint8Array(_0x5ca981, _0x12b3d1, _0x302264), _0x12b3d1 += _0x302264;
                    _0x583ac4[_0x5456fb(0xa19)](_0x5488c8, _0x5ff84d), _0x5db5bf /= 0x2;
                }
                _0x2e0676[_0x5456fb(0x1072)](_0x56a6cb, _0x583ac4);
            }), _0x56a6cb[_0xafbbec(0x5c0)](_0x56a6cb[_0xafbbec(0xbc2)], _0x387b86[_0xafbbec(0x3bd)][_0xafbbec(0x1090)], !0x1, null, !0x0);
        }
        static [_0x6027f5(0x109c)](_0x5b5845, _0x12f3e9) {
            var _0x1fecb4 = _0x6027f5, _0x3c122c = _0x387b86[_0x1fecb4(0x5c4)][_0x1fecb4(0x1084)](_0x5b5845[_0x1fecb4(0xbc2)]), _0x653c14 = [
                    _0x2e0676[_0x1fecb4(0x1071)](_0x3c122c, _0x12f3e9[_0x1fecb4(0x109d)]),
                    _0x2e0676['formatRelativePath'](_0x3c122c, _0x12f3e9[_0x1fecb4(0x109e)]),
                    _0x2e0676['formatRelativePath'](_0x3c122c, _0x12f3e9[_0x1fecb4(0x109f)]),
                    _0x2e0676[_0x1fecb4(0x1071)](_0x3c122c, _0x12f3e9['right']),
                    _0x2e0676[_0x1fecb4(0x1071)](_0x3c122c, _0x12f3e9['up']),
                    _0x2e0676['formatRelativePath'](_0x3c122c, _0x12f3e9[_0x1fecb4(0x10a0)])
                ];
            _0x2e0676[_0x1fecb4(0x1085)](_0x5b5845, 0x0, 0x1 / 0x7, 0x1);
            var _0x303737 = _0x387b86[_0x1fecb4(0x1086)][_0x1fecb4(0x32a)](null, _0x2e0676[_0x1fecb4(0x1085)], [
                _0x5b5845,
                0x1 / 0x7,
                0x6 / 0x7
            ], !0x1);
            _0x2e0676['_innerFourthLevelLoaderManager'][_0x1fecb4(0x5c0)](_0x653c14, _0x387b86[_0x1fecb4(0x1086)][_0x1fecb4(0x32a)](null, _0x2e0676[_0x1fecb4(0x10a1)], [
                _0x5b5845,
                _0x653c14,
                _0x303737
            ]), _0x303737, _0x1fecb4(0x10a2));
        }
        static [_0x6027f5(0x10a1)](_0x5947ba, _0x3a2294, _0x39677c) {
            var _0x504963 = _0x6027f5;
            for (var _0x4c62b7 = new Array(0x6), _0x18482f = 0x0; _0x18482f < 0x6; _0x18482f++)
                _0x4c62b7[_0x18482f] = _0x387b86['Loader'][_0x504963(0x3b7)](_0x3a2294[_0x18482f]);
            _0x5947ba['_cache'] = _0x5947ba['_createCache'];
            var _0x5bf238 = _0x2fe14f['_parse'](_0x4c62b7, _0x5947ba[_0x504963(0x108d)], _0x5947ba[_0x504963(0x108e)]);
            for (_0x39677c[_0x504963(0x54b)](), _0x18482f = 0x0; _0x18482f < 0x6; _0x18482f++)
                _0x387b86[_0x504963(0x3bd)][_0x504963(0x5d3)](_0x3a2294[_0x18482f]);
            _0x2e0676[_0x504963(0x1072)](_0x5947ba, _0x5bf238);
        }
        static [_0x6027f5(0x1085)](_0x10266e, _0xd9d036, _0xa2ce03, _0x2e83f6) {
            var _0xd6bc42 = _0x6027f5;
            (_0x2e83f6 = _0xd9d036 + _0x2e83f6 * _0xa2ce03) < 0x1 && _0x10266e['event'](_0x387b86[_0xd6bc42(0x5b1)]['PROGRESS'], 0x2 * _0x2e83f6 / 0x3 + 0x1 / 0x3);
        }
        static [_0x6027f5(0x94b)](_0x29dfbb, _0x4aee8d, _0x4ea3e8 = null, _0x171937 = null) {
            var _0x2c175a = _0x6027f5;
            if (_0x2e0676[_0x2c175a(0x10a3)])
                _0x171937 && _0x171937['run']();
            else {
                _0x2e0676['_isInit'] = !0x0, _0x4ea3e8 && _0x4ea3e8['cloneTo'](_0x362537[_0x2c175a(0x251)]), _0x4ea3e8 = _0x362537['_config'], _0x1b438f[_0x2c175a(0x24a)] = _0x4ea3e8[_0x2c175a(0x24a)], _0x2e0676[_0x2c175a(0x242)] = _0x4ea3e8['_editerEnvironment'], _0x9c4b57['octreeCulling'] = _0x4ea3e8[_0x2c175a(0x262)], _0x9c4b57['octreeInitialSize'] = _0x4ea3e8['octreeInitialSize'], _0x9c4b57[_0x2c175a(0x247)] = _0x4ea3e8[_0x2c175a(0x247)], _0x9c4b57[_0x2c175a(0x248)] = _0x4ea3e8[_0x2c175a(0x248)], _0x9c4b57['octreeLooseness'] = _0x4ea3e8['octreeLooseness'];
                var _0x6eacc3 = window[_0x2c175a(0x229)];
                null == _0x6eacc3 || _0x4ea3e8[_0x2c175a(0x24c)] ? (_0x567245[_0x2c175a(0x23f)] = !0x1, _0x2e0676[_0x2c175a(0x230)](_0x29dfbb, _0x4aee8d, _0x4ea3e8), _0x171937 && _0x171937[_0x2c175a(0x54a)]()) : (_0x567245[_0x2c175a(0x23f)] = !0x0, _0x6eacc3(0x10 * _0x4ea3e8[_0x2c175a(0x257)], _0x387b86[_0x2c175a(0x10a4)][_0x2c175a(0x10a5)])[_0x2c175a(0x10a6)](function () {
                    var _0x404e93 = _0x2c175a;
                    _0x2e0676[_0x404e93(0x230)](_0x29dfbb, _0x4aee8d, _0x4ea3e8), _0x171937 && _0x171937[_0x404e93(0x54a)]();
                }));
            }
        }
    }
    _0x2e0676[_0x6027f5(0xc25)] = _0x6027f5(0xc25), _0x2e0676['MESH'] = _0x6027f5(0xf76), _0x2e0676[_0x6027f5(0x6ac)] = 'MATERIAL', _0x2e0676[_0x6027f5(0x104f)] = 'TEXTURE2D', _0x2e0676[_0x6027f5(0xa33)] = _0x6027f5(0xa33), _0x2e0676[_0x6027f5(0xa34)] = _0x6027f5(0xa34), _0x2e0676[_0x6027f5(0x32b)] = 'ANIMATIONCLIP', _0x2e0676[_0x6027f5(0x67f)] = _0x6027f5(0x67f), _0x2e0676[_0x6027f5(0x10a7)] = _0x6027f5(0x10a7), _0x2e0676[_0x6027f5(0x10a8)] = 'TERRAIN', _0x2e0676['SIMPLEANIMATORBIN'] = _0x6027f5(0x10a9), _0x2e0676[_0x6027f5(0x1031)] = new _0x387b86[(_0x6027f5(0xa1b))](), _0x2e0676[_0x6027f5(0x1032)] = new _0x387b86[(_0x6027f5(0xa1b))](), _0x2e0676[_0x6027f5(0x1033)] = new _0x387b86[(_0x6027f5(0xa1b))](), _0x2e0676[_0x6027f5(0x1034)] = new _0x387b86[(_0x6027f5(0xa1b))](), _0x2e0676[_0x6027f5(0x10a3)] = !0x1, _0x2e0676[_0x6027f5(0x242)] = !0x1, window[_0x6027f5(0x227)] = _0x2e0676;
    class _0x54c28e extends _0x387b86[_0x6027f5(0x37e)] {
        constructor() {
            var _0x30cf1e = _0x6027f5;
            super(...arguments), this[_0x30cf1e(0xbf7)] = -0x1, this[_0x30cf1e(0x10aa)] = !0x1;
        }
        get ['isSingleton']() {
            return !0x1;
        }
        [_0x6027f5(0x10ab)]() {
            var _0x1aa9f7 = _0x6027f5, _0x3490aa = _0x54c28e[_0x1aa9f7(0x1066)];
            return this['onTriggerEnter'] !== _0x3490aa['onTriggerEnter'] || (this[_0x1aa9f7(0x10ac)] !== _0x3490aa['onTriggerStay'] || this['onTriggerExit'] !== _0x3490aa[_0x1aa9f7(0x10ad)]);
        }
        ['_checkProcessCollisions']() {
            var _0x38ba21 = _0x6027f5, _0x3e1577 = _0x54c28e[_0x38ba21(0x1066)];
            return this[_0x38ba21(0x10ae)] !== _0x3e1577[_0x38ba21(0x10ae)] || (this[_0x38ba21(0x10af)] !== _0x3e1577[_0x38ba21(0x10af)] || this['onCollisionExit'] !== _0x3e1577['onCollisionExit']);
        }
        [_0x6027f5(0x10b0)]() {
            var _0x240d40 = _0x6027f5;
            this['onAwake'](), this[_0x240d40(0x10b1)] !== _0x54c28e[_0x240d40(0x1066)]['onStart'] && _0x387b86[_0x240d40(0x68d)][_0x240d40(0x10b2)][_0x240d40(0x10b3)](this, this[_0x240d40(0x10b1)]);
        }
        [_0x6027f5(0x3af)]() {
            var _0x243fc4 = _0x6027f5;
            this[_0x243fc4(0x10aa)] || (this[_0x243fc4(0x38b)][_0x243fc4(0x3b0)][_0x243fc4(0xc0f)](this), this['_enableState'] = !0x0, this['onEnable']());
        }
        [_0x6027f5(0x3b3)]() {
            var _0x556b20 = _0x6027f5;
            this[_0x556b20(0x10aa)] && -0x1 != this['_indexInPool'] && (this[_0x556b20(0x38b)][_0x556b20(0x3b0)][_0x556b20(0x5cb)](this), this['owner'][_0x556b20(0x10b4)](this), this[_0x556b20(0x10aa)] = !0x1, this['onDisable']());
        }
        ['_onDestroy']() {
            var _0x5b3d07 = _0x6027f5, _0x281f1e = this[_0x5b3d07(0x38b)][_0x5b3d07(0x36a)];
            _0x281f1e[_0x5b3d07(0x33a)](_0x281f1e['indexOf'](this), 0x1);
            var _0x4d6cff = this[_0x5b3d07(0x38b)];
            _0x4d6cff[_0x5b3d07(0x5bb)] = !0x1;
            for (var _0x14588a = 0x0, _0x38b33e = _0x281f1e[_0x5b3d07(0x205)]; _0x14588a < _0x38b33e; _0x14588a++)
                if (_0x281f1e[_0x14588a]['_checkProcessTriggers']()) {
                    _0x4d6cff[_0x5b3d07(0x5bb)] = !0x0;
                    break;
                }
            for (_0x4d6cff[_0x5b3d07(0x5ba)] = !0x1, _0x14588a = 0x0, _0x38b33e = _0x281f1e[_0x5b3d07(0x205)]; _0x14588a < _0x38b33e; _0x14588a++)
                if (_0x281f1e[_0x14588a][_0x5b3d07(0x10b5)]()) {
                    _0x4d6cff[_0x5b3d07(0x5ba)] = !0x0;
                    break;
                }
            this[_0x5b3d07(0x10b6)]();
        }
        [_0x6027f5(0x10b7)]() {
            return !0x0;
        }
        [_0x6027f5(0x10b8)]() {
            var _0xbf22f8 = _0x6027f5, _0x49d980 = this['owner'], _0x2e3ef7 = _0x49d980[_0xbf22f8(0x36a)];
            _0x2e3ef7 || (_0x49d980[_0xbf22f8(0x36a)] = _0x2e3ef7 = []), _0x2e3ef7['push'](this), _0x49d980['_needProcessCollisions'] || (_0x49d980[_0xbf22f8(0x5ba)] = this[_0xbf22f8(0x10b5)]()), _0x49d980[_0xbf22f8(0x5bb)] || (_0x49d980['_needProcessTriggers'] = this[_0xbf22f8(0x10ab)]());
        }
        ['onAwake']() {
        }
        [_0x6027f5(0xbee)]() {
        }
        ['onStart']() {
        }
        ['onTriggerEnter'](_0x395da9) {
        }
        [_0x6027f5(0x10ac)](_0x4e9327) {
        }
        [_0x6027f5(0x10ad)](_0x92d1a8) {
        }
        [_0x6027f5(0x10ae)](_0x366677) {
        }
        [_0x6027f5(0x10af)](_0x275ebd) {
        }
        [_0x6027f5(0x10b9)](_0x4da134) {
        }
        [_0x6027f5(0x10ba)]() {
        }
        [_0x6027f5(0x9ee)]() {
        }
        [_0x6027f5(0xa05)]() {
        }
        [_0x6027f5(0x9f0)]() {
        }
        ['onMouseUp']() {
        }
        [_0x6027f5(0x9f9)]() {
        }
        [_0x6027f5(0x10bb)]() {
        }
        [_0x6027f5(0x10bc)]() {
        }
        [_0x6027f5(0xbf9)]() {
        }
        [_0x6027f5(0xbfb)]() {
        }
        [_0x6027f5(0x10bd)]() {
        }
        [_0x6027f5(0xc10)]() {
        }
        ['onDisable']() {
        }
        [_0x6027f5(0x10b6)]() {
        }
    }
    class _0x5eab54 {
        constructor(_0x5d2724, _0x4c51f6, _0x236722, _0x1f21d7) {
            var _0x369bf5 = _0x6027f5;
            this[_0x369bf5(0x10be)] = [], this['_w'] = _0x5d2724, this['_h'] = _0x4c51f6, this['_minHeight'] = _0x236722, this['_maxHeight'] = _0x1f21d7;
        }
        static [_0x6027f5(0x10bf)](_0x3c7cd4, _0x140cc4, _0x159c25, _0x5f4280) {
            var _0x23d44a = _0x6027f5;
            for (var _0x27e174 = [], _0x7e55ef = [], _0x5d825d = _0x3c7cd4[_0x23d44a(0xad6)], _0x50dc68 = 0x0; _0x50dc68 < _0x5d825d; _0x50dc68++) {
                for (var _0x5f5c25 = _0x3c7cd4[_0x23d44a(0xcc8)](_0x50dc68), _0x192fdd = _0x5f5c25[_0x23d44a(0x4f6)], _0x2ad279 = _0x192fdd[_0x23d44a(0xaca)](), _0x232ad5 = [], _0x391c18 = 0x0; _0x391c18 < _0x2ad279[_0x23d44a(0x205)]; _0x391c18 += _0x192fdd['vertexDeclaration'][_0x23d44a(0x4e5)] / 0x4) {
                    var _0x21af63 = new _0x3697cd(_0x2ad279[_0x391c18 + 0x0], _0x2ad279[_0x391c18 + 0x1], _0x2ad279[_0x391c18 + 0x2]);
                    _0x232ad5['push'](_0x21af63);
                }
                _0x27e174['push'](_0x232ad5);
                var _0x1c382b = _0x5f5c25['_indexBuffer'];
                _0x7e55ef['push'](_0x1c382b[_0x23d44a(0x319)]());
            }
            var _0x1fe275 = _0x3c7cd4['bounds'], _0x28152a = _0x1fe275[_0x23d44a(0xa47)]()['x'], _0x240e38 = _0x1fe275[_0x23d44a(0xa47)]()['z'], _0xefb903 = _0x1fe275[_0x23d44a(0xa4f)]()['x'], _0x40981b = _0x1fe275[_0x23d44a(0xa4f)]()['z'], _0x325fe6 = _0x1fe275[_0x23d44a(0xa47)]()['y'], _0xcb71f6 = _0x1fe275[_0x23d44a(0xa4f)]()['y'], _0x2a52ed = _0xefb903 - _0x28152a, _0x4106b0 = _0x40981b - _0x240e38, _0x45bb54 = _0x5f4280['x'] = _0x2a52ed / (_0x140cc4 - 0x1), _0xcc99c1 = _0x5f4280['y'] = _0x4106b0 / (_0x159c25 - 0x1), _0x3b33dd = new _0x5eab54(_0x140cc4, _0x159c25, _0x325fe6, _0xcb71f6), _0x5c8714 = _0x5eab54[_0x23d44a(0x10c0)], _0x4a2e5d = _0x5c8714[_0x23d44a(0x87b)];
            _0x4a2e5d['x'] = 0x0, _0x4a2e5d['y'] = -0x1, _0x4a2e5d['z'] = 0x0;
            var _0xf3625 = _0xcb71f6 + 0.1;
            _0x5c8714[_0x23d44a(0x883)]['y'] = _0xf3625;
            for (var _0x33b503 = 0x0; _0x33b503 < _0x159c25; _0x33b503++) {
                var _0xfb9d16 = _0x240e38 + _0x33b503 * _0xcc99c1;
                _0x3b33dd[_0x23d44a(0x10be)][_0x33b503] = [];
                for (var _0x592bc3 = 0x0; _0x592bc3 < _0x140cc4; _0x592bc3++) {
                    var _0xf1b98f = _0x28152a + _0x592bc3 * _0x45bb54, _0x979296 = _0x5c8714[_0x23d44a(0x883)];
                    _0x979296['x'] = _0xf1b98f, _0x979296['z'] = _0xfb9d16;
                    var _0x4295b3 = _0x5eab54[_0x23d44a(0x10c1)](_0x5c8714, _0x27e174, _0x7e55ef);
                    _0x3b33dd['_datas'][_0x33b503][_0x592bc3] = _0x4295b3 === Number['MAX_VALUE'] ? NaN : _0xf3625 - _0x4295b3;
                }
            }
            return _0x3b33dd;
        }
        static ['createFromImage'](_0x349ece, _0x5369df, _0x57af0f) {
            var _0x682cd2 = _0x6027f5;
            for (var _0xb8a0a = _0x349ece[_0x682cd2(0x313)], _0x28b03e = _0x349ece[_0x682cd2(0x439)], _0x358f4b = new _0x5eab54(_0xb8a0a, _0x28b03e, _0x5369df, _0x57af0f), _0x1b1591 = (_0x57af0f - _0x5369df) / 0xfe, _0x5df114 = _0x349ece[_0x682cd2(0x10c2)](), _0x3864b5 = 0x0, _0x3f25f4 = 0x0; _0x3f25f4 < _0x28b03e; _0x3f25f4++)
                for (var _0x5c4c36 = _0x358f4b[_0x682cd2(0x10be)][_0x3f25f4] = [], _0x4f672f = 0x0; _0x4f672f < _0xb8a0a; _0x4f672f++) {
                    var _0x4e0b54 = _0x5df114[_0x3864b5++], _0x44d15d = _0x5df114[_0x3864b5++], _0x2edb0b = _0x5df114[_0x3864b5++], _0xbae7c5 = _0x5df114[_0x3864b5++];
                    _0x5c4c36[_0x4f672f] = 0xff == _0x4e0b54 && 0xff == _0x44d15d && 0xff == _0x2edb0b && 0xff == _0xbae7c5 ? NaN : (_0x4e0b54 + _0x44d15d + _0x2edb0b) / 0x3 * _0x1b1591 + _0x5369df;
                }
            return _0x358f4b;
        }
        static [_0x6027f5(0x10c1)](_0x2e15ee, _0x51d8ac, _0x152a7c) {
            var _0x527af1 = _0x6027f5;
            for (var _0x520987 = Number[_0x527af1(0xa3d)], _0x5b822c = 0x0; _0x5b822c < _0x51d8ac[_0x527af1(0x205)]; _0x5b822c++)
                for (var _0x1016c6 = _0x51d8ac[_0x5b822c], _0x1bbe7e = _0x152a7c[_0x5b822c], _0x273be8 = 0x0; _0x273be8 < _0x1bbe7e['length']; _0x273be8 += 0x3) {
                    var _0x2d9a22 = _0x1016c6[_0x1bbe7e[_0x273be8 + 0x0]], _0x3cbf60 = _0x1016c6[_0x1bbe7e[_0x273be8 + 0x1]], _0x237c0c = _0x1016c6[_0x1bbe7e[_0x273be8 + 0x2]], _0x56747a = _0x353f39[_0x527af1(0x10c3)](_0x2e15ee, _0x2d9a22, _0x3cbf60, _0x237c0c);
                    !isNaN(_0x56747a) && _0x56747a < _0x520987 && (_0x520987 = _0x56747a);
                }
            return _0x520987;
        }
        get [_0x6027f5(0x313)]() {
            return this['_w'];
        }
        get [_0x6027f5(0x439)]() {
            return this['_h'];
        }
        get [_0x6027f5(0x10c4)]() {
            var _0x31ef20 = _0x6027f5;
            return this[_0x31ef20(0x10c5)];
        }
        get ['minHeight']() {
            var _0x1c9726 = _0x6027f5;
            return this[_0x1c9726(0x10c6)];
        }
        [_0x6027f5(0x10c7)](_0x3853c8, _0x5242e9) {
            return _0x3853c8 >= 0x0 && _0x3853c8 < this['_h'] && _0x5242e9 >= 0x0 && _0x5242e9 < this['_w'];
        }
        ['getHeight'](_0x229cf6, _0x844f8) {
            var _0x44303a = _0x6027f5;
            return this[_0x44303a(0x10c7)](_0x229cf6, _0x844f8) ? this['_datas'][_0x229cf6][_0x844f8] : NaN;
        }
    }
    _0x5eab54[_0x6027f5(0x10c0)] = new _0x31e56b(new _0x3697cd(), new _0x3697cd());
    class _0x245161 extends _0x8ce47b {
        constructor(_0x2ebcca, _0x57c997, _0x12fb08 = null) {
            var _0x477b79 = _0x6027f5;
            super(_0x2ebcca, _0x12fb08), this[_0x477b79(0x10c8)] = _0x57c997, this['_cellSize'] = new _0x30a72c();
        }
        static ['createFromMesh'](_0x2a7417, _0x223b43, _0x257f83, _0x2fbb38 = null) {
            var _0x298a6d = _0x6027f5, _0x5f11fc = new _0x245161(_0x2a7417, null, _0x2fbb38);
            return _0x5f11fc[_0x298a6d(0x10c9)](_0x223b43, _0x257f83), _0x5f11fc;
        }
        static ['createFromMeshAndHeightMap'](_0x10f20d, _0x37caa8, _0xfe708c, _0x494e8f, _0x40466d = null) {
            var _0x172245 = new _0x245161(_0x10f20d, null, _0x40466d);
            return _0x172245['_initCreateFromMeshHeightMap'](_0x37caa8, _0xfe708c, _0x494e8f), _0x172245;
        }
        get ['minX']() {
            var _0x2a4c08 = _0x6027f5, _0xae96a = this[_0x2a4c08(0x3d6)]['worldMatrix'][_0x2a4c08(0x1fe)];
            return this[_0x2a4c08(0x10ca)] * this[_0x2a4c08(0x10cb)]() + _0xae96a[0xc];
        }
        get [_0x6027f5(0x10cc)]() {
            var _0xaef56 = _0x6027f5, _0x370bf7 = this[_0xaef56(0x3d6)][_0xaef56(0x3d8)]['elements'];
            return this[_0xaef56(0x10cd)] * this[_0xaef56(0x10ce)]() + _0x370bf7[0xe];
        }
        get [_0x6027f5(0x313)]() {
            var _0x1e8456 = _0x6027f5;
            return (this['_heightMap'][_0x1e8456(0x313)] - 0x1) * this['_cellSize']['x'] * this[_0x1e8456(0x10cb)]();
        }
        get [_0x6027f5(0x10cf)]() {
            var _0x3ff96a = _0x6027f5;
            return (this['_heightMap']['height'] - 0x1) * this[_0x3ff96a(0x10d0)]['y'] * this[_0x3ff96a(0x10ce)]();
        }
        [_0x6027f5(0x10d1)]() {
            var _0x3e4792 = _0x6027f5, _0x1b9dc8 = this[_0x3e4792(0x3d6)][_0x3e4792(0x5a4)];
            _0x1b9dc8['x'] = 0x0, _0x1b9dc8['y'] = 0x0, _0x1b9dc8['z'] = 0x0, _0x1b9dc8['w'] = 0x1, this[_0x3e4792(0x3d6)][_0x3e4792(0x5a4)] = _0x1b9dc8;
        }
        [_0x6027f5(0x10cb)]() {
            var _0x4fb4ea = _0x6027f5, _0xd9d73 = this['transform']['worldMatrix'][_0x4fb4ea(0x1fe)], _0x4c20e5 = _0xd9d73[0x0], _0xaa1d2c = _0xd9d73[0x1], _0x171c79 = _0xd9d73[0x2];
            return Math[_0x4fb4ea(0x1f3)](_0x4c20e5 * _0x4c20e5 + _0xaa1d2c * _0xaa1d2c + _0x171c79 * _0x171c79);
        }
        [_0x6027f5(0x10ce)]() {
            var _0x5328e7 = _0x6027f5, _0x5ab615 = this[_0x5328e7(0x3d6)][_0x5328e7(0x3d8)][_0x5328e7(0x1fe)], _0x4feb19 = _0x5ab615[0x8], _0x441213 = _0x5ab615[0x9], _0x55c903 = _0x5ab615[0xa];
            return Math[_0x5328e7(0x1f3)](_0x4feb19 * _0x4feb19 + _0x441213 * _0x441213 + _0x55c903 * _0x55c903);
        }
        ['_initCreateFromMesh'](_0x4eafa7, _0x428889) {
            var _0x3ed638 = _0x6027f5;
            this[_0x3ed638(0x10c8)] = _0x5eab54['creatFromMesh'](this['meshFilter']['sharedMesh'], _0x4eafa7, _0x428889, this[_0x3ed638(0x10d0)]);
            var _0x43fca9 = this['meshFilter'][_0x3ed638(0xad0)][_0x3ed638(0x812)]['getMin']();
            this[_0x3ed638(0x10ca)] = _0x43fca9['x'], this[_0x3ed638(0x10cd)] = _0x43fca9['z'];
        }
        ['_initCreateFromMeshHeightMap'](_0x59ae21, _0x577f9c, _0x24f566) {
            var _0x2d82c = _0x6027f5, _0x3bd721 = this[_0x2d82c(0xacf)][_0x2d82c(0xad0)][_0x2d82c(0x812)];
            this[_0x2d82c(0x10c8)] = _0x5eab54[_0x2d82c(0x10d2)](_0x59ae21, _0x577f9c, _0x24f566), this['_computeCellSize'](_0x3bd721);
            var _0x259722 = _0x3bd721[_0x2d82c(0xa47)]();
            this[_0x2d82c(0x10ca)] = _0x259722['x'], this[_0x2d82c(0x10cd)] = _0x259722['z'];
        }
        [_0x6027f5(0x10d3)](_0x80ad0a) {
            var _0x55fc69 = _0x6027f5, _0x555951 = _0x80ad0a[_0x55fc69(0xa47)](), _0xb7ab5e = _0x80ad0a[_0x55fc69(0xa4f)](), _0xbbf654 = _0x555951['x'], _0x2a8ee5 = _0x555951['z'], _0x19db79 = _0xb7ab5e['x'] - _0xbbf654, _0x53a53d = _0xb7ab5e['z'] - _0x2a8ee5;
            this['_cellSize']['x'] = _0x19db79 / (this[_0x55fc69(0x10c8)][_0x55fc69(0x313)] - 0x1), this[_0x55fc69(0x10d0)]['y'] = _0x53a53d / (this['_heightMap'][_0x55fc69(0x439)] - 0x1);
        }
        ['_update'](_0x39fba0) {
            var _0x39ff77 = _0x6027f5;
            this[_0x39ff77(0x10d1)]();
        }
        [_0x6027f5(0x10d4)](_0x5901ed, _0x5f51b2) {
            var _0x4105c2 = _0x6027f5;
            _0x245161['_tempVector3']['x'] = _0x5901ed, _0x245161[_0x4105c2(0x490)]['y'] = 0x0, _0x245161[_0x4105c2(0x490)]['z'] = _0x5f51b2, this[_0x4105c2(0x10d1)]();
            var _0x26138f = this['transform'][_0x4105c2(0x3d8)];
            _0x26138f[_0x4105c2(0x280)](_0x245161[_0x4105c2(0x495)]), _0x3697cd[_0x4105c2(0x216)](_0x245161[_0x4105c2(0x490)], _0x245161[_0x4105c2(0x495)], _0x245161['_tempVector3']), _0x5901ed = _0x245161[_0x4105c2(0x490)]['x'], _0x5f51b2 = _0x245161[_0x4105c2(0x490)]['z'];
            var _0x514100 = (_0x5901ed - this['_minX']) / this['_cellSize']['x'], _0x48f531 = (_0x5f51b2 - this['_minZ']) / this['_cellSize']['y'], _0x595dc6 = Math[_0x4105c2(0x24e)](_0x48f531), _0x3565cb = Math['floor'](_0x514100), _0x240196 = _0x514100 - _0x3565cb, _0x41497 = _0x48f531 - _0x595dc6, _0x5a5aef = _0x26138f[_0x4105c2(0x1fe)], _0x5eb2fd = _0x5a5aef[0x4], _0x10c0f0 = _0x5a5aef[0x5], _0x569408 = _0x5a5aef[0x6], _0x48d1bd = Math[_0x4105c2(0x1f3)](_0x5eb2fd * _0x5eb2fd + _0x10c0f0 * _0x10c0f0 + _0x569408 * _0x569408), _0x14c51e = _0x5a5aef[0xd], _0x44cd25 = this[_0x4105c2(0x10c8)][_0x4105c2(0x10d4)](_0x595dc6, _0x3565cb + 0x1), _0x58d9f4 = this['_heightMap'][_0x4105c2(0x10d4)](_0x595dc6 + 0x1, _0x3565cb);
            if (isNaN(_0x44cd25) || isNaN(_0x58d9f4))
                return NaN;
            if (_0x240196 + _0x41497 <= 0x1) {
                var _0x5aebb6 = this[_0x4105c2(0x10c8)]['getHeight'](_0x595dc6, _0x3565cb);
                return isNaN(_0x5aebb6) ? NaN : (_0x5aebb6 + _0x240196 * (_0x44cd25 - _0x5aebb6) + _0x41497 * (_0x58d9f4 - _0x5aebb6)) * _0x48d1bd + _0x14c51e;
            }
            var _0x4fcdf1 = this[_0x4105c2(0x10c8)]['getHeight'](_0x595dc6 + 0x1, _0x3565cb + 0x1);
            return isNaN(_0x4fcdf1) ? NaN : (_0x4fcdf1 + (0x1 - _0x240196) * (_0x58d9f4 - _0x4fcdf1) + (0x1 - _0x41497) * (_0x44cd25 - _0x4fcdf1)) * _0x48d1bd + _0x14c51e;
        }
    }
    _0x245161[_0x6027f5(0x490)] = new _0x3697cd(), _0x245161['_tempMatrix4x4'] = new _0x6b4d98();
    class _0x485d15 {
        constructor() {
            var _0x47d6e8 = _0x6027f5;
            this[_0x47d6e8(0xd45)] = 0x0, this[_0x47d6e8(0x864)] = new Float32Array(0xc);
        }
        get [_0x6027f5(0xd46)]() {
            var _0x1212b6 = _0x6027f5;
            return this[_0x1212b6(0xd45)] / 0x3;
        }
        [_0x6027f5(0x207)](_0x4b303c, _0x3d294f) {
            var _0x1300f3 = _0x6027f5;
            this[_0x1300f3(0xd45)] < 0x8 ? (0x6 === this[_0x1300f3(0xd45)] && 0x1 !== _0x4b303c && (_0x4b303c = 0x1, console[_0x1300f3(0x93b)](_0x1300f3(0x10d5))), this[_0x1300f3(0x864)][this[_0x1300f3(0xd45)]++] = _0x4b303c, this[_0x1300f3(0x864)][this['_currentLength']++] = _0x3d294f['x'], this[_0x1300f3(0x864)][this[_0x1300f3(0xd45)]++] = _0x3d294f['y']) : console[_0x1300f3(0x93b)]('GradientDataVector2\x20warning:data\x20count\x20must\x20lessEqual\x20than\x204');
        }
        [_0x6027f5(0x1fc)](_0x3a38ec) {
            var _0x22ccc6 = _0x6027f5, _0x394f7a = _0x3a38ec;
            _0x394f7a[_0x22ccc6(0xd45)] = this[_0x22ccc6(0xd45)];
            for (var _0xb27050 = _0x394f7a[_0x22ccc6(0x864)], _0x35a648 = 0x0, _0x2f3424 = this[_0x22ccc6(0x864)][_0x22ccc6(0x205)]; _0x35a648 < _0x2f3424; _0x35a648++)
                _0xb27050[_0x35a648] = this['_elements'][_0x35a648];
        }
        [_0x6027f5(0x1fd)]() {
            var _0x1fbf7e = _0x6027f5, _0x50bf78 = new _0x485d15();
            return this[_0x1fbf7e(0x1fc)](_0x50bf78), _0x50bf78;
        }
    }
    class _0x57a6c6 {
        constructor() {
        }
        [_0x6027f5(0x4ff)](_0x1c8e4b) {
        }
    }
    class _0x3e94a1 extends _0x57a6c6 {
        constructor() {
            var _0x336dc9 = _0x6027f5;
            super(), this['_shader'] = null, this[_0x336dc9(0x55b)] = new _0x3985fd(), this[_0x336dc9(0x10d6)] = new _0x441c6d(), this[_0x336dc9(0x10d7)] = new _0x5b8e4e(), this['_shaderThreshold'] = new _0x5b8e4e(), this[_0x336dc9(0x10d8)] = new _0x5b8e4e(), this[_0x336dc9(0x10d9)] = null, this['_intensity'] = 0x0, this[_0x336dc9(0x10da)] = 0x1, this['_softKnee'] = 0.5, this[_0x336dc9(0x10db)] = 0x7, this[_0x336dc9(0x10dc)] = 0x0, this[_0x336dc9(0x10dd)] = 0x0, this[_0x336dc9(0x10de)] = new _0x5b8e4e(), this[_0x336dc9(0x10df)] = new _0x5b8e4e(), this[_0x336dc9(0x10e0)] = 0xffc0, this[_0x336dc9(0x46f)] = new _0x441c6d(0x1, 0x1, 0x1, 0x1), this[_0x336dc9(0x10e1)] = !0x1, this[_0x336dc9(0x10e2)] = null, this[_0x336dc9(0x509)] = _0x3a9f31['find'](_0x336dc9(0xfde)), this['_pyramid'] = new Array(0x2 * _0x3e94a1['MAXPYRAMIDSIZE']);
        }
        get ['intensity']() {
            var _0x1bf969 = _0x6027f5;
            return this[_0x1bf969(0x926)];
        }
        set [_0x6027f5(0x927)](_0x3d21a8) {
            var _0x4deff6 = _0x6027f5;
            this[_0x4deff6(0x926)] = Math[_0x4deff6(0x20c)](_0x3d21a8, 0x0);
        }
        get [_0x6027f5(0x10e3)]() {
            var _0x1849d8 = _0x6027f5;
            return this[_0x1849d8(0x10da)];
        }
        set ['threshold'](_0x1bb7fe) {
            var _0xef3d86 = _0x6027f5;
            this[_0xef3d86(0x10da)] = Math[_0xef3d86(0x20c)](_0x1bb7fe, 0x0);
        }
        get [_0x6027f5(0x10e4)]() {
            var _0x373fd8 = _0x6027f5;
            return this[_0x373fd8(0x10e5)];
        }
        set [_0x6027f5(0x10e4)](_0x4137de) {
            var _0x1208f5 = _0x6027f5;
            this[_0x1208f5(0x10e5)] = Math[_0x1208f5(0x212)](Math[_0x1208f5(0x20c)](_0x4137de, 0x0), 0x1);
        }
        get ['diffusion']() {
            var _0x4a7cce = _0x6027f5;
            return this[_0x4a7cce(0x10db)];
        }
        set [_0x6027f5(0x10e6)](_0x705e56) {
            var _0xc4349e = _0x6027f5;
            this[_0xc4349e(0x10db)] = Math[_0xc4349e(0x212)](Math[_0xc4349e(0x20c)](_0x705e56, 0x1), 0xa);
        }
        get [_0x6027f5(0x10e7)]() {
            return this['_anamorphicRatio'];
        }
        set [_0x6027f5(0x10e7)](_0x9390ec) {
            var _0x2ff678 = _0x6027f5;
            this[_0x2ff678(0x10dc)] = Math[_0x2ff678(0x212)](Math[_0x2ff678(0x20c)](_0x9390ec, -0x1), 0x1);
        }
        get [_0x6027f5(0x10e8)]() {
            return this['_dirtIntensity'];
        }
        set ['dirtIntensity'](_0x1938ed) {
            var _0x3b0217 = _0x6027f5;
            this[_0x3b0217(0x10dd)] = Math[_0x3b0217(0x20c)](_0x1938ed, 0x0);
        }
        [_0x6027f5(0x4ff)](_0x563ec0) {
            var _0x3f7d87 = _0x6027f5, _0x9872b5 = _0x563ec0['command'], _0x150ed7 = _0x563ec0[_0x3f7d87(0x64c)][_0x3f7d87(0x564)];
            this[_0x3f7d87(0x55b)][_0x3f7d87(0x4ac)](_0x3e94a1[_0x3f7d87(0x65d)], _0x387b86[_0x3f7d87(0x2de)][_0x3f7d87(0x65e)]);
            var _0x115d60, _0x39bfd7 = this[_0x3f7d87(0x10dc)], _0x417929 = _0x39bfd7 < 0x0 ? -_0x39bfd7 : 0x0, _0x5b4453 = _0x39bfd7 > 0x0 ? _0x39bfd7 : 0x0, _0x4373d2 = Math[_0x3f7d87(0x24e)](_0x150ed7[_0x3f7d87(0x313)] / (0x2 - _0x417929)), _0x316820 = Math[_0x3f7d87(0x24e)](_0x150ed7[_0x3f7d87(0x439)] / (0x2 - _0x5b4453)), _0x224b5e = Math[_0x3f7d87(0x20c)](_0x4373d2, _0x316820);
            _0x115d60 = Math[_0x3f7d87(0x84f)](_0x224b5e) + this['_diffusion'] - 0xa;
            var _0x138ec8 = Math['floor'](_0x115d60), _0x4ee106 = Math['min'](Math[_0x3f7d87(0x20c)](_0x138ec8, 0x1), _0x3e94a1['MAXPYRAMIDSIZE']), _0x409d97 = 0.5 + _0x115d60 - _0x138ec8;
            this[_0x3f7d87(0x55b)][_0x3f7d87(0x4a3)](_0x3e94a1[_0x3f7d87(0x10e9)], _0x409d97);
            var _0x5d2d28 = _0x441c6d[_0x3f7d87(0x807)](this[_0x3f7d87(0x10e3)]), _0x2138b1 = _0x5d2d28 * this[_0x3f7d87(0x10e5)] + 0.00001;
            this['_shaderThreshold'][_0x3f7d87(0x1f8)](_0x5d2d28, _0x5d2d28 - _0x2138b1, 0x2 * _0x2138b1, 0.25 / _0x2138b1), this['_shaderData'][_0x3f7d87(0x4a8)](_0x3e94a1['SHADERVALUE_THRESHOLD'], this['_shaderThreshold']);
            var _0x3191b4 = _0x441c6d[_0x3f7d87(0x807)](this[_0x3f7d87(0x10e0)]);
            this[_0x3f7d87(0x10d8)][_0x3f7d87(0x1f8)](_0x3191b4, 0x0, 0x0, 0x0), this[_0x3f7d87(0x55b)]['setVector'](_0x3e94a1[_0x3f7d87(0x10ea)], this[_0x3f7d87(0x10d8)]);
            for (var _0x30d72c = this['fastMode'] ? 0x1 : 0x0, _0x349f0c = _0x563ec0['source'], _0x3471a2 = 0x0; _0x3471a2 < _0x4ee106; _0x3471a2++) {
                var _0x1263c0 = 0x2 * _0x3471a2, _0x4ac8d0 = _0x1263c0 + 0x1, _0x45a160 = 0x0 == _0x3471a2 ? _0x3e94a1[_0x3f7d87(0x10eb)] + _0x30d72c : _0x3e94a1['SUBSHADER_DOWNSAMPLE13'] + _0x30d72c, _0x29f240 = _0x26547d[_0x3f7d87(0x3ef)](_0x4373d2, _0x316820, _0x387b86[_0x3f7d87(0x314)][_0x3f7d87(0x2da)], _0x387b86[_0x3f7d87(0x3e4)]['DEPTHSTENCIL_NONE']);
                if (_0x29f240[_0x3f7d87(0x2e0)] = _0x387b86['FilterMode']['Bilinear'], this['_pyramid'][_0x1263c0] = _0x29f240, _0x3471a2 !== _0x4ee106 - 0x1) {
                    var _0x3cee74 = _0x26547d[_0x3f7d87(0x3ef)](_0x4373d2, _0x316820, _0x387b86[_0x3f7d87(0x314)][_0x3f7d87(0x2da)], _0x387b86['RenderTextureDepthFormat'][_0x3f7d87(0x10ec)]);
                    _0x3cee74['filterMode'] = _0x387b86['FilterMode'][_0x3f7d87(0x94d)], this[_0x3f7d87(0x10d9)][_0x4ac8d0] = _0x3cee74;
                }
                _0x9872b5[_0x3f7d87(0x10ed)](_0x349f0c, _0x29f240, null, this[_0x3f7d87(0x509)], this['_shaderData'], _0x45a160), _0x349f0c = _0x29f240, _0x4373d2 = Math[_0x3f7d87(0x20c)](Math[_0x3f7d87(0x24e)](_0x4373d2 / 0x2), 0x1), _0x316820 = Math['max'](Math[_0x3f7d87(0x24e)](_0x316820 / 0x2), 0x1);
            }
            var _0x48f56e = this[_0x3f7d87(0x10d9)][0x2 * (_0x4ee106 - 0x1)];
            for (_0x3471a2 = _0x4ee106 - 0x2; _0x3471a2 >= 0x0; _0x3471a2--)
                _0x4ac8d0 = (_0x1263c0 = 0x2 * _0x3471a2) + 0x1, _0x29f240 = this['_pyramid'][_0x1263c0], _0x3cee74 = this[_0x3f7d87(0x10d9)][_0x4ac8d0], _0x9872b5[_0x3f7d87(0x634)](this['_shaderData'], _0x3e94a1[_0x3f7d87(0x663)], _0x29f240), _0x9872b5[_0x3f7d87(0x10ed)](_0x48f56e, _0x3cee74, null, this[_0x3f7d87(0x509)], this[_0x3f7d87(0x55b)], _0x3e94a1[_0x3f7d87(0x10ee)] + _0x30d72c), _0x48f56e = _0x3cee74;
            var _0x41c903 = this['_linearColor'];
            this[_0x3f7d87(0x46f)]['toLinear'](_0x41c903);
            var _0x569d5f = Math['pow'](0x2, this[_0x3f7d87(0x926)] / 0xa) - 0x1, _0x2241f8 = this[_0x3f7d87(0x10de)];
            this[_0x3f7d87(0x10de)][_0x3f7d87(0x1f8)](_0x409d97, _0x569d5f, this[_0x3f7d87(0x10dd)], _0x4ee106);
            var _0x729961 = this['dirtTexture'] ? this[_0x3f7d87(0x10e2)] : _0x387b86[_0x3f7d87(0x2de)][_0x3f7d87(0xa16)], _0x2a1684 = _0x729961[_0x3f7d87(0x313)] / _0x729961[_0x3f7d87(0x439)], _0x116114 = _0x150ed7[_0x3f7d87(0x313)] / _0x150ed7[_0x3f7d87(0x439)], _0x567280 = this[_0x3f7d87(0x10df)];
            _0x2a1684 > _0x116114 ? _0x567280['setValue'](_0x116114 / _0x2a1684, 0x1, 0.5 * (0x1 - _0x567280['x']), 0x0) : _0x2a1684 < _0x116114 && _0x567280[_0x3f7d87(0x1f8)](0x1, _0x2a1684 / _0x116114, 0x0, 0.5 * (0x1 - _0x567280['y']));
            var _0x58873c = _0x563ec0[_0x3f7d87(0x64d)];
            for (this[_0x3f7d87(0x10e1)] ? _0x58873c['addDefine'](_0x1f6982['SHADERDEFINE_BLOOM_LOW']) : _0x58873c[_0x3f7d87(0x49a)](_0x1f6982[_0x3f7d87(0x656)]), this[_0x3f7d87(0x10d7)][_0x3f7d87(0x1f8)](0x1 / _0x48f56e[_0x3f7d87(0x313)], 0x1 / _0x48f56e['height'], _0x48f56e[_0x3f7d87(0x313)], _0x48f56e[_0x3f7d87(0x439)]), _0x58873c[_0x3f7d87(0x4a8)](_0x1f6982[_0x3f7d87(0x10ef)], _0x567280), _0x58873c[_0x3f7d87(0x4a8)](_0x1f6982[_0x3f7d87(0x669)], _0x2241f8), _0x58873c[_0x3f7d87(0x4a8)](_0x1f6982[_0x3f7d87(0x66b)], new _0x5b8e4e(_0x41c903['r'], _0x41c903['g'], _0x41c903['b'], _0x41c903['a'])), _0x58873c[_0x3f7d87(0x4ac)](_0x1f6982['SHADERVALUE_BLOOM_DIRTTEX'], _0x729961), _0x58873c['setTexture'](_0x1f6982[_0x3f7d87(0x663)], _0x48f56e), _0x58873c[_0x3f7d87(0x4a8)](_0x1f6982[_0x3f7d87(0x10f0)], this[_0x3f7d87(0x10d7)]), _0x3471a2 = 0x0; _0x3471a2 < _0x4ee106; _0x3471a2++)
                _0x4ac8d0 = (_0x1263c0 = 0x2 * _0x3471a2) + 0x1, _0x26547d[_0x3f7d87(0x3f4)](this[_0x3f7d87(0x10d9)][_0x1263c0]), 0x0 !== _0x3471a2 && _0x3471a2 !== _0x4ee106 - 0x1 && _0x26547d[_0x3f7d87(0x3f4)](this[_0x3f7d87(0x10d9)][_0x4ac8d0]);
            _0x563ec0[_0x3f7d87(0x64f)][_0x3f7d87(0x2ac)](_0x48f56e);
        }
    }
    _0x3e94a1[_0x6027f5(0x10f1)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x54e)), _0x3e94a1[_0x6027f5(0x65d)] = _0x3a9f31[_0x6027f5(0x553)]('u_AutoExposureTex'), _0x3e94a1[_0x6027f5(0x10e9)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x10f2)), _0x3e94a1['SHADERVALUE_THRESHOLD'] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x10f3)), _0x3e94a1[_0x6027f5(0x10ea)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x10f4)), _0x3e94a1[_0x6027f5(0x663)] = _0x3a9f31[_0x6027f5(0x553)](_0x6027f5(0x664)), _0x3e94a1[_0x6027f5(0x10eb)] = 0x0, _0x3e94a1[_0x6027f5(0x10f5)] = 0x1, _0x3e94a1[_0x6027f5(0x10f6)] = 0x2, _0x3e94a1[_0x6027f5(0x10f7)] = 0x3, _0x3e94a1['SUBSHADER_UPSAMPLETENT'] = 0x4, _0x3e94a1['SUBSHADER_UPSAMPLEBOX'] = 0x5, _0x3e94a1['MAXPYRAMIDSIZE'] = 0x10;
    class _0x54f448 {
        constructor() {
            var _0x1f0ba6 = _0x6027f5;
            this[_0x1f0ba6(0x10f8)] = !0x1;
        }
        [_0x6027f5(0x10f9)]() {
            var _0x5e3d20 = _0x6027f5, _0x148271 = _0x387b86[_0x5e3d20(0x303)][_0x5e3d20(0x304)];
            this[_0x5e3d20(0x10fa)] = new Float32Array(_0x3e3537[_0x5e3d20(0x61e)] * this[_0x5e3d20(0x4e0)]), this[_0x5e3d20(0x4f6)] = new _0x2ce777(0x4 * this[_0x5e3d20(0x10fa)][_0x5e3d20(0x205)], _0x148271[_0x5e3d20(0x620)]), this[_0x5e3d20(0x4f6)][_0x5e3d20(0x456)] = this[_0x5e3d20(0x455)];
        }
        [_0x6027f5(0x10fb)](_0x635226) {
            var _0x287282 = _0x6027f5;
            if (!this[_0x287282(0x10f8)])
                return;
            let _0x3e0250, _0x164c2b = this[_0x287282(0x10fa)], _0x25c757 = this[_0x287282(0x448)], _0x5c8d69 = this['_value'][_0x287282(0x205)], _0x512fda = this[_0x287282(0x4e0)], _0x264903 = 0x0;
            switch (this[_0x287282(0x448)] instanceof Float32Array || (_0x264903 = 0x1), _0x264903) {
            case 0x0:
                _0x164c2b[_0x287282(0x31f)](_0x25c757, 0x0);
                break;
            case 0x1:
                for (let _0xe8e3de = 0x0; _0xe8e3de < _0x5c8d69; _0xe8e3de++)
                    _0x3e0250 = _0x25c757[_0xe8e3de], _0x3e0250[_0x287282(0x1fb)](_0x164c2b, _0xe8e3de * _0x512fda);
            }
            this[_0x287282(0x4f6)][_0x287282(0x62a)](), this[_0x287282(0x4f6)][_0x287282(0x45d)](_0x164c2b['buffer'], 0x0, 0x0, 0x4 * _0x635226 * _0x512fda);
        }
    }
    (_0x4203e6 = _0x18be32['InstanceLocation'] || (_0x18be32[_0x6027f5(0x10fc)] = {}))[_0x4203e6['CUSTOME0'] = 0xc] = _0x6027f5(0x10fd), _0x4203e6[_0x4203e6[_0x6027f5(0x10fe)] = 0xd] = 'CUSTOME1', _0x4203e6[_0x4203e6[_0x6027f5(0x10ff)] = 0xe] = _0x6027f5(0x10ff), _0x4203e6[_0x4203e6[_0x6027f5(0x1100)] = 0xf] = _0x6027f5(0x1100);
    class _0x512675 {
        constructor() {
            var _0x67b716 = _0x6027f5;
            this[_0x67b716(0xa5e)] = 0x0, this['_propertyMap'] = {};
        }
        [_0x6027f5(0x1101)](_0x37c7eb, _0x18eb22, _0x35bca1, _0x181df6) {
            var _0x17e28d = _0x6027f5;
            if (_0x181df6['_vertexDeclaration'][_0x17e28d(0x4e1)][0x0][_0x17e28d(0xf79)] !== _0x37c7eb)
                throw _0x17e28d(0x1102);
            if (_0x181df6[_0x17e28d(0x513)] !== _0x18eb22)
                throw _0x17e28d(0x1103);
        }
        ['_creatProperty'](_0x229560, _0x5af997, _0x443c11, _0xd6754b, _0xf134a1) {
            var _0x487e8a = _0x6027f5, _0x4a24de = this['_propertyMap'][_0xf134a1] = new _0x54f448();
            _0x4a24de[_0x487e8a(0x513)] = _0x229560, _0x4a24de[_0x487e8a(0x448)] = _0x5af997, _0x4a24de[_0x487e8a(0x455)] = new _0x4b2139(_0x443c11, [new _0x25649b(0x0, _0xd6754b, _0xf134a1)]), _0x4a24de['_isNeedUpdate'] = !0x0, _0x4a24de[_0x487e8a(0x4e0)] = _0x443c11 / 0x4, _0x4a24de[_0x487e8a(0x10f9)]();
        }
        [_0x6027f5(0x1104)](_0x2dd629, _0x15e3f3, _0x4c0d2d) {
            var _0x374b95 = _0x6027f5, _0x313e04 = this[_0x374b95(0x628)][_0x4c0d2d];
            _0x313e04 ? (this['_checkPropertyLegal'](_0x53b5cc[_0x374b95(0x4fd)], _0x2dd629, _0x4c0d2d, _0x313e04), _0x313e04[_0x374b95(0x448)] = _0x15e3f3, _0x313e04[_0x374b95(0x10f8)] = !0x0) : this[_0x374b95(0x1105)](_0x2dd629, _0x15e3f3, 0x10, _0x53b5cc[_0x374b95(0x4fd)], _0x4c0d2d);
        }
        [_0x6027f5(0x1106)](_0x2a64b5, _0x592d1f, _0x4bcdb2) {
            var _0x454ea2 = _0x6027f5, _0x4b70e5 = this[_0x454ea2(0x628)][_0x4bcdb2];
            _0x4b70e5 ? (this['_checkPropertyLegal'](_0x53b5cc[_0x454ea2(0x46b)], _0x2a64b5, _0x4bcdb2, _0x4b70e5), _0x4b70e5['_value'] = _0x592d1f, _0x4b70e5[_0x454ea2(0x10f8)] = !0x0) : this[_0x454ea2(0x1105)](_0x2a64b5, _0x592d1f, 0xc, _0x53b5cc[_0x454ea2(0x46b)], _0x4bcdb2);
        }
        [_0x6027f5(0x1107)](_0x1d1364, _0x1e9ac9, _0xf467f6) {
            var _0x29e5ae = _0x6027f5, _0x84de0 = this[_0x29e5ae(0x628)][_0xf467f6];
            _0x84de0 ? (this['_checkPropertyLegal'](_0x53b5cc['Vector2'], _0x1d1364, _0xf467f6, _0x84de0), _0x84de0[_0x29e5ae(0x448)] = _0x1e9ac9, _0x84de0[_0x29e5ae(0x10f8)] = !0x0) : this[_0x29e5ae(0x1105)](_0x1d1364, _0x1e9ac9, 0x8, _0x53b5cc[_0x29e5ae(0x575)], _0xf467f6);
        }
        [_0x6027f5(0x1108)](_0x3e909c, _0x3e7d56, _0x3c7f3f) {
            var _0x544d4f = _0x6027f5, _0x3767e8 = this[_0x544d4f(0x628)][_0x3c7f3f];
            _0x3767e8 ? (this[_0x544d4f(0x1101)](_0x53b5cc[_0x544d4f(0x468)], _0x3e909c, _0x3c7f3f, _0x3767e8), _0x3767e8['_value'] = _0x3e7d56, _0x3767e8[_0x544d4f(0x10f8)] = !0x0) : this[_0x544d4f(0x1105)](_0x3e909c, _0x3e7d56, 0x4, _0x53b5cc['Single'], _0x3c7f3f);
        }
        [_0x6027f5(0x1109)](_0x5667a2) {
            var _0x13d626 = _0x6027f5, _0xe8b7a0 = this['_propertyMap'][_0x5667a2];
            return _0xe8b7a0 ? _0xe8b7a0[_0x13d626(0x448)] : null;
        }
        [_0x6027f5(0x44c)]() {
            this['_propertyMap'] = {};
        }
    }
    _0x512675[_0x6027f5(0x110a)] = 0x0, _0x512675[_0x6027f5(0x110b)] = 0x1;
    class _0x117c86 {
        constructor(_0x5702f6 = 0x0, _0x317953 = 0x0, _0x6aeb35 = 0x0, _0x526644 = 0x0) {
            var _0x240e8b = _0x6027f5, _0x202d7d = this[_0x240e8b(0x1fe)] = new Float32Array(0x4);
            _0x202d7d[0x0] = _0x5702f6, _0x202d7d[0x1] = _0x317953, _0x202d7d[0x2] = _0x6aeb35, _0x202d7d[0x3] = _0x526644;
        }
        get ['x']() {
            var _0x594e56 = _0x6027f5;
            return this[_0x594e56(0x1fe)][0x0];
        }
        set ['x'](_0x2ae78a) {
            var _0xd1ad2b = _0x6027f5;
            this[_0xd1ad2b(0x1fe)][0x0] = _0x2ae78a;
        }
        get ['y']() {
            var _0xcf2cbf = _0x6027f5;
            return this[_0xcf2cbf(0x1fe)][0x1];
        }
        set ['y'](_0x26a60a) {
            var _0x35d462 = _0x6027f5;
            this[_0x35d462(0x1fe)][0x1] = _0x26a60a;
        }
        get ['z']() {
            var _0x2c5e6b = _0x6027f5;
            return this[_0x2c5e6b(0x1fe)][0x2];
        }
        set ['z'](_0x4b6e38) {
            var _0x41b96e = _0x6027f5;
            this[_0x41b96e(0x1fe)][0x2] = _0x4b6e38;
        }
        get ['w']() {
            var _0x284b2d = _0x6027f5;
            return this[_0x284b2d(0x1fe)][0x3];
        }
        set ['w'](_0x1a85ed) {
            var _0x2e7249 = _0x6027f5;
            this[_0x2e7249(0x1fe)][0x3] = _0x1a85ed;
        }
        [_0x6027f5(0x1fa)](_0x534a47, _0x10152f = 0x0) {
            var _0x34bf54 = _0x6027f5;
            this[_0x34bf54(0x1fe)][0x0] = _0x534a47[_0x10152f + 0x0], this[_0x34bf54(0x1fe)][0x1] = _0x534a47[_0x10152f + 0x1], this['elements'][0x2] = _0x534a47[_0x10152f + 0x2], this[_0x34bf54(0x1fe)][0x3] = _0x534a47[_0x10152f + 0x3];
        }
        ['cloneTo'](_0x3c9f0b) {
            var _0x1815a3 = _0x6027f5, _0x3fd673 = _0x3c9f0b[_0x1815a3(0x1fe)], _0x4f722a = this[_0x1815a3(0x1fe)];
            _0x3fd673[0x0] = _0x4f722a[0x0], _0x3fd673[0x1] = _0x4f722a[0x1], _0x3fd673[0x2] = _0x4f722a[0x2], _0x3fd673[0x3] = _0x4f722a[0x3];
        }
        ['clone']() {
            var _0x307fe4 = _0x6027f5, _0x58cce5 = new _0x117c86();
            return this[_0x307fe4(0x1fc)](_0x58cce5), _0x58cce5;
        }
        static [_0x6027f5(0x202)](_0x4baaf9, _0x53790a, _0x2b002d, _0x2aa2e5) {
            var _0x2fcb5d = _0x6027f5, _0x3d67b0 = _0x2aa2e5['elements'], _0x1c6ec9 = _0x4baaf9[_0x2fcb5d(0x1fe)], _0xe1abdd = _0x53790a[_0x2fcb5d(0x1fe)], _0x475b80 = _0x1c6ec9[0x0], _0xfe6d82 = _0x1c6ec9[0x1], _0x4fec94 = _0x1c6ec9[0x2], _0x2b62e8 = _0x1c6ec9[0x3];
            _0x3d67b0[0x0] = _0x475b80 + _0x2b002d * (_0xe1abdd[0x0] - _0x475b80), _0x3d67b0[0x1] = _0xfe6d82 + _0x2b002d * (_0xe1abdd[0x1] - _0xfe6d82), _0x3d67b0[0x2] = _0x4fec94 + _0x2b002d * (_0xe1abdd[0x2] - _0x4fec94), _0x3d67b0[0x3] = _0x2b62e8 + _0x2b002d * (_0xe1abdd[0x3] - _0x2b62e8);
        }
        static ['transformByM4x4'](_0x360555, _0x29e45e, _0x2340d7) {
            var _0x376536 = _0x6027f5, _0x398ec3 = _0x360555[_0x376536(0x1fe)], _0x4f51e9 = _0x398ec3[0x0], _0x577400 = _0x398ec3[0x1], _0x492866 = _0x398ec3[0x2], _0x562032 = _0x398ec3[0x3], _0x4d0626 = _0x29e45e[_0x376536(0x1fe)], _0x5eca8d = _0x2340d7[_0x376536(0x1fe)];
            _0x5eca8d[0x0] = _0x4f51e9 * _0x4d0626[0x0] + _0x577400 * _0x4d0626[0x4] + _0x492866 * _0x4d0626[0x8] + _0x562032 * _0x4d0626[0xc], _0x5eca8d[0x1] = _0x4f51e9 * _0x4d0626[0x1] + _0x577400 * _0x4d0626[0x5] + _0x492866 * _0x4d0626[0x9] + _0x562032 * _0x4d0626[0xd], _0x5eca8d[0x2] = _0x4f51e9 * _0x4d0626[0x2] + _0x577400 * _0x4d0626[0x6] + _0x492866 * _0x4d0626[0xa] + _0x562032 * _0x4d0626[0xe], _0x5eca8d[0x3] = _0x4f51e9 * _0x4d0626[0x3] + _0x577400 * _0x4d0626[0x7] + _0x492866 * _0x4d0626[0xb] + _0x562032 * _0x4d0626[0xf];
        }
        static [_0x6027f5(0x218)](_0x2dd8f4, _0x1e8ac8) {
            var _0x427bee = _0x6027f5, _0x211826 = _0x2dd8f4[_0x427bee(0x1fe)], _0x44c27 = _0x1e8ac8[_0x427bee(0x1fe)];
            return _0x255128[_0x427bee(0x204)](Math[_0x427bee(0x1f0)](_0x211826[0x0]), Math[_0x427bee(0x1f0)](_0x44c27[0x0])) && _0x255128[_0x427bee(0x204)](Math[_0x427bee(0x1f0)](_0x211826[0x1]), Math[_0x427bee(0x1f0)](_0x44c27[0x1])) && _0x255128[_0x427bee(0x204)](Math[_0x427bee(0x1f0)](_0x211826[0x2]), Math[_0x427bee(0x1f0)](_0x44c27[0x2])) && _0x255128[_0x427bee(0x204)](Math['abs'](_0x211826[0x3]), Math[_0x427bee(0x1f0)](_0x44c27[0x3]));
        }
        [_0x6027f5(0x205)]() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSquared']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static [_0x6027f5(0x214)](_0x5a62b4, _0x4e0a8f) {
            var _0x5ca832 = _0x6027f5, _0x313b12 = _0x5a62b4[_0x5ca832(0x1fe)], _0x12e6e7 = _0x4e0a8f[_0x5ca832(0x1fe)], _0x1daa5d = _0x5a62b4['length']();
            _0x1daa5d > 0x0 && (_0x12e6e7[0x0] = _0x313b12[0x0] * _0x1daa5d, _0x12e6e7[0x1] = _0x313b12[0x1] * _0x1daa5d, _0x12e6e7[0x2] = _0x313b12[0x2] * _0x1daa5d, _0x12e6e7[0x3] = _0x313b12[0x3] * _0x1daa5d);
        }
        static [_0x6027f5(0x207)](_0x3a17a3, _0x5b691a, _0x50e16c) {
            var _0x7bafa5 = _0x6027f5, _0x20af26 = _0x50e16c['elements'], _0x5b64ce = _0x3a17a3['elements'], _0x5039fa = _0x5b691a[_0x7bafa5(0x1fe)];
            _0x20af26[0x0] = _0x5b64ce[0x0] + _0x5039fa[0x0], _0x20af26[0x1] = _0x5b64ce[0x1] + _0x5039fa[0x1], _0x20af26[0x2] = _0x5b64ce[0x2] + _0x5039fa[0x2], _0x20af26[0x3] = _0x5b64ce[0x3] + _0x5039fa[0x3];
        }
        static [_0x6027f5(0x28a)](_0x4c4ec4, _0x5d6a3a, _0x5337b2) {
            var _0x1c7217 = _0x6027f5, _0x2081ad = _0x5337b2[_0x1c7217(0x1fe)], _0x3ab62e = _0x4c4ec4['elements'], _0x1747f9 = _0x5d6a3a[_0x1c7217(0x1fe)];
            _0x2081ad[0x0] = _0x3ab62e[0x0] - _0x1747f9[0x0], _0x2081ad[0x1] = _0x3ab62e[0x1] - _0x1747f9[0x1], _0x2081ad[0x2] = _0x3ab62e[0x2] - _0x1747f9[0x2], _0x2081ad[0x3] = _0x3ab62e[0x3] - _0x1747f9[0x3];
        }
        static [_0x6027f5(0x27b)](_0x139492, _0x5e417e, _0x701875) {
            var _0x15805d = _0x6027f5, _0x399f41 = _0x701875[_0x15805d(0x1fe)], _0x4389a6 = _0x139492[_0x15805d(0x1fe)], _0x1e9977 = _0x5e417e[_0x15805d(0x1fe)];
            _0x399f41[0x0] = _0x4389a6[0x0] * _0x1e9977[0x0], _0x399f41[0x1] = _0x4389a6[0x1] * _0x1e9977[0x1], _0x399f41[0x2] = _0x4389a6[0x2] * _0x1e9977[0x2], _0x399f41[0x3] = _0x4389a6[0x3] * _0x1e9977[0x3];
        }
        static [_0x6027f5(0x1f9)](_0x31a628, _0x440703, _0x452ffd) {
            var _0x1acd2a = _0x6027f5, _0x236b40 = _0x452ffd['elements'], _0x159192 = _0x31a628[_0x1acd2a(0x1fe)];
            _0x236b40[0x0] = _0x159192[0x0] * _0x440703, _0x236b40[0x1] = _0x159192[0x1] * _0x440703, _0x236b40[0x2] = _0x159192[0x2] * _0x440703, _0x236b40[0x3] = _0x159192[0x3] * _0x440703;
        }
        static [_0x6027f5(0x208)](_0x22cbe4, _0x5926f2, _0x51414c, _0x5209f9) {
            var _0x512325 = _0x6027f5, _0x360ec6 = _0x22cbe4[_0x512325(0x1fe)], _0x166ba3 = _0x360ec6[0x0], _0x1f5ad3 = _0x360ec6[0x1], _0x2c338a = _0x360ec6[0x2], _0xe4a47 = _0x360ec6[0x3], _0x2cc7a5 = _0x5926f2[_0x512325(0x1fe)], _0x2b176e = _0x2cc7a5[0x0], _0x1940fe = _0x2cc7a5[0x1], _0x3c3306 = _0x2cc7a5[0x2], _0x448d87 = _0x2cc7a5[0x3], _0x4404e2 = _0x51414c[_0x512325(0x1fe)], _0x4ec678 = _0x4404e2[0x0], _0x2a5716 = _0x4404e2[0x1], _0x5da7a7 = _0x4404e2[0x2], _0x30b21d = _0x4404e2[0x3], _0xbf2c39 = _0x5209f9[_0x512325(0x1fe)];
            _0x166ba3 = (_0x166ba3 = _0x166ba3 > _0x4ec678 ? _0x4ec678 : _0x166ba3) < _0x2b176e ? _0x2b176e : _0x166ba3, _0x1f5ad3 = (_0x1f5ad3 = _0x1f5ad3 > _0x2a5716 ? _0x2a5716 : _0x1f5ad3) < _0x1940fe ? _0x1940fe : _0x1f5ad3, _0x2c338a = (_0x2c338a = _0x2c338a > _0x5da7a7 ? _0x5da7a7 : _0x2c338a) < _0x3c3306 ? _0x3c3306 : _0x2c338a, _0xe4a47 = (_0xe4a47 = _0xe4a47 > _0x30b21d ? _0x30b21d : _0xe4a47) < _0x448d87 ? _0x448d87 : _0xe4a47, _0xbf2c39[0x0] = _0x166ba3, _0xbf2c39[0x1] = _0x1f5ad3, _0xbf2c39[0x2] = _0x2c338a, _0xbf2c39[0x3] = _0xe4a47;
        }
        static [_0x6027f5(0x209)](_0x1cd3a9, _0x3bfaac) {
            var _0xce9fe8 = _0x6027f5, _0x779158 = _0x1cd3a9[_0xce9fe8(0x1fe)], _0x406cae = _0x3bfaac[_0xce9fe8(0x1fe)], _0x48e333 = _0x779158[0x0] - _0x406cae[0x0], _0x48a8aa = _0x779158[0x1] - _0x406cae[0x1], _0x413b55 = _0x779158[0x2] - _0x406cae[0x2], _0x495291 = _0x779158[0x3] - _0x406cae[0x3];
            return _0x48e333 * _0x48e333 + _0x48a8aa * _0x48a8aa + _0x413b55 * _0x413b55 + _0x495291 * _0x495291;
        }
        static [_0x6027f5(0x20a)](_0x4b9fb6, _0xcf660f) {
            var _0x149411 = _0x6027f5, _0x2a43dd = _0x4b9fb6['elements'], _0x3cedb2 = _0xcf660f[_0x149411(0x1fe)], _0x28fc8d = _0x2a43dd[0x0] - _0x3cedb2[0x0], _0x348f24 = _0x2a43dd[0x1] - _0x3cedb2[0x1], _0x1f5a05 = _0x2a43dd[0x2] - _0x3cedb2[0x2], _0x2098b2 = _0x2a43dd[0x3] - _0x3cedb2[0x3];
            return Math['sqrt'](_0x28fc8d * _0x28fc8d + _0x348f24 * _0x348f24 + _0x1f5a05 * _0x1f5a05 + _0x2098b2 * _0x2098b2);
        }
        static [_0x6027f5(0x20b)](_0xd27060, _0x4ff2cf) {
            var _0x21b355 = _0x6027f5, _0x2fa873 = _0xd27060[_0x21b355(0x1fe)], _0x1e828d = _0x4ff2cf[_0x21b355(0x1fe)];
            return _0x2fa873[0x0] * _0x1e828d[0x0] + _0x2fa873[0x1] * _0x1e828d[0x1] + _0x2fa873[0x2] * _0x1e828d[0x2] + _0x2fa873[0x3] * _0x1e828d[0x3];
        }
        static [_0x6027f5(0x212)](_0x2af20b, _0x940b2c, _0x32dcc6) {
            var _0x27424c = _0x6027f5, _0x8d0866 = _0x32dcc6[_0x27424c(0x1fe)], _0x152fa5 = _0x2af20b[_0x27424c(0x1fe)], _0x4684d2 = _0x940b2c['elements'];
            _0x8d0866[0x0] = Math['min'](_0x152fa5[0x0], _0x4684d2[0x0]), _0x8d0866[0x1] = Math[_0x27424c(0x212)](_0x152fa5[0x1], _0x4684d2[0x1]), _0x8d0866[0x2] = Math[_0x27424c(0x212)](_0x152fa5[0x2], _0x4684d2[0x2]), _0x8d0866[0x3] = Math[_0x27424c(0x212)](_0x152fa5[0x3], _0x4684d2[0x3]);
        }
        static [_0x6027f5(0x20c)](_0x58453e, _0x8c2969, _0x5b9579) {
            var _0x57fb55 = _0x6027f5, _0x2bd815 = _0x5b9579[_0x57fb55(0x1fe)], _0x1967b4 = _0x58453e[_0x57fb55(0x1fe)], _0x173ccd = _0x8c2969[_0x57fb55(0x1fe)];
            _0x2bd815[0x0] = Math['max'](_0x1967b4[0x0], _0x173ccd[0x0]), _0x2bd815[0x1] = Math[_0x57fb55(0x20c)](_0x1967b4[0x1], _0x173ccd[0x1]), _0x2bd815[0x2] = Math[_0x57fb55(0x20c)](_0x1967b4[0x2], _0x173ccd[0x2]), _0x2bd815[0x3] = Math[_0x57fb55(0x20c)](_0x1967b4[0x3], _0x173ccd[0x3]);
        }
    }
    _0x117c86['ZERO'] = new _0x117c86(), _0x117c86[_0x6027f5(0x201)] = new _0x117c86(0x1, 0x1, 0x1, 0x1), _0x117c86[_0x6027f5(0x20f)] = new _0x117c86(0x1, 0x0, 0x0, 0x0), _0x117c86['UnitY'] = new _0x117c86(0x0, 0x1, 0x0, 0x0), _0x117c86[_0x6027f5(0x210)] = new _0x117c86(0x0, 0x0, 0x1, 0x0), _0x117c86['UnitW'] = new _0x117c86(0x0, 0x0, 0x0, 0x1);
    class _0x6c1d15 {
        constructor(_0x20f652 = 0x0, _0x3d5a76 = 0x0, _0x1df3c7 = 0x0, _0x417c8c = null) {
            var _0x5933c3 = _0x6027f5, _0x34e34e;
            _0x34e34e = _0x417c8c || new Float32Array(0x3), this[_0x5933c3(0x1fe)] = _0x34e34e, _0x34e34e[0x0] = _0x20f652, _0x34e34e[0x1] = _0x3d5a76, _0x34e34e[0x2] = _0x1df3c7;
        }
        static [_0x6027f5(0x209)](_0x1c5309, _0x289a17) {
            var _0x5be185 = _0x6027f5, _0x4b78c0 = _0x1c5309[_0x5be185(0x1fe)], _0x27d259 = _0x289a17['elements'], _0x4995cc = _0x4b78c0[0x0] - _0x27d259[0x0], _0x3b16d8 = _0x4b78c0[0x1] - _0x27d259[0x1], _0x2e888d = _0x4b78c0[0x2] - _0x27d259[0x2];
            return _0x4995cc * _0x4995cc + _0x3b16d8 * _0x3b16d8 + _0x2e888d * _0x2e888d;
        }
        static [_0x6027f5(0x20a)](_0x2a3500, _0x1335ee) {
            var _0x596edd = _0x6027f5, _0x109915 = _0x2a3500[_0x596edd(0x1fe)], _0x1c68aa = _0x1335ee[_0x596edd(0x1fe)], _0xc50b41 = _0x109915[0x0] - _0x1c68aa[0x0], _0x24d7a1 = _0x109915[0x1] - _0x1c68aa[0x1], _0x274e61 = _0x109915[0x2] - _0x1c68aa[0x2];
            return Math[_0x596edd(0x1f3)](_0xc50b41 * _0xc50b41 + _0x24d7a1 * _0x24d7a1 + _0x274e61 * _0x274e61);
        }
        static [_0x6027f5(0x212)](_0x2d0eb2, _0x11cb0f, _0x5e215c) {
            var _0x1f106c = _0x6027f5, _0x19e1c0 = _0x5e215c[_0x1f106c(0x1fe)], _0x8217f8 = _0x2d0eb2[_0x1f106c(0x1fe)], _0x4085d7 = _0x11cb0f[_0x1f106c(0x1fe)];
            _0x19e1c0[0x0] = Math['min'](_0x8217f8[0x0], _0x4085d7[0x0]), _0x19e1c0[0x1] = Math[_0x1f106c(0x212)](_0x8217f8[0x1], _0x4085d7[0x1]), _0x19e1c0[0x2] = Math['min'](_0x8217f8[0x2], _0x4085d7[0x2]);
        }
        static [_0x6027f5(0x20c)](_0x118e5d, _0x5b8e71, _0x53f240) {
            var _0x4861bd = _0x6027f5, _0x688b5c = _0x53f240[_0x4861bd(0x1fe)], _0x419c29 = _0x118e5d['elements'], _0x5f3656 = _0x5b8e71[_0x4861bd(0x1fe)];
            _0x688b5c[0x0] = Math[_0x4861bd(0x20c)](_0x419c29[0x0], _0x5f3656[0x0]), _0x688b5c[0x1] = Math[_0x4861bd(0x20c)](_0x419c29[0x1], _0x5f3656[0x1]), _0x688b5c[0x2] = Math[_0x4861bd(0x20c)](_0x419c29[0x2], _0x5f3656[0x2]);
        }
        static ['transformQuat'](_0x5529c6, _0x27af90, _0x4970e5) {
            var _0x3831f0 = _0x6027f5, _0x4988b7 = _0x4970e5[_0x3831f0(0x1fe)], _0x51339b = _0x5529c6['elements'], _0x3bb649 = _0x27af90['elements'], _0x33ce10 = _0x51339b[0x0], _0x59abcb = _0x51339b[0x1], _0x5c1b9d = _0x51339b[0x2], _0x16b67d = _0x3bb649[0x0], _0x239d98 = _0x3bb649[0x1], _0xad1259 = _0x3bb649[0x2], _0x432b12 = _0x3bb649[0x3], _0x26c2fe = _0x432b12 * _0x33ce10 + _0x239d98 * _0x5c1b9d - _0xad1259 * _0x59abcb, _0x1e3ee0 = _0x432b12 * _0x59abcb + _0xad1259 * _0x33ce10 - _0x16b67d * _0x5c1b9d, _0x5e6033 = _0x432b12 * _0x5c1b9d + _0x16b67d * _0x59abcb - _0x239d98 * _0x33ce10, _0x4f156e = -_0x16b67d * _0x33ce10 - _0x239d98 * _0x59abcb - _0xad1259 * _0x5c1b9d;
            _0x4988b7[0x0] = _0x26c2fe * _0x432b12 + _0x4f156e * -_0x16b67d + _0x1e3ee0 * -_0xad1259 - _0x5e6033 * -_0x239d98, _0x4988b7[0x1] = _0x1e3ee0 * _0x432b12 + _0x4f156e * -_0x239d98 + _0x5e6033 * -_0x16b67d - _0x26c2fe * -_0xad1259, _0x4988b7[0x2] = _0x5e6033 * _0x432b12 + _0x4f156e * -_0xad1259 + _0x26c2fe * -_0x239d98 - _0x1e3ee0 * -_0x16b67d;
        }
        static [_0x6027f5(0x888)](_0x4af700) {
            var _0x36cb5f = _0x6027f5, _0x1a2a6c = _0x4af700[_0x36cb5f(0x1fe)], _0x73e4b0 = _0x1a2a6c[0x0], _0xf2c195 = _0x1a2a6c[0x1], _0x2a7967 = _0x1a2a6c[0x2];
            return Math[_0x36cb5f(0x1f3)](_0x73e4b0 * _0x73e4b0 + _0xf2c195 * _0xf2c195 + _0x2a7967 * _0x2a7967);
        }
        static [_0x6027f5(0x213)](_0x1fb31e) {
            var _0x2401d0 = _0x1fb31e['elements'], _0x55b755 = _0x2401d0[0x0], _0x345ad1 = _0x2401d0[0x1], _0x40c18b = _0x2401d0[0x2];
            return _0x55b755 * _0x55b755 + _0x345ad1 * _0x345ad1 + _0x40c18b * _0x40c18b;
        }
        static [_0x6027f5(0x214)](_0x2d61fa, _0x2858e5) {
            var _0x5f043a = _0x6027f5, _0x39b00a = _0x2d61fa[_0x5f043a(0x1fe)], _0x60cb9a = _0x2858e5[_0x5f043a(0x1fe)], _0x326ac3 = _0x39b00a[0x0], _0x13831f = _0x39b00a[0x1], _0x43de58 = _0x39b00a[0x2], _0x2eed99 = _0x326ac3 * _0x326ac3 + _0x13831f * _0x13831f + _0x43de58 * _0x43de58;
            _0x2eed99 > 0x0 && (_0x2eed99 = 0x1 / Math[_0x5f043a(0x1f3)](_0x2eed99), _0x60cb9a[0x0] = _0x39b00a[0x0] * _0x2eed99, _0x60cb9a[0x1] = _0x39b00a[0x1] * _0x2eed99, _0x60cb9a[0x2] = _0x39b00a[0x2] * _0x2eed99);
        }
        static [_0x6027f5(0x27b)](_0x4407ac, _0x109452, _0x31d0b8) {
            var _0x25c82b = _0x6027f5, _0x32fa5a = _0x31d0b8['elements'], _0x4803b3 = _0x4407ac[_0x25c82b(0x1fe)], _0x59a1bf = _0x109452[_0x25c82b(0x1fe)];
            _0x32fa5a[0x0] = _0x4803b3[0x0] * _0x59a1bf[0x0], _0x32fa5a[0x1] = _0x4803b3[0x1] * _0x59a1bf[0x1], _0x32fa5a[0x2] = _0x4803b3[0x2] * _0x59a1bf[0x2];
        }
        static [_0x6027f5(0x1f9)](_0x1eded0, _0x1089e0, _0x16f663) {
            var _0x10c73c = _0x6027f5, _0x4a84f = _0x16f663['elements'], _0x22cccc = _0x1eded0[_0x10c73c(0x1fe)];
            _0x4a84f[0x0] = _0x22cccc[0x0] * _0x1089e0, _0x4a84f[0x1] = _0x22cccc[0x1] * _0x1089e0, _0x4a84f[0x2] = _0x22cccc[0x2] * _0x1089e0;
        }
        static [_0x6027f5(0x202)](_0x42c779, _0x18d01c, _0x2202e9, _0x2a16c2) {
            var _0x5a3384 = _0x6027f5, _0x19edb2 = _0x2a16c2[_0x5a3384(0x1fe)], _0xd3a908 = _0x42c779[_0x5a3384(0x1fe)], _0x32b6bd = _0x18d01c[_0x5a3384(0x1fe)], _0x2a17b0 = _0xd3a908[0x0], _0x36e133 = _0xd3a908[0x1], _0x19f7eb = _0xd3a908[0x2];
            _0x19edb2[0x0] = _0x2a17b0 + _0x2202e9 * (_0x32b6bd[0x0] - _0x2a17b0), _0x19edb2[0x1] = _0x36e133 + _0x2202e9 * (_0x32b6bd[0x1] - _0x36e133), _0x19edb2[0x2] = _0x19f7eb + _0x2202e9 * (_0x32b6bd[0x2] - _0x19f7eb);
        }
        static [_0x6027f5(0x857)](_0x5f2761, _0x7b1cea, _0x55a7d8) {
            var _0x20f225 = _0x6027f5, _0x5b5c6f = _0x6c1d15[_0x20f225(0x21a)];
            _0x6c1d15[_0x20f225(0x215)](_0x5f2761, _0x7b1cea, _0x5b5c6f);
            var _0x5723bd = _0x5b5c6f[_0x20f225(0x1fe)], _0x4507e0 = _0x55a7d8['elements'];
            _0x4507e0[0x0] = _0x5723bd[0x0], _0x4507e0[0x1] = _0x5723bd[0x1], _0x4507e0[0x2] = _0x5723bd[0x2];
        }
        static [_0x6027f5(0x215)](_0x5e7f45, _0x4f6607, _0x1ce65b) {
            var _0x19f413 = _0x6027f5, _0x151b5f = _0x5e7f45[_0x19f413(0x1fe)], _0xc1c078 = _0x151b5f[0x0], _0x54931a = _0x151b5f[0x1], _0x4637e0 = _0x151b5f[0x2], _0x2bec67 = _0x4f6607[_0x19f413(0x1fe)], _0x1d6d6b = _0x1ce65b[_0x19f413(0x1fe)];
            _0x1d6d6b[0x0] = _0xc1c078 * _0x2bec67[0x0] + _0x54931a * _0x2bec67[0x4] + _0x4637e0 * _0x2bec67[0x8] + _0x2bec67[0xc], _0x1d6d6b[0x1] = _0xc1c078 * _0x2bec67[0x1] + _0x54931a * _0x2bec67[0x5] + _0x4637e0 * _0x2bec67[0x9] + _0x2bec67[0xd], _0x1d6d6b[0x2] = _0xc1c078 * _0x2bec67[0x2] + _0x54931a * _0x2bec67[0x6] + _0x4637e0 * _0x2bec67[0xa] + _0x2bec67[0xe], _0x1d6d6b[0x3] = _0xc1c078 * _0x2bec67[0x3] + _0x54931a * _0x2bec67[0x7] + _0x4637e0 * _0x2bec67[0xb] + _0x2bec67[0xf];
        }
        static [_0x6027f5(0x110c)](_0x553d2a, _0x50e24c, _0x16bae8) {
            var _0x37038a = _0x6027f5, _0x326ede = _0x553d2a[_0x37038a(0x1fe)], _0x40d7cf = _0x326ede[0x0], _0xf20179 = _0x326ede[0x1], _0x275a14 = _0x326ede[0x2], _0x578220 = _0x50e24c[_0x37038a(0x1fe)], _0x149f18 = _0x16bae8[_0x37038a(0x1fe)];
            _0x149f18[0x0] = _0x40d7cf * _0x578220[0x0] + _0xf20179 * _0x578220[0x4] + _0x275a14 * _0x578220[0x8], _0x149f18[0x1] = _0x40d7cf * _0x578220[0x1] + _0xf20179 * _0x578220[0x5] + _0x275a14 * _0x578220[0x9], _0x149f18[0x2] = _0x40d7cf * _0x578220[0x2] + _0xf20179 * _0x578220[0x6] + _0x275a14 * _0x578220[0xa];
        }
        static [_0x6027f5(0x216)](_0x2fb967, _0xd39b3f, _0x8a26c9) {
            var _0x45c3be = _0x6027f5, _0x397849 = _0x2fb967['elements'], _0x4bae2a = _0x397849[0x0], _0x106cde = _0x397849[0x1], _0x5d1da4 = _0x397849[0x2], _0x3274f3 = _0xd39b3f['elements'], _0x29db02 = _0x4bae2a * _0x3274f3[0x3] + _0x106cde * _0x3274f3[0x7] + _0x5d1da4 * _0x3274f3[0xb] + _0x3274f3[0xf], _0x357d94 = _0x8a26c9[_0x45c3be(0x1fe)];
            _0x357d94[0x0] = _0x4bae2a * _0x3274f3[0x0] + _0x106cde * _0x3274f3[0x4] + _0x5d1da4 * _0x3274f3[0x8] + _0x3274f3[0xc] / _0x29db02, _0x357d94[0x1] = _0x4bae2a * _0x3274f3[0x1] + _0x106cde * _0x3274f3[0x5] + _0x5d1da4 * _0x3274f3[0x9] + _0x3274f3[0xd] / _0x29db02, _0x357d94[0x2] = _0x4bae2a * _0x3274f3[0x2] + _0x106cde * _0x3274f3[0x6] + _0x5d1da4 * _0x3274f3[0xa] + _0x3274f3[0xe] / _0x29db02;
        }
        static [_0x6027f5(0x208)](_0x1a278e, _0x1baf3e, _0xd33222, _0x412a90) {
            var _0x21d373 = _0x6027f5, _0x549806 = _0x1a278e['elements'], _0x5b4e13 = _0x549806[0x0], _0x24e086 = _0x549806[0x1], _0x53053b = _0x549806[0x2], _0x325e62 = _0x1baf3e['elements'], _0x3b6540 = _0x325e62[0x0], _0x178e41 = _0x325e62[0x1], _0x220193 = _0x325e62[0x2], _0x2167e9 = _0xd33222[_0x21d373(0x1fe)], _0x104b6c = _0x2167e9[0x0], _0x80aee5 = _0x2167e9[0x1], _0x17d0a6 = _0x2167e9[0x2], _0x1033aa = _0x412a90[_0x21d373(0x1fe)];
            _0x5b4e13 = (_0x5b4e13 = _0x5b4e13 > _0x104b6c ? _0x104b6c : _0x5b4e13) < _0x3b6540 ? _0x3b6540 : _0x5b4e13, _0x24e086 = (_0x24e086 = _0x24e086 > _0x80aee5 ? _0x80aee5 : _0x24e086) < _0x178e41 ? _0x178e41 : _0x24e086, _0x53053b = (_0x53053b = _0x53053b > _0x17d0a6 ? _0x17d0a6 : _0x53053b) < _0x220193 ? _0x220193 : _0x53053b, _0x1033aa[0x0] = _0x5b4e13, _0x1033aa[0x1] = _0x24e086, _0x1033aa[0x2] = _0x53053b;
        }
        static ['add'](_0x294524, _0x519813, _0x49b9dc) {
            var _0x3cd7d2 = _0x6027f5, _0x1657ce = _0x49b9dc[_0x3cd7d2(0x1fe)], _0x26497b = _0x294524[_0x3cd7d2(0x1fe)], _0x1deafe = _0x519813[_0x3cd7d2(0x1fe)];
            _0x1657ce[0x0] = _0x26497b[0x0] + _0x1deafe[0x0], _0x1657ce[0x1] = _0x26497b[0x1] + _0x1deafe[0x1], _0x1657ce[0x2] = _0x26497b[0x2] + _0x1deafe[0x2];
        }
        static [_0x6027f5(0x28a)](_0x33ff4a, _0x27aab4, _0x586d27) {
            var _0x4fb807 = _0x6027f5, _0x2a349b = _0x586d27[_0x4fb807(0x1fe)], _0x31a336 = _0x33ff4a[_0x4fb807(0x1fe)], _0x2c1da3 = _0x27aab4[_0x4fb807(0x1fe)];
            _0x2a349b[0x0] = _0x31a336[0x0] - _0x2c1da3[0x0], _0x2a349b[0x1] = _0x31a336[0x1] - _0x2c1da3[0x1], _0x2a349b[0x2] = _0x31a336[0x2] - _0x2c1da3[0x2];
        }
        static [_0x6027f5(0x217)](_0x150520, _0x3988d0, _0xbada3a) {
            var _0x564e1a = _0x150520['elements'], _0x334a73 = _0x3988d0['elements'], _0x40a889 = _0xbada3a['elements'], _0x3007dc = _0x564e1a[0x0], _0x3a47ce = _0x564e1a[0x1], _0x4af4d0 = _0x564e1a[0x2], _0x297ed6 = _0x334a73[0x0], _0x4f3512 = _0x334a73[0x1], _0x4d5622 = _0x334a73[0x2];
            _0x40a889[0x0] = _0x3a47ce * _0x4d5622 - _0x4af4d0 * _0x4f3512, _0x40a889[0x1] = _0x4af4d0 * _0x297ed6 - _0x3007dc * _0x4d5622, _0x40a889[0x2] = _0x3007dc * _0x4f3512 - _0x3a47ce * _0x297ed6;
        }
        static [_0x6027f5(0x20b)](_0x1481ea, _0x35a138) {
            var _0xf90cde = _0x6027f5, _0x44d8bc = _0x1481ea[_0xf90cde(0x1fe)], _0x36eefa = _0x35a138[_0xf90cde(0x1fe)];
            return _0x44d8bc[0x0] * _0x36eefa[0x0] + _0x44d8bc[0x1] * _0x36eefa[0x1] + _0x44d8bc[0x2] * _0x36eefa[0x2];
        }
        static ['equals'](_0x40bc4b, _0x15bba2) {
            var _0x513b1b = _0x6027f5, _0x260704 = _0x40bc4b[_0x513b1b(0x1fe)], _0x1e78e0 = _0x15bba2[_0x513b1b(0x1fe)];
            return _0x255128[_0x513b1b(0x204)](_0x260704[0x0], _0x1e78e0[0x0]) && _0x255128[_0x513b1b(0x204)](_0x260704[0x1], _0x1e78e0[0x1]) && _0x255128[_0x513b1b(0x204)](_0x260704[0x2], _0x1e78e0[0x2]);
        }
        get ['x']() {
            var _0x1d7a52 = _0x6027f5;
            return this[_0x1d7a52(0x1fe)][0x0];
        }
        set ['x'](_0x4cae10) {
            var _0x4b2820 = _0x6027f5;
            this[_0x4b2820(0x1fe)][0x0] = _0x4cae10;
        }
        get ['y']() {
            var _0x17c5fb = _0x6027f5;
            return this[_0x17c5fb(0x1fe)][0x1];
        }
        set ['y'](_0x270792) {
            var _0x53e7c6 = _0x6027f5;
            this[_0x53e7c6(0x1fe)][0x1] = _0x270792;
        }
        get ['z']() {
            var _0x2c3756 = _0x6027f5;
            return this[_0x2c3756(0x1fe)][0x2];
        }
        set ['z'](_0x2ec494) {
            var _0x4ec5ad = _0x6027f5;
            this[_0x4ec5ad(0x1fe)][0x2] = _0x2ec494;
        }
        [_0x6027f5(0x1f8)](_0x226c36, _0x342077, _0x22e59a) {
            var _0x4b37f5 = _0x6027f5;
            this[_0x4b37f5(0x1fe)][0x0] = _0x226c36, this['elements'][0x1] = _0x342077, this[_0x4b37f5(0x1fe)][0x2] = _0x22e59a;
        }
        [_0x6027f5(0x1fa)](_0x12f4d6, _0x57eafb = 0x0) {
            var _0x91e997 = _0x6027f5;
            this[_0x91e997(0x1fe)][0x0] = _0x12f4d6[_0x57eafb + 0x0], this[_0x91e997(0x1fe)][0x1] = _0x12f4d6[_0x57eafb + 0x1], this[_0x91e997(0x1fe)][0x2] = _0x12f4d6[_0x57eafb + 0x2];
        }
        [_0x6027f5(0x1fc)](_0x3370a9) {
            var _0x7a3664 = _0x6027f5, _0x531b61 = _0x3370a9[_0x7a3664(0x1fe)], _0x4ce06e = this[_0x7a3664(0x1fe)];
            _0x531b61[0x0] = _0x4ce06e[0x0], _0x531b61[0x1] = _0x4ce06e[0x1], _0x531b61[0x2] = _0x4ce06e[0x2];
        }
        ['clone']() {
            var _0x1000a6 = _0x6027f5, _0x238cd0 = new _0x6c1d15();
            return this[_0x1000a6(0x1fc)](_0x238cd0), _0x238cd0;
        }
        [_0x6027f5(0x219)]() {
            var _0x5f09db = _0x6027f5;
            this[_0x5f09db(0x1fe)][0x0] = 0x0, this['elements'][0x1] = 0x0, this[_0x5f09db(0x1fe)][0x2] = 0x0;
        }
    }
    _0x6c1d15[_0x6027f5(0x21a)] = new _0x117c86(), _0x6c1d15['ZERO'] = new _0x6c1d15(0x0, 0x0, 0x0), _0x6c1d15['ONE'] = new _0x6c1d15(0x1, 0x1, 0x1), _0x6c1d15[_0x6027f5(0x110d)] = new _0x6c1d15(-0x1, 0x0, 0x0), _0x6c1d15[_0x6027f5(0x20f)] = new _0x6c1d15(0x1, 0x0, 0x0), _0x6c1d15[_0x6027f5(0x110e)] = new _0x6c1d15(0x0, 0x1, 0x0), _0x6c1d15['UnitZ'] = new _0x6c1d15(0x0, 0x0, 0x1), _0x6c1d15['ForwardRH'] = new _0x6c1d15(0x0, 0x0, -0x1), _0x6c1d15[_0x6027f5(0x110f)] = new _0x6c1d15(0x0, 0x0, 0x1), _0x6c1d15['Up'] = new _0x6c1d15(0x0, 0x1, 0x0), _0x6c1d15[_0x6027f5(0x2a0)] = new _0x6c1d15(NaN, NaN, NaN);
    class _0x821130 {
        constructor(_0x3a2474 = 0x0, _0x275be6 = 0x0, _0x2cc516 = 0x0, _0x17b4bd = 0x1, _0x2a5c14 = null) {
            var _0xddab2e;
            (_0xddab2e = _0x2a5c14 || new Float32Array(0x4))[0x0] = _0x3a2474, _0xddab2e[0x1] = _0x275be6, _0xddab2e[0x2] = _0x2cc516, _0xddab2e[0x3] = _0x17b4bd, this['elements'] = _0xddab2e;
        }
        static [_0x6027f5(0x1110)](_0x249ff9, _0x43cd18) {
            return _0x249ff9[0x0] * _0x43cd18[0x0] + _0x249ff9[0x1] * _0x43cd18[0x1] + _0x249ff9[0x2] * _0x43cd18[0x2] + _0x249ff9[0x3] * _0x43cd18[0x3];
        }
        static [_0x6027f5(0x1111)](_0x3d9a, _0x5a6461) {
            var _0x4736c2 = _0x3d9a[0x0], _0x5c6ac8 = _0x3d9a[0x1], _0x243176 = _0x3d9a[0x2], _0x527796 = _0x3d9a[0x3], _0x3f918e = _0x4736c2 * _0x4736c2 + _0x5c6ac8 * _0x5c6ac8 + _0x243176 * _0x243176 + _0x527796 * _0x527796;
            _0x3f918e > 0x0 && (_0x3f918e = 0x1 / Math['sqrt'](_0x3f918e), _0x5a6461[0x0] = _0x4736c2 * _0x3f918e, _0x5a6461[0x1] = _0x5c6ac8 * _0x3f918e, _0x5a6461[0x2] = _0x243176 * _0x3f918e, _0x5a6461[0x3] = _0x527796 * _0x3f918e);
        }
        static [_0x6027f5(0x1112)](_0x461a76, _0x27cfb5, _0x45567c, _0x598bf3) {
            var _0x3c3a96 = _0x6027f5, _0x1ce609 = 0x1 - _0x45567c;
            _0x821130[_0x3c3a96(0x1110)](_0x461a76, _0x27cfb5) >= 0x0 ? (_0x598bf3[0x0] = _0x1ce609 * _0x461a76[0x0] + _0x45567c * _0x27cfb5[0x0], _0x598bf3[0x1] = _0x1ce609 * _0x461a76[0x1] + _0x45567c * _0x27cfb5[0x1], _0x598bf3[0x2] = _0x1ce609 * _0x461a76[0x2] + _0x45567c * _0x27cfb5[0x2], _0x598bf3[0x3] = _0x1ce609 * _0x461a76[0x3] + _0x45567c * _0x27cfb5[0x3]) : (_0x598bf3[0x0] = _0x1ce609 * _0x461a76[0x0] - _0x45567c * _0x27cfb5[0x0], _0x598bf3[0x1] = _0x1ce609 * _0x461a76[0x1] - _0x45567c * _0x27cfb5[0x1], _0x598bf3[0x2] = _0x1ce609 * _0x461a76[0x2] - _0x45567c * _0x27cfb5[0x2], _0x598bf3[0x3] = _0x1ce609 * _0x461a76[0x3] - _0x45567c * _0x27cfb5[0x3]), _0x821130[_0x3c3a96(0x1111)](_0x598bf3, _0x598bf3);
        }
        static [_0x6027f5(0x287)](_0x2af483, _0x38d1d9, _0x5291f9, _0x16b927) {
            var _0x898b3a = _0x6027f5, _0x289c2b = 0.5 * _0x5291f9, _0x3081cc = 0.5 * _0x38d1d9, _0x29ccf4 = 0.5 * _0x2af483, _0x38ae76 = Math[_0x898b3a(0x27f)](_0x289c2b), _0x1c882e = Math[_0x898b3a(0x278)](_0x289c2b), _0x2e9f81 = Math['sin'](_0x3081cc), _0x31decd = Math[_0x898b3a(0x278)](_0x3081cc), _0xadb603 = Math[_0x898b3a(0x27f)](_0x29ccf4), _0x43873e = Math[_0x898b3a(0x278)](_0x29ccf4), _0x4429f5 = _0x16b927[_0x898b3a(0x1fe)];
            _0x4429f5[0x0] = _0x43873e * _0x2e9f81 * _0x1c882e + _0xadb603 * _0x31decd * _0x38ae76, _0x4429f5[0x1] = _0xadb603 * _0x31decd * _0x1c882e - _0x43873e * _0x2e9f81 * _0x38ae76, _0x4429f5[0x2] = _0x43873e * _0x31decd * _0x38ae76 - _0xadb603 * _0x2e9f81 * _0x1c882e, _0x4429f5[0x3] = _0x43873e * _0x31decd * _0x1c882e + _0xadb603 * _0x2e9f81 * _0x38ae76;
        }
        static ['multiply'](_0x23da9a, _0x389c0c, _0x20a444) {
            var _0x291f88 = _0x6027f5, _0x26094c = _0x23da9a['elements'], _0x194f30 = _0x389c0c[_0x291f88(0x1fe)], _0x552bbd = _0x20a444['elements'], _0x337a6d = _0x26094c[0x0], _0x112359 = _0x26094c[0x1], _0x4521db = _0x26094c[0x2], _0x36787a = _0x26094c[0x3], _0x3677fc = _0x194f30[0x0], _0x1ae26b = _0x194f30[0x1], _0x1165b3 = _0x194f30[0x2], _0x3e023e = _0x194f30[0x3], _0x267b77 = _0x112359 * _0x1165b3 - _0x4521db * _0x1ae26b, _0x244bb4 = _0x4521db * _0x3677fc - _0x337a6d * _0x1165b3, _0x214660 = _0x337a6d * _0x1ae26b - _0x112359 * _0x3677fc, _0x84fdf4 = _0x337a6d * _0x3677fc + _0x112359 * _0x1ae26b + _0x4521db * _0x1165b3;
            _0x552bbd[0x0] = _0x337a6d * _0x3e023e + _0x3677fc * _0x36787a + _0x267b77, _0x552bbd[0x1] = _0x112359 * _0x3e023e + _0x1ae26b * _0x36787a + _0x244bb4, _0x552bbd[0x2] = _0x4521db * _0x3e023e + _0x1165b3 * _0x36787a + _0x214660, _0x552bbd[0x3] = _0x36787a * _0x3e023e - _0x84fdf4;
        }
        static [_0x6027f5(0x28d)](_0x1a9a82, _0xce4be0) {
            var _0x6c1dc7 = _0x6027f5;
            return 0x0 == _0x1a9a82 ? 0x1 == _0xce4be0 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x1a9a82 > 0x0 ? Math[_0x6c1dc7(0x288)](_0xce4be0 / _0x1a9a82) : _0x1a9a82 < 0x0 ? _0xce4be0 > 0x0 ? Math['atan'](_0xce4be0 / _0x1a9a82) + Math['PI'] : Math[_0x6c1dc7(0x288)](_0xce4be0 / _0x1a9a82) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0x43eca9, _0xa57e2b, _0x536f2e) {
            var _0x4f0063 = _0x6027f5;
            _0x6c1d15[_0x4f0063(0x28a)](_0xa57e2b, _0x43eca9, _0x821130['TEMPVector30']), _0x6c1d15[_0x4f0063(0x214)](_0x821130[_0x4f0063(0x28b)], _0x821130[_0x4f0063(0x28b)]), _0x536f2e[_0x4f0063(0x1fe)][0x0] = Math[_0x4f0063(0x28c)](_0x821130[_0x4f0063(0x28b)]['y']), _0x536f2e[_0x4f0063(0x1fe)][0x1] = _0x821130[_0x4f0063(0x28d)](-_0x821130[_0x4f0063(0x28b)]['z'], -_0x821130['TEMPVector30']['x']);
        }
        static ['createFromAxisAngle'](_0x26ebf8, _0xc5a990, _0x551556) {
            var _0x514125 = _0x6027f5, _0x344217 = _0x551556[_0x514125(0x1fe)], _0x5d8f01 = _0x26ebf8['elements'];
            _0xc5a990 *= 0.5;
            var _0x3c0c37 = Math[_0x514125(0x27f)](_0xc5a990);
            _0x344217[0x0] = _0x3c0c37 * _0x5d8f01[0x0], _0x344217[0x1] = _0x3c0c37 * _0x5d8f01[0x1], _0x344217[0x2] = _0x3c0c37 * _0x5d8f01[0x2], _0x344217[0x3] = Math[_0x514125(0x278)](_0xc5a990);
        }
        static [_0x6027f5(0x1113)](_0x397810, _0x3ffb3b) {
            var _0x50193e = _0x6027f5, _0x2f6f78, _0xd28a7 = _0x3ffb3b[_0x50193e(0x1fe)], _0x4af698 = _0x397810[_0x50193e(0x1fe)], _0x5951f5 = _0x4af698[0x0] + _0x4af698[0x4] + _0x4af698[0x8];
            if (_0x5951f5 > 0x0)
                _0x2f6f78 = Math[_0x50193e(0x1f3)](_0x5951f5 + 0x1), _0xd28a7[0x3] = 0.5 * _0x2f6f78, _0x2f6f78 = 0.5 / _0x2f6f78, _0xd28a7[0x0] = (_0x4af698[0x5] - _0x4af698[0x7]) * _0x2f6f78, _0xd28a7[0x1] = (_0x4af698[0x6] - _0x4af698[0x2]) * _0x2f6f78, _0xd28a7[0x2] = (_0x4af698[0x1] - _0x4af698[0x3]) * _0x2f6f78;
            else {
                var _0x287e63 = 0x0;
                _0x4af698[0x4] > _0x4af698[0x0] && (_0x287e63 = 0x1), _0x4af698[0x8] > _0x4af698[0x3 * _0x287e63 + _0x287e63] && (_0x287e63 = 0x2);
                var _0x1bf71a = (_0x287e63 + 0x1) % 0x3, _0x5f5764 = (_0x287e63 + 0x2) % 0x3;
                _0x2f6f78 = Math[_0x50193e(0x1f3)](_0x4af698[0x3 * _0x287e63 + _0x287e63] - _0x4af698[0x3 * _0x1bf71a + _0x1bf71a] - _0x4af698[0x3 * _0x5f5764 + _0x5f5764] + 0x1), _0xd28a7[_0x287e63] = 0.5 * _0x2f6f78, _0x2f6f78 = 0.5 / _0x2f6f78, _0xd28a7[0x3] = (_0x4af698[0x3 * _0x1bf71a + _0x5f5764] - _0x4af698[0x3 * _0x5f5764 + _0x1bf71a]) * _0x2f6f78, _0xd28a7[_0x1bf71a] = (_0x4af698[0x3 * _0x1bf71a + _0x287e63] + _0x4af698[0x3 * _0x287e63 + _0x1bf71a]) * _0x2f6f78, _0xd28a7[_0x5f5764] = (_0x4af698[0x3 * _0x5f5764 + _0x287e63] + _0x4af698[0x3 * _0x287e63 + _0x5f5764]) * _0x2f6f78;
            }
        }
        static [_0x6027f5(0x27a)](_0x19f917, _0x7839e9) {
            var _0x59483b = _0x6027f5, _0x448106, _0x23ba4d, _0x1a75c0 = _0x19f917[_0x59483b(0x1fe)], _0xb77711 = _0x7839e9[_0x59483b(0x1fe)], _0x4fc3ac = _0x1a75c0[0x0] + _0x1a75c0[0x5] + _0x1a75c0[0xa];
            _0x4fc3ac > 0x0 ? (_0x448106 = Math[_0x59483b(0x1f3)](_0x4fc3ac + 0x1), _0xb77711[0x3] = 0.5 * _0x448106, _0x448106 = 0.5 / _0x448106, _0xb77711[0x0] = (_0x1a75c0[0x6] - _0x1a75c0[0x9]) * _0x448106, _0xb77711[0x1] = (_0x1a75c0[0x8] - _0x1a75c0[0x2]) * _0x448106, _0xb77711[0x2] = (_0x1a75c0[0x1] - _0x1a75c0[0x4]) * _0x448106) : _0x1a75c0[0x0] >= _0x1a75c0[0x5] && _0x1a75c0[0x0] >= _0x1a75c0[0xa] ? (_0x23ba4d = 0.5 / (_0x448106 = Math[_0x59483b(0x1f3)](0x1 + _0x1a75c0[0x0] - _0x1a75c0[0x5] - _0x1a75c0[0xa])), _0xb77711[0x0] = 0.5 * _0x448106, _0xb77711[0x1] = (_0x1a75c0[0x1] + _0x1a75c0[0x4]) * _0x23ba4d, _0xb77711[0x2] = (_0x1a75c0[0x2] + _0x1a75c0[0x8]) * _0x23ba4d, _0xb77711[0x3] = (_0x1a75c0[0x6] - _0x1a75c0[0x9]) * _0x23ba4d) : _0x1a75c0[0x5] > _0x1a75c0[0xa] ? (_0x23ba4d = 0.5 / (_0x448106 = Math[_0x59483b(0x1f3)](0x1 + _0x1a75c0[0x5] - _0x1a75c0[0x0] - _0x1a75c0[0xa])), _0xb77711[0x0] = (_0x1a75c0[0x4] + _0x1a75c0[0x1]) * _0x23ba4d, _0xb77711[0x1] = 0.5 * _0x448106, _0xb77711[0x2] = (_0x1a75c0[0x9] + _0x1a75c0[0x6]) * _0x23ba4d, _0xb77711[0x3] = (_0x1a75c0[0x8] - _0x1a75c0[0x2]) * _0x23ba4d) : (_0x23ba4d = 0.5 / (_0x448106 = Math[_0x59483b(0x1f3)](0x1 + _0x1a75c0[0xa] - _0x1a75c0[0x0] - _0x1a75c0[0x5])), _0xb77711[0x0] = (_0x1a75c0[0x8] + _0x1a75c0[0x2]) * _0x23ba4d, _0xb77711[0x1] = (_0x1a75c0[0x9] + _0x1a75c0[0x6]) * _0x23ba4d, _0xb77711[0x2] = 0.5 * _0x448106, _0xb77711[0x3] = (_0x1a75c0[0x1] - _0x1a75c0[0x4]) * _0x23ba4d);
        }
        static [_0x6027f5(0x28e)](_0x2268cf, _0x36fdf4, _0x57a3af, _0x5a634d) {
            var _0x459ba4 = _0x6027f5, _0x46268c, _0x4d5463, _0x4043dc, _0x5180ef, _0xd50d7, _0x15e77d = _0x2268cf[_0x459ba4(0x1fe)], _0x17581c = _0x36fdf4[_0x459ba4(0x1fe)], _0x67715e = _0x5a634d[_0x459ba4(0x1fe)], _0x14fd14 = _0x15e77d[0x0], _0x499518 = _0x15e77d[0x1], _0x1c1906 = _0x15e77d[0x2], _0x220289 = _0x15e77d[0x3], _0xb7bfb = _0x17581c[0x0], _0x52a695 = _0x17581c[0x1], _0x4c11cb = _0x17581c[0x2], _0x49795a = _0x17581c[0x3];
            return (_0x4d5463 = _0x14fd14 * _0xb7bfb + _0x499518 * _0x52a695 + _0x1c1906 * _0x4c11cb + _0x220289 * _0x49795a) < 0x0 && (_0x4d5463 = -_0x4d5463, _0xb7bfb = -_0xb7bfb, _0x52a695 = -_0x52a695, _0x4c11cb = -_0x4c11cb, _0x49795a = -_0x49795a), 0x1 - _0x4d5463 > 0.000001 ? (_0x46268c = Math[_0x459ba4(0x28f)](_0x4d5463), _0x4043dc = Math['sin'](_0x46268c), _0x5180ef = Math[_0x459ba4(0x27f)]((0x1 - _0x57a3af) * _0x46268c) / _0x4043dc, _0xd50d7 = Math['sin'](_0x57a3af * _0x46268c) / _0x4043dc) : (_0x5180ef = 0x1 - _0x57a3af, _0xd50d7 = _0x57a3af), _0x67715e[0x0] = _0x5180ef * _0x14fd14 + _0xd50d7 * _0xb7bfb, _0x67715e[0x1] = _0x5180ef * _0x499518 + _0xd50d7 * _0x52a695, _0x67715e[0x2] = _0x5180ef * _0x1c1906 + _0xd50d7 * _0x4c11cb, _0x67715e[0x3] = _0x5180ef * _0x220289 + _0xd50d7 * _0x49795a, _0x67715e;
        }
        static [_0x6027f5(0x202)](_0x428e47, _0xf9393e, _0x4f0f05, _0x36e0ca) {
            var _0x48c801 = _0x6027f5;
            _0x821130[_0x48c801(0x1112)](_0x428e47[_0x48c801(0x1fe)], _0xf9393e[_0x48c801(0x1fe)], _0x4f0f05, _0x36e0ca[_0x48c801(0x1fe)]);
        }
        static [_0x6027f5(0x207)](_0x348a8f, _0x119534, _0x3db678) {
            var _0x4ddd61 = _0x6027f5, _0x4f469e = _0x3db678['elements'], _0x343d2c = _0x348a8f[_0x4ddd61(0x1fe)], _0x205505 = _0x119534[_0x4ddd61(0x1fe)];
            _0x4f469e[0x0] = _0x343d2c[0x0] + _0x205505[0x0], _0x4f469e[0x1] = _0x343d2c[0x1] + _0x205505[0x1], _0x4f469e[0x2] = _0x343d2c[0x2] + _0x205505[0x2], _0x4f469e[0x3] = _0x343d2c[0x3] + _0x205505[0x3];
        }
        static [_0x6027f5(0x20b)](_0x53a061, _0x1b812e) {
            var _0x1cae8c = _0x6027f5;
            return _0x821130[_0x1cae8c(0x1110)](_0x53a061[_0x1cae8c(0x1fe)], _0x1b812e[_0x1cae8c(0x1fe)]);
        }
        get ['x']() {
            var _0x2e080a = _0x6027f5;
            return this[_0x2e080a(0x1fe)][0x0];
        }
        set ['x'](_0x581cdc) {
            this['elements'][0x0] = _0x581cdc;
        }
        get ['y']() {
            var _0x43c17e = _0x6027f5;
            return this[_0x43c17e(0x1fe)][0x1];
        }
        set ['y'](_0x5a8a7e) {
            this['elements'][0x1] = _0x5a8a7e;
        }
        get ['z']() {
            var _0x46ebad = _0x6027f5;
            return this[_0x46ebad(0x1fe)][0x2];
        }
        set ['z'](_0x146924) {
            this['elements'][0x2] = _0x146924;
        }
        get ['w']() {
            var _0x148f5e = _0x6027f5;
            return this[_0x148f5e(0x1fe)][0x3];
        }
        set ['w'](_0x2af02d) {
            this['elements'][0x3] = _0x2af02d;
        }
        [_0x6027f5(0x290)](_0x5b2706, _0x1b9a60) {
            var _0x94b9c3 = _0x6027f5, _0x49f15e = _0x1b9a60[_0x94b9c3(0x1fe)], _0x4a85b0 = this[_0x94b9c3(0x1fe)];
            _0x49f15e[0x0] = _0x4a85b0[0x0] * _0x5b2706, _0x49f15e[0x1] = _0x4a85b0[0x1] * _0x5b2706, _0x49f15e[0x2] = _0x4a85b0[0x2] * _0x5b2706, _0x49f15e[0x3] = _0x4a85b0[0x3] * _0x5b2706;
        }
        [_0x6027f5(0x214)](_0x4362f1) {
            var _0x86ced6 = _0x6027f5;
            _0x821130[_0x86ced6(0x1111)](this[_0x86ced6(0x1fe)], _0x4362f1[_0x86ced6(0x1fe)]);
        }
        [_0x6027f5(0x205)]() {
            var _0x4bea09 = _0x6027f5, _0x532e14 = this[_0x4bea09(0x1fe)], _0x28feb8 = _0x532e14[0x0], _0x239157 = _0x532e14[0x1], _0x1fab23 = _0x532e14[0x2], _0x46f1c6 = _0x532e14[0x3];
            return Math[_0x4bea09(0x1f3)](_0x28feb8 * _0x28feb8 + _0x239157 * _0x239157 + _0x1fab23 * _0x1fab23 + _0x46f1c6 * _0x46f1c6);
        }
        [_0x6027f5(0x291)](_0x3c3f88, _0x3499ce) {
            var _0x442a2e = _0x6027f5, _0x4cbe3a = _0x3499ce['elements'], _0x3c1b48 = this[_0x442a2e(0x1fe)];
            _0x3c3f88 *= 0.5;
            var _0x115faf = _0x3c1b48[0x0], _0x21ea63 = _0x3c1b48[0x1], _0x4a37ed = _0x3c1b48[0x2], _0x2f00a0 = _0x3c1b48[0x3], _0x1adbba = Math[_0x442a2e(0x27f)](_0x3c3f88), _0x57277c = Math[_0x442a2e(0x278)](_0x3c3f88);
            _0x4cbe3a[0x0] = _0x115faf * _0x57277c + _0x2f00a0 * _0x1adbba, _0x4cbe3a[0x1] = _0x21ea63 * _0x57277c + _0x4a37ed * _0x1adbba, _0x4cbe3a[0x2] = _0x4a37ed * _0x57277c - _0x21ea63 * _0x1adbba, _0x4cbe3a[0x3] = _0x2f00a0 * _0x57277c - _0x115faf * _0x1adbba;
        }
        [_0x6027f5(0x292)](_0x20478a, _0x233c08) {
            var _0x5cd42c = _0x6027f5, _0x1d948b = _0x233c08['elements'], _0x3da76b = this[_0x5cd42c(0x1fe)];
            _0x20478a *= 0.5;
            var _0x4b482a = _0x3da76b[0x0], _0x554349 = _0x3da76b[0x1], _0x1ec948 = _0x3da76b[0x2], _0x3ecd41 = _0x3da76b[0x3], _0x3fccc3 = Math[_0x5cd42c(0x27f)](_0x20478a), _0x4784e6 = Math[_0x5cd42c(0x278)](_0x20478a);
            _0x1d948b[0x0] = _0x4b482a * _0x4784e6 - _0x1ec948 * _0x3fccc3, _0x1d948b[0x1] = _0x554349 * _0x4784e6 + _0x3ecd41 * _0x3fccc3, _0x1d948b[0x2] = _0x1ec948 * _0x4784e6 + _0x4b482a * _0x3fccc3, _0x1d948b[0x3] = _0x3ecd41 * _0x4784e6 - _0x554349 * _0x3fccc3;
        }
        [_0x6027f5(0x1114)](_0x3bdbe7, _0x2e858d) {
            var _0x41ae83 = _0x6027f5, _0xe1977f = _0x2e858d[_0x41ae83(0x1fe)], _0x2af8af = this['elements'];
            _0x3bdbe7 *= 0.5;
            var _0xc47959 = _0x2af8af[0x0], _0x5c6d36 = _0x2af8af[0x1], _0x13e741 = _0x2af8af[0x2], _0x54bebc = _0x2af8af[0x3], _0x524229 = Math['sin'](_0x3bdbe7), _0x1115e4 = Math[_0x41ae83(0x278)](_0x3bdbe7);
            _0xe1977f[0x0] = _0xc47959 * _0x1115e4 + _0x5c6d36 * _0x524229, _0xe1977f[0x1] = _0x5c6d36 * _0x1115e4 - _0xc47959 * _0x524229, _0xe1977f[0x2] = _0x13e741 * _0x1115e4 + _0x54bebc * _0x524229, _0xe1977f[0x3] = _0x54bebc * _0x1115e4 - _0x13e741 * _0x524229;
        }
        [_0x6027f5(0x293)](_0x19f0fe) {
            var _0x638bfd = _0x6027f5;
            _0x6c1d15['transformQuat'](_0x6c1d15['ForwardRH'], this, _0x821130[_0x638bfd(0x295)]), _0x6c1d15[_0x638bfd(0x294)](_0x6c1d15['Up'], this, _0x821130[_0x638bfd(0x297)]);
            var _0x1fb59b = _0x821130[_0x638bfd(0x297)]['elements'];
            _0x821130[_0x638bfd(0x289)](_0x6c1d15[_0x638bfd(0x20e)], _0x821130[_0x638bfd(0x295)], _0x821130[_0x638bfd(0x298)]);
            var _0x1c35e6 = _0x821130['TEMPVector33'][_0x638bfd(0x1fe)];
            _0x1c35e6[0x0] == Math['PI'] / 0x2 ? (_0x1c35e6[0x1] = _0x821130[_0x638bfd(0x28d)](_0x1fb59b[0x2], _0x1fb59b[0x0]), _0x1c35e6[0x2] = 0x0) : _0x1c35e6[0x0] == -Math['PI'] / 0x2 ? (_0x1c35e6[0x1] = _0x821130[_0x638bfd(0x28d)](-_0x1fb59b[0x2], -_0x1fb59b[0x0]), _0x1c35e6[0x2] = 0x0) : (_0x6b4d98[_0x638bfd(0x299)](-_0x1c35e6[0x1], _0x821130[_0x638bfd(0x29a)]), _0x6b4d98[_0x638bfd(0x29b)](-_0x1c35e6[0x0], _0x821130[_0x638bfd(0x29c)]), _0x6c1d15[_0x638bfd(0x216)](_0x821130[_0x638bfd(0x297)], _0x821130[_0x638bfd(0x29a)], _0x821130[_0x638bfd(0x297)]), _0x6c1d15[_0x638bfd(0x216)](_0x821130[_0x638bfd(0x297)], _0x821130[_0x638bfd(0x29c)], _0x821130[_0x638bfd(0x297)]), _0x1c35e6[0x2] = _0x821130[_0x638bfd(0x28d)](_0x1fb59b[0x1], -_0x1fb59b[0x0])), _0x1c35e6[0x1] <= -Math['PI'] && (_0x1c35e6[0x1] = Math['PI']), _0x1c35e6[0x2] <= -Math['PI'] && (_0x1c35e6[0x2] = Math['PI']), _0x1c35e6[0x1] >= Math['PI'] && _0x1c35e6[0x2] >= Math['PI'] && (_0x1c35e6[0x1] = 0x0, _0x1c35e6[0x2] = 0x0, _0x1c35e6[0x0] = Math['PI'] - _0x1c35e6[0x0]);
            var _0x3b0d4f = _0x19f0fe[_0x638bfd(0x1fe)];
            _0x3b0d4f[0x0] = _0x1c35e6[0x1], _0x3b0d4f[0x1] = _0x1c35e6[0x0], _0x3b0d4f[0x2] = _0x1c35e6[0x2];
        }
        ['invert'](_0x25b903) {
            var _0x50d701 = _0x6027f5, _0xb4b429 = _0x25b903[_0x50d701(0x1fe)], _0x30af04 = this['elements'], _0x1e484d = _0x30af04[0x0], _0x5d4a5a = _0x30af04[0x1], _0x3d7026 = _0x30af04[0x2], _0x57774c = _0x30af04[0x3], _0x4bccdb = _0x1e484d * _0x1e484d + _0x5d4a5a * _0x5d4a5a + _0x3d7026 * _0x3d7026 + _0x57774c * _0x57774c, _0x38f694 = _0x4bccdb ? 0x1 / _0x4bccdb : 0x0;
            _0xb4b429[0x0] = -_0x1e484d * _0x38f694, _0xb4b429[0x1] = -_0x5d4a5a * _0x38f694, _0xb4b429[0x2] = -_0x3d7026 * _0x38f694, _0xb4b429[0x3] = _0x57774c * _0x38f694;
        }
        [_0x6027f5(0x281)]() {
            var _0x4508df = _0x6027f5, _0x470fc4 = this[_0x4508df(0x1fe)];
            _0x470fc4[0x0] = 0x0, _0x470fc4[0x1] = 0x0, _0x470fc4[0x2] = 0x0, _0x470fc4[0x3] = 0x1;
        }
        [_0x6027f5(0x1fa)](_0x38ca49, _0x4bc547 = 0x0) {
            var _0x57f4bc = _0x6027f5;
            this['elements'][0x0] = _0x38ca49[_0x4bc547 + 0x0], this['elements'][0x1] = _0x38ca49[_0x4bc547 + 0x1], this['elements'][0x2] = _0x38ca49[_0x4bc547 + 0x2], this[_0x57f4bc(0x1fe)][0x3] = _0x38ca49[_0x4bc547 + 0x3];
        }
        [_0x6027f5(0x1fc)](_0x4d0dd3) {
            var _0xe5525f = _0x6027f5, _0x25663f, _0x5130e7, _0x488b6e;
            if ((_0x5130e7 = this[_0xe5525f(0x1fe)]) !== (_0x488b6e = _0x4d0dd3[_0xe5525f(0x1fe)])) {
                for (_0x25663f = 0x0; _0x25663f < 0x4; ++_0x25663f)
                    _0x488b6e[_0x25663f] = _0x5130e7[_0x25663f];
            }
        }
        [_0x6027f5(0x1fd)]() {
            var _0x179d7f = _0x6027f5, _0x1457e2 = new _0x821130();
            return this[_0x179d7f(0x1fc)](_0x1457e2), _0x1457e2;
        }
        ['equals'](_0x137c89) {
            var _0x24c880 = _0x6027f5, _0x1f45a6 = this['elements'], _0x3d116c = _0x137c89['elements'];
            return _0x255128[_0x24c880(0x204)](_0x1f45a6[0x0], _0x3d116c[0x0]) && _0x255128[_0x24c880(0x204)](_0x1f45a6[0x1], _0x3d116c[0x1]) && _0x255128[_0x24c880(0x204)](_0x1f45a6[0x2], _0x3d116c[0x2]) && _0x255128[_0x24c880(0x204)](_0x1f45a6[0x3], _0x3d116c[0x3]);
        }
        static [_0x6027f5(0x29d)](_0x446ce0, _0x4a8d4b, _0x4a88aa) {
            var _0x53ca4e = _0x6027f5;
            _0x821130[_0x53ca4e(0x282)](_0x6c1d15[_0x53ca4e(0x20e)], _0x446ce0, _0x4a8d4b, _0x4a88aa);
        }
        static ['lookAt'](_0x20396f, _0x31449f, _0x18a28b, _0x55bb40) {
            var _0x20d5dd = _0x6027f5;
            _0x5e1bd2[_0x20d5dd(0x282)](_0x20396f, _0x31449f, _0x18a28b, _0x821130['_tempMatrix3x3']), _0x821130['rotationMatrix'](_0x821130[_0x20d5dd(0x29e)], _0x55bb40);
        }
        ['lengthSquared']() {
            var _0x506e1b = _0x6027f5, _0x434f09 = this[_0x506e1b(0x1fe)][0x0], _0x1e3b44 = this['elements'][0x1], _0xf5f806 = this[_0x506e1b(0x1fe)][0x2], _0x70e7ca = this[_0x506e1b(0x1fe)][0x3];
            return _0x434f09 * _0x434f09 + _0x1e3b44 * _0x1e3b44 + _0xf5f806 * _0xf5f806 + _0x70e7ca * _0x70e7ca;
        }
        static ['invert'](_0x44625b, _0x511749) {
            var _0x34a4b8 = _0x6027f5, _0x96f322 = _0x44625b['elements'], _0x3bc2f6 = _0x511749[_0x34a4b8(0x1fe)], _0x573069 = _0x44625b[_0x34a4b8(0x206)]();
            _0x255128[_0x34a4b8(0x1f1)](_0x573069) || (_0x573069 = 0x1 / _0x573069, _0x3bc2f6[0x0] = -_0x96f322[0x0] * _0x573069, _0x3bc2f6[0x1] = -_0x96f322[0x1] * _0x573069, _0x3bc2f6[0x2] = -_0x96f322[0x2] * _0x573069, _0x3bc2f6[0x3] = _0x96f322[0x3] * _0x573069);
        }
        static ['rotationMatrix'](_0xea650, _0x528a13) {
            var _0x37cb63 = _0x6027f5, _0x472753, _0x4070a7, _0xfce8ce = _0xea650[_0x37cb63(0x1fe)], _0x2fb3cc = _0xfce8ce[0x0], _0x48562a = _0xfce8ce[0x1], _0x2f3185 = _0xfce8ce[0x2], _0x100054 = _0xfce8ce[0x3], _0x530384 = _0xfce8ce[0x4], _0x541958 = _0xfce8ce[0x5], _0x4f83d5 = _0xfce8ce[0x6], _0x52b8d7 = _0xfce8ce[0x7], _0xb7cfd9 = _0xfce8ce[0x8], _0x27f9eb = _0x528a13[_0x37cb63(0x1fe)], _0x18679e = _0x2fb3cc + _0x530384 + _0xb7cfd9;
            _0x18679e > 0x0 ? (_0x472753 = Math['sqrt'](_0x18679e + 0x1), _0x27f9eb[0x3] = 0.5 * _0x472753, _0x472753 = 0.5 / _0x472753, _0x27f9eb[0x0] = (_0x541958 - _0x52b8d7) * _0x472753, _0x27f9eb[0x1] = (_0x4f83d5 - _0x2f3185) * _0x472753, _0x27f9eb[0x2] = (_0x48562a - _0x100054) * _0x472753) : _0x2fb3cc >= _0x530384 && _0x2fb3cc >= _0xb7cfd9 ? (_0x4070a7 = 0.5 / (_0x472753 = Math[_0x37cb63(0x1f3)](0x1 + _0x2fb3cc - _0x530384 - _0xb7cfd9)), _0x27f9eb[0x0] = 0.5 * _0x472753, _0x27f9eb[0x1] = (_0x48562a + _0x100054) * _0x4070a7, _0x27f9eb[0x2] = (_0x2f3185 + _0x4f83d5) * _0x4070a7, _0x27f9eb[0x3] = (_0x541958 - _0x52b8d7) * _0x4070a7) : _0x530384 > _0xb7cfd9 ? (_0x4070a7 = 0.5 / (_0x472753 = Math[_0x37cb63(0x1f3)](0x1 + _0x530384 - _0x2fb3cc - _0xb7cfd9)), _0x27f9eb[0x0] = (_0x100054 + _0x48562a) * _0x4070a7, _0x27f9eb[0x1] = 0.5 * _0x472753, _0x27f9eb[0x2] = (_0x52b8d7 + _0x541958) * _0x4070a7, _0x27f9eb[0x3] = (_0x4f83d5 - _0x2f3185) * _0x4070a7) : (_0x4070a7 = 0.5 / (_0x472753 = Math['sqrt'](0x1 + _0xb7cfd9 - _0x2fb3cc - _0x530384)), _0x27f9eb[0x0] = (_0x4f83d5 + _0x2f3185) * _0x4070a7, _0x27f9eb[0x1] = (_0x52b8d7 + _0x541958) * _0x4070a7, _0x27f9eb[0x2] = 0.5 * _0x472753, _0x27f9eb[0x3] = (_0x48562a - _0x100054) * _0x4070a7);
        }
    }
    _0x821130[_0x6027f5(0x28b)] = new _0x6c1d15(), _0x821130['TEMPVector31'] = new _0x6c1d15(), _0x821130[_0x6027f5(0x297)] = new _0x6c1d15(), _0x821130[_0x6027f5(0x298)] = new _0x6c1d15(), _0x821130[_0x6027f5(0x29a)] = new _0x6b4d98(), _0x821130['TEMPMatrix1'] = new _0x6b4d98(), _0x821130[_0x6027f5(0x29e)] = new _0x5e1bd2(), _0x821130[_0x6027f5(0x286)] = new _0x821130(), _0x821130[_0x6027f5(0x2a0)] = new _0x821130(NaN, NaN, NaN, NaN);
    class _0x5a628e {
        constructor(_0x47fcaf) {
            var _0x413961 = _0x6027f5;
            if (!(_0x47fcaf instanceof Array) || 0x4 !== _0x47fcaf['length'])
                throw new Error('Rand:Seed\x20must\x20be\x20an\x20array\x20with\x204\x20numbers');
            this[_0x413961(0x1115)] = 0x0 | _0x47fcaf[0x0], this[_0x413961(0x1116)] = 0x0 | _0x47fcaf[0x1], this[_0x413961(0x1117)] = 0x0 | _0x47fcaf[0x2], this['_state1L'] = 0x0 | _0x47fcaf[0x3];
        }
        [_0x6027f5(0x1118)]() {
            var _0x5e3605 = _0x6027f5, _0x3920fd = this[_0x5e3605(0x1115)], _0x1aa977 = this[_0x5e3605(0x1116)], _0x415045 = this[_0x5e3605(0x1117)], _0x20306d = this[_0x5e3605(0x1119)], _0x161227 = (_0x20306d >>> 0x0) + (_0x1aa977 >>> 0x0), _0x5edcf4 = _0x415045 + _0x3920fd + (_0x161227 / 0x2 >>> 0x1f) >>> 0x0, _0x240ff2 = _0x161227 >>> 0x0;
            this[_0x5e3605(0x1115)] = _0x415045, this[_0x5e3605(0x1116)] = _0x20306d;
            var _0x39780a = 0x0, _0x2ec3ed = 0x0;
            return _0x39780a = (_0x3920fd ^= _0x39780a = _0x3920fd << 0x17 | (-0x200 & _0x1aa977) >>> 0x9) ^ _0x415045, _0x2ec3ed = (_0x1aa977 ^= _0x2ec3ed = _0x1aa977 << 0x17) ^ _0x20306d, (_0x39780a ^= _0x3920fd >>> 0x12, _0x2ec3ed ^= _0x1aa977 >>> 0x12 | (0x3ffff & _0x3920fd) << 0xe), (_0x39780a ^= _0x415045 >>> 0x5, _0x2ec3ed ^= _0x20306d >>> 0x5 | (0x1f & _0x415045) << 0x1b, this['_state1U'] = _0x39780a, this[_0x5e3605(0x1119)] = _0x2ec3ed, [
                _0x5edcf4,
                _0x240ff2
            ]);
        }
        [_0x6027f5(0xd5f)]() {
            var _0x5d987f = _0x6027f5, _0x4217b3 = this['randomint'](), _0x31a3fc = _0x4217b3[0x0], _0x469825 = 0x3ff << 0x14 | _0x31a3fc >>> 0xc, _0x399186 = 0x0 | (_0x4217b3[0x1] >>> 0xc | (0xfff & _0x31a3fc) << 0x14);
            return _0x5a628e[_0x5d987f(0x111a)][_0x5d987f(0x111b)](0x0, _0x469825, !0x1), _0x5a628e['_CONVERTION_BUFFER'][_0x5d987f(0x111b)](0x4, _0x399186, !0x1), _0x5a628e[_0x5d987f(0x111a)][_0x5d987f(0x111c)](0x0, !0x1) - 0x1;
        }
    }
    _0x5a628e['_CONVERTION_BUFFER'] = new DataView(new ArrayBuffer(0x8)), _0x5a628e['defaultRand'] = new _0x5a628e([
        0x0,
        Date['now']() / 0x10000,
        0x0,
        Date['now']() % 0x10000
    ]);
    class _0x30ead6 {
        constructor(_0x466b4c, _0x4444b3) {
            var _0x3ba527 = _0x6027f5;
            this[_0x3ba527(0x3f0)] = 0x0, this[_0x3ba527(0x3ea)] = 0x0, this['_width'] = _0x466b4c, this[_0x3ba527(0x3ea)] = _0x4444b3;
        }
        static get [_0x6027f5(0x111d)]() {
            return new _0x30ead6(-0x1, -0x1);
        }
        get [_0x6027f5(0x313)]() {
            var _0x336ef4 = _0x6027f5;
            return -0x1 === this[_0x336ef4(0x3f0)] ? _0x50b403[_0x336ef4(0x9a3)] : this['_width'];
        }
        get ['height']() {
            var _0x2a9a84 = _0x6027f5;
            return -0x1 === this[_0x2a9a84(0x3ea)] ? _0x50b403[_0x2a9a84(0x565)] : this['_height'];
        }
    }
    _0x18be32[_0x6027f5(0x111e)] = _0x254d71, _0x18be32['AnimationClip'] = _0x1120e5, _0x18be32[_0x6027f5(0x111f)] = _0x489078, _0x18be32[_0x6027f5(0x1120)] = _0x23997e, _0x18be32['AnimationEvent'] = _0x258046, _0x18be32[_0x6027f5(0x1121)] = _0x486daf, _0x18be32[_0x6027f5(0x1122)] = _0x3a8938, _0x18be32[_0x6027f5(0x104b)] = _0x493c7d, _0x18be32[_0x6027f5(0x1123)] = _0x5059f4, _0x18be32['AnimatorPlayState'] = _0x363193, _0x18be32[_0x6027f5(0x1124)] = _0x176511, _0x18be32[_0x6027f5(0x1125)] = class {
        constructor() {
        }
        [_0x6027f5(0x3cd)]() {
        }
        [_0x6027f5(0x1126)]() {
        }
        [_0x6027f5(0x398)]() {
        }
    }, _0x18be32[_0x6027f5(0x1127)] = _0x43545b, _0x18be32[_0x6027f5(0x1128)] = _0x5ace57, _0x18be32[_0x6027f5(0x1129)] = _0x1d2570, _0x18be32[_0x6027f5(0x112a)] = _0x1ed784, _0x18be32['BaseRender'] = _0x40d4de, _0x18be32[_0x6027f5(0x112b)] = _0x584c19, _0x18be32['BatchMark'] = _0x4f55ba, _0x18be32[_0x6027f5(0x112c)] = _0x3c2eb1, _0x18be32[_0x6027f5(0x112d)] = _0xcc3875, _0x18be32[_0x6027f5(0x112e)] = _0x3e94a1, _0x18be32[_0x6027f5(0x112f)] = _0x4dce5e, _0x18be32['BoundFrustum'] = _0x1391ac, _0x18be32[_0x6027f5(0x1130)] = _0x1d9351, _0x18be32[_0x6027f5(0x1131)] = _0xf16d64, _0x18be32[_0x6027f5(0x1132)] = _0x132b38, _0x18be32[_0x6027f5(0x1133)] = _0x5b83ac, _0x18be32[_0x6027f5(0x1134)] = _0x5a361a, _0x18be32['BufferState'] = _0x5b1dae, _0x18be32[_0x6027f5(0x1135)] = _0xe35791, _0x18be32['Camera'] = _0x55cd9b, _0x18be32[_0x6027f5(0x1136)] = _0x3217fb, _0x18be32[_0x6027f5(0x1137)] = class extends _0x2af7e0 {
        constructor() {
            super();
        }
        ['add'](_0x9d92a1) {
            var _0x2c54ab = _0x6027f5;
            if (-0x1 !== _0x9d92a1[_0x2c54ab(0xaf8)])
                throw _0x2c54ab(0x1138);
            this['_add'](_0x9d92a1), _0x9d92a1['_indexInCastShadowList'] = this[_0x2c54ab(0x205)]++;
        }
        [_0x6027f5(0x3b4)](_0x5ccc8c) {
            var _0xb1fd48 = _0x6027f5, _0x311639 = _0x5ccc8c[_0xb1fd48(0xaf8)];
            if (this['length']--, _0x311639 !== this[_0xb1fd48(0x205)]) {
                var _0x458c4b = this[_0xb1fd48(0x1fe)][this[_0xb1fd48(0x205)]];
                this[_0xb1fd48(0x1fe)][_0x311639] = _0x458c4b, _0x458c4b[_0xb1fd48(0xaf8)] = _0x311639;
            }
            _0x5ccc8c['_indexInCastShadowList'] = -0x1;
        }
    }, _0x18be32[_0x6027f5(0x1139)] = _0xbe7dc2, _0x18be32[_0x6027f5(0x113a)] = _0x34c120, _0x18be32[_0x6027f5(0x113b)] = _0x1ae54c, _0x18be32[_0x6027f5(0x113c)] = _0x4dcbd3, _0x18be32[_0x6027f5(0x46e)] = _0x441c6d, _0x18be32[_0x6027f5(0x113d)] = _0x12356, _0x18be32[_0x6027f5(0x113e)] = _0x47a986, _0x18be32['CommandBuffer'] = _0x3f18cf, _0x18be32['ConchQuaternion'] = _0x821130, _0x18be32[_0x6027f5(0x113f)] = _0x6c1d15, _0x18be32[_0x6027f5(0x1140)] = _0x117c86, _0x18be32[_0x6027f5(0x1141)] = _0x49c361, _0x18be32[_0x6027f5(0x1142)] = _0x362537, _0x18be32[_0x6027f5(0x1143)] = _0x156c38, _0x18be32[_0x6027f5(0x1144)] = _0x1ff4c5, _0x18be32[_0x6027f5(0x1145)] = _0x10c835, _0x18be32[_0x6027f5(0xb5c)] = _0xf16363, _0x18be32[_0x6027f5(0x1146)] = _0x7a6ad, _0x18be32[_0x6027f5(0x1147)] = _0x3e3537, _0x18be32[_0x6027f5(0x1148)] = _0x15c6da, _0x18be32[_0x6027f5(0x1149)] = _0x557675, _0x18be32[_0x6027f5(0x114a)] = _0x50b2a3, _0x18be32[_0x6027f5(0x114b)] = _0x46a7c9, _0x18be32[_0x6027f5(0x114c)] = _0x12f0c4, _0x18be32[_0x6027f5(0x114d)] = _0x25af36, _0x18be32[_0x6027f5(0x114e)] = _0xae37d7, _0x18be32[_0x6027f5(0x114f)] = _0x1b438f, _0x18be32[_0x6027f5(0x1150)] = _0x2be7a6, _0x18be32[_0x6027f5(0x1151)] = _0x1d08e8, _0x18be32[_0x6027f5(0x1152)] = _0x23370c, _0x18be32[_0x6027f5(0x1153)] = _0x138396, _0x18be32[_0x6027f5(0x1154)] = _0x5da7ff, _0x18be32['GradientDataNumber'] = _0x239637, _0x18be32[_0x6027f5(0x1155)] = _0x485d15, _0x18be32[_0x6027f5(0x1156)] = _0x117a28, _0x18be32[_0x6027f5(0x1157)] = _0x5bbf53, _0x18be32[_0x6027f5(0x1158)] = _0x5c43e7, _0x18be32['HeightMap'] = _0x5eab54, _0x18be32['HemisphereShape'] = _0x4d35b2, _0x18be32['ILaya3D'] = _0x525782, _0x18be32['IndexBuffer3D'] = _0x67ef8f, _0x18be32[_0x6027f5(0x1159)] = _0x3c295f, _0x18be32[_0x6027f5(0x115a)] = _0x12dcd5, _0x18be32[_0x6027f5(0x115b)] = _0x359f9a, _0x18be32['KeyframeNodeList'] = _0x317236, _0x18be32[_0x6027f5(0x115c)] = _0x3a8900, _0x18be32['Laya3D'] = _0x2e0676, _0x18be32[_0x6027f5(0x115d)] = _0x2c6a45, _0x18be32[_0x6027f5(0x115e)] = _0x413cad, _0x18be32[_0x6027f5(0x115f)] = _0x3c3cd4, _0x18be32[_0x6027f5(0x1160)] = _0x309b4e, _0x18be32[_0x6027f5(0x1161)] = _0x47de96, _0x18be32['Material'] = _0xe2444c, _0x18be32[_0x6027f5(0x1162)] = _0x54f448, _0x18be32[_0x6027f5(0x1163)] = _0x512675, _0x18be32[_0x6027f5(0x1164)] = _0x255128, _0x18be32[_0x6027f5(0x1165)] = _0x5e1bd2, _0x18be32['Matrix4x4'] = _0x6b4d98, _0x18be32[_0x6027f5(0x1166)] = _0x588bb2, _0x18be32[_0x6027f5(0x1167)] = _0x1f703e, _0x18be32[_0x6027f5(0x1168)] = _0x188a34, _0x18be32[_0x6027f5(0xab3)] = _0x4474ea, _0x18be32[_0x6027f5(0xab0)] = _0x34c00f, _0x18be32[_0x6027f5(0x1169)] = _0x5b1dcc, _0x18be32[_0x6027f5(0xffe)] = _0x8ce47b, _0x18be32[_0x6027f5(0x116a)] = _0x2553d1, _0x18be32[_0x6027f5(0x116b)] = _0x245161, _0x18be32['MouseTouch'] = _0x312819, _0x18be32[_0x6027f5(0x116c)] = _0x5aa7d5, _0x18be32[_0x6027f5(0x116d)] = _0x5d5c8f, _0x18be32[_0x6027f5(0x116e)] = _0xe57706, _0x18be32['PBRStandardMaterial'] = _0x40d85b, _0x18be32[_0x6027f5(0x229)] = _0x567245, _0x18be32['Physics3DUtils'] = _0x48c5dd, _0x18be32['Picker'] = _0x353f39, _0x18be32[_0x6027f5(0x116f)] = class {
        constructor() {
            var _0x39f0b7 = _0x6027f5;
            this[_0x39f0b7(0xa67)] = new _0x3697cd(), this[_0x39f0b7(0xa68)] = new _0x3697cd(), this['startColor'] = new _0x441c6d(), this['endColor'] = new _0x441c6d();
        }
        ['cloneTo'](_0x31b6b1) {
            var _0x57cd15 = _0x6027f5;
            this[_0x57cd15(0xa67)][_0x57cd15(0x1fc)](_0x31b6b1[_0x57cd15(0xa67)]), this[_0x57cd15(0xa68)]['cloneTo'](_0x31b6b1['endPosition']), this[_0x57cd15(0xe2c)]['cloneTo'](_0x31b6b1[_0x57cd15(0xe2c)]), this['endColor'][_0x57cd15(0x1fc)](_0x31b6b1['endColor']);
        }
    }, _0x18be32[_0x6027f5(0x1170)] = _0xdddb6a, _0x18be32[_0x6027f5(0x1171)] = _0x5b1b35, _0x18be32[_0x6027f5(0x1172)] = _0x4d90da, _0x18be32[_0x6027f5(0x1173)] = _0x1570e6, _0x18be32[_0x6027f5(0x1174)] = _0x551dd1, _0x18be32['Plane'] = _0x5a837f, _0x18be32[_0x6027f5(0xb5e)] = _0xcfaab4, _0x18be32[_0x6027f5(0x1175)] = _0x1f6982, _0x18be32['PostProcessEffect'] = _0x57a6c6, _0x18be32[_0x6027f5(0x1176)] = _0x13d567, _0x18be32[_0x6027f5(0x1177)] = _0x3955c2, _0x18be32[_0x6027f5(0x576)] = _0x528999, _0x18be32[_0x6027f5(0x1178)] = _0x18a7c7, _0x18be32[_0x6027f5(0x1179)] = _0x44a5c1, _0x18be32[_0x6027f5(0x117a)] = _0x5a628e, _0x18be32[_0x6027f5(0x117b)] = _0x31e56b, _0x18be32[_0x6027f5(0x1002)] = _0x24dd24, _0x18be32[_0x6027f5(0x117c)] = _0x20337f, _0x18be32['ReflectionProbeManager'] = _0x5071f6, _0x18be32[_0x6027f5(0x117d)] = _0x50b403, _0x18be32[_0x6027f5(0x22a)] = _0x50feff, _0x18be32['RenderQueue'] = _0x53bb9f, _0x18be32[_0x6027f5(0x117e)] = _0x47a097, _0x18be32['RenderTexture'] = _0x26547d, _0x18be32[_0x6027f5(0x117f)] = _0x221092, _0x18be32['RotationOverLifetime'] = _0xc99a84, _0x18be32['Scene3D'] = _0x9c4b57, _0x18be32[_0x6027f5(0x1180)] = _0x43184a, _0x18be32[_0x6027f5(0x1181)] = _0x565b79, _0x18be32[_0x6027f5(0x1182)] = _0x39fe36, _0x18be32[_0x6027f5(0x1183)] = _0x22efc5, _0x18be32[_0x6027f5(0x1184)] = _0x54c28e, _0x18be32[_0x6027f5(0x1185)] = _0x1d9bbb, _0x18be32[_0x6027f5(0x1186)] = _0x32f706, _0x18be32[_0x6027f5(0x1187)] = _0x301fd5, _0x18be32[_0x6027f5(0x224)] = _0x3a9f31, _0x18be32[_0x6027f5(0x1188)] = _0x3985fd, _0x18be32[_0x6027f5(0x1189)] = _0x2145e2, _0x18be32[_0x6027f5(0x118a)] = _0x5d0120, _0x18be32['ShaderInstance'] = _0x230f9c, _0x18be32['ShaderPass'] = _0xe5c8a, _0x18be32[_0x6027f5(0x118b)] = _0x38b639, _0x18be32[_0x6027f5(0x118c)] = _0x64cfdc, _0x18be32['ShaderVariantCollection'] = _0x39eed8, _0x18be32[_0x6027f5(0x118d)] = _0x170273, _0x18be32[_0x6027f5(0x118e)] = _0x191220, _0x18be32[_0x6027f5(0x118f)] = _0x483d68, _0x18be32[_0x6027f5(0x1190)] = _0x5bab53, _0x18be32[_0x6027f5(0x1191)] = _0x3c155f, _0x18be32[_0x6027f5(0x1192)] = _0x522276, _0x18be32['ShuriKenParticle3D'] = _0x47d536, _0x18be32['ShuriKenParticle3DShaderDeclaration'] = _0x54eac9, _0x18be32['ShurikenParticleData'] = _0xe4da7f, _0x18be32[_0x6027f5(0x1193)] = _0x3a9279, _0x18be32[_0x6027f5(0x1194)] = _0xa7c03a, _0x18be32[_0x6027f5(0x1195)] = _0xec89de, _0x18be32['SimpleSingletonList'] = _0x3a62b0, _0x18be32[_0x6027f5(0x1196)] = _0x5adade, _0x18be32['SimpleSkinnedMeshSprite3D'] = _0x1a32b6, _0x18be32[_0x6027f5(0x1197)] = _0x2af7e0, _0x18be32[_0x6027f5(0x1198)] = _0x30ead6, _0x18be32['SizeOverLifetime'] = _0x2570df, _0x18be32['SkinnedMeshRenderer'] = _0x357af4, _0x18be32[_0x6027f5(0xfff)] = _0x45dde3, _0x18be32[_0x6027f5(0x1199)] = _0x4cc24a, _0x18be32['SkyBox'] = _0x5ee7a8, _0x18be32[_0x6027f5(0x119a)] = _0x4842a3, _0x18be32[_0x6027f5(0x119b)] = _0x224a66, _0x18be32[_0x6027f5(0x119c)] = _0x5bd0bd, _0x18be32['SkyPanoramicMaterial'] = _0x577d6a, _0x18be32[_0x6027f5(0x119d)] = _0xdfb891, _0x18be32[_0x6027f5(0x119e)] = _0xc214db, _0x18be32['SphereShape'] = _0x47a2d1, _0x18be32[_0x6027f5(0x119f)] = _0x44b580, _0x18be32[_0x6027f5(0xb5d)] = _0x21b275, _0x18be32[_0x6027f5(0xffd)] = _0x44a154, _0x18be32[_0x6027f5(0x11a0)] = _0x3e5b1d, _0x18be32[_0x6027f5(0x11a1)] = _0x423717, _0x18be32[_0x6027f5(0x11a2)] = _0x5e1dab, _0x18be32[_0x6027f5(0x226)] = _0xc8c0ff, _0x18be32[_0x6027f5(0x11a3)] = _0x4da149, _0x18be32[_0x6027f5(0x22d)] = _0x2057f1, _0x18be32[_0x6027f5(0x11a4)] = _0x2fcfcc, _0x18be32[_0x6027f5(0x11a5)] = _0x8750c3, _0x18be32[_0x6027f5(0x11a6)] = class {
        constructor() {
        }
        get ['text']() {
            var _0xf8dc86 = _0x6027f5;
            return this[_0xf8dc86(0x11a7)];
        }
        set [_0x6027f5(0xc4b)](_0x325045) {
            var _0xca338c = _0x6027f5;
            this[_0xca338c(0x11a7)] = _0x325045;
        }
        get [_0x6027f5(0x11a8)]() {
            return this['_fontSize'];
        }
        set [_0x6027f5(0x11a8)](_0x1df696) {
            var _0x730f4 = _0x6027f5;
            this[_0x730f4(0x11a9)] = _0x1df696;
        }
        get ['color']() {
            var _0xfa83bc = _0x6027f5;
            return this[_0xfa83bc(0xd1a)];
        }
        set ['color'](_0x30a181) {
            var _0x51e54f = _0x6027f5;
            this[_0x51e54f(0xd1a)] = _0x30a181;
        }
    }, _0x18be32[_0x6027f5(0x11aa)] = _0x2fe14f, _0x18be32[_0x6027f5(0x11ab)] = _0xe5eba5, _0x18be32['TextureMode'] = _0x3b4301, _0x18be32[_0x6027f5(0x11ac)] = _0x593b73, _0x18be32[_0x6027f5(0x11ad)] = _0x337cb9, _0x18be32[_0x6027f5(0x11ae)] = _0x54ef03, _0x18be32[_0x6027f5(0x11af)] = _0x359f23, _0x18be32[_0x6027f5(0x11b0)] = _0x52600c, _0x18be32[_0x6027f5(0x11b1)] = _0x3366d4, _0x18be32[_0x6027f5(0x1010)] = _0x8b289e, _0x18be32[_0x6027f5(0x11b2)] = _0xaeafd1, _0x18be32[_0x6027f5(0x11b3)] = _0x34269a, _0x18be32['Utils3D'] = _0x3acd08, _0x18be32[_0x6027f5(0x575)] = _0x30a72c, _0x18be32[_0x6027f5(0x46b)] = _0x3697cd, _0x18be32[_0x6027f5(0x11b4)] = _0x1b6908, _0x18be32[_0x6027f5(0x4fd)] = _0x5b8e4e, _0x18be32[_0x6027f5(0x11b5)] = _0x13760e, _0x18be32[_0x6027f5(0x11b6)] = _0x2ce777, _0x18be32[_0x6027f5(0x11b7)] = _0x4b2139, _0x18be32[_0x6027f5(0x11b8)] = _0x25649b, _0x18be32['VertexElementFormat'] = _0x53b5cc, _0x18be32[_0x6027f5(0x11b9)] = _0x73b54a, _0x18be32[_0x6027f5(0x11ba)] = _0x14d998, _0x18be32[_0x6027f5(0x11bb)] = _0x3e85a5, _0x18be32[_0x6027f5(0x11bc)] = _0x3c247f, _0x18be32[_0x6027f5(0x11bd)] = _0x11443b, _0x18be32['VertexShurikenParticleMesh'] = _0x107170, _0x18be32['VertexTrail'] = _0x2113d8, _0x18be32[_0x6027f5(0x11be)] = _0x573b01, _0x18be32[_0x6027f5(0x11bf)] = _0x9bc6bd, _0x18be32[_0x6027f5(0x11c0)] = _0x28557f;
}(window['Laya'] = window[_0x3117a1(0x68d)] || {}, Laya));