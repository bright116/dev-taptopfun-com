var _0x27cde3 = _0x1d70;
(function (_0x106e3c, _0x534a5a) {
    var _0x1a3ea6 = _0x1d70, _0x5c1736 = _0x106e3c();
    while (!![]) {
        try {
            var _0xaffe6a = parseInt(_0x1a3ea6(0x1da)) / 0x1 * (parseInt(_0x1a3ea6(0x1db)) / 0x2) + parseInt(_0x1a3ea6(0x1dc)) / 0x3 + parseInt(_0x1a3ea6(0x1dd)) / 0x4 * (-parseInt(_0x1a3ea6(0x1de)) / 0x5) + -parseInt(_0x1a3ea6(0x1df)) / 0x6 * (parseInt(_0x1a3ea6(0x1e0)) / 0x7) + -parseInt(_0x1a3ea6(0x1e1)) / 0x8 + -parseInt(_0x1a3ea6(0x1e2)) / 0x9 * (parseInt(_0x1a3ea6(0x1e3)) / 0xa) + parseInt(_0x1a3ea6(0x1e4)) / 0xb * (parseInt(_0x1a3ea6(0x1e5)) / 0xc);
            if (_0xaffe6a === _0x534a5a)
                break;
            else
                _0x5c1736['push'](_0x5c1736['shift']());
        } catch (_0x46c002) {
            _0x5c1736['push'](_0x5c1736['shift']());
        }
    }
}(_0x3870, 0x4f092), function (_0x71dec4, _0x218b83) {
    'use strict';
    var _0x5659be = _0x1d70;
    class _0x57b8d6 {
        constructor() {
        }
        static [_0x5659be(0x1e6)](_0x271b30) {
            var _0x229b80 = _0x5659be;
            return Math[_0x229b80(0x1e7)](_0x271b30) < _0x57b8d6['zeroTolerance'];
        }
        static [_0x5659be(0x1e8)](_0x1dcaea, _0x2c8ead) {
            var _0x3cabb8 = _0x5659be;
            if (_0x57b8d6[_0x3cabb8(0x1e6)](_0x1dcaea - _0x2c8ead))
                return !![];
            return ![];
        }
        static [_0x5659be(0x1e9)](_0x20777f) {
            var _0x5b2831 = _0x5659be;
            if (_0x57b8d6[_0x5b2831(0x1e6)](_0x20777f))
                return _0x20777f;
            return 0x1 / Math[_0x5b2831(0x1ea)](_0x20777f);
        }
    }
    _0x57b8d6[_0x5659be(0x1eb)] = 0.000001, _0x57b8d6[_0x5659be(0x1ec)] = 0xffffff048ff9e8000000000000000000, _0x57b8d6['MinValue'] = -0xffffff048ff9e8000000000000000000, _0x57b8d6[_0x5659be(0x1ed)] = Math['PI'] / 0xb4;
    class _0x12bf01 {
        constructor(_0xf54d4e = 0x0, _0x1aeba5 = 0x0) {
            this['x'] = _0xf54d4e, this['y'] = _0x1aeba5;
        }
        ['setValue'](_0x106e05, _0x7d9224) {
            this['x'] = _0x106e05, this['y'] = _0x7d9224;
        }
        static [_0x5659be(0x1ee)](_0x1c1064, _0x38a4a6, _0x375cf6) {
            _0x375cf6['x'] = _0x1c1064['x'] * _0x38a4a6, _0x375cf6['y'] = _0x1c1064['y'] * _0x38a4a6;
        }
        ['fromArray'](_0x314700, _0x313840 = 0x0) {
            this['x'] = _0x314700[_0x313840 + 0x0], this['y'] = _0x314700[_0x313840 + 0x1];
        }
        [_0x5659be(0x1ef)](_0x33eab8, _0x593f34 = 0x0) {
            _0x33eab8[_0x593f34 + 0x0] = this['x'], _0x33eab8[_0x593f34 + 0x1] = this['y'];
        }
        [_0x5659be(0x1f0)](_0x1d205d) {
            var _0x24181a = _0x1d205d;
            _0x24181a['x'] = this['x'], _0x24181a['y'] = this['y'];
        }
        static [_0x5659be(0x1f1)](_0xac4f91, _0x1d427c) {
            return _0xac4f91['x'] * _0x1d427c['x'] + _0xac4f91['y'] * _0x1d427c['y'];
        }
        static [_0x5659be(0x1f2)](_0x301b1b, _0x4387d7) {
            var _0x29e508 = _0x5659be, _0x383753 = _0x301b1b['x'], _0x14fbb0 = _0x301b1b['y'], _0xc4c66d = _0x383753 * _0x383753 + _0x14fbb0 * _0x14fbb0;
            _0xc4c66d > 0x0 && (_0xc4c66d = 0x1 / Math[_0x29e508(0x1ea)](_0xc4c66d), _0x4387d7['x'] = _0x383753 * _0xc4c66d, _0x4387d7['y'] = _0x14fbb0 * _0xc4c66d);
        }
        static [_0x5659be(0x1f3)](_0x40a83f) {
            var _0x545bae = _0x5659be, _0x15d98f = _0x40a83f['x'], _0xb42f53 = _0x40a83f['y'];
            return Math[_0x545bae(0x1ea)](_0x15d98f * _0x15d98f + _0xb42f53 * _0xb42f53);
        }
        [_0x5659be(0x1f4)]() {
            var _0x1ff1d = _0x5659be, _0x2964ba = new _0x12bf01();
            return this[_0x1ff1d(0x1f0)](_0x2964ba), _0x2964ba;
        }
        [_0x5659be(0x1f5)](_0xd5c3d7 = null) {
            var _0x485ea0 = _0x5659be;
            _0xd5c3d7 ? (this[_0x485ea0(0x1f6)] = _0xd5c3d7, this[_0x485ea0(0x1f6)][0x0] = this['x'], this[_0x485ea0(0x1f6)][0x1] = this['y']) : this['elements'] = new Float32Array([
                this['x'],
                this['y']
            ]), _0x12bf01['rewriteNumProperty'](this, 'x', 0x0), _0x12bf01[_0x485ea0(0x1f7)](this, 'y', 0x1);
        }
        static [_0x5659be(0x1f7)](_0x12989f, _0x12f82a, _0x1829f0) {
            Object['defineProperty'](_0x12989f, _0x12f82a, {
                'get': function () {
                    var _0x3f0c42 = _0x1d70;
                    return this[_0x3f0c42(0x1f6)][_0x1829f0];
                },
                'set': function (_0x1e4383) {
                    this['elements'][_0x1829f0] = _0x1e4383;
                }
            });
        }
    }
    _0x12bf01[_0x5659be(0x1f8)] = new _0x12bf01(0x0, 0x0), _0x12bf01[_0x5659be(0x1f9)] = new _0x12bf01(0x1, 0x1);
    class _0x8fb80 {
        constructor(_0xa24b0e = 0x0, _0x9ac752 = 0x0, _0x581046 = 0x0, _0x13846e = 0x0) {
            this['x'] = _0xa24b0e, this['y'] = _0x9ac752, this['z'] = _0x581046, this['w'] = _0x13846e;
        }
        [_0x5659be(0x1fa)](_0x2423f8, _0x49dfdc, _0x235532, _0x17ca30) {
            this['x'] = _0x2423f8, this['y'] = _0x49dfdc, this['z'] = _0x235532, this['w'] = _0x17ca30;
        }
        [_0x5659be(0x1fb)](_0x428ed3, _0x518cee = 0x0) {
            this['x'] = _0x428ed3[_0x518cee + 0x0], this['y'] = _0x428ed3[_0x518cee + 0x1], this['z'] = _0x428ed3[_0x518cee + 0x2], this['w'] = _0x428ed3[_0x518cee + 0x3];
        }
        [_0x5659be(0x1ef)](_0x50068f, _0x2caeff = 0x0) {
            _0x50068f[_0x2caeff + 0x0] = this['x'], _0x50068f[_0x2caeff + 0x1] = this['y'], _0x50068f[_0x2caeff + 0x2] = this['z'], _0x50068f[_0x2caeff + 0x3] = this['w'];
        }
        ['cloneTo'](_0x412e3c) {
            var _0x157235 = _0x412e3c;
            _0x157235['x'] = this['x'], _0x157235['y'] = this['y'], _0x157235['z'] = this['z'], _0x157235['w'] = this['w'];
        }
        ['clone']() {
            var _0x30fa47 = _0x5659be, _0x450b4e = new _0x8fb80();
            return this[_0x30fa47(0x1f0)](_0x450b4e), _0x450b4e;
        }
        static [_0x5659be(0x1fc)](_0x4fbfe2, _0x6021dd, _0x25e81a, _0x451fc6) {
            var _0x168f32 = _0x4fbfe2['x'], _0x4bd682 = _0x4fbfe2['y'], _0x1c070e = _0x4fbfe2['z'], _0x1a8c91 = _0x4fbfe2['w'];
            _0x451fc6['x'] = _0x168f32 + _0x25e81a * (_0x6021dd['x'] - _0x168f32), _0x451fc6['y'] = _0x4bd682 + _0x25e81a * (_0x6021dd['y'] - _0x4bd682), _0x451fc6['z'] = _0x1c070e + _0x25e81a * (_0x6021dd['z'] - _0x1c070e), _0x451fc6['w'] = _0x1a8c91 + _0x25e81a * (_0x6021dd['w'] - _0x1a8c91);
        }
        static [_0x5659be(0x1fd)](_0x335139, _0x6c9c6e, _0x1bbf6e) {
            var _0x368e5b = _0x335139['x'], _0x3b2e97 = _0x335139['y'], _0xf79b41 = _0x335139['z'], _0x39eef7 = _0x335139['w'], _0x529fe6 = _0x6c9c6e['elements'];
            _0x1bbf6e['x'] = _0x368e5b * _0x529fe6[0x0] + _0x3b2e97 * _0x529fe6[0x4] + _0xf79b41 * _0x529fe6[0x8] + _0x39eef7 * _0x529fe6[0xc], _0x1bbf6e['y'] = _0x368e5b * _0x529fe6[0x1] + _0x3b2e97 * _0x529fe6[0x5] + _0xf79b41 * _0x529fe6[0x9] + _0x39eef7 * _0x529fe6[0xd], _0x1bbf6e['z'] = _0x368e5b * _0x529fe6[0x2] + _0x3b2e97 * _0x529fe6[0x6] + _0xf79b41 * _0x529fe6[0xa] + _0x39eef7 * _0x529fe6[0xe], _0x1bbf6e['w'] = _0x368e5b * _0x529fe6[0x3] + _0x3b2e97 * _0x529fe6[0x7] + _0xf79b41 * _0x529fe6[0xb] + _0x39eef7 * _0x529fe6[0xf];
        }
        static [_0x5659be(0x1fe)](_0x1c02b3, _0x3dece8) {
            var _0x3f3007 = _0x5659be;
            return _0x57b8d6['nearEqual'](Math[_0x3f3007(0x1e7)](_0x1c02b3['x']), Math['abs'](_0x3dece8['x'])) && _0x57b8d6[_0x3f3007(0x1e8)](Math[_0x3f3007(0x1e7)](_0x1c02b3['y']), Math[_0x3f3007(0x1e7)](_0x3dece8['y'])) && _0x57b8d6[_0x3f3007(0x1e8)](Math[_0x3f3007(0x1e7)](_0x1c02b3['z']), Math['abs'](_0x3dece8['z'])) && _0x57b8d6[_0x3f3007(0x1e8)](Math[_0x3f3007(0x1e7)](_0x1c02b3['w']), Math[_0x3f3007(0x1e7)](_0x3dece8['w']));
        }
        [_0x5659be(0x1ff)]() {
            var _0x2d6f92 = _0x5659be;
            return Math[_0x2d6f92(0x1ea)](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        [_0x5659be(0x200)]() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x1a5041, _0x575c8f) {
            var _0x81790 = _0x1a5041['length']();
            if (_0x81790 > 0x0) {
                var _0x2e4b77 = 0x1 / _0x81790;
                _0x575c8f['x'] = _0x1a5041['x'] * _0x2e4b77, _0x575c8f['y'] = _0x1a5041['y'] * _0x2e4b77, _0x575c8f['z'] = _0x1a5041['z'] * _0x2e4b77, _0x575c8f['w'] = _0x1a5041['w'] * _0x2e4b77;
            }
        }
        static [_0x5659be(0x201)](_0x58a9f7, _0x221d71, _0x1aeddb) {
            _0x1aeddb['x'] = _0x58a9f7['x'] + _0x221d71['x'], _0x1aeddb['y'] = _0x58a9f7['y'] + _0x221d71['y'], _0x1aeddb['z'] = _0x58a9f7['z'] + _0x221d71['z'], _0x1aeddb['w'] = _0x58a9f7['w'] + _0x221d71['w'];
        }
        static ['subtract'](_0x4b5fd5, _0x3e60a9, _0x2c7fa8) {
            _0x2c7fa8['x'] = _0x4b5fd5['x'] - _0x3e60a9['x'], _0x2c7fa8['y'] = _0x4b5fd5['y'] - _0x3e60a9['y'], _0x2c7fa8['z'] = _0x4b5fd5['z'] - _0x3e60a9['z'], _0x2c7fa8['w'] = _0x4b5fd5['w'] - _0x3e60a9['w'];
        }
        static [_0x5659be(0x202)](_0x28e429, _0x5677ed, _0x467726) {
            _0x467726['x'] = _0x28e429['x'] * _0x5677ed['x'], _0x467726['y'] = _0x28e429['y'] * _0x5677ed['y'], _0x467726['z'] = _0x28e429['z'] * _0x5677ed['z'], _0x467726['w'] = _0x28e429['w'] * _0x5677ed['w'];
        }
        static [_0x5659be(0x1ee)](_0x48c333, _0x46e093, _0x57664a) {
            _0x57664a['x'] = _0x48c333['x'] * _0x46e093, _0x57664a['y'] = _0x48c333['y'] * _0x46e093, _0x57664a['z'] = _0x48c333['z'] * _0x46e093, _0x57664a['w'] = _0x48c333['w'] * _0x46e093;
        }
        static ['Clamp'](_0x49c6e3, _0x129f40, _0x5df817, _0x36396f) {
            var _0x20fb21 = _0x49c6e3['x'], _0x4e6b03 = _0x49c6e3['y'], _0x302e21 = _0x49c6e3['z'], _0x198b75 = _0x49c6e3['w'], _0x50b394 = _0x129f40['x'], _0x9b8680 = _0x129f40['y'], _0x51c520 = _0x129f40['z'], _0x22c6f2 = _0x129f40['w'], _0xfa138b = _0x5df817['x'], _0x2a4d59 = _0x5df817['y'], _0x53b964 = _0x5df817['z'], _0x16b9fa = _0x5df817['w'];
            _0x20fb21 = _0x20fb21 > _0xfa138b ? _0xfa138b : _0x20fb21, _0x20fb21 = _0x20fb21 < _0x50b394 ? _0x50b394 : _0x20fb21, _0x4e6b03 = _0x4e6b03 > _0x2a4d59 ? _0x2a4d59 : _0x4e6b03, _0x4e6b03 = _0x4e6b03 < _0x9b8680 ? _0x9b8680 : _0x4e6b03, _0x302e21 = _0x302e21 > _0x53b964 ? _0x53b964 : _0x302e21, _0x302e21 = _0x302e21 < _0x51c520 ? _0x51c520 : _0x302e21, _0x198b75 = _0x198b75 > _0x16b9fa ? _0x16b9fa : _0x198b75, _0x198b75 = _0x198b75 < _0x22c6f2 ? _0x22c6f2 : _0x198b75, _0x36396f['x'] = _0x20fb21, _0x36396f['y'] = _0x4e6b03, _0x36396f['z'] = _0x302e21, _0x36396f['w'] = _0x198b75;
        }
        static [_0x5659be(0x203)](_0x1cd796, _0x50c3cd) {
            var _0x2031fd = _0x1cd796['x'] - _0x50c3cd['x'], _0xee279e = _0x1cd796['y'] - _0x50c3cd['y'], _0x2dff46 = _0x1cd796['z'] - _0x50c3cd['z'], _0x3028a1 = _0x1cd796['w'] - _0x50c3cd['w'];
            return _0x2031fd * _0x2031fd + _0xee279e * _0xee279e + _0x2dff46 * _0x2dff46 + _0x3028a1 * _0x3028a1;
        }
        static ['distance'](_0x2dae5b, _0x276cff) {
            var _0x5020d8 = _0x5659be, _0x1f0917 = _0x2dae5b['x'] - _0x276cff['x'], _0x31221b = _0x2dae5b['y'] - _0x276cff['y'], _0x1ab283 = _0x2dae5b['z'] - _0x276cff['z'], _0x5454a9 = _0x2dae5b['w'] - _0x276cff['w'];
            return Math[_0x5020d8(0x1ea)](_0x1f0917 * _0x1f0917 + _0x31221b * _0x31221b + _0x1ab283 * _0x1ab283 + _0x5454a9 * _0x5454a9);
        }
        static ['dot'](_0x127189, _0x2b0fb2) {
            return _0x127189['x'] * _0x2b0fb2['x'] + _0x127189['y'] * _0x2b0fb2['y'] + _0x127189['z'] * _0x2b0fb2['z'] + _0x127189['w'] * _0x2b0fb2['w'];
        }
        static [_0x5659be(0x204)](_0x3c345b, _0x59f008, _0x22c410) {
            var _0x107b48 = _0x5659be;
            _0x22c410['x'] = Math[_0x107b48(0x204)](_0x3c345b['x'], _0x59f008['x']), _0x22c410['y'] = Math[_0x107b48(0x204)](_0x3c345b['y'], _0x59f008['y']), _0x22c410['z'] = Math[_0x107b48(0x204)](_0x3c345b['z'], _0x59f008['z']), _0x22c410['w'] = Math[_0x107b48(0x204)](_0x3c345b['w'], _0x59f008['w']);
        }
        static [_0x5659be(0x205)](_0xc28caf, _0x572e0f, _0x522404) {
            var _0xcb002d = _0x5659be;
            _0x522404['x'] = Math[_0xcb002d(0x205)](_0xc28caf['x'], _0x572e0f['x']), _0x522404['y'] = Math[_0xcb002d(0x205)](_0xc28caf['y'], _0x572e0f['y']), _0x522404['z'] = Math[_0xcb002d(0x205)](_0xc28caf['z'], _0x572e0f['z']), _0x522404['w'] = Math[_0xcb002d(0x205)](_0xc28caf['w'], _0x572e0f['w']);
        }
        [_0x5659be(0x1f5)](_0x26c352 = null) {
            var _0x1e0187 = _0x5659be;
            _0x26c352 ? (this[_0x1e0187(0x1f6)] = _0x26c352, this[_0x1e0187(0x1f6)][0x0] = this['x'], this[_0x1e0187(0x1f6)][0x1] = this['y'], this[_0x1e0187(0x1f6)][0x2] = this['z'], this['elements'][0x3] = this['w']) : this[_0x1e0187(0x1f6)] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x12bf01[_0x1e0187(0x1f7)](this, 'x', 0x0), _0x12bf01[_0x1e0187(0x1f7)](this, 'y', 0x1), _0x12bf01[_0x1e0187(0x1f7)](this, 'z', 0x2), _0x12bf01[_0x1e0187(0x1f7)](this, 'w', 0x3);
        }
    }
    _0x8fb80[_0x5659be(0x1f8)] = new _0x8fb80(), _0x8fb80['ONE'] = new _0x8fb80(0x1, 0x1, 0x1, 0x1), _0x8fb80['UnitX'] = new _0x8fb80(0x1, 0x0, 0x0, 0x0), _0x8fb80['UnitY'] = new _0x8fb80(0x0, 0x1, 0x0, 0x0), _0x8fb80[_0x5659be(0x206)] = new _0x8fb80(0x0, 0x0, 0x1, 0x0), _0x8fb80[_0x5659be(0x207)] = new _0x8fb80(0x0, 0x0, 0x0, 0x1);
    class _0x3f70c5 {
        constructor(_0x3b14ce = 0x0, _0x15c7c5 = 0x0, _0x5d0a89 = 0x0) {
            this['x'] = _0x3b14ce, this['y'] = _0x15c7c5, this['z'] = _0x5d0a89;
        }
        static [_0x5659be(0x203)](_0x52cc80, _0x6ace13) {
            var _0x3aa850 = _0x52cc80['x'] - _0x6ace13['x'], _0xe9326c = _0x52cc80['y'] - _0x6ace13['y'], _0x41b0ab = _0x52cc80['z'] - _0x6ace13['z'];
            return _0x3aa850 * _0x3aa850 + _0xe9326c * _0xe9326c + _0x41b0ab * _0x41b0ab;
        }
        static [_0x5659be(0x208)](_0x328498, _0x3c6eb3) {
            var _0x547ad7 = _0x5659be, _0x31e894 = _0x328498['x'] - _0x3c6eb3['x'], _0x16d9ac = _0x328498['y'] - _0x3c6eb3['y'], _0x13d34f = _0x328498['z'] - _0x3c6eb3['z'];
            return Math[_0x547ad7(0x1ea)](_0x31e894 * _0x31e894 + _0x16d9ac * _0x16d9ac + _0x13d34f * _0x13d34f);
        }
        static [_0x5659be(0x204)](_0x1f832c, _0x1a79d5, _0x3c95a4) {
            var _0x3ed051 = _0x5659be;
            _0x3c95a4['x'] = Math[_0x3ed051(0x204)](_0x1f832c['x'], _0x1a79d5['x']), _0x3c95a4['y'] = Math[_0x3ed051(0x204)](_0x1f832c['y'], _0x1a79d5['y']), _0x3c95a4['z'] = Math[_0x3ed051(0x204)](_0x1f832c['z'], _0x1a79d5['z']);
        }
        static [_0x5659be(0x205)](_0x44cdff, _0x21bd8f, _0x55e5f2) {
            var _0x155892 = _0x5659be;
            _0x55e5f2['x'] = Math[_0x155892(0x205)](_0x44cdff['x'], _0x21bd8f['x']), _0x55e5f2['y'] = Math[_0x155892(0x205)](_0x44cdff['y'], _0x21bd8f['y']), _0x55e5f2['z'] = Math[_0x155892(0x205)](_0x44cdff['z'], _0x21bd8f['z']);
        }
        static [_0x5659be(0x209)](_0xa78999, _0x388eba, _0x2a5748) {
            var _0x1166ea = _0xa78999['x'], _0x302b83 = _0xa78999['y'], _0x301931 = _0xa78999['z'], _0x48b35f = _0x388eba['x'], _0x3279f9 = _0x388eba['y'], _0x38c218 = _0x388eba['z'], _0x3ca5ca = _0x388eba['w'], _0x31d98f = _0x3ca5ca * _0x1166ea + _0x3279f9 * _0x301931 - _0x38c218 * _0x302b83, _0x21311e = _0x3ca5ca * _0x302b83 + _0x38c218 * _0x1166ea - _0x48b35f * _0x301931, _0xcfded5 = _0x3ca5ca * _0x301931 + _0x48b35f * _0x302b83 - _0x3279f9 * _0x1166ea, _0x5c8ef0 = -_0x48b35f * _0x1166ea - _0x3279f9 * _0x302b83 - _0x38c218 * _0x301931;
            _0x2a5748['x'] = _0x31d98f * _0x3ca5ca + _0x5c8ef0 * -_0x48b35f + _0x21311e * -_0x38c218 - _0xcfded5 * -_0x3279f9, _0x2a5748['y'] = _0x21311e * _0x3ca5ca + _0x5c8ef0 * -_0x3279f9 + _0xcfded5 * -_0x48b35f - _0x31d98f * -_0x38c218, _0x2a5748['z'] = _0xcfded5 * _0x3ca5ca + _0x5c8ef0 * -_0x38c218 + _0x31d98f * -_0x3279f9 - _0x21311e * -_0x48b35f;
        }
        static [_0x5659be(0x1f3)](_0x1099fb) {
            var _0x45d86b = _0x1099fb['x'], _0x1016b5 = _0x1099fb['y'], _0x23d4ce = _0x1099fb['z'];
            return Math['sqrt'](_0x45d86b * _0x45d86b + _0x1016b5 * _0x1016b5 + _0x23d4ce * _0x23d4ce);
        }
        static [_0x5659be(0x20a)](_0x16ba70) {
            var _0x23866f = _0x16ba70['x'], _0x4d161f = _0x16ba70['y'], _0x28baa2 = _0x16ba70['z'];
            return _0x23866f * _0x23866f + _0x4d161f * _0x4d161f + _0x28baa2 * _0x28baa2;
        }
        static [_0x5659be(0x1f2)](_0x5e26fd, _0x5f331f) {
            var _0x2c84c1 = _0x5e26fd['x'], _0x468ec9 = _0x5e26fd['y'], _0x912b18 = _0x5e26fd['z'], _0x45425c = _0x2c84c1 * _0x2c84c1 + _0x468ec9 * _0x468ec9 + _0x912b18 * _0x912b18;
            _0x45425c > 0x0 && (_0x45425c = 0x1 / Math['sqrt'](_0x45425c), _0x5f331f['x'] = _0x2c84c1 * _0x45425c, _0x5f331f['y'] = _0x468ec9 * _0x45425c, _0x5f331f['z'] = _0x912b18 * _0x45425c);
        }
        static [_0x5659be(0x202)](_0xbf37a5, _0x352ae9, _0x1554f9) {
            _0x1554f9['x'] = _0xbf37a5['x'] * _0x352ae9['x'], _0x1554f9['y'] = _0xbf37a5['y'] * _0x352ae9['y'], _0x1554f9['z'] = _0xbf37a5['z'] * _0x352ae9['z'];
        }
        static [_0x5659be(0x1ee)](_0x5b4eab, _0x362837, _0x3bd49d) {
            _0x3bd49d['x'] = _0x5b4eab['x'] * _0x362837, _0x3bd49d['y'] = _0x5b4eab['y'] * _0x362837, _0x3bd49d['z'] = _0x5b4eab['z'] * _0x362837;
        }
        static [_0x5659be(0x1fc)](_0x31aeac, _0x5ddc69, _0x2835cb, _0x2eb55d) {
            var _0x1d1903 = _0x31aeac['x'], _0x3b1f3e = _0x31aeac['y'], _0x5e63d4 = _0x31aeac['z'];
            _0x2eb55d['x'] = _0x1d1903 + _0x2835cb * (_0x5ddc69['x'] - _0x1d1903), _0x2eb55d['y'] = _0x3b1f3e + _0x2835cb * (_0x5ddc69['y'] - _0x3b1f3e), _0x2eb55d['z'] = _0x5e63d4 + _0x2835cb * (_0x5ddc69['z'] - _0x5e63d4);
        }
        static [_0x5659be(0x20b)](_0x558074, _0x43eb48, _0x5722a9) {
            var _0x91d740 = _0x5659be, _0x12d914 = _0x3f70c5['_tempVector4'];
            _0x3f70c5[_0x91d740(0x20c)](_0x558074, _0x43eb48, _0x12d914), _0x5722a9['x'] = _0x12d914['x'], _0x5722a9['y'] = _0x12d914['y'], _0x5722a9['z'] = _0x12d914['z'];
        }
        static [_0x5659be(0x20c)](_0x3dde7d, _0x1935e4, _0x643d6) {
            var _0x99ecec = _0x5659be, _0x47ef49 = _0x3dde7d['x'], _0x408f3d = _0x3dde7d['y'], _0x28b015 = _0x3dde7d['z'], _0x4a27b6 = _0x1935e4[_0x99ecec(0x1f6)];
            _0x643d6['x'] = _0x47ef49 * _0x4a27b6[0x0] + _0x408f3d * _0x4a27b6[0x4] + _0x28b015 * _0x4a27b6[0x8] + _0x4a27b6[0xc], _0x643d6['y'] = _0x47ef49 * _0x4a27b6[0x1] + _0x408f3d * _0x4a27b6[0x5] + _0x28b015 * _0x4a27b6[0x9] + _0x4a27b6[0xd], _0x643d6['z'] = _0x47ef49 * _0x4a27b6[0x2] + _0x408f3d * _0x4a27b6[0x6] + _0x28b015 * _0x4a27b6[0xa] + _0x4a27b6[0xe], _0x643d6['w'] = _0x47ef49 * _0x4a27b6[0x3] + _0x408f3d * _0x4a27b6[0x7] + _0x28b015 * _0x4a27b6[0xb] + _0x4a27b6[0xf];
        }
        static [_0x5659be(0x20d)](_0x47cc96, _0x4ae64c, _0x3badf6) {
            var _0x1fbaf1 = _0x47cc96['x'], _0x13f253 = _0x47cc96['y'], _0x492f53 = _0x47cc96['z'], _0x1032c1 = _0x4ae64c['elements'];
            _0x3badf6['x'] = _0x1fbaf1 * _0x1032c1[0x0] + _0x13f253 * _0x1032c1[0x4] + _0x492f53 * _0x1032c1[0x8], _0x3badf6['y'] = _0x1fbaf1 * _0x1032c1[0x1] + _0x13f253 * _0x1032c1[0x5] + _0x492f53 * _0x1032c1[0x9], _0x3badf6['z'] = _0x1fbaf1 * _0x1032c1[0x2] + _0x13f253 * _0x1032c1[0x6] + _0x492f53 * _0x1032c1[0xa];
        }
        static [_0x5659be(0x20e)](_0x184bc7, _0x2b188e, _0x44cded) {
            var _0x198830 = _0x5659be, _0x4248a5 = _0x184bc7['x'], _0x3acbec = _0x184bc7['y'], _0x5783db = _0x184bc7['z'], _0x189b59 = _0x2b188e[_0x198830(0x1f6)], _0x6a609b = _0x4248a5 * _0x189b59[0x3] + _0x3acbec * _0x189b59[0x7] + _0x5783db * _0x189b59[0xb] + _0x189b59[0xf];
            _0x44cded['x'] = (_0x4248a5 * _0x189b59[0x0] + _0x3acbec * _0x189b59[0x4] + _0x5783db * _0x189b59[0x8] + _0x189b59[0xc]) / _0x6a609b, _0x44cded['y'] = (_0x4248a5 * _0x189b59[0x1] + _0x3acbec * _0x189b59[0x5] + _0x5783db * _0x189b59[0x9] + _0x189b59[0xd]) / _0x6a609b, _0x44cded['z'] = (_0x4248a5 * _0x189b59[0x2] + _0x3acbec * _0x189b59[0x6] + _0x5783db * _0x189b59[0xa] + _0x189b59[0xe]) / _0x6a609b;
        }
        static [_0x5659be(0x20f)](_0x2f534d, _0x100c56, _0x47fc17, _0x3922f9) {
            var _0x268757 = _0x2f534d['x'], _0x4399b7 = _0x2f534d['y'], _0x2abd13 = _0x2f534d['z'], _0x522ea8 = _0x100c56['x'], _0x85c2b7 = _0x100c56['y'], _0x4a4ac4 = _0x100c56['z'], _0xb5b2b6 = _0x47fc17['x'], _0x467f47 = _0x47fc17['y'], _0x30cc90 = _0x47fc17['z'];
            _0x268757 = _0x268757 > _0xb5b2b6 ? _0xb5b2b6 : _0x268757, _0x268757 = _0x268757 < _0x522ea8 ? _0x522ea8 : _0x268757, _0x4399b7 = _0x4399b7 > _0x467f47 ? _0x467f47 : _0x4399b7, _0x4399b7 = _0x4399b7 < _0x85c2b7 ? _0x85c2b7 : _0x4399b7, _0x2abd13 = _0x2abd13 > _0x30cc90 ? _0x30cc90 : _0x2abd13, _0x2abd13 = _0x2abd13 < _0x4a4ac4 ? _0x4a4ac4 : _0x2abd13, _0x3922f9['x'] = _0x268757, _0x3922f9['y'] = _0x4399b7, _0x3922f9['z'] = _0x2abd13;
        }
        static [_0x5659be(0x201)](_0xda6620, _0x50a154, _0x37edad) {
            _0x37edad['x'] = _0xda6620['x'] + _0x50a154['x'], _0x37edad['y'] = _0xda6620['y'] + _0x50a154['y'], _0x37edad['z'] = _0xda6620['z'] + _0x50a154['z'];
        }
        static [_0x5659be(0x210)](_0xfa9d0b, _0x9589aa, _0x42ab13) {
            _0x42ab13['x'] = _0xfa9d0b['x'] - _0x9589aa['x'], _0x42ab13['y'] = _0xfa9d0b['y'] - _0x9589aa['y'], _0x42ab13['z'] = _0xfa9d0b['z'] - _0x9589aa['z'];
        }
        static [_0x5659be(0x211)](_0x586258, _0x3c8ee5, _0x2a0013) {
            var _0x216371 = _0x586258['x'], _0x328168 = _0x586258['y'], _0x106d40 = _0x586258['z'], _0x29e26c = _0x3c8ee5['x'], _0x2d4c6e = _0x3c8ee5['y'], _0x5916cf = _0x3c8ee5['z'];
            _0x2a0013['x'] = _0x328168 * _0x5916cf - _0x106d40 * _0x2d4c6e, _0x2a0013['y'] = _0x106d40 * _0x29e26c - _0x216371 * _0x5916cf, _0x2a0013['z'] = _0x216371 * _0x2d4c6e - _0x328168 * _0x29e26c;
        }
        static ['dot'](_0x450734, _0x466a61) {
            return _0x450734['x'] * _0x466a61['x'] + _0x450734['y'] * _0x466a61['y'] + _0x450734['z'] * _0x466a61['z'];
        }
        static [_0x5659be(0x1fe)](_0x486c2c, _0x26e5cc) {
            var _0x587e7d = _0x5659be;
            return _0x57b8d6[_0x587e7d(0x1e8)](_0x486c2c['x'], _0x26e5cc['x']) && _0x57b8d6[_0x587e7d(0x1e8)](_0x486c2c['y'], _0x26e5cc['y']) && _0x57b8d6['nearEqual'](_0x486c2c['z'], _0x26e5cc['z']);
        }
        [_0x5659be(0x1fa)](_0x186aa8, _0x89422f, _0x5c1079) {
            this['x'] = _0x186aa8, this['y'] = _0x89422f, this['z'] = _0x5c1079;
        }
        ['fromArray'](_0x4417d4, _0xe67942 = 0x0) {
            this['x'] = _0x4417d4[_0xe67942 + 0x0], this['y'] = _0x4417d4[_0xe67942 + 0x1], this['z'] = _0x4417d4[_0xe67942 + 0x2];
        }
        [_0x5659be(0x1ef)](_0x5f03c1, _0x4ef08b = 0x0) {
            _0x5f03c1[_0x4ef08b + 0x0] = this['x'], _0x5f03c1[_0x4ef08b + 0x1] = this['y'], _0x5f03c1[_0x4ef08b + 0x2] = this['z'];
        }
        ['cloneTo'](_0x4c2ac1) {
            var _0x460f75 = _0x4c2ac1;
            _0x460f75['x'] = this['x'], _0x460f75['y'] = this['y'], _0x460f75['z'] = this['z'];
        }
        [_0x5659be(0x1f4)]() {
            var _0x466346 = _0x5659be, _0x3012ce = new _0x3f70c5();
            return this[_0x466346(0x1f0)](_0x3012ce), _0x3012ce;
        }
        [_0x5659be(0x212)]() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0;
        }
        [_0x5659be(0x1f5)](_0xc5e89d = null) {
            var _0x27a187 = _0x5659be;
            _0xc5e89d ? (this[_0x27a187(0x1f6)] = _0xc5e89d, this[_0x27a187(0x1f6)][0x0] = this['x'], this[_0x27a187(0x1f6)][0x1] = this['y'], this[_0x27a187(0x1f6)][0x2] = this['z']) : this[_0x27a187(0x1f6)] = new Float32Array([
                this['x'],
                this['y'],
                this['z']
            ]), _0x12bf01[_0x27a187(0x1f7)](this, 'x', 0x0), _0x12bf01['rewriteNumProperty'](this, 'y', 0x1), _0x12bf01['rewriteNumProperty'](this, 'z', 0x2);
        }
    }
    _0x3f70c5[_0x5659be(0x213)] = new _0x8fb80(), _0x3f70c5[_0x5659be(0x214)] = new _0x3f70c5(0x0, 0x0, 0x0), _0x3f70c5[_0x5659be(0x215)] = new _0x3f70c5(0x1, 0x1, 0x1), _0x3f70c5[_0x5659be(0x216)] = new _0x3f70c5(-0x1, 0x0, 0x0), _0x3f70c5[_0x5659be(0x217)] = new _0x3f70c5(0x1, 0x0, 0x0), _0x3f70c5['_UnitY'] = new _0x3f70c5(0x0, 0x1, 0x0), _0x3f70c5[_0x5659be(0x218)] = new _0x3f70c5(0x0, 0x0, 0x1), _0x3f70c5[_0x5659be(0x219)] = new _0x3f70c5(0x0, 0x0, -0x1), _0x3f70c5['_ForwardLH'] = new _0x3f70c5(0x0, 0x0, 0x1), _0x3f70c5[_0x5659be(0x21a)] = new _0x3f70c5(0x0, 0x1, 0x0), function (_0x43eda2) {
        var _0x3cafec = _0x5659be;
        _0x43eda2[_0x43eda2[_0x3cafec(0x21b)] = 0x0] = _0x3cafec(0x21b), _0x43eda2[_0x43eda2['Low'] = 0x1] = _0x3cafec(0x21c);
    }(_0x71dec4[_0x5659be(0x21d)] || (_0x71dec4[_0x5659be(0x21d)] = {}));
    class _0x429ec3 {
    }
    _0x429ec3[_0x5659be(0x21e)] = null, _0x429ec3[_0x5659be(0x21f)] = null, _0x429ec3[_0x5659be(0x220)] = null, _0x429ec3[_0x5659be(0x221)] = null, _0x429ec3['SubMeshDynamicBatch'] = null, _0x429ec3['Laya3D'] = null, _0x429ec3[_0x5659be(0x222)] = null, _0x429ec3[_0x5659be(0x223)] = null, _0x429ec3[_0x5659be(0x224)] = null, _0x429ec3['RenderElement'] = null, _0x429ec3[_0x5659be(0x225)] = null, _0x429ec3['Camera'] = null, _0x429ec3['SubMeshRenderElement'] = null;
    class _0x40d5e5 {
        static [_0x5659be(0x226)]() {
            var _0xed248b = _0x5659be;
            this[_0xed248b(0x227)] = window['Physics3D'], this[_0xed248b(0x227)] && (_0x218b83['StaticPlaneColliderShape']['__init__'](), _0x218b83['ColliderShape']['__init__'](), _0x218b83[_0xed248b(0x228)][_0xed248b(0x229)](), _0x218b83[_0xed248b(0x22a)][_0xed248b(0x229)](), _0x218b83['PhysicsSimulation'][_0xed248b(0x229)](), _0x218b83['BoxColliderShape'][_0xed248b(0x229)](), _0x218b83[_0xed248b(0x22b)]['__init__'](), _0x218b83[_0xed248b(0x22c)][_0xed248b(0x229)](), _0x218b83[_0xed248b(0x22d)][_0xed248b(0x229)]());
        }
        static ['__cannoninit__']() {
            var _0x4ce724 = _0x5659be;
            this[_0x4ce724(0x22e)] = window[_0x4ce724(0x22f)];
            if (!this['_cannon'])
                return;
            _0x218b83[_0x4ce724(0x230)]['__init__'](), _0x218b83['CannonPhysicsComponent'][_0x4ce724(0x229)](), _0x218b83[_0x4ce724(0x231)]['__init__'](), _0x218b83[_0x4ce724(0x232)]['__init__'](), _0x218b83['CannonRigidbody3D'][_0x4ce724(0x229)]();
        }
    }
    _0x40d5e5[_0x5659be(0x227)] = null, _0x40d5e5[_0x5659be(0x22e)] = null, _0x40d5e5[_0x5659be(0x233)] = ![];
    class _0x528624 {
        constructor() {
            var _0x407471 = _0x5659be;
            this[_0x407471(0x234)] = 0x10, this[_0x407471(0x235)] = 0x20, this[_0x407471(0x236)] = new _0x3f70c5(0xc, 0xc, 0xc), this[_0x407471(0x237)] = ![], this[_0x407471(0x238)] = !![], this[_0x407471(0x239)] = ![], this[_0x407471(0x23a)] = !![], this['isStencil'] = !![], this[_0x407471(0x23b)] = !![], this['octreeCulling'] = ![], this['octreeInitialSize'] = 0x40, this['octreeInitialCenter'] = new _0x3f70c5(0x0, 0x0, 0x0), this[_0x407471(0x23c)] = 0x2, this[_0x407471(0x23d)] = 1.25, this[_0x407471(0x23e)] = ![], this[_0x407471(0x23f)] = _0x71dec4[_0x407471(0x21d)][_0x407471(0x21b)], this['isUseCannonPhysicsEngine'] = ![], this[_0x407471(0x240)] = Math['min'](Math[_0x407471(0x241)](0x800 / this[_0x407471(0x236)]['z'] - 0x1) * 0x4, this['_maxLightCount']);
        }
        static get [_0x5659be(0x242)]() {
            var _0x1fcfee = _0x5659be;
            return _0x528624[_0x1fcfee(0x243)][_0x1fcfee(0x244)];
        }
        static set [_0x5659be(0x242)](_0x1c715e) {
            var _0x1abf0d = _0x5659be;
            _0x528624[_0x1abf0d(0x243)][_0x1abf0d(0x244)] = _0x1c715e;
            if (_0x1c715e) {
                _0x40d5e5['__cannoninit__']();
                if (!_0x429ec3[_0x1abf0d(0x21f)]['cannonPhysicsSettings'])
                    _0x429ec3[_0x1abf0d(0x21f)][_0x1abf0d(0x245)] = new _0x218b83[(_0x1abf0d(0x246))]();
            }
        }
        static set ['enableDynamicManager'](_0x5896d6) {
            var _0x11fac3 = _0x5659be;
            _0x429ec3[_0x11fac3(0x247)][_0x11fac3(0x248)] = _0x5896d6;
        }
        static get [_0x5659be(0x249)]() {
            var _0x25391c = _0x5659be;
            return _0x429ec3[_0x25391c(0x247)][_0x25391c(0x248)];
        }
        static set ['enableStaticManager'](_0x1b7e82) {
            var _0x2bec48 = _0x5659be;
            _0x429ec3['SubMeshRenderElement'][_0x2bec48(0x24a)] = _0x1b7e82;
        }
        static get ['enableStaticManager']() {
            var _0xde074d = _0x5659be;
            return _0x429ec3[_0xde074d(0x247)][_0xde074d(0x24a)];
        }
        get [_0x5659be(0x24b)]() {
            var _0x3273d8 = _0x5659be;
            return this[_0x3273d8(0x234)];
        }
        set [_0x5659be(0x24b)](_0x35cda5) {
            var _0x46ae41 = _0x5659be;
            if (_0x35cda5 < 0x10)
                throw _0x46ae41(0x24c);
            this[_0x46ae41(0x234)] = _0x35cda5;
        }
        get ['maxLightCount']() {
            var _0x3a37e1 = _0x5659be;
            return this[_0x3a37e1(0x235)];
        }
        set [_0x5659be(0x24d)](_0x289ef0) {
            var _0x4cbc5d = _0x5659be;
            _0x289ef0 > 0x800 ? (this[_0x4cbc5d(0x235)] = 0x800, console[_0x4cbc5d(0x24e)](_0x4cbc5d(0x24f))) : this[_0x4cbc5d(0x235)] = _0x289ef0;
        }
        get [_0x5659be(0x250)]() {
            var _0x167652 = _0x5659be;
            return this[_0x167652(0x236)];
        }
        set ['lightClusterCount'](_0x43dfec) {
            var _0xfabab6 = _0x5659be;
            _0x43dfec['x'] > 0x80 || _0x43dfec['y'] > 0x80 || _0x43dfec['z'] > 0x80 ? (this[_0xfabab6(0x236)][_0xfabab6(0x1fa)](Math[_0xfabab6(0x204)](_0x43dfec['x'], 0x80), Math[_0xfabab6(0x204)](_0x43dfec['y'], 0x80), Math[_0xfabab6(0x204)](_0x43dfec['z'], 0x80)), console[_0xfabab6(0x24e)](_0xfabab6(0x251))) : _0x43dfec[_0xfabab6(0x1f0)](this[_0xfabab6(0x236)]);
            var _0xfcab48 = Math['floor'](0x800 / this['_lightClusterCount']['z'] - 0x1) * 0x4;
            if (_0xfcab48 < this[_0xfabab6(0x235)])
                console[_0xfabab6(0x24e)](_0xfabab6(0x252) + _0xfcab48 + ',maybe\x20the\x20far\x20away\x20culster\x20will\x20ingonre\x20some\x20light.');
            this[_0xfabab6(0x240)] = Math['min'](_0xfcab48, this[_0xfabab6(0x235)]);
        }
        [_0x5659be(0x1f0)](_0x1993ac) {
            var _0x34dec0 = _0x5659be, _0x352ad6 = _0x1993ac;
            _0x352ad6[_0x34dec0(0x234)] = this['_defaultPhysicsMemory'], _0x352ad6[_0x34dec0(0x237)] = this[_0x34dec0(0x237)], _0x352ad6[_0x34dec0(0x238)] = this['isAntialias'], _0x352ad6[_0x34dec0(0x239)] = this[_0x34dec0(0x239)], _0x352ad6['premultipliedAlpha'] = this[_0x34dec0(0x23a)], _0x352ad6[_0x34dec0(0x253)] = this[_0x34dec0(0x253)], _0x352ad6[_0x34dec0(0x254)] = this[_0x34dec0(0x254)], this['octreeInitialCenter'][_0x34dec0(0x1f0)](_0x352ad6[_0x34dec0(0x255)]), _0x352ad6[_0x34dec0(0x256)] = this[_0x34dec0(0x256)], _0x352ad6[_0x34dec0(0x23c)] = this[_0x34dec0(0x23c)], _0x352ad6[_0x34dec0(0x23d)] = this[_0x34dec0(0x23d)], _0x352ad6['debugFrustumCulling'] = this[_0x34dec0(0x23e)], _0x352ad6['maxLightCount'] = this[_0x34dec0(0x24d)], _0x352ad6[_0x34dec0(0x23b)] = this[_0x34dec0(0x23b)];
            var _0x34314e = _0x352ad6['lightClusterCount'];
            this[_0x34dec0(0x250)][_0x34dec0(0x1f0)](_0x34314e), _0x352ad6['lightClusterCount'] = _0x34314e, _0x352ad6[_0x34dec0(0x23f)] = this[_0x34dec0(0x23f)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x5caa94 = _0x5659be, _0x1f6c39 = new _0x528624();
            return this[_0x5caa94(0x1f0)](_0x1f6c39), _0x1f6c39;
        }
    }
    _0x528624['_config'] = new _0x528624(), window['Config3D'] = _0x528624;
    class _0x4a2d82 {
        constructor() {
            var _0x217ccf = _0x5659be;
            this['_ownerPath'] = [], this[_0x217ccf(0x257)] = [], this[_0x217ccf(0x258)] = [];
        }
        get [_0x5659be(0x259)]() {
            var _0x94e442 = _0x5659be;
            return this[_0x94e442(0x25a)]['length'];
        }
        get [_0x5659be(0x25b)]() {
            var _0x27f5ca = _0x5659be;
            return this[_0x27f5ca(0x257)]['length'];
        }
        get [_0x5659be(0x25c)]() {
            var _0x3eef79 = _0x5659be;
            return this[_0x3eef79(0x258)][_0x3eef79(0x1ff)];
        }
        [_0x5659be(0x25d)](_0x1a0f8e) {
            var _0x5b0904 = _0x5659be;
            this[_0x5b0904(0x25a)]['length'] = _0x1a0f8e;
        }
        [_0x5659be(0x25e)](_0x2b7799, _0x1cb408) {
            var _0x155ade = _0x5659be;
            this[_0x155ade(0x25a)][_0x2b7799] = _0x1cb408;
        }
        [_0x5659be(0x25f)](_0x38b8db) {
            var _0x1f264d = _0x5659be;
            return this[_0x1f264d(0x25a)]['join'](_0x38b8db);
        }
        ['_setPropertyCount'](_0x33e1db) {
            var _0x55b635 = _0x5659be;
            this[_0x55b635(0x257)][_0x55b635(0x1ff)] = _0x33e1db;
        }
        [_0x5659be(0x260)](_0x21ebfd, _0x36ab1b) {
            this['_propertys'][_0x21ebfd] = _0x36ab1b;
        }
        [_0x5659be(0x261)](_0x37c134) {
            var _0x1f820e = _0x5659be;
            return this[_0x1f820e(0x257)][_0x1f820e(0x262)](_0x37c134);
        }
        [_0x5659be(0x263)](_0x4cbaff) {
            var _0x132ab4 = _0x5659be;
            this[_0x132ab4(0x258)][_0x132ab4(0x1ff)] = _0x4cbaff;
        }
        [_0x5659be(0x264)](_0x210ff9, _0x2a5a96) {
            this['_keyFrames'][_0x210ff9] = _0x2a5a96;
        }
        [_0x5659be(0x265)](_0x5d98b6) {
            return this['_ownerPath'][_0x5d98b6];
        }
        [_0x5659be(0x266)](_0x2462ff) {
            var _0x4fef5f = _0x5659be;
            return this[_0x4fef5f(0x257)][_0x2462ff];
        }
        [_0x5659be(0x267)](_0x3d4993) {
            var _0x5da055 = _0x5659be;
            return this[_0x5da055(0x258)][_0x3d4993];
        }
    }
    class _0x28dc41 {
        constructor() {
        }
    }
    class _0x885a61 {
        constructor() {
        }
        [_0x5659be(0x1f0)](_0x437909) {
            var _0x3ddcf3 = _0x5659be, _0x33767d = _0x437909;
            _0x33767d[_0x3ddcf3(0x268)] = this[_0x3ddcf3(0x268)];
        }
        ['clone']() {
            var _0x17a3b5 = _0x5659be, _0x3c95e4 = new _0x885a61();
            return this[_0x17a3b5(0x1f0)](_0x3c95e4), _0x3c95e4;
        }
    }
    class _0x336653 extends _0x885a61 {
        constructor() {
            super();
        }
        ['cloneTo'](_0x54c8f3) {
            var _0x32bb4a = _0x5659be;
            super[_0x32bb4a(0x1f0)](_0x54c8f3);
            var _0x4e07f9 = _0x54c8f3;
            _0x4e07f9[_0x32bb4a(0x269)] = this[_0x32bb4a(0x269)], _0x4e07f9[_0x32bb4a(0x26a)] = this[_0x32bb4a(0x26a)], _0x4e07f9['value'] = this[_0x32bb4a(0x26b)];
        }
    }
    class _0x14703a {
        constructor() {
            var _0x39f01f = _0x5659be, _0x5d40c8 = this[_0x39f01f(0x1f6)] = new Float32Array(0x9);
            _0x5d40c8[0x0] = 0x1, _0x5d40c8[0x1] = 0x0, _0x5d40c8[0x2] = 0x0, _0x5d40c8[0x3] = 0x0, _0x5d40c8[0x4] = 0x1, _0x5d40c8[0x5] = 0x0, _0x5d40c8[0x6] = 0x0, _0x5d40c8[0x7] = 0x0, _0x5d40c8[0x8] = 0x1;
        }
        static [_0x5659be(0x26c)](_0x3f41d1, _0x5cb7b8) {
            var _0x2d2769 = _0x5659be, _0x9dae9a = _0x3f41d1['x'], _0x3c1e7d = _0x3f41d1['y'], _0x4b3944 = _0x3f41d1['z'], _0x3c825c = _0x3f41d1['w'], _0x962bd7 = _0x9dae9a * _0x9dae9a, _0x6e3b79 = _0x3c1e7d * _0x3c1e7d, _0x526cea = _0x4b3944 * _0x4b3944, _0x2771a4 = _0x9dae9a * _0x3c1e7d, _0x41e1bf = _0x4b3944 * _0x3c825c, _0x2fd964 = _0x4b3944 * _0x9dae9a, _0x2fb70b = _0x3c1e7d * _0x3c825c, _0x5b2bcf = _0x3c1e7d * _0x4b3944, _0x4711dc = _0x9dae9a * _0x3c825c, _0x2c303f = _0x5cb7b8[_0x2d2769(0x1f6)];
            _0x2c303f[0x0] = 0x1 - 0x2 * (_0x6e3b79 + _0x526cea), _0x2c303f[0x1] = 0x2 * (_0x2771a4 + _0x41e1bf), _0x2c303f[0x2] = 0x2 * (_0x2fd964 - _0x2fb70b), _0x2c303f[0x3] = 0x2 * (_0x2771a4 - _0x41e1bf), _0x2c303f[0x4] = 0x1 - 0x2 * (_0x526cea + _0x962bd7), _0x2c303f[0x5] = 0x2 * (_0x5b2bcf + _0x4711dc), _0x2c303f[0x6] = 0x2 * (_0x2fd964 + _0x2fb70b), _0x2c303f[0x7] = 0x2 * (_0x5b2bcf - _0x4711dc), _0x2c303f[0x8] = 0x1 - 0x2 * (_0x6e3b79 + _0x962bd7);
        }
        static [_0x5659be(0x26d)](_0x518433, _0x5a4c64) {
            var _0x23b36a = _0x5a4c64['elements'];
            _0x23b36a[0x0] = 0x1, _0x23b36a[0x1] = 0x0, _0x23b36a[0x2] = 0x0, _0x23b36a[0x3] = 0x0, _0x23b36a[0x4] = 0x1, _0x23b36a[0x5] = 0x0, _0x23b36a[0x6] = _0x518433['x'], _0x23b36a[0x7] = _0x518433['y'], _0x23b36a[0x8] = 0x1;
        }
        static [_0x5659be(0x26e)](_0x35ad00, _0x45908c) {
            var _0x31339c = _0x5659be, _0x3d6b0b = _0x45908c[_0x31339c(0x1f6)], _0x5b6311 = Math[_0x31339c(0x26f)](_0x35ad00), _0x562cdc = Math[_0x31339c(0x270)](_0x35ad00);
            _0x3d6b0b[0x0] = _0x562cdc, _0x3d6b0b[0x1] = _0x5b6311, _0x3d6b0b[0x2] = 0x0, _0x3d6b0b[0x3] = -_0x5b6311, _0x3d6b0b[0x4] = _0x562cdc, _0x3d6b0b[0x5] = 0x0, _0x3d6b0b[0x6] = 0x0, _0x3d6b0b[0x7] = 0x0, _0x3d6b0b[0x8] = 0x1;
        }
        static [_0x5659be(0x271)](_0x24c795, _0x515915) {
            var _0x58b258 = _0x5659be, _0x2dc3a4 = _0x515915[_0x58b258(0x1f6)];
            _0x2dc3a4[0x0] = _0x24c795['x'], _0x2dc3a4[0x1] = 0x0, _0x2dc3a4[0x2] = 0x0, _0x2dc3a4[0x3] = 0x0, _0x2dc3a4[0x4] = _0x24c795['y'], _0x2dc3a4[0x5] = 0x0, _0x2dc3a4[0x6] = 0x0, _0x2dc3a4[0x7] = 0x0, _0x2dc3a4[0x8] = _0x24c795['z'];
        }
        static ['createFromMatrix4x4'](_0x3cd725, _0x5a448c) {
            var _0x44cefc = _0x5659be, _0x2ebdba = _0x3cd725[_0x44cefc(0x1f6)], _0x4ed8bc = _0x5a448c[_0x44cefc(0x1f6)];
            _0x4ed8bc[0x0] = _0x2ebdba[0x0], _0x4ed8bc[0x1] = _0x2ebdba[0x1], _0x4ed8bc[0x2] = _0x2ebdba[0x2], _0x4ed8bc[0x3] = _0x2ebdba[0x4], _0x4ed8bc[0x4] = _0x2ebdba[0x5], _0x4ed8bc[0x5] = _0x2ebdba[0x6], _0x4ed8bc[0x6] = _0x2ebdba[0x8], _0x4ed8bc[0x7] = _0x2ebdba[0x9], _0x4ed8bc[0x8] = _0x2ebdba[0xa];
        }
        static [_0x5659be(0x202)](_0x1d4263, _0x618095, _0x2b5875) {
            var _0x192778 = _0x5659be, _0x727d3e = _0x1d4263[_0x192778(0x1f6)], _0x426cf4 = _0x618095['elements'], _0x822cc0 = _0x2b5875[_0x192778(0x1f6)], _0x56ce5b = _0x727d3e[0x0], _0x2670bd = _0x727d3e[0x1], _0x3cd3c0 = _0x727d3e[0x2], _0x481c5b = _0x727d3e[0x3], _0x271ab8 = _0x727d3e[0x4], _0x383fad = _0x727d3e[0x5], _0x2b459d = _0x727d3e[0x6], _0x4f85e3 = _0x727d3e[0x7], _0x483320 = _0x727d3e[0x8], _0x1a0c01 = _0x426cf4[0x0], _0x456f54 = _0x426cf4[0x1], _0x29bccf = _0x426cf4[0x2], _0x4576c1 = _0x426cf4[0x3], _0x4716ad = _0x426cf4[0x4], _0x5af385 = _0x426cf4[0x5], _0x3d15f4 = _0x426cf4[0x6], _0x2ff675 = _0x426cf4[0x7], _0x4146c9 = _0x426cf4[0x8];
            _0x822cc0[0x0] = _0x1a0c01 * _0x56ce5b + _0x456f54 * _0x481c5b + _0x29bccf * _0x2b459d, _0x822cc0[0x1] = _0x1a0c01 * _0x2670bd + _0x456f54 * _0x271ab8 + _0x29bccf * _0x2ff675, _0x822cc0[0x2] = _0x1a0c01 * _0x3cd3c0 + _0x456f54 * _0x383fad + _0x29bccf * _0x483320, _0x822cc0[0x3] = _0x4576c1 * _0x56ce5b + _0x4716ad * _0x481c5b + _0x5af385 * _0x2b459d, _0x822cc0[0x4] = _0x4576c1 * _0x2670bd + _0x4716ad * _0x271ab8 + _0x5af385 * _0x4f85e3, _0x822cc0[0x5] = _0x4576c1 * _0x3cd3c0 + _0x4716ad * _0x383fad + _0x5af385 * _0x483320, _0x822cc0[0x6] = _0x3d15f4 * _0x56ce5b + _0x2ff675 * _0x481c5b + _0x4146c9 * _0x2b459d, _0x822cc0[0x7] = _0x3d15f4 * _0x2670bd + _0x2ff675 * _0x271ab8 + _0x4146c9 * _0x4f85e3, _0x822cc0[0x8] = _0x3d15f4 * _0x3cd3c0 + _0x2ff675 * _0x383fad + _0x4146c9 * _0x483320;
        }
        [_0x5659be(0x272)]() {
            var _0xa512f4 = _0x5659be, _0xb3041f = this[_0xa512f4(0x1f6)], _0x377099 = _0xb3041f[0x0], _0x1d57a0 = _0xb3041f[0x1], _0x4247c9 = _0xb3041f[0x2], _0x465d6a = _0xb3041f[0x3], _0x299c6f = _0xb3041f[0x4], _0xc7abc8 = _0xb3041f[0x5], _0x19b396 = _0xb3041f[0x6], _0x5403bf = _0xb3041f[0x7], _0x29f898 = _0xb3041f[0x8];
            return _0x377099 * (_0x29f898 * _0x299c6f - _0xc7abc8 * _0x5403bf) + _0x1d57a0 * (-_0x29f898 * _0x465d6a + _0xc7abc8 * _0x19b396) + _0x4247c9 * (_0x5403bf * _0x465d6a - _0x299c6f * _0x19b396);
        }
        ['translate'](_0x4da7c0, _0xea4c19) {
            var _0x2e4a39 = _0x5659be, _0x48ed0a = _0xea4c19[_0x2e4a39(0x1f6)], _0x56c204 = this[_0x2e4a39(0x1f6)], _0x32a29d = _0x56c204[0x0], _0x4a527f = _0x56c204[0x1], _0x4961a9 = _0x56c204[0x2], _0x46edca = _0x56c204[0x3], _0x296c59 = _0x56c204[0x4], _0x5a2759 = _0x56c204[0x5], _0x5f161c = _0x56c204[0x6], _0x35c01e = _0x56c204[0x7], _0x2e127e = _0x56c204[0x8], _0x4f2928 = _0x4da7c0['x'], _0x2b2374 = _0x4da7c0['y'];
            _0x48ed0a[0x0] = _0x32a29d, _0x48ed0a[0x1] = _0x4a527f, _0x48ed0a[0x2] = _0x4961a9, _0x48ed0a[0x3] = _0x46edca, _0x48ed0a[0x4] = _0x296c59, _0x48ed0a[0x5] = _0x5a2759, _0x48ed0a[0x6] = _0x4f2928 * _0x32a29d + _0x2b2374 * _0x46edca + _0x5f161c, _0x48ed0a[0x7] = _0x4f2928 * _0x4a527f + _0x2b2374 * _0x296c59 + _0x35c01e, _0x48ed0a[0x8] = _0x4f2928 * _0x4961a9 + _0x2b2374 * _0x5a2759 + _0x2e127e;
        }
        [_0x5659be(0x273)](_0x3139cc, _0x56c701) {
            var _0x19d54f = _0x5659be, _0x463457 = _0x56c701[_0x19d54f(0x1f6)], _0x301c91 = this[_0x19d54f(0x1f6)], _0xe4079f = _0x301c91[0x0], _0x2171ce = _0x301c91[0x1], _0x1a0d5e = _0x301c91[0x2], _0x293a9b = _0x301c91[0x3], _0x4cc982 = _0x301c91[0x4], _0x163994 = _0x301c91[0x5], _0x5b312d = _0x301c91[0x6], _0x159b87 = _0x301c91[0x7], _0x58905d = _0x301c91[0x8], _0x1bd9d6 = Math[_0x19d54f(0x26f)](_0x3139cc), _0x38ca46 = Math['cos'](_0x3139cc);
            _0x463457[0x0] = _0x38ca46 * _0xe4079f + _0x1bd9d6 * _0x293a9b, _0x463457[0x1] = _0x38ca46 * _0x2171ce + _0x1bd9d6 * _0x4cc982, _0x463457[0x2] = _0x38ca46 * _0x1a0d5e + _0x1bd9d6 * _0x163994, _0x463457[0x3] = _0x38ca46 * _0x293a9b - _0x1bd9d6 * _0xe4079f, _0x463457[0x4] = _0x38ca46 * _0x4cc982 - _0x1bd9d6 * _0x2171ce, _0x463457[0x5] = _0x38ca46 * _0x163994 - _0x1bd9d6 * _0x1a0d5e, _0x463457[0x6] = _0x5b312d, _0x463457[0x7] = _0x159b87, _0x463457[0x8] = _0x58905d;
        }
        [_0x5659be(0x1ee)](_0xaa895b, _0x1490c4) {
            var _0x77354f = _0x5659be, _0x1c5c3f = _0x1490c4['elements'], _0x2902f2 = this[_0x77354f(0x1f6)], _0x4524ea = _0xaa895b['x'], _0x4e4577 = _0xaa895b['y'];
            _0x1c5c3f[0x0] = _0x4524ea * _0x2902f2[0x0], _0x1c5c3f[0x1] = _0x4524ea * _0x2902f2[0x1], _0x1c5c3f[0x2] = _0x4524ea * _0x2902f2[0x2], _0x1c5c3f[0x3] = _0x4e4577 * _0x2902f2[0x3], _0x1c5c3f[0x4] = _0x4e4577 * _0x2902f2[0x4], _0x1c5c3f[0x5] = _0x4e4577 * _0x2902f2[0x5], _0x1c5c3f[0x6] = _0x2902f2[0x6], _0x1c5c3f[0x7] = _0x2902f2[0x7], _0x1c5c3f[0x8] = _0x2902f2[0x8];
        }
        [_0x5659be(0x274)](_0x4c8c36) {
            var _0x49b93d = _0x5659be, _0x3c719c = _0x4c8c36['elements'], _0x5d10aa = this[_0x49b93d(0x1f6)], _0x1250af = _0x5d10aa[0x0], _0x5c9358 = _0x5d10aa[0x1], _0x18a33e = _0x5d10aa[0x2], _0x37abc9 = _0x5d10aa[0x3], _0x2f9bb6 = _0x5d10aa[0x4], _0x460130 = _0x5d10aa[0x5], _0x568cff = _0x5d10aa[0x6], _0xc25e83 = _0x5d10aa[0x7], _0xb4c90b = _0x5d10aa[0x8], _0x144580 = _0xb4c90b * _0x2f9bb6 - _0x460130 * _0xc25e83, _0x7f76b9 = -_0xb4c90b * _0x37abc9 + _0x460130 * _0x568cff, _0x138271 = _0xc25e83 * _0x37abc9 - _0x2f9bb6 * _0x568cff, _0x3607b6 = _0x1250af * _0x144580 + _0x5c9358 * _0x7f76b9 + _0x18a33e * _0x138271;
            if (!_0x3607b6)
                return;
            _0x3607b6 = 0x1 / _0x3607b6, _0x3c719c[0x0] = _0x144580 * _0x3607b6, _0x3c719c[0x1] = (-_0xb4c90b * _0x5c9358 + _0x18a33e * _0xc25e83) * _0x3607b6, _0x3c719c[0x2] = (_0x460130 * _0x5c9358 - _0x18a33e * _0x2f9bb6) * _0x3607b6, _0x3c719c[0x3] = _0x7f76b9 * _0x3607b6, _0x3c719c[0x4] = (_0xb4c90b * _0x1250af - _0x18a33e * _0x568cff) * _0x3607b6, _0x3c719c[0x5] = (-_0x460130 * _0x1250af + _0x18a33e * _0x37abc9) * _0x3607b6, _0x3c719c[0x6] = _0x138271 * _0x3607b6, _0x3c719c[0x7] = (-_0xc25e83 * _0x1250af + _0x5c9358 * _0x568cff) * _0x3607b6, _0x3c719c[0x8] = (_0x2f9bb6 * _0x1250af - _0x5c9358 * _0x37abc9) * _0x3607b6;
        }
        [_0x5659be(0x275)](_0x108162) {
            var _0xd76ef = _0x5659be, _0x102b86 = _0x108162[_0xd76ef(0x1f6)], _0x34e0ec = this['elements'];
            if (_0x108162 === this) {
                var _0x523bfe = _0x34e0ec[0x1], _0x150a2e = _0x34e0ec[0x2], _0x41107e = _0x34e0ec[0x5];
                _0x102b86[0x1] = _0x34e0ec[0x3], _0x102b86[0x2] = _0x34e0ec[0x6], _0x102b86[0x3] = _0x523bfe, _0x102b86[0x5] = _0x34e0ec[0x7], _0x102b86[0x6] = _0x150a2e, _0x102b86[0x7] = _0x41107e;
            } else
                _0x102b86[0x0] = _0x34e0ec[0x0], _0x102b86[0x1] = _0x34e0ec[0x3], _0x102b86[0x2] = _0x34e0ec[0x6], _0x102b86[0x3] = _0x34e0ec[0x1], _0x102b86[0x4] = _0x34e0ec[0x4], _0x102b86[0x5] = _0x34e0ec[0x7], _0x102b86[0x6] = _0x34e0ec[0x2], _0x102b86[0x7] = _0x34e0ec[0x5], _0x102b86[0x8] = _0x34e0ec[0x8];
        }
        [_0x5659be(0x276)]() {
            var _0x5bab2c = _0x5659be, _0x56963a = this[_0x5bab2c(0x1f6)];
            _0x56963a[0x0] = 0x1, _0x56963a[0x1] = 0x0, _0x56963a[0x2] = 0x0, _0x56963a[0x3] = 0x0, _0x56963a[0x4] = 0x1, _0x56963a[0x5] = 0x0, _0x56963a[0x6] = 0x0, _0x56963a[0x7] = 0x0, _0x56963a[0x8] = 0x1;
        }
        [_0x5659be(0x1f0)](_0x37c600) {
            var _0x59b91f = _0x5659be, _0x32bf90, _0x48bf8f, _0x408c97;
            _0x48bf8f = this[_0x59b91f(0x1f6)], _0x408c97 = _0x37c600['elements'];
            if (_0x48bf8f === _0x408c97)
                return;
            for (_0x32bf90 = 0x0; _0x32bf90 < 0x9; ++_0x32bf90) {
                _0x408c97[_0x32bf90] = _0x48bf8f[_0x32bf90];
            }
        }
        [_0x5659be(0x1f4)]() {
            var _0x2a23c9 = _0x5659be, _0x2e9094 = new _0x14703a();
            return this[_0x2a23c9(0x1f0)](_0x2e9094), _0x2e9094;
        }
        static [_0x5659be(0x277)](_0x3f887c, _0x2324d4, _0x21bb59, _0x10e3c2) {
            var _0x51e685 = _0x5659be;
            _0x3f70c5[_0x51e685(0x210)](_0x3f887c, _0x2324d4, _0x14703a[_0x51e685(0x278)]), _0x3f70c5[_0x51e685(0x1f2)](_0x14703a[_0x51e685(0x278)], _0x14703a[_0x51e685(0x278)]), _0x3f70c5[_0x51e685(0x211)](_0x21bb59, _0x14703a['_tempV30'], _0x14703a['_tempV31']), _0x3f70c5['normalize'](_0x14703a[_0x51e685(0x279)], _0x14703a['_tempV31']), _0x3f70c5[_0x51e685(0x211)](_0x14703a['_tempV30'], _0x14703a['_tempV31'], _0x14703a[_0x51e685(0x27a)]);
            var _0x3ef0c5 = _0x14703a[_0x51e685(0x278)], _0x461448 = _0x14703a[_0x51e685(0x279)], _0x432442 = _0x14703a[_0x51e685(0x27a)], _0x10dd82 = _0x10e3c2[_0x51e685(0x1f6)];
            _0x10dd82[0x0] = _0x461448['x'], _0x10dd82[0x3] = _0x461448['y'], _0x10dd82[0x6] = _0x461448['z'], _0x10dd82[0x1] = _0x432442['x'], _0x10dd82[0x4] = _0x432442['y'], _0x10dd82[0x7] = _0x432442['z'], _0x10dd82[0x2] = _0x3ef0c5['x'], _0x10dd82[0x5] = _0x3ef0c5['y'], _0x10dd82[0x8] = _0x3ef0c5['z'];
        }
    }
    _0x14703a['DEFAULT'] = new _0x14703a(), _0x14703a[_0x5659be(0x278)] = new _0x3f70c5(), _0x14703a[_0x5659be(0x279)] = new _0x3f70c5(), _0x14703a[_0x5659be(0x27a)] = new _0x3f70c5();
    class _0x22f58f {
        constructor(_0x242e3f = 0x0, _0x29a42b = 0x0, _0x4670eb = 0x0, _0x582813 = 0x1) {
            this['x'] = _0x242e3f, this['y'] = _0x29a42b, this['z'] = _0x4670eb, this['w'] = _0x582813;
        }
        static ['createFromYawPitchRoll'](_0x387a77, _0x3ab787, _0x3a4d89, _0x4b99be) {
            var _0x392533 = _0x5659be, _0x37f1f6 = _0x3a4d89 * 0.5, _0x14950b = _0x3ab787 * 0.5, _0xdf2fc = _0x387a77 * 0.5, _0x15c44a = Math[_0x392533(0x26f)](_0x37f1f6), _0x1bb413 = Math[_0x392533(0x270)](_0x37f1f6), _0x1d2732 = Math[_0x392533(0x26f)](_0x14950b), _0x3e4496 = Math[_0x392533(0x270)](_0x14950b), _0x5b1001 = Math[_0x392533(0x26f)](_0xdf2fc), _0x1d097a = Math[_0x392533(0x270)](_0xdf2fc);
            _0x4b99be['x'] = _0x1d097a * _0x1d2732 * _0x1bb413 + _0x5b1001 * _0x3e4496 * _0x15c44a, _0x4b99be['y'] = _0x5b1001 * _0x3e4496 * _0x1bb413 - _0x1d097a * _0x1d2732 * _0x15c44a, _0x4b99be['z'] = _0x1d097a * _0x3e4496 * _0x15c44a - _0x5b1001 * _0x1d2732 * _0x1bb413, _0x4b99be['w'] = _0x1d097a * _0x3e4496 * _0x1bb413 + _0x5b1001 * _0x1d2732 * _0x15c44a;
        }
        static ['multiply'](_0x44a5f6, _0x1f062b, _0x1bfd16) {
            var _0x17dffd = _0x44a5f6['x'], _0x57443e = _0x44a5f6['y'], _0x1ee579 = _0x44a5f6['z'], _0x2d328c = _0x44a5f6['w'], _0x25107c = _0x1f062b['x'], _0x20fcbf = _0x1f062b['y'], _0x186a23 = _0x1f062b['z'], _0x2cacb0 = _0x1f062b['w'], _0x4626c7 = _0x57443e * _0x186a23 - _0x1ee579 * _0x20fcbf, _0xfdeb82 = _0x1ee579 * _0x25107c - _0x17dffd * _0x186a23, _0x6d0365 = _0x17dffd * _0x20fcbf - _0x57443e * _0x25107c, _0x25fd55 = _0x17dffd * _0x25107c + _0x57443e * _0x20fcbf + _0x1ee579 * _0x186a23;
            _0x1bfd16['x'] = _0x17dffd * _0x2cacb0 + _0x25107c * _0x2d328c + _0x4626c7, _0x1bfd16['y'] = _0x57443e * _0x2cacb0 + _0x20fcbf * _0x2d328c + _0xfdeb82, _0x1bfd16['z'] = _0x1ee579 * _0x2cacb0 + _0x186a23 * _0x2d328c + _0x6d0365, _0x1bfd16['w'] = _0x2d328c * _0x2cacb0 - _0x25fd55;
        }
        static [_0x5659be(0x27b)](_0x2fa927, _0x188b2c) {
            var _0x4420e7 = _0x5659be;
            if (_0x2fa927 == 0x0) {
                if (_0x188b2c == 0x1)
                    return Math['PI'] / 0x2;
                return -Math['PI'] / 0x2;
            }
            if (_0x2fa927 > 0x0)
                return Math['atan'](_0x188b2c / _0x2fa927);
            if (_0x2fa927 < 0x0) {
                if (_0x188b2c > 0x0)
                    return Math[_0x4420e7(0x27c)](_0x188b2c / _0x2fa927) + Math['PI'];
                return Math[_0x4420e7(0x27c)](_0x188b2c / _0x2fa927) - Math['PI'];
            }
            return 0x0;
        }
        static [_0x5659be(0x27d)](_0x472788, _0x3da431, _0x758459) {
            var _0x4df6ad = _0x5659be;
            _0x3f70c5[_0x4df6ad(0x210)](_0x3da431, _0x472788, _0x22f58f[_0x4df6ad(0x27e)]), _0x3f70c5[_0x4df6ad(0x1f2)](_0x22f58f[_0x4df6ad(0x27e)], _0x22f58f[_0x4df6ad(0x27e)]), _0x758459['x'] = Math[_0x4df6ad(0x27f)](_0x22f58f[_0x4df6ad(0x27e)]['y']), _0x758459['y'] = _0x22f58f[_0x4df6ad(0x27b)](-_0x22f58f['TEMPVector30']['z'], -_0x22f58f[_0x4df6ad(0x27e)]['x']);
        }
        static [_0x5659be(0x280)](_0x5283c7, _0x3b9cc6, _0x128c5b) {
            var _0x28ce8c = _0x5659be;
            _0x3b9cc6 = _0x3b9cc6 * 0.5;
            var _0x11e016 = Math[_0x28ce8c(0x26f)](_0x3b9cc6);
            _0x128c5b['x'] = _0x11e016 * _0x5283c7['x'], _0x128c5b['y'] = _0x11e016 * _0x5283c7['y'], _0x128c5b['z'] = _0x11e016 * _0x5283c7['z'], _0x128c5b['w'] = Math[_0x28ce8c(0x270)](_0x3b9cc6);
        }
        static [_0x5659be(0x281)](_0x50ec39, _0x3ae04c) {
            var _0x462d7b = _0x5659be, _0x555d4f = _0x50ec39[_0x462d7b(0x1f6)], _0x1bb011, _0x41cbe6, _0x4e7185 = _0x555d4f[0x0] + _0x555d4f[0x5] + _0x555d4f[0xa];
            if (_0x4e7185 > 0x0)
                _0x1bb011 = Math[_0x462d7b(0x1ea)](_0x4e7185 + 0x1), _0x3ae04c['w'] = _0x1bb011 * 0.5, _0x1bb011 = 0.5 / _0x1bb011, _0x3ae04c['x'] = (_0x555d4f[0x6] - _0x555d4f[0x9]) * _0x1bb011, _0x3ae04c['y'] = (_0x555d4f[0x8] - _0x555d4f[0x2]) * _0x1bb011, _0x3ae04c['z'] = (_0x555d4f[0x1] - _0x555d4f[0x4]) * _0x1bb011;
            else {
                if (_0x555d4f[0x0] >= _0x555d4f[0x5] && _0x555d4f[0x0] >= _0x555d4f[0xa])
                    _0x1bb011 = Math['sqrt'](0x1 + _0x555d4f[0x0] - _0x555d4f[0x5] - _0x555d4f[0xa]), _0x41cbe6 = 0.5 / _0x1bb011, _0x3ae04c['x'] = 0.5 * _0x1bb011, _0x3ae04c['y'] = (_0x555d4f[0x1] + _0x555d4f[0x4]) * _0x41cbe6, _0x3ae04c['z'] = (_0x555d4f[0x2] + _0x555d4f[0x8]) * _0x41cbe6, _0x3ae04c['w'] = (_0x555d4f[0x6] - _0x555d4f[0x9]) * _0x41cbe6;
                else
                    _0x555d4f[0x5] > _0x555d4f[0xa] ? (_0x1bb011 = Math[_0x462d7b(0x1ea)](0x1 + _0x555d4f[0x5] - _0x555d4f[0x0] - _0x555d4f[0xa]), _0x41cbe6 = 0.5 / _0x1bb011, _0x3ae04c['x'] = (_0x555d4f[0x4] + _0x555d4f[0x1]) * _0x41cbe6, _0x3ae04c['y'] = 0.5 * _0x1bb011, _0x3ae04c['z'] = (_0x555d4f[0x9] + _0x555d4f[0x6]) * _0x41cbe6, _0x3ae04c['w'] = (_0x555d4f[0x8] - _0x555d4f[0x2]) * _0x41cbe6) : (_0x1bb011 = Math[_0x462d7b(0x1ea)](0x1 + _0x555d4f[0xa] - _0x555d4f[0x0] - _0x555d4f[0x5]), _0x41cbe6 = 0.5 / _0x1bb011, _0x3ae04c['x'] = (_0x555d4f[0x8] + _0x555d4f[0x2]) * _0x41cbe6, _0x3ae04c['y'] = (_0x555d4f[0x9] + _0x555d4f[0x6]) * _0x41cbe6, _0x3ae04c['z'] = 0.5 * _0x1bb011, _0x3ae04c['w'] = (_0x555d4f[0x1] - _0x555d4f[0x4]) * _0x41cbe6);
            }
        }
        static ['slerp'](_0x652737, _0xc25f0f, _0x5d921e, _0x32f7ec) {
            var _0x4b9618 = _0x5659be, _0x5871b7 = _0x652737['x'], _0x3c94c8 = _0x652737['y'], _0x107310 = _0x652737['z'], _0x34245b = _0x652737['w'], _0x3579b9 = _0xc25f0f['x'], _0x2f8a0d = _0xc25f0f['y'], _0x5229d9 = _0xc25f0f['z'], _0x57e9b6 = _0xc25f0f['w'], _0x52e1ca, _0x4e5cc5, _0x18f8c0, _0x53cc8d, _0x13fa5a;
            return _0x4e5cc5 = _0x5871b7 * _0x3579b9 + _0x3c94c8 * _0x2f8a0d + _0x107310 * _0x5229d9 + _0x34245b * _0x57e9b6, _0x4e5cc5 < 0x0 && (_0x4e5cc5 = -_0x4e5cc5, _0x3579b9 = -_0x3579b9, _0x2f8a0d = -_0x2f8a0d, _0x5229d9 = -_0x5229d9, _0x57e9b6 = -_0x57e9b6), 0x1 - _0x4e5cc5 > 0.000001 ? (_0x52e1ca = Math[_0x4b9618(0x282)](_0x4e5cc5), _0x18f8c0 = Math[_0x4b9618(0x26f)](_0x52e1ca), _0x53cc8d = Math['sin']((0x1 - _0x5d921e) * _0x52e1ca) / _0x18f8c0, _0x13fa5a = Math[_0x4b9618(0x26f)](_0x5d921e * _0x52e1ca) / _0x18f8c0) : (_0x53cc8d = 0x1 - _0x5d921e, _0x13fa5a = _0x5d921e), _0x32f7ec['x'] = _0x53cc8d * _0x5871b7 + _0x13fa5a * _0x3579b9, _0x32f7ec['y'] = _0x53cc8d * _0x3c94c8 + _0x13fa5a * _0x2f8a0d, _0x32f7ec['z'] = _0x53cc8d * _0x107310 + _0x13fa5a * _0x5229d9, _0x32f7ec['w'] = _0x53cc8d * _0x34245b + _0x13fa5a * _0x57e9b6, _0x32f7ec;
        }
        static [_0x5659be(0x1fc)](_0x4e714c, _0x361bd7, _0x40c031, _0x34c33f) {
            var _0x4e8e83 = _0x5659be, _0x3341cd = 0x1 - _0x40c031;
            _0x22f58f[_0x4e8e83(0x1f1)](_0x4e714c, _0x361bd7) >= 0x0 ? (_0x34c33f['x'] = _0x3341cd * _0x4e714c['x'] + _0x40c031 * _0x361bd7['x'], _0x34c33f['y'] = _0x3341cd * _0x4e714c['y'] + _0x40c031 * _0x361bd7['y'], _0x34c33f['z'] = _0x3341cd * _0x4e714c['z'] + _0x40c031 * _0x361bd7['z'], _0x34c33f['w'] = _0x3341cd * _0x4e714c['w'] + _0x40c031 * _0x361bd7['w']) : (_0x34c33f['x'] = _0x3341cd * _0x4e714c['x'] - _0x40c031 * _0x361bd7['x'], _0x34c33f['y'] = _0x3341cd * _0x4e714c['y'] - _0x40c031 * _0x361bd7['y'], _0x34c33f['z'] = _0x3341cd * _0x4e714c['z'] - _0x40c031 * _0x361bd7['z'], _0x34c33f['w'] = _0x3341cd * _0x4e714c['w'] - _0x40c031 * _0x361bd7['w']), _0x34c33f['normalize'](_0x34c33f);
        }
        static [_0x5659be(0x201)](_0x25f1c9, _0x2eedee, _0x44469e) {
            _0x44469e['x'] = _0x25f1c9['x'] + _0x2eedee['x'], _0x44469e['y'] = _0x25f1c9['y'] + _0x2eedee['y'], _0x44469e['z'] = _0x25f1c9['z'] + _0x2eedee['z'], _0x44469e['w'] = _0x25f1c9['w'] + _0x2eedee['w'];
        }
        static [_0x5659be(0x1f1)](_0x2749c5, _0x2efe9e) {
            return _0x2749c5['x'] * _0x2efe9e['x'] + _0x2749c5['y'] * _0x2efe9e['y'] + _0x2749c5['z'] * _0x2efe9e['z'] + _0x2749c5['w'] * _0x2efe9e['w'];
        }
        ['scaling'](_0x770401, _0x25b79b) {
            _0x25b79b['x'] = this['x'] * _0x770401, _0x25b79b['y'] = this['y'] * _0x770401, _0x25b79b['z'] = this['z'] * _0x770401, _0x25b79b['w'] = this['w'] * _0x770401;
        }
        ['normalize'](_0x327e88) {
            var _0x4b309d = _0x5659be, _0x4758d0 = this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
            _0x4758d0 > 0x0 && (_0x4758d0 = 0x1 / Math[_0x4b309d(0x1ea)](_0x4758d0), _0x327e88['x'] = this['x'] * _0x4758d0, _0x327e88['y'] = this['y'] * _0x4758d0, _0x327e88['z'] = this['z'] * _0x4758d0, _0x327e88['w'] = this['w'] * _0x4758d0);
        }
        ['length']() {
            var _0x49da92 = _0x5659be;
            return Math[_0x49da92(0x1ea)](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        [_0x5659be(0x283)](_0x31de1c, _0x2e5042) {
            var _0xdb40dd = _0x5659be;
            _0x31de1c *= 0.5;
            var _0x199d4b = Math[_0xdb40dd(0x26f)](_0x31de1c), _0x10ca5c = Math[_0xdb40dd(0x270)](_0x31de1c);
            _0x2e5042['x'] = this['x'] * _0x10ca5c + this['w'] * _0x199d4b, _0x2e5042['y'] = this['y'] * _0x10ca5c + this['z'] * _0x199d4b, _0x2e5042['z'] = this['z'] * _0x10ca5c - this['y'] * _0x199d4b, _0x2e5042['w'] = this['w'] * _0x10ca5c - this['x'] * _0x199d4b;
        }
        [_0x5659be(0x284)](_0x2b4c76, _0x573166) {
            var _0x108ca2 = _0x5659be;
            _0x2b4c76 *= 0.5;
            var _0x10d772 = Math[_0x108ca2(0x26f)](_0x2b4c76), _0x3dab23 = Math[_0x108ca2(0x270)](_0x2b4c76);
            _0x573166['x'] = this['x'] * _0x3dab23 - this['z'] * _0x10d772, _0x573166['y'] = this['y'] * _0x3dab23 + this['w'] * _0x10d772, _0x573166['z'] = this['z'] * _0x3dab23 + this['x'] * _0x10d772, _0x573166['w'] = this['w'] * _0x3dab23 - this['y'] * _0x10d772;
        }
        [_0x5659be(0x285)](_0x567e67, _0x140067) {
            var _0xa0c75 = _0x5659be;
            _0x567e67 *= 0.5;
            var _0x473ca7 = Math[_0xa0c75(0x26f)](_0x567e67), _0xa883ce = Math[_0xa0c75(0x270)](_0x567e67);
            _0x140067['x'] = this['x'] * _0xa883ce + this['y'] * _0x473ca7, _0x140067['y'] = this['y'] * _0xa883ce - this['x'] * _0x473ca7, _0x140067['z'] = this['z'] * _0xa883ce + this['w'] * _0x473ca7, _0x140067['w'] = this['w'] * _0xa883ce - this['z'] * _0x473ca7;
        }
        [_0x5659be(0x286)](_0x13edb9) {
            var _0x1e66c3 = _0x5659be;
            _0x3f70c5['transformQuat'](_0x3f70c5[_0x1e66c3(0x219)], this, _0x22f58f[_0x1e66c3(0x287)]), _0x3f70c5[_0x1e66c3(0x209)](_0x3f70c5[_0x1e66c3(0x21a)], this, _0x22f58f[_0x1e66c3(0x288)]);
            var _0x387791 = _0x22f58f[_0x1e66c3(0x288)];
            _0x22f58f[_0x1e66c3(0x27d)](_0x3f70c5['_ZERO'], _0x22f58f['TEMPVector31'], _0x22f58f[_0x1e66c3(0x289)]);
            var _0x441b9d = _0x22f58f[_0x1e66c3(0x289)];
            if (_0x441b9d['x'] == Math['PI'] / 0x2)
                _0x441b9d['y'] = _0x22f58f['arcTanAngle'](_0x387791['z'], _0x387791['x']), _0x441b9d['z'] = 0x0;
            else
                _0x441b9d['x'] == -Math['PI'] / 0x2 ? (_0x441b9d['y'] = _0x22f58f[_0x1e66c3(0x27b)](-_0x387791['z'], -_0x387791['x']), _0x441b9d['z'] = 0x0) : (_0x429ec3[_0x1e66c3(0x222)][_0x1e66c3(0x28a)](-_0x441b9d['y'], _0x429ec3[_0x1e66c3(0x222)][_0x1e66c3(0x28b)]), _0x429ec3['Matrix4x4'][_0x1e66c3(0x28c)](-_0x441b9d['x'], _0x429ec3['Matrix4x4'][_0x1e66c3(0x28d)]), _0x3f70c5['transformCoordinate'](_0x22f58f['TEMPVector32'], _0x429ec3[_0x1e66c3(0x222)][_0x1e66c3(0x28b)], _0x22f58f[_0x1e66c3(0x288)]), _0x3f70c5['transformCoordinate'](_0x22f58f[_0x1e66c3(0x288)], _0x429ec3['Matrix4x4'][_0x1e66c3(0x28d)], _0x22f58f['TEMPVector32']), _0x441b9d['z'] = _0x22f58f[_0x1e66c3(0x27b)](_0x387791['y'], -_0x387791['x']));
            if (_0x441b9d['y'] <= -Math['PI'])
                _0x441b9d['y'] = Math['PI'];
            if (_0x441b9d['z'] <= -Math['PI'])
                _0x441b9d['z'] = Math['PI'];
            _0x441b9d['y'] >= Math['PI'] && _0x441b9d['z'] >= Math['PI'] && (_0x441b9d['y'] = 0x0, _0x441b9d['z'] = 0x0, _0x441b9d['x'] = Math['PI'] - _0x441b9d['x']);
            var _0x4ef6ec = _0x13edb9;
            _0x4ef6ec['x'] = _0x441b9d['y'], _0x4ef6ec['y'] = _0x441b9d['x'], _0x4ef6ec['z'] = _0x441b9d['z'];
        }
        [_0x5659be(0x274)](_0x2ec91e) {
            var _0x1235c4 = this['x'], _0x4a849e = this['y'], _0xfa1c44 = this['z'], _0x4b32ff = this['w'], _0x58da29 = _0x1235c4 * _0x1235c4 + _0x4a849e * _0x4a849e + _0xfa1c44 * _0xfa1c44 + _0x4b32ff * _0x4b32ff, _0x984252 = _0x58da29 ? 0x1 / _0x58da29 : 0x0;
            _0x2ec91e['x'] = -_0x1235c4 * _0x984252, _0x2ec91e['y'] = -_0x4a849e * _0x984252, _0x2ec91e['z'] = -_0xfa1c44 * _0x984252, _0x2ec91e['w'] = _0x4b32ff * _0x984252;
        }
        [_0x5659be(0x276)]() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0, this['w'] = 0x1;
        }
        ['fromArray'](_0x27496a, _0x3b3427 = 0x0) {
            this['x'] = _0x27496a[_0x3b3427 + 0x0], this['y'] = _0x27496a[_0x3b3427 + 0x1], this['z'] = _0x27496a[_0x3b3427 + 0x2], this['w'] = _0x27496a[_0x3b3427 + 0x3];
        }
        [_0x5659be(0x1f0)](_0x12ffb3) {
            if (this === _0x12ffb3)
                return;
            _0x12ffb3['x'] = this['x'], _0x12ffb3['y'] = this['y'], _0x12ffb3['z'] = this['z'], _0x12ffb3['w'] = this['w'];
        }
        [_0x5659be(0x1f4)]() {
            var _0x3c867f = new _0x22f58f();
            return this['cloneTo'](_0x3c867f), _0x3c867f;
        }
        [_0x5659be(0x1fe)](_0x15d552) {
            var _0x4c668a = _0x5659be;
            return _0x57b8d6['nearEqual'](this['x'], _0x15d552['x']) && _0x57b8d6[_0x4c668a(0x1e8)](this['y'], _0x15d552['y']) && _0x57b8d6[_0x4c668a(0x1e8)](this['z'], _0x15d552['z']) && _0x57b8d6[_0x4c668a(0x1e8)](this['w'], _0x15d552['w']);
        }
        static [_0x5659be(0x28e)](_0x11b974, _0x295126, _0x4e19c2) {
            var _0x2c0e94 = _0x5659be;
            _0x22f58f[_0x2c0e94(0x277)](_0x3f70c5[_0x2c0e94(0x214)], _0x11b974, _0x295126, _0x4e19c2);
        }
        static [_0x5659be(0x277)](_0x826b3a, _0x55373b, _0x4082dd, _0x2659b7) {
            var _0x3a182c = _0x5659be;
            _0x14703a['lookAt'](_0x826b3a, _0x55373b, _0x4082dd, _0x22f58f[_0x3a182c(0x28f)]), _0x22f58f['rotationMatrix'](_0x22f58f[_0x3a182c(0x28f)], _0x2659b7);
        }
        ['lengthSquared']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static [_0x5659be(0x274)](_0x538723, _0x108670) {
            var _0x549d74 = _0x5659be, _0x1b819b = _0x538723['lengthSquared']();
            !_0x57b8d6[_0x549d74(0x1e6)](_0x1b819b) && (_0x1b819b = 0x1 / _0x1b819b, _0x108670['x'] = -_0x538723['x'] * _0x1b819b, _0x108670['y'] = -_0x538723['y'] * _0x1b819b, _0x108670['z'] = -_0x538723['z'] * _0x1b819b, _0x108670['w'] = _0x538723['w'] * _0x1b819b);
        }
        static ['rotationMatrix'](_0x515c3b, _0xf2ddcf) {
            var _0x2cd94f = _0x5659be, _0x921fe5 = _0x515c3b[_0x2cd94f(0x1f6)], _0x1907be = _0x921fe5[0x0], _0x58a554 = _0x921fe5[0x1], _0x314a1b = _0x921fe5[0x2], _0x4c8b62 = _0x921fe5[0x3], _0x29a4eb = _0x921fe5[0x4], _0x2cbc54 = _0x921fe5[0x5], _0x5237a1 = _0x921fe5[0x6], _0x16cbc4 = _0x921fe5[0x7], _0xd89983 = _0x921fe5[0x8], _0x570533, _0x2b520a, _0x572fb8 = _0x1907be + _0x29a4eb + _0xd89983;
            if (_0x572fb8 > 0x0)
                _0x570533 = Math['sqrt'](_0x572fb8 + 0x1), _0xf2ddcf['w'] = _0x570533 * 0.5, _0x570533 = 0.5 / _0x570533, _0xf2ddcf['x'] = (_0x2cbc54 - _0x16cbc4) * _0x570533, _0xf2ddcf['y'] = (_0x5237a1 - _0x314a1b) * _0x570533, _0xf2ddcf['z'] = (_0x58a554 - _0x4c8b62) * _0x570533;
            else {
                if (_0x1907be >= _0x29a4eb && _0x1907be >= _0xd89983)
                    _0x570533 = Math[_0x2cd94f(0x1ea)](0x1 + _0x1907be - _0x29a4eb - _0xd89983), _0x2b520a = 0.5 / _0x570533, _0xf2ddcf['x'] = 0.5 * _0x570533, _0xf2ddcf['y'] = (_0x58a554 + _0x4c8b62) * _0x2b520a, _0xf2ddcf['z'] = (_0x314a1b + _0x5237a1) * _0x2b520a, _0xf2ddcf['w'] = (_0x2cbc54 - _0x16cbc4) * _0x2b520a;
                else
                    _0x29a4eb > _0xd89983 ? (_0x570533 = Math[_0x2cd94f(0x1ea)](0x1 + _0x29a4eb - _0x1907be - _0xd89983), _0x2b520a = 0.5 / _0x570533, _0xf2ddcf['x'] = (_0x4c8b62 + _0x58a554) * _0x2b520a, _0xf2ddcf['y'] = 0.5 * _0x570533, _0xf2ddcf['z'] = (_0x16cbc4 + _0x2cbc54) * _0x2b520a, _0xf2ddcf['w'] = (_0x5237a1 - _0x314a1b) * _0x2b520a) : (_0x570533 = Math[_0x2cd94f(0x1ea)](0x1 + _0xd89983 - _0x1907be - _0x29a4eb), _0x2b520a = 0.5 / _0x570533, _0xf2ddcf['x'] = (_0x5237a1 + _0x314a1b) * _0x2b520a, _0xf2ddcf['y'] = (_0x16cbc4 + _0x2cbc54) * _0x2b520a, _0xf2ddcf['z'] = 0.5 * _0x570533, _0xf2ddcf['w'] = (_0x58a554 - _0x4c8b62) * _0x2b520a);
            }
        }
        [_0x5659be(0x1f5)](_0x2358d0 = null) {
            var _0x3039e2 = _0x5659be;
            _0x2358d0 ? (this['elements'] = _0x2358d0, this[_0x3039e2(0x1f6)][0x0] = this['x'], this[_0x3039e2(0x1f6)][0x1] = this['y'], this[_0x3039e2(0x1f6)][0x2] = this['z'], this[_0x3039e2(0x1f6)][0x3] = this['w']) : this[_0x3039e2(0x1f6)] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x12bf01['rewriteNumProperty'](this, 'x', 0x0), _0x12bf01[_0x3039e2(0x1f7)](this, 'y', 0x1), _0x12bf01[_0x3039e2(0x1f7)](this, 'z', 0x2), _0x12bf01[_0x3039e2(0x1f7)](this, 'w', 0x3);
        }
    }
    _0x22f58f[_0x5659be(0x27e)] = new _0x3f70c5(), _0x22f58f[_0x5659be(0x287)] = new _0x3f70c5(), _0x22f58f['TEMPVector32'] = new _0x3f70c5(), _0x22f58f[_0x5659be(0x289)] = new _0x3f70c5(), _0x22f58f[_0x5659be(0x28f)] = new _0x14703a(), _0x22f58f[_0x5659be(0x290)] = new _0x22f58f(), _0x22f58f[_0x5659be(0x291)] = new _0x22f58f(NaN, NaN, NaN, NaN);
    class _0x2bb7ec extends _0x885a61 {
        constructor() {
            var _0x46c7fc = _0x5659be;
            super(), this[_0x46c7fc(0x269)] = new _0x8fb80(), this[_0x46c7fc(0x26a)] = new _0x8fb80(), this['value'] = new _0x22f58f();
        }
        [_0x5659be(0x1f0)](_0x4943ca) {
            var _0x2f3bbe = _0x5659be;
            super[_0x2f3bbe(0x1f0)](_0x4943ca);
            var _0x435b78 = _0x4943ca;
            this[_0x2f3bbe(0x269)]['cloneTo'](_0x435b78[_0x2f3bbe(0x269)]), this[_0x2f3bbe(0x26a)][_0x2f3bbe(0x1f0)](_0x435b78[_0x2f3bbe(0x26a)]), this['value'][_0x2f3bbe(0x1f0)](_0x435b78[_0x2f3bbe(0x26b)]);
        }
    }
    class _0x22ed4e extends _0x885a61 {
        constructor() {
            var _0x14b665 = _0x5659be;
            super(), this[_0x14b665(0x269)] = new _0x3f70c5(), this['outTangent'] = new _0x3f70c5(), this[_0x14b665(0x26b)] = new _0x3f70c5();
        }
        [_0x5659be(0x1f0)](_0x59f47a) {
            var _0x3ced46 = _0x5659be;
            super['cloneTo'](_0x59f47a);
            var _0xd40f09 = _0x59f47a;
            this[_0x3ced46(0x269)][_0x3ced46(0x1f0)](_0xd40f09['inTangent']), this[_0x3ced46(0x26a)][_0x3ced46(0x1f0)](_0xd40f09['outTangent']), this[_0x3ced46(0x26b)]['cloneTo'](_0xd40f09[_0x3ced46(0x26b)]);
        }
    }
    class _0x1d4d9f {
        static ['READ_DATA']() {
            var _0x4991e9 = _0x5659be;
            _0x1d4d9f[_0x4991e9(0x292)][_0x4991e9(0x293)] = _0x1d4d9f[_0x4991e9(0x294)][_0x4991e9(0x295)](), _0x1d4d9f['_DATA']['size'] = _0x1d4d9f[_0x4991e9(0x294)][_0x4991e9(0x295)]();
        }
        static ['READ_BLOCK']() {
            var _0x4e5eff = _0x5659be, _0x51f53d = _0x1d4d9f[_0x4e5eff(0x296)]['count'] = _0x1d4d9f[_0x4e5eff(0x294)]['getUint16'](), _0x182a48 = _0x1d4d9f[_0x4e5eff(0x296)]['blockStarts'] = [], _0x125d4b = _0x1d4d9f[_0x4e5eff(0x296)][_0x4e5eff(0x297)] = [];
            for (var _0x481847 = 0x0; _0x481847 < _0x51f53d; _0x481847++) {
                _0x182a48[_0x4e5eff(0x298)](_0x1d4d9f[_0x4e5eff(0x294)][_0x4e5eff(0x295)]()), _0x125d4b[_0x4e5eff(0x298)](_0x1d4d9f[_0x4e5eff(0x294)][_0x4e5eff(0x295)]());
            }
        }
        static ['READ_STRINGS']() {
            var _0x57aa21 = _0x5659be, _0x286918 = _0x1d4d9f['_reader'][_0x57aa21(0x295)](), _0x475c97 = _0x1d4d9f[_0x57aa21(0x294)][_0x57aa21(0x299)](), _0x2838bb = _0x1d4d9f[_0x57aa21(0x294)]['pos'];
            _0x1d4d9f[_0x57aa21(0x294)][_0x57aa21(0x29a)] = _0x286918 + _0x1d4d9f[_0x57aa21(0x292)]['offset'];
            for (var _0x480eb1 = 0x0; _0x480eb1 < _0x475c97; _0x480eb1++)
                _0x1d4d9f[_0x57aa21(0x29b)][_0x480eb1] = _0x1d4d9f['_reader'][_0x57aa21(0x29c)]();
            _0x1d4d9f['_reader'][_0x57aa21(0x29a)] = _0x2838bb;
        }
        static [_0x5659be(0x29d)](_0x4d5348, _0x49e8a8) {
            var _0x2796b8 = _0x5659be;
            _0x1d4d9f[_0x2796b8(0x29e)] = _0x4d5348, _0x1d4d9f[_0x2796b8(0x294)] = _0x49e8a8, _0x1d4d9f['READ_DATA'](), _0x1d4d9f[_0x2796b8(0x29f)](), _0x1d4d9f[_0x2796b8(0x2a0)]();
            for (var _0x327090 = 0x0, _0x506eff = _0x1d4d9f[_0x2796b8(0x296)][_0x2796b8(0x2a1)]; _0x327090 < _0x506eff; _0x327090++) {
                var _0x3de405 = _0x49e8a8[_0x2796b8(0x299)](), _0x568892 = _0x1d4d9f[_0x2796b8(0x29b)][_0x3de405], _0x3a728a = _0x1d4d9f['READ_' + _0x568892];
                if (_0x3a728a == null)
                    throw new Error(_0x2796b8(0x2a2) + _0x3de405 + '\x20' + _0x568892);
                else
                    _0x3a728a['call'](null);
            }
        }
        static [_0x5659be(0x2a3)]() {
            var _0x589b8d = _0x5659be, _0x2e01e8, _0x5b6d03, _0x2aaf40, _0x137a5c = _0x1d4d9f[_0x589b8d(0x294)], _0x3d0164 = [], _0xc6c117 = _0x137a5c[_0x589b8d(0x299)]();
            _0x3d0164[_0x589b8d(0x1ff)] = _0xc6c117;
            for (_0x2e01e8 = 0x0; _0x2e01e8 < _0xc6c117; _0x2e01e8++)
                _0x3d0164[_0x2e01e8] = _0x137a5c[_0x589b8d(0x2a4)]();
            var _0x40bb29 = _0x1d4d9f['_animationClip'];
            _0x40bb29[_0x589b8d(0x2a5)] = _0x1d4d9f[_0x589b8d(0x29b)][_0x137a5c[_0x589b8d(0x299)]()];
            var _0x8308c5 = _0x40bb29['_duration'] = _0x137a5c[_0x589b8d(0x2a4)]();
            _0x40bb29[_0x589b8d(0x2a6)] = !!_0x137a5c[_0x589b8d(0x2a7)](), _0x40bb29[_0x589b8d(0x2a8)] = _0x137a5c[_0x589b8d(0x2a9)]();
            var _0x406181 = _0x137a5c[_0x589b8d(0x2a9)](), _0x1d125a = _0x40bb29[_0x589b8d(0x2aa)];
            _0x1d125a[_0x589b8d(0x2a1)] = _0x406181;
            var _0x12a2d5 = _0x40bb29[_0x589b8d(0x2ab)] = {}, _0x2a2100 = _0x40bb29['_nodesDic'] = {};
            for (_0x2e01e8 = 0x0; _0x2e01e8 < _0x406181; _0x2e01e8++) {
                _0x2aaf40 = new _0x4a2d82(), _0x1d125a[_0x589b8d(0x2ac)](_0x2e01e8, _0x2aaf40), _0x2aaf40[_0x589b8d(0x2ad)] = _0x2e01e8;
                var _0x4dd125 = _0x2aaf40[_0x589b8d(0x2ae)] = _0x137a5c[_0x589b8d(0x2af)](), _0x1021e7 = _0x137a5c[_0x589b8d(0x299)]();
                _0x2aaf40['_setOwnerPathCount'](_0x1021e7);
                for (_0x5b6d03 = 0x0; _0x5b6d03 < _0x1021e7; _0x5b6d03++)
                    _0x2aaf40[_0x589b8d(0x25e)](_0x5b6d03, _0x1d4d9f[_0x589b8d(0x29b)][_0x137a5c[_0x589b8d(0x299)]()]);
                var _0x3f051f = _0x2aaf40[_0x589b8d(0x25f)]('/'), _0x3a99ba = _0x12a2d5[_0x3f051f];
                _0x3a99ba || (_0x12a2d5[_0x3f051f] = _0x3a99ba = []), _0x3a99ba[_0x589b8d(0x298)](_0x2aaf40), _0x2aaf40[_0x589b8d(0x2b0)] = _0x1d4d9f[_0x589b8d(0x29b)][_0x137a5c['getUint16']()];
                var _0x49e9e0 = _0x137a5c[_0x589b8d(0x299)]();
                _0x2aaf40[_0x589b8d(0x2b1)](_0x49e9e0);
                for (_0x5b6d03 = 0x0; _0x5b6d03 < _0x49e9e0; _0x5b6d03++)
                    _0x2aaf40[_0x589b8d(0x260)](_0x5b6d03, _0x1d4d9f[_0x589b8d(0x29b)][_0x137a5c[_0x589b8d(0x299)]()]);
                var _0x577b7b = _0x3f051f + '.' + _0x2aaf40[_0x589b8d(0x2b0)] + '.' + _0x2aaf40[_0x589b8d(0x261)]('.');
                _0x2a2100[_0x577b7b] = _0x2aaf40, _0x2aaf40['fullPath'] = _0x577b7b;
                var _0x85704c = _0x137a5c[_0x589b8d(0x299)]();
                _0x2aaf40[_0x589b8d(0x263)](_0x85704c);
                for (_0x5b6d03 = 0x0; _0x5b6d03 < _0x85704c; _0x5b6d03++) {
                    switch (_0x4dd125) {
                    case 0x0:
                        var _0x43ec8e = new _0x336653();
                        _0x2aaf40[_0x589b8d(0x264)](_0x5b6d03, _0x43ec8e), _0x43ec8e['time'] = _0x3d0164[_0x137a5c[_0x589b8d(0x299)]()], _0x43ec8e['inTangent'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x43ec8e[_0x589b8d(0x26a)] = _0x137a5c[_0x589b8d(0x2a4)](), _0x43ec8e['value'] = _0x137a5c[_0x589b8d(0x2a4)]();
                        break;
                    case 0x1:
                    case 0x3:
                    case 0x4:
                        var _0x410254 = new _0x22ed4e();
                        _0x2aaf40[_0x589b8d(0x264)](_0x5b6d03, _0x410254), _0x410254[_0x589b8d(0x268)] = _0x3d0164[_0x137a5c[_0x589b8d(0x299)]()];
                        var _0x107fc5 = _0x410254[_0x589b8d(0x269)], _0x114157 = _0x410254[_0x589b8d(0x26a)], _0x4a536c = _0x410254[_0x589b8d(0x26b)];
                        _0x107fc5['x'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x107fc5['y'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x107fc5['z'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x114157['x'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x114157['y'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x114157['z'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x4a536c['x'] = _0x137a5c['getFloat32'](), _0x4a536c['y'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x4a536c['z'] = _0x137a5c[_0x589b8d(0x2a4)]();
                        break;
                    case 0x2:
                        var _0x341fc3 = new _0x2bb7ec();
                        _0x2aaf40[_0x589b8d(0x264)](_0x5b6d03, _0x341fc3), _0x341fc3[_0x589b8d(0x268)] = _0x3d0164[_0x137a5c[_0x589b8d(0x299)]()];
                        var _0x42d741 = _0x341fc3[_0x589b8d(0x269)], _0x3330e1 = _0x341fc3[_0x589b8d(0x26a)], _0x1809ff = _0x341fc3['value'];
                        _0x42d741['x'] = _0x137a5c['getFloat32'](), _0x42d741['y'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x42d741['z'] = _0x137a5c['getFloat32'](), _0x42d741['w'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x3330e1['x'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x3330e1['y'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x3330e1['z'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x3330e1['w'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x1809ff['x'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x1809ff['y'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x1809ff['z'] = _0x137a5c[_0x589b8d(0x2a4)](), _0x1809ff['w'] = _0x137a5c[_0x589b8d(0x2a4)]();
                        break;
                    default:
                        throw 'AnimationClipParser03:unknown\x20type.';
                    }
                }
            }
            var _0x3408f6 = _0x137a5c['getUint16']();
            for (_0x2e01e8 = 0x0; _0x2e01e8 < _0x3408f6; _0x2e01e8++) {
                var _0x25f822 = new _0x28dc41();
                _0x25f822['time'] = Math[_0x589b8d(0x204)](_0x8308c5, _0x137a5c['getFloat32']()), _0x25f822[_0x589b8d(0x2b2)] = _0x1d4d9f[_0x589b8d(0x29b)][_0x137a5c['getUint16']()];
                var _0x13e992 = [], _0x294161 = _0x137a5c['getUint16']();
                _0x294161 > 0x0 && (_0x25f822[_0x589b8d(0x2b3)] = _0x13e992 = []);
                for (_0x5b6d03 = 0x0; _0x5b6d03 < _0x294161; _0x5b6d03++) {
                    var _0x35ea5d = _0x137a5c[_0x589b8d(0x2a7)]();
                    switch (_0x35ea5d) {
                    case 0x0:
                        _0x13e992[_0x589b8d(0x298)](!!_0x137a5c['getByte']());
                        break;
                    case 0x1:
                        _0x13e992['push'](_0x137a5c[_0x589b8d(0x2b4)]());
                        break;
                    case 0x2:
                        _0x13e992[_0x589b8d(0x298)](_0x137a5c[_0x589b8d(0x2a4)]());
                        break;
                    case 0x3:
                        _0x13e992[_0x589b8d(0x298)](_0x1d4d9f[_0x589b8d(0x29b)][_0x137a5c[_0x589b8d(0x299)]()]);
                        break;
                    default:
                        throw new Error(_0x589b8d(0x2b5));
                    }
                }
                _0x40bb29[_0x589b8d(0x2b6)](_0x25f822);
            }
        }
    }
    _0x1d4d9f[_0x5659be(0x29b)] = [], _0x1d4d9f[_0x5659be(0x296)] = { 'count': 0x0 }, _0x1d4d9f[_0x5659be(0x292)] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x3cab70 {
        static [_0x5659be(0x2b7)]() {
            var _0x15e8e0 = _0x5659be;
            _0x3cab70[_0x15e8e0(0x292)][_0x15e8e0(0x293)] = _0x3cab70['_reader'][_0x15e8e0(0x295)](), _0x3cab70[_0x15e8e0(0x292)][_0x15e8e0(0x2b8)] = _0x3cab70[_0x15e8e0(0x294)][_0x15e8e0(0x295)]();
        }
        static ['READ_BLOCK']() {
            var _0x23cc77 = _0x5659be, _0x331fd3 = _0x3cab70[_0x23cc77(0x296)][_0x23cc77(0x2a1)] = _0x3cab70['_reader']['getUint16'](), _0x279f7d = _0x3cab70[_0x23cc77(0x296)]['blockStarts'] = [], _0x1a38f3 = _0x3cab70[_0x23cc77(0x296)]['blockLengths'] = [];
            for (var _0x2c1963 = 0x0; _0x2c1963 < _0x331fd3; _0x2c1963++) {
                _0x279f7d[_0x23cc77(0x298)](_0x3cab70['_reader'][_0x23cc77(0x295)]()), _0x1a38f3['push'](_0x3cab70[_0x23cc77(0x294)][_0x23cc77(0x295)]());
            }
        }
        static ['READ_STRINGS']() {
            var _0x5477b1 = _0x5659be, _0x17a93c = _0x3cab70['_reader'][_0x5477b1(0x295)](), _0x17988b = _0x3cab70[_0x5477b1(0x294)]['getUint16'](), _0x338622 = _0x3cab70['_reader'][_0x5477b1(0x29a)];
            _0x3cab70[_0x5477b1(0x294)]['pos'] = _0x17a93c + _0x3cab70[_0x5477b1(0x292)][_0x5477b1(0x293)];
            for (var _0x3036b0 = 0x0; _0x3036b0 < _0x17988b; _0x3036b0++)
                _0x3cab70[_0x5477b1(0x29b)][_0x3036b0] = _0x3cab70[_0x5477b1(0x294)][_0x5477b1(0x29c)]();
            _0x3cab70['_reader']['pos'] = _0x338622;
        }
        static [_0x5659be(0x29d)](_0x43853f, _0x4b598c, _0x56a541) {
            var _0x473dbb = _0x5659be;
            _0x3cab70[_0x473dbb(0x29e)] = _0x43853f, _0x3cab70['_reader'] = _0x4b598c, _0x3cab70[_0x473dbb(0x2b9)] = _0x56a541, _0x3cab70[_0x473dbb(0x2b7)](), _0x3cab70[_0x473dbb(0x29f)](), _0x3cab70['READ_STRINGS']();
            for (var _0x3bd136 = 0x0, _0x2d49c9 = _0x3cab70['_BLOCK']['count']; _0x3bd136 < _0x2d49c9; _0x3bd136++) {
                var _0x55f037 = _0x4b598c[_0x473dbb(0x299)](), _0x4464cd = _0x3cab70[_0x473dbb(0x29b)][_0x55f037], _0x48fd80 = _0x3cab70['READ_' + _0x4464cd];
                if (_0x48fd80 == null)
                    throw new Error(_0x473dbb(0x2a2) + _0x55f037 + '\x20' + _0x4464cd);
                else
                    _0x48fd80[_0x473dbb(0x2ba)](null);
            }
            _0x3cab70[_0x473dbb(0x2b9)] = null, _0x3cab70[_0x473dbb(0x294)] = null, _0x3cab70['_animationClip'] = null;
        }
        static ['READ_ANIMATIONS']() {
            var _0x4c784b = _0x5659be, _0x116172, _0xa5c260, _0x77844e, _0x3b8df9 = _0x3cab70['_reader'], _0x4a767e = [], _0x5b07d9 = _0x3b8df9[_0x4c784b(0x299)]();
            _0x4a767e[_0x4c784b(0x1ff)] = _0x5b07d9;
            for (_0x116172 = 0x0; _0x116172 < _0x5b07d9; _0x116172++)
                _0x4a767e[_0x116172] = _0x3b8df9[_0x4c784b(0x2a4)]();
            var _0x1b4af1 = _0x3cab70['_animationClip'];
            _0x1b4af1[_0x4c784b(0x2a5)] = _0x3cab70[_0x4c784b(0x29b)][_0x3b8df9[_0x4c784b(0x299)]()];
            var _0x2bead0 = _0x1b4af1['_duration'] = _0x3b8df9[_0x4c784b(0x2a4)]();
            _0x1b4af1[_0x4c784b(0x2a6)] = !!_0x3b8df9[_0x4c784b(0x2a7)](), _0x1b4af1[_0x4c784b(0x2a8)] = _0x3b8df9[_0x4c784b(0x2a9)]();
            var _0x61b8e5 = _0x3b8df9['getInt16'](), _0x954b8c = _0x1b4af1['_nodes'];
            _0x954b8c[_0x4c784b(0x2a1)] = _0x61b8e5;
            var _0x595d7e = _0x1b4af1['_nodesMap'] = {}, _0x5a88f6 = _0x1b4af1['_nodesDic'] = {};
            for (_0x116172 = 0x0; _0x116172 < _0x61b8e5; _0x116172++) {
                _0x77844e = new _0x4a2d82(), _0x954b8c[_0x4c784b(0x2ac)](_0x116172, _0x77844e), _0x77844e['_indexInList'] = _0x116172;
                var _0x9d567a = _0x77844e[_0x4c784b(0x2ae)] = _0x3b8df9[_0x4c784b(0x2af)](), _0x385cf3 = _0x3b8df9['getUint16']();
                _0x77844e[_0x4c784b(0x25d)](_0x385cf3);
                for (_0xa5c260 = 0x0; _0xa5c260 < _0x385cf3; _0xa5c260++)
                    _0x77844e[_0x4c784b(0x25e)](_0xa5c260, _0x3cab70[_0x4c784b(0x29b)][_0x3b8df9[_0x4c784b(0x299)]()]);
                var _0x3b1093 = _0x77844e[_0x4c784b(0x25f)]('/'), _0x1c460c = _0x595d7e[_0x3b1093];
                _0x1c460c || (_0x595d7e[_0x3b1093] = _0x1c460c = []), _0x1c460c[_0x4c784b(0x298)](_0x77844e), _0x77844e[_0x4c784b(0x2b0)] = _0x3cab70[_0x4c784b(0x29b)][_0x3b8df9[_0x4c784b(0x299)]()];
                var _0x451e2f = _0x3b8df9['getUint16']();
                _0x77844e[_0x4c784b(0x2b1)](_0x451e2f);
                for (_0xa5c260 = 0x0; _0xa5c260 < _0x451e2f; _0xa5c260++)
                    _0x77844e[_0x4c784b(0x260)](_0xa5c260, _0x3cab70[_0x4c784b(0x29b)][_0x3b8df9['getUint16']()]);
                var _0x5c0b49 = _0x3b1093 + '.' + _0x77844e[_0x4c784b(0x2b0)] + '.' + _0x77844e[_0x4c784b(0x261)]('.');
                _0x5a88f6[_0x5c0b49] = _0x77844e, _0x77844e[_0x4c784b(0x2bb)] = _0x5c0b49, _0x77844e[_0x4c784b(0x2bc)] = _0x3b1093;
                var _0x358997 = _0x3b8df9[_0x4c784b(0x299)]();
                _0x77844e['_setKeyframeCount'](_0x358997);
                switch (_0x3cab70[_0x4c784b(0x2b9)]) {
                case _0x4c784b(0x2bd):
                    for (_0xa5c260 = 0x0; _0xa5c260 < _0x358997; _0xa5c260++) {
                        switch (_0x9d567a) {
                        case 0x0:
                            var _0x4dfb6c = new _0x336653();
                            _0x77844e[_0x4c784b(0x264)](_0xa5c260, _0x4dfb6c), _0x4dfb6c[_0x4c784b(0x268)] = _0x4a767e[_0x3b8df9[_0x4c784b(0x299)]()], _0x4dfb6c[_0x4c784b(0x269)] = _0x3b8df9['getFloat32'](), _0x4dfb6c[_0x4c784b(0x26a)] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x4dfb6c[_0x4c784b(0x26b)] = _0x3b8df9[_0x4c784b(0x2a4)]();
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            var _0x59ba65 = new _0x22ed4e();
                            _0x77844e[_0x4c784b(0x264)](_0xa5c260, _0x59ba65), _0x59ba65[_0x4c784b(0x268)] = _0x4a767e[_0x3b8df9['getUint16']()];
                            var _0x3f7fe9 = _0x59ba65['inTangent'], _0x3c4697 = _0x59ba65[_0x4c784b(0x26a)], _0x20028e = _0x59ba65[_0x4c784b(0x26b)];
                            _0x3f7fe9['x'] = _0x3b8df9['getFloat32'](), _0x3f7fe9['y'] = _0x3b8df9['getFloat32'](), _0x3f7fe9['z'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x3c4697['x'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x3c4697['y'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x3c4697['z'] = _0x3b8df9['getFloat32'](), _0x20028e['x'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x20028e['y'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x20028e['z'] = _0x3b8df9[_0x4c784b(0x2a4)]();
                            break;
                        case 0x2:
                            var _0x57599b = new _0x2bb7ec();
                            _0x77844e[_0x4c784b(0x264)](_0xa5c260, _0x57599b), _0x57599b[_0x4c784b(0x268)] = _0x4a767e[_0x3b8df9['getUint16']()];
                            var _0x5b9684 = _0x57599b[_0x4c784b(0x269)], _0x99ca15 = _0x57599b[_0x4c784b(0x26a)], _0x22273d = _0x57599b[_0x4c784b(0x26b)];
                            _0x5b9684['x'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x5b9684['y'] = _0x3b8df9['getFloat32'](), _0x5b9684['z'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x5b9684['w'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x99ca15['x'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x99ca15['y'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x99ca15['z'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x99ca15['w'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x22273d['x'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x22273d['y'] = _0x3b8df9['getFloat32'](), _0x22273d['z'] = _0x3b8df9[_0x4c784b(0x2a4)](), _0x22273d['w'] = _0x3b8df9[_0x4c784b(0x2a4)]();
                            break;
                        default:
                            throw 'AnimationClipParser04:unknown\x20type.';
                        }
                    }
                    break;
                case _0x4c784b(0x2be):
                    for (_0xa5c260 = 0x0; _0xa5c260 < _0x358997; _0xa5c260++) {
                        switch (_0x9d567a) {
                        case 0x0:
                            _0x4dfb6c = new _0x336653(), _0x77844e[_0x4c784b(0x264)](_0xa5c260, _0x4dfb6c), _0x4dfb6c[_0x4c784b(0x268)] = _0x4a767e[_0x3b8df9[_0x4c784b(0x299)]()], _0x4dfb6c[_0x4c784b(0x269)] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x4dfb6c[_0x4c784b(0x26a)] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x4dfb6c[_0x4c784b(0x26b)] = _0x218b83[_0x4c784b(0x2bf)]['convertToNumber'](_0x3b8df9[_0x4c784b(0x299)]());
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x59ba65 = new _0x22ed4e(), _0x77844e[_0x4c784b(0x264)](_0xa5c260, _0x59ba65), _0x59ba65[_0x4c784b(0x268)] = _0x4a767e[_0x3b8df9[_0x4c784b(0x299)]()], _0x3f7fe9 = _0x59ba65[_0x4c784b(0x269)], _0x3c4697 = _0x59ba65[_0x4c784b(0x26a)], _0x20028e = _0x59ba65[_0x4c784b(0x26b)], _0x3f7fe9['x'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x3f7fe9['y'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x3f7fe9['z'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x3c4697['x'] = _0x218b83[_0x4c784b(0x2bf)]['convertToNumber'](_0x3b8df9[_0x4c784b(0x299)]()), _0x3c4697['y'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x3c4697['z'] = _0x218b83[_0x4c784b(0x2bf)]['convertToNumber'](_0x3b8df9['getUint16']()), _0x20028e['x'] = _0x218b83['HalfFloatUtils'][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x20028e['y'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9['getUint16']()), _0x20028e['z'] = _0x218b83['HalfFloatUtils'][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]());
                            break;
                        case 0x2:
                            _0x57599b = new _0x2bb7ec(), _0x77844e['_setKeyframeByIndex'](_0xa5c260, _0x57599b), _0x57599b[_0x4c784b(0x268)] = _0x4a767e[_0x3b8df9[_0x4c784b(0x299)]()], _0x5b9684 = _0x57599b[_0x4c784b(0x269)], _0x99ca15 = _0x57599b[_0x4c784b(0x26a)], _0x22273d = _0x57599b[_0x4c784b(0x26b)], _0x5b9684['x'] = _0x218b83['HalfFloatUtils'][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x5b9684['y'] = _0x218b83['HalfFloatUtils']['convertToNumber'](_0x3b8df9[_0x4c784b(0x299)]()), _0x5b9684['z'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x5b9684['w'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x99ca15['x'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x99ca15['y'] = _0x218b83[_0x4c784b(0x2bf)]['convertToNumber'](_0x3b8df9[_0x4c784b(0x299)]()), _0x99ca15['z'] = _0x218b83[_0x4c784b(0x2bf)]['convertToNumber'](_0x3b8df9['getUint16']()), _0x99ca15['w'] = _0x218b83[_0x4c784b(0x2bf)][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x22273d['x'] = _0x218b83['HalfFloatUtils'][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x22273d['y'] = _0x218b83['HalfFloatUtils'][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]()), _0x22273d['z'] = _0x218b83[_0x4c784b(0x2bf)]['convertToNumber'](_0x3b8df9[_0x4c784b(0x299)]()), _0x22273d['w'] = _0x218b83['HalfFloatUtils'][_0x4c784b(0x2c0)](_0x3b8df9[_0x4c784b(0x299)]());
                            break;
                        default:
                            throw _0x4c784b(0x2c1);
                        }
                    }
                    break;
                }
            }
            var _0x56c3ab = _0x3b8df9[_0x4c784b(0x299)]();
            for (_0x116172 = 0x0; _0x116172 < _0x56c3ab; _0x116172++) {
                var _0x1596f9 = new _0x28dc41();
                _0x1596f9[_0x4c784b(0x268)] = Math[_0x4c784b(0x204)](_0x2bead0, _0x3b8df9['getFloat32']()), _0x1596f9[_0x4c784b(0x2b2)] = _0x3cab70[_0x4c784b(0x29b)][_0x3b8df9[_0x4c784b(0x299)]()];
                var _0x227692 = [], _0x4cfc77 = _0x3b8df9[_0x4c784b(0x299)]();
                _0x4cfc77 > 0x0 && (_0x1596f9[_0x4c784b(0x2b3)] = _0x227692 = []);
                for (_0xa5c260 = 0x0; _0xa5c260 < _0x4cfc77; _0xa5c260++) {
                    var _0xa01cd8 = _0x3b8df9[_0x4c784b(0x2a7)]();
                    switch (_0xa01cd8) {
                    case 0x0:
                        _0x227692['push'](!!_0x3b8df9[_0x4c784b(0x2a7)]());
                        break;
                    case 0x1:
                        _0x227692[_0x4c784b(0x298)](_0x3b8df9['getInt32']());
                        break;
                    case 0x2:
                        _0x227692[_0x4c784b(0x298)](_0x3b8df9[_0x4c784b(0x2a4)]());
                        break;
                    case 0x3:
                        _0x227692[_0x4c784b(0x298)](_0x3cab70['_strings'][_0x3b8df9['getUint16']()]);
                        break;
                    default:
                        throw new Error(_0x4c784b(0x2b5));
                    }
                }
                _0x1b4af1[_0x4c784b(0x2b6)](_0x1596f9);
            }
        }
    }
    _0x3cab70[_0x5659be(0x29b)] = [], _0x3cab70['_BLOCK'] = { 'count': 0x0 }, _0x3cab70[_0x5659be(0x292)] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x4f46e6 {
        constructor() {
            this['_nodes'] = [];
        }
        get [_0x5659be(0x2a1)]() {
            var _0x1b0205 = _0x5659be;
            return this[_0x1b0205(0x2aa)][_0x1b0205(0x1ff)];
        }
        set ['count'](_0x129d28) {
            var _0xbdd75 = _0x5659be;
            this['_nodes'][_0xbdd75(0x1ff)] = _0x129d28;
        }
        [_0x5659be(0x2c2)](_0x3a0a99) {
            return this['_nodes'][_0x3a0a99];
        }
        ['setNodeByIndex'](_0x5ceec9, _0x5e96bc) {
            var _0x5dd5fe = _0x5659be;
            this[_0x5dd5fe(0x2aa)][_0x5ceec9] = _0x5e96bc;
        }
    }
    class _0x169c34 {
        constructor() {
        }
        static [_0x5659be(0x2c3)](_0x309725, _0x574722, _0x316eb1, _0x1e4236, _0x4038bb, _0x5161f5) {
            var _0xc0a3c8 = _0x5659be, _0x8db107 = _0x309725 / _0x316eb1, _0x32ad3b = 0x1 / (0x1 + 0x19 * _0x8db107);
            _0x8db107 >= 0.64 && (_0x8db107 > 0x1 ? _0x32ad3b = 0x0 : _0x32ad3b *= 0x1 - (_0x8db107 - 0.64) / (0x1 - 0.64)), _0x5161f5[_0x4038bb] = Math[_0xc0a3c8(0x241)](_0x32ad3b * 0xff + 0.5);
        }
        static ['haloTexture'](_0x5a45e, _0x41c911, _0x4f8b53, _0x1aee1e, _0x3fc8b0, _0x5491da) {
            _0x4f8b53 >>= 0x1, _0x1aee1e >>= 0x1;
            var _0x3de4b9 = (_0x5a45e - _0x4f8b53) / _0x4f8b53, _0x712cb0 = (_0x41c911 - _0x1aee1e) / _0x1aee1e, _0x13656a = _0x3de4b9 * _0x3de4b9 + _0x712cb0 * _0x712cb0;
            _0x13656a > 0x1 && (_0x13656a = 0x1), _0x5491da[_0x3fc8b0] = Math['floor']((0x1 - _0x13656a) * 0xff + 0.5);
        }
        static [_0x5659be(0x2c4)](_0x15a553, _0x41421b, _0x4a462c, _0x690c16) {
            var _0x53ce8e = _0x5659be, _0x48a536 = 0x0, _0x35e541 = 0x0;
            switch (_0x15a553[_0x53ce8e(0x2c5)]) {
            case _0x218b83[_0x53ce8e(0x2c6)][_0x53ce8e(0x2c7)]:
                _0x35e541 = 0x3;
                break;
            case _0x218b83[_0x53ce8e(0x2c6)][_0x53ce8e(0x2c8)]:
                _0x35e541 = 0x4;
                break;
            case _0x218b83['TextureFormat'][_0x53ce8e(0x2c9)]:
                _0x35e541 = 0x1;
                break;
            default:
                throw _0x53ce8e(0x2ca);
            }
            var _0x264398 = new Uint8Array(_0x41421b * _0x4a462c * _0x35e541);
            for (var _0x35a862 = 0x0; _0x35a862 < _0x4a462c; _0x35a862++) {
                for (var _0x219c2d = 0x0; _0x219c2d < _0x41421b; _0x219c2d++) {
                    _0x690c16(_0x219c2d, _0x35a862, _0x41421b, _0x4a462c, _0x48a536, _0x264398), _0x48a536 += _0x35e541;
                }
            }
            _0x15a553[_0x53ce8e(0x2cb)](_0x264398);
        }
    }
    class _0x108d81 {
        static [_0x5659be(0x2cc)](_0x23fe14, _0x4e04cf) {
            var _0x39673c = _0x5659be, _0x8adb14 = new _0x218b83[(_0x39673c(0x2cd))](_0x23fe14, _0x4e04cf, _0x218b83['TextureFormat']['R32G32B32A32'], ![], ![]);
            return _0x8adb14[_0x39673c(0x2ce)] = _0x218b83['FilterMode'][_0x39673c(0x2cf)], _0x8adb14[_0x39673c(0x2d0)] = _0x218b83[_0x39673c(0x2d1)][_0x39673c(0x20f)], _0x8adb14[_0x39673c(0x2d2)] = _0x218b83['WarpMode'][_0x39673c(0x20f)], _0x8adb14[_0x39673c(0x2d3)] = 0x0, _0x8adb14;
        }
        static [_0x5659be(0x2d4)](_0x29ab39, _0x421733, _0x29ac8f) {
            var _0x12d294 = _0x5659be, _0x4ed040 = _0x429ec3[_0x12d294(0x223)][_0x12d294(0x227)];
            _0x421733['x'] = _0x29ac8f ? -_0x4ed040[_0x12d294(0x2d5)](_0x29ab39) : _0x4ed040[_0x12d294(0x2d5)](_0x29ab39), _0x421733['y'] = _0x4ed040[_0x12d294(0x2d6)](_0x29ab39), _0x421733['z'] = _0x4ed040[_0x12d294(0x2d7)](_0x29ab39);
        }
        static [_0x5659be(0x2d8)](_0x2da15c, _0x27f895, _0x10767e) {
            var _0x321f5e = _0x5659be;
            _0x429ec3[_0x321f5e(0x223)]['_bullet'][_0x321f5e(0x2d9)](_0x27f895, _0x10767e ? -_0x2da15c['x'] : _0x2da15c['x'], _0x2da15c['y'], _0x2da15c['z']);
        }
        static ['_rotationTransformScaleSkinAnimation'](_0x3a12de, _0x2b709e, _0x1ae456, _0x43f03f, _0x1fc36d, _0x2e3d96, _0x2bf917, _0x2df61f, _0x2244db, _0x20184a, _0x4409a2, _0x52ca80) {
            var _0x4939d2 = _0x5659be, _0x12d919 = _0x108d81['_tempArray16_0'], _0x329b03 = _0x108d81[_0x4939d2(0x2da)], _0x317872 = _0x108d81[_0x4939d2(0x2db)], _0x35ed01 = _0x43f03f + _0x43f03f, _0x5db7e1 = _0x1fc36d + _0x1fc36d, _0x393b33 = _0x2e3d96 + _0x2e3d96, _0x2a30ae = _0x43f03f * _0x35ed01, _0x19f96f = _0x1fc36d * _0x35ed01, _0x4391b1 = _0x1fc36d * _0x5db7e1, _0x5677d0 = _0x2e3d96 * _0x35ed01, _0x2740c2 = _0x2e3d96 * _0x5db7e1, _0x3a69fa = _0x2e3d96 * _0x393b33, _0xe13314 = _0x2bf917 * _0x35ed01, _0x22e48f = _0x2bf917 * _0x5db7e1, _0x38efa7 = _0x2bf917 * _0x393b33;
            _0x12d919[0xf] = 0x1, _0x12d919[0x0] = 0x1 - _0x4391b1 - _0x3a69fa, _0x12d919[0x1] = _0x19f96f + _0x38efa7, _0x12d919[0x2] = _0x5677d0 - _0x22e48f, _0x12d919[0x4] = _0x19f96f - _0x38efa7, _0x12d919[0x5] = 0x1 - _0x2a30ae - _0x3a69fa, _0x12d919[0x6] = _0x2740c2 + _0xe13314, _0x12d919[0x8] = _0x5677d0 + _0x22e48f, _0x12d919[0x9] = _0x2740c2 - _0xe13314, _0x12d919[0xa] = 0x1 - _0x2a30ae - _0x4391b1, _0x329b03[0xf] = 0x1, _0x329b03[0x0] = _0x2df61f, _0x329b03[0x5] = _0x2244db, _0x329b03[0xa] = _0x20184a;
            var _0x43cb07, _0x4f4cea, _0x250e66, _0x2fe5ef, _0x1da63f;
            for (_0x43cb07 = 0x0; _0x43cb07 < 0x4; _0x43cb07++) {
                _0x4f4cea = _0x12d919[_0x43cb07], _0x250e66 = _0x12d919[_0x43cb07 + 0x4], _0x2fe5ef = _0x12d919[_0x43cb07 + 0x8], _0x1da63f = _0x12d919[_0x43cb07 + 0xc], _0x317872[_0x43cb07] = _0x4f4cea, _0x317872[_0x43cb07 + 0x4] = _0x250e66, _0x317872[_0x43cb07 + 0x8] = _0x2fe5ef, _0x317872[_0x43cb07 + 0xc] = _0x4f4cea * _0x3a12de + _0x250e66 * _0x2b709e + _0x2fe5ef * _0x1ae456 + _0x1da63f;
            }
            for (_0x43cb07 = 0x0; _0x43cb07 < 0x4; _0x43cb07++) {
                _0x4f4cea = _0x317872[_0x43cb07], _0x250e66 = _0x317872[_0x43cb07 + 0x4], _0x2fe5ef = _0x317872[_0x43cb07 + 0x8], _0x1da63f = _0x317872[_0x43cb07 + 0xc], _0x4409a2[_0x43cb07 + _0x52ca80] = _0x4f4cea * _0x329b03[0x0] + _0x250e66 * _0x329b03[0x1] + _0x2fe5ef * _0x329b03[0x2] + _0x1da63f * _0x329b03[0x3], _0x4409a2[_0x43cb07 + _0x52ca80 + 0x4] = _0x4f4cea * _0x329b03[0x4] + _0x250e66 * _0x329b03[0x5] + _0x2fe5ef * _0x329b03[0x6] + _0x1da63f * _0x329b03[0x7], _0x4409a2[_0x43cb07 + _0x52ca80 + 0x8] = _0x4f4cea * _0x329b03[0x8] + _0x250e66 * _0x329b03[0x9] + _0x2fe5ef * _0x329b03[0xa] + _0x1da63f * _0x329b03[0xb], _0x4409a2[_0x43cb07 + _0x52ca80 + 0xc] = _0x4f4cea * _0x329b03[0xc] + _0x250e66 * _0x329b03[0xd] + _0x2fe5ef * _0x329b03[0xe] + _0x1da63f * _0x329b03[0xf];
            }
        }
        static [_0x5659be(0x2dc)](_0x531d70, _0x30416c, _0x4f95fe, _0x345d84, _0x3b6ae0, _0x2aab3d) {
            var _0x3dfceb = _0x5659be, _0x1c471b = 0x0, _0x54d210 = 0x0, _0x2b81c3, _0x3ce1be, _0x150921 = _0x531d70[_0x3dfceb(0x1ff)];
            for (_0x2b81c3 = 0x0; _0x2b81c3 < _0x150921; _0x1c471b += _0x531d70[_0x2b81c3][_0x3dfceb(0x2dd)], _0x54d210 += 0x10, _0x2b81c3++) {
                _0x108d81[_0x3dfceb(0x2de)](_0x30416c[_0x1c471b + 0x0], _0x30416c[_0x1c471b + 0x1], _0x30416c[_0x1c471b + 0x2], _0x30416c[_0x1c471b + 0x3], _0x30416c[_0x1c471b + 0x4], _0x30416c[_0x1c471b + 0x5], _0x30416c[_0x1c471b + 0x6], _0x30416c[_0x1c471b + 0x7], _0x30416c[_0x1c471b + 0x8], _0x30416c[_0x1c471b + 0x9], _0x345d84, _0x54d210), _0x2b81c3 != 0x0 && (_0x3ce1be = _0x531d70[_0x2b81c3]['parentIndex'] * 0x10, _0x108d81[_0x3dfceb(0x2df)](_0x345d84, _0x3ce1be, _0x345d84, _0x54d210, _0x345d84, _0x54d210));
            }
            var _0xeecfea = _0x4f95fe[_0x3dfceb(0x1ff)];
            for (_0x2b81c3 = 0x0; _0x2b81c3 < _0xeecfea; _0x2b81c3++) {
                _0x108d81[_0x3dfceb(0x2e0)](_0x345d84, _0x2aab3d[_0x2b81c3] * 0x10, _0x4f95fe[_0x2b81c3], _0x3b6ae0, _0x2b81c3 * 0x10);
            }
        }
        static [_0x5659be(0x2e1)](_0x472ad8, _0x2bce83, _0x3236fb, _0x4784d2) {
            var _0x8ddd0e = _0x5659be;
            for (var _0x4348f6 = 0x0, _0x563fc7 = _0x472ad8[_0x8ddd0e(0x1ff)]; _0x4348f6 < _0x563fc7; _0x4348f6++)
                _0x108d81[_0x8ddd0e(0x2e0)](_0x2bce83, _0x4784d2[_0x4348f6] * 0x10, _0x472ad8[_0x4348f6], _0x3236fb, _0x4348f6 * 0x10);
        }
        static [_0x5659be(0x2e2)](_0x5a01a5, _0x7708f5, _0x167e35, _0xf53d06, _0x518985) {
            var _0x98e6e0 = _0x5659be, _0x14a402 = 0x0, _0x5663e8 = 0x0, _0x1688c2, _0x4cdfbb, _0x586dc0 = _0x5a01a5[_0x98e6e0(0x1ff)];
            for (_0x1688c2 = 0x0; _0x1688c2 < _0x586dc0; _0x14a402 += _0x5a01a5[_0x1688c2][_0x98e6e0(0x2dd)], _0x5663e8 += 0x10, _0x1688c2++) {
                _0x108d81[_0x98e6e0(0x2de)](_0x7708f5[_0x14a402 + 0x7], _0x7708f5[_0x14a402 + 0x8], _0x7708f5[_0x14a402 + 0x9], _0x7708f5[_0x14a402 + 0x3], _0x7708f5[_0x14a402 + 0x4], _0x7708f5[_0x14a402 + 0x5], _0x7708f5[_0x14a402 + 0x6], _0x7708f5[_0x14a402 + 0x0], _0x7708f5[_0x14a402 + 0x1], _0x7708f5[_0x14a402 + 0x2], _0xf53d06, _0x5663e8), _0x1688c2 != 0x0 && (_0x4cdfbb = _0x5a01a5[_0x1688c2][_0x98e6e0(0x2e3)] * 0x10, _0x108d81[_0x98e6e0(0x2df)](_0xf53d06, _0x4cdfbb, _0xf53d06, _0x5663e8, _0xf53d06, _0x5663e8));
            }
            var _0x3bd524 = _0x167e35['length'];
            for (_0x1688c2 = 0x0; _0x1688c2 < _0x3bd524; _0x1688c2++) {
                var _0x738a0d = _0x1688c2 * 0x10;
                _0x108d81[_0x98e6e0(0x2e0)](_0xf53d06, _0x738a0d, _0x167e35[_0x1688c2], _0x518985, _0x738a0d);
            }
        }
        static [_0x5659be(0x2e4)](_0x21aa37, _0x4993a9, _0x5bc8f3) {
            var _0x27fc99 = _0x5659be, _0x2318d2 = _0x21aa37[_0x27fc99(0x1ff)];
            for (var _0xeaac8f = 0x0; _0xeaac8f < _0x2318d2; _0xeaac8f++) {
                var _0x47f83d = _0xeaac8f * 0x10;
                _0x108d81['mulMatrixByArrayAndMatrixFast'](_0x4993a9, _0x47f83d, _0x21aa37[_0xeaac8f], _0x5bc8f3, _0x47f83d);
            }
        }
        static ['_computeRootAnimationData'](_0x2a86db, _0x58ff04, _0x5ebb11) {
            var _0x3eb346 = _0x5659be;
            for (var _0x1a5a11 = 0x0, _0x30f784 = 0x0, _0x29969b = 0x0, _0x403bf0 = _0x2a86db['length']; _0x1a5a11 < _0x403bf0; _0x30f784 += _0x2a86db[_0x1a5a11][_0x3eb346(0x2dd)], _0x29969b += 0x10, _0x1a5a11++)
                _0x108d81[_0x3eb346(0x2e5)](_0x58ff04[_0x30f784 + 0x0], _0x58ff04[_0x30f784 + 0x1], _0x58ff04[_0x30f784 + 0x2], _0x58ff04[_0x30f784 + 0x3], _0x58ff04[_0x30f784 + 0x4], _0x58ff04[_0x30f784 + 0x5], _0x58ff04[_0x30f784 + 0x6], _0x58ff04[_0x30f784 + 0x7], _0x58ff04[_0x30f784 + 0x8], _0x58ff04[_0x30f784 + 0x9], _0x5ebb11, _0x29969b);
        }
        static ['transformVector3ArrayByQuat'](_0xcb3c8c, _0x6b7ec4, _0x52e3cd, _0x225534, _0x4e656d) {
            var _0x3dc4a9 = _0xcb3c8c[_0x6b7ec4], _0x359f1f = _0xcb3c8c[_0x6b7ec4 + 0x1], _0x34ed89 = _0xcb3c8c[_0x6b7ec4 + 0x2], _0x463a97 = _0x52e3cd['x'], _0x2959bb = _0x52e3cd['y'], _0x574c96 = _0x52e3cd['z'], _0x5b7fec = _0x52e3cd['w'], _0x4d356a = _0x5b7fec * _0x3dc4a9 + _0x2959bb * _0x34ed89 - _0x574c96 * _0x359f1f, _0x16ce80 = _0x5b7fec * _0x359f1f + _0x574c96 * _0x3dc4a9 - _0x463a97 * _0x34ed89, _0x1ca7e4 = _0x5b7fec * _0x34ed89 + _0x463a97 * _0x359f1f - _0x2959bb * _0x3dc4a9, _0x44f60e = -_0x463a97 * _0x3dc4a9 - _0x2959bb * _0x359f1f - _0x574c96 * _0x34ed89;
            _0x225534[_0x4e656d] = _0x4d356a * _0x5b7fec + _0x44f60e * -_0x463a97 + _0x16ce80 * -_0x574c96 - _0x1ca7e4 * -_0x2959bb, _0x225534[_0x4e656d + 0x1] = _0x16ce80 * _0x5b7fec + _0x44f60e * -_0x2959bb + _0x1ca7e4 * -_0x463a97 - _0x4d356a * -_0x574c96, _0x225534[_0x4e656d + 0x2] = _0x1ca7e4 * _0x5b7fec + _0x44f60e * -_0x574c96 + _0x4d356a * -_0x2959bb - _0x16ce80 * -_0x463a97;
        }
        static ['mulMatrixByArray'](_0x1f2092, _0x83eff9, _0xd2dffa, _0x53b48a, _0xf7d4ef, _0x3e9f0e) {
            var _0x71cb20, _0x3341d1, _0x186724, _0x4392e7, _0x46a1a5;
            if (_0xf7d4ef === _0xd2dffa) {
                _0xd2dffa = _0x108d81['_tempArray16_3'];
                for (_0x71cb20 = 0x0; _0x71cb20 < 0x10; ++_0x71cb20) {
                    _0xd2dffa[_0x71cb20] = _0xf7d4ef[_0x3e9f0e + _0x71cb20];
                }
                _0x53b48a = 0x0;
            }
            for (_0x71cb20 = 0x0; _0x71cb20 < 0x4; _0x71cb20++) {
                _0x3341d1 = _0x1f2092[_0x83eff9 + _0x71cb20], _0x186724 = _0x1f2092[_0x83eff9 + _0x71cb20 + 0x4], _0x4392e7 = _0x1f2092[_0x83eff9 + _0x71cb20 + 0x8], _0x46a1a5 = _0x1f2092[_0x83eff9 + _0x71cb20 + 0xc], _0xf7d4ef[_0x3e9f0e + _0x71cb20] = _0x3341d1 * _0xd2dffa[_0x53b48a + 0x0] + _0x186724 * _0xd2dffa[_0x53b48a + 0x1] + _0x4392e7 * _0xd2dffa[_0x53b48a + 0x2] + _0x46a1a5 * _0xd2dffa[_0x53b48a + 0x3], _0xf7d4ef[_0x3e9f0e + _0x71cb20 + 0x4] = _0x3341d1 * _0xd2dffa[_0x53b48a + 0x4] + _0x186724 * _0xd2dffa[_0x53b48a + 0x5] + _0x4392e7 * _0xd2dffa[_0x53b48a + 0x6] + _0x46a1a5 * _0xd2dffa[_0x53b48a + 0x7], _0xf7d4ef[_0x3e9f0e + _0x71cb20 + 0x8] = _0x3341d1 * _0xd2dffa[_0x53b48a + 0x8] + _0x186724 * _0xd2dffa[_0x53b48a + 0x9] + _0x4392e7 * _0xd2dffa[_0x53b48a + 0xa] + _0x46a1a5 * _0xd2dffa[_0x53b48a + 0xb], _0xf7d4ef[_0x3e9f0e + _0x71cb20 + 0xc] = _0x3341d1 * _0xd2dffa[_0x53b48a + 0xc] + _0x186724 * _0xd2dffa[_0x53b48a + 0xd] + _0x4392e7 * _0xd2dffa[_0x53b48a + 0xe] + _0x46a1a5 * _0xd2dffa[_0x53b48a + 0xf];
            }
        }
        static [_0x5659be(0x2e6)](_0x47188c, _0x24459f, _0x1fff17, _0x1c77f4, _0x1a3ed0, _0xdb7b3a) {
            var _0x3099c7, _0x4e4dd4, _0x592b39, _0x3836c9, _0x171454;
            for (_0x3099c7 = 0x0; _0x3099c7 < 0x4; _0x3099c7++) {
                _0x4e4dd4 = _0x47188c[_0x24459f + _0x3099c7], _0x592b39 = _0x47188c[_0x24459f + _0x3099c7 + 0x4], _0x3836c9 = _0x47188c[_0x24459f + _0x3099c7 + 0x8], _0x171454 = _0x47188c[_0x24459f + _0x3099c7 + 0xc], _0x1a3ed0[_0xdb7b3a + _0x3099c7] = _0x4e4dd4 * _0x1fff17[_0x1c77f4 + 0x0] + _0x592b39 * _0x1fff17[_0x1c77f4 + 0x1] + _0x3836c9 * _0x1fff17[_0x1c77f4 + 0x2] + _0x171454 * _0x1fff17[_0x1c77f4 + 0x3], _0x1a3ed0[_0xdb7b3a + _0x3099c7 + 0x4] = _0x4e4dd4 * _0x1fff17[_0x1c77f4 + 0x4] + _0x592b39 * _0x1fff17[_0x1c77f4 + 0x5] + _0x3836c9 * _0x1fff17[_0x1c77f4 + 0x6] + _0x171454 * _0x1fff17[_0x1c77f4 + 0x7], _0x1a3ed0[_0xdb7b3a + _0x3099c7 + 0x8] = _0x4e4dd4 * _0x1fff17[_0x1c77f4 + 0x8] + _0x592b39 * _0x1fff17[_0x1c77f4 + 0x9] + _0x3836c9 * _0x1fff17[_0x1c77f4 + 0xa] + _0x171454 * _0x1fff17[_0x1c77f4 + 0xb], _0x1a3ed0[_0xdb7b3a + _0x3099c7 + 0xc] = _0x4e4dd4 * _0x1fff17[_0x1c77f4 + 0xc] + _0x592b39 * _0x1fff17[_0x1c77f4 + 0xd] + _0x3836c9 * _0x1fff17[_0x1c77f4 + 0xe] + _0x171454 * _0x1fff17[_0x1c77f4 + 0xf];
            }
        }
        static [_0x5659be(0x2e0)](_0x410ff8, _0x1518ef, _0x2bdc51, _0x2a4194, _0x4eb09a) {
            var _0x160b6e = _0x5659be, _0x3d170a, _0x110ca6, _0x20b433, _0x3263a3, _0x267f81, _0x3b5e8d = _0x2bdc51[_0x160b6e(0x1f6)], _0x4add26 = _0x3b5e8d[0x0], _0x3b2e68 = _0x3b5e8d[0x1], _0x424423 = _0x3b5e8d[0x2], _0x1ed227 = _0x3b5e8d[0x3], _0x1ad442 = _0x3b5e8d[0x4], _0x22df6c = _0x3b5e8d[0x5], _0x19e8c0 = _0x3b5e8d[0x6], _0x1fa598 = _0x3b5e8d[0x7], _0x121587 = _0x3b5e8d[0x8], _0x48761b = _0x3b5e8d[0x9], _0x3540a9 = _0x3b5e8d[0xa], _0x4591f6 = _0x3b5e8d[0xb], _0x1b1424 = _0x3b5e8d[0xc], _0x5e5e3a = _0x3b5e8d[0xd], _0x447116 = _0x3b5e8d[0xe], _0x24e2ab = _0x3b5e8d[0xf], _0x258d0e = _0x1518ef, _0x2e9300 = _0x1518ef + 0x4, _0x19f610 = _0x1518ef + 0x8, _0x58f9d1 = _0x1518ef + 0xc, _0x4f8feb = _0x4eb09a, _0x49af6c = _0x4eb09a + 0x4, _0x1eea1c = _0x4eb09a + 0x8, _0x29db72 = _0x4eb09a + 0xc;
            for (_0x3d170a = 0x0; _0x3d170a < 0x4; _0x3d170a++) {
                _0x110ca6 = _0x410ff8[_0x258d0e + _0x3d170a], _0x20b433 = _0x410ff8[_0x2e9300 + _0x3d170a], _0x3263a3 = _0x410ff8[_0x19f610 + _0x3d170a], _0x267f81 = _0x410ff8[_0x58f9d1 + _0x3d170a], _0x2a4194[_0x4f8feb + _0x3d170a] = _0x110ca6 * _0x4add26 + _0x20b433 * _0x3b2e68 + _0x3263a3 * _0x424423 + _0x267f81 * _0x1ed227, _0x2a4194[_0x49af6c + _0x3d170a] = _0x110ca6 * _0x1ad442 + _0x20b433 * _0x22df6c + _0x3263a3 * _0x19e8c0 + _0x267f81 * _0x1fa598, _0x2a4194[_0x1eea1c + _0x3d170a] = _0x110ca6 * _0x121587 + _0x20b433 * _0x48761b + _0x3263a3 * _0x3540a9 + _0x267f81 * _0x4591f6, _0x2a4194[_0x29db72 + _0x3d170a] = _0x110ca6 * _0x1b1424 + _0x20b433 * _0x5e5e3a + _0x3263a3 * _0x447116 + _0x267f81 * _0x24e2ab;
            }
        }
        static [_0x5659be(0x2e5)](_0x5b51b5, _0x1697a8, _0x22221f, _0x103c42, _0x5b3696, _0x49b09a, _0x5a21e4, _0x3d9baf, _0x253a5d, _0x89182b, _0x194273, _0x51850a) {
            var _0x5b1973 = _0x103c42 + _0x103c42, _0x126dd8 = _0x5b3696 + _0x5b3696, _0x12663b = _0x49b09a + _0x49b09a, _0x5396e9 = _0x103c42 * _0x5b1973, _0x105899 = _0x103c42 * _0x126dd8, _0x42ec48 = _0x103c42 * _0x12663b, _0x5d620f = _0x5b3696 * _0x126dd8, _0x3a1953 = _0x5b3696 * _0x12663b, _0x5e47dc = _0x49b09a * _0x12663b, _0x2107d3 = _0x5a21e4 * _0x5b1973, _0x250242 = _0x5a21e4 * _0x126dd8, _0x24ff18 = _0x5a21e4 * _0x12663b;
            _0x194273[_0x51850a + 0x0] = (0x1 - (_0x5d620f + _0x5e47dc)) * _0x3d9baf, _0x194273[_0x51850a + 0x1] = (_0x105899 + _0x24ff18) * _0x3d9baf, _0x194273[_0x51850a + 0x2] = (_0x42ec48 - _0x250242) * _0x3d9baf, _0x194273[_0x51850a + 0x3] = 0x0, _0x194273[_0x51850a + 0x4] = (_0x105899 - _0x24ff18) * _0x253a5d, _0x194273[_0x51850a + 0x5] = (0x1 - (_0x5396e9 + _0x5e47dc)) * _0x253a5d, _0x194273[_0x51850a + 0x6] = (_0x3a1953 + _0x2107d3) * _0x253a5d, _0x194273[_0x51850a + 0x7] = 0x0, _0x194273[_0x51850a + 0x8] = (_0x42ec48 + _0x250242) * _0x89182b, _0x194273[_0x51850a + 0x9] = (_0x3a1953 - _0x2107d3) * _0x89182b, _0x194273[_0x51850a + 0xa] = (0x1 - (_0x5396e9 + _0x5d620f)) * _0x89182b, _0x194273[_0x51850a + 0xb] = 0x0, _0x194273[_0x51850a + 0xc] = _0x5b51b5, _0x194273[_0x51850a + 0xd] = _0x1697a8, _0x194273[_0x51850a + 0xe] = _0x22221f, _0x194273[_0x51850a + 0xf] = 0x1;
        }
        static [_0x5659be(0x2e7)](_0x5eb6dc, _0x1ab49b, _0x40f757, _0x3f5dfc, _0x1dce8d) {
            var _0x3d459f = _0x5659be, _0x2cef01 = _0x5eb6dc[_0x1ab49b + 0x0], _0xecf8e9 = _0x5eb6dc[_0x1ab49b + 0x1], _0x11f114 = _0x5eb6dc[_0x1ab49b + 0x2], _0x10deb4 = _0x40f757[_0x3d459f(0x1f6)], _0x514fb2 = _0x2cef01 * _0x10deb4[0x3] + _0xecf8e9 * _0x10deb4[0x7] + _0x11f114 * _0x10deb4[0xb] + _0x10deb4[0xf];
            _0x3f5dfc[_0x1dce8d] = _0x2cef01 * _0x10deb4[0x0] + _0xecf8e9 * _0x10deb4[0x4] + _0x11f114 * _0x10deb4[0x8] + _0x10deb4[0xc] / _0x514fb2, _0x3f5dfc[_0x1dce8d + 0x1] = _0x2cef01 * _0x10deb4[0x1] + _0xecf8e9 * _0x10deb4[0x5] + _0x11f114 * _0x10deb4[0x9] + _0x10deb4[0xd] / _0x514fb2, _0x3f5dfc[_0x1dce8d + 0x2] = _0x2cef01 * _0x10deb4[0x2] + _0xecf8e9 * _0x10deb4[0x6] + _0x11f114 * _0x10deb4[0xa] + _0x10deb4[0xe] / _0x514fb2;
        }
        static [_0x5659be(0x2e8)](_0x4bf61a, _0x18ee8a, _0x1c7741, _0x1fbadc, _0x118e52) {
            var _0x443802 = _0x5659be, _0xe5ce6e = _0x4bf61a[_0x18ee8a + 0x0], _0x1379ae = _0x4bf61a[_0x18ee8a + 0x1], _0x51bc06 = _0x4bf61a[_0x18ee8a + 0x2], _0x495e6e = _0x1c7741[_0x443802(0x1f6)];
            _0x1fbadc[_0x118e52] = _0xe5ce6e * _0x495e6e[0x0] + _0x1379ae * _0x495e6e[0x4] + _0x51bc06 * _0x495e6e[0x8], _0x1fbadc[_0x118e52 + 0x1] = _0xe5ce6e * _0x495e6e[0x1] + _0x1379ae * _0x495e6e[0x5] + _0x51bc06 * _0x495e6e[0x9], _0x1fbadc[_0x118e52 + 0x2] = _0xe5ce6e * _0x495e6e[0x2] + _0x1379ae * _0x495e6e[0x6] + _0x51bc06 * _0x495e6e[0xa];
        }
        static [_0x5659be(0x2e9)](_0x29221b, _0x37f990, _0x2e1a3c, _0x135254, _0x5215af) {
            _0x135254[_0x5215af + 0x0] = _0x29221b[_0x37f990 + 0x0] * _0x2e1a3c['x'] + _0x2e1a3c['z'], _0x135254[_0x5215af + 0x1] = 0x1 - ((0x1 - _0x29221b[_0x37f990 + 0x1]) * _0x2e1a3c['y'] + _0x2e1a3c['w']);
        }
        static [_0x5659be(0x2ea)](_0x58bb67) {
            var _0x4b3f13 = _0x5659be, _0xc19f4a = _0x58bb67['indexOf']('?');
            return _0xc19f4a >= 0x0 ? _0x58bb67[_0x4b3f13(0x2eb)](_0xc19f4a) : null;
        }
        static ['_createAffineTransformationArray'](_0x1f4465, _0x4daee4, _0x3ed150, _0x4196c7) {
            var _0x510991 = _0x4daee4['x'], _0x1e7d68 = _0x4daee4['y'], _0x55f8c8 = _0x4daee4['z'], _0x5bb18e = _0x4daee4['w'], _0x13a735 = _0x510991 + _0x510991, _0x550055 = _0x1e7d68 + _0x1e7d68, _0x298e74 = _0x55f8c8 + _0x55f8c8, _0x667943 = _0x510991 * _0x13a735, _0x3d1b6e = _0x510991 * _0x550055, _0x29975b = _0x510991 * _0x298e74, _0x155580 = _0x1e7d68 * _0x550055, _0x5759f5 = _0x1e7d68 * _0x298e74, _0xa37bf3 = _0x55f8c8 * _0x298e74, _0x9b78e9 = _0x5bb18e * _0x13a735, _0x466e91 = _0x5bb18e * _0x550055, _0x54c200 = _0x5bb18e * _0x298e74, _0x3b69fa = _0x3ed150['x'], _0x1869bb = _0x3ed150['y'], _0x5d1362 = _0x3ed150['z'];
            _0x4196c7[0x0] = (0x1 - (_0x155580 + _0xa37bf3)) * _0x3b69fa, _0x4196c7[0x1] = (_0x3d1b6e + _0x54c200) * _0x3b69fa, _0x4196c7[0x2] = (_0x29975b - _0x466e91) * _0x3b69fa, _0x4196c7[0x3] = 0x0, _0x4196c7[0x4] = (_0x3d1b6e - _0x54c200) * _0x1869bb, _0x4196c7[0x5] = (0x1 - (_0x667943 + _0xa37bf3)) * _0x1869bb, _0x4196c7[0x6] = (_0x5759f5 + _0x9b78e9) * _0x1869bb, _0x4196c7[0x7] = 0x0, _0x4196c7[0x8] = (_0x29975b + _0x466e91) * _0x5d1362, _0x4196c7[0x9] = (_0x5759f5 - _0x9b78e9) * _0x5d1362, _0x4196c7[0xa] = (0x1 - (_0x667943 + _0x155580)) * _0x5d1362, _0x4196c7[0xb] = 0x0, _0x4196c7[0xc] = _0x1f4465['x'], _0x4196c7[0xd] = _0x1f4465['y'], _0x4196c7[0xe] = _0x1f4465['z'], _0x4196c7[0xf] = 0x1;
        }
        static [_0x5659be(0x2ec)](_0x2fcc9e, _0x4de076, _0x588584, _0x12b1aa, _0x535a86) {
            var _0x25aac1 = _0x4de076, _0xf46286 = _0x2fcc9e, _0x3c0820 = _0x12b1aa, _0x211c30 = _0x25aac1[_0x588584], _0x3e55e8 = _0x25aac1[_0x588584 + 0x1], _0x3030c3 = _0x25aac1[_0x588584 + 0x2], _0x572c08 = _0x25aac1[_0x588584 + 0x3], _0x2b13e2 = _0x25aac1[_0x588584 + 0x4], _0x82dda0 = _0x25aac1[_0x588584 + 0x5], _0x19ad62 = _0x25aac1[_0x588584 + 0x6], _0x5bcf73 = _0x25aac1[_0x588584 + 0x7], _0x291f3b = _0x25aac1[_0x588584 + 0x8], _0x449f48 = _0x25aac1[_0x588584 + 0x9], _0x3b2941 = _0x25aac1[_0x588584 + 0xa], _0x289132 = _0x25aac1[_0x588584 + 0xb], _0xb75839 = _0x25aac1[_0x588584 + 0xc], _0x142310 = _0x25aac1[_0x588584 + 0xd], _0x41edda = _0x25aac1[_0x588584 + 0xe], _0x2486a5 = _0x25aac1[_0x588584 + 0xf], _0x3828f8 = _0xf46286[0x0], _0x29fbfd = _0xf46286[0x1], _0x10b701 = _0xf46286[0x2], _0x78723b = _0xf46286[0x3], _0x2b3c30 = _0xf46286[0x4], _0x164518 = _0xf46286[0x5], _0x220905 = _0xf46286[0x6], _0x41a67c = _0xf46286[0x7], _0x353ff1 = _0xf46286[0x8], _0x5274d1 = _0xf46286[0x9], _0x481362 = _0xf46286[0xa], _0x116cf4 = _0xf46286[0xb], _0x4f8290 = _0xf46286[0xc], _0x541fe5 = _0xf46286[0xd], _0x41e45a = _0xf46286[0xe], _0x167cf9 = _0xf46286[0xf];
            _0x3c0820[_0x535a86] = _0x211c30 * _0x3828f8 + _0x3e55e8 * _0x2b3c30 + _0x3030c3 * _0x353ff1 + _0x572c08 * _0x4f8290, _0x3c0820[_0x535a86 + 0x1] = _0x211c30 * _0x29fbfd + _0x3e55e8 * _0x164518 + _0x3030c3 * _0x5274d1 + _0x572c08 * _0x541fe5, _0x3c0820[_0x535a86 + 0x2] = _0x211c30 * _0x10b701 + _0x3e55e8 * _0x220905 + _0x3030c3 * _0x481362 + _0x572c08 * _0x41e45a, _0x3c0820[_0x535a86 + 0x3] = _0x211c30 * _0x78723b + _0x3e55e8 * _0x41a67c + _0x3030c3 * _0x116cf4 + _0x572c08 * _0x167cf9, _0x3c0820[_0x535a86 + 0x4] = _0x2b13e2 * _0x3828f8 + _0x82dda0 * _0x2b3c30 + _0x19ad62 * _0x353ff1 + _0x5bcf73 * _0x4f8290, _0x3c0820[_0x535a86 + 0x5] = _0x2b13e2 * _0x29fbfd + _0x82dda0 * _0x164518 + _0x19ad62 * _0x5274d1 + _0x5bcf73 * _0x541fe5, _0x3c0820[_0x535a86 + 0x6] = _0x2b13e2 * _0x10b701 + _0x82dda0 * _0x220905 + _0x19ad62 * _0x481362 + _0x5bcf73 * _0x41e45a, _0x3c0820[_0x535a86 + 0x7] = _0x2b13e2 * _0x78723b + _0x82dda0 * _0x41a67c + _0x19ad62 * _0x116cf4 + _0x5bcf73 * _0x167cf9, _0x3c0820[_0x535a86 + 0x8] = _0x291f3b * _0x3828f8 + _0x449f48 * _0x2b3c30 + _0x3b2941 * _0x353ff1 + _0x289132 * _0x4f8290, _0x3c0820[_0x535a86 + 0x9] = _0x291f3b * _0x29fbfd + _0x449f48 * _0x164518 + _0x3b2941 * _0x5274d1 + _0x289132 * _0x541fe5, _0x3c0820[_0x535a86 + 0xa] = _0x291f3b * _0x10b701 + _0x449f48 * _0x220905 + _0x3b2941 * _0x481362 + _0x289132 * _0x41e45a, _0x3c0820[_0x535a86 + 0xb] = _0x291f3b * _0x78723b + _0x449f48 * _0x41a67c + _0x3b2941 * _0x116cf4 + _0x289132 * _0x167cf9, _0x3c0820[_0x535a86 + 0xc] = _0xb75839 * _0x3828f8 + _0x142310 * _0x2b3c30 + _0x41edda * _0x353ff1 + _0x2486a5 * _0x4f8290, _0x3c0820[_0x535a86 + 0xd] = _0xb75839 * _0x29fbfd + _0x142310 * _0x164518 + _0x41edda * _0x5274d1 + _0x2486a5 * _0x541fe5, _0x3c0820[_0x535a86 + 0xe] = _0xb75839 * _0x10b701 + _0x142310 * _0x220905 + _0x41edda * _0x481362 + _0x2486a5 * _0x41e45a, _0x3c0820[_0x535a86 + 0xf] = _0xb75839 * _0x78723b + _0x142310 * _0x41a67c + _0x41edda * _0x116cf4 + _0x2486a5 * _0x167cf9;
        }
        static [_0x5659be(0x27b)](_0x2bfeda, _0x59cad0) {
            var _0x1dc76a = _0x5659be;
            if (_0x2bfeda == 0x0) {
                if (_0x59cad0 == 0x1)
                    return Math['PI'] / 0x2;
                return -Math['PI'] / 0x2;
            }
            if (_0x2bfeda > 0x0)
                return Math[_0x1dc76a(0x27c)](_0x59cad0 / _0x2bfeda);
            if (_0x2bfeda < 0x0) {
                if (_0x59cad0 > 0x0)
                    return Math['atan'](_0x59cad0 / _0x2bfeda) + Math['PI'];
                return Math['atan'](_0x59cad0 / _0x2bfeda) - Math['PI'];
            }
            return 0x0;
        }
        static ['angleTo'](_0x15cf02, _0x20ce08, _0x238e4f) {
            var _0x29ad05 = _0x5659be;
            _0x3f70c5[_0x29ad05(0x210)](_0x20ce08, _0x15cf02, _0x22f58f['TEMPVector30']), _0x3f70c5[_0x29ad05(0x1f2)](_0x22f58f[_0x29ad05(0x27e)], _0x22f58f['TEMPVector30']), _0x238e4f['x'] = Math[_0x29ad05(0x27f)](_0x22f58f[_0x29ad05(0x27e)]['y']), _0x238e4f['y'] = _0x108d81[_0x29ad05(0x27b)](-_0x22f58f['TEMPVector30']['z'], -_0x22f58f[_0x29ad05(0x27e)]['x']);
        }
        static [_0x5659be(0x209)](_0x18130c, _0x41a913, _0x185735) {
            var _0x4211bd = _0x41a913, _0x4b5de9 = _0x18130c['x'], _0x52e3c3 = _0x18130c['y'], _0x43995a = _0x18130c['z'], _0x1509c2 = _0x4211bd[0x0], _0x5bd3de = _0x4211bd[0x1], _0x12d389 = _0x4211bd[0x2], _0xb5df73 = _0x4211bd[0x3], _0x25daa2 = _0xb5df73 * _0x4b5de9 + _0x5bd3de * _0x43995a - _0x12d389 * _0x52e3c3, _0x248f01 = _0xb5df73 * _0x52e3c3 + _0x12d389 * _0x4b5de9 - _0x1509c2 * _0x43995a, _0x1450d1 = _0xb5df73 * _0x43995a + _0x1509c2 * _0x52e3c3 - _0x5bd3de * _0x4b5de9, _0x11943e = -_0x1509c2 * _0x4b5de9 - _0x5bd3de * _0x52e3c3 - _0x12d389 * _0x43995a;
            _0x185735['x'] = _0x25daa2 * _0xb5df73 + _0x11943e * -_0x1509c2 + _0x248f01 * -_0x12d389 - _0x1450d1 * -_0x5bd3de, _0x185735['y'] = _0x248f01 * _0xb5df73 + _0x11943e * -_0x5bd3de + _0x1450d1 * -_0x1509c2 - _0x25daa2 * -_0x12d389, _0x185735['z'] = _0x1450d1 * _0xb5df73 + _0x11943e * -_0x12d389 + _0x25daa2 * -_0x5bd3de - _0x248f01 * -_0x1509c2;
        }
        static ['quaternionWeight'](_0x12eec4, _0x959a61, _0x37b680) {
            _0x37b680['x'] = _0x12eec4['x'] * _0x959a61, _0x37b680['y'] = _0x12eec4['y'] * _0x959a61, _0x37b680['z'] = _0x12eec4['z'] * _0x959a61, _0x37b680['w'] = _0x12eec4['w'];
        }
        static [_0x5659be(0x2ed)](_0x112dc6, _0x5ab469) {
            _0x5ab469['x'] = -_0x112dc6['x'], _0x5ab469['y'] = -_0x112dc6['y'], _0x5ab469['z'] = -_0x112dc6['z'], _0x5ab469['w'] = _0x112dc6['w'];
        }
        static [_0x5659be(0x2ee)](_0x2dcf99, _0x2c40de, _0xa453d9) {
            var _0xab843b = _0x5659be, _0x2aa8a2 = _0x2dcf99['x'], _0x93a472 = _0x2dcf99['y'], _0x5f117c = _0x2dcf99['z'];
            _0xa453d9['x'] = _0x2aa8a2 > 0x0 ? Math['pow'](Math[_0xab843b(0x1e7)](_0x2aa8a2), _0x2c40de) : -Math[_0xab843b(0x2ef)](Math[_0xab843b(0x1e7)](_0x2aa8a2), _0x2c40de), _0xa453d9['y'] = _0x93a472 > 0x0 ? Math[_0xab843b(0x2ef)](Math[_0xab843b(0x1e7)](_0x93a472), _0x2c40de) : -Math[_0xab843b(0x2ef)](Math[_0xab843b(0x1e7)](_0x93a472), _0x2c40de), _0xa453d9['z'] = _0x5f117c > 0x0 ? Math[_0xab843b(0x2ef)](Math[_0xab843b(0x1e7)](_0x5f117c), _0x2c40de) : -Math[_0xab843b(0x2ef)](Math['abs'](_0x5f117c), _0x2c40de);
        }
        static ['scaleBlend'](_0x2eba44, _0x52cf47, _0x38e708, _0x5dc2a5) {
            var _0x47e0e2 = _0x5659be, _0x24df39 = _0x108d81[_0x47e0e2(0x2f0)], _0x332a39 = _0x108d81[_0x47e0e2(0x2f1)];
            _0x108d81[_0x47e0e2(0x2ee)](_0x2eba44, 0x1 - _0x38e708, _0x24df39), _0x108d81['scaleWeight'](_0x52cf47, _0x38e708, _0x332a39);
            var _0x5c629e = _0x38e708 > 0.5 ? _0x52cf47 : _0x2eba44;
            _0x5dc2a5['x'] = _0x5c629e['x'] > 0x0 ? Math[_0x47e0e2(0x1e7)](_0x24df39['x'] * _0x332a39['x']) : -Math[_0x47e0e2(0x1e7)](_0x24df39['x'] * _0x332a39['x']), _0x5dc2a5['y'] = _0x5c629e['y'] > 0x0 ? Math[_0x47e0e2(0x1e7)](_0x24df39['y'] * _0x332a39['y']) : -Math[_0x47e0e2(0x1e7)](_0x24df39['y'] * _0x332a39['y']), _0x5dc2a5['z'] = _0x5c629e['z'] > 0x0 ? Math['abs'](_0x24df39['z'] * _0x332a39['z']) : -Math[_0x47e0e2(0x1e7)](_0x24df39['z'] * _0x332a39['z']);
        }
        static [_0x5659be(0x2f2)](_0x591b74, _0x27adb9, _0xc86445) {
            var _0x3ebc0d, _0x32aa6e, _0x16f519, _0x534d47, _0x1cb3d4;
            if (_0xc86445 === _0x27adb9) {
                _0x27adb9 = new Float32Array(0x10);
                for (_0x3ebc0d = 0x0; _0x3ebc0d < 0x10; ++_0x3ebc0d) {
                    _0x27adb9[_0x3ebc0d] = _0xc86445[_0x3ebc0d];
                }
            }
            var _0x544fdd = _0x27adb9[0x0], _0x40351f = _0x27adb9[0x1], _0x554e7b = _0x27adb9[0x2], _0x2d316b = _0x27adb9[0x3], _0x164b01 = _0x27adb9[0x4], _0x5697c3 = _0x27adb9[0x5], _0x5b334d = _0x27adb9[0x6], _0x37ea53 = _0x27adb9[0x7], _0x347621 = _0x27adb9[0x8], _0x4021ed = _0x27adb9[0x9], _0x21252a = _0x27adb9[0xa], _0x42fbbe = _0x27adb9[0xb], _0xac6450 = _0x27adb9[0xc], _0x2f39c2 = _0x27adb9[0xd], _0x5cd8ea = _0x27adb9[0xe], _0xc1b100 = _0x27adb9[0xf];
            for (_0x3ebc0d = 0x0; _0x3ebc0d < 0x4; _0x3ebc0d++) {
                _0x32aa6e = _0x591b74[_0x3ebc0d], _0x16f519 = _0x591b74[_0x3ebc0d + 0x4], _0x534d47 = _0x591b74[_0x3ebc0d + 0x8], _0x1cb3d4 = _0x591b74[_0x3ebc0d + 0xc], _0xc86445[_0x3ebc0d] = _0x32aa6e * _0x544fdd + _0x16f519 * _0x40351f + _0x534d47 * _0x554e7b + _0x1cb3d4 * _0x2d316b, _0xc86445[_0x3ebc0d + 0x4] = _0x32aa6e * _0x164b01 + _0x16f519 * _0x5697c3 + _0x534d47 * _0x5b334d + _0x1cb3d4 * _0x37ea53, _0xc86445[_0x3ebc0d + 0x8] = _0x32aa6e * _0x347621 + _0x16f519 * _0x4021ed + _0x534d47 * _0x21252a + _0x1cb3d4 * _0x42fbbe, _0xc86445[_0x3ebc0d + 0xc] = _0x32aa6e * _0xac6450 + _0x16f519 * _0x2f39c2 + _0x534d47 * _0x5cd8ea + _0x1cb3d4 * _0xc1b100;
            }
        }
        static ['matrix4x4MultiplyFFFForNative'](_0x43fcd0, _0x3db53d, _0x272a74) {
            var _0x2258be = _0x5659be;
            _0x218b83[_0x2258be(0x2f3)][_0x2258be(0x2f4)][_0x2258be(0x2f5)](_0x43fcd0, _0x3db53d, _0x272a74);
        }
        static [_0x5659be(0x2f6)](_0x25c6a2, _0x21546d, _0x2ebe58) {
            var _0xe36245 = _0x5659be;
            _0x108d81['matrix4x4MultiplyFFF'](_0x25c6a2[_0xe36245(0x1f6)], _0x21546d, _0x2ebe58[_0xe36245(0x1f6)]);
        }
        static ['_buildTexture2D'](_0x45c625, _0x456e31, _0xe8bea6, _0x425196, _0x3844bb = ![]) {
            var _0x57f09f = _0x5659be, _0x512b3d = new _0x218b83[(_0x57f09f(0x2cd))](_0x45c625, _0x456e31, _0xe8bea6, _0x3844bb, !![]);
            return _0x512b3d[_0x57f09f(0x2d3)] = 0x1, _0x512b3d[_0x57f09f(0x2ce)] = _0x218b83[_0x57f09f(0x2f7)][_0x57f09f(0x2cf)], _0x169c34[_0x57f09f(0x2c4)](_0x512b3d, _0x45c625, _0x456e31, _0x425196), _0x512b3d;
        }
        static [_0x5659be(0x2f8)](_0x10abc8, _0xa3603f, _0x4a0617) {
            var _0x1ddf6a = _0x5659be;
            if (_0x10abc8[_0x1ddf6a(0x2f9)] + 0xc > _0x10abc8[_0x1ddf6a(0x2fa)])
                _0x10abc8[_0x1ddf6a(0x2fa)] += 0xc;
            var _0x2151ea = _0x108d81['_tempVector3_0'], _0x51cbf0 = _0x108d81['_tempVector3_1'], _0x2ca591 = _0xa3603f[_0x1ddf6a(0x204)], _0xe1280d = _0xa3603f['max'];
            _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0x2ca591['y'], _0x2ca591['z']), _0x51cbf0['setValue'](_0xe1280d['x'], _0x2ca591['y'], _0x2ca591['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0x2ca591['y'], _0x2ca591['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0x2ca591['y'], _0xe1280d['z']), _0x10abc8['addLine'](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0x2ca591['y'], _0x2ca591['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0x2ca591['y'], _0xe1280d['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0x2ca591['y'], _0xe1280d['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0x2ca591['y'], _0xe1280d['z']), _0x10abc8['addLine'](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0x2ca591['y'], _0x2ca591['z']), _0x51cbf0['setValue'](_0x2ca591['x'], _0xe1280d['y'], _0x2ca591['z']), _0x10abc8['addLine'](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0x2ca591['y'], _0xe1280d['z']), _0x51cbf0['setValue'](_0x2ca591['x'], _0xe1280d['y'], _0xe1280d['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0x2ca591['y'], _0x2ca591['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0xe1280d['y'], _0x2ca591['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0x2ca591['y'], _0xe1280d['z']), _0x51cbf0['setValue'](_0xe1280d['x'], _0xe1280d['y'], _0xe1280d['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0xe1280d['y'], _0x2ca591['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0xe1280d['y'], _0x2ca591['z']), _0x10abc8['addLine'](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0xe1280d['y'], _0x2ca591['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0xe1280d['y'], _0xe1280d['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea['setValue'](_0xe1280d['x'], _0xe1280d['y'], _0x2ca591['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0xe1280d['y'], _0xe1280d['z']), _0x10abc8[_0x1ddf6a(0x2fb)](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617), _0x2151ea[_0x1ddf6a(0x1fa)](_0x2ca591['x'], _0xe1280d['y'], _0xe1280d['z']), _0x51cbf0[_0x1ddf6a(0x1fa)](_0xe1280d['x'], _0xe1280d['y'], _0xe1280d['z']), _0x10abc8['addLine'](_0x2151ea, _0x51cbf0, _0x4a0617, _0x4a0617);
        }
        static [_0x5659be(0x2fc)](_0x1947dc, _0x58b30c, _0x129058) {
            var _0x113f74 = _0x5659be;
            _0x129058['length'] = 0x0;
            var _0x5b24d4 = _0x58b30c;
            while (_0x5b24d4 !== _0x1947dc) {
                var _0x5c7989 = _0x5b24d4[_0x113f74(0x2fd)];
                if (_0x5c7989)
                    _0x129058['push'](_0x5c7989['getChildIndex'](_0x5b24d4));
                else
                    return null;
                _0x5b24d4 = _0x5c7989;
            }
            return _0x129058;
        }
        static ['_getNodeByHierarchyPath'](_0x1d080a, _0x4ca248) {
            var _0x1687e7 = _0x5659be, _0x2b18ff = _0x1d080a;
            for (var _0x4daf04 = _0x4ca248[_0x1687e7(0x1ff)] - 0x1; _0x4daf04 >= 0x0; _0x4daf04--) {
                _0x2b18ff = _0x2b18ff[_0x1687e7(0x2fe)](_0x4ca248[_0x4daf04]);
            }
            return _0x2b18ff;
        }
        static [_0x5659be(0x2ff)](_0x4a9f28) {
            var _0x15596a = _0x5659be;
            let _0x4754f9, _0x50cbda = _0x4a9f28[_0x15596a(0x300)], _0x3d156e = _0x4a9f28[_0x15596a(0x301)];
            switch (_0x4a9f28[_0x15596a(0x2c5)]) {
            case _0x218b83[_0x15596a(0x302)][_0x15596a(0x2c7)]:
                _0x4754f9 = new Uint8Array(_0x50cbda * _0x3d156e * 0x4);
                break;
            case _0x218b83[_0x15596a(0x302)]['R8G8B8A8']:
                _0x4754f9 = new Uint8Array(_0x50cbda * _0x3d156e * 0x4);
                break;
            case _0x218b83['RenderTextureFormat'][_0x15596a(0x303)]:
                _0x4754f9 = new Float32Array(_0x50cbda * _0x3d156e * 0x4);
                break;
            default:
                throw _0x15596a(0x304) + _0x4a9f28['format'][_0x15596a(0x305)]() + _0x15596a(0x306);
            }
            _0x4a9f28[_0x15596a(0x307)](0x0, 0x0, _0x4a9f28[_0x15596a(0x300)], _0x4a9f28[_0x15596a(0x301)], _0x4754f9);
            switch (_0x4a9f28[_0x15596a(0x2c5)]) {
            case _0x218b83[_0x15596a(0x302)]['R16G16B16A16']:
                let _0x495938 = _0x4754f9, _0x2d1169 = new Uint8Array(_0x50cbda * _0x3d156e * 0x4);
                for (let _0x2e980d = 0x0, _0x5382d7 = _0x495938[_0x15596a(0x1ff)]; _0x2e980d < _0x5382d7; _0x2e980d++) {
                    _0x2d1169[_0x2e980d] = Math[_0x15596a(0x204)](Math['floor'](_0x495938[_0x2e980d] * 0xff), 0xff);
                }
                _0x4754f9 = _0x2d1169;
                break;
            }
            let _0xdcc3ae = _0x4754f9;
            var _0x4f5118;
            if (_0x218b83[_0x15596a(0x308)][_0x15596a(0x309)]);
            else {
                var _0x19158d = new _0x218b83[(_0x15596a(0x30a))](!![]);
                _0x19158d[_0x15596a(0x30b)] = !![], _0x19158d[_0x15596a(0x2b8)](_0x50cbda, _0x3d156e);
                var _0x5277a5 = _0x19158d['getContext']('2d'), _0x4b723c = _0x5277a5[_0x15596a(0x30c)](_0x50cbda, _0x3d156e);
                _0x4b723c[_0x15596a(0x30d)]['set'](new Uint8ClampedArray(_0xdcc3ae)), _0x5277a5[_0x15596a(0x30e)](_0x4b723c, 0x0, 0x0), _0x4f5118 = _0x19158d[_0x15596a(0x30f)][_0x15596a(0x310)](), _0x19158d[_0x15596a(0x311)]();
            }
            return _0x4f5118;
        }
    }
    _0x108d81[_0x5659be(0x2f0)] = new _0x3f70c5(), _0x108d81[_0x5659be(0x2f1)] = new _0x3f70c5(), _0x108d81[_0x5659be(0x312)] = new Float32Array(0x10), _0x108d81[_0x5659be(0x2da)] = new Float32Array(0x10), _0x108d81[_0x5659be(0x2db)] = new Float32Array(0x10), _0x108d81[_0x5659be(0x313)] = new Float32Array(0x10), _0x108d81[_0x5659be(0x314)] = new Object();
    class _0x39ae6a extends _0x218b83[_0x5659be(0x315)] {
        constructor() {
            var _0x191bf7 = _0x5659be;
            super(), this[_0x191bf7(0x316)] = 0x0, this[_0x191bf7(0x2a8)] = 0x0, this[_0x191bf7(0x2aa)] = new _0x4f46e6(), this[_0x191bf7(0x2a6)] = ![], this[_0x191bf7(0x317)] = [];
        }
        static [_0x5659be(0x318)](_0x21fd7b) {
            var _0x65a90a = _0x5659be, _0x47c166 = new _0x39ae6a(), _0x3a9321 = new _0x218b83[(_0x65a90a(0x319))](_0x21fd7b), _0x47cb92 = _0x3a9321[_0x65a90a(0x29c)]();
            switch (_0x47cb92) {
            case _0x65a90a(0x31a):
                _0x1d4d9f[_0x65a90a(0x29d)](_0x47c166, _0x3a9321);
                break;
            case _0x65a90a(0x2bd):
            case _0x65a90a(0x2be):
                _0x3cab70['parse'](_0x47c166, _0x3a9321, _0x47cb92);
                break;
            default:
                throw _0x65a90a(0x31b);
            }
            return _0x47c166;
        }
        static [_0x5659be(0x31c)](_0x316127, _0x21ec96) {
            var _0x1502d5 = _0x5659be;
            _0x218b83[_0x1502d5(0x31d)]['loader'][_0x1502d5(0x31e)](_0x316127, _0x21ec96, null, _0x39ae6a[_0x1502d5(0x31f)]);
        }
        [_0x5659be(0x320)]() {
            var _0x730074 = _0x5659be;
            return this[_0x730074(0x316)];
        }
        ['_hermiteInterpolate'](_0x4a47f0, _0x33c497, _0x19a435, _0x7939f2) {
            var _0x488a5f = _0x5659be, _0x26ec06 = _0x4a47f0[_0x488a5f(0x26a)], _0x1ee1b9 = _0x33c497['inTangent'];
            if (Number[_0x488a5f(0x321)](_0x26ec06) && Number[_0x488a5f(0x321)](_0x1ee1b9)) {
                var _0x3c07d8 = _0x19a435 * _0x19a435, _0x5f53f0 = _0x3c07d8 * _0x19a435, _0x4b41a8 = 0x2 * _0x5f53f0 - 0x3 * _0x3c07d8 + 0x1, _0x5f368b = _0x5f53f0 - 0x2 * _0x3c07d8 + _0x19a435, _0xde9b65 = _0x5f53f0 - _0x3c07d8, _0x59528a = -0x2 * _0x5f53f0 + 0x3 * _0x3c07d8;
                return _0x4b41a8 * _0x4a47f0['value'] + _0x5f368b * _0x26ec06 * _0x7939f2 + _0xde9b65 * _0x1ee1b9 * _0x7939f2 + _0x59528a * _0x33c497[_0x488a5f(0x26b)];
            } else
                return _0x4a47f0[_0x488a5f(0x26b)];
        }
        ['_hermiteInterpolateVector3'](_0x33d3e0, _0xd84bf0, _0x548907, _0x4a8ae5, _0x4802ab) {
            var _0xb98aeb = _0x5659be, _0x320dfb = _0x33d3e0[_0xb98aeb(0x26b)], _0x17cc69 = _0x33d3e0['outTangent'], _0x511dbc = _0xd84bf0['value'], _0x4c75b0 = _0xd84bf0[_0xb98aeb(0x269)], _0x581f6f = _0x548907 * _0x548907, _0x39c87b = _0x581f6f * _0x548907, _0xdf2fd = 0x2 * _0x39c87b - 0x3 * _0x581f6f + 0x1, _0x4ff345 = _0x39c87b - 0x2 * _0x581f6f + _0x548907, _0x649a2a = _0x39c87b - _0x581f6f, _0x83d836 = -0x2 * _0x39c87b + 0x3 * _0x581f6f, _0x4ebfac = _0x17cc69['x'], _0x59c82e = _0x4c75b0['x'];
            if (Number[_0xb98aeb(0x321)](_0x4ebfac) && Number['isFinite'](_0x59c82e))
                _0x4802ab['x'] = _0xdf2fd * _0x320dfb['x'] + _0x4ff345 * _0x4ebfac * _0x4a8ae5 + _0x649a2a * _0x59c82e * _0x4a8ae5 + _0x83d836 * _0x511dbc['x'];
            else
                _0x4802ab['x'] = _0x320dfb['x'];
            _0x4ebfac = _0x17cc69['y'], _0x59c82e = _0x4c75b0['y'];
            if (Number[_0xb98aeb(0x321)](_0x4ebfac) && Number[_0xb98aeb(0x321)](_0x59c82e))
                _0x4802ab['y'] = _0xdf2fd * _0x320dfb['y'] + _0x4ff345 * _0x4ebfac * _0x4a8ae5 + _0x649a2a * _0x59c82e * _0x4a8ae5 + _0x83d836 * _0x511dbc['y'];
            else
                _0x4802ab['y'] = _0x320dfb['y'];
            _0x4ebfac = _0x17cc69['z'], _0x59c82e = _0x4c75b0['z'];
            if (Number['isFinite'](_0x4ebfac) && Number[_0xb98aeb(0x321)](_0x59c82e))
                _0x4802ab['z'] = _0xdf2fd * _0x320dfb['z'] + _0x4ff345 * _0x4ebfac * _0x4a8ae5 + _0x649a2a * _0x59c82e * _0x4a8ae5 + _0x83d836 * _0x511dbc['z'];
            else
                _0x4802ab['z'] = _0x320dfb['z'];
        }
        [_0x5659be(0x322)](_0x5aace0, _0x4cf940, _0x5f0946, _0x385554, _0x6c1aa5) {
            var _0x2d6a18 = _0x5659be, _0x512cd6 = _0x5aace0[_0x2d6a18(0x26b)], _0x574bec = _0x5aace0[_0x2d6a18(0x26a)], _0x16fe64 = _0x4cf940['value'], _0x90685 = _0x4cf940[_0x2d6a18(0x269)], _0x589cee = _0x5f0946 * _0x5f0946, _0x14d757 = _0x589cee * _0x5f0946, _0x1e1355 = 0x2 * _0x14d757 - 0x3 * _0x589cee + 0x1, _0x437d88 = _0x14d757 - 0x2 * _0x589cee + _0x5f0946, _0x17ae9e = _0x14d757 - _0x589cee, _0xbdc754 = -0x2 * _0x14d757 + 0x3 * _0x589cee, _0x3febb2 = _0x574bec['x'], _0x3707fc = _0x90685['x'];
            if (Number['isFinite'](_0x3febb2) && Number[_0x2d6a18(0x321)](_0x3707fc))
                _0x6c1aa5['x'] = _0x1e1355 * _0x512cd6['x'] + _0x437d88 * _0x3febb2 * _0x385554 + _0x17ae9e * _0x3707fc * _0x385554 + _0xbdc754 * _0x16fe64['x'];
            else
                _0x6c1aa5['x'] = _0x512cd6['x'];
            _0x3febb2 = _0x574bec['y'], _0x3707fc = _0x90685['y'];
            if (Number['isFinite'](_0x3febb2) && Number[_0x2d6a18(0x321)](_0x3707fc))
                _0x6c1aa5['y'] = _0x1e1355 * _0x512cd6['y'] + _0x437d88 * _0x3febb2 * _0x385554 + _0x17ae9e * _0x3707fc * _0x385554 + _0xbdc754 * _0x16fe64['y'];
            else
                _0x6c1aa5['y'] = _0x512cd6['y'];
            _0x3febb2 = _0x574bec['z'], _0x3707fc = _0x90685['z'];
            if (Number['isFinite'](_0x3febb2) && Number[_0x2d6a18(0x321)](_0x3707fc))
                _0x6c1aa5['z'] = _0x1e1355 * _0x512cd6['z'] + _0x437d88 * _0x3febb2 * _0x385554 + _0x17ae9e * _0x3707fc * _0x385554 + _0xbdc754 * _0x16fe64['z'];
            else
                _0x6c1aa5['z'] = _0x512cd6['z'];
            _0x3febb2 = _0x574bec['w'], _0x3707fc = _0x90685['w'];
            if (Number['isFinite'](_0x3febb2) && Number[_0x2d6a18(0x321)](_0x3707fc))
                _0x6c1aa5['w'] = _0x1e1355 * _0x512cd6['w'] + _0x437d88 * _0x3febb2 * _0x385554 + _0x17ae9e * _0x3707fc * _0x385554 + _0xbdc754 * _0x16fe64['w'];
            else
                _0x6c1aa5['w'] = _0x512cd6['w'];
        }
        [_0x5659be(0x323)](_0x1a7851, _0x34ba67, _0x2a5c6d, _0x5cefc8, _0x9951df, _0xf86361, _0x41318c) {
            var _0x2766a9 = _0x5659be;
            for (var _0x3be3b3 = 0x0, _0x3f0cb5 = _0x1a7851[_0x2766a9(0x2a1)]; _0x3be3b3 < _0x3f0cb5; _0x3be3b3++) {
                var _0x2ab1be = _0x1a7851[_0x2766a9(0x2c2)](_0x3be3b3), _0x12110b = _0x2ab1be[_0x2766a9(0x2ae)], _0x39db7a, _0x2558a0 = _0x2ab1be['_keyFrames'], _0x2cef39 = _0x2558a0[_0x2766a9(0x1ff)], _0x35a9d2 = _0x2a5c6d[_0x3be3b3];
                if (_0x41318c && !_0x41318c['getTransformActive'](_0x2ab1be['nodePath']))
                    continue;
                if (_0x9951df) {
                    _0x35a9d2 !== -0x1 && _0x34ba67 < _0x2558a0[_0x35a9d2][_0x2766a9(0x268)] && (_0x35a9d2 = -0x1, _0x2a5c6d[_0x3be3b3] = _0x35a9d2);
                    _0x39db7a = _0x35a9d2 + 0x1;
                    while (_0x39db7a < _0x2cef39) {
                        if (_0x2558a0[_0x39db7a][_0x2766a9(0x268)] > _0x34ba67)
                            break;
                        _0x35a9d2++, _0x39db7a++, _0x2a5c6d[_0x3be3b3] = _0x35a9d2;
                    }
                } else {
                    _0x39db7a = _0x35a9d2 + 0x1;
                    _0x39db7a !== _0x2cef39 && _0x34ba67 > _0x2558a0[_0x39db7a][_0x2766a9(0x268)] && (_0x35a9d2 = _0x2cef39 - 0x1, _0x2a5c6d[_0x3be3b3] = _0x35a9d2);
                    _0x39db7a = _0x35a9d2 + 0x1;
                    while (_0x35a9d2 > -0x1) {
                        if (_0x2558a0[_0x35a9d2][_0x2766a9(0x268)] < _0x34ba67)
                            break;
                        _0x35a9d2--, _0x39db7a--, _0x2a5c6d[_0x3be3b3] = _0x35a9d2;
                    }
                }
                var _0x19f105 = _0x39db7a === _0x2cef39;
                switch (_0x12110b) {
                case 0x0:
                    if (_0x35a9d2 !== -0x1) {
                        var _0x96980f = _0x2558a0[_0x35a9d2];
                        if (_0x19f105)
                            _0xf86361[_0x3be3b3] = _0x96980f[_0x2766a9(0x26b)];
                        else {
                            var _0x394907 = _0x2558a0[_0x39db7a], _0x54df2f = _0x394907[_0x2766a9(0x268)] - _0x96980f['time'], _0x4eab40;
                            if (_0x54df2f !== 0x0)
                                _0x4eab40 = (_0x34ba67 - _0x96980f[_0x2766a9(0x268)]) / _0x54df2f;
                            else
                                _0x4eab40 = 0x0;
                            _0xf86361[_0x3be3b3] = this[_0x2766a9(0x324)](_0x96980f, _0x394907, _0x4eab40, _0x54df2f);
                        }
                    } else
                        _0xf86361[_0x3be3b3] = _0x2558a0[0x0][_0x2766a9(0x26b)];
                    if (_0x5cefc8)
                        _0xf86361[_0x3be3b3] = _0xf86361[_0x3be3b3] - _0x2558a0[0x0][_0x2766a9(0x26b)];
                    break;
                case 0x1:
                case 0x4:
                    var _0x4b6122 = _0xf86361[_0x3be3b3];
                    this[_0x2766a9(0x325)](_0x2558a0, _0x35a9d2, _0x19f105, _0x34ba67, _0x4b6122);
                    if (_0x5cefc8) {
                        var _0x2fd7f2 = _0x2558a0[0x0]['value'];
                        _0x4b6122['x'] -= _0x2fd7f2['x'], _0x4b6122['y'] -= _0x2fd7f2['y'], _0x4b6122['z'] -= _0x2fd7f2['z'];
                    }
                    break;
                case 0x2:
                    var _0x532d34 = _0xf86361[_0x3be3b3];
                    this[_0x2766a9(0x326)](_0x2558a0, _0x35a9d2, _0x19f105, _0x34ba67, _0x532d34);
                    if (_0x5cefc8) {
                        var _0x5dec24 = _0x39ae6a[_0x2766a9(0x327)], _0x178efd = _0x2558a0[0x0][_0x2766a9(0x26b)];
                        _0x108d81[_0x2766a9(0x2ed)](_0x178efd, _0x5dec24), _0x22f58f[_0x2766a9(0x202)](_0x5dec24, _0x532d34, _0x532d34);
                    }
                    break;
                case 0x3:
                    _0x4b6122 = _0xf86361[_0x3be3b3], this['_evaluateFrameNodeVector3DatasRealTime'](_0x2558a0, _0x35a9d2, _0x19f105, _0x34ba67, _0x4b6122);
                    _0x5cefc8 && (_0x2fd7f2 = _0x2558a0[0x0]['value'], _0x4b6122['x'] /= _0x2fd7f2['x'], _0x4b6122['y'] /= _0x2fd7f2['y'], _0x4b6122['z'] /= _0x2fd7f2['z']);
                    break;
                default:
                    throw _0x2766a9(0x328);
                }
            }
        }
        [_0x5659be(0x329)](_0x38bd68, _0x25c8b7, _0x410008, _0x2b3422) {
            var _0x3d6c2c = _0x5659be;
            _0x218b83[_0x3d6c2c(0x2f3)]['instance']['evaluateClipDatasRealTime'](_0x38bd68['_nativeObj'], _0x25c8b7, _0x410008, _0x2b3422);
        }
        [_0x5659be(0x325)](_0x459824, _0xf88bd1, _0x1c28cc, _0x55caf6, _0x5b3902) {
            var _0x1ee690 = _0x5659be;
            if (_0xf88bd1 !== -0x1) {
                var _0x3caa4a = _0x459824[_0xf88bd1];
                if (_0x1c28cc) {
                    var _0x34ea60 = _0x3caa4a[_0x1ee690(0x26b)];
                    _0x5b3902['x'] = _0x34ea60['x'], _0x5b3902['y'] = _0x34ea60['y'], _0x5b3902['z'] = _0x34ea60['z'];
                } else {
                    var _0xc0df34 = _0x459824[_0xf88bd1 + 0x1], _0x376300, _0x45309a = _0x3caa4a[_0x1ee690(0x268)], _0x5cae2c = _0xc0df34[_0x1ee690(0x268)] - _0x45309a;
                    if (_0x5cae2c !== 0x0)
                        _0x376300 = (_0x55caf6 - _0x45309a) / _0x5cae2c;
                    else
                        _0x376300 = 0x0;
                    this[_0x1ee690(0x32a)](_0x3caa4a, _0xc0df34, _0x376300, _0x5cae2c, _0x5b3902);
                }
            } else {
                var _0x24c066 = _0x459824[0x0][_0x1ee690(0x26b)];
                _0x5b3902['x'] = _0x24c066['x'], _0x5b3902['y'] = _0x24c066['y'], _0x5b3902['z'] = _0x24c066['z'];
            }
        }
        [_0x5659be(0x326)](_0x4894a5, _0x491582, _0x16d949, _0x54d203, _0xaa438a) {
            var _0x11b3e7 = _0x5659be;
            if (_0x491582 !== -0x1) {
                var _0x39548a = _0x4894a5[_0x491582];
                if (_0x16d949) {
                    var _0x391064 = _0x39548a['value'];
                    _0xaa438a['x'] = _0x391064['x'], _0xaa438a['y'] = _0x391064['y'], _0xaa438a['z'] = _0x391064['z'], _0xaa438a['w'] = _0x391064['w'];
                } else {
                    var _0x1a63b8 = _0x4894a5[_0x491582 + 0x1], _0x51ae8c, _0x1948b5 = _0x39548a[_0x11b3e7(0x268)], _0x2ff00b = _0x1a63b8[_0x11b3e7(0x268)] - _0x1948b5;
                    if (_0x2ff00b !== 0x0)
                        _0x51ae8c = (_0x54d203 - _0x1948b5) / _0x2ff00b;
                    else
                        _0x51ae8c = 0x0;
                    this[_0x11b3e7(0x322)](_0x39548a, _0x1a63b8, _0x51ae8c, _0x2ff00b, _0xaa438a);
                }
            } else {
                var _0x43e1ec = _0x4894a5[0x0]['value'];
                _0xaa438a['x'] = _0x43e1ec['x'], _0xaa438a['y'] = _0x43e1ec['y'], _0xaa438a['z'] = _0x43e1ec['z'], _0xaa438a['w'] = _0x43e1ec['w'];
            }
        }
        [_0x5659be(0x32b)](_0x5a8685) {
            var _0x474015 = _0x5659be, _0xbc1c28 = 0x0, _0x27f31b = this[_0x474015(0x317)][_0x474015(0x1ff)] - 0x1, _0x4b40c4;
            while (_0xbc1c28 <= _0x27f31b) {
                _0x4b40c4 = Math[_0x474015(0x241)]((_0xbc1c28 + _0x27f31b) / 0x2);
                var _0xed23ab = this[_0x474015(0x317)][_0x4b40c4][_0x474015(0x268)];
                if (_0xed23ab == _0x5a8685)
                    return _0x4b40c4;
                else {
                    if (_0xed23ab > _0x5a8685)
                        _0x27f31b = _0x4b40c4 - 0x1;
                    else
                        _0xbc1c28 = _0x4b40c4 + 0x1;
                }
            }
            return _0xbc1c28;
        }
        [_0x5659be(0x2b6)](_0x5ba602) {
            var _0x44fc4b = _0x5659be, _0x4bb9bf = this[_0x44fc4b(0x32b)](_0x5ba602[_0x44fc4b(0x268)]);
            this['_animationEvents'][_0x44fc4b(0x32c)](_0x4bb9bf, 0x0, _0x5ba602);
        }
        [_0x5659be(0x32d)]() {
            var _0x27a241 = _0x5659be;
            this[_0x27a241(0x2aa)] = null, this[_0x27a241(0x2ab)] = null;
        }
    }
    _0x39ae6a['ANIMATIONCLIP'] = _0x5659be(0x31f), _0x39ae6a[_0x5659be(0x327)] = new _0x22f58f();
    class _0x20668b {
        constructor() {
            var _0x90cbf1 = _0x5659be;
            this[_0x90cbf1(0x32e)] = null;
        }
        get [_0x5659be(0x32f)]() {
            var _0x46e4ca = _0x5659be;
            return this[_0x46e4ca(0x330)];
        }
        get [_0x5659be(0x320)]() {
            return this['_duration'];
        }
        get [_0x5659be(0x331)]() {
            var _0x4c1500 = _0x5659be;
            return this[_0x4c1500(0x32e)];
        }
        [_0x5659be(0x332)](_0x414cd8, _0xa46df2) {
            var _0x2ef2d9 = _0x5659be;
            this[_0x2ef2d9(0x333)] = ![], this[_0x2ef2d9(0x334)] = _0x414cd8, this[_0x2ef2d9(0x335)] = _0x414cd8, this[_0x2ef2d9(0x336)] = 0x0, this[_0x2ef2d9(0x337)] = !![], this[_0x2ef2d9(0x330)] = this[_0x2ef2d9(0x335)] / _0xa46df2;
            var _0x493e50 = this[_0x2ef2d9(0x330)] % 0x1;
            this[_0x2ef2d9(0x338)] = _0x493e50 < 0x0 ? _0x493e50 + 0x1 : _0x493e50;
        }
        [_0x5659be(0x339)](_0x1c5a3e) {
            var _0x21a8b6 = _0x5659be;
            _0x1c5a3e['_finish'] = this[_0x21a8b6(0x333)], _0x1c5a3e[_0x21a8b6(0x334)] = this[_0x21a8b6(0x334)], _0x1c5a3e[_0x21a8b6(0x335)] = this[_0x21a8b6(0x335)], _0x1c5a3e['_normalizedTime'] = this[_0x21a8b6(0x330)], _0x1c5a3e[_0x21a8b6(0x338)] = this[_0x21a8b6(0x338)], _0x1c5a3e['_playEventIndex'] = this[_0x21a8b6(0x336)], _0x1c5a3e[_0x21a8b6(0x337)] = this[_0x21a8b6(0x337)];
        }
    }
    class _0x5621c5 {
        constructor(_0x23e725) {
            var _0x4a73d0 = _0x5659be;
            this[_0x4a73d0(0x33a)] = 0x0, this[_0x4a73d0(0x33b)] = -0x1, this[_0x4a73d0(0x33c)] = -0x1, this[_0x4a73d0(0x33d)] = 0x0, this['_crossNodesOwnersCount'] = 0x0, this[_0x4a73d0(0x33e)] = [], this[_0x4a73d0(0x33f)] = {}, this[_0x4a73d0(0x340)] = [], this[_0x4a73d0(0x341)] = [], this['_statesMap'] = {}, this[_0x4a73d0(0x342)] = [], this[_0x4a73d0(0x343)] = new _0x20668b(), this[_0x4a73d0(0x344)] = new _0x20668b(), this[_0x4a73d0(0x345)] = _0x5621c5[_0x4a73d0(0x346)], this[_0x4a73d0(0x347)] = 0x1, this['playOnWake'] = !![], this['name'] = _0x23e725;
        }
        get [_0x5659be(0x348)]() {
            var _0x504ea6 = _0x5659be;
            return this[_0x504ea6(0x349)];
        }
        set ['defaultState'](_0x3dd762) {
            var _0x328b52 = _0x5659be;
            this[_0x328b52(0x349)] = _0x3dd762, this[_0x328b52(0x34a)][_0x3dd762[_0x328b52(0x2a5)]] = _0x3dd762;
        }
        get ['avatarMask']() {
            return this['_avatarMask'];
        }
        set [_0x5659be(0x34b)](_0x240b19) {
            var _0x252662 = _0x5659be;
            this[_0x252662(0x34c)] = _0x240b19;
        }
        [_0x5659be(0x34d)](_0x7f4671, _0x591137, _0xa4274b, _0x3ed5e2) {
            var _0x4a3c03 = _0x5659be, _0x1855cc = _0x3ed5e2[_0x4a3c03(0x34e)], _0x3ce6b3 = _0x7f4671[_0xa4274b];
            _0x7f4671[_0x4a3c03(0x32c)](_0xa4274b, 0x1), delete _0x591137[_0x3ed5e2[_0x4a3c03(0x2a5)]];
            if (this[_0x4a3c03(0x34f)]) {
                var _0x1ee94b = _0x1855cc['_nodes'], _0xc94822 = _0x3ce6b3[_0x4a3c03(0x350)];
                _0x1855cc[_0x4a3c03(0x351)]();
                for (var _0x57a4d6 = 0x0, _0x2efc03 = _0x1ee94b[_0x4a3c03(0x2a1)]; _0x57a4d6 < _0x2efc03; _0x57a4d6++)
                    this[_0x4a3c03(0x34f)][_0x4a3c03(0x352)](_0xc94822, _0x1ee94b[_0x4a3c03(0x2c2)](_0x57a4d6));
            }
        }
        [_0x5659be(0x353)]() {
            var _0x473f2a = _0x5659be;
            return this[_0x473f2a(0x33a)];
        }
        [_0x5659be(0x354)](_0x458f9d = 0x1) {
            var _0x5a3f7e = _0x5659be;
            for (var _0x29b449 = 0x0, _0x108b66 = this[_0x5a3f7e(0x342)]['length']; _0x29b449 < _0x108b66; _0x29b449++)
                this['_states'][_0x29b449][_0x5a3f7e(0x354)](_0x458f9d);
            this[_0x5a3f7e(0x33a)] += _0x458f9d;
        }
        [_0x5659be(0x351)](_0xfb4e6a = 0x1) {
            var _0x1dc1b3 = _0x5659be;
            for (var _0x5b789c = 0x0, _0x4d9429 = this[_0x1dc1b3(0x342)]['length']; _0x5b789c < _0x4d9429; _0x5b789c++)
                this[_0x1dc1b3(0x342)][_0x5b789c][_0x1dc1b3(0x351)](_0xfb4e6a);
            this[_0x1dc1b3(0x33a)] -= _0xfb4e6a;
        }
        [_0x5659be(0x355)]() {
            var _0x201cb4 = _0x5659be;
            this[_0x201cb4(0x351)](-this['_referenceCount']);
        }
        ['getCurrentPlayState']() {
            var _0x5d13cb = _0x5659be;
            return this[_0x5d13cb(0x343)];
        }
        ['getAnimatorState'](_0x4daf93) {
            var _0x587c7c = _0x5659be, _0xf561e5 = this[_0x587c7c(0x34a)][_0x4daf93];
            return _0xf561e5 ? _0xf561e5 : null;
        }
        [_0x5659be(0x356)](_0x22c069) {
            var _0x5a08b2 = _0x5659be, _0x53131e = _0x22c069['name'];
            if (this[_0x5a08b2(0x34a)][_0x53131e])
                throw _0x5a08b2(0x357);
            else
                this['_statesMap'][_0x53131e] = _0x22c069, this[_0x5a08b2(0x342)][_0x5a08b2(0x298)](_0x22c069), this[_0x5a08b2(0x34f)] && (_0x22c069[_0x5a08b2(0x34e)][_0x5a08b2(0x354)](), this[_0x5a08b2(0x34f)][_0x5a08b2(0x358)](_0x22c069));
        }
        ['removeState'](_0x2632f6) {
            var _0x5cc9b9 = _0x5659be, _0x232059 = this[_0x5cc9b9(0x342)], _0x2ff7f5 = -0x1;
            for (var _0x2764f5 = 0x0, _0x527333 = _0x232059[_0x5cc9b9(0x1ff)]; _0x2764f5 < _0x527333; _0x2764f5++) {
                if (_0x232059[_0x2764f5] === _0x2632f6) {
                    _0x2ff7f5 = _0x2764f5;
                    break;
                }
            }
            if (_0x2ff7f5 !== -0x1)
                this['_removeClip'](_0x232059, this[_0x5cc9b9(0x34a)], _0x2ff7f5, _0x2632f6);
        }
        ['destroy']() {
            var _0x42ae8a = _0x5659be;
            this[_0x42ae8a(0x355)](), this['_statesMap'] = null, this[_0x42ae8a(0x342)] = [], this[_0x42ae8a(0x343)] = null, this[_0x42ae8a(0x344)] = null, this[_0x42ae8a(0x349)] = null;
        }
        [_0x5659be(0x1f0)](_0x1b5845) {
            var _0x357b6b = _0x5659be, _0x4aea6a = _0x1b5845;
            _0x4aea6a[_0x357b6b(0x2a5)] = this[_0x357b6b(0x2a5)], _0x4aea6a['blendingMode'] = this[_0x357b6b(0x345)], _0x4aea6a['defaultWeight'] = this[_0x357b6b(0x347)], _0x4aea6a[_0x357b6b(0x359)] = this[_0x357b6b(0x359)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x2dd969 = _0x5659be, _0x46819a = new _0x5621c5(this[_0x2dd969(0x2a5)]);
            return this[_0x2dd969(0x1f0)](_0x46819a), _0x46819a;
        }
    }
    _0x5621c5[_0x5659be(0x346)] = 0x0, _0x5621c5[_0x5659be(0x35a)] = 0x1;
    class _0x4b22d0 {
        constructor() {
            var _0x28dc35 = _0x5659be;
            this[_0x28dc35(0x33a)] = 0x0, this[_0x28dc35(0x34e)] = null, this[_0x28dc35(0x350)] = [], this['_currentFrameIndices'] = null, this['_realtimeDatas'] = [], this['_scripts'] = null, this[_0x28dc35(0x35b)] = 0x1, this[_0x28dc35(0x35c)] = 0x0, this['clipEnd'] = 0x1;
        }
        get [_0x5659be(0x35d)]() {
            var _0x863e19 = _0x5659be;
            return this[_0x863e19(0x34e)];
        }
        set [_0x5659be(0x35d)](_0x397360) {
            var _0x1e12f0 = _0x5659be;
            if (this[_0x1e12f0(0x34e)] !== _0x397360) {
                if (this[_0x1e12f0(0x34e)])
                    this['_referenceCount'] > 0x0 && this['_clip']['_removeReference'](this[_0x1e12f0(0x33a)]);
                if (_0x397360) {
                    var _0x586201 = this[_0x1e12f0(0x35e)], _0x15f068 = _0x397360[_0x1e12f0(0x2aa)], _0x77cc7 = _0x15f068[_0x1e12f0(0x2a1)];
                    this[_0x1e12f0(0x35f)] = new Int16Array(_0x77cc7), this[_0x1e12f0(0x360)](), this[_0x1e12f0(0x33a)] > 0x0 && _0x397360[_0x1e12f0(0x354)](this[_0x1e12f0(0x33a)]), this[_0x1e12f0(0x35e)][_0x1e12f0(0x1ff)] = _0x77cc7;
                    for (var _0x7bd8ca = 0x0; _0x7bd8ca < _0x77cc7; _0x7bd8ca++) {
                        switch (_0x15f068['getNodeByIndex'](_0x7bd8ca)['type']) {
                        case 0x0:
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0x586201[_0x7bd8ca] = new _0x3f70c5();
                            break;
                        case 0x2:
                            _0x586201[_0x7bd8ca] = new _0x22f58f();
                            break;
                        default:
                            throw _0x1e12f0(0x2c1);
                        }
                    }
                }
                this[_0x1e12f0(0x34e)] = _0x397360;
            }
        }
        ['_getReferenceCount']() {
            return this['_referenceCount'];
        }
        [_0x5659be(0x354)](_0x3d0510 = 0x1) {
            var _0x1c4023 = _0x5659be;
            this[_0x1c4023(0x34e)] && this[_0x1c4023(0x34e)][_0x1c4023(0x354)](_0x3d0510), this[_0x1c4023(0x33a)] += _0x3d0510;
        }
        [_0x5659be(0x351)](_0x2943c6 = 0x1) {
            var _0x2e7271 = _0x5659be;
            this[_0x2e7271(0x34e)] && this[_0x2e7271(0x34e)][_0x2e7271(0x351)](_0x2943c6), this[_0x2e7271(0x33a)] -= _0x2943c6;
        }
        [_0x5659be(0x355)]() {
            var _0x7a5f6a = _0x5659be;
            this[_0x7a5f6a(0x351)](-this[_0x7a5f6a(0x33a)]);
        }
        [_0x5659be(0x360)]() {
            var _0x37aee5 = _0x5659be;
            for (var _0x3c254e = 0x0, _0x59493d = this[_0x37aee5(0x35f)]['length']; _0x3c254e < _0x59493d; _0x3c254e++)
                this[_0x37aee5(0x35f)][_0x3c254e] = -0x1;
        }
        [_0x5659be(0x361)](_0x17f0b1) {
            var _0x3b49c1 = _0x5659be, _0x3626af = new _0x17f0b1();
            return this['_scripts'] = this[_0x3b49c1(0x362)] || [], this[_0x3b49c1(0x362)][_0x3b49c1(0x298)](_0x3626af), _0x3626af;
        }
        [_0x5659be(0x363)](_0x527317) {
            var _0x50a1c2 = _0x5659be;
            if (this['_scripts'])
                for (var _0x3e32c0 = 0x0, _0x3d5df6 = this[_0x50a1c2(0x362)][_0x50a1c2(0x1ff)]; _0x3e32c0 < _0x3d5df6; _0x3e32c0++) {
                    var _0x33bba8 = this['_scripts'][_0x3e32c0];
                    if (_0x33bba8 instanceof _0x527317)
                        return _0x33bba8;
                }
            return null;
        }
        [_0x5659be(0x364)](_0x18c929) {
            var _0x412bb3 = _0x5659be, _0xe5d24c = null;
            if (this[_0x412bb3(0x362)])
                for (var _0x263549 = 0x0, _0x4dca0d = this[_0x412bb3(0x362)][_0x412bb3(0x1ff)]; _0x263549 < _0x4dca0d; _0x263549++) {
                    var _0x575f09 = this['_scripts'][_0x263549];
                    _0x575f09 instanceof _0x18c929 && (_0xe5d24c = _0xe5d24c || [], _0xe5d24c[_0x412bb3(0x298)](_0x575f09));
                }
            return _0xe5d24c;
        }
        ['cloneTo'](_0x358652) {
            var _0xbd79c6 = _0x5659be, _0xd49d28 = _0x358652;
            _0xd49d28[_0xbd79c6(0x2a5)] = this['name'], _0xd49d28[_0xbd79c6(0x35b)] = this[_0xbd79c6(0x35b)], _0xd49d28['clipStart'] = this[_0xbd79c6(0x35c)], _0xd49d28['clipEnd'] = this[_0xbd79c6(0x365)], _0xd49d28[_0xbd79c6(0x35d)] = this['_clip'];
        }
        [_0x5659be(0x1f4)]() {
            var _0x1fcd6f = _0x5659be, _0x2bbcc7 = new _0x4b22d0();
            return this[_0x1fcd6f(0x1f0)](_0x2bbcc7), _0x2bbcc7;
        }
    }
    class _0x2ccd0f {
        constructor() {
            var _0x3768b5 = _0x5659be;
            this[_0x3768b5(0x366)] = -0x1, this[_0x3768b5(0x367)] = 0x0, this[_0x3768b5(0x368)] = -0x1, this['type'] = -0x1, this[_0x3768b5(0x2bb)] = null, this['propertyOwner'] = null, this[_0x3768b5(0x369)] = null, this[_0x3768b5(0x36a)] = null, this[_0x3768b5(0x26b)] = null, this[_0x3768b5(0x36b)] = null;
        }
        [_0x5659be(0x36c)]() {
            var _0x20ed74 = _0x5659be, _0x1396d6 = this['propertyOwner'];
            if (_0x1396d6)
                switch (this[_0x20ed74(0x2ae)]) {
                case 0x0:
                    this[_0x20ed74(0x36b)] = this['value'];
                    break;
                case 0x1:
                case 0x3:
                case 0x4:
                    this['value'][_0x20ed74(0x1f0)](this['crossFixedValue']);
                    break;
                case 0x2:
                    this[_0x20ed74(0x26b)][_0x20ed74(0x1f0)](this[_0x20ed74(0x36b)]);
                    break;
                default:
                    throw 'Animator:unknown\x20type.';
                }
        }
    }
    class _0x2be102 {
        constructor(_0x17e4dd) {
            var _0x5d7595 = _0x5659be;
            this[_0x5d7595(0x36d)] = {}, this[_0x5d7595(0x36e)] = _0x17e4dd;
        }
        get [_0x5659be(0x36f)]() {
            return this['_catchAnimator'];
        }
        [_0x5659be(0x370)](_0x5764cd) {
            var _0x479517 = _0x5659be;
            return this[_0x479517(0x36d)][_0x5764cd];
        }
        [_0x5659be(0x371)](_0x3e14ce, _0x4363e1) {
            var _0x439bf8 = _0x5659be;
            this[_0x439bf8(0x36d)][_0x3e14ce] = _0x4363e1;
        }
        [_0x5659be(0x372)]() {
            var _0x2c65a0 = _0x5659be;
            return this[_0x2c65a0(0x36d)];
        }
    }
    class _0x58a8c8 extends _0x218b83[_0x5659be(0x373)] {
        constructor() {
            var _0x34f308 = _0x5659be;
            super(), this[_0x34f308(0x374)] = [], this[_0x34f308(0x375)] = {}, this['_linkAvatarSprites'] = [], this[_0x34f308(0x376)] = [], this[_0x34f308(0x377)] = _0x58a8c8[_0x34f308(0x378)], this['_controllerLayers'] = [], this['_linkSprites'] = {}, this[_0x34f308(0x379)] = 0x1, this[_0x34f308(0x37a)] = {}, this[_0x34f308(0x37b)] = 0x0;
        }
        static ['_update'](_0x5d55bc) {
            var _0x2a141d = _0x5659be, _0xa666b2 = _0x5d55bc[_0x2a141d(0x37c)], _0x2daa1e = _0xa666b2[_0x2a141d(0x1f6)];
            for (var _0x161b96 = 0x0, _0x2286b8 = _0xa666b2['length']; _0x161b96 < _0x2286b8; _0x161b96++) {
                var _0x2ab370 = _0x2daa1e[_0x161b96];
                _0x2ab370 && _0x2ab370[_0x2a141d(0x37d)] && _0x2ab370['_update']();
            }
        }
        get [_0x5659be(0x35b)]() {
            var _0x2f836d = _0x5659be;
            return this[_0x2f836d(0x379)];
        }
        set [_0x5659be(0x35b)](_0x464e3f) {
            var _0x46335a = _0x5659be;
            this[_0x46335a(0x379)] = _0x464e3f;
        }
        get [_0x5659be(0x37e)]() {
            var _0x34729d = _0x5659be;
            return this[_0x34729d(0x37f)][_0x34729d(0x1ff)];
        }
        ['_linkToSprites'](_0x307cf6) {
            var _0x11698d = _0x5659be;
            for (var _0x107959 in _0x307cf6) {
                var _0x39325a = this[_0x11698d(0x380)], _0x1cd2b9 = _0x307cf6[_0x107959];
                for (var _0x485251 = 0x0, _0x23b06a = _0x1cd2b9['length']; _0x485251 < _0x23b06a; _0x485251++) {
                    var _0x4fb104 = _0x1cd2b9[_0x485251];
                    if (_0x4fb104 === '')
                        break;
                    else {
                        _0x39325a = _0x39325a['getChildByName'](_0x4fb104);
                        if (!_0x39325a)
                            break;
                    }
                }
                _0x39325a && this[_0x11698d(0x381)](_0x107959, _0x39325a);
            }
        }
        [_0x5659be(0x382)](_0x559462, _0x1e47a5, _0x4d5456) {
            var _0x25e22f = _0x5659be, _0x3ebc15 = _0x1e47a5[_0x25e22f(0x2ad)], _0x2ffef7 = _0x1e47a5['fullPath'], _0x22a435 = this[_0x25e22f(0x37a)][_0x2ffef7];
            if (_0x22a435)
                _0x22a435[_0x25e22f(0x367)]++, _0x559462[_0x3ebc15] = _0x22a435;
            else {
                var _0x2c8e71 = _0x4d5456;
                for (var _0x4378cf = 0x0, _0x178bf4 = _0x1e47a5[_0x25e22f(0x25b)]; _0x4378cf < _0x178bf4; _0x4378cf++) {
                    _0x2c8e71 = _0x2c8e71[_0x1e47a5[_0x25e22f(0x266)](_0x4378cf)];
                    if (!_0x2c8e71)
                        break;
                }
                _0x22a435 = this[_0x25e22f(0x37a)][_0x2ffef7] = new _0x2ccd0f(), _0x22a435[_0x25e22f(0x2bb)] = _0x2ffef7, _0x22a435[_0x25e22f(0x366)] = this[_0x25e22f(0x374)]['length'], _0x22a435[_0x25e22f(0x367)] = 0x1, _0x22a435[_0x25e22f(0x2b0)] = _0x4d5456;
                var _0x156ccc = _0x1e47a5[_0x25e22f(0x25b)], _0x418919 = [];
                for (_0x4378cf = 0x0; _0x4378cf < _0x156ccc; _0x4378cf++)
                    _0x418919[_0x4378cf] = _0x1e47a5['getPropertyByIndex'](_0x4378cf);
                _0x22a435['property'] = _0x418919, _0x22a435[_0x25e22f(0x2ae)] = _0x1e47a5[_0x25e22f(0x2ae)];
                if (_0x2c8e71) {
                    if (_0x1e47a5[_0x25e22f(0x2ae)] === 0x0)
                        _0x22a435[_0x25e22f(0x36a)] = _0x2c8e71;
                    else {
                        var _0x4981e1 = new _0x2c8e71[(_0x25e22f(0x383))]();
                        _0x2c8e71[_0x25e22f(0x1f0)](_0x4981e1), _0x22a435['defaultValue'] = _0x4981e1, _0x22a435['value'] = new _0x2c8e71[(_0x25e22f(0x383))](), _0x22a435['crossFixedValue'] = new _0x2c8e71[(_0x25e22f(0x383))]();
                    }
                }
                this[_0x25e22f(0x374)][_0x25e22f(0x298)](_0x22a435), _0x559462[_0x3ebc15] = _0x22a435;
            }
        }
        [_0x5659be(0x352)](_0x3f8368, _0x26a7c9) {
            var _0x2f4b8d = _0x5659be, _0x2eac72 = _0x26a7c9[_0x2f4b8d(0x2bb)], _0x27925b = this[_0x2f4b8d(0x37a)][_0x2eac72];
            _0x27925b && (_0x27925b[_0x2f4b8d(0x367)]--, _0x27925b[_0x2f4b8d(0x367)] === 0x0 && (delete this[_0x2f4b8d(0x37a)][_0x2eac72], this[_0x2f4b8d(0x374)]['splice'](this[_0x2f4b8d(0x374)][_0x2f4b8d(0x384)](_0x27925b), 0x1)), _0x3f8368[_0x26a7c9[_0x2f4b8d(0x2ad)]] = null);
        }
        [_0x5659be(0x358)](_0x556786) {
            var _0x46b01a = _0x5659be, _0x38814c = _0x556786['_clip'][_0x46b01a(0x2aa)], _0x1287ee = _0x38814c['count'], _0x10e6f1 = _0x556786[_0x46b01a(0x350)];
            _0x10e6f1[_0x46b01a(0x1ff)] = _0x1287ee;
            for (var _0x27be15 = 0x0; _0x27be15 < _0x1287ee; _0x27be15++) {
                var _0x3b47cb = _0x38814c[_0x46b01a(0x2c2)](_0x27be15), _0x21da43 = this[_0x46b01a(0x385)] ? this[_0x46b01a(0x386)][this[_0x46b01a(0x385)][_0x46b01a(0x387)][_0x46b01a(0x2a5)]] : this[_0x46b01a(0x380)];
                for (var _0x16ea93 = 0x0, _0x196ea3 = _0x3b47cb[_0x46b01a(0x259)]; _0x16ea93 < _0x196ea3; _0x16ea93++) {
                    var _0xb58758 = _0x3b47cb[_0x46b01a(0x265)](_0x16ea93);
                    if (_0xb58758 === '')
                        break;
                    else {
                        _0x21da43 = _0x21da43[_0x46b01a(0x388)](_0xb58758);
                        if (!_0x21da43)
                            break;
                    }
                }
                if (_0x21da43) {
                    var _0x3a0afb = _0x3b47cb[_0x46b01a(0x2b0)];
                    _0x3a0afb && (_0x21da43 = _0x21da43[_0x3a0afb]), _0x21da43 && this[_0x46b01a(0x382)](_0x10e6f1, _0x3b47cb, _0x21da43);
                }
            }
        }
        [_0x5659be(0x389)](_0x452f7e, _0x57ad09, _0x31683f, _0x20f18d) {
            var _0x440d84 = _0x5659be, _0x4db45d = _0x452f7e[_0x440d84(0x34e)][_0x440d84(0x316)] * (_0x452f7e[_0x440d84(0x365)] - _0x452f7e[_0x440d84(0x35c)]), _0x2b9da8 = _0x57ad09['_elapsedTime'], _0x284a05 = _0x2b9da8 + _0x31683f;
            _0x57ad09['_lastElapsedTime'] = _0x2b9da8, _0x57ad09['_elapsedTime'] = _0x284a05;
            var _0x26a897 = _0x284a05 / _0x4db45d;
            _0x57ad09['_normalizedTime'] = _0x26a897;
            var _0x5c0969 = _0x26a897 % 0x1;
            _0x57ad09[_0x440d84(0x338)] = _0x5c0969 < 0x0 ? _0x5c0969 + 0x1 : _0x5c0969, _0x57ad09['_duration'] = _0x4db45d;
            var _0x37dbb4 = _0x452f7e[_0x440d84(0x362)];
            if (!_0x20f18d && _0x284a05 >= _0x4db45d) {
                _0x57ad09[_0x440d84(0x333)] = !![], _0x57ad09['_elapsedTime'] = _0x4db45d, _0x57ad09[_0x440d84(0x338)] = 0x1;
                if (_0x37dbb4) {
                    for (var _0x33bf91 = 0x0, _0x2c3873 = _0x37dbb4['length']; _0x33bf91 < _0x2c3873; _0x33bf91++)
                        _0x37dbb4[_0x33bf91][_0x440d84(0x38a)]();
                }
                return;
            }
            if (_0x37dbb4) {
                for (_0x33bf91 = 0x0, _0x2c3873 = _0x37dbb4[_0x440d84(0x1ff)]; _0x33bf91 < _0x2c3873; _0x33bf91++)
                    _0x37dbb4[_0x33bf91][_0x440d84(0x38b)]();
            }
        }
        ['_eventScript'](_0x494ed3, _0x4bf205, _0x4ab8d8, _0x3f56fc, _0x547f3d) {
            var _0x2b7fbf = _0x5659be;
            if (_0x547f3d)
                for (var _0x229d07 = _0x4bf205['length']; _0x4ab8d8 < _0x229d07; _0x4ab8d8++) {
                    var _0x5c5fa2 = _0x4bf205[_0x4ab8d8];
                    if (_0x5c5fa2[_0x2b7fbf(0x268)] <= _0x3f56fc)
                        for (var _0x509104 = 0x0, _0x4e61b2 = _0x494ed3[_0x2b7fbf(0x1ff)]; _0x509104 < _0x4e61b2; _0x509104++) {
                            var _0x4e260f = _0x494ed3[_0x509104], _0x37a281 = _0x4e260f[_0x5c5fa2[_0x2b7fbf(0x2b2)]];
                            _0x37a281 && _0x37a281[_0x2b7fbf(0x38c)](_0x4e260f, _0x5c5fa2[_0x2b7fbf(0x2b3)]);
                        }
                    else
                        break;
                }
            else
                for (; _0x4ab8d8 >= 0x0; _0x4ab8d8--) {
                    _0x5c5fa2 = _0x4bf205[_0x4ab8d8];
                    if (_0x5c5fa2[_0x2b7fbf(0x268)] >= _0x3f56fc)
                        for (_0x509104 = 0x0, _0x4e61b2 = _0x494ed3['length']; _0x509104 < _0x4e61b2; _0x509104++) {
                            _0x4e260f = _0x494ed3[_0x509104], _0x37a281 = _0x4e260f[_0x5c5fa2[_0x2b7fbf(0x2b2)]], _0x37a281 && _0x37a281[_0x2b7fbf(0x38c)](_0x4e260f, _0x5c5fa2['params']);
                        }
                    else
                        break;
                }
            return _0x4ab8d8;
        }
        ['_updateEventScript'](_0x16f5f7, _0x37ac14) {
            var _0x5ed789 = _0x5659be, _0x2c6166 = this[_0x5ed789(0x380)][_0x5ed789(0x362)];
            if (_0x2c6166) {
                var _0x124aaf = _0x16f5f7['_clip'], _0x381ab9 = _0x124aaf['_animationEvents'], _0x3938d2 = _0x124aaf[_0x5ed789(0x316)], _0x17427c = _0x37ac14['_elapsedTime'], _0x700025 = _0x17427c % _0x3938d2, _0x3ca06d = Math[_0x5ed789(0x1e7)](Math['floor'](_0x17427c / _0x3938d2) - Math['floor'](_0x37ac14['_lastElapsedTime'] / _0x3938d2)), _0x35fdef = _0x37ac14[_0x5ed789(0x335)] >= _0x37ac14[_0x5ed789(0x38d)];
                if (_0x37ac14[_0x5ed789(0x337)] !== _0x35fdef) {
                    if (_0x35fdef)
                        _0x37ac14[_0x5ed789(0x336)]++;
                    else
                        _0x37ac14[_0x5ed789(0x336)]--;
                    _0x37ac14[_0x5ed789(0x337)] = _0x35fdef;
                }
                var _0x5195d5 = _0x37ac14['_playEventIndex'];
                if (_0x35fdef) {
                    var _0x1f21d9 = this['_eventScript'](_0x2c6166, _0x381ab9, _0x37ac14[_0x5ed789(0x336)], _0x3ca06d > 0x0 ? _0x3938d2 : _0x700025, !![]);
                    _0x5195d5 === _0x37ac14['_playEventIndex'] && (_0x37ac14[_0x5ed789(0x336)] = _0x1f21d9);
                    for (var _0x3495a2 = 0x0, _0x2be5dd = _0x3ca06d - 0x1; _0x3495a2 < _0x2be5dd; _0x3495a2++)
                        this[_0x5ed789(0x38e)](_0x2c6166, _0x381ab9, 0x0, _0x3938d2, !![]);
                    _0x3ca06d > 0x0 && _0x700025 > 0x0 && (_0x37ac14[_0x5ed789(0x336)] = this['_eventScript'](_0x2c6166, _0x381ab9, 0x0, _0x700025, !![]));
                } else {
                    var _0x1f21d9 = this[_0x5ed789(0x38e)](_0x2c6166, _0x381ab9, _0x37ac14['_playEventIndex'], _0x3ca06d > 0x0 ? 0x0 : _0x700025, ![]);
                    _0x5195d5 === _0x37ac14[_0x5ed789(0x336)] && (_0x37ac14[_0x5ed789(0x336)] = _0x1f21d9);
                    var _0x1dc5f5 = _0x381ab9[_0x5ed789(0x1ff)] - 0x1;
                    for (_0x3495a2 = 0x0, _0x2be5dd = _0x3ca06d - 0x1; _0x3495a2 < _0x2be5dd; _0x3495a2++)
                        this[_0x5ed789(0x38e)](_0x2c6166, _0x381ab9, _0x1dc5f5, 0x0, ![]);
                    _0x3ca06d > 0x0 && _0x700025 > 0x0 && (_0x37ac14[_0x5ed789(0x336)] = this[_0x5ed789(0x38e)](_0x2c6166, _0x381ab9, _0x1dc5f5, _0x700025, ![]));
                }
            }
        }
        [_0x5659be(0x38f)](_0x192cde, _0x54daf0, _0x40301f, _0x320cd4 = null) {
            var _0x44bac6 = _0x5659be, _0x4f1e30 = _0x192cde[_0x44bac6(0x34e)], _0x1eab13 = _0x4f1e30[_0x44bac6(0x316)], _0x1b63bd = _0x192cde['clipStart'] * _0x1eab13 + _0x40301f[_0x44bac6(0x338)] * _0x40301f['_duration'], _0x4f6028 = _0x192cde[_0x44bac6(0x35f)], _0x1600a2 = _0x40301f['_elapsedTime'] > _0x40301f[_0x44bac6(0x38d)];
            _0x4f1e30['_evaluateClipDatasRealTime'](_0x4f1e30[_0x44bac6(0x2aa)], _0x1b63bd, _0x4f6028, _0x54daf0, _0x1600a2, _0x192cde[_0x44bac6(0x35e)], _0x320cd4);
        }
        [_0x5659be(0x390)](_0x107026, _0x4a2baa, _0x1f4e9c, _0x3f9f36, _0x5a8edb, _0x10c3c6, _0x2d73a5) {
            var _0x274c6e = _0x5659be;
            if (_0x1f4e9c[_0x274c6e(0x368)] === this[_0x274c6e(0x37b)]) {
                if (_0x3f9f36)
                    _0x107026[_0x4a2baa] += _0x5a8edb * _0x2d73a5;
                else {
                    var _0x6dbda3 = _0x107026[_0x4a2baa];
                    _0x107026[_0x4a2baa] = _0x6dbda3 + _0x5a8edb * (_0x2d73a5 - _0x6dbda3);
                }
            } else {
                if (_0x10c3c6) {
                    if (_0x3f9f36)
                        _0x107026[_0x4a2baa] = _0x1f4e9c[_0x274c6e(0x36a)] + _0x2d73a5;
                    else
                        _0x107026[_0x4a2baa] = _0x2d73a5;
                } else {
                    if (_0x3f9f36)
                        _0x107026[_0x4a2baa] = _0x1f4e9c[_0x274c6e(0x36a)] + _0x5a8edb * _0x2d73a5;
                    else {
                        var _0x2fa67d = _0x1f4e9c[_0x274c6e(0x36a)];
                        _0x107026[_0x4a2baa] = _0x2fa67d + _0x5a8edb * (_0x2d73a5 - _0x2fa67d);
                    }
                }
            }
        }
        ['_applyPositionAndRotationEuler'](_0x558e5f, _0x5646b6, _0x3f338c, _0x21f847, _0x514e84, _0x5e2442) {
            var _0x16f638 = _0x5659be;
            if (_0x558e5f['updateMark'] === this[_0x16f638(0x37b)]) {
                if (_0x5646b6)
                    _0x5e2442['x'] += _0x3f338c * _0x514e84['x'], _0x5e2442['y'] += _0x3f338c * _0x514e84['y'], _0x5e2442['z'] += _0x3f338c * _0x514e84['z'];
                else {
                    var _0xf396ed = _0x5e2442['x'], _0x366d8e = _0x5e2442['y'], _0x591502 = _0x5e2442['z'];
                    _0x5e2442['x'] = _0xf396ed + _0x3f338c * (_0x514e84['x'] - _0xf396ed), _0x5e2442['y'] = _0x366d8e + _0x3f338c * (_0x514e84['y'] - _0x366d8e), _0x5e2442['z'] = _0x591502 + _0x3f338c * (_0x514e84['z'] - _0x591502);
                }
            } else {
                if (_0x21f847) {
                    if (_0x5646b6) {
                        var _0x31b7ae = _0x558e5f[_0x16f638(0x36a)];
                        _0x5e2442['x'] = _0x31b7ae['x'] + _0x514e84['x'], _0x5e2442['y'] = _0x31b7ae['y'] + _0x514e84['y'], _0x5e2442['z'] = _0x31b7ae['z'] + _0x514e84['z'];
                    } else
                        _0x5e2442['x'] = _0x514e84['x'], _0x5e2442['y'] = _0x514e84['y'], _0x5e2442['z'] = _0x514e84['z'];
                } else {
                    _0x31b7ae = _0x558e5f[_0x16f638(0x36a)];
                    if (_0x5646b6)
                        _0x5e2442['x'] = _0x31b7ae['x'] + _0x3f338c * _0x514e84['x'], _0x5e2442['y'] = _0x31b7ae['y'] + _0x3f338c * _0x514e84['y'], _0x5e2442['z'] = _0x31b7ae['z'] + _0x3f338c * _0x514e84['z'];
                    else {
                        var _0x130c4b = _0x31b7ae['x'], _0x372830 = _0x31b7ae['y'], _0x3de037 = _0x31b7ae['z'];
                        _0x5e2442['x'] = _0x130c4b + _0x3f338c * (_0x514e84['x'] - _0x130c4b), _0x5e2442['y'] = _0x372830 + _0x3f338c * (_0x514e84['y'] - _0x372830), _0x5e2442['z'] = _0x3de037 + _0x3f338c * (_0x514e84['z'] - _0x3de037);
                    }
                }
            }
        }
        [_0x5659be(0x391)](_0x183062, _0xdf21c5, _0x337fcc, _0x467598, _0x35b923, _0x3a914d) {
            var _0x4573bf = _0x5659be;
            if (_0x183062[_0x4573bf(0x368)] === this[_0x4573bf(0x37b)]) {
                if (_0xdf21c5) {
                    var _0x272909 = _0x58a8c8[_0x4573bf(0x392)];
                    _0x108d81[_0x4573bf(0x393)](_0x35b923, _0x337fcc, _0x272909), _0x272909[_0x4573bf(0x1f2)](_0x272909), _0x22f58f['multiply'](_0x3a914d, _0x272909, _0x3a914d);
                } else
                    _0x22f58f[_0x4573bf(0x1fc)](_0x3a914d, _0x35b923, _0x337fcc, _0x3a914d);
            } else {
                if (_0x467598) {
                    if (_0xdf21c5) {
                        var _0x451ce8 = _0x183062[_0x4573bf(0x36a)];
                        _0x22f58f[_0x4573bf(0x202)](_0x451ce8, _0x35b923, _0x3a914d);
                    } else
                        _0x3a914d['x'] = _0x35b923['x'], _0x3a914d['y'] = _0x35b923['y'], _0x3a914d['z'] = _0x35b923['z'], _0x3a914d['w'] = _0x35b923['w'];
                } else
                    _0x451ce8 = _0x183062[_0x4573bf(0x36a)], _0xdf21c5 ? (_0x272909 = _0x58a8c8[_0x4573bf(0x392)], _0x108d81[_0x4573bf(0x393)](_0x35b923, _0x337fcc, _0x272909), _0x272909[_0x4573bf(0x1f2)](_0x272909), _0x22f58f['multiply'](_0x451ce8, _0x272909, _0x3a914d)) : _0x22f58f[_0x4573bf(0x1fc)](_0x451ce8, _0x35b923, _0x337fcc, _0x3a914d);
            }
        }
        [_0x5659be(0x394)](_0x32b1ff, _0x54786a, _0x50bc03, _0x3d115d, _0x56ab00, _0x535cde) {
            var _0x45a505 = _0x5659be;
            if (_0x32b1ff[_0x45a505(0x368)] === this[_0x45a505(0x37b)]) {
                if (_0x54786a) {
                    var _0x354cfd = _0x58a8c8['_tempVector31'];
                    _0x108d81[_0x45a505(0x2ee)](_0x56ab00, _0x50bc03, _0x354cfd), _0x535cde['x'] = _0x535cde['x'] * _0x354cfd['x'], _0x535cde['y'] = _0x535cde['y'] * _0x354cfd['y'], _0x535cde['z'] = _0x535cde['z'] * _0x354cfd['z'];
                } else
                    _0x108d81['scaleBlend'](_0x535cde, _0x56ab00, _0x50bc03, _0x535cde);
            } else {
                if (_0x3d115d) {
                    if (_0x54786a) {
                        var _0x507f6b = _0x32b1ff[_0x45a505(0x36a)];
                        _0x535cde['x'] = _0x507f6b['x'] * _0x56ab00['x'], _0x535cde['y'] = _0x507f6b['y'] * _0x56ab00['y'], _0x535cde['z'] = _0x507f6b['z'] * _0x56ab00['z'];
                    } else
                        _0x535cde['x'] = _0x56ab00['x'], _0x535cde['y'] = _0x56ab00['y'], _0x535cde['z'] = _0x56ab00['z'];
                } else
                    _0x507f6b = _0x32b1ff[_0x45a505(0x36a)], _0x54786a ? (_0x354cfd = _0x58a8c8['_tempVector31'], _0x108d81['scaleWeight'](_0x56ab00, _0x50bc03, _0x354cfd), _0x535cde['x'] = _0x507f6b['x'] * _0x354cfd['x'], _0x535cde['y'] = _0x507f6b['y'] * _0x354cfd['y'], _0x535cde['z'] = _0x507f6b['z'] * _0x354cfd['z']) : _0x108d81['scaleBlend'](_0x507f6b, _0x56ab00, _0x50bc03, _0x535cde);
            }
        }
        ['_applyCrossData'](_0xf66ce6, _0x4a45e8, _0x9fbcb9, _0xd56485, _0x89905a, _0x381942, _0x1ae1a5) {
            var _0x358509 = _0x5659be, _0x1bff93 = _0xf66ce6[_0x358509(0x2b0)];
            if (_0x1bff93) {
                switch (_0xf66ce6[_0x358509(0x2ae)]) {
                case 0x0:
                    var _0x9202af = _0xf66ce6[_0x358509(0x369)], _0x47e10d = _0x9202af[_0x358509(0x1ff)] - 0x1;
                    for (var _0x382254 = 0x0; _0x382254 < _0x47e10d; _0x382254++) {
                        _0x1bff93 = _0x1bff93[_0x9202af[_0x382254]];
                        if (!_0x1bff93)
                            break;
                    }
                    var _0x5cafdb = _0x89905a + _0x1ae1a5 * (_0x381942 - _0x89905a);
                    _0xf66ce6['value'] = _0x5cafdb, _0x1bff93 && this[_0x358509(0x390)](_0x1bff93, _0x9202af[_0x47e10d], _0xf66ce6, _0x4a45e8, _0x9fbcb9, _0xd56485, _0x5cafdb);
                    break;
                case 0x1:
                    var _0x5e4fc4 = _0x1bff93[_0x358509(0x395)], _0x1604fc = _0xf66ce6[_0x358509(0x26b)], _0xfcb090 = _0x89905a['x'], _0x349ed9 = _0x89905a['y'], _0xdd1874 = _0x89905a['z'];
                    _0x1604fc['x'] = _0xfcb090 + _0x1ae1a5 * (_0x381942['x'] - _0xfcb090), _0x1604fc['y'] = _0x349ed9 + _0x1ae1a5 * (_0x381942['y'] - _0x349ed9), _0x1604fc['z'] = _0xdd1874 + _0x1ae1a5 * (_0x381942['z'] - _0xdd1874), this[_0x358509(0x396)](_0xf66ce6, _0x4a45e8, _0x9fbcb9, _0xd56485, _0x1604fc, _0x5e4fc4), _0x1bff93[_0x358509(0x395)] = _0x5e4fc4;
                    break;
                case 0x2:
                    var _0x4eea47 = _0x1bff93['localRotation'], _0x158347 = _0xf66ce6[_0x358509(0x26b)];
                    _0x22f58f['lerp'](_0x89905a, _0x381942, _0x1ae1a5, _0x158347), this[_0x358509(0x391)](_0xf66ce6, _0x4a45e8, _0x9fbcb9, _0xd56485, _0x158347, _0x4eea47), _0x1bff93[_0x358509(0x397)] = _0x4eea47;
                    break;
                case 0x3:
                    var _0x4d316e = _0x1bff93[_0x358509(0x398)], _0x283dae = _0xf66ce6[_0x358509(0x26b)];
                    _0x108d81[_0x358509(0x399)](_0x89905a, _0x381942, _0x1ae1a5, _0x283dae), this[_0x358509(0x394)](_0xf66ce6, _0x4a45e8, _0x9fbcb9, _0xd56485, _0x283dae, _0x4d316e), _0x1bff93[_0x358509(0x398)] = _0x4d316e;
                    break;
                case 0x4:
                    var _0x1aec0d = _0x1bff93['localRotationEuler'], _0x379e63 = _0xf66ce6[_0x358509(0x26b)];
                    _0xfcb090 = _0x89905a['x'], _0x349ed9 = _0x89905a['y'], _0xdd1874 = _0x89905a['z'], _0x379e63['x'] = _0xfcb090 + _0x1ae1a5 * (_0x381942['x'] - _0xfcb090), _0x379e63['y'] = _0x349ed9 + _0x1ae1a5 * (_0x381942['y'] - _0x349ed9), _0x379e63['z'] = _0xdd1874 + _0x1ae1a5 * (_0x381942['z'] - _0xdd1874), this[_0x358509(0x396)](_0xf66ce6, _0x4a45e8, _0x9fbcb9, _0xd56485, _0x379e63, _0x1aec0d), _0x1bff93[_0x358509(0x39a)] = _0x1aec0d;
                    break;
                }
                _0xf66ce6[_0x358509(0x368)] = this['_updateMark'];
            }
        }
        [_0x5659be(0x39b)](_0x470075, _0x42d3ff, _0x447483, _0x17718f, _0x1abc68 = null) {
            var _0x37cd3f = _0x5659be, _0x44a0cd = _0x470075[_0x37cd3f(0x35e)], _0x5f0bab = _0x470075[_0x37cd3f(0x34e)][_0x37cd3f(0x2aa)], _0x351436 = _0x470075[_0x37cd3f(0x350)];
            for (var _0x5b9fc0 = 0x0, _0x4326ba = _0x5f0bab[_0x37cd3f(0x2a1)]; _0x5b9fc0 < _0x4326ba; _0x5b9fc0++) {
                var _0xfee88f = _0x351436[_0x5b9fc0];
                if (_0xfee88f) {
                    var _0x3f177f = _0x5f0bab[_0x37cd3f(0x2c2)](_0x5b9fc0);
                    if (_0x1abc68[_0x37cd3f(0x34b)] && !_0x1abc68[_0x37cd3f(0x34b)][_0x37cd3f(0x370)](_0x3f177f['nodePath']))
                        continue;
                    var _0x28a62a = _0xfee88f[_0x37cd3f(0x2b0)];
                    if (_0x28a62a) {
                        switch (_0xfee88f[_0x37cd3f(0x2ae)]) {
                        case 0x0:
                            var _0x7c356 = _0xfee88f[_0x37cd3f(0x369)], _0x3dab54 = _0x7c356[_0x37cd3f(0x1ff)] - 0x1;
                            for (var _0x5dbd99 = 0x0; _0x5dbd99 < _0x3dab54; _0x5dbd99++) {
                                _0x28a62a = _0x28a62a[_0x7c356[_0x5dbd99]];
                                if (!_0x28a62a)
                                    break;
                            }
                            _0x28a62a && this[_0x37cd3f(0x390)](_0x28a62a, _0x7c356[_0x3dab54], _0xfee88f, _0x42d3ff, _0x447483, _0x17718f, _0x44a0cd[_0x5b9fc0]);
                            break;
                        case 0x1:
                            var _0x3677e2 = _0x28a62a[_0x37cd3f(0x395)];
                            this[_0x37cd3f(0x396)](_0xfee88f, _0x42d3ff, _0x447483, _0x17718f, _0x44a0cd[_0x5b9fc0], _0x3677e2), _0x28a62a[_0x37cd3f(0x395)] = _0x3677e2;
                            break;
                        case 0x2:
                            var _0x351698 = _0x28a62a['localRotation'];
                            this[_0x37cd3f(0x391)](_0xfee88f, _0x42d3ff, _0x447483, _0x17718f, _0x44a0cd[_0x5b9fc0], _0x351698), _0x28a62a[_0x37cd3f(0x397)] = _0x351698;
                            break;
                        case 0x3:
                            var _0x27a128 = _0x28a62a[_0x37cd3f(0x398)];
                            this['_applyScale'](_0xfee88f, _0x42d3ff, _0x447483, _0x17718f, _0x44a0cd[_0x5b9fc0], _0x27a128), _0x28a62a['localScale'] = _0x27a128;
                            break;
                        case 0x4:
                            var _0xdd6bf2 = _0x28a62a['localRotationEuler'];
                            this['_applyPositionAndRotationEuler'](_0xfee88f, _0x42d3ff, _0x447483, _0x17718f, _0x44a0cd[_0x5b9fc0], _0xdd6bf2), _0x28a62a['localRotationEuler'] = _0xdd6bf2;
                            break;
                        }
                        _0xfee88f[_0x37cd3f(0x368)] = this['_updateMark'];
                    }
                }
            }
        }
        [_0x5659be(0x39c)](_0x744bf2, _0x453360, _0x29561f, _0x10a3c9, _0x5cd61e) {
            var _0x566890 = _0x5659be, _0x12c412 = _0x744bf2[_0x566890(0x33e)], _0x4c4517 = _0x744bf2[_0x566890(0x39d)], _0xca1965 = _0x744bf2[_0x566890(0x345)] !== _0x5621c5[_0x566890(0x346)], _0x63ea5c = _0x744bf2['defaultWeight'], _0x44f6e8 = _0x29561f[_0x566890(0x35e)], _0x224f88 = _0x744bf2[_0x566890(0x341)], _0x5466b2 = _0x29561f[_0x566890(0x350)], _0x4c0ea5 = _0x453360[_0x566890(0x35e)], _0xda910 = _0x744bf2[_0x566890(0x340)], _0x52d4be = _0x453360[_0x566890(0x350)];
            for (var _0x442ae8 = 0x0; _0x442ae8 < _0x4c4517; _0x442ae8++) {
                var _0xb8a4d8 = _0x12c412[_0x442ae8];
                if (_0xb8a4d8) {
                    var _0xc4f868 = _0xda910[_0x442ae8], _0x21d14d = _0x224f88[_0x442ae8], _0x1c5568 = _0xc4f868 !== -0x1 ? _0x4c0ea5[_0xc4f868] : _0x5466b2[_0x21d14d][_0x566890(0x36a)], _0xb63fb1 = _0x21d14d !== -0x1 ? _0x44f6e8[_0x21d14d] : _0x52d4be[_0xc4f868][_0x566890(0x36a)];
                    this['_applyCrossData'](_0xb8a4d8, _0xca1965, _0x63ea5c, _0x5cd61e, _0x1c5568, _0xb63fb1, _0x10a3c9);
                }
            }
        }
        [_0x5659be(0x39e)](_0x502e94, _0x433e57, _0x59f7f8, _0x53521a) {
            var _0xba8f5d = _0x5659be, _0x2c1faf = _0x502e94[_0xba8f5d(0x33e)], _0x4029a0 = _0x502e94['_crossNodesOwnersCount'], _0x982459 = _0x502e94[_0xba8f5d(0x345)] !== _0x5621c5[_0xba8f5d(0x346)], _0x3134e9 = _0x502e94['defaultWeight'], _0x2bad1d = _0x433e57[_0xba8f5d(0x35e)], _0xb40780 = _0x502e94[_0xba8f5d(0x341)];
            for (var _0x57418a = 0x0; _0x57418a < _0x4029a0; _0x57418a++) {
                var _0x38da04 = _0x2c1faf[_0x57418a];
                if (_0x38da04) {
                    var _0x2aa26e = _0xb40780[_0x57418a], _0x4330a2 = _0x38da04['crossFixedValue'], _0x591cf8 = _0x2aa26e !== -0x1 ? _0x2bad1d[_0x2aa26e] : _0x38da04['defaultValue'];
                    this[_0xba8f5d(0x39f)](_0x38da04, _0x982459, _0x3134e9, _0x53521a, _0x4330a2, _0x591cf8, _0x59f7f8);
                }
            }
        }
        [_0x5659be(0x3a0)](_0x4cc204) {
            var _0x2cde35 = _0x5659be, _0x538edb = _0x4cc204[_0x2cde35(0x350)];
            for (var _0x238a8b = 0x0, _0x1833e9 = _0x538edb['length']; _0x238a8b < _0x1833e9; _0x238a8b++) {
                var _0x2fa4ed = _0x538edb[_0x238a8b];
                if (_0x2fa4ed) {
                    var _0x2399c1 = _0x2fa4ed[_0x2cde35(0x2b0)];
                    if (_0x2399c1)
                        switch (_0x2fa4ed[_0x2cde35(0x2ae)]) {
                        case 0x0:
                            var _0x572702 = _0x2fa4ed[_0x2cde35(0x369)], _0xb416be = _0x572702['length'] - 0x1;
                            for (var _0x221dcb = 0x0; _0x221dcb < _0xb416be; _0x221dcb++) {
                                _0x2399c1 = _0x2399c1[_0x572702[_0x221dcb]];
                                if (!_0x2399c1)
                                    break;
                            }
                            _0x2399c1[_0x572702[_0xb416be]] = _0x2fa4ed[_0x2cde35(0x36a)];
                            break;
                        case 0x1:
                            var _0x337dc4 = _0x2399c1['localPosition'], _0x1843c5 = _0x2fa4ed['defaultValue'];
                            _0x337dc4['x'] = _0x1843c5['x'], _0x337dc4['y'] = _0x1843c5['y'], _0x337dc4['z'] = _0x1843c5['z'], _0x2399c1[_0x2cde35(0x395)] = _0x337dc4;
                            break;
                        case 0x2:
                            var _0xf0a388 = _0x2399c1[_0x2cde35(0x397)], _0x23ec59 = _0x2fa4ed['defaultValue'];
                            _0xf0a388['x'] = _0x23ec59['x'], _0xf0a388['y'] = _0x23ec59['y'], _0xf0a388['z'] = _0x23ec59['z'], _0xf0a388['w'] = _0x23ec59['w'], _0x2399c1[_0x2cde35(0x397)] = _0xf0a388;
                            break;
                        case 0x3:
                            var _0x22863e = _0x2399c1['localScale'];
                            _0x1843c5 = _0x2fa4ed[_0x2cde35(0x36a)], _0x22863e['x'] = _0x1843c5['x'], _0x22863e['y'] = _0x1843c5['y'], _0x22863e['z'] = _0x1843c5['z'], _0x2399c1[_0x2cde35(0x398)] = _0x22863e;
                            break;
                        case 0x4:
                            var _0x5e1d42 = _0x2399c1[_0x2cde35(0x39a)];
                            _0x1843c5 = _0x2fa4ed[_0x2cde35(0x36a)], _0x5e1d42['x'] = _0x1843c5['x'], _0x5e1d42['y'] = _0x1843c5['y'], _0x5e1d42['z'] = _0x1843c5['z'], _0x2399c1[_0x2cde35(0x39a)] = _0x5e1d42;
                            break;
                        default:
                            throw _0x2cde35(0x3a1);
                        }
                }
            }
        }
        ['_onAdded']() {
            var _0x4ce93f = _0x5659be, _0x568f9e = this[_0x4ce93f(0x380)][_0x4ce93f(0x2fd)];
            this[_0x4ce93f(0x380)][_0x4ce93f(0x3a2)](this, _0x568f9e ? _0x568f9e[_0x4ce93f(0x3a3)] : null), this[_0x4ce93f(0x380)][_0x4ce93f(0x3a4)](this, !![], []);
        }
        [_0x5659be(0x3a5)]() {
            var _0x22436e = _0x5659be;
            for (var _0x7c4a44 = 0x0, _0x36821a = this[_0x22436e(0x37f)]['length']; _0x7c4a44 < _0x36821a; _0x7c4a44++)
                this[_0x22436e(0x37f)][_0x7c4a44]['_removeReference']();
            var _0x49b3b8 = this[_0x22436e(0x380)]['_parent'];
            this['owner']['_clearHierarchyAnimator'](this, _0x49b3b8 ? _0x49b3b8[_0x22436e(0x3a3)] : null);
        }
        ['_onEnable']() {
            var _0x491cc9 = _0x5659be;
            this[_0x491cc9(0x380)][_0x491cc9(0x3a6)][_0x491cc9(0x37c)][_0x491cc9(0x201)](this);
            for (var _0x350046 = 0x0, _0x5c60e3 = this[_0x491cc9(0x37f)]['length']; _0x350046 < _0x5c60e3; _0x350046++) {
                if (this['_controllerLayers'][_0x350046]['playOnWake']) {
                    var _0xe6824a = this[_0x491cc9(0x3a7)](_0x350046);
                    _0xe6824a && this[_0x491cc9(0x3a8)](null, _0x350046, 0x0);
                }
            }
        }
        ['_onDisable']() {
            var _0x4b541a = _0x5659be;
            this[_0x4b541a(0x380)][_0x4b541a(0x3a6)][_0x4b541a(0x37c)][_0x4b541a(0x3a9)](this);
        }
        [_0x5659be(0x3aa)](_0x15f476, _0x432bde, _0x351891) {
            var _0x39792b = _0x5659be;
            for (var _0x3bfa9c = 0x0, _0x3d6b17 = this[_0x39792b(0x37f)][_0x39792b(0x1ff)]; _0x3bfa9c < _0x3d6b17; _0x3bfa9c++) {
                var _0x1f7455 = this[_0x39792b(0x37f)][_0x3bfa9c]['_states'];
                for (var _0x27a48a = 0x0, _0x43654c = _0x1f7455[_0x39792b(0x1ff)]; _0x27a48a < _0x43654c; _0x27a48a++) {
                    var _0x236278 = _0x1f7455[_0x27a48a], _0x1f4602 = _0x236278['_clip'], _0x171b51 = _0x432bde[_0x39792b(0x262)]('/'), _0x4adbfc = _0x1f4602['_nodesMap'][_0x171b51];
                    if (_0x4adbfc) {
                        var _0x5bd977 = _0x236278['_nodeOwners'];
                        for (var _0x45946a = 0x0, _0x48f89f = _0x4adbfc[_0x39792b(0x1ff)]; _0x45946a < _0x48f89f; _0x45946a++) {
                            if (_0x15f476)
                                this[_0x39792b(0x382)](_0x5bd977, _0x4adbfc[_0x45946a], _0x351891);
                            else
                                this[_0x39792b(0x352)](_0x5bd977, _0x4adbfc[_0x45946a]);
                        }
                    }
                }
            }
        }
        [_0x5659be(0x318)](_0x3746b9) {
            var _0x14e013 = _0x5659be, _0x566180 = _0x3746b9[_0x14e013(0x3ab)];
            if (_0x566180) {
                this['avatar'] = _0x218b83['Loader']['getRes'](_0x566180['path']);
                var _0x1b42a5 = _0x566180[_0x14e013(0x3ac)];
                this['_linkSprites'] = _0x1b42a5, this['_linkToSprites'](_0x1b42a5);
            }
            var _0x73f518 = _0x3746b9['playOnWake'], _0x4e969e = _0x3746b9[_0x14e013(0x3ad)];
            for (var _0x369122 = 0x0; _0x369122 < _0x4e969e[_0x14e013(0x1ff)]; _0x369122++) {
                var _0x5886dd = _0x4e969e[_0x369122], _0x3c1f67 = new _0x5621c5(_0x5886dd[_0x14e013(0x2a5)]);
                if (_0x369122 === 0x0)
                    _0x3c1f67['defaultWeight'] = 0x1;
                else
                    _0x3c1f67[_0x14e013(0x347)] = _0x5886dd[_0x14e013(0x3ae)];
                var _0x24fa22 = _0x5886dd[_0x14e013(0x345)];
                _0x24fa22 && (_0x3c1f67['blendingMode'] = _0x24fa22), this['addControllerLayer'](_0x3c1f67);
                var _0x12bb64 = _0x5886dd[_0x14e013(0x3af)];
                for (var _0x4d7316 = 0x0, _0x49dc6c = _0x12bb64[_0x14e013(0x1ff)]; _0x4d7316 < _0x49dc6c; _0x4d7316++) {
                    var _0x3c2e20 = _0x12bb64[_0x4d7316], _0x30b4f7 = _0x3c2e20[_0x14e013(0x3b0)];
                    if (_0x30b4f7) {
                        var _0x4976c1 = _0x3c2e20['name'], _0x108482;
                        _0x108482 = _0x218b83[_0x14e013(0x3b1)]['getRes'](_0x30b4f7);
                        if (_0x108482) {
                            var _0x33c029 = new _0x4b22d0();
                            _0x33c029[_0x14e013(0x2a5)] = _0x4976c1, _0x33c029['clip'] = _0x108482, _0x3c1f67[_0x14e013(0x356)](_0x33c029), _0x4d7316 === 0x0 && (this[_0x14e013(0x3b2)](_0x369122)[_0x14e013(0x348)] = _0x33c029);
                        }
                    }
                }
                _0x73f518 !== undefined && (_0x3c1f67[_0x14e013(0x359)] = _0x73f518);
                let _0x70ec8 = _0x5886dd[_0x14e013(0x34b)];
                if (_0x70ec8) {
                    let _0x5e1b66 = new _0x2be102(this);
                    _0x3c1f67[_0x14e013(0x34b)] = _0x5e1b66;
                    for (var _0x21d3a8 in _0x70ec8) {
                        _0x5e1b66[_0x14e013(0x371)](_0x21d3a8, _0x70ec8[_0x21d3a8]);
                    }
                }
            }
            var _0x365e87 = _0x3746b9[_0x14e013(0x377)];
            _0x365e87 !== undefined && (this['cullingMode'] = _0x365e87);
        }
        [_0x5659be(0x3b3)]() {
            var _0x588376 = _0x5659be, _0x32654c = this[_0x588376(0x380)][_0x588376(0x3a6)][_0x588376(0x3b4)], _0x3a0a19 = _0x32654c[_0x588376(0x3b5)] / 0x3e8;
            if (this['_speed'] === 0x0 || _0x3a0a19 === 0x0)
                return;
            var _0x503f29;
            if (this[_0x588376(0x377)] === _0x58a8c8[_0x588376(0x378)]) {
                _0x503f29 = ![];
                for (var _0x3ab482 = 0x0, _0xe872cd = this[_0x588376(0x376)][_0x588376(0x1ff)]; _0x3ab482 < _0xe872cd; _0x3ab482++) {
                    if (this[_0x588376(0x376)][_0x3ab482]['_render'][_0x588376(0x3b6)]) {
                        _0x503f29 = !![];
                        break;
                    }
                }
            } else
                _0x503f29 = !![];
            this[_0x588376(0x37b)]++;
            for (_0x3ab482 = 0x0, _0xe872cd = this[_0x588376(0x37f)][_0x588376(0x1ff)]; _0x3ab482 < _0xe872cd; _0x3ab482++) {
                var _0x19f007 = this[_0x588376(0x37f)][_0x3ab482], _0x164495 = _0x19f007[_0x588376(0x343)], _0x4da7cb = _0x19f007[_0x588376(0x344)];
                _0x1a22b3 = _0x19f007[_0x588376(0x345)] !== _0x5621c5[_0x588376(0x346)];
                switch (_0x19f007[_0x588376(0x33b)]) {
                case 0x0:
                    var _0x28b885 = _0x164495['_currentState'], _0x3c9858 = _0x28b885['_clip'], _0x1af4c4 = this[_0x588376(0x379)] * _0x28b885[_0x588376(0x35b)], _0x29814a = _0x164495[_0x588376(0x333)];
                    _0x29814a || this[_0x588376(0x389)](_0x28b885, _0x164495, _0x3a0a19 * _0x1af4c4, _0x3c9858[_0x588376(0x2a6)]);
                    if (_0x503f29) {
                        var _0x1a22b3 = _0x19f007['blendingMode'] !== _0x5621c5[_0x588376(0x346)];
                        this['_updateClipDatas'](_0x28b885, _0x1a22b3, _0x164495, _0x19f007['avatarMask']), this['_setClipDatasToNode'](_0x28b885, _0x1a22b3, _0x19f007['defaultWeight'], _0x3ab482 === 0x0, _0x19f007), _0x29814a || this['_updateEventScript'](_0x28b885, _0x164495);
                    }
                    break;
                case 0x1:
                    _0x28b885 = _0x164495[_0x588376(0x32e)], _0x3c9858 = _0x28b885[_0x588376(0x34e)];
                    var _0x211cf1 = _0x19f007[_0x588376(0x3b7)], _0x2950b0 = _0x211cf1[_0x588376(0x34e)], _0x2d30c8 = _0x19f007[_0x588376(0x33c)], _0x525228 = _0x4da7cb[_0x588376(0x334)], _0x1eb958 = _0x2950b0[_0x588376(0x316)] - _0x525228, _0x3bfead = _0x2d30c8 > _0x1eb958 ? _0x1eb958 / _0x2d30c8 : 0x1, _0x3cbff8 = this[_0x588376(0x379)] * _0x211cf1[_0x588376(0x35b)];
                    this['_updatePlayer'](_0x211cf1, _0x4da7cb, _0x3a0a19 * _0x3bfead * _0x3cbff8, _0x2950b0[_0x588376(0x2a6)]);
                    var _0x39b15d = (_0x4da7cb[_0x588376(0x335)] - _0x525228) / _0x3bfead / _0x2d30c8;
                    if (_0x39b15d >= 0x1)
                        _0x503f29 && (this['_updateClipDatas'](_0x211cf1, _0x1a22b3, _0x4da7cb, _0x19f007['avatarMask']), this[_0x588376(0x39b)](_0x211cf1, _0x1a22b3, _0x19f007['defaultWeight'], _0x3ab482 === 0x0, _0x19f007), _0x19f007[_0x588376(0x33b)] = 0x0, _0x164495[_0x588376(0x32e)] = _0x211cf1, _0x4da7cb[_0x588376(0x339)](_0x164495));
                    else {
                        if (!_0x164495['_finish']) {
                            _0x1af4c4 = this[_0x588376(0x379)] * _0x28b885[_0x588376(0x35b)], this[_0x588376(0x389)](_0x28b885, _0x164495, _0x3a0a19 * _0x1af4c4, _0x3c9858['islooping']);
                            if (_0x503f29)
                                this[_0x588376(0x38f)](_0x28b885, _0x1a22b3, _0x164495, _0x19f007[_0x588376(0x34b)]);
                        }
                        _0x503f29 && (this[_0x588376(0x38f)](_0x211cf1, _0x1a22b3, _0x4da7cb, _0x19f007[_0x588376(0x34b)]), this['_setCrossClipDatasToNode'](_0x19f007, _0x28b885, _0x211cf1, _0x39b15d, _0x3ab482 === 0x0));
                    }
                    _0x503f29 && (this[_0x588376(0x3b8)](_0x28b885, _0x164495), this['_updateEventScript'](_0x211cf1, _0x4da7cb));
                    break;
                case 0x2:
                    _0x211cf1 = _0x19f007[_0x588376(0x3b7)], _0x2950b0 = _0x211cf1[_0x588376(0x34e)], _0x2d30c8 = _0x19f007[_0x588376(0x33c)], _0x525228 = _0x4da7cb[_0x588376(0x334)], _0x1eb958 = _0x2950b0[_0x588376(0x316)] - _0x525228, _0x3bfead = _0x2d30c8 > _0x1eb958 ? _0x1eb958 / _0x2d30c8 : 0x1, _0x3cbff8 = this[_0x588376(0x379)] * _0x211cf1[_0x588376(0x35b)], this[_0x588376(0x389)](_0x211cf1, _0x4da7cb, _0x3a0a19 * _0x3bfead * _0x3cbff8, _0x2950b0[_0x588376(0x2a6)]);
                    _0x503f29 && (_0x39b15d = (_0x4da7cb[_0x588376(0x335)] - _0x525228) / _0x3bfead / _0x2d30c8, _0x39b15d >= 0x1 ? (this['_updateClipDatas'](_0x211cf1, _0x1a22b3, _0x4da7cb, _0x19f007[_0x588376(0x34b)]), this[_0x588376(0x39b)](_0x211cf1, _0x1a22b3, 0x1, _0x3ab482 === 0x0, _0x19f007), _0x19f007[_0x588376(0x33b)] = 0x0, _0x164495['_currentState'] = _0x211cf1, _0x4da7cb[_0x588376(0x339)](_0x164495)) : (this[_0x588376(0x38f)](_0x211cf1, _0x1a22b3, _0x4da7cb, _0x19f007['avatarMask']), this[_0x588376(0x39e)](_0x19f007, _0x211cf1, _0x39b15d, _0x3ab482 === 0x0)), this[_0x588376(0x3b8)](_0x211cf1, _0x4da7cb));
                    break;
                }
            }
            _0x503f29 && (this[_0x588376(0x385)] && this[_0x588376(0x3b9)]());
        }
        [_0x5659be(0x339)](_0x4c45c5) {
            var _0x1db804 = _0x5659be, _0x4adee0 = _0x4c45c5;
            _0x4adee0[_0x1db804(0x3ab)] = this['avatar'], _0x4adee0['cullingMode'] = this[_0x1db804(0x377)];
            for (var _0x57e7ce = 0x0, _0x512217 = this[_0x1db804(0x37f)][_0x1db804(0x1ff)]; _0x57e7ce < _0x512217; _0x57e7ce++) {
                var _0x115417 = this[_0x1db804(0x37f)][_0x57e7ce];
                _0x4adee0[_0x1db804(0x3ba)](_0x115417[_0x1db804(0x1f4)]());
                var _0x2f7de2 = _0x115417[_0x1db804(0x342)];
                for (var _0x443a2b = 0x0, _0x3a845e = _0x2f7de2[_0x1db804(0x1ff)]; _0x443a2b < _0x3a845e; _0x443a2b++) {
                    var _0x4d0812 = _0x2f7de2[_0x443a2b][_0x1db804(0x1f4)](), _0x4089be = _0x4adee0[_0x1db804(0x3b2)](_0x57e7ce);
                    _0x4089be[_0x1db804(0x356)](_0x4d0812), _0x443a2b == 0x0 && (_0x4089be[_0x1db804(0x348)] = _0x4d0812);
                }
            }
            _0x4adee0[_0x1db804(0x3bb)] = this['_linkSprites'], _0x4adee0[_0x1db804(0x3bc)](this[_0x1db804(0x3bb)]);
        }
        [_0x5659be(0x3a7)](_0x21a68e = 0x0) {
            var _0x474830 = _0x5659be, _0x364860 = this[_0x474830(0x37f)][_0x21a68e];
            return _0x364860[_0x474830(0x348)];
        }
        [_0x5659be(0x356)](_0x1028ce, _0x37f74e = 0x0) {
            var _0x21de4a = _0x5659be, _0x14c2d8 = this[_0x21de4a(0x37f)][_0x37f74e];
            _0x14c2d8[_0x21de4a(0x356)](_0x1028ce), console['warn'](_0x21de4a(0x3bd));
        }
        [_0x5659be(0x3be)](_0x1efb77, _0xa2c434 = 0x0) {
            var _0x58a37f = _0x5659be, _0x2bbc6b = this['_controllerLayers'][_0xa2c434];
            _0x2bbc6b[_0x58a37f(0x3be)](_0x1efb77), console[_0x58a37f(0x24e)]('Animator:this\x20function\x20is\x20discard,please\x20use\x20animatorControllerLayer.removeState()\x20instead.');
        }
        [_0x5659be(0x3ba)](_0x44820b) {
            var _0x71873 = _0x5659be;
            this[_0x71873(0x37f)][_0x71873(0x298)](_0x44820b), _0x44820b['_animator'] = this, _0x44820b[_0x71873(0x354)]();
            var _0x417734 = _0x44820b[_0x71873(0x342)];
            for (var _0xa2878c = 0x0, _0x22801c = _0x417734[_0x71873(0x1ff)]; _0xa2878c < _0x22801c; _0xa2878c++)
                this[_0x71873(0x358)](_0x417734[_0xa2878c]);
        }
        ['getControllerLayer'](_0x2d4bcf = 0x0) {
            var _0x375f63 = _0x5659be;
            return this[_0x375f63(0x37f)][_0x2d4bcf];
        }
        ['play'](_0x391011 = null, _0x3f3e59 = 0x0, _0x8ee5db = Number[_0x5659be(0x3bf)]) {
            var _0x46e453 = _0x5659be, _0x24b39f = this[_0x46e453(0x37f)][_0x3f3e59];
            if (_0x24b39f) {
                var _0x179e30 = _0x24b39f[_0x46e453(0x348)];
                if (!_0x391011 && !_0x179e30)
                    throw new Error('Animator:must\x20have\x20default\x20clip\x20value,please\x20set\x20clip\x20property.');
                var _0x467510 = _0x24b39f[_0x46e453(0x343)], _0x515529 = _0x467510[_0x46e453(0x32e)], _0x2d770b = _0x391011 ? _0x24b39f['_statesMap'][_0x391011] : _0x179e30, _0x18c0a6 = _0x2d770b[_0x46e453(0x34e)][_0x46e453(0x316)], _0x8dd7f9 = _0x2d770b[_0x46e453(0x34e)][_0x46e453(0x316)] * (_0x2d770b[_0x46e453(0x365)] - _0x2d770b['clipStart']);
                if (_0x515529 !== _0x2d770b) {
                    if (_0x8ee5db !== Number[_0x46e453(0x3bf)])
                        _0x467510[_0x46e453(0x332)](_0x18c0a6 * _0x8ee5db, _0x8dd7f9);
                    else
                        _0x467510['_resetPlayState'](0x0, _0x8dd7f9);
                    _0x515529 !== null && _0x515529 !== _0x2d770b && this['_revertDefaultKeyframeNodes'](_0x515529), _0x24b39f[_0x46e453(0x33b)] = 0x0, _0x467510[_0x46e453(0x32e)] = _0x2d770b;
                } else
                    _0x8ee5db !== Number['NEGATIVE_INFINITY'] && (_0x467510[_0x46e453(0x332)](_0x18c0a6 * _0x8ee5db, _0x8dd7f9), _0x24b39f['_playType'] = 0x0);
                var _0x1ed8f7 = _0x2d770b['_scripts'];
                if (_0x1ed8f7) {
                    for (var _0x85c7ba = 0x0, _0x211965 = _0x1ed8f7[_0x46e453(0x1ff)]; _0x85c7ba < _0x211965; _0x85c7ba++)
                        _0x1ed8f7[_0x85c7ba]['onStateEnter']();
                }
            } else
                console[_0x46e453(0x24e)](_0x46e453(0x3c0) + _0x3f3e59 + '.');
        }
        [_0x5659be(0x3c1)](_0x589373, _0x4c3332, _0x277338 = 0x0, _0x448f47 = Number[_0x5659be(0x3bf)]) {
            var _0x3d700a = _0x5659be, _0x31dfab = this['_controllerLayers'][_0x277338];
            if (_0x31dfab) {
                var _0x360c96 = _0x31dfab[_0x3d700a(0x34a)][_0x589373];
                if (_0x360c96) {
                    var _0xeb88c7 = _0x31dfab[_0x3d700a(0x33b)];
                    if (_0xeb88c7 === -0x1) {
                        this[_0x3d700a(0x3a8)](_0x589373, _0x277338, _0x448f47);
                        return;
                    }
                    var _0x520e05 = _0x31dfab['_crossPlayStateInfo'], _0x32738b = _0x31dfab['_crossNodesOwners'], _0x4fa335 = _0x31dfab[_0x3d700a(0x33f)], _0x49e0e4 = _0x31dfab[_0x3d700a(0x343)][_0x3d700a(0x32e)], _0x30bbdb = _0x360c96['_nodeOwners'], _0x51122d = _0x31dfab[_0x3d700a(0x341)], _0x3369ec = _0x360c96[_0x3d700a(0x34e)], _0x34ad51 = _0x3369ec['_nodes'], _0x499007 = _0x3369ec[_0x3d700a(0x3c2)], _0x33059f = 0x0;
                    switch (_0xeb88c7) {
                    case 0x0:
                        var _0xeb1314 = _0x49e0e4[_0x3d700a(0x350)], _0x594747 = _0x31dfab[_0x3d700a(0x340)], _0x36bdf6 = _0x49e0e4[_0x3d700a(0x34e)], _0x259b1a = _0x36bdf6['_nodes'], _0x43f1b3 = _0x36bdf6[_0x3d700a(0x3c2)];
                        _0x31dfab[_0x3d700a(0x33b)] = 0x1;
                        var _0x38323c = ++_0x31dfab[_0x3d700a(0x33d)];
                        _0x33059f = _0x31dfab['_crossNodesOwnersCount'] = 0x0;
                        for (var _0x26f409 = 0x0, _0x129577 = _0x259b1a[_0x3d700a(0x2a1)]; _0x26f409 < _0x129577; _0x26f409++) {
                            var _0x499b8e = _0x259b1a[_0x3d700a(0x2c2)](_0x26f409), _0x4aba72 = _0x499b8e[_0x3d700a(0x2ad)], _0x4870c3 = _0xeb1314[_0x4aba72];
                            if (_0x4870c3) {
                                var _0x5aa1a8 = _0x499b8e[_0x3d700a(0x2bb)];
                                _0x594747[_0x33059f] = _0x4aba72;
                                var _0x2aa94c = _0x499007[_0x5aa1a8];
                                if (_0x2aa94c)
                                    _0x51122d[_0x33059f] = _0x2aa94c['_indexInList'];
                                else
                                    _0x51122d[_0x33059f] = -0x1;
                                _0x4fa335[_0x5aa1a8] = _0x38323c, _0x32738b[_0x33059f] = _0x4870c3, _0x33059f++;
                            }
                        }
                        for (_0x26f409 = 0x0, _0x129577 = _0x34ad51[_0x3d700a(0x2a1)]; _0x26f409 < _0x129577; _0x26f409++) {
                            _0x2aa94c = _0x34ad51['getNodeByIndex'](_0x26f409);
                            var _0x3ce1f6 = _0x2aa94c[_0x3d700a(0x2ad)], _0x32787f = _0x30bbdb[_0x3ce1f6];
                            if (_0x32787f) {
                                var _0x3328b3 = _0x2aa94c['fullPath'];
                                !_0x43f1b3[_0x3328b3] && (_0x594747[_0x33059f] = -0x1, _0x51122d[_0x33059f] = _0x3ce1f6, _0x4fa335[_0x3328b3] = _0x38323c, _0x32738b[_0x33059f] = _0x32787f, _0x33059f++);
                            }
                        }
                        break;
                    case 0x1:
                    case 0x2:
                        _0x31dfab['_playType'] = 0x2;
                        for (_0x26f409 = 0x0, _0x129577 = _0x32738b[_0x3d700a(0x1ff)]; _0x26f409 < _0x129577; _0x26f409++) {
                            var _0x1b7f8e = _0x32738b[_0x26f409];
                            _0x1b7f8e['saveCrossFixedValue'](), _0x2aa94c = _0x499007[_0x1b7f8e['fullPath']];
                            if (_0x2aa94c)
                                _0x51122d[_0x26f409] = _0x2aa94c[_0x3d700a(0x2ad)];
                            else
                                _0x51122d[_0x26f409] = -0x1;
                        }
                        _0x33059f = _0x31dfab[_0x3d700a(0x39d)], _0x38323c = _0x31dfab['_crossMark'];
                        for (_0x26f409 = 0x0, _0x129577 = _0x34ad51[_0x3d700a(0x2a1)]; _0x26f409 < _0x129577; _0x26f409++) {
                            _0x2aa94c = _0x34ad51[_0x3d700a(0x2c2)](_0x26f409), _0x3ce1f6 = _0x2aa94c[_0x3d700a(0x2ad)], _0x32787f = _0x30bbdb[_0x3ce1f6], _0x32787f && (_0x3328b3 = _0x2aa94c[_0x3d700a(0x2bb)], _0x4fa335[_0x3328b3] !== _0x38323c && (_0x51122d[_0x33059f] = _0x3ce1f6, _0x4fa335[_0x3328b3] = _0x38323c, _0x1b7f8e = _0x30bbdb[_0x3ce1f6], _0x32738b[_0x33059f] = _0x1b7f8e, _0x1b7f8e[_0x3d700a(0x36c)](), _0x33059f++));
                        }
                        break;
                    }
                    _0x31dfab[_0x3d700a(0x39d)] = _0x33059f, _0x31dfab[_0x3d700a(0x3b7)] = _0x360c96, _0x31dfab[_0x3d700a(0x33c)] = _0x49e0e4[_0x3d700a(0x34e)][_0x3d700a(0x316)] * _0x4c3332;
                    if (_0x448f47 !== Number[_0x3d700a(0x3bf)])
                        _0x520e05[_0x3d700a(0x332)](_0x3369ec['_duration'] * _0x448f47, _0x31dfab[_0x3d700a(0x33c)]);
                    else
                        _0x520e05[_0x3d700a(0x332)](0x0, _0x31dfab['_crossDuration']);
                    var _0x27408d = _0x360c96[_0x3d700a(0x362)];
                    if (_0x27408d) {
                        for (_0x26f409 = 0x0, _0x129577 = _0x27408d[_0x3d700a(0x1ff)]; _0x26f409 < _0x129577; _0x26f409++)
                            _0x27408d[_0x26f409][_0x3d700a(0x3c3)]();
                    }
                } else
                    console[_0x3d700a(0x24e)](_0x3d700a(0x3c4) + _0x277338 + '.');
            } else
                console[_0x3d700a(0x24e)](_0x3d700a(0x3c0) + _0x277338 + '.');
        }
        [_0x5659be(0x3c5)](_0x3ecc19 = 0x0) {
            var _0x566554 = _0x5659be;
            return this[_0x566554(0x37f)][_0x3ecc19][_0x566554(0x343)];
        }
        get [_0x5659be(0x3ab)]() {
            var _0x4b5d87 = _0x5659be;
            return this[_0x4b5d87(0x385)];
        }
        set [_0x5659be(0x3ab)](_0x90524f) {
            var _0x5af68e = _0x5659be;
            if (this[_0x5af68e(0x385)] !== _0x90524f) {
                this[_0x5af68e(0x385)] = _0x90524f;
                if (_0x90524f)
                    this[_0x5af68e(0x3c6)](), this[_0x5af68e(0x380)][_0x5af68e(0x3c7)](this, _0x90524f);
                else {
                    var _0x1b154e = this[_0x5af68e(0x380)][_0x5af68e(0x2fd)];
                    this[_0x5af68e(0x380)][_0x5af68e(0x3c7)](this, _0x1b154e ? _0x1b154e[_0x5af68e(0x3a3)][_0x5af68e(0x385)] : null);
                }
            }
        }
        ['_isLinkSpriteToAnimationNodeData'](_0x1165b8, _0x17dfc2, _0x2e6c05) {
            var _0x175056 = _0x5659be, _0x4a6133 = this[_0x175056(0x375)][_0x17dfc2];
            if (_0x2e6c05)
                _0x4a6133 || (this[_0x175056(0x375)][_0x17dfc2] = _0x4a6133 = []), _0x4a6133[_0x175056(0x298)](_0x1165b8);
            else {
                var _0x136e1c = _0x4a6133[_0x175056(0x384)](_0x1165b8);
                _0x4a6133[_0x175056(0x32c)](_0x136e1c, 0x1);
            }
        }
        ['_getAvatarOwnersAndInitDatasAsync']() {
            var _0x53b4a3 = _0x5659be;
            for (var _0x4740eb = 0x0, _0x5f1bc5 = this[_0x53b4a3(0x37f)][_0x53b4a3(0x1ff)]; _0x4740eb < _0x5f1bc5; _0x4740eb++) {
                var _0xd7a2ff = this[_0x53b4a3(0x37f)][_0x4740eb][_0x53b4a3(0x342)];
                for (var _0x1ebaa7 = 0x0, _0x520501 = _0xd7a2ff[_0x53b4a3(0x1ff)]; _0x1ebaa7 < _0x520501; _0x1ebaa7++)
                    this[_0x53b4a3(0x358)](_0xd7a2ff[_0x1ebaa7]);
            }
            this['_avatar'][_0x53b4a3(0x3c8)](this);
            for (var _0x277195 in this['_linkAvatarSpritesData']) {
                var _0x279915 = this[_0x53b4a3(0x375)][_0x277195];
                if (_0x279915) {
                    for (var _0x607100 = 0x0, _0x42d314 = _0x279915['length']; _0x607100 < _0x42d314; _0x607100++)
                        this[_0x53b4a3(0x3c9)](_0x279915[_0x607100], _0x277195, !![]);
                }
            }
        }
        [_0x5659be(0x3c9)](_0xd3368a, _0x54338a, _0x533a72) {
            var _0x3eb21e = _0x5659be;
            if (this['_avatar']) {
                var _0xd33e7e = this[_0x3eb21e(0x386)][_0x54338a];
                if (_0xd33e7e) {
                    if (_0x533a72) {
                        _0xd3368a[_0x3eb21e(0x3ca)][_0x3eb21e(0x3cb)] = _0xd33e7e['transform'], this['_linkAvatarSprites'][_0x3eb21e(0x298)](_0xd3368a);
                        var _0x2ea784 = _0xd33e7e[_0x3eb21e(0x3cc)], _0x1deed0 = _0xd3368a[_0x3eb21e(0x3cc)];
                        if (!_0x1deed0[_0x3eb21e(0x380)][_0x3eb21e(0x3cd)] && _0x2ea784) {
                            var _0x476605 = _0x1deed0[_0x3eb21e(0x3ce)], _0x41f334 = this[_0x3eb21e(0x380)]['_transform']['_parent'];
                            if (_0x41f334)
                                _0x108d81[_0x3eb21e(0x2f6)](_0x41f334['worldMatrix'], _0x2ea784['getWorldMatrix'](), _0x476605);
                            else {
                                var _0x2ef7f8 = _0x476605[_0x3eb21e(0x1f6)], _0x464db8 = _0x2ea784[_0x3eb21e(0x3cf)]();
                                for (var _0x164dc3 = 0x0; _0x164dc3 < 0x10; _0x164dc3++)
                                    _0x2ef7f8[_0x164dc3] = _0x464db8[_0x164dc3];
                            }
                            _0x1deed0[_0x3eb21e(0x3ce)] = _0x476605;
                        }
                    } else
                        _0xd3368a['_transform'][_0x3eb21e(0x3cb)] = null, this[_0x3eb21e(0x3d0)][_0x3eb21e(0x32c)](this['_linkAvatarSprites'][_0x3eb21e(0x384)](_0xd3368a), 0x1);
                }
            }
        }
        [_0x5659be(0x3b9)]() {
            var _0x4ddd76 = _0x5659be;
            for (var _0x348c34 = 0x0, _0x384ac9 = this[_0x4ddd76(0x3d0)][_0x4ddd76(0x1ff)]; _0x348c34 < _0x384ac9; _0x348c34++) {
                var _0x25f060 = this[_0x4ddd76(0x3d0)][_0x348c34], _0x3aec5b = _0x25f060[_0x4ddd76(0x3cc)]['_dummy'], _0x8526aa = _0x25f060[_0x4ddd76(0x3cc)];
                if (!_0x8526aa[_0x4ddd76(0x380)][_0x4ddd76(0x3cd)] && _0x3aec5b) {
                    var _0x147937 = _0x8526aa[_0x4ddd76(0x3ce)], _0x8cd07c = this[_0x4ddd76(0x380)][_0x4ddd76(0x3ca)];
                    _0x108d81[_0x4ddd76(0x2f6)](_0x8cd07c[_0x4ddd76(0x3ce)], _0x3aec5b[_0x4ddd76(0x3cf)](), _0x147937), _0x8526aa[_0x4ddd76(0x3ce)] = _0x147937;
                }
            }
        }
        [_0x5659be(0x381)](_0x1a7d6e, _0x517342) {
            var _0x561382 = _0x5659be;
            return this[_0x561382(0x3d1)](_0x517342, _0x1a7d6e, !![]), this[_0x561382(0x3c9)](_0x517342, _0x1a7d6e, !![]), !![];
        }
        [_0x5659be(0x3d2)](_0x3c985a) {
            var _0x529ab8 = _0x5659be, _0x39c87e = _0x3c985a[_0x529ab8(0x3cc)]['_dummy'];
            if (_0x39c87e) {
                var _0x5e6d6b = _0x39c87e[_0x529ab8(0x3d3)][_0x529ab8(0x2a5)];
                return this[_0x529ab8(0x3d1)](_0x3c985a, _0x5e6d6b, ![]), this[_0x529ab8(0x3c9)](_0x3c985a, _0x5e6d6b, ![]), !![];
            } else
                return ![];
        }
        [_0x5659be(0x3d4)](_0x56e01c, _0x3aa7d6, _0x34710a, _0x2cb645, _0x30fa03) {
            var _0x12e9c0 = _0x5659be;
            _0x218b83[_0x12e9c0(0x2f3)]['instance'][_0x12e9c0(0x3d5)](_0x56e01c, _0x3aa7d6, _0x34710a, _0x30fa03, _0x2cb645);
        }
    }
    _0x58a8c8[_0x5659be(0x3d6)] = new _0x3f70c5(), _0x58a8c8[_0x5659be(0x392)] = new _0x22f58f(), _0x58a8c8['CULLINGMODE_ALWAYSANIMATE'] = 0x0, _0x58a8c8[_0x5659be(0x378)] = 0x2;
    class _0x51310c {
        constructor() {
            var _0x1cf829 = _0x5659be;
            this[_0x1cf829(0x3d7)] = ![], this[_0x1cf829(0x3d8)] = _0x1cf829(0x3d9);
        }
    }
    _0x51310c['_instance'] = new _0x51310c();
    class _0x164148 extends _0x218b83[_0x5659be(0x3da)] {
        constructor(_0x1e7761, _0xa1a059, _0x1bdfa9 = _0x218b83[_0x5659be(0x302)][_0x5659be(0x2c7)], _0x4bbd9b = _0x218b83[_0x5659be(0x3db)][_0x5659be(0x3dc)], _0x3a2eb3 = 0x1) {
            var _0x4448e0 = _0x5659be;
            super(_0x1bdfa9, ![]), this[_0x4448e0(0x3dd)] = ![], this[_0x4448e0(0x3de)] = 0x1, this[_0x4448e0(0x3df)] = ![], this[_0x4448e0(0x3e0)] = ![], this[_0x4448e0(0x3e1)] = _0x218b83['LayaGL']['instance'][_0x4448e0(0x3e2)], this[_0x4448e0(0x3e3)] = _0x1e7761, this[_0x4448e0(0x3e4)] = _0xa1a059, this[_0x4448e0(0x3e5)] = _0x4bbd9b, this[_0x4448e0(0x3e6)] = 0x1, this[_0x4448e0(0x3de)] = _0x3a2eb3, this['_create'](_0x1e7761, _0xa1a059);
        }
        static get [_0x5659be(0x3e7)]() {
            var _0x3440ec = _0x5659be;
            return _0x164148[_0x3440ec(0x3e8)];
        }
        static [_0x5659be(0x3e9)](_0x5238ff, _0x974699, _0x44ccf7 = _0x218b83[_0x5659be(0x302)][_0x5659be(0x2c7)], _0x14ee2a = _0x218b83[_0x5659be(0x3db)][_0x5659be(0x3dc)], _0x19d86d = 0x1) {
            var _0x52b7bd = _0x5659be, _0x40e8e2;
            for (var _0x2b3f44 = 0x0, _0x2e2918 = _0x164148[_0x52b7bd(0x3ea)][_0x52b7bd(0x1ff)]; _0x2b3f44 < _0x2e2918; _0x2b3f44++) {
                _0x40e8e2 = _0x164148[_0x52b7bd(0x3ea)][_0x2b3f44];
                if (_0x40e8e2['_width'] == _0x5238ff && _0x40e8e2[_0x52b7bd(0x3e4)] == _0x974699 && _0x40e8e2[_0x52b7bd(0x3eb)] == _0x44ccf7 && _0x40e8e2['_depthStencilFormat'] == _0x14ee2a && _0x40e8e2[_0x52b7bd(0x3de)] == _0x19d86d) {
                    _0x40e8e2[_0x52b7bd(0x3dd)] = ![];
                    var _0x473445 = _0x164148[_0x52b7bd(0x3ea)][_0x2e2918 - 0x1];
                    return _0x164148[_0x52b7bd(0x3ea)][_0x2b3f44] = _0x473445, _0x164148[_0x52b7bd(0x3ea)][_0x52b7bd(0x1ff)] -= 0x1, _0x40e8e2;
                }
            }
            return _0x40e8e2 = new _0x164148(_0x5238ff, _0x974699, _0x44ccf7, _0x14ee2a, _0x19d86d), _0x40e8e2[_0x52b7bd(0x30b)] = !![], _0x40e8e2;
        }
        static ['recoverToPool'](_0x3c25aa) {
            var _0x3da3fb = _0x5659be;
            if (_0x3c25aa[_0x3da3fb(0x3dd)])
                return;
            _0x164148['_pool'][_0x3da3fb(0x298)](_0x3c25aa), _0x3c25aa[_0x3da3fb(0x3dd)] = !![];
        }
        get [_0x5659be(0x3ec)]() {
            return this['_depthStencilFormat'];
        }
        get ['defaulteTexture']() {
            return _0x218b83['Texture2D']['grayTexture'];
        }
        get ['mulSampler']() {
            var _0x57596b = _0x5659be;
            return this[_0x57596b(0x3de)];
        }
        ['_create'](_0x3dab60, _0x37723f) {
            var _0xbb1bbe = _0x5659be, _0x1430fe = _0x218b83[_0xbb1bbe(0x2f3)][_0xbb1bbe(0x2f4)], _0x443429 = _0x1430fe, _0x5cf1ca = this[_0xbb1bbe(0x3e1)], _0x4163bf = _0x218b83[_0xbb1bbe(0x2f3)][_0xbb1bbe(0x3ed)], _0x409266 = _0x4163bf['_isWebGL2'], _0x1c2d7 = this['_format'];
            this[_0xbb1bbe(0x3ee)] = _0x1430fe[_0xbb1bbe(0x3ef)](), _0x1430fe[_0xbb1bbe(0x3f0)](_0x1430fe['FRAMEBUFFER'], this['_frameBuffer']), this[_0xbb1bbe(0x3df)] = _0x409266 && this['_mulSampler'] > 0x1;
            if (_0x1c2d7 !== _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x3f1)] && _0x1c2d7 !== _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x3f2)]) {
                if (this['_mulSamplerRT']) {
                    this[_0xbb1bbe(0x3f3)] = _0x443429[_0xbb1bbe(0x3f4)](), _0x443429[_0xbb1bbe(0x3f5)](_0x443429['RENDERBUFFER'], this[_0xbb1bbe(0x3f3)]);
                    switch (_0x1c2d7) {
                    case _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x2c7)]:
                        _0x443429[_0xbb1bbe(0x3f6)](_0x443429[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x3de)], _0x443429[_0xbb1bbe(0x3f8)], _0x3dab60, _0x37723f);
                        break;
                    case _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x2c8)]:
                        _0x443429[_0xbb1bbe(0x3f6)](_0x443429[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x3de)], _0x443429['RGBA8'], _0x3dab60, _0x37723f);
                        break;
                    case _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x2c9)]:
                        _0x443429[_0xbb1bbe(0x3f6)](_0x443429[_0xbb1bbe(0x3f7)], this['_mulSampler'], _0x443429[_0xbb1bbe(0x3f9)], _0x3dab60, _0x37723f);
                        break;
                    case _0x218b83[_0xbb1bbe(0x302)]['R16G16B16A16']:
                        _0x443429['renderbufferStorageMultisample'](_0x443429['RENDERBUFFER'], this[_0xbb1bbe(0x3de)], _0x443429[_0xbb1bbe(0x3fa)], _0x3dab60, _0x37723f);
                        break;
                    }
                    _0x443429[_0xbb1bbe(0x3fb)](_0x1430fe[_0xbb1bbe(0x3fc)], _0x1430fe[_0xbb1bbe(0x3fd)], _0x1430fe['RENDERBUFFER'], this[_0xbb1bbe(0x3f3)]);
                }
                _0x218b83[_0xbb1bbe(0x3fe)][_0xbb1bbe(0x3ff)](_0x1430fe, _0x5cf1ca, this[_0xbb1bbe(0x400)]);
                switch (_0x1c2d7) {
                case _0x218b83[_0xbb1bbe(0x302)]['R8G8B8']:
                    if (_0x409266)
                        _0x443429[_0xbb1bbe(0x401)](_0x5cf1ca, this[_0xbb1bbe(0x3e6)], _0x443429['RGB8'], _0x3dab60, _0x37723f);
                    else
                        _0x1430fe[_0xbb1bbe(0x402)](_0x5cf1ca, 0x0, _0x1430fe[_0xbb1bbe(0x403)], _0x3dab60, _0x37723f, 0x0, _0x1430fe['RGB'], _0x1430fe['UNSIGNED_BYTE'], null);
                    break;
                case _0x218b83['RenderTextureFormat'][_0xbb1bbe(0x2c8)]:
                    if (_0x409266)
                        _0x443429[_0xbb1bbe(0x401)](_0x5cf1ca, this[_0xbb1bbe(0x3e6)], _0x443429[_0xbb1bbe(0x404)], _0x3dab60, _0x37723f);
                    else
                        _0x1430fe['texImage2D'](_0x5cf1ca, 0x0, _0x1430fe[_0xbb1bbe(0x405)], _0x3dab60, _0x37723f, 0x0, _0x1430fe[_0xbb1bbe(0x405)], _0x1430fe['UNSIGNED_BYTE'], null);
                    break;
                case _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x2c9)]:
                    if (_0x409266)
                        _0x443429[_0xbb1bbe(0x401)](_0x5cf1ca, this[_0xbb1bbe(0x406)], _0x443429['R8'], _0x3dab60, _0x37723f);
                    else
                        _0x1430fe[_0xbb1bbe(0x402)](_0x5cf1ca, 0x0, _0x1430fe['ALPHA'], _0x3dab60, _0x37723f, 0x0, _0x1430fe['ALPHA'], _0x1430fe['UNSIGNED_BYTE'], null);
                    break;
                case _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x303)]:
                    if (_0x409266)
                        _0x443429[_0xbb1bbe(0x401)](_0x5cf1ca, this[_0xbb1bbe(0x3e6)], _0x443429[_0xbb1bbe(0x3fa)], _0x3dab60, _0x37723f);
                    else
                        _0x1430fe[_0xbb1bbe(0x402)](_0x5cf1ca, 0x0, _0x1430fe[_0xbb1bbe(0x405)], _0x3dab60, _0x37723f, 0x0, _0x1430fe[_0xbb1bbe(0x405)], _0x4163bf[_0xbb1bbe(0x407)][_0xbb1bbe(0x408)], null);
                    break;
                }
                if (this[_0xbb1bbe(0x3df)])
                    this['_mulFrameBuffer'] = _0x443429[_0xbb1bbe(0x3ef)](), _0x1430fe[_0xbb1bbe(0x3f0)](_0x1430fe['FRAMEBUFFER'], this[_0xbb1bbe(0x409)]), _0x1430fe['framebufferTexture2D'](_0x443429['FRAMEBUFFER'], _0x443429['COLOR_ATTACHMENT0'], _0x443429['TEXTURE_2D'], this[_0xbb1bbe(0x400)], 0x0);
                else
                    _0x1430fe['framebufferTexture2D'](_0x1430fe[_0xbb1bbe(0x3fc)], _0x1430fe[_0xbb1bbe(0x3fd)], _0x1430fe[_0xbb1bbe(0x3e2)], this['_glTexture'], 0x0);
            }
            if (_0x1c2d7 == _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x3f1)] || _0x1c2d7 == _0x218b83[_0xbb1bbe(0x302)][_0xbb1bbe(0x3f2)]) {
                _0x1430fe[_0xbb1bbe(0x3f0)](_0x1430fe['FRAMEBUFFER'], this[_0xbb1bbe(0x3ee)]), _0x218b83['WebGLContext'][_0xbb1bbe(0x3ff)](_0x1430fe, _0x5cf1ca, this[_0xbb1bbe(0x400)]), this[_0xbb1bbe(0x2ce)] = _0x218b83['FilterMode'][_0xbb1bbe(0x2cf)];
                switch (this[_0xbb1bbe(0x3e5)]) {
                case _0x218b83['RenderTextureDepthFormat']['DEPTH_16']:
                    if (_0x409266)
                        _0x443429[_0xbb1bbe(0x401)](_0x5cf1ca, this[_0xbb1bbe(0x3e6)], _0x443429[_0xbb1bbe(0x40a)], _0x3dab60, _0x37723f);
                    else
                        _0x1430fe[_0xbb1bbe(0x402)](_0x5cf1ca, 0x0, _0x1430fe['DEPTH_COMPONENT'], _0x3dab60, _0x37723f, 0x0, _0x1430fe['DEPTH_COMPONENT'], _0x1430fe[_0xbb1bbe(0x40b)], null);
                    _0x1430fe[_0xbb1bbe(0x40c)](_0x1430fe['FRAMEBUFFER'], _0x1430fe[_0xbb1bbe(0x40d)], _0x1430fe[_0xbb1bbe(0x3e2)], this[_0xbb1bbe(0x400)], 0x0);
                    break;
                case _0x218b83[_0xbb1bbe(0x3db)]['DEPTHSTENCIL_24_8']:
                    if (_0x409266)
                        _0x443429[_0xbb1bbe(0x401)](_0x5cf1ca, this['_mipmapCount'], _0x443429[_0xbb1bbe(0x40e)], _0x3dab60, _0x37723f);
                    else
                        _0x1430fe['texImage2D'](_0x5cf1ca, 0x0, _0x1430fe['DEPTH_STENCIL'], _0x3dab60, _0x37723f, 0x0, _0x1430fe[_0xbb1bbe(0x40f)], _0x4163bf['_webgl_depth_texture']['UNSIGNED_INT_24_8_WEBGL'], null);
                    _0x1430fe[_0xbb1bbe(0x40c)](_0x1430fe[_0xbb1bbe(0x3fc)], _0x1430fe[_0xbb1bbe(0x410)], _0x1430fe[_0xbb1bbe(0x3e2)], this['_glTexture'], 0x0);
                    break;
                default:
                    throw 'RenderTexture:\x20depth\x20format\x20RenderTexture\x20must\x20use\x20depthFormat\x20with\x20DEPTH_16\x20and\x20DEPTHSTENCIL_16_8.';
                }
                if (_0x409266 && _0x1c2d7 == _0x218b83['RenderTextureFormat'][_0xbb1bbe(0x3f2)])
                    _0x443429[_0xbb1bbe(0x411)](_0x5cf1ca, _0x443429[_0xbb1bbe(0x412)], _0x443429['COMPARE_REF_TO_TEXTURE']);
            } else {
                _0x1430fe[_0xbb1bbe(0x3f0)](_0x1430fe[_0xbb1bbe(0x3fc)], this['_frameBuffer']);
                if (this[_0xbb1bbe(0x3e5)] !== _0x218b83[_0xbb1bbe(0x3db)][_0xbb1bbe(0x413)]) {
                    this[_0xbb1bbe(0x414)] = _0x1430fe[_0xbb1bbe(0x3f4)](), _0x1430fe[_0xbb1bbe(0x3f5)](_0x1430fe[_0xbb1bbe(0x3f7)], this['_depthStencilBuffer']);
                    if (this['_mulSamplerRT'])
                        switch (this[_0xbb1bbe(0x3e5)]) {
                        case _0x218b83['RenderTextureDepthFormat'][_0xbb1bbe(0x3dc)]:
                            _0x443429['renderbufferStorageMultisample'](_0x1430fe[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x3de)], _0x443429['DEPTH_COMPONENT16'], _0x3dab60, _0x37723f), _0x443429[_0xbb1bbe(0x3fb)](_0x1430fe[_0xbb1bbe(0x3fc)], _0x443429['DEPTH_ATTACHMENT'], _0x1430fe[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x414)]);
                            break;
                        case _0x218b83[_0xbb1bbe(0x3db)]['STENCIL_8']:
                            _0x443429[_0xbb1bbe(0x3f6)](_0x1430fe[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x3de)], _0x443429[_0xbb1bbe(0x415)], _0x3dab60, _0x37723f), _0x443429[_0xbb1bbe(0x3fb)](_0x1430fe[_0xbb1bbe(0x3fc)], _0x443429['STENCIL_ATTACHMENT'], _0x1430fe['RENDERBUFFER'], this['_depthStencilBuffer']);
                            break;
                        case _0x218b83[_0xbb1bbe(0x3db)][_0xbb1bbe(0x416)]:
                            _0x443429['renderbufferStorageMultisample'](_0x1430fe[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x3de)], _0x443429[_0xbb1bbe(0x40f)], _0x3dab60, _0x37723f), _0x443429[_0xbb1bbe(0x3fb)](_0x1430fe[_0xbb1bbe(0x3fc)], _0x443429[_0xbb1bbe(0x410)], _0x1430fe[_0xbb1bbe(0x3f7)], this['_depthStencilBuffer']);
                            break;
                        default:
                            throw 'RenderTexture:\x20unkonw\x20depth\x20format.';
                        }
                    else
                        switch (this[_0xbb1bbe(0x3e5)]) {
                        case _0x218b83[_0xbb1bbe(0x3db)][_0xbb1bbe(0x3dc)]:
                            _0x1430fe[_0xbb1bbe(0x417)](_0x1430fe[_0xbb1bbe(0x3f7)], _0x1430fe['DEPTH_COMPONENT16'], _0x3dab60, _0x37723f), _0x1430fe['framebufferRenderbuffer'](_0x1430fe[_0xbb1bbe(0x3fc)], _0x443429[_0xbb1bbe(0x40d)], _0x1430fe[_0xbb1bbe(0x3f7)], this['_depthStencilBuffer']);
                            break;
                        case _0x218b83[_0xbb1bbe(0x3db)][_0xbb1bbe(0x418)]:
                            _0x1430fe['renderbufferStorage'](_0x1430fe['RENDERBUFFER'], _0x1430fe[_0xbb1bbe(0x415)], _0x3dab60, _0x37723f), _0x1430fe[_0xbb1bbe(0x3fb)](_0x1430fe['FRAMEBUFFER'], _0x1430fe[_0xbb1bbe(0x419)], _0x1430fe[_0xbb1bbe(0x3f7)], this['_depthStencilBuffer']);
                            break;
                        case _0x218b83[_0xbb1bbe(0x3db)][_0xbb1bbe(0x416)]:
                            _0x1430fe[_0xbb1bbe(0x417)](_0x1430fe[_0xbb1bbe(0x3f7)], _0x1430fe[_0xbb1bbe(0x40f)], _0x3dab60, _0x37723f), _0x1430fe['framebufferRenderbuffer'](_0x1430fe[_0xbb1bbe(0x3fc)], _0x1430fe[_0xbb1bbe(0x410)], _0x1430fe[_0xbb1bbe(0x3f7)], this[_0xbb1bbe(0x414)]);
                            break;
                        default:
                            throw 'RenderTexture:\x20unkonw\x20depth\x20format.';
                        }
                    _0x1430fe[_0xbb1bbe(0x3f5)](_0x1430fe[_0xbb1bbe(0x3f7)], null);
                }
            }
            _0x1430fe['bindFramebuffer'](_0x1430fe['FRAMEBUFFER'], null), this[_0xbb1bbe(0x41a)](_0x1430fe[_0xbb1bbe(0x41b)], this[_0xbb1bbe(0x41c)]), this[_0xbb1bbe(0x41a)](_0x1430fe[_0xbb1bbe(0x41d)], this[_0xbb1bbe(0x41e)]), this['_setFilterMode'](this['_filterMode']), this[_0xbb1bbe(0x41f)](this[_0xbb1bbe(0x420)]), this[_0xbb1bbe(0x421)] = !![], this[_0xbb1bbe(0x422)](), this[_0xbb1bbe(0x423)](_0x3dab60 * _0x37723f * 0x4);
        }
        [_0x5659be(0x424)]() {
            var _0x2b4d0d = _0x5659be, _0x2e1b3a = _0x218b83[_0x2b4d0d(0x2f3)][_0x2b4d0d(0x2f4)];
            _0x2e1b3a['bindFramebuffer'](_0x2e1b3a[_0x2b4d0d(0x3fc)], this[_0x2b4d0d(0x3ee)]), _0x164148[_0x2b4d0d(0x3e8)] = this, this[_0x2b4d0d(0x3e0)] && (_0x51310c[_0x2b4d0d(0x425)][_0x2b4d0d(0x3d7)] = !![]), this[_0x2b4d0d(0x421)] = ![];
        }
        [_0x5659be(0x426)]() {
            var _0x2ac573 = _0x5659be, _0xce6923 = _0x218b83['LayaGL'][_0x2ac573(0x2f4)], _0x10c576 = _0xce6923;
            this[_0x2ac573(0x3df)] && (_0x10c576[_0x2ac573(0x3f0)](_0x10c576['READ_FRAMEBUFFER'], this[_0x2ac573(0x3ee)]), _0x10c576[_0x2ac573(0x3f0)](_0x10c576['DRAW_FRAMEBUFFER'], this[_0x2ac573(0x409)]), _0x10c576[_0x2ac573(0x427)](_0x10c576[_0x2ac573(0x428)], 0x0, [
                0x0,
                0x0,
                0x0,
                0x0
            ]), _0x10c576[_0x2ac573(0x429)](0x0, 0x0, this['width'], this['height'], 0x0, 0x0, this[_0x2ac573(0x3e3)], this[_0x2ac573(0x3e4)], _0x10c576[_0x2ac573(0x42a)], _0xce6923[_0x2ac573(0x42b)])), _0xce6923[_0x2ac573(0x3f0)](_0xce6923[_0x2ac573(0x3fc)], null), _0x164148[_0x2ac573(0x3e8)] = null, this[_0x2ac573(0x3e0)] && (_0x51310c[_0x2ac573(0x425)][_0x2ac573(0x3d7)] = ![]), this[_0x2ac573(0x421)] = !![];
        }
        [_0x5659be(0x307)](_0x227c60, _0x292b61, _0x52c68c, _0xd005c6, _0x3709d8) {
            var _0x11bf91 = _0x5659be;
            if (_0x218b83[_0x11bf91(0x308)][_0x11bf91(0x309)] && window['conchConfig'][_0x11bf91(0x42c)] == 0x2)
                throw 'native\x202\x20thread\x20mode\x20use\x20getDataAsync';
            var _0x2262e5 = _0x218b83[_0x11bf91(0x2f3)][_0x11bf91(0x2f4)];
            _0x2262e5[_0x11bf91(0x3f0)](_0x2262e5[_0x11bf91(0x3fc)], this[_0x11bf91(0x3ee)]);
            var _0x45307b = _0x2262e5[_0x11bf91(0x42d)](_0x2262e5[_0x11bf91(0x3fc)]) === _0x2262e5[_0x11bf91(0x42e)];
            if (!_0x45307b)
                return _0x2262e5[_0x11bf91(0x3f0)](_0x2262e5['FRAMEBUFFER'], null), null;
            switch (this['format']) {
            case _0x218b83[_0x11bf91(0x302)][_0x11bf91(0x2c7)]:
                _0x2262e5['readPixels'](_0x227c60, _0x292b61, _0x52c68c, _0xd005c6, _0x2262e5[_0x11bf91(0x405)], _0x2262e5['UNSIGNED_BYTE'], _0x3709d8);
                break;
            case _0x218b83[_0x11bf91(0x302)][_0x11bf91(0x2c8)]:
                _0x2262e5[_0x11bf91(0x42f)](_0x227c60, _0x292b61, _0x52c68c, _0xd005c6, _0x2262e5[_0x11bf91(0x405)], _0x2262e5[_0x11bf91(0x430)], _0x3709d8);
                break;
            case _0x218b83['RenderTextureFormat'][_0x11bf91(0x303)]:
                _0x2262e5[_0x11bf91(0x42f)](_0x227c60, _0x292b61, _0x52c68c, _0xd005c6, _0x2262e5[_0x11bf91(0x405)], _0x2262e5[_0x11bf91(0x431)], _0x3709d8);
                debugger;
                break;
            }
            return _0x2262e5[_0x11bf91(0x3f0)](_0x2262e5[_0x11bf91(0x3fc)], null), _0x3709d8;
        }
        [_0x5659be(0x32d)]() {
            var _0x34f672 = _0x5659be;
            if (this['_frameBuffer']) {
                var _0x215784 = _0x218b83[_0x34f672(0x2f3)][_0x34f672(0x2f4)];
                _0x215784[_0x34f672(0x432)](this['_glTexture']), _0x215784['deleteFramebuffer'](this[_0x34f672(0x3ee)]), _0x215784[_0x34f672(0x433)](this['_depthStencilBuffer']), this[_0x34f672(0x400)] = null, this[_0x34f672(0x3ee)] = null, this[_0x34f672(0x414)] = null, this[_0x34f672(0x423)](0x0);
            }
        }
        [_0x5659be(0x434)](_0x437df8, _0x75f90b, _0x19a1a8, _0x533bf4, _0x44270d) {
            var _0x51967b = _0x5659be, _0x4db644 = _0x218b83[_0x51967b(0x2f3)][_0x51967b(0x2f4)];
            _0x4db644['bindFramebuffer'](_0x4db644[_0x51967b(0x3fc)], this['_frameBuffer']), _0x4db644[_0x51967b(0x435)](_0x437df8, _0x75f90b, _0x19a1a8, _0x533bf4, _0x4db644[_0x51967b(0x405)], _0x4db644[_0x51967b(0x430)], function (_0x1144d2) {
                _0x44270d(new Uint8Array(_0x1144d2));
            }), _0x4db644[_0x51967b(0x3f0)](_0x4db644[_0x51967b(0x3fc)], null);
        }
    }
    _0x164148['_pool'] = [];
    class _0x23f873 {
        constructor() {
            this['_mask'] = [], this['_length'] = 0x0;
        }
        [_0x5659be(0x436)](_0x4160a7) {
            var _0x73bb05 = _0x5659be, _0xf36417 = _0x4160a7['_mask'], _0x2f0006 = this[_0x73bb05(0x437)];
            for (var _0x249ff7 = this[_0x73bb05(0x438)] - 0x1; _0x249ff7 >= 0x0; _0x249ff7--) {
                var _0x5bf844 = _0x2f0006[_0x249ff7] & _0xf36417[_0x249ff7];
                if (_0x5bf844 == 0x0 && _0x249ff7 == this['_length'] - 0x1)
                    this[_0x73bb05(0x438)]--;
                else
                    _0x2f0006[_0x249ff7] = _0x5bf844;
            }
        }
        [_0x5659be(0x201)](_0x4b5d4e) {
            var _0x41d503 = _0x5659be, _0x1546a1 = _0x4b5d4e[_0x41d503(0x439)], _0x14eb20 = _0x1546a1 + 0x1, _0x310d52 = this['_mask'], _0x2dee18 = this[_0x41d503(0x438)];
            if (_0x2dee18 < _0x14eb20) {
                _0x310d52[_0x41d503(0x1ff)] < _0x14eb20 && (_0x310d52['length'] = _0x14eb20);
                for (; _0x2dee18 < _0x1546a1; _0x2dee18++)
                    _0x310d52[_0x2dee18] = 0x0;
                _0x310d52[_0x1546a1] = _0x4b5d4e[_0x41d503(0x43a)], this['_length'] = _0x14eb20;
            } else
                _0x310d52[_0x1546a1] |= _0x4b5d4e[_0x41d503(0x43a)];
        }
        ['remove'](_0x1921c3) {
            var _0x8d31c6 = _0x5659be, _0x544d39 = _0x1921c3['_index'], _0x1a6d6e = this[_0x8d31c6(0x437)], _0x3302fe = this[_0x8d31c6(0x438)] - 0x1;
            if (_0x544d39 > _0x3302fe)
                return;
            var _0x474a4c = _0x1a6d6e[_0x544d39] & ~_0x1921c3[_0x8d31c6(0x43a)];
            if (_0x544d39 == _0x3302fe && _0x474a4c === 0x0)
                this[_0x8d31c6(0x438)]--;
            else
                _0x1a6d6e[_0x544d39] = _0x474a4c;
        }
        [_0x5659be(0x43b)](_0x15ca1d) {
            var _0x1ec0f8 = _0x5659be, _0x198452 = _0x15ca1d[_0x1ec0f8(0x437)], _0x15a497 = _0x15ca1d[_0x1ec0f8(0x438)], _0x47fda4 = this[_0x1ec0f8(0x437)], _0x3396e8 = this[_0x1ec0f8(0x438)];
            if (_0x3396e8 < _0x15a497) {
                _0x47fda4[_0x1ec0f8(0x1ff)] = _0x15a497;
                for (var _0x3f7178 = 0x0; _0x3f7178 < _0x3396e8; _0x3f7178++)
                    _0x47fda4[_0x3f7178] |= _0x198452[_0x3f7178];
                for (; _0x3f7178 < _0x15a497; _0x3f7178++)
                    _0x47fda4[_0x3f7178] = _0x198452[_0x3f7178];
                this[_0x1ec0f8(0x438)] = _0x15a497;
            } else
                for (var _0x3f7178 = 0x0; _0x3f7178 < _0x15a497; _0x3f7178++) {
                    _0x47fda4[_0x3f7178] |= _0x198452[_0x3f7178];
                }
        }
        [_0x5659be(0x43c)](_0x48159d) {
            var _0x2557c0 = _0x5659be, _0x5d7fc7 = _0x48159d[_0x2557c0(0x437)], _0x553d78 = this[_0x2557c0(0x437)], _0x41d694 = this[_0x2557c0(0x438)] - 0x1, _0xd4a251 = Math[_0x2557c0(0x204)](_0x48159d[_0x2557c0(0x438)], _0x41d694);
            for (; _0xd4a251 >= 0x0; _0xd4a251--) {
                var _0x5ce08f = _0x553d78[_0xd4a251] & ~_0x5d7fc7[_0xd4a251];
                _0xd4a251 == _0x41d694 && _0x5ce08f === 0x0 ? (_0x41d694--, this[_0x2557c0(0x438)]--) : _0x553d78[_0xd4a251] = _0x5ce08f;
            }
        }
        [_0x5659be(0x43d)](_0x170ba5) {
            var _0x188179 = _0x5659be, _0x45b73e = _0x170ba5[_0x188179(0x439)];
            if (_0x45b73e >= this[_0x188179(0x438)])
                return ![];
            return (this[_0x188179(0x437)][_0x45b73e] & _0x170ba5['_value']) !== 0x0;
        }
        ['clear']() {
            var _0x5453f0 = _0x5659be;
            this[_0x5453f0(0x438)] = 0x0;
        }
        [_0x5659be(0x1f0)](_0x59b3c2) {
            var _0x203bb5 = _0x5659be, _0x58e8f8 = _0x59b3c2, _0x2eb4dc = _0x58e8f8[_0x203bb5(0x437)], _0x1aebf2 = this[_0x203bb5(0x437)], _0x267b9e = this[_0x203bb5(0x438)];
            _0x2eb4dc[_0x203bb5(0x1ff)] = _0x267b9e;
            for (var _0x3e49d0 = 0x0; _0x3e49d0 < _0x267b9e; _0x3e49d0++)
                _0x2eb4dc[_0x3e49d0] = _0x1aebf2[_0x3e49d0];
            _0x58e8f8[_0x203bb5(0x438)] = _0x267b9e;
        }
        [_0x5659be(0x1f4)]() {
            var _0x4d8d3d = _0x5659be, _0x5883c4 = new _0x23f873();
            return this[_0x4d8d3d(0x1f0)](_0x5883c4), _0x5883c4;
        }
    }
    class _0x57a6a2 extends _0x218b83[_0x5659be(0x43e)] {
        constructor(_0x387d0c, _0x2978a0, _0x393a19 = ![]) {
            var _0x4ba7d2 = _0x5659be;
            super(), this[_0x4ba7d2(0x43f)] = null, this['_float32Reader'] = null;
            var _0x146878 = _0x218b83[_0x4ba7d2(0x2f3)]['instance'];
            this[_0x4ba7d2(0x440)] = _0x2978a0, this[_0x4ba7d2(0x441)] = _0x146878[_0x4ba7d2(0x442)], this['_canRead'] = _0x393a19, this[_0x4ba7d2(0x443)] = _0x387d0c, this[_0x4ba7d2(0x444)](), _0x146878[_0x4ba7d2(0x445)](this[_0x4ba7d2(0x441)], this[_0x4ba7d2(0x443)], this[_0x4ba7d2(0x440)]), _0x393a19 && (this[_0x4ba7d2(0x446)] = new Uint8Array(_0x387d0c), this[_0x4ba7d2(0x447)] = new Float32Array(this[_0x4ba7d2(0x446)][_0x4ba7d2(0x448)]));
        }
        get ['vertexDeclaration']() {
            var _0x2022b4 = _0x5659be;
            return this[_0x2022b4(0x43f)];
        }
        set [_0x5659be(0x449)](_0x903081) {
            this['_vertexDeclaration'] = _0x903081;
        }
        get [_0x5659be(0x44a)]() {
            var _0x44e679 = _0x5659be;
            return this[_0x44e679(0x44b)];
        }
        [_0x5659be(0x444)]() {
            var _0x26ba0d = _0x5659be;
            if (_0x218b83['Buffer'][_0x26ba0d(0x44c)] !== this[_0x26ba0d(0x44d)]) {
                var _0x448413 = _0x218b83[_0x26ba0d(0x2f3)][_0x26ba0d(0x2f4)];
                return _0x448413['bindBuffer'](_0x448413['ARRAY_BUFFER'], this[_0x26ba0d(0x44d)]), _0x218b83['Buffer'][_0x26ba0d(0x44c)] = this[_0x26ba0d(0x44d)], !![];
            } else
                return ![];
        }
        ['orphanStorage']() {
            var _0x4bf7d5 = _0x5659be;
            this[_0x4bf7d5(0x444)](), _0x218b83[_0x4bf7d5(0x2f3)]['instance'][_0x4bf7d5(0x445)](this[_0x4bf7d5(0x441)], this[_0x4bf7d5(0x443)], this[_0x4bf7d5(0x440)]);
        }
        ['setData'](_0x6b1401, _0x5eac51 = 0x0, _0x5cba24 = 0x0, _0x606a75 = Number['MAX_SAFE_INTEGER']) {
            var _0x56aebb = _0x5659be;
            this[_0x56aebb(0x444)]();
            var _0x8530c0 = _0x5cba24 !== 0x0 || _0x606a75 !== Number[_0x56aebb(0x44e)];
            if (_0x8530c0) {
                var _0x52b1c4 = new Uint8Array(_0x6b1401, _0x5cba24, _0x606a75);
                _0x218b83[_0x56aebb(0x2f3)][_0x56aebb(0x2f4)][_0x56aebb(0x44f)](this['_bufferType'], _0x5eac51, _0x52b1c4);
                if (this['_canRead'])
                    this[_0x56aebb(0x446)][_0x56aebb(0x450)](_0x52b1c4, _0x5eac51);
            } else {
                _0x218b83[_0x56aebb(0x2f3)][_0x56aebb(0x2f4)]['bufferSubData'](this['_bufferType'], _0x5eac51, _0x6b1401);
                if (this['_canRead'])
                    this[_0x56aebb(0x446)][_0x56aebb(0x450)](new Uint8Array(_0x6b1401), _0x5eac51);
            }
        }
        [_0x5659be(0x451)]() {
            var _0x5631fa = _0x5659be;
            if (this[_0x5631fa(0x44b)])
                return this[_0x5631fa(0x446)];
            else
                throw new Error('Can\x27t\x20read\x20data\x20from\x20VertexBuffer\x20with\x20only\x20write\x20flag!');
        }
        [_0x5659be(0x452)]() {
            var _0x32bc52 = _0x5659be;
            if (this[_0x32bc52(0x44b)])
                return this[_0x32bc52(0x447)];
            else
                throw new Error(_0x32bc52(0x453));
        }
        [_0x5659be(0x454)]() {
            var _0x4a69c7 = _0x5659be;
            this[_0x4a69c7(0x44b)] = ![], this[_0x4a69c7(0x446)] = null, this[_0x4a69c7(0x447)] = null;
        }
        [_0x5659be(0x311)]() {
            var _0x36de1c = _0x5659be;
            super['destroy'](), this[_0x36de1c(0x446)] = null, this[_0x36de1c(0x447)] = null, this[_0x36de1c(0x43f)] = null, this[_0x36de1c(0x443)] = 0x0;
        }
    }
    _0x57a6a2[_0x5659be(0x455)] = 0x0, _0x57a6a2[_0x5659be(0x456)] = 0x1;
    class _0x48a921 {
        static [_0x5659be(0x229)]() {
            var _0x25f1e8 = _0x5659be, _0x301d71 = _0x218b83['LayaGL'][_0x25f1e8(0x2f4)];
            _0x48a921[_0x25f1e8(0x457)] = {
                'single': [
                    0x1,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'vector2': [
                    0x2,
                    _0x301d71['FLOAT'],
                    0x0
                ],
                'vector3': [
                    0x3,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'vector4': [
                    0x4,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'color': [
                    0x4,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'byte4': [
                    0x4,
                    _0x301d71[_0x25f1e8(0x430)],
                    0x0
                ],
                'short2': [
                    0x2,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'short4': [
                    0x4,
                    _0x301d71['FLOAT'],
                    0x0
                ],
                'normalizedshort2': [
                    0x2,
                    _0x301d71['FLOAT'],
                    0x0
                ],
                'normalizedshort4': [
                    0x4,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'halfvector2': [
                    0x2,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ],
                'halfvector4': [
                    0x4,
                    _0x301d71[_0x25f1e8(0x431)],
                    0x0
                ]
            };
        }
        static [_0x5659be(0x458)](_0x5c9395) {
            var _0x1227aa = _0x5659be, _0x2c4bdf = _0x48a921[_0x1227aa(0x457)][_0x5c9395];
            if (_0x2c4bdf)
                return _0x2c4bdf;
            else
                throw _0x1227aa(0x459);
        }
    }
    _0x48a921['Single'] = _0x5659be(0x45a), _0x48a921[_0x5659be(0x45b)] = _0x5659be(0x45c), _0x48a921[_0x5659be(0x45d)] = _0x5659be(0x45e), _0x48a921[_0x5659be(0x45f)] = _0x5659be(0x460), _0x48a921[_0x5659be(0x461)] = _0x5659be(0x462), _0x48a921['Byte4'] = _0x5659be(0x463), _0x48a921[_0x5659be(0x464)] = _0x5659be(0x465), _0x48a921[_0x5659be(0x466)] = _0x5659be(0x467), _0x48a921['NormalizedShort2'] = _0x5659be(0x468), _0x48a921[_0x5659be(0x469)] = _0x5659be(0x46a), _0x48a921[_0x5659be(0x46b)] = _0x5659be(0x46c), _0x48a921[_0x5659be(0x46d)] = _0x5659be(0x46e);
    class _0x3ed76a {
        constructor(_0x597e14 = 0x1, _0x25613e = 0x0, _0x1e815c = 0x0, _0x77b27e = 0x0, _0x448d1d = 0x0, _0x15389d = 0x1, _0x7b926e = 0x0, _0x29255d = 0x0, _0xc497d8 = 0x0, _0x2834fc = 0x0, _0x37618b = 0x1, _0xad5739 = 0x0, _0x3e55ad = 0x0, _0xe36c51 = 0x0, _0x781e01 = 0x0, _0x22911a = 0x1, _0x592761 = null) {
            var _0xd7897a = _0x5659be, _0x3c3dc9 = _0x592761 ? this[_0xd7897a(0x1f6)] = _0x592761 : this[_0xd7897a(0x1f6)] = new Float32Array(0x10);
            _0x3c3dc9[0x0] = _0x597e14, _0x3c3dc9[0x1] = _0x25613e, _0x3c3dc9[0x2] = _0x1e815c, _0x3c3dc9[0x3] = _0x77b27e, _0x3c3dc9[0x4] = _0x448d1d, _0x3c3dc9[0x5] = _0x15389d, _0x3c3dc9[0x6] = _0x7b926e, _0x3c3dc9[0x7] = _0x29255d, _0x3c3dc9[0x8] = _0xc497d8, _0x3c3dc9[0x9] = _0x2834fc, _0x3c3dc9[0xa] = _0x37618b, _0x3c3dc9[0xb] = _0xad5739, _0x3c3dc9[0xc] = _0x3e55ad, _0x3c3dc9[0xd] = _0xe36c51, _0x3c3dc9[0xe] = _0x781e01, _0x3c3dc9[0xf] = _0x22911a;
        }
        static [_0x5659be(0x28c)](_0xc91c9f, _0xc72c08) {
            var _0x168caa = _0x5659be, _0x4f40cd = _0xc72c08[_0x168caa(0x1f6)], _0x462c23 = Math[_0x168caa(0x26f)](_0xc91c9f), _0x4b6327 = Math['cos'](_0xc91c9f);
            _0x4f40cd[0x1] = _0x4f40cd[0x2] = _0x4f40cd[0x3] = _0x4f40cd[0x4] = _0x4f40cd[0x7] = _0x4f40cd[0x8] = _0x4f40cd[0xb] = _0x4f40cd[0xc] = _0x4f40cd[0xd] = _0x4f40cd[0xe] = 0x0, _0x4f40cd[0x0] = _0x4f40cd[0xf] = 0x1, _0x4f40cd[0x5] = _0x4f40cd[0xa] = _0x4b6327, _0x4f40cd[0x6] = _0x462c23, _0x4f40cd[0x9] = -_0x462c23;
        }
        static [_0x5659be(0x28a)](_0x3bd53e, _0x222c5c) {
            var _0x39d5ed = _0x222c5c['elements'], _0x3c92e6 = Math['sin'](_0x3bd53e), _0x463e6f = Math['cos'](_0x3bd53e);
            _0x39d5ed[0x1] = _0x39d5ed[0x3] = _0x39d5ed[0x4] = _0x39d5ed[0x6] = _0x39d5ed[0x7] = _0x39d5ed[0x9] = _0x39d5ed[0xb] = _0x39d5ed[0xc] = _0x39d5ed[0xd] = _0x39d5ed[0xe] = 0x0, _0x39d5ed[0x5] = _0x39d5ed[0xf] = 0x1, _0x39d5ed[0x0] = _0x39d5ed[0xa] = _0x463e6f, _0x39d5ed[0x2] = -_0x3c92e6, _0x39d5ed[0x8] = _0x3c92e6;
        }
        static [_0x5659be(0x46f)](_0x5a12a4, _0x4a8640) {
            var _0x405dc8 = _0x5659be, _0x40d375 = _0x4a8640['elements'], _0x566673 = Math['sin'](_0x5a12a4), _0x566727 = Math[_0x405dc8(0x270)](_0x5a12a4);
            _0x40d375[0x2] = _0x40d375[0x3] = _0x40d375[0x6] = _0x40d375[0x7] = _0x40d375[0x8] = _0x40d375[0x9] = _0x40d375[0xb] = _0x40d375[0xc] = _0x40d375[0xd] = _0x40d375[0xe] = 0x0, _0x40d375[0xa] = _0x40d375[0xf] = 0x1, _0x40d375[0x0] = _0x40d375[0x5] = _0x566727, _0x40d375[0x1] = _0x566673, _0x40d375[0x4] = -_0x566673;
        }
        static [_0x5659be(0x470)](_0x22f663, _0x3c5a89, _0x506cc4, _0x2b73ff) {
            var _0x435213 = _0x5659be;
            _0x22f58f[_0x435213(0x471)](_0x22f663, _0x3c5a89, _0x506cc4, _0x3ed76a[_0x435213(0x472)]), _0x3ed76a[_0x435213(0x26c)](_0x3ed76a['_tempQuaternion'], _0x2b73ff);
        }
        static ['createRotationAxis'](_0x16d6ca, _0x31436e, _0x4bd81f) {
            var _0x2821ff = _0x5659be, _0xd96007 = _0x16d6ca['x'], _0x75d588 = _0x16d6ca['y'], _0x4db8b5 = _0x16d6ca['z'], _0x41b939 = Math[_0x2821ff(0x270)](_0x31436e), _0x32dc33 = Math[_0x2821ff(0x26f)](_0x31436e), _0x6b6b36 = _0xd96007 * _0xd96007, _0x5a5e6b = _0x75d588 * _0x75d588, _0x5d9729 = _0x4db8b5 * _0x4db8b5, _0x6ac0c2 = _0xd96007 * _0x75d588, _0x21aa82 = _0xd96007 * _0x4db8b5, _0xa3fbfd = _0x75d588 * _0x4db8b5, _0x26f0a7 = _0x4bd81f[_0x2821ff(0x1f6)];
            _0x26f0a7[0x3] = _0x26f0a7[0x7] = _0x26f0a7[0xb] = _0x26f0a7[0xc] = _0x26f0a7[0xd] = _0x26f0a7[0xe] = 0x0, _0x26f0a7[0xf] = 0x1, _0x26f0a7[0x0] = _0x6b6b36 + _0x41b939 * (0x1 - _0x6b6b36), _0x26f0a7[0x1] = _0x6ac0c2 - _0x41b939 * _0x6ac0c2 + _0x32dc33 * _0x4db8b5, _0x26f0a7[0x2] = _0x21aa82 - _0x41b939 * _0x21aa82 - _0x32dc33 * _0x75d588, _0x26f0a7[0x4] = _0x6ac0c2 - _0x41b939 * _0x6ac0c2 - _0x32dc33 * _0x4db8b5, _0x26f0a7[0x5] = _0x5a5e6b + _0x41b939 * (0x1 - _0x5a5e6b), _0x26f0a7[0x6] = _0xa3fbfd - _0x41b939 * _0xa3fbfd + _0x32dc33 * _0xd96007, _0x26f0a7[0x8] = _0x21aa82 - _0x41b939 * _0x21aa82 + _0x32dc33 * _0x75d588, _0x26f0a7[0x9] = _0xa3fbfd - _0x41b939 * _0xa3fbfd - _0x32dc33 * _0xd96007, _0x26f0a7[0xa] = _0x5d9729 + _0x41b939 * (0x1 - _0x5d9729);
        }
        ['setRotation'](_0x8472da) {
            var _0x3a01d0 = _0x8472da['x'], _0x178208 = _0x8472da['y'], _0x49e47d = _0x8472da['z'], _0x3cc122 = _0x8472da['w'], _0x43c46e = _0x3a01d0 * _0x3a01d0, _0x3a73d0 = _0x178208 * _0x178208, _0x5aeda7 = _0x49e47d * _0x49e47d, _0x4052be = _0x3a01d0 * _0x178208, _0x590290 = _0x49e47d * _0x3cc122, _0x1f4e59 = _0x49e47d * _0x3a01d0, _0x401744 = _0x178208 * _0x3cc122, _0x3cb160 = _0x178208 * _0x49e47d, _0x10a42a = _0x3a01d0 * _0x3cc122, _0x4b432f = this['elements'];
            _0x4b432f[0x0] = 0x1 - 0x2 * (_0x3a73d0 + _0x5aeda7), _0x4b432f[0x1] = 0x2 * (_0x4052be + _0x590290), _0x4b432f[0x2] = 0x2 * (_0x1f4e59 - _0x401744), _0x4b432f[0x4] = 0x2 * (_0x4052be - _0x590290), _0x4b432f[0x5] = 0x1 - 0x2 * (_0x5aeda7 + _0x43c46e), _0x4b432f[0x6] = 0x2 * (_0x3cb160 + _0x10a42a), _0x4b432f[0x8] = 0x2 * (_0x1f4e59 + _0x401744), _0x4b432f[0x9] = 0x2 * (_0x3cb160 - _0x10a42a), _0x4b432f[0xa] = 0x1 - 0x2 * (_0x3a73d0 + _0x43c46e);
        }
        [_0x5659be(0x473)](_0x262afe) {
            var _0xe6fa6d = _0x5659be, _0x23487d = this[_0xe6fa6d(0x1f6)];
            _0x23487d[0xc] = _0x262afe['x'], _0x23487d[0xd] = _0x262afe['y'], _0x23487d[0xe] = _0x262afe['z'];
        }
        static [_0x5659be(0x26c)](_0x12a474, _0x1a73e8) {
            var _0xe76b1d = _0x1a73e8['elements'], _0x511ebd = _0x12a474['x'], _0x134b16 = _0x12a474['y'], _0x10a09b = _0x12a474['z'], _0xac2e33 = _0x12a474['w'], _0x1a68e2 = _0x511ebd * _0x511ebd, _0x13d68a = _0x134b16 * _0x134b16, _0x2f5f0e = _0x10a09b * _0x10a09b, _0x25a880 = _0x511ebd * _0x134b16, _0x1e656d = _0x10a09b * _0xac2e33, _0x1b74ad = _0x10a09b * _0x511ebd, _0x130b00 = _0x134b16 * _0xac2e33, _0x80b36 = _0x134b16 * _0x10a09b, _0x30a152 = _0x511ebd * _0xac2e33;
            _0xe76b1d[0x3] = _0xe76b1d[0x7] = _0xe76b1d[0xb] = _0xe76b1d[0xc] = _0xe76b1d[0xd] = _0xe76b1d[0xe] = 0x0, _0xe76b1d[0xf] = 0x1, _0xe76b1d[0x0] = 0x1 - 0x2 * (_0x13d68a + _0x2f5f0e), _0xe76b1d[0x1] = 0x2 * (_0x25a880 + _0x1e656d), _0xe76b1d[0x2] = 0x2 * (_0x1b74ad - _0x130b00), _0xe76b1d[0x4] = 0x2 * (_0x25a880 - _0x1e656d), _0xe76b1d[0x5] = 0x1 - 0x2 * (_0x2f5f0e + _0x1a68e2), _0xe76b1d[0x6] = 0x2 * (_0x80b36 + _0x30a152), _0xe76b1d[0x8] = 0x2 * (_0x1b74ad + _0x130b00), _0xe76b1d[0x9] = 0x2 * (_0x80b36 - _0x30a152), _0xe76b1d[0xa] = 0x1 - 0x2 * (_0x13d68a + _0x1a68e2);
        }
        static ['createTranslate'](_0x53b5c0, _0x9ffbe7) {
            var _0xc65c40 = _0x5659be, _0x590578 = _0x9ffbe7[_0xc65c40(0x1f6)];
            _0x590578[0x4] = _0x590578[0x8] = _0x590578[0x1] = _0x590578[0x9] = _0x590578[0x2] = _0x590578[0x6] = _0x590578[0x3] = _0x590578[0x7] = _0x590578[0xb] = 0x0, _0x590578[0x0] = _0x590578[0x5] = _0x590578[0xa] = _0x590578[0xf] = 0x1, _0x590578[0xc] = _0x53b5c0['x'], _0x590578[0xd] = _0x53b5c0['y'], _0x590578[0xe] = _0x53b5c0['z'];
        }
        static [_0x5659be(0x474)](_0xb0ab56, _0x2f2fb1) {
            var _0x506c33 = _0x5659be, _0x583bdd = _0x2f2fb1[_0x506c33(0x1f6)];
            _0x583bdd[0x0] = _0xb0ab56['x'], _0x583bdd[0x5] = _0xb0ab56['y'], _0x583bdd[0xa] = _0xb0ab56['z'], _0x583bdd[0x1] = _0x583bdd[0x4] = _0x583bdd[0x8] = _0x583bdd[0xc] = _0x583bdd[0x9] = _0x583bdd[0xd] = _0x583bdd[0x2] = _0x583bdd[0x6] = _0x583bdd[0xe] = _0x583bdd[0x3] = _0x583bdd[0x7] = _0x583bdd[0xb] = 0x0, _0x583bdd[0xf] = 0x1;
        }
        static ['multiply'](_0x18a2d9, _0x377b8e, _0x2b9759) {
            var _0xa84787 = _0x5659be, _0x2e6b01 = _0x377b8e[_0xa84787(0x1f6)], _0x533154 = _0x18a2d9[_0xa84787(0x1f6)], _0x4888b7 = _0x2b9759[_0xa84787(0x1f6)], _0x4c72f1 = _0x2e6b01[0x0], _0x20694e = _0x2e6b01[0x1], _0x2c88fc = _0x2e6b01[0x2], _0x34bc22 = _0x2e6b01[0x3], _0x2270f3 = _0x2e6b01[0x4], _0x4b27fb = _0x2e6b01[0x5], _0x3e2204 = _0x2e6b01[0x6], _0x3d9f93 = _0x2e6b01[0x7], _0x306275 = _0x2e6b01[0x8], _0x4eba6c = _0x2e6b01[0x9], _0x4aab64 = _0x2e6b01[0xa], _0x505e20 = _0x2e6b01[0xb], _0x38f5dd = _0x2e6b01[0xc], _0x26ca82 = _0x2e6b01[0xd], _0x3f23ba = _0x2e6b01[0xe], _0x304a23 = _0x2e6b01[0xf], _0x283eee = _0x533154[0x0], _0xb3ae39 = _0x533154[0x1], _0x5c560e = _0x533154[0x2], _0x31ed99 = _0x533154[0x3], _0x54163b = _0x533154[0x4], _0x368226 = _0x533154[0x5], _0x1125b7 = _0x533154[0x6], _0x5c08c0 = _0x533154[0x7], _0x4dd502 = _0x533154[0x8], _0x303760 = _0x533154[0x9], _0x2240a1 = _0x533154[0xa], _0x567df0 = _0x533154[0xb], _0x3ce2ae = _0x533154[0xc], _0x5d52dd = _0x533154[0xd], _0x580f81 = _0x533154[0xe], _0x6513df = _0x533154[0xf];
            _0x4888b7[0x0] = _0x4c72f1 * _0x283eee + _0x20694e * _0x54163b + _0x2c88fc * _0x4dd502 + _0x34bc22 * _0x3ce2ae, _0x4888b7[0x1] = _0x4c72f1 * _0xb3ae39 + _0x20694e * _0x368226 + _0x2c88fc * _0x303760 + _0x34bc22 * _0x5d52dd, _0x4888b7[0x2] = _0x4c72f1 * _0x5c560e + _0x20694e * _0x1125b7 + _0x2c88fc * _0x2240a1 + _0x34bc22 * _0x580f81, _0x4888b7[0x3] = _0x4c72f1 * _0x31ed99 + _0x20694e * _0x5c08c0 + _0x2c88fc * _0x567df0 + _0x34bc22 * _0x6513df, _0x4888b7[0x4] = _0x2270f3 * _0x283eee + _0x4b27fb * _0x54163b + _0x3e2204 * _0x4dd502 + _0x3d9f93 * _0x3ce2ae, _0x4888b7[0x5] = _0x2270f3 * _0xb3ae39 + _0x4b27fb * _0x368226 + _0x3e2204 * _0x303760 + _0x3d9f93 * _0x5d52dd, _0x4888b7[0x6] = _0x2270f3 * _0x5c560e + _0x4b27fb * _0x1125b7 + _0x3e2204 * _0x2240a1 + _0x3d9f93 * _0x580f81, _0x4888b7[0x7] = _0x2270f3 * _0x31ed99 + _0x4b27fb * _0x5c08c0 + _0x3e2204 * _0x567df0 + _0x3d9f93 * _0x6513df, _0x4888b7[0x8] = _0x306275 * _0x283eee + _0x4eba6c * _0x54163b + _0x4aab64 * _0x4dd502 + _0x505e20 * _0x3ce2ae, _0x4888b7[0x9] = _0x306275 * _0xb3ae39 + _0x4eba6c * _0x368226 + _0x4aab64 * _0x303760 + _0x505e20 * _0x5d52dd, _0x4888b7[0xa] = _0x306275 * _0x5c560e + _0x4eba6c * _0x1125b7 + _0x4aab64 * _0x2240a1 + _0x505e20 * _0x580f81, _0x4888b7[0xb] = _0x306275 * _0x31ed99 + _0x4eba6c * _0x5c08c0 + _0x4aab64 * _0x567df0 + _0x505e20 * _0x6513df, _0x4888b7[0xc] = _0x38f5dd * _0x283eee + _0x26ca82 * _0x54163b + _0x3f23ba * _0x4dd502 + _0x304a23 * _0x3ce2ae, _0x4888b7[0xd] = _0x38f5dd * _0xb3ae39 + _0x26ca82 * _0x368226 + _0x3f23ba * _0x303760 + _0x304a23 * _0x5d52dd, _0x4888b7[0xe] = _0x38f5dd * _0x5c560e + _0x26ca82 * _0x1125b7 + _0x3f23ba * _0x2240a1 + _0x304a23 * _0x580f81, _0x4888b7[0xf] = _0x38f5dd * _0x31ed99 + _0x26ca82 * _0x5c08c0 + _0x3f23ba * _0x567df0 + _0x304a23 * _0x6513df;
        }
        static [_0x5659be(0x475)](_0xd42ccd, _0x1e6e88, _0x2cccf8) {
            var _0xc9ca5a = _0x5659be;
            _0x218b83[_0xc9ca5a(0x2f3)][_0xc9ca5a(0x2f4)][_0xc9ca5a(0x2f5)](_0xd42ccd[_0xc9ca5a(0x1f6)], _0x1e6e88['elements'], _0x2cccf8['elements']);
        }
        static [_0x5659be(0x476)](_0x4e151d, _0x338cc7) {
            var _0x581ca0 = _0x5659be, _0x591f8a = _0x338cc7[_0x581ca0(0x1f6)], _0x4aacbf = _0x4e151d['x'], _0x114783 = _0x4e151d['y'], _0x141cdd = _0x4e151d['z'], _0x59c6f8 = _0x4e151d['w'], _0x51ffa9 = _0x4aacbf + _0x4aacbf, _0xe86da6 = _0x114783 + _0x114783, _0x3a9425 = _0x141cdd + _0x141cdd, _0x2563b0 = _0x4aacbf * _0x51ffa9, _0x1cc94b = _0x114783 * _0x51ffa9, _0x23293f = _0x114783 * _0xe86da6, _0x14e585 = _0x141cdd * _0x51ffa9, _0x23986d = _0x141cdd * _0xe86da6, _0x40a60f = _0x141cdd * _0x3a9425, _0x4d7aed = _0x59c6f8 * _0x51ffa9, _0x4c2c3a = _0x59c6f8 * _0xe86da6, _0x12c542 = _0x59c6f8 * _0x3a9425;
            _0x591f8a[0x0] = 0x1 - _0x23293f - _0x40a60f, _0x591f8a[0x1] = _0x1cc94b + _0x12c542, _0x591f8a[0x2] = _0x14e585 - _0x4c2c3a, _0x591f8a[0x3] = 0x0, _0x591f8a[0x4] = _0x1cc94b - _0x12c542, _0x591f8a[0x5] = 0x1 - _0x2563b0 - _0x40a60f, _0x591f8a[0x6] = _0x23986d + _0x4d7aed, _0x591f8a[0x7] = 0x0, _0x591f8a[0x8] = _0x14e585 + _0x4c2c3a, _0x591f8a[0x9] = _0x23986d - _0x4d7aed, _0x591f8a[0xa] = 0x1 - _0x2563b0 - _0x23293f, _0x591f8a[0xb] = 0x0, _0x591f8a[0xc] = 0x0, _0x591f8a[0xd] = 0x0, _0x591f8a[0xe] = 0x0, _0x591f8a[0xf] = 0x1;
        }
        static [_0x5659be(0x477)](_0x2ca8bb, _0x5511cd, _0x2569ab, _0x4ef875) {
            var _0x42490e = _0x5659be, _0x2b082a = _0x4ef875[_0x42490e(0x1f6)], _0x203fdc = _0x5511cd['x'], _0xd25b35 = _0x5511cd['y'], _0x486ced = _0x5511cd['z'], _0x467090 = _0x5511cd['w'], _0x19fd57 = _0x203fdc + _0x203fdc, _0x33bf5e = _0xd25b35 + _0xd25b35, _0x4693a1 = _0x486ced + _0x486ced, _0x28a166 = _0x203fdc * _0x19fd57, _0x4f601e = _0x203fdc * _0x33bf5e, _0x2c84ed = _0x203fdc * _0x4693a1, _0xee710f = _0xd25b35 * _0x33bf5e, _0x5f4c6b = _0xd25b35 * _0x4693a1, _0x26355f = _0x486ced * _0x4693a1, _0x59095d = _0x467090 * _0x19fd57, _0x1be373 = _0x467090 * _0x33bf5e, _0x58994e = _0x467090 * _0x4693a1, _0xa8bc1c = _0x2569ab['x'], _0x5121f8 = _0x2569ab['y'], _0x15098c = _0x2569ab['z'];
            _0x2b082a[0x0] = (0x1 - (_0xee710f + _0x26355f)) * _0xa8bc1c, _0x2b082a[0x1] = (_0x4f601e + _0x58994e) * _0xa8bc1c, _0x2b082a[0x2] = (_0x2c84ed - _0x1be373) * _0xa8bc1c, _0x2b082a[0x3] = 0x0, _0x2b082a[0x4] = (_0x4f601e - _0x58994e) * _0x5121f8, _0x2b082a[0x5] = (0x1 - (_0x28a166 + _0x26355f)) * _0x5121f8, _0x2b082a[0x6] = (_0x5f4c6b + _0x59095d) * _0x5121f8, _0x2b082a[0x7] = 0x0, _0x2b082a[0x8] = (_0x2c84ed + _0x1be373) * _0x15098c, _0x2b082a[0x9] = (_0x5f4c6b - _0x59095d) * _0x15098c, _0x2b082a[0xa] = (0x1 - (_0x28a166 + _0xee710f)) * _0x15098c, _0x2b082a[0xb] = 0x0, _0x2b082a[0xc] = _0x2ca8bb['x'], _0x2b082a[0xd] = _0x2ca8bb['y'], _0x2b082a[0xe] = _0x2ca8bb['z'], _0x2b082a[0xf] = 0x1;
        }
        static ['createLookAt'](_0x5b73ce, _0x380942, _0x53a750, _0x4aef8d) {
            var _0x3f68e4 = _0x5659be, _0x8113d5 = _0x4aef8d[_0x3f68e4(0x1f6)], _0x364e98 = _0x3ed76a[_0x3f68e4(0x478)], _0x12cd60 = _0x3ed76a[_0x3f68e4(0x479)], _0x54266c = _0x3ed76a[_0x3f68e4(0x47a)];
            _0x3f70c5[_0x3f68e4(0x210)](_0x5b73ce, _0x380942, _0x54266c), _0x3f70c5['normalize'](_0x54266c, _0x54266c), _0x3f70c5[_0x3f68e4(0x211)](_0x53a750, _0x54266c, _0x364e98), _0x3f70c5[_0x3f68e4(0x1f2)](_0x364e98, _0x364e98), _0x3f70c5[_0x3f68e4(0x211)](_0x54266c, _0x364e98, _0x12cd60), _0x8113d5[0x3] = _0x8113d5[0x7] = _0x8113d5[0xb] = 0x0, _0x8113d5[0xf] = 0x1, _0x8113d5[0x0] = _0x364e98['x'], _0x8113d5[0x4] = _0x364e98['y'], _0x8113d5[0x8] = _0x364e98['z'], _0x8113d5[0x1] = _0x12cd60['x'], _0x8113d5[0x5] = _0x12cd60['y'], _0x8113d5[0x9] = _0x12cd60['z'], _0x8113d5[0x2] = _0x54266c['x'], _0x8113d5[0x6] = _0x54266c['y'], _0x8113d5[0xa] = _0x54266c['z'], _0x8113d5[0xc] = -_0x3f70c5[_0x3f68e4(0x1f1)](_0x364e98, _0x5b73ce), _0x8113d5[0xd] = -_0x3f70c5['dot'](_0x12cd60, _0x5b73ce), _0x8113d5[0xe] = -_0x3f70c5[_0x3f68e4(0x1f1)](_0x54266c, _0x5b73ce);
        }
        static [_0x5659be(0x47b)](_0x4eab3a, _0x1bd746, _0x3f292c, _0x3b63c2, _0x1ffc6b) {
            var _0x42d897 = _0x5659be, _0x1702f4 = 0x1 / Math[_0x42d897(0x47c)](_0x4eab3a * 0.5), _0x2a6767 = _0x1702f4 / _0x1bd746, _0x301fda = _0x3f292c / _0x2a6767, _0x1e9cff = _0x3f292c / _0x1702f4;
            _0x3ed76a['createPerspectiveOffCenter'](-_0x301fda, _0x301fda, -_0x1e9cff, _0x1e9cff, _0x3f292c, _0x3b63c2, _0x1ffc6b);
        }
        static [_0x5659be(0x47d)](_0x2f97d4, _0x4af45c, _0x5c4d30, _0x36f58e, _0xbe14cf, _0x51d522, _0x51c339) {
            var _0x270ed7 = _0x5659be, _0x1836cb = _0x51c339[_0x270ed7(0x1f6)], _0x5df5c1 = _0x51d522 / (_0x51d522 - _0xbe14cf);
            _0x1836cb[0x1] = _0x1836cb[0x2] = _0x1836cb[0x3] = _0x1836cb[0x4] = _0x1836cb[0x6] = _0x1836cb[0x7] = _0x1836cb[0xc] = _0x1836cb[0xd] = _0x1836cb[0xf] = 0x0, _0x1836cb[0x0] = 0x2 * _0xbe14cf / (_0x4af45c - _0x2f97d4), _0x1836cb[0x5] = 0x2 * _0xbe14cf / (_0x36f58e - _0x5c4d30), _0x1836cb[0x8] = (_0x2f97d4 + _0x4af45c) / (_0x4af45c - _0x2f97d4), _0x1836cb[0x9] = (_0x36f58e + _0x5c4d30) / (_0x36f58e - _0x5c4d30), _0x1836cb[0xa] = -_0x5df5c1, _0x1836cb[0xb] = -0x1, _0x1836cb[0xe] = -_0xbe14cf * _0x5df5c1;
        }
        static [_0x5659be(0x47e)](_0xa9d3a6, _0x34e46d, _0x3f12a8, _0xf29a0a, _0x3b211c, _0x1c325b, _0x4fe290) {
            var _0x5ac84d = _0x5659be, _0x1e16b5 = _0x4fe290[_0x5ac84d(0x1f6)], _0x1c459a = 0x1 / (_0x1c325b - _0x3b211c);
            _0x1e16b5[0x1] = _0x1e16b5[0x2] = _0x1e16b5[0x3] = _0x1e16b5[0x4] = _0x1e16b5[0x6] = _0x1e16b5[0x8] = _0x1e16b5[0x7] = _0x1e16b5[0x9] = _0x1e16b5[0xb] = 0x0, _0x1e16b5[0xf] = 0x1, _0x1e16b5[0x0] = 0x2 / (_0x34e46d - _0xa9d3a6), _0x1e16b5[0x5] = 0x2 / (_0xf29a0a - _0x3f12a8), _0x1e16b5[0xa] = -_0x1c459a, _0x1e16b5[0xc] = (_0xa9d3a6 + _0x34e46d) / (_0xa9d3a6 - _0x34e46d), _0x1e16b5[0xd] = (_0xf29a0a + _0x3f12a8) / (_0x3f12a8 - _0xf29a0a), _0x1e16b5[0xe] = -_0x3b211c * _0x1c459a;
        }
        [_0x5659be(0x47f)](_0x9a56c9, _0x50f549) {
            var _0xedd16d = _0x5659be;
            if (_0x9a56c9 < 0x0 || _0x9a56c9 > 0x3)
                throw new Error('row\x20Rows\x20and\x20columns\x20for\x20matrices\x20run\x20from\x200\x20to\x203,\x20inclusive.');
            if (_0x50f549 < 0x0 || _0x50f549 > 0x3)
                throw new Error(_0xedd16d(0x480));
            return this[_0xedd16d(0x1f6)][_0x9a56c9 * 0x4 + _0x50f549];
        }
        ['setElementByRowColumn'](_0x5097f0, _0x5d187f, _0x105771) {
            var _0x371437 = _0x5659be;
            if (_0x5097f0 < 0x0 || _0x5097f0 > 0x3)
                throw new Error(_0x371437(0x481));
            if (_0x5d187f < 0x0 || _0x5d187f > 0x3)
                throw new Error(_0x371437(0x480));
            this['elements'][_0x5097f0 * 0x4 + _0x5d187f] = _0x105771;
        }
        [_0x5659be(0x482)](_0x186dfa) {
            var _0x381406 = _0x5659be, _0x13e8ff = this['elements'], _0x25dcaa = _0x186dfa[_0x381406(0x1f6)];
            return _0x57b8d6['nearEqual'](_0x13e8ff[0x0], _0x25dcaa[0x0]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0x1], _0x25dcaa[0x1]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0x2], _0x25dcaa[0x2]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0x3], _0x25dcaa[0x3]) && _0x57b8d6['nearEqual'](_0x13e8ff[0x4], _0x25dcaa[0x4]) && _0x57b8d6['nearEqual'](_0x13e8ff[0x5], _0x25dcaa[0x5]) && _0x57b8d6['nearEqual'](_0x13e8ff[0x6], _0x25dcaa[0x6]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0x7], _0x25dcaa[0x7]) && _0x57b8d6['nearEqual'](_0x13e8ff[0x8], _0x25dcaa[0x8]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0x9], _0x25dcaa[0x9]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0xa], _0x25dcaa[0xa]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0xb], _0x25dcaa[0xb]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0xc], _0x25dcaa[0xc]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0xd], _0x25dcaa[0xd]) && _0x57b8d6['nearEqual'](_0x13e8ff[0xe], _0x25dcaa[0xe]) && _0x57b8d6[_0x381406(0x1e8)](_0x13e8ff[0xf], _0x25dcaa[0xf]);
        }
        [_0x5659be(0x483)](_0x16aef1, _0x5b8683, _0x1dccc3) {
            var _0x48c105 = _0x5659be, _0x43c781 = _0x3ed76a[_0x48c105(0x484)];
            return this[_0x48c105(0x485)](_0x16aef1, _0x43c781, _0x1dccc3) ? (_0x22f58f[_0x48c105(0x281)](_0x43c781, _0x5b8683), !![]) : (_0x5b8683[_0x48c105(0x276)](), ![]);
        }
        ['decomposeTransRotMatScale'](_0x86a837, _0x3453bb, _0x1e0b4e) {
            var _0x34be32 = _0x5659be, _0xd1a400 = this[_0x34be32(0x1f6)], _0xe84086 = _0x86a837, _0x5f1581 = _0x3453bb[_0x34be32(0x1f6)], _0x328d4b = _0x1e0b4e;
            _0xe84086['x'] = _0xd1a400[0xc], _0xe84086['y'] = _0xd1a400[0xd], _0xe84086['z'] = _0xd1a400[0xe];
            var _0x13bab2 = _0xd1a400[0x0], _0x2a3073 = _0xd1a400[0x1], _0x1f965a = _0xd1a400[0x2], _0x3467bc = _0xd1a400[0x4], _0x558492 = _0xd1a400[0x5], _0x240d3d = _0xd1a400[0x6], _0x3cd02a = _0xd1a400[0x8], _0xd3c00d = _0xd1a400[0x9], _0x3b2427 = _0xd1a400[0xa], _0x4ecd4c = _0x328d4b['x'] = Math['sqrt'](_0x13bab2 * _0x13bab2 + _0x2a3073 * _0x2a3073 + _0x1f965a * _0x1f965a), _0x5bf0db = _0x328d4b['y'] = Math[_0x34be32(0x1ea)](_0x3467bc * _0x3467bc + _0x558492 * _0x558492 + _0x240d3d * _0x240d3d), _0x1c54e8 = _0x328d4b['z'] = Math[_0x34be32(0x1ea)](_0x3cd02a * _0x3cd02a + _0xd3c00d * _0xd3c00d + _0x3b2427 * _0x3b2427);
            if (_0x57b8d6[_0x34be32(0x1e6)](_0x4ecd4c) || _0x57b8d6['isZero'](_0x5bf0db) || _0x57b8d6['isZero'](_0x1c54e8))
                return _0x5f1581[0x1] = _0x5f1581[0x2] = _0x5f1581[0x3] = _0x5f1581[0x4] = _0x5f1581[0x6] = _0x5f1581[0x7] = _0x5f1581[0x8] = _0x5f1581[0x9] = _0x5f1581[0xb] = _0x5f1581[0xc] = _0x5f1581[0xd] = _0x5f1581[0xe] = 0x0, _0x5f1581[0x0] = _0x5f1581[0x5] = _0x5f1581[0xa] = _0x5f1581[0xf] = 0x1, ![];
            var _0x416852 = _0x3ed76a[_0x34be32(0x478)];
            _0x416852['x'] = _0x3cd02a / _0x1c54e8, _0x416852['y'] = _0xd3c00d / _0x1c54e8, _0x416852['z'] = _0x3b2427 / _0x1c54e8;
            var _0x5eb158 = _0x3ed76a[_0x34be32(0x479)];
            _0x5eb158['x'] = _0x13bab2 / _0x4ecd4c, _0x5eb158['y'] = _0x2a3073 / _0x4ecd4c, _0x5eb158['z'] = _0x1f965a / _0x4ecd4c;
            var _0xdb8cbb = _0x3ed76a[_0x34be32(0x47a)];
            _0x3f70c5[_0x34be32(0x211)](_0x416852, _0x5eb158, _0xdb8cbb);
            var _0x59593e = _0x3ed76a['_tempVector1'];
            return _0x3f70c5[_0x34be32(0x211)](_0xdb8cbb, _0x416852, _0x59593e), _0x5f1581[0x3] = _0x5f1581[0x7] = _0x5f1581[0xb] = _0x5f1581[0xc] = _0x5f1581[0xd] = _0x5f1581[0xe] = 0x0, _0x5f1581[0xf] = 0x1, _0x5f1581[0x0] = _0x59593e['x'], _0x5f1581[0x1] = _0x59593e['y'], _0x5f1581[0x2] = _0x59593e['z'], _0x5f1581[0x4] = _0xdb8cbb['x'], _0x5f1581[0x5] = _0xdb8cbb['y'], _0x5f1581[0x6] = _0xdb8cbb['z'], _0x5f1581[0x8] = _0x416852['x'], _0x5f1581[0x9] = _0x416852['y'], _0x5f1581[0xa] = _0x416852['z'], _0x5f1581[0x0] * _0x13bab2 + _0x5f1581[0x1] * _0x2a3073 + _0x5f1581[0x2] * _0x1f965a < 0x0 && (_0x328d4b['x'] = -_0x4ecd4c), _0x5f1581[0x4] * _0x3467bc + _0x5f1581[0x5] * _0x558492 + _0x5f1581[0x6] * _0x240d3d < 0x0 && (_0x328d4b['y'] = -_0x5bf0db), _0x5f1581[0x8] * _0x3cd02a + _0x5f1581[0x9] * _0xd3c00d + _0x5f1581[0xa] * _0x3b2427 < 0x0 && (_0x328d4b['z'] = -_0x1c54e8), !![];
        }
        [_0x5659be(0x486)](_0x5165d4) {
            var _0x2e8046 = _0x5659be, _0x127a76 = Math[_0x2e8046(0x27f)](-this[_0x2e8046(0x1f6)][0x9]);
            _0x5165d4['y'] = _0x127a76;
            var _0x3b52e8 = Math['cos'](_0x127a76);
            _0x3b52e8 > _0x57b8d6[_0x2e8046(0x1eb)] ? (_0x5165d4['z'] = Math[_0x2e8046(0x487)](this['elements'][0x1], this[_0x2e8046(0x1f6)][0x5]), _0x5165d4['x'] = Math['atan2'](this[_0x2e8046(0x1f6)][0x8], this['elements'][0xa])) : (_0x5165d4['z'] = Math[_0x2e8046(0x487)](-this['elements'][0x4], this[_0x2e8046(0x1f6)][0x0]), _0x5165d4['x'] = 0x0);
        }
        ['normalize']() {
            var _0x3ceed9 = _0x5659be, _0x2868a2 = this[_0x3ceed9(0x1f6)], _0x3be286 = _0x2868a2[0x0], _0x3512dc = _0x2868a2[0x1], _0x542d08 = _0x2868a2[0x2], _0x1a014a = Math['sqrt'](_0x3be286 * _0x3be286 + _0x3512dc * _0x3512dc + _0x542d08 * _0x542d08);
            if (_0x1a014a) {
                if (_0x1a014a == 0x1)
                    return;
            } else {
                _0x2868a2[0x0] = 0x0, _0x2868a2[0x1] = 0x0, _0x2868a2[0x2] = 0x0;
                return;
            }
            _0x1a014a = 0x1 / _0x1a014a, _0x2868a2[0x0] = _0x3be286 * _0x1a014a, _0x2868a2[0x1] = _0x3512dc * _0x1a014a, _0x2868a2[0x2] = _0x542d08 * _0x1a014a;
        }
        ['transpose']() {
            var _0x3fabe2, _0x346f41;
            return _0x3fabe2 = this['elements'], _0x346f41 = _0x3fabe2[0x1], _0x3fabe2[0x1] = _0x3fabe2[0x4], _0x3fabe2[0x4] = _0x346f41, _0x346f41 = _0x3fabe2[0x2], _0x3fabe2[0x2] = _0x3fabe2[0x8], _0x3fabe2[0x8] = _0x346f41, _0x346f41 = _0x3fabe2[0x3], _0x3fabe2[0x3] = _0x3fabe2[0xc], _0x3fabe2[0xc] = _0x346f41, _0x346f41 = _0x3fabe2[0x6], _0x3fabe2[0x6] = _0x3fabe2[0x9], _0x3fabe2[0x9] = _0x346f41, _0x346f41 = _0x3fabe2[0x7], _0x3fabe2[0x7] = _0x3fabe2[0xd], _0x3fabe2[0xd] = _0x346f41, _0x346f41 = _0x3fabe2[0xb], _0x3fabe2[0xb] = _0x3fabe2[0xe], _0x3fabe2[0xe] = _0x346f41, this;
        }
        [_0x5659be(0x274)](_0x3c25bb) {
            var _0x371509 = _0x5659be, _0x4ef49d = this[_0x371509(0x1f6)], _0x32385d = _0x3c25bb[_0x371509(0x1f6)], _0xb481c5 = _0x4ef49d[0x0], _0x21cbef = _0x4ef49d[0x1], _0x1518b0 = _0x4ef49d[0x2], _0x197a98 = _0x4ef49d[0x3], _0x49e844 = _0x4ef49d[0x4], _0x31063b = _0x4ef49d[0x5], _0x1ceea8 = _0x4ef49d[0x6], _0x502fe6 = _0x4ef49d[0x7], _0x1e3c06 = _0x4ef49d[0x8], _0x156766 = _0x4ef49d[0x9], _0x41bf85 = _0x4ef49d[0xa], _0x3abe09 = _0x4ef49d[0xb], _0x27e7fe = _0x4ef49d[0xc], _0x79ce16 = _0x4ef49d[0xd], _0x22f2dd = _0x4ef49d[0xe], _0x591374 = _0x4ef49d[0xf], _0x3ae3c0 = _0xb481c5 * _0x31063b - _0x21cbef * _0x49e844, _0x411cb5 = _0xb481c5 * _0x1ceea8 - _0x1518b0 * _0x49e844, _0x2b58b7 = _0xb481c5 * _0x502fe6 - _0x197a98 * _0x49e844, _0x749561 = _0x21cbef * _0x1ceea8 - _0x1518b0 * _0x31063b, _0x228bc5 = _0x21cbef * _0x502fe6 - _0x197a98 * _0x31063b, _0x576b43 = _0x1518b0 * _0x502fe6 - _0x197a98 * _0x1ceea8, _0x359b31 = _0x1e3c06 * _0x79ce16 - _0x156766 * _0x27e7fe, _0x317f4b = _0x1e3c06 * _0x22f2dd - _0x41bf85 * _0x27e7fe, _0x1e384c = _0x1e3c06 * _0x591374 - _0x3abe09 * _0x27e7fe, _0xc07051 = _0x156766 * _0x22f2dd - _0x41bf85 * _0x79ce16, _0x55c9a5 = _0x156766 * _0x591374 - _0x3abe09 * _0x79ce16, _0x46a9e7 = _0x41bf85 * _0x591374 - _0x3abe09 * _0x22f2dd, _0x502a68 = _0x3ae3c0 * _0x46a9e7 - _0x411cb5 * _0x55c9a5 + _0x2b58b7 * _0xc07051 + _0x749561 * _0x1e384c - _0x228bc5 * _0x317f4b + _0x576b43 * _0x359b31;
            if (Math['abs'](_0x502a68) === 0x0)
                return;
            _0x502a68 = 0x1 / _0x502a68, _0x32385d[0x0] = (_0x31063b * _0x46a9e7 - _0x1ceea8 * _0x55c9a5 + _0x502fe6 * _0xc07051) * _0x502a68, _0x32385d[0x1] = (_0x1518b0 * _0x55c9a5 - _0x21cbef * _0x46a9e7 - _0x197a98 * _0xc07051) * _0x502a68, _0x32385d[0x2] = (_0x79ce16 * _0x576b43 - _0x22f2dd * _0x228bc5 + _0x591374 * _0x749561) * _0x502a68, _0x32385d[0x3] = (_0x41bf85 * _0x228bc5 - _0x156766 * _0x576b43 - _0x3abe09 * _0x749561) * _0x502a68, _0x32385d[0x4] = (_0x1ceea8 * _0x1e384c - _0x49e844 * _0x46a9e7 - _0x502fe6 * _0x317f4b) * _0x502a68, _0x32385d[0x5] = (_0xb481c5 * _0x46a9e7 - _0x1518b0 * _0x1e384c + _0x197a98 * _0x317f4b) * _0x502a68, _0x32385d[0x6] = (_0x22f2dd * _0x2b58b7 - _0x27e7fe * _0x576b43 - _0x591374 * _0x411cb5) * _0x502a68, _0x32385d[0x7] = (_0x1e3c06 * _0x576b43 - _0x41bf85 * _0x2b58b7 + _0x3abe09 * _0x411cb5) * _0x502a68, _0x32385d[0x8] = (_0x49e844 * _0x55c9a5 - _0x31063b * _0x1e384c + _0x502fe6 * _0x359b31) * _0x502a68, _0x32385d[0x9] = (_0x21cbef * _0x1e384c - _0xb481c5 * _0x55c9a5 - _0x197a98 * _0x359b31) * _0x502a68, _0x32385d[0xa] = (_0x27e7fe * _0x228bc5 - _0x79ce16 * _0x2b58b7 + _0x591374 * _0x3ae3c0) * _0x502a68, _0x32385d[0xb] = (_0x156766 * _0x2b58b7 - _0x1e3c06 * _0x228bc5 - _0x3abe09 * _0x3ae3c0) * _0x502a68, _0x32385d[0xc] = (_0x31063b * _0x317f4b - _0x49e844 * _0xc07051 - _0x1ceea8 * _0x359b31) * _0x502a68, _0x32385d[0xd] = (_0xb481c5 * _0xc07051 - _0x21cbef * _0x317f4b + _0x1518b0 * _0x359b31) * _0x502a68, _0x32385d[0xe] = (_0x79ce16 * _0x411cb5 - _0x27e7fe * _0x749561 - _0x22f2dd * _0x3ae3c0) * _0x502a68, _0x32385d[0xf] = (_0x1e3c06 * _0x749561 - _0x156766 * _0x411cb5 + _0x41bf85 * _0x3ae3c0) * _0x502a68;
        }
        static [_0x5659be(0x488)](_0x327624, _0x536610, _0x342e0e, _0x2c2ced, _0x5bd561) {
            var _0x5841e0 = _0x5659be;
            _0x3f70c5[_0x5841e0(0x210)](_0x327624, _0x536610, _0x3ed76a[_0x5841e0(0x478)]);
            var _0x467354 = _0x3f70c5['scalarLengthSquared'](_0x3ed76a[_0x5841e0(0x478)]);
            _0x57b8d6[_0x5841e0(0x1e6)](_0x467354) ? (_0x3f70c5[_0x5841e0(0x1ee)](_0x2c2ced, -0x1, _0x3ed76a[_0x5841e0(0x479)]), _0x3ed76a['_tempVector1'][_0x5841e0(0x1f0)](_0x3ed76a[_0x5841e0(0x478)])) : _0x3f70c5[_0x5841e0(0x1ee)](_0x3ed76a[_0x5841e0(0x478)], 0x1 / Math['sqrt'](_0x467354), _0x3ed76a[_0x5841e0(0x478)]);
            _0x3f70c5['cross'](_0x342e0e, _0x3ed76a['_tempVector0'], _0x3ed76a[_0x5841e0(0x47a)]), _0x3f70c5[_0x5841e0(0x1f2)](_0x3ed76a['_tempVector2'], _0x3ed76a['_tempVector2']), _0x3f70c5[_0x5841e0(0x211)](_0x3ed76a[_0x5841e0(0x478)], _0x3ed76a['_tempVector2'], _0x3ed76a[_0x5841e0(0x489)]);
            var _0x29ef6e = _0x3ed76a[_0x5841e0(0x47a)], _0x5376cf = _0x3ed76a['_tempVector3'], _0xc7494e = _0x3ed76a[_0x5841e0(0x478)], _0x37df89 = _0x327624, _0xc61916 = _0x5bd561[_0x5841e0(0x1f6)];
            _0xc61916[0x0] = _0x29ef6e['x'], _0xc61916[0x1] = _0x29ef6e['y'], _0xc61916[0x2] = _0x29ef6e['z'], _0xc61916[0x3] = 0x0, _0xc61916[0x4] = _0x5376cf['x'], _0xc61916[0x5] = _0x5376cf['y'], _0xc61916[0x6] = _0x5376cf['z'], _0xc61916[0x7] = 0x0, _0xc61916[0x8] = _0xc7494e['x'], _0xc61916[0x9] = _0xc7494e['y'], _0xc61916[0xa] = _0xc7494e['z'], _0xc61916[0xb] = 0x0, _0xc61916[0xc] = _0x37df89['x'], _0xc61916[0xd] = _0x37df89['y'], _0xc61916[0xe] = _0x37df89['z'], _0xc61916[0xf] = 0x1;
        }
        [_0x5659be(0x276)]() {
            var _0x5aaa12 = this['elements'];
            _0x5aaa12[0x1] = _0x5aaa12[0x2] = _0x5aaa12[0x3] = _0x5aaa12[0x4] = _0x5aaa12[0x6] = _0x5aaa12[0x7] = _0x5aaa12[0x8] = _0x5aaa12[0x9] = _0x5aaa12[0xb] = _0x5aaa12[0xc] = _0x5aaa12[0xd] = _0x5aaa12[0xe] = 0x0, _0x5aaa12[0x0] = _0x5aaa12[0x5] = _0x5aaa12[0xa] = _0x5aaa12[0xf] = 0x1;
        }
        [_0x5659be(0x1f0)](_0x5015be) {
            var _0x4342d4 = _0x5659be, _0x12817d, _0x3ef979, _0x1bb199;
            _0x3ef979 = this[_0x4342d4(0x1f6)], _0x1bb199 = _0x5015be[_0x4342d4(0x1f6)];
            if (_0x3ef979 === _0x1bb199)
                return;
            for (_0x12817d = 0x0; _0x12817d < 0x10; ++_0x12817d) {
                _0x1bb199[_0x12817d] = _0x3ef979[_0x12817d];
            }
        }
        [_0x5659be(0x1f4)]() {
            var _0x1aac14 = _0x5659be, _0x220480 = new _0x3ed76a();
            return this[_0x1aac14(0x1f0)](_0x220480), _0x220480;
        }
        static [_0x5659be(0x48a)](_0x5420b7, _0x3d8885) {
            var _0x3282d2 = _0x3d8885['elements'];
            _0x3282d2[0x0] = _0x3282d2[0x5] = _0x3282d2[0xa] = _0x3282d2[0xf] = 0x1, _0x3282d2[0xc] = _0x5420b7['x'], _0x3282d2[0xd] = _0x5420b7['y'], _0x3282d2[0xe] = _0x5420b7['z'];
        }
        [_0x5659be(0x48b)](_0x100a47) {
            var _0x1d83fd = _0x5659be, _0x2fa763 = this[_0x1d83fd(0x1f6)];
            _0x100a47['x'] = _0x2fa763[0xc], _0x100a47['y'] = _0x2fa763[0xd], _0x100a47['z'] = _0x2fa763[0xe];
        }
        ['setTranslationVector'](_0x21c1a5) {
            var _0x3d7f33 = this['elements'], _0xe4877c = _0x21c1a5;
            _0x3d7f33[0xc] = _0xe4877c['x'], _0x3d7f33[0xd] = _0xe4877c['y'], _0x3d7f33[0xe] = _0xe4877c['z'];
        }
        ['getForward'](_0x437d78) {
            var _0x2d6487 = _0x5659be, _0x34e0b5 = this[_0x2d6487(0x1f6)];
            _0x437d78['x'] = -_0x34e0b5[0x8], _0x437d78['y'] = -_0x34e0b5[0x9], _0x437d78['z'] = -_0x34e0b5[0xa];
        }
        [_0x5659be(0x48c)](_0xc093e5) {
            var _0x31f51c = _0x5659be, _0x5941db = this[_0x31f51c(0x1f6)];
            _0x5941db[0x8] = -_0xc093e5['x'], _0x5941db[0x9] = -_0xc093e5['y'], _0x5941db[0xa] = -_0xc093e5['z'];
        }
        [_0x5659be(0x48d)]() {
            var _0x4f0f52 = _0x5659be;
            this[_0x4f0f52(0x483)](_0x3ed76a[_0x4f0f52(0x478)], _0x3ed76a['_tempQuaternion'], _0x3ed76a[_0x4f0f52(0x479)]);
            var _0x1c2e37 = _0x3ed76a[_0x4f0f52(0x479)], _0x968efd = _0x1c2e37['x'] < 0x0;
            return _0x1c2e37['y'] < 0x0 && (_0x968efd = !_0x968efd), _0x1c2e37['z'] < 0x0 && (_0x968efd = !_0x968efd), _0x968efd;
        }
    }
    _0x3ed76a[_0x5659be(0x484)] = new _0x3ed76a(), _0x3ed76a[_0x5659be(0x28b)] = new _0x3ed76a(), _0x3ed76a[_0x5659be(0x28d)] = new _0x3ed76a(), _0x3ed76a['_tempVector0'] = new _0x3f70c5(), _0x3ed76a['_tempVector1'] = new _0x3f70c5(), _0x3ed76a[_0x5659be(0x47a)] = new _0x3f70c5(), _0x3ed76a[_0x5659be(0x489)] = new _0x3f70c5(), _0x3ed76a[_0x5659be(0x472)] = new _0x22f58f(), _0x3ed76a['DEFAULT'] = new _0x3ed76a(), _0x3ed76a[_0x5659be(0x1f8)] = new _0x3ed76a(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0);
    class _0x552b02 {
        constructor(_0x184f40 = null) {
            var _0x185e62 = _0x5659be;
            this[_0x185e62(0x48e)] = null, this[_0x185e62(0x48f)] = null, this[_0x185e62(0x490)] = new _0x23f873(), this[_0x185e62(0x491)] = [], this[_0x185e62(0x48e)] = _0x184f40, this['_initData']();
        }
        [_0x5659be(0x492)]() {
            var _0x4a5324 = _0x5659be;
            this[_0x4a5324(0x48f)] = {};
        }
        [_0x5659be(0x307)]() {
            var _0xfc0554 = _0x5659be;
            return this[_0xfc0554(0x48f)];
        }
        ['addDefine'](_0x56501e) {
            var _0x537141 = _0x5659be;
            this['_defineDatas'][_0x537141(0x201)](_0x56501e);
        }
        [_0x5659be(0x493)](_0x5b6454) {
            var _0x3bfdb5 = _0x5659be;
            this[_0x3bfdb5(0x490)][_0x3bfdb5(0x3a9)](_0x5b6454);
        }
        [_0x5659be(0x494)](_0x5295c5) {
            var _0x25ba6f = _0x5659be;
            return this[_0x25ba6f(0x490)][_0x25ba6f(0x43d)](_0x5295c5);
        }
        [_0x5659be(0x495)]() {
            var _0x1f7a04 = _0x5659be;
            this[_0x1f7a04(0x490)][_0x1f7a04(0x496)]();
        }
        ['getBool'](_0x24a5ba) {
            var _0x57df6c = _0x5659be;
            return this[_0x57df6c(0x48f)][_0x24a5ba];
        }
        [_0x5659be(0x497)](_0x270f18, _0x2e3e5b) {
            this['_data'][_0x270f18] = _0x2e3e5b;
        }
        ['getInt'](_0x23d92a) {
            var _0x53907a = _0x5659be;
            return this[_0x53907a(0x48f)][_0x23d92a];
        }
        ['setInt'](_0x917c75, _0x2d756) {
            var _0x8dee1a = _0x5659be;
            this[_0x8dee1a(0x48f)][_0x917c75] = _0x2d756;
        }
        [_0x5659be(0x498)](_0x187938) {
            var _0x51e750 = _0x5659be;
            return this[_0x51e750(0x48f)][_0x187938];
        }
        ['setNumber'](_0x4bc147, _0xd37fa8) {
            var _0x2e518a = _0x5659be;
            this[_0x2e518a(0x48f)][_0x4bc147] = _0xd37fa8;
        }
        [_0x5659be(0x499)](_0x21bd32) {
            var _0x2fa558 = _0x5659be;
            return this[_0x2fa558(0x48f)][_0x21bd32];
        }
        [_0x5659be(0x49a)](_0x91e027, _0x2219af) {
            var _0x43ad8b = _0x5659be;
            this[_0x43ad8b(0x48f)][_0x91e027] = _0x2219af;
        }
        [_0x5659be(0x49b)](_0x4a7cfc) {
            var _0x4b19a3 = _0x5659be;
            return this[_0x4b19a3(0x48f)][_0x4a7cfc];
        }
        ['setVector3'](_0x4a0426, _0x2b5937) {
            var _0x3437ea = _0x5659be;
            this[_0x3437ea(0x48f)][_0x4a0426] = _0x2b5937;
        }
        [_0x5659be(0x49c)](_0x449d1d) {
            var _0x34768e = _0x5659be;
            return this[_0x34768e(0x48f)][_0x449d1d];
        }
        [_0x5659be(0x49d)](_0xdab622, _0x36fc74) {
            this['_data'][_0xdab622] = _0x36fc74;
        }
        [_0x5659be(0x49e)](_0x898b7) {
            var _0x3059ef = _0x5659be;
            return this[_0x3059ef(0x48f)][_0x898b7];
        }
        ['setQuaternion'](_0x526ed4, _0x3c8806) {
            var _0x2a1a16 = _0x5659be;
            this[_0x2a1a16(0x48f)][_0x526ed4] = _0x3c8806;
        }
        [_0x5659be(0x49f)](_0xa82788) {
            var _0x4faf82 = _0x5659be;
            return this[_0x4faf82(0x48f)][_0xa82788];
        }
        [_0x5659be(0x4a0)](_0x185348, _0x3dbb42) {
            var _0x514b36 = _0x5659be;
            this[_0x514b36(0x48f)][_0x185348] = _0x3dbb42;
        }
        [_0x5659be(0x4a1)](_0x566fcb) {
            var _0x323e57 = _0x5659be;
            return this[_0x323e57(0x48f)][_0x566fcb];
        }
        ['setBuffer'](_0x2785cf, _0x22fb11) {
            var _0x58e8d1 = _0x5659be;
            this[_0x58e8d1(0x48f)][_0x2785cf] = _0x22fb11;
        }
        [_0x5659be(0x4a2)](_0x305f7e, _0x57a33c) {
            var _0x6a4716 = _0x5659be, _0x13ede5 = this[_0x6a4716(0x48f)][_0x305f7e];
            this[_0x6a4716(0x48f)][_0x305f7e] = _0x57a33c ? _0x57a33c : _0x218b83[_0x6a4716(0x2cd)][_0x6a4716(0x4a3)], this['_ownerResource'] && this[_0x6a4716(0x48e)][_0x6a4716(0x367)] > 0x0 && (_0x13ede5 && _0x13ede5[_0x6a4716(0x351)](), _0x57a33c && _0x57a33c['_addReference']());
        }
        [_0x5659be(0x4a4)](_0x4a5c63) {
            return this['_data'][_0x4a5c63];
        }
        [_0x5659be(0x4a5)](_0x200536, _0x5cc351) {
            var _0x5e101f = _0x5659be;
            this[_0x5e101f(0x48f)][_0x200536] = _0x5cc351;
        }
        [_0x5659be(0x4a6)](_0x181e54) {
            var _0x93526c = _0x5659be;
            return this[_0x93526c(0x48f)][_0x181e54];
        }
        ['setAttribute'](_0x1c8348, _0x246ff6) {
            this['_data'][_0x1c8348] = _0x246ff6;
        }
        [_0x5659be(0x4a7)](_0xe61559) {
            var _0x46d0dc = _0x5659be;
            return this[_0x46d0dc(0x48f)][_0xe61559];
        }
        [_0x5659be(0x4a8)]() {
            var _0x99449d = _0x5659be;
            return this['_data'][_0x99449d(0x1ff)];
        }
        [_0x5659be(0x4a9)](_0x5317b2) {
            var _0x2f1d0d = _0x5659be;
            this[_0x2f1d0d(0x48f)]['length'] = _0x5317b2;
        }
        [_0x5659be(0x1f0)](_0x75818) {
            var _0x254f97 = _0x5659be, _0x396417 = _0x75818, _0x48c462 = _0x396417[_0x254f97(0x48f)];
            for (var _0x430ed3 in this[_0x254f97(0x48f)]) {
                var _0x237758 = this[_0x254f97(0x48f)][_0x430ed3];
                if (_0x237758 != null) {
                    if (typeof _0x237758 == _0x254f97(0x4aa))
                        _0x48c462[_0x430ed3] = _0x237758;
                    else {
                        if (typeof _0x237758 == _0x254f97(0x4aa))
                            _0x48c462[_0x430ed3] = _0x237758;
                        else {
                            if (typeof _0x237758 == _0x254f97(0x4ab))
                                _0x48c462[_0x430ed3] = _0x237758;
                            else {
                                if (_0x237758 instanceof _0x12bf01) {
                                    var _0x3a977b = _0x48c462[_0x430ed3] || (_0x48c462[_0x430ed3] = new _0x12bf01());
                                    _0x237758[_0x254f97(0x1f0)](_0x3a977b), _0x48c462[_0x430ed3] = _0x3a977b;
                                } else {
                                    if (_0x237758 instanceof _0x3f70c5) {
                                        var _0x5cca68 = _0x48c462[_0x430ed3] || (_0x48c462[_0x430ed3] = new _0x3f70c5());
                                        _0x237758[_0x254f97(0x1f0)](_0x5cca68), _0x48c462[_0x430ed3] = _0x5cca68;
                                    } else {
                                        if (_0x237758 instanceof _0x8fb80) {
                                            var _0x4412f1 = _0x48c462[_0x430ed3] || (_0x48c462[_0x430ed3] = new _0x8fb80());
                                            _0x237758[_0x254f97(0x1f0)](_0x4412f1), _0x48c462[_0x430ed3] = _0x4412f1;
                                        } else {
                                            if (_0x237758 instanceof _0x3ed76a) {
                                                var _0x1058ee = _0x48c462[_0x430ed3] || (_0x48c462[_0x430ed3] = new _0x3ed76a());
                                                _0x237758['cloneTo'](_0x1058ee), _0x48c462[_0x430ed3] = _0x1058ee;
                                            } else
                                                _0x237758 instanceof _0x218b83[_0x254f97(0x3da)] && (_0x48c462[_0x430ed3] = _0x237758);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDatas'][_0x254f97(0x1f0)](_0x396417['_defineDatas']);
        }
        [_0x5659be(0x1f4)]() {
            var _0x1da3f6 = _0x5659be, _0x3455a8 = new _0x552b02();
            return this[_0x1da3f6(0x1f0)](_0x3455a8), _0x3455a8;
        }
        [_0x5659be(0x4ac)](_0x3e3951) {
            var _0x3d0ff4 = _0x5659be, _0x97eade = _0x3e3951, _0x579f09 = this[_0x3d0ff4(0x4ad)][_0x3d0ff4(0x1ff)] - _0x97eade[_0x3d0ff4(0x4ad)][_0x3d0ff4(0x1ff)];
            _0x579f09 > 0x0 && _0x97eade['needRenewArrayBufferForNative'](this[_0x3d0ff4(0x4ad)]['length']);
            _0x97eade['_int32Data']['set'](this[_0x3d0ff4(0x4ad)], 0x0);
            var _0x1f9358 = _0x97eade[_0x3d0ff4(0x4ae)], _0xb00fbd = this[_0x3d0ff4(0x4ae)][_0x3d0ff4(0x1ff)];
            _0x1f9358[_0x3d0ff4(0x1ff)] = _0xb00fbd;
            for (var _0x4788dd = 0x0; _0x4788dd < _0xb00fbd; _0x4788dd++) {
                var _0x12ea30 = this[_0x3d0ff4(0x4ae)][_0x4788dd];
                if (_0x12ea30) {
                    if (typeof _0x12ea30 == 'number')
                        _0x1f9358[_0x4788dd] = _0x12ea30, _0x97eade[_0x3d0ff4(0x4af)](_0x4788dd, _0x12ea30);
                    else {
                        if (typeof _0x12ea30 == 'number')
                            _0x1f9358[_0x4788dd] = _0x12ea30, _0x97eade[_0x3d0ff4(0x4b0)](_0x4788dd, _0x12ea30);
                        else {
                            if (typeof _0x12ea30 == _0x3d0ff4(0x4ab))
                                _0x1f9358[_0x4788dd] = _0x12ea30, _0x97eade[_0x3d0ff4(0x497)](_0x4788dd, _0x12ea30);
                            else {
                                if (_0x12ea30 instanceof _0x12bf01) {
                                    var _0x36fc1b = _0x1f9358[_0x4788dd] || (_0x1f9358[_0x4788dd] = new _0x12bf01());
                                    _0x12ea30[_0x3d0ff4(0x1f0)](_0x36fc1b), _0x1f9358[_0x4788dd] = _0x36fc1b, _0x97eade['setVector2'](_0x4788dd, _0x36fc1b);
                                } else {
                                    if (_0x12ea30 instanceof _0x3f70c5) {
                                        var _0x4b9ec3 = _0x1f9358[_0x4788dd] || (_0x1f9358[_0x4788dd] = new _0x3f70c5());
                                        _0x12ea30['cloneTo'](_0x4b9ec3), _0x1f9358[_0x4788dd] = _0x4b9ec3, _0x97eade[_0x3d0ff4(0x4b1)](_0x4788dd, _0x4b9ec3);
                                    } else {
                                        if (_0x12ea30 instanceof _0x8fb80) {
                                            var _0x19ece9 = _0x1f9358[_0x4788dd] || (_0x1f9358[_0x4788dd] = new _0x8fb80());
                                            _0x12ea30['cloneTo'](_0x19ece9), _0x1f9358[_0x4788dd] = _0x19ece9, _0x97eade[_0x3d0ff4(0x49d)](_0x4788dd, _0x19ece9);
                                        } else {
                                            if (_0x12ea30 instanceof _0x3ed76a) {
                                                var _0x354e69 = _0x1f9358[_0x4788dd] || (_0x1f9358[_0x4788dd] = new _0x3ed76a());
                                                _0x12ea30['cloneTo'](_0x354e69), _0x1f9358[_0x4788dd] = _0x354e69, _0x97eade['setMatrix4x4'](_0x4788dd, _0x354e69);
                                            } else
                                                _0x12ea30 instanceof _0x218b83[_0x3d0ff4(0x3da)] && (_0x1f9358[_0x4788dd] = _0x12ea30, _0x97eade[_0x3d0ff4(0x4a2)](_0x4788dd, _0x12ea30));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this[_0x3d0ff4(0x490)]['cloneTo'](_0x97eade[_0x3d0ff4(0x490)]);
        }
        [_0x5659be(0x4b2)]() {
            var _0x38370c = _0x5659be, _0x153438 = 0x8;
            this[_0x38370c(0x4b3)] = -0x1, this[_0x38370c(0x491)][_0x38370c(0x1ff)] = 0x0, this[_0x38370c(0x4ae)] = [], this[_0x38370c(0x48f)] = new ArrayBuffer(_0x153438 * 0x4), this[_0x38370c(0x4ad)] = new Int32Array(this[_0x38370c(0x48f)]), this[_0x38370c(0x4b4)] = new Float32Array(this['_data']), _0x218b83['LayaGL'][_0x38370c(0x2f4)][_0x38370c(0x4b5)](this[_0x38370c(0x48f)], _0x218b83[_0x38370c(0x2f3)][_0x38370c(0x4b6)], !![]);
        }
        [_0x5659be(0x4b7)](_0xa69201) {
            var _0x280ce1 = _0x5659be;
            if (_0xa69201 >= this[_0x280ce1(0x4ad)][_0x280ce1(0x1ff)]) {
                var _0x4f6650 = (_0xa69201 + 0x1) * 0x4, _0x45795b = this[_0x280ce1(0x4ad)], _0x1eccea = this[_0x280ce1(0x48f)][_0x280ce1(0x4b8)], _0x24035b = this[_0x280ce1(0x48f)][_0x280ce1(0x4b9)];
                this[_0x280ce1(0x48f)] = new ArrayBuffer(_0x4f6650), this[_0x280ce1(0x4ad)] = new Int32Array(this['_data']), this[_0x280ce1(0x4b4)] = new Float32Array(this['_data']), this[_0x280ce1(0x48f)][_0x280ce1(0x4b8)] = _0x1eccea, this[_0x280ce1(0x48f)]['_ptrID'] = _0x24035b, _0x45795b && this[_0x280ce1(0x4ad)][_0x280ce1(0x450)](_0x45795b, 0x0);
                var _0x2dd722 = _0x218b83[_0x280ce1(0x2f3)][_0x280ce1(0x2f4)];
                _0x2dd722[_0x280ce1(0x4ba)] ? _0x2dd722['updateArrayBufferRef'](this[_0x280ce1(0x48f)][_0x280ce1(0x4b9)], _0x1eccea['isSyncToRender'](), this['_data']) : window['conch']['updateArrayBufferRef'](this[_0x280ce1(0x48f)][_0x280ce1(0x4b9)], _0x1eccea[_0x280ce1(0x4bb)](), this[_0x280ce1(0x48f)]);
            }
        }
        [_0x5659be(0x4bc)]() {
            var _0x21307a = _0x5659be;
            return this[_0x21307a(0x4ae)];
        }
        ['getIntForNative'](_0x54b349) {
            var _0x43d953 = _0x5659be;
            return this[_0x43d953(0x4ad)][_0x54b349];
        }
        ['setIntForNative'](_0x55e6bd, _0x23dc24) {
            var _0x466476 = _0x5659be;
            this[_0x466476(0x4b7)](_0x55e6bd), this[_0x466476(0x4ad)][_0x55e6bd] = _0x23dc24, this[_0x466476(0x4ae)][_0x55e6bd] = _0x23dc24;
        }
        [_0x5659be(0x4bd)](_0x4a23b7) {
            return this['_int32Data'][_0x4a23b7] == 0x1;
        }
        [_0x5659be(0x4be)](_0xf8c7b2, _0x56bbfc) {
            var _0x347188 = _0x5659be;
            this[_0x347188(0x4b7)](_0xf8c7b2), this[_0x347188(0x4ad)][_0xf8c7b2] = _0x56bbfc ? 0x1 : 0x0, this[_0x347188(0x4ae)][_0xf8c7b2] = _0x56bbfc;
        }
        [_0x5659be(0x4bf)](_0x1f8115) {
            return this['_float32Data'][_0x1f8115];
        }
        [_0x5659be(0x4c0)](_0x4a7ca2, _0x20a691) {
            var _0x261ae7 = _0x5659be;
            this[_0x261ae7(0x4b7)](_0x4a7ca2), this[_0x261ae7(0x4b4)][_0x4a7ca2] = _0x20a691, this[_0x261ae7(0x4ae)][_0x4a7ca2] = _0x20a691;
        }
        [_0x5659be(0x4c1)](_0x314828) {
            var _0x200fbd = _0x5659be;
            return this[_0x200fbd(0x4ae)][_0x314828];
        }
        [_0x5659be(0x4c2)](_0x70b0c9, _0x390d7c) {
            var _0x3c1480 = _0x5659be;
            this[_0x3c1480(0x4b7)](_0x70b0c9), this[_0x3c1480(0x4ae)][_0x70b0c9] = _0x390d7c;
            var _0x1fc2ca = this[_0x3c1480(0x4c3)](_0x390d7c['elements']);
            this[_0x3c1480(0x4ad)][_0x70b0c9] = _0x1fc2ca;
        }
        [_0x5659be(0x4c4)](_0x7caad4) {
            var _0x5a0916 = _0x5659be;
            return this[_0x5a0916(0x4ae)][_0x7caad4];
        }
        ['setVectorForNative'](_0x4289f1, _0x4e2add) {
            var _0x603d54 = _0x5659be;
            this['needRenewArrayBufferForNative'](_0x4289f1), this[_0x603d54(0x4ae)][_0x4289f1] = _0x4e2add;
            !_0x4e2add[_0x603d54(0x1f6)] && _0x4e2add['forNativeElement']();
            var _0x563f50 = this['setReferenceForNative'](_0x4e2add[_0x603d54(0x1f6)]);
            this[_0x603d54(0x4ad)][_0x4289f1] = _0x563f50;
        }
        [_0x5659be(0x4c5)](_0x6c1783) {
            var _0x5978f2 = _0x5659be;
            return this[_0x5978f2(0x4ae)][_0x6c1783];
        }
        [_0x5659be(0x4c6)](_0x333b24, _0x20eafb) {
            var _0x56cc76 = _0x5659be;
            this[_0x56cc76(0x4b7)](_0x333b24), this[_0x56cc76(0x4ae)][_0x333b24] = _0x20eafb;
            !_0x20eafb[_0x56cc76(0x1f6)] && _0x20eafb['forNativeElement']();
            var _0x324239 = this[_0x56cc76(0x4c3)](_0x20eafb[_0x56cc76(0x1f6)]);
            this[_0x56cc76(0x4ad)][_0x333b24] = _0x324239;
        }
        [_0x5659be(0x4c7)](_0x1e6257) {
            return this['_nativeArray'][_0x1e6257];
        }
        [_0x5659be(0x4c8)](_0x3e8796, _0x54efbd) {
            var _0x4bd0bf = _0x5659be;
            this[_0x4bd0bf(0x4b7)](_0x3e8796), this[_0x4bd0bf(0x4ae)][_0x3e8796] = _0x54efbd;
            !_0x54efbd[_0x4bd0bf(0x1f6)] && _0x54efbd[_0x4bd0bf(0x1f5)]();
            var _0xbbd835 = this[_0x4bd0bf(0x4c3)](_0x54efbd[_0x4bd0bf(0x1f6)]);
            this[_0x4bd0bf(0x4ad)][_0x3e8796] = _0xbbd835;
        }
        [_0x5659be(0x4c9)](_0x3391b4) {
            return this['_nativeArray'][_0x3391b4];
        }
        [_0x5659be(0x4ca)](_0x269e44, _0x3eb391) {
            var _0x289b29 = _0x5659be;
            this['needRenewArrayBufferForNative'](_0x269e44), this[_0x289b29(0x4ae)][_0x269e44] = _0x3eb391;
            !_0x3eb391[_0x289b29(0x1f6)] && _0x3eb391[_0x289b29(0x1f5)]();
            var _0x58d6d6 = this['setReferenceForNative'](_0x3eb391[_0x289b29(0x1f6)]);
            this[_0x289b29(0x4ad)][_0x269e44] = _0x58d6d6;
        }
        [_0x5659be(0x4cb)](_0x5adb42) {
            var _0x1c8ea5 = _0x5659be;
            return this[_0x1c8ea5(0x4ae)][_0x5adb42];
        }
        [_0x5659be(0x4cc)](_0x55a5f6, _0x3a124b) {
            var _0x599ea4 = _0x5659be;
            this['needRenewArrayBufferForNative'](_0x55a5f6), this[_0x599ea4(0x4ae)][_0x55a5f6] = _0x3a124b;
            var _0x583aec = this[_0x599ea4(0x4c3)](_0x3a124b);
            this[_0x599ea4(0x4ad)][_0x55a5f6] = _0x583aec;
        }
        [_0x5659be(0x4cd)](_0x1f0a71) {
            return this['_nativeArray'][_0x1f0a71];
        }
        [_0x5659be(0x4ce)](_0x3d8076, _0x172e13) {
            var _0x1c85f4 = _0x5659be;
            this[_0x1c85f4(0x4ae)][_0x3d8076] = _0x172e13, !_0x172e13[_0x1c85f4(0x4b9)] && _0x218b83['LayaGL'][_0x1c85f4(0x2f4)]['createArrayBufferRef'](_0x172e13, _0x218b83[_0x1c85f4(0x2f3)][_0x1c85f4(0x4b6)], !![]), _0x218b83[_0x1c85f4(0x2f3)][_0x1c85f4(0x2f4)][_0x1c85f4(0x4cf)](_0x172e13), this[_0x1c85f4(0x4ad)][_0x3d8076] = _0x172e13['_ptrID'];
        }
        [_0x5659be(0x4d0)](_0x425780) {
            return this['_nativeArray'][_0x425780];
        }
        [_0x5659be(0x4d1)](_0x4c5419, _0x396f78) {
            var _0x2eb20d = _0x5659be;
            if (!_0x396f78)
                return;
            this['needRenewArrayBufferForNative'](_0x4c5419);
            var _0x2f9614 = this[_0x2eb20d(0x4ae)][_0x4c5419];
            this['_nativeArray'][_0x4c5419] = _0x396f78;
            var _0x1ca5bb = _0x396f78[_0x2eb20d(0x4d2)]() || _0x396f78['defaulteTexture'][_0x2eb20d(0x4d2)]();
            this['_int32Data'][_0x4c5419] = _0x1ca5bb['id'], this[_0x2eb20d(0x48e)] && this[_0x2eb20d(0x48e)][_0x2eb20d(0x367)] > 0x0 && (_0x2f9614 && _0x2f9614[_0x2eb20d(0x351)](), _0x396f78 && _0x396f78[_0x2eb20d(0x354)]());
        }
        [_0x5659be(0x4c3)](_0x23b46d) {
            var _0x580283 = _0x5659be;
            this[_0x580283(0x4d3)]();
            var _0x5a87a5 = 0x0, _0x5757ed = 0x0;
            return _0x552b02[_0x580283(0x4d4)] ? (_0x218b83[_0x580283(0x2f3)][_0x580283(0x2f4)][_0x580283(0x4d5)](_0x23b46d, _0x218b83['LayaGL'][_0x580283(0x4b6)], !![], _0x218b83[_0x580283(0x2f3)][_0x580283(0x4d6)]), _0x5a87a5 = 0x0, _0x5757ed = _0x23b46d[_0x580283(0x4d7)](_0x5a87a5)) : (_0x218b83[_0x580283(0x2f3)]['instance'][_0x580283(0x4d5)](_0x23b46d, _0x218b83[_0x580283(0x2f3)][_0x580283(0x4b6)], !![], _0x218b83['LayaGL']['ARRAY_BUFFER_REF_COPY']), _0x5a87a5 = _0x23b46d[_0x580283(0x4d8)]() - 0x1, _0x5757ed = _0x23b46d['getPtrID'](_0x5a87a5), this['_runtimeCopyValues'][_0x580283(0x298)]({
                'obj': _0x23b46d,
                'refID': _0x5a87a5,
                'ptrID': _0x5757ed
            })), _0x218b83[_0x580283(0x2f3)]['instance'][_0x580283(0x4cf)](_0x23b46d, _0x5a87a5), _0x5757ed;
        }
        static [_0x5659be(0x4d9)](_0x551a04) {
            _0x552b02['_SET_RUNTIME_VALUE_MODE_REFERENCE_'] = _0x551a04;
        }
        [_0x5659be(0x4d3)]() {
            var _0x557385 = _0x5659be, _0x780cc5 = _0x218b83['Stat'][_0x557385(0x4da)];
            if (this[_0x557385(0x4b3)] != _0x780cc5) {
                this[_0x557385(0x4b3)] = _0x780cc5;
                for (var _0x79188d = 0x0, _0xcddf51 = this['_runtimeCopyValues'][_0x557385(0x1ff)]; _0x79188d < _0xcddf51; _0x79188d++) {
                    var _0x41de6d = this['_runtimeCopyValues'][_0x79188d];
                    _0x41de6d[_0x557385(0x4db)][_0x557385(0x4dc)]();
                }
                this[_0x557385(0x491)][_0x557385(0x1ff)] = 0x0;
            }
        }
    }
    _0x552b02['_SET_RUNTIME_VALUE_MODE_REFERENCE_'] = !![];
    class _0x330160 {
        constructor(_0x8b45e3, _0x29e85d) {
            var _0x406e35 = _0x5659be;
            this['_id'] = ++_0x330160['_uniqueIDCounter'], this[_0x406e35(0x4dd)] = {}, this[_0x406e35(0x4de)] = _0x8b45e3, this[_0x406e35(0x4df)] = _0x29e85d;
            var _0x1d3aef = _0x29e85d[_0x406e35(0x1ff)];
            this[_0x406e35(0x4e0)] = new _0x552b02(null);
            for (var _0x2e4308 = 0x0; _0x2e4308 < _0x1d3aef; _0x2e4308++) {
                var _0x272098 = _0x29e85d[_0x2e4308], _0x292fda = _0x272098[_0x406e35(0x4e1)];
                this[_0x406e35(0x4dd)][_0x292fda] = _0x272098;
                var _0x3c9655 = new Int32Array(0x5), _0x537f2f = _0x48a921['getElementInfos'](_0x272098[_0x406e35(0x4e2)]);
                _0x3c9655[0x0] = _0x537f2f[0x0], _0x3c9655[0x1] = _0x537f2f[0x1], _0x3c9655[0x2] = _0x537f2f[0x2], _0x3c9655[0x3] = this[_0x406e35(0x4de)], _0x3c9655[0x4] = _0x272098[_0x406e35(0x4e3)], this[_0x406e35(0x4e0)]['setAttribute'](_0x292fda, _0x3c9655);
            }
        }
        get ['id']() {
            return this['_id'];
        }
        get [_0x5659be(0x4e4)]() {
            var _0x218b1a = _0x5659be;
            return this[_0x218b1a(0x4de)];
        }
        get [_0x5659be(0x4e5)]() {
            var _0x218273 = _0x5659be;
            return this[_0x218273(0x4df)][_0x218273(0x1ff)];
        }
        [_0x5659be(0x4e6)](_0x5dad54) {
            var _0x2f68c1 = _0x5659be;
            return this[_0x2f68c1(0x4df)][_0x5dad54];
        }
        [_0x5659be(0x4e7)](_0x59c24b) {
            var _0x43c1b6 = _0x5659be;
            return this[_0x43c1b6(0x4dd)][_0x59c24b];
        }
    }
    _0x330160[_0x5659be(0x4e8)] = 0x1;
    class _0x1f18c6 {
        constructor(_0x2040d4, _0x5ebbdc, _0x28e4fc) {
            var _0x1348c4 = _0x5659be;
            this[_0x1348c4(0x4e3)] = _0x2040d4, this[_0x1348c4(0x4e2)] = _0x5ebbdc, this[_0x1348c4(0x4e1)] = _0x28e4fc;
        }
        get ['offset']() {
            return this['_offset'];
        }
        get [_0x5659be(0x4e9)]() {
            return this['_elementFormat'];
        }
        get ['elementUsage']() {
            return this['_elementUsage'];
        }
    }
    class _0x174c4a extends _0x218b83['BufferStateBase'] {
        constructor() {
            super();
        }
        [_0x5659be(0x4ea)](_0x118db5) {
            var _0x4c8e95 = _0x5659be;
            if (_0x218b83[_0x4c8e95(0x4eb)][_0x4c8e95(0x4ec)] === this) {
                var _0x1b88f8 = _0x218b83['LayaGL'][_0x4c8e95(0x2f4)], _0x48e5ba = _0x118db5[_0x4c8e95(0x449)], _0x2013cc = _0x48e5ba[_0x4c8e95(0x4e0)][_0x4c8e95(0x307)]();
                this[_0x4c8e95(0x449)] = _0x48e5ba, _0x118db5['bind']();
                for (var _0x312023 in _0x2013cc) {
                    var _0x199f49 = parseInt(_0x312023), _0x3e9c58 = _0x2013cc[_0x312023];
                    _0x1b88f8['enableVertexAttribArray'](_0x199f49), _0x1b88f8[_0x4c8e95(0x4ed)](_0x199f49, _0x3e9c58[0x0], _0x3e9c58[0x1], !!_0x3e9c58[0x2], _0x3e9c58[0x3], _0x3e9c58[0x4]);
                }
            } else
                throw _0x4c8e95(0x4ee);
        }
        [_0x5659be(0x4ef)](_0x4b5930) {
            var _0x45b627 = _0x5659be;
            if (_0x218b83['BufferStateBase']['_curBindedBufferState'] === this) {
                var _0x11dfc1 = _0x218b83['LayaGL'][_0x45b627(0x2f4)];
                for (var _0x48c561 = 0x0, _0x4f3f76 = _0x4b5930[_0x45b627(0x1ff)]; _0x48c561 < _0x4f3f76; _0x48c561++) {
                    var _0x5d6852 = _0x4b5930[_0x48c561], _0x3f6403 = _0x5d6852[_0x45b627(0x449)], _0x5bd093 = _0x3f6403[_0x45b627(0x4e0)]['getData']();
                    _0x5d6852[_0x45b627(0x444)]();
                    for (var _0x3bdfb7 in _0x5bd093) {
                        var _0x46b978 = parseInt(_0x3bdfb7), _0x3dea19 = _0x5bd093[_0x3bdfb7];
                        _0x11dfc1[_0x45b627(0x4f0)](_0x46b978), _0x11dfc1['vertexAttribPointer'](_0x46b978, _0x3dea19[0x0], _0x3dea19[0x1], !!_0x3dea19[0x2], _0x3dea19[0x3], _0x3dea19[0x4]);
                    }
                }
            } else
                throw _0x45b627(0x4ee);
        }
        [_0x5659be(0x4f1)](_0x50782d) {
            var _0x5057c4 = _0x5659be;
            if (_0x218b83[_0x5057c4(0x2f3)][_0x5057c4(0x3ed)]['supportInstance']()) {
                if (_0x218b83[_0x5057c4(0x4eb)][_0x5057c4(0x4ec)] === this) {
                    var _0x4adcc2 = _0x218b83[_0x5057c4(0x2f3)][_0x5057c4(0x2f4)], _0x3525a1 = _0x50782d[_0x5057c4(0x449)], _0x14d390 = _0x3525a1[_0x5057c4(0x4e0)][_0x5057c4(0x307)]();
                    _0x50782d['bind']();
                    for (var _0x67c715 in _0x14d390) {
                        var _0x8f6db0 = parseInt(_0x67c715), _0x276b58 = _0x14d390[_0x67c715];
                        _0x4adcc2[_0x5057c4(0x4f0)](_0x8f6db0), _0x4adcc2[_0x5057c4(0x4ed)](_0x8f6db0, _0x276b58[0x0], _0x276b58[0x1], !!_0x276b58[0x2], _0x276b58[0x3], _0x276b58[0x4]), _0x218b83[_0x5057c4(0x2f3)]['layaGPUInstance'][_0x5057c4(0x4f2)](_0x8f6db0, 0x1);
                    }
                } else
                    throw 'BufferState:\x20must\x20call\x20bind()\x20function\x20first.';
            }
        }
        [_0x5659be(0x4f3)](_0x3ea0f2) {
            var _0x529f55 = _0x5659be;
            if (_0x218b83[_0x529f55(0x4eb)][_0x529f55(0x4ec)] === this)
                this[_0x529f55(0x4f4)] !== _0x3ea0f2 && (_0x3ea0f2[_0x529f55(0x4f5)](), this[_0x529f55(0x4f4)] = _0x3ea0f2);
            else
                throw _0x529f55(0x4ee);
        }
    }
    class _0x10ceb5 extends _0x218b83[_0x5659be(0x315)] {
        constructor() {
            var _0xd7127d = _0x5659be;
            super(), this[_0xd7127d(0x4f6)] = new _0x174c4a(), this[_0xd7127d(0x4f7)] = new _0x174c4a();
            var _0x1c559f = _0x218b83[_0xd7127d(0x2f3)][_0xd7127d(0x2f4)];
            this['_vertexBuffer'] = new _0x57a6a2(0x10 * 0x4, _0x1c559f[_0xd7127d(0x4f8)], ![]), this[_0xd7127d(0x4f9)][_0xd7127d(0x449)] = _0x10ceb5[_0xd7127d(0x43f)], this[_0xd7127d(0x4f9)]['setData'](_0x10ceb5[_0xd7127d(0x4fa)][_0xd7127d(0x448)]), this['_bufferState']['bind'](), this[_0xd7127d(0x4f6)][_0xd7127d(0x4ea)](this[_0xd7127d(0x4f9)]), this[_0xd7127d(0x4f6)][_0xd7127d(0x4fb)](), this['_vertexBufferInvertUV'] = new _0x57a6a2(0x10 * 0x4, _0x1c559f[_0xd7127d(0x4f8)], ![]), this[_0xd7127d(0x4fc)][_0xd7127d(0x449)] = _0x10ceb5[_0xd7127d(0x43f)], this['_vertexBufferInvertUV'][_0xd7127d(0x4fd)](_0x10ceb5['_verticesInvertUV'][_0xd7127d(0x448)]), this[_0xd7127d(0x4f7)][_0xd7127d(0x444)](), this[_0xd7127d(0x4f7)][_0xd7127d(0x4ea)](this[_0xd7127d(0x4fc)]), this[_0xd7127d(0x4f7)][_0xd7127d(0x4fb)](), this['_setGPUMemory'](this['_vertexBuffer'][_0xd7127d(0x443)] + this[_0xd7127d(0x4fc)][_0xd7127d(0x443)]);
        }
        static ['__init__']() {
            var _0x562b63 = _0x5659be;
            _0x10ceb5[_0x562b63(0x43f)] = new _0x330160(0x10, [new _0x1f18c6(0x0, _0x48a921[_0x562b63(0x45f)], _0x10ceb5[_0x562b63(0x4fe)])]), _0x10ceb5[_0x562b63(0x2f4)] = new _0x10ceb5(), _0x10ceb5[_0x562b63(0x2f4)][_0x562b63(0x30b)] = !![];
        }
        ['render']() {
            var _0x21444d = _0x5659be, _0x5bdd3d = _0x218b83['LayaGL']['instance'];
            this['_bufferState'][_0x21444d(0x444)](), _0x5bdd3d['drawArrays'](_0x5bdd3d[_0x21444d(0x4ff)], 0x0, 0x4), _0x218b83[_0x21444d(0x500)][_0x21444d(0x501)]++;
        }
        [_0x5659be(0x502)]() {
            var _0x1a3380 = _0x5659be, _0x2f57a2 = _0x218b83['LayaGL']['instance'];
            this[_0x1a3380(0x4f7)][_0x1a3380(0x444)](), _0x2f57a2[_0x1a3380(0x503)](_0x2f57a2[_0x1a3380(0x4ff)], 0x0, 0x4), _0x218b83['Stat']['renderBatches']++;
        }
        [_0x5659be(0x311)]() {
            var _0x13c426 = _0x5659be;
            super[_0x13c426(0x311)](), this[_0x13c426(0x4f6)][_0x13c426(0x311)](), this[_0x13c426(0x4f9)]['destroy'](), this[_0x13c426(0x4f7)][_0x13c426(0x311)](), this[_0x13c426(0x4fc)][_0x13c426(0x311)](), this[_0x13c426(0x423)](0x0);
        }
    }
    _0x10ceb5[_0x5659be(0x4fe)] = 0x0, _0x10ceb5[_0x5659be(0x4fa)] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        -0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        -0x1,
        0x0,
        0x0
    ]), _0x10ceb5[_0x5659be(0x504)] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        0x0,
        -0x1,
        -0x1,
        0x0,
        0x1
    ]);
    class _0x413ee3 extends _0x218b83[_0x5659be(0x315)] {
        constructor() {
            var _0x55c6d6 = _0x5659be;
            super(), this[_0x55c6d6(0x4f6)] = new _0x174c4a(), this['_bufferStateInvertUV'] = new _0x174c4a();
            var _0x343f33 = _0x218b83[_0x55c6d6(0x2f3)][_0x55c6d6(0x2f4)];
            this['_vertexBuffer'] = new _0x57a6a2(0xc * 0x4, _0x343f33[_0x55c6d6(0x4f8)], ![]), this[_0x55c6d6(0x4f9)]['vertexDeclaration'] = _0x413ee3[_0x55c6d6(0x43f)], this[_0x55c6d6(0x4f9)]['setData'](_0x413ee3['_vertices'][_0x55c6d6(0x448)]), this[_0x55c6d6(0x4f6)][_0x55c6d6(0x444)](), this['_bufferState'][_0x55c6d6(0x4ea)](this['_vertexBuffer']), this[_0x55c6d6(0x4f6)][_0x55c6d6(0x4fb)](), this['_vertexBufferInvertUV'] = new _0x57a6a2(0xc * 0x4, _0x343f33[_0x55c6d6(0x4f8)], ![]), this[_0x55c6d6(0x4fc)][_0x55c6d6(0x449)] = _0x413ee3['_vertexDeclaration'], this[_0x55c6d6(0x4fc)][_0x55c6d6(0x4fd)](_0x413ee3[_0x55c6d6(0x504)]['buffer']), this[_0x55c6d6(0x4f7)][_0x55c6d6(0x444)](), this['_bufferStateInvertUV'][_0x55c6d6(0x4ea)](this['_vertexBufferInvertUV']), this[_0x55c6d6(0x4f7)][_0x55c6d6(0x4fb)](), this[_0x55c6d6(0x423)](this[_0x55c6d6(0x4f9)][_0x55c6d6(0x443)] + this['_vertexBufferInvertUV']['_byteLength']);
        }
        static [_0x5659be(0x229)]() {
            var _0x529350 = _0x5659be;
            _0x413ee3[_0x529350(0x43f)] = new _0x330160(0x10, [new _0x1f18c6(0x0, _0x48a921['Vector4'], _0x413ee3[_0x529350(0x505)])]), _0x413ee3[_0x529350(0x2f4)] = new _0x413ee3(), _0x413ee3['instance'][_0x529350(0x30b)] = !![];
        }
        [_0x5659be(0x506)]() {
            var _0x789528 = _0x5659be, _0x12a32d = _0x218b83['LayaGL'][_0x789528(0x2f4)];
            this[_0x789528(0x4f6)][_0x789528(0x444)](), _0x12a32d[_0x789528(0x503)](_0x12a32d[_0x789528(0x507)], 0x0, 0x3), _0x218b83[_0x789528(0x500)][_0x789528(0x501)]++;
        }
        [_0x5659be(0x502)]() {
            var _0x5741fc = _0x5659be, _0xc9f162 = _0x218b83[_0x5741fc(0x2f3)][_0x5741fc(0x2f4)];
            this[_0x5741fc(0x4f7)][_0x5741fc(0x444)](), _0xc9f162[_0x5741fc(0x503)](_0xc9f162[_0x5741fc(0x507)], 0x0, 0x3), _0x218b83[_0x5741fc(0x500)][_0x5741fc(0x501)]++;
        }
        [_0x5659be(0x311)]() {
            var _0x49756d = _0x5659be;
            super[_0x49756d(0x311)](), this['_bufferState']['destroy'](), this['_vertexBuffer'][_0x49756d(0x311)](), this['_bufferStateInvertUV'][_0x49756d(0x311)](), this[_0x49756d(0x4fc)][_0x49756d(0x311)](), this['_setGPUMemory'](0x0);
        }
    }
    _0x413ee3[_0x5659be(0x505)] = 0x0, _0x413ee3['_vertices'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x0,
        -0x1,
        0x3,
        0x0,
        0x2,
        0x3,
        -0x1,
        0x2,
        0x0
    ]), _0x413ee3[_0x5659be(0x504)] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x1,
        -0x1,
        0x3,
        0x0,
        -0x1,
        0x3,
        -0x1,
        0x2,
        0x1
    ]);
    class _0x17bd0f {
        constructor(_0x35e9d2, _0x20d890) {
            var _0x3f78ff = _0x5659be;
            this[_0x3f78ff(0x439)] = _0x35e9d2, this[_0x3f78ff(0x43a)] = _0x20d890;
        }
    }
    class _0x3c4b71 {
        constructor(_0x11f131, _0x4d90da, _0x1891c0, _0xe2a6a5) {
            var _0x4bbef1 = _0x5659be;
            this[_0x4bbef1(0x508)] = 0x0, this['_passIndex'] = 0x0, this[_0x4bbef1(0x1fa)](_0x11f131, _0x4d90da, _0x1891c0, _0xe2a6a5);
        }
        get [_0x5659be(0x509)]() {
            var _0xc644b = _0x5659be;
            return this[_0xc644b(0x50a)];
        }
        get [_0x5659be(0x50b)]() {
            var _0x492577 = _0x5659be;
            return this[_0x492577(0x508)];
        }
        get ['passIndex']() {
            var _0x3adb90 = _0x5659be;
            return this[_0x3adb90(0x50c)];
        }
        get [_0x5659be(0x50d)]() {
            return this['_defineNames'];
        }
        [_0x5659be(0x1fa)](_0x50f473, _0x32abac, _0x282802, _0xa2ead8) {
            var _0xe9c063 = _0x5659be;
            if (_0x50f473) {
                var _0x50687e = _0x50f473[_0xe9c063(0x50e)](_0x32abac);
                if (_0x50687e) {
                    var _0x3c42d6 = _0x50687e[_0xe9c063(0x50f)][_0x282802];
                    if (_0x3c42d6) {
                        var _0x1455c2 = _0x3c42d6['_validDefine'];
                        for (var _0x439409 = 0x0, _0x423221 = _0xa2ead8[_0xe9c063(0x1ff)]; _0x439409 < _0x423221; _0x439409++) {
                            var _0x42adf5 = _0xa2ead8[_0x439409];
                            if (!_0x1455c2[_0xe9c063(0x43d)](_0x429ec3[_0xe9c063(0x21e)][_0xe9c063(0x510)](_0x42adf5)))
                                throw _0xe9c063(0x511) + _0x42adf5 + '\x20in\x20' + _0x50f473[_0xe9c063(0x512)] + _0xe9c063(0x513) + _0x32abac + '\x20passIndex\x20of\x20' + _0x282802 + '.';
                        }
                    } else
                        throw _0xe9c063(0x514) + _0x282802 + '.';
                } else
                    throw 'ShaderVariantInfo:Shader\x20don\x27t\x20have\x20subShaderIndex\x20of\x20' + _0x32abac + '.';
            } else
                throw _0xe9c063(0x515);
            this[_0xe9c063(0x50a)] = _0x50f473, this[_0xe9c063(0x508)] = _0x32abac, this[_0xe9c063(0x50c)] = _0x282802, this[_0xe9c063(0x516)] = _0xa2ead8;
        }
        [_0x5659be(0x517)](_0x5c4287) {
            var _0x45bacd = _0x5659be;
            if (this['_shader'] !== _0x5c4287[_0x45bacd(0x50a)] || this[_0x45bacd(0x508)] !== _0x5c4287['_subShaderIndex'] || this[_0x45bacd(0x50c)] !== _0x5c4287[_0x45bacd(0x50c)])
                return ![];
            var _0x30d484 = this['_defineNames'], _0x2fd74a = _0x5c4287[_0x45bacd(0x516)];
            if (_0x30d484[_0x45bacd(0x1ff)] !== _0x2fd74a['length'])
                return ![];
            for (var _0x2cbd9e = 0x0, _0x529ea0 = this['_defineNames'][_0x45bacd(0x1ff)]; _0x2cbd9e < _0x529ea0; _0x2cbd9e++) {
                if (_0x30d484[_0x2cbd9e] !== _0x2fd74a[_0x2cbd9e])
                    return ![];
            }
            return !![];
        }
        [_0x5659be(0x1f4)]() {
            var _0x26d9ee = _0x5659be, _0x5d848d = new _0x3c4b71(this[_0x26d9ee(0x50a)], this[_0x26d9ee(0x508)], this[_0x26d9ee(0x50c)], this[_0x26d9ee(0x516)]['slice']());
            return _0x5d848d;
        }
    }
    class _0xedff71 {
        constructor() {
            var _0x49dce9 = _0x5659be;
            this[_0x49dce9(0x518)] = ![], this[_0x49dce9(0x519)] = [];
        }
        get [_0x5659be(0x51a)]() {
            var _0x28b2b8 = _0x5659be;
            return this[_0x28b2b8(0x518)];
        }
        get [_0x5659be(0x51b)]() {
            var _0x27ad6a = _0x5659be;
            return this[_0x27ad6a(0x519)][_0x27ad6a(0x1ff)];
        }
        [_0x5659be(0x201)](_0x175f32) {
            var _0x100ee5 = _0x5659be;
            for (var _0x23b921 = 0x0, _0x4771ce = this[_0x100ee5(0x519)]['length']; _0x23b921 < _0x4771ce; _0x23b921++) {
                if (this[_0x100ee5(0x519)][_0x23b921][_0x100ee5(0x517)](_0x175f32))
                    return ![];
            }
            return this[_0x100ee5(0x519)]['push'](_0x175f32[_0x100ee5(0x1f4)]()), this['_allCompiled'] = ![], !![];
        }
        ['remove'](_0x2ac8cc) {
            var _0x501d15 = _0x5659be;
            for (var _0x2b7da7 = 0x0, _0x24e5f8 = this[_0x501d15(0x519)][_0x501d15(0x1ff)]; _0x2b7da7 < _0x24e5f8; _0x2b7da7++) {
                if (this['_variants'][_0x2b7da7][_0x501d15(0x517)](_0x2ac8cc))
                    return this[_0x501d15(0x519)]['splice'](_0x2b7da7, 0x1), !![];
            }
            return ![];
        }
        [_0x5659be(0x51c)](_0x30e1fc) {
            var _0x238f8b = _0x5659be;
            for (var _0xae1bc3 = 0x0, _0x306ac4 = this[_0x238f8b(0x519)][_0x238f8b(0x1ff)]; _0xae1bc3 < _0x306ac4; _0xae1bc3++) {
                if (this['_variants'][_0xae1bc3][_0x238f8b(0x517)](_0x30e1fc))
                    return !![];
            }
            return ![];
        }
        [_0x5659be(0x51d)](_0x15295d) {
            return this['_variants'][_0x15295d];
        }
        [_0x5659be(0x496)]() {
            var _0x268901 = _0x5659be;
            this[_0x268901(0x519)][_0x268901(0x1ff)] = 0x0;
        }
        [_0x5659be(0x51e)]() {
            var _0x3f57f2 = _0x5659be;
            if (!this[_0x3f57f2(0x518)]) {
                var _0x406630 = this['_variants'];
                for (var _0x3db7ba = 0x0, _0x21f2df = _0x406630[_0x3f57f2(0x1ff)]; _0x3db7ba < _0x21f2df; _0x3db7ba++) {
                    var _0x354716 = _0x406630[_0x3db7ba];
                    _0x429ec3['Shader3D']['compileShaderByDefineNames'](_0x354716[_0x3f57f2(0x50a)]['_name'], _0x354716[_0x3f57f2(0x508)], _0x354716[_0x3f57f2(0x50c)], _0x354716['_defineNames']);
                }
                this[_0x3f57f2(0x518)] = !![];
            }
        }
    }
    class _0x84b6d6 {
        constructor(_0x23c0cb, _0x5dd1ca, _0x43f4e3, _0x3f070d, _0x3dfb25) {
            var _0x27ccc5 = _0x5659be;
            this[_0x27ccc5(0x51f)] = null, this['_uniformMap'] = null, this[_0x27ccc5(0x520)] = ![], this[_0x27ccc5(0x521)] = ![], this['_subShaders'] = [], this[_0x27ccc5(0x512)] = _0x23c0cb, this[_0x27ccc5(0x51f)] = _0x5dd1ca, this[_0x27ccc5(0x522)] = _0x43f4e3, this[_0x27ccc5(0x520)] = _0x3f070d, this[_0x27ccc5(0x521)] = _0x3dfb25;
        }
        static [_0x5659be(0x523)](_0x512249, _0x203208) {
            var _0x58dcb5 = _0x5659be, _0x571b37 = _0x84b6d6[_0x58dcb5(0x524)], _0x1ed277 = _0x512249[_0x58dcb5(0x437)];
            _0x203208[_0x58dcb5(0x1ff)] = 0x0;
            for (var _0x2973a7 = 0x0, _0x38a3db = _0x512249[_0x58dcb5(0x438)]; _0x2973a7 < _0x38a3db; _0x2973a7++) {
                var _0x526385 = _0x571b37[_0x2973a7], _0x266f82 = _0x1ed277[_0x2973a7];
                for (var _0x17fe60 = 0x0; _0x17fe60 < 0x20; _0x17fe60++) {
                    var _0x506c0d = 0x1 << _0x17fe60;
                    if (_0x266f82 > 0x0 && _0x506c0d > _0x266f82)
                        break;
                    if (_0x266f82 & _0x506c0d)
                        _0x203208['push'](_0x526385[_0x506c0d]);
                }
            }
        }
        static [_0x5659be(0x510)](_0x4554a8) {
            var _0x5dc7a7 = _0x5659be, _0x2f413f = _0x84b6d6[_0x5dc7a7(0x525)][_0x4554a8];
            if (!_0x2f413f) {
                var _0x51e010 = _0x84b6d6[_0x5dc7a7(0x524)], _0x459cfe = _0x84b6d6['_defineCounter'], _0x4a0e79 = Math[_0x5dc7a7(0x241)](_0x459cfe / 0x20), _0x449875 = 0x1 << _0x459cfe % 0x20;
                _0x2f413f = new _0x17bd0f(_0x4a0e79, _0x449875), _0x84b6d6[_0x5dc7a7(0x525)][_0x4554a8] = _0x2f413f, _0x4a0e79 == _0x51e010[_0x5dc7a7(0x1ff)] && (_0x51e010[_0x5dc7a7(0x1ff)]++, _0x51e010[_0x4a0e79] = {}), _0x51e010[_0x4a0e79][_0x449875] = _0x4554a8, _0x84b6d6['_defineCounter']++;
            }
            return _0x2f413f;
        }
        static [_0x5659be(0x526)](_0x301763) {
            var _0x4b96b0 = _0x5659be;
            if (_0x84b6d6[_0x4b96b0(0x527)][_0x301763] != null)
                return _0x84b6d6[_0x4b96b0(0x527)][_0x301763];
            else {
                var _0xf6854c = _0x84b6d6['_propertyNameCounter']++;
                return _0x84b6d6[_0x4b96b0(0x527)][_0x301763] = _0xf6854c, _0x84b6d6[_0x4b96b0(0x527)][_0xf6854c] = _0x301763, _0xf6854c;
            }
        }
        static ['addInclude'](_0x119105, _0xa2c175) {
            var _0x2a3f33 = _0x5659be;
            _0xa2c175 = _0xa2c175[_0x2a3f33(0x528)](_0x218b83['ShaderCompile'][_0x2a3f33(0x529)], ''), _0x218b83[_0x2a3f33(0x52a)]['addInclude'](_0x119105, _0xa2c175);
        }
        static [_0x5659be(0x52b)](_0xe8baf8, _0x3c3920, _0x144310, _0x4485b9) {
            var _0x1b5009 = _0x5659be, _0x31c6fb = _0x84b6d6[_0x1b5009(0x52c)](_0xe8baf8);
            if (_0x31c6fb) {
                var _0x4ccf37 = _0x31c6fb[_0x1b5009(0x50e)](_0x3c3920);
                if (_0x4ccf37) {
                    var _0x3a05e1 = _0x4ccf37['_passes'][_0x144310];
                    if (_0x3a05e1) {
                        var _0x341590 = _0x84b6d6[_0x1b5009(0x52d)];
                        _0x341590[_0x1b5009(0x496)]();
                        for (var _0x364f30 = 0x0, _0x426079 = _0x4485b9[_0x1b5009(0x1ff)]; _0x364f30 < _0x426079; _0x364f30++)
                            _0x341590['add'](_0x84b6d6[_0x1b5009(0x510)](_0x4485b9[_0x364f30]));
                        _0x3a05e1[_0x1b5009(0x52e)](_0x341590);
                    } else
                        console['warn'](_0x1b5009(0x52f));
                } else
                    console[_0x1b5009(0x24e)](_0x1b5009(0x530));
            } else
                console[_0x1b5009(0x24e)](_0x1b5009(0x531));
        }
        static [_0x5659be(0x201)](_0x14dedf, _0x2ea904 = null, _0x512101 = null, _0x414674 = ![], _0x20a3dd = ![]) {
            return _0x84b6d6['_preCompileShader'][_0x14dedf] = new _0x84b6d6(_0x14dedf, _0x2ea904, _0x512101, _0x414674, _0x20a3dd);
        }
        static ['find'](_0x121fb8) {
            var _0x3eaf56 = _0x5659be;
            return _0x84b6d6[_0x3eaf56(0x532)][_0x121fb8];
        }
        get [_0x5659be(0x2a5)]() {
            var _0x2182aa = _0x5659be;
            return this[_0x2182aa(0x512)];
        }
        [_0x5659be(0x533)](_0x25349a) {
            var _0x2c3f4c = _0x5659be;
            this[_0x2c3f4c(0x534)][_0x2c3f4c(0x298)](_0x25349a), _0x25349a[_0x2c3f4c(0x3d3)] = this;
        }
        [_0x5659be(0x50e)](_0xe76eb5) {
            var _0x9c1527 = _0x5659be;
            return this[_0x9c1527(0x534)][_0xe76eb5];
        }
        static [_0x5659be(0x535)](_0x47ab2b, _0x245704, _0x5994c5, ..._0x5b8719) {
            var _0xd320b = _0x5659be, _0x52f09c = _0x84b6d6['find'](_0x47ab2b);
            if (_0x52f09c) {
                var _0x3d78f8 = _0x52f09c[_0xd320b(0x50e)](_0x245704);
                if (_0x3d78f8) {
                    var _0x2321b9 = _0x3d78f8[_0xd320b(0x50f)][_0x5994c5];
                    if (_0x2321b9) {
                        var _0x2d1ade = _0x84b6d6['_compileDefineDatas'], _0x1c7c63 = _0x2d1ade['_mask'];
                        _0x1c7c63[_0xd320b(0x1ff)] = 0x0;
                        for (var _0x5a9754 = 0x0, _0x4ea268 = _0x5b8719[_0xd320b(0x1ff)]; _0x5a9754 < _0x4ea268; _0x5a9754++)
                            _0x1c7c63[_0xd320b(0x298)](_0x5b8719[_0x5a9754]);
                        _0x2d1ade[_0xd320b(0x438)] = _0x5b8719['length'], _0x2321b9[_0xd320b(0x52e)](_0x2d1ade);
                    } else
                        console['warn'](_0xd320b(0x52f));
                } else
                    console[_0xd320b(0x24e)](_0xd320b(0x530));
            } else
                console[_0xd320b(0x24e)](_0xd320b(0x531));
        }
    }
    _0x84b6d6[_0x5659be(0x52d)] = new _0x23f873(), _0x84b6d6['RENDER_STATE_CULL'] = 0x0, _0x84b6d6[_0x5659be(0x536)] = 0x1, _0x84b6d6[_0x5659be(0x537)] = 0x2, _0x84b6d6[_0x5659be(0x538)] = 0x3, _0x84b6d6[_0x5659be(0x539)] = 0x4, _0x84b6d6['RENDER_STATE_BLEND_DST_RGB'] = 0x5, _0x84b6d6[_0x5659be(0x53a)] = 0x6, _0x84b6d6['RENDER_STATE_BLEND_DST_ALPHA'] = 0x7, _0x84b6d6[_0x5659be(0x53b)] = 0x8, _0x84b6d6['RENDER_STATE_BLEND_EQUATION'] = 0x9, _0x84b6d6[_0x5659be(0x53c)] = 0xa, _0x84b6d6[_0x5659be(0x53d)] = 0xb, _0x84b6d6[_0x5659be(0x53e)] = 0xc, _0x84b6d6[_0x5659be(0x53f)] = 0xd, _0x84b6d6['PERIOD_CUSTOM'] = 0x0, _0x84b6d6[_0x5659be(0x540)] = 0x1, _0x84b6d6[_0x5659be(0x541)] = 0x2, _0x84b6d6[_0x5659be(0x542)] = 0x3, _0x84b6d6[_0x5659be(0x543)] = 0x4, _0x84b6d6['_propertyNameMap'] = {}, _0x84b6d6[_0x5659be(0x544)] = 0x0, _0x84b6d6[_0x5659be(0x545)] = 0x0, _0x84b6d6[_0x5659be(0x525)] = {}, _0x84b6d6['_preCompileShader'] = {}, _0x84b6d6['_maskMap'] = [], _0x84b6d6[_0x5659be(0x546)] = ![], _0x84b6d6[_0x5659be(0x547)] = new _0xedff71();
    class _0x428cb6 {
        constructor() {
            var _0x414cca = _0x5659be;
            this[_0x414cca(0x548)] = null;
        }
        static [_0x5659be(0x229)]() {
            var _0x281003 = _0x5659be;
            _0x428cb6[_0x281003(0x549)] = new _0x552b02(), _0x428cb6[_0x281003(0x54a)] = _0x84b6d6[_0x281003(0x52c)]('BlitScreen');
        }
        [_0x5659be(0x54b)]() {
        }
        [_0x5659be(0x54c)]() {
            var _0xf1e631 = _0x5659be;
            this[_0xf1e631(0x548)] = null;
        }
        ['setContext'](_0x441bf3) {
            var _0x5b6fcd = _0x5659be;
            this[_0x5b6fcd(0x54d)] = _0x441bf3;
        }
    }
    _0x428cb6['SCREENTEXTURE_NAME'] = 'u_MainTex', _0x428cb6[_0x5659be(0x54e)] = _0x5659be(0x54f), _0x428cb6[_0x5659be(0x550)] = _0x5659be(0x551), _0x428cb6['SCREENTEXTURE_ID'] = _0x84b6d6['propertyNameToID'](_0x428cb6[_0x5659be(0x552)]), _0x428cb6[_0x5659be(0x553)] = _0x84b6d6['propertyNameToID'](_0x428cb6[_0x5659be(0x54e)]), _0x428cb6[_0x5659be(0x554)] = _0x84b6d6[_0x5659be(0x526)](_0x428cb6[_0x5659be(0x550)]);
    class _0x140fd9 extends _0x428cb6 {
        constructor() {
            var _0x1eb7a0 = _0x5659be;
            super(...arguments), this[_0x1eb7a0(0x555)] = null, this[_0x1eb7a0(0x556)] = null, this[_0x1eb7a0(0x557)] = null, this[_0x1eb7a0(0x50a)] = null, this[_0x1eb7a0(0x558)] = null, this[_0x1eb7a0(0x559)] = 0x0, this[_0x1eb7a0(0x55a)] = new _0x8fb80(), this[_0x1eb7a0(0x55b)] = 0x0, this[_0x1eb7a0(0x55c)] = ![];
        }
        static [_0x5659be(0x31e)](_0x8cfdff, _0x360e05, _0x2a04a4 = null, _0x20e85c = null, _0x5ceb58 = null, _0x3b9bf9 = 0x0, _0x4fc946 = _0x140fd9[_0x5659be(0x55d)], _0x2ba5d6 = null, _0x57441c = ![]) {
            var _0x2e54a5 = _0x5659be, _0x15f104;
            return _0x15f104 = _0x140fd9[_0x2e54a5(0x3ea)]['length'] > 0x0 ? _0x140fd9[_0x2e54a5(0x3ea)][_0x2e54a5(0x55e)]() : new _0x140fd9(), _0x15f104[_0x2e54a5(0x555)] = _0x8cfdff, _0x15f104[_0x2e54a5(0x556)] = _0x360e05, _0x15f104[_0x2e54a5(0x557)] = _0x2a04a4, _0x15f104[_0x2e54a5(0x50a)] = _0x20e85c, _0x15f104[_0x2e54a5(0x558)] = _0x5ceb58, _0x15f104[_0x2e54a5(0x559)] = _0x3b9bf9, _0x15f104[_0x2e54a5(0x55b)] = _0x4fc946, _0x15f104[_0x2e54a5(0x548)] = _0x2ba5d6, _0x15f104[_0x2e54a5(0x55c)] = _0x57441c, _0x15f104;
        }
        [_0x5659be(0x54b)]() {
            var _0x2a689c = _0x5659be, _0x25bde4;
            if (!this[_0x2a689c(0x555)]) {
                if (!this[_0x2a689c(0x548)]['_camera'][_0x2a689c(0x55f)])
                    throw 'camera\x20internalRenderTexture\x20is\x20null,please\x20set\x20camera\x20enableBuiltInRenderTexture';
                _0x25bde4 = this[_0x2a689c(0x548)][_0x2a689c(0x560)][_0x2a689c(0x55f)];
            } else
                _0x25bde4 = this['_source'];
            var _0x20a389 = this[_0x2a689c(0x50a)] || _0x428cb6['_screenShader'], _0x5df9c4 = this[_0x2a689c(0x558)] || _0x428cb6[_0x2a689c(0x549)], _0x50eeee = this[_0x2a689c(0x556)] ? this[_0x2a689c(0x556)] : this['_drawDefineCavans'] ? this[_0x2a689c(0x556)] : this[_0x2a689c(0x548)][_0x2a689c(0x560)][_0x2a689c(0x55f)];
            if (_0x50eeee)
                _0x218b83[_0x2a689c(0x2f3)][_0x2a689c(0x2f4)][_0x2a689c(0x561)](0x0, 0x0, _0x50eeee[_0x2a689c(0x300)], _0x50eeee[_0x2a689c(0x301)]);
            else {
                let _0x28bc9e = this['_commandBuffer'][_0x2a689c(0x560)], _0x558bb7 = _0x28bc9e['viewport'], _0x18c15b = _0x558bb7[_0x2a689c(0x301)], _0x1946c8 = _0x51310c[_0x2a689c(0x562)] - _0x558bb7['y'] - _0x18c15b;
                _0x218b83[_0x2a689c(0x2f3)][_0x2a689c(0x2f4)][_0x2a689c(0x561)](_0x558bb7['x'], _0x1946c8, _0x558bb7[_0x2a689c(0x300)], _0x18c15b);
            }
            _0x5df9c4[_0x2a689c(0x4a2)](_0x428cb6[_0x2a689c(0x563)], _0x25bde4), _0x5df9c4['setVector'](_0x428cb6[_0x2a689c(0x553)], this[_0x2a689c(0x557)] || _0x140fd9[_0x2a689c(0x564)]), this['_sourceTexelSize'][_0x2a689c(0x1fa)](0x1 / _0x25bde4[_0x2a689c(0x300)], 0x1 / _0x25bde4['height'], _0x25bde4[_0x2a689c(0x300)], _0x25bde4[_0x2a689c(0x301)]), _0x5df9c4[_0x2a689c(0x49d)](_0x428cb6[_0x2a689c(0x554)], this[_0x2a689c(0x55a)]), _0x164148[_0x2a689c(0x3e7)] && _0x164148[_0x2a689c(0x3e7)][_0x2a689c(0x426)](), _0x50eeee && _0x50eeee[_0x2a689c(0x424)]();
            var _0x3714b8 = _0x20a389[_0x2a689c(0x50e)](this[_0x2a689c(0x559)]), _0x3c4441 = _0x3714b8[_0x2a689c(0x50f)];
            for (var _0x416c3e = 0x0, _0x559288 = _0x3c4441[_0x2a689c(0x1ff)]; _0x416c3e < _0x559288; _0x416c3e++) {
                var _0x19dcac = _0x140fd9[_0x2a689c(0x565)];
                _0x5df9c4[_0x2a689c(0x490)]['cloneTo'](_0x19dcac);
                var _0x1af3c4 = _0x3c4441[_0x416c3e]['withCompile'](_0x19dcac);
                _0x1af3c4[_0x2a689c(0x444)](), _0x1af3c4[_0x2a689c(0x566)](_0x1af3c4[_0x2a689c(0x567)], _0x5df9c4, !![]), _0x1af3c4['uploadRenderStateBlendDepth'](_0x5df9c4), _0x1af3c4['uploadRenderStateFrontFace'](_0x5df9c4, ![], null);
                switch (this['_screenType']) {
                case _0x140fd9['_SCREENTYPE_QUAD']:
                    _0x51310c[_0x2a689c(0x425)][_0x2a689c(0x3d7)] ? _0x10ceb5[_0x2a689c(0x2f4)][_0x2a689c(0x502)]() : _0x10ceb5[_0x2a689c(0x2f4)][_0x2a689c(0x506)]();
                    break;
                case _0x140fd9['_SCREENTYPE_TRIANGLE']:
                    _0x51310c['_instance'][_0x2a689c(0x3d7)] ? _0x413ee3[_0x2a689c(0x2f4)][_0x2a689c(0x502)]() : _0x413ee3[_0x2a689c(0x2f4)][_0x2a689c(0x506)]();
                    break;
                default:
                    throw _0x2a689c(0x568);
                }
            }
            _0x50eeee && _0x50eeee[_0x2a689c(0x426)]();
        }
        ['recover']() {
            var _0x4dd1e0 = _0x5659be;
            _0x140fd9[_0x4dd1e0(0x3ea)]['push'](this), this['_source'] = null, this[_0x4dd1e0(0x556)] = null, this[_0x4dd1e0(0x557)] = null, this['_shader'] = null, this[_0x4dd1e0(0x558)] = null, this[_0x4dd1e0(0x55c)] = ![], super[_0x4dd1e0(0x54c)]();
        }
    }
    _0x140fd9['_SCREENTYPE_QUAD'] = 0x0, _0x140fd9[_0x5659be(0x569)] = 0x1, _0x140fd9['_compileDefine'] = new _0x23f873(), _0x140fd9['_pool'] = [], _0x140fd9[_0x5659be(0x564)] = new _0x8fb80(0x0, 0x0, 0x1, 0x1);
    class _0x136c24 extends _0x428cb6 {
        constructor() {
            super(...arguments), this['_renderTexture'] = null;
        }
        static [_0x5659be(0x31e)](_0xa1877c) {
            var _0x3de222 = _0x5659be, _0x32fff4;
            return _0x32fff4 = _0x136c24['_pool']['length'] > 0x0 ? _0x136c24['_pool'][_0x3de222(0x55e)]() : new _0x136c24(), _0x32fff4[_0x3de222(0x56a)] = _0xa1877c, _0x32fff4;
        }
        [_0x5659be(0x54b)]() {
            var _0x5a2de5 = _0x5659be;
            _0x164148[_0x5a2de5(0x3e7)] && _0x164148['currentActive'][_0x5a2de5(0x426)](), _0x218b83[_0x5a2de5(0x2f3)][_0x5a2de5(0x2f4)][_0x5a2de5(0x561)](0x0, 0x0, this[_0x5a2de5(0x56a)][_0x5a2de5(0x300)], this['_renderTexture'][_0x5a2de5(0x301)]), this['_renderTexture'][_0x5a2de5(0x424)]();
        }
        [_0x5659be(0x54c)]() {
            var _0x86cab5 = _0x5659be;
            _0x136c24[_0x86cab5(0x3ea)]['push'](this), this[_0x86cab5(0x56a)] = null;
        }
    }
    _0x136c24[_0x5659be(0x3ea)] = [], function (_0x38a158) {
        var _0x231ad3 = _0x5659be;
        _0x38a158[_0x38a158[_0x231ad3(0x56b)] = 0x0] = _0x231ad3(0x56b), _0x38a158[_0x38a158[_0x231ad3(0x56c)] = 0x1] = _0x231ad3(0x56c), _0x38a158[_0x38a158[_0x231ad3(0x56d)] = 0x2] = _0x231ad3(0x56d), _0x38a158[_0x38a158[_0x231ad3(0x45b)] = 0x3] = _0x231ad3(0x45b), _0x38a158[_0x38a158[_0x231ad3(0x45d)] = 0x4] = 'Vector3', _0x38a158[_0x38a158[_0x231ad3(0x45f)] = 0x5] = _0x231ad3(0x45f), _0x38a158[_0x38a158[_0x231ad3(0x56e)] = 0x6] = _0x231ad3(0x56e), _0x38a158[_0x38a158[_0x231ad3(0x222)] = 0x7] = _0x231ad3(0x222), _0x38a158[_0x38a158[_0x231ad3(0x43e)] = 0x8] = _0x231ad3(0x43e), _0x38a158[_0x38a158[_0x231ad3(0x56f)] = 0x9] = _0x231ad3(0x56f);
    }(_0x71dec4[_0x5659be(0x570)] || (_0x71dec4[_0x5659be(0x570)] = {}));
    class _0x487843 extends _0x428cb6 {
        constructor() {
            var _0x4a5293 = _0x5659be;
            super(...arguments), this[_0x4a5293(0x558)] = null, this[_0x4a5293(0x571)] = 0x0, this[_0x4a5293(0x43a)] = null, this[_0x4a5293(0x572)] = -0x1;
        }
        static [_0x5659be(0x31e)](_0x162eee, _0x4dbefc, _0x1c237d, _0x30eb1c, _0x55d232) {
            var _0x322322 = _0x5659be, _0x3b65b1;
            return _0x3b65b1 = _0x487843[_0x322322(0x3ea)]['length'] > 0x0 ? _0x487843[_0x322322(0x3ea)][_0x322322(0x55e)]() : new _0x487843(), _0x3b65b1[_0x322322(0x558)] = _0x162eee, _0x3b65b1[_0x322322(0x571)] = _0x4dbefc, _0x3b65b1['_value'] = _0x1c237d, _0x3b65b1[_0x322322(0x572)] = _0x30eb1c, _0x3b65b1[_0x322322(0x548)] = _0x55d232, _0x3b65b1;
        }
        [_0x5659be(0x54b)]() {
            var _0x18248e = _0x5659be;
            switch (this[_0x18248e(0x572)]) {
            case _0x71dec4[_0x18248e(0x570)]['Int']:
                this[_0x18248e(0x558)]['setInt'](this[_0x18248e(0x571)], this[_0x18248e(0x43a)]);
                break;
            case _0x71dec4[_0x18248e(0x570)]['Number']:
                this[_0x18248e(0x558)]['setNumber'](this[_0x18248e(0x571)], this[_0x18248e(0x43a)]);
                break;
            case _0x71dec4[_0x18248e(0x570)][_0x18248e(0x56c)]:
                this['_shaderData'][_0x18248e(0x497)](this['_nameID'], this[_0x18248e(0x43a)]);
                break;
            case _0x71dec4[_0x18248e(0x570)][_0x18248e(0x222)]:
                this[_0x18248e(0x558)][_0x18248e(0x4a0)](this[_0x18248e(0x571)], this[_0x18248e(0x43a)]);
                break;
            case _0x71dec4['ShaderDataType'][_0x18248e(0x56e)]:
                this[_0x18248e(0x558)][_0x18248e(0x573)](this[_0x18248e(0x571)], this['_value']);
                break;
            case _0x71dec4[_0x18248e(0x570)]['Texture']:
                this['_shaderData'][_0x18248e(0x4a2)](this['_nameID'], this['_value']);
                break;
            case _0x71dec4['ShaderDataType']['Vector4']:
                this[_0x18248e(0x558)]['setVector'](this[_0x18248e(0x571)], this[_0x18248e(0x43a)]);
                break;
            case _0x71dec4[_0x18248e(0x570)]['Vector2']:
                this[_0x18248e(0x558)][_0x18248e(0x49a)](this[_0x18248e(0x571)], this['_value']);
                break;
            case _0x71dec4[_0x18248e(0x570)]['Vector3']:
                this[_0x18248e(0x558)][_0x18248e(0x4b1)](this[_0x18248e(0x571)], this[_0x18248e(0x43a)]);
                break;
            case _0x71dec4[_0x18248e(0x570)]['Buffer']:
                this[_0x18248e(0x558)][_0x18248e(0x574)](this[_0x18248e(0x571)], this[_0x18248e(0x43a)]);
                break;
            default:
                throw _0x18248e(0x575);
            }
        }
        ['recover']() {
            var _0x659fe9 = _0x5659be;
            _0x487843['_pool']['push'](this), this[_0x659fe9(0x558)] = null, this[_0x659fe9(0x571)] = 0x0, this[_0x659fe9(0x43a)] = null, this[_0x659fe9(0x572)] = -0x1;
        }
    }
    _0x487843['_pool'] = [];
    class _0x20d0f1 extends _0x218b83['EventDispatcher'] {
        constructor(_0x5edc96) {
            var _0x3b53c3 = _0x5659be;
            super(), this['_localPosition'] = new _0x3f70c5(0x0, 0x0, 0x0), this[_0x3b53c3(0x576)] = new _0x22f58f(0x0, 0x0, 0x0, 0x1), this['_localScale'] = new _0x3f70c5(0x1, 0x1, 0x1), this['_localRotationEuler'] = new _0x3f70c5(0x0, 0x0, 0x0), this[_0x3b53c3(0x577)] = new _0x3ed76a(), this[_0x3b53c3(0x578)] = new _0x3f70c5(0x0, 0x0, 0x0), this[_0x3b53c3(0x579)] = new _0x22f58f(0x0, 0x0, 0x0, 0x1), this[_0x3b53c3(0x57a)] = new _0x3f70c5(0x1, 0x1, 0x1), this[_0x3b53c3(0x57b)] = new _0x3f70c5(0x0, 0x0, 0x0), this['_worldMatrix'] = new _0x3ed76a(), this[_0x3b53c3(0x57c)] = null, this[_0x3b53c3(0x2fd)] = null, this[_0x3b53c3(0x3cb)] = null, this['_transformFlag'] = 0x0, this[_0x3b53c3(0x3d3)] = _0x5edc96, this[_0x3b53c3(0x57c)] = [], this[_0x3b53c3(0x57d)](_0x20d0f1[_0x3b53c3(0x57e)] | _0x20d0f1[_0x3b53c3(0x57f)] | _0x20d0f1[_0x3b53c3(0x580)], ![]), this[_0x3b53c3(0x57d)](_0x20d0f1['TRANSFORM_WORLDPOSITION'] | _0x20d0f1[_0x3b53c3(0x581)] | _0x20d0f1[_0x3b53c3(0x582)] | _0x20d0f1[_0x3b53c3(0x583)] | _0x20d0f1[_0x3b53c3(0x584)], !![]);
        }
        get ['_isFrontFaceInvert']() {
            var _0x5d646b = _0x5659be, _0x5d3be2 = this[_0x5d646b(0x585)](), _0x43a809 = _0x5d3be2['x'] < 0x0;
            return _0x5d3be2['y'] < 0x0 && (_0x43a809 = !_0x43a809), _0x5d3be2['z'] < 0x0 && (_0x43a809 = !_0x43a809), _0x43a809;
        }
        get [_0x5659be(0x380)]() {
            var _0x36413c = _0x5659be;
            return this[_0x36413c(0x3d3)];
        }
        get ['worldNeedUpdate']() {
            var _0x434c47 = _0x5659be;
            return this[_0x434c47(0x586)](_0x20d0f1[_0x434c47(0x584)]);
        }
        get ['localPositionX']() {
            return this['_localPosition']['x'];
        }
        set [_0x5659be(0x587)](_0xad476) {
            var _0x20d4cd = _0x5659be;
            this[_0x20d4cd(0x588)]['x'] = _0xad476, this[_0x20d4cd(0x395)] = this[_0x20d4cd(0x588)];
        }
        get [_0x5659be(0x589)]() {
            return this['_localPosition']['y'];
        }
        set [_0x5659be(0x589)](_0x21aeba) {
            var _0x570cd6 = _0x5659be;
            this[_0x570cd6(0x588)]['y'] = _0x21aeba, this[_0x570cd6(0x395)] = this[_0x570cd6(0x588)];
        }
        get [_0x5659be(0x58a)]() {
            var _0x3c9588 = _0x5659be;
            return this[_0x3c9588(0x588)]['z'];
        }
        set [_0x5659be(0x58a)](_0x45901f) {
            var _0x5b7172 = _0x5659be;
            this[_0x5b7172(0x588)]['z'] = _0x45901f, this[_0x5b7172(0x395)] = this[_0x5b7172(0x588)];
        }
        get [_0x5659be(0x395)]() {
            var _0x2f4a98 = _0x5659be;
            return this[_0x2f4a98(0x588)];
        }
        set ['localPosition'](_0x139532) {
            var _0x3eadb2 = _0x5659be;
            if (this[_0x3eadb2(0x588)] !== _0x139532)
                _0x139532[_0x3eadb2(0x1f0)](this[_0x3eadb2(0x588)]);
            this[_0x3eadb2(0x57d)](_0x20d0f1[_0x3eadb2(0x580)], !![]), this[_0x3eadb2(0x58b)]();
        }
        get [_0x5659be(0x58c)]() {
            var _0x3cc3c8 = _0x5659be;
            return this[_0x3cc3c8(0x397)]['x'];
        }
        set [_0x5659be(0x58c)](_0x6db0ef) {
            var _0x4b5d69 = _0x5659be;
            this[_0x4b5d69(0x576)]['x'] = _0x6db0ef, this['localRotation'] = this[_0x4b5d69(0x576)];
        }
        get ['localRotationY']() {
            var _0x38f55d = _0x5659be;
            return this[_0x38f55d(0x397)]['y'];
        }
        set [_0x5659be(0x58d)](_0x11dd85) {
            var _0x5ef6d4 = _0x5659be;
            this['_localRotation']['y'] = _0x11dd85, this[_0x5ef6d4(0x397)] = this[_0x5ef6d4(0x576)];
        }
        get [_0x5659be(0x58e)]() {
            return this['localRotation']['z'];
        }
        set [_0x5659be(0x58e)](_0x392e24) {
            var _0xf4444b = _0x5659be;
            this[_0xf4444b(0x576)]['z'] = _0x392e24, this['localRotation'] = this[_0xf4444b(0x576)];
        }
        get ['localRotationW']() {
            var _0x5b0807 = _0x5659be;
            return this[_0x5b0807(0x397)]['w'];
        }
        set [_0x5659be(0x58f)](_0x9c2968) {
            var _0x4465ae = _0x5659be;
            this['_localRotation']['w'] = _0x9c2968, this[_0x4465ae(0x397)] = this[_0x4465ae(0x576)];
        }
        get ['localRotation']() {
            var _0x2a8be8 = _0x5659be;
            if (this[_0x2a8be8(0x586)](_0x20d0f1[_0x2a8be8(0x57e)])) {
                var _0x3cb97b = this['_localRotationEuler'];
                _0x22f58f[_0x2a8be8(0x471)](_0x3cb97b['y'] / _0x20d0f1[_0x2a8be8(0x590)], _0x3cb97b['x'] / _0x20d0f1['_angleToRandin'], _0x3cb97b['z'] / _0x20d0f1[_0x2a8be8(0x590)], this[_0x2a8be8(0x576)]), this[_0x2a8be8(0x57d)](_0x20d0f1[_0x2a8be8(0x57e)], ![]);
            }
            return this['_localRotation'];
        }
        set [_0x5659be(0x397)](_0x48eb87) {
            var _0x233842 = _0x5659be;
            if (this[_0x233842(0x576)] !== _0x48eb87)
                _0x48eb87[_0x233842(0x1f0)](this[_0x233842(0x576)]);
            this[_0x233842(0x576)]['normalize'](this[_0x233842(0x576)]), this['_setTransformFlag'](_0x20d0f1[_0x233842(0x57f)] | _0x20d0f1[_0x233842(0x580)], !![]), this[_0x233842(0x57d)](_0x20d0f1[_0x233842(0x57e)], ![]), this[_0x233842(0x591)]();
        }
        get [_0x5659be(0x592)]() {
            return this['_localScale']['x'];
        }
        set [_0x5659be(0x592)](_0x447b83) {
            var _0x5a50f1 = _0x5659be;
            this[_0x5a50f1(0x593)]['x'] = _0x447b83, this[_0x5a50f1(0x398)] = this[_0x5a50f1(0x593)];
        }
        get [_0x5659be(0x594)]() {
            var _0x5361ca = _0x5659be;
            return this[_0x5361ca(0x593)]['y'];
        }
        set [_0x5659be(0x594)](_0x819bac) {
            var _0x143dc2 = _0x5659be;
            this[_0x143dc2(0x593)]['y'] = _0x819bac, this[_0x143dc2(0x398)] = this[_0x143dc2(0x593)];
        }
        get ['localScaleZ']() {
            var _0x1531d5 = _0x5659be;
            return this[_0x1531d5(0x593)]['z'];
        }
        set [_0x5659be(0x595)](_0x29738a) {
            var _0x5edf03 = _0x5659be;
            this[_0x5edf03(0x593)]['z'] = _0x29738a, this[_0x5edf03(0x398)] = this[_0x5edf03(0x593)];
        }
        get [_0x5659be(0x398)]() {
            var _0x15101f = _0x5659be;
            return this[_0x15101f(0x593)];
        }
        set ['localScale'](_0x276c14) {
            var _0x4280d5 = _0x5659be;
            if (this['_localScale'] !== _0x276c14)
                _0x276c14[_0x4280d5(0x1f0)](this[_0x4280d5(0x593)]);
            this[_0x4280d5(0x57d)](_0x20d0f1[_0x4280d5(0x580)], !![]), this[_0x4280d5(0x596)]();
        }
        get [_0x5659be(0x597)]() {
            var _0x101075 = _0x5659be;
            return this[_0x101075(0x39a)]['x'];
        }
        set ['localRotationEulerX'](_0xef0644) {
            var _0x7b6bcd = _0x5659be;
            this[_0x7b6bcd(0x598)]['x'] = _0xef0644, this['localRotationEuler'] = this['_localRotationEuler'];
        }
        get [_0x5659be(0x599)]() {
            var _0x3799c3 = _0x5659be;
            return this[_0x3799c3(0x39a)]['y'];
        }
        set [_0x5659be(0x599)](_0x5b921e) {
            var _0x7a3c2c = _0x5659be;
            this[_0x7a3c2c(0x598)]['y'] = _0x5b921e, this[_0x7a3c2c(0x39a)] = this[_0x7a3c2c(0x598)];
        }
        get [_0x5659be(0x59a)]() {
            var _0x316b37 = _0x5659be;
            return this[_0x316b37(0x39a)]['z'];
        }
        set [_0x5659be(0x59a)](_0x493f6b) {
            var _0x4c687a = _0x5659be;
            this[_0x4c687a(0x598)]['z'] = _0x493f6b, this[_0x4c687a(0x39a)] = this[_0x4c687a(0x598)];
        }
        get ['localRotationEuler']() {
            var _0x451a37 = _0x5659be;
            if (this[_0x451a37(0x586)](_0x20d0f1[_0x451a37(0x57f)])) {
                this[_0x451a37(0x576)][_0x451a37(0x286)](_0x20d0f1[_0x451a37(0x59b)]);
                var _0x1c408a = _0x20d0f1[_0x451a37(0x59b)], _0x5b9b0e = this[_0x451a37(0x598)];
                _0x5b9b0e['x'] = _0x1c408a['y'] * _0x20d0f1[_0x451a37(0x590)], _0x5b9b0e['y'] = _0x1c408a['x'] * _0x20d0f1[_0x451a37(0x590)], _0x5b9b0e['z'] = _0x1c408a['z'] * _0x20d0f1[_0x451a37(0x590)], this[_0x451a37(0x57d)](_0x20d0f1['TRANSFORM_LOCALEULER'], ![]);
            }
            return this[_0x451a37(0x598)];
        }
        set ['localRotationEuler'](_0x5768d1) {
            var _0x6fe501 = _0x5659be;
            if (this[_0x6fe501(0x598)] !== _0x5768d1)
                _0x5768d1[_0x6fe501(0x1f0)](this[_0x6fe501(0x598)]);
            this[_0x6fe501(0x57d)](_0x20d0f1[_0x6fe501(0x57f)], ![]), this[_0x6fe501(0x57d)](_0x20d0f1['TRANSFORM_LOCALQUATERNION'] | _0x20d0f1[_0x6fe501(0x580)], !![]), this[_0x6fe501(0x591)]();
        }
        get [_0x5659be(0x59c)]() {
            var _0x5aa299 = _0x5659be;
            return this[_0x5aa299(0x586)](_0x20d0f1['TRANSFORM_LOCALMATRIX']) && (_0x3ed76a[_0x5aa299(0x477)](this[_0x5aa299(0x588)], this[_0x5aa299(0x397)], this[_0x5aa299(0x593)], this[_0x5aa299(0x577)]), this[_0x5aa299(0x57d)](_0x20d0f1[_0x5aa299(0x580)], ![])), this[_0x5aa299(0x577)];
        }
        set ['localMatrix'](_0x591157) {
            var _0x4a2ab2 = _0x5659be;
            if (this[_0x4a2ab2(0x577)] !== _0x591157)
                _0x591157[_0x4a2ab2(0x1f0)](this[_0x4a2ab2(0x577)]);
            this[_0x4a2ab2(0x577)][_0x4a2ab2(0x483)](this['_localPosition'], this[_0x4a2ab2(0x576)], this[_0x4a2ab2(0x593)]), this[_0x4a2ab2(0x57d)](_0x20d0f1['TRANSFORM_LOCALEULER'], !![]), this[_0x4a2ab2(0x57d)](_0x20d0f1[_0x4a2ab2(0x580)], ![]), this[_0x4a2ab2(0x59d)]();
        }
        get [_0x5659be(0x59e)]() {
            var _0x2b02da = _0x5659be;
            if (this['_getTransformFlag'](_0x20d0f1[_0x2b02da(0x59f)])) {
                if (this[_0x2b02da(0x2fd)] != null) {
                    var _0x272adf = this[_0x2b02da(0x3ce)][_0x2b02da(0x1f6)];
                    this[_0x2b02da(0x578)]['x'] = _0x272adf[0xc], this[_0x2b02da(0x578)]['y'] = _0x272adf[0xd], this[_0x2b02da(0x578)]['z'] = _0x272adf[0xe];
                } else
                    this['_localPosition'][_0x2b02da(0x1f0)](this[_0x2b02da(0x578)]);
                this['_setTransformFlag'](_0x20d0f1[_0x2b02da(0x59f)], ![]);
            }
            return this[_0x2b02da(0x578)];
        }
        set ['position'](_0x1be42e) {
            var _0x4b93b0 = _0x5659be;
            if (this[_0x4b93b0(0x2fd)] != null) {
                var _0x548582 = _0x20d0f1['_tempMatrix0'];
                this['_parent']['worldMatrix'][_0x4b93b0(0x274)](_0x548582), _0x3f70c5['transformCoordinate'](_0x1be42e, _0x548582, this[_0x4b93b0(0x588)]);
            } else
                _0x1be42e[_0x4b93b0(0x1f0)](this['_localPosition']);
            this['localPosition'] = this['_localPosition'];
            if (this[_0x4b93b0(0x578)] !== _0x1be42e)
                _0x1be42e[_0x4b93b0(0x1f0)](this['_position']);
            this[_0x4b93b0(0x57d)](_0x20d0f1['TRANSFORM_WORLDPOSITION'], ![]);
        }
        get ['rotation']() {
            var _0x3bb237 = _0x5659be;
            if (this['_getTransformFlag'](_0x20d0f1['TRANSFORM_WORLDQUATERNION'])) {
                if (this[_0x3bb237(0x2fd)] != null)
                    _0x22f58f[_0x3bb237(0x202)](this[_0x3bb237(0x2fd)]['rotation'], this[_0x3bb237(0x397)], this[_0x3bb237(0x579)]);
                else
                    this[_0x3bb237(0x397)][_0x3bb237(0x1f0)](this[_0x3bb237(0x579)]);
                this[_0x3bb237(0x57d)](_0x20d0f1[_0x3bb237(0x581)], ![]);
            }
            return this['_rotation'];
        }
        set [_0x5659be(0x5a0)](_0x5c2f97) {
            var _0x599c99 = _0x5659be;
            this[_0x599c99(0x2fd)] != null ? (this[_0x599c99(0x2fd)][_0x599c99(0x5a0)][_0x599c99(0x274)](_0x20d0f1[_0x599c99(0x327)]), _0x22f58f[_0x599c99(0x202)](_0x20d0f1[_0x599c99(0x327)], _0x5c2f97, this[_0x599c99(0x576)])) : _0x5c2f97[_0x599c99(0x1f0)](this[_0x599c99(0x576)]);
            this[_0x599c99(0x397)] = this['_localRotation'];
            if (_0x5c2f97 !== this[_0x599c99(0x579)])
                _0x5c2f97[_0x599c99(0x1f0)](this['_rotation']);
            this[_0x599c99(0x57d)](_0x20d0f1[_0x599c99(0x581)], ![]);
        }
        get [_0x5659be(0x5a1)]() {
            var _0x317e0c = _0x5659be;
            if (this[_0x317e0c(0x586)](_0x20d0f1['TRANSFORM_WORLDEULER'])) {
                this[_0x317e0c(0x5a0)][_0x317e0c(0x286)](_0x20d0f1[_0x317e0c(0x59b)]);
                var _0x5ded21 = _0x20d0f1[_0x317e0c(0x59b)], _0x44a4ad = this[_0x317e0c(0x57b)];
                _0x44a4ad['x'] = _0x5ded21['y'] * _0x20d0f1[_0x317e0c(0x590)], _0x44a4ad['y'] = _0x5ded21['x'] * _0x20d0f1[_0x317e0c(0x590)], _0x44a4ad['z'] = _0x5ded21['z'] * _0x20d0f1[_0x317e0c(0x590)], this['_setTransformFlag'](_0x20d0f1[_0x317e0c(0x582)], ![]);
            }
            return this[_0x317e0c(0x57b)];
        }
        set [_0x5659be(0x5a1)](_0x15ad8a) {
            var _0x2ac2b6 = _0x5659be;
            _0x22f58f[_0x2ac2b6(0x471)](_0x15ad8a['y'] / _0x20d0f1[_0x2ac2b6(0x590)], _0x15ad8a['x'] / _0x20d0f1[_0x2ac2b6(0x590)], _0x15ad8a['z'] / _0x20d0f1[_0x2ac2b6(0x590)], this[_0x2ac2b6(0x579)]), this['rotation'] = this[_0x2ac2b6(0x579)];
            if (this[_0x2ac2b6(0x57b)] !== _0x15ad8a)
                _0x15ad8a['cloneTo'](this[_0x2ac2b6(0x57b)]);
            this[_0x2ac2b6(0x57d)](_0x20d0f1[_0x2ac2b6(0x582)], ![]);
        }
        get ['worldMatrix']() {
            var _0xd8172 = _0x5659be;
            if (this[_0xd8172(0x586)](_0x20d0f1[_0xd8172(0x584)])) {
                if (this[_0xd8172(0x2fd)] != null)
                    _0x3ed76a[_0xd8172(0x202)](this[_0xd8172(0x2fd)][_0xd8172(0x3ce)], this['localMatrix'], this[_0xd8172(0x5a2)]);
                else
                    this[_0xd8172(0x59c)][_0xd8172(0x1f0)](this['_worldMatrix']);
                this['_setTransformFlag'](_0x20d0f1[_0xd8172(0x584)], ![]);
            }
            return this[_0xd8172(0x5a2)];
        }
        set [_0x5659be(0x3ce)](_0x27f79c) {
            var _0x1272a3 = _0x5659be;
            this[_0x1272a3(0x2fd)] === null ? _0x27f79c['cloneTo'](this[_0x1272a3(0x577)]) : (this['_parent'][_0x1272a3(0x3ce)][_0x1272a3(0x274)](this['_localMatrix']), _0x3ed76a[_0x1272a3(0x202)](this[_0x1272a3(0x577)], _0x27f79c, this[_0x1272a3(0x577)]));
            this[_0x1272a3(0x59c)] = this[_0x1272a3(0x577)];
            if (this[_0x1272a3(0x5a2)] !== _0x27f79c)
                _0x27f79c[_0x1272a3(0x1f0)](this[_0x1272a3(0x5a2)]);
            this[_0x1272a3(0x57d)](_0x20d0f1['TRANSFORM_WORLDMATRIX'], ![]);
        }
        [_0x5659be(0x5a3)]() {
            var _0xc39742 = _0x5659be, _0x149e7f = _0x20d0f1[_0xc39742(0x327)], _0x29e6e8 = _0x20d0f1[_0xc39742(0x5a4)], _0x2b8f7b = _0x20d0f1['_tempMatrix3x31'], _0x2c63bc = _0x20d0f1['_tempMatrix3x32'];
            return _0x14703a[_0xc39742(0x281)](this[_0xc39742(0x3ce)], _0x2b8f7b), this[_0xc39742(0x5a0)][_0xc39742(0x274)](_0x149e7f), _0x14703a[_0xc39742(0x26c)](_0x149e7f, _0x29e6e8), _0x14703a[_0xc39742(0x202)](_0x29e6e8, _0x2b8f7b, _0x2c63bc), _0x2c63bc;
        }
        [_0x5659be(0x57d)](_0x2cb980, _0x5ef6c1) {
            var _0x5cd4d4 = _0x5659be;
            if (_0x5ef6c1)
                this[_0x5cd4d4(0x5a5)] |= _0x2cb980;
            else
                this[_0x5cd4d4(0x5a5)] &= ~_0x2cb980;
        }
        [_0x5659be(0x586)](_0x5efe08) {
            var _0x389be0 = _0x5659be;
            return (this[_0x389be0(0x5a5)] & _0x5efe08) != 0x0;
        }
        [_0x5659be(0x5a6)](_0x5b0828) {
            var _0x5a7962 = _0x5659be;
            if (this[_0x5a7962(0x2fd)] !== _0x5b0828) {
                if (this[_0x5a7962(0x2fd)]) {
                    var _0x12fb63 = this[_0x5a7962(0x2fd)][_0x5a7962(0x57c)], _0x3f83b0 = _0x12fb63[_0x5a7962(0x384)](this);
                    _0x12fb63[_0x5a7962(0x32c)](_0x3f83b0, 0x1);
                }
                _0x5b0828 && (_0x5b0828[_0x5a7962(0x57c)][_0x5a7962(0x298)](this), _0x5b0828 && this[_0x5a7962(0x59d)]()), this['_parent'] = _0x5b0828;
            }
        }
        ['_onWorldPositionRotationTransform']() {
            var _0x43dd19 = _0x5659be;
            (!this[_0x43dd19(0x586)](_0x20d0f1[_0x43dd19(0x584)]) || !this[_0x43dd19(0x586)](_0x20d0f1[_0x43dd19(0x59f)]) || !this[_0x43dd19(0x586)](_0x20d0f1[_0x43dd19(0x581)]) || !this[_0x43dd19(0x586)](_0x20d0f1[_0x43dd19(0x582)])) && (this[_0x43dd19(0x57d)](_0x20d0f1[_0x43dd19(0x584)] | _0x20d0f1[_0x43dd19(0x59f)] | _0x20d0f1[_0x43dd19(0x581)] | _0x20d0f1[_0x43dd19(0x582)], !![]), this['event'](_0x218b83['Event'][_0x43dd19(0x5a7)], this['_transformFlag']));
            for (var _0x20c0ba = 0x0, _0x1910bd = this[_0x43dd19(0x57c)]['length']; _0x20c0ba < _0x1910bd; _0x20c0ba++)
                this['_children'][_0x20c0ba][_0x43dd19(0x5a8)]();
        }
        [_0x5659be(0x5a9)]() {
            var _0x53a3fc = _0x5659be;
            (!this[_0x53a3fc(0x586)](_0x20d0f1[_0x53a3fc(0x584)]) || !this['_getTransformFlag'](_0x20d0f1[_0x53a3fc(0x59f)]) || !this[_0x53a3fc(0x586)](_0x20d0f1['TRANSFORM_WORLDSCALE'])) && (this[_0x53a3fc(0x57d)](_0x20d0f1[_0x53a3fc(0x584)] | _0x20d0f1['TRANSFORM_WORLDPOSITION'] | _0x20d0f1[_0x53a3fc(0x583)], !![]), this[_0x53a3fc(0x5aa)](_0x218b83['Event'][_0x53a3fc(0x5a7)], this[_0x53a3fc(0x5a5)]));
            for (var _0xb6cfd2 = 0x0, _0x1eb399 = this[_0x53a3fc(0x57c)]['length']; _0xb6cfd2 < _0x1eb399; _0xb6cfd2++)
                this[_0x53a3fc(0x57c)][_0xb6cfd2][_0x53a3fc(0x5a9)]();
        }
        [_0x5659be(0x58b)]() {
            var _0x228520 = _0x5659be;
            (!this[_0x228520(0x586)](_0x20d0f1[_0x228520(0x584)]) || !this[_0x228520(0x586)](_0x20d0f1[_0x228520(0x59f)])) && (this['_setTransformFlag'](_0x20d0f1[_0x228520(0x584)] | _0x20d0f1[_0x228520(0x59f)], !![]), this['event'](_0x218b83['Event'][_0x228520(0x5a7)], this[_0x228520(0x5a5)]));
            for (var _0x4f1c71 = 0x0, _0x3bbfdf = this['_children'][_0x228520(0x1ff)]; _0x4f1c71 < _0x3bbfdf; _0x4f1c71++)
                this[_0x228520(0x57c)][_0x4f1c71][_0x228520(0x58b)]();
        }
        [_0x5659be(0x591)]() {
            var _0xdb20e8 = _0x5659be;
            (!this[_0xdb20e8(0x586)](_0x20d0f1[_0xdb20e8(0x584)]) || !this['_getTransformFlag'](_0x20d0f1[_0xdb20e8(0x581)]) || !this[_0xdb20e8(0x586)](_0x20d0f1[_0xdb20e8(0x582)])) && (this['_setTransformFlag'](_0x20d0f1[_0xdb20e8(0x584)] | _0x20d0f1['TRANSFORM_WORLDQUATERNION'] | _0x20d0f1[_0xdb20e8(0x582)], !![]), this[_0xdb20e8(0x5aa)](_0x218b83[_0xdb20e8(0x5ab)][_0xdb20e8(0x5a7)], this[_0xdb20e8(0x5a5)]));
            for (var _0x3cfcb2 = 0x0, _0x2dd401 = this[_0xdb20e8(0x57c)][_0xdb20e8(0x1ff)]; _0x3cfcb2 < _0x2dd401; _0x3cfcb2++)
                this['_children'][_0x3cfcb2][_0xdb20e8(0x5a8)]();
        }
        [_0x5659be(0x596)]() {
            var _0x2089e5 = _0x5659be;
            (!this['_getTransformFlag'](_0x20d0f1[_0x2089e5(0x584)]) || !this[_0x2089e5(0x586)](_0x20d0f1[_0x2089e5(0x583)])) && (this[_0x2089e5(0x57d)](_0x20d0f1[_0x2089e5(0x584)] | _0x20d0f1['TRANSFORM_WORLDSCALE'], !![]), this['event'](_0x218b83[_0x2089e5(0x5ab)][_0x2089e5(0x5a7)], this[_0x2089e5(0x5a5)]));
            for (var _0x3e209a = 0x0, _0x4f15b1 = this[_0x2089e5(0x57c)][_0x2089e5(0x1ff)]; _0x3e209a < _0x4f15b1; _0x3e209a++)
                this[_0x2089e5(0x57c)][_0x3e209a][_0x2089e5(0x5a9)]();
        }
        [_0x5659be(0x59d)]() {
            var _0x1a923f = _0x5659be;
            (!this[_0x1a923f(0x586)](_0x20d0f1[_0x1a923f(0x584)]) || !this[_0x1a923f(0x586)](_0x20d0f1[_0x1a923f(0x59f)]) || !this[_0x1a923f(0x586)](_0x20d0f1[_0x1a923f(0x581)]) || !this[_0x1a923f(0x586)](_0x20d0f1[_0x1a923f(0x582)]) || !this[_0x1a923f(0x586)](_0x20d0f1[_0x1a923f(0x583)])) && (this[_0x1a923f(0x57d)](_0x20d0f1['TRANSFORM_WORLDMATRIX'] | _0x20d0f1[_0x1a923f(0x59f)] | _0x20d0f1[_0x1a923f(0x581)] | _0x20d0f1[_0x1a923f(0x582)] | _0x20d0f1[_0x1a923f(0x583)], !![]), this[_0x1a923f(0x5aa)](_0x218b83[_0x1a923f(0x5ab)][_0x1a923f(0x5a7)], this[_0x1a923f(0x5a5)]));
            for (var _0x32be31 = 0x0, _0x15d73b = this['_children']['length']; _0x32be31 < _0x15d73b; _0x32be31++)
                this['_children'][_0x32be31]['_onWorldTransform']();
        }
        [_0x5659be(0x5ac)](_0x5cad42, _0x395f8d = !![]) {
            var _0x39d782 = _0x5659be;
            _0x395f8d ? (_0x3ed76a['createFromQuaternion'](this[_0x39d782(0x397)], _0x20d0f1[_0x39d782(0x5ad)]), _0x3f70c5[_0x39d782(0x20e)](_0x5cad42, _0x20d0f1[_0x39d782(0x5ad)], _0x20d0f1[_0x39d782(0x59b)]), _0x3f70c5[_0x39d782(0x201)](this[_0x39d782(0x395)], _0x20d0f1['_tempVector30'], this[_0x39d782(0x588)]), this[_0x39d782(0x395)] = this['_localPosition']) : (_0x3f70c5[_0x39d782(0x201)](this[_0x39d782(0x59e)], _0x5cad42, this[_0x39d782(0x578)]), this[_0x39d782(0x59e)] = this['_position']);
        }
        [_0x5659be(0x273)](_0x96be08, _0xe2b5f7 = !![], _0x3e62c6 = !![]) {
            var _0x222b32 = _0x5659be, _0x419ab0;
            _0x3e62c6 ? _0x419ab0 = _0x96be08 : (_0x3f70c5[_0x222b32(0x1ee)](_0x96be08, Math['PI'] / 0xb4, _0x20d0f1[_0x222b32(0x59b)]), _0x419ab0 = _0x20d0f1[_0x222b32(0x59b)]), _0x22f58f['createFromYawPitchRoll'](_0x419ab0['y'], _0x419ab0['x'], _0x419ab0['z'], _0x20d0f1[_0x222b32(0x327)]), _0xe2b5f7 ? (_0x22f58f['multiply'](this[_0x222b32(0x576)], _0x20d0f1[_0x222b32(0x327)], this['_localRotation']), this[_0x222b32(0x397)] = this[_0x222b32(0x576)]) : (_0x22f58f['multiply'](_0x20d0f1['_tempQuaternion0'], this[_0x222b32(0x5a0)], this[_0x222b32(0x579)]), this[_0x222b32(0x5a0)] = this[_0x222b32(0x579)]);
        }
        [_0x5659be(0x5ae)](_0x327a6a) {
            var _0x648c3d = _0x5659be, _0x38c120 = this[_0x648c3d(0x3ce)][_0x648c3d(0x1f6)];
            _0x327a6a['x'] = -_0x38c120[0x8], _0x327a6a['y'] = -_0x38c120[0x9], _0x327a6a['z'] = -_0x38c120[0xa];
        }
        ['getUp'](_0x11b147) {
            var _0x224f4b = _0x5659be, _0x137d47 = this[_0x224f4b(0x3ce)]['elements'];
            _0x11b147['x'] = _0x137d47[0x4], _0x11b147['y'] = _0x137d47[0x5], _0x11b147['z'] = _0x137d47[0x6];
        }
        [_0x5659be(0x5af)](_0x5b2d30) {
            var _0x2f9e17 = _0x5659be, _0x5e3f89 = this[_0x2f9e17(0x3ce)][_0x2f9e17(0x1f6)];
            _0x5b2d30['x'] = _0x5e3f89[0x0], _0x5b2d30['y'] = _0x5e3f89[0x1], _0x5b2d30['z'] = _0x5e3f89[0x2];
        }
        [_0x5659be(0x277)](_0x2e3421, _0x103edb, _0x1e56d5 = ![]) {
            var _0xa553fe = _0x5659be, _0x25f487;
            if (_0x1e56d5) {
                _0x25f487 = this['_localPosition'];
                if (Math[_0xa553fe(0x1e7)](_0x25f487['x'] - _0x2e3421['x']) < _0x57b8d6[_0xa553fe(0x1eb)] && Math[_0xa553fe(0x1e7)](_0x25f487['y'] - _0x2e3421['y']) < _0x57b8d6['zeroTolerance'] && Math['abs'](_0x25f487['z'] - _0x2e3421['z']) < _0x57b8d6[_0xa553fe(0x1eb)])
                    return;
                _0x22f58f[_0xa553fe(0x277)](this[_0xa553fe(0x588)], _0x2e3421, _0x103edb, this[_0xa553fe(0x576)]), this['_localRotation'][_0xa553fe(0x274)](this[_0xa553fe(0x576)]), this[_0xa553fe(0x397)] = this[_0xa553fe(0x576)];
            } else {
                var _0x41b500 = this[_0xa553fe(0x59e)];
                _0x25f487 = _0x41b500;
                if (Math[_0xa553fe(0x1e7)](_0x25f487['x'] - _0x2e3421['x']) < _0x57b8d6[_0xa553fe(0x1eb)] && Math['abs'](_0x25f487['y'] - _0x2e3421['y']) < _0x57b8d6[_0xa553fe(0x1eb)] && Math[_0xa553fe(0x1e7)](_0x25f487['z'] - _0x2e3421['z']) < _0x57b8d6[_0xa553fe(0x1eb)])
                    return;
                _0x22f58f[_0xa553fe(0x277)](_0x41b500, _0x2e3421, _0x103edb, this['_rotation']), this[_0xa553fe(0x579)][_0xa553fe(0x274)](this[_0xa553fe(0x579)]), this[_0xa553fe(0x5a0)] = this[_0xa553fe(0x579)];
            }
        }
        [_0x5659be(0x585)]() {
            var _0x418160 = _0x5659be;
            if (this[_0x418160(0x586)](_0x20d0f1['TRANSFORM_WORLDSCALE'])) {
                if (this[_0x418160(0x2fd)] !== null) {
                    var _0x2cc6db = this[_0x418160(0x5a3)]()['elements'];
                    this['_scale']['x'] = _0x2cc6db[0x0], this[_0x418160(0x57a)]['y'] = _0x2cc6db[0x4], this[_0x418160(0x57a)]['z'] = _0x2cc6db[0x8];
                } else
                    this[_0x418160(0x593)][_0x418160(0x1f0)](this[_0x418160(0x57a)]);
                this[_0x418160(0x57d)](_0x20d0f1[_0x418160(0x583)], ![]);
            }
            return this[_0x418160(0x57a)];
        }
        [_0x5659be(0x5b0)](_0x196685) {
            var _0xeb57ea = _0x5659be;
            if (this[_0xeb57ea(0x2fd)] !== null) {
                var _0x40575a = _0x20d0f1['_tempMatrix3x33'], _0x317ac7 = _0x20d0f1[_0xeb57ea(0x5b1)], _0x188637 = _0x317ac7['elements'], _0x5a1a05 = this[_0xeb57ea(0x2fd)][_0xeb57ea(0x5a3)]();
                _0x5a1a05[_0xeb57ea(0x274)](_0x5a1a05), _0x14703a[_0xeb57ea(0x271)](_0x196685, _0x40575a), _0x14703a[_0xeb57ea(0x202)](_0x5a1a05, _0x40575a, _0x317ac7), this[_0xeb57ea(0x593)]['x'] = _0x188637[0x0], this['_localScale']['y'] = _0x188637[0x4], this['_localScale']['z'] = _0x188637[0x8];
            } else
                _0x196685['cloneTo'](this[_0xeb57ea(0x593)]);
            this[_0xeb57ea(0x398)] = this['_localScale'];
            if (this[_0xeb57ea(0x57a)] !== _0x196685)
                _0x196685[_0xeb57ea(0x1f0)](this[_0xeb57ea(0x57a)]);
            this['_setTransformFlag'](_0x20d0f1['TRANSFORM_WORLDSCALE'], ![]);
        }
        get ['scale']() {
            var _0x2bac4a = _0x5659be;
            return console[_0x2bac4a(0x24e)](_0x2bac4a(0x5b2)), this[_0x2bac4a(0x585)]();
        }
        set [_0x5659be(0x1ee)](_0x49c764) {
            var _0x446f6e = _0x5659be;
            console['warn'](_0x446f6e(0x5b3)), this[_0x446f6e(0x5b0)](_0x49c764);
        }
    }
    _0x20d0f1['_tempVector30'] = new _0x3f70c5(), _0x20d0f1[_0x5659be(0x327)] = new _0x22f58f(), _0x20d0f1[_0x5659be(0x5ad)] = new _0x3ed76a(), _0x20d0f1[_0x5659be(0x5a4)] = new _0x14703a(), _0x20d0f1[_0x5659be(0x5b4)] = new _0x14703a(), _0x20d0f1[_0x5659be(0x5b5)] = new _0x14703a(), _0x20d0f1[_0x5659be(0x5b1)] = new _0x14703a(), _0x20d0f1[_0x5659be(0x57e)] = 0x1, _0x20d0f1[_0x5659be(0x57f)] = 0x2, _0x20d0f1[_0x5659be(0x580)] = 0x4, _0x20d0f1['TRANSFORM_WORLDPOSITION'] = 0x8, _0x20d0f1['TRANSFORM_WORLDQUATERNION'] = 0x10, _0x20d0f1[_0x5659be(0x583)] = 0x20, _0x20d0f1['TRANSFORM_WORLDMATRIX'] = 0x40, _0x20d0f1[_0x5659be(0x582)] = 0x80, _0x20d0f1['_angleToRandin'] = 0xb4 / Math['PI'];
    class _0x356e58 extends _0x218b83[_0x5659be(0x5b6)] {
        constructor(_0x23a06e = null, _0x3e54ca = ![]) {
            var _0x2ad411 = _0x5659be;
            super(), this[_0x2ad411(0x5b7)] = ![], this[_0x2ad411(0x5b8)] = ![], this['_id'] = ++_0x356e58['_uniqueIDCounter'], this[_0x2ad411(0x3ca)] = new _0x20d0f1(this), this[_0x2ad411(0x5b9)] = _0x3e54ca, this[_0x2ad411(0x5ba)] = 0x0, this[_0x2ad411(0x2a5)] = _0x23a06e ? _0x23a06e : _0x2ad411(0x5bb);
        }
        static [_0x5659be(0x229)]() {
        }
        static [_0x5659be(0x5bc)](_0x37b3e3, _0x1b867d = null, _0x3ae332 = !![], _0x3b2a7a = null, _0xc1e38a = null) {
            var _0x1d18a1 = _0x5659be, _0x456dd1 = _0x37b3e3[_0x1d18a1(0x1f4)]();
            _0x1b867d && _0x1b867d['addChild'](_0x456dd1);
            var _0x227e8b = _0x456dd1[_0x1d18a1(0x3cc)];
            if (_0x3ae332) {
                var _0x43a20d = _0x227e8b[_0x1d18a1(0x3ce)];
                _0x37b3e3[_0x1d18a1(0x3cc)]['worldMatrix'][_0x1d18a1(0x1f0)](_0x43a20d), _0x227e8b[_0x1d18a1(0x3ce)] = _0x43a20d;
            } else
                _0x3b2a7a && (_0x227e8b[_0x1d18a1(0x59e)] = _0x3b2a7a), _0xc1e38a && (_0x227e8b[_0x1d18a1(0x5a0)] = _0xc1e38a);
            return _0x456dd1;
        }
        static [_0x5659be(0x31c)](_0x241506, _0x515fc8) {
            var _0x1d356a = _0x5659be;
            _0x218b83['Laya'][_0x1d356a(0x5bd)][_0x1d356a(0x31e)](_0x241506, _0x515fc8, null, _0x356e58[_0x1d356a(0x5be)]);
        }
        get ['id']() {
            return this['_id'];
        }
        get [_0x5659be(0x5ba)]() {
            var _0x438832 = _0x5659be;
            return this[_0x438832(0x5bf)];
        }
        set [_0x5659be(0x5ba)](_0x12dcd1) {
            var _0x1e98e7 = _0x5659be;
            if (this[_0x1e98e7(0x5bf)] !== _0x12dcd1) {
                if (_0x12dcd1 >= 0x0 && _0x12dcd1 <= 0x1e)
                    this[_0x1e98e7(0x5bf)] = _0x12dcd1;
                else
                    throw new Error(_0x1e98e7(0x5c0));
            }
        }
        get ['url']() {
            var _0x502dce = _0x5659be;
            return this[_0x502dce(0x5c1)];
        }
        get [_0x5659be(0x3cd)]() {
            var _0x1cca2d = _0x5659be;
            return this[_0x1cca2d(0x5b9)];
        }
        get [_0x5659be(0x3cc)]() {
            return this['_transform'];
        }
        ['_setCreateURL'](_0x1231da) {
            var _0x38e5ba = _0x5659be;
            this[_0x38e5ba(0x5c1)] = _0x218b83[_0x38e5ba(0x5c2)][_0x38e5ba(0x5c3)](_0x1231da);
        }
        [_0x5659be(0x5c4)](_0x2ddfdb, _0x3151ae, _0x3a43f3) {
            var _0x381f42 = _0x5659be, _0x3979d2 = this[_0x381f42(0x5c5)](_0x58a8c8);
            if (_0x3979d2) {
                if (!_0x3979d2['avatar'])
                    _0x2ddfdb[_0x381f42(0x3a4)](_0x3979d2, _0x3151ae, _0x3a43f3);
            }
            if (this[_0x381f42(0x2fd)] && this['_parent'] instanceof _0x356e58) {
                _0x3a43f3[_0x381f42(0x5c6)](this[_0x381f42(0x2fd)]['name']);
                var _0x513683 = this[_0x381f42(0x2fd)];
                _0x513683['_hierarchyAnimator'] && _0x513683[_0x381f42(0x5c4)](_0x2ddfdb, _0x3151ae, _0x3a43f3);
            }
        }
        ['_setHierarchyAnimator'](_0x544a33, _0xacd775) {
            var _0x2b451f = _0x5659be;
            this[_0x2b451f(0x5c7)](_0x544a33), this['_changeAnimatorAvatar'](_0x544a33[_0x2b451f(0x3ab)]);
            for (var _0x4fb9ea = 0x0, _0x3ca5a7 = this[_0x2b451f(0x57c)][_0x2b451f(0x1ff)]; _0x4fb9ea < _0x3ca5a7; _0x4fb9ea++) {
                var _0x2d6bc8 = this[_0x2b451f(0x57c)][_0x4fb9ea];
                _0x2d6bc8['_hierarchyAnimator'] == _0xacd775 && _0x2d6bc8[_0x2b451f(0x3a2)](_0x544a33, _0xacd775);
            }
        }
        [_0x5659be(0x5c8)](_0x8bba62, _0xb493fb) {
            var _0x232a03 = _0x5659be;
            this['_changeHierarchyAnimator'](_0xb493fb), this['_changeAnimatorAvatar'](_0xb493fb ? _0xb493fb[_0x232a03(0x3ab)] : null);
            for (var _0x3d01b7 = 0x0, _0x511a8a = this[_0x232a03(0x57c)][_0x232a03(0x1ff)]; _0x3d01b7 < _0x511a8a; _0x3d01b7++) {
                var _0x5a768a = this[_0x232a03(0x57c)][_0x3d01b7];
                _0x5a768a[_0x232a03(0x3a3)] == _0x8bba62 && _0x5a768a[_0x232a03(0x5c8)](_0x8bba62, _0xb493fb);
            }
        }
        [_0x5659be(0x3c7)](_0x555166, _0x4feafc) {
            var _0x58613d = _0x5659be;
            this[_0x58613d(0x5c9)](_0x4feafc);
            for (var _0x15a540 = 0x0, _0x38a4ee = this[_0x58613d(0x57c)][_0x58613d(0x1ff)]; _0x15a540 < _0x38a4ee; _0x15a540++) {
                var _0x11e76f = this[_0x58613d(0x57c)][_0x15a540];
                _0x11e76f[_0x58613d(0x3a3)] == _0x555166 && _0x11e76f[_0x58613d(0x3c7)](_0x555166, _0x4feafc);
            }
        }
        [_0x5659be(0x3a4)](_0x2f0cee, _0x5d7079, _0x52713f) {
            var _0xe92b10 = _0x5659be;
            _0x2f0cee['_handleSpriteOwnersBySprite'](_0x5d7079, _0x52713f, this);
            for (var _0xabe9da = 0x0, _0x26328a = this['_children'][_0xe92b10(0x1ff)]; _0xabe9da < _0x26328a; _0xabe9da++) {
                var _0x2fe922 = this[_0xe92b10(0x57c)][_0xabe9da], _0x30caae = _0x52713f[_0xe92b10(0x1ff)];
                _0x52713f[_0xe92b10(0x298)](_0x2fe922[_0xe92b10(0x2a5)]), _0x2fe922[_0xe92b10(0x3a4)](_0x2f0cee, _0x5d7079, _0x52713f), _0x52713f['splice'](_0x30caae, 0x1);
            }
        }
        ['_changeHierarchyAnimator'](_0x319a50) {
            this['_hierarchyAnimator'] = _0x319a50;
        }
        [_0x5659be(0x5c9)](_0x3c7ac9) {
        }
        [_0x5659be(0x5ca)]() {
            var _0x2a0799 = _0x5659be;
            super['_onInActiveInScene']();
            if (!this[_0x2a0799(0x362)])
                return;
            for (let _0x2c9db2 = 0x0, _0x4110cd = this[_0x2a0799(0x362)][_0x2a0799(0x1ff)]; _0x2c9db2 < _0x4110cd; _0x2c9db2++)
                this['scene'][_0x2a0799(0x5cb)](this[_0x2a0799(0x362)][_0x2c9db2]);
        }
        [_0x5659be(0x5cc)]() {
            var _0x1f2ff2 = _0x5659be;
            if (this[_0x1f2ff2(0x2fd)] instanceof _0x356e58) {
                var _0x12612b = this[_0x1f2ff2(0x2fd)];
                this[_0x1f2ff2(0x3cc)][_0x1f2ff2(0x5a6)](_0x12612b[_0x1f2ff2(0x3cc)]), _0x12612b[_0x1f2ff2(0x3a3)] && (!this['_hierarchyAnimator'] && this['_setHierarchyAnimator'](_0x12612b[_0x1f2ff2(0x3a3)], null), _0x12612b[_0x1f2ff2(0x5c4)](this, !![], [this[_0x1f2ff2(0x2a5)]]));
            }
            super[_0x1f2ff2(0x5cc)]();
        }
        [_0x5659be(0x5cd)]() {
            var _0x42813b = _0x5659be;
            super[_0x42813b(0x5cd)]();
            if (this[_0x42813b(0x2fd)] instanceof _0x356e58) {
                var _0x17327c = this[_0x42813b(0x2fd)];
                this[_0x42813b(0x3cc)][_0x42813b(0x5a6)](null), _0x17327c['_hierarchyAnimator'] && (this[_0x42813b(0x3a3)] == _0x17327c[_0x42813b(0x3a3)] && this[_0x42813b(0x5c8)](_0x17327c[_0x42813b(0x3a3)], null), _0x17327c[_0x42813b(0x5c4)](this, ![], [this[_0x42813b(0x2a5)]]));
            }
        }
        [_0x5659be(0x318)](_0x1f773a, _0x3e892f) {
            var _0x1a5c8a = _0x5659be;
            _0x1f773a[_0x1a5c8a(0x3cd)] !== undefined && (this['_isStatic'] = _0x1f773a['isStatic']), _0x1f773a[_0x1a5c8a(0x5ce)] !== undefined && (this['active'] = _0x1f773a[_0x1a5c8a(0x5ce)]), _0x1f773a[_0x1a5c8a(0x2a5)] != undefined && (this[_0x1a5c8a(0x2a5)] = _0x1f773a[_0x1a5c8a(0x2a5)]);
            if (_0x1f773a[_0x1a5c8a(0x59e)] !== undefined) {
                var _0x202e68 = this[_0x1a5c8a(0x3cc)]['localPosition'];
                _0x202e68[_0x1a5c8a(0x1fb)](_0x1f773a[_0x1a5c8a(0x59e)]), this[_0x1a5c8a(0x3cc)][_0x1a5c8a(0x395)] = _0x202e68;
            }
            if (_0x1f773a[_0x1a5c8a(0x5a1)] !== undefined) {
                var _0x24ff6e = this['transform']['localRotationEuler'];
                _0x24ff6e['fromArray'](_0x1f773a[_0x1a5c8a(0x5a1)]), this['transform'][_0x1a5c8a(0x39a)] = _0x24ff6e;
            }
            if (_0x1f773a[_0x1a5c8a(0x5a0)] !== undefined) {
                var _0x4962dd = this[_0x1a5c8a(0x3cc)]['localRotation'];
                _0x4962dd['fromArray'](_0x1f773a[_0x1a5c8a(0x5a0)]), this['transform'][_0x1a5c8a(0x397)] = _0x4962dd;
            }
            if (_0x1f773a[_0x1a5c8a(0x1ee)] !== undefined) {
                var _0x238d05 = this[_0x1a5c8a(0x3cc)][_0x1a5c8a(0x398)];
                _0x238d05[_0x1a5c8a(0x1fb)](_0x1f773a['scale']), this['transform'][_0x1a5c8a(0x398)] = _0x238d05;
            }
            _0x1f773a['layer'] != undefined && (this['layer'] = _0x1f773a['layer']);
        }
        [_0x5659be(0x339)](_0x1081fb, _0x2a627e, _0x143f57) {
            var _0x245886 = _0x5659be;
            if (this[_0x245886(0x5cf)])
                throw new Error(_0x245886(0x5d0));
            var _0x552915 = _0x1081fb, _0x17122c = this['_transform'], _0x2b32b6 = _0x552915[_0x245886(0x3ca)];
            _0x552915[_0x245886(0x2a5)] = this[_0x245886(0x2a5)], _0x552915[_0x245886(0x5cf)] = this[_0x245886(0x5cf)], _0x552915['active'] = this[_0x245886(0x5ce)], _0x2b32b6[_0x245886(0x395)] = _0x17122c['localPosition'], _0x2b32b6['localRotation'] = _0x17122c[_0x245886(0x397)], _0x2b32b6[_0x245886(0x398)] = _0x17122c[_0x245886(0x398)], _0x552915[_0x245886(0x5b9)] = this[_0x245886(0x5b9)], _0x552915['layer'] = this[_0x245886(0x5ba)], super[_0x245886(0x339)](_0x552915, _0x2a627e, _0x143f57);
        }
        static [_0x5659be(0x5d1)](_0x389ae6) {
            var _0x37ea2e = _0x5659be, _0x18fc4a = _0x389ae6[_0x37ea2e(0x5d2)](), _0x265ffe = _0x389ae6[_0x37ea2e(0x57c)];
            for (var _0x215ad5 = 0x0, _0xd78423 = _0x265ffe[_0x37ea2e(0x1ff)]; _0x215ad5 < _0xd78423; _0x215ad5++) {
                var _0x2395f6 = _0x356e58[_0x37ea2e(0x5d1)](_0x265ffe[_0x215ad5]);
                _0x18fc4a['addChild'](_0x2395f6);
            }
            return _0x18fc4a;
        }
        static [_0x5659be(0x5d3)](_0x45364e, _0xe9ce13, _0x4001d6, _0x30503f) {
            var _0x374daa = _0x5659be, _0x3d32e2 = _0x4001d6[_0x374daa(0x57c)], _0x4c41a4 = _0x30503f[_0x374daa(0x57c)];
            for (var _0x3ff2b6 = 0x0, _0x82697d = _0x3d32e2[_0x374daa(0x1ff)]; _0x3ff2b6 < _0x82697d; _0x3ff2b6++)
                _0x356e58[_0x374daa(0x5d3)](_0x45364e, _0xe9ce13, _0x3d32e2[_0x3ff2b6], _0x4c41a4[_0x3ff2b6]);
            _0x4001d6['_cloneTo'](_0x30503f, _0x45364e, _0xe9ce13);
        }
        [_0x5659be(0x1f4)]() {
            var _0x5369dc = _0x5659be, _0x466e61 = _0x356e58[_0x5369dc(0x5d1)](this);
            return _0x356e58[_0x5369dc(0x5d3)](this, _0x466e61, this, _0x466e61), _0x466e61;
        }
        [_0x5659be(0x311)](_0x326744 = !![]) {
            var _0x31d6c7 = _0x5659be;
            if (this[_0x31d6c7(0x5cf)])
                return;
            super[_0x31d6c7(0x311)](_0x326744), this['_transform'] = null, this[_0x31d6c7(0x362)] = null, this[_0x31d6c7(0x5c1)] && _0x218b83['Loader'][_0x31d6c7(0x5d4)](this[_0x31d6c7(0x5c1)]);
        }
        ['_create']() {
            return new _0x356e58();
        }
    }
    _0x356e58[_0x5659be(0x5be)] = _0x5659be(0x5be), _0x356e58['WORLDMATRIX'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x5d5)), _0x356e58['MVPMATRIX'] = _0x84b6d6[_0x5659be(0x526)]('u_MvpMatrix'), _0x356e58[_0x5659be(0x4e8)] = 0x0;
    class _0x2a98bb extends _0x428cb6 {
        constructor() {
            var _0x575901 = _0x5659be;
            super(), this['_projectionViewWorldMatrix'] = new _0x3ed76a(), this[_0x575901(0x5d6)] = new _0x552b02(), this[_0x575901(0x5d6)] = new _0x552b02(null);
        }
        static ['create'](_0x3b4114, _0x41e1ef, _0x104ccc, _0x164826, _0x32cda3, _0x183ba5) {
            var _0x41de19 = _0x5659be, _0x1f8fde;
            return _0x1f8fde = _0x2a98bb[_0x41de19(0x3ea)][_0x41de19(0x1ff)] > 0x0 ? _0x2a98bb[_0x41de19(0x3ea)][_0x41de19(0x55e)]() : new _0x2a98bb(), _0x1f8fde[_0x41de19(0x5d7)] = _0x3b4114, _0x1f8fde[_0x41de19(0x5d8)] = _0x41e1ef, _0x1f8fde[_0x41de19(0x5d9)] = _0x104ccc, _0x1f8fde['_subMeshIndex'] = _0x164826, _0x1f8fde[_0x41de19(0x508)] = _0x32cda3, _0x1f8fde['_commandBuffer'] = _0x183ba5, _0x1f8fde;
        }
        [_0x5659be(0x54b)]() {
            var _0x31f227 = _0x5659be, _0x5424c3 = this[_0x31f227(0x5d9)][_0x31f227(0x50a)]['getSubShaderAt'](this[_0x31f227(0x508)]);
            this['setContext'](this[_0x31f227(0x548)][_0x31f227(0x54d)]);
            var _0x4146a4 = this['_context'], _0x135a81 = _0x4146a4[_0x31f227(0x3d7)], _0x3a72d9 = _0x4146a4[_0x31f227(0x5da)], _0x349bf3 = _0x4146a4[_0x31f227(0x5db)], _0x360b89 = _0x4146a4[_0x31f227(0x5dc)];
            _0x3ed76a[_0x31f227(0x202)](_0x360b89, this['_matrix'], this['_projectionViewWorldMatrix']), this[_0x31f227(0x5d6)][_0x31f227(0x4a0)](_0x356e58['WORLDMATRIX'], this['_matrix']), this['_renderShaderValue'][_0x31f227(0x4a0)](_0x356e58[_0x31f227(0x5dd)], this[_0x31f227(0x5de)]);
            var _0x1c3bb7 = _0x4146a4[_0x31f227(0x5df)], _0x4c8fc8 = _0x5424c3[_0x31f227(0x50f)];
            for (var _0xab8d51 = 0x0, _0x3d9520 = _0x4c8fc8['length']; _0xab8d51 < _0x3d9520; _0xab8d51++) {
                var _0x1c6117 = _0x4c8fc8[_0xab8d51];
                if (_0x1c6117[_0x31f227(0x5e0)] !== _0x1c3bb7)
                    continue;
                var _0x34bf75 = _0x2a98bb[_0x31f227(0x565)];
                _0x3a72d9[_0x31f227(0x4e0)][_0x31f227(0x490)][_0x31f227(0x1f0)](_0x34bf75), _0x34bf75[_0x31f227(0x43b)](this['_renderShaderValue']['_defineDatas']), _0x34bf75['addDefineDatas'](this['_material'][_0x31f227(0x4e0)][_0x31f227(0x490)]);
                var _0x412885 = _0x4146a4[_0x31f227(0x509)] = _0x1c6117['withCompile'](_0x34bf75);
                _0x412885[_0x31f227(0x444)](), _0x412885[_0x31f227(0x566)](_0x412885[_0x31f227(0x5e1)], _0x3a72d9[_0x31f227(0x4e0)], !![]), _0x412885['uploadUniforms'](_0x412885[_0x31f227(0x5e2)], this['_renderShaderValue'], !![]), _0x412885['uploadUniforms'](_0x412885[_0x31f227(0x5e3)], _0x349bf3, !![]);
                var _0x5008a1 = this[_0x31f227(0x5d9)]['_shaderValues'];
                _0x412885[_0x31f227(0x566)](_0x412885[_0x31f227(0x567)], _0x5008a1, !![]), _0x412885[_0x31f227(0x5e4)](_0x5008a1), _0x412885['uploadRenderStateFrontFace'](_0x5008a1, _0x135a81, this[_0x31f227(0x5d8)][_0x31f227(0x48d)]());
            }
            var _0x2037d1 = this['_mesh'][_0x31f227(0x5e5)], _0x5370a3;
            if (this['_subMeshIndex'] == -0x1)
                for (var _0x3730ca = 0x0, _0x3de6d6 = _0x2037d1[_0x31f227(0x1ff)]; _0x3730ca < _0x3de6d6; _0x3730ca++) {
                    _0x5370a3 = _0x2037d1[_0x3730ca], _0x5370a3['_prepareRender'](_0x4146a4) && _0x5370a3[_0x31f227(0x5e6)](_0x4146a4);
                }
            else {
                var _0x2037d1 = this[_0x31f227(0x5d7)][_0x31f227(0x5e5)];
                _0x5370a3 = _0x2037d1[this[_0x31f227(0x5e7)]], _0x5370a3[_0x31f227(0x5e8)](_0x4146a4) && _0x5370a3['_render'](_0x4146a4);
            }
        }
        [_0x5659be(0x54c)]() {
            var _0x4fc9d8 = _0x5659be;
            _0x2a98bb[_0x4fc9d8(0x3ea)][_0x4fc9d8(0x298)](this), this[_0x4fc9d8(0x5d6)]['clearDefine'](), this[_0x4fc9d8(0x5d6)][_0x4fc9d8(0x492)]();
        }
    }
    _0x2a98bb['_pool'] = [], _0x2a98bb[_0x5659be(0x565)] = new _0x23f873();
    class _0x34f68f extends _0x428cb6 {
        constructor() {
            var _0x5dbc10 = _0x5659be;
            super(...arguments), this['_clearColor'] = ![], this['_clearDepth'] = ![], this[_0x5dbc10(0x5e9)] = new _0x8fb80(), this[_0x5dbc10(0x5ea)] = 0x1;
        }
        static ['create'](_0x5b72e6, _0x41cf75, _0x1fe3c6, _0x64b046 = 0x1, _0x5a8b1a) {
            var _0x100613 = _0x5659be, _0x4d445b;
            return _0x4d445b = _0x34f68f['_pool']['length'] > 0x0 ? _0x34f68f[_0x100613(0x3ea)][_0x100613(0x55e)]() : new _0x34f68f(), _0x4d445b[_0x100613(0x5eb)] = _0x5b72e6, _0x4d445b[_0x100613(0x5ec)] = _0x41cf75, _0x1fe3c6[_0x100613(0x1f0)](_0x4d445b[_0x100613(0x5e9)]), _0x4d445b[_0x100613(0x5ea)] = _0x64b046, _0x4d445b[_0x100613(0x548)] = _0x5a8b1a, _0x4d445b;
        }
        [_0x5659be(0x54b)]() {
            var _0x4af2bc = _0x5659be, _0x26df43 = _0x218b83[_0x4af2bc(0x2f3)][_0x4af2bc(0x2f4)], _0x253df3, _0x553b0a = this[_0x4af2bc(0x5e9)];
            this[_0x4af2bc(0x5eb)] && (_0x26df43[_0x4af2bc(0x5ed)](_0x553b0a['x'], _0x553b0a['y'], _0x553b0a['z'], _0x553b0a['w']), _0x253df3 |= _0x26df43['COLOR_BUFFER_BIT']), this[_0x4af2bc(0x5ec)] && (_0x26df43['clearDepth'](this[_0x4af2bc(0x5ea)]), _0x253df3 |= _0x26df43[_0x4af2bc(0x5ee)]), (this[_0x4af2bc(0x5eb)] || this[_0x4af2bc(0x5ec)]) && _0x26df43[_0x4af2bc(0x496)](_0x253df3);
        }
        [_0x5659be(0x54c)]() {
        }
    }
    _0x34f68f[_0x5659be(0x3ea)] = [];
    class _0x40fc49 extends _0x428cb6 {
        static ['create'](_0x5c4d15, _0xa75135, _0x169de9, _0x4ac8ba) {
            var _0x1ceb4f = _0x5659be, _0x2575f8;
            return _0x2575f8 = _0x40fc49['_pool'][_0x1ceb4f(0x1ff)] > 0x0 ? _0x40fc49[_0x1ceb4f(0x3ea)][_0x1ceb4f(0x55e)]() : new _0x40fc49(), _0x2575f8[_0x1ceb4f(0x5e6)] = _0x5c4d15, _0x2575f8[_0x1ceb4f(0x5d9)] = _0xa75135, _0x2575f8[_0x1ceb4f(0x508)] = _0x169de9, _0x2575f8['_commandBuffer'] = _0x4ac8ba, _0x2575f8;
        }
        ['_elementRender'](_0x1070e7, _0x53124d) {
            var _0x44c0fa = _0x5659be, _0x3c1093 = _0x53124d[_0x44c0fa(0x3d7)], _0x1e92d6, _0x156eda, _0x274130, _0x86919d = _0x429ec3[_0x44c0fa(0x5ef)][_0x44c0fa(0x37b)], _0x2550b2 = _0x53124d[_0x44c0fa(0x5da)];
            this['_render'][_0x44c0fa(0x3a6)] = _0x53124d['scene'];
            var _0x58ac90 = _0x53124d[_0x44c0fa(0x5db)], _0xa2edff = _0x1070e7['_transform'], _0x4153b6 = _0x1070e7[_0x44c0fa(0x5f0)];
            _0x53124d['renderElement'] = _0x1070e7;
            var _0x23d23f = _0x86919d !== _0x1070e7[_0x44c0fa(0x506)]['_updateMark'] || _0x1070e7[_0x44c0fa(0x5f1)] !== _0x1070e7['render'][_0x44c0fa(0x5f2)];
            _0x23d23f ? (_0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x5f3)](_0x53124d, _0xa2edff), _0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x5f4)](_0x53124d, _0xa2edff), _0x1070e7['render'][_0x44c0fa(0x37b)] = _0x86919d, _0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x5f2)] = _0x1070e7[_0x44c0fa(0x5f1)]) : _0x1070e7[_0x44c0fa(0x5f1)] == _0x429ec3[_0x44c0fa(0x5f5)]['RENDERTYPE_INSTANCEBATCH'] && (_0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x5f3)](_0x53124d, _0xa2edff), _0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x5f4)](_0x53124d, _0xa2edff));
            var _0x5d24be = _0x53124d[_0x44c0fa(0x5df)];
            if (_0x4153b6['_prepareRender'](_0x53124d)) {
                var _0x3b23c5 = _0x1070e7[_0x44c0fa(0x5f6)][_0x44c0fa(0x50f)];
                for (var _0x3f3340 = 0x0, _0x4363b1 = _0x3b23c5['length']; _0x3f3340 < _0x4363b1; _0x3f3340++) {
                    var _0x994cc5 = _0x3b23c5[_0x3f3340];
                    if (_0x994cc5[_0x44c0fa(0x5e0)] !== _0x5d24be)
                        continue;
                    var _0x4d6867 = _0x40fc49[_0x44c0fa(0x565)];
                    _0x2550b2[_0x44c0fa(0x4e0)]['_defineDatas']['cloneTo'](_0x4d6867), _0x4d6867[_0x44c0fa(0x43b)](_0x1070e7['render']['_shaderValues'][_0x44c0fa(0x490)]), _0x4d6867[_0x44c0fa(0x43b)](this['_material'][_0x44c0fa(0x4e0)][_0x44c0fa(0x490)]);
                    var _0x4f61c0 = _0x53124d[_0x44c0fa(0x509)] = _0x994cc5[_0x44c0fa(0x52e)](_0x4d6867), _0x4e08ec = _0x4f61c0[_0x44c0fa(0x444)](), _0x1077e3 = _0x86919d !== _0x4f61c0[_0x44c0fa(0x5f7)], _0x4c0cf6 = _0x4f61c0[_0x44c0fa(0x5f8)] !== _0x2550b2 || _0x1077e3;
                    (_0x4c0cf6 || _0x4e08ec) && (_0x4f61c0['uploadUniforms'](_0x4f61c0[_0x44c0fa(0x5e1)], _0x2550b2[_0x44c0fa(0x4e0)], _0x4c0cf6), _0x4f61c0[_0x44c0fa(0x5f8)] = _0x2550b2);
                    var _0xb5600c = _0x4f61c0[_0x44c0fa(0x5f9)] !== _0x1070e7['render'] || _0x4f61c0['_uploadRenderType'] !== _0x1070e7[_0x44c0fa(0x5f1)] || _0x1077e3;
                    (_0xb5600c || _0x4e08ec) && (_0x4f61c0[_0x44c0fa(0x566)](_0x4f61c0[_0x44c0fa(0x5e2)], _0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x4e0)], _0xb5600c), _0x4f61c0[_0x44c0fa(0x5f9)] = _0x1070e7[_0x44c0fa(0x506)], _0x4f61c0[_0x44c0fa(0x5fa)] = _0x1070e7['renderType']);
                    var _0xd810b8 = _0x4f61c0['_uploadCameraShaderValue'] !== _0x58ac90 || _0x1077e3;
                    (_0xd810b8 || _0x4e08ec) && (_0x4f61c0['uploadUniforms'](_0x4f61c0['_cameraUniformParamsMap'], _0x58ac90, _0xd810b8), _0x4f61c0[_0x44c0fa(0x5fb)] = _0x58ac90);
                    var _0x40f232 = _0x4f61c0[_0x44c0fa(0x5fc)] !== this[_0x44c0fa(0x5d9)] || _0x1077e3;
                    (_0x40f232 || _0x4e08ec) && (_0x4f61c0[_0x44c0fa(0x566)](_0x4f61c0['_materialUniformParamsMap'], this[_0x44c0fa(0x5d9)][_0x44c0fa(0x4e0)], _0x40f232), _0x4f61c0[_0x44c0fa(0x5fc)] = this[_0x44c0fa(0x5d9)]);
                    var _0x131294 = this[_0x44c0fa(0x5d9)][_0x44c0fa(0x4e0)];
                    _0x1e92d6 !== this['_material'] || _0x156eda !== _0x4f61c0 ? (_0x4f61c0[_0x44c0fa(0x5e4)](_0x131294), _0x4f61c0['uploadRenderStateFrontFace'](_0x131294, _0x3c1093, _0x1070e7['getInvertFront']()), _0x1e92d6 = this[_0x44c0fa(0x5d9)], _0x156eda = _0x4f61c0, _0x274130 = _0x1070e7[_0x44c0fa(0x506)]) : _0x274130 !== _0x1070e7[_0x44c0fa(0x506)] && (_0x4f61c0['uploadRenderStateFrontFace'](_0x131294, _0x3c1093, _0x1070e7[_0x44c0fa(0x48d)]()), _0x274130 = _0x1070e7[_0x44c0fa(0x506)]), _0x4153b6[_0x44c0fa(0x5e6)](_0x53124d), _0x4f61c0['_uploadMark'] = _0x86919d;
                }
            }
            if (_0x1070e7[_0x44c0fa(0x5f1)] !== _0x429ec3[_0x44c0fa(0x5f5)][_0x44c0fa(0x5fd)])
                _0x1070e7[_0x44c0fa(0x506)][_0x44c0fa(0x5fe)](_0x53124d);
        }
        [_0x5659be(0x54b)]() {
            var _0xd0b6d4 = _0x5659be;
            if (!this[_0xd0b6d4(0x5d9)])
                throw _0xd0b6d4(0x5ff);
            this['setContext'](this['_commandBuffer'][_0xd0b6d4(0x54d)]);
            var _0x970ea9 = this[_0xd0b6d4(0x54d)], _0x1a4edd = _0x970ea9[_0xd0b6d4(0x5da)], _0x51efb4 = this[_0xd0b6d4(0x5e6)][_0xd0b6d4(0x600)];
            for (var _0x10a3ae = 0x0, _0x4d82f7 = _0x51efb4[_0xd0b6d4(0x1ff)]; _0x10a3ae < _0x4d82f7; _0x10a3ae++) {
                var _0x108350 = _0x51efb4[_0x10a3ae];
                this[_0xd0b6d4(0x601)](_0x108350), this['_elementRender'](_0x108350, _0x970ea9);
            }
        }
        [_0x5659be(0x601)](_0x27d13a) {
            var _0xf49b75 = _0x5659be;
            this['_material'] && (_0x27d13a[_0xf49b75(0x5f6)] = this['_material']['_shader']['getSubShaderAt'](this[_0xf49b75(0x508)]));
        }
        ['recover']() {
            var _0x46b140 = _0x5659be;
            _0x40fc49[_0x46b140(0x3ea)][_0x46b140(0x298)](this);
        }
    }
    _0x40fc49[_0x5659be(0x3ea)] = [], _0x40fc49[_0x5659be(0x565)] = new _0x23f873();
    class _0x2e2aea extends _0x428cb6 {
        constructor() {
            var _0x1c2673 = _0x5659be;
            super(...arguments), this[_0x1c2673(0x571)] = 0x0, this[_0x1c2673(0x43a)] = null, this['_dataType'] = -0x1;
        }
        static [_0x5659be(0x31e)](_0x473ae0, _0x4e9ed1, _0x48fd67, _0x3cf348) {
            var _0x2103d7 = _0x5659be, _0x492a33;
            return _0x492a33 = _0x2e2aea['_pool']['length'] > 0x0 ? _0x2e2aea['_pool'][_0x2103d7(0x55e)]() : new _0x2e2aea(), _0x492a33[_0x2103d7(0x571)] = _0x473ae0, _0x492a33[_0x2103d7(0x43a)] = _0x4e9ed1, _0x492a33['_dataType'] = _0x48fd67, _0x492a33[_0x2103d7(0x548)] = _0x3cf348, _0x492a33;
        }
        [_0x5659be(0x54b)]() {
            var _0x1a8b8c = _0x5659be, _0x109be4 = this[_0x1a8b8c(0x548)][_0x1a8b8c(0x560)]['scene']['_shaderValues'];
            switch (this[_0x1a8b8c(0x572)]) {
            case _0x71dec4['ShaderDataType'][_0x1a8b8c(0x56b)]:
                _0x109be4['setInt'](this[_0x1a8b8c(0x571)], this[_0x1a8b8c(0x43a)]);
                break;
            case _0x71dec4[_0x1a8b8c(0x570)][_0x1a8b8c(0x56d)]:
                _0x109be4[_0x1a8b8c(0x4af)](this['_nameID'], this['_value']);
                break;
            case _0x71dec4[_0x1a8b8c(0x570)]['Bool']:
                _0x109be4[_0x1a8b8c(0x497)](this[_0x1a8b8c(0x571)], this[_0x1a8b8c(0x43a)]);
                break;
            case _0x71dec4[_0x1a8b8c(0x570)]['Matrix4x4']:
                _0x109be4[_0x1a8b8c(0x4a0)](this[_0x1a8b8c(0x571)], this[_0x1a8b8c(0x43a)]);
                break;
            case _0x71dec4['ShaderDataType'][_0x1a8b8c(0x56e)]:
                _0x109be4[_0x1a8b8c(0x573)](this[_0x1a8b8c(0x571)], this['_value']);
                break;
            case _0x71dec4[_0x1a8b8c(0x570)][_0x1a8b8c(0x56f)]:
                _0x109be4[_0x1a8b8c(0x4a2)](this[_0x1a8b8c(0x571)], this['_value']);
                break;
            case _0x71dec4['ShaderDataType']['Vector4']:
                _0x109be4[_0x1a8b8c(0x49d)](this[_0x1a8b8c(0x571)], this[_0x1a8b8c(0x43a)]);
                break;
            case _0x71dec4['ShaderDataType']['Vector2']:
                _0x109be4[_0x1a8b8c(0x49a)](this['_nameID'], this[_0x1a8b8c(0x43a)]);
                break;
            case _0x71dec4[_0x1a8b8c(0x570)][_0x1a8b8c(0x45d)]:
                _0x109be4[_0x1a8b8c(0x4b1)](this[_0x1a8b8c(0x571)], this[_0x1a8b8c(0x43a)]);
                break;
            case _0x71dec4[_0x1a8b8c(0x570)][_0x1a8b8c(0x43e)]:
                _0x109be4[_0x1a8b8c(0x574)](this['_nameID'], this['_value']);
                break;
            default:
                throw _0x1a8b8c(0x575);
            }
        }
        ['recover']() {
            var _0x33f01b = _0x5659be;
            _0x2e2aea[_0x33f01b(0x3ea)][_0x33f01b(0x298)](this), this['_nameID'] = 0x0, this[_0x33f01b(0x43a)] = null, this[_0x33f01b(0x572)] = -0x1;
        }
    }
    _0x2e2aea[_0x5659be(0x3ea)] = [];
    class _0xc9db6a {
    }
    class _0x13bc8a {
        static ['__init__']() {
            var _0x39b86d = _0x5659be;
            _0x13bc8a['instanceWorldMatrixDeclaration'] = new _0x330160(0x40, [
                new _0x1f18c6(0x0, _0x48a921[_0x39b86d(0x45f)], _0x13bc8a[_0x39b86d(0x602)]),
                new _0x1f18c6(0x10, _0x48a921[_0x39b86d(0x45f)], _0x13bc8a[_0x39b86d(0x603)]),
                new _0x1f18c6(0x20, _0x48a921[_0x39b86d(0x45f)], _0x13bc8a[_0x39b86d(0x604)]),
                new _0x1f18c6(0x30, _0x48a921[_0x39b86d(0x45f)], _0x13bc8a['MESH_WORLDMATRIX_ROW3'])
            ]), _0x13bc8a['instanceSimpleAnimatorDeclaration'] = new _0x330160(0x10, [new _0x1f18c6(0x0, _0x48a921['Vector4'], _0x13bc8a[_0x39b86d(0x605)])]);
        }
        static [_0x5659be(0x606)](_0x5b1f20, _0x3c609b = !![]) {
            var _0x268f30 = _0x5659be, _0x68a59d = _0x13bc8a[_0x268f30(0x607)][_0x5b1f20 + (_0x3c609b ? '_0' : '_1')];
            if (!_0x68a59d) {
                var _0xe469ea = _0x5b1f20[_0x268f30(0x608)](','), _0xdaa8cd = 0x0, _0x439427 = [];
                for (var _0x1adfa6 = 0x0, _0x10a415 = _0xe469ea[_0x268f30(0x1ff)]; _0x1adfa6 < _0x10a415; _0x1adfa6++) {
                    var _0x2ed9bb;
                    switch (_0xe469ea[_0x1adfa6]) {
                    case 'POSITION':
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x45d)], _0x13bc8a[_0x268f30(0x609)]), _0xdaa8cd += 0xc;
                        break;
                    case _0x268f30(0x60a):
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x45d)], _0x13bc8a[_0x268f30(0x60b)]), _0xdaa8cd += 0xc;
                        break;
                    case _0x268f30(0x428):
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x45f)], _0x13bc8a[_0x268f30(0x60c)]), _0xdaa8cd += 0x10;
                        break;
                    case 'UV':
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x45b)], _0x13bc8a[_0x268f30(0x60d)]), _0xdaa8cd += 0x8;
                        break;
                    case _0x268f30(0x60e):
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x45b)], _0x13bc8a[_0x268f30(0x60f)]), _0xdaa8cd += 0x8;
                        break;
                    case 'BLENDWEIGHT':
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921['Vector4'], _0x13bc8a['MESH_BLENDWEIGHT0']), _0xdaa8cd += 0x10;
                        break;
                    case _0x268f30(0x610):
                        _0x3c609b ? (_0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921['Vector4'], _0x13bc8a[_0x268f30(0x611)]), _0xdaa8cd += 0x10) : (_0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x612)], _0x13bc8a[_0x268f30(0x611)]), _0xdaa8cd += 0x4);
                        break;
                    case 'TANGENT':
                        _0x2ed9bb = new _0x1f18c6(_0xdaa8cd, _0x48a921[_0x268f30(0x45f)], _0x13bc8a['MESH_TANGENT0']), _0xdaa8cd += 0x10;
                        break;
                    default:
                        throw _0x268f30(0x613);
                    }
                    _0x439427[_0x268f30(0x298)](_0x2ed9bb);
                }
                _0x68a59d = new _0x330160(_0xdaa8cd, _0x439427), _0x13bc8a['_vertexDeclarationMap'][_0x5b1f20 + (_0x3c609b ? '_0' : '_1')] = _0x68a59d;
            }
            return _0x68a59d;
        }
    }
    _0x13bc8a[_0x5659be(0x609)] = 0x0, _0x13bc8a['MESH_COLOR0'] = 0x1, _0x13bc8a[_0x5659be(0x60d)] = 0x2, _0x13bc8a[_0x5659be(0x60b)] = 0x3, _0x13bc8a[_0x5659be(0x614)] = 0x4, _0x13bc8a['MESH_BLENDINDICES0'] = 0x5, _0x13bc8a[_0x5659be(0x615)] = 0x6, _0x13bc8a[_0x5659be(0x60f)] = 0x7, _0x13bc8a['MESH_WORLDMATRIX_ROW0'] = 0x8, _0x13bc8a[_0x5659be(0x603)] = 0x9, _0x13bc8a['MESH_WORLDMATRIX_ROW2'] = 0xa, _0x13bc8a['MESH_WORLDMATRIX_ROW3'] = 0xb, _0x13bc8a[_0x5659be(0x605)] = 0xc, _0x13bc8a[_0x5659be(0x616)] = 0xc, _0x13bc8a[_0x5659be(0x617)] = 0xd, _0x13bc8a['MESH_CUSTOME2'] = 0xe, _0x13bc8a[_0x5659be(0x618)] = 0xf, _0x13bc8a[_0x5659be(0x607)] = {};
    class _0x160188 extends _0x428cb6 {
        constructor() {
            var _0x4079e0 = _0x5659be;
            super(), this['_renderShaderValue'] = new _0x552b02(null);
            let _0x3e641d = _0x218b83[_0x4079e0(0x2f3)][_0x4079e0(0x2f4)];
            this[_0x4079e0(0x619)] = new Float32Array(_0x160188['maxInstanceCount'] * 0x10), this[_0x4079e0(0x61a)] = new _0x57a6a2(this['_instanceWorldMatrixData'][_0x4079e0(0x1ff)] * 0x4, _0x3e641d['DYNAMIC_DRAW']), this[_0x4079e0(0x61a)][_0x4079e0(0x449)] = _0x13bc8a[_0x4079e0(0x61b)];
        }
        static [_0x5659be(0x31e)](_0x12793b, _0x677739, _0x329d99, _0x1068ae, _0x25e3df, _0x304904, _0xe55d0f, _0x423865) {
            var _0xd9e8f7 = _0x5659be, _0x3fd184;
            if (_0x329d99 && _0x329d99[_0xd9e8f7(0x1ff)] > 0x400 || _0xe55d0f > _0x160188[_0xd9e8f7(0x61c)])
                throw _0xd9e8f7(0x61d);
            return _0x3fd184 = _0x160188['_pool'][_0xd9e8f7(0x1ff)] > 0x0 ? _0x160188[_0xd9e8f7(0x3ea)][_0xd9e8f7(0x55e)]() : new _0x160188(), _0x3fd184[_0xd9e8f7(0x5d7)] = _0x12793b, _0x3fd184['_matrixs'] = _0x329d99, _0x3fd184['_material'] = _0x1068ae, _0x3fd184['_subMeshIndex'] = _0x677739, _0x3fd184[_0xd9e8f7(0x508)] = _0x25e3df, _0x3fd184[_0xd9e8f7(0x548)] = _0x423865, _0x3fd184['_instanceProperty'] = _0x304904, _0x3fd184[_0xd9e8f7(0x61e)] = _0xe55d0f, _0x329d99 || _0x3fd184[_0xd9e8f7(0x61f)](), _0x3fd184[_0xd9e8f7(0x620)](), _0x3fd184;
        }
        [_0x5659be(0x620)]() {
            var _0x31eae3 = _0x5659be;
            let _0x1a92bb = this[_0x31eae3(0x621)] = new _0x174c4a();
            _0x1a92bb[_0x31eae3(0x444)](), _0x1a92bb['applyVertexBuffer'](this[_0x31eae3(0x5d7)][_0x31eae3(0x4f9)]), _0x1a92bb[_0x31eae3(0x4f1)](this['_instanceWorldMatrixBuffer']);
            let _0x379bdb = this[_0x31eae3(0x622)][_0x31eae3(0x623)];
            for (let _0x39e8a9 in _0x379bdb) {
                _0x1a92bb['applyInstanceVertexBuffer'](_0x379bdb[_0x39e8a9][_0x31eae3(0x4f9)]);
            }
            _0x1a92bb[_0x31eae3(0x4f3)](this[_0x31eae3(0x5d7)][_0x31eae3(0x624)]), _0x1a92bb['unBind']();
        }
        ['_updateWorldMatrixBuffer']() {
            var _0x26cc7a = _0x5659be;
            let _0x510645 = this[_0x26cc7a(0x619)], _0x5dad0a = this[_0x26cc7a(0x61e)];
            for (let _0x40a604 = 0x0; _0x40a604 < _0x5dad0a; _0x40a604++) {
                _0x510645['set'](this[_0x26cc7a(0x625)][_0x40a604][_0x26cc7a(0x1f6)], _0x40a604 * 0x10);
            }
            let _0x351767 = this[_0x26cc7a(0x61a)];
            _0x351767[_0x26cc7a(0x626)](), _0x351767[_0x26cc7a(0x4fd)](_0x510645[_0x26cc7a(0x448)], 0x0, 0x0, _0x5dad0a * 0x40);
        }
        [_0x5659be(0x5e6)](_0x415d4b) {
            var _0x10cda7 = _0x5659be;
            let _0x462098 = _0x218b83[_0x10cda7(0x2f3)]['instance'];
            var _0x5c93f9 = this[_0x10cda7(0x61e)], _0x41b845 = _0x415d4b[_0x10cda7(0x627)];
            this[_0x10cda7(0x621)][_0x10cda7(0x444)](), _0x218b83[_0x10cda7(0x2f3)][_0x10cda7(0x3ed)][_0x10cda7(0x628)](_0x462098[_0x10cda7(0x507)], _0x41b845, _0x462098['UNSIGNED_SHORT'], _0x415d4b[_0x10cda7(0x629)] * 0x2, _0x5c93f9), _0x218b83[_0x10cda7(0x500)]['renderBatches']++, _0x218b83['Stat'][_0x10cda7(0x62a)] += _0x41b845 * _0x5c93f9 / 0x3;
        }
        [_0x5659be(0x54b)]() {
            var _0x36228a = _0x5659be;
            let _0x2c35a7 = this[_0x36228a(0x5d9)][_0x36228a(0x50a)][_0x36228a(0x50e)](this[_0x36228a(0x508)]);
            this[_0x36228a(0x62b)](this[_0x36228a(0x548)][_0x36228a(0x54d)]);
            let _0x3b9c85 = this['_context'], _0x4be424 = _0x3b9c85[_0x36228a(0x3d7)], _0x153f3e = _0x3b9c85[_0x36228a(0x5da)], _0x1052ce = _0x3b9c85['cameraShaderValue'], _0x691248 = _0x3b9c85[_0x36228a(0x5df)];
            this[_0x36228a(0x5d6)][_0x36228a(0x62c)](_0xc9db6a[_0x36228a(0x62d)]);
            let _0x26a9e1 = _0x2c35a7[_0x36228a(0x50f)];
            for (let _0x4c2b8f = 0x0, _0x4a76ce = _0x26a9e1['length']; _0x4c2b8f < _0x4a76ce; _0x4c2b8f++) {
                let _0x25b7c7 = _0x26a9e1[_0x4c2b8f];
                if (_0x25b7c7['_pipelineMode'] !== _0x691248)
                    continue;
                let _0x151b99 = _0x160188[_0x36228a(0x565)];
                _0x153f3e[_0x36228a(0x4e0)][_0x36228a(0x490)]['cloneTo'](_0x151b99), _0x151b99[_0x36228a(0x43b)](this[_0x36228a(0x5d6)][_0x36228a(0x490)]), _0x151b99[_0x36228a(0x43b)](this[_0x36228a(0x5d9)]['_shaderValues'][_0x36228a(0x490)]);
                let _0x1ee22e = _0x3b9c85['shader'] = _0x25b7c7['withCompile'](_0x151b99);
                _0x1ee22e[_0x36228a(0x444)](), _0x1ee22e['uploadUniforms'](_0x1ee22e[_0x36228a(0x5e1)], _0x153f3e[_0x36228a(0x4e0)], !![]), _0x1ee22e[_0x36228a(0x566)](_0x1ee22e[_0x36228a(0x5e2)], this[_0x36228a(0x5d6)], !![]), _0x1ee22e[_0x36228a(0x566)](_0x1ee22e[_0x36228a(0x5e3)], _0x1052ce, !![]);
                let _0xf2f91a = this['_material'][_0x36228a(0x4e0)];
                _0x1ee22e[_0x36228a(0x566)](_0x1ee22e[_0x36228a(0x567)], _0xf2f91a, !![]), _0x1ee22e[_0x36228a(0x5e4)](_0xf2f91a), _0x1ee22e[_0x36228a(0x62e)](_0xf2f91a, _0x4be424, ![]);
            }
            let _0xa4f9ed = this[_0x36228a(0x622)][_0x36228a(0x623)];
            for (let _0x1a5b95 in _0xa4f9ed) {
                _0xa4f9ed[_0x1a5b95][_0x36228a(0x62f)](this['_drawnums']);
            }
            let _0xbf8d18 = this['_mesh'][_0x36228a(0x5e5)], _0x4b1544;
            if (this['_subMeshIndex'] == -0x1)
                for (let _0x57b292 = 0x0, _0x5934ef = _0xbf8d18[_0x36228a(0x1ff)]; _0x57b292 < _0x5934ef; _0x57b292++) {
                    _0x4b1544 = _0xbf8d18[_0x57b292], _0x4b1544[_0x36228a(0x5e8)](_0x3b9c85) && this[_0x36228a(0x5e6)](_0x4b1544);
                }
            else {
                let _0x5c05c5 = this[_0x36228a(0x5d7)][_0x36228a(0x5e5)];
                _0x4b1544 = _0x5c05c5[this['_subMeshIndex']], _0x4b1544[_0x36228a(0x5e8)](_0x3b9c85) && this[_0x36228a(0x5e6)](_0x4b1544);
            }
        }
        [_0x5659be(0x630)](_0x2de09f) {
            var _0x10f708 = _0x5659be;
            if (_0x2de09f[_0x10f708(0x1ff)] < this[_0x10f708(0x61e)])
                throw 'worldMatrixArray\x20length\x20is\x20less\x20then\x20drawnums';
            this[_0x10f708(0x625)] = _0x2de09f, this[_0x10f708(0x625)] && this[_0x10f708(0x61f)]();
        }
        ['setDrawNums'](_0x14b1eb) {
            var _0x1ccc2f = _0x5659be;
            if (this[_0x1ccc2f(0x625)] && this[_0x1ccc2f(0x625)][_0x1ccc2f(0x1ff)] < _0x14b1eb)
                throw 'worldMatrixArray\x20length\x20is\x20less\x20then\x20drawnums';
            this[_0x1ccc2f(0x61e)] = _0x14b1eb, this['_matrixs'] && this[_0x1ccc2f(0x61f)]();
        }
        ['recover']() {
            var _0x1a0ab2 = _0x5659be;
            _0x160188[_0x1a0ab2(0x3ea)]['push'](this), this[_0x1a0ab2(0x5d6)][_0x1a0ab2(0x495)](), this[_0x1a0ab2(0x5d6)][_0x1a0ab2(0x492)](), this[_0x1a0ab2(0x621)][_0x1a0ab2(0x311)](), this['_instanceBufferState'] = null;
        }
    }
    _0x160188['_pool'] = [], _0x160188[_0x5659be(0x565)] = new _0x23f873(), _0x160188[_0x5659be(0x61c)] = 0x400;
    class _0x1a9c23 {
        constructor() {
            var _0x5d42b5 = _0x5659be;
            this['_camera'] = null, this[_0x5d42b5(0x631)] = [];
        }
        [_0x5659be(0x632)]() {
            var _0x34a397 = _0x5659be;
            for (var _0x609c0a = 0x0, _0xd7ceac = this[_0x34a397(0x631)][_0x34a397(0x1ff)]; _0x609c0a < _0xd7ceac; _0x609c0a++)
                this['_commands'][_0x609c0a][_0x34a397(0x54b)]();
        }
        ['setShaderDataTexture'](_0x1efb99, _0x100f4b, _0x24288b) {
            var _0x2bd7e4 = _0x5659be;
            this['_commands']['push'](_0x487843['create'](_0x1efb99, _0x100f4b, _0x24288b, _0x71dec4['ShaderDataType'][_0x2bd7e4(0x56f)], this));
        }
        [_0x5659be(0x633)](_0x88f765, _0x3250ab) {
            var _0x4502d3 = _0x5659be;
            this[_0x4502d3(0x631)][_0x4502d3(0x298)](_0x2e2aea[_0x4502d3(0x31e)](_0x88f765, _0x3250ab, _0x71dec4[_0x4502d3(0x570)][_0x4502d3(0x56f)], this));
        }
        [_0x5659be(0x634)](_0x352f1f, _0x11d724, _0x23e1c2) {
            var _0x1a56d9 = _0x5659be;
            this[_0x1a56d9(0x631)][_0x1a56d9(0x298)](_0x487843[_0x1a56d9(0x31e)](_0x352f1f, _0x11d724, _0x23e1c2, _0x71dec4[_0x1a56d9(0x570)][_0x1a56d9(0x45f)], this));
        }
        [_0x5659be(0x635)](_0x21ae52, _0x1a0116) {
            var _0x17e4ec = _0x5659be;
            this[_0x17e4ec(0x631)][_0x17e4ec(0x298)](_0x2e2aea[_0x17e4ec(0x31e)](_0x21ae52, _0x1a0116, _0x71dec4[_0x17e4ec(0x570)][_0x17e4ec(0x45f)], this));
        }
        [_0x5659be(0x636)](_0x1777f4, _0x2c561a, _0x45a40b) {
            var _0x30c593 = _0x5659be;
            this[_0x30c593(0x631)][_0x30c593(0x298)](_0x487843[_0x30c593(0x31e)](_0x1777f4, _0x2c561a, _0x45a40b, _0x71dec4[_0x30c593(0x570)][_0x30c593(0x45d)], this));
        }
        [_0x5659be(0x637)](_0x9c6e05, _0x4cda38) {
            var _0x27ae9f = _0x5659be;
            this[_0x27ae9f(0x631)][_0x27ae9f(0x298)](_0x2e2aea['create'](_0x9c6e05, _0x4cda38, _0x71dec4[_0x27ae9f(0x570)][_0x27ae9f(0x45d)], this));
        }
        [_0x5659be(0x638)](_0x30629f, _0x26a748, _0x34ea38) {
            var _0x2c0758 = _0x5659be;
            this[_0x2c0758(0x631)][_0x2c0758(0x298)](_0x487843[_0x2c0758(0x31e)](_0x30629f, _0x26a748, _0x34ea38, _0x71dec4[_0x2c0758(0x570)][_0x2c0758(0x45b)], this));
        }
        [_0x5659be(0x639)](_0x40b601, _0x435e92) {
            var _0x532ab9 = _0x5659be;
            this[_0x532ab9(0x631)][_0x532ab9(0x298)](_0x2e2aea[_0x532ab9(0x31e)](_0x40b601, _0x435e92, _0x71dec4['ShaderDataType'][_0x532ab9(0x45b)], this));
        }
        [_0x5659be(0x63a)](_0x4dd714, _0x4e9cf8, _0x2d0a6f) {
            var _0x2bfbb9 = _0x5659be;
            this[_0x2bfbb9(0x631)]['push'](_0x487843[_0x2bfbb9(0x31e)](_0x4dd714, _0x4e9cf8, _0x2d0a6f, _0x71dec4[_0x2bfbb9(0x570)]['Number'], this));
        }
        ['setGlobalNumber'](_0x228cab, _0x2261ab) {
            var _0x5cae9f = _0x5659be;
            this[_0x5cae9f(0x631)]['push'](_0x2e2aea['create'](_0x228cab, _0x2261ab, _0x71dec4[_0x5cae9f(0x570)][_0x5cae9f(0x56d)], this));
        }
        [_0x5659be(0x63b)](_0x363c7f, _0x5a49b0, _0x4034ce) {
            var _0x55d056 = _0x5659be;
            this['_commands']['push'](_0x487843[_0x55d056(0x31e)](_0x363c7f, _0x5a49b0, _0x4034ce, _0x71dec4[_0x55d056(0x570)][_0x55d056(0x56b)], this));
        }
        ['setGlobalInt'](_0x36a1ef, _0x3afe7b) {
            var _0x335487 = _0x5659be;
            this['_commands'][_0x335487(0x298)](_0x2e2aea['create'](_0x36a1ef, _0x3afe7b, _0x71dec4[_0x335487(0x570)][_0x335487(0x56b)], this));
        }
        [_0x5659be(0x63c)](_0x4e685b, _0x45e160, _0x44fa60) {
            var _0x33487e = _0x5659be;
            this['_commands'][_0x33487e(0x298)](_0x487843[_0x33487e(0x31e)](_0x4e685b, _0x45e160, _0x44fa60, _0x71dec4[_0x33487e(0x570)][_0x33487e(0x222)], this));
        }
        [_0x5659be(0x63d)](_0x1cd6b2, _0x58f45c) {
            var _0x2872e0 = _0x5659be;
            this[_0x2872e0(0x631)][_0x2872e0(0x298)](_0x2e2aea[_0x2872e0(0x31e)](_0x1cd6b2, _0x58f45c, _0x71dec4[_0x2872e0(0x570)]['Matrix4x4'], this));
        }
        [_0x5659be(0x63e)](_0x54feb2, _0x11a663, _0x4e19ab = null, _0x2953d3 = null, _0x138b8e = null, _0x574b3c = 0x0, _0x206bfd = ![]) {
            var _0x2ee98e = _0x5659be;
            this[_0x2ee98e(0x631)][_0x2ee98e(0x298)](_0x140fd9[_0x2ee98e(0x31e)](_0x54feb2, _0x11a663, _0x4e19ab, _0x2953d3, _0x138b8e, _0x574b3c, _0x140fd9['_SCREENTYPE_QUAD'], this, _0x206bfd));
        }
        ['blitScreenQuadByMaterial'](_0x472d9a, _0x5f1395, _0x34a99f = null, _0x482071 = null, _0x1e5d48 = 0x0) {
            var _0x27a69b = _0x5659be, _0x4cadfa, _0x8cfdee;
            _0x482071 && (_0x4cadfa = _0x482071['_shader'], _0x8cfdee = _0x482071[_0x27a69b(0x63f)]), this[_0x27a69b(0x631)][_0x27a69b(0x298)](_0x140fd9[_0x27a69b(0x31e)](_0x472d9a, _0x5f1395, _0x34a99f, _0x4cadfa, _0x8cfdee, _0x1e5d48, _0x140fd9[_0x27a69b(0x55d)], this));
        }
        [_0x5659be(0x640)](_0x250ab7, _0x960a48, _0x135d34 = null, _0x359187 = null, _0x242d50 = null, _0xeb3fcf = 0x0, _0x393967 = ![]) {
            var _0x3687a0 = _0x5659be;
            this['_commands'][_0x3687a0(0x298)](_0x140fd9[_0x3687a0(0x31e)](_0x250ab7, _0x960a48, _0x135d34, _0x359187, _0x242d50, _0xeb3fcf, _0x140fd9['_SCREENTYPE_TRIANGLE'], this, _0x393967));
        }
        [_0x5659be(0x641)](_0x428a48) {
            var _0x5f3318 = _0x5659be;
            this[_0x5f3318(0x631)][_0x5f3318(0x298)](_0x136c24[_0x5f3318(0x31e)](_0x428a48));
        }
        [_0x5659be(0x642)](_0xffc705, _0x36f082, _0x31c511, _0x2be89f = 0x1) {
            var _0x5759f9 = _0x5659be;
            this[_0x5759f9(0x631)][_0x5759f9(0x298)](_0x34f68f[_0x5759f9(0x31e)](_0xffc705, _0x36f082, _0x31c511, _0x2be89f, this));
        }
        ['drawMesh'](_0x108859, _0x3837ea, _0x29ca13, _0x21d389, _0x33fe0b) {
            var _0x324328 = _0x5659be;
            this[_0x324328(0x631)][_0x324328(0x298)](_0x2a98bb['create'](_0x108859, _0x3837ea, _0x29ca13, _0x21d389, _0x33fe0b, this));
        }
        [_0x5659be(0x643)](_0x1bc000, _0x38a034, _0x483d2a) {
            var _0x23f2ff = _0x5659be;
            this[_0x23f2ff(0x631)][_0x23f2ff(0x298)](_0x40fc49[_0x23f2ff(0x31e)](_0x1bc000, _0x38a034, _0x483d2a, this));
        }
        ['drawMeshInstance'](_0xda46f5, _0x1f8ebf, _0x30555f, _0x198b72, _0x14d429, _0x45f11f, _0x2400b4) {
            var _0x227efe = _0x5659be;
            if (!_0x218b83[_0x227efe(0x2f3)]['layaGPUInstance'][_0x227efe(0x644)]())
                return null;
            var _0x40780a = _0x160188['create'](_0xda46f5, _0x1f8ebf, _0x30555f, _0x198b72, _0x14d429, _0x45f11f, _0x2400b4, this);
            return this[_0x227efe(0x631)][_0x227efe(0x298)](_0x40780a), _0x40780a;
        }
        ['clear']() {
            var _0x2668c6 = _0x5659be;
            for (var _0x5d3918 = 0x0, _0x11f215 = this[_0x2668c6(0x631)][_0x2668c6(0x1ff)]; _0x5d3918 < _0x11f215; _0x5d3918++)
                this[_0x2668c6(0x631)][_0x5d3918][_0x2668c6(0x54c)]();
            this[_0x2668c6(0x631)][_0x2668c6(0x1ff)] = 0x0;
        }
    }
    class _0x4a4aed {
        constructor() {
            var _0x1af628 = _0x5659be;
            this[_0x1af628(0x30f)] = null, this['destination'] = null, this[_0x1af628(0x645)] = null, this[_0x1af628(0x646)] = null, this['command'] = null, this[_0x1af628(0x647)] = [];
        }
    }
    class _0x2987ba {
        constructor() {
            var _0x2a19df = _0x5659be;
            this['_compositeShader'] = _0x84b6d6[_0x2a19df(0x52c)]('PostProcessComposite'), this['_compositeShaderData'] = new _0x552b02(), this[_0x2a19df(0x648)] = [], this['_enable'] = !![], this[_0x2a19df(0x54d)] = null, this[_0x2a19df(0x54d)] = new _0x4a4aed(), this[_0x2a19df(0x54d)][_0x2a19df(0x646)] = this[_0x2a19df(0x649)], this['_context'][_0x2a19df(0x64a)] = new _0x1a9c23();
        }
        static [_0x5659be(0x229)]() {
            var _0xc52723 = _0x5659be;
            _0x2987ba[_0xc52723(0x64b)] = _0x84b6d6[_0xc52723(0x510)](_0xc52723(0x64c)), _0x2987ba['SHADERDEFINE_BLOOM'] = _0x84b6d6['getDefineByName'](_0xc52723(0x64d)), _0x2987ba[_0xc52723(0x64e)] = _0x84b6d6['getDefineByName'](_0xc52723(0x64f));
        }
        get [_0x5659be(0x650)]() {
            return this['_enable'];
        }
        set [_0x5659be(0x650)](_0x4d6bb7) {
            var _0x1f6dda = _0x5659be;
            this[_0x1f6dda(0x651)] = _0x4d6bb7;
        }
        [_0x5659be(0x652)](_0xe0aac3) {
            var _0x4dd570 = _0x5659be;
            this[_0x4dd570(0x54d)][_0x4dd570(0x645)] = _0xe0aac3, this[_0x4dd570(0x54d)][_0x4dd570(0x64a)][_0x4dd570(0x560)] = _0xe0aac3;
        }
        [_0x5659be(0x5e6)]() {
            var _0x3d885a = _0x5659be, _0x2533d6 = _0x552b02[_0x3d885a(0x4d4)];
            _0x218b83[_0x3d885a(0x31d)][_0x3d885a(0x308)][_0x3d885a(0x653)] && _0x552b02[_0x3d885a(0x4d9)](![]);
            var _0x2c1355 = this['_context'][_0x3d885a(0x645)], _0x188a90 = _0x2c1355[_0x3d885a(0x561)], _0x2c9568 = _0x2c1355['_internalRenderTexture'], _0x17f88e = _0x2c9568;
            this[_0x3d885a(0x54d)][_0x3d885a(0x64a)][_0x3d885a(0x496)](), this['_context'][_0x3d885a(0x30f)] = _0x17f88e, this['_context'][_0x3d885a(0x654)] = _0x2c9568, this[_0x3d885a(0x54d)][_0x3d885a(0x646)]['clearDefine'](), this[_0x3d885a(0x54d)][_0x3d885a(0x646)][_0x3d885a(0x4a2)](_0x2987ba[_0x3d885a(0x655)], _0x218b83[_0x3d885a(0x2cd)][_0x3d885a(0x656)]);
            for (var _0x58721a = 0x0, _0x5c118a = this[_0x3d885a(0x648)][_0x3d885a(0x1ff)]; _0x58721a < _0x5c118a; _0x58721a++)
                this[_0x3d885a(0x648)][_0x58721a][_0x3d885a(0x506)](this[_0x3d885a(0x54d)]);
            this[_0x3d885a(0x649)]['addDefine'](_0x2987ba[_0x3d885a(0x64e)]);
            var _0x31e36b = _0x2c1355['_offScreenRenderTexture'], _0x57bad9 = _0x31e36b ? _0x31e36b : null;
            this[_0x3d885a(0x54d)][_0x3d885a(0x654)] = _0x57bad9;
            var _0x239bdf = _0x2c1355[_0x3d885a(0x657)](), _0x12684e = _0x2c1355[_0x3d885a(0x658)]();
            _0x2c1355[_0x3d885a(0x659)][_0x3d885a(0x1fa)](_0x188a90['x'] / _0x239bdf, _0x188a90['y'] / _0x12684e, _0x188a90[_0x3d885a(0x300)] / _0x239bdf, _0x188a90[_0x3d885a(0x301)] / _0x12684e), this[_0x3d885a(0x54d)][_0x3d885a(0x64a)][_0x3d885a(0x640)](this[_0x3d885a(0x54d)]['source'], _0x57bad9, _0x2c1355['_screenOffsetScale'], this['_compositeShader'], this[_0x3d885a(0x649)], 0x0, !![]), _0x164148[_0x3d885a(0x65a)](_0x17f88e);
            var _0x453cc7 = this[_0x3d885a(0x54d)][_0x3d885a(0x647)];
            for (_0x58721a = 0x0, _0x5c118a = _0x453cc7[_0x3d885a(0x1ff)]; _0x58721a < _0x5c118a; _0x58721a++)
                _0x164148['recoverToPool'](_0x453cc7[_0x58721a]);
            _0x453cc7['length'] = 0x0, _0x218b83[_0x3d885a(0x31d)][_0x3d885a(0x308)][_0x3d885a(0x653)] && _0x552b02[_0x3d885a(0x4d9)](_0x2533d6);
        }
        [_0x5659be(0x65b)](_0x3c7535) {
            var _0x15cb7b = _0x5659be;
            this[_0x15cb7b(0x648)][_0x15cb7b(0x298)](_0x3c7535);
        }
        [_0x5659be(0x65c)](_0x12715a) {
            var _0x11cbb1 = _0x5659be, _0x5558d9 = this[_0x11cbb1(0x648)][_0x11cbb1(0x384)](_0x12715a);
            if (_0x5558d9 !== -0x1)
                this[_0x11cbb1(0x648)][_0x11cbb1(0x32c)](_0x5558d9, 0x1);
        }
        ['_applyPostProcessCommandBuffers']() {
            var _0x244054 = _0x5659be;
            this[_0x244054(0x54d)][_0x244054(0x64a)]['_apply']();
        }
    }
    _0x2987ba[_0x5659be(0x65d)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x65e)), _0x2987ba[_0x5659be(0x65f)] = _0x84b6d6[_0x5659be(0x526)]('u_BloomTex'), _0x2987ba[_0x5659be(0x655)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x660)), _0x2987ba[_0x5659be(0x661)] = _0x84b6d6['propertyNameToID']('u_Bloom_DirtTex'), _0x2987ba['SHADERVALUE_BLOOMTEX_TEXELSIZE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x662)), _0x2987ba['SHADERVALUE_BLOOM_DIRTTILEOFFSET'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x663)), _0x2987ba[_0x5659be(0x664)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x665)), _0x2987ba[_0x5659be(0x666)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x667));
    class _0x3393ed extends _0x218b83[_0x5659be(0x668)] {
        constructor(_0x27a8fb) {
            var _0xcfce33 = _0x5659be;
            super(), this[_0xcfce33(0x3d3)] = _0x27a8fb, this['_children'] = [], this[_0xcfce33(0x577)] = new Float32Array(0x10), this[_0xcfce33(0x588)] = new _0x3f70c5(), this['_localRotation'] = new _0x22f58f(), this[_0xcfce33(0x593)] = new _0x3f70c5(), this[_0xcfce33(0x5a2)] = new Float32Array(0x10), this[_0xcfce33(0x669)] = ![], this[_0xcfce33(0x66a)] = ![], this[_0xcfce33(0x66b)] = ![], this['_worldUpdate'] = !![];
        }
        ['_getlocalMatrix']() {
            var _0x5db46b = _0x5659be;
            return this[_0x5db46b(0x66b)] && (_0x108d81[_0x5db46b(0x66c)](this[_0x5db46b(0x588)], this[_0x5db46b(0x576)], this[_0x5db46b(0x593)], this[_0x5db46b(0x577)]), this[_0x5db46b(0x66b)] = ![]), this['_localMatrix'];
        }
        [_0x5659be(0x59d)]() {
            var _0xda62b3 = _0x5659be;
            if (!this['_worldUpdate']) {
                this['_worldUpdate'] = !![], this[_0xda62b3(0x5aa)](_0x218b83['Event'][_0xda62b3(0x5a7)]);
                for (var _0x454395 = 0x0, _0x2f1578 = this[_0xda62b3(0x57c)][_0xda62b3(0x1ff)]; _0x454395 < _0x2f1578; _0x454395++)
                    this[_0xda62b3(0x57c)][_0x454395][_0xda62b3(0x59d)]();
            }
        }
        get [_0x5659be(0x395)]() {
            var _0x173375 = _0x5659be;
            return this[_0x173375(0x588)];
        }
        set ['localPosition'](_0x2fedd2) {
            var _0x1373ee = _0x5659be;
            this['_localPosition'] = _0x2fedd2, this[_0x1373ee(0x66b)] = !![], this[_0x1373ee(0x59d)]();
        }
        get ['localRotation']() {
            var _0x4a117 = _0x5659be;
            if (this['_localQuaternionUpdate']) {
                var _0x33e72b = this[_0x4a117(0x598)];
                _0x22f58f[_0x4a117(0x471)](_0x33e72b['y'] / _0x3393ed[_0x4a117(0x590)], _0x33e72b['x'] / _0x3393ed[_0x4a117(0x590)], _0x33e72b['z'] / _0x3393ed[_0x4a117(0x590)], this[_0x4a117(0x576)]), this['_localQuaternionUpdate'] = ![];
            }
            return this[_0x4a117(0x576)];
        }
        set ['localRotation'](_0x7a5341) {
            var _0x1f9a63 = _0x5659be;
            this[_0x1f9a63(0x576)] = _0x7a5341, this['_locaEulerlUpdate'] = !![], this[_0x1f9a63(0x669)] = ![], this['_localUpdate'] = !![], this[_0x1f9a63(0x59d)]();
        }
        get [_0x5659be(0x398)]() {
            var _0xe65b5a = _0x5659be;
            return this[_0xe65b5a(0x593)];
        }
        set [_0x5659be(0x398)](_0x2cbb1a) {
            var _0x27e213 = _0x5659be;
            this[_0x27e213(0x593)] = _0x2cbb1a, this[_0x27e213(0x66b)] = !![], this[_0x27e213(0x59d)]();
        }
        get [_0x5659be(0x39a)]() {
            var _0x4bd9b9 = _0x5659be;
            if (this[_0x4bd9b9(0x66a)]) {
                this[_0x4bd9b9(0x576)][_0x4bd9b9(0x286)](_0x3393ed[_0x4bd9b9(0x489)]);
                var _0x43396c = _0x3393ed[_0x4bd9b9(0x489)], _0x3e4796 = this[_0x4bd9b9(0x598)];
                _0x3e4796['x'] = _0x43396c['y'] * _0x3393ed[_0x4bd9b9(0x590)], _0x3e4796['y'] = _0x43396c['x'] * _0x3393ed[_0x4bd9b9(0x590)], _0x3e4796['z'] = _0x43396c['z'] * _0x3393ed[_0x4bd9b9(0x590)], this['_locaEulerlUpdate'] = ![];
            }
            return this[_0x4bd9b9(0x598)];
        }
        set [_0x5659be(0x39a)](_0x26a56c) {
            var _0x604183 = _0x5659be;
            this[_0x604183(0x598)] = _0x26a56c, this['_locaEulerlUpdate'] = ![], this[_0x604183(0x669)] = !![], this[_0x604183(0x66b)] = !![], this[_0x604183(0x59d)]();
        }
        [_0x5659be(0x3cf)]() {
            var _0x17731c = _0x5659be;
            if (this[_0x17731c(0x66d)]) {
                if (this[_0x17731c(0x2fd)] != null)
                    _0x108d81['matrix4x4MultiplyFFF'](this[_0x17731c(0x2fd)]['getWorldMatrix'](), this[_0x17731c(0x66e)](), this['_worldMatrix']);
                else {
                    var _0x516e36 = this['_worldMatrix'];
                    _0x516e36[0x1] = _0x516e36[0x2] = _0x516e36[0x3] = _0x516e36[0x4] = _0x516e36[0x6] = _0x516e36[0x7] = _0x516e36[0x8] = _0x516e36[0x9] = _0x516e36[0xb] = _0x516e36[0xc] = _0x516e36[0xd] = _0x516e36[0xe] = 0x0, _0x516e36[0x0] = _0x516e36[0x5] = _0x516e36[0xa] = _0x516e36[0xf] = 0x1;
                }
                this[_0x17731c(0x66d)] = ![];
            }
            return this[_0x17731c(0x5a2)];
        }
        [_0x5659be(0x66f)](_0x1cf085) {
            var _0x491563 = _0x5659be;
            if (this[_0x491563(0x2fd)] !== _0x1cf085) {
                if (this[_0x491563(0x2fd)]) {
                    var _0x38ad63 = this[_0x491563(0x2fd)][_0x491563(0x57c)], _0x3996bb = _0x38ad63[_0x491563(0x384)](this);
                    _0x38ad63[_0x491563(0x32c)](_0x3996bb, 0x1);
                }
                _0x1cf085 && (_0x1cf085[_0x491563(0x57c)][_0x491563(0x298)](this), _0x1cf085 && this[_0x491563(0x59d)]()), this[_0x491563(0x2fd)] = _0x1cf085;
            }
        }
    }
    _0x3393ed['_tempVector3'] = new _0x3f70c5(), _0x3393ed[_0x5659be(0x590)] = 0xb4 / Math['PI'];
    class _0x1957af {
        constructor() {
            var _0x10da29 = _0x5659be;
            this[_0x10da29(0x2fd)] = null, this[_0x10da29(0x2a5)] = null, this['_worldMatrixIndex'] = 0x0, this[_0x10da29(0x57c)] = [], this['transform'] = new _0x3393ed(this);
        }
        ['addChild'](_0x28c3cc) {
            var _0x11c826 = _0x5659be;
            _0x28c3cc[_0x11c826(0x2fd)] = this, _0x28c3cc[_0x11c826(0x3cc)][_0x11c826(0x66f)](this[_0x11c826(0x3cc)]), this['_children'][_0x11c826(0x298)](_0x28c3cc);
        }
        [_0x5659be(0x670)](_0x2f3153) {
            var _0x762df2 = _0x5659be, _0x19e545 = this[_0x762df2(0x57c)][_0x762df2(0x384)](_0x2f3153);
            _0x19e545 !== -0x1 && this[_0x762df2(0x57c)][_0x762df2(0x32c)](_0x19e545, 0x1);
        }
        [_0x5659be(0x388)](_0x3618e1) {
            var _0x3621b5 = _0x5659be;
            for (var _0x45f4ca = 0x0, _0x2b63de = this['_children'][_0x3621b5(0x1ff)]; _0x45f4ca < _0x2b63de; _0x45f4ca++) {
                var _0x4c56e5 = this[_0x3621b5(0x57c)][_0x45f4ca];
                if (_0x4c56e5[_0x3621b5(0x2a5)] === _0x3618e1)
                    return _0x4c56e5;
            }
            return null;
        }
        [_0x5659be(0x671)](_0x1d7390) {
            var _0x5c13be = _0x5659be;
            return this[_0x5c13be(0x57c)][_0x1d7390];
        }
        [_0x5659be(0x672)]() {
            var _0x4a254b = _0x5659be;
            return this[_0x4a254b(0x57c)][_0x4a254b(0x1ff)];
        }
        [_0x5659be(0x1f0)](_0x3affb3) {
            var _0x4e1ab4 = _0x5659be, _0x4c2e80 = _0x3affb3;
            _0x4c2e80[_0x4e1ab4(0x2a5)] = this[_0x4e1ab4(0x2a5)];
            for (var _0xbd8bf3 = 0x0, _0x363381 = this['_children'][_0x4e1ab4(0x1ff)]; _0xbd8bf3 < _0x363381; _0xbd8bf3++) {
                var _0x1b4426 = this[_0x4e1ab4(0x57c)][_0xbd8bf3], _0x48b1a9 = _0x1b4426[_0x4e1ab4(0x1f4)]();
                _0x4c2e80[_0x4e1ab4(0x673)](_0x48b1a9);
                var _0x1c2125 = _0x1b4426[_0x4e1ab4(0x3cc)], _0x5c8386 = _0x48b1a9[_0x4e1ab4(0x3cc)], _0x1a15e2 = _0x5c8386[_0x4e1ab4(0x395)], _0xe78f09 = _0x5c8386[_0x4e1ab4(0x397)], _0x24b9a9 = _0x5c8386[_0x4e1ab4(0x398)];
                _0x1c2125[_0x4e1ab4(0x395)][_0x4e1ab4(0x1f0)](_0x1a15e2), _0x1c2125[_0x4e1ab4(0x397)]['cloneTo'](_0xe78f09), _0x1c2125['localScale']['cloneTo'](_0x24b9a9), _0x5c8386[_0x4e1ab4(0x395)] = _0x1a15e2, _0x5c8386[_0x4e1ab4(0x397)] = _0xe78f09, _0x5c8386['localScale'] = _0x24b9a9;
            }
        }
        ['clone']() {
            var _0x41bfef = _0x5659be, _0xed1a70 = new _0x1957af();
            return this[_0x41bfef(0x1f0)](_0xed1a70), _0xed1a70;
        }
        [_0x5659be(0x674)](_0x23e5a3, _0x58f34d, _0x1b0d96, _0x13fdd5, _0x2367e0, _0x519c80, _0xacfef0) {
            var _0x424332 = _0x5659be, _0x1a0450 = _0xacfef0['_nativeCurCloneCount'];
            _0x2367e0[_0x1a0450] = _0x519c80;
            var _0x272ce2 = new _0x1957af();
            return _0x272ce2[_0x424332(0x675)] = _0x1a0450, this[_0x424332(0x676)](_0x272ce2, _0x23e5a3, _0x58f34d, _0x1b0d96, _0x13fdd5, _0x2367e0, _0x1a0450, _0xacfef0), _0x272ce2;
        }
        [_0x5659be(0x676)](_0x21494b, _0x366078, _0x4e5d86, _0x417cfc, _0x465bf4, _0x5d3c94, _0x2a9ff5, _0x279d26) {
            var _0x4e6d00 = _0x5659be, _0x49b668 = _0x21494b;
            _0x49b668[_0x4e6d00(0x2a5)] = this[_0x4e6d00(0x2a5)];
            for (var _0x4b0854 = 0x0, _0x1e1a0f = this[_0x4e6d00(0x57c)]['length']; _0x4b0854 < _0x1e1a0f; _0x4b0854++) {
                var _0x2c8b24 = this[_0x4e6d00(0x57c)][_0x4b0854];
                _0x279d26[_0x4e6d00(0x677)]++;
                var _0x1a19ba = _0x2c8b24['_cloneNative'](_0x366078, _0x4e5d86, _0x417cfc, _0x465bf4, _0x5d3c94, _0x2a9ff5, _0x279d26);
                _0x49b668['addChild'](_0x1a19ba);
                var _0x4098ff = _0x2c8b24[_0x4e6d00(0x3cc)], _0x531f84 = _0x1a19ba[_0x4e6d00(0x3cc)], _0x3ea01b = _0x531f84['localPosition'], _0xea3dbb = _0x531f84[_0x4e6d00(0x397)], _0xe7ecc = _0x531f84['localScale'];
                _0x4098ff[_0x4e6d00(0x395)][_0x4e6d00(0x1f0)](_0x3ea01b), _0x4098ff[_0x4e6d00(0x397)][_0x4e6d00(0x1f0)](_0xea3dbb), _0x4098ff[_0x4e6d00(0x398)]['cloneTo'](_0xe7ecc), _0x531f84[_0x4e6d00(0x395)] = _0x3ea01b, _0x531f84[_0x4e6d00(0x397)] = _0xea3dbb, _0x531f84['localScale'] = _0xe7ecc;
            }
        }
    }
    class _0x8954ce extends _0x218b83[_0x5659be(0x315)] {
        constructor() {
            var _0x142320 = _0x5659be;
            super(), this[_0x142320(0x678)] = 0x0, this['_nativeCurCloneCount'] = 0x0;
        }
        static [_0x5659be(0x318)](_0x4e2f48, _0x4702fc = null, _0x39323d = null) {
            var _0x53eb9d = _0x5659be, _0x5df269 = new _0x8954ce();
            _0x5df269[_0x53eb9d(0x387)] = new _0x1957af();
            if (_0x4e2f48[_0x53eb9d(0x679)]) {
                var _0x5c7e86 = _0x4e2f48[_0x53eb9d(0x67a)];
                _0x5c7e86 && _0x5df269[_0x53eb9d(0x67b)](_0x5c7e86, _0x5df269['_rootNode']);
            }
            return _0x5df269;
        }
        static [_0x5659be(0x31c)](_0xac05e8, _0x5ec339) {
            var _0x18f2dd = _0x5659be;
            _0x218b83['ILaya'][_0x18f2dd(0x5bd)][_0x18f2dd(0x31e)](_0xac05e8, _0x5ec339, null, _0x8954ce[_0x18f2dd(0x67c)]);
        }
        [_0x5659be(0x67d)](_0x3fc19d, _0x53406c) {
            var _0x24ddcf = _0x5659be;
            _0x53406c[_0x24ddcf(0x386)][_0x3fc19d[_0x24ddcf(0x2a5)]] = _0x3fc19d;
            for (var _0x1ea314 = 0x0, _0x19fdb6 = _0x3fc19d['getChildCount'](); _0x1ea314 < _0x19fdb6; _0x1ea314++)
                this['_initCloneToAnimator'](_0x3fc19d['getChildByIndex'](_0x1ea314), _0x53406c);
        }
        [_0x5659be(0x67b)](_0x1ef638, _0x9cbbb8) {
            var _0x34fa1a = _0x5659be, _0x1150ea = _0x1ef638[_0x34fa1a(0x67e)][_0x34fa1a(0x2a5)];
            _0x9cbbb8['name'] = _0x1150ea;
            var _0x6f46a2 = _0x1ef638[_0x34fa1a(0x67e)], _0x12e73e = _0x9cbbb8['transform'], _0x1a42fc = _0x12e73e[_0x34fa1a(0x395)], _0x2b0fb4 = _0x12e73e[_0x34fa1a(0x397)], _0x42a8df = _0x12e73e['localScale'];
            _0x1a42fc[_0x34fa1a(0x1fb)](_0x6f46a2[_0x34fa1a(0x5ac)]), _0x2b0fb4[_0x34fa1a(0x1fb)](_0x6f46a2[_0x34fa1a(0x5a0)]), _0x42a8df[_0x34fa1a(0x1fb)](_0x6f46a2[_0x34fa1a(0x1ee)]), _0x12e73e[_0x34fa1a(0x395)] = _0x1a42fc, _0x12e73e[_0x34fa1a(0x397)] = _0x2b0fb4, _0x12e73e['localScale'] = _0x42a8df;
            var _0x2dd71f = _0x1ef638[_0x34fa1a(0x67f)];
            for (var _0x24bd4f = 0x0, _0x3d1813 = _0x2dd71f[_0x34fa1a(0x1ff)]; _0x24bd4f < _0x3d1813; _0x24bd4f++) {
                var _0x5c93f4 = _0x2dd71f[_0x24bd4f], _0x1c9c3d = new _0x1957af();
                _0x9cbbb8[_0x34fa1a(0x673)](_0x1c9c3d), this[_0x34fa1a(0x67b)](_0x5c93f4, _0x1c9c3d);
            }
        }
        [_0x5659be(0x3c8)](_0x8860a4) {
            var _0x579b1f = _0x5659be, _0x5cb433;
            _0x5cb433 = this[_0x579b1f(0x387)][_0x579b1f(0x1f4)]();
            var _0x22e3c6 = this[_0x579b1f(0x387)][_0x579b1f(0x3cc)], _0x558034 = _0x5cb433[_0x579b1f(0x3cc)], _0x3f3457 = _0x558034[_0x579b1f(0x395)], _0x1654fb = _0x558034[_0x579b1f(0x397)], _0x4ca855 = _0x558034['localScale'];
            _0x22e3c6[_0x579b1f(0x395)][_0x579b1f(0x1f0)](_0x3f3457), _0x22e3c6[_0x579b1f(0x397)][_0x579b1f(0x1f0)](_0x1654fb), _0x22e3c6[_0x579b1f(0x398)]['cloneTo'](_0x4ca855), _0x558034[_0x579b1f(0x395)] = _0x3f3457, _0x558034[_0x579b1f(0x397)] = _0x1654fb, _0x558034['localScale'] = _0x4ca855, _0x8860a4['_avatarNodeMap'] = {}, this[_0x579b1f(0x67d)](_0x5cb433, _0x8860a4);
        }
        [_0x5659be(0x1f0)](_0x130b2d) {
            var _0x29e42f = _0x130b2d, _0x1cf956 = this['_rootNode']['clone']();
            _0x29e42f['_rootNode'] = _0x1cf956;
        }
        [_0x5659be(0x1f4)]() {
            var _0x343793 = _0x5659be, _0x170f92 = new _0x8954ce();
            return this[_0x343793(0x1f0)](_0x170f92), _0x170f92;
        }
        [_0x5659be(0x680)](_0x4cc57a) {
            var _0x3fad4b = _0x5659be, _0xb66cc9 = new Float32Array(this['_nativeNodeCount'] * 0x3), _0x334081 = new Float32Array(this['_nativeNodeCount'] * 0x4), _0x1aa923 = new Float32Array(this['_nativeNodeCount'] * 0x3), _0x5e811b = new Float32Array(this[_0x3fad4b(0x678)] * 0x10), _0x1bafc0 = new Int16Array(this['_nativeNodeCount']);
            _0x4cc57a[_0x3fad4b(0x681)] = _0xb66cc9, _0x4cc57a['_animationNodeLocalRotations'] = _0x334081, _0x4cc57a[_0x3fad4b(0x682)] = _0x1aa923, _0x4cc57a[_0x3fad4b(0x683)] = _0x5e811b, _0x4cc57a[_0x3fad4b(0x684)] = _0x1bafc0, this['_nativeCurCloneCount'] = 0x0;
            var _0x45baef = this[_0x3fad4b(0x387)][_0x3fad4b(0x674)](_0xb66cc9, _0x334081, _0x1aa923, _0x5e811b, _0x1bafc0, -0x1, this), _0xbf874e = this[_0x3fad4b(0x387)][_0x3fad4b(0x3cc)], _0x2c69a1 = _0x45baef['transform'], _0x5d9355 = _0x2c69a1[_0x3fad4b(0x395)], _0x118203 = _0x2c69a1[_0x3fad4b(0x397)], _0x19678f = _0x2c69a1['localScale'];
            _0xbf874e[_0x3fad4b(0x395)][_0x3fad4b(0x1f0)](_0x5d9355), _0xbf874e['localRotation'][_0x3fad4b(0x1f0)](_0x118203), _0xbf874e['localScale'][_0x3fad4b(0x1f0)](_0x19678f), _0x2c69a1[_0x3fad4b(0x395)] = _0x5d9355, _0x2c69a1['localRotation'] = _0x118203, _0x2c69a1['localScale'] = _0x19678f, _0x4cc57a[_0x3fad4b(0x386)] = {}, this['_initCloneToAnimator'](_0x45baef, _0x4cc57a);
        }
    }
    _0x8954ce[_0x5659be(0x67c)] = _0x5659be(0x67c);
    class _0x4bfb48 extends _0x218b83[_0x5659be(0x315)] {
        constructor() {
            super(), this['_shaderValues'] = new _0x552b02(this), this['renderQueue'] = _0x4bfb48['RENDERQUEUE_OPAQUE'], this['alphaTest'] = ![];
        }
        static [_0x5659be(0x31c)](_0x5b1e0e, _0x314675) {
            var _0x282dbd = _0x5659be;
            _0x218b83[_0x282dbd(0x685)][_0x282dbd(0x5bd)][_0x282dbd(0x31e)](_0x5b1e0e, _0x314675, null, _0x4bfb48[_0x282dbd(0x686)]);
        }
        static [_0x5659be(0x687)]() {
            var _0x29eb2b = _0x5659be;
            _0x4bfb48[_0x29eb2b(0x688)] = _0x84b6d6[_0x29eb2b(0x510)](_0x29eb2b(0x689));
        }
        static [_0x5659be(0x318)](_0x52acb5, _0x53aa54 = null, _0x90a667 = null) {
            var _0x244cba = _0x5659be, _0x2cbdae = _0x52acb5, _0x384d6d = _0x2cbdae[_0x244cba(0x67e)], _0x5f4c75, _0x46ee10 = _0x384d6d[_0x244cba(0x2ae)], _0x1be310 = _0x218b83['ClassUtils'][_0x244cba(0x68a)](_0x46ee10);
            if (_0x1be310)
                _0x5f4c75 = new _0x1be310();
            else
                _0x5f4c75 = new _0x4bfb48(), _0x5f4c75[_0x244cba(0x68b)](_0x46ee10);
            switch (_0x2cbdae[_0x244cba(0x679)]) {
            case _0x244cba(0x68c):
            case _0x244cba(0x68d):
                var _0x311ee3, _0x371efa;
                for (var _0x1feb56 in _0x384d6d) {
                    switch (_0x1feb56) {
                    case _0x244cba(0x2ae):
                        break;
                    case _0x244cba(0x68e):
                        var _0x156242 = _0x384d6d[_0x1feb56];
                        for (_0x311ee3 = 0x0, _0x371efa = _0x156242['length']; _0x311ee3 < _0x371efa; _0x311ee3++) {
                            var _0x4f671d = _0x156242[_0x311ee3], _0x151e7b = _0x4f671d[_0x244cba(0x26b)];
                            switch (_0x151e7b['length']) {
                            case 0x2:
                                _0x5f4c75[_0x4f671d['name']] = new _0x12bf01(_0x151e7b[0x0], _0x151e7b[0x1]);
                                break;
                            case 0x3:
                                _0x5f4c75[_0x4f671d['name']] = new _0x3f70c5(_0x151e7b[0x0], _0x151e7b[0x1], _0x151e7b[0x2]);
                                break;
                            case 0x4:
                                _0x5f4c75[_0x4f671d[_0x244cba(0x2a5)]] = new _0x8fb80(_0x151e7b[0x0], _0x151e7b[0x1], _0x151e7b[0x2], _0x151e7b[0x3]);
                                break;
                            default:
                                throw new Error(_0x244cba(0x68f));
                            }
                        }
                        break;
                    case _0x244cba(0x690):
                        var _0x4c29cf = _0x384d6d[_0x1feb56];
                        for (_0x311ee3 = 0x0, _0x371efa = _0x4c29cf['length']; _0x311ee3 < _0x371efa; _0x311ee3++) {
                            var _0x475410 = _0x4c29cf[_0x311ee3], _0xd46f54 = _0x475410[_0x244cba(0x691)];
                            _0xd46f54 && (_0x5f4c75[_0x475410['name']] = _0x218b83[_0x244cba(0x3b1)][_0x244cba(0x692)](_0xd46f54));
                        }
                        break;
                    case _0x244cba(0x693):
                        var _0x35181a = _0x384d6d[_0x1feb56];
                        for (_0x311ee3 = 0x0, _0x371efa = _0x35181a['length']; _0x311ee3 < _0x371efa; _0x311ee3++) {
                            var _0x2a3a9f = _0x84b6d6['getDefineByName'](_0x35181a[_0x311ee3]);
                            _0x5f4c75[_0x244cba(0x4e0)][_0x244cba(0x62c)](_0x2a3a9f);
                        }
                        break;
                    case _0x244cba(0x694):
                        var _0x50f483 = _0x384d6d[_0x1feb56], _0x5ed01b = _0x50f483[0x0], _0x375e2b = _0x5f4c75;
                        _0x375e2b['blend'] = _0x5ed01b[_0x244cba(0x695)], _0x375e2b[_0x244cba(0x696)] = _0x5ed01b[_0x244cba(0x696)], _0x375e2b['depthTest'] = _0x5ed01b[_0x244cba(0x697)], _0x375e2b[_0x244cba(0x698)] = _0x5ed01b[_0x244cba(0x698)], _0x375e2b[_0x244cba(0x699)] = _0x5ed01b[_0x244cba(0x69a)], _0x375e2b[_0x244cba(0x69b)] = _0x5ed01b['dstBlend'];
                        break;
                    case 'cull':
                        _0x5f4c75[_0x244cba(0x696)] = _0x384d6d[_0x1feb56];
                        break;
                    case _0x244cba(0x695):
                        _0x5f4c75[_0x244cba(0x695)] = _0x384d6d[_0x1feb56];
                        break;
                    case _0x244cba(0x698):
                        _0x5f4c75[_0x244cba(0x698)] = _0x384d6d[_0x1feb56];
                        break;
                    case _0x244cba(0x69a):
                        _0x5f4c75['blendSrc'] = _0x384d6d[_0x1feb56];
                        break;
                    case _0x244cba(0x69c):
                        _0x5f4c75[_0x244cba(0x69b)] = _0x384d6d[_0x1feb56];
                        break;
                    default:
                        _0x5f4c75[_0x1feb56] = _0x384d6d[_0x1feb56];
                    }
                }
                break;
            case 'LAYAMATERIAL:03':
                var _0x311ee3, _0x371efa;
                for (var _0x1feb56 in _0x384d6d) {
                    switch (_0x1feb56) {
                    case _0x244cba(0x2ae):
                    case _0x244cba(0x2a5):
                        break;
                    case _0x244cba(0x693):
                        var _0x35181a = _0x384d6d[_0x1feb56];
                        for (_0x311ee3 = 0x0, _0x371efa = _0x35181a[_0x244cba(0x1ff)]; _0x311ee3 < _0x371efa; _0x311ee3++) {
                            var _0x2a3a9f = _0x84b6d6['getDefineByName'](_0x35181a[_0x311ee3]);
                            _0x5f4c75[_0x244cba(0x4e0)]['addDefine'](_0x2a3a9f);
                        }
                        break;
                    case _0x244cba(0x690):
                        var _0x4c29cf = _0x384d6d[_0x1feb56];
                        for (_0x311ee3 = 0x0, _0x371efa = _0x4c29cf[_0x244cba(0x1ff)]; _0x311ee3 < _0x371efa; _0x311ee3++) {
                            var _0x475410 = _0x4c29cf[_0x311ee3], _0xd46f54 = _0x475410['path'];
                            _0xd46f54 && _0x5f4c75['_shaderValues'][_0x244cba(0x4a2)](_0x84b6d6[_0x244cba(0x526)](_0x475410[_0x244cba(0x2a5)]), _0x218b83[_0x244cba(0x3b1)][_0x244cba(0x692)](_0xd46f54));
                        }
                        break;
                    default:
                        var _0x106612 = _0x384d6d[_0x1feb56], _0x5713ac = _0x84b6d6[_0x244cba(0x526)](_0x1feb56);
                        if (!_0x106612[_0x244cba(0x1ff)])
                            _0x5f4c75[_0x244cba(0x4e0)]['setNumber'](_0x5713ac, _0x384d6d[_0x1feb56]);
                        else {
                            var _0x151e7b = _0x106612;
                            switch (_0x151e7b[_0x244cba(0x1ff)]) {
                            case 0x2:
                                _0x5f4c75['_shaderValues'][_0x244cba(0x49a)](_0x5713ac, new _0x12bf01(_0x151e7b[0x0], _0x151e7b[0x1]));
                                break;
                            case 0x3:
                                _0x5f4c75[_0x244cba(0x4e0)][_0x244cba(0x4b1)](_0x5713ac, new _0x3f70c5(_0x151e7b[0x0], _0x151e7b[0x1], _0x151e7b[0x2]));
                                break;
                            case 0x4:
                                _0x5f4c75[_0x244cba(0x4e0)][_0x244cba(0x49d)](_0x5713ac, new _0x8fb80(_0x151e7b[0x0], _0x151e7b[0x1], _0x151e7b[0x2], _0x151e7b[0x3]));
                                break;
                            default:
                                throw new Error('BaseMaterial:unkonwn\x20color\x20length.');
                            }
                        }
                    }
                }
                break;
            default:
                throw new Error(_0x244cba(0x69d));
            }
            return _0x5f4c75;
        }
        get ['shaderData']() {
            return this['_shaderValues'];
        }
        get [_0x5659be(0x69e)]() {
            var _0xe431cf = _0x5659be;
            return this['_shaderValues'][_0xe431cf(0x498)](_0x4bfb48[_0xe431cf(0x69f)]);
        }
        set [_0x5659be(0x69e)](_0x5cd50c) {
            var _0x3a33f7 = _0x5659be;
            this[_0x3a33f7(0x4e0)][_0x3a33f7(0x4af)](_0x4bfb48['ALPHATESTVALUE'], _0x5cd50c);
        }
        get [_0x5659be(0x6a0)]() {
            var _0x109879 = _0x5659be;
            return this[_0x109879(0x63f)][_0x109879(0x494)](_0x4bfb48[_0x109879(0x688)]);
        }
        set ['alphaTest'](_0x37b719) {
            var _0x103b2d = _0x5659be;
            if (_0x37b719)
                this[_0x103b2d(0x4e0)][_0x103b2d(0x62c)](_0x4bfb48[_0x103b2d(0x688)]);
            else
                this[_0x103b2d(0x4e0)][_0x103b2d(0x493)](_0x4bfb48[_0x103b2d(0x688)]);
        }
        get [_0x5659be(0x698)]() {
            var _0x348b73 = _0x5659be;
            return this['_shaderValues'][_0x348b73(0x6a1)](_0x4bfb48['DEPTH_WRITE']);
        }
        set ['depthWrite'](_0x2283f8) {
            var _0xcc06c2 = _0x5659be;
            this[_0xcc06c2(0x4e0)][_0xcc06c2(0x497)](_0x4bfb48['DEPTH_WRITE'], _0x2283f8);
        }
        get [_0x5659be(0x696)]() {
            var _0x1dc1f9 = _0x5659be;
            return this[_0x1dc1f9(0x4e0)][_0x1dc1f9(0x6a2)](_0x4bfb48[_0x1dc1f9(0x6a3)]);
        }
        set [_0x5659be(0x696)](_0x1ece30) {
            var _0x36fbd9 = _0x5659be;
            this[_0x36fbd9(0x4e0)]['setInt'](_0x4bfb48[_0x36fbd9(0x6a3)], _0x1ece30);
        }
        get [_0x5659be(0x695)]() {
            var _0x5bada6 = _0x5659be;
            return this[_0x5bada6(0x4e0)][_0x5bada6(0x6a2)](_0x4bfb48[_0x5bada6(0x6a4)]);
        }
        set [_0x5659be(0x695)](_0x23b825) {
            var _0x1f8cac = _0x5659be;
            this[_0x1f8cac(0x4e0)][_0x1f8cac(0x4b0)](_0x4bfb48['BLEND'], _0x23b825);
        }
        get [_0x5659be(0x699)]() {
            var _0x139ff7 = _0x5659be;
            return this['_shaderValues']['getInt'](_0x4bfb48[_0x139ff7(0x6a5)]);
        }
        set [_0x5659be(0x699)](_0x2f1c59) {
            var _0x141935 = _0x5659be;
            this[_0x141935(0x4e0)][_0x141935(0x4b0)](_0x4bfb48[_0x141935(0x6a5)], _0x2f1c59);
        }
        get [_0x5659be(0x69b)]() {
            var _0x32e440 = _0x5659be;
            return this[_0x32e440(0x4e0)][_0x32e440(0x6a2)](_0x4bfb48[_0x32e440(0x6a6)]);
        }
        set ['blendDst'](_0x28da69) {
            var _0x466f74 = _0x5659be;
            this[_0x466f74(0x4e0)][_0x466f74(0x4b0)](_0x4bfb48[_0x466f74(0x6a6)], _0x28da69);
        }
        get [_0x5659be(0x697)]() {
            var _0x47277f = _0x5659be;
            return this[_0x47277f(0x4e0)][_0x47277f(0x6a2)](_0x4bfb48[_0x47277f(0x6a7)]);
        }
        set [_0x5659be(0x697)](_0x36c3dd) {
            var _0x2d02c4 = _0x5659be;
            this[_0x2d02c4(0x4e0)]['setInt'](_0x4bfb48[_0x2d02c4(0x6a7)], _0x36c3dd);
        }
        get [_0x5659be(0x6a8)]() {
            var _0x5d5a4d = _0x5659be;
            let _0x4fb344 = {};
            var _0x2cbf1b = this[_0x5d5a4d(0x4e0)][_0x5d5a4d(0x307)]();
            for (let _0x29ef1b in _0x2cbf1b) {
                _0x4fb344[_0x84b6d6[_0x5d5a4d(0x527)][parseInt(_0x29ef1b)]] = _0x2cbf1b[_0x29ef1b];
            }
            return _0x4fb344;
        }
        get [_0x5659be(0x6a9)]() {
            var _0x3cd5d4 = _0x5659be;
            let _0x3d6d69 = new Array(), _0x185186 = this[_0x3cd5d4(0x4e0)][_0x3cd5d4(0x490)];
            return _0x84b6d6[_0x3cd5d4(0x523)](_0x185186, _0x3d6d69), _0x3d6d69;
        }
        [_0x5659be(0x6aa)]() {
            var _0x5cc671 = _0x5659be, _0x13bb92 = this[_0x5cc671(0x4e0)]['getData']();
            for (var _0x55b536 in _0x13bb92) {
                var _0x4f5ec9 = _0x13bb92[_0x55b536];
                if (_0x4f5ec9 && _0x4f5ec9 instanceof _0x218b83[_0x5cc671(0x3da)])
                    _0x4f5ec9[_0x5cc671(0x351)]();
            }
        }
        [_0x5659be(0x32d)]() {
            var _0x2ce489 = _0x5659be;
            if (this[_0x2ce489(0x33a)] > 0x0)
                this['_removeTetxureReference']();
            this[_0x2ce489(0x4e0)] = null;
        }
        [_0x5659be(0x354)](_0x883f71 = 0x1) {
            var _0x510ccf = _0x5659be;
            super['_addReference'](_0x883f71);
            var _0xe13645 = this[_0x510ccf(0x4e0)][_0x510ccf(0x307)]();
            for (var _0xb1f0bf in _0xe13645) {
                var _0x505c3e = _0xe13645[_0xb1f0bf];
                if (_0x505c3e && _0x505c3e instanceof _0x218b83[_0x510ccf(0x3da)])
                    _0x505c3e[_0x510ccf(0x354)]();
            }
        }
        [_0x5659be(0x351)](_0x1ea766 = 0x1) {
            var _0x7f7a53 = _0x5659be;
            super[_0x7f7a53(0x351)](_0x1ea766), this[_0x7f7a53(0x6aa)]();
        }
        ['setShaderName'](_0x18515b) {
            var _0x186d9a = _0x5659be;
            this[_0x186d9a(0x50a)] = _0x84b6d6[_0x186d9a(0x52c)](_0x18515b);
            if (!this[_0x186d9a(0x50a)])
                throw new Error(_0x186d9a(0x6ab));
        }
        [_0x5659be(0x6ac)](_0x550b53, _0x46116f) {
            var _0xf94fa = _0x5659be;
            this[_0xf94fa(0x63f)]['setValueData'](_0x84b6d6[_0xf94fa(0x526)](_0x550b53), _0x46116f);
        }
        [_0x5659be(0x6ad)](_0xe75c28) {
            var _0x319b1d = _0x5659be;
            return this[_0x319b1d(0x63f)][_0x319b1d(0x4a6)](_0x84b6d6['propertyNameToID'](_0xe75c28));
        }
        [_0x5659be(0x1f0)](_0x5c4f19) {
            var _0x2b530f = _0x5659be, _0x14d95f = _0x5c4f19;
            _0x14d95f[_0x2b530f(0x2a5)] = this['name'], _0x14d95f[_0x2b530f(0x6ae)] = this['renderQueue'], this[_0x2b530f(0x4e0)][_0x2b530f(0x1f0)](_0x14d95f[_0x2b530f(0x4e0)]);
        }
        [_0x5659be(0x1f4)]() {
            var _0x6f67f9 = _0x5659be, _0x42762d = new _0x4bfb48();
            return this[_0x6f67f9(0x1f0)](_0x42762d), _0x42762d;
        }
        get ['_defineDatas']() {
            var _0xc29310 = _0x5659be;
            return this['_shaderValues'][_0xc29310(0x490)];
        }
    }
    _0x4bfb48[_0x5659be(0x686)] = 'MATERIAL', _0x4bfb48[_0x5659be(0x6af)] = 0x7d0, _0x4bfb48[_0x5659be(0x6b0)] = 0x992, _0x4bfb48[_0x5659be(0x6b1)] = 0xbb8, _0x4bfb48[_0x5659be(0x69f)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x6b2)), _0x4bfb48['CULL'] = _0x84b6d6['propertyNameToID'](_0x5659be(0x6b3)), _0x4bfb48[_0x5659be(0x6a4)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x6b4)), _0x4bfb48[_0x5659be(0x6a5)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x6b5)), _0x4bfb48['BLEND_DST'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x6b6)), _0x4bfb48[_0x5659be(0x6a7)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x6b7)), _0x4bfb48[_0x5659be(0x6b8)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x6b9));
    class _0x47f6bc {
        static ['load'](_0x1b820b, _0x58bd92) {
            var _0x554b04 = _0x5659be;
            _0x218b83[_0x554b04(0x685)][_0x554b04(0x5bd)][_0x554b04(0x31e)](_0x1b820b, _0x58bd92, null, _0x4bfb48['MATERIAL']);
        }
        static [_0x5659be(0x687)]() {
            var _0x5eea75 = _0x5659be;
            _0x47f6bc[_0x5eea75(0x688)] = _0x4bfb48['SHADERDEFINE_ALPHATEST'];
        }
    }
    _0x47f6bc['MATERIAL'] = _0x5659be(0x686), _0x47f6bc[_0x5659be(0x6af)] = 0x7d0, _0x47f6bc['RENDERQUEUE_ALPHATEST'] = 0x992, _0x47f6bc[_0x5659be(0x6b1)] = 0xbb8, _0x47f6bc[_0x5659be(0x69f)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x6b2));
    class _0x2aa393 {
        constructor() {
            var _0x2f3fd2 = _0x5659be;
            this[_0x2f3fd2(0x696)] = _0x2aa393[_0x2f3fd2(0x6ba)], this[_0x2f3fd2(0x695)] = _0x2aa393[_0x2f3fd2(0x6bb)], this['srcBlend'] = _0x2aa393[_0x2f3fd2(0x6bc)], this[_0x2f3fd2(0x69c)] = _0x2aa393[_0x2f3fd2(0x6bd)], this['srcBlendRGB'] = _0x2aa393[_0x2f3fd2(0x6bc)], this[_0x2f3fd2(0x6be)] = _0x2aa393[_0x2f3fd2(0x6bd)], this[_0x2f3fd2(0x6bf)] = _0x2aa393[_0x2f3fd2(0x6bc)], this['dstBlendAlpha'] = _0x2aa393[_0x2f3fd2(0x6bd)], this[_0x2f3fd2(0x6c0)] = new _0x8fb80(0x1, 0x1, 0x1, 0x1), this[_0x2f3fd2(0x6c1)] = _0x2aa393[_0x2f3fd2(0x6c2)], this[_0x2f3fd2(0x6c3)] = _0x2aa393[_0x2f3fd2(0x6c2)], this[_0x2f3fd2(0x6c4)] = _0x2aa393[_0x2f3fd2(0x6c2)], this[_0x2f3fd2(0x697)] = _0x2aa393[_0x2f3fd2(0x6c5)], this[_0x2f3fd2(0x698)] = !![];
        }
        [_0x5659be(0x1f0)](_0x2a97ea) {
            var _0x1b0183 = _0x5659be, _0xa95367 = _0x2a97ea;
            _0xa95367[_0x1b0183(0x696)] = this['cull'], _0xa95367[_0x1b0183(0x695)] = this['blend'], _0xa95367[_0x1b0183(0x69a)] = this[_0x1b0183(0x69a)], _0xa95367[_0x1b0183(0x69c)] = this[_0x1b0183(0x69c)], _0xa95367[_0x1b0183(0x6c6)] = this[_0x1b0183(0x6c6)], _0xa95367[_0x1b0183(0x6be)] = this['dstBlendRGB'], _0xa95367[_0x1b0183(0x6bf)] = this['srcBlendAlpha'], _0xa95367[_0x1b0183(0x6c7)] = this['dstBlendAlpha'], this['blendConstColor'][_0x1b0183(0x1f0)](_0xa95367[_0x1b0183(0x6c0)]), _0xa95367[_0x1b0183(0x6c1)] = this[_0x1b0183(0x6c1)], _0xa95367['blendEquationRGB'] = this[_0x1b0183(0x6c3)], _0xa95367[_0x1b0183(0x6c4)] = this[_0x1b0183(0x6c4)], _0xa95367[_0x1b0183(0x697)] = this['depthTest'], _0xa95367[_0x1b0183(0x698)] = this[_0x1b0183(0x698)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x15360a = new _0x2aa393();
            return this['cloneTo'](_0x15360a), _0x15360a;
        }
    }
    _0x2aa393[_0x5659be(0x6c8)] = 0x0, _0x2aa393['CULL_FRONT'] = 0x1, _0x2aa393[_0x5659be(0x6ba)] = 0x2, _0x2aa393['BLEND_DISABLE'] = 0x0, _0x2aa393[_0x5659be(0x6c9)] = 0x1, _0x2aa393['BLEND_ENABLE_SEPERATE'] = 0x2, _0x2aa393[_0x5659be(0x6bd)] = 0x0, _0x2aa393[_0x5659be(0x6bc)] = 0x1, _0x2aa393['BLENDPARAM_SRC_COLOR'] = 0x300, _0x2aa393[_0x5659be(0x6ca)] = 0x301, _0x2aa393[_0x5659be(0x6cb)] = 0x306, _0x2aa393[_0x5659be(0x6cc)] = 0x307, _0x2aa393['BLENDPARAM_SRC_ALPHA'] = 0x302, _0x2aa393['BLENDPARAM_ONE_MINUS_SRC_ALPHA'] = 0x303, _0x2aa393[_0x5659be(0x6cd)] = 0x304, _0x2aa393[_0x5659be(0x6ce)] = 0x305, _0x2aa393[_0x5659be(0x6cf)] = 0x308, _0x2aa393[_0x5659be(0x6c2)] = 0x8006, _0x2aa393[_0x5659be(0x6d0)] = 0x800a, _0x2aa393[_0x5659be(0x6d1)] = 0x800b, _0x2aa393[_0x5659be(0x6d2)] = 0x0, _0x2aa393['DEPTHTEST_NEVER'] = 0x200, _0x2aa393[_0x5659be(0x6d3)] = 0x201, _0x2aa393[_0x5659be(0x6d4)] = 0x202, _0x2aa393[_0x5659be(0x6c5)] = 0x203, _0x2aa393['DEPTHTEST_GREATER'] = 0x204, _0x2aa393[_0x5659be(0x6d5)] = 0x205, _0x2aa393[_0x5659be(0x6d6)] = 0x206, _0x2aa393[_0x5659be(0x6d7)] = 0x207;
    class _0x5d2d40 extends _0x4bfb48 {
        constructor() {
            var _0x441fb0 = _0x5659be;
            super(), this['setShaderName'](_0x441fb0(0x6d8)), this[_0x441fb0(0x6d9)] = 0x1;
            var _0x3e5618 = this[_0x441fb0(0x4e0)];
            _0x3e5618[_0x441fb0(0x49d)](_0x5d2d40[_0x441fb0(0x6da)], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), _0x3e5618[_0x441fb0(0x49d)](_0x5d2d40[_0x441fb0(0x6db)], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), _0x3e5618['setNumber'](_0x5d2d40['SHININESS'], 0.078125), _0x3e5618[_0x441fb0(0x4af)](_0x4bfb48['ALPHATESTVALUE'], 0.5), _0x3e5618[_0x441fb0(0x49d)](_0x5d2d40[_0x441fb0(0x6dc)], new _0x8fb80(0x1, 0x1, 0x0, 0x0)), this['albedoIntensity'] = 0x1, this['renderMode'] = _0x5d2d40['RENDERMODE_OPAQUE'];
        }
        static ['__initDefine__']() {
            var _0x455d3d = _0x5659be;
            _0x5d2d40[_0x455d3d(0x6dd)] = _0x84b6d6[_0x455d3d(0x510)](_0x455d3d(0x6de)), _0x5d2d40[_0x455d3d(0x6df)] = _0x84b6d6[_0x455d3d(0x510)](_0x455d3d(0x6e0)), _0x5d2d40[_0x455d3d(0x6e1)] = _0x84b6d6[_0x455d3d(0x510)](_0x455d3d(0x6e2)), _0x5d2d40['SHADERDEFINE_ENABLEVERTEXCOLOR'] = _0x84b6d6['getDefineByName'](_0x455d3d(0x6e3)), _0x5d2d40[_0x455d3d(0x6e4)] = _0x84b6d6[_0x455d3d(0x510)](_0x455d3d(0x6e5)), _0x5d2d40[_0x455d3d(0x6e6)] = _0x84b6d6[_0x455d3d(0x510)](_0x455d3d(0x6e7));
        }
        get [_0x5659be(0x6e8)]() {
            var _0x4a1091 = _0x5659be;
            return this[_0x4a1091(0x6e9)]['x'];
        }
        set [_0x5659be(0x6e8)](_0x2b5b93) {
            var _0x3f9d4a = _0x5659be;
            let _0x436a56 = this[_0x3f9d4a(0x6e9)];
            _0x436a56['x'] = _0x2b5b93, this[_0x3f9d4a(0x6e9)] = _0x436a56;
        }
        get [_0x5659be(0x6ea)]() {
            return this['albedoColor']['y'];
        }
        set [_0x5659be(0x6ea)](_0x14693a) {
            var _0x226f36 = _0x5659be;
            let _0x513d14 = this['albedoColor'];
            _0x513d14['y'] = _0x14693a, this[_0x226f36(0x6e9)] = _0x513d14;
        }
        get [_0x5659be(0x6eb)]() {
            var _0x253186 = _0x5659be;
            return this[_0x253186(0x6e9)]['z'];
        }
        set ['_ColorB'](_0x2c62e8) {
            var _0x147980 = _0x5659be;
            let _0x5272da = this['albedoColor'];
            _0x5272da['z'] = _0x2c62e8, this[_0x147980(0x6e9)] = _0x5272da;
        }
        get ['_ColorA']() {
            var _0x3b0904 = _0x5659be;
            return this[_0x3b0904(0x6e9)]['w'];
        }
        set [_0x5659be(0x6ec)](_0x3b00f6) {
            var _0x3fce0f = _0x5659be;
            let _0x514f46 = this[_0x3fce0f(0x6e9)];
            _0x514f46['w'] = _0x3b00f6, this[_0x3fce0f(0x6e9)] = _0x514f46;
        }
        get [_0x5659be(0x6ed)]() {
            var _0x4c3bd1 = _0x5659be;
            return this[_0x4c3bd1(0x4e0)][_0x4c3bd1(0x49c)](_0x5d2d40[_0x4c3bd1(0x6da)]);
        }
        set [_0x5659be(0x6ed)](_0x32fbc4) {
            var _0x3cf4e1 = _0x5659be;
            this[_0x3cf4e1(0x6e9)] = _0x32fbc4;
        }
        get [_0x5659be(0x6ee)]() {
            var _0x3fed66 = _0x5659be;
            return this[_0x3fed66(0x4e0)][_0x3fed66(0x49c)](_0x5d2d40['MATERIALSPECULAR'])['x'];
        }
        set [_0x5659be(0x6ee)](_0x4f2ef0) {
            var _0x1cbb02 = _0x5659be;
            this[_0x1cbb02(0x4e0)]['getVector'](_0x5d2d40[_0x1cbb02(0x6db)])['x'] = _0x4f2ef0;
        }
        get [_0x5659be(0x6ef)]() {
            var _0x280acb = _0x5659be;
            return this['_shaderValues'][_0x280acb(0x49c)](_0x5d2d40['MATERIALSPECULAR'])['y'];
        }
        set [_0x5659be(0x6ef)](_0x2b3631) {
            var _0xc088f = _0x5659be;
            this['_shaderValues'][_0xc088f(0x49c)](_0x5d2d40[_0xc088f(0x6db)])['y'] = _0x2b3631;
        }
        get ['_SpecColorB']() {
            var _0x3422ac = _0x5659be;
            return this[_0x3422ac(0x4e0)][_0x3422ac(0x49c)](_0x5d2d40[_0x3422ac(0x6db)])['z'];
        }
        set [_0x5659be(0x6f0)](_0x21d95f) {
            var _0x1c4c39 = _0x5659be;
            this['_shaderValues'][_0x1c4c39(0x49c)](_0x5d2d40[_0x1c4c39(0x6db)])['z'] = _0x21d95f;
        }
        get [_0x5659be(0x6f1)]() {
            var _0x3273fc = _0x5659be;
            return this[_0x3273fc(0x4e0)]['getVector'](_0x5d2d40[_0x3273fc(0x6db)])['w'];
        }
        set [_0x5659be(0x6f1)](_0x26528f) {
            var _0x135790 = _0x5659be;
            this[_0x135790(0x4e0)][_0x135790(0x49c)](_0x5d2d40[_0x135790(0x6db)])['w'] = _0x26528f;
        }
        get [_0x5659be(0x6f2)]() {
            var _0x4b3c86 = _0x5659be;
            return this[_0x4b3c86(0x4e0)][_0x4b3c86(0x49c)](_0x5d2d40[_0x4b3c86(0x6db)]);
        }
        set [_0x5659be(0x6f2)](_0x37d15d) {
            var _0x5ef07e = _0x5659be;
            this[_0x5ef07e(0x6f3)] = _0x37d15d;
        }
        get ['_Shininess']() {
            var _0x4f5ddf = _0x5659be;
            return this[_0x4f5ddf(0x4e0)][_0x4f5ddf(0x498)](_0x5d2d40[_0x4f5ddf(0x6f4)]);
        }
        set ['_Shininess'](_0x40f6e8) {
            var _0x235a60 = _0x5659be;
            _0x40f6e8 = Math[_0x235a60(0x205)](0x0, Math[_0x235a60(0x204)](0x1, _0x40f6e8)), this['_shaderValues'][_0x235a60(0x4af)](_0x5d2d40['SHININESS'], _0x40f6e8);
        }
        get [_0x5659be(0x6f5)]() {
            var _0x323294 = _0x5659be;
            return this['_shaderValues'][_0x323294(0x49c)](_0x5d2d40[_0x323294(0x6dc)])['x'];
        }
        set [_0x5659be(0x6f5)](_0x40f208) {
            var _0x483fa9 = _0x5659be, _0x346c55 = this[_0x483fa9(0x4e0)]['getVector'](_0x5d2d40[_0x483fa9(0x6dc)]);
            _0x346c55['x'] = _0x40f208, this[_0x483fa9(0x6f6)] = _0x346c55;
        }
        get ['_MainTex_STY']() {
            var _0x1516ab = _0x5659be;
            return this['_shaderValues'][_0x1516ab(0x49c)](_0x5d2d40['TILINGOFFSET'])['y'];
        }
        set [_0x5659be(0x6f7)](_0x248866) {
            var _0x12636b = _0x5659be, _0x3dfabf = this[_0x12636b(0x4e0)][_0x12636b(0x49c)](_0x5d2d40['TILINGOFFSET']);
            _0x3dfabf['y'] = _0x248866, this[_0x12636b(0x6f6)] = _0x3dfabf;
        }
        get ['_MainTex_STZ']() {
            var _0x236de4 = _0x5659be;
            return this['_shaderValues'][_0x236de4(0x49c)](_0x5d2d40[_0x236de4(0x6dc)])['z'];
        }
        set [_0x5659be(0x6f8)](_0x5c8437) {
            var _0x2ff170 = _0x5659be, _0x314dfd = this['_shaderValues'][_0x2ff170(0x49c)](_0x5d2d40[_0x2ff170(0x6dc)]);
            _0x314dfd['z'] = _0x5c8437, this[_0x2ff170(0x6f6)] = _0x314dfd;
        }
        get [_0x5659be(0x6f9)]() {
            var _0x997b91 = _0x5659be;
            return this[_0x997b91(0x4e0)][_0x997b91(0x49c)](_0x5d2d40[_0x997b91(0x6dc)])['w'];
        }
        set [_0x5659be(0x6f9)](_0x1a2bd2) {
            var _0x2a1858 = _0x5659be, _0x5b491a = this[_0x2a1858(0x4e0)][_0x2a1858(0x49c)](_0x5d2d40[_0x2a1858(0x6dc)]);
            _0x5b491a['w'] = _0x1a2bd2, this['tilingOffset'] = _0x5b491a;
        }
        get [_0x5659be(0x6fa)]() {
            var _0x3a887d = _0x5659be;
            return this[_0x3a887d(0x4e0)][_0x3a887d(0x49c)](_0x5d2d40['TILINGOFFSET']);
        }
        set ['_MainTex_ST'](_0x1b5fdc) {
            var _0x27e884 = _0x5659be;
            this[_0x27e884(0x6f6)] = _0x1b5fdc;
        }
        get [_0x5659be(0x6fb)]() {
            var _0x37e67d = _0x5659be;
            return this[_0x37e67d(0x69e)];
        }
        set ['_Cutoff'](_0x539ba6) {
            var _0xac0769 = _0x5659be;
            this[_0xac0769(0x69e)] = _0x539ba6;
        }
        set [_0x5659be(0x6fc)](_0x55c6ca) {
            var _0x4a008a = _0x5659be;
            switch (_0x55c6ca) {
            case _0x5d2d40['RENDERMODE_OPAQUE']:
                this[_0x4a008a(0x6a0)] = ![], this['renderQueue'] = _0x4bfb48[_0x4a008a(0x6af)], this[_0x4a008a(0x698)] = !![], this['cull'] = _0x2aa393[_0x4a008a(0x6ba)], this[_0x4a008a(0x695)] = _0x2aa393[_0x4a008a(0x6bb)], this[_0x4a008a(0x697)] = _0x2aa393[_0x4a008a(0x6d3)];
                break;
            case _0x5d2d40[_0x4a008a(0x6fd)]:
                this['renderQueue'] = _0x4bfb48[_0x4a008a(0x6b0)], this[_0x4a008a(0x6a0)] = !![], this[_0x4a008a(0x698)] = !![], this[_0x4a008a(0x696)] = _0x2aa393[_0x4a008a(0x6ba)], this[_0x4a008a(0x695)] = _0x2aa393['BLEND_DISABLE'], this[_0x4a008a(0x697)] = _0x2aa393[_0x4a008a(0x6d3)];
                break;
            case _0x5d2d40[_0x4a008a(0x6fe)]:
                this[_0x4a008a(0x6ae)] = _0x4bfb48[_0x4a008a(0x6b1)], this[_0x4a008a(0x6a0)] = ![], this['depthWrite'] = ![], this[_0x4a008a(0x696)] = _0x2aa393[_0x4a008a(0x6ba)], this['blend'] = _0x2aa393[_0x4a008a(0x6c9)], this[_0x4a008a(0x699)] = _0x2aa393[_0x4a008a(0x6ff)], this['blendDst'] = _0x2aa393[_0x4a008a(0x700)], this[_0x4a008a(0x697)] = _0x2aa393[_0x4a008a(0x6d3)];
                break;
            default:
                throw new Error(_0x4a008a(0x701));
            }
        }
        get ['enableVertexColor']() {
            var _0x344dd7 = _0x5659be;
            return this[_0x344dd7(0x4e0)][_0x344dd7(0x494)](_0x5d2d40[_0x344dd7(0x702)]);
        }
        set [_0x5659be(0x703)](_0x3525c2) {
            var _0x528f07 = _0x5659be;
            if (_0x3525c2)
                this[_0x528f07(0x4e0)][_0x528f07(0x62c)](_0x5d2d40[_0x528f07(0x702)]);
            else
                this[_0x528f07(0x4e0)][_0x528f07(0x493)](_0x5d2d40['SHADERDEFINE_ENABLEVERTEXCOLOR']);
        }
        get [_0x5659be(0x704)]() {
            var _0x51453c = _0x5659be;
            return this[_0x51453c(0x6f5)];
        }
        set [_0x5659be(0x704)](_0x25a566) {
            this['_MainTex_STX'] = _0x25a566;
        }
        get [_0x5659be(0x705)]() {
            return this['_MainTex_STY'];
        }
        set ['tilingOffsetY'](_0x2b10d8) {
            var _0x3aa9b7 = _0x5659be;
            this[_0x3aa9b7(0x6f7)] = _0x2b10d8;
        }
        get ['tilingOffsetZ']() {
            var _0x30393c = _0x5659be;
            return this[_0x30393c(0x6f8)];
        }
        set ['tilingOffsetZ'](_0x3d56e4) {
            this['_MainTex_STZ'] = _0x3d56e4;
        }
        get ['tilingOffsetW']() {
            var _0x9400d6 = _0x5659be;
            return this[_0x9400d6(0x6f9)];
        }
        set [_0x5659be(0x706)](_0x555623) {
            var _0x475296 = _0x5659be;
            this[_0x475296(0x6f9)] = _0x555623;
        }
        get ['tilingOffset']() {
            var _0x612e67 = _0x5659be;
            return this[_0x612e67(0x4e0)]['getVector'](_0x5d2d40[_0x612e67(0x6dc)]);
        }
        set ['tilingOffset'](_0x1363aa) {
            var _0x44d6ef = _0x5659be;
            _0x1363aa ? this[_0x44d6ef(0x4e0)][_0x44d6ef(0x49d)](_0x5d2d40['TILINGOFFSET'], _0x1363aa) : this[_0x44d6ef(0x4e0)][_0x44d6ef(0x49c)](_0x5d2d40[_0x44d6ef(0x6dc)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        get [_0x5659be(0x707)]() {
            var _0xd89a09 = _0x5659be;
            return this[_0xd89a09(0x6e8)];
        }
        set [_0x5659be(0x707)](_0x4974b4) {
            var _0x46235a = _0x5659be;
            this[_0x46235a(0x6e8)] = _0x4974b4;
        }
        get [_0x5659be(0x708)]() {
            var _0x2ef420 = _0x5659be;
            return this[_0x2ef420(0x6ea)];
        }
        set [_0x5659be(0x708)](_0x504902) {
            var _0x318e2e = _0x5659be;
            this[_0x318e2e(0x6ea)] = _0x504902;
        }
        get [_0x5659be(0x709)]() {
            return this['_ColorB'];
        }
        set ['albedoColorB'](_0x337c08) {
            var _0x41f589 = _0x5659be;
            this[_0x41f589(0x6eb)] = _0x337c08;
        }
        get [_0x5659be(0x70a)]() {
            var _0x3c7a21 = _0x5659be;
            return this[_0x3c7a21(0x6ec)];
        }
        set [_0x5659be(0x70a)](_0x205b32) {
            var _0x3dc6b2 = _0x5659be;
            this[_0x3dc6b2(0x6ec)] = _0x205b32;
        }
        get [_0x5659be(0x6e9)]() {
            var _0x47742c = _0x5659be;
            return this[_0x47742c(0x4e0)]['getVector'](_0x5d2d40[_0x47742c(0x6da)]);
        }
        set [_0x5659be(0x6e9)](_0x5f27c5) {
            var _0x266b0b = _0x5659be;
            this[_0x266b0b(0x4e0)][_0x266b0b(0x49d)](_0x5d2d40[_0x266b0b(0x6da)], _0x5f27c5);
        }
        get ['albedoIntensity']() {
            var _0x442ad5 = _0x5659be;
            return this[_0x442ad5(0x4e0)]['getNumber'](_0x5d2d40[_0x442ad5(0x70b)]);
        }
        set ['albedoIntensity'](_0x29eb21) {
            var _0x33c646 = _0x5659be;
            this[_0x33c646(0x4e0)][_0x33c646(0x4af)](_0x5d2d40[_0x33c646(0x70b)], _0x29eb21);
        }
        get [_0x5659be(0x70c)]() {
            var _0x3e2cce = _0x5659be;
            return this[_0x3e2cce(0x6ee)];
        }
        set [_0x5659be(0x70c)](_0x4e7967) {
            var _0x19879b = _0x5659be;
            this[_0x19879b(0x6ee)] = _0x4e7967;
        }
        get [_0x5659be(0x70d)]() {
            return this['_SpecColorG'];
        }
        set [_0x5659be(0x70d)](_0x45bbcd) {
            this['_SpecColorG'] = _0x45bbcd;
        }
        get [_0x5659be(0x70e)]() {
            var _0x33df11 = _0x5659be;
            return this[_0x33df11(0x6f0)];
        }
        set ['specularColorB'](_0x56e362) {
            var _0x36a71e = _0x5659be;
            this[_0x36a71e(0x6f0)] = _0x56e362;
        }
        get [_0x5659be(0x70f)]() {
            return this['_SpecColorA'];
        }
        set ['specularColorA'](_0x3fcefb) {
            var _0x1da598 = _0x5659be;
            this[_0x1da598(0x6f1)] = _0x3fcefb;
        }
        get [_0x5659be(0x6f3)]() {
            var _0x2c015d = _0x5659be;
            return this[_0x2c015d(0x4e0)][_0x2c015d(0x49c)](_0x5d2d40['MATERIALSPECULAR']);
        }
        set [_0x5659be(0x6f3)](_0x304d93) {
            var _0x230e66 = _0x5659be;
            this[_0x230e66(0x4e0)]['setVector'](_0x5d2d40[_0x230e66(0x6db)], _0x304d93);
        }
        get ['shininess']() {
            return this['_Shininess'];
        }
        set [_0x5659be(0x710)](_0x595da7) {
            var _0x3bfd5c = _0x5659be;
            this[_0x3bfd5c(0x711)] = _0x595da7;
        }
        get ['albedoTexture']() {
            var _0x12e270 = _0x5659be;
            return this['_shaderValues'][_0x12e270(0x4a4)](_0x5d2d40['ALBEDOTEXTURE']);
        }
        set [_0x5659be(0x712)](_0x28a76d) {
            var _0x4fddfa = _0x5659be;
            if (_0x28a76d)
                this[_0x4fddfa(0x4e0)][_0x4fddfa(0x62c)](_0x5d2d40['SHADERDEFINE_DIFFUSEMAP']);
            else
                this[_0x4fddfa(0x4e0)][_0x4fddfa(0x493)](_0x5d2d40[_0x4fddfa(0x6dd)]);
            this['_shaderValues']['setTexture'](_0x5d2d40['ALBEDOTEXTURE'], _0x28a76d);
        }
        get [_0x5659be(0x713)]() {
            var _0x1cf986 = _0x5659be;
            return this[_0x1cf986(0x4e0)]['getTexture'](_0x5d2d40[_0x1cf986(0x714)]);
        }
        set ['normalTexture'](_0x412db4) {
            var _0x358be3 = _0x5659be;
            if (_0x412db4)
                this['_shaderValues'][_0x358be3(0x62c)](_0x5d2d40[_0x358be3(0x6df)]);
            else
                this[_0x358be3(0x4e0)][_0x358be3(0x493)](_0x5d2d40[_0x358be3(0x6df)]);
            this[_0x358be3(0x4e0)][_0x358be3(0x4a2)](_0x5d2d40[_0x358be3(0x714)], _0x412db4);
        }
        get ['specularTexture']() {
            var _0x36d674 = _0x5659be;
            return this['_shaderValues'][_0x36d674(0x4a4)](_0x5d2d40['SPECULARTEXTURE']);
        }
        set [_0x5659be(0x715)](_0x1ca36f) {
            var _0x52445c = _0x5659be;
            if (_0x1ca36f)
                this[_0x52445c(0x4e0)]['addDefine'](_0x5d2d40[_0x52445c(0x6e1)]);
            else
                this[_0x52445c(0x4e0)]['removeDefine'](_0x5d2d40[_0x52445c(0x6e1)]);
            this[_0x52445c(0x4e0)][_0x52445c(0x4a2)](_0x5d2d40['SPECULARTEXTURE'], _0x1ca36f);
        }
        get [_0x5659be(0x716)]() {
            var _0x447c3a = _0x5659be;
            return this[_0x447c3a(0x4e0)][_0x447c3a(0x494)](_0x5d2d40[_0x447c3a(0x6e4)]);
        }
        set [_0x5659be(0x716)](_0x19e839) {
            var _0x30d152 = _0x5659be;
            if (_0x19e839)
                this[_0x30d152(0x4e0)][_0x30d152(0x62c)](_0x5d2d40[_0x30d152(0x6e4)]);
            else
                this[_0x30d152(0x4e0)][_0x30d152(0x493)](_0x5d2d40[_0x30d152(0x6e4)]);
        }
        get [_0x5659be(0x717)]() {
            var _0x42795f = _0x5659be;
            return this[_0x42795f(0x4e0)][_0x42795f(0x498)](_0x5d2d40[_0x42795f(0x718)]);
        }
        set [_0x5659be(0x719)](_0x546e3a) {
            var _0x4d1c1f = _0x5659be;
            this['_shaderValues'][_0x4d1c1f(0x4af)](_0x5d2d40[_0x4d1c1f(0x718)], _0x546e3a);
        }
        get [_0x5659be(0x71a)]() {
            var _0x1a5dbf = _0x5659be;
            return this[_0x1a5dbf(0x4e0)][_0x1a5dbf(0x498)](_0x5d2d40['IBACKDIFFUSE']);
        }
        set ['backDiffuse'](_0x37bbf0) {
            var _0x45e73b = _0x5659be;
            this[_0x45e73b(0x4e0)][_0x45e73b(0x4af)](_0x5d2d40[_0x45e73b(0x71b)], Math[_0x45e73b(0x205)](_0x37bbf0, 0x1));
        }
        get [_0x5659be(0x71c)]() {
            var _0x2b5308 = _0x5659be;
            return this[_0x2b5308(0x4e0)][_0x2b5308(0x498)](_0x5d2d40['IBACKSCALE']);
        }
        set [_0x5659be(0x71c)](_0x39e0da) {
            var _0x1c3a81 = _0x5659be;
            this[_0x1c3a81(0x4e0)][_0x1c3a81(0x4af)](_0x5d2d40['IBACKSCALE'], _0x39e0da);
        }
        get [_0x5659be(0x71d)]() {
            var _0x267928 = _0x5659be;
            return this[_0x267928(0x4e0)][_0x267928(0x4a4)](_0x5d2d40[_0x267928(0x71e)]);
        }
        set [_0x5659be(0x71d)](_0x7cbc2b) {
            var _0x564b17 = _0x5659be;
            if (_0x7cbc2b)
                this[_0x564b17(0x4e0)][_0x564b17(0x62c)](_0x5d2d40[_0x564b17(0x6e6)]);
            else
                this['_shaderValues'][_0x564b17(0x493)](_0x5d2d40[_0x564b17(0x6e6)]);
            this['_shaderValues'][_0x564b17(0x4a2)](_0x5d2d40[_0x564b17(0x71e)], _0x7cbc2b);
        }
        get ['transmissionColor']() {
            var _0x8b3d13 = _0x5659be;
            return this[_0x8b3d13(0x4e0)]['getVector'](_0x5d2d40[_0x8b3d13(0x71f)]);
        }
        set ['transmissionColor'](_0x48a041) {
            var _0x223413 = _0x5659be;
            this[_0x223413(0x4e0)][_0x223413(0x49d)](_0x5d2d40[_0x223413(0x71f)], _0x48a041);
        }
        ['clone']() {
            var _0x80e385 = _0x5659be, _0x5800bd = new _0x5d2d40();
            return this[_0x80e385(0x1f0)](_0x5800bd), _0x5800bd;
        }
        ['cloneTo'](_0x3a67c8) {
            var _0x4e95f2 = _0x5659be;
            super[_0x4e95f2(0x1f0)](_0x3a67c8);
            var _0x19d143 = _0x3a67c8;
            _0x19d143['albedoIntensity'] = this[_0x4e95f2(0x6d9)], _0x19d143[_0x4e95f2(0x703)] = this[_0x4e95f2(0x703)], this[_0x4e95f2(0x6e9)][_0x4e95f2(0x1f0)](_0x19d143[_0x4e95f2(0x6e9)]);
        }
    }
    _0x5d2d40['RENDERMODE_OPAQUE'] = 0x0, _0x5d2d40[_0x5659be(0x6fd)] = 0x1, _0x5d2d40[_0x5659be(0x6fe)] = 0x2, _0x5d2d40[_0x5659be(0x720)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x721)), _0x5d2d40[_0x5659be(0x714)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x722)), _0x5d2d40[_0x5659be(0x723)] = _0x84b6d6['propertyNameToID']('u_SpecularTexture'), _0x5d2d40[_0x5659be(0x6da)] = _0x84b6d6['propertyNameToID']('u_DiffuseColor'), _0x5d2d40[_0x5659be(0x6db)] = _0x84b6d6[_0x5659be(0x526)]('u_MaterialSpecular'), _0x5d2d40[_0x5659be(0x6f4)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x724)), _0x5d2d40[_0x5659be(0x6dc)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x725)), _0x5d2d40[_0x5659be(0x718)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x726)), _0x5d2d40['IBACKDIFFUSE'] = _0x84b6d6[_0x5659be(0x526)]('u_BackDiffuse'), _0x5d2d40[_0x5659be(0x727)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x728)), _0x5d2d40[_0x5659be(0x71e)] = _0x84b6d6[_0x5659be(0x526)]('u_ThinknessTexture'), _0x5d2d40['TRANSMISSIONCOLOR'] = _0x84b6d6[_0x5659be(0x526)]('u_TransmissionColor'), _0x5d2d40[_0x5659be(0x70b)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x729));
    class _0x5dc88a extends _0x4bfb48 {
        constructor() {
            var _0x547d51 = _0x5659be;
            super(), this[_0x547d51(0x68b)]('Effect'), this[_0x547d51(0x4e0)][_0x547d51(0x49d)](_0x5dc88a[_0x547d51(0x6dc)], new _0x8fb80(0x1, 0x1, 0x0, 0x0)), this[_0x547d51(0x4e0)][_0x547d51(0x49d)](_0x5dc88a['TINTCOLOR'], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), this[_0x547d51(0x6fc)] = _0x5dc88a[_0x547d51(0x72a)];
        }
        static [_0x5659be(0x687)]() {
            var _0x13e85f = _0x5659be;
            _0x5dc88a[_0x13e85f(0x72b)] = _0x84b6d6[_0x13e85f(0x510)](_0x13e85f(0x72c)), _0x5dc88a['SHADERDEFINE_ADDTIVEFOG'] = _0x84b6d6[_0x13e85f(0x510)]('ADDTIVEFOG');
        }
        get ['_TintColorR']() {
            var _0x42366e = _0x5659be;
            return this[_0x42366e(0x462)]['x'];
        }
        set [_0x5659be(0x72d)](_0x2fbcec) {
            var _0xb0fc54 = _0x5659be;
            let _0x11a6fa = this[_0xb0fc54(0x462)];
            _0x11a6fa['x'] = _0x2fbcec, this[_0xb0fc54(0x462)] = _0x11a6fa;
        }
        get [_0x5659be(0x72e)]() {
            var _0x1e5d0e = _0x5659be;
            return this[_0x1e5d0e(0x462)]['y'];
        }
        set ['_TintColorG'](_0x4e8756) {
            var _0x286929 = _0x5659be;
            let _0x4ae328 = this[_0x286929(0x462)];
            _0x4ae328['y'] = _0x4e8756, this[_0x286929(0x462)] = _0x4ae328;
        }
        get ['_TintColorB']() {
            var _0xcaddf3 = _0x5659be;
            return this[_0xcaddf3(0x462)]['z'];
        }
        set [_0x5659be(0x72f)](_0x16f625) {
            var _0x1115e1 = _0x5659be;
            let _0x869254 = this[_0x1115e1(0x462)];
            _0x869254['z'] = _0x16f625, this[_0x1115e1(0x462)] = _0x869254;
        }
        get [_0x5659be(0x730)]() {
            return this['color']['w'];
        }
        set ['_TintColorA'](_0x201acc) {
            var _0x4400cb = _0x5659be;
            let _0x41f7bd = this[_0x4400cb(0x462)];
            _0x41f7bd['w'] = _0x201acc, this[_0x4400cb(0x462)] = _0x41f7bd;
        }
        get [_0x5659be(0x731)]() {
            var _0x209369 = _0x5659be;
            return this[_0x209369(0x4e0)][_0x209369(0x49c)](_0x5dc88a['TINTCOLOR']);
        }
        set ['_TintColor'](_0x58d39e) {
            var _0x138dcc = _0x5659be;
            this[_0x138dcc(0x462)] = _0x58d39e;
        }
        get [_0x5659be(0x6f5)]() {
            var _0x52d6b1 = _0x5659be;
            return this[_0x52d6b1(0x4e0)][_0x52d6b1(0x49c)](_0x5dc88a[_0x52d6b1(0x6dc)])['x'];
        }
        set [_0x5659be(0x6f5)](_0x33bc55) {
            var _0x3ecb82 = _0x5659be, _0x373ae0 = this['_shaderValues'][_0x3ecb82(0x49c)](_0x5dc88a[_0x3ecb82(0x6dc)]);
            _0x373ae0['x'] = _0x33bc55, this[_0x3ecb82(0x6f6)] = _0x373ae0;
        }
        get [_0x5659be(0x6f7)]() {
            var _0x3129bb = _0x5659be;
            return this[_0x3129bb(0x4e0)][_0x3129bb(0x49c)](_0x5dc88a[_0x3129bb(0x6dc)])['y'];
        }
        set [_0x5659be(0x6f7)](_0x29ed2f) {
            var _0x945590 = _0x5659be, _0x224599 = this[_0x945590(0x4e0)]['getVector'](_0x5dc88a[_0x945590(0x6dc)]);
            _0x224599['y'] = _0x29ed2f, this[_0x945590(0x6f6)] = _0x224599;
        }
        get [_0x5659be(0x6f8)]() {
            var _0x1d2d53 = _0x5659be;
            return this[_0x1d2d53(0x4e0)][_0x1d2d53(0x49c)](_0x5dc88a['TILINGOFFSET'])['z'];
        }
        set ['_MainTex_STZ'](_0x491968) {
            var _0x5de59d = _0x5659be, _0x45cd99 = this[_0x5de59d(0x4e0)]['getVector'](_0x5dc88a['TILINGOFFSET']);
            _0x45cd99['z'] = _0x491968, this[_0x5de59d(0x6f6)] = _0x45cd99;
        }
        get [_0x5659be(0x6f9)]() {
            var _0x2fd6cd = _0x5659be;
            return this[_0x2fd6cd(0x4e0)][_0x2fd6cd(0x49c)](_0x5dc88a[_0x2fd6cd(0x6dc)])['w'];
        }
        set ['_MainTex_STW'](_0x1838f6) {
            var _0x5ed7c2 = _0x5659be, _0x9eb3e4 = this[_0x5ed7c2(0x4e0)][_0x5ed7c2(0x49c)](_0x5dc88a['TILINGOFFSET']);
            _0x9eb3e4['w'] = _0x1838f6, this[_0x5ed7c2(0x6f6)] = _0x9eb3e4;
        }
        get [_0x5659be(0x6fa)]() {
            var _0x38f7ff = _0x5659be;
            return this[_0x38f7ff(0x4e0)][_0x38f7ff(0x49c)](_0x5dc88a[_0x38f7ff(0x6dc)]);
        }
        set [_0x5659be(0x6fa)](_0x2346e2) {
            var _0x278cb8 = _0x5659be;
            this[_0x278cb8(0x6f6)] = _0x2346e2;
        }
        set [_0x5659be(0x6fc)](_0x56db45) {
            var _0x39b90 = _0x5659be;
            switch (_0x56db45) {
            case _0x5dc88a[_0x39b90(0x72a)]:
                this[_0x39b90(0x6ae)] = _0x4bfb48[_0x39b90(0x6b1)], this[_0x39b90(0x6a0)] = ![], this[_0x39b90(0x698)] = ![], this[_0x39b90(0x696)] = _0x2aa393[_0x39b90(0x6c8)], this['blend'] = _0x2aa393[_0x39b90(0x6c9)], this[_0x39b90(0x699)] = _0x2aa393[_0x39b90(0x6ff)], this['blendDst'] = _0x2aa393[_0x39b90(0x6bc)], this[_0x39b90(0x697)] = _0x2aa393['DEPTHTEST_LESS'], this['_shaderValues'][_0x39b90(0x62c)](_0x5dc88a[_0x39b90(0x732)]);
                break;
            case _0x5dc88a['RENDERMODE_ALPHABLENDED']:
                this[_0x39b90(0x6ae)] = _0x4bfb48['RENDERQUEUE_TRANSPARENT'], this[_0x39b90(0x6a0)] = ![], this[_0x39b90(0x698)] = ![], this[_0x39b90(0x696)] = _0x2aa393[_0x39b90(0x6c8)], this[_0x39b90(0x695)] = _0x2aa393[_0x39b90(0x6c9)], this[_0x39b90(0x699)] = _0x2aa393['BLENDPARAM_SRC_ALPHA'], this[_0x39b90(0x69b)] = _0x2aa393['BLENDPARAM_ONE_MINUS_SRC_ALPHA'], this[_0x39b90(0x697)] = _0x2aa393[_0x39b90(0x6d3)], this['_shaderValues']['removeDefine'](_0x5dc88a[_0x39b90(0x732)]);
                break;
            default:
                throw new Error('MeshEffectMaterial\x20:\x20renderMode\x20value\x20error.');
            }
        }
        get [_0x5659be(0x733)]() {
            var _0xbc9bef = _0x5659be;
            return this[_0xbc9bef(0x72d)];
        }
        set [_0x5659be(0x733)](_0x1fa562) {
            this['_TintColorR'] = _0x1fa562;
        }
        get [_0x5659be(0x734)]() {
            var _0x283ef6 = _0x5659be;
            return this[_0x283ef6(0x72e)];
        }
        set [_0x5659be(0x734)](_0x1f53c5) {
            this['_TintColorG'] = _0x1f53c5;
        }
        get [_0x5659be(0x735)]() {
            var _0x5ee62d = _0x5659be;
            return this[_0x5ee62d(0x72f)];
        }
        set ['colorB'](_0x56469d) {
            var _0x5a031f = _0x5659be;
            this[_0x5a031f(0x72f)] = _0x56469d;
        }
        get [_0x5659be(0x736)]() {
            return this['_TintColorA'];
        }
        set ['colorA'](_0x287529) {
            var _0x2950d6 = _0x5659be;
            this[_0x2950d6(0x730)] = _0x287529;
        }
        get [_0x5659be(0x462)]() {
            var _0x2cb18f = _0x5659be;
            return this[_0x2cb18f(0x4e0)][_0x2cb18f(0x49c)](_0x5dc88a['TINTCOLOR']);
        }
        set [_0x5659be(0x462)](_0x5a0129) {
            var _0x5afd80 = _0x5659be;
            this[_0x5afd80(0x4e0)][_0x5afd80(0x49d)](_0x5dc88a[_0x5afd80(0x737)], _0x5a0129);
        }
        get ['texture']() {
            var _0x391720 = _0x5659be;
            return this[_0x391720(0x4e0)][_0x391720(0x4a4)](_0x5dc88a['MAINTEXTURE']);
        }
        set [_0x5659be(0x738)](_0x2959e4) {
            var _0x56ee7b = _0x5659be;
            if (_0x2959e4)
                this[_0x56ee7b(0x4e0)][_0x56ee7b(0x62c)](_0x5dc88a['SHADERDEFINE_MAINTEXTURE']);
            else
                this['_shaderValues'][_0x56ee7b(0x493)](_0x5dc88a['SHADERDEFINE_MAINTEXTURE']);
            this[_0x56ee7b(0x4e0)][_0x56ee7b(0x4a2)](_0x5dc88a[_0x56ee7b(0x72c)], _0x2959e4);
        }
        get [_0x5659be(0x704)]() {
            return this['_MainTex_STX'];
        }
        set ['tilingOffsetX'](_0x37bfdb) {
            this['_MainTex_STX'] = _0x37bfdb;
        }
        get [_0x5659be(0x705)]() {
            var _0x4ba7ff = _0x5659be;
            return this[_0x4ba7ff(0x6f7)];
        }
        set [_0x5659be(0x705)](_0x286370) {
            var _0x42e08d = _0x5659be;
            this[_0x42e08d(0x6f7)] = _0x286370;
        }
        get ['tilingOffsetZ']() {
            var _0x548380 = _0x5659be;
            return this[_0x548380(0x6f8)];
        }
        set [_0x5659be(0x739)](_0x28ac42) {
            this['_MainTex_STZ'] = _0x28ac42;
        }
        get [_0x5659be(0x706)]() {
            var _0x35fbbc = _0x5659be;
            return this[_0x35fbbc(0x6f9)];
        }
        set [_0x5659be(0x706)](_0x13a9f0) {
            this['_MainTex_STW'] = _0x13a9f0;
        }
        get ['tilingOffset']() {
            var _0x209584 = _0x5659be;
            return this[_0x209584(0x4e0)][_0x209584(0x49c)](_0x5dc88a[_0x209584(0x6dc)]);
        }
        set ['tilingOffset'](_0x54db1f) {
            var _0x2e8600 = _0x5659be;
            _0x54db1f ? this[_0x2e8600(0x4e0)][_0x2e8600(0x49d)](_0x5dc88a['TILINGOFFSET'], _0x54db1f) : this[_0x2e8600(0x4e0)][_0x2e8600(0x49c)](_0x5dc88a[_0x2e8600(0x6dc)])[_0x2e8600(0x1fa)](0x1, 0x1, 0x0, 0x0);
        }
        [_0x5659be(0x1f4)]() {
            var _0x2df1b7 = _0x5659be, _0x946f57 = new _0x5dc88a();
            return this[_0x2df1b7(0x1f0)](_0x946f57), _0x946f57;
        }
    }
    _0x5dc88a[_0x5659be(0x72a)] = 0x0, _0x5dc88a[_0x5659be(0x73a)] = 0x1, _0x5dc88a[_0x5659be(0x72c)] = _0x84b6d6['propertyNameToID']('u_AlbedoTexture'), _0x5dc88a[_0x5659be(0x737)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x73b)), _0x5dc88a[_0x5659be(0x6dc)] = _0x84b6d6[_0x5659be(0x526)]('u_TilingOffset');
    class _0x35500f extends _0x4bfb48 {
        constructor() {
            var _0x23e7e6 = _0x5659be;
            super(), this[_0x23e7e6(0x68b)](_0x23e7e6(0x73c)), this[_0x23e7e6(0x6fc)] = _0x35500f[_0x23e7e6(0x73d)];
        }
        static [_0x5659be(0x687)]() {
            var _0x2e0b19 = _0x5659be;
            _0x35500f[_0x2e0b19(0x73e)] = _0x84b6d6[_0x2e0b19(0x510)](_0x2e0b19(0x73f)), _0x35500f[_0x2e0b19(0x740)] = _0x84b6d6['getDefineByName'](_0x2e0b19(0x741)), _0x35500f[_0x2e0b19(0x742)] = _0x84b6d6['getDefineByName']('ExtendTerrain_DETAIL_NUM3'), _0x35500f[_0x2e0b19(0x743)] = _0x84b6d6[_0x2e0b19(0x510)](_0x2e0b19(0x744)), _0x35500f[_0x2e0b19(0x745)] = _0x84b6d6[_0x2e0b19(0x510)](_0x2e0b19(0x746));
        }
        get [_0x5659be(0x747)]() {
            var _0x51bad2 = _0x5659be;
            return this[_0x51bad2(0x4e0)][_0x51bad2(0x4a4)](_0x35500f[_0x51bad2(0x748)]);
        }
        set [_0x5659be(0x747)](_0x30af1c) {
            var _0x481732 = _0x5659be;
            this['_shaderValues']['setTexture'](_0x35500f[_0x481732(0x748)], _0x30af1c);
        }
        get [_0x5659be(0x749)]() {
            var _0x3599a8 = _0x5659be;
            return this[_0x3599a8(0x4e0)][_0x3599a8(0x4a4)](_0x35500f[_0x3599a8(0x74a)]);
        }
        set [_0x5659be(0x749)](_0x5820fd) {
            var _0x3edf02 = _0x5659be;
            this[_0x3edf02(0x4e0)][_0x3edf02(0x4a2)](_0x35500f[_0x3edf02(0x74a)], _0x5820fd), this[_0x3edf02(0x74b)](0x1);
        }
        get [_0x5659be(0x74c)]() {
            var _0x13b732 = _0x5659be;
            return this[_0x13b732(0x4e0)][_0x13b732(0x4a4)](_0x35500f['DIFFUSETEXTURE2']);
        }
        set [_0x5659be(0x74c)](_0x501149) {
            var _0x1f4a71 = _0x5659be;
            this[_0x1f4a71(0x4e0)][_0x1f4a71(0x4a2)](_0x35500f[_0x1f4a71(0x74d)], _0x501149), this[_0x1f4a71(0x74b)](0x2);
        }
        get [_0x5659be(0x74e)]() {
            var _0x45012b = _0x5659be;
            return this[_0x45012b(0x4e0)]['getTexture'](_0x35500f['DIFFUSETEXTURE3']);
        }
        set ['diffuseTexture3'](_0x9ddc15) {
            var _0x595f42 = _0x5659be;
            this[_0x595f42(0x4e0)]['setTexture'](_0x35500f[_0x595f42(0x74f)], _0x9ddc15), this[_0x595f42(0x74b)](0x3);
        }
        get ['diffuseTexture4']() {
            var _0x3e2df2 = _0x5659be;
            return this[_0x3e2df2(0x4e0)][_0x3e2df2(0x4a4)](_0x35500f[_0x3e2df2(0x750)]);
        }
        set ['diffuseTexture4'](_0x1ae4c9) {
            var _0x47613d = _0x5659be;
            this['_shaderValues'][_0x47613d(0x4a2)](_0x35500f[_0x47613d(0x750)], _0x1ae4c9), this[_0x47613d(0x74b)](0x4);
        }
        get [_0x5659be(0x751)]() {
            var _0x54cff4 = _0x5659be;
            return this[_0x54cff4(0x4e0)][_0x54cff4(0x4a4)](_0x35500f[_0x54cff4(0x752)]);
        }
        set [_0x5659be(0x751)](_0x11b5cc) {
            var _0x26fcce = _0x5659be;
            this[_0x26fcce(0x4e0)]['setTexture'](_0x35500f[_0x26fcce(0x752)], _0x11b5cc), this[_0x26fcce(0x74b)](0x5);
        }
        set [_0x5659be(0x753)](_0x4e23fc) {
            var _0x5c9771 = _0x5659be;
            this[_0x5c9771(0x4e0)][_0x5c9771(0x49d)](_0x35500f[_0x5c9771(0x754)], _0x4e23fc);
        }
        set [_0x5659be(0x755)](_0x12435d) {
            var _0x13d045 = _0x5659be;
            this['_shaderValues'][_0x13d045(0x49d)](_0x35500f[_0x13d045(0x756)], _0x12435d);
        }
        set [_0x5659be(0x757)](_0xaef18) {
            var _0x149107 = _0x5659be;
            this['_shaderValues'][_0x149107(0x49d)](_0x35500f[_0x149107(0x758)], _0xaef18);
        }
        set ['diffuseScaleOffset4'](_0x557ea5) {
            var _0xa9f4c9 = _0x5659be;
            this[_0xa9f4c9(0x4e0)][_0xa9f4c9(0x49d)](_0x35500f[_0xa9f4c9(0x759)], _0x557ea5);
        }
        set ['diffuseScaleOffset5'](_0x21c4c6) {
            var _0x455977 = _0x5659be;
            this[_0x455977(0x4e0)][_0x455977(0x49d)](_0x35500f['DIFFUSESCALEOFFSET5'], _0x21c4c6);
        }
        set [_0x5659be(0x6fc)](_0x170e78) {
            var _0x19f7e8 = _0x5659be;
            switch (_0x170e78) {
            case _0x35500f['RENDERMODE_OPAQUE']:
                this[_0x19f7e8(0x6ae)] = _0x4bfb48[_0x19f7e8(0x6af)], this[_0x19f7e8(0x698)] = !![], this[_0x19f7e8(0x696)] = _0x2aa393[_0x19f7e8(0x6ba)], this[_0x19f7e8(0x695)] = _0x2aa393['BLEND_DISABLE'], this[_0x19f7e8(0x697)] = _0x2aa393[_0x19f7e8(0x6d3)];
                break;
            case _0x35500f[_0x19f7e8(0x6fe)]:
                this[_0x19f7e8(0x6ae)] = _0x4bfb48[_0x19f7e8(0x6af)], this[_0x19f7e8(0x698)] = ![], this[_0x19f7e8(0x696)] = _0x2aa393[_0x19f7e8(0x6ba)], this[_0x19f7e8(0x695)] = _0x2aa393[_0x19f7e8(0x6c9)], this['blendSrc'] = _0x2aa393[_0x19f7e8(0x6ff)], this['blendDst'] = _0x2aa393[_0x19f7e8(0x700)], this[_0x19f7e8(0x697)] = _0x2aa393[_0x19f7e8(0x6c5)];
                break;
            default:
                throw new Error(_0x19f7e8(0x75a));
            }
        }
        ['_setDetailNum'](_0x3aaa33) {
            var _0x458a0d = _0x5659be;
            switch (_0x3aaa33) {
            case 0x1:
                this['_shaderValues']['addDefine'](_0x35500f[_0x458a0d(0x73e)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f['SHADERDEFINE_DETAIL_NUM2']), this[_0x458a0d(0x4e0)]['removeDefine'](_0x35500f[_0x458a0d(0x742)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x743)]), this['_shaderValues'][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x745)]);
                break;
            case 0x2:
                this[_0x458a0d(0x4e0)]['addDefine'](_0x35500f['SHADERDEFINE_DETAIL_NUM2']), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x73e)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f['SHADERDEFINE_DETAIL_NUM3']), this['_shaderValues'][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x743)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x745)]);
                break;
            case 0x3:
                this['_shaderValues'][_0x458a0d(0x62c)](_0x35500f['SHADERDEFINE_DETAIL_NUM3']), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x73e)]), this['_shaderValues'][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x740)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x743)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x745)]);
                break;
            case 0x4:
                this[_0x458a0d(0x4e0)][_0x458a0d(0x62c)](_0x35500f['SHADERDEFINE_DETAIL_NUM4']), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f['SHADERDEFINE_DETAIL_NUM1']), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x740)]), this[_0x458a0d(0x4e0)]['removeDefine'](_0x35500f[_0x458a0d(0x742)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f['SHADERDEFINE_DETAIL_NUM5']);
                break;
            case 0x5:
                this['_shaderValues'][_0x458a0d(0x62c)](_0x35500f[_0x458a0d(0x745)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f['SHADERDEFINE_DETAIL_NUM1']), this[_0x458a0d(0x4e0)]['removeDefine'](_0x35500f[_0x458a0d(0x740)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x742)]), this[_0x458a0d(0x4e0)][_0x458a0d(0x493)](_0x35500f[_0x458a0d(0x743)]);
                break;
            }
        }
        [_0x5659be(0x1f4)]() {
            var _0x13d691 = _0x5659be, _0x5121ba = new _0x35500f();
            return this[_0x13d691(0x1f0)](_0x5121ba), _0x5121ba;
        }
    }
    _0x35500f[_0x5659be(0x73d)] = 0x1, _0x35500f[_0x5659be(0x6fe)] = 0x2, _0x35500f[_0x5659be(0x748)] = _0x84b6d6[_0x5659be(0x526)]('u_SplatAlphaTexture'), _0x35500f['DIFFUSETEXTURE1'] = _0x84b6d6['propertyNameToID'](_0x5659be(0x75b)), _0x35500f[_0x5659be(0x74d)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x75c)), _0x35500f['DIFFUSETEXTURE3'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x75d)), _0x35500f[_0x5659be(0x750)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x75e)), _0x35500f['DIFFUSETEXTURE5'] = _0x84b6d6['propertyNameToID'](_0x5659be(0x75f)), _0x35500f[_0x5659be(0x754)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x760)), _0x35500f[_0x5659be(0x756)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x761)), _0x35500f[_0x5659be(0x758)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x762)), _0x35500f[_0x5659be(0x759)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x763)), _0x35500f[_0x5659be(0x764)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x765)), function (_0x41362) {
        var _0x2897c0 = _0x5659be;
        _0x41362[_0x41362[_0x2897c0(0x766)] = 0x0] = 'Opaque', _0x41362[_0x41362[_0x2897c0(0x767)] = 0x1] = 'Cutout', _0x41362[_0x41362[_0x2897c0(0x768)] = 0x2] = 'Fade', _0x41362[_0x41362[_0x2897c0(0x769)] = 0x3] = _0x2897c0(0x769);
    }(_0x71dec4[_0x5659be(0x76a)] || (_0x71dec4[_0x5659be(0x76a)] = {}));
    class _0x336a30 extends _0x4bfb48 {
        constructor() {
            var _0x1aedee = _0x5659be;
            super(), this[_0x1aedee(0x4e0)][_0x1aedee(0x49d)](_0x336a30['ALBEDOCOLOR'], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), this[_0x1aedee(0x4e0)][_0x1aedee(0x49d)](_0x336a30['EMISSIONCOLOR'], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), this[_0x1aedee(0x4e0)][_0x1aedee(0x49d)](_0x336a30['TILINGOFFSET'], new _0x8fb80(0x1, 0x1, 0x0, 0x0)), this[_0x1aedee(0x4e0)][_0x1aedee(0x4af)](_0x336a30[_0x1aedee(0x76b)], 0.5), this['_shaderValues'][_0x1aedee(0x4af)](_0x336a30['SMOOTHNESSSCALE'], 0x1), this[_0x1aedee(0x4e0)][_0x1aedee(0x4af)](_0x336a30[_0x1aedee(0x76c)], 0x1), this[_0x1aedee(0x4e0)][_0x1aedee(0x4af)](_0x336a30[_0x1aedee(0x76d)], 0x1), this[_0x1aedee(0x4e0)][_0x1aedee(0x4af)](_0x336a30[_0x1aedee(0x76e)], 0.001), this[_0x1aedee(0x4e0)]['setNumber'](_0x4bfb48[_0x1aedee(0x69f)], 0.5), this[_0x1aedee(0x6fc)] = _0x71dec4[_0x1aedee(0x76a)][_0x1aedee(0x766)];
        }
        static [_0x5659be(0x229)]() {
            var _0x43fa05 = _0x5659be;
            _0x336a30[_0x43fa05(0x76f)] = _0x84b6d6[_0x43fa05(0x510)](_0x43fa05(0x720)), _0x336a30[_0x43fa05(0x770)] = _0x84b6d6['getDefineByName'](_0x43fa05(0x714)), _0x336a30[_0x43fa05(0x771)] = _0x84b6d6[_0x43fa05(0x510)]('PARALLAXTEXTURE'), _0x336a30[_0x43fa05(0x772)] = _0x84b6d6[_0x43fa05(0x510)](_0x43fa05(0x773)), _0x336a30[_0x43fa05(0x774)] = _0x84b6d6['getDefineByName']('EMISSION'), _0x336a30[_0x43fa05(0x775)] = _0x84b6d6[_0x43fa05(0x510)](_0x43fa05(0x776)), _0x336a30[_0x43fa05(0x777)] = _0x84b6d6[_0x43fa05(0x510)](_0x43fa05(0x778)), _0x336a30[_0x43fa05(0x779)] = _0x84b6d6[_0x43fa05(0x510)](_0x43fa05(0x77a)), _0x336a30[_0x43fa05(0x77b)] = _0x84b6d6[_0x43fa05(0x510)](_0x43fa05(0x77c));
        }
        get ['albedoColor']() {
            var _0x58d2b7 = _0x5659be;
            return this[_0x58d2b7(0x4e0)]['getVector'](_0x336a30['ALBEDOCOLOR']);
        }
        set [_0x5659be(0x6e9)](_0x38a6e3) {
            var _0x44ae3c = _0x5659be;
            this[_0x44ae3c(0x4e0)][_0x44ae3c(0x49d)](_0x336a30['ALBEDOCOLOR'], _0x38a6e3);
        }
        get [_0x5659be(0x712)]() {
            var _0x4f88ca = _0x5659be;
            return this['_shaderValues']['getTexture'](_0x336a30[_0x4f88ca(0x720)]);
        }
        set [_0x5659be(0x712)](_0x23f8bb) {
            var _0xfa2f0f = _0x5659be;
            if (_0x23f8bb)
                this['_shaderValues'][_0xfa2f0f(0x62c)](_0x336a30[_0xfa2f0f(0x76f)]);
            else
                this[_0xfa2f0f(0x4e0)]['removeDefine'](_0x336a30[_0xfa2f0f(0x76f)]);
            this['_shaderValues'][_0xfa2f0f(0x4a2)](_0x336a30[_0xfa2f0f(0x720)], _0x23f8bb);
        }
        get ['normalTexture']() {
            var _0x31a355 = _0x5659be;
            return this['_shaderValues']['getTexture'](_0x336a30[_0x31a355(0x714)]);
        }
        set [_0x5659be(0x713)](_0xd394a) {
            var _0x2034b2 = _0x5659be;
            _0xd394a ? this[_0x2034b2(0x4e0)][_0x2034b2(0x62c)](_0x336a30[_0x2034b2(0x770)]) : this['_shaderValues'][_0x2034b2(0x493)](_0x336a30[_0x2034b2(0x770)]), this[_0x2034b2(0x4e0)]['setTexture'](_0x336a30[_0x2034b2(0x714)], _0xd394a);
        }
        get [_0x5659be(0x77d)]() {
            var _0x38cf25 = _0x5659be;
            return this['_shaderValues'][_0x38cf25(0x498)](_0x336a30[_0x38cf25(0x76d)]);
        }
        set [_0x5659be(0x77d)](_0x2275bf) {
            var _0x499802 = _0x5659be;
            this[_0x499802(0x4e0)][_0x499802(0x4af)](_0x336a30['NORMALSCALE'], _0x2275bf);
        }
        get [_0x5659be(0x77e)]() {
            var _0x2bacf = _0x5659be;
            return this[_0x2bacf(0x4e0)][_0x2bacf(0x4a4)](_0x336a30[_0x2bacf(0x77f)]);
        }
        set ['parallaxTexture'](_0x1ad881) {
            var _0x4e0508 = _0x5659be;
            if (_0x1ad881)
                this[_0x4e0508(0x4e0)][_0x4e0508(0x62c)](_0x336a30['SHADERDEFINE_PARALLAXTEXTURE']);
            else
                this[_0x4e0508(0x4e0)][_0x4e0508(0x493)](_0x336a30[_0x4e0508(0x771)]);
            this[_0x4e0508(0x4e0)][_0x4e0508(0x4a2)](_0x336a30[_0x4e0508(0x77f)], _0x1ad881);
        }
        get [_0x5659be(0x780)]() {
            var _0x8f22df = _0x5659be;
            return this[_0x8f22df(0x4e0)][_0x8f22df(0x498)](_0x336a30[_0x8f22df(0x76e)]);
        }
        set [_0x5659be(0x780)](_0x35119d) {
            var _0x31759e = _0x5659be;
            this[_0x31759e(0x4e0)][_0x31759e(0x4af)](_0x336a30[_0x31759e(0x76e)], Math[_0x31759e(0x205)](0.005, Math[_0x31759e(0x204)](0.08, _0x35119d)));
        }
        get [_0x5659be(0x781)]() {
            var _0x41b339 = _0x5659be;
            return this['_shaderValues'][_0x41b339(0x4a4)](_0x336a30[_0x41b339(0x773)]);
        }
        set ['occlusionTexture'](_0x45e2e9) {
            var _0xd1efac = _0x5659be;
            if (_0x45e2e9)
                this[_0xd1efac(0x4e0)][_0xd1efac(0x62c)](_0x336a30[_0xd1efac(0x772)]);
            else
                this['_shaderValues'][_0xd1efac(0x493)](_0x336a30[_0xd1efac(0x772)]);
            this['_shaderValues']['setTexture'](_0x336a30[_0xd1efac(0x773)], _0x45e2e9);
        }
        get [_0x5659be(0x782)]() {
            var _0x12bced = _0x5659be;
            return this['_shaderValues']['getNumber'](_0x336a30[_0x12bced(0x76c)]);
        }
        set [_0x5659be(0x782)](_0x594e16) {
            var _0x3f22a2 = _0x5659be;
            this[_0x3f22a2(0x4e0)][_0x3f22a2(0x4af)](_0x336a30[_0x3f22a2(0x76c)], Math[_0x3f22a2(0x205)](0x0, Math[_0x3f22a2(0x204)](0x1, _0x594e16)));
        }
        get [_0x5659be(0x783)]() {
            var _0x25fd08 = _0x5659be;
            return this[_0x25fd08(0x4e0)][_0x25fd08(0x498)](_0x336a30[_0x25fd08(0x76b)]);
        }
        set [_0x5659be(0x783)](_0x53e5b5) {
            var _0x17c91e = _0x5659be;
            this[_0x17c91e(0x4e0)][_0x17c91e(0x4af)](_0x336a30[_0x17c91e(0x76b)], Math[_0x17c91e(0x205)](0x0, Math[_0x17c91e(0x204)](0x1, _0x53e5b5)));
        }
        get [_0x5659be(0x784)]() {
            var _0x2bc321 = _0x5659be;
            return this[_0x2bc321(0x4e0)][_0x2bc321(0x498)](_0x336a30[_0x2bc321(0x785)]);
        }
        set [_0x5659be(0x784)](_0x419fb2) {
            var _0x577820 = _0x5659be;
            this[_0x577820(0x4e0)][_0x577820(0x4af)](_0x336a30[_0x577820(0x785)], Math[_0x577820(0x205)](0x0, Math[_0x577820(0x204)](0x1, _0x419fb2)));
        }
        get ['enableEmission']() {
            var _0x180774 = _0x5659be;
            return this['_shaderValues'][_0x180774(0x494)](_0x336a30[_0x180774(0x774)]);
        }
        set ['enableEmission'](_0x4263b0) {
            var _0x38f803 = _0x5659be;
            if (_0x4263b0)
                this[_0x38f803(0x4e0)]['addDefine'](_0x336a30[_0x38f803(0x774)]);
            else
                this[_0x38f803(0x4e0)][_0x38f803(0x493)](_0x336a30[_0x38f803(0x774)]);
        }
        get ['emissionColor']() {
            var _0x16e849 = _0x5659be;
            return this['_shaderValues'][_0x16e849(0x49c)](_0x336a30[_0x16e849(0x786)]);
        }
        set [_0x5659be(0x787)](_0x4fe7a5) {
            var _0x3de2bd = _0x5659be;
            this[_0x3de2bd(0x4e0)][_0x3de2bd(0x49d)](_0x336a30[_0x3de2bd(0x786)], _0x4fe7a5);
        }
        get [_0x5659be(0x788)]() {
            var _0x3e5eb5 = _0x5659be;
            return this[_0x3e5eb5(0x4e0)][_0x3e5eb5(0x4a4)](_0x336a30['EMISSIONTEXTURE']);
        }
        set [_0x5659be(0x788)](_0x438023) {
            var _0x1f905d = _0x5659be;
            if (_0x438023)
                this[_0x1f905d(0x4e0)][_0x1f905d(0x62c)](_0x336a30[_0x1f905d(0x775)]);
            else
                this['_shaderValues']['removeDefine'](_0x336a30[_0x1f905d(0x775)]);
            this[_0x1f905d(0x4e0)]['setTexture'](_0x336a30['EMISSIONTEXTURE'], _0x438023);
        }
        get ['tilingOffset']() {
            var _0x2739d6 = _0x5659be;
            return this[_0x2739d6(0x4e0)][_0x2739d6(0x49c)](_0x336a30[_0x2739d6(0x6dc)]);
        }
        set [_0x5659be(0x6f6)](_0x4ad25f) {
            var _0x4f0620 = _0x5659be;
            _0x4ad25f ? this['_shaderValues'][_0x4f0620(0x49d)](_0x336a30[_0x4f0620(0x6dc)], _0x4ad25f) : this['_shaderValues'][_0x4f0620(0x49c)](_0x336a30[_0x4f0620(0x6dc)])[_0x4f0620(0x1fa)](0x1, 0x1, 0x0, 0x0);
        }
        set [_0x5659be(0x6fc)](_0xd810c0) {
            var _0x3439e8 = _0x5659be;
            switch (_0xd810c0) {
            case _0x71dec4['PBRRenderMode'][_0x3439e8(0x766)]:
                this['alphaTest'] = ![], this[_0x3439e8(0x6ae)] = _0x4bfb48['RENDERQUEUE_OPAQUE'], this[_0x3439e8(0x698)] = !![], this[_0x3439e8(0x696)] = _0x2aa393[_0x3439e8(0x6ba)], this[_0x3439e8(0x695)] = _0x2aa393['BLEND_DISABLE'], this[_0x3439e8(0x697)] = _0x2aa393[_0x3439e8(0x6d3)], this[_0x3439e8(0x4e0)]['removeDefine'](_0x336a30[_0x3439e8(0x777)]);
                break;
            case _0x71dec4[_0x3439e8(0x76a)][_0x3439e8(0x767)]:
                this['renderQueue'] = _0x4bfb48[_0x3439e8(0x6b0)], this[_0x3439e8(0x6a0)] = !![], this[_0x3439e8(0x698)] = !![], this[_0x3439e8(0x696)] = _0x2aa393[_0x3439e8(0x6ba)], this[_0x3439e8(0x695)] = _0x2aa393['BLEND_DISABLE'], this[_0x3439e8(0x697)] = _0x2aa393['DEPTHTEST_LESS'], this['_shaderValues']['removeDefine'](_0x336a30[_0x3439e8(0x777)]);
                break;
            case _0x71dec4[_0x3439e8(0x76a)][_0x3439e8(0x768)]:
                this[_0x3439e8(0x6ae)] = _0x4bfb48[_0x3439e8(0x6b1)], this['alphaTest'] = ![], this['depthWrite'] = ![], this[_0x3439e8(0x696)] = _0x2aa393[_0x3439e8(0x6ba)], this[_0x3439e8(0x695)] = _0x2aa393[_0x3439e8(0x6c9)], this['blendSrc'] = _0x2aa393[_0x3439e8(0x6ff)], this['blendDst'] = _0x2aa393[_0x3439e8(0x700)], this[_0x3439e8(0x697)] = _0x2aa393[_0x3439e8(0x6d3)], this[_0x3439e8(0x4e0)][_0x3439e8(0x493)](_0x336a30[_0x3439e8(0x777)]);
                break;
            case _0x71dec4[_0x3439e8(0x76a)][_0x3439e8(0x769)]:
                this[_0x3439e8(0x6ae)] = _0x4bfb48[_0x3439e8(0x6b1)], this[_0x3439e8(0x6a0)] = ![], this[_0x3439e8(0x698)] = ![], this[_0x3439e8(0x696)] = _0x2aa393[_0x3439e8(0x6ba)], this[_0x3439e8(0x695)] = _0x2aa393[_0x3439e8(0x6c9)], this['blendSrc'] = _0x2aa393['BLENDPARAM_ONE'], this[_0x3439e8(0x69b)] = _0x2aa393[_0x3439e8(0x700)], this[_0x3439e8(0x697)] = _0x2aa393['DEPTHTEST_LESS'], this[_0x3439e8(0x4e0)][_0x3439e8(0x62c)](_0x336a30[_0x3439e8(0x777)]);
                break;
            default:
                throw new Error(_0x3439e8(0x789));
            }
        }
    }
    _0x336a30['ALBEDOTEXTURE'] = _0x84b6d6['propertyNameToID'](_0x5659be(0x78a)), _0x336a30[_0x5659be(0x6da)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x73b)), _0x336a30[_0x5659be(0x6dc)] = _0x84b6d6[_0x5659be(0x526)]('u_TilingOffset'), _0x336a30[_0x5659be(0x714)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x722)), _0x336a30['NORMALSCALE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x78b)), _0x336a30[_0x5659be(0x76b)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x78c)), _0x336a30['SMOOTHNESSSCALE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x78d)), _0x336a30['OCCLUSIONTEXTURE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x78e)), _0x336a30['OCCLUSIONSTRENGTH'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x78f)), _0x336a30[_0x5659be(0x77f)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x790)), _0x336a30[_0x5659be(0x76e)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x791)), _0x336a30[_0x5659be(0x776)] = _0x84b6d6[_0x5659be(0x526)]('u_EmissionTexture'), _0x336a30['EMISSIONCOLOR'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x792)), _0x336a30[_0x5659be(0x793)] = _0x71dec4[_0x5659be(0x21d)][_0x5659be(0x21b)];
    var _0x3f58c6 = _0x5659be(0x794), _0x1eea13 = _0x5659be(0x795), _0x5a6ee1 = _0x5659be(0x796), _0x4926e0 = _0x5659be(0x797), _0x1d34b7 = _0x5659be(0x798), _0x55280a = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a#include\x20\x22DepthNormalUtil.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec4\x20depthNormals;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_FragColor=depthNormalsFragment(depthNormals);\x0d\x0a}';
    class _0x2ac10e {
        constructor() {
            var _0x29d099 = _0x5659be;
            this[_0x29d099(0x799)] = -0x1;
        }
    }
    class _0x5c7b6f extends _0x218b83[_0x5659be(0x315)] {
        constructor(_0x5ed232, _0x4283ba, _0x428356, _0x97f96a, _0x3cec1a) {
            var _0x51b3f7 = _0x5659be;
            super(), this[_0x51b3f7(0x79a)] = [], this[_0x51b3f7(0x5f7)] = -0x1, this[_0x51b3f7(0x5fa)] = -0x1, this[_0x51b3f7(0x79b)] = _0x5ed232, this[_0x51b3f7(0x79c)] = _0x4283ba, this['_attributeMap'] = _0x428356, this['_uniformMap'] = _0x97f96a, this[_0x51b3f7(0x79d)] = _0x3cec1a, this['_globaluniformMap'] = {}, this['_create'](), this['lock'] = !![];
        }
        [_0x5659be(0x5d2)]() {
            var _0x54dbb6 = _0x5659be, _0xc09f95 = _0x218b83[_0x54dbb6(0x2f3)]['instance'];
            this[_0x54dbb6(0x79e)] = _0xc09f95['createProgram'](), this[_0x54dbb6(0x79f)] = this[_0x54dbb6(0x7a0)](_0xc09f95, this[_0x54dbb6(0x79b)], _0xc09f95[_0x54dbb6(0x7a1)]), this[_0x54dbb6(0x7a2)] = this[_0x54dbb6(0x7a0)](_0xc09f95, this[_0x54dbb6(0x79c)], _0xc09f95['FRAGMENT_SHADER']), _0xc09f95[_0x54dbb6(0x7a3)](this[_0x54dbb6(0x79e)], this[_0x54dbb6(0x79f)]), _0xc09f95[_0x54dbb6(0x7a3)](this[_0x54dbb6(0x79e)], this[_0x54dbb6(0x7a2)]);
            for (var _0x5858b7 in this['_attributeMap'])
                _0xc09f95['bindAttribLocation'](this['_program'], this['_attributeMap'][_0x5858b7], _0x5858b7);
            _0xc09f95[_0x54dbb6(0x7a4)](this[_0x54dbb6(0x79e)]);
            if (!_0x218b83[_0x54dbb6(0x308)]['isConchApp'] && _0x84b6d6[_0x54dbb6(0x546)] && !_0xc09f95[_0x54dbb6(0x7a5)](this[_0x54dbb6(0x79e)], _0xc09f95['LINK_STATUS']))
                throw _0xc09f95['getProgramInfoLog'](this[_0x54dbb6(0x79e)]);
            var _0x486061 = [], _0x44451b = [], _0x449386 = [], _0x241605 = [], _0x43f6c5 = [];
            this[_0x54dbb6(0x7a6)] = [];
            var _0x1dfaf6 = _0xc09f95['getProgramParameter'](this[_0x54dbb6(0x79e)], _0xc09f95['ACTIVE_UNIFORMS']);
            _0x218b83[_0x54dbb6(0x3fe)]['useProgram'](_0xc09f95, this[_0x54dbb6(0x79e)]), this[_0x54dbb6(0x7a7)] = 0x0;
            var _0x402ae6, _0x4fe9aa, _0x16b48a;
            for (_0x4fe9aa = 0x0; _0x4fe9aa < _0x1dfaf6; _0x4fe9aa++) {
                var _0x215ab4 = _0xc09f95[_0x54dbb6(0x7a8)](this['_program'], _0x4fe9aa), _0x527824 = _0x215ab4[_0x54dbb6(0x2a5)];
                _0x402ae6 = new _0x2ac10e(), _0x402ae6[_0x54dbb6(0x7a9)] = _0xc09f95[_0x54dbb6(0x7aa)](this['_program'], _0x527824);
                _0x527824[_0x54dbb6(0x384)](_0x54dbb6(0x7ab)) > 0x0 ? (_0x402ae6[_0x54dbb6(0x2a5)] = _0x527824 = _0x527824[_0x54dbb6(0x2eb)](0x0, _0x527824[_0x54dbb6(0x1ff)] - 0x3), _0x402ae6[_0x54dbb6(0x7ac)] = !![]) : (_0x402ae6[_0x54dbb6(0x2a5)] = _0x527824, _0x402ae6[_0x54dbb6(0x7ac)] = ![]);
                _0x402ae6[_0x54dbb6(0x2ae)] = _0x215ab4[_0x54dbb6(0x2ae)], this[_0x54dbb6(0x7ad)](_0x402ae6);
                var _0x31690d = this[_0x54dbb6(0x522)][_0x527824];
                if (_0x31690d != null) {
                    _0x402ae6['dataOffset'] = _0x84b6d6['propertyNameToID'](_0x527824);
                    switch (_0x31690d) {
                    case _0x84b6d6[_0x54dbb6(0x7ae)]:
                        _0x43f6c5[_0x54dbb6(0x298)](_0x402ae6);
                        break;
                    case _0x84b6d6[_0x54dbb6(0x540)]:
                        _0x241605[_0x54dbb6(0x298)](_0x402ae6);
                        break;
                    case _0x84b6d6['PERIOD_SPRITE']:
                        _0x449386['push'](_0x402ae6);
                        break;
                    case _0x84b6d6[_0x54dbb6(0x542)]:
                        _0x44451b[_0x54dbb6(0x298)](_0x402ae6);
                        break;
                    case _0x84b6d6[_0x54dbb6(0x543)]:
                        _0x486061[_0x54dbb6(0x298)](_0x402ae6);
                        break;
                    default:
                        throw new Error(_0x54dbb6(0x7af));
                    }
                } else
                    _0x402ae6['dataOffset'] = _0x84b6d6[_0x54dbb6(0x526)](_0x527824), this[_0x54dbb6(0x7b0)][_0x527824] = _0x84b6d6[_0x54dbb6(0x543)], _0x486061[_0x54dbb6(0x298)](_0x402ae6);
            }
            this[_0x54dbb6(0x5e1)] = _0x218b83[_0x54dbb6(0x2f3)]['instance'][_0x54dbb6(0x7b1)](_0x486061[_0x54dbb6(0x1ff)] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x4fe9aa = 0x0, _0x16b48a = _0x486061[_0x54dbb6(0x1ff)]; _0x4fe9aa < _0x16b48a; _0x4fe9aa++)
                this[_0x54dbb6(0x5e1)][_0x54dbb6(0x7b2)](_0x486061[_0x4fe9aa]);
            this[_0x54dbb6(0x5e3)] = _0x218b83[_0x54dbb6(0x2f3)][_0x54dbb6(0x2f4)][_0x54dbb6(0x7b1)](_0x44451b[_0x54dbb6(0x1ff)] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x4fe9aa = 0x0, _0x16b48a = _0x44451b[_0x54dbb6(0x1ff)]; _0x4fe9aa < _0x16b48a; _0x4fe9aa++)
                this['_cameraUniformParamsMap']['addShaderUniform'](_0x44451b[_0x4fe9aa]);
            this[_0x54dbb6(0x5e2)] = _0x218b83[_0x54dbb6(0x2f3)][_0x54dbb6(0x2f4)][_0x54dbb6(0x7b1)](_0x449386[_0x54dbb6(0x1ff)] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x4fe9aa = 0x0, _0x16b48a = _0x449386[_0x54dbb6(0x1ff)]; _0x4fe9aa < _0x16b48a; _0x4fe9aa++)
                this[_0x54dbb6(0x5e2)][_0x54dbb6(0x7b2)](_0x449386[_0x4fe9aa]);
            this['_materialUniformParamsMap'] = _0x218b83[_0x54dbb6(0x2f3)]['instance'][_0x54dbb6(0x7b1)](_0x241605[_0x54dbb6(0x1ff)] * 0x4 * 0x5 + 0x4, 0x40, !![]);
            for (_0x4fe9aa = 0x0, _0x16b48a = _0x241605['length']; _0x4fe9aa < _0x16b48a; _0x4fe9aa++)
                this['_materialUniformParamsMap'][_0x54dbb6(0x7b2)](_0x241605[_0x4fe9aa]);
            this[_0x54dbb6(0x7a6)][_0x54dbb6(0x1ff)] = _0x43f6c5[_0x54dbb6(0x1ff)];
            for (_0x4fe9aa = 0x0, _0x16b48a = _0x43f6c5['length']; _0x4fe9aa < _0x16b48a; _0x4fe9aa++) {
                var _0x1d5aa6 = _0x43f6c5[_0x4fe9aa];
                this[_0x54dbb6(0x7a6)][_0x1d5aa6['dataOffset']] = _0x1d5aa6;
            }
            var _0xee92a3 = this[_0x54dbb6(0x79d)][_0x54dbb6(0x7b3)];
            for (var _0x537bd3 in _0xee92a3)
                this['_stateParamsMap'][_0xee92a3[_0x537bd3]] = _0x84b6d6[_0x54dbb6(0x526)](_0x537bd3);
        }
        [_0x5659be(0x7b4)](_0x441213, _0x31463c) {
            var _0x5e5751 = _0x5659be, _0x3145da = this[_0x5e5751(0x79a)][_0x31463c];
            if (_0x3145da == null)
                return null;
            else
                return _0x441213[_0x3145da];
        }
        [_0x5659be(0x32d)]() {
            var _0x57037a = _0x5659be;
            _0x218b83['LayaGL'][_0x57037a(0x2f4)]['deleteShader'](this[_0x57037a(0x79f)]), _0x218b83[_0x57037a(0x2f3)][_0x57037a(0x2f4)]['deleteShader'](this[_0x57037a(0x7a2)]), _0x218b83[_0x57037a(0x2f3)][_0x57037a(0x2f4)]['deleteProgram'](this[_0x57037a(0x79e)]), this[_0x57037a(0x79f)] = this[_0x57037a(0x7a2)] = this['_program'] = null, this[_0x57037a(0x423)](0x0), this[_0x57037a(0x7a7)] = 0x0;
        }
        [_0x5659be(0x7ad)](_0x38d756) {
            var _0x5b549a = _0x5659be, _0x1d3bdd = _0x218b83[_0x5b549a(0x2f3)]['instance'];
            _0x38d756[_0x5b549a(0x7b5)] = this;
            var _0x4e41d7 = _0x38d756[_0x5b549a(0x7ac)];
            switch (_0x38d756[_0x5b549a(0x2ae)]) {
            case _0x1d3bdd[_0x5b549a(0x7b6)]:
                _0x38d756[_0x5b549a(0x7b7)] = this[_0x5b549a(0x7b8)], _0x38d756['uploadedValue'] = new Array(0x1);
                break;
            case _0x1d3bdd['INT']:
                _0x38d756['fun'] = _0x4e41d7 ? this['_uniform1iv'] : this[_0x5b549a(0x7b8)], _0x38d756[_0x5b549a(0x7b9)] = new Array(0x1);
                break;
            case _0x1d3bdd[_0x5b549a(0x431)]:
                _0x38d756[_0x5b549a(0x7b7)] = _0x4e41d7 ? this[_0x5b549a(0x7ba)] : this[_0x5b549a(0x7bb)], _0x38d756[_0x5b549a(0x7b9)] = new Array(0x1);
                break;
            case _0x1d3bdd[_0x5b549a(0x7bc)]:
                _0x38d756[_0x5b549a(0x7b7)] = _0x4e41d7 ? this['_uniform_vec2v'] : this[_0x5b549a(0x7bd)], _0x38d756[_0x5b549a(0x7b9)] = new Array(0x2);
                break;
            case _0x1d3bdd[_0x5b549a(0x7be)]:
                _0x38d756['fun'] = _0x4e41d7 ? this[_0x5b549a(0x7bf)] : this[_0x5b549a(0x7c0)], _0x38d756[_0x5b549a(0x7b9)] = new Array(0x3);
                break;
            case _0x1d3bdd['FLOAT_VEC4']:
                _0x38d756['fun'] = _0x4e41d7 ? this[_0x5b549a(0x7c1)] : this[_0x5b549a(0x7c2)], _0x38d756['uploadedValue'] = new Array(0x4);
                break;
            case _0x1d3bdd[_0x5b549a(0x7c3)]:
                _0x38d756['fun'] = this['_uniformMatrix2fv'];
                break;
            case _0x1d3bdd[_0x5b549a(0x7c4)]:
                _0x38d756[_0x5b549a(0x7b7)] = this[_0x5b549a(0x7c5)];
                break;
            case _0x1d3bdd[_0x5b549a(0x7c6)]:
                _0x38d756[_0x5b549a(0x7b7)] = _0x4e41d7 ? this[_0x5b549a(0x7c7)] : this['_uniformMatrix4f'];
                break;
            case _0x1d3bdd[_0x5b549a(0x7c8)]:
            case _0x1d3bdd[_0x5b549a(0x7c9)]:
                _0x1d3bdd['uniform1i'](_0x38d756['location'], this[_0x5b549a(0x7a7)]), _0x38d756[_0x5b549a(0x799)] = _0x218b83['WebGLContext'][_0x5b549a(0x7ca)][this['_curActTexIndex']++], _0x38d756[_0x5b549a(0x7b7)] = this[_0x5b549a(0x7cb)];
                break;
            case 0x8b5f:
                _0x1d3bdd[_0x5b549a(0x7cc)](_0x38d756[_0x5b549a(0x7a9)], this['_curActTexIndex']), _0x38d756[_0x5b549a(0x799)] = _0x218b83[_0x5b549a(0x3fe)][_0x5b549a(0x7ca)][this[_0x5b549a(0x7a7)]++], _0x38d756[_0x5b549a(0x7b7)] = this[_0x5b549a(0x7cd)];
                break;
            case _0x1d3bdd[_0x5b549a(0x7ce)]:
                _0x1d3bdd[_0x5b549a(0x7cc)](_0x38d756[_0x5b549a(0x7a9)], this[_0x5b549a(0x7a7)]), _0x38d756[_0x5b549a(0x799)] = _0x218b83[_0x5b549a(0x3fe)][_0x5b549a(0x7ca)][this['_curActTexIndex']++], _0x38d756[_0x5b549a(0x7b7)] = this[_0x5b549a(0x7cf)];
                break;
            default:
                throw new Error(_0x5b549a(0x7d0));
            }
        }
        [_0x5659be(0x7a0)](_0x2abfd9, _0x200f89, _0x3cff8d) {
            var _0x3528c4 = _0x5659be, _0x5d20eb = _0x2abfd9['createShader'](_0x3cff8d);
            _0x2abfd9['shaderSource'](_0x5d20eb, _0x200f89), _0x2abfd9[_0x3528c4(0x535)](_0x5d20eb);
            if (_0x84b6d6['debugMode'] && !_0x2abfd9[_0x3528c4(0x7d1)](_0x5d20eb, _0x2abfd9[_0x3528c4(0x7d2)]))
                throw _0x2abfd9['getShaderInfoLog'](_0x5d20eb);
            return _0x5d20eb;
        }
        [_0x5659be(0x7bb)](_0x478c79, _0xb909a4) {
            var _0x4fdbd8 = _0x5659be, _0x47024a = _0x478c79['uploadedValue'];
            if (_0x47024a[0x0] !== _0xb909a4)
                return _0x218b83[_0x4fdbd8(0x2f3)]['instance'][_0x4fdbd8(0x7d3)](_0x478c79[_0x4fdbd8(0x7a9)], _0x47024a[0x0] = _0xb909a4), 0x1;
            return 0x0;
        }
        [_0x5659be(0x7ba)](_0x260f4e, _0x5a8195) {
            var _0x3065e5 = _0x5659be;
            if (_0x5a8195['length'] < 0x4) {
                var _0x4d65c0 = _0x260f4e['uploadedValue'];
                if (_0x4d65c0[0x0] !== _0x5a8195[0x0] || _0x4d65c0[0x1] !== _0x5a8195[0x1] || _0x4d65c0[0x2] !== _0x5a8195[0x2] || _0x4d65c0[0x3] !== _0x5a8195[0x3])
                    return _0x218b83[_0x3065e5(0x2f3)][_0x3065e5(0x2f4)][_0x3065e5(0x7d4)](_0x260f4e[_0x3065e5(0x7a9)], _0x5a8195), _0x4d65c0[0x0] = _0x5a8195[0x0], _0x4d65c0[0x1] = _0x5a8195[0x1], _0x4d65c0[0x2] = _0x5a8195[0x2], _0x4d65c0[0x3] = _0x5a8195[0x3], 0x1;
                return 0x0;
            } else
                return _0x218b83[_0x3065e5(0x2f3)][_0x3065e5(0x2f4)][_0x3065e5(0x7d4)](_0x260f4e[_0x3065e5(0x7a9)], _0x5a8195), 0x1;
        }
        ['_uniform_vec2'](_0xcdac96, _0x58da2e) {
            var _0x7d62e1 = _0x5659be, _0x12fd3f = _0xcdac96['uploadedValue'];
            if (_0x12fd3f[0x0] !== _0x58da2e['x'] || _0x12fd3f[0x1] !== _0x58da2e['y'])
                return _0x218b83[_0x7d62e1(0x2f3)][_0x7d62e1(0x2f4)]['uniform2f'](_0xcdac96['location'], _0x12fd3f[0x0] = _0x58da2e['x'], _0x12fd3f[0x1] = _0x58da2e['y']), 0x1;
            return 0x0;
        }
        [_0x5659be(0x7d5)](_0x4f12f1, _0x316718) {
            var _0x47dac2 = _0x5659be;
            if (_0x316718[_0x47dac2(0x1ff)] < 0x2) {
                var _0x28dcd8 = _0x4f12f1[_0x47dac2(0x7b9)];
                if (_0x28dcd8[0x0] !== _0x316718[0x0] || _0x28dcd8[0x1] !== _0x316718[0x1] || _0x28dcd8[0x2] !== _0x316718[0x2] || _0x28dcd8[0x3] !== _0x316718[0x3])
                    return _0x218b83[_0x47dac2(0x2f3)]['instance'][_0x47dac2(0x7d6)](_0x4f12f1[_0x47dac2(0x7a9)], _0x316718), _0x28dcd8[0x0] = _0x316718[0x0], _0x28dcd8[0x1] = _0x316718[0x1], _0x28dcd8[0x2] = _0x316718[0x2], _0x28dcd8[0x3] = _0x316718[0x3], 0x1;
                return 0x0;
            } else
                return _0x218b83[_0x47dac2(0x2f3)][_0x47dac2(0x2f4)]['uniform2fv'](_0x4f12f1['location'], _0x316718), 0x1;
        }
        [_0x5659be(0x7c0)](_0x2cf8f1, _0x240650) {
            var _0x5cf6a4 = _0x5659be, _0x4fb7d7 = _0x2cf8f1[_0x5cf6a4(0x7b9)];
            if (_0x4fb7d7[0x0] !== _0x240650['x'] || _0x4fb7d7[0x1] !== _0x240650['y'] || _0x4fb7d7[0x2] !== _0x240650['z'])
                return _0x218b83[_0x5cf6a4(0x2f3)][_0x5cf6a4(0x2f4)][_0x5cf6a4(0x7d7)](_0x2cf8f1['location'], _0x4fb7d7[0x0] = _0x240650['x'], _0x4fb7d7[0x1] = _0x240650['y'], _0x4fb7d7[0x2] = _0x240650['z']), 0x1;
            return 0x0;
        }
        ['_uniform_vec3v'](_0x3ad1e7, _0x302e5e) {
            var _0x579748 = _0x5659be;
            return _0x218b83[_0x579748(0x2f3)][_0x579748(0x2f4)][_0x579748(0x7d8)](_0x3ad1e7[_0x579748(0x7a9)], _0x302e5e), 0x1;
        }
        [_0x5659be(0x7c2)](_0x42eafb, _0x294d1d) {
            var _0x3f124e = _0x5659be, _0x5b90a8 = _0x42eafb['uploadedValue'];
            if (_0x5b90a8[0x0] !== _0x294d1d['x'] || _0x5b90a8[0x1] !== _0x294d1d['y'] || _0x5b90a8[0x2] !== _0x294d1d['z'] || _0x5b90a8[0x3] !== _0x294d1d['w'])
                return _0x218b83[_0x3f124e(0x2f3)][_0x3f124e(0x2f4)]['uniform4f'](_0x42eafb[_0x3f124e(0x7a9)], _0x5b90a8[0x0] = _0x294d1d['x'], _0x5b90a8[0x1] = _0x294d1d['y'], _0x5b90a8[0x2] = _0x294d1d['z'], _0x5b90a8[0x3] = _0x294d1d['w']), 0x1;
            return 0x0;
        }
        [_0x5659be(0x7c1)](_0x3f437c, _0x25f3de) {
            var _0x14ed96 = _0x5659be;
            return _0x218b83[_0x14ed96(0x2f3)][_0x14ed96(0x2f4)][_0x14ed96(0x7d9)](_0x3f437c[_0x14ed96(0x7a9)], _0x25f3de), 0x1;
        }
        [_0x5659be(0x7da)](_0xf08895, _0x43b864) {
            var _0x22a8a9 = _0x5659be;
            return _0x218b83[_0x22a8a9(0x2f3)][_0x22a8a9(0x2f4)]['uniformMatrix2fv'](_0xf08895[_0x22a8a9(0x7a9)], ![], _0x43b864), 0x1;
        }
        ['_uniformMatrix3fv'](_0x2fd210, _0x1ba8ca) {
            var _0x52ab0a = _0x5659be;
            return _0x218b83['LayaGL']['instance'][_0x52ab0a(0x7db)](_0x2fd210[_0x52ab0a(0x7a9)], ![], _0x1ba8ca), 0x1;
        }
        [_0x5659be(0x7dc)](_0x11b8fe, _0x1dac8) {
            var _0xde5b9f = _0x5659be, _0x5353f3 = _0x1dac8[_0xde5b9f(0x1f6)];
            return _0x218b83[_0xde5b9f(0x2f3)][_0xde5b9f(0x2f4)]['uniformMatrix4fv'](_0x11b8fe[_0xde5b9f(0x7a9)], ![], _0x5353f3), 0x1;
        }
        [_0x5659be(0x7c7)](_0x448ca0, _0x20b409) {
            var _0x1368a8 = _0x5659be;
            return _0x218b83[_0x1368a8(0x2f3)][_0x1368a8(0x2f4)][_0x1368a8(0x7dd)](_0x448ca0[_0x1368a8(0x7a9)], ![], _0x20b409), 0x1;
        }
        [_0x5659be(0x7b8)](_0x58ee05, _0x5a9140) {
            var _0x310ebf = _0x5659be, _0x45d9e4 = _0x58ee05[_0x310ebf(0x7b9)];
            if (_0x45d9e4[0x0] !== _0x5a9140)
                return _0x218b83[_0x310ebf(0x2f3)]['instance']['uniform1i'](_0x58ee05[_0x310ebf(0x7a9)], _0x45d9e4[0x0] = _0x5a9140), 0x1;
            return 0x0;
        }
        [_0x5659be(0x7de)](_0x4799f3, _0x525ec5) {
            var _0x40584d = _0x5659be;
            return _0x218b83[_0x40584d(0x2f3)][_0x40584d(0x2f4)][_0x40584d(0x7df)](_0x4799f3['location'], _0x525ec5), 0x1;
        }
        ['_uniform_ivec2'](_0x497705, _0x2f5768) {
            var _0x1b29b6 = _0x5659be, _0x460184 = _0x497705['uploadedValue'];
            if (_0x460184[0x0] !== _0x2f5768[0x0] || _0x460184[0x1] !== _0x2f5768[0x1])
                return _0x218b83[_0x1b29b6(0x2f3)][_0x1b29b6(0x2f4)]['uniform2i'](_0x497705['location'], _0x460184[0x0] = _0x2f5768[0x0], _0x460184[0x1] = _0x2f5768[0x1]), 0x1;
            return 0x0;
        }
        ['_uniform_ivec2v'](_0x5729b1, _0x41751f) {
            var _0x95f23a = _0x5659be;
            return _0x218b83['LayaGL'][_0x95f23a(0x2f4)][_0x95f23a(0x7e0)](_0x5729b1[_0x95f23a(0x7a9)], _0x41751f), 0x1;
        }
        ['_uniform_vec3i'](_0x42ecfd, _0x30844a) {
            var _0xaa3079 = _0x5659be, _0xf213b5 = _0x42ecfd[_0xaa3079(0x7b9)];
            if (_0xf213b5[0x0] !== _0x30844a[0x0] || _0xf213b5[0x1] !== _0x30844a[0x1] || _0xf213b5[0x2] !== _0x30844a[0x2])
                return _0x218b83[_0xaa3079(0x2f3)][_0xaa3079(0x2f4)]['uniform3i'](_0x42ecfd[_0xaa3079(0x7a9)], _0xf213b5[0x0] = _0x30844a[0x0], _0xf213b5[0x1] = _0x30844a[0x1], _0xf213b5[0x2] = _0x30844a[0x2]), 0x1;
            return 0x0;
        }
        ['_uniform_vec3vi'](_0x14e019, _0x43b180) {
            var _0x254847 = _0x5659be;
            return _0x218b83[_0x254847(0x2f3)][_0x254847(0x2f4)]['uniform3iv'](_0x14e019[_0x254847(0x7a9)], _0x43b180), 0x1;
        }
        ['_uniform_vec4i'](_0x5c9cd2, _0x332b11) {
            var _0x54b30e = _0x5659be, _0x2c3e4e = _0x5c9cd2[_0x54b30e(0x7b9)];
            if (_0x2c3e4e[0x0] !== _0x332b11[0x0] || _0x2c3e4e[0x1] !== _0x332b11[0x1] || _0x2c3e4e[0x2] !== _0x332b11[0x2] || _0x2c3e4e[0x3] !== _0x332b11[0x3])
                return _0x218b83[_0x54b30e(0x2f3)][_0x54b30e(0x2f4)]['uniform4i'](_0x5c9cd2['location'], _0x2c3e4e[0x0] = _0x332b11[0x0], _0x2c3e4e[0x1] = _0x332b11[0x1], _0x2c3e4e[0x2] = _0x332b11[0x2], _0x2c3e4e[0x3] = _0x332b11[0x3]), 0x1;
            return 0x0;
        }
        [_0x5659be(0x7e1)](_0x56f3cc, _0x1eb2be) {
            var _0x19a988 = _0x5659be;
            return _0x218b83[_0x19a988(0x2f3)][_0x19a988(0x2f4)]['uniform4iv'](_0x56f3cc['location'], _0x1eb2be), 0x1;
        }
        [_0x5659be(0x7cb)](_0x364320, _0x45b4a4) {
            var _0x3dceea = _0x5659be, _0x4e0d85 = _0x45b4a4[_0x3dceea(0x4d2)]() || _0x45b4a4[_0x3dceea(0x7e2)]['_getSource'](), _0x2562bd = _0x218b83[_0x3dceea(0x2f3)][_0x3dceea(0x2f4)];
            return _0x218b83[_0x3dceea(0x3fe)][_0x3dceea(0x7e3)](_0x2562bd, _0x364320['textureID']), _0x218b83[_0x3dceea(0x3fe)][_0x3dceea(0x3ff)](_0x2562bd, _0x2562bd[_0x3dceea(0x3e2)], _0x4e0d85), 0x0;
        }
        [_0x5659be(0x7cd)](_0x36ceae, _0x1c4130) {
            var _0x7eac4c = _0x5659be, _0x3c406c = _0x1c4130[_0x7eac4c(0x4d2)]() || _0x1c4130[_0x7eac4c(0x7e2)]['_getSource'](), _0x1239f1 = _0x218b83[_0x7eac4c(0x2f3)][_0x7eac4c(0x2f4)];
            return _0x218b83[_0x7eac4c(0x3fe)]['activeTexture'](_0x1239f1, _0x36ceae['textureID']), _0x218b83[_0x7eac4c(0x3fe)][_0x7eac4c(0x3ff)](_0x1239f1, WebGL2RenderingContext[_0x7eac4c(0x7e4)], _0x3c406c), 0x0;
        }
        [_0x5659be(0x7cf)](_0x1691c6, _0x2c34f9) {
            var _0x4acef5 = _0x5659be, _0x4835a7 = _0x2c34f9[_0x4acef5(0x4d2)]() || _0x2c34f9[_0x4acef5(0x7e2)]['_getSource'](), _0x5e52bf = _0x218b83[_0x4acef5(0x2f3)][_0x4acef5(0x2f4)];
            return _0x218b83[_0x4acef5(0x3fe)][_0x4acef5(0x7e3)](_0x5e52bf, _0x1691c6[_0x4acef5(0x799)]), _0x218b83['WebGLContext'][_0x4acef5(0x3ff)](_0x5e52bf, _0x5e52bf[_0x4acef5(0x7e5)], _0x4835a7), 0x0;
        }
        [_0x5659be(0x444)]() {
            var _0x5cf1bb = _0x5659be;
            return _0x218b83[_0x5cf1bb(0x3fe)][_0x5cf1bb(0x7e6)](_0x218b83[_0x5cf1bb(0x2f3)]['instance'], this[_0x5cf1bb(0x79e)]);
        }
        ['uploadUniforms'](_0x45bcdd, _0xc82b19, _0x56fcb4) {
            var _0x5119a2 = _0x5659be;
            _0x218b83[_0x5119a2(0x500)][_0x5119a2(0x7e7)] += _0x218b83[_0x5119a2(0x7e8)][_0x5119a2(0x7e9)](_0x218b83[_0x5119a2(0x2f3)][_0x5119a2(0x2f4)], _0x45bcdd, _0xc82b19, _0x56fcb4);
        }
        ['uploadRenderStateBlendDepth'](_0x3769dd) {
            var _0x86288d = _0x5659be, _0x2b6bd6 = _0x218b83[_0x86288d(0x2f3)][_0x86288d(0x2f4)], _0x22570c = this[_0x86288d(0x79d)][_0x86288d(0x7ea)], _0x33ed1b = _0x3769dd['getData'](), _0x26c202 = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6['RENDER_STATE_DEPTH_WRITE']), _0x405c9a = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6[_0x86288d(0x53e)]), _0x1c8d9f = this['_getRenderState'](_0x33ed1b, _0x84b6d6[_0x86288d(0x536)]);
            _0x26c202 == null && (_0x26c202 = _0x22570c['depthWrite']), _0x405c9a == null && (_0x405c9a = _0x22570c[_0x86288d(0x697)]), _0x1c8d9f == null && (_0x1c8d9f = _0x22570c[_0x86288d(0x695)]), _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7eb)](_0x2b6bd6, _0x26c202);
            if (_0x405c9a === _0x2aa393[_0x86288d(0x6d2)])
                _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7ec)](_0x2b6bd6, ![]);
            else
                _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7ec)](_0x2b6bd6, !![]), _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7ed)](_0x2b6bd6, _0x405c9a);
            switch (_0x1c8d9f) {
            case _0x2aa393['BLEND_DISABLE']:
                _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7ee)](_0x2b6bd6, ![]);
                break;
            case _0x2aa393[_0x86288d(0x6c9)]:
                var _0x2f3cfd = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6[_0x86288d(0x7ef)]), _0x2d37d2 = this['_getRenderState'](_0x33ed1b, _0x84b6d6[_0x86288d(0x537)]), _0x3326d2 = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6['RENDER_STATE_BLEND_DST']);
                _0x2f3cfd == null && (_0x2f3cfd = _0x22570c[_0x86288d(0x6c1)]), _0x2d37d2 == null && (_0x2d37d2 = _0x22570c[_0x86288d(0x69a)]), _0x3326d2 == null && (_0x3326d2 = _0x22570c[_0x86288d(0x69c)]), _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7ee)](_0x2b6bd6, !![]), _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7f0)](_0x2b6bd6, _0x2f3cfd), _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7f1)](_0x2b6bd6, _0x2d37d2, _0x3326d2);
                break;
            case _0x2aa393[_0x86288d(0x7f2)]:
                var _0x15d6fb = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6['RENDER_STATE_BLEND_EQUATION_RGB']), _0x5e7bfa = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6['RENDER_STATE_BLEND_EQUATION_ALPHA']), _0x5d291d = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6[_0x86288d(0x539)]), _0x4f0a73 = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6['RENDER_STATE_BLEND_DST_RGB']), _0x27f01f = this['_getRenderState'](_0x33ed1b, _0x84b6d6[_0x86288d(0x53a)]), _0x3f915d = this[_0x86288d(0x7b4)](_0x33ed1b, _0x84b6d6['RENDER_STATE_BLEND_DST_ALPHA']);
                _0x15d6fb == null && (_0x15d6fb = _0x22570c[_0x86288d(0x6c3)]), _0x5e7bfa == null && (_0x5e7bfa = _0x22570c['blendEquationAlpha']), _0x5d291d == null && (_0x5d291d = _0x22570c[_0x86288d(0x6c6)]), _0x4f0a73 == null && (_0x4f0a73 = _0x22570c[_0x86288d(0x6be)]), _0x27f01f == null && (_0x27f01f = _0x22570c[_0x86288d(0x6bf)]), _0x3f915d == null && (_0x3f915d = _0x22570c[_0x86288d(0x6c7)]), _0x218b83[_0x86288d(0x3fe)][_0x86288d(0x7ee)](_0x2b6bd6, !![]), _0x218b83['WebGLContext'][_0x86288d(0x7f3)](_0x2b6bd6, _0x15d6fb, _0x5e7bfa), _0x218b83[_0x86288d(0x3fe)]['setBlendFuncSeperate'](_0x2b6bd6, _0x5d291d, _0x4f0a73, _0x27f01f, _0x3f915d);
                break;
            }
        }
        [_0x5659be(0x62e)](_0x3846f0, _0x4effda, _0x5eb662) {
            var _0x27af12 = _0x5659be, _0x2fc815 = _0x218b83[_0x27af12(0x2f3)][_0x27af12(0x2f4)], _0x21b925 = this[_0x27af12(0x79d)][_0x27af12(0x7ea)], _0x57b0f8 = _0x3846f0[_0x27af12(0x307)](), _0x41356c = this[_0x27af12(0x7b4)](_0x57b0f8, _0x84b6d6[_0x27af12(0x7f4)]);
            _0x41356c == null && (_0x41356c = _0x21b925[_0x27af12(0x696)]);
            var _0x1fade2;
            switch (_0x41356c) {
            case _0x2aa393['CULL_NONE']:
                _0x218b83[_0x27af12(0x3fe)]['setCullFace'](_0x2fc815, ![]);
                break;
            case _0x2aa393['CULL_FRONT']:
                _0x218b83[_0x27af12(0x3fe)][_0x27af12(0x7f5)](_0x2fc815, !![]);
                if (_0x4effda) {
                    if (_0x5eb662)
                        _0x1fade2 = _0x2fc815[_0x27af12(0x7f6)];
                    else
                        _0x1fade2 = _0x2fc815['CW'];
                } else {
                    if (_0x5eb662)
                        _0x1fade2 = _0x2fc815['CW'];
                    else
                        _0x1fade2 = _0x2fc815[_0x27af12(0x7f6)];
                }
                _0x218b83[_0x27af12(0x3fe)][_0x27af12(0x7f7)](_0x2fc815, _0x1fade2);
                break;
            case _0x2aa393['CULL_BACK']:
                _0x218b83[_0x27af12(0x3fe)][_0x27af12(0x7f5)](_0x2fc815, !![]);
                if (_0x4effda) {
                    if (_0x5eb662)
                        _0x1fade2 = _0x2fc815['CW'];
                    else
                        _0x1fade2 = _0x2fc815[_0x27af12(0x7f6)];
                } else {
                    if (_0x5eb662)
                        _0x1fade2 = _0x2fc815[_0x27af12(0x7f6)];
                    else
                        _0x1fade2 = _0x2fc815['CW'];
                }
                _0x218b83[_0x27af12(0x3fe)][_0x27af12(0x7f7)](_0x2fc815, _0x1fade2);
                break;
            }
        }
        [_0x5659be(0x7f8)](_0x52f21f, _0x3fe993) {
            var _0x37d8d0 = _0x5659be;
            _0x218b83[_0x37d8d0(0x500)]['shaderCall'] += _0x218b83['LayaGLRunner'][_0x37d8d0(0x7f8)](_0x218b83[_0x37d8d0(0x2f3)]['instance'], this[_0x37d8d0(0x7a6)], _0x52f21f, _0x3fe993);
        }
        [_0x5659be(0x7f9)](_0x3524ba, _0xe69651) {
            var _0x5d6278 = _0x5659be;
            return _0x218b83['LayaGL'][_0x5d6278(0x2f4)]['uniformMatrix2fvEx'](_0x3524ba[_0x5d6278(0x7a9)], ![], _0xe69651), 0x1;
        }
        [_0x5659be(0x7fa)](_0x2d2b01, _0x3b7e5) {
            var _0x36c74b = _0x5659be;
            return _0x218b83['LayaGL'][_0x36c74b(0x2f4)]['uniformMatrix3fvEx'](_0x2d2b01[_0x36c74b(0x7a9)], ![], _0x3b7e5), 0x1;
        }
        [_0x5659be(0x7fb)](_0x25efd6, _0x523e25) {
            var _0x3f3ef8 = _0x5659be;
            return _0x218b83['LayaGL'][_0x3f3ef8(0x2f4)][_0x3f3ef8(0x7fc)](_0x25efd6[_0x3f3ef8(0x7a9)], ![], _0x523e25), 0x1;
        }
    }
    class _0x5ae7ed {
        constructor() {
            var _0x30b311 = _0x5659be;
            this[_0x30b311(0x1f6)] = [], this[_0x30b311(0x1ff)] = 0x0;
        }
        [_0x5659be(0x7fd)](_0x4efbd5) {
            var _0x1d50e9 = _0x5659be;
            if (this['length'] === this[_0x1d50e9(0x1f6)][_0x1d50e9(0x1ff)])
                this[_0x1d50e9(0x1f6)][_0x1d50e9(0x298)](_0x4efbd5);
            else
                this['elements'][this[_0x1d50e9(0x1ff)]] = _0x4efbd5;
        }
        [_0x5659be(0x201)](_0x518dc1) {
            var _0x5d1055 = _0x5659be;
            if (this[_0x5d1055(0x1ff)] === this['elements']['length'])
                this['elements'][_0x5d1055(0x298)](_0x518dc1);
            else
                this[_0x5d1055(0x1f6)][this[_0x5d1055(0x1ff)]] = _0x518dc1;
            this[_0x5d1055(0x1ff)]++;
        }
    }
    class _0x5d98a9 extends _0x5ae7ed {
        constructor() {
            super();
        }
        [_0x5659be(0x201)](_0x485e0d) {
            var _0x4c9a9d = _0x5659be, _0x4d5926 = _0x485e0d[_0x4c9a9d(0x7fe)]();
            if (_0x4d5926 !== -0x1)
                throw _0x4c9a9d(0x7ff) + _0x485e0d + '\x20has\x20\x20in\x20\x20SingletonList.';
            this[_0x4c9a9d(0x7fd)](_0x485e0d), _0x485e0d[_0x4c9a9d(0x800)](this[_0x4c9a9d(0x1ff)]++);
        }
        ['remove'](_0x1dd5ae) {
            var _0x377f9b = _0x5659be, _0x2ace40 = _0x1dd5ae['_getIndexInList']();
            this[_0x377f9b(0x1ff)]--;
            if (_0x2ace40 !== this[_0x377f9b(0x1ff)]) {
                var _0xf6af3c = this['elements'][this[_0x377f9b(0x1ff)]];
                this['elements'][_0x2ace40] = _0xf6af3c, _0xf6af3c[_0x377f9b(0x800)](_0x2ace40);
            }
            _0x1dd5ae[_0x377f9b(0x800)](-0x1);
        }
        [_0x5659be(0x496)]() {
            var _0x3bf82b = _0x5659be, _0x3a4bc7 = this['elements'];
            for (var _0xca3dca = 0x0, _0x3d4adb = this[_0x3bf82b(0x1ff)]; _0xca3dca < _0x3d4adb; _0xca3dca++)
                _0x3a4bc7[_0xca3dca][_0x3bf82b(0x800)](-0x1);
            this[_0x3bf82b(0x1ff)] = 0x0;
        }
        [_0x5659be(0x801)]() {
            var _0x2ead22 = _0x5659be;
            this[_0x2ead22(0x1f6)] = null, this[_0x2ead22(0x1ff)] = 0x0;
        }
    }
    class _0x4e3117 {
        constructor(_0x2a29d3 = 0x1, _0x5721fe = 0x1, _0x11302a = 0x1, _0x2aad11 = 0x1) {
            this['r'] = _0x2a29d3, this['g'] = _0x5721fe, this['b'] = _0x11302a, this['a'] = _0x2aad11;
        }
        static [_0x5659be(0x802)](_0x361639) {
            var _0x9c0769 = _0x5659be;
            if (_0x361639 <= 0.04045)
                return _0x361639 / 12.92;
            else {
                if (_0x361639 < 0x1)
                    return Math[_0x9c0769(0x2ef)]((_0x361639 + 0.055) / 1.055, 2.4);
                else
                    return Math[_0x9c0769(0x2ef)](_0x361639, 2.4);
            }
        }
        static ['linearToGammaSpace'](_0x4d80a1) {
            var _0x3c226f = _0x5659be;
            if (_0x4d80a1 <= 0x0)
                return 0x0;
            else {
                if (_0x4d80a1 <= 0.0031308)
                    return 12.92 * _0x4d80a1;
                else {
                    if (_0x4d80a1 <= 0x1)
                        return 1.055 * Math[_0x3c226f(0x2ef)](_0x4d80a1, 0.41666) - 0.055;
                    else
                        return Math[_0x3c226f(0x2ef)](_0x4d80a1, 0.41666);
                }
            }
        }
        [_0x5659be(0x803)](_0x1a40a4) {
            var _0x242463 = _0x5659be;
            _0x1a40a4['r'] = _0x4e3117[_0x242463(0x802)](this['r']), _0x1a40a4['g'] = _0x4e3117[_0x242463(0x802)](this['g']), _0x1a40a4['b'] = _0x4e3117[_0x242463(0x802)](this['b']);
        }
        [_0x5659be(0x804)](_0x429cd9) {
            var _0x592d9f = _0x5659be;
            _0x429cd9['r'] = _0x4e3117['linearToGammaSpace'](this['r']), _0x429cd9['g'] = _0x4e3117[_0x592d9f(0x805)](this['g']), _0x429cd9['b'] = _0x4e3117['linearToGammaSpace'](this['b']);
        }
        [_0x5659be(0x1f0)](_0x838bad) {
            var _0x24ceae = _0x838bad;
            _0x24ceae['r'] = this['r'], _0x24ceae['g'] = this['g'], _0x24ceae['b'] = this['b'], _0x24ceae['a'] = this['a'];
        }
        ['clone']() {
            var _0x1cefcb = _0x5659be, _0x5287d3 = new _0x4e3117();
            return this[_0x1cefcb(0x1f0)](_0x5287d3), _0x5287d3;
        }
        [_0x5659be(0x1f5)]() {
        }
    }
    _0x4e3117[_0x5659be(0x806)] = new _0x4e3117(0x1, 0x0, 0x0, 0x1), _0x4e3117['GREEN'] = new _0x4e3117(0x0, 0x1, 0x0, 0x1), _0x4e3117[_0x5659be(0x807)] = new _0x4e3117(0x0, 0x0, 0x1, 0x1), _0x4e3117[_0x5659be(0x808)] = new _0x4e3117(0x0, 0x1, 0x1, 0x1), _0x4e3117[_0x5659be(0x809)] = new _0x4e3117(0x1, 0.92, 0.016, 0x1), _0x4e3117[_0x5659be(0x80a)] = new _0x4e3117(0x1, 0x0, 0x1, 0x1), _0x4e3117['GRAY'] = new _0x4e3117(0.5, 0.5, 0.5, 0x1), _0x4e3117['WHITE'] = new _0x4e3117(0x1, 0x1, 0x1, 0x1), _0x4e3117[_0x5659be(0x80b)] = new _0x4e3117(0x0, 0x0, 0x0, 0x1);
    class _0x26f1a2 {
    }
    class _0x3ccc5f {
    }
    class _0x4b5e1d {
        static ['__init__']() {
        }
        static ['_drawTraversalCullingBound'](_0xfeb056, _0x7144e4) {
            var _0x144402 = _0x5659be, _0xaa8499 = _0xfeb056[_0x144402(0x1f6)];
            for (var _0x293a2f = 0x0, _0x20d17f = _0xfeb056[_0x144402(0x1ff)]; _0x293a2f < _0x20d17f; _0x293a2f++) {
                var _0x12373b = _0x4b5e1d[_0x144402(0x80c)];
                _0x12373b['r'] = 0x0, _0x12373b['g'] = 0x1, _0x12373b['b'] = 0x0, _0x12373b['a'] = 0x1, _0x108d81[_0x144402(0x2f8)](_0x7144e4, _0xaa8499[_0x293a2f][_0x144402(0x80d)][_0x144402(0x80e)](), _0x12373b);
            }
        }
        static [_0x5659be(0x80f)](_0x1f6f76, _0x1918d7, _0x8e1497, _0x41ef2a, _0x1b9b79, _0xe4f970, _0x44c47d) {
            var _0x23b984 = _0x5659be, _0x5c00b7 = _0x41ef2a[_0x23b984(0x1f6)], _0x1aebfe = _0x1f6f76[_0x23b984(0x810)], _0x4cc733 = _0x1f6f76[_0x23b984(0x59e)], _0x1b52fc = _0x1f6f76[_0x23b984(0x811)], _0x32577c = _0x218b83[_0x23b984(0x500)][_0x23b984(0x4da)];
            for (var _0x33fdc9 = 0x0, _0x89af94 = _0x41ef2a[_0x23b984(0x1ff)]; _0x33fdc9 < _0x89af94; _0x33fdc9++) {
                var _0x36da84 = _0x5c00b7[_0x33fdc9], _0x65cd99;
                if (_0x44c47d)
                    _0x65cd99 = _0x36da84['_castShadow'] && _0x36da84[_0x23b984(0x651)];
                else
                    _0x65cd99 = (Math[_0x23b984(0x2ef)](0x2, _0x36da84[_0x23b984(0x3d3)][_0x23b984(0x5bf)]) & _0x1b52fc) != 0x0 && _0x36da84[_0x23b984(0x651)];
                if (_0x65cd99) {
                    _0x218b83[_0x23b984(0x500)][_0x23b984(0x812)]++;
                    if (!_0x1f6f76['useOcclusionCulling'] || _0x36da84[_0x23b984(0x813)](_0x1aebfe, _0x8e1497)) {
                        _0x36da84[_0x23b984(0x814)] = _0x32577c, _0x36da84[_0x23b984(0x815)] = _0x3f70c5[_0x23b984(0x208)](_0x36da84['bounds'][_0x23b984(0x816)](), _0x4cc733);
                        var _0xb73cc3 = _0x36da84[_0x23b984(0x600)];
                        for (var _0x15887f = 0x0, _0x582f34 = _0xb73cc3[_0x23b984(0x1ff)]; _0x15887f < _0x582f34; _0x15887f++)
                            _0xb73cc3[_0x15887f][_0x23b984(0x3b3)](_0x1918d7, _0x8e1497, _0x1b9b79, _0xe4f970);
                    }
                }
            }
        }
        static [_0x5659be(0x817)](_0x13be3c, _0x53ebbd, _0x3dcee5, _0x4b36bc, _0x4dc100, _0x2dd853) {
            var _0x124c2a = _0x5659be, _0xa1cc32 = _0x53ebbd['_opaqueQueue'], _0x3f8a40 = _0x53ebbd[_0x124c2a(0x818)], _0x46c159 = _0x53ebbd[_0x124c2a(0x819)];
            _0x53ebbd[_0x124c2a(0x81a)]();
            var _0x468643 = _0x53ebbd['_octree'];
            _0x468643 && (_0x468643[_0x124c2a(0x81b)](), _0x468643[_0x124c2a(0x81c)](), _0x468643[_0x124c2a(0x81d)](_0x13be3c, _0x3dcee5, _0x4b36bc, _0x4dc100, _0x2dd853));
            _0x4b5e1d[_0x124c2a(0x80f)](_0x13be3c, _0x53ebbd, _0x3dcee5, _0x46c159, _0x4b36bc, _0x4dc100, _0x2dd853);
            if (_0x4b5e1d[_0x124c2a(0x23e)]) {
                var _0x2abfbd = _0x53ebbd[_0x124c2a(0x81e)];
                _0x2abfbd[_0x124c2a(0x496)](), _0x468643 && (_0x468643[_0x124c2a(0x81f)](_0x2abfbd), _0x468643['drawAllObjects'](_0x2abfbd)), _0x4b5e1d[_0x124c2a(0x820)](_0x46c159, _0x2abfbd);
            }
            var _0x31adf3 = _0xa1cc32[_0x124c2a(0x1f6)][_0x124c2a(0x1ff)];
            _0x31adf3 > 0x0 && _0xa1cc32['_quickSort'](0x0, _0x31adf3 - 0x1), _0x31adf3 = _0x3f8a40[_0x124c2a(0x1f6)]['length'], _0x31adf3 > 0x0 && _0x3f8a40[_0x124c2a(0x821)](0x0, _0x31adf3 - 0x1);
        }
        static ['cullingShadow'](_0x3029aa, _0x52a4c2, _0x1a0f49) {
            var _0x316686 = _0x5659be;
            _0x52a4c2[_0x316686(0x81a)]();
            var _0x4b103b = _0x52a4c2[_0x316686(0x822)];
            if (!_0x52a4c2[_0x316686(0x823)]) {
                var _0x1fef32 = _0x52a4c2[_0x316686(0x819)], _0x53bcfe = _0x3029aa[_0x316686(0x59e)], _0x24fdf4 = _0x1fef32[_0x316686(0x1f6)], _0x1d1ed7 = _0x218b83[_0x316686(0x500)][_0x316686(0x4da)];
                for (var _0xc3f682 = 0x0, _0x3c8132 = _0x1fef32[_0x316686(0x1ff)]; _0xc3f682 < _0x3c8132; _0xc3f682++) {
                    var _0x58523b = _0x24fdf4[_0xc3f682], _0x1603cf = _0x58523b[_0x316686(0x824)] && _0x58523b['_enable'];
                    if (_0x1603cf) {
                        _0x218b83[_0x316686(0x500)][_0x316686(0x812)]++;
                        let _0x1cce5e = _0x4b5e1d[_0x316686(0x825)](_0x58523b[_0x316686(0x80d)], _0x3029aa);
                        if (_0x1cce5e) {
                            _0x58523b[_0x316686(0x814)] = _0x1d1ed7, _0x58523b[_0x316686(0x815)] = _0x3f70c5[_0x316686(0x208)](_0x58523b[_0x316686(0x80d)][_0x316686(0x816)](), _0x53bcfe);
                            var _0x3037d3 = _0x58523b[_0x316686(0x600)];
                            for (var _0x476280 = 0x0, _0x1175af = _0x3037d3[_0x316686(0x1ff)]; _0x476280 < _0x1175af; _0x476280++)
                                _0x3037d3[_0x476280][_0x316686(0x3b3)](_0x52a4c2, _0x1a0f49, null, null);
                        }
                    }
                }
            } else {
                let _0x513fa4 = _0x52a4c2['_octree'];
                _0x513fa4[_0x316686(0x81b)](), _0x513fa4[_0x316686(0x81c)](), _0x513fa4[_0x316686(0x387)][_0x316686(0x826)](_0x3029aa, _0x1a0f49);
            }
            return _0x4b103b[_0x316686(0x1f6)][_0x316686(0x1ff)] > 0x0 ? !![] : ![];
        }
        static [_0x5659be(0x825)](_0xf0837, _0x11249c) {
            var _0x23b38e = _0x5659be, _0x4c9eb7 = _0x11249c[_0x23b38e(0x827)], _0x4be9af = _0x11249c['cullPlanes'], _0x1555c3 = _0xf0837['getMin'](), _0x87634 = _0xf0837[_0x23b38e(0x828)](), _0x5e5e56 = _0x1555c3['x'], _0x2b2f83 = _0x1555c3['y'], _0x1fcb88 = _0x1555c3['z'], _0x591b73 = _0x87634['x'], _0xaf6921 = _0x87634['y'], _0xaa352f = _0x87634['z'], _0x4c1723 = !![];
            for (var _0x1a9395 = 0x0; _0x1a9395 < _0x4c9eb7; _0x1a9395++) {
                var _0x2d8276 = _0x4be9af[_0x1a9395], _0x390efc = _0x2d8276[_0x23b38e(0x829)];
                if (_0x2d8276[_0x23b38e(0x208)] + _0x390efc['x'] * (_0x390efc['x'] < 0x0 ? _0x5e5e56 : _0x591b73) + _0x390efc['y'] * (_0x390efc['y'] < 0x0 ? _0x2b2f83 : _0xaf6921) + _0x390efc['z'] * (_0x390efc['z'] < 0x0 ? _0x1fcb88 : _0xaa352f) < 0x0) {
                    _0x4c1723 = ![];
                    break;
                }
            }
            return _0x4c1723;
        }
        static [_0x5659be(0x82a)](_0x16dc26, _0x361fb8, _0x50dcce) {
            var _0x560778 = _0x5659be, _0x7963e = _0x361fb8[_0x560778(0x822)];
            _0x361fb8[_0x560778(0x81a)]();
            if (!_0x361fb8['_octree']) {
                var _0x1ecfe4 = _0x361fb8['_renders'], _0x391f5f = _0x1ecfe4[_0x560778(0x1f6)], _0x3bc327 = _0x218b83[_0x560778(0x500)][_0x560778(0x4da)];
                for (var _0x1c9267 = 0x0, _0x2e323a = _0x1ecfe4[_0x560778(0x1ff)]; _0x1c9267 < _0x2e323a; _0x1c9267++) {
                    var _0x16144c = _0x391f5f[_0x1c9267], _0x118cec = _0x16144c[_0x560778(0x824)] && _0x16144c[_0x560778(0x651)];
                    if (_0x118cec) {
                        if (_0x16144c[_0x560778(0x813)](_0x16dc26['boundFrustum'], _0x50dcce)) {
                            var _0x4187e5 = _0x16144c[_0x560778(0x80d)];
                            _0x16144c[_0x560778(0x814)] = _0x3bc327, _0x16144c[_0x560778(0x815)] = _0x3f70c5[_0x560778(0x208)](_0x4187e5[_0x560778(0x816)](), _0x16dc26[_0x560778(0x59e)]);
                            var _0x43688a = _0x16144c['_renderElements'];
                            for (var _0x3347e6 = 0x0, _0x2d153a = _0x43688a['length']; _0x3347e6 < _0x2d153a; _0x3347e6++)
                                _0x43688a[_0x3347e6][_0x560778(0x3b3)](_0x361fb8, _0x50dcce, null, null);
                        }
                    }
                }
            } else {
                let _0x3fb4cf = _0x361fb8[_0x560778(0x823)];
                _0x3fb4cf[_0x560778(0x81b)](), _0x3fb4cf[_0x560778(0x81c)](), _0x3fb4cf[_0x560778(0x81d)](_0x16dc26, _0x50dcce, null, null, !![]);
            }
            return _0x7963e[_0x560778(0x1f6)][_0x560778(0x1ff)] > 0x0 ? !![] : ![];
        }
        static [_0x5659be(0x82b)](_0x2bdd22, _0x4cdf52, _0x51fa58, _0x2f5527, _0x4f4a4c, _0x2cf311) {
            var _0x531320 = _0x5659be, _0x3eb2f6, _0x11e08c, _0x239020, _0x2de41c = _0x4cdf52['_opaqueQueue'], _0x66a953 = _0x4cdf52[_0x531320(0x818)];
            _0x4cdf52['_clearRenderQueue']();
            var _0x26248d = _0x2f5527[_0x531320(0x1ff)], _0x402c90 = _0x2f5527[_0x531320(0x1f6)];
            for (_0x3eb2f6 = 0x0; _0x3eb2f6 < _0x26248d; _0x3eb2f6++) {
                _0x402c90[_0x3eb2f6][_0x531320(0x80d)], _0x402c90[_0x3eb2f6][_0x531320(0x82c)] && _0x402c90[_0x3eb2f6]['_updateForNative'](_0x51fa58);
            }
            _0x4b5e1d[_0x531320(0x82d)](_0x2bdd22[_0x531320(0x82e)], _0x4b5e1d[_0x531320(0x82f)], _0x4cdf52['_cullingBufferIndices'], _0x26248d, _0x4cdf52[_0x531320(0x830)]);
            var _0x86731c = _0x218b83[_0x531320(0x500)][_0x531320(0x4da)], _0x437002 = _0x51fa58[_0x531320(0x645)][_0x531320(0x3ca)][_0x531320(0x59e)];
            for (_0x3eb2f6 = 0x0; _0x3eb2f6 < _0x26248d; _0x3eb2f6++) {
                var _0x18c765 = _0x402c90[_0x3eb2f6];
                if (!_0x2bdd22[_0x531320(0x831)] || _0x2bdd22[_0x531320(0x832)](_0x18c765[_0x531320(0x3d3)][_0x531320(0x5bf)]) && _0x18c765['_enable'] && _0x4cdf52[_0x531320(0x830)][_0x3eb2f6]) {
                    _0x18c765['_renderMark'] = _0x86731c, _0x18c765[_0x531320(0x815)] = _0x3f70c5['distance'](_0x18c765[_0x531320(0x80d)][_0x531320(0x816)](), _0x437002);
                    var _0x459fd9 = _0x18c765[_0x531320(0x600)];
                    for (_0x11e08c = 0x0, _0x239020 = _0x459fd9[_0x531320(0x1ff)]; _0x11e08c < _0x239020; _0x11e08c++) {
                        var _0x365abd = _0x459fd9[_0x11e08c];
                        _0x365abd[_0x531320(0x3b3)](_0x4cdf52, _0x51fa58, _0x4f4a4c, _0x2cf311);
                    }
                }
            }
            var _0x37b957 = _0x2de41c[_0x531320(0x1f6)]['length'];
            _0x37b957 > 0x0 && _0x2de41c[_0x531320(0x821)](0x0, _0x37b957 - 0x1), _0x37b957 = _0x66a953[_0x531320(0x1f6)][_0x531320(0x1ff)], _0x37b957 > 0x0 && _0x66a953[_0x531320(0x821)](0x0, _0x37b957 - 0x1);
        }
        static ['cullingNative'](_0x586e9a, _0x550b6f, _0x1f298a, _0x5c6a69, _0x521c98) {
            var _0x4375eb = _0x5659be;
            return _0x218b83[_0x4375eb(0x2f3)][_0x4375eb(0x2f4)][_0x4375eb(0x833)](_0x586e9a, _0x550b6f, _0x1f298a, _0x5c6a69, _0x521c98);
        }
    }
    _0x4b5e1d[_0x5659be(0x80c)] = new _0x4e3117(), _0x4b5e1d[_0x5659be(0x834)] = new _0x26f1a2(), _0x4b5e1d[_0x5659be(0x835)] = new _0x3ccc5f(), _0x4b5e1d[_0x5659be(0x23e)] = ![];
    class _0x590827 {
    }
    class _0x45d6dc {
        constructor() {
            var _0x3be27e = _0x5659be;
            this['updateMark'] = -0x1, this['pointLightCount'] = 0x0, this[_0x3be27e(0x836)] = 0x0, this[_0x3be27e(0x837)] = [];
        }
    }
    class _0x43fad1 {
        constructor(_0x2182e1, _0x203d63, _0x17f0b4, _0x4b70a0) {
            var _0x52477a = _0x5659be;
            this[_0x52477a(0x37b)] = 0x0, this[_0x52477a(0x838)] = new _0x12bf01(), this['_xSlices'] = _0x2182e1, this[_0x52477a(0x839)] = _0x203d63, this[_0x52477a(0x83a)] = _0x17f0b4;
            var _0x49204 = _0x2182e1 * _0x203d63, _0x35234c = _0x17f0b4 * (0x1 + Math[_0x52477a(0x83b)](_0x4b70a0 / 0x4));
            this[_0x52477a(0x83c)] = _0x108d81[_0x52477a(0x2cc)](_0x49204, _0x35234c), this[_0x52477a(0x83c)]['lock'] = !![], this[_0x52477a(0x83d)] = new Float32Array(_0x49204 * _0x35234c * 0x4);
            var _0x421d2c = new Array(this[_0x52477a(0x83a)]);
            for (var _0xa5e0bd = 0x0; _0xa5e0bd < this['_zSlices']; _0xa5e0bd++) {
                _0x421d2c[_0xa5e0bd] = new Array(this[_0x52477a(0x839)]);
                for (var _0x5f2dec = 0x0; _0x5f2dec < this['_ySlices']; _0x5f2dec++) {
                    _0x421d2c[_0xa5e0bd][_0x5f2dec] = new Array(this['_xSlices']);
                    for (var _0x511c43 = 0x0; _0x511c43 < this['_xSlices']; _0x511c43++)
                        _0x421d2c[_0xa5e0bd][_0x5f2dec][_0x511c43] = new _0x45d6dc();
                }
            }
            this[_0x52477a(0x83e)] = _0x421d2c;
        }
        ['_placePointLightToClusters'](_0x5e5cb8, _0x5db89b) {
            var _0x595800 = _0x5659be, _0x334202 = this[_0x595800(0x83e)], _0x5c41de = this[_0x595800(0x37b)];
            for (var _0xeda454 = _0x5db89b[_0x595800(0x83f)], _0x3c03a5 = _0x5db89b['zMax']; _0xeda454 < _0x3c03a5; _0xeda454++) {
                for (var _0x19f826 = _0x5db89b[_0x595800(0x840)], _0x278973 = _0x5db89b[_0x595800(0x841)]; _0x19f826 < _0x278973; _0x19f826++) {
                    for (var _0x554fd2 = _0x5db89b[_0x595800(0x842)], _0x305832 = _0x5db89b[_0x595800(0x843)]; _0x554fd2 < _0x305832; _0x554fd2++) {
                        var _0x2dfe9d = _0x334202[_0xeda454][_0x19f826][_0x554fd2];
                        _0x2dfe9d['updateMark'] != _0x5c41de && (_0x2dfe9d[_0x595800(0x844)] = 0x0, _0x2dfe9d['spotLightCount'] = 0x0, _0x2dfe9d[_0x595800(0x368)] = _0x5c41de);
                        var _0x28273b = _0x2dfe9d[_0x595800(0x837)], _0x3fbf14 = _0x2dfe9d['pointLightCount']++;
                        if (_0x3fbf14 < _0x28273b['length'])
                            _0x28273b[_0x3fbf14] = _0x5e5cb8;
                        else
                            _0x28273b[_0x595800(0x298)](_0x5e5cb8);
                    }
                }
            }
        }
        [_0x5659be(0x845)](_0x53fb03, _0x5ddee4) {
            var _0x2713c0 = _0x5659be, _0x1e7580 = this[_0x2713c0(0x83e)], _0x145171 = this[_0x2713c0(0x37b)];
            for (var _0x32eb97 = _0x5ddee4[_0x2713c0(0x83f)], _0x3d5d03 = _0x5ddee4['zMax']; _0x32eb97 < _0x3d5d03; _0x32eb97++) {
                for (var _0x58b194 = _0x5ddee4[_0x2713c0(0x840)], _0x55ecdd = _0x5ddee4['yMax']; _0x58b194 < _0x55ecdd; _0x58b194++) {
                    for (var _0x389f18 = _0x5ddee4['xMin'], _0x239fd1 = _0x5ddee4[_0x2713c0(0x843)]; _0x389f18 < _0x239fd1; _0x389f18++) {
                        var _0x4927b5 = _0x1e7580[_0x32eb97][_0x58b194][_0x389f18];
                        _0x4927b5[_0x2713c0(0x368)] != _0x145171 && (_0x4927b5['pointLightCount'] = 0x0, _0x4927b5[_0x2713c0(0x836)] = 0x0, _0x4927b5[_0x2713c0(0x368)] = _0x145171);
                        var _0x644992 = _0x4927b5['indices'], _0x4dc31e = _0x4927b5['pointLightCount'] + _0x4927b5[_0x2713c0(0x836)]++;
                        if (_0x4dc31e < _0x644992[_0x2713c0(0x1ff)])
                            _0x644992[_0x4dc31e] = _0x53fb03;
                        else
                            _0x644992[_0x2713c0(0x298)](_0x53fb03);
                    }
                }
            }
        }
        [_0x5659be(0x846)](_0x307c8b, _0x186864, _0x16dc4a, _0x2fb5ef, _0x2f1b64) {
            var _0x4c151b = _0x5659be, _0x523b17 = _0x43fad1[_0x4c151b(0x847)], _0x254728 = _0x43fad1[_0x4c151b(0x848)];
            _0x3f70c5[_0x4c151b(0x211)](_0x2f1b64, _0x186864, _0x523b17), _0x3f70c5[_0x4c151b(0x211)](_0x523b17, _0x186864, _0x254728), _0x3f70c5[_0x4c151b(0x1f2)](_0x254728, _0x254728);
            var _0x33096d = _0x16dc4a * Math[_0x4c151b(0x47c)](_0x2fb5ef), _0x54ad35 = _0x307c8b['x'] + _0x16dc4a * _0x186864['x'] + _0x33096d * _0x254728['x'], _0x463855 = _0x307c8b['y'] + _0x16dc4a * _0x186864['y'] + _0x33096d * _0x254728['y'], _0x1d5df6 = _0x307c8b['z'] + _0x16dc4a * _0x186864['z'] + _0x33096d * _0x254728['z'];
            return _0x54ad35 * _0x2f1b64['x'] + _0x463855 * _0x2f1b64['y'] + _0x1d5df6 * _0x2f1b64['z'] <= 0x0 || _0x307c8b['x'] * _0x2f1b64['x'] + _0x307c8b['y'] * _0x2f1b64['y'] + _0x307c8b['z'] * _0x2f1b64['z'] <= 0x0;
        }
        ['_shrinkSphereLightZPerspective'](_0x186adf, _0x1d9918, _0x56cfba, _0x5ea8ae, _0x5d6e23) {
            var _0x5061a5 = _0x5659be, _0x5317fb = _0x56cfba['z'], _0x1e578a = _0x5317fb - _0x5ea8ae, _0x300ff2 = _0x5317fb + _0x5ea8ae;
            if (_0x1e578a > _0x1d9918 || _0x300ff2 <= _0x186adf)
                return ![];
            var _0x5e2cbc = this[_0x5061a5(0x838)];
            return _0x5d6e23[_0x5061a5(0x83f)] = Math['floor'](Math[_0x5061a5(0x849)](Math[_0x5061a5(0x205)](_0x1e578a, _0x186adf)) * _0x5e2cbc['x'] - _0x5e2cbc['y']), _0x5d6e23['zMax'] = Math[_0x5061a5(0x204)](Math[_0x5061a5(0x83b)](Math[_0x5061a5(0x849)](_0x300ff2) * _0x5e2cbc['x'] - _0x5e2cbc['y']), this[_0x5061a5(0x83a)]), !![];
        }
        [_0x5659be(0x84a)](_0x15d7ea, _0x3c43da, _0x312179, _0x104fcf, _0x2bad41, _0x46d359, _0x86897f) {
            var _0x277074 = _0x5659be, _0x1cd016 = _0x104fcf['x'], _0x14e60e = _0x104fcf['y'], _0x292080 = _0x104fcf['z'], _0x1da5a1 = Math[_0x277074(0x47c)](_0x46d359) * _0x2bad41, _0x2fec97 = _0x312179['x'], _0x497d23 = _0x312179['y'], _0x154648 = _0x312179['z'], _0x32c1b1 = _0x1cd016 - _0x2fec97, _0x3e3f8d = _0x14e60e - _0x497d23, _0x30f2cf = _0x292080 - _0x154648, _0x302a1c = _0x32c1b1 * _0x32c1b1 + _0x3e3f8d * _0x3e3f8d + _0x30f2cf * _0x30f2cf, _0x5bcedb = Math['sqrt'](0x1 - _0x30f2cf * _0x30f2cf / _0x302a1c), _0x54d7cd = Math[_0x277074(0x205)](Math['min'](_0x154648, _0x292080 - _0x5bcedb * _0x1da5a1), _0x312179['z'] - _0x2bad41), _0x474e8e = Math['min'](Math[_0x277074(0x205)](_0x154648, _0x292080 + _0x5bcedb * _0x1da5a1), _0x312179['z'] + _0x2bad41);
            if (_0x54d7cd > _0x3c43da || _0x474e8e <= _0x15d7ea)
                return ![];
            var _0x5b83e3 = this[_0x277074(0x838)];
            return _0x86897f[_0x277074(0x83f)] = Math['floor'](Math['log2'](Math[_0x277074(0x205)](_0x54d7cd, _0x15d7ea)) * _0x5b83e3['x'] - _0x5b83e3['y']), _0x86897f['zMax'] = Math[_0x277074(0x204)](Math[_0x277074(0x83b)](Math[_0x277074(0x849)](_0x474e8e) * _0x5b83e3['x'] - _0x5b83e3['y']), this[_0x277074(0x83a)]), !![];
        }
        [_0x5659be(0x84b)](_0x50d361, _0x4d7bdd, _0x3855a5, _0x12e771, _0x2d3683, _0x411169, _0x4a0678) {
            var _0x38be0c = _0x5659be, _0xe69655 = _0x2d3683['z'], _0x5354e0 = _0xe69655 - _0x411169, _0x5187c7 = _0xe69655 + _0x411169;
            if (_0x5354e0 > _0x12e771 || _0x5187c7 <= _0x3855a5)
                return ![];
            var _0x3fba8b = _0x2d3683['x'], _0x4f276f = _0x3fba8b - _0x411169, _0x425b57 = _0x3fba8b + _0x411169;
            if (_0x4f276f > _0x50d361 || _0x425b57 <= -_0x50d361)
                return ![];
            var _0x117332 = _0x2d3683['y'], _0x56bdd = _0x117332 - _0x411169, _0x4f073e = _0x117332 + _0x411169;
            if (_0x56bdd > _0x4d7bdd || _0x4f073e <= -_0x4d7bdd)
                return ![];
            var _0xf94b86 = this[_0x38be0c(0x84c)], _0x4586c1 = this[_0x38be0c(0x839)], _0x5909b3 = this[_0x38be0c(0x838)], _0x2c8f3b = _0x50d361 * 0x2 / _0xf94b86, _0x31f033 = _0x4d7bdd * 0x2 / _0x4586c1;
            return _0x4a0678['xMin'] = Math[_0x38be0c(0x205)](Math[_0x38be0c(0x241)]((_0x4f276f + _0x50d361) / _0x2c8f3b), 0x0), _0x4a0678[_0x38be0c(0x843)] = Math['min'](Math['ceil']((_0x425b57 + _0x50d361) / _0x2c8f3b), _0xf94b86), _0x4a0678['yMin'] = Math[_0x38be0c(0x205)](Math['floor']((_0x4d7bdd - _0x4f073e) / _0x31f033), 0x0), _0x4a0678['yMax'] = Math[_0x38be0c(0x204)](Math[_0x38be0c(0x83b)]((_0x4d7bdd - _0x56bdd) / _0x31f033), _0x4586c1), _0x4a0678[_0x38be0c(0x83f)] = Math[_0x38be0c(0x241)](Math[_0x38be0c(0x849)](Math[_0x38be0c(0x205)](_0x5354e0, _0x3855a5)) * _0x5909b3['x'] - _0x5909b3['y']), _0x4a0678['zMax'] = Math[_0x38be0c(0x204)](Math['ceil'](Math[_0x38be0c(0x849)](_0x5187c7) * _0x5909b3['x'] - _0x5909b3['y']), this['_zSlices']), !![];
        }
        ['_shrinkSpotLightByBoundOrth'](_0x4e2755, _0x5b49ac, _0x581454, _0x490689, _0x597844, _0x1123c7, _0x246098, _0x30c666, _0x44dd9e) {
            var _0x4b0ef0 = _0x5659be, _0x2ba604 = _0x1123c7['x'], _0x56caf7 = _0x1123c7['y'], _0x1f7cca = _0x1123c7['z'], _0x1470de = Math[_0x4b0ef0(0x47c)](_0x30c666) * _0x246098, _0x554edd = _0x597844['x'], _0x5d0788 = _0x597844['y'], _0x33f5e9 = _0x597844['z'], _0x41a8ac = _0x2ba604 - _0x554edd, _0x5f3f10 = _0x56caf7 - _0x5d0788, _0x53f0ab = _0x1f7cca - _0x33f5e9, _0x54eaad = _0x41a8ac * _0x41a8ac + _0x5f3f10 * _0x5f3f10 + _0x53f0ab * _0x53f0ab, _0x341cdc = Math[_0x4b0ef0(0x1ea)](0x1 - _0x53f0ab * _0x53f0ab / _0x54eaad), _0x2e8335 = Math[_0x4b0ef0(0x205)](Math[_0x4b0ef0(0x204)](_0x33f5e9, _0x1f7cca - _0x341cdc * _0x1470de), _0x597844['z'] - _0x246098), _0x558236 = Math[_0x4b0ef0(0x204)](Math[_0x4b0ef0(0x205)](_0x33f5e9, _0x1f7cca + _0x341cdc * _0x1470de), _0x597844['z'] + _0x246098);
            if (_0x2e8335 > _0x490689 || _0x558236 <= _0x581454)
                return ![];
            var _0x4b4886 = Math[_0x4b0ef0(0x1ea)](0x1 - _0x41a8ac * _0x41a8ac / _0x54eaad), _0x2bb376 = Math['max'](Math[_0x4b0ef0(0x204)](_0x554edd, _0x2ba604 - _0x4b4886 * _0x1470de), _0x597844['x'] - _0x246098), _0x472ce0 = Math[_0x4b0ef0(0x204)](Math['max'](_0x554edd, _0x2ba604 + _0x4b4886 * _0x1470de), _0x597844['x'] + _0x246098);
            if (_0x2bb376 > _0x4e2755 || _0x472ce0 <= -_0x4e2755)
                return ![];
            var _0x101c48 = Math[_0x4b0ef0(0x1ea)](0x1 - _0x5f3f10 * _0x5f3f10 / _0x54eaad), _0xca2bbc = Math[_0x4b0ef0(0x205)](Math[_0x4b0ef0(0x204)](_0x5d0788, _0x56caf7 - _0x101c48 * _0x1470de), _0x597844['y'] - _0x246098), _0x3e08e7 = Math[_0x4b0ef0(0x204)](Math[_0x4b0ef0(0x205)](_0x5d0788, _0x56caf7 + _0x101c48 * _0x1470de), _0x597844['y'] + _0x246098);
            if (_0xca2bbc > _0x5b49ac || _0x3e08e7 <= -_0x5b49ac)
                return ![];
            var _0x20bee1 = this[_0x4b0ef0(0x84c)], _0x3d5dc5 = this[_0x4b0ef0(0x839)], _0x2f29f5 = this['_depthSliceParam'], _0x44909a = _0x4e2755 * 0x2 / _0x20bee1, _0x560db1 = _0x5b49ac * 0x2 / _0x3d5dc5;
            return _0x44dd9e[_0x4b0ef0(0x842)] = Math[_0x4b0ef0(0x205)](Math[_0x4b0ef0(0x241)]((_0x2bb376 + _0x4e2755) / _0x44909a), 0x0), _0x44dd9e[_0x4b0ef0(0x843)] = Math[_0x4b0ef0(0x204)](Math[_0x4b0ef0(0x83b)]((_0x472ce0 + _0x4e2755) / _0x44909a), _0x20bee1), _0x44dd9e[_0x4b0ef0(0x840)] = Math[_0x4b0ef0(0x205)](Math[_0x4b0ef0(0x241)]((_0x5b49ac - _0x3e08e7) / _0x560db1), 0x0), _0x44dd9e[_0x4b0ef0(0x841)] = Math['min'](Math[_0x4b0ef0(0x83b)]((_0x5b49ac - _0xca2bbc) / _0x560db1), _0x3d5dc5), _0x44dd9e[_0x4b0ef0(0x83f)] = Math[_0x4b0ef0(0x241)](Math[_0x4b0ef0(0x849)](Math[_0x4b0ef0(0x205)](_0x2e8335, _0x581454)) * _0x2f29f5['x'] - _0x2f29f5['y']), _0x44dd9e['zMax'] = Math['min'](Math[_0x4b0ef0(0x83b)](Math[_0x4b0ef0(0x849)](_0x558236) * _0x2f29f5['x'] - _0x2f29f5['y']), this['_zSlices']), !![];
        }
        [_0x5659be(0x84d)](_0x3af1fe, _0x11e971, _0x1713c5, _0x233b35, _0x3d81db) {
            var _0x31f480 = _0x5659be, _0x2b536b, _0x1f1740, _0x4c971f, _0x5e4223, _0x25d040 = _0x3af1fe['x'], _0x2cf062 = _0x3af1fe['y'], _0x4a1d51 = _0x3af1fe['z'], _0x58e012, _0x5ca2f5 = this['_ySlices'] + 0x1;
            for (_0x58e012 = 0x0; _0x58e012 < _0x5ca2f5; _0x58e012++) {
                var _0xb8adce = _0x3d81db[_0x58e012];
                if (_0x2cf062 * _0xb8adce['y'] + _0x4a1d51 * _0xb8adce['z'] < _0x11e971) {
                    _0x1f1740 = Math['max'](0x0, _0x58e012 - 0x1);
                    break;
                }
            }
            if (_0x58e012 == _0x5ca2f5)
                return ![];
            _0x5e4223 = this[_0x31f480(0x839)];
            for (_0x58e012 = _0x1f1740 + 0x1; _0x58e012 < _0x5ca2f5; _0x58e012++) {
                var _0xb8adce = _0x3d81db[_0x58e012];
                if (_0x2cf062 * _0xb8adce['y'] + _0x4a1d51 * _0xb8adce['z'] <= -_0x11e971) {
                    _0x5e4223 = Math[_0x31f480(0x205)](0x0, _0x58e012);
                    break;
                }
            }
            _0x5ca2f5 = this[_0x31f480(0x84c)] + 0x1;
            for (_0x58e012 = 0x0; _0x58e012 < _0x5ca2f5; _0x58e012++) {
                var _0xb8adce = _0x233b35[_0x58e012];
                if (_0x25d040 * _0xb8adce['x'] + _0x4a1d51 * _0xb8adce['z'] < _0x11e971) {
                    _0x2b536b = Math[_0x31f480(0x205)](0x0, _0x58e012 - 0x1);
                    break;
                }
            }
            _0x4c971f = this['_xSlices'];
            for (_0x58e012 = _0x2b536b + 0x1; _0x58e012 < _0x5ca2f5; _0x58e012++) {
                var _0xb8adce = _0x233b35[_0x58e012];
                if (_0x25d040 * _0xb8adce['x'] + _0x4a1d51 * _0xb8adce['z'] <= -_0x11e971) {
                    _0x4c971f = Math[_0x31f480(0x205)](0x0, _0x58e012);
                    break;
                }
            }
            return _0x1713c5[_0x31f480(0x842)] = _0x2b536b, _0x1713c5[_0x31f480(0x843)] = _0x4c971f, _0x1713c5[_0x31f480(0x840)] = _0x1f1740, _0x1713c5[_0x31f480(0x841)] = _0x5e4223, !![];
        }
        [_0x5659be(0x84e)](_0x51659d, _0x54347f, _0x1ca218, _0x404efc, _0x3c4528, _0xc02dac, _0x15341c) {
            var _0x2de377 = _0x5659be, _0x47f708, _0x248124, _0x795363, _0x2a12b9, _0x5b5e7b = _0x43fad1['_tempVector32'], _0x4f266c = _0x3c4528[_0x2de377(0x841)] + 0x1;
            for (var _0x7e53a2 = _0x3c4528[_0x2de377(0x840)] + 0x1; _0x7e53a2 < _0x4f266c; _0x7e53a2++) {
                if (this[_0x2de377(0x846)](_0x51659d, _0x54347f, _0x1ca218, _0x404efc, _0x15341c[_0x7e53a2])) {
                    _0x248124 = Math[_0x2de377(0x205)](0x0, _0x7e53a2 - 0x1);
                    break;
                }
            }
            _0x2a12b9 = _0x3c4528['yMax'];
            for (var _0x7e53a2 = _0x248124 + 0x1; _0x7e53a2 < _0x4f266c; _0x7e53a2++) {
                var _0x175fe6 = _0x15341c[_0x7e53a2];
                _0x5b5e7b[_0x2de377(0x1fa)](0x0, -_0x175fe6['y'], -_0x175fe6['z']);
                if (!this[_0x2de377(0x846)](_0x51659d, _0x54347f, _0x1ca218, _0x404efc, _0x5b5e7b)) {
                    _0x2a12b9 = Math[_0x2de377(0x205)](0x0, _0x7e53a2);
                    break;
                }
            }
            _0x4f266c = _0x3c4528['xMax'] + 0x1;
            for (var _0x7e53a2 = _0x3c4528['xMin'] + 0x1; _0x7e53a2 < _0x4f266c; _0x7e53a2++) {
                if (this[_0x2de377(0x846)](_0x51659d, _0x54347f, _0x1ca218, _0x404efc, _0xc02dac[_0x7e53a2])) {
                    _0x47f708 = Math[_0x2de377(0x205)](0x0, _0x7e53a2 - 0x1);
                    break;
                }
            }
            _0x795363 = _0x3c4528[_0x2de377(0x843)];
            for (var _0x7e53a2 = _0x47f708 + 0x1; _0x7e53a2 < _0x4f266c; _0x7e53a2++) {
                var _0x175fe6 = _0xc02dac[_0x7e53a2];
                _0x5b5e7b[_0x2de377(0x1fa)](-_0x175fe6['x'], 0x0, -_0x175fe6['z']);
                if (!this['_insertConePlane'](_0x51659d, _0x54347f, _0x1ca218, _0x404efc, _0x5b5e7b)) {
                    _0x795363 = Math[_0x2de377(0x205)](0x0, _0x7e53a2);
                    break;
                }
            }
            _0x3c4528['xMin'] = _0x47f708, _0x3c4528[_0x2de377(0x843)] = _0x795363, _0x3c4528[_0x2de377(0x840)] = _0x248124, _0x3c4528[_0x2de377(0x841)] = _0x2a12b9;
        }
        [_0x5659be(0x84f)](_0x12dc86, _0x4b49e3, _0x12538e, _0x228d4c, _0x54bbf6, _0x19237e, _0x1e2304) {
            var _0x2e2901 = _0x5659be, _0x4a9004 = _0x43fad1[_0x2e2901(0x850)], _0x1e0ada = _0x43fad1[_0x2e2901(0x59b)];
            _0x3f70c5['transformV3ToV3'](_0x228d4c[_0x2e2901(0x3ca)][_0x2e2901(0x59e)], _0x12538e, _0x1e0ada), _0x1e0ada['z'] *= -0x1;
            if (!this['_shrinkSphereLightZPerspective'](_0x12dc86, _0x4b49e3, _0x1e0ada, _0x228d4c[_0x2e2901(0x851)], _0x4a9004))
                return;
            if (!this[_0x2e2901(0x84d)](_0x1e0ada, _0x228d4c[_0x2e2901(0x851)], _0x4a9004, _0x19237e, _0x1e2304))
                return;
            this['_placePointLightToClusters'](_0x54bbf6, _0x4a9004);
        }
        [_0x5659be(0x852)](_0x5aabe4, _0x80b95c, _0x227155, _0x4ff0e0, _0x5634a6, _0x27f788, _0x47383c) {
            var _0xe5735e = _0x5659be, _0xe4b7d3 = _0x43fad1[_0xe5735e(0x850)], _0x12efa8 = _0x43fad1[_0xe5735e(0x59b)], _0x9f76f6 = _0x43fad1[_0xe5735e(0x3d6)], _0x4c0d25 = _0x43fad1[_0xe5735e(0x853)], _0x22bbb5 = _0x4ff0e0[_0xe5735e(0x3ca)]['position'], _0x317415 = _0x4ff0e0[_0xe5735e(0x851)];
            _0x4ff0e0[_0xe5735e(0x3ca)]['worldMatrix']['getForward'](_0x9f76f6), _0x3f70c5[_0xe5735e(0x1f2)](_0x9f76f6, _0x9f76f6), _0x3f70c5[_0xe5735e(0x1ee)](_0x9f76f6, _0x317415, _0x4c0d25), _0x3f70c5[_0xe5735e(0x201)](_0x22bbb5, _0x4c0d25, _0x4c0d25), _0x3f70c5[_0xe5735e(0x20b)](_0x22bbb5, _0x227155, _0x12efa8), _0x3f70c5[_0xe5735e(0x20b)](_0x4c0d25, _0x227155, _0x4c0d25), _0x12efa8['z'] *= -0x1, _0x4c0d25['z'] *= -0x1;
            var _0x490763 = _0x4ff0e0[_0xe5735e(0x854)] / 0x2 * Math['PI'] / 0xb4;
            if (!this[_0xe5735e(0x84a)](_0x5aabe4, _0x80b95c, _0x12efa8, _0x4c0d25, _0x317415, _0x490763, _0xe4b7d3))
                return;
            if (!this[_0xe5735e(0x84d)](_0x12efa8, _0x317415, _0xe4b7d3, _0x27f788, _0x47383c))
                return;
            var _0x2bac38 = _0x43fad1[_0xe5735e(0x855)];
            _0x2bac38['x'] = _0x4c0d25['x'] - _0x12efa8['x'], _0x2bac38['y'] = _0x4c0d25['y'] - _0x12efa8['y'], _0x2bac38['z'] = _0x4c0d25['z'] - _0x12efa8['z'], _0x3f70c5[_0xe5735e(0x1f2)](_0x2bac38, _0x2bac38), this['_shrinkSpotXYByConePerspective'](_0x12efa8, _0x2bac38, _0x317415, _0x490763, _0xe4b7d3, _0x27f788, _0x47383c), this['_placeSpotLightToClusters'](_0x5634a6, _0xe4b7d3);
        }
        [_0x5659be(0x856)](_0x4ceeef, _0x56a3b2, _0x5d99ca, _0x238fc4, _0x353ec3, _0x40cc52, _0x11c862) {
            var _0x217feb = _0x5659be, _0x7217d9 = _0x43fad1['_tempLightBound'], _0x153caa = _0x43fad1['_tempVector30'];
            _0x3f70c5[_0x217feb(0x20b)](_0x40cc52['_transform'][_0x217feb(0x59e)], _0x353ec3, _0x153caa), _0x153caa['z'] *= -0x1;
            if (!this['_shrinkSphereLightByBoundOrth'](_0x4ceeef, _0x56a3b2, _0x5d99ca, _0x238fc4, _0x153caa, _0x40cc52[_0x217feb(0x851)], _0x7217d9))
                return;
            this[_0x217feb(0x857)](_0x11c862, _0x7217d9);
        }
        [_0x5659be(0x858)](_0x5aea49, _0x720528, _0x3d5588, _0x38c721, _0x52e78d, _0xcc4ca1, _0x3de4fd) {
            var _0x487787 = _0x5659be, _0x1e2761 = _0x43fad1[_0x487787(0x850)], _0xe95785 = _0x43fad1[_0x487787(0x59b)], _0x300e1e = _0x43fad1[_0x487787(0x3d6)], _0x336f15 = _0x43fad1[_0x487787(0x853)], _0x380f74 = _0xcc4ca1[_0x487787(0x3ca)][_0x487787(0x59e)], _0x5f5143 = _0xcc4ca1[_0x487787(0x851)];
            _0xcc4ca1[_0x487787(0x3ca)][_0x487787(0x3ce)][_0x487787(0x5ae)](_0x300e1e), _0x3f70c5[_0x487787(0x1f2)](_0x300e1e, _0x300e1e), _0x3f70c5['scale'](_0x300e1e, _0x5f5143, _0x336f15), _0x3f70c5['add'](_0x380f74, _0x336f15, _0x336f15), _0x3f70c5[_0x487787(0x20b)](_0x380f74, _0x52e78d, _0xe95785), _0x3f70c5[_0x487787(0x20b)](_0x336f15, _0x52e78d, _0x336f15), _0xe95785['z'] *= -0x1, _0x336f15['z'] *= -0x1;
            var _0x5436da = _0xcc4ca1['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            if (!this[_0x487787(0x859)](_0x5aea49, _0x720528, _0x3d5588, _0x38c721, _0xe95785, _0x336f15, _0x5f5143, _0x5436da, _0x1e2761))
                return;
            this[_0x487787(0x845)](_0x3de4fd, _0x1e2761);
        }
        [_0x5659be(0x85a)](_0x40a69f, _0x28b13a) {
            var _0xd27167 = _0x5659be;
            this[_0xd27167(0x37b)]++;
            var _0x4b5b55 = _0x40a69f[_0xd27167(0x85b)];
            this['_depthSliceParam']['x'] = _0x528624[_0xd27167(0x243)][_0xd27167(0x250)]['z'] / Math['log2'](_0x40a69f[_0xd27167(0x85c)] / _0x4b5b55), this[_0xd27167(0x838)]['y'] = Math['log2'](_0x4b5b55) * this[_0xd27167(0x838)]['x'];
            var _0x469e73 = _0x40a69f[_0xd27167(0x85b)], _0x399af1 = _0x40a69f[_0xd27167(0x85c)], _0x3ab182 = _0x40a69f[_0xd27167(0x85d)], _0x1c6ef1 = _0x28b13a[_0xd27167(0x85e)][_0xd27167(0x438)], _0x31c3f0 = _0x28b13a[_0xd27167(0x85f)], _0x16d08c = _0x31c3f0['_length'], _0x53e5a9 = _0x31c3f0[_0xd27167(0x860)], _0x57383e = _0x28b13a[_0xd27167(0x861)], _0x5c8084 = _0x57383e[_0xd27167(0x438)], _0x1fa0a2 = _0x57383e['_elements'];
            if (_0x40a69f['orthographic']) {
                var _0x545d29 = _0x40a69f[_0xd27167(0x862)] / 0x2, _0x504723 = _0x545d29 * _0x40a69f['aspectRatio'];
                for (var _0x11d754 = 0x0; _0x11d754 < _0x16d08c; _0x11d754++, _0x1c6ef1++)
                    this[_0xd27167(0x856)](_0x504723, _0x545d29, _0x469e73, _0x399af1, _0x3ab182, _0x53e5a9[_0x11d754], _0x1c6ef1);
                for (var _0x11d754 = 0x0; _0x11d754 < _0x5c8084; _0x11d754++, _0x1c6ef1++)
                    this[_0xd27167(0x858)](_0x504723, _0x545d29, _0x469e73, _0x399af1, _0x3ab182, _0x1fa0a2[_0x11d754], _0x1c6ef1);
            } else {
                _0x40a69f['_updateClusterPlaneXY']();
                var _0x40d14f = _0x40a69f[_0xd27167(0x863)], _0x372b1e = _0x40a69f[_0xd27167(0x864)];
                for (var _0x11d754 = 0x0; _0x11d754 < _0x16d08c; _0x11d754++, _0x1c6ef1++)
                    this[_0xd27167(0x84f)](_0x469e73, _0x399af1, _0x3ab182, _0x53e5a9[_0x11d754], _0x1c6ef1, _0x40d14f, _0x372b1e);
                for (var _0x11d754 = 0x0; _0x11d754 < _0x5c8084; _0x11d754++, _0x1c6ef1++)
                    this[_0xd27167(0x852)](_0x469e73, _0x399af1, _0x3ab182, _0x1fa0a2[_0x11d754], _0x1c6ef1, _0x40d14f, _0x372b1e);
            }
            if (_0x16d08c + _0x5c8084 > 0x0) {
                var _0x3eec24 = this[_0xd27167(0x84c)], _0xf7183a = this[_0xd27167(0x839)], _0x569d68 = this[_0xd27167(0x83a)], _0xd74b70 = _0x3eec24 * _0xf7183a * 0x4, _0x3145d5 = _0xd74b70 * _0x569d68, _0x1907b6 = this[_0xd27167(0x83d)], _0x131573 = _0x1907b6[_0xd27167(0x1ff)], _0x12bd20 = this[_0xd27167(0x83e)], _0x29b35a = this[_0xd27167(0x37b)], _0x339410 = !![];
                for (var _0x5ad3e4 = 0x0; _0x5ad3e4 < _0x569d68; _0x5ad3e4++) {
                    for (var _0x86c9c4 = 0x0; _0x86c9c4 < _0xf7183a; _0x86c9c4++) {
                        for (var _0x254fe1 = 0x0; _0x254fe1 < _0x3eec24; _0x254fe1++) {
                            var _0x54178e = _0x12bd20[_0x5ad3e4][_0x86c9c4][_0x254fe1], _0x4f33e2 = (_0x254fe1 + _0x86c9c4 * _0x3eec24 + _0x5ad3e4 * _0x3eec24 * _0xf7183a) * 0x4;
                            if (_0x54178e['updateMark'] !== _0x29b35a)
                                _0x1907b6[_0x4f33e2] = 0x0, _0x1907b6[_0x4f33e2 + 0x1] = 0x0;
                            else {
                                if (_0x339410) {
                                    var _0x356145 = _0x54178e[_0xd27167(0x837)], _0x2f58b3 = _0x54178e[_0xd27167(0x844)], _0x16b653 = _0x54178e[_0xd27167(0x836)], _0x2910f3 = _0x2f58b3 + _0x16b653;
                                    if (_0x3145d5 + _0x2910f3 < _0x131573) {
                                        _0x1907b6[_0x4f33e2] = _0x2f58b3, _0x1907b6[_0x4f33e2 + 0x1] = _0x16b653, _0x1907b6[_0x4f33e2 + 0x2] = Math[_0xd27167(0x241)](_0x3145d5 / _0xd74b70), _0x1907b6[_0x4f33e2 + 0x3] = _0x3145d5 % _0xd74b70;
                                        for (var _0x11d754 = 0x0; _0x11d754 < _0x2910f3; _0x11d754++)
                                            _0x1907b6[_0x3145d5++] = _0x356145[_0x11d754];
                                    } else {
                                        _0x2910f3 = _0x131573 - (_0x3145d5 + _0x2910f3), _0x2f58b3 = Math[_0xd27167(0x204)](_0x2f58b3, _0x2910f3), _0x1907b6[_0x4f33e2] = _0x2f58b3, _0x1907b6[_0x4f33e2 + 0x1] = Math['min'](_0x16b653, _0x2910f3 - _0x2f58b3), _0x1907b6[_0x4f33e2 + 0x2] = Math[_0xd27167(0x241)](_0x3145d5 / _0xd74b70), _0x1907b6[_0x4f33e2 + 0x3] = _0x3145d5 % _0xd74b70;
                                        for (var _0x11d754 = 0x0; _0x11d754 < _0x2910f3; _0x11d754++)
                                            _0x1907b6[_0x3145d5++] = _0x356145[_0x11d754];
                                        _0x339410 = ![];
                                    }
                                }
                            }
                        }
                    }
                }
                var _0x15bed8 = this[_0xd27167(0x83c)]['width'];
                this['_clusterTexture'][_0xd27167(0x865)](0x0, 0x0, _0x15bed8, Math[_0xd27167(0x83b)](_0x3145d5 / (0x4 * _0x15bed8)), _0x1907b6);
            }
        }
    }
    _0x43fad1[_0x5659be(0x59b)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x3d6)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x866)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x855)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x853)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x867)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x847)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x848)] = new _0x3f70c5(), _0x43fad1[_0x5659be(0x850)] = new _0x590827();
    class _0x5465cd {
        constructor() {
            this['_coefficients'] = new Float32Array(0x1b);
        }
        [_0x5659be(0x868)](_0x34c11f, _0x3b7548) {
            var _0x5c8a91 = _0x5659be;
            return this[_0x5c8a91(0x869)][_0x34c11f * 0x9 + _0x3b7548];
        }
        [_0x5659be(0x86a)](_0x5c455c, _0x308d6b, _0x1b620e) {
            this['_coefficients'][_0x5c455c * 0x9 + _0x308d6b] = _0x1b620e;
        }
        [_0x5659be(0x86b)](_0x3f0aa7, _0x4007f4, _0x2f4879, _0x296c0a, _0x41745f, _0x234317, _0x1b85ea, _0x3ea931, _0x2c446c, _0x2de5ee) {
            var _0xdbb401 = _0x5659be, _0x321713 = _0x3f0aa7 * 0x9;
            this[_0xdbb401(0x869)][_0x321713] = _0x4007f4, this[_0xdbb401(0x869)][++_0x321713] = _0x2f4879, this[_0xdbb401(0x869)][++_0x321713] = _0x296c0a, this[_0xdbb401(0x869)][++_0x321713] = _0x41745f, this[_0xdbb401(0x869)][++_0x321713] = _0x234317, this[_0xdbb401(0x869)][++_0x321713] = _0x1b85ea, this[_0xdbb401(0x869)][++_0x321713] = _0x3ea931, this[_0xdbb401(0x869)][++_0x321713] = _0x2c446c, this['_coefficients'][++_0x321713] = _0x2de5ee;
        }
        [_0x5659be(0x1f0)](_0x37e729) {
            var _0x5a2025 = _0x5659be;
            if (this === _0x37e729)
                return;
            var _0x485a69 = this[_0x5a2025(0x869)], _0x3a1fe4 = _0x37e729['_coefficients'];
            for (var _0x1e8466 = 0x0; _0x1e8466 < 0x1b; _0x1e8466++)
                _0x3a1fe4[_0x1e8466] = _0x485a69[_0x1e8466];
        }
    }
    _0x5465cd[_0x5659be(0x86c)] = new _0x5465cd();
    class _0x711937 {
        constructor() {
            var _0x58d1bb = _0x5659be;
            this['_pressedSprite'] = null, this[_0x58d1bb(0x86d)] = -0x1, this[_0x58d1bb(0x86e)] = null, this[_0x58d1bb(0x86f)] = 0x0, this[_0x58d1bb(0x870)] = 0x0;
        }
    }
    class _0x38b691 {
        constructor() {
            var _0x1a2edc = _0x5659be;
            this[_0x1a2edc(0x2ad)] = -0x1, this[_0x1a2edc(0x871)] = -0x1, this[_0x1a2edc(0x578)] = new _0x12bf01();
        }
        get [_0x5659be(0x872)]() {
            var _0x29c1ae = _0x5659be;
            return this[_0x29c1ae(0x871)];
        }
        get ['position']() {
            var _0x1a45e5 = _0x5659be;
            return this[_0x1a45e5(0x578)];
        }
        [_0x5659be(0x7fe)]() {
            var _0x417ef5 = _0x5659be;
            return this[_0x417ef5(0x2ad)];
        }
        [_0x5659be(0x800)](_0x4b0d0d) {
            var _0x5a0740 = _0x5659be;
            this[_0x5a0740(0x2ad)] = _0x4b0d0d;
        }
    }
    class _0x4d8983 {
        constructor(_0xb13831, _0xaa6e11 = 0x0) {
            var _0x4a6ca2 = _0x5659be;
            this[_0x4a6ca2(0x829)] = _0xb13831, this['distance'] = _0xaa6e11;
        }
        static [_0x5659be(0x873)](_0x45e860, _0x6d933a, _0x5550a3, _0x1beaf8) {
            var _0x43c0a1 = _0x5659be, _0x29f596 = _0x6d933a['x'] - _0x45e860['x'], _0x559403 = _0x6d933a['y'] - _0x45e860['y'], _0x5cf241 = _0x6d933a['z'] - _0x45e860['z'], _0x197fe9 = _0x5550a3['x'] - _0x45e860['x'], _0x5877fb = _0x5550a3['y'] - _0x45e860['y'], _0x542e5b = _0x5550a3['z'] - _0x45e860['z'], _0x2d5373 = _0x559403 * _0x542e5b - _0x5cf241 * _0x5877fb, _0x483682 = _0x5cf241 * _0x197fe9 - _0x29f596 * _0x542e5b, _0x44d435 = _0x29f596 * _0x5877fb - _0x559403 * _0x197fe9, _0x35cd30 = 0x1 / Math[_0x43c0a1(0x1ea)](_0x2d5373 * _0x2d5373 + _0x483682 * _0x483682 + _0x44d435 * _0x44d435), _0x2859e9 = _0x2d5373 * _0x35cd30, _0x4cf067 = _0x483682 * _0x35cd30, _0x5308ea = _0x44d435 * _0x35cd30, _0x2bdacd = _0x1beaf8[_0x43c0a1(0x829)];
            _0x2bdacd['x'] = _0x2859e9, _0x2bdacd['y'] = _0x4cf067, _0x2bdacd['z'] = _0x5308ea, _0x1beaf8[_0x43c0a1(0x208)] = -(_0x2859e9 * _0x45e860['x'] + _0x4cf067 * _0x45e860['y'] + _0x5308ea * _0x45e860['z']);
        }
        [_0x5659be(0x1f2)]() {
            var _0xd2c053 = _0x5659be, _0x2872de = this[_0xd2c053(0x829)]['x'], _0x1af4be = this['normal']['y'], _0xd7a630 = this[_0xd2c053(0x829)]['z'], _0x39d282 = 0x1 / Math[_0xd2c053(0x1ea)](_0x2872de * _0x2872de + _0x1af4be * _0x1af4be + _0xd7a630 * _0xd7a630);
            this[_0xd2c053(0x829)]['x'] = _0x2872de * _0x39d282, this['normal']['y'] = _0x1af4be * _0x39d282, this[_0xd2c053(0x829)]['z'] = _0xd7a630 * _0x39d282, this[_0xd2c053(0x208)] *= _0x39d282;
        }
        [_0x5659be(0x1f0)](_0xc0cf0c) {
            var _0x7ac703 = _0x5659be, _0x8a24de = _0xc0cf0c;
            this[_0x7ac703(0x829)][_0x7ac703(0x1f0)](_0x8a24de['normal']), _0x8a24de['distance'] = this[_0x7ac703(0x208)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x10cc4d = _0x5659be, _0x13e448 = new _0x4d8983(new _0x3f70c5());
            return this[_0x10cc4d(0x1f0)](_0x13e448), _0x13e448;
        }
    }
    _0x4d8983['PlaneIntersectionType_Back'] = 0x0, _0x4d8983[_0x5659be(0x874)] = 0x1, _0x4d8983[_0x5659be(0x875)] = 0x2;
    class _0x2ef15a {
        constructor(_0x38a8fc, _0x378007) {
            var _0x29ed69 = _0x5659be;
            this[_0x29ed69(0x876)] = _0x38a8fc, this['direction'] = _0x378007;
        }
    }
    class _0x25d93b {
    }
    _0x25d93b['Disjoint'] = 0x0, _0x25d93b[_0x5659be(0x877)] = 0x1, _0x25d93b[_0x5659be(0x878)] = 0x2;
    class _0x4589df {
        constructor() {
        }
        static [_0x5659be(0x879)](_0x506a61, _0x406fe5) {
            var _0x276300 = _0x5659be, _0x270973 = _0x3f70c5[_0x276300(0x1f1)](_0x506a61['normal'], _0x406fe5);
            return _0x270973 - _0x506a61[_0x276300(0x208)];
        }
        static [_0x5659be(0x87a)](_0x57c003, _0x511053) {
            var _0x14b1c3 = _0x5659be, _0x28335e = _0x57c003[_0x14b1c3(0x204)], _0x26dfd8 = _0x28335e['x'], _0x2f8711 = _0x28335e['y'], _0x781f9f = _0x28335e['z'], _0x5ab426 = _0x57c003['max'], _0x28d267 = _0x5ab426['x'], _0x1b77e3 = _0x5ab426['y'], _0x32185d = _0x5ab426['z'], _0x309027 = _0x511053['x'], _0x1e1eeb = _0x511053['y'], _0x188e4c = _0x511053['z'], _0x222d71 = 0x0;
            if (_0x309027 < _0x26dfd8)
                _0x222d71 += (_0x26dfd8 - _0x309027) * (_0x26dfd8 - _0x309027);
            if (_0x309027 > _0x28d267)
                _0x222d71 += (_0x28d267 - _0x309027) * (_0x28d267 - _0x309027);
            if (_0x1e1eeb < _0x2f8711)
                _0x222d71 += (_0x2f8711 - _0x1e1eeb) * (_0x2f8711 - _0x1e1eeb);
            if (_0x1e1eeb > _0x1b77e3)
                _0x222d71 += (_0x1b77e3 - _0x1e1eeb) * (_0x1b77e3 - _0x1e1eeb);
            if (_0x188e4c < _0x781f9f)
                _0x222d71 += (_0x781f9f - _0x188e4c) * (_0x781f9f - _0x188e4c);
            if (_0x188e4c > _0x32185d)
                _0x222d71 += (_0x32185d - _0x188e4c) * (_0x32185d - _0x188e4c);
            return Math['sqrt'](_0x222d71);
        }
        static ['distanceBoxToBox'](_0x1d8c05, _0x4fd0b1) {
            var _0x116b79 = _0x5659be, _0x4176e4 = _0x1d8c05[_0x116b79(0x204)], _0x3b9918 = _0x4176e4['x'], _0x5ae517 = _0x4176e4['y'], _0xaa8e68 = _0x4176e4['z'], _0x40f9dc = _0x1d8c05[_0x116b79(0x205)], _0x35540d = _0x40f9dc['x'], _0xb8dac4 = _0x40f9dc['y'], _0x24fb97 = _0x40f9dc['z'], _0x48ff34 = _0x4fd0b1[_0x116b79(0x204)], _0x2c76c3 = _0x48ff34['x'], _0x3093cd = _0x48ff34['y'], _0x45aa47 = _0x48ff34['z'], _0x38c2e3 = _0x4fd0b1[_0x116b79(0x205)], _0x3ad0e7 = _0x38c2e3['x'], _0x2b7412 = _0x38c2e3['y'], _0x5a9ad0 = _0x38c2e3['z'], _0x5c8430 = 0x0, _0x35a2ae;
            if (_0x3b9918 > _0x3ad0e7)
                _0x35a2ae = _0x3b9918 - _0x3ad0e7, _0x5c8430 += _0x35a2ae * _0x35a2ae;
            else
                _0x2c76c3 > _0x35540d && (_0x35a2ae = _0x2c76c3 - _0x35540d, _0x5c8430 += _0x35a2ae * _0x35a2ae);
            if (_0x5ae517 > _0x2b7412)
                _0x35a2ae = _0x5ae517 - _0x2b7412, _0x5c8430 += _0x35a2ae * _0x35a2ae;
            else
                _0x3093cd > _0xb8dac4 && (_0x35a2ae = _0x3093cd - _0xb8dac4, _0x5c8430 += _0x35a2ae * _0x35a2ae);
            if (_0xaa8e68 > _0x5a9ad0)
                _0x35a2ae = _0xaa8e68 - _0x5a9ad0, _0x5c8430 += _0x35a2ae * _0x35a2ae;
            else
                _0x45aa47 > _0x24fb97 && (_0x35a2ae = _0x45aa47 - _0x24fb97, _0x5c8430 += _0x35a2ae * _0x35a2ae);
            return Math['sqrt'](_0x5c8430);
        }
        static [_0x5659be(0x87b)](_0x9f1d51, _0x10ec0f) {
            var _0x4b07d3 = _0x5659be, _0x11f855 = Math[_0x4b07d3(0x1ea)](_0x3f70c5[_0x4b07d3(0x203)](_0x9f1d51[_0x4b07d3(0x87c)], _0x10ec0f));
            return _0x11f855 -= _0x9f1d51['radius'], Math[_0x4b07d3(0x205)](_0x11f855, 0x0);
        }
        static ['distanceSphereToSphere'](_0x1fc8ef, _0x26a20e) {
            var _0x16e4cd = _0x5659be, _0x6da0b3 = Math[_0x16e4cd(0x1ea)](_0x3f70c5[_0x16e4cd(0x203)](_0x1fc8ef[_0x16e4cd(0x87c)], _0x26a20e[_0x16e4cd(0x87c)]));
            return _0x6da0b3 -= _0x1fc8ef[_0x16e4cd(0x87d)] + _0x26a20e['radius'], Math[_0x16e4cd(0x205)](_0x6da0b3, 0x0);
        }
        static ['intersectsRayAndTriangleRD'](_0x62ecaf, _0x1c7a90, _0x5edc31, _0x44e682, _0x26c8f6) {
            var _0x1aa777 = _0x5659be, _0x18ae2b = _0x62ecaf[_0x1aa777(0x876)], _0x2aa0d7 = _0x18ae2b['x'], _0x141322 = _0x18ae2b['y'], _0x188c12 = _0x18ae2b['z'], _0x4a78db = _0x62ecaf[_0x1aa777(0x87e)], _0x159c83 = _0x4a78db['x'], _0x1bf1bd = _0x4a78db['y'], _0x44f4ff = _0x4a78db['z'], _0x570e4a = _0x1c7a90['x'], _0x5c9eae = _0x1c7a90['y'], _0x53e7b7 = _0x1c7a90['z'], _0x2c8821 = _0x5edc31['x'], _0xfceae6 = _0x5edc31['y'], _0x533cd2 = _0x5edc31['z'], _0x1d6664 = _0x44e682['x'], _0x26245d = _0x44e682['y'], _0x56480e = _0x44e682['z'], _0x5c248e = _0x4589df[_0x1aa777(0x278)]['x'], _0x2edf53 = _0x4589df[_0x1aa777(0x278)]['y'], _0x2cd460 = _0x4589df[_0x1aa777(0x278)]['z'];
            _0x5c248e = _0x2c8821 - _0x570e4a, _0x2edf53 = _0xfceae6 - _0x5c9eae, _0x2cd460 = _0x533cd2 - _0x53e7b7;
            var _0x2df971 = _0x4589df['_tempV31']['x'], _0x241d94 = _0x4589df[_0x1aa777(0x279)]['y'], _0x10a6cf = _0x4589df['_tempV31']['z'];
            _0x2df971 = _0x1d6664 - _0x570e4a, _0x241d94 = _0x26245d - _0x5c9eae, _0x10a6cf = _0x56480e - _0x53e7b7;
            var _0x285bba = _0x4589df[_0x1aa777(0x27a)]['x'], _0x489d53 = _0x4589df[_0x1aa777(0x27a)]['y'], _0x145fc1 = _0x4589df[_0x1aa777(0x27a)]['z'];
            _0x285bba = _0x1bf1bd * _0x10a6cf - _0x44f4ff * _0x241d94, _0x489d53 = _0x44f4ff * _0x2df971 - _0x159c83 * _0x10a6cf, _0x145fc1 = _0x159c83 * _0x241d94 - _0x1bf1bd * _0x2df971;
            var _0x3bc52a = _0x5c248e * _0x285bba + _0x2edf53 * _0x489d53 + _0x2cd460 * _0x145fc1;
            if (_0x57b8d6[_0x1aa777(0x1e6)](_0x3bc52a))
                return ![];
            var _0x1cd0f5 = 0x1 / _0x3bc52a, _0x58950d = _0x4589df[_0x1aa777(0x87f)]['x'], _0xb446b5 = _0x4589df[_0x1aa777(0x87f)]['y'], _0x25a2bd = _0x4589df[_0x1aa777(0x87f)]['z'];
            _0x58950d = _0x2aa0d7 - _0x570e4a, _0xb446b5 = _0x141322 - _0x5c9eae, _0x25a2bd = _0x188c12 - _0x53e7b7;
            var _0x4a88bd = _0x58950d * _0x285bba + _0xb446b5 * _0x489d53 + _0x25a2bd * _0x145fc1;
            _0x4a88bd *= _0x1cd0f5;
            if (_0x4a88bd < 0x0 || _0x4a88bd > 0x1)
                return ![];
            var _0x2d1331 = _0x4589df[_0x1aa777(0x880)]['x'], _0x55d21b = _0x4589df[_0x1aa777(0x880)]['y'], _0x549e02 = _0x4589df['_tempV34']['z'];
            _0x2d1331 = _0xb446b5 * _0x2cd460 - _0x25a2bd * _0x2edf53, _0x55d21b = _0x25a2bd * _0x5c248e - _0x58950d * _0x2cd460, _0x549e02 = _0x58950d * _0x2edf53 - _0xb446b5 * _0x5c248e;
            var _0x16760c = _0x159c83 * _0x2d1331 + _0x1bf1bd * _0x55d21b + _0x44f4ff * _0x549e02;
            _0x16760c *= _0x1cd0f5;
            if (_0x16760c < 0x0 || _0x4a88bd + _0x16760c > 0x1)
                return ![];
            var _0x57228d = _0x2df971 * _0x2d1331 + _0x241d94 * _0x55d21b + _0x10a6cf * _0x549e02;
            _0x57228d *= _0x1cd0f5;
            if (_0x57228d < 0x0)
                return ![];
            return !![];
        }
        static [_0x5659be(0x881)](_0x7c4ed9, _0x3b30e1, _0x404ac6, _0x57d601, _0xe2da2a) {
            var _0x332f6d = _0x5659be, _0x13e88f;
            if (!_0x4589df[_0x332f6d(0x882)](_0x7c4ed9, _0x3b30e1, _0x404ac6, _0x57d601, _0x13e88f))
                return _0xe2da2a = _0x3f70c5[_0x332f6d(0x214)], ![];
            return _0x3f70c5[_0x332f6d(0x1ee)](_0x7c4ed9[_0x332f6d(0x87e)], _0x13e88f, _0x4589df[_0x332f6d(0x278)]), _0x3f70c5['add'](_0x7c4ed9['origin'], _0x4589df[_0x332f6d(0x278)], _0xe2da2a), !![];
        }
        static [_0x5659be(0x883)](_0x1fe986, _0x39241f) {
            var _0x16cabc = _0x5659be;
            _0x3f70c5['subtract'](_0x1fe986[_0x16cabc(0x876)], _0x39241f, _0x4589df['_tempV30']);
            var _0x53267e = _0x3f70c5[_0x16cabc(0x1f1)](_0x4589df[_0x16cabc(0x278)], _0x1fe986[_0x16cabc(0x87e)]), _0x1435c0 = _0x3f70c5[_0x16cabc(0x1f1)](_0x4589df[_0x16cabc(0x278)], _0x4589df[_0x16cabc(0x278)]) - _0x57b8d6['zeroTolerance'];
            if (_0x1435c0 > 0x0 && _0x53267e > 0x0)
                return ![];
            var _0x15900f = _0x53267e * _0x53267e - _0x1435c0;
            if (_0x15900f < 0x0)
                return ![];
            return !![];
        }
        static [_0x5659be(0x884)](_0x127f7f, _0x1c0316, _0x1fd8e3) {
            var _0x2fbfbf = _0x5659be, _0x34f21c = _0x127f7f[_0x2fbfbf(0x876)], _0x134133 = _0x34f21c['x'], _0x30bb21 = _0x34f21c['y'], _0xccd63a = _0x34f21c['z'], _0x5cfec5 = _0x127f7f[_0x2fbfbf(0x87e)], _0x1dd001 = _0x5cfec5['x'], _0x578011 = _0x5cfec5['y'], _0x11108c = _0x5cfec5['z'], _0x1f800c = _0x1c0316['origin'], _0x52a5bd = _0x1f800c['x'], _0x462c8e = _0x1f800c['y'], _0x12ced6 = _0x1f800c['z'], _0x22ebc3 = _0x1c0316[_0x2fbfbf(0x87e)], _0x29213d = _0x22ebc3['x'], _0x358dd6 = _0x22ebc3['y'], _0xcdba2c = _0x22ebc3['z'];
            _0x3f70c5[_0x2fbfbf(0x211)](_0x5cfec5, _0x22ebc3, _0x4589df[_0x2fbfbf(0x278)]);
            var _0x3b1dc4 = _0x4589df[_0x2fbfbf(0x278)], _0x4f507d = _0x3f70c5[_0x2fbfbf(0x1f3)](_0x4589df[_0x2fbfbf(0x278)]);
            if (_0x57b8d6[_0x2fbfbf(0x1e6)](_0x4f507d)) {
                if (_0x57b8d6['nearEqual'](_0x52a5bd, _0x134133) && _0x57b8d6[_0x2fbfbf(0x1e8)](_0x462c8e, _0x30bb21) && _0x57b8d6[_0x2fbfbf(0x1e8)](_0x12ced6, _0xccd63a))
                    return !![];
            }
            _0x4f507d = _0x4f507d * _0x4f507d;
            var _0x3704fb = _0x52a5bd - _0x134133, _0x2df45e = _0x462c8e - _0x30bb21, _0xb26d8f = _0x12ced6 - _0xccd63a, _0x1039a3 = _0x29213d, _0x4f27f9 = _0x358dd6, _0x4d5081 = _0xcdba2c, _0x2edb19 = _0x3b1dc4['x'], _0x13040c = _0x3b1dc4['y'], _0xb7a529 = _0x3b1dc4['z'], _0x1a55e9 = _0x3704fb * _0x4f27f9 * _0xb7a529 + _0x2df45e * _0x4d5081 * _0x2edb19 + _0xb26d8f * _0x1039a3 * _0x13040c - _0x3704fb * _0x4d5081 * _0x13040c - _0x2df45e * _0x1039a3 * _0xb7a529 - _0xb26d8f * _0x4f27f9 * _0x2edb19;
            _0x1039a3 = _0x1dd001, _0x4f27f9 = _0x578011, _0x4d5081 = _0x11108c;
            var _0x553afe = _0x1a55e9 / _0x4f507d;
            _0x3f70c5[_0x2fbfbf(0x1ee)](_0x5cfec5, _0x553afe, _0x4589df['_tempV30']), _0x3f70c5[_0x2fbfbf(0x1ee)](_0x22ebc3, _0x553afe, _0x4589df[_0x2fbfbf(0x279)]), _0x3f70c5[_0x2fbfbf(0x201)](_0x34f21c, _0x4589df[_0x2fbfbf(0x278)], _0x4589df[_0x2fbfbf(0x27a)]), _0x3f70c5['add'](_0x1f800c, _0x4589df['_tempV31'], _0x4589df['_tempV33']);
            var _0x43baad = _0x4589df[_0x2fbfbf(0x27a)], _0x3115a4 = _0x4589df[_0x2fbfbf(0x87f)];
            if (!_0x57b8d6[_0x2fbfbf(0x1e8)](_0x3115a4['x'], _0x43baad['x']) || !_0x57b8d6[_0x2fbfbf(0x1e8)](_0x3115a4['y'], _0x43baad['y']) || !_0x57b8d6[_0x2fbfbf(0x1e8)](_0x3115a4['z'], _0x43baad['z']))
                return ![];
            return !![];
        }
        static [_0x5659be(0x885)](_0x2afd91, _0x5e2bf2, _0x179a1b, _0xe887f2) {
            var _0x186bf5 = _0x5659be, _0x27e43a = _0x4589df[_0x186bf5(0x886)](_0x2afd91, _0x5e2bf2), _0x2e539c = _0x4589df[_0x186bf5(0x886)](_0x2afd91, _0x179a1b), _0x2a0a31 = _0x4589df[_0x186bf5(0x886)](_0x2afd91, _0xe887f2);
            if (_0x27e43a == _0x4d8983[_0x186bf5(0x874)] && _0x2e539c == _0x4d8983[_0x186bf5(0x874)] && _0x2a0a31 == _0x4d8983['PlaneIntersectionType_Front'])
                return _0x4d8983[_0x186bf5(0x874)];
            if (_0x27e43a == _0x4d8983[_0x186bf5(0x887)] && _0x2e539c == _0x4d8983[_0x186bf5(0x887)] && _0x2a0a31 == _0x4d8983['PlaneIntersectionType_Back'])
                return _0x4d8983[_0x186bf5(0x887)];
            return _0x4d8983['PlaneIntersectionType_Intersecting'];
        }
        static [_0x5659be(0x888)](_0xc8c8e, _0x22933c) {
            var _0x55f132 = _0x5659be, _0x3bfd7b = _0x22933c[_0x55f132(0x829)], _0x282bc2 = _0x3f70c5[_0x55f132(0x1f1)](_0x3bfd7b, _0xc8c8e['direction']);
            if (Math[_0x55f132(0x1e7)](_0x282bc2) < _0x57b8d6[_0x55f132(0x1eb)])
                return -0x1;
            var _0x3f254e = _0x3f70c5[_0x55f132(0x1f1)](_0x3bfd7b, _0xc8c8e[_0x55f132(0x876)]), _0x26bada = (-_0x22933c[_0x55f132(0x208)] - _0x3f254e) / _0x282bc2;
            if (_0x26bada < 0x0) {
                if (_0x26bada < -_0x57b8d6[_0x55f132(0x1eb)])
                    return -0x1;
                _0x26bada = 0x0;
            }
            return _0x26bada;
        }
        static ['intersectsRayAndPlaneRP'](_0x14bf8c, _0x121134, _0x385958) {
            var _0x268e46 = _0x5659be, _0xa5ef9b = _0x4589df[_0x268e46(0x888)](_0x14bf8c, _0x121134);
            if (_0xa5ef9b == -0x1)
                return _0x385958[_0x268e46(0x1fa)](0x0, 0x0, 0x0), ![];
            var _0x2e9cba = _0x4589df[_0x268e46(0x278)];
            return _0x3f70c5[_0x268e46(0x1ee)](_0x14bf8c[_0x268e46(0x87e)], _0xa5ef9b, _0x2e9cba), _0x3f70c5[_0x268e46(0x201)](_0x14bf8c[_0x268e46(0x876)], _0x2e9cba, _0x385958), !![];
        }
        static ['intersectsRayAndBoxRD'](_0x3b193f, _0x1c00ba) {
            var _0x4910d0 = _0x5659be, _0x588b34 = _0x3b193f[_0x4910d0(0x876)], _0x31fffd = _0x588b34['x'], _0x4e4390 = _0x588b34['y'], _0x36d74d = _0x588b34['z'], _0x204382 = _0x3b193f[_0x4910d0(0x87e)], _0x251fbb = _0x204382['x'], _0x4b1a37 = _0x204382['y'], _0x1c2599 = _0x204382['z'], _0x266a0e = _0x1c00ba['min'], _0x2ff5c1 = _0x266a0e['x'], _0x41b633 = _0x266a0e['y'], _0x2065a9 = _0x266a0e['z'], _0x16dc92 = _0x1c00ba[_0x4910d0(0x205)], _0x1724de = _0x16dc92['x'], _0x11d86c = _0x16dc92['y'], _0x27972d = _0x16dc92['z'], _0xc526a9 = 0x0, _0x15d73a = _0x57b8d6[_0x4910d0(0x1ec)];
            if (_0x57b8d6[_0x4910d0(0x1e6)](_0x251fbb)) {
                if (_0x31fffd < _0x2ff5c1 || _0x31fffd > _0x1724de)
                    return -0x1;
            } else {
                var _0x35650c = 0x1 / _0x251fbb, _0x326718 = (_0x2ff5c1 - _0x31fffd) * _0x35650c, _0x538422 = (_0x1724de - _0x31fffd) * _0x35650c;
                if (_0x326718 > _0x538422) {
                    var _0x39776b = _0x326718;
                    _0x326718 = _0x538422, _0x538422 = _0x39776b;
                }
                _0xc526a9 = Math[_0x4910d0(0x205)](_0x326718, _0xc526a9), _0x15d73a = Math['min'](_0x538422, _0x15d73a);
                if (_0xc526a9 > _0x15d73a)
                    return -0x1;
            }
            if (_0x57b8d6[_0x4910d0(0x1e6)](_0x4b1a37)) {
                if (_0x4e4390 < _0x41b633 || _0x4e4390 > _0x11d86c)
                    return -0x1;
            } else {
                var _0xafa901 = 0x1 / _0x4b1a37, _0x538460 = (_0x41b633 - _0x4e4390) * _0xafa901, _0x1bb2a9 = (_0x11d86c - _0x4e4390) * _0xafa901;
                if (_0x538460 > _0x1bb2a9) {
                    var _0x3c4b8c = _0x538460;
                    _0x538460 = _0x1bb2a9, _0x1bb2a9 = _0x3c4b8c;
                }
                _0xc526a9 = Math['max'](_0x538460, _0xc526a9), _0x15d73a = Math['min'](_0x1bb2a9, _0x15d73a);
                if (_0xc526a9 > _0x15d73a)
                    return -0x1;
            }
            if (_0x57b8d6[_0x4910d0(0x1e6)](_0x1c2599)) {
                if (_0x36d74d < _0x2065a9 || _0x36d74d > _0x27972d)
                    return -0x1;
            } else {
                var _0x2e096b = 0x1 / _0x1c2599, _0x5d2d60 = (_0x2065a9 - _0x36d74d) * _0x2e096b, _0x1d8320 = (_0x27972d - _0x36d74d) * _0x2e096b;
                if (_0x5d2d60 > _0x1d8320) {
                    var _0x18f00a = _0x5d2d60;
                    _0x5d2d60 = _0x1d8320, _0x1d8320 = _0x18f00a;
                }
                _0xc526a9 = Math[_0x4910d0(0x205)](_0x5d2d60, _0xc526a9), _0x15d73a = Math['min'](_0x1d8320, _0x15d73a);
                if (_0xc526a9 > _0x15d73a)
                    return -0x1;
            }
            return _0xc526a9;
        }
        static ['intersectsRayAndBoxRP'](_0x21eed8, _0x2de06b, _0x542fd3) {
            var _0x2f0bfb = _0x5659be, _0x80aa15 = _0x4589df[_0x2f0bfb(0x889)](_0x21eed8, _0x2de06b);
            if (_0x80aa15 === -0x1)
                return _0x3f70c5[_0x2f0bfb(0x214)]['cloneTo'](_0x542fd3), _0x80aa15;
            return _0x3f70c5['scale'](_0x21eed8[_0x2f0bfb(0x87e)], _0x80aa15, _0x4589df['_tempV30']), _0x3f70c5[_0x2f0bfb(0x201)](_0x21eed8[_0x2f0bfb(0x876)], _0x4589df[_0x2f0bfb(0x278)], _0x4589df[_0x2f0bfb(0x279)]), _0x4589df[_0x2f0bfb(0x279)][_0x2f0bfb(0x1f0)](_0x542fd3), _0x80aa15;
        }
        static [_0x5659be(0x88a)](_0x5a01b9, _0x36a520) {
            var _0x3a90ea = _0x5659be, _0xb4d832 = _0x36a520[_0x3a90ea(0x87d)];
            _0x3f70c5[_0x3a90ea(0x210)](_0x5a01b9['origin'], _0x36a520['center'], _0x4589df[_0x3a90ea(0x278)]);
            var _0xb5850e = _0x3f70c5[_0x3a90ea(0x1f1)](_0x4589df[_0x3a90ea(0x278)], _0x5a01b9[_0x3a90ea(0x87e)]), _0x20827a = _0x3f70c5[_0x3a90ea(0x1f1)](_0x4589df[_0x3a90ea(0x278)], _0x4589df['_tempV30']) - _0xb4d832 * _0xb4d832;
            if (_0x20827a > 0x0 && _0xb5850e > 0x0)
                return -0x1;
            var _0x23f15d = _0xb5850e * _0xb5850e - _0x20827a;
            if (_0x23f15d < 0x0)
                return -0x1;
            var _0x27ed3b = -_0xb5850e - Math[_0x3a90ea(0x1ea)](_0x23f15d);
            if (_0x27ed3b < 0x0)
                _0x27ed3b = 0x0;
            return _0x27ed3b;
        }
        static [_0x5659be(0x88b)](_0x330cd2, _0x56b2d9, _0x3504f0) {
            var _0x194f0e = _0x5659be, _0x1c7e73 = _0x4589df[_0x194f0e(0x88a)](_0x330cd2, _0x56b2d9);
            if (_0x1c7e73 === -0x1)
                return _0x3f70c5[_0x194f0e(0x214)][_0x194f0e(0x1f0)](_0x3504f0), _0x1c7e73;
            return _0x3f70c5['scale'](_0x330cd2['direction'], _0x1c7e73, _0x4589df[_0x194f0e(0x278)]), _0x3f70c5[_0x194f0e(0x201)](_0x330cd2['origin'], _0x4589df[_0x194f0e(0x278)], _0x4589df[_0x194f0e(0x279)]), _0x4589df['_tempV31'][_0x194f0e(0x1f0)](_0x3504f0), _0x1c7e73;
        }
        static [_0x5659be(0x88c)](_0x229665, _0x15251f, _0x185d0f, _0x344094) {
            var _0x4e597a = _0x5659be, _0x2d16e0 = _0x229665[_0x4e597a(0x87c)], _0x48e155 = _0x229665[_0x4e597a(0x87d)];
            _0x4589df['closestPointPointTriangle'](_0x2d16e0, _0x15251f, _0x185d0f, _0x344094, _0x4589df[_0x4e597a(0x278)]), _0x3f70c5['subtract'](_0x4589df[_0x4e597a(0x278)], _0x2d16e0, _0x4589df[_0x4e597a(0x279)]);
            var _0x36f77d = _0x3f70c5[_0x4e597a(0x1f1)](_0x4589df[_0x4e597a(0x279)], _0x4589df['_tempV31']);
            return _0x36f77d <= _0x48e155 * _0x48e155;
        }
        static [_0x5659be(0x886)](_0x2db5ae, _0x1ebaf8) {
            var _0x3f7578 = _0x5659be, _0x2a8fe2 = _0x3f70c5['dot'](_0x2db5ae['normal'], _0x1ebaf8) + _0x2db5ae[_0x3f7578(0x208)];
            if (_0x2a8fe2 > 0x0)
                return _0x4d8983[_0x3f7578(0x874)];
            if (_0x2a8fe2 < 0x0)
                return _0x4d8983[_0x3f7578(0x887)];
            return _0x4d8983[_0x3f7578(0x875)];
        }
        static [_0x5659be(0x88d)](_0x3da91b, _0x4d16c9) {
            var _0x44c6f5 = _0x5659be;
            _0x3f70c5[_0x44c6f5(0x211)](_0x3da91b[_0x44c6f5(0x829)], _0x4d16c9[_0x44c6f5(0x829)], _0x4589df[_0x44c6f5(0x278)]);
            var _0x109c25 = _0x3f70c5[_0x44c6f5(0x1f1)](_0x4589df['_tempV30'], _0x4589df[_0x44c6f5(0x278)]);
            if (_0x57b8d6['isZero'](_0x109c25))
                return ![];
            return !![];
        }
        static ['intersectsPlaneAndPlaneRL'](_0x5d3761, _0x264f8c, _0x1f1711) {
            var _0x489210 = _0x5659be, _0x11f688 = _0x5d3761[_0x489210(0x829)], _0x2751d0 = _0x264f8c[_0x489210(0x829)];
            _0x3f70c5['cross'](_0x11f688, _0x2751d0, _0x4589df[_0x489210(0x880)]);
            var _0x4a8e38 = _0x3f70c5['dot'](_0x4589df[_0x489210(0x880)], _0x4589df[_0x489210(0x880)]);
            if (_0x57b8d6[_0x489210(0x1e6)](_0x4a8e38))
                return ![];
            return _0x3f70c5[_0x489210(0x1ee)](_0x2751d0, _0x5d3761[_0x489210(0x208)], _0x4589df[_0x489210(0x278)]), _0x3f70c5[_0x489210(0x1ee)](_0x11f688, _0x264f8c[_0x489210(0x208)], _0x4589df[_0x489210(0x279)]), _0x3f70c5[_0x489210(0x210)](_0x4589df['_tempV30'], _0x4589df[_0x489210(0x279)], _0x4589df[_0x489210(0x27a)]), _0x3f70c5[_0x489210(0x211)](_0x4589df[_0x489210(0x27a)], _0x4589df[_0x489210(0x880)], _0x4589df['_tempV33']), _0x3f70c5[_0x489210(0x1f2)](_0x4589df[_0x489210(0x880)], _0x4589df[_0x489210(0x880)]), !![];
        }
        static [_0x5659be(0x88e)](_0x52e5ae, _0x1d3c41) {
            var _0x460294 = _0x5659be, _0x1b7272 = _0x52e5ae[_0x460294(0x208)], _0x3c28a9 = _0x52e5ae[_0x460294(0x829)], _0x164956 = _0x3c28a9['x'], _0xf778dc = _0x3c28a9['y'], _0x538444 = _0x3c28a9['z'], _0x3e7736 = _0x1d3c41[_0x460294(0x204)], _0x5244ca = _0x3e7736['x'], _0x5bbab7 = _0x3e7736['y'], _0x1ab3c0 = _0x3e7736['z'], _0x2d61ad = _0x1d3c41[_0x460294(0x205)], _0x5c0fce = _0x2d61ad['x'], _0x2ad046 = _0x2d61ad['y'], _0x3ecd8e = _0x2d61ad['z'];
            _0x4589df[_0x460294(0x278)]['x'] = _0x164956 > 0x0 ? _0x5244ca : _0x5c0fce, _0x4589df[_0x460294(0x278)]['y'] = _0xf778dc > 0x0 ? _0x5bbab7 : _0x2ad046, _0x4589df[_0x460294(0x278)]['z'] = _0x538444 > 0x0 ? _0x1ab3c0 : _0x3ecd8e, _0x4589df['_tempV31']['x'] = _0x164956 > 0x0 ? _0x5c0fce : _0x5244ca, _0x4589df[_0x460294(0x279)]['y'] = _0xf778dc > 0x0 ? _0x2ad046 : _0x5bbab7, _0x4589df[_0x460294(0x279)]['z'] = _0x538444 > 0x0 ? _0x3ecd8e : _0x1ab3c0;
            var _0x420706 = _0x3f70c5['dot'](_0x3c28a9, _0x4589df[_0x460294(0x278)]);
            if (_0x420706 + _0x1b7272 > 0x0)
                return _0x4d8983['PlaneIntersectionType_Front'];
            _0x420706 = _0x3f70c5[_0x460294(0x1f1)](_0x3c28a9, _0x4589df['_tempV31']);
            if (_0x420706 + _0x1b7272 < 0x0)
                return _0x4d8983[_0x460294(0x887)];
            return _0x4d8983[_0x460294(0x875)];
        }
        static [_0x5659be(0x88f)](_0x246f75, _0x5c9406) {
            var _0x229778 = _0x5659be, _0x337a1e = _0x5c9406['radius'], _0x25352f = _0x3f70c5[_0x229778(0x1f1)](_0x246f75[_0x229778(0x829)], _0x5c9406[_0x229778(0x87c)]) + _0x246f75[_0x229778(0x208)];
            if (_0x25352f > _0x337a1e)
                return _0x4d8983[_0x229778(0x874)];
            if (_0x25352f < -_0x337a1e)
                return _0x4d8983[_0x229778(0x887)];
            return _0x4d8983[_0x229778(0x875)];
        }
        static [_0x5659be(0x890)](_0x4797ab, _0x358b90) {
            var _0x44f8eb = _0x5659be, _0x5efac1 = _0x4797ab[_0x44f8eb(0x204)], _0x7d6236 = _0x4797ab['max'], _0x1a2ba0 = _0x358b90['min'], _0x18360a = _0x358b90[_0x44f8eb(0x205)];
            if (_0x5efac1['x'] > _0x18360a['x'] || _0x1a2ba0['x'] > _0x7d6236['x'])
                return ![];
            if (_0x5efac1['y'] > _0x18360a['y'] || _0x1a2ba0['y'] > _0x7d6236['y'])
                return ![];
            if (_0x5efac1['z'] > _0x18360a['z'] || _0x1a2ba0['z'] > _0x7d6236['z'])
                return ![];
            return !![];
        }
        static [_0x5659be(0x891)](_0x2bd1e9, _0x44177e) {
            var _0x4dc893 = _0x5659be, _0x545ff2 = _0x44177e['center'], _0x406e42 = _0x44177e['radius'], _0x511b31 = _0x4589df[_0x4dc893(0x278)];
            _0x3f70c5['Clamp'](_0x545ff2, _0x2bd1e9['min'], _0x2bd1e9['max'], _0x511b31);
            var _0x307aa8 = _0x3f70c5[_0x4dc893(0x203)](_0x545ff2, _0x511b31);
            return _0x307aa8 <= _0x406e42 * _0x406e42;
        }
        static [_0x5659be(0x892)](_0x370a14, _0x3ea1c6) {
            var _0xa8dc76 = _0x5659be, _0xf5fc24 = _0x370a14['radius'] + _0x3ea1c6[_0xa8dc76(0x87d)];
            return _0x3f70c5[_0xa8dc76(0x203)](_0x370a14[_0xa8dc76(0x87c)], _0x3ea1c6[_0xa8dc76(0x87c)]) <= _0xf5fc24 * _0xf5fc24;
        }
        static [_0x5659be(0x893)](_0x451111, _0x311ffe) {
            var _0x408cc1 = _0x5659be, _0x5e3f69 = _0x451111[_0x408cc1(0x204)], _0x28bfec = _0x451111[_0x408cc1(0x205)];
            if (_0x5e3f69['x'] <= _0x311ffe['x'] && _0x28bfec['x'] >= _0x311ffe['x'] && _0x5e3f69['y'] <= _0x311ffe['y'] && _0x28bfec['y'] >= _0x311ffe['y'] && _0x5e3f69['z'] <= _0x311ffe['z'] && _0x28bfec['z'] >= _0x311ffe['z'])
                return _0x25d93b[_0x408cc1(0x877)];
            return _0x25d93b[_0x408cc1(0x894)];
        }
        static ['boxContainsBox'](_0x3394f6, _0x501bb4) {
            var _0x14a85f = _0x5659be, _0x1e66ad = _0x3394f6[_0x14a85f(0x204)], _0x57cab6 = _0x1e66ad['x'], _0x35092b = _0x1e66ad['y'], _0x97eae2 = _0x1e66ad['z'], _0x304608 = _0x3394f6[_0x14a85f(0x205)], _0x18272b = _0x304608['x'], _0x3ca867 = _0x304608['y'], _0x5a18a2 = _0x304608['z'], _0x1fa0cf = _0x501bb4[_0x14a85f(0x204)], _0x23d23a = _0x1fa0cf['x'], _0x510a0e = _0x1fa0cf['y'], _0x18c790 = _0x1fa0cf['z'], _0x51ebb7 = _0x501bb4[_0x14a85f(0x205)], _0x216d02 = _0x51ebb7['x'], _0x768d7e = _0x51ebb7['y'], _0x2e4e4c = _0x51ebb7['z'];
            if (_0x18272b < _0x23d23a || _0x57cab6 > _0x216d02)
                return _0x25d93b[_0x14a85f(0x894)];
            if (_0x3ca867 < _0x510a0e || _0x35092b > _0x768d7e)
                return _0x25d93b[_0x14a85f(0x894)];
            if (_0x5a18a2 < _0x18c790 || _0x97eae2 > _0x2e4e4c)
                return _0x25d93b['Disjoint'];
            if (_0x57cab6 <= _0x23d23a && _0x216d02 <= _0x18272b && _0x35092b <= _0x510a0e && _0x768d7e <= _0x3ca867 && _0x97eae2 <= _0x18c790 && _0x2e4e4c <= _0x5a18a2)
                return _0x25d93b['Contains'];
            return _0x25d93b[_0x14a85f(0x878)];
        }
        static [_0x5659be(0x895)](_0x14ecb3, _0x2b929d) {
            var _0x550f19 = _0x5659be, _0x482c92 = _0x14ecb3[_0x550f19(0x204)], _0x1aaf42 = _0x482c92['x'], _0x512772 = _0x482c92['y'], _0x3e4572 = _0x482c92['z'], _0x411d01 = _0x14ecb3['max'], _0x1ad2aa = _0x411d01['x'], _0x16b28a = _0x411d01['y'], _0x326785 = _0x411d01['z'], _0x5e4c11 = _0x2b929d[_0x550f19(0x87c)], _0x5b9211 = _0x5e4c11['x'], _0x420f33 = _0x5e4c11['y'], _0x3568b6 = _0x5e4c11['z'], _0xdabe71 = _0x2b929d[_0x550f19(0x87d)];
            _0x3f70c5[_0x550f19(0x20f)](_0x5e4c11, _0x482c92, _0x411d01, _0x4589df[_0x550f19(0x278)]);
            var _0x2dfb28 = _0x3f70c5[_0x550f19(0x203)](_0x5e4c11, _0x4589df[_0x550f19(0x278)]);
            if (_0x2dfb28 > _0xdabe71 * _0xdabe71)
                return _0x25d93b[_0x550f19(0x894)];
            if (_0x1aaf42 + _0xdabe71 <= _0x5b9211 && _0x5b9211 <= _0x1ad2aa - _0xdabe71 && (_0x1ad2aa - _0x1aaf42 > _0xdabe71 && _0x512772 + _0xdabe71 <= _0x420f33) && (_0x420f33 <= _0x16b28a - _0xdabe71 && _0x16b28a - _0x512772 > _0xdabe71 && (_0x3e4572 + _0xdabe71 <= _0x3568b6 && _0x3568b6 <= _0x326785 - _0xdabe71 && _0x326785 - _0x3e4572 > _0xdabe71)))
                return _0x25d93b[_0x550f19(0x877)];
            return _0x25d93b[_0x550f19(0x878)];
        }
        static [_0x5659be(0x896)](_0x45d2de, _0x3e003e) {
            var _0x142aac = _0x5659be;
            if (_0x3f70c5[_0x142aac(0x203)](_0x3e003e, _0x45d2de['center']) <= _0x45d2de['radius'] * _0x45d2de[_0x142aac(0x87d)])
                return _0x25d93b['Contains'];
            return _0x25d93b[_0x142aac(0x894)];
        }
        static [_0x5659be(0x897)](_0x3ce0d1, _0x54e379, _0x3443fc, _0x34734e) {
            var _0x4cc63a = _0x5659be, _0x42082c = _0x4589df[_0x4cc63a(0x896)](_0x3ce0d1, _0x54e379), _0x241027 = _0x4589df[_0x4cc63a(0x896)](_0x3ce0d1, _0x3443fc), _0x376243 = _0x4589df[_0x4cc63a(0x896)](_0x3ce0d1, _0x34734e);
            if (_0x42082c == _0x25d93b[_0x4cc63a(0x877)] && _0x241027 == _0x25d93b[_0x4cc63a(0x877)] && _0x376243 == _0x25d93b[_0x4cc63a(0x877)])
                return _0x25d93b['Contains'];
            if (_0x4589df[_0x4cc63a(0x88c)](_0x3ce0d1, _0x54e379, _0x3443fc, _0x34734e))
                return _0x25d93b[_0x4cc63a(0x878)];
            return _0x25d93b['Disjoint'];
        }
        static [_0x5659be(0x898)](_0x2c4393, _0x25b238) {
            var _0x9333ce = _0x5659be, _0x101308 = _0x2c4393[_0x9333ce(0x87c)], _0xde0c3d = _0x101308['x'], _0x325860 = _0x101308['y'], _0x304aa5 = _0x101308['z'], _0x24c1a7 = _0x2c4393['radius'], _0x1d26fa = _0x25b238[_0x9333ce(0x204)], _0x337c32 = _0x1d26fa['x'], _0x5f0b37 = _0x1d26fa['y'], _0x3285ac = _0x1d26fa['z'], _0x226dc4 = _0x25b238['max'], _0xcc3c81 = _0x226dc4['x'], _0x3834ad = _0x226dc4['y'], _0x2d9c91 = _0x226dc4['z'], _0x2a88e5 = _0x4589df[_0x9333ce(0x278)], _0x167cc1 = _0x2a88e5['x'], _0x3a6d2c = _0x2a88e5['y'], _0x909f74 = _0x2a88e5['z'];
            if (!_0x4589df[_0x9333ce(0x891)](_0x25b238, _0x2c4393))
                return _0x25d93b['Disjoint'];
            var _0x514019 = _0x24c1a7 * _0x24c1a7;
            _0x167cc1 = _0xde0c3d - _0x337c32, _0x3a6d2c = _0x325860 - _0x3834ad, _0x909f74 = _0x304aa5 - _0x2d9c91;
            if (_0x3f70c5[_0x9333ce(0x20a)](_0x4589df[_0x9333ce(0x278)]) > _0x514019)
                return _0x25d93b['Intersects'];
            _0x167cc1 = _0xde0c3d - _0xcc3c81, _0x3a6d2c = _0x325860 - _0x3834ad, _0x909f74 = _0x304aa5 - _0x2d9c91;
            if (_0x3f70c5[_0x9333ce(0x20a)](_0x4589df['_tempV30']) > _0x514019)
                return _0x25d93b[_0x9333ce(0x878)];
            _0x167cc1 = _0xde0c3d - _0xcc3c81, _0x3a6d2c = _0x325860 - _0x5f0b37, _0x909f74 = _0x304aa5 - _0x2d9c91;
            if (_0x3f70c5[_0x9333ce(0x20a)](_0x4589df['_tempV30']) > _0x514019)
                return _0x25d93b[_0x9333ce(0x878)];
            _0x167cc1 = _0xde0c3d - _0x337c32, _0x3a6d2c = _0x325860 - _0x5f0b37, _0x909f74 = _0x304aa5 - _0x2d9c91;
            if (_0x3f70c5[_0x9333ce(0x20a)](_0x4589df[_0x9333ce(0x278)]) > _0x514019)
                return _0x25d93b[_0x9333ce(0x878)];
            _0x167cc1 = _0xde0c3d - _0x337c32, _0x3a6d2c = _0x325860 - _0x3834ad, _0x909f74 = _0x304aa5 - _0x3285ac;
            if (_0x3f70c5['scalarLengthSquared'](_0x4589df[_0x9333ce(0x278)]) > _0x514019)
                return _0x25d93b[_0x9333ce(0x878)];
            _0x167cc1 = _0xde0c3d - _0xcc3c81, _0x3a6d2c = _0x325860 - _0x3834ad, _0x909f74 = _0x304aa5 - _0x3285ac;
            if (_0x3f70c5[_0x9333ce(0x20a)](_0x4589df['_tempV30']) > _0x514019)
                return _0x25d93b[_0x9333ce(0x878)];
            _0x167cc1 = _0xde0c3d - _0xcc3c81, _0x3a6d2c = _0x325860 - _0x5f0b37, _0x909f74 = _0x304aa5 - _0x3285ac;
            if (_0x3f70c5[_0x9333ce(0x20a)](_0x4589df['_tempV30']) > _0x514019)
                return _0x25d93b[_0x9333ce(0x878)];
            _0x167cc1 = _0xde0c3d - _0x337c32, _0x3a6d2c = _0x325860 - _0x5f0b37, _0x909f74 = _0x304aa5 - _0x3285ac;
            if (_0x3f70c5['scalarLengthSquared'](_0x4589df[_0x9333ce(0x278)]) > _0x514019)
                return _0x25d93b['Intersects'];
            return _0x25d93b[_0x9333ce(0x877)];
        }
        static ['sphereContainsSphere'](_0xd7796b, _0x4c9d82) {
            var _0x6d28c6 = _0x5659be, _0x42ab54 = _0xd7796b[_0x6d28c6(0x87d)], _0x403846 = _0x4c9d82['radius'], _0x45906c = _0x3f70c5[_0x6d28c6(0x208)](_0xd7796b[_0x6d28c6(0x87c)], _0x4c9d82[_0x6d28c6(0x87c)]);
            if (_0x42ab54 + _0x403846 < _0x45906c)
                return _0x25d93b['Disjoint'];
            if (_0x42ab54 - _0x403846 < _0x45906c)
                return _0x25d93b['Intersects'];
            return _0x25d93b[_0x6d28c6(0x877)];
        }
        static [_0x5659be(0x899)](_0x486043, _0x1bf78a, _0x565013, _0x416a73, _0x5cc3cd) {
            var _0x401555 = _0x5659be;
            _0x3f70c5[_0x401555(0x210)](_0x565013, _0x1bf78a, _0x4589df[_0x401555(0x278)]), _0x3f70c5[_0x401555(0x210)](_0x416a73, _0x1bf78a, _0x4589df[_0x401555(0x279)]), _0x3f70c5[_0x401555(0x210)](_0x486043, _0x1bf78a, _0x4589df[_0x401555(0x27a)]), _0x3f70c5['subtract'](_0x486043, _0x565013, _0x4589df[_0x401555(0x87f)]), _0x3f70c5[_0x401555(0x210)](_0x486043, _0x416a73, _0x4589df[_0x401555(0x880)]);
            var _0x55b864 = _0x3f70c5['dot'](_0x4589df['_tempV30'], _0x4589df['_tempV32']), _0x519d51 = _0x3f70c5[_0x401555(0x1f1)](_0x4589df[_0x401555(0x279)], _0x4589df['_tempV32']), _0x40b3da = _0x3f70c5['dot'](_0x4589df[_0x401555(0x278)], _0x4589df[_0x401555(0x87f)]), _0x60e01b = _0x3f70c5[_0x401555(0x1f1)](_0x4589df['_tempV31'], _0x4589df[_0x401555(0x87f)]), _0x44263c = _0x3f70c5[_0x401555(0x1f1)](_0x4589df['_tempV30'], _0x4589df[_0x401555(0x880)]), _0x2d80a1 = _0x3f70c5[_0x401555(0x1f1)](_0x4589df['_tempV31'], _0x4589df[_0x401555(0x880)]);
            if (_0x55b864 <= 0x0 && _0x519d51 <= 0x0) {
                _0x1bf78a[_0x401555(0x1f0)](_0x5cc3cd);
                return;
            }
            if (_0x40b3da >= 0x0 && _0x60e01b <= _0x40b3da) {
                _0x565013[_0x401555(0x1f0)](_0x5cc3cd);
                return;
            }
            var _0x1794cb = _0x55b864 * _0x60e01b - _0x40b3da * _0x519d51;
            if (_0x1794cb <= 0x0 && _0x55b864 >= 0x0 && _0x40b3da <= 0x0) {
                var _0x5b0d96 = _0x55b864 / (_0x55b864 - _0x40b3da);
                _0x3f70c5[_0x401555(0x1ee)](_0x4589df[_0x401555(0x278)], _0x5b0d96, _0x5cc3cd), _0x3f70c5[_0x401555(0x201)](_0x1bf78a, _0x5cc3cd, _0x5cc3cd);
                return;
            }
            if (_0x2d80a1 >= 0x0 && _0x44263c <= _0x2d80a1) {
                _0x416a73['cloneTo'](_0x5cc3cd);
                return;
            }
            var _0xb56a08 = _0x44263c * _0x519d51 - _0x55b864 * _0x2d80a1;
            if (_0xb56a08 <= 0x0 && _0x519d51 >= 0x0 && _0x2d80a1 <= 0x0) {
                var _0x30cc4b = _0x519d51 / (_0x519d51 - _0x2d80a1);
                _0x3f70c5[_0x401555(0x1ee)](_0x4589df['_tempV31'], _0x30cc4b, _0x5cc3cd), _0x3f70c5['add'](_0x1bf78a, _0x5cc3cd, _0x5cc3cd);
                return;
            }
            var _0x3eb473 = _0x40b3da * _0x2d80a1 - _0x44263c * _0x60e01b;
            if (_0x3eb473 <= 0x0 && _0x60e01b - _0x40b3da >= 0x0 && _0x44263c - _0x2d80a1 >= 0x0) {
                var _0x30ca20 = (_0x60e01b - _0x40b3da) / (_0x60e01b - _0x40b3da + (_0x44263c - _0x2d80a1));
                _0x3f70c5[_0x401555(0x210)](_0x416a73, _0x565013, _0x5cc3cd), _0x3f70c5[_0x401555(0x1ee)](_0x5cc3cd, _0x30ca20, _0x5cc3cd), _0x3f70c5[_0x401555(0x201)](_0x565013, _0x5cc3cd, _0x5cc3cd);
                return;
            }
            var _0x1d9ef1 = 0x1 / (_0x3eb473 + _0xb56a08 + _0x1794cb), _0x3f8cbd = _0xb56a08 * _0x1d9ef1, _0x56838f = _0x1794cb * _0x1d9ef1;
            _0x3f70c5[_0x401555(0x1ee)](_0x4589df[_0x401555(0x278)], _0x3f8cbd, _0x4589df[_0x401555(0x89a)]), _0x3f70c5['scale'](_0x4589df['_tempV31'], _0x56838f, _0x4589df[_0x401555(0x89b)]), _0x3f70c5[_0x401555(0x201)](_0x4589df[_0x401555(0x89a)], _0x4589df[_0x401555(0x89b)], _0x5cc3cd), _0x3f70c5[_0x401555(0x201)](_0x1bf78a, _0x5cc3cd, _0x5cc3cd);
        }
        static [_0x5659be(0x89c)](_0x50a41a, _0x779511, _0x1a4d73) {
            var _0x3f33f2 = _0x5659be, _0x190d47 = _0x50a41a[_0x3f33f2(0x829)], _0x76306e = _0x3f70c5[_0x3f33f2(0x1f1)](_0x190d47, _0x779511) - _0x50a41a['distance'];
            _0x3f70c5['scale'](_0x190d47, _0x76306e, _0x4589df[_0x3f33f2(0x278)]), _0x3f70c5[_0x3f33f2(0x210)](_0x779511, _0x4589df[_0x3f33f2(0x278)], _0x1a4d73);
        }
        static ['closestPointBoxPoint'](_0x32ab0d, _0x1a4c21, _0x1e0e24) {
            var _0xd9ba18 = _0x5659be;
            _0x3f70c5['max'](_0x1a4c21, _0x32ab0d[_0xd9ba18(0x204)], _0x4589df['_tempV30']), _0x3f70c5[_0xd9ba18(0x204)](_0x4589df['_tempV30'], _0x32ab0d['max'], _0x1e0e24);
        }
        static ['closestPointSpherePoint'](_0x1735cd, _0x4c304b, _0x27f1d2) {
            var _0x352c04 = _0x5659be, _0x582f2c = _0x1735cd[_0x352c04(0x87c)];
            _0x3f70c5['subtract'](_0x4c304b, _0x582f2c, _0x27f1d2), _0x3f70c5[_0x352c04(0x1f2)](_0x27f1d2, _0x27f1d2), _0x3f70c5[_0x352c04(0x1ee)](_0x27f1d2, _0x1735cd['radius'], _0x27f1d2), _0x3f70c5[_0x352c04(0x201)](_0x27f1d2, _0x582f2c, _0x27f1d2);
        }
        static [_0x5659be(0x89d)](_0xb79db9, _0x2fafd5, _0x105917) {
            var _0x42b4e2 = _0x5659be, _0x3ad703 = _0xb79db9['center'];
            _0x3f70c5['subtract'](_0x2fafd5[_0x42b4e2(0x87c)], _0x3ad703, _0x105917), _0x3f70c5[_0x42b4e2(0x1f2)](_0x105917, _0x105917), _0x3f70c5[_0x42b4e2(0x1ee)](_0x105917, _0xb79db9[_0x42b4e2(0x87d)], _0x105917), _0x3f70c5[_0x42b4e2(0x201)](_0x105917, _0x3ad703, _0x105917);
        }
    }
    _0x4589df['_tempV30'] = new _0x3f70c5(), _0x4589df[_0x5659be(0x279)] = new _0x3f70c5(), _0x4589df[_0x5659be(0x27a)] = new _0x3f70c5(), _0x4589df[_0x5659be(0x87f)] = new _0x3f70c5(), _0x4589df['_tempV34'] = new _0x3f70c5(), _0x4589df['_tempV35'] = new _0x3f70c5(), _0x4589df[_0x5659be(0x89b)] = new _0x3f70c5(), function (_0x289ee5) {
        var _0x510f0c = _0x5659be;
        _0x289ee5[_0x289ee5[_0x510f0c(0x89e)] = 0x0] = _0x510f0c(0x89e), _0x289ee5[_0x289ee5[_0x510f0c(0x89f)] = 0x1] = _0x510f0c(0x89f), _0x289ee5[_0x289ee5[_0x510f0c(0x8a0)] = 0x2] = _0x510f0c(0x8a0), _0x289ee5[_0x289ee5[_0x510f0c(0x8a1)] = 0x3] = 'FarBottomRight', _0x289ee5[_0x289ee5[_0x510f0c(0x8a2)] = 0x4] = 'nearBottomLeft', _0x289ee5[_0x289ee5[_0x510f0c(0x8a3)] = 0x5] = _0x510f0c(0x8a3), _0x289ee5[_0x289ee5['nearTopRight'] = 0x6] = _0x510f0c(0x8a4), _0x289ee5[_0x289ee5[_0x510f0c(0x8a5)] = 0x7] = _0x510f0c(0x8a5), _0x289ee5[_0x289ee5[_0x510f0c(0x8a6)] = 0x8] = _0x510f0c(0x8a6);
    }(_0x71dec4[_0x5659be(0x8a7)] || (_0x71dec4[_0x5659be(0x8a7)] = {}));
    class _0x26b0f2 {
        constructor(_0x178d20) {
            var _0x3821b1 = _0x5659be;
            this['_matrix'] = _0x178d20, this[_0x3821b1(0x8a8)] = new _0x4d8983(new _0x3f70c5()), this[_0x3821b1(0x8a9)] = new _0x4d8983(new _0x3f70c5()), this['_left'] = new _0x4d8983(new _0x3f70c5()), this['_right'] = new _0x4d8983(new _0x3f70c5()), this[_0x3821b1(0x8aa)] = new _0x4d8983(new _0x3f70c5()), this[_0x3821b1(0x8ab)] = new _0x4d8983(new _0x3f70c5()), _0x26b0f2[_0x3821b1(0x8ac)](this[_0x3821b1(0x5d8)], this['_near'], this[_0x3821b1(0x8a9)], this[_0x3821b1(0x8ad)], this['_right'], this['_top'], this[_0x3821b1(0x8ab)]);
        }
        static [_0x5659be(0x8ac)](_0x4d843f, _0x25dc57, _0x4893f1, _0x1b5731, _0x1c415d, _0x127699, _0x45e151) {
            var _0xd1f404 = _0x5659be, _0x3fb323 = _0x4d843f[_0xd1f404(0x1f6)], _0x20bb00 = _0x3fb323[0x0], _0x389c27 = _0x3fb323[0x1], _0xb075cf = _0x3fb323[0x2], _0x59fa24 = _0x3fb323[0x3], _0x5695f1 = _0x3fb323[0x4], _0x5fce2 = _0x3fb323[0x5], _0x1eb97b = _0x3fb323[0x6], _0x133ef4 = _0x3fb323[0x7], _0x5410af = _0x3fb323[0x8], _0x42b505 = _0x3fb323[0x9], _0x44162c = _0x3fb323[0xa], _0x26df86 = _0x3fb323[0xb], _0x244063 = _0x3fb323[0xc], _0x12580d = _0x3fb323[0xd], _0x46b484 = _0x3fb323[0xe], _0x4bf8f7 = _0x3fb323[0xf], _0x280a02 = _0x25dc57[_0xd1f404(0x829)];
            _0x280a02['x'] = _0xb075cf, _0x280a02['y'] = _0x1eb97b, _0x280a02['z'] = _0x44162c, _0x25dc57['distance'] = _0x46b484, _0x25dc57['normalize']();
            var _0x30631d = _0x4893f1[_0xd1f404(0x829)];
            _0x30631d['x'] = _0x59fa24 - _0xb075cf, _0x30631d['y'] = _0x133ef4 - _0x1eb97b, _0x30631d['z'] = _0x26df86 - _0x44162c, _0x4893f1['distance'] = _0x4bf8f7 - _0x46b484, _0x4893f1['normalize']();
            var _0xb25d0d = _0x1b5731['normal'];
            _0xb25d0d['x'] = _0x59fa24 + _0x20bb00, _0xb25d0d['y'] = _0x133ef4 + _0x5695f1, _0xb25d0d['z'] = _0x26df86 + _0x5410af, _0x1b5731[_0xd1f404(0x208)] = _0x4bf8f7 + _0x244063, _0x1b5731[_0xd1f404(0x1f2)]();
            var _0x185665 = _0x1c415d[_0xd1f404(0x829)];
            _0x185665['x'] = _0x59fa24 - _0x20bb00, _0x185665['y'] = _0x133ef4 - _0x5695f1, _0x185665['z'] = _0x26df86 - _0x5410af, _0x1c415d[_0xd1f404(0x208)] = _0x4bf8f7 - _0x244063, _0x1c415d[_0xd1f404(0x1f2)]();
            var _0x94f97 = _0x127699[_0xd1f404(0x829)];
            _0x94f97['x'] = _0x59fa24 - _0x389c27, _0x94f97['y'] = _0x133ef4 - _0x5fce2, _0x94f97['z'] = _0x26df86 - _0x42b505, _0x127699[_0xd1f404(0x208)] = _0x4bf8f7 - _0x12580d, _0x127699[_0xd1f404(0x1f2)]();
            var _0x41cc76 = _0x45e151[_0xd1f404(0x829)];
            _0x41cc76['x'] = _0x59fa24 + _0x389c27, _0x41cc76['y'] = _0x133ef4 + _0x5fce2, _0x41cc76['z'] = _0x26df86 + _0x42b505, _0x45e151['distance'] = _0x4bf8f7 + _0x12580d, _0x45e151[_0xd1f404(0x1f2)]();
        }
        get [_0x5659be(0x8ae)]() {
            var _0x9a4f8d = _0x5659be;
            return this[_0x9a4f8d(0x5d8)];
        }
        set ['matrix'](_0x468917) {
            var _0x449d28 = _0x5659be;
            _0x468917[_0x449d28(0x1f0)](this[_0x449d28(0x5d8)]), _0x26b0f2[_0x449d28(0x8ac)](this[_0x449d28(0x5d8)], this['_near'], this[_0x449d28(0x8a9)], this[_0x449d28(0x8ad)], this[_0x449d28(0x8af)], this[_0x449d28(0x8aa)], this[_0x449d28(0x8ab)]);
        }
        get [_0x5659be(0x8b0)]() {
            var _0x213115 = _0x5659be;
            return this[_0x213115(0x8a8)];
        }
        get [_0x5659be(0x8b1)]() {
            var _0x108b68 = _0x5659be;
            return this[_0x108b68(0x8a9)];
        }
        get [_0x5659be(0x8b2)]() {
            var _0x57287f = _0x5659be;
            return this[_0x57287f(0x8ad)];
        }
        get [_0x5659be(0x8b3)]() {
            var _0x4aee6d = _0x5659be;
            return this[_0x4aee6d(0x8af)];
        }
        get [_0x5659be(0x8b4)]() {
            return this['_top'];
        }
        get [_0x5659be(0x8b5)]() {
            var _0x6819dd = _0x5659be;
            return this[_0x6819dd(0x8ab)];
        }
        ['equalsBoundFrustum'](_0x443b17) {
            var _0x9a5d24 = _0x5659be;
            return this['_matrix']['equalsOtherMatrix'](_0x443b17[_0x9a5d24(0x8ae)]);
        }
        [_0x5659be(0x8b6)](_0x491fbc) {
            var _0x5dabd5 = _0x5659be;
            if (_0x491fbc instanceof _0x26b0f2) {
                var _0x34a743 = _0x491fbc;
                return this[_0x5dabd5(0x8b7)](_0x34a743);
            }
            return ![];
        }
        ['getPlane'](_0x18037c) {
            var _0x136ade = _0x5659be;
            switch (_0x18037c) {
            case 0x0:
                return this[_0x136ade(0x8a8)];
            case 0x1:
                return this[_0x136ade(0x8a9)];
            case 0x2:
                return this[_0x136ade(0x8ad)];
            case 0x3:
                return this['_right'];
            case 0x4:
                return this['_top'];
            case 0x5:
                return this[_0x136ade(0x8ab)];
            default:
                return null;
            }
        }
        static [_0x5659be(0x8b8)](_0x59ff78, _0x12e0d2, _0x3d70e0, _0x15d863) {
            var _0x2f040f = _0x5659be, _0xe5e5ff = _0x59ff78[_0x2f040f(0x829)], _0x34b686 = _0x12e0d2[_0x2f040f(0x829)], _0x393425 = _0x3d70e0[_0x2f040f(0x829)];
            _0x3f70c5[_0x2f040f(0x211)](_0x34b686, _0x393425, _0x26b0f2[_0x2f040f(0x278)]), _0x3f70c5[_0x2f040f(0x211)](_0x393425, _0xe5e5ff, _0x26b0f2[_0x2f040f(0x279)]), _0x3f70c5[_0x2f040f(0x211)](_0xe5e5ff, _0x34b686, _0x26b0f2[_0x2f040f(0x27a)]);
            var _0x29ea33 = _0x3f70c5[_0x2f040f(0x1f1)](_0xe5e5ff, _0x26b0f2[_0x2f040f(0x278)]), _0x4fe74a = _0x3f70c5['dot'](_0x34b686, _0x26b0f2[_0x2f040f(0x279)]), _0x1ded70 = _0x3f70c5[_0x2f040f(0x1f1)](_0x393425, _0x26b0f2[_0x2f040f(0x27a)]);
            _0x3f70c5[_0x2f040f(0x1ee)](_0x26b0f2[_0x2f040f(0x278)], -_0x59ff78[_0x2f040f(0x208)] / _0x29ea33, _0x26b0f2[_0x2f040f(0x87f)]), _0x3f70c5[_0x2f040f(0x1ee)](_0x26b0f2[_0x2f040f(0x279)], -_0x12e0d2['distance'] / _0x4fe74a, _0x26b0f2[_0x2f040f(0x880)]), _0x3f70c5['scale'](_0x26b0f2['_tempV32'], -_0x3d70e0[_0x2f040f(0x208)] / _0x1ded70, _0x26b0f2[_0x2f040f(0x89a)]), _0x3f70c5[_0x2f040f(0x201)](_0x26b0f2['_tempV33'], _0x26b0f2[_0x2f040f(0x880)], _0x26b0f2[_0x2f040f(0x89b)]), _0x3f70c5[_0x2f040f(0x201)](_0x26b0f2[_0x2f040f(0x89a)], _0x26b0f2[_0x2f040f(0x89b)], _0x15d863);
        }
        [_0x5659be(0x8b9)](_0x56fc86) {
            var _0x473951 = _0x5659be;
            _0x26b0f2[_0x473951(0x8b8)](this[_0x473951(0x8a8)], this[_0x473951(0x8ab)], this['_right'], _0x56fc86[_0x71dec4[_0x473951(0x8a7)]['nearBottomRight']]), _0x26b0f2[_0x473951(0x8b8)](this['_near'], this['_top'], this[_0x473951(0x8af)], _0x56fc86[_0x71dec4[_0x473951(0x8a7)][_0x473951(0x8a4)]]), _0x26b0f2[_0x473951(0x8b8)](this['_near'], this[_0x473951(0x8aa)], this[_0x473951(0x8ad)], _0x56fc86[_0x71dec4['FrustumCorner'][_0x473951(0x8a3)]]), _0x26b0f2[_0x473951(0x8b8)](this[_0x473951(0x8a8)], this[_0x473951(0x8ab)], this['_left'], _0x56fc86[_0x71dec4[_0x473951(0x8a7)][_0x473951(0x8a2)]]), _0x26b0f2[_0x473951(0x8b8)](this[_0x473951(0x8a9)], this[_0x473951(0x8ab)], this[_0x473951(0x8af)], _0x56fc86[_0x71dec4[_0x473951(0x8a7)][_0x473951(0x8a1)]]), _0x26b0f2[_0x473951(0x8b8)](this[_0x473951(0x8a9)], this['_top'], this[_0x473951(0x8af)], _0x56fc86[_0x71dec4['FrustumCorner'][_0x473951(0x8a0)]]), _0x26b0f2['get3PlaneInterPoint'](this[_0x473951(0x8a9)], this['_top'], this[_0x473951(0x8ad)], _0x56fc86[_0x71dec4[_0x473951(0x8a7)][_0x473951(0x89f)]]), _0x26b0f2['get3PlaneInterPoint'](this['_far'], this['_bottom'], this[_0x473951(0x8ad)], _0x56fc86[_0x71dec4[_0x473951(0x8a7)][_0x473951(0x89e)]]);
        }
        [_0x5659be(0x8ba)](_0xd3d7b3) {
            var _0x4e6ad6 = _0x5659be, _0x29effc = _0x4d8983[_0x4e6ad6(0x874)], _0x497ad9 = _0x4d8983[_0x4e6ad6(0x874)];
            for (var _0x5abe73 = 0x0; _0x5abe73 < 0x6; _0x5abe73++) {
                switch (_0x5abe73) {
                case 0x0:
                    _0x497ad9 = _0x4589df[_0x4e6ad6(0x886)](this[_0x4e6ad6(0x8a8)], _0xd3d7b3);
                    break;
                case 0x1:
                    _0x497ad9 = _0x4589df[_0x4e6ad6(0x886)](this['_far'], _0xd3d7b3);
                    break;
                case 0x2:
                    _0x497ad9 = _0x4589df[_0x4e6ad6(0x886)](this[_0x4e6ad6(0x8ad)], _0xd3d7b3);
                    break;
                case 0x3:
                    _0x497ad9 = _0x4589df[_0x4e6ad6(0x886)](this[_0x4e6ad6(0x8af)], _0xd3d7b3);
                    break;
                case 0x4:
                    _0x497ad9 = _0x4589df[_0x4e6ad6(0x886)](this[_0x4e6ad6(0x8aa)], _0xd3d7b3);
                    break;
                case 0x5:
                    _0x497ad9 = _0x4589df['intersectsPlaneAndPoint'](this['_bottom'], _0xd3d7b3);
                    break;
                }
                switch (_0x497ad9) {
                case _0x4d8983[_0x4e6ad6(0x887)]:
                    return _0x25d93b['Disjoint'];
                case _0x4d8983[_0x4e6ad6(0x875)]:
                    _0x29effc = _0x4d8983[_0x4e6ad6(0x875)];
                    break;
                }
            }
            switch (_0x29effc) {
            case _0x4d8983[_0x4e6ad6(0x875)]:
                return _0x25d93b['Intersects'];
            default:
                return _0x25d93b[_0x4e6ad6(0x877)];
            }
        }
        [_0x5659be(0x8bb)](_0x283562) {
            var _0x4bc739 = _0x5659be, _0x4f0d54 = _0x283562[_0x4bc739(0x204)], _0x3260f2 = _0x283562['max'], _0x6da250 = _0x4f0d54['x'], _0x14c6cf = _0x4f0d54['y'], _0x28f1ee = _0x4f0d54['z'], _0x2da0a9 = _0x3260f2['x'], _0x465e26 = _0x3260f2['y'], _0x507e96 = _0x3260f2['z'], _0x45268a = this[_0x4bc739(0x8a8)][_0x4bc739(0x829)];
            if (this[_0x4bc739(0x8a8)]['distance'] + _0x45268a['x'] * (_0x45268a['x'] < 0x0 ? _0x6da250 : _0x2da0a9) + _0x45268a['y'] * (_0x45268a['y'] < 0x0 ? _0x14c6cf : _0x465e26) + _0x45268a['z'] * (_0x45268a['z'] < 0x0 ? _0x28f1ee : _0x507e96) < 0x0)
                return ![];
            var _0x57af9c = this[_0x4bc739(0x8ad)]['normal'];
            if (this[_0x4bc739(0x8ad)][_0x4bc739(0x208)] + _0x57af9c['x'] * (_0x57af9c['x'] < 0x0 ? _0x6da250 : _0x2da0a9) + _0x57af9c['y'] * (_0x57af9c['y'] < 0x0 ? _0x14c6cf : _0x465e26) + _0x57af9c['z'] * (_0x57af9c['z'] < 0x0 ? _0x28f1ee : _0x507e96) < 0x0)
                return ![];
            var _0x2c0ab8 = this[_0x4bc739(0x8af)][_0x4bc739(0x829)];
            if (this[_0x4bc739(0x8af)][_0x4bc739(0x208)] + _0x2c0ab8['x'] * (_0x2c0ab8['x'] < 0x0 ? _0x6da250 : _0x2da0a9) + _0x2c0ab8['y'] * (_0x2c0ab8['y'] < 0x0 ? _0x14c6cf : _0x465e26) + _0x2c0ab8['z'] * (_0x2c0ab8['z'] < 0x0 ? _0x28f1ee : _0x507e96) < 0x0)
                return ![];
            var _0x2f12bd = this[_0x4bc739(0x8ab)]['normal'];
            if (this[_0x4bc739(0x8ab)][_0x4bc739(0x208)] + _0x2f12bd['x'] * (_0x2f12bd['x'] < 0x0 ? _0x6da250 : _0x2da0a9) + _0x2f12bd['y'] * (_0x2f12bd['y'] < 0x0 ? _0x14c6cf : _0x465e26) + _0x2f12bd['z'] * (_0x2f12bd['z'] < 0x0 ? _0x28f1ee : _0x507e96) < 0x0)
                return ![];
            var _0x2d9d5e = this['_top'][_0x4bc739(0x829)];
            if (this[_0x4bc739(0x8aa)][_0x4bc739(0x208)] + _0x2d9d5e['x'] * (_0x2d9d5e['x'] < 0x0 ? _0x6da250 : _0x2da0a9) + _0x2d9d5e['y'] * (_0x2d9d5e['y'] < 0x0 ? _0x14c6cf : _0x465e26) + _0x2d9d5e['z'] * (_0x2d9d5e['z'] < 0x0 ? _0x28f1ee : _0x507e96) < 0x0)
                return ![];
            var _0x4fa157 = this[_0x4bc739(0x8a9)]['normal'];
            if (this[_0x4bc739(0x8a9)][_0x4bc739(0x208)] + _0x4fa157['x'] * (_0x4fa157['x'] < 0x0 ? _0x6da250 : _0x2da0a9) + _0x4fa157['y'] * (_0x4fa157['y'] < 0x0 ? _0x14c6cf : _0x465e26) + _0x4fa157['z'] * (_0x4fa157['z'] < 0x0 ? _0x28f1ee : _0x507e96) < 0x0)
                return ![];
            return !![];
        }
        [_0x5659be(0x8bc)](_0xbc9e69) {
            var _0x574d22 = _0x5659be, _0x2ce341 = _0x26b0f2['_tempV30'], _0xa1afa6 = _0x26b0f2[_0x574d22(0x279)], _0x4da93d = _0xbc9e69[_0x574d22(0x204)], _0x505088 = _0xbc9e69['max'], _0x2f5638 = _0x25d93b['Contains'];
            for (var _0x1d68e6 = 0x0; _0x1d68e6 < 0x6; _0x1d68e6++) {
                var _0x4ea6fd = this[_0x574d22(0x8bd)](_0x1d68e6), _0x1318a0 = _0x4ea6fd['normal'];
                _0x1318a0['x'] >= 0x0 ? (_0x2ce341['x'] = _0x505088['x'], _0xa1afa6['x'] = _0x4da93d['x']) : (_0x2ce341['x'] = _0x4da93d['x'], _0xa1afa6['x'] = _0x505088['x']);
                _0x1318a0['y'] >= 0x0 ? (_0x2ce341['y'] = _0x505088['y'], _0xa1afa6['y'] = _0x4da93d['y']) : (_0x2ce341['y'] = _0x4da93d['y'], _0xa1afa6['y'] = _0x505088['y']);
                _0x1318a0['z'] >= 0x0 ? (_0x2ce341['z'] = _0x505088['z'], _0xa1afa6['z'] = _0x4da93d['z']) : (_0x2ce341['z'] = _0x4da93d['z'], _0xa1afa6['z'] = _0x505088['z']);
                if (_0x4589df['intersectsPlaneAndPoint'](_0x4ea6fd, _0x2ce341) === _0x4d8983[_0x574d22(0x887)])
                    return _0x25d93b[_0x574d22(0x894)];
                if (_0x4589df['intersectsPlaneAndPoint'](_0x4ea6fd, _0xa1afa6) === _0x4d8983['PlaneIntersectionType_Back'])
                    _0x2f5638 = _0x25d93b[_0x574d22(0x878)];
            }
            return _0x2f5638;
        }
        [_0x5659be(0x8be)](_0xd998d) {
            var _0x26883b = _0x5659be, _0x345a7f = _0x4d8983[_0x26883b(0x874)], _0x187d95 = _0x4d8983[_0x26883b(0x874)];
            for (var _0x113b1e = 0x0; _0x113b1e < 0x6; _0x113b1e++) {
                switch (_0x113b1e) {
                case 0x0:
                    _0x187d95 = _0x4589df['intersectsPlaneAndSphere'](this[_0x26883b(0x8a8)], _0xd998d);
                    break;
                case 0x1:
                    _0x187d95 = _0x4589df[_0x26883b(0x88f)](this[_0x26883b(0x8a9)], _0xd998d);
                    break;
                case 0x2:
                    _0x187d95 = _0x4589df[_0x26883b(0x88f)](this[_0x26883b(0x8ad)], _0xd998d);
                    break;
                case 0x3:
                    _0x187d95 = _0x4589df['intersectsPlaneAndSphere'](this[_0x26883b(0x8af)], _0xd998d);
                    break;
                case 0x4:
                    _0x187d95 = _0x4589df['intersectsPlaneAndSphere'](this[_0x26883b(0x8aa)], _0xd998d);
                    break;
                case 0x5:
                    _0x187d95 = _0x4589df['intersectsPlaneAndSphere'](this['_bottom'], _0xd998d);
                    break;
                }
                switch (_0x187d95) {
                case _0x4d8983[_0x26883b(0x887)]:
                    return _0x25d93b[_0x26883b(0x894)];
                case _0x4d8983[_0x26883b(0x875)]:
                    _0x345a7f = _0x4d8983['PlaneIntersectionType_Intersecting'];
                    break;
                }
            }
            switch (_0x345a7f) {
            case _0x4d8983['PlaneIntersectionType_Intersecting']:
                return _0x25d93b[_0x26883b(0x878)];
            default:
                return _0x25d93b[_0x26883b(0x877)];
            }
        }
    }
    _0x26b0f2[_0x5659be(0x278)] = new _0x3f70c5(), _0x26b0f2[_0x5659be(0x279)] = new _0x3f70c5(), _0x26b0f2['_tempV32'] = new _0x3f70c5(), _0x26b0f2[_0x5659be(0x87f)] = new _0x3f70c5(), _0x26b0f2[_0x5659be(0x880)] = new _0x3f70c5(), _0x26b0f2['_tempV35'] = new _0x3f70c5(), _0x26b0f2[_0x5659be(0x89b)] = new _0x3f70c5();
    class _0x2a99cf {
        constructor(_0x3d9d7c, _0x34a305, _0xe210a2, _0x580b04) {
            var _0x36cd50 = _0x5659be;
            this['minDepth'] = 0x0, this[_0x36cd50(0x8bf)] = 0x1, this['x'] = _0x3d9d7c, this['y'] = _0x34a305, this['width'] = _0xe210a2, this[_0x36cd50(0x301)] = _0x580b04;
        }
        [_0x5659be(0x8c0)](_0x5279a3, _0x5529e0, _0x2980d7) {
            var _0x5d4104 = _0x5659be;
            _0x3f70c5['transformV3ToV4'](_0x5279a3, _0x5529e0, _0x2980d7);
            var _0x260fbe = _0x2980d7['x'], _0x27a078 = _0x2980d7['y'], _0x504d66 = _0x2980d7['z'], _0x47bb81 = _0x2980d7['w'];
            _0x47bb81 !== 0x1 && (_0x260fbe = _0x260fbe / _0x47bb81, _0x27a078 = _0x27a078 / _0x47bb81, _0x504d66 = _0x504d66 / _0x47bb81), _0x2980d7['x'] = (_0x260fbe + 0x1) * 0.5 * this[_0x5d4104(0x300)] + this['x'], _0x2980d7['y'] = (-_0x27a078 + 0x1) * 0.5 * this[_0x5d4104(0x301)] + this['y'], _0x2980d7['z'] = _0x504d66 * (this[_0x5d4104(0x8bf)] - this[_0x5d4104(0x8c1)]) + this['minDepth'];
        }
        [_0x5659be(0x8c2)](_0x517f7c, _0x4f7500, _0x3d093e) {
            var _0xb1b479 = _0x5659be, _0x548201 = _0x4f7500[_0xb1b479(0x1f6)];
            _0x3d093e['x'] = (_0x517f7c['x'] - this['x']) / this[_0xb1b479(0x300)] * 0x2 - 0x1, _0x3d093e['y'] = -((_0x517f7c['y'] - this['y']) / this[_0xb1b479(0x301)] * 0x2 - 0x1), _0x3d093e['z'] = (_0x517f7c['z'] - this['minDepth']) / (this['maxDepth'] - this[_0xb1b479(0x8c1)]);
            var _0xed9c5a = _0x3d093e['x'] * _0x548201[0x3] + _0x3d093e['y'] * _0x548201[0x7] + _0x3d093e['z'] * _0x548201[0xb] + _0x548201[0xf];
            _0x3f70c5[_0xb1b479(0x20b)](_0x3d093e, _0x4f7500, _0x3d093e), _0xed9c5a !== 0x1 && (_0x3d093e['x'] = _0x3d093e['x'] / _0xed9c5a, _0x3d093e['y'] = _0x3d093e['y'] / _0xed9c5a, _0x3d093e['z'] = _0x3d093e['z'] / _0xed9c5a);
        }
        [_0x5659be(0x8c3)](_0x14c696, _0x340457, _0x2be459, _0x2bd4f5, _0x10a4d5) {
            var _0x40a5b2 = _0x5659be;
            _0x3ed76a['multiply'](_0x340457, _0x2be459, _0x2a99cf['_tempMatrix4x4']), _0x2bd4f5 && _0x3ed76a['multiply'](_0x2a99cf[_0x40a5b2(0x484)], _0x2bd4f5, _0x2a99cf[_0x40a5b2(0x484)]), _0x2a99cf[_0x40a5b2(0x484)]['invert'](_0x2a99cf[_0x40a5b2(0x484)]), this[_0x40a5b2(0x8c2)](_0x14c696, _0x2a99cf[_0x40a5b2(0x484)], _0x10a4d5);
        }
        [_0x5659be(0x1f0)](_0x4d41f3) {
            var _0x154940 = _0x5659be;
            _0x4d41f3['x'] = this['x'], _0x4d41f3['y'] = this['y'], _0x4d41f3[_0x154940(0x300)] = this[_0x154940(0x300)], _0x4d41f3[_0x154940(0x301)] = this['height'], _0x4d41f3[_0x154940(0x8c1)] = this[_0x154940(0x8c1)], _0x4d41f3['maxDepth'] = this[_0x154940(0x8bf)];
        }
    }
    _0x2a99cf[_0x5659be(0x484)] = new _0x3ed76a();
    class _0x333c68 {
        constructor() {
        }
        static ['calculateCursorRay'](_0x41a395, _0x5f4a97, _0x2b26ae, _0x5bec7e, _0x2b4d24, _0x80d82) {
            var _0x4bd64d = _0x5659be, _0x638508 = _0x41a395['x'], _0x38ce0e = _0x41a395['y'], _0x5082d4 = _0x333c68['_tempVector30'], _0x5d0337 = _0x5082d4;
            _0x5d0337['x'] = _0x638508, _0x5d0337['y'] = _0x38ce0e, _0x5d0337['z'] = _0x5f4a97[_0x4bd64d(0x8c1)];
            var _0x428b73 = _0x333c68[_0x4bd64d(0x3d6)], _0x4db75b = _0x428b73;
            _0x4db75b['x'] = _0x638508, _0x4db75b['y'] = _0x38ce0e, _0x4db75b['z'] = _0x5f4a97[_0x4bd64d(0x8bf)];
            var _0xf78567 = _0x80d82['origin'], _0x2ef20f = _0x333c68[_0x4bd64d(0x866)];
            _0x5f4a97[_0x4bd64d(0x8c3)](_0x5082d4, _0x2b26ae, _0x5bec7e, _0x2b4d24, _0xf78567), _0x5f4a97[_0x4bd64d(0x8c3)](_0x428b73, _0x2b26ae, _0x5bec7e, _0x2b4d24, _0x2ef20f);
            var _0x50bb66 = _0x80d82[_0x4bd64d(0x87e)];
            _0x50bb66['x'] = _0x2ef20f['x'] - _0xf78567['x'], _0x50bb66['y'] = _0x2ef20f['y'] - _0xf78567['y'], _0x50bb66['z'] = _0x2ef20f['z'] - _0xf78567['z'], _0x3f70c5[_0x4bd64d(0x1f2)](_0x80d82[_0x4bd64d(0x87e)], _0x80d82[_0x4bd64d(0x87e)]);
        }
        static [_0x5659be(0x8c4)](_0x255051, _0x27eea8, _0x41fa6e, _0x2c0b69) {
            var _0x581546 = _0x5659be, _0x7b4360, _0x235f89 = _0x333c68[_0x581546(0x59b)], _0x9a6d0b = _0x333c68[_0x581546(0x3d6)];
            _0x3f70c5[_0x581546(0x210)](_0x41fa6e, _0x27eea8, _0x235f89), _0x3f70c5[_0x581546(0x210)](_0x2c0b69, _0x27eea8, _0x9a6d0b);
            var _0xa3b873 = _0x333c68[_0x581546(0x866)];
            _0x3f70c5[_0x581546(0x211)](_0x255051['direction'], _0x9a6d0b, _0xa3b873);
            var _0xde1e6;
            _0xde1e6 = _0x3f70c5[_0x581546(0x1f1)](_0x235f89, _0xa3b873);
            if (_0xde1e6 > -Number[_0x581546(0x8c5)] && _0xde1e6 < Number[_0x581546(0x8c5)])
                return _0x7b4360 = Number[_0x581546(0x8c6)], _0x7b4360;
            var _0x3e6576 = 0x1 / _0xde1e6, _0x23e610 = _0x333c68[_0x581546(0x855)];
            _0x3f70c5[_0x581546(0x210)](_0x255051[_0x581546(0x876)], _0x27eea8, _0x23e610);
            var _0x2ff608;
            _0x2ff608 = _0x3f70c5[_0x581546(0x1f1)](_0x23e610, _0xa3b873), _0x2ff608 *= _0x3e6576;
            if (_0x2ff608 < 0x0 || _0x2ff608 > 0x1)
                return _0x7b4360 = Number['NaN'], _0x7b4360;
            var _0x3f5c05 = _0x333c68['_tempVector34'];
            _0x3f70c5[_0x581546(0x211)](_0x23e610, _0x235f89, _0x3f5c05);
            var _0x53c866;
            _0x53c866 = _0x3f70c5[_0x581546(0x1f1)](_0x255051['direction'], _0x3f5c05), _0x53c866 *= _0x3e6576;
            if (_0x53c866 < 0x0 || _0x2ff608 + _0x53c866 > 0x1)
                return _0x7b4360 = Number['NaN'], _0x7b4360;
            var _0x566d37;
            _0x566d37 = _0x3f70c5[_0x581546(0x1f1)](_0x9a6d0b, _0x3f5c05), _0x566d37 *= _0x3e6576;
            if (_0x566d37 < 0x0)
                return _0x7b4360 = Number[_0x581546(0x8c6)], _0x7b4360;
            return _0x7b4360 = _0x566d37, _0x7b4360;
        }
    }
    _0x333c68[_0x5659be(0x59b)] = new _0x3f70c5(), _0x333c68[_0x5659be(0x3d6)] = new _0x3f70c5(), _0x333c68[_0x5659be(0x866)] = new _0x3f70c5(), _0x333c68[_0x5659be(0x855)] = new _0x3f70c5(), _0x333c68[_0x5659be(0x853)] = new _0x3f70c5(), function (_0x38c299) {
        var _0x83a011 = _0x5659be;
        _0x38c299[_0x38c299['UInt8'] = 0x0] = _0x83a011(0x8c7), _0x38c299[_0x38c299[_0x83a011(0x8c8)] = 0x1] = _0x83a011(0x8c8), _0x38c299[_0x38c299[_0x83a011(0x8c9)] = 0x2] = _0x83a011(0x8c9);
    }(_0x71dec4[_0x5659be(0x8ca)] || (_0x71dec4[_0x5659be(0x8ca)] = {}));
    class _0x11925d extends _0x218b83[_0x5659be(0x43e)] {
        constructor(_0x2deca2, _0x5a7bd3, _0x2597b5 = 0x88e4, _0x9d746c = ![]) {
            var _0x3993e2 = _0x5659be;
            super(), this[_0x3993e2(0x8cb)] = _0x2deca2, this[_0x3993e2(0x627)] = _0x5a7bd3, this['_bufferUsage'] = _0x2597b5, this[_0x3993e2(0x441)] = _0x218b83[_0x3993e2(0x2f3)][_0x3993e2(0x2f4)][_0x3993e2(0x8cc)], this['_canRead'] = _0x9d746c;
            switch (_0x2deca2) {
            case _0x71dec4[_0x3993e2(0x8ca)][_0x3993e2(0x8c9)]:
                this[_0x3993e2(0x8cd)] = 0x4;
                break;
            case _0x71dec4[_0x3993e2(0x8ca)][_0x3993e2(0x8c8)]:
                this['_indexTypeByteCount'] = 0x2;
                break;
            case _0x71dec4[_0x3993e2(0x8ca)]['UInt8']:
                this['_indexTypeByteCount'] = 0x1;
                break;
            default:
                throw new Error(_0x3993e2(0x8ce));
            }
            var _0x277750 = this[_0x3993e2(0x8cd)] * _0x5a7bd3, _0x4f80b9 = _0x218b83[_0x3993e2(0x4eb)]['_curBindedBufferState'];
            this[_0x3993e2(0x443)] = _0x277750;
            _0x4f80b9 ? _0x4f80b9[_0x3993e2(0x4f4)] === this ? _0x218b83[_0x3993e2(0x2f3)][_0x3993e2(0x2f4)][_0x3993e2(0x445)](this['_bufferType'], _0x277750, this[_0x3993e2(0x440)]) : (_0x4f80b9['unBind'](), this[_0x3993e2(0x444)](), _0x218b83[_0x3993e2(0x2f3)]['instance'][_0x3993e2(0x445)](this['_bufferType'], _0x277750, this[_0x3993e2(0x440)]), _0x4f80b9[_0x3993e2(0x444)]()) : (this['bind'](), _0x218b83['LayaGL'][_0x3993e2(0x2f4)]['bufferData'](this[_0x3993e2(0x441)], _0x277750, this['_bufferUsage']));
            if (_0x9d746c)
                switch (_0x2deca2) {
                case _0x71dec4['IndexFormat'][_0x3993e2(0x8c9)]:
                    this['_buffer'] = new Uint32Array(_0x5a7bd3);
                    break;
                case _0x71dec4[_0x3993e2(0x8ca)]['UInt16']:
                    this[_0x3993e2(0x446)] = new Uint16Array(_0x5a7bd3);
                    break;
                case _0x71dec4['IndexFormat'][_0x3993e2(0x8c7)]:
                    this[_0x3993e2(0x446)] = new Uint8Array(_0x5a7bd3);
                    break;
                }
        }
        get [_0x5659be(0x8cf)]() {
            var _0x9c01d7 = _0x5659be;
            return this[_0x9c01d7(0x8cb)];
        }
        get [_0x5659be(0x8d0)]() {
            var _0x432801 = _0x5659be;
            return this[_0x432801(0x8cd)];
        }
        get [_0x5659be(0x8d1)]() {
            return this['_indexCount'];
        }
        get [_0x5659be(0x44a)]() {
            var _0x29ddcb = _0x5659be;
            return this[_0x29ddcb(0x44b)];
        }
        [_0x5659be(0x4f5)]() {
            var _0x556760 = _0x5659be;
            if (_0x218b83[_0x556760(0x4eb)]['_curBindedBufferState']) {
                var _0xf19db2 = _0x218b83[_0x556760(0x2f3)][_0x556760(0x2f4)];
                _0xf19db2[_0x556760(0x8d2)](_0xf19db2[_0x556760(0x8cc)], this[_0x556760(0x44d)]);
            } else
                throw _0x556760(0x8d3);
        }
        ['bind']() {
            var _0x532501 = _0x5659be;
            if (_0x218b83[_0x532501(0x4eb)][_0x532501(0x4ec)])
                throw _0x532501(0x8d4);
            else {
                if (_0x218b83[_0x532501(0x43e)][_0x532501(0x4f4)] !== this[_0x532501(0x44d)]) {
                    var _0x161131 = _0x218b83[_0x532501(0x2f3)][_0x532501(0x2f4)];
                    return _0x161131[_0x532501(0x8d2)](_0x161131['ELEMENT_ARRAY_BUFFER'], this['_glBuffer']), _0x218b83[_0x532501(0x43e)][_0x532501(0x4f4)] = this[_0x532501(0x44d)], !![];
                } else
                    return ![];
            }
        }
        ['setData'](_0x5858e4, _0x3eeef8 = 0x0, _0x20e111 = 0x0, _0x5236c3 = 0xffffffff) {
            var _0x739418 = _0x5659be, _0x208beb = this[_0x739418(0x8cd)];
            if (_0x20e111 !== 0x0 || _0x5236c3 !== 0xffffffff)
                switch (this[_0x739418(0x8cb)]) {
                case _0x71dec4[_0x739418(0x8ca)][_0x739418(0x8c9)]:
                    _0x5858e4 = new Uint32Array(_0x5858e4['buffer'], _0x20e111 * _0x208beb, _0x5236c3);
                    break;
                case _0x71dec4[_0x739418(0x8ca)][_0x739418(0x8c8)]:
                    _0x5858e4 = new Uint16Array(_0x5858e4[_0x739418(0x448)], _0x20e111 * _0x208beb, _0x5236c3);
                    break;
                case _0x71dec4[_0x739418(0x8ca)][_0x739418(0x8c7)]:
                    _0x5858e4 = new Uint8Array(_0x5858e4[_0x739418(0x448)], _0x20e111 * _0x208beb, _0x5236c3);
                    break;
                }
            var _0x5d685d = _0x218b83[_0x739418(0x4eb)][_0x739418(0x4ec)];
            _0x5d685d ? _0x5d685d['_bindedIndexBuffer'] === this ? _0x218b83['LayaGL'][_0x739418(0x2f4)][_0x739418(0x44f)](this[_0x739418(0x441)], _0x3eeef8 * _0x208beb, _0x5858e4) : (_0x5d685d[_0x739418(0x4fb)](), this[_0x739418(0x444)](), _0x218b83['LayaGL'][_0x739418(0x2f4)][_0x739418(0x44f)](this[_0x739418(0x441)], _0x3eeef8 * _0x208beb, _0x5858e4), _0x5d685d[_0x739418(0x444)]()) : (this[_0x739418(0x444)](), _0x218b83[_0x739418(0x2f3)]['instance'][_0x739418(0x44f)](this['_bufferType'], _0x3eeef8 * _0x208beb, _0x5858e4));
            if (this['_canRead']) {
                if (_0x3eeef8 !== 0x0 || _0x20e111 !== 0x0 || _0x5236c3 !== 0xffffffff) {
                    var _0x3c3aa2 = this[_0x739418(0x446)][_0x739418(0x1ff)] - _0x3eeef8;
                    if (_0x5236c3 > _0x3c3aa2)
                        _0x5236c3 = _0x3c3aa2;
                    for (var _0x2f657d = 0x0; _0x2f657d < _0x5236c3; _0x2f657d++)
                        this[_0x739418(0x446)][_0x3eeef8 + _0x2f657d] = _0x5858e4[_0x2f657d];
                } else
                    this['_buffer'] = _0x5858e4;
            }
        }
        ['getData']() {
            var _0x443aa1 = _0x5659be;
            if (this[_0x443aa1(0x44b)])
                return this['_buffer'];
            else
                throw new Error(_0x443aa1(0x453));
        }
        [_0x5659be(0x311)]() {
            var _0x567d1e = _0x5659be;
            super[_0x567d1e(0x311)](), this[_0x567d1e(0x446)] = null, this[_0x567d1e(0x443)] = 0x0, this[_0x567d1e(0x627)] = 0x0;
        }
    }
    class _0x284ea3 {
        constructor() {
        }
        [_0x5659be(0x5e6)](_0x64b967) {
        }
    }
    class _0x506034 extends _0x284ea3 {
        constructor() {
            var _0x1d1280 = _0x5659be;
            super();
            var _0x168e61 = _0x218b83[_0x1d1280(0x2f3)][_0x1d1280(0x2f4)], _0x358251 = 0x1, _0x2f2843 = 0x1, _0x5efb0a = 0x1, _0x572491 = new Float32Array([
                    -_0x5efb0a,
                    _0x358251,
                    -_0x2f2843,
                    _0x5efb0a,
                    _0x358251,
                    -_0x2f2843,
                    _0x5efb0a,
                    _0x358251,
                    _0x2f2843,
                    -_0x5efb0a,
                    _0x358251,
                    _0x2f2843,
                    -_0x5efb0a,
                    -_0x358251,
                    -_0x2f2843,
                    _0x5efb0a,
                    -_0x358251,
                    -_0x2f2843,
                    _0x5efb0a,
                    -_0x358251,
                    _0x2f2843,
                    -_0x5efb0a,
                    -_0x358251,
                    _0x2f2843
                ]), _0x5176bf = new Uint8Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x0,
                    0x3,
                    0x7,
                    0x7,
                    0x4,
                    0x0,
                    0x1,
                    0x5,
                    0x6,
                    0x6,
                    0x2,
                    0x1,
                    0x3,
                    0x2,
                    0x6,
                    0x6,
                    0x7,
                    0x3,
                    0x0,
                    0x4,
                    0x5,
                    0x5,
                    0x1,
                    0x0
                ]), _0x1f9dff = _0x13bc8a[_0x1d1280(0x606)](_0x1d1280(0x8d5));
            this[_0x1d1280(0x4f9)] = new _0x57a6a2(_0x1f9dff[_0x1d1280(0x4e4)] * 0x8, _0x168e61[_0x1d1280(0x4f8)], ![]), this[_0x1d1280(0x4f9)][_0x1d1280(0x449)] = _0x1f9dff, this[_0x1d1280(0x624)] = new _0x11925d(_0x71dec4[_0x1d1280(0x8ca)]['UInt8'], 0x24, _0x168e61[_0x1d1280(0x4f8)], ![]), this['_vertexBuffer'][_0x1d1280(0x4fd)](_0x572491[_0x1d1280(0x448)]), this['_indexBuffer']['setData'](_0x5176bf);
            var _0x5bf5b1 = new _0x174c4a();
            _0x5bf5b1[_0x1d1280(0x444)](), _0x5bf5b1[_0x1d1280(0x4ea)](this[_0x1d1280(0x4f9)]), _0x5bf5b1['applyIndexBuffer'](this[_0x1d1280(0x624)]), _0x5bf5b1[_0x1d1280(0x4fb)](), this[_0x1d1280(0x4f6)] = _0x5bf5b1;
        }
        static [_0x5659be(0x229)]() {
            _0x506034['instance'] = new _0x506034();
        }
        [_0x5659be(0x5e6)](_0x3e2128) {
            var _0x4ba351 = _0x5659be, _0x220beb = _0x218b83[_0x4ba351(0x2f3)][_0x4ba351(0x2f4)];
            _0x220beb['drawElements'](_0x220beb['TRIANGLES'], 0x24, _0x220beb[_0x4ba351(0x430)], 0x0), _0x218b83[_0x4ba351(0x500)][_0x4ba351(0x62a)] += 0xc, _0x218b83['Stat'][_0x4ba351(0x501)]++;
        }
    }
    class _0x55999c {
        constructor() {
            var _0x3632ef = _0x5659be;
            this['_mesh'] = _0x506034[_0x3632ef(0x2f4)];
        }
        get [_0x5659be(0x8d6)]() {
            var _0x46fb99 = _0x5659be;
            return this[_0x46fb99(0x5d9)];
        }
        set [_0x5659be(0x8d6)](_0x2f1b84) {
            var _0x2dd942 = _0x5659be;
            this[_0x2dd942(0x5d9)] !== _0x2f1b84 && (this[_0x2dd942(0x5d9)] && this[_0x2dd942(0x5d9)]['_removeReference'](), _0x2f1b84 && _0x2f1b84[_0x2dd942(0x354)](), this[_0x2dd942(0x5d9)] = _0x2f1b84);
        }
        get [_0x5659be(0x8d7)]() {
            var _0x484807 = _0x5659be;
            return this[_0x484807(0x5d7)];
        }
        set [_0x5659be(0x8d7)](_0x3ad7de) {
            var _0x5a83b8 = _0x5659be;
            this[_0x5a83b8(0x5d7)] !== _0x3ad7de && (this[_0x5a83b8(0x5d7)] = _0x3ad7de);
        }
        ['_isAvailable']() {
            var _0x457b9f = _0x5659be;
            return this[_0x457b9f(0x5d9)] && this[_0x457b9f(0x5d7)] ? !![] : ![];
        }
        [_0x5659be(0x5e6)](_0x1d808c) {
            var _0xb8364b = _0x5659be;
            if (this['_material'] && this['_mesh']) {
                var _0x197a68 = _0x218b83[_0xb8364b(0x2f3)][_0xb8364b(0x2f4)], _0x359797 = _0x1d808c['scene'], _0x171d98 = _0x1d808c[_0xb8364b(0x5db)], _0x156f01 = _0x1d808c['camera'], _0x50a11c = _0x552b02['_SET_RUNTIME_VALUE_MODE_REFERENCE_'];
                _0x218b83[_0xb8364b(0x31d)][_0xb8364b(0x308)][_0xb8364b(0x653)] && _0x552b02['setRuntimeValueMode'](![]), _0x218b83[_0xb8364b(0x3fe)][_0xb8364b(0x7f5)](_0x197a68, ![]), _0x218b83[_0xb8364b(0x3fe)]['setDepthFunc'](_0x197a68, _0x197a68[_0xb8364b(0x8d8)]), _0x218b83[_0xb8364b(0x3fe)][_0xb8364b(0x7eb)](_0x197a68, ![]);
                var _0x5a497c = _0x55999c[_0xb8364b(0x565)];
                this[_0xb8364b(0x5d9)][_0xb8364b(0x4e0)][_0xb8364b(0x490)][_0xb8364b(0x1f0)](_0x5a497c);
                var _0x53295e = _0x1d808c[_0xb8364b(0x509)] = this[_0xb8364b(0x5d9)][_0xb8364b(0x50a)][_0xb8364b(0x50e)](0x0)['_passes'][0x0][_0xb8364b(0x52e)](_0x5a497c), _0x3e5713 = _0x53295e['bind'](), _0x122585 = _0x218b83['Stat']['loopCount'] !== _0x53295e[_0xb8364b(0x5f7)], _0x57fefb = _0x53295e[_0xb8364b(0x5f8)] !== _0x359797 || _0x122585;
                (_0x57fefb || _0x3e5713) && (_0x53295e['uploadUniforms'](_0x53295e['_sceneUniformParamsMap'], _0x359797[_0xb8364b(0x4e0)], _0x57fefb), _0x53295e['_uploadScene'] = _0x359797);
                var _0x522d38 = _0x53295e['_uploadCameraShaderValue'] !== _0x171d98 || _0x122585;
                if (_0x522d38 || _0x3e5713) {
                    var _0x3087df = _0x55999c[_0xb8364b(0x5ad)], _0x1dbcb1 = _0x55999c[_0xb8364b(0x8d9)];
                    _0x156f01[_0xb8364b(0x85d)][_0xb8364b(0x1f0)](_0x3087df), _0x156f01['projectionMatrix']['cloneTo'](_0x1dbcb1), _0x3087df[_0xb8364b(0x8da)](_0x3f70c5[_0xb8364b(0x214)]);
                    if (_0x156f01[_0xb8364b(0x8db)])
                        _0x3ed76a[_0xb8364b(0x47b)](_0x156f01[_0xb8364b(0x8dc)], _0x156f01['aspectRatio'], _0x156f01['nearPlane'], _0x156f01[_0xb8364b(0x85c)], _0x1dbcb1);
                    var _0x1b2ec2 = 0.000001, _0x5e4db8 = 0x1 / Math[_0xb8364b(0x47c)](3.1416 * _0x156f01[_0xb8364b(0x8dc)] / 0xb4 * 0.5);
                    _0x1dbcb1[_0xb8364b(0x1f6)][0x0] = _0x5e4db8 / _0x156f01[_0xb8364b(0x8dd)], _0x1dbcb1[_0xb8364b(0x1f6)][0x5] = _0x5e4db8, _0x1dbcb1[_0xb8364b(0x1f6)][0xa] = _0x1b2ec2 - 0x1, _0x1dbcb1[_0xb8364b(0x1f6)][0xb] = -0x1, _0x1dbcb1['elements'][0xe] = -0x0, _0x156f01[_0xb8364b(0x8de)](_0x1d808c, _0x3087df, _0x1dbcb1), _0x53295e[_0xb8364b(0x566)](_0x53295e[_0xb8364b(0x5e3)], _0x171d98, _0x522d38), _0x53295e[_0xb8364b(0x5fb)] = _0x171d98;
                }
                var _0x203c93 = _0x53295e[_0xb8364b(0x5fc)] !== this[_0xb8364b(0x5d9)] || _0x122585;
                (_0x203c93 || _0x3e5713) && (_0x53295e[_0xb8364b(0x566)](_0x53295e[_0xb8364b(0x567)], this[_0xb8364b(0x5d9)]['_shaderValues'], _0x203c93), _0x53295e[_0xb8364b(0x5fc)] = this[_0xb8364b(0x5d9)]), this[_0xb8364b(0x5d7)]['_bufferState'][_0xb8364b(0x444)](), this[_0xb8364b(0x5d7)][_0xb8364b(0x5e6)](_0x1d808c), _0x218b83[_0xb8364b(0x31d)][_0xb8364b(0x308)]['supportWebGLPlusRendering'] && _0x552b02['setRuntimeValueMode'](_0x50a11c), _0x218b83['WebGLContext'][_0xb8364b(0x7ed)](_0x197a68, _0x197a68[_0xb8364b(0x8df)]), _0x218b83['WebGLContext'][_0xb8364b(0x7eb)](_0x197a68, !![]), _0x156f01['_applyViewProject'](_0x1d808c, _0x156f01['viewMatrix'], _0x156f01[_0xb8364b(0x8e0)]);
            }
        }
        ['destroy']() {
            var _0xda1ae6 = _0x5659be;
            this[_0xda1ae6(0x5d9)] && (this[_0xda1ae6(0x5d9)][_0xda1ae6(0x351)](), this[_0xda1ae6(0x5d9)] = null);
        }
    }
    _0x55999c[_0x5659be(0x5ad)] = new _0x3ed76a(), _0x55999c[_0x5659be(0x8d9)] = new _0x3ed76a(), _0x55999c['_compileDefine'] = new _0x23f873();
    class _0x3c0ef2 extends _0x356e58 {
        constructor(_0x31be40 = 0.3, _0x5d6f1d = 0x3e8) {
            var _0x15c150 = _0x5659be;
            super(), this[_0x15c150(0x8e1)] = new _0x55999c(), this[_0x15c150(0x8e2)] = new _0x3f70c5(), this[_0x15c150(0x8e3)] = new _0x3f70c5(), this[_0x15c150(0x5ed)] = new _0x8fb80(0x64 / 0xff, 0x95 / 0xff, 0xed / 0xff, 0xff / 0xff), this[_0x15c150(0x4e0)] = new _0x552b02(null), this[_0x15c150(0x8e4)] = 0x3c, this[_0x15c150(0x8e5)] = ![], this[_0x15c150(0x8e6)] = ![], this['_orthographicVerticalSize'] = 0xa, this['renderingOrder'] = 0x0, this[_0x15c150(0x8e7)] = _0x31be40, this['_farPlane'] = _0x5d6f1d, this['cullingMask'] = 0x7fffffff, this['useOcclusionCulling'] = !![];
        }
        get [_0x5659be(0x8e8)]() {
            var _0x562482 = _0x5659be;
            return this[_0x562482(0x8e1)];
        }
        get [_0x5659be(0x8dc)]() {
            var _0x2c9df8 = _0x5659be;
            return this[_0x2c9df8(0x8e4)];
        }
        set ['fieldOfView'](_0xbd6393) {
            var _0x13ad1 = _0x5659be;
            this['_fieldOfView'] = _0xbd6393, this[_0x13ad1(0x8e9)]();
        }
        get [_0x5659be(0x85b)]() {
            return this['_nearPlane'];
        }
        set [_0x5659be(0x85b)](_0x1926d8) {
            var _0x1871cf = _0x5659be;
            this['_nearPlane'] = _0x1926d8, this[_0x1871cf(0x8e9)]();
        }
        get ['farPlane']() {
            var _0x3d8414 = _0x5659be;
            return this[_0x3d8414(0x8ea)];
        }
        set ['farPlane'](_0x1d4563) {
            var _0xbc607b = _0x5659be;
            this[_0xbc607b(0x8ea)] = _0x1d4563, this[_0xbc607b(0x8e9)]();
        }
        get [_0x5659be(0x8db)]() {
            var _0x352d86 = _0x5659be;
            return this[_0x352d86(0x8e6)];
        }
        set ['orthographic'](_0xe6c40c) {
            var _0x16f4df = _0x5659be;
            this[_0x16f4df(0x8e6)] = _0xe6c40c, this[_0x16f4df(0x8e9)]();
        }
        get [_0x5659be(0x862)]() {
            var _0x5d854f = _0x5659be;
            return this[_0x5d854f(0x8eb)];
        }
        set ['orthographicVerticalSize'](_0x126b3e) {
            var _0x13c774 = _0x5659be;
            this[_0x13c774(0x8eb)] = _0x126b3e, this[_0x13c774(0x8e9)]();
        }
        get ['renderingOrder']() {
            return this['_renderingOrder'];
        }
        set [_0x5659be(0x8ec)](_0x509b65) {
            var _0x6da356 = _0x5659be;
            this['_renderingOrder'] = _0x509b65, this[_0x6da356(0x8ed)]();
        }
        [_0x5659be(0x8ed)]() {
            var _0x2e3c5e = _0x5659be;
            if (this[_0x2e3c5e(0x8ee)]) {
                var _0x49bc87 = this[_0x2e3c5e(0x5da)]['_cameraPool'], _0x5c5de0 = _0x49bc87[_0x2e3c5e(0x1ff)] - 0x1;
                for (var _0x391f43 = 0x0; _0x391f43 < _0x5c5de0; _0x391f43++) {
                    if (_0x49bc87[_0x391f43]['renderingOrder'] > _0x49bc87[_0x5c5de0]['renderingOrder']) {
                        var _0x6f8ac9 = _0x49bc87[_0x391f43];
                        _0x49bc87[_0x391f43] = _0x49bc87[_0x5c5de0], _0x49bc87[_0x5c5de0] = _0x6f8ac9;
                    }
                }
            }
        }
        [_0x5659be(0x8e9)]() {
        }
        [_0x5659be(0x8ef)]() {
            var _0x14f7a8 = _0x5659be;
            this[_0x14f7a8(0x8e9)]();
        }
        ['_prepareCameraToRender']() {
            var _0x11b6d1 = _0x5659be, _0x52a18e = this['_shaderValues'];
            this[_0x11b6d1(0x3cc)][_0x11b6d1(0x5ae)](this[_0x11b6d1(0x8e2)]), this[_0x11b6d1(0x3cc)][_0x11b6d1(0x8f0)](this[_0x11b6d1(0x8e3)]), _0x52a18e[_0x11b6d1(0x4b1)](_0x3c0ef2[_0x11b6d1(0x8f1)], this[_0x11b6d1(0x3cc)][_0x11b6d1(0x59e)]), _0x52a18e[_0x11b6d1(0x4b1)](_0x3c0ef2['CAMERADIRECTION'], this['_forward']), _0x52a18e[_0x11b6d1(0x4b1)](_0x3c0ef2['CAMERAUP'], this[_0x11b6d1(0x8e3)]);
        }
        [_0x5659be(0x506)](_0x38d1ed = null, _0x4e1f99 = null) {
        }
        [_0x5659be(0x8f2)](_0x18d036) {
            var _0x15679f = _0x5659be;
            this[_0x15679f(0x811)] |= Math[_0x15679f(0x2ef)](0x2, _0x18d036);
        }
        [_0x5659be(0x8f3)](_0x1c4a1c) {
            var _0x36c601 = _0x5659be;
            this[_0x36c601(0x811)] &= ~Math[_0x36c601(0x2ef)](0x2, _0x1c4a1c);
        }
        [_0x5659be(0x8f4)]() {
            var _0x24b330 = _0x5659be;
            this[_0x24b330(0x811)] = 0x7fffffff;
        }
        [_0x5659be(0x8f5)]() {
            this['cullingMask'] = 0x0;
        }
        [_0x5659be(0x8f6)]() {
            this['_useUserProjectionMatrix'] = ![], this['_calculateProjectionMatrix']();
        }
        [_0x5659be(0x8f7)]() {
            var _0x2c4680 = _0x5659be;
            this['_scene'][_0x2c4680(0x8f8)](this), super[_0x2c4680(0x8f7)]();
        }
        ['_onInActive']() {
            var _0x59c379 = _0x5659be;
            this['_scene'][_0x59c379(0x8f9)](this), super[_0x59c379(0x8fa)]();
        }
        [_0x5659be(0x318)](_0x500933, _0x3d5a80) {
            var _0x4b86fe = _0x5659be;
            super[_0x4b86fe(0x318)](_0x500933, _0x3d5a80), this[_0x4b86fe(0x8db)] = _0x500933[_0x4b86fe(0x8db)], _0x500933[_0x4b86fe(0x862)] !== undefined && (this[_0x4b86fe(0x862)] = _0x500933[_0x4b86fe(0x862)]), _0x500933[_0x4b86fe(0x8dc)] !== undefined && (this[_0x4b86fe(0x8dc)] = _0x500933['fieldOfView']), this[_0x4b86fe(0x85b)] = _0x500933['nearPlane'], this['farPlane'] = _0x500933[_0x4b86fe(0x85c)];
            var _0x1877bf = _0x500933[_0x4b86fe(0x5ed)];
            this[_0x4b86fe(0x5ed)] = new _0x8fb80(_0x1877bf[0x0], _0x1877bf[0x1], _0x1877bf[0x2], _0x1877bf[0x3]);
            var _0x1b80e8 = _0x500933['skyboxMaterial'];
            _0x1b80e8 && (this[_0x4b86fe(0x8e1)][_0x4b86fe(0x8d6)] = _0x218b83[_0x4b86fe(0x3b1)]['getRes'](_0x1b80e8[_0x4b86fe(0x691)]));
        }
        ['destroy'](_0x472d01 = !![]) {
            var _0x3594d4 = _0x5659be;
            this['_skyRenderer'][_0x3594d4(0x311)](), this[_0x3594d4(0x8e1)] = null, _0x218b83[_0x3594d4(0x685)][_0x3594d4(0x8fb)][_0x3594d4(0x8fc)](_0x218b83[_0x3594d4(0x5ab)]['RESIZE'], this, this[_0x3594d4(0x8ef)]), super[_0x3594d4(0x311)](_0x472d01);
        }
        ['_create']() {
            return new _0x3c0ef2();
        }
    }
    _0x3c0ef2[_0x5659be(0x8fd)] = new _0x3ed76a(), _0x3c0ef2[_0x5659be(0x8f1)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x8fe)), _0x3c0ef2[_0x5659be(0x8ff)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x900)), _0x3c0ef2[_0x5659be(0x901)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x902)), _0x3c0ef2[_0x5659be(0x903)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x904)), _0x3c0ef2['CAMERADIRECTION'] = _0x84b6d6['propertyNameToID'](_0x5659be(0x905)), _0x3c0ef2[_0x5659be(0x906)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x907)), _0x3c0ef2['VIEWPORT'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x908)), _0x3c0ef2[_0x5659be(0x909)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x90a)), _0x3c0ef2['DEPTHTEXTURE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x90b)), _0x3c0ef2['DEPTHNORMALSTEXTURE'] = _0x84b6d6[_0x5659be(0x526)]('u_CameraDepthNormalsTexture'), _0x3c0ef2[_0x5659be(0x90c)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x90d)), _0x3c0ef2['SHADERDEFINE_DEPTH'] = _0x84b6d6['getDefineByName'](_0x5659be(0x90e)), _0x3c0ef2[_0x5659be(0x90f)] = _0x84b6d6[_0x5659be(0x510)](_0x5659be(0x910)), _0x3c0ef2[_0x5659be(0x911)] = _0x5659be(0x912), _0x3c0ef2[_0x5659be(0x913)] = _0x5659be(0x914), _0x3c0ef2[_0x5659be(0x915)] = new _0x3ed76a(0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), _0x3c0ef2[_0x5659be(0x916)] = new _0x3ed76a(), _0x3c0ef2[_0x5659be(0x917)] = new _0x3ed76a(), _0x3c0ef2['CLEARFLAG_SOLIDCOLOR'] = 0x0, _0x3c0ef2[_0x5659be(0x918)] = 0x1, _0x3c0ef2[_0x5659be(0x919)] = 0x2, _0x3c0ef2[_0x5659be(0x91a)] = 0x3, function (_0x3497a7) {
        var _0x532f38 = _0x5659be;
        _0x3497a7[_0x3497a7[_0x532f38(0x91b)] = 0x0] = _0x532f38(0x91b), _0x3497a7[_0x3497a7[_0x532f38(0x91c)] = 0x1] = _0x532f38(0x91c), _0x3497a7[_0x3497a7[_0x532f38(0x91d)] = 0x2] = _0x532f38(0x91d), _0x3497a7[_0x3497a7[_0x532f38(0x91e)] = 0x3] = _0x532f38(0x91e);
    }(_0x71dec4[_0x5659be(0x91f)] || (_0x71dec4[_0x5659be(0x91f)] = {}));
    class _0x2de530 {
    }
    (function (_0x275535) {
        var _0x2da294 = _0x5659be;
        _0x275535[_0x275535[_0x2da294(0x920)] = 0x0] = 'Directional', _0x275535[_0x275535['Spot'] = 0x1] = _0x2da294(0x921), _0x275535[_0x275535['Point'] = 0x2] = _0x2da294(0x2cf);
    }(_0x71dec4[_0x5659be(0x922)] || (_0x71dec4[_0x5659be(0x922)] = {})));
    class _0x3df9e9 extends _0x356e58 {
        constructor() {
            var _0x4ab2c3 = _0x5659be;
            super(), this[_0x4ab2c3(0x923)] = _0x71dec4[_0x4ab2c3(0x91f)][_0x4ab2c3(0x91b)], this[_0x4ab2c3(0x924)] = ![], this[_0x4ab2c3(0x925)] = 0x800, this[_0x4ab2c3(0x926)] = 0x32, this[_0x4ab2c3(0x927)] = 0x1, this[_0x4ab2c3(0x928)] = 0x1, this[_0x4ab2c3(0x929)] = 0.1, this[_0x4ab2c3(0x92a)] = 0x1, this[_0x4ab2c3(0x92b)] = new _0x3ed76a(), this[_0x4ab2c3(0x92c)] = 0x1, this[_0x4ab2c3(0x92d)] = new _0x3f70c5(), this[_0x4ab2c3(0x462)] = new _0x3f70c5(0x1, 0x1, 0x1), this[_0x4ab2c3(0x92e)] = _0x3df9e9['LIGHTMAPBAKEDTYPE_REALTIME'];
        }
        get ['intensity']() {
            var _0x3aada3 = _0x5659be;
            return this[_0x3aada3(0x92c)];
        }
        set ['intensity'](_0x209c40) {
            var _0x1f8cbe = _0x5659be;
            this[_0x1f8cbe(0x92c)] = _0x209c40;
        }
        get [_0x5659be(0x92f)]() {
            var _0x33bd11 = _0x5659be;
            return this[_0x33bd11(0x923)];
        }
        set [_0x5659be(0x92f)](_0x216650) {
            var _0x54b160 = _0x5659be;
            this[_0x54b160(0x923)] = _0x216650;
        }
        get [_0x5659be(0x930)]() {
            var _0x356e0d = _0x5659be;
            return this[_0x356e0d(0x926)];
        }
        set [_0x5659be(0x930)](_0x519671) {
            var _0x5d0730 = _0x5659be;
            this[_0x5d0730(0x926)] = _0x519671;
        }
        get [_0x5659be(0x931)]() {
            var _0x52546a = _0x5659be;
            return this[_0x52546a(0x925)];
        }
        set ['shadowResolution'](_0x1ff2a6) {
            this['_shadowResolution'] = _0x1ff2a6;
        }
        get [_0x5659be(0x932)]() {
            var _0x572217 = _0x5659be;
            return this[_0x572217(0x927)];
        }
        set [_0x5659be(0x932)](_0x5d3273) {
            var _0x3dc2cb = _0x5659be;
            this[_0x3dc2cb(0x927)] = _0x5d3273;
        }
        get ['shadowNormalBias']() {
            var _0x3bf603 = _0x5659be;
            return this[_0x3bf603(0x928)];
        }
        set [_0x5659be(0x933)](_0x25369a) {
            var _0x58b7d4 = _0x5659be;
            this[_0x58b7d4(0x928)] = _0x25369a;
        }
        get [_0x5659be(0x934)]() {
            return this['_shadowStrength'];
        }
        set ['shadowStrength'](_0xc6161) {
            var _0x2017c0 = _0x5659be;
            this[_0x2017c0(0x92a)] = _0xc6161;
        }
        get [_0x5659be(0x935)]() {
            var _0x38b681 = _0x5659be;
            return this[_0x38b681(0x929)];
        }
        set [_0x5659be(0x935)](_0x1e62c0) {
            var _0x8661e1 = _0x5659be;
            this[_0x8661e1(0x929)] = _0x1e62c0;
        }
        get [_0x5659be(0x936)]() {
            var _0x27827e = _0x5659be;
            return this[_0x27827e(0x92e)];
        }
        set ['lightmapBakedType'](_0x41023b) {
            var _0x212d48 = _0x5659be;
            if (this[_0x212d48(0x92e)] !== _0x41023b) {
                this['_lightmapBakedType'] = _0x41023b;
                if (this[_0x212d48(0x937)]) {
                    if (_0x41023b !== _0x3df9e9['LIGHTMAPBAKEDTYPE_BAKED'])
                        this[_0x212d48(0x938)]();
                    else
                        this['_removeFromScene']();
                }
            }
        }
        get [_0x5659be(0x939)]() {
            var _0x59a949 = _0x5659be, _0x7552ae = this['transform'][_0x59a949(0x59e)], _0x2b4c74 = this[_0x59a949(0x3cc)]['rotation'];
            return _0x3ed76a[_0x59a949(0x477)](_0x7552ae, _0x2b4c74, _0x3f70c5[_0x59a949(0x215)], this[_0x59a949(0x92b)]), this['_lightWoldMatrix'];
        }
        [_0x5659be(0x318)](_0x38d2ce, _0x5fe887) {
            var _0x2228d3 = _0x5659be;
            super[_0x2228d3(0x318)](_0x38d2ce, _0x5fe887);
            var _0x279b2f = _0x38d2ce[_0x2228d3(0x462)];
            this[_0x2228d3(0x462)][_0x2228d3(0x1fb)](_0x279b2f), this[_0x2228d3(0x93a)] = _0x38d2ce[_0x2228d3(0x93a)], this[_0x2228d3(0x936)] = _0x38d2ce['lightmapBakedType'];
        }
        ['_cloneTo'](_0x17c840, _0x2bc356, _0x2e7137) {
            var _0x26caf4 = _0x5659be;
            super[_0x26caf4(0x339)](_0x17c840, _0x2bc356, _0x2e7137);
            var _0x2d3e3d = _0x17c840;
            _0x2d3e3d[_0x26caf4(0x462)] = this[_0x26caf4(0x462)][_0x26caf4(0x1f4)](), _0x2d3e3d[_0x26caf4(0x93a)] = this[_0x26caf4(0x93a)], _0x2d3e3d[_0x26caf4(0x936)] = this['lightmapBakedType'];
        }
        [_0x5659be(0x938)]() {
            var _0x271df6 = _0x5659be, _0x5ca790 = this[_0x271df6(0x3a6)], _0x107f3b = _0x528624[_0x271df6(0x243)][_0x271df6(0x24d)];
            _0x5ca790['_lightCount'] < _0x107f3b ? (_0x5ca790['_lightCount']++, this[_0x271df6(0x93b)](), this['_isAlternate'] = ![]) : (_0x5ca790[_0x271df6(0x93c)][_0x271df6(0x201)](this), this[_0x271df6(0x924)] = !![], console[_0x271df6(0x24e)](_0x271df6(0x93d)));
        }
        [_0x5659be(0x93e)]() {
            var _0xfeaf34 = _0x5659be, _0x8ef3 = this['_scene'];
            if (this[_0xfeaf34(0x924)])
                _0x8ef3[_0xfeaf34(0x93c)]['remove'](this);
            else {
                _0x8ef3['_lightCount']--, this['_removeFromLightQueue']();
                if (_0x8ef3[_0xfeaf34(0x93c)][_0xfeaf34(0x438)] > 0x0) {
                    var _0x5f4d1d = _0x8ef3[_0xfeaf34(0x93c)][_0xfeaf34(0x93f)]();
                    _0x5f4d1d[_0xfeaf34(0x93b)](), _0x5f4d1d['_isAlternate'] = ![], _0x8ef3['_lightCount']++;
                }
            }
        }
        [_0x5659be(0x93b)]() {
        }
        [_0x5659be(0x940)]() {
        }
        [_0x5659be(0x8f7)]() {
            var _0x4a1f59 = _0x5659be;
            super['_onActive'](), this[_0x4a1f59(0x936)] !== _0x3df9e9[_0x4a1f59(0x941)] && this[_0x4a1f59(0x938)]();
        }
        [_0x5659be(0x8fa)]() {
            var _0x4c985c = _0x5659be;
            super[_0x4c985c(0x8fa)](), this[_0x4c985c(0x936)] !== _0x3df9e9[_0x4c985c(0x941)] && this[_0x4c985c(0x93e)]();
        }
        [_0x5659be(0x5d2)]() {
            return new _0x3df9e9();
        }
        get [_0x5659be(0x942)]() {
            var _0x2c9bd5 = _0x5659be;
            return console[_0x2c9bd5(0x943)](_0x2c9bd5(0x944)), this['color'];
        }
        set [_0x5659be(0x942)](_0x2fc594) {
            var _0x389f02 = _0x5659be;
            console[_0x389f02(0x943)](_0x389f02(0x944)), this['color'] = _0x2fc594;
        }
    }
    _0x3df9e9[_0x5659be(0x945)] = 0x0, _0x3df9e9[_0x5659be(0x946)] = 0x1, _0x3df9e9[_0x5659be(0x941)] = 0x2, function (_0x1f77d2) {
        var _0x273169 = _0x5659be;
        _0x1f77d2[_0x1f77d2[_0x273169(0x947)] = 0x0] = 'NoCascades', _0x1f77d2[_0x1f77d2['TwoCascades'] = 0x1] = _0x273169(0x948), _0x1f77d2[_0x1f77d2[_0x273169(0x949)] = 0x2] = 'FourCascades';
    }(_0x71dec4['ShadowCascadesMode'] || (_0x71dec4[_0x5659be(0x94a)] = {}));
    var _0x42dd30;
    (function (_0x55e95a) {
        var _0x11e1fd = _0x5659be;
        _0x55e95a[_0x55e95a[_0x11e1fd(0x94b)] = 0x0] = 'Near', _0x55e95a[_0x55e95a[_0x11e1fd(0x94c)] = 0x1] = _0x11e1fd(0x94c), _0x55e95a[_0x55e95a['Left'] = 0x2] = _0x11e1fd(0x94d), _0x55e95a[_0x55e95a[_0x11e1fd(0x94e)] = 0x3] = _0x11e1fd(0x94e), _0x55e95a[_0x55e95a['Bottom'] = 0x4] = _0x11e1fd(0x94f), _0x55e95a[_0x55e95a[_0x11e1fd(0x950)] = 0x5] = 'Top';
    }(_0x42dd30 || (_0x42dd30 = {})));
    class _0x143874 {
        static [_0x5659be(0x951)]() {
            var _0x43a2a5 = _0x5659be;
            return _0x218b83['LayaGL'][_0x43a2a5(0x3ed)][_0x43a2a5(0x952)] || _0x218b83[_0x43a2a5(0x953)][_0x43a2a5(0x954)](_0x218b83[_0x43a2a5(0x302)]['Depth']);
        }
        static [_0x5659be(0x955)]() {
            var _0x3776ad = _0x5659be;
            if (_0x218b83[_0x3776ad(0x2f3)][_0x3776ad(0x3ed)][_0x3776ad(0x952)])
                _0x143874[_0x3776ad(0x956)] = _0x218b83[_0x3776ad(0x302)][_0x3776ad(0x3f2)];
            else
                _0x143874[_0x3776ad(0x956)] = _0x218b83[_0x3776ad(0x302)]['Depth'];
        }
        static [_0x5659be(0x957)](_0x271c8a, _0x4a32a8, _0x1d1a28) {
            var _0x49d1e7 = _0x5659be, _0x18af17 = _0x164148[_0x49d1e7(0x3e9)](_0x271c8a, _0x4a32a8, _0x143874[_0x49d1e7(0x956)], _0x1d1a28);
            return _0x18af17[_0x49d1e7(0x2ce)] = _0x218b83[_0x49d1e7(0x2f7)][_0x49d1e7(0x958)], _0x18af17['wrapModeU'] = _0x218b83[_0x49d1e7(0x2d1)][_0x49d1e7(0x20f)], _0x18af17[_0x49d1e7(0x2d2)] = _0x218b83[_0x49d1e7(0x2d1)][_0x49d1e7(0x20f)], _0x18af17;
        }
        static ['getShadowBias'](_0x55c57e, _0x904610, _0x32f53b, _0x16496d) {
            var _0x1ed74c = _0x5659be, _0x147551;
            if (_0x55c57e[_0x1ed74c(0x959)] == _0x71dec4['LightType']['Directional'])
                _0x147551 = 0x2 / _0x904610[_0x1ed74c(0x1f6)][0x0];
            else
                _0x55c57e[_0x1ed74c(0x959)] == _0x71dec4[_0x1ed74c(0x922)][_0x1ed74c(0x921)] ? _0x147551 = Math[_0x1ed74c(0x47c)](_0x55c57e[_0x1ed74c(0x854)] * 0.5 * _0x57b8d6[_0x1ed74c(0x1ed)]) * _0x55c57e['range'] : (console[_0x1ed74c(0x24e)](_0x1ed74c(0x95a)), _0x147551 = 0x0);
            var _0x150d8a = _0x147551 / _0x32f53b, _0x68f03a = -_0x55c57e[_0x1ed74c(0x927)] * _0x150d8a, _0x3069c8 = -_0x55c57e[_0x1ed74c(0x928)] * _0x150d8a;
            if (_0x55c57e[_0x1ed74c(0x92f)] == _0x71dec4[_0x1ed74c(0x91f)][_0x1ed74c(0x91e)]) {
                const _0x193d80 = 2.5;
                _0x68f03a *= _0x193d80, _0x3069c8 *= _0x193d80;
            }
            _0x16496d['setValue'](_0x68f03a, _0x3069c8, 0x0, 0x0);
        }
        static ['getCameraFrustumPlanes'](_0x2b0496, _0x50f42) {
            var _0x3d0b90 = _0x5659be;
            _0x26b0f2[_0x3d0b90(0x8ac)](_0x2b0496, _0x50f42[_0x42dd30[_0x3d0b90(0x94b)]], _0x50f42[_0x42dd30[_0x3d0b90(0x94c)]], _0x50f42[_0x42dd30[_0x3d0b90(0x94d)]], _0x50f42[_0x42dd30[_0x3d0b90(0x94e)]], _0x50f42[_0x42dd30[_0x3d0b90(0x950)]], _0x50f42[_0x42dd30[_0x3d0b90(0x94f)]]);
        }
        static ['getFarWithRadius'](_0x30bed7, _0x3096a2) {
            var _0xd6807a = _0x5659be;
            return Math[_0xd6807a(0x1ea)](_0x30bed7 * _0x30bed7 / _0x3096a2);
        }
        static [_0x5659be(0x95b)](_0x92716c, _0x4b893a, _0x342bfc, _0x463c61, _0x3fa5ff, _0x5914c8, _0xbcbcd2, _0x566620) {
            var _0x483219 = _0x5659be;
            _0x566620[0x0] = _0x342bfc;
            var _0x426f82 = _0x463c61 - _0x342bfc, _0x4ffa0f = Math[_0x483219(0x47c)](_0x3fa5ff * 0.5), _0x4e5968 = 0x1 + _0x4ffa0f * _0x4ffa0f * (_0x5914c8 * _0x5914c8 + 0x1);
            switch (_0xbcbcd2) {
            case _0x71dec4[_0x483219(0x94a)][_0x483219(0x947)]:
                _0x566620[0x1] = _0x143874[_0x483219(0x95c)](_0x463c61, _0x4e5968);
                break;
            case _0x71dec4[_0x483219(0x94a)][_0x483219(0x948)]:
                _0x566620[0x1] = _0x143874[_0x483219(0x95c)](_0x342bfc + _0x426f82 * _0x92716c, _0x4e5968), _0x566620[0x2] = _0x143874[_0x483219(0x95c)](_0x463c61, _0x4e5968);
                break;
            case _0x71dec4[_0x483219(0x94a)][_0x483219(0x949)]:
                _0x566620[0x1] = _0x143874[_0x483219(0x95c)](_0x342bfc + _0x426f82 * _0x4b893a['x'], _0x4e5968), _0x566620[0x2] = _0x143874[_0x483219(0x95c)](_0x342bfc + _0x426f82 * _0x4b893a['y'], _0x4e5968), _0x566620[0x3] = _0x143874[_0x483219(0x95c)](_0x342bfc + _0x426f82 * _0x4b893a['z'], _0x4e5968), _0x566620[0x4] = _0x143874['getFarWithRadius'](_0x463c61, _0x4e5968);
                break;
            }
        }
        static [_0x5659be(0x95d)](_0x3ace31, _0x2d812d, _0x1142e8, _0x340419, _0x3a8c56) {
            var _0x2fb496 = _0x5659be, _0x2c3720 = _0x143874[_0x2fb496(0x5ad)][_0x2fb496(0x1f6)], _0xd43322 = 0x1 / _0x2d812d, _0xe2fea2 = 0x1 / _0x1142e8;
            _0x2c3720[0x0] = _0x3ace31['resolution'] * _0xd43322, _0x2c3720[0x5] = _0x3ace31['resolution'] * _0xe2fea2, _0x2c3720[0xc] = _0x3ace31[_0x2fb496(0x95e)] * _0xd43322, _0x2c3720[0xd] = _0x3ace31[_0x2fb496(0x95f)] * _0xe2fea2, _0x2c3720[0x1] = _0x2c3720[0x2] = _0x2c3720[0x2] = _0x2c3720[0x4] = _0x2c3720[0x6] = _0x2c3720[0x7] = _0x2c3720[0x8] = _0x2c3720[0x9] = _0x2c3720[0xb] = _0x2c3720[0xe] = 0x0, _0x2c3720[0xa] = _0x2c3720[0xf] = 0x1;
            var _0x4d78e1 = _0x340419 * 0x10;
            _0x108d81[_0x2fb496(0x2ec)](_0x2c3720, _0x3a8c56, _0x4d78e1, _0x3a8c56, _0x4d78e1);
        }
        static ['getDirectionLightShadowCullPlanes'](_0x392715, _0x989de, _0x2c115e, _0x201504, _0x1e0ed3, _0x31d45f) {
            var _0x5c6374 = _0x5659be, _0x52ca71 = _0x143874['_frustumCorners'], _0x1ae423 = _0x143874[_0x5c6374(0x960)], _0x3a3078 = _0x143874[_0x5c6374(0x961)], _0x4a56c6 = _0x143874[_0x5c6374(0x962)], _0x210156 = _0x143874[_0x5c6374(0x963)], _0x48a265 = _0x31d45f['cullPlanes'], _0x5d0fc1 = _0x392715[_0x42dd30[_0x5c6374(0x94b)]], _0x51291f = _0x392715[_0x42dd30[_0x5c6374(0x94c)]], _0x23e793 = _0x392715[_0x42dd30[_0x5c6374(0x94d)]], _0x241e6e = _0x392715[_0x42dd30[_0x5c6374(0x94e)]], _0x482caa = _0x392715[_0x42dd30[_0x5c6374(0x94f)]], _0x1db1d1 = _0x392715[_0x42dd30[_0x5c6374(0x950)]], _0x317517 = _0x2c115e[_0x989de] - _0x201504, _0x36fe94 = _0x143874[_0x5c6374(0x964)], _0xbf1ca0 = _0x143874[_0x5c6374(0x965)];
            _0x5d0fc1[_0x5c6374(0x829)]['cloneTo'](_0x36fe94['normal']), _0x51291f['normal'][_0x5c6374(0x1f0)](_0xbf1ca0['normal']), _0x36fe94[_0x5c6374(0x208)] = _0x5d0fc1[_0x5c6374(0x208)] - _0x317517, _0xbf1ca0[_0x5c6374(0x208)] = Math[_0x5c6374(0x204)](-_0x5d0fc1[_0x5c6374(0x208)] + _0x31d45f['sphereCenterZ'] + _0x31d45f['splitBoundSphere'][_0x5c6374(0x87d)], _0x51291f[_0x5c6374(0x208)]), _0x26b0f2['get3PlaneInterPoint'](_0x36fe94, _0x482caa, _0x241e6e, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)][_0x5c6374(0x8a5)]]), _0x26b0f2[_0x5c6374(0x8b8)](_0x36fe94, _0x1db1d1, _0x241e6e, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)]['nearTopRight']]), _0x26b0f2['get3PlaneInterPoint'](_0x36fe94, _0x1db1d1, _0x23e793, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)][_0x5c6374(0x8a3)]]), _0x26b0f2[_0x5c6374(0x8b8)](_0x36fe94, _0x482caa, _0x23e793, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)][_0x5c6374(0x8a2)]]), _0x26b0f2[_0x5c6374(0x8b8)](_0xbf1ca0, _0x482caa, _0x241e6e, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)]['FarBottomRight']]), _0x26b0f2[_0x5c6374(0x8b8)](_0xbf1ca0, _0x1db1d1, _0x241e6e, _0x52ca71[_0x71dec4['FrustumCorner']['FarTopRight']]), _0x26b0f2[_0x5c6374(0x8b8)](_0xbf1ca0, _0x1db1d1, _0x23e793, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)][_0x5c6374(0x89f)]]), _0x26b0f2[_0x5c6374(0x8b8)](_0xbf1ca0, _0x482caa, _0x23e793, _0x52ca71[_0x71dec4[_0x5c6374(0x8a7)]['FarBottomLeft']]);
            var _0x4d1ecd = 0x0;
            for (var _0x1cac09 = 0x0; _0x1cac09 < 0x6; _0x1cac09++) {
                var _0x36b65b;
                switch (_0x1cac09) {
                case _0x42dd30[_0x5c6374(0x94b)]:
                    _0x36b65b = _0x36fe94;
                    break;
                case _0x42dd30[_0x5c6374(0x94c)]:
                    _0x36b65b = _0xbf1ca0;
                    break;
                default:
                    _0x36b65b = _0x392715[_0x1cac09];
                    break;
                }
                _0x3f70c5[_0x5c6374(0x1f1)](_0x36b65b[_0x5c6374(0x829)], _0x1e0ed3) < 0x0 && (_0x36b65b[_0x5c6374(0x1f0)](_0x48a265[_0x4d1ecd]), _0x1ae423[_0x4d1ecd] = _0x1cac09, _0x4d1ecd++);
            }
            var _0x2f07b1 = _0x4d1ecd;
            for (var _0x1cac09 = 0x0; _0x1cac09 < _0x4d1ecd; _0x1cac09++) {
                var _0x346161 = _0x1ae423[_0x1cac09], _0x1d29f5 = _0x3a3078[_0x346161];
                for (var _0x1d2ab9 = 0x0; _0x1d2ab9 < 0x4; _0x1d2ab9++) {
                    var _0x21b013 = _0x1d29f5[_0x1d2ab9], _0x1826cd = !![];
                    for (var _0x12bd72 = 0x0; _0x12bd72 < _0x4d1ecd; _0x12bd72++)
                        if (_0x21b013 == _0x1ae423[_0x12bd72]) {
                            _0x1826cd = ![];
                            break;
                        }
                    if (_0x1826cd) {
                        var _0x5e9a82 = _0x4a56c6[_0x346161][_0x21b013], _0x1b72bf = _0x52ca71[_0x5e9a82[0x0]], _0x357518 = _0x52ca71[_0x5e9a82[0x1]];
                        _0x3f70c5[_0x5c6374(0x201)](_0x1b72bf, _0x1e0ed3, _0x210156), _0x4d8983[_0x5c6374(0x873)](_0x1b72bf, _0x357518, _0x210156, _0x48a265[_0x2f07b1++]);
                    }
                }
            }
            _0x31d45f[_0x5c6374(0x827)] = _0x2f07b1;
        }
        static [_0x5659be(0x966)](_0x508f23, _0x5a47a2, _0x237244, _0x5967e9, _0xb617ee, _0x1a3dcf, _0x3ffe61) {
            var _0x59c963 = _0x5659be, _0x5756f3, _0x41c1a9, _0x106ab3 = Math[_0x59c963(0x1ea)](0x1 + _0x5967e9 * _0x5967e9) * Math['tan'](_0x237244 / 0x2), _0x3d11b4 = _0x106ab3 * _0x106ab3, _0x623005 = _0x5a47a2 - _0x508f23, _0x15287b = _0x5a47a2 + _0x508f23;
            _0x3d11b4 > _0x623005 / _0x15287b ? (_0x5756f3 = _0x5a47a2, _0x41c1a9 = _0x5a47a2 * _0x106ab3) : (_0x5756f3 = 0.5 * _0x15287b * (0x1 + _0x3d11b4), _0x41c1a9 = 0.5 * Math[_0x59c963(0x1ea)](_0x623005 * _0x623005 + 0x2 * (_0x5a47a2 * _0x5a47a2 + _0x508f23 * _0x508f23) * _0x3d11b4 + _0x15287b * _0x15287b * _0x3d11b4 * _0x3d11b4));
            var _0x4372cc = _0x3ffe61[_0x59c963(0x87c)];
            return _0x3ffe61[_0x59c963(0x87d)] = _0x41c1a9, _0x3f70c5[_0x59c963(0x1ee)](_0x1a3dcf, _0x5756f3, _0x4372cc), _0x3f70c5[_0x59c963(0x201)](_0xb617ee, _0x4372cc, _0x4372cc), _0x5756f3;
        }
        static ['getMaxTileResolutionInAtlas'](_0xf2611b, _0x3e0df6, _0xf8eb6) {
            var _0x349b34 = _0x5659be, _0xba709f = Math[_0x349b34(0x204)](_0xf2611b, _0x3e0df6), _0x4e56ac = Math[_0x349b34(0x241)](_0xf2611b / _0xba709f) * Math['floor'](_0x3e0df6 / _0xba709f);
            while (_0x4e56ac < _0xf8eb6) {
                _0xba709f = Math['floor'](_0xba709f >> 0x1), _0x4e56ac = Math[_0x349b34(0x241)](_0xf2611b / _0xba709f) * Math[_0x349b34(0x241)](_0x3e0df6 / _0xba709f);
            }
            return _0xba709f;
        }
        static [_0x5659be(0x967)](_0x312a7d, _0x37b5be, _0x40f811, _0x39b349, _0x2fc079, _0x2129fc, _0x3b3399, _0x262457) {
            var _0x418563 = _0x5659be, _0x17b822 = _0x3b3399[_0x418563(0x968)], _0x529b3a = _0x17b822['center'], _0x358412 = _0x17b822['radius'], _0x293dde = _0x2129fc / 0x2, _0x1ed629 = _0x358412 * _0x293dde / (_0x293dde - _0x143874[_0x418563(0x969)]), _0x111db9 = _0x1ed629 * 0x2, _0x3cd088 = _0x2129fc / _0x111db9, _0x4fdfba = _0x111db9 / _0x2129fc, _0x1dddc4 = Math['ceil'](_0x3f70c5['dot'](_0x529b3a, _0x312a7d) * _0x3cd088) * _0x4fdfba, _0x26b696 = Math[_0x418563(0x83b)](_0x3f70c5[_0x418563(0x1f1)](_0x529b3a, _0x37b5be) * _0x3cd088) * _0x4fdfba, _0x10123f = _0x3f70c5[_0x418563(0x1f1)](_0x529b3a, _0x40f811);
            _0x529b3a['x'] = _0x312a7d['x'] * _0x1dddc4 + _0x37b5be['x'] * _0x26b696 + _0x40f811['x'] * _0x10123f, _0x529b3a['y'] = _0x312a7d['y'] * _0x1dddc4 + _0x37b5be['y'] * _0x26b696 + _0x40f811['y'] * _0x10123f, _0x529b3a['z'] = _0x312a7d['z'] * _0x1dddc4 + _0x37b5be['z'] * _0x26b696 + _0x40f811['z'] * _0x10123f;
            var _0x4ac9c6 = _0x3b3399[_0x418563(0x59e)], _0x35bd04 = _0x3b3399[_0x418563(0x85d)], _0x1000fd = _0x3b3399[_0x418563(0x8e0)], _0x9f0b04 = _0x3b3399[_0x418563(0x96a)];
            _0x3b3399[_0x418563(0x96b)] = _0x2129fc, _0x3b3399['offsetX'] = _0x39b349 % 0x2 * _0x2129fc, _0x3b3399[_0x418563(0x95f)] = Math[_0x418563(0x241)](_0x39b349 / 0x2) * _0x2129fc, _0x3f70c5[_0x418563(0x1ee)](_0x40f811, _0x358412 + _0x2fc079, _0x4ac9c6), _0x3f70c5[_0x418563(0x210)](_0x529b3a, _0x4ac9c6, _0x4ac9c6), _0x3ed76a['createLookAt'](_0x4ac9c6, _0x529b3a, _0x312a7d, _0x35bd04), _0x3ed76a['createOrthoOffCenter'](-_0x1ed629, _0x1ed629, -_0x1ed629, _0x1ed629, 0x0, _0x358412 * 0x2 + _0x2fc079, _0x1000fd), _0x3ed76a[_0x418563(0x202)](_0x1000fd, _0x35bd04, _0x9f0b04), _0x108d81[_0x418563(0x2ec)](_0x143874['_shadowMapScaleOffsetMatrix'][_0x418563(0x1f6)], _0x9f0b04[_0x418563(0x1f6)], 0x0, _0x262457, _0x39b349 * 0x10);
        }
        static [_0x5659be(0x96c)](_0x2098fa, _0x355a46, _0xdb4ddc, _0x40b886, _0x242257, _0x1e2c42) {
            var _0x5c78cd = _0x5659be, _0x1278e1 = _0x2098fa[_0x5c78cd(0x59e)] = _0x355a46[_0x5c78cd(0x3cc)]['position'];
            _0x2098fa[_0x5c78cd(0x96b)] = _0xdb4ddc, _0x1e2c42['setValue'](0x1 / _0xdb4ddc, 0x1 / _0xdb4ddc, _0xdb4ddc, _0xdb4ddc), _0x2098fa[_0x5c78cd(0x95e)] = 0x0, _0x2098fa['offsetY'] = 0x0;
            var _0x3417d7 = _0x355a46['lightWorldMatrix'], _0x5be05e = _0x2098fa[_0x5c78cd(0x85d)], _0xc484fc = _0x2098fa[_0x5c78cd(0x8e0)], _0x326bfd = _0x2098fa[_0x5c78cd(0x96a)], _0x48034a = _0x2098fa['cameraCullInfo'][_0x5c78cd(0x810)];
            _0x3417d7['invert'](_0x5be05e), _0x3ed76a[_0x5c78cd(0x47b)](3.1416 * _0x355a46[_0x5c78cd(0x854)] / 0xb4, 0x1, 0.1, _0x355a46['range'], _0xc484fc), _0x40b886['y'] = _0x355a46[_0x5c78cd(0x934)], _0x3ed76a[_0x5c78cd(0x202)](_0xc484fc, _0x5be05e, _0x326bfd), _0x48034a[_0x5c78cd(0x8ae)] = _0x326bfd, _0x326bfd[_0x5c78cd(0x1f0)](_0x242257), _0x2098fa['cameraCullInfo'][_0x5c78cd(0x59e)] = _0x1278e1;
        }
        static ['prepareShadowReceiverShaderValues'](_0x1a06ea, _0x5641c8, _0x36ebef, _0x581b1f, _0x1c0b14, _0x1eda5b, _0x59fe6f, _0x179741, _0x41a6a7) {
            var _0x35a29e = _0x5659be;
            _0x1eda5b[_0x35a29e(0x1fa)](0x1 / _0x5641c8, 0x1 / _0x36ebef, _0x5641c8, _0x36ebef), _0x59fe6f[_0x35a29e(0x1fa)](_0x1a06ea[_0x35a29e(0x92a)], 0x0, 0x0, 0x0);
            if (_0x1c0b14 > 0x1) {
                const _0x187a1e = 0x10;
                for (var _0x154c57 = _0x1c0b14 * _0x187a1e, _0x34d449 = 0x4 * _0x187a1e; _0x154c57 < _0x34d449; _0x154c57++)
                    _0x179741[_0x154c57] = 0x0;
                for (var _0x154c57 = 0x0; _0x154c57 < _0x1c0b14; _0x154c57++) {
                    var _0x394625 = _0x581b1f[_0x154c57][_0x35a29e(0x968)], _0x1128b8 = _0x394625['center'], _0x36e0c8 = _0x394625['radius'], _0x5b4b30 = _0x154c57 * 0x4;
                    _0x41a6a7[_0x5b4b30] = _0x1128b8['x'], _0x41a6a7[_0x5b4b30 + 0x1] = _0x1128b8['y'], _0x41a6a7[_0x5b4b30 + 0x2] = _0x1128b8['z'], _0x41a6a7[_0x5b4b30 + 0x3] = _0x36e0c8 * _0x36e0c8;
                }
                const _0xa192a5 = 0x4;
                for (var _0x154c57 = _0x1c0b14 * _0xa192a5, _0x34d449 = 0x4 * _0xa192a5; _0x154c57 < _0x34d449; _0x154c57++)
                    _0x41a6a7[_0x154c57] = 0x0;
            }
        }
    }
    _0x143874['_tempMatrix0'] = new _0x3ed76a(), _0x143874[_0x5659be(0x96d)] = new _0x3ed76a(0.5, 0x0, 0x0, 0x0, 0x0, 0.5, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1), _0x143874[_0x5659be(0x96e)] = [
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5()
    ], _0x143874['_adjustNearPlane'] = new _0x4d8983(new _0x3f70c5()), _0x143874[_0x5659be(0x965)] = new _0x4d8983(new _0x3f70c5()), _0x143874['_backPlaneFaces'] = new Array(0x5), _0x143874['_edgePlanePoint2'] = new _0x3f70c5(), _0x143874[_0x5659be(0x961)] = [
        [
            _0x42dd30[_0x5659be(0x94d)],
            _0x42dd30[_0x5659be(0x94e)],
            _0x42dd30[_0x5659be(0x950)],
            _0x42dd30[_0x5659be(0x94f)]
        ],
        [
            _0x42dd30[_0x5659be(0x94d)],
            _0x42dd30[_0x5659be(0x94e)],
            _0x42dd30[_0x5659be(0x950)],
            _0x42dd30['Bottom']
        ],
        [
            _0x42dd30['Near'],
            _0x42dd30[_0x5659be(0x94c)],
            _0x42dd30[_0x5659be(0x950)],
            _0x42dd30[_0x5659be(0x94f)]
        ],
        [
            _0x42dd30[_0x5659be(0x94b)],
            _0x42dd30[_0x5659be(0x94c)],
            _0x42dd30['Top'],
            _0x42dd30['Bottom']
        ],
        [
            _0x42dd30[_0x5659be(0x94b)],
            _0x42dd30[_0x5659be(0x94c)],
            _0x42dd30[_0x5659be(0x94d)],
            _0x42dd30[_0x5659be(0x94e)]
        ],
        [
            _0x42dd30[_0x5659be(0x94b)],
            _0x42dd30[_0x5659be(0x94c)],
            _0x42dd30[_0x5659be(0x94d)],
            _0x42dd30[_0x5659be(0x94e)]
        ]
    ], _0x143874[_0x5659be(0x962)] = [
        [
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)]['unknown']
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a2)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a3)]
            ],
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a4)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a5)]
            ],
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a5)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a2)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['nearTopLeft'],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a4)]
            ]
        ],
        [
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x89f)],
                _0x71dec4[_0x5659be(0x8a7)]['FarBottomLeft']
            ],
            [
                _0x71dec4['FrustumCorner']['FarBottomRight'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a0)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89e)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a1)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a0)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89f)]
            ]
        ],
        [
            [
                _0x71dec4[_0x5659be(0x8a7)]['nearTopLeft'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a2)]
            ],
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x89e)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89f)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['unknown'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a2)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x89e)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89f)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a3)]
            ]
        ],
        [
            [
                _0x71dec4[_0x5659be(0x8a7)]['nearBottomRight'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a4)]
            ],
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a0)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a1)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['unknown'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a1)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a5)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['nearTopRight'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a0)]
            ]
        ],
        [
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a2)],
                _0x71dec4[_0x5659be(0x8a7)]['nearBottomRight']
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a1)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x89e)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89e)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a2)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['nearBottomRight'],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a1)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ]
        ],
        [
            [
                _0x71dec4['FrustumCorner']['nearTopRight'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a3)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89f)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a0)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['nearTopLeft'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x89f)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a0)],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a4)]
            ],
            [
                _0x71dec4[_0x5659be(0x8a7)]['unknown'],
                _0x71dec4[_0x5659be(0x8a7)][_0x5659be(0x8a6)]
            ],
            [
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a6)],
                _0x71dec4['FrustumCorner'][_0x5659be(0x8a6)]
            ]
        ]
    ], _0x143874[_0x5659be(0x969)] = 0x4, function (_0x1143b6) {
        var _0x686695 = _0x5659be;
        _0x1143b6[_0x1143b6[_0x686695(0x91b)] = 0x0] = _0x686695(0x91b), _0x1143b6[_0x1143b6['Depth'] = 0x1] = 'Depth', _0x1143b6[_0x1143b6[_0x686695(0x96f)] = 0x2] = _0x686695(0x96f), _0x1143b6[_0x1143b6['MotionVectors'] = 0x4] = _0x686695(0x970);
    }(_0x71dec4[_0x5659be(0x971)] || (_0x71dec4[_0x5659be(0x971)] = {}));
    class _0x385f41 {
        constructor() {
            var _0x5cbd30 = _0x5659be;
            this[_0x5cbd30(0x972)] = new _0x8fb80();
        }
        ['update'](_0x22b2c5, _0x4332b6) {
            var _0x161a7a = _0x5659be;
            this[_0x161a7a(0x973)] = _0x22b2c5['viewport'], this[_0x161a7a(0x560)] = _0x22b2c5;
            switch (_0x4332b6) {
            case _0x71dec4[_0x161a7a(0x971)][_0x161a7a(0x3f1)]:
                _0x22b2c5[_0x161a7a(0x974)] = this[_0x161a7a(0x975)] = _0x164148['createFromPool'](this[_0x161a7a(0x973)][_0x161a7a(0x300)], this['_viewPort']['height'], _0x218b83[_0x161a7a(0x302)]['Depth'], _0x218b83[_0x161a7a(0x3db)][_0x161a7a(0x3dc)]);
                break;
            case _0x71dec4[_0x161a7a(0x971)][_0x161a7a(0x96f)]:
                _0x22b2c5[_0x161a7a(0x976)] = this[_0x161a7a(0x977)] = _0x164148['createFromPool'](this[_0x161a7a(0x973)]['width'], this[_0x161a7a(0x973)][_0x161a7a(0x301)], _0x218b83[_0x161a7a(0x302)][_0x161a7a(0x2c8)], _0x218b83[_0x161a7a(0x3db)][_0x161a7a(0x3dc)]);
                break;
            case _0x71dec4[_0x161a7a(0x971)][_0x161a7a(0x970)]:
                break;
            default:
                throw _0x161a7a(0x978);
            }
        }
        [_0x5659be(0x506)](_0x24d5cf, _0x583ddf) {
            var _0x295ff2 = _0x5659be, _0x58f00d = _0x24d5cf['scene'];
            switch (_0x583ddf) {
            case _0x71dec4[_0x295ff2(0x971)][_0x295ff2(0x3f1)]:
                var _0x16c033 = _0x58f00d[_0x295ff2(0x4e0)];
                _0x24d5cf['pipelineMode'] = _0x295ff2(0x979), _0x552b02[_0x295ff2(0x4d9)](![]), this[_0x295ff2(0x975)][_0x295ff2(0x424)](), _0x16c033['setVector'](_0x385f41[_0x295ff2(0x97a)], _0x385f41[_0x295ff2(0x97b)]);
                var _0x483a0e = _0x218b83['LayaGL'][_0x295ff2(0x2f4)], _0x147181 = this['_viewPort']['x'], _0x1c6f44 = this[_0x295ff2(0x973)]['y'];
                _0x483a0e[_0x295ff2(0x650)](_0x483a0e[_0x295ff2(0x97c)]), _0x483a0e[_0x295ff2(0x561)](_0x147181, _0x1c6f44, this[_0x295ff2(0x973)][_0x295ff2(0x300)], this[_0x295ff2(0x973)]['height']), _0x483a0e['scissor'](_0x147181, _0x1c6f44, this[_0x295ff2(0x973)][_0x295ff2(0x300)], this[_0x295ff2(0x973)]['height']), _0x483a0e[_0x295ff2(0x496)](_0x483a0e[_0x295ff2(0x5ee)]), _0x58f00d['_opaqueQueue'][_0x295ff2(0x5e6)](_0x24d5cf), this[_0x295ff2(0x975)]['_end'](), _0x552b02[_0x295ff2(0x4d9)](!![]), this['_setupDepthModeShaderValue'](_0x583ddf, this[_0x295ff2(0x560)]), _0x24d5cf[_0x295ff2(0x5df)] = _0x24d5cf[_0x295ff2(0x3d8)];
                break;
            case _0x71dec4[_0x295ff2(0x971)][_0x295ff2(0x96f)]:
                var _0x16c033 = _0x58f00d[_0x295ff2(0x4e0)];
                _0x24d5cf[_0x295ff2(0x5df)] = 'DepthNormal', _0x552b02[_0x295ff2(0x4d9)](![]), this['_depthNormalsTexture'][_0x295ff2(0x424)]();
                var _0x483a0e = _0x218b83['LayaGL'][_0x295ff2(0x2f4)], _0x147181 = this[_0x295ff2(0x973)]['x'], _0x1c6f44 = this[_0x295ff2(0x973)]['y'];
                _0x483a0e['enable'](_0x483a0e['SCISSOR_TEST']), _0x483a0e[_0x295ff2(0x561)](_0x147181, _0x1c6f44, this[_0x295ff2(0x973)][_0x295ff2(0x300)], this[_0x295ff2(0x973)][_0x295ff2(0x301)]), _0x483a0e[_0x295ff2(0x97d)](_0x147181, _0x1c6f44, this[_0x295ff2(0x973)]['width'], this[_0x295ff2(0x973)][_0x295ff2(0x301)]), _0x483a0e['clearColor'](0x0, 0x0, 0x1, 0x0), _0x483a0e[_0x295ff2(0x496)](_0x483a0e[_0x295ff2(0x5ee)] | _0x483a0e[_0x295ff2(0x42a)]), _0x58f00d[_0x295ff2(0x822)]['_render'](_0x24d5cf), this['_depthNormalsTexture'][_0x295ff2(0x426)](), _0x552b02[_0x295ff2(0x4d9)](!![]), this[_0x295ff2(0x97e)](_0x583ddf, this['_camera']), _0x24d5cf[_0x295ff2(0x5df)] = _0x24d5cf[_0x295ff2(0x3d8)];
                break;
            case _0x71dec4[_0x295ff2(0x971)]['MotionVectors']:
                break;
            default:
                throw _0x295ff2(0x978);
            }
        }
        [_0x5659be(0x97e)](_0x476bdf, _0x2b6375) {
            var _0x5076e7 = _0x5659be;
            switch (_0x476bdf) {
            case _0x71dec4[_0x5076e7(0x971)]['Depth']:
                var _0x5f009e = _0x2b6375[_0x5076e7(0x85c)], _0x353570 = _0x2b6375['nearPlane'];
                this[_0x5076e7(0x972)][_0x5076e7(0x1fa)](0x1 - _0x5f009e / _0x353570, _0x5f009e / _0x353570, (_0x353570 - _0x5f009e) / (_0x353570 * _0x5f009e), 0x1 / _0x353570), _0x2b6375['_shaderValues']['setVector'](_0x385f41[_0x5076e7(0x97a)], _0x385f41[_0x5076e7(0x97b)]), _0x2b6375[_0x5076e7(0x4e0)][_0x5076e7(0x4a2)](_0x385f41['DEPTHTEXTURE'], this['_depthTexture']), _0x2b6375[_0x5076e7(0x4e0)][_0x5076e7(0x49d)](_0x385f41['DEPTHZBUFFERPARAMS'], this['_zBufferParams']);
                break;
            case _0x71dec4[_0x5076e7(0x971)][_0x5076e7(0x96f)]:
                _0x2b6375['_shaderValues'][_0x5076e7(0x4a2)](_0x385f41[_0x5076e7(0x97f)], this[_0x5076e7(0x977)]);
                break;
            case _0x71dec4['DepthTextureMode'][_0x5076e7(0x970)]:
                break;
            default:
                throw 'there\x20is\x20UnDefined\x20type\x20of\x20DepthTextureMode';
            }
        }
        [_0x5659be(0x980)]() {
            var _0x3ae463 = _0x5659be;
            this['_depthTexture'] && _0x164148[_0x3ae463(0x65a)](this['_depthTexture']), this[_0x3ae463(0x977)] && _0x164148[_0x3ae463(0x65a)](this['_depthNormalsTexture']), this['_depthTexture'] = null, this[_0x3ae463(0x977)] = null;
        }
    }
    _0x385f41[_0x5659be(0x97b)] = new _0x8fb80(), _0x385f41[_0x5659be(0x97a)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x981)), _0x385f41[_0x5659be(0x982)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x90b)), _0x385f41[_0x5659be(0x97f)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x983)), _0x385f41[_0x5659be(0x90c)] = _0x84b6d6[_0x5659be(0x526)]('u_ZBufferParams'), function (_0x1480bb) {
        var _0x40e96d = _0x5659be;
        _0x1480bb[_0x1480bb[_0x40e96d(0x984)] = 0x0] = _0x40e96d(0x984), _0x1480bb[_0x1480bb[_0x40e96d(0x985)] = 0x1] = _0x40e96d(0x985), _0x1480bb[_0x1480bb[_0x40e96d(0x986)] = 0x2] = _0x40e96d(0x986), _0x1480bb[_0x1480bb['Nothing'] = 0x3] = _0x40e96d(0x987);
    }(_0x71dec4[_0x5659be(0x988)] || (_0x71dec4[_0x5659be(0x988)] = {})), function (_0x35578b) {
        var _0x29688a = _0x5659be;
        _0x35578b[_0x35578b['BeforeForwardOpaque'] = 0x0] = _0x29688a(0x989), _0x35578b[_0x35578b[_0x29688a(0x98a)] = 0x2] = 'BeforeSkyBox', _0x35578b[_0x35578b[_0x29688a(0x98b)] = 0x4] = 'BeforeTransparent', _0x35578b[_0x35578b[_0x29688a(0x98c)] = 0x6] = 'BeforeImageEffect', _0x35578b[_0x35578b['AfterEveryThing'] = 0x8] = _0x29688a(0x98d);
    }(_0x71dec4[_0x5659be(0x98e)] || (_0x71dec4[_0x5659be(0x98e)] = {}));
    class _0x428ec4 extends _0x3c0ef2 {
        constructor(_0x29d296 = 0x0, _0x2be9dc = 0.3, _0x5cd8f2 = 0x3e8) {
            var _0x13813d = _0x5659be;
            super(_0x2be9dc, _0x5cd8f2), this[_0x13813d(0x98f)] = !![], this[_0x13813d(0x990)] = null, this[_0x13813d(0x991)] = ![], this[_0x13813d(0x992)] = new _0x8fb80(), this[_0x13813d(0x993)] = new _0x8fb80(), this[_0x13813d(0x994)] = ![], this[_0x13813d(0x995)] = null, this['_internalRenderTexture'] = null, this['_internalCommandBuffer'] = new _0x1a9c23(), this[_0x13813d(0x996)] = {}, this[_0x13813d(0x997)] = new _0x12bf01(-0x1, -0x1), this[_0x13813d(0x659)] = new _0x8fb80(), this['enableRender'] = !![], this[_0x13813d(0x998)] = _0x71dec4['CameraClearFlags']['SolidColor'], this[_0x13813d(0x999)] = new _0x3ed76a(), this['_projectionMatrix'] = new _0x3ed76a(), this['_projectionViewMatrix'] = new _0x3ed76a(), this[_0x13813d(0x99a)] = new _0x2a99cf(0x0, 0x0, 0x0, 0x0), this[_0x13813d(0x99b)] = new _0x2a99cf(0x0, 0x0, 0x1, 0x1), this[_0x13813d(0x99c)] = new _0x2a99cf(0x0, 0x0, 0x0, 0x0), this[_0x13813d(0x99d)] = _0x29d296, this[_0x13813d(0x99e)] = new _0x26b0f2(new _0x3ed76a()), this[_0x13813d(0x8e9)](), _0x218b83[_0x13813d(0x685)]['stage']['on'](_0x218b83[_0x13813d(0x5ab)][_0x13813d(0x99f)], this, this['_onScreenSizeChanged']), this[_0x13813d(0x3cc)]['on'](_0x218b83[_0x13813d(0x5ab)][_0x13813d(0x5a7)], this, this[_0x13813d(0x9a0)]);
        }
        static ['drawRenderTextureByScene'](_0x3277cb, _0x4ebcd5, _0x8d8da5, _0x5ba6b6 = null, _0x1e72b8 = null) {
            var _0x5cb58f = _0x5659be;
            _0x3277cb[_0x5cb58f(0x9a1)] != _0x8d8da5 && (_0x3277cb[_0x5cb58f(0x9a1)] && _0x164148[_0x5cb58f(0x65a)](_0x3277cb[_0x5cb58f(0x9a1)]), _0x3277cb[_0x5cb58f(0x9a1)] = _0x8d8da5);
            var _0x4e418f = _0x3277cb[_0x5cb58f(0x561)], _0x10d174 = _0x3277cb[_0x5cb58f(0x9a2)](), _0x3c4a35 = _0x51310c[_0x5cb58f(0x425)], _0x4ebcd5 = _0x3c4a35['scene'] = _0x4ebcd5;
            _0x3c4a35['pipelineMode'] = _0x3c4a35[_0x5cb58f(0x3d8)];
            _0x10d174 ? (_0x3277cb[_0x5cb58f(0x55f)] = _0x164148[_0x5cb58f(0x3e9)](_0x4e418f[_0x5cb58f(0x300)], _0x4e418f[_0x5cb58f(0x301)], _0x3277cb[_0x5cb58f(0x9a3)](), _0x218b83[_0x5cb58f(0x3db)]['DEPTH_16']), _0x3277cb[_0x5cb58f(0x55f)][_0x5cb58f(0x2ce)] = _0x218b83[_0x5cb58f(0x2f7)][_0x5cb58f(0x958)]) : _0x3277cb[_0x5cb58f(0x55f)] = null;
            var _0x473e4c = _0x3277cb['_renderShadowMap'](_0x4ebcd5, _0x3c4a35);
            return _0x3277cb[_0x5cb58f(0x9a4)](_0x3c4a35, _0x4ebcd5, _0x10d174, _0x4e418f), _0x3277cb['_renderMainPass'](_0x3c4a35, _0x4e418f, _0x4ebcd5, _0x5ba6b6, _0x1e72b8, _0x10d174), _0x3277cb[_0x5cb58f(0x9a5)](_0x473e4c), _0x3277cb['renderTarget'];
        }
        get ['aspectRatio']() {
            var _0x222f7d = _0x5659be;
            if (this[_0x222f7d(0x99d)] === 0x0) {
                var _0x116487 = this[_0x222f7d(0x561)];
                return _0x116487[_0x222f7d(0x300)] / _0x116487[_0x222f7d(0x301)];
            }
            return this[_0x222f7d(0x99d)];
        }
        set [_0x5659be(0x8dd)](_0x58b895) {
            var _0x9aa3b8 = _0x5659be;
            if (_0x58b895 < 0x0)
                throw new Error(_0x9aa3b8(0x9a6));
            this[_0x9aa3b8(0x99d)] = _0x58b895, this[_0x9aa3b8(0x8e9)]();
        }
        get ['viewport']() {
            var _0x3606b2 = _0x5659be;
            if (this[_0x3606b2(0x995)])
                this['_calculationViewport'](this[_0x3606b2(0x99b)], this[_0x3606b2(0x995)][_0x3606b2(0x300)], this[_0x3606b2(0x995)]['height']);
            else
                this[_0x3606b2(0x9a7)](this[_0x3606b2(0x99b)], _0x51310c['clientWidth'], _0x51310c[_0x3606b2(0x562)]);
            return this[_0x3606b2(0x99a)];
        }
        set ['viewport'](_0x5e2350) {
            var _0x13ff2 = _0x5659be, _0x26e71b, _0x3b6643;
            this[_0x13ff2(0x995)] ? (_0x26e71b = this[_0x13ff2(0x995)][_0x13ff2(0x300)], _0x3b6643 = this[_0x13ff2(0x995)][_0x13ff2(0x301)]) : (_0x26e71b = _0x51310c[_0x13ff2(0x9a8)], _0x3b6643 = _0x51310c[_0x13ff2(0x562)]), this[_0x13ff2(0x99b)]['x'] = _0x5e2350['x'] / _0x26e71b, this['_normalizedViewport']['y'] = _0x5e2350['y'] / _0x3b6643, this['_normalizedViewport'][_0x13ff2(0x300)] = _0x5e2350[_0x13ff2(0x300)] / _0x26e71b, this['_normalizedViewport'][_0x13ff2(0x301)] = _0x5e2350[_0x13ff2(0x301)] / _0x3b6643, this[_0x13ff2(0x9a7)](this[_0x13ff2(0x99b)], _0x26e71b, _0x3b6643), this[_0x13ff2(0x8e9)]();
        }
        get [_0x5659be(0x9a9)]() {
            var _0x1a8fd4 = _0x5659be;
            return this[_0x1a8fd4(0x99b)];
        }
        set [_0x5659be(0x9a9)](_0x47d8cd) {
            var _0x29d6db = _0x5659be, _0xb3eacc, _0x2d4071;
            this[_0x29d6db(0x995)] ? (_0xb3eacc = this[_0x29d6db(0x995)][_0x29d6db(0x300)], _0x2d4071 = this['_offScreenRenderTexture']['height']) : (_0xb3eacc = _0x51310c[_0x29d6db(0x9a8)], _0x2d4071 = _0x51310c[_0x29d6db(0x562)]);
            if (this[_0x29d6db(0x99b)] !== _0x47d8cd)
                _0x47d8cd[_0x29d6db(0x1f0)](this[_0x29d6db(0x99b)]);
            this['_calculationViewport'](_0x47d8cd, _0xb3eacc, _0x2d4071), this[_0x29d6db(0x8e9)]();
        }
        get [_0x5659be(0x85d)]() {
            var _0xa4c15f = _0x5659be;
            if (this[_0xa4c15f(0x98f)]) {
                var _0x2fa34d = this['transform'][_0xa4c15f(0x585)](), _0x12e6d3 = _0x2fa34d['x'], _0x2b7016 = _0x2fa34d['y'], _0xe76e4c = _0x2fa34d['z'], _0x4d6693 = this[_0xa4c15f(0x999)][_0xa4c15f(0x1f6)];
                this[_0xa4c15f(0x3cc)][_0xa4c15f(0x3ce)][_0xa4c15f(0x1f0)](this['_viewMatrix']), _0x4d6693[0x0] /= _0x12e6d3, _0x4d6693[0x1] /= _0x12e6d3, _0x4d6693[0x2] /= _0x12e6d3, _0x4d6693[0x4] /= _0x2b7016, _0x4d6693[0x5] /= _0x2b7016, _0x4d6693[0x6] /= _0x2b7016, _0x4d6693[0x8] /= _0xe76e4c, _0x4d6693[0x9] /= _0xe76e4c, _0x4d6693[0xa] /= _0xe76e4c, this[_0xa4c15f(0x999)][_0xa4c15f(0x274)](this[_0xa4c15f(0x999)]), this['_updateViewMatrix'] = ![];
            }
            return this[_0xa4c15f(0x999)];
        }
        get [_0x5659be(0x8e0)]() {
            return this['_projectionMatrix'];
        }
        set [_0x5659be(0x8e0)](_0xdbd72f) {
            var _0x15df3c = _0x5659be;
            this[_0x15df3c(0x9aa)] = _0xdbd72f, this['_useUserProjectionMatrix'] = !![];
        }
        get [_0x5659be(0x5dc)]() {
            var _0x205fbd = _0x5659be;
            return _0x3ed76a[_0x205fbd(0x202)](this[_0x205fbd(0x8e0)], this[_0x205fbd(0x85d)], this[_0x205fbd(0x9ab)]), this[_0x205fbd(0x9ab)];
        }
        get ['boundFrustum']() {
            var _0x119b0b = _0x5659be;
            return this[_0x119b0b(0x99e)][_0x119b0b(0x8ae)] = this['projectionViewMatrix'], this[_0x119b0b(0x99e)];
        }
        get ['renderTarget']() {
            return this['_offScreenRenderTexture'];
        }
        set [_0x5659be(0x9a1)](_0x596b57) {
            var _0x5ebcfe = _0x5659be, _0x4be2bf = this[_0x5ebcfe(0x995)];
            _0x4be2bf !== _0x596b57 && (_0x4be2bf && (_0x4be2bf[_0x5ebcfe(0x3e0)] = ![]), _0x596b57 && (_0x596b57['_isCameraTarget'] = !![]), this[_0x5ebcfe(0x995)] = _0x596b57, this[_0x5ebcfe(0x8e9)]());
        }
        get [_0x5659be(0x9ac)]() {
            return this['_postProcess'];
        }
        set [_0x5659be(0x9ac)](_0x328768) {
            var _0x2f945e = _0x5659be;
            this['_postProcess'] = _0x328768;
            if (!_0x328768)
                return;
            _0x328768 && _0x328768[_0x2f945e(0x652)](this);
        }
        get [_0x5659be(0x9ad)]() {
            var _0x1ff169 = _0x5659be;
            return this[_0x1ff169(0x991)];
        }
        set ['enableHDR'](_0x154205) {
            var _0x4e998d = _0x5659be;
            if (_0x154205 && !_0x218b83[_0x4e998d(0x953)][_0x4e998d(0x954)](_0x218b83['RenderTextureFormat'][_0x4e998d(0x303)])) {
                console[_0x4e998d(0x24e)](_0x4e998d(0x9ae));
                return;
            }
            this[_0x4e998d(0x991)] = _0x154205;
        }
        get [_0x5659be(0x9af)]() {
            return this['_needBuiltInRenderTexture'];
        }
        set [_0x5659be(0x9af)](_0x52b810) {
            var _0x43d857 = _0x5659be;
            this[_0x43d857(0x994)] = _0x52b810;
        }
        get [_0x5659be(0x9b0)]() {
            var _0x4907ec = _0x5659be;
            return this[_0x4907ec(0x9b1)];
        }
        set [_0x5659be(0x9b0)](_0x3af43d) {
            var _0x59c968 = _0x5659be;
            this[_0x59c968(0x9b1)] = _0x3af43d;
        }
        [_0x5659be(0x9a7)](_0x345e41, _0x4dd1e6, _0x4a2613) {
            var _0x2efbd5 = _0x5659be, _0x11ac59 = _0x345e41['x'] * _0x4dd1e6, _0x5d0eed = _0x345e41['y'] * _0x4a2613, _0x2d79a7 = _0x11ac59 + Math['max'](_0x345e41[_0x2efbd5(0x300)] * _0x4dd1e6, 0x0), _0x2b3b2f = _0x5d0eed + Math[_0x2efbd5(0x205)](_0x345e41[_0x2efbd5(0x301)] * _0x4a2613, 0x0), _0x47a39e = Math[_0x2efbd5(0x83b)](_0x11ac59), _0x2f64e4 = Math[_0x2efbd5(0x83b)](_0x5d0eed), _0x38b149 = Math['floor'](_0x2d79a7), _0x2b712e = Math[_0x2efbd5(0x241)](_0x2b3b2f), _0x196f82 = _0x47a39e - _0x11ac59 >= 0.5 ? Math['floor'](_0x11ac59) : _0x47a39e, _0x43638f = _0x2f64e4 - _0x5d0eed >= 0.5 ? Math[_0x2efbd5(0x241)](_0x5d0eed) : _0x2f64e4, _0x4bde0d = _0x2d79a7 - _0x38b149 >= 0.5 ? Math['ceil'](_0x2d79a7) : _0x38b149, _0x2faff2 = _0x2b3b2f - _0x2b712e >= 0.5 ? Math[_0x2efbd5(0x83b)](_0x2b3b2f) : _0x2b712e;
            this['_viewport']['x'] = _0x196f82, this['_viewport']['y'] = _0x43638f, this[_0x2efbd5(0x99a)]['width'] = _0x4bde0d - _0x196f82, this[_0x2efbd5(0x99a)][_0x2efbd5(0x301)] = _0x2faff2 - _0x43638f;
        }
        [_0x5659be(0x8e9)]() {
            var _0x4d0898 = _0x5659be;
            if (!this['_useUserProjectionMatrix']) {
                if (this[_0x4d0898(0x8e6)]) {
                    var _0x3b4c50 = this[_0x4d0898(0x862)] * 0.5, _0x444e4a = _0x3b4c50 * this['aspectRatio'];
                    _0x3ed76a['createOrthoOffCenter'](-_0x444e4a, _0x444e4a, -_0x3b4c50, _0x3b4c50, this[_0x4d0898(0x85b)], this[_0x4d0898(0x85c)], this[_0x4d0898(0x9aa)]);
                } else
                    _0x3ed76a[_0x4d0898(0x47b)](3.1416 * this['fieldOfView'] / 0xb4, this[_0x4d0898(0x8dd)], this[_0x4d0898(0x85b)], this[_0x4d0898(0x85c)], this[_0x4d0898(0x9aa)]);
            }
        }
        [_0x5659be(0x832)](_0x2feb93) {
            var _0x408af6 = _0x5659be;
            return (Math[_0x408af6(0x2ef)](0x2, _0x2feb93) & this[_0x408af6(0x811)]) != 0x0;
        }
        [_0x5659be(0x9a0)](_0x43e400) {
            var _0x47e571 = _0x5659be;
            _0x43e400 &= _0x20d0f1[_0x47e571(0x584)], _0x43e400 && (this[_0x47e571(0x98f)] = !![]);
        }
        [_0x5659be(0x318)](_0x3db65f, _0x5df1b1) {
            var _0x1e26e5 = _0x5659be;
            super[_0x1e26e5(0x318)](_0x3db65f, _0x5df1b1);
            var _0x28dd81 = _0x3db65f[_0x1e26e5(0x998)];
            _0x28dd81 !== undefined && (this['clearFlag'] = _0x28dd81);
            var _0x1f15fc = _0x3db65f[_0x1e26e5(0x561)];
            this[_0x1e26e5(0x9a9)] = new _0x2a99cf(_0x1f15fc[0x0], _0x1f15fc[0x1], _0x1f15fc[0x2], _0x1f15fc[0x3]);
            var _0x57c896 = _0x3db65f[_0x1e26e5(0x9ad)];
            _0x57c896 !== undefined && (this[_0x1e26e5(0x9ad)] = _0x57c896);
        }
        [_0x5659be(0x1f4)]() {
            var _0x1ad0d9 = _0x5659be;
            let _0x52924e = super[_0x1ad0d9(0x1f4)]();
            return _0x52924e['clearFlag'] = this[_0x1ad0d9(0x998)], _0x52924e[_0x1ad0d9(0x561)] = this['viewport'], this[_0x1ad0d9(0x9a9)][_0x1ad0d9(0x1f0)](_0x52924e[_0x1ad0d9(0x9a9)]), _0x52924e[_0x1ad0d9(0x9ad)] = this['enableHDR'], _0x52924e[_0x1ad0d9(0x85c)] = this[_0x1ad0d9(0x85c)], _0x52924e[_0x1ad0d9(0x85b)] = this[_0x1ad0d9(0x85b)], _0x52924e[_0x1ad0d9(0x8dc)] = this[_0x1ad0d9(0x8dc)], _0x52924e[_0x1ad0d9(0x8db)] = this['orthographic'], _0x52924e;
        }
        [_0x5659be(0x657)]() {
            var _0x499c93 = _0x5659be;
            if (this[_0x499c93(0x995)])
                return this['_offScreenRenderTexture']['width'];
            else
                return _0x51310c[_0x499c93(0x9a8)];
        }
        [_0x5659be(0x658)]() {
            var _0x3a8777 = _0x5659be;
            if (this[_0x3a8777(0x995)])
                return this[_0x3a8777(0x995)][_0x3a8777(0x301)];
            else
                return _0x51310c['clientHeight'];
        }
        [_0x5659be(0x9b2)]() {
            var _0x567e0e = _0x5659be;
            return this[_0x567e0e(0x55f)] || this[_0x567e0e(0x995)];
        }
        [_0x5659be(0x9a2)]() {
            var _0x2ecb1f = _0x5659be;
            return this[_0x2ecb1f(0x990)] && this[_0x2ecb1f(0x990)][_0x2ecb1f(0x650)] || this[_0x2ecb1f(0x991)] || this[_0x2ecb1f(0x994)] ? !![] : ![];
        }
        [_0x5659be(0x9a3)]() {
            var _0x326f17 = _0x5659be;
            if (this['_enableHDR'])
                return _0x218b83['RenderTextureFormat'][_0x326f17(0x303)];
            else
                return _0x218b83[_0x326f17(0x302)][_0x326f17(0x2c7)];
        }
        ['_prepareCameraToRender']() {
            var _0x335361 = _0x5659be;
            super[_0x335361(0x9b3)]();
            var _0x3dd943 = this[_0x335361(0x561)];
            this[_0x335361(0x992)]['setValue'](_0x3dd943['x'], _0x3dd943['y'], _0x3dd943['width'], _0x3dd943[_0x335361(0x301)]), this[_0x335361(0x993)][_0x335361(0x1fa)](this[_0x335361(0x8e7)], this[_0x335361(0x8ea)], _0x51310c[_0x335361(0x425)][_0x335361(0x3d7)] ? -0x1 : 0x1, 0x1 / this[_0x335361(0x85c)]), this['_shaderValues']['setVector'](_0x3c0ef2['VIEWPORT'], this[_0x335361(0x992)]), this[_0x335361(0x4e0)]['setVector'](_0x3c0ef2[_0x335361(0x909)], this[_0x335361(0x993)]);
        }
        ['_applyViewProject'](_0x2f017b, _0x289977, _0x2b6b49) {
            var _0x346d46 = _0x5659be, _0x2c9b1f, _0x3e1491 = this[_0x346d46(0x4e0)];
            _0x2f017b['invertY'] ? (_0x3ed76a['multiply'](_0x3c0ef2['_invertYScaleMatrix'], _0x2b6b49, _0x3c0ef2['_invertYProjectionMatrix']), _0x3ed76a[_0x346d46(0x202)](_0x3c0ef2[_0x346d46(0x916)], _0x289977, _0x3c0ef2[_0x346d46(0x917)]), _0x2b6b49 = _0x3c0ef2['_invertYProjectionMatrix'], _0x2c9b1f = _0x3c0ef2[_0x346d46(0x917)]) : (_0x3ed76a[_0x346d46(0x202)](_0x2b6b49, _0x289977, this[_0x346d46(0x9ab)]), _0x2c9b1f = this[_0x346d46(0x9ab)]), _0x2f017b['viewMatrix'] = _0x289977, _0x2f017b['projectionMatrix'] = _0x2b6b49, _0x2f017b[_0x346d46(0x5dc)] = _0x2c9b1f, _0x3e1491[_0x346d46(0x4a0)](_0x3c0ef2[_0x346d46(0x8ff)], _0x289977), _0x3e1491['setMatrix4x4'](_0x3c0ef2[_0x346d46(0x901)], _0x2b6b49), _0x3e1491['setMatrix4x4'](_0x3c0ef2[_0x346d46(0x903)], _0x2c9b1f);
        }
        [_0x5659be(0x9b4)]() {
            var _0x331b2f = _0x5659be, _0x5d0369 = this['fieldOfView'], _0x28007 = this[_0x331b2f(0x8dd)];
            if (this['_clusterPlaneCacheFlag']['x'] !== _0x5d0369 || this[_0x331b2f(0x997)]['y'] !== _0x28007) {
                var _0x376be2 = _0x528624[_0x331b2f(0x243)][_0x331b2f(0x250)], _0x2fcaae = _0x376be2['x'], _0x5ad21b = _0x376be2['y'], _0x423edf = _0x2fcaae + 0x1, _0x28858b = _0x5ad21b + 0x1, _0x510e04 = this[_0x331b2f(0x863)], _0x365f0c = this['_clusterYPlanes'];
                if (!_0x510e04) {
                    _0x510e04 = this[_0x331b2f(0x863)] = new Array(_0x423edf), _0x365f0c = this[_0x331b2f(0x864)] = new Array(_0x28858b);
                    for (var _0x3e4457 = 0x0; _0x3e4457 < _0x423edf; _0x3e4457++)
                        _0x510e04[_0x3e4457] = new _0x3f70c5();
                    for (var _0x3e4457 = 0x0; _0x3e4457 < _0x28858b; _0x3e4457++)
                        _0x365f0c[_0x3e4457] = new _0x3f70c5();
                }
                var _0x28680d = Math['tan'](this['fieldOfView'] / 0x2 * Math['PI'] / 0xb4), _0x36452e = this[_0x331b2f(0x8dd)] * _0x28680d, _0x18e072 = 0x2 * _0x28680d / _0x2fcaae, _0x34a770 = 0x2 * _0x36452e / _0x5ad21b;
                for (var _0x3e4457 = 0x0; _0x3e4457 < _0x423edf; _0x3e4457++) {
                    var _0x51aa60 = -_0x36452e + _0x34a770 * _0x3e4457, _0x41071f = Math['sqrt'](0x1 + _0x51aa60 * _0x51aa60), _0x4efadf = 0x1 / _0x41071f, _0x35ff8c = _0x510e04[_0x3e4457];
                    _0x35ff8c['setValue'](_0x4efadf, 0x0, -_0x51aa60 * _0x4efadf);
                }
                for (var _0x3e4457 = 0x0; _0x3e4457 < _0x28858b; _0x3e4457++) {
                    var _0x51aa60 = _0x28680d - _0x18e072 * _0x3e4457, _0x41071f = Math[_0x331b2f(0x1ea)](0x1 + _0x51aa60 * _0x51aa60), _0x29032b = -0x1 / _0x41071f, _0x5a0393 = _0x365f0c[_0x3e4457];
                    _0x5a0393[_0x331b2f(0x1fa)](0x0, _0x29032b, -_0x51aa60 * _0x29032b);
                }
                this['_clusterPlaneCacheFlag']['x'] = _0x5d0369, this['_clusterPlaneCacheFlag']['y'] = _0x28007;
            }
        }
        [_0x5659be(0x9b5)](_0x27063a, _0x3e1de8) {
            var _0x49ed03 = _0x5659be;
            _0x218b83[_0x49ed03(0x9b6)][_0x49ed03(0x9b7)](_0x218b83['PerformancePlugin'][_0x49ed03(0x9b8)]);
            var _0x5c614e = _0x218b83[_0x49ed03(0x2f3)][_0x49ed03(0x2f4)], _0xb77951 = this[_0x49ed03(0x996)][_0x27063a];
            if (!_0xb77951 || _0xb77951[_0x49ed03(0x1ff)] == 0x0)
                return;
            _0xb77951[_0x49ed03(0x9b9)](function (_0x299f8b) {
                var _0x23a018 = _0x49ed03;
                _0x299f8b[_0x23a018(0x54d)] = _0x3e1de8, _0x299f8b['_apply']();
            }), _0x164148[_0x49ed03(0x3e7)] && _0x164148['currentActive']['_end']();
            if (this['_internalRenderTexture'] || this['_offScreenRenderTexture'])
                this[_0x49ed03(0x9b2)]()[_0x49ed03(0x424)]();
            else
                _0x5c614e['bindFramebuffer'](_0x5c614e['FRAMEBUFFER'], null);
            _0x5c614e[_0x49ed03(0x561)](0x0, 0x0, _0x3e1de8[_0x49ed03(0x561)]['width'], _0x3e1de8['viewport'][_0x49ed03(0x301)]), _0x218b83['PerformancePlugin'][_0x49ed03(0x9ba)](_0x218b83[_0x49ed03(0x9b6)][_0x49ed03(0x9b8)]);
        }
        [_0x5659be(0x9bb)](_0x1d32a2, _0x4494a7) {
            var _0x599a45 = _0x5659be;
            _0x218b83['PerformancePlugin'][_0x599a45(0x9b7)](_0x218b83[_0x599a45(0x9b6)][_0x599a45(0x9bc)]);
            var _0x4362b6, _0x24e6c7 = _0x1d32a2[_0x599a45(0x9bd)], _0x13d443 = _0x24e6c7 && _0x24e6c7[_0x599a45(0x92f)] !== _0x71dec4['ShadowMode'][_0x599a45(0x91b)] && _0x143874[_0x599a45(0x951)]();
            _0x13d443 ? (_0x1d32a2[_0x599a45(0x4e0)][_0x599a45(0x493)](_0x2de530[_0x599a45(0x9be)]), _0x1d32a2[_0x599a45(0x4e0)][_0x599a45(0x62c)](_0x2de530['SHADERDEFINE_SHADOW']), _0x4362b6 = _0x429ec3[_0x599a45(0x21f)][_0x599a45(0x9bf)], _0x4362b6[_0x599a45(0x85a)](this, _0x24e6c7, _0x429ec3['ShadowLightType'][_0x599a45(0x9c0)]), _0x4362b6[_0x599a45(0x506)](_0x4494a7, _0x1d32a2, _0x429ec3['ShadowLightType']['DirectionLight'])) : _0x1d32a2[_0x599a45(0x4e0)][_0x599a45(0x493)](_0x2de530[_0x599a45(0x9c1)]);
            var _0x58e205 = _0x1d32a2[_0x599a45(0x9c2)], _0x3ff81a = _0x58e205 && _0x58e205[_0x599a45(0x92f)] !== _0x71dec4[_0x599a45(0x91f)][_0x599a45(0x91b)] && _0x143874[_0x599a45(0x951)]();
            _0x3ff81a ? (_0x1d32a2['_shaderValues']['removeDefine'](_0x2de530[_0x599a45(0x9c1)]), _0x1d32a2[_0x599a45(0x4e0)][_0x599a45(0x62c)](_0x2de530[_0x599a45(0x9be)]), _0x4362b6 = _0x429ec3[_0x599a45(0x21f)][_0x599a45(0x9bf)], _0x4362b6[_0x599a45(0x85a)](this, _0x58e205, _0x429ec3[_0x599a45(0x224)][_0x599a45(0x9c3)]), _0x4362b6[_0x599a45(0x506)](_0x4494a7, _0x1d32a2, _0x429ec3[_0x599a45(0x224)][_0x599a45(0x9c3)])) : _0x1d32a2[_0x599a45(0x4e0)][_0x599a45(0x493)](_0x2de530[_0x599a45(0x9be)]);
            if (_0x13d443)
                _0x1d32a2['_shaderValues'][_0x599a45(0x62c)](_0x2de530[_0x599a45(0x9c1)]);
            if (_0x3ff81a)
                _0x1d32a2['_shaderValues'][_0x599a45(0x62c)](_0x2de530[_0x599a45(0x9be)]);
            return _0x218b83[_0x599a45(0x9b6)][_0x599a45(0x9ba)](_0x218b83[_0x599a45(0x9b6)][_0x599a45(0x9bc)]), _0x13d443 || _0x3ff81a;
        }
        [_0x5659be(0x9a4)](_0x3b7c1d, _0x99c312, _0xe8abc2, _0x379a73) {
            var _0x29060b = _0x5659be;
            _0x3b7c1d[_0x29060b(0x645)] = this, _0x3b7c1d[_0x29060b(0x5db)] = this[_0x29060b(0x4e0)], _0x428ec4[_0x29060b(0x37b)]++, _0x99c312[_0x29060b(0x9c4)]();
            var _0x56702a = _0x218b83[_0x29060b(0x2f3)][_0x29060b(0x2f4)];
            if (_0xe8abc2 && !this[_0x29060b(0x995)] && (this[_0x29060b(0x998)] == _0x71dec4['CameraClearFlags'][_0x29060b(0x986)] || this[_0x29060b(0x998)] == _0x71dec4[_0x29060b(0x988)][_0x29060b(0x987)])) {
                if (this[_0x29060b(0x991)]) {
                    var _0x15ad09 = _0x164148['createFromPool'](_0x379a73[_0x29060b(0x300)], _0x379a73[_0x29060b(0x301)], _0x218b83[_0x29060b(0x302)][_0x29060b(0x2c7)], _0x218b83[_0x29060b(0x3db)][_0x29060b(0x3dc)]);
                    _0x15ad09[_0x29060b(0x2ce)] = _0x218b83[_0x29060b(0x2f7)]['Bilinear'], _0x218b83['WebGLContext'][_0x29060b(0x3ff)](_0x56702a, _0x56702a[_0x29060b(0x3e2)], _0x15ad09[_0x29060b(0x4d2)]()), _0x56702a[_0x29060b(0x9c5)](_0x56702a[_0x29060b(0x3e2)], 0x0, 0x0, 0x0, _0x379a73['x'], _0x51310c['clientHeight'] - (_0x379a73['y'] + _0x379a73[_0x29060b(0x301)]), _0x379a73[_0x29060b(0x300)], _0x379a73['height']);
                    var _0x56bbcb = _0x140fd9[_0x29060b(0x31e)](_0x15ad09, this['_internalRenderTexture']);
                    _0x56bbcb[_0x29060b(0x54b)](), _0x56bbcb['recover'](), _0x164148[_0x29060b(0x65a)](_0x15ad09);
                } else
                    _0x218b83[_0x29060b(0x3fe)][_0x29060b(0x3ff)](_0x56702a, _0x56702a['TEXTURE_2D'], this[_0x29060b(0x55f)][_0x29060b(0x4d2)]()), _0x56702a[_0x29060b(0x9c5)](_0x56702a[_0x29060b(0x3e2)], 0x0, 0x0, 0x0, _0x379a73['x'], _0x51310c['clientHeight'] - (_0x379a73['y'] + _0x379a73[_0x29060b(0x301)]), _0x379a73['width'], _0x379a73['height']);
            }
        }
        [_0x5659be(0x9c6)](_0x1ddbea, _0x496430, _0x2a5f1e, _0x1917ba, _0x12a70e, _0x415895) {
            var _0x897f9f = _0x5659be, _0x53cda3 = _0x218b83[_0x897f9f(0x2f3)][_0x897f9f(0x2f4)], _0x583c43 = this[_0x897f9f(0x9b2)]();
            _0x1ddbea[_0x897f9f(0x561)] = _0x496430, this[_0x897f9f(0x9b3)]();
            var _0x2cae98 = _0x528624[_0x897f9f(0x243)]['_multiLighting'];
            _0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9b7)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9c7)]), _0x2cae98 && _0x43fad1[_0x897f9f(0x2f4)][_0x897f9f(0x85a)](this, _0x2a5f1e), _0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9ba)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9c7)]), _0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9b7)](_0x218b83[_0x897f9f(0x9b6)]['PERFORMANCE_LAYA_3D_RENDER_CULLING']), _0x2a5f1e[_0x897f9f(0x9c8)](_0x1ddbea, this, _0x1917ba, _0x12a70e), _0x218b83['PerformancePlugin'][_0x897f9f(0x9ba)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9c9)]);
            this[_0x897f9f(0x9b0)] != 0x0 && (this[_0x897f9f(0x8de)](_0x1ddbea, this[_0x897f9f(0x85d)], this[_0x897f9f(0x9aa)]), this[_0x897f9f(0x9ca)](_0x1ddbea));
            _0x583c43 && _0x583c43[_0x897f9f(0x424)](), this[_0x897f9f(0x8de)](_0x1ddbea, this[_0x897f9f(0x85d)], this[_0x897f9f(0x9aa)]), _0x2a5f1e[_0x897f9f(0x9cb)](_0x53cda3, _0x1ddbea), this['_applyCommandBuffer'](_0x71dec4[_0x897f9f(0x98e)][_0x897f9f(0x989)], _0x1ddbea), _0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9b7)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9cc)]), _0x2a5f1e[_0x897f9f(0x9cd)](_0x1ddbea, _0x429ec3[_0x897f9f(0x21f)][_0x897f9f(0x9ce)]), _0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9ba)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9cc)]), this[_0x897f9f(0x9b5)](_0x71dec4['CameraEventFlags'][_0x897f9f(0x98a)], _0x1ddbea), _0x2a5f1e['_renderScene'](_0x1ddbea, _0x429ec3[_0x897f9f(0x21f)]['SCENERENDERFLAG_SKYBOX']), this[_0x897f9f(0x9b5)](_0x71dec4[_0x897f9f(0x98e)]['BeforeTransparent'], _0x1ddbea), _0x218b83[_0x897f9f(0x9b6)]['begainSample'](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9cf)]), _0x2a5f1e[_0x897f9f(0x9cd)](_0x1ddbea, _0x429ec3[_0x897f9f(0x21f)][_0x897f9f(0x9d0)]), _0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9ba)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9cf)]), _0x2a5f1e[_0x897f9f(0x9d1)](), this[_0x897f9f(0x9b5)](_0x71dec4[_0x897f9f(0x98e)][_0x897f9f(0x98c)], _0x1ddbea), _0x583c43 && _0x583c43[_0x897f9f(0x426)]();
            if (_0x415895) {
                if (this[_0x897f9f(0x990)] && this[_0x897f9f(0x990)][_0x897f9f(0x650)])
                    _0x218b83['PerformancePlugin']['begainSample'](_0x218b83[_0x897f9f(0x9b6)]['PERFORMANCE_LAYA_3D_RENDER_POSTPROCESS']), this[_0x897f9f(0x990)][_0x897f9f(0x5e6)](), this[_0x897f9f(0x990)][_0x897f9f(0x9d2)](), _0x218b83['PerformancePlugin'][_0x897f9f(0x9ba)](_0x218b83[_0x897f9f(0x9b6)][_0x897f9f(0x9d3)]);
                else {
                    if (this['_enableHDR'] || this[_0x897f9f(0x994)]) {
                        var _0x2edc68 = this['_getCanvasWidth'](), _0x8a7627 = this[_0x897f9f(0x658)]();
                        this['_screenOffsetScale'][_0x897f9f(0x1fa)](_0x496430['x'] / _0x2edc68, _0x496430['y'] / _0x8a7627, _0x496430[_0x897f9f(0x300)] / _0x2edc68, _0x496430[_0x897f9f(0x301)] / _0x8a7627), this['_internalCommandBuffer'][_0x897f9f(0x560)] = this, this[_0x897f9f(0x9d4)]['blitScreenQuad'](this[_0x897f9f(0x55f)], this[_0x897f9f(0x995)] ? this[_0x897f9f(0x995)] : null, this['_screenOffsetScale'], null, null, 0x0, !![]), this['_internalCommandBuffer'][_0x897f9f(0x632)](), this['_internalCommandBuffer'][_0x897f9f(0x496)]();
                    }
                }
                _0x164148['recoverToPool'](this[_0x897f9f(0x55f)]);
            }
            this['_applyCommandBuffer'](_0x71dec4[_0x897f9f(0x98e)]['AfterEveryThing'], _0x1ddbea);
        }
        ['_renderDepthMode'](_0x23a32f) {
            var _0x9fada2 = _0x5659be;
            _0x218b83['PerformancePlugin'][_0x9fada2(0x9b7)](_0x218b83['PerformancePlugin']['PERFORMANCE_LAYA_3D_RENDER_RENDERDEPTHMDOE']);
            var _0x28da06 = this['_depthTextureMode'];
            (_0x28da06 & _0x71dec4['DepthTextureMode'][_0x9fada2(0x3f1)]) != 0x0 && (_0x428ec4[_0x9fada2(0x9d5)]['update'](this, _0x71dec4[_0x9fada2(0x971)][_0x9fada2(0x3f1)]), _0x428ec4['depthPass'][_0x9fada2(0x506)](_0x23a32f, _0x71dec4[_0x9fada2(0x971)][_0x9fada2(0x3f1)])), (_0x28da06 & _0x71dec4[_0x9fada2(0x971)]['DepthNormals']) != 0x0 && (_0x428ec4[_0x9fada2(0x9d5)][_0x9fada2(0x85a)](this, _0x71dec4['DepthTextureMode'][_0x9fada2(0x96f)]), _0x428ec4['depthPass']['render'](_0x23a32f, _0x71dec4[_0x9fada2(0x971)][_0x9fada2(0x96f)])), _0x218b83['PerformancePlugin'][_0x9fada2(0x9ba)](_0x218b83[_0x9fada2(0x9b6)][_0x9fada2(0x9d6)]);
        }
        get [_0x5659be(0x974)]() {
            var _0x4fe3d3 = _0x5659be;
            return this[_0x4fe3d3(0x975)];
        }
        set ['depthTexture'](_0x59b7dd) {
            var _0xd2be6b = _0x5659be;
            this[_0xd2be6b(0x975)] = _0x59b7dd;
        }
        get [_0x5659be(0x976)]() {
            return this['_depthNormalsTexture'];
        }
        set [_0x5659be(0x976)](_0xf4f733) {
            var _0x4bc3f6 = _0x5659be;
            this[_0x4bc3f6(0x977)] = _0xf4f733;
        }
        ['_aftRenderMainPass'](_0x550ccd) {
            var _0x545f44 = _0x5659be;
            if (_0x550ccd)
                _0x429ec3['Scene3D'][_0x545f44(0x9bf)]['cleanUp']();
            _0x428ec4[_0x545f44(0x9d5)][_0x545f44(0x980)]();
        }
        [_0x5659be(0x506)](_0x45f8ae = null, _0x4d34ad = null) {
            var _0x103581 = _0x5659be;
            if (!this[_0x103581(0x937)])
                return;
            var _0x472273 = this[_0x103581(0x561)], _0xcf7019 = this[_0x103581(0x9a2)](), _0x487e65 = _0x51310c[_0x103581(0x425)], _0x5528dc = _0x487e65[_0x103581(0x5da)] = this[_0x103581(0x3a6)];
            _0x487e65['pipelineMode'] = _0x487e65[_0x103581(0x3d8)];
            _0xcf7019 ? (this[_0x103581(0x55f)] = _0x164148[_0x103581(0x3e9)](_0x472273[_0x103581(0x300)], _0x472273[_0x103581(0x301)], this['_getRenderTextureFormat'](), _0x218b83[_0x103581(0x3db)][_0x103581(0x3dc)], 0x4), this[_0x103581(0x55f)][_0x103581(0x2ce)] = _0x218b83['FilterMode'][_0x103581(0x958)]) : this[_0x103581(0x55f)] = null;
            var _0x35d820 = this[_0x103581(0x9bb)](_0x5528dc, _0x487e65);
            this[_0x103581(0x9a4)](_0x487e65, _0x5528dc, _0xcf7019, _0x472273), this[_0x103581(0x9c6)](_0x487e65, _0x472273, _0x5528dc, _0x45f8ae, _0x4d34ad, _0xcf7019), this[_0x103581(0x9a5)](_0x35d820);
        }
        [_0x5659be(0x9d7)](_0xdd853d, _0x3d1d5f) {
            var _0x33dde5 = _0x5659be;
            this['_rayViewport']['x'] = this[_0x33dde5(0x561)]['x'], this[_0x33dde5(0x99c)]['y'] = this['viewport']['y'], this[_0x33dde5(0x99c)]['width'] = _0x218b83[_0x33dde5(0x685)]['stage'][_0x33dde5(0x3e3)], this[_0x33dde5(0x99c)][_0x33dde5(0x301)] = _0x218b83['Laya'][_0x33dde5(0x8fb)]['_height'], _0x333c68[_0x33dde5(0x9d8)](_0xdd853d, this[_0x33dde5(0x99c)], this[_0x33dde5(0x9aa)], this['viewMatrix'], null, _0x3d1d5f);
        }
        ['normalizedViewportPointToRay'](_0x2ab42d, _0x53b7b0) {
            var _0x483e28 = _0x5659be, _0x1f543c = _0x428ec4[_0x483e28(0x9d9)], _0x91ed98 = this[_0x483e28(0x561)];
            _0x1f543c['x'] = _0x2ab42d['x'] * _0x91ed98['width'], _0x1f543c['y'] = _0x2ab42d['y'] * _0x91ed98[_0x483e28(0x301)], _0x333c68[_0x483e28(0x9d8)](_0x1f543c, this[_0x483e28(0x561)], this['_projectionMatrix'], this[_0x483e28(0x85d)], null, _0x53b7b0);
        }
        [_0x5659be(0x9da)](_0x1a2728, _0x2efb41) {
            var _0x4f9cbd = _0x5659be;
            _0x3ed76a['multiply'](this[_0x4f9cbd(0x9aa)], this[_0x4f9cbd(0x999)], this[_0x4f9cbd(0x9ab)]), this['viewport'][_0x4f9cbd(0x8c0)](_0x1a2728, this['_projectionViewMatrix'], _0x2efb41), _0x2efb41['x'] = _0x2efb41['x'] / _0x218b83[_0x4f9cbd(0x685)][_0x4f9cbd(0x8fb)]['clientScaleX'], _0x2efb41['y'] = _0x2efb41['y'] / _0x218b83[_0x4f9cbd(0x685)]['stage'][_0x4f9cbd(0x9db)];
        }
        [_0x5659be(0x9dc)](_0x587394, _0x3a1bfc) {
            var _0x1deaea = _0x5659be;
            _0x3ed76a[_0x1deaea(0x202)](this[_0x1deaea(0x9aa)], this['_viewMatrix'], this[_0x1deaea(0x9ab)]), this[_0x1deaea(0x9a9)][_0x1deaea(0x8c0)](_0x587394, this[_0x1deaea(0x9ab)], _0x3a1bfc), _0x3a1bfc['x'] = _0x3a1bfc['x'] / _0x218b83['Laya'][_0x1deaea(0x8fb)][_0x1deaea(0x9dd)], _0x3a1bfc['y'] = _0x3a1bfc['y'] / _0x218b83[_0x1deaea(0x685)][_0x1deaea(0x8fb)][_0x1deaea(0x9db)];
        }
        [_0x5659be(0x9de)](_0x501156, _0x326555) {
            var _0x9f12b7 = _0x5659be;
            if (this[_0x9f12b7(0x8e6)]) {
                var _0x5e13ae = _0x51310c[_0x9f12b7(0x9a8)], _0x4659b6 = _0x51310c[_0x9f12b7(0x562)], _0x2ee72f = this[_0x9f12b7(0x862)] * this[_0x9f12b7(0x8dd)] / _0x5e13ae, _0x59817b = this['orthographicVerticalSize'] / _0x4659b6;
                return _0x326555['x'] = (-_0x5e13ae / 0x2 + _0x501156['x'] * _0x218b83[_0x9f12b7(0x685)][_0x9f12b7(0x8fb)][_0x9f12b7(0x9dd)]) * _0x2ee72f, _0x326555['y'] = (_0x4659b6 / 0x2 - _0x501156['y'] * _0x218b83['Laya']['stage'][_0x9f12b7(0x9db)]) * _0x59817b, _0x326555['z'] = (this[_0x9f12b7(0x85b)] - this[_0x9f12b7(0x85c)]) * (_0x501156['z'] + 0x1) / 0x2 - this[_0x9f12b7(0x85b)], _0x3f70c5[_0x9f12b7(0x20e)](_0x326555, this['transform']['worldMatrix'], _0x326555), !![];
            } else
                return ![];
        }
        [_0x5659be(0x311)](_0x52f9ed = !![]) {
            var _0x1529f2 = _0x5659be;
            this['_offScreenRenderTexture'] = null, this[_0x1529f2(0x3cc)][_0x1529f2(0x8fc)](_0x218b83[_0x1529f2(0x5ab)][_0x1529f2(0x5a7)], this, this[_0x1529f2(0x9a0)]), super[_0x1529f2(0x311)](_0x52f9ed);
        }
        ['addCommandBuffer'](_0x5edf58, _0x18cd70) {
            var _0x5cec3 = _0x5659be, _0x236df8 = this['_cameraEventCommandBuffer'][_0x5edf58];
            if (!_0x236df8)
                _0x236df8 = this['_cameraEventCommandBuffer'][_0x5edf58] = [];
            if (_0x236df8[_0x5cec3(0x384)](_0x18cd70) < 0x0)
                _0x236df8[_0x5cec3(0x298)](_0x18cd70);
            _0x18cd70['_camera'] = this;
        }
        ['removeCommandBuffer'](_0x12540f, _0x4e1b77) {
            var _0x3e37fe = _0x5659be, _0x2ac438 = this[_0x3e37fe(0x996)][_0x12540f];
            if (_0x2ac438) {
                var _0x408a10 = _0x2ac438[_0x3e37fe(0x384)](_0x4e1b77);
                if (_0x408a10 != -0x1)
                    _0x2ac438[_0x3e37fe(0x32c)](_0x408a10, 0x1);
            } else
                throw _0x3e37fe(0x9df);
        }
        [_0x5659be(0x9e0)](_0x278a7b) {
            var _0x2aab57 = _0x5659be;
            if (this['_cameraEventCommandBuffer'][_0x278a7b])
                this[_0x2aab57(0x996)][_0x278a7b]['length'] = 0x0;
        }
        [_0x5659be(0x5d2)]() {
            return new _0x428ec4();
        }
    }
    _0x428ec4[_0x5659be(0x9d9)] = new _0x12bf01(), _0x428ec4[_0x5659be(0x37b)] = 0x0, _0x428ec4[_0x5659be(0x9d5)] = new _0x385f41();
    class _0x3abb9f {
        constructor() {
            var _0x465c2c = _0x5659be;
            this[_0x465c2c(0x9e1)] = [], this[_0x465c2c(0x9e2)] = new _0x711937(), this[_0x465c2c(0x9e3)] = [], this['_touches'] = new _0x5d98a9(), this[_0x465c2c(0x9e4)] = !![], this[_0x465c2c(0x9e5)] = (_0xedcaeb => {
                var _0x4b4116 = _0x465c2c;
                _0xedcaeb['cancelable'] && _0xedcaeb[_0x4b4116(0x9e6)](), this['_eventList'][_0x4b4116(0x298)](_0xedcaeb);
            })[_0x465c2c(0x444)](this);
        }
        ['__init__'](_0x5000dc, _0x3aae1d) {
            var _0x40c75e = _0x5659be;
            this[_0x40c75e(0x3a6)] = _0x3aae1d, _0x40d5e5[_0x40c75e(0x227)] && (_0x3abb9f['_tempHitResult0'] = new _0x218b83[(_0x40c75e(0x9e7))]()), _0x5000dc[_0x40c75e(0x9e8)] = function (_0x20359e) {
                return ![];
            };
        }
        ['_onCanvasEvent'](_0x507872) {
            var _0x2ce324 = _0x5659be;
            _0x507872[_0x2ce324(0x9e9)](_0x2ce324(0x9ea), this[_0x2ce324(0x9e5)]), _0x507872[_0x2ce324(0x9e9)]('mouseup', this[_0x2ce324(0x9e5)], !![]), _0x507872['addEventListener'](_0x2ce324(0x9eb), this[_0x2ce324(0x9e5)], !![]), _0x507872['addEventListener'](_0x2ce324(0x9ec), this[_0x2ce324(0x9e5)]), _0x507872[_0x2ce324(0x9e9)](_0x2ce324(0x9ed), this[_0x2ce324(0x9e5)], !![]), _0x507872[_0x2ce324(0x9e9)]('touchmove', this['_pushEventList'], !![]), _0x507872[_0x2ce324(0x9e9)](_0x2ce324(0x9ee), this[_0x2ce324(0x9e5)], !![]);
        }
        [_0x5659be(0x9ef)](_0xa94a46) {
            var _0x18e958 = _0x5659be;
            _0xa94a46[_0x18e958(0x9f0)](_0x18e958(0x9ea), this[_0x18e958(0x9e5)]), _0xa94a46[_0x18e958(0x9f0)]('mouseup', this['_pushEventList'], !![]), _0xa94a46[_0x18e958(0x9f0)]('mousemove', this[_0x18e958(0x9e5)], !![]), _0xa94a46[_0x18e958(0x9f0)]('touchstart', this['_pushEventList']), _0xa94a46[_0x18e958(0x9f0)](_0x18e958(0x9ed), this[_0x18e958(0x9e5)], !![]), _0xa94a46['removeEventListener'](_0x18e958(0x9f1), this[_0x18e958(0x9e5)], !![]), _0xa94a46[_0x18e958(0x9f0)]('touchcancel', this[_0x18e958(0x9e5)], !![]), this[_0x18e958(0x9e1)][_0x18e958(0x1ff)] = 0x0, this[_0x18e958(0x9f2)]['clear']();
        }
        [_0x5659be(0x9f3)]() {
            var _0x5370b5 = _0x5659be;
            return this['_touches'][_0x5370b5(0x1ff)];
        }
        get [_0x5659be(0x9f4)]() {
            var _0x1816b7 = _0x5659be;
            return this[_0x1816b7(0x9e4)];
        }
        set [_0x5659be(0x9f4)](_0x38aead) {
            var _0xcb5938 = _0x5659be;
            this[_0xcb5938(0x9e4)] = _0x38aead;
        }
        [_0x5659be(0x9f5)](_0x3995ad, _0x34800d) {
            var _0x56f702 = _0x5659be, _0x217e7b = this[_0x56f702(0x9e3)][_0x3995ad];
            if (_0x34800d == 0x0 && _0x217e7b && _0x217e7b[_0x56f702(0x7fe)]() != -0x1)
                return null;
            if (_0x34800d == 0x1 && _0x217e7b && _0x217e7b['_getIndexInList']() == -0x1)
                return null;
            return !_0x217e7b && (_0x217e7b = new _0x38b691(), this[_0x56f702(0x9e3)][_0x3995ad] = _0x217e7b, _0x217e7b[_0x56f702(0x871)] = _0x3995ad), _0x217e7b;
        }
        [_0x5659be(0x9f6)]() {
            var _0x228a54 = _0x5659be, _0x84dacd = this[_0x228a54(0x9e2)], _0x4b95d0 = _0x84dacd[_0x228a54(0x86e)];
            _0x84dacd[_0x228a54(0x9f7)] = _0x4b95d0, _0x84dacd[_0x228a54(0x86d)] = _0x218b83[_0x228a54(0x500)][_0x228a54(0x4da)];
            if (_0x4b95d0) {
                var _0x326661 = _0x4b95d0['_scripts'];
                if (_0x326661) {
                    for (var _0x30c467 = 0x0, _0x1a9316 = _0x326661[_0x228a54(0x1ff)]; _0x30c467 < _0x1a9316; _0x30c467++)
                        _0x326661[_0x30c467]['onMouseDown']();
                }
            }
        }
        [_0x5659be(0x9f8)]() {
            var _0x5746fa = _0x5659be, _0x2a1a39, _0x6294fb, _0x2ae939 = this[_0x5746fa(0x9e2)], _0x3c0db4 = _0x2ae939[_0x5746fa(0x9f7)];
            _0x2ae939['_pressedSprite'] = null, _0x2ae939[_0x5746fa(0x86d)] = -0x1;
            var _0x120350 = _0x2ae939['sprite'];
            if (_0x120350) {
                if (_0x120350 === _0x3c0db4) {
                    var _0x151131 = _0x120350['_scripts'];
                    if (_0x151131) {
                        for (_0x2a1a39 = 0x0, _0x6294fb = _0x151131[_0x5746fa(0x1ff)]; _0x2a1a39 < _0x6294fb; _0x2a1a39++)
                            _0x151131[_0x2a1a39][_0x5746fa(0x9f9)]();
                    }
                }
            }
            if (_0x3c0db4) {
                var _0x2b53ab = _0x3c0db4[_0x5746fa(0x362)];
                if (_0x2b53ab) {
                    for (_0x2a1a39 = 0x0, _0x6294fb = _0x2b53ab['length']; _0x2a1a39 < _0x6294fb; _0x2a1a39++)
                        _0x2b53ab[_0x2a1a39][_0x5746fa(0x9fa)]();
                }
            }
        }
        [_0x5659be(0x9fb)](_0x501314) {
            var _0x2a19d4 = _0x5659be;
            if (!_0x40d5e5[_0x2a19d4(0x227)] && !_0x40d5e5['_cannon'])
                return;
            var _0x2b284b = _0x3abb9f['_tempHitResult0'], _0x4ddf38 = _0x3abb9f[_0x2a19d4(0x9d9)], _0x2085ca = _0x3abb9f['_tempRay0'];
            _0x2b284b[_0x2a19d4(0x9fc)] = ![];
            var _0x566091 = this[_0x2a19d4(0x9e2)][_0x2a19d4(0x86f)], _0x3788da = this[_0x2a19d4(0x9e2)]['mousePositionY'];
            _0x4ddf38['x'] = _0x566091, _0x4ddf38['y'] = _0x3788da;
            for (var _0x351573 = _0x501314[_0x2a19d4(0x1ff)] - 0x1; _0x351573 >= 0x0; _0x351573--) {
                var _0x48a794 = _0x501314[_0x351573], _0x190b87 = _0x48a794[_0x2a19d4(0x561)];
                if (_0x4ddf38['x'] >= _0x190b87['x'] && _0x4ddf38['y'] >= _0x190b87['y'] && _0x4ddf38['x'] <= _0x190b87[_0x2a19d4(0x300)] && _0x4ddf38['y'] <= _0x190b87['height']) {
                    _0x48a794['viewportPointToRay'](_0x4ddf38, _0x2085ca);
                    var _0x49c736 = this['_scene'][_0x2a19d4(0x9fd)][_0x2a19d4(0x9fe)](_0x2085ca, _0x2b284b);
                    if (_0x49c736 || (_0x48a794[_0x2a19d4(0x998)] === _0x71dec4[_0x2a19d4(0x988)][_0x2a19d4(0x984)] || _0x48a794[_0x2a19d4(0x998)] === _0x71dec4['CameraClearFlags'][_0x2a19d4(0x985)]))
                        break;
                }
            }
            var _0x2f78e5 = this[_0x2a19d4(0x9e2)], _0x5b1017 = _0x2f78e5[_0x2a19d4(0x86e)];
            if (_0x2b284b[_0x2a19d4(0x9fc)]) {
                var _0x1bb299 = _0x2b284b[_0x2a19d4(0x9ff)][_0x2a19d4(0x380)];
                _0x2f78e5[_0x2a19d4(0x86e)] = _0x1bb299;
                var _0x10d89c = _0x1bb299[_0x2a19d4(0x362)];
                if (_0x5b1017 !== _0x1bb299) {
                    if (_0x10d89c) {
                        for (var _0x248c72 = 0x0, _0x2f6478 = _0x10d89c[_0x2a19d4(0x1ff)]; _0x248c72 < _0x2f6478; _0x248c72++)
                            _0x10d89c[_0x248c72]['onMouseEnter']();
                    }
                }
            } else
                _0x2f78e5[_0x2a19d4(0x86e)] = null;
            if (_0x5b1017 && _0x5b1017 !== _0x1bb299) {
                var _0xa3b1c6 = _0x5b1017['_scripts'];
                if (_0xa3b1c6) {
                    for (_0x248c72 = 0x0, _0x2f6478 = _0xa3b1c6['length']; _0x248c72 < _0x2f6478; _0x248c72++)
                        _0xa3b1c6[_0x248c72]['onMouseOut']();
                }
            }
        }
        [_0x5659be(0xa00)](_0x59f536, _0x41f7a7) {
            var _0x3292e6 = _0x5659be, _0x62ef90 = 0x0, _0x2e5033 = 0x0, _0x1594fe = this['_touches']['length'];
            for (var _0x2e5a4a = 0x0, _0x18687b = _0x59f536['length']; _0x2e5a4a < _0x18687b; _0x2e5a4a++) {
                var _0x5dd54b = _0x59f536[_0x2e5a4a], _0x3a7328 = _0x5dd54b[_0x3292e6(0x872)];
                if (!this['_multiTouchEnabled'] && this[_0x3292e6(0x9f2)][_0x3292e6(0x1ff)] !== 0x0 && _0x41f7a7 == 0x0)
                    continue;
                var _0x58fcb1 = this[_0x3292e6(0x9f5)](_0x3a7328, _0x41f7a7);
                if (_0x41f7a7 == 0x1 && !_0x58fcb1)
                    continue;
                var _0x20ede9 = this[_0x3292e6(0x9e3)][_0x3a7328][_0x3292e6(0x578)], _0x3c25d6 = _0x3abb9f[_0x3292e6(0xa01)];
                _0x3c25d6[_0x3292e6(0xa02)](_0x5dd54b[_0x3292e6(0xa03)], _0x5dd54b[_0x3292e6(0xa04)]), _0x218b83[_0x3292e6(0x31d)][_0x3292e6(0x8fb)][_0x3292e6(0xa05)][_0x3292e6(0xa06)](_0x3c25d6);
                var _0x56b177 = _0x3c25d6['x'], _0x189bc2 = _0x3c25d6['y'];
                switch (_0x41f7a7) {
                case 0x0:
                    if (!!_0x58fcb1)
                        this[_0x3292e6(0x9f2)][_0x3292e6(0x201)](_0x58fcb1);
                    _0x62ef90 += _0x56b177, _0x2e5033 += _0x189bc2;
                    break;
                case 0x1:
                    if (!!_0x58fcb1)
                        this[_0x3292e6(0x9f2)][_0x3292e6(0x3a9)](_0x58fcb1);
                    _0x62ef90 -= _0x56b177, _0x2e5033 -= _0x189bc2;
                    break;
                case 0x2:
                    _0x62ef90 = _0x56b177 - _0x20ede9['x'], _0x2e5033 = _0x189bc2 - _0x20ede9['y'];
                    break;
                }
                _0x20ede9['x'] = _0x56b177, _0x20ede9['y'] = _0x189bc2;
            }
            var _0x2cc550 = this[_0x3292e6(0x9f2)][_0x3292e6(0x1ff)];
            _0x2cc550 === 0x0 ? (this[_0x3292e6(0x9e2)]['mousePositionX'] = 0x0, this[_0x3292e6(0x9e2)][_0x3292e6(0x870)] = 0x0) : (this['_mouseTouch'][_0x3292e6(0x86f)] = (this[_0x3292e6(0x9e2)][_0x3292e6(0x86f)] * _0x1594fe + _0x62ef90) / _0x2cc550, this[_0x3292e6(0x9e2)][_0x3292e6(0x870)] = (this[_0x3292e6(0x9e2)][_0x3292e6(0x870)] * _0x1594fe + _0x2e5033) / _0x2cc550);
        }
        [_0x5659be(0x3b3)]() {
            var _0x1b1908 = _0x5659be, _0x368285 = _0x40d5e5[_0x1b1908(0x233)] && !_0x218b83[_0x1b1908(0xa07)][_0x1b1908(0xa08)], _0x37dc8a, _0x9713e6, _0x375aac, _0x58987a;
            _0x9713e6 = this[_0x1b1908(0x9e1)][_0x1b1908(0x1ff)];
            var _0xbf948a = this[_0x1b1908(0x3a6)][_0x1b1908(0xa09)];
            if (_0x9713e6 > 0x0) {
                var _0x2db1e4 = ![];
                for (_0x37dc8a = 0x0; _0x37dc8a < _0x9713e6; _0x37dc8a++) {
                    var _0x352334 = this[_0x1b1908(0x9e1)][_0x37dc8a];
                    switch (_0x352334[_0x1b1908(0x2ae)]) {
                    case 'mousedown':
                        _0x368285 && this['_mouseTouchDown']();
                        break;
                    case 'mouseup':
                        _0x368285 && this[_0x1b1908(0x9f8)]();
                        break;
                    case _0x1b1908(0x9eb):
                        var _0x1379ec = _0x3abb9f[_0x1b1908(0xa01)];
                        _0x1379ec[_0x1b1908(0xa02)](_0x352334[_0x1b1908(0xa03)], _0x352334[_0x1b1908(0xa04)]), _0x218b83[_0x1b1908(0x31d)][_0x1b1908(0x8fb)][_0x1b1908(0xa05)]['invertTransformPoint'](_0x1379ec), this[_0x1b1908(0x9e2)][_0x1b1908(0x86f)] = _0x1379ec['x'], this[_0x1b1908(0x9e2)][_0x1b1908(0x870)] = _0x1379ec['y'], _0x368285 && (_0x2db1e4 = !![]);
                        break;
                    case _0x1b1908(0x9ec):
                        var _0x3f1282 = this['_touches'][_0x1b1908(0x1ff)];
                        this[_0x1b1908(0xa00)](_0x352334[_0x1b1908(0xa0a)], 0x0);
                        _0x368285 && (!_0x528624[_0x1b1908(0x243)]['isUseCannonPhysicsEngine'] && this[_0x1b1908(0x9fb)](_0xbf948a), _0x3f1282 === 0x0 && this['_mouseTouchDown']());
                        break;
                    case _0x1b1908(0x9ed):
                    case _0x1b1908(0x9ee):
                        this['_changeTouches'](_0x352334[_0x1b1908(0xa0a)], 0x1), _0x368285 && this[_0x1b1908(0x9f2)]['length'] === 0x0 && this[_0x1b1908(0x9f8)]();
                        break;
                    case _0x1b1908(0x9f1):
                        this['_changeTouches'](_0x352334[_0x1b1908(0xa0a)], 0x2), _0x368285 && (_0x2db1e4 = !![]);
                        break;
                    default:
                        throw _0x1b1908(0xa0b);
                    }
                }
                _0x2db1e4 && !_0x528624[_0x1b1908(0x243)][_0x1b1908(0x244)] && this['_mouseTouchRayCast'](_0xbf948a), this[_0x1b1908(0x9e1)][_0x1b1908(0x1ff)] = 0x0;
            }
            if (_0x368285) {
                var _0x3dab28 = this[_0x1b1908(0x9e2)], _0x3319fd = _0x3dab28['_pressedSprite'];
                if (_0x3319fd && _0x218b83[_0x1b1908(0x500)][_0x1b1908(0x4da)] > _0x3dab28[_0x1b1908(0x86d)]) {
                    var _0x4b510f = _0x3319fd[_0x1b1908(0x362)];
                    if (_0x4b510f) {
                        for (_0x375aac = 0x0, _0x58987a = _0x4b510f[_0x1b1908(0x1ff)]; _0x375aac < _0x58987a; _0x375aac++)
                            _0x4b510f[_0x375aac][_0x1b1908(0xa0c)]();
                    }
                }
                var _0x2437cc = _0x3dab28[_0x1b1908(0x86e)];
                if (_0x2437cc) {
                    var _0x203afe = _0x2437cc[_0x1b1908(0x362)];
                    if (_0x203afe) {
                        for (_0x375aac = 0x0, _0x58987a = _0x203afe[_0x1b1908(0x1ff)]; _0x375aac < _0x58987a; _0x375aac++)
                            _0x203afe[_0x375aac]['onMouseOver']();
                    }
                }
            }
        }
        ['getTouch'](_0x5134b9) {
            var _0x52df93 = _0x5659be;
            return _0x5134b9 < this[_0x52df93(0x9f2)][_0x52df93(0x1ff)] ? this[_0x52df93(0x9f2)][_0x52df93(0x1f6)][_0x5134b9] : null;
        }
    }
    _0x3abb9f[_0x5659be(0xa01)] = new _0x218b83[(_0x5659be(0x2cf))](), _0x3abb9f['_tempVector20'] = new _0x12bf01(), _0x3abb9f[_0x5659be(0xa0d)] = new _0x2ef15a(new _0x3f70c5(), new _0x3f70c5());
    class _0x53569e {
        constructor(_0x417c3e, _0x28f74a) {
            var _0x187dde = _0x5659be;
            this[_0x187dde(0x578)] = _0x417c3e, this[_0x187dde(0xa0e)] = _0x28f74a;
        }
        static get [_0x5659be(0x449)]() {
            var _0x57ef90 = _0x5659be;
            return _0x53569e[_0x57ef90(0x43f)];
        }
        static [_0x5659be(0x229)]() {
            var _0x295982 = _0x5659be;
            _0x53569e[_0x295982(0x43f)] = new _0x330160(0x14, [
                new _0x1f18c6(0x0, _0x48a921[_0x295982(0x45d)], _0x13bc8a[_0x295982(0x609)]),
                new _0x1f18c6(0xc, _0x48a921[_0x295982(0x45b)], _0x13bc8a['MESH_TEXTURECOORDINATE0'])
            ]);
        }
        get [_0x5659be(0x59e)]() {
            return this['_position'];
        }
        get ['textureCoordinate0']() {
            var _0x21f29d = _0x5659be;
            return this[_0x21f29d(0xa0e)];
        }
        get ['vertexDeclaration']() {
            var _0x122499 = _0x5659be;
            return _0x53569e[_0x122499(0x43f)];
        }
    }
    class _0x2d69f9 extends _0x284ea3 {
        constructor(_0x533f59 = 0x30, _0x1db1b7 = 0x30) {
            var _0x3db975 = _0x5659be;
            super();
            var _0x2aec0f = _0x218b83[_0x3db975(0x2f3)][_0x3db975(0x2f4)];
            this['_stacks'] = _0x533f59, this[_0x3db975(0xa0f)] = _0x1db1b7;
            var _0x5d07d7 = _0x53569e[_0x3db975(0x449)], _0x4471f8 = _0x5d07d7[_0x3db975(0x4e4)] / 0x4, _0x1c8b57 = (this[_0x3db975(0xa10)] + 0x1) * (this[_0x3db975(0xa0f)] + 0x1), _0x48f316 = 0x3 * this[_0x3db975(0xa10)] * (this['_slices'] + 0x1) * 0x2, _0x3b1a4c = new Float32Array(_0x1c8b57 * _0x4471f8), _0x5594ef = new Uint16Array(_0x48f316), _0x11b24f = Math['PI'] / this[_0x3db975(0xa10)], _0x3df491 = Math['PI'] * 0x2 / this[_0x3db975(0xa0f)], _0x3619a9 = 0x0, _0x22f6ff = 0x0, _0x5c3f80 = 0x0;
            for (var _0x5d5714 = 0x0; _0x5d5714 < this['_stacks'] + 0x1; _0x5d5714++) {
                var _0x4dbb79 = Math[_0x3db975(0x26f)](_0x5d5714 * _0x11b24f), _0x34c803 = Math[_0x3db975(0x270)](_0x5d5714 * _0x11b24f);
                for (var _0x4d9bd6 = 0x0; _0x4d9bd6 < this[_0x3db975(0xa0f)] + 0x1; _0x4d9bd6++) {
                    var _0x12524f = _0x4dbb79 * Math[_0x3db975(0x26f)](_0x4d9bd6 * _0x3df491), _0x2e48ea = _0x4dbb79 * Math[_0x3db975(0x270)](_0x4d9bd6 * _0x3df491);
                    _0x3b1a4c[_0x22f6ff + 0x0] = _0x12524f * _0x2d69f9[_0x3db975(0xa11)], _0x3b1a4c[_0x22f6ff + 0x1] = _0x34c803 * _0x2d69f9['_radius'], _0x3b1a4c[_0x22f6ff + 0x2] = _0x2e48ea * _0x2d69f9['_radius'], _0x3b1a4c[_0x22f6ff + 0x3] = -(_0x4d9bd6 / this['_slices']) + 0.75, _0x3b1a4c[_0x22f6ff + 0x4] = _0x5d5714 / this[_0x3db975(0xa10)], _0x22f6ff += _0x4471f8, _0x5d5714 != this[_0x3db975(0xa10)] - 0x1 && (_0x5594ef[_0x5c3f80++] = _0x3619a9 + 0x1, _0x5594ef[_0x5c3f80++] = _0x3619a9, _0x5594ef[_0x5c3f80++] = _0x3619a9 + (this['_slices'] + 0x1), _0x5594ef[_0x5c3f80++] = _0x3619a9 + (this[_0x3db975(0xa0f)] + 0x1), _0x5594ef[_0x5c3f80++] = _0x3619a9, _0x5594ef[_0x5c3f80++] = _0x3619a9 + this[_0x3db975(0xa0f)], _0x3619a9++);
                }
            }
            this['_vertexBuffer'] = new _0x57a6a2(_0x3b1a4c[_0x3db975(0x1ff)] * 0x4, _0x2aec0f['STATIC_DRAW'], ![]), this[_0x3db975(0x4f9)]['vertexDeclaration'] = _0x5d07d7, this[_0x3db975(0x624)] = new _0x11925d(_0x71dec4['IndexFormat'][_0x3db975(0x8c8)], _0x5594ef[_0x3db975(0x1ff)], _0x2aec0f[_0x3db975(0x4f8)], ![]), this['_vertexBuffer'][_0x3db975(0x4fd)](_0x3b1a4c[_0x3db975(0x448)]), this['_indexBuffer'][_0x3db975(0x4fd)](_0x5594ef);
            var _0x4b3fcf = new _0x174c4a();
            _0x4b3fcf[_0x3db975(0x444)](), _0x4b3fcf[_0x3db975(0x4ea)](this[_0x3db975(0x4f9)]), _0x4b3fcf[_0x3db975(0x4f3)](this[_0x3db975(0x624)]), _0x4b3fcf[_0x3db975(0x4fb)](), this['_bufferState'] = _0x4b3fcf;
        }
        static [_0x5659be(0x229)]() {
            var _0x1c1420 = _0x5659be;
            _0x2d69f9[_0x1c1420(0x2f4)] = new _0x2d69f9();
        }
        get [_0x5659be(0xa12)]() {
            var _0xcd8537 = _0x5659be;
            return this[_0xcd8537(0xa10)];
        }
        get ['slices']() {
            var _0x8db775 = _0x5659be;
            return this[_0x8db775(0xa0f)];
        }
        [_0x5659be(0x5e6)](_0x2335de) {
            var _0x3e7891 = _0x5659be, _0x55d6e4 = _0x218b83['LayaGL'][_0x3e7891(0x2f4)], _0x3af48d = this[_0x3e7891(0x624)][_0x3e7891(0x8d1)];
            _0x55d6e4['drawElements'](_0x55d6e4['TRIANGLES'], _0x3af48d, _0x55d6e4['UNSIGNED_SHORT'], 0x0), _0x218b83['Stat'][_0x3e7891(0x62a)] += _0x3af48d / 0x3, _0x218b83[_0x3e7891(0x500)][_0x3e7891(0x501)]++;
        }
    }
    _0x2d69f9[_0x5659be(0xa11)] = 0x1, function (_0x58a79c) {
        var _0x27d515 = _0x5659be;
        _0x58a79c[_0x58a79c[_0x27d515(0xa13)] = 0x0] = _0x27d515(0xa13), _0x58a79c[_0x58a79c[_0x27d515(0xa14)] = 0x1] = 'NegativeX', _0x58a79c[_0x58a79c[_0x27d515(0xa15)] = 0x2] = _0x27d515(0xa15), _0x58a79c[_0x58a79c[_0x27d515(0xa16)] = 0x3] = _0x27d515(0xa16), _0x58a79c[_0x58a79c[_0x27d515(0xa17)] = 0x4] = _0x27d515(0xa17), _0x58a79c[_0x58a79c[_0x27d515(0xa18)] = 0x5] = _0x27d515(0xa18);
    }(_0x71dec4[_0x5659be(0xa19)] || (_0x71dec4[_0x5659be(0xa19)] = {}));
    class _0x38ac97 extends _0x218b83['BaseTexture'] {
        constructor(_0x449a7c, _0x138c41 = _0x218b83[_0x5659be(0x2c6)]['R8G8B8'], _0x1a8617 = ![]) {
            var _0x28ab48 = _0x5659be;
            super(_0x138c41, _0x1a8617), this[_0x28ab48(0x3e1)] = _0x218b83[_0x28ab48(0x2f3)][_0x28ab48(0x2f4)][_0x28ab48(0x7e5)], this['_width'] = _0x449a7c, this[_0x28ab48(0x3e4)] = _0x449a7c;
            var _0x1531a4 = _0x218b83['LayaGL'][_0x28ab48(0x2f4)];
            this[_0x28ab48(0x41a)](_0x1531a4[_0x28ab48(0x41b)], this['_wrapModeU']), this[_0x28ab48(0x41a)](_0x1531a4[_0x28ab48(0x41d)], this[_0x28ab48(0x41e)]), this[_0x28ab48(0xa1a)](this['_filterMode']), this['_setAnisotropy'](this['_anisoLevel']);
            if (this[_0x28ab48(0xa1b)]) {
                this[_0x28ab48(0x3e6)] = Math['ceil'](Math[_0x28ab48(0x849)](_0x449a7c)) + 0x1;
                for (var _0x26dc12 = 0x0; _0x26dc12 < this['_mipmapCount']; _0x26dc12++)
                    this[_0x28ab48(0xa1c)]([], _0x26dc12, Math[_0x28ab48(0x205)](_0x449a7c >> _0x26dc12, 0x1), Math[_0x28ab48(0x205)](_0x449a7c >> _0x26dc12, 0x1));
                this[_0x28ab48(0x423)](_0x449a7c * _0x449a7c * 0x4 * (0x1 + 0x1 / 0x3) * 0x6);
            } else
                this['_mipmapCount'] = 0x1, this[_0x28ab48(0x423)](_0x449a7c * _0x449a7c * 0x4 * 0x6);
        }
        static get [_0x5659be(0xa1d)]() {
            var _0xd3d2b1 = _0x5659be;
            return _0x38ac97[_0xd3d2b1(0xa1e)];
        }
        static get [_0x5659be(0xa1f)]() {
            return _0x38ac97['_grayTexture'];
        }
        static [_0x5659be(0x229)]() {
            var _0xcd2462 = _0x5659be, _0x12fe9a = new _0x38ac97(0x1, _0x218b83[_0xcd2462(0x2c6)][_0xcd2462(0x2c7)], ![]), _0x6074b9 = new _0x38ac97(0x1, _0x218b83[_0xcd2462(0x2c6)][_0xcd2462(0x2c7)], ![]), _0x264e4d = new Uint8Array(0x3);
            _0x264e4d[0x0] = 0x0, _0x264e4d[0x1] = 0x0, _0x264e4d[0x2] = 0x0, _0x12fe9a[_0xcd2462(0xa20)]([
                _0x264e4d,
                _0x264e4d,
                _0x264e4d,
                _0x264e4d,
                _0x264e4d,
                _0x264e4d
            ]), _0x12fe9a[_0xcd2462(0x30b)] = !![], (_0x264e4d[0x0] = 0x80, _0x264e4d[0x1] = 0x80, _0x264e4d[0x2] = 0x80), _0x6074b9['setSixSidePixels']([
                _0x264e4d,
                _0x264e4d,
                _0x264e4d,
                _0x264e4d,
                _0x264e4d,
                _0x264e4d
            ]), _0x6074b9['lock'] = !![], _0x38ac97['_grayTexture'] = _0x6074b9, _0x38ac97[_0xcd2462(0xa1e)] = _0x12fe9a;
        }
        static [_0x5659be(0x318)](_0x3a8299, _0x5a1ced = null, _0x17e77f = null) {
            var _0xbfe6ca = _0x5659be, _0x34072c = _0x17e77f ? new _0x38ac97(0x0, _0x17e77f[0x0], _0x17e77f[0x1]) : new _0x38ac97(0x0);
            return _0x34072c[_0xbfe6ca(0xa21)](_0x3a8299), _0x34072c;
        }
        static ['_parseBin'](_0x5534e8, _0x43f575 = null, _0x3c13b2 = null) {
            var _0x39e9f1 = _0x5659be, _0x2ba3e0 = _0x3c13b2 ? new _0x38ac97(0x0, _0x3c13b2[0x0], _0x3c13b2[0x1]) : new _0x38ac97(0x0);
            return _0x2ba3e0[_0x39e9f1(0xa21)](_0x5534e8), _0x2ba3e0;
        }
        static [_0x5659be(0x31c)](_0x2a236b, _0x524750) {
            var _0x99e661 = _0x5659be, _0xbe2cb0 = _0x218b83['LoaderManager'][_0x99e661(0xa22)][_0x218b83[_0x99e661(0xa23)][_0x99e661(0xa24)](_0x2a236b)] ? _0x218b83[_0x99e661(0xa23)]['getFilecompatibleExtension'](_0x2a236b) : _0x218b83[_0x99e661(0xa23)][_0x99e661(0xa25)](_0x2a236b), _0x405696 = _0x218b83[_0x99e661(0xa26)][_0x99e661(0xa22)][_0xbe2cb0] ? _0x218b83[_0x99e661(0xa26)][_0x99e661(0xa22)][_0xbe2cb0][0x0] : null;
            _0x218b83['ILaya'][_0x99e661(0x5bd)][_0x99e661(0x31e)](_0x2a236b, _0x524750, null, _0x405696);
        }
        get [_0x5659be(0x7e2)]() {
            var _0x24926f = _0x5659be;
            return _0x38ac97[_0x24926f(0xa1f)];
        }
        [_0x5659be(0xa1c)](_0x59bc19, _0x4a4e85, _0x4fa8d5, _0xb048fa) {
            var _0x1aa4e6 = _0x5659be, _0x717f79 = _0x218b83[_0x1aa4e6(0x2f3)]['instance'], _0x3ae12e = this[_0x1aa4e6(0xa27)]();
            _0x218b83[_0x1aa4e6(0x3fe)][_0x1aa4e6(0x3ff)](_0x717f79, this[_0x1aa4e6(0x3e1)], this[_0x1aa4e6(0x400)]), this[_0x1aa4e6(0x2c5)] === _0x218b83['TextureFormat'][_0x1aa4e6(0x2c7)] ? (_0x717f79[_0x1aa4e6(0xa28)](_0x717f79[_0x1aa4e6(0xa29)], 0x1), _0x717f79['texImage2D'](_0x717f79[_0x1aa4e6(0xa2a)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x0]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2b)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x1]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2c)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79['UNSIGNED_BYTE'], _0x59bc19[0x2]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2d)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x3]), _0x717f79['texImage2D'](_0x717f79[_0x1aa4e6(0xa2e)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x4]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2f)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x5]), _0x717f79['pixelStorei'](_0x717f79['UNPACK_ALIGNMENT'], 0x4)) : (_0x717f79[_0x1aa4e6(0x402)](_0x717f79['TEXTURE_CUBE_MAP_POSITIVE_Z'], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x0]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2b)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x1]), _0x717f79['texImage2D'](_0x717f79[_0x1aa4e6(0xa2c)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x2]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2d)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x3]), _0x717f79['texImage2D'](_0x717f79[_0x1aa4e6(0xa2e)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x4]), _0x717f79[_0x1aa4e6(0x402)](_0x717f79[_0x1aa4e6(0xa2f)], _0x4a4e85, _0x3ae12e, _0x4fa8d5, _0xb048fa, 0x0, _0x3ae12e, _0x717f79[_0x1aa4e6(0x430)], _0x59bc19[0x5]));
        }
        [_0x5659be(0xa21)](_0xdf667d, _0x430fe1 = ![]) {
            var _0x3f9dba = _0x5659be, _0x4b2ac8, _0x2e2176;
            for (var _0x56b286 = 0x0; _0x56b286 < 0x6; _0x56b286++) {
                var _0x16d180 = _0xdf667d[_0x56b286];
                if (!_0x16d180) {
                    console[_0x3f9dba(0x943)](_0x3f9dba(0xa30));
                    return;
                }
                var _0x308237 = _0x16d180['width'], _0x26b008 = _0x16d180[_0x3f9dba(0x301)];
                if (_0x56b286 > 0x0) {
                    if (_0x4b2ac8 !== _0x308237) {
                        console['log'](_0x3f9dba(0xa31));
                        return;
                    }
                }
                _0x4b2ac8 = _0x308237, _0x2e2176 = _0x26b008;
                if (_0x4b2ac8 !== _0x2e2176) {
                    console[_0x3f9dba(0x943)](_0x3f9dba(0xa31));
                    return;
                }
            }
            this['_width'] = _0x4b2ac8, this['_height'] = _0x2e2176;
            var _0x4c1eff = _0x218b83[_0x3f9dba(0x2f3)][_0x3f9dba(0x2f4)];
            _0x218b83[_0x3f9dba(0x3fe)][_0x3f9dba(0x3ff)](_0x4c1eff, this[_0x3f9dba(0x3e1)], this[_0x3f9dba(0x400)]);
            var _0xede892 = this[_0x3f9dba(0xa27)]();
            if (!_0x218b83[_0x3f9dba(0x308)][_0x3f9dba(0x309)])
                _0x430fe1 && _0x4c1eff[_0x3f9dba(0xa28)](_0x4c1eff[_0x3f9dba(0xa32)], !![]), _0x4c1eff['texImage2D'](_0x4c1eff[_0x3f9dba(0xa2a)], 0x0, _0xede892, _0xede892, _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x0]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2b)], 0x0, _0xede892, _0xede892, _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x1]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2c)], 0x0, _0xede892, _0xede892, _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x2]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2d)], 0x0, _0xede892, _0xede892, _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x3]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2e)], 0x0, _0xede892, _0xede892, _0x4c1eff['UNSIGNED_BYTE'], _0xdf667d[0x4]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2f)], 0x0, _0xede892, _0xede892, _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x5]), _0x430fe1 && _0x4c1eff[_0x3f9dba(0xa28)](_0x4c1eff[_0x3f9dba(0xa32)], ![]);
            else {
                if (_0x430fe1 == !![]) {
                    for (var _0x441ff4 = 0x0; _0x441ff4 < 0x6; _0x441ff4++)
                        _0xdf667d[_0x441ff4]['setPremultiplyAlpha'](_0x430fe1);
                }
                _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff['TEXTURE_CUBE_MAP_POSITIVE_Z'], 0x0, _0x4c1eff['RGBA'], _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff['UNSIGNED_BYTE'], _0xdf667d[0x0]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2b)], 0x0, _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x1]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2c)], 0x0, _0x4c1eff['RGBA'], _0x4c1eff['RGBA'], _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x2]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff[_0x3f9dba(0xa2d)], 0x0, _0x4c1eff['RGBA'], _0x4c1eff['RGBA'], _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x3]), _0x4c1eff['texImage2D'](_0x4c1eff[_0x3f9dba(0xa2e)], 0x0, _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x4]), _0x4c1eff[_0x3f9dba(0x402)](_0x4c1eff['TEXTURE_CUBE_MAP_NEGATIVE_Y'], 0x0, _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff[_0x3f9dba(0x405)], _0x4c1eff[_0x3f9dba(0x430)], _0xdf667d[0x5]);
            }
            this['_mipmap'] && this['_isPot'](_0x4b2ac8) && this[_0x3f9dba(0xa33)](_0x2e2176) ? (_0x4c1eff['generateMipmap'](this[_0x3f9dba(0x3e1)]), this[_0x3f9dba(0x423)](_0x4b2ac8 * _0x2e2176 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this['_setGPUMemory'](_0x4b2ac8 * _0x2e2176 * 0x4 * 0x6), this[_0x3f9dba(0x41a)](_0x4c1eff['TEXTURE_WRAP_S'], this[_0x3f9dba(0x41c)]), this['_setWarpMode'](_0x4c1eff['TEXTURE_WRAP_T'], this[_0x3f9dba(0x41e)]), this[_0x3f9dba(0xa1a)](this['_filterMode']), this['_readyed'] = !![], this[_0x3f9dba(0x422)]();
        }
        [_0x5659be(0xa20)](_0x531fb0, _0x1223b0 = 0x0) {
            var _0x8a2b38 = _0x5659be;
            if (!_0x531fb0)
                throw new Error(_0x8a2b38(0xa34));
            var _0x4193d2 = Math[_0x8a2b38(0x205)](this[_0x8a2b38(0x3e3)] >> _0x1223b0, 0x1), _0x5d5887 = Math['max'](this[_0x8a2b38(0x3e4)] >> _0x1223b0, 0x1), _0x536cc6 = _0x4193d2 * _0x5d5887 * this[_0x8a2b38(0xa35)]();
            if (_0x531fb0[0x0][_0x8a2b38(0x1ff)] < _0x536cc6)
                throw _0x8a2b38(0xa36) + _0x536cc6 + '.';
            this['_setPixels'](_0x531fb0, _0x1223b0, _0x4193d2, _0x5d5887);
            if (_0x1223b0 === 0x0) {
                var _0x5dbb4a = _0x218b83['LayaGL'][_0x8a2b38(0x2f4)];
                this[_0x8a2b38(0x41a)](_0x5dbb4a['TEXTURE_WRAP_S'], this[_0x8a2b38(0x41c)]), this[_0x8a2b38(0x41a)](_0x5dbb4a[_0x8a2b38(0x41d)], this[_0x8a2b38(0x41e)]);
            }
            this[_0x8a2b38(0x421)] = !![], this[_0x8a2b38(0x422)]();
        }
        [_0x5659be(0xa37)](_0x3c9b59, _0x588aa3, _0x261baa = 0x0) {
            var _0x50b603 = _0x5659be, _0xf5e218 = this['_width'], _0x2bfe72 = this[_0x50b603(0x3e4)];
            if (_0x588aa3) {
                if (_0xf5e218 !== _0x588aa3[_0x50b603(0x300)] || _0x2bfe72 !== _0x588aa3[_0x50b603(0x301)]) {
                    console['log'](_0x50b603(0xa38));
                    return;
                }
            }
            var _0x2638a2 = _0x218b83[_0x50b603(0x2f3)][_0x50b603(0x2f4)];
            _0x218b83[_0x50b603(0x3fe)]['bindTexture'](_0x2638a2, this['_glTextureType'], this[_0x50b603(0x400)]);
            var _0x7af432 = this['_getGLFormat']();
            switch (_0x3c9b59) {
            case _0x71dec4[_0x50b603(0xa19)][_0x50b603(0xa14)]:
                _0x2638a2[_0x50b603(0x402)](_0x2638a2[_0x50b603(0xa2d)], _0x261baa, _0x7af432, _0x7af432, _0x2638a2[_0x50b603(0x430)], _0x588aa3);
                break;
            case _0x71dec4['TextureCubeFace'][_0x50b603(0xa13)]:
                _0x2638a2['texImage2D'](_0x2638a2[_0x50b603(0xa2c)], _0x261baa, _0x7af432, _0x7af432, _0x2638a2[_0x50b603(0x430)], _0x588aa3);
                break;
            case _0x71dec4['TextureCubeFace'][_0x50b603(0xa16)]:
                _0x2638a2[_0x50b603(0x402)](_0x2638a2[_0x50b603(0xa2f)], _0x261baa, _0x7af432, _0x7af432, _0x2638a2['UNSIGNED_BYTE'], _0x588aa3);
                break;
            case _0x71dec4[_0x50b603(0xa19)][_0x50b603(0xa15)]:
                _0x2638a2['texImage2D'](_0x2638a2['TEXTURE_CUBE_MAP_POSITIVE_Y'], _0x261baa, _0x7af432, _0x7af432, _0x2638a2[_0x50b603(0x430)], _0x588aa3);
                break;
            case _0x71dec4[_0x50b603(0xa19)][_0x50b603(0xa18)]:
                _0x2638a2[_0x50b603(0x402)](_0x2638a2[_0x50b603(0xa2b)], _0x261baa, _0x7af432, _0x7af432, _0x2638a2['UNSIGNED_BYTE'], _0x588aa3);
                break;
            case _0x71dec4[_0x50b603(0xa19)][_0x50b603(0xa17)]:
                _0x2638a2[_0x50b603(0x402)](_0x2638a2[_0x50b603(0xa2a)], _0x261baa, _0x7af432, _0x7af432, _0x2638a2['UNSIGNED_BYTE'], _0x588aa3);
                break;
            }
            this[_0x50b603(0xa1b)] && this[_0x50b603(0xa33)](_0xf5e218) && this['_isPot'](_0x2bfe72) ? (_0x2638a2[_0x50b603(0xa39)](this[_0x50b603(0x3e1)]), this['_setGPUMemory'](_0xf5e218 * _0x2bfe72 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this[_0x50b603(0x423)](_0xf5e218 * _0x2bfe72 * 0x4 * 0x6), this[_0x50b603(0x41a)](_0x2638a2[_0x50b603(0x41b)], this[_0x50b603(0x41c)]), this['_setWarpMode'](_0x2638a2['TEXTURE_WRAP_T'], this[_0x50b603(0x41e)]), this[_0x50b603(0xa1a)](this[_0x50b603(0xa3a)]), this['_readyed'] = !![];
        }
    }
    _0x38ac97['TEXTURECUBE'] = 'TEXTURECUBE', _0x38ac97[_0x5659be(0xa3b)] = 'TEXTURECUBEBIN';
    class _0x335947 {
        constructor() {
            var _0x357312 = _0x5659be;
            this[_0x357312(0x438)] = 0x0, this[_0x357312(0x860)] = [];
        }
        ['add'](_0xbb9c2e) {
            var _0x4f14bc = _0x5659be;
            if (this['_length'] === this[_0x4f14bc(0x860)][_0x4f14bc(0x1ff)])
                this[_0x4f14bc(0x860)]['push'](_0xbb9c2e);
            else
                this[_0x4f14bc(0x860)][this['_length']] = _0xbb9c2e;
            this[_0x4f14bc(0x438)]++;
        }
        [_0x5659be(0x3a9)](_0x51129c) {
            var _0x280f01 = _0x5659be, _0x5578ad = this[_0x280f01(0x860)][_0x280f01(0x384)](_0x51129c);
            this[_0x280f01(0x438)]--;
            if (_0x5578ad !== this[_0x280f01(0x438)]) {
                var _0x53ae56 = this[_0x280f01(0x860)][this['_length']];
                this[_0x280f01(0x860)][_0x5578ad] = _0x53ae56;
            }
        }
        [_0x5659be(0x93f)]() {
            var _0x3a5c1c = _0x5659be;
            return this[_0x3a5c1c(0x438)]--, this[_0x3a5c1c(0x860)][_0x3a5c1c(0x93f)]();
        }
        [_0x5659be(0xa3c)]() {
            var _0x2ab7e2 = _0x5659be, _0x18fcb3, _0x426d3a = -0x1, _0x19ee7a = this[_0x2ab7e2(0x860)];
            for (var _0x3b434c = 0x0; _0x3b434c < this[_0x2ab7e2(0x438)]; _0x3b434c++) {
                var _0xcda30f = _0x19ee7a[_0x3b434c][_0x2ab7e2(0x92c)];
                _0x426d3a < _0xcda30f && (_0x426d3a = _0xcda30f, _0x18fcb3 = _0x3b434c);
            }
            return _0x18fcb3;
        }
        [_0x5659be(0xa3d)](_0x182dc8) {
            var _0x20726a = _0x5659be, _0x33f086 = this[_0x20726a(0x860)][0x0];
            this[_0x20726a(0x860)][0x0] = this['_elements'][_0x182dc8], this['_elements'][_0x182dc8] = _0x33f086;
        }
    }
    class _0x3744f8 extends _0x335947 {
        [_0x5659be(0x3a9)](_0x2d1026) {
            var _0x48c259 = _0x5659be, _0x4552de = this[_0x48c259(0x860)][_0x48c259(0x384)](_0x2d1026);
            this[_0x48c259(0x860)][_0x48c259(0x32c)](_0x4552de, 0x1), this['_length']--;
        }
    }
    class _0x541c3c extends _0x4bfb48 {
        constructor() {
            var _0x3ea64b = _0x5659be;
            super(), this[_0x3ea64b(0x68b)](_0x3ea64b(0xa3e)), this['_shaderValues']['setVector'](_0x541c3c['COLOR'], new _0x8fb80(0x1, 0x1, 0x1, 0x1));
        }
        static ['__initDefine__']() {
        }
        get [_0x5659be(0x462)]() {
            var _0x284891 = _0x5659be;
            return this[_0x284891(0x4e0)][_0x284891(0x49c)](_0x541c3c[_0x284891(0x428)]);
        }
        set [_0x5659be(0x462)](_0x334474) {
            var _0x41c0df = _0x5659be;
            this['_shaderValues'][_0x41c0df(0x49d)](_0x541c3c[_0x41c0df(0x428)], _0x334474);
        }
        [_0x5659be(0x1f4)]() {
            var _0x69ff94 = _0x5659be, _0x58c2af = new _0x541c3c();
            return this[_0x69ff94(0x1f0)](_0x58c2af), _0x58c2af;
        }
    }
    _0x541c3c[_0x5659be(0x428)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa3f));
    class _0x3fc11a {
        constructor(_0x440378, _0x5bbd99) {
            var _0xc4db45 = _0x5659be;
            this['min'] = _0x440378, this[_0xc4db45(0x205)] = _0x5bbd99;
        }
        [_0x5659be(0xa40)](_0x4dd079, _0x3ebb04, _0x5dc39e) {
            var _0x516e33 = _0x5659be, _0x57f738 = _0x4dd079['x'], _0x47d7c7 = _0x4dd079['y'], _0xe9b83e = _0x4dd079['z'], _0x36865e = _0x3ebb04['elements'];
            _0x5dc39e['x'] = Math[_0x516e33(0x1e7)](_0x36865e[0x0] * _0x57f738) + Math[_0x516e33(0x1e7)](_0x36865e[0x4] * _0x47d7c7) + Math[_0x516e33(0x1e7)](_0x36865e[0x8] * _0xe9b83e), _0x5dc39e['y'] = Math['abs'](_0x36865e[0x1] * _0x57f738) + Math[_0x516e33(0x1e7)](_0x36865e[0x5] * _0x47d7c7) + Math[_0x516e33(0x1e7)](_0x36865e[0x9] * _0xe9b83e), _0x5dc39e['z'] = Math[_0x516e33(0x1e7)](_0x36865e[0x2] * _0x57f738) + Math[_0x516e33(0x1e7)](_0x36865e[0x6] * _0x47d7c7) + Math['abs'](_0x36865e[0xa] * _0xe9b83e);
        }
        [_0x5659be(0x8b9)](_0x3ceace) {
            var _0x4383b9 = _0x5659be;
            _0x3ceace['length'] = 0x8;
            var _0x34207d = this[_0x4383b9(0x204)]['x'], _0x3b89fb = this[_0x4383b9(0x204)]['y'], _0x16b6d3 = this['min']['z'], _0x2d6e51 = this['max']['x'], _0x3600bc = this['max']['y'], _0x2209e7 = this[_0x4383b9(0x205)]['z'];
            _0x3ceace[0x0] = new _0x3f70c5(_0x34207d, _0x3600bc, _0x2209e7), _0x3ceace[0x1] = new _0x3f70c5(_0x2d6e51, _0x3600bc, _0x2209e7), _0x3ceace[0x2] = new _0x3f70c5(_0x2d6e51, _0x3b89fb, _0x2209e7), _0x3ceace[0x3] = new _0x3f70c5(_0x34207d, _0x3b89fb, _0x2209e7), _0x3ceace[0x4] = new _0x3f70c5(_0x34207d, _0x3600bc, _0x16b6d3), _0x3ceace[0x5] = new _0x3f70c5(_0x2d6e51, _0x3600bc, _0x16b6d3), _0x3ceace[0x6] = new _0x3f70c5(_0x2d6e51, _0x3b89fb, _0x16b6d3), _0x3ceace[0x7] = new _0x3f70c5(_0x34207d, _0x3b89fb, _0x16b6d3);
        }
        [_0x5659be(0x816)](_0x1bce53) {
            var _0x460144 = _0x5659be;
            _0x3f70c5[_0x460144(0x201)](this[_0x460144(0x204)], this[_0x460144(0x205)], _0x1bce53), _0x3f70c5[_0x460144(0x1ee)](_0x1bce53, 0.5, _0x1bce53);
        }
        [_0x5659be(0xa41)](_0x48086b) {
            var _0x4200a0 = _0x5659be;
            _0x3f70c5[_0x4200a0(0x210)](this[_0x4200a0(0x205)], this['min'], _0x48086b), _0x3f70c5[_0x4200a0(0x1ee)](_0x48086b, 0.5, _0x48086b);
        }
        [_0x5659be(0xa42)](_0x3a1b4f, _0x12fd23) {
            var _0x1b964a = _0x5659be;
            _0x3f70c5[_0x1b964a(0x210)](_0x3a1b4f, _0x12fd23, this[_0x1b964a(0x204)]), _0x3f70c5[_0x1b964a(0x201)](_0x3a1b4f, _0x12fd23, this[_0x1b964a(0x205)]);
        }
        [_0x5659be(0xa43)](_0x5d628f, _0x4a4fe3) {
            var _0x49af1d = _0x5659be, _0xcf4657 = _0x3fc11a[_0x49af1d(0x59b)], _0x175668 = _0x3fc11a['_tempVector31'];
            this[_0x49af1d(0x816)](_0xcf4657), this[_0x49af1d(0xa41)](_0x175668), _0x3f70c5[_0x49af1d(0x20e)](_0xcf4657, _0x5d628f, _0xcf4657), this[_0x49af1d(0xa40)](_0x175668, _0x5d628f, _0x175668), _0x4a4fe3[_0x49af1d(0xa42)](_0xcf4657, _0x175668);
        }
        ['toDefault']() {
            var _0x567cb7 = _0x5659be;
            this[_0x567cb7(0x204)][_0x567cb7(0x212)](), this[_0x567cb7(0x205)]['toDefault']();
        }
        static [_0x5659be(0xa44)](_0x2f0411, _0x363d1b) {
            var _0x466fd9 = _0x5659be;
            if (_0x2f0411 == null)
                throw new Error(_0x466fd9(0xa45));
            var _0x38e9c7 = _0x363d1b[_0x466fd9(0x204)], _0x57e1c3 = _0x363d1b[_0x466fd9(0x205)];
            _0x38e9c7['x'] = Number['MAX_VALUE'], _0x38e9c7['y'] = Number['MAX_VALUE'], _0x38e9c7['z'] = Number[_0x466fd9(0xa46)], _0x57e1c3['x'] = -Number[_0x466fd9(0xa46)], _0x57e1c3['y'] = -Number['MAX_VALUE'], _0x57e1c3['z'] = -Number[_0x466fd9(0xa46)];
            for (var _0x2e19f1 = 0x0, _0x1523d0 = _0x2f0411[_0x466fd9(0x1ff)]; _0x2e19f1 < _0x1523d0; ++_0x2e19f1) {
                _0x3f70c5['min'](_0x38e9c7, _0x2f0411[_0x2e19f1], _0x38e9c7), _0x3f70c5[_0x466fd9(0x205)](_0x57e1c3, _0x2f0411[_0x2e19f1], _0x57e1c3);
            }
        }
        static [_0x5659be(0xa47)](_0x2f9abf, _0x57c137, _0x63e4f6) {
            var _0x5cf4dd = _0x5659be;
            _0x3f70c5[_0x5cf4dd(0x204)](_0x2f9abf[_0x5cf4dd(0x204)], _0x57c137[_0x5cf4dd(0x204)], _0x63e4f6[_0x5cf4dd(0x204)]), _0x3f70c5[_0x5cf4dd(0x205)](_0x2f9abf[_0x5cf4dd(0x205)], _0x57c137['max'], _0x63e4f6[_0x5cf4dd(0x205)]);
        }
        [_0x5659be(0x1f0)](_0x5e6636) {
            var _0x5c3268 = _0x5659be, _0x457fa4 = _0x5e6636;
            this[_0x5c3268(0x204)][_0x5c3268(0x1f0)](_0x457fa4[_0x5c3268(0x204)]), this['max'][_0x5c3268(0x1f0)](_0x457fa4[_0x5c3268(0x205)]);
        }
        [_0x5659be(0x1f4)]() {
            var _0x53e3d1 = _0x5659be, _0x18c739 = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5());
            return this[_0x53e3d1(0x1f0)](_0x18c739), _0x18c739;
        }
    }
    _0x3fc11a['_tempVector30'] = new _0x3f70c5(), _0x3fc11a[_0x5659be(0x3d6)] = new _0x3f70c5();
    class _0x2a117e {
        constructor(_0x1588fc, _0x26f2ff) {
            var _0x3be41a = _0x5659be;
            this[_0x3be41a(0xa48)] = 0x0, this['_center'] = new _0x3f70c5(), this[_0x3be41a(0xa49)] = new _0x3f70c5(), this['_boundBox'] = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5()), _0x1588fc['cloneTo'](this[_0x3be41a(0xa4a)][_0x3be41a(0x204)]), _0x26f2ff['cloneTo'](this['_boundBox'][_0x3be41a(0x205)]), this[_0x3be41a(0xa4b)](_0x2a117e[_0x3be41a(0xa4c)] | _0x2a117e['_UPDATE_EXTENT'], !![]);
        }
        ['setMin'](_0x25dbf6) {
            var _0x584ed8 = _0x5659be, _0x2283f4 = this[_0x584ed8(0xa4a)][_0x584ed8(0x204)];
            if (_0x25dbf6 !== _0x2283f4)
                _0x25dbf6[_0x584ed8(0x1f0)](_0x2283f4);
            this[_0x584ed8(0xa4b)](_0x2a117e[_0x584ed8(0xa4c)] | _0x2a117e[_0x584ed8(0xa4d)], !![]), this[_0x584ed8(0xa4b)](_0x2a117e[_0x584ed8(0xa4e)], ![]);
        }
        [_0x5659be(0xa4f)]() {
            var _0x3ec687 = _0x5659be, _0x38b0c3 = this[_0x3ec687(0xa4a)]['min'];
            return this['_getUpdateFlag'](_0x2a117e[_0x3ec687(0xa4e)]) && (this[_0x3ec687(0xa50)](this[_0x3ec687(0x816)](), this[_0x3ec687(0xa41)](), _0x38b0c3), this[_0x3ec687(0xa4b)](_0x2a117e[_0x3ec687(0xa4e)], ![])), _0x38b0c3;
        }
        [_0x5659be(0xa51)](_0x4b3b6c) {
            var _0x2791e1 = _0x5659be, _0x70ce67 = this[_0x2791e1(0xa4a)][_0x2791e1(0x205)];
            if (_0x4b3b6c !== _0x70ce67)
                _0x4b3b6c['cloneTo'](_0x70ce67);
            this[_0x2791e1(0xa4b)](_0x2a117e[_0x2791e1(0xa4c)] | _0x2a117e[_0x2791e1(0xa4d)], !![]), this['_setUpdateFlag'](_0x2a117e[_0x2791e1(0xa52)], ![]);
        }
        [_0x5659be(0x828)]() {
            var _0x2266cc = _0x5659be, _0x5876ca = this[_0x2266cc(0xa4a)][_0x2266cc(0x205)];
            return this[_0x2266cc(0xa53)](_0x2a117e[_0x2266cc(0xa52)]) && (this[_0x2266cc(0xa54)](this[_0x2266cc(0x816)](), this[_0x2266cc(0xa41)](), _0x5876ca), this[_0x2266cc(0xa4b)](_0x2a117e[_0x2266cc(0xa52)], ![])), _0x5876ca;
        }
        ['setCenter'](_0x4c7379) {
            var _0x2e3c0d = _0x5659be;
            if (_0x4c7379 !== this[_0x2e3c0d(0xa55)])
                _0x4c7379[_0x2e3c0d(0x1f0)](this[_0x2e3c0d(0xa55)]);
            this[_0x2e3c0d(0xa4b)](_0x2a117e['_UPDATE_MIN'] | _0x2a117e[_0x2e3c0d(0xa52)], !![]), this[_0x2e3c0d(0xa4b)](_0x2a117e['_UPDATE_CENTER'], ![]);
        }
        [_0x5659be(0x816)]() {
            var _0x4bb445 = _0x5659be;
            return this[_0x4bb445(0xa53)](_0x2a117e[_0x4bb445(0xa4c)]) && (this['_getCenter'](this[_0x4bb445(0xa4f)](), this[_0x4bb445(0x828)](), this[_0x4bb445(0xa55)]), this[_0x4bb445(0xa4b)](_0x2a117e['_UPDATE_CENTER'], ![])), this[_0x4bb445(0xa55)];
        }
        [_0x5659be(0xa56)](_0x1cd674) {
            var _0x20d6c3 = _0x5659be;
            if (_0x1cd674 !== this[_0x20d6c3(0xa49)])
                _0x1cd674[_0x20d6c3(0x1f0)](this[_0x20d6c3(0xa49)]);
            this[_0x20d6c3(0xa4b)](_0x2a117e[_0x20d6c3(0xa4e)] | _0x2a117e[_0x20d6c3(0xa52)], !![]), this[_0x20d6c3(0xa4b)](_0x2a117e[_0x20d6c3(0xa4d)], ![]);
        }
        [_0x5659be(0xa41)]() {
            var _0x2e9c5f = _0x5659be;
            return this[_0x2e9c5f(0xa53)](_0x2a117e['_UPDATE_EXTENT']) && (this[_0x2e9c5f(0xa57)](this[_0x2e9c5f(0xa4f)](), this[_0x2e9c5f(0x828)](), this[_0x2e9c5f(0xa49)]), this[_0x2e9c5f(0xa4b)](_0x2a117e[_0x2e9c5f(0xa4d)], ![])), this[_0x2e9c5f(0xa49)];
        }
        [_0x5659be(0xa53)](_0x34685d) {
            var _0x4d0e49 = _0x5659be;
            return (this[_0x4d0e49(0xa48)] & _0x34685d) != 0x0;
        }
        ['_setUpdateFlag'](_0x2e1a25, _0x29af03) {
            var _0x4a21f8 = _0x5659be;
            if (_0x29af03)
                this[_0x4a21f8(0xa48)] |= _0x2e1a25;
            else
                this[_0x4a21f8(0xa48)] &= ~_0x2e1a25;
        }
        [_0x5659be(0xa58)](_0x31a4e9, _0x5b5d0c, _0x227c82) {
            _0x3f70c5['add'](_0x31a4e9, _0x5b5d0c, _0x227c82), _0x3f70c5['scale'](_0x227c82, 0.5, _0x227c82);
        }
        [_0x5659be(0xa57)](_0x390588, _0x5b7e61, _0x4af48a) {
            var _0x2a5d3f = _0x5659be;
            _0x3f70c5[_0x2a5d3f(0x210)](_0x5b7e61, _0x390588, _0x4af48a), _0x3f70c5['scale'](_0x4af48a, 0.5, _0x4af48a);
        }
        [_0x5659be(0xa50)](_0x40ef7f, _0x1775bb, _0xcd7a24) {
            var _0x543765 = _0x5659be;
            _0x3f70c5[_0x543765(0x210)](_0x40ef7f, _0x1775bb, _0xcd7a24);
        }
        ['_getMax'](_0xbaa456, _0x4cb3e0, _0x2395a9) {
            var _0x22bfd9 = _0x5659be;
            _0x3f70c5[_0x22bfd9(0x201)](_0xbaa456, _0x4cb3e0, _0x2395a9);
        }
        [_0x5659be(0xa40)](_0x4ef74e, _0x29cc48, _0xc6adb2) {
            var _0x777ad3 = _0x5659be, _0x3887e1 = _0x4ef74e['x'], _0x3519ba = _0x4ef74e['y'], _0x244600 = _0x4ef74e['z'], _0x49a3d9 = _0x29cc48[_0x777ad3(0x1f6)];
            _0xc6adb2['x'] = Math[_0x777ad3(0x1e7)](_0x49a3d9[0x0] * _0x3887e1) + Math['abs'](_0x49a3d9[0x4] * _0x3519ba) + Math[_0x777ad3(0x1e7)](_0x49a3d9[0x8] * _0x244600), _0xc6adb2['y'] = Math[_0x777ad3(0x1e7)](_0x49a3d9[0x1] * _0x3887e1) + Math[_0x777ad3(0x1e7)](_0x49a3d9[0x5] * _0x3519ba) + Math[_0x777ad3(0x1e7)](_0x49a3d9[0x9] * _0x244600), _0xc6adb2['z'] = Math[_0x777ad3(0x1e7)](_0x49a3d9[0x2] * _0x3887e1) + Math['abs'](_0x49a3d9[0x6] * _0x3519ba) + Math[_0x777ad3(0x1e7)](_0x49a3d9[0xa] * _0x244600);
        }
        [_0x5659be(0xa59)](_0x3f6ce4, _0x581679) {
            var _0x278141 = _0x5659be, _0x21a953 = _0x581679[_0x278141(0xa55)], _0x142479 = _0x581679['_extent'];
            _0x3f70c5[_0x278141(0x20e)](this[_0x278141(0x816)](), _0x3f6ce4, _0x21a953), this[_0x278141(0xa40)](this[_0x278141(0xa41)](), _0x3f6ce4, _0x142479), _0x581679['_boundBox'][_0x278141(0xa42)](_0x21a953, _0x142479), _0x581679['_updateFlag'] = 0x0;
        }
        ['_getBoundBox']() {
            var _0x32660a = _0x5659be;
            if (this['_updateFlag'] & _0x2a117e[_0x32660a(0xa4e)]) {
                var _0x49408f = this[_0x32660a(0xa4a)][_0x32660a(0x204)];
                this[_0x32660a(0xa50)](this[_0x32660a(0x816)](), this[_0x32660a(0xa41)](), _0x49408f), this[_0x32660a(0xa4b)](_0x2a117e[_0x32660a(0xa4e)], ![]);
            }
            if (this[_0x32660a(0xa48)] & _0x2a117e['_UPDATE_MAX']) {
                var _0x37bf95 = this[_0x32660a(0xa4a)]['max'];
                this['_getMax'](this[_0x32660a(0x816)](), this[_0x32660a(0xa41)](), _0x37bf95), this[_0x32660a(0xa4b)](_0x2a117e[_0x32660a(0xa52)], ![]);
            }
            return this[_0x32660a(0xa4a)];
        }
        [_0x5659be(0xa5a)](_0x643553) {
            var _0x2d512e = _0x5659be, _0x415481 = this[_0x2d512e(0x828)](), _0x5eacc2 = this['getMin'](), _0x1265d6 = _0x643553[_0x2d512e(0x828)](), _0x2b5f93 = _0x643553['getMin'](), _0x1d9117 = _0x2a117e[_0x2d512e(0xa5b)], _0x4f93dd = _0x2a117e[_0x2d512e(0xa5c)], _0x59829b = this[_0x2d512e(0xa41)](), _0x1830c4 = _0x643553['getExtent']();
            _0x1d9117[_0x2d512e(0x1fa)](Math[_0x2d512e(0x205)](_0x415481['x'], _0x1265d6['x']) - Math[_0x2d512e(0x204)](_0x5eacc2['x'], _0x2b5f93['x']), Math[_0x2d512e(0x205)](_0x415481['y'], _0x1265d6['y']) - Math[_0x2d512e(0x204)](_0x5eacc2['y'], _0x2b5f93['y']), Math[_0x2d512e(0x205)](_0x415481['z'], _0x1265d6['z']) - Math['min'](_0x5eacc2['z'], _0x2b5f93['z'])), _0x4f93dd[_0x2d512e(0x1fa)]((_0x59829b['x'] + _0x1830c4['x']) * 0x2, (_0x59829b['y'] + _0x1830c4['y']) * 0x2, (_0x59829b['z'] + _0x1830c4['z']) * 0x2);
            if (_0x1d9117['x'] > _0x4f93dd['x'])
                return -0x1;
            if (_0x1d9117['y'] > _0x4f93dd['y'])
                return -0x1;
            if (_0x1d9117['z'] > _0x4f93dd['z'])
                return -0x1;
            return (_0x4f93dd['x'] - _0x1d9117['x']) * (_0x4f93dd['y'] - _0x1d9117['y']) * (_0x4f93dd['z'] - _0x1d9117['z']);
        }
        [_0x5659be(0x1f0)](_0x1cabfe) {
            var _0xb155e1 = _0x5659be, _0x3dbf7e = _0x1cabfe;
            this['getMin']()['cloneTo'](_0x3dbf7e['_boundBox'][_0xb155e1(0x204)]), this[_0xb155e1(0x828)]()[_0xb155e1(0x1f0)](_0x3dbf7e[_0xb155e1(0xa4a)][_0xb155e1(0x205)]), this[_0xb155e1(0x816)]()['cloneTo'](_0x3dbf7e[_0xb155e1(0xa55)]), this['getExtent']()[_0xb155e1(0x1f0)](_0x3dbf7e[_0xb155e1(0xa49)]), _0x3dbf7e[_0xb155e1(0xa48)] = 0x0;
        }
        [_0x5659be(0x1f4)]() {
            var _0x55012d = _0x5659be, _0x37d175 = new _0x2a117e(new _0x3f70c5(), new _0x3f70c5());
            return this[_0x55012d(0x1f0)](_0x37d175), _0x37d175;
        }
    }
    _0x2a117e[_0x5659be(0xa4e)] = 0x1, _0x2a117e[_0x5659be(0xa52)] = 0x2, _0x2a117e[_0x5659be(0xa4c)] = 0x4, _0x2a117e[_0x5659be(0xa4d)] = 0x8, _0x2a117e[_0x5659be(0xa5b)] = new _0x3f70c5(), _0x2a117e['TEMP_VECTOR3_MAX1'] = new _0x3f70c5();
    class _0x319422 {
        constructor() {
            this['_destroyed'] = ![];
        }
        get [_0x5659be(0x5cf)]() {
            return this['_destroyed'];
        }
        [_0x5659be(0xa5d)]() {
            var _0x2430a3 = _0x5659be;
            throw _0x2430a3(0xa5e);
        }
        [_0x5659be(0x5e8)](_0x37aebc) {
            return !![];
        }
        [_0x5659be(0x5e6)](_0x4cb404) {
            var _0x171eb8 = _0x5659be;
            throw _0x171eb8(0xa5e);
        }
        [_0x5659be(0x311)]() {
            var _0x8bcc6 = _0x5659be;
            if (this[_0x8bcc6(0xa5f)])
                return;
            this[_0x8bcc6(0xa5f)] = !![];
        }
    }
    _0x319422[_0x5659be(0xa60)] = 0x0;
    class _0x243ac9 {
        constructor() {
        }
        static get [_0x5659be(0x449)]() {
            var _0x50928c = _0x5659be;
            return _0x243ac9[_0x50928c(0x43f)];
        }
        static [_0x5659be(0x229)]() {
            var _0x5293dd = _0x5659be;
            _0x243ac9[_0x5293dd(0x43f)] = new _0x330160(0x1c, [
                new _0x1f18c6(0x0, _0x48a921['Vector3'], _0x13bc8a[_0x5293dd(0x609)]),
                new _0x1f18c6(0xc, _0x48a921[_0x5293dd(0x45f)], _0x13bc8a['MESH_COLOR0'])
            ]);
        }
        get [_0x5659be(0x449)]() {
            return _0x243ac9['_vertexDeclaration'];
        }
    }
    class _0x1c9d51 extends _0x319422 {
        constructor(_0x581a43, _0x134483) {
            var _0x4966fb = _0x5659be;
            super(), this['_floatCountPerVertices'] = 0x7, this['_minUpdate'] = Number[_0x4966fb(0xa46)], this[_0x4966fb(0xa61)] = Number[_0x4966fb(0x8c5)], this[_0x4966fb(0x4f6)] = new _0x174c4a(), this[_0x4966fb(0xa62)] = new Float32Array(0x6), this[_0x4966fb(0xa63)] = ![], this[_0x4966fb(0xa64)] = 0x0, this[_0x4966fb(0xa65)] = 0x0;
            var _0x23d18a = _0x134483 * 0x2;
            this[_0x4966fb(0x3d3)] = _0x581a43, this[_0x4966fb(0xa64)] = _0x134483, this[_0x4966fb(0x4fa)] = new Float32Array(_0x23d18a * this[_0x4966fb(0xa66)]), this[_0x4966fb(0x4f9)] = new _0x57a6a2(_0x243ac9[_0x4966fb(0x449)]['vertexStride'] * _0x23d18a, _0x218b83[_0x4966fb(0x2f3)]['instance']['STATIC_DRAW'], ![]), this[_0x4966fb(0x4f9)][_0x4966fb(0x449)] = _0x243ac9[_0x4966fb(0x449)], this[_0x4966fb(0x4f6)]['bind'](), this[_0x4966fb(0x4f6)]['applyVertexBuffer'](this['_vertexBuffer']), this['_bufferState'][_0x4966fb(0x4fb)]();
            var _0x4ba2d1 = _0x1c9d51[_0x4966fb(0x478)], _0x37abce = _0x1c9d51['_tempVector1'];
            _0x4ba2d1['setValue'](Number[_0x4966fb(0xa46)], Number[_0x4966fb(0xa46)], Number[_0x4966fb(0xa46)]), _0x37abce[_0x4966fb(0x1fa)](-Number[_0x4966fb(0xa46)], -Number[_0x4966fb(0xa46)], -Number[_0x4966fb(0xa46)]), this[_0x4966fb(0xa67)] = new _0x2a117e(_0x4ba2d1, _0x37abce);
        }
        [_0x5659be(0xa5d)]() {
            var _0x4daedc = _0x5659be;
            return _0x1c9d51[_0x4daedc(0xa68)];
        }
        [_0x5659be(0xa69)](_0x45c695) {
            var _0xdaace5 = _0x5659be, _0x596972 = _0x45c695 * 0x2, _0x590a75 = this[_0xdaace5(0x4fa)];
            this[_0xdaace5(0x4f9)][_0xdaace5(0x311)](), this['_maxLineCount'] = _0x45c695;
            var _0x48bee2 = _0x596972 * this['_floatCountPerVertices'];
            this[_0xdaace5(0x4fa)] = new Float32Array(_0x48bee2), this[_0xdaace5(0x4f9)] = new _0x57a6a2(_0x243ac9[_0xdaace5(0x449)][_0xdaace5(0x4e4)] * _0x596972, _0x218b83[_0xdaace5(0x2f3)]['instance'][_0xdaace5(0x4f8)], ![]), this[_0xdaace5(0x4f9)][_0xdaace5(0x449)] = _0x243ac9['vertexDeclaration'], _0x48bee2 < _0x590a75[_0xdaace5(0x1ff)] ? (this['_vertices'][_0xdaace5(0x450)](new Float32Array(_0x590a75[_0xdaace5(0x448)], 0x0, _0x48bee2)), this[_0xdaace5(0x4f9)][_0xdaace5(0x4fd)](this[_0xdaace5(0x4fa)][_0xdaace5(0x448)], 0x0, 0x0, _0x48bee2 * 0x4)) : (this['_vertices'][_0xdaace5(0x450)](_0x590a75), this[_0xdaace5(0x4f9)][_0xdaace5(0x4fd)](this['_vertices'][_0xdaace5(0x448)], 0x0, 0x0, _0x590a75['length'] * 0x4)), this[_0xdaace5(0x4f6)][_0xdaace5(0x444)](), this['_bufferState']['applyVertexBuffer'](this[_0xdaace5(0x4f9)]), this[_0xdaace5(0x4f6)][_0xdaace5(0x4fb)]();
        }
        ['_updateLineVertices'](_0x39bae6, _0x5a37ff, _0x3daa6d, _0x3b0ae6, _0x2fe007) {
            var _0x1d006b = _0x5659be;
            _0x5a37ff && (this[_0x1d006b(0x4fa)][_0x39bae6 + 0x0] = _0x5a37ff['x'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0x1] = _0x5a37ff['y'], this['_vertices'][_0x39bae6 + 0x2] = _0x5a37ff['z']);
            _0x3b0ae6 && (this[_0x1d006b(0x4fa)][_0x39bae6 + 0x3] = _0x3b0ae6['r'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0x4] = _0x3b0ae6['g'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0x5] = _0x3b0ae6['b'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0x6] = _0x3b0ae6['a']);
            _0x3daa6d && (this[_0x1d006b(0x4fa)][_0x39bae6 + 0x7] = _0x3daa6d['x'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0x8] = _0x3daa6d['y'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0x9] = _0x3daa6d['z']);
            _0x2fe007 && (this[_0x1d006b(0x4fa)][_0x39bae6 + 0xa] = _0x2fe007['r'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0xb] = _0x2fe007['g'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0xc] = _0x2fe007['b'], this[_0x1d006b(0x4fa)][_0x39bae6 + 0xd] = _0x2fe007['a']);
            this['_minUpdate'] = Math['min'](this[_0x1d006b(0xa6a)], _0x39bae6), this[_0x1d006b(0xa61)] = Math['max'](this[_0x1d006b(0xa61)], _0x39bae6 + this['_floatCountPerVertices'] * 0x2);
            var _0x21fe7e = this['_bounds'], _0x1d9d74 = this[_0x1d006b(0xa62)], _0x21a48c = _0x21fe7e[_0x1d006b(0xa4f)](), _0x489a58 = _0x21fe7e[_0x1d006b(0x828)]();
            _0x3f70c5[_0x1d006b(0x204)](_0x21a48c, _0x5a37ff, _0x21a48c), _0x3f70c5[_0x1d006b(0x204)](_0x21a48c, _0x3daa6d, _0x21a48c), _0x3f70c5['max'](_0x489a58, _0x5a37ff, _0x489a58), _0x3f70c5[_0x1d006b(0x205)](_0x489a58, _0x3daa6d, _0x489a58), _0x21fe7e[_0x1d006b(0xa6b)](_0x21a48c), _0x21fe7e[_0x1d006b(0xa51)](_0x489a58), (_0x1d9d74[0x0] = _0x21a48c['x'], _0x1d9d74[0x1] = _0x21a48c['y'], _0x1d9d74[0x2] = _0x21a48c['z']), (_0x1d9d74[0x3] = _0x489a58['x'], _0x1d9d74[0x4] = _0x489a58['y'], _0x1d9d74[0x5] = _0x489a58['z']);
        }
        ['_reCalculateBound']() {
            var _0x46a9d7 = _0x5659be;
            if (this[_0x46a9d7(0xa63)]) {
                var _0x57f39b = this['_vertices'], _0x482c17 = _0x1c9d51[_0x46a9d7(0x478)], _0x2c10a3 = _0x1c9d51[_0x46a9d7(0x479)];
                _0x482c17[_0x46a9d7(0x1fa)](Number[_0x46a9d7(0xa46)], Number[_0x46a9d7(0xa46)], Number[_0x46a9d7(0xa46)]), _0x2c10a3['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']);
                for (var _0x37456d = 0x0; _0x37456d < this[_0x46a9d7(0xa65)] * 0x2; ++_0x37456d) {
                    var _0x4ed9e8 = this[_0x46a9d7(0xa66)] * _0x37456d, _0x2c5056 = _0x57f39b[_0x4ed9e8 + 0x0], _0x664bd7 = _0x57f39b[_0x4ed9e8 + 0x1], _0x47c524 = _0x57f39b[_0x4ed9e8 + 0x2];
                    _0x482c17['x'] = Math['min'](_0x2c5056, _0x482c17['x']), _0x482c17['y'] = Math[_0x46a9d7(0x204)](_0x664bd7, _0x482c17['y']), _0x482c17['z'] = Math[_0x46a9d7(0x204)](_0x47c524, _0x482c17['z']), _0x2c10a3['x'] = Math[_0x46a9d7(0x205)](_0x2c5056, _0x2c10a3['x']), _0x2c10a3['y'] = Math[_0x46a9d7(0x205)](_0x664bd7, _0x2c10a3['y']), _0x2c10a3['z'] = Math[_0x46a9d7(0x205)](_0x47c524, _0x2c10a3['z']);
                }
                this[_0x46a9d7(0xa67)][_0x46a9d7(0xa6b)](_0x482c17), this[_0x46a9d7(0xa67)][_0x46a9d7(0xa51)](_0x2c10a3);
                var _0x5a6413 = this[_0x46a9d7(0xa62)];
                _0x5a6413[0x0] = _0x482c17['x'], _0x5a6413[0x1] = _0x482c17['y'], _0x5a6413[0x2] = _0x482c17['z'], (_0x5a6413[0x3] = _0x2c10a3['x'], _0x5a6413[0x4] = _0x2c10a3['y'], _0x5a6413[0x5] = _0x2c10a3['z']), this[_0x46a9d7(0xa63)] = ![];
            }
        }
        [_0x5659be(0xa6c)](_0x428b5f) {
            var _0x31b678 = _0x5659be, _0xb1e016 = this['_floatCountPerVertices'] * 0x2, _0x4fc2f0 = _0x428b5f + 0x1, _0x4d7e1f = _0x428b5f * _0xb1e016, _0x2bb21c = this[_0x31b678(0x4fa)], _0x5762e8 = new Float32Array(_0x2bb21c[_0x31b678(0x448)], _0x4fc2f0 * _0xb1e016 * 0x4, (this[_0x31b678(0xa65)] - _0x4fc2f0) * _0xb1e016);
            _0x2bb21c['set'](_0x5762e8, _0x4d7e1f), this[_0x31b678(0xa6a)] = Math['min'](this[_0x31b678(0xa6a)], _0x4d7e1f), this[_0x31b678(0xa61)] = Math['max'](this['_maxUpdate'], _0x4d7e1f + _0x5762e8[_0x31b678(0x1ff)]), this[_0x31b678(0xa65)]--;
            var _0x307584 = this[_0x31b678(0xa62)], _0x61bdc0 = _0x2bb21c[_0x4d7e1f], _0x5e280a = _0x2bb21c[_0x4d7e1f + 0x1], _0x270c9d = _0x2bb21c[_0x4d7e1f + 0x2], _0x9d53cd = _0x2bb21c[_0x4d7e1f + 0x7], _0x21859b = _0x2bb21c[_0x4d7e1f + 0x8], _0x1088af = _0x2bb21c[_0x4d7e1f + 0x9], _0x5262ec = _0x307584[0x0], _0x1986c2 = _0x307584[0x1], _0x573fe3 = _0x307584[0x2], _0x35776f = _0x307584[0x3], _0x43fc05 = _0x307584[0x4], _0x1154af = _0x307584[0x5];
            if (_0x61bdc0 === _0x5262ec || _0x61bdc0 === _0x35776f || _0x5e280a === _0x1986c2 || _0x5e280a === _0x43fc05 || _0x270c9d === _0x573fe3 || _0x270c9d === _0x1154af || _0x9d53cd === _0x5262ec || _0x9d53cd === _0x35776f || _0x21859b === _0x1986c2 || _0x21859b === _0x43fc05 || _0x1088af === _0x573fe3 || _0x1088af === _0x1154af)
                this[_0x31b678(0xa63)] = !![];
        }
        [_0x5659be(0xa6d)](_0x5a1d99, _0xdb9eb0, _0x3f837b, _0x5a9fa7, _0x5cb5ee) {
            var _0x2cc711 = this['_floatCountPerVertices'] * 0x2;
            this['_updateLineVertices'](_0x5a1d99 * _0x2cc711, _0xdb9eb0, _0x3f837b, _0x5a9fa7, _0x5cb5ee);
        }
        [_0x5659be(0xa6e)](_0x5422f9, _0xa2e4ef) {
            var _0x59bcb7 = _0x5659be, _0x2403ff = this[_0x59bcb7(0xa66)] * 0x2, _0x338b4e = _0xa2e4ef[_0x59bcb7(0x1ff)];
            for (var _0x1999b3 = 0x0; _0x1999b3 < _0x338b4e; _0x1999b3++) {
                var _0x54d37c = _0xa2e4ef[_0x1999b3];
                this[_0x59bcb7(0xa6f)]((_0x5422f9 + _0x1999b3) * _0x2403ff, _0x54d37c[_0x59bcb7(0xa70)], _0x54d37c[_0x59bcb7(0xa71)], _0x54d37c['startColor'], _0x54d37c[_0x59bcb7(0xa72)]);
            }
        }
        [_0x5659be(0xa73)](_0x110846, _0x1c4ddb) {
            var _0x551f71 = _0x5659be, _0x44cf4c = _0x1c4ddb['startPosition'], _0x46376e = _0x1c4ddb[_0x551f71(0xa74)], _0x606d0c = _0x1c4ddb[_0x551f71(0xa71)], _0x5455a3 = _0x1c4ddb[_0x551f71(0xa72)], _0x1e2b5d = this[_0x551f71(0x4fa)], _0x72ad50 = _0x110846 * this['_floatCountPerVertices'] * 0x2;
            _0x44cf4c['x'] = _0x1e2b5d[_0x72ad50 + 0x0], _0x44cf4c['y'] = _0x1e2b5d[_0x72ad50 + 0x1], _0x44cf4c['z'] = _0x1e2b5d[_0x72ad50 + 0x2], _0x46376e['r'] = _0x1e2b5d[_0x72ad50 + 0x3], _0x46376e['g'] = _0x1e2b5d[_0x72ad50 + 0x4], _0x46376e['b'] = _0x1e2b5d[_0x72ad50 + 0x5], _0x46376e['a'] = _0x1e2b5d[_0x72ad50 + 0x6], _0x606d0c['x'] = _0x1e2b5d[_0x72ad50 + 0x7], _0x606d0c['y'] = _0x1e2b5d[_0x72ad50 + 0x8], _0x606d0c['z'] = _0x1e2b5d[_0x72ad50 + 0x9], _0x5455a3['r'] = _0x1e2b5d[_0x72ad50 + 0xa], _0x5455a3['g'] = _0x1e2b5d[_0x72ad50 + 0xb], _0x5455a3['b'] = _0x1e2b5d[_0x72ad50 + 0xc], _0x5455a3['a'] = _0x1e2b5d[_0x72ad50 + 0xd];
        }
        [_0x5659be(0x5e8)](_0x1659aa) {
            return !![];
        }
        [_0x5659be(0x5e6)](_0x100de6) {
            var _0x1a271e = _0x5659be;
            this['_minUpdate'] !== Number[_0x1a271e(0xa46)] && this[_0x1a271e(0xa61)] !== Number[_0x1a271e(0x8c5)] && (this[_0x1a271e(0x4f9)][_0x1a271e(0x4fd)](this[_0x1a271e(0x4fa)][_0x1a271e(0x448)], this[_0x1a271e(0xa6a)] * 0x4, this['_minUpdate'] * 0x4, (this['_maxUpdate'] - this[_0x1a271e(0xa6a)]) * 0x4), this['_minUpdate'] = Number[_0x1a271e(0xa46)], this[_0x1a271e(0xa61)] = Number[_0x1a271e(0x8c5)]);
            if (this[_0x1a271e(0xa65)] > 0x0) {
                this['_bufferState'][_0x1a271e(0x444)]();
                var _0x4a4401 = _0x218b83[_0x1a271e(0x2f3)]['instance'];
                _0x4a4401[_0x1a271e(0x503)](_0x4a4401[_0x1a271e(0xa75)], 0x0, this['_lineCount'] * 0x2), _0x218b83[_0x1a271e(0x500)]['renderBatches']++;
            }
        }
        ['destroy']() {
            var _0x271d73 = _0x5659be;
            if (this[_0x271d73(0xa5f)])
                return;
            super[_0x271d73(0x311)](), this[_0x271d73(0x4f6)][_0x271d73(0x311)](), this[_0x271d73(0x4f9)]['destroy'](), this[_0x271d73(0x4f6)] = null, this[_0x271d73(0x4f9)] = null, this[_0x271d73(0x4fa)] = null;
        }
    }
    _0x1c9d51[_0x5659be(0x478)] = new _0x3f70c5(), _0x1c9d51[_0x5659be(0x479)] = new _0x3f70c5(), _0x1c9d51['_type'] = _0x319422[_0x5659be(0xa60)]++;
    class _0x200920 extends _0x356e58 {
        constructor(_0x26e6fa) {
            super(_0x26e6fa);
        }
        static [_0x5659be(0x229)]() {
            var _0x1c6a73 = _0x5659be;
            _0x200920[_0x1c6a73(0xa76)] = _0x84b6d6[_0x1c6a73(0x510)](_0x1c6a73(0xa77)), _0x200920[_0x1c6a73(0xa78)] = _0x84b6d6[_0x1c6a73(0x510)](_0x1c6a73(0xa79)), _0x200920[_0x1c6a73(0xa7a)] = _0x84b6d6[_0x1c6a73(0x510)](_0x1c6a73(0xa7b));
        }
        ['_onInActive']() {
            var _0x57c8ca = _0x5659be;
            super[_0x57c8ca(0x8fa)](), this[_0x57c8ca(0x3a6)][_0x57c8ca(0xa7c)](this[_0x57c8ca(0x5e6)]);
        }
        [_0x5659be(0x8f7)]() {
            var _0x4f59b9 = _0x5659be;
            super[_0x4f59b9(0x8f7)](), this[_0x4f59b9(0x3a6)][_0x4f59b9(0xa7d)](this[_0x4f59b9(0x5e6)]);
        }
        [_0x5659be(0xa7e)]() {
            var _0x3b2343 = _0x5659be;
            super['_onActiveInScene']();
            if (_0x429ec3[_0x3b2343(0xa7f)][_0x3b2343(0x237)]) {
                var _0x57e868 = this[_0x3b2343(0x3a6)], _0x2aa614 = new _0x8fb80();
                _0x57e868[_0x3b2343(0xa80)](this['id'], _0x2aa614), _0x57e868[_0x3b2343(0xa81)][this['id']] = this, this[_0x3b2343(0x5e6)][_0x3b2343(0x4e0)][_0x3b2343(0x49d)](_0x200920[_0x3b2343(0xa82)], _0x2aa614);
            }
        }
        [_0x5659be(0xa83)]() {
        }
        [_0x5659be(0xa84)](_0x43a666) {
            var _0x59a56c = _0x5659be;
            super[_0x59a56c(0xa84)](_0x43a666), this[_0x59a56c(0x5e6)]['_setBelongScene'](_0x43a666);
        }
        [_0x5659be(0xa85)]() {
            var _0x5b1959 = _0x5659be;
            !this['destroyed'] && (this['_render'][_0x5b1959(0x4e0)][_0x5b1959(0x493)](_0x200920[_0x5b1959(0xa78)]), this[_0x5b1959(0x5e6)][_0x5b1959(0xa85)](), super[_0x5b1959(0xa85)]());
        }
        ['_changeHierarchyAnimator'](_0x56b3a9) {
            var _0x26d22e = _0x5659be;
            if (this['_hierarchyAnimator']) {
                var _0x7cd450 = this[_0x26d22e(0x3a3)][_0x26d22e(0x376)];
                _0x7cd450[_0x26d22e(0x32c)](_0x7cd450[_0x26d22e(0x384)](this), 0x1);
            }
            if (_0x56b3a9)
                _0x56b3a9[_0x26d22e(0x376)]['push'](this);
            super[_0x26d22e(0x5c7)](_0x56b3a9);
        }
        [_0x5659be(0x311)](_0x5eb970 = !![]) {
            var _0x30e20a = _0x5659be;
            super[_0x30e20a(0x311)](_0x5eb970), this[_0x30e20a(0x5e6)][_0x30e20a(0xa86)](), this[_0x30e20a(0x5e6)] = null;
        }
        [_0x5659be(0x5d2)]() {
            var _0x103101 = _0x5659be;
            return new _0x200920(this[_0x103101(0x2a5)]);
        }
    }
    _0x200920[_0x5659be(0xa87)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa88)), _0x200920['LIGHTMAP'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xa89)), _0x200920['LIGHTMAP_DIRECTION'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa8a)), _0x200920[_0x5659be(0xa82)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa8b)), _0x200920[_0x5659be(0xa8c)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa8d)), _0x200920[_0x5659be(0xa8e)] = _0x84b6d6[_0x5659be(0x526)]('u_ReflectCubeHDRParams'), _0x200920['REFLECTIONCUBE_PROBEPOSITION'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa8f)), _0x200920[_0x5659be(0xa90)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xa91)), _0x200920[_0x5659be(0xa92)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xa93));
    class _0x32eb43 {
        constructor() {
            var _0x1c017a = _0x5659be;
            this['updateMark'] = -0x1, this[_0x1c017a(0x366)] = -0x1, this[_0x1c017a(0xa94)] = ![];
        }
    }
    class _0x269d35 extends _0x319422 {
        constructor() {
            var _0x17128e = _0x5659be;
            super(), this[_0x17128e(0xa95)] = new Float32Array(_0x269d35[_0x17128e(0x61c)] * 0x10), this[_0x17128e(0xa96)] = new Float32Array(_0x269d35[_0x17128e(0x61c)] * 0x4);
            var _0x1a8389 = _0x218b83[_0x17128e(0x2f3)]['instance'];
            this[_0x17128e(0xa97)] = new _0x57a6a2(this['instanceWorldMatrixData']['length'] * 0x4, _0x1a8389[_0x17128e(0xa98)]), this[_0x17128e(0xa97)][_0x17128e(0x449)] = _0x13bc8a[_0x17128e(0x61b)], this[_0x17128e(0xa99)] = new _0x57a6a2(this[_0x17128e(0xa96)][_0x17128e(0x1ff)] * 0x4, _0x1a8389[_0x17128e(0xa98)]), this['instanceSimpleAnimatorBuffer'][_0x17128e(0x449)] = _0x13bc8a['instanceSimpleAnimatorDeclaration'];
        }
        static ['__init__']() {
            var _0x111c1b = _0x5659be;
            _0x269d35[_0x111c1b(0x2f4)] = new _0x269d35();
        }
        [_0x5659be(0x5e6)](_0x526b7f) {
            var _0x58875d = _0x5659be, _0x22f040 = _0x218b83[_0x58875d(0x2f3)][_0x58875d(0x2f4)], _0xdee110 = _0x526b7f[_0x58875d(0xa9a)], _0x48087a = _0xdee110[_0x58875d(0xa9b)], _0x173633 = _0xdee110[_0x58875d(0xa9c)][_0x58875d(0x1ff)], _0x5b7c98 = _0x48087a[_0x58875d(0x627)];
            _0x48087a[_0x58875d(0x5d7)]['_instanceBufferState'][_0x58875d(0x444)](), _0x218b83[_0x58875d(0x2f3)]['layaGPUInstance'][_0x58875d(0x628)](_0x22f040[_0x58875d(0x507)], _0x5b7c98, _0x22f040['UNSIGNED_SHORT'], _0x48087a[_0x58875d(0x629)] * 0x2, _0x173633), _0x218b83[_0x58875d(0x500)]['renderBatches']++, _0x218b83['Stat']['savedRenderBatches'] += _0x173633 - 0x1, _0x218b83[_0x58875d(0x500)]['trianglesFaces'] += _0x5b7c98 * _0x173633 / 0x3;
        }
    }
    _0x269d35[_0x5659be(0x61c)] = 0x400;
    class _0x5551c8 {
        constructor() {
            var _0x379ac0 = _0x5659be;
            this[_0x379ac0(0x5f6)] = null, this[_0x379ac0(0x5f1)] = _0x5551c8['RENDERTYPE_NORMAL'];
        }
        ['getInvertFront']() {
            var _0x3b0b17 = _0x5659be;
            return this[_0x3b0b17(0x3ca)][_0x3b0b17(0xa9d)];
        }
        [_0x5659be(0xa9e)](_0x1194a2) {
            var _0x5613d5 = _0x5659be;
            this[_0x5613d5(0x3ca)] = _0x1194a2;
        }
        ['setGeometry'](_0x16e533) {
            this['_geometry'] = _0x16e533;
        }
        [_0x5659be(0xa9f)](_0x49c126, _0x5ac1de) {
            var _0x291d7a = _0x5659be;
            _0x5ac1de[_0x291d7a(0x1f6)][_0x291d7a(0x201)](this);
        }
        ['addToTransparentRenderQueue'](_0x1b8efe, _0x2587e8) {
            var _0x25d706 = _0x5659be;
            _0x2587e8['elements'][_0x25d706(0x201)](this), _0x2587e8[_0x25d706(0xaa0)] = ![], _0x2587e8[_0x25d706(0xaa1)] = this;
        }
        [_0x5659be(0x3b3)](_0x483410, _0x477607, _0x399247, _0xb3a53c, _0x1c3fa3 = 0x0) {
            var _0xfe948 = _0x5659be;
            if (this[_0xfe948(0x8d6)]) {
                var _0x2c838a = this[_0xfe948(0x8d6)][_0xfe948(0x50a)][_0xfe948(0x50e)](0x0);
                this['renderSubShader'] = null;
                if (_0x399247) {
                    if (_0xb3a53c) {
                        var _0x452b10 = _0x2c838a['getFlag'](_0xb3a53c);
                        if (_0x452b10) {
                            var _0x44b7aa = _0x399247['_subShaders'];
                            for (var _0x934991 = 0x0, _0x3d006f = _0x44b7aa[_0xfe948(0x1ff)]; _0x934991 < _0x3d006f; _0x934991++) {
                                var _0x1d6931 = _0x44b7aa[_0x934991];
                                if (_0x452b10 === _0x1d6931[_0xfe948(0xaa2)](_0xb3a53c)) {
                                    this[_0xfe948(0x5f6)] = _0x1d6931;
                                    break;
                                }
                            }
                            if (!this[_0xfe948(0x5f6)])
                                return;
                        } else
                            return;
                    } else
                        this[_0xfe948(0x5f6)] = _0x399247[_0xfe948(0x50e)](_0x1c3fa3);
                } else
                    this['renderSubShader'] = _0x2c838a;
                var _0x187211 = _0x483410[_0xfe948(0xaa3)](this['material']['renderQueue']);
                if (_0x187211[_0xfe948(0xaa4)])
                    this[_0xfe948(0xaa5)](_0x477607, _0x187211);
                else
                    this[_0xfe948(0xa9f)](_0x477607, _0x187211);
            }
        }
        ['_render'](_0x2236cf) {
            var _0x44bb89 = _0x5659be, _0x3e100f = _0x2236cf[_0x44bb89(0x3d7)], _0x1649fc, _0x2c6ef2, _0x59a028, _0xdc4024 = _0x428ec4[_0x44bb89(0x37b)], _0x2ede02 = _0x2236cf[_0x44bb89(0x5da)], _0x1e8d6b = _0x2236cf['cameraShaderValue'], _0x366973 = this[_0x44bb89(0x3ca)], _0x31f115 = this[_0x44bb89(0x5f0)];
            _0x2236cf[_0x44bb89(0xa9a)] = this;
            var _0x1cd0a1 = _0xdc4024 !== this[_0x44bb89(0x506)][_0x44bb89(0x37b)] || this['renderType'] !== this[_0x44bb89(0x506)][_0x44bb89(0x5f2)];
            _0x1cd0a1 ? (this[_0x44bb89(0x506)][_0x44bb89(0x5f3)](_0x2236cf, _0x366973), this['render'][_0x44bb89(0x5f4)](_0x2236cf, _0x366973), this['render'][_0x44bb89(0x37b)] = _0xdc4024, this['render'][_0x44bb89(0x5f2)] = this[_0x44bb89(0x5f1)]) : this[_0x44bb89(0x5f1)] == _0x5551c8[_0x44bb89(0xaa6)] && (this['render'][_0x44bb89(0x5f3)](_0x2236cf, _0x366973), this[_0x44bb89(0x506)]['_renderUpdateWithCamera'](_0x2236cf, _0x366973));
            var _0x516c9a = _0x2236cf[_0x44bb89(0x5df)];
            if (_0x31f115[_0x44bb89(0x5e8)](_0x2236cf)) {
                var _0x3d37bb = this[_0x44bb89(0x5f6)][_0x44bb89(0x50f)];
                for (var _0x4e874b = 0x0, _0x3d91f0 = _0x3d37bb[_0x44bb89(0x1ff)]; _0x4e874b < _0x3d91f0; _0x4e874b++) {
                    var _0x522f65 = _0x3d37bb[_0x4e874b];
                    if (_0x522f65['_pipelineMode'] !== _0x516c9a)
                        continue;
                    var _0x1f1918 = _0x5551c8[_0x44bb89(0x565)];
                    _0x2ede02[_0x44bb89(0x4e0)][_0x44bb89(0x490)][_0x44bb89(0x1f0)](_0x1f1918), _0x1f1918[_0x44bb89(0x43b)](this[_0x44bb89(0x506)]['_shaderValues'][_0x44bb89(0x490)]), _0x1f1918[_0x44bb89(0x43b)](this['material'][_0x44bb89(0x4e0)]['_defineDatas']);
                    var _0x747f22 = _0x2236cf[_0x44bb89(0x509)] = _0x522f65['withCompile'](_0x1f1918), _0x3089fa = _0x747f22[_0x44bb89(0x444)](), _0x30f750 = _0xdc4024 !== _0x747f22[_0x44bb89(0x5f7)], _0x17a589 = _0x747f22['_uploadScene'] !== _0x2ede02 || _0x30f750;
                    (_0x17a589 || _0x3089fa) && (_0x747f22[_0x44bb89(0x566)](_0x747f22[_0x44bb89(0x5e1)], _0x2ede02['_shaderValues'], _0x17a589), _0x747f22['_uploadScene'] = _0x2ede02);
                    var _0x3304ff = _0x747f22[_0x44bb89(0x5f9)] !== this[_0x44bb89(0x506)] || _0x747f22[_0x44bb89(0x5fa)] !== this[_0x44bb89(0x5f1)] || _0x30f750;
                    (_0x3304ff || _0x3089fa) && (_0x747f22['uploadUniforms'](_0x747f22['_spriteUniformParamsMap'], this[_0x44bb89(0x506)][_0x44bb89(0x4e0)], _0x3304ff), _0x747f22['_uploadRender'] = this[_0x44bb89(0x506)], _0x747f22[_0x44bb89(0x5fa)] = this[_0x44bb89(0x5f1)]);
                    var _0xda274d = _0x747f22[_0x44bb89(0x5fb)] !== _0x1e8d6b || _0x30f750;
                    (_0xda274d || _0x3089fa) && (_0x747f22[_0x44bb89(0x566)](_0x747f22['_cameraUniformParamsMap'], _0x1e8d6b, _0xda274d), _0x747f22[_0x44bb89(0x5fb)] = _0x1e8d6b);
                    var _0x9fbe15 = _0x747f22['_uploadMaterial'] !== this['material'] || _0x30f750;
                    (_0x9fbe15 || _0x3089fa) && (_0x747f22[_0x44bb89(0x566)](_0x747f22[_0x44bb89(0x567)], this[_0x44bb89(0x8d6)]['_shaderValues'], _0x9fbe15), _0x747f22[_0x44bb89(0x5fc)] = this[_0x44bb89(0x8d6)]);
                    var _0x269a3e = this[_0x44bb89(0x8d6)]['_shaderValues'];
                    _0x1649fc !== this['material'] || _0x2c6ef2 !== _0x747f22 ? (_0x747f22[_0x44bb89(0x5e4)](_0x269a3e), _0x747f22[_0x44bb89(0x62e)](_0x269a3e, _0x3e100f, this[_0x44bb89(0x48d)]()), _0x1649fc = this[_0x44bb89(0x8d6)], _0x2c6ef2 = _0x747f22, _0x59a028 = this[_0x44bb89(0x506)]) : _0x59a028 !== this[_0x44bb89(0x506)] && (_0x747f22[_0x44bb89(0x62e)](_0x269a3e, _0x3e100f, this[_0x44bb89(0x48d)]()), _0x59a028 = this[_0x44bb89(0x506)]), _0x31f115[_0x44bb89(0x5e6)](_0x2236cf), _0x747f22[_0x44bb89(0x5f7)] = _0xdc4024;
                }
            }
            if (this[_0x44bb89(0x5f1)] !== _0x5551c8['RENDERTYPE_NORMAL'])
                this[_0x44bb89(0x506)][_0x44bb89(0x5fe)](_0x2236cf);
        }
        [_0x5659be(0x311)]() {
            var _0x9e8020 = _0x5659be;
            this[_0x9e8020(0x3ca)] = null, this[_0x9e8020(0x5f0)] = null, this[_0x9e8020(0x8d6)] = null, this[_0x9e8020(0x506)] = null;
        }
    }
    _0x5551c8[_0x5659be(0x5fd)] = 0x0, _0x5551c8[_0x5659be(0xaa7)] = 0x1, _0x5551c8[_0x5659be(0xaa6)] = 0x2, _0x5551c8['RENDERTYPE_VERTEXBATCH'] = 0x3, _0x5551c8[_0x5659be(0x565)] = new _0x23f873();
    class _0x1c6dea extends _0x5551c8 {
        constructor() {
            var _0x5c213b = _0x5659be;
            super(), this[_0x5c213b(0xaa8)] = !![];
        }
        ['_onWorldMatrixChanged']() {
            var _0x1f9378 = _0x5659be;
            this[_0x1f9378(0xaa8)] = !![];
        }
        ['_computeWorldPositionsAndNormals'](_0x34a1e5, _0x12be1a, _0x84d5b5, _0x5a5f5d) {
            var _0x343211 = _0x5659be;
            if (this[_0x343211(0xaa8)]) {
                var _0x1965db = this[_0x343211(0x5f0)], _0x348017 = _0x1965db[_0x343211(0x4f9)], _0x35f599 = _0x348017[_0x343211(0x449)][_0x343211(0x4e4)] / 0x4, _0x8ef137 = _0x348017['getFloat32Data'](), _0x4e99fa = this['_transform']['worldMatrix'], _0x5eed0a = this[_0x343211(0x3ca)][_0x343211(0x5a0)], _0xffc660 = _0x1965db[_0x343211(0xaa9)];
                for (var _0x5a52b4 = 0x0; _0x5a52b4 < _0x5a5f5d; _0x5a52b4++) {
                    var _0x10fc82 = _0x84d5b5 ? _0xffc660[_0x5a52b4] : _0x5a52b4, _0x5614cc = _0x10fc82 * _0x35f599, _0x521b30 = _0x5a52b4 * 0x3;
                    _0x108d81[_0x343211(0x2e7)](_0x8ef137, _0x5614cc + _0x34a1e5, _0x4e99fa, this[_0x343211(0xaaa)], _0x521b30), _0x12be1a !== -0x1 && _0x108d81[_0x343211(0xaab)](_0x8ef137, _0x5614cc + _0x12be1a, _0x5eed0a, this['_dynamicWorldNormals'], _0x521b30);
                }
                this[_0x343211(0xaa8)] = ![];
            }
        }
        [_0x5659be(0xa9e)](_0x18e76c) {
            var _0x25a8ad = _0x5659be;
            this[_0x25a8ad(0x3ca)] !== _0x18e76c && (this[_0x25a8ad(0x3ca)] && this[_0x25a8ad(0x3ca)][_0x25a8ad(0x8fc)](_0x218b83[_0x25a8ad(0x5ab)]['TRANSFORM_CHANGED'], this, this[_0x25a8ad(0xaac)]), _0x18e76c && _0x18e76c['on'](_0x218b83[_0x25a8ad(0x5ab)]['TRANSFORM_CHANGED'], this, this[_0x25a8ad(0xaac)]), this['_dynamicWorldPositionNormalNeedUpdate'] = !![], this[_0x25a8ad(0x3ca)] = _0x18e76c);
        }
        ['setGeometry'](_0x5b50e4) {
            var _0x29982b = _0x5659be;
            if (this[_0x29982b(0x5f0)] !== _0x5b50e4) {
                var _0x26422a = _0x5b50e4, _0x47fd38 = _0x26422a[_0x29982b(0x5d7)];
                if (_0x47fd38) {
                    var _0x178f1d = _0x47fd38[_0x29982b(0x5e5)]['length'] > 0x1, _0x4f7af1 = _0x178f1d ? _0x26422a[_0x29982b(0x627)] : _0x47fd38[_0x29982b(0xaad)];
                    if (_0x4f7af1 <= _0x429ec3[_0x29982b(0xaae)][_0x29982b(0xaaf)]) {
                        var _0xf8bb06 = _0x4f7af1 * 0x3;
                        this[_0x29982b(0xab0)] = !![], this[_0x29982b(0xaaa)] = new Float32Array(_0xf8bb06), this[_0x29982b(0xab1)] = new Float32Array(_0xf8bb06), this[_0x29982b(0xab2)] = _0x4f7af1, this[_0x29982b(0xab3)] = _0x178f1d;
                    } else
                        this[_0x29982b(0xab0)] = ![];
                }
                this['_geometry'] = _0x5b50e4;
            }
        }
        [_0x5659be(0xa9f)](_0x3e5a9e, _0x3a3e13) {
            var _0x54282e = _0x5659be, _0xceaf1c = this[_0x54282e(0xab4)], _0x27571c = _0x3a3e13[_0x54282e(0x1f6)], _0x334e8e = _0x27571c['elements'];
            if (_0xceaf1c && (!this['render'][_0x54282e(0xab5)] || this[_0x54282e(0x506)][_0x54282e(0xab5)]['_isScene']) && _0x1c6dea[_0x54282e(0x24a)]) {
                var _0x213c6d = _0x429ec3['MeshRenderStaticBatchManager'][_0x54282e(0x2f4)], _0x19754d = _0x213c6d[_0x54282e(0xab6)](this[_0x54282e(0x506)][_0x54282e(0xab7)] + 0x1, this[_0x54282e(0x506)][_0x54282e(0xab8)], this[_0x54282e(0x8d6)]['id'], _0xceaf1c[_0x54282e(0xab9)]);
                if (_0x213c6d['_updateCountMark'] === _0x19754d['updateMark']) {
                    var _0x9dbfc3 = _0x19754d[_0x54282e(0x366)];
                    if (_0x19754d[_0x54282e(0xa94)])
                        _0x334e8e[_0x9dbfc3]['staticBatchElementList'][_0x54282e(0x201)](this);
                    else {
                        var _0x3cf0e8 = _0x334e8e[_0x9dbfc3], _0x1739e3 = _0x3cf0e8[_0x54282e(0x506)], _0x115439 = _0x213c6d['_getBatchRenderElementFromPool']();
                        _0x115439['renderType'] = _0x5551c8[_0x54282e(0xaa7)], _0x115439[_0x54282e(0xaba)](_0xceaf1c), _0x115439[_0x54282e(0x8d6)] = _0x3cf0e8[_0x54282e(0x8d6)];
                        var _0x2adb57 = _0xceaf1c[_0x54282e(0xabb)], _0x25fd6f = _0x2adb57 ? _0x2adb57[_0x54282e(0x3ca)] : null;
                        _0x115439[_0x54282e(0xa9e)](_0x25fd6f), _0x115439[_0x54282e(0x506)] = _0x1739e3, _0x115439[_0x54282e(0x5f6)] = _0x3cf0e8[_0x54282e(0x5f6)];
                        var _0x8c3ecb = _0x115439[_0x54282e(0xabc)];
                        _0x8c3ecb['length'] = 0x0, _0x8c3ecb[_0x54282e(0x201)](_0x3cf0e8), _0x8c3ecb[_0x54282e(0x201)](this), _0x334e8e[_0x9dbfc3] = _0x115439, _0x19754d[_0x54282e(0xa94)] = !![];
                    }
                } else
                    _0x19754d[_0x54282e(0x368)] = _0x213c6d['_updateCountMark'], _0x19754d[_0x54282e(0x366)] = _0x27571c['length'], _0x19754d[_0x54282e(0xa94)] = ![], _0x27571c[_0x54282e(0x201)](this);
            } else {
                if (_0x1c6dea[_0x54282e(0x248)] && this[_0x54282e(0x5f6)]['_owner'][_0x54282e(0x520)] && _0x218b83[_0x54282e(0x2f3)]['layaGPUInstance'][_0x54282e(0x644)]() && this[_0x54282e(0x506)][_0x54282e(0xab7)] < 0x0 && (!this[_0x54282e(0x506)][_0x54282e(0xab5)] || this[_0x54282e(0x506)][_0x54282e(0xab5)]['_isScene'])) {
                    var _0x2caa3e = this[_0x54282e(0x5f0)], _0xb0f2c1 = _0x429ec3[_0x54282e(0x221)][_0x54282e(0x2f4)], _0x462a44 = _0xb0f2c1[_0x54282e(0xabd)](this[_0x54282e(0x506)][_0x54282e(0xab8)], this[_0x54282e(0x8d6)]['id'], _0x2caa3e[_0x54282e(0xabe)], this[_0x54282e(0x3ca)]['_isFrontFaceInvert']);
                    if (_0xb0f2c1[_0x54282e(0xabf)] === _0x462a44[_0x54282e(0x368)]) {
                        var _0x42e9d1 = _0x462a44[_0x54282e(0x366)];
                        if (_0x462a44[_0x54282e(0xa94)]) {
                            var _0x3d0e2d = _0x334e8e[_0x42e9d1][_0x54282e(0xa9c)];
                            _0x3d0e2d[_0x54282e(0x1ff)] === _0x269d35[_0x54282e(0x61c)] ? (_0x462a44[_0x54282e(0x368)] = _0xb0f2c1['_updateCountMark'], _0x462a44[_0x54282e(0x366)] = _0x27571c[_0x54282e(0x1ff)], _0x462a44[_0x54282e(0xa94)] = ![], _0x27571c[_0x54282e(0x201)](this)) : _0x3d0e2d[_0x54282e(0x201)](this);
                        } else {
                            var _0x2c9378 = _0x334e8e[_0x42e9d1], _0x57d00b = _0x2c9378[_0x54282e(0x506)], _0x36d441 = _0xb0f2c1['_getBatchRenderElementFromPool']();
                            _0x36d441[_0x54282e(0x5f1)] = _0x5551c8[_0x54282e(0xaa6)], _0x36d441['setGeometry'](_0x269d35['instance']), _0x36d441['material'] = _0x2c9378['material'], _0x36d441[_0x54282e(0xa9e)](null), _0x36d441[_0x54282e(0x506)] = _0x57d00b, _0x36d441['instanceSubMesh'] = _0x2caa3e, _0x36d441[_0x54282e(0x5f6)] = _0x2c9378[_0x54282e(0x5f6)];
                            var _0x21b258 = _0x36d441[_0x54282e(0xa9c)];
                            _0x21b258[_0x54282e(0x1ff)] = 0x0, _0x21b258[_0x54282e(0x201)](_0x2c9378), _0x21b258[_0x54282e(0x201)](this), _0x334e8e[_0x42e9d1] = _0x36d441, _0x462a44['batched'] = !![];
                        }
                    } else
                        _0x462a44['updateMark'] = _0xb0f2c1['_updateCountMark'], _0x462a44[_0x54282e(0x366)] = _0x27571c[_0x54282e(0x1ff)], _0x462a44[_0x54282e(0xa94)] = ![], _0x27571c['add'](this);
                } else {
                    if (this[_0x54282e(0xab0)] && _0x1c6dea[_0x54282e(0x248)]) {
                        var _0x1fb7a9 = this[_0x54282e(0x5f0)][_0x54282e(0x4f9)][_0x54282e(0x449)], _0xe6bcff = _0x429ec3[_0x54282e(0x221)][_0x54282e(0x2f4)], _0x70778c = _0xe6bcff[_0x54282e(0xac0)](this[_0x54282e(0x506)]['lightmapIndex'] + 0x1, this['render'][_0x54282e(0xab8)], this[_0x54282e(0x8d6)]['id'], _0x1fb7a9['id']);
                        if (_0xe6bcff['_updateCountMark'] === _0x70778c[_0x54282e(0x368)]) {
                            var _0x2ab187 = _0x70778c[_0x54282e(0x366)];
                            if (_0x70778c[_0x54282e(0xa94)])
                                _0x334e8e[_0x2ab187][_0x54282e(0xac1)]['add'](this);
                            else {
                                var _0x3b6a68 = _0x334e8e[_0x2ab187], _0x24713b = _0x3b6a68['render'], _0x376352 = _0xe6bcff[_0x54282e(0xac2)]();
                                _0x376352[_0x54282e(0x5f1)] = _0x5551c8[_0x54282e(0xac3)], _0x376352[_0x54282e(0xaba)](_0x429ec3['SubMeshDynamicBatch'][_0x54282e(0x2f4)]), _0x376352[_0x54282e(0x8d6)] = _0x3b6a68['material'], _0x376352['setTransform'](null), _0x376352[_0x54282e(0x506)] = _0x24713b, _0x376352[_0x54282e(0xac4)] = _0x1fb7a9, _0x376352[_0x54282e(0x5f6)] = _0x3b6a68[_0x54282e(0x5f6)];
                                var _0x13a08e = _0x376352[_0x54282e(0xac1)];
                                _0x13a08e['length'] = 0x0, _0x13a08e['add'](_0x3b6a68), _0x13a08e[_0x54282e(0x201)](this), _0x334e8e[_0x2ab187] = _0x376352, _0x70778c['batched'] = !![];
                            }
                        } else
                            _0x70778c[_0x54282e(0x368)] = _0xe6bcff[_0x54282e(0xabf)], _0x70778c['indexInList'] = _0x27571c['length'], _0x70778c[_0x54282e(0xa94)] = ![], _0x27571c[_0x54282e(0x201)](this);
                    } else
                        _0x27571c[_0x54282e(0x201)](this);
                }
            }
        }
        [_0x5659be(0xaa5)](_0x278c8d, _0x4ac467) {
            var _0x284e26 = _0x5659be, _0x435c41 = this[_0x284e26(0xab4)], _0x3c3318 = _0x4ac467[_0x284e26(0x1f6)], _0xe7f733 = _0x3c3318[_0x284e26(0x1f6)];
            if (_0x435c41 && _0x1c6dea['enableStaticBatch']) {
                var _0x549890 = _0x429ec3[_0x284e26(0x220)][_0x284e26(0x2f4)], _0x35dd12 = _0x4ac467[_0x284e26(0xaa1)];
                if (_0x35dd12) {
                    var _0x45ae91 = _0x35dd12[_0x284e26(0x506)];
                    if (_0x35dd12[_0x284e26(0x5f0)][_0x284e26(0xa5d)]() !== this[_0x284e26(0x5f0)][_0x284e26(0xa5d)]() || _0x35dd12[_0x284e26(0xab4)] !== _0x435c41 || _0x35dd12[_0x284e26(0x8d6)] !== this[_0x284e26(0x8d6)] || _0x45ae91[_0x284e26(0xab8)] !== this['render'][_0x284e26(0xab8)] || _0x45ae91['lightmapIndex'] !== this[_0x284e26(0x506)][_0x284e26(0xab7)])
                        _0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![];
                    else {
                        if (_0x4ac467['lastTransparentBatched'])
                            _0xe7f733[_0x3c3318[_0x284e26(0x1ff)] - 0x1][_0x284e26(0xabc)]['add'](this);
                        else {
                            var _0x31025c = _0x549890['_getBatchRenderElementFromPool']();
                            _0x31025c[_0x284e26(0x5f1)] = _0x5551c8[_0x284e26(0xaa7)], _0x31025c[_0x284e26(0xaba)](_0x435c41), _0x31025c[_0x284e26(0x8d6)] = _0x35dd12['material'];
                            var _0x2134f6 = _0x435c41[_0x284e26(0xabb)], _0x244876 = _0x2134f6 ? _0x2134f6[_0x284e26(0x3ca)] : null;
                            _0x31025c[_0x284e26(0xa9e)](_0x244876), _0x31025c['render'] = this[_0x284e26(0x506)], _0x31025c['renderSubShader'] = _0x35dd12[_0x284e26(0x5f6)];
                            var _0x30f848 = _0x31025c[_0x284e26(0xabc)];
                            _0x30f848[_0x284e26(0x1ff)] = 0x0, _0x30f848[_0x284e26(0x201)](_0x35dd12), _0x30f848[_0x284e26(0x201)](this), _0xe7f733[_0x3c3318['length'] - 0x1] = _0x31025c;
                        }
                        _0x4ac467[_0x284e26(0xaa0)] = !![];
                    }
                } else
                    _0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![];
            } else {
                if (_0x1c6dea['enableDynamicBatch'] && this['renderSubShader'][_0x284e26(0x3d3)][_0x284e26(0x520)] && _0x218b83[_0x284e26(0x2f3)][_0x284e26(0x3ed)]['supportInstance']() && this[_0x284e26(0x506)][_0x284e26(0xab7)] < 0x0 && (!this[_0x284e26(0x506)][_0x284e26(0xab5)] || this[_0x284e26(0x506)][_0x284e26(0xab5)][_0x284e26(0xac5)])) {
                    var _0x2d1e14 = this['_geometry'], _0x265a69 = _0x429ec3[_0x284e26(0x221)]['instance'], _0x5e6005 = _0x4ac467['lastTransparentRenderElement'];
                    if (_0x5e6005) {
                        var _0x2ef979 = _0x5e6005[_0x284e26(0x506)];
                        if (_0x5e6005[_0x284e26(0x5f0)][_0x284e26(0xa5d)]() !== this[_0x284e26(0x5f0)][_0x284e26(0xa5d)]() || _0x5e6005['_geometry'] !== _0x2d1e14 || _0x5e6005[_0x284e26(0x8d6)] !== this['material'] || _0x2ef979['receiveShadow'] !== this[_0x284e26(0x506)][_0x284e26(0xab8)])
                            _0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![];
                        else {
                            if (_0x4ac467[_0x284e26(0xaa0)]) {
                                var _0x11458d = _0xe7f733[_0x3c3318[_0x284e26(0x1ff)] - 0x1][_0x284e26(0xa9c)];
                                _0x11458d[_0x284e26(0x1ff)] === _0x269d35['maxInstanceCount'] ? (_0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![]) : (_0x11458d[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = !![]);
                            } else {
                                var _0x326e60 = _0x265a69['_getBatchRenderElementFromPool']();
                                _0x326e60['renderType'] = _0x5551c8[_0x284e26(0xaa6)], _0x326e60[_0x284e26(0xaba)](_0x269d35['instance']), _0x326e60[_0x284e26(0x8d6)] = _0x5e6005[_0x284e26(0x8d6)], _0x326e60[_0x284e26(0xa9e)](null), _0x326e60[_0x284e26(0x506)] = this[_0x284e26(0x506)], _0x326e60[_0x284e26(0xa9b)] = _0x2d1e14, _0x326e60[_0x284e26(0x5f6)] = _0x5e6005[_0x284e26(0x5f6)];
                                var _0x5d19b8 = _0x326e60['instanceBatchElementList'];
                                _0x5d19b8[_0x284e26(0x1ff)] = 0x0, _0x5d19b8[_0x284e26(0x201)](_0x5e6005), _0x5d19b8[_0x284e26(0x201)](this), _0xe7f733[_0x3c3318[_0x284e26(0x1ff)] - 0x1] = _0x326e60, _0x4ac467['lastTransparentBatched'] = !![];
                            }
                        }
                    } else
                        _0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![];
                } else {
                    if (this['_dynamicVertexBatch'] && _0x1c6dea[_0x284e26(0x248)]) {
                        var _0x21c73e = this[_0x284e26(0x5f0)]['_vertexBuffer']['vertexDeclaration'], _0x3e6f6e = _0x429ec3[_0x284e26(0x221)][_0x284e26(0x2f4)], _0x231c30 = _0x4ac467[_0x284e26(0xaa1)];
                        if (_0x231c30) {
                            var _0x14af85 = _0x231c30[_0x284e26(0x506)];
                            if (!_0x231c30[_0x284e26(0xab0)] || _0x231c30['_geometry'][_0x284e26(0xa5d)]() !== this['_geometry'][_0x284e26(0xa5d)]() || _0x231c30['_geometry'][_0x284e26(0x4f9)][_0x284e26(0x43f)] !== _0x21c73e || _0x231c30[_0x284e26(0x8d6)] !== this['material'] || _0x14af85['receiveShadow'] !== this[_0x284e26(0x506)]['receiveShadow'] || _0x14af85['lightmapIndex'] !== this[_0x284e26(0x506)][_0x284e26(0xab7)])
                                _0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![];
                            else {
                                if (_0x4ac467[_0x284e26(0xaa0)])
                                    _0xe7f733[_0x3c3318[_0x284e26(0x1ff)] - 0x1][_0x284e26(0xac1)][_0x284e26(0x201)](this);
                                else {
                                    var _0x59d56f = _0x3e6f6e[_0x284e26(0xac2)]();
                                    _0x59d56f[_0x284e26(0x5f1)] = _0x5551c8[_0x284e26(0xac3)], _0x59d56f[_0x284e26(0xaba)](_0x429ec3[_0x284e26(0xaae)][_0x284e26(0x2f4)]), _0x59d56f[_0x284e26(0x8d6)] = _0x231c30[_0x284e26(0x8d6)], _0x59d56f[_0x284e26(0xa9e)](null), _0x59d56f[_0x284e26(0x506)] = this[_0x284e26(0x506)], _0x59d56f[_0x284e26(0xac4)] = _0x21c73e, _0x59d56f['renderSubShader'] = _0x231c30['renderSubShader'];
                                    var _0x2aa12f = _0x59d56f[_0x284e26(0xac1)];
                                    _0x2aa12f[_0x284e26(0x1ff)] = 0x0, _0x2aa12f[_0x284e26(0x201)](_0x231c30), _0x2aa12f[_0x284e26(0x201)](this), _0xe7f733[_0x3c3318['length'] - 0x1] = _0x59d56f;
                                }
                                _0x4ac467[_0x284e26(0xaa0)] = !![];
                            }
                        } else
                            _0x3c3318[_0x284e26(0x201)](this), _0x4ac467[_0x284e26(0xaa0)] = ![];
                    } else
                        _0x3c3318[_0x284e26(0x201)](this);
                }
            }
            _0x4ac467['lastTransparentRenderElement'] = this;
        }
        ['getInvertFront']() {
            var _0x4e305a = _0x5659be;
            switch (this[_0x4e305a(0x5f1)]) {
            case _0x5551c8[_0x4e305a(0x5fd)]:
                return this[_0x4e305a(0x3ca)][_0x4e305a(0xa9d)];
            case _0x5551c8[_0x4e305a(0xaa7)]:
            case _0x5551c8[_0x4e305a(0xac3)]:
                return ![];
            case _0x5551c8[_0x4e305a(0xaa6)]:
                return this[_0x4e305a(0xa9c)][_0x4e305a(0x1f6)][0x0][_0x4e305a(0x3ca)][_0x4e305a(0xa9d)];
            default:
                throw _0x4e305a(0xac6);
            }
        }
        [_0x5659be(0x311)]() {
            var _0x55bb12 = _0x5659be;
            super[_0x55bb12(0x311)](), this[_0x55bb12(0xaaa)] = null, this['_dynamicWorldNormals'] = null, this[_0x55bb12(0xab4)] = null, this[_0x55bb12(0xabc)] = null, this[_0x55bb12(0xac1)] = null, this[_0x55bb12(0xac4)] = null;
        }
    }
    _0x1c6dea[_0x5659be(0x248)] = !![], _0x1c6dea[_0x5659be(0x24a)] = !![];
    class _0x5dca2e {
        constructor() {
            var _0x4f0797 = _0x5659be;
            this[_0x4f0797(0xac7)] = [], this['_staticBatches'] = {}, this[_0x4f0797(0xac8)] = 0x0, this[_0x4f0797(0xac9)] = [];
        }
        static [_0x5659be(0xaca)](_0xa1d0c2, _0xd36f48) {
            var _0x8ac49d = _0x5659be;
            if (_0xa1d0c2 instanceof _0x200920)
                _0xd36f48[_0x8ac49d(0x298)](_0xa1d0c2);
            for (var _0x5627d8 = 0x0, _0x30698b = _0xa1d0c2[_0x8ac49d(0xacb)]; _0x5627d8 < _0x30698b; _0x5627d8++)
                _0x5dca2e[_0x8ac49d(0xaca)](_0xa1d0c2[_0x8ac49d(0x57c)][_0x5627d8], _0xd36f48);
        }
        static [_0x5659be(0xacc)](_0x1ae8cd) {
            var _0x525424 = _0x5659be;
            _0x5dca2e[_0x525424(0xacd)][_0x525424(0x298)](_0x1ae8cd);
        }
        static [_0x5659be(0xace)](_0x5e9208, _0x4d169b = null) {
            var _0xa039e4 = _0x5659be;
            if (!_0x4d169b) {
                _0x4d169b = [];
                if (_0x5e9208)
                    _0x5dca2e[_0xa039e4(0xaca)](_0x5e9208, _0x4d169b);
            }
            var _0x280baf = _0x4d169b[_0xa039e4(0x1ff)];
            if (_0x280baf > 0x0) {
                for (var _0x4275dd = 0x0; _0x4275dd < _0x280baf; _0x4275dd++) {
                    var _0xedd183 = _0x4d169b[_0x4275dd];
                    if (!_0xedd183[_0xa039e4(0x5cf)]) {
                        if (_0xedd183['_render'][_0xa039e4(0xacf)])
                            console['warn'](_0xa039e4(0xad0) + _0xedd183['name'] + _0xa039e4(0xad1));
                        else
                            _0xedd183['_addToInitStaticBatchManager']();
                    }
                }
                for (var _0x43b923 = 0x0, _0x511b43 = _0x5dca2e[_0xa039e4(0xacd)][_0xa039e4(0x1ff)]; _0x43b923 < _0x511b43; _0x43b923++) {
                    var _0x2ed6a8 = _0x5dca2e[_0xa039e4(0xacd)][_0x43b923];
                    _0x2ed6a8[_0xa039e4(0xad2)](_0x5e9208);
                }
            }
        }
        [_0x5659be(0xad3)](_0x2fa51a, _0x2249ca, _0x30889d) {
            var _0xcbb20f = _0x5659be, _0xbd46f7 = _0x2fa51a[Math[_0xcbb20f(0x241)]((_0x30889d + _0x2249ca) / 0x2)];
            while (_0x2249ca <= _0x30889d) {
                while (this[_0xcbb20f(0xad4)](_0x2fa51a[_0x2249ca], _0xbd46f7) < 0x0)
                    _0x2249ca++;
                while (this[_0xcbb20f(0xad4)](_0x2fa51a[_0x30889d], _0xbd46f7) > 0x0)
                    _0x30889d--;
                if (_0x2249ca < _0x30889d) {
                    var _0xc9efdc = _0x2fa51a[_0x2249ca];
                    _0x2fa51a[_0x2249ca] = _0x2fa51a[_0x30889d], _0x2fa51a[_0x30889d] = _0xc9efdc, _0x2249ca++, _0x30889d--;
                } else {
                    if (_0x2249ca === _0x30889d) {
                        _0x2249ca++;
                        break;
                    }
                }
            }
            return _0x2249ca;
        }
        [_0x5659be(0x821)](_0x10cae1, _0x7e4029, _0x5c033e) {
            var _0x580285 = _0x5659be;
            if (_0x10cae1['length'] > 0x1) {
                var _0x3792c4 = this[_0x580285(0xad3)](_0x10cae1, _0x7e4029, _0x5c033e), _0x1ff612 = _0x3792c4 - 0x1;
                if (_0x7e4029 < _0x1ff612)
                    this[_0x580285(0x821)](_0x10cae1, _0x7e4029, _0x1ff612);
                if (_0x3792c4 < _0x5c033e)
                    this[_0x580285(0x821)](_0x10cae1, _0x3792c4, _0x5c033e);
            }
        }
        ['_compare'](_0x1b238a, _0x51410c) {
            var _0x1a97cc = _0x5659be;
            throw _0x1a97cc(0xad5);
        }
        [_0x5659be(0xad2)](_0x2e2344) {
            var _0x2382c2 = _0x5659be;
            throw _0x2382c2(0xad5);
        }
        [_0x5659be(0xac2)]() {
            throw 'StaticBatch:must\x20override\x20this\x20function.';
        }
        ['_addBatchSprite'](_0x4a106f) {
            var _0x55a497 = _0x5659be;
            this[_0x55a497(0xac7)][_0x55a497(0x298)](_0x4a106f);
        }
        [_0x5659be(0x9cb)]() {
            var _0xdeae2d = _0x5659be;
            this[_0xdeae2d(0xac8)] = 0x0;
        }
        [_0x5659be(0xad6)]() {
            var _0x4542ed = _0x5659be;
            throw _0x4542ed(0xad7);
        }
        [_0x5659be(0xad8)]() {
            var _0x5e4600 = _0x5659be;
            this[_0x5e4600(0xad9)] = null;
        }
    }
    _0x5dca2e[_0x5659be(0xacd)] = [];
    class _0x16ed51 extends _0x319422 {
        constructor(_0x1f7ce3, _0x392d6d) {
            var _0x5d5523 = _0x5659be;
            super(), this[_0x5d5523(0x4f6)] = new _0x174c4a(), this[_0x5d5523(0xab9)] = _0x16ed51[_0x5d5523(0xada)]++, this['_batchElements'] = [], this[_0x5d5523(0xadb)] = 0x0, this[_0x5d5523(0xadc)] = 0x0, this['_vertexDeclaration'] = _0x392d6d, this['batchOwner'] = _0x1f7ce3;
        }
        [_0x5659be(0xadd)](_0x2e4479, _0xbeb879, _0x3ffd57, _0x18d42b, _0x2c4c47, _0x516b52) {
            var _0x4053b6 = _0x5659be, _0x381a0e = _0x516b52[_0x4053b6(0x4f9)], _0x302cc2 = _0x381a0e['vertexDeclaration'], _0x5758cf = _0x302cc2[_0x4053b6(0x4e7)](_0x13bc8a['MESH_POSITION0'])[_0x4053b6(0x4e3)] / 0x4, _0x185b8c = _0x302cc2[_0x4053b6(0x4e7)](_0x13bc8a[_0x4053b6(0x60b)]), _0x89e00e = _0x185b8c ? _0x185b8c[_0x4053b6(0x4e3)] / 0x4 : -0x1, _0x10030c = _0x302cc2[_0x4053b6(0x4e7)](_0x13bc8a['MESH_COLOR0']), _0x5257b6 = _0x10030c ? _0x10030c[_0x4053b6(0x4e3)] / 0x4 : -0x1, _0xdb4697 = _0x302cc2['getVertexElementByUsage'](_0x13bc8a['MESH_TEXTURECOORDINATE0']), _0x1d73d3 = _0xdb4697 ? _0xdb4697[_0x4053b6(0x4e3)] / 0x4 : -0x1, _0x539cb4 = _0x302cc2[_0x4053b6(0x4e7)](_0x13bc8a['MESH_TEXTURECOORDINATE1']), _0x32cdd3 = _0x539cb4 ? _0x539cb4[_0x4053b6(0x4e3)] / 0x4 : -0x1, _0x3d666e = _0x302cc2[_0x4053b6(0x4e7)](_0x13bc8a['MESH_TANGENT0']), _0x2c3c00 = _0x3d666e ? _0x3d666e[_0x4053b6(0x4e3)] / 0x4 : -0x1, _0x12e05f = 0x12, _0x2a9e2a = _0x302cc2[_0x4053b6(0x4e4)] / 0x4, _0x57df3e = _0x381a0e[_0x4053b6(0x452)](), _0x5b55e8;
            if (_0x3ffd57) {
                var _0x37c008 = _0x3ffd57[_0x4053b6(0x3ce)];
                _0x37c008[_0x4053b6(0x274)](_0x16ed51[_0x4053b6(0x8fd)]), _0x5b55e8 = _0x16ed51[_0x4053b6(0xade)], _0x3ed76a[_0x4053b6(0x202)](_0x16ed51[_0x4053b6(0x8fd)], _0x18d42b['worldMatrix'], _0x5b55e8);
            } else
                _0x5b55e8 = _0x18d42b[_0x4053b6(0x3ce)];
            var _0x26088d = _0x16ed51[_0x4053b6(0xadf)];
            _0x5b55e8[_0x4053b6(0x274)](_0x26088d), _0x26088d[_0x4053b6(0x275)]();
            var _0x1ac18b = _0x16ed51[_0x4053b6(0x327)];
            _0x5b55e8[_0x4053b6(0x483)](_0x16ed51[_0x4053b6(0x59b)], _0x1ac18b, _0x16ed51['_tempVector31']);
            var _0x4f637f = _0x2c4c47['lightmapScaleOffset'], _0x5cb572 = _0x516b52[_0x4053b6(0xae0)];
            for (var _0x16fec6 = 0x0; _0x16fec6 < _0x5cb572; _0x16fec6++) {
                var _0x39ed50 = _0x16fec6 * _0x2a9e2a, _0x43df17 = (_0x16fec6 + _0xbeb879) * _0x12e05f;
                _0x108d81[_0x4053b6(0x2e7)](_0x57df3e, _0x39ed50 + _0x5758cf, _0x5b55e8, _0x2e4479, _0x43df17 + 0x0);
                if (_0x89e00e !== -0x1)
                    _0x108d81[_0x4053b6(0x2e8)](_0x57df3e, _0x39ed50 + _0x89e00e, _0x26088d, _0x2e4479, _0x43df17 + 0x3);
                var _0x4683fe, _0x15e461, _0x2391d1 = _0x43df17 + 0x6;
                if (_0x5257b6 !== -0x1) {
                    var _0x4b68c7 = _0x39ed50 + _0x5257b6;
                    for (_0x4683fe = 0x0, _0x15e461 = 0x4; _0x4683fe < _0x15e461; _0x4683fe++)
                        _0x2e4479[_0x2391d1 + _0x4683fe] = _0x57df3e[_0x4b68c7 + _0x4683fe];
                } else {
                    for (_0x4683fe = 0x0, _0x15e461 = 0x4; _0x4683fe < _0x15e461; _0x4683fe++)
                        _0x2e4479[_0x2391d1 + _0x4683fe] = 0x1;
                }
                if (_0x1d73d3 !== -0x1) {
                    var _0x5e066f = _0x39ed50 + _0x1d73d3;
                    _0x2e4479[_0x43df17 + 0xa] = _0x57df3e[_0x5e066f], _0x2e4479[_0x43df17 + 0xb] = _0x57df3e[_0x5e066f + 0x1];
                }
                if (_0x4f637f) {
                    if (_0x32cdd3 !== -0x1)
                        _0x108d81['transformLightingMapTexcoordArray'](_0x57df3e, _0x39ed50 + _0x32cdd3, _0x4f637f, _0x2e4479, _0x43df17 + 0xc);
                    else
                        _0x108d81['transformLightingMapTexcoordArray'](_0x57df3e, _0x39ed50 + _0x1d73d3, _0x4f637f, _0x2e4479, _0x43df17 + 0xc);
                }
                if (_0x2c3c00 !== -0x1) {
                    var _0x162712 = _0x39ed50 + _0x2c3c00;
                    _0x108d81['transformVector3ArrayToVector3ArrayNormal'](_0x57df3e, _0x162712, _0x26088d, _0x2e4479, _0x43df17 + 0xe), _0x2e4479[_0x43df17 + 0x11] = _0x57df3e[_0x162712 + 0x3];
                }
            }
            return _0x5cb572;
        }
        [_0x5659be(0xae1)](_0x4aafce) {
            var _0x115e2d = _0x5659be, _0x2b279b, _0x45a967 = _0x4aafce[_0x115e2d(0xae2)][_0x115e2d(0xae3)][_0x115e2d(0xae0)];
            _0x2b279b = this[_0x115e2d(0xadb)] + _0x45a967;
            if (_0x2b279b > _0x16ed51[_0x115e2d(0xae4)])
                return ![];
            return !![];
        }
        [_0x5659be(0x201)](_0x463bdc) {
            var _0x4df108 = _0x5659be, _0x11dcde = _0x463bdc[_0x4df108(0xae2)][_0x4df108(0xae3)], _0x33ae81 = _0x11dcde[_0x4df108(0xae0)];
            this[_0x4df108(0xae5)][_0x4df108(0x298)](_0x463bdc);
            var _0x1dbc2a = _0x463bdc[_0x4df108(0x5e6)];
            _0x1dbc2a['_isPartOfStaticBatch'] = !![], _0x1dbc2a[_0x4df108(0xae6)] = this;
            var _0x476193 = _0x1dbc2a[_0x4df108(0x600)];
            for (var _0x51a9b0 = 0x0, _0x1028b2 = _0x476193[_0x4df108(0x1ff)]; _0x51a9b0 < _0x1028b2; _0x51a9b0++)
                _0x476193[_0x51a9b0][_0x4df108(0xab4)] = this;
            this[_0x4df108(0xadc)] += _0x11dcde[_0x4df108(0x624)]['indexCount'], this['_currentBatchVertexCount'] += _0x33ae81;
        }
        [_0x5659be(0x3a9)](_0x40aa13) {
            var _0x27c92f = _0x5659be, _0xf0b5da = _0x40aa13[_0x27c92f(0xae2)][_0x27c92f(0xae3)], _0xaa2eb8 = this[_0x27c92f(0xae5)]['indexOf'](_0x40aa13);
            if (_0xaa2eb8 !== -0x1) {
                this[_0x27c92f(0xae5)][_0x27c92f(0x32c)](_0xaa2eb8, 0x1);
                var _0x208d7b = _0x40aa13['_render'][_0x27c92f(0x600)];
                for (var _0x4f1b0c = 0x0, _0x1f252a = _0x208d7b[_0x27c92f(0x1ff)]; _0x4f1b0c < _0x1f252a; _0x4f1b0c++)
                    _0x208d7b[_0x4f1b0c][_0x27c92f(0xab4)] = null;
                this[_0x27c92f(0xadc)] = this[_0x27c92f(0xadc)] - _0xf0b5da['_indexBuffer'][_0x27c92f(0x8d1)], this[_0x27c92f(0xadb)] = this[_0x27c92f(0xadb)] - _0xf0b5da[_0x27c92f(0xae0)], _0x40aa13[_0x27c92f(0x5e6)][_0x27c92f(0xacf)] = ![];
            }
        }
        [_0x5659be(0xae7)]() {
            var _0x5e1ead = _0x5659be;
            this[_0x5e1ead(0x4f9)] && (this['_vertexBuffer']['destroy'](), this['_indexBuffer'][_0x5e1ead(0x311)](), _0x218b83[_0x5e1ead(0x315)]['_addGPUMemory'](-(this[_0x5e1ead(0x4f9)][_0x5e1ead(0x443)] + this[_0x5e1ead(0x624)][_0x5e1ead(0x443)])));
            var _0xe514c8 = _0x218b83[_0x5e1ead(0x2f3)][_0x5e1ead(0x2f4)], _0x20f9b8 = 0x0, _0x538f70 = 0x0, _0x5419a1 = this[_0x5e1ead(0xabb)], _0xbc136 = this['_vertexDeclaration']['vertexStride'] / 0x4, _0xb80a56 = new Float32Array(_0xbc136 * this['_currentBatchVertexCount']), _0x2d71f7 = new Uint16Array(this['_currentBatchIndexCount']);
            this[_0x5e1ead(0x4f9)] = new _0x57a6a2(this['_vertexDeclaration'][_0x5e1ead(0x4e4)] * this[_0x5e1ead(0xadb)], _0xe514c8[_0x5e1ead(0x4f8)]), this[_0x5e1ead(0x4f9)][_0x5e1ead(0x449)] = this[_0x5e1ead(0x43f)], this[_0x5e1ead(0x624)] = new _0x11925d(_0x71dec4['IndexFormat']['UInt16'], this['_currentBatchIndexCount'], _0xe514c8['STATIC_DRAW']);
            for (var _0x1d8dd6 = 0x0, _0x5c6c5a = this[_0x5e1ead(0xae5)][_0x5e1ead(0x1ff)]; _0x1d8dd6 < _0x5c6c5a; _0x1d8dd6++) {
                var _0x52e84e = this[_0x5e1ead(0xae5)][_0x1d8dd6], _0x3df1e3 = _0x52e84e[_0x5e1ead(0xae2)][_0x5e1ead(0xae3)], _0x1d4637 = this[_0x5e1ead(0xadd)](_0xb80a56, _0x20f9b8, _0x5419a1 ? _0x5419a1['_transform'] : null, _0x52e84e[_0x5e1ead(0x3ca)], _0x52e84e[_0x5e1ead(0x5e6)], _0x3df1e3), _0x4c42a5 = _0x3df1e3[_0x5e1ead(0x624)]['getData'](), _0x328d7c = _0x20f9b8, _0x221419 = _0x538f70 + _0x4c42a5[_0x5e1ead(0x1ff)], _0x184ac5 = _0x52e84e[_0x5e1ead(0x5e6)][_0x5e1ead(0x600)];
                for (var _0x3d129a = 0x0, _0x2236a2 = _0x3df1e3[_0x5e1ead(0xae8)]; _0x3d129a < _0x2236a2; _0x3d129a++) {
                    var _0x5db7cd = _0x3df1e3['_subMeshes'][_0x3d129a], _0x29b7c5 = _0x538f70 + _0x5db7cd['_indexStart'], _0xee98d9 = _0x184ac5[_0x3d129a];
                    _0xee98d9['staticBatchIndexStart'] = _0x29b7c5, _0xee98d9['staticBatchIndexEnd'] = _0x29b7c5 + _0x5db7cd[_0x5e1ead(0x627)];
                }
                _0x2d71f7['set'](_0x4c42a5, _0x538f70);
                var _0x53e62d, _0x31102c = _0x5419a1 ? _0x52e84e[_0x5e1ead(0x3ca)]['_isFrontFaceInvert'] !== _0x5419a1[_0x5e1ead(0x3cc)][_0x5e1ead(0xa9d)] : _0x52e84e['_transform'][_0x5e1ead(0xa9d)];
                if (_0x31102c)
                    for (_0x53e62d = _0x538f70; _0x53e62d < _0x221419; _0x53e62d += 0x3) {
                        _0x2d71f7[_0x53e62d] = _0x328d7c + _0x2d71f7[_0x53e62d];
                        var _0x36f279 = _0x2d71f7[_0x53e62d + 0x1], _0x331797 = _0x2d71f7[_0x53e62d + 0x2];
                        _0x2d71f7[_0x53e62d + 0x1] = _0x328d7c + _0x331797, _0x2d71f7[_0x53e62d + 0x2] = _0x328d7c + _0x36f279;
                    }
                else
                    for (_0x53e62d = _0x538f70; _0x53e62d < _0x221419; _0x53e62d += 0x3) {
                        _0x2d71f7[_0x53e62d] = _0x328d7c + _0x2d71f7[_0x53e62d], _0x2d71f7[_0x53e62d + 0x1] = _0x328d7c + _0x2d71f7[_0x53e62d + 0x1], _0x2d71f7[_0x53e62d + 0x2] = _0x328d7c + _0x2d71f7[_0x53e62d + 0x2];
                    }
                _0x538f70 += _0x4c42a5[_0x5e1ead(0x1ff)], _0x20f9b8 += _0x1d4637;
            }
            this[_0x5e1ead(0x4f9)][_0x5e1ead(0x4fd)](_0xb80a56[_0x5e1ead(0x448)]), this[_0x5e1ead(0x624)]['setData'](_0x2d71f7);
            var _0x3d865e = this[_0x5e1ead(0x4f9)][_0x5e1ead(0x443)] + this[_0x5e1ead(0x624)]['_byteLength'];
            _0x218b83[_0x5e1ead(0x315)]['_addGPUMemory'](_0x3d865e), this[_0x5e1ead(0x4f6)][_0x5e1ead(0x444)](), this[_0x5e1ead(0x4f6)][_0x5e1ead(0x4ea)](this[_0x5e1ead(0x4f9)]), this[_0x5e1ead(0x4f6)][_0x5e1ead(0x4f3)](this[_0x5e1ead(0x624)]), this[_0x5e1ead(0x4f6)]['unBind']();
        }
        [_0x5659be(0x5e6)](_0x1def1e) {
            var _0x3f7888 = _0x5659be;
            this[_0x3f7888(0x4f6)][_0x3f7888(0x444)]();
            var _0x30a6f1 = _0x218b83[_0x3f7888(0x2f3)][_0x3f7888(0x2f4)], _0x4bdf1e = _0x1def1e[_0x3f7888(0xa9a)], _0x2a180b = _0x4bdf1e[_0x3f7888(0xabc)], _0x1192d0 = _0x2a180b[_0x3f7888(0x1f6)], _0x1681c5 = 0x0, _0xb68629 = 0x0, _0x1c0237 = _0x2a180b[_0x3f7888(0x1ff)];
            for (var _0xbeb6c2 = 0x1; _0xbeb6c2 < _0x1c0237; _0xbeb6c2++) {
                var _0x201ca0 = _0x1192d0[_0xbeb6c2 - 0x1];
                if (_0x201ca0[_0x3f7888(0xae9)] === _0x1192d0[_0xbeb6c2]['staticBatchIndexStart']) {
                    _0xb68629++;
                    continue;
                } else {
                    var _0x379c58 = _0x1192d0[_0x1681c5]['staticBatchIndexStart'], _0x1659c4 = _0x1192d0[_0xb68629]['staticBatchIndexEnd'] - _0x379c58;
                    _0x30a6f1[_0x3f7888(0xaea)](_0x30a6f1[_0x3f7888(0x507)], _0x1659c4, _0x30a6f1[_0x3f7888(0x40b)], _0x379c58 * 0x2), _0x1681c5 = ++_0xb68629, _0x218b83['Stat'][_0x3f7888(0x62a)] += _0x1659c4 / 0x3;
                }
            }
            _0x379c58 = _0x1192d0[_0x1681c5][_0x3f7888(0xaeb)], _0x1659c4 = _0x1192d0[_0xb68629][_0x3f7888(0xae9)] - _0x379c58, _0x30a6f1[_0x3f7888(0xaea)](_0x30a6f1[_0x3f7888(0x507)], _0x1659c4, _0x30a6f1['UNSIGNED_SHORT'], _0x379c58 * 0x2), _0x218b83['Stat'][_0x3f7888(0x501)]++, _0x218b83[_0x3f7888(0x500)][_0x3f7888(0xaec)] += _0x1c0237 - 0x1, _0x218b83[_0x3f7888(0x500)][_0x3f7888(0x62a)] += _0x1659c4 / 0x3;
        }
        [_0x5659be(0xad8)]() {
            var _0x5c1e4c = _0x5659be, _0x1ddbe1 = this[_0x5c1e4c(0x4f9)][_0x5c1e4c(0x443)] + this[_0x5c1e4c(0x624)][_0x5c1e4c(0x443)];
            _0x218b83[_0x5c1e4c(0x315)][_0x5c1e4c(0xaed)](-_0x1ddbe1), this[_0x5c1e4c(0xae5)] = null, this[_0x5c1e4c(0xabb)] = null, this[_0x5c1e4c(0x43f)] = null, this[_0x5c1e4c(0x4f6)][_0x5c1e4c(0x311)](), this[_0x5c1e4c(0x4f9)][_0x5c1e4c(0x311)](), this['_indexBuffer']['destroy'](), this[_0x5c1e4c(0x4f9)] = null, this['_indexBuffer'] = null, this['_bufferState'] = null;
        }
    }
    _0x16ed51[_0x5659be(0x59b)] = new _0x3f70c5(), _0x16ed51[_0x5659be(0x3d6)] = new _0x3f70c5(), _0x16ed51[_0x5659be(0x327)] = new _0x22f58f(), _0x16ed51[_0x5659be(0x8fd)] = new _0x3ed76a(), _0x16ed51[_0x5659be(0xade)] = new _0x3ed76a(), _0x16ed51[_0x5659be(0xadf)] = new _0x3ed76a(), _0x16ed51[_0x5659be(0xae4)] = 0xffff, _0x16ed51[_0x5659be(0xada)] = 0x0;
    class _0x493d86 extends _0x5dca2e {
        constructor() {
            var _0xb983c0 = _0x5659be;
            super(), this[_0xb983c0(0xaee)] = [], this[_0xb983c0(0xabf)] = 0x0;
        }
        static [_0x5659be(0x229)]() {
            var _0x5349fe = _0x5659be;
            _0x493d86[_0x5349fe(0xaef)] = _0x13bc8a['getVertexDeclaration']('POSITION,NORMAL,COLOR,UV,UV1,TANGENT');
        }
        [_0x5659be(0xad4)](_0x497fc8, _0x1953ca) {
            var _0x30a971 = _0x5659be, _0x3788f4 = _0x497fc8[_0x30a971(0x5e6)], _0x166fbe = _0x1953ca[_0x30a971(0x5e6)], _0x56e4ff = _0x497fc8['meshFilter'][_0x30a971(0xae3)], _0x15f0af = _0x1953ca[_0x30a971(0xae2)][_0x30a971(0xae3)], _0x4f567f = _0x3788f4[_0x30a971(0xab7)] - _0x166fbe[_0x30a971(0xab7)];
            if (_0x4f567f === 0x0) {
                var _0xb63d55 = (_0x3788f4[_0x30a971(0xab8)] ? 0x1 : 0x0) - (_0x166fbe[_0x30a971(0xab8)] ? 0x1 : 0x0);
                if (_0xb63d55 === 0x0) {
                    var _0x4d4009 = _0x3788f4[_0x30a971(0xaf0)] && _0x166fbe[_0x30a971(0xaf0)] ? _0x3788f4['sharedMaterial']['id'] - _0x166fbe['sharedMaterial']['id'] : 0x0;
                    if (_0x4d4009 === 0x0) {
                        var _0xd61840 = _0x56e4ff[_0x30a971(0x4f9)][_0x30a971(0x449)]['id'] - _0x15f0af[_0x30a971(0x4f9)][_0x30a971(0x449)]['id'];
                        return _0xd61840 === 0x0 ? _0x15f0af[_0x30a971(0x624)][_0x30a971(0x8d1)] - _0x56e4ff[_0x30a971(0x624)]['indexCount'] : _0xd61840;
                    } else
                        return _0x4d4009;
                } else
                    return _0xb63d55;
            } else
                return _0x4f567f;
        }
        [_0x5659be(0xac2)]() {
            var _0xf92e73 = _0x5659be, _0x2210fa = this[_0xf92e73(0xac9)][this['_batchRenderElementPoolIndex']++];
            return !_0x2210fa && (_0x2210fa = new _0x1c6dea(), this[_0xf92e73(0xac9)][this[_0xf92e73(0xac8)] - 0x1] = _0x2210fa, _0x2210fa[_0xf92e73(0xabc)] = new _0x5ae7ed()), _0x2210fa;
        }
        [_0x5659be(0xaf1)](_0x3fab18, _0x1e1df5, _0x3eee71) {
            var _0x31bd3f = _0x5659be, _0x3a2896 = _0x3fab18[_0x3eee71];
            return !_0x3a2896 && (_0x3a2896 = _0x3fab18[_0x3eee71] = new _0x16ed51(_0x1e1df5, _0x493d86[_0x31bd3f(0xaef)]), this['_staticBatches'][_0x3a2896[_0x31bd3f(0xab9)]] = _0x3a2896), _0x3a2896;
        }
        [_0x5659be(0xad2)](_0x571cae) {
            var _0x560763 = _0x5659be, _0x4ac50f = this[_0x560763(0xac7)];
            this[_0x560763(0x821)](_0x4ac50f, 0x0, _0x4ac50f[_0x560763(0x1ff)] - 0x1);
            var _0x32ffe1 = [], _0x4ce579 = ![], _0x354184, _0x584d89 = 0x0;
            for (var _0x1f2d60 = 0x0, _0x8b2629 = _0x4ac50f[_0x560763(0x1ff)]; _0x1f2d60 < _0x8b2629; _0x1f2d60++) {
                var _0x2ede1a = _0x4ac50f[_0x1f2d60];
                if (_0x4ce579)
                    _0x354184[_0x560763(0xae1)](_0x2ede1a) ? _0x354184[_0x560763(0x201)](_0x2ede1a) : (_0x4ce579 = ![], _0x584d89++);
                else {
                    var _0x257cac = _0x8b2629 - 0x1;
                    _0x1f2d60 !== _0x257cac && (_0x354184 = this[_0x560763(0xaf1)](_0x32ffe1, _0x571cae, _0x584d89), _0x354184['add'](_0x2ede1a), _0x4ce579 = !![]);
                }
            }
            for (_0x1f2d60 = 0x0, _0x8b2629 = _0x32ffe1[_0x560763(0x1ff)]; _0x1f2d60 < _0x8b2629; _0x1f2d60++) {
                var _0x3e3302 = _0x32ffe1[_0x1f2d60];
                _0x3e3302 && _0x3e3302[_0x560763(0xae7)]();
            }
            this[_0x560763(0xac7)][_0x560763(0x1ff)] = 0x0;
        }
        [_0x5659be(0xaf2)](_0x237f21) {
            var _0x3a01c3 = _0x5659be, _0x1aa9a6 = _0x237f21[_0x3a01c3(0x5e6)], _0x22e61a = _0x1aa9a6['_staticBatch'], _0x2fdfd7 = _0x22e61a[_0x3a01c3(0xae5)], _0x2881b0 = _0x2fdfd7[_0x3a01c3(0x384)](_0x237f21);
            if (_0x2881b0 !== -0x1) {
                _0x2fdfd7[_0x3a01c3(0x32c)](_0x2881b0, 0x1), _0x1aa9a6[_0x3a01c3(0xae6)] = null;
                var _0x3aa63c = _0x1aa9a6[_0x3a01c3(0x600)];
                for (var _0xca0e10 = 0x0, _0x514a07 = _0x3aa63c[_0x3a01c3(0x1ff)]; _0xca0e10 < _0x514a07; _0xca0e10++)
                    _0x3aa63c[_0xca0e10][_0x3a01c3(0xab4)] = null;
            }
            _0x2fdfd7[_0x3a01c3(0x1ff)] === 0x0 && (delete this[_0x3a01c3(0xad9)][_0x22e61a['_batchID']], _0x22e61a['dispose']());
        }
        [_0x5659be(0x9cb)]() {
            super['_clear'](), this['_updateCountMark']++;
        }
        [_0x5659be(0xad6)]() {
            var _0x47d305 = _0x5659be;
            for (var _0x152fa4 in this['_staticBatches']) {
                var _0x1e226c = this['_staticBatches'][_0x152fa4];
                _0x1e226c[_0x47d305(0xae5)][_0x47d305(0x1ff)] === 0x0 && (_0x1e226c[_0x47d305(0xad8)](), delete this[_0x47d305(0xad9)][_0x152fa4]);
            }
        }
        [_0x5659be(0xab6)](_0x365220, _0x446e7a, _0x533b31, _0x483214) {
            var _0x2c1a92 = _0x5659be, _0x5a16bc = _0x446e7a ? 0x1 : 0x0, _0x787859 = this[_0x2c1a92(0xaee)][_0x365220] || (this[_0x2c1a92(0xaee)][_0x365220] = []), _0x2f72aa = _0x787859[_0x5a16bc] || (_0x787859[_0x5a16bc] = []), _0x3beabe = _0x2f72aa[_0x533b31] || (_0x2f72aa[_0x533b31] = []);
            return _0x3beabe[_0x483214] || (_0x3beabe[_0x483214] = new _0x32eb43());
        }
    }
    _0x493d86['instance'] = new _0x493d86(), function (_0x1ab342) {
        var _0x4a53e7 = _0x5659be;
        _0x1ab342[_0x1ab342[_0x4a53e7(0x8fc)] = 0x0] = _0x4a53e7(0x8fc), _0x1ab342[_0x1ab342['simple'] = 0x1] = _0x4a53e7(0xaf3);
    }(_0x71dec4[_0x5659be(0xaf4)] || (_0x71dec4[_0x5659be(0xaf4)] = {}));
    class _0x221da4 extends _0x356e58 {
        constructor() {
            var _0x1c283c = _0x5659be;
            super(), this[_0x1c283c(0xaf5)] = ![], this[_0x1c283c(0xaf6)] = new _0x3f70c5(), this['_offset'] = new _0x3f70c5(), this[_0x1c283c(0xaf7)] = new _0x8fb80(), this[_0x1c283c(0xaf8)] = _0x218b83['TextureDecodeFormat'][_0x1c283c(0xaf9)], this[_0x1c283c(0xac5)] = ![];
        }
        get [_0x5659be(0xafa)]() {
            var _0x3793d0 = _0x5659be;
            return this[_0x3793d0(0xaf5)];
        }
        set ['boxProjection'](_0x1ce25f) {
            this['_boxProjection'] = _0x1ce25f;
        }
        get [_0x5659be(0xafb)]() {
            var _0x1ea050 = _0x5659be;
            return this[_0x1ea050(0xafc)];
        }
        set [_0x5659be(0xafb)](_0x2c31b2) {
            var _0x7d9ccf = _0x5659be;
            this[_0x7d9ccf(0xafc)] = _0x2c31b2;
        }
        get [_0x5659be(0x93a)]() {
            var _0x512b32 = _0x5659be;
            return this[_0x512b32(0x92c)];
        }
        set ['intensity'](_0x171883) {
            var _0x2fde32 = _0x5659be;
            _0x171883 = Math[_0x2fde32(0x205)](Math[_0x2fde32(0x204)](_0x171883, 0x1), 0x0), this[_0x2fde32(0xaf7)]['x'] = _0x171883;
            if (this[_0x2fde32(0xaf8)] == _0x218b83['TextureDecodeFormat']['RGBM'])
                this[_0x2fde32(0xaf7)]['x'] *= 0x5;
            this[_0x2fde32(0x92c)] = _0x171883;
        }
        get [_0x5659be(0xafd)]() {
            var _0x76a6ae = _0x5659be;
            return this[_0x76a6ae(0xafe)];
        }
        set [_0x5659be(0xafd)](_0x58c8df) {
            var _0x460b49 = _0x5659be;
            this['_reflectionTexture'] = _0x58c8df, this['_reflectionTexture'][_0x460b49(0x354)]();
        }
        get [_0x5659be(0x80d)]() {
            return this['_bounds'];
        }
        set [_0x5659be(0x80d)](_0x334a19) {
            this['_bounds'] = _0x334a19;
        }
        get ['boundsMax']() {
            return this['_bounds']['getMax']();
        }
        get ['boundsMin']() {
            var _0x3a638d = _0x5659be;
            return this[_0x3a638d(0xa67)][_0x3a638d(0xa4f)]();
        }
        get [_0x5659be(0xaff)]() {
            var _0x20dda3 = _0x5659be;
            return this[_0x20dda3(0x3cc)][_0x20dda3(0x59e)];
        }
        get [_0x5659be(0xb00)]() {
            var _0xde5314 = _0x5659be;
            return this[_0xde5314(0xaf7)];
        }
        set ['reflectionHDRParams'](_0x4d6940) {
            var _0x3bcfc1 = _0x5659be;
            this[_0x3bcfc1(0xaf7)] = _0x4d6940;
        }
        [_0x5659be(0x318)](_0x330a52, _0x15213d) {
            var _0x1195f4 = _0x5659be;
            super[_0x1195f4(0x318)](_0x330a52, _0x15213d), this[_0x1195f4(0xaf5)] = _0x330a52[_0x1195f4(0xafa)], this['_importance'] = _0x330a52['importance'], this['_reflectionTexture'] = _0x218b83[_0x1195f4(0x3b1)][_0x1195f4(0x692)](_0x330a52[_0x1195f4(0xb01)]);
            var _0x3465c3 = this[_0x1195f4(0x3cc)][_0x1195f4(0x59e)];
            this['_size'][_0x1195f4(0x1fb)](_0x330a52[_0x1195f4(0xb02)]), _0x3f70c5[_0x1195f4(0x1ee)](this['_size'], 0.5, _0x221da4['TEMPVECTOR3']), this['_offset'][_0x1195f4(0x1fb)](_0x330a52[_0x1195f4(0xb03)]);
            var _0x1d9d13 = new _0x3f70c5(), _0xbd1fb7 = new _0x3f70c5();
            _0x3f70c5[_0x1195f4(0x201)](_0x3465c3, _0x221da4[_0x1195f4(0xb04)], _0xbd1fb7), _0x3f70c5[_0x1195f4(0x201)](_0xbd1fb7, this[_0x1195f4(0x4e3)], _0xbd1fb7), _0x3f70c5['subtract'](_0x3465c3, _0x221da4[_0x1195f4(0xb04)], _0x1d9d13), _0x3f70c5[_0x1195f4(0x201)](_0x1d9d13, this[_0x1195f4(0x4e3)], _0x1d9d13), this[_0x1195f4(0xaf8)] = _0x330a52['reflectionDecodingFormat'], this[_0x1195f4(0x93a)] = _0x330a52[_0x1195f4(0x93a)];
            if (!this[_0x1195f4(0xa67)])
                this[_0x1195f4(0x80d)] = new _0x2a117e(_0x1d9d13, _0xbd1fb7);
            else
                this['_bounds']['setMin'](_0x1d9d13), this[_0x1195f4(0xa67)][_0x1195f4(0xa51)](_0xbd1fb7);
        }
        [_0x5659be(0xb05)](_0x2fb2a0) {
            this['_indexInReflectProbList'] = _0x2fb2a0;
        }
        [_0x5659be(0xb06)]() {
            var _0x1d5adf = _0x5659be;
            return this[_0x1d5adf(0xb07)];
        }
        ['_onActive']() {
            var _0x2c4080 = _0x5659be;
            super[_0x2c4080(0x8f7)]();
            if (this['_reflectionTexture'])
                this[_0x2c4080(0x5da)]['_reflectionProbeManager']['add'](this);
        }
        ['_onInActive']() {
            var _0x4e69dd = _0x5659be;
            super[_0x4e69dd(0x8fa)]();
            if (this[_0x4e69dd(0xafd)])
                this['scene'][_0x4e69dd(0xb08)][_0x4e69dd(0x3a9)](this);
        }
        ['destroy'](_0xf19342 = !![]) {
            var _0x45cbbd = _0x5659be;
            if (this[_0x45cbbd(0x5cf)])
                return;
            super['destroy'](_0xf19342), this['_reflectionTexture'] && this[_0x45cbbd(0xafe)][_0x45cbbd(0x351)](), this['_reflectionTexture'] = null, this[_0x45cbbd(0xa67)] = null;
        }
        [_0x5659be(0x339)](_0x172ba1, _0x30db4f, _0x506178) {
            var _0x19241a = _0x5659be, _0x31c876 = _0x172ba1;
            _0x31c876['bounds'] = this['bounds'], _0x31c876[_0x19241a(0xafa)] = this['boxProjection'], _0x31c876['importance'] = this['importance'], _0x31c876[_0x19241a(0xaf6)] = this['_size'], _0x31c876[_0x19241a(0x4e3)] = this[_0x19241a(0x4e3)], _0x31c876[_0x19241a(0x93a)] = this[_0x19241a(0x93a)], _0x31c876[_0x19241a(0xb00)] = this[_0x19241a(0xb00)], super[_0x19241a(0x339)](_0x172ba1, _0x30db4f, _0x506178);
        }
    }
    _0x221da4['TEMPVECTOR3'] = new _0x3f70c5(), _0x221da4[_0x5659be(0xb09)] = new _0x8fb80(0x1, 0x1, 0x0, 0x0);
    class _0x55d32a extends _0x218b83[_0x5659be(0x668)] {
        constructor(_0x6e3db1) {
            var _0x2de36 = _0x5659be;
            super(), this[_0x2de36(0xb0a)] = new _0x8fb80(0x1, 0x1, 0x0, 0x0), this['_indexInList'] = -0x1, this[_0x2de36(0xb0b)] = -0x1, this[_0x2de36(0xb0c)] = !![], this[_0x2de36(0x824)] = ![], this[_0x2de36(0xb0d)] = !![], this[_0x2de36(0xb0e)] = [], this['_renderMark'] = -0x1, this[_0x2de36(0xb0f)] = -0x1, this['_reflectionMode'] = _0x71dec4[_0x2de36(0xaf4)][_0x2de36(0xaf3)], this['_updateMark'] = -0x1, this[_0x2de36(0x5f2)] = -0x1, this[_0x2de36(0xacf)] = ![], this['_staticBatch'] = null, this['_id'] = ++_0x55d32a[_0x2de36(0x4e8)], this['_indexInCastShadowList'] = -0x1, this['_bounds'] = new _0x2a117e(_0x3f70c5['_ZERO'], _0x3f70c5['_ZERO']), this[_0x2de36(0x600)] = [], this[_0x2de36(0x3d3)] = _0x6e3db1, this['_enable'] = !![], this[_0x2de36(0xb10)] = [], this[_0x2de36(0x4e0)] = new _0x552b02(null), this[_0x2de36(0xab7)] = -0x1, this['receiveShadow'] = ![], this[_0x2de36(0xb11)] = 0x0, _0x6e3db1 && this[_0x2de36(0x3d3)][_0x2de36(0x3cc)]['on'](_0x218b83['Event'][_0x2de36(0x5a7)], this, this[_0x2de36(0xb12)]);
        }
        get ['id']() {
            var _0x57c015 = _0x5659be;
            return this[_0x57c015(0xabe)];
        }
        get ['lightmapIndex']() {
            var _0x42a05e = _0x5659be;
            return this[_0x42a05e(0xb13)];
        }
        set ['lightmapIndex'](_0x4274a3) {
            var _0x59632a = _0x5659be;
            this[_0x59632a(0xb13)] = _0x4274a3;
        }
        get ['lightmapScaleOffset']() {
            var _0x32ddb8 = _0x5659be;
            return this[_0x32ddb8(0xb0a)];
        }
        set [_0x5659be(0xb14)](_0x52db99) {
            var _0x38a1ec = _0x5659be;
            if (!_0x52db99)
                throw _0x38a1ec(0xb15);
            this[_0x38a1ec(0xb0a)] = _0x52db99, this[_0x38a1ec(0x4e0)]['setVector'](_0x200920['LIGHTMAPSCALEOFFSET'], _0x52db99);
        }
        get [_0x5659be(0x650)]() {
            return this['_enable'];
        }
        set [_0x5659be(0x650)](_0x3e2e9d) {
            var _0x55776e = _0x5659be;
            this[_0x55776e(0x651)] = !!_0x3e2e9d;
        }
        get [_0x5659be(0x8d6)]() {
            var _0x5b658c = _0x5659be, _0x5ba604 = this[_0x5b658c(0xb0e)][0x0];
            if (_0x5ba604 && !this[_0x5b658c(0xb10)][0x0]) {
                var _0x5cbfd4 = this[_0x5b658c(0xb16)](_0x5ba604, 0x0), _0x3b5425 = this[_0x5b658c(0x600)][0x0];
                _0x3b5425 && (_0x3b5425[_0x5b658c(0x8d6)] = _0x5cbfd4);
            }
            return this[_0x5b658c(0xb0e)][0x0];
        }
        set [_0x5659be(0x8d6)](_0xeb022a) {
            var _0x13b34d = _0x5659be;
            this[_0x13b34d(0xaf0)] = _0xeb022a, this[_0x13b34d(0xb17)]();
        }
        get ['materials']() {
            var _0x22c05f = _0x5659be;
            for (var _0x337478 = 0x0, _0x29a6c5 = this['_sharedMaterials'][_0x22c05f(0x1ff)]; _0x337478 < _0x29a6c5; _0x337478++) {
                if (!this[_0x22c05f(0xb10)][_0x337478]) {
                    var _0x4e155c = this[_0x22c05f(0xb16)](this[_0x22c05f(0xb0e)][_0x337478], _0x337478), _0x52afa4 = this[_0x22c05f(0x600)][_0x337478];
                    _0x52afa4 && (_0x52afa4[_0x22c05f(0x8d6)] = _0x4e155c);
                }
            }
            return this[_0x22c05f(0xb0e)]['slice']();
        }
        set ['materials'](_0x43bb93) {
            var _0x2c0487 = _0x5659be;
            this[_0x2c0487(0xb18)] = _0x43bb93, this['_isSupportReflection']();
        }
        get [_0x5659be(0xaf0)]() {
            var _0x351273 = _0x5659be;
            return this[_0x351273(0xb0e)][0x0];
        }
        set [_0x5659be(0xaf0)](_0x255656) {
            var _0x256464 = _0x5659be, _0x2e2e6f = this[_0x256464(0xb0e)][0x0];
            if (_0x2e2e6f !== _0x255656) {
                this['_sharedMaterials'][0x0] = _0x255656, this[_0x256464(0xb10)][0x0] = ![], this[_0x256464(0xb19)](_0x2e2e6f, _0x255656);
                var _0x3ba2e6 = this[_0x256464(0x600)][0x0];
                _0x3ba2e6 && (_0x3ba2e6['material'] = _0x255656);
            }
            this[_0x256464(0xb17)]();
        }
        get [_0x5659be(0xb18)]() {
            var _0xc6dd4c = _0x5659be;
            return this[_0xc6dd4c(0xb0e)][_0xc6dd4c(0xb1a)]();
        }
        set [_0x5659be(0xb18)](_0x58d0f4) {
            var _0x2c53b2 = _0x5659be, _0x3293fa = this['_materialsInstance'], _0x366413 = this[_0x2c53b2(0xb0e)];
            for (var _0x58a983 = 0x0, _0x19ca17 = _0x366413[_0x2c53b2(0x1ff)]; _0x58a983 < _0x19ca17; _0x58a983++) {
                var _0xcf7f5f = _0x366413[_0x58a983];
                _0xcf7f5f && _0xcf7f5f['_removeReference']();
            }
            if (_0x58d0f4) {
                var _0x21f33a = _0x58d0f4['length'];
                _0x3293fa[_0x2c53b2(0x1ff)] = _0x21f33a, _0x366413[_0x2c53b2(0x1ff)] = _0x21f33a;
                for (_0x58a983 = 0x0; _0x58a983 < _0x21f33a; _0x58a983++) {
                    _0xcf7f5f = _0x366413[_0x58a983];
                    var _0x31783c = _0x58d0f4[_0x58a983];
                    if (_0xcf7f5f !== _0x31783c) {
                        _0x3293fa[_0x58a983] = ![];
                        var _0x43e2de = this[_0x2c53b2(0x600)][_0x58a983];
                        _0x43e2de && (_0x43e2de[_0x2c53b2(0x8d6)] = _0x31783c);
                    }
                    _0x31783c && _0x31783c[_0x2c53b2(0x354)](), _0x366413[_0x58a983] = _0x31783c;
                }
            } else
                throw new Error(_0x2c53b2(0xb1b));
            this['_isSupportReflection']();
        }
        get [_0x5659be(0x80d)]() {
            var _0x5b1ad3 = _0x5659be;
            return this[_0x5b1ad3(0xb0c)] && (this[_0x5b1ad3(0xb1c)](), this[_0x5b1ad3(0xb0c)] = ![]), this[_0x5b1ad3(0xa67)];
        }
        set ['receiveShadow'](_0x7b0b44) {
            var _0x45ee78 = _0x5659be;
            if (this[_0x45ee78(0xb1d)] !== _0x7b0b44) {
                this[_0x45ee78(0xb1d)] = _0x7b0b44;
                if (_0x7b0b44)
                    this[_0x45ee78(0x4e0)][_0x45ee78(0x62c)](_0x200920[_0x45ee78(0xa76)]);
                else
                    this['_shaderValues']['removeDefine'](_0x200920[_0x45ee78(0xa76)]);
            }
        }
        get [_0x5659be(0xab8)]() {
            var _0x1f6daf = _0x5659be;
            return this[_0x1f6daf(0xb1d)];
        }
        get ['castShadow']() {
            var _0x59879c = _0x5659be;
            return this[_0x59879c(0x824)];
        }
        set [_0x5659be(0xb1e)](_0x419e3e) {
            this['_castShadow'] = _0x419e3e;
        }
        get [_0x5659be(0xb1f)]() {
            var _0x14531d = _0x5659be;
            return this[_0x14531d(0xacf)];
        }
        get [_0x5659be(0x3b6)]() {
            var _0xb547b4 = _0x5659be;
            return this[_0xb547b4(0x814)] == -0x1 || this[_0xb547b4(0x814)] == _0x218b83['Stat'][_0xb547b4(0x4da)] - 0x1;
        }
        set [_0x5659be(0xb20)](_0x32797f) {
            var _0xe94a9a = _0x5659be;
            this[_0xe94a9a(0xb21)] = _0x32797f;
        }
        get [_0x5659be(0xb20)]() {
            var _0x411828 = _0x5659be;
            return this[_0x411828(0xb21)];
        }
        [_0x5659be(0xb22)]() {
            var _0xabdf40 = _0x5659be;
            return this[_0xabdf40(0xb23)];
        }
        [_0x5659be(0xb24)](_0x3a18fa) {
            var _0x154ca2 = _0x5659be;
            !_0x3a18fa && (this['_indexInOctreeMotionList'] !== -0x1 && this['_octreeNode'][_0x154ca2(0x823)][_0x154ca2(0xb25)](this)), this['_octreeNode'] = _0x3a18fa;
        }
        [_0x5659be(0xb26)]() {
            var _0x1304c3 = _0x5659be;
            return this[_0x1304c3(0xb0f)];
        }
        [_0x5659be(0xb27)](_0x20ba1b) {
            var _0x3361d9 = _0x5659be;
            this[_0x3361d9(0xb0f)] = _0x20ba1b;
        }
        [_0x5659be(0xb19)](_0xfb471b, _0x23d1b8) {
            var _0x19ead5 = _0x5659be;
            _0xfb471b && _0xfb471b['_removeReference'](), _0x23d1b8[_0x19ead5(0x354)]();
        }
        [_0x5659be(0xb16)](_0x42f894, _0x3f3047) {
            var _0x20a312 = _0x5659be, _0x4fc017 = _0x42f894[_0x20a312(0x1f4)]();
            return _0x4fc017[_0x20a312(0x2a5)] = _0x4fc017[_0x20a312(0x2a5)] + '(Instance)', this['_materialsInstance'][_0x3f3047] = !![], this['_changeMaterialReference'](this[_0x20a312(0xb0e)][_0x3f3047], _0x4fc017), this['_sharedMaterials'][_0x3f3047] = _0x4fc017, _0x4fc017;
        }
        ['_isSupportReflection']() {
            var _0x38523d = _0x5659be;
            this[_0x38523d(0xb28)] = ![];
            var _0x33585f = this[_0x38523d(0xb0e)];
            for (var _0x5b74c2 = 0x0, _0x26e50e = _0x33585f[_0x38523d(0x1ff)]; _0x5b74c2 < _0x26e50e; _0x5b74c2++) {
                var _0x1fdef2 = _0x33585f[_0x5b74c2];
                this[_0x38523d(0xb28)] = this[_0x38523d(0xb28)] || _0x1fdef2 && _0x1fdef2[_0x38523d(0x50a)][_0x38523d(0x521)];
            }
        }
        ['_addReflectionProbeUpdate']() {
            var _0x2b60af = _0x5659be;
            this['_surportReflectionProbe'] && this[_0x2b60af(0xb21)] == 0x1 && (this[_0x2b60af(0x3a6)] && this[_0x2b60af(0x3a6)][_0x2b60af(0xb08)][_0x2b60af(0xb29)](this));
        }
        [_0x5659be(0xb2a)]() {
            var _0x36c073 = _0x5659be, _0x3dd103 = this['_scene'][_0x36c073(0xb2b)], _0x3b31bf = this[_0x36c073(0x4e0)], _0x50ffac = this[_0x36c073(0xb13)];
            if (_0x50ffac >= 0x0 && _0x50ffac < _0x3dd103[_0x36c073(0x1ff)]) {
                var _0x38ffb9 = _0x3dd103[_0x50ffac];
                _0x3b31bf[_0x36c073(0x4a2)](_0x200920[_0x36c073(0xa79)], _0x38ffb9[_0x36c073(0xb2c)]), _0x3b31bf[_0x36c073(0x62c)](_0x200920[_0x36c073(0xa78)]), _0x38ffb9[_0x36c073(0xb2d)] ? (_0x3b31bf[_0x36c073(0x4a2)](_0x200920[_0x36c073(0xb2e)], _0x38ffb9[_0x36c073(0xb2d)]), _0x3b31bf[_0x36c073(0x62c)](_0x200920[_0x36c073(0xa7a)])) : _0x3b31bf[_0x36c073(0x493)](_0x200920[_0x36c073(0xa7a)]);
            } else
                _0x3b31bf[_0x36c073(0x493)](_0x200920[_0x36c073(0xa78)]), _0x3b31bf[_0x36c073(0x493)](_0x200920[_0x36c073(0xa7a)]);
        }
        ['_onWorldMatNeedChange'](_0x4f2d99) {
            var _0x15c7a4 = _0x5659be;
            this[_0x15c7a4(0xb0c)] = !![];
            if (this['_octreeNode']) {
                _0x4f2d99 &= _0x20d0f1[_0x15c7a4(0x59f)] | _0x20d0f1[_0x15c7a4(0x581)] | _0x20d0f1[_0x15c7a4(0x583)];
                if (_0x4f2d99) {
                    if (this[_0x15c7a4(0xb0f)] === -0x1)
                        this[_0x15c7a4(0xb23)][_0x15c7a4(0x823)][_0x15c7a4(0xb29)](this);
                }
            }
            this[_0x15c7a4(0xb2f)]();
        }
        [_0x5659be(0xb1c)]() {
            var _0x23df77 = _0x5659be;
            throw _0x23df77(0xb30);
        }
        [_0x5659be(0x7fe)]() {
            var _0xa2a289 = _0x5659be;
            return this[_0xa2a289(0x2ad)];
        }
        [_0x5659be(0x800)](_0x5dee3c) {
            var _0x45197a = _0x5659be;
            this[_0x45197a(0x2ad)] = _0x5dee3c;
        }
        [_0x5659be(0xa84)](_0x556358) {
            var _0x40010b = _0x5659be;
            this[_0x40010b(0x3a6)] = _0x556358;
        }
        ['_setUnBelongScene']() {
            var _0x2945d6 = _0x5659be;
            this[_0x2945d6(0x3a6)] = null;
        }
        ['_needRender'](_0x1b9330, _0x2ed14c) {
            return !![];
        }
        [_0x5659be(0xb31)]() {
        }
        ['_renderUpdate'](_0x384463, _0x4b263f) {
        }
        ['_renderUpdateWithCamera'](_0x58186d, _0x3a1f0d) {
        }
        [_0x5659be(0x5fe)](_0x3a0576) {
        }
        [_0x5659be(0xa86)]() {
            var _0x3ddd2b = _0x5659be;
            this[_0x3ddd2b(0xb0f)] !== -0x1 && this['_octreeNode'][_0x3ddd2b(0x823)]['removeMotionObject'](this), this[_0x3ddd2b(0xb32)]();
            var _0xbd0276 = 0x0, _0x55eb45 = 0x0;
            for (_0xbd0276 = 0x0, _0x55eb45 = this[_0x3ddd2b(0x600)]['length']; _0xbd0276 < _0x55eb45; _0xbd0276++)
                this[_0x3ddd2b(0x600)][_0xbd0276][_0x3ddd2b(0x311)]();
            for (_0xbd0276 = 0x0, _0x55eb45 = this[_0x3ddd2b(0xb0e)][_0x3ddd2b(0x1ff)]; _0xbd0276 < _0x55eb45; _0xbd0276++)
                this[_0x3ddd2b(0xb0e)][_0xbd0276][_0x3ddd2b(0x5cf)] || this[_0x3ddd2b(0xb0e)][_0xbd0276][_0x3ddd2b(0x351)]();
            this['_renderElements'] = null, this[_0x3ddd2b(0x3d3)] = null, this[_0x3ddd2b(0xb0e)] = null, this['_bounds'] = null, this[_0x3ddd2b(0xb0a)] = null, this[_0x3ddd2b(0x3a6)] = null;
        }
        ['markAsUnStatic']() {
            var _0x3df917 = _0x5659be;
            this['_isPartOfStaticBatch'] && (_0x493d86['instance']['_removeRenderSprite'](this[_0x3df917(0x3d3)]), this[_0x3df917(0xacf)] = ![]);
        }
    }
    _0x55d32a[_0x5659be(0xb33)] = [
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5(),
        new _0x3f70c5()
    ], _0x55d32a[_0x5659be(0x4e8)] = 0x0, _0x55d32a[_0x5659be(0xb34)] = new _0x8fb80(0x1, 0x1, 0x0, 0x0);
    class _0x5bd9f3 extends _0x55d32a {
        constructor(_0x2a9ee2) {
            var _0x48c254 = _0x5659be;
            super(_0x2a9ee2), this[_0x48c254(0x5de)] = new _0x3ed76a();
        }
        [_0x5659be(0xb1c)]() {
            var _0x374c29 = _0x5659be, _0x3d850f = this['_owner']['transform'][_0x374c29(0x3ce)], _0x52a342 = this[_0x374c29(0x3d3)][_0x374c29(0xb35)];
            _0x52a342[_0x374c29(0xb36)](), _0x52a342[_0x374c29(0xa67)][_0x374c29(0xa59)](_0x3d850f, this[_0x374c29(0xa67)]);
        }
        [_0x5659be(0x5f4)](_0x2e14c8, _0x3e2502) {
            var _0x363852 = _0x5659be, _0x4c4e6c = _0x2e14c8[_0x363852(0x5dc)], _0x50de38 = this[_0x363852(0x4e0)];
            if (_0x3e2502) {
                var _0x5e9ff4 = _0x3e2502[_0x363852(0x3ce)];
                _0x50de38['setMatrix4x4'](_0x356e58['WORLDMATRIX'], _0x5e9ff4), _0x3ed76a['multiply'](_0x4c4e6c, _0x5e9ff4, this['_projectionViewWorldMatrix']), _0x50de38['setMatrix4x4'](_0x356e58[_0x363852(0x5dd)], this['_projectionViewWorldMatrix']);
            } else
                _0x50de38[_0x363852(0x4a0)](_0x356e58[_0x363852(0xb37)], _0x3ed76a[_0x363852(0x290)]), _0x50de38['setMatrix4x4'](_0x356e58[_0x363852(0x5dd)], _0x4c4e6c);
        }
    }
    class _0x391375 extends _0x200920 {
        constructor(_0x129579 = 0x2, _0x2d32d3 = null) {
            var _0x231c3d = _0x5659be;
            super(_0x2d32d3), this[_0x231c3d(0xb38)] = ![], this['_isInRenders'] = ![], this[_0x231c3d(0xb35)] = new _0x1c9d51(this, _0x129579), this['_render'] = new _0x5bd9f3(this), this[_0x231c3d(0xb39)](0x0, _0x541c3c[_0x231c3d(0xb3a)]);
        }
        get [_0x5659be(0x2fa)]() {
            var _0x259789 = _0x5659be;
            return this['_geometryFilter'][_0x259789(0xa64)];
        }
        set ['maxLineCount'](_0x400b4a) {
            var _0x94d561 = _0x5659be;
            this[_0x94d561(0xb35)][_0x94d561(0xa69)](_0x400b4a), this['_geometryFilter'][_0x94d561(0xa65)] = Math[_0x94d561(0x204)](this[_0x94d561(0xb35)]['_lineCount'], _0x400b4a);
        }
        get [_0x5659be(0x2f9)]() {
            var _0x3d5782 = _0x5659be;
            return this['_geometryFilter'][_0x3d5782(0xa65)];
        }
        set [_0x5659be(0x2f9)](_0x35c520) {
            var _0x2d284e = _0x5659be;
            if (_0x35c520 > this[_0x2d284e(0x2fa)])
                throw _0x2d284e(0xb3b);
            else
                this[_0x2d284e(0xb35)][_0x2d284e(0xa65)] = _0x35c520;
        }
        get [_0x5659be(0xb3c)]() {
            var _0x22be92 = _0x5659be;
            return this[_0x22be92(0x5e6)];
        }
        [_0x5659be(0x8fa)]() {
            var _0x1d329e = _0x5659be;
            _0x218b83[_0x1d329e(0x500)]['spriteCount']--, this[_0x1d329e(0xb35)][_0x1d329e(0xa65)] != 0x0 && this[_0x1d329e(0xb38)] && (this['_scene'][_0x1d329e(0xa7c)](this[_0x1d329e(0x5e6)]), this[_0x1d329e(0xb3d)] = ![]), this[_0x1d329e(0xb38)] = ![];
        }
        [_0x5659be(0x8f7)]() {
            var _0x23f917 = _0x5659be;
            _0x218b83[_0x23f917(0x500)]['spriteCount']++, this[_0x23f917(0xb38)] = !![], this[_0x23f917(0xb35)][_0x23f917(0xa65)] != 0x0 && (this[_0x23f917(0x3a6)][_0x23f917(0xa7d)](this[_0x23f917(0x5e6)]), this[_0x23f917(0xb3d)] = !![]);
        }
        [_0x5659be(0xb39)](_0x16cf3c, _0x2b8bf2) {
            var _0x282130 = _0x5659be, _0x46bae6 = this[_0x282130(0x5e6)][_0x282130(0x600)];
            _0x2b8bf2 || (_0x2b8bf2 = _0x541c3c['defaultMaterial']);
            var _0x2a9050 = _0x46bae6[_0x16cf3c];
            _0x2a9050 || (_0x2a9050 = _0x46bae6[_0x16cf3c] = new _0x5551c8()), _0x2a9050['setTransform'](this[_0x282130(0x3ca)]), _0x2a9050[_0x282130(0xaba)](this[_0x282130(0xb35)]), _0x2a9050[_0x282130(0x506)] = this[_0x282130(0x5e6)], _0x2a9050['material'] = _0x2b8bf2;
        }
        [_0x5659be(0x2fb)](_0x49b432, _0x539426, _0x5cd6a6, _0x3f6d7d) {
            var _0x70fb90 = _0x5659be;
            if (this[_0x70fb90(0xb35)]['_lineCount'] !== this['_geometryFilter'][_0x70fb90(0xa64)])
                this[_0x70fb90(0xb35)]['_updateLineData'](this[_0x70fb90(0xb35)][_0x70fb90(0xa65)]++, _0x49b432, _0x539426, _0x5cd6a6, _0x3f6d7d);
            else
                throw _0x70fb90(0xb3e);
            this['_isRenderActive'] && !this[_0x70fb90(0xb3d)] && this[_0x70fb90(0xb35)][_0x70fb90(0xa65)] > 0x0 && (this['_scene']['_addRenderObject'](this[_0x70fb90(0x5e6)]), this['_isInRenders'] = !![]);
        }
        ['addLines'](_0x7054a0) {
            var _0x332339 = _0x5659be, _0x4d6141 = this[_0x332339(0xb35)][_0x332339(0xa65)], _0x177974 = _0x7054a0['length'];
            if (_0x4d6141 + _0x177974 > this[_0x332339(0xb35)][_0x332339(0xa64)])
                throw 'PixelLineSprite3D:\x20lineCount\x20plus\x20lines\x20count\x20must\x20less\x20than\x20maxLineCount.';
            else
                this[_0x332339(0xb35)]['_updateLineDatas'](_0x4d6141, _0x7054a0), this[_0x332339(0xb35)][_0x332339(0xa65)] += _0x177974;
            this[_0x332339(0xb38)] && !this[_0x332339(0xb3d)] && this[_0x332339(0xb35)][_0x332339(0xa65)] > 0x0 && (this[_0x332339(0x3a6)][_0x332339(0xa7d)](this['_render']), this['_isInRenders'] = !![]);
        }
        ['removeLine'](_0x3e617b) {
            var _0x4e6037 = _0x5659be;
            if (_0x3e617b < this[_0x4e6037(0xb35)][_0x4e6037(0xa65)])
                this['_geometryFilter'][_0x4e6037(0xa6c)](_0x3e617b);
            else
                throw 'PixelLineSprite3D:\x20index\x20must\x20less\x20than\x20lineCount.';
            this[_0x4e6037(0xb38)] && this[_0x4e6037(0xb3d)] && this[_0x4e6037(0xb35)][_0x4e6037(0xa65)] == 0x0 && (this[_0x4e6037(0x3a6)][_0x4e6037(0xa7c)](this[_0x4e6037(0x5e6)]), this[_0x4e6037(0xb3d)] = ![]);
        }
        [_0x5659be(0xb3f)](_0x34d0a1, _0x18058b, _0x59d9dd, _0x3f1df7, _0x40a07) {
            var _0x50f382 = _0x5659be;
            if (_0x34d0a1 < this[_0x50f382(0xb35)][_0x50f382(0xa65)])
                this[_0x50f382(0xb35)]['_updateLineData'](_0x34d0a1, _0x18058b, _0x59d9dd, _0x3f1df7, _0x40a07);
            else
                throw _0x50f382(0xb40);
        }
        [_0x5659be(0xb41)](_0x5dae8c, _0x2b1781) {
            var _0x120e30 = _0x5659be;
            if (_0x5dae8c < this[_0x120e30(0x2f9)])
                this[_0x120e30(0xb35)][_0x120e30(0xa73)](_0x5dae8c, _0x2b1781);
            else
                throw 'PixelLineSprite3D:\x20index\x20must\x20less\x20than\x20lineCount.';
        }
        [_0x5659be(0x496)]() {
            var _0x436d34 = _0x5659be;
            this[_0x436d34(0xb35)][_0x436d34(0xa65)] = 0x0, this[_0x436d34(0xb38)] && this['_isInRenders'] && (this[_0x436d34(0x3a6)][_0x436d34(0xa7c)](this['_render']), this[_0x436d34(0xb3d)] = ![]);
        }
        [_0x5659be(0x5d2)]() {
            return new _0x391375();
        }
    }
    class _0x23b84b {
        constructor(_0x312b97 = ![]) {
            var _0x524d9c = _0x5659be;
            this[_0x524d9c(0xaa4)] = ![], this[_0x524d9c(0x1f6)] = new _0x5ae7ed(), this[_0x524d9c(0xaa1)] = null, this['lastTransparentBatched'] = ![], this[_0x524d9c(0xaa4)] = _0x312b97;
        }
        [_0x5659be(0xad4)](_0x5cd439, _0x3f30ac) {
            var _0x384429 = _0x5659be, _0x296473 = _0x5cd439[_0x384429(0x8d6)]['renderQueue'] - _0x3f30ac[_0x384429(0x8d6)]['renderQueue'];
            if (_0x296473 === 0x0) {
                var _0x163bf9 = this[_0x384429(0xaa4)] ? _0x3f30ac[_0x384429(0x506)][_0x384429(0x815)] - _0x5cd439['render']['_distanceForSort'] : _0x5cd439[_0x384429(0x506)][_0x384429(0x815)] - _0x3f30ac[_0x384429(0x506)][_0x384429(0x815)];
                return _0x163bf9 + _0x3f30ac[_0x384429(0x506)][_0x384429(0xb11)] - _0x5cd439[_0x384429(0x506)][_0x384429(0xb11)];
            } else
                return _0x296473;
        }
        [_0x5659be(0xb42)](_0x3c6bc7, _0xd8d0b5) {
            var _0x2190f1 = _0x5659be, _0x1c8a92 = this[_0x2190f1(0x1f6)][_0x2190f1(0x1f6)], _0x59ad7d = _0x1c8a92[Math[_0x2190f1(0x241)]((_0xd8d0b5 + _0x3c6bc7) / 0x2)];
            while (_0x3c6bc7 <= _0xd8d0b5) {
                while (this[_0x2190f1(0xad4)](_0x1c8a92[_0x3c6bc7], _0x59ad7d) < 0x0)
                    _0x3c6bc7++;
                while (this['_compare'](_0x1c8a92[_0xd8d0b5], _0x59ad7d) > 0x0)
                    _0xd8d0b5--;
                if (_0x3c6bc7 < _0xd8d0b5) {
                    var _0x1d2524 = _0x1c8a92[_0x3c6bc7];
                    _0x1c8a92[_0x3c6bc7] = _0x1c8a92[_0xd8d0b5], _0x1c8a92[_0xd8d0b5] = _0x1d2524, _0x3c6bc7++, _0xd8d0b5--;
                } else {
                    if (_0x3c6bc7 === _0xd8d0b5) {
                        _0x3c6bc7++;
                        break;
                    }
                }
            }
            return _0x3c6bc7;
        }
        [_0x5659be(0x821)](_0xce522c, _0xd6f6e4) {
            var _0x45330d = _0x5659be;
            if (this[_0x45330d(0x1f6)][_0x45330d(0x1ff)] > 0x1) {
                var _0x439b50 = this[_0x45330d(0xb42)](_0xce522c, _0xd6f6e4), _0x14f67b = _0x439b50 - 0x1;
                if (_0xce522c < _0x14f67b)
                    this[_0x45330d(0x821)](_0xce522c, _0x14f67b);
                if (_0x439b50 < _0xd6f6e4)
                    this[_0x45330d(0x821)](_0x439b50, _0xd6f6e4);
            }
        }
        [_0x5659be(0x5e6)](_0x1487f5) {
            var _0x5ec6d2 = _0x5659be, _0x72448c = this[_0x5ec6d2(0x1f6)][_0x5ec6d2(0x1f6)];
            for (var _0x3407da = 0x0, _0x699c04 = this[_0x5ec6d2(0x1f6)][_0x5ec6d2(0x1ff)]; _0x3407da < _0x699c04; _0x3407da++)
                _0x72448c[_0x3407da][_0x5ec6d2(0x5e6)](_0x1487f5);
        }
        ['clear']() {
            var _0x320879 = _0x5659be;
            this[_0x320879(0x1f6)]['length'] = 0x0, this['lastTransparentRenderElement'] = null, this[_0x320879(0xaa0)] = ![];
        }
    }
    class _0x3fc434 {
        constructor(_0x4b089f, _0x24e084, _0x108c34, _0x4a8da2) {
            var _0x8bcf96 = _0x5659be;
            this[_0x8bcf96(0xa67)] = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5()), this['_objects'] = [], this[_0x8bcf96(0xb43)] = ![], this[_0x8bcf96(0x87c)] = new _0x3f70c5(), this['baseLength'] = 0x0, this['_setValues'](_0x4b089f, _0x24e084, _0x108c34, _0x4a8da2);
        }
        static [_0x5659be(0xb44)](_0x523b32, _0x45fd68) {
            var _0x319967 = _0x5659be;
            return _0x4589df[_0x319967(0xb45)](_0x523b32, _0x45fd68) == _0x25d93b[_0x319967(0x877)];
        }
        [_0x5659be(0xb46)](_0x3d612e, _0x1fbdbd, _0x1fe66a, _0x2760a4) {
            var _0x536c2c = _0x5659be;
            this[_0x536c2c(0x823)] = _0x3d612e, this[_0x536c2c(0x2fd)] = _0x1fbdbd, this['baseLength'] = _0x1fe66a, _0x2760a4[_0x536c2c(0x1f0)](this['center']);
            var _0x29a1ba = this['_bounds'][_0x536c2c(0x204)], _0x3ea190 = this[_0x536c2c(0xa67)][_0x536c2c(0x205)], _0x42b734 = _0x3d612e[_0x536c2c(0xb47)] * _0x1fe66a / 0x2;
            _0x29a1ba[_0x536c2c(0x1fa)](_0x2760a4['x'] - _0x42b734, _0x2760a4['y'] - _0x42b734, _0x2760a4['z'] - _0x42b734), _0x3ea190[_0x536c2c(0x1fa)](_0x2760a4['x'] + _0x42b734, _0x2760a4['y'] + _0x42b734, _0x2760a4['z'] + _0x42b734);
        }
        [_0x5659be(0xb48)](_0x3168fc) {
            var _0x5f0303 = _0x5659be;
            if (this['_children'] != null && this['_children'][_0x3168fc])
                return this[_0x5f0303(0x57c)][_0x3168fc][_0x5f0303(0xa67)];
            else {
                var _0x563d2e = this[_0x5f0303(0xb49)] / 0x4, _0x10db3e = this['baseLength'] / 0x2 * this['_octree'][_0x5f0303(0xb47)] / 0x2, _0x41b40b = _0x3fc434[_0x5f0303(0xb4a)], _0x3ccd97 = _0x41b40b[_0x5f0303(0x204)], _0x3eba19 = _0x41b40b['max'];
                switch (_0x3168fc) {
                case 0x0:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] - _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this['center']['y'] + _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e - _0x10db3e, _0x3eba19['x'] = this[_0x5f0303(0x87c)]['x'] - _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] + _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e + _0x10db3e;
                    break;
                case 0x1:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] + _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this[_0x5f0303(0x87c)]['y'] + _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e - _0x10db3e, _0x3eba19['x'] = this['center']['x'] + _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] + _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e + _0x10db3e;
                    break;
                case 0x2:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] - _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this[_0x5f0303(0x87c)]['y'] + _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this['center']['z'] + _0x563d2e - _0x10db3e, _0x3eba19['x'] = this['center']['x'] - _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] + _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] + _0x563d2e + _0x10db3e;
                    break;
                case 0x3:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] + _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this['center']['y'] + _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this[_0x5f0303(0x87c)]['z'] + _0x563d2e - _0x10db3e, _0x3eba19['x'] = this[_0x5f0303(0x87c)]['x'] + _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] + _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] + _0x563d2e + _0x10db3e;
                    break;
                case 0x4:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] - _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e - _0x10db3e, _0x3eba19['x'] = this['center']['x'] - _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e + _0x10db3e;
                    break;
                case 0x5:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] + _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this['center']['z'] - _0x563d2e - _0x10db3e, _0x3eba19['x'] = this[_0x5f0303(0x87c)]['x'] + _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] - _0x563d2e + _0x10db3e;
                    break;
                case 0x6:
                    _0x3ccd97['x'] = this[_0x5f0303(0x87c)]['x'] - _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this['center']['z'] + _0x563d2e - _0x10db3e, _0x3eba19['x'] = this[_0x5f0303(0x87c)]['x'] - _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e + _0x10db3e, _0x3eba19['z'] = this['center']['z'] + _0x563d2e + _0x10db3e;
                    break;
                case 0x7:
                    _0x3ccd97['x'] = this['center']['x'] + _0x563d2e - _0x10db3e, _0x3ccd97['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e - _0x10db3e, _0x3ccd97['z'] = this[_0x5f0303(0x87c)]['z'] + _0x563d2e - _0x10db3e, _0x3eba19['x'] = this[_0x5f0303(0x87c)]['x'] + _0x563d2e + _0x10db3e, _0x3eba19['y'] = this[_0x5f0303(0x87c)]['y'] - _0x563d2e + _0x10db3e, _0x3eba19['z'] = this[_0x5f0303(0x87c)]['z'] + _0x563d2e + _0x10db3e;
                    break;
                }
                return _0x41b40b;
            }
        }
        [_0x5659be(0xb4b)](_0x1482a0) {
            var _0x4caa51 = _0x5659be;
            if (this[_0x4caa51(0x57c)] != null)
                return this[_0x4caa51(0x57c)][_0x1482a0]['center'];
            else {
                var _0x241701 = this['baseLength'] / 0x4, _0x3e30aa = _0x3fc434[_0x4caa51(0x59b)];
                switch (_0x1482a0) {
                case 0x0:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] - _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] + _0x241701, _0x3e30aa['z'] = this['center']['z'] - _0x241701;
                    break;
                case 0x1:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] + _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] + _0x241701, _0x3e30aa['z'] = this[_0x4caa51(0x87c)]['z'] - _0x241701;
                    break;
                case 0x2:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] - _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] + _0x241701, _0x3e30aa['z'] = this['center']['z'] + _0x241701;
                    break;
                case 0x3:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] + _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] + _0x241701, _0x3e30aa['z'] = this['center']['z'] + _0x241701;
                    break;
                case 0x4:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] - _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] - _0x241701, _0x3e30aa['z'] = this[_0x4caa51(0x87c)]['z'] - _0x241701;
                    break;
                case 0x5:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] + _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] - _0x241701, _0x3e30aa['z'] = this[_0x4caa51(0x87c)]['z'] - _0x241701;
                    break;
                case 0x6:
                    _0x3e30aa['x'] = this['center']['x'] - _0x241701, _0x3e30aa['y'] = this[_0x4caa51(0x87c)]['y'] - _0x241701, _0x3e30aa['z'] = this[_0x4caa51(0x87c)]['z'] + _0x241701;
                    break;
                case 0x7:
                    _0x3e30aa['x'] = this[_0x4caa51(0x87c)]['x'] + _0x241701, _0x3e30aa['y'] = this['center']['y'] - _0x241701, _0x3e30aa['z'] = this[_0x4caa51(0x87c)]['z'] + _0x241701;
                    break;
                }
                return _0x3e30aa;
            }
        }
        [_0x5659be(0xb4c)](_0x32faef) {
            var _0x455d4d = _0x5659be, _0x3ed1b8 = this['baseLength'] / 0x4;
            this[_0x455d4d(0x57c)] || (this['_children'] = []);
            switch (_0x32faef) {
            case 0x0:
                return this[_0x455d4d(0x57c)][0x0] || (this[_0x455d4d(0x57c)][0x0] = new _0x3fc434(this[_0x455d4d(0x823)], this, this[_0x455d4d(0xb49)] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] + -_0x3ed1b8, this['center']['y'] + _0x3ed1b8, this['center']['z'] - _0x3ed1b8)));
            case 0x1:
                return this[_0x455d4d(0x57c)][0x1] || (this[_0x455d4d(0x57c)][0x1] = new _0x3fc434(this[_0x455d4d(0x823)], this, this[_0x455d4d(0xb49)] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] + _0x3ed1b8, this[_0x455d4d(0x87c)]['y'] + _0x3ed1b8, this['center']['z'] - _0x3ed1b8)));
            case 0x2:
                return this[_0x455d4d(0x57c)][0x2] || (this[_0x455d4d(0x57c)][0x2] = new _0x3fc434(this[_0x455d4d(0x823)], this, this['baseLength'] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] - _0x3ed1b8, this['center']['y'] + _0x3ed1b8, this[_0x455d4d(0x87c)]['z'] + _0x3ed1b8)));
            case 0x3:
                return this[_0x455d4d(0x57c)][0x3] || (this[_0x455d4d(0x57c)][0x3] = new _0x3fc434(this[_0x455d4d(0x823)], this, this[_0x455d4d(0xb49)] / 0x2, new _0x3f70c5(this['center']['x'] + _0x3ed1b8, this[_0x455d4d(0x87c)]['y'] + _0x3ed1b8, this[_0x455d4d(0x87c)]['z'] + _0x3ed1b8)));
            case 0x4:
                return this[_0x455d4d(0x57c)][0x4] || (this[_0x455d4d(0x57c)][0x4] = new _0x3fc434(this[_0x455d4d(0x823)], this, this['baseLength'] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] - _0x3ed1b8, this[_0x455d4d(0x87c)]['y'] - _0x3ed1b8, this[_0x455d4d(0x87c)]['z'] - _0x3ed1b8)));
            case 0x5:
                return this['_children'][0x5] || (this['_children'][0x5] = new _0x3fc434(this[_0x455d4d(0x823)], this, this[_0x455d4d(0xb49)] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] + _0x3ed1b8, this[_0x455d4d(0x87c)]['y'] - _0x3ed1b8, this['center']['z'] - _0x3ed1b8)));
            case 0x6:
                return this['_children'][0x6] || (this[_0x455d4d(0x57c)][0x6] = new _0x3fc434(this[_0x455d4d(0x823)], this, this['baseLength'] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] - _0x3ed1b8, this[_0x455d4d(0x87c)]['y'] - _0x3ed1b8, this[_0x455d4d(0x87c)]['z'] + _0x3ed1b8)));
            case 0x7:
                return this[_0x455d4d(0x57c)][0x7] || (this[_0x455d4d(0x57c)][0x7] = new _0x3fc434(this[_0x455d4d(0x823)], this, this[_0x455d4d(0xb49)] / 0x2, new _0x3f70c5(this[_0x455d4d(0x87c)]['x'] + _0x3ed1b8, this[_0x455d4d(0x87c)]['y'] - _0x3ed1b8, this['center']['z'] + _0x3ed1b8)));
            default:
                throw _0x455d4d(0xb4d);
            }
        }
        [_0x5659be(0xb4e)]() {
            var _0x3eb4d0 = _0x5659be, _0x53b5ff = this[_0x3eb4d0(0xb4f)][_0x3eb4d0(0x1ff)];
            for (var _0x509229 = 0x0; _0x509229 < 0x8; _0x509229++) {
                var _0x4f8222 = this['_children'][_0x509229];
                if (_0x4f8222) {
                    if (_0x4f8222[_0x3eb4d0(0x57c)] != null)
                        return ![];
                    _0x53b5ff += _0x4f8222[_0x3eb4d0(0xb4f)][_0x3eb4d0(0x1ff)];
                }
            }
            return _0x53b5ff <= _0x3fc434[_0x3eb4d0(0xb50)];
        }
        ['_mergeChildren']() {
            var _0x4e78f5 = _0x5659be;
            for (var _0x352a3d = 0x0; _0x352a3d < 0x8; _0x352a3d++) {
                var _0x43ceb6 = this['_children'][_0x352a3d];
                if (_0x43ceb6) {
                    _0x43ceb6[_0x4e78f5(0x2fd)] = null;
                    var _0x2e1158 = _0x43ceb6[_0x4e78f5(0xb4f)];
                    for (var _0x28d59 = _0x2e1158['length'] - 0x1; _0x28d59 >= 0x0; _0x28d59--) {
                        var _0x13cf8c = _0x2e1158[_0x28d59];
                        this[_0x4e78f5(0xb4f)]['push'](_0x13cf8c), _0x13cf8c['_setOctreeNode'](this);
                    }
                }
            }
            this[_0x4e78f5(0x57c)] = null;
        }
        [_0x5659be(0xb51)]() {
            var _0x21af98 = _0x5659be;
            if (this['_children'] === null) {
                var _0x5edb8a = this[_0x21af98(0x2fd)];
                _0x5edb8a && _0x5edb8a[_0x21af98(0xb4e)]() && (_0x5edb8a[_0x21af98(0xb52)](), _0x5edb8a[_0x21af98(0xb51)]());
            }
        }
        [_0x5659be(0xb53)](_0x4d1b98) {
            var _0x112d5f = _0x5659be;
            if (this['_children'] == null) {
                if (this['_objects'][_0x112d5f(0x1ff)] < _0x3fc434[_0x112d5f(0xb50)] || this['baseLength'] / 0x2 < this[_0x112d5f(0x823)][_0x112d5f(0xb54)])
                    return this;
                for (var _0x4a8e05 = this[_0x112d5f(0xb4f)][_0x112d5f(0x1ff)] - 0x1; _0x4a8e05 >= 0x0; _0x4a8e05--) {
                    var _0x37c2b4 = this[_0x112d5f(0xb4f)][_0x4a8e05], _0x1be810 = this[_0x112d5f(0xb55)](_0x37c2b4[_0x112d5f(0x80d)][_0x112d5f(0x816)]());
                    _0x3fc434[_0x112d5f(0xb44)](this[_0x112d5f(0xb48)](_0x1be810), _0x37c2b4[_0x112d5f(0x80d)][_0x112d5f(0x80e)]()) && (this[_0x112d5f(0xb4f)][_0x112d5f(0x32c)](this['_objects'][_0x112d5f(0x384)](_0x37c2b4), 0x1), this[_0x112d5f(0xb4c)](_0x1be810)['_add'](_0x37c2b4));
                }
            }
            var _0x556db7 = this[_0x112d5f(0xb55)](_0x4d1b98['bounds'][_0x112d5f(0x816)]());
            if (_0x3fc434[_0x112d5f(0xb44)](this[_0x112d5f(0xb48)](_0x556db7), _0x4d1b98[_0x112d5f(0x80d)][_0x112d5f(0x80e)]()))
                return this[_0x112d5f(0xb4c)](_0x556db7)[_0x112d5f(0xb53)](_0x4d1b98);
            else
                return this;
        }
        [_0x5659be(0x7fd)](_0x3e8d49) {
            var _0x1aa2c5 = _0x5659be, _0x1b2221 = this['_checkAddNode'](_0x3e8d49);
            _0x1b2221[_0x1aa2c5(0xb4f)][_0x1aa2c5(0x298)](_0x3e8d49), _0x3e8d49[_0x1aa2c5(0xb24)](_0x1b2221);
        }
        [_0x5659be(0xb56)](_0x1d3ee4) {
            var _0x2783de = _0x5659be, _0x202db0 = this['_objects'][_0x2783de(0x384)](_0x1d3ee4);
            this['_objects'][_0x2783de(0x32c)](_0x202db0, 0x1), _0x1d3ee4['_setOctreeNode'](null), this['_merge']();
        }
        [_0x5659be(0xb57)](_0x5bcea3) {
            var _0x5b1fee = _0x5659be;
            if (_0x4589df[_0x5b1fee(0xb45)](this['_bounds'], _0x5bcea3['bounds'][_0x5b1fee(0x80e)]()) === _0x25d93b['Contains'])
                return this[_0x5b1fee(0x7fd)](_0x5bcea3), !![];
            else {
                if (this[_0x5b1fee(0x2fd)])
                    return this[_0x5b1fee(0x2fd)][_0x5b1fee(0xb57)](_0x5bcea3);
                else
                    return ![];
            }
        }
        ['_getCollidingWithFrustum'](_0x299e93, _0x38652f, _0x253e00, _0x306a45, _0x4ec3dc, _0x5904d5) {
            var _0xe39751 = _0x5659be, _0xd40243 = _0x299e93[_0xe39751(0x810)], _0x219c12 = _0x299e93[_0xe39751(0x59e)], _0x2660b1 = _0x299e93[_0xe39751(0x811)];
            if (_0x253e00) {
                var _0x1f229a = _0xd40243['containsBoundBox'](this[_0xe39751(0xa67)]);
                _0x218b83[_0xe39751(0x500)][_0xe39751(0xb58)]++;
                if (_0x1f229a === _0x25d93b[_0xe39751(0x894)]) {
                    for (var _0x3f83a5 = 0x0, _0x495735 = this[_0xe39751(0xb4f)][_0xe39751(0x1ff)]; _0x3f83a5 < _0x495735; _0x3f83a5++) {
                        this[_0xe39751(0xb4f)][_0x3f83a5][_0xe39751(0xb31)]();
                    }
                    return;
                }
                _0x253e00 = _0x1f229a === _0x25d93b[_0xe39751(0x878)];
            }
            this[_0xe39751(0xb43)] = !_0x253e00;
            var _0x407e09 = _0x38652f[_0xe39751(0x5da)], _0x2691a9 = _0x218b83[_0xe39751(0x500)]['loopCount'];
            for (var _0x3f83a5 = 0x0, _0x495735 = this[_0xe39751(0xb4f)][_0xe39751(0x1ff)]; _0x3f83a5 < _0x495735; _0x3f83a5++) {
                var _0x2323d0 = this[_0xe39751(0xb4f)][_0x3f83a5], _0x385edb;
                if (_0x5904d5)
                    _0x385edb = _0x2323d0[_0xe39751(0x824)] && _0x2323d0['_enable'];
                else
                    _0x385edb = (Math[_0xe39751(0x2ef)](0x2, _0x2323d0[_0xe39751(0x3d3)][_0xe39751(0x5bf)]) & _0x2660b1) != 0x0 && _0x2323d0[_0xe39751(0x651)];
                if (_0x385edb) {
                    if (_0x253e00) {
                        _0x218b83[_0xe39751(0x500)][_0xe39751(0x812)]++;
                        if (!_0x2323d0[_0xe39751(0x813)](_0xd40243, _0x38652f))
                            continue;
                    }
                    _0x2323d0[_0xe39751(0x814)] = _0x2691a9, _0x2323d0['_distanceForSort'] = _0x3f70c5[_0xe39751(0x208)](_0x2323d0[_0xe39751(0x80d)][_0xe39751(0x816)](), _0x219c12);
                    var _0x31a675 = _0x2323d0['_renderElements'];
                    for (var _0x224119 = 0x0, _0x464bb2 = _0x31a675[_0xe39751(0x1ff)]; _0x224119 < _0x464bb2; _0x224119++) {
                        var _0x14e90c = _0x31a675[_0x224119];
                        _0x14e90c[_0xe39751(0x3b3)](_0x407e09, _0x38652f, _0x306a45, _0x4ec3dc);
                    }
                }
            }
            if (this[_0xe39751(0x57c)] != null)
                for (_0x3f83a5 = 0x0; _0x3f83a5 < 0x8; _0x3f83a5++) {
                    var _0x4192a4 = this['_children'][_0x3f83a5];
                    _0x4192a4 && _0x4192a4[_0xe39751(0xb59)](_0x299e93, _0x38652f, _0x253e00, _0x306a45, _0x4ec3dc, _0x5904d5);
                }
        }
        [_0x5659be(0xb5a)](_0x343067, _0x421f8d) {
            var _0x1aaa9d = _0x5659be, _0x4ab535 = _0x343067[_0x1aaa9d(0x827)], _0x713f8 = _0x343067[_0x1aaa9d(0xb5b)], _0xd06e3f = this['_bounds'][_0x1aaa9d(0x204)], _0x30c8c0 = this[_0x1aaa9d(0xa67)]['max'], _0x48a92e = _0xd06e3f['x'], _0x176247 = _0xd06e3f['y'], _0x52dfe8 = _0xd06e3f['z'], _0x576934 = _0x30c8c0['x'], _0x48a500 = _0x30c8c0['y'], _0x33877d = _0x30c8c0['z'], _0x47267c = !![];
            for (var _0x2ec542 = 0x0; _0x2ec542 < _0x4ab535; _0x2ec542++) {
                var _0xc8b7c9 = _0x713f8[_0x2ec542], _0x5db879 = _0xc8b7c9[_0x1aaa9d(0x829)];
                if (_0xc8b7c9[_0x1aaa9d(0x208)] + _0x5db879['x'] * (_0x5db879['x'] < 0x0 ? _0x48a92e : _0x576934) + _0x5db879['y'] * (_0x5db879['y'] < 0x0 ? _0x176247 : _0x48a500) + _0x5db879['z'] * (_0x5db879['z'] < 0x0 ? _0x52dfe8 : _0x33877d) < 0x0) {
                    _0x47267c = ![];
                    break;
                }
            }
            if (!_0x47267c)
                return;
            var _0x4471b0 = _0x421f8d['scene'], _0x4ad199 = _0x218b83[_0x1aaa9d(0x500)][_0x1aaa9d(0x4da)];
            for (var _0x5d60b0 = 0x0, _0x3f4abc = this['_objects']['length']; _0x5d60b0 < _0x3f4abc; _0x5d60b0++) {
                var _0x2785f3 = this[_0x1aaa9d(0xb4f)][_0x5d60b0], _0x4b2546;
                let _0x5520d8 = !![];
                _0x4b2546 = _0x2785f3[_0x1aaa9d(0x824)] && _0x2785f3[_0x1aaa9d(0x651)];
                if (_0x4b2546)
                    for (var _0x2ec542 = 0x0; _0x2ec542 < _0x4ab535; _0x2ec542++) {
                        var _0xc8b7c9 = _0x713f8[_0x2ec542], _0x5db879 = _0xc8b7c9[_0x1aaa9d(0x829)];
                        if (_0xc8b7c9[_0x1aaa9d(0x208)] + _0x5db879['x'] * (_0x5db879['x'] < 0x0 ? _0x48a92e : _0x576934) + _0x5db879['y'] * (_0x5db879['y'] < 0x0 ? _0x176247 : _0x48a500) + _0x5db879['z'] * (_0x5db879['z'] < 0x0 ? _0x52dfe8 : _0x33877d) < 0x0) {
                            _0x5520d8 = ![];
                            break;
                        }
                    }
                if (!_0x5520d8 || !_0x4b2546)
                    continue;
                _0x2785f3['_renderMark'] = _0x4ad199, _0x2785f3[_0x1aaa9d(0x815)] = _0x3f70c5[_0x1aaa9d(0x208)](_0x2785f3['bounds'][_0x1aaa9d(0x816)](), _0x343067[_0x1aaa9d(0x59e)]);
                var _0x4b4b87 = _0x2785f3['_renderElements'];
                for (var _0x2ec542 = 0x0, _0x3b6aec = _0x4b4b87['length']; _0x2ec542 < _0x3b6aec; _0x2ec542++) {
                    var _0xfdf7a5 = _0x4b4b87[_0x2ec542];
                    _0xfdf7a5['_update'](_0x4471b0, _0x421f8d, null, null);
                }
            }
            if (this[_0x1aaa9d(0x57c)] != null)
                for (_0x5d60b0 = 0x0; _0x5d60b0 < 0x8; _0x5d60b0++) {
                    var _0x19c602 = this['_children'][_0x5d60b0];
                    _0x19c602 && _0x19c602[_0x1aaa9d(0xb5a)](_0x343067, _0x421f8d);
                }
        }
        ['_getCollidingWithBoundBox'](_0x28a8bc, _0x410cfb, _0x106d9f) {
            var _0x490b8a = _0x5659be;
            if (_0x410cfb) {
                var _0xbf04ef = _0x4589df['boxContainsBox'](this[_0x490b8a(0xa67)], _0x28a8bc);
                if (_0xbf04ef === _0x25d93b[_0x490b8a(0x894)])
                    return;
                _0x410cfb = _0xbf04ef === _0x25d93b[_0x490b8a(0x878)];
            }
            if (_0x410cfb)
                for (var _0x1735a2 = 0x0, _0x11acf3 = this['_objects']['length']; _0x1735a2 < _0x11acf3; _0x1735a2++) {
                    var _0x394152 = this[_0x490b8a(0xb4f)][_0x1735a2];
                    _0x4589df[_0x490b8a(0x890)](_0x394152['bounds'][_0x490b8a(0x80e)](), _0x28a8bc) && _0x106d9f['push'](_0x394152);
                }
            if (this[_0x490b8a(0x57c)] != null)
                for (_0x1735a2 = 0x0; _0x1735a2 < 0x8; _0x1735a2++) {
                    var _0x5134a2 = this[_0x490b8a(0x57c)][_0x1735a2];
                    _0x5134a2[_0x490b8a(0xb5c)](_0x28a8bc, _0x410cfb, _0x106d9f);
                }
        }
        [_0x5659be(0xb55)](_0x14f2a3) {
            var _0x2f4ba9 = _0x5659be;
            return (_0x14f2a3['x'] <= this[_0x2f4ba9(0x87c)]['x'] ? 0x0 : 0x1) + (_0x14f2a3['y'] >= this[_0x2f4ba9(0x87c)]['y'] ? 0x0 : 0x4) + (_0x14f2a3['z'] <= this[_0x2f4ba9(0x87c)]['z'] ? 0x0 : 0x2);
        }
        [_0x5659be(0x3b3)](_0x1d165e) {
            var _0x443e3a = _0x5659be;
            if (_0x4589df[_0x443e3a(0xb45)](this['_bounds'], _0x1d165e[_0x443e3a(0x80d)][_0x443e3a(0x80e)]()) === _0x25d93b[_0x443e3a(0x877)]) {
                var _0x52bb46 = this[_0x443e3a(0xb53)](_0x1d165e);
                if (_0x52bb46 !== _0x1d165e[_0x443e3a(0xb22)]()) {
                    _0x52bb46['_objects'][_0x443e3a(0x298)](_0x1d165e), _0x1d165e[_0x443e3a(0xb24)](_0x52bb46);
                    var _0x4cde8d = this[_0x443e3a(0xb4f)][_0x443e3a(0x384)](_0x1d165e);
                    this['_objects'][_0x443e3a(0x32c)](_0x4cde8d, 0x1), this[_0x443e3a(0xb51)]();
                }
                return !![];
            } else {
                if (this['_parent']) {
                    var _0x3bb8b7 = this['_parent']['_addUp'](_0x1d165e);
                    return _0x3bb8b7 && (_0x4cde8d = this['_objects'][_0x443e3a(0x384)](_0x1d165e), this[_0x443e3a(0xb4f)][_0x443e3a(0x32c)](_0x4cde8d, 0x1), this['_merge']()), _0x3bb8b7;
                } else
                    return ![];
            }
        }
        [_0x5659be(0x201)](_0x5973f4) {
            var _0x3eb752 = _0x5659be;
            if (!_0x3fc434[_0x3eb752(0xb44)](this['_bounds'], _0x5973f4['bounds'][_0x3eb752(0x80e)]()))
                return ![];
            return this[_0x3eb752(0x7fd)](_0x5973f4), !![];
        }
        [_0x5659be(0x3a9)](_0x4f1894) {
            var _0x21e961 = _0x5659be;
            if (_0x4f1894['_getOctreeNode']() !== this)
                return ![];
            return this[_0x21e961(0xb56)](_0x4f1894), !![];
        }
        [_0x5659be(0x85a)](_0x23672b) {
            var _0x5a0d08 = _0x5659be;
            if (_0x23672b[_0x5a0d08(0xb22)]() !== this)
                return ![];
            return this[_0x5a0d08(0x3b3)](_0x23672b);
        }
        ['shrinkIfPossible'](_0x26eff2) {
            var _0x5bb32 = _0x5659be;
            if (this[_0x5bb32(0xb49)] < _0x26eff2 * 0x2)
                return this;
            var _0x28d41a = -0x1;
            for (var _0x290f65 = 0x0, _0x372947 = this[_0x5bb32(0xb4f)]['length']; _0x290f65 < _0x372947; _0x290f65++) {
                var _0x44de51 = this[_0x5bb32(0xb4f)][_0x290f65], _0x29d33b = this[_0x5bb32(0xb55)](_0x44de51[_0x5bb32(0x80d)][_0x5bb32(0x816)]());
                if (_0x290f65 == 0x0 || _0x29d33b == _0x28d41a) {
                    var _0x15f9f6 = this['_getChildBound'](_0x29d33b);
                    if (_0x3fc434[_0x5bb32(0xb44)](_0x15f9f6, _0x44de51[_0x5bb32(0x80d)]['_getBoundBox']()))
                        _0x290f65 == 0x0 && (_0x28d41a = _0x29d33b);
                    else
                        return this;
                } else
                    return this;
            }
            if (this[_0x5bb32(0x57c)] != null) {
                var _0x6e612f = ![];
                for (_0x290f65 = 0x0, _0x372947 = this[_0x5bb32(0x57c)][_0x5bb32(0x1ff)]; _0x290f65 < _0x372947; _0x290f65++) {
                    var _0x3532bd = this[_0x5bb32(0x57c)][_0x290f65];
                    if (_0x3532bd && _0x3532bd['hasAnyObjects']()) {
                        if (_0x6e612f)
                            return this;
                        if (_0x28d41a >= 0x0 && _0x28d41a != _0x290f65)
                            return this;
                        _0x6e612f = !![], _0x28d41a = _0x290f65;
                    }
                }
            } else {
                if (_0x28d41a != -0x1) {
                    var _0x5f4f7c = this[_0x5bb32(0xb4b)](_0x28d41a);
                    this[_0x5bb32(0xb46)](this[_0x5bb32(0x823)], null, this['baseLength'] / 0x2, _0x5f4f7c);
                }
                return this;
            }
            if (_0x28d41a != -0x1) {
                var _0x43da6d = this[_0x5bb32(0x57c)][_0x28d41a];
                return _0x43da6d[_0x5bb32(0x2fd)] = null, _0x43da6d;
            } else
                return this;
        }
        ['hasAnyObjects']() {
            var _0x287c91 = _0x5659be;
            if (this[_0x287c91(0xb4f)][_0x287c91(0x1ff)] > 0x0)
                return !![];
            if (this['_children'] != null)
                for (var _0x520aea = 0x0; _0x520aea < 0x8; _0x520aea++) {
                    var _0xd3ce7b = this[_0x287c91(0x57c)][_0x520aea];
                    if (_0xd3ce7b && _0xd3ce7b['hasAnyObjects']())
                        return !![];
                }
            return ![];
        }
        [_0x5659be(0xb5d)](_0x1571cc, _0x20aef0) {
            var _0x3a0657 = _0x5659be;
            this[_0x3a0657(0xb5c)](_0x1571cc, !![], _0x20aef0);
        }
        ['getCollidingWithRay'](_0x166569, _0x48b67f, _0x3668ce = Number['MAX_VALUE']) {
            var _0x159717 = _0x5659be, _0x867c3a = _0x4589df[_0x159717(0x889)](_0x166569, this[_0x159717(0xa67)]);
            if (_0x867c3a == -0x1 || _0x867c3a > _0x3668ce)
                return;
            for (var _0x4a4356 = 0x0, _0x13cc1c = this[_0x159717(0xb4f)][_0x159717(0x1ff)]; _0x4a4356 < _0x13cc1c; _0x4a4356++) {
                var _0x28043d = this[_0x159717(0xb4f)][_0x4a4356];
                _0x867c3a = _0x4589df[_0x159717(0x889)](_0x166569, _0x28043d[_0x159717(0x80d)][_0x159717(0x80e)]());
                if (_0x867c3a !== -0x1 && _0x867c3a <= _0x3668ce)
                    _0x48b67f[_0x159717(0x298)](_0x28043d);
            }
            if (this['_children'] != null)
                for (_0x4a4356 = 0x0; _0x4a4356 < 0x8; _0x4a4356++) {
                    var _0x30679d = this[_0x159717(0x57c)][_0x4a4356];
                    _0x30679d[_0x159717(0xb5e)](_0x166569, _0x48b67f, _0x3668ce);
                }
        }
        [_0x5659be(0x81d)](_0x461f7b, _0x25a583, _0x3854e4, _0x574c5e, _0x538dff) {
            var _0x4a490d = _0x5659be;
            this[_0x4a490d(0xb59)](_0x461f7b, _0x25a583, !![], _0x3854e4, _0x574c5e, _0x538dff);
        }
        [_0x5659be(0x826)](_0x42a19c, _0xc52e02) {
            var _0x3dfa1e = _0x5659be;
            this[_0x3dfa1e(0xb5a)](_0x42a19c, _0xc52e02);
        }
        [_0x5659be(0xb5f)](_0x5ae755) {
            var _0x3cced9 = _0x5659be;
            if (!_0x4589df['intersectsBoxAndBox'](this[_0x3cced9(0xa67)], _0x5ae755))
                return ![];
            for (var _0x2748ae = 0x0, _0x3b6cbe = this[_0x3cced9(0xb4f)][_0x3cced9(0x1ff)]; _0x2748ae < _0x3b6cbe; _0x2748ae++) {
                var _0x1b5a59 = this[_0x3cced9(0xb4f)][_0x2748ae];
                if (_0x4589df['intersectsBoxAndBox'](_0x1b5a59[_0x3cced9(0x80d)][_0x3cced9(0x80e)](), _0x5ae755))
                    return !![];
            }
            if (this[_0x3cced9(0x57c)] != null)
                for (_0x2748ae = 0x0; _0x2748ae < 0x8; _0x2748ae++) {
                    var _0x1f9146 = this[_0x3cced9(0x57c)][_0x2748ae];
                    if (_0x1f9146[_0x3cced9(0xb5f)](_0x5ae755))
                        return !![];
                }
            return ![];
        }
        [_0x5659be(0xb60)](_0xb52b7b, _0x4f38f2 = Number[_0x5659be(0xa46)]) {
            var _0x16af18 = _0x5659be, _0x23e764 = _0x4589df['intersectsRayAndBoxRD'](_0xb52b7b, this[_0x16af18(0xa67)]);
            if (_0x23e764 == -0x1 || _0x23e764 > _0x4f38f2)
                return ![];
            for (var _0x1c01e3 = 0x0, _0x3ef815 = this[_0x16af18(0xb4f)]['length']; _0x1c01e3 < _0x3ef815; _0x1c01e3++) {
                var _0x1fef60 = this[_0x16af18(0xb4f)][_0x1c01e3];
                _0x23e764 = _0x4589df[_0x16af18(0x889)](_0xb52b7b, _0x1fef60[_0x16af18(0x80d)][_0x16af18(0x80e)]());
                if (_0x23e764 !== -0x1 && _0x23e764 <= _0x4f38f2)
                    return !![];
            }
            if (this[_0x16af18(0x57c)] != null)
                for (_0x1c01e3 = 0x0; _0x1c01e3 < 0x8; _0x1c01e3++) {
                    var _0x57fd20 = this[_0x16af18(0x57c)][_0x1c01e3];
                    if (_0x57fd20['isCollidingWithRay'](_0xb52b7b, _0x4f38f2))
                        return !![];
                }
            return ![];
        }
        [_0x5659be(0xb61)]() {
            return this['_bounds'];
        }
        [_0x5659be(0x81f)](_0x2f72cc, _0x5adaac, _0x177777) {
            var _0x97633b = _0x5659be;
            if (this['_children'] === null && this[_0x97633b(0xb4f)][_0x97633b(0x1ff)] == 0x0)
                return;
            _0x5adaac++;
            var _0x44dfaf = _0x3fc434[_0x97633b(0x80c)];
            if (this[_0x97633b(0xb43)])
                _0x44dfaf['r'] = 0x0, _0x44dfaf['g'] = 0x0, _0x44dfaf['b'] = 0x1;
            else {
                var _0x704f66 = _0x177777 ? _0x5adaac / _0x177777 : 0x0;
                _0x44dfaf['r'] = 0x1 - _0x704f66, _0x44dfaf['g'] = _0x704f66, _0x44dfaf['b'] = 0x0;
            }
            _0x44dfaf['a'] = 0.3, _0x108d81[_0x97633b(0x2f8)](_0x2f72cc, this[_0x97633b(0xa67)], _0x44dfaf);
            if (this[_0x97633b(0x57c)] != null)
                for (var _0x128a27 = 0x0; _0x128a27 < 0x8; _0x128a27++) {
                    var _0x579dd3 = this['_children'][_0x128a27];
                    _0x579dd3 && _0x579dd3[_0x97633b(0x81f)](_0x2f72cc, _0x5adaac, _0x177777);
                }
        }
        [_0x5659be(0xb62)](_0x4d5272, _0x4d9a98, _0x278d9b) {
            var _0x2cb6a9 = _0x5659be;
            _0x4d9a98++;
            var _0x35c472 = _0x3fc434[_0x2cb6a9(0x80c)];
            if (this[_0x2cb6a9(0xb43)])
                _0x35c472['r'] = 0x0, _0x35c472['g'] = 0x0, _0x35c472['b'] = 0x1;
            else {
                var _0x3bc917 = _0x278d9b ? _0x4d9a98 / _0x278d9b : 0x0;
                _0x35c472['r'] = 0x1 - _0x3bc917, _0x35c472['g'] = _0x3bc917, _0x35c472['b'] = 0x0;
            }
            _0x35c472['a'] = 0x1;
            for (var _0xa4a04 = 0x0, _0x2baf64 = this[_0x2cb6a9(0xb4f)]['length']; _0xa4a04 < _0x2baf64; _0xa4a04++)
                _0x108d81[_0x2cb6a9(0x2f8)](_0x4d5272, this[_0x2cb6a9(0xb4f)][_0xa4a04][_0x2cb6a9(0x80d)][_0x2cb6a9(0x80e)](), _0x35c472);
            if (this[_0x2cb6a9(0x57c)] != null)
                for (_0xa4a04 = 0x0; _0xa4a04 < 0x8; _0xa4a04++) {
                    var _0x3bccae = this[_0x2cb6a9(0x57c)][_0xa4a04];
                    _0x3bccae && _0x3bccae[_0x2cb6a9(0xb62)](_0x4d5272, _0x4d9a98, _0x278d9b);
                }
        }
    }
    _0x3fc434[_0x5659be(0x59b)] = new _0x3f70c5(), _0x3fc434[_0x5659be(0x80c)] = new _0x4e3117(), _0x3fc434['_tempBoundBox'] = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5()), _0x3fc434['_NUM_OBJECTS_ALLOWED'] = 0x8;
    class _0x24f809 extends _0x5ae7ed {
        constructor() {
            super();
        }
        [_0x5659be(0x201)](_0x84e04d) {
            var _0x10ce08 = _0x5659be, _0x4cfecd = _0x84e04d[_0x10ce08(0xb26)]();
            if (_0x4cfecd !== -0x1)
                throw _0x10ce08(0xb63);
            this[_0x10ce08(0x7fd)](_0x84e04d), _0x84e04d[_0x10ce08(0xb27)](this['length']++);
        }
        [_0x5659be(0x3a9)](_0x589638) {
            var _0x36d16f = _0x5659be, _0x20cf43 = _0x589638[_0x36d16f(0xb26)]();
            this[_0x36d16f(0x1ff)]--;
            if (_0x20cf43 !== this['length']) {
                var _0x2ae39e = this[_0x36d16f(0x1f6)][this[_0x36d16f(0x1ff)]];
                this[_0x36d16f(0x1f6)][_0x20cf43] = _0x2ae39e, _0x2ae39e[_0x36d16f(0xb27)](_0x20cf43);
            }
            _0x589638[_0x36d16f(0xb27)](-0x1);
        }
    }
    class _0x4d3809 {
        constructor(_0x1a7395, _0x1a05f4, _0xd6da63, _0x1375f6) {
            var _0x596a8b = _0x5659be;
            this[_0x596a8b(0xb64)] = new _0x24f809(), this[_0x596a8b(0x2a1)] = 0x0, _0xd6da63 > _0x1a7395 && (console[_0x596a8b(0x24e)](_0x596a8b(0xb65) + _0xd6da63 + _0x596a8b(0xb66) + _0x1a7395), _0xd6da63 = _0x1a7395), this[_0x596a8b(0xb67)] = _0x1a7395, this[_0x596a8b(0xb54)] = _0xd6da63, this[_0x596a8b(0xb47)] = Math['min'](Math['max'](_0x1375f6, 0x1), 0x2), this[_0x596a8b(0x387)] = new _0x3fc434(this, null, _0x1a7395, _0x1a05f4);
        }
        ['_getMaxDepth'](_0x7c077f, _0xb998d8) {
            var _0x46fb37 = _0x5659be;
            _0xb998d8++;
            var _0xe9e9c6 = _0x7c077f[_0x46fb37(0x57c)];
            if (_0xe9e9c6 != null) {
                var _0x33b9f0 = _0xb998d8;
                for (var _0x4b3ef1 = 0x0, _0x158575 = _0xe9e9c6[_0x46fb37(0x1ff)]; _0x4b3ef1 < _0x158575; _0x4b3ef1++) {
                    var _0x1ada79 = _0xe9e9c6[_0x4b3ef1];
                    _0x1ada79 && (_0xb998d8 = Math[_0x46fb37(0x205)](this['_getMaxDepth'](_0x1ada79, _0x33b9f0), _0xb998d8));
                }
            }
            return _0xb998d8;
        }
        [_0x5659be(0xb68)](_0x3a221e) {
            var _0x488d28 = _0x5659be, _0xbffd7a = _0x3a221e['x'] >= 0x0 ? 0x1 : -0x1, _0x588e56 = _0x3a221e['y'] >= 0x0 ? 0x1 : -0x1, _0x439821 = _0x3a221e['z'] >= 0x0 ? 0x1 : -0x1, _0x596671 = this[_0x488d28(0x387)], _0x3cd8e7 = this[_0x488d28(0x387)][_0x488d28(0xb49)] / 0x2, _0x29effe = this['_rootNode'][_0x488d28(0xb49)] * 0x2, _0x46e5a2 = this[_0x488d28(0x387)][_0x488d28(0x87c)], _0x4cdf2e = new _0x3f70c5(_0x46e5a2['x'] + _0xbffd7a * _0x3cd8e7, _0x46e5a2['y'] + _0x588e56 * _0x3cd8e7, _0x46e5a2['z'] + _0x439821 * _0x3cd8e7);
            this[_0x488d28(0x387)] = new _0x3fc434(this, null, _0x29effe, _0x4cdf2e);
            if (_0x596671[_0x488d28(0xb69)]()) {
                var _0x3810c4 = this[_0x488d28(0x387)]['_bestFitChild'](_0x596671['center']), _0x28d03f = [];
                for (var _0x1662e0 = 0x0; _0x1662e0 < 0x8; _0x1662e0++) {
                    _0x1662e0 == _0x3810c4 && (_0x596671[_0x488d28(0x2fd)] = this['_rootNode'], _0x28d03f[_0x1662e0] = _0x596671);
                }
                this[_0x488d28(0x387)][_0x488d28(0x57c)] = _0x28d03f;
            }
        }
        ['add'](_0x1bb85e) {
            var _0x313763 = _0x5659be, _0x31cd66 = 0x0;
            while (!this[_0x313763(0x387)][_0x313763(0x201)](_0x1bb85e)) {
                var _0x1541dc = _0x4d3809[_0x313763(0x59b)];
                _0x3f70c5[_0x313763(0x210)](_0x1bb85e[_0x313763(0x80d)]['getCenter'](), this[_0x313763(0x387)][_0x313763(0x87c)], _0x1541dc), this[_0x313763(0xb68)](_0x1541dc);
                if (++_0x31cd66 > 0x14)
                    throw _0x313763(0xb6a) + (_0x31cd66 - 0x1) + _0x313763(0xb6b);
            }
            this['count']++;
        }
        ['remove'](_0x56575a) {
            var _0x5dae1f = _0x5659be, _0x4fbfc7 = _0x56575a[_0x5dae1f(0xb22)]()[_0x5dae1f(0x3a9)](_0x56575a);
            return _0x4fbfc7 && this['count']--, _0x4fbfc7;
        }
        [_0x5659be(0x85a)](_0x2f82e2) {
            var _0x4175de = _0x5659be, _0x2ffb90 = 0x0, _0x6a086a = _0x2f82e2['_getOctreeNode']();
            if (_0x6a086a) {
                while (!_0x6a086a['_update'](_0x2f82e2)) {
                    var _0x2ba433 = _0x4d3809[_0x4175de(0x59b)];
                    _0x3f70c5['subtract'](_0x2f82e2[_0x4175de(0x80d)][_0x4175de(0x816)](), this[_0x4175de(0x387)][_0x4175de(0x87c)], _0x2ba433), this[_0x4175de(0xb68)](_0x2ba433);
                    if (++_0x2ffb90 > 0x14)
                        throw _0x4175de(0xb6a) + (_0x2ffb90 - 0x1) + _0x4175de(0xb6b);
                }
                return !![];
            } else
                return ![];
        }
        [_0x5659be(0x81c)]() {
            var _0x271c53 = _0x5659be;
            this[_0x271c53(0x387)] = this[_0x271c53(0x387)]['shrinkIfPossible'](this['_initialSize']);
        }
        ['addMotionObject'](_0x1ced09) {
            var _0x563e3f = _0x5659be;
            this[_0x563e3f(0xb64)][_0x563e3f(0x201)](_0x1ced09);
        }
        [_0x5659be(0xb25)](_0x88ef4a) {
            var _0x3e4e91 = _0x5659be;
            this[_0x3e4e91(0xb64)][_0x3e4e91(0x3a9)](_0x88ef4a);
        }
        [_0x5659be(0x81b)]() {
            var _0x1ade8f = _0x5659be, _0x5845d7 = this[_0x1ade8f(0xb64)][_0x1ade8f(0x1f6)];
            for (var _0x2238a2 = 0x0, _0x828a9f = this['_motionObjects']['length']; _0x2238a2 < _0x828a9f; _0x2238a2++) {
                var _0x512555 = _0x5845d7[_0x2238a2];
                this[_0x1ade8f(0x85a)](_0x512555), _0x512555['_setIndexInMotionList'](-0x1);
            }
            this[_0x1ade8f(0xb64)]['length'] = 0x0;
        }
        [_0x5659be(0xb5f)](_0x4d2c71) {
            var _0x32e1cb = _0x5659be;
            return this[_0x32e1cb(0x387)][_0x32e1cb(0xb5f)](_0x4d2c71);
        }
        [_0x5659be(0xb60)](_0x45b48f, _0x391252 = Number[_0x5659be(0xa46)]) {
            var _0x45b4ee = _0x5659be;
            return this['_rootNode'][_0x45b4ee(0xb60)](_0x45b48f, _0x391252);
        }
        [_0x5659be(0xb5d)](_0x14e359, _0xab625d) {
            this['_rootNode']['getCollidingWithBoundBox'](_0x14e359, _0xab625d);
        }
        [_0x5659be(0xb5e)](_0x1b31f8, _0x7348d7, _0x2ebc6f = Number['MAX_VALUE']) {
            var _0xc5dd17 = _0x5659be;
            this['_rootNode'][_0xc5dd17(0xb5e)](_0x1b31f8, _0x7348d7, _0x2ebc6f);
        }
        [_0x5659be(0x81d)](_0x393a61, _0x9b0dd5, _0x5cdbc2, _0x514f3d, _0x454425) {
            var _0x2be877 = _0x5659be;
            this['_rootNode'][_0x2be877(0x81d)](_0x393a61, _0x9b0dd5, _0x5cdbc2, _0x514f3d, _0x454425);
        }
        [_0x5659be(0xb6c)]() {
            var _0x352397 = _0x5659be;
            return this[_0x352397(0x387)]['getBound']();
        }
        [_0x5659be(0x81f)](_0x4af383) {
            var _0x29b954 = _0x5659be, _0x595834 = this[_0x29b954(0xb6d)](this['_rootNode'], -0x1);
            this[_0x29b954(0x387)][_0x29b954(0x81f)](_0x4af383, -0x1, _0x595834);
        }
        [_0x5659be(0xb62)](_0x5da4d0) {
            var _0x489ae0 = _0x5659be, _0x521895 = this['_getMaxDepth'](this[_0x489ae0(0x387)], -0x1);
            this[_0x489ae0(0x387)]['drawAllObjects'](_0x5da4d0, -0x1, _0x521895);
        }
    }
    _0x4d3809[_0x5659be(0x59b)] = new _0x3f70c5();
    class _0x5990de {
    }
    class _0x2efeb0 {
        constructor(_0x732a04, _0x326489) {
            var _0xa1d1d1 = _0x5659be;
            this[_0xa1d1d1(0x87c)] = _0x732a04, this[_0xa1d1d1(0x87d)] = _0x326489;
        }
        [_0x5659be(0x212)]() {
            var _0x30ff29 = _0x5659be;
            this[_0x30ff29(0x87c)][_0x30ff29(0x212)](), this[_0x30ff29(0x87d)] = 0x0;
        }
        static [_0x5659be(0xb6e)](_0x207943, _0x395a56, _0x4fa2fd, _0x47c3b3) {
            var _0x4c520c = _0x5659be;
            if (_0x207943 == null)
                throw new Error('points');
            if (_0x395a56 < 0x0 || _0x395a56 >= _0x207943[_0x4c520c(0x1ff)])
                throw new Error('start' + _0x395a56 + _0x4c520c(0xb6f) + (_0x207943[_0x4c520c(0x1ff)] - 0x1) + ']');
            if (_0x4fa2fd < 0x0 || _0x395a56 + _0x4fa2fd > _0x207943[_0x4c520c(0x1ff)])
                throw new Error('count' + _0x4fa2fd + _0x4c520c(0xb70) + _0x207943[_0x4c520c(0x1ff)] + '}');
            var _0x27feb8 = _0x395a56 + _0x4fa2fd, _0x12cdf2 = _0x2efeb0[_0x4c520c(0x489)];
            _0x12cdf2['x'] = 0x0, _0x12cdf2['y'] = 0x0, _0x12cdf2['z'] = 0x0;
            for (var _0x3bef50 = _0x395a56; _0x3bef50 < _0x27feb8; ++_0x3bef50) {
                _0x3f70c5[_0x4c520c(0x201)](_0x207943[_0x3bef50], _0x12cdf2, _0x12cdf2);
            }
            var _0x4b697e = _0x47c3b3[_0x4c520c(0x87c)];
            _0x3f70c5['scale'](_0x12cdf2, 0x1 / _0x4fa2fd, _0x4b697e);
            var _0x14bbc7 = 0x0;
            for (_0x3bef50 = _0x395a56; _0x3bef50 < _0x27feb8; ++_0x3bef50) {
                var _0x19ffe7 = _0x3f70c5['distanceSquared'](_0x4b697e, _0x207943[_0x3bef50]);
                if (_0x19ffe7 > _0x14bbc7)
                    _0x14bbc7 = _0x19ffe7;
            }
            _0x47c3b3[_0x4c520c(0x87d)] = Math['sqrt'](_0x14bbc7);
        }
        static [_0x5659be(0xa44)](_0x2f0c6f, _0x374909) {
            var _0x30662c = _0x5659be;
            if (_0x2f0c6f == null)
                throw new Error(_0x30662c(0xa45));
            _0x2efeb0[_0x30662c(0xb6e)](_0x2f0c6f, 0x0, _0x2f0c6f[_0x30662c(0x1ff)], _0x374909);
        }
        [_0x5659be(0xb71)](_0x48660a) {
            var _0x4fd93d = _0x5659be;
            return _0x4589df[_0x4fd93d(0x88a)](_0x48660a, this);
        }
        [_0x5659be(0xb72)](_0x2fac1b, _0x2490c6) {
            var _0xcd0385 = _0x5659be;
            return _0x4589df[_0xcd0385(0x88b)](_0x2fac1b, this, _0x2490c6);
        }
        [_0x5659be(0x1f0)](_0x40580f) {
            var _0x30f7e3 = _0x5659be, _0x2c0751 = _0x40580f;
            this[_0x30f7e3(0x87c)][_0x30f7e3(0x1f0)](_0x2c0751[_0x30f7e3(0x87c)]), _0x2c0751['radius'] = this[_0x30f7e3(0x87d)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x592369 = _0x5659be, _0x50ece4 = new _0x2efeb0(new _0x3f70c5(), 0x0);
            return this[_0x592369(0x1f0)](_0x50ece4), _0x50ece4;
        }
    }
    _0x2efeb0[_0x5659be(0x489)] = new _0x3f70c5();
    class _0x575ff4 {
        constructor() {
            var _0x20f87b = _0x5659be;
            this[_0x20f87b(0x5db)] = new _0x552b02(), this[_0x20f87b(0x59e)] = new _0x3f70c5(), this[_0x20f87b(0x85d)] = new _0x3ed76a(), this[_0x20f87b(0x8e0)] = new _0x3ed76a(), this['viewProjectMatrix'] = new _0x3ed76a(), this[_0x20f87b(0xb5b)] = [
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5()),
                new _0x4d8983(new _0x3f70c5())
            ], this[_0x20f87b(0x968)] = new _0x2efeb0(new _0x3f70c5(), 0x0);
        }
    }
    class _0x46e9c5 {
        constructor() {
            var _0x54d3ba = _0x5659be;
            this[_0x54d3ba(0x5db)] = new _0x552b02(), this[_0x54d3ba(0x59e)] = new _0x3f70c5(), this['viewMatrix'] = new _0x3ed76a(), this['projectionMatrix'] = new _0x3ed76a(), this[_0x54d3ba(0x96a)] = new _0x3ed76a(), this[_0x54d3ba(0xb73)] = new _0x26f1a2();
        }
    }
    (function (_0x29c417) {
        var _0x294c7b = _0x5659be;
        _0x29c417[_0x29c417['DirectionLight'] = 0x0] = 'DirectionLight', _0x29c417[_0x29c417[_0x294c7b(0x9c3)] = 0x1] = _0x294c7b(0x9c3), _0x29c417[_0x29c417['PointLight'] = 0x2] = _0x294c7b(0xb74);
    }(_0x71dec4['ShadowLightType'] || (_0x71dec4['ShadowLightType'] = {})));
    class _0x2e5076 {
        constructor() {
            var _0x20e7d2 = _0x5659be;
            this[_0x20e7d2(0xb75)] = new _0x8fb80(), this[_0x20e7d2(0xb76)] = new _0x8fb80(), this[_0x20e7d2(0xb77)] = new _0x8fb80(), this['_shadowSpotMapSize'] = new _0x8fb80(), this['_shadowMatrices'] = new Float32Array(0x10 * _0x2e5076[_0x20e7d2(0xb78)]), this['_shadowSpotMatrices'] = new _0x3ed76a(), this[_0x20e7d2(0xb79)] = new Float32Array(_0x2e5076[_0x20e7d2(0xb78)] * 0x4), this[_0x20e7d2(0xb7a)] = 0x0, this[_0x20e7d2(0xb7b)] = 0x0, this[_0x20e7d2(0xb7c)] = 0x0, this[_0x20e7d2(0xb7d)] = [
                new _0x575ff4(),
                new _0x575ff4(),
                new _0x575ff4(),
                new _0x575ff4()
            ], this[_0x20e7d2(0xb7e)] = new _0x46e9c5(), this[_0x20e7d2(0xb7f)] = new _0x3f70c5(), this[_0x20e7d2(0xb80)] = new _0x3f70c5(), this[_0x20e7d2(0xb81)] = new _0x3f70c5(), this[_0x20e7d2(0xb7e)]['cameraCullInfo'][_0x20e7d2(0x810)] = new _0x26b0f2(new _0x3ed76a());
        }
        ['_setupShadowCasterShaderValues'](_0x48916e, _0x490ca2, _0x28fb0e, _0x31624a, _0x17e771, _0x2a0655, _0x11f1f5) {
            var _0x2138ac = _0x5659be;
            _0x490ca2[_0x2138ac(0x49d)](_0x2e5076[_0x2138ac(0x97b)], _0x2a0655);
            switch (_0x11f1f5) {
            case _0x71dec4['LightType'][_0x2138ac(0x920)]:
                _0x490ca2['setVector3'](_0x2e5076[_0x2138ac(0xb82)], _0x31624a);
                break;
            case _0x71dec4[_0x2138ac(0x922)]['Spot']:
                _0x490ca2[_0x2138ac(0x49d)](_0x2e5076[_0x2138ac(0xb83)], _0x17e771);
                break;
            case _0x71dec4['LightType'][_0x2138ac(0x2cf)]:
                break;
            }
            var _0x3769b2 = _0x28fb0e[_0x2138ac(0x5db)];
            _0x3769b2[_0x2138ac(0x4a0)](_0x3c0ef2['VIEWMATRIX'], _0x28fb0e[_0x2138ac(0x85d)]), _0x3769b2[_0x2138ac(0x4a0)](_0x3c0ef2['PROJECTMATRIX'], _0x28fb0e[_0x2138ac(0x8e0)]), _0x3769b2[_0x2138ac(0x4a0)](_0x3c0ef2[_0x2138ac(0x903)], _0x28fb0e['viewProjectMatrix']), _0x48916e['viewMatrix'] = _0x28fb0e[_0x2138ac(0x85d)], _0x48916e[_0x2138ac(0x8e0)] = _0x28fb0e[_0x2138ac(0x8e0)], _0x48916e[_0x2138ac(0x5dc)] = _0x28fb0e['viewProjectMatrix'];
        }
        [_0x5659be(0xb84)](_0x530962) {
            var _0xbcbf4a = _0x5659be, _0x1e2801 = this[_0xbcbf4a(0xb85)];
            if (_0x1e2801[_0xbcbf4a(0xb86)] !== _0x71dec4[_0xbcbf4a(0x94a)]['NoCascades'])
                _0x530962['addDefine'](_0x2de530[_0xbcbf4a(0xb87)]);
            else
                _0x530962[_0xbcbf4a(0x493)](_0x2de530[_0xbcbf4a(0xb87)]);
            switch (_0x1e2801[_0xbcbf4a(0x92f)]) {
            case _0x71dec4[_0xbcbf4a(0x91f)]['Hard']:
                _0x530962['removeDefine'](_0x2de530[_0xbcbf4a(0xb88)]), _0x530962[_0xbcbf4a(0x493)](_0x2de530[_0xbcbf4a(0xb89)]);
                break;
            case _0x71dec4['ShadowMode'][_0xbcbf4a(0x91d)]:
                _0x530962['addDefine'](_0x2de530[_0xbcbf4a(0xb88)]), _0x530962['removeDefine'](_0x2de530['SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH']);
                break;
            case _0x71dec4['ShadowMode']['SoftHigh']:
                _0x530962[_0xbcbf4a(0x62c)](_0x2de530[_0xbcbf4a(0xb89)]), _0x530962['removeDefine'](_0x2de530[_0xbcbf4a(0xb88)]);
                break;
            }
            _0x530962[_0xbcbf4a(0x4a2)](_0x2e5076[_0xbcbf4a(0xb8a)], this['_shadowDirectLightMap']), _0x530962[_0xbcbf4a(0x574)](_0x2e5076[_0xbcbf4a(0xb8b)], this[_0xbcbf4a(0xb8c)]), _0x530962['setVector'](_0x2e5076[_0xbcbf4a(0xb8d)], this[_0xbcbf4a(0xb77)]), _0x530962[_0xbcbf4a(0x49d)](_0x2e5076[_0xbcbf4a(0xb83)], this[_0xbcbf4a(0xb76)]), _0x530962[_0xbcbf4a(0x574)](_0x2e5076[_0xbcbf4a(0xb8e)], this[_0xbcbf4a(0xb79)]);
        }
        [_0x5659be(0xb8f)](_0x2902f8) {
            var _0x115031 = _0x5659be, _0x4a6e3a = this[_0x115031(0xb85)];
            switch (_0x4a6e3a['shadowMode']) {
            case _0x71dec4[_0x115031(0x91f)]['Hard']:
                _0x2902f8[_0x115031(0x493)](_0x2de530[_0x115031(0xb90)]), _0x2902f8[_0x115031(0x493)](_0x2de530[_0x115031(0xb91)]);
                break;
            case _0x71dec4[_0x115031(0x91f)][_0x115031(0x91d)]:
                _0x2902f8[_0x115031(0x62c)](_0x2de530['SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW']), _0x2902f8[_0x115031(0x493)](_0x2de530[_0x115031(0xb90)]);
                break;
            case _0x71dec4[_0x115031(0x91f)][_0x115031(0x91e)]:
                _0x2902f8[_0x115031(0x62c)](_0x2de530[_0x115031(0xb90)]), _0x2902f8[_0x115031(0x493)](_0x2de530[_0x115031(0xb91)]);
                break;
            }
            _0x2902f8['setTexture'](_0x2e5076[_0x115031(0xb92)], this[_0x115031(0xb93)]), _0x2902f8[_0x115031(0x4a0)](_0x2e5076[_0x115031(0xb94)], this[_0x115031(0xb95)]), _0x2902f8[_0x115031(0x49d)](_0x2e5076[_0x115031(0xb96)], this['_shadowSpotMapSize']), _0x2902f8[_0x115031(0x49d)](_0x2e5076['SHADOW_PARAMS'], this[_0x115031(0xb76)]);
        }
        [_0x5659be(0x85a)](_0x3d7033, _0x32d8f3, _0x1f75a7) {
            var _0x515e34 = _0x5659be;
            switch (_0x1f75a7) {
            case _0x71dec4[_0x515e34(0x224)][_0x515e34(0x9c0)]:
                this[_0x515e34(0xb85)] = _0x32d8f3;
                var _0x273e78 = _0x2e5076[_0x515e34(0x5ad)], _0x248125 = _0x273e78['elements'], _0x3132e6 = this[_0x515e34(0xb7f)], _0x191000 = this['_lightSide'], _0x3b89b7 = this[_0x515e34(0xb81)];
                _0x3ed76a[_0x515e34(0x476)](_0x32d8f3['_transform']['rotation'], _0x273e78), _0x191000[_0x515e34(0x1fa)](_0x248125[0x0], _0x248125[0x1], _0x248125[0x2]), _0x3132e6[_0x515e34(0x1fa)](_0x248125[0x4], _0x248125[0x5], _0x248125[0x6]), _0x3b89b7['setValue'](-_0x248125[0x8], -_0x248125[0x9], -_0x248125[0xa]);
                var _0x3af32a = _0x32d8f3[_0x515e34(0x925)], _0x16ff35 = _0x32d8f3[_0x515e34(0xb97)], _0x493924, _0x48238d, _0x1edf6c, _0x484029;
                _0x16ff35 == _0x71dec4[_0x515e34(0x94a)][_0x515e34(0x947)] ? (_0x493924 = 0x1, _0x48238d = _0x3af32a, _0x1edf6c = _0x3af32a, _0x484029 = _0x3af32a) : (_0x493924 = _0x16ff35 == _0x71dec4[_0x515e34(0x94a)][_0x515e34(0x948)] ? 0x2 : 0x4, _0x48238d = _0x143874[_0x515e34(0xb98)](_0x3af32a, _0x3af32a, _0x493924), _0x1edf6c = _0x48238d * 0x2, _0x484029 = _0x16ff35 == _0x71dec4[_0x515e34(0x94a)][_0x515e34(0x948)] ? _0x48238d : _0x48238d * 0x2);
                this[_0x515e34(0xb7a)] = _0x493924, this[_0x515e34(0xb7b)] = _0x1edf6c, this['_shadowMapHeight'] = _0x484029;
                var _0x3ef794 = _0x2e5076[_0x515e34(0xb99)], _0xc0e3e1 = _0x2e5076[_0x515e34(0xb9a)], _0xb5308b = _0x3d7033['nearPlane'], _0x53757f = Math[_0x515e34(0x204)](_0x3d7033['farPlane'], _0x32d8f3[_0x515e34(0x926)]), _0x33f737 = this[_0x515e34(0xb8c)], _0x4aec3e = this[_0x515e34(0xb79)];
                _0x143874[_0x515e34(0x95b)](_0x32d8f3['_shadowTwoCascadeSplits'], _0x32d8f3[_0x515e34(0xb9b)], _0xb5308b, _0x53757f, _0x3d7033[_0x515e34(0x8dc)] * _0x57b8d6['Deg2Rad'], _0x3d7033[_0x515e34(0x8dd)], _0x16ff35, _0x3ef794), _0x143874[_0x515e34(0xb9c)](_0x3d7033[_0x515e34(0x5dc)], _0xc0e3e1);
                var _0x3b6b70 = _0x2e5076[_0x515e34(0x59b)];
                _0x3d7033['_transform'][_0x515e34(0x5ae)](_0x3b6b70), _0x3f70c5[_0x515e34(0x1f2)](_0x3b6b70, _0x3b6b70);
                for (var _0x214d94 = 0x0; _0x214d94 < _0x493924; _0x214d94++) {
                    var _0x3a7fae = this[_0x515e34(0xb7d)][_0x214d94];
                    _0x3a7fae[_0x515e34(0xb9d)] = _0x143874[_0x515e34(0x966)](_0x3ef794[_0x214d94], _0x3ef794[_0x214d94 + 0x1], _0x3d7033[_0x515e34(0x8dc)] * _0x57b8d6[_0x515e34(0x1ed)], _0x3d7033[_0x515e34(0x8dd)], _0x3d7033[_0x515e34(0x3ca)][_0x515e34(0x59e)], _0x3b6b70, _0x3a7fae[_0x515e34(0x968)]), _0x143874[_0x515e34(0xb9e)](_0xc0e3e1, _0x214d94, _0x3ef794, _0xb5308b, _0x3b89b7, _0x3a7fae), _0x143874[_0x515e34(0x967)](_0x3132e6, _0x191000, _0x3b89b7, _0x214d94, _0x32d8f3['_shadowNearPlane'], _0x48238d, _0x3a7fae, _0x33f737);
                    if (_0x493924 > 0x1)
                        _0x143874[_0x515e34(0x95d)](_0x3a7fae, _0x1edf6c, _0x484029, _0x214d94, _0x33f737);
                }
                _0x143874['prepareShadowReceiverShaderValues'](_0x32d8f3, _0x1edf6c, _0x484029, this[_0x515e34(0xb7d)], _0x493924, this[_0x515e34(0xb77)], this[_0x515e34(0xb76)], _0x33f737, _0x4aec3e);
                break;
            case _0x71dec4['ShadowLightType'][_0x515e34(0x9c3)]:
                this[_0x515e34(0xb85)] = _0x32d8f3;
                var _0x273e78 = _0x2e5076[_0x515e34(0x5ad)], _0x3b89b7 = this['_lightForward'], _0x55584d = this[_0x515e34(0xb85)][_0x515e34(0x925)];
                this['_shadowMapWidth'] = _0x55584d, this[_0x515e34(0xb7c)] = _0x55584d;
                var _0x5904bd = this['_shadowSpotData'];
                _0x143874[_0x515e34(0x96c)](_0x5904bd, this[_0x515e34(0xb85)], _0x55584d, this['_shadowParams'], this['_shadowSpotMatrices'], this[_0x515e34(0xb9f)]);
                break;
            case _0x71dec4[_0x515e34(0x224)][_0x515e34(0xb74)]:
                break;
            default:
                throw _0x515e34(0xba0);
            }
        }
        [_0x5659be(0x506)](_0x3eefa7, _0x443017, _0x3f97e5) {
            var _0x12c008 = _0x5659be;
            switch (_0x3f97e5) {
            case _0x71dec4[_0x12c008(0x224)]['DirectionLight']:
                var _0x55e327 = _0x443017[_0x12c008(0x4e0)];
                _0x3eefa7[_0x12c008(0x5df)] = _0x12c008(0x979), _0x552b02[_0x12c008(0x4d9)](![]);
                var _0x4abd42 = this[_0x12c008(0xba1)] = _0x143874[_0x12c008(0x957)](this[_0x12c008(0xb7b)], this[_0x12c008(0xb7c)], _0x218b83[_0x12c008(0x3db)][_0x12c008(0x3dc)]);
                _0x4abd42['_start']();
                var _0xe427fb = this[_0x12c008(0xb85)];
                for (var _0x25920e = 0x0, _0x31c81a = this[_0x12c008(0xb7a)]; _0x25920e < _0x31c81a; _0x25920e++) {
                    var _0x196acc = this['_shadowSliceDatas'][_0x25920e];
                    _0x143874[_0x12c008(0xba2)](_0xe427fb, _0x196acc['projectionMatrix'], _0x196acc[_0x12c008(0x96b)], this[_0x12c008(0xb75)]), this[_0x12c008(0xba3)](_0x3eefa7, _0x55e327, _0x196acc, this[_0x12c008(0xb81)], this['_shadowParams'], this['_shadowBias'], _0x71dec4[_0x12c008(0x922)][_0x12c008(0x920)]);
                    var _0x5ab793 = _0x4b5e1d[_0x12c008(0x835)];
                    _0x5ab793['position'] = _0x196acc[_0x12c008(0x59e)], _0x5ab793['cullPlanes'] = _0x196acc['cullPlanes'], _0x5ab793['cullPlaneCount'] = _0x196acc[_0x12c008(0x827)], _0x5ab793[_0x12c008(0xba4)] = _0x196acc[_0x12c008(0x968)], _0x5ab793[_0x12c008(0x87e)] = this[_0x12c008(0xb81)];
                    var _0x4c6261 = _0x4b5e1d[_0x12c008(0xba5)](_0x5ab793, _0x443017, _0x3eefa7);
                    _0x3eefa7[_0x12c008(0x5db)] = _0x196acc['cameraShaderValue'], _0x428ec4[_0x12c008(0x37b)]++;
                    var _0x23318d = _0x218b83[_0x12c008(0x2f3)][_0x12c008(0x2f4)], _0x3334af = _0x196acc[_0x12c008(0x96b)], _0x18ead4 = _0x196acc[_0x12c008(0x95e)], _0x9b8f9f = _0x196acc['offsetY'];
                    _0x23318d['enable'](_0x23318d[_0x12c008(0x97c)]), _0x23318d[_0x12c008(0x561)](_0x18ead4, _0x9b8f9f, _0x3334af, _0x3334af), _0x23318d[_0x12c008(0x97d)](_0x18ead4, _0x9b8f9f, _0x3334af, _0x3334af), _0x23318d['clear'](_0x23318d['DEPTH_BUFFER_BIT']), _0x4c6261 && (_0x23318d['scissor'](_0x18ead4 + 0x1, _0x9b8f9f + 0x1, _0x3334af - 0x2, _0x3334af - 0x2), _0x443017[_0x12c008(0x822)][_0x12c008(0x5e6)](_0x3eefa7));
                }
                _0x4abd42[_0x12c008(0x426)](), this['_setupShadowReceiverShaderValues'](_0x55e327), _0x552b02['setRuntimeValueMode'](!![]), _0x3eefa7['pipelineMode'] = _0x3eefa7[_0x12c008(0x3d8)];
                break;
            case _0x71dec4[_0x12c008(0x224)][_0x12c008(0x9c3)]:
                var _0x55e327 = _0x443017[_0x12c008(0x4e0)];
                _0x3eefa7[_0x12c008(0x5df)] = 'ShadowCaster', _0x552b02[_0x12c008(0x4d9)](![]);
                var _0x53d888 = this['_light'], _0x4abd42 = this[_0x12c008(0xb93)] = _0x143874[_0x12c008(0x957)](this[_0x12c008(0xb7b)], this['_shadowMapHeight'], _0x218b83[_0x12c008(0x3db)][_0x12c008(0x3dc)]);
                _0x4abd42[_0x12c008(0x424)]();
                var _0x2469c7 = this[_0x12c008(0xb7e)];
                _0x143874[_0x12c008(0xba2)](_0x53d888, _0x2469c7[_0x12c008(0x8e0)], _0x2469c7[_0x12c008(0x96b)], this[_0x12c008(0xb75)]), this[_0x12c008(0xba3)](_0x3eefa7, _0x55e327, _0x2469c7, this[_0x12c008(0xb85)]['transform'][_0x12c008(0x59e)], this[_0x12c008(0xb76)], this[_0x12c008(0xb75)], _0x71dec4['LightType'][_0x12c008(0x921)]);
                var _0x4c6261 = _0x4b5e1d[_0x12c008(0x82a)](_0x2469c7[_0x12c008(0xb73)], _0x443017, _0x3eefa7);
                _0x3eefa7['cameraShaderValue'] = _0x2469c7['cameraShaderValue'], _0x428ec4[_0x12c008(0x37b)]++;
                var _0x23318d = _0x218b83[_0x12c008(0x2f3)][_0x12c008(0x2f4)];
                _0x23318d[_0x12c008(0x650)](_0x23318d[_0x12c008(0x97c)]), _0x23318d[_0x12c008(0x561)](_0x2469c7[_0x12c008(0x95e)], _0x2469c7[_0x12c008(0x95f)], _0x2469c7[_0x12c008(0x96b)], _0x2469c7['resolution']), _0x23318d[_0x12c008(0x97d)](_0x2469c7[_0x12c008(0x95e)], _0x2469c7['offsetY'], _0x2469c7[_0x12c008(0x96b)], _0x2469c7[_0x12c008(0x96b)]), _0x23318d[_0x12c008(0x496)](_0x23318d['DEPTH_BUFFER_BIT']);
                _0x4c6261 && (_0x23318d[_0x12c008(0x97d)](_0x2469c7[_0x12c008(0x95e)], _0x2469c7[_0x12c008(0x95f)], _0x2469c7[_0x12c008(0x96b)], _0x2469c7[_0x12c008(0x96b)]), _0x443017[_0x12c008(0x822)][_0x12c008(0x5e6)](_0x3eefa7));
                _0x4abd42[_0x12c008(0x426)](), this[_0x12c008(0xb8f)](_0x55e327), _0x552b02[_0x12c008(0x4d9)](!![]), _0x3eefa7[_0x12c008(0x5df)] = _0x3eefa7[_0x12c008(0x3d8)];
                break;
            case _0x71dec4[_0x12c008(0x224)]['PointLight']:
                break;
            default:
                throw _0x12c008(0xba0);
            }
        }
        [_0x5659be(0x980)]() {
            var _0x1a1dc1 = _0x5659be;
            this['_shadowDirectLightMap'] && _0x164148[_0x1a1dc1(0x65a)](this[_0x1a1dc1(0xba1)]), this[_0x1a1dc1(0xb93)] && _0x164148['recoverToPool'](this['_shadowSpotLightMap']), this[_0x1a1dc1(0xba1)] = null, this[_0x1a1dc1(0xb93)] = null, this[_0x1a1dc1(0xb85)] = null;
        }
    }
    _0x2e5076[_0x5659be(0x59b)] = new _0x3f70c5(), _0x2e5076['_tempMatrix0'] = new _0x3ed76a(), _0x2e5076['SHADOW_BIAS'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x981)), _0x2e5076[_0x5659be(0xb82)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xba6)), _0x2e5076['SHADOW_SPLIT_SPHERES'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xba7)), _0x2e5076[_0x5659be(0xb8b)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xba8)), _0x2e5076[_0x5659be(0xb8d)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xba9)), _0x2e5076[_0x5659be(0xb8a)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xbaa)), _0x2e5076[_0x5659be(0xb83)] = _0x84b6d6['propertyNameToID']('u_ShadowParams'), _0x2e5076['SHADOW_SPOTMAP_SIZE'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xbab)), _0x2e5076['SHADOW_SPOTMAP'] = _0x84b6d6['propertyNameToID']('u_SpotShadowMap'), _0x2e5076['SHADOW_SPOTMATRICES'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xbac)), _0x2e5076[_0x5659be(0xb78)] = 0x4, _0x2e5076[_0x5659be(0xb99)] = new Array(_0x2e5076['_maxCascades'] + 0x1), _0x2e5076['_frustumPlanes'] = new Array(new _0x4d8983(new _0x3f70c5()), new _0x4d8983(new _0x3f70c5()), new _0x4d8983(new _0x3f70c5()), new _0x4d8983(new _0x3f70c5()), new _0x4d8983(new _0x3f70c5()), new _0x4d8983(new _0x3f70c5()));
    class _0x4fa75b {
        constructor() {
            var _0xf573cf = _0x5659be;
            this[_0xf573cf(0xac9)] = [];
        }
        static [_0x5659be(0xacc)](_0x56579d) {
            _0x4fa75b['_managers']['push'](_0x56579d);
        }
        [_0x5659be(0x9cb)]() {
            this['_batchRenderElementPoolIndex'] = 0x0;
        }
        [_0x5659be(0xac2)]() {
            var _0x554b49 = _0x5659be;
            throw _0x554b49(0xad5);
        }
        [_0x5659be(0xad8)]() {
        }
    }
    _0x4fa75b[_0x5659be(0xacd)] = [];
    class _0xf2b725 extends _0x5ae7ed {
        constructor() {
            super();
        }
        [_0x5659be(0x201)](_0x3a3ccb) {
            var _0x35fc21 = _0x5659be;
            this[_0x35fc21(0x7fd)](_0x3a3ccb), _0x3a3ccb[_0x35fc21(0xb05)](this['length']++);
        }
        [_0x5659be(0x3a9)](_0x42588d) {
            var _0x47b328 = _0x5659be, _0x3fa4f9 = _0x42588d[_0x47b328(0xb06)]();
            this['length']--;
            if (_0x3fa4f9 !== this[_0x47b328(0x1ff)]) {
                var _0xd2108a = this[_0x47b328(0x1f6)][this[_0x47b328(0x1ff)]];
                this[_0x47b328(0x1f6)][_0x3fa4f9] = _0xd2108a, _0xd2108a[_0x47b328(0xb05)](_0x3fa4f9);
            }
            _0x42588d[_0x47b328(0xb05)](-0x1);
        }
    }
    class _0x33182f {
        constructor() {
            var _0x32bda9 = _0x5659be;
            this[_0x32bda9(0xbad)] = new _0xf2b725(), this['_motionObjects'] = new _0x5ae7ed(), this[_0x32bda9(0xbae)] = ![], this[_0x32bda9(0xbaf)] = new _0x221da4(), this[_0x32bda9(0xbaf)][_0x32bda9(0x80d)] = new _0x2a117e(new _0x3f70c5(0x0, 0x0, 0x0), new _0x3f70c5(0x0, 0x0, 0x0)), this[_0x32bda9(0xbaf)][_0x32bda9(0xafa)] = ![], this[_0x32bda9(0xbaf)][_0x32bda9(0xac5)] = !![];
        }
        set ['sceneReflectionProbe'](_0x142959) {
            var _0x125558 = _0x5659be;
            this[_0x125558(0xbaf)]['reflectionTexture'] = _0x142959;
        }
        set [_0x5659be(0xbb0)](_0x10207a) {
            var _0x284c33 = _0x5659be;
            this[_0x284c33(0xbaf)][_0x284c33(0xb00)] = _0x10207a;
        }
        ['_updateMotionObjects'](_0x45432f) {
            var _0x2f987e = _0x5659be;
            if (this[_0x2f987e(0xbad)]['length'] == 0x0) {
                _0x45432f['_probReflection'] = this[_0x2f987e(0xbaf)];
                return;
            }
            var _0x42e61b = this[_0x2f987e(0xbad)]['elements'], _0xba67b5 = 0x0, _0x73aad2, _0x2967da = _0x45432f[_0x2f987e(0x80d)], _0x4935e7;
            for (var _0x4e4880 = 0x0, _0x127430 = this[_0x2f987e(0xbad)][_0x2f987e(0x1ff)]; _0x4e4880 < _0x127430; _0x4e4880++) {
                var _0x2e5c85 = _0x42e61b[_0x4e4880];
                if (!_0x73aad2) {
                    _0x4935e7 = _0x2967da[_0x2f987e(0xa5a)](_0x2e5c85['bounds']);
                    if (_0x4935e7 < _0xba67b5)
                        continue;
                } else {
                    if (_0x73aad2['importance'] > _0x2e5c85['importance'])
                        continue;
                    _0x4935e7 = _0x2967da['calculateBoundsintersection'](_0x2e5c85[_0x2f987e(0x80d)]);
                    if (_0x4935e7 < _0xba67b5 && _0x73aad2[_0x2f987e(0xafb)] == _0x2e5c85['importance'])
                        continue;
                }
                _0x73aad2 = _0x2e5c85, _0xba67b5 = _0x4935e7;
            }
            if (!_0x73aad2 && this[_0x2f987e(0xbaf)])
                _0x73aad2 = this[_0x2f987e(0xbaf)];
            _0x45432f[_0x2f987e(0xab5)] = _0x73aad2;
        }
        ['add'](_0x1ef6c6) {
            var _0x5b0bd1 = _0x5659be;
            this[_0x5b0bd1(0xbad)][_0x5b0bd1(0x201)](_0x1ef6c6), this['_needUpdateAllRender'] = !![];
        }
        [_0x5659be(0x3a9)](_0x3c571b) {
            var _0x4fbc75 = _0x5659be;
            this[_0x4fbc75(0xbad)]['remove'](_0x3c571b), this[_0x4fbc75(0xbae)] = !![];
        }
        [_0x5659be(0xb29)](_0x1dfec4) {
            var _0x4258d5 = _0x5659be;
            this[_0x4258d5(0xb64)][_0x4258d5(0x201)](_0x1dfec4);
        }
        [_0x5659be(0x85a)]() {
            var _0x34970a = _0x5659be, _0x32c788 = this[_0x34970a(0xb64)][_0x34970a(0x1f6)];
            for (var _0x2d3a5f = 0x0, _0x3c7f2f = this['_motionObjects'][_0x34970a(0x1ff)]; _0x2d3a5f < _0x3c7f2f; _0x2d3a5f++) {
                this[_0x34970a(0xbb1)](_0x32c788[_0x2d3a5f]);
            }
            this[_0x34970a(0xbb2)]();
        }
        ['updateAllRenderObjects'](_0x48fc8b) {
            var _0x58d8d = _0x5659be, _0x1b5b30 = _0x48fc8b['elements'];
            for (var _0x156219 = 0x0, _0x1cfcec = _0x48fc8b[_0x58d8d(0x1ff)]; _0x156219 < _0x1cfcec; _0x156219++) {
                this[_0x58d8d(0xbb1)](_0x1b5b30[_0x156219]);
            }
            this[_0x58d8d(0xbae)] = ![];
        }
        [_0x5659be(0xbb2)]() {
            var _0x27cbe8 = _0x5659be;
            this[_0x27cbe8(0xb64)][_0x27cbe8(0x1ff)] = 0x0;
        }
        [_0x5659be(0x311)]() {
        }
    }
    (function (_0x52baa2) {
        var _0x24ce1d = _0x5659be;
        _0x52baa2[_0x52baa2[_0x24ce1d(0x984)] = 0x0] = 'SolidColor', _0x52baa2[_0x52baa2[_0x24ce1d(0xbb3)] = 0x1] = 'SphericalHarmonics';
    }(_0x71dec4['AmbientMode'] || (_0x71dec4[_0x5659be(0xbb4)] = {})));
    class _0x55cc88 extends _0x218b83['Sprite'] {
        constructor() {
            var _0x1fce88 = _0x5659be;
            super(), this[_0x1fce88(0xbb5)] = 0x0, this[_0x1fce88(0x85f)] = new _0x335947(), this[_0x1fce88(0x861)] = new _0x335947(), this[_0x1fce88(0x85e)] = new _0x335947(), this['_alternateLights'] = new _0x3744f8(), this[_0x1fce88(0xbb6)] = [], this[_0x1fce88(0x8e1)] = new _0x55999c(), this[_0x1fce88(0xbb7)] = new _0x3abb9f(), this[_0x1fce88(0xbb8)] = _0x218b83['ILaya'][_0x1fce88(0x3b4)], this[_0x1fce88(0xbb9)] = 0x0, this[_0x1fce88(0xbba)] = new Array(0x7), this[_0x1fce88(0xbbb)] = _0x71dec4[_0x1fce88(0xbb4)][_0x1fce88(0x984)], this[_0x1fce88(0xbbc)] = new _0x5465cd(), this['_ambientSphericalHarmonicsIntensity'] = 0x1, this[_0x1fce88(0xaf8)] = _0x218b83[_0x1fce88(0xbbd)][_0x1fce88(0xaf9)], this[_0x1fce88(0xbbe)] = 0x1, this['_collsionTestList'] = [], this[_0x1fce88(0x819)] = new _0x5d98a9(), this['_opaqueQueue'] = new _0x23b84b(![]), this['_transparentQueue'] = new _0x23b84b(!![]), this[_0x1fce88(0xa09)] = [], this[_0x1fce88(0x37c)] = new _0x5d98a9(), this[_0x1fce88(0xbbf)] = new Array(), this[_0x1fce88(0xbc0)] = new Array(), this['_needClearScriptPool'] = ![], this[_0x1fce88(0xbc1)] = new _0x8fb80(), this[_0x1fce88(0xb08)] = new _0x33182f(), this[_0x1fce88(0xbc2)] = Math[_0x1fce88(0x2ef)](0x2, 0x0), this[_0x1fce88(0xbc3)] = !![], this[_0x1fce88(0xbc4)] = new _0x218b83['SubmitKey'](), this['_pickIdToSprite'] = new Object(), this['_reflectionMode'] = 0x0;
            if (!_0x528624[_0x1fce88(0x243)][_0x1fce88(0x244)] && _0x40d5e5[_0x1fce88(0x227)])
                this['_physicsSimulation'] = new _0x218b83[(_0x1fce88(0xa07))](_0x55cc88[_0x1fce88(0xbc5)]);
            else
                _0x40d5e5[_0x1fce88(0x22e)] && (this[_0x1fce88(0xbc6)] = new _0x218b83[(_0x1fce88(0x231))](_0x55cc88[_0x1fce88(0x245)]));
            this[_0x1fce88(0x4e0)] = new _0x552b02(null), this[_0x1fce88(0xbc7)] = ![], this['fogStart'] = 0x12c, this[_0x1fce88(0xbc8)] = 0x3e8, this[_0x1fce88(0xbc9)] = new _0x3f70c5(0.7, 0.7, 0.7), this[_0x1fce88(0xbca)] = new _0x3f70c5(0.212, 0.227, 0.259), this['reflectionIntensity'] = 0x1, this[_0x1fce88(0xb01)] = _0x38ac97[_0x1fce88(0xa1d)];
            for (var _0x2b4113 = 0x0; _0x2b4113 < 0x7; _0x2b4113++)
                this[_0x1fce88(0xbba)][_0x2b4113] = new _0x8fb80();
            this['_reflectionProbeManager'][_0x1fce88(0xbb0)] = this['_reflectionCubeHDRParams'], this[_0x1fce88(0x3a6)] = this, this[_0x1fce88(0xbb7)][_0x1fce88(0x229)](_0x218b83[_0x1fce88(0x308)][_0x1fce88(0xbcb)], this);
            if (_0x55cc88['octreeCulling'])
                this[_0x1fce88(0x823)] = new _0x4d3809(_0x55cc88[_0x1fce88(0x256)], _0x55cc88[_0x1fce88(0x255)], _0x55cc88[_0x1fce88(0x23c)], _0x55cc88[_0x1fce88(0x23d)]);
            if (_0x4b5e1d[_0x1fce88(0x23e)]) {
                this['_debugTool'] = new _0x391375();
                var _0x31593b = new _0x541c3c();
                _0x31593b[_0x1fce88(0x6ae)] = _0x4bfb48[_0x1fce88(0x6b1)], _0x31593b[_0x1fce88(0x6a0)] = ![], _0x31593b[_0x1fce88(0x698)] = ![], _0x31593b['cull'] = _0x2aa393[_0x1fce88(0x6ba)], _0x31593b[_0x1fce88(0x695)] = _0x2aa393[_0x1fce88(0x6c9)], _0x31593b[_0x1fce88(0x699)] = _0x2aa393[_0x1fce88(0x6ff)], _0x31593b[_0x1fce88(0x69b)] = _0x2aa393[_0x1fce88(0x700)], _0x31593b[_0x1fce88(0x697)] = _0x2aa393[_0x1fce88(0x6d3)], this[_0x1fce88(0x81e)][_0x1fce88(0xb3c)]['sharedMaterial'] = _0x31593b;
            }
        }
        static ['__init__']() {
            var _0x3cb680 = _0x5659be, _0x4e3268 = _0x528624[_0x3cb680(0x243)], _0x38b471 = _0x4e3268['_multiLighting'];
            if (_0x38b471) {
                const _0x38a2be = 0x4;
                var _0x7cf1a3 = _0x4e3268[_0x3cb680(0x24d)], _0x1b64f4 = _0x4e3268[_0x3cb680(0x250)];
                _0x43fad1[_0x3cb680(0x2f4)] = new _0x43fad1(_0x1b64f4['x'], _0x1b64f4['y'], _0x1b64f4['z'], Math[_0x3cb680(0x204)](_0x4e3268[_0x3cb680(0x24d)], _0x4e3268[_0x3cb680(0x240)])), _0x55cc88[_0x3cb680(0xbcc)] = _0x108d81[_0x3cb680(0x2cc)](_0x38a2be, _0x7cf1a3), _0x55cc88[_0x3cb680(0xbcc)][_0x3cb680(0x30b)] = !![], _0x55cc88[_0x3cb680(0xbcd)] = new Float32Array(_0x7cf1a3 * _0x38a2be * 0x4);
            }
            _0x2de530[_0x3cb680(0xbce)] = _0x84b6d6[_0x3cb680(0x510)](_0x3cb680(0xbcf)), _0x2de530[_0x3cb680(0xbd0)] = _0x84b6d6[_0x3cb680(0x510)](_0x3cb680(0xbd1)), _0x2de530[_0x3cb680(0xbd2)] = _0x84b6d6['getDefineByName'](_0x3cb680(0xbd3)), _0x2de530[_0x3cb680(0xbd4)] = _0x84b6d6[_0x3cb680(0x510)]('SPOTLIGHT'), _0x2de530[_0x3cb680(0x9c1)] = _0x84b6d6['getDefineByName'](_0x3cb680(0xbd5)), _0x2de530[_0x3cb680(0xb87)] = _0x84b6d6[_0x3cb680(0x510)](_0x3cb680(0xbd6)), _0x2de530[_0x3cb680(0xb88)] = _0x84b6d6[_0x3cb680(0x510)]('SHADOW_SOFT_SHADOW_LOW'), _0x2de530['SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH'] = _0x84b6d6[_0x3cb680(0x510)]('SHADOW_SOFT_SHADOW_HIGH'), _0x2de530[_0x3cb680(0xbd7)] = _0x84b6d6['getDefineByName'](_0x3cb680(0xbd8)), _0x2de530['SHADERDEFINE_SHADOW_SPOT'] = _0x84b6d6[_0x3cb680(0x510)](_0x3cb680(0xbd9)), _0x2de530['SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW'] = _0x84b6d6[_0x3cb680(0x510)](_0x3cb680(0xbda)), _0x2de530['SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH'] = _0x84b6d6[_0x3cb680(0x510)]('SHADOW_SPOT_SOFT_SHADOW_HIGH');
            var _0x506f7a = _0x528624[_0x3cb680(0x243)], _0x5f2067 = _0x55cc88[_0x3cb680(0xbdb)];
            _0x506f7a['_multiLighting'] || _0x5f2067[_0x3cb680(0x201)](_0x84b6d6[_0x3cb680(0xbdc)]);
            if (_0x218b83[_0x3cb680(0x2f3)]['layaGPUInstance'][_0x3cb680(0x952)])
                _0x5f2067['add'](_0x84b6d6[_0x3cb680(0xbdd)]);
            else
                _0x5f2067[_0x3cb680(0x201)](_0x84b6d6[_0x3cb680(0xbde)]);
            switch (_0x506f7a[_0x3cb680(0x23f)]) {
            case _0x71dec4[_0x3cb680(0x21d)][_0x3cb680(0x21b)]:
                _0x5f2067[_0x3cb680(0x201)](_0x336a30[_0x3cb680(0x779)]);
                break;
            case _0x71dec4['PBRRenderQuality'][_0x3cb680(0x21c)]:
                _0x5f2067[_0x3cb680(0x201)](_0x336a30[_0x3cb680(0x77b)]);
                break;
            default:
                throw 'Scene3D:unknown\x20shader\x20quality.';
            }
            _0x506f7a[_0x3cb680(0x244)] ? _0x40d5e5[_0x3cb680(0x22e)] && (_0x55cc88['cannonPhysicsSettings'] = new _0x218b83['CannonPhysicsSettings']()) : _0x40d5e5[_0x3cb680(0x227)] && (_0x55cc88[_0x3cb680(0xbc5)] = new _0x218b83[(_0x3cb680(0xbdf))]());
        }
        static [_0x5659be(0x31c)](_0x835b9, _0x5c5f82) {
            var _0x1154d2 = _0x5659be;
            _0x218b83[_0x1154d2(0x31d)][_0x1154d2(0x5bd)][_0x1154d2(0x31e)](_0x835b9, _0x5c5f82, null, _0x55cc88[_0x1154d2(0x5be)]);
        }
        get [_0x5659be(0xbe0)]() {
            var _0x216882 = _0x5659be;
            return this[_0x216882(0x5c1)];
        }
        get [_0x5659be(0xbc7)]() {
            var _0x156514 = _0x5659be;
            return this[_0x156514(0xbe1)];
        }
        set [_0x5659be(0xbc7)](_0x326220) {
            var _0x2fa651 = _0x5659be;
            if (this[_0x2fa651(0xbe1)] !== _0x326220) {
                this[_0x2fa651(0xbe1)] = _0x326220;
                if (_0x326220)
                    this[_0x2fa651(0x4e0)]['addDefine'](_0x2de530[_0x2fa651(0xbce)]);
                else
                    this[_0x2fa651(0x4e0)][_0x2fa651(0x493)](_0x2de530[_0x2fa651(0xbce)]);
            }
        }
        get ['fogColor']() {
            var _0x481712 = _0x5659be;
            return this[_0x481712(0x4e0)][_0x481712(0x49b)](_0x55cc88[_0x481712(0xbe2)]);
        }
        set [_0x5659be(0xbc9)](_0x439536) {
            var _0x29b69c = _0x5659be;
            this['_shaderValues'][_0x29b69c(0x4b1)](_0x55cc88['FOGCOLOR'], _0x439536);
        }
        get [_0x5659be(0xbe3)]() {
            var _0x2d45ce = _0x5659be;
            return this['_shaderValues'][_0x2d45ce(0x498)](_0x55cc88[_0x2d45ce(0xbe4)]);
        }
        set ['fogStart'](_0x2984f2) {
            var _0x59058d = _0x5659be;
            this[_0x59058d(0x4e0)][_0x59058d(0x4af)](_0x55cc88[_0x59058d(0xbe4)], _0x2984f2);
        }
        get [_0x5659be(0xbc8)]() {
            var _0x425632 = _0x5659be;
            return this[_0x425632(0x4e0)][_0x425632(0x498)](_0x55cc88[_0x425632(0xbe5)]);
        }
        set [_0x5659be(0xbc8)](_0x1d8918) {
            var _0x290c94 = _0x5659be;
            this[_0x290c94(0x4e0)]['setNumber'](_0x55cc88[_0x290c94(0xbe5)], _0x1d8918);
        }
        get [_0x5659be(0xbe6)]() {
            var _0x499387 = _0x5659be;
            return this[_0x499387(0xbbb)];
        }
        set [_0x5659be(0xbe6)](_0x5ce606) {
            var _0x1de2ea = _0x5659be;
            if (this['_ambientMode'] !== _0x5ce606) {
                switch (_0x5ce606) {
                case _0x71dec4[_0x1de2ea(0xbb4)][_0x1de2ea(0x984)]:
                    this[_0x1de2ea(0x4e0)][_0x1de2ea(0x493)](_0x2de530['SHADERDEFINE_GI_AMBIENT_SH']);
                    break;
                case _0x71dec4[_0x1de2ea(0xbb4)][_0x1de2ea(0xbb3)]:
                    this[_0x1de2ea(0x4e0)][_0x1de2ea(0x62c)](_0x2de530[_0x1de2ea(0xbd7)]);
                    break;
                default:
                    throw _0x1de2ea(0xbe7);
                }
                this[_0x1de2ea(0xbbb)] = _0x5ce606;
            }
        }
        get [_0x5659be(0xbca)]() {
            var _0x48a27f = _0x5659be;
            return this[_0x48a27f(0x4e0)]['getVector3'](_0x55cc88['AMBIENTCOLOR']);
        }
        set ['ambientColor'](_0x25f045) {
            var _0x24f592 = _0x5659be;
            this[_0x24f592(0x4e0)][_0x24f592(0x4b1)](_0x55cc88[_0x24f592(0xbe8)], _0x25f045);
        }
        get [_0x5659be(0xbe9)]() {
            return this['_ambientSphericalHarmonics'];
        }
        set [_0x5659be(0xbe9)](_0x3c9f1e) {
            var _0x533004 = _0x5659be, _0x536eae = _0x3c9f1e || _0x5465cd['_default'];
            this['_applySHCoefficients'](_0x536eae, Math['pow'](this['_ambientSphericalHarmonicsIntensity'], 2.2));
            if (this['_ambientSphericalHarmonics'] != _0x3c9f1e)
                _0x3c9f1e[_0x533004(0x1f0)](this[_0x533004(0xbbc)]);
        }
        get [_0x5659be(0xbea)]() {
            return this['_ambientSphericalHarmonicsIntensity'];
        }
        set [_0x5659be(0xbea)](_0x561545) {
            var _0x30c2f3 = _0x5659be;
            _0x561545 = Math[_0x30c2f3(0x205)](Math['min'](_0x561545, 0x8), 0x0);
            if (this[_0x30c2f3(0xbeb)] !== _0x561545) {
                var _0x27b968 = this[_0x30c2f3(0xbbc)] || _0x5465cd[_0x30c2f3(0x86c)];
                this[_0x30c2f3(0xbec)](_0x27b968, Math[_0x30c2f3(0x2ef)](_0x561545, 2.2)), this[_0x30c2f3(0xbeb)] = _0x561545;
            }
        }
        get [_0x5659be(0xb01)]() {
            return this['_reflection'];
        }
        set [_0x5659be(0xb01)](_0x36398d) {
            var _0x511d3a = _0x5659be;
            _0x36398d = _0x36398d ? _0x36398d : _0x38ac97['blackTexture'], this['_reflection'] != _0x36398d && (_0x36398d['_addReference'](), this[_0x511d3a(0xb08)][_0x511d3a(0xbed)] = _0x36398d, this[_0x511d3a(0xbee)] = _0x36398d, this[_0x511d3a(0xb08)][_0x511d3a(0xbae)] = !![]);
        }
        get [_0x5659be(0xbef)]() {
            var _0x5dd74f = _0x5659be;
            return this[_0x5dd74f(0xaf8)];
        }
        set [_0x5659be(0xbef)](_0x132334) {
            var _0x5b8977 = _0x5659be;
            if (this['_reflectionDecodeFormat'] != _0x132334) {
                this[_0x5b8977(0xbc1)]['x'] = this[_0x5b8977(0xbbe)];
                if (this['_reflectionDecodeFormat'] == _0x218b83[_0x5b8977(0xbbd)][_0x5b8977(0xbf0)])
                    this[_0x5b8977(0xbc1)]['x'] *= 0x5;
                this[_0x5b8977(0xaf8)] = _0x132334, this['_reflectionProbeManager']['sceneReflectionCubeHDRParam'] = this[_0x5b8977(0xbc1)];
            }
        }
        get ['reflectionIntensity']() {
            var _0x1387fe = _0x5659be;
            return this[_0x1387fe(0xbbe)];
        }
        set [_0x5659be(0xbf1)](_0x56fbc2) {
            var _0x2dd8f7 = _0x5659be;
            _0x56fbc2 = Math[_0x2dd8f7(0x205)](Math[_0x2dd8f7(0x204)](_0x56fbc2, 0x1), 0x0), this[_0x2dd8f7(0xbc1)]['x'] = _0x56fbc2;
            if (this[_0x2dd8f7(0xaf8)] == _0x218b83[_0x2dd8f7(0xbbd)][_0x2dd8f7(0xbf0)])
                this[_0x2dd8f7(0xbc1)]['x'] *= 0x5;
            this[_0x2dd8f7(0xbbe)] = _0x56fbc2, this[_0x2dd8f7(0xb08)]['sceneReflectionCubeHDRParam'] = this['_reflectionCubeHDRParams'];
        }
        get [_0x5659be(0x8e8)]() {
            return this['_skyRenderer'];
        }
        get [_0x5659be(0xbf2)]() {
            var _0x3c929d = _0x5659be;
            return this[_0x3c929d(0x9fd)];
        }
        get [_0x5659be(0xbf3)]() {
            var _0x229f95 = _0x5659be;
            return this[_0x229f95(0xbc6)];
        }
        get ['timer']() {
            return this['_timer'];
        }
        set [_0x5659be(0x3b4)](_0x17002b) {
            var _0x5f4ff3 = _0x5659be;
            this[_0x5f4ff3(0xbb8)] = _0x17002b;
        }
        get [_0x5659be(0xbf4)]() {
            var _0x3c3688 = _0x5659be;
            return this[_0x3c3688(0xbb7)];
        }
        get [_0x5659be(0xb2b)]() {
            var _0x236d89 = _0x5659be;
            return this['_lightmaps'][_0x236d89(0xb1a)]();
        }
        set [_0x5659be(0xb2b)](_0x304b85) {
            var _0x1c941a = _0x5659be, _0x403788 = this['_lightmaps'];
            if (_0x403788)
                for (var _0x214093 = 0x0, _0xad241b = _0x403788[_0x1c941a(0x1ff)]; _0x214093 < _0xad241b; _0x214093++) {
                    var _0x286e12 = _0x403788[_0x214093];
                    _0x286e12[_0x1c941a(0xb2c)][_0x1c941a(0x351)](), _0x286e12['lightmapDirection'][_0x1c941a(0x351)]();
                }
            if (_0x304b85) {
                var _0x511f13 = _0x304b85['length'];
                _0x403788['length'] = _0x511f13;
                for (_0x214093 = 0x0; _0x214093 < _0x511f13; _0x214093++) {
                    var _0x286e12 = _0x304b85[_0x214093];
                    _0x286e12['lightmapColor'] && _0x286e12[_0x1c941a(0xb2c)][_0x1c941a(0x354)](), _0x286e12[_0x1c941a(0xb2d)] && _0x286e12[_0x1c941a(0xb2d)]['_addReference'](), _0x403788[_0x214093] = _0x286e12;
                }
            } else
                _0x403788['length'] = 0x0;
        }
        [_0x5659be(0xbec)](_0x24b587, _0x15737e) {
            var _0x56be5a = _0x5659be, _0x2ef6f3 = this[_0x56be5a(0xbba)];
            for (var _0x4a53c9 = 0x0; _0x4a53c9 < 0x3; _0x4a53c9++) {
                var _0x3b4283 = _0x2ef6f3[_0x4a53c9], _0x1f5a99 = _0x2ef6f3[_0x4a53c9 + 0x3];
                _0x3b4283[_0x56be5a(0x1fa)](_0x24b587['getCoefficient'](_0x4a53c9, 0x3) * _0x15737e, _0x24b587[_0x56be5a(0x868)](_0x4a53c9, 0x1) * _0x15737e, _0x24b587[_0x56be5a(0x868)](_0x4a53c9, 0x2) * _0x15737e, (_0x24b587[_0x56be5a(0x868)](_0x4a53c9, 0x0) - _0x24b587['getCoefficient'](_0x4a53c9, 0x6)) * _0x15737e), _0x1f5a99['setValue'](_0x24b587[_0x56be5a(0x868)](_0x4a53c9, 0x4) * _0x15737e, _0x24b587['getCoefficient'](_0x4a53c9, 0x5) * _0x15737e, _0x24b587[_0x56be5a(0x868)](_0x4a53c9, 0x6) * 0x3 * _0x15737e, _0x24b587[_0x56be5a(0x868)](_0x4a53c9, 0x7) * _0x15737e);
            }
            _0x2ef6f3[0x6][_0x56be5a(0x1fa)](_0x24b587[_0x56be5a(0x868)](0x0, 0x8) * _0x15737e, _0x24b587['getCoefficient'](0x1, 0x8) * _0x15737e, _0x24b587[_0x56be5a(0x868)](0x2, 0x8) * _0x15737e, 0x1);
            var _0x4e64c1 = this[_0x56be5a(0x4e0)];
            _0x4e64c1[_0x56be5a(0x49d)](_0x55cc88[_0x56be5a(0xbf5)], _0x2ef6f3[0x0]), _0x4e64c1[_0x56be5a(0x49d)](_0x55cc88[_0x56be5a(0xbf6)], _0x2ef6f3[0x1]), _0x4e64c1[_0x56be5a(0x49d)](_0x55cc88['AMBIENTSHAB'], _0x2ef6f3[0x2]), _0x4e64c1['setVector'](_0x55cc88[_0x56be5a(0xbf7)], _0x2ef6f3[0x3]), _0x4e64c1['setVector'](_0x55cc88[_0x56be5a(0xbf8)], _0x2ef6f3[0x4]), _0x4e64c1[_0x56be5a(0x49d)](_0x55cc88[_0x56be5a(0xbf9)], _0x2ef6f3[0x5]), _0x4e64c1[_0x56be5a(0x49d)](_0x55cc88[_0x56be5a(0xbfa)], _0x2ef6f3[0x6]);
        }
        [_0x5659be(0x3b3)]() {
            var _0x3fc8b8 = _0x5659be;
            _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9b7)](_0x218b83['PerformancePlugin'][_0x3fc8b8(0xbfb)]);
            var _0x49e35c = this[_0x3fc8b8(0x3b4)][_0x3fc8b8(0x3b5)] / 0x3e8;
            this[_0x3fc8b8(0xbb9)] += _0x49e35c, this[_0x3fc8b8(0x4e0)][_0x3fc8b8(0x4af)](_0x55cc88[_0x3fc8b8(0xbfc)], this[_0x3fc8b8(0xbb9)]), _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9b7)](_0x218b83['PerformancePlugin'][_0x3fc8b8(0xbfd)]);
            var _0x55df98 = this[_0x3fc8b8(0x9fd)];
            _0x40d5e5[_0x3fc8b8(0x233)] && !_0x218b83['PhysicsSimulation'][_0x3fc8b8(0xa08)] && !_0x528624[_0x3fc8b8(0x243)]['isUseCannonPhysicsEngine'] && (_0x55df98[_0x3fc8b8(0xbfe)](), _0x218b83[_0x3fc8b8(0x22a)][_0x3fc8b8(0xbff)] = ![], _0x218b83['PerformancePlugin'][_0x3fc8b8(0x9b7)](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xc00)]), _0x55df98[_0x3fc8b8(0xc01)](_0x49e35c), _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9ba)](_0x218b83[_0x3fc8b8(0x9b6)]['PERFORMANCE_LAYA_3D_PHYSICS_SIMULATE']), _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9b7)](_0x218b83[_0x3fc8b8(0x9b6)]['PERFORMANCE_LAYA_3D_PHYSICS_CHARACTORCOLLISION']), _0x55df98[_0x3fc8b8(0xc02)](), _0x218b83[_0x3fc8b8(0x22a)][_0x3fc8b8(0xbff)] = !![], _0x55df98['_updateCollisions'](), _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9ba)](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xc03)]), _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9b7)](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xc04)]), _0x55df98[_0x3fc8b8(0xc05)](), _0x218b83['PerformancePlugin'][_0x3fc8b8(0x9ba)](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xc04)]));
            if (_0x40d5e5[_0x3fc8b8(0x22e)] && _0x528624['_config'][_0x3fc8b8(0x244)]) {
                var _0x355e0c = this[_0x3fc8b8(0xbc6)];
                _0x355e0c[_0x3fc8b8(0xbfe)](), _0x218b83[_0x3fc8b8(0xc06)][_0x3fc8b8(0xbff)] = ![], _0x355e0c[_0x3fc8b8(0xc01)](_0x49e35c), _0x218b83[_0x3fc8b8(0xc06)][_0x3fc8b8(0xbff)] = !![], _0x355e0c['_updateCollisions'](), _0x355e0c[_0x3fc8b8(0xc05)]();
            }
            _0x218b83['PerformancePlugin']['endSample'](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xbfd)]), _0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0x9b7)](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xc07)]), this[_0x3fc8b8(0xbb7)][_0x3fc8b8(0x3b3)](), this['_clearScript'](), this[_0x3fc8b8(0xc08)](), _0x58a8c8['_update'](this), _0x218b83['VideoTexture'][_0x3fc8b8(0x3b3)]();
            if (this[_0x3fc8b8(0xb08)][_0x3fc8b8(0xbae)])
                this['_reflectionProbeManager'][_0x3fc8b8(0xc09)](this[_0x3fc8b8(0x819)]);
            else
                this[_0x3fc8b8(0xb08)][_0x3fc8b8(0x85a)]();
            this[_0x3fc8b8(0xc0a)](), _0x218b83['PerformancePlugin'][_0x3fc8b8(0x9ba)](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xc07)]), _0x218b83['PerformancePlugin']['endSample'](_0x218b83[_0x3fc8b8(0x9b6)][_0x3fc8b8(0xbfb)]);
        }
        [_0x5659be(0xc0b)](_0x10bf24) {
            var _0x4cb0c8 = _0x5659be, _0x30b564 = 0x0, _0x1f556c = this[_0x4cb0c8(0xa09)]['length'] - 0x1, _0x4be0be;
            while (_0x30b564 <= _0x1f556c) {
                _0x4be0be = Math[_0x4cb0c8(0x241)]((_0x30b564 + _0x1f556c) / 0x2);
                var _0x41ba76 = this[_0x4cb0c8(0xa09)][_0x4be0be][_0x4cb0c8(0xc0c)];
                if (_0x41ba76 == _0x10bf24[_0x4cb0c8(0xc0c)])
                    return _0x4be0be;
                else {
                    if (_0x41ba76 > _0x10bf24[_0x4cb0c8(0xc0c)])
                        _0x1f556c = _0x4be0be - 0x1;
                    else
                        _0x30b564 = _0x4be0be + 0x1;
                }
            }
            return _0x30b564;
        }
        ['_allotPickColorByID'](_0x4bf049, _0x11cd64) {
            var _0xfd0924 = _0x5659be, _0x2542bc = Math[_0xfd0924(0x241)](_0x4bf049 / (0xff * 0xff));
            _0x4bf049 -= _0x2542bc * 0xff * 0xff;
            var _0x13292f = Math[_0xfd0924(0x241)](_0x4bf049 / 0xff);
            _0x4bf049 -= _0x13292f * 0xff;
            var _0x43f010 = _0x4bf049;
            _0x11cd64['x'] = _0x2542bc / 0xff, _0x11cd64['y'] = _0x13292f / 0xff, _0x11cd64['z'] = _0x43f010 / 0xff, _0x11cd64['w'] = 0x1;
        }
        ['_searchIDByPickColor'](_0x4e6008) {
            var _0x443064 = _0x4e6008['x'] * 0xff * 0xff + _0x4e6008['y'] * 0xff + _0x4e6008['z'];
            return _0x443064;
        }
        [_0x5659be(0xc0d)]() {
            var _0x317c23 = _0x5659be;
            this['_input'][_0x317c23(0xc0e)](_0x218b83[_0x317c23(0x308)]['canvas']);
        }
        [_0x5659be(0xc0f)]() {
            var _0xa5bd08 = _0x5659be;
            this[_0xa5bd08(0xbb7)][_0xa5bd08(0x9ef)](_0x218b83[_0xa5bd08(0x308)][_0xa5bd08(0xbcb)]);
        }
        ['_setCreateURL'](_0x438a65) {
            var _0x1dba2b = _0x5659be;
            this['_url'] = _0x218b83['URL'][_0x1dba2b(0x5c3)](_0x438a65);
        }
        [_0x5659be(0xc10)]() {
            var _0x324f7c = _0x5659be;
            return this[_0x324f7c(0xc11)];
        }
        ['_setGroup'](_0x2dc1b5) {
            var _0x59bdb5 = _0x5659be;
            this[_0x59bdb5(0xc11)] = _0x2dc1b5;
        }
        [_0x5659be(0xc12)]() {
            var _0x5f3053 = _0x5659be;
            if (this[_0x5f3053(0xc13)]) {
                var _0x45bed1 = this[_0x5f3053(0xbbf)];
                for (var _0x406740 = 0x0, _0x36b7b9 = _0x45bed1[_0x5f3053(0x1ff)]; _0x406740 < _0x36b7b9; _0x406740++) {
                    var _0x2921c3 = _0x45bed1[_0x406740];
                    _0x2921c3 && (_0x2921c3[_0x5f3053(0xc14)] = this[_0x5f3053(0xbc0)][_0x5f3053(0x1ff)], this[_0x5f3053(0xbc0)][_0x5f3053(0x298)](_0x2921c3));
                }
                this[_0x5f3053(0xbbf)] = this[_0x5f3053(0xbc0)], _0x45bed1[_0x5f3053(0x1ff)] = 0x0, this['_tempScriptPool'] = _0x45bed1, this['_needClearScriptPool'] = ![];
            }
        }
        [_0x5659be(0xc08)]() {
            var _0x1bf7e8 = _0x5659be, _0x29023f = this[_0x1bf7e8(0xbbf)];
            for (var _0x3809e5 = 0x0, _0x23bafa = _0x29023f['length']; _0x3809e5 < _0x23bafa; _0x3809e5++) {
                var _0x3c42f4 = _0x29023f[_0x3809e5];
                _0x3c42f4 && _0x3c42f4[_0x1bf7e8(0x37d)] && _0x3c42f4[_0x1bf7e8(0xc15)]();
            }
        }
        ['_lateUpdateScript']() {
            var _0x58fca9 = _0x5659be, _0x1104ee = this['_scriptPool'];
            for (var _0x11ca02 = 0x0, _0x49a2b7 = _0x1104ee[_0x58fca9(0x1ff)]; _0x11ca02 < _0x49a2b7; _0x11ca02++) {
                var _0x363ad2 = _0x1104ee[_0x11ca02];
                _0x363ad2 && _0x363ad2[_0x58fca9(0x37d)] && _0x363ad2[_0x58fca9(0xc16)]();
            }
        }
        ['_onActive']() {
            var _0x13c14a = _0x5659be;
            super['_onActive'](), _0x218b83['ILaya'][_0x13c14a(0x8fb)][_0x13c14a(0xc17)][_0x13c14a(0x298)](this);
        }
        [_0x5659be(0x8fa)]() {
            var _0xfc2355 = _0x5659be;
            super[_0xfc2355(0x8fa)]();
            var _0x40650e = _0x218b83[_0xfc2355(0x31d)][_0xfc2355(0x8fb)]['_scene3Ds'];
            _0x40650e['splice'](_0x40650e[_0xfc2355(0x384)](this), 0x1);
        }
        [_0x5659be(0xc18)]() {
            var _0x1fe128 = _0x5659be, _0x1f01c9 = this['_shaderValues'], _0x28e798 = _0x528624[_0x1fe128(0x243)][_0x1fe128(0xc19)];
            if (_0x28e798) {
                var _0xcad7ca = _0x55cc88['_lightTexture'], _0x3602ee = _0x55cc88['_lightPixles'];
                const _0x4681bd = _0xcad7ca[_0x1fe128(0x300)], _0x1d2f7d = _0x4681bd * 0x4;
                var _0x3c3aa6 = 0x0, _0x1ec1f2 = this[_0x1fe128(0x85e)][_0x1fe128(0x438)], _0x41fb49 = this['_directionLights'][_0x1fe128(0x860)];
                if (_0x1ec1f2 > 0x0) {
                    var _0xce4d = this['_directionLights'][_0x1fe128(0xa3c)]();
                    this['_mainDirectionLight'] = _0x41fb49[_0xce4d], this[_0x1fe128(0x85e)][_0x1fe128(0xa3d)](_0xce4d);
                    for (var _0x57387c = 0x0; _0x57387c < _0x1ec1f2; _0x57387c++, _0x3c3aa6++) {
                        var _0x5a1bcf = _0x41fb49[_0x57387c], _0x3d2b10 = _0x5a1bcf[_0x1fe128(0xc1a)], _0x2d0287 = _0x5a1bcf[_0x1fe128(0x92d)], _0x4ab52b = _0x1d2f7d * _0x3c3aa6;
                        _0x3f70c5[_0x1fe128(0x1ee)](_0x5a1bcf['color'], _0x5a1bcf[_0x1fe128(0x92c)], _0x2d0287), _0x5a1bcf[_0x1fe128(0x3cc)][_0x1fe128(0x3ce)][_0x1fe128(0x5ae)](_0x3d2b10), _0x3f70c5[_0x1fe128(0x1f2)](_0x3d2b10, _0x3d2b10), _0x3602ee[_0x4ab52b] = _0x2d0287['x'], _0x3602ee[_0x4ab52b + 0x1] = _0x2d0287['y'], _0x3602ee[_0x4ab52b + 0x2] = _0x2d0287['z'], _0x3602ee[_0x4ab52b + 0x4] = _0x3d2b10['x'], _0x3602ee[_0x4ab52b + 0x5] = _0x3d2b10['y'], _0x3602ee[_0x4ab52b + 0x6] = _0x3d2b10['z'], _0x57387c == 0x0 && (_0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc1b)], _0x2d0287), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88['SUNLIGHTDIRECTION'], _0x3d2b10));
                    }
                    _0x1f01c9[_0x1fe128(0x62c)](_0x2de530[_0x1fe128(0xbd0)]);
                } else
                    _0x1f01c9[_0x1fe128(0x493)](_0x2de530['SHADERDEFINE_DIRECTIONLIGHT']);
                var _0x3ae8fa = this['_pointLights'][_0x1fe128(0x438)];
                if (_0x3ae8fa > 0x0) {
                    var _0x2c6b24 = this[_0x1fe128(0x85f)][_0x1fe128(0x860)], _0x1dd5a1 = this[_0x1fe128(0x85f)]['getBrightestLight']();
                    this[_0x1fe128(0xc1c)] = _0x2c6b24[_0x1dd5a1], this[_0x1fe128(0x85f)][_0x1fe128(0xa3d)](_0x1dd5a1);
                    for (var _0x57387c = 0x0; _0x57387c < _0x3ae8fa; _0x57387c++, _0x3c3aa6++) {
                        var _0x5134a9 = _0x2c6b24[_0x57387c], _0x3cf187 = _0x5134a9[_0x1fe128(0x3cc)][_0x1fe128(0x59e)], _0x2d0287 = _0x5134a9[_0x1fe128(0x92d)], _0x4ab52b = _0x1d2f7d * _0x3c3aa6;
                        _0x3f70c5[_0x1fe128(0x1ee)](_0x5134a9[_0x1fe128(0x462)], _0x5134a9[_0x1fe128(0x92c)], _0x2d0287), _0x3602ee[_0x4ab52b] = _0x2d0287['x'], _0x3602ee[_0x4ab52b + 0x1] = _0x2d0287['y'], _0x3602ee[_0x4ab52b + 0x2] = _0x2d0287['z'], _0x3602ee[_0x4ab52b + 0x3] = _0x5134a9['range'], _0x3602ee[_0x4ab52b + 0x4] = _0x3cf187['x'], _0x3602ee[_0x4ab52b + 0x5] = _0x3cf187['y'], _0x3602ee[_0x4ab52b + 0x6] = _0x3cf187['z'];
                    }
                    _0x1f01c9[_0x1fe128(0x62c)](_0x2de530[_0x1fe128(0xbd2)]);
                } else
                    _0x1f01c9[_0x1fe128(0x493)](_0x2de530[_0x1fe128(0xbd2)]);
                var _0x4f1a30 = this['_spotLights'][_0x1fe128(0x438)];
                if (_0x4f1a30 > 0x0) {
                    var _0x35a41a = this[_0x1fe128(0x861)][_0x1fe128(0x860)], _0xd38174 = this['_spotLights'][_0x1fe128(0xa3c)]();
                    this[_0x1fe128(0x9c2)] = _0x35a41a[_0xd38174], this[_0x1fe128(0x861)][_0x1fe128(0xa3d)](_0xd38174);
                    for (var _0x57387c = 0x0; _0x57387c < _0x4f1a30; _0x57387c++, _0x3c3aa6++) {
                        var _0x310edd = _0x35a41a[_0x57387c], _0x3d2b10 = _0x310edd[_0x1fe128(0xc1a)], _0x3cf187 = _0x310edd['transform'][_0x1fe128(0x59e)], _0x2d0287 = _0x310edd[_0x1fe128(0x92d)], _0x4ab52b = _0x1d2f7d * _0x3c3aa6;
                        _0x3f70c5[_0x1fe128(0x1ee)](_0x310edd['color'], _0x310edd['_intensity'], _0x2d0287), _0x310edd[_0x1fe128(0x3cc)][_0x1fe128(0x3ce)]['getForward'](_0x3d2b10), _0x3f70c5[_0x1fe128(0x1f2)](_0x3d2b10, _0x3d2b10), _0x3602ee[_0x4ab52b] = _0x2d0287['x'], _0x3602ee[_0x4ab52b + 0x1] = _0x2d0287['y'], _0x3602ee[_0x4ab52b + 0x2] = _0x2d0287['z'], _0x3602ee[_0x4ab52b + 0x3] = _0x310edd[_0x1fe128(0x851)], _0x3602ee[_0x4ab52b + 0x4] = _0x3cf187['x'], _0x3602ee[_0x4ab52b + 0x5] = _0x3cf187['y'], _0x3602ee[_0x4ab52b + 0x6] = _0x3cf187['z'], _0x3602ee[_0x4ab52b + 0x7] = _0x310edd['spotAngle'] * Math['PI'] / 0xb4, _0x3602ee[_0x4ab52b + 0x8] = _0x3d2b10['x'], _0x3602ee[_0x4ab52b + 0x9] = _0x3d2b10['y'], _0x3602ee[_0x4ab52b + 0xa] = _0x3d2b10['z'];
                    }
                    _0x1f01c9[_0x1fe128(0x62c)](_0x2de530['SHADERDEFINE_SPOTLIGHT']);
                } else
                    _0x1f01c9['removeDefine'](_0x2de530[_0x1fe128(0xbd4)]);
                _0x3c3aa6 > 0x0 && _0xcad7ca[_0x1fe128(0x865)](0x0, 0x0, _0x4681bd, _0x3c3aa6, _0x3602ee, 0x0), _0x1f01c9['setTexture'](_0x55cc88['LIGHTBUFFER'], _0xcad7ca), _0x1f01c9['setInt'](_0x55cc88['DIRECTIONLIGHTCOUNT'], this[_0x1fe128(0x85e)][_0x1fe128(0x438)]), _0x1f01c9[_0x1fe128(0x4a2)](_0x55cc88[_0x1fe128(0xc1d)], _0x43fad1[_0x1fe128(0x2f4)]['_clusterTexture']);
            } else {
                if (this['_directionLights'][_0x1fe128(0x438)] > 0x0) {
                    var _0x5a1bcf = this['_directionLights'][_0x1fe128(0x860)][0x0];
                    this[_0x1fe128(0x9bd)] = _0x5a1bcf, _0x3f70c5['scale'](_0x5a1bcf[_0x1fe128(0x462)], _0x5a1bcf[_0x1fe128(0x92c)], _0x5a1bcf['_intensityColor']), _0x5a1bcf[_0x1fe128(0x3cc)]['worldMatrix']['getForward'](_0x5a1bcf['_direction']), _0x3f70c5[_0x1fe128(0x1f2)](_0x5a1bcf[_0x1fe128(0xc1a)], _0x5a1bcf['_direction']), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc1e)], _0x5a1bcf[_0x1fe128(0x92d)]), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc1f)], _0x5a1bcf[_0x1fe128(0xc1a)]), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc1b)], _0x5a1bcf[_0x1fe128(0x92d)]), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88['SUNLIGHTDIRECTION'], _0x5a1bcf['_direction']), _0x1f01c9['addDefine'](_0x2de530['SHADERDEFINE_DIRECTIONLIGHT']);
                } else
                    _0x1f01c9['removeDefine'](_0x2de530[_0x1fe128(0xbd0)]);
                if (this[_0x1fe128(0x85f)][_0x1fe128(0x438)] > 0x0) {
                    var _0x5134a9 = this[_0x1fe128(0x85f)][_0x1fe128(0x860)][0x0];
                    this[_0x1fe128(0xc1c)] = _0x5134a9, _0x3f70c5['scale'](_0x5134a9[_0x1fe128(0x462)], _0x5134a9[_0x1fe128(0x92c)], _0x5134a9[_0x1fe128(0x92d)]), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc20)], _0x5134a9[_0x1fe128(0x92d)]), _0x1f01c9['setVector3'](_0x55cc88[_0x1fe128(0xc21)], _0x5134a9['transform'][_0x1fe128(0x59e)]), _0x1f01c9['setNumber'](_0x55cc88[_0x1fe128(0xc22)], _0x5134a9['range']), _0x1f01c9[_0x1fe128(0x62c)](_0x2de530[_0x1fe128(0xbd2)]);
                } else
                    _0x1f01c9[_0x1fe128(0x493)](_0x2de530[_0x1fe128(0xbd2)]);
                if (this[_0x1fe128(0x861)][_0x1fe128(0x438)] > 0x0) {
                    var _0x2553d0 = this['_spotLights']['_elements'][0x0];
                    this[_0x1fe128(0x9c2)] = _0x2553d0, _0x3f70c5[_0x1fe128(0x1ee)](_0x2553d0['color'], _0x2553d0[_0x1fe128(0x92c)], _0x2553d0['_intensityColor']), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88['SPOTLIGHTCOLOR'], _0x2553d0['_intensityColor']), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc23)], _0x2553d0[_0x1fe128(0x3cc)]['position']), _0x2553d0['transform'][_0x1fe128(0x3ce)]['getForward'](_0x2553d0[_0x1fe128(0xc1a)]), _0x3f70c5[_0x1fe128(0x1f2)](_0x2553d0[_0x1fe128(0xc1a)], _0x2553d0[_0x1fe128(0xc1a)]), _0x1f01c9[_0x1fe128(0x4b1)](_0x55cc88[_0x1fe128(0xc24)], _0x2553d0[_0x1fe128(0xc1a)]), _0x1f01c9[_0x1fe128(0x4af)](_0x55cc88[_0x1fe128(0xc25)], _0x2553d0[_0x1fe128(0x851)]), _0x1f01c9['setNumber'](_0x55cc88[_0x1fe128(0xc26)], _0x2553d0[_0x1fe128(0x854)] * Math['PI'] / 0xb4), _0x1f01c9[_0x1fe128(0x62c)](_0x2de530[_0x1fe128(0xbd4)]);
                } else
                    _0x1f01c9[_0x1fe128(0x493)](_0x2de530['SHADERDEFINE_SPOTLIGHT']);
            }
        }
        [_0x5659be(0xc27)](_0x4c7546) {
            var _0xcb6bb7 = _0x5659be;
            if (_0x4c7546[_0xcb6bb7(0xc14)] != -0x1)
                return;
            var _0x335374 = this[_0xcb6bb7(0xbbf)];
            _0x4c7546['_indexInPool'] = _0x335374[_0xcb6bb7(0x1ff)], _0x335374[_0xcb6bb7(0x298)](_0x4c7546);
        }
        ['_removeScript'](_0x49ddd7) {
            var _0x5914b5 = _0x5659be;
            if (_0x49ddd7['_indexInPool'] == -0x1)
                return;
            this[_0x5914b5(0xbbf)][_0x49ddd7[_0x5914b5(0xc14)]] = null, _0x49ddd7[_0x5914b5(0xc14)] = -0x1, this[_0x5914b5(0xc13)] = !![];
        }
        ['_preRenderScript']() {
            var _0x482bad = _0x5659be, _0x5da14a = this[_0x482bad(0xbbf)];
            for (var _0x4ebdbd = 0x0, _0x4fd75c = _0x5da14a[_0x482bad(0x1ff)]; _0x4ebdbd < _0x4fd75c; _0x4ebdbd++) {
                var _0x13aff4 = _0x5da14a[_0x4ebdbd];
                _0x13aff4 && _0x13aff4[_0x482bad(0x37d)] && _0x13aff4[_0x482bad(0xc28)]();
            }
        }
        [_0x5659be(0x9d1)]() {
            var _0x177042 = _0x5659be, _0x3f2633 = this[_0x177042(0xbbf)];
            for (var _0x2cb2b6 = 0x0, _0x169f2c = _0x3f2633[_0x177042(0x1ff)]; _0x2cb2b6 < _0x169f2c; _0x2cb2b6++) {
                var _0x5a5238 = _0x3f2633[_0x2cb2b6];
                _0x5a5238 && _0x5a5238[_0x177042(0x37d)] && _0x5a5238[_0x177042(0xc29)]();
            }
        }
        [_0x5659be(0x8f8)](_0x29f17f) {
            var _0x3f0ff1 = _0x5659be, _0x6782af = this['_binarySearchIndexInCameraPool'](_0x29f17f), _0x1781c6 = _0x29f17f['_renderingOrder'], _0x50eda9 = this[_0x3f0ff1(0xa09)]['length'];
            while (_0x6782af < _0x50eda9 && this[_0x3f0ff1(0xa09)][_0x6782af][_0x3f0ff1(0xc0c)] <= _0x1781c6)
                _0x6782af++;
            this[_0x3f0ff1(0xa09)][_0x3f0ff1(0x32c)](_0x6782af, 0x0, _0x29f17f);
        }
        [_0x5659be(0x8f9)](_0x3f09e6) {
            var _0x58700a = _0x5659be;
            this[_0x58700a(0xa09)][_0x58700a(0x32c)](this['_cameraPool'][_0x58700a(0x384)](_0x3f09e6), 0x1);
        }
        [_0x5659be(0x9c8)](_0x55a0d8, _0x4b8ece, _0x2f5a64, _0x58f36f) {
            var _0x1b202a = _0x5659be, _0x186552 = _0x4b5e1d['_cameraCullInfo'];
            _0x186552[_0x1b202a(0x59e)] = _0x4b8ece[_0x1b202a(0x3ca)][_0x1b202a(0x59e)], _0x186552[_0x1b202a(0x811)] = _0x4b8ece[_0x1b202a(0x811)], _0x186552[_0x1b202a(0x810)] = _0x4b8ece[_0x1b202a(0x810)], _0x186552[_0x1b202a(0x831)] = _0x4b8ece[_0x1b202a(0x831)], _0x4b5e1d[_0x1b202a(0x817)](_0x186552, this, _0x55a0d8, _0x2f5a64, _0x58f36f, ![]);
        }
        [_0x5659be(0x9cb)](_0x1f90c2, _0x132cda) {
            var _0x3563ca = _0x5659be, _0x4c6295 = _0x132cda[_0x3563ca(0x561)], _0x2b0f05 = _0x132cda[_0x3563ca(0x645)], _0x9728f9 = _0x2b0f05[_0x3563ca(0x9b2)](), _0x18b62c, _0x46c5ce, _0x53b695 = _0x4c6295[_0x3563ca(0x300)], _0x3d42c5 = _0x4c6295['height'];
            _0x2b0f05['_needInternalRenderTexture']() ? (_0x18b62c = 0x0, _0x46c5ce = 0x0) : (_0x18b62c = _0x4c6295['x'], _0x46c5ce = _0x2b0f05[_0x3563ca(0x658)]() - _0x4c6295['y'] - _0x3d42c5);
            _0x1f90c2['viewport'](_0x18b62c, _0x46c5ce, _0x53b695, _0x3d42c5);
            var _0x41e36b, _0x4293db = _0x2b0f05['clearFlag'];
            if (_0x4293db === _0x71dec4[_0x3563ca(0x988)]['Sky'] && !(_0x2b0f05['skyRenderer']['_isAvailable']() || this[_0x3563ca(0x8e1)]['_isAvailable']()))
                _0x4293db = _0x71dec4['CameraClearFlags'][_0x3563ca(0x984)];
            switch (_0x4293db) {
            case _0x71dec4[_0x3563ca(0x988)][_0x3563ca(0x984)]:
                var _0x3411b5 = _0x2b0f05[_0x3563ca(0x5ed)];
                _0x1f90c2[_0x3563ca(0x650)](_0x1f90c2[_0x3563ca(0x97c)]), _0x1f90c2['scissor'](_0x18b62c, _0x46c5ce, _0x53b695, _0x3d42c5);
                if (_0x3411b5)
                    _0x1f90c2['clearColor'](_0x3411b5['x'], _0x3411b5['y'], _0x3411b5['z'], _0x3411b5['w']);
                else
                    _0x1f90c2[_0x3563ca(0x5ed)](0x0, 0x0, 0x0, 0x0);
                if (_0x9728f9) {
                    _0x41e36b = _0x1f90c2['COLOR_BUFFER_BIT'];
                    switch (_0x9728f9[_0x3563ca(0x3ec)]) {
                    case _0x218b83[_0x3563ca(0x3db)][_0x3563ca(0x3dc)]:
                        _0x41e36b |= _0x1f90c2[_0x3563ca(0x5ee)];
                        break;
                    case _0x218b83[_0x3563ca(0x3db)][_0x3563ca(0x418)]:
                        _0x41e36b |= _0x1f90c2[_0x3563ca(0xc2a)];
                        break;
                    case _0x218b83[_0x3563ca(0x3db)][_0x3563ca(0x416)]:
                        _0x41e36b |= _0x1f90c2['DEPTH_BUFFER_BIT'], _0x41e36b |= _0x1f90c2['STENCIL_BUFFER_BIT'];
                        break;
                    }
                } else
                    _0x41e36b = _0x1f90c2[_0x3563ca(0x42a)] | _0x1f90c2['DEPTH_BUFFER_BIT'];
                _0x218b83[_0x3563ca(0x3fe)][_0x3563ca(0x7eb)](_0x1f90c2, !![]), _0x1f90c2[_0x3563ca(0x496)](_0x41e36b), _0x1f90c2['disable'](_0x1f90c2[_0x3563ca(0x97c)]);
                break;
            case _0x71dec4[_0x3563ca(0x988)][_0x3563ca(0x985)]:
            case _0x71dec4['CameraClearFlags'][_0x3563ca(0x986)]:
                _0x1f90c2[_0x3563ca(0x650)](_0x1f90c2[_0x3563ca(0x97c)]), _0x1f90c2['scissor'](_0x18b62c, _0x46c5ce, _0x53b695, _0x3d42c5);
                if (_0x9728f9)
                    switch (_0x9728f9['depthStencilFormat']) {
                    case _0x218b83[_0x3563ca(0x3db)][_0x3563ca(0x3dc)]:
                        _0x41e36b = _0x1f90c2[_0x3563ca(0x5ee)];
                        break;
                    case _0x218b83[_0x3563ca(0x3db)][_0x3563ca(0x418)]:
                        _0x41e36b = _0x1f90c2[_0x3563ca(0xc2a)];
                        break;
                    case _0x218b83[_0x3563ca(0x3db)]['DEPTHSTENCIL_24_8']:
                        _0x41e36b = _0x1f90c2[_0x3563ca(0x5ee)] | _0x1f90c2[_0x3563ca(0xc2a)];
                        break;
                    }
                else
                    _0x41e36b = _0x1f90c2['DEPTH_BUFFER_BIT'];
                _0x218b83['WebGLContext']['setDepthMask'](_0x1f90c2, !![]), _0x1f90c2[_0x3563ca(0x496)](_0x41e36b), _0x1f90c2['disable'](_0x1f90c2[_0x3563ca(0x97c)]);
                break;
            case _0x71dec4['CameraClearFlags']['Nothing']:
                break;
            default:
                throw new Error(_0x3563ca(0xc2b));
            }
        }
        [_0x5659be(0x9cd)](_0x40d450, _0x3c5b20) {
            var _0x505f5c = _0x5659be, _0x533fc2 = _0x40d450[_0x505f5c(0x645)];
            switch (_0x3c5b20) {
            case _0x55cc88[_0x505f5c(0x9ce)]:
                this[_0x505f5c(0x822)]['_render'](_0x40d450);
                break;
            case _0x55cc88[_0x505f5c(0xc2c)]:
                if (_0x533fc2[_0x505f5c(0x998)] === _0x71dec4[_0x505f5c(0x988)][_0x505f5c(0x985)]) {
                    if (_0x533fc2[_0x505f5c(0x8e8)][_0x505f5c(0xc2d)]())
                        _0x533fc2[_0x505f5c(0x8e8)][_0x505f5c(0x5e6)](_0x40d450);
                    else {
                        if (this[_0x505f5c(0x8e1)][_0x505f5c(0xc2d)]())
                            this[_0x505f5c(0x8e1)]['_render'](_0x40d450);
                    }
                }
                break;
            case _0x55cc88['SCENERENDERFLAG_RENDERTRANSPARENT']:
                this['_transparentQueue'][_0x505f5c(0x5e6)](_0x40d450);
                if (_0x4b5e1d[_0x505f5c(0x23e)]) {
                    var _0x59b23 = this[_0x505f5c(0x81e)][_0x505f5c(0x5e6)]['_renderElements'];
                    for (var _0x42b693 = 0x0, _0x2f9654 = _0x59b23[_0x505f5c(0x1ff)]; _0x42b693 < _0x2f9654; _0x42b693++) {
                        _0x59b23[_0x42b693]['_update'](this, _0x40d450, null, null), _0x59b23[_0x42b693][_0x505f5c(0x5e6)](_0x40d450);
                    }
                }
                break;
            }
        }
        [_0x5659be(0x318)](_0x276b74, _0x5e0e17) {
            var _0x3b9546 = _0x5659be, _0x2179eb = _0x276b74[_0x3b9546(0xb2b)];
            if (_0x2179eb) {
                var _0x13c9b7 = _0x2179eb['length'], _0x28a7f6 = new Array(_0x13c9b7);
                for (var _0xad3fff = 0x0; _0xad3fff < _0x13c9b7; _0xad3fff++) {
                    var _0x157ec0 = new _0x5990de(), _0x1c5317 = _0x2179eb[_0xad3fff];
                    if (_0x1c5317['path'])
                        _0x157ec0[_0x3b9546(0xb2c)] = _0x218b83[_0x3b9546(0x3b1)][_0x3b9546(0x692)](_0x1c5317[_0x3b9546(0x691)]);
                    else {
                        _0x157ec0['lightmapColor'] = _0x218b83[_0x3b9546(0x3b1)][_0x3b9546(0x692)](_0x1c5317[_0x3b9546(0x462)][_0x3b9546(0x691)]);
                        if (_0x1c5317[_0x3b9546(0x87e)])
                            _0x157ec0[_0x3b9546(0xb2d)] = _0x218b83[_0x3b9546(0x3b1)][_0x3b9546(0x692)](_0x1c5317['direction'][_0x3b9546(0x691)]);
                    }
                    _0x28a7f6[_0xad3fff] = _0x157ec0;
                }
                this[_0x3b9546(0xb2b)] = _0x28a7f6;
            }
            var _0x6e3612 = _0x276b74[_0x3b9546(0xbca)];
            if (_0x6e3612) {
                var _0x4b2134 = this[_0x3b9546(0xbca)];
                _0x4b2134[_0x3b9546(0x1fb)](_0x6e3612), this['ambientColor'] = _0x4b2134;
            }
            var _0x545c62 = _0x276b74[_0x3b9546(0xc2e)];
            if (_0x545c62) {
                this[_0x3b9546(0x8e1)]['material'] = _0x218b83[_0x3b9546(0x3b1)][_0x3b9546(0x692)](_0x545c62['material'][_0x3b9546(0x691)]);
                switch (_0x545c62[_0x3b9546(0x8d7)]) {
                case _0x3b9546(0xc2f):
                    this[_0x3b9546(0x8e1)][_0x3b9546(0x8d7)] = _0x506034[_0x3b9546(0x2f4)];
                    break;
                case 'SkyDome':
                    this['_skyRenderer']['mesh'] = _0x2d69f9[_0x3b9546(0x2f4)];
                    break;
                default:
                    this[_0x3b9546(0x8e8)][_0x3b9546(0x8d7)] = _0x506034[_0x3b9546(0x2f4)];
                }
            }
            this[_0x3b9546(0xbc7)] = _0x276b74[_0x3b9546(0xbc7)], this[_0x3b9546(0xbe3)] = _0x276b74[_0x3b9546(0xbe3)], this[_0x3b9546(0xbc8)] = _0x276b74['fogRange'];
            var _0x9ca9f2 = _0x276b74[_0x3b9546(0xbc9)];
            if (_0x9ca9f2) {
                var _0xe2c121 = this[_0x3b9546(0xbc9)];
                _0xe2c121[_0x3b9546(0x1fb)](_0x9ca9f2), this[_0x3b9546(0xbc9)] = _0xe2c121;
            }
            var _0x5da204 = _0x276b74[_0x3b9546(0xbe9)];
            if (_0x5da204) {
                var _0x16183e = this[_0x3b9546(0xbe9)];
                for (var _0xad3fff = 0x0; _0xad3fff < 0x3; _0xad3fff++) {
                    var _0x12201f = _0xad3fff * 0x9;
                    _0x16183e['setCoefficients'](_0xad3fff, _0x5da204[_0x12201f], _0x5da204[_0x12201f + 0x1], _0x5da204[_0x12201f + 0x2], _0x5da204[_0x12201f + 0x3], _0x5da204[_0x12201f + 0x4], _0x5da204[_0x12201f + 0x5], _0x5da204[_0x12201f + 0x6], _0x5da204[_0x12201f + 0x7], _0x5da204[_0x12201f + 0x8]);
                }
                this[_0x3b9546(0xbe9)] = _0x16183e;
            }
            var _0x145421 = _0x276b74[_0x3b9546(0xb01)];
            _0x145421 != undefined && (this[_0x3b9546(0xb01)] = _0x218b83[_0x3b9546(0x3b1)]['getRes'](_0x145421));
            var _0x28f4bb = _0x276b74[_0x3b9546(0xbef)];
            _0x28f4bb != undefined && (this['reflectionDecodingFormat'] = _0x28f4bb);
            var _0x47f714 = _0x276b74['ambientMode'];
            _0x47f714 != undefined && (this[_0x3b9546(0xbe6)] = _0x47f714);
            var _0x3d5c44 = _0x276b74[_0x3b9546(0xbea)];
            _0x3d5c44 != undefined && (this[_0x3b9546(0xbea)] = _0x3d5c44);
            var _0x6edc90 = _0x276b74[_0x3b9546(0xbf1)];
            _0x6edc90 != undefined && (this[_0x3b9546(0xbf1)] = _0x6edc90);
        }
        [_0x5659be(0xa7d)](_0x4560bc) {
            var _0x316b7f = _0x5659be;
            this[_0x316b7f(0x823)] && _0x4560bc['_supportOctree'] ? this[_0x316b7f(0x823)][_0x316b7f(0x201)](_0x4560bc) : this[_0x316b7f(0x819)][_0x316b7f(0x201)](_0x4560bc), _0x4560bc[_0x316b7f(0xb2f)]();
        }
        [_0x5659be(0xa7c)](_0x235751) {
            var _0x51879f = _0x5659be;
            this['_octree'] && _0x235751['_supportOctree'] ? this[_0x51879f(0x823)][_0x51879f(0x3a9)](_0x235751) : this[_0x51879f(0x819)]['remove'](_0x235751);
        }
        [_0x5659be(0xaa3)](_0x4736b4) {
            var _0x33df29 = _0x5659be;
            if (_0x4736b4 <= 0x9c4)
                return this[_0x33df29(0x822)];
            else
                return this[_0x33df29(0x818)];
        }
        [_0x5659be(0x81a)]() {
            var _0x505193 = _0x5659be;
            this[_0x505193(0x822)][_0x505193(0x496)](), this[_0x505193(0x818)]['clear']();
            var _0x423fb4 = _0x5dca2e[_0x505193(0xacd)];
            for (var _0x3a2dd6 = 0x0, _0x285c77 = _0x423fb4[_0x505193(0x1ff)]; _0x3a2dd6 < _0x285c77; _0x3a2dd6++)
                _0x423fb4[_0x3a2dd6][_0x505193(0x9cb)]();
            var _0x1928e6 = _0x4fa75b[_0x505193(0xacd)];
            for (var _0x3a2dd6 = 0x0, _0x285c77 = _0x1928e6[_0x505193(0x1ff)]; _0x3a2dd6 < _0x285c77; _0x3a2dd6++)
                _0x1928e6[_0x3a2dd6]['_clear']();
        }
        [_0x5659be(0x311)](_0x357fd7 = !![]) {
            var _0x5c24c9 = _0x5659be;
            if (this['destroyed'])
                return;
            super['destroy'](_0x357fd7), this['_skyRenderer'][_0x5c24c9(0x311)](), this[_0x5c24c9(0x8e1)] = null, this[_0x5c24c9(0x85e)] = null, this[_0x5c24c9(0x85f)] = null, this['_spotLights'] = null, this[_0x5c24c9(0x93c)] = null, this[_0x5c24c9(0x4e0)] = null, this[_0x5c24c9(0x819)][_0x5c24c9(0x801)](), this[_0x5c24c9(0x37c)][_0x5c24c9(0x801)](), this[_0x5c24c9(0x819)] = null, this[_0x5c24c9(0x37c)] = null, this['_cameraPool'] = null, this['_octree'] = null, this[_0x5c24c9(0x9fd)] && this['_physicsSimulation'][_0x5c24c9(0xa86)](), this['_reflection'][_0x5c24c9(0x351)](), this[_0x5c24c9(0xbee)] = null;
            var _0xef7fac = this[_0x5c24c9(0xbb6)];
            if (_0xef7fac)
                for (var _0x35eb2d = 0x0, _0x4d4ccd = _0xef7fac[_0x5c24c9(0x1ff)]; _0x35eb2d < _0x4d4ccd; _0x35eb2d++) {
                    var _0x25cc4e = _0xef7fac[_0x35eb2d];
                    _0x25cc4e[_0x5c24c9(0xb2c)] && _0x25cc4e[_0x5c24c9(0xb2c)][_0x5c24c9(0x351)](), _0x25cc4e[_0x5c24c9(0xb2d)] && _0x25cc4e[_0x5c24c9(0xb2d)][_0x5c24c9(0x351)]();
                }
            this[_0x5c24c9(0xbb6)] = null, this[_0x5c24c9(0xb08)][_0x5c24c9(0x311)](), _0x218b83[_0x5c24c9(0x3b1)][_0x5c24c9(0x5d4)](this[_0x5c24c9(0xbe0)]);
        }
        [_0x5659be(0x506)](_0x14fd9a) {
            var _0x2f69e9 = _0x5659be;
            _0x14fd9a['_curSubmit'] = _0x218b83[_0x2f69e9(0xc30)][_0x2f69e9(0xc31)], this['_children'][_0x2f69e9(0x1ff)] > 0x0 && _0x14fd9a[_0x2f69e9(0xc32)](this);
        }
        [_0x5659be(0xc33)]() {
            var _0x497068 = _0x5659be;
            _0x218b83[_0x497068(0x9b6)][_0x497068(0x9b7)](_0x218b83[_0x497068(0x9b6)]['PERFORMANCE_LAYA_3D']), this[_0x497068(0xc18)]();
            var _0x2bb806, _0x48c246, _0x5b7181;
            _0x218b83[_0x497068(0x9b6)][_0x497068(0x9b7)](_0x218b83[_0x497068(0x9b6)][_0x497068(0xc34)]);
            for (_0x2bb806 = 0x0, _0x48c246 = this[_0x497068(0xa09)][_0x497068(0x1ff)], _0x5b7181 = _0x48c246 - 0x1; _0x2bb806 < _0x48c246; _0x2bb806++) {
                if (_0x218b83[_0x497068(0x308)][_0x497068(0x653)])
                    _0x552b02['setRuntimeValueMode'](_0x2bb806 == _0x5b7181 ? !![] : ![]);
                var _0x745647 = this[_0x497068(0xa09)][_0x2bb806];
                _0x745647['enableRender'] && _0x745647[_0x497068(0x506)]();
            }
            return _0x218b83[_0x497068(0x9b6)][_0x497068(0x9ba)](_0x218b83[_0x497068(0x9b6)][_0x497068(0xc34)]), _0x218b83[_0x497068(0xc35)][_0x497068(0xc36)](), _0x218b83[_0x497068(0x9b6)][_0x497068(0x9ba)](_0x218b83[_0x497068(0x9b6)]['PERFORMANCE_LAYA_3D']), 0x1;
        }
        [_0x5659be(0xc37)]() {
            return 0x0;
        }
        [_0x5659be(0xc38)]() {
        }
        ['reUse'](_0x431f32, _0x51e77e) {
            return 0x0;
        }
        [_0x5659be(0xc39)](_0x35856e, _0x3e8e24, _0x288a1a) {
            var _0x34eb3d = _0x5659be, _0x2f4a2b = _0x84b6d6[_0x34eb3d(0x526)](_0x35856e);
            switch (_0x3e8e24) {
            case _0x71dec4[_0x34eb3d(0x570)]['Int']:
                this[_0x34eb3d(0x4e0)]['setInt'](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4['ShaderDataType'][_0x34eb3d(0x56d)]:
                this['_shaderValues']['setNumber'](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4[_0x34eb3d(0x570)][_0x34eb3d(0x56c)]:
                this[_0x34eb3d(0x4e0)][_0x34eb3d(0x497)](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4[_0x34eb3d(0x570)][_0x34eb3d(0x222)]:
                this['_shaderValues'][_0x34eb3d(0x4a0)](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4[_0x34eb3d(0x570)][_0x34eb3d(0x56e)]:
                this[_0x34eb3d(0x4e0)][_0x34eb3d(0x573)](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4['ShaderDataType']['Texture']:
                this[_0x34eb3d(0x4e0)][_0x34eb3d(0x4a2)](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4['ShaderDataType'][_0x34eb3d(0x45f)]:
                this[_0x34eb3d(0x4e0)]['setVector'](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4['ShaderDataType'][_0x34eb3d(0x45b)]:
                this['_shaderValues']['setVector2'](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4[_0x34eb3d(0x570)][_0x34eb3d(0x45d)]:
                this[_0x34eb3d(0x4e0)][_0x34eb3d(0x4b1)](_0x2f4a2b, _0x288a1a);
                break;
            case _0x71dec4['ShaderDataType'][_0x34eb3d(0x43e)]:
                this[_0x34eb3d(0x4e0)][_0x34eb3d(0x574)](_0x2f4a2b, _0x288a1a);
                break;
            }
        }
        get [_0x5659be(0xc3a)]() {
            var _0x7cd33b = _0x5659be;
            return this[_0x7cd33b(0xbee)];
        }
        set [_0x5659be(0xc3a)](_0x30e267) {
            var _0x5079b7 = _0x5659be;
            this[_0x5079b7(0xbee)] != _0x30e267 && (_0x30e267[_0x5079b7(0x354)](), this[_0x5079b7(0xb08)]['sceneReflectionProbe'] = _0x30e267, this['_reflection'] = _0x30e267);
        }
        get [_0x5659be(0xb20)]() {
            var _0x1ae8ac = _0x5659be;
            return this[_0x1ae8ac(0xb21)];
        }
        set [_0x5659be(0xb20)](_0x7b7ab2) {
            var _0x28cf67 = _0x5659be;
            this[_0x28cf67(0xb21)] = _0x7b7ab2;
        }
        ['setlightmaps'](_0x2b7307) {
            var _0x133f5f = _0x5659be, _0x1ceb16 = this[_0x133f5f(0xbb6)];
            for (var _0x3843b7 = 0x0, _0x23ed77 = _0x1ceb16[_0x133f5f(0x1ff)]; _0x3843b7 < _0x23ed77; _0x3843b7++)
                _0x1ceb16[_0x3843b7]['lightmapColor']['_removeReference']();
            if (_0x2b7307) {
                var _0x58e359 = _0x2b7307[_0x133f5f(0x1ff)];
                _0x1ceb16[_0x133f5f(0x1ff)] = _0x58e359;
                for (_0x3843b7 = 0x0; _0x3843b7 < _0x58e359; _0x3843b7++) {
                    var _0x4a78e3 = _0x2b7307[_0x3843b7];
                    _0x4a78e3['_addReference'](), _0x1ceb16[_0x3843b7] || (_0x1ceb16[_0x3843b7] = new _0x5990de()), _0x1ceb16[_0x3843b7]['lightmapColor'] = _0x4a78e3;
                }
            } else
                throw new Error(_0x133f5f(0xc3b));
        }
        ['getlightmaps']() {
            var _0x2bb82f = _0x5659be, _0x482734 = new Array(this['_lightmaps'][_0x2bb82f(0x1ff)]);
            for (var _0x4d0a69 = 0x0; _0x4d0a69 < this['_lightmaps'][_0x2bb82f(0x1ff)]; _0x4d0a69++) {
                _0x482734[_0x4d0a69] = this[_0x2bb82f(0xbb6)][_0x4d0a69][_0x2bb82f(0xb2c)];
            }
            return _0x482734;
        }
    }
    _0x55cc88[_0x5659be(0x9bf)] = new _0x2e5076(), _0x55cc88[_0x5659be(0x5be)] = 'HIERARCHY', _0x55cc88[_0x5659be(0x254)] = ![], _0x55cc88[_0x5659be(0x256)] = 0x40, _0x55cc88[_0x5659be(0x255)] = new _0x3f70c5(0x0, 0x0, 0x0), _0x55cc88[_0x5659be(0x23c)] = 0x2, _0x55cc88['octreeLooseness'] = 1.25, _0x55cc88[_0x5659be(0xc3c)] = 0x0, _0x55cc88[_0x5659be(0xc3d)] = 0x1, _0x55cc88['SCENERENDERFLAG_RENDERQPAQUE'] = 0x0, _0x55cc88['SCENERENDERFLAG_SKYBOX'] = 0x1, _0x55cc88[_0x5659be(0x9d0)] = 0x2, _0x55cc88[_0x5659be(0xbe2)] = _0x84b6d6[_0x5659be(0x526)]('u_FogColor'), _0x55cc88[_0x5659be(0xbe4)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xc3e)), _0x55cc88[_0x5659be(0xbe5)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc3f)), _0x55cc88[_0x5659be(0xc40)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc41)), _0x55cc88[_0x5659be(0xc42)] = _0x84b6d6[_0x5659be(0x526)]('u_LightBuffer'), _0x55cc88[_0x5659be(0xc1d)] = _0x84b6d6[_0x5659be(0x526)]('u_LightClusterBuffer'), _0x55cc88[_0x5659be(0xc43)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xc44)), _0x55cc88[_0x5659be(0xc1b)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc45)), _0x55cc88[_0x5659be(0xbf5)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc46)), _0x55cc88[_0x5659be(0xbf6)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc47)), _0x55cc88['AMBIENTSHAB'] = _0x84b6d6[_0x5659be(0x526)]('u_AmbientSHAb'), _0x55cc88['AMBIENTSHBR'] = _0x84b6d6[_0x5659be(0x526)]('u_AmbientSHBr'), _0x55cc88['AMBIENTSHBG'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc48)), _0x55cc88[_0x5659be(0xbf9)] = _0x84b6d6[_0x5659be(0x526)]('u_AmbientSHBb'), _0x55cc88['AMBIENTSHC'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc49)), _0x55cc88[_0x5659be(0xc1f)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc4a)), _0x55cc88['LIGHTDIRCOLOR'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xc4b)), _0x55cc88[_0x5659be(0xc21)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc4c)), _0x55cc88[_0x5659be(0xc22)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc4d)), _0x55cc88[_0x5659be(0xc4e)] = _0x84b6d6[_0x5659be(0x526)]('u_PointLight.attenuation'), _0x55cc88[_0x5659be(0xc20)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xc4f)), _0x55cc88[_0x5659be(0xc23)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc50)), _0x55cc88[_0x5659be(0xc24)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc51)), _0x55cc88[_0x5659be(0xc26)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xc52)), _0x55cc88[_0x5659be(0xc25)] = _0x84b6d6[_0x5659be(0x526)]('u_SpotLight.range'), _0x55cc88['SPOTLIGHTCOLOR'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc53)), _0x55cc88[_0x5659be(0xbe8)] = _0x84b6d6['propertyNameToID']('u_AmbientColor'), _0x55cc88[_0x5659be(0xbfc)] = _0x84b6d6['propertyNameToID']('u_Time'), _0x55cc88['_configDefineValues'] = new _0x23f873();
    class _0x1688c7 extends _0x218b83[_0x5659be(0x52a)] {
        constructor(_0x2e014a, _0x4fa374, _0x5f1042, _0x216f49) {
            var _0xeaa642 = _0x5659be;
            super(_0x4fa374, _0x5f1042, null), this['_cacheSharders'] = {}, this['_cacheShaderHierarchy'] = 0x1, this['_renderState'] = new _0x2aa393(), this[_0xeaa642(0xc54)] = new _0x23f873(), this[_0xeaa642(0xc55)] = {}, this[_0xeaa642(0x3d3)] = _0x2e014a, this[_0xeaa642(0x7b3)] = _0x216f49;
            for (var _0x315434 in this[_0xeaa642(0xc56)])
                this[_0xeaa642(0xc54)]['add'](_0x84b6d6[_0xeaa642(0x510)](_0x315434));
        }
        get [_0x5659be(0x7ea)]() {
            var _0x56c9ae = _0x5659be;
            return this[_0x56c9ae(0xc57)];
        }
        [_0x5659be(0xc58)](_0xc4444c, _0x2ae4eb, _0x529314, _0x3000ff, _0xc3bd88) {
            var _0x1918b8 = _0x5659be, _0x4216a8, _0x4e07db, _0xe70e80, _0x44c260, _0x477b18, _0x1fe0c2, _0x300a2d, _0x1e3a14, _0x3c1062, _0x2e0fc4, _0x1facb1;
            for (_0x3c1062 = _0x529314; _0x3c1062 < _0x2ae4eb['length']; _0x3c1062++) {
                _0xe70e80 = _0x2ae4eb[_0x3c1062];
                if (_0xe70e80[_0x1918b8(0x1ff)] < 0x1)
                    continue;
                _0x1fe0c2 = _0xe70e80[_0x1918b8(0x384)]('//');
                if (_0x1fe0c2 === 0x0)
                    continue;
                if (_0x1fe0c2 >= 0x0)
                    _0xe70e80 = _0xe70e80[_0x1918b8(0x2eb)](0x0, _0x1fe0c2);
                _0x4216a8 = _0x1e3a14 || new _0x218b83[(_0x1918b8(0xc59))](_0x3000ff), _0x1e3a14 = null, _0x4216a8[_0x1918b8(0xc5a)] = _0xe70e80, _0x4216a8[_0x1918b8(0xc5b)] = !![];
                if ((_0x1fe0c2 = _0xe70e80[_0x1918b8(0x384)]('#')) >= 0x0) {
                    _0x44c260 = '#';
                    for (_0x1facb1 = _0x1fe0c2 + 0x1, _0x2e0fc4 = _0xe70e80[_0x1918b8(0x1ff)]; _0x1facb1 < _0x2e0fc4; _0x1facb1++) {
                        var _0x23f718 = _0xe70e80[_0x1918b8(0xc5c)](_0x1facb1);
                        if (_0x23f718 === '\x20' || _0x23f718 === '\x09' || _0x23f718 === '?')
                            break;
                        _0x44c260 += _0x23f718;
                    }
                    _0x4216a8[_0x1918b8(0x2a5)] = _0x44c260;
                    switch (_0x44c260) {
                    case _0x1918b8(0xc5d):
                    case '#ifndef':
                        _0x4216a8[_0x1918b8(0xc5e)] = _0xe70e80, _0x4216a8['noCompile'] = _0xe70e80[_0x1918b8(0xc5f)](/[!&|()=<>]/) != null;
                        !_0x4216a8[_0x1918b8(0xc5b)] ? (_0x300a2d = _0xe70e80[_0x1918b8(0x528)](/^\s*/, '')[_0x1918b8(0x608)](/\s+/), _0x4216a8[_0x1918b8(0xc60)](_0x300a2d[0x1], _0x44c260 === _0x1918b8(0xc5d) ? _0x218b83[_0x1918b8(0x52a)]['IFDEF_YES'] : _0x218b83[_0x1918b8(0x52a)]['IFDEF_ELSE']), _0x4216a8[_0x1918b8(0xc5a)] = '//' + _0x4216a8['text']) : console[_0x1918b8(0x943)](_0x1918b8(0xc61) + _0xe70e80[_0x1918b8(0x2eb)](_0x1fe0c2 + _0x4216a8[_0x1918b8(0x2a5)][_0x1918b8(0x1ff)]) + '}');
                        _0x4216a8['setParent'](_0xc4444c), _0xc4444c = _0x4216a8;
                        if (_0xc3bd88) {
                            _0x300a2d = _0xe70e80[_0x1918b8(0x2eb)](_0x1facb1)[_0x1918b8(0x608)](_0x218b83[_0x1918b8(0x52a)]['_splitToWordExps3']);
                            for (_0x1facb1 = 0x0; _0x1facb1 < _0x300a2d[_0x1918b8(0x1ff)]; _0x1facb1++) {
                                _0xe70e80 = _0x300a2d[_0x1facb1], _0xe70e80[_0x1918b8(0x1ff)] && (_0xc3bd88[_0xe70e80] = !![]);
                            }
                        }
                        continue;
                    case _0x1918b8(0xc62):
                    case '#elif':
                        _0x4216a8['src'] = _0xe70e80, _0x4216a8['noCompile'] = !![];
                        _0x44c260 == _0x1918b8(0xc63) && (_0xc4444c = _0xc4444c['parent'], _0x4e07db = _0xc4444c[_0x1918b8(0xc64)][_0xc4444c[_0x1918b8(0xc64)][_0x1918b8(0x1ff)] - 0x1], _0x4e07db[_0x1918b8(0xc5a)] = _0x4e07db[_0x1918b8(0xc5e)], _0x4e07db['noCompile'] = !![], _0x4e07db[_0x1918b8(0xc65)] = null);
                        _0x4216a8[_0x1918b8(0x66f)](_0xc4444c), _0xc4444c = _0x4216a8;
                        if (_0xc3bd88) {
                            _0x300a2d = _0xe70e80[_0x1918b8(0x2eb)](_0x1facb1)[_0x1918b8(0x608)](_0x218b83[_0x1918b8(0x52a)]['_splitToWordExps3']);
                            for (_0x1facb1 = 0x0; _0x1facb1 < _0x300a2d[_0x1918b8(0x1ff)]; _0x1facb1++) {
                                _0xe70e80 = _0x300a2d[_0x1facb1], _0xe70e80[_0x1918b8(0x1ff)] && _0xe70e80 != _0x1918b8(0xc66) && (_0xc3bd88[_0xe70e80] = !![]);
                            }
                        }
                        continue;
                    case _0x1918b8(0xc67):
                        _0x4216a8['src'] = _0xe70e80, _0xc4444c = _0xc4444c['parent'], _0x4e07db = _0xc4444c[_0x1918b8(0xc64)][_0xc4444c['childs'][_0x1918b8(0x1ff)] - 0x1], _0x4216a8[_0x1918b8(0xc5b)] = _0x4e07db['noCompile'];
                        !_0x4216a8['noCompile'] && (_0x4216a8[_0x1918b8(0xc65)] = _0x4e07db[_0x1918b8(0xc65)], _0x4216a8[_0x1918b8(0xc68)] = _0x4e07db[_0x1918b8(0xc68)] == _0x218b83['ShaderCompile'][_0x1918b8(0xc69)] ? _0x218b83['ShaderCompile']['IFDEF_ELSE'] : _0x218b83[_0x1918b8(0x52a)][_0x1918b8(0xc69)], _0x4216a8[_0x1918b8(0xc5a)] = '//' + _0x4216a8[_0x1918b8(0xc5a)] + '\x20' + _0x4e07db[_0x1918b8(0xc5a)] + '\x20' + _0x4216a8[_0x1918b8(0xc68)]);
                        _0x4216a8[_0x1918b8(0x66f)](_0xc4444c), _0xc4444c = _0x4216a8;
                        continue;
                    case _0x1918b8(0xc6a):
                        _0xc4444c = _0xc4444c[_0x1918b8(0xc6b)], _0x4e07db = _0xc4444c['childs'][_0xc4444c[_0x1918b8(0xc64)][_0x1918b8(0x1ff)] - 0x1], _0x4216a8[_0x1918b8(0xc5b)] = _0x4e07db['noCompile'];
                        !_0x4216a8[_0x1918b8(0xc5b)] && (_0x4216a8[_0x1918b8(0xc5a)] = '//' + _0x4216a8['text']);
                        _0x4216a8[_0x1918b8(0x66f)](_0xc4444c);
                        continue;
                    case _0x1918b8(0xc6c):
                        _0x300a2d = _0x218b83[_0x1918b8(0x52a)][_0x1918b8(0xc6d)](_0xe70e80, null);
                        var _0x1ed539 = _0x218b83[_0x1918b8(0x52a)][_0x1918b8(0xc6e)][_0x300a2d[0x1]];
                        if (!_0x1ed539)
                            throw 'ShaderCompile\x20error\x20no\x20this\x20include\x20file:' + _0x300a2d[0x1];
                        if ((_0x1fe0c2 = _0x300a2d[0x0][_0x1918b8(0x384)]('?')) < 0x0) {
                            _0x4216a8['setParent'](_0xc4444c), _0xe70e80 = _0x1ed539[_0x1918b8(0xc6f)](_0x300a2d[0x2] == 'with' ? _0x300a2d[0x3] : null), this[_0x1918b8(0xc58)](_0x4216a8, _0xe70e80[_0x1918b8(0x608)]('\x0a'), 0x0, _0x3000ff, _0xc3bd88), _0x4216a8[_0x1918b8(0xc5a)] = '';
                            continue;
                        }
                        _0x4216a8[_0x1918b8(0xc60)](_0x300a2d[0x0]['substr'](_0x1fe0c2 + 0x1), _0x218b83['ShaderCompile']['IFDEF_YES']), _0x4216a8[_0x1918b8(0xc5a)] = _0x1ed539[_0x1918b8(0xc6f)](_0x300a2d[0x2] == _0x1918b8(0xc70) ? _0x300a2d[0x3] : null);
                        break;
                    case _0x1918b8(0xc71):
                        _0x300a2d = _0x218b83[_0x1918b8(0x52a)][_0x1918b8(0xc6d)](_0xe70e80, null), _0x477b18 = _0x300a2d[0x1], _0x3000ff[_0x1918b8(0x298)]({
                            'node': _0x4216a8,
                            'file': _0x218b83[_0x1918b8(0x52a)]['includes'][_0x477b18],
                            'ofs': _0x4216a8[_0x1918b8(0xc5a)][_0x1918b8(0x1ff)]
                        });
                        continue;
                    }
                } else {
                    _0x4e07db = _0xc4444c[_0x1918b8(0xc64)][_0xc4444c[_0x1918b8(0xc64)][_0x1918b8(0x1ff)] - 0x1];
                    if (_0x4e07db && !_0x4e07db[_0x1918b8(0x2a5)]) {
                        _0x3000ff['length'] > 0x0 && _0x218b83[_0x1918b8(0x52a)][_0x1918b8(0xc6d)](_0xe70e80, _0x4e07db), _0x1e3a14 = _0x4216a8, _0x4e07db[_0x1918b8(0xc5a)] += '\x0a' + _0xe70e80;
                        continue;
                    }
                    _0x3000ff[_0x1918b8(0x1ff)] > 0x0 && _0x218b83['ShaderCompile']['splitToWords'](_0xe70e80, _0x4216a8);
                }
                _0x4216a8[_0x1918b8(0x66f)](_0xc4444c);
            }
        }
        [_0x5659be(0xc72)](_0xe72b7a, _0x4fbbd4, _0x48e9b2) {
            var _0x9e42ee = _0x5659be, _0x2fad7c = this['_cacheShaderHierarchy'] - 0x1;
            if (_0x4fbbd4 == _0x2fad7c) {
                for (var _0x6e4f92 in _0xe72b7a) {
                    var _0x38dcd3 = _0xe72b7a[_0x6e4f92];
                    for (var _0x43fba2 = 0x0, _0x1a841b = _0x48e9b2 - _0x2fad7c; _0x43fba2 < _0x1a841b; _0x43fba2++) {
                        if (_0x43fba2 == _0x1a841b - 0x1)
                            _0xe72b7a[0x0] = _0x38dcd3;
                        else
                            _0xe72b7a = _0xe72b7a[_0x43fba2 == 0x0 ? _0x6e4f92 : 0x0] = {};
                    }
                }
                this['_cacheShaderHierarchy'] = _0x48e9b2;
            } else {
                for (var _0x6e4f92 in _0xe72b7a)
                    this[_0x9e42ee(0xc72)](_0xe72b7a[_0x6e4f92], ++_0x4fbbd4, _0x48e9b2);
            }
        }
        [_0x5659be(0xc73)](_0xe5249f, _0x2500c0, _0xed80b6) {
            var _0x2fec5a = _0x5659be, _0x17a322 = _0x84b6d6[_0x2fec5a(0xc74)], _0x1ff6cd = this[_0x2fec5a(0x3d3)], _0x43bf7b = _0x1ff6cd[_0x2fec5a(0x3d3)], _0x42707c = _0xe5249f[_0x2fec5a(0x437)];
            _0x84b6d6['_getNamesByDefineData'](_0xe5249f, _0x2500c0), _0xed80b6[_0x2fec5a(0x1ff)] = _0x42707c[_0x2fec5a(0x1ff)];
            for (var _0x148440 = 0x0, _0x2066fa = _0x42707c[_0x2fec5a(0x1ff)]; _0x148440 < _0x2066fa; _0x148440++)
                _0xed80b6[_0x148440] = _0x42707c[_0x148440];
            if (_0x17a322)
                _0x17a322[_0x2fec5a(0x1fa)](_0x43bf7b, _0x43bf7b[_0x2fec5a(0x534)][_0x2fec5a(0x384)](_0x1ff6cd), _0x1ff6cd[_0x2fec5a(0x50f)]['indexOf'](this), _0x2500c0);
            else
                _0x84b6d6[_0x2fec5a(0xc74)] = _0x17a322 = new _0x3c4b71(_0x43bf7b, _0x43bf7b['_subShaders']['indexOf'](_0x1ff6cd), _0x1ff6cd[_0x2fec5a(0x50f)][_0x2fec5a(0x384)](this), _0x2500c0);
            _0x84b6d6[_0x2fec5a(0x547)][_0x2fec5a(0x201)](_0x17a322);
        }
        ['withCompile'](_0x51c9fe) {
            var _0xc271f6 = _0x5659be, _0x5c2b9e = _0x1688c7['_debugDefineString'], _0x361128 = _0x1688c7[_0xc271f6(0xc75)], _0xbbfa27;
            _0x51c9fe[_0xc271f6(0x436)](this[_0xc271f6(0xc54)]);
            _0x84b6d6[_0xc271f6(0x546)] && (_0xbbfa27 = _0x51c9fe[_0xc271f6(0x438)], this[_0xc271f6(0xc73)](_0x51c9fe, _0x5c2b9e, _0x361128));
            _0x51c9fe[_0xc271f6(0x43b)](_0x55cc88['_configDefineValues']);
            var _0x10c0ca = this[_0xc271f6(0xc76)], _0x381b89 = _0x51c9fe[_0xc271f6(0x438)];
            _0x381b89 > this['_cacheShaderHierarchy'] && (this['_resizeCacheShaderMap'](_0x10c0ca, 0x0, _0x381b89), this['_cacheShaderHierarchy'] = _0x381b89);
            var _0x8a5b0f = _0x51c9fe[_0xc271f6(0x437)], _0x2bd92e = _0x51c9fe[_0xc271f6(0x438)] - 0x1, _0x8c20d2 = this['_cacheShaderHierarchy'] - 0x1;
            for (var _0x1f24f5 = 0x0; _0x1f24f5 < _0x8c20d2; _0x1f24f5++) {
                var _0x3b1e43 = _0x2bd92e < _0x1f24f5 ? 0x0 : _0x8a5b0f[_0x1f24f5], _0x455594 = _0x10c0ca[_0x3b1e43];
                _0x455594 || (_0x10c0ca[_0x3b1e43] = _0x455594 = {}), _0x10c0ca = _0x455594;
            }
            var _0x317368 = _0x2bd92e < _0x8c20d2 ? 0x0 : _0x8a5b0f[_0x8c20d2], _0x43aa96 = _0x10c0ca[_0x317368];
            if (_0x43aa96)
                return _0x43aa96;
            var _0x1d67ca = _0x1688c7[_0xc271f6(0xc77)];
            _0x84b6d6[_0xc271f6(0x523)](_0x51c9fe, _0x1d67ca);
            var _0x11ed17 = _0x528624[_0xc271f6(0x243)], _0x2fa22d = _0x11ed17[_0xc271f6(0x250)], _0x5f5696 = {}, _0x42f04f, _0x3d8bb1, _0x46a824 = '';
            _0x218b83['WebGL'][_0xc271f6(0x952)] ? (_0x42f04f = _0xc271f6(0xc78), _0x3d8bb1 = _0xc271f6(0xc79)) : (_0x42f04f = '', _0x3d8bb1 = _0xc271f6(0xc7a));
            _0x46a824 += _0xc271f6(0xc7b) + _0x11ed17[_0xc271f6(0x24d)] + '\x0a', _0x46a824 += _0xc271f6(0xc7c) + _0x11ed17[_0xc271f6(0x240)] + '\x0a', _0x46a824 += _0xc271f6(0xc7d) + _0x2fa22d['x'] + '\x0a', _0x46a824 += _0xc271f6(0xc7e) + _0x2fa22d['y'] + '\x0a', _0x46a824 += _0xc271f6(0xc7f) + _0x2fa22d['z'] + '\x0a', _0x46a824 += _0xc271f6(0xc80) + _0x218b83[_0xc271f6(0x953)][_0xc271f6(0xc81)] + '\x0a';
            for (var _0x1f24f5 = 0x0, _0x13b801 = _0x1d67ca[_0xc271f6(0x1ff)]; _0x1f24f5 < _0x13b801; _0x1f24f5++) {
                var _0x40ff6f = _0x1d67ca[_0x1f24f5];
                _0x46a824 += _0xc271f6(0xc82) + _0x40ff6f + '\x0a', _0x5f5696[_0x40ff6f] = !![];
            }
            var _0x540d91 = this['_VS'][_0xc271f6(0xc83)](_0x5f5696, []), _0x10ad3a = '';
            _0x540d91[0x0][_0xc271f6(0x384)](_0xc271f6(0xc84)) == 0x0 && (_0x10ad3a = _0x540d91[0x0] + '\x0a', _0x540d91[_0xc271f6(0x93f)]());
            var _0x1ba824 = this['_PS'][_0xc271f6(0xc83)](_0x5f5696, []), _0x424086 = '';
            _0x1ba824[0x0]['indexOf'](_0xc271f6(0xc84)) == 0x0 && (_0x424086 = _0x1ba824[0x0] + '\x0a', _0x1ba824[_0xc271f6(0x93f)]());
            _0x43aa96 = new _0x5c7b6f(_0x10ad3a + _0x42f04f + _0x46a824 + _0x540d91[_0xc271f6(0x262)]('\x0a'), _0x424086 + _0x3d8bb1 + _0x46a824 + _0x1ba824[_0xc271f6(0x262)]('\x0a'), this[_0xc271f6(0x3d3)][_0xc271f6(0x51f)], this['_owner'][_0xc271f6(0x522)] || this[_0xc271f6(0x3d3)]['_owner']['_uniformMap'], this), _0x10c0ca[_0x317368] = _0x43aa96;
            if (_0x84b6d6[_0xc271f6(0x546)]) {
                var _0x56725b = '', _0x3240f0 = '';
                for (var _0x1f24f5 = 0x0, _0x13b801 = _0xbbfa27; _0x1f24f5 < _0x13b801; _0x1f24f5++)
                    _0x1f24f5 == _0x13b801 - 0x1 ? _0x3240f0 += _0x361128[_0x1f24f5] : _0x3240f0 += _0x361128[_0x1f24f5] + ',';
                for (var _0x1f24f5 = 0x0, _0x13b801 = _0x5c2b9e[_0xc271f6(0x1ff)]; _0x1f24f5 < _0x13b801; _0x1f24f5++)
                    _0x1f24f5 == _0x13b801 - 0x1 ? _0x56725b += _0x5c2b9e[_0x1f24f5] : _0x56725b += _0x5c2b9e[_0x1f24f5] + ',';
                console[_0xc271f6(0x943)](_0xc271f6(0xc85) + this['_owner'][_0xc271f6(0x3d3)][_0xc271f6(0x512)] + '\x20SubShaderIndex:' + this[_0xc271f6(0x3d3)][_0xc271f6(0x3d3)][_0xc271f6(0x534)]['indexOf'](this[_0xc271f6(0x3d3)]) + _0xc271f6(0xc86) + this[_0xc271f6(0x3d3)][_0xc271f6(0x50f)][_0xc271f6(0x384)](this) + _0xc271f6(0xc87) + _0x3240f0 + ']' + _0xc271f6(0xc88) + _0x56725b + ']', 'color:green');
            }
            return _0x43aa96;
        }
        [_0x5659be(0xc89)](_0x43ca92, _0x4cb7e6) {
            var _0x3e0983 = _0x5659be;
            if (_0x4cb7e6)
                this['_tags'][_0x43ca92] = _0x4cb7e6;
            else
                delete this[_0x3e0983(0xc55)][_0x43ca92];
        }
        [_0x5659be(0xc8a)](_0x4c5a96) {
            var _0x1be701 = _0x5659be;
            return this[_0x1be701(0xc55)][_0x4c5a96];
        }
    }
    _0x1688c7['_defineString'] = [], _0x1688c7[_0x5659be(0xc8b)] = [], _0x1688c7[_0x5659be(0xc75)] = [];
    class _0x280c5f {
        constructor(_0x273721, _0x181f77) {
            var _0x964ab3 = _0x5659be;
            this[_0x964ab3(0xc8c)] = {}, this[_0x964ab3(0x50f)] = [], this[_0x964ab3(0x51f)] = _0x273721, this[_0x964ab3(0x522)] = _0x181f77;
        }
        [_0x5659be(0xc8d)](_0x5104f2, _0x973ce5) {
            var _0x536094 = _0x5659be;
            if (_0x973ce5)
                this[_0x536094(0xc8c)][_0x5104f2] = _0x973ce5;
            else
                delete this[_0x536094(0xc8c)][_0x5104f2];
        }
        [_0x5659be(0xaa2)](_0xb39679) {
            var _0x1b797f = _0x5659be;
            return this[_0x1b797f(0xc8c)][_0xb39679];
        }
        [_0x5659be(0xc8e)](_0x567f6e, _0x357b8a, _0x1ed980 = null, _0x35e931 = _0x5659be(0x3d9)) {
            var _0x2c595b = _0x5659be, _0xd2cb27 = new _0x1688c7(this, _0x567f6e, _0x357b8a, _0x1ed980);
            return _0xd2cb27[_0x2c595b(0x5e0)] = _0x35e931, this['_passes']['push'](_0xd2cb27), _0xd2cb27;
        }
    }
    (function (_0x3ffb94) {
        var _0x3aae07 = _0x5659be;
        _0x3ffb94[_0x3ffb94[_0x3aae07(0xc8f)] = 0x0] = _0x3aae07(0xc8f), _0x3ffb94[_0x3ffb94[_0x3aae07(0xc90)] = 0x1] = _0x3aae07(0xc90);
    }(_0x71dec4[_0x5659be(0xc91)] || (_0x71dec4['PBRSpecularSmoothnessSource'] = {})));
    class _0x89bfff extends _0x336a30 {
        constructor() {
            var _0x50e1bf = _0x5659be;
            super(), this[_0x50e1bf(0x68b)]('PBRSpecular'), this[_0x50e1bf(0x4e0)][_0x50e1bf(0x49d)](_0x89bfff[_0x50e1bf(0xc92)], new _0x8fb80(0.2, 0.2, 0.2, 0x1));
        }
        static ['__init__']() {
            var _0x96ff84 = _0x5659be;
            _0x89bfff['SHADERDEFINE_SPECULARGLOSSTEXTURE'] = _0x84b6d6[_0x96ff84(0x510)]('SPECULARGLOSSTEXTURE'), _0x89bfff[_0x96ff84(0xc93)] = _0x84b6d6['getDefineByName']('SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA');
            var _0xa7bd48 = {
                    'a_Position': _0x13bc8a['MESH_POSITION0'],
                    'a_Normal': _0x13bc8a[_0x96ff84(0x60b)],
                    'a_Tangent0': _0x13bc8a[_0x96ff84(0x614)],
                    'a_Texcoord0': _0x13bc8a['MESH_TEXTURECOORDINATE0'],
                    'a_Texcoord1': _0x13bc8a[_0x96ff84(0x60f)],
                    'a_BoneWeights': _0x13bc8a[_0x96ff84(0x615)],
                    'a_BoneIndices': _0x13bc8a[_0x96ff84(0x611)],
                    'a_WorldMat': _0x13bc8a[_0x96ff84(0x602)],
                    'a_SimpleTextureParams': _0x13bc8a['MESH_SIMPLEANIMATOR']
                }, _0x41a0a9 = {
                    'u_Bones': _0x84b6d6[_0x96ff84(0x7ae)],
                    'u_MvpMatrix': _0x84b6d6[_0x96ff84(0x541)],
                    'u_WorldMat': _0x84b6d6[_0x96ff84(0x541)],
                    'u_LightmapScaleOffset': _0x84b6d6[_0x96ff84(0x541)],
                    'u_LightMap': _0x84b6d6[_0x96ff84(0x541)],
                    'u_LightMapDirection': _0x84b6d6[_0x96ff84(0x541)],
                    'u_SimpleAnimatorTexture': _0x84b6d6[_0x96ff84(0x541)],
                    'u_SimpleAnimatorParams': _0x84b6d6[_0x96ff84(0x541)],
                    'u_SimpleAnimatorTextureSize': _0x84b6d6['PERIOD_SPRITE'],
                    'u_ReflectCubeHDRParams': _0x84b6d6[_0x96ff84(0x541)],
                    'u_ReflectTexture': _0x84b6d6[_0x96ff84(0x541)],
                    'u_SpecCubeProbePosition': _0x84b6d6[_0x96ff84(0x541)],
                    'u_SpecCubeBoxMax': _0x84b6d6[_0x96ff84(0x541)],
                    'u_SpecCubeBoxMin': _0x84b6d6['PERIOD_SPRITE'],
                    'u_CameraPos': _0x84b6d6[_0x96ff84(0x542)],
                    'u_View': _0x84b6d6['PERIOD_CAMERA'],
                    'u_ProjectionParams': _0x84b6d6[_0x96ff84(0x542)],
                    'u_Viewport': _0x84b6d6[_0x96ff84(0x542)],
                    'u_ViewProjection': _0x84b6d6[_0x96ff84(0x542)],
                    'u_AlphaTestValue': _0x84b6d6[_0x96ff84(0x540)],
                    'u_AlbedoColor': _0x84b6d6[_0x96ff84(0x540)],
                    'u_EmissionColor': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_AlbedoTexture': _0x84b6d6[_0x96ff84(0x540)],
                    'u_NormalTexture': _0x84b6d6[_0x96ff84(0x540)],
                    'u_ParallaxTexture': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_OcclusionTexture': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_EmissionTexture': _0x84b6d6[_0x96ff84(0x540)],
                    'u_Smoothness': _0x84b6d6[_0x96ff84(0x540)],
                    'u_SmoothnessScale': _0x84b6d6[_0x96ff84(0x540)],
                    'u_occlusionStrength': _0x84b6d6[_0x96ff84(0x540)],
                    'u_NormalScale': _0x84b6d6[_0x96ff84(0x540)],
                    'u_ParallaxScale': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_TilingOffset': _0x84b6d6[_0x96ff84(0x540)],
                    'u_SpecGlossTexture': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_SpecularColor': _0x84b6d6[_0x96ff84(0x540)],
                    'u_AmbientColor': _0x84b6d6['PERIOD_SCENE'],
                    'u_FogStart': _0x84b6d6['PERIOD_SCENE'],
                    'u_FogRange': _0x84b6d6[_0x96ff84(0x543)],
                    'u_FogColor': _0x84b6d6[_0x96ff84(0x543)],
                    'u_DirationLightCount': _0x84b6d6[_0x96ff84(0x543)],
                    'u_LightBuffer': _0x84b6d6[_0x96ff84(0x543)],
                    'u_LightClusterBuffer': _0x84b6d6[_0x96ff84(0x543)],
                    'u_ShadowBias': _0x84b6d6[_0x96ff84(0x543)],
                    'u_ShadowLightDirection': _0x84b6d6[_0x96ff84(0x543)],
                    'u_ShadowMap': _0x84b6d6['PERIOD_SCENE'],
                    'u_ShadowParams': _0x84b6d6[_0x96ff84(0x543)],
                    'u_ShadowSplitSpheres': _0x84b6d6['PERIOD_SCENE'],
                    'u_ShadowMatrices': _0x84b6d6['PERIOD_SCENE'],
                    'u_ShadowMapSize': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotShadowMap': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotViewProjectMatrix': _0x84b6d6[_0x96ff84(0x543)],
                    'u_ShadowLightPosition': _0x84b6d6[_0x96ff84(0x543)],
                    'u_AmbientSHAr': _0x84b6d6[_0x96ff84(0x543)],
                    'u_AmbientSHAg': _0x84b6d6[_0x96ff84(0x543)],
                    'u_AmbientSHAb': _0x84b6d6['PERIOD_SCENE'],
                    'u_AmbientSHBr': _0x84b6d6['PERIOD_SCENE'],
                    'u_AmbientSHBg': _0x84b6d6['PERIOD_SCENE'],
                    'u_AmbientSHBb': _0x84b6d6[_0x96ff84(0x543)],
                    'u_AmbientSHC': _0x84b6d6[_0x96ff84(0x543)],
                    'u_DirectionLight.direction': _0x84b6d6['PERIOD_SCENE'],
                    'u_DirectionLight.color': _0x84b6d6[_0x96ff84(0x543)],
                    'u_PointLight.position': _0x84b6d6['PERIOD_SCENE'],
                    'u_PointLight.range': _0x84b6d6[_0x96ff84(0x543)],
                    'u_PointLight.color': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotLight.position': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotLight.direction': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotLight.range': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotLight.spot': _0x84b6d6[_0x96ff84(0x543)],
                    'u_SpotLight.color': _0x84b6d6[_0x96ff84(0x543)]
                }, _0x1d6d70 = {
                    's_Cull': _0x84b6d6[_0x96ff84(0x7f4)],
                    's_Blend': _0x84b6d6[_0x96ff84(0x536)],
                    's_BlendSrc': _0x84b6d6['RENDER_STATE_BLEND_SRC'],
                    's_BlendDst': _0x84b6d6['RENDER_STATE_BLEND_DST'],
                    's_DepthTest': _0x84b6d6[_0x96ff84(0x53e)],
                    's_DepthWrite': _0x84b6d6[_0x96ff84(0x53f)]
                }, _0x68817a = _0x84b6d6['add']('PBRSpecular', _0xa7bd48, _0x41a0a9, !![], !![]), _0x5ba0fc = new _0x280c5f(_0xa7bd48, _0x41a0a9);
            _0x68817a['addSubShader'](_0x5ba0fc), _0x5ba0fc[_0x96ff84(0xc8e)](_0x1eea13, _0x3f58c6, _0x1d6d70, 'Forward'), _0x5ba0fc[_0x96ff84(0xc8e)](_0x4926e0, _0x5a6ee1, _0x1d6d70, 'ShadowCaster'), _0x5ba0fc['addShaderPass'](_0x1d34b7, _0x55280a, _0x1d6d70, _0x96ff84(0xc94));
        }
        get [_0x5659be(0x715)]() {
            var _0x4d209c = _0x5659be;
            return this['_shaderValues'][_0x4d209c(0x4a4)](_0x89bfff[_0x4d209c(0x723)]);
        }
        set [_0x5659be(0x715)](_0x586068) {
            var _0x2c4ac3 = _0x5659be;
            if (_0x586068)
                this[_0x2c4ac3(0x4e0)]['addDefine'](_0x89bfff['SHADERDEFINE_SPECULARGLOSSTEXTURE']);
            else
                this[_0x2c4ac3(0x4e0)][_0x2c4ac3(0x493)](_0x89bfff['SHADERDEFINE_SPECULARGLOSSTEXTURE']);
            this['_shaderValues'][_0x2c4ac3(0x4a2)](_0x89bfff[_0x2c4ac3(0x723)], _0x586068);
        }
        get [_0x5659be(0x6f3)]() {
            var _0x876b69 = _0x5659be;
            return this[_0x876b69(0x4e0)][_0x876b69(0x49c)](_0x89bfff[_0x876b69(0xc92)]);
        }
        set ['specularColor'](_0x33140d) {
            var _0x4eb722 = _0x5659be;
            this['_shaderValues'][_0x4eb722(0x49d)](_0x89bfff[_0x4eb722(0xc92)], _0x33140d);
        }
        [_0x5659be(0x1f4)]() {
            var _0x54b649 = _0x5659be, _0x51eb20 = new _0x89bfff();
            return this[_0x54b649(0x1f0)](_0x51eb20), _0x51eb20;
        }
    }
    _0x89bfff[_0x5659be(0x723)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc95)), _0x89bfff[_0x5659be(0xc92)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xc96));
    var _0x9867df = _0x5659be(0xc97), _0x5379bb = _0x5659be(0xc98), _0x5d5ea0 = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22ShadowCasterFS.glsl\x22\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_FragColor=shadowCasterFragment();\x0d\x0a}', _0x5c721f = _0x5659be(0x797);
    (function (_0x3acea4) {
        var _0x39595d = _0x5659be;
        _0x3acea4[_0x3acea4[_0x39595d(0xc99)] = 0x0] = _0x39595d(0xc99), _0x3acea4[_0x3acea4[_0x39595d(0xc90)] = 0x1] = _0x39595d(0xc90);
    }(_0x71dec4[_0x5659be(0xc9a)] || (_0x71dec4[_0x5659be(0xc9a)] = {})));
    class _0x1ad7f4 extends _0x336a30 {
        constructor() {
            var _0x314afa = _0x5659be;
            super(), this[_0x314afa(0xc9b)] = 0x0, this['setShaderName']('PBR'), this['_shaderValues'][_0x314afa(0x4af)](_0x1ad7f4[_0x314afa(0xc9c)], 0x0);
        }
        static ['__init__']() {
            var _0x29942e = _0x5659be;
            _0x1ad7f4['SHADERDEFINE_METALLICGLOSSTEXTURE'] = _0x84b6d6[_0x29942e(0x510)](_0x29942e(0xc9d)), _0x1ad7f4[_0x29942e(0xc93)] = _0x84b6d6[_0x29942e(0x510)]('SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA');
            var _0x4056de = {
                    'a_Position': _0x13bc8a[_0x29942e(0x609)],
                    'a_Normal': _0x13bc8a[_0x29942e(0x60b)],
                    'a_Tangent0': _0x13bc8a[_0x29942e(0x614)],
                    'a_Texcoord0': _0x13bc8a['MESH_TEXTURECOORDINATE0'],
                    'a_Texcoord1': _0x13bc8a[_0x29942e(0x60f)],
                    'a_BoneWeights': _0x13bc8a[_0x29942e(0x615)],
                    'a_BoneIndices': _0x13bc8a[_0x29942e(0x611)],
                    'a_WorldMat': _0x13bc8a[_0x29942e(0x602)],
                    'a_SimpleTextureParams': _0x13bc8a[_0x29942e(0x605)]
                }, _0x582d8d = {
                    'u_Bones': _0x84b6d6[_0x29942e(0x7ae)],
                    'u_MvpMatrix': _0x84b6d6[_0x29942e(0x541)],
                    'u_WorldMat': _0x84b6d6['PERIOD_SPRITE'],
                    'u_LightmapScaleOffset': _0x84b6d6['PERIOD_SPRITE'],
                    'u_LightMap': _0x84b6d6[_0x29942e(0x541)],
                    'u_LightMapDirection': _0x84b6d6[_0x29942e(0x541)],
                    'u_SimpleAnimatorTexture': _0x84b6d6[_0x29942e(0x541)],
                    'u_SimpleAnimatorParams': _0x84b6d6['PERIOD_SPRITE'],
                    'u_SimpleAnimatorTextureSize': _0x84b6d6[_0x29942e(0x541)],
                    'u_ReflectCubeHDRParams': _0x84b6d6[_0x29942e(0x541)],
                    'u_ReflectTexture': _0x84b6d6[_0x29942e(0x541)],
                    'u_SpecCubeProbePosition': _0x84b6d6[_0x29942e(0x541)],
                    'u_SpecCubeBoxMax': _0x84b6d6[_0x29942e(0x541)],
                    'u_SpecCubeBoxMin': _0x84b6d6['PERIOD_SPRITE'],
                    'u_CameraPos': _0x84b6d6[_0x29942e(0x542)],
                    'u_View': _0x84b6d6[_0x29942e(0x542)],
                    'u_ProjectionParams': _0x84b6d6[_0x29942e(0x542)],
                    'u_Viewport': _0x84b6d6[_0x29942e(0x542)],
                    'u_ViewProjection': _0x84b6d6[_0x29942e(0x542)],
                    'u_AlphaTestValue': _0x84b6d6[_0x29942e(0x540)],
                    'u_AlbedoColor': _0x84b6d6[_0x29942e(0x540)],
                    'u_EmissionColor': _0x84b6d6[_0x29942e(0x540)],
                    'u_AlbedoTexture': _0x84b6d6[_0x29942e(0x540)],
                    'u_NormalTexture': _0x84b6d6[_0x29942e(0x540)],
                    'u_ParallaxTexture': _0x84b6d6[_0x29942e(0x540)],
                    'u_OcclusionTexture': _0x84b6d6[_0x29942e(0x540)],
                    'u_EmissionTexture': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_Smoothness': _0x84b6d6[_0x29942e(0x540)],
                    'u_SmoothnessScale': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_occlusionStrength': _0x84b6d6[_0x29942e(0x540)],
                    'u_NormalScale': _0x84b6d6[_0x29942e(0x540)],
                    'u_ParallaxScale': _0x84b6d6[_0x29942e(0x540)],
                    'u_TilingOffset': _0x84b6d6[_0x29942e(0x540)],
                    'u_MetallicGlossTexture': _0x84b6d6[_0x29942e(0x540)],
                    'u_Metallic': _0x84b6d6[_0x29942e(0x540)],
                    'u_AmbientColor': _0x84b6d6[_0x29942e(0x543)],
                    'u_FogStart': _0x84b6d6[_0x29942e(0x543)],
                    'u_FogRange': _0x84b6d6[_0x29942e(0x543)],
                    'u_FogColor': _0x84b6d6[_0x29942e(0x543)],
                    'u_DirationLightCount': _0x84b6d6[_0x29942e(0x543)],
                    'u_LightBuffer': _0x84b6d6[_0x29942e(0x543)],
                    'u_LightClusterBuffer': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowBias': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowLightDirection': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowMap': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowParams': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowSplitSpheres': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowMatrices': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowMapSize': _0x84b6d6[_0x29942e(0x543)],
                    'u_SpotShadowMap': _0x84b6d6[_0x29942e(0x543)],
                    'u_SpotViewProjectMatrix': _0x84b6d6[_0x29942e(0x543)],
                    'u_ShadowLightPosition': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHAr': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHAg': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHAb': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHBr': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHBg': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHBb': _0x84b6d6[_0x29942e(0x543)],
                    'u_AmbientSHC': _0x84b6d6['PERIOD_SCENE'],
                    'u_DirectionLight.direction': _0x84b6d6[_0x29942e(0x543)],
                    'u_DirectionLight.color': _0x84b6d6[_0x29942e(0x543)],
                    'u_PointLight.position': _0x84b6d6[_0x29942e(0x543)],
                    'u_PointLight.range': _0x84b6d6[_0x29942e(0x543)],
                    'u_PointLight.color': _0x84b6d6[_0x29942e(0x543)],
                    'u_SpotLight.position': _0x84b6d6['PERIOD_SCENE'],
                    'u_SpotLight.direction': _0x84b6d6[_0x29942e(0x543)],
                    'u_SpotLight.range': _0x84b6d6['PERIOD_SCENE'],
                    'u_SpotLight.spot': _0x84b6d6[_0x29942e(0x543)],
                    'u_SpotLight.color': _0x84b6d6[_0x29942e(0x543)]
                }, _0x104f64 = {
                    's_Cull': _0x84b6d6[_0x29942e(0x7f4)],
                    's_Blend': _0x84b6d6[_0x29942e(0x536)],
                    's_BlendSrc': _0x84b6d6['RENDER_STATE_BLEND_SRC'],
                    's_BlendDst': _0x84b6d6[_0x29942e(0x538)],
                    's_DepthTest': _0x84b6d6[_0x29942e(0x53e)],
                    's_DepthWrite': _0x84b6d6['RENDER_STATE_DEPTH_WRITE']
                }, _0x1c1843 = _0x84b6d6[_0x29942e(0x201)](_0x29942e(0xc9e), _0x4056de, _0x582d8d, !![], !![]), _0x5335f4 = new _0x280c5f(_0x4056de, _0x582d8d);
            _0x1c1843[_0x29942e(0x533)](_0x5335f4), _0x5335f4[_0x29942e(0xc8e)](_0x5379bb, _0x9867df, _0x104f64, _0x29942e(0x3d9)), _0x5335f4['addShaderPass'](_0x5c721f, _0x5d5ea0, _0x104f64, 'ShadowCaster'), _0x5335f4['addShaderPass'](_0x1d34b7, _0x55280a, _0x104f64, _0x29942e(0xc94));
        }
        get [_0x5659be(0xc9f)]() {
            var _0x526c06 = _0x5659be;
            return this[_0x526c06(0x4e0)][_0x526c06(0x4a4)](_0x1ad7f4[_0x526c06(0xc9d)]);
        }
        set ['metallicGlossTexture'](_0x3e50d7) {
            var _0x5f4915 = _0x5659be;
            if (_0x3e50d7)
                this[_0x5f4915(0x4e0)][_0x5f4915(0x62c)](_0x1ad7f4['SHADERDEFINE_METALLICGLOSSTEXTURE']);
            else
                this[_0x5f4915(0x4e0)]['removeDefine'](_0x1ad7f4[_0x5f4915(0xca0)]);
            this[_0x5f4915(0x4e0)][_0x5f4915(0x4a2)](_0x1ad7f4[_0x5f4915(0xc9d)], _0x3e50d7);
        }
        get [_0x5659be(0xca1)]() {
            var _0x32215d = _0x5659be;
            return this[_0x32215d(0x4e0)][_0x32215d(0x498)](_0x1ad7f4['METALLIC']);
        }
        set [_0x5659be(0xca1)](_0x5b6229) {
            var _0x1dfbe5 = _0x5659be;
            this[_0x1dfbe5(0x4e0)][_0x1dfbe5(0x4af)](_0x1ad7f4[_0x1dfbe5(0xc9c)], Math[_0x1dfbe5(0x205)](0x0, Math[_0x1dfbe5(0x204)](0x1, _0x5b6229)));
        }
        get ['smoothnessSource']() {
            var _0x11464f = _0x5659be;
            return this[_0x11464f(0xc9b)];
        }
        set [_0x5659be(0xca2)](_0x312fb3) {
            var _0xef6825 = _0x5659be;
            if (_0x312fb3)
                this[_0xef6825(0x4e0)][_0xef6825(0x62c)](_0x1ad7f4[_0xef6825(0xc93)]);
            else
                this[_0xef6825(0x4e0)][_0xef6825(0x493)](_0x1ad7f4[_0xef6825(0xc93)]);
            this[_0xef6825(0xc9b)] = _0x312fb3;
        }
        [_0x5659be(0x1f4)]() {
            var _0x3b02a5 = new _0x1ad7f4();
            return this['cloneTo'](_0x3b02a5), _0x3b02a5;
        }
    }
    _0x1ad7f4[_0x5659be(0xc9d)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xca3)), _0x1ad7f4[_0x5659be(0xc9c)] = _0x84b6d6[_0x5659be(0x526)]('u_Metallic');
    class _0x223623 extends _0x4bfb48 {
        constructor() {
            var _0x32892b = _0x5659be;
            super(), this['setShaderName'](_0x32892b(0xc2f)), this[_0x32892b(0xca4)] = new _0x8fb80(0.5, 0.5, 0.5, 0.5), this[_0x32892b(0xca5)] = 0x1, this[_0x32892b(0x5a0)] = 0x0;
        }
        static [_0x5659be(0x687)]() {
        }
        get [_0x5659be(0xca4)]() {
            var _0x39234b = _0x5659be;
            return this[_0x39234b(0x4e0)][_0x39234b(0x49c)](_0x223623[_0x39234b(0x737)]);
        }
        set [_0x5659be(0xca4)](_0x5e60ed) {
            var _0x5a7b61 = _0x5659be;
            this['_shaderValues'][_0x5a7b61(0x49d)](_0x223623[_0x5a7b61(0x737)], _0x5e60ed);
        }
        get [_0x5659be(0xca5)]() {
            var _0x9c49cf = _0x5659be;
            return this[_0x9c49cf(0x4e0)][_0x9c49cf(0x498)](_0x223623['EXPOSURE']);
        }
        set [_0x5659be(0xca5)](_0x4859c0) {
            var _0x39b6d1 = _0x5659be;
            this['_shaderValues'][_0x39b6d1(0x4af)](_0x223623['EXPOSURE'], _0x4859c0);
        }
        get [_0x5659be(0x5a0)]() {
            var _0x1c53ac = _0x5659be;
            return this[_0x1c53ac(0x4e0)][_0x1c53ac(0x498)](_0x223623[_0x1c53ac(0xca6)]);
        }
        set ['rotation'](_0x2c10bb) {
            var _0x17fe34 = _0x5659be;
            this[_0x17fe34(0x4e0)][_0x17fe34(0x4af)](_0x223623[_0x17fe34(0xca6)], _0x2c10bb);
        }
        get [_0x5659be(0xca7)]() {
            var _0x16ade7 = _0x5659be;
            return this[_0x16ade7(0x4e0)][_0x16ade7(0x4a4)](_0x223623['TEXTURECUBE']);
        }
        set [_0x5659be(0xca7)](_0x1256f2) {
            var _0x4baf87 = _0x5659be;
            this[_0x4baf87(0x4e0)][_0x4baf87(0x4a2)](_0x223623[_0x4baf87(0xca8)], _0x1256f2);
        }
        [_0x5659be(0x1f4)]() {
            var _0x24c1bd = _0x5659be, _0xa5670 = new _0x223623();
            return this[_0x24c1bd(0x1f0)](_0xa5670), _0xa5670;
        }
    }
    _0x223623[_0x5659be(0x737)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xca9)), _0x223623['EXPOSURE'] = _0x84b6d6[_0x5659be(0x526)]('u_Exposure'), _0x223623[_0x5659be(0xca6)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcaa)), _0x223623[_0x5659be(0xca8)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcab));
    class _0x3df214 extends _0x4bfb48 {
        constructor() {
            var _0x3e2f59 = _0x5659be;
            super(), this[_0x3e2f59(0x68b)]('SkyBoxProcedural'), this['sunDisk'] = _0x3df214[_0x3e2f59(0xcac)], this[_0x3e2f59(0xcad)] = 0.04, this[_0x3e2f59(0xcae)] = 0x5, this[_0x3e2f59(0xcaf)] = 0x1, this[_0x3e2f59(0xcb0)] = new _0x8fb80(0.5, 0.5, 0.5, 0x1), this['groundTint'] = new _0x8fb80(0.369, 0.349, 0.341, 0x1), this[_0x3e2f59(0xca5)] = 1.3;
        }
        static [_0x5659be(0x687)]() {
            var _0xf104f9 = _0x5659be;
            _0x3df214['SHADERDEFINE_SUN_HIGH_QUALITY'] = _0x84b6d6[_0xf104f9(0x510)](_0xf104f9(0xcac)), _0x3df214[_0xf104f9(0xcb1)] = _0x84b6d6[_0xf104f9(0x510)](_0xf104f9(0xcb2));
        }
        get [_0x5659be(0xcb3)]() {
            var _0x222e39 = _0x5659be;
            return this[_0x222e39(0xcb4)];
        }
        set [_0x5659be(0xcb3)](_0x140b9e) {
            var _0x3d3132 = _0x5659be;
            switch (_0x140b9e) {
            case _0x3df214[_0x3d3132(0xcac)]:
                this[_0x3d3132(0x4e0)][_0x3d3132(0x493)](_0x3df214[_0x3d3132(0xcb1)]), this[_0x3d3132(0x4e0)][_0x3d3132(0x62c)](_0x3df214[_0x3d3132(0xcb5)]);
                break;
            case _0x3df214[_0x3d3132(0xcb2)]:
                this[_0x3d3132(0x4e0)]['removeDefine'](_0x3df214['SHADERDEFINE_SUN_HIGH_QUALITY']), this['_shaderValues']['addDefine'](_0x3df214['SHADERDEFINE_SUN_SIMPLE']);
                break;
            case _0x3df214[_0x3d3132(0xcb6)]:
                this['_shaderValues'][_0x3d3132(0x493)](_0x3df214[_0x3d3132(0xcb5)]), this[_0x3d3132(0x4e0)]['removeDefine'](_0x3df214['SHADERDEFINE_SUN_SIMPLE']);
                break;
            default:
                throw 'SkyBoxProceduralMaterial:\x20unknown\x20sun\x20value.';
            }
            this[_0x3d3132(0xcb4)] = _0x140b9e;
        }
        get [_0x5659be(0xcad)]() {
            var _0x54b847 = _0x5659be;
            return this[_0x54b847(0x4e0)][_0x54b847(0x498)](_0x3df214[_0x54b847(0xcb7)]);
        }
        set [_0x5659be(0xcad)](_0xc6ea75) {
            var _0x3177f4 = _0x5659be;
            _0xc6ea75 = Math[_0x3177f4(0x204)](Math['max'](0x0, _0xc6ea75), 0x1), this[_0x3177f4(0x4e0)][_0x3177f4(0x4af)](_0x3df214[_0x3177f4(0xcb7)], _0xc6ea75);
        }
        get ['sunSizeConvergence']() {
            var _0x14c871 = _0x5659be;
            return this[_0x14c871(0x4e0)][_0x14c871(0x498)](_0x3df214[_0x14c871(0xcb8)]);
        }
        set [_0x5659be(0xcae)](_0x3f9d80) {
            var _0x3eac1d = _0x5659be;
            _0x3f9d80 = Math[_0x3eac1d(0x204)](Math[_0x3eac1d(0x205)](0x0, _0x3f9d80), 0x14), this[_0x3eac1d(0x4e0)][_0x3eac1d(0x4af)](_0x3df214[_0x3eac1d(0xcb8)], _0x3f9d80);
        }
        get [_0x5659be(0xcaf)]() {
            var _0x41c0aa = _0x5659be;
            return this['_shaderValues'][_0x41c0aa(0x498)](_0x3df214[_0x41c0aa(0xcb9)]);
        }
        set ['atmosphereThickness'](_0xaa10a6) {
            var _0xea8540 = _0x5659be;
            _0xaa10a6 = Math[_0xea8540(0x204)](Math[_0xea8540(0x205)](0x0, _0xaa10a6), 0x5), this[_0xea8540(0x4e0)][_0xea8540(0x4af)](_0x3df214[_0xea8540(0xcb9)], _0xaa10a6);
        }
        get ['skyTint']() {
            var _0x52015d = _0x5659be;
            return this['_shaderValues'][_0x52015d(0x49c)](_0x3df214['SKYTINT']);
        }
        set ['skyTint'](_0x2b4f39) {
            var _0x39f6c2 = _0x5659be;
            this[_0x39f6c2(0x4e0)][_0x39f6c2(0x49d)](_0x3df214['SKYTINT'], _0x2b4f39);
        }
        get [_0x5659be(0xcba)]() {
            var _0x226825 = _0x5659be;
            return this[_0x226825(0x4e0)]['getVector'](_0x3df214[_0x226825(0xcbb)]);
        }
        set ['groundTint'](_0x522a00) {
            var _0x1d6582 = _0x5659be;
            this['_shaderValues'][_0x1d6582(0x49d)](_0x3df214[_0x1d6582(0xcbb)], _0x522a00);
        }
        get [_0x5659be(0xca5)]() {
            var _0x4525e1 = _0x5659be;
            return this[_0x4525e1(0x4e0)][_0x4525e1(0x498)](_0x3df214['EXPOSURE']);
        }
        set ['exposure'](_0xd7e46c) {
            var _0x9ec88a = _0x5659be;
            _0xd7e46c = Math[_0x9ec88a(0x204)](Math['max'](0x0, _0xd7e46c), 0x8), this[_0x9ec88a(0x4e0)][_0x9ec88a(0x4af)](_0x3df214[_0x9ec88a(0xcbc)], _0xd7e46c);
        }
        [_0x5659be(0x1f4)]() {
            var _0x3cf811 = new _0x3df214();
            return this['cloneTo'](_0x3cf811), _0x3cf811;
        }
    }
    _0x3df214[_0x5659be(0xcb6)] = 0x0, _0x3df214[_0x5659be(0xcb2)] = 0x1, _0x3df214[_0x5659be(0xcac)] = 0x2, _0x3df214[_0x5659be(0xcb7)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcbd)), _0x3df214[_0x5659be(0xcb8)] = _0x84b6d6[_0x5659be(0x526)]('u_SunSizeConvergence'), _0x3df214[_0x5659be(0xcb9)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcbe)), _0x3df214['SKYTINT'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcbf)), _0x3df214['GROUNDTINT'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcc0)), _0x3df214[_0x5659be(0xcbc)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcc1));
    class _0x2781f6 extends _0x4bfb48 {
        constructor() {
            var _0x2f53eb = _0x5659be;
            super(), this[_0x2f53eb(0x68b)](_0x2f53eb(0xcc2)), this[_0x2f53eb(0x4e0)][_0x2f53eb(0x49d)](_0x2781f6[_0x2f53eb(0x6da)], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), this['_shaderValues'][_0x2f53eb(0x49d)](_0x2781f6['TILINGOFFSET'], new _0x8fb80(0x1, 0x1, 0x0, 0x0)), this[_0x2f53eb(0x6fc)] = _0x2781f6[_0x2f53eb(0x73d)], this[_0x2f53eb(0x6d9)] = 0x1;
        }
        static [_0x5659be(0x687)]() {
            var _0x2c6d1b = _0x5659be;
            _0x2781f6[_0x2c6d1b(0x76f)] = _0x84b6d6[_0x2c6d1b(0x510)](_0x2c6d1b(0x720)), _0x2781f6[_0x2c6d1b(0x702)] = _0x84b6d6[_0x2c6d1b(0x510)](_0x2c6d1b(0x6e3));
        }
        get [_0x5659be(0x6e8)]() {
            return this['albedoColor']['x'];
        }
        set [_0x5659be(0x6e8)](_0x193fa3) {
            var _0x2887b7 = _0x5659be;
            let _0x356366 = this[_0x2887b7(0x6e9)];
            _0x356366['x'] = _0x193fa3, this[_0x2887b7(0x6e9)] = _0x356366;
        }
        get ['_ColorG']() {
            var _0x29f7e7 = _0x5659be;
            return this[_0x29f7e7(0x6e9)]['y'];
        }
        set [_0x5659be(0x6ea)](_0x370a64) {
            var _0x484a62 = _0x5659be;
            let _0x46cd7f = this[_0x484a62(0x6e9)];
            _0x46cd7f['y'] = _0x370a64, this['albedoColor'] = _0x46cd7f;
        }
        get [_0x5659be(0x6eb)]() {
            var _0x30109d = _0x5659be;
            return this[_0x30109d(0x6e9)]['z'];
        }
        set ['_ColorB'](_0x55e959) {
            var _0x2f0cd8 = _0x5659be;
            let _0xc30859 = this[_0x2f0cd8(0x6e9)];
            _0xc30859['z'] = _0x55e959, this[_0x2f0cd8(0x6e9)] = _0xc30859;
        }
        get ['_ColorA']() {
            var _0x37bb16 = _0x5659be;
            return this[_0x37bb16(0x6e9)]['w'];
        }
        set [_0x5659be(0x6ec)](_0x4ade9e) {
            var _0x50effb = _0x5659be;
            let _0x42fbfd = this[_0x50effb(0x6e9)];
            _0x42fbfd['w'] = _0x4ade9e, this['albedoColor'] = _0x42fbfd;
        }
        get [_0x5659be(0x6ed)]() {
            var _0x5ca626 = _0x5659be;
            return this[_0x5ca626(0x4e0)][_0x5ca626(0x49c)](_0x2781f6[_0x5ca626(0x6da)]);
        }
        set ['_Color'](_0xaf9e7b) {
            this['albedoColor'] = _0xaf9e7b;
        }
        get ['_AlbedoIntensity']() {
            var _0x45c12d = _0x5659be;
            return this[_0x45c12d(0xcc3)];
        }
        set [_0x5659be(0xcc4)](_0x2a9ba1) {
            var _0x4a9600 = _0x5659be;
            if (this[_0x4a9600(0xcc3)] !== _0x2a9ba1) {
                var _0xc3c541 = this[_0x4a9600(0x4e0)]['getVector'](_0x2781f6[_0x4a9600(0x6da)]);
                _0x8fb80['scale'](this[_0x4a9600(0x6e9)], _0x2a9ba1, _0xc3c541), this[_0x4a9600(0xcc3)] = _0x2a9ba1, this[_0x4a9600(0x4e0)]['setVector'](_0x2781f6[_0x4a9600(0x6da)], _0xc3c541);
            }
        }
        get [_0x5659be(0x6f5)]() {
            var _0x2c100e = _0x5659be;
            return this['_shaderValues'][_0x2c100e(0x49c)](_0x2781f6['TILINGOFFSET'])['x'];
        }
        set [_0x5659be(0x6f5)](_0x3c7f7c) {
            var _0xc36236 = _0x5659be, _0x18171e = this['_shaderValues'][_0xc36236(0x49c)](_0x2781f6[_0xc36236(0x6dc)]);
            _0x18171e['x'] = _0x3c7f7c, this[_0xc36236(0x6f6)] = _0x18171e;
        }
        get [_0x5659be(0x6f7)]() {
            var _0xf2ecf5 = _0x5659be;
            return this[_0xf2ecf5(0x4e0)][_0xf2ecf5(0x49c)](_0x2781f6[_0xf2ecf5(0x6dc)])['y'];
        }
        set [_0x5659be(0x6f7)](_0x46f675) {
            var _0x18e972 = _0x5659be, _0x2586ff = this['_shaderValues'][_0x18e972(0x49c)](_0x2781f6['TILINGOFFSET']);
            _0x2586ff['y'] = _0x46f675, this[_0x18e972(0x6f6)] = _0x2586ff;
        }
        get [_0x5659be(0x6f8)]() {
            var _0x601a64 = _0x5659be;
            return this[_0x601a64(0x4e0)][_0x601a64(0x49c)](_0x2781f6[_0x601a64(0x6dc)])['z'];
        }
        set [_0x5659be(0x6f8)](_0x183231) {
            var _0x2d8e2e = _0x5659be, _0x15b2c1 = this[_0x2d8e2e(0x4e0)][_0x2d8e2e(0x49c)](_0x2781f6['TILINGOFFSET']);
            _0x15b2c1['z'] = _0x183231, this['tilingOffset'] = _0x15b2c1;
        }
        get ['_MainTex_STW']() {
            var _0x6d4188 = _0x5659be;
            return this[_0x6d4188(0x4e0)]['getVector'](_0x2781f6[_0x6d4188(0x6dc)])['w'];
        }
        set [_0x5659be(0x6f9)](_0x1904a4) {
            var _0xc6f6bc = _0x5659be, _0x29b4f0 = this[_0xc6f6bc(0x4e0)][_0xc6f6bc(0x49c)](_0x2781f6[_0xc6f6bc(0x6dc)]);
            _0x29b4f0['w'] = _0x1904a4, this[_0xc6f6bc(0x6f6)] = _0x29b4f0;
        }
        get ['_MainTex_ST']() {
            var _0x33de45 = _0x5659be;
            return this['_shaderValues'][_0x33de45(0x49c)](_0x2781f6[_0x33de45(0x6dc)]);
        }
        set [_0x5659be(0x6fa)](_0x4ba325) {
            var _0x374790 = _0x5659be;
            this[_0x374790(0x6f6)] = _0x4ba325;
        }
        get [_0x5659be(0x6fb)]() {
            var _0x2ab5c5 = _0x5659be;
            return this[_0x2ab5c5(0x69e)];
        }
        set [_0x5659be(0x6fb)](_0xddb675) {
            var _0x20b51c = _0x5659be;
            this[_0x20b51c(0x69e)] = _0xddb675;
        }
        get ['albedoColorR']() {
            var _0x4462d4 = _0x5659be;
            return this[_0x4462d4(0x6e8)];
        }
        set [_0x5659be(0x707)](_0x3ed735) {
            var _0x121ef4 = _0x5659be;
            this[_0x121ef4(0x6e8)] = _0x3ed735;
        }
        get [_0x5659be(0x708)]() {
            return this['_ColorG'];
        }
        set ['albedoColorG'](_0x4ee1bf) {
            var _0x391553 = _0x5659be;
            this[_0x391553(0x6ea)] = _0x4ee1bf;
        }
        get [_0x5659be(0x709)]() {
            var _0x50d499 = _0x5659be;
            return this[_0x50d499(0x6eb)];
        }
        set [_0x5659be(0x709)](_0x3958c0) {
            this['_ColorB'] = _0x3958c0;
        }
        get [_0x5659be(0x70a)]() {
            var _0x22482f = _0x5659be;
            return this[_0x22482f(0x6ec)];
        }
        set [_0x5659be(0x70a)](_0x2e7fe0) {
            var _0x42117c = _0x5659be;
            this[_0x42117c(0x6ec)] = _0x2e7fe0;
        }
        get [_0x5659be(0x6e9)]() {
            var _0x2674bf = _0x5659be;
            return this[_0x2674bf(0x4e0)][_0x2674bf(0x49c)](_0x2781f6[_0x2674bf(0x6da)]);
        }
        set ['albedoColor'](_0x2fc477) {
            var _0x57cd73 = _0x5659be, _0x4cb2eb = this[_0x57cd73(0x4e0)][_0x57cd73(0x49c)](_0x2781f6[_0x57cd73(0x6da)]);
            _0x8fb80[_0x57cd73(0x1ee)](_0x2fc477, this[_0x57cd73(0xcc3)], _0x4cb2eb), this[_0x57cd73(0x4e0)][_0x57cd73(0x49d)](_0x2781f6['ALBEDOCOLOR'], _0x4cb2eb);
        }
        get [_0x5659be(0x6d9)]() {
            var _0x4ac2c0 = _0x5659be;
            return this[_0x4ac2c0(0xcc3)];
        }
        set [_0x5659be(0x6d9)](_0x1563dc) {
            var _0x6ed2d1 = _0x5659be;
            this[_0x6ed2d1(0xcc4)] = _0x1563dc;
        }
        get ['albedoTexture']() {
            var _0x2493a2 = _0x5659be;
            return this[_0x2493a2(0x4e0)]['getTexture'](_0x2781f6[_0x2493a2(0x720)]);
        }
        set ['albedoTexture'](_0x495ffd) {
            var _0x3da1dc = _0x5659be;
            if (_0x495ffd)
                this['_shaderValues'][_0x3da1dc(0x62c)](_0x2781f6[_0x3da1dc(0x76f)]);
            else
                this[_0x3da1dc(0x4e0)][_0x3da1dc(0x493)](_0x2781f6[_0x3da1dc(0x76f)]);
            this['_shaderValues'][_0x3da1dc(0x4a2)](_0x2781f6['ALBEDOTEXTURE'], _0x495ffd);
        }
        get [_0x5659be(0x704)]() {
            var _0x12de85 = _0x5659be;
            return this[_0x12de85(0x6f5)];
        }
        set [_0x5659be(0x704)](_0x41d4cd) {
            var _0x5973f6 = _0x5659be;
            this[_0x5973f6(0x6f5)] = _0x41d4cd;
        }
        get [_0x5659be(0x705)]() {
            var _0x38bf36 = _0x5659be;
            return this[_0x38bf36(0x6f7)];
        }
        set [_0x5659be(0x705)](_0x59be5a) {
            var _0x5f4cab = _0x5659be;
            this[_0x5f4cab(0x6f7)] = _0x59be5a;
        }
        get [_0x5659be(0x739)]() {
            var _0x2b8357 = _0x5659be;
            return this[_0x2b8357(0x6f8)];
        }
        set [_0x5659be(0x739)](_0x5b7ac2) {
            this['_MainTex_STZ'] = _0x5b7ac2;
        }
        get [_0x5659be(0x706)]() {
            var _0x5795e1 = _0x5659be;
            return this[_0x5795e1(0x6f9)];
        }
        set [_0x5659be(0x706)](_0x5ace29) {
            var _0x501d40 = _0x5659be;
            this[_0x501d40(0x6f9)] = _0x5ace29;
        }
        get ['tilingOffset']() {
            var _0x9cdb63 = _0x5659be;
            return this[_0x9cdb63(0x4e0)]['getVector'](_0x2781f6[_0x9cdb63(0x6dc)]);
        }
        set [_0x5659be(0x6f6)](_0xe249f9) {
            var _0x15d69c = _0x5659be;
            _0xe249f9 ? this[_0x15d69c(0x4e0)][_0x15d69c(0x49d)](_0x2781f6[_0x15d69c(0x6dc)], _0xe249f9) : this[_0x15d69c(0x4e0)][_0x15d69c(0x49c)](_0x2781f6[_0x15d69c(0x6dc)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        get [_0x5659be(0x703)]() {
            var _0x22251d = _0x5659be;
            return this[_0x22251d(0x4e0)]['hasDefine'](_0x2781f6[_0x22251d(0x702)]);
        }
        set [_0x5659be(0x703)](_0x487b52) {
            var _0x5c65c9 = _0x5659be;
            if (_0x487b52)
                this[_0x5c65c9(0x4e0)][_0x5c65c9(0x62c)](_0x2781f6[_0x5c65c9(0x702)]);
            else
                this[_0x5c65c9(0x4e0)][_0x5c65c9(0x493)](_0x2781f6[_0x5c65c9(0x702)]);
        }
        set [_0x5659be(0x6fc)](_0x2d388a) {
            var _0x1727ff = _0x5659be;
            switch (_0x2d388a) {
            case _0x2781f6[_0x1727ff(0x73d)]:
                this[_0x1727ff(0x6a0)] = ![], this[_0x1727ff(0x6ae)] = _0x4bfb48[_0x1727ff(0x6af)], this[_0x1727ff(0x698)] = !![], this[_0x1727ff(0x696)] = _0x2aa393[_0x1727ff(0x6ba)], this[_0x1727ff(0x695)] = _0x2aa393[_0x1727ff(0x6bb)], this[_0x1727ff(0x697)] = _0x2aa393[_0x1727ff(0x6d3)];
                break;
            case _0x2781f6['RENDERMODE_CUTOUT']:
                this[_0x1727ff(0x6ae)] = _0x4bfb48[_0x1727ff(0x6b0)], this[_0x1727ff(0x6a0)] = !![], this[_0x1727ff(0x698)] = !![], this[_0x1727ff(0x696)] = _0x2aa393[_0x1727ff(0x6ba)], this[_0x1727ff(0x695)] = _0x2aa393['BLEND_DISABLE'], this[_0x1727ff(0x697)] = _0x2aa393[_0x1727ff(0x6d3)];
                break;
            case _0x2781f6[_0x1727ff(0x6fe)]:
                this[_0x1727ff(0x6ae)] = _0x4bfb48[_0x1727ff(0x6b1)], this[_0x1727ff(0x6a0)] = ![], this[_0x1727ff(0x698)] = ![], this[_0x1727ff(0x696)] = _0x2aa393[_0x1727ff(0x6ba)], this['blend'] = _0x2aa393[_0x1727ff(0x6c9)], this[_0x1727ff(0x699)] = _0x2aa393[_0x1727ff(0x6ff)], this[_0x1727ff(0x69b)] = _0x2aa393['BLENDPARAM_ONE_MINUS_SRC_ALPHA'], this[_0x1727ff(0x697)] = _0x2aa393[_0x1727ff(0x6d3)];
                break;
            default:
                throw new Error(_0x1727ff(0xcc5));
            }
        }
        [_0x5659be(0x1f4)]() {
            var _0x51a32b = _0x5659be, _0x5ad2d9 = new _0x2781f6();
            return this[_0x51a32b(0x1f0)](_0x5ad2d9), _0x5ad2d9;
        }
    }
    _0x2781f6[_0x5659be(0x73d)] = 0x0, _0x2781f6['RENDERMODE_CUTOUT'] = 0x1, _0x2781f6[_0x5659be(0x6fe)] = 0x2, _0x2781f6[_0x5659be(0x72a)] = 0x3, _0x2781f6[_0x5659be(0x720)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x78a)), _0x2781f6[_0x5659be(0x6da)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x73b)), _0x2781f6[_0x5659be(0x6dc)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x725));
    class _0x4c6dd7 extends _0x4bfb48 {
        constructor() {
            var _0x218059 = _0x5659be;
            super(), this[_0x218059(0x68b)](_0x218059(0xcc6)), this[_0x218059(0x4e0)][_0x218059(0x49d)](_0x4c6dd7[_0x218059(0xcc7)], new _0x8fb80(0.172, 0.463, 0.435, 0x0)), this[_0x218059(0x4e0)][_0x218059(0x4af)](_0x4c6dd7[_0x218059(0xcc8)], 0.15), this[_0x218059(0x4e0)]['setVector'](_0x4c6dd7[_0x218059(0xcc9)], new _0x8fb80(0x13, 0x9, -0x10, -0x7));
        }
        static [_0x5659be(0x687)]() {
            var _0x5ae35f = _0x5659be;
            _0x4c6dd7[_0x5ae35f(0x72b)] = _0x84b6d6[_0x5ae35f(0x510)](_0x5ae35f(0x72c)), _0x4c6dd7[_0x5ae35f(0x770)] = _0x84b6d6[_0x5ae35f(0x510)](_0x5ae35f(0x714));
        }
        get [_0x5659be(0xcca)]() {
            var _0x3945fb = _0x5659be;
            return this[_0x3945fb(0x4e0)]['getVector'](_0x4c6dd7[_0x3945fb(0xcc7)]);
        }
        set [_0x5659be(0xcca)](_0x5b2b05) {
            var _0x43af57 = _0x5659be;
            this[_0x43af57(0x4e0)]['setVector'](_0x4c6dd7[_0x43af57(0xcc7)], _0x5b2b05);
        }
        get ['mainTexture']() {
            var _0x1657bc = _0x5659be;
            return this[_0x1657bc(0x4e0)][_0x1657bc(0x4a4)](_0x4c6dd7['MAINTEXTURE']);
        }
        set [_0x5659be(0xccb)](_0x19b174) {
            var _0x46d7b2 = _0x5659be;
            if (_0x19b174)
                this[_0x46d7b2(0x4e0)][_0x46d7b2(0x62c)](_0x4c6dd7['SHADERDEFINE_MAINTEXTURE']);
            else
                this['_shaderValues'][_0x46d7b2(0x493)](_0x4c6dd7[_0x46d7b2(0x72b)]);
            this[_0x46d7b2(0x4e0)]['setTexture'](_0x4c6dd7[_0x46d7b2(0x72c)], _0x19b174);
        }
        get ['normalTexture']() {
            var _0x11f043 = _0x5659be;
            return this['_shaderValues'][_0x11f043(0x4a4)](_0x4c6dd7[_0x11f043(0x714)]);
        }
        set [_0x5659be(0x713)](_0xa99131) {
            var _0x452641 = _0x5659be;
            if (_0xa99131)
                this['_shaderValues'][_0x452641(0x62c)](_0x4c6dd7['SHADERDEFINE_NORMALTEXTURE']);
            else
                this[_0x452641(0x4e0)][_0x452641(0x493)](_0x4c6dd7[_0x452641(0x770)]);
            this[_0x452641(0x4e0)][_0x452641(0x4a2)](_0x4c6dd7[_0x452641(0x714)], _0xa99131);
        }
        get [_0x5659be(0xccc)]() {
            var _0x309c6e = _0x5659be;
            return this['_shaderValues']['getNumber'](_0x4c6dd7[_0x309c6e(0xcc8)]);
        }
        set [_0x5659be(0xccc)](_0x551c6d) {
            var _0x1ee538 = _0x5659be;
            this[_0x1ee538(0x4e0)]['setNumber'](_0x4c6dd7['WAVESCALE'], _0x551c6d);
        }
        get ['waveSpeed']() {
            var _0x50dcab = _0x5659be;
            return this[_0x50dcab(0x4e0)][_0x50dcab(0x49c)](_0x4c6dd7[_0x50dcab(0xcc9)]);
        }
        set ['waveSpeed'](_0x1a4694) {
            var _0x513a84 = _0x5659be;
            this[_0x513a84(0x4e0)]['setVector'](_0x4c6dd7[_0x513a84(0xcc9)], _0x1a4694);
        }
        [_0x5659be(0x1f4)]() {
            var _0x3f85c6 = _0x5659be, _0x12a2e2 = new _0x4c6dd7();
            return this[_0x3f85c6(0x1f0)](_0x12a2e2), _0x12a2e2;
        }
    }
    _0x4c6dd7['HORIZONCOLOR'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xccd)), _0x4c6dd7[_0x5659be(0x72c)] = _0x84b6d6[_0x5659be(0x526)]('u_MainTexture'), _0x4c6dd7['NORMALTEXTURE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x722)), _0x4c6dd7[_0x5659be(0xcc8)] = _0x84b6d6[_0x5659be(0x526)]('u_WaveScale'), _0x4c6dd7[_0x5659be(0xcc9)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcce));
    class _0x234e8d extends _0x55d32a {
        constructor(_0x3d50bd) {
            var _0x3d3ac7 = _0x5659be;
            super(_0x3d50bd), this[_0x3d3ac7(0xccf)] = ![], this['_projectionViewWorldMatrix'] = new _0x3ed76a();
        }
        ['_createRenderElement']() {
            return new _0x1c6dea();
        }
        [_0x5659be(0xcd0)](_0x32fd35) {
            var _0x438c7a = _0x5659be;
            if (_0x32fd35) {
                var _0x1002f3 = _0x32fd35[_0x438c7a(0xae8)];
                this['_renderElements'][_0x438c7a(0x1ff)] = _0x1002f3;
                for (var _0x293808 = 0x0; _0x293808 < _0x1002f3; _0x293808++) {
                    var _0xaab7c = this[_0x438c7a(0x600)][_0x293808];
                    if (!_0xaab7c) {
                        var _0x273f9e = this[_0x438c7a(0xb18)][_0x293808];
                        _0xaab7c = this['_renderElements'][_0x293808] = this[_0x438c7a(0xcd1)](), _0xaab7c[_0x438c7a(0xa9e)](this['_owner'][_0x438c7a(0x3ca)]), _0xaab7c[_0x438c7a(0x506)] = this, _0xaab7c[_0x438c7a(0x8d6)] = _0x273f9e ? _0x273f9e : _0x5d2d40['defaultMaterial'];
                    }
                    _0xaab7c[_0x438c7a(0xaba)](_0x32fd35[_0x438c7a(0xcd2)](_0x293808));
                }
            } else
                this[_0x438c7a(0x600)][_0x438c7a(0x1ff)] = 0x0;
            this[_0x438c7a(0xb0c)] = !![];
        }
        [_0x5659be(0xb1c)]() {
            var _0x17696d = _0x5659be, _0x16c8d4 = this['_owner'][_0x17696d(0xae2)]['sharedMesh'];
            if (_0x16c8d4) {
                var _0x3b8cf2 = this[_0x17696d(0x3d3)]['transform'][_0x17696d(0x3ce)];
                _0x16c8d4[_0x17696d(0x80d)][_0x17696d(0xa59)](_0x3b8cf2, this[_0x17696d(0xa67)]);
            }
        }
        ['_needRender'](_0x256776, _0x9847d0) {
            var _0x45799a = _0x5659be;
            if (_0x256776)
                return _0x256776[_0x45799a(0x8bb)](this[_0x45799a(0x80d)][_0x45799a(0x80e)]());
            else
                return !![];
        }
        [_0x5659be(0x5f3)](_0x48b9ec, _0x2cad4f) {
            var _0x49192c = _0x5659be;
            this[_0x49192c(0xb2a)]();
            var _0x42bf3f = _0x48b9ec[_0x49192c(0xa9a)];
            switch (_0x42bf3f['renderType']) {
            case _0x5551c8[_0x49192c(0x5fd)]:
                this[_0x49192c(0x4e0)][_0x49192c(0x4a0)](_0x356e58[_0x49192c(0xb37)], _0x2cad4f['worldMatrix']);
                break;
            case _0x5551c8['RENDERTYPE_STATICBATCH']:
                if (_0x2cad4f)
                    this[_0x49192c(0x4e0)][_0x49192c(0x4a0)](_0x356e58[_0x49192c(0xb37)], _0x2cad4f[_0x49192c(0x3ce)]);
                else
                    this[_0x49192c(0x4e0)][_0x49192c(0x4a0)](_0x356e58[_0x49192c(0xb37)], _0x3ed76a[_0x49192c(0x290)]);
                !this[_0x49192c(0x4e0)]['hasDefine'](_0xc9db6a['SHADERDEFINE_UV1']) ? (this[_0x49192c(0x4e0)][_0x49192c(0x62c)](_0xc9db6a['SHADERDEFINE_UV1']), this['_revertStaticBatchDefineUV1'] = !![]) : this[_0x49192c(0xccf)] = ![];
                this[_0x49192c(0x4e0)][_0x49192c(0x49d)](_0x200920[_0x49192c(0xa87)], _0x55d32a['_defaultLightmapScaleOffset']);
                break;
            case _0x5551c8[_0x49192c(0xac3)]:
                this['_shaderValues'][_0x49192c(0x4a0)](_0x356e58[_0x49192c(0xb37)], _0x3ed76a['DEFAULT']);
                break;
            case _0x5551c8['RENDERTYPE_INSTANCEBATCH']:
                var _0x192073 = _0x269d35['instance'][_0x49192c(0xa95)], _0x45d9dc = _0x42bf3f[_0x49192c(0xa9c)], _0x242740 = _0x45d9dc[_0x49192c(0x1f6)], _0x154473 = _0x45d9dc[_0x49192c(0x1ff)];
                for (var _0x14c273 = 0x0; _0x14c273 < _0x154473; _0x14c273++)
                    _0x192073['set'](_0x242740[_0x14c273]['_transform'][_0x49192c(0x3ce)][_0x49192c(0x1f6)], _0x14c273 * 0x10);
                var _0xb5f25c = _0x269d35['instance'][_0x49192c(0xa97)];
                _0xb5f25c[_0x49192c(0x626)](), _0xb5f25c[_0x49192c(0x4fd)](_0x192073[_0x49192c(0x448)], 0x0, 0x0, _0x154473 * 0x10 * 0x4), this[_0x49192c(0x4e0)][_0x49192c(0x62c)](_0xc9db6a[_0x49192c(0x62d)]);
                break;
            }
            if (!this['_probReflection'])
                return;
            this[_0x49192c(0xb21)] == _0x71dec4['ReflectionProbeMode'][_0x49192c(0x8fc)] ? (this['_shaderValues'][_0x49192c(0x493)](_0xc9db6a[_0x49192c(0xcd3)]), this[_0x49192c(0x4e0)][_0x49192c(0x49d)](_0x200920[_0x49192c(0xa8e)], _0x221da4[_0x49192c(0xb09)]), this[_0x49192c(0x4e0)]['setTexture'](_0x200920[_0x49192c(0xa8c)], _0x38ac97['blackTexture'])) : (!this[_0x49192c(0xab5)][_0x49192c(0xafa)] ? this[_0x49192c(0x4e0)]['removeDefine'](_0xc9db6a[_0x49192c(0xcd3)]) : (this[_0x49192c(0x4e0)]['addDefine'](_0xc9db6a[_0x49192c(0xcd3)]), this['_shaderValues'][_0x49192c(0x4b1)](_0x200920['REFLECTIONCUBE_PROBEPOSITION'], this[_0x49192c(0xab5)][_0x49192c(0xaff)]), this['_shaderValues']['setVector3'](_0x200920[_0x49192c(0xa90)], this['_probReflection'][_0x49192c(0xcd4)]), this[_0x49192c(0x4e0)][_0x49192c(0x4b1)](_0x200920['REFLECTIONCUBE_PROBEBOXMIN'], this[_0x49192c(0xab5)]['boundsMin'])), this[_0x49192c(0x4e0)][_0x49192c(0x4a2)](_0x200920[_0x49192c(0xa8c)], this[_0x49192c(0xab5)]['reflectionTexture']), this[_0x49192c(0x4e0)][_0x49192c(0x49d)](_0x200920[_0x49192c(0xa8e)], this['_probReflection'][_0x49192c(0xb00)]));
        }
        ['_renderUpdateWithCamera'](_0x47a83d, _0x27a1ab) {
            var _0x4c9660 = _0x5659be, _0x232682 = _0x47a83d[_0x4c9660(0x5dc)];
            if (_0x232682) {
                var _0x56f063 = _0x47a83d['renderElement'];
                switch (_0x56f063[_0x4c9660(0x5f1)]) {
                case _0x5551c8['RENDERTYPE_NORMAL']:
                case _0x5551c8[_0x4c9660(0xaa7)]:
                case _0x5551c8[_0x4c9660(0xac3)]:
                    _0x27a1ab ? (_0x3ed76a['multiply'](_0x232682, _0x27a1ab[_0x4c9660(0x3ce)], this[_0x4c9660(0x5de)]), this[_0x4c9660(0x4e0)][_0x4c9660(0x4a0)](_0x356e58[_0x4c9660(0x5dd)], this['_projectionViewWorldMatrix'])) : this[_0x4c9660(0x4e0)][_0x4c9660(0x4a0)](_0x356e58[_0x4c9660(0x5dd)], _0x232682);
                    break;
                }
            }
        }
        [_0x5659be(0x5fe)](_0x36f2b5) {
            var _0x3d9c33 = _0x5659be, _0x26e4f0 = _0x36f2b5[_0x3d9c33(0xa9a)];
            switch (_0x26e4f0[_0x3d9c33(0x5f1)]) {
            case _0x5551c8[_0x3d9c33(0xaa7)]:
                if (this['_revertStaticBatchDefineUV1'])
                    this[_0x3d9c33(0x4e0)][_0x3d9c33(0x493)](_0xc9db6a[_0x3d9c33(0xcd5)]);
                this[_0x3d9c33(0x4e0)][_0x3d9c33(0x49d)](_0x200920[_0x3d9c33(0xa87)], this[_0x3d9c33(0xb14)]);
                break;
            case _0x5551c8[_0x3d9c33(0xaa6)]:
                this['_shaderValues'][_0x3d9c33(0x493)](_0xc9db6a[_0x3d9c33(0x62d)]);
                break;
            }
        }
        [_0x5659be(0xa86)]() {
            var _0xdeaf53 = _0x5659be;
            this[_0xdeaf53(0xacf)] && _0x493d86[_0xdeaf53(0x2f4)]['_removeRenderSprite'](this[_0xdeaf53(0x3d3)]), super['_destroy']();
        }
    }
    class _0x2abbff {
        constructor(_0x900c28) {
            var _0x3822fc = _0x5659be;
            this[_0x3822fc(0x3d3)] = _0x900c28;
        }
        get [_0x5659be(0xae3)]() {
            var _0xff7151 = _0x5659be;
            return this[_0xff7151(0xcd6)];
        }
        set [_0x5659be(0xae3)](_0x532418) {
            var _0x461e48 = _0x5659be;
            if (this[_0x461e48(0xcd6)] !== _0x532418) {
                var _0x5e5b39 = this[_0x461e48(0x3d3)]['_render'][_0x461e48(0x4e0)], _0x1977aa = this[_0x461e48(0xcd6)];
                if (_0x1977aa) {
                    _0x1977aa[_0x461e48(0x351)](), this[_0x461e48(0xcd7)](_0x1977aa, _0x2abbff[_0x461e48(0xcd8)]);
                    for (var _0x5e20b7 = 0x0, _0x2afdb0 = _0x2abbff[_0x461e48(0xcd8)][_0x461e48(0x1ff)]; _0x5e20b7 < _0x2afdb0; _0x5e20b7++)
                        _0x5e5b39[_0x461e48(0x493)](_0x2abbff[_0x461e48(0xcd8)][_0x5e20b7]);
                }
                if (_0x532418) {
                    _0x532418[_0x461e48(0x354)](), this[_0x461e48(0xcd7)](_0x532418, _0x2abbff['_meshVerticeDefine']);
                    for (var _0x5e20b7 = 0x0, _0x2afdb0 = _0x2abbff['_meshVerticeDefine'][_0x461e48(0x1ff)]; _0x5e20b7 < _0x2afdb0; _0x5e20b7++)
                        _0x5e5b39[_0x461e48(0x62c)](_0x2abbff[_0x461e48(0xcd8)][_0x5e20b7]);
                }
                this[_0x461e48(0x3d3)]['_render'][_0x461e48(0xcd0)](_0x532418), this['_sharedMesh'] = _0x532418;
            }
        }
        ['_getMeshDefine'](_0x394416, _0x25c7c8) {
            var _0x30b10a = _0x5659be;
            _0x25c7c8[_0x30b10a(0x1ff)] = 0x0;
            var _0x2ff77e;
            for (var _0x5185e0 = 0x0, _0x512ef3 = _0x394416[_0x30b10a(0x5e5)][_0x30b10a(0x1ff)]; _0x5185e0 < _0x512ef3; _0x5185e0++) {
                var _0x15d5d4 = _0x394416[_0x30b10a(0xcd2)](_0x5185e0), _0x361af1 = _0x15d5d4[_0x30b10a(0x4f9)][_0x30b10a(0x43f)][_0x30b10a(0x4df)];
                for (var _0x3892d9 = 0x0, _0x351279 = _0x361af1[_0x30b10a(0x1ff)]; _0x3892d9 < _0x351279; _0x3892d9++) {
                    var _0x445852 = _0x361af1[_0x3892d9], _0x27cee3 = _0x445852['_elementUsage'];
                    switch (_0x27cee3) {
                    case _0x13bc8a['MESH_COLOR0']:
                        _0x25c7c8[_0x30b10a(0x298)](_0xc9db6a['SHADERDEFINE_COLOR']);
                        break;
                    case _0x13bc8a['MESH_TEXTURECOORDINATE0']:
                        _0x25c7c8[_0x30b10a(0x298)](_0xc9db6a['SHADERDEFINE_UV0']);
                        break;
                    case _0x13bc8a['MESH_TEXTURECOORDINATE1']:
                        _0x25c7c8[_0x30b10a(0x298)](_0xc9db6a[_0x30b10a(0xcd5)]);
                        break;
                    }
                }
            }
            return _0x2ff77e;
        }
        ['destroy']() {
            var _0x4804b9 = _0x5659be;
            this[_0x4804b9(0x3d3)] = null, this['_sharedMesh'] && (this['_sharedMesh'][_0x4804b9(0x351)](), this[_0x4804b9(0xcd6)] = null);
        }
    }
    _0x2abbff['_meshVerticeDefine'] = [];
    class _0x5267dc extends _0x319422 {
        constructor() {
            var _0x1b481f = _0x5659be;
            super(), this[_0x1b481f(0x4f6)] = new _0x174c4a();
            var _0x3033b1 = _0x218b83[_0x1b481f(0x2f3)]['instance'], _0x31869f = _0x13bc8a[_0x1b481f(0x606)](_0x1b481f(0xcd9)), _0x26ccb3 = _0x31869f['vertexStride'] * _0x5267dc['maxIndicesCount'];
            this['_vertices'] = new Float32Array(_0x26ccb3 / 0x4), this['_vertexBuffer'] = new _0x57a6a2(_0x26ccb3, _0x3033b1['DYNAMIC_DRAW']), this[_0x1b481f(0xaa9)] = new Int16Array(_0x5267dc[_0x1b481f(0xcda)]), this[_0x1b481f(0x624)] = new _0x11925d(_0x71dec4['IndexFormat'][_0x1b481f(0x8c8)], this[_0x1b481f(0xaa9)][_0x1b481f(0x1ff)], _0x3033b1['DYNAMIC_DRAW']);
            var _0x466240 = this['_vertexBuffer'][_0x1b481f(0x443)] + this[_0x1b481f(0x624)][_0x1b481f(0x443)];
            _0x218b83[_0x1b481f(0x315)][_0x1b481f(0xcdb)](_0x466240, _0x466240);
        }
        static [_0x5659be(0x229)]() {
            var _0x5cd66d = _0x5659be;
            _0x5267dc[_0x5cd66d(0x2f4)] = new _0x5267dc();
        }
        [_0x5659be(0xcdc)](_0xa8cf19, _0x387c13, _0x237746, _0x5bc3ac, _0x551add) {
            var _0x5d82e6 = _0x5659be, _0x141922 = _0xa8cf19[_0x5d82e6(0x4e4)] / 0x4, _0x3d8452 = _0x551add['_vertexBuffer'][_0x5d82e6(0x452)](), _0x57e24c = _0x5bc3ac[_0x5d82e6(0xab3)], _0x24189e = _0x5bc3ac[_0x5d82e6(0xab2)];
            _0x5bc3ac['_computeWorldPositionsAndNormals'](this[_0x5d82e6(0xcdd)], this[_0x5d82e6(0xcde)], _0x57e24c, _0x24189e);
            var _0x2261c3 = _0x5bc3ac[_0x5d82e6(0xaaa)], _0x16d5a0 = _0x5bc3ac['_dynamicWorldNormals'], _0x553e1e = _0x551add['_indices'];
            for (var _0x3d66e5 = 0x0; _0x3d66e5 < _0x24189e; _0x3d66e5++) {
                var _0x4609ff = _0x57e24c ? _0x553e1e[_0x3d66e5] : _0x3d66e5, _0x4ab74f = _0x4609ff * _0x141922, _0x107d59 = (_0x3d66e5 + _0x237746) * _0x141922, _0x1d82b6 = _0x3d66e5 * 0x3, _0x110d72 = _0x107d59 + this[_0x5d82e6(0xcdd)];
                _0x387c13[_0x110d72] = _0x2261c3[_0x1d82b6], _0x387c13[_0x110d72 + 0x1] = _0x2261c3[_0x1d82b6 + 0x1], _0x387c13[_0x110d72 + 0x2] = _0x2261c3[_0x1d82b6 + 0x2], this['_normalOffset'] !== -0x1 && (_0x110d72 = _0x107d59 + this[_0x5d82e6(0xcde)], _0x387c13[_0x110d72] = _0x16d5a0[_0x1d82b6], _0x387c13[_0x110d72 + 0x1] = _0x16d5a0[_0x1d82b6 + 0x1], _0x387c13[_0x110d72 + 0x2] = _0x16d5a0[_0x1d82b6 + 0x2]), this[_0x5d82e6(0xcdf)] !== -0x1 && (_0x110d72 = _0x107d59 + this[_0x5d82e6(0xcdf)], _0x1d82b6 = _0x4ab74f + this[_0x5d82e6(0xcdf)], _0x387c13[_0x110d72] = _0x3d8452[_0x1d82b6], _0x387c13[_0x110d72 + 0x1] = _0x3d8452[_0x1d82b6 + 0x1], _0x387c13[_0x110d72 + 0x2] = _0x3d8452[_0x1d82b6 + 0x2], _0x387c13[_0x110d72 + 0x3] = _0x3d8452[_0x1d82b6 + 0x3]), this['_uv0Offset'] !== -0x1 && (_0x110d72 = _0x107d59 + this[_0x5d82e6(0xce0)], _0x1d82b6 = _0x4ab74f + this['_uv0Offset'], _0x387c13[_0x110d72] = _0x3d8452[_0x1d82b6], _0x387c13[_0x110d72 + 0x1] = _0x3d8452[_0x1d82b6 + 0x1]), this[_0x5d82e6(0xce1)] !== -0x1 && (_0x110d72 = _0x107d59 + this['_sTangentOffset'], _0x1d82b6 = _0x4ab74f + this[_0x5d82e6(0xce1)], _0x387c13[_0x110d72] = _0x3d8452[_0x1d82b6], _0x387c13[_0x110d72 + 0x1] = _0x3d8452[_0x1d82b6 + 0x1], _0x387c13[_0x110d72 + 0x2] = _0x3d8452[_0x1d82b6 + 0x2], _0x387c13[_0x110d72 + 0x3] = _0x3d8452[_0x1d82b6 + 0x3], _0x110d72 = _0x107d59 + this[_0x5d82e6(0xce1)], _0x1d82b6 = _0x4ab74f + this['_sTangentOffset'], _0x387c13[_0x110d72] = _0x3d8452[_0x1d82b6], _0x387c13[_0x110d72 + 0x1] = _0x3d8452[_0x1d82b6 + 0x1], _0x387c13[_0x110d72 + 0x2] = _0x3d8452[_0x1d82b6 + 0x2], _0x387c13[_0x110d72 + 0x3] = _0x3d8452[_0x1d82b6 + 0x3]);
            }
        }
        [_0x5659be(0xce2)](_0x5a3ac8, _0x4475d3, _0x4e7e74, _0xa0641e, _0x348954, _0x3d014d) {
            var _0x325f6d = _0x5659be, _0x1bd856 = _0x348954[_0x325f6d(0xaa9)], _0x555f92, _0x5a3e70, _0xf166f0, _0x115a8b = _0xa0641e['_isFrontFaceInvert'];
            if (_0x3d014d) {
                if (_0x115a8b)
                    for (_0x555f92 = 0x0, _0x5a3e70 = _0x1bd856[_0x325f6d(0x1ff)]; _0x555f92 < _0x5a3e70; _0x555f92 += 0x3) {
                        _0xf166f0 = _0x4475d3 + _0x555f92;
                        var _0x530555 = _0x4e7e74 + _0x555f92;
                        _0x5a3ac8[_0xf166f0] = _0x530555, _0x5a3ac8[_0xf166f0 + 0x1] = _0x530555 + 0x2, _0x5a3ac8[_0xf166f0 + 0x2] = _0x530555 + 0x1;
                    }
                else
                    for (_0x555f92 = 0x0, _0x5a3e70 = _0x1bd856[_0x325f6d(0x1ff)]; _0x555f92 < _0x5a3e70; _0x555f92 += 0x3) {
                        _0xf166f0 = _0x4475d3 + _0x555f92, _0x530555 = _0x4e7e74 + _0x555f92, _0x5a3ac8[_0xf166f0] = _0x530555, _0x5a3ac8[_0xf166f0 + 0x1] = _0x530555 + 0x1, _0x5a3ac8[_0xf166f0 + 0x2] = _0x530555 + 0x2;
                    }
            } else {
                if (_0x115a8b)
                    for (_0x555f92 = 0x0, _0x5a3e70 = _0x1bd856['length']; _0x555f92 < _0x5a3e70; _0x555f92 += 0x3) {
                        _0xf166f0 = _0x4475d3 + _0x555f92, _0x5a3ac8[_0xf166f0] = _0x4e7e74 + _0x1bd856[_0x555f92], _0x5a3ac8[_0xf166f0 + 0x1] = _0x4e7e74 + _0x1bd856[_0x555f92 + 0x2], _0x5a3ac8[_0xf166f0 + 0x2] = _0x4e7e74 + _0x1bd856[_0x555f92 + 0x1];
                    }
                else
                    for (_0x555f92 = 0x0, _0x5a3e70 = _0x1bd856[_0x325f6d(0x1ff)]; _0x555f92 < _0x5a3e70; _0x555f92 += 0x3) {
                        _0xf166f0 = _0x4475d3 + _0x555f92, _0x5a3ac8[_0xf166f0] = _0x4e7e74 + _0x1bd856[_0x555f92], _0x5a3ac8[_0xf166f0 + 0x1] = _0x4e7e74 + _0x1bd856[_0x555f92 + 0x1], _0x5a3ac8[_0xf166f0 + 0x2] = _0x4e7e74 + _0x1bd856[_0x555f92 + 0x2];
                    }
            }
        }
        ['_flush'](_0x2dce27, _0x279aa5) {
            var _0x5323e0 = _0x5659be, _0x5e0832 = _0x218b83[_0x5323e0(0x2f3)][_0x5323e0(0x2f4)];
            this['_vertexBuffer'][_0x5323e0(0x4fd)](this['_vertices']['buffer'], 0x0, 0x0, _0x2dce27 * this[_0x5323e0(0x4f6)]['vertexDeclaration'][_0x5323e0(0x4e4)]), this[_0x5323e0(0x624)][_0x5323e0(0x4fd)](this[_0x5323e0(0xaa9)], 0x0, 0x0, _0x279aa5), _0x5e0832[_0x5323e0(0xaea)](_0x5e0832['TRIANGLES'], _0x279aa5, _0x5e0832[_0x5323e0(0x40b)], 0x0);
        }
        [_0x5659be(0x5e8)](_0x293ba6) {
            var _0x71f350 = _0x5659be, _0x5beb28 = _0x293ba6['renderElement'], _0x520517 = _0x5beb28[_0x71f350(0xac4)];
            this[_0x71f350(0x4f6)] = _0x429ec3[_0x71f350(0x221)][_0x71f350(0x2f4)][_0x71f350(0xce3)](_0x520517), this[_0x71f350(0xcdd)] = _0x520517[_0x71f350(0x4e7)](_0x13bc8a['MESH_POSITION0'])['_offset'] / 0x4;
            var _0x24af56 = _0x520517[_0x71f350(0x4e7)](_0x13bc8a['MESH_NORMAL0']);
            this[_0x71f350(0xcde)] = _0x24af56 ? _0x24af56[_0x71f350(0x4e3)] / 0x4 : -0x1;
            var _0x287a6f = _0x520517['getVertexElementByUsage'](_0x13bc8a[_0x71f350(0x60c)]);
            this[_0x71f350(0xcdf)] = _0x287a6f ? _0x287a6f['_offset'] / 0x4 : -0x1;
            var _0x16a65a = _0x520517[_0x71f350(0x4e7)](_0x13bc8a[_0x71f350(0x60d)]);
            this[_0x71f350(0xce0)] = _0x16a65a ? _0x16a65a['_offset'] / 0x4 : -0x1;
            var _0x5ee7bf = _0x520517[_0x71f350(0x4e7)](_0x13bc8a[_0x71f350(0x60f)]);
            this[_0x71f350(0xce4)] = _0x5ee7bf ? _0x5ee7bf[_0x71f350(0x4e3)] / 0x4 : -0x1;
            var _0x132112 = _0x520517[_0x71f350(0x4e7)](_0x13bc8a[_0x71f350(0x614)]);
            return this['_sTangentOffset'] = _0x132112 ? _0x132112[_0x71f350(0x4e3)] / 0x4 : -0x1, !![];
        }
        [_0x5659be(0x5e6)](_0xf4d41d) {
            var _0x4d6a96 = _0x5659be;
            this[_0x4d6a96(0x4f6)]['bind']();
            var _0x425b98 = _0xf4d41d[_0x4d6a96(0xa9a)], _0x272363 = _0x425b98[_0x4d6a96(0xac4)], _0x60457d = _0x425b98[_0x4d6a96(0xac1)], _0x223943 = 0x0, _0x1a5c68 = 0x0, _0xa3691f = 0x0, _0x1ab48d = _0x60457d[_0x4d6a96(0x1ff)], _0x46ae45 = _0x60457d[_0x4d6a96(0x1f6)];
            for (var _0x417afc = 0x0; _0x417afc < _0x1ab48d; _0x417afc++) {
                var _0x5c4cec = _0x46ae45[_0x417afc], _0x431d7b = _0x5c4cec[_0x4d6a96(0x5f0)], _0x5541a9 = _0x431d7b[_0x4d6a96(0x627)];
                _0x1a5c68 + _0x5541a9 > _0x5267dc[_0x4d6a96(0xcda)] && (this[_0x4d6a96(0xce5)](_0x223943, _0x1a5c68), _0xa3691f++, _0x218b83['Stat'][_0x4d6a96(0x62a)] += _0x1a5c68 / 0x3, _0x223943 = _0x1a5c68 = 0x0);
                var _0x11dc6d = _0x5c4cec[_0x4d6a96(0x3ca)];
                this['_getBatchVertices'](_0x272363, this[_0x4d6a96(0x4fa)], _0x223943, _0x5c4cec, _0x431d7b), this['_getBatchIndices'](this['_indices'], _0x1a5c68, _0x223943, _0x11dc6d, _0x431d7b, _0x5c4cec[_0x4d6a96(0xab3)]), _0x223943 += _0x5c4cec['_dynamicVertexCount'], _0x1a5c68 += _0x5541a9;
            }
            this[_0x4d6a96(0xce5)](_0x223943, _0x1a5c68), _0xa3691f++, _0x218b83[_0x4d6a96(0x500)][_0x4d6a96(0x501)] += _0xa3691f, _0x218b83['Stat'][_0x4d6a96(0xaec)] += _0x1ab48d - _0xa3691f, _0x218b83['Stat'][_0x4d6a96(0x62a)] += _0x1a5c68 / 0x3;
        }
    }
    _0x5267dc[_0x5659be(0xaaf)] = 0xa, _0x5267dc[_0x5659be(0xce6)] = 0x384, _0x5267dc[_0x5659be(0xcda)] = 0x7d00;
    class _0x59607c extends _0x4fa75b {
        constructor() {
            var _0x4f6616 = _0x5659be;
            super(), this[_0x4f6616(0xce7)] = [], this[_0x4f6616(0xce8)] = [], this[_0x4f6616(0xce9)] = [], this['_updateCountMark'] = 0x0;
        }
        ['getInstanceBatchOpaquaMark'](_0x44104c, _0x16421c, _0x2ecb27, _0x42579f) {
            var _0x391da1 = this['_instanceBatchOpaqueMarks'][_0x44104c ? 0x0 : 0x1] || (this['_instanceBatchOpaqueMarks'][_0x44104c ? 0x0 : 0x1] = []), _0xbbd49c = _0x391da1[_0x16421c] || (_0x391da1[_0x16421c] = []), _0xe4c5bd = _0xbbd49c[_0x2ecb27] || (_0xbbd49c[_0x2ecb27] = []);
            return _0xe4c5bd[_0x42579f ? 0x1 : 0x0] || (_0xe4c5bd[_0x42579f ? 0x1 : 0x0] = new _0x32eb43());
        }
        [_0x5659be(0xac0)](_0x13cfd8, _0x59c5a4, _0xee21e7, _0x53fb4f) {
            var _0x56f3e5 = _0x5659be, _0x525e2d = this['_vertexBatchOpaqueMarks'][_0x13cfd8] || (this[_0x56f3e5(0xce8)][_0x13cfd8] = []), _0x413aa1 = _0x525e2d[_0x59c5a4 ? 0x0 : 0x1] || (_0x525e2d[_0x59c5a4 ? 0x0 : 0x1] = []), _0x4b33f3 = _0x413aa1[_0xee21e7] || (_0x413aa1[_0xee21e7] = []);
            return _0x4b33f3[_0x53fb4f] || (_0x4b33f3[_0x53fb4f] = new _0x32eb43());
        }
        [_0x5659be(0xce3)](_0x147d33) {
            var _0x149b4c = _0x5659be, _0x45b388 = this[_0x149b4c(0xce9)][_0x147d33['id']];
            if (!_0x45b388) {
                var _0x45f35d = _0x5267dc['instance'];
                _0x45b388 = new _0x174c4a(), _0x45b388[_0x149b4c(0x444)]();
                var _0x36d11e = _0x45f35d['_vertexBuffer'];
                _0x36d11e['vertexDeclaration'] = _0x147d33, _0x45b388['applyVertexBuffer'](_0x36d11e), _0x45b388[_0x149b4c(0x4f3)](_0x45f35d[_0x149b4c(0x624)]), _0x45b388[_0x149b4c(0x4fb)](), this[_0x149b4c(0xce9)][_0x147d33['id']] = _0x45b388;
            }
            return _0x45b388;
        }
        [_0x5659be(0xac2)]() {
            var _0x20a2d7 = _0x5659be, _0xb6c055 = this['_batchRenderElementPool'][this[_0x20a2d7(0xac8)]++];
            return !_0xb6c055 && (_0xb6c055 = new _0x1c6dea(), this[_0x20a2d7(0xac9)][this[_0x20a2d7(0xac8)] - 0x1] = _0xb6c055, _0xb6c055[_0x20a2d7(0xac1)] = new _0x5ae7ed(), _0xb6c055[_0x20a2d7(0xa9c)] = new _0x5ae7ed()), _0xb6c055;
        }
        [_0x5659be(0x9cb)]() {
            var _0x58d786 = _0x5659be;
            super[_0x58d786(0x9cb)](), this[_0x58d786(0xabf)]++;
        }
    }
    _0x59607c[_0x5659be(0x2f4)] = new _0x59607c();
    class _0x82ba60 extends _0x200920 {
        constructor(_0x2440a3 = null, _0x47d64c = null) {
            var _0x5449c6 = _0x5659be;
            super(_0x47d64c), this[_0x5449c6(0xcea)] = new _0x2abbff(this), this[_0x5449c6(0x5e6)] = new _0x234e8d(this), _0x2440a3 && (this[_0x5449c6(0xcea)][_0x5449c6(0xae3)] = _0x2440a3);
        }
        static [_0x5659be(0x229)]() {
            var _0x2971f1 = _0x5659be;
            _0xc9db6a['SHADERDEFINE_UV0'] = _0x84b6d6[_0x2971f1(0x510)]('UV'), _0xc9db6a[_0x2971f1(0xceb)] = _0x84b6d6[_0x2971f1(0x510)](_0x2971f1(0x428)), _0xc9db6a[_0x2971f1(0xcd5)] = _0x84b6d6[_0x2971f1(0x510)](_0x2971f1(0x60e)), _0xc9db6a[_0x2971f1(0x62d)] = _0x84b6d6[_0x2971f1(0x510)](_0x2971f1(0xcec)), _0xc9db6a[_0x2971f1(0xcd3)] = _0x84b6d6[_0x2971f1(0x510)](_0x2971f1(0xced)), _0x5dca2e[_0x2971f1(0xacc)](_0x493d86[_0x2971f1(0x2f4)]), _0x4fa75b['_registerManager'](_0x59607c[_0x2971f1(0x2f4)]);
        }
        get ['meshFilter']() {
            var _0x3fa6da = _0x5659be;
            return this[_0x3fa6da(0xcea)];
        }
        get ['meshRenderer']() {
            return this['_render'];
        }
        [_0x5659be(0x318)](_0x358e31, _0x9ecc67) {
            var _0x2b22b8 = _0x5659be;
            super[_0x2b22b8(0x318)](_0x358e31, _0x9ecc67);
            var _0x24bd16 = this[_0x2b22b8(0xcee)], _0x720dea = _0x358e31[_0x2b22b8(0xab7)];
            _0x720dea != null && (_0x24bd16[_0x2b22b8(0xab7)] = _0x720dea);
            var _0x351508 = _0x358e31[_0x2b22b8(0xb14)];
            _0x351508 && (_0x24bd16['lightmapScaleOffset'] = new _0x8fb80(_0x351508[0x0], _0x351508[0x1], _0x351508[0x2], _0x351508[0x3])), _0x358e31[_0x2b22b8(0xcef)] != undefined && (this[_0x2b22b8(0xae2)][_0x2b22b8(0xae3)] = _0x218b83['Loader'][_0x2b22b8(0x692)](_0x358e31[_0x2b22b8(0xcef)])), _0x358e31[_0x2b22b8(0xcf0)] != undefined && (_0x24bd16[_0x2b22b8(0x650)] = _0x358e31['enableRender']), _0x358e31[_0x2b22b8(0xcf1)] != undefined && (_0x24bd16[_0x2b22b8(0xab8)] = _0x358e31['receiveShadows']), _0x358e31[_0x2b22b8(0xb1e)] != undefined && (_0x24bd16[_0x2b22b8(0xb1e)] = _0x358e31['castShadow']);
            var _0x450c1b = _0x358e31[_0x2b22b8(0xcf2)];
            if (_0x450c1b) {
                var _0x58b833 = _0x24bd16[_0x2b22b8(0xb18)], _0x35fc99 = _0x450c1b[_0x2b22b8(0x1ff)];
                _0x58b833[_0x2b22b8(0x1ff)] = _0x35fc99;
                for (var _0x1c4e0b = 0x0; _0x1c4e0b < _0x35fc99; _0x1c4e0b++) {
                    _0x58b833[_0x1c4e0b] = _0x218b83[_0x2b22b8(0x3b1)][_0x2b22b8(0x692)](_0x450c1b[_0x1c4e0b][_0x2b22b8(0x691)]);
                }
                _0x24bd16[_0x2b22b8(0xb18)] = _0x58b833;
            }
        }
        [_0x5659be(0xa83)]() {
            var _0x34b98f = _0x5659be;
            if (this[_0x34b98f(0xae2)][_0x34b98f(0xae3)])
                _0x493d86['instance'][_0x34b98f(0xcf3)](this);
        }
        ['_cloneTo'](_0x46d513, _0x977fda, _0x44a09c) {
            var _0x1db659 = _0x5659be, _0x33627a = _0x46d513;
            _0x33627a['_meshFilter']['sharedMesh'] = this[_0x1db659(0xcea)]['sharedMesh'];
            var _0x5f22b0 = this[_0x1db659(0x5e6)], _0x77ac07 = _0x33627a[_0x1db659(0x5e6)];
            _0x77ac07[_0x1db659(0x650)] = _0x5f22b0[_0x1db659(0x650)], _0x77ac07['sharedMaterials'] = _0x5f22b0[_0x1db659(0xb18)], _0x77ac07['castShadow'] = _0x5f22b0['castShadow'];
            var _0x431705 = _0x5f22b0['lightmapScaleOffset'];
            _0x431705 && (_0x77ac07[_0x1db659(0xb14)] = _0x431705[_0x1db659(0x1f4)]()), _0x77ac07[_0x1db659(0xab7)] = _0x5f22b0['lightmapIndex'], _0x77ac07[_0x1db659(0xab8)] = _0x5f22b0['receiveShadow'], _0x77ac07[_0x1db659(0xb11)] = _0x5f22b0['sortingFudge'], super['_cloneTo'](_0x46d513, _0x977fda, _0x44a09c);
        }
        [_0x5659be(0x311)](_0x5824e9 = !![]) {
            var _0x5c4621 = _0x5659be;
            if (this[_0x5c4621(0x5cf)])
                return;
            super[_0x5c4621(0x311)](_0x5824e9), this[_0x5c4621(0xcea)][_0x5c4621(0x311)]();
        }
        [_0x5659be(0x5d2)]() {
            return new _0x82ba60();
        }
    }
    class _0x315143 {
    }
    _0x315143['Blend'] = 0x0, _0x315143[_0x5659be(0xcf4)] = 0x1;
    class _0x9a260b {
        constructor(_0x2e377f, _0x413e54) {
            var _0x7c142f = _0x5659be;
            this[_0x7c142f(0xcf5)] = 0x0, this[_0x7c142f(0xcf6)] = 0x0, this[_0x7c142f(0xcf7)] = 0x0, this[_0x7c142f(0xcf8)] = 0x0, this[_0x7c142f(0xcf9)] = 0x0, this[_0x7c142f(0xcfa)] = null, this[_0x7c142f(0xcfb)] = null, this[_0x7c142f(0xcf6)] = _0x2e377f, this[_0x7c142f(0xcf7)] = _0x413e54, this[_0x7c142f(0xcfb)] = new Float32Array(_0x2e377f * 0x4), this[_0x7c142f(0xcfa)] = new Float32Array(_0x413e54 * 0x2);
        }
        get [_0x5659be(0xcfc)]() {
            var _0x21aa7f = _0x5659be;
            return this[_0x21aa7f(0xcf5)];
        }
        set [_0x5659be(0xcfc)](_0x3276da) {
            var _0x350ff5 = _0x5659be;
            this[_0x350ff5(0xcf5)] = _0x3276da;
        }
        get [_0x5659be(0xcfd)]() {
            return this['_colorRGBKeysCount'];
        }
        get ['colorAlphaKeysCount']() {
            return this['_colorAlphaKeysCount'];
        }
        get [_0x5659be(0xcfe)]() {
            var _0x5b3f06 = _0x5659be;
            return this[_0x5b3f06(0xcf6)];
        }
        get ['maxColorAlphaKeysCount']() {
            var _0x3503f3 = _0x5659be;
            return this[_0x3503f3(0xcf7)];
        }
        [_0x5659be(0xcff)](_0x12412f, _0x14cf85) {
            var _0x57ef81 = _0x5659be;
            if (this[_0x57ef81(0xcf8)] < this['_maxColorRGBKeysCount']) {
                var _0xe3d4ea = this[_0x57ef81(0xcf8)] * 0x4;
                this[_0x57ef81(0xcfb)][_0xe3d4ea] = _0x12412f, this[_0x57ef81(0xcfb)][_0xe3d4ea + 0x1] = _0x14cf85['r'], this[_0x57ef81(0xcfb)][_0xe3d4ea + 0x2] = _0x14cf85['g'], this['_rgbElements'][_0xe3d4ea + 0x3] = _0x14cf85['b'], this[_0x57ef81(0xcf8)]++;
            } else
                console[_0x57ef81(0x24e)](_0x57ef81(0xd00) + this[_0x57ef81(0xcf6)]);
        }
        ['addColorAlpha'](_0x4fabe7, _0x1ebc7a) {
            var _0x1c58c3 = _0x5659be;
            if (this[_0x1c58c3(0xcf9)] < this['_maxColorAlphaKeysCount']) {
                var _0x56075e = this['_colorAlphaKeysCount'] * 0x2;
                this[_0x1c58c3(0xcfa)][_0x56075e] = _0x4fabe7, this['_alphaElements'][_0x56075e + 0x1] = _0x1ebc7a, this[_0x1c58c3(0xcf9)]++;
            } else
                console['warn'](_0x1c58c3(0xd00) + this[_0x1c58c3(0xcf7)]);
        }
        [_0x5659be(0xd01)](_0x237503, _0x389ef7, _0x2665b2) {
            var _0x534145 = _0x5659be;
            if (_0x237503 < this['_colorRGBKeysCount']) {
                var _0x11aa84 = _0x237503 * 0x4;
                this['_rgbElements'][_0x11aa84] = _0x389ef7, this[_0x534145(0xcfb)][_0x11aa84 + 0x1] = _0x2665b2['r'], this['_rgbElements'][_0x11aa84 + 0x2] = _0x2665b2['g'], this[_0x534145(0xcfb)][_0x11aa84 + 0x3] = _0x2665b2['b'];
            } else
                console[_0x534145(0x24e)](_0x534145(0xd02) + this['_colorRGBKeysCount']);
        }
        [_0x5659be(0xd03)](_0x55c004, _0x5dd8b0, _0x54e444) {
            var _0x3245bc = _0x5659be;
            if (_0x55c004 < this[_0x3245bc(0xcf9)]) {
                var _0x109f2c = _0x55c004 * 0x2;
                this['_alphaElements'][_0x109f2c] = _0x5dd8b0, this[_0x3245bc(0xcfa)][_0x109f2c + 0x1] = _0x54e444;
            } else
                console[_0x3245bc(0x24e)](_0x3245bc(0xd04) + this['_colorAlphaKeysCount']);
        }
        [_0x5659be(0xd05)](_0x388f21, _0x566f1d, _0x51911e = 0x0, _0x25987c = ![]) {
            var _0x288f34 = _0x5659be;
            _0x388f21 = Math[_0x288f34(0x204)](Math[_0x288f34(0x205)](_0x388f21, 0x0), 0x1);
            var _0xb441e = this[_0x288f34(0xcfb)], _0x327b12 = _0x51911e;
            if (_0x25987c)
                for (var _0xe8197c = _0x327b12; _0xe8197c >= 0x0; _0xe8197c--) {
                    var _0x1d6d67 = _0xe8197c * 0x4, _0x1fe72b = _0xb441e[_0x1d6d67];
                    if (_0x388f21 === _0x1fe72b)
                        return _0x566f1d['r'] = _0xb441e[_0x1d6d67 + 0x1], _0x566f1d['g'] = _0xb441e[_0x1d6d67 + 0x2], _0x566f1d['b'] = _0xb441e[_0x1d6d67 + 0x3], _0x327b12;
                    switch (this[_0x288f34(0xcf5)]) {
                    case _0x315143[_0x288f34(0xd06)]:
                        if (_0x388f21 > _0x1fe72b) {
                            var _0x3af179 = _0xb441e[_0x1d6d67 + 0x4];
                            if (_0x388f21 > _0x3af179)
                                throw _0x288f34(0xd07);
                            var _0x1ccb1c = _0x3af179 - _0x1fe72b, _0x5ab3cd = _0x3af179 - _0x388f21, _0x49b83e = _0x388f21 - _0x1fe72b;
                            return _0x566f1d['r'] = (_0x5ab3cd * _0xb441e[_0x1d6d67 + 0x1] + _0x49b83e * _0xb441e[_0x1d6d67 + 0x5]) / _0x1ccb1c, _0x566f1d['g'] = (_0x5ab3cd * _0xb441e[_0x1d6d67 + 0x2] + _0x49b83e * _0xb441e[_0x1d6d67 + 0x6]) / _0x1ccb1c, _0x566f1d['b'] = (_0x5ab3cd * _0xb441e[_0x1d6d67 + 0x3] + _0x49b83e * _0xb441e[_0x1d6d67 + 0x7]) / _0x1ccb1c, _0x327b12;
                        } else {
                            _0x327b12--;
                            continue;
                        }
                    case _0x315143[_0x288f34(0xcf4)]:
                        if (_0x388f21 > _0x1fe72b) {
                            if (_0x388f21 > _0xb441e[_0x1d6d67 + 0x4])
                                throw _0x288f34(0xd07);
                            return _0x566f1d['r'] = _0xb441e[_0x1d6d67 + 0x5], _0x566f1d['g'] = _0xb441e[_0x1d6d67 + 0x6], _0x566f1d['b'] = _0xb441e[_0x1d6d67 + 0x7], _0x327b12;
                        } else {
                            _0x327b12--;
                            continue;
                        }
                    default:
                        throw _0x288f34(0xd08);
                    }
                }
            else
                for (var _0xe8197c = 0x0, _0x123d80 = this[_0x288f34(0xcfb)][_0x288f34(0x1ff)]; _0xe8197c < _0x123d80; _0xe8197c++) {
                    _0x1d6d67 = _0xe8197c * 0x4;
                    var _0x3af179 = _0xb441e[_0x1d6d67];
                    if (_0x388f21 === _0x3af179)
                        return _0x566f1d['r'] = _0xb441e[_0x1d6d67 + 0x1], _0x566f1d['g'] = _0xb441e[_0x1d6d67 + 0x2], _0x566f1d['b'] = _0xb441e[_0x1d6d67 + 0x3], _0x327b12;
                    switch (this[_0x288f34(0xcf5)]) {
                    case _0x315143[_0x288f34(0xd06)]:
                        if (_0x388f21 < _0x3af179) {
                            var _0x1fe72b = _0xb441e[_0x1d6d67 - 0x4];
                            if (_0x388f21 < _0x1fe72b)
                                throw _0x288f34(0xd07);
                            var _0x1ccb1c = _0x3af179 - _0x1fe72b, _0x5ab3cd = _0x3af179 - _0x388f21, _0x49b83e = _0x388f21 - _0x1fe72b;
                            return _0x566f1d['r'] = (_0x5ab3cd * _0xb441e[_0x1d6d67 - 0x3] + _0x49b83e * _0xb441e[_0x1d6d67 + 0x1]) / _0x1ccb1c, _0x566f1d['g'] = (_0x5ab3cd * _0xb441e[_0x1d6d67 - 0x2] + _0x49b83e * _0xb441e[_0x1d6d67 + 0x2]) / _0x1ccb1c, _0x566f1d['b'] = (_0x5ab3cd * _0xb441e[_0x1d6d67 - 0x1] + _0x49b83e * _0xb441e[_0x1d6d67 + 0x3]) / _0x1ccb1c, _0x327b12;
                        } else {
                            _0x327b12++;
                            continue;
                        }
                    case _0x315143[_0x288f34(0xcf4)]:
                        if (_0x388f21 < _0x3af179) {
                            if (_0x388f21 < _0xb441e[_0x1d6d67 - 0x4])
                                throw _0x288f34(0xd07);
                            return _0x566f1d['r'] = _0xb441e[_0x1d6d67 + 0x1], _0x566f1d['g'] = _0xb441e[_0x1d6d67 + 0x2], _0x566f1d['b'] = _0xb441e[_0x1d6d67 + 0x3], _0x327b12;
                        } else {
                            _0x327b12++;
                            continue;
                        }
                    default:
                        throw 'Gradient:unknown\x20mode.';
                    }
                }
            return _0x327b12;
        }
        [_0x5659be(0xd09)](_0x43a1e2, _0x43ce42, _0x32c5c0 = 0x0, _0x4a7c88 = ![]) {
            var _0x5c3cf6 = _0x5659be;
            _0x43a1e2 = Math[_0x5c3cf6(0x204)](Math[_0x5c3cf6(0x205)](_0x43a1e2, 0x0), 0x1);
            var _0x1339d4 = this[_0x5c3cf6(0xcfa)], _0x1fb375 = _0x32c5c0;
            if (_0x4a7c88)
                for (var _0x50623d = _0x1fb375; _0x50623d >= 0x0; _0x50623d--) {
                    var _0x15482f = _0x50623d * 0x2, _0x283a37 = _0x1339d4[_0x15482f];
                    if (_0x43a1e2 === _0x283a37)
                        return _0x43ce42['a'] = _0x1339d4[_0x15482f + 0x1], _0x1fb375;
                    switch (this[_0x5c3cf6(0xcf5)]) {
                    case _0x315143['Blend']:
                        if (_0x43a1e2 > _0x283a37) {
                            var _0x40a436 = _0x1339d4[_0x15482f + 0x2];
                            if (_0x43a1e2 > _0x40a436)
                                throw _0x5c3cf6(0xd07);
                            var _0x1905eb = _0x40a436 - _0x283a37, _0x513922 = _0x40a436 - _0x43a1e2, _0x56534e = _0x43a1e2 - _0x283a37;
                            return _0x43ce42['a'] = (_0x513922 * _0x1339d4[_0x15482f + 0x1] + _0x56534e * _0x1339d4[_0x15482f + 0x3]) / _0x1905eb, _0x1fb375;
                        } else {
                            _0x1fb375--;
                            continue;
                        }
                    case _0x315143[_0x5c3cf6(0xcf4)]:
                        if (_0x43a1e2 > _0x283a37) {
                            if (_0x43a1e2 > _0x1339d4[_0x15482f + 0x2])
                                throw _0x5c3cf6(0xd07);
                            return _0x43ce42['a'] = _0x1339d4[_0x15482f + 0x3], _0x1fb375;
                        } else {
                            _0x1fb375--;
                            continue;
                        }
                    default:
                        throw _0x5c3cf6(0xd08);
                    }
                }
            else
                for (var _0x50623d = _0x1fb375, _0x28b5db = this[_0x5c3cf6(0xcfa)][_0x5c3cf6(0x1ff)]; _0x50623d < _0x28b5db; _0x50623d++) {
                    var _0x15482f = _0x50623d * 0x2, _0x40a436 = _0x1339d4[_0x15482f];
                    if (_0x43a1e2 === _0x40a436)
                        return _0x43ce42['a'] = _0x1339d4[_0x15482f + 0x1], _0x1fb375;
                    switch (this[_0x5c3cf6(0xcf5)]) {
                    case _0x315143[_0x5c3cf6(0xd06)]:
                        if (_0x43a1e2 < _0x40a436) {
                            var _0x283a37 = _0x1339d4[_0x15482f - 0x2];
                            if (_0x43a1e2 < _0x283a37)
                                throw _0x5c3cf6(0xd07);
                            var _0x1905eb = _0x40a436 - _0x283a37, _0x513922 = _0x40a436 - _0x43a1e2, _0x56534e = _0x43a1e2 - _0x283a37;
                            return _0x43ce42['a'] = (_0x513922 * _0x1339d4[_0x15482f - 0x1] + _0x56534e * _0x1339d4[_0x15482f + 0x1]) / _0x1905eb, _0x1fb375;
                        } else {
                            _0x1fb375++;
                            continue;
                        }
                    case _0x315143[_0x5c3cf6(0xcf4)]:
                        if (_0x43a1e2 < _0x40a436) {
                            if (_0x43a1e2 < _0x1339d4[_0x15482f - 0x2])
                                throw _0x5c3cf6(0xd07);
                            return _0x43ce42['a'] = _0x1339d4[_0x15482f + 0x1], _0x1fb375;
                        } else {
                            _0x1fb375++;
                            continue;
                        }
                    default:
                        throw 'Gradient:unknown\x20mode.';
                    }
                }
            return _0x1fb375;
        }
        [_0x5659be(0x1f0)](_0x31e133) {
            var _0x1c1e6e = _0x5659be, _0x7f4f59 = _0x31e133, _0x259223, _0x59746d;
            _0x7f4f59[_0x1c1e6e(0xcf9)] = this['_colorAlphaKeysCount'];
            var _0x56e669 = _0x7f4f59[_0x1c1e6e(0xcfa)];
            for (_0x259223 = 0x0, _0x59746d = this[_0x1c1e6e(0xcfa)][_0x1c1e6e(0x1ff)]; _0x259223 < _0x59746d; _0x259223++)
                _0x56e669[_0x259223] = this[_0x1c1e6e(0xcfa)][_0x259223];
            _0x7f4f59[_0x1c1e6e(0xcf8)] = this['_colorRGBKeysCount'];
            var _0x1d78d1 = _0x7f4f59[_0x1c1e6e(0xcfb)];
            for (_0x259223 = 0x0, _0x59746d = this['_rgbElements'][_0x1c1e6e(0x1ff)]; _0x259223 < _0x59746d; _0x259223++)
                _0x1d78d1[_0x259223] = this[_0x1c1e6e(0xcfb)][_0x259223];
        }
        [_0x5659be(0x1f4)]() {
            var _0x19452c = _0x5659be, _0xacdf30 = new _0x9a260b(this[_0x19452c(0xcf6)], this[_0x19452c(0xcf7)]);
            return this[_0x19452c(0x1f0)](_0xacdf30), _0xacdf30;
        }
    }
    class _0x29e0b1 {
        constructor(_0x3130ac, _0x37ef2c, _0x20e3e8) {
            var _0x53bd99 = _0x5659be;
            this[_0x53bd99(0xbb9)] = _0x3130ac, this[_0x53bd99(0xd0a)] = _0x37ef2c, this['_maxCount'] = _0x20e3e8;
        }
        get [_0x5659be(0x268)]() {
            var _0x1e1be7 = _0x5659be;
            return this[_0x1e1be7(0xbb9)];
        }
        get [_0x5659be(0xd0b)]() {
            return this['_minCount'];
        }
        get [_0x5659be(0xd0c)]() {
            var _0x443f93 = _0x5659be;
            return this[_0x443f93(0xd0d)];
        }
        ['cloneTo'](_0x55281d) {
            var _0x6e231 = _0x5659be, _0x4d78fd = _0x55281d;
            _0x4d78fd['_time'] = this[_0x6e231(0xbb9)], _0x4d78fd[_0x6e231(0xd0a)] = this[_0x6e231(0xd0a)], _0x4d78fd[_0x6e231(0xd0d)] = this['_maxCount'];
        }
        [_0x5659be(0x1f4)]() {
            var _0x2932c0 = _0x5659be, _0x1c4aeb = new _0x29e0b1(this[_0x2932c0(0xbb9)], this[_0x2932c0(0xd0a)], this[_0x2932c0(0xd0d)]);
            return this[_0x2932c0(0x1f0)](_0x1c4aeb), _0x1c4aeb;
        }
    }
    class _0x264d78 {
        constructor() {
            var _0x352c74 = _0x5659be;
            this[_0x352c74(0xa68)] = 0x0, this[_0x352c74(0xd0e)] = null, this['_constantMin'] = null, this[_0x352c74(0xd0f)] = null, this['_gradient'] = null, this['_gradientMin'] = null, this[_0x352c74(0xd10)] = null;
        }
        static [_0x5659be(0xd11)](_0x450725) {
            var _0x366b68 = _0x5659be, _0x54eefe = new _0x264d78();
            return _0x54eefe[_0x366b68(0xa68)] = 0x0, _0x54eefe[_0x366b68(0xd0e)] = _0x450725, _0x54eefe;
        }
        static ['createByGradient'](_0xd230c3) {
            var _0x2f09de = _0x5659be, _0x4d7e6a = new _0x264d78();
            return _0x4d7e6a[_0x2f09de(0xa68)] = 0x1, _0x4d7e6a[_0x2f09de(0xd12)] = _0xd230c3, _0x4d7e6a;
        }
        static [_0x5659be(0xd13)](_0x50d2ea, _0x4d75bb) {
            var _0x1c4d13 = _0x5659be, _0x1087a0 = new _0x264d78();
            return _0x1087a0[_0x1c4d13(0xa68)] = 0x2, _0x1087a0['_constantMin'] = _0x50d2ea, _0x1087a0['_constantMax'] = _0x4d75bb, _0x1087a0;
        }
        static [_0x5659be(0xd14)](_0x67ed96, _0x3a22bc) {
            var _0x50d53a = _0x5659be, _0xa42704 = new _0x264d78();
            return _0xa42704['_type'] = 0x3, _0xa42704['_gradientMin'] = _0x67ed96, _0xa42704[_0x50d53a(0xd10)] = _0x3a22bc, _0xa42704;
        }
        get ['type']() {
            var _0x5cc5a8 = _0x5659be;
            return this[_0x5cc5a8(0xa68)];
        }
        get [_0x5659be(0xd15)]() {
            var _0x2035c3 = _0x5659be;
            return this[_0x2035c3(0xd0e)];
        }
        get ['constantMin']() {
            var _0x7e4eaa = _0x5659be;
            return this[_0x7e4eaa(0xd16)];
        }
        get [_0x5659be(0xd17)]() {
            return this['_constantMax'];
        }
        get [_0x5659be(0xd18)]() {
            var _0x326bc2 = _0x5659be;
            return this[_0x326bc2(0xd12)];
        }
        get [_0x5659be(0xd19)]() {
            var _0x33b6b4 = _0x5659be;
            return this[_0x33b6b4(0xd1a)];
        }
        get ['gradientMax']() {
            var _0x2c57a6 = _0x5659be;
            return this[_0x2c57a6(0xd10)];
        }
        ['cloneTo'](_0x183be3) {
            var _0x421da2 = _0x5659be, _0x1cc4f0 = _0x183be3;
            _0x1cc4f0[_0x421da2(0xa68)] = this[_0x421da2(0xa68)], this[_0x421da2(0xd0e)][_0x421da2(0x1f0)](_0x1cc4f0[_0x421da2(0xd0e)]), this[_0x421da2(0xd16)][_0x421da2(0x1f0)](_0x1cc4f0['_constantMin']), this[_0x421da2(0xd0f)][_0x421da2(0x1f0)](_0x1cc4f0['_constantMax']), this[_0x421da2(0xd12)]['cloneTo'](_0x1cc4f0['_gradient']), this[_0x421da2(0xd1a)][_0x421da2(0x1f0)](_0x1cc4f0[_0x421da2(0xd1a)]), this[_0x421da2(0xd10)][_0x421da2(0x1f0)](_0x1cc4f0[_0x421da2(0xd10)]);
        }
        [_0x5659be(0x1f4)]() {
            var _0x1ab145 = _0x5659be, _0x5986b0 = new _0x264d78();
            return this[_0x1ab145(0x1f0)](_0x5986b0), _0x5986b0;
        }
    }
    class _0x9eae20 {
        constructor(_0x7dab31) {
            var _0x1a2726 = _0x5659be;
            this[_0x1a2726(0xd1b)] = _0x7dab31;
        }
        get [_0x5659be(0x462)]() {
            return this['_color'];
        }
        [_0x5659be(0x1f0)](_0x511eaf) {
            var _0x42ad03 = _0x5659be, _0xf45cb = _0x511eaf;
            this[_0x42ad03(0xd1b)][_0x42ad03(0x1f0)](_0xf45cb[_0x42ad03(0xd1b)]), _0xf45cb['enable'] = this[_0x42ad03(0x650)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x557633 = _0x5659be, _0x4b1cb6;
            switch (this['_color'][_0x557633(0x2ae)]) {
            case 0x0:
                _0x4b1cb6 = _0x264d78[_0x557633(0xd11)](this[_0x557633(0xd1b)][_0x557633(0xd15)][_0x557633(0x1f4)]());
                break;
            case 0x1:
                _0x4b1cb6 = _0x264d78[_0x557633(0xd1c)](this[_0x557633(0xd1b)][_0x557633(0xd18)][_0x557633(0x1f4)]());
                break;
            case 0x2:
                _0x4b1cb6 = _0x264d78[_0x557633(0xd13)](this[_0x557633(0xd1b)][_0x557633(0xd1d)][_0x557633(0x1f4)](), this[_0x557633(0xd1b)][_0x557633(0xd17)]['clone']());
                break;
            case 0x3:
                _0x4b1cb6 = _0x264d78['createByRandomTwoGradient'](this[_0x557633(0xd1b)][_0x557633(0xd19)][_0x557633(0x1f4)](), this[_0x557633(0xd1b)][_0x557633(0xd1e)]['clone']());
                break;
            }
            var _0x5b697e = new _0x9eae20(_0x4b1cb6);
            return _0x5b697e[_0x557633(0x650)] = this[_0x557633(0x650)], _0x5b697e;
        }
    }
    class _0x169ba5 {
        constructor() {
            var _0x564558 = _0x5659be;
            this['_type'] = 0x0, this[_0x564558(0xd0e)] = 0x0, this[_0x564558(0xd1f)] = null, this[_0x564558(0xd16)] = 0x0, this[_0x564558(0xd0f)] = 0x0, this[_0x564558(0xd20)] = null, this[_0x564558(0xd21)] = null;
        }
        static [_0x5659be(0xd11)](_0x13824c = 0x0) {
            var _0x5ef255 = _0x5659be, _0x3f8676 = new _0x169ba5();
            return _0x3f8676['_type'] = 0x0, _0x3f8676[_0x5ef255(0xd0e)] = _0x13824c, _0x3f8676;
        }
        static [_0x5659be(0xd22)](_0x12bd17) {
            var _0x570dec = _0x5659be, _0xbe119e = new _0x169ba5();
            return _0xbe119e[_0x570dec(0xa68)] = 0x1, _0xbe119e[_0x570dec(0xd1f)] = _0x12bd17, _0xbe119e;
        }
        static [_0x5659be(0xd13)](_0x2977bc = 0x0, _0x24f4be = 0x0) {
            var _0x3b84e7 = _0x5659be, _0x316738 = new _0x169ba5();
            return _0x316738['_type'] = 0x2, _0x316738['_constantMin'] = _0x2977bc, _0x316738[_0x3b84e7(0xd0f)] = _0x24f4be, _0x316738;
        }
        static ['createByRandomTwoOverTime'](_0x3177ac, _0xd1cc80) {
            var _0x22f81b = _0x5659be, _0x443143 = new _0x169ba5();
            return _0x443143['_type'] = 0x3, _0x443143[_0x22f81b(0xd20)] = _0x3177ac, _0x443143['_overTimeMax'] = _0xd1cc80, _0x443143;
        }
        get [_0x5659be(0x2ae)]() {
            var _0x5be569 = _0x5659be;
            return this[_0x5be569(0xa68)];
        }
        get ['constant']() {
            var _0x434cf0 = _0x5659be;
            return this[_0x434cf0(0xd0e)];
        }
        get ['frameOverTimeData']() {
            var _0x338eae = _0x5659be;
            return this[_0x338eae(0xd1f)];
        }
        get ['constantMin']() {
            var _0x13b3ab = _0x5659be;
            return this[_0x13b3ab(0xd16)];
        }
        get [_0x5659be(0xd17)]() {
            var _0x5c5945 = _0x5659be;
            return this[_0x5c5945(0xd0f)];
        }
        get ['frameOverTimeDataMin']() {
            var _0x18973c = _0x5659be;
            return this[_0x18973c(0xd20)];
        }
        get [_0x5659be(0xd23)]() {
            var _0x3e1cdf = _0x5659be;
            return this[_0x3e1cdf(0xd21)];
        }
        [_0x5659be(0x1f0)](_0x111967) {
            var _0x5bdc73 = _0x5659be, _0x526fb8 = _0x111967;
            _0x526fb8[_0x5bdc73(0xa68)] = this[_0x5bdc73(0xa68)], _0x526fb8[_0x5bdc73(0xd0e)] = this['_constant'], this['_overTime'] && this[_0x5bdc73(0xd1f)][_0x5bdc73(0x1f0)](_0x526fb8[_0x5bdc73(0xd1f)]), _0x526fb8['_constantMin'] = this[_0x5bdc73(0xd16)], _0x526fb8[_0x5bdc73(0xd0f)] = this[_0x5bdc73(0xd0f)], this['_overTimeMin'] && this[_0x5bdc73(0xd20)]['cloneTo'](_0x526fb8[_0x5bdc73(0xd20)]), this[_0x5bdc73(0xd21)] && this['_overTimeMax']['cloneTo'](_0x526fb8[_0x5bdc73(0xd21)]);
        }
        [_0x5659be(0x1f4)]() {
            var _0x37b455 = new _0x169ba5();
            return this['cloneTo'](_0x37b455), _0x37b455;
        }
    }
    class _0x4ebad0 {
        constructor() {
            var _0x18f95c = _0x5659be;
            this['_type'] = 0x0, this['_separateAxes'] = ![], this[_0x18f95c(0xd0e)] = 0x0, this[_0x18f95c(0xd24)] = null, this[_0x18f95c(0xd12)] = null, this[_0x18f95c(0xd25)] = null, this[_0x18f95c(0xd26)] = null, this['_gradientZ'] = null, this['_gradientW'] = null, this[_0x18f95c(0xd16)] = 0x0, this[_0x18f95c(0xd0f)] = 0x0, this[_0x18f95c(0xd27)] = null, this[_0x18f95c(0xd28)] = null, this[_0x18f95c(0xd1a)] = null, this[_0x18f95c(0xd10)] = null, this[_0x18f95c(0xd29)] = null, this['_gradientXMax'] = null, this[_0x18f95c(0xd2a)] = null, this[_0x18f95c(0xd2b)] = null, this[_0x18f95c(0xd2c)] = null, this['_gradientZMax'] = null, this[_0x18f95c(0xd2d)] = null, this['_gradientWMax'] = null;
        }
        static [_0x5659be(0xd11)](_0x50dd6f) {
            var _0xa51058 = _0x5659be, _0x276ca5 = new _0x4ebad0();
            return _0x276ca5[_0xa51058(0xa68)] = 0x0, _0x276ca5[_0xa51058(0xd2e)] = ![], _0x276ca5[_0xa51058(0xd0e)] = _0x50dd6f, _0x276ca5;
        }
        static [_0x5659be(0xd2f)](_0x22a4bd) {
            var _0x418cce = _0x5659be, _0x59d884 = new _0x4ebad0();
            return _0x59d884[_0x418cce(0xa68)] = 0x0, _0x59d884[_0x418cce(0xd2e)] = !![], _0x59d884[_0x418cce(0xd24)] = _0x22a4bd, _0x59d884;
        }
        static [_0x5659be(0xd1c)](_0x20b4ed) {
            var _0x3f9d19 = _0x5659be, _0x15d2bb = new _0x4ebad0();
            return _0x15d2bb[_0x3f9d19(0xa68)] = 0x1, _0x15d2bb[_0x3f9d19(0xd2e)] = ![], _0x15d2bb[_0x3f9d19(0xd12)] = _0x20b4ed, _0x15d2bb;
        }
        static [_0x5659be(0xd30)](_0x26747c, _0x24cf4b, _0x14ca6c) {
            var _0x113366 = _0x5659be, _0x3b1103 = new _0x4ebad0();
            return _0x3b1103[_0x113366(0xa68)] = 0x1, _0x3b1103[_0x113366(0xd2e)] = !![], _0x3b1103[_0x113366(0xd25)] = _0x26747c, _0x3b1103[_0x113366(0xd26)] = _0x24cf4b, _0x3b1103[_0x113366(0xd31)] = _0x14ca6c, _0x3b1103;
        }
        static [_0x5659be(0xd13)](_0x1018bb, _0x3148e4) {
            var _0x1c31c3 = _0x5659be, _0x1b9c0a = new _0x4ebad0();
            return _0x1b9c0a[_0x1c31c3(0xa68)] = 0x2, _0x1b9c0a[_0x1c31c3(0xd2e)] = ![], _0x1b9c0a[_0x1c31c3(0xd16)] = _0x1018bb, _0x1b9c0a[_0x1c31c3(0xd0f)] = _0x3148e4, _0x1b9c0a;
        }
        static [_0x5659be(0xd32)](_0x502698, _0x276c2a) {
            var _0x29b6b8 = _0x5659be, _0x43b9f0 = new _0x4ebad0();
            return _0x43b9f0['_type'] = 0x2, _0x43b9f0[_0x29b6b8(0xd2e)] = !![], _0x43b9f0[_0x29b6b8(0xd27)] = _0x502698, _0x43b9f0['_constantMaxSeparate'] = _0x276c2a, _0x43b9f0;
        }
        static [_0x5659be(0xd14)](_0x89cf70, _0x1f2852) {
            var _0x183907 = _0x5659be, _0x1fd6a5 = new _0x4ebad0();
            return _0x1fd6a5[_0x183907(0xa68)] = 0x3, _0x1fd6a5[_0x183907(0xd2e)] = ![], _0x1fd6a5['_gradientMin'] = _0x89cf70, _0x1fd6a5[_0x183907(0xd10)] = _0x1f2852, _0x1fd6a5;
        }
        static ['createByRandomTwoGradientSeparate'](_0x133af6, _0x5931ad, _0x561e00, _0x5e6ea1, _0x56056b, _0x2a103a, _0x58d5a7, _0x41f7f9) {
            var _0x48cf1d = _0x5659be, _0x2fab85 = new _0x4ebad0();
            return _0x2fab85[_0x48cf1d(0xa68)] = 0x3, _0x2fab85[_0x48cf1d(0xd2e)] = !![], _0x2fab85[_0x48cf1d(0xd29)] = _0x133af6, _0x2fab85[_0x48cf1d(0xd33)] = _0x5931ad, _0x2fab85[_0x48cf1d(0xd2a)] = _0x561e00, _0x2fab85[_0x48cf1d(0xd2b)] = _0x5e6ea1, _0x2fab85[_0x48cf1d(0xd2c)] = _0x56056b, _0x2fab85[_0x48cf1d(0xd34)] = _0x2a103a, _0x2fab85['_gradientWMin'] = _0x58d5a7, _0x2fab85[_0x48cf1d(0xd35)] = _0x41f7f9, _0x2fab85;
        }
        get [_0x5659be(0x2ae)]() {
            var _0x2ef9ba = _0x5659be;
            return this[_0x2ef9ba(0xa68)];
        }
        get [_0x5659be(0xd36)]() {
            var _0x337e31 = _0x5659be;
            return this[_0x337e31(0xd2e)];
        }
        get ['constant']() {
            var _0x347d3b = _0x5659be;
            return this[_0x347d3b(0xd0e)];
        }
        get [_0x5659be(0xd37)]() {
            var _0x4e3bd4 = _0x5659be;
            return this[_0x4e3bd4(0xd24)];
        }
        get [_0x5659be(0xd18)]() {
            var _0x5d0d8a = _0x5659be;
            return this[_0x5d0d8a(0xd12)];
        }
        get [_0x5659be(0xd38)]() {
            return this['_gradientX'];
        }
        get [_0x5659be(0xd39)]() {
            return this['_gradientY'];
        }
        get [_0x5659be(0xd3a)]() {
            var _0x142a3f = _0x5659be;
            return this[_0x142a3f(0xd31)];
        }
        get ['gradientW']() {
            var _0xbf19c7 = _0x5659be;
            return this[_0xbf19c7(0xd3b)];
        }
        get [_0x5659be(0xd1d)]() {
            return this['_constantMin'];
        }
        get [_0x5659be(0xd17)]() {
            var _0x5cdc13 = _0x5659be;
            return this[_0x5cdc13(0xd0f)];
        }
        get [_0x5659be(0xd3c)]() {
            var _0x548533 = _0x5659be;
            return this[_0x548533(0xd27)];
        }
        get [_0x5659be(0xd3d)]() {
            var _0x23ddac = _0x5659be;
            return this[_0x23ddac(0xd28)];
        }
        get ['gradientMin']() {
            return this['_gradientMin'];
        }
        get [_0x5659be(0xd1e)]() {
            return this['_gradientMax'];
        }
        get ['gradientXMin']() {
            return this['_gradientXMin'];
        }
        get [_0x5659be(0xd3e)]() {
            var _0x275758 = _0x5659be;
            return this[_0x275758(0xd33)];
        }
        get ['gradientYMin']() {
            var _0x2aa29c = _0x5659be;
            return this[_0x2aa29c(0xd2a)];
        }
        get ['gradientYMax']() {
            var _0x3cd911 = _0x5659be;
            return this[_0x3cd911(0xd2b)];
        }
        get [_0x5659be(0xd3f)]() {
            var _0x1605f5 = _0x5659be;
            return this[_0x1605f5(0xd2c)];
        }
        get ['gradientZMax']() {
            return this['_gradientZMax'];
        }
        get [_0x5659be(0xd40)]() {
            var _0x20e1b4 = _0x5659be;
            return this[_0x20e1b4(0xd2d)];
        }
        get [_0x5659be(0xd41)]() {
            var _0x48d0ec = _0x5659be;
            return this[_0x48d0ec(0xd35)];
        }
        ['cloneTo'](_0x473c69) {
            var _0x260b64 = _0x5659be, _0x132974 = _0x473c69;
            _0x132974['_type'] = this['_type'], _0x132974[_0x260b64(0xd2e)] = this[_0x260b64(0xd2e)], _0x132974[_0x260b64(0xd0e)] = this['_constant'], this[_0x260b64(0xd24)][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd24)]), this[_0x260b64(0xd12)]['cloneTo'](_0x132974[_0x260b64(0xd12)]), this[_0x260b64(0xd25)][_0x260b64(0x1f0)](_0x132974['_gradientX']), this['_gradientY'][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd26)]), this[_0x260b64(0xd31)][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd31)]), _0x132974[_0x260b64(0xd16)] = this[_0x260b64(0xd16)], _0x132974[_0x260b64(0xd0f)] = this[_0x260b64(0xd0f)], this['_constantMinSeparate']['cloneTo'](_0x132974['_constantMinSeparate']), this[_0x260b64(0xd28)][_0x260b64(0x1f0)](_0x132974['_constantMaxSeparate']), this['_gradientMin'][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd1a)]), this[_0x260b64(0xd10)][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd10)]), this['_gradientXMin']['cloneTo'](_0x132974[_0x260b64(0xd29)]), this[_0x260b64(0xd33)][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd33)]), this[_0x260b64(0xd2a)]['cloneTo'](_0x132974[_0x260b64(0xd2a)]), this[_0x260b64(0xd2b)][_0x260b64(0x1f0)](_0x132974[_0x260b64(0xd2b)]), this[_0x260b64(0xd2c)]['cloneTo'](_0x132974['_gradientZMin']), this[_0x260b64(0xd34)][_0x260b64(0x1f0)](_0x132974['_gradientZMax']);
        }
        ['clone']() {
            var _0x5ba686 = _0x5659be, _0x40ae84 = new _0x4ebad0();
            return this[_0x5ba686(0x1f0)](_0x40ae84), _0x40ae84;
        }
    }
    class _0x51b483 {
        constructor() {
            var _0x3b16b0 = _0x5659be;
            this[_0x3b16b0(0xd42)] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get [_0x5659be(0xd43)]() {
            var _0x210eb4 = _0x5659be;
            return this[_0x210eb4(0xd42)] / 0x2;
        }
        [_0x5659be(0x201)](_0x518baa, _0x5079de) {
            var _0x43ddfd = _0x5659be;
            this['_currentLength'] < 0x8 ? (this['_currentLength'] === 0x6 && _0x518baa !== 0x1 && (_0x518baa = 0x1, console[_0x43ddfd(0x943)](_0x43ddfd(0xd44))), this[_0x43ddfd(0x860)][this[_0x43ddfd(0xd42)]++] = _0x518baa, this[_0x43ddfd(0x860)][this[_0x43ddfd(0xd42)]++] = _0x5079de) : console[_0x43ddfd(0x943)]('Warning:data\x20count\x20must\x20lessEqual\x20than\x204');
        }
        [_0x5659be(0x1f0)](_0x427e26) {
            var _0x4f5993 = _0x5659be, _0x135ee0 = _0x427e26;
            _0x135ee0['_currentLength'] = this['_currentLength'];
            var _0x317951 = _0x135ee0[_0x4f5993(0x860)];
            for (var _0x3ea343 = 0x0, _0x27893 = this[_0x4f5993(0x860)]['length']; _0x3ea343 < _0x27893; _0x3ea343++) {
                _0x317951[_0x3ea343] = this[_0x4f5993(0x860)][_0x3ea343];
            }
        }
        ['clone']() {
            var _0x53829f = new _0x51b483();
            return this['cloneTo'](_0x53829f), _0x53829f;
        }
    }
    class _0x2f153d {
        constructor() {
            var _0x4c57d2 = _0x5659be;
            this[_0x4c57d2(0xd42)] = 0x0, this[_0x4c57d2(0x860)] = new Float32Array(0x8);
        }
        get [_0x5659be(0xd43)]() {
            var _0x3803db = _0x5659be;
            return this[_0x3803db(0xd42)] / 0x2;
        }
        [_0x5659be(0x201)](_0x421fbe, _0x416cee) {
            var _0x23936b = _0x5659be;
            this[_0x23936b(0xd42)] < 0x8 ? (this[_0x23936b(0xd42)] === 0x6 && _0x421fbe !== 0x1 && (_0x421fbe = 0x1, console[_0x23936b(0x943)](_0x23936b(0xd45))), this[_0x23936b(0x860)][this[_0x23936b(0xd42)]++] = _0x421fbe, this[_0x23936b(0x860)][this[_0x23936b(0xd42)]++] = _0x416cee) : console['log'](_0x23936b(0xd46));
        }
        [_0x5659be(0xd47)](_0x1b89c1) {
            var _0x547e6c = _0x5659be;
            return this[_0x547e6c(0x860)][_0x1b89c1 * 0x2];
        }
        [_0x5659be(0xd48)](_0x24a8a9) {
            return this['_elements'][_0x24a8a9 * 0x2 + 0x1];
        }
        [_0x5659be(0xd49)]() {
            var _0x4e9323 = _0x5659be, _0x3f8ddb = 0x0, _0x49e53c = 0x0;
            for (var _0x134812 = 0x0, _0x3a93be = this[_0x4e9323(0xd42)] - 0x2; _0x134812 < _0x3a93be; _0x134812 += 0x2) {
                var _0x263b5b = this[_0x4e9323(0x860)][_0x134812 + 0x1];
                _0x263b5b += this[_0x4e9323(0x860)][_0x134812 + 0x3], _0x263b5b = _0x263b5b * (this[_0x4e9323(0x860)][_0x134812 + 0x2] - this[_0x4e9323(0x860)][_0x134812]), _0x3f8ddb += _0x263b5b, _0x49e53c++;
            }
            return _0x3f8ddb / _0x49e53c;
        }
        [_0x5659be(0x1f0)](_0x48e91d) {
            var _0xfae89 = _0x5659be, _0x356565 = _0x48e91d;
            _0x356565[_0xfae89(0xd42)] = this[_0xfae89(0xd42)];
            var _0x23d593 = _0x356565[_0xfae89(0x860)];
            for (var _0x4f0993 = 0x0, _0xbdf547 = this['_elements'][_0xfae89(0x1ff)]; _0x4f0993 < _0xbdf547; _0x4f0993++)
                _0x23d593[_0x4f0993] = this['_elements'][_0x4f0993];
        }
        [_0x5659be(0x1f4)]() {
            var _0x1f123b = new _0x2f153d();
            return this['cloneTo'](_0x1f123b), _0x1f123b;
        }
    }
    class _0x1ebe51 {
        constructor() {
            var _0x5a6677 = _0x5659be;
            this[_0x5a6677(0xa68)] = 0x0, this[_0x5a6677(0xd2e)] = ![], this[_0x5a6677(0xd12)] = null, this[_0x5a6677(0xd25)] = null, this['_gradientY'] = null, this[_0x5a6677(0xd31)] = null, this[_0x5a6677(0xd16)] = 0x0, this[_0x5a6677(0xd0f)] = 0x0, this[_0x5a6677(0xd27)] = null, this['_constantMaxSeparate'] = null, this[_0x5a6677(0xd1a)] = null, this[_0x5a6677(0xd10)] = null, this[_0x5a6677(0xd29)] = null, this[_0x5a6677(0xd33)] = null, this['_gradientYMin'] = null, this[_0x5a6677(0xd2b)] = null, this['_gradientZMin'] = null, this['_gradientZMax'] = null;
        }
        static [_0x5659be(0xd1c)](_0x361a3e) {
            var _0x2c7483 = _0x5659be, _0x2938e9 = new _0x1ebe51();
            return _0x2938e9[_0x2c7483(0xa68)] = 0x0, _0x2938e9[_0x2c7483(0xd2e)] = ![], _0x2938e9[_0x2c7483(0xd12)] = _0x361a3e, _0x2938e9;
        }
        static [_0x5659be(0xd30)](_0x42dc3d, _0x3c70b0, _0x5027fc) {
            var _0x5b897c = _0x5659be, _0x46c290 = new _0x1ebe51();
            return _0x46c290[_0x5b897c(0xa68)] = 0x0, _0x46c290[_0x5b897c(0xd2e)] = !![], _0x46c290[_0x5b897c(0xd25)] = _0x42dc3d, _0x46c290['_gradientY'] = _0x3c70b0, _0x46c290['_gradientZ'] = _0x5027fc, _0x46c290;
        }
        static [_0x5659be(0xd13)](_0x142116, _0x22e286) {
            var _0x3a8eef = _0x5659be, _0xdc52fe = new _0x1ebe51();
            return _0xdc52fe[_0x3a8eef(0xa68)] = 0x1, _0xdc52fe['_separateAxes'] = ![], _0xdc52fe[_0x3a8eef(0xd16)] = _0x142116, _0xdc52fe[_0x3a8eef(0xd0f)] = _0x22e286, _0xdc52fe;
        }
        static [_0x5659be(0xd32)](_0x38bd54, _0x53e248) {
            var _0x3be58b = _0x5659be, _0x89141d = new _0x1ebe51();
            return _0x89141d['_type'] = 0x1, _0x89141d['_separateAxes'] = !![], _0x89141d[_0x3be58b(0xd27)] = _0x38bd54, _0x89141d[_0x3be58b(0xd28)] = _0x53e248, _0x89141d;
        }
        static [_0x5659be(0xd14)](_0x5453ef, _0x103105) {
            var _0x1cbd25 = _0x5659be, _0x277912 = new _0x1ebe51();
            return _0x277912[_0x1cbd25(0xa68)] = 0x2, _0x277912['_separateAxes'] = ![], _0x277912['_gradientMin'] = _0x5453ef, _0x277912[_0x1cbd25(0xd10)] = _0x103105, _0x277912;
        }
        static [_0x5659be(0xd4a)](_0x1fed64, _0x306069, _0x5b49aa, _0x59782a, _0x562649, _0x86806f) {
            var _0x4a4c9f = _0x5659be, _0x3c2fdb = new _0x1ebe51();
            return _0x3c2fdb[_0x4a4c9f(0xa68)] = 0x2, _0x3c2fdb['_separateAxes'] = !![], _0x3c2fdb['_gradientXMin'] = _0x1fed64, _0x3c2fdb['_gradientXMax'] = _0x306069, _0x3c2fdb['_gradientYMin'] = _0x5b49aa, _0x3c2fdb[_0x4a4c9f(0xd2b)] = _0x59782a, _0x3c2fdb['_gradientZMin'] = _0x562649, _0x3c2fdb[_0x4a4c9f(0xd34)] = _0x86806f, _0x3c2fdb;
        }
        get [_0x5659be(0x2ae)]() {
            return this['_type'];
        }
        get [_0x5659be(0xd36)]() {
            return this['_separateAxes'];
        }
        get ['gradient']() {
            var _0x25a460 = _0x5659be;
            return this[_0x25a460(0xd12)];
        }
        get [_0x5659be(0xd38)]() {
            var _0xf0a938 = _0x5659be;
            return this[_0xf0a938(0xd25)];
        }
        get [_0x5659be(0xd39)]() {
            var _0x2048e0 = _0x5659be;
            return this[_0x2048e0(0xd26)];
        }
        get [_0x5659be(0xd3a)]() {
            var _0x41a504 = _0x5659be;
            return this[_0x41a504(0xd31)];
        }
        get ['constantMin']() {
            var _0x33238b = _0x5659be;
            return this[_0x33238b(0xd16)];
        }
        get [_0x5659be(0xd17)]() {
            return this['_constantMax'];
        }
        get [_0x5659be(0xd3c)]() {
            var _0x377650 = _0x5659be;
            return this[_0x377650(0xd27)];
        }
        get [_0x5659be(0xd3d)]() {
            var _0x1337ff = _0x5659be;
            return this[_0x1337ff(0xd28)];
        }
        get [_0x5659be(0xd19)]() {
            return this['_gradientMin'];
        }
        get [_0x5659be(0xd1e)]() {
            return this['_gradientMax'];
        }
        get ['gradientXMin']() {
            var _0x4de96e = _0x5659be;
            return this[_0x4de96e(0xd29)];
        }
        get [_0x5659be(0xd3e)]() {
            var _0x327b22 = _0x5659be;
            return this[_0x327b22(0xd33)];
        }
        get [_0x5659be(0xd4b)]() {
            var _0x1beb91 = _0x5659be;
            return this[_0x1beb91(0xd2a)];
        }
        get ['gradientYMax']() {
            return this['_gradientYMax'];
        }
        get [_0x5659be(0xd3f)]() {
            var _0x1b2e6d = _0x5659be;
            return this[_0x1b2e6d(0xd2c)];
        }
        get [_0x5659be(0xd4c)]() {
            var _0x1afe5a = _0x5659be;
            return this[_0x1afe5a(0xd34)];
        }
        [_0x5659be(0xd4d)](_0x1005f2 = ![]) {
            var _0x5002be = _0x5659be, _0x2871ed, _0x5efb56, _0x572445 = -Number[_0x5002be(0xa46)];
            switch (this[_0x5002be(0xa68)]) {
            case 0x0:
                if (this[_0x5002be(0xd2e)]) {
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd25)][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd25)]['getValueByIndex'](_0x2871ed));
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd26)]['gradientCount']; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd26)]['getValueByIndex'](_0x2871ed));
                    if (_0x1005f2)
                        for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd31)]['gradientCount']; _0x2871ed < _0x5efb56; _0x2871ed++) {
                            _0x572445 = Math[_0x5002be(0x205)](_0x572445, this['_gradientZ'][_0x5002be(0xd48)](_0x2871ed));
                        }
                } else {
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd12)][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math['max'](_0x572445, this[_0x5002be(0xd12)][_0x5002be(0xd48)](_0x2871ed));
                }
                break;
            case 0x1:
                this['_separateAxes'] ? (_0x572445 = Math[_0x5002be(0x205)](this[_0x5002be(0xd27)]['x'], this[_0x5002be(0xd28)]['x']), _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd27)]['y']), _0x1005f2 && (_0x572445 = _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd28)]['z']))) : _0x572445 = Math[_0x5002be(0x205)](this[_0x5002be(0xd16)], this[_0x5002be(0xd0f)]);
                break;
            case 0x2:
                if (this['_separateAxes']) {
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd29)][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd29)][_0x5002be(0xd48)](_0x2871ed));
                    for (_0x2871ed = 0x0, _0x5efb56 = this['_gradientXMax'][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this['_gradientXMax'][_0x5002be(0xd48)](_0x2871ed));
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd2a)][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd2a)][_0x5002be(0xd48)](_0x2871ed));
                    for (_0x2871ed = 0x0, _0x5efb56 = this['_gradientZMax'][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this['_gradientZMax'][_0x5002be(0xd48)](_0x2871ed));
                    if (_0x1005f2) {
                        for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd2c)][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++) {
                            _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd2c)][_0x5002be(0xd48)](_0x2871ed));
                        }
                        for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd34)]['gradientCount']; _0x2871ed < _0x5efb56; _0x2871ed++) {
                            _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd34)][_0x5002be(0xd48)](_0x2871ed));
                        }
                    }
                } else {
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd1a)]['gradientCount']; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this['_gradientMin'][_0x5002be(0xd48)](_0x2871ed));
                    for (_0x2871ed = 0x0, _0x5efb56 = this[_0x5002be(0xd10)][_0x5002be(0xd43)]; _0x2871ed < _0x5efb56; _0x2871ed++)
                        _0x572445 = Math[_0x5002be(0x205)](_0x572445, this[_0x5002be(0xd10)]['getValueByIndex'](_0x2871ed));
                }
                break;
            }
            return _0x572445;
        }
        [_0x5659be(0x1f0)](_0x12663f) {
            var _0x312c59 = _0x5659be, _0x58e8bd = _0x12663f;
            _0x58e8bd[_0x312c59(0xa68)] = this[_0x312c59(0xa68)], _0x58e8bd['_separateAxes'] = this[_0x312c59(0xd2e)], this['_gradient'][_0x312c59(0x1f0)](_0x58e8bd['_gradient']), this[_0x312c59(0xd25)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd25)]), this[_0x312c59(0xd26)][_0x312c59(0x1f0)](_0x58e8bd['_gradientY']), this['_gradientZ'][_0x312c59(0x1f0)](_0x58e8bd['_gradientZ']), _0x58e8bd[_0x312c59(0xd16)] = this[_0x312c59(0xd16)], _0x58e8bd[_0x312c59(0xd0f)] = this['_constantMax'], this['_constantMinSeparate'][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd27)]), this[_0x312c59(0xd28)][_0x312c59(0x1f0)](_0x58e8bd['_constantMaxSeparate']), this[_0x312c59(0xd1a)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd1a)]), this[_0x312c59(0xd10)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd10)]), this[_0x312c59(0xd29)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd29)]), this[_0x312c59(0xd33)][_0x312c59(0x1f0)](_0x58e8bd['_gradientXMax']), this[_0x312c59(0xd2a)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd2a)]), this[_0x312c59(0xd2b)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd2b)]), this[_0x312c59(0xd2c)][_0x312c59(0x1f0)](_0x58e8bd[_0x312c59(0xd2c)]), this[_0x312c59(0xd34)]['cloneTo'](_0x58e8bd[_0x312c59(0xd34)]);
        }
        [_0x5659be(0x1f4)]() {
            var _0x40a1a8 = _0x5659be, _0x3f2cf6 = new _0x1ebe51();
            return this[_0x40a1a8(0x1f0)](_0x3f2cf6), _0x3f2cf6;
        }
    }
    class _0x154d77 {
        constructor() {
            var _0x1437d8 = _0x5659be;
            this[_0x1437d8(0xa68)] = 0x0, this[_0x1437d8(0xd0e)] = null, this[_0x1437d8(0xd25)] = null, this[_0x1437d8(0xd26)] = null, this['_gradientZ'] = null, this[_0x1437d8(0xd16)] = null, this[_0x1437d8(0xd0f)] = null, this[_0x1437d8(0xd29)] = null, this[_0x1437d8(0xd33)] = null, this[_0x1437d8(0xd2a)] = null, this[_0x1437d8(0xd2b)] = null, this[_0x1437d8(0xd2c)] = null, this[_0x1437d8(0xd34)] = null;
        }
        static [_0x5659be(0xd11)](_0x1e9e52) {
            var _0x91aaf7 = _0x5659be, _0x3875d3 = new _0x154d77();
            return _0x3875d3['_type'] = 0x0, _0x3875d3[_0x91aaf7(0xd0e)] = _0x1e9e52, _0x3875d3;
        }
        static [_0x5659be(0xd1c)](_0x323ddc, _0x1c9428, _0x4d4274) {
            var _0x611fa6 = _0x5659be, _0x5f26fc = new _0x154d77();
            return _0x5f26fc['_type'] = 0x1, _0x5f26fc[_0x611fa6(0xd25)] = _0x323ddc, _0x5f26fc['_gradientY'] = _0x1c9428, _0x5f26fc[_0x611fa6(0xd31)] = _0x4d4274, _0x5f26fc;
        }
        static [_0x5659be(0xd13)](_0xc2714, _0x4dc0ab) {
            var _0x201d41 = _0x5659be, _0x387105 = new _0x154d77();
            return _0x387105[_0x201d41(0xa68)] = 0x2, _0x387105[_0x201d41(0xd16)] = _0xc2714, _0x387105[_0x201d41(0xd0f)] = _0x4dc0ab, _0x387105;
        }
        static [_0x5659be(0xd14)](_0xa5a3e8, _0x1634af, _0x329728, _0x350828, _0x3bfba2, _0x4b464c) {
            var _0x35b57a = _0x5659be, _0x126a40 = new _0x154d77();
            return _0x126a40[_0x35b57a(0xa68)] = 0x3, _0x126a40[_0x35b57a(0xd29)] = _0xa5a3e8, _0x126a40[_0x35b57a(0xd33)] = _0x1634af, _0x126a40[_0x35b57a(0xd2a)] = _0x329728, _0x126a40[_0x35b57a(0xd2b)] = _0x350828, _0x126a40[_0x35b57a(0xd2c)] = _0x3bfba2, _0x126a40[_0x35b57a(0xd34)] = _0x4b464c, _0x126a40;
        }
        get [_0x5659be(0x2ae)]() {
            var _0x19ae1b = _0x5659be;
            return this[_0x19ae1b(0xa68)];
        }
        get [_0x5659be(0xd15)]() {
            var _0x22f614 = _0x5659be;
            return this[_0x22f614(0xd0e)];
        }
        get [_0x5659be(0xd38)]() {
            var _0x25b806 = _0x5659be;
            return this[_0x25b806(0xd25)];
        }
        get [_0x5659be(0xd39)]() {
            var _0xdf1177 = _0x5659be;
            return this[_0xdf1177(0xd26)];
        }
        get [_0x5659be(0xd3a)]() {
            var _0x5116a3 = _0x5659be;
            return this[_0x5116a3(0xd31)];
        }
        get [_0x5659be(0xd1d)]() {
            var _0xd8af14 = _0x5659be;
            return this[_0xd8af14(0xd16)];
        }
        get [_0x5659be(0xd17)]() {
            var _0x2e423c = _0x5659be;
            return this[_0x2e423c(0xd0f)];
        }
        get [_0x5659be(0xd4e)]() {
            var _0x201afb = _0x5659be;
            return this[_0x201afb(0xd29)];
        }
        get ['gradientXMax']() {
            var _0x4f0c11 = _0x5659be;
            return this[_0x4f0c11(0xd33)];
        }
        get [_0x5659be(0xd4b)]() {
            var _0x36dc28 = _0x5659be;
            return this[_0x36dc28(0xd2a)];
        }
        get [_0x5659be(0xd4f)]() {
            return this['_gradientYMax'];
        }
        get [_0x5659be(0xd3f)]() {
            var _0x1ced12 = _0x5659be;
            return this[_0x1ced12(0xd2c)];
        }
        get [_0x5659be(0xd4c)]() {
            var _0x1078b8 = _0x5659be;
            return this[_0x1078b8(0xd34)];
        }
        [_0x5659be(0x1f0)](_0x5e627e) {
            var _0x4ec46f = _0x5659be, _0x355a47 = _0x5e627e;
            _0x355a47[_0x4ec46f(0xa68)] = this[_0x4ec46f(0xa68)], this[_0x4ec46f(0xd0e)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd0e)]), this[_0x4ec46f(0xd25)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd25)]), this[_0x4ec46f(0xd26)][_0x4ec46f(0x1f0)](_0x355a47['_gradientY']), this['_gradientZ'][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd31)]), this[_0x4ec46f(0xd16)]['cloneTo'](_0x355a47[_0x4ec46f(0xd16)]), this[_0x4ec46f(0xd0f)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd0f)]), this[_0x4ec46f(0xd29)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd29)]), this[_0x4ec46f(0xd33)][_0x4ec46f(0x1f0)](_0x355a47['_gradientXMax']), this[_0x4ec46f(0xd2a)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd2a)]), this[_0x4ec46f(0xd2b)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd2b)]), this['_gradientZMin']['cloneTo'](_0x355a47['_gradientZMin']), this[_0x4ec46f(0xd34)][_0x4ec46f(0x1f0)](_0x355a47[_0x4ec46f(0xd34)]);
        }
        [_0x5659be(0x1f4)]() {
            var _0x3e515b = new _0x154d77();
            return this['cloneTo'](_0x3e515b), _0x3e515b;
        }
    }
    class _0x2d0604 {
        constructor(_0x427aa9) {
            var _0x523c8f = _0x5659be;
            this[_0x523c8f(0xd50)] = _0x427aa9;
        }
        get [_0x5659be(0xd51)]() {
            return this['_angularVelocity'];
        }
        ['cloneTo'](_0x31fa1b) {
            var _0x5cbc1a = _0x5659be, _0x2bc934 = _0x31fa1b;
            this['_angularVelocity'][_0x5cbc1a(0x1f0)](_0x2bc934[_0x5cbc1a(0xd50)]), _0x2bc934['enable'] = this[_0x5cbc1a(0x650)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x27a848 = _0x5659be, _0x4cdfd5;
            switch (this[_0x27a848(0xd50)][_0x27a848(0x2ae)]) {
            case 0x0:
                if (this[_0x27a848(0xd50)]['separateAxes'])
                    _0x4cdfd5 = _0x4ebad0['createByConstantSeparate'](this[_0x27a848(0xd50)][_0x27a848(0xd37)]['clone']());
                else
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd11)](this[_0x27a848(0xd50)]['constant']);
                break;
            case 0x1:
                if (this[_0x27a848(0xd50)][_0x27a848(0xd36)])
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd30)](this[_0x27a848(0xd50)][_0x27a848(0xd38)][_0x27a848(0x1f4)](), this[_0x27a848(0xd50)][_0x27a848(0xd39)][_0x27a848(0x1f4)](), this[_0x27a848(0xd50)][_0x27a848(0xd3a)][_0x27a848(0x1f4)]());
                else
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd1c)](this[_0x27a848(0xd50)][_0x27a848(0xd18)][_0x27a848(0x1f4)]());
                break;
            case 0x2:
                if (this[_0x27a848(0xd50)]['separateAxes'])
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd32)](this['_angularVelocity'][_0x27a848(0xd3c)]['clone'](), this[_0x27a848(0xd50)][_0x27a848(0xd3d)][_0x27a848(0x1f4)]());
                else
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd13)](this[_0x27a848(0xd50)]['constantMin'], this['_angularVelocity'][_0x27a848(0xd17)]);
                break;
            case 0x3:
                if (this[_0x27a848(0xd50)]['separateAxes'])
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd4a)](this[_0x27a848(0xd50)][_0x27a848(0xd4e)][_0x27a848(0x1f4)](), this[_0x27a848(0xd50)][_0x27a848(0xd4b)][_0x27a848(0x1f4)](), this[_0x27a848(0xd50)][_0x27a848(0xd3f)]['clone'](), this[_0x27a848(0xd50)][_0x27a848(0xd40)]['clone'](), this['_angularVelocity'][_0x27a848(0xd3e)][_0x27a848(0x1f4)](), this[_0x27a848(0xd50)][_0x27a848(0xd4f)][_0x27a848(0x1f4)](), this[_0x27a848(0xd50)][_0x27a848(0xd4c)]['clone'](), this[_0x27a848(0xd50)][_0x27a848(0xd41)]['clone']());
                else
                    _0x4cdfd5 = _0x4ebad0[_0x27a848(0xd14)](this['_angularVelocity'][_0x27a848(0xd19)]['clone'](), this[_0x27a848(0xd50)][_0x27a848(0xd1e)][_0x27a848(0x1f4)]());
                break;
            }
            var _0x215c9a = new _0x2d0604(_0x4cdfd5);
            return _0x215c9a[_0x27a848(0x650)] = this[_0x27a848(0x650)], _0x215c9a;
        }
    }
    (function (_0x5aa79a) {
        var _0x50f03a = _0x5659be;
        _0x5aa79a[_0x5aa79a[_0x50f03a(0xd52)] = 0x0] = _0x50f03a(0xd52), _0x5aa79a[_0x5aa79a['Circle'] = 0x1] = _0x50f03a(0xd53), _0x5aa79a[_0x5aa79a['Cone'] = 0x2] = _0x50f03a(0xd54), _0x5aa79a[_0x5aa79a[_0x50f03a(0xd55)] = 0x3] = _0x50f03a(0xd55), _0x5aa79a[_0x5aa79a['Sphere'] = 0x4] = _0x50f03a(0xd56);
    }(_0x71dec4[_0x5659be(0xd57)] || (_0x71dec4[_0x5659be(0xd57)] = {})));
    class _0x3a820d {
        constructor() {
            var _0x397e62 = _0x5659be;
            this[_0x397e62(0x650)] = !![], this['randomDirection'] = 0x0;
        }
        ['_getShapeBoundBox'](_0x45d949) {
            var _0x445da6 = _0x5659be;
            throw new Error(_0x445da6(0xd58));
        }
        [_0x5659be(0xd59)](_0x3641ef) {
            var _0x44a98f = _0x5659be;
            throw new Error(_0x44a98f(0xd58));
        }
        [_0x5659be(0xd5a)](_0x4afed1, _0x1b6c6e, _0x3fbb0c = null, _0x1c65d6 = null) {
            var _0x58553f = _0x5659be;
            throw new Error(_0x58553f(0xd58));
        }
        [_0x5659be(0xd5b)](_0x49fd3f, _0x332599, _0xe1a7fa) {
            var _0x312c4f = _0x5659be;
            this['_getShapeBoundBox'](_0x49fd3f);
            var _0x4d6452 = _0x49fd3f[_0x312c4f(0x204)], _0x1467f9 = _0x49fd3f[_0x312c4f(0x205)];
            _0x3f70c5['multiply'](_0x4d6452, _0x332599, _0x4d6452), _0x3f70c5[_0x312c4f(0x202)](_0x1467f9, _0x332599, _0x1467f9);
            var _0x560dc5 = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5());
            this['randomDirection'] ? (_0x560dc5[_0x312c4f(0x204)] = new _0x3f70c5(-0x1, -0x1, -0x1), _0x560dc5[_0x312c4f(0x205)] = new _0x3f70c5(0x1, 0x1, 0x1)) : this[_0x312c4f(0xd59)](_0x560dc5);
            var _0x59c648 = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5()), _0x1dca44 = _0x59c648['min'], _0x593bd6 = _0x59c648['max'];
            _0x3f70c5[_0x312c4f(0x1ee)](_0x560dc5[_0x312c4f(0x204)], _0xe1a7fa['y'], _0x1dca44), _0x3f70c5[_0x312c4f(0x1ee)](_0x560dc5[_0x312c4f(0x205)], _0xe1a7fa['y'], _0x593bd6), _0x3f70c5[_0x312c4f(0x201)](_0x49fd3f[_0x312c4f(0x204)], _0x1dca44, _0x1dca44), _0x3f70c5[_0x312c4f(0x201)](_0x49fd3f[_0x312c4f(0x205)], _0x593bd6, _0x593bd6), _0x3f70c5[_0x312c4f(0x204)](_0x49fd3f[_0x312c4f(0x204)], _0x1dca44, _0x49fd3f[_0x312c4f(0x204)]), _0x3f70c5['max'](_0x49fd3f[_0x312c4f(0x205)], _0x1dca44, _0x49fd3f[_0x312c4f(0x205)]);
            var _0x20f08b = new _0x3fc11a(new _0x3f70c5(), new _0x3f70c5()), _0xe618d8 = _0x20f08b[_0x312c4f(0x204)], _0xeb377d = _0x20f08b[_0x312c4f(0x205)];
            _0x3f70c5[_0x312c4f(0x1ee)](_0x560dc5['min'], _0xe1a7fa['x'], _0xe618d8), _0x3f70c5[_0x312c4f(0x1ee)](_0x560dc5['max'], _0xe1a7fa['x'], _0xeb377d), _0x3f70c5[_0x312c4f(0x204)](_0x20f08b[_0x312c4f(0x204)], _0xeb377d, _0x1dca44), _0x3f70c5['max'](_0x20f08b['min'], _0xeb377d, _0x593bd6), _0x3f70c5[_0x312c4f(0x204)](_0x49fd3f[_0x312c4f(0x204)], _0x1dca44, _0x49fd3f[_0x312c4f(0x204)]), _0x3f70c5[_0x312c4f(0x205)](_0x49fd3f['max'], _0x1dca44, _0x49fd3f[_0x312c4f(0x205)]);
        }
        ['cloneTo'](_0x4c3897) {
            var _0x3954da = _0x5659be, _0xb52bf1 = _0x4c3897;
            _0xb52bf1[_0x3954da(0x650)] = this[_0x3954da(0x650)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x5dfcf3 = _0x5659be, _0x59d72d = new _0x3a820d();
            return this[_0x5dfcf3(0x1f0)](_0x59d72d), _0x59d72d;
        }
    }
    class _0x2d97ab {
        static ['_randomPointUnitArcCircle'](_0x13eabe, _0x1157a8, _0x50fdba = null) {
            var _0x1cd9b4 = _0x5659be, _0x53ba6a;
            if (_0x50fdba)
                _0x53ba6a = _0x50fdba[_0x1cd9b4(0xd5c)]() * _0x13eabe;
            else
                _0x53ba6a = Math[_0x1cd9b4(0xd5d)]() * _0x13eabe;
            _0x1157a8['x'] = Math[_0x1cd9b4(0x270)](_0x53ba6a), _0x1157a8['y'] = Math['sin'](_0x53ba6a);
        }
        static [_0x5659be(0xd5e)](_0x152de7, _0x88e0f0, _0x35bd7c = null) {
            var _0x39b06c = _0x5659be;
            _0x2d97ab[_0x39b06c(0xd5f)](_0x152de7, _0x88e0f0, _0x35bd7c);
            var _0x1f9e51;
            if (_0x35bd7c)
                _0x1f9e51 = Math['pow'](_0x35bd7c[_0x39b06c(0xd5c)](), 0x1 / 0x2);
            else
                _0x1f9e51 = Math[_0x39b06c(0x2ef)](Math[_0x39b06c(0xd5d)](), 0x1 / 0x2);
            _0x88e0f0['x'] = _0x88e0f0['x'] * _0x1f9e51, _0x88e0f0['y'] = _0x88e0f0['y'] * _0x1f9e51;
        }
        static [_0x5659be(0xd60)](_0x1d8ecf, _0x2751b6 = null) {
            var _0x5dcf92 = _0x5659be, _0x338180;
            if (_0x2751b6)
                _0x338180 = _0x2751b6['getFloat']() * Math['PI'] * 0x2;
            else
                _0x338180 = Math[_0x5dcf92(0xd5d)]() * Math['PI'] * 0x2;
            _0x1d8ecf['x'] = Math[_0x5dcf92(0x270)](_0x338180), _0x1d8ecf['y'] = Math[_0x5dcf92(0x26f)](_0x338180);
        }
        static [_0x5659be(0xd61)](_0x1ffd16, _0x25f296 = null) {
            var _0x45b191 = _0x5659be;
            _0x2d97ab[_0x45b191(0xd60)](_0x1ffd16);
            var _0x3193aa;
            if (_0x25f296)
                _0x3193aa = Math[_0x45b191(0x2ef)](_0x25f296[_0x45b191(0xd5c)](), 0x1 / 0x2);
            else
                _0x3193aa = Math[_0x45b191(0x2ef)](Math[_0x45b191(0xd5d)](), 0x1 / 0x2);
            _0x1ffd16['x'] = _0x1ffd16['x'] * _0x3193aa, _0x1ffd16['y'] = _0x1ffd16['y'] * _0x3193aa;
        }
        static [_0x5659be(0xd62)](_0x43342f, _0x4074ca = null) {
            var _0x14f407 = _0x5659be, _0x125572, _0x4c0c52;
            _0x4074ca ? (_0x125572 = _0x43342f['z'] = _0x4074ca[_0x14f407(0xd5c)]() * 0x2 - 0x1, _0x4c0c52 = _0x4074ca[_0x14f407(0xd5c)]() * Math['PI'] * 0x2) : (_0x125572 = _0x43342f['z'] = Math[_0x14f407(0xd5d)]() * 0x2 - 0x1, _0x4c0c52 = Math[_0x14f407(0xd5d)]() * Math['PI'] * 0x2);
            var _0x2fbee4 = Math['sqrt'](0x1 - _0x125572 * _0x125572);
            _0x43342f['x'] = _0x2fbee4 * Math[_0x14f407(0x270)](_0x4c0c52), _0x43342f['y'] = _0x2fbee4 * Math[_0x14f407(0x26f)](_0x4c0c52);
        }
        static [_0x5659be(0xd63)](_0x12b381, _0x37d135 = null) {
            var _0x3dfa87 = _0x5659be;
            _0x2d97ab[_0x3dfa87(0xd62)](_0x12b381);
            var _0x535707;
            if (_0x37d135)
                _0x535707 = Math[_0x3dfa87(0x2ef)](_0x37d135[_0x3dfa87(0xd5c)](), 0x1 / 0x3);
            else
                _0x535707 = Math[_0x3dfa87(0x2ef)](Math['random'](), 0x1 / 0x3);
            _0x12b381['x'] = _0x12b381['x'] * _0x535707, _0x12b381['y'] = _0x12b381['y'] * _0x535707, _0x12b381['z'] = _0x12b381['z'] * _0x535707;
        }
        static ['_randomPointInsideHalfUnitBox'](_0xcebe6a, _0x1d73dd = null) {
            var _0x294f0a = _0x5659be;
            _0x1d73dd ? (_0xcebe6a['x'] = _0x1d73dd[_0x294f0a(0xd5c)]() - 0.5, _0xcebe6a['y'] = _0x1d73dd[_0x294f0a(0xd5c)]() - 0.5, _0xcebe6a['z'] = _0x1d73dd['getFloat']() - 0.5) : (_0xcebe6a['x'] = Math[_0x294f0a(0xd5d)]() - 0.5, _0xcebe6a['y'] = Math['random']() - 0.5, _0xcebe6a['z'] = Math[_0x294f0a(0xd5d)]() - 0.5);
        }
        constructor() {
        }
    }
    class _0x31cb6d extends _0x3a820d {
        constructor() {
            var _0x37efb6 = _0x5659be;
            super(), this[_0x37efb6(0xd64)] = _0x71dec4[_0x37efb6(0xd57)][_0x37efb6(0xd52)], this['x'] = 0x1, this['y'] = 0x1, this['z'] = 0x1;
        }
        [_0x5659be(0xd65)](_0x1f7168) {
            var _0x2631af = _0x5659be, _0x2f08dd = _0x1f7168[_0x2631af(0x204)];
            _0x2f08dd['x'] = -this['x'] * 0.5, _0x2f08dd['y'] = -this['y'] * 0.5, _0x2f08dd['z'] = -this['z'] * 0.5;
            var _0x3dc8e3 = _0x1f7168[_0x2631af(0x205)];
            _0x3dc8e3['x'] = this['x'] * 0.5, _0x3dc8e3['y'] = this['y'] * 0.5, _0x3dc8e3['z'] = this['z'] * 0.5;
        }
        ['_getSpeedBoundBox'](_0x3072c5) {
            var _0x26e04c = _0x5659be, _0x122e46 = _0x3072c5[_0x26e04c(0x204)];
            _0x122e46['x'] = 0x0, _0x122e46['y'] = 0x0, _0x122e46['z'] = 0x0;
            var _0x21f17b = _0x3072c5[_0x26e04c(0x205)];
            _0x21f17b['x'] = 0x0, _0x21f17b['y'] = 0x1, _0x21f17b['z'] = 0x0;
        }
        [_0x5659be(0xd5a)](_0xac0802, _0xb3dafd, _0x538540 = null, _0x432710 = null) {
            var _0x471ae5 = _0x5659be;
            _0x538540 ? (_0x538540[_0x471ae5(0xd66)] = _0x432710[0x10], _0x2d97ab[_0x471ae5(0xd67)](_0xac0802, _0x538540), _0x432710[0x10] = _0x538540[_0x471ae5(0xd66)]) : _0x2d97ab[_0x471ae5(0xd67)](_0xac0802), _0xac0802['x'] = this['x'] * _0xac0802['x'], _0xac0802['y'] = this['y'] * _0xac0802['y'], _0xac0802['z'] = this['z'] * _0xac0802['z'], this[_0x471ae5(0xd68)] ? _0x538540 ? (_0x538540[_0x471ae5(0xd66)] = _0x432710[0x11], _0x2d97ab['_randomPointUnitSphere'](_0xb3dafd, _0x538540), _0x432710[0x11] = _0x538540[_0x471ae5(0xd66)]) : _0x2d97ab[_0x471ae5(0xd62)](_0xb3dafd) : (_0xb3dafd['x'] = 0x0, _0xb3dafd['y'] = 0x0, _0xb3dafd['z'] = 0x1);
        }
        [_0x5659be(0x1f0)](_0xe7dcff) {
            var _0x27b01b = _0x5659be;
            super[_0x27b01b(0x1f0)](_0xe7dcff);
            var _0x227714 = _0xe7dcff;
            _0x227714['x'] = this['x'], _0x227714['y'] = this['y'], _0x227714['z'] = this['z'], _0x227714[_0x27b01b(0xd68)] = this[_0x27b01b(0xd68)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x758e1d = _0x5659be, _0x59420c = new _0x31cb6d();
            return this[_0x758e1d(0x1f0)](_0x59420c), _0x59420c;
        }
    }
    class _0x500622 extends _0x3a820d {
        constructor() {
            var _0x592229 = _0x5659be;
            super(), this[_0x592229(0xd64)] = _0x71dec4[_0x592229(0xd57)]['Circle'], this[_0x592229(0x87d)] = 0x1, this[_0x592229(0xd69)] = 0x168 / 0xb4 * Math['PI'], this[_0x592229(0xd6a)] = ![];
        }
        [_0x5659be(0xd65)](_0xf5a1eb) {
            var _0x443316 = _0x5659be, _0x447189 = _0xf5a1eb[_0x443316(0x204)];
            _0x447189['x'] = _0x447189['z'] = -this[_0x443316(0x87d)], _0x447189['y'] = 0x0;
            var _0x5a52df = _0xf5a1eb[_0x443316(0x205)];
            _0x5a52df['x'] = _0x5a52df['z'] = this[_0x443316(0x87d)], _0x5a52df['y'] = 0x0;
        }
        [_0x5659be(0xd59)](_0x29038e) {
            var _0x4705c9 = _0x5659be, _0x13e83e = _0x29038e[_0x4705c9(0x204)];
            _0x13e83e['x'] = _0x13e83e['y'] = -0x1, _0x13e83e['z'] = 0x0;
            var _0x2e3ee6 = _0x29038e[_0x4705c9(0x205)];
            _0x2e3ee6['x'] = _0x2e3ee6['y'] = 0x1, _0x2e3ee6['z'] = 0x0;
        }
        [_0x5659be(0xd5a)](_0x25b3c1, _0x58781c, _0x34bf35 = null, _0x2046c2 = null) {
            var _0xc4aaea = _0x5659be, _0x5196e7 = _0x500622[_0xc4aaea(0xd6b)];
            if (_0x34bf35) {
                _0x34bf35[_0xc4aaea(0xd66)] = _0x2046c2[0x10];
                if (this['emitFromEdge'])
                    _0x2d97ab[_0xc4aaea(0xd5f)](this[_0xc4aaea(0xd69)], _0x500622[_0xc4aaea(0xd6b)], _0x34bf35);
                else
                    _0x2d97ab['_randomPointInsideUnitArcCircle'](this['arc'], _0x500622['_tempPositionPoint'], _0x34bf35);
                _0x2046c2[0x10] = _0x34bf35[_0xc4aaea(0xd66)];
            } else {
                if (this[_0xc4aaea(0xd6a)])
                    _0x2d97ab[_0xc4aaea(0xd5f)](this[_0xc4aaea(0xd69)], _0x500622[_0xc4aaea(0xd6b)]);
                else
                    _0x2d97ab['_randomPointInsideUnitArcCircle'](this[_0xc4aaea(0xd69)], _0x500622['_tempPositionPoint']);
            }
            _0x25b3c1['x'] = -_0x5196e7['x'], _0x25b3c1['y'] = _0x5196e7['y'], _0x25b3c1['z'] = 0x0, _0x3f70c5['scale'](_0x25b3c1, this[_0xc4aaea(0x87d)], _0x25b3c1), this['randomDirection'] ? _0x34bf35 ? (_0x34bf35['seed'] = _0x2046c2[0x11], _0x2d97ab[_0xc4aaea(0xd62)](_0x58781c, _0x34bf35), _0x2046c2[0x11] = _0x34bf35[_0xc4aaea(0xd66)]) : _0x2d97ab[_0xc4aaea(0xd62)](_0x58781c) : _0x25b3c1[_0xc4aaea(0x1f0)](_0x58781c);
        }
        ['cloneTo'](_0x5d86d8) {
            var _0x26351f = _0x5659be;
            super['cloneTo'](_0x5d86d8);
            var _0x517f5b = _0x5d86d8;
            _0x517f5b[_0x26351f(0x87d)] = this[_0x26351f(0x87d)], _0x517f5b[_0x26351f(0xd69)] = this[_0x26351f(0xd69)], _0x517f5b['emitFromEdge'] = this[_0x26351f(0xd6a)], _0x517f5b['randomDirection'] = this[_0x26351f(0xd68)];
        }
        ['clone']() {
            var _0x47d2d0 = _0x5659be, _0x620629 = new _0x500622();
            return this[_0x47d2d0(0x1f0)](_0x620629), _0x620629;
        }
    }
    _0x500622[_0x5659be(0xd6b)] = new _0x12bf01();
    class _0x4dcb49 extends _0x3a820d {
        constructor() {
            var _0x5db87e = _0x5659be;
            super(), this[_0x5db87e(0xd64)] = _0x71dec4[_0x5db87e(0xd57)][_0x5db87e(0xd54)], this[_0x5db87e(0xd6c)] = 0x19 / 0xb4 * Math['PI'], this[_0x5db87e(0x87d)] = 0x1, this[_0x5db87e(0x1ff)] = 0x5, this['emitType'] = 0x0;
        }
        ['_getShapeBoundBox'](_0x50d990) {
            var _0x2fd531 = _0x5659be;
            const _0x4e1080 = this[_0x2fd531(0x87d)] + this[_0x2fd531(0x1ff)] * Math[_0x2fd531(0x26f)](this[_0x2fd531(0xd6c)]), _0x3b62cd = this['length'] * Math[_0x2fd531(0x270)](this[_0x2fd531(0xd6c)]);
            var _0x830475 = _0x50d990[_0x2fd531(0x204)];
            _0x830475['x'] = _0x830475['y'] = -_0x4e1080, _0x830475['z'] = 0x0;
            var _0x36c005 = _0x50d990[_0x2fd531(0x205)];
            _0x36c005['x'] = _0x36c005['y'] = _0x4e1080, _0x36c005['z'] = _0x3b62cd;
        }
        [_0x5659be(0xd59)](_0x61d09c) {
            var _0x5c6545 = _0x5659be;
            const _0x38cbba = Math[_0x5c6545(0x26f)](this['angle']);
            var _0x459208 = _0x61d09c[_0x5c6545(0x204)];
            _0x459208['x'] = _0x459208['y'] = -_0x38cbba, _0x459208['z'] = 0x0;
            var _0x1f11a7 = _0x61d09c[_0x5c6545(0x205)];
            _0x1f11a7['x'] = _0x1f11a7['y'] = _0x38cbba, _0x1f11a7['z'] = 0x1;
        }
        [_0x5659be(0xd5a)](_0x5f1295, _0x1d639e, _0x3a7bcc = null, _0x2bde9d = null) {
            var _0xc958a7 = _0x5659be, _0x2d96da = _0x4dcb49[_0xc958a7(0xd6b)], _0x266c93, _0x58dd5a, _0x40a4bc, _0x14e109 = Math[_0xc958a7(0x270)](this[_0xc958a7(0xd6c)]), _0x59ef78 = Math[_0xc958a7(0x26f)](this[_0xc958a7(0xd6c)]);
            switch (this[_0xc958a7(0xd6d)]) {
            case 0x0:
                _0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x10], _0x2d97ab['_randomPointInsideUnitCircle'](_0x4dcb49[_0xc958a7(0xd6b)], _0x3a7bcc), _0x2bde9d[0x10] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x2d97ab[_0xc958a7(0xd61)](_0x4dcb49[_0xc958a7(0xd6b)]);
                _0x266c93 = _0x2d96da['x'], _0x58dd5a = _0x2d96da['y'], _0x5f1295['x'] = _0x266c93 * this[_0xc958a7(0x87d)], _0x5f1295['y'] = _0x58dd5a * this['radius'], _0x5f1295['z'] = 0x0;
                this[_0xc958a7(0xd68)] ? (_0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x11], _0x2d97ab['_randomPointInsideUnitCircle'](_0x4dcb49['_tempDirectionPoint'], _0x3a7bcc), _0x2bde9d[0x11] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x2d97ab['_randomPointInsideUnitCircle'](_0x4dcb49[_0xc958a7(0xd6e)]), _0x40a4bc = _0x4dcb49['_tempDirectionPoint'], _0x1d639e['x'] = _0x40a4bc['x'] * _0x59ef78, _0x1d639e['y'] = _0x40a4bc['y'] * _0x59ef78) : (_0x1d639e['x'] = _0x266c93 * _0x59ef78, _0x1d639e['y'] = _0x58dd5a * _0x59ef78);
                _0x1d639e['z'] = _0x14e109;
                break;
            case 0x1:
                _0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x10], _0x2d97ab['_randomPointUnitCircle'](_0x4dcb49['_tempPositionPoint'], _0x3a7bcc), _0x2bde9d[0x10] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x2d97ab[_0xc958a7(0xd60)](_0x4dcb49[_0xc958a7(0xd6b)]);
                _0x266c93 = _0x2d96da['x'], _0x58dd5a = _0x2d96da['y'], _0x5f1295['x'] = _0x266c93 * this[_0xc958a7(0x87d)], _0x5f1295['y'] = _0x58dd5a * this[_0xc958a7(0x87d)], _0x5f1295['z'] = 0x0;
                this[_0xc958a7(0xd68)] ? (_0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x11], _0x2d97ab[_0xc958a7(0xd61)](_0x4dcb49[_0xc958a7(0xd6e)], _0x3a7bcc), _0x2bde9d[0x11] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x2d97ab[_0xc958a7(0xd61)](_0x4dcb49[_0xc958a7(0xd6e)]), _0x40a4bc = _0x4dcb49['_tempDirectionPoint'], _0x1d639e['x'] = _0x40a4bc['x'] * _0x59ef78, _0x1d639e['y'] = _0x40a4bc['y'] * _0x59ef78) : (_0x1d639e['x'] = _0x266c93 * _0x59ef78, _0x1d639e['y'] = _0x58dd5a * _0x59ef78);
                _0x1d639e['z'] = _0x14e109;
                break;
            case 0x2:
                _0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x10], _0x2d97ab[_0xc958a7(0xd61)](_0x4dcb49['_tempPositionPoint'], _0x3a7bcc)) : _0x2d97ab[_0xc958a7(0xd61)](_0x4dcb49[_0xc958a7(0xd6b)]);
                _0x266c93 = _0x2d96da['x'], _0x58dd5a = _0x2d96da['y'], _0x5f1295['x'] = _0x266c93 * this['radius'], _0x5f1295['y'] = _0x58dd5a * this[_0xc958a7(0x87d)], _0x5f1295['z'] = 0x0, _0x1d639e['x'] = _0x266c93 * _0x59ef78, _0x1d639e['y'] = _0x58dd5a * _0x59ef78, _0x1d639e['z'] = _0x14e109, _0x3f70c5[_0xc958a7(0x1f2)](_0x1d639e, _0x1d639e);
                _0x3a7bcc ? (_0x3f70c5[_0xc958a7(0x1ee)](_0x1d639e, this[_0xc958a7(0x1ff)] * _0x3a7bcc[_0xc958a7(0xd5c)](), _0x1d639e), _0x2bde9d[0x10] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x3f70c5[_0xc958a7(0x1ee)](_0x1d639e, this[_0xc958a7(0x1ff)] * Math[_0xc958a7(0xd5d)](), _0x1d639e);
                _0x3f70c5[_0xc958a7(0x201)](_0x5f1295, _0x1d639e, _0x5f1295);
                this[_0xc958a7(0xd68)] && (_0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x11], _0x2d97ab[_0xc958a7(0xd62)](_0x1d639e, _0x3a7bcc), _0x2bde9d[0x11] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x2d97ab[_0xc958a7(0xd62)](_0x1d639e));
                break;
            case 0x3:
                _0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x10], _0x2d97ab[_0xc958a7(0xd60)](_0x4dcb49[_0xc958a7(0xd6b)], _0x3a7bcc)) : _0x2d97ab[_0xc958a7(0xd60)](_0x4dcb49[_0xc958a7(0xd6b)]);
                _0x266c93 = _0x2d96da['x'], _0x58dd5a = _0x2d96da['y'], _0x5f1295['x'] = _0x266c93 * this[_0xc958a7(0x87d)], _0x5f1295['y'] = _0x58dd5a * this[_0xc958a7(0x87d)], _0x5f1295['z'] = 0x0, _0x1d639e['x'] = _0x266c93 * _0x59ef78, _0x1d639e['y'] = _0x58dd5a * _0x59ef78, _0x1d639e['z'] = _0x14e109, _0x3f70c5[_0xc958a7(0x1f2)](_0x1d639e, _0x1d639e);
                _0x3a7bcc ? (_0x3f70c5[_0xc958a7(0x1ee)](_0x1d639e, this[_0xc958a7(0x1ff)] * _0x3a7bcc[_0xc958a7(0xd5c)](), _0x1d639e), _0x2bde9d[0x10] = _0x3a7bcc['seed']) : _0x3f70c5[_0xc958a7(0x1ee)](_0x1d639e, this['length'] * Math[_0xc958a7(0xd5d)](), _0x1d639e);
                _0x3f70c5[_0xc958a7(0x201)](_0x5f1295, _0x1d639e, _0x5f1295);
                this['randomDirection'] && (_0x3a7bcc ? (_0x3a7bcc[_0xc958a7(0xd66)] = _0x2bde9d[0x11], _0x2d97ab[_0xc958a7(0xd62)](_0x1d639e, _0x3a7bcc), _0x2bde9d[0x11] = _0x3a7bcc[_0xc958a7(0xd66)]) : _0x2d97ab[_0xc958a7(0xd62)](_0x1d639e));
                break;
            default:
                throw new Error('ConeShape:emitType\x20is\x20invalid.');
            }
        }
        [_0x5659be(0x1f0)](_0x1418fe) {
            var _0x503ff5 = _0x5659be;
            super[_0x503ff5(0x1f0)](_0x1418fe);
            var _0x58518c = _0x1418fe;
            _0x58518c['angle'] = this[_0x503ff5(0xd6c)], _0x58518c[_0x503ff5(0x87d)] = this['radius'], _0x58518c['length'] = this[_0x503ff5(0x1ff)], _0x58518c[_0x503ff5(0xd6d)] = this[_0x503ff5(0xd6d)], _0x58518c[_0x503ff5(0xd68)] = this['randomDirection'];
        }
        [_0x5659be(0x1f4)]() {
            var _0x3e3bd6 = _0x5659be, _0x1dfa60 = new _0x4dcb49();
            return this[_0x3e3bd6(0x1f0)](_0x1dfa60), _0x1dfa60;
        }
    }
    _0x4dcb49[_0x5659be(0xd6b)] = new _0x12bf01(), _0x4dcb49['_tempDirectionPoint'] = new _0x12bf01();
    class _0x4d0421 extends _0x3a820d {
        constructor() {
            var _0x4ce905 = _0x5659be;
            super(), this['shapeType'] = _0x71dec4[_0x4ce905(0xd57)]['Hemisphere'], this[_0x4ce905(0x87d)] = 0x1, this[_0x4ce905(0xd6f)] = ![];
        }
        [_0x5659be(0xd65)](_0x410526) {
            var _0x554055 = _0x5659be, _0xda4c4d = _0x410526['min'];
            _0xda4c4d['x'] = _0xda4c4d['y'] = _0xda4c4d['z'] = -this[_0x554055(0x87d)];
            var _0x4dff5d = _0x410526[_0x554055(0x205)];
            _0x4dff5d['x'] = _0x4dff5d['y'] = this[_0x554055(0x87d)], _0x4dff5d['z'] = 0x0;
        }
        [_0x5659be(0xd59)](_0x4c4eb9) {
            var _0x44cb05 = _0x5659be, _0x2e3270 = _0x4c4eb9[_0x44cb05(0x204)];
            _0x2e3270['x'] = _0x2e3270['y'] = -0x1, _0x2e3270['z'] = 0x0;
            var _0xf4fc30 = _0x4c4eb9[_0x44cb05(0x205)];
            _0xf4fc30['x'] = _0xf4fc30['y'] = _0xf4fc30['z'] = 0x1;
        }
        [_0x5659be(0xd5a)](_0x3a1df6, _0x3caa25, _0x59f6b1 = null, _0x225f69 = null) {
            var _0x39e9cd = _0x5659be;
            if (_0x59f6b1) {
                _0x59f6b1[_0x39e9cd(0xd66)] = _0x225f69[0x10];
                if (this[_0x39e9cd(0xd6f)])
                    _0x2d97ab['_randomPointUnitSphere'](_0x3a1df6, _0x59f6b1);
                else
                    _0x2d97ab[_0x39e9cd(0xd63)](_0x3a1df6, _0x59f6b1);
                _0x225f69[0x10] = _0x59f6b1[_0x39e9cd(0xd66)];
            } else {
                if (this['emitFromShell'])
                    _0x2d97ab[_0x39e9cd(0xd62)](_0x3a1df6);
                else
                    _0x2d97ab[_0x39e9cd(0xd63)](_0x3a1df6);
            }
            _0x3f70c5['scale'](_0x3a1df6, this[_0x39e9cd(0x87d)], _0x3a1df6);
            var _0x147475 = _0x3a1df6['z'];
            _0x147475 < 0x0 && (_0x3a1df6['z'] = _0x147475 * -0x1), this[_0x39e9cd(0xd68)] ? _0x59f6b1 ? (_0x59f6b1[_0x39e9cd(0xd66)] = _0x225f69[0x11], _0x2d97ab[_0x39e9cd(0xd62)](_0x3caa25, _0x59f6b1), _0x225f69[0x11] = _0x59f6b1[_0x39e9cd(0xd66)]) : _0x2d97ab[_0x39e9cd(0xd62)](_0x3caa25) : _0x3a1df6[_0x39e9cd(0x1f0)](_0x3caa25);
        }
        ['cloneTo'](_0x3f45b4) {
            var _0x58c1d3 = _0x5659be;
            super[_0x58c1d3(0x1f0)](_0x3f45b4);
            var _0x35550f = _0x3f45b4;
            _0x35550f[_0x58c1d3(0x87d)] = this[_0x58c1d3(0x87d)], _0x35550f[_0x58c1d3(0xd6f)] = this[_0x58c1d3(0xd6f)], _0x35550f['randomDirection'] = this[_0x58c1d3(0xd68)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x4fd1d8 = _0x5659be, _0x5f3c58 = new _0x4d0421();
            return this[_0x4fd1d8(0x1f0)](_0x5f3c58), _0x5f3c58;
        }
    }
    class _0x30fb44 extends _0x3a820d {
        constructor() {
            var _0x531608 = _0x5659be;
            super(), this['shapeType'] = _0x71dec4[_0x531608(0xd57)][_0x531608(0xd56)], this[_0x531608(0x87d)] = 0x1, this['emitFromShell'] = ![];
        }
        [_0x5659be(0xd65)](_0xab1a50) {
            var _0x50ad25 = _0x5659be, _0x25d07d = _0xab1a50[_0x50ad25(0x204)];
            _0x25d07d['x'] = _0x25d07d['y'] = _0x25d07d['z'] = -this[_0x50ad25(0x87d)];
            var _0xc168ec = _0xab1a50['max'];
            _0xc168ec['x'] = _0xc168ec['y'] = _0xc168ec['z'] = this[_0x50ad25(0x87d)];
        }
        ['_getSpeedBoundBox'](_0x48611b) {
            var _0x33fe69 = _0x5659be, _0x3f1b4d = _0x48611b[_0x33fe69(0x204)];
            _0x3f1b4d['x'] = _0x3f1b4d['y'] = _0x3f1b4d['z'] = -0x1;
            var _0x22a78d = _0x48611b[_0x33fe69(0x205)];
            _0x22a78d['x'] = _0x22a78d['y'] = _0x22a78d['z'] = 0x1;
        }
        [_0x5659be(0xd5a)](_0x265929, _0x4beba4, _0xb9f376 = null, _0x10fee2 = null) {
            var _0x311a13 = _0x5659be;
            if (_0xb9f376) {
                _0xb9f376[_0x311a13(0xd66)] = _0x10fee2[0x10];
                if (this['emitFromShell'])
                    _0x2d97ab[_0x311a13(0xd62)](_0x265929, _0xb9f376);
                else
                    _0x2d97ab[_0x311a13(0xd63)](_0x265929, _0xb9f376);
                _0x10fee2[0x10] = _0xb9f376[_0x311a13(0xd66)];
            } else {
                if (this[_0x311a13(0xd6f)])
                    _0x2d97ab[_0x311a13(0xd62)](_0x265929);
                else
                    _0x2d97ab[_0x311a13(0xd63)](_0x265929);
            }
            _0x3f70c5[_0x311a13(0x1ee)](_0x265929, this['radius'], _0x265929), this['randomDirection'] ? _0xb9f376 ? (_0xb9f376['seed'] = _0x10fee2[0x11], _0x2d97ab['_randomPointUnitSphere'](_0x4beba4, _0xb9f376), _0x10fee2[0x11] = _0xb9f376[_0x311a13(0xd66)]) : _0x2d97ab['_randomPointUnitSphere'](_0x4beba4) : _0x265929[_0x311a13(0x1f0)](_0x4beba4);
        }
        [_0x5659be(0x1f0)](_0x5e5656) {
            var _0x1eab87 = _0x5659be;
            super['cloneTo'](_0x5e5656);
            var _0xfbd432 = _0x5e5656;
            _0xfbd432[_0x1eab87(0x87d)] = this['radius'], _0xfbd432[_0x1eab87(0xd6f)] = this[_0x1eab87(0xd6f)], _0xfbd432[_0x1eab87(0xd68)] = this[_0x1eab87(0xd68)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x1ab37d = new _0x30fb44();
            return this['cloneTo'](_0x1ab37d), _0x1ab37d;
        }
    }
    class _0x41af45 {
        constructor(_0x437a00) {
            var _0x170445 = _0x5659be;
            this[_0x170445(0xaf6)] = _0x437a00;
        }
        get [_0x5659be(0x2b8)]() {
            return this['_size'];
        }
        ['cloneTo'](_0x5ad93c) {
            var _0x21f3f6 = _0x5659be, _0x32f33d = _0x5ad93c;
            this[_0x21f3f6(0xaf6)][_0x21f3f6(0x1f0)](_0x32f33d[_0x21f3f6(0xaf6)]), _0x32f33d[_0x21f3f6(0x650)] = this[_0x21f3f6(0x650)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x35512f = _0x5659be, _0x237ae5;
            switch (this[_0x35512f(0xaf6)][_0x35512f(0x2ae)]) {
            case 0x0:
                if (this[_0x35512f(0xaf6)][_0x35512f(0xd36)])
                    _0x237ae5 = _0x1ebe51[_0x35512f(0xd30)](this[_0x35512f(0xaf6)][_0x35512f(0xd38)][_0x35512f(0x1f4)](), this[_0x35512f(0xaf6)][_0x35512f(0xd39)][_0x35512f(0x1f4)](), this[_0x35512f(0xaf6)][_0x35512f(0xd3a)][_0x35512f(0x1f4)]());
                else
                    _0x237ae5 = _0x1ebe51[_0x35512f(0xd1c)](this['_size']['gradient']['clone']());
                break;
            case 0x1:
                if (this[_0x35512f(0xaf6)][_0x35512f(0xd36)])
                    _0x237ae5 = _0x1ebe51[_0x35512f(0xd32)](this[_0x35512f(0xaf6)][_0x35512f(0xd3c)][_0x35512f(0x1f4)](), this['_size'][_0x35512f(0xd3d)][_0x35512f(0x1f4)]());
                else
                    _0x237ae5 = _0x1ebe51[_0x35512f(0xd13)](this[_0x35512f(0xaf6)][_0x35512f(0xd1d)], this['_size'][_0x35512f(0xd17)]);
                break;
            case 0x2:
                if (this[_0x35512f(0xaf6)][_0x35512f(0xd36)])
                    _0x237ae5 = _0x1ebe51[_0x35512f(0xd4a)](this['_size'][_0x35512f(0xd4e)]['clone'](), this[_0x35512f(0xaf6)][_0x35512f(0xd4b)][_0x35512f(0x1f4)](), this['_size'][_0x35512f(0xd3f)][_0x35512f(0x1f4)](), this[_0x35512f(0xaf6)]['gradientXMax']['clone'](), this[_0x35512f(0xaf6)]['gradientYMax']['clone'](), this[_0x35512f(0xaf6)][_0x35512f(0xd4c)][_0x35512f(0x1f4)]());
                else
                    _0x237ae5 = _0x1ebe51['createByRandomTwoGradient'](this[_0x35512f(0xaf6)]['gradientMin'][_0x35512f(0x1f4)](), this[_0x35512f(0xaf6)][_0x35512f(0xd1e)][_0x35512f(0x1f4)]());
                break;
            }
            var _0xf22277 = new _0x41af45(_0x237ae5);
            return _0xf22277[_0x35512f(0x650)] = this[_0x35512f(0x650)], _0xf22277;
        }
    }
    class _0x24182e {
        constructor() {
            var _0x183ff6 = _0x5659be;
            this[_0x183ff6(0xa68)] = 0x0, this[_0x183ff6(0xd0e)] = 0x0, this[_0x183ff6(0xd16)] = 0x0, this[_0x183ff6(0xd0f)] = 0x0;
        }
        static [_0x5659be(0xd11)](_0x19c225 = 0x0) {
            var _0x5b9a7f = _0x5659be, _0x214f5a = new _0x24182e();
            return _0x214f5a[_0x5b9a7f(0xa68)] = 0x0, _0x214f5a[_0x5b9a7f(0xd0e)] = _0x19c225, _0x214f5a;
        }
        static [_0x5659be(0xd13)](_0x5e1c12 = 0x0, _0x4f9979 = 0x0) {
            var _0x361e83 = _0x5659be, _0x364e88 = new _0x24182e();
            return _0x364e88[_0x361e83(0xa68)] = 0x1, _0x364e88['_constantMin'] = _0x5e1c12, _0x364e88[_0x361e83(0xd0f)] = _0x4f9979, _0x364e88;
        }
        get ['type']() {
            var _0x27e092 = _0x5659be;
            return this[_0x27e092(0xa68)];
        }
        get [_0x5659be(0xd15)]() {
            var _0x1b98fb = _0x5659be;
            return this[_0x1b98fb(0xd0e)];
        }
        get [_0x5659be(0xd1d)]() {
            var _0x3e9a19 = _0x5659be;
            return this[_0x3e9a19(0xd16)];
        }
        get [_0x5659be(0xd17)]() {
            var _0x51f34f = _0x5659be;
            return this[_0x51f34f(0xd0f)];
        }
        [_0x5659be(0x1f0)](_0x14fc2e) {
            var _0xe75954 = _0x5659be, _0x58f68c = _0x14fc2e;
            _0x58f68c['_type'] = this[_0xe75954(0xa68)], _0x58f68c['_constant'] = this[_0xe75954(0xd0e)], _0x58f68c[_0xe75954(0xd16)] = this[_0xe75954(0xd16)], _0x58f68c[_0xe75954(0xd0f)] = this[_0xe75954(0xd0f)];
        }
        ['clone']() {
            var _0x4eee4e = _0x5659be, _0x3cbfb5 = new _0x24182e();
            return this[_0x4eee4e(0x1f0)](_0x3cbfb5), _0x3cbfb5;
        }
    }
    class _0x187c64 {
        constructor(_0x5bc6ad, _0x947d97) {
            var _0x2fb53b = _0x5659be;
            this[_0x2fb53b(0x2ae)] = 0x0, this[_0x2fb53b(0xd70)] = ![], this['rowIndex'] = 0x0, this[_0x2fb53b(0xd71)] = 0x0, this[_0x2fb53b(0xd72)] = 0x0, this[_0x2fb53b(0x650)] = ![], this[_0x2fb53b(0xd73)] = new _0x12bf01(0x1, 0x1), this['type'] = 0x0, this[_0x2fb53b(0xd70)] = !![], this[_0x2fb53b(0xd74)] = 0x0, this[_0x2fb53b(0xd71)] = 0x1, this[_0x2fb53b(0xd72)] = 0x1, this['_frame'] = _0x5bc6ad, this[_0x2fb53b(0xd75)] = _0x947d97;
        }
        get [_0x5659be(0xd76)]() {
            var _0x274909 = _0x5659be;
            return this[_0x274909(0xd77)];
        }
        get [_0x5659be(0xd78)]() {
            return this['_startFrame'];
        }
        [_0x5659be(0x1f0)](_0x29004c) {
            var _0xc96144 = _0x5659be, _0x4d6426 = _0x29004c;
            this[_0xc96144(0xd73)][_0xc96144(0x1f0)](_0x4d6426[_0xc96144(0xd73)]), _0x4d6426[_0xc96144(0x2ae)] = this['type'], _0x4d6426[_0xc96144(0xd70)] = this[_0xc96144(0xd70)], _0x4d6426['rowIndex'] = this['rowIndex'], _0x4d6426[_0xc96144(0xd71)] = this[_0xc96144(0xd71)], _0x4d6426['enableUVChannels'] = this[_0xc96144(0xd72)], _0x4d6426[_0xc96144(0x650)] = this['enable'], this['_frame'][_0xc96144(0x1f0)](_0x4d6426['_frame']), this['_startFrame'][_0xc96144(0x1f0)](_0x4d6426[_0xc96144(0xd75)]);
        }
        ['clone']() {
            var _0x44f0b8 = _0x5659be, _0x3f2baf;
            switch (this['_frame'][_0x44f0b8(0x2ae)]) {
            case 0x0:
                _0x3f2baf = _0x169ba5['createByConstant'](this['_frame'][_0x44f0b8(0xd15)]);
                break;
            case 0x1:
                _0x3f2baf = _0x169ba5[_0x44f0b8(0xd22)](this[_0x44f0b8(0xd77)][_0x44f0b8(0xd79)]['clone']());
                break;
            case 0x2:
                _0x3f2baf = _0x169ba5['createByRandomTwoConstant'](this['_frame'][_0x44f0b8(0xd1d)], this['_frame'][_0x44f0b8(0xd17)]);
                break;
            case 0x3:
                _0x3f2baf = _0x169ba5[_0x44f0b8(0xd7a)](this['_frame'][_0x44f0b8(0xd7b)][_0x44f0b8(0x1f4)](), this['_frame'][_0x44f0b8(0xd23)]['clone']());
                break;
            }
            var _0x5344cd;
            switch (this['_startFrame'][_0x44f0b8(0x2ae)]) {
            case 0x0:
                _0x5344cd = _0x24182e[_0x44f0b8(0xd11)](this[_0x44f0b8(0xd75)][_0x44f0b8(0xd15)]);
                break;
            case 0x1:
                _0x5344cd = _0x24182e[_0x44f0b8(0xd13)](this[_0x44f0b8(0xd75)]['constantMin'], this[_0x44f0b8(0xd75)][_0x44f0b8(0xd17)]);
                break;
            }
            var _0xf982e8 = new _0x187c64(_0x3f2baf, _0x5344cd);
            return this[_0x44f0b8(0x1f0)](_0xf982e8), _0xf982e8;
        }
    }
    class _0x1a4499 {
        constructor(_0x27c360) {
            var _0x5b504a = _0x5659be;
            this[_0x5b504a(0x650)] = ![], this[_0x5b504a(0xd7c)] = 0x0, this[_0x5b504a(0xd7d)] = _0x27c360;
        }
        get [_0x5659be(0xd7e)]() {
            return this['_velocity'];
        }
        [_0x5659be(0x1f0)](_0x204194) {
            var _0x51e8e4 = _0x5659be, _0x4328da = _0x204194;
            this[_0x51e8e4(0xd7d)][_0x51e8e4(0x1f0)](_0x4328da[_0x51e8e4(0xd7d)]), _0x4328da[_0x51e8e4(0x650)] = this[_0x51e8e4(0x650)], _0x4328da['space'] = this[_0x51e8e4(0xd7c)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x159e82 = _0x5659be, _0x1932f1;
            switch (this['_velocity'][_0x159e82(0x2ae)]) {
            case 0x0:
                _0x1932f1 = _0x154d77[_0x159e82(0xd11)](this[_0x159e82(0xd7d)][_0x159e82(0xd15)][_0x159e82(0x1f4)]());
                break;
            case 0x1:
                _0x1932f1 = _0x154d77[_0x159e82(0xd1c)](this[_0x159e82(0xd7d)]['gradientX'][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd39)][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd3a)][_0x159e82(0x1f4)]());
                break;
            case 0x2:
                _0x1932f1 = _0x154d77[_0x159e82(0xd13)](this[_0x159e82(0xd7d)][_0x159e82(0xd1d)][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd17)]['clone']());
                break;
            case 0x3:
                _0x1932f1 = _0x154d77[_0x159e82(0xd14)](this[_0x159e82(0xd7d)][_0x159e82(0xd4e)][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd3e)][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd4b)][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd4f)][_0x159e82(0x1f4)](), this[_0x159e82(0xd7d)][_0x159e82(0xd3f)]['clone'](), this['_velocity']['gradientZMax'][_0x159e82(0x1f4)]());
                break;
            }
            var _0x596425 = new _0x1a4499(_0x1932f1);
            return _0x596425['enable'] = this['enable'], _0x596425['space'] = this[_0x159e82(0xd7c)], _0x596425;
        }
    }
    class _0x17a23d {
    }
    _0x17a23d[_0x5659be(0xd7f)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd80)), _0x17a23d[_0x5659be(0xd81)] = _0x84b6d6[_0x5659be(0x526)]('u_WorldRotation'), _0x17a23d[_0x5659be(0xd82)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd83)), _0x17a23d[_0x5659be(0xd84)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd85)), _0x17a23d['SCALINGMODE'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd86)), _0x17a23d[_0x5659be(0xd87)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xd88)), _0x17a23d[_0x5659be(0xd89)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd8a)), _0x17a23d['STRETCHEDBILLBOARDLENGTHSCALE'] = _0x84b6d6[_0x5659be(0x526)]('u_StretchedBillboardLengthScale'), _0x17a23d[_0x5659be(0xd8b)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd8c)), _0x17a23d[_0x5659be(0xd8d)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xd8e)), _0x17a23d[_0x5659be(0xd8f)] = _0x84b6d6[_0x5659be(0x526)]('u_CurrentTime'), _0x17a23d[_0x5659be(0xd90)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xd91)), _0x17a23d['VOLVELOCITYGRADIENTX'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd92)), _0x17a23d[_0x5659be(0xd93)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd94)), _0x17a23d[_0x5659be(0xd95)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xd96)), _0x17a23d[_0x5659be(0xd97)] = _0x84b6d6['propertyNameToID']('u_VOLVelocityConstMax'), _0x17a23d[_0x5659be(0xd98)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd99)), _0x17a23d['VOLVELOCITYGRADIENTYMAX'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd9a)), _0x17a23d[_0x5659be(0xd9b)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xd9c)), _0x17a23d[_0x5659be(0xd9d)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xd9e)), _0x17a23d['COLOROVERLIFEGRADIENTALPHAS'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xd9f)), _0x17a23d[_0x5659be(0xda0)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xda1)), _0x17a23d[_0x5659be(0xda2)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xda3)), _0x17a23d[_0x5659be(0xda4)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xda5)), _0x17a23d[_0x5659be(0xda6)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xda7)), _0x17a23d[_0x5659be(0xda8)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xda9)), _0x17a23d['SOLSIZEGRADIENTY'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xdaa)), _0x17a23d[_0x5659be(0xdab)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xdac)), _0x17a23d[_0x5659be(0xdad)] = _0x84b6d6[_0x5659be(0x526)]('u_SOLSizeGradientMax'), _0x17a23d[_0x5659be(0xdae)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdaf)), _0x17a23d['SOLSIZEGRADIENTYMAX'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdb0)), _0x17a23d[_0x5659be(0xdb1)] = _0x84b6d6['propertyNameToID']('u_SOLSizeGradientMaxZ'), _0x17a23d[_0x5659be(0xdb2)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xdb3)), _0x17a23d['ROLANGULARVELOCITYCONSTSEPRARATE'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xdb4)), _0x17a23d[_0x5659be(0xdb5)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdb6)), _0x17a23d['ROLANGULARVELOCITYGRADIENTX'] = _0x84b6d6['propertyNameToID']('u_ROLAngularVelocityGradientX'), _0x17a23d[_0x5659be(0xdb7)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdb8)), _0x17a23d['ROLANGULARVELOCITYGRADIENTZ'] = _0x84b6d6['propertyNameToID'](_0x5659be(0xdb9)), _0x17a23d[_0x5659be(0xdba)] = _0x84b6d6[_0x5659be(0x526)]('u_ROLAngularVelocityConstMax'), _0x17a23d[_0x5659be(0xdbb)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdbc)), _0x17a23d[_0x5659be(0xdbd)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdbe)), _0x17a23d[_0x5659be(0xdbf)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdc0)), _0x17a23d[_0x5659be(0xdc1)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdc2)), _0x17a23d[_0x5659be(0xdc3)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdc4)), _0x17a23d[_0x5659be(0xdc5)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdc6)), _0x17a23d[_0x5659be(0xdc7)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdc8)), _0x17a23d[_0x5659be(0xdc9)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xdca)), _0x17a23d[_0x5659be(0xdcb)] = _0x84b6d6[_0x5659be(0x526)]('u_TSAGradientUVs'), _0x17a23d[_0x5659be(0xdcc)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xdcd));
    class _0x423dc4 extends _0x4bfb48 {
        constructor() {
            var _0x112f28 = _0x5659be;
            super(), this[_0x112f28(0x68b)](_0x112f28(0xdce)), this[_0x112f28(0xd1b)] = new _0x8fb80(0x1, 0x1, 0x1, 0x1), this['_shaderValues']['setVector'](_0x423dc4[_0x112f28(0x6dc)], new _0x8fb80(0x1, 0x1, 0x0, 0x0)), this[_0x112f28(0x6fc)] = _0x423dc4['RENDERMODE_ALPHABLENDED'];
        }
        static [_0x5659be(0x687)]() {
            var _0x1446cf = _0x5659be;
            _0x423dc4[_0x1446cf(0x6dd)] = _0x84b6d6[_0x1446cf(0x510)]('DIFFUSEMAP'), _0x423dc4[_0x1446cf(0xdcf)] = _0x84b6d6[_0x1446cf(0x510)](_0x1446cf(0x737)), _0x423dc4['SHADERDEFINE_ADDTIVEFOG'] = _0x84b6d6['getDefineByName']('ADDTIVEFOG');
        }
        get [_0x5659be(0x731)]() {
            var _0x385a16 = _0x5659be;
            return this[_0x385a16(0x462)];
        }
        set [_0x5659be(0x731)](_0x3a1512) {
            var _0x53f41c = _0x5659be;
            this[_0x53f41c(0x462)] = _0x3a1512;
        }
        get [_0x5659be(0x72d)]() {
            var _0x227f36 = _0x5659be;
            return this[_0x227f36(0xd1b)]['x'];
        }
        set [_0x5659be(0x72d)](_0x3be283) {
            var _0x5dbcb3 = _0x5659be;
            this['_color']['x'] = _0x3be283, this['color'] = this[_0x5dbcb3(0xd1b)];
        }
        get ['_TintColorG']() {
            var _0x1f6b9e = _0x5659be;
            return this[_0x1f6b9e(0xd1b)]['y'];
        }
        set [_0x5659be(0x72e)](_0x477fab) {
            var _0x3a6bbf = _0x5659be;
            this[_0x3a6bbf(0xd1b)]['y'] = _0x477fab, this[_0x3a6bbf(0x462)] = this[_0x3a6bbf(0xd1b)];
        }
        get [_0x5659be(0x72f)]() {
            var _0x4eb9d5 = _0x5659be;
            return this[_0x4eb9d5(0xd1b)]['z'];
        }
        set ['_TintColorB'](_0xed7db5) {
            var _0x23df9b = _0x5659be;
            this[_0x23df9b(0xd1b)]['z'] = _0xed7db5, this[_0x23df9b(0x462)] = this[_0x23df9b(0xd1b)];
        }
        get [_0x5659be(0x730)]() {
            var _0x17bbee = _0x5659be;
            return this[_0x17bbee(0xd1b)]['w'];
        }
        set ['_TintColorA'](_0x17bbfb) {
            var _0x4f1a67 = _0x5659be;
            this[_0x4f1a67(0xd1b)]['w'] = _0x17bbfb, this[_0x4f1a67(0x462)] = this[_0x4f1a67(0xd1b)];
        }
        get [_0x5659be(0x6fa)]() {
            var _0x2e65be = _0x5659be;
            return this['_shaderValues'][_0x2e65be(0x49c)](_0x423dc4[_0x2e65be(0x6dc)]);
        }
        set [_0x5659be(0x6fa)](_0x1152f4) {
            var _0x452824 = _0x5659be, _0x13c4b5 = this[_0x452824(0x4e0)][_0x452824(0x49c)](_0x423dc4[_0x452824(0x6dc)]);
            _0x13c4b5['setValue'](_0x1152f4['x'], _0x1152f4['y'], _0x1152f4['z'], _0x1152f4['w']), this['tilingOffset'] = _0x13c4b5;
        }
        get [_0x5659be(0x6f5)]() {
            var _0xf7ab05 = _0x5659be;
            return this[_0xf7ab05(0x4e0)][_0xf7ab05(0x49c)](_0x423dc4[_0xf7ab05(0x6dc)])['x'];
        }
        set ['_MainTex_STX'](_0x35bf89) {
            var _0x56f4cd = _0x5659be, _0xe9f9f9 = this[_0x56f4cd(0x4e0)][_0x56f4cd(0x49c)](_0x423dc4[_0x56f4cd(0x6dc)]);
            _0xe9f9f9['x'] = _0x35bf89, this[_0x56f4cd(0x6f6)] = _0xe9f9f9;
        }
        get [_0x5659be(0x6f7)]() {
            var _0x54ee6d = _0x5659be;
            return this[_0x54ee6d(0x4e0)][_0x54ee6d(0x49c)](_0x423dc4['TILINGOFFSET'])['y'];
        }
        set [_0x5659be(0x6f7)](_0x278898) {
            var _0x43020a = _0x5659be, _0x3a1b72 = this[_0x43020a(0x4e0)]['getVector'](_0x423dc4['TILINGOFFSET']);
            _0x3a1b72['y'] = _0x278898, this[_0x43020a(0x6f6)] = _0x3a1b72;
        }
        get [_0x5659be(0x6f8)]() {
            var _0x4f6db7 = _0x5659be;
            return this[_0x4f6db7(0x4e0)][_0x4f6db7(0x49c)](_0x423dc4[_0x4f6db7(0x6dc)])['z'];
        }
        set [_0x5659be(0x6f8)](_0x340e19) {
            var _0x386dc5 = _0x5659be, _0x2b45b9 = this['_shaderValues'][_0x386dc5(0x49c)](_0x423dc4[_0x386dc5(0x6dc)]);
            _0x2b45b9['z'] = _0x340e19, this[_0x386dc5(0x6f6)] = _0x2b45b9;
        }
        get [_0x5659be(0x6f9)]() {
            var _0xe6d100 = _0x5659be;
            return this[_0xe6d100(0x4e0)]['getVector'](_0x423dc4[_0xe6d100(0x6dc)])['w'];
        }
        set ['_MainTex_STW'](_0x327c19) {
            var _0x32db70 = _0x5659be, _0x2da4f3 = this['_shaderValues'][_0x32db70(0x49c)](_0x423dc4['TILINGOFFSET']);
            _0x2da4f3['w'] = _0x327c19, this[_0x32db70(0x6f6)] = _0x2da4f3;
        }
        set [_0x5659be(0x6fc)](_0x879c5d) {
            var _0x541e36 = _0x5659be;
            switch (_0x879c5d) {
            case _0x423dc4['RENDERMODE_ADDTIVE']:
                this[_0x541e36(0x6ae)] = _0x4bfb48[_0x541e36(0x6b1)], this['depthWrite'] = ![], this[_0x541e36(0x696)] = _0x2aa393[_0x541e36(0x6c8)], this[_0x541e36(0x695)] = _0x2aa393[_0x541e36(0x6c9)], this[_0x541e36(0x699)] = _0x2aa393[_0x541e36(0x6ff)], this[_0x541e36(0x69b)] = _0x2aa393[_0x541e36(0x6bc)], this[_0x541e36(0x6a0)] = ![], this['_shaderValues'][_0x541e36(0x62c)](_0x423dc4[_0x541e36(0x732)]);
                break;
            case _0x423dc4[_0x541e36(0x73a)]:
                this['renderQueue'] = _0x4bfb48[_0x541e36(0x6b1)], this[_0x541e36(0x698)] = ![], this[_0x541e36(0x696)] = _0x2aa393[_0x541e36(0x6c8)], this['blend'] = _0x2aa393[_0x541e36(0x6c9)], this[_0x541e36(0x699)] = _0x2aa393['BLENDPARAM_SRC_ALPHA'], this[_0x541e36(0x69b)] = _0x2aa393[_0x541e36(0x700)], this[_0x541e36(0x6a0)] = ![], this[_0x541e36(0x4e0)][_0x541e36(0x493)](_0x423dc4[_0x541e36(0x732)]);
                break;
            default:
                throw new Error(_0x541e36(0xdd0));
            }
        }
        get [_0x5659be(0x733)]() {
            return this['_TintColorR'];
        }
        set ['colorR'](_0x32bd34) {
            var _0x5ba34d = _0x5659be;
            this[_0x5ba34d(0x72d)] = _0x32bd34;
        }
        get [_0x5659be(0x734)]() {
            var _0xb7870e = _0x5659be;
            return this[_0xb7870e(0x72e)];
        }
        set [_0x5659be(0x734)](_0x18e622) {
            var _0x260141 = _0x5659be;
            this[_0x260141(0x72e)] = _0x18e622;
        }
        get [_0x5659be(0x735)]() {
            var _0xa8a17 = _0x5659be;
            return this[_0xa8a17(0x72f)];
        }
        set [_0x5659be(0x735)](_0x565288) {
            var _0x203604 = _0x5659be;
            this[_0x203604(0x72f)] = _0x565288;
        }
        get [_0x5659be(0x736)]() {
            var _0x3a16eb = _0x5659be;
            return this[_0x3a16eb(0x730)];
        }
        set [_0x5659be(0x736)](_0x30adbd) {
            var _0x401ea7 = _0x5659be;
            this[_0x401ea7(0x730)] = _0x30adbd;
        }
        get [_0x5659be(0x462)]() {
            var _0x306a80 = _0x5659be;
            return this[_0x306a80(0x4e0)][_0x306a80(0x49c)](_0x423dc4[_0x306a80(0x737)]);
        }
        set [_0x5659be(0x462)](_0x20911a) {
            var _0x398449 = _0x5659be;
            if (_0x20911a)
                this['_shaderValues'][_0x398449(0x62c)](_0x423dc4['SHADERDEFINE_TINTCOLOR']);
            else
                this[_0x398449(0x4e0)][_0x398449(0x493)](_0x423dc4[_0x398449(0xdcf)]);
            this['_shaderValues']['setVector'](_0x423dc4[_0x398449(0x737)], _0x20911a);
        }
        get [_0x5659be(0x704)]() {
            var _0x3178f0 = _0x5659be;
            return this[_0x3178f0(0x6f5)];
        }
        set [_0x5659be(0x704)](_0x34a7e3) {
            var _0x2bf7d1 = _0x5659be;
            this[_0x2bf7d1(0x6f5)] = _0x34a7e3;
        }
        get ['tilingOffsetY']() {
            var _0x3a58d1 = _0x5659be;
            return this[_0x3a58d1(0x6f7)];
        }
        set ['tilingOffsetY'](_0x3741c5) {
            var _0x5d9296 = _0x5659be;
            this[_0x5d9296(0x6f7)] = _0x3741c5;
        }
        get [_0x5659be(0x739)]() {
            var _0x81845b = _0x5659be;
            return this[_0x81845b(0x6f8)];
        }
        set [_0x5659be(0x739)](_0x415d11) {
            this['_MainTex_STZ'] = _0x415d11;
        }
        get ['tilingOffsetW']() {
            var _0x57c0aa = _0x5659be;
            return this[_0x57c0aa(0x6f9)];
        }
        set [_0x5659be(0x706)](_0x32f350) {
            var _0x2104c3 = _0x5659be;
            this[_0x2104c3(0x6f9)] = _0x32f350;
        }
        get [_0x5659be(0x6f6)]() {
            var _0x5956b8 = _0x5659be;
            return this['_shaderValues'][_0x5956b8(0x49c)](_0x423dc4['TILINGOFFSET']);
        }
        set [_0x5659be(0x6f6)](_0x58a74a) {
            var _0x43baa5 = _0x5659be;
            _0x58a74a ? this[_0x43baa5(0x4e0)]['setVector'](_0x423dc4[_0x43baa5(0x6dc)], _0x58a74a) : this['_shaderValues'][_0x43baa5(0x49c)](_0x423dc4[_0x43baa5(0x6dc)])[_0x43baa5(0x1fa)](0x1, 0x1, 0x0, 0x0);
        }
        get ['texture']() {
            var _0x499c4c = _0x5659be;
            return this['_shaderValues'][_0x499c4c(0x4a4)](_0x423dc4[_0x499c4c(0xdd1)]);
        }
        set [_0x5659be(0x738)](_0x5cf89a) {
            var _0x7f98f5 = _0x5659be;
            if (_0x5cf89a)
                this[_0x7f98f5(0x4e0)][_0x7f98f5(0x62c)](_0x423dc4[_0x7f98f5(0x6dd)]);
            else
                this[_0x7f98f5(0x4e0)]['removeDefine'](_0x423dc4[_0x7f98f5(0x6dd)]);
            this[_0x7f98f5(0x4e0)][_0x7f98f5(0x4a2)](_0x423dc4[_0x7f98f5(0xdd1)], _0x5cf89a);
        }
        [_0x5659be(0x1f4)]() {
            var _0x29d28e = _0x5659be, _0x4e710c = new _0x423dc4();
            return this[_0x29d28e(0x1f0)](_0x4e710c), _0x4e710c;
        }
    }
    _0x423dc4['RENDERMODE_ALPHABLENDED'] = 0x0, _0x423dc4['RENDERMODE_ADDTIVE'] = 0x1, _0x423dc4[_0x5659be(0xdd1)] = _0x84b6d6[_0x5659be(0x526)]('u_texture'), _0x423dc4[_0x5659be(0x737)] = _0x84b6d6['propertyNameToID']('u_Tintcolor'), _0x423dc4[_0x5659be(0x6dc)] = _0x84b6d6[_0x5659be(0x526)]('u_TilingOffset');
    class _0xcb0adc {
        constructor() {
        }
        static [_0x5659be(0xdd2)](_0x30c906, _0x894d36, _0x5c3211) {
        }
        static [_0x5659be(0xdd3)](_0x259357, _0x16e76e) {
            return ![];
        }
    }
    _0xcb0adc[_0x5659be(0xdd4)] = 0x1, _0xcb0adc['COLLISIONFILTERGROUP_STATICFILTER'] = 0x2, _0xcb0adc[_0x5659be(0xdd5)] = 0x4, _0xcb0adc[_0x5659be(0xdd6)] = 0x8, _0xcb0adc[_0x5659be(0xdd7)] = 0x10, _0xcb0adc[_0x5659be(0xdd8)] = 0x20, _0xcb0adc['COLLISIONFILTERGROUP_CUSTOMFILTER1'] = 0x40, _0xcb0adc[_0x5659be(0xdd9)] = 0x80, _0xcb0adc[_0x5659be(0xdda)] = 0x100, _0xcb0adc['COLLISIONFILTERGROUP_CUSTOMFILTER4'] = 0x200, _0xcb0adc[_0x5659be(0xddb)] = 0x400, _0xcb0adc['COLLISIONFILTERGROUP_CUSTOMFILTER6'] = 0x800, _0xcb0adc[_0x5659be(0xddc)] = 0x1000, _0xcb0adc[_0x5659be(0xddd)] = 0x2000, _0xcb0adc[_0x5659be(0xdde)] = 0x4000, _0xcb0adc[_0x5659be(0xddf)] = 0x8000, _0xcb0adc['COLLISIONFILTERGROUP_ALLFILTER'] = -0x1, _0xcb0adc[_0x5659be(0xde0)] = new _0x3f70c5(0x0, -9.81, 0x0);
    class _0x32c6b3 extends _0x55d32a {
        constructor(_0x491dee) {
            var _0x6a24fb = _0x5659be;
            super(_0x491dee), this['_finalGravity'] = new _0x3f70c5(), this[_0x6a24fb(0x5d7)] = null, this[_0x6a24fb(0xde1)] = 0x0, this[_0x6a24fb(0xde2)] = 0x0, this[_0x6a24fb(0xde3)] = 0x2, this['renderMode'] = 0x0, this[_0x6a24fb(0xb0d)] = ![];
        }
        get ['renderMode']() {
            var _0x4b83a8 = _0x5659be;
            return this[_0x4b83a8(0xde4)];
        }
        set [_0x5659be(0x6fc)](_0x22dce1) {
            var _0x4a0b35 = _0x5659be;
            if (this[_0x4a0b35(0xde4)] !== _0x22dce1) {
                var _0x2599a7 = this[_0x4a0b35(0x4e0)];
                switch (this[_0x4a0b35(0xde4)]) {
                case 0x0:
                    _0x2599a7[_0x4a0b35(0x493)](_0x17a23d['SHADERDEFINE_RENDERMODE_BILLBOARD']);
                    break;
                case 0x1:
                    _0x2599a7['removeDefine'](_0x17a23d['SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD']);
                    break;
                case 0x2:
                    _0x2599a7[_0x4a0b35(0x493)](_0x17a23d[_0x4a0b35(0xde5)]);
                    break;
                case 0x3:
                    _0x2599a7[_0x4a0b35(0x493)](_0x17a23d['SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD']);
                    break;
                case 0x4:
                    _0x2599a7[_0x4a0b35(0x493)](_0x17a23d[_0x4a0b35(0xde6)]);
                    break;
                }
                this[_0x4a0b35(0xde4)] = _0x22dce1;
                switch (_0x22dce1) {
                case 0x0:
                    _0x2599a7[_0x4a0b35(0x62c)](_0x17a23d[_0x4a0b35(0xde7)]);
                    break;
                case 0x1:
                    _0x2599a7[_0x4a0b35(0x62c)](_0x17a23d[_0x4a0b35(0xde8)]);
                    break;
                case 0x2:
                    _0x2599a7[_0x4a0b35(0x62c)](_0x17a23d[_0x4a0b35(0xde5)]);
                    break;
                case 0x3:
                    _0x2599a7[_0x4a0b35(0x62c)](_0x17a23d[_0x4a0b35(0xde9)]);
                    break;
                case 0x4:
                    _0x2599a7[_0x4a0b35(0x62c)](_0x17a23d['SHADERDEFINE_RENDERMODE_MESH']);
                    break;
                default:
                    throw new Error('ShurikenParticleRender:\x20unknown\x20renderMode\x20Value.');
                }
                var _0x45184d = this[_0x4a0b35(0x3d3)][_0x4a0b35(0xdea)];
                _0x45184d && _0x45184d[_0x4a0b35(0xdeb)]();
            }
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set [_0x5659be(0x8d7)](_0x486c7f) {
            var _0x2106c2 = _0x5659be;
            this[_0x2106c2(0x5d7)] !== _0x486c7f && (this['_mesh'] && this[_0x2106c2(0x5d7)][_0x2106c2(0x351)](), this[_0x2106c2(0x5d7)] = _0x486c7f, _0x486c7f && _0x486c7f[_0x2106c2(0x354)](), this[_0x2106c2(0x3d3)][_0x2106c2(0xdea)][_0x2106c2(0xdeb)]());
        }
        ['_calculateBoundingBox']() {
            var _0x28d030 = _0x5659be, _0x26db02 = this['_owner'][_0x28d030(0xdea)], _0x39f2ad;
            if (_0x26db02[_0x28d030(0xdec)])
                _0x39f2ad = _0x26db02['customBounds'], _0x39f2ad[_0x28d030(0xa59)](this['_owner']['transform'][_0x28d030(0x3ce)], this[_0x28d030(0xa67)]);
            else {
                if (_0x26db02['_simulationSupported']()) {
                    _0x26db02['_generateBounds'](), _0x39f2ad = _0x26db02['_bounds'], _0x39f2ad[_0x28d030(0xa59)](this['_owner']['transform']['worldMatrix'], this[_0x28d030(0xa67)]);
                    if (_0x26db02['gravityModifier'] != 0x0) {
                        var _0x1cd8bf = this[_0x28d030(0xa67)][_0x28d030(0x828)](), _0x2e5e4f = this['_bounds'][_0x28d030(0xa4f)](), _0x31d797 = _0x26db02[_0x28d030(0xded)];
                        _0x1cd8bf['y'] -= _0x31d797['x'], _0x2e5e4f['y'] -= _0x31d797['y'], this[_0x28d030(0xa67)]['setMax'](_0x1cd8bf), this['_bounds'][_0x28d030(0xa6b)](_0x2e5e4f);
                    }
                } else {
                    var _0x2e5e4f = this['_bounds']['getMin']();
                    _0x2e5e4f[_0x28d030(0x1fa)](-Number[_0x28d030(0xa46)], -Number[_0x28d030(0xa46)], -Number['MAX_VALUE']), this[_0x28d030(0xa67)][_0x28d030(0xa6b)](_0x2e5e4f);
                    var _0x1cd8bf = this['_bounds'][_0x28d030(0x828)]();
                    _0x1cd8bf['setValue'](Number[_0x28d030(0xa46)], Number[_0x28d030(0xa46)], Number[_0x28d030(0xa46)]), this['_bounds'][_0x28d030(0xa51)](_0x1cd8bf);
                }
            }
        }
        [_0x5659be(0x813)](_0x6fa7b4, _0x52fe13) {
            var _0x3628e6 = _0x5659be;
            if (_0x6fa7b4) {
                if (_0x6fa7b4[_0x3628e6(0x8bb)](this['bounds'][_0x3628e6(0x80e)]())) {
                    if (this[_0x3628e6(0x3d3)][_0x3628e6(0xdea)][_0x3628e6(0xdee)])
                        return !![];
                    else
                        return ![];
                } else
                    return ![];
            } else
                return !![];
        }
        [_0x5659be(0x5f3)](_0x39a06e, _0x50fcf0) {
            var _0xab2496 = _0x5659be, _0x556789 = this[_0xab2496(0x3d3)][_0xab2496(0xdea)], _0x1d79f0 = this[_0xab2496(0x4e0)], _0x2a49e0 = this[_0xab2496(0x3d3)][_0xab2496(0x3cc)];
            switch (_0x556789[_0xab2496(0xdef)]) {
            case 0x0:
                break;
            case 0x1:
                _0x1d79f0[_0xab2496(0x4b1)](_0x17a23d[_0xab2496(0xd7f)], _0x2a49e0[_0xab2496(0x59e)]), _0x1d79f0[_0xab2496(0x573)](_0x17a23d[_0xab2496(0xd81)], _0x2a49e0[_0xab2496(0x5a0)]);
                break;
            default:
                throw new Error('ShurikenParticleMaterial:\x20SimulationSpace\x20value\x20is\x20invalid.');
            }
            switch (_0x556789['scaleMode']) {
            case 0x0:
                var _0x4cb8c2 = _0x2a49e0[_0xab2496(0x585)]();
                _0x1d79f0[_0xab2496(0x4b1)](_0x17a23d['POSITIONSCALE'], _0x4cb8c2), _0x1d79f0[_0xab2496(0x4b1)](_0x17a23d[_0xab2496(0xd84)], _0x4cb8c2);
                break;
            case 0x1:
                var _0x268e6c = _0x2a49e0['localScale'];
                _0x1d79f0['setVector3'](_0x17a23d[_0xab2496(0xd82)], _0x268e6c), _0x1d79f0[_0xab2496(0x4b1)](_0x17a23d[_0xab2496(0xd84)], _0x268e6c);
                break;
            case 0x2:
                _0x1d79f0[_0xab2496(0x4b1)](_0x17a23d[_0xab2496(0xd82)], _0x2a49e0['getWorldLossyScale']()), _0x1d79f0[_0xab2496(0x4b1)](_0x17a23d[_0xab2496(0xd84)], _0x3f70c5['_ONE']);
                break;
            }
            _0x3f70c5[_0xab2496(0x1ee)](_0xcb0adc[_0xab2496(0xde0)], _0x556789[_0xab2496(0xdf0)], this[_0xab2496(0xdf1)]), _0x1d79f0['setVector3'](_0x17a23d['GRAVITY'], this[_0xab2496(0xdf1)]), _0x1d79f0[_0xab2496(0x4b0)](_0x17a23d[_0xab2496(0xd8d)], _0x556789['simulationSpace']), _0x1d79f0[_0xab2496(0x497)](_0x17a23d[_0xab2496(0xd89)], _0x556789[_0xab2496(0xdf2)]), _0x1d79f0['setInt'](_0x17a23d[_0xab2496(0xdf3)], _0x556789[_0xab2496(0xdf4)]), _0x1d79f0[_0xab2496(0x4af)](_0x17a23d[_0xab2496(0xdf5)], this[_0xab2496(0xde3)]), _0x1d79f0['setNumber'](_0x17a23d['STRETCHEDBILLBOARDSPEEDSCALE'], this[_0xab2496(0xde2)]), _0x1d79f0[_0xab2496(0x4af)](_0x17a23d['CURRENTTIME'], _0x556789[_0xab2496(0xdf6)]);
        }
        get [_0x5659be(0x80d)]() {
            var _0x7cb659 = _0x5659be;
            return this[_0x7cb659(0xb0c)] && (this['_calculateBoundingBox'](), this[_0x7cb659(0xb0c)] = ![]), this['_bounds'];
        }
        ['_destroy']() {
            var _0x4aba9f = _0x5659be;
            super[_0x4aba9f(0xa86)](), this[_0x4aba9f(0x5d7)] && (this['_mesh'][_0x4aba9f(0x351)](), this[_0x4aba9f(0x5d7)] = null);
        }
    }
    class _0x4717eb {
        constructor() {
        }
    }
    _0x4717eb[_0x5659be(0xdf7)] = 0x5, _0x4717eb[_0x5659be(0xdf8)] = 0x1, _0x4717eb[_0x5659be(0xdf9)] = 0x2, _0x4717eb[_0x5659be(0xdfa)] = 0x3, _0x4717eb[_0x5659be(0xdfb)] = 0x4, _0x4717eb['PARTICLE_DIRECTIONTIME'] = 0x0, _0x4717eb[_0x5659be(0xdfc)] = 0x6, _0x4717eb[_0x5659be(0xdfd)] = 0x7, _0x4717eb[_0x5659be(0xdfe)] = 0x8, _0x4717eb[_0x5659be(0xdff)] = 0x9, _0x4717eb['PARTICLE_STARTSPEED'] = 0xa, _0x4717eb[_0x5659be(0xe00)] = 0xb, _0x4717eb[_0x5659be(0xe01)] = 0xc, _0x4717eb[_0x5659be(0xe02)] = 0xd, _0x4717eb[_0x5659be(0xe03)] = 0xe;
    class _0x174845 extends _0x4717eb {
        constructor(_0x26784b, _0x4b4c0b, _0x25a628, _0x83b645, _0x2cdcee, _0xfd16b8, _0xc29b36, _0x58219c, _0x4fadc1, _0x5567a2, _0x2a5e02, _0x1604b1, _0x37879d, _0x555271) {
            var _0x2d923c = _0x5659be;
            super(), this[_0x2d923c(0xe04)] = _0x26784b, this[_0x2d923c(0xe05)] = _0x4b4c0b, this[_0x2d923c(0xd7d)] = _0x25a628, this[_0x2d923c(0xe06)] = _0x83b645, this['_startSize'] = _0x2cdcee, this[_0x2d923c(0xe07)] = _0xfd16b8, this['_startRotation1'] = _0xc29b36, this[_0x2d923c(0xe08)] = _0x58219c, this[_0x2d923c(0xe09)] = _0x4fadc1, this[_0x2d923c(0xbb9)] = _0x5567a2, this['_startSpeed'] = _0x2a5e02, this['_randoms0'] = _0x1604b1, this[_0x2d923c(0xe0a)] = _0x37879d, this[_0x2d923c(0xe0b)] = _0x555271;
        }
        static get ['vertexDeclaration']() {
            return _0x174845['_vertexDeclaration'];
        }
        static [_0x5659be(0x229)]() {
            var _0x578b76 = _0x5659be;
            _0x174845['_vertexDeclaration'] = new _0x330160(0x98, [
                new _0x1f18c6(0x0, _0x48a921[_0x578b76(0x45f)], _0x4717eb[_0x578b76(0xdf7)]),
                new _0x1f18c6(0x10, _0x48a921[_0x578b76(0x45f)], _0x4717eb['PARTICLE_SHAPEPOSITIONSTARTLIFETIME']),
                new _0x1f18c6(0x20, _0x48a921[_0x578b76(0x45f)], _0x4717eb[_0x578b76(0xe0c)]),
                new _0x1f18c6(0x30, _0x48a921[_0x578b76(0x45f)], _0x4717eb[_0x578b76(0xdfc)]),
                new _0x1f18c6(0x40, _0x48a921[_0x578b76(0x45d)], _0x4717eb[_0x578b76(0xdfe)]),
                new _0x1f18c6(0x4c, _0x48a921['Vector3'], _0x4717eb[_0x578b76(0xdff)]),
                new _0x1f18c6(0x58, _0x48a921[_0x578b76(0xe0d)], _0x4717eb[_0x578b76(0xe0e)]),
                new _0x1f18c6(0x5c, _0x48a921['Vector4'], _0x4717eb[_0x578b76(0xe00)]),
                new _0x1f18c6(0x6c, _0x48a921[_0x578b76(0x45f)], _0x4717eb[_0x578b76(0xe01)]),
                new _0x1f18c6(0x7c, _0x48a921['Vector3'], _0x4717eb[_0x578b76(0xe02)]),
                new _0x1f18c6(0x88, _0x48a921[_0x578b76(0x45f)], _0x4717eb[_0x578b76(0xe03)])
            ]);
        }
        get [_0x5659be(0xe0f)]() {
            var _0x4ce70c = _0x5659be;
            return this[_0x4ce70c(0xe04)];
        }
        get [_0x5659be(0xe10)]() {
            var _0x44a457 = _0x5659be;
            return this[_0x44a457(0xe05)];
        }
        get [_0x5659be(0xd7e)]() {
            var _0x562423 = _0x5659be;
            return this[_0x562423(0xd7d)];
        }
        get [_0x5659be(0xa74)]() {
            return this['_startColor'];
        }
        get [_0x5659be(0xe11)]() {
            var _0x5800d5 = _0x5659be;
            return this[_0x5800d5(0xe12)];
        }
        get [_0x5659be(0xe13)]() {
            var _0x3ea8bb = _0x5659be;
            return this[_0x3ea8bb(0xe07)];
        }
        get ['startRotation1']() {
            var _0x50196a = _0x5659be;
            return this[_0x50196a(0xe14)];
        }
        get [_0x5659be(0xe15)]() {
            return this['_startRotation2'];
        }
        get [_0x5659be(0xe16)]() {
            return this['_startLifeTime'];
        }
        get [_0x5659be(0x268)]() {
            return this['_time'];
        }
        get [_0x5659be(0xe17)]() {
            var _0x3765b2 = _0x5659be;
            return this[_0x3765b2(0xe18)];
        }
        get ['random0']() {
            var _0x3bed29 = _0x5659be;
            return this[_0x3bed29(0xe19)];
        }
        get ['random1']() {
            var _0x34770d = _0x5659be;
            return this[_0x34770d(0xe0a)];
        }
        get [_0x5659be(0xe1a)]() {
            var _0x481a41 = _0x5659be;
            return this[_0x481a41(0xe0b)];
        }
    }
    class _0x50e22b extends _0x4717eb {
        constructor(_0x18cd94, _0x5930ef, _0x114447, _0x41221b, _0xeee74a, _0x35c314, _0x58bff4, _0x49e961, _0x46774c, _0x3d12f5, _0x347d23, _0x315b31, _0xa0d349, _0x5da069) {
            var _0x1df3c4 = _0x5659be;
            super(), this['_cornerTextureCoordinate'] = _0x18cd94, this[_0x1df3c4(0xe05)] = _0x5930ef, this[_0x1df3c4(0xd7d)] = _0x114447, this[_0x1df3c4(0xe06)] = _0x41221b, this[_0x1df3c4(0xe12)] = _0xeee74a, this[_0x1df3c4(0xe07)] = _0x35c314, this[_0x1df3c4(0xe14)] = _0x58bff4, this[_0x1df3c4(0xe08)] = _0x49e961, this[_0x1df3c4(0xe09)] = _0x46774c, this['_time'] = _0x3d12f5, this[_0x1df3c4(0xe18)] = _0x347d23, this[_0x1df3c4(0xe19)] = _0x315b31, this[_0x1df3c4(0xe0a)] = _0xa0d349, this[_0x1df3c4(0xe0b)] = _0x5da069;
        }
        static ['__init__']() {
            var _0xcea8de = _0x5659be;
            _0x50e22b[_0xcea8de(0x43f)] = new _0x330160(0xac, [
                new _0x1f18c6(0x0, _0x48a921[_0xcea8de(0x45d)], _0x4717eb[_0xcea8de(0xdf8)]),
                new _0x1f18c6(0xc, _0x48a921['Vector4'], _0x4717eb['PARTICLE_COLOR0']),
                new _0x1f18c6(0x1c, _0x48a921[_0xcea8de(0x45b)], _0x4717eb['PARTICLE_TEXTURECOORDINATE0']),
                new _0x1f18c6(0x24, _0x48a921['Vector4'], _0x4717eb['PARTICLE_SHAPEPOSITIONSTARTLIFETIME']),
                new _0x1f18c6(0x34, _0x48a921[_0xcea8de(0x45f)], _0x4717eb[_0xcea8de(0xe0c)]),
                new _0x1f18c6(0x44, _0x48a921['Vector4'], _0x4717eb[_0xcea8de(0xdfc)]),
                new _0x1f18c6(0x54, _0x48a921[_0xcea8de(0x45d)], _0x4717eb['PARTICLE_STARTSIZE']),
                new _0x1f18c6(0x60, _0x48a921[_0xcea8de(0x45d)], _0x4717eb[_0xcea8de(0xdff)]),
                new _0x1f18c6(0x6c, _0x48a921[_0xcea8de(0xe0d)], _0x4717eb[_0xcea8de(0xe0e)]),
                new _0x1f18c6(0x70, _0x48a921[_0xcea8de(0x45f)], _0x4717eb[_0xcea8de(0xe00)]),
                new _0x1f18c6(0x80, _0x48a921[_0xcea8de(0x45f)], _0x4717eb[_0xcea8de(0xe01)]),
                new _0x1f18c6(0x90, _0x48a921[_0xcea8de(0x45d)], _0x4717eb['PARTICLE_SIMULATIONWORLDPOSTION']),
                new _0x1f18c6(0x9c, _0x48a921[_0xcea8de(0x45f)], _0x4717eb[_0xcea8de(0xe03)])
            ]);
        }
        static get [_0x5659be(0x449)]() {
            return _0x50e22b['_vertexDeclaration'];
        }
        get [_0x5659be(0xe0f)]() {
            var _0x35305b = _0x5659be;
            return this[_0x35305b(0xe04)];
        }
        get [_0x5659be(0x59e)]() {
            var _0x523b9e = _0x5659be;
            return this[_0x523b9e(0xe05)];
        }
        get [_0x5659be(0xd7e)]() {
            var _0x88aa8a = _0x5659be;
            return this[_0x88aa8a(0xd7d)];
        }
        get [_0x5659be(0xa74)]() {
            var _0x263271 = _0x5659be;
            return this[_0x263271(0xe06)];
        }
        get [_0x5659be(0xe11)]() {
            var _0x20ceb3 = _0x5659be;
            return this[_0x20ceb3(0xe12)];
        }
        get [_0x5659be(0xe13)]() {
            return this['_startRotation0'];
        }
        get ['startRotation1']() {
            var _0x2620db = _0x5659be;
            return this[_0x2620db(0xe14)];
        }
        get [_0x5659be(0xe15)]() {
            var _0xc7555b = _0x5659be;
            return this[_0xc7555b(0xe08)];
        }
        get ['startLifeTime']() {
            var _0x45d8b4 = _0x5659be;
            return this[_0x45d8b4(0xe09)];
        }
        get ['time']() {
            var _0x11dd9c = _0x5659be;
            return this[_0x11dd9c(0xbb9)];
        }
        get [_0x5659be(0xe17)]() {
            var _0xbf5883 = _0x5659be;
            return this[_0xbf5883(0xe18)];
        }
        get [_0x5659be(0xe1b)]() {
            var _0x8366f3 = _0x5659be;
            return this[_0x8366f3(0xe19)];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulationWorldPostion']() {
            var _0x37a897 = _0x5659be;
            return this[_0x37a897(0xe0b)];
        }
    }
    class _0x112621 {
        constructor(_0x497cb1) {
            var _0x32d29e = _0x5659be;
            this[_0x32d29e(0xe1c)] = new Uint32Array(0x1), this[_0x32d29e(0xe1d)] = new Uint32Array(0x4), this['seeds'][0x0] = _0x497cb1, this[_0x32d29e(0xe1d)][0x1] = this[_0x32d29e(0xe1d)][0x0] * 0x6c078965 + 0x1, this[_0x32d29e(0xe1d)][0x2] = this[_0x32d29e(0xe1d)][0x1] * 0x6c078965 + 0x1, this[_0x32d29e(0xe1d)][0x3] = this[_0x32d29e(0xe1d)][0x2] * 0x6c078965 + 0x1;
        }
        static [_0x5659be(0xe1e)](_0x278e64) {
            return (_0x278e64 & 0x7fffff) * (0x1 / 0x7fffff);
        }
        static [_0x5659be(0xe1f)](_0x5d9efa) {
            return (_0x5d9efa & 0x7fffff) >>> 0xf;
        }
        get ['seed']() {
            var _0x2fdfe1 = _0x5659be;
            return this[_0x2fdfe1(0xe1d)][0x0];
        }
        set ['seed'](_0x20485d) {
            var _0x22d6f2 = _0x5659be;
            this[_0x22d6f2(0xe1d)][0x0] = _0x20485d, this['seeds'][0x1] = this[_0x22d6f2(0xe1d)][0x0] * 0x6c078965 + 0x1, this['seeds'][0x2] = this[_0x22d6f2(0xe1d)][0x1] * 0x6c078965 + 0x1, this['seeds'][0x3] = this[_0x22d6f2(0xe1d)][0x2] * 0x6c078965 + 0x1;
        }
        [_0x5659be(0xe20)]() {
            var _0x5f50b1 = _0x5659be;
            return this[_0x5f50b1(0xe1c)][0x0] = this[_0x5f50b1(0xe1d)][0x0] ^ this['seeds'][0x0] << 0xb, this[_0x5f50b1(0xe1d)][0x0] = this[_0x5f50b1(0xe1d)][0x1], this[_0x5f50b1(0xe1d)][0x1] = this[_0x5f50b1(0xe1d)][0x2], this['seeds'][0x2] = this['seeds'][0x3], this[_0x5f50b1(0xe1d)][0x3] = this['seeds'][0x3] ^ this[_0x5f50b1(0xe1d)][0x3] >>> 0x13 ^ (this[_0x5f50b1(0xe1c)][0x0] ^ this[_0x5f50b1(0xe1c)][0x0] >>> 0x8), this[_0x5f50b1(0xe1d)][0x3];
        }
        ['getFloat']() {
            var _0x452a10 = _0x5659be;
            return this[_0x452a10(0xe20)](), (this[_0x452a10(0xe1d)][0x3] & 0x7fffff) * (0x1 / 0x7fffff);
        }
        [_0x5659be(0xe21)]() {
            var _0x432309 = _0x5659be;
            return this[_0x432309(0xd5c)]() * 0x2 - 0x1;
        }
    }
    class _0x51c5c1 {
        constructor() {
            var _0x2a6885 = _0x5659be;
            this[_0x2a6885(0xe22)] = 0xa, this[_0x2a6885(0xa5f)] = ![], this[_0x2a6885(0xe23)] = [];
        }
        set ['emissionRate'](_0x6039a1) {
            var _0x4de5b0 = _0x5659be;
            if (_0x6039a1 < 0x0)
                throw new Error(_0x4de5b0(0xe24));
            this['_emissionRate'] = _0x6039a1;
        }
        get [_0x5659be(0xe25)]() {
            var _0x57be80 = _0x5659be;
            return this[_0x57be80(0xe22)];
        }
        get [_0x5659be(0x5cf)]() {
            return this['_destroyed'];
        }
        [_0x5659be(0x311)]() {
            var _0x49c477 = _0x5659be;
            this[_0x49c477(0xe23)] = null, this['_destroyed'] = !![];
        }
        [_0x5659be(0xe26)]() {
            var _0x5edc77 = _0x5659be;
            return this[_0x5edc77(0xe23)]['length'];
        }
        ['getBurstByIndex'](_0x5c832c) {
            var _0x51a03c = _0x5659be;
            return this[_0x51a03c(0xe23)][_0x5c832c];
        }
        [_0x5659be(0xe27)](_0x43953f) {
            var _0x1070f1 = _0x5659be, _0x2ad802 = this[_0x1070f1(0xe23)]['length'];
            if (_0x2ad802 > 0x0)
                for (var _0x35a9f0 = 0x0; _0x35a9f0 < _0x2ad802; _0x35a9f0++) {
                    if (this[_0x1070f1(0xe23)][_0x35a9f0][_0x1070f1(0x268)] > _0x43953f[_0x1070f1(0x268)])
                        this[_0x1070f1(0xe23)][_0x1070f1(0x32c)](_0x35a9f0, 0x0, _0x43953f);
                }
            this[_0x1070f1(0xe23)][_0x1070f1(0x298)](_0x43953f);
        }
        ['removeBurst'](_0x3d9a94) {
            var _0x32bc8b = _0x5659be, _0x4a677c = this[_0x32bc8b(0xe23)][_0x32bc8b(0x384)](_0x3d9a94);
            _0x4a677c !== -0x1 && this['_bursts'][_0x32bc8b(0x32c)](_0x4a677c, 0x1);
        }
        ['removeBurstByIndex'](_0x2b1958) {
            var _0x14bb26 = _0x5659be;
            this['_bursts'][_0x14bb26(0x32c)](_0x2b1958, 0x1);
        }
        [_0x5659be(0xe28)]() {
            var _0x4115de = _0x5659be;
            this[_0x4115de(0xe23)][_0x4115de(0x1ff)] = 0x0;
        }
        [_0x5659be(0x1f0)](_0x2fdcbf) {
            var _0x570a61 = _0x5659be, _0x1b20e7 = _0x2fdcbf, _0x1c63e1 = _0x1b20e7[_0x570a61(0xe23)];
            _0x1c63e1[_0x570a61(0x1ff)] = this[_0x570a61(0xe23)][_0x570a61(0x1ff)];
            for (var _0x2e230d = 0x0, _0x2b2413 = this[_0x570a61(0xe23)][_0x570a61(0x1ff)]; _0x2e230d < _0x2b2413; _0x2e230d++) {
                var _0x12e19e = _0x1c63e1[_0x2e230d];
                if (_0x12e19e)
                    this[_0x570a61(0xe23)][_0x2e230d][_0x570a61(0x1f0)](_0x12e19e);
                else
                    _0x1c63e1[_0x2e230d] = this[_0x570a61(0xe23)][_0x2e230d][_0x570a61(0x1f4)]();
            }
            _0x1b20e7[_0x570a61(0xe22)] = this[_0x570a61(0xe22)], _0x1b20e7[_0x570a61(0x650)] = this['enable'];
        }
        [_0x5659be(0x1f4)]() {
            var _0xc64e32 = _0x5659be, _0x103fe8 = new _0x51c5c1();
            return this[_0xc64e32(0x1f0)](_0x103fe8), _0x103fe8;
        }
    }
    class _0x279d69 {
        constructor() {
        }
        static [_0x5659be(0xe29)](_0x4b04fb, _0x19b2a9) {
            var _0x4c4803 = _0x5659be;
            for (var _0xdaa401 = 0x1, _0x4c5294 = _0x4b04fb['gradientCount']; _0xdaa401 < _0x4c5294; _0xdaa401++) {
                var _0x368079 = _0x4b04fb[_0x4c4803(0xd47)](_0xdaa401);
                if (_0x368079 >= _0x19b2a9) {
                    var _0x4842bb = _0x4b04fb['getKeyByIndex'](_0xdaa401 - 0x1), _0x5c824a = (_0x19b2a9 - _0x4842bb) / (_0x368079 - _0x4842bb);
                    return _0x218b83[_0x4c4803(0xe2a)][_0x4c4803(0x1fc)](_0x4b04fb[_0x4c4803(0xd48)](_0xdaa401 - 0x1), _0x4b04fb[_0x4c4803(0xd48)](_0xdaa401), _0x5c824a);
                }
            }
            throw new Error(_0x4c4803(0xe2b));
        }
        static [_0x5659be(0xe2c)](_0x4dba97, _0x1ba5df, _0x2f3f54, _0x48a2af, _0x107d18) {
            var _0x460787 = _0x5659be, _0x5ddf39;
            _0x48a2af ? (_0x48a2af[_0x460787(0xd66)] = _0x107d18[0x6], _0x5ddf39 = _0x48a2af[_0x460787(0xd5c)](), _0x107d18[0x6] = _0x48a2af[_0x460787(0xd66)]) : _0x5ddf39 = Math['random'](), _0x5ddf39 < _0x2f3f54 ? (_0x1ba5df['x'] = -_0x4dba97['x'], _0x1ba5df['y'] = -_0x4dba97['y'], _0x1ba5df['z'] = -_0x4dba97['z']) : (_0x1ba5df['x'] = _0x4dba97['x'], _0x1ba5df['y'] = _0x4dba97['y'], _0x1ba5df['z'] = _0x4dba97['z']);
        }
        static [_0x5659be(0xe2d)](_0x51931a, _0x218720, _0x498adf, _0x5befdd) {
            var _0x59f65c = _0x5659be, _0x4d2f3e;
            _0x498adf ? (_0x498adf[_0x59f65c(0xd66)] = _0x5befdd[0x6], _0x4d2f3e = _0x498adf[_0x59f65c(0xd5c)](), _0x5befdd[0x6] = _0x498adf['seed']) : _0x4d2f3e = Math[_0x59f65c(0xd5d)]();
            if (_0x4d2f3e < _0x218720)
                _0x51931a = -_0x51931a;
            return _0x51931a;
        }
        static [_0x5659be(0x31e)](_0x58a4f6, _0x394ae6) {
            var _0x39fa15 = _0x5659be, _0xf92ab8 = _0x58a4f6[_0x39fa15(0xe2e)], _0x8d7b90 = _0x58a4f6['_rand'], _0x495895 = _0x58a4f6['_randomSeeds'];
            switch (_0x58a4f6[_0x39fa15(0xe2f)]) {
            case 0x0:
                var _0x239be9 = _0x58a4f6[_0x39fa15(0xe30)];
                _0x279d69[_0x39fa15(0xa74)]['x'] = _0x239be9['x'], _0x279d69[_0x39fa15(0xa74)]['y'] = _0x239be9['y'], _0x279d69['startColor']['z'] = _0x239be9['z'], _0x279d69[_0x39fa15(0xa74)]['w'] = _0x239be9['w'];
                break;
            case 0x2:
                _0xf92ab8 ? _0x8fb80[_0x39fa15(0x1fc)](_0x58a4f6[_0x39fa15(0xe31)], _0x58a4f6[_0x39fa15(0xe32)], Math['random'](), _0x279d69[_0x39fa15(0xa74)]) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0x3], _0x8fb80[_0x39fa15(0x1fc)](_0x58a4f6['startColorConstantMin'], _0x58a4f6[_0x39fa15(0xe32)], _0x8d7b90[_0x39fa15(0xd5c)](), _0x279d69[_0x39fa15(0xa74)]), _0x495895[0x3] = _0x8d7b90[_0x39fa15(0xd66)]);
                break;
            }
            var _0x5c5498 = _0x58a4f6[_0x39fa15(0xe33)];
            if (_0x5c5498 && _0x5c5498[_0x39fa15(0x650)]) {
                var _0x6bd9d8 = _0x5c5498[_0x39fa15(0x462)];
                switch (_0x6bd9d8[_0x39fa15(0x2ae)]) {
                case 0x0:
                    _0x279d69['startColor']['x'] = _0x279d69[_0x39fa15(0xa74)]['x'] * _0x6bd9d8[_0x39fa15(0xd15)]['x'], _0x279d69[_0x39fa15(0xa74)]['y'] = _0x279d69[_0x39fa15(0xa74)]['y'] * _0x6bd9d8[_0x39fa15(0xd15)]['y'], _0x279d69['startColor']['z'] = _0x279d69[_0x39fa15(0xa74)]['z'] * _0x6bd9d8['constant']['z'], _0x279d69[_0x39fa15(0xa74)]['w'] = _0x279d69[_0x39fa15(0xa74)]['w'] * _0x6bd9d8[_0x39fa15(0xd15)]['w'];
                    break;
                case 0x2:
                    var _0x3685c5;
                    _0xf92ab8 ? _0x3685c5 = Math['random']() : (_0x8d7b90['seed'] = _0x495895[0xa], _0x3685c5 = _0x8d7b90[_0x39fa15(0xd5c)](), _0x495895[0xa] = _0x8d7b90[_0x39fa15(0xd66)]);
                    var _0x1cfe6b = _0x6bd9d8['constantMin'], _0x516b4c = _0x6bd9d8[_0x39fa15(0xd17)];
                    _0x279d69['startColor']['x'] = _0x279d69['startColor']['x'] * _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x1cfe6b['x'], _0x516b4c['x'], _0x3685c5), _0x279d69['startColor']['y'] = _0x279d69[_0x39fa15(0xa74)]['y'] * _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x1cfe6b['y'], _0x516b4c['y'], _0x3685c5), _0x279d69['startColor']['z'] = _0x279d69[_0x39fa15(0xa74)]['z'] * _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x1cfe6b['z'], _0x516b4c['z'], _0x3685c5), _0x279d69[_0x39fa15(0xa74)]['w'] = _0x279d69[_0x39fa15(0xa74)]['w'] * _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x1cfe6b['w'], _0x516b4c['w'], _0x3685c5);
                    break;
                }
            }
            var _0x57cc22 = _0x279d69[_0x39fa15(0xe11)];
            switch (_0x58a4f6['startSizeType']) {
            case 0x0:
                if (_0x58a4f6[_0x39fa15(0xe34)]) {
                    var _0x444a46 = _0x58a4f6[_0x39fa15(0xe35)];
                    _0x57cc22[0x0] = _0x444a46['x'], _0x57cc22[0x1] = _0x444a46['y'], _0x57cc22[0x2] = _0x444a46['z'];
                } else
                    _0x57cc22[0x0] = _0x57cc22[0x1] = _0x57cc22[0x2] = _0x58a4f6['startSizeConstant'];
                break;
            case 0x2:
                if (_0x58a4f6['threeDStartSize']) {
                    var _0x2b1639 = _0x58a4f6[_0x39fa15(0xe36)], _0x20ea5b = _0x58a4f6[_0x39fa15(0xe37)];
                    _0xf92ab8 ? (_0x57cc22[0x0] = _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x2b1639['x'], _0x20ea5b['x'], Math['random']()), _0x57cc22[0x1] = _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x2b1639['y'], _0x20ea5b['y'], Math[_0x39fa15(0xd5d)]()), _0x57cc22[0x2] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x2b1639['z'], _0x20ea5b['z'], Math[_0x39fa15(0xd5d)]())) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0x4], _0x57cc22[0x0] = _0x218b83['MathUtil']['lerp'](_0x2b1639['x'], _0x20ea5b['x'], _0x8d7b90['getFloat']()), _0x57cc22[0x1] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x2b1639['y'], _0x20ea5b['y'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x57cc22[0x2] = _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x2b1639['z'], _0x20ea5b['z'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x495895[0x4] = _0x8d7b90['seed']);
                } else
                    _0xf92ab8 ? _0x57cc22[0x0] = _0x57cc22[0x1] = _0x57cc22[0x2] = _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x58a4f6[_0x39fa15(0xe38)], _0x58a4f6['startSizeConstantMax'], Math[_0x39fa15(0xd5d)]()) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0x4], _0x57cc22[0x0] = _0x57cc22[0x1] = _0x57cc22[0x2] = _0x218b83['MathUtil']['lerp'](_0x58a4f6[_0x39fa15(0xe38)], _0x58a4f6[_0x39fa15(0xe39)], _0x8d7b90['getFloat']()), _0x495895[0x4] = _0x8d7b90['seed']);
                break;
            }
            var _0x3dcea9 = _0x58a4f6['sizeOverLifetime'];
            if (_0x3dcea9 && _0x3dcea9[_0x39fa15(0x650)] && _0x3dcea9[_0x39fa15(0x2b8)][_0x39fa15(0x2ae)] === 0x1) {
                var _0x55791c = _0x3dcea9[_0x39fa15(0x2b8)];
                if (_0x55791c['separateAxes'])
                    _0xf92ab8 ? (_0x57cc22[0x0] = _0x57cc22[0x0] * _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x55791c[_0x39fa15(0xd3c)]['x'], _0x55791c[_0x39fa15(0xd3d)]['x'], Math[_0x39fa15(0xd5d)]()), _0x57cc22[0x1] = _0x57cc22[0x1] * _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x55791c['constantMinSeparate']['y'], _0x55791c[_0x39fa15(0xd3d)]['y'], Math[_0x39fa15(0xd5d)]()), _0x57cc22[0x2] = _0x57cc22[0x2] * _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x55791c['constantMinSeparate']['z'], _0x55791c[_0x39fa15(0xd3d)]['z'], Math[_0x39fa15(0xd5d)]())) : (_0x8d7b90['seed'] = _0x495895[0xb], _0x57cc22[0x0] = _0x57cc22[0x0] * _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x55791c[_0x39fa15(0xd3c)]['x'], _0x55791c['constantMaxSeparate']['x'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x57cc22[0x1] = _0x57cc22[0x1] * _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x55791c[_0x39fa15(0xd3c)]['y'], _0x55791c['constantMaxSeparate']['y'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x57cc22[0x2] = _0x57cc22[0x2] * _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x55791c[_0x39fa15(0xd3c)]['z'], _0x55791c[_0x39fa15(0xd3d)]['z'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x495895[0xb] = _0x8d7b90[_0x39fa15(0xd66)]);
                else {
                    var _0x398f3a;
                    _0xf92ab8 ? _0x398f3a = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x55791c[_0x39fa15(0xd1d)], _0x55791c[_0x39fa15(0xd17)], Math[_0x39fa15(0xd5d)]()) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0xb], _0x398f3a = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x55791c[_0x39fa15(0xd1d)], _0x55791c[_0x39fa15(0xd17)], _0x8d7b90['getFloat']()), _0x495895[0xb] = _0x8d7b90[_0x39fa15(0xd66)]), _0x57cc22[0x0] = _0x57cc22[0x0] * _0x398f3a, _0x57cc22[0x1] = _0x57cc22[0x1] * _0x398f3a, _0x57cc22[0x2] = _0x57cc22[0x2] * _0x398f3a;
                }
            }
            var _0x466cad = _0x394ae6['renderMode'];
            if (_0x466cad !== 0x1)
                switch (_0x58a4f6['startRotationType']) {
                case 0x0:
                    if (_0x58a4f6[_0x39fa15(0xdf2)]) {
                        var _0x170522 = _0x58a4f6[_0x39fa15(0xe3a)], _0x1e9c48 = _0x279d69[_0x39fa15(0x59b)];
                        _0x279d69[_0x39fa15(0xe2c)](_0x170522, _0x1e9c48, _0x58a4f6[_0x39fa15(0xe3b)], _0xf92ab8 ? null : _0x8d7b90, _0x495895), _0x279d69[_0x39fa15(0xe3c)][0x0] = _0x1e9c48['x'], _0x279d69[_0x39fa15(0xe3c)][0x1] = _0x1e9c48['y'];
                        if (_0x466cad !== 0x4)
                            _0x279d69[_0x39fa15(0xe3c)][0x2] = -_0x1e9c48['z'];
                        else
                            _0x279d69[_0x39fa15(0xe3c)][0x2] = _0x1e9c48['z'];
                    } else
                        _0x279d69[_0x39fa15(0xe3c)][0x0] = _0x279d69['_randomInvertRoation'](_0x58a4f6[_0x39fa15(0xe3d)], _0x58a4f6[_0x39fa15(0xe3b)], _0xf92ab8 ? null : _0x8d7b90, _0x495895), _0x279d69[_0x39fa15(0xe3c)][0x1] = 0x0, _0x279d69[_0x39fa15(0xe3c)][0x2] = 0x0;
                    break;
                case 0x2:
                    if (_0x58a4f6[_0x39fa15(0xdf2)]) {
                        var _0x5d5447 = _0x58a4f6[_0x39fa15(0xe3e)], _0x5dc2a1 = _0x58a4f6[_0x39fa15(0xe3f)], _0x3299f3 = _0x279d69[_0x39fa15(0x59b)];
                        _0xf92ab8 ? (_0x3299f3['x'] = _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x5d5447['x'], _0x5dc2a1['x'], Math[_0x39fa15(0xd5d)]()), _0x3299f3['y'] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x5d5447['y'], _0x5dc2a1['y'], Math[_0x39fa15(0xd5d)]()), _0x3299f3['z'] = _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x5d5447['z'], _0x5dc2a1['z'], Math[_0x39fa15(0xd5d)]())) : (_0x8d7b90['seed'] = _0x495895[0x5], _0x3299f3['x'] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x5d5447['x'], _0x5dc2a1['x'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x3299f3['y'] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x5d5447['y'], _0x5dc2a1['y'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x3299f3['z'] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x5d5447['z'], _0x5dc2a1['z'], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x495895[0x5] = _0x8d7b90[_0x39fa15(0xd66)]);
                        _0x279d69['_randomInvertRoationArray'](_0x3299f3, _0x3299f3, _0x58a4f6[_0x39fa15(0xe3b)], _0xf92ab8 ? null : _0x8d7b90, _0x495895), _0x279d69['startRotation'][0x0] = _0x3299f3['x'], _0x279d69['startRotation'][0x1] = _0x3299f3['y'];
                        if (_0x466cad !== 0x4)
                            _0x279d69[_0x39fa15(0xe3c)][0x2] = -_0x3299f3['z'];
                        else
                            _0x279d69[_0x39fa15(0xe3c)][0x2] = _0x3299f3['z'];
                    } else
                        _0xf92ab8 ? _0x279d69[_0x39fa15(0xe3c)][0x0] = _0x279d69['_randomInvertRoation'](_0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x58a4f6[_0x39fa15(0xe40)], _0x58a4f6[_0x39fa15(0xe41)], Math[_0x39fa15(0xd5d)]()), _0x58a4f6[_0x39fa15(0xe3b)], _0xf92ab8 ? null : _0x8d7b90, _0x495895) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0x5], _0x279d69[_0x39fa15(0xe3c)][0x0] = _0x279d69[_0x39fa15(0xe2d)](_0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x58a4f6['startRotationConstantMin'], _0x58a4f6[_0x39fa15(0xe41)], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x58a4f6[_0x39fa15(0xe3b)], _0xf92ab8 ? null : _0x8d7b90, _0x495895), _0x495895[0x5] = _0x8d7b90[_0x39fa15(0xd66)]);
                    break;
                }
            switch (_0x58a4f6[_0x39fa15(0xe42)]) {
            case 0x0:
                _0x279d69[_0x39fa15(0xe16)] = _0x58a4f6['startLifetimeConstant'];
                break;
            case 0x1:
                _0x279d69[_0x39fa15(0xe16)] = _0x279d69[_0x39fa15(0xe29)](_0x58a4f6[_0x39fa15(0xe43)], _0x58a4f6['emissionTime']);
                break;
            case 0x2:
                _0xf92ab8 ? _0x279d69[_0x39fa15(0xe16)] = _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x58a4f6[_0x39fa15(0xe44)], _0x58a4f6[_0x39fa15(0xe45)], Math[_0x39fa15(0xd5d)]()) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0x7], _0x279d69[_0x39fa15(0xe16)] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x58a4f6[_0x39fa15(0xe44)], _0x58a4f6[_0x39fa15(0xe45)], _0x8d7b90[_0x39fa15(0xd5c)]()), _0x495895[0x7] = _0x8d7b90[_0x39fa15(0xd66)]);
                break;
            case 0x3:
                var _0x386a78 = _0x58a4f6['emissionTime'];
                _0xf92ab8 ? _0x279d69[_0x39fa15(0xe16)] = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x279d69[_0x39fa15(0xe29)](_0x58a4f6[_0x39fa15(0xe46)], _0x386a78), _0x279d69[_0x39fa15(0xe29)](_0x58a4f6[_0x39fa15(0xe47)], _0x386a78), Math[_0x39fa15(0xd5d)]()) : (_0x8d7b90['seed'] = _0x495895[0x7], _0x279d69[_0x39fa15(0xe16)] = _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x279d69[_0x39fa15(0xe29)](_0x58a4f6[_0x39fa15(0xe46)], _0x386a78), _0x279d69['_getStartLifetimeFromGradient'](_0x58a4f6[_0x39fa15(0xe47)], _0x386a78), _0x8d7b90['getFloat']()), _0x495895[0x7] = _0x8d7b90[_0x39fa15(0xd66)]);
                break;
            }
            var _0x1621d7 = _0x58a4f6['textureSheetAnimation'], _0x10e73a = _0x1621d7 && _0x1621d7['enable'];
            if (_0x10e73a) {
                var _0x178927 = _0x1621d7[_0x39fa15(0xd73)], _0x404b0a = _0x178927['x'], _0x449a11 = _0x178927['y'], _0x12a23b = 0x1 / _0x404b0a, _0x2ccc2b = 0x1 / _0x449a11, _0x577103, _0x51001b = _0x1621d7[_0x39fa15(0xd78)];
                switch (_0x51001b[_0x39fa15(0x2ae)]) {
                case 0x0:
                    _0x577103 = _0x51001b['constant'];
                    break;
                case 0x1:
                    _0xf92ab8 ? _0x577103 = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x51001b[_0x39fa15(0xd1d)], _0x51001b['constantMax'], Math[_0x39fa15(0xd5d)]()) : (_0x8d7b90['seed'] = _0x495895[0xe], _0x577103 = _0x218b83[_0x39fa15(0xe2a)][_0x39fa15(0x1fc)](_0x51001b[_0x39fa15(0xd1d)], _0x51001b['constantMax'], _0x8d7b90['getFloat']()), _0x495895[0xe] = _0x8d7b90[_0x39fa15(0xd66)]);
                    break;
                }
                var _0x11e1f7 = _0x1621d7['frame'], _0x42c312 = _0x1621d7['cycles'];
                switch (_0x11e1f7[_0x39fa15(0x2ae)]) {
                case 0x0:
                    _0x577103 += _0x11e1f7[_0x39fa15(0xd15)] * _0x42c312;
                    break;
                case 0x2:
                    _0xf92ab8 ? _0x577103 += _0x218b83[_0x39fa15(0xe2a)]['lerp'](_0x11e1f7['constantMin'], _0x11e1f7[_0x39fa15(0xd17)], Math[_0x39fa15(0xd5d)]()) * _0x42c312 : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0xf], _0x577103 += _0x218b83['MathUtil'][_0x39fa15(0x1fc)](_0x11e1f7[_0x39fa15(0xd1d)], _0x11e1f7[_0x39fa15(0xd17)], _0x8d7b90['getFloat']()) * _0x42c312, _0x495895[0xf] = _0x8d7b90[_0x39fa15(0xd66)]);
                    break;
                }
                var _0x9ab934 = 0x0;
                switch (_0x1621d7['type']) {
                case 0x0:
                    _0x9ab934 = Math[_0x39fa15(0x241)](_0x577103 / _0x404b0a);
                    break;
                case 0x1:
                    _0x1621d7[_0x39fa15(0xd70)] ? _0xf92ab8 ? _0x9ab934 = Math['floor'](Math['random']() * _0x449a11) : (_0x8d7b90[_0x39fa15(0xd66)] = _0x495895[0xd], _0x9ab934 = Math[_0x39fa15(0x241)](_0x8d7b90['getFloat']() * _0x449a11), _0x495895[0xd] = _0x8d7b90[_0x39fa15(0xd66)]) : _0x9ab934 = _0x1621d7[_0x39fa15(0xd74)];
                    break;
                }
                var _0x260ca1 = Math[_0x39fa15(0x241)](_0x577103 % _0x404b0a);
                _0x279d69[_0x39fa15(0xe48)] = _0x279d69['startUVInfo'], _0x279d69['startUVInfo'][0x0] = _0x12a23b, _0x279d69['startUVInfo'][0x1] = _0x2ccc2b, _0x279d69[_0x39fa15(0xe48)][0x2] = _0x260ca1 * _0x12a23b, _0x279d69[_0x39fa15(0xe48)][0x3] = _0x9ab934 * _0x2ccc2b;
            } else
                _0x279d69[_0x39fa15(0xe48)] = _0x279d69[_0x39fa15(0xe48)], _0x279d69[_0x39fa15(0xe48)][0x0] = 0x1, _0x279d69[_0x39fa15(0xe48)][0x1] = 0x1, _0x279d69[_0x39fa15(0xe48)][0x2] = 0x0, _0x279d69[_0x39fa15(0xe48)][0x3] = 0x0;
        }
    }
    _0x279d69[_0x5659be(0x59b)] = new _0x3f70c5(), _0x279d69[_0x5659be(0xa74)] = new _0x8fb80(), _0x279d69['startSize'] = new Float32Array(0x3), _0x279d69['startRotation'] = new Float32Array(0x3), _0x279d69[_0x5659be(0xe48)] = new Float32Array(0x4);
    class _0x4c18c2 extends _0x319422 {
        constructor(_0x539e18) {
            var _0x1ecf82 = _0x5659be;
            super(), this['_boundingSphere'] = null, this[_0x1ecf82(0xe49)] = null, this[_0x1ecf82(0xe4a)] = null, this['_bounds'] = null, this['_gravityOffset'] = new _0x12bf01(), this['_customBounds'] = null, this['_useCustomBounds'] = ![], this['_owner'] = null, this['_ownerRender'] = null, this['_vertices'] = null, this[_0x1ecf82(0xe4b)] = 0x0, this['_startLifeTimeIndex'] = 0x0, this[_0x1ecf82(0xe4c)] = 0x0, this[_0x1ecf82(0xe4d)] = ![], this['_firstActiveElement'] = 0x0, this[_0x1ecf82(0xe4e)] = 0x0, this[_0x1ecf82(0xe4f)] = 0x0, this[_0x1ecf82(0xe50)] = 0x0, this[_0x1ecf82(0xe51)] = 0x0, this[_0x1ecf82(0xe52)] = 0x0, this[_0x1ecf82(0xe53)] = null, this[_0x1ecf82(0xe54)] = null, this[_0x1ecf82(0xe55)] = ![], this[_0x1ecf82(0xe56)] = ![], this[_0x1ecf82(0xe57)] = ![], this[_0x1ecf82(0xe58)] = 0x0, this['_frameRateTime'] = 0x0, this['_emissionTime'] = 0x0, this['_totalDelayTime'] = 0x0, this[_0x1ecf82(0xe59)] = 0x0, this[_0x1ecf82(0xe5a)] = null, this['_colorOverLifetime'] = null, this['_sizeOverLifetime'] = null, this[_0x1ecf82(0xe5b)] = null, this['_textureSheetAnimation'] = null, this['_startLifetimeType'] = 0x0, this[_0x1ecf82(0xe5c)] = 0x0, this[_0x1ecf82(0xe5d)] = null, this[_0x1ecf82(0xe5e)] = 0x0, this['_startLifetimeConstantMax'] = 0x0, this[_0x1ecf82(0xe5f)] = null, this[_0x1ecf82(0xe60)] = null, this[_0x1ecf82(0xe61)] = 0x0, this['_uvLength'] = new _0x12bf01(), this[_0x1ecf82(0x4de)] = 0x0, this[_0x1ecf82(0xe62)] = 0x0, this['_vertexBuffer'] = null, this[_0x1ecf82(0x624)] = null, this['_bufferState'] = new _0x174c4a(), this[_0x1ecf82(0xe63)] = 0x0, this[_0x1ecf82(0xdf6)] = 0x0, this[_0x1ecf82(0xe64)] = 0x0, this[_0x1ecf82(0xe65)] = null, this[_0x1ecf82(0xe66)] = null, this['duration'] = 0x0, this[_0x1ecf82(0xe67)] = ![], this[_0x1ecf82(0xe68)] = ![], this[_0x1ecf82(0xe69)] = 0x0, this[_0x1ecf82(0xe6a)] = 0x0, this[_0x1ecf82(0xe6b)] = 0x0, this[_0x1ecf82(0xe6c)] = 0x0, this[_0x1ecf82(0xe6d)] = 0x0, this['startSpeedConstant'] = 0x0, this['startSpeedConstantMin'] = 0x0, this['startSpeedConstantMax'] = 0x0, this[_0x1ecf82(0xe34)] = ![], this[_0x1ecf82(0xe6e)] = 0x0, this[_0x1ecf82(0xe6f)] = 0x0, this[_0x1ecf82(0xe35)] = null, this[_0x1ecf82(0xe38)] = 0x0, this['startSizeConstantMax'] = 0x0, this[_0x1ecf82(0xe36)] = null, this[_0x1ecf82(0xe37)] = null, this[_0x1ecf82(0xdf2)] = ![], this['startRotationType'] = 0x0, this[_0x1ecf82(0xe3d)] = 0x0, this['startRotationConstantSeparate'] = null, this[_0x1ecf82(0xe40)] = 0x0, this[_0x1ecf82(0xe41)] = 0x0, this[_0x1ecf82(0xe3e)] = null, this[_0x1ecf82(0xe3f)] = null, this['randomizeRotationDirection'] = 0x0, this[_0x1ecf82(0xe2f)] = 0x0, this[_0x1ecf82(0xe30)] = new _0x8fb80(0x1, 0x1, 0x1, 0x1), this[_0x1ecf82(0xe31)] = new _0x8fb80(0x0, 0x0, 0x0, 0x0), this['startColorConstantMax'] = new _0x8fb80(0x1, 0x1, 0x1, 0x1), this[_0x1ecf82(0xdf0)] = 0x0, this[_0x1ecf82(0xdef)] = 0x0, this[_0x1ecf82(0xe70)] = 0x1, this['scaleMode'] = 0x1, this[_0x1ecf82(0xe71)] = ![], this[_0x1ecf82(0xe72)] = null, this['autoRandomSeed'] = ![], this[_0x1ecf82(0xe73)] = ![], this[_0x1ecf82(0xe74)] = 0x0, this[_0x1ecf82(0xe4e)] = 0x0, this[_0x1ecf82(0xe4f)] = 0x0, this[_0x1ecf82(0xe50)] = 0x0, this[_0x1ecf82(0x3d3)] = _0x539e18, this[_0x1ecf82(0xe75)] = _0x539e18['particleRenderer'], this['_boundingBoxCorners'] = [], this[_0x1ecf82(0xe76)] = new _0x2efeb0(new _0x3f70c5(), Number['MAX_VALUE']), this[_0x1ecf82(0xe49)] = new _0x3fc11a(new _0x3f70c5(-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number[_0x1ecf82(0xa46)]), new _0x3f70c5(Number[_0x1ecf82(0xa46)], Number[_0x1ecf82(0xa46)], Number['MAX_VALUE'])), this[_0x1ecf82(0xa67)] = new _0x2a117e(this['_boundingBox'][_0x1ecf82(0x204)], this['_boundingBox']['max']), this[_0x1ecf82(0xdec)] = ![], this[_0x1ecf82(0xdf6)] = 0x0, this[_0x1ecf82(0xe55)] = ![], this['_isPlaying'] = ![], this[_0x1ecf82(0xe57)] = ![], this[_0x1ecf82(0xe59)] = 0x0, this[_0x1ecf82(0xe77)] = 0x0, this['_emissionTime'] = 0x0, this[_0x1ecf82(0xe78)] = 0x0, this['_simulateUpdate'] = ![], this[_0x1ecf82(0xe52)] = 0x1, this[_0x1ecf82(0x320)] = 0x5, this[_0x1ecf82(0xe67)] = !![], this['prewarm'] = ![], this[_0x1ecf82(0xe69)] = 0x0, this[_0x1ecf82(0xe6a)] = 0x0, this[_0x1ecf82(0xe6b)] = 0x0, this[_0x1ecf82(0xe6c)] = 0x0, this['_startLifetimeType'] = 0x0, this[_0x1ecf82(0xe5c)] = 0x5, this[_0x1ecf82(0xe5d)] = new _0x2f153d(), this['_startLifetimeConstantMin'] = 0x0, this[_0x1ecf82(0xe79)] = 0x5, this[_0x1ecf82(0xe5f)] = new _0x2f153d(), this[_0x1ecf82(0xe60)] = new _0x2f153d(), this[_0x1ecf82(0xe61)] = 0x5, this['startSpeedType'] = 0x0, this[_0x1ecf82(0xe7a)] = 0x5, this[_0x1ecf82(0xe7b)] = 0x0, this[_0x1ecf82(0xe7c)] = 0x5, this['threeDStartSize'] = ![], this['startSizeType'] = 0x0, this[_0x1ecf82(0xe6f)] = 0x1, this['startSizeConstantSeparate'] = new _0x3f70c5(0x1, 0x1, 0x1), this[_0x1ecf82(0xe38)] = 0x0, this[_0x1ecf82(0xe39)] = 0x1, this[_0x1ecf82(0xe36)] = new _0x3f70c5(0x0, 0x0, 0x0), this['startSizeConstantMaxSeparate'] = new _0x3f70c5(0x1, 0x1, 0x1), this['threeDStartRotation'] = ![], this[_0x1ecf82(0xe7d)] = 0x0, this[_0x1ecf82(0xe3d)] = 0x0, this[_0x1ecf82(0xe3a)] = new _0x3f70c5(0x0, 0x0, 0x0), this[_0x1ecf82(0xe40)] = 0x0, this['startRotationConstantMax'] = 0x0, this[_0x1ecf82(0xe3e)] = new _0x3f70c5(0x0, 0x0, 0x0), this['startRotationConstantMaxSeparate'] = new _0x3f70c5(0x0, 0x0, 0x0), this[_0x1ecf82(0xdf0)] = 0x0, this['simulationSpace'] = 0x1, this[_0x1ecf82(0xdf4)] = 0x1, this[_0x1ecf82(0xe71)] = !![], this['_rand'] = new _0x112621(0x0), this['autoRandomSeed'] = !![], this[_0x1ecf82(0xe72)] = new Uint32Array(0x1), this[_0x1ecf82(0xe66)] = new Uint32Array(_0x4c18c2['_RANDOMOFFSET'][_0x1ecf82(0x1ff)]), this['isPerformanceMode'] = !![], this[_0x1ecf82(0xe53)] = new _0x51c5c1(), this[_0x1ecf82(0xe53)]['enable'] = !![];
        }
        get ['maxParticles']() {
            var _0xec22c5 = _0x5659be;
            return this[_0xec22c5(0xe52)] - 0x1;
        }
        set [_0x5659be(0xe7e)](_0x4c7fe5) {
            var _0x87b8e = _0x5659be, _0x504182 = _0x4c7fe5 + 0x1;
            _0x504182 !== this[_0x87b8e(0xe52)] && (this[_0x87b8e(0xe52)] = _0x504182, this['_initBufferDatas']());
        }
        get [_0x5659be(0xe7f)]() {
            return this['_emission'];
        }
        get [_0x5659be(0xe80)]() {
            var _0x508136 = _0x5659be;
            if (this[_0x508136(0xe4e)] >= this[_0x508136(0xe50)])
                return this[_0x508136(0xe4e)] - this[_0x508136(0xe50)];
            else
                return this[_0x508136(0xe52)] - this[_0x508136(0xe50)] + this[_0x508136(0xe4e)];
        }
        get [_0x5659be(0xe81)]() {
            var _0x3f5dc0 = _0x5659be;
            return this['_emissionTime'] > this[_0x3f5dc0(0x320)] ? this[_0x3f5dc0(0x320)] : this['_emissionTime'];
        }
        get [_0x5659be(0xe82)]() {
            var _0x56ff1a = _0x5659be;
            return this[_0x56ff1a(0xe54)];
        }
        set [_0x5659be(0xe82)](_0x33d1a4) {
            var _0x293ca4 = _0x5659be;
            if (this['_shape'] !== _0x33d1a4) {
                if (_0x33d1a4 && _0x33d1a4['enable'])
                    this[_0x293ca4(0x3d3)][_0x293ca4(0x5e6)]['_shaderValues'][_0x293ca4(0x62c)](_0x17a23d['SHADERDEFINE_SHAPE']);
                else
                    this[_0x293ca4(0x3d3)][_0x293ca4(0x5e6)][_0x293ca4(0x4e0)]['removeDefine'](_0x17a23d[_0x293ca4(0xe83)]);
                this[_0x293ca4(0xe54)] = _0x33d1a4;
            }
        }
        get ['isAlive']() {
            var _0x15bc34 = _0x5659be;
            if (this[_0x15bc34(0xe56)] || this[_0x15bc34(0xe80)] > 0x0)
                return !![];
            return ![];
        }
        get [_0x5659be(0xe84)]() {
            var _0x4d0365 = _0x5659be;
            return this[_0x4d0365(0xe55)];
        }
        get [_0x5659be(0xe85)]() {
            var _0x437179 = _0x5659be;
            return this[_0x437179(0xe56)];
        }
        get [_0x5659be(0xe86)]() {
            var _0xe26488 = _0x5659be;
            return this[_0xe26488(0xe57)];
        }
        get [_0x5659be(0xe42)]() {
            return this['_startLifetimeType'];
        }
        set [_0x5659be(0xe42)](_0x2dae93) {
            var _0x1d5b21 = _0x5659be, _0x258606, _0x3699f9;
            switch (this[_0x1d5b21(0xe42)]) {
            case 0x0:
                this[_0x1d5b21(0xe61)] = this['startLifetimeConstant'];
                break;
            case 0x1:
                this[_0x1d5b21(0xe61)] = -Number[_0x1d5b21(0xa46)];
                var _0x58421b = _0x58421b;
                for (_0x258606 = 0x0, _0x3699f9 = _0x58421b['gradientCount']; _0x258606 < _0x3699f9; _0x258606++)
                    this[_0x1d5b21(0xe61)] = Math['max'](this[_0x1d5b21(0xe61)], _0x58421b[_0x1d5b21(0xd48)](_0x258606));
                break;
            case 0x2:
                this[_0x1d5b21(0xe61)] = Math[_0x1d5b21(0x205)](this[_0x1d5b21(0xe44)], this[_0x1d5b21(0xe45)]);
                break;
            case 0x3:
                this[_0x1d5b21(0xe61)] = -Number[_0x1d5b21(0xa46)];
                var _0x5c4373 = _0x5c4373;
                for (_0x258606 = 0x0, _0x3699f9 = _0x5c4373[_0x1d5b21(0xd43)]; _0x258606 < _0x3699f9; _0x258606++)
                    this['_maxStartLifetime'] = Math[_0x1d5b21(0x205)](this[_0x1d5b21(0xe61)], _0x5c4373['getValueByIndex'](_0x258606));
                var _0x57a57e = _0x57a57e;
                for (_0x258606 = 0x0, _0x3699f9 = _0x57a57e[_0x1d5b21(0xd43)]; _0x258606 < _0x3699f9; _0x258606++)
                    this[_0x1d5b21(0xe61)] = Math['max'](this[_0x1d5b21(0xe61)], _0x57a57e[_0x1d5b21(0xd48)](_0x258606));
                break;
            }
            this[_0x1d5b21(0xe87)] = _0x2dae93;
        }
        get [_0x5659be(0xe88)]() {
            var _0x5b5ad8 = _0x5659be;
            return this[_0x5b5ad8(0xe5c)];
        }
        set ['startLifetimeConstant'](_0x23d0f0) {
            var _0x1fa470 = _0x5659be;
            if (this[_0x1fa470(0xe87)] === 0x0)
                this[_0x1fa470(0xe61)] = _0x23d0f0;
            this[_0x1fa470(0xe5c)] = _0x23d0f0;
        }
        get [_0x5659be(0xe43)]() {
            var _0xb4724d = _0x5659be;
            return this[_0xb4724d(0xe5d)];
        }
        set [_0x5659be(0xe43)](_0x59ebd7) {
            var _0x41994a = _0x5659be;
            if (this[_0x41994a(0xe87)] === 0x1) {
                this['_maxStartLifetime'] = -Number[_0x41994a(0xa46)];
                for (var _0x32cc89 = 0x0, _0x37ba2d = _0x59ebd7['gradientCount']; _0x32cc89 < _0x37ba2d; _0x32cc89++)
                    this['_maxStartLifetime'] = Math[_0x41994a(0x205)](this[_0x41994a(0xe61)], _0x59ebd7[_0x41994a(0xd48)](_0x32cc89));
            }
            this[_0x41994a(0xe5d)] = _0x59ebd7;
        }
        get [_0x5659be(0xe44)]() {
            var _0x2e5863 = _0x5659be;
            return this[_0x2e5863(0xe5e)];
        }
        set [_0x5659be(0xe44)](_0x4f32c0) {
            var _0x11bc4e = _0x5659be;
            if (this['_startLifetimeType'] === 0x2)
                this[_0x11bc4e(0xe61)] = Math[_0x11bc4e(0x205)](_0x4f32c0, this[_0x11bc4e(0xe79)]);
            this['_startLifetimeConstantMin'] = _0x4f32c0;
        }
        get [_0x5659be(0xe45)]() {
            var _0x35a43e = _0x5659be;
            return this[_0x35a43e(0xe79)];
        }
        set [_0x5659be(0xe45)](_0x5cd665) {
            var _0x5dacee = _0x5659be;
            if (this[_0x5dacee(0xe87)] === 0x2)
                this['_maxStartLifetime'] = Math[_0x5dacee(0x205)](this[_0x5dacee(0xe5e)], _0x5cd665);
            this[_0x5dacee(0xe79)] = _0x5cd665;
        }
        get ['startLifeTimeGradientMin']() {
            var _0x4e8c06 = _0x5659be;
            return this[_0x4e8c06(0xe5f)];
        }
        set [_0x5659be(0xe46)](_0x1c3a9c) {
            var _0x38961f = _0x5659be;
            if (this[_0x38961f(0xe87)] === 0x3) {
                var _0x46465b, _0x37b8f6;
                this[_0x38961f(0xe61)] = -Number[_0x38961f(0xa46)];
                for (_0x46465b = 0x0, _0x37b8f6 = _0x1c3a9c[_0x38961f(0xd43)]; _0x46465b < _0x37b8f6; _0x46465b++)
                    this[_0x38961f(0xe61)] = Math[_0x38961f(0x205)](this['_maxStartLifetime'], _0x1c3a9c['getValueByIndex'](_0x46465b));
                for (_0x46465b = 0x0, _0x37b8f6 = this[_0x38961f(0xe60)][_0x38961f(0xd43)]; _0x46465b < _0x37b8f6; _0x46465b++)
                    this[_0x38961f(0xe61)] = Math[_0x38961f(0x205)](this[_0x38961f(0xe61)], this[_0x38961f(0xe60)]['getValueByIndex'](_0x46465b));
            }
            this[_0x38961f(0xe5f)] = _0x1c3a9c;
        }
        get ['startLifeTimeGradientMax']() {
            var _0x221540 = _0x5659be;
            return this[_0x221540(0xe60)];
        }
        set [_0x5659be(0xe47)](_0x2b6547) {
            var _0x1e2006 = _0x5659be;
            if (this['_startLifetimeType'] === 0x3) {
                var _0x26d629, _0x29b55f;
                this[_0x1e2006(0xe61)] = -Number[_0x1e2006(0xa46)];
                for (_0x26d629 = 0x0, _0x29b55f = this[_0x1e2006(0xe5f)]['gradientCount']; _0x26d629 < _0x29b55f; _0x26d629++)
                    this[_0x1e2006(0xe61)] = Math['max'](this[_0x1e2006(0xe61)], this[_0x1e2006(0xe5f)][_0x1e2006(0xd48)](_0x26d629));
                for (_0x26d629 = 0x0, _0x29b55f = _0x2b6547[_0x1e2006(0xd43)]; _0x26d629 < _0x29b55f; _0x26d629++)
                    this[_0x1e2006(0xe61)] = Math[_0x1e2006(0x205)](this[_0x1e2006(0xe61)], _0x2b6547[_0x1e2006(0xd48)](_0x26d629));
            }
            this['_startLifeTimeGradientMax'] = _0x2b6547;
        }
        get [_0x5659be(0xe89)]() {
            return this['_velocityOverLifetime'];
        }
        set [_0x5659be(0xe89)](_0x159f86) {
            var _0xeac08c = _0x5659be, _0x8ab479 = this[_0xeac08c(0x3d3)][_0xeac08c(0x5e6)][_0xeac08c(0x4e0)];
            if (_0x159f86) {
                var _0x4ad2c0 = _0x159f86['velocity'], _0x1d1dec = _0x4ad2c0[_0xeac08c(0x2ae)];
                if (_0x159f86[_0xeac08c(0x650)])
                    switch (_0x1d1dec) {
                    case 0x0:
                        _0x8ab479[_0xeac08c(0x62c)](_0x17a23d[_0xeac08c(0xe8a)]);
                        break;
                    case 0x1:
                        _0x8ab479['addDefine'](_0x17a23d[_0xeac08c(0xe8b)]);
                        break;
                    case 0x2:
                        _0x8ab479[_0xeac08c(0x62c)](_0x17a23d[_0xeac08c(0xe8c)]);
                        break;
                    case 0x3:
                        _0x8ab479[_0xeac08c(0x62c)](_0x17a23d[_0xeac08c(0xe8d)]);
                        break;
                    }
                else
                    _0x8ab479[_0xeac08c(0x493)](_0x17a23d[_0xeac08c(0xe8a)]), _0x8ab479[_0xeac08c(0x493)](_0x17a23d['SHADERDEFINE_VELOCITYOVERLIFETIMECURVE']), _0x8ab479[_0xeac08c(0x493)](_0x17a23d[_0xeac08c(0xe8c)]), _0x8ab479[_0xeac08c(0x493)](_0x17a23d[_0xeac08c(0xe8d)]);
                switch (_0x1d1dec) {
                case 0x0:
                    _0x8ab479['setVector3'](_0x17a23d[_0xeac08c(0xd90)], _0x4ad2c0[_0xeac08c(0xd15)]);
                    break;
                case 0x1:
                    _0x8ab479['setBuffer'](_0x17a23d['VOLVELOCITYGRADIENTX'], _0x4ad2c0[_0xeac08c(0xd38)][_0xeac08c(0x860)]), _0x8ab479['setBuffer'](_0x17a23d[_0xeac08c(0xd93)], _0x4ad2c0[_0xeac08c(0xd39)]['_elements']), _0x8ab479['setBuffer'](_0x17a23d[_0xeac08c(0xd95)], _0x4ad2c0['gradientZ'][_0xeac08c(0x860)]);
                    break;
                case 0x2:
                    _0x8ab479[_0xeac08c(0x4b1)](_0x17a23d[_0xeac08c(0xd90)], _0x4ad2c0['constantMin']), _0x8ab479[_0xeac08c(0x4b1)](_0x17a23d['VOLVELOCITYCONSTMAX'], _0x4ad2c0['constantMax']);
                    break;
                case 0x3:
                    _0x8ab479[_0xeac08c(0x574)](_0x17a23d[_0xeac08c(0xe8e)], _0x4ad2c0[_0xeac08c(0xd4e)]['_elements']), _0x8ab479['setBuffer'](_0x17a23d['VOLVELOCITYGRADIENTXMAX'], _0x4ad2c0[_0xeac08c(0xd3e)]['_elements']), _0x8ab479['setBuffer'](_0x17a23d[_0xeac08c(0xd93)], _0x4ad2c0[_0xeac08c(0xd4b)][_0xeac08c(0x860)]), _0x8ab479[_0xeac08c(0x574)](_0x17a23d[_0xeac08c(0xe8f)], _0x4ad2c0[_0xeac08c(0xd4f)]['_elements']), _0x8ab479['setBuffer'](_0x17a23d[_0xeac08c(0xd95)], _0x4ad2c0[_0xeac08c(0xd3f)][_0xeac08c(0x860)]), _0x8ab479[_0xeac08c(0x574)](_0x17a23d[_0xeac08c(0xd9b)], _0x4ad2c0[_0xeac08c(0xd4c)]['_elements']);
                    break;
                }
                _0x8ab479[_0xeac08c(0x4b0)](_0x17a23d[_0xeac08c(0xd9d)], _0x159f86[_0xeac08c(0xd7c)]);
            } else
                _0x8ab479[_0xeac08c(0x493)](_0x17a23d[_0xeac08c(0xe8a)]), _0x8ab479[_0xeac08c(0x493)](_0x17a23d[_0xeac08c(0xe8b)]), _0x8ab479[_0xeac08c(0x493)](_0x17a23d[_0xeac08c(0xe8c)]), _0x8ab479['removeDefine'](_0x17a23d['SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE']);
            this[_0xeac08c(0xe5a)] = _0x159f86;
        }
        get [_0x5659be(0xe33)]() {
            var _0x26bb55 = _0x5659be;
            return this[_0x26bb55(0xe90)];
        }
        set ['colorOverLifetime'](_0x3682be) {
            var _0x48d91e = _0x5659be, _0x4aa03d = this[_0x48d91e(0x3d3)][_0x48d91e(0x5e6)]['_shaderValues'];
            if (_0x3682be) {
                var _0x2c4eb0 = _0x3682be[_0x48d91e(0x462)];
                if (_0x3682be['enable'])
                    switch (_0x2c4eb0[_0x48d91e(0x2ae)]) {
                    case 0x1:
                        _0x4aa03d[_0x48d91e(0x62c)](_0x17a23d['SHADERDEFINE_COLOROVERLIFETIME']);
                        break;
                    case 0x3:
                        _0x4aa03d[_0x48d91e(0x62c)](_0x17a23d[_0x48d91e(0xe91)]);
                        break;
                    }
                else
                    _0x4aa03d[_0x48d91e(0x493)](_0x17a23d[_0x48d91e(0xe92)]), _0x4aa03d['removeDefine'](_0x17a23d[_0x48d91e(0xe91)]);
                switch (_0x2c4eb0['type']) {
                case 0x1:
                    var _0x1c86af = _0x2c4eb0[_0x48d91e(0xd18)];
                    _0x4aa03d['setBuffer'](_0x17a23d[_0x48d91e(0xe93)], _0x1c86af['_alphaElements']), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda0)], _0x1c86af['_rgbElements']);
                    break;
                case 0x3:
                    var _0x197819 = _0x2c4eb0[_0x48d91e(0xd19)], _0x340f61 = _0x2c4eb0['gradientMax'];
                    _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xe93)], _0x197819[_0x48d91e(0xcfa)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda0)], _0x197819[_0x48d91e(0xcfb)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda2)], _0x340f61[_0x48d91e(0xcfa)]), _0x4aa03d['setBuffer'](_0x17a23d[_0x48d91e(0xda4)], _0x340f61[_0x48d91e(0xcfb)]);
                    break;
                }
            } else
                _0x4aa03d[_0x48d91e(0x493)](_0x17a23d['SHADERDEFINE_COLOROVERLIFETIME']), _0x4aa03d[_0x48d91e(0x493)](_0x17a23d[_0x48d91e(0xe91)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d['COLOROVERLIFEGRADIENTALPHAS'], _0x1c86af[_0x48d91e(0xcfa)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda0)], _0x1c86af[_0x48d91e(0xcfb)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d['COLOROVERLIFEGRADIENTALPHAS'], _0x197819[_0x48d91e(0xcfa)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda0)], _0x197819[_0x48d91e(0xcfb)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda2)], _0x340f61[_0x48d91e(0xcfa)]), _0x4aa03d[_0x48d91e(0x574)](_0x17a23d[_0x48d91e(0xda4)], _0x340f61[_0x48d91e(0xcfb)]);
            this[_0x48d91e(0xe90)] = _0x3682be;
        }
        get [_0x5659be(0xe94)]() {
            return this['_sizeOverLifetime'];
        }
        set [_0x5659be(0xe94)](_0x4be9f6) {
            var _0x19e694 = _0x5659be, _0x359b81 = this[_0x19e694(0x3d3)]['_render']['_shaderValues'];
            if (_0x4be9f6) {
                var _0x43bee4 = _0x4be9f6['size'], _0x4dfa6c = _0x43bee4[_0x19e694(0xd36)], _0x4071bf = _0x43bee4['type'];
                if (_0x4be9f6[_0x19e694(0x650)])
                    switch (_0x4071bf) {
                    case 0x0:
                        if (_0x4dfa6c)
                            _0x359b81[_0x19e694(0x62c)](_0x17a23d[_0x19e694(0xe95)]);
                        else
                            _0x359b81['addDefine'](_0x17a23d[_0x19e694(0xe96)]);
                        break;
                    case 0x2:
                        if (_0x4dfa6c)
                            _0x359b81[_0x19e694(0x62c)](_0x17a23d[_0x19e694(0xe97)]);
                        else
                            _0x359b81[_0x19e694(0x62c)](_0x17a23d[_0x19e694(0xe98)]);
                        break;
                    }
                else
                    _0x359b81[_0x19e694(0x493)](_0x17a23d['SHADERDEFINE_SIZEOVERLIFETIMECURVE']), _0x359b81[_0x19e694(0x493)](_0x17a23d['SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE']), _0x359b81['removeDefine'](_0x17a23d[_0x19e694(0xe98)]), _0x359b81[_0x19e694(0x493)](_0x17a23d[_0x19e694(0xe97)]);
                switch (_0x4071bf) {
                case 0x0:
                    _0x4dfa6c ? (_0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xda8)], _0x43bee4['gradientX'][_0x19e694(0x860)]), _0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xe99)], _0x43bee4[_0x19e694(0xd39)][_0x19e694(0x860)]), _0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xdab)], _0x43bee4[_0x19e694(0xd3a)]['_elements'])) : _0x359b81[_0x19e694(0x574)](_0x17a23d['SOLSIZEGRADIENT'], _0x43bee4[_0x19e694(0xd18)][_0x19e694(0x860)]);
                    break;
                case 0x2:
                    _0x4dfa6c ? (_0x359b81[_0x19e694(0x574)](_0x17a23d['SOLSIZEGRADIENTX'], _0x43bee4[_0x19e694(0xd4e)]['_elements']), _0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xdae)], _0x43bee4['gradientXMax'][_0x19e694(0x860)]), _0x359b81[_0x19e694(0x574)](_0x17a23d['SOLSIZEGRADIENTY'], _0x43bee4[_0x19e694(0xd4b)][_0x19e694(0x860)]), _0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xe9a)], _0x43bee4[_0x19e694(0xd4f)]['_elements']), _0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xdab)], _0x43bee4[_0x19e694(0xd3f)][_0x19e694(0x860)]), _0x359b81[_0x19e694(0x574)](_0x17a23d['SOLSizeGradientZMAX'], _0x43bee4[_0x19e694(0xd4c)][_0x19e694(0x860)])) : (_0x359b81['setBuffer'](_0x17a23d[_0x19e694(0xda6)], _0x43bee4[_0x19e694(0xd19)]['_elements']), _0x359b81[_0x19e694(0x574)](_0x17a23d[_0x19e694(0xdad)], _0x43bee4[_0x19e694(0xd1e)]['_elements']));
                    break;
                }
            } else
                _0x359b81[_0x19e694(0x493)](_0x17a23d[_0x19e694(0xe96)]), _0x359b81[_0x19e694(0x493)](_0x17a23d[_0x19e694(0xe95)]), _0x359b81['removeDefine'](_0x17a23d[_0x19e694(0xe98)]), _0x359b81['removeDefine'](_0x17a23d['SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE']);
            this[_0x19e694(0xe9b)] = _0x4be9f6;
        }
        get ['rotationOverLifetime']() {
            var _0x49410a = _0x5659be;
            return this[_0x49410a(0xe5b)];
        }
        set ['rotationOverLifetime'](_0x21820c) {
            var _0x5633e5 = _0x5659be, _0x37db79 = this[_0x5633e5(0x3d3)][_0x5633e5(0x5e6)][_0x5633e5(0x4e0)];
            if (_0x21820c) {
                var _0x56781d = _0x21820c['angularVelocity'];
                if (!_0x56781d)
                    return;
                var _0x3417d8 = _0x56781d[_0x5633e5(0xd36)], _0x409730 = _0x56781d['type'];
                if (_0x21820c['enable']) {
                    if (_0x3417d8)
                        _0x37db79[_0x5633e5(0x62c)](_0x17a23d[_0x5633e5(0xe9c)]);
                    else
                        _0x37db79[_0x5633e5(0x62c)](_0x17a23d[_0x5633e5(0xe9d)]);
                    switch (_0x409730) {
                    case 0x0:
                        _0x37db79[_0x5633e5(0x62c)](_0x17a23d[_0x5633e5(0xe9e)]);
                        break;
                    case 0x1:
                        _0x37db79[_0x5633e5(0x62c)](_0x17a23d[_0x5633e5(0xe9f)]);
                        break;
                    case 0x2:
                        _0x37db79[_0x5633e5(0x62c)](_0x17a23d[_0x5633e5(0xea0)]);
                        break;
                    case 0x3:
                        _0x37db79[_0x5633e5(0x62c)](_0x17a23d['SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES']);
                        break;
                    }
                } else
                    _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xe9d)]), _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xe9c)]), _0x37db79['removeDefine'](_0x17a23d[_0x5633e5(0xe9e)]), _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xe9f)]), _0x37db79[_0x5633e5(0x493)](_0x17a23d['SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS']), _0x37db79['removeDefine'](_0x17a23d[_0x5633e5(0xea1)]);
                switch (_0x409730) {
                case 0x0:
                    _0x3417d8 ? _0x37db79[_0x5633e5(0x4b1)](_0x17a23d['ROLANGULARVELOCITYCONSTSEPRARATE'], _0x56781d[_0x5633e5(0xd37)]) : _0x37db79[_0x5633e5(0x4af)](_0x17a23d[_0x5633e5(0xdb2)], _0x56781d['constant']);
                    break;
                case 0x1:
                    _0x3417d8 ? (_0x37db79['setBuffer'](_0x17a23d[_0x5633e5(0xea2)], _0x56781d[_0x5633e5(0xd38)][_0x5633e5(0x860)]), _0x37db79[_0x5633e5(0x574)](_0x17a23d['ROLANGULARVELOCITYGRADIENTY'], _0x56781d['gradientY'][_0x5633e5(0x860)]), _0x37db79[_0x5633e5(0x574)](_0x17a23d['ROLANGULARVELOCITYGRADIENTZ'], _0x56781d[_0x5633e5(0xd3a)][_0x5633e5(0x860)])) : _0x37db79[_0x5633e5(0x574)](_0x17a23d[_0x5633e5(0xdb5)], _0x56781d[_0x5633e5(0xd18)][_0x5633e5(0x860)]);
                    break;
                case 0x2:
                    _0x3417d8 ? (_0x37db79[_0x5633e5(0x4b1)](_0x17a23d[_0x5633e5(0xea3)], _0x56781d[_0x5633e5(0xd3c)]), _0x37db79[_0x5633e5(0x4b1)](_0x17a23d[_0x5633e5(0xdbb)], _0x56781d[_0x5633e5(0xd3d)])) : (_0x37db79['setNumber'](_0x17a23d['ROLANGULARVELOCITYCONST'], _0x56781d['constantMin']), _0x37db79[_0x5633e5(0x4af)](_0x17a23d['ROLANGULARVELOCITYCONSTMAX'], _0x56781d[_0x5633e5(0xd17)]));
                    break;
                case 0x3:
                    _0x3417d8 ? (_0x37db79[_0x5633e5(0x574)](_0x17a23d[_0x5633e5(0xea2)], _0x56781d[_0x5633e5(0xd4e)][_0x5633e5(0x860)]), _0x37db79[_0x5633e5(0x574)](_0x17a23d[_0x5633e5(0xdbf)], _0x56781d[_0x5633e5(0xd3e)][_0x5633e5(0x860)]), _0x37db79['setBuffer'](_0x17a23d['ROLANGULARVELOCITYGRADIENTY'], _0x56781d[_0x5633e5(0xd4b)][_0x5633e5(0x860)]), _0x37db79[_0x5633e5(0x574)](_0x17a23d[_0x5633e5(0xdc1)], _0x56781d[_0x5633e5(0xd4f)][_0x5633e5(0x860)]), _0x37db79[_0x5633e5(0x574)](_0x17a23d['ROLANGULARVELOCITYGRADIENTZ'], _0x56781d[_0x5633e5(0xd3f)][_0x5633e5(0x860)]), _0x37db79['setBuffer'](_0x17a23d[_0x5633e5(0xdc3)], _0x56781d['gradientZMax'][_0x5633e5(0x860)])) : (_0x37db79[_0x5633e5(0x574)](_0x17a23d['ROLANGULARVELOCITYGRADIENT'], _0x56781d['gradientMin'][_0x5633e5(0x860)]), _0x37db79[_0x5633e5(0x574)](_0x17a23d[_0x5633e5(0xdbd)], _0x56781d[_0x5633e5(0xd1e)][_0x5633e5(0x860)]));
                    break;
                }
            } else
                _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xe9d)]), _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xe9c)]), _0x37db79['removeDefine'](_0x17a23d[_0x5633e5(0xe9e)]), _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xe9f)]), _0x37db79[_0x5633e5(0x493)](_0x17a23d[_0x5633e5(0xea0)]), _0x37db79['removeDefine'](_0x17a23d['SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES']);
            this[_0x5633e5(0xe5b)] = _0x21820c;
        }
        get [_0x5659be(0xea4)]() {
            var _0x50f04c = _0x5659be;
            return this[_0x50f04c(0xea5)];
        }
        set [_0x5659be(0xea4)](_0x15cb72) {
            var _0x10194e = _0x5659be, _0x33caca = this['_owner'][_0x10194e(0x5e6)][_0x10194e(0x4e0)];
            if (_0x15cb72) {
                var _0xb22b43 = _0x15cb72[_0x10194e(0xd76)], _0x46de82 = _0xb22b43[_0x10194e(0x2ae)];
                if (_0x15cb72[_0x10194e(0x650)])
                    switch (_0x46de82) {
                    case 0x1:
                        _0x33caca[_0x10194e(0x62c)](_0x17a23d[_0x10194e(0xea6)]);
                        break;
                    case 0x3:
                        _0x33caca[_0x10194e(0x62c)](_0x17a23d[_0x10194e(0xea7)]);
                        break;
                    }
                else
                    _0x33caca['removeDefine'](_0x17a23d['SHADERDEFINE_TEXTURESHEETANIMATIONCURVE']), _0x33caca[_0x10194e(0x493)](_0x17a23d[_0x10194e(0xea7)]);
                if (_0x46de82 === 0x1 || _0x46de82 === 0x3) {
                    _0x33caca[_0x10194e(0x4af)](_0x17a23d[_0x10194e(0xdc7)], _0x15cb72[_0x10194e(0xd71)]);
                    var _0x482cc8 = _0x15cb72['tiles'], _0x5a760e = this[_0x10194e(0xea8)];
                    _0x5a760e['x'] = 0x1 / _0x482cc8['x'], _0x5a760e['y'] = 0x1 / _0x482cc8['y'], _0x33caca[_0x10194e(0x49a)](_0x17a23d['TEXTURESHEETANIMATIONSUBUVLENGTH'], this[_0x10194e(0xea8)]);
                }
                switch (_0x46de82) {
                case 0x1:
                    _0x33caca['setBuffer'](_0x17a23d[_0x10194e(0xdcb)], _0xb22b43[_0x10194e(0xd79)][_0x10194e(0x860)]);
                    break;
                case 0x3:
                    _0x33caca['setBuffer'](_0x17a23d[_0x10194e(0xdcb)], _0xb22b43[_0x10194e(0xd7b)]['_elements']), _0x33caca[_0x10194e(0x574)](_0x17a23d[_0x10194e(0xdcc)], _0xb22b43['frameOverTimeDataMax'][_0x10194e(0x860)]);
                    break;
                }
            } else
                _0x33caca[_0x10194e(0x493)](_0x17a23d['SHADERDEFINE_TEXTURESHEETANIMATIONCURVE']), _0x33caca['removeDefine'](_0x17a23d[_0x10194e(0xea7)]);
            this[_0x10194e(0xea5)] = _0x15cb72;
        }
        [_0x5659be(0xea9)](_0x35a134 = 0x0) {
            var _0x4f29be = _0x5659be;
            if (_0x35a134 === 0x0)
                return this[_0x4f29be(0x4f9)];
            else
                return null;
        }
        [_0x5659be(0xeaa)]() {
            var _0x2c6a1f = _0x5659be;
            return this[_0x2c6a1f(0x624)];
        }
        [_0x5659be(0xeab)]() {
            var _0x220b34 = _0x5659be, _0x4b5bfc = this['_boundingSphere']['center'];
            _0x4b5bfc['x'] = 0x0, _0x4b5bfc['y'] = 0x0, _0x4b5bfc['z'] = 0x0, this[_0x220b34(0xe76)][_0x220b34(0x87d)] = Number[_0x220b34(0xa46)];
        }
        [_0x5659be(0xeac)]() {
            var _0x4e5df1 = _0x5659be, _0x2a292a = this[_0x4e5df1(0x3d3)], _0xa05fba = _0x2a292a[_0x4e5df1(0xead)], _0x5a00af = this[_0x4e5df1(0xa67)][_0x4e5df1(0xa4f)](), _0x25fe0b = this[_0x4e5df1(0xa67)]['getMax'](), _0x514a22 = 0x0;
            switch (this[_0x4e5df1(0xe42)]) {
            case 0x0:
                _0x514a22 = this[_0x4e5df1(0xe5c)];
                break;
            case 0x2:
                _0x514a22 = this['_startLifetimeConstantMax'];
                break;
            }
            var _0x65463a = 0x0;
            switch (this[_0x4e5df1(0xe6d)]) {
            case 0x0:
                _0x65463a = this[_0x4e5df1(0xe7a)];
                break;
            case 0x2:
                _0x65463a = this['startSpeedConstantMax'];
                break;
            }
            var _0x173fc4 = 0x0;
            if (this['threeDStartSize'])
                switch (this[_0x4e5df1(0xe6e)]) {
                case 0x0:
                    _0x173fc4 = Math[_0x4e5df1(0x205)](this[_0x4e5df1(0xe35)]['x'], this['startSizeConstantSeparate']['y'], this['startSizeConstantSeparate']['z']);
                    break;
                case 0x2:
                    _0x173fc4 = Math['max'](this[_0x4e5df1(0xe37)]['x'], this[_0x4e5df1(0xe37)]['y'], this[_0x4e5df1(0xe37)]['z']);
                    break;
                }
            else
                switch (this[_0x4e5df1(0xe6e)]) {
                case 0x0:
                    _0x173fc4 = this['startSizeConstant'];
                    break;
                case 0x2:
                    _0x173fc4 = this[_0x4e5df1(0xe39)];
                    break;
                }
            var _0x32969d = _0x4c18c2[_0x4e5df1(0x59b)], _0x1e54a4 = _0x4c18c2[_0x4e5df1(0x3d6)], _0x30f9bd = _0x4c18c2['_tempVector32'], _0x44f09e = _0x4c18c2[_0x4e5df1(0x855)];
            _0x32969d[_0x4e5df1(0x1fa)](0x0, 0x0, 0x1), _0x1e54a4[_0x4e5df1(0x1fa)](0x0, 0x0, 0x0), _0x30f9bd[_0x4e5df1(0x1fa)](0x0, 0x0, 0x0), _0x44f09e[_0x4e5df1(0x1fa)](0x0, 0x0, 0x0);
            if (this['shape'] && this[_0x4e5df1(0xe82)][_0x4e5df1(0x650)])
                switch (this['shape'][_0x4e5df1(0xd64)]) {
                case _0x71dec4[_0x4e5df1(0xd57)][_0x4e5df1(0xd56)]:
                    var _0x8d30aa = this['shape'];
                    _0x32969d[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1), _0x1e54a4[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1), _0x30f9bd[_0x4e5df1(0x1fa)](_0x8d30aa[_0x4e5df1(0x87d)], _0x8d30aa[_0x4e5df1(0x87d)], _0x8d30aa[_0x4e5df1(0x87d)]), _0x44f09e[_0x4e5df1(0x1fa)](_0x8d30aa[_0x4e5df1(0x87d)], _0x8d30aa['radius'], _0x8d30aa[_0x4e5df1(0x87d)]);
                    break;
                case _0x71dec4['ParticleSystemShapeType'][_0x4e5df1(0xd55)]:
                    var _0x5b70c7 = this[_0x4e5df1(0xe82)];
                    _0x32969d[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1), _0x1e54a4[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1), _0x30f9bd['setValue'](_0x5b70c7[_0x4e5df1(0x87d)], _0x5b70c7[_0x4e5df1(0x87d)], _0x5b70c7[_0x4e5df1(0x87d)]), _0x44f09e[_0x4e5df1(0x1fa)](_0x5b70c7[_0x4e5df1(0x87d)], _0x5b70c7[_0x4e5df1(0x87d)], 0x0);
                    break;
                case _0x71dec4[_0x4e5df1(0xd57)]['Cone']:
                    var _0x121bea = this[_0x4e5df1(0xe82)];
                    if (_0x121bea[_0x4e5df1(0xd6d)] == 0x0 || _0x121bea[_0x4e5df1(0xd6d)] == 0x1) {
                        var _0x367bb3 = _0x121bea[_0x4e5df1(0xd6c)], _0x330750 = Math[_0x4e5df1(0x26f)](_0x367bb3);
                        _0x32969d[_0x4e5df1(0x1fa)](_0x330750, _0x330750, 0x1), _0x1e54a4['setValue'](_0x330750, _0x330750, 0x0), _0x30f9bd['setValue'](_0x121bea[_0x4e5df1(0x87d)], _0x121bea[_0x4e5df1(0x87d)], 0x0), _0x44f09e[_0x4e5df1(0x1fa)](_0x121bea[_0x4e5df1(0x87d)], _0x121bea[_0x4e5df1(0x87d)], 0x0);
                        break;
                    } else {
                        if (_0x121bea[_0x4e5df1(0xd6d)] == 0x2 || _0x121bea[_0x4e5df1(0xd6d)] == 0x3) {
                            var _0x367bb3 = _0x121bea[_0x4e5df1(0xd6c)], _0x330750 = Math[_0x4e5df1(0x26f)](_0x367bb3), _0x405d8a = _0x121bea['length'];
                            _0x32969d[_0x4e5df1(0x1fa)](_0x330750, _0x330750, 0x1), _0x1e54a4[_0x4e5df1(0x1fa)](_0x330750, _0x330750, 0x0);
                            var _0x3d7ad0 = Math[_0x4e5df1(0x47c)](_0x367bb3), _0xe43670 = _0x121bea['radius'] + _0x405d8a * _0x3d7ad0;
                            _0x30f9bd['setValue'](_0xe43670, _0xe43670, _0x405d8a), _0x44f09e[_0x4e5df1(0x1fa)](_0xe43670, _0xe43670, 0x0);
                        }
                    }
                    break;
                case _0x71dec4[_0x4e5df1(0xd57)][_0x4e5df1(0xd52)]:
                    var _0x260916 = this[_0x4e5df1(0xe82)];
                    this[_0x4e5df1(0xe82)]['randomDirection'] != 0x0 && (_0x32969d[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1), _0x1e54a4[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1));
                    _0x30f9bd[_0x4e5df1(0x1fa)](_0x260916['x'] / 0x2, _0x260916['y'] / 0x2, _0x260916['z'] / 0x2), _0x44f09e[_0x4e5df1(0x1fa)](_0x260916['x'] / 0x2, _0x260916['y'] / 0x2, _0x260916['z'] / 0x2);
                    break;
                case _0x71dec4[_0x4e5df1(0xd57)]['Circle']:
                    var _0x4c8ccb = this[_0x4e5df1(0xe82)];
                    _0x32969d[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1), _0x1e54a4['setValue'](0x1, 0x1, 0x1), _0x30f9bd[_0x4e5df1(0x1fa)](_0x4c8ccb['radius'], _0x4c8ccb[_0x4e5df1(0x87d)], 0x0), _0x44f09e[_0x4e5df1(0x1fa)](_0x4c8ccb[_0x4e5df1(0x87d)], _0x4c8ccb[_0x4e5df1(0x87d)], 0x0);
                    break;
                }
            var _0x3d94ca = 0x0, _0x8d66c8 = _0xa05fba[_0x4e5df1(0x6fc)] == 0x4;
            switch (_0xa05fba['renderMode']) {
            case 0x0:
            case 0x1:
            case 0x2:
            case 0x3:
                _0x3d94ca = _0x4c18c2['halfKSqrtOf2'];
                break;
            case 0x4:
                var _0x1fee65 = _0xa05fba['mesh'][_0x4e5df1(0x80d)];
                _0x3d94ca = Math['sqrt'](Math[_0x4e5df1(0x2ef)](_0x1fee65[_0x4e5df1(0xa41)]()['x'], 0x2) + Math['pow'](_0x1fee65[_0x4e5df1(0xa41)]()['y'], 0x2) + Math['pow'](_0x1fee65[_0x4e5df1(0xa41)]()['z'], 0x2));
                break;
            }
            var _0x228839 = _0x4c18c2[_0x4e5df1(0x847)];
            _0x228839[_0x4e5df1(0x1fa)](0x1, 0x1, 0x1);
            if (this['sizeOverLifetime'] && this[_0x4e5df1(0xe94)]['enable']) {
                var _0x51cc1a = this[_0x4e5df1(0xe94)][_0x4e5df1(0x2b8)], _0x3176bf = _0x51cc1a[_0x4e5df1(0xd4d)](_0x8d66c8);
                _0x228839['setValue'](_0x3176bf, _0x3176bf, _0x3176bf);
            }
            var _0xbe9a1d = _0x3d94ca * _0x173fc4;
            _0x3f70c5[_0x4e5df1(0x1ee)](_0x228839, _0xbe9a1d, _0x228839);
            var _0x39dc65 = _0x4c18c2[_0x4e5df1(0x853)], _0x35146e = _0x4c18c2[_0x4e5df1(0x867)];
            _0x65463a > 0x0 ? (_0x3f70c5[_0x4e5df1(0x1ee)](_0x32969d, _0x65463a, _0x39dc65), _0x3f70c5[_0x4e5df1(0x1ee)](_0x1e54a4, _0x65463a, _0x35146e)) : (_0x3f70c5[_0x4e5df1(0x1ee)](_0x32969d, -_0x65463a, _0x35146e), _0x3f70c5['scale'](_0x1e54a4, -_0x65463a, _0x39dc65));
            if (this[_0x4e5df1(0xe89)] && this[_0x4e5df1(0xe89)][_0x4e5df1(0x650)]) {
                var _0x4dc290 = this['velocityOverLifetime'][_0x4e5df1(0xd7e)], _0x3dda55 = _0x4c18c2[_0x4e5df1(0x848)];
                _0x3dda55['setValue'](0x0, 0x0, 0x0);
                switch (_0x4dc290['type']) {
                case 0x0:
                    _0x4dc290[_0x4e5df1(0xd15)][_0x4e5df1(0x1f0)](_0x3dda55);
                    break;
                case 0x2:
                    _0x4dc290['constantMax'][_0x4e5df1(0x1f0)](_0x3dda55);
                    break;
                case 0x1:
                    var _0x5ce37c = _0x4dc290[_0x4e5df1(0xd38)][_0x4e5df1(0xd49)](), _0x33cd10 = _0x4dc290[_0x4e5df1(0xd39)][_0x4e5df1(0xd49)](), _0x2e8527 = _0x4dc290[_0x4e5df1(0xd3a)]['getAverageValue']();
                    _0x3dda55[_0x4e5df1(0x1fa)](_0x5ce37c, _0x33cd10, _0x2e8527);
                    break;
                case 0x3:
                    var _0x126d67 = _0x4dc290[_0x4e5df1(0xd3e)][_0x4e5df1(0xd49)](), _0x57b92e = _0x4dc290[_0x4e5df1(0xd4f)][_0x4e5df1(0xd49)](), _0x4529ff = _0x4dc290[_0x4e5df1(0xd4c)]['getAverageValue']();
                    _0x3dda55[_0x4e5df1(0x1fa)](_0x126d67, _0x57b92e, _0x4529ff);
                    break;
                }
                this['velocityOverLifetime'][_0x4e5df1(0xd7c)] == 0x1 && _0x3f70c5[_0x4e5df1(0x20b)](_0x3dda55, this['_owner'][_0x4e5df1(0x3cc)][_0x4e5df1(0x3ce)], _0x3dda55), _0x3f70c5['add'](_0x39dc65, _0x3dda55, _0x39dc65), _0x3f70c5['subtract'](_0x35146e, _0x3dda55, _0x35146e), _0x3f70c5[_0x4e5df1(0x205)](_0x39dc65, _0x3f70c5['_ZERO'], _0x39dc65), _0x3f70c5['max'](_0x35146e, _0x3f70c5[_0x4e5df1(0x214)], _0x35146e);
            }
            _0x3f70c5['scale'](_0x39dc65, _0x514a22, _0x39dc65), _0x3f70c5[_0x4e5df1(0x1ee)](_0x35146e, _0x514a22, _0x35146e);
            var _0x4d0c9a = this[_0x4e5df1(0xdf0)];
            if (_0x4d0c9a != 0x0) {
                var _0x3e8af5 = 0.5 * _0x4c18c2['g'] * _0x4d0c9a * _0x514a22 * _0x514a22, _0x1bb04 = _0x39dc65['y'] - _0x3e8af5, _0x1d58b8 = _0x35146e['y'] + _0x3e8af5;
                _0x1bb04 = _0x1bb04 > 0x0 ? _0x1bb04 : 0x0, _0x1d58b8 = _0x1d58b8 > 0x0 ? _0x1d58b8 : 0x0, this['_gravityOffset'][_0x4e5df1(0x1fa)](_0x39dc65['y'] - _0x1bb04, _0x1d58b8 - _0x35146e['y']);
            }
            _0x3f70c5[_0x4e5df1(0x201)](_0x39dc65, _0x228839, _0x25fe0b), _0x3f70c5['add'](_0x25fe0b, _0x30f9bd, _0x25fe0b), _0x3f70c5[_0x4e5df1(0x201)](_0x35146e, _0x228839, _0x5a00af), _0x3f70c5[_0x4e5df1(0x201)](_0x5a00af, _0x44f09e, _0x5a00af), _0x3f70c5[_0x4e5df1(0x1ee)](_0x5a00af, -0x1, _0x5a00af), this[_0x4e5df1(0xa67)][_0x4e5df1(0xa6b)](_0x5a00af), this[_0x4e5df1(0xa67)][_0x4e5df1(0xa51)](_0x25fe0b);
        }
        get [_0x5659be(0xeae)]() {
            var _0x43a28d = _0x5659be;
            return this[_0x43a28d(0xeaf)];
        }
        set [_0x5659be(0xeae)](_0x4c6d78) {
            var _0x167dfa = _0x5659be;
            _0x4c6d78 ? this[_0x167dfa(0xdec)] = !![] : this[_0x167dfa(0xdec)] = ![], this[_0x167dfa(0xeaf)] = _0x4c6d78;
        }
        ['_simulationSupported']() {
            var _0x917f07 = _0x5659be;
            if (this[_0x917f07(0xdef)] == 0x0)
                return ![];
            return !![];
        }
        ['_updateEmission']() {
            var _0x10fa8f = _0x5659be;
            if (!this[_0x10fa8f(0xdee)])
                return;
            if (this[_0x10fa8f(0xe4d)])
                this[_0x10fa8f(0xe4d)] = ![];
            else {
                var _0x44f05f = this['_startUpdateLoopCount'] !== _0x218b83[_0x10fa8f(0x500)][_0x10fa8f(0x4da)] && !this[_0x10fa8f(0xe57)] ? this[_0x10fa8f(0x3d3)][_0x10fa8f(0x3a6)]['timer'][_0x10fa8f(0x3b5)] / 0x3e8 : 0x0;
                _0x44f05f = Math[_0x10fa8f(0x204)](_0x4c18c2[_0x10fa8f(0xeb0)], _0x44f05f * this[_0x10fa8f(0xe70)]), this[_0x10fa8f(0xeb1)](_0x44f05f);
            }
        }
        [_0x5659be(0xeb1)](_0x4c77ee) {
            var _0x3fea0a = _0x5659be;
            if (this[_0x3fea0a(0xe75)][_0x3fea0a(0x6fc)] === 0x4 && !this[_0x3fea0a(0xe75)][_0x3fea0a(0x8d7)])
                return;
            this[_0x3fea0a(0xdf6)] += _0x4c77ee, this['_retireActiveParticles'](), this[_0x3fea0a(0xeb2)](), this[_0x3fea0a(0xe78)] += _0x4c77ee;
            if (this[_0x3fea0a(0xe78)] < this[_0x3fea0a(0xe58)])
                return;
            if (this[_0x3fea0a(0xe53)]['enable'] && this[_0x3fea0a(0xe55)] && !this['_isPaused'])
                this[_0x3fea0a(0xeb3)](_0x4c77ee, this[_0x3fea0a(0xdf6)]);
        }
        ['_updateParticlesSimulationRestart'](_0x3b2d4f) {
            var _0x218d02 = _0x5659be;
            this[_0x218d02(0xe74)] = 0x0, this['_firstNewElement'] = 0x0, this[_0x218d02(0xe4f)] = 0x0, this[_0x218d02(0xe50)] = 0x0, this[_0x218d02(0xe59)] = 0x0, this[_0x218d02(0xe77)] = _0x3b2d4f, this['_emissionTime'] = 0x0, this[_0x218d02(0xe78)] = 0x0, this[_0x218d02(0xdf6)] = _0x3b2d4f;
            var _0x4b024d = _0x3b2d4f;
            if (_0x4b024d < this[_0x218d02(0xe58)]) {
                this[_0x218d02(0xe78)] = _0x4b024d;
                return;
            }
            if (this[_0x218d02(0xe53)][_0x218d02(0x650)])
                this[_0x218d02(0xeb3)](_0x3b2d4f, _0x3b2d4f);
        }
        ['_retireActiveParticles']() {
            var _0x488e6f = _0x5659be;
            const _0x231e70 = 0.0001;
            while (this[_0x488e6f(0xe74)] != this[_0x488e6f(0xe4e)]) {
                var _0x27a759 = this[_0x488e6f(0xe74)] * this[_0x488e6f(0xe4b)] * this[_0x488e6f(0x4de)], _0xda7599 = _0x27a759 + this['_timeIndex'], _0x46692e = this[_0x488e6f(0xdf6)] - this[_0x488e6f(0x4fa)][_0xda7599];
                if (_0x46692e + _0x231e70 < this[_0x488e6f(0x4fa)][_0x27a759 + this[_0x488e6f(0xeb4)]])
                    break;
                this[_0x488e6f(0x4fa)][_0xda7599] = this[_0x488e6f(0xe51)], this['_firstActiveElement']++;
                if (this['_firstActiveElement'] >= this[_0x488e6f(0xe52)])
                    this[_0x488e6f(0xe74)] = 0x0;
            }
        }
        [_0x5659be(0xeb2)]() {
            var _0x1a8a53 = _0x5659be;
            while (this[_0x1a8a53(0xe50)] != this[_0x1a8a53(0xe74)]) {
                var _0x25f929 = this['_drawCounter'] - this[_0x1a8a53(0x4fa)][this['_firstRetiredElement'] * this[_0x1a8a53(0xe4b)] * this['_vertexStride'] + this[_0x1a8a53(0xe4c)]];
                this[_0x1a8a53(0xe50)]++;
                if (this['_firstRetiredElement'] >= this['_bufferMaxParticles'])
                    this[_0x1a8a53(0xe50)] = 0x0;
            }
        }
        ['_burst'](_0x4ef52a, _0x2515a9) {
            var _0x5f1acd = _0x5659be, _0x4d62eb = 0x0, _0x4af4af = this[_0x5f1acd(0xe53)][_0x5f1acd(0xe23)];
            for (var _0x5c62f6 = _0x4af4af[_0x5f1acd(0x1ff)]; this['_burstsIndex'] < _0x5c62f6; this[_0x5f1acd(0xe59)]++) {
                var _0x3ad49d = _0x4af4af[this[_0x5f1acd(0xe59)]], _0x1adeaa = _0x3ad49d[_0x5f1acd(0x268)];
                if (_0x4ef52a <= _0x1adeaa && _0x1adeaa < _0x2515a9) {
                    var _0x469d3b;
                    this[_0x5f1acd(0xe2e)] ? _0x469d3b = _0x218b83[_0x5f1acd(0xe2a)][_0x5f1acd(0x1fc)](_0x3ad49d['minCount'], _0x3ad49d[_0x5f1acd(0xd0c)], Math[_0x5f1acd(0xd5d)]()) : (this['_rand']['seed'] = this[_0x5f1acd(0xe66)][0x0], _0x469d3b = _0x218b83['MathUtil'][_0x5f1acd(0x1fc)](_0x3ad49d[_0x5f1acd(0xd0b)], _0x3ad49d[_0x5f1acd(0xd0c)], this[_0x5f1acd(0xe65)][_0x5f1acd(0xd5c)]()), this['_randomSeeds'][0x0] = this[_0x5f1acd(0xe65)][_0x5f1acd(0xd66)]), _0x4d62eb += _0x469d3b;
                } else
                    break;
            }
            return _0x4d62eb;
        }
        [_0x5659be(0xeb3)](_0x4118d0, _0x28e6ad) {
            var _0x4820b6 = _0x5659be, _0x18b415, _0x167127 = this[_0x4820b6(0xeb5)];
            this[_0x4820b6(0xeb5)] += _0x4118d0;
            var _0x15682f = 0x0;
            if (this[_0x4820b6(0xeb5)] > this['duration']) {
                if (this[_0x4820b6(0xe67)])
                    _0x15682f += this[_0x4820b6(0xeb6)](_0x167127, this['_emissionTime']), this[_0x4820b6(0xeb5)] -= this[_0x4820b6(0x320)], this[_0x4820b6(0xe59)] = 0x0, _0x15682f += this[_0x4820b6(0xeb6)](0x0, this['_emissionTime']);
                else {
                    _0x15682f = Math['min'](this[_0x4820b6(0xe7e)] - this[_0x4820b6(0xe80)], _0x15682f);
                    for (_0x18b415 = 0x0; _0x18b415 < _0x15682f; _0x18b415++)
                        this['emit'](_0x28e6ad);
                    this[_0x4820b6(0xe56)] = ![], this['stop']();
                    return;
                }
            } else
                _0x15682f += this[_0x4820b6(0xeb6)](_0x167127, this[_0x4820b6(0xeb5)]);
            _0x15682f = Math[_0x4820b6(0x204)](this[_0x4820b6(0xe7e)] - this[_0x4820b6(0xe80)], _0x15682f);
            for (_0x18b415 = 0x0; _0x18b415 < _0x15682f; _0x18b415++)
                this[_0x4820b6(0xeb7)](_0x28e6ad);
            var _0x2d4efe = this['emission'][_0x4820b6(0xe25)];
            if (_0x2d4efe > 0x0) {
                var _0xd1ae9e = 0x1 / _0x2d4efe;
                this[_0x4820b6(0xe77)] += _0xd1ae9e, this[_0x4820b6(0xe77)] = this[_0x4820b6(0xdf6)] - (this['_currentTime'] - this['_frameRateTime']) % this[_0x4820b6(0xe61)];
                while (this[_0x4820b6(0xe77)] <= _0x28e6ad) {
                    if (this[_0x4820b6(0xeb7)](this[_0x4820b6(0xe77)]))
                        this['_frameRateTime'] += _0xd1ae9e;
                    else
                        break;
                }
                this[_0x4820b6(0xe77)] = Math[_0x4820b6(0x241)](_0x28e6ad / _0xd1ae9e) * _0xd1ae9e;
            }
        }
        [_0x5659be(0xdeb)]() {
            var _0x2687f3 = _0x5659be;
            if (this['_vertexBuffer']) {
                var _0x31f2df = this[_0x2687f3(0x4f9)][_0x2687f3(0x443)] + this[_0x2687f3(0x624)][_0x2687f3(0x8d1)] * 0x2;
                this[_0x2687f3(0x4f9)][_0x2687f3(0x311)](), this[_0x2687f3(0x624)]['destroy'](), _0x218b83[_0x2687f3(0x315)][_0x2687f3(0xcdb)](-_0x31f2df, -_0x31f2df);
            }
            var _0x5dc541 = _0x218b83[_0x2687f3(0x2f3)]['instance'], _0x44fdb1 = this[_0x2687f3(0xe75)], _0x4d9df9 = _0x44fdb1[_0x2687f3(0x6fc)];
            if (_0x4d9df9 !== -0x1 && this[_0x2687f3(0xe7e)] > 0x0) {
                var _0x3f389b, _0x267319, _0x3fd735, _0xb9e7b, _0x300537, _0x462342, _0x12be77, _0x40c56a = 0x0, _0x31f2df = 0x0, _0x4e6fd4 = _0x44fdb1[_0x2687f3(0x8d7)];
                if (_0x4d9df9 === 0x4) {
                    if (_0x4e6fd4) {
                        _0x12be77 = _0x50e22b[_0x2687f3(0x449)], this[_0x2687f3(0xe4b)] = _0x12be77[_0x2687f3(0x4e4)] / 0x4, this[_0x2687f3(0xeb4)] = 0xc, this['_timeIndex'] = 0x10, this[_0x2687f3(0x4de)] = _0x4e6fd4['_vertexCount'];
                        var _0x465d2c = this['_bufferMaxParticles'] * this[_0x2687f3(0x4de)], _0xccf7fe = Math[_0x2687f3(0x241)](_0x465d2c / 0xffff) + 0x1, _0x582b11 = _0x465d2c % 0xffff;
                        if (_0xccf7fe > 0x1)
                            throw new Error(_0x2687f3(0xeb8));
                        _0x40c56a = _0x12be77[_0x2687f3(0x4e4)] * _0x582b11, this[_0x2687f3(0x4f9)] = new _0x57a6a2(_0x40c56a, _0x5dc541['DYNAMIC_DRAW']), this[_0x2687f3(0x4f9)]['vertexDeclaration'] = _0x12be77, this[_0x2687f3(0x4fa)] = new Float32Array(this[_0x2687f3(0xe4b)] * _0x582b11), this[_0x2687f3(0xe62)] = _0x4e6fd4[_0x2687f3(0x624)][_0x2687f3(0x8d1)];
                        var _0x568262 = _0x4e6fd4[_0x2687f3(0x624)][_0x2687f3(0x307)](), _0x2734ae = this['_bufferMaxParticles'] * this['_indexStride'];
                        this['_indexBuffer'] = new _0x11925d(_0x71dec4[_0x2687f3(0x8ca)][_0x2687f3(0x8c8)], _0x2734ae, _0x5dc541['STATIC_DRAW']), _0x3f389b = new Uint16Array(_0x2734ae), _0x31f2df = _0x40c56a + _0x2734ae * 0x2, _0x300537 = 0x0;
                        for (_0x267319 = 0x0; _0x267319 < this[_0x2687f3(0xe52)]; _0x267319++) {
                            var _0x56928d = _0x267319 * this[_0x2687f3(0x4de)];
                            for (_0x3fd735 = 0x0, _0xb9e7b = _0x568262['length']; _0x3fd735 < _0xb9e7b; _0x3fd735++)
                                _0x3f389b[_0x300537++] = _0x56928d + _0x568262[_0x3fd735];
                        }
                        this['_indexBuffer'][_0x2687f3(0x4fd)](_0x3f389b), this[_0x2687f3(0x4f6)][_0x2687f3(0x444)](), this[_0x2687f3(0x4f6)]['applyVertexBuffer'](this[_0x2687f3(0x4f9)]), this[_0x2687f3(0x4f6)][_0x2687f3(0x4f3)](this[_0x2687f3(0x624)]), this['_bufferState'][_0x2687f3(0x4fb)]();
                    }
                } else {
                    _0x12be77 = _0x174845[_0x2687f3(0x449)], this['_floatCountPerVertex'] = _0x12be77['vertexStride'] / 0x4, this[_0x2687f3(0xeb4)] = 0x7, this[_0x2687f3(0xe4c)] = 0xb, this['_vertexStride'] = 0x4, _0x40c56a = _0x12be77[_0x2687f3(0x4e4)] * this[_0x2687f3(0xe52)] * this['_vertexStride'], this[_0x2687f3(0x4f9)] = new _0x57a6a2(_0x40c56a, _0x5dc541['DYNAMIC_DRAW']), this[_0x2687f3(0x4f9)][_0x2687f3(0x449)] = _0x12be77, this[_0x2687f3(0x4fa)] = new Float32Array(this[_0x2687f3(0xe4b)] * this[_0x2687f3(0xe52)] * this[_0x2687f3(0x4de)]);
                    for (_0x267319 = 0x0; _0x267319 < this[_0x2687f3(0xe52)]; _0x267319++) {
                        _0x462342 = _0x267319 * this['_floatCountPerVertex'] * this['_vertexStride'], this[_0x2687f3(0x4fa)][_0x462342] = -0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x1] = -0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x2] = 0x0, this[_0x2687f3(0x4fa)][_0x462342 + 0x3] = 0x1, _0x462342 += this[_0x2687f3(0xe4b)], this['_vertices'][_0x462342] = 0.5, this['_vertices'][_0x462342 + 0x1] = -0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x2] = 0x1, this[_0x2687f3(0x4fa)][_0x462342 + 0x3] = 0x1, _0x462342 += this['_floatCountPerVertex'], this[_0x2687f3(0x4fa)][_0x462342] = 0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x1] = 0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x2] = 0x1, this[_0x2687f3(0x4fa)][_0x462342 + 0x3] = 0x0, _0x462342 += this[_0x2687f3(0xe4b)], this[_0x2687f3(0x4fa)][_0x462342] = -0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x1] = 0.5, this[_0x2687f3(0x4fa)][_0x462342 + 0x2] = 0x0, this[_0x2687f3(0x4fa)][_0x462342 + 0x3] = 0x0;
                    }
                    this[_0x2687f3(0xe62)] = 0x6, this['_indexBuffer'] = new _0x11925d(_0x71dec4[_0x2687f3(0x8ca)][_0x2687f3(0x8c8)], this['_bufferMaxParticles'] * 0x6, _0x5dc541[_0x2687f3(0x4f8)]), _0x3f389b = new Uint16Array(this[_0x2687f3(0xe52)] * 0x6);
                    for (_0x267319 = 0x0; _0x267319 < this[_0x2687f3(0xe52)]; _0x267319++) {
                        _0x300537 = _0x267319 * 0x6;
                        var _0x270e76 = _0x267319 * this['_vertexStride'], _0xfbad0e = _0x270e76 + 0x2;
                        _0x3f389b[_0x300537++] = _0x270e76, _0x3f389b[_0x300537++] = _0xfbad0e, _0x3f389b[_0x300537++] = _0x270e76 + 0x1, _0x3f389b[_0x300537++] = _0x270e76, _0x3f389b[_0x300537++] = _0x270e76 + 0x3, _0x3f389b[_0x300537++] = _0xfbad0e;
                    }
                    this[_0x2687f3(0x624)]['setData'](_0x3f389b), _0x31f2df = _0x40c56a + this[_0x2687f3(0xe52)] * 0x6 * 0x2, this[_0x2687f3(0x4f6)][_0x2687f3(0x444)](), this['_bufferState']['applyVertexBuffer'](this[_0x2687f3(0x4f9)]), this[_0x2687f3(0x4f6)][_0x2687f3(0x4f3)](this[_0x2687f3(0x624)]), this[_0x2687f3(0x4f6)][_0x2687f3(0x4fb)]();
                }
                _0x218b83['Resource'][_0x2687f3(0xcdb)](_0x31f2df, _0x31f2df);
            }
        }
        [_0x5659be(0x311)]() {
            var _0x1fc078 = _0x5659be;
            super['destroy']();
            var _0xe3a927 = this[_0x1fc078(0x4f9)][_0x1fc078(0x443)] + this[_0x1fc078(0x624)][_0x1fc078(0x8d1)] * 0x2;
            _0x218b83['Resource']['_addMemory'](-_0xe3a927, -_0xe3a927), this['_bufferState'][_0x1fc078(0x311)](), this[_0x1fc078(0x4f9)][_0x1fc078(0x311)](), this[_0x1fc078(0x624)][_0x1fc078(0x311)](), this[_0x1fc078(0xe53)][_0x1fc078(0x311)](), this[_0x1fc078(0xe49)] = null, this[_0x1fc078(0xe76)] = null, this[_0x1fc078(0xe4a)] = null, this[_0x1fc078(0xa67)] = null, this[_0x1fc078(0xeaf)] = null, this[_0x1fc078(0x4f6)] = null, this[_0x1fc078(0x4f9)] = null, this[_0x1fc078(0x624)] = null, this[_0x1fc078(0x3d3)] = null, this[_0x1fc078(0x4fa)] = null, this[_0x1fc078(0x624)] = null, this[_0x1fc078(0xe53)] = null, this[_0x1fc078(0xe54)] = null, this[_0x1fc078(0xe43)] = null, this[_0x1fc078(0xe46)] = null, this[_0x1fc078(0xe47)] = null, this[_0x1fc078(0xe35)] = null, this[_0x1fc078(0xe36)] = null, this[_0x1fc078(0xe37)] = null, this[_0x1fc078(0xe3a)] = null, this[_0x1fc078(0xe3e)] = null, this[_0x1fc078(0xe3f)] = null, this[_0x1fc078(0xe30)] = null, this[_0x1fc078(0xe31)] = null, this['startColorConstantMax'] = null, this[_0x1fc078(0xe5a)] = null, this[_0x1fc078(0xe90)] = null, this[_0x1fc078(0xe9b)] = null, this[_0x1fc078(0xe5b)] = null, this[_0x1fc078(0xea5)] = null;
        }
        [_0x5659be(0xeb7)](_0x59491d) {
            var _0x5b5911 = _0x5659be, _0x298f48 = _0x4c18c2[_0x5b5911(0xeb9)], _0x5c0eba = _0x4c18c2['_tempDirection'];
            if (this[_0x5b5911(0xe54)] && this[_0x5b5911(0xe54)]['enable']) {
                if (this['autoRandomSeed'])
                    this[_0x5b5911(0xe54)]['generatePositionAndDirection'](_0x298f48, _0x5c0eba);
                else
                    this[_0x5b5911(0xe54)][_0x5b5911(0xd5a)](_0x298f48, _0x5c0eba, this[_0x5b5911(0xe65)], this[_0x5b5911(0xe66)]);
            } else
                _0x298f48['x'] = _0x298f48['y'] = _0x298f48['z'] = 0x0, _0x5c0eba['x'] = _0x5c0eba['y'] = 0x0, _0x5c0eba['z'] = 0x1;
            return this[_0x5b5911(0xeba)](_0x298f48, _0x5c0eba, _0x59491d);
        }
        [_0x5659be(0xeba)](_0x414456, _0x44d055, _0x17a994) {
            var _0x49caa9 = _0x5659be;
            _0x3f70c5[_0x49caa9(0x1f2)](_0x44d055, _0x44d055);
            var _0x178013 = this[_0x49caa9(0xe4f)] + 0x1;
            if (_0x178013 >= this[_0x49caa9(0xe52)])
                _0x178013 = 0x0;
            if (_0x178013 === this[_0x49caa9(0xe50)])
                return ![];
            var _0xb03b0c = this[_0x49caa9(0x3d3)][_0x49caa9(0x3cc)];
            _0x279d69[_0x49caa9(0x31e)](this, this[_0x49caa9(0xe75)]);
            var _0x5b2067 = this['_currentTime'] - _0x17a994;
            if (_0x5b2067 >= _0x279d69['startLifeTime'])
                return !![];
            var _0x3f0af8, _0x5aebfa;
            this[_0x49caa9(0xdef)] == 0x0 && (_0x3f0af8 = _0xb03b0c[_0x49caa9(0x59e)], _0x5aebfa = _0xb03b0c[_0x49caa9(0x5a0)]);
            var _0x3ac662;
            switch (this[_0x49caa9(0xe6d)]) {
            case 0x0:
                _0x3ac662 = this[_0x49caa9(0xe7a)];
                break;
            case 0x2:
                this['autoRandomSeed'] ? _0x3ac662 = _0x218b83[_0x49caa9(0xe2a)][_0x49caa9(0x1fc)](this[_0x49caa9(0xe7b)], this['startSpeedConstantMax'], Math[_0x49caa9(0xd5d)]()) : (this[_0x49caa9(0xe65)][_0x49caa9(0xd66)] = this['_randomSeeds'][0x8], _0x3ac662 = _0x218b83[_0x49caa9(0xe2a)][_0x49caa9(0x1fc)](this[_0x49caa9(0xe7b)], this['startSpeedConstantMax'], this['_rand'][_0x49caa9(0xd5c)]()), this['_randomSeeds'][0x8] = this[_0x49caa9(0xe65)][_0x49caa9(0xd66)]);
                break;
            }
            var _0x34680d, _0x15f01a, _0x3194a6, _0x38274d, _0x22edf9, _0x127029, _0x1a4780, _0x44ba03 = this[_0x49caa9(0xe5a)] && this['_velocityOverLifetime'][_0x49caa9(0x650)];
            if (_0x44ba03) {
                var _0x5d16cc = this[_0x49caa9(0xe5a)][_0x49caa9(0xd7e)]['type'];
                _0x5d16cc === 0x2 || _0x5d16cc === 0x3 ? this[_0x49caa9(0xe2e)] ? (_0x34680d = Math['random'](), _0x15f01a = Math[_0x49caa9(0xd5d)](), _0x3194a6 = Math['random']()) : (this[_0x49caa9(0xe65)]['seed'] = this[_0x49caa9(0xe66)][0x9], _0x34680d = this[_0x49caa9(0xe65)][_0x49caa9(0xd5c)](), _0x15f01a = this[_0x49caa9(0xe65)][_0x49caa9(0xd5c)](), _0x3194a6 = this['_rand'][_0x49caa9(0xd5c)](), this[_0x49caa9(0xe66)][0x9] = this['_rand'][_0x49caa9(0xd66)]) : _0x44ba03 = ![];
            } else
                _0x44ba03 = ![];
            var _0x1c9fdc = this['_colorOverLifetime'] && this[_0x49caa9(0xe90)]['enable'];
            if (_0x1c9fdc) {
                var _0x42baa0 = this['_colorOverLifetime'][_0x49caa9(0x462)]['type'];
                _0x42baa0 === 0x3 ? this[_0x49caa9(0xe2e)] ? _0x38274d = Math[_0x49caa9(0xd5d)]() : (this[_0x49caa9(0xe65)][_0x49caa9(0xd66)] = this['_randomSeeds'][0xa], _0x38274d = this[_0x49caa9(0xe65)][_0x49caa9(0xd5c)](), this[_0x49caa9(0xe66)][0xa] = this[_0x49caa9(0xe65)]['seed']) : _0x1c9fdc = ![];
            } else
                _0x1c9fdc = ![];
            var _0x211947 = this[_0x49caa9(0xe9b)] && this[_0x49caa9(0xe9b)][_0x49caa9(0x650)];
            if (_0x211947) {
                var _0x51bc1c = this[_0x49caa9(0xe9b)][_0x49caa9(0x2b8)]['type'];
                _0x51bc1c === 0x3 ? this[_0x49caa9(0xe2e)] ? _0x22edf9 = Math[_0x49caa9(0xd5d)]() : (this['_rand'][_0x49caa9(0xd66)] = this[_0x49caa9(0xe66)][0xb], _0x22edf9 = this[_0x49caa9(0xe65)][_0x49caa9(0xd5c)](), this['_randomSeeds'][0xb] = this[_0x49caa9(0xe65)]['seed']) : _0x211947 = ![];
            } else
                _0x211947 = ![];
            var _0x207d88 = this[_0x49caa9(0xe5b)] && this['_rotationOverLifetime'][_0x49caa9(0x650)];
            if (_0x207d88) {
                var _0x23103d = this[_0x49caa9(0xe5b)]['angularVelocity']['type'];
                _0x23103d === 0x2 || _0x23103d === 0x3 ? this[_0x49caa9(0xe2e)] ? _0x127029 = Math[_0x49caa9(0xd5d)]() : (this[_0x49caa9(0xe65)][_0x49caa9(0xd66)] = this[_0x49caa9(0xe66)][0xc], _0x127029 = this[_0x49caa9(0xe65)][_0x49caa9(0xd5c)](), this[_0x49caa9(0xe66)][0xc] = this[_0x49caa9(0xe65)][_0x49caa9(0xd66)]) : _0x207d88 = ![];
            } else
                _0x207d88 = ![];
            var _0xb17bef = this[_0x49caa9(0xea5)] && this[_0x49caa9(0xea5)][_0x49caa9(0x650)];
            if (_0xb17bef) {
                var _0x595e85 = this[_0x49caa9(0xea5)][_0x49caa9(0xd76)][_0x49caa9(0x2ae)];
                _0x595e85 === 0x3 ? this['autoRandomSeed'] ? _0x1a4780 = Math[_0x49caa9(0xd5d)]() : (this[_0x49caa9(0xe65)][_0x49caa9(0xd66)] = this[_0x49caa9(0xe66)][0xf], _0x1a4780 = this['_rand'][_0x49caa9(0xd5c)](), this[_0x49caa9(0xe66)][0xf] = this['_rand'][_0x49caa9(0xd66)]) : _0xb17bef = ![];
            } else
                _0xb17bef = ![];
            var _0x46545b = this['_firstFreeElement'] * this[_0x49caa9(0xe4b)] * this[_0x49caa9(0x4de)], _0x4aea08 = _0x279d69['startUVInfo'][0x0], _0x46165b = _0x279d69[_0x49caa9(0xe48)][0x1], _0x241536 = _0x279d69[_0x49caa9(0xe48)][0x2], _0x49b992 = _0x279d69[_0x49caa9(0xe48)][0x3], _0x173e56, _0x1f468c, _0x14c9d0, _0x234012, _0x1f5d59, _0x44761a, _0x1be61e = this['_ownerRender'];
            if (_0x1be61e[_0x49caa9(0x6fc)] === 0x4) {
                var _0x276032 = _0x1be61e['mesh']['_vertexBuffer'];
                _0x173e56 = _0x276032[_0x49caa9(0x452)]();
                var _0x492b33 = _0x276032[_0x49caa9(0x449)];
                _0x14c9d0 = _0x492b33[_0x49caa9(0x4e7)](_0x13bc8a[_0x49caa9(0x609)])['_offset'] / 0x4;
                var _0x18a89d = _0x492b33[_0x49caa9(0x4e7)](_0x13bc8a[_0x49caa9(0x60c)]);
                _0x234012 = _0x18a89d ? _0x18a89d[_0x49caa9(0x4e3)] / 0x4 : -0x1;
                var _0x16204a = _0x492b33[_0x49caa9(0x4e7)](_0x13bc8a[_0x49caa9(0x60d)]);
                _0x1f5d59 = _0x16204a ? _0x16204a['_offset'] / 0x4 : -0x1, _0x1f468c = _0x492b33[_0x49caa9(0x4e4)] / 0x4, _0x44761a = 0x0;
            } else {
                this[_0x49caa9(0x4fa)][_0x46545b + 0x2] = _0x241536, this[_0x49caa9(0x4fa)][_0x46545b + 0x3] = _0x49b992 + _0x46165b;
                var _0x2c713d = _0x46545b + this['_floatCountPerVertex'];
                this[_0x49caa9(0x4fa)][_0x2c713d + 0x2] = _0x241536 + _0x4aea08, this[_0x49caa9(0x4fa)][_0x2c713d + 0x3] = _0x49b992 + _0x46165b;
                var _0x28ad65 = _0x2c713d + this['_floatCountPerVertex'];
                this[_0x49caa9(0x4fa)][_0x28ad65 + 0x2] = _0x241536 + _0x4aea08, this[_0x49caa9(0x4fa)][_0x28ad65 + 0x3] = _0x49b992;
                var _0x3adbf4 = _0x28ad65 + this[_0x49caa9(0xe4b)];
                this[_0x49caa9(0x4fa)][_0x3adbf4 + 0x2] = _0x241536, this['_vertices'][_0x3adbf4 + 0x3] = _0x49b992;
            }
            for (var _0x45a041 = _0x46545b, _0x2e6cd0 = _0x46545b + this[_0x49caa9(0xe4b)] * this[_0x49caa9(0x4de)]; _0x45a041 < _0x2e6cd0; _0x45a041 += this[_0x49caa9(0xe4b)]) {
                var _0x4b0003;
                if (_0x1be61e[_0x49caa9(0x6fc)] === 0x4) {
                    _0x4b0003 = _0x45a041;
                    var _0x55205e = _0x1f468c * _0x44761a++, _0x372d9f = _0x55205e + _0x14c9d0;
                    this['_vertices'][_0x4b0003++] = _0x173e56[_0x372d9f++], this['_vertices'][_0x4b0003++] = _0x173e56[_0x372d9f++], this['_vertices'][_0x4b0003++] = _0x173e56[_0x372d9f], _0x234012 === -0x1 ? (this[_0x49caa9(0x4fa)][_0x4b0003++] = 0x1, this[_0x49caa9(0x4fa)][_0x4b0003++] = 0x1, this[_0x49caa9(0x4fa)][_0x4b0003++] = 0x1, this[_0x49caa9(0x4fa)][_0x4b0003++] = 0x1) : (_0x372d9f = _0x55205e + _0x234012, this['_vertices'][_0x4b0003++] = _0x173e56[_0x372d9f++], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x173e56[_0x372d9f++], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x173e56[_0x372d9f++], this['_vertices'][_0x4b0003++] = _0x173e56[_0x372d9f]), _0x1f5d59 === -0x1 ? (this[_0x49caa9(0x4fa)][_0x4b0003++] = 0x0, this['_vertices'][_0x4b0003++] = 0x0) : (_0x372d9f = _0x55205e + _0x1f5d59, this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x241536 + _0x173e56[_0x372d9f++] * _0x4aea08, this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x49b992 + _0x173e56[_0x372d9f] * _0x46165b);
                } else
                    _0x4b0003 = _0x45a041 + 0x4;
                this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x414456['x'], this['_vertices'][_0x4b0003++] = _0x414456['y'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x414456['z'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x279d69[_0x49caa9(0xe16)], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x44d055['x'], this['_vertices'][_0x4b0003++] = _0x44d055['y'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x44d055['z'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x17a994, this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x279d69[_0x49caa9(0xa74)]['x'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x279d69[_0x49caa9(0xa74)]['y'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x279d69[_0x49caa9(0xa74)]['z'], this['_vertices'][_0x4b0003++] = _0x279d69[_0x49caa9(0xa74)]['w'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x279d69[_0x49caa9(0xe11)][0x0], this['_vertices'][_0x4b0003++] = _0x279d69[_0x49caa9(0xe11)][0x1], this['_vertices'][_0x4b0003++] = _0x279d69[_0x49caa9(0xe11)][0x2], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x279d69[_0x49caa9(0xe3c)][0x0], this['_vertices'][_0x4b0003++] = _0x279d69[_0x49caa9(0xe3c)][0x1], this['_vertices'][_0x4b0003++] = _0x279d69[_0x49caa9(0xe3c)][0x2], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x3ac662, _0x1c9fdc && (this['_vertices'][_0x4b0003 + 0x1] = _0x38274d), _0x211947 && (this[_0x49caa9(0x4fa)][_0x4b0003 + 0x2] = _0x22edf9), _0x207d88 && (this['_vertices'][_0x4b0003 + 0x3] = _0x127029), _0xb17bef && (this[_0x49caa9(0x4fa)][_0x4b0003 + 0x4] = _0x1a4780);
                _0x44ba03 && (this[_0x49caa9(0x4fa)][_0x4b0003 + 0x5] = _0x34680d, this['_vertices'][_0x4b0003 + 0x6] = _0x15f01a, this[_0x49caa9(0x4fa)][_0x4b0003 + 0x7] = _0x3194a6);
                switch (this[_0x49caa9(0xdef)]) {
                case 0x0:
                    _0x4b0003 += 0x8, this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x3f0af8['x'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x3f0af8['y'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x3f0af8['z'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x5aebfa['x'], this['_vertices'][_0x4b0003++] = _0x5aebfa['y'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x5aebfa['z'], this[_0x49caa9(0x4fa)][_0x4b0003++] = _0x5aebfa['w'];
                    break;
                case 0x1:
                    break;
                default:
                    throw new Error(_0x49caa9(0xebb));
                }
            }
            return this[_0x49caa9(0xe4f)] = _0x178013, !![];
        }
        [_0x5659be(0xebc)]() {
            var _0x475f4f = _0x5659be, _0x1ea930, _0x52a516 = this[_0x475f4f(0x4de)] * this[_0x475f4f(0xe4b)] * 0x4;
            this[_0x475f4f(0xe4e)] < this[_0x475f4f(0xe4f)] ? (_0x1ea930 = this['_firstNewElement'] * _0x52a516, this[_0x475f4f(0x4f9)][_0x475f4f(0x4fd)](this[_0x475f4f(0x4fa)]['buffer'], _0x1ea930, _0x1ea930, (this[_0x475f4f(0xe4f)] - this['_firstNewElement']) * _0x52a516)) : (_0x1ea930 = this[_0x475f4f(0xe4e)] * _0x52a516, this[_0x475f4f(0x4f9)][_0x475f4f(0x4fd)](this[_0x475f4f(0x4fa)][_0x475f4f(0x448)], _0x1ea930, _0x1ea930, (this['_bufferMaxParticles'] - this['_firstNewElement']) * _0x52a516), this[_0x475f4f(0xe4f)] > 0x0 && this['_vertexBuffer'][_0x475f4f(0x4fd)](this['_vertices'][_0x475f4f(0x448)], 0x0, 0x0, this[_0x475f4f(0xe4f)] * _0x52a516)), this[_0x475f4f(0xe4e)] = this[_0x475f4f(0xe4f)];
        }
        ['_getType']() {
            var _0x417950 = _0x5659be;
            return _0x4c18c2[_0x417950(0xa68)];
        }
        ['_prepareRender'](_0x358b18) {
            var _0x2a2025 = _0x5659be;
            if (this['_updateMask'] != _0x218b83[_0x2a2025(0x500)][_0x2a2025(0x4da)]) {
                this[_0x2a2025(0xe63)] = _0x218b83[_0x2a2025(0x500)][_0x2a2025(0x4da)], this['_updateEmission']();
                if (this['_firstNewElement'] != this['_firstFreeElement'])
                    this['addNewParticlesToVertexBuffer']();
                this[_0x2a2025(0xe51)]++;
            }
            if (this[_0x2a2025(0xe74)] != this[_0x2a2025(0xe4f)])
                return !![];
            else
                return ![];
        }
        ['_render'](_0x5133db) {
            var _0x432c7a = _0x5659be;
            this[_0x432c7a(0x4f6)][_0x432c7a(0x444)]();
            var _0x127bfa, _0x1b7399 = _0x218b83[_0x432c7a(0x2f3)][_0x432c7a(0x2f4)];
            this[_0x432c7a(0xe74)] < this[_0x432c7a(0xe4f)] ? (_0x127bfa = (this[_0x432c7a(0xe4f)] - this[_0x432c7a(0xe74)]) * this[_0x432c7a(0xe62)], _0x1b7399[_0x432c7a(0xaea)](_0x1b7399[_0x432c7a(0x507)], _0x127bfa, _0x1b7399[_0x432c7a(0x40b)], 0x2 * this[_0x432c7a(0xe74)] * this[_0x432c7a(0xe62)]), _0x218b83[_0x432c7a(0x500)][_0x432c7a(0x62a)] += _0x127bfa / 0x3, _0x218b83[_0x432c7a(0x500)][_0x432c7a(0x501)]++) : (_0x127bfa = (this[_0x432c7a(0xe52)] - this['_firstActiveElement']) * this[_0x432c7a(0xe62)], _0x1b7399[_0x432c7a(0xaea)](_0x1b7399[_0x432c7a(0x507)], _0x127bfa, _0x1b7399[_0x432c7a(0x40b)], 0x2 * this[_0x432c7a(0xe74)] * this[_0x432c7a(0xe62)]), _0x218b83[_0x432c7a(0x500)][_0x432c7a(0x62a)] += _0x127bfa / 0x3, _0x218b83[_0x432c7a(0x500)][_0x432c7a(0x501)]++, this['_firstFreeElement'] > 0x0 && (_0x127bfa = this['_firstFreeElement'] * this[_0x432c7a(0xe62)], _0x1b7399['drawElements'](_0x1b7399[_0x432c7a(0x507)], _0x127bfa, _0x1b7399[_0x432c7a(0x40b)], 0x0), _0x218b83[_0x432c7a(0x500)][_0x432c7a(0x62a)] += _0x127bfa / 0x3, _0x218b83[_0x432c7a(0x500)][_0x432c7a(0x501)]++));
        }
        [_0x5659be(0x3a8)]() {
            var _0x1d7d79 = _0x5659be;
            this[_0x1d7d79(0xe59)] = 0x0, this['_isEmitting'] = !![], this[_0x1d7d79(0xe56)] = !![], this[_0x1d7d79(0xe57)] = ![], this[_0x1d7d79(0xeb5)] = 0x0, this[_0x1d7d79(0xe78)] = 0x0;
            if (!this['autoRandomSeed']) {
                for (var _0x322a4e = 0x0, _0x207351 = this['_randomSeeds'][_0x1d7d79(0x1ff)]; _0x322a4e < _0x207351; _0x322a4e++)
                    this[_0x1d7d79(0xe66)][_0x322a4e] = this[_0x1d7d79(0xe72)][0x0] + _0x4c18c2[_0x1d7d79(0xebd)][_0x322a4e];
            }
            switch (this['startDelayType']) {
            case 0x0:
                this['_playStartDelay'] = this[_0x1d7d79(0xe6a)];
                break;
            case 0x1:
                this[_0x1d7d79(0xe2e)] ? this[_0x1d7d79(0xe58)] = _0x218b83[_0x1d7d79(0xe2a)]['lerp'](this[_0x1d7d79(0xe6b)], this[_0x1d7d79(0xe6c)], Math[_0x1d7d79(0xd5d)]()) : (this['_rand'][_0x1d7d79(0xd66)] = this[_0x1d7d79(0xe66)][0x2], this[_0x1d7d79(0xe58)] = _0x218b83[_0x1d7d79(0xe2a)][_0x1d7d79(0x1fc)](this[_0x1d7d79(0xe6b)], this[_0x1d7d79(0xe6c)], this[_0x1d7d79(0xe65)][_0x1d7d79(0xd5c)]()), this[_0x1d7d79(0xe66)][0x2] = this[_0x1d7d79(0xe65)][_0x1d7d79(0xd66)]);
                break;
            default:
                throw new Error('Utils3D:\x20startDelayType\x20is\x20invalid.');
            }
            this[_0x1d7d79(0xe77)] = this[_0x1d7d79(0xdf6)] + this[_0x1d7d79(0xe58)], this[_0x1d7d79(0xe64)] = _0x218b83[_0x1d7d79(0x500)]['loopCount'];
        }
        [_0x5659be(0xebe)]() {
            this['_isPaused'] = !![];
        }
        ['simulate'](_0x2ea78c, _0x1b3f4e = !![]) {
            var _0x246e21 = _0x5659be;
            this[_0x246e21(0xe4d)] = !![], _0x1b3f4e ? this[_0x246e21(0xebf)](_0x2ea78c) : (this[_0x246e21(0xe57)] = ![], this[_0x246e21(0xeb1)](_0x2ea78c)), this[_0x246e21(0xebe)]();
        }
        [_0x5659be(0xec0)]() {
            var _0x39b8c5 = _0x5659be;
            this[_0x39b8c5(0xe59)] = 0x0, this['_isEmitting'] = ![], this[_0x39b8c5(0xeb5)] = 0x0;
        }
        [_0x5659be(0x1f0)](_0xb96a84) {
            var _0x4521ea = _0x5659be, _0x5b611c = _0xb96a84;
            _0x5b611c[_0x4521ea(0xdec)] = this['_useCustomBounds'], this[_0x4521ea(0xeaf)] && this[_0x4521ea(0xeaf)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xeaf)]), _0x5b611c[_0x4521ea(0x320)] = this[_0x4521ea(0x320)], _0x5b611c[_0x4521ea(0xe67)] = this[_0x4521ea(0xe67)], _0x5b611c[_0x4521ea(0xe68)] = this[_0x4521ea(0xe68)], _0x5b611c[_0x4521ea(0xe69)] = this['startDelayType'], _0x5b611c[_0x4521ea(0xe6a)] = this[_0x4521ea(0xe6a)], _0x5b611c[_0x4521ea(0xe6b)] = this[_0x4521ea(0xe6b)], _0x5b611c['startDelayMax'] = this[_0x4521ea(0xe6c)], _0x5b611c[_0x4521ea(0xe61)] = this['_maxStartLifetime'], _0x5b611c[_0x4521ea(0xe42)] = this[_0x4521ea(0xe42)], _0x5b611c[_0x4521ea(0xe88)] = this[_0x4521ea(0xe88)], this['startLifeTimeGradient'][_0x4521ea(0x1f0)](_0x5b611c['startLifeTimeGradient']), _0x5b611c[_0x4521ea(0xe44)] = this[_0x4521ea(0xe44)], _0x5b611c['startLifetimeConstantMax'] = this[_0x4521ea(0xe45)], this[_0x4521ea(0xe46)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe46)]), this[_0x4521ea(0xe47)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe47)]), _0x5b611c[_0x4521ea(0xe6d)] = this[_0x4521ea(0xe6d)], _0x5b611c[_0x4521ea(0xe7a)] = this[_0x4521ea(0xe7a)], _0x5b611c[_0x4521ea(0xe7b)] = this[_0x4521ea(0xe7b)], _0x5b611c[_0x4521ea(0xe7c)] = this['startSpeedConstantMax'], _0x5b611c[_0x4521ea(0xe34)] = this[_0x4521ea(0xe34)], _0x5b611c[_0x4521ea(0xe6e)] = this[_0x4521ea(0xe6e)], _0x5b611c[_0x4521ea(0xe6f)] = this[_0x4521ea(0xe6f)], this[_0x4521ea(0xe35)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe35)]), _0x5b611c[_0x4521ea(0xe38)] = this['startSizeConstantMin'], _0x5b611c['startSizeConstantMax'] = this[_0x4521ea(0xe39)], this[_0x4521ea(0xe36)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe36)]), this['startSizeConstantMaxSeparate'][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe37)]), _0x5b611c[_0x4521ea(0xdf2)] = this['threeDStartRotation'], _0x5b611c[_0x4521ea(0xe7d)] = this[_0x4521ea(0xe7d)], _0x5b611c[_0x4521ea(0xe3d)] = this[_0x4521ea(0xe3d)], this[_0x4521ea(0xe3a)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe3a)]), _0x5b611c['startRotationConstantMin'] = this['startRotationConstantMin'], _0x5b611c[_0x4521ea(0xe41)] = this[_0x4521ea(0xe41)], this[_0x4521ea(0xe3e)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe3e)]), this['startRotationConstantMaxSeparate'][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe3f)]), _0x5b611c['randomizeRotationDirection'] = this[_0x4521ea(0xe3b)], _0x5b611c[_0x4521ea(0xe2f)] = this[_0x4521ea(0xe2f)], this[_0x4521ea(0xe30)][_0x4521ea(0x1f0)](_0x5b611c[_0x4521ea(0xe30)]), this['startColorConstantMin']['cloneTo'](_0x5b611c[_0x4521ea(0xe31)]), this[_0x4521ea(0xe32)][_0x4521ea(0x1f0)](_0x5b611c['startColorConstantMax']), _0x5b611c[_0x4521ea(0xdf0)] = this[_0x4521ea(0xdf0)], _0x5b611c['simulationSpace'] = this[_0x4521ea(0xdef)], _0x5b611c[_0x4521ea(0xdf4)] = this[_0x4521ea(0xdf4)], _0x5b611c[_0x4521ea(0xe71)] = this[_0x4521ea(0xe71)], _0x5b611c[_0x4521ea(0xe2e)] = this['autoRandomSeed'], _0x5b611c['randomSeed'][0x0] = this[_0x4521ea(0xe72)][0x0], _0x5b611c[_0x4521ea(0xe7e)] = this[_0x4521ea(0xe7e)], this[_0x4521ea(0xe53)] && (_0x5b611c['_emission'] = this['_emission'][_0x4521ea(0x1f4)]()), this[_0x4521ea(0xe82)] && (_0x5b611c[_0x4521ea(0xe82)] = this[_0x4521ea(0xe82)][_0x4521ea(0x1f4)]()), this[_0x4521ea(0xe89)] && (_0x5b611c[_0x4521ea(0xe89)] = this[_0x4521ea(0xe89)][_0x4521ea(0x1f4)]()), this[_0x4521ea(0xe33)] && (_0x5b611c[_0x4521ea(0xe33)] = this[_0x4521ea(0xe33)][_0x4521ea(0x1f4)]()), this[_0x4521ea(0xe94)] && (_0x5b611c[_0x4521ea(0xe94)] = this['sizeOverLifetime'][_0x4521ea(0x1f4)]()), this[_0x4521ea(0xec1)] && (_0x5b611c[_0x4521ea(0xec1)] = this['rotationOverLifetime']['clone']()), this['textureSheetAnimation'] && (_0x5b611c[_0x4521ea(0xea4)] = this[_0x4521ea(0xea4)][_0x4521ea(0x1f4)]()), _0x5b611c['isPerformanceMode'] = this['isPerformanceMode'], _0x5b611c[_0x4521ea(0xe55)] = this[_0x4521ea(0xe55)], _0x5b611c[_0x4521ea(0xe56)] = this[_0x4521ea(0xe56)], _0x5b611c[_0x4521ea(0xe57)] = this['_isPaused'], _0x5b611c['_playStartDelay'] = this[_0x4521ea(0xe58)], _0x5b611c[_0x4521ea(0xe77)] = this[_0x4521ea(0xe77)], _0x5b611c['_emissionTime'] = this[_0x4521ea(0xeb5)], _0x5b611c['_totalDelayTime'] = this[_0x4521ea(0xe78)], _0x5b611c[_0x4521ea(0xe59)] = this[_0x4521ea(0xe59)];
        }
        [_0x5659be(0x1f4)]() {
            var _0x52081f = _0x5659be, _0x140d6c = new _0x4c18c2(null);
            return this[_0x52081f(0x1f0)](_0x140d6c), _0x140d6c;
        }
    }
    _0x4c18c2[_0x5659be(0xebd)] = new Uint32Array([
        0x23571a3e,
        0xc34f56fe,
        0x13371337,
        0x12460f3b,
        0x6aed452e,
        0xdec4aea1,
        0x96aa4de3,
        0x8d2c8431,
        0xf3857f6f,
        0xe0fbd834,
        0x13740583,
        0x591bc05c,
        0x40eb95e4,
        0xbc524e5f,
        0xaf502044,
        0xa614b381,
        0x1034e524,
        0xfc524e5f
    ]), _0x4c18c2[_0x5659be(0xec2)] = 1.42 * 0.5, _0x4c18c2['g'] = 9.8, _0x4c18c2[_0x5659be(0xeb0)] = 0x1 / 0x3, _0x4c18c2[_0x5659be(0x59b)] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0x3d6)] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0x866)] = new _0x3f70c5(), _0x4c18c2['_tempVector33'] = new _0x3f70c5(), _0x4c18c2['_tempVector34'] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0x867)] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0x847)] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0x848)] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0xeb9)] = new _0x3f70c5(), _0x4c18c2[_0x5659be(0xec3)] = new _0x3f70c5(), _0x4c18c2['_type'] = _0x319422[_0x5659be(0xa60)]++;
    class _0x4e36f1 extends _0x200920 {
        constructor() {
            var _0x1b3b27 = _0x5659be;
            super(null), this[_0x1b3b27(0x5e6)] = new _0x32c6b3(this), this['_particleSystem'] = new _0x4c18c2(this);
            var _0x5c1459 = this['_render'][_0x1b3b27(0x600)], _0x4e6692 = _0x5c1459[0x0] = new _0x5551c8();
            _0x4e6692[_0x1b3b27(0xa9e)](this[_0x1b3b27(0x3ca)]), _0x4e6692[_0x1b3b27(0x506)] = this[_0x1b3b27(0x5e6)], _0x4e6692[_0x1b3b27(0xaba)](this['_particleSystem']), _0x4e6692[_0x1b3b27(0x8d6)] = _0x423dc4[_0x1b3b27(0xb3a)];
        }
        static [_0x5659be(0x229)]() {
            var _0x2690e9 = _0x5659be;
            _0x17a23d[_0x2690e9(0xde7)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xec4)), _0x17a23d[_0x2690e9(0xde8)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xec5)), _0x17a23d[_0x2690e9(0xde5)] = _0x84b6d6['getDefineByName'](_0x2690e9(0xec6)), _0x17a23d[_0x2690e9(0xde9)] = _0x84b6d6['getDefineByName'](_0x2690e9(0xec7)), _0x17a23d[_0x2690e9(0xe92)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xec8)), _0x17a23d['SHADERDEFINE_RANDOMCOLOROVERLIFETIME'] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xec9)), _0x17a23d[_0x2690e9(0xe8a)] = _0x84b6d6[_0x2690e9(0x510)]('VELOCITYOVERLIFETIMECONSTANT'), _0x17a23d['SHADERDEFINE_VELOCITYOVERLIFETIMECURVE'] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xeca)), _0x17a23d[_0x2690e9(0xe8c)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xecb)), _0x17a23d[_0x2690e9(0xe8d)] = _0x84b6d6['getDefineByName'](_0x2690e9(0xecc)), _0x17a23d[_0x2690e9(0xea6)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xecd)), _0x17a23d[_0x2690e9(0xea7)] = _0x84b6d6['getDefineByName']('TEXTURESHEETANIMATIONRANDOMCURVE'), _0x17a23d['SHADERDEFINE_ROTATIONOVERLIFETIME'] = _0x84b6d6['getDefineByName'](_0x2690e9(0xece)), _0x17a23d[_0x2690e9(0xe9c)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xecf)), _0x17a23d[_0x2690e9(0xe9e)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed0)), _0x17a23d[_0x2690e9(0xe9f)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed1)), _0x17a23d[_0x2690e9(0xea0)] = _0x84b6d6['getDefineByName'](_0x2690e9(0xed2)), _0x17a23d[_0x2690e9(0xea1)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed3)), _0x17a23d[_0x2690e9(0xe96)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed4)), _0x17a23d['SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE'] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed5)), _0x17a23d[_0x2690e9(0xe98)] = _0x84b6d6['getDefineByName']('SIZEOVERLIFETIMERANDOMCURVES'), _0x17a23d[_0x2690e9(0xe97)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed6)), _0x17a23d[_0x2690e9(0xde6)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed7)), _0x17a23d[_0x2690e9(0xe83)] = _0x84b6d6[_0x2690e9(0x510)](_0x2690e9(0xed8));
        }
        get [_0x5659be(0xdea)]() {
            var _0x3716d6 = _0x5659be;
            return this[_0x3716d6(0xed9)];
        }
        get [_0x5659be(0xead)]() {
            return this['_render'];
        }
        ['_parseModule'](_0x244cd2, _0x1e568a) {
            var _0xd4f5c5 = _0x5659be;
            for (var _0x33e1d1 in _0x1e568a) {
                switch (_0x33e1d1) {
                case _0xd4f5c5(0xeda):
                    var _0x209611 = _0x1e568a[_0xd4f5c5(0xeda)];
                    for (var _0x24457d in _0x209611)
                        _0x244cd2[_0x24457d] = _0x209611[_0x24457d];
                    break;
                case 'vector2s':
                    var _0x54fb47 = _0x1e568a[_0xd4f5c5(0xedb)];
                    for (var _0x24457d in _0x54fb47) {
                        var _0x254f8f = _0x244cd2[_0x24457d], _0x39a4e0 = _0x54fb47[_0x24457d];
                        _0x254f8f[_0xd4f5c5(0x1fa)](_0x39a4e0[0x0], _0x39a4e0[0x1]), _0x244cd2[_0x24457d] = _0x254f8f;
                    }
                    break;
                case 'vector3s':
                    var _0x2b8480 = _0x1e568a[_0xd4f5c5(0xedc)];
                    for (var _0x24457d in _0x2b8480) {
                        var _0x37d286 = _0x244cd2[_0x24457d], _0x2b29f8 = _0x2b8480[_0x24457d];
                        _0x37d286['setValue'](_0x2b29f8[0x0], _0x2b29f8[0x1], _0x2b29f8[0x2]), _0x244cd2[_0x24457d] = _0x37d286;
                    }
                    break;
                case _0xd4f5c5(0xedd):
                    var _0x9b0658 = _0x1e568a[_0xd4f5c5(0xedd)];
                    for (var _0x24457d in _0x9b0658) {
                        var _0x4b3507 = _0x244cd2[_0x24457d], _0x2a1e86 = _0x9b0658[_0x24457d];
                        _0x4b3507[_0xd4f5c5(0x1fa)](_0x2a1e86[0x0], _0x2a1e86[0x1], _0x2a1e86[0x2], _0x2a1e86[0x3]), _0x244cd2[_0x24457d] = _0x4b3507;
                    }
                    break;
                case _0xd4f5c5(0xede):
                    var _0x3d8686 = _0x1e568a[_0xd4f5c5(0xede)];
                    for (var _0x24457d in _0x3d8686) {
                        var _0x5a29b6 = _0x244cd2[_0x24457d], _0x5ae17 = _0x1e568a[_0x24457d];
                        for (var _0x381b13 = 0x0, _0x3ff0b7 = _0x5ae17[_0xd4f5c5(0x1ff)]; _0x381b13 < _0x3ff0b7; _0x381b13++) {
                            var _0x40ea9d = _0x5ae17[_0x381b13];
                            _0x5a29b6[_0xd4f5c5(0x201)](_0x40ea9d[_0xd4f5c5(0xedf)], _0x40ea9d[_0xd4f5c5(0x26b)]);
                        }
                        _0x244cd2[_0x24457d] = _0x5a29b6;
                    }
                    break;
                case 'resources':
                    var _0x19f255 = _0x1e568a[_0xd4f5c5(0xee0)];
                    for (var _0x24457d in _0x19f255)
                        _0x244cd2[_0x24457d] = _0x218b83[_0xd4f5c5(0x3b1)]['getRes'](_0x19f255[_0x24457d]);
                    break;
                case _0xd4f5c5(0xee1):
                    var _0x33cb9b = _0x1e568a[_0xd4f5c5(0xee1)];
                    for (var _0x381b13 = 0x0, _0x3ff0b7 = _0x33cb9b[_0xd4f5c5(0x1ff)]; _0x381b13 < _0x3ff0b7; _0x381b13++) {
                        var _0x495455 = _0x33cb9b[_0x381b13];
                        _0x244cd2[_0xd4f5c5(0xe27)](new _0x29e0b1(_0x495455[_0xd4f5c5(0x268)], _0x495455[_0xd4f5c5(0x204)], _0x495455['max']));
                    }
                    break;
                case 'randomSeed':
                    _0x244cd2[_0xd4f5c5(0xe72)][0x0] = _0x1e568a[_0xd4f5c5(0xe72)];
                    break;
                case _0xd4f5c5(0xd64):
                case _0xd4f5c5(0x2ae):
                case _0xd4f5c5(0x462):
                case 'size':
                case _0xd4f5c5(0xd76):
                case _0xd4f5c5(0xd78):
                case _0xd4f5c5(0xd51):
                case _0xd4f5c5(0xd7e):
                    break;
                default:
                    throw _0xd4f5c5(0xee2);
                }
            }
        }
        ['_parse'](_0xf057b8, _0x219dee) {
            var _0x43829b = _0x5659be;
            super[_0x43829b(0x318)](_0xf057b8, _0x219dee);
            if (_0xf057b8[_0x43829b(0xee3)]) {
                var _0x2c3700 = this['particleSystem'], _0x506bf6 = this[_0x43829b(0xead)];
                this['_parseModule'](_0x506bf6, _0xf057b8['renderer']), this[_0x43829b(0xee4)](_0x2c3700, _0xf057b8[_0x43829b(0xee3)]), this[_0x43829b(0xee4)](_0x2c3700['emission'], _0xf057b8[_0x43829b(0xe7f)]);
                var _0x1fd58b = _0xf057b8[_0x43829b(0xe82)];
                if (_0x1fd58b) {
                    var _0xff58d7;
                    switch (_0x1fd58b[_0x43829b(0xd64)]) {
                    case 0x0:
                        _0xff58d7 = new _0x30fb44();
                        break;
                    case 0x1:
                        _0xff58d7 = new _0x4d0421();
                        break;
                    case 0x2:
                        _0xff58d7 = new _0x4dcb49();
                        break;
                    case 0x3:
                        _0xff58d7 = new _0x31cb6d();
                        break;
                    case 0x7:
                        _0xff58d7 = new _0x500622();
                        break;
                    default:
                        throw _0x43829b(0xee5);
                    }
                    this['_parseModule'](_0xff58d7, _0x1fd58b), _0x2c3700['shape'] = _0xff58d7;
                }
                var _0x66a716 = _0xf057b8[_0x43829b(0xe89)];
                if (_0x66a716) {
                    var _0x347820 = _0x66a716[_0x43829b(0xd7e)], _0xb665ee;
                    switch (_0x347820[_0x43829b(0x2ae)]) {
                    case 0x0:
                        var _0x3c5416 = _0x347820['constant'];
                        _0xb665ee = _0x154d77[_0x43829b(0xd11)](_0x3c5416 ? new _0x3f70c5(_0x3c5416[0x0], _0x3c5416[0x1], _0x3c5416[0x2]) : new _0x3f70c5(0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0xb665ee = _0x154d77['createByGradient'](this['_initParticleVelocity'](_0x347820[_0x43829b(0xd38)]), this[_0x43829b(0xee6)](_0x347820[_0x43829b(0xd39)]), this[_0x43829b(0xee6)](_0x347820[_0x43829b(0xd3a)]));
                        break;
                    case 0x2:
                        var _0x182cd6 = _0x347820[_0x43829b(0xd1d)], _0x3cd372 = _0x347820[_0x43829b(0xd17)];
                        _0xb665ee = _0x154d77['createByRandomTwoConstant'](_0x182cd6 ? new _0x3f70c5(_0x182cd6[0x0], _0x182cd6[0x1], _0x182cd6[0x2]) : new _0x3f70c5(0x0, 0x0, 0x0), _0x3cd372 ? new _0x3f70c5(_0x3cd372[0x0], _0x3cd372[0x1], _0x3cd372[0x2]) : new _0x3f70c5(0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0xb665ee = _0x154d77['createByRandomTwoGradient'](this[_0x43829b(0xee6)](_0x347820[_0x43829b(0xd4e)]), this[_0x43829b(0xee6)](_0x347820[_0x43829b(0xd3e)]), this['_initParticleVelocity'](_0x347820[_0x43829b(0xd4b)]), this['_initParticleVelocity'](_0x347820[_0x43829b(0xd4f)]), this[_0x43829b(0xee6)](_0x347820['gradientZMin']), this['_initParticleVelocity'](_0x347820[_0x43829b(0xd4c)]));
                        break;
                    }
                    var _0x4d77fd = new _0x1a4499(_0xb665ee);
                    this['_parseModule'](_0x4d77fd, _0x66a716), _0x2c3700[_0x43829b(0xe89)] = _0x4d77fd;
                }
                var _0x3b6256 = _0xf057b8[_0x43829b(0xe33)];
                if (_0x3b6256) {
                    var _0x387ce9 = _0x3b6256[_0x43829b(0x462)], _0x5a846b;
                    switch (_0x387ce9['type']) {
                    case 0x0:
                        var _0x8d4e9a = _0x387ce9[_0x43829b(0xd15)];
                        _0x5a846b = _0x264d78[_0x43829b(0xd11)](_0x8d4e9a ? new _0x8fb80(_0x8d4e9a[0x0], _0x8d4e9a[0x1], _0x8d4e9a[0x2], _0x8d4e9a[0x3]) : new _0x8fb80(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x5a846b = _0x264d78[_0x43829b(0xd1c)](this[_0x43829b(0xee7)](_0x387ce9[_0x43829b(0xd18)]));
                        break;
                    case 0x2:
                        var _0x2aed91 = _0x387ce9[_0x43829b(0xd1d)], _0x24bec9 = _0x387ce9[_0x43829b(0xd17)];
                        _0x5a846b = _0x264d78[_0x43829b(0xd13)](_0x2aed91 ? new _0x8fb80(_0x2aed91[0x0], _0x2aed91[0x1], _0x2aed91[0x2], _0x2aed91[0x3]) : new _0x8fb80(0x0, 0x0, 0x0, 0x0), _0x2aed91 ? new _0x8fb80(_0x24bec9[0x0], _0x24bec9[0x1], _0x24bec9[0x2], _0x24bec9[0x3]) : new _0x8fb80(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x5a846b = _0x264d78[_0x43829b(0xd14)](this['_initParticleColor'](_0x387ce9[_0x43829b(0xd19)]), this[_0x43829b(0xee7)](_0x387ce9[_0x43829b(0xd1e)]));
                        break;
                    }
                    var _0x1dd506 = new _0x9eae20(_0x5a846b);
                    this[_0x43829b(0xee4)](_0x1dd506, _0x3b6256), _0x2c3700[_0x43829b(0xe33)] = _0x1dd506;
                }
                var _0x5db859 = _0xf057b8[_0x43829b(0xe94)];
                if (_0x5db859) {
                    var _0x5e3e4a = _0x5db859[_0x43829b(0x2b8)], _0x55e87d;
                    switch (_0x5e3e4a[_0x43829b(0x2ae)]) {
                    case 0x0:
                        _0x5e3e4a[_0x43829b(0xd36)] ? _0x55e87d = _0x1ebe51[_0x43829b(0xd30)](this[_0x43829b(0xee8)](_0x5e3e4a[_0x43829b(0xd38)]), this['_initParticleSize'](_0x5e3e4a['gradientY']), this[_0x43829b(0xee8)](_0x5e3e4a[_0x43829b(0xd3a)])) : _0x55e87d = _0x1ebe51[_0x43829b(0xd1c)](this[_0x43829b(0xee8)](_0x5e3e4a['gradient']));
                        break;
                    case 0x1:
                        if (_0x5e3e4a[_0x43829b(0xd36)]) {
                            var _0x229fd2 = _0x5e3e4a[_0x43829b(0xd3c)], _0x44a881 = _0x5e3e4a['constantMaxSeparate'];
                            _0x55e87d = _0x1ebe51[_0x43829b(0xd32)](_0x229fd2 ? new _0x3f70c5(_0x229fd2[0x0], _0x229fd2[0x1], _0x229fd2[0x2]) : new _0x3f70c5(0x0, 0x0, 0x0), _0x44a881 ? new _0x3f70c5(_0x44a881[0x0], _0x44a881[0x1], _0x44a881[0x2]) : new _0x3f70c5(0x0, 0x0, 0x0));
                        } else
                            _0x55e87d = _0x1ebe51['createByRandomTwoConstant'](_0x5e3e4a[_0x43829b(0xd1d)] || 0x0, _0x5e3e4a[_0x43829b(0xd17)] || 0x0);
                        break;
                    case 0x2:
                        _0x5e3e4a[_0x43829b(0xd36)] ? _0x55e87d = _0x1ebe51[_0x43829b(0xd4a)](this[_0x43829b(0xee8)](_0x5e3e4a['gradientXMin']), this[_0x43829b(0xee8)](_0x5e3e4a[_0x43829b(0xd4b)]), this[_0x43829b(0xee8)](_0x5e3e4a[_0x43829b(0xd3f)]), this[_0x43829b(0xee8)](_0x5e3e4a[_0x43829b(0xd3e)]), this[_0x43829b(0xee8)](_0x5e3e4a['gradientYMax']), this['_initParticleSize'](_0x5e3e4a[_0x43829b(0xd4c)])) : _0x55e87d = _0x1ebe51[_0x43829b(0xd14)](this[_0x43829b(0xee8)](_0x5e3e4a[_0x43829b(0xd19)]), this[_0x43829b(0xee8)](_0x5e3e4a['gradientMax']));
                        break;
                    }
                    var _0x4dc534 = new _0x41af45(_0x55e87d);
                    this[_0x43829b(0xee4)](_0x4dc534, _0x5db859), _0x2c3700['sizeOverLifetime'] = _0x4dc534;
                }
                var _0x57d634 = _0xf057b8['rotationOverLifetime'];
                if (_0x57d634) {
                    var _0xe0ab1c = _0x57d634[_0x43829b(0xd51)], _0x21f5d3;
                    switch (_0xe0ab1c[_0x43829b(0x2ae)]) {
                    case 0x0:
                        if (_0xe0ab1c[_0x43829b(0xd36)]) {
                            var _0x355d3d = _0xe0ab1c[_0x43829b(0xd37)];
                            _0x21f5d3 = _0x4ebad0[_0x43829b(0xd2f)](_0x355d3d ? new _0x3f70c5(_0x355d3d[0x0], _0x355d3d[0x1], _0x355d3d[0x2]) : new _0x3f70c5(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x21f5d3 = _0x4ebad0['createByConstant'](_0xe0ab1c[_0x43829b(0xd15)] || Math['PI'] / 0x4);
                        break;
                    case 0x1:
                        _0xe0ab1c[_0x43829b(0xd36)] ? _0x21f5d3 = _0x4ebad0[_0x43829b(0xd30)](this[_0x43829b(0xee9)](_0xe0ab1c['gradientX']), this['_initParticleRotation'](_0xe0ab1c[_0x43829b(0xd39)]), this['_initParticleRotation'](_0xe0ab1c[_0x43829b(0xd3a)])) : _0x21f5d3 = _0x4ebad0['createByGradient'](this[_0x43829b(0xee9)](_0xe0ab1c['gradient']));
                        break;
                    case 0x2:
                        if (_0xe0ab1c[_0x43829b(0xd36)]) {
                            var _0x368546 = _0xe0ab1c[_0x43829b(0xd3c)], _0x4fcba9 = _0xe0ab1c[_0x43829b(0xd3d)];
                            _0x21f5d3 = _0x4ebad0[_0x43829b(0xd32)](_0x368546 ? new _0x3f70c5(_0x368546[0x0], _0x368546[0x1], _0x368546[0x2]) : new _0x3f70c5(0x0, 0x0, 0x0), _0x4fcba9 ? new _0x3f70c5(_0x4fcba9[0x0], _0x4fcba9[0x1], _0x4fcba9[0x2]) : new _0x3f70c5(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x21f5d3 = _0x4ebad0['createByRandomTwoConstant'](_0xe0ab1c[_0x43829b(0xd1d)] || 0x0, _0xe0ab1c['constantMax'] || Math['PI'] / 0x4);
                        break;
                    case 0x3:
                        if (_0xe0ab1c[_0x43829b(0xd36)]);
                        else
                            _0x21f5d3 = _0x4ebad0[_0x43829b(0xd14)](this[_0x43829b(0xee9)](_0xe0ab1c[_0x43829b(0xd19)]), this[_0x43829b(0xee9)](_0xe0ab1c[_0x43829b(0xd1e)]));
                        break;
                    }
                    var _0x2df80a = new _0x2d0604(_0x21f5d3);
                    this[_0x43829b(0xee4)](_0x2df80a, _0x57d634), _0x2c3700[_0x43829b(0xec1)] = _0x2df80a;
                }
                var _0x18225f = _0xf057b8[_0x43829b(0xea4)];
                if (_0x18225f) {
                    var _0x11136b = _0x18225f[_0x43829b(0xd76)], _0x49b98b;
                    switch (_0x11136b['type']) {
                    case 0x0:
                        _0x49b98b = _0x169ba5[_0x43829b(0xd11)](_0x11136b[_0x43829b(0xd15)]);
                        break;
                    case 0x1:
                        _0x49b98b = _0x169ba5['createByOverTime'](this['_initParticleFrame'](_0x11136b[_0x43829b(0xeea)]));
                        break;
                    case 0x2:
                        _0x49b98b = _0x169ba5[_0x43829b(0xd13)](_0x11136b[_0x43829b(0xd1d)], _0x11136b[_0x43829b(0xd17)]);
                        break;
                    case 0x3:
                        _0x49b98b = _0x169ba5[_0x43829b(0xd7a)](this['_initParticleFrame'](_0x11136b['overTimeMin']), this[_0x43829b(0xeeb)](_0x11136b[_0x43829b(0xeec)]));
                        break;
                    }
                    var _0x44ccfd = _0x18225f['startFrame'], _0x55534e;
                    switch (_0x44ccfd[_0x43829b(0x2ae)]) {
                    case 0x0:
                        _0x55534e = _0x24182e[_0x43829b(0xd11)](_0x44ccfd[_0x43829b(0xd15)]);
                        break;
                    case 0x1:
                        _0x55534e = _0x24182e[_0x43829b(0xd13)](_0x44ccfd[_0x43829b(0xd1d)], _0x44ccfd[_0x43829b(0xd17)]);
                        break;
                    }
                    var _0x10ac93 = new _0x187c64(_0x49b98b, _0x55534e);
                    this[_0x43829b(0xee4)](_0x10ac93, _0x18225f), _0x2c3700['textureSheetAnimation'] = _0x10ac93;
                }
            } else
                this['_parseOld'](_0xf057b8);
        }
        [_0x5659be(0xeed)](_0x7c62c0) {
            var _0xd6cbe5 = _0x5659be;
            super['_activeHierarchy'](_0x7c62c0), this[_0xd6cbe5(0xdea)]['playOnAwake'] && this[_0xd6cbe5(0xdea)][_0xd6cbe5(0x3a8)]();
        }
        ['_inActiveHierarchy'](_0x1fdd3a) {
            var _0xba16df = _0x5659be;
            super['_inActiveHierarchy'](_0x1fdd3a), this[_0xba16df(0xdea)][_0xba16df(0xdee)] && this[_0xba16df(0xdea)][_0xba16df(0xeee)](0x0, !![]);
        }
        [_0x5659be(0x339)](_0x46acdc, _0x25e453, _0x40656e) {
            var _0x26631e = _0x5659be, _0x4490bb = _0x46acdc, _0x5b8aba = _0x4490bb[_0x26631e(0xed9)];
            this[_0x26631e(0xed9)][_0x26631e(0x1f0)](_0x5b8aba);
            var _0x36232a = _0x4490bb[_0x26631e(0x5e6)], _0x3ad1f3 = this['_render'];
            _0x36232a[_0x26631e(0xb18)] = _0x3ad1f3[_0x26631e(0xb18)], _0x36232a[_0x26631e(0x650)] = _0x3ad1f3[_0x26631e(0x650)], _0x36232a[_0x26631e(0x6fc)] = _0x3ad1f3['renderMode'], _0x36232a[_0x26631e(0x8d7)] = _0x3ad1f3['mesh'], _0x36232a[_0x26631e(0xde1)] = _0x3ad1f3[_0x26631e(0xde1)], _0x36232a[_0x26631e(0xde2)] = _0x3ad1f3['stretchedBillboardSpeedScale'], _0x36232a[_0x26631e(0xde3)] = _0x3ad1f3[_0x26631e(0xde3)], _0x36232a[_0x26631e(0xb11)] = _0x3ad1f3[_0x26631e(0xb11)], super[_0x26631e(0x339)](_0x46acdc, _0x25e453, _0x40656e);
        }
        [_0x5659be(0x311)](_0x4bf4ff = !![]) {
            var _0x10e941 = _0x5659be;
            if (this[_0x10e941(0x5cf)])
                return;
            super['destroy'](_0x4bf4ff), this[_0x10e941(0xed9)][_0x10e941(0x311)](), this[_0x10e941(0xed9)] = null;
        }
        ['_create']() {
            return new _0x4e36f1();
        }
        [_0x5659be(0xeef)](_0x17d78d) {
            var _0x3f9d1d = _0x5659be;
            const _0x1c876f = Math['PI'] / 0xb4;
            var _0x4f6ed1, _0x35e1bf, _0x14fd94 = this[_0x3f9d1d(0xead)], _0x4996a1, _0x194480 = _0x17d78d[_0x3f9d1d(0x8d6)];
            _0x194480 && (_0x4996a1 = _0x218b83[_0x3f9d1d(0x3b1)]['getRes'](_0x194480[_0x3f9d1d(0x691)])), _0x14fd94[_0x3f9d1d(0xaf0)] = _0x4996a1;
            var _0x420a37 = _0x17d78d['meshPath'];
            _0x420a37 && (_0x14fd94[_0x3f9d1d(0x8d7)] = _0x218b83[_0x3f9d1d(0x3b1)][_0x3f9d1d(0x692)](_0x420a37)), _0x14fd94['renderMode'] = _0x17d78d[_0x3f9d1d(0x6fc)], _0x14fd94['stretchedBillboardCameraSpeedScale'] = _0x17d78d['stretchedBillboardCameraSpeedScale'], _0x14fd94[_0x3f9d1d(0xde2)] = _0x17d78d[_0x3f9d1d(0xde2)], _0x14fd94[_0x3f9d1d(0xde3)] = _0x17d78d[_0x3f9d1d(0xde3)], _0x14fd94[_0x3f9d1d(0xb11)] = _0x17d78d[_0x3f9d1d(0xb11)] ? _0x17d78d[_0x3f9d1d(0xb11)] : 0x0;
            var _0x299cc4 = this[_0x3f9d1d(0xdea)];
            _0x299cc4[_0x3f9d1d(0xe73)] = _0x17d78d[_0x3f9d1d(0xe73)], _0x299cc4[_0x3f9d1d(0x320)] = _0x17d78d['duration'], _0x299cc4[_0x3f9d1d(0xe67)] = _0x17d78d[_0x3f9d1d(0xe67)], _0x299cc4['prewarm'] = _0x17d78d[_0x3f9d1d(0xe68)], _0x299cc4[_0x3f9d1d(0xe69)] = _0x17d78d[_0x3f9d1d(0xe69)], _0x299cc4[_0x3f9d1d(0xe6a)] = _0x17d78d[_0x3f9d1d(0xe6a)], _0x299cc4[_0x3f9d1d(0xe6b)] = _0x17d78d[_0x3f9d1d(0xe6b)], _0x299cc4[_0x3f9d1d(0xe6c)] = _0x17d78d[_0x3f9d1d(0xe6c)], _0x299cc4['startLifetimeType'] = _0x17d78d[_0x3f9d1d(0xe42)], _0x299cc4['startLifetimeConstant'] = _0x17d78d['startLifetimeConstant'], _0x299cc4[_0x3f9d1d(0xe43)] = _0x4e36f1[_0x3f9d1d(0xef0)](_0x17d78d[_0x3f9d1d(0xef1)]), _0x299cc4[_0x3f9d1d(0xe44)] = _0x17d78d[_0x3f9d1d(0xe44)], _0x299cc4['startLifetimeConstantMax'] = _0x17d78d['startLifetimeConstantMax'], _0x299cc4[_0x3f9d1d(0xe46)] = _0x4e36f1[_0x3f9d1d(0xef0)](_0x17d78d[_0x3f9d1d(0xef2)]), _0x299cc4['startLifeTimeGradientMax'] = _0x4e36f1[_0x3f9d1d(0xef0)](_0x17d78d[_0x3f9d1d(0xef3)]), _0x299cc4[_0x3f9d1d(0xe6d)] = _0x17d78d[_0x3f9d1d(0xe6d)], _0x299cc4['startSpeedConstant'] = _0x17d78d[_0x3f9d1d(0xe7a)], _0x299cc4['startSpeedConstantMin'] = _0x17d78d[_0x3f9d1d(0xe7b)], _0x299cc4[_0x3f9d1d(0xe7c)] = _0x17d78d['startSpeedConstantMax'], _0x299cc4[_0x3f9d1d(0xe34)] = _0x17d78d['threeDStartSize'], _0x299cc4[_0x3f9d1d(0xe6e)] = _0x17d78d['startSizeType'], _0x299cc4[_0x3f9d1d(0xe6f)] = _0x17d78d['startSizeConstant'];
            var _0x4f0871 = _0x17d78d[_0x3f9d1d(0xe35)], _0x312580 = _0x299cc4[_0x3f9d1d(0xe35)];
            _0x312580['x'] = _0x4f0871[0x0], _0x312580['y'] = _0x4f0871[0x1], _0x312580['z'] = _0x4f0871[0x2], _0x299cc4[_0x3f9d1d(0xe38)] = _0x17d78d['startSizeConstantMin'], _0x299cc4[_0x3f9d1d(0xe39)] = _0x17d78d['startSizeConstantMax'];
            var _0x456c3f = _0x17d78d['startSizeConstantMinSeparate'], _0x6a888 = _0x299cc4[_0x3f9d1d(0xe36)];
            _0x6a888['x'] = _0x456c3f[0x0], _0x6a888['y'] = _0x456c3f[0x1], _0x6a888['z'] = _0x456c3f[0x2];
            var _0x5650c3 = _0x17d78d['startSizeConstantMaxSeparate'], _0x414613 = _0x299cc4[_0x3f9d1d(0xe37)];
            _0x414613['x'] = _0x5650c3[0x0], _0x414613['y'] = _0x5650c3[0x1], _0x414613['z'] = _0x5650c3[0x2], _0x299cc4[_0x3f9d1d(0xdf2)] = _0x17d78d[_0x3f9d1d(0xdf2)], _0x299cc4[_0x3f9d1d(0xe7d)] = _0x17d78d[_0x3f9d1d(0xe7d)], _0x299cc4[_0x3f9d1d(0xe3d)] = _0x17d78d[_0x3f9d1d(0xe3d)] * _0x1c876f;
            var _0x4f3590 = _0x17d78d[_0x3f9d1d(0xe3a)], _0x393dab = _0x299cc4[_0x3f9d1d(0xe3a)];
            _0x393dab['x'] = _0x4f3590[0x0] * _0x1c876f, _0x393dab['y'] = _0x4f3590[0x1] * _0x1c876f, _0x393dab['z'] = _0x4f3590[0x2] * _0x1c876f, _0x299cc4[_0x3f9d1d(0xe40)] = _0x17d78d[_0x3f9d1d(0xe40)] * _0x1c876f, _0x299cc4[_0x3f9d1d(0xe41)] = _0x17d78d[_0x3f9d1d(0xe41)] * _0x1c876f;
            var _0x22c5fe = _0x17d78d['startRotationConstantMinSeparate'], _0x9b0a97 = _0x299cc4[_0x3f9d1d(0xe3e)];
            _0x9b0a97['x'] = _0x22c5fe[0x0] * _0x1c876f, _0x9b0a97['y'] = _0x22c5fe[0x1] * _0x1c876f, _0x9b0a97['z'] = _0x22c5fe[0x2] * _0x1c876f;
            var _0x52ca68 = _0x17d78d[_0x3f9d1d(0xe3f)], _0x3b947e = _0x299cc4[_0x3f9d1d(0xe3f)];
            _0x3b947e['x'] = _0x52ca68[0x0] * _0x1c876f, _0x3b947e['y'] = _0x52ca68[0x1] * _0x1c876f, _0x3b947e['z'] = _0x52ca68[0x2] * _0x1c876f, _0x299cc4[_0x3f9d1d(0xe3b)] = _0x17d78d[_0x3f9d1d(0xe3b)], _0x299cc4[_0x3f9d1d(0xe2f)] = _0x17d78d['startColorType'];
            var _0x77c381 = _0x17d78d[_0x3f9d1d(0xe30)], _0x1e7355 = _0x299cc4[_0x3f9d1d(0xe30)];
            _0x1e7355['x'] = _0x77c381[0x0], _0x1e7355['y'] = _0x77c381[0x1], _0x1e7355['z'] = _0x77c381[0x2], _0x1e7355['w'] = _0x77c381[0x3];
            var _0x5d3271 = _0x17d78d[_0x3f9d1d(0xe31)], _0x5da34d = _0x299cc4[_0x3f9d1d(0xe31)];
            _0x5da34d['x'] = _0x5d3271[0x0], _0x5da34d['y'] = _0x5d3271[0x1], _0x5da34d['z'] = _0x5d3271[0x2], _0x5da34d['w'] = _0x5d3271[0x3];
            var _0x56cdc9 = _0x17d78d[_0x3f9d1d(0xe32)], _0x1c4091 = _0x299cc4[_0x3f9d1d(0xe32)];
            _0x1c4091['x'] = _0x56cdc9[0x0], _0x1c4091['y'] = _0x56cdc9[0x1], _0x1c4091['z'] = _0x56cdc9[0x2], _0x1c4091['w'] = _0x56cdc9[0x3], _0x299cc4['gravityModifier'] = _0x17d78d[_0x3f9d1d(0xdf0)], _0x299cc4[_0x3f9d1d(0xdef)] = _0x17d78d[_0x3f9d1d(0xdef)], _0x17d78d['simulationSpeed'] !== undefined && (_0x299cc4[_0x3f9d1d(0xe70)] = _0x17d78d[_0x3f9d1d(0xe70)]), _0x299cc4[_0x3f9d1d(0xdf4)] = _0x17d78d[_0x3f9d1d(0xdf4)], _0x299cc4['playOnAwake'] = _0x17d78d[_0x3f9d1d(0xe71)], _0x299cc4[_0x3f9d1d(0xe7e)] = _0x17d78d[_0x3f9d1d(0xe7e)];
            var _0x540976 = _0x17d78d['autoRandomSeed'];
            _0x540976 != null && (_0x299cc4[_0x3f9d1d(0xe2e)] = _0x540976);
            var _0x2a9cf7 = _0x17d78d[_0x3f9d1d(0xe72)];
            _0x2a9cf7 != null && (_0x299cc4[_0x3f9d1d(0xe72)][0x0] = _0x2a9cf7);
            var _0x23c489 = _0x17d78d['emission'], _0x19dbbc = _0x299cc4[_0x3f9d1d(0xe7f)];
            if (_0x23c489) {
                _0x19dbbc[_0x3f9d1d(0xe25)] = _0x23c489[_0x3f9d1d(0xe25)];
                var _0x29447c = _0x23c489[_0x3f9d1d(0xee1)];
                if (_0x29447c)
                    for (_0x4f6ed1 = 0x0, _0x35e1bf = _0x29447c[_0x3f9d1d(0x1ff)]; _0x4f6ed1 < _0x35e1bf; _0x4f6ed1++) {
                        var _0x547e10 = _0x29447c[_0x4f6ed1];
                        _0x19dbbc[_0x3f9d1d(0xe27)](new _0x29e0b1(_0x547e10[_0x3f9d1d(0x268)], _0x547e10[_0x3f9d1d(0x204)], _0x547e10[_0x3f9d1d(0x205)]));
                    }
                _0x19dbbc[_0x3f9d1d(0x650)] = _0x23c489[_0x3f9d1d(0x650)];
            } else
                _0x19dbbc[_0x3f9d1d(0x650)] = ![];
            var _0x2a18b9 = _0x17d78d[_0x3f9d1d(0xe82)];
            if (_0x2a18b9) {
                var _0x4c7d5e;
                switch (_0x2a18b9[_0x3f9d1d(0xd64)]) {
                case 0x0:
                    var _0x3caeb2;
                    _0x4c7d5e = _0x3caeb2 = new _0x30fb44(), _0x3caeb2[_0x3f9d1d(0x87d)] = _0x2a18b9['sphereRadius'], _0x3caeb2['emitFromShell'] = _0x2a18b9[_0x3f9d1d(0xef4)], _0x3caeb2[_0x3f9d1d(0xd68)] = _0x2a18b9[_0x3f9d1d(0xef5)];
                    break;
                case 0x1:
                    var _0x151f6e;
                    _0x4c7d5e = _0x151f6e = new _0x4d0421(), _0x151f6e[_0x3f9d1d(0x87d)] = _0x2a18b9['hemiSphereRadius'], _0x151f6e[_0x3f9d1d(0xd6f)] = _0x2a18b9[_0x3f9d1d(0xef6)], _0x151f6e[_0x3f9d1d(0xd68)] = _0x2a18b9[_0x3f9d1d(0xef7)];
                    break;
                case 0x2:
                    var _0x324619;
                    _0x4c7d5e = _0x324619 = new _0x4dcb49(), _0x324619[_0x3f9d1d(0xd6c)] = _0x2a18b9[_0x3f9d1d(0xef8)] * _0x1c876f, _0x324619[_0x3f9d1d(0x87d)] = _0x2a18b9['coneRadius'], _0x324619[_0x3f9d1d(0x1ff)] = _0x2a18b9[_0x3f9d1d(0xef9)], _0x324619[_0x3f9d1d(0xd6d)] = _0x2a18b9[_0x3f9d1d(0xefa)], _0x324619[_0x3f9d1d(0xd68)] = _0x2a18b9[_0x3f9d1d(0xefb)];
                    break;
                case 0x3:
                    var _0x306457;
                    _0x4c7d5e = _0x306457 = new _0x31cb6d(), _0x306457['x'] = _0x2a18b9[_0x3f9d1d(0xefc)], _0x306457['y'] = _0x2a18b9[_0x3f9d1d(0xefd)], _0x306457['z'] = _0x2a18b9['boxZ'], _0x306457[_0x3f9d1d(0xd68)] = _0x2a18b9[_0x3f9d1d(0xefe)];
                    break;
                case 0x7:
                    var _0x5f32a8;
                    _0x4c7d5e = _0x5f32a8 = new _0x500622(), _0x5f32a8[_0x3f9d1d(0x87d)] = _0x2a18b9[_0x3f9d1d(0xeff)], _0x5f32a8['arc'] = _0x2a18b9['circleArc'] * _0x1c876f, _0x5f32a8[_0x3f9d1d(0xd6a)] = _0x2a18b9[_0x3f9d1d(0xf00)], _0x5f32a8[_0x3f9d1d(0xd68)] = _0x2a18b9['circleRandomDirection'];
                    break;
                default:
                    var _0x4f0182;
                    _0x4c7d5e = _0x4f0182 = new _0x500622(), _0x4f0182[_0x3f9d1d(0x87d)] = _0x2a18b9[_0x3f9d1d(0xeff)], _0x4f0182['arc'] = _0x2a18b9[_0x3f9d1d(0xf01)] * _0x1c876f, _0x4f0182[_0x3f9d1d(0xd6a)] = _0x2a18b9[_0x3f9d1d(0xf00)], _0x4f0182['randomDirection'] = _0x2a18b9[_0x3f9d1d(0xf02)];
                    break;
                }
                _0x4c7d5e[_0x3f9d1d(0x650)] = _0x2a18b9[_0x3f9d1d(0x650)], _0x299cc4['shape'] = _0x4c7d5e;
            }
            var _0x1fb2c9 = _0x17d78d['velocityOverLifetime'];
            if (_0x1fb2c9) {
                var _0x748c3a = _0x1fb2c9[_0x3f9d1d(0xd7e)], _0xc72edb;
                switch (_0x748c3a[_0x3f9d1d(0x2ae)]) {
                case 0x0:
                    var _0x22baab = _0x748c3a[_0x3f9d1d(0xd15)];
                    _0xc72edb = _0x154d77[_0x3f9d1d(0xd11)](new _0x3f70c5(_0x22baab[0x0], _0x22baab[0x1], _0x22baab[0x2]));
                    break;
                case 0x1:
                    _0xc72edb = _0x154d77[_0x3f9d1d(0xd1c)](this[_0x3f9d1d(0xee6)](_0x748c3a['gradientX']), this[_0x3f9d1d(0xee6)](_0x748c3a[_0x3f9d1d(0xd39)]), this['_initParticleVelocity'](_0x748c3a['gradientZ']));
                    break;
                case 0x2:
                    var _0x7bb5ee = _0x748c3a[_0x3f9d1d(0xd1d)], _0xf1fa02 = _0x748c3a[_0x3f9d1d(0xd17)];
                    _0xc72edb = _0x154d77[_0x3f9d1d(0xd13)](new _0x3f70c5(_0x7bb5ee[0x0], _0x7bb5ee[0x1], _0x7bb5ee[0x2]), new _0x3f70c5(_0xf1fa02[0x0], _0xf1fa02[0x1], _0xf1fa02[0x2]));
                    break;
                case 0x3:
                    _0xc72edb = _0x154d77['createByRandomTwoGradient'](this[_0x3f9d1d(0xee6)](_0x748c3a[_0x3f9d1d(0xd4e)]), this['_initParticleVelocity'](_0x748c3a[_0x3f9d1d(0xd3e)]), this['_initParticleVelocity'](_0x748c3a[_0x3f9d1d(0xd4b)]), this['_initParticleVelocity'](_0x748c3a[_0x3f9d1d(0xd4f)]), this['_initParticleVelocity'](_0x748c3a[_0x3f9d1d(0xd3f)]), this[_0x3f9d1d(0xee6)](_0x748c3a[_0x3f9d1d(0xd4c)]));
                    break;
                }
                var _0x4328b6 = new _0x1a4499(_0xc72edb);
                _0x4328b6['space'] = _0x1fb2c9['space'], _0x4328b6[_0x3f9d1d(0x650)] = _0x1fb2c9[_0x3f9d1d(0x650)], _0x299cc4['velocityOverLifetime'] = _0x4328b6;
            }
            var _0x2e3c4f = _0x17d78d[_0x3f9d1d(0xe33)];
            if (_0x2e3c4f) {
                var _0x2eab3d = _0x2e3c4f[_0x3f9d1d(0x462)], _0x1fa0c0;
                switch (_0x2eab3d[_0x3f9d1d(0x2ae)]) {
                case 0x0:
                    var _0x5037fd = _0x2eab3d[_0x3f9d1d(0xd15)];
                    _0x1fa0c0 = _0x264d78[_0x3f9d1d(0xd11)](new _0x8fb80(_0x5037fd[0x0], _0x5037fd[0x1], _0x5037fd[0x2], _0x5037fd[0x3]));
                    break;
                case 0x1:
                    _0x1fa0c0 = _0x264d78[_0x3f9d1d(0xd1c)](this[_0x3f9d1d(0xee7)](_0x2eab3d['gradient']));
                    break;
                case 0x2:
                    var _0x404aac = _0x2eab3d[_0x3f9d1d(0xd1d)], _0x448c9f = _0x2eab3d[_0x3f9d1d(0xd17)];
                    _0x1fa0c0 = _0x264d78['createByRandomTwoConstant'](new _0x8fb80(_0x404aac[0x0], _0x404aac[0x1], _0x404aac[0x2], _0x404aac[0x3]), new _0x8fb80(_0x448c9f[0x0], _0x448c9f[0x1], _0x448c9f[0x2], _0x448c9f[0x3]));
                    break;
                case 0x3:
                    _0x1fa0c0 = _0x264d78[_0x3f9d1d(0xd14)](this[_0x3f9d1d(0xee7)](_0x2eab3d[_0x3f9d1d(0xd19)]), this['_initParticleColor'](_0x2eab3d[_0x3f9d1d(0xd1e)]));
                    break;
                }
                var _0x6a176d = new _0x9eae20(_0x1fa0c0);
                _0x6a176d['enable'] = _0x2e3c4f[_0x3f9d1d(0x650)], _0x299cc4['colorOverLifetime'] = _0x6a176d;
            }
            var _0x2f0b57 = _0x17d78d['sizeOverLifetime'];
            if (_0x2f0b57) {
                var _0x4f1d88 = _0x2f0b57[_0x3f9d1d(0x2b8)], _0x1956d3;
                switch (_0x4f1d88[_0x3f9d1d(0x2ae)]) {
                case 0x0:
                    _0x4f1d88['separateAxes'] ? _0x1956d3 = _0x1ebe51[_0x3f9d1d(0xd30)](this['_initParticleSize'](_0x4f1d88['gradientX']), this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd39)]), this['_initParticleSize'](_0x4f1d88[_0x3f9d1d(0xd3a)])) : _0x1956d3 = _0x1ebe51[_0x3f9d1d(0xd1c)](this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd18)]));
                    break;
                case 0x1:
                    if (_0x4f1d88[_0x3f9d1d(0xd36)]) {
                        var _0x36e14a = _0x4f1d88[_0x3f9d1d(0xd3c)], _0x2db0a5 = _0x4f1d88[_0x3f9d1d(0xd3d)];
                        _0x1956d3 = _0x1ebe51[_0x3f9d1d(0xd32)](new _0x3f70c5(_0x36e14a[0x0], _0x36e14a[0x1], _0x36e14a[0x2]), new _0x3f70c5(_0x2db0a5[0x0], _0x2db0a5[0x1], _0x2db0a5[0x2]));
                    } else
                        _0x1956d3 = _0x1ebe51[_0x3f9d1d(0xd13)](_0x4f1d88[_0x3f9d1d(0xd1d)], _0x4f1d88[_0x3f9d1d(0xd17)]);
                    break;
                case 0x2:
                    _0x4f1d88[_0x3f9d1d(0xd36)] ? _0x1956d3 = _0x1ebe51['createByRandomTwoGradientSeparate'](this['_initParticleSize'](_0x4f1d88['gradientXMin']), this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd4b)]), this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd3f)]), this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd3e)]), this['_initParticleSize'](_0x4f1d88[_0x3f9d1d(0xd4f)]), this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd4c)])) : _0x1956d3 = _0x1ebe51[_0x3f9d1d(0xd14)](this[_0x3f9d1d(0xee8)](_0x4f1d88[_0x3f9d1d(0xd19)]), this[_0x3f9d1d(0xee8)](_0x4f1d88['gradientMax']));
                    break;
                }
                var _0x10ffbc = new _0x41af45(_0x1956d3);
                _0x10ffbc[_0x3f9d1d(0x650)] = _0x2f0b57[_0x3f9d1d(0x650)], _0x299cc4['sizeOverLifetime'] = _0x10ffbc;
            }
            var _0x267857 = _0x17d78d[_0x3f9d1d(0xec1)];
            if (_0x267857) {
                var _0x1402bb = _0x267857[_0x3f9d1d(0xd51)], _0x3e45fc;
                switch (_0x1402bb[_0x3f9d1d(0x2ae)]) {
                case 0x0:
                    if (_0x1402bb[_0x3f9d1d(0xd36)]) {
                        var _0x1ef15a = _0x1402bb[_0x3f9d1d(0xd37)];
                        _0x3e45fc = _0x4ebad0[_0x3f9d1d(0xd2f)](new _0x3f70c5(_0x1ef15a[0x0] * _0x1c876f, _0x1ef15a[0x1] * _0x1c876f, _0x1ef15a[0x2] * _0x1c876f));
                    } else
                        _0x3e45fc = _0x4ebad0['createByConstant'](_0x1402bb[_0x3f9d1d(0xd15)] * _0x1c876f);
                    break;
                case 0x1:
                    _0x1402bb[_0x3f9d1d(0xd36)] ? _0x3e45fc = _0x4ebad0[_0x3f9d1d(0xd30)](this[_0x3f9d1d(0xee9)](_0x1402bb[_0x3f9d1d(0xd38)]), this['_initParticleRotation'](_0x1402bb[_0x3f9d1d(0xd39)]), this['_initParticleRotation'](_0x1402bb[_0x3f9d1d(0xd3a)])) : _0x3e45fc = _0x4ebad0[_0x3f9d1d(0xd1c)](this[_0x3f9d1d(0xee9)](_0x1402bb['gradient']));
                    break;
                case 0x2:
                    if (_0x1402bb[_0x3f9d1d(0xd36)]) {
                        var _0x4d6b2a = _0x1402bb[_0x3f9d1d(0xd3c)], _0x5867b4 = _0x1402bb['constantMaxSeparate'];
                        _0x3e45fc = _0x4ebad0[_0x3f9d1d(0xd32)](new _0x3f70c5(_0x4d6b2a[0x0] * _0x1c876f, _0x4d6b2a[0x1] * _0x1c876f, _0x4d6b2a[0x2] * _0x1c876f), new _0x3f70c5(_0x5867b4[0x0] * _0x1c876f, _0x5867b4[0x1] * _0x1c876f, _0x5867b4[0x2] * _0x1c876f));
                    } else
                        _0x3e45fc = _0x4ebad0[_0x3f9d1d(0xd13)](_0x1402bb[_0x3f9d1d(0xd1d)] * _0x1c876f, _0x1402bb[_0x3f9d1d(0xd17)] * _0x1c876f);
                    break;
                case 0x3:
                    if (_0x1402bb[_0x3f9d1d(0xd36)]);
                    else
                        _0x3e45fc = _0x4ebad0[_0x3f9d1d(0xd14)](this[_0x3f9d1d(0xee9)](_0x1402bb['gradientMin']), this[_0x3f9d1d(0xee9)](_0x1402bb[_0x3f9d1d(0xd1e)]));
                    break;
                }
                var _0x5ee341 = new _0x2d0604(_0x3e45fc);
                _0x5ee341['enable'] = _0x267857[_0x3f9d1d(0x650)], _0x299cc4[_0x3f9d1d(0xec1)] = _0x5ee341;
            }
            var _0x736819 = _0x17d78d[_0x3f9d1d(0xea4)];
            if (_0x736819) {
                var _0x4531b7 = _0x736819[_0x3f9d1d(0xd76)], _0x4f42d8;
                switch (_0x4531b7[_0x3f9d1d(0x2ae)]) {
                case 0x0:
                    _0x4f42d8 = _0x169ba5[_0x3f9d1d(0xd11)](_0x4531b7[_0x3f9d1d(0xd15)]);
                    break;
                case 0x1:
                    _0x4f42d8 = _0x169ba5[_0x3f9d1d(0xd22)](this[_0x3f9d1d(0xeeb)](_0x4531b7['overTime']));
                    break;
                case 0x2:
                    _0x4f42d8 = _0x169ba5[_0x3f9d1d(0xd13)](_0x4531b7[_0x3f9d1d(0xd1d)], _0x4531b7['constantMax']);
                    break;
                case 0x3:
                    _0x4f42d8 = _0x169ba5[_0x3f9d1d(0xd7a)](this[_0x3f9d1d(0xeeb)](_0x4531b7[_0x3f9d1d(0xf03)]), this[_0x3f9d1d(0xeeb)](_0x4531b7['overTimeMax']));
                    break;
                }
                var _0x19ba83 = _0x736819['startFrame'], _0x56e251;
                switch (_0x19ba83[_0x3f9d1d(0x2ae)]) {
                case 0x0:
                    _0x56e251 = _0x24182e['createByConstant'](_0x19ba83['constant']);
                    break;
                case 0x1:
                    _0x56e251 = _0x24182e[_0x3f9d1d(0xd13)](_0x19ba83[_0x3f9d1d(0xd1d)], _0x19ba83[_0x3f9d1d(0xd17)]);
                    break;
                }
                var _0x2da019 = new _0x187c64(_0x4f42d8, _0x56e251);
                _0x2da019[_0x3f9d1d(0x650)] = _0x736819[_0x3f9d1d(0x650)];
                var _0x583f4e = _0x736819[_0x3f9d1d(0xd73)];
                _0x2da019[_0x3f9d1d(0xd73)] = new _0x12bf01(_0x583f4e[0x0], _0x583f4e[0x1]), _0x2da019[_0x3f9d1d(0x2ae)] = _0x736819[_0x3f9d1d(0x2ae)], _0x2da019[_0x3f9d1d(0xd70)] = _0x736819[_0x3f9d1d(0xd70)];
                var _0x403c93 = _0x736819['rowIndex'];
                _0x403c93 !== undefined && (_0x2da019[_0x3f9d1d(0xd74)] = _0x403c93), _0x2da019[_0x3f9d1d(0xd71)] = _0x736819[_0x3f9d1d(0xd71)], _0x299cc4[_0x3f9d1d(0xea4)] = _0x2da019;
            }
        }
        [_0x5659be(0xee7)](_0x9d08af) {
            var _0x37ea83 = _0x5659be, _0x25194c = new _0x9a260b(0x4, 0x4);
            if (!_0x9d08af)
                _0x25194c[_0x37ea83(0xf04)](0x0, 0x1), _0x25194c['addColorAlpha'](0x1, 0x1), _0x25194c['addColorRGB'](0x0, new _0x4e3117(0x1, 0x1, 0x1, 0x1)), _0x25194c['addColorRGB'](0x1, new _0x4e3117(0x1, 0x1, 0x1, 0x1));
            else {
                var _0x5f3639 = _0x9d08af['alphas'], _0x483376, _0x5b245e;
                if (!_0x5f3639)
                    _0x25194c['addColorAlpha'](0x0, 0x1), _0x25194c[_0x37ea83(0xf04)](0x1, 0x1);
                else
                    for (_0x483376 = 0x0, _0x5b245e = _0x5f3639[_0x37ea83(0x1ff)]; _0x483376 < _0x5b245e; _0x483376++) {
                        _0x483376 == 0x3 && _0x5b245e > 0x4 && (_0x483376 = _0x5b245e - 0x1, console['warn'](_0x37ea83(0xf05)));
                        var _0x410c7a = _0x5f3639[_0x483376];
                        _0x25194c[_0x37ea83(0xf04)](_0x410c7a[_0x37ea83(0xedf)], _0x410c7a[_0x37ea83(0x26b)]);
                    }
                var _0x538194 = _0x9d08af[_0x37ea83(0xf06)];
                if (!_0x538194)
                    _0x25194c[_0x37ea83(0xcff)](0x0, new _0x4e3117(0x1, 0x1, 0x1, 0x1)), _0x25194c[_0x37ea83(0xcff)](0x1, new _0x4e3117(0x1, 0x1, 0x1, 0x1));
                else
                    for (_0x483376 = 0x0, _0x5b245e = _0x538194[_0x37ea83(0x1ff)]; _0x483376 < _0x5b245e; _0x483376++) {
                        _0x483376 == 0x3 && _0x5b245e > 0x4 && (_0x483376 = _0x5b245e - 0x1, console[_0x37ea83(0x24e)](_0x37ea83(0xf07)));
                        var _0x5d4268 = _0x538194[_0x483376], _0x3c37b8 = _0x5d4268[_0x37ea83(0x26b)];
                        _0x25194c[_0x37ea83(0xcff)](_0x5d4268[_0x37ea83(0xedf)], new _0x4e3117(_0x3c37b8[0x0], _0x3c37b8[0x1], _0x3c37b8[0x2], 0x1));
                    }
            }
            return _0x25194c;
        }
        ['_initParticleFrame'](_0x4fe593) {
            var _0x19c8ac = _0x5659be, _0x4b458d = new _0x51b483();
            if (_0x4fe593) {
                var _0x1ff696 = _0x4fe593[_0x19c8ac(0xf08)];
                for (var _0x4899f9 = 0x0, _0x3c57d7 = _0x1ff696[_0x19c8ac(0x1ff)]; _0x4899f9 < _0x3c57d7; _0x4899f9++) {
                    var _0x292b1d = _0x1ff696[_0x4899f9];
                    _0x4b458d[_0x19c8ac(0x201)](_0x292b1d[_0x19c8ac(0xedf)], _0x292b1d[_0x19c8ac(0x26b)]);
                }
            } else
                _0x4b458d[_0x19c8ac(0x201)](0x0, 0x0), _0x4b458d[_0x19c8ac(0x201)](0x1, 0x1);
            return _0x4b458d;
        }
        static [_0x5659be(0xef0)](_0x348683) {
            var _0x5cd584 = _0x5659be, _0x5474de = new _0x2f153d(), _0x39659c = _0x348683[_0x5cd584(0xf09)];
            for (var _0x39c8a1 = 0x0, _0x17369f = _0x39659c[_0x5cd584(0x1ff)]; _0x39c8a1 < _0x17369f; _0x39c8a1++) {
                var _0x2db2af = _0x39659c[_0x39c8a1];
                _0x5474de[_0x5cd584(0x201)](_0x2db2af[_0x5cd584(0xedf)], _0x2db2af[_0x5cd584(0x26b)]);
            }
            return _0x5474de;
        }
        ['_initParticleVelocity'](_0x51e5ed) {
            var _0x46e1f3 = _0x5659be, _0x58f326 = new _0x2f153d(), _0x515a71 = _0x51e5ed[_0x46e1f3(0xf0a)];
            for (var _0x495966 = 0x0, _0x11fbb5 = _0x515a71[_0x46e1f3(0x1ff)]; _0x495966 < _0x11fbb5; _0x495966++) {
                var _0x2ee800 = _0x515a71[_0x495966];
                _0x58f326['add'](_0x2ee800[_0x46e1f3(0xedf)], _0x2ee800[_0x46e1f3(0x26b)]);
            }
            return _0x58f326;
        }
        [_0x5659be(0xee8)](_0x2f21a3) {
            var _0x2adef8 = _0x5659be, _0x4d4ddd = new _0x2f153d();
            if (_0x2f21a3) {
                var _0x4964f8 = _0x2f21a3[_0x2adef8(0xf0b)];
                for (var _0x18927d = 0x0, _0x47828b = _0x4964f8[_0x2adef8(0x1ff)]; _0x18927d < _0x47828b; _0x18927d++) {
                    var _0x25fdbd = _0x4964f8[_0x18927d];
                    _0x4d4ddd[_0x2adef8(0x201)](_0x25fdbd[_0x2adef8(0xedf)], _0x25fdbd[_0x2adef8(0x26b)]);
                }
            } else
                _0x4d4ddd[_0x2adef8(0x201)](0x0, 0x0), _0x4d4ddd[_0x2adef8(0x201)](0x1, 0x1);
            return _0x4d4ddd;
        }
        [_0x5659be(0xee9)](_0x3b39ed) {
            var _0x361576 = _0x5659be, _0x1e4fc7 = new _0x2f153d(), _0x13e64e = _0x3b39ed['angularVelocitys'];
            for (var _0x577cb6 = 0x0, _0x555b60 = _0x13e64e[_0x361576(0x1ff)]; _0x577cb6 < _0x555b60; _0x577cb6++) {
                var _0x519239 = _0x13e64e[_0x577cb6];
                _0x1e4fc7[_0x361576(0x201)](_0x519239['key'], _0x519239[_0x361576(0x26b)] / 0xb4 * Math['PI']);
            }
            return _0x1e4fc7;
        }
    }
    class _0x158fab {
    }
    class _0x457f9c extends _0x234e8d {
        constructor(_0x5705aa) {
            var _0x10919f = _0x5659be;
            super(_0x5705aa), this[_0x10919f(0xf0c)] = [], this[_0x10919f(0xf0d)] = [], this[_0x10919f(0xf0e)] = new _0x2a117e(_0x3f70c5[_0x10919f(0x214)], _0x3f70c5[_0x10919f(0x214)]), this[_0x10919f(0xf0f)] = [];
        }
        get [_0x5659be(0xf10)]() {
            var _0xc5f53c = _0x5659be;
            return this[_0xc5f53c(0xf0e)];
        }
        set [_0x5659be(0xf10)](_0x1e0149) {
            this['_localBounds'] = _0x1e0149;
        }
        get [_0x5659be(0xf11)]() {
            var _0x44da56 = _0x5659be;
            return this[_0x44da56(0xf12)];
        }
        set [_0x5659be(0xf11)](_0x4d131d) {
            var _0x299236 = _0x5659be;
            if (this[_0x299236(0xf12)] != _0x4d131d) {
                if (this['_cacheRootBone'])
                    this[_0x299236(0xf12)]['transform']['off'](_0x218b83[_0x299236(0x5ab)]['TRANSFORM_CHANGED'], this, this[_0x299236(0xb12)]);
                else
                    this['_owner'][_0x299236(0x3cc)][_0x299236(0x8fc)](_0x218b83['Event']['TRANSFORM_CHANGED'], this, this[_0x299236(0xb12)]);
                if (_0x4d131d)
                    _0x4d131d['transform']['on'](_0x218b83[_0x299236(0x5ab)][_0x299236(0x5a7)], this, this[_0x299236(0xb12)]);
                else
                    this[_0x299236(0x3d3)]['transform']['on'](_0x218b83[_0x299236(0x5ab)][_0x299236(0x5a7)], this, this[_0x299236(0xb12)]);
                this[_0x299236(0xf12)] = _0x4d131d, this[_0x299236(0xb12)](_0x20d0f1[_0x299236(0x59f)] | _0x20d0f1[_0x299236(0x581)] | _0x20d0f1[_0x299236(0x583)]);
            }
        }
        get [_0x5659be(0xf13)]() {
            var _0x363195 = _0x5659be;
            return this[_0x363195(0xf0c)];
        }
        [_0x5659be(0xf14)]() {
            var _0x3251c6 = _0x5659be;
            if (this[_0x3251c6(0xf15)] && this[_0x3251c6(0xf16)] || this['_cacheMesh'] && !this['_cacheAvatar']) {
                var _0x32188f = this['_cacheMesh'][_0x3251c6(0xf17)], _0x38d28d = this[_0x3251c6(0xf15)][_0x3251c6(0xf18)];
                for (var _0x4d503a = 0x0, _0x555613 = this[_0x3251c6(0xf15)]['subMeshCount']; _0x4d503a < _0x555613; _0x4d503a++) {
                    var _0x4f8d06 = this['_cacheMesh']['getSubMesh'](_0x4d503a)['_boneIndicesList'], _0x51c0d9 = this['_skinnedData'][_0x4d503a];
                    for (var _0x3ad9ea = 0x0, _0x1d2e95 = _0x4f8d06[_0x3251c6(0x1ff)]; _0x3ad9ea < _0x1d2e95; _0x3ad9ea++) {
                        var _0xe00157 = _0x4f8d06[_0x3ad9ea];
                        this[_0x3251c6(0xf19)](_0x32188f, _0xe00157, _0x51c0d9[_0x3ad9ea], _0x38d28d);
                    }
                }
            }
        }
        ['_computeSubSkinnedData'](_0x3397bb, _0x795415, _0x1487db, _0x11d16f) {
            var _0x50a3f2 = _0x5659be;
            for (var _0x468e59 = 0x0, _0x48d290 = _0x795415[_0x50a3f2(0x1ff)]; _0x468e59 < _0x48d290; _0x468e59++) {
                var _0x85f96f = _0x795415[_0x468e59];
                if (this['_skinnedDataLoopMarks'][_0x85f96f] === _0x218b83[_0x50a3f2(0x500)][_0x50a3f2(0x4da)]) {
                    var _0x5b88fa = _0x11d16f[_0x85f96f], _0x38163a = this[_0x50a3f2(0xf1a)][_0x5b88fa['subMeshIndex']][_0x5b88fa[_0x50a3f2(0xf1b)]], _0x511346 = _0x5b88fa['batchBoneIndex'] * 0x10, _0x55793a = _0x468e59 * 0x10;
                    for (var _0x47faef = 0x0; _0x47faef < 0x10; _0x47faef++)
                        _0x1487db[_0x55793a + _0x47faef] = _0x38163a[_0x511346 + _0x47faef];
                } else
                    !this[_0x50a3f2(0xf16)] ? _0x108d81[_0x50a3f2(0x2ec)](this[_0x50a3f2(0xf0c)][_0x85f96f][_0x50a3f2(0x3cc)][_0x50a3f2(0x3ce)][_0x50a3f2(0x1f6)], _0x3397bb[_0x85f96f][_0x50a3f2(0x1f6)], 0x0, _0x1487db, _0x468e59 * 0x10) : _0x108d81[_0x50a3f2(0x2ec)](this[_0x50a3f2(0xf0f)][_0x85f96f][_0x50a3f2(0x3cc)]['getWorldMatrix'](), _0x3397bb[_0x85f96f][_0x50a3f2(0x1f6)], 0x0, _0x1487db, _0x468e59 * 0x10), this[_0x50a3f2(0xf0d)][_0x85f96f] = _0x218b83[_0x50a3f2(0x500)][_0x50a3f2(0x4da)];
            }
        }
        [_0x5659be(0xb12)](_0x1cf55) {
            var _0x1636cb = _0x5659be;
            this[_0x1636cb(0xb0c)] = !![];
            if (this[_0x1636cb(0xb23)]) {
                if (this['_cacheAvatar']) {
                    if (this[_0x1636cb(0xb0f)] === -0x1)
                        this['_octreeNode'][_0x1636cb(0x823)]['addMotionObject'](this);
                } else {
                    _0x1cf55 &= _0x20d0f1['TRANSFORM_WORLDPOSITION'] | _0x20d0f1[_0x1636cb(0x581)] | _0x20d0f1[_0x1636cb(0x583)];
                    if (_0x1cf55) {
                        if (this[_0x1636cb(0xb0f)] === -0x1)
                            this['_octreeNode'][_0x1636cb(0x823)][_0x1636cb(0xb29)](this);
                    }
                }
            }
        }
        [_0x5659be(0xcd1)]() {
            return new _0x5551c8();
        }
        [_0x5659be(0xcd0)](_0xcbedb9) {
            var _0x85cf86 = _0x5659be;
            super[_0x85cf86(0xcd0)](_0xcbedb9), this[_0x85cf86(0xf15)] = _0xcbedb9;
            var _0x3af9a1 = _0xcbedb9['subMeshCount'];
            this[_0x85cf86(0xf1a)] = [], this[_0x85cf86(0xf0d)]['length'] = _0xcbedb9[_0x85cf86(0xf17)][_0x85cf86(0x1ff)];
            for (var _0x165d5a = 0x0; _0x165d5a < _0x3af9a1; _0x165d5a++) {
                var _0x4415f8 = _0xcbedb9[_0x85cf86(0xcd2)](_0x165d5a)[_0x85cf86(0xf1c)], _0x1393e7 = _0x4415f8[_0x85cf86(0x1ff)], _0xb284d2 = this['_skinnedData'][_0x165d5a] = [];
                for (var _0x2321e4 = 0x0; _0x2321e4 < _0x1393e7; _0x2321e4++)
                    _0xb284d2[_0x2321e4] = new Float32Array(_0x4415f8[_0x2321e4][_0x85cf86(0x1ff)] * 0x10);
            }
            this['_cacheAvatar'] && _0xcbedb9 && this[_0x85cf86(0xf1d)]();
        }
        [_0x5659be(0xf1e)](_0xe89712) {
            var _0x38f77d = _0x5659be;
            this[_0x38f77d(0xf1f)] = _0xe89712, this['_shaderValues'][_0x38f77d(0x62c)](_0x158fab[_0x38f77d(0xf20)]), this['_setRootNode']();
        }
        [_0x5659be(0xb1c)]() {
            var _0x2c9e9f = _0x5659be;
            if (!this[_0x2c9e9f(0xf16)]) {
                if (this[_0x2c9e9f(0xf12)])
                    this[_0x2c9e9f(0xf0e)][_0x2c9e9f(0xa59)](this[_0x2c9e9f(0xf12)][_0x2c9e9f(0x3cc)][_0x2c9e9f(0x3ce)], this[_0x2c9e9f(0xa67)]);
                else
                    this['_localBounds'][_0x2c9e9f(0xa59)](this['_owner'][_0x2c9e9f(0x3cc)]['worldMatrix'], this['_bounds']);
            } else {
                if (this['_cacheAnimator'] && this[_0x2c9e9f(0xf21)]) {
                    var _0x442ec0 = _0x457f9c[_0x2c9e9f(0x484)];
                    _0x108d81[_0x2c9e9f(0x2f6)](this[_0x2c9e9f(0xf1f)][_0x2c9e9f(0x380)][_0x2c9e9f(0x3cc)][_0x2c9e9f(0x3ce)], this['_cacheRootAnimationNode'][_0x2c9e9f(0x3cc)][_0x2c9e9f(0x3cf)](), _0x442ec0), this[_0x2c9e9f(0xf0e)][_0x2c9e9f(0xa59)](_0x442ec0, this['_bounds']);
                } else
                    super['_calculateBoundingBox']();
            }
        }
        [_0x5659be(0x5f3)](_0x3ab729, _0x49e160) {
            var _0x2c55c4 = _0x5659be;
            if (this[_0x2c55c4(0xf1f)]) {
                this['_computeSkinnedData']();
                if (!this['_cacheAvatar'])
                    this[_0x2c55c4(0x4e0)][_0x2c55c4(0x4a0)](_0x356e58[_0x2c55c4(0xb37)], _0x3ed76a[_0x2c55c4(0x290)]);
                else {
                    var _0x4d9253 = this[_0x2c55c4(0xf1f)][_0x2c55c4(0x380)][_0x2c55c4(0x3ca)];
                    this[_0x2c55c4(0x4e0)][_0x2c55c4(0x4a0)](_0x356e58['WORLDMATRIX'], _0x4d9253['worldMatrix']);
                }
            } else
                this['_shaderValues'][_0x2c55c4(0x4a0)](_0x356e58[_0x2c55c4(0xb37)], _0x49e160[_0x2c55c4(0x3ce)]);
            if (!this[_0x2c55c4(0xab5)])
                return;
            this['_reflectionMode'] == _0x71dec4[_0x2c55c4(0xaf4)][_0x2c55c4(0x8fc)] ? (this['_shaderValues'][_0x2c55c4(0x493)](_0xc9db6a[_0x2c55c4(0xcd3)]), this[_0x2c55c4(0x4e0)]['setVector'](_0x200920[_0x2c55c4(0xa8e)], _0x221da4[_0x2c55c4(0xb09)]), this[_0x2c55c4(0x4e0)][_0x2c55c4(0x4a2)](_0x200920[_0x2c55c4(0xa8c)], _0x38ac97[_0x2c55c4(0xa1d)])) : (!this[_0x2c55c4(0xab5)][_0x2c55c4(0xafa)] ? this[_0x2c55c4(0x4e0)]['removeDefine'](_0xc9db6a[_0x2c55c4(0xcd3)]) : (this['_shaderValues'][_0x2c55c4(0x62c)](_0xc9db6a[_0x2c55c4(0xcd3)]), this[_0x2c55c4(0x4e0)]['setVector3'](_0x200920[_0x2c55c4(0xf22)], this['_probReflection'][_0x2c55c4(0xaff)]), this[_0x2c55c4(0x4e0)]['setVector3'](_0x200920[_0x2c55c4(0xa90)], this['_probReflection'][_0x2c55c4(0xcd4)]), this[_0x2c55c4(0x4e0)][_0x2c55c4(0x4b1)](_0x200920[_0x2c55c4(0xa92)], this[_0x2c55c4(0xab5)][_0x2c55c4(0xf23)])), this[_0x2c55c4(0x4e0)][_0x2c55c4(0x4a2)](_0x200920['REFLECTIONTEXTURE'], this['_probReflection'][_0x2c55c4(0xafd)]), this[_0x2c55c4(0x4e0)][_0x2c55c4(0x49d)](_0x200920[_0x2c55c4(0xa8e)], this[_0x2c55c4(0xab5)]['reflectionHDRParams']));
        }
        [_0x5659be(0x5f4)](_0x38358b, _0x4e342e) {
            var _0x4aaf21 = _0x5659be, _0xbeec4 = _0x38358b[_0x4aaf21(0x5dc)];
            if (this[_0x4aaf21(0xf1f)]) {
                if (!this['_cacheAvatar'])
                    this[_0x4aaf21(0x4e0)][_0x4aaf21(0x4a0)](_0x356e58[_0x4aaf21(0x5dd)], _0xbeec4);
                else {
                    var _0x3bf8d9 = this[_0x4aaf21(0xf1f)][_0x4aaf21(0x380)]['_transform'];
                    _0x3ed76a[_0x4aaf21(0x202)](_0xbeec4, _0x3bf8d9['worldMatrix'], this[_0x4aaf21(0x5de)]), this[_0x4aaf21(0x4e0)][_0x4aaf21(0x4a0)](_0x356e58['MVPMATRIX'], this[_0x4aaf21(0x5de)]);
                }
            } else
                _0x3ed76a['multiply'](_0xbeec4, _0x4e342e[_0x4aaf21(0x3ce)], this[_0x4aaf21(0x5de)]), this['_shaderValues'][_0x4aaf21(0x4a0)](_0x356e58['MVPMATRIX'], this['_projectionViewWorldMatrix']);
        }
        ['_destroy']() {
            var _0x4e95ca = _0x5659be;
            super[_0x4e95ca(0xa86)]();
            if (!this[_0x4e95ca(0xf16)]) {
                if (this[_0x4e95ca(0xf12)])
                    !this[_0x4e95ca(0xf12)]['destroyed'] && this['_cacheRootBone'][_0x4e95ca(0x3cc)][_0x4e95ca(0x8fc)](_0x218b83[_0x4e95ca(0x5ab)][_0x4e95ca(0x5a7)], this, this['_onWorldMatNeedChange']);
                else
                    this[_0x4e95ca(0x3d3)] && !this[_0x4e95ca(0x3d3)][_0x4e95ca(0x5cf)] && this[_0x4e95ca(0x3d3)][_0x4e95ca(0x3cc)]['off'](_0x218b83[_0x4e95ca(0x5ab)][_0x4e95ca(0x5a7)], this, this['_onWorldMatNeedChange']);
            } else {
                if (this[_0x4e95ca(0xf24)])
                    this[_0x4e95ca(0xf24)]['transform'][_0x4e95ca(0x8fc)](_0x218b83[_0x4e95ca(0x5ab)][_0x4e95ca(0x5a7)], this, this[_0x4e95ca(0xb12)]);
            }
        }
        get [_0x5659be(0x80d)]() {
            var _0x364c57 = _0x5659be;
            return (this[_0x364c57(0xb0c)] || this[_0x364c57(0xf16)]) && (this['_calculateBoundingBox'](), this[_0x364c57(0xb0c)] = ![]), this['_bounds'];
        }
        [_0x5659be(0xf25)](_0x254699) {
            var _0x23e4bf = _0x5659be;
            this[_0x23e4bf(0xf21)] = _0x254699, this[_0x23e4bf(0xf26)]();
        }
        [_0x5659be(0xf26)]() {
            var _0x26b2f5 = _0x5659be, _0x355a4;
            if (this[_0x26b2f5(0xf1f)] && this[_0x26b2f5(0xf21)] && this[_0x26b2f5(0xf16)])
                _0x355a4 = this[_0x26b2f5(0xf1f)][_0x26b2f5(0x386)][this[_0x26b2f5(0xf21)]];
            else
                _0x355a4 = null;
            if (this[_0x26b2f5(0xf24)] != _0x355a4) {
                this[_0x26b2f5(0xb12)](_0x20d0f1[_0x26b2f5(0x59f)] | _0x20d0f1['TRANSFORM_WORLDQUATERNION'] | _0x20d0f1[_0x26b2f5(0x583)]), this[_0x26b2f5(0x3d3)][_0x26b2f5(0x3cc)][_0x26b2f5(0x8fc)](_0x218b83[_0x26b2f5(0x5ab)][_0x26b2f5(0x5a7)], this, this[_0x26b2f5(0xb12)]);
                if (this[_0x26b2f5(0xf24)])
                    this[_0x26b2f5(0xf24)][_0x26b2f5(0x3cc)][_0x26b2f5(0x8fc)](_0x218b83[_0x26b2f5(0x5ab)][_0x26b2f5(0x5a7)], this, this[_0x26b2f5(0xb12)]);
                _0x355a4 && _0x355a4[_0x26b2f5(0x3cc)]['on'](_0x218b83['Event']['TRANSFORM_CHANGED'], this, this[_0x26b2f5(0xb12)]), this[_0x26b2f5(0xf24)] = _0x355a4;
            }
        }
        [_0x5659be(0xf1d)]() {
            var _0x2aa2d5 = _0x5659be, _0x2bceca = this[_0x2aa2d5(0xf15)][_0x2aa2d5(0xf27)], _0x472601 = this[_0x2aa2d5(0xf15)][_0x2aa2d5(0xf17)]['length'];
            this['_cacheAnimationNode'][_0x2aa2d5(0x1ff)] = _0x472601;
            var _0x259b36 = this[_0x2aa2d5(0xf1f)][_0x2aa2d5(0x386)];
            for (var _0x4aa948 = 0x0; _0x4aa948 < _0x472601; _0x4aa948++) {
                var _0x3d3ad0 = _0x259b36[_0x2bceca[_0x4aa948]];
                this[_0x2aa2d5(0xf0f)][_0x4aa948] = _0x3d3ad0;
            }
        }
        [_0x5659be(0xf28)](_0xc38a51) {
            var _0x5d25ca = _0x5659be;
            this[_0x5d25ca(0xf16)] !== _0xc38a51 && (this[_0x5d25ca(0xf15)] ? (this[_0x5d25ca(0xf16)] = _0xc38a51, _0xc38a51 && (this['_shaderValues'][_0x5d25ca(0x62c)](_0x158fab[_0x5d25ca(0xf20)]), this[_0x5d25ca(0xf1d)]())) : this[_0x5d25ca(0xf16)] = _0xc38a51, this[_0x5d25ca(0xf26)]());
        }
    }
    _0x457f9c['_tempMatrix4x4'] = new _0x3ed76a();
    class _0x423afc extends _0x200920 {
        constructor(_0x3c3c7e = null, _0x5737a3 = null) {
            var _0x38f08b = _0x5659be;
            super(_0x5737a3), this[_0x38f08b(0xcea)] = new _0x2abbff(this), this['_render'] = new _0x457f9c(this), _0x3c3c7e && (this['_meshFilter'][_0x38f08b(0xae3)] = _0x3c3c7e);
        }
        static ['__init__']() {
            var _0x1f8fb4 = _0x5659be;
            _0x158fab['SHADERDEFINE_BONE'] = _0x84b6d6[_0x1f8fb4(0x510)](_0x1f8fb4(0xf29)), _0x158fab['SHADERDEFINE_SIMPLEBONE'] = _0x84b6d6[_0x1f8fb4(0x510)]('SIMPLEBONE');
        }
        get ['meshFilter']() {
            return this['_meshFilter'];
        }
        get [_0x5659be(0xf2a)]() {
            var _0x115d83 = _0x5659be;
            return this[_0x115d83(0x5e6)];
        }
        ['_parse'](_0x5d4866, _0x504cc2) {
            var _0x2c652d = _0x5659be;
            super[_0x2c652d(0x318)](_0x5d4866, _0x504cc2);
            var _0x5e9a48 = this[_0x2c652d(0xf2a)], _0x40c955 = _0x5d4866[_0x2c652d(0xab7)];
            _0x40c955 != null && (_0x5e9a48[_0x2c652d(0xab7)] = _0x40c955);
            var _0x7e0246 = _0x5d4866[_0x2c652d(0xb14)];
            _0x7e0246 && (_0x5e9a48['lightmapScaleOffset'] = new _0x8fb80(_0x7e0246[0x0], _0x7e0246[0x1], _0x7e0246[0x2], _0x7e0246[0x3])), _0x5d4866[_0x2c652d(0xcf0)] != undefined && (_0x5e9a48['enable'] = _0x5d4866[_0x2c652d(0xcf0)]), _0x5d4866['receiveShadows'] != undefined && (_0x5e9a48[_0x2c652d(0xab8)] = _0x5d4866[_0x2c652d(0xcf1)]), _0x5d4866[_0x2c652d(0xb1e)] != undefined && (_0x5e9a48['castShadow'] = _0x5d4866['castShadow']);
            var _0x5e2771;
            _0x5e2771 = _0x5d4866['meshPath'];
            if (_0x5e2771) {
                var _0x486a35 = _0x218b83[_0x2c652d(0x3b1)][_0x2c652d(0x692)](_0x5e2771);
                _0x486a35 && (this['meshFilter'][_0x2c652d(0xae3)] = _0x486a35);
            }
            var _0x31102f = _0x5d4866['materials'];
            if (_0x31102f) {
                var _0x3d0e98 = _0x5e9a48['sharedMaterials'], _0xf95627 = _0x31102f[_0x2c652d(0x1ff)];
                _0x3d0e98[_0x2c652d(0x1ff)] = _0xf95627;
                for (var _0x1cdc71 = 0x0; _0x1cdc71 < _0xf95627; _0x1cdc71++) {
                    _0x3d0e98[_0x1cdc71] = _0x218b83[_0x2c652d(0x3b1)]['getRes'](_0x31102f[_0x1cdc71]['path']);
                }
                _0x5e9a48['sharedMaterials'] = _0x3d0e98;
            }
            var _0x71eb41 = _0x5d4866[_0x2c652d(0xf2b)], _0x253706 = _0x71eb41[_0x2c652d(0x204)], _0x2cd5d8 = _0x71eb41[_0x2c652d(0x205)];
            _0x5e9a48[_0x2c652d(0xf10)][_0x2c652d(0xa6b)](new _0x3f70c5(_0x253706[0x0], _0x253706[0x1], _0x253706[0x2])), _0x5e9a48['localBounds'][_0x2c652d(0xa51)](new _0x3f70c5(_0x2cd5d8[0x0], _0x2cd5d8[0x1], _0x2cd5d8[0x2]));
            if (_0x504cc2) {
                var _0x2b5331 = _0x5d4866[_0x2c652d(0xf11)];
                _0x5e9a48[_0x2c652d(0xf11)] = _0x504cc2[_0x2b5331];
                var _0x11a1c5 = _0x5d4866['bones'], _0x19ddd6;
                for (_0x1cdc71 = 0x0, _0x19ddd6 = _0x11a1c5[_0x2c652d(0x1ff)]; _0x1cdc71 < _0x19ddd6; _0x1cdc71++)
                    _0x5e9a48[_0x2c652d(0xf13)]['push'](_0x504cc2[_0x11a1c5[_0x1cdc71]]);
            } else
                _0x5d4866[_0x2c652d(0xf11)] && _0x5e9a48['_setRootBone'](_0x5d4866[_0x2c652d(0xf11)]);
        }
        ['_changeHierarchyAnimator'](_0x251f35) {
            var _0x169883 = _0x5659be;
            super[_0x169883(0x5c7)](_0x251f35), this[_0x169883(0xf2a)][_0x169883(0xf1e)](_0x251f35);
        }
        [_0x5659be(0x5c9)](_0x1f0bed) {
            var _0x5c652d = _0x5659be;
            this[_0x5c652d(0xf2a)]['_setCacheAvatar'](_0x1f0bed);
        }
        [_0x5659be(0x339)](_0x5424d4, _0x9a7a40, _0x19371e) {
            var _0x51069b = _0x5659be, _0x2e7d50 = _0x5424d4;
            _0x2e7d50[_0x51069b(0xae2)][_0x51069b(0xae3)] = this[_0x51069b(0xae2)][_0x51069b(0xae3)];
            var _0x4ffc7f = this[_0x51069b(0x5e6)], _0x2738fb = _0x2e7d50[_0x51069b(0x5e6)];
            _0x2738fb[_0x51069b(0x650)] = _0x4ffc7f[_0x51069b(0x650)], _0x2738fb['sharedMaterials'] = _0x4ffc7f[_0x51069b(0xb18)], _0x2738fb[_0x51069b(0xb1e)] = _0x4ffc7f[_0x51069b(0xb1e)];
            var _0x35fe29 = _0x4ffc7f[_0x51069b(0xb14)];
            _0x35fe29 && (_0x2738fb[_0x51069b(0xb14)] = _0x35fe29[_0x51069b(0x1f4)]()), _0x2738fb[_0x51069b(0xab8)] = _0x4ffc7f[_0x51069b(0xab8)], _0x2738fb[_0x51069b(0xb11)] = _0x4ffc7f[_0x51069b(0xb11)], _0x2738fb[_0x51069b(0xf21)] = _0x4ffc7f[_0x51069b(0xf21)];
            var _0x183672 = _0x4ffc7f[_0x51069b(0xf13)], _0xf326a2 = _0x2738fb[_0x51069b(0xf13)], _0x823492 = _0x183672[_0x51069b(0x1ff)];
            _0xf326a2['length'] = _0x823492;
            var _0x3d156d = _0x4ffc7f['rootBone'];
            if (_0x3d156d) {
                var _0x4b2541 = _0x108d81[_0x51069b(0x2fc)](_0x9a7a40, _0x3d156d, _0x423afc['_tempArray0']);
                if (_0x4b2541)
                    _0x2738fb[_0x51069b(0xf11)] = _0x108d81[_0x51069b(0xf2c)](_0x19371e, _0x4b2541);
                else
                    _0x2738fb[_0x51069b(0xf11)] = _0x3d156d;
            }
            for (var _0x2b7ccd = 0x0; _0x2b7ccd < _0x183672[_0x51069b(0x1ff)]; _0x2b7ccd++) {
                _0x4b2541 = _0x108d81[_0x51069b(0x2fc)](_0x9a7a40, _0x183672[_0x2b7ccd], _0x423afc[_0x51069b(0xf2d)]);
                if (_0x4b2541)
                    _0xf326a2[_0x2b7ccd] = _0x108d81[_0x51069b(0xf2c)](_0x19371e, _0x4b2541);
                else
                    _0xf326a2[_0x2b7ccd] = _0x183672[_0x2b7ccd];
            }
            var _0x19ff7b = _0x4ffc7f[_0x51069b(0xf10)];
            _0x19ff7b && _0x19ff7b[_0x51069b(0x1f0)](_0x2738fb[_0x51069b(0xf10)]), super[_0x51069b(0x339)](_0x5424d4, _0x9a7a40, _0x19371e);
        }
        [_0x5659be(0x311)](_0x50f9c1 = !![]) {
            var _0x3f3d32 = _0x5659be;
            if (this['destroyed'])
                return;
            super[_0x3f3d32(0x311)](_0x50f9c1), this['_meshFilter'][_0x3f3d32(0x311)]();
        }
        [_0x5659be(0x5d2)]() {
            return new _0x423afc();
        }
    }
    _0x423afc[_0x5659be(0xf2d)] = [], _0x423afc['BONES'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xf2e)), _0x423afc[_0x5659be(0xf2f)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xf30)), _0x423afc[_0x5659be(0xf31)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xf32)), _0x423afc[_0x5659be(0xf33)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xf34));
    class _0x4b7423 extends _0x4bfb48 {
        constructor() {
            var _0x36f44d = _0x5659be;
            super(), this[_0x36f44d(0x68b)](_0x36f44d(0xf35)), this['_color'] = new _0x8fb80(0x1, 0x1, 0x1, 0x1), this[_0x36f44d(0x4e0)]['setVector'](_0x4b7423[_0x36f44d(0x6dc)], new _0x8fb80(0x1, 0x1, 0x0, 0x0)), this[_0x36f44d(0x4e0)][_0x36f44d(0x49d)](_0x4b7423[_0x36f44d(0x737)], new _0x8fb80(0x1, 0x1, 0x1, 0x1)), this[_0x36f44d(0x6fc)] = _0x4b7423[_0x36f44d(0x73a)];
        }
        static [_0x5659be(0x687)]() {
            var _0x52f1fc = _0x5659be;
            _0x4b7423[_0x52f1fc(0x72b)] = _0x84b6d6[_0x52f1fc(0x510)](_0x52f1fc(0x72c)), _0x4b7423['SHADERDEFINE_ADDTIVEFOG'] = _0x84b6d6[_0x52f1fc(0x510)]('ADDTIVEFOG');
        }
        get [_0x5659be(0x72d)]() {
            var _0x11c5ef = _0x5659be;
            return this[_0x11c5ef(0xd1b)]['x'];
        }
        set ['_TintColorR'](_0x8ffa44) {
            var _0x496742 = _0x5659be;
            this[_0x496742(0xd1b)]['x'] = _0x8ffa44, this['color'] = this[_0x496742(0xd1b)];
        }
        get [_0x5659be(0x72e)]() {
            return this['_color']['y'];
        }
        set [_0x5659be(0x72e)](_0x4eb0ea) {
            var _0x4ea001 = _0x5659be;
            this[_0x4ea001(0xd1b)]['y'] = _0x4eb0ea, this['color'] = this[_0x4ea001(0xd1b)];
        }
        get ['_TintColorB']() {
            return this['_color']['z'];
        }
        set ['_TintColorB'](_0x42bf72) {
            var _0x18a922 = _0x5659be;
            this[_0x18a922(0xd1b)]['z'] = _0x42bf72, this[_0x18a922(0x462)] = this[_0x18a922(0xd1b)];
        }
        get [_0x5659be(0x730)]() {
            return this['_color']['w'];
        }
        set [_0x5659be(0x730)](_0x3cb798) {
            var _0x4bfe0 = _0x5659be;
            this['_color']['w'] = _0x3cb798, this[_0x4bfe0(0x462)] = this[_0x4bfe0(0xd1b)];
        }
        get [_0x5659be(0x6f5)]() {
            var _0x44f850 = _0x5659be;
            return this[_0x44f850(0x4e0)][_0x44f850(0x49c)](_0x4b7423['TILINGOFFSET'])['x'];
        }
        set [_0x5659be(0x6f5)](_0x41f14b) {
            var _0x4f0d20 = _0x5659be, _0x1b477e = this[_0x4f0d20(0x4e0)][_0x4f0d20(0x49c)](_0x4b7423[_0x4f0d20(0x6dc)]);
            _0x1b477e['x'] = _0x41f14b, this[_0x4f0d20(0x6f6)] = _0x1b477e;
        }
        get [_0x5659be(0x6f7)]() {
            var _0x2d84e7 = _0x5659be;
            return this[_0x2d84e7(0x4e0)][_0x2d84e7(0x49c)](_0x4b7423['TILINGOFFSET'])['y'];
        }
        set ['_MainTex_STY'](_0x20cc65) {
            var _0x44c73 = _0x5659be, _0x34b94b = this[_0x44c73(0x4e0)][_0x44c73(0x49c)](_0x4b7423[_0x44c73(0x6dc)]);
            _0x34b94b['y'] = _0x20cc65, this['tilingOffset'] = _0x34b94b;
        }
        get [_0x5659be(0x6f8)]() {
            var _0x3032b4 = _0x5659be;
            return this[_0x3032b4(0x4e0)][_0x3032b4(0x49c)](_0x4b7423['TILINGOFFSET'])['z'];
        }
        set [_0x5659be(0x6f8)](_0x12b399) {
            var _0x4abc12 = _0x5659be, _0x95c611 = this[_0x4abc12(0x4e0)][_0x4abc12(0x49c)](_0x4b7423[_0x4abc12(0x6dc)]);
            _0x95c611['z'] = _0x12b399, this['tilingOffset'] = _0x95c611;
        }
        get [_0x5659be(0x6f9)]() {
            var _0x26fa85 = _0x5659be;
            return this[_0x26fa85(0x4e0)][_0x26fa85(0x49c)](_0x4b7423[_0x26fa85(0x6dc)])['w'];
        }
        set [_0x5659be(0x6f9)](_0x1bbd6f) {
            var _0x55b215 = _0x5659be, _0x3eb829 = this[_0x55b215(0x4e0)][_0x55b215(0x49c)](_0x4b7423[_0x55b215(0x6dc)]);
            _0x3eb829['w'] = _0x1bbd6f, this[_0x55b215(0x6f6)] = _0x3eb829;
        }
        set [_0x5659be(0x6fc)](_0x1d588e) {
            var _0x2ec81f = _0x5659be;
            switch (_0x1d588e) {
            case _0x4b7423[_0x2ec81f(0x72a)]:
                this[_0x2ec81f(0x6ae)] = _0x4bfb48['RENDERQUEUE_TRANSPARENT'], this[_0x2ec81f(0x6a0)] = ![], this[_0x2ec81f(0x698)] = ![], this[_0x2ec81f(0x696)] = _0x2aa393['CULL_NONE'], this['blend'] = _0x2aa393[_0x2ec81f(0x6c9)], this['blendSrc'] = _0x2aa393['BLENDPARAM_SRC_ALPHA'], this[_0x2ec81f(0x69b)] = _0x2aa393['BLENDPARAM_ONE'], this[_0x2ec81f(0x697)] = _0x2aa393[_0x2ec81f(0x6d3)], this[_0x2ec81f(0x4e0)]['addDefine'](_0x4b7423[_0x2ec81f(0x732)]);
                break;
            case _0x4b7423[_0x2ec81f(0x73a)]:
                this[_0x2ec81f(0x6ae)] = _0x4bfb48[_0x2ec81f(0x6b1)], this[_0x2ec81f(0x6a0)] = ![], this[_0x2ec81f(0x698)] = ![], this[_0x2ec81f(0x696)] = _0x2aa393[_0x2ec81f(0x6c8)], this[_0x2ec81f(0x695)] = _0x2aa393['BLEND_ENABLE_ALL'], this[_0x2ec81f(0x699)] = _0x2aa393[_0x2ec81f(0x6ff)], this[_0x2ec81f(0x69b)] = _0x2aa393[_0x2ec81f(0x700)], this[_0x2ec81f(0x697)] = _0x2aa393['DEPTHTEST_LESS'], this['_shaderValues']['removeDefine'](_0x4b7423[_0x2ec81f(0x732)]);
                break;
            default:
                throw new Error(_0x2ec81f(0xf36));
            }
        }
        get [_0x5659be(0x733)]() {
            var _0x389e62 = _0x5659be;
            return this[_0x389e62(0x72d)];
        }
        set [_0x5659be(0x733)](_0x23b066) {
            var _0x3d3586 = _0x5659be;
            this[_0x3d3586(0x72d)] = _0x23b066;
        }
        get [_0x5659be(0x734)]() {
            var _0x453cae = _0x5659be;
            return this[_0x453cae(0x72e)];
        }
        set [_0x5659be(0x734)](_0x1f3910) {
            var _0x5455d7 = _0x5659be;
            this[_0x5455d7(0x72e)] = _0x1f3910;
        }
        get [_0x5659be(0x735)]() {
            var _0x5a5bdf = _0x5659be;
            return this[_0x5a5bdf(0x72f)];
        }
        set [_0x5659be(0x735)](_0xf45c1d) {
            this['_TintColorB'] = _0xf45c1d;
        }
        get [_0x5659be(0x736)]() {
            return this['_TintColorA'];
        }
        set [_0x5659be(0x736)](_0x169459) {
            this['_TintColorA'] = _0x169459;
        }
        get [_0x5659be(0x462)]() {
            var _0x1ac894 = _0x5659be;
            return this[_0x1ac894(0x4e0)][_0x1ac894(0x49c)](_0x4b7423['TINTCOLOR']);
        }
        set [_0x5659be(0x462)](_0x289703) {
            var _0xf022ac = _0x5659be;
            this[_0xf022ac(0x4e0)]['setVector'](_0x4b7423[_0xf022ac(0x737)], _0x289703);
        }
        get [_0x5659be(0x738)]() {
            var _0x14eca1 = _0x5659be;
            return this[_0x14eca1(0x4e0)][_0x14eca1(0x4a4)](_0x4b7423['MAINTEXTURE']);
        }
        set ['texture'](_0x53cd41) {
            var _0x26efe2 = _0x5659be;
            if (_0x53cd41)
                this['_shaderValues']['addDefine'](_0x4b7423[_0x26efe2(0x72b)]);
            else
                this['_shaderValues'][_0x26efe2(0x493)](_0x4b7423[_0x26efe2(0x72b)]);
            this['_shaderValues'][_0x26efe2(0x4a2)](_0x4b7423['MAINTEXTURE'], _0x53cd41);
        }
        get ['tilingOffsetX']() {
            var _0x66b2f2 = _0x5659be;
            return this[_0x66b2f2(0x6f5)];
        }
        set [_0x5659be(0x704)](_0x2451d5) {
            var _0x5e8569 = _0x5659be;
            this[_0x5e8569(0x6f5)] = _0x2451d5;
        }
        get ['tilingOffsetY']() {
            var _0x576936 = _0x5659be;
            return this[_0x576936(0x6f7)];
        }
        set [_0x5659be(0x705)](_0x249514) {
            this['_MainTex_STY'] = _0x249514;
        }
        get [_0x5659be(0x739)]() {
            var _0x32b832 = _0x5659be;
            return this[_0x32b832(0x6f8)];
        }
        set ['tilingOffsetZ'](_0x1e966b) {
            this['_MainTex_STZ'] = _0x1e966b;
        }
        get [_0x5659be(0x706)]() {
            return this['_MainTex_STW'];
        }
        set [_0x5659be(0x706)](_0xfb5d2a) {
            var _0x23b1d4 = _0x5659be;
            this[_0x23b1d4(0x6f9)] = _0xfb5d2a;
        }
        get ['tilingOffset']() {
            var _0x46755b = _0x5659be;
            return this[_0x46755b(0x4e0)]['getVector'](_0x4b7423[_0x46755b(0x6dc)]);
        }
        set [_0x5659be(0x6f6)](_0x3978a8) {
            var _0x6aa97c = _0x5659be;
            _0x3978a8 ? this[_0x6aa97c(0x4e0)][_0x6aa97c(0x49d)](_0x4b7423[_0x6aa97c(0x6dc)], _0x3978a8) : this[_0x6aa97c(0x4e0)]['getVector'](_0x4b7423[_0x6aa97c(0x6dc)])['setValue'](0x1, 0x1, 0x0, 0x0);
        }
        ['clone']() {
            var _0x3442b0 = _0x5659be, _0x3b61d7 = new _0x4b7423();
            return this[_0x3442b0(0x1f0)](_0x3b61d7), _0x3b61d7;
        }
    }
    _0x4b7423[_0x5659be(0x73a)] = 0x0, _0x4b7423[_0x5659be(0x72a)] = 0x1, _0x4b7423[_0x5659be(0x72c)] = _0x84b6d6['propertyNameToID'](_0x5659be(0xf37)), _0x4b7423[_0x5659be(0x737)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xf38)), _0x4b7423[_0x5659be(0x6dc)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x725));
    class _0x407616 {
    }
    _0x407616[_0x5659be(0xf39)] = 0x0, _0x407616[_0x5659be(0xf3a)] = 0x1, function (_0x189434) {
        var _0x2e5c1a = _0x5659be;
        _0x189434[_0x189434[_0x2e5c1a(0xf3b)] = 0x0] = _0x2e5c1a(0xf3b), _0x189434[_0x189434['TransformZ'] = 0x1] = _0x2e5c1a(0xf3c);
    }(_0x71dec4[_0x5659be(0xf3d)] || (_0x71dec4['TrailAlignment'] = {}));
    class _0x183e46 {
        static get [_0x5659be(0xf3e)]() {
            return _0x183e46['_vertexDeclaration1'];
        }
        static get ['vertexDeclaration2']() {
            var _0x2f14ac = _0x5659be;
            return _0x183e46[_0x2f14ac(0xf3f)];
        }
        get ['vertexDeclaration']() {
            var _0x44761d = _0x5659be;
            return _0x183e46[_0x44761d(0xf40)];
        }
        static [_0x5659be(0x229)]() {
            var _0x1bc8ee = _0x5659be;
            _0x183e46['_vertexDeclaration1'] = new _0x330160(0x20, [
                new _0x1f18c6(0x0, _0x48a921['Vector3'], _0x183e46['TRAIL_POSITION0']),
                new _0x1f18c6(0xc, _0x48a921[_0x1bc8ee(0x45d)], _0x183e46[_0x1bc8ee(0xf41)]),
                new _0x1f18c6(0x18, _0x48a921[_0x1bc8ee(0xe0d)], _0x183e46[_0x1bc8ee(0xf42)]),
                new _0x1f18c6(0x1c, _0x48a921['Single'], _0x183e46[_0x1bc8ee(0xf43)])
            ]), _0x183e46[_0x1bc8ee(0xf3f)] = new _0x330160(0x14, [
                new _0x1f18c6(0x0, _0x48a921[_0x1bc8ee(0xe0d)], _0x183e46[_0x1bc8ee(0xf44)]),
                new _0x1f18c6(0x4, _0x48a921['Color'], _0x183e46['TRAIL_COLOR'])
            ]);
        }
    }
    _0x183e46['TRAIL_POSITION0'] = 0x0, _0x183e46[_0x5659be(0xf41)] = 0x1, _0x183e46[_0x5659be(0xf42)] = 0x2, _0x183e46[_0x5659be(0xf43)] = 0x3, _0x183e46[_0x5659be(0xf44)] = 0x4, _0x183e46[_0x5659be(0xf45)] = 0x5;
    class _0x23cb81 extends _0x319422 {
        constructor(_0x4bf79b) {
            var _0x1b499e = _0x5659be;
            super(), this[_0x1b499e(0xf46)] = 0x8, this[_0x1b499e(0xf47)] = 0x5, this[_0x1b499e(0xf48)] = 0x10, this[_0x1b499e(0xf49)] = 0x0, this[_0x1b499e(0xf4a)] = 0x0, this[_0x1b499e(0xf4b)] = ![], this[_0x1b499e(0xf4c)] = ![], this['_vertices1'] = null, this[_0x1b499e(0xf4d)] = null, this[_0x1b499e(0xf4e)] = new _0x3f70c5(), this[_0x1b499e(0x4f6)] = new _0x174c4a(), this['tmpColor'] = new _0x4e3117(), this[_0x1b499e(0xf4f)] = ![], this[_0x1b499e(0x3d3)] = _0x4bf79b, this[_0x1b499e(0xf50)] = this[_0x1b499e(0xf48)], this[_0x1b499e(0xf51)](this[_0x1b499e(0xf50)], this['_bufferState']);
            var _0x165a64 = this[_0x1b499e(0x3d3)][_0x1b499e(0x3d3)][_0x1b499e(0xf52)][_0x1b499e(0x80d)], _0x379e8d = this[_0x1b499e(0x3d3)][_0x1b499e(0x3d3)]['transform'][_0x1b499e(0x59e)];
            _0x165a64[_0x1b499e(0xa6b)](_0x379e8d), _0x165a64[_0x1b499e(0xa51)](_0x379e8d);
        }
        [_0x5659be(0xf51)](_0x3debdb, _0x3e68c1) {
            var _0x30ebdb = _0x5659be;
            this[_0x30ebdb(0xf53)] = new Float32Array(_0x3debdb), this[_0x30ebdb(0xf54)] = new Float64Array(_0x3debdb);
            var _0x42e015 = _0x218b83[_0x30ebdb(0x2f3)][_0x30ebdb(0x2f4)], _0x4bc1b5 = _0x3debdb * 0x2, _0x10e554 = _0x183e46[_0x30ebdb(0xf3e)], _0x25acd5 = _0x183e46['vertexDeclaration2'], _0x3ea1f8 = [], _0x1080b2 = _0x4bc1b5 * _0x10e554[_0x30ebdb(0x4e4)], _0x2450ee = _0x4bc1b5 * _0x25acd5[_0x30ebdb(0x4e4)], _0x1e6f03 = _0x1080b2 + _0x2450ee;
            this[_0x30ebdb(0xf55)] = new Float32Array(_0x4bc1b5 * this['_floatCountPerVertices1']), this[_0x30ebdb(0xf4d)] = new Float32Array(_0x4bc1b5 * this[_0x30ebdb(0xf47)]), this[_0x30ebdb(0xf56)] = new _0x57a6a2(_0x1080b2, _0x42e015[_0x30ebdb(0x4f8)], ![]), this[_0x30ebdb(0xf56)][_0x30ebdb(0x449)] = _0x10e554, this[_0x30ebdb(0xf57)] = new _0x57a6a2(_0x2450ee, _0x42e015[_0x30ebdb(0xa98)], ![]), this[_0x30ebdb(0xf57)][_0x30ebdb(0x449)] = _0x25acd5, _0x3ea1f8[_0x30ebdb(0x298)](this[_0x30ebdb(0xf56)]), _0x3ea1f8[_0x30ebdb(0x298)](this[_0x30ebdb(0xf57)]), _0x3e68c1['bind'](), _0x3e68c1[_0x30ebdb(0x4ef)](_0x3ea1f8), _0x3e68c1[_0x30ebdb(0x4fb)](), _0x218b83[_0x30ebdb(0x315)][_0x30ebdb(0xcdb)](_0x1e6f03, _0x1e6f03);
        }
        [_0x5659be(0xf58)]() {
            var _0x48b1b1 = _0x5659be, _0x4c2282 = this[_0x48b1b1(0xf4a)] - this[_0x48b1b1(0xf49)], _0x4819f8 = new Float32Array(this['_vertices1'][_0x48b1b1(0x448)], this[_0x48b1b1(0xf46)] * 0x2 * this['_activeIndex'] * 0x4, this['_floatCountPerVertices1'] * 0x2 * _0x4c2282), _0x2b6bbb = new Float32Array(this[_0x48b1b1(0xf4d)][_0x48b1b1(0x448)], this[_0x48b1b1(0xf47)] * 0x2 * this[_0x48b1b1(0xf49)] * 0x4, this['_floatCountPerVertices2'] * 0x2 * _0x4c2282), _0x52ed40 = new Float64Array(this[_0x48b1b1(0xf54)][_0x48b1b1(0x448)], this[_0x48b1b1(0xf49)] * 0x8, _0x4c2282), _0x25424b = new Float32Array(this['_subBirthTime']['buffer'], this[_0x48b1b1(0xf49)] * 0x4, _0x4c2282);
            if (_0x4c2282 === this[_0x48b1b1(0xf50)]) {
                var _0x538395 = this[_0x48b1b1(0xf56)][_0x48b1b1(0x443)] + this[_0x48b1b1(0xf57)][_0x48b1b1(0x443)];
                _0x218b83[_0x48b1b1(0x315)][_0x48b1b1(0xcdb)](-_0x538395, -_0x538395), this[_0x48b1b1(0xf56)][_0x48b1b1(0x311)](), this[_0x48b1b1(0xf57)][_0x48b1b1(0x311)](), this['_segementCount'] += this['_increaseSegementCount'], this['_resizeData'](this['_segementCount'], this[_0x48b1b1(0x4f6)]);
            }
            this['_vertices1']['set'](_0x4819f8, 0x0), this[_0x48b1b1(0xf4d)][_0x48b1b1(0x450)](_0x2b6bbb, 0x0), this['_subDistance']['set'](_0x52ed40, 0x0), this[_0x48b1b1(0xf53)][_0x48b1b1(0x450)](_0x25424b, 0x0), this[_0x48b1b1(0xf4a)] = _0x4c2282, this[_0x48b1b1(0xf49)] = 0x0, this[_0x48b1b1(0xf56)]['setData'](this['_vertices1']['buffer'], 0x0, this['_floatCountPerVertices1'] * 0x2 * this['_activeIndex'] * 0x4, this[_0x48b1b1(0xf46)] * 0x2 * _0x4c2282 * 0x4), this[_0x48b1b1(0xf57)][_0x48b1b1(0x4fd)](this[_0x48b1b1(0xf4d)][_0x48b1b1(0x448)], 0x0, this['_floatCountPerVertices2'] * 0x2 * this[_0x48b1b1(0xf49)] * 0x4, this['_floatCountPerVertices2'] * 0x2 * _0x4c2282 * 0x4);
        }
        [_0x5659be(0xf59)](_0x2771f1, _0x56b49b, _0x378082) {
            var _0x363af8 = _0x5659be;
            if (!_0x3f70c5['equals'](_0x56b49b, _0x378082)) {
                if (this[_0x363af8(0xf4a)] - this['_activeIndex'] === 0x0)
                    this[_0x363af8(0xf5a)](_0x2771f1, _0x378082);
                else
                    this[_0x363af8(0xf5b)](_0x2771f1, _0x378082);
            }
        }
        ['_addTrailByFirstPosition'](_0x274803, _0x141472) {
            var _0x485d96 = _0x5659be;
            this[_0x485d96(0xf4a)] === this['_segementCount'] && this[_0x485d96(0xf58)](), this[_0x485d96(0xf54)][this[_0x485d96(0xf4a)]] = 0x0, this['_subBirthTime'][this['_endIndex']] = this[_0x485d96(0x3d3)][_0x485d96(0xf5c)], this[_0x485d96(0xf4a)]++, _0x141472['cloneTo'](this[_0x485d96(0xf4e)]), this[_0x485d96(0xf4b)] = !![];
        }
        [_0x5659be(0xf5b)](_0x3952da, _0x59f819) {
            var _0x2c17f6 = _0x5659be, _0x2bbcd8 = _0x23cb81[_0x2c17f6(0x59b)], _0x2156a2 = _0x23cb81[_0x2c17f6(0x3d6)];
            switch (this['_owner'][_0x2c17f6(0xf5d)]) {
            case _0x71dec4[_0x2c17f6(0xf3d)][_0x2c17f6(0xf3b)]:
                var _0x546b18 = _0x3952da[_0x2c17f6(0x85d)];
                _0x3f70c5[_0x2c17f6(0x20e)](_0x59f819, _0x546b18, _0x23cb81[_0x2c17f6(0x855)]), _0x3f70c5['transformCoordinate'](this[_0x2c17f6(0xf4e)], _0x546b18, _0x23cb81['_tempVector34']), _0x3f70c5[_0x2c17f6(0x210)](_0x23cb81[_0x2c17f6(0x855)], _0x23cb81[_0x2c17f6(0x853)], _0x2bbcd8), _0x3f70c5[_0x2c17f6(0x211)](_0x23cb81[_0x2c17f6(0x855)], _0x2bbcd8, _0x2156a2);
                break;
            case _0x71dec4[_0x2c17f6(0xf3d)][_0x2c17f6(0xf3c)]:
                _0x3f70c5[_0x2c17f6(0x210)](_0x59f819, this['_lastFixedVertexPosition'], _0x2bbcd8);
                var _0x5d3d0d = _0x23cb81[_0x2c17f6(0x866)];
                this['_owner'][_0x2c17f6(0x3d3)]['transform'][_0x2c17f6(0x5ae)](_0x5d3d0d), _0x3f70c5['cross'](_0x2bbcd8, _0x5d3d0d, _0x2156a2);
                break;
            }
            _0x3f70c5[_0x2c17f6(0x1f2)](_0x2156a2, _0x2156a2), _0x3f70c5[_0x2c17f6(0x1ee)](_0x2156a2, this[_0x2c17f6(0x3d3)][_0x2c17f6(0xf5e)] / 0x2, _0x2156a2);
            var _0x5a2168 = _0x3f70c5[_0x2c17f6(0x1f3)](_0x2bbcd8), _0x5d5910, _0x221d95;
            this[_0x2c17f6(0xf4b)] && (this['_updateVerticesByPositionData'](_0x59f819, _0x2156a2, this['_endIndex'] - 0x1), this['_needAddFirstVertex'] = ![]), _0x5a2168 - this[_0x2c17f6(0x3d3)][_0x2c17f6(0xf5f)] >= _0x57b8d6[_0x2c17f6(0x1eb)] ? (this[_0x2c17f6(0xf4c)] ? (_0x5d5910 = this['_endIndex'] - 0x1, _0x221d95 = _0x5a2168 - this['_subDistance'][_0x5d5910], this[_0x2c17f6(0xf60)](_0x59f819, _0x2156a2, _0x5a2168, _0x5d5910), this[_0x2c17f6(0x3d3)][_0x2c17f6(0xf61)] += _0x221d95) : (this[_0x2c17f6(0xf4a)] === this[_0x2c17f6(0xf50)] && this[_0x2c17f6(0xf58)](), this[_0x2c17f6(0xf60)](_0x59f819, _0x2156a2, _0x5a2168, this[_0x2c17f6(0xf4a)]), this['_owner']['_totalLength'] += _0x5a2168, this[_0x2c17f6(0xf4a)]++), _0x59f819['cloneTo'](this[_0x2c17f6(0xf4e)]), this[_0x2c17f6(0xf4c)] = ![]) : (this[_0x2c17f6(0xf4c)] ? (_0x5d5910 = this['_endIndex'] - 0x1, _0x221d95 = _0x5a2168 - this[_0x2c17f6(0xf54)][_0x5d5910], this[_0x2c17f6(0xf60)](_0x59f819, _0x2156a2, _0x5a2168, _0x5d5910), this[_0x2c17f6(0x3d3)]['_totalLength'] += _0x221d95) : (this[_0x2c17f6(0xf4a)] === this[_0x2c17f6(0xf50)] && this[_0x2c17f6(0xf58)](), this[_0x2c17f6(0xf60)](_0x59f819, _0x2156a2, _0x5a2168, this[_0x2c17f6(0xf4a)]), this[_0x2c17f6(0x3d3)][_0x2c17f6(0xf61)] += _0x5a2168, this[_0x2c17f6(0xf4a)]++), this[_0x2c17f6(0xf4c)] = !![]);
        }
        [_0x5659be(0xf62)](_0x6f1ea0, _0x209db1, _0x42d8a1) {
            var _0x22954c = _0x5659be, _0x1a9f7c = this[_0x22954c(0xf46)] * 0x2 * _0x42d8a1, _0x413c0c = this[_0x22954c(0x3d3)][_0x22954c(0xf5c)];
            this[_0x22954c(0xf55)][_0x1a9f7c] = _0x6f1ea0['x'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x1] = _0x6f1ea0['y'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x2] = _0x6f1ea0['z'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x3] = -_0x209db1['x'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x4] = -_0x209db1['y'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x5] = -_0x209db1['z'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x6] = _0x413c0c, this['_vertices1'][_0x1a9f7c + 0x7] = 0x1, this[_0x22954c(0xf55)][_0x1a9f7c + 0x8] = _0x6f1ea0['x'], this[_0x22954c(0xf55)][_0x1a9f7c + 0x9] = _0x6f1ea0['y'], this['_vertices1'][_0x1a9f7c + 0xa] = _0x6f1ea0['z'], this[_0x22954c(0xf55)][_0x1a9f7c + 0xb] = _0x209db1['x'], this['_vertices1'][_0x1a9f7c + 0xc] = _0x209db1['y'], this[_0x22954c(0xf55)][_0x1a9f7c + 0xd] = _0x209db1['z'], this[_0x22954c(0xf55)][_0x1a9f7c + 0xe] = _0x413c0c, this[_0x22954c(0xf55)][_0x1a9f7c + 0xf] = 0x0;
            var _0x26c161 = this[_0x22954c(0x3d3)][_0x22954c(0x3d3)]['trailRenderer']['bounds'], _0x20687f = _0x26c161[_0x22954c(0xa4f)](), _0x4319d6 = _0x26c161[_0x22954c(0x828)](), _0x27d4ea = _0x23cb81[_0x22954c(0x867)], _0x518fac = _0x23cb81[_0x22954c(0x847)], _0x20053d = _0x23cb81['_tempVector32'];
            _0x3f70c5[_0x22954c(0x201)](_0x6f1ea0, _0x209db1, _0x27d4ea), _0x3f70c5[_0x22954c(0x210)](_0x6f1ea0, _0x209db1, _0x518fac), _0x3f70c5[_0x22954c(0x204)](_0x518fac, _0x27d4ea, _0x20053d), _0x3f70c5['min'](_0x20687f, _0x20053d, _0x20687f), _0x26c161[_0x22954c(0xa6b)](_0x20687f), _0x3f70c5[_0x22954c(0x205)](_0x27d4ea, _0x518fac, _0x20053d), _0x3f70c5[_0x22954c(0x205)](_0x4319d6, _0x20053d, _0x4319d6), _0x26c161[_0x22954c(0xa51)](_0x4319d6);
            var _0x5c3f5f = this[_0x22954c(0xf46)] * 0x2;
            this['_vertexBuffer1'][_0x22954c(0x4fd)](this['_vertices1'][_0x22954c(0x448)], _0x1a9f7c * 0x4, _0x1a9f7c * 0x4, _0x5c3f5f * 0x4);
        }
        [_0x5659be(0xf60)](_0x18e262, _0x3e3c06, _0x21883f, _0x18f007) {
            var _0xc7365a = _0x5659be;
            this['_updateVerticesByPositionData'](_0x18e262, _0x3e3c06, _0x18f007), this[_0xc7365a(0xf54)][_0x18f007] = _0x21883f, this['_subBirthTime'][_0x18f007] = this[_0xc7365a(0x3d3)][_0xc7365a(0xf5c)];
        }
        [_0x5659be(0xf63)]() {
            var _0x10f2f9 = _0x5659be, _0x45a6b8, _0x1de562, _0x3f8836;
            if (this['_disappearBoundsMode']) {
                _0x45a6b8 = this[_0x10f2f9(0x3d3)]['_owner'][_0x10f2f9(0xf52)]['bounds'];
                var _0x196cd8 = this[_0x10f2f9(0x3d3)][_0x10f2f9(0x3d3)][_0x10f2f9(0x3cc)][_0x10f2f9(0x59e)];
                _0x45a6b8[_0x10f2f9(0xa6b)](_0x196cd8), _0x45a6b8[_0x10f2f9(0xa51)](_0x196cd8), _0x1de562 = _0x45a6b8[_0x10f2f9(0xa4f)](), _0x3f8836 = _0x45a6b8[_0x10f2f9(0x828)]();
            }
            var _0x3b65ef = this[_0x10f2f9(0xf4a)], _0x37c5de = 0x0, _0x78cb07 = this['_owner']['colorGradient'], _0xa05430 = _0x78cb07[_0x10f2f9(0xf64)] - 0x1, _0x115ab3 = _0x78cb07[_0x10f2f9(0xcfd)] - 0x1, _0x3ead69 = this['_owner'][_0x10f2f9(0xf61)], _0x2c97d1 = this[_0x10f2f9(0xf47)] * 0x2;
            for (var _0x2533ca = this[_0x10f2f9(0xf49)]; _0x2533ca < _0x3b65ef; _0x2533ca++) {
                _0x2533ca !== this[_0x10f2f9(0xf49)] && (_0x37c5de += this['_subDistance'][_0x2533ca]);
                var _0x9bce90, _0xcfda6e;
                this['_owner'][_0x10f2f9(0xf65)] == _0x407616[_0x10f2f9(0xf39)] ? (_0x9bce90 = 0x1 - _0x37c5de / _0x3ead69, _0xcfda6e = _0x9bce90) : (_0xcfda6e = 0x1 - _0x37c5de / _0x3ead69, _0x9bce90 = 0x1 - (_0x3ead69 - _0x37c5de));
                _0x115ab3 = _0x78cb07[_0x10f2f9(0xd05)](_0xcfda6e, this[_0x10f2f9(0xf66)], _0x115ab3, !![]), _0xa05430 = _0x78cb07['evaluateColorAlpha'](_0xcfda6e, this['tmpColor'], _0xa05430, !![]);
                var _0x549392 = _0x2533ca * _0x2c97d1;
                this[_0x10f2f9(0xf4d)][_0x549392 + 0x0] = _0x9bce90, this[_0x10f2f9(0xf4d)][_0x549392 + 0x1] = this[_0x10f2f9(0xf66)]['r'], this[_0x10f2f9(0xf4d)][_0x549392 + 0x2] = this[_0x10f2f9(0xf66)]['g'], this[_0x10f2f9(0xf4d)][_0x549392 + 0x3] = this['tmpColor']['b'], this[_0x10f2f9(0xf4d)][_0x549392 + 0x4] = this[_0x10f2f9(0xf66)]['a'], this[_0x10f2f9(0xf4d)][_0x549392 + 0x5] = _0x9bce90, this['_vertices2'][_0x549392 + 0x6] = this['tmpColor']['r'], this['_vertices2'][_0x549392 + 0x7] = this[_0x10f2f9(0xf66)]['g'], this[_0x10f2f9(0xf4d)][_0x549392 + 0x8] = this[_0x10f2f9(0xf66)]['b'], this[_0x10f2f9(0xf4d)][_0x549392 + 0x9] = this[_0x10f2f9(0xf66)]['a'];
                if (this[_0x10f2f9(0xf4f)]) {
                    var _0x34dce7 = this[_0x10f2f9(0xf46)] * 0x2 * _0x2533ca, _0x318b66 = _0x23cb81[_0x10f2f9(0x866)], _0x2ccdbe = _0x23cb81[_0x10f2f9(0x855)], _0x33fb9b = _0x23cb81[_0x10f2f9(0x853)];
                    _0x318b66['setValue'](this[_0x10f2f9(0xf55)][_0x34dce7 + 0x0], this[_0x10f2f9(0xf55)][_0x34dce7 + 0x1], this['_vertices1'][_0x34dce7 + 0x2]), _0x2ccdbe[_0x10f2f9(0x1fa)](this['_vertices1'][_0x34dce7 + 0x3], this[_0x10f2f9(0xf55)][_0x34dce7 + 0x4], this['_vertices1'][_0x34dce7 + 0x5]), _0x3f70c5[_0x10f2f9(0x201)](_0x318b66, _0x2ccdbe, _0x33fb9b), _0x3f70c5[_0x10f2f9(0x204)](_0x33fb9b, _0x1de562, _0x1de562), _0x3f70c5[_0x10f2f9(0x205)](_0x33fb9b, _0x3f8836, _0x3f8836), _0x3f70c5[_0x10f2f9(0x210)](_0x318b66, _0x2ccdbe, _0x33fb9b), _0x3f70c5[_0x10f2f9(0x204)](_0x33fb9b, _0x1de562, _0x1de562), _0x3f70c5[_0x10f2f9(0x205)](_0x33fb9b, _0x3f8836, _0x3f8836);
                }
            }
            this['_disappearBoundsMode'] && (_0x45a6b8['setMin'](_0x1de562), _0x45a6b8[_0x10f2f9(0xa51)](_0x3f8836), this[_0x10f2f9(0xf4f)] = ![]);
            var _0x49b9bb = this[_0x10f2f9(0xf49)] * _0x2c97d1;
            this[_0x10f2f9(0xf57)][_0x10f2f9(0x4fd)](this[_0x10f2f9(0xf4d)]['buffer'], _0x49b9bb * 0x4, _0x49b9bb * 0x4, (_0x3b65ef * _0x2c97d1 - _0x49b9bb) * 0x4);
        }
        ['_updateDisappear']() {
            var _0x5ec6a0 = _0x5659be, _0x1730cb = this[_0x5ec6a0(0xf4a)];
            for (var _0x517e4f = this[_0x5ec6a0(0xf49)]; _0x517e4f < _0x1730cb; _0x517e4f++) {
                if (this['_owner']['_curtime'] - this[_0x5ec6a0(0xf53)][_0x517e4f] >= this[_0x5ec6a0(0x3d3)][_0x5ec6a0(0x268)] + _0x57b8d6[_0x5ec6a0(0x1eb)]) {
                    var _0xb37606 = _0x517e4f + 0x1;
                    if (_0xb37606 !== _0x1730cb)
                        this['_owner'][_0x5ec6a0(0xf61)] -= this['_subDistance'][_0xb37606];
                    if (this[_0x5ec6a0(0xf4c)] && _0xb37606 === _0x1730cb - 0x1) {
                        var _0x106133 = this[_0x5ec6a0(0xf4e)];
                        _0x106133['x'] = this[_0x5ec6a0(0xf55)][0x0], _0x106133['y'] = this[_0x5ec6a0(0xf55)][0x1], _0x106133['z'] = this[_0x5ec6a0(0xf55)][0x2], this['_isTempEndVertex'] = ![];
                    }
                    this[_0x5ec6a0(0xf49)]++, this[_0x5ec6a0(0xf4f)] = !![];
                } else
                    break;
            }
        }
        [_0x5659be(0xa5d)]() {
            var _0x359efc = _0x5659be;
            return _0x23cb81[_0x359efc(0xa68)];
        }
        [_0x5659be(0x5e8)](_0x49ede3) {
            var _0x339a89 = _0x5659be;
            return this[_0x339a89(0xf4a)] - this[_0x339a89(0xf49)] > 0x1;
        }
        [_0x5659be(0x5e6)](_0x3631e8) {
            var _0x447a6f = _0x5659be;
            this['_bufferState']['bind']();
            var _0xfabe31 = _0x218b83[_0x447a6f(0x2f3)]['instance'], _0x1d7def = this[_0x447a6f(0xf49)] * 0x2, _0x3afcab = this[_0x447a6f(0xf4a)] * 0x2 - _0x1d7def;
            _0xfabe31[_0x447a6f(0x503)](_0xfabe31[_0x447a6f(0x4ff)], _0x1d7def, _0x3afcab), _0x218b83[_0x447a6f(0x500)][_0x447a6f(0x501)]++, _0x218b83[_0x447a6f(0x500)][_0x447a6f(0x62a)] += _0x3afcab - 0x2;
        }
        [_0x5659be(0x311)]() {
            var _0x1b2a1b = _0x5659be;
            super[_0x1b2a1b(0x311)]();
            var _0x19bd36 = this[_0x1b2a1b(0xf56)][_0x1b2a1b(0x443)] + this[_0x1b2a1b(0xf57)]['_byteLength'];
            _0x218b83[_0x1b2a1b(0x315)][_0x1b2a1b(0xcdb)](-_0x19bd36, -_0x19bd36), this['_bufferState'][_0x1b2a1b(0x311)](), this['_vertexBuffer1'][_0x1b2a1b(0x311)](), this['_vertexBuffer2']['destroy'](), this[_0x1b2a1b(0x4f6)] = null, this[_0x1b2a1b(0xf55)] = null, this[_0x1b2a1b(0xf56)] = null, this[_0x1b2a1b(0xf4d)] = null, this[_0x1b2a1b(0xf57)] = null, this[_0x1b2a1b(0xf53)] = null, this[_0x1b2a1b(0xf54)] = null, this[_0x1b2a1b(0xf4e)] = null, this[_0x1b2a1b(0xf4f)] = ![];
        }
        [_0x5659be(0x496)]() {
            var _0x584152 = _0x5659be;
            this[_0x584152(0xf49)] = 0x0, this[_0x584152(0xf4a)] = 0x0, this[_0x584152(0xf4f)] = ![], this[_0x584152(0xf53)][_0x584152(0xf67)](0x0), this['_subDistance'][_0x584152(0xf67)](0x0), this[_0x584152(0xf50)] = 0x0, this[_0x584152(0xf4c)] = ![], this[_0x584152(0xf4b)] = ![], this[_0x584152(0xf4e)]['setValue'](0x0, 0x0, 0x0);
        }
    }
    _0x23cb81[_0x5659be(0xf68)] = 0x0, _0x23cb81[_0x5659be(0xf69)] = 0x1, _0x23cb81[_0x5659be(0x59b)] = new _0x3f70c5(), _0x23cb81['_tempVector31'] = new _0x3f70c5(), _0x23cb81['_tempVector32'] = new _0x3f70c5(), _0x23cb81['_tempVector33'] = new _0x3f70c5(), _0x23cb81['_tempVector34'] = new _0x3f70c5(), _0x23cb81[_0x5659be(0x867)] = new _0x3f70c5(), _0x23cb81[_0x5659be(0x847)] = new _0x3f70c5(), _0x23cb81['_type'] = _0x319422[_0x5659be(0xa60)]++;
    class _0x46f57b {
        constructor(_0x23ba54) {
            var _0x26564f = _0x5659be;
            this['_totalLength'] = 0x0, this[_0x26564f(0xf6a)] = new _0x3f70c5(), this['_curtime'] = 0x0, this['alignment'] = _0x46f57b[_0x26564f(0xf68)], this[_0x26564f(0x3d3)] = _0x23ba54, this[_0x26564f(0xf6b)](), this[_0x26564f(0xf6c)]();
        }
        get ['time']() {
            return this['_time'];
        }
        set ['time'](_0x2d7e72) {
            var _0x1ae59e = _0x5659be;
            this['_time'] = _0x2d7e72, this[_0x1ae59e(0x3d3)]['_render'][_0x1ae59e(0x4e0)]['setNumber'](_0x46f57b[_0x1ae59e(0xf6d)], _0x2d7e72);
        }
        get [_0x5659be(0xf5f)]() {
            var _0x1da613 = _0x5659be;
            return this[_0x1da613(0xf6e)];
        }
        set [_0x5659be(0xf5f)](_0x311676) {
            var _0x262f1 = _0x5659be;
            this[_0x262f1(0xf6e)] = _0x311676;
        }
        get [_0x5659be(0xf5e)]() {
            var _0x23af7e = _0x5659be;
            return this[_0x23af7e(0xf6f)];
        }
        set [_0x5659be(0xf5e)](_0x4b346a) {
            this['_widthMultiplier'] = _0x4b346a;
        }
        get ['widthCurve']() {
            var _0x3cea6a = _0x5659be;
            return this[_0x3cea6a(0xf70)];
        }
        set [_0x5659be(0xf71)](_0x3a356d) {
            var _0x2588df = _0x5659be;
            this[_0x2588df(0xf70)] = _0x3a356d;
            var _0x17b0dc = new Float32Array(_0x3a356d[_0x2588df(0x1ff)] * 0x4), _0x2f43ae, _0xfc85ca, _0x5d25ae = 0x0;
            for (_0x2f43ae = 0x0, _0xfc85ca = _0x3a356d['length']; _0x2f43ae < _0xfc85ca; _0x2f43ae++) {
                _0x17b0dc[_0x5d25ae++] = _0x3a356d[_0x2f43ae][_0x2588df(0x268)], _0x17b0dc[_0x5d25ae++] = _0x3a356d[_0x2f43ae][_0x2588df(0x269)], _0x17b0dc[_0x5d25ae++] = _0x3a356d[_0x2f43ae][_0x2588df(0x26a)], _0x17b0dc[_0x5d25ae++] = _0x3a356d[_0x2f43ae][_0x2588df(0x26b)];
            }
            this[_0x2588df(0x3d3)][_0x2588df(0x5e6)][_0x2588df(0x4e0)][_0x2588df(0x574)](_0x46f57b[_0x2588df(0xf72)], _0x17b0dc), this[_0x2588df(0x3d3)][_0x2588df(0x5e6)][_0x2588df(0x4e0)]['setInt'](_0x46f57b[_0x2588df(0xf73)], _0x3a356d[_0x2588df(0x1ff)]);
        }
        get ['colorGradient']() {
            var _0x49ebea = _0x5659be;
            return this[_0x49ebea(0xf74)];
        }
        set [_0x5659be(0xf75)](_0x320d59) {
            var _0x54b69e = _0x5659be;
            this[_0x54b69e(0xf74)] = _0x320d59;
        }
        get [_0x5659be(0xf65)]() {
            return this['_textureMode'];
        }
        set [_0x5659be(0xf65)](_0x3fdad5) {
            var _0x13605d = _0x5659be;
            this[_0x13605d(0xf76)] = _0x3fdad5;
        }
        [_0x5659be(0xf6c)]() {
            var _0x2369a7 = _0x5659be, _0x5965ed = this[_0x2369a7(0x3d3)][_0x2369a7(0x5e6)], _0x241e38 = _0x5965ed[_0x2369a7(0x600)], _0x16d613 = _0x5965ed[_0x2369a7(0xb18)][0x0];
            _0x16d613 || (_0x16d613 = _0x4b7423[_0x2369a7(0xb3a)]);
            var _0x46c0ab = new _0x5551c8();
            _0x46c0ab['setTransform'](this[_0x2369a7(0x3d3)][_0x2369a7(0x3ca)]), _0x46c0ab[_0x2369a7(0x506)] = _0x5965ed, _0x46c0ab[_0x2369a7(0x8d6)] = _0x16d613, this[_0x2369a7(0xf77)] = new _0x23cb81(this), _0x46c0ab[_0x2369a7(0xaba)](this[_0x2369a7(0xf77)]), _0x241e38[_0x2369a7(0x298)](_0x46c0ab);
        }
        [_0x5659be(0x3b3)](_0x51ad59) {
            var _0x32b320 = _0x5659be, _0x473235 = this[_0x32b320(0x3d3)][_0x32b320(0x5e6)];
            this[_0x32b320(0xf5c)] += _0x51ad59[_0x32b320(0x5da)][_0x32b320(0x3b4)][_0x32b320(0x3b5)] / 0x3e8, _0x473235[_0x32b320(0x4e0)][_0x32b320(0x4af)](_0x46f57b[_0x32b320(0xf78)], this[_0x32b320(0xf5c)]);
            var _0xe86123 = this['_owner'][_0x32b320(0x3cc)][_0x32b320(0x59e)], _0x232b99 = _0x473235[_0x32b320(0x600)][0x0][_0x32b320(0x5f0)];
            _0x232b99[_0x32b320(0xf79)](), _0x232b99[_0x32b320(0xf59)](_0x51ad59[_0x32b320(0x645)], this[_0x32b320(0xf6a)], _0xe86123), _0x232b99[_0x32b320(0xf63)](), _0xe86123[_0x32b320(0x1f0)](this[_0x32b320(0xf6a)]);
        }
        [_0x5659be(0xf6b)]() {
            var _0x5f0c1e = _0x5659be;
            this[_0x5f0c1e(0x268)] = 0x5, this[_0x5f0c1e(0xf5f)] = 0.1, this['widthMultiplier'] = 0x1, this[_0x5f0c1e(0xf65)] = _0x407616[_0x5f0c1e(0xf39)];
            var _0x4c8647 = [], _0xf0d3a1 = new _0x336653();
            _0xf0d3a1[_0x5f0c1e(0x268)] = 0x0, _0xf0d3a1[_0x5f0c1e(0x269)] = 0x0, _0xf0d3a1[_0x5f0c1e(0x26a)] = 0x0, _0xf0d3a1[_0x5f0c1e(0x26b)] = 0x1, _0x4c8647[_0x5f0c1e(0x298)](_0xf0d3a1);
            var _0x40e582 = new _0x336653();
            _0x40e582['time'] = 0x1, _0x40e582[_0x5f0c1e(0x269)] = 0x0, _0x40e582[_0x5f0c1e(0x26a)] = 0x0, _0x40e582[_0x5f0c1e(0x26b)] = 0x1, _0x4c8647['push'](_0x40e582), this[_0x5f0c1e(0xf71)] = _0x4c8647;
            var _0x5222bb = new _0x9a260b(0x2, 0x2);
            _0x5222bb[_0x5f0c1e(0xcfc)] = _0x315143[_0x5f0c1e(0xd06)], _0x5222bb['addColorRGB'](0x0, _0x4e3117[_0x5f0c1e(0xf7a)]), _0x5222bb[_0x5f0c1e(0xcff)](0x1, _0x4e3117['WHITE']), _0x5222bb[_0x5f0c1e(0xf04)](0x0, 0x1), _0x5222bb['addColorAlpha'](0x1, 0x1), this[_0x5f0c1e(0xf75)] = _0x5222bb;
        }
        [_0x5659be(0x311)]() {
            var _0x120b7f = _0x5659be;
            this[_0x120b7f(0xf77)][_0x120b7f(0x311)](), this[_0x120b7f(0xf77)] = null, this[_0x120b7f(0xf70)] = null, this[_0x120b7f(0xf74)] = null;
        }
        ['clear']() {
            var _0x36a8d4 = _0x5659be;
            this[_0x36a8d4(0xf77)][_0x36a8d4(0x496)](), this[_0x36a8d4(0xf6a)]['setValue'](0x0, 0x0, 0x0), this['_curtime'] = 0x0, this[_0x36a8d4(0xf61)] = 0x0;
        }
    }
    _0x46f57b[_0x5659be(0xf78)] = _0x84b6d6['propertyNameToID']('u_CurTime'), _0x46f57b['LIFETIME'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xf7b)), _0x46f57b[_0x5659be(0xf72)] = _0x84b6d6[_0x5659be(0x526)]('u_WidthCurve'), _0x46f57b[_0x5659be(0xf73)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xf7c)), _0x46f57b[_0x5659be(0xf68)] = 0x0, _0x46f57b['ALIGNMENT_TRANSFORM_Z'] = 0x1;
    class _0x3ff0dc extends _0x55d32a {
        constructor(_0x38ffb4) {
            var _0x4f45da = _0x5659be;
            super(_0x38ffb4), this[_0x4f45da(0x5de)] = new _0x3ed76a();
        }
        ['_calculateBoundingBox']() {
        }
        [_0x5659be(0x813)](_0x57ab14, _0x10e921) {
            var _0x576334 = _0x5659be;
            this[_0x576334(0x3d3)][_0x576334(0xf7d)][_0x576334(0x3b3)](_0x10e921);
            if (_0x57ab14)
                return _0x57ab14['intersects'](this[_0x576334(0x80d)][_0x576334(0x80e)]());
            else
                return !![];
        }
        [_0x5659be(0x82c)](_0x1fafe0) {
            var _0x2b81a1 = _0x5659be;
            this['_owner']['trailFilter'][_0x2b81a1(0x3b3)](_0x1fafe0);
        }
        [_0x5659be(0x5f3)](_0x570d60, _0x2912f8) {
            super['_renderUpdate'](_0x570d60, _0x2912f8);
        }
        ['_renderUpdateWithCamera'](_0x59332c, _0xd960a3) {
            var _0x4c13d7 = _0x5659be, _0x360e93 = _0x59332c[_0x4c13d7(0x5dc)];
            _0xd960a3 ? (_0x3ed76a[_0x4c13d7(0x202)](_0x360e93, _0xd960a3[_0x4c13d7(0x3ce)], this[_0x4c13d7(0x5de)]), this['_shaderValues'][_0x4c13d7(0x4a0)](_0x356e58['MVPMATRIX'], this[_0x4c13d7(0x5de)])) : this[_0x4c13d7(0x4e0)]['setMatrix4x4'](_0x356e58['MVPMATRIX'], _0x360e93);
        }
    }
    class _0x5e19e7 extends _0x200920 {
        constructor(_0x683435 = null) {
            var _0x47c4d6 = _0x5659be;
            super(_0x683435), this[_0x47c4d6(0x5e6)] = new _0x3ff0dc(this), this[_0x47c4d6(0xb35)] = new _0x46f57b(this);
        }
        static [_0x5659be(0x229)]() {
        }
        get ['trailFilter']() {
            return this['_geometryFilter'];
        }
        get ['trailRenderer']() {
            var _0x172218 = _0x5659be;
            return this[_0x172218(0x5e6)];
        }
        [_0x5659be(0x318)](_0x1d589e, _0x438cbf) {
            var _0x31a1b5 = _0x5659be;
            super[_0x31a1b5(0x318)](_0x1d589e, _0x438cbf);
            var _0x1aa8e6 = this[_0x31a1b5(0x5e6)], _0x25faeb = this[_0x31a1b5(0xb35)], _0x12f4aa, _0x335dc8, _0x9e52e7 = _0x1d589e['materials'];
            if (_0x9e52e7) {
                var _0x534cd1 = _0x1aa8e6[_0x31a1b5(0xb18)], _0x5283d4 = _0x9e52e7[_0x31a1b5(0x1ff)];
                _0x534cd1[_0x31a1b5(0x1ff)] = _0x5283d4;
                for (_0x12f4aa = 0x0; _0x12f4aa < _0x5283d4; _0x12f4aa++)
                    _0x534cd1[_0x12f4aa] = _0x218b83[_0x31a1b5(0x3b1)]['getRes'](_0x9e52e7[_0x12f4aa][_0x31a1b5(0x691)]);
                _0x1aa8e6['sharedMaterials'] = _0x534cd1;
            }
            _0x25faeb[_0x31a1b5(0x268)] = _0x1d589e[_0x31a1b5(0x268)], _0x25faeb['minVertexDistance'] = _0x1d589e[_0x31a1b5(0xf5f)], _0x25faeb[_0x31a1b5(0xf5e)] = _0x1d589e[_0x31a1b5(0xf5e)], _0x25faeb[_0x31a1b5(0xf65)] = _0x1d589e['textureMode'], _0x1d589e[_0x31a1b5(0xf5d)] != null && (_0x25faeb[_0x31a1b5(0xf5d)] = _0x1d589e['alignment']);
            var _0x48bdc9 = [], _0x37e7e7 = _0x1d589e['widthCurve'];
            for (_0x12f4aa = 0x0, _0x335dc8 = _0x37e7e7[_0x31a1b5(0x1ff)]; _0x12f4aa < _0x335dc8; _0x12f4aa++) {
                var _0x39f330 = new _0x336653();
                _0x39f330[_0x31a1b5(0x268)] = _0x37e7e7[_0x12f4aa]['time'], _0x39f330[_0x31a1b5(0x269)] = _0x37e7e7[_0x12f4aa][_0x31a1b5(0x269)], _0x39f330[_0x31a1b5(0x26a)] = _0x37e7e7[_0x12f4aa]['outTangent'], _0x39f330[_0x31a1b5(0x26b)] = _0x37e7e7[_0x12f4aa][_0x31a1b5(0x26b)], _0x48bdc9[_0x31a1b5(0x298)](_0x39f330);
            }
            _0x25faeb[_0x31a1b5(0xf71)] = _0x48bdc9;
            var _0x495045 = _0x1d589e[_0x31a1b5(0xf75)], _0xe64b2f = _0x495045['colorKeys'], _0xd7cff6 = _0x495045[_0x31a1b5(0xf7e)], _0x1e1d50 = new _0x9a260b(_0xe64b2f[_0x31a1b5(0x1ff)], _0xd7cff6['length']);
            _0x1e1d50[_0x31a1b5(0xcfc)] = _0x495045['mode'];
            for (_0x12f4aa = 0x0, _0x335dc8 = _0xe64b2f[_0x31a1b5(0x1ff)]; _0x12f4aa < _0x335dc8; _0x12f4aa++) {
                var _0x3b46ce = _0xe64b2f[_0x12f4aa];
                _0x1e1d50[_0x31a1b5(0xcff)](_0x3b46ce[_0x31a1b5(0x268)], new _0x4e3117(_0x3b46ce[_0x31a1b5(0x26b)][0x0], _0x3b46ce[_0x31a1b5(0x26b)][0x1], _0x3b46ce[_0x31a1b5(0x26b)][0x2], 0x1));
            }
            for (_0x12f4aa = 0x0, _0x335dc8 = _0xd7cff6['length']; _0x12f4aa < _0x335dc8; _0x12f4aa++) {
                var _0x6da83b = _0xd7cff6[_0x12f4aa];
                _0x1e1d50[_0x31a1b5(0xf04)](_0x6da83b[_0x31a1b5(0x268)], _0x6da83b['value']);
            }
            _0x25faeb[_0x31a1b5(0xf75)] = _0x1e1d50;
        }
        [_0x5659be(0x8f7)]() {
            var _0x35b243 = _0x5659be;
            super['_onActive'](), this[_0x35b243(0x3ca)]['position'][_0x35b243(0x1f0)](this[_0x35b243(0xb35)][_0x35b243(0xf6a)]);
        }
        ['_cloneTo'](_0x416a22, _0x11cb65, _0x3583a6) {
            var _0x37b55f = _0x5659be;
            super[_0x37b55f(0x339)](_0x416a22, _0x11cb65, _0x3583a6);
            var _0x1ed748, _0x1271f9, _0x3f42f7 = _0x416a22, _0x587ecd = _0x3f42f7[_0x37b55f(0xf7d)];
            _0x587ecd[_0x37b55f(0x268)] = this[_0x37b55f(0xf7d)][_0x37b55f(0x268)], _0x587ecd[_0x37b55f(0xf5f)] = this[_0x37b55f(0xf7d)][_0x37b55f(0xf5f)], _0x587ecd['widthMultiplier'] = this[_0x37b55f(0xf7d)]['widthMultiplier'], _0x587ecd[_0x37b55f(0xf65)] = this['trailFilter'][_0x37b55f(0xf65)], _0x587ecd[_0x37b55f(0xf5d)] = this[_0x37b55f(0xf7d)][_0x37b55f(0xf5d)];
            var _0x2fc01b = this[_0x37b55f(0xf7d)][_0x37b55f(0xf71)], _0x15fa2f = [];
            for (_0x1ed748 = 0x0, _0x1271f9 = _0x2fc01b[_0x37b55f(0x1ff)]; _0x1ed748 < _0x1271f9; _0x1ed748++) {
                var _0x438489 = new _0x336653();
                _0x2fc01b[_0x1ed748][_0x37b55f(0x1f0)](_0x438489), _0x15fa2f[_0x37b55f(0x298)](_0x438489);
            }
            _0x587ecd['widthCurve'] = _0x15fa2f;
            var _0x5ce945 = new _0x9a260b(this[_0x37b55f(0xf7d)][_0x37b55f(0xf75)][_0x37b55f(0xcfe)], this[_0x37b55f(0xf7d)][_0x37b55f(0xf75)][_0x37b55f(0xf7f)]);
            this[_0x37b55f(0xf7d)][_0x37b55f(0xf75)][_0x37b55f(0x1f0)](_0x5ce945), _0x587ecd[_0x37b55f(0xf75)] = _0x5ce945;
            var _0x18f14c = _0x3f42f7[_0x37b55f(0xf52)];
            _0x18f14c['sharedMaterial'] = this[_0x37b55f(0xf52)][_0x37b55f(0xaf0)];
        }
        ['destroy'](_0x3dd06e = !![]) {
            var _0x31169c = _0x5659be;
            if (this[_0x31169c(0x5cf)])
                return;
            super[_0x31169c(0x311)](_0x3dd06e), this[_0x31169c(0xb35)][_0x31169c(0x311)](), this[_0x31169c(0xb35)] = null;
        }
        ['clear']() {
            var _0x205f81 = _0x5659be;
            this[_0x205f81(0xb35)]['clear']();
        }
        [_0x5659be(0x5d2)]() {
            return new _0x5e19e7();
        }
    }
    class _0x6f93b4 {
        constructor(_0x205db7, _0x3deb43, _0x2645a9, _0x55860c) {
            var _0x5b440b = _0x5659be;
            this['_position'] = _0x205db7, this['_normal'] = _0x3deb43, this[_0x5b440b(0xf80)] = _0x2645a9, this[_0x5b440b(0xf81)] = _0x55860c;
        }
        static [_0x5659be(0x229)]() {
            var _0x457f67 = _0x5659be;
            _0x6f93b4[_0x457f67(0x43f)] = new _0x330160(0x28, [
                new _0x1f18c6(0x0, _0x48a921[_0x457f67(0x45d)], _0x6f93b4[_0x457f67(0xf82)]),
                new _0x1f18c6(0xc, _0x48a921[_0x457f67(0x45d)], _0x6f93b4[_0x457f67(0xf83)]),
                new _0x1f18c6(0x18, _0x48a921[_0x457f67(0x45b)], _0x6f93b4[_0x457f67(0xf84)]),
                new _0x1f18c6(0x20, _0x48a921['Vector2'], _0x6f93b4[_0x457f67(0xf85)])
            ]);
        }
        static get [_0x5659be(0x449)]() {
            var _0xbb0c27 = _0x5659be;
            return _0x6f93b4[_0xbb0c27(0x43f)];
        }
        get [_0x5659be(0x59e)]() {
            var _0x2c8832 = _0x5659be;
            return this[_0x2c8832(0x578)];
        }
        get ['normal']() {
            return this['_normal'];
        }
        get [_0x5659be(0xf86)]() {
            var _0x900720 = _0x5659be;
            return this[_0x900720(0xf80)];
        }
        get ['textureCoord1']() {
            var _0x51a375 = _0x5659be;
            return this[_0x51a375(0xf81)];
        }
        get [_0x5659be(0x449)]() {
            var _0x44be3f = _0x5659be;
            return _0x6f93b4[_0x44be3f(0x43f)];
        }
    }
    _0x6f93b4[_0x5659be(0xf82)] = 0x0, _0x6f93b4['TERRAIN_NORMAL0'] = 0x1, _0x6f93b4['TERRAIN_TEXTURECOORDINATE0'] = 0x2, _0x6f93b4[_0x5659be(0xf85)] = 0x3;
    class _0x3e57f5 extends _0x319422 {
        constructor(_0x2b1f3b) {
            var _0x3d465c = _0x5659be;
            super(), this[_0x3d465c(0xabe)] = ++_0x3e57f5[_0x3d465c(0x4e8)], this['_mesh'] = _0x2b1f3b, this[_0x3d465c(0xf1c)] = [], this['_subIndexBufferStart'] = [], this[_0x3d465c(0xf87)] = [];
        }
        get [_0x5659be(0x8d1)]() {
            var _0x49d35f = _0x5659be;
            return this[_0x49d35f(0x627)];
        }
        [_0x5659be(0xf88)](_0x273862, _0x269370, _0x4eb60d = _0x71dec4[_0x5659be(0x8ca)][_0x5659be(0x8c8)]) {
            var _0x464ad2 = _0x5659be;
            this[_0x464ad2(0x629)] = _0x273862, this[_0x464ad2(0x627)] = _0x269370, _0x4eb60d == _0x71dec4[_0x464ad2(0x8ca)][_0x464ad2(0x8c8)] ? this[_0x464ad2(0xaa9)] = new Uint16Array(this[_0x464ad2(0x624)][_0x464ad2(0x307)]()[_0x464ad2(0x448)], _0x273862 * 0x2, _0x269370) : this[_0x464ad2(0xaa9)] = new Uint32Array(this[_0x464ad2(0x624)][_0x464ad2(0x307)]()['buffer'], _0x273862 * 0x4, _0x269370);
        }
        [_0x5659be(0xa5d)]() {
            return _0x3e57f5['_type'];
        }
        [_0x5659be(0x5e8)](_0x146b42) {
            var _0x2cc7cf = _0x5659be;
            return this[_0x2cc7cf(0x5d7)][_0x2cc7cf(0xf89)](), !![];
        }
        [_0x5659be(0x5e6)](_0x2a7624) {
            var _0x1f9048 = _0x5659be, _0x57d6be = this[_0x1f9048(0x5d7)];
            if (_0x57d6be[_0x1f9048(0xf8a)] === _0x71dec4['IndexFormat']['UInt32'] && !_0x218b83[_0x1f9048(0x2f3)][_0x1f9048(0x3ed)][_0x1f9048(0xf8b)]()) {
                console[_0x1f9048(0x24e)](_0x1f9048(0xf8c));
                return;
            }
            var _0x39ab4f = _0x218b83[_0x1f9048(0x2f3)][_0x1f9048(0x2f4)], _0x2e894c = _0x2a7624[_0x1f9048(0xa9a)] ? _0x2a7624[_0x1f9048(0xa9a)][_0x1f9048(0x506)][_0x1f9048(0xf1a)] : null, _0x381c61, _0x29882e;
            switch (_0x57d6be[_0x1f9048(0xf8a)]) {
            case _0x71dec4[_0x1f9048(0x8ca)][_0x1f9048(0x8c9)]:
                _0x381c61 = _0x39ab4f['UNSIGNED_INT'], _0x29882e = 0x4;
                break;
            case _0x71dec4[_0x1f9048(0x8ca)][_0x1f9048(0x8c8)]:
                _0x381c61 = _0x39ab4f[_0x1f9048(0x40b)], _0x29882e = 0x2;
                break;
            case _0x71dec4[_0x1f9048(0x8ca)][_0x1f9048(0x8c7)]:
                _0x381c61 = _0x39ab4f[_0x1f9048(0x430)], _0x29882e = 0x1;
                break;
            }
            _0x57d6be[_0x1f9048(0x4f6)][_0x1f9048(0x444)]();
            if (_0x2e894c) {
                var _0x525643 = _0x2e894c[this[_0x1f9048(0xf8d)]];
                for (var _0x1e4b91 = 0x0, _0x36ae99 = this['_boneIndicesList'][_0x1f9048(0x1ff)]; _0x1e4b91 < _0x36ae99; _0x1e4b91++) {
                    _0x2a7624[_0x1f9048(0x509)]['uploadCustomUniform'](_0x423afc['BONES'], _0x525643[_0x1e4b91]), _0x39ab4f[_0x1f9048(0xaea)](_0x39ab4f[_0x1f9048(0x507)], this['_subIndexBufferCount'][_0x1e4b91], _0x381c61, this['_subIndexBufferStart'][_0x1e4b91] * _0x29882e);
                }
            } else
                _0x39ab4f['drawElements'](_0x39ab4f['TRIANGLES'], this[_0x1f9048(0x627)], _0x381c61, this[_0x1f9048(0x629)] * _0x29882e);
            _0x218b83[_0x1f9048(0x500)][_0x1f9048(0x62a)] += this[_0x1f9048(0x627)] / 0x3, _0x218b83[_0x1f9048(0x500)][_0x1f9048(0x501)]++;
        }
        ['getIndices']() {
            var _0x480649 = _0x5659be;
            if (this['_mesh'][_0x480649(0xf8e)])
                return this['_indices']['slice']();
            else
                throw _0x480649(0xf8f);
        }
        ['setIndices'](_0x3c782b) {
            var _0x4796ff = _0x5659be;
            this['_indexBuffer'][_0x4796ff(0x4fd)](_0x3c782b, this[_0x4796ff(0x629)], 0x0, this[_0x4796ff(0x627)]);
        }
        [_0x5659be(0x311)]() {
            var _0xd55f70 = _0x5659be;
            if (this[_0xd55f70(0xa5f)])
                return;
            super[_0xd55f70(0x311)](), this[_0xd55f70(0x624)][_0xd55f70(0x311)](), this[_0xd55f70(0x624)] = null, this[_0xd55f70(0x5d7)] = null, this['_boneIndicesList'] = null, this[_0xd55f70(0xf90)] = null, this[_0xd55f70(0xf87)] = null, this[_0xd55f70(0xf91)] = null;
        }
    }
    _0x3e57f5[_0x5659be(0x4e8)] = 0x0, _0x3e57f5[_0x5659be(0xa68)] = _0x319422[_0x5659be(0xa60)]++;
    class _0x27eaad {
        constructor(_0x242fdd, _0x1a8e3e, _0x5aaa05) {
            var _0x56c30c = _0x5659be;
            this[_0x56c30c(0xf92)] = _0x242fdd, this[_0x56c30c(0xf1b)] = _0x1a8e3e, this[_0x56c30c(0xf93)] = _0x5aaa05;
        }
    }
    class _0x5c56e3 extends _0x218b83[_0x5659be(0x315)] {
        constructor(_0x4ac057 = !![]) {
            var _0x1e9775 = _0x5659be;
            super(), this[_0x1e9775(0x59b)] = new _0x3f70c5(), this[_0x1e9775(0x3d6)] = new _0x3f70c5(), this[_0x1e9775(0x866)] = new _0x3f70c5(), this[_0x1e9775(0xf94)] = -0x1, this['_maxVerticesUpdate'] = -0x1, this[_0x1e9775(0xf95)] = !![], this['_bounds'] = new _0x2a117e(new _0x3f70c5(), new _0x3f70c5()), this[_0x1e9775(0x4f6)] = new _0x174c4a(), this[_0x1e9775(0x621)] = new _0x174c4a(), this['_instanceBufferStateType'] = 0x0, this[_0x1e9775(0x4f9)] = null, this[_0x1e9775(0x624)] = null, this[_0x1e9775(0xf18)] = [], this[_0x1e9775(0xaad)] = 0x0, this[_0x1e9775(0xf96)] = _0x71dec4[_0x1e9775(0x8ca)][_0x1e9775(0x8c8)], this['_isReadable'] = _0x4ac057, this[_0x1e9775(0x5e5)] = [];
        }
        static [_0x5659be(0x229)]() {
            var _0x5c7e09 = _0x5659be, _0x23930d = _0x40d5e5['_bullet'];
            _0x23930d && (_0x5c56e3['_nativeTempVector30'] = _0x23930d[_0x5c7e09(0xf97)](0x0, 0x0, 0x0), _0x5c56e3[_0x5c7e09(0xf98)] = _0x23930d['btVector3_create'](0x0, 0x0, 0x0), _0x5c56e3[_0x5c7e09(0xf99)] = _0x23930d[_0x5c7e09(0xf97)](0x0, 0x0, 0x0));
        }
        static [_0x5659be(0x31c)](_0x5dce14, _0x5429ad) {
            var _0x547342 = _0x5659be;
            _0x218b83[_0x547342(0x31d)][_0x547342(0x5bd)][_0x547342(0x31e)](_0x5dce14, _0x5429ad, null, _0x5c56e3[_0x547342(0xf9a)]);
        }
        get [_0x5659be(0xf9b)]() {
            var _0x5b2fd9 = _0x5659be;
            return this[_0x5b2fd9(0xf17)];
        }
        get [_0x5659be(0xae0)]() {
            var _0x2f20aa = _0x5659be;
            return this[_0x2f20aa(0xaad)];
        }
        get ['indexCount']() {
            var _0x58407f = _0x5659be;
            return this[_0x58407f(0x624)][_0x58407f(0x8d1)];
        }
        get [_0x5659be(0xae8)]() {
            var _0x298f93 = _0x5659be;
            return this['_subMeshes'][_0x298f93(0x1ff)];
        }
        get [_0x5659be(0x80d)]() {
            var _0x2469da = _0x5659be;
            return this[_0x2469da(0xa67)];
        }
        set [_0x5659be(0x80d)](_0x29638a) {
            var _0x471f70 = _0x5659be;
            if (this['_bounds'] !== _0x29638a)
                _0x29638a[_0x471f70(0x1f0)](this[_0x471f70(0xa67)]);
        }
        get ['indexFormat']() {
            var _0x481271 = _0x5659be;
            return this[_0x481271(0xf96)];
        }
        ['_getPositionElement'](_0x58a67b) {
            var _0x3159a7 = _0x5659be, _0x12bb86 = _0x58a67b[_0x3159a7(0x449)]['_vertexElements'];
            for (var _0x2fdc7f = 0x0, _0x1b063c = _0x12bb86[_0x3159a7(0x1ff)]; _0x2fdc7f < _0x1b063c; _0x2fdc7f++) {
                var _0x596aad = _0x12bb86[_0x2fdc7f];
                if (_0x596aad['_elementFormat'] === _0x48a921['Vector3'] && _0x596aad['_elementUsage'] === _0x13bc8a[_0x3159a7(0x609)])
                    return _0x596aad;
            }
            return null;
        }
        [_0x5659be(0xf9c)](_0xef1373, _0x57f06c) {
            var _0xd85bec = _0x5659be;
            _0xef1373[_0xd85bec(0x1ff)] = this['_vertexCount'];
            var _0x1379a5 = this[_0xd85bec(0x4f9)][_0xd85bec(0x449)], _0x2bbf48 = _0x1379a5[_0xd85bec(0x4e7)](_0x57f06c);
            if (_0x2bbf48) {
                var _0x2a8850 = this[_0xd85bec(0x4f9)][_0xd85bec(0x451)](), _0x4bc748 = this['_vertexBuffer'][_0xd85bec(0x452)](), _0x7ba7cb = _0x1379a5['vertexStride'], _0x2ae6ac = _0x7ba7cb / 0x4, _0xbac461 = _0x2bbf48[_0xd85bec(0x4e3)], _0x553159 = _0xbac461 / 0x4;
                switch (_0x57f06c) {
                case _0x13bc8a[_0xd85bec(0x60d)]:
                case _0x13bc8a['MESH_TEXTURECOORDINATE1']:
                    for (var _0x495a7d = 0x0; _0x495a7d < this['_vertexCount']; _0x495a7d++) {
                        var _0x1de312 = _0x2ae6ac * _0x495a7d + _0x553159;
                        _0xef1373[_0x495a7d] = new _0x12bf01(_0x4bc748[_0x1de312], _0x4bc748[_0x1de312 + 0x1]);
                    }
                    break;
                case _0x13bc8a[_0xd85bec(0x609)]:
                case _0x13bc8a[_0xd85bec(0x60b)]:
                    for (var _0x495a7d = 0x0; _0x495a7d < this[_0xd85bec(0xaad)]; _0x495a7d++) {
                        var _0x1de312 = _0x2ae6ac * _0x495a7d + _0x553159;
                        _0xef1373[_0x495a7d] = new _0x3f70c5(_0x4bc748[_0x1de312], _0x4bc748[_0x1de312 + 0x1], _0x4bc748[_0x1de312 + 0x2]);
                    }
                    break;
                case _0x13bc8a[_0xd85bec(0x614)]:
                case _0x13bc8a[_0xd85bec(0x615)]:
                    for (var _0x495a7d = 0x0; _0x495a7d < this[_0xd85bec(0xaad)]; _0x495a7d++) {
                        var _0x1de312 = _0x2ae6ac * _0x495a7d + _0x553159;
                        _0xef1373[_0x495a7d] = new _0x8fb80(_0x4bc748[_0x1de312], _0x4bc748[_0x1de312 + 0x1], _0x4bc748[_0x1de312 + 0x2], _0x4bc748[_0x1de312 + 0x3]);
                    }
                    break;
                case _0x13bc8a[_0xd85bec(0x60c)]:
                    for (var _0x495a7d = 0x0; _0x495a7d < this[_0xd85bec(0xaad)]; _0x495a7d++) {
                        var _0x1de312 = _0x2ae6ac * _0x495a7d + _0x553159;
                        _0xef1373[_0x495a7d] = new _0x4e3117(_0x4bc748[_0x1de312], _0x4bc748[_0x1de312 + 0x1], _0x4bc748[_0x1de312 + 0x2], _0x4bc748[_0x1de312 + 0x3]);
                    }
                    break;
                case _0x13bc8a[_0xd85bec(0x611)]:
                    for (var _0x495a7d = 0x0; _0x495a7d < this[_0xd85bec(0xaad)]; _0x495a7d++) {
                        var _0x1de312 = _0x7ba7cb * _0x495a7d + _0xbac461;
                        _0xef1373[_0x495a7d] = new _0x8fb80(_0x2a8850[_0x1de312], _0x2a8850[_0x1de312 + 0x1], _0x2a8850[_0x1de312 + 0x2], _0x2a8850[_0x1de312 + 0x3]);
                    }
                    break;
                default:
                    throw _0xd85bec(0xf9d);
                }
            }
        }
        ['_setVerticeElementData'](_0x4b9fd4, _0x3feb44) {
            var _0x3f26eb = _0x5659be, _0x4a50c6 = this[_0x3f26eb(0x4f9)][_0x3f26eb(0x449)], _0x744bc = _0x4a50c6['getVertexElementByUsage'](_0x3feb44);
            if (_0x744bc) {
                var _0xaed8e9 = this[_0x3f26eb(0x4f9)][_0x3f26eb(0x451)](), _0x1912f8 = this[_0x3f26eb(0x4f9)]['getFloat32Data'](), _0x2f774d = _0x4a50c6[_0x3f26eb(0x4e4)], _0x495684 = _0x2f774d / 0x4, _0x1e18b2 = _0x744bc['_offset'], _0x1c6be6 = _0x1e18b2 / 0x4;
                switch (_0x3feb44) {
                case _0x13bc8a[_0x3f26eb(0x60d)]:
                case _0x13bc8a[_0x3f26eb(0x60f)]:
                    for (var _0x23a4fb = 0x0, _0x22fb31 = _0x4b9fd4[_0x3f26eb(0x1ff)]; _0x23a4fb < _0x22fb31; _0x23a4fb++) {
                        var _0x5e72d4 = _0x495684 * _0x23a4fb + _0x1c6be6, _0x2d482d = _0x4b9fd4[_0x23a4fb];
                        _0x1912f8[_0x5e72d4] = _0x2d482d['x'], _0x1912f8[_0x5e72d4 + 0x1] = _0x2d482d['y'];
                    }
                    break;
                case _0x13bc8a[_0x3f26eb(0x609)]:
                case _0x13bc8a[_0x3f26eb(0x60b)]:
                    for (var _0x23a4fb = 0x0, _0x22fb31 = _0x4b9fd4['length']; _0x23a4fb < _0x22fb31; _0x23a4fb++) {
                        var _0x5e72d4 = _0x495684 * _0x23a4fb + _0x1c6be6, _0xb141a6 = _0x4b9fd4[_0x23a4fb];
                        _0x1912f8[_0x5e72d4] = _0xb141a6['x'], _0x1912f8[_0x5e72d4 + 0x1] = _0xb141a6['y'], _0x1912f8[_0x5e72d4 + 0x2] = _0xb141a6['z'];
                    }
                    break;
                case _0x13bc8a['MESH_TANGENT0']:
                case _0x13bc8a[_0x3f26eb(0x615)]:
                    for (var _0x23a4fb = 0x0, _0x22fb31 = _0x4b9fd4[_0x3f26eb(0x1ff)]; _0x23a4fb < _0x22fb31; _0x23a4fb++) {
                        var _0x5e72d4 = _0x495684 * _0x23a4fb + _0x1c6be6, _0x1f4f89 = _0x4b9fd4[_0x23a4fb];
                        _0x1912f8[_0x5e72d4] = _0x1f4f89['x'], _0x1912f8[_0x5e72d4 + 0x1] = _0x1f4f89['y'], _0x1912f8[_0x5e72d4 + 0x2] = _0x1f4f89['z'], _0x1912f8[_0x5e72d4 + 0x3] = _0x1f4f89['w'];
                    }
                    break;
                case _0x13bc8a[_0x3f26eb(0x60c)]:
                    for (var _0x23a4fb = 0x0, _0x22fb31 = _0x4b9fd4['length']; _0x23a4fb < _0x22fb31; _0x23a4fb++) {
                        var _0x5e72d4 = _0x495684 * _0x23a4fb + _0x1c6be6, _0x3dda4e = _0x4b9fd4[_0x23a4fb];
                        _0x1912f8[_0x5e72d4] = _0x3dda4e['r'], _0x1912f8[_0x5e72d4 + 0x1] = _0x3dda4e['g'], _0x1912f8[_0x5e72d4 + 0x2] = _0x3dda4e['b'], _0x1912f8[_0x5e72d4 + 0x3] = _0x3dda4e['a'];
                    }
                    break;
                case _0x13bc8a[_0x3f26eb(0x611)]:
                    for (var _0x23a4fb = 0x0, _0x22fb31 = _0x4b9fd4['length']; _0x23a4fb < _0x22fb31; _0x23a4fb++) {
                        var _0x5e72d4 = _0x2f774d * _0x23a4fb + _0x1e18b2, _0x1f4f89 = _0x4b9fd4[_0x23a4fb];
                        _0xaed8e9[_0x5e72d4] = _0x1f4f89['x'], _0xaed8e9[_0x5e72d4 + 0x1] = _0x1f4f89['y'], _0xaed8e9[_0x5e72d4 + 0x2] = _0x1f4f89['z'], _0xaed8e9[_0x5e72d4 + 0x3] = _0x1f4f89['w'];
                    }
                    break;
                default:
                    throw _0x3f26eb(0xf9d);
                }
                this[_0x3f26eb(0xf94)] = 0x0, this[_0x3f26eb(0xf9e)] = Number[_0x3f26eb(0x44e)];
            } else
                console['warn'](_0x3f26eb(0xf9f));
        }
        ['_disposeResource']() {
            var _0x2333f9 = _0x5659be;
            for (var _0x5546eb = 0x0, _0x5598e7 = this[_0x2333f9(0x5e5)][_0x2333f9(0x1ff)]; _0x5546eb < _0x5598e7; _0x5546eb++)
                this[_0x2333f9(0x5e5)][_0x5546eb]['destroy']();
            this[_0x2333f9(0xfa0)] && _0x40d5e5[_0x2333f9(0x227)][_0x2333f9(0xfa1)](this[_0x2333f9(0xfa0)]), this['_vertexBuffer'][_0x2333f9(0x311)](), this[_0x2333f9(0x624)][_0x2333f9(0x311)](), this['_bufferState'][_0x2333f9(0x311)](), this[_0x2333f9(0x621)][_0x2333f9(0x311)](), this['_setCPUMemory'](0x0), this[_0x2333f9(0x423)](0x0), this['_bufferState'] = null, this[_0x2333f9(0x621)] = null, this[_0x2333f9(0x4f9)] = null, this['_indexBuffer'] = null, this[_0x2333f9(0x5e5)] = null, this[_0x2333f9(0xfa0)] = null, this['_indexBuffer'] = null, this[_0x2333f9(0xf27)] = null, this[_0x2333f9(0xf17)] = null;
        }
        [_0x5659be(0xfa2)](_0x34b00e) {
            var _0x44cd46 = _0x5659be;
            this[_0x44cd46(0x5e5)] = _0x34b00e;
            for (var _0x2084c4 = 0x0, _0x2382d2 = _0x34b00e[_0x44cd46(0x1ff)]; _0x2084c4 < _0x2382d2; _0x2084c4++)
                _0x34b00e[_0x2084c4]['_indexInMesh'] = _0x2084c4;
        }
        ['_setBuffer'](_0x162329, _0x24c3f0) {
            var _0x5b5fea = _0x5659be, _0x66c5a6 = this[_0x5b5fea(0x4f6)];
            _0x66c5a6[_0x5b5fea(0x444)](), _0x66c5a6[_0x5b5fea(0x4ea)](_0x162329), _0x66c5a6[_0x5b5fea(0x4f3)](_0x24c3f0), _0x66c5a6['unBind']();
        }
        [_0x5659be(0x620)](_0x1fcaff) {
            var _0x4a946e = _0x5659be, _0xce4676 = this['_instanceBufferState'];
            _0xce4676[_0x4a946e(0x444)](), _0xce4676['applyVertexBuffer'](this['_vertexBuffer']), _0xce4676[_0x4a946e(0x4f1)](_0x269d35['instance'][_0x4a946e(0xa97)]);
            switch (_0x1fcaff) {
            case _0x5c56e3[_0x4a946e(0xfa3)]:
                _0xce4676[_0x4a946e(0x4f1)](_0x269d35[_0x4a946e(0x2f4)][_0x4a946e(0xa99)]);
                break;
            }
            _0xce4676[_0x4a946e(0x4f3)](this['_indexBuffer']), _0xce4676[_0x4a946e(0x4fb)]();
        }
        [_0x5659be(0xfa4)]() {
            var _0x5ea98f = _0x5659be;
            if (!this[_0x5ea98f(0xfa0)]) {
                var _0x471272 = _0x40d5e5[_0x5ea98f(0x227)], _0x2ccf13 = _0x471272[_0x5ea98f(0xfa5)](), _0x1cfe47 = _0x5c56e3[_0x5ea98f(0xfa6)], _0x569a11 = _0x5c56e3['_nativeTempVector31'], _0x5ec2dd = _0x5c56e3[_0x5ea98f(0xf99)], _0x1a43dc = this['_tempVector30'], _0x15b5c6 = this[_0x5ea98f(0x3d6)], _0x53d897 = this[_0x5ea98f(0x866)], _0x4f1e2b = this[_0x5ea98f(0x4f9)], _0x36a3a1 = this[_0x5ea98f(0xfa7)](_0x4f1e2b), _0x25792c = _0x4f1e2b[_0x5ea98f(0x452)](), _0x3beb09 = _0x4f1e2b[_0x5ea98f(0x449)][_0x5ea98f(0x4e4)] / 0x4, _0x4876e = _0x36a3a1[_0x5ea98f(0x4e3)] / 0x4, _0x4bf2d4 = this['_indexBuffer'][_0x5ea98f(0x307)]();
                for (var _0x8bd0c5 = 0x0, _0x4d4b84 = _0x4bf2d4['length']; _0x8bd0c5 < _0x4d4b84; _0x8bd0c5 += 0x3) {
                    var _0x3fbae5 = _0x4bf2d4[_0x8bd0c5] * _0x3beb09 + _0x4876e, _0x345709 = _0x4bf2d4[_0x8bd0c5 + 0x1] * _0x3beb09 + _0x4876e, _0xebc77d = _0x4bf2d4[_0x8bd0c5 + 0x2] * _0x3beb09 + _0x4876e;
                    _0x1a43dc[_0x5ea98f(0x1fa)](_0x25792c[_0x3fbae5], _0x25792c[_0x3fbae5 + 0x1], _0x25792c[_0x3fbae5 + 0x2]), _0x15b5c6[_0x5ea98f(0x1fa)](_0x25792c[_0x345709], _0x25792c[_0x345709 + 0x1], _0x25792c[_0x345709 + 0x2]), _0x53d897[_0x5ea98f(0x1fa)](_0x25792c[_0xebc77d], _0x25792c[_0xebc77d + 0x1], _0x25792c[_0xebc77d + 0x2]), _0x108d81[_0x5ea98f(0x2d8)](_0x1a43dc, _0x1cfe47, !![]), _0x108d81[_0x5ea98f(0x2d8)](_0x15b5c6, _0x569a11, !![]), _0x108d81[_0x5ea98f(0x2d8)](_0x53d897, _0x5ec2dd, !![]), _0x471272['btTriangleMesh_addTriangle'](_0x2ccf13, _0x1cfe47, _0x569a11, _0x5ec2dd, !![]);
                }
                this['_btTriangleMesh'] = _0x2ccf13;
            }
            return this[_0x5ea98f(0xfa0)];
        }
        [_0x5659be(0xf89)]() {
            var _0xcd0d8c = _0x5659be, _0x14bfa0 = this['_minVerticesUpdate'], _0xaffe64 = this['_maxVerticesUpdate'];
            if (_0x14bfa0 !== -0x1 && _0xaffe64 !== -0x1) {
                var _0x5c83c9 = _0x14bfa0;
                this['_vertexBuffer'][_0xcd0d8c(0x4fd)](this['_vertexBuffer'][_0xcd0d8c(0x451)]()['buffer'], _0x5c83c9, _0x5c83c9, _0xaffe64 - _0x14bfa0), this[_0xcd0d8c(0xf94)] = -0x1, this[_0xcd0d8c(0xf9e)] = -0x1;
            }
        }
        ['getSubMesh'](_0x1e7f6a) {
            var _0x18abf9 = _0x5659be;
            return this[_0x18abf9(0x5e5)][_0x1e7f6a];
        }
        [_0x5659be(0xfa8)](_0x22af51) {
            var _0x464d5d = _0x5659be;
            if (this[_0x464d5d(0xf8e)])
                this[_0x464d5d(0xf9c)](_0x22af51, _0x13bc8a[_0x464d5d(0x609)]);
            else
                throw _0x464d5d(0xfa9);
        }
        [_0x5659be(0xfaa)](_0x3d6af8) {
            var _0x5297dc = _0x5659be;
            if (this[_0x5297dc(0xf8e)])
                this[_0x5297dc(0xfab)](_0x3d6af8, _0x13bc8a[_0x5297dc(0x609)]), this['_needUpdateBounds'] = !![];
            else
                throw 'Mesh:setPosition()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().';
        }
        [_0x5659be(0xfac)](_0x4f07d3) {
            var _0x2a6d92 = _0x5659be;
            if (this[_0x2a6d92(0xf8e)])
                this[_0x2a6d92(0xf9c)](_0x4f07d3, _0x13bc8a[_0x2a6d92(0x60c)]);
            else
                throw _0x2a6d92(0xfad);
        }
        [_0x5659be(0xfae)](_0x500321) {
            var _0x2aeeb0 = _0x5659be;
            if (this[_0x2aeeb0(0xf8e)])
                this[_0x2aeeb0(0xfab)](_0x500321, _0x13bc8a['MESH_COLOR0']);
            else
                throw 'Mesh:setColors()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().';
        }
        [_0x5659be(0xfaf)](_0x3d6614, _0xfe8be9 = 0x0) {
            var _0x331c4b = _0x5659be;
            if (this['_isReadable'])
                switch (_0xfe8be9) {
                case 0x0:
                    this[_0x331c4b(0xf9c)](_0x3d6614, _0x13bc8a[_0x331c4b(0x60d)]);
                    break;
                case 0x1:
                    this[_0x331c4b(0xf9c)](_0x3d6614, _0x13bc8a[_0x331c4b(0x60f)]);
                    break;
                default:
                    throw _0x331c4b(0xfb0);
                }
            else
                throw _0x331c4b(0xfb1);
        }
        [_0x5659be(0xfb2)](_0x4fa65f, _0x3c7c79 = 0x0) {
            var _0x5bc5b9 = _0x5659be;
            if (this[_0x5bc5b9(0xf8e)])
                switch (_0x3c7c79) {
                case 0x0:
                    this[_0x5bc5b9(0xfab)](_0x4fa65f, _0x13bc8a[_0x5bc5b9(0x60d)]);
                    break;
                case 0x1:
                    this[_0x5bc5b9(0xfab)](_0x4fa65f, _0x13bc8a[_0x5bc5b9(0x60f)]);
                    break;
                default:
                    throw 'Mesh:Invalid\x20channel.';
                }
            else
                throw _0x5bc5b9(0xfb3);
        }
        [_0x5659be(0xfb4)](_0x320220) {
            var _0xa4cf27 = _0x5659be;
            if (this[_0xa4cf27(0xf8e)])
                this['_getVerticeElementData'](_0x320220, _0x13bc8a[_0xa4cf27(0x60b)]);
            else
                throw _0xa4cf27(0xfad);
        }
        [_0x5659be(0xfb5)](_0x54d2fe) {
            var _0x2b9e88 = _0x5659be;
            if (this['_isReadable'])
                this[_0x2b9e88(0xfab)](_0x54d2fe, _0x13bc8a[_0x2b9e88(0x60b)]);
            else
                throw _0x2b9e88(0xfb6);
        }
        [_0x5659be(0xfb7)](_0x373afc) {
            var _0x275f90 = _0x5659be;
            if (this[_0x275f90(0xf8e)])
                this[_0x275f90(0xf9c)](_0x373afc, _0x13bc8a[_0x275f90(0x614)]);
            else
                throw _0x275f90(0xfad);
        }
        [_0x5659be(0xfb8)](_0x2de26d) {
            var _0x1641f7 = _0x5659be;
            if (this['_isReadable'])
                this[_0x1641f7(0xfab)](_0x2de26d, _0x13bc8a['MESH_TANGENT0']);
            else
                throw _0x1641f7(0xfb9);
        }
        [_0x5659be(0xfba)](_0x28eb11) {
            var _0x155195 = _0x5659be;
            if (this['_isReadable'])
                this[_0x155195(0xf9c)](_0x28eb11, _0x13bc8a[_0x155195(0x615)]);
            else
                throw _0x155195(0xfbb);
        }
        [_0x5659be(0xfbc)](_0x15fbb9) {
            var _0x269461 = _0x5659be;
            if (this['_isReadable'])
                this[_0x269461(0xfab)](_0x15fbb9, _0x13bc8a[_0x269461(0x615)]);
            else
                throw _0x269461(0xfbd);
        }
        [_0x5659be(0xfbe)](_0x48594d) {
            var _0x6a8fba = _0x5659be;
            if (this[_0x6a8fba(0xf8e)])
                this[_0x6a8fba(0xf9c)](_0x48594d, _0x13bc8a[_0x6a8fba(0x611)]);
            else
                throw _0x6a8fba(0xfbf);
        }
        [_0x5659be(0xfc0)](_0x11d24) {
            var _0x101c25 = _0x5659be;
            if (this[_0x101c25(0xf8e)])
                this[_0x101c25(0xfab)](_0x11d24, _0x13bc8a[_0x101c25(0x611)]);
            else
                throw _0x101c25(0xfc1);
        }
        ['markAsUnreadbale']() {
            var _0x253c54 = _0x5659be;
            this[_0x253c54(0xf89)](), this[_0x253c54(0x4f9)][_0x253c54(0x454)](), this['_isReadable'] = ![];
        }
        [_0x5659be(0x606)]() {
            var _0x2cd5eb = _0x5659be;
            return this[_0x2cd5eb(0x4f9)][_0x2cd5eb(0x43f)];
        }
        ['getVertices']() {
            var _0x4a9795 = _0x5659be;
            if (this[_0x4a9795(0xf8e)])
                return this['_vertexBuffer']['getUint8Data']()[_0x4a9795(0x448)][_0x4a9795(0xb1a)](0x0);
            else
                throw _0x4a9795(0xfc2);
        }
        [_0x5659be(0xfc3)](_0x5bfb5f) {
            var _0x446296 = _0x5659be;
            this[_0x446296(0x4f9)][_0x446296(0x4fd)](_0x5bfb5f), this[_0x446296(0xf95)] = !![];
        }
        [_0x5659be(0xfc4)]() {
            var _0x543db2 = _0x5659be;
            if (this[_0x543db2(0xf8e)])
                return this[_0x543db2(0x624)][_0x543db2(0x307)]()[_0x543db2(0xb1a)]();
            else
                throw 'Mesh:can\x27t\x20get\x20indices\x20on\x20subMesh,mesh\x27s\x20isReadable\x20must\x20be\x20true.';
        }
        [_0x5659be(0xfc5)](_0x529392) {
            var _0x4c8d5b = _0x5659be, _0x5c4fa5;
            if (_0x529392 instanceof Uint32Array)
                _0x5c4fa5 = _0x71dec4[_0x4c8d5b(0x8ca)][_0x4c8d5b(0x8c9)];
            else {
                if (_0x529392 instanceof Uint16Array)
                    _0x5c4fa5 = _0x71dec4[_0x4c8d5b(0x8ca)][_0x4c8d5b(0x8c8)];
                else {
                    if (_0x529392 instanceof Uint8Array)
                        _0x5c4fa5 = _0x71dec4['IndexFormat']['UInt8'];
                }
            }
            var _0x5134ac = this[_0x4c8d5b(0x624)];
            (this[_0x4c8d5b(0xf96)] !== _0x5c4fa5 || _0x5134ac['indexCount'] !== _0x529392[_0x4c8d5b(0x1ff)]) && (_0x5134ac[_0x4c8d5b(0x311)](), this[_0x4c8d5b(0x624)] = _0x5134ac = new _0x11925d(_0x5c4fa5, _0x529392[_0x4c8d5b(0x1ff)], _0x218b83[_0x4c8d5b(0x2f3)][_0x4c8d5b(0x2f4)][_0x4c8d5b(0x4f8)], this[_0x4c8d5b(0xf8e)])), _0x5134ac['setData'](_0x529392), this['_indexFormat'] = _0x5c4fa5;
        }
        ['calculateBounds']() {
            var _0x5dae3c = _0x5659be;
            if (this[_0x5dae3c(0xf8e)]) {
                if (this[_0x5dae3c(0xf95)]) {
                    var _0x16b2bc = this[_0x5dae3c(0x59b)], _0x4cee8c = this[_0x5dae3c(0x3d6)];
                    _0x16b2bc['x'] = _0x16b2bc['y'] = _0x16b2bc['z'] = Number[_0x5dae3c(0xa46)], _0x4cee8c['x'] = _0x4cee8c['y'] = _0x4cee8c['z'] = -Number['MAX_VALUE'];
                    var _0x16cc2b = this[_0x5dae3c(0x4f9)], _0xd817 = this[_0x5dae3c(0xfa7)](_0x16cc2b), _0x1a4319 = _0x16cc2b[_0x5dae3c(0x452)](), _0x2eea1f = _0x16cc2b[_0x5dae3c(0x449)][_0x5dae3c(0x4e4)] / 0x4, _0x30741e = _0xd817[_0x5dae3c(0x4e3)] / 0x4;
                    for (var _0x4c705e = 0x0, _0x4686fd = _0x1a4319[_0x5dae3c(0x1ff)]; _0x4c705e < _0x4686fd; _0x4c705e += _0x2eea1f) {
                        var _0x3fbe5f = _0x4c705e + _0x30741e, _0x675b5b = _0x1a4319[_0x3fbe5f], _0x56e348 = _0x1a4319[_0x3fbe5f + 0x1], _0x1f3454 = _0x1a4319[_0x3fbe5f + 0x2];
                        _0x16b2bc['x'] = Math[_0x5dae3c(0x204)](_0x16b2bc['x'], _0x675b5b), _0x16b2bc['y'] = Math['min'](_0x16b2bc['y'], _0x56e348), _0x16b2bc['z'] = Math[_0x5dae3c(0x204)](_0x16b2bc['z'], _0x1f3454), _0x4cee8c['x'] = Math[_0x5dae3c(0x205)](_0x4cee8c['x'], _0x675b5b), _0x4cee8c['y'] = Math[_0x5dae3c(0x205)](_0x4cee8c['y'], _0x56e348), _0x4cee8c['z'] = Math['max'](_0x4cee8c['z'], _0x1f3454);
                    }
                    this[_0x5dae3c(0xa67)]['setMin'](_0x16b2bc), this['_bounds'][_0x5dae3c(0xa51)](_0x4cee8c), this['_needUpdateBounds'] = ![];
                }
            } else
                throw _0x5dae3c(0xfc6);
        }
        [_0x5659be(0x1f0)](_0x421e36) {
            var _0xb54ef = _0x5659be, _0x5d37cd = _0x421e36, _0x1e0712 = this['_vertexBuffer'], _0x7a65d3 = new _0x57a6a2(_0x1e0712['_byteLength'], _0x1e0712['bufferUsage'], _0x1e0712['canRead']);
            _0x7a65d3[_0xb54ef(0x449)] = _0x1e0712[_0xb54ef(0x449)], _0x7a65d3['setData'](_0x1e0712[_0xb54ef(0x451)]()[_0xb54ef(0xb1a)]()['buffer']), _0x5d37cd[_0xb54ef(0x4f9)] = _0x7a65d3, _0x5d37cd[_0xb54ef(0xaad)] = this[_0xb54ef(0xaad)];
            var _0xe53d11 = this['_indexBuffer'], _0xa4084b = new _0x11925d(_0x71dec4['IndexFormat'][_0xb54ef(0x8c8)], _0xe53d11[_0xb54ef(0x8d1)], _0xe53d11[_0xb54ef(0xfc7)], _0xe53d11[_0xb54ef(0x44a)]);
            _0xa4084b[_0xb54ef(0x4fd)](_0xe53d11[_0xb54ef(0x307)]()[_0xb54ef(0xb1a)]()), _0x5d37cd[_0xb54ef(0x624)] = _0xa4084b, _0x5d37cd[_0xb54ef(0xfc8)](_0x5d37cd['_vertexBuffer'], _0xa4084b), _0x5d37cd['_setInstanceBuffer'](this[_0xb54ef(0xfc9)]), _0x5d37cd[_0xb54ef(0xfca)](this['cpuMemory']), _0x5d37cd[_0xb54ef(0x423)](this[_0xb54ef(0xfcb)]);
            var _0x5dabdf, _0x39a482 = this[_0xb54ef(0xf27)];
            if (_0x39a482) {
                var _0x571b72 = _0x5d37cd['_boneNames'] = [];
                for (_0x5dabdf = 0x0; _0x5dabdf < _0x39a482[_0xb54ef(0x1ff)]; _0x5dabdf++)
                    _0x571b72[_0x5dabdf] = _0x39a482[_0x5dabdf];
            }
            var _0x44ec67 = this['_inverseBindPoses'];
            if (_0x44ec67) {
                var _0xbc99f = _0x5d37cd[_0xb54ef(0xf17)] = [];
                for (_0x5dabdf = 0x0; _0x5dabdf < _0x44ec67[_0xb54ef(0x1ff)]; _0x5dabdf++)
                    _0xbc99f[_0x5dabdf] = _0x44ec67[_0x5dabdf];
            }
            var _0x57a004 = this[_0xb54ef(0xf18)][_0xb54ef(0x1ff)];
            _0x5d37cd[_0xb54ef(0xf18)][_0xb54ef(0x1ff)] = _0x57a004;
            for (_0x5dabdf = 0x0; _0x5dabdf < _0x57a004; _0x5dabdf++) {
                var _0x41150f = this['_skinnedMatrixCaches'][_0x5dabdf];
                _0x5d37cd['_skinnedMatrixCaches'][_0x5dabdf] = new _0x27eaad(_0x41150f[_0xb54ef(0xf92)], _0x41150f[_0xb54ef(0xf1b)], _0x41150f[_0xb54ef(0xf93)]);
            }
            for (_0x5dabdf = 0x0; _0x5dabdf < this['subMeshCount']; _0x5dabdf++) {
                var _0x38844a = this[_0xb54ef(0x5e5)][_0x5dabdf], _0x233693 = _0x38844a[_0xb54ef(0xf90)], _0x21b023 = _0x38844a[_0xb54ef(0xf87)], _0x1461e9 = _0x38844a[_0xb54ef(0xf1c)], _0x2969d6 = new _0x3e57f5(_0x5d37cd);
                _0x2969d6[_0xb54ef(0xf90)]['length'] = _0x233693[_0xb54ef(0x1ff)], _0x2969d6[_0xb54ef(0xf87)]['length'] = _0x21b023[_0xb54ef(0x1ff)], _0x2969d6[_0xb54ef(0xf1c)][_0xb54ef(0x1ff)] = _0x1461e9['length'];
                for (var _0x5d4c2e = 0x0; _0x5d4c2e < _0x233693[_0xb54ef(0x1ff)]; _0x5d4c2e++)
                    _0x2969d6['_subIndexBufferStart'][_0x5d4c2e] = _0x233693[_0x5d4c2e];
                for (_0x5d4c2e = 0x0; _0x5d4c2e < _0x21b023[_0xb54ef(0x1ff)]; _0x5d4c2e++)
                    _0x2969d6['_subIndexBufferCount'][_0x5d4c2e] = _0x21b023[_0x5d4c2e];
                for (_0x5d4c2e = 0x0; _0x5d4c2e < _0x1461e9['length']; _0x5d4c2e++)
                    _0x2969d6[_0xb54ef(0xf1c)][_0x5d4c2e] = new Uint16Array(_0x1461e9[_0x5d4c2e]);
                _0x2969d6[_0xb54ef(0x624)] = _0xa4084b, _0x2969d6['_indexStart'] = _0x38844a[_0xb54ef(0x629)], _0x2969d6[_0xb54ef(0x627)] = _0x38844a[_0xb54ef(0x627)], _0x2969d6[_0xb54ef(0xaa9)] = new Uint16Array(_0xa4084b[_0xb54ef(0x307)]()['buffer'], _0x38844a[_0xb54ef(0x629)] * 0x2, _0x38844a[_0xb54ef(0x627)]);
                var _0x3f790d = _0x5d37cd[_0xb54ef(0x4f9)];
                _0x2969d6['_vertexBuffer'] = _0x3f790d, _0x5d37cd[_0xb54ef(0x5e5)]['push'](_0x2969d6);
            }
            _0x5d37cd[_0xb54ef(0xfa2)](_0x5d37cd[_0xb54ef(0x5e5)]);
        }
        ['clone']() {
            var _0x3e5396 = new _0x5c56e3();
            return this['cloneTo'](_0x3e5396), _0x3e5396;
        }
    }
    _0x5c56e3[_0x5659be(0xf9a)] = _0x5659be(0xf9a), _0x5c56e3['MESH_INSTANCEBUFFER_TYPE_NORMAL'] = 0x0, _0x5c56e3[_0x5659be(0xfa3)] = 0x1;
    class _0x173012 {
        static [_0x5659be(0x229)]() {
        }
        static ['_createMesh'](_0x5e10b9, _0x113c37, _0x134a67) {
            var _0x1d7049 = _0x5659be, _0x47d9f5 = _0x218b83['LayaGL'][_0x1d7049(0x2f4)], _0x2c05c1 = new _0x5c56e3(), _0x43b344 = new _0x3e57f5(_0x2c05c1), _0x4fc704 = new _0x57a6a2(_0x113c37[_0x1d7049(0x1ff)] * 0x4, _0x47d9f5[_0x1d7049(0x4f8)], !![]);
            _0x4fc704[_0x1d7049(0x449)] = _0x5e10b9, _0x4fc704[_0x1d7049(0x4fd)](_0x113c37['buffer']), _0x2c05c1[_0x1d7049(0x4f9)] = _0x4fc704, _0x2c05c1[_0x1d7049(0xaad)] = _0x4fc704[_0x1d7049(0x443)] / _0x5e10b9[_0x1d7049(0x4e4)];
            var _0xb44197 = new _0x11925d(_0x71dec4[_0x1d7049(0x8ca)][_0x1d7049(0x8c8)], _0x134a67[_0x1d7049(0x1ff)], _0x47d9f5[_0x1d7049(0x4f8)], !![]);
            _0xb44197[_0x1d7049(0x4fd)](_0x134a67), _0x2c05c1[_0x1d7049(0x624)] = _0xb44197, _0x2c05c1[_0x1d7049(0xfc8)](_0x4fc704, _0xb44197), _0x2c05c1['_setInstanceBuffer'](_0x2c05c1[_0x1d7049(0xfc9)]), _0x43b344['_vertexBuffer'] = _0x4fc704, _0x43b344[_0x1d7049(0x624)] = _0xb44197, _0x43b344[_0x1d7049(0xf88)](0x0, _0xb44197['indexCount']);
            var _0x4e0445 = _0x43b344[_0x1d7049(0xf90)], _0x396f3c = _0x43b344[_0x1d7049(0xf87)], _0x42cee1 = _0x43b344[_0x1d7049(0xf1c)];
            _0x4e0445[_0x1d7049(0x1ff)] = 0x1, _0x396f3c[_0x1d7049(0x1ff)] = 0x1, _0x42cee1[_0x1d7049(0x1ff)] = 0x1, _0x4e0445[0x0] = 0x0, _0x396f3c[0x0] = _0xb44197[_0x1d7049(0x8d1)];
            var _0x3b8b0c = [];
            _0x3b8b0c[_0x1d7049(0x298)](_0x43b344), _0x2c05c1[_0x1d7049(0xfa2)](_0x3b8b0c), _0x2c05c1[_0x1d7049(0xfcc)]();
            var _0x111c91 = _0x4fc704[_0x1d7049(0x443)] + _0xb44197[_0x1d7049(0x443)];
            return _0x2c05c1['_setCPUMemory'](_0x111c91), _0x2c05c1[_0x1d7049(0x423)](_0x111c91), _0x2c05c1;
        }
        static ['createBox'](_0xe8a9db = 0x1, _0x1d5ad0 = 0x1, _0x307875 = 0x1) {
            var _0x4bbd3b = _0x5659be, _0x3afffd = _0x13bc8a[_0x4bbd3b(0x606)](_0x4bbd3b(0xfcd)), _0x2b8edf = _0xe8a9db / 0x2, _0x3ecf05 = _0x1d5ad0 / 0x2, _0x1d49c8 = _0x307875 / 0x2, _0x3a1010 = new Float32Array([
                    -_0x2b8edf,
                    _0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    _0x2b8edf,
                    _0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x0,
                    _0x2b8edf,
                    _0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x1,
                    -_0x2b8edf,
                    _0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    -_0x2b8edf,
                    -_0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    _0x2b8edf,
                    -_0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x1,
                    _0x2b8edf,
                    -_0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x0,
                    -_0x2b8edf,
                    -_0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    -_0x2b8edf,
                    _0x3ecf05,
                    -_0x1d49c8,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    -_0x2b8edf,
                    _0x3ecf05,
                    _0x1d49c8,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    -_0x2b8edf,
                    -_0x3ecf05,
                    _0x1d49c8,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x2b8edf,
                    -_0x3ecf05,
                    -_0x1d49c8,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x2b8edf,
                    _0x3ecf05,
                    -_0x1d49c8,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    _0x2b8edf,
                    _0x3ecf05,
                    _0x1d49c8,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    _0x2b8edf,
                    -_0x3ecf05,
                    _0x1d49c8,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x2b8edf,
                    -_0x3ecf05,
                    -_0x1d49c8,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x2b8edf,
                    _0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x2b8edf,
                    _0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    _0x2b8edf,
                    -_0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1,
                    -_0x2b8edf,
                    -_0x3ecf05,
                    _0x1d49c8,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    -_0x2b8edf,
                    _0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x0,
                    _0x2b8edf,
                    _0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    _0x2b8edf,
                    -_0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    -_0x2b8edf,
                    -_0x3ecf05,
                    -_0x1d49c8,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x1
                ]), _0xd0b5ed = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x8,
                    0x9,
                    0xa,
                    0xa,
                    0xb,
                    0x8,
                    0xc,
                    0xf,
                    0xe,
                    0xe,
                    0xd,
                    0xc,
                    0x10,
                    0x11,
                    0x12,
                    0x12,
                    0x13,
                    0x10,
                    0x14,
                    0x17,
                    0x16,
                    0x16,
                    0x15,
                    0x14
                ]);
            return _0x173012['_createMesh'](_0x3afffd, _0x3a1010, _0xd0b5ed);
        }
        static [_0x5659be(0xfce)](_0x4dd699 = 0.5, _0x4e81fe = 0x2, _0x44c616 = 0x10, _0xe15d2e = 0x20) {
            var _0x16aac1 = _0x5659be, _0x376153 = (_0x44c616 + 0x1) * (_0xe15d2e + 0x1) * 0x2 + (_0xe15d2e + 0x1) * 0x2, _0x11d06a = 0x3 * _0x44c616 * (_0xe15d2e + 0x1) * 0x2 * 0x2 + 0x2 * _0xe15d2e * 0x3, _0x5c70b4 = _0x13bc8a['getVertexDeclaration'](_0x16aac1(0xfcd)), _0x11f26e = _0x5c70b4['vertexStride'] / 0x4, _0x587440 = new Float32Array(_0x376153 * _0x11f26e), _0x4fb2d6 = new Uint16Array(_0x11d06a), _0x2a35f3 = Math['PI'] / 0x2 / _0x44c616, _0x2d488b = Math['PI'] * 0x2 / _0xe15d2e, _0x3d6482 = _0x4e81fe / 0x2 - _0x4dd699, _0x530318 = 0x0, _0x16c1bc = 0x0, _0x2eae58 = 0x0, _0x50ea46 = 0x0, _0x1916c8 = 0x0, _0x22d688 = 0x0, _0x296d6f, _0x1ed95b;
            for (_0x296d6f = 0x0; _0x296d6f <= _0x44c616; _0x296d6f++) {
                for (_0x1ed95b = 0x0; _0x1ed95b <= _0xe15d2e; _0x1ed95b++) {
                    _0x530318 = _0x4dd699 * Math[_0x16aac1(0x270)](_0x296d6f * _0x2a35f3) * Math[_0x16aac1(0x270)](_0x1ed95b * _0x2d488b + Math['PI']), _0x16c1bc = _0x4dd699 * Math[_0x16aac1(0x26f)](_0x296d6f * _0x2a35f3), _0x2eae58 = _0x4dd699 * Math[_0x16aac1(0x270)](_0x296d6f * _0x2a35f3) * Math[_0x16aac1(0x26f)](_0x1ed95b * _0x2d488b + Math['PI']), _0x587440[_0x50ea46++] = _0x530318, _0x587440[_0x50ea46++] = _0x16c1bc + _0x3d6482, _0x587440[_0x50ea46++] = _0x2eae58, _0x587440[_0x50ea46++] = _0x530318, _0x587440[_0x50ea46++] = _0x16c1bc, _0x587440[_0x50ea46++] = _0x2eae58, _0x587440[_0x50ea46++] = 0x1 - _0x1ed95b / _0xe15d2e, _0x587440[_0x50ea46++] = (0x1 - _0x296d6f / _0x44c616) * (Math['PI'] * _0x4dd699 / 0x2 / (_0x4e81fe + Math['PI'] * _0x4dd699)), _0x296d6f < _0x44c616 && (_0x4fb2d6[_0x1916c8++] = _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + (_0xe15d2e + 0x1), _0x4fb2d6[_0x1916c8++] = _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b, _0x4fb2d6[_0x1916c8++] = _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + 0x1, _0x4fb2d6[_0x1916c8++] = _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + _0xe15d2e, _0x4fb2d6[_0x1916c8++] = _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b, _0x4fb2d6[_0x1916c8++] = _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + (_0xe15d2e + 0x1));
                }
            }
            _0x22d688 += (_0x44c616 + 0x1) * (_0xe15d2e + 0x1);
            for (_0x296d6f = 0x0; _0x296d6f <= _0x44c616; _0x296d6f++) {
                for (_0x1ed95b = 0x0; _0x1ed95b <= _0xe15d2e; _0x1ed95b++) {
                    _0x530318 = _0x4dd699 * Math[_0x16aac1(0x270)](_0x296d6f * _0x2a35f3) * Math[_0x16aac1(0x270)](_0x1ed95b * _0x2d488b + Math['PI']), _0x16c1bc = _0x4dd699 * Math['sin'](-_0x296d6f * _0x2a35f3), _0x2eae58 = _0x4dd699 * Math[_0x16aac1(0x270)](_0x296d6f * _0x2a35f3) * Math[_0x16aac1(0x26f)](_0x1ed95b * _0x2d488b + Math['PI']), _0x587440[_0x50ea46++] = _0x530318, _0x587440[_0x50ea46++] = _0x16c1bc - _0x3d6482, _0x587440[_0x50ea46++] = _0x2eae58, _0x587440[_0x50ea46++] = _0x530318, _0x587440[_0x50ea46++] = _0x16c1bc, _0x587440[_0x50ea46++] = _0x2eae58, _0x587440[_0x50ea46++] = 0x1 - _0x1ed95b / _0xe15d2e, _0x587440[_0x50ea46++] = (_0x296d6f / _0x44c616 * (Math['PI'] * _0x4dd699 / 0x2) + (_0x4e81fe + Math['PI'] * _0x4dd699 / 0x2)) / (_0x4e81fe + Math['PI'] * _0x4dd699), _0x296d6f < _0x44c616 && (_0x4fb2d6[_0x1916c8++] = _0x22d688 + _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b, _0x4fb2d6[_0x1916c8++] = _0x22d688 + _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + (_0xe15d2e + 0x1), _0x4fb2d6[_0x1916c8++] = _0x22d688 + _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + 0x1, _0x4fb2d6[_0x1916c8++] = _0x22d688 + _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b, _0x4fb2d6[_0x1916c8++] = _0x22d688 + _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + _0xe15d2e, _0x4fb2d6[_0x1916c8++] = _0x22d688 + _0x296d6f * (_0xe15d2e + 0x1) + _0x1ed95b + (_0xe15d2e + 0x1));
                }
            }
            _0x22d688 += (_0x44c616 + 0x1) * (_0xe15d2e + 0x1);
            for (_0x1ed95b = 0x0; _0x1ed95b <= _0xe15d2e; _0x1ed95b++) {
                _0x530318 = _0x4dd699 * Math[_0x16aac1(0x270)](_0x1ed95b * _0x2d488b + Math['PI']), _0x16c1bc = _0x3d6482, _0x2eae58 = _0x4dd699 * Math[_0x16aac1(0x26f)](_0x1ed95b * _0x2d488b + Math['PI']), _0x587440[_0x50ea46++] = _0x530318, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = _0x530318, _0x587440[_0x50ea46++] = _0x16c1bc, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = -_0x16c1bc, _0x587440[_0x50ea46++] = _0x2eae58, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = _0x2eae58, _0x587440[_0x50ea46++] = _0x530318, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = _0x530318, _0x587440[_0x50ea46++] = 0x0, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = 0x0, _0x587440[_0x50ea46++] = _0x2eae58, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = _0x2eae58, _0x587440[_0x50ea46++] = 0x1 - _0x1ed95b * 0x1 / _0xe15d2e, _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = 0x1 - _0x1ed95b * 0x1 / _0xe15d2e, _0x587440[_0x50ea46++] = Math['PI'] * _0x4dd699 / 0x2 / (_0x4e81fe + Math['PI'] * _0x4dd699), _0x587440[_0x50ea46 + (_0xe15d2e + 0x1) * 0x8 - 0x1] = (Math['PI'] * _0x4dd699 / 0x2 + _0x4e81fe) / (_0x4e81fe + Math['PI'] * _0x4dd699);
            }
            for (_0x1ed95b = 0x0; _0x1ed95b < _0xe15d2e; _0x1ed95b++) {
                _0x4fb2d6[_0x1916c8++] = _0x1ed95b + _0x22d688 + (_0xe15d2e + 0x1), _0x4fb2d6[_0x1916c8++] = _0x1ed95b + _0x22d688 + 0x1, _0x4fb2d6[_0x1916c8++] = _0x1ed95b + _0x22d688, _0x4fb2d6[_0x1916c8++] = _0x1ed95b + _0x22d688 + (_0xe15d2e + 0x1), _0x4fb2d6[_0x1916c8++] = _0x1ed95b + _0x22d688 + (_0xe15d2e + 0x1) + 0x1, _0x4fb2d6[_0x1916c8++] = _0x1ed95b + _0x22d688 + 0x1;
            }
            return _0x22d688 += 0x2 * (_0xe15d2e + 0x1), _0x173012[_0x16aac1(0xfcf)](_0x5c70b4, _0x587440, _0x4fb2d6);
        }
        static [_0x5659be(0xfd0)](_0x455c78 = 0.5, _0x4e5632 = 0x1, _0x2025c4 = 0x20) {
            var _0x48a077 = _0x5659be, _0x539d19 = _0x2025c4 + 0x1 + 0x1 + (_0x2025c4 + 0x1) * 0x2, _0x27962a = 0x6 * _0x2025c4 + 0x3 * _0x2025c4, _0x44430b = _0x13bc8a[_0x48a077(0x606)](_0x48a077(0xfcd)), _0xcf72d2 = _0x44430b[_0x48a077(0x4e4)] / 0x4, _0x36b6e7 = new Float32Array(_0x539d19 * _0xcf72d2), _0x4cbe1a = new Uint16Array(_0x27962a), _0x563dd4 = Math['PI'] * 0x2 / _0x2025c4, _0x786661 = _0x4e5632 / 0x2, _0x37475a = 0x0, _0x5dc856 = 0x0, _0xa29b41 = 0x0, _0x1b7b31 = 0x0, _0x7201a3 = 0x0, _0x4b7c81 = new _0x3f70c5(), _0x344f67 = new _0x3f70c5(0x0, -0x1, 0x0), _0x3eba7e = new _0x3f70c5(0x0, _0x786661, 0x0), _0x3beab3 = new _0x3f70c5(), _0x38ca20 = new _0x3f70c5(), _0x590bd3 = new _0x22f58f(), _0x5522cb = new _0x3f70c5(), _0x4efba2, _0x532896 = 0x0, _0x1f73e1 = 0x0;
            for (var _0x2ca333 = 0x0; _0x2ca333 <= _0x2025c4; _0x2ca333++) {
                _0x37475a = _0x2ca333 * _0x563dd4, _0xa29b41 = Math[_0x48a077(0x270)](_0x37475a + Math['PI']) * _0x455c78, _0x1b7b31 = _0x786661, _0x7201a3 = Math[_0x48a077(0x26f)](_0x37475a + Math['PI']) * _0x455c78, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = _0xa29b41, _0x36b6e7[_0x532896++] = _0x1b7b31, _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = -_0x1b7b31, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = _0x7201a3, _0x4b7c81['x'] = _0xa29b41, _0x4b7c81['y'] = 0x0, _0x4b7c81['z'] = _0x7201a3, _0x3beab3['x'] = _0xa29b41, _0x3beab3['y'] = -_0x1b7b31, _0x3beab3['z'] = _0x7201a3, _0x3f70c5[_0x48a077(0x210)](_0x3beab3, _0x3eba7e, _0x38ca20), _0x3f70c5['normalize'](_0x38ca20, _0x38ca20), _0x4efba2 = Math[_0x48a077(0x282)](_0x3f70c5[_0x48a077(0x1f1)](_0x344f67, _0x38ca20)), _0x3f70c5['cross'](_0x344f67, _0x38ca20, _0x5522cb), _0x3f70c5[_0x48a077(0x1f2)](_0x5522cb, _0x5522cb), _0x22f58f[_0x48a077(0x280)](_0x5522cb, _0x4efba2, _0x590bd3), _0x3f70c5[_0x48a077(0x1f2)](_0x4b7c81, _0x4b7c81), _0x3f70c5[_0x48a077(0x209)](_0x4b7c81, _0x590bd3, _0x4b7c81), _0x3f70c5[_0x48a077(0x1f2)](_0x4b7c81, _0x4b7c81), _0x36b6e7[_0x532896++] = _0x4b7c81['x'], _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = _0x4b7c81['x'], _0x36b6e7[_0x532896++] = _0x4b7c81['y'], _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = _0x4b7c81['y'], _0x36b6e7[_0x532896++] = _0x4b7c81['z'], _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = _0x4b7c81['z'], _0x36b6e7[_0x532896++] = 0x1 - _0x2ca333 * 0x1 / _0x2025c4, _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = 0x1 - _0x2ca333 * 0x1 / _0x2025c4, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896 + (_0x2025c4 + 0x1) * 0x8 - 0x1] = 0x1;
            }
            _0x532896 += (_0x2025c4 + 0x1) * 0x8;
            for (var _0x11d620 = 0x0; _0x11d620 < _0x2025c4; _0x11d620++) {
                _0x4cbe1a[_0x1f73e1++] = _0x11d620 + _0x5dc856 + (_0x2025c4 + 0x1), _0x4cbe1a[_0x1f73e1++] = _0x11d620 + _0x5dc856 + 0x1, _0x4cbe1a[_0x1f73e1++] = _0x11d620 + _0x5dc856, _0x4cbe1a[_0x1f73e1++] = _0x11d620 + _0x5dc856 + (_0x2025c4 + 0x1), _0x4cbe1a[_0x1f73e1++] = _0x11d620 + _0x5dc856 + (_0x2025c4 + 0x1) + 0x1, _0x4cbe1a[_0x1f73e1++] = _0x11d620 + _0x5dc856 + 0x1;
            }
            _0x5dc856 += 0x2 * (_0x2025c4 + 0x1);
            for (var _0x261eff = 0x0; _0x261eff <= _0x2025c4; _0x261eff++) {
                _0x261eff === 0x0 && (_0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896++] = -_0x786661, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896++] = -0x1, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896++] = 0.5, _0x36b6e7[_0x532896++] = 0.5), _0x37475a = _0x261eff * _0x563dd4, _0xa29b41 = Math[_0x48a077(0x270)](_0x37475a + Math['PI']) * _0x455c78, _0x1b7b31 = -_0x786661, _0x7201a3 = Math[_0x48a077(0x26f)](_0x37475a + Math['PI']) * _0x455c78, _0x36b6e7[_0x532896++] = _0xa29b41, _0x36b6e7[_0x532896++] = _0x1b7b31, _0x36b6e7[_0x532896++] = _0x7201a3, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896++] = -0x1, _0x36b6e7[_0x532896++] = 0x0, _0x36b6e7[_0x532896++] = 0.5 + Math['cos'](_0x37475a) * 0.5, _0x36b6e7[_0x532896++] = 0.5 + Math[_0x48a077(0x26f)](_0x37475a) * 0.5;
            }
            for (var _0x2444a1 = 0x0; _0x2444a1 < _0x2025c4; _0x2444a1++) {
                _0x4cbe1a[_0x1f73e1++] = 0x0 + _0x5dc856, _0x4cbe1a[_0x1f73e1++] = _0x2444a1 + 0x2 + _0x5dc856, _0x4cbe1a[_0x1f73e1++] = _0x2444a1 + 0x1 + _0x5dc856;
            }
            return _0x5dc856 += _0x2025c4 + 0x1 + 0x1, _0x173012[_0x48a077(0xfcf)](_0x44430b, _0x36b6e7, _0x4cbe1a);
        }
        static [_0x5659be(0xfd1)](_0x3b7f48 = 0.5, _0x2f8a67 = 0x2, _0x5a539a = 0x20) {
            var _0x2c6b54 = _0x5659be, _0x3375f1 = _0x5a539a + 0x1 + 0x1 + (_0x5a539a + 0x1) * 0x2 + (_0x5a539a + 0x1 + 0x1), _0x5621d3 = 0x3 * _0x5a539a + 0x6 * _0x5a539a + 0x3 * _0x5a539a, _0x4a543f = _0x13bc8a[_0x2c6b54(0x606)](_0x2c6b54(0xfcd)), _0x5e8ceb = _0x4a543f[_0x2c6b54(0x4e4)] / 0x4, _0x59277d = new Float32Array(_0x3375f1 * _0x5e8ceb), _0x2c11b1 = new Uint16Array(_0x5621d3), _0xc07352 = Math['PI'] * 0x2 / _0x5a539a, _0x1626f5 = _0x2f8a67 / 0x2, _0x2b775f = 0x0, _0x4aa145 = 0x0, _0x53bf32 = 0x0, _0x30e649 = 0x0, _0x1140d2 = 0x0, _0x5a2fd4 = 0x0, _0xa46726 = 0x0;
            for (var _0x49183e = 0x0; _0x49183e <= _0x5a539a; _0x49183e++) {
                _0x49183e === 0x0 && (_0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = _0x1626f5, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0x1, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0.5, _0x59277d[_0x5a2fd4++] = 0.5), _0x2b775f = _0x49183e * _0xc07352, _0x53bf32 = Math[_0x2c6b54(0x270)](_0x2b775f) * _0x3b7f48, _0x30e649 = _0x1626f5, _0x1140d2 = Math[_0x2c6b54(0x26f)](_0x2b775f) * _0x3b7f48, _0x59277d[_0x5a2fd4++] = _0x53bf32, _0x59277d[_0x5a2fd4++] = _0x30e649, _0x59277d[_0x5a2fd4++] = _0x1140d2, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0x1, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0.5 + Math[_0x2c6b54(0x270)](_0x2b775f) * 0.5, _0x59277d[_0x5a2fd4++] = 0.5 + Math[_0x2c6b54(0x26f)](_0x2b775f) * 0.5;
            }
            for (var _0x323fa0 = 0x0; _0x323fa0 < _0x5a539a; _0x323fa0++) {
                _0x2c11b1[_0xa46726++] = 0x0, _0x2c11b1[_0xa46726++] = _0x323fa0 + 0x1, _0x2c11b1[_0xa46726++] = _0x323fa0 + 0x2;
            }
            _0x4aa145 += _0x5a539a + 0x1 + 0x1;
            for (var _0x9ea925 = 0x0; _0x9ea925 <= _0x5a539a; _0x9ea925++) {
                _0x2b775f = _0x9ea925 * _0xc07352, _0x53bf32 = Math[_0x2c6b54(0x270)](_0x2b775f + Math['PI']) * _0x3b7f48, _0x30e649 = _0x1626f5, _0x1140d2 = Math[_0x2c6b54(0x26f)](_0x2b775f + Math['PI']) * _0x3b7f48, _0x59277d[_0x5a2fd4++] = _0x53bf32, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = _0x53bf32, _0x59277d[_0x5a2fd4++] = _0x30e649, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = -_0x30e649, _0x59277d[_0x5a2fd4++] = _0x1140d2, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = _0x1140d2, _0x59277d[_0x5a2fd4++] = _0x53bf32, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = _0x53bf32, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = 0x0, _0x59277d[_0x5a2fd4++] = _0x1140d2, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = _0x1140d2, _0x59277d[_0x5a2fd4++] = 0x1 - _0x9ea925 * 0x1 / _0x5a539a, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = 0x1 - _0x9ea925 * 0x1 / _0x5a539a, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4 + (_0x5a539a + 0x1) * 0x8 - 0x1] = 0x1;
            }
            _0x5a2fd4 += (_0x5a539a + 0x1) * 0x8;
            for (var _0x58612b = 0x0; _0x58612b < _0x5a539a; _0x58612b++) {
                _0x2c11b1[_0xa46726++] = _0x58612b + _0x4aa145 + (_0x5a539a + 0x1), _0x2c11b1[_0xa46726++] = _0x58612b + _0x4aa145 + 0x1, _0x2c11b1[_0xa46726++] = _0x58612b + _0x4aa145, _0x2c11b1[_0xa46726++] = _0x58612b + _0x4aa145 + (_0x5a539a + 0x1), _0x2c11b1[_0xa46726++] = _0x58612b + _0x4aa145 + (_0x5a539a + 0x1) + 0x1, _0x2c11b1[_0xa46726++] = _0x58612b + _0x4aa145 + 0x1;
            }
            _0x4aa145 += 0x2 * (_0x5a539a + 0x1);
            for (var _0x23715a = 0x0; _0x23715a <= _0x5a539a; _0x23715a++) {
                _0x23715a === 0x0 && (_0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = -_0x1626f5, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = -0x1, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0.5, _0x59277d[_0x5a2fd4++] = 0.5), _0x2b775f = _0x23715a * _0xc07352, _0x53bf32 = Math['cos'](_0x2b775f + Math['PI']) * _0x3b7f48, _0x30e649 = -_0x1626f5, _0x1140d2 = Math[_0x2c6b54(0x26f)](_0x2b775f + Math['PI']) * _0x3b7f48, _0x59277d[_0x5a2fd4++] = _0x53bf32, _0x59277d[_0x5a2fd4++] = _0x30e649, _0x59277d[_0x5a2fd4++] = _0x1140d2, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = -0x1, _0x59277d[_0x5a2fd4++] = 0x0, _0x59277d[_0x5a2fd4++] = 0.5 + Math[_0x2c6b54(0x270)](_0x2b775f) * 0.5, _0x59277d[_0x5a2fd4++] = 0.5 + Math[_0x2c6b54(0x26f)](_0x2b775f) * 0.5;
            }
            for (var _0x83eb1c = 0x0; _0x83eb1c < _0x5a539a; _0x83eb1c++) {
                _0x2c11b1[_0xa46726++] = 0x0 + _0x4aa145, _0x2c11b1[_0xa46726++] = _0x83eb1c + 0x2 + _0x4aa145, _0x2c11b1[_0xa46726++] = _0x83eb1c + 0x1 + _0x4aa145;
            }
            return _0x4aa145 += _0x5a539a + 0x1 + 0x1, _0x173012[_0x2c6b54(0xfcf)](_0x4a543f, _0x59277d, _0x2c11b1);
        }
        static [_0x5659be(0xfd2)](_0x4f433b = 0xa, _0x16a64d = 0xa, _0x5e85ba = 0xa, _0xabc4d5 = 0xa) {
            var _0x390ad4 = _0x5659be, _0x3acf99 = (_0x5e85ba + 0x1) * (_0xabc4d5 + 0x1), _0x1867c5 = _0x5e85ba * _0xabc4d5 * 0x2 * 0x3, _0x190c17 = new Uint16Array(_0x1867c5), _0x5d9c14 = _0x13bc8a[_0x390ad4(0x606)]('POSITION,NORMAL,UV'), _0x3f38b5 = _0x5d9c14['vertexStride'] / 0x4, _0x4ad066 = new Float32Array(_0x3acf99 * _0x3f38b5), _0x140925 = _0x4f433b / 0x2, _0x5c55a6 = _0x16a64d / 0x2, _0x57418f = _0x4f433b / _0x5e85ba, _0x1d2832 = _0x16a64d / _0xabc4d5, _0x4e5b5a = 0x0;
            for (var _0x1b3289 = 0x0; _0x1b3289 <= _0xabc4d5; _0x1b3289++) {
                for (var _0x1f5eae = 0x0; _0x1f5eae <= _0x5e85ba; _0x1f5eae++) {
                    _0x4ad066[_0x4e5b5a++] = _0x1f5eae * _0x57418f - _0x140925, _0x4ad066[_0x4e5b5a++] = 0x0, _0x4ad066[_0x4e5b5a++] = _0x1b3289 * _0x1d2832 - _0x5c55a6, _0x4ad066[_0x4e5b5a++] = 0x0, _0x4ad066[_0x4e5b5a++] = 0x1, _0x4ad066[_0x4e5b5a++] = 0x0, _0x4ad066[_0x4e5b5a++] = _0x1f5eae * 0x1 / _0x5e85ba, _0x4ad066[_0x4e5b5a++] = _0x1b3289 * 0x1 / _0xabc4d5;
                }
            }
            var _0x58430f = 0x0;
            for (_0x1b3289 = 0x0; _0x1b3289 < _0xabc4d5; _0x1b3289++) {
                for (_0x1f5eae = 0x0; _0x1f5eae < _0x5e85ba; _0x1f5eae++) {
                    _0x190c17[_0x58430f++] = (_0x1b3289 + 0x1) * (_0x5e85ba + 0x1) + _0x1f5eae, _0x190c17[_0x58430f++] = _0x1b3289 * (_0x5e85ba + 0x1) + _0x1f5eae, _0x190c17[_0x58430f++] = (_0x1b3289 + 0x1) * (_0x5e85ba + 0x1) + _0x1f5eae + 0x1, _0x190c17[_0x58430f++] = _0x1b3289 * (_0x5e85ba + 0x1) + _0x1f5eae, _0x190c17[_0x58430f++] = _0x1b3289 * (_0x5e85ba + 0x1) + _0x1f5eae + 0x1, _0x190c17[_0x58430f++] = (_0x1b3289 + 0x1) * (_0x5e85ba + 0x1) + _0x1f5eae + 0x1;
                }
            }
            return _0x173012['_createMesh'](_0x5d9c14, _0x4ad066, _0x190c17);
        }
        static ['createQuad'](_0x17ab13 = 0x1, _0x544890 = 0x1) {
            var _0x2eb8c8 = _0x13bc8a['getVertexDeclaration']('POSITION,NORMAL,UV'), _0x34fd4f = _0x17ab13 / 0x2, _0x34a544 = _0x544890 / 0x2, _0x26e63b = new Float32Array([
                    -_0x34fd4f,
                    _0x34a544,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x34fd4f,
                    _0x34a544,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    -_0x34fd4f,
                    -_0x34a544,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    _0x34fd4f,
                    -_0x34a544,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1
                ]), _0x25cf68 = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x3,
                    0x2,
                    0x1
                ]);
            return _0x173012['_createMesh'](_0x2eb8c8, _0x26e63b, _0x25cf68);
        }
        static [_0x5659be(0xfd3)](_0x14d555 = 0.5, _0x741f2a = 0x20, _0x574cf9 = 0x20) {
            var _0x4c7263 = _0x5659be, _0x53d8a7 = (_0x741f2a + 0x1) * (_0x574cf9 + 0x1), _0x128580 = 0x3 * _0x741f2a * (_0x574cf9 + 0x1) * 0x2, _0x4fd913 = new Uint16Array(_0x128580), _0x13cae1 = _0x13bc8a[_0x4c7263(0x606)](_0x4c7263(0xfcd)), _0x5cd06e = _0x13cae1[_0x4c7263(0x4e4)] / 0x4, _0x4a5c77 = new Float32Array(_0x53d8a7 * _0x5cd06e), _0x3a5003 = Math['PI'] / _0x741f2a, _0x4cda80 = Math['PI'] * 0x2 / _0x574cf9, _0xc007ee = 0x0;
            _0x53d8a7 = 0x0, _0x128580 = 0x0;
            for (var _0x41ec94 = 0x0; _0x41ec94 < _0x741f2a + 0x1; _0x41ec94++) {
                var _0x2c91e8 = Math['sin'](_0x41ec94 * _0x3a5003), _0xa2f039 = Math[_0x4c7263(0x270)](_0x41ec94 * _0x3a5003);
                for (var _0x34ae21 = 0x0; _0x34ae21 < _0x574cf9 + 0x1; _0x34ae21++) {
                    var _0x5ae6c3 = _0x2c91e8 * Math['sin'](_0x34ae21 * _0x4cda80 + Math['PI'] * 0x1 / 0x2), _0x2249e2 = _0x2c91e8 * Math[_0x4c7263(0x270)](_0x34ae21 * _0x4cda80 + Math['PI'] * 0x1 / 0x2);
                    _0x4a5c77[_0x53d8a7 + 0x0] = _0x5ae6c3 * _0x14d555, _0x4a5c77[_0x53d8a7 + 0x1] = _0xa2f039 * _0x14d555, _0x4a5c77[_0x53d8a7 + 0x2] = _0x2249e2 * _0x14d555, _0x4a5c77[_0x53d8a7 + 0x3] = _0x5ae6c3, _0x4a5c77[_0x53d8a7 + 0x4] = _0xa2f039, _0x4a5c77[_0x53d8a7 + 0x5] = _0x2249e2, _0x4a5c77[_0x53d8a7 + 0x6] = _0x34ae21 / _0x574cf9, _0x4a5c77[_0x53d8a7 + 0x7] = _0x41ec94 / _0x741f2a, _0x53d8a7 += _0x5cd06e, _0x41ec94 != _0x741f2a - 0x1 && (_0x4fd913[_0x128580++] = _0xc007ee + (_0x574cf9 + 0x1), _0x4fd913[_0x128580++] = _0xc007ee, _0x4fd913[_0x128580++] = _0xc007ee + 0x1, _0x4fd913[_0x128580++] = _0xc007ee + _0x574cf9, _0x4fd913[_0x128580++] = _0xc007ee, _0x4fd913[_0x128580++] = _0xc007ee + (_0x574cf9 + 0x1), _0xc007ee++);
                }
            }
            return _0x173012[_0x4c7263(0xfcf)](_0x13cae1, _0x4a5c77, _0x4fd913);
        }
    }
    var _0x5482f8 = _0x5659be(0xfd4), _0x598d3e = '#include\x20\x22Lighting.glsl\x22;\x0d\x0a#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0aattribute\x20vec4\x20a_PositionTexcoord;\x0d\x0auniform\x20vec4\x20u_OffsetScale;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x09\x0d\x0a\x09gl_Position\x20=\x20vec4(u_OffsetScale.x*2.0-1.0+(a_PositionTexcoord.x+1.0)*u_OffsetScale.z,(1.0-((u_OffsetScale.y*2.0-1.0+(-a_PositionTexcoord.y+1.0)*u_OffsetScale.w)+1.0)/2.0)*2.0-1.0,\x200.0,\x201.0);\x09\x0d\x0a\x09v_Texcoord0\x20=\x20a_PositionTexcoord.zw;\x0d\x0a\x09gl_Position\x20=\x20remapGLPositionZ(gl_Position);\x0d\x0a}', _0x4566e1 = _0x5659be(0xfd5), _0x1022d2 = _0x5659be(0xfd6), _0xd602d7 = _0x5659be(0xfd7), _0x31724e = '#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x0d\x0auniform\x20mat4\x20u_MvpMatrix;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\x0d\x0a\x09attribute\x20vec3\x20a_Normal;\x0d\x0a\x09varying\x20vec3\x20v_Normal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(CALCULATE_SHADOWS)&&defined(SHADOWMAP_PSSM1))\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a\x09uniform\x20vec4\x20u_LightmapScaleOffset;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)//shader���Զ���ĺ겻����ifdef\x20����ĳ�if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20a_Position;\x0d\x0a\x20\x20\x0d\x0a\x09v_Texcoord0\x20=\x20a_Texcoord0;\x0d\x0a\x20\x20\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09v_LightMapUV\x20=\x20vec2(a_Texcoord0.x,\x201.0\x20-\x20a_Texcoord0.y)\x20*\x20u_LightmapScaleOffset.xy\x20+\x20u_LightmapScaleOffset.zw;\x0d\x0a\x09\x09v_LightMapUV.y\x20=\x201.0\x20-\x20v_LightMapUV.y;\x0d\x0a\x09#endif\x0d\x0a\x20\x20\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09v_Normal\x20=\x20a_Normal;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(CALCULATE_SHADOWS)&&defined(SHADOWMAP_PSSM1))\x0d\x0a\x09\x09v_PositionWorld=(u_WorldMat*a_Position).xyz;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)//shader���Զ���ĺ겻����ifdef\x20����ĳ�if\x20defined\x0d\x0a\x09\x09v_ShadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld));\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}', _0x1ad7f9 = 'struct\x20LayaGIInput\x0d\x0a{\x0d\x0a\x09vec2\x20lightmapUV;\x0d\x0a\x09vec3\x20worldPos;\x0d\x0a};\x0d\x0a\x0d\x0a#define\x20LAYA_SPECCUBE_LOD_STEPS\x206.0\x0d\x0a\x0d\x0auniform\x20vec3\x20u_AmbientColor;\x0d\x0a\x0d\x0a#if\x20defined(GI_AMBIENT_SH)\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHAr;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHAg;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHAb;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHBr;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHBg;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHBb;\x0d\x0a\x09uniform\x20vec4\x20u_AmbientSHC;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20samplerCube\x20u_ReflectTexture;\x0d\x0auniform\x20vec4\x20u_ReflectCubeHDRParams;\x0d\x0a\x0d\x0a#ifdef\x20SPECCUBE_BOX_PROJECTION\x0d\x0a\x09uniform\x20vec3\x20u_SpecCubeProbePosition;\x0d\x0a\x09uniform\x20vec3\x20u_SpecCubeBoxMax;\x0d\x0a\x09uniform\x20vec3\x20u_SpecCubeBoxMin;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20GI_AMBIENT_SH\x0d\x0a\x09mediump\x20vec3\x20shEvalLinearL0L1(mediump\x20vec4\x20normal)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20x;\x0d\x0a\x09\x09//\x20Linear\x20(L1)\x20+\x20constant\x20(L0)\x20polynomial\x20terms\x0d\x0a\x09\x09x.r\x20=\x20dot(u_AmbientSHAr,\x20normal);\x0d\x0a\x09\x09x.g\x20=\x20dot(u_AmbientSHAg,\x20normal);\x0d\x0a\x09\x09x.b\x20=\x20dot(u_AmbientSHAb,\x20normal);\x0d\x0a\x09\x09return\x20x;\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09mediump\x20vec3\x20shEvalLinearL2(mediump\x20vec4\x20normal)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20x1,x2;\x0d\x0a\x09\x09//\x204\x20of\x20the\x20quadratic\x20(L2)\x20polynomials\x0d\x0a\x09\x09mediump\x20vec4\x20vB\x20=\x20normal.xyzz\x20*\x20normal.yzzx;\x0d\x0a\x09\x09x1.r\x20=\x20dot(u_AmbientSHBr,\x20vB);\x0d\x0a\x09\x09x1.g\x20=\x20dot(u_AmbientSHBg,\x20vB);\x0d\x0a\x09\x09x1.b\x20=\x20dot(u_AmbientSHBb,\x20vB);\x0d\x0a\x0d\x0a\x09\x09//\x20Final\x20(5th)\x20quadratic\x20(L2)\x20polynomial\x0d\x0a\x09\x09mediump\x20float\x20vC\x20=\x20normal.x*normal.x\x20-\x20normal.y*normal.y;\x0d\x0a\x09\x09x2\x20=\x20u_AmbientSHC.rgb\x20*\x20vC;\x0d\x0a\x0d\x0a\x09\x09return\x20x1\x20+\x20x2;\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09mediump\x20vec3\x20shadeSHPerPixel(mediump\x20vec3\x20normal)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20ambientContrib;\x0d\x0a\x09\x09mediump\x20vec4\x20normalV4=vec4(-normal.x,normal.yz,\x201.0);//Note:SH\x20Data\x20is\x20left-hand,so\x20x\x20need\x20inverse\x0d\x0a\x09\x09ambientContrib\x20=\x20shEvalLinearL0L1(normalV4);\x0d\x0a\x09\x09ambientContrib\x20+=\x20shEvalLinearL2(normalV4);\x0d\x0a\x09\x09mediump\x20vec3\x20ambient\x20=\x20max(vec3(0.0),\x20ambientContrib);\x0d\x0a\x09\x09ambient\x20=\x20layaLinearToGammaSpace(ambient);\x0d\x0a\x09\x09return\x20ambient;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x20mediump\x20vec3\x20BoxProjectedCubemapDirection(mediump\x20vec3\x20worldRefl,mediump\x20vec3\x20worldPos,mediump\x20vec3\x20cubemapCenter,mediump\x20vec3\x20boxMin,mediump\x20vec3\x20boxMax){\x0d\x0a\x09\x20mediump\x20vec3\x20nrdir\x20=\x20normalize(worldRefl);\x0d\x0a\x09\x20mediump\x20vec3\x20rbmax\x20=\x20(boxMax\x20-\x20worldPos);\x0d\x0a\x09\x20mediump\x20vec3\x20rbmin\x20=\x20(boxMin\x20-\x20worldPos);\x0d\x0a\x09\x20mediump\x20vec3\x20select\x20=\x20step(vec3(0.0),\x20worldRefl);\x0d\x0a\x09\x20mediump\x20vec3\x20rbminmax\x20=\x20mix(rbmin,\x20rbmax,\x20select);\x0d\x0a\x09rbminmax\x20=\x20rbminmax\x20/\x20nrdir;\x0d\x0a\x09mediump\x20float\x20scalar\x20=\x20min(min(rbminmax.x,\x20rbminmax.y),\x20rbminmax.z);\x0d\x0a\x09\x20mediump\x20vec3\x20worldChangeRefl\x20=\x20nrdir\x20*\x20scalar\x20+\x20(worldPos\x20-\x20cubemapCenter);\x0d\x0a\x09return\x20worldChangeRefl;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0amediump\x20vec3\x20layaDecodeDirectionalLightmap\x20(mediump\x20vec3\x20color,\x20lowp\x20vec4\x20dirTex,\x20mediump\x20vec3\x20normalWorld)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20//\x20In\x20directional\x20(non-specular)\x20mode\x20Enlighten\x20bakes\x20dominant\x20light\x20direction\x0d\x0a\x20\x20\x20\x20//\x20in\x20a\x20way,\x20that\x20using\x20it\x20for\x20half\x20Lambert\x20and\x20then\x20dividing\x20by\x20a\x20\x22rebalancing\x20coefficient\x22\x0d\x0a\x20\x20\x20\x20//\x20gives\x20a\x20result\x20close\x20to\x20plain\x20diffuse\x20response\x20lightmaps,\x20but\x20normalmapped.\x0d\x0a\x0d\x0a\x20\x20\x20\x20//\x20Note\x20that\x20dir\x20is\x20not\x20unit\x20length\x20on\x20purpose.\x20Its\x20length\x20is\x20\x22directionality\x22,\x20like\x0d\x0a\x20\x20\x20\x20//\x20for\x20the\x20directional\x20specular\x20lightmaps.\x0d\x0a\x09lowp\x20vec3\x20directional=dirTex.xyz\x20-\x200.5;\x0d\x0a\x09directional.x=-directional.x;//NOTE:because\x20coord\x20System\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20halfLambert\x20=\x20dot(normalWorld,directional)\x20+\x200.5;\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20color\x20*\x20halfLambert\x20/\x20max(1e-4,\x20dirTex.w);\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20layaGIBase(LayaGIInput\x20giInput,mediump\x20float\x20occlusion,\x20mediump\x20vec3\x20normalWorld)\x0d\x0a{\x0d\x0a\x09vec3\x20indirectDiffuse;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x09\x0d\x0a\x09\x09mediump\x20vec3\x20bakedColor\x20=decodeHDR(texture2D(u_LightMap,\x20giInput.lightmapUV),5.0);\x0d\x0a\x09\x09#ifdef\x20LIGHTMAP_DIRECTIONAL\x0d\x0a\x09\x09\x09lowp\x20vec4\x20bakedDirTex\x20=\x20texture2D\x20(u_LightMapDirection,\x20giInput.lightmapUV);\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20indirectDiffuse\x20=\x20layaDecodeDirectionalLightmap\x20(bakedColor,\x20bakedDirTex,\x20normalWorld);\x0d\x0a\x09\x09#else\x20//unDirectional\x20lightmap\x0d\x0a\x09\x09\x09indirectDiffuse\x20=\x20bakedColor;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20GI_AMBIENT_SH\x0d\x0a\x09\x09\x09indirectDiffuse\x20=\x20shadeSHPerPixel(normalWorld);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09indirectDiffuse\x20=\x20u_AmbientColor;\x20//already\x20in\x20gamma\x20space\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09indirectDiffuse*=occlusion;\x0d\x0a\x09return\x20indirectDiffuse;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20layaGlossyEnvironment(mediump\x20vec4\x20glossIn)\x0d\x0a{\x0d\x0a\x09mediump\x20float\x20perceptualRoughness\x20=\x20glossIn.a;\x0d\x0a\x0d\x0a\x09//\x20use\x20approximation\x20to\x20solve,below\x20is\x20more\x20reasonable,but\x20maybe\x20slow.\x20\x0d\x0a\x09//\x20float\x20m\x20=\x20perceptualRoughnessToRoughness(perceptualRoughness);\x20//\x20m\x20is\x20the\x20real\x20roughness\x20parameter\x0d\x0a\x20\x20\x20\x20//\x20const\x20float\x20fEps\x20=\x201.192092896e-07F;\x20\x20\x20\x20\x20\x20\x20\x20//\x20smallest\x20such\x20that\x201.0+FLT_EPSILON\x20!=\x201.0\x20\x20(+1e-4h\x20is\x20NOT\x20good\x20here.\x20is\x20visibly\x20very\x20wrong)\x0d\x0a\x20\x20\x20\x20//\x20float\x20n\x20=\x20\x20(2.0/max(fEps,\x20m*m))-2.0;\x20\x20\x20\x20\x20\x20\x20\x20//\x20remap\x20to\x20spec\x20power.\x20See\x20eq.\x2021\x20in\x20-->\x20https://dl.dropboxusercontent.com/u/55891920/papers/mm_brdf.pdf\x0d\x0a\x20\x20\x20\x20//\x20n\x20/=\x204;\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20remap\x20from\x20n_dot_h\x20formulatino\x20to\x20n_dot_r.\x20See\x20section\x20\x22Pre-convolved\x20Cube\x20Maps\x20vs\x20Path\x20Tracers\x22\x20-->\x20https://s3.amazonaws.com/docs.knaldtech.com/knald/1.0.0/lys_power_drops.html\x0d\x0a\x20\x20\x20\x20//\x20perceptualRoughness\x20=\x20pow(\x202/(n+2),\x200.25);\x20\x20//\x20remap\x20back\x20to\x20square\x20root\x20of\x20real\x20roughness\x20(0.25\x20include\x20both\x20the\x20sqrt\x20root\x20of\x20the\x20conversion\x20and\x20sqrt\x20for\x20going\x20from\x20roughness\x20to\x20perceptualRoughness)\x0d\x0a\x09perceptualRoughness\x20=\x20perceptualRoughness\x20*\x20(1.7\x20-\x200.7*perceptualRoughness);//just\x20a\x20approximation,but\x20fast.\x0d\x0a\x20\x0d\x0a\x09mediump\x20float\x20mip\x20=\x20perceptualRoughness\x20*\x20LAYA_SPECCUBE_LOD_STEPS;\x0d\x0a\x09mediump\x20vec3\x20uvw\x20=\x20glossIn.rgb;\x0d\x0a\x09uvw.x=-uvw.x;//Note:reflectCube\x20is\x20left-hand,so\x20x\x20need\x20inverse\x0d\x0a\x09mediump\x20vec4\x20rgbm=textureCubeLodEXT(u_ReflectTexture,uvw,mip);\x0d\x0a\x09return\x20decodeHDR(rgbm,u_ReflectCubeHDRParams.x);\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20layaGIIndirectSpecular(LayaGIInput\x20giInput,mediump\x20float\x20occlusion,\x20vec4\x20glossIn)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SPECCUBE_BOX_PROJECTION\x0d\x0a\x09\x09vec3\x20originalReflUVW\x20=\x20glossIn.xyz;\x0d\x0a\x09\x09glossIn.xyz\x20=BoxProjectedCubemapDirection(originalReflUVW,giInput.worldPos,u_SpecCubeProbePosition,u_SpecCubeBoxMin,u_SpecCubeBoxMax);\x0d\x0a\x09#endif\x0d\x0a\x09mediump\x20vec3\x20specular\x20=\x20layaGlossyEnvironment(glossIn);\x0d\x0a\x09return\x20specular\x20*\x20occlusion;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0aLayaGI\x20layaGlobalIllumination(LayaGIInput\x20giInput,mediump\x20float\x20occlusion,\x20mediump\x20vec3\x20normalWorld,mediump\x20vec4\x20uvwRoughness)\x0d\x0a{\x0d\x0a\x09LayaGI\x20gi;\x0d\x0a\x09gi.diffuse\x20=\x20layaGIBase(giInput,occlusion,\x20normalWorld);\x0d\x0a\x09gi.specular\x20=\x20layaGIIndirectSpecular(giInput,occlusion,\x20uvwRoughness);\x0d\x0a\x09return\x20gi;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a', _0x4eeb5e = _0x5659be(0xfd8), _0x58d131 = _0x5659be(0xfd9), _0x299c8a = _0x5659be(0xfda), _0x2a036c = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0auniform\x20vec4\x20u_Color;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x20\x20gl_FragColor\x20=\x20v_Color\x20*\x20u_Color;\x20\x0d\x0a}\x0d\x0a\x0d\x0a', _0x359f5e = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0auniform\x20mat4\x20u_MvpMatrix;\x0d\x0auniform\x20vec4\x20u_Color;\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20a_Position;\x0d\x0a\x09v_Color=a_Color*u_Color;\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}', _0x59e852 = _0x5659be(0xfdb), _0x1cf7f5 = _0x5659be(0xfdc), _0x14d530 = _0x5659be(0x796), _0x175cc2 = _0x5659be(0x797), _0x2c0ec5 = _0x5659be(0xfdd), _0x5275fb = _0x5659be(0xfde), _0x445614 = _0x5659be(0xfdf), _0xe5d3cb = _0x5659be(0xfe0), _0x3df179 = 'attribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0avarying\x20vec3\x20v_Normal;\x20\x0d\x0a\x0d\x0a#if\x20defined(NORMALTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09attribute\x20vec4\x20a_Tangent0;\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a\x20\x20\x20\x20#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09\x20\x20\x20\x20varying\x20vec3\x20v_ViewDirForParallax;\x0d\x0a\x20\x20\x20\x20#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)||(defined(LIGHTMAP)&&defined(UV))\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(LIGHTMAP)&&defined(UV1)\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord1;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09uniform\x20vec4\x20u_LightmapScaleOffset;\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec3\x20u_CameraPos;\x0d\x0avarying\x20vec3\x20v_EyeVec;\x0d\x0avarying\x20vec3\x20v_PositionWorld;\x0d\x0avarying\x20float\x20v_posViewZ;\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a', _0x40827b = '#ifdef\x20ALPHATEST\x0d\x0a\x09uniform\x20float\x20u_AlphaTestValue;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_AlbedoColor;\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_NormalTexture;\x0d\x0a\x09uniform\x20float\x20u_NormalScale;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_AlbedoTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20METALLICGLOSSTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_MetallicGlossTexture;\x0d\x0a#endif\x0d\x0auniform\x20float\x20u_Metallic;\x0d\x0a\x0d\x0a#ifdef\x20SPECULARGLOSSTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_SpecGlossTexture;\x0d\x0a#endif\x0d\x0auniform\x20vec3\x20u_SpecularColor;\x0d\x0a\x0d\x0auniform\x20float\x20u_Smoothness;\x0d\x0auniform\x20float\x20u_SmoothnessScale;\x0d\x0a\x0d\x0a#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_ParallaxTexture;\x0d\x0a\x09uniform\x20float\x20u_ParallaxScale;\x0d\x0a\x09varying\x20vec3\x20v_ViewDirForParallax;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20OCCLUSIONTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_OcclusionTexture;\x0d\x0a\x09uniform\x20float\x20u_occlusionStrength;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20EMISSION\x20\x0d\x0a\x09#ifdef\x20EMISSIONTEXTURE\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_EmissionTexture;\x0d\x0a\x09#endif\x0d\x0a\x09uniform\x20vec4\x20u_EmissionColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a\x09uniform\x20sampler2D\x20u_LightMap;\x0d\x0a\x09#ifdef\x20LIGHTMAP_DIRECTIONAL\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightMapDirection;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Normal;\x20\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09uniform\x20DirectionLight\x20u_DirectionLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09uniform\x20PointLight\x20u_PointLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09uniform\x20SpotLight\x20u_SpotLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20mat4\x20u_View;\x0d\x0a\x09\x09uniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x09\x09uniform\x20vec4\x20u_Viewport;\x0d\x0a\x09\x09uniform\x20int\x20u_DirationLightCount;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightBuffer;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightClusterBuffer;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_EyeVec;\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a//后面考虑宏TODO\x0d\x0avarying\x20vec3\x20v_PositionWorld;\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0amediump\x20float\x20lerpOneTo(mediump\x20float\x20b,\x20mediump\x20float\x20t)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20oneMinusT\x20=\x201.0\x20-\x20t;\x0d\x0a\x20\x20\x20\x20return\x20oneMinusT\x20+\x20b\x20*\x20t;\x0d\x0a}\x0d\x0a\x0d\x0a#ifdef\x20EMISSION\x20\x0d\x0a\x09vec3\x20emission(vec2\x20uv)\x0d\x0a\x09{\x0d\x0a\x09\x09#ifdef\x20EMISSIONTEXTURE\x0d\x0a\x09\x09\x09return\x20texture2D(u_EmissionTexture,\x20uv).rgb\x20*\x20u_EmissionColor.rgb;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09return\x20u_EmissionColor.rgb;\x0d\x0a\x09\x09#endif\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0amediump\x20float\x20getAlpha(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09return\x20u_AlbedoColor.a;\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09return\x20texture2D(u_AlbedoTexture,\x20uv).a\x20*\x20u_AlbedoColor.a;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09return\x20u_AlbedoColor.a;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20float\x20getOcclusion(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09#ifdef\x20OCCLUSIONTEXTURE\x0d\x0a\x09\x09mediump\x20float\x20occ\x20=\x20texture2D(u_OcclusionTexture,\x20uv).g;\x0d\x0a\x09\x09return\x20lerpOneTo(occ,\x20u_occlusionStrength);\x0d\x0a\x09#else\x0d\x0a\x09\x09return\x201.0;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20albedo(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09return\x20u_AlbedoColor.rgb\x20*\x20texture2D(u_AlbedoTexture,\x20uv).rgb;\x0d\x0a\x09#else\x0d\x0a\x09\x09return\x20u_AlbedoColor.rgb;\x0d\x0a\x09#endif\x0d\x0a\x09//TODO:Detail\x20Texture\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec2\x20getMetallicGloss(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09mediump\x20vec2\x20ms;//x\x20is\x20metallic,y\x20is\x20smoothness\x0d\x0a\x09#ifdef\x20METALLICGLOSSTEXTURE\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09ms.x\x20=\x20texture2D(u_MetallicGlossTexture,\x20uv).r;\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a*u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09ms\x20=\x20texture2D(u_MetallicGlossTexture,\x20uv).ra;\x0d\x0a\x09\x09\x09ms.y\x20*=\x20u_SmoothnessScale;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09ms.x\x20=\x20u_Metallic;\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a\x20*\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09ms.y\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09ms.y\x20=\x20u_Smoothness;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09return\x20ms;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec4\x20specularGloss(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09mediump\x20vec4\x20sg;\x0d\x0a\x09#ifdef\x20SPECULARGLOSSTEXTURE\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09sg.rgb\x20=\x20texture2D(u_SpecGlossTexture,\x20uv).rgb;\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a*u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09sg\x20=\x20texture2D(u_SpecGlossTexture,\x20uv);\x0d\x0a\x09\x09\x09sg.a\x20*=\x20u_SmoothnessScale;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09sg.rgb\x20=\x20u_SpecularColor.rgb;\x0d\x0a\x09\x09#ifdef\x20SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\x0d\x0a\x09\x09\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20texture2D(u_AlbedoTexture,\x20uv).a\x20*\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09sg.a\x20=\x20u_SmoothnessScale;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09sg.a\x20=\x20u_Smoothness;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09\x09return\x20sg;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09mediump\x20vec3\x20unpackScaleNormal(mediump\x20vec3\x20packednormal,\x20mediump\x20float\x20bumpScale)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20normal\x20=\x20packednormal.xyz\x20*\x202.0\x20-\x201.0;\x0d\x0a\x09\x09normal.y=-normal.y;//NOTE:because\x20unity\x20to\x20LayaAir\x20coordSystem.\x0d\x0a\x09\x09normal.xy\x20*=\x20bumpScale;\x0d\x0a\x09\x09return\x20normal;\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09mediump\x20vec3\x20normalInTangentSpace(vec2\x20texcoords)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20vec3\x20normalTangent\x20=\x20unpackScaleNormal(texture2D(u_NormalTexture,\x20texcoords).rgb,u_NormalScale);\x0d\x0a\x09\x09return\x20normalTangent;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09mediump\x20vec2\x20parallaxOffset1Step(mediump\x20float\x20h,\x20mediump\x20float\x20height,\x20mediump\x20vec3\x20viewDir)\x0d\x0a\x09{\x0d\x0a\x09\x09h\x20=\x20h\x20*\x20height\x20-\x20height\x20/\x202.0;\x0d\x0a\x09\x09viewDir.z\x20+=\x200.42;\x0d\x0a\x09\x09return\x20h\x20*\x20(viewDir.xy\x20/\x20viewDir.z);\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09vec2\x20parallax(vec2\x20texcoords,\x20mediump\x20vec3\x20viewDir)\x0d\x0a\x09{\x0d\x0a\x09\x09mediump\x20float\x20h\x20=\x20texture2D(u_ParallaxTexture,\x20texcoords.xy).g;\x0d\x0a\x09\x09vec2\x20offset\x20=\x20parallaxOffset1Step(h,\x20u_ParallaxScale,\x20viewDir);\x0d\x0a\x09\x09return\x20texcoords+offset;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a', _0x5352a2 = _0x5659be(0xfe1), _0x3cb2b8 = '#include\x20\x22Lighting.glsl\x22;\x0d\x0a#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0aattribute\x20vec4\x20a_PositionTexcoord;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09gl_Position\x20=\x20vec4(a_PositionTexcoord.xy,\x200.0,\x201.0);\x0d\x0a\x09v_Texcoord0\x20=\x20a_PositionTexcoord.zw;\x0d\x0a\x09gl_Position\x20=\x20remapGLPositionZ(gl_Position);\x0d\x0a}', _0x5baea2 = _0x5659be(0xfe2), _0x254935 = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0a\x0d\x0avoid\x20fragDownsample4()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox4Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragDownsample4();\x0d\x0a}', _0x2e1091 = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_AutoExposureTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20vec4\x20u_Threshold;\x20//\x20x:\x20threshold\x20value\x20(linear),\x20y:\x20threshold\x20-\x20knee,\x20z:\x20knee\x20*\x202,\x20w:\x200.25\x20/\x20knee\x0d\x0auniform\x20vec4\x20u_Params;\x20//\x20x:\x20clamp,\x20yzw:\x20unused\x0d\x0a\x0d\x0amediump\x20vec4\x20prefilter(mediump\x20vec4\x20color,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20float\x20autoExposure\x20=\x20texture2D(u_AutoExposureTex,\x20uv).r;\x0d\x0a\x09color\x20*=\x20autoExposure;\x0d\x0a\x09color\x20=\x20min(vec4(u_Params.x),\x20color);\x20//\x20clamp\x20to\x20max\x0d\x0a\x09color\x20=\x20quadraticThreshold(color,\x20u_Threshold.x,\x20u_Threshold.yzw);\x0d\x0a\x09return\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragPrefilter13()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox13Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20prefilter(safeHDR(color),\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragPrefilter13();\x0d\x0a}', _0x89f0cd = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_AutoExposureTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20vec4\x20u_Threshold;\x20//\x20x:\x20threshold\x20value\x20(linear),\x20y:\x20threshold\x20-\x20knee,\x20z:\x20knee\x20*\x202,\x20w:\x200.25\x20/\x20knee\x0d\x0auniform\x20vec4\x20u_Params;\x20//\x20x:\x20clamp,\x20yzw:\x20unused\x0d\x0a\x0d\x0amediump\x20vec4\x20prefilter(mediump\x20vec4\x20color,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20float\x20autoExposure\x20=\x20texture2D(u_AutoExposureTex,\x20uv).r;\x0d\x0a\x09color\x20*=\x20autoExposure;\x0d\x0a\x09color\x20=\x20min(vec4(u_Params.x),\x20color);\x20//\x20clamp\x20to\x20max\x0d\x0a\x09color\x20=\x20quadraticThreshold(color,\x20u_Threshold.x,\x20u_Threshold.yzw);\x0d\x0a\x09return\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragPrefilter4()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox4Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20prefilter(safeHDR(color),\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragPrefilter4();\x0d\x0a}', _0x27f4f8 = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_BloomTex;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20float\x20u_SampleScale;\x0d\x0a\x0d\x0amediump\x20vec4\x20combine(mediump\x20vec4\x20bloom,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20texture2D(u_BloomTex,\x20uv);\x0d\x0a\x09return\x20bloom\x20+\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragUpsampleBox()\x20{\x0d\x0a\x09mediump\x20vec4\x20bloom\x20=\x20upsampleBox(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy,\x20vec4(u_SampleScale));\x0d\x0a\x09gl_FragColor\x20=\x20combine(bloom,\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragUpsampleBox();\x0d\x0a}', _0x3ccec1 = _0x5659be(0xfe3), _0x47a452 = _0x5659be(0xfe4), _0x4a2671 = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_BloomTex;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_AutoExposureTex;\x0d\x0auniform\x20sampler2D\x20u_Bloom_DirtTex;\x0d\x0auniform\x20vec4\x20u_BloomTex_TexelSize;\x0d\x0auniform\x20vec4\x20u_Bloom_DirtTileOffset;\x20//\x20xy:\x20tiling,\x20zw:\x20offset\x0d\x0auniform\x20mediump\x20vec3\x20u_Bloom_Settings;//\x20x:\x20sampleScale,\x20y:\x20intensity,\x20z:\x20dirt\x20intensity\x0d\x0auniform\x20mediump\x20vec3\x20u_Bloom_Color;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09mediump\x20float\x20autoExposure\x20=\x20texture2D(u_AutoExposureTex,\x20v_Texcoord0).r;\x0d\x0a\x09mediump\x20vec4\x20color=vec4(0.0);\x0d\x0a\x09color\x20=\x20texture2D(u_MainTex,\x20v_Texcoord0);\x0d\x0a\x09\x0d\x0a\x09color\x20=\x20sRGBToLinear(color);\x0d\x0a\x09color.rgb\x20*=\x20autoExposure;\x0d\x0a\x09\x0d\x0a\x09#if\x20defined(BLOOM)||defined(BLOOM_LOW)\x0d\x0a\x09\x09#ifdef\x20BLOOM\x0d\x0a\x09\x09\x09mediump\x20vec4\x20bloom\x20=\x20upsampleTent(u_BloomTex,\x20v_Texcoord0,\x20u_BloomTex_TexelSize.xy,\x20vec4(u_Bloom_Settings.x));\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09mediump\x20vec4\x20bloom\x20=\x20upsampleBox(u_BloomTex,\x20v_Texcoord0,\x20u_BloomTex_TexelSize.xy,\x20vec4(u_Bloom_Settings.x));\x0d\x0a\x09\x09#endif\x0d\x0a\x0d\x0a\x09\x09//\x20UVs\x20should\x20be\x20Distort(uv\x20*\x20u_Bloom_DirtTileOffset.xy\x20+\x20u_Bloom_DirtTileOffset.zw)\x0d\x0a\x09\x09//\x20but\x20considering\x20we\x20use\x20a\x20cover-style\x20scale\x20on\x20the\x20dirt\x20texture\x20the\x20difference\x0d\x0a\x09\x09//\x20isn\x27t\x20massive\x20so\x20we\x20chose\x20to\x20save\x20a\x20few\x20ALUs\x20here\x20instead\x20in\x20case\x20lens\x20distortion\x0d\x0a\x09\x09//\x20is\x20active\x0d\x0a\x09\x09mediump\x20vec4\x20dirt\x20=vec4(texture2D(u_Bloom_DirtTex,\x20v_Texcoord0\x20*\x20u_Bloom_DirtTileOffset.xy\x20+\x20u_Bloom_DirtTileOffset.zw).rgb,\x200.0);\x0d\x0a\x0d\x0a\x09\x09//\x20Additive\x20bloom\x20(artist\x20friendly)\x0d\x0a\x09\x09bloom\x20*=\x20u_Bloom_Settings.y;\x0d\x0a\x09\x09dirt\x20*=\x20u_Bloom_Settings.z;\x0d\x0a\x09\x09mediump\x20vec4\x20bloomColor=vec4(u_Bloom_Color,\x201.0);\x0d\x0a\x09\x09color\x20+=\x20bloom\x20*\x20bloomColor;\x0d\x0a\x09\x09color\x20+=\x20dirt\x20*\x20bloom;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09mediump\x20vec4\x20finalColor\x20=\x20color;\x0d\x0a\x09finalColor\x20=\x20linearToSRGB(finalColor);\x0d\x0a\x09//finalColor.rgb\x20=\x20Dither(finalColor.rgb,\x20v_Texcoord0);//TODO:抖动\x0d\x0a\x09gl_FragColor\x20=\x20finalColor;\x0d\x0a}', _0x2b9296 = '#include\x20\x22Lighting.glsl\x22;\x0a\x0aattribute\x20vec4\x20a_PositionTexcoord;\x0avarying\x20vec2\x20v_Texcoord0;\x0a\x0avoid\x20main()\x20{\x0a\x09gl_Position\x20=\x20vec4(a_PositionTexcoord.xy,\x200.0,\x201.0);\x0a\x09v_Texcoord0\x20=\x20a_PositionTexcoord.zw;\x0a\x09gl_Position\x20=\x20remapGLPositionZ(gl_Position);\x0a}', _0x259a4d = _0x5659be(0xfe5), _0x40bb0d = '#define\x20HALF_MAX\x20\x20\x20\x20\x20\x20\x2065504.0\x20//\x20(2\x20-\x202^-10)\x20*\x202^15\x0a\x0a#define\x20FLT_EPSILON\x20\x20\x20\x201.192092896e-07\x20//\x20Smallest\x20positive\x20number,\x20such\x20that\x201.0\x20+\x20FLT_EPSILON\x20!=\x201.0\x0a\x0amediump\x20vec4\x20safeHDR(mediump\x20vec4\x20c)\x0a{\x0a\x20\x20\x20\x20return\x20min(c,\x20HALF_MAX);\x0a}\x0a\x0afloat\x20max3(float\x20a,\x20float\x20b,\x20float\x20c)\x0a{\x0a\x20\x20\x20\x20return\x20max(max(a,\x20b),\x20c);\x0a}\x0a\x0avec3\x20positivePow(vec3\x20base,\x20vec3\x20power)\x0a{\x0a\x20\x20\x20\x20return\x20pow(max(abs(base),\x20vec3(FLT_EPSILON,\x20FLT_EPSILON,\x20FLT_EPSILON)),\x20power);\x0a}', _0xb10d27 = _0x5659be(0xfe6), _0x381044 = _0x5659be(0xfe7), _0x1d201e = 'vec4\x20shadowCasterFragment()\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x20vec4(0.0);\x0d\x0a}\x0d\x0a', _0x4a8c9c = _0x5659be(0xfe8), _0x5901d9 = _0x5659be(0xfe9), _0x5ed693 = _0x5659be(0xfea), _0x5714cc = _0x5659be(0xfeb), _0x56a640 = '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTexture;\x0d\x0auniform\x20vec4\x20u_MainColor;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20color\x20=\x202.0\x20*\x20u_MainColor\x20*\x20v_Color;\x0d\x0a\x09#ifdef\x20MAINTEXTURE\x0d\x0a\x09\x09vec4\x20mainTextureColor\x20=\x20texture2D(u_MainTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09color\x20*=\x20mainTextureColor;\x0d\x0a\x09#endif\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20', _0x25bd7c = _0x5659be(0xfec), _0x1a69d7 = _0x5659be(0xfed), _0x13ba83 = _0x5659be(0xfee), _0x334c40 = _0x5659be(0xfef), _0x4c595c = _0x5659be(0xff0), _0x1855a0 = _0x5659be(0xff1);
    class _0x2f53f7 {
        constructor() {
        }
        static [_0x5659be(0x229)]() {
            var _0x60e040 = _0x5659be;
            _0x84b6d6[_0x60e040(0xbdc)] = _0x84b6d6['getDefineByName']('LEGACYSINGLELIGHTING'), _0x84b6d6[_0x60e040(0xbde)] = _0x84b6d6[_0x60e040(0x510)](_0x60e040(0xff2)), _0x84b6d6[_0x60e040(0xbdd)] = _0x84b6d6['getDefineByName'](_0x60e040(0xff3)), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xff5), _0x4eeb5e), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xff6), _0x58d131), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xff7), _0x1ad7f9), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xff8), _0xb10d27), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xff9), _0x381044), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xffa), _0x1d201e), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xffb), _0x47a452), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xffc), _0x259a4d), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xffd), _0x40bb0d), _0x84b6d6['addInclude'](_0x60e040(0xffe), _0x3df179), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0xfff), _0x40827b), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0x1000), _0x445614), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0x1001), _0xe5d3cb), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0x1002), _0x5352a2), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0x1003), _0x299c8a), _0x84b6d6[_0x60e040(0xff4)](_0x60e040(0x1004), _0x1855a0);
            var _0x56cd7c = {
                    'a_Position': _0x13bc8a[_0x60e040(0x609)],
                    'a_Color': _0x13bc8a['MESH_COLOR0'],
                    'a_Normal': _0x13bc8a[_0x60e040(0x60b)],
                    'a_Texcoord0': _0x13bc8a['MESH_TEXTURECOORDINATE0'],
                    'a_Texcoord1': _0x13bc8a[_0x60e040(0x60f)],
                    'a_BoneWeights': _0x13bc8a['MESH_BLENDWEIGHT0'],
                    'a_BoneIndices': _0x13bc8a[_0x60e040(0x611)],
                    'a_Tangent0': _0x13bc8a[_0x60e040(0x614)],
                    'a_WorldMat': _0x13bc8a[_0x60e040(0x602)],
                    'a_SimpleTextureParams': _0x13bc8a[_0x60e040(0x605)]
                }, _0xb031cb = {
                    'u_Bones': _0x84b6d6[_0x60e040(0x7ae)],
                    'u_DiffuseTexture': _0x84b6d6[_0x60e040(0x540)],
                    'u_SpecularTexture': _0x84b6d6[_0x60e040(0x540)],
                    'u_NormalTexture': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_AlphaTestValue': _0x84b6d6[_0x60e040(0x540)],
                    'u_DiffuseColor': _0x84b6d6[_0x60e040(0x540)],
                    'u_AlbedoIntensity': _0x84b6d6[_0x60e040(0x540)],
                    'u_MaterialSpecular': _0x84b6d6[_0x60e040(0x540)],
                    'u_Shininess': _0x84b6d6[_0x60e040(0x540)],
                    'u_TilingOffset': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_TransmissionRate': _0x84b6d6[_0x60e040(0x540)],
                    'u_BackDiffuse': _0x84b6d6[_0x60e040(0x540)],
                    'u_BackScale': _0x84b6d6[_0x60e040(0x540)],
                    'u_ThinknessTexture': _0x84b6d6[_0x60e040(0x540)],
                    'u_TransmissionColor': _0x84b6d6[_0x60e040(0x540)],
                    'u_WorldMat': _0x84b6d6[_0x60e040(0x541)],
                    'u_MvpMatrix': _0x84b6d6[_0x60e040(0x541)],
                    'u_LightmapScaleOffset': _0x84b6d6[_0x60e040(0x541)],
                    'u_LightMap': _0x84b6d6['PERIOD_SPRITE'],
                    'u_LightMapDirection': _0x84b6d6[_0x60e040(0x541)],
                    'u_SimpleAnimatorTexture': _0x84b6d6[_0x60e040(0x541)],
                    'u_SimpleAnimatorParams': _0x84b6d6[_0x60e040(0x541)],
                    'u_SimpleAnimatorTextureSize': _0x84b6d6[_0x60e040(0x541)],
                    'u_CameraPos': _0x84b6d6[_0x60e040(0x542)],
                    'u_Viewport': _0x84b6d6[_0x60e040(0x542)],
                    'u_ProjectionParams': _0x84b6d6['PERIOD_CAMERA'],
                    'u_View': _0x84b6d6[_0x60e040(0x542)],
                    'u_ViewProjection': _0x84b6d6[_0x60e040(0x542)],
                    'u_ReflectTexture': _0x84b6d6[_0x60e040(0x543)],
                    'u_FogStart': _0x84b6d6[_0x60e040(0x543)],
                    'u_FogRange': _0x84b6d6[_0x60e040(0x543)],
                    'u_FogColor': _0x84b6d6[_0x60e040(0x543)],
                    'u_DirationLightCount': _0x84b6d6[_0x60e040(0x543)],
                    'u_LightBuffer': _0x84b6d6['PERIOD_SCENE'],
                    'u_LightClusterBuffer': _0x84b6d6[_0x60e040(0x543)],
                    'u_AmbientColor': _0x84b6d6[_0x60e040(0x543)],
                    'u_ShadowBias': _0x84b6d6['PERIOD_SCENE'],
                    'u_ShadowLightDirection': _0x84b6d6[_0x60e040(0x543)],
                    'u_ShadowMap': _0x84b6d6[_0x60e040(0x543)],
                    'u_ShadowParams': _0x84b6d6['PERIOD_SCENE'],
                    'u_ShadowSplitSpheres': _0x84b6d6['PERIOD_SCENE'],
                    'u_ShadowMatrices': _0x84b6d6[_0x60e040(0x543)],
                    'u_ShadowMapSize': _0x84b6d6['PERIOD_SCENE'],
                    'u_SpotShadowMap': _0x84b6d6[_0x60e040(0x543)],
                    'u_SpotViewProjectMatrix': _0x84b6d6[_0x60e040(0x543)],
                    'u_ShadowLightPosition': _0x84b6d6[_0x60e040(0x543)],
                    'u_AmbientSHAr': _0x84b6d6[_0x60e040(0x543)],
                    'u_AmbientSHAg': _0x84b6d6[_0x60e040(0x543)],
                    'u_AmbientSHAb': _0x84b6d6[_0x60e040(0x543)],
                    'u_AmbientSHBr': _0x84b6d6['PERIOD_SCENE'],
                    'u_AmbientSHBg': _0x84b6d6['PERIOD_SCENE'],
                    'u_AmbientSHBb': _0x84b6d6[_0x60e040(0x543)],
                    'u_AmbientSHC': _0x84b6d6[_0x60e040(0x543)],
                    'u_DirectionLight.color': _0x84b6d6[_0x60e040(0x543)],
                    'u_DirectionLight.direction': _0x84b6d6[_0x60e040(0x543)],
                    'u_PointLight.position': _0x84b6d6[_0x60e040(0x543)],
                    'u_PointLight.range': _0x84b6d6[_0x60e040(0x543)],
                    'u_PointLight.color': _0x84b6d6[_0x60e040(0x543)],
                    'u_SpotLight.position': _0x84b6d6[_0x60e040(0x543)],
                    'u_SpotLight.direction': _0x84b6d6[_0x60e040(0x543)],
                    'u_SpotLight.range': _0x84b6d6['PERIOD_SCENE'],
                    'u_SpotLight.spot': _0x84b6d6[_0x60e040(0x543)],
                    'u_SpotLight.color': _0x84b6d6[_0x60e040(0x543)]
                }, _0x4cc25e = {
                    's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                    's_Blend': _0x84b6d6[_0x60e040(0x536)],
                    's_BlendSrc': _0x84b6d6[_0x60e040(0x537)],
                    's_BlendDst': _0x84b6d6['RENDER_STATE_BLEND_DST'],
                    's_DepthTest': _0x84b6d6[_0x60e040(0x53e)],
                    's_DepthWrite': _0x84b6d6[_0x60e040(0x53f)]
                }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0x6d8), null, null, !![]), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb);
            _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x3152e3['addShaderPass'](_0x1cf7f5, _0x59e852, _0x4cc25e, 'Forward');
            var _0x1612a8 = _0x3152e3['addShaderPass'](_0x175cc2, _0x14d530, _0x4cc25e, _0x60e040(0x979));
            _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x1d34b7, _0x55280a, _0x4cc25e, 'DepthNormal'), _0x56cd7c = {
                'a_Position': _0x13bc8a[_0x60e040(0x609)],
                'a_Color': _0x13bc8a[_0x60e040(0x60c)]
            }, _0xb031cb = {
                'u_MvpMatrix': _0x84b6d6['PERIOD_SPRITE'],
                'u_Color': _0x84b6d6[_0x60e040(0x540)]
            }, _0x4cc25e = {
                's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                's_Blend': _0x84b6d6[_0x60e040(0x536)],
                's_BlendSrc': _0x84b6d6['RENDER_STATE_BLEND_SRC'],
                's_BlendDst': _0x84b6d6['RENDER_STATE_BLEND_DST'],
                's_DepthTest': _0x84b6d6['RENDER_STATE_DEPTH_TEST'],
                's_DepthWrite': _0x84b6d6[_0x60e040(0x53f)]
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0xa3e)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3), _0x3152e3[_0x60e040(0xc8e)](_0x359f5e, _0x2a036c, _0x4cc25e), _0x56cd7c = {
                'a_Position': _0x13bc8a[_0x60e040(0x609)],
                'a_Color': _0x13bc8a[_0x60e040(0x60c)],
                'a_Texcoord0': _0x13bc8a[_0x60e040(0x60d)],
                'a_BoneWeights': _0x13bc8a[_0x60e040(0x615)],
                'a_BoneIndices': _0x13bc8a['MESH_BLENDINDICES0'],
                'a_WorldMat': _0x13bc8a['MESH_WORLDMATRIX_ROW0'],
                'a_SimpleTextureParams': _0x13bc8a['MESH_SIMPLEANIMATOR']
            }, _0xb031cb = {
                'u_Bones': _0x84b6d6['PERIOD_CUSTOM'],
                'u_AlbedoTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_AlbedoColor': _0x84b6d6[_0x60e040(0x540)],
                'u_TilingOffset': _0x84b6d6[_0x60e040(0x540)],
                'u_AlphaTestValue': _0x84b6d6['PERIOD_MATERIAL'],
                'u_MvpMatrix': _0x84b6d6[_0x60e040(0x541)],
                'u_ViewProjection': _0x84b6d6['PERIOD_CAMERA'],
                'u_SimpleAnimatorTexture': _0x84b6d6[_0x60e040(0x541)],
                'u_SimpleAnimatorParams': _0x84b6d6[_0x60e040(0x541)],
                'u_SimpleAnimatorTextureSize': _0x84b6d6['PERIOD_SPRITE'],
                'u_FogStart': _0x84b6d6[_0x60e040(0x543)],
                'u_FogRange': _0x84b6d6[_0x60e040(0x543)],
                'u_FogColor': _0x84b6d6[_0x60e040(0x543)]
            }, _0x4cc25e = {
                's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                's_Blend': _0x84b6d6[_0x60e040(0x536)],
                's_BlendSrc': _0x84b6d6[_0x60e040(0x537)],
                's_BlendDst': _0x84b6d6[_0x60e040(0x538)],
                's_DepthTest': _0x84b6d6[_0x60e040(0x53e)],
                's_DepthWrite': _0x84b6d6[_0x60e040(0x53f)]
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)]('Unlit', null, null, !![]), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x3152e3['addShaderPass'](_0x13ba83, _0x1a69d7, _0x4cc25e), _0x56cd7c = {
                'a_Position': _0x13bc8a[_0x60e040(0x609)],
                'a_Texcoord0': _0x13bc8a[_0x60e040(0x60d)],
                'a_BoneWeights': _0x13bc8a[_0x60e040(0x615)],
                'a_BoneIndices': _0x13bc8a[_0x60e040(0x611)],
                'a_WorldMat': _0x13bc8a[_0x60e040(0x602)],
                'a_SimpleTextureParams': _0x13bc8a['MESH_SIMPLEANIMATOR']
            }, _0xb031cb = {
                'u_Bones': _0x84b6d6[_0x60e040(0x7ae)],
                'u_AlbedoTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_AlbedoColor': _0x84b6d6[_0x60e040(0x540)],
                'u_TilingOffset': _0x84b6d6[_0x60e040(0x540)],
                'u_AlphaTestValue': _0x84b6d6[_0x60e040(0x540)],
                'u_ViewProjection': _0x84b6d6[_0x60e040(0x542)],
                'u_MvpMatrix': _0x84b6d6['PERIOD_SPRITE'],
                'u_SimpleAnimatorTexture': _0x84b6d6[_0x60e040(0x541)],
                'u_SimpleAnimatorParams': _0x84b6d6[_0x60e040(0x541)],
                'u_SimpleAnimatorTextureSize': _0x84b6d6['PERIOD_SPRITE'],
                'u_FogStart': _0x84b6d6['PERIOD_SCENE'],
                'u_FogRange': _0x84b6d6[_0x60e040(0x543)],
                'u_FogColor': _0x84b6d6[_0x60e040(0x543)]
            }, _0x4cc25e = {
                's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                's_Blend': _0x84b6d6[_0x60e040(0x536)],
                's_BlendSrc': _0x84b6d6[_0x60e040(0x537)],
                's_BlendDst': _0x84b6d6[_0x60e040(0x538)],
                's_DepthTest': _0x84b6d6['RENDER_STATE_DEPTH_TEST'],
                's_DepthWrite': _0x84b6d6['RENDER_STATE_DEPTH_WRITE']
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0x1005), null, null, !![]), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x3152e3[_0x60e040(0xc8e)](_0x1022d2, _0x4566e1, _0x4cc25e), _0x56cd7c = {
                'a_CornerTextureCoordinate': _0x4717eb['PARTICLE_CORNERTEXTURECOORDINATE0'],
                'a_MeshPosition': _0x4717eb[_0x60e040(0xdf8)],
                'a_MeshColor': _0x4717eb[_0x60e040(0xdf9)],
                'a_MeshTextureCoordinate': _0x4717eb[_0x60e040(0xdfa)],
                'a_ShapePositionStartLifeTime': _0x4717eb['PARTICLE_SHAPEPOSITIONSTARTLIFETIME'],
                'a_DirectionTime': _0x4717eb[_0x60e040(0xe0c)],
                'a_StartColor': _0x4717eb['PARTICLE_STARTCOLOR0'],
                'a_EndColor': _0x4717eb[_0x60e040(0xdfd)],
                'a_StartSize': _0x4717eb[_0x60e040(0xdfe)],
                'a_StartRotation0': _0x4717eb[_0x60e040(0xdff)],
                'a_StartSpeed': _0x4717eb[_0x60e040(0xe0e)],
                'a_Random0': _0x4717eb[_0x60e040(0xe00)],
                'a_Random1': _0x4717eb[_0x60e040(0xe01)],
                'a_SimulationWorldPostion': _0x4717eb[_0x60e040(0xe02)],
                'a_SimulationWorldRotation': _0x4717eb[_0x60e040(0xe03)]
            }, _0xb031cb = {
                'u_Tintcolor': _0x84b6d6['PERIOD_MATERIAL'],
                'u_TilingOffset': _0x84b6d6[_0x60e040(0x540)],
                'u_texture': _0x84b6d6['PERIOD_MATERIAL'],
                'u_WorldPosition': _0x84b6d6[_0x60e040(0x541)],
                'u_WorldRotation': _0x84b6d6[_0x60e040(0x541)],
                'u_PositionScale': _0x84b6d6['PERIOD_SPRITE'],
                'u_SizeScale': _0x84b6d6['PERIOD_SPRITE'],
                'u_ScalingMode': _0x84b6d6['PERIOD_SPRITE'],
                'u_Gravity': _0x84b6d6[_0x60e040(0x541)],
                'u_ThreeDStartRotation': _0x84b6d6[_0x60e040(0x541)],
                'u_StretchedBillboardLengthScale': _0x84b6d6[_0x60e040(0x541)],
                'u_StretchedBillboardSpeedScale': _0x84b6d6['PERIOD_SPRITE'],
                'u_SimulationSpace': _0x84b6d6['PERIOD_SPRITE'],
                'u_CurrentTime': _0x84b6d6['PERIOD_SPRITE'],
                'u_ColorOverLifeGradientAlphas': _0x84b6d6[_0x60e040(0x541)],
                'u_ColorOverLifeGradientColors': _0x84b6d6[_0x60e040(0x541)],
                'u_MaxColorOverLifeGradientAlphas': _0x84b6d6['PERIOD_SPRITE'],
                'u_MaxColorOverLifeGradientColors': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityConst': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityGradientX': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityGradientY': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityGradientZ': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityConstMax': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityGradientMaxX': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityGradientMaxY': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLVelocityGradientMaxZ': _0x84b6d6[_0x60e040(0x541)],
                'u_VOLSpaceType': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradient': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientX': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientY': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientZ': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientMax': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientMaxX': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientMaxY': _0x84b6d6[_0x60e040(0x541)],
                'u_SOLSizeGradientMaxZ': _0x84b6d6['PERIOD_SPRITE'],
                'u_ROLAngularVelocityConst': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityConstSeprarate': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityGradient': _0x84b6d6['PERIOD_SPRITE'],
                'u_ROLAngularVelocityGradientX': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityGradientY': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityGradientZ': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityConstMax': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityConstMaxSeprarate': _0x84b6d6['PERIOD_SPRITE'],
                'u_ROLAngularVelocityGradientMax': _0x84b6d6['PERIOD_SPRITE'],
                'u_ROLAngularVelocityGradientMaxX': _0x84b6d6['PERIOD_SPRITE'],
                'u_ROLAngularVelocityGradientMaxY': _0x84b6d6['PERIOD_SPRITE'],
                'u_ROLAngularVelocityGradientMaxZ': _0x84b6d6[_0x60e040(0x541)],
                'u_ROLAngularVelocityGradientMaxW': _0x84b6d6[_0x60e040(0x541)],
                'u_TSACycles': _0x84b6d6[_0x60e040(0x541)],
                'u_TSASubUVLength': _0x84b6d6[_0x60e040(0x541)],
                'u_TSAGradientUVs': _0x84b6d6[_0x60e040(0x541)],
                'u_TSAMaxGradientUVs': _0x84b6d6[_0x60e040(0x541)],
                'u_CameraPos': _0x84b6d6['PERIOD_CAMERA'],
                'u_CameraDirection': _0x84b6d6[_0x60e040(0x542)],
                'u_CameraUp': _0x84b6d6[_0x60e040(0x542)],
                'u_View': _0x84b6d6[_0x60e040(0x542)],
                'u_Projection': _0x84b6d6[_0x60e040(0x542)],
                'u_FogStart': _0x84b6d6[_0x60e040(0x543)],
                'u_FogRange': _0x84b6d6[_0x60e040(0x543)],
                'u_FogColor': _0x84b6d6['PERIOD_SCENE']
            }, _0x4cc25e = {
                's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                's_Blend': _0x84b6d6[_0x60e040(0x536)],
                's_BlendSrc': _0x84b6d6[_0x60e040(0x537)],
                's_BlendDst': _0x84b6d6['RENDER_STATE_BLEND_DST'],
                's_DepthTest': _0x84b6d6[_0x60e040(0x53e)],
                's_DepthWrite': _0x84b6d6[_0x60e040(0x53f)]
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0xdce)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x3152e3['addShaderPass'](_0x5275fb, _0x2c0ec5, _0x4cc25e), _0x56cd7c = { 'a_Position': _0x13bc8a[_0x60e040(0x609)] }, _0xb031cb = {
                'u_TintColor': _0x84b6d6[_0x60e040(0x540)],
                'u_Exposure': _0x84b6d6[_0x60e040(0x540)],
                'u_Rotation': _0x84b6d6['PERIOD_MATERIAL'],
                'u_CubeTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_ViewProjection': _0x84b6d6[_0x60e040(0x542)]
            }, _0x36471b = _0x84b6d6['add'](_0x60e040(0xc2f)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3), _0x3152e3['addShaderPass'](_0x5901d9, _0x4a8c9c), _0x56cd7c = { 'a_Position': _0x13bc8a[_0x60e040(0x609)] }, _0xb031cb = {
                'u_SunSize': _0x84b6d6[_0x60e040(0x540)],
                'u_SunSizeConvergence': _0x84b6d6[_0x60e040(0x540)],
                'u_AtmosphereThickness': _0x84b6d6['PERIOD_MATERIAL'],
                'u_SkyTint': _0x84b6d6[_0x60e040(0x540)],
                'u_GroundTint': _0x84b6d6[_0x60e040(0x540)],
                'u_Exposure': _0x84b6d6[_0x60e040(0x540)],
                'u_ViewProjection': _0x84b6d6[_0x60e040(0x542)],
                'u_SunLight.direction': _0x84b6d6[_0x60e040(0x543)],
                'u_SunLight.color': _0x84b6d6[_0x60e040(0x543)]
            }, _0x36471b = _0x84b6d6['add']('SkyBoxProcedural'), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3), _0x3152e3[_0x60e040(0xc8e)](_0x5714cc, _0x5ed693), _0x56cd7c = {
                'a_Position': _0x13bc8a['MESH_POSITION0'],
                'a_Normal': _0x13bc8a[_0x60e040(0x60b)],
                'a_Texcoord0': _0x13bc8a[_0x60e040(0x60d)]
            }, _0xb031cb = {
                'u_MvpMatrix': _0x84b6d6[_0x60e040(0x541)],
                'u_WorldMat': _0x84b6d6[_0x60e040(0x541)],
                'u_CameraPos': _0x84b6d6[_0x60e040(0x542)],
                'u_Viewport': _0x84b6d6[_0x60e040(0x542)],
                'u_ProjectionParams': _0x84b6d6[_0x60e040(0x542)],
                'u_View': _0x84b6d6['PERIOD_CAMERA'],
                'u_LightmapScaleOffset': _0x84b6d6[_0x60e040(0x541)],
                'u_LightMap': _0x84b6d6[_0x60e040(0x541)],
                'u_SplatAlphaTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseTexture1': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseTexture2': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseTexture3': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseTexture4': _0x84b6d6['PERIOD_MATERIAL'],
                'u_DiffuseTexture5': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseScaleOffset1': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseScaleOffset2': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseScaleOffset3': _0x84b6d6['PERIOD_MATERIAL'],
                'u_DiffuseScaleOffset4': _0x84b6d6[_0x60e040(0x540)],
                'u_DiffuseScaleOffset5': _0x84b6d6[_0x60e040(0x540)],
                'u_FogStart': _0x84b6d6['PERIOD_SCENE'],
                'u_FogRange': _0x84b6d6['PERIOD_SCENE'],
                'u_FogColor': _0x84b6d6[_0x60e040(0x543)],
                'u_DirationLightCount': _0x84b6d6['PERIOD_SCENE'],
                'u_LightBuffer': _0x84b6d6[_0x60e040(0x543)],
                'u_LightClusterBuffer': _0x84b6d6['PERIOD_SCENE'],
                'u_AmbientColor': _0x84b6d6[_0x60e040(0x543)],
                'u_ShadowMap': _0x84b6d6[_0x60e040(0x543)],
                'u_shadowMap2': _0x84b6d6[_0x60e040(0x543)],
                'u_shadowMap3': _0x84b6d6['PERIOD_SCENE'],
                'u_ShadowSplitSpheres': _0x84b6d6[_0x60e040(0x543)],
                'u_ShadowMatrices': _0x84b6d6[_0x60e040(0x543)],
                'u_ShadowMapSize': _0x84b6d6['PERIOD_SCENE'],
                'u_DirectionLight.color': _0x84b6d6[_0x60e040(0x543)],
                'u_DirectionLight.direction': _0x84b6d6[_0x60e040(0x543)],
                'u_PointLight.position': _0x84b6d6['PERIOD_SCENE'],
                'u_PointLight.range': _0x84b6d6[_0x60e040(0x543)],
                'u_PointLight.color': _0x84b6d6[_0x60e040(0x543)],
                'u_SpotLight.position': _0x84b6d6[_0x60e040(0x543)],
                'u_SpotLight.direction': _0x84b6d6[_0x60e040(0x543)],
                'u_SpotLight.range': _0x84b6d6[_0x60e040(0x543)],
                'u_SpotLight.spot': _0x84b6d6[_0x60e040(0x543)],
                'u_SpotLight.color': _0x84b6d6[_0x60e040(0x543)]
            }, _0x4cc25e = {
                's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                's_Blend': _0x84b6d6[_0x60e040(0x536)],
                's_BlendSrc': _0x84b6d6['RENDER_STATE_BLEND_SRC'],
                's_BlendDst': _0x84b6d6[_0x60e040(0x538)],
                's_DepthTest': _0x84b6d6[_0x60e040(0x53e)],
                's_DepthWrite': _0x84b6d6['RENDER_STATE_DEPTH_WRITE']
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0x73c)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3), _0x3152e3[_0x60e040(0xc8e)](_0x31724e, _0xd602d7, _0x4cc25e), _0x56cd7c = {
                'a_Position': _0x183e46['TRAIL_POSITION0'],
                'a_OffsetVector': _0x183e46[_0x60e040(0xf41)],
                'a_Texcoord0X': _0x183e46[_0x60e040(0xf44)],
                'a_Texcoord0Y': _0x183e46['TRAIL_TEXTURECOORDINATE0Y'],
                'a_BirthTime': _0x183e46['TRAIL_TIME0'],
                'a_Color': _0x183e46[_0x60e040(0xf45)]
            }, _0xb031cb = {
                'u_MvpMatrix': _0x84b6d6[_0x60e040(0x541)],
                'u_View': _0x84b6d6[_0x60e040(0x542)],
                'u_Projection': _0x84b6d6[_0x60e040(0x542)],
                'u_TilingOffset': _0x84b6d6[_0x60e040(0x540)],
                'u_MainTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_MainColor': _0x84b6d6[_0x60e040(0x540)],
                'u_CurTime': _0x84b6d6[_0x60e040(0x541)],
                'u_LifeTime': _0x84b6d6[_0x60e040(0x541)],
                'u_WidthCurve': _0x84b6d6[_0x60e040(0x541)],
                'u_WidthCurveKeyLength': _0x84b6d6[_0x60e040(0x541)],
                'u_GradientColorkey': _0x84b6d6[_0x60e040(0x541)],
                'u_GradientAlphakey': _0x84b6d6['PERIOD_SPRITE']
            }, _0x4cc25e = {
                's_Cull': _0x84b6d6[_0x60e040(0x7f4)],
                's_Blend': _0x84b6d6[_0x60e040(0x536)],
                's_BlendSrc': _0x84b6d6['RENDER_STATE_BLEND_SRC'],
                's_BlendDst': _0x84b6d6['RENDER_STATE_BLEND_DST'],
                's_DepthTest': _0x84b6d6[_0x60e040(0x53e)],
                's_DepthWrite': _0x84b6d6['RENDER_STATE_DEPTH_WRITE']
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)]('Trail'), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x3152e3[_0x60e040(0xc8e)](_0x25bd7c, _0x56a640, _0x4cc25e), _0x56cd7c = {
                'a_Position': _0x13bc8a['MESH_POSITION0'],
                'a_Normal': _0x13bc8a[_0x60e040(0x60b)],
                'a_Tangent0': _0x13bc8a[_0x60e040(0x614)]
            }, _0xb031cb = {
                'u_MvpMatrix': _0x84b6d6['PERIOD_SPRITE'],
                'u_WorldMat': _0x84b6d6['PERIOD_SPRITE'],
                'u_CameraPos': _0x84b6d6['PERIOD_CAMERA'],
                'u_Time': _0x84b6d6[_0x60e040(0x543)],
                'u_MainTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_NormalTexture': _0x84b6d6[_0x60e040(0x540)],
                'u_HorizonColor': _0x84b6d6[_0x60e040(0x540)],
                'u_WaveScale': _0x84b6d6[_0x60e040(0x540)],
                'u_WaveSpeed': _0x84b6d6[_0x60e040(0x540)]
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)]('WaterPrimary'), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x3152e3['addShaderPass'](_0x4c595c, _0x334c40), _0x56cd7c = { 'a_PositionTexcoord': _0x13bc8a[_0x60e040(0x609)] }, _0xb031cb = {
                'u_MainTex': _0x84b6d6['PERIOD_MATERIAL'],
                'u_OffsetScale': _0x84b6d6['PERIOD_MATERIAL']
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0x1006)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3);
            var _0x1612a8 = _0x3152e3['addShaderPass'](_0x598d3e, _0x5482f8), _0x4d7978 = _0x1612a8[_0x60e040(0x7ea)];
            _0x4d7978[_0x60e040(0x697)] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393[_0x60e040(0x6c8)], _0x4d7978[_0x60e040(0x695)] = _0x2aa393[_0x60e040(0x6bb)], _0x56cd7c = { 'a_PositionTexcoord': _0x13bc8a[_0x60e040(0x609)] }, _0xb031cb = {
                'u_MainTex': _0x84b6d6['PERIOD_MATERIAL'],
                'u_BloomTex': _0x84b6d6['PERIOD_MATERIAL'],
                'u_AutoExposureTex': _0x84b6d6[_0x60e040(0x540)],
                'u_MainTex_TexelSize': _0x84b6d6['PERIOD_MATERIAL'],
                'u_SampleScale': _0x84b6d6[_0x60e040(0x540)],
                'u_Threshold': _0x84b6d6['PERIOD_MATERIAL'],
                'u_Params': _0x84b6d6[_0x60e040(0x540)]
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0x1007)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x1612a8 = _0x3152e3['addShaderPass'](_0x3cb2b8, _0x2e1091), _0x4d7978 = _0x1612a8[_0x60e040(0x7ea)], _0x4d7978['depthTest'] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393['CULL_NONE'], _0x4d7978[_0x60e040(0x695)] = _0x2aa393['BLEND_DISABLE'], _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x3cb2b8, _0x89f0cd), _0x4d7978 = _0x1612a8['renderState'], _0x4d7978['depthTest'] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978['depthWrite'] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393['CULL_NONE'], _0x4d7978[_0x60e040(0x695)] = _0x2aa393[_0x60e040(0x6bb)], _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3), _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x3cb2b8, _0x5baea2), _0x4d7978 = _0x1612a8[_0x60e040(0x7ea)], _0x4d7978['depthTest'] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393[_0x60e040(0x6c8)], _0x4d7978[_0x60e040(0x695)] = _0x2aa393[_0x60e040(0x6bb)], _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x3cb2b8, _0x254935), _0x4d7978 = _0x1612a8[_0x60e040(0x7ea)], _0x4d7978[_0x60e040(0x697)] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393[_0x60e040(0x6c8)], _0x4d7978['blend'] = _0x2aa393[_0x60e040(0x6bb)], _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x3cb2b8, _0x3ccec1), _0x4d7978 = _0x1612a8[_0x60e040(0x7ea)], _0x4d7978[_0x60e040(0x697)] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393[_0x60e040(0x6c8)], _0x4d7978[_0x60e040(0x695)] = _0x2aa393['BLEND_DISABLE'], _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b[_0x60e040(0x533)](_0x3152e3), _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x3cb2b8, _0x27f4f8), _0x4d7978 = _0x1612a8[_0x60e040(0x7ea)], _0x4d7978[_0x60e040(0x697)] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978[_0x60e040(0x696)] = _0x2aa393[_0x60e040(0x6c8)], _0x4d7978[_0x60e040(0x695)] = _0x2aa393[_0x60e040(0x6bb)], _0x56cd7c = { 'a_PositionTexcoord': _0x13bc8a['MESH_POSITION0'] }, _0xb031cb = {
                'u_MainTex': _0x84b6d6[_0x60e040(0x540)],
                'u_BloomTex': _0x84b6d6[_0x60e040(0x540)],
                'u_AutoExposureTex': _0x84b6d6[_0x60e040(0x540)],
                'u_Bloom_DirtTileOffset': _0x84b6d6[_0x60e040(0x540)],
                'u_Bloom_DirtTex': _0x84b6d6[_0x60e040(0x540)],
                'u_BloomTex_TexelSize': _0x84b6d6[_0x60e040(0x540)],
                'u_Bloom_Settings': _0x84b6d6[_0x60e040(0x540)],
                'u_Bloom_Color': _0x84b6d6['PERIOD_MATERIAL']
            }, _0x36471b = _0x84b6d6[_0x60e040(0x201)](_0x60e040(0x1008)), _0x3152e3 = new _0x280c5f(_0x56cd7c, _0xb031cb), _0x36471b['addSubShader'](_0x3152e3), _0x1612a8 = _0x3152e3[_0x60e040(0xc8e)](_0x2b9296, _0x4a2671), _0x4d7978 = _0x1612a8['renderState'], _0x4d7978['depthTest'] = _0x2aa393[_0x60e040(0x6d7)], _0x4d7978[_0x60e040(0x698)] = ![], _0x4d7978['cull'] = _0x2aa393['CULL_NONE'], _0x4d7978[_0x60e040(0x695)] = _0x2aa393[_0x60e040(0x6bb)];
        }
    }
    class _0x1912fb extends _0x3df9e9 {
        constructor() {
            var _0x51c5cb = _0x5659be;
            super(), this[_0x51c5cb(0xc1a)] = new _0x3f70c5(), this['_shadowCascadesMode'] = _0x71dec4[_0x51c5cb(0x94a)][_0x51c5cb(0x947)], this[_0x51c5cb(0x1009)] = 0x1 / 0x3, this[_0x51c5cb(0xb9b)] = new _0x3f70c5(0x1 / 0xf, 0x3 / 0xf, 0x7 / 0xf), this[_0x51c5cb(0x959)] = _0x71dec4['LightType'][_0x51c5cb(0x920)];
        }
        get [_0x5659be(0xb86)]() {
            var _0x25456d = _0x5659be;
            return this[_0x25456d(0xb97)];
        }
        set [_0x5659be(0xb86)](_0x513bad) {
            var _0x721f18 = _0x5659be;
            this[_0x721f18(0xb97)] = _0x513bad;
        }
        get [_0x5659be(0x100a)]() {
            var _0x53eb6d = _0x5659be;
            return this[_0x53eb6d(0x1009)];
        }
        set [_0x5659be(0x100a)](_0x3e1d58) {
            var _0x320155 = _0x5659be;
            this[_0x320155(0x1009)] = _0x3e1d58;
        }
        get [_0x5659be(0x100b)]() {
            var _0x25ddf8 = _0x5659be;
            return this[_0x25ddf8(0xb9b)];
        }
        set [_0x5659be(0x100b)](_0x57603f) {
            var _0x2dbe2a = _0x5659be;
            if (_0x57603f['x'] > _0x57603f['y'] || _0x57603f['y'] > _0x57603f['z'] || _0x57603f['z'] > 0x1)
                throw _0x2dbe2a(0x100c);
            _0x57603f['cloneTo'](this[_0x2dbe2a(0xb9b)]);
        }
        [_0x5659be(0x93b)]() {
            var _0x3171b3 = _0x5659be;
            this[_0x3171b3(0x3a6)][_0x3171b3(0x85e)][_0x3171b3(0x201)](this);
        }
        [_0x5659be(0x940)]() {
            var _0x2d9766 = _0x5659be;
            this[_0x2d9766(0x3a6)][_0x2d9766(0x85e)]['remove'](this);
        }
        [_0x5659be(0x5d2)]() {
            return new _0x1912fb();
        }
    }
    class _0x3936c6 extends _0x3df9e9 {
        constructor() {
            var _0x463958 = _0x5659be;
            super(), this[_0x463958(0x100d)] = 0x6, this[_0x463958(0x959)] = _0x71dec4['LightType'][_0x463958(0x2cf)];
        }
        get [_0x5659be(0x851)]() {
            var _0x5a98ad = _0x5659be;
            return this[_0x5a98ad(0x100d)];
        }
        set [_0x5659be(0x851)](_0x434211) {
            var _0x6bf5cd = _0x5659be;
            this[_0x6bf5cd(0x100d)] = _0x434211;
        }
        [_0x5659be(0x93b)]() {
            var _0x51fc0e = _0x5659be;
            this['_scene'][_0x51fc0e(0x85f)][_0x51fc0e(0x201)](this);
        }
        ['_removeFromLightQueue']() {
            var _0x71d704 = _0x5659be;
            this['_scene'][_0x71d704(0x85f)][_0x71d704(0x3a9)](this);
        }
        [_0x5659be(0x318)](_0xf224b1, _0x5052f8) {
            var _0x4db79 = _0x5659be;
            super[_0x4db79(0x318)](_0xf224b1, _0x5052f8), this[_0x4db79(0x851)] = _0xf224b1[_0x4db79(0x851)];
        }
        [_0x5659be(0x339)](_0x84fd1c, _0x366745, _0x134778) {
            var _0x3caeb4 = _0x5659be;
            super[_0x3caeb4(0x339)](_0x84fd1c, _0x366745, _0x134778);
            var _0x517084 = _0x84fd1c;
            _0x517084[_0x3caeb4(0x851)] = this[_0x3caeb4(0x851)], _0x517084[_0x3caeb4(0x959)] = _0x71dec4[_0x3caeb4(0x922)][_0x3caeb4(0x2cf)];
        }
        [_0x5659be(0x5d2)]() {
            return new _0x3936c6();
        }
    }
    class _0x2fa0ad extends _0x3df9e9 {
        constructor() {
            var _0x31e4bb = _0x5659be;
            super(), this[_0x31e4bb(0x100e)] = 0x1e, this[_0x31e4bb(0x100d)] = 0xa, this[_0x31e4bb(0xc1a)] = new _0x3f70c5(), this[_0x31e4bb(0x959)] = _0x71dec4[_0x31e4bb(0x922)]['Spot'];
        }
        get ['spotAngle']() {
            var _0x4e3444 = _0x5659be;
            return this[_0x4e3444(0x100e)];
        }
        set ['spotAngle'](_0x335a68) {
            var _0x331c85 = _0x5659be;
            this[_0x331c85(0x100e)] = Math['max'](Math[_0x331c85(0x204)](_0x335a68, 0xb3), 0x0);
        }
        get [_0x5659be(0x851)]() {
            var _0x47b975 = _0x5659be;
            return this[_0x47b975(0x100d)];
        }
        set ['range'](_0x1fbaf7) {
            this['_range'] = _0x1fbaf7;
        }
        ['_addToLightQueue']() {
            var _0x210ab4 = _0x5659be;
            this[_0x210ab4(0x3a6)][_0x210ab4(0x861)][_0x210ab4(0x201)](this);
        }
        [_0x5659be(0x940)]() {
            var _0x1e45e2 = _0x5659be;
            this[_0x1e45e2(0x3a6)][_0x1e45e2(0x861)][_0x1e45e2(0x3a9)](this);
        }
        [_0x5659be(0x318)](_0x11a029, _0x4a608d) {
            var _0x195afe = _0x5659be;
            super['_parse'](_0x11a029, _0x4a608d), this[_0x195afe(0x851)] = _0x11a029[_0x195afe(0x851)], this['spotAngle'] = _0x11a029['spotAngle'];
        }
        [_0x5659be(0x339)](_0x1270a0, _0x1cf5a3, _0x25db62) {
            var _0x3408cb = _0x5659be;
            super[_0x3408cb(0x339)](_0x1270a0, _0x1cf5a3, _0x25db62);
            var _0x5bc681 = _0x1270a0;
            _0x5bc681[_0x3408cb(0x851)] = this[_0x3408cb(0x851)], _0x5bc681[_0x3408cb(0x854)] = this['spotAngle'];
        }
        ['_create']() {
            return new _0x2fa0ad();
        }
    }
    class _0x45552e extends _0x457f9c {
        constructor(_0x47737f) {
            var _0x133a3f = _0x5659be;
            super(_0x47737f), this['_simpleAnimatorParams'] = new _0x8fb80(), this['_simpleAnimatorOffset'] = new _0x12bf01(), this['_shaderValues']['addDefine'](_0x158fab['SHADERDEFINE_SIMPLEBONE']), this[_0x133a3f(0x4e0)]['addDefine'](_0x158fab[_0x133a3f(0xf20)]);
        }
        get ['simpleAnimatorTexture']() {
            var _0x32c6bd = _0x5659be;
            return this[_0x32c6bd(0x100f)];
        }
        set [_0x5659be(0x1010)](_0x133064) {
            var _0x3bd3a3 = _0x5659be;
            this[_0x3bd3a3(0x100f)] = _0x133064, this[_0x3bd3a3(0x1011)] = _0x133064[_0x3bd3a3(0x300)], this[_0x3bd3a3(0x4e0)][_0x3bd3a3(0x4a2)](_0x45552e[_0x3bd3a3(0xf2f)], _0x133064), _0x133064[_0x3bd3a3(0x354)](), this[_0x3bd3a3(0x4e0)]['setNumber'](_0x45552e[_0x3bd3a3(0xf33)], this[_0x3bd3a3(0x1011)]);
        }
        get [_0x5659be(0x1012)]() {
            var _0x2402a0 = _0x5659be;
            return this[_0x2402a0(0x1013)];
        }
        set [_0x5659be(0x1012)](_0x459ded) {
            var _0x309ed5 = _0x5659be;
            _0x459ded[_0x309ed5(0x1f0)](this[_0x309ed5(0x1013)]);
        }
        [_0x5659be(0x1014)]() {
            var _0x5642e1 = _0x5659be;
            this[_0x5642e1(0xf15)] && (this['_simpleAnimatorParams']['x'] = this[_0x5642e1(0x1013)]['x'], this['_simpleAnimatorParams']['y'] = Math['round'](this[_0x5642e1(0x1013)]['y']) * this[_0x5642e1(0x1015)] * 0x4);
        }
        [_0x5659be(0xcd1)]() {
            return new _0x1c6dea();
        }
        [_0x5659be(0xf1e)](_0x484fdf) {
            var _0x3919c1 = _0x5659be;
            this[_0x3919c1(0xf1f)] = _0x484fdf, this[_0x3919c1(0x4e0)][_0x3919c1(0x62c)](_0x158fab[_0x3919c1(0x1016)]);
        }
        ['_onMeshChange'](_0x3601cd) {
            var _0x3c7b97 = _0x5659be;
            super[_0x3c7b97(0xcd0)](_0x3601cd), this['_cacheMesh'] = _0x3601cd;
        }
        ['_renderUpdate'](_0x5939aa, _0x270e4c) {
            var _0x37b3cc = _0x5659be, _0x58f3be = _0x5939aa[_0x37b3cc(0xa9a)];
            switch (_0x58f3be[_0x37b3cc(0x5f1)]) {
            case _0x5551c8[_0x37b3cc(0x5fd)]:
                if (this['_cacheAnimator']) {
                    var _0x53ed45 = this[_0x37b3cc(0xf1f)][_0x37b3cc(0x380)]['transform'][_0x37b3cc(0x3ce)];
                    this['_shaderValues'][_0x37b3cc(0x4a0)](_0x356e58[_0x37b3cc(0xb37)], _0x53ed45);
                } else
                    this[_0x37b3cc(0x4e0)][_0x37b3cc(0x4a0)](_0x356e58[_0x37b3cc(0xb37)], _0x270e4c['worldMatrix']);
                this[_0x37b3cc(0x1014)](), this[_0x37b3cc(0x4e0)][_0x37b3cc(0x49d)](_0x45552e['SIMPLE_SIMPLEANIMATORPARAMS'], this[_0x37b3cc(0x1017)]);
                break;
            case _0x5551c8[_0x37b3cc(0xaa6)]:
                var _0x2a6d44 = _0x269d35['instance']['instanceWorldMatrixData'], _0x52a4b7 = _0x58f3be['instanceBatchElementList'], _0x3f35a8 = _0x52a4b7[_0x37b3cc(0x1f6)], _0x58c8c3 = _0x52a4b7[_0x37b3cc(0x1ff)];
                if (this[_0x37b3cc(0xf1f)])
                    for (var _0x337ea0 = 0x0; _0x337ea0 < _0x58c8c3; _0x337ea0++) {
                        var _0x4d7106 = _0x3f35a8[_0x337ea0]['render']['_cacheAnimator']['owner'][_0x37b3cc(0x3ca)][_0x37b3cc(0x3ce)];
                        _0x2a6d44[_0x37b3cc(0x450)](_0x4d7106['elements'], _0x337ea0 * 0x10);
                    }
                else {
                    for (var _0x337ea0 = 0x0; _0x337ea0 < _0x58c8c3; _0x337ea0++)
                        _0x2a6d44[_0x37b3cc(0x450)](_0x3f35a8[_0x337ea0][_0x37b3cc(0x3ca)][_0x37b3cc(0x3ce)][_0x37b3cc(0x1f6)], _0x337ea0 * 0x10);
                }
                var _0x1452b7 = _0x269d35[_0x37b3cc(0x2f4)][_0x37b3cc(0xa97)];
                _0x1452b7[_0x37b3cc(0x626)](), _0x1452b7[_0x37b3cc(0x4fd)](_0x2a6d44[_0x37b3cc(0x448)], 0x0, 0x0, _0x58c8c3 * 0x10 * 0x4), this['_shaderValues'][_0x37b3cc(0x62c)](_0xc9db6a['SHADERDEFINE_GPU_INSTANCE']);
                var _0x2aa1a0 = _0x269d35['instance'][_0x37b3cc(0xa96)];
                if (this[_0x37b3cc(0xf1f)])
                    for (var _0x337ea0 = 0x0; _0x337ea0 < _0x58c8c3; _0x337ea0++) {
                        var _0x2fa263 = _0x3f35a8[_0x337ea0]['render'];
                        _0x2fa263['_computeAnimatorParamsData']();
                        var _0x3ec5fd = _0x2fa263[_0x37b3cc(0x1017)], _0x431df1 = _0x337ea0 * 0x4;
                        _0x2aa1a0[_0x431df1] = _0x3ec5fd['x'], _0x2aa1a0[_0x431df1 + 0x1] = _0x3ec5fd['y'];
                    }
                else
                    for (var _0x337ea0 = 0x0; _0x337ea0 < _0x58c8c3; _0x337ea0++) {
                        _0x2aa1a0[_0x431df1] = 0x0, _0x2aa1a0[_0x431df1 + 0x1] = 0x0;
                    }
                var _0x1831b4 = _0x269d35[_0x37b3cc(0x2f4)][_0x37b3cc(0xa99)];
                _0x1831b4[_0x37b3cc(0x626)](), _0x1831b4['setData'](_0x2aa1a0[_0x37b3cc(0x448)], 0x0, 0x0, _0x58c8c3 * 0x4 * 0x4);
                break;
            }
        }
        ['_renderUpdateWithCamera'](_0x300178, _0x1f8d92) {
            var _0x1dc0aa = _0x5659be, _0x19f550 = _0x300178[_0x1dc0aa(0x5dc)];
            if (_0x19f550) {
                var _0x31b7d5 = _0x300178['renderElement'];
                switch (_0x31b7d5['renderType']) {
                case _0x5551c8[_0x1dc0aa(0x5fd)]:
                    if (this[_0x1dc0aa(0xf1f)]) {
                        var _0x5eeda8 = this[_0x1dc0aa(0xf1f)]['owner'][_0x1dc0aa(0x3ca)][_0x1dc0aa(0x3ce)];
                        _0x3ed76a[_0x1dc0aa(0x202)](_0x19f550, _0x5eeda8, this['_projectionViewWorldMatrix']), this['_shaderValues'][_0x1dc0aa(0x4a0)](_0x356e58[_0x1dc0aa(0x5dd)], this[_0x1dc0aa(0x5de)]);
                    } else
                        _0x3ed76a[_0x1dc0aa(0x202)](_0x19f550, _0x1f8d92['worldMatrix'], this[_0x1dc0aa(0x5de)]), this[_0x1dc0aa(0x4e0)][_0x1dc0aa(0x4a0)](_0x356e58[_0x1dc0aa(0x5dd)], this[_0x1dc0aa(0x5de)]);
                    break;
                }
            }
        }
        [_0x5659be(0xa86)]() {
            var _0x5c0797 = _0x5659be;
            if (this[_0x5c0797(0xf12)])
                !this['_cacheRootBone'][_0x5c0797(0x5cf)] && this[_0x5c0797(0xf12)][_0x5c0797(0x3cc)][_0x5c0797(0x8fc)](_0x218b83[_0x5c0797(0x5ab)][_0x5c0797(0x5a7)], this, this[_0x5c0797(0xb12)]);
            this[_0x5c0797(0x100f)] && this['_simpleAnimatorTexture'][_0x5c0797(0x351)](), this[_0x5c0797(0x100f)] = null;
        }
    }
    class _0x2d08c0 extends _0x200920 {
        constructor(_0x41b1d4 = null, _0x2ef0ea = null) {
            var _0x25a151 = _0x5659be;
            super(_0x2ef0ea), this[_0x25a151(0xcea)] = new _0x2abbff(this), this[_0x25a151(0x5e6)] = new _0x45552e(this), _0x41b1d4 && (this[_0x25a151(0xcea)][_0x25a151(0xae3)] = _0x41b1d4);
        }
        static [_0x5659be(0x229)]() {
            var _0x11f955 = _0x5659be;
            _0x45552e[_0x11f955(0xf31)] = _0x2d08c0[_0x11f955(0xf31)], _0x45552e[_0x11f955(0xf2f)] = _0x2d08c0[_0x11f955(0xf2f)], _0x45552e['SIMPLE_SIMPLEANIMATORTEXTURESIZE'] = _0x2d08c0['SIMPLE_SIMPLEANIMATORTEXTURESIZE'];
        }
        get [_0x5659be(0xae2)]() {
            var _0x44febb = _0x5659be;
            return this[_0x44febb(0xcea)];
        }
        get [_0x5659be(0x1018)]() {
            var _0x34e5b2 = _0x5659be;
            return this[_0x34e5b2(0x5e6)];
        }
        [_0x5659be(0x318)](_0x4cee89, _0x5c44af) {
            var _0x441c30 = _0x5659be;
            super['_parse'](_0x4cee89, _0x5c44af);
            var _0x20df3a = this[_0x441c30(0x1018)], _0x13e923 = _0x4cee89[_0x441c30(0xab7)];
            _0x13e923 != null && (_0x20df3a[_0x441c30(0xab7)] = _0x13e923);
            var _0x425c7b = _0x4cee89['lightmapScaleOffset'];
            _0x425c7b && (_0x20df3a[_0x441c30(0xb14)] = new _0x8fb80(_0x425c7b[0x0], _0x425c7b[0x1], _0x425c7b[0x2], _0x425c7b[0x3])), _0x4cee89[_0x441c30(0xcf0)] != undefined && (_0x20df3a['enable'] = _0x4cee89[_0x441c30(0xcf0)]), _0x4cee89[_0x441c30(0xcf1)] != undefined && (_0x20df3a[_0x441c30(0xab8)] = _0x4cee89[_0x441c30(0xcf1)]), _0x4cee89[_0x441c30(0xb1e)] != undefined && (_0x20df3a[_0x441c30(0xb1e)] = _0x4cee89[_0x441c30(0xb1e)]);
            var _0x2fffda;
            _0x2fffda = _0x4cee89[_0x441c30(0xcef)];
            if (_0x2fffda) {
                var _0x3c95a8 = _0x218b83[_0x441c30(0x3b1)][_0x441c30(0x692)](_0x2fffda);
                _0x3c95a8 && (this[_0x441c30(0xae2)][_0x441c30(0xae3)] = _0x3c95a8);
            }
            var _0x3dfe03 = _0x4cee89[_0x441c30(0xcf2)];
            if (_0x3dfe03) {
                var _0x4ee0d3 = _0x20df3a[_0x441c30(0xb18)], _0xa91b1f = _0x3dfe03[_0x441c30(0x1ff)];
                _0x4ee0d3[_0x441c30(0x1ff)] = _0xa91b1f;
                for (var _0x1777d2 = 0x0; _0x1777d2 < _0xa91b1f; _0x1777d2++) {
                    _0x4ee0d3[_0x1777d2] = _0x218b83[_0x441c30(0x3b1)][_0x441c30(0x692)](_0x3dfe03[_0x1777d2][_0x441c30(0x691)]);
                }
                _0x20df3a[_0x441c30(0xb18)] = _0x4ee0d3;
            }
            var _0x39bd8c = _0x4cee89[_0x441c30(0xf2b)], _0x5e67c6 = _0x39bd8c[_0x441c30(0x204)], _0x46ec7d = _0x39bd8c[_0x441c30(0x205)];
            _0x20df3a[_0x441c30(0xf10)][_0x441c30(0xa6b)](new _0x3f70c5(_0x5e67c6[0x0], _0x5e67c6[0x1], _0x5e67c6[0x2])), _0x20df3a[_0x441c30(0xf10)]['setMax'](new _0x3f70c5(_0x46ec7d[0x0], _0x46ec7d[0x1], _0x46ec7d[0x2]));
            if (_0x5c44af) {
                var _0x19ad58 = _0x4cee89['rootBone'];
                _0x20df3a[_0x441c30(0xf11)] = _0x5c44af[_0x19ad58];
                var _0x3e55bc = _0x4cee89[_0x441c30(0xf13)], _0x538a5c;
                for (_0x1777d2 = 0x0, _0x538a5c = _0x3e55bc[_0x441c30(0x1ff)]; _0x1777d2 < _0x538a5c; _0x1777d2++)
                    _0x20df3a[_0x441c30(0xf13)][_0x441c30(0x298)](_0x5c44af[_0x3e55bc[_0x1777d2]]);
                _0x20df3a[_0x441c30(0x1015)] = _0x4cee89['bonesNums'] ? _0x4cee89[_0x441c30(0x1019)] : _0x20df3a[_0x441c30(0xf13)][_0x441c30(0x1ff)];
            } else
                _0x4cee89[_0x441c30(0xf11)] && _0x20df3a['_setRootBone'](_0x4cee89['rootBone']);
            var _0x16a527 = _0x4cee89['animatorTexture'];
            if (_0x16a527) {
                var _0x511727 = _0x218b83[_0x441c30(0x3b1)][_0x441c30(0x692)](_0x16a527);
                _0x20df3a[_0x441c30(0x1010)] = _0x511727;
            }
        }
        ['_changeHierarchyAnimator'](_0x1c00f1) {
            var _0x33c053 = _0x5659be;
            super[_0x33c053(0x5c7)](_0x1c00f1), this[_0x33c053(0x1018)]['_setCacheAnimator'](_0x1c00f1);
        }
        ['_cloneTo'](_0xf814b2, _0xc01cbb, _0x5842e8) {
            var _0x5de866 = _0x5659be, _0x4cdb59 = _0xf814b2;
            _0x4cdb59[_0x5de866(0xae2)]['sharedMesh'] = this[_0x5de866(0xae2)]['sharedMesh'];
            var _0x31ceb2 = this['_render'], _0x2bf078 = _0x4cdb59['_render'];
            _0x2bf078[_0x5de866(0x650)] = _0x31ceb2[_0x5de866(0x650)], _0x2bf078[_0x5de866(0xb18)] = _0x31ceb2['sharedMaterials'], _0x2bf078[_0x5de866(0xb1e)] = _0x31ceb2[_0x5de866(0xb1e)];
            var _0x49d9b9 = _0x31ceb2[_0x5de866(0xb14)];
            _0x49d9b9 && (_0x2bf078[_0x5de866(0xb14)] = _0x49d9b9[_0x5de866(0x1f4)]()), _0x2bf078[_0x5de866(0xab8)] = _0x31ceb2[_0x5de866(0xab8)], _0x2bf078[_0x5de866(0xb11)] = _0x31ceb2[_0x5de866(0xb11)], _0x2bf078[_0x5de866(0xf21)] = _0x31ceb2[_0x5de866(0xf21)];
            var _0x3fb12c = _0x31ceb2[_0x5de866(0xf13)], _0xb95d33 = _0x2bf078['bones'], _0x268032 = _0x3fb12c[_0x5de866(0x1ff)];
            _0xb95d33['length'] = _0x268032;
            var _0xe57e83 = _0x31ceb2['rootBone'];
            if (_0xe57e83) {
                var _0x4e4d68 = _0x108d81[_0x5de866(0x2fc)](_0xc01cbb, _0xe57e83, _0x2d08c0[_0x5de866(0xf2d)]);
                if (_0x4e4d68)
                    _0x2bf078[_0x5de866(0xf11)] = _0x108d81[_0x5de866(0xf2c)](_0x5842e8, _0x4e4d68);
                else
                    _0x2bf078[_0x5de866(0xf11)] = _0xe57e83;
            }
            for (var _0x5352f0 = 0x0; _0x5352f0 < _0x3fb12c['length']; _0x5352f0++) {
                _0x4e4d68 = _0x108d81[_0x5de866(0x2fc)](_0xc01cbb, _0x3fb12c[_0x5352f0], _0x2d08c0['_tempArray0']);
                if (_0x4e4d68)
                    _0xb95d33[_0x5352f0] = _0x108d81[_0x5de866(0xf2c)](_0x5842e8, _0x4e4d68);
                else
                    _0xb95d33[_0x5352f0] = _0x3fb12c[_0x5352f0];
            }
            var _0x3660f8 = _0x31ceb2[_0x5de866(0xf10)];
            _0x3660f8 && _0x3660f8[_0x5de866(0x1f0)](_0x2bf078[_0x5de866(0xf10)]), _0x2bf078[_0x5de866(0x1012)] = _0x31ceb2['simpleAnimatorOffset'], _0x2bf078[_0x5de866(0x1010)] = _0x31ceb2[_0x5de866(0x1010)], _0x2bf078[_0x5de866(0x1015)] = _0x31ceb2[_0x5de866(0x1015)], super[_0x5de866(0x339)](_0xf814b2, _0xc01cbb, _0x5842e8);
        }
        [_0x5659be(0x311)](_0xccc7d5 = !![]) {
            var _0x498ca7 = _0x5659be;
            if (this[_0x498ca7(0x5cf)])
                return;
            super['destroy'](_0xccc7d5), this[_0x498ca7(0xcea)]['destroy']();
        }
        [_0x5659be(0x5d2)]() {
            return new _0x2d08c0();
        }
    }
    _0x2d08c0[_0x5659be(0xf2d)] = [], _0x2d08c0[_0x5659be(0xf2f)] = _0x84b6d6['propertyNameToID']('u_SimpleAnimatorTexture'), _0x2d08c0[_0x5659be(0xf31)] = _0x84b6d6[_0x5659be(0x526)]('u_SimpleAnimatorParams'), _0x2d08c0[_0x5659be(0xf33)] = _0x84b6d6[_0x5659be(0x526)]('u_SimpleAnimatorTextureSize');
    class _0x8eba65 {
        static [_0x5659be(0x5d1)](_0x3ab6c4, _0x56b776, _0x3057b4) {
            var _0x4d0f50 = _0x5659be, _0x4ce124;
            switch (_0x3ab6c4[_0x4d0f50(0x2ae)]) {
            case _0x4d0f50(0x21f):
                _0x4ce124 = new _0x55cc88();
                break;
            case _0x4d0f50(0x101a):
                _0x4ce124 = new _0x356e58();
                break;
            case _0x4d0f50(0x101b):
                _0x4ce124 = new _0x82ba60(), _0x3057b4 && _0x3ab6c4[_0x4d0f50(0x67e)][_0x4d0f50(0x3cd)] && _0x3057b4[_0x4d0f50(0x298)](_0x4ce124);
                break;
            case _0x4d0f50(0x101c):
                _0x4ce124 = new _0x423afc();
                break;
            case 'SimpleSkinnedMeshSprite3D':
                _0x4ce124 = new _0x2d08c0();
                break;
            case _0x4d0f50(0x101d):
                _0x4ce124 = new _0x4e36f1();
                break;
            case _0x4d0f50(0x5ef):
                _0x4ce124 = new _0x428ec4();
                break;
            case _0x4d0f50(0x9c0):
                _0x4ce124 = new _0x1912fb();
                break;
            case _0x4d0f50(0xb74):
                _0x4ce124 = new _0x3936c6();
                break;
            case _0x4d0f50(0x9c3):
                _0x4ce124 = new _0x2fa0ad();
                break;
            case _0x4d0f50(0x101e):
                _0x4ce124 = new _0x5e19e7();
                break;
            case _0x4d0f50(0x101f):
                _0x4ce124 = new _0x221da4();
                break;
            default:
                throw new Error(_0x4d0f50(0x1020));
            }
            var _0x256afc = _0x3ab6c4[_0x4d0f50(0x67f)];
            if (_0x256afc)
                for (var _0x549cc9 = 0x0, _0x118a5e = _0x256afc[_0x4d0f50(0x1ff)]; _0x549cc9 < _0x118a5e; _0x549cc9++) {
                    var _0x4b7f81 = _0x8eba65['_createSprite3DInstance'](_0x256afc[_0x549cc9], _0x56b776, _0x3057b4);
                    _0x4ce124['addChild'](_0x4b7f81);
                }
            return _0x56b776[_0x3ab6c4[_0x4d0f50(0x1021)]] = _0x4ce124, _0x4ce124;
        }
        static [_0x5659be(0x1022)](_0x5080eb, _0x1d6039, _0x1166e2) {
            var _0x2b20f6 = _0x5659be, _0x576e64 = _0x1d6039[_0x5080eb[_0x2b20f6(0x1021)]];
            _0x576e64[_0x2b20f6(0x318)](_0x5080eb[_0x2b20f6(0x67e)], _0x1d6039);
            var _0x3d47c8 = _0x5080eb['child'];
            if (_0x3d47c8) {
                for (var _0x4bfe26 = 0x0, _0x31e779 = _0x3d47c8[_0x2b20f6(0x1ff)]; _0x4bfe26 < _0x31e779; _0x4bfe26++)
                    _0x8eba65[_0x2b20f6(0x1022)](_0x3d47c8[_0x4bfe26], _0x1d6039, _0x1166e2);
            }
            var _0x570d9c = _0x5080eb['components'];
            if (_0x570d9c)
                for (var _0x2309a1 = 0x0, _0x437f10 = _0x570d9c[_0x2b20f6(0x1ff)]; _0x2309a1 < _0x437f10; _0x2309a1++) {
                    var _0x1b54ad = _0x570d9c[_0x2309a1], _0x4e2f7e = _0x218b83[_0x2b20f6(0x1023)][_0x2b20f6(0x68a)](_0x1b54ad['type']);
                    if (_0x4e2f7e) {
                        var _0x4c9a87 = _0x576e64[_0x2b20f6(0x1024)](_0x4e2f7e);
                        _0x4c9a87[_0x2b20f6(0x318)](_0x1b54ad, _0x1166e2);
                    } else
                        console[_0x2b20f6(0x24e)]('Unkown\x20component\x20type.');
                }
        }
        static ['_createNodeByJson02'](_0x1d605c, _0x2a0f6d) {
            var _0x5bf6bc = _0x5659be, _0x12b423 = {}, _0x404ac9 = {
                    'component': [],
                    'data': []
                }, _0x3f28dd = _0x8eba65[_0x5bf6bc(0x5d1)](_0x1d605c, _0x12b423, _0x2a0f6d);
            return _0x8eba65[_0x5bf6bc(0x1022)](_0x1d605c, _0x12b423, _0x404ac9), _0x8eba65['_createInteractInstance'](_0x404ac9, _0x12b423), _0x3f28dd;
        }
        static [_0x5659be(0x1025)](_0x2b3e98, _0x5aa932) {
            var _0x5bf69c = _0x5659be, _0x444818 = _0x2b3e98[_0x5bf69c(0x1026)], _0x252275 = _0x2b3e98[_0x5bf69c(0x30d)];
            for (var _0x34c920 = 0x0, _0x12698f = _0x444818[_0x5bf69c(0x1ff)]; _0x34c920 < _0x12698f; _0x34c920++) {
                _0x444818[_0x34c920][_0x5bf69c(0x1027)](_0x252275[_0x34c920], _0x5aa932);
            }
        }
        static [_0x5659be(0x318)](_0x299c6a, _0x952376 = null, _0x37080d = null) {
            var _0x10b592 = _0x5659be, _0x3aee9f = _0x299c6a[_0x10b592(0x30d)], _0x333818 = [], _0x4116b8;
            switch (_0x299c6a['version']) {
            case _0x10b592(0x1028):
                _0x4116b8 = _0x8eba65['_createNodeByJson02'](_0x3aee9f, _0x333818);
                break;
            default:
                _0x4116b8 = _0x8eba65[_0x10b592(0x1029)](_0x3aee9f, _0x333818);
            }
            return _0x5dca2e[_0x10b592(0xace)](_0x4116b8, _0x333818), _0x4116b8;
        }
        static ['_parseScene'](_0x1a7bd2, _0x31c2f2 = null, _0x21c98f = null) {
            var _0x48b707 = _0x5659be, _0x4e4efc = _0x1a7bd2[_0x48b707(0x30d)], _0x4587e2 = [], _0x45b799;
            switch (_0x1a7bd2[_0x48b707(0x679)]) {
            case _0x48b707(0x102a):
                _0x45b799 = _0x8eba65[_0x48b707(0x102b)](_0x4e4efc, _0x4587e2);
                break;
            default:
                _0x45b799 = _0x8eba65['_createNodeByJson'](_0x4e4efc, _0x4587e2);
            }
            return _0x5dca2e[_0x48b707(0xace)](null, _0x4587e2), _0x45b799;
        }
        static ['_createNodeByJson'](_0x3f586d, _0x586a85) {
            var _0x4b409f = _0x5659be, _0x559a4b;
            switch (_0x3f586d[_0x4b409f(0x2ae)]) {
            case _0x4b409f(0x21f):
                _0x559a4b = new _0x55cc88();
                break;
            case _0x4b409f(0x101a):
                _0x559a4b = new _0x356e58();
                break;
            case 'MeshSprite3D':
                _0x559a4b = new _0x82ba60(), _0x586a85 && _0x3f586d[_0x4b409f(0x67e)][_0x4b409f(0x3cd)] && _0x586a85['push'](_0x559a4b);
                break;
            case _0x4b409f(0x101c):
                _0x559a4b = new _0x423afc();
                break;
            case _0x4b409f(0x101d):
                _0x559a4b = new _0x4e36f1();
                break;
            case 'Camera':
                _0x559a4b = new _0x428ec4();
                break;
            case _0x4b409f(0x9c0):
                _0x559a4b = new _0x1912fb();
                break;
            case 'PointLight':
                _0x559a4b = new _0x3936c6();
                break;
            case _0x4b409f(0x9c3):
                _0x559a4b = new _0x2fa0ad();
                break;
            case 'TrailSprite3D':
                _0x559a4b = new _0x5e19e7();
                break;
            default:
                throw new Error(_0x4b409f(0x1020));
            }
            var _0x2bf3f2 = _0x3f586d[_0x4b409f(0x67f)];
            if (_0x2bf3f2)
                for (var _0x391bb9 = 0x0, _0x49422d = _0x2bf3f2[_0x4b409f(0x1ff)]; _0x391bb9 < _0x49422d; _0x391bb9++) {
                    var _0x149cc5 = _0x8eba65[_0x4b409f(0x1029)](_0x2bf3f2[_0x391bb9], _0x586a85);
                    _0x559a4b['addChild'](_0x149cc5);
                }
            var _0x23e3e3 = _0x3f586d[_0x4b409f(0x102c)];
            if (_0x23e3e3)
                for (var _0x5bf47f = 0x0, _0x11c8cb = _0x23e3e3[_0x4b409f(0x1ff)]; _0x5bf47f < _0x11c8cb; _0x5bf47f++) {
                    var _0xcd87ac = _0x23e3e3[_0x5bf47f], _0x4d74fc = _0x218b83['ClassUtils'][_0x4b409f(0x68a)](_0xcd87ac[_0x4b409f(0x2ae)]);
                    if (_0x4d74fc) {
                        var _0x24104a = _0x559a4b[_0x4b409f(0x1024)](_0x4d74fc);
                        _0x24104a[_0x4b409f(0x318)](_0xcd87ac);
                    } else
                        console[_0x4b409f(0x24e)](_0x4b409f(0x102d));
                }
            return _0x559a4b[_0x4b409f(0x318)](_0x3f586d[_0x4b409f(0x67e)], null), _0x559a4b;
        }
    }
    class _0x41c0b1 {
        static [_0x5659be(0x29d)](_0x3db227, _0x3baff7, _0x3c1eb2, _0x15adc5) {
            var _0x4ba868 = _0x5659be;
            _0x41c0b1[_0x4ba868(0x5d7)] = _0x3c1eb2, _0x41c0b1[_0x4ba868(0x5e5)] = _0x15adc5, _0x41c0b1[_0x4ba868(0x2b9)] = _0x3baff7, _0x41c0b1[_0x4ba868(0x102e)] = _0x3db227, _0x41c0b1[_0x4ba868(0x2b7)](), _0x41c0b1[_0x4ba868(0x29f)](), _0x41c0b1[_0x4ba868(0x2a0)]();
            for (var _0x3684b6 = 0x0, _0x4059ed = _0x41c0b1[_0x4ba868(0x296)][_0x4ba868(0x2a1)]; _0x3684b6 < _0x4059ed; _0x3684b6++) {
                _0x41c0b1[_0x4ba868(0x102e)][_0x4ba868(0x29a)] = _0x41c0b1[_0x4ba868(0x296)]['blockStarts'][_0x3684b6];
                var _0x39b1f7 = _0x41c0b1[_0x4ba868(0x102e)]['getUint16'](), _0x2bbe73 = _0x41c0b1['_strings'][_0x39b1f7], _0x5646e1 = _0x41c0b1[_0x4ba868(0x102f) + _0x2bbe73];
                if (_0x5646e1 == null)
                    throw new Error(_0x4ba868(0x2a2) + _0x39b1f7 + '\x20' + _0x2bbe73);
                else
                    _0x5646e1['call'](null);
            }
            _0x41c0b1[_0x4ba868(0x29b)][_0x4ba868(0x1ff)] = 0x0, _0x41c0b1[_0x4ba868(0x102e)] = null, _0x41c0b1[_0x4ba868(0x2b9)] = null, _0x41c0b1[_0x4ba868(0x5d7)] = null, _0x41c0b1[_0x4ba868(0x5e5)] = null;
        }
        static [_0x5659be(0x1030)]() {
            var _0xff7031 = _0x5659be;
            return _0x41c0b1[_0xff7031(0x29b)][_0x41c0b1[_0xff7031(0x102e)][_0xff7031(0x299)]()];
        }
        static [_0x5659be(0x2b7)]() {
            var _0x782cca = _0x5659be;
            _0x41c0b1[_0x782cca(0x292)][_0x782cca(0x293)] = _0x41c0b1[_0x782cca(0x102e)][_0x782cca(0x295)](), _0x41c0b1[_0x782cca(0x292)][_0x782cca(0x2b8)] = _0x41c0b1[_0x782cca(0x102e)][_0x782cca(0x295)]();
        }
        static [_0x5659be(0x29f)]() {
            var _0x33b1b7 = _0x5659be, _0x24e8d5 = _0x41c0b1[_0x33b1b7(0x296)][_0x33b1b7(0x2a1)] = _0x41c0b1[_0x33b1b7(0x102e)][_0x33b1b7(0x299)](), _0x98fa3 = _0x41c0b1[_0x33b1b7(0x296)]['blockStarts'] = [], _0x27b290 = _0x41c0b1[_0x33b1b7(0x296)]['blockLengths'] = [];
            for (var _0x26b514 = 0x0; _0x26b514 < _0x24e8d5; _0x26b514++) {
                _0x98fa3[_0x33b1b7(0x298)](_0x41c0b1[_0x33b1b7(0x102e)][_0x33b1b7(0x295)]()), _0x27b290[_0x33b1b7(0x298)](_0x41c0b1[_0x33b1b7(0x102e)][_0x33b1b7(0x295)]());
            }
        }
        static [_0x5659be(0x2a0)]() {
            var _0x119409 = _0x5659be, _0x251f6a = _0x41c0b1['_readData']['getUint32'](), _0x1f1d9f = _0x41c0b1['_readData'][_0x119409(0x299)](), _0x332616 = _0x41c0b1[_0x119409(0x102e)][_0x119409(0x29a)];
            _0x41c0b1['_readData'][_0x119409(0x29a)] = _0x251f6a + _0x41c0b1['_DATA']['offset'];
            for (var _0xe00cdf = 0x0; _0xe00cdf < _0x1f1d9f; _0xe00cdf++)
                _0x41c0b1['_strings'][_0xe00cdf] = _0x41c0b1[_0x119409(0x102e)][_0x119409(0x29c)]();
            _0x41c0b1['_readData'][_0x119409(0x29a)] = _0x332616;
        }
        static [_0x5659be(0x1031)]() {
            var _0x450da6 = _0x5659be, _0x6a68fc = _0x218b83[_0x450da6(0x2f3)][_0x450da6(0x2f4)], _0x20f79e = _0x41c0b1[_0x450da6(0x1030)](), _0x7adb05 = _0x41c0b1['_readData'][_0x450da6(0x1032)](), _0x1cf5b8, _0x2bcb77 = 0x0, _0x44df85 = _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x2a9)](), _0xf86156 = _0x41c0b1[_0x450da6(0x292)][_0x450da6(0x293)];
            for (_0x1cf5b8 = 0x0; _0x1cf5b8 < _0x44df85; _0x1cf5b8++) {
                var _0x28a6a2 = _0xf86156 + _0x41c0b1[_0x450da6(0x102e)]['getUint32'](), _0xa2d3f8 = _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x295)](), _0x2b94c4 = _0x7adb05[_0x450da6(0xb1a)](_0x28a6a2, _0x28a6a2 + _0xa2d3f8), _0x188f18 = new Float32Array(_0x2b94c4), _0x38264c = _0x41c0b1[_0x450da6(0x1030)](), _0x2d3545;
                switch (_0x41c0b1[_0x450da6(0x2b9)]) {
                case _0x450da6(0x1033):
                case _0x450da6(0x1034):
                    _0x2d3545 = _0x13bc8a[_0x450da6(0x606)](_0x38264c);
                    break;
                case _0x450da6(0x1035):
                    _0x2d3545 = _0x13bc8a['getVertexDeclaration'](_0x38264c, ![]);
                    break;
                default:
                    throw new Error(_0x450da6(0x1036));
                }
                if (!_0x2d3545)
                    throw new Error(_0x450da6(0x1037));
                var _0x323111 = new _0x57a6a2(_0x188f18[_0x450da6(0x1ff)] * 0x4, _0x6a68fc[_0x450da6(0x4f8)], !![]);
                _0x323111[_0x450da6(0x449)] = _0x2d3545, _0x323111[_0x450da6(0x4fd)](_0x188f18[_0x450da6(0x448)]), _0x41c0b1[_0x450da6(0x5d7)][_0x450da6(0x4f9)] = _0x323111, _0x41c0b1[_0x450da6(0x5d7)]['_vertexCount'] += _0x323111[_0x450da6(0x443)] / _0x2d3545['vertexStride'], _0x2bcb77 += _0x188f18[_0x450da6(0x1ff)] * 0x4;
            }
            var _0x572567 = _0xf86156 + _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x295)](), _0x2f3d6f = _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x295)](), _0xda6c36 = new Uint16Array(_0x7adb05['slice'](_0x572567, _0x572567 + _0x2f3d6f)), _0x422bc3 = new _0x11925d(_0x71dec4['IndexFormat'][_0x450da6(0x8c8)], _0x2f3d6f / 0x2, _0x6a68fc[_0x450da6(0x4f8)], !![]);
            _0x422bc3[_0x450da6(0x4fd)](_0xda6c36), _0x41c0b1[_0x450da6(0x5d7)][_0x450da6(0x624)] = _0x422bc3, _0x2bcb77 += _0x422bc3[_0x450da6(0x8d1)] * 0x2, _0x41c0b1['_mesh']['_setBuffer'](_0x41c0b1[_0x450da6(0x5d7)][_0x450da6(0x4f9)], _0x422bc3), _0x41c0b1['_mesh']['_setCPUMemory'](_0x2bcb77), _0x41c0b1['_mesh'][_0x450da6(0x423)](_0x2bcb77);
            var _0x4178a6 = _0x41c0b1[_0x450da6(0x5d7)][_0x450da6(0xf27)] = [], _0x4af82a = _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x299)]();
            _0x4178a6[_0x450da6(0x1ff)] = _0x4af82a;
            for (_0x1cf5b8 = 0x0; _0x1cf5b8 < _0x4af82a; _0x1cf5b8++)
                _0x4178a6[_0x1cf5b8] = _0x41c0b1[_0x450da6(0x29b)][_0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x299)]()];
            _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x29a)] += 0x8;
            var _0x380aec = _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x295)](), _0x591b5d = _0x41c0b1[_0x450da6(0x102e)][_0x450da6(0x295)](), _0x5ec085 = new Float32Array(_0x7adb05[_0x450da6(0xb1a)](_0xf86156 + _0x380aec, _0xf86156 + _0x380aec + _0x591b5d)), _0x33abb6 = _0x5ec085[_0x450da6(0x1ff)], _0x1fa5e7 = _0x41c0b1[_0x450da6(0x5d7)]['_inverseBindPosesBuffer'] = new ArrayBuffer(_0x33abb6 * 0x4);
            _0x41c0b1[_0x450da6(0x5d7)][_0x450da6(0xf17)] = [];
            if (_0x33abb6 != 0x0)
                _0x41c0b1[_0x450da6(0x5d7)]['_instanceBufferStateType'] = _0x5c56e3[_0x450da6(0xfa3)];
            else
                _0x41c0b1['_mesh']['_instanceBufferStateType'] = _0x5c56e3[_0x450da6(0x1038)];
            _0x41c0b1['_mesh'][_0x450da6(0x620)](_0x41c0b1[_0x450da6(0x5d7)]['_instanceBufferStateType']);
            for (_0x1cf5b8 = 0x0; _0x1cf5b8 < _0x33abb6; _0x1cf5b8 += 0x10) {
                var _0x3adab9 = new _0x3ed76a(_0x5ec085[_0x1cf5b8 + 0x0], _0x5ec085[_0x1cf5b8 + 0x1], _0x5ec085[_0x1cf5b8 + 0x2], _0x5ec085[_0x1cf5b8 + 0x3], _0x5ec085[_0x1cf5b8 + 0x4], _0x5ec085[_0x1cf5b8 + 0x5], _0x5ec085[_0x1cf5b8 + 0x6], _0x5ec085[_0x1cf5b8 + 0x7], _0x5ec085[_0x1cf5b8 + 0x8], _0x5ec085[_0x1cf5b8 + 0x9], _0x5ec085[_0x1cf5b8 + 0xa], _0x5ec085[_0x1cf5b8 + 0xb], _0x5ec085[_0x1cf5b8 + 0xc], _0x5ec085[_0x1cf5b8 + 0xd], _0x5ec085[_0x1cf5b8 + 0xe], _0x5ec085[_0x1cf5b8 + 0xf], new Float32Array(_0x1fa5e7, _0x1cf5b8 * 0x4, 0x10));
                _0x41c0b1['_mesh'][_0x450da6(0xf17)][_0x1cf5b8 / 0x10] = _0x3adab9;
            }
            return !![];
        }
        static ['READ_SUBMESH']() {
            var _0x2d8781 = _0x5659be, _0x24169f = _0x41c0b1[_0x2d8781(0x102e)][_0x2d8781(0x1032)](), _0x569baf = new _0x3e57f5(_0x41c0b1[_0x2d8781(0x5d7)]);
            _0x41c0b1['_readData'][_0x2d8781(0x2a9)](), _0x41c0b1[_0x2d8781(0x102e)][_0x2d8781(0x295)](), _0x41c0b1[_0x2d8781(0x102e)][_0x2d8781(0x295)]();
            var _0x2649ba = _0x41c0b1['_readData'][_0x2d8781(0x295)](), _0x3fa15d = _0x41c0b1[_0x2d8781(0x102e)]['getUint32'](), _0x5d150a = _0x41c0b1[_0x2d8781(0x5d7)]['_indexBuffer'];
            _0x569baf[_0x2d8781(0x624)] = _0x5d150a, _0x569baf['_setIndexRange'](_0x2649ba, _0x3fa15d);
            var _0x5c8b90 = _0x41c0b1[_0x2d8781(0x5d7)][_0x2d8781(0x4f9)];
            _0x569baf[_0x2d8781(0x4f9)] = _0x5c8b90;
            var _0x4ed890 = _0x41c0b1['_DATA'][_0x2d8781(0x293)], _0x2bc153 = _0x569baf['_subIndexBufferStart'], _0x30a1d2 = _0x569baf[_0x2d8781(0xf87)], _0x39746c = _0x569baf['_boneIndicesList'], _0xfe1d7a = _0x41c0b1[_0x2d8781(0x102e)][_0x2d8781(0x299)]();
            _0x2bc153[_0x2d8781(0x1ff)] = _0xfe1d7a, _0x30a1d2[_0x2d8781(0x1ff)] = _0xfe1d7a, _0x39746c['length'] = _0xfe1d7a;
            var _0x4d67b1 = _0x41c0b1[_0x2d8781(0x5d7)][_0x2d8781(0xf18)], _0x169563 = _0x41c0b1[_0x2d8781(0x5e5)][_0x2d8781(0x1ff)];
            _0x4d67b1[_0x2d8781(0x1ff)] = _0x41c0b1[_0x2d8781(0x5d7)][_0x2d8781(0xf17)][_0x2d8781(0x1ff)];
            for (var _0x1154c3 = 0x0; _0x1154c3 < _0xfe1d7a; _0x1154c3++) {
                _0x2bc153[_0x1154c3] = _0x41c0b1[_0x2d8781(0x102e)][_0x2d8781(0x295)](), _0x30a1d2[_0x1154c3] = _0x41c0b1[_0x2d8781(0x102e)][_0x2d8781(0x295)]();
                var _0x4d7526 = _0x41c0b1['_readData'][_0x2d8781(0x295)](), _0x33f964 = _0x41c0b1['_readData'][_0x2d8781(0x295)](), _0x75f485 = _0x39746c[_0x1154c3] = new Uint16Array(_0x24169f[_0x2d8781(0xb1a)](_0x4ed890 + _0x4d7526, _0x4ed890 + _0x4d7526 + _0x33f964)), _0x1c5ae5 = _0x75f485[_0x2d8781(0x1ff)];
                for (var _0x4ded96 = 0x0; _0x4ded96 < _0x1c5ae5; _0x4ded96++) {
                    var _0x3c872 = _0x75f485[_0x4ded96];
                    _0x4d67b1[_0x3c872] || (_0x4d67b1[_0x3c872] = new _0x27eaad(_0x169563, _0x1154c3, _0x4ded96));
                }
            }
            return _0x41c0b1[_0x2d8781(0x5e5)][_0x2d8781(0x298)](_0x569baf), !![];
        }
    }
    _0x41c0b1[_0x5659be(0x296)] = { 'count': 0x0 }, _0x41c0b1[_0x5659be(0x292)] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x41c0b1[_0x5659be(0x29b)] = [];
    class _0x3dbb82 {
        static [_0x5659be(0x29d)](_0x117392, _0x25e0f9, _0x90991b, _0x568af2) {
            var _0x46f88c = _0x5659be;
            _0x3dbb82[_0x46f88c(0x5d7)] = _0x90991b, _0x3dbb82['_subMeshes'] = _0x568af2, _0x3dbb82[_0x46f88c(0x2b9)] = _0x25e0f9, _0x3dbb82['_readData'] = _0x117392, _0x3dbb82[_0x46f88c(0x2b7)](), _0x3dbb82[_0x46f88c(0x29f)](), _0x3dbb82[_0x46f88c(0x2a0)]();
            for (var _0x134cdd = 0x0, _0x317602 = _0x3dbb82[_0x46f88c(0x296)][_0x46f88c(0x2a1)]; _0x134cdd < _0x317602; _0x134cdd++) {
                _0x3dbb82[_0x46f88c(0x102e)][_0x46f88c(0x29a)] = _0x3dbb82[_0x46f88c(0x296)][_0x46f88c(0x1039)][_0x134cdd];
                var _0x5dfeb9 = _0x3dbb82[_0x46f88c(0x102e)]['getUint16'](), _0x27a001 = _0x3dbb82[_0x46f88c(0x29b)][_0x5dfeb9], _0x41ae31 = _0x3dbb82[_0x46f88c(0x102f) + _0x27a001];
                if (_0x41ae31 == null)
                    throw new Error(_0x46f88c(0x2a2) + _0x5dfeb9 + '\x20' + _0x27a001);
                else
                    _0x41ae31[_0x46f88c(0x2ba)](null);
            }
            _0x3dbb82[_0x46f88c(0x29b)][_0x46f88c(0x1ff)] = 0x0, _0x3dbb82['_readData'] = null, _0x3dbb82[_0x46f88c(0x2b9)] = null, _0x3dbb82['_mesh'] = null, _0x3dbb82[_0x46f88c(0x5e5)] = null;
        }
        static ['_readString']() {
            var _0x417e8e = _0x5659be;
            return _0x3dbb82[_0x417e8e(0x29b)][_0x3dbb82['_readData'][_0x417e8e(0x299)]()];
        }
        static [_0x5659be(0x2b7)]() {
            var _0x5ef6b7 = _0x5659be;
            _0x3dbb82[_0x5ef6b7(0x292)][_0x5ef6b7(0x293)] = _0x3dbb82['_readData'][_0x5ef6b7(0x295)](), _0x3dbb82[_0x5ef6b7(0x292)][_0x5ef6b7(0x2b8)] = _0x3dbb82[_0x5ef6b7(0x102e)]['getUint32']();
        }
        static [_0x5659be(0x29f)]() {
            var _0x4ba81b = _0x5659be, _0x32e1e6 = _0x3dbb82['_BLOCK'][_0x4ba81b(0x2a1)] = _0x3dbb82[_0x4ba81b(0x102e)][_0x4ba81b(0x299)](), _0x9635f3 = _0x3dbb82[_0x4ba81b(0x296)]['blockStarts'] = [], _0x1836bb = _0x3dbb82[_0x4ba81b(0x296)][_0x4ba81b(0x297)] = [];
            for (var _0x3e0cd3 = 0x0; _0x3e0cd3 < _0x32e1e6; _0x3e0cd3++) {
                _0x9635f3[_0x4ba81b(0x298)](_0x3dbb82[_0x4ba81b(0x102e)][_0x4ba81b(0x295)]()), _0x1836bb[_0x4ba81b(0x298)](_0x3dbb82[_0x4ba81b(0x102e)][_0x4ba81b(0x295)]());
            }
        }
        static [_0x5659be(0x2a0)]() {
            var _0x4f0795 = _0x5659be, _0x496dc1 = _0x3dbb82['_readData'][_0x4f0795(0x295)](), _0x44d1a2 = _0x3dbb82['_readData'][_0x4f0795(0x299)](), _0x2e4a64 = _0x3dbb82['_readData'][_0x4f0795(0x29a)];
            _0x3dbb82[_0x4f0795(0x102e)]['pos'] = _0x496dc1 + _0x3dbb82['_DATA'][_0x4f0795(0x293)];
            for (var _0x2a234e = 0x0; _0x2a234e < _0x44d1a2; _0x2a234e++)
                _0x3dbb82[_0x4f0795(0x29b)][_0x2a234e] = _0x3dbb82[_0x4f0795(0x102e)][_0x4f0795(0x29c)]();
            _0x3dbb82[_0x4f0795(0x102e)][_0x4f0795(0x29a)] = _0x2e4a64;
        }
        static ['READ_MESH']() {
            var _0x42fb5c = _0x5659be, _0x2f544c = _0x218b83['LayaGL'][_0x42fb5c(0x2f4)], _0x1182ee, _0x1a981d = 0x0, _0x4d0d6d = _0x3dbb82['_readString'](), _0x19c223 = _0x3dbb82['_readData'], _0x3ccd53 = _0x19c223['__getBuffer'](), _0x24fc51 = _0x19c223[_0x42fb5c(0x2a9)](), _0xd080a7 = _0x3dbb82['_DATA'][_0x42fb5c(0x293)];
            for (_0x1182ee = 0x0; _0x1182ee < _0x24fc51; _0x1182ee++) {
                var _0x50c5dc = _0xd080a7 + _0x19c223[_0x42fb5c(0x295)](), _0x175710 = _0x19c223[_0x42fb5c(0x295)](), _0x38b2b4 = _0x3dbb82[_0x42fb5c(0x1030)](), _0x1d4e48 = _0x13bc8a[_0x42fb5c(0x606)](_0x38b2b4, ![]), _0x5a2a90 = _0x1d4e48[_0x42fb5c(0x4e4)], _0x5254a5, _0x3dbb97, _0x4a4521, _0x54e3fd = _0x38b2b4['split'](','), _0x3fd37d = _0x54e3fd[_0x42fb5c(0x1ff)], _0x13ef19 = _0x3dbb82[_0x42fb5c(0x5d7)];
                switch (_0x3dbb82['_version']) {
                case _0x42fb5c(0x103a):
                case _0x42fb5c(0x103b):
                    _0x5254a5 = _0x3ccd53[_0x42fb5c(0xb1a)](_0x50c5dc, _0x50c5dc + _0x175710 * _0x5a2a90), _0x3dbb97 = new Float32Array(_0x5254a5), _0x4a4521 = new Uint8Array(_0x5254a5);
                    break;
                case _0x42fb5c(0x103c):
                case 'LAYAMODEL:COMPRESSION_0501':
                    _0x5254a5 = new ArrayBuffer(_0x5a2a90 * _0x175710), _0x3dbb97 = new Float32Array(_0x5254a5), _0x4a4521 = new Uint8Array(_0x5254a5);
                    var _0x2d88fb = _0x19c223[_0x42fb5c(0x29a)];
                    _0x19c223[_0x42fb5c(0x29a)] = _0x50c5dc;
                    for (var _0x1a272a = 0x0; _0x1a272a < _0x175710; _0x1a272a++) {
                        var _0x3780ee, _0x1dfdcd = _0x1a272a * _0x5a2a90;
                        for (var _0x704dee = 0x0; _0x704dee < _0x3fd37d; _0x704dee++) {
                            switch (_0x54e3fd[_0x704dee]) {
                            case 'POSITION':
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x218b83['HalfFloatUtils'][_0x42fb5c(0x2c0)](_0x19c223[_0x42fb5c(0x299)]()), _0x3dbb97[_0x3780ee + 0x1] = _0x218b83[_0x42fb5c(0x2bf)][_0x42fb5c(0x2c0)](_0x19c223['getUint16']()), _0x3dbb97[_0x3780ee + 0x2] = _0x218b83['HalfFloatUtils']['convertToNumber'](_0x19c223[_0x42fb5c(0x299)]()), _0x1dfdcd += 0xc;
                                break;
                            case _0x42fb5c(0x60a):
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x19c223[_0x42fb5c(0x2af)]() / 127.5 - 0x1, _0x3dbb97[_0x3780ee + 0x1] = _0x19c223[_0x42fb5c(0x2af)]() / 127.5 - 0x1, _0x3dbb97[_0x3780ee + 0x2] = _0x19c223[_0x42fb5c(0x2af)]() / 127.5 - 0x1, _0x1dfdcd += 0xc;
                                break;
                            case _0x42fb5c(0x428):
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x3dbb97[_0x3780ee + 0x1] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x3dbb97[_0x3780ee + 0x2] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x3dbb97[_0x3780ee + 0x3] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x1dfdcd += 0x10;
                                break;
                            case 'UV':
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x218b83[_0x42fb5c(0x2bf)][_0x42fb5c(0x2c0)](_0x19c223[_0x42fb5c(0x299)]()), _0x3dbb97[_0x3780ee + 0x1] = _0x218b83['HalfFloatUtils']['convertToNumber'](_0x19c223[_0x42fb5c(0x299)]()), _0x1dfdcd += 0x8;
                                break;
                            case _0x42fb5c(0x60e):
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x218b83[_0x42fb5c(0x2bf)][_0x42fb5c(0x2c0)](_0x19c223[_0x42fb5c(0x299)]()), _0x3dbb97[_0x3780ee + 0x1] = _0x218b83[_0x42fb5c(0x2bf)]['convertToNumber'](_0x19c223[_0x42fb5c(0x299)]()), _0x1dfdcd += 0x8;
                                break;
                            case 'BLENDWEIGHT':
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x3dbb97[_0x3780ee + 0x1] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x3dbb97[_0x3780ee + 0x2] = _0x19c223['getUint8']() / 0xff, _0x3dbb97[_0x3780ee + 0x3] = _0x19c223[_0x42fb5c(0x2af)]() / 0xff, _0x1dfdcd += 0x10;
                                break;
                            case _0x42fb5c(0x610):
                                _0x4a4521[_0x1dfdcd] = _0x19c223[_0x42fb5c(0x2af)](), _0x4a4521[_0x1dfdcd + 0x1] = _0x19c223[_0x42fb5c(0x2af)](), _0x4a4521[_0x1dfdcd + 0x2] = _0x19c223['getUint8'](), _0x4a4521[_0x1dfdcd + 0x3] = _0x19c223[_0x42fb5c(0x2af)](), _0x1dfdcd += 0x4;
                                break;
                            case _0x42fb5c(0x103d):
                                _0x3780ee = _0x1dfdcd / 0x4, _0x3dbb97[_0x3780ee] = _0x19c223[_0x42fb5c(0x2af)]() / 127.5 - 0x1, _0x3dbb97[_0x3780ee + 0x1] = _0x19c223[_0x42fb5c(0x2af)]() / 127.5 - 0x1, _0x3dbb97[_0x3780ee + 0x2] = _0x19c223['getUint8']() / 127.5 - 0x1, _0x3dbb97[_0x3780ee + 0x3] = _0x19c223[_0x42fb5c(0x2af)]() / 127.5 - 0x1, _0x1dfdcd += 0x10;
                                break;
                            }
                        }
                    }
                    _0x19c223[_0x42fb5c(0x29a)] = _0x2d88fb;
                    break;
                }
                var _0x5c7314 = new _0x57a6a2(_0x5254a5[_0x42fb5c(0x103e)], _0x2f544c['STATIC_DRAW'], !![]);
                _0x5c7314[_0x42fb5c(0x449)] = _0x1d4e48, _0x5c7314[_0x42fb5c(0x4fd)](_0x5254a5);
                var _0x175710 = _0x5c7314[_0x42fb5c(0x443)] / _0x1d4e48[_0x42fb5c(0x4e4)];
                if (_0x175710 > 0xffff)
                    _0x13ef19[_0x42fb5c(0xf96)] = _0x71dec4[_0x42fb5c(0x8ca)]['UInt32'];
                else
                    _0x13ef19[_0x42fb5c(0xf96)] = _0x71dec4[_0x42fb5c(0x8ca)][_0x42fb5c(0x8c8)];
                _0x13ef19['_vertexBuffer'] = _0x5c7314, _0x13ef19['_vertexCount'] += _0x175710, _0x1a981d += _0x3dbb97[_0x42fb5c(0x1ff)] * 0x4;
            }
            var _0x44a60b = _0xd080a7 + _0x19c223[_0x42fb5c(0x295)](), _0x2f8358 = _0x19c223[_0x42fb5c(0x295)](), _0x3baf14;
            if (_0x13ef19[_0x42fb5c(0xf8a)] == _0x71dec4['IndexFormat'][_0x42fb5c(0x8c9)])
                _0x3baf14 = new Uint32Array(_0x3ccd53[_0x42fb5c(0xb1a)](_0x44a60b, _0x44a60b + _0x2f8358));
            else
                _0x3baf14 = new Uint16Array(_0x3ccd53[_0x42fb5c(0xb1a)](_0x44a60b, _0x44a60b + _0x2f8358));
            var _0x30b45d = new _0x11925d(_0x13ef19[_0x42fb5c(0xf8a)], _0x3baf14[_0x42fb5c(0x1ff)], _0x2f544c['STATIC_DRAW'], !![]);
            _0x30b45d[_0x42fb5c(0x4fd)](_0x3baf14), _0x13ef19[_0x42fb5c(0x624)] = _0x30b45d, _0x13ef19[_0x42fb5c(0xfc8)](_0x13ef19[_0x42fb5c(0x4f9)], _0x30b45d), _0x1a981d += _0x30b45d[_0x42fb5c(0x8d1)] * 0x2, _0x13ef19['_setCPUMemory'](_0x1a981d), _0x13ef19[_0x42fb5c(0x423)](_0x1a981d);
            if (_0x3dbb82[_0x42fb5c(0x2b9)] == _0x42fb5c(0x103b) || _0x3dbb82[_0x42fb5c(0x2b9)] == _0x42fb5c(0x103f)) {
                var _0x475778 = _0x13ef19[_0x42fb5c(0x80d)], _0x5df57d = _0x475778[_0x42fb5c(0xa4f)](), _0x4ec66d = _0x475778[_0x42fb5c(0x828)]();
                _0x5df57d[_0x42fb5c(0x1fa)](_0x19c223['getFloat32'](), _0x19c223[_0x42fb5c(0x2a4)](), _0x19c223[_0x42fb5c(0x2a4)]()), _0x4ec66d[_0x42fb5c(0x1fa)](_0x19c223['getFloat32'](), _0x19c223[_0x42fb5c(0x2a4)](), _0x19c223[_0x42fb5c(0x2a4)]()), _0x475778['setMin'](_0x5df57d), _0x475778[_0x42fb5c(0xa51)](_0x4ec66d), _0x13ef19[_0x42fb5c(0x80d)] = _0x475778;
            }
            var _0x1bb5be = _0x13ef19[_0x42fb5c(0xf27)] = [], _0x3642ff = _0x19c223[_0x42fb5c(0x299)]();
            _0x1bb5be[_0x42fb5c(0x1ff)] = _0x3642ff;
            for (_0x1182ee = 0x0; _0x1182ee < _0x3642ff; _0x1182ee++)
                _0x1bb5be[_0x1182ee] = _0x3dbb82['_strings'][_0x19c223['getUint16']()];
            var _0x2395e7 = _0x19c223[_0x42fb5c(0x295)](), _0x28c21d = _0x19c223[_0x42fb5c(0x295)](), _0x13cbbf = new Float32Array(_0x3ccd53['slice'](_0xd080a7 + _0x2395e7, _0xd080a7 + _0x2395e7 + _0x28c21d)), _0xa27bfe = _0x13cbbf['length'], _0x50948c = _0x13ef19[_0x42fb5c(0x1040)] = new ArrayBuffer(_0xa27bfe * 0x4);
            _0x13ef19['_inverseBindPoses'] = [];
            if (_0xa27bfe != 0x0)
                _0x13ef19['_instanceBufferStateType'] = _0x5c56e3[_0x42fb5c(0xfa3)];
            else
                _0x13ef19[_0x42fb5c(0xfc9)] = _0x5c56e3[_0x42fb5c(0x1038)];
            _0x13ef19[_0x42fb5c(0x620)](_0x13ef19[_0x42fb5c(0xfc9)]);
            for (_0x1182ee = 0x0; _0x1182ee < _0xa27bfe; _0x1182ee += 0x10) {
                var _0xa49c61 = new _0x3ed76a(_0x13cbbf[_0x1182ee + 0x0], _0x13cbbf[_0x1182ee + 0x1], _0x13cbbf[_0x1182ee + 0x2], _0x13cbbf[_0x1182ee + 0x3], _0x13cbbf[_0x1182ee + 0x4], _0x13cbbf[_0x1182ee + 0x5], _0x13cbbf[_0x1182ee + 0x6], _0x13cbbf[_0x1182ee + 0x7], _0x13cbbf[_0x1182ee + 0x8], _0x13cbbf[_0x1182ee + 0x9], _0x13cbbf[_0x1182ee + 0xa], _0x13cbbf[_0x1182ee + 0xb], _0x13cbbf[_0x1182ee + 0xc], _0x13cbbf[_0x1182ee + 0xd], _0x13cbbf[_0x1182ee + 0xe], _0x13cbbf[_0x1182ee + 0xf], new Float32Array(_0x50948c, _0x1182ee * 0x4, 0x10));
                _0x13ef19['_inverseBindPoses'][_0x1182ee / 0x10] = _0xa49c61;
            }
            return !![];
        }
        static [_0x5659be(0x1041)]() {
            var _0x23d2dc = _0x5659be, _0x36bd8c = _0x3dbb82[_0x23d2dc(0x102e)], _0x5014a0 = _0x36bd8c[_0x23d2dc(0x1032)](), _0x4f7029 = new _0x3e57f5(_0x3dbb82[_0x23d2dc(0x5d7)]);
            _0x36bd8c[_0x23d2dc(0x2a9)]();
            var _0x5da9f2 = _0x36bd8c[_0x23d2dc(0x295)](), _0x59a1d7 = _0x36bd8c[_0x23d2dc(0x295)](), _0x14feca = _0x3dbb82[_0x23d2dc(0x5d7)][_0x23d2dc(0x624)];
            _0x4f7029[_0x23d2dc(0x624)] = _0x14feca, _0x4f7029[_0x23d2dc(0xf88)](_0x5da9f2, _0x59a1d7);
            var _0xe0a70 = _0x3dbb82['_mesh'][_0x23d2dc(0x4f9)];
            _0x4f7029['_vertexBuffer'] = _0xe0a70;
            var _0x544f0a = _0x3dbb82[_0x23d2dc(0x292)]['offset'], _0x194b20 = _0x4f7029[_0x23d2dc(0xf90)], _0x50becb = _0x4f7029[_0x23d2dc(0xf87)], _0x3bc321 = _0x4f7029[_0x23d2dc(0xf1c)], _0x4fd216 = _0x36bd8c[_0x23d2dc(0x299)]();
            _0x194b20[_0x23d2dc(0x1ff)] = _0x4fd216, _0x50becb['length'] = _0x4fd216, _0x3bc321['length'] = _0x4fd216;
            var _0x533994 = _0x3dbb82[_0x23d2dc(0x5d7)][_0x23d2dc(0xf18)], _0x25915b = _0x3dbb82['_subMeshes'][_0x23d2dc(0x1ff)];
            _0x533994[_0x23d2dc(0x1ff)] = _0x3dbb82[_0x23d2dc(0x5d7)][_0x23d2dc(0xf17)][_0x23d2dc(0x1ff)];
            for (var _0x9d0cc4 = 0x0; _0x9d0cc4 < _0x4fd216; _0x9d0cc4++) {
                _0x194b20[_0x9d0cc4] = _0x36bd8c[_0x23d2dc(0x295)](), _0x50becb[_0x9d0cc4] = _0x36bd8c[_0x23d2dc(0x295)]();
                var _0x40c75c = _0x36bd8c[_0x23d2dc(0x295)](), _0x1729cd = _0x36bd8c[_0x23d2dc(0x295)](), _0x14299a = _0x3bc321[_0x9d0cc4] = new Uint16Array(_0x5014a0[_0x23d2dc(0xb1a)](_0x544f0a + _0x40c75c, _0x544f0a + _0x40c75c + _0x1729cd));
                for (var _0x36ae66 = 0x0, _0x5d4069 = _0x14299a[_0x23d2dc(0x1ff)]; _0x36ae66 < _0x5d4069; _0x36ae66++) {
                    var _0x62bf20 = _0x14299a[_0x36ae66];
                    _0x533994[_0x62bf20] || (_0x533994[_0x62bf20] = new _0x27eaad(_0x25915b, _0x9d0cc4, _0x36ae66));
                }
            }
            return _0x3dbb82[_0x23d2dc(0x5e5)][_0x23d2dc(0x298)](_0x4f7029), !![];
        }
    }
    _0x3dbb82[_0x5659be(0x296)] = { 'count': 0x0 }, _0x3dbb82[_0x5659be(0x292)] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x3dbb82['_strings'] = [];
    class _0xf8a3fc {
        static ['_parse'](_0x45c8a2, _0x195bef = null, _0x4b73a5 = null) {
            var _0x4b79ca = _0x5659be, _0xb08b14 = new _0x5c56e3();
            return _0xf8a3fc[_0x4b79ca(0x1042)](_0x45c8a2, _0xb08b14, _0xb08b14[_0x4b79ca(0x5e5)]), _0xb08b14;
        }
        static [_0x5659be(0x1042)](_0x4d8b56, _0x2c2028, _0x2a603e) {
            var _0x505e65 = _0x5659be, _0x2bc854 = new _0x218b83[(_0x505e65(0x319))](_0x4d8b56);
            _0x2bc854['pos'] = 0x0;
            var _0x369048 = _0x2bc854['readUTFString']();
            switch (_0x369048) {
            case _0x505e65(0x1033):
            case _0x505e65(0x1034):
            case _0x505e65(0x1035):
                _0x41c0b1['parse'](_0x2bc854, _0x369048, _0x2c2028, _0x2a603e);
                break;
            case _0x505e65(0x103a):
            case _0x505e65(0x103c):
            case _0x505e65(0x103b):
            case _0x505e65(0x103f):
                _0x3dbb82[_0x505e65(0x29d)](_0x2bc854, _0x369048, _0x2c2028, _0x2a603e);
                break;
            default:
                throw new Error(_0x505e65(0x1043));
            }
            _0x2c2028[_0x505e65(0xfa2)](_0x2a603e);
            if (_0x369048 != _0x505e65(0x103b) && _0x369048 != _0x505e65(0x103f))
                _0x2c2028[_0x505e65(0xfcc)]();
        }
    }
    var _0x2318c0 = _0x5659be(0x1044), _0x4d0593 = _0x5659be(0x1045);
    class _0x476866 extends _0x4bfb48 {
        constructor() {
            var _0x5e20a4 = _0x5659be;
            super(), this[_0x5e20a4(0x1046)] = 0x1, this[_0x5e20a4(0x1047)] = _0x218b83[_0x5e20a4(0xbbd)][_0x5e20a4(0xaf9)], this[_0x5e20a4(0x1048)] = new _0x8fb80(0x1, 0x0, 0x0, 0x1), this[_0x5e20a4(0x68b)](_0x5e20a4(0x1049));
            var _0x445075 = this[_0x5e20a4(0x4e0)];
            _0x445075[_0x5e20a4(0x49d)](_0x476866[_0x5e20a4(0x737)], new _0x8fb80(0.5, 0.5, 0.5, 0.5)), _0x445075[_0x5e20a4(0x4af)](_0x476866[_0x5e20a4(0xca6)], 0x0), _0x445075[_0x5e20a4(0x49d)](_0x476866[_0x5e20a4(0x104a)], this[_0x5e20a4(0x1048)]);
        }
        static [_0x5659be(0x229)]() {
            var _0x4b052c = _0x5659be, _0x3dc453 = { 'a_Position': _0x13bc8a[_0x4b052c(0x609)] }, _0x4e5f77 = {
                    'u_TintColor': _0x84b6d6[_0x4b052c(0x540)],
                    'u_TextureHDRParams': _0x84b6d6[_0x4b052c(0x540)],
                    'u_Rotation': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_Texture': _0x84b6d6['PERIOD_MATERIAL'],
                    'u_ViewProjection': _0x84b6d6[_0x4b052c(0x542)]
                }, _0x25de1 = _0x84b6d6[_0x4b052c(0x201)](_0x4b052c(0x1049)), _0xcfa941 = new _0x280c5f(_0x3dc453, _0x4e5f77);
            _0x25de1[_0x4b052c(0x533)](_0xcfa941), _0xcfa941[_0x4b052c(0xc8e)](_0x4d0593, _0x2318c0);
        }
        get [_0x5659be(0xca4)]() {
            var _0x481cdf = _0x5659be;
            return this[_0x481cdf(0x4e0)][_0x481cdf(0x49c)](_0x476866[_0x481cdf(0x737)]);
        }
        set [_0x5659be(0xca4)](_0x5416da) {
            var _0x3d9cf2 = _0x5659be;
            this['_shaderValues'][_0x3d9cf2(0x49d)](_0x476866[_0x3d9cf2(0x737)], _0x5416da);
        }
        get [_0x5659be(0xca5)]() {
            return this['_exposure'];
        }
        set [_0x5659be(0xca5)](_0x59a284) {
            var _0x4d51bb = _0x5659be;
            if (this[_0x4d51bb(0x1046)] !== _0x59a284) {
                this[_0x4d51bb(0x1046)] = _0x59a284;
                if (this[_0x4d51bb(0x1047)] == _0x218b83[_0x4d51bb(0xbbd)]['RGBM'])
                    this[_0x4d51bb(0x1048)]['x'] = _0x59a284 * _0x218b83[_0x4d51bb(0x3da)][_0x4d51bb(0x104b)];
                else
                    this[_0x4d51bb(0x1048)]['x'] = _0x59a284;
            }
        }
        get [_0x5659be(0x5a0)]() {
            var _0x2da1f1 = _0x5659be;
            return this[_0x2da1f1(0x4e0)][_0x2da1f1(0x498)](_0x476866[_0x2da1f1(0xca6)]);
        }
        set [_0x5659be(0x5a0)](_0x3e07cb) {
            var _0x4a2b18 = _0x5659be;
            this['_shaderValues']['setNumber'](_0x476866[_0x4a2b18(0xca6)], _0x3e07cb);
        }
        get ['panoramicTexture']() {
            var _0x4b82be = _0x5659be;
            return this['_shaderValues'][_0x4b82be(0x4a4)](_0x476866[_0x4b82be(0x104c)]);
        }
        set ['panoramicTexture'](_0x55a5b4) {
            var _0x3dd477 = _0x5659be;
            this['_shaderValues'][_0x3dd477(0x4a2)](_0x476866[_0x3dd477(0x104c)], _0x55a5b4);
        }
        get ['panoramicTextureDecodeFormat']() {
            return this['_textureDecodeFormat'];
        }
        set [_0x5659be(0x104d)](_0x1fdff4) {
            var _0x2684d6 = _0x5659be;
            if (this[_0x2684d6(0x1047)] !== _0x1fdff4) {
                this['_textureDecodeFormat'] = _0x1fdff4;
                if (_0x1fdff4 == _0x218b83[_0x2684d6(0xbbd)][_0x2684d6(0xbf0)])
                    this['_textureHDRParams']['x'] = this[_0x2684d6(0x1046)] * _0x218b83[_0x2684d6(0x3da)][_0x2684d6(0x104b)];
                else
                    this[_0x2684d6(0x1048)]['x'] = this[_0x2684d6(0x1046)];
            }
        }
    }
    _0x476866[_0x5659be(0x737)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xca9)), _0x476866[_0x5659be(0xcbc)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0xcc1)), _0x476866[_0x5659be(0xca6)] = _0x84b6d6['propertyNameToID']('u_Rotation'), _0x476866[_0x5659be(0x104c)] = _0x84b6d6[_0x5659be(0x526)]('u_Texture'), _0x476866['TEXTURE_HDR_PARAMS'] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x104e));
    class _0x324d7b {
        constructor() {
        }
        static get [_0x5659be(0x104f)]() {
            return _0x40d5e5['_enablePhysics'];
        }
        static ['_cancelLoadByUrl'](_0x390671) {
            var _0x356af5 = _0x5659be;
            _0x218b83[_0x356af5(0x685)]['loader'][_0x356af5(0x1050)](_0x390671), _0x324d7b[_0x356af5(0x1051)][_0x356af5(0x1050)](_0x390671), _0x324d7b[_0x356af5(0x1052)]['cancelLoadByUrl'](_0x390671), _0x324d7b['_innerThirdLevelLoaderManager'][_0x356af5(0x1050)](_0x390671), _0x324d7b[_0x356af5(0x1053)][_0x356af5(0x1050)](_0x390671);
        }
        static [_0x5659be(0x1054)](_0xaf0267, _0x107b9c) {
            var _0x168e82 = _0x5659be;
            _0x218b83['WebGL'][_0x168e82(0x1055)](_0xaf0267, _0x107b9c), _0x51310c[_0x168e82(0x9a8)] = _0xaf0267, _0x51310c[_0x168e82(0x562)] = _0x107b9c;
        }
        static [_0x5659be(0x229)](_0x6e5dc8, _0x42a5cb, _0x2901fd) {
            var _0x33dd96 = _0x5659be;
            _0x218b83[_0x33dd96(0x1056)][_0x33dd96(0x238)] = _0x2901fd['isAntialias'], _0x218b83[_0x33dd96(0x1056)][_0x33dd96(0x239)] = _0x2901fd[_0x33dd96(0x239)], _0x218b83[_0x33dd96(0x1056)][_0x33dd96(0x23a)] = _0x2901fd[_0x33dd96(0x23a)], _0x218b83[_0x33dd96(0x1056)][_0x33dd96(0x253)] = _0x2901fd[_0x33dd96(0x253)];
            if (!_0x218b83[_0x33dd96(0x1057)][_0x33dd96(0x650)]()) {
                alert(_0x33dd96(0x1058));
                return;
            }
            _0x218b83[_0x33dd96(0x1059)][_0x33dd96(0x105a)] = _0x324d7b[_0x33dd96(0x1054)], _0x218b83[_0x33dd96(0x308)][_0x33dd96(0x105b)] = !![], _0x218b83['Laya']['init'](_0x6e5dc8, _0x42a5cb);
            !_0x218b83[_0x33dd96(0x308)][_0x33dd96(0x653)] && (_0x218b83[_0x33dd96(0x2f3)]['instance'] = _0x218b83[_0x33dd96(0x3fe)][_0x33dd96(0x105c)], _0x218b83[_0x33dd96(0x2f3)]['instance'][_0x33dd96(0x7b1)] = function (_0x2be01e = 0x80, _0x3447cc = 0x40, _0x43599c = ![]) {
                var _0x2543ac = _0x33dd96;
                return new _0x218b83[(_0x2543ac(0x105d))](this, _0x2be01e, _0x3447cc, _0x43599c);
            });
            _0x2901fd['_multiLighting'] = _0x2901fd['enableMultiLight'] && _0x218b83[_0x33dd96(0x953)]['supportTextureFormat'](_0x218b83[_0x33dd96(0x2c6)][_0x33dd96(0x105e)]), _0x429ec3[_0x33dd96(0x21e)] = _0x84b6d6, _0x429ec3[_0x33dd96(0x21f)] = _0x55cc88, _0x429ec3[_0x33dd96(0x220)] = _0x493d86, _0x429ec3[_0x33dd96(0x221)] = _0x59607c, _0x429ec3[_0x33dd96(0xaae)] = _0x5267dc, _0x429ec3[_0x33dd96(0xa7f)] = _0x324d7b, _0x429ec3['Matrix4x4'] = _0x3ed76a, _0x429ec3[_0x33dd96(0x223)] = _0x40d5e5, _0x429ec3[_0x33dd96(0x224)] = _0x71dec4['ShadowLightType'], _0x429ec3['Camera'] = _0x428ec4, _0x429ec3[_0x33dd96(0x225)] = _0x1a9c23, _0x429ec3[_0x33dd96(0x5f5)] = _0x5551c8, _0x429ec3['SubMeshRenderElement'] = _0x1c6dea, _0x324d7b[_0x33dd96(0x105f)]();
            if (_0x2901fd[_0x33dd96(0x244)])
                _0x40d5e5[_0x33dd96(0x1060)]();
            _0x40d5e5[_0x33dd96(0x226)](), _0x48a921[_0x33dd96(0x229)](), _0x13bc8a[_0x33dd96(0x229)](), _0x174845[_0x33dd96(0x229)](), _0x50e22b['__init__'](), _0x53569e[_0x33dd96(0x229)](), _0x183e46[_0x33dd96(0x229)](), _0x6f93b4[_0x33dd96(0x229)](), _0x243ac9[_0x33dd96(0x229)](), _0x269d35[_0x33dd96(0x229)](), _0x5267dc[_0x33dd96(0x229)](), _0x2f53f7[_0x33dd96(0x229)](), _0x143874[_0x33dd96(0x955)](), _0x336a30[_0x33dd96(0x229)](), _0x1ad7f4['__init__'](), _0x89bfff[_0x33dd96(0x229)](), _0x476866[_0x33dd96(0x229)](), _0x5c56e3['__init__'](), _0x173012['__init__'](), _0x356e58['__init__'](), _0x200920[_0x33dd96(0x229)](), _0x82ba60[_0x33dd96(0x229)](), _0x423afc[_0x33dd96(0x229)](), _0x2d08c0['__init__'](), _0x4e36f1[_0x33dd96(0x229)](), _0x5e19e7[_0x33dd96(0x229)](), _0x2987ba[_0x33dd96(0x229)](), _0x55cc88[_0x33dd96(0x229)](), _0x493d86[_0x33dd96(0x229)](), _0x4bfb48[_0x33dd96(0x687)](), _0x47f6bc['__initDefine__'](), _0x5d2d40[_0x33dd96(0x687)](), _0x3df214['__initDefine__'](), _0x2781f6['__initDefine__'](), _0x4b7423[_0x33dd96(0x687)](), _0x5dc88a['__initDefine__'](), _0x4c6dd7[_0x33dd96(0x687)](), _0x423dc4[_0x33dd96(0x687)](), _0x35500f['__initDefine__'](), _0x541c3c[_0x33dd96(0x687)](), _0x223623[_0x33dd96(0x687)](), _0x428cb6[_0x33dd96(0x229)](), _0x218b83[_0x33dd96(0x1023)]['regClass'](_0x33dd96(0x1061), _0x476866), _0x218b83['ClassUtils']['regClass'](_0x33dd96(0x1062), _0x5dc88a), _0x218b83[_0x33dd96(0x1023)]['regClass']('Laya.UnlitMaterial', _0x2781f6), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x1064), _0x5d2d40), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x1065), _0x3df214), _0x218b83[_0x33dd96(0x1023)]['regClass'](_0x33dd96(0x1066), _0x1ad7f4), _0x218b83['ClassUtils'][_0x33dd96(0x1063)](_0x33dd96(0x1067), _0x89bfff), _0x218b83['ClassUtils'][_0x33dd96(0x1063)]('Laya.SkyBoxMaterial', _0x223623), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x1068), _0x4c6dd7), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x1069), _0x35500f), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x106a), _0x423dc4), _0x218b83[_0x33dd96(0x1023)]['regClass'](_0x33dd96(0x106b), _0x4b7423), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x106c), _0x218b83[_0x33dd96(0x106d)]), _0x218b83['ClassUtils']['regClass']('Laya.Rigidbody3D', _0x218b83[_0x33dd96(0x22d)]), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x106e), _0x218b83['CharacterController']), _0x218b83['ClassUtils']['regClass'](_0x33dd96(0x106f), _0x58a8c8), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x106d), _0x218b83[_0x33dd96(0x106d)]), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)]('CharacterController', _0x218b83[_0x33dd96(0x22c)]), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x1070), _0x58a8c8), _0x218b83['ClassUtils'][_0x33dd96(0x1063)](_0x33dd96(0x22d), _0x218b83[_0x33dd96(0x22d)]), _0x218b83[_0x33dd96(0x1023)][_0x33dd96(0x1063)](_0x33dd96(0x1071), _0x218b83[_0x33dd96(0x1071)]), _0x218b83['ClassUtils'][_0x33dd96(0x1063)](_0x33dd96(0x1072), _0x218b83[_0x33dd96(0x1072)]), _0x541c3c[_0x33dd96(0xb3a)] = new _0x541c3c(), _0x5d2d40[_0x33dd96(0xb3a)] = new _0x5d2d40(), _0x5dc88a['defaultMaterial'] = new _0x5dc88a(), _0x2781f6['defaultMaterial'] = new _0x2781f6(), _0x423dc4[_0x33dd96(0xb3a)] = new _0x423dc4(), _0x4b7423['defaultMaterial'] = new _0x4b7423(), _0x3df214[_0x33dd96(0xb3a)] = new _0x3df214(), _0x223623[_0x33dd96(0xb3a)] = new _0x223623(), _0x4c6dd7[_0x33dd96(0xb3a)] = new _0x4c6dd7(), _0x541c3c['defaultMaterial']['lock'] = !![], _0x5d2d40[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x5dc88a[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x2781f6[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x423dc4[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x4b7423['defaultMaterial'][_0x33dd96(0x30b)] = !![], _0x3df214[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x223623[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x4c6dd7[_0x33dd96(0xb3a)][_0x33dd96(0x30b)] = !![], _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x229)](), _0x38ac97[_0x33dd96(0x229)](), _0x506034[_0x33dd96(0x229)](), _0x2d69f9[_0x33dd96(0x229)](), _0x10ceb5[_0x33dd96(0x229)](), _0x413ee3[_0x33dd96(0x229)](), _0x4b5e1d[_0x33dd96(0x229)](), _0x218b83[_0x33dd96(0x2bf)]['__init__']();
            var _0x1da7bb = _0x218b83['LoaderManager'][_0x33dd96(0xa22)];
            _0x1da7bb['lh'] = [
                _0x324d7b[_0x33dd96(0x5be)],
                _0x8eba65[_0x33dd96(0x318)]
            ], _0x1da7bb['ls'] = [
                _0x324d7b['HIERARCHY'],
                _0x8eba65[_0x33dd96(0x1073)]
            ], _0x1da7bb['lm'] = [
                _0x324d7b[_0x33dd96(0xf9a)],
                _0xf8a3fc['_parse']
            ], _0x1da7bb[_0x33dd96(0x1074)] = [
                _0x324d7b[_0x33dd96(0x686)],
                _0x4bfb48[_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x1075)] = [
                _0x324d7b[_0x33dd96(0x1076)],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x1077)] = [
                _0x324d7b[_0x33dd96(0x1076)],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x318)]
            ], _0x1da7bb['bmp'] = [
                _0x324d7b['TEXTURE2D'],
                _0x218b83[_0x33dd96(0x2cd)]['_parse']
            ], _0x1da7bb['gif'] = [
                _0x324d7b['TEXTURE2D'],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x1078)] = [
                _0x324d7b[_0x33dd96(0x1076)],
                _0x218b83['Texture2D'][_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x1079)] = [
                _0x324d7b[_0x33dd96(0x1076)],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x107a)] = [
                _0x324d7b['TEXTURE2D'],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x318)]
            ], _0x1da7bb['pvr'] = [
                _0x324d7b[_0x33dd96(0x1076)],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x107b)] = [
                _0x324d7b[_0x33dd96(0x31f)],
                _0x39ae6a['_parse']
            ], _0x1da7bb['lav'] = [
                _0x324d7b[_0x33dd96(0x67c)],
                _0x8954ce[_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x107c)] = [
                _0x324d7b[_0x33dd96(0xca8)],
                _0x38ac97[_0x33dd96(0x318)]
            ], _0x1da7bb[_0x33dd96(0x107d)] = [
                _0x324d7b[_0x33dd96(0xa3b)],
                _0x38ac97[_0x33dd96(0x107e)]
            ], _0x1da7bb['ltcb.ls'] = [
                _0x324d7b[_0x33dd96(0xa3b)],
                _0x38ac97[_0x33dd96(0x107e)]
            ], _0x1da7bb[_0x33dd96(0x107f)] = [
                _0x324d7b[_0x33dd96(0x1076)],
                _0x218b83[_0x33dd96(0x2cd)][_0x33dd96(0x1080)]
            ];
            var _0x4436a3 = _0x218b83[_0x33dd96(0x3b1)]['parserMap'];
            _0x4436a3[_0x324d7b[_0x33dd96(0x5be)]] = _0x324d7b[_0x33dd96(0x1081)], _0x4436a3[_0x324d7b[_0x33dd96(0xf9a)]] = _0x324d7b[_0x33dd96(0x1082)], _0x4436a3[_0x324d7b[_0x33dd96(0x686)]] = _0x324d7b[_0x33dd96(0x1083)], _0x4436a3[_0x324d7b['TEXTURECUBE']] = _0x324d7b[_0x33dd96(0x1084)], _0x4436a3[_0x324d7b[_0x33dd96(0xa3b)]] = _0x324d7b[_0x33dd96(0x1085)], _0x4436a3[_0x324d7b[_0x33dd96(0x1076)]] = _0x324d7b[_0x33dd96(0x1086)], _0x4436a3[_0x324d7b[_0x33dd96(0x31f)]] = _0x324d7b[_0x33dd96(0x1087)], _0x4436a3[_0x324d7b[_0x33dd96(0x67c)]] = _0x324d7b[_0x33dd96(0x1088)], _0x4436a3[_0x324d7b[_0x33dd96(0x1089)]] = _0x324d7b['_loadSimpleAnimator'], _0x324d7b[_0x33dd96(0x1051)]['on'](_0x218b83['Event']['ERROR'], null, _0x324d7b[_0x33dd96(0x108a)]), _0x324d7b[_0x33dd96(0x1052)]['on'](_0x218b83['Event'][_0x33dd96(0x108b)], null, _0x324d7b[_0x33dd96(0x108a)]), _0x324d7b['_innerThirdLevelLoaderManager']['on'](_0x218b83[_0x33dd96(0x5ab)][_0x33dd96(0x108b)], null, _0x324d7b[_0x33dd96(0x108a)]), _0x324d7b['_innerFourthLevelLoaderManager']['on'](_0x218b83['Event'][_0x33dd96(0x108b)], null, _0x324d7b[_0x33dd96(0x108a)]);
        }
        static [_0x5659be(0x105f)]() {
            var _0x1cd5ba = _0x5659be, _0x1f9686 = _0x552b02, _0xf14b2d = _0x5c7b6f;
            _0x218b83[_0x1cd5ba(0x308)][_0x1cd5ba(0x653)] && (_0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x492)] = _0x1f9686[_0x1cd5ba(0x108c)]['_initDataForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x497)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4be)], _0x1f9686['prototype'][_0x1cd5ba(0x6a1)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4bd)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4b0)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x108d)], _0x1f9686['prototype'][_0x1cd5ba(0x6a2)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x108e)], _0x1f9686[_0x1cd5ba(0x108c)]['setNumber'] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4c0)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x498)] = _0x1f9686[_0x1cd5ba(0x108c)]['getNumberForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x49d)] = _0x1f9686['prototype']['setVectorForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x49c)] = _0x1f9686['prototype'][_0x1cd5ba(0x4c4)], _0x1f9686['prototype'][_0x1cd5ba(0x49a)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4c6)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x499)] = _0x1f9686['prototype'][_0x1cd5ba(0x4c5)], _0x1f9686['prototype'][_0x1cd5ba(0x4b1)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4c8)], _0x1f9686[_0x1cd5ba(0x108c)]['getVector3'] = _0x1f9686[_0x1cd5ba(0x108c)]['getVector3ForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x573)] = _0x1f9686['prototype']['setQuaternionForNative'], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x49e)] = _0x1f9686[_0x1cd5ba(0x108c)]['getQuaternionForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x4a0)] = _0x1f9686[_0x1cd5ba(0x108c)]['setMatrix4x4ForNative'], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x49f)] = _0x1f9686['prototype'][_0x1cd5ba(0x4c1)], _0x1f9686['prototype'][_0x1cd5ba(0x574)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4cc)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4a1)] = _0x1f9686[_0x1cd5ba(0x108c)]['getBufferForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x4a2)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4d1)], _0x1f9686['prototype']['getTexture'] = _0x1f9686['prototype']['getTextureForNative'], _0x1f9686['prototype'][_0x1cd5ba(0x108f)] = _0x1f9686['prototype'][_0x1cd5ba(0x4ce)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4a7)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4cd)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x1f0)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4ac)], _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x307)] = _0x1f9686[_0x1cd5ba(0x108c)][_0x1cd5ba(0x4bc)], _0xf14b2d[_0x1cd5ba(0x108c)][_0x1cd5ba(0x7da)] = _0xf14b2d['prototype'][_0x1cd5ba(0x7f9)], _0xf14b2d[_0x1cd5ba(0x108c)][_0x1cd5ba(0x7c5)] = _0xf14b2d[_0x1cd5ba(0x108c)][_0x1cd5ba(0x7fa)], _0xf14b2d[_0x1cd5ba(0x108c)][_0x1cd5ba(0x7c7)] = _0xf14b2d[_0x1cd5ba(0x108c)]['_uniformMatrix4fvForNative'], _0x218b83[_0x1cd5ba(0x7e8)]['uploadShaderUniforms'] = _0x218b83[_0x1cd5ba(0x7e8)][_0x1cd5ba(0x1090)]);
        }
        static [_0x5659be(0x1091)](_0x3415bb, _0x49c825) {
            var _0x21963a = _0x5659be, _0x293cc3;
            _0x293cc3 = _0x3415bb + _0x49c825;
            var _0x1a59e7 = _0x49c825[_0x21963a(0xc5c)](0x0);
            if (_0x1a59e7 === '.') {
                var _0x5dacb3 = _0x293cc3[_0x21963a(0x608)]('/');
                for (var _0x4dc43b = 0x0, _0x40a7d1 = _0x5dacb3[_0x21963a(0x1ff)]; _0x4dc43b < _0x40a7d1; _0x4dc43b++) {
                    if (_0x5dacb3[_0x4dc43b] == '..') {
                        var _0x172006 = _0x4dc43b - 0x1;
                        _0x172006 > 0x0 && _0x5dacb3[_0x172006] !== '..' && (_0x5dacb3[_0x21963a(0x32c)](_0x172006, 0x2), _0x4dc43b -= 0x2);
                    }
                }
                _0x293cc3 = _0x5dacb3[_0x21963a(0x262)]('/');
            }
            return _0x293cc3;
        }
        static [_0x5659be(0x1092)](_0x4f62ca, _0x166af4 = null, _0x306e2e = null) {
            var _0x191c7c = _0x5659be;
            if (_0x306e2e)
                for (var _0xd89165 = 0x0, _0x3e7cf4 = _0x306e2e['length']; _0xd89165 < _0x3e7cf4; _0xd89165++) {
                    var _0x2292eb = _0x218b83[_0x191c7c(0x3b1)][_0x191c7c(0x692)](_0x306e2e[_0xd89165]);
                    _0x2292eb && _0x2292eb[_0x191c7c(0x351)]();
                }
            _0x4f62ca[_0x191c7c(0x1093)](_0x166af4);
        }
        static ['_eventLoadManagerError'](_0x4f3dda) {
            var _0x5f477f = _0x5659be;
            _0x218b83['Laya'][_0x5f477f(0x5bd)][_0x5f477f(0x5aa)](_0x218b83['Event'][_0x5f477f(0x108b)], _0x4f3dda);
        }
        static ['_addHierarchyInnerUrls'](_0x4c6809, _0x3bef52, _0x53a02b, _0x393395, _0x21c9c9, _0x3d15ec, _0x7853d8 = null, _0x3cef1d = null) {
            var _0x5a747b = _0x5659be, _0xe2a73 = _0x324d7b['formatRelativePath'](_0x393395, _0x21c9c9);
            return _0x53a02b && (_0xe2a73 = _0xe2a73 + _0x53a02b), _0x4c6809[_0x5a747b(0x298)]({
                'url': _0xe2a73,
                'type': _0x3d15ec,
                'constructParams': _0x7853d8,
                'propertyParams': _0x3cef1d
            }), _0x3bef52[_0x5a747b(0x298)](_0xe2a73), _0xe2a73;
        }
        static ['_getSprite3DHierarchyInnerUrls'](_0x2cc90, _0x2fa081, _0x396fde, _0x3e9fe0, _0x12db03, _0xccdc86, _0x5c3436, _0x48c5db) {
            var _0x14153f = _0x5659be, _0xe47aed, _0x30afa6, _0x3f11b9 = _0x2cc90[_0x14153f(0x67e)];
            switch (_0x2cc90[_0x14153f(0x2ae)]) {
            case _0x14153f(0x21f):
                var _0x1f3c4a = _0x3f11b9[_0x14153f(0xb2b)];
                for (_0xe47aed = 0x0, _0x30afa6 = _0x1f3c4a['length']; _0xe47aed < _0x30afa6; _0xe47aed++) {
                    var _0x56b626 = _0x1f3c4a[_0xe47aed];
                    if (_0x56b626[_0x14153f(0x691)])
                        _0x56b626[_0x14153f(0x691)] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x56b626[_0x14153f(0x691)], _0x324d7b['TEXTURE2D'], _0x56b626[_0x14153f(0x1095)], _0x56b626[_0x14153f(0x1096)]);
                    else {
                        var _0x46f737 = _0x56b626[_0x14153f(0x462)];
                        _0x46f737[_0x14153f(0x691)] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x46f737[_0x14153f(0x691)], _0x324d7b[_0x14153f(0x1076)], _0x46f737[_0x14153f(0x1095)], _0x46f737['propertyParams']);
                        var _0x308ac6 = _0x56b626[_0x14153f(0x87e)];
                        if (_0x308ac6)
                            _0x308ac6[_0x14153f(0x691)] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x308ac6['path'], _0x324d7b[_0x14153f(0x1076)], _0x308ac6['constructParams'], _0x308ac6[_0x14153f(0x1096)]);
                    }
                }
                var _0x44ab13 = _0x3f11b9[_0x14153f(0xafd)];
                _0x44ab13 && (_0x3f11b9['reflection'] = _0x324d7b[_0x14153f(0x1094)](_0x3e9fe0, _0xccdc86, _0x5c3436, _0x48c5db, _0x44ab13, _0x324d7b[_0x14153f(0xca8)]));
                var _0x21cd91 = _0x3f11b9[_0x14153f(0xb01)];
                _0x21cd91 && (_0x3f11b9[_0x14153f(0xb01)] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x21cd91, _0x324d7b['TEXTURECUBEBIN']));
                if (_0x3f11b9['sky']) {
                    var _0x2ad8fa = _0x3f11b9[_0x14153f(0xc2e)][_0x14153f(0x8d6)];
                    _0x2ad8fa && (_0x2ad8fa['path'] = _0x324d7b[_0x14153f(0x1094)](_0x396fde, _0xccdc86, _0x5c3436, _0x48c5db, _0x2ad8fa['path'], _0x324d7b[_0x14153f(0x686)]));
                }
                break;
            case _0x14153f(0x5ef):
                var _0x8b4e92 = _0x3f11b9[_0x14153f(0x1097)];
                _0x8b4e92 && (_0x8b4e92[_0x14153f(0x691)] = _0x324d7b['_addHierarchyInnerUrls'](_0x396fde, _0xccdc86, _0x5c3436, _0x48c5db, _0x8b4e92[_0x14153f(0x691)], _0x324d7b['MATERIAL']));
                break;
            case _0x14153f(0x101e):
            case _0x14153f(0x101b):
            case _0x14153f(0x101c):
            case 'SimpleSkinnedMeshSprite3D':
                var _0x1c2c09 = _0x3f11b9[_0x14153f(0xcef)];
                _0x1c2c09 && (_0x3f11b9[_0x14153f(0xcef)] = _0x324d7b[_0x14153f(0x1094)](_0x2fa081, _0xccdc86, _0x5c3436, _0x48c5db, _0x1c2c09, _0x324d7b[_0x14153f(0xf9a)]));
                var _0x30a220 = _0x3f11b9[_0x14153f(0xcf2)];
                if (_0x30a220) {
                    for (_0xe47aed = 0x0, _0x30afa6 = _0x30a220['length']; _0xe47aed < _0x30afa6; _0xe47aed++)
                        _0x30a220[_0xe47aed][_0x14153f(0x691)] = _0x324d7b['_addHierarchyInnerUrls'](_0x396fde, _0xccdc86, _0x5c3436, _0x48c5db, _0x30a220[_0xe47aed][_0x14153f(0x691)], _0x324d7b['MATERIAL']);
                }
                if (_0x2cc90[_0x14153f(0x2ae)] == _0x14153f(0x1098)) {
                    if (_0x3f11b9[_0x14153f(0x1099)])
                        _0x3f11b9['animatorTexture'] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x3f11b9[_0x14153f(0x1099)], _0x324d7b[_0x14153f(0x1089)]);
                }
                break;
            case _0x14153f(0x101d):
                if (_0x3f11b9[_0x14153f(0xee3)]) {
                    var _0x1564f2 = _0x3f11b9[_0x14153f(0x109a)][_0x14153f(0xee0)], _0x120729 = _0x1564f2['mesh'], _0x1224bf = _0x1564f2[_0x14153f(0x8d6)];
                    _0x120729 && (_0x1564f2[_0x14153f(0x8d7)] = _0x324d7b[_0x14153f(0x1094)](_0x2fa081, _0xccdc86, _0x5c3436, _0x48c5db, _0x120729, _0x324d7b['MESH'])), _0x1224bf && (_0x1564f2[_0x14153f(0x8d6)] = _0x324d7b[_0x14153f(0x1094)](_0x396fde, _0xccdc86, _0x5c3436, _0x48c5db, _0x1224bf, _0x324d7b[_0x14153f(0x686)]));
                } else {
                    var _0x28cf24 = _0x3f11b9['meshPath'];
                    _0x28cf24 && (_0x3f11b9['meshPath'] = _0x324d7b[_0x14153f(0x1094)](_0x2fa081, _0xccdc86, _0x5c3436, _0x48c5db, _0x28cf24, _0x324d7b[_0x14153f(0xf9a)])), _0x3f11b9['material'][_0x14153f(0x691)] = _0x324d7b[_0x14153f(0x1094)](_0x396fde, _0xccdc86, _0x5c3436, _0x48c5db, _0x3f11b9[_0x14153f(0x8d6)]['path'], _0x324d7b[_0x14153f(0x686)]);
                }
                break;
            case _0x14153f(0x109b):
                _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x3f11b9['dataPath'], _0x324d7b[_0x14153f(0x109c)]);
                break;
            case _0x14153f(0x101f):
                var _0x43c50d = _0x3f11b9['reflection'];
                _0x43c50d && (_0x3f11b9['reflection'] = _0x324d7b[_0x14153f(0x1094)](_0x2fa081, _0xccdc86, _0x5c3436, _0x48c5db, _0x43c50d, _0x324d7b[_0x14153f(0xa3b)]));
                break;
            }
            var _0x3a6bd6 = _0x2cc90['components'];
            if (_0x3a6bd6)
                for (var _0xf3aa17 = 0x0, _0x25e166 = _0x3a6bd6[_0x14153f(0x1ff)]; _0xf3aa17 < _0x25e166; _0xf3aa17++) {
                    var _0x3d2bea = _0x3a6bd6[_0xf3aa17];
                    switch (_0x3d2bea[_0x14153f(0x2ae)]) {
                    case _0x14153f(0x1070):
                        var _0x11e2c6 = _0x3d2bea[_0x14153f(0x109d)], _0x288dc5 = _0x3d2bea[_0x14153f(0x3ab)];
                        _0x288dc5 && (_0x288dc5[_0x14153f(0x691)] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x288dc5[_0x14153f(0x691)], _0x324d7b['AVATAR']));
                        var _0x2442e5 = _0x3d2bea['clipPaths'];
                        if (!_0x2442e5) {
                            var _0x2ea275 = _0x3d2bea[_0x14153f(0x3ad)];
                            for (_0xe47aed = 0x0; _0xe47aed < _0x2ea275[_0x14153f(0x1ff)]; _0xe47aed++) {
                                var _0x2fcc0b = _0x2ea275[_0xe47aed][_0x14153f(0x3af)];
                                for (var _0x483d12 = 0x0, _0x13ba67 = _0x2fcc0b[_0x14153f(0x1ff)]; _0x483d12 < _0x13ba67; _0x483d12++) {
                                    var _0x34a0f3 = _0x2fcc0b[_0x483d12]['clipPath'];
                                    _0x34a0f3 && (_0x2fcc0b[_0x483d12][_0x14153f(0x3b0)] = _0x324d7b[_0x14153f(0x1094)](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x34a0f3, _0x324d7b[_0x14153f(0x31f)]));
                                }
                            }
                        } else {
                            for (_0xe47aed = 0x0, _0x30afa6 = _0x2442e5[_0x14153f(0x1ff)]; _0xe47aed < _0x30afa6; _0xe47aed++)
                                _0x2442e5[_0xe47aed] = _0x324d7b['_addHierarchyInnerUrls'](_0x12db03, _0xccdc86, _0x5c3436, _0x48c5db, _0x2442e5[_0xe47aed], _0x324d7b[_0x14153f(0x31f)]);
                        }
                        break;
                    case 'PhysicsCollider':
                    case _0x14153f(0x22d):
                    case _0x14153f(0x22c):
                        var _0x4e7c9e = _0x3d2bea[_0x14153f(0x109e)];
                        for (_0xe47aed = 0x0; _0xe47aed < _0x4e7c9e[_0x14153f(0x1ff)]; _0xe47aed++) {
                            var _0x4a21b4 = _0x4e7c9e[_0xe47aed];
                            if (_0x4a21b4[_0x14153f(0x2ae)] === _0x14153f(0x109f)) {
                                var _0x120729 = _0x4a21b4[_0x14153f(0x8d7)];
                                _0x120729 && (_0x4a21b4[_0x14153f(0x8d7)] = _0x324d7b[_0x14153f(0x1094)](_0x2fa081, _0xccdc86, _0x5c3436, _0x48c5db, _0x120729, _0x324d7b[_0x14153f(0xf9a)]));
                            }
                        }
                        break;
                    }
                }
            var _0x5e258d = _0x2cc90[_0x14153f(0x67f)];
            for (_0xe47aed = 0x0, _0x30afa6 = _0x5e258d[_0x14153f(0x1ff)]; _0xe47aed < _0x30afa6; _0xe47aed++)
                _0x324d7b['_getSprite3DHierarchyInnerUrls'](_0x5e258d[_0xe47aed], _0x2fa081, _0x396fde, _0x3e9fe0, _0x12db03, _0xccdc86, _0x5c3436, _0x48c5db);
        }
        static ['_loadHierarchy'](_0x870da5) {
            var _0x39c10c = _0x5659be;
            _0x870da5[_0x39c10c(0x10a0)] = _0x870da5[_0x39c10c(0x2ae)], _0x870da5['on'](_0x218b83[_0x39c10c(0x5ab)][_0x39c10c(0x10a1)], null, _0x324d7b['_onHierarchylhLoaded'], [_0x870da5]), _0x870da5[_0x39c10c(0x31c)](_0x870da5['url'], _0x218b83[_0x39c10c(0x3b1)]['JSON'], ![], null, !![]);
        }
        static [_0x5659be(0x10a2)](_0x4d7f4b, _0x5d83d9) {
            var _0x34e6d1 = _0x5659be, _0xba8da5 = _0x4d7f4b[_0x34e6d1(0xbe0)], _0x192a2b = _0x108d81[_0x34e6d1(0x2ea)](_0xba8da5), _0x373d36 = _0x218b83[_0x34e6d1(0x5c2)][_0x34e6d1(0x10a3)](_0xba8da5), _0x1cf8f8 = [], _0x595e72 = [], _0x71a4f9 = [], _0x2f5612 = [], _0x41fb52 = [];
            _0x324d7b['_getSprite3DHierarchyInnerUrls'](_0x5d83d9[_0x34e6d1(0x30d)], _0x1cf8f8, _0x595e72, _0x71a4f9, _0x2f5612, _0x41fb52, _0x192a2b, _0x373d36);
            var _0x542f8b = _0x1cf8f8[_0x34e6d1(0x1ff)] + _0x595e72[_0x34e6d1(0x1ff)] + _0x2f5612[_0x34e6d1(0x1ff)], _0x30e2e8 = _0x542f8b + 0x1, _0x6b10c2 = 0x1 / _0x30e2e8;
            _0x324d7b['_onProcessChange'](_0x4d7f4b, 0x0, _0x6b10c2, 0x1);
            if (_0x2f5612[_0x34e6d1(0x1ff)] > 0x0) {
                var _0x11f8b1 = _0x542f8b / _0x30e2e8, _0x343bef = _0x218b83['Handler'][_0x34e6d1(0x31e)](null, _0x324d7b[_0x34e6d1(0x10a4)], [
                        _0x4d7f4b,
                        _0x6b10c2,
                        _0x11f8b1
                    ], ![]);
                _0x324d7b[_0x34e6d1(0x1053)][_0x34e6d1(0x5d2)](_0x2f5612, ![], _0x218b83[_0x34e6d1(0x10a5)][_0x34e6d1(0x31e)](null, _0x324d7b[_0x34e6d1(0x10a6)], [
                    _0x4d7f4b,
                    _0x343bef,
                    _0x5d83d9,
                    _0x41fb52,
                    _0x1cf8f8,
                    _0x595e72,
                    _0x71a4f9,
                    _0x6b10c2 + _0x11f8b1 * _0x2f5612[_0x34e6d1(0x1ff)],
                    _0x11f8b1
                ]), _0x343bef, null, null, null, 0x1, !![]);
            } else
                _0x324d7b['_onHierarchyInnerForthLevResouLoaded'](_0x4d7f4b, null, _0x5d83d9, _0x41fb52, _0x1cf8f8, _0x595e72, _0x71a4f9, _0x6b10c2, _0x11f8b1);
        }
        static [_0x5659be(0x10a6)](_0x4a34f2, _0x5192a0, _0x33a252, _0x23423c, _0x34f147, _0x2abc12, _0x26c234, _0x2e4c29, _0x24a84c) {
            var _0x5e39f9 = _0x5659be;
            _0x5192a0 && _0x5192a0[_0x5e39f9(0x54c)]();
            if (_0x26c234[_0x5e39f9(0x1ff)] > 0x0) {
                var _0x2d49a7 = _0x218b83[_0x5e39f9(0x10a5)][_0x5e39f9(0x31e)](null, _0x324d7b['_onProcessChange'], [
                    _0x4a34f2,
                    _0x2e4c29,
                    _0x24a84c
                ], ![]);
                _0x324d7b[_0x5e39f9(0x10a7)][_0x5e39f9(0x5d2)](_0x26c234, ![], _0x218b83[_0x5e39f9(0x10a5)][_0x5e39f9(0x31e)](null, _0x324d7b[_0x5e39f9(0x10a8)], [
                    _0x4a34f2,
                    _0x2d49a7,
                    _0x33a252,
                    _0x23423c,
                    _0x34f147,
                    _0x2abc12,
                    _0x2e4c29 + _0x24a84c * _0x2abc12[_0x5e39f9(0x1ff)],
                    _0x24a84c
                ]), _0x5192a0, null, null, null, 0x1, !![]);
            } else
                _0x324d7b[_0x5e39f9(0x10a8)](_0x4a34f2, null, _0x33a252, _0x23423c, _0x34f147, _0x2abc12, _0x2e4c29, _0x24a84c);
        }
        static [_0x5659be(0x10a8)](_0x2d746e, _0x11443c, _0x338ab2, _0x28c876, _0x14e8e5, _0x22348f, _0x2f341e, _0x4825b8) {
            var _0x2afe32 = _0x5659be;
            _0x11443c && _0x11443c['recover']();
            if (_0x22348f[_0x2afe32(0x1ff)] > 0x0) {
                var _0x7afca8 = _0x218b83['Handler'][_0x2afe32(0x31e)](null, _0x324d7b[_0x2afe32(0x10a4)], [
                    _0x2d746e,
                    _0x2f341e,
                    _0x4825b8
                ], ![]);
                _0x324d7b[_0x2afe32(0x1052)][_0x2afe32(0x5d2)](_0x22348f, ![], _0x218b83[_0x2afe32(0x10a5)]['create'](null, _0x324d7b[_0x2afe32(0x10a9)], [
                    _0x2d746e,
                    _0x7afca8,
                    _0x338ab2,
                    _0x28c876,
                    _0x14e8e5,
                    _0x2f341e + _0x4825b8 * _0x22348f[_0x2afe32(0x1ff)],
                    _0x4825b8
                ]), _0x11443c, null, null, null, 0x1, !![]);
            } else
                _0x324d7b[_0x2afe32(0x10a9)](_0x2d746e, null, _0x338ab2, _0x28c876, _0x14e8e5, _0x2f341e, _0x4825b8);
        }
        static [_0x5659be(0x10a9)](_0x48436c, _0x3247d4, _0x11a203, _0x521c01, _0x3fb9e8, _0x3b46f1, _0x3545b0) {
            var _0x100b77 = _0x5659be;
            _0x3247d4 && _0x3247d4['recover']();
            if (_0x3fb9e8[_0x100b77(0x1ff)] > 0x0) {
                var _0x4e92bc = _0x218b83[_0x100b77(0x10a5)][_0x100b77(0x31e)](null, _0x324d7b['_onProcessChange'], [
                    _0x48436c,
                    _0x3b46f1,
                    _0x3545b0
                ], ![]);
                _0x324d7b[_0x100b77(0x1051)][_0x100b77(0x5d2)](_0x3fb9e8, ![], _0x218b83['Handler'][_0x100b77(0x31e)](null, _0x324d7b[_0x100b77(0x10aa)], [
                    _0x48436c,
                    _0x4e92bc,
                    _0x11a203,
                    _0x521c01
                ]), _0x3247d4, null, null, null, 0x1, !![]);
            } else
                _0x324d7b[_0x100b77(0x10aa)](_0x48436c, null, _0x11a203, _0x521c01);
        }
        static [_0x5659be(0x10aa)](_0x53ad74, _0x55c145, _0x52994b, _0x218fc1) {
            var _0x235037 = _0x5659be;
            _0x55c145 && _0x55c145[_0x235037(0x54c)](), _0x53ad74[_0x235037(0x10ab)] = _0x53ad74['_createCache'];
            var _0x5f49b2 = _0x52994b[_0x235037(0x30d)][_0x235037(0x2ae)] === _0x235037(0x21f) ? _0x8eba65[_0x235037(0x1073)](_0x52994b, _0x53ad74['_propertyParams'], _0x53ad74['_constructParams']) : _0x8eba65[_0x235037(0x318)](_0x52994b, _0x53ad74[_0x235037(0x10ac)], _0x53ad74[_0x235037(0x10ad)]);
            _0x324d7b[_0x235037(0x1092)](_0x53ad74, _0x5f49b2, _0x218fc1);
        }
        static [_0x5659be(0x1082)](_0x5b99b5) {
            var _0x107fae = _0x5659be;
            _0x5b99b5['on'](_0x218b83[_0x107fae(0x5ab)][_0x107fae(0x10a1)], null, _0x324d7b[_0x107fae(0x10ae)], [_0x5b99b5]), _0x5b99b5[_0x107fae(0x31c)](_0x5b99b5[_0x107fae(0xbe0)], _0x218b83['Loader'][_0x107fae(0x10af)], ![], null, !![]);
        }
        static [_0x5659be(0x10ae)](_0x349937, _0x3cc741) {
            var _0x1d2035 = _0x5659be;
            _0x349937[_0x1d2035(0x10ab)] = _0x349937[_0x1d2035(0x10b0)];
            var _0x2260e2 = _0xf8a3fc[_0x1d2035(0x318)](_0x3cc741, _0x349937['_propertyParams'], _0x349937[_0x1d2035(0x10ad)]);
            _0x324d7b[_0x1d2035(0x1092)](_0x349937, _0x2260e2);
        }
        static [_0x5659be(0x1083)](_0x4b5d06) {
            var _0x5bbcd7 = _0x5659be;
            _0x4b5d06['on'](_0x218b83[_0x5bbcd7(0x5ab)]['LOADED'], null, _0x324d7b[_0x5bbcd7(0x10b1)], [_0x4b5d06]), _0x4b5d06[_0x5bbcd7(0x31c)](_0x4b5d06[_0x5bbcd7(0xbe0)], _0x218b83[_0x5bbcd7(0x3b1)][_0x5bbcd7(0x10b2)], ![], null, !![]);
        }
        static [_0x5659be(0x10b1)](_0x15da4f, _0x5124cb) {
            var _0x31fe7f = _0x5659be, _0x4d2cd0 = _0x15da4f['url'], _0x1dfc26 = _0x108d81[_0x31fe7f(0x2ea)](_0x4d2cd0), _0x114f63 = _0x218b83['URL'][_0x31fe7f(0x10a3)](_0x4d2cd0), _0x28d728 = [], _0x4cf757 = [], _0x5bc0e7 = _0x5124cb[_0x31fe7f(0x10b3)], _0x3df3ed, _0x5a0fd4 = _0x5124cb[_0x31fe7f(0x679)];
            switch (_0x5a0fd4) {
            case _0x31fe7f(0x68c):
            case _0x31fe7f(0x68d):
            case _0x31fe7f(0x10b4):
                var _0x4ceb09, _0x73f6db, _0xfb1702 = _0x5124cb[_0x31fe7f(0x67e)]['textures'];
                if (_0xfb1702)
                    for (_0x4ceb09 = 0x0, _0x73f6db = _0xfb1702['length']; _0x4ceb09 < _0x73f6db; _0x4ceb09++) {
                        var _0x2137fa = _0xfb1702[_0x4ceb09], _0x3eb450 = _0x2137fa[_0x31fe7f(0x691)];
                        _0x3eb450 && (_0x3df3ed = _0x324d7b['formatRelativePath'](_0x114f63, _0x3eb450), _0x1dfc26 && (_0x3df3ed = _0x3df3ed + _0x1dfc26), _0x28d728[_0x31fe7f(0x298)]({
                            'url': _0x3df3ed,
                            'constructParams': _0x2137fa[_0x31fe7f(0x1095)],
                            'propertyParams': _0x2137fa[_0x31fe7f(0x1096)]
                        }), _0x4cf757[_0x31fe7f(0x298)](_0x3df3ed), _0x2137fa[_0x31fe7f(0x691)] = _0x3df3ed);
                    }
                break;
            default:
                throw new Error('Laya3D:unkonwn\x20version.');
            }
            var _0x163527 = _0x28d728[_0x31fe7f(0x1ff)], _0x5b6d4c = _0x163527 + 0x1, _0x415bf6 = 0x1 / _0x5b6d4c;
            _0x324d7b['_onProcessChange'](_0x15da4f, 0x0, _0x415bf6, 0x1);
            if (_0x163527 > 0x0) {
                var _0x1d0e08 = _0x218b83[_0x31fe7f(0x10a5)][_0x31fe7f(0x31e)](null, _0x324d7b[_0x31fe7f(0x10a4)], [
                    _0x15da4f,
                    _0x415bf6,
                    _0x163527 / _0x5b6d4c
                ], ![]);
                _0x324d7b[_0x31fe7f(0x1053)][_0x31fe7f(0x5d2)](_0x28d728, ![], _0x218b83['Handler']['create'](null, _0x324d7b['_onMateialTexturesLoaded'], [
                    _0x15da4f,
                    _0x1d0e08,
                    _0x5124cb,
                    _0x4cf757
                ]), _0x1d0e08, null, null, null, 0x1, !![]);
            } else
                _0x324d7b['_onMateialTexturesLoaded'](_0x15da4f, null, _0x5124cb, null);
        }
        static ['_onMateialTexturesLoaded'](_0x4e9d0b, _0x19cafa, _0x4e2a2d, _0x43a970) {
            var _0x2ead81 = _0x5659be;
            _0x4e9d0b[_0x2ead81(0x10ab)] = _0x4e9d0b[_0x2ead81(0x10b0)];
            var _0x54a875 = _0x4bfb48[_0x2ead81(0x318)](_0x4e2a2d, _0x4e9d0b[_0x2ead81(0x10ac)], _0x4e9d0b['_constructParams']);
            _0x324d7b[_0x2ead81(0x1092)](_0x4e9d0b, _0x54a875, _0x43a970), _0x19cafa && _0x19cafa[_0x2ead81(0x54c)]();
        }
        static [_0x5659be(0x1088)](_0x226ec8) {
            var _0x5cdc32 = _0x5659be;
            _0x226ec8['on'](_0x218b83[_0x5cdc32(0x5ab)][_0x5cdc32(0x10a1)], null, function (_0x50b636) {
                var _0x2eac55 = _0x5cdc32;
                _0x226ec8[_0x2eac55(0x10ab)] = _0x226ec8['_createCache'];
                var _0x2c057c = _0x8954ce['_parse'](_0x50b636, _0x226ec8[_0x2eac55(0x10ac)], _0x226ec8[_0x2eac55(0x10ad)]);
                _0x324d7b['_endLoad'](_0x226ec8, _0x2c057c);
            }), _0x226ec8[_0x5cdc32(0x31c)](_0x226ec8[_0x5cdc32(0xbe0)], _0x218b83[_0x5cdc32(0x3b1)]['JSON'], ![], null, !![]);
        }
        static [_0x5659be(0x10b5)](_0xb71a) {
            var _0x254e85 = _0x5659be;
            _0xb71a['on'](_0x218b83[_0x254e85(0x5ab)][_0x254e85(0x10a1)], null, function (_0x162f53) {
                var _0x39a2c5 = _0x254e85;
                _0xb71a[_0x39a2c5(0x10ab)] = _0xb71a['_createCache'];
                var _0x3d6dd2 = _0x218b83[_0x39a2c5(0x2cd)][_0x39a2c5(0x1080)](_0x162f53, _0xb71a[_0x39a2c5(0x10ac)], _0xb71a[_0x39a2c5(0x10ad)]);
                _0x324d7b[_0x39a2c5(0x1092)](_0xb71a, _0x3d6dd2);
            }), _0xb71a[_0x254e85(0x31c)](_0xb71a[_0x254e85(0xbe0)], _0x218b83[_0x254e85(0x3b1)][_0x254e85(0x10af)], ![], null, !![]);
        }
        static [_0x5659be(0x1087)](_0x5d3b6f) {
            var _0x52c688 = _0x5659be;
            _0x5d3b6f['on'](_0x218b83[_0x52c688(0x5ab)][_0x52c688(0x10a1)], null, function (_0x26648a) {
                var _0x33318c = _0x52c688;
                _0x5d3b6f[_0x33318c(0x10ab)] = _0x5d3b6f[_0x33318c(0x10b0)];
                var _0x507abf = _0x39ae6a[_0x33318c(0x318)](_0x26648a);
                _0x324d7b[_0x33318c(0x1092)](_0x5d3b6f, _0x507abf);
            }), _0x5d3b6f['load'](_0x5d3b6f[_0x52c688(0xbe0)], _0x218b83['Loader'][_0x52c688(0x10af)], ![], null, !![]);
        }
        static [_0x5659be(0x1086)](_0xaf98c2) {
            var _0x216e4d = _0x5659be, _0x2b2e4a = _0xaf98c2[_0x216e4d(0xbe0)], _0x4c28c7 = _0x2b2e4a[_0x216e4d(0x10b6)]('.') + 0x1, _0x27b59d = _0x2b2e4a[_0x216e4d(0x384)]('?'), _0x3c9a3c = _0x27b59d == -0x1 ? _0x2b2e4a['length'] : _0x27b59d, _0x2db8e4 = _0x2b2e4a[_0x216e4d(0x2eb)](_0x4c28c7, _0x3c9a3c - _0x4c28c7), _0x53516e;
            switch (_0x2db8e4) {
            case _0x216e4d(0x1075):
            case _0x216e4d(0x1077):
            case _0x216e4d(0x10b7):
            case _0x216e4d(0x10b8):
            case _0x216e4d(0x1078):
                _0x53516e = _0x216e4d(0x10b9);
                break;
            case _0x216e4d(0x1079):
                _0x53516e = _0x218b83[_0x216e4d(0x3b1)][_0x216e4d(0x10af)];
                break;
            case _0x216e4d(0x107a):
                _0x53516e = _0x218b83[_0x216e4d(0x3b1)][_0x216e4d(0x10af)], !_0xaf98c2[_0x216e4d(0x10ad)] && (_0xaf98c2[_0x216e4d(0x10ad)] = []), _0xaf98c2[_0x216e4d(0x10ad)][0x2] = _0x218b83[_0x216e4d(0x2c6)][_0x216e4d(0x10ba)];
                break;
            case 'pvr':
                _0x53516e = _0x218b83['Loader'][_0x216e4d(0x10af)], !_0xaf98c2[_0x216e4d(0x10ad)] && (_0xaf98c2[_0x216e4d(0x10ad)] = []), _0xaf98c2[_0x216e4d(0x10ac)][0x2] = _0x218b83[_0x216e4d(0x2c6)][_0x216e4d(0x10bb)];
                break;
            }
            _0xaf98c2['on'](_0x218b83[_0x216e4d(0x5ab)][_0x216e4d(0x10a1)], null, function (_0x46e780) {
                var _0xf057ea = _0x216e4d;
                _0xaf98c2['_cache'] = _0xaf98c2['_createCache'];
                var _0x549523 = _0x218b83['Texture2D'][_0xf057ea(0x318)](_0x46e780, _0xaf98c2[_0xf057ea(0x10ac)], _0xaf98c2[_0xf057ea(0x10ad)]);
                _0x324d7b[_0xf057ea(0x1092)](_0xaf98c2, _0x549523);
            }), _0xaf98c2[_0x216e4d(0x31c)](_0xaf98c2['url'], _0x53516e, ![], null, !![]);
        }
        static [_0x5659be(0x1084)](_0x842fcf) {
            var _0x544d71 = _0x5659be;
            _0x842fcf['on'](_0x218b83[_0x544d71(0x5ab)][_0x544d71(0x10a1)], null, _0x324d7b[_0x544d71(0x10bc)], [_0x842fcf]), _0x842fcf[_0x544d71(0x31c)](_0x842fcf[_0x544d71(0xbe0)], _0x218b83[_0x544d71(0x3b1)]['JSON'], ![], null, !![]);
        }
        static [_0x5659be(0x1085)](_0x5c97f8) {
            var _0xe0e33d = _0x5659be;
            _0x5c97f8['on'](_0x218b83[_0xe0e33d(0x5ab)][_0xe0e33d(0x10a1)], null, _0x5cf082 => {
                var _0x599998 = _0xe0e33d;
                _0x5c97f8[_0x599998(0x10ab)] = _0x5c97f8[_0x599998(0x10b0)];
                var _0x337961 = new _0x218b83['Byte'](_0x5cf082), _0x93d4a5 = _0x337961['readUTFString']();
                if (_0x93d4a5 !== 'LAYATEXTURECUBE:0000')
                    throw _0x599998(0x10bd);
                var _0x372007 = _0x337961[_0x599998(0x10be)](), _0x3677ae = _0x337961[_0x599998(0x2af)](), _0x4c3c32 = _0x337961['readUint16'](), _0x43e21b = _0x337961[_0x599998(0x2af)](), _0x3d405c = _0x337961['getUint8'](), _0x3edb19 = _0x337961[_0x599998(0x2af)](), _0x76c45b = _0x337961['getUint8'](), _0x3e5c22 = new _0x38ac97(_0x4c3c32, _0x372007, _0x3677ae > 0x1 ? !![] : ![]);
                _0x3e5c22['filterMode'] = _0x43e21b, _0x3e5c22[_0x599998(0x2d0)] = _0x3d405c, _0x3e5c22[_0x599998(0x2d2)] = _0x3edb19, _0x3e5c22['anisoLevel'] = _0x76c45b;
                var _0x325bea = _0x337961[_0x599998(0x29a)], _0x5a43b1 = _0x4c3c32;
                for (var _0x265491 = 0x0; _0x265491 < _0x3677ae; _0x265491++) {
                    var _0x3f7e80 = new Array(0x6), _0x34d11d = _0x5a43b1 * _0x5a43b1 * _0x3e5c22[_0x599998(0xa35)]();
                    for (var _0x4b840b = 0x0; _0x4b840b < 0x6; _0x4b840b++) {
                        _0x3f7e80[_0x4b840b] = new Uint8Array(_0x5cf082, _0x325bea, _0x34d11d), _0x325bea += _0x34d11d;
                    }
                    _0x3e5c22[_0x599998(0xa20)](_0x3f7e80, _0x265491), _0x5a43b1 /= 0x2;
                }
                _0x324d7b[_0x599998(0x1092)](_0x5c97f8, _0x3e5c22);
            }), _0x5c97f8['load'](_0x5c97f8['url'], _0x218b83[_0xe0e33d(0x3b1)][_0xe0e33d(0x10af)], ![], null, !![]);
        }
        static [_0x5659be(0x10bc)](_0x303355, _0x3223bb) {
            var _0x1dd953 = _0x5659be, _0x1e3dde = _0x218b83['URL'][_0x1dd953(0x10a3)](_0x303355[_0x1dd953(0xbe0)]), _0x68815d = [
                    _0x324d7b[_0x1dd953(0x1091)](_0x1e3dde, _0x3223bb[_0x1dd953(0x10bf)]),
                    _0x324d7b[_0x1dd953(0x1091)](_0x1e3dde, _0x3223bb['back']),
                    _0x324d7b['formatRelativePath'](_0x1e3dde, _0x3223bb['left']),
                    _0x324d7b[_0x1dd953(0x1091)](_0x1e3dde, _0x3223bb[_0x1dd953(0x8b3)]),
                    _0x324d7b['formatRelativePath'](_0x1e3dde, _0x3223bb['up']),
                    _0x324d7b[_0x1dd953(0x1091)](_0x1e3dde, _0x3223bb[_0x1dd953(0x10c0)])
                ], _0x5848a1 = 0x1 / 0x7;
            _0x324d7b[_0x1dd953(0x10a4)](_0x303355, 0x0, _0x5848a1, 0x1);
            var _0x5d9332 = _0x218b83[_0x1dd953(0x10a5)][_0x1dd953(0x31e)](null, _0x324d7b[_0x1dd953(0x10a4)], [
                _0x303355,
                _0x5848a1,
                0x6 / 0x7
            ], ![]);
            _0x324d7b['_innerFourthLevelLoaderManager'][_0x1dd953(0x31c)](_0x68815d, _0x218b83[_0x1dd953(0x10a5)][_0x1dd953(0x31e)](null, _0x324d7b[_0x1dd953(0x10c1)], [
                _0x303355,
                _0x68815d,
                _0x5d9332
            ]), _0x5d9332, 'nativeimage');
        }
        static [_0x5659be(0x10c1)](_0x5a028a, _0x540418, _0x269ba6) {
            var _0x17d52e = _0x5659be, _0x5d8513 = new Array(0x6);
            for (var _0xc56f23 = 0x0; _0xc56f23 < 0x6; _0xc56f23++)
                _0x5d8513[_0xc56f23] = _0x218b83[_0x17d52e(0x3b1)][_0x17d52e(0x692)](_0x540418[_0xc56f23]);
            _0x5a028a[_0x17d52e(0x10ab)] = _0x5a028a['_createCache'];
            var _0x4b703d = _0x38ac97[_0x17d52e(0x318)](_0x5d8513, _0x5a028a[_0x17d52e(0x10ac)], _0x5a028a[_0x17d52e(0x10ad)]);
            _0x269ba6[_0x17d52e(0x54c)]();
            for (_0xc56f23 = 0x0; _0xc56f23 < 0x6; _0xc56f23++)
                _0x218b83[_0x17d52e(0x3b1)][_0x17d52e(0x5d4)](_0x540418[_0xc56f23]);
            _0x324d7b[_0x17d52e(0x1092)](_0x5a028a, _0x4b703d);
        }
        static [_0x5659be(0x10a4)](_0x290283, _0x2011d8, _0x48b2f9, _0x18db43) {
            var _0x23f1b0 = _0x5659be;
            _0x18db43 = _0x2011d8 + _0x18db43 * _0x48b2f9, _0x18db43 < 0x1 && _0x290283[_0x23f1b0(0x5aa)](_0x218b83['Event'][_0x23f1b0(0x10c2)], _0x18db43 * 0x2 / 0x3 + 0x1 / 0x3);
        }
        static [_0x5659be(0x955)](_0x5f14ff, _0x2a5bc6, _0x37fe61 = null, _0x994200 = null) {
            var _0x50a153 = _0x5659be;
            if (_0x324d7b[_0x50a153(0x10c3)]) {
                _0x994200 && _0x994200['run']();
                return;
            }
            _0x324d7b[_0x50a153(0x10c3)] = !![], _0x37fe61 && _0x37fe61[_0x50a153(0x1f0)](_0x528624[_0x50a153(0x243)]), _0x37fe61 = _0x528624['_config'], _0x4b5e1d['debugFrustumCulling'] = _0x37fe61[_0x50a153(0x23e)], _0x324d7b[_0x50a153(0x237)] = _0x37fe61[_0x50a153(0x237)], _0x55cc88[_0x50a153(0x254)] = _0x37fe61[_0x50a153(0x254)], _0x55cc88[_0x50a153(0x256)] = _0x37fe61[_0x50a153(0x256)], _0x55cc88[_0x50a153(0x255)] = _0x37fe61['octreeInitialCenter'], _0x55cc88[_0x50a153(0x23c)] = _0x37fe61[_0x50a153(0x23c)], _0x55cc88['octreeLooseness'] = _0x37fe61[_0x50a153(0x23d)];
            var _0x282820 = window[_0x50a153(0x223)];
            _0x282820 == null || _0x37fe61[_0x50a153(0x244)] ? (_0x40d5e5[_0x50a153(0x233)] = ![], _0x324d7b[_0x50a153(0x229)](_0x5f14ff, _0x2a5bc6, _0x37fe61), _0x994200 && _0x994200[_0x50a153(0x54b)]()) : (_0x40d5e5[_0x50a153(0x233)] = !![], _0x282820(_0x37fe61[_0x50a153(0x24b)] * 0x10, _0x218b83[_0x50a153(0x10c4)][_0x50a153(0x10c5)])[_0x50a153(0x10c6)](function () {
                var _0xbff38d = _0x50a153;
                _0x324d7b[_0xbff38d(0x229)](_0x5f14ff, _0x2a5bc6, _0x37fe61), _0x994200 && _0x994200['run']();
            }));
        }
    }
    _0x324d7b[_0x5659be(0x5be)] = _0x5659be(0x5be), _0x324d7b[_0x5659be(0xf9a)] = _0x5659be(0xf9a), _0x324d7b[_0x5659be(0x686)] = _0x5659be(0x686), _0x324d7b[_0x5659be(0x1076)] = _0x5659be(0x1076), _0x324d7b[_0x5659be(0xca8)] = _0x5659be(0xca8), _0x324d7b['TEXTURECUBEBIN'] = 'TEXTURECUBEBIN', _0x324d7b[_0x5659be(0x31f)] = _0x5659be(0x31f), _0x324d7b[_0x5659be(0x67c)] = _0x5659be(0x67c), _0x324d7b[_0x5659be(0x10c7)] = _0x5659be(0x10c7), _0x324d7b[_0x5659be(0x109c)] = _0x5659be(0x10c8), _0x324d7b['SIMPLEANIMATORBIN'] = 'SIMPLEANIMATOR', _0x324d7b['_innerFirstLevelLoaderManager'] = new _0x218b83[(_0x5659be(0xa26))](), _0x324d7b[_0x5659be(0x1052)] = new _0x218b83['LoaderManager'](), _0x324d7b['_innerThirdLevelLoaderManager'] = new _0x218b83[(_0x5659be(0xa26))](), _0x324d7b['_innerFourthLevelLoaderManager'] = new _0x218b83[(_0x5659be(0xa26))](), _0x324d7b[_0x5659be(0x10c3)] = ![], _0x324d7b[_0x5659be(0x237)] = ![], window['Laya3D'] = _0x324d7b;
    class _0x2c12d2 extends _0x5ae7ed {
        constructor() {
            super();
        }
        [_0x5659be(0x201)](_0x27cd4c) {
            var _0x56f3dd = _0x5659be, _0x3b2f99 = _0x27cd4c[_0x56f3dd(0xb0b)];
            if (_0x3b2f99 !== -0x1)
                throw _0x56f3dd(0x10c9);
            this[_0x56f3dd(0x7fd)](_0x27cd4c), _0x27cd4c['_indexInCastShadowList'] = this[_0x56f3dd(0x1ff)]++;
        }
        [_0x5659be(0x3a9)](_0x387007) {
            var _0xdf9e6f = _0x5659be, _0x123f54 = _0x387007[_0xdf9e6f(0xb0b)];
            this[_0xdf9e6f(0x1ff)]--;
            if (_0x123f54 !== this[_0xdf9e6f(0x1ff)]) {
                var _0x2b2200 = this[_0xdf9e6f(0x1f6)][this[_0xdf9e6f(0x1ff)]];
                this[_0xdf9e6f(0x1f6)][_0x123f54] = _0x2b2200, _0x2b2200[_0xdf9e6f(0xb0b)] = _0x123f54;
            }
            _0x387007[_0xdf9e6f(0xb0b)] = -0x1;
        }
    }
    class _0x1b29c9 {
        constructor() {
        }
        ['onStateEnter']() {
        }
        [_0x5659be(0x38b)]() {
        }
        [_0x5659be(0x38a)]() {
        }
    }
    class _0x411ce6 extends _0x218b83[_0x5659be(0x373)] {
        constructor() {
            var _0x5a2b2d = _0x5659be;
            super(...arguments), this[_0x5a2b2d(0xc14)] = -0x1, this['_enableState'] = ![];
        }
        get [_0x5659be(0x10ca)]() {
            return ![];
        }
        ['_checkProcessTriggers']() {
            var _0x2d8fe2 = _0x5659be, _0x9d37f3 = _0x411ce6[_0x2d8fe2(0x108c)];
            if (this['onTriggerEnter'] !== _0x9d37f3[_0x2d8fe2(0x10cb)])
                return !![];
            if (this[_0x2d8fe2(0x10cc)] !== _0x9d37f3['onTriggerStay'])
                return !![];
            if (this[_0x2d8fe2(0x10cd)] !== _0x9d37f3[_0x2d8fe2(0x10cd)])
                return !![];
            return ![];
        }
        [_0x5659be(0x10ce)]() {
            var _0x5aa841 = _0x5659be, _0x515f27 = _0x411ce6[_0x5aa841(0x108c)];
            if (this[_0x5aa841(0x10cf)] !== _0x515f27[_0x5aa841(0x10cf)])
                return !![];
            if (this[_0x5aa841(0x10d0)] !== _0x515f27[_0x5aa841(0x10d0)])
                return !![];
            if (this['onCollisionExit'] !== _0x515f27[_0x5aa841(0x10d1)])
                return !![];
            return ![];
        }
        [_0x5659be(0x10d2)]() {
            var _0x4a8b1f = _0x5659be;
            this['onAwake']();
            if (this[_0x4a8b1f(0x10d3)] !== _0x411ce6[_0x4a8b1f(0x108c)][_0x4a8b1f(0x10d3)])
                _0x218b83[_0x4a8b1f(0x685)]['startTimer']['callLater'](this, this[_0x4a8b1f(0x10d3)]);
        }
        [_0x5659be(0x10d4)]() {
            var _0x372e6b = _0x5659be;
            if (this[_0x372e6b(0x10d5)])
                return;
            this[_0x372e6b(0x380)][_0x372e6b(0x3a6)][_0x372e6b(0xc27)](this), this[_0x372e6b(0x10d5)] = !![], this[_0x372e6b(0xc0d)]();
        }
        [_0x5659be(0x10d6)]() {
            var _0x2102fd = _0x5659be;
            if (!this[_0x2102fd(0x10d5)] || this[_0x2102fd(0xc14)] == -0x1)
                return;
            this['owner']['_scene'][_0x2102fd(0x5cb)](this), this[_0x2102fd(0x380)]['offAllCaller'](this), this['_enableState'] = ![], this['onDisable']();
        }
        [_0x5659be(0x3a5)]() {
            var _0x5bcdc3 = _0x5659be, _0x44eb13 = this[_0x5bcdc3(0x380)][_0x5bcdc3(0x362)];
            _0x44eb13[_0x5bcdc3(0x32c)](_0x44eb13[_0x5bcdc3(0x384)](this), 0x1);
            var _0x5993f7 = this['owner'];
            _0x5993f7[_0x5bcdc3(0x5b8)] = ![];
            for (var _0x68215a = 0x0, _0x3e1ce4 = _0x44eb13['length']; _0x68215a < _0x3e1ce4; _0x68215a++) {
                if (_0x44eb13[_0x68215a][_0x5bcdc3(0x10d7)]()) {
                    _0x5993f7[_0x5bcdc3(0x5b8)] = !![];
                    break;
                }
            }
            _0x5993f7[_0x5bcdc3(0x5b7)] = ![];
            for (_0x68215a = 0x0, _0x3e1ce4 = _0x44eb13[_0x5bcdc3(0x1ff)]; _0x68215a < _0x3e1ce4; _0x68215a++) {
                if (_0x44eb13[_0x68215a][_0x5bcdc3(0x10ce)]()) {
                    _0x5993f7[_0x5bcdc3(0x5b7)] = !![];
                    break;
                }
            }
            this[_0x5bcdc3(0x10d8)]();
        }
        [_0x5659be(0x10d9)]() {
            return !![];
        }
        [_0x5659be(0x5cc)]() {
            var _0x547098 = _0x5659be, _0x1ddad1 = this[_0x547098(0x380)], _0xd0d860 = _0x1ddad1[_0x547098(0x362)];
            _0xd0d860 || (_0x1ddad1[_0x547098(0x362)] = _0xd0d860 = []), _0xd0d860[_0x547098(0x298)](this);
            if (!_0x1ddad1[_0x547098(0x5b7)])
                _0x1ddad1[_0x547098(0x5b7)] = this[_0x547098(0x10ce)]();
            if (!_0x1ddad1[_0x547098(0x5b8)])
                _0x1ddad1[_0x547098(0x5b8)] = this[_0x547098(0x10d7)]();
        }
        [_0x5659be(0x10da)]() {
        }
        [_0x5659be(0xc0d)]() {
        }
        [_0x5659be(0x10d3)]() {
        }
        ['onTriggerEnter'](_0x3807ba) {
        }
        [_0x5659be(0x10cc)](_0x961f2a) {
        }
        [_0x5659be(0x10cd)](_0x1bcfa9) {
        }
        [_0x5659be(0x10cf)](_0x59bf54) {
        }
        ['onCollisionStay'](_0x4db663) {
        }
        [_0x5659be(0x10d1)](_0x35c1cf) {
        }
        ['onJointBreak']() {
        }
        [_0x5659be(0x10db)]() {
        }
        [_0x5659be(0xa0c)]() {
        }
        [_0x5659be(0x9f9)]() {
        }
        [_0x5659be(0x9fa)]() {
        }
        ['onMouseEnter']() {
        }
        [_0x5659be(0x10dc)]() {
        }
        [_0x5659be(0x10dd)]() {
        }
        [_0x5659be(0xc15)]() {
        }
        [_0x5659be(0xc16)]() {
        }
        [_0x5659be(0xc28)]() {
        }
        ['onPostRender']() {
        }
        [_0x5659be(0xc0f)]() {
        }
        ['onDestroy']() {
        }
    }
    class _0xac7ad2 {
        constructor(_0x251e38, _0x27424c, _0x2a5fba, _0x423e15) {
            var _0x48d566 = _0x5659be;
            this['_datas'] = [], this['_w'] = _0x251e38, this['_h'] = _0x27424c, this[_0x48d566(0x10de)] = _0x2a5fba, this['_maxHeight'] = _0x423e15;
        }
        static ['creatFromMesh'](_0xe61ac2, _0x575c28, _0x36268b, _0x173cd5) {
            var _0x3b18e2 = _0x5659be, _0x106733 = [], _0x216f2c = [], _0x53054f = _0xe61ac2[_0x3b18e2(0xae8)];
            for (var _0x10ab5a = 0x0; _0x10ab5a < _0x53054f; _0x10ab5a++) {
                var _0x5a11e4 = _0xe61ac2[_0x3b18e2(0xcd2)](_0x10ab5a), _0x8bcdb8 = _0x5a11e4[_0x3b18e2(0x4f9)], _0x457f4e = _0x8bcdb8['getFloat32Data'](), _0x1cd394 = [];
                for (var _0x189de8 = 0x0; _0x189de8 < _0x457f4e['length']; _0x189de8 += _0x8bcdb8[_0x3b18e2(0x449)][_0x3b18e2(0x4e4)] / 0x4) {
                    var _0x482c5d = new _0x3f70c5(_0x457f4e[_0x189de8 + 0x0], _0x457f4e[_0x189de8 + 0x1], _0x457f4e[_0x189de8 + 0x2]);
                    _0x1cd394[_0x3b18e2(0x298)](_0x482c5d);
                }
                _0x106733[_0x3b18e2(0x298)](_0x1cd394);
                var _0x3261f5 = _0x5a11e4[_0x3b18e2(0x624)];
                _0x216f2c[_0x3b18e2(0x298)](_0x3261f5[_0x3b18e2(0x307)]());
            }
            var _0x19e597 = _0xe61ac2[_0x3b18e2(0x80d)], _0x5d5aac = _0x19e597[_0x3b18e2(0xa4f)]()['x'], _0x1221a6 = _0x19e597[_0x3b18e2(0xa4f)]()['z'], _0x20b22d = _0x19e597['getMax']()['x'], _0x13501d = _0x19e597[_0x3b18e2(0x828)]()['z'], _0x178509 = _0x19e597[_0x3b18e2(0xa4f)]()['y'], _0x282edf = _0x19e597[_0x3b18e2(0x828)]()['y'], _0x2a27b5 = _0x20b22d - _0x5d5aac, _0x6756cb = _0x13501d - _0x1221a6, _0x560601 = _0x173cd5['x'] = _0x2a27b5 / (_0x575c28 - 0x1), _0x5685f9 = _0x173cd5['y'] = _0x6756cb / (_0x36268b - 0x1), _0x291b93 = new _0xac7ad2(_0x575c28, _0x36268b, _0x178509, _0x282edf), _0x3e02ee = _0xac7ad2[_0x3b18e2(0x10df)], _0x39b514 = _0x3e02ee[_0x3b18e2(0x87e)];
            _0x39b514['x'] = 0x0, _0x39b514['y'] = -0x1, _0x39b514['z'] = 0x0;
            const _0x23b8a0 = 0.1;
            var _0x37cbe7 = _0x282edf + _0x23b8a0;
            _0x3e02ee[_0x3b18e2(0x876)]['y'] = _0x37cbe7;
            for (var _0x2920fe = 0x0; _0x2920fe < _0x36268b; _0x2920fe++) {
                var _0x9deec8 = _0x1221a6 + _0x2920fe * _0x5685f9;
                _0x291b93[_0x3b18e2(0x10e0)][_0x2920fe] = [];
                for (var _0x534249 = 0x0; _0x534249 < _0x575c28; _0x534249++) {
                    var _0x3a0dbc = _0x5d5aac + _0x534249 * _0x560601, _0x262544 = _0x3e02ee[_0x3b18e2(0x876)];
                    _0x262544['x'] = _0x3a0dbc, _0x262544['z'] = _0x9deec8;
                    var _0x41d0ca = _0xac7ad2['_getPosition'](_0x3e02ee, _0x106733, _0x216f2c);
                    _0x291b93[_0x3b18e2(0x10e0)][_0x2920fe][_0x534249] = _0x41d0ca === Number[_0x3b18e2(0xa46)] ? NaN : _0x37cbe7 - _0x41d0ca;
                }
            }
            return _0x291b93;
        }
        static [_0x5659be(0x10e1)](_0x1cb380, _0x8adfc0, _0x4cfda4) {
            var _0x2175a7 = _0x5659be, _0x491f3e = _0x1cb380[_0x2175a7(0x300)], _0x40273e = _0x1cb380[_0x2175a7(0x301)], _0x310eee = new _0xac7ad2(_0x491f3e, _0x40273e, _0x8adfc0, _0x4cfda4), _0x3fd279 = (_0x4cfda4 - _0x8adfc0) / 0xfe, _0x2273fc = _0x1cb380[_0x2175a7(0x10e2)](), _0x4d91fb = 0x0;
            for (var _0x51447a = 0x0; _0x51447a < _0x40273e; _0x51447a++) {
                var _0x4040e0 = _0x310eee['_datas'][_0x51447a] = [];
                for (var _0x3539c9 = 0x0; _0x3539c9 < _0x491f3e; _0x3539c9++) {
                    var _0x24a524 = _0x2273fc[_0x4d91fb++], _0xb13ffe = _0x2273fc[_0x4d91fb++], _0xb52e87 = _0x2273fc[_0x4d91fb++], _0x34d9de = _0x2273fc[_0x4d91fb++];
                    if (_0x24a524 == 0xff && _0xb13ffe == 0xff && _0xb52e87 == 0xff && _0x34d9de == 0xff)
                        _0x4040e0[_0x3539c9] = NaN;
                    else
                        _0x4040e0[_0x3539c9] = (_0x24a524 + _0xb13ffe + _0xb52e87) / 0x3 * _0x3fd279 + _0x8adfc0;
                }
            }
            return _0x310eee;
        }
        static ['_getPosition'](_0x44e307, _0x599cc2, _0x1a49df) {
            var _0x5224e2 = _0x5659be, _0x1fe079 = Number[_0x5224e2(0xa46)];
            for (var _0x5e9b34 = 0x0; _0x5e9b34 < _0x599cc2[_0x5224e2(0x1ff)]; _0x5e9b34++) {
                var _0x51995f = _0x599cc2[_0x5e9b34], _0x42a523 = _0x1a49df[_0x5e9b34];
                for (var _0x437699 = 0x0; _0x437699 < _0x42a523[_0x5224e2(0x1ff)]; _0x437699 += 0x3) {
                    var _0x48e618 = _0x51995f[_0x42a523[_0x437699 + 0x0]], _0x30de30 = _0x51995f[_0x42a523[_0x437699 + 0x1]], _0x4d4a49 = _0x51995f[_0x42a523[_0x437699 + 0x2]], _0x1a237d = _0x333c68['rayIntersectsTriangle'](_0x44e307, _0x48e618, _0x30de30, _0x4d4a49);
                    !isNaN(_0x1a237d) && _0x1a237d < _0x1fe079 && (_0x1fe079 = _0x1a237d);
                }
            }
            return _0x1fe079;
        }
        get [_0x5659be(0x300)]() {
            return this['_w'];
        }
        get ['height']() {
            return this['_h'];
        }
        get [_0x5659be(0x10e3)]() {
            return this['_maxHeight'];
        }
        get [_0x5659be(0x10e4)]() {
            return this['_minHeight'];
        }
        [_0x5659be(0x10e5)](_0x225d6d, _0x304d60) {
            return _0x225d6d >= 0x0 && _0x225d6d < this['_h'] && _0x304d60 >= 0x0 && _0x304d60 < this['_w'];
        }
        [_0x5659be(0x10e6)](_0xc57283, _0x2369c1) {
            var _0x3aaafc = _0x5659be;
            if (this[_0x3aaafc(0x10e5)](_0xc57283, _0x2369c1))
                return this[_0x3aaafc(0x10e0)][_0xc57283][_0x2369c1];
            else
                return NaN;
        }
    }
    _0xac7ad2[_0x5659be(0x10df)] = new _0x2ef15a(new _0x3f70c5(), new _0x3f70c5());
    class _0x197280 extends _0x82ba60 {
        constructor(_0x13edc1, _0x2af643, _0x1ec448 = null) {
            var _0x2834ad = _0x5659be;
            super(_0x13edc1, _0x1ec448), this['_heightMap'] = _0x2af643, this[_0x2834ad(0x10e7)] = new _0x12bf01();
        }
        static [_0x5659be(0x10e8)](_0x317c9a, _0x3b538c, _0x36256d, _0x4692da = null) {
            var _0x4a606a = _0x5659be, _0x377580 = new _0x197280(_0x317c9a, null, _0x4692da);
            return _0x377580[_0x4a606a(0x10e9)](_0x3b538c, _0x36256d), _0x377580;
        }
        static [_0x5659be(0x10ea)](_0x4279f4, _0xb89e33, _0xfdcda, _0x3da7e3, _0x3edb = null) {
            var _0x272449 = _0x5659be, _0x567321 = new _0x197280(_0x4279f4, null, _0x3edb);
            return _0x567321[_0x272449(0x10eb)](_0xb89e33, _0xfdcda, _0x3da7e3), _0x567321;
        }
        get [_0x5659be(0x10ec)]() {
            var _0x521b36 = _0x5659be, _0x465bd7 = this['transform'][_0x521b36(0x3ce)], _0x8afc63 = _0x465bd7[_0x521b36(0x1f6)];
            return this[_0x521b36(0x10ed)] * this[_0x521b36(0x10ee)]() + _0x8afc63[0xc];
        }
        get [_0x5659be(0x10ef)]() {
            var _0x4c320c = _0x5659be, _0x131c5c = this[_0x4c320c(0x3cc)]['worldMatrix'], _0x28d9af = _0x131c5c[_0x4c320c(0x1f6)];
            return this[_0x4c320c(0x10f0)] * this['_getScaleZ']() + _0x28d9af[0xe];
        }
        get [_0x5659be(0x300)]() {
            var _0x5ad753 = _0x5659be;
            return (this[_0x5ad753(0x10f1)][_0x5ad753(0x300)] - 0x1) * this[_0x5ad753(0x10e7)]['x'] * this[_0x5ad753(0x10ee)]();
        }
        get ['depth']() {
            var _0x148fde = _0x5659be;
            return (this[_0x148fde(0x10f1)][_0x148fde(0x301)] - 0x1) * this[_0x148fde(0x10e7)]['y'] * this[_0x148fde(0x10f2)]();
        }
        [_0x5659be(0x10f3)]() {
            var _0x2421e6 = _0x5659be, _0x5248ad = this['transform'][_0x2421e6(0x5a0)];
            _0x5248ad['x'] = 0x0, _0x5248ad['y'] = 0x0, _0x5248ad['z'] = 0x0, _0x5248ad['w'] = 0x1, this[_0x2421e6(0x3cc)]['rotation'] = _0x5248ad;
        }
        ['_getScaleX']() {
            var _0x66a55f = _0x5659be, _0x3db1e2 = this[_0x66a55f(0x3cc)][_0x66a55f(0x3ce)], _0x490d53 = _0x3db1e2[_0x66a55f(0x1f6)], _0x47e670 = _0x490d53[0x0], _0xd62e19 = _0x490d53[0x1], _0x2d3bdd = _0x490d53[0x2];
            return Math[_0x66a55f(0x1ea)](_0x47e670 * _0x47e670 + _0xd62e19 * _0xd62e19 + _0x2d3bdd * _0x2d3bdd);
        }
        [_0x5659be(0x10f2)]() {
            var _0x3c3b57 = _0x5659be, _0x55ec31 = this['transform'][_0x3c3b57(0x3ce)], _0x482bda = _0x55ec31[_0x3c3b57(0x1f6)], _0x5fbb44 = _0x482bda[0x8], _0x8b2db9 = _0x482bda[0x9], _0x4d149f = _0x482bda[0xa];
            return Math['sqrt'](_0x5fbb44 * _0x5fbb44 + _0x8b2db9 * _0x8b2db9 + _0x4d149f * _0x4d149f);
        }
        ['_initCreateFromMesh'](_0x2963b4, _0x53cd80) {
            var _0x18bf7f = _0x5659be;
            this[_0x18bf7f(0x10f1)] = _0xac7ad2[_0x18bf7f(0x10f4)](this[_0x18bf7f(0xae2)][_0x18bf7f(0xae3)], _0x2963b4, _0x53cd80, this['_cellSize']);
            var _0xf0505e = this[_0x18bf7f(0xae2)]['sharedMesh'][_0x18bf7f(0x80d)], _0x730fab = _0xf0505e[_0x18bf7f(0xa4f)]();
            this[_0x18bf7f(0x10ed)] = _0x730fab['x'], this[_0x18bf7f(0x10f0)] = _0x730fab['z'];
        }
        [_0x5659be(0x10eb)](_0x2f7f2c, _0x35bac3, _0x53b9b8) {
            var _0x51094e = _0x5659be, _0x4b1923 = this['meshFilter'][_0x51094e(0xae3)]['bounds'];
            this[_0x51094e(0x10f1)] = _0xac7ad2[_0x51094e(0x10e1)](_0x2f7f2c, _0x35bac3, _0x53b9b8), this['_computeCellSize'](_0x4b1923);
            var _0x199108 = _0x4b1923[_0x51094e(0xa4f)]();
            this['_minX'] = _0x199108['x'], this[_0x51094e(0x10f0)] = _0x199108['z'];
        }
        [_0x5659be(0x10f5)](_0x28cf43) {
            var _0x325ab9 = _0x5659be, _0x1d5f9e = _0x28cf43[_0x325ab9(0xa4f)](), _0x297530 = _0x28cf43[_0x325ab9(0x828)](), _0x5563cc = _0x1d5f9e['x'], _0x4164e5 = _0x1d5f9e['z'], _0x259ceb = _0x297530['x'], _0x5a4479 = _0x297530['z'], _0x4144b3 = _0x259ceb - _0x5563cc, _0x44dc9f = _0x5a4479 - _0x4164e5;
            this['_cellSize']['x'] = _0x4144b3 / (this[_0x325ab9(0x10f1)]['width'] - 0x1), this[_0x325ab9(0x10e7)]['y'] = _0x44dc9f / (this['_heightMap'][_0x325ab9(0x301)] - 0x1);
        }
        ['_update'](_0x1bdcec) {
            var _0x87ed35 = _0x5659be;
            this[_0x87ed35(0x10f3)]();
        }
        [_0x5659be(0x10e6)](_0x4632d9, _0x3ef2fb) {
            var _0x3bc55f = _0x5659be;
            _0x197280[_0x3bc55f(0x489)]['x'] = _0x4632d9, _0x197280[_0x3bc55f(0x489)]['y'] = 0x0, _0x197280[_0x3bc55f(0x489)]['z'] = _0x3ef2fb, this[_0x3bc55f(0x10f3)]();
            var _0x20de84 = this['transform'][_0x3bc55f(0x3ce)];
            _0x20de84['invert'](_0x197280[_0x3bc55f(0x484)]), _0x3f70c5[_0x3bc55f(0x20e)](_0x197280[_0x3bc55f(0x489)], _0x197280[_0x3bc55f(0x484)], _0x197280[_0x3bc55f(0x489)]), _0x4632d9 = _0x197280[_0x3bc55f(0x489)]['x'], _0x3ef2fb = _0x197280[_0x3bc55f(0x489)]['z'];
            var _0x49bbb9 = (_0x4632d9 - this[_0x3bc55f(0x10ed)]) / this[_0x3bc55f(0x10e7)]['x'], _0x3d8e3b = (_0x3ef2fb - this[_0x3bc55f(0x10f0)]) / this[_0x3bc55f(0x10e7)]['y'], _0x54aa51 = Math[_0x3bc55f(0x241)](_0x3d8e3b), _0x2f8608 = Math[_0x3bc55f(0x241)](_0x49bbb9), _0x38344b = _0x49bbb9 - _0x2f8608, _0xd2096d = _0x3d8e3b - _0x54aa51, _0x2b1a60, _0x292753, _0xd96c0f = _0x20de84[_0x3bc55f(0x1f6)], _0x4acb15 = _0xd96c0f[0x4], _0x1db009 = _0xd96c0f[0x5], _0x2f9eb0 = _0xd96c0f[0x6], _0x18bccc = Math['sqrt'](_0x4acb15 * _0x4acb15 + _0x1db009 * _0x1db009 + _0x2f9eb0 * _0x2f9eb0), _0x437cc0 = _0xd96c0f[0xd], _0x824063 = this[_0x3bc55f(0x10f1)][_0x3bc55f(0x10e6)](_0x54aa51, _0x2f8608 + 0x1), _0x18b33c = this[_0x3bc55f(0x10f1)][_0x3bc55f(0x10e6)](_0x54aa51 + 0x1, _0x2f8608);
            if (isNaN(_0x824063) || isNaN(_0x18b33c))
                return NaN;
            if (_0x38344b + _0xd2096d <= 0x1) {
                var _0x430774 = this['_heightMap']['getHeight'](_0x54aa51, _0x2f8608);
                if (isNaN(_0x430774))
                    return NaN;
                return _0x2b1a60 = _0x824063 - _0x430774, _0x292753 = _0x18b33c - _0x430774, (_0x430774 + _0x38344b * _0x2b1a60 + _0xd2096d * _0x292753) * _0x18bccc + _0x437cc0;
            } else {
                var _0x5962d5 = this['_heightMap'][_0x3bc55f(0x10e6)](_0x54aa51 + 0x1, _0x2f8608 + 0x1);
                if (isNaN(_0x5962d5))
                    return NaN;
                return _0x2b1a60 = _0x18b33c - _0x5962d5, _0x292753 = _0x824063 - _0x5962d5, (_0x5962d5 + (0x1 - _0x38344b) * _0x2b1a60 + (0x1 - _0xd2096d) * _0x292753) * _0x18bccc + _0x437cc0;
            }
        }
    }
    _0x197280[_0x5659be(0x489)] = new _0x3f70c5(), _0x197280[_0x5659be(0x484)] = new _0x3ed76a();
    class _0x25ef4a {
        constructor() {
            this['_currentLength'] = 0x0, this['_elements'] = new Float32Array(0xc);
        }
        get [_0x5659be(0xd43)]() {
            var _0x421841 = _0x5659be;
            return this[_0x421841(0xd42)] / 0x3;
        }
        [_0x5659be(0x201)](_0x2d2e07, _0x1e0e34) {
            var _0x52ca1b = _0x5659be;
            this[_0x52ca1b(0xd42)] < 0x8 ? (this[_0x52ca1b(0xd42)] === 0x6 && _0x2d2e07 !== 0x1 && (_0x2d2e07 = 0x1, console[_0x52ca1b(0x943)](_0x52ca1b(0x10f6))), this[_0x52ca1b(0x860)][this[_0x52ca1b(0xd42)]++] = _0x2d2e07, this[_0x52ca1b(0x860)][this['_currentLength']++] = _0x1e0e34['x'], this[_0x52ca1b(0x860)][this['_currentLength']++] = _0x1e0e34['y']) : console[_0x52ca1b(0x943)](_0x52ca1b(0x10f7));
        }
        [_0x5659be(0x1f0)](_0x304008) {
            var _0x595a0d = _0x5659be, _0x64cc94 = _0x304008;
            _0x64cc94[_0x595a0d(0xd42)] = this[_0x595a0d(0xd42)];
            var _0x40dc0f = _0x64cc94[_0x595a0d(0x860)];
            for (var _0x4e304e = 0x0, _0x4afaf3 = this[_0x595a0d(0x860)][_0x595a0d(0x1ff)]; _0x4e304e < _0x4afaf3; _0x4e304e++) {
                _0x40dc0f[_0x4e304e] = this[_0x595a0d(0x860)][_0x4e304e];
            }
        }
        [_0x5659be(0x1f4)]() {
            var _0x1ab8be = new _0x25ef4a();
            return this['cloneTo'](_0x1ab8be), _0x1ab8be;
        }
    }
    class _0x1c9822 {
        constructor() {
            var _0x4a30e8 = _0x5659be;
            this['startPosition'] = new _0x3f70c5(), this[_0x4a30e8(0xa71)] = new _0x3f70c5(), this[_0x4a30e8(0xa74)] = new _0x4e3117(), this['endColor'] = new _0x4e3117();
        }
        [_0x5659be(0x1f0)](_0x66e890) {
            var _0x2af30b = _0x5659be;
            this[_0x2af30b(0xa70)]['cloneTo'](_0x66e890[_0x2af30b(0xa70)]), this[_0x2af30b(0xa71)][_0x2af30b(0x1f0)](_0x66e890[_0x2af30b(0xa71)]), this[_0x2af30b(0xa74)][_0x2af30b(0x1f0)](_0x66e890['startColor']), this[_0x2af30b(0xa72)][_0x2af30b(0x1f0)](_0x66e890[_0x2af30b(0xa72)]);
        }
    }
    class _0x14da76 {
        constructor() {
        }
        [_0x5659be(0x506)](_0xa3a79c) {
        }
    }
    class _0x41d16b extends _0x14da76 {
        constructor() {
            var _0x5a0d36 = _0x5659be;
            super(), this[_0x5a0d36(0x50a)] = null, this[_0x5a0d36(0x558)] = new _0x552b02(), this['_linearColor'] = new _0x4e3117(), this[_0x5a0d36(0x10f8)] = new _0x8fb80(), this['_shaderThreshold'] = new _0x8fb80(), this['_shaderParams'] = new _0x8fb80(), this[_0x5a0d36(0x10f9)] = null, this[_0x5a0d36(0x92c)] = 0x0, this['_threshold'] = 0x1, this['_softKnee'] = 0.5, this['_diffusion'] = 0x7, this['_anamorphicRatio'] = 0x0, this['_dirtIntensity'] = 0x0, this[_0x5a0d36(0x10fa)] = new _0x8fb80(), this[_0x5a0d36(0x10fb)] = new _0x8fb80(), this[_0x5a0d36(0x10fc)] = 0xffc0, this[_0x5a0d36(0x462)] = new _0x4e3117(0x1, 0x1, 0x1, 0x1), this[_0x5a0d36(0x10fd)] = ![], this[_0x5a0d36(0x10fe)] = null, this[_0x5a0d36(0x50a)] = _0x84b6d6[_0x5a0d36(0x52c)]('PostProcessBloom'), this['_pyramid'] = new Array(_0x41d16b[_0x5a0d36(0x10ff)] * 0x2);
        }
        get [_0x5659be(0x93a)]() {
            var _0x214599 = _0x5659be;
            return this[_0x214599(0x92c)];
        }
        set [_0x5659be(0x93a)](_0x22032d) {
            var _0x460b35 = _0x5659be;
            this[_0x460b35(0x92c)] = Math[_0x460b35(0x205)](_0x22032d, 0x0);
        }
        get [_0x5659be(0x1100)]() {
            var _0x4fce6d = _0x5659be;
            return this[_0x4fce6d(0x1101)];
        }
        set ['threshold'](_0x4939d8) {
            var _0x2845a7 = _0x5659be;
            this['_threshold'] = Math[_0x2845a7(0x205)](_0x4939d8, 0x0);
        }
        get ['softKnee']() {
            var _0x41a36d = _0x5659be;
            return this[_0x41a36d(0x1102)];
        }
        set [_0x5659be(0x1103)](_0x42069e) {
            var _0x9ce5c = _0x5659be;
            this[_0x9ce5c(0x1102)] = Math[_0x9ce5c(0x204)](Math[_0x9ce5c(0x205)](_0x42069e, 0x0), 0x1);
        }
        get [_0x5659be(0x1104)]() {
            var _0x8e23a9 = _0x5659be;
            return this[_0x8e23a9(0x1105)];
        }
        set [_0x5659be(0x1104)](_0x4bc1d8) {
            var _0x24aac0 = _0x5659be;
            this[_0x24aac0(0x1105)] = Math[_0x24aac0(0x204)](Math[_0x24aac0(0x205)](_0x4bc1d8, 0x1), 0xa);
        }
        get [_0x5659be(0x1106)]() {
            var _0x5100f7 = _0x5659be;
            return this[_0x5100f7(0x1107)];
        }
        set [_0x5659be(0x1106)](_0x1ac739) {
            var _0x576d77 = _0x5659be;
            this[_0x576d77(0x1107)] = Math['min'](Math[_0x576d77(0x205)](_0x1ac739, -0x1), 0x1);
        }
        get [_0x5659be(0x1108)]() {
            var _0x50fa38 = _0x5659be;
            return this[_0x50fa38(0x1109)];
        }
        set ['dirtIntensity'](_0x516b12) {
            this['_dirtIntensity'] = Math['max'](_0x516b12, 0x0);
        }
        [_0x5659be(0x506)](_0x2b8ab1) {
            var _0x5bd1e7 = _0x5659be, _0x3ea2eb = _0x2b8ab1[_0x5bd1e7(0x64a)], _0x1302d6 = _0x2b8ab1[_0x5bd1e7(0x645)][_0x5bd1e7(0x561)];
            this[_0x5bd1e7(0x558)][_0x5bd1e7(0x4a2)](_0x41d16b['SHADERVALUE_AUTOEXPOSURETEX'], _0x218b83['Texture2D']['whiteTexture']);
            var _0x1e6d40 = this[_0x5bd1e7(0x1107)], _0x337cff = _0x1e6d40 < 0x0 ? -_0x1e6d40 : 0x0, _0x373089 = _0x1e6d40 > 0x0 ? _0x1e6d40 : 0x0, _0x3ede01 = Math[_0x5bd1e7(0x241)](_0x1302d6[_0x5bd1e7(0x300)] / (0x2 - _0x337cff)), _0x1a87cc = Math[_0x5bd1e7(0x241)](_0x1302d6[_0x5bd1e7(0x301)] / (0x2 - _0x373089)), _0x242c8b = Math['max'](_0x3ede01, _0x1a87cc), _0x305ace;
            _0x305ace = Math[_0x5bd1e7(0x849)](_0x242c8b) + this[_0x5bd1e7(0x1105)] - 0xa;
            var _0x23fe02 = Math[_0x5bd1e7(0x241)](_0x305ace), _0x17a65b = Math[_0x5bd1e7(0x204)](Math[_0x5bd1e7(0x205)](_0x23fe02, 0x1), _0x41d16b[_0x5bd1e7(0x10ff)]), _0x460b61 = 0.5 + _0x305ace - _0x23fe02;
            this['_shaderData'][_0x5bd1e7(0x4af)](_0x41d16b[_0x5bd1e7(0x110a)], _0x460b61);
            var _0x585f1d = _0x4e3117['gammaToLinearSpace'](this['threshold']), _0x4416ff = _0x585f1d * this['_softKnee'] + 0.00001;
            this[_0x5bd1e7(0x110b)][_0x5bd1e7(0x1fa)](_0x585f1d, _0x585f1d - _0x4416ff, _0x4416ff * 0x2, 0.25 / _0x4416ff), this['_shaderData'][_0x5bd1e7(0x49d)](_0x41d16b[_0x5bd1e7(0x110c)], this[_0x5bd1e7(0x110b)]);
            var _0xbd1433 = _0x4e3117[_0x5bd1e7(0x802)](this[_0x5bd1e7(0x10fc)]);
            this[_0x5bd1e7(0x110d)][_0x5bd1e7(0x1fa)](_0xbd1433, 0x0, 0x0, 0x0), this[_0x5bd1e7(0x558)][_0x5bd1e7(0x49d)](_0x41d16b[_0x5bd1e7(0x110e)], this[_0x5bd1e7(0x110d)]);
            var _0x4208b3 = this[_0x5bd1e7(0x10fd)] ? 0x1 : 0x0, _0x874991 = _0x2b8ab1[_0x5bd1e7(0x30f)];
            for (var _0x8ce69d = 0x0; _0x8ce69d < _0x17a65b; _0x8ce69d++) {
                var _0x4d4f23 = _0x8ce69d * 0x2, _0x48639b = _0x4d4f23 + 0x1, _0x207be8 = _0x8ce69d == 0x0 ? _0x41d16b[_0x5bd1e7(0x110f)] + _0x4208b3 : _0x41d16b[_0x5bd1e7(0x1110)] + _0x4208b3, _0x389140 = _0x164148[_0x5bd1e7(0x3e9)](_0x3ede01, _0x1a87cc, _0x218b83[_0x5bd1e7(0x302)][_0x5bd1e7(0x2c7)], _0x218b83[_0x5bd1e7(0x3db)][_0x5bd1e7(0x413)]);
                _0x389140[_0x5bd1e7(0x2ce)] = _0x218b83[_0x5bd1e7(0x2f7)][_0x5bd1e7(0x958)], this[_0x5bd1e7(0x10f9)][_0x4d4f23] = _0x389140;
                if (_0x8ce69d !== _0x17a65b - 0x1) {
                    var _0x21f58f = _0x164148[_0x5bd1e7(0x3e9)](_0x3ede01, _0x1a87cc, _0x218b83[_0x5bd1e7(0x302)][_0x5bd1e7(0x2c7)], _0x218b83[_0x5bd1e7(0x3db)][_0x5bd1e7(0x413)]);
                    _0x21f58f[_0x5bd1e7(0x2ce)] = _0x218b83[_0x5bd1e7(0x2f7)][_0x5bd1e7(0x958)], this['_pyramid'][_0x48639b] = _0x21f58f;
                }
                _0x3ea2eb[_0x5bd1e7(0x640)](_0x874991, _0x389140, null, this[_0x5bd1e7(0x50a)], this['_shaderData'], _0x207be8), _0x874991 = _0x389140, _0x3ede01 = Math['max'](Math[_0x5bd1e7(0x241)](_0x3ede01 / 0x2), 0x1), _0x1a87cc = Math[_0x5bd1e7(0x205)](Math[_0x5bd1e7(0x241)](_0x1a87cc / 0x2), 0x1);
            }
            var _0x23d9a7 = this[_0x5bd1e7(0x10f9)][(_0x17a65b - 0x1) * 0x2];
            for (_0x8ce69d = _0x17a65b - 0x2; _0x8ce69d >= 0x0; _0x8ce69d--) {
                _0x4d4f23 = _0x8ce69d * 0x2, _0x48639b = _0x4d4f23 + 0x1, _0x389140 = this['_pyramid'][_0x4d4f23], _0x21f58f = this['_pyramid'][_0x48639b], _0x3ea2eb[_0x5bd1e7(0x1111)](this[_0x5bd1e7(0x558)], _0x41d16b[_0x5bd1e7(0x65f)], _0x389140), _0x3ea2eb['blitScreenTriangle'](_0x23d9a7, _0x21f58f, null, this[_0x5bd1e7(0x50a)], this[_0x5bd1e7(0x558)], _0x41d16b[_0x5bd1e7(0x1112)] + _0x4208b3), _0x23d9a7 = _0x21f58f;
            }
            var _0x28d618 = this[_0x5bd1e7(0x1113)];
            this['color'][_0x5bd1e7(0x803)](_0x28d618);
            var _0x93b93d = Math[_0x5bd1e7(0x2ef)](0x2, this['_intensity'] / 0xa) - 0x1, _0x24b2bd = this[_0x5bd1e7(0x10fa)];
            this[_0x5bd1e7(0x10fa)][_0x5bd1e7(0x1fa)](_0x460b61, _0x93b93d, this[_0x5bd1e7(0x1109)], _0x17a65b);
            var _0x44aa6b = this['dirtTexture'] ? this[_0x5bd1e7(0x10fe)] : _0x218b83['Texture2D'][_0x5bd1e7(0xa1d)], _0x1bb66a = _0x44aa6b[_0x5bd1e7(0x300)] / _0x44aa6b[_0x5bd1e7(0x301)], _0x1772ce = _0x1302d6['width'] / _0x1302d6[_0x5bd1e7(0x301)], _0x41d690 = this[_0x5bd1e7(0x10fb)];
            if (_0x1bb66a > _0x1772ce)
                _0x41d690[_0x5bd1e7(0x1fa)](_0x1772ce / _0x1bb66a, 0x1, (0x1 - _0x41d690['x']) * 0.5, 0x0);
            else {
                if (_0x1bb66a < _0x1772ce)
                    _0x41d690[_0x5bd1e7(0x1fa)](0x1, _0x1bb66a / _0x1772ce, 0x0, (0x1 - _0x41d690['y']) * 0.5);
            }
            var _0x2bd8b7 = _0x2b8ab1[_0x5bd1e7(0x646)];
            if (this[_0x5bd1e7(0x10fd)])
                _0x2bd8b7[_0x5bd1e7(0x62c)](_0x2987ba[_0x5bd1e7(0x64b)]);
            else
                _0x2bd8b7[_0x5bd1e7(0x62c)](_0x2987ba[_0x5bd1e7(0x1114)]);
            this[_0x5bd1e7(0x10f8)][_0x5bd1e7(0x1fa)](0x1 / _0x23d9a7[_0x5bd1e7(0x300)], 0x1 / _0x23d9a7[_0x5bd1e7(0x301)], _0x23d9a7['width'], _0x23d9a7['height']), _0x2bd8b7['setVector'](_0x2987ba[_0x5bd1e7(0x1115)], _0x41d690), _0x2bd8b7[_0x5bd1e7(0x49d)](_0x2987ba[_0x5bd1e7(0x664)], _0x24b2bd), _0x2bd8b7[_0x5bd1e7(0x49d)](_0x2987ba[_0x5bd1e7(0x666)], new _0x8fb80(_0x28d618['r'], _0x28d618['g'], _0x28d618['b'], _0x28d618['a'])), _0x2bd8b7[_0x5bd1e7(0x4a2)](_0x2987ba['SHADERVALUE_BLOOM_DIRTTEX'], _0x44aa6b), _0x2bd8b7[_0x5bd1e7(0x4a2)](_0x2987ba[_0x5bd1e7(0x65f)], _0x23d9a7), _0x2bd8b7[_0x5bd1e7(0x49d)](_0x2987ba[_0x5bd1e7(0x1116)], this[_0x5bd1e7(0x10f8)]);
            for (_0x8ce69d = 0x0; _0x8ce69d < _0x17a65b; _0x8ce69d++) {
                _0x4d4f23 = _0x8ce69d * 0x2, _0x48639b = _0x4d4f23 + 0x1, _0x164148[_0x5bd1e7(0x65a)](this[_0x5bd1e7(0x10f9)][_0x4d4f23]), _0x8ce69d !== 0x0 && _0x8ce69d !== _0x17a65b - 0x1 && _0x164148['recoverToPool'](this['_pyramid'][_0x48639b]);
            }
            _0x2b8ab1[_0x5bd1e7(0x647)]['push'](_0x23d9a7);
        }
    }
    _0x41d16b[_0x5659be(0x65d)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x65e)), _0x41d16b[_0x5659be(0x655)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x660)), _0x41d16b[_0x5659be(0x110a)] = _0x84b6d6['propertyNameToID'](_0x5659be(0x1117)), _0x41d16b[_0x5659be(0x110c)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x1118)), _0x41d16b[_0x5659be(0x110e)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x1119)), _0x41d16b[_0x5659be(0x65f)] = _0x84b6d6[_0x5659be(0x526)](_0x5659be(0x111a)), _0x41d16b[_0x5659be(0x110f)] = 0x0, _0x41d16b[_0x5659be(0x111b)] = 0x1, _0x41d16b[_0x5659be(0x1110)] = 0x2, _0x41d16b[_0x5659be(0x111c)] = 0x3, _0x41d16b[_0x5659be(0x1112)] = 0x4, _0x41d16b[_0x5659be(0x111d)] = 0x5, _0x41d16b['MAXPYRAMIDSIZE'] = 0x10;
    class _0x499740 {
        constructor() {
            this['_isNeedUpdate'] = ![];
        }
        ['createInstanceVertexBuffer3D']() {
            var _0x418ad3 = _0x5659be, _0x12161b = _0x218b83[_0x418ad3(0x2f3)][_0x418ad3(0x2f4)];
            this[_0x418ad3(0x111e)] = new Float32Array(_0x160188[_0x418ad3(0x61c)] * this[_0x418ad3(0x4de)]), this[_0x418ad3(0x4f9)] = new _0x57a6a2(this[_0x418ad3(0x111e)][_0x418ad3(0x1ff)] * 0x4, _0x12161b[_0x418ad3(0xa98)]), this[_0x418ad3(0x4f9)][_0x418ad3(0x449)] = this[_0x418ad3(0x43f)];
        }
        [_0x5659be(0x62f)](_0x3e0296) {
            var _0x5c1ea9 = _0x5659be;
            if (!this['_isNeedUpdate'])
                return;
            let _0x1f0886 = this[_0x5c1ea9(0x111e)], _0x14d493 = this[_0x5c1ea9(0x43a)], _0x3fb762 = this[_0x5c1ea9(0x43a)]['length'], _0x360ce4, _0x2b4da9 = this['_vertexStride'], _0x575f01 = 0x0;
            !(this[_0x5c1ea9(0x43a)] instanceof Float32Array) && (_0x575f01 = 0x1);
            switch (_0x575f01) {
            case 0x0:
                _0x1f0886[_0x5c1ea9(0x450)](_0x14d493, 0x0);
                break;
            case 0x1:
                for (let _0x348476 = 0x0; _0x348476 < _0x3fb762; _0x348476++) {
                    _0x360ce4 = _0x14d493[_0x348476], _0x360ce4[_0x5c1ea9(0x1ef)](_0x1f0886, _0x348476 * _0x2b4da9);
                }
                break;
            }
            this[_0x5c1ea9(0x4f9)]['orphanStorage'](), this[_0x5c1ea9(0x4f9)]['setData'](_0x1f0886[_0x5c1ea9(0x448)], 0x0, 0x0, _0x3e0296 * 0x4 * _0x2b4da9);
        }
    }
    (function (_0x5eeee1) {
        var _0x40125d = _0x5659be;
        _0x5eeee1[_0x5eeee1['CUSTOME0'] = 0xc] = 'CUSTOME0', _0x5eeee1[_0x5eeee1['CUSTOME1'] = 0xd] = _0x40125d(0x111f), _0x5eeee1[_0x5eeee1['CUSTOME2'] = 0xe] = _0x40125d(0x1120), _0x5eeee1[_0x5eeee1[_0x40125d(0x1121)] = 0xf] = _0x40125d(0x1121);
    }(_0x71dec4[_0x5659be(0x1122)] || (_0x71dec4[_0x5659be(0x1122)] = {})));
    class _0x40e080 {
        constructor() {
            var _0x1bf913 = _0x5659be;
            this[_0x1bf913(0xa68)] = 0x0, this[_0x1bf913(0x623)] = {};
        }
        [_0x5659be(0x1123)](_0x463962, _0xa9ebb3, _0x4ce114, _0x46d14d) {
            var _0x3a1f17 = _0x5659be, _0x28f9eb = _0x46d14d[_0x3a1f17(0x43f)];
            if (_0x28f9eb[_0x3a1f17(0x4df)][0x0]['_elementFormat'] !== _0x463962)
                throw 'Data\x20exists\x20and\x20format\x20does\x20not\x20match';
            if (_0x46d14d[_0x3a1f17(0x512)] !== _0xa9ebb3)
                throw _0x3a1f17(0x1124);
        }
        [_0x5659be(0x1125)](_0x54e826, _0x321bb9, _0x183556, _0x2372e2, _0x23d985) {
            var _0x4b8a28 = _0x5659be, _0x1632ea = this[_0x4b8a28(0x623)][_0x23d985] = new _0x499740();
            _0x1632ea['_name'] = _0x54e826, _0x1632ea[_0x4b8a28(0x43a)] = _0x321bb9, _0x1632ea[_0x4b8a28(0x43f)] = new _0x330160(_0x183556, [new _0x1f18c6(0x0, _0x2372e2, _0x23d985)]), _0x1632ea[_0x4b8a28(0x1126)] = !![], _0x1632ea[_0x4b8a28(0x4de)] = _0x183556 / 0x4, _0x1632ea[_0x4b8a28(0x1127)]();
        }
        [_0x5659be(0x1128)](_0x3ca207, _0x462a87, _0x56c38a) {
            var _0x182b0e = _0x5659be, _0x50d383 = this[_0x182b0e(0x623)][_0x56c38a];
            if (_0x50d383)
                this['_checkPropertyLegal'](_0x48a921[_0x182b0e(0x45f)], _0x3ca207, _0x56c38a, _0x50d383), _0x50d383['_value'] = _0x462a87, _0x50d383[_0x182b0e(0x1126)] = !![];
            else
                this[_0x182b0e(0x1125)](_0x3ca207, _0x462a87, 0x10, _0x48a921['Vector4'], _0x56c38a);
        }
        [_0x5659be(0x1129)](_0x47220e, _0x21404a, _0x5f2d3f) {
            var _0x7f588c = _0x5659be, _0x4c761d = this['_propertyMap'][_0x5f2d3f];
            if (_0x4c761d)
                this[_0x7f588c(0x1123)](_0x48a921[_0x7f588c(0x45d)], _0x47220e, _0x5f2d3f, _0x4c761d), _0x4c761d['_value'] = _0x21404a, _0x4c761d[_0x7f588c(0x1126)] = !![];
            else
                this['_creatProperty'](_0x47220e, _0x21404a, 0xc, _0x48a921['Vector3'], _0x5f2d3f);
        }
        [_0x5659be(0x112a)](_0xb9d77c, _0x151db1, _0x19c7ea) {
            var _0x2eb681 = _0x5659be, _0x44ecd7 = this[_0x2eb681(0x623)][_0x19c7ea];
            if (_0x44ecd7)
                this['_checkPropertyLegal'](_0x48a921[_0x2eb681(0x45b)], _0xb9d77c, _0x19c7ea, _0x44ecd7), _0x44ecd7[_0x2eb681(0x43a)] = _0x151db1, _0x44ecd7[_0x2eb681(0x1126)] = !![];
            else
                this[_0x2eb681(0x1125)](_0xb9d77c, _0x151db1, 0x8, _0x48a921[_0x2eb681(0x45b)], _0x19c7ea);
        }
        [_0x5659be(0x112b)](_0x30a322, _0x90e178, _0x213944) {
            var _0xb08f36 = _0x5659be, _0x1f63bd = this[_0xb08f36(0x623)][_0x213944];
            if (_0x1f63bd)
                this['_checkPropertyLegal'](_0x48a921[_0xb08f36(0xe0d)], _0x30a322, _0x213944, _0x1f63bd), _0x1f63bd[_0xb08f36(0x43a)] = _0x90e178, _0x1f63bd[_0xb08f36(0x1126)] = !![];
            else
                this[_0xb08f36(0x1125)](_0x30a322, _0x90e178, 0x4, _0x48a921[_0xb08f36(0xe0d)], _0x213944);
        }
        [_0x5659be(0x112c)](_0xefcf86) {
            var _0x37a474 = this['_propertyMap'][_0xefcf86];
            return _0x37a474 ? _0x37a474['_value'] : null;
        }
        [_0x5659be(0x496)]() {
            this['_propertyMap'] = {};
        }
    }
    _0x40e080[_0x5659be(0x112d)] = 0x0, _0x40e080[_0x5659be(0x112e)] = 0x1;
    class _0x530394 {
        constructor(_0x4f1b16 = 0x0, _0x336ae8 = 0x0, _0x1ad203 = 0x0, _0x391df2 = 0x0) {
            var _0x503721 = _0x5659be, _0x2994a6 = this[_0x503721(0x1f6)] = new Float32Array(0x4);
            _0x2994a6[0x0] = _0x4f1b16, _0x2994a6[0x1] = _0x336ae8, _0x2994a6[0x2] = _0x1ad203, _0x2994a6[0x3] = _0x391df2;
        }
        get ['x']() {
            var _0x51bc95 = _0x5659be;
            return this[_0x51bc95(0x1f6)][0x0];
        }
        set ['x'](_0xc67210) {
            var _0x4ce6de = _0x5659be;
            this[_0x4ce6de(0x1f6)][0x0] = _0xc67210;
        }
        get ['y']() {
            var _0x803ccc = _0x5659be;
            return this[_0x803ccc(0x1f6)][0x1];
        }
        set ['y'](_0x2a0ae4) {
            var _0x42a3dd = _0x5659be;
            this[_0x42a3dd(0x1f6)][0x1] = _0x2a0ae4;
        }
        get ['z']() {
            var _0x1341b5 = _0x5659be;
            return this[_0x1341b5(0x1f6)][0x2];
        }
        set ['z'](_0x5928f8) {
            var _0x574ed2 = _0x5659be;
            this[_0x574ed2(0x1f6)][0x2] = _0x5928f8;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x39915f) {
            var _0x4a728f = _0x5659be;
            this[_0x4a728f(0x1f6)][0x3] = _0x39915f;
        }
        [_0x5659be(0x1fb)](_0x3a5706, _0x941362 = 0x0) {
            var _0x229704 = _0x5659be;
            this[_0x229704(0x1f6)][0x0] = _0x3a5706[_0x941362 + 0x0], this[_0x229704(0x1f6)][0x1] = _0x3a5706[_0x941362 + 0x1], this[_0x229704(0x1f6)][0x2] = _0x3a5706[_0x941362 + 0x2], this['elements'][0x3] = _0x3a5706[_0x941362 + 0x3];
        }
        ['cloneTo'](_0x5d02f2) {
            var _0x3a9423 = _0x5659be, _0x5c6ebe = _0x5d02f2, _0x37384a = _0x5c6ebe[_0x3a9423(0x1f6)], _0x3fb4ca = this[_0x3a9423(0x1f6)];
            _0x37384a[0x0] = _0x3fb4ca[0x0], _0x37384a[0x1] = _0x3fb4ca[0x1], _0x37384a[0x2] = _0x3fb4ca[0x2], _0x37384a[0x3] = _0x3fb4ca[0x3];
        }
        [_0x5659be(0x1f4)]() {
            var _0x165ffe = _0x5659be, _0xcdd1e8 = new _0x530394();
            return this[_0x165ffe(0x1f0)](_0xcdd1e8), _0xcdd1e8;
        }
        static [_0x5659be(0x1fc)](_0x1e8410, _0x192cb9, _0x5d470d, _0x840a1e) {
            var _0xd772b0 = _0x5659be, _0x50a695 = _0x840a1e[_0xd772b0(0x1f6)], _0xe4f6c9 = _0x1e8410[_0xd772b0(0x1f6)], _0x260066 = _0x192cb9[_0xd772b0(0x1f6)], _0x5015cc = _0xe4f6c9[0x0], _0x4ab110 = _0xe4f6c9[0x1], _0x36ae4f = _0xe4f6c9[0x2], _0x114b52 = _0xe4f6c9[0x3];
            _0x50a695[0x0] = _0x5015cc + _0x5d470d * (_0x260066[0x0] - _0x5015cc), _0x50a695[0x1] = _0x4ab110 + _0x5d470d * (_0x260066[0x1] - _0x4ab110), _0x50a695[0x2] = _0x36ae4f + _0x5d470d * (_0x260066[0x2] - _0x36ae4f), _0x50a695[0x3] = _0x114b52 + _0x5d470d * (_0x260066[0x3] - _0x114b52);
        }
        static [_0x5659be(0x1fd)](_0x36c9a3, _0x5a22d6, _0x328d96) {
            var _0x2c3d14 = _0x5659be, _0x5c09d2 = _0x36c9a3[_0x2c3d14(0x1f6)], _0x417f25 = _0x5c09d2[0x0], _0x15e3b7 = _0x5c09d2[0x1], _0x2583af = _0x5c09d2[0x2], _0x5d82dd = _0x5c09d2[0x3], _0xbca008 = _0x5a22d6[_0x2c3d14(0x1f6)], _0x10e20e = _0x328d96[_0x2c3d14(0x1f6)];
            _0x10e20e[0x0] = _0x417f25 * _0xbca008[0x0] + _0x15e3b7 * _0xbca008[0x4] + _0x2583af * _0xbca008[0x8] + _0x5d82dd * _0xbca008[0xc], _0x10e20e[0x1] = _0x417f25 * _0xbca008[0x1] + _0x15e3b7 * _0xbca008[0x5] + _0x2583af * _0xbca008[0x9] + _0x5d82dd * _0xbca008[0xd], _0x10e20e[0x2] = _0x417f25 * _0xbca008[0x2] + _0x15e3b7 * _0xbca008[0x6] + _0x2583af * _0xbca008[0xa] + _0x5d82dd * _0xbca008[0xe], _0x10e20e[0x3] = _0x417f25 * _0xbca008[0x3] + _0x15e3b7 * _0xbca008[0x7] + _0x2583af * _0xbca008[0xb] + _0x5d82dd * _0xbca008[0xf];
        }
        static [_0x5659be(0x1fe)](_0x1d0484, _0xbce993) {
            var _0x1ca75f = _0x5659be, _0x146b07 = _0x1d0484[_0x1ca75f(0x1f6)], _0x109fe2 = _0xbce993['elements'];
            return _0x57b8d6[_0x1ca75f(0x1e8)](Math[_0x1ca75f(0x1e7)](_0x146b07[0x0]), Math[_0x1ca75f(0x1e7)](_0x109fe2[0x0])) && _0x57b8d6[_0x1ca75f(0x1e8)](Math[_0x1ca75f(0x1e7)](_0x146b07[0x1]), Math['abs'](_0x109fe2[0x1])) && _0x57b8d6[_0x1ca75f(0x1e8)](Math[_0x1ca75f(0x1e7)](_0x146b07[0x2]), Math[_0x1ca75f(0x1e7)](_0x109fe2[0x2])) && _0x57b8d6[_0x1ca75f(0x1e8)](Math[_0x1ca75f(0x1e7)](_0x146b07[0x3]), Math[_0x1ca75f(0x1e7)](_0x109fe2[0x3]));
        }
        ['length']() {
            var _0x56cac5 = _0x5659be;
            return Math[_0x56cac5(0x1ea)](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        [_0x5659be(0x200)]() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static [_0x5659be(0x1f2)](_0xabed1d, _0x8fed5d) {
            var _0x438504 = _0x5659be, _0x108af5 = _0xabed1d[_0x438504(0x1f6)], _0x5a782e = _0x8fed5d[_0x438504(0x1f6)], _0x260fc7 = _0xabed1d[_0x438504(0x1ff)]();
            _0x260fc7 > 0x0 && (_0x5a782e[0x0] = _0x108af5[0x0] * _0x260fc7, _0x5a782e[0x1] = _0x108af5[0x1] * _0x260fc7, _0x5a782e[0x2] = _0x108af5[0x2] * _0x260fc7, _0x5a782e[0x3] = _0x108af5[0x3] * _0x260fc7);
        }
        static [_0x5659be(0x201)](_0x12979c, _0xee5852, _0x44750b) {
            var _0x298a8d = _0x5659be, _0x3f7980 = _0x44750b['elements'], _0x3077b2 = _0x12979c[_0x298a8d(0x1f6)], _0x222c61 = _0xee5852['elements'];
            _0x3f7980[0x0] = _0x3077b2[0x0] + _0x222c61[0x0], _0x3f7980[0x1] = _0x3077b2[0x1] + _0x222c61[0x1], _0x3f7980[0x2] = _0x3077b2[0x2] + _0x222c61[0x2], _0x3f7980[0x3] = _0x3077b2[0x3] + _0x222c61[0x3];
        }
        static [_0x5659be(0x210)](_0x68d93b, _0x2c5a10, _0xfd4ff1) {
            var _0x20fa7b = _0x5659be, _0x570b8f = _0xfd4ff1[_0x20fa7b(0x1f6)], _0x4aa188 = _0x68d93b[_0x20fa7b(0x1f6)], _0x4444b0 = _0x2c5a10[_0x20fa7b(0x1f6)];
            _0x570b8f[0x0] = _0x4aa188[0x0] - _0x4444b0[0x0], _0x570b8f[0x1] = _0x4aa188[0x1] - _0x4444b0[0x1], _0x570b8f[0x2] = _0x4aa188[0x2] - _0x4444b0[0x2], _0x570b8f[0x3] = _0x4aa188[0x3] - _0x4444b0[0x3];
        }
        static [_0x5659be(0x202)](_0x541eca, _0x48d347, _0x51e583) {
            var _0xbb6ef2 = _0x5659be, _0x3d2b33 = _0x51e583[_0xbb6ef2(0x1f6)], _0x49341f = _0x541eca[_0xbb6ef2(0x1f6)], _0x1ad271 = _0x48d347['elements'];
            _0x3d2b33[0x0] = _0x49341f[0x0] * _0x1ad271[0x0], _0x3d2b33[0x1] = _0x49341f[0x1] * _0x1ad271[0x1], _0x3d2b33[0x2] = _0x49341f[0x2] * _0x1ad271[0x2], _0x3d2b33[0x3] = _0x49341f[0x3] * _0x1ad271[0x3];
        }
        static [_0x5659be(0x1ee)](_0x46ccb2, _0x484daf, _0x11ac91) {
            var _0x2db4a5 = _0x5659be, _0x32e816 = _0x11ac91[_0x2db4a5(0x1f6)], _0x4515ae = _0x46ccb2['elements'];
            _0x32e816[0x0] = _0x4515ae[0x0] * _0x484daf, _0x32e816[0x1] = _0x4515ae[0x1] * _0x484daf, _0x32e816[0x2] = _0x4515ae[0x2] * _0x484daf, _0x32e816[0x3] = _0x4515ae[0x3] * _0x484daf;
        }
        static ['Clamp'](_0x7a75f2, _0x3d9a60, _0x3bbbdf, _0x4f1d18) {
            var _0x43af93 = _0x5659be, _0x29a167 = _0x7a75f2['elements'], _0x9db22b = _0x29a167[0x0], _0x2191ca = _0x29a167[0x1], _0x19f240 = _0x29a167[0x2], _0x2000e0 = _0x29a167[0x3], _0x55706f = _0x3d9a60[_0x43af93(0x1f6)], _0x318168 = _0x55706f[0x0], _0x1aaf86 = _0x55706f[0x1], _0x224b79 = _0x55706f[0x2], _0x686731 = _0x55706f[0x3], _0x1cd4b1 = _0x3bbbdf['elements'], _0x3e998a = _0x1cd4b1[0x0], _0x1de124 = _0x1cd4b1[0x1], _0x1f5946 = _0x1cd4b1[0x2], _0xd19795 = _0x1cd4b1[0x3], _0x355657 = _0x4f1d18['elements'];
            _0x9db22b = _0x9db22b > _0x3e998a ? _0x3e998a : _0x9db22b, _0x9db22b = _0x9db22b < _0x318168 ? _0x318168 : _0x9db22b, _0x2191ca = _0x2191ca > _0x1de124 ? _0x1de124 : _0x2191ca, _0x2191ca = _0x2191ca < _0x1aaf86 ? _0x1aaf86 : _0x2191ca, _0x19f240 = _0x19f240 > _0x1f5946 ? _0x1f5946 : _0x19f240, _0x19f240 = _0x19f240 < _0x224b79 ? _0x224b79 : _0x19f240, _0x2000e0 = _0x2000e0 > _0xd19795 ? _0xd19795 : _0x2000e0, _0x2000e0 = _0x2000e0 < _0x686731 ? _0x686731 : _0x2000e0, _0x355657[0x0] = _0x9db22b, _0x355657[0x1] = _0x2191ca, _0x355657[0x2] = _0x19f240, _0x355657[0x3] = _0x2000e0;
        }
        static ['distanceSquared'](_0x43f2d4, _0x3c7278) {
            var _0x5564cf = _0x43f2d4['elements'], _0x2c5973 = _0x3c7278['elements'], _0x256d83 = _0x5564cf[0x0] - _0x2c5973[0x0], _0x5c4bc4 = _0x5564cf[0x1] - _0x2c5973[0x1], _0x2c0b4e = _0x5564cf[0x2] - _0x2c5973[0x2], _0x448f60 = _0x5564cf[0x3] - _0x2c5973[0x3];
            return _0x256d83 * _0x256d83 + _0x5c4bc4 * _0x5c4bc4 + _0x2c0b4e * _0x2c0b4e + _0x448f60 * _0x448f60;
        }
        static [_0x5659be(0x208)](_0x546bc7, _0x212f9a) {
            var _0x496bfd = _0x5659be, _0x10b603 = _0x546bc7[_0x496bfd(0x1f6)], _0x50938e = _0x212f9a[_0x496bfd(0x1f6)], _0x21af01 = _0x10b603[0x0] - _0x50938e[0x0], _0x260420 = _0x10b603[0x1] - _0x50938e[0x1], _0x362297 = _0x10b603[0x2] - _0x50938e[0x2], _0x407fa5 = _0x10b603[0x3] - _0x50938e[0x3];
            return Math['sqrt'](_0x21af01 * _0x21af01 + _0x260420 * _0x260420 + _0x362297 * _0x362297 + _0x407fa5 * _0x407fa5);
        }
        static ['dot'](_0x94eb3e, _0x2353f1) {
            var _0x23f46f = _0x5659be, _0x4c97fe = _0x94eb3e[_0x23f46f(0x1f6)], _0x27c3c1 = _0x2353f1['elements'], _0x1b7b3f = _0x4c97fe[0x0] * _0x27c3c1[0x0] + _0x4c97fe[0x1] * _0x27c3c1[0x1] + _0x4c97fe[0x2] * _0x27c3c1[0x2] + _0x4c97fe[0x3] * _0x27c3c1[0x3];
            return _0x1b7b3f;
        }
        static [_0x5659be(0x204)](_0xc3bfb9, _0xb820e4, _0x31c177) {
            var _0x4dbbf9 = _0x5659be, _0x24832d = _0x31c177['elements'], _0x65ad09 = _0xc3bfb9['elements'], _0x5b226b = _0xb820e4[_0x4dbbf9(0x1f6)];
            _0x24832d[0x0] = Math[_0x4dbbf9(0x204)](_0x65ad09[0x0], _0x5b226b[0x0]), _0x24832d[0x1] = Math[_0x4dbbf9(0x204)](_0x65ad09[0x1], _0x5b226b[0x1]), _0x24832d[0x2] = Math[_0x4dbbf9(0x204)](_0x65ad09[0x2], _0x5b226b[0x2]), _0x24832d[0x3] = Math[_0x4dbbf9(0x204)](_0x65ad09[0x3], _0x5b226b[0x3]);
        }
        static [_0x5659be(0x205)](_0x38f3c8, _0x387e0b, _0x5296fb) {
            var _0x367fbe = _0x5659be, _0x1fb354 = _0x5296fb[_0x367fbe(0x1f6)], _0x24f9d4 = _0x38f3c8[_0x367fbe(0x1f6)], _0xa380f = _0x387e0b[_0x367fbe(0x1f6)];
            _0x1fb354[0x0] = Math[_0x367fbe(0x205)](_0x24f9d4[0x0], _0xa380f[0x0]), _0x1fb354[0x1] = Math['max'](_0x24f9d4[0x1], _0xa380f[0x1]), _0x1fb354[0x2] = Math[_0x367fbe(0x205)](_0x24f9d4[0x2], _0xa380f[0x2]), _0x1fb354[0x3] = Math['max'](_0x24f9d4[0x3], _0xa380f[0x3]);
        }
    }
    _0x530394[_0x5659be(0x1f8)] = new _0x530394(), _0x530394[_0x5659be(0x1f9)] = new _0x530394(0x1, 0x1, 0x1, 0x1), _0x530394[_0x5659be(0x112f)] = new _0x530394(0x1, 0x0, 0x0, 0x0), _0x530394[_0x5659be(0x1130)] = new _0x530394(0x0, 0x1, 0x0, 0x0), _0x530394[_0x5659be(0x206)] = new _0x530394(0x0, 0x0, 0x1, 0x0), _0x530394[_0x5659be(0x207)] = new _0x530394(0x0, 0x0, 0x0, 0x1);
    class _0x20e4e3 {
        constructor(_0x57affa = 0x0, _0x293f80 = 0x0, _0x174839 = 0x0, _0x603abf = null) {
            var _0x2ddcbf = _0x5659be, _0xa3ac1f;
            _0x603abf ? _0xa3ac1f = _0x603abf : _0xa3ac1f = new Float32Array(0x3), this[_0x2ddcbf(0x1f6)] = _0xa3ac1f, _0xa3ac1f[0x0] = _0x57affa, _0xa3ac1f[0x1] = _0x293f80, _0xa3ac1f[0x2] = _0x174839;
        }
        static [_0x5659be(0x203)](_0x462151, _0x3b1bf3) {
            var _0x59cc2c = _0x462151['elements'], _0x9748d = _0x3b1bf3['elements'], _0x5815fc = _0x59cc2c[0x0] - _0x9748d[0x0], _0x19e24e = _0x59cc2c[0x1] - _0x9748d[0x1], _0x253615 = _0x59cc2c[0x2] - _0x9748d[0x2];
            return _0x5815fc * _0x5815fc + _0x19e24e * _0x19e24e + _0x253615 * _0x253615;
        }
        static [_0x5659be(0x208)](_0x58ffa1, _0x4652cc) {
            var _0x205028 = _0x5659be, _0x192e42 = _0x58ffa1[_0x205028(0x1f6)], _0x2cb175 = _0x4652cc[_0x205028(0x1f6)], _0x1308c7 = _0x192e42[0x0] - _0x2cb175[0x0], _0x2f708f = _0x192e42[0x1] - _0x2cb175[0x1], _0x5b7eba = _0x192e42[0x2] - _0x2cb175[0x2];
            return Math[_0x205028(0x1ea)](_0x1308c7 * _0x1308c7 + _0x2f708f * _0x2f708f + _0x5b7eba * _0x5b7eba);
        }
        static ['min'](_0x10a1e6, _0x9a5815, _0x28e33d) {
            var _0x4a4d53 = _0x5659be, _0x284808 = _0x28e33d[_0x4a4d53(0x1f6)], _0x554edb = _0x10a1e6[_0x4a4d53(0x1f6)], _0x49862c = _0x9a5815[_0x4a4d53(0x1f6)];
            _0x284808[0x0] = Math[_0x4a4d53(0x204)](_0x554edb[0x0], _0x49862c[0x0]), _0x284808[0x1] = Math[_0x4a4d53(0x204)](_0x554edb[0x1], _0x49862c[0x1]), _0x284808[0x2] = Math[_0x4a4d53(0x204)](_0x554edb[0x2], _0x49862c[0x2]);
        }
        static ['max'](_0x50f029, _0x4b84fb, _0x173c2c) {
            var _0x1a0bc9 = _0x5659be, _0x15cb75 = _0x173c2c[_0x1a0bc9(0x1f6)], _0x14ba31 = _0x50f029['elements'], _0x4f9334 = _0x4b84fb[_0x1a0bc9(0x1f6)];
            _0x15cb75[0x0] = Math[_0x1a0bc9(0x205)](_0x14ba31[0x0], _0x4f9334[0x0]), _0x15cb75[0x1] = Math[_0x1a0bc9(0x205)](_0x14ba31[0x1], _0x4f9334[0x1]), _0x15cb75[0x2] = Math[_0x1a0bc9(0x205)](_0x14ba31[0x2], _0x4f9334[0x2]);
        }
        static [_0x5659be(0x209)](_0x57b482, _0x746a05, _0x4aa9dd) {
            var _0x1a3c8e = _0x5659be, _0x37f522 = _0x4aa9dd['elements'], _0x1dd530 = _0x57b482[_0x1a3c8e(0x1f6)], _0x5ae8a3 = _0x746a05['elements'], _0x556a94 = _0x1dd530[0x0], _0x1b4261 = _0x1dd530[0x1], _0x308452 = _0x1dd530[0x2], _0x5b70d0 = _0x5ae8a3[0x0], _0x2a6882 = _0x5ae8a3[0x1], _0x32a1e3 = _0x5ae8a3[0x2], _0x34dc74 = _0x5ae8a3[0x3], _0x28f78b = _0x34dc74 * _0x556a94 + _0x2a6882 * _0x308452 - _0x32a1e3 * _0x1b4261, _0xdc83a7 = _0x34dc74 * _0x1b4261 + _0x32a1e3 * _0x556a94 - _0x5b70d0 * _0x308452, _0x5ab33d = _0x34dc74 * _0x308452 + _0x5b70d0 * _0x1b4261 - _0x2a6882 * _0x556a94, _0x4ca1e2 = -_0x5b70d0 * _0x556a94 - _0x2a6882 * _0x1b4261 - _0x32a1e3 * _0x308452;
            _0x37f522[0x0] = _0x28f78b * _0x34dc74 + _0x4ca1e2 * -_0x5b70d0 + _0xdc83a7 * -_0x32a1e3 - _0x5ab33d * -_0x2a6882, _0x37f522[0x1] = _0xdc83a7 * _0x34dc74 + _0x4ca1e2 * -_0x2a6882 + _0x5ab33d * -_0x5b70d0 - _0x28f78b * -_0x32a1e3, _0x37f522[0x2] = _0x5ab33d * _0x34dc74 + _0x4ca1e2 * -_0x32a1e3 + _0x28f78b * -_0x2a6882 - _0xdc83a7 * -_0x5b70d0;
        }
        static [_0x5659be(0x1f3)](_0x541647) {
            var _0x43d868 = _0x5659be, _0x55c689 = _0x541647[_0x43d868(0x1f6)], _0x39cac0 = _0x55c689[0x0], _0x368789 = _0x55c689[0x1], _0x2c3fb5 = _0x55c689[0x2];
            return Math[_0x43d868(0x1ea)](_0x39cac0 * _0x39cac0 + _0x368789 * _0x368789 + _0x2c3fb5 * _0x2c3fb5);
        }
        static [_0x5659be(0x20a)](_0x2c36f9) {
            var _0x58519e = _0x2c36f9['elements'], _0x467304 = _0x58519e[0x0], _0x576958 = _0x58519e[0x1], _0x15499a = _0x58519e[0x2];
            return _0x467304 * _0x467304 + _0x576958 * _0x576958 + _0x15499a * _0x15499a;
        }
        static [_0x5659be(0x1f2)](_0x4a5c30, _0x3f8143) {
            var _0x48c64f = _0x5659be, _0x1b086b = _0x4a5c30[_0x48c64f(0x1f6)], _0x365dde = _0x3f8143[_0x48c64f(0x1f6)], _0x268aec = _0x1b086b[0x0], _0x4e1eb8 = _0x1b086b[0x1], _0xf88400 = _0x1b086b[0x2], _0x46cce0 = _0x268aec * _0x268aec + _0x4e1eb8 * _0x4e1eb8 + _0xf88400 * _0xf88400;
            _0x46cce0 > 0x0 && (_0x46cce0 = 0x1 / Math[_0x48c64f(0x1ea)](_0x46cce0), _0x365dde[0x0] = _0x1b086b[0x0] * _0x46cce0, _0x365dde[0x1] = _0x1b086b[0x1] * _0x46cce0, _0x365dde[0x2] = _0x1b086b[0x2] * _0x46cce0);
        }
        static [_0x5659be(0x202)](_0x23eb85, _0x3ae62a, _0x8c88ab) {
            var _0x39d212 = _0x5659be, _0x28ee42 = _0x8c88ab['elements'], _0x3748a4 = _0x23eb85[_0x39d212(0x1f6)], _0x2860d8 = _0x3ae62a['elements'];
            _0x28ee42[0x0] = _0x3748a4[0x0] * _0x2860d8[0x0], _0x28ee42[0x1] = _0x3748a4[0x1] * _0x2860d8[0x1], _0x28ee42[0x2] = _0x3748a4[0x2] * _0x2860d8[0x2];
        }
        static [_0x5659be(0x1ee)](_0x423658, _0x57998a, _0x2b84d2) {
            var _0x146851 = _0x5659be, _0x135977 = _0x2b84d2[_0x146851(0x1f6)], _0x565a11 = _0x423658[_0x146851(0x1f6)];
            _0x135977[0x0] = _0x565a11[0x0] * _0x57998a, _0x135977[0x1] = _0x565a11[0x1] * _0x57998a, _0x135977[0x2] = _0x565a11[0x2] * _0x57998a;
        }
        static [_0x5659be(0x1fc)](_0x46a761, _0x6695a9, _0x12d797, _0x232480) {
            var _0x53bf79 = _0x5659be, _0x15b52f = _0x232480[_0x53bf79(0x1f6)], _0x3dad15 = _0x46a761[_0x53bf79(0x1f6)], _0x5176e6 = _0x6695a9['elements'], _0x46edcc = _0x3dad15[0x0], _0x14d272 = _0x3dad15[0x1], _0x4a4dea = _0x3dad15[0x2];
            _0x15b52f[0x0] = _0x46edcc + _0x12d797 * (_0x5176e6[0x0] - _0x46edcc), _0x15b52f[0x1] = _0x14d272 + _0x12d797 * (_0x5176e6[0x1] - _0x14d272), _0x15b52f[0x2] = _0x4a4dea + _0x12d797 * (_0x5176e6[0x2] - _0x4a4dea);
        }
        static [_0x5659be(0x20b)](_0x460126, _0x114244, _0x38dca3) {
            var _0x5dcce7 = _0x5659be, _0x29f340 = _0x20e4e3[_0x5dcce7(0x213)];
            _0x20e4e3[_0x5dcce7(0x20c)](_0x460126, _0x114244, _0x29f340);
            var _0x4d5eaa = _0x29f340[_0x5dcce7(0x1f6)], _0x1933ef = _0x38dca3[_0x5dcce7(0x1f6)];
            _0x1933ef[0x0] = _0x4d5eaa[0x0], _0x1933ef[0x1] = _0x4d5eaa[0x1], _0x1933ef[0x2] = _0x4d5eaa[0x2];
        }
        static [_0x5659be(0x20c)](_0x2ce085, _0x314f80, _0x37b082) {
            var _0x3360cd = _0x5659be, _0x17d8d9 = _0x2ce085['elements'], _0xeeb6ef = _0x17d8d9[0x0], _0x5b2668 = _0x17d8d9[0x1], _0x950d34 = _0x17d8d9[0x2], _0x22a9cc = _0x314f80[_0x3360cd(0x1f6)], _0x2118e7 = _0x37b082[_0x3360cd(0x1f6)];
            _0x2118e7[0x0] = _0xeeb6ef * _0x22a9cc[0x0] + _0x5b2668 * _0x22a9cc[0x4] + _0x950d34 * _0x22a9cc[0x8] + _0x22a9cc[0xc], _0x2118e7[0x1] = _0xeeb6ef * _0x22a9cc[0x1] + _0x5b2668 * _0x22a9cc[0x5] + _0x950d34 * _0x22a9cc[0x9] + _0x22a9cc[0xd], _0x2118e7[0x2] = _0xeeb6ef * _0x22a9cc[0x2] + _0x5b2668 * _0x22a9cc[0x6] + _0x950d34 * _0x22a9cc[0xa] + _0x22a9cc[0xe], _0x2118e7[0x3] = _0xeeb6ef * _0x22a9cc[0x3] + _0x5b2668 * _0x22a9cc[0x7] + _0x950d34 * _0x22a9cc[0xb] + _0x22a9cc[0xf];
        }
        static [_0x5659be(0x20d)](_0x2088e9, _0xfdb695, _0x554dc0) {
            var _0x118d23 = _0x5659be, _0x448f3c = _0x2088e9[_0x118d23(0x1f6)], _0x54d3e7 = _0x448f3c[0x0], _0x615305 = _0x448f3c[0x1], _0x224325 = _0x448f3c[0x2], _0x542983 = _0xfdb695[_0x118d23(0x1f6)], _0x59b4ca = _0x554dc0[_0x118d23(0x1f6)];
            _0x59b4ca[0x0] = _0x54d3e7 * _0x542983[0x0] + _0x615305 * _0x542983[0x4] + _0x224325 * _0x542983[0x8], _0x59b4ca[0x1] = _0x54d3e7 * _0x542983[0x1] + _0x615305 * _0x542983[0x5] + _0x224325 * _0x542983[0x9], _0x59b4ca[0x2] = _0x54d3e7 * _0x542983[0x2] + _0x615305 * _0x542983[0x6] + _0x224325 * _0x542983[0xa];
        }
        static ['transformCoordinate'](_0x560657, _0x6640ed, _0x4963dc) {
            var _0x1025da = _0x5659be, _0x5d43c0 = _0x560657[_0x1025da(0x1f6)], _0x3efa9b = _0x5d43c0[0x0], _0x4d7d60 = _0x5d43c0[0x1], _0x2ccb35 = _0x5d43c0[0x2], _0x3f21ff = _0x6640ed[_0x1025da(0x1f6)], _0x268115 = _0x3efa9b * _0x3f21ff[0x3] + _0x4d7d60 * _0x3f21ff[0x7] + _0x2ccb35 * _0x3f21ff[0xb] + _0x3f21ff[0xf], _0x142a17 = _0x4963dc['elements'];
            _0x142a17[0x0] = _0x3efa9b * _0x3f21ff[0x0] + _0x4d7d60 * _0x3f21ff[0x4] + _0x2ccb35 * _0x3f21ff[0x8] + _0x3f21ff[0xc] / _0x268115, _0x142a17[0x1] = _0x3efa9b * _0x3f21ff[0x1] + _0x4d7d60 * _0x3f21ff[0x5] + _0x2ccb35 * _0x3f21ff[0x9] + _0x3f21ff[0xd] / _0x268115, _0x142a17[0x2] = _0x3efa9b * _0x3f21ff[0x2] + _0x4d7d60 * _0x3f21ff[0x6] + _0x2ccb35 * _0x3f21ff[0xa] + _0x3f21ff[0xe] / _0x268115;
        }
        static [_0x5659be(0x20f)](_0x4fea71, _0x71b8c, _0x4a4aac, _0x1ade8e) {
            var _0x47e03f = _0x5659be, _0x56de12 = _0x4fea71['elements'], _0x4f992e = _0x56de12[0x0], _0xe2c34e = _0x56de12[0x1], _0x3fe804 = _0x56de12[0x2], _0x43e02f = _0x71b8c[_0x47e03f(0x1f6)], _0xed6767 = _0x43e02f[0x0], _0x1fc4c7 = _0x43e02f[0x1], _0x32afa9 = _0x43e02f[0x2], _0x4ff026 = _0x4a4aac[_0x47e03f(0x1f6)], _0x4c6be3 = _0x4ff026[0x0], _0x12dc73 = _0x4ff026[0x1], _0x469034 = _0x4ff026[0x2], _0x446a56 = _0x1ade8e['elements'];
            _0x4f992e = _0x4f992e > _0x4c6be3 ? _0x4c6be3 : _0x4f992e, _0x4f992e = _0x4f992e < _0xed6767 ? _0xed6767 : _0x4f992e, _0xe2c34e = _0xe2c34e > _0x12dc73 ? _0x12dc73 : _0xe2c34e, _0xe2c34e = _0xe2c34e < _0x1fc4c7 ? _0x1fc4c7 : _0xe2c34e, _0x3fe804 = _0x3fe804 > _0x469034 ? _0x469034 : _0x3fe804, _0x3fe804 = _0x3fe804 < _0x32afa9 ? _0x32afa9 : _0x3fe804, _0x446a56[0x0] = _0x4f992e, _0x446a56[0x1] = _0xe2c34e, _0x446a56[0x2] = _0x3fe804;
        }
        static [_0x5659be(0x201)](_0x3497d1, _0x5cba39, _0x51c80d) {
            var _0x585f87 = _0x5659be, _0x5b2227 = _0x51c80d[_0x585f87(0x1f6)], _0x1df58c = _0x3497d1[_0x585f87(0x1f6)], _0x30a98d = _0x5cba39[_0x585f87(0x1f6)];
            _0x5b2227[0x0] = _0x1df58c[0x0] + _0x30a98d[0x0], _0x5b2227[0x1] = _0x1df58c[0x1] + _0x30a98d[0x1], _0x5b2227[0x2] = _0x1df58c[0x2] + _0x30a98d[0x2];
        }
        static ['subtract'](_0x3c880c, _0x47caf0, _0x219636) {
            var _0x5edbad = _0x5659be, _0x3400c2 = _0x219636[_0x5edbad(0x1f6)], _0x29137d = _0x3c880c[_0x5edbad(0x1f6)], _0x4c0cbd = _0x47caf0[_0x5edbad(0x1f6)];
            _0x3400c2[0x0] = _0x29137d[0x0] - _0x4c0cbd[0x0], _0x3400c2[0x1] = _0x29137d[0x1] - _0x4c0cbd[0x1], _0x3400c2[0x2] = _0x29137d[0x2] - _0x4c0cbd[0x2];
        }
        static [_0x5659be(0x211)](_0x14ddc1, _0x25e360, _0x39c714) {
            var _0x5727f7 = _0x5659be, _0x4899b8 = _0x14ddc1[_0x5727f7(0x1f6)], _0x28b5e7 = _0x25e360[_0x5727f7(0x1f6)], _0x33c2b5 = _0x39c714[_0x5727f7(0x1f6)], _0x2ca136 = _0x4899b8[0x0], _0x4cd79b = _0x4899b8[0x1], _0x571b19 = _0x4899b8[0x2], _0x2e81ce = _0x28b5e7[0x0], _0x309212 = _0x28b5e7[0x1], _0x51113b = _0x28b5e7[0x2];
            _0x33c2b5[0x0] = _0x4cd79b * _0x51113b - _0x571b19 * _0x309212, _0x33c2b5[0x1] = _0x571b19 * _0x2e81ce - _0x2ca136 * _0x51113b, _0x33c2b5[0x2] = _0x2ca136 * _0x309212 - _0x4cd79b * _0x2e81ce;
        }
        static ['dot'](_0x3616ba, _0x54ccb8) {
            var _0x2266b9 = _0x5659be, _0x1e0bd3 = _0x3616ba[_0x2266b9(0x1f6)], _0x534564 = _0x54ccb8[_0x2266b9(0x1f6)], _0x2ece1f = _0x1e0bd3[0x0] * _0x534564[0x0] + _0x1e0bd3[0x1] * _0x534564[0x1] + _0x1e0bd3[0x2] * _0x534564[0x2];
            return _0x2ece1f;
        }
        static [_0x5659be(0x1fe)](_0x15970a, _0x51f47a) {
            var _0xd5eb32 = _0x5659be, _0x22486e = _0x15970a[_0xd5eb32(0x1f6)], _0x4af8c9 = _0x51f47a[_0xd5eb32(0x1f6)];
            return _0x57b8d6[_0xd5eb32(0x1e8)](_0x22486e[0x0], _0x4af8c9[0x0]) && _0x57b8d6[_0xd5eb32(0x1e8)](_0x22486e[0x1], _0x4af8c9[0x1]) && _0x57b8d6[_0xd5eb32(0x1e8)](_0x22486e[0x2], _0x4af8c9[0x2]);
        }
        get ['x']() {
            var _0x1b06e2 = _0x5659be;
            return this[_0x1b06e2(0x1f6)][0x0];
        }
        set ['x'](_0x509431) {
            this['elements'][0x0] = _0x509431;
        }
        get ['y']() {
            var _0xbab693 = _0x5659be;
            return this[_0xbab693(0x1f6)][0x1];
        }
        set ['y'](_0x496b8a) {
            var _0x317752 = _0x5659be;
            this[_0x317752(0x1f6)][0x1] = _0x496b8a;
        }
        get ['z']() {
            var _0x557a45 = _0x5659be;
            return this[_0x557a45(0x1f6)][0x2];
        }
        set ['z'](_0x12ec96) {
            var _0x393816 = _0x5659be;
            this[_0x393816(0x1f6)][0x2] = _0x12ec96;
        }
        [_0x5659be(0x1fa)](_0x35b160, _0x1ed508, _0x4f5456) {
            var _0x29b815 = _0x5659be;
            this[_0x29b815(0x1f6)][0x0] = _0x35b160, this[_0x29b815(0x1f6)][0x1] = _0x1ed508, this[_0x29b815(0x1f6)][0x2] = _0x4f5456;
        }
        [_0x5659be(0x1fb)](_0x22059b, _0x376949 = 0x0) {
            var _0x1dc759 = _0x5659be;
            this[_0x1dc759(0x1f6)][0x0] = _0x22059b[_0x376949 + 0x0], this[_0x1dc759(0x1f6)][0x1] = _0x22059b[_0x376949 + 0x1], this[_0x1dc759(0x1f6)][0x2] = _0x22059b[_0x376949 + 0x2];
        }
        [_0x5659be(0x1f0)](_0x4675a4) {
            var _0x5a2bd7 = _0x4675a4, _0x3fe910 = _0x5a2bd7['elements'], _0x42b484 = this['elements'];
            _0x3fe910[0x0] = _0x42b484[0x0], _0x3fe910[0x1] = _0x42b484[0x1], _0x3fe910[0x2] = _0x42b484[0x2];
        }
        [_0x5659be(0x1f4)]() {
            var _0x185427 = _0x5659be, _0x2bb6cc = new _0x20e4e3();
            return this[_0x185427(0x1f0)](_0x2bb6cc), _0x2bb6cc;
        }
        [_0x5659be(0x212)]() {
            var _0x1dde9f = _0x5659be;
            this[_0x1dde9f(0x1f6)][0x0] = 0x0, this[_0x1dde9f(0x1f6)][0x1] = 0x0, this['elements'][0x2] = 0x0;
        }
    }
    _0x20e4e3['_tempVector4'] = new _0x530394(), _0x20e4e3[_0x5659be(0x1f8)] = new _0x20e4e3(0x0, 0x0, 0x0), _0x20e4e3[_0x5659be(0x1f9)] = new _0x20e4e3(0x1, 0x1, 0x1), _0x20e4e3[_0x5659be(0x1131)] = new _0x20e4e3(-0x1, 0x0, 0x0), _0x20e4e3['UnitX'] = new _0x20e4e3(0x1, 0x0, 0x0), _0x20e4e3['UnitY'] = new _0x20e4e3(0x0, 0x1, 0x0), _0x20e4e3['UnitZ'] = new _0x20e4e3(0x0, 0x0, 0x1), _0x20e4e3[_0x5659be(0x1132)] = new _0x20e4e3(0x0, 0x0, -0x1), _0x20e4e3['ForwardLH'] = new _0x20e4e3(0x0, 0x0, 0x1), _0x20e4e3['Up'] = new _0x20e4e3(0x0, 0x1, 0x0), _0x20e4e3[_0x5659be(0x291)] = new _0x20e4e3(NaN, NaN, NaN);
    class _0x39a223 {
        constructor(_0x2b2975 = 0x0, _0x42a298 = 0x0, _0x324f54 = 0x0, _0x46c1c9 = 0x1, _0x5dfa60 = null) {
            var _0x52ceb6 = _0x5659be, _0x4cdfb9;
            _0x5dfa60 ? _0x4cdfb9 = _0x5dfa60 : _0x4cdfb9 = new Float32Array(0x4), _0x4cdfb9[0x0] = _0x2b2975, _0x4cdfb9[0x1] = _0x42a298, _0x4cdfb9[0x2] = _0x324f54, _0x4cdfb9[0x3] = _0x46c1c9, this[_0x52ceb6(0x1f6)] = _0x4cdfb9;
        }
        static [_0x5659be(0x1133)](_0x3ad2d1, _0x285c18) {
            return _0x3ad2d1[0x0] * _0x285c18[0x0] + _0x3ad2d1[0x1] * _0x285c18[0x1] + _0x3ad2d1[0x2] * _0x285c18[0x2] + _0x3ad2d1[0x3] * _0x285c18[0x3];
        }
        static [_0x5659be(0x1134)](_0x17e340, _0x6aab3e) {
            var _0xdd5c1b = _0x5659be, _0xcb73fb = _0x17e340[0x0], _0x505439 = _0x17e340[0x1], _0xc9fd97 = _0x17e340[0x2], _0x2f9bcb = _0x17e340[0x3], _0x1b5f1e = _0xcb73fb * _0xcb73fb + _0x505439 * _0x505439 + _0xc9fd97 * _0xc9fd97 + _0x2f9bcb * _0x2f9bcb;
            _0x1b5f1e > 0x0 && (_0x1b5f1e = 0x1 / Math[_0xdd5c1b(0x1ea)](_0x1b5f1e), _0x6aab3e[0x0] = _0xcb73fb * _0x1b5f1e, _0x6aab3e[0x1] = _0x505439 * _0x1b5f1e, _0x6aab3e[0x2] = _0xc9fd97 * _0x1b5f1e, _0x6aab3e[0x3] = _0x2f9bcb * _0x1b5f1e);
        }
        static ['_lerpArray'](_0x3ed9fb, _0x271150, _0x4fe37, _0x3cdbb2) {
            var _0x47d51f = _0x5659be, _0xd4df6c = 0x1 - _0x4fe37;
            _0x39a223[_0x47d51f(0x1133)](_0x3ed9fb, _0x271150) >= 0x0 ? (_0x3cdbb2[0x0] = _0xd4df6c * _0x3ed9fb[0x0] + _0x4fe37 * _0x271150[0x0], _0x3cdbb2[0x1] = _0xd4df6c * _0x3ed9fb[0x1] + _0x4fe37 * _0x271150[0x1], _0x3cdbb2[0x2] = _0xd4df6c * _0x3ed9fb[0x2] + _0x4fe37 * _0x271150[0x2], _0x3cdbb2[0x3] = _0xd4df6c * _0x3ed9fb[0x3] + _0x4fe37 * _0x271150[0x3]) : (_0x3cdbb2[0x0] = _0xd4df6c * _0x3ed9fb[0x0] - _0x4fe37 * _0x271150[0x0], _0x3cdbb2[0x1] = _0xd4df6c * _0x3ed9fb[0x1] - _0x4fe37 * _0x271150[0x1], _0x3cdbb2[0x2] = _0xd4df6c * _0x3ed9fb[0x2] - _0x4fe37 * _0x271150[0x2], _0x3cdbb2[0x3] = _0xd4df6c * _0x3ed9fb[0x3] - _0x4fe37 * _0x271150[0x3]), _0x39a223[_0x47d51f(0x1134)](_0x3cdbb2, _0x3cdbb2);
        }
        static [_0x5659be(0x471)](_0x5c6c54, _0x1dfc54, _0x501ea2, _0x16753a) {
            var _0x572683 = _0x5659be, _0x7bcb49 = _0x501ea2 * 0.5, _0x3421e7 = _0x1dfc54 * 0.5, _0x3a02fa = _0x5c6c54 * 0.5, _0x119bd2 = Math[_0x572683(0x26f)](_0x7bcb49), _0x3b0a72 = Math[_0x572683(0x270)](_0x7bcb49), _0x308504 = Math[_0x572683(0x26f)](_0x3421e7), _0x4b9c70 = Math[_0x572683(0x270)](_0x3421e7), _0x7a5d5b = Math[_0x572683(0x26f)](_0x3a02fa), _0x10363f = Math[_0x572683(0x270)](_0x3a02fa), _0x24f23e = _0x16753a[_0x572683(0x1f6)];
            _0x24f23e[0x0] = _0x10363f * _0x308504 * _0x3b0a72 + _0x7a5d5b * _0x4b9c70 * _0x119bd2, _0x24f23e[0x1] = _0x7a5d5b * _0x4b9c70 * _0x3b0a72 - _0x10363f * _0x308504 * _0x119bd2, _0x24f23e[0x2] = _0x10363f * _0x4b9c70 * _0x119bd2 - _0x7a5d5b * _0x308504 * _0x3b0a72, _0x24f23e[0x3] = _0x10363f * _0x4b9c70 * _0x3b0a72 + _0x7a5d5b * _0x308504 * _0x119bd2;
        }
        static [_0x5659be(0x202)](_0x13f986, _0xbade0d, _0x1dc867) {
            var _0x256aca = _0x5659be, _0x4a1057 = _0x13f986[_0x256aca(0x1f6)], _0x151d2b = _0xbade0d['elements'], _0x364ce5 = _0x1dc867[_0x256aca(0x1f6)], _0x51ab3c = _0x4a1057[0x0], _0x4f50d1 = _0x4a1057[0x1], _0x47a883 = _0x4a1057[0x2], _0x485379 = _0x4a1057[0x3], _0x51a86d = _0x151d2b[0x0], _0x3ddce3 = _0x151d2b[0x1], _0x12ced0 = _0x151d2b[0x2], _0x513ab5 = _0x151d2b[0x3], _0x1e8625 = _0x4f50d1 * _0x12ced0 - _0x47a883 * _0x3ddce3, _0x41dda7 = _0x47a883 * _0x51a86d - _0x51ab3c * _0x12ced0, _0x2ae6e9 = _0x51ab3c * _0x3ddce3 - _0x4f50d1 * _0x51a86d, _0x1d956c = _0x51ab3c * _0x51a86d + _0x4f50d1 * _0x3ddce3 + _0x47a883 * _0x12ced0;
            _0x364ce5[0x0] = _0x51ab3c * _0x513ab5 + _0x51a86d * _0x485379 + _0x1e8625, _0x364ce5[0x1] = _0x4f50d1 * _0x513ab5 + _0x3ddce3 * _0x485379 + _0x41dda7, _0x364ce5[0x2] = _0x47a883 * _0x513ab5 + _0x12ced0 * _0x485379 + _0x2ae6e9, _0x364ce5[0x3] = _0x485379 * _0x513ab5 - _0x1d956c;
        }
        static ['arcTanAngle'](_0x160345, _0x3a1621) {
            var _0x35e866 = _0x5659be;
            if (_0x160345 == 0x0) {
                if (_0x3a1621 == 0x1)
                    return Math['PI'] / 0x2;
                return -Math['PI'] / 0x2;
            }
            if (_0x160345 > 0x0)
                return Math[_0x35e866(0x27c)](_0x3a1621 / _0x160345);
            if (_0x160345 < 0x0) {
                if (_0x3a1621 > 0x0)
                    return Math[_0x35e866(0x27c)](_0x3a1621 / _0x160345) + Math['PI'];
                return Math[_0x35e866(0x27c)](_0x3a1621 / _0x160345) - Math['PI'];
            }
            return 0x0;
        }
        static [_0x5659be(0x27d)](_0x306749, _0x376a90, _0x56d139) {
            var _0xc7e6d2 = _0x5659be;
            _0x20e4e3['subtract'](_0x376a90, _0x306749, _0x39a223[_0xc7e6d2(0x27e)]), _0x20e4e3[_0xc7e6d2(0x1f2)](_0x39a223[_0xc7e6d2(0x27e)], _0x39a223[_0xc7e6d2(0x27e)]), _0x56d139['elements'][0x0] = Math[_0xc7e6d2(0x27f)](_0x39a223[_0xc7e6d2(0x27e)]['y']), _0x56d139[_0xc7e6d2(0x1f6)][0x1] = _0x39a223[_0xc7e6d2(0x27b)](-_0x39a223['TEMPVector30']['z'], -_0x39a223[_0xc7e6d2(0x27e)]['x']);
        }
        static [_0x5659be(0x280)](_0x2c18e2, _0x1213ae, _0x3c86a5) {
            var _0x22936a = _0x5659be, _0x30f85a = _0x3c86a5[_0x22936a(0x1f6)], _0x4c286b = _0x2c18e2[_0x22936a(0x1f6)];
            _0x1213ae = _0x1213ae * 0.5;
            var _0xd44825 = Math[_0x22936a(0x26f)](_0x1213ae);
            _0x30f85a[0x0] = _0xd44825 * _0x4c286b[0x0], _0x30f85a[0x1] = _0xd44825 * _0x4c286b[0x1], _0x30f85a[0x2] = _0xd44825 * _0x4c286b[0x2], _0x30f85a[0x3] = Math[_0x22936a(0x270)](_0x1213ae);
        }
        static [_0x5659be(0x1135)](_0x4460f0, _0x4aa8e7) {
            var _0x250369 = _0x5659be, _0x494475 = _0x4aa8e7[_0x250369(0x1f6)], _0x53ae86 = _0x4460f0[_0x250369(0x1f6)], _0x2226ad = _0x53ae86[0x0] + _0x53ae86[0x4] + _0x53ae86[0x8], _0x1c7e1a;
            if (_0x2226ad > 0x0)
                _0x1c7e1a = Math['sqrt'](_0x2226ad + 0x1), _0x494475[0x3] = 0.5 * _0x1c7e1a, _0x1c7e1a = 0.5 / _0x1c7e1a, _0x494475[0x0] = (_0x53ae86[0x5] - _0x53ae86[0x7]) * _0x1c7e1a, _0x494475[0x1] = (_0x53ae86[0x6] - _0x53ae86[0x2]) * _0x1c7e1a, _0x494475[0x2] = (_0x53ae86[0x1] - _0x53ae86[0x3]) * _0x1c7e1a;
            else {
                var _0x2418bd = 0x0;
                if (_0x53ae86[0x4] > _0x53ae86[0x0])
                    _0x2418bd = 0x1;
                if (_0x53ae86[0x8] > _0x53ae86[_0x2418bd * 0x3 + _0x2418bd])
                    _0x2418bd = 0x2;
                var _0x15e432 = (_0x2418bd + 0x1) % 0x3, _0x349fc1 = (_0x2418bd + 0x2) % 0x3;
                _0x1c7e1a = Math[_0x250369(0x1ea)](_0x53ae86[_0x2418bd * 0x3 + _0x2418bd] - _0x53ae86[_0x15e432 * 0x3 + _0x15e432] - _0x53ae86[_0x349fc1 * 0x3 + _0x349fc1] + 0x1), _0x494475[_0x2418bd] = 0.5 * _0x1c7e1a, _0x1c7e1a = 0.5 / _0x1c7e1a, _0x494475[0x3] = (_0x53ae86[_0x15e432 * 0x3 + _0x349fc1] - _0x53ae86[_0x349fc1 * 0x3 + _0x15e432]) * _0x1c7e1a, _0x494475[_0x15e432] = (_0x53ae86[_0x15e432 * 0x3 + _0x2418bd] + _0x53ae86[_0x2418bd * 0x3 + _0x15e432]) * _0x1c7e1a, _0x494475[_0x349fc1] = (_0x53ae86[_0x349fc1 * 0x3 + _0x2418bd] + _0x53ae86[_0x2418bd * 0x3 + _0x349fc1]) * _0x1c7e1a;
            }
            return;
        }
        static [_0x5659be(0x281)](_0x40719d, _0x3f891a) {
            var _0x527e1f = _0x5659be, _0x341fd1 = _0x40719d[_0x527e1f(0x1f6)], _0x5b2c48 = _0x3f891a[_0x527e1f(0x1f6)], _0x543a2a, _0x1d8ed2, _0x57552a = _0x341fd1[0x0] + _0x341fd1[0x5] + _0x341fd1[0xa];
            if (_0x57552a > 0x0)
                _0x543a2a = Math[_0x527e1f(0x1ea)](_0x57552a + 0x1), _0x5b2c48[0x3] = _0x543a2a * 0.5, _0x543a2a = 0.5 / _0x543a2a, _0x5b2c48[0x0] = (_0x341fd1[0x6] - _0x341fd1[0x9]) * _0x543a2a, _0x5b2c48[0x1] = (_0x341fd1[0x8] - _0x341fd1[0x2]) * _0x543a2a, _0x5b2c48[0x2] = (_0x341fd1[0x1] - _0x341fd1[0x4]) * _0x543a2a;
            else {
                if (_0x341fd1[0x0] >= _0x341fd1[0x5] && _0x341fd1[0x0] >= _0x341fd1[0xa])
                    _0x543a2a = Math[_0x527e1f(0x1ea)](0x1 + _0x341fd1[0x0] - _0x341fd1[0x5] - _0x341fd1[0xa]), _0x1d8ed2 = 0.5 / _0x543a2a, _0x5b2c48[0x0] = 0.5 * _0x543a2a, _0x5b2c48[0x1] = (_0x341fd1[0x1] + _0x341fd1[0x4]) * _0x1d8ed2, _0x5b2c48[0x2] = (_0x341fd1[0x2] + _0x341fd1[0x8]) * _0x1d8ed2, _0x5b2c48[0x3] = (_0x341fd1[0x6] - _0x341fd1[0x9]) * _0x1d8ed2;
                else
                    _0x341fd1[0x5] > _0x341fd1[0xa] ? (_0x543a2a = Math[_0x527e1f(0x1ea)](0x1 + _0x341fd1[0x5] - _0x341fd1[0x0] - _0x341fd1[0xa]), _0x1d8ed2 = 0.5 / _0x543a2a, _0x5b2c48[0x0] = (_0x341fd1[0x4] + _0x341fd1[0x1]) * _0x1d8ed2, _0x5b2c48[0x1] = 0.5 * _0x543a2a, _0x5b2c48[0x2] = (_0x341fd1[0x9] + _0x341fd1[0x6]) * _0x1d8ed2, _0x5b2c48[0x3] = (_0x341fd1[0x8] - _0x341fd1[0x2]) * _0x1d8ed2) : (_0x543a2a = Math[_0x527e1f(0x1ea)](0x1 + _0x341fd1[0xa] - _0x341fd1[0x0] - _0x341fd1[0x5]), _0x1d8ed2 = 0.5 / _0x543a2a, _0x5b2c48[0x0] = (_0x341fd1[0x8] + _0x341fd1[0x2]) * _0x1d8ed2, _0x5b2c48[0x1] = (_0x341fd1[0x9] + _0x341fd1[0x6]) * _0x1d8ed2, _0x5b2c48[0x2] = 0.5 * _0x543a2a, _0x5b2c48[0x3] = (_0x341fd1[0x1] - _0x341fd1[0x4]) * _0x1d8ed2);
            }
        }
        static [_0x5659be(0x1136)](_0x409b41, _0x4a2e2f, _0x453404, _0x401ee8) {
            var _0x28ba2e = _0x5659be, _0x5669de = _0x409b41[_0x28ba2e(0x1f6)], _0x3547bd = _0x4a2e2f[_0x28ba2e(0x1f6)], _0x34a166 = _0x401ee8['elements'], _0x36d088 = _0x5669de[0x0], _0x5ced07 = _0x5669de[0x1], _0x3a3a40 = _0x5669de[0x2], _0x5cb65a = _0x5669de[0x3], _0xd84d1e = _0x3547bd[0x0], _0x564444 = _0x3547bd[0x1], _0x2479f0 = _0x3547bd[0x2], _0x4d82b0 = _0x3547bd[0x3], _0x64297a, _0x5ae8cd, _0x1735a7, _0x19ac64, _0x4f26ba;
            return _0x5ae8cd = _0x36d088 * _0xd84d1e + _0x5ced07 * _0x564444 + _0x3a3a40 * _0x2479f0 + _0x5cb65a * _0x4d82b0, _0x5ae8cd < 0x0 && (_0x5ae8cd = -_0x5ae8cd, _0xd84d1e = -_0xd84d1e, _0x564444 = -_0x564444, _0x2479f0 = -_0x2479f0, _0x4d82b0 = -_0x4d82b0), 0x1 - _0x5ae8cd > 0.000001 ? (_0x64297a = Math[_0x28ba2e(0x282)](_0x5ae8cd), _0x1735a7 = Math['sin'](_0x64297a), _0x19ac64 = Math['sin']((0x1 - _0x453404) * _0x64297a) / _0x1735a7, _0x4f26ba = Math[_0x28ba2e(0x26f)](_0x453404 * _0x64297a) / _0x1735a7) : (_0x19ac64 = 0x1 - _0x453404, _0x4f26ba = _0x453404), _0x34a166[0x0] = _0x19ac64 * _0x36d088 + _0x4f26ba * _0xd84d1e, _0x34a166[0x1] = _0x19ac64 * _0x5ced07 + _0x4f26ba * _0x564444, _0x34a166[0x2] = _0x19ac64 * _0x3a3a40 + _0x4f26ba * _0x2479f0, _0x34a166[0x3] = _0x19ac64 * _0x5cb65a + _0x4f26ba * _0x4d82b0, _0x34a166;
        }
        static [_0x5659be(0x1fc)](_0x934455, _0x29955e, _0x4cc4a8, _0x5e9e6d) {
            var _0xa07a85 = _0x5659be;
            _0x39a223['_lerpArray'](_0x934455[_0xa07a85(0x1f6)], _0x29955e['elements'], _0x4cc4a8, _0x5e9e6d[_0xa07a85(0x1f6)]);
        }
        static [_0x5659be(0x201)](_0x363cab, _0x58ab5d, _0x296095) {
            var _0x4c1c24 = _0x5659be, _0x21f0da = _0x296095[_0x4c1c24(0x1f6)], _0x4cf0a7 = _0x363cab['elements'], _0x52a30f = _0x58ab5d['elements'];
            _0x21f0da[0x0] = _0x4cf0a7[0x0] + _0x52a30f[0x0], _0x21f0da[0x1] = _0x4cf0a7[0x1] + _0x52a30f[0x1], _0x21f0da[0x2] = _0x4cf0a7[0x2] + _0x52a30f[0x2], _0x21f0da[0x3] = _0x4cf0a7[0x3] + _0x52a30f[0x3];
        }
        static [_0x5659be(0x1f1)](_0x21fe68, _0x2a4312) {
            var _0x44c264 = _0x5659be;
            return _0x39a223['_dotArray'](_0x21fe68[_0x44c264(0x1f6)], _0x2a4312[_0x44c264(0x1f6)]);
        }
        get ['x']() {
            var _0x39bf8e = _0x5659be;
            return this[_0x39bf8e(0x1f6)][0x0];
        }
        set ['x'](_0x7424f3) {
            var _0x528b54 = _0x5659be;
            this[_0x528b54(0x1f6)][0x0] = _0x7424f3;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x563684) {
            this['elements'][0x1] = _0x563684;
        }
        get ['z']() {
            var _0x526a05 = _0x5659be;
            return this[_0x526a05(0x1f6)][0x2];
        }
        set ['z'](_0x18d634) {
            var _0x38bdcf = _0x5659be;
            this[_0x38bdcf(0x1f6)][0x2] = _0x18d634;
        }
        get ['w']() {
            var _0x5df8b = _0x5659be;
            return this[_0x5df8b(0x1f6)][0x3];
        }
        set ['w'](_0x3fd2d1) {
            var _0x1428f9 = _0x5659be;
            this[_0x1428f9(0x1f6)][0x3] = _0x3fd2d1;
        }
        [_0x5659be(0x1137)](_0x701907, _0x3f7b62) {
            var _0x2925f4 = _0x5659be, _0x292738 = _0x3f7b62['elements'], _0x705911 = this[_0x2925f4(0x1f6)];
            _0x292738[0x0] = _0x705911[0x0] * _0x701907, _0x292738[0x1] = _0x705911[0x1] * _0x701907, _0x292738[0x2] = _0x705911[0x2] * _0x701907, _0x292738[0x3] = _0x705911[0x3] * _0x701907;
        }
        [_0x5659be(0x1f2)](_0x3c5bbc) {
            var _0x20d288 = _0x5659be;
            _0x39a223[_0x20d288(0x1134)](this[_0x20d288(0x1f6)], _0x3c5bbc[_0x20d288(0x1f6)]);
        }
        ['length']() {
            var _0x265d73 = _0x5659be, _0x25d74e = this[_0x265d73(0x1f6)], _0x291799 = _0x25d74e[0x0], _0x45411d = _0x25d74e[0x1], _0x48271b = _0x25d74e[0x2], _0x1bb04f = _0x25d74e[0x3];
            return Math[_0x265d73(0x1ea)](_0x291799 * _0x291799 + _0x45411d * _0x45411d + _0x48271b * _0x48271b + _0x1bb04f * _0x1bb04f);
        }
        [_0x5659be(0x283)](_0x41eecd, _0x5e264b) {
            var _0x28b159 = _0x5659be, _0x5edd29 = _0x5e264b[_0x28b159(0x1f6)], _0x180e19 = this[_0x28b159(0x1f6)];
            _0x41eecd *= 0.5;
            var _0x12a701 = _0x180e19[0x0], _0x1e2c09 = _0x180e19[0x1], _0x3d13dc = _0x180e19[0x2], _0x1f066e = _0x180e19[0x3], _0x17509b = Math[_0x28b159(0x26f)](_0x41eecd), _0x35981b = Math[_0x28b159(0x270)](_0x41eecd);
            _0x5edd29[0x0] = _0x12a701 * _0x35981b + _0x1f066e * _0x17509b, _0x5edd29[0x1] = _0x1e2c09 * _0x35981b + _0x3d13dc * _0x17509b, _0x5edd29[0x2] = _0x3d13dc * _0x35981b - _0x1e2c09 * _0x17509b, _0x5edd29[0x3] = _0x1f066e * _0x35981b - _0x12a701 * _0x17509b;
        }
        ['rotateY'](_0x161de9, _0x108d69) {
            var _0x187a4a = _0x5659be, _0x8051a1 = _0x108d69[_0x187a4a(0x1f6)], _0xd209de = this[_0x187a4a(0x1f6)];
            _0x161de9 *= 0.5;
            var _0x374f97 = _0xd209de[0x0], _0x8dcd51 = _0xd209de[0x1], _0x2fccd5 = _0xd209de[0x2], _0x41def4 = _0xd209de[0x3], _0x170d0f = Math['sin'](_0x161de9), _0x597c8a = Math['cos'](_0x161de9);
            _0x8051a1[0x0] = _0x374f97 * _0x597c8a - _0x2fccd5 * _0x170d0f, _0x8051a1[0x1] = _0x8dcd51 * _0x597c8a + _0x41def4 * _0x170d0f, _0x8051a1[0x2] = _0x2fccd5 * _0x597c8a + _0x374f97 * _0x170d0f, _0x8051a1[0x3] = _0x41def4 * _0x597c8a - _0x8dcd51 * _0x170d0f;
        }
        [_0x5659be(0x285)](_0x4a1c41, _0x412da4) {
            var _0x3990dd = _0x5659be, _0x5c1b2f = _0x412da4[_0x3990dd(0x1f6)], _0x5de80c = this[_0x3990dd(0x1f6)];
            _0x4a1c41 *= 0.5;
            var _0x52985a = _0x5de80c[0x0], _0x126517 = _0x5de80c[0x1], _0x12238c = _0x5de80c[0x2], _0x126116 = _0x5de80c[0x3], _0x329b77 = Math[_0x3990dd(0x26f)](_0x4a1c41), _0x4293d3 = Math[_0x3990dd(0x270)](_0x4a1c41);
            _0x5c1b2f[0x0] = _0x52985a * _0x4293d3 + _0x126517 * _0x329b77, _0x5c1b2f[0x1] = _0x126517 * _0x4293d3 - _0x52985a * _0x329b77, _0x5c1b2f[0x2] = _0x12238c * _0x4293d3 + _0x126116 * _0x329b77, _0x5c1b2f[0x3] = _0x126116 * _0x4293d3 - _0x12238c * _0x329b77;
        }
        [_0x5659be(0x286)](_0x3b31b1) {
            var _0xc1ef98 = _0x5659be;
            _0x20e4e3[_0xc1ef98(0x209)](_0x20e4e3[_0xc1ef98(0x1132)], this, _0x39a223['TEMPVector31']), _0x20e4e3[_0xc1ef98(0x209)](_0x20e4e3['Up'], this, _0x39a223[_0xc1ef98(0x288)]);
            var _0x830da1 = _0x39a223[_0xc1ef98(0x288)][_0xc1ef98(0x1f6)];
            _0x39a223['angleTo'](_0x20e4e3[_0xc1ef98(0x1f8)], _0x39a223['TEMPVector31'], _0x39a223[_0xc1ef98(0x289)]);
            var _0x34adda = _0x39a223[_0xc1ef98(0x289)][_0xc1ef98(0x1f6)];
            if (_0x34adda[0x0] == Math['PI'] / 0x2)
                _0x34adda[0x1] = _0x39a223['arcTanAngle'](_0x830da1[0x2], _0x830da1[0x0]), _0x34adda[0x2] = 0x0;
            else
                _0x34adda[0x0] == -Math['PI'] / 0x2 ? (_0x34adda[0x1] = _0x39a223[_0xc1ef98(0x27b)](-_0x830da1[0x2], -_0x830da1[0x0]), _0x34adda[0x2] = 0x0) : (_0x3ed76a[_0xc1ef98(0x28a)](-_0x34adda[0x1], _0x39a223['TEMPMatrix0']), _0x3ed76a[_0xc1ef98(0x28c)](-_0x34adda[0x0], _0x39a223[_0xc1ef98(0x28d)]), _0x20e4e3[_0xc1ef98(0x20e)](_0x39a223[_0xc1ef98(0x288)], _0x39a223[_0xc1ef98(0x28b)], _0x39a223['TEMPVector32']), _0x20e4e3[_0xc1ef98(0x20e)](_0x39a223[_0xc1ef98(0x288)], _0x39a223[_0xc1ef98(0x28d)], _0x39a223[_0xc1ef98(0x288)]), _0x34adda[0x2] = _0x39a223[_0xc1ef98(0x27b)](_0x830da1[0x1], -_0x830da1[0x0]));
            if (_0x34adda[0x1] <= -Math['PI'])
                _0x34adda[0x1] = Math['PI'];
            if (_0x34adda[0x2] <= -Math['PI'])
                _0x34adda[0x2] = Math['PI'];
            _0x34adda[0x1] >= Math['PI'] && _0x34adda[0x2] >= Math['PI'] && (_0x34adda[0x1] = 0x0, _0x34adda[0x2] = 0x0, _0x34adda[0x0] = Math['PI'] - _0x34adda[0x0]);
            var _0x20c08b = _0x3b31b1[_0xc1ef98(0x1f6)];
            _0x20c08b[0x0] = _0x34adda[0x1], _0x20c08b[0x1] = _0x34adda[0x0], _0x20c08b[0x2] = _0x34adda[0x2];
        }
        ['invert'](_0x423909) {
            var _0x744a6 = _0x5659be, _0x5d5abc = _0x423909[_0x744a6(0x1f6)], _0x3f817d = this[_0x744a6(0x1f6)], _0x53df38 = _0x3f817d[0x0], _0x3274f6 = _0x3f817d[0x1], _0x483a95 = _0x3f817d[0x2], _0x21cdd0 = _0x3f817d[0x3], _0x4069e5 = _0x53df38 * _0x53df38 + _0x3274f6 * _0x3274f6 + _0x483a95 * _0x483a95 + _0x21cdd0 * _0x21cdd0, _0x2a2251 = _0x4069e5 ? 0x1 / _0x4069e5 : 0x0;
            _0x5d5abc[0x0] = -_0x53df38 * _0x2a2251, _0x5d5abc[0x1] = -_0x3274f6 * _0x2a2251, _0x5d5abc[0x2] = -_0x483a95 * _0x2a2251, _0x5d5abc[0x3] = _0x21cdd0 * _0x2a2251;
        }
        ['identity']() {
            var _0x3c2f1d = this['elements'];
            _0x3c2f1d[0x0] = 0x0, _0x3c2f1d[0x1] = 0x0, _0x3c2f1d[0x2] = 0x0, _0x3c2f1d[0x3] = 0x1;
        }
        [_0x5659be(0x1fb)](_0x4ed18d, _0xd53cb1 = 0x0) {
            var _0x1cfdf6 = _0x5659be;
            this[_0x1cfdf6(0x1f6)][0x0] = _0x4ed18d[_0xd53cb1 + 0x0], this[_0x1cfdf6(0x1f6)][0x1] = _0x4ed18d[_0xd53cb1 + 0x1], this['elements'][0x2] = _0x4ed18d[_0xd53cb1 + 0x2], this['elements'][0x3] = _0x4ed18d[_0xd53cb1 + 0x3];
        }
        [_0x5659be(0x1f0)](_0x58fc77) {
            var _0x28e24e = _0x5659be, _0x18130d, _0x4edefd, _0x12ee85;
            _0x4edefd = this[_0x28e24e(0x1f6)], _0x12ee85 = _0x58fc77[_0x28e24e(0x1f6)];
            if (_0x4edefd === _0x12ee85)
                return;
            for (_0x18130d = 0x0; _0x18130d < 0x4; ++_0x18130d) {
                _0x12ee85[_0x18130d] = _0x4edefd[_0x18130d];
            }
        }
        ['clone']() {
            var _0x543e18 = _0x5659be, _0x1b10bc = new _0x39a223();
            return this[_0x543e18(0x1f0)](_0x1b10bc), _0x1b10bc;
        }
        [_0x5659be(0x1fe)](_0xa0542d) {
            var _0xe6b450 = _0x5659be, _0x3f07d8 = this['elements'], _0x2dc857 = _0xa0542d[_0xe6b450(0x1f6)];
            return _0x57b8d6[_0xe6b450(0x1e8)](_0x3f07d8[0x0], _0x2dc857[0x0]) && _0x57b8d6[_0xe6b450(0x1e8)](_0x3f07d8[0x1], _0x2dc857[0x1]) && _0x57b8d6[_0xe6b450(0x1e8)](_0x3f07d8[0x2], _0x2dc857[0x2]) && _0x57b8d6[_0xe6b450(0x1e8)](_0x3f07d8[0x3], _0x2dc857[0x3]);
        }
        static [_0x5659be(0x28e)](_0x9e05b2, _0x4676a6, _0x59f107) {
            var _0x44eb7d = _0x5659be;
            _0x39a223['lookAt'](_0x20e4e3[_0x44eb7d(0x1f8)], _0x9e05b2, _0x4676a6, _0x59f107);
        }
        static [_0x5659be(0x277)](_0x115f58, _0x365d9b, _0x204f16, _0x1b597c) {
            var _0x40f84f = _0x5659be;
            _0x14703a[_0x40f84f(0x277)](_0x115f58, _0x365d9b, _0x204f16, _0x39a223['_tempMatrix3x3']), _0x39a223[_0x40f84f(0x1138)](_0x39a223[_0x40f84f(0x28f)], _0x1b597c);
        }
        [_0x5659be(0x200)]() {
            var _0x33df22 = _0x5659be, _0x57d2ff = this[_0x33df22(0x1f6)][0x0], _0x1dbccc = this[_0x33df22(0x1f6)][0x1], _0x2fe56d = this[_0x33df22(0x1f6)][0x2], _0x104083 = this[_0x33df22(0x1f6)][0x3];
            return _0x57d2ff * _0x57d2ff + _0x1dbccc * _0x1dbccc + _0x2fe56d * _0x2fe56d + _0x104083 * _0x104083;
        }
        static ['invert'](_0x7d78af, _0x8ffe3) {
            var _0x25a095 = _0x5659be, _0x83a063 = _0x7d78af[_0x25a095(0x1f6)], _0x15c37e = _0x8ffe3['elements'], _0x4c19af = _0x7d78af[_0x25a095(0x200)]();
            !_0x57b8d6['isZero'](_0x4c19af) && (_0x4c19af = 0x1 / _0x4c19af, _0x15c37e[0x0] = -_0x83a063[0x0] * _0x4c19af, _0x15c37e[0x1] = -_0x83a063[0x1] * _0x4c19af, _0x15c37e[0x2] = -_0x83a063[0x2] * _0x4c19af, _0x15c37e[0x3] = _0x83a063[0x3] * _0x4c19af);
        }
        static ['rotationMatrix'](_0x25b830, _0x351f50) {
            var _0x32b427 = _0x5659be, _0x4b6bed = _0x25b830[_0x32b427(0x1f6)], _0x3bf80a = _0x4b6bed[0x0], _0x59b089 = _0x4b6bed[0x1], _0x4025eb = _0x4b6bed[0x2], _0x27022f = _0x4b6bed[0x3], _0x2cd620 = _0x4b6bed[0x4], _0x72c14c = _0x4b6bed[0x5], _0xf9674d = _0x4b6bed[0x6], _0x3cd17d = _0x4b6bed[0x7], _0x57ea0b = _0x4b6bed[0x8], _0x55a32e = _0x351f50[_0x32b427(0x1f6)], _0x4cc94, _0x4f5c0f, _0x3005e0 = _0x3bf80a + _0x2cd620 + _0x57ea0b;
            if (_0x3005e0 > 0x0)
                _0x4cc94 = Math[_0x32b427(0x1ea)](_0x3005e0 + 0x1), _0x55a32e[0x3] = _0x4cc94 * 0.5, _0x4cc94 = 0.5 / _0x4cc94, _0x55a32e[0x0] = (_0x72c14c - _0x3cd17d) * _0x4cc94, _0x55a32e[0x1] = (_0xf9674d - _0x4025eb) * _0x4cc94, _0x55a32e[0x2] = (_0x59b089 - _0x27022f) * _0x4cc94;
            else {
                if (_0x3bf80a >= _0x2cd620 && _0x3bf80a >= _0x57ea0b)
                    _0x4cc94 = Math[_0x32b427(0x1ea)](0x1 + _0x3bf80a - _0x2cd620 - _0x57ea0b), _0x4f5c0f = 0.5 / _0x4cc94, _0x55a32e[0x0] = 0.5 * _0x4cc94, _0x55a32e[0x1] = (_0x59b089 + _0x27022f) * _0x4f5c0f, _0x55a32e[0x2] = (_0x4025eb + _0xf9674d) * _0x4f5c0f, _0x55a32e[0x3] = (_0x72c14c - _0x3cd17d) * _0x4f5c0f;
                else
                    _0x2cd620 > _0x57ea0b ? (_0x4cc94 = Math[_0x32b427(0x1ea)](0x1 + _0x2cd620 - _0x3bf80a - _0x57ea0b), _0x4f5c0f = 0.5 / _0x4cc94, _0x55a32e[0x0] = (_0x27022f + _0x59b089) * _0x4f5c0f, _0x55a32e[0x1] = 0.5 * _0x4cc94, _0x55a32e[0x2] = (_0x3cd17d + _0x72c14c) * _0x4f5c0f, _0x55a32e[0x3] = (_0xf9674d - _0x4025eb) * _0x4f5c0f) : (_0x4cc94 = Math[_0x32b427(0x1ea)](0x1 + _0x57ea0b - _0x3bf80a - _0x2cd620), _0x4f5c0f = 0.5 / _0x4cc94, _0x55a32e[0x0] = (_0xf9674d + _0x4025eb) * _0x4f5c0f, _0x55a32e[0x1] = (_0x3cd17d + _0x72c14c) * _0x4f5c0f, _0x55a32e[0x2] = 0.5 * _0x4cc94, _0x55a32e[0x3] = (_0x59b089 - _0x27022f) * _0x4f5c0f);
            }
        }
    }
    _0x39a223[_0x5659be(0x27e)] = new _0x20e4e3(), _0x39a223[_0x5659be(0x287)] = new _0x20e4e3(), _0x39a223[_0x5659be(0x288)] = new _0x20e4e3(), _0x39a223[_0x5659be(0x289)] = new _0x20e4e3(), _0x39a223[_0x5659be(0x28b)] = new _0x3ed76a(), _0x39a223[_0x5659be(0x28d)] = new _0x3ed76a(), _0x39a223[_0x5659be(0x28f)] = new _0x14703a(), _0x39a223['DEFAULT'] = new _0x39a223(), _0x39a223['NAN'] = new _0x39a223(NaN, NaN, NaN, NaN);
    class _0x1f471d {
        constructor(_0x117e9b) {
            var _0x191554 = _0x5659be;
            if (!(_0x117e9b instanceof Array) || _0x117e9b['length'] !== 0x4)
                throw new Error(_0x191554(0x1139));
            this['_state0U'] = _0x117e9b[0x0] | 0x0, this['_state0L'] = _0x117e9b[0x1] | 0x0, this[_0x191554(0x113a)] = _0x117e9b[0x2] | 0x0, this['_state1L'] = _0x117e9b[0x3] | 0x0;
        }
        ['randomint']() {
            var _0x334f42 = _0x5659be, _0x9f7bd2 = this[_0x334f42(0x113b)], _0x34b4e9 = this['_state0L'], _0x5b52ac = this[_0x334f42(0x113a)], _0x4e06ff = this[_0x334f42(0x113c)], _0x581d8a = (_0x4e06ff >>> 0x0) + (_0x34b4e9 >>> 0x0), _0x1ea576 = _0x5b52ac + _0x9f7bd2 + (_0x581d8a / 0x2 >>> 0x1f) >>> 0x0, _0xa15d1b = _0x581d8a >>> 0x0;
            this['_state0U'] = _0x5b52ac, this[_0x334f42(0x113d)] = _0x4e06ff;
            var _0x2862c2 = 0x0, _0x537eb8 = 0x0, _0x481311 = 0x0, _0x20a43f = 0x0, _0x3f1144 = 0x17, _0x4ac0bf = 0xffffffff << 0x20 - _0x3f1144;
            _0x2862c2 = _0x9f7bd2 << _0x3f1144 | (_0x34b4e9 & _0x4ac0bf) >>> 0x20 - _0x3f1144, _0x537eb8 = _0x34b4e9 << _0x3f1144, _0x9f7bd2 = _0x9f7bd2 ^ _0x2862c2, _0x34b4e9 = _0x34b4e9 ^ _0x537eb8, _0x2862c2 = _0x9f7bd2 ^ _0x5b52ac, _0x537eb8 = _0x34b4e9 ^ _0x4e06ff;
            var _0x452a27 = 0x12, _0x15c683 = 0xffffffff >>> 0x20 - _0x452a27;
            _0x481311 = _0x9f7bd2 >>> _0x452a27, _0x20a43f = _0x34b4e9 >>> _0x452a27 | (_0x9f7bd2 & _0x15c683) << 0x20 - _0x452a27, _0x2862c2 = _0x2862c2 ^ _0x481311, _0x537eb8 = _0x537eb8 ^ _0x20a43f;
            var _0x2bd0cc = 0x5, _0x50499d = 0xffffffff >>> 0x20 - _0x2bd0cc;
            return _0x481311 = _0x5b52ac >>> _0x2bd0cc, _0x20a43f = _0x4e06ff >>> _0x2bd0cc | (_0x5b52ac & _0x50499d) << 0x20 - _0x2bd0cc, _0x2862c2 = _0x2862c2 ^ _0x481311, _0x537eb8 = _0x537eb8 ^ _0x20a43f, this[_0x334f42(0x113a)] = _0x2862c2, this[_0x334f42(0x113c)] = _0x537eb8, [
                _0x1ea576,
                _0xa15d1b
            ];
        }
        [_0x5659be(0xd5d)]() {
            var _0x50e774 = _0x5659be, _0x2d1b84 = this[_0x50e774(0x113e)](), _0x4ddf81 = _0x2d1b84[0x0], _0x47b7ab = _0x2d1b84[0x1], _0x29bfa7 = 0x3ff << 0x34 - 0x20, _0x4cadfe = 0x0, _0x5e539f = 0xc, _0x1efeaf = 0xffffffff >>> 0x20 - _0x5e539f, _0x455142 = _0x4ddf81 >>> _0x5e539f, _0x199a1e = _0x47b7ab >>> _0x5e539f | (_0x4ddf81 & _0x1efeaf) << 0x20 - _0x5e539f, _0x4bc3ae = _0x29bfa7 | _0x455142, _0x106cc4 = _0x4cadfe | _0x199a1e;
            _0x1f471d[_0x50e774(0x113f)][_0x50e774(0x1140)](0x0, _0x4bc3ae, ![]), _0x1f471d['_CONVERTION_BUFFER'][_0x50e774(0x1140)](0x4, _0x106cc4, ![]);
            var _0x39f7fe = _0x1f471d[_0x50e774(0x113f)]['getFloat64'](0x0, ![]);
            return _0x39f7fe - 0x1;
        }
    }
    _0x1f471d['_CONVERTION_BUFFER'] = new DataView(new ArrayBuffer(0x8)), _0x1f471d[_0x5659be(0x1141)] = new _0x1f471d([
        0x0,
        Date[_0x5659be(0x1142)]() / 0x10000,
        0x0,
        Date[_0x5659be(0x1142)]() % 0x10000
    ]);
    class _0x239bc1 {
        constructor() {
        }
        get ['text']() {
            var _0x42fc3a = _0x5659be;
            return this[_0x42fc3a(0x1143)];
        }
        set [_0x5659be(0xc5a)](_0x2645e3) {
            var _0x8cdebd = _0x5659be;
            this[_0x8cdebd(0x1143)] = _0x2645e3;
        }
        get [_0x5659be(0x1144)]() {
            var _0x3cc8ab = _0x5659be;
            return this[_0x3cc8ab(0x1145)];
        }
        set [_0x5659be(0x1144)](_0x6aba03) {
            var _0x4c1da1 = _0x5659be;
            this[_0x4c1da1(0x1145)] = _0x6aba03;
        }
        get [_0x5659be(0x462)]() {
            var _0x5b1175 = _0x5659be;
            return this[_0x5b1175(0xd1b)];
        }
        set ['color'](_0x10b21b) {
            var _0x2fa73d = _0x5659be;
            this[_0x2fa73d(0xd1b)] = _0x10b21b;
        }
    }
    class _0x344bca {
        constructor(_0x3da58b, _0x22860d) {
            var _0x575df6 = _0x5659be;
            this[_0x575df6(0x3e3)] = 0x0, this['_height'] = 0x0, this[_0x575df6(0x3e3)] = _0x3da58b, this[_0x575df6(0x3e4)] = _0x22860d;
        }
        static get [_0x5659be(0x1146)]() {
            return new _0x344bca(-0x1, -0x1);
        }
        get [_0x5659be(0x300)]() {
            var _0x4fe46b = _0x5659be;
            if (this[_0x4fe46b(0x3e3)] === -0x1)
                return _0x51310c[_0x4fe46b(0x9a8)];
            return this['_width'];
        }
        get ['height']() {
            var _0x17398a = _0x5659be;
            if (this[_0x17398a(0x3e4)] === -0x1)
                return _0x51310c[_0x17398a(0x562)];
            return this[_0x17398a(0x3e4)];
        }
    }
    _0x71dec4[_0x5659be(0x1147)] = _0x3744f8, _0x71dec4[_0x5659be(0x1148)] = _0x39ae6a, _0x71dec4[_0x5659be(0x1149)] = _0x1d4d9f, _0x71dec4['AnimationClipParser04'] = _0x3cab70, _0x71dec4['AnimationEvent'] = _0x28dc41, _0x71dec4[_0x5659be(0x114a)] = _0x1957af, _0x71dec4[_0x5659be(0x114b)] = _0x3393ed, _0x71dec4['Animator'] = _0x58a8c8, _0x71dec4['AnimatorControllerLayer'] = _0x5621c5, _0x71dec4[_0x5659be(0x114c)] = _0x20668b, _0x71dec4[_0x5659be(0x114d)] = _0x4b22d0, _0x71dec4[_0x5659be(0x114e)] = _0x1b29c9, _0x71dec4['Avatar'] = _0x8954ce, _0x71dec4[_0x5659be(0x114f)] = _0x2be102, _0x71dec4['BaseCamera'] = _0x3c0ef2, _0x71dec4[_0x5659be(0x1150)] = _0x47f6bc, _0x71dec4[_0x5659be(0x1151)] = _0x55d32a, _0x71dec4['BaseShape'] = _0x3a820d, _0x71dec4[_0x5659be(0x1152)] = _0x32eb43, _0x71dec4['BlinnPhongMaterial'] = _0x5d2d40, _0x71dec4[_0x5659be(0x1153)] = _0x140fd9, _0x71dec4[_0x5659be(0x1154)] = _0x41d16b, _0x71dec4['BoundBox'] = _0x3fc11a, _0x71dec4[_0x5659be(0x1155)] = _0x26b0f2, _0x71dec4[_0x5659be(0x1156)] = _0x2efeb0, _0x71dec4['Bounds'] = _0x2a117e, _0x71dec4[_0x5659be(0x1157)] = _0x4d3809, _0x71dec4[_0x5659be(0x1158)] = _0x3fc434, _0x71dec4[_0x5659be(0x1159)] = _0x31cb6d, _0x71dec4[_0x5659be(0x115a)] = _0x174c4a, _0x71dec4['Burst'] = _0x29e0b1, _0x71dec4[_0x5659be(0x5ef)] = _0x428ec4, _0x71dec4[_0x5659be(0x115b)] = _0x26f1a2, _0x71dec4[_0x5659be(0x115c)] = _0x2c12d2, _0x71dec4[_0x5659be(0x115d)] = _0x500622, _0x71dec4[_0x5659be(0x115e)] = _0x34f68f, _0x71dec4[_0x5659be(0x115f)] = _0x43fad1, _0x71dec4[_0x5659be(0x1160)] = _0x4589df, _0x71dec4[_0x5659be(0x461)] = _0x4e3117, _0x71dec4['ColorOverLifetime'] = _0x9eae20, _0x71dec4[_0x5659be(0x1161)] = _0x428cb6, _0x71dec4[_0x5659be(0x225)] = _0x1a9c23, _0x71dec4[_0x5659be(0x1162)] = _0x39a223, _0x71dec4['ConchVector3'] = _0x20e4e3, _0x71dec4[_0x5659be(0x1163)] = _0x530394, _0x71dec4[_0x5659be(0x1164)] = _0x4dcb49, _0x71dec4[_0x5659be(0x1165)] = _0x528624, _0x71dec4['ContainmentType'] = _0x25d93b, _0x71dec4[_0x5659be(0x1166)] = _0x23f873, _0x71dec4[_0x5659be(0x1167)] = _0x385f41, _0x71dec4[_0x5659be(0x9c0)] = _0x1912fb, _0x71dec4[_0x5659be(0x1168)] = _0x2a98bb, _0x71dec4[_0x5659be(0x1169)] = _0x160188, _0x71dec4[_0x5659be(0x116a)] = _0x40fc49, _0x71dec4['DynamicBatchManager'] = _0x4fa75b, _0x71dec4[_0x5659be(0x116b)] = _0x5dc88a, _0x71dec4[_0x5659be(0x116c)] = _0x51c5c1, _0x71dec4[_0x5659be(0x116d)] = _0x35500f, _0x71dec4['FloatKeyframe'] = _0x336653, _0x71dec4[_0x5659be(0x116e)] = _0x169ba5, _0x71dec4[_0x5659be(0x116f)] = _0x4b5e1d, _0x71dec4[_0x5659be(0x1170)] = _0x319422, _0x71dec4['Gradient'] = _0x9a260b, _0x71dec4[_0x5659be(0x1171)] = _0x4ebad0, _0x71dec4['GradientColor'] = _0x264d78, _0x71dec4[_0x5659be(0x1172)] = _0x51b483, _0x71dec4[_0x5659be(0x1173)] = _0x2f153d, _0x71dec4['GradientDataVector2'] = _0x25ef4a, _0x71dec4[_0x5659be(0x1174)] = _0x315143, _0x71dec4[_0x5659be(0x1175)] = _0x1ebe51, _0x71dec4[_0x5659be(0x1176)] = _0x154d77, _0x71dec4[_0x5659be(0x1177)] = _0xac7ad2, _0x71dec4[_0x5659be(0x1178)] = _0x4d0421, _0x71dec4[_0x5659be(0x1179)] = _0x429ec3, _0x71dec4[_0x5659be(0x117a)] = _0x11925d, _0x71dec4[_0x5659be(0x117b)] = _0x3abb9f, _0x71dec4[_0x5659be(0x117c)] = _0x885a61, _0x71dec4[_0x5659be(0x117d)] = _0x4a2d82, _0x71dec4['KeyframeNodeList'] = _0x4f46e6, _0x71dec4['KeyframeNodeOwner'] = _0x2ccd0f, _0x71dec4[_0x5659be(0xa7f)] = _0x324d7b, _0x71dec4[_0x5659be(0x117e)] = _0x335947, _0x71dec4[_0x5659be(0x117f)] = _0x3df9e9, _0x71dec4['Lightmap'] = _0x5990de, _0x71dec4[_0x5659be(0x1180)] = _0x41c0b1, _0x71dec4[_0x5659be(0x1181)] = _0x3dbb82, _0x71dec4[_0x5659be(0x1182)] = _0x4bfb48, _0x71dec4[_0x5659be(0x1183)] = _0x499740, _0x71dec4[_0x5659be(0x1184)] = _0x40e080, _0x71dec4[_0x5659be(0x1185)] = _0x57b8d6, _0x71dec4['Matrix3x3'] = _0x14703a, _0x71dec4[_0x5659be(0x222)] = _0x3ed76a, _0x71dec4[_0x5659be(0x1186)] = _0x5c56e3, _0x71dec4['MeshFilter'] = _0x2abbff, _0x71dec4['MeshReader'] = _0xf8a3fc, _0x71dec4[_0x5659be(0x221)] = _0x59607c, _0x71dec4[_0x5659be(0x220)] = _0x493d86, _0x71dec4[_0x5659be(0x1187)] = _0x234e8d, _0x71dec4[_0x5659be(0x101b)] = _0x82ba60, _0x71dec4[_0x5659be(0x1188)] = _0xc9db6a, _0x71dec4[_0x5659be(0x1189)] = _0x197280, _0x71dec4['MouseTouch'] = _0x711937, _0x71dec4['OctreeMotionList'] = _0x24f809, _0x71dec4['PBRMaterial'] = _0x336a30, _0x71dec4[_0x5659be(0x118a)] = _0x89bfff, _0x71dec4['PBRStandardMaterial'] = _0x1ad7f4, _0x71dec4[_0x5659be(0x223)] = _0x40d5e5, _0x71dec4[_0x5659be(0x118b)] = _0xcb0adc, _0x71dec4[_0x5659be(0x118c)] = _0x333c68, _0x71dec4[_0x5659be(0x118d)] = _0x1c9822, _0x71dec4[_0x5659be(0x118e)] = _0x1c9d51, _0x71dec4[_0x5659be(0x118f)] = _0x541c3c, _0x71dec4[_0x5659be(0x1190)] = _0x5bd9f3, _0x71dec4[_0x5659be(0x1191)] = _0x391375, _0x71dec4[_0x5659be(0x1192)] = _0x243ac9, _0x71dec4[_0x5659be(0x1193)] = _0x4d8983, _0x71dec4[_0x5659be(0xb74)] = _0x3936c6, _0x71dec4[_0x5659be(0x1194)] = _0x2987ba, _0x71dec4[_0x5659be(0x1195)] = _0x14da76, _0x71dec4['PostProcessRenderContext'] = _0x4a4aed, _0x71dec4[_0x5659be(0x1196)] = _0x173012, _0x71dec4[_0x5659be(0x56e)] = _0x22f58f, _0x71dec4[_0x5659be(0x1197)] = _0x2bb7ec, _0x71dec4[_0x5659be(0x1198)] = _0x112621, _0x71dec4[_0x5659be(0x1199)] = _0x1f471d, _0x71dec4[_0x5659be(0x119a)] = _0x2ef15a, _0x71dec4[_0x5659be(0x101f)] = _0x221da4, _0x71dec4[_0x5659be(0x119b)] = _0xf2b725, _0x71dec4[_0x5659be(0x119c)] = _0x33182f, _0x71dec4['RenderContext3D'] = _0x51310c, _0x71dec4[_0x5659be(0x5f5)] = _0x5551c8, _0x71dec4[_0x5659be(0x119d)] = _0x23b84b, _0x71dec4[_0x5659be(0x119e)] = _0x2aa393, _0x71dec4[_0x5659be(0x119f)] = _0x164148, _0x71dec4[_0x5659be(0x11a0)] = _0x200920, _0x71dec4[_0x5659be(0x11a1)] = _0x2d0604, _0x71dec4[_0x5659be(0x21f)] = _0x55cc88, _0x71dec4[_0x5659be(0x11a2)] = _0x2de530, _0x71dec4[_0x5659be(0x11a3)] = _0x8eba65, _0x71dec4['ScreenQuad'] = _0x10ceb5, _0x71dec4[_0x5659be(0x11a4)] = _0x413ee3, _0x71dec4['Script3D'] = _0x411ce6, _0x71dec4['SetGlobalShaderDataCMD'] = _0x2e2aea, _0x71dec4['SetRenderTargetCMD'] = _0x136c24, _0x71dec4[_0x5659be(0x11a5)] = _0x487843, _0x71dec4[_0x5659be(0x21e)] = _0x84b6d6, _0x71dec4[_0x5659be(0x11a6)] = _0x552b02, _0x71dec4[_0x5659be(0x11a7)] = _0x17bd0f, _0x71dec4[_0x5659be(0x11a8)] = _0x2f53f7, _0x71dec4[_0x5659be(0x11a9)] = _0x5c7b6f, _0x71dec4['ShaderPass'] = _0x1688c7, _0x71dec4[_0x5659be(0x11aa)] = _0x2ac10e, _0x71dec4['ShaderVariant'] = _0x3c4b71, _0x71dec4[_0x5659be(0x11ab)] = _0xedff71, _0x71dec4[_0x5659be(0x11ac)] = _0x2e5076, _0x71dec4[_0x5659be(0x11ad)] = _0x3ccc5f, _0x71dec4[_0x5659be(0x11ae)] = _0x575ff4, _0x71dec4[_0x5659be(0x11af)] = _0x46e9c5, _0x71dec4[_0x5659be(0x11b0)] = _0x143874, _0x71dec4[_0x5659be(0x11b1)] = _0x2d97ab, _0x71dec4[_0x5659be(0x101d)] = _0x4e36f1, _0x71dec4[_0x5659be(0x11b2)] = _0x17a23d, _0x71dec4['ShurikenParticleData'] = _0x279d69, _0x71dec4[_0x5659be(0x11b3)] = _0x423dc4, _0x71dec4[_0x5659be(0x11b4)] = _0x32c6b3, _0x71dec4[_0x5659be(0x11b5)] = _0x4c18c2, _0x71dec4[_0x5659be(0x11b6)] = _0x5d98a9, _0x71dec4[_0x5659be(0x11b7)] = _0x45552e, _0x71dec4[_0x5659be(0x1098)] = _0x2d08c0, _0x71dec4[_0x5659be(0x11b8)] = _0x5ae7ed, _0x71dec4[_0x5659be(0x11b9)] = _0x344bca, _0x71dec4['SizeOverLifetime'] = _0x41af45, _0x71dec4[_0x5659be(0x11ba)] = _0x457f9c, _0x71dec4[_0x5659be(0x101c)] = _0x423afc, _0x71dec4[_0x5659be(0x11bb)] = _0x158fab, _0x71dec4[_0x5659be(0xc2f)] = _0x506034, _0x71dec4[_0x5659be(0x11bc)] = _0x223623, _0x71dec4[_0x5659be(0x11bd)] = _0x2d69f9, _0x71dec4['SkyMesh'] = _0x284ea3, _0x71dec4[_0x5659be(0x11be)] = _0x476866, _0x71dec4[_0x5659be(0x11bf)] = _0x3df214, _0x71dec4[_0x5659be(0x11c0)] = _0x55999c, _0x71dec4[_0x5659be(0x11c1)] = _0x30fb44, _0x71dec4[_0x5659be(0x11c2)] = _0x5465cd, _0x71dec4[_0x5659be(0x9c3)] = _0x2fa0ad, _0x71dec4['Sprite3D'] = _0x356e58, _0x71dec4[_0x5659be(0x11c3)] = _0x24182e, _0x71dec4['StaticBatchManager'] = _0x5dca2e, _0x71dec4[_0x5659be(0x11c4)] = _0x3e57f5, _0x71dec4[_0x5659be(0xaae)] = _0x5267dc, _0x71dec4[_0x5659be(0x11c5)] = _0x269d35, _0x71dec4['SubMeshRenderElement'] = _0x1c6dea, _0x71dec4[_0x5659be(0x11c6)] = _0x16ed51, _0x71dec4[_0x5659be(0x11c7)] = _0x280c5f, _0x71dec4['TextMesh'] = _0x239bc1, _0x71dec4[_0x5659be(0x11c8)] = _0x38ac97, _0x71dec4['TextureGenerator'] = _0x169c34, _0x71dec4[_0x5659be(0x11c9)] = _0x407616, _0x71dec4[_0x5659be(0x11ca)] = _0x187c64, _0x71dec4['Touch'] = _0x38b691, _0x71dec4[_0x5659be(0x11cb)] = _0x46f57b, _0x71dec4[_0x5659be(0x11cc)] = _0x23cb81, _0x71dec4[_0x5659be(0x11cd)] = _0x4b7423, _0x71dec4[_0x5659be(0x11ce)] = _0x3ff0dc, _0x71dec4[_0x5659be(0x101e)] = _0x5e19e7, _0x71dec4[_0x5659be(0x11cf)] = _0x20d0f1, _0x71dec4[_0x5659be(0x11d0)] = _0x2781f6, _0x71dec4[_0x5659be(0x11d1)] = _0x108d81, _0x71dec4[_0x5659be(0x45b)] = _0x12bf01, _0x71dec4[_0x5659be(0x45d)] = _0x3f70c5, _0x71dec4[_0x5659be(0x11d2)] = _0x22ed4e, _0x71dec4[_0x5659be(0x45f)] = _0x8fb80, _0x71dec4[_0x5659be(0x11d3)] = _0x1a4499, _0x71dec4[_0x5659be(0x11d4)] = _0x57a6a2, _0x71dec4[_0x5659be(0x11d5)] = _0x330160, _0x71dec4['VertexElement'] = _0x1f18c6, _0x71dec4[_0x5659be(0x11d6)] = _0x48a921, _0x71dec4[_0x5659be(0x11d7)] = _0x13bc8a, _0x71dec4[_0x5659be(0x11d8)] = _0x6f93b4, _0x71dec4[_0x5659be(0x11d9)] = _0x53569e, _0x71dec4[_0x5659be(0x11da)] = _0x4717eb, _0x71dec4[_0x5659be(0x11db)] = _0x174845, _0x71dec4[_0x5659be(0x11dc)] = _0x50e22b, _0x71dec4['VertexTrail'] = _0x183e46, _0x71dec4['Viewport'] = _0x2a99cf, _0x71dec4['WaterPrimaryMaterial'] = _0x4c6dd7, _0x71dec4[_0x5659be(0x11dd)] = _0x27eaad;
}(window[_0x27cde3(0x685)] = window[_0x27cde3(0x685)] || {}, Laya));
function _0x1d70(_0x45ce7d, _0x41ee0b) {
    var _0x387053 = _0x3870();
    return _0x1d70 = function (_0x1d70cf, _0x525ef8) {
        _0x1d70cf = _0x1d70cf - 0x1da;
        var _0x48d6a9 = _0x387053[_0x1d70cf];
        return _0x48d6a9;
    }, _0x1d70(_0x45ce7d, _0x41ee0b);
}
function _0x3870() {
    var _0x2d230c = [
        'threshold',
        '_threshold',
        '_softKnee',
        'softKnee',
        'diffusion',
        '_diffusion',
        'anamorphicRatio',
        '_anamorphicRatio',
        'dirtIntensity',
        '_dirtIntensity',
        'SHADERVALUE_SAMPLESCALE',
        '_shaderThreshold',
        'SHADERVALUE_THRESHOLD',
        '_shaderParams',
        'SHADERVALUE_PARAMS',
        'SUBSHADER_PREFILTER13',
        'SUBSHADER_DOWNSAMPLE13',
        'setShaderDataTexture',
        'SUBSHADER_UPSAMPLETENT',
        '_linearColor',
        'SHADERDEFINE_BLOOM',
        'SHADERVALUE_BLOOM_DIRTTILEOFFSET',
        'SHADERVALUE_BLOOMTEX_TEXELSIZE',
        'u_SampleScale',
        'u_Threshold',
        'u_Params',
        'u_BloomTex',
        'SUBSHADER_PREFILTER4',
        'SUBSHADER_DOWNSAMPLE4',
        'SUBSHADER_UPSAMPLEBOX',
        '_instanceData',
        'CUSTOME1',
        'CUSTOME2',
        'CUSTOME3',
        'InstanceLocation',
        '_checkPropertyLegal',
        'You\x20cannot\x20add\x20a\x20new\x20property\x20to\x20an\x20existing\x20attributeLocation,Please\x20use\x20another\x20attributeLocation',
        '_creatProperty',
        '_isNeedUpdate',
        'createInstanceVertexBuffer3D',
        'setVectorArray',
        'setVector3Array',
        'setVector2Array',
        'setNumberArray',
        'getPropertyArray',
        'INSTANCETYPE_ATTRIBUTE',
        'INSTANCETYPE_UNIFORMBUFFER',
        'UnitX',
        'UnitY',
        'NegativeUnitX',
        'ForwardRH',
        '_dotArray',
        '_normalizeArray',
        'createFromMatrix3x3',
        'slerp',
        'scaling',
        'rotationMatrix',
        'Rand:Seed\x20must\x20be\x20an\x20array\x20with\x204\x20numbers',
        '_state1U',
        '_state0U',
        '_state1L',
        '_state0L',
        'randomint',
        '_CONVERTION_BUFFER',
        'setUint32',
        'defaultRand',
        'now',
        '_text',
        'fontSize',
        '_fontSize',
        'fullScreen',
        'AlternateLightQueue',
        'AnimationClip',
        'AnimationClipParser03',
        'AnimationNode',
        'AnimationTransform3D',
        'AnimatorPlayState',
        'AnimatorState',
        'AnimatorStateScript',
        'AvatarMask',
        'BaseMaterial',
        'BaseRender',
        'BatchMark',
        'BlitScreenQuadCMD',
        'BloomEffect',
        'BoundFrustum',
        'BoundSphere',
        'BoundsOctree',
        'BoundsOctreeNode',
        'BoxShape',
        'BufferState',
        'CameraCullInfo',
        'CastShadowList',
        'CircleShape',
        'ClearRenderTextureCMD',
        'Cluster',
        'CollisionUtils',
        'Command',
        'ConchQuaternion',
        'ConchVector4',
        'ConeShape',
        'Config3D',
        'DefineDatas',
        'DepthPass',
        'DrawMeshCMD',
        'DrawMeshInstancedCMD',
        'DrawRenderCMD',
        'EffectMaterial',
        'Emission',
        'ExtendTerrainMaterial',
        'FrameOverTime',
        'FrustumCulling',
        'GeometryElement',
        'GradientAngularVelocity',
        'GradientDataInt',
        'GradientDataNumber',
        'GradientMode',
        'GradientSize',
        'GradientVelocity',
        'HeightMap',
        'HemisphereShape',
        'ILaya3D',
        'IndexBuffer3D',
        'Input3D',
        'Keyframe',
        'KeyframeNode',
        'LightQueue',
        'LightSprite',
        'LoadModelV04',
        'LoadModelV05',
        'Material',
        'MaterialInstanceProperty',
        'MaterialInstancePropertyBlock',
        'MathUtils3D',
        'Mesh',
        'MeshRenderer',
        'MeshSprite3DShaderDeclaration',
        'MeshTerrainSprite3D',
        'PBRSpecularMaterial',
        'Physics3DUtils',
        'Picker',
        'PixelLineData',
        'PixelLineFilter',
        'PixelLineMaterial',
        'PixelLineRenderer',
        'PixelLineSprite3D',
        'PixelLineVertex',
        'Plane',
        'PostProcess',
        'PostProcessEffect',
        'PrimitiveMesh',
        'QuaternionKeyframe',
        'Rand',
        'RandX',
        'Ray',
        'ReflectionProbeList',
        'ReflectionProbeManager',
        'RenderQueue',
        'RenderState',
        'RenderTexture',
        'RenderableSprite3D',
        'RotationOverLifetime',
        'Scene3DShaderDeclaration',
        'Scene3DUtils',
        'ScreenTriangle',
        'SetShaderDataCMD',
        'ShaderData',
        'ShaderDefine',
        'ShaderInit3D',
        'ShaderInstance',
        'ShaderVariable',
        'ShaderVariantCollection',
        'ShadowCasterPass',
        'ShadowCullInfo',
        'ShadowSliceData',
        'ShadowSpotData',
        'ShadowUtils',
        'ShapeUtils',
        'ShuriKenParticle3DShaderDeclaration',
        'ShurikenParticleMaterial',
        'ShurikenParticleRenderer',
        'ShurikenParticleSystem',
        'SimpleSingletonList',
        'SimpleSkinnedMeshRenderer',
        'SingletonList',
        'Size',
        'SkinnedMeshRenderer',
        'SkinnedMeshSprite3DShaderDeclaration',
        'SkyBoxMaterial',
        'SkyDome',
        'SkyPanoramicMaterial',
        'SkyProceduralMaterial',
        'SkyRenderer',
        'SphereShape',
        'SphericalHarmonicsL2',
        'StartFrame',
        'SubMesh',
        'SubMeshInstanceBatch',
        'SubMeshStaticBatch',
        'SubShader',
        'TextureCube',
        'TextureMode',
        'TextureSheetAnimation',
        'TrailFilter',
        'TrailGeometry',
        'TrailMaterial',
        'TrailRenderer',
        'Transform3D',
        'UnlitMaterial',
        'Utils3D',
        'Vector3Keyframe',
        'VelocityOverLifetime',
        'VertexBuffer3D',
        'VertexDeclaration',
        'VertexElementFormat',
        'VertexMesh',
        'VertexPositionTerrain',
        'VertexPositionTexture0',
        'VertexShuriKenParticle',
        'VertexShurikenParticleBillboard',
        'VertexShurikenParticleMesh',
        'skinnedMatrixCache',
        '719kAKfiS',
        '1186JINdsq',
        '572217pbEoAf',
        '8iyplZg',
        '811545HSjQoA',
        '18RKdtUV',
        '790608YPmWAH',
        '298096xlsATb',
        '63mpuARi',
        '321050pgbaaQ',
        '407MKvXUt',
        '204996xqJtQW',
        'isZero',
        'abs',
        'nearEqual',
        'fastInvSqrt',
        'sqrt',
        'zeroTolerance',
        'MaxValue',
        'Deg2Rad',
        'scale',
        'toArray',
        'cloneTo',
        'dot',
        'normalize',
        'scalarLength',
        'clone',
        'forNativeElement',
        'elements',
        'rewriteNumProperty',
        'ZERO',
        'ONE',
        'setValue',
        'fromArray',
        'lerp',
        'transformByM4x4',
        'equals',
        'length',
        'lengthSquared',
        'add',
        'multiply',
        'distanceSquared',
        'min',
        'max',
        'UnitZ',
        'UnitW',
        'distance',
        'transformQuat',
        'scalarLengthSquared',
        'transformV3ToV3',
        'transformV3ToV4',
        'TransformNormal',
        'transformCoordinate',
        'Clamp',
        'subtract',
        'cross',
        'toDefault',
        '_tempVector4',
        '_ZERO',
        '_ONE',
        '_NegativeUnitX',
        '_UnitX',
        '_UnitZ',
        '_ForwardRH',
        '_Up',
        'High',
        'Low',
        'PBRRenderQuality',
        'Shader3D',
        'Scene3D',
        'MeshRenderStaticBatchManager',
        'MeshRenderDynamicBatchManager',
        'Matrix4x4',
        'Physics3D',
        'ShadowLightType',
        'CommandBuffer',
        '__bulletinit__',
        '_bullet',
        'CompoundColliderShape',
        '__init__',
        'PhysicsComponent',
        'CylinderColliderShape',
        'CharacterController',
        'Rigidbody3D',
        '_cannon',
        'CANNON',
        'CannonColliderShape',
        'CannonPhysicsSimulation',
        'CannonBoxColliderShape',
        '_enablePhysics',
        '_defaultPhysicsMemory',
        '_maxLightCount',
        '_lightClusterCount',
        '_editerEnvironment',
        'isAntialias',
        'isAlpha',
        'premultipliedAlpha',
        'enableMultiLight',
        'octreeMinNodeSize',
        'octreeLooseness',
        'debugFrustumCulling',
        'pbrRenderQuality',
        '_maxAreaLightCountPerClusterAverage',
        'floor',
        'useCannonPhysics',
        '_config',
        'isUseCannonPhysicsEngine',
        'cannonPhysicsSettings',
        'CannonPhysicsSettings',
        'SubMeshRenderElement',
        'enableDynamicBatch',
        'enableDynamicManager',
        'enableStaticBatch',
        'defaultPhysicsMemory',
        'defaultPhysicsMemory\x20must\x20large\x20than\x2016M',
        'maxLightCount',
        'warn',
        'Config3D:\x20maxLightCount\x20must\x20less\x20equal\x202048.',
        'lightClusterCount',
        'Config3D:\x20lightClusterCount\x20X\x20and\x20Y、Z\x20must\x20less\x20equal\x20128.',
        'Config3D:\x20if\x20the\x20area\x20light(PointLight、SpotLight)\x20count\x20is\x20large\x20than\x20',
        'isStencil',
        'octreeCulling',
        'octreeInitialCenter',
        'octreeInitialSize',
        '_propertys',
        '_keyFrames',
        'ownerPathCount',
        '_ownerPath',
        'propertyCount',
        'keyFramesCount',
        '_setOwnerPathCount',
        '_setOwnerPathByIndex',
        '_joinOwnerPath',
        '_setPropertyByIndex',
        '_joinProperty',
        'join',
        '_setKeyframeCount',
        '_setKeyframeByIndex',
        'getOwnerPathByIndex',
        'getPropertyByIndex',
        'getKeyframeByIndex',
        'time',
        'inTangent',
        'outTangent',
        'value',
        'createRotationQuaternion',
        'createFromTranslation',
        'createFromRotation',
        'sin',
        'cos',
        'createFromScaling',
        'determinant',
        'rotate',
        'invert',
        'transpose',
        'identity',
        'lookAt',
        '_tempV30',
        '_tempV31',
        '_tempV32',
        'arcTanAngle',
        'atan',
        'angleTo',
        'TEMPVector30',
        'asin',
        'createFromAxisAngle',
        'createFromMatrix4x4',
        'acos',
        'rotateX',
        'rotateY',
        'rotateZ',
        'getYawPitchRoll',
        'TEMPVector31',
        'TEMPVector32',
        'TEMPVector33',
        'createRotationY',
        'TEMPMatrix0',
        'createRotationX',
        'TEMPMatrix1',
        'rotationLookAt',
        '_tempMatrix3x3',
        'DEFAULT',
        'NAN',
        '_DATA',
        'offset',
        '_reader',
        'getUint32',
        '_BLOCK',
        'blockLengths',
        'push',
        'getUint16',
        'pos',
        '_strings',
        'readUTFString',
        'parse',
        '_animationClip',
        'READ_BLOCK',
        'READ_STRINGS',
        'count',
        'model\x20file\x20err,no\x20this\x20function:',
        'READ_ANIMATIONS',
        'getFloat32',
        'name',
        'islooping',
        'getByte',
        '_frameRate',
        'getInt16',
        '_nodes',
        '_nodesMap',
        'setNodeByIndex',
        '_indexInList',
        'type',
        'getUint8',
        'propertyOwner',
        '_setPropertyCount',
        'eventName',
        'params',
        'getInt32',
        'unknown\x20type.',
        'addEvent',
        'READ_DATA',
        'size',
        '_version',
        'call',
        'fullPath',
        'nodePath',
        'LAYAANIMATION:04',
        'LAYAANIMATION:COMPRESSION_04',
        'HalfFloatUtils',
        'convertToNumber',
        'AnimationClipParser04:unknown\x20type.',
        'getNodeByIndex',
        'lightAttenTexture',
        '_generateTexture2D',
        'format',
        'TextureFormat',
        'R8G8B8',
        'R8G8B8A8',
        'Alpha8',
        'GeneratedTexture._generateTexture:\x20unkonw\x20texture\x20format.',
        'setPixels',
        '_createFloatTextureBuffer',
        'Texture2D',
        'filterMode',
        'Point',
        'wrapModeU',
        'WarpMode',
        'wrapModeV',
        'anisoLevel',
        '_convertToLayaVec3',
        'btVector3_x',
        'btVector3_y',
        'btVector3_z',
        '_convertToBulletVec3',
        'btVector3_setValue',
        '_tempArray16_1',
        '_tempArray16_2',
        '_computeBoneAndAnimationDatasByBindPoseMatrxix',
        'keyframeWidth',
        '_rotationTransformScaleSkinAnimation',
        'mulMatrixByArray',
        'mulMatrixByArrayAndMatrixFast',
        '_computeAnimationDatasByArrayAndMatrixFast',
        '_computeBoneAndAnimationDatasByBindPoseMatrxixOld',
        'parentIndex',
        '_computeAnimationDatasByArrayAndMatrixFastOld',
        'createAffineTransformationArray',
        'mulMatrixByArrayFast',
        'transformVector3ArrayToVector3ArrayCoordinate',
        'transformVector3ArrayToVector3ArrayNormal',
        'transformLightingMapTexcoordArray',
        'getURLVerion',
        'substr',
        '_mulMatrixArray',
        'quaternionConjugate',
        'scaleWeight',
        'pow',
        '_tempVector3_0',
        '_tempVector3_1',
        'matrix4x4MultiplyFFF',
        'LayaGL',
        'instance',
        'matrix4x4Multiply',
        'matrix4x4MultiplyMFM',
        'FilterMode',
        '_drawBound',
        'lineCount',
        'maxLineCount',
        'addLine',
        '_getHierarchyPath',
        '_parent',
        'getChildAt',
        'uint8ArrayToArrayBuffer',
        'width',
        'height',
        'RenderTextureFormat',
        'R16G16B16A16',
        'this\x20function\x20is\x20not\x20surpprt\x20',
        'toString',
        'format\x20Material',
        'getData',
        'Render',
        'isConchApp',
        'HTMLCanvas',
        'lock',
        'createImageData',
        'data',
        'putImageData',
        'source',
        'toDataURL',
        'destroy',
        '_tempArray16_0',
        '_tempArray16_3',
        '_compIdToNode',
        'Resource',
        '_duration',
        '_animationEvents',
        '_parse',
        'Byte',
        'LAYAANIMATION:03',
        'unknown\x20animationClip\x20version.',
        'load',
        'ILaya',
        'create',
        'ANIMATIONCLIP',
        'duration',
        'isFinite',
        '_hermiteInterpolateQuaternion',
        '_evaluateClipDatasRealTime',
        '_hermiteInterpolate',
        '_evaluateFrameNodeVector3DatasRealTime',
        '_evaluateFrameNodeQuaternionDatasRealTime',
        '_tempQuaternion0',
        'AnimationClip:unknown\x20node\x20type.',
        '_evaluateClipDatasRealTimeForNative',
        '_hermiteInterpolateVector3',
        '_binarySearchEventIndex',
        'splice',
        '_disposeResource',
        '_currentState',
        'normalizedTime',
        '_normalizedTime',
        'animatorState',
        '_resetPlayState',
        '_finish',
        '_startPlayTime',
        '_elapsedTime',
        '_playEventIndex',
        '_lastIsFront',
        '_normalizedPlayTime',
        '_cloneTo',
        '_referenceCount',
        '_playType',
        '_crossDuration',
        '_crossMark',
        '_crossNodesOwners',
        '_crossNodesOwnersIndicesMap',
        '_srcCrossClipNodeIndices',
        '_destCrossClipNodeIndices',
        '_states',
        '_playStateInfo',
        '_crossPlayStateInfo',
        'blendingMode',
        'BLENDINGMODE_OVERRIDE',
        'defaultWeight',
        'defaultState',
        '_defaultState',
        '_statesMap',
        'avatarMask',
        '_avatarMask',
        '_removeClip',
        '_clip',
        '_animator',
        '_nodeOwners',
        '_removeReference',
        '_removeKeyframeNodeOwner',
        '_getReferenceCount',
        '_addReference',
        '_clearReference',
        'addState',
        'AnimatorControllerLayer:this\x20stat\x27s\x20name\x20has\x20exist.',
        '_getOwnersByClip',
        'playOnWake',
        'BLENDINGMODE_ADDTIVE',
        'speed',
        'clipStart',
        'clip',
        '_realtimeDatas',
        '_currentFrameIndices',
        '_resetFrameIndices',
        'addScript',
        '_scripts',
        'getScript',
        'getScripts',
        'clipEnd',
        'indexInList',
        'referenceCount',
        'updateMark',
        'property',
        'defaultValue',
        'crossFixedValue',
        'saveCrossFixedValue',
        '_avatarPathMap',
        '_catchAnimator',
        'getCatchAnimator',
        'getTransformActive',
        'setTransformActive',
        'getAllTranfromPath',
        'Component',
        '_keyframeNodeOwners',
        '_linkAvatarSpritesData',
        '_renderableSprites',
        'cullingMode',
        'CULLINGMODE_CULLCOMPLETELY',
        '_speed',
        '_keyframeNodeOwnerMap',
        '_updateMark',
        '_animatorPool',
        'enabled',
        'controllerLayerCount',
        '_controllerLayers',
        'owner',
        'linkSprite3DToAvatarNode',
        '_addKeyframeNodeOwner',
        'constructor',
        'indexOf',
        '_avatar',
        '_avatarNodeMap',
        '_rootNode',
        'getChildByName',
        '_updatePlayer',
        'onStateExit',
        'onStateUpdate',
        'apply',
        '_lastElapsedTime',
        '_eventScript',
        '_updateClipDatas',
        '_applyFloat',
        '_applyRotation',
        '_tempQuaternion1',
        'quaternionWeight',
        '_applyScale',
        'localPosition',
        '_applyPositionAndRotationEuler',
        'localRotation',
        'localScale',
        'scaleBlend',
        'localRotationEuler',
        '_setClipDatasToNode',
        '_setCrossClipDatasToNode',
        '_crossNodesOwnersCount',
        '_setFixedCrossClipDatasToNode',
        '_applyCrossData',
        '_revertDefaultKeyframeNodes',
        'Animator:unknown\x20type.',
        '_setHierarchyAnimator',
        '_hierarchyAnimator',
        '_changeAnimatorToLinkSprite3DNoAvatar',
        '_onDestroy',
        '_scene',
        'getDefaultState',
        'play',
        'remove',
        '_handleSpriteOwnersBySprite',
        'avatar',
        'linkSprites',
        'layers',
        'weight',
        'states',
        'clipPath',
        'Loader',
        'getControllerLayer',
        '_update',
        'timer',
        '_delta',
        'isRender',
        '_crossPlayState',
        '_updateEventScript',
        '_updateAvatarNodesToSprite',
        'addControllerLayer',
        '_linkSprites',
        '_linkToSprites',
        'Animator:this\x20function\x20is\x20discard,please\x20use\x20animatorControllerLayer.addState()\x20instead.',
        'removeState',
        'NEGATIVE_INFINITY',
        'Invalid\x20layerIndex\x20',
        'crossFade',
        '_nodesDic',
        'onStateEnter',
        'Invalid\x20name\x20',
        'getCurrentAnimatorPlayState',
        '_getAvatarOwnersAndInitDatasAsync',
        '_changeHierarchyAnimatorAvatar',
        '_cloneDatasToAnimator',
        '_isLinkSpriteToAnimationNode',
        '_transform',
        '_dummy',
        'transform',
        'isStatic',
        'worldMatrix',
        'getWorldMatrix',
        '_linkAvatarSprites',
        '_isLinkSpriteToAnimationNodeData',
        'unLinkSprite3DToAvatarNode',
        '_owner',
        '_updateAnimationNodeWorldMatix',
        'updateAnimationNodeWorldMatix',
        '_tempVector31',
        'invertY',
        'configPipeLineMode',
        'Forward',
        'BaseTexture',
        'RenderTextureDepthFormat',
        'DEPTH_16',
        '_inPool',
        '_mulSampler',
        '_mulSamplerRT',
        '_isCameraTarget',
        '_glTextureType',
        'TEXTURE_2D',
        '_width',
        '_height',
        '_depthStencilFormat',
        '_mipmapCount',
        'currentActive',
        '_currentActive',
        'createFromPool',
        '_pool',
        '_format',
        'depthStencilFormat',
        'layaGPUInstance',
        '_frameBuffer',
        'createFramebuffer',
        'bindFramebuffer',
        'Depth',
        'ShadowMap',
        '_mulRenderBuffer',
        'createRenderbuffer',
        'bindRenderbuffer',
        'renderbufferStorageMultisample',
        'RENDERBUFFER',
        'RGB8',
        'ALPHA',
        'RGBA16F',
        'framebufferRenderbuffer',
        'FRAMEBUFFER',
        'COLOR_ATTACHMENT0',
        'WebGLContext',
        'bindTexture',
        '_glTexture',
        'texStorage2D',
        'texImage2D',
        'RGB',
        'RGBA8',
        'RGBA',
        'mipmapCount',
        '_oesTextureHalfFloat',
        'HALF_FLOAT_OES',
        '_mulFrameBuffer',
        'DEPTH_COMPONENT16',
        'UNSIGNED_SHORT',
        'framebufferTexture2D',
        'DEPTH_ATTACHMENT',
        'DEPTH24_STENCIL8',
        'DEPTH_STENCIL',
        'DEPTH_STENCIL_ATTACHMENT',
        'texParameteri',
        'TEXTURE_COMPARE_MODE',
        'DEPTHSTENCIL_NONE',
        '_depthStencilBuffer',
        'STENCIL_INDEX8',
        'DEPTHSTENCIL_24_8',
        'renderbufferStorage',
        'STENCIL_8',
        'STENCIL_ATTACHMENT',
        '_setWarpMode',
        'TEXTURE_WRAP_S',
        '_wrapModeU',
        'TEXTURE_WRAP_T',
        '_wrapModeV',
        '_setAnisotropy',
        '_anisoLevel',
        '_readyed',
        '_activeResource',
        '_setGPUMemory',
        '_start',
        '_instance',
        '_end',
        'clearBufferfv',
        'COLOR',
        'blitFramebuffer',
        'COLOR_BUFFER_BIT',
        'NEAREST',
        'threadMode',
        'checkFramebufferStatus',
        'FRAMEBUFFER_COMPLETE',
        'readPixels',
        'UNSIGNED_BYTE',
        'FLOAT',
        'deleteTexture',
        'deleteRenderbuffer',
        'getDataAsync',
        'readPixelsAsync',
        '_intersectionDefineDatas',
        '_mask',
        '_length',
        '_index',
        '_value',
        'addDefineDatas',
        'removeDefineDatas',
        'has',
        'Buffer',
        '_vertexDeclaration',
        '_bufferUsage',
        '_bufferType',
        'ARRAY_BUFFER',
        '_byteLength',
        'bind',
        'bufferData',
        '_buffer',
        '_float32Reader',
        'buffer',
        'vertexDeclaration',
        'canRead',
        '_canRead',
        '_bindedVertexBuffer',
        '_glBuffer',
        'MAX_SAFE_INTEGER',
        'bufferSubData',
        'set',
        'getUint8Data',
        'getFloat32Data',
        'Can\x27t\x20read\x20data\x20from\x20VertexBuffer\x20with\x20only\x20write\x20flag!',
        'markAsUnreadbale',
        'DATATYPE_FLOAT32ARRAY',
        'DATATYPE_UINT8ARRAY',
        '_elementInfos',
        'getElementInfos',
        'VertexElementFormat:\x20this\x20vertexElementFormat\x20is\x20not\x20implement.',
        'single',
        'Vector2',
        'vector2',
        'Vector3',
        'vector3',
        'Vector4',
        'vector4',
        'Color',
        'color',
        'byte4',
        'Short2',
        'short2',
        'Short4',
        'short4',
        'normalizedshort2',
        'NormalizedShort4',
        'normalizedshort4',
        'HalfVector2',
        'halfvector2',
        'HalfVector4',
        'halfvector4',
        'createRotationZ',
        'createRotationYawPitchRoll',
        'createFromYawPitchRoll',
        '_tempQuaternion',
        'setPosition',
        'createScaling',
        'multiplyForNative',
        'createFromQuaternion',
        'createAffineTransformation',
        '_tempVector0',
        '_tempVector1',
        '_tempVector2',
        'createPerspective',
        'tan',
        'createPerspectiveOffCenter',
        'createOrthoOffCenter',
        'getElementByRowColumn',
        'column\x20Rows\x20and\x20columns\x20for\x20matrices\x20run\x20from\x200\x20to\x203,\x20inclusive.',
        'row\x20Rows\x20and\x20columns\x20for\x20matrices\x20run\x20from\x200\x20to\x203,\x20inclusive.',
        'equalsOtherMatrix',
        'decomposeTransRotScale',
        '_tempMatrix4x4',
        'decomposeTransRotMatScale',
        'decomposeYawPitchRoll',
        'atan2',
        'billboard',
        '_tempVector3',
        'translation',
        'getTranslationVector',
        'setForward',
        'getInvertFront',
        '_ownerResource',
        '_data',
        '_defineDatas',
        '_runtimeCopyValues',
        '_initData',
        'removeDefine',
        'hasDefine',
        'clearDefine',
        'clear',
        'setBool',
        'getNumber',
        'getVector2',
        'setVector2',
        'getVector3',
        'getVector',
        'setVector',
        'getQuaternion',
        'getMatrix4x4',
        'setMatrix4x4',
        'getBuffer',
        'setTexture',
        'erroTextur',
        'getTexture',
        'setValueData',
        'getValueData',
        'getAttribute',
        'getLength',
        'setLength',
        'number',
        'boolean',
        'cloneToForNative',
        '_int32Data',
        '_nativeArray',
        'setNumber',
        'setInt',
        'setVector3',
        '_initDataForNative',
        '_frameCount',
        '_float32Data',
        'createArrayBufferRef',
        'ARRAY_BUFFER_TYPE_DATA',
        'needRenewArrayBufferForNative',
        'conchRef',
        '_ptrID',
        'updateArrayBufferRef',
        'isSyncToRender',
        'getDataForNative',
        'getBoolForNative',
        'setBoolForNative',
        'getNumberForNative',
        'setNumberForNative',
        'getMatrix4x4ForNative',
        'setMatrix4x4ForNative',
        'setReferenceForNative',
        'getVectorForNative',
        'getVector2ForNative',
        'setVector2ForNative',
        'getVector3ForNative',
        'setVector3ForNative',
        'getQuaternionForNative',
        'setQuaternionForNative',
        'getBufferForNative',
        'setBufferForNative',
        'getAttributeForNative',
        'setAttributeForNative',
        'syncBufferToRenderThread',
        'getTextureForNative',
        'setTextureForNative',
        '_getSource',
        'clearRuntimeCopyArray',
        '_SET_RUNTIME_VALUE_MODE_REFERENCE_',
        'createArrayBufferRefs',
        'ARRAY_BUFFER_REF_REFERENCE',
        'getPtrID',
        'getRefNum',
        'setRuntimeValueMode',
        'loopCount',
        'obj',
        'clearRefNum',
        '_vertexElementsDic',
        '_vertexStride',
        '_vertexElements',
        '_shaderValues',
        '_elementUsage',
        '_elementFormat',
        '_offset',
        'vertexStride',
        'vertexElementCount',
        'getVertexElementByIndex',
        'getVertexElementByUsage',
        '_uniqueIDCounter',
        'elementFormat',
        'applyVertexBuffer',
        'BufferStateBase',
        '_curBindedBufferState',
        'vertexAttribPointer',
        'BufferState:\x20must\x20call\x20bind()\x20function\x20first.',
        'applyVertexBuffers',
        'enableVertexAttribArray',
        'applyInstanceVertexBuffer',
        'vertexAttribDivisor',
        'applyIndexBuffer',
        '_bindedIndexBuffer',
        '_bindForVAO',
        '_bufferState',
        '_bufferStateInvertUV',
        'STATIC_DRAW',
        '_vertexBuffer',
        '_vertices',
        'unBind',
        '_vertexBufferInvertUV',
        'setData',
        'SCREENQUAD_POSITION_UV',
        'TRIANGLE_STRIP',
        'Stat',
        'renderBatches',
        'renderInvertUV',
        'drawArrays',
        '_verticesInvertUV',
        'SCREENTRIANGLE_POSITION_UV',
        'render',
        'TRIANGLES',
        '_subShaderIndex',
        'shader',
        '_shader',
        'subShaderIndex',
        '_passIndex',
        'defineNames',
        'getSubShaderAt',
        '_passes',
        'getDefineByName',
        'ShaderVariantInfo:Invalid\x20defineName\x20',
        '_name',
        '\x20subShaderIndex\x20of\x20',
        'ShaderVariantInfo:Shader\x20don\x27t\x20have\x20passIndex\x20of\x20',
        'ShaderVariantInfo:Shader\x20can\x27t\x20be\x20null.',
        '_defineNames',
        'equal',
        '_allCompiled',
        '_variants',
        'allCompiled',
        'variantCount',
        'contatins',
        'getByIndex',
        'compile',
        '_attributeMap',
        '_enableInstancing',
        '_supportReflectionProbe',
        '_uniformMap',
        '_getNamesByDefineData',
        '_maskMap',
        '_defineMap',
        'propertyNameToID',
        '_propertyNameMap',
        'replace',
        '_clearCR',
        'ShaderCompile',
        'compileShaderByDefineNames',
        'find',
        '_compileDefineDatas',
        'withCompile',
        'Shader3D:\x20unknown\x20passIndex.',
        'Shader3D:\x20unknown\x20subShaderIndex.',
        'Shader3D:\x20unknown\x20shader\x20name.',
        '_preCompileShader',
        'addSubShader',
        '_subShaders',
        'compileShader',
        'RENDER_STATE_BLEND',
        'RENDER_STATE_BLEND_SRC',
        'RENDER_STATE_BLEND_DST',
        'RENDER_STATE_BLEND_SRC_RGB',
        'RENDER_STATE_BLEND_SRC_ALPHA',
        'RENDER_STATE_BLEND_CONST_COLOR',
        'RENDER_STATE_BLEND_EQUATION_RGB',
        'RENDER_STATE_BLEND_EQUATION_ALPHA',
        'RENDER_STATE_DEPTH_TEST',
        'RENDER_STATE_DEPTH_WRITE',
        'PERIOD_MATERIAL',
        'PERIOD_SPRITE',
        'PERIOD_CAMERA',
        'PERIOD_SCENE',
        '_propertyNameCounter',
        '_defineCounter',
        'debugMode',
        'debugShaderVariantCollection',
        '_commandBuffer',
        '_screenShaderData',
        '_screenShader',
        'run',
        'recover',
        '_context',
        'SCREENTEXTUREOFFSETSCALE_NAME',
        'u_OffsetScale',
        'MAINTEXTURE_TEXELSIZE_NAME',
        'u_MainTex_TexelSize',
        'SCREENTEXTURE_NAME',
        'SCREENTEXTUREOFFSETSCALE_ID',
        'MAINTEXTURE_TEXELSIZE_ID',
        '_source',
        '_dest',
        '_offsetScale',
        '_shaderData',
        '_subShader',
        '_sourceTexelSize',
        '_screenType',
        '_drawDefineCavans',
        '_SCREENTYPE_QUAD',
        'pop',
        '_internalRenderTexture',
        '_camera',
        'viewport',
        'clientHeight',
        'SCREENTEXTURE_ID',
        '_defaultOffsetScale',
        '_compileDefine',
        'uploadUniforms',
        '_materialUniformParamsMap',
        'BlitScreenQuadCMD:unknown\x20screen\x20Type.',
        '_SCREENTYPE_TRIANGLE',
        '_renderTexture',
        'Int',
        'Bool',
        'Number',
        'Quaternion',
        'Texture',
        'ShaderDataType',
        '_nameID',
        '_dataType',
        'setQuaternion',
        'setBuffer',
        'no\x20type\x20shaderValue\x20on\x20this\x20CommendBuffer',
        '_localRotation',
        '_localMatrix',
        '_position',
        '_rotation',
        '_scale',
        '_rotationEuler',
        '_children',
        '_setTransformFlag',
        'TRANSFORM_LOCALQUATERNION',
        'TRANSFORM_LOCALEULER',
        'TRANSFORM_LOCALMATRIX',
        'TRANSFORM_WORLDQUATERNION',
        'TRANSFORM_WORLDEULER',
        'TRANSFORM_WORLDSCALE',
        'TRANSFORM_WORLDMATRIX',
        'getWorldLossyScale',
        '_getTransformFlag',
        'localPositionX',
        '_localPosition',
        'localPositionY',
        'localPositionZ',
        '_onWorldPositionTransform',
        'localRotationX',
        'localRotationY',
        'localRotationZ',
        'localRotationW',
        '_angleToRandin',
        '_onWorldRotationTransform',
        'localScaleX',
        '_localScale',
        'localScaleY',
        'localScaleZ',
        '_onWorldScaleTransform',
        'localRotationEulerX',
        '_localRotationEuler',
        'localRotationEulerY',
        'localRotationEulerZ',
        '_tempVector30',
        'localMatrix',
        '_onWorldTransform',
        'position',
        'TRANSFORM_WORLDPOSITION',
        'rotation',
        'rotationEuler',
        '_worldMatrix',
        '_getScaleMatrix',
        '_tempMatrix3x30',
        '_transformFlag',
        '_setParent',
        'TRANSFORM_CHANGED',
        '_onWorldPositionRotationTransform',
        '_onWorldPositionScaleTransform',
        'event',
        'Event',
        'translate',
        '_tempMatrix0',
        'getForward',
        'getRight',
        'setWorldLossyScale',
        '_tempMatrix3x33',
        'Transfrm3D:\x20discard\x20function,please\x20use\x20getWorldLossyScale\x20instead.',
        'Transfrm3D:\x20discard\x20function,please\x20use\x20setWorldLossyScale\x20instead.',
        '_tempMatrix3x31',
        '_tempMatrix3x32',
        'Node',
        '_needProcessCollisions',
        '_needProcessTriggers',
        '_isStatic',
        'layer',
        'New\x20Sprite3D',
        'instantiate',
        'loader',
        'HIERARCHY',
        '_layer',
        'Layer\x20value\x20must\x20be\x200-30.',
        '_url',
        'URL',
        'formatURL',
        '_changeAnimatorsToLinkSprite3D',
        'getComponent',
        'unshift',
        '_changeHierarchyAnimator',
        '_clearHierarchyAnimator',
        '_changeAnimatorAvatar',
        '_onInActiveInScene',
        '_removeScript',
        '_onAdded',
        '_onRemoved',
        'active',
        'destroyed',
        'Sprite3D:\x20Can\x27t\x20be\x20cloned\x20if\x20the\x20Sprite3D\x20has\x20destroyed.',
        '_createSprite3DInstance',
        '_create',
        '_parseSprite3DInstance',
        'clearRes',
        'u_WorldMat',
        '_renderShaderValue',
        '_mesh',
        '_matrix',
        '_material',
        'scene',
        'cameraShaderValue',
        'projectionViewMatrix',
        'MVPMATRIX',
        '_projectionViewWorldMatrix',
        'pipelineMode',
        '_pipelineMode',
        '_sceneUniformParamsMap',
        '_spriteUniformParamsMap',
        '_cameraUniformParamsMap',
        'uploadRenderStateBlendDepth',
        '_subMeshes',
        '_render',
        '_subMeshIndex',
        '_prepareRender',
        '_backgroundColor',
        '_depth',
        '_clearColor',
        '_clearDepth',
        'clearColor',
        'DEPTH_BUFFER_BIT',
        'Camera',
        '_geometry',
        'renderType',
        '_updateRenderType',
        '_renderUpdate',
        '_renderUpdateWithCamera',
        'RenderElement',
        'renderSubShader',
        '_uploadMark',
        '_uploadScene',
        '_uploadRender',
        '_uploadRenderType',
        '_uploadCameraShaderValue',
        '_uploadMaterial',
        'RENDERTYPE_NORMAL',
        '_revertBatchRenderUpdate',
        'This\x20render\x20command\x20material\x20cannot\x20be\x20empty',
        '_renderElements',
        '_renderElementUpdate',
        'MESH_WORLDMATRIX_ROW0',
        'MESH_WORLDMATRIX_ROW1',
        'MESH_WORLDMATRIX_ROW2',
        'MESH_SIMPLEANIMATOR',
        'getVertexDeclaration',
        '_vertexDeclarationMap',
        'split',
        'MESH_POSITION0',
        'NORMAL',
        'MESH_NORMAL0',
        'MESH_COLOR0',
        'MESH_TEXTURECOORDINATE0',
        'UV1',
        'MESH_TEXTURECOORDINATE1',
        'BLENDINDICES',
        'MESH_BLENDINDICES0',
        'Byte4',
        'VertexMesh:\x20unknown\x20vertex\x20flag.',
        'MESH_TANGENT0',
        'MESH_BLENDWEIGHT0',
        'MESH_CUSTOME0',
        'MESH_CUSTOME1',
        'MESH_CUSTOME3',
        '_instanceWorldMatrixData',
        '_instanceWorldMatrixBuffer',
        'instanceWorldMatrixDeclaration',
        'maxInstanceCount',
        'the\x20number\x20of\x20renderings\x20exceeds\x20the\x20maximum\x20number\x20of\x20merges',
        '_drawnums',
        '_updateWorldMatrixBuffer',
        '_setInstanceBuffer',
        '_instanceBufferState',
        '_instanceProperty',
        '_propertyMap',
        '_indexBuffer',
        '_matrixs',
        'orphanStorage',
        '_indexCount',
        'drawElementsInstanced',
        '_indexStart',
        'trianglesFaces',
        'setContext',
        'addDefine',
        'SHADERDEFINE_GPU_INSTANCE',
        'uploadRenderStateFrontFace',
        'updateVertexBufferData',
        'setWorldMatrix',
        '_commands',
        '_apply',
        'setGlobalTexture',
        'setShaderDataVector',
        'setGlobalVector',
        'setShaderDataVector3',
        'setGlobalVector3',
        'setShaderDataVector2',
        'setGlobalVector2',
        'setShaderDataNumber',
        'setShaderDataInt',
        'setShaderDataMatrix',
        'setGlobalMatrix',
        'blitScreenQuad',
        'shaderData',
        'blitScreenTriangle',
        'setRenderTarget',
        'clearRenderTarget',
        'drawRender',
        'supportInstance',
        'camera',
        'compositeShaderData',
        'deferredReleaseTextures',
        '_effects',
        '_compositeShaderData',
        'command',
        'SHADERDEFINE_BLOOM_LOW',
        'BLOOM_LOW',
        'BLOOM',
        'SHADERDEFINE_FINALPASS',
        'FINALPASS',
        'enable',
        '_enable',
        '_init',
        'supportWebGLPlusRendering',
        'destination',
        'SHADERVALUE_AUTOEXPOSURETEX',
        'whiteTexture',
        '_getCanvasWidth',
        '_getCanvasHeight',
        '_screenOffsetScale',
        'recoverToPool',
        'addEffect',
        'removeEffect',
        'SHADERVALUE_MAINTEX',
        'u_MainTex',
        'SHADERVALUE_BLOOMTEX',
        'u_AutoExposureTex',
        'SHADERVALUE_BLOOM_DIRTTEX',
        'u_BloomTex_TexelSize',
        'u_Bloom_DirtTileOffset',
        'SHADERVALUE_BLOOM_SETTINGS',
        'u_Bloom_Settings',
        'SHADERVALUE_BLOOM_COLOR',
        'u_Bloom_Color',
        'EventDispatcher',
        '_localQuaternionUpdate',
        '_locaEulerlUpdate',
        '_localUpdate',
        '_createAffineTransformationArray',
        '_worldUpdate',
        '_getlocalMatrix',
        'setParent',
        'removeChild',
        'getChildByIndex',
        'getChildCount',
        'addChild',
        '_cloneNative',
        '_worldMatrixIndex',
        '_cloneToNative',
        '_nativeCurCloneCount',
        '_nativeNodeCount',
        'version',
        'rootNode',
        '_parseNode',
        'AVATAR',
        '_initCloneToAnimator',
        'props',
        'child',
        '_cloneDatasToAnimatorNative',
        '_animationNodeLocalPositions',
        '_animationNodeLocalScales',
        '_animationNodeWorldMatrixs',
        '_animationNodeParentIndices',
        'Laya',
        'MATERIAL',
        '__initDefine__',
        'SHADERDEFINE_ALPHATEST',
        'ALPHATEST',
        'getRegClass',
        'setShaderName',
        'LAYAMATERIAL:01',
        'LAYAMATERIAL:02',
        'vectors',
        'BaseMaterial:unkonwn\x20color\x20length.',
        'textures',
        'path',
        'getRes',
        'defines',
        'renderStates',
        'blend',
        'cull',
        'depthTest',
        'depthWrite',
        'blendSrc',
        'srcBlend',
        'blendDst',
        'dstBlend',
        'BaseMaterial:unkonwn\x20version.',
        'alphaTestValue',
        'ALPHATESTVALUE',
        'alphaTest',
        'getBool',
        'getInt',
        'CULL',
        'BLEND',
        'BLEND_SRC',
        'BLEND_DST',
        'DEPTH_TEST',
        'MaterialProperty',
        'MaterialDefine',
        '_removeTetxureReference',
        'BaseMaterial:\x20unknown\x20shader\x20name.',
        'setShaderPropertyValue',
        'getShaderPropertyValue',
        'renderQueue',
        'RENDERQUEUE_OPAQUE',
        'RENDERQUEUE_ALPHATEST',
        'RENDERQUEUE_TRANSPARENT',
        'u_AlphaTestValue',
        's_Cull',
        's_Blend',
        's_BlendSrc',
        's_BlendDst',
        's_DepthTest',
        'DEPTH_WRITE',
        's_DepthWrite',
        'CULL_BACK',
        'BLEND_DISABLE',
        'BLENDPARAM_ONE',
        'BLENDPARAM_ZERO',
        'dstBlendRGB',
        'srcBlendAlpha',
        'blendConstColor',
        'blendEquation',
        'BLENDEQUATION_ADD',
        'blendEquationRGB',
        'blendEquationAlpha',
        'DEPTHTEST_LEQUAL',
        'srcBlendRGB',
        'dstBlendAlpha',
        'CULL_NONE',
        'BLEND_ENABLE_ALL',
        'BLENDPARAM_ONE_MINUS_SRC_COLOR',
        'BLENDPARAM_DST_COLOR',
        'BLENDPARAM_ONE_MINUS_DST_COLOR',
        'BLENDPARAM_DST_ALPHA',
        'BLENDPARAM_ONE_MINUS_DST_ALPHA',
        'BLENDPARAM_SRC_ALPHA_SATURATE',
        'BLENDEQUATION_SUBTRACT',
        'BLENDEQUATION_REVERSE_SUBTRACT',
        'DEPTHTEST_OFF',
        'DEPTHTEST_LESS',
        'DEPTHTEST_EQUAL',
        'DEPTHTEST_NOTEQUAL',
        'DEPTHTEST_GEQUAL',
        'DEPTHTEST_ALWAYS',
        'BLINNPHONG',
        'albedoIntensity',
        'ALBEDOCOLOR',
        'MATERIALSPECULAR',
        'TILINGOFFSET',
        'SHADERDEFINE_DIFFUSEMAP',
        'DIFFUSEMAP',
        'SHADERDEFINE_NORMALMAP',
        'NORMALMAP',
        'SHADERDEFINE_SPECULARMAP',
        'SPECULARMAP',
        'ENABLEVERTEXCOLOR',
        'SHADERDEFINE_ENABLETRANSMISSION',
        'ENABLETRANSMISSION',
        'SHADERDEFINE_THICKNESSMAP',
        'THICKNESSMAP',
        '_ColorR',
        'albedoColor',
        '_ColorG',
        '_ColorB',
        '_ColorA',
        '_Color',
        '_SpecColorR',
        '_SpecColorG',
        '_SpecColorB',
        '_SpecColorA',
        '_SpecColor',
        'specularColor',
        'SHININESS',
        '_MainTex_STX',
        'tilingOffset',
        '_MainTex_STY',
        '_MainTex_STZ',
        '_MainTex_STW',
        '_MainTex_ST',
        '_Cutoff',
        'renderMode',
        'RENDERMODE_CUTOUT',
        'RENDERMODE_TRANSPARENT',
        'BLENDPARAM_SRC_ALPHA',
        'BLENDPARAM_ONE_MINUS_SRC_ALPHA',
        'Material:renderMode\x20value\x20error.',
        'SHADERDEFINE_ENABLEVERTEXCOLOR',
        'enableVertexColor',
        'tilingOffsetX',
        'tilingOffsetY',
        'tilingOffsetW',
        'albedoColorR',
        'albedoColorG',
        'albedoColorB',
        'albedoColorA',
        'AlbedoIntensity',
        'specularColorR',
        'specularColorG',
        'specularColorB',
        'specularColorA',
        'shininess',
        '_Shininess',
        'albedoTexture',
        'normalTexture',
        'NORMALTEXTURE',
        'specularTexture',
        'enableTransmission',
        'transmissionRate',
        'TRANSMISSIONRATE',
        'transmissionRata',
        'backDiffuse',
        'IBACKDIFFUSE',
        'backScale',
        'thinknessTexture',
        'THINKNESSTEXTURE',
        'TRANSMISSIONCOLOR',
        'ALBEDOTEXTURE',
        'u_DiffuseTexture',
        'u_NormalTexture',
        'SPECULARTEXTURE',
        'u_Shininess',
        'u_TilingOffset',
        'u_TransmissionRate',
        'IBACKSCALE',
        'u_BackScale',
        'u_AlbedoIntensity',
        'RENDERMODE_ADDTIVE',
        'SHADERDEFINE_MAINTEXTURE',
        'MAINTEXTURE',
        '_TintColorR',
        '_TintColorG',
        '_TintColorB',
        '_TintColorA',
        '_TintColor',
        'SHADERDEFINE_ADDTIVEFOG',
        'colorR',
        'colorG',
        'colorB',
        'colorA',
        'TINTCOLOR',
        'texture',
        'tilingOffsetZ',
        'RENDERMODE_ALPHABLENDED',
        'u_AlbedoColor',
        'ExtendTerrain',
        'RENDERMODE_OPAQUE',
        'SHADERDEFINE_DETAIL_NUM1',
        'ExtendTerrain_DETAIL_NUM1',
        'SHADERDEFINE_DETAIL_NUM2',
        'ExtendTerrain_DETAIL_NUM2',
        'SHADERDEFINE_DETAIL_NUM3',
        'SHADERDEFINE_DETAIL_NUM4',
        'ExtendTerrain_DETAIL_NUM4',
        'SHADERDEFINE_DETAIL_NUM5',
        'ExtendTerrain_DETAIL_NUM5',
        'splatAlphaTexture',
        'SPLATALPHATEXTURE',
        'diffuseTexture1',
        'DIFFUSETEXTURE1',
        '_setDetailNum',
        'diffuseTexture2',
        'DIFFUSETEXTURE2',
        'diffuseTexture3',
        'DIFFUSETEXTURE3',
        'DIFFUSETEXTURE4',
        'diffuseTexture5',
        'DIFFUSETEXTURE5',
        'diffuseScaleOffset1',
        'DIFFUSESCALEOFFSET1',
        'diffuseScaleOffset2',
        'DIFFUSESCALEOFFSET2',
        'diffuseScaleOffset3',
        'DIFFUSESCALEOFFSET3',
        'DIFFUSESCALEOFFSET4',
        'ExtendTerrainMaterial:renderMode\x20value\x20error.',
        'u_DiffuseTexture1',
        'u_DiffuseTexture2',
        'u_DiffuseTexture3',
        'u_DiffuseTexture4',
        'u_DiffuseTexture5',
        'u_DiffuseScaleOffset1',
        'u_DiffuseScaleOffset2',
        'u_DiffuseScaleOffset3',
        'u_DiffuseScaleOffset4',
        'DIFFUSESCALEOFFSET5',
        'u_DiffuseScaleOffset5',
        'Opaque',
        'Cutout',
        'Fade',
        'Transparent',
        'PBRRenderMode',
        'SMOOTHNESS',
        'OCCLUSIONSTRENGTH',
        'NORMALSCALE',
        'PARALLAXSCALE',
        'SHADERDEFINE_ALBEDOTEXTURE',
        'SHADERDEFINE_NORMALTEXTURE',
        'SHADERDEFINE_PARALLAXTEXTURE',
        'SHADERDEFINE_OCCLUSIONTEXTURE',
        'OCCLUSIONTEXTURE',
        'SHADERDEFINE_EMISSION',
        'SHADERDEFINE_EMISSIONTEXTURE',
        'EMISSIONTEXTURE',
        'SHADERDEFINE_TRANSPARENTBLEND',
        'TRANSPARENTBLEND',
        'SHADERDEFINE_LAYA_PBR_BRDF_HIGH',
        'LAYA_PBR_BRDF_HIGH',
        'SHADERDEFINE_LAYA_PBR_BRDF_LOW',
        'LAYA_PBR_BRDF_LOW',
        'normalTextureScale',
        'parallaxTexture',
        'PARALLAXTEXTURE',
        'parallaxTextureScale',
        'occlusionTexture',
        'occlusionTextureStrength',
        'smoothness',
        'smoothnessTextureScale',
        'SMOOTHNESSSCALE',
        'EMISSIONCOLOR',
        'emissionColor',
        'emissionTexture',
        'PBRMaterial:unknown\x20renderMode\x20value.',
        'u_AlbedoTexture',
        'u_NormalScale',
        'u_Smoothness',
        'u_SmoothnessScale',
        'u_OcclusionTexture',
        'u_occlusionStrength',
        'u_ParallaxTexture',
        'u_ParallaxScale',
        'u_EmissionColor',
        'renderQuality',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#define\x20SETUP_BRDF_INPUT\x20specularSetup\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22PBRFSInput.glsl\x22;\x0d\x0a#include\x20\x22LayaPBRBRDF.glsl\x22;\x0d\x0a#include\x20\x22GlobalIllumination.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#include\x20\x22PBRCore.glsl\x22;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09fragmentForward();\x0d\x0a}',
        '#include\x20\x22PBRVSInput.glsl\x22;\x0a#include\x20\x22Lighting.glsl\x22;\x0a#include\x20\x22PBRVertex.glsl\x22;\x0a\x0avoid\x20main()\x0a{\x0a\x09vertexForward();\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22ShadowCasterFS.glsl\x22\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09gl_FragColor=shadowCasterFragment();\x0d\x0a}',
        '#include\x20\x22ShadowCasterVS.glsl\x22\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20positionCS\x20=\x20\x20shadowCasterVertex();\x0a\x09gl_Position=remapGLPositionZ(positionCS);\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0auniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x0d\x0a//传入法线\x0d\x0avarying\x20vec4\x20depthNormals;\x0d\x0a\x0d\x0a\x0d\x0avec4\x20depthNormalsVertex()\x0d\x0a{\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09worldMat\x20=\x20worldMat\x20*\x20skinTransform;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec4\x20positionWS\x20=\x20worldMat\x20*\x20a_Position;\x0d\x0a\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x20\x20\x0d\x0a\x0d\x0a\x09vec3\x20normalWS\x20=\x20normalize(a_Normal*worldInvMat);//if\x20no\x20normalize\x20will\x20cause\x20precision\x20problem\x0d\x0a\x0d\x0a\x09depthNormals.xyz\x20=\x20normalWS;\x0d\x0a\x09vec4\x20positionCS\x20=\x20u_ViewProjection\x20*\x20positionWS;\x0d\x0a\x09depthNormals.w\x20=\x20(positionCS.z\x20*\x202.0\x20-\x20positionCS.w)*u_ProjectionParams.w;\x0d\x0a\x09\x0d\x0a\x20\x20\x20\x20return\x20positionCS;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20positionCS\x20=\x20\x20depthNormalsVertex();\x0d\x0a\x09gl_Position=remapGLPositionZ(positionCS);\x0d\x0a}',
        'textureID',
        '_stateParamsMap',
        '_vs',
        '_ps',
        '_shaderPass',
        '_program',
        '_vshader',
        '_createShader',
        'VERTEX_SHADER',
        '_pshader',
        'attachShader',
        'linkProgram',
        'getProgramParameter',
        '_customUniformParamsMap',
        '_curActTexIndex',
        'getActiveUniform',
        'location',
        'getUniformLocation',
        '[0]',
        'isArray',
        '_addShaderUnifiormFun',
        'PERIOD_CUSTOM',
        'Shader3D:\x20period\x20is\x20unkonw.',
        '_globaluniformMap',
        'createCommandEncoder',
        'addShaderUniform',
        '_stateMap',
        '_getRenderState',
        'caller',
        'BOOL',
        'fun',
        '_uniform1i',
        'uploadedValue',
        '_uniform1fv',
        '_uniform1f',
        'FLOAT_VEC2',
        '_uniform_vec2',
        'FLOAT_VEC3',
        '_uniform_vec3v',
        '_uniform_vec3',
        '_uniform_vec4v',
        '_uniform_vec4',
        'FLOAT_MAT2',
        'FLOAT_MAT3',
        '_uniformMatrix3fv',
        'FLOAT_MAT4',
        '_uniformMatrix4fv',
        'SAMPLER_2D',
        'SAMPLER_2D_SHADOW',
        '_glTextureIDs',
        '_uniform_sampler2D',
        'uniform1i',
        '_uniform_sampler3D',
        'SAMPLER_CUBE',
        '_uniform_samplerCube',
        'compile\x20shader\x20err!',
        'getShaderParameter',
        'COMPILE_STATUS',
        'uniform1f',
        'uniform1fv',
        '_uniform_vec2v',
        'uniform2fv',
        'uniform3f',
        'uniform3fv',
        'uniform4fv',
        '_uniformMatrix2fv',
        'uniformMatrix3fv',
        '_uniformMatrix4f',
        'uniformMatrix4fv',
        '_uniform1iv',
        'uniform1iv',
        'uniform2iv',
        '_uniform_vec4vi',
        'defaulteTexture',
        'activeTexture',
        'TEXTURE_3D',
        'TEXTURE_CUBE_MAP',
        'useProgram',
        'shaderCall',
        'LayaGLRunner',
        'uploadShaderUniforms',
        'renderState',
        'setDepthMask',
        'setDepthTest',
        'setDepthFunc',
        'setBlend',
        'RENDER_STATE_BLEND_EQUATION',
        'setBlendEquation',
        'setBlendFunc',
        'BLEND_ENABLE_SEPERATE',
        'setBlendEquationSeparate',
        'RENDER_STATE_CULL',
        'setCullFace',
        'CCW',
        'setFrontFace',
        'uploadCustomUniform',
        '_uniformMatrix2fvForNative',
        '_uniformMatrix3fvForNative',
        '_uniformMatrix4fvForNative',
        'uniformMatrix4fvEx',
        '_add',
        '_getIndexInList',
        'SimpleSingletonList:',
        '_setIndexInList',
        'clearElement',
        'gammaToLinearSpace',
        'toLinear',
        'toGamma',
        'linearToGammaSpace',
        'RED',
        'BLUE',
        'CYAN',
        'YELLOW',
        'MAGENTA',
        'BLACK',
        '_tempColor0',
        'bounds',
        '_getBoundBox',
        '_traversalCulling',
        'boundFrustum',
        'cullingMask',
        'frustumCulling',
        '_needRender',
        '_renderMark',
        '_distanceForSort',
        'getCenter',
        'renderObjectCulling',
        '_transparentQueue',
        '_renders',
        '_clearRenderQueue',
        'updateMotionObjects',
        'shrinkRootIfPossible',
        'getCollidingWithFrustum',
        '_debugTool',
        'drawAllBounds',
        '_drawTraversalCullingBound',
        '_quickSort',
        '_opaqueQueue',
        '_octree',
        '_castShadow',
        'cullingRenderBounds',
        'getCollidingWithCastShadowFrustum',
        'cullPlaneCount',
        'getMax',
        'normal',
        'cullingSpotShadow',
        'renderObjectCullingNative',
        '_updateForNative',
        'cullingNative',
        '_boundFrustumBuffer',
        '_cullingBuffer',
        '_cullingBufferResult',
        'useOcclusionCulling',
        '_isLayerVisible',
        'culling',
        '_cameraCullInfo',
        '_shadowCullInfo',
        'spotLightCount',
        'indices',
        '_depthSliceParam',
        '_ySlices',
        '_zSlices',
        'ceil',
        '_clusterTexture',
        '_clusterPixels',
        '_clusterDatas',
        'zMin',
        'yMin',
        'yMax',
        'xMin',
        'xMax',
        'pointLightCount',
        '_placeSpotLightToClusters',
        '_insertConePlane',
        '_tempVector36',
        '_tempVector37',
        'log2',
        '_shrinkSpotLightZPerspective',
        '_shrinkSphereLightByBoundOrth',
        '_xSlices',
        '_shrinkXYByRadiusPerspective',
        '_shrinkSpotXYByConePerspective',
        '_updatePointLightPerspective',
        '_tempLightBound',
        'range',
        '_updateSpotLightPerspective',
        '_tempVector34',
        'spotAngle',
        '_tempVector33',
        '_updatePointLightOrth',
        '_placePointLightToClusters',
        '_updateSpotLightOrth',
        '_shrinkSpotLightByBoundOrth',
        'update',
        'nearPlane',
        'farPlane',
        'viewMatrix',
        '_directionLights',
        '_pointLights',
        '_elements',
        '_spotLights',
        'orthographicVerticalSize',
        '_clusterXPlanes',
        '_clusterYPlanes',
        'setSubPixels',
        '_tempVector32',
        '_tempVector35',
        'getCoefficient',
        '_coefficients',
        'setCoefficient',
        'setCoefficients',
        '_default',
        '_pressedLoopCount',
        'sprite',
        'mousePositionX',
        'mousePositionY',
        '_identifier',
        'identifier',
        'createPlaneBy3P',
        'PlaneIntersectionType_Front',
        'PlaneIntersectionType_Intersecting',
        'origin',
        'Contains',
        'Intersects',
        'distancePlaneToPoint',
        'distanceBoxToPoint',
        'distanceSphereToPoint',
        'center',
        'radius',
        'direction',
        '_tempV33',
        '_tempV34',
        'intersectsRayAndTriangleRP',
        'intersectsRayAndTriangleRD',
        'intersectsRayAndPoint',
        'intersectsRayAndRay',
        'intersectsPlaneAndTriangle',
        'intersectsPlaneAndPoint',
        'PlaneIntersectionType_Back',
        'intersectsRayAndPlaneRD',
        'intersectsRayAndBoxRD',
        'intersectsRayAndSphereRD',
        'intersectsRayAndSphereRP',
        'intersectsSphereAndTriangle',
        'intersectsPlaneAndPlane',
        'intersectsPlaneAndBox',
        'intersectsPlaneAndSphere',
        'intersectsBoxAndBox',
        'intersectsBoxAndSphere',
        'intersectsSphereAndSphere',
        'boxContainsPoint',
        'Disjoint',
        'boxContainsSphere',
        'sphereContainsPoint',
        'sphereContainsTriangle',
        'sphereContainsBox',
        'closestPointPointTriangle',
        '_tempV35',
        '_tempV36',
        'closestPointPlanePoint',
        'closestPointSphereSphere',
        'FarBottomLeft',
        'FarTopLeft',
        'FarTopRight',
        'FarBottomRight',
        'nearBottomLeft',
        'nearTopLeft',
        'nearTopRight',
        'nearBottomRight',
        'unknown',
        'FrustumCorner',
        '_near',
        '_far',
        '_top',
        '_bottom',
        'getPlanesFromMatrix',
        '_left',
        'matrix',
        '_right',
        'near',
        'far',
        'left',
        'right',
        'top',
        'bottom',
        'equalsObj',
        'equalsBoundFrustum',
        'get3PlaneInterPoint',
        'getCorners',
        'containsPoint',
        'intersects',
        'containsBoundBox',
        'getPlane',
        'containsBoundSphere',
        'maxDepth',
        'project',
        'minDepth',
        'unprojectFromMat',
        'unprojectFromWVP',
        'rayIntersectsTriangle',
        'MIN_VALUE',
        'NaN',
        'UInt8',
        'UInt16',
        'UInt32',
        'IndexFormat',
        '_indexType',
        'ELEMENT_ARRAY_BUFFER',
        '_indexTypeByteCount',
        'unidentification\x20index\x20type.',
        'indexType',
        'indexTypeByteCount',
        'indexCount',
        'bindBuffer',
        'IndexBuffer3D:\x20must\x20bind\x20current\x20BufferState.',
        'IndexBuffer3D:\x20must\x20unbind\x20current\x20BufferState.',
        'POSITION',
        'material',
        'mesh',
        'LEQUAL',
        '_tempMatrix1',
        'setTranslationVector',
        'orthographic',
        'fieldOfView',
        'aspectRatio',
        '_applyViewProject',
        'LESS',
        'projectionMatrix',
        '_skyRenderer',
        '_forward',
        '_up',
        '_fieldOfView',
        '_useUserProjectionMatrix',
        '_orthographic',
        '_nearPlane',
        'skyRenderer',
        '_calculateProjectionMatrix',
        '_farPlane',
        '_orthographicVerticalSize',
        'renderingOrder',
        '_sortCamerasByRenderingOrder',
        'displayedInStage',
        '_onScreenSizeChanged',
        'getUp',
        'CAMERAPOS',
        'addLayer',
        'removeLayer',
        'addAllLayers',
        'removeAllLayers',
        'resetProjectionMatrix',
        '_onActive',
        '_addCamera',
        '_removeCamera',
        '_onInActive',
        'stage',
        'off',
        '_tempMatrix4x40',
        'u_CameraPos',
        'VIEWMATRIX',
        'u_View',
        'PROJECTMATRIX',
        'u_Projection',
        'VIEWPROJECTMATRIX',
        'u_ViewProjection',
        'u_CameraDirection',
        'CAMERAUP',
        'u_CameraUp',
        'u_Viewport',
        'PROJECTION_PARAMS',
        'u_ProjectionParams',
        'u_CameraDepthTexture',
        'DEPTHZBUFFERPARAMS',
        'u_ZBufferParams',
        'DEPTHMAP',
        'SHADERDEFINE_DEPTHNORMALS',
        'DEPTHNORMALSMAP',
        'RENDERINGTYPE_DEFERREDLIGHTING',
        'DEFERREDLIGHTING',
        'RENDERINGTYPE_FORWARDRENDERING',
        'FORWARDRENDERING',
        '_invertYScaleMatrix',
        '_invertYProjectionMatrix',
        '_invertYProjectionViewMatrix',
        'CLEARFLAG_SKY',
        'CLEARFLAG_DEPTHONLY',
        'CLEARFLAG_NONE',
        'None',
        'Hard',
        'SoftLow',
        'SoftHigh',
        'ShadowMode',
        'Directional',
        'Spot',
        'LightType',
        '_shadowMode',
        '_isAlternate',
        '_shadowResolution',
        '_shadowDistance',
        '_shadowDepthBias',
        '_shadowNormalBias',
        '_shadowNearPlane',
        '_shadowStrength',
        '_lightWoldMatrix',
        '_intensity',
        '_intensityColor',
        '_lightmapBakedType',
        'shadowMode',
        'shadowDistance',
        'shadowResolution',
        'shadowDepthBias',
        'shadowNormalBias',
        'shadowStrength',
        'shadowNearPlane',
        'lightmapBakedType',
        'activeInHierarchy',
        '_addToScene',
        'lightWorldMatrix',
        'intensity',
        '_addToLightQueue',
        '_alternateLights',
        'LightSprite:light\x20count\x20has\x20large\x20than\x20maxLightCount,the\x20latest\x20added\x20light\x20will\x20be\x20ignore.',
        '_removeFromScene',
        'shift',
        '_removeFromLightQueue',
        'LIGHTMAPBAKEDTYPE_BAKED',
        'diffuseColor',
        'log',
        'LightSprite:\x20discard\x20property,please\x20use\x20color\x20property\x20instead.',
        'LIGHTMAPBAKEDTYPE_REALTIME',
        'LIGHTMAPBAKEDTYPE_MIXED',
        'NoCascades',
        'TwoCascades',
        'FourCascades',
        'ShadowCascadesMode',
        'Near',
        'Far',
        'Left',
        'Right',
        'Bottom',
        'Top',
        'supportShadow',
        '_isWebGL2',
        'SystemUtils',
        'supportRenderTextureFormat',
        'init',
        '_shadowTextureFormat',
        'getTemporaryShadowTexture',
        'Bilinear',
        '_lightType',
        'ShadowUtils:Only\x20spot\x20and\x20directional\x20shadow\x20casters\x20are\x20supported\x20now.',
        'getCascadesSplitDistance',
        'getFarWithRadius',
        'applySliceTransform',
        'offsetX',
        'offsetY',
        '_backPlaneFaces',
        '_frustumPlaneNeighbors',
        '_frustumTwoPlaneCorners',
        '_edgePlanePoint2',
        '_adjustNearPlane',
        '_adjustFarPlane',
        'getBoundSphereByFrustum',
        'getDirectionalLightMatrices',
        'splitBoundSphere',
        'atlasBorderSize',
        'viewProjectMatrix',
        'resolution',
        'getSpotLightShadowData',
        '_shadowMapScaleOffsetMatrix',
        '_frustumCorners',
        'DepthNormals',
        'MotionVectors',
        'DepthTextureMode',
        '_zBufferParams',
        '_viewPort',
        'depthTexture',
        '_depthTexture',
        'depthNormalTexture',
        '_depthNormalsTexture',
        'there\x20is\x20UnDefined\x20type\x20of\x20DepthTextureMode',
        'ShadowCaster',
        'DEFINE_SHADOW_BIAS',
        'SHADOW_BIAS',
        'SCISSOR_TEST',
        'scissor',
        '_setupDepthModeShaderValue',
        'DEPTHNORMALSTEXTURE',
        'cleanUp',
        'u_ShadowBias',
        'DEPTHTEXTURE',
        'u_CameraDepthNormalsTexture',
        'SolidColor',
        'Sky',
        'DepthOnly',
        'Nothing',
        'CameraClearFlags',
        'BeforeForwardOpaque',
        'BeforeSkyBox',
        'BeforeTransparent',
        'BeforeImageEffect',
        'AfterEveryThing',
        'CameraEventFlags',
        '_updateViewMatrix',
        '_postProcess',
        '_enableHDR',
        '_viewportParams',
        '_projectionParams',
        '_needBuiltInRenderTexture',
        '_offScreenRenderTexture',
        '_cameraEventCommandBuffer',
        '_clusterPlaneCacheFlag',
        'clearFlag',
        '_viewMatrix',
        '_viewport',
        '_normalizedViewport',
        '_rayViewport',
        '_aspectRatio',
        '_boundFrustum',
        'RESIZE',
        '_onTransformChanged',
        'renderTarget',
        '_needInternalRenderTexture',
        '_getRenderTextureFormat',
        '_preRenderMainPass',
        '_aftRenderMainPass',
        'Camera:\x20the\x20aspect\x20ratio\x20has\x20to\x20be\x20a\x20positive\x20real\x20number.',
        '_calculationViewport',
        'clientWidth',
        'normalizedViewport',
        '_projectionMatrix',
        '_projectionViewMatrix',
        'postProcess',
        'enableHDR',
        'Camera:can\x27t\x20enable\x20HDR\x20in\x20this\x20device.',
        'enableBuiltInRenderTexture',
        'depthTextureMode',
        '_depthTextureMode',
        '_getRenderTexture',
        '_prepareCameraToRender',
        '_updateClusterPlaneXY',
        '_applyCommandBuffer',
        'PerformancePlugin',
        'begainSample',
        'PERFORMANCE_LAYA_3D_RENDER_RENDERCOMMANDBUFFER',
        'forEach',
        'endSample',
        '_renderShadowMap',
        'PERFORMANCE_LAYA_3D_RENDER_SHADOWMAP',
        '_mainDirectionLight',
        'SHADERDEFINE_SHADOW_SPOT',
        '_shadowCasterPass',
        'DirectionLight',
        'SHADERDEFINE_SHADOW',
        '_mainSpotLight',
        'SpotLight',
        '_preRenderScript',
        'copyTexSubImage2D',
        '_renderMainPass',
        'PERFORMANCE_LAYA_3D_RENDER_CLUSTER',
        '_preCulling',
        'PERFORMANCE_LAYA_3D_RENDER_CULLING',
        '_renderDepthMode',
        '_clear',
        'PERFORMANCE_LAYA_3D_RENDER_RENDEROPAQUE',
        '_renderScene',
        'SCENERENDERFLAG_RENDERQPAQUE',
        'PERFORMANCE_LAYA_3D_RENDER_RENDERTRANSPARENT',
        'SCENERENDERFLAG_RENDERTRANSPARENT',
        '_postRenderScript',
        '_applyPostProcessCommandBuffers',
        'PERFORMANCE_LAYA_3D_RENDER_POSTPROCESS',
        '_internalCommandBuffer',
        'depthPass',
        'PERFORMANCE_LAYA_3D_RENDER_RENDERDEPTHMDOE',
        'viewportPointToRay',
        'calculateCursorRay',
        '_tempVector20',
        'worldToViewportPoint',
        'clientScaleY',
        'worldToNormalizedViewportPoint',
        'clientScaleX',
        'convertScreenCoordToOrthographicCoord',
        'Camera:unknown\x20event.',
        'removeCommandBuffers',
        '_eventList',
        '_mouseTouch',
        '_touchPool',
        '_multiTouchEnabled',
        '_pushEventList',
        'preventDefault',
        'HitResult',
        'oncontextmenu',
        'addEventListener',
        'mousedown',
        'mousemove',
        'touchstart',
        'touchend',
        'touchcancel',
        '_offCanvasEvent',
        'removeEventListener',
        'touchmove',
        '_touches',
        'touchCount',
        'multiTouchEnabled',
        '_getTouch',
        '_mouseTouchDown',
        '_pressedSprite',
        '_mouseTouchUp',
        'onMouseClick',
        'onMouseUp',
        '_mouseTouchRayCast',
        'succeeded',
        '_physicsSimulation',
        'rayCast',
        'collider',
        '_changeTouches',
        '_tempPoint',
        'setTo',
        'pageX',
        'pageY',
        '_canvasTransform',
        'invertTransformPoint',
        'PhysicsSimulation',
        'disableSimulation',
        '_cameraPool',
        'changedTouches',
        'Input3D:unkonwn\x20event\x20type.',
        'onMouseDrag',
        '_tempRay0',
        '_textureCoordinate0',
        '_slices',
        '_stacks',
        '_radius',
        'stacks',
        'PositiveX',
        'NegativeX',
        'PositiveY',
        'NegativeY',
        'PositiveZ',
        'NegativeZ',
        'TextureCubeFace',
        '_setFilterMode',
        '_mipmap',
        '_setPixels',
        'blackTexture',
        '_blackTexture',
        'grayTexture',
        'setSixSidePixels',
        'setSixSideImageSources',
        'createMap',
        'Utils',
        'getFilecompatibleExtension',
        'getFileExtension',
        'LoaderManager',
        '_getGLFormat',
        'pixelStorei',
        'UNPACK_ALIGNMENT',
        'TEXTURE_CUBE_MAP_POSITIVE_Z',
        'TEXTURE_CUBE_MAP_NEGATIVE_Z',
        'TEXTURE_CUBE_MAP_POSITIVE_X',
        'TEXTURE_CUBE_MAP_NEGATIVE_X',
        'TEXTURE_CUBE_MAP_POSITIVE_Y',
        'TEXTURE_CUBE_MAP_NEGATIVE_Y',
        'TextureCube:\x20image\x20Source\x20can\x27t\x20be\x20null.',
        'TextureCube:\x20each\x20side\x20image\x27s\x20width\x20and\x20height\x20must\x20same.',
        'UNPACK_PREMULTIPLY_ALPHA_WEBGL',
        '_isPot',
        'TextureCube:pixels\x20can\x27t\x20be\x20null.',
        '_getFormatByteCount',
        'TextureCube:pixels\x20length\x20should\x20at\x20least\x20',
        'setImageSource',
        'TextureCube:\x20imageSource\x27s\x20width\x20and\x20height\x20must\x20same.',
        'generateMipmap',
        '_filterMode',
        'TEXTURECUBEBIN',
        'getBrightestLight',
        'normalLightOrdering',
        'LineShader',
        'u_Color',
        '_rotateExtents',
        'getExtent',
        'setCenterAndExtent',
        'tranform',
        'createfromPoints',
        'points',
        'MAX_VALUE',
        'merge',
        '_updateFlag',
        '_extent',
        '_boundBox',
        '_setUpdateFlag',
        '_UPDATE_CENTER',
        '_UPDATE_EXTENT',
        '_UPDATE_MIN',
        'getMin',
        '_getMin',
        'setMax',
        '_UPDATE_MAX',
        '_getUpdateFlag',
        '_getMax',
        '_center',
        'setExtent',
        '_getExtent',
        '_getCenter',
        '_tranform',
        'calculateBoundsintersection',
        'TEMP_VECTOR3_MAX0',
        'TEMP_VECTOR3_MAX1',
        '_getType',
        'GeometryElement:must\x20override\x20it.',
        '_destroyed',
        '_typeCounter',
        '_maxUpdate',
        '_floatBound',
        '_calculateBound',
        '_maxLineCount',
        '_lineCount',
        '_floatCountPerVertices',
        '_bounds',
        '_type',
        '_resizeLineData',
        '_minUpdate',
        'setMin',
        '_removeLineData',
        '_updateLineData',
        '_updateLineDatas',
        '_updateLineVertices',
        'startPosition',
        'endPosition',
        'endColor',
        '_getLineData',
        'startColor',
        'LINES',
        'SHADERDEFINE_RECEIVE_SHADOW',
        'RECEIVESHADOW',
        'SAHDERDEFINE_LIGHTMAP',
        'LIGHTMAP',
        'SHADERDEFINE_LIGHTMAP_DIRECTIONAL',
        'LIGHTMAP_DIRECTIONAL',
        '_removeRenderObject',
        '_addRenderObject',
        '_onActiveInScene',
        'Laya3D',
        '_allotPickColorByID',
        '_pickIdToSprite',
        'PICKCOLOR',
        '_addToInitStaticBatchManager',
        '_setBelongScene',
        '_setUnBelongScene',
        '_destroy',
        'LIGHTMAPSCALEOFFSET',
        'u_LightmapScaleOffset',
        'u_LightMap',
        'u_LightMapDirection',
        'u_PickColor',
        'REFLECTIONTEXTURE',
        'u_ReflectTexture',
        'REFLECTIONCUBE_HDR_PARAMS',
        'u_SpecCubeProbePosition',
        'REFLECTIONCUBE_PROBEBOXMAX',
        'u_SpecCubeBoxMax',
        'REFLECTIONCUBE_PROBEBOXMIN',
        'u_SpecCubeBoxMin',
        'batched',
        'instanceWorldMatrixData',
        'instanceSimpleAnimatorData',
        'instanceWorldMatrixBuffer',
        'DYNAMIC_DRAW',
        'instanceSimpleAnimatorBuffer',
        'renderElement',
        'instanceSubMesh',
        'instanceBatchElementList',
        '_isFrontFaceInvert',
        'setTransform',
        'addToOpaqueRenderQueue',
        'lastTransparentBatched',
        'lastTransparentRenderElement',
        'getFlag',
        '_getRenderQueue',
        'isTransparent',
        'addToTransparentRenderQueue',
        'RENDERTYPE_INSTANCEBATCH',
        'RENDERTYPE_STATICBATCH',
        '_dynamicWorldPositionNormalNeedUpdate',
        '_indices',
        '_dynamicWorldPositions',
        'transformVector3ArrayByQuat',
        '_onWorldMatrixChanged',
        '_vertexCount',
        'SubMeshDynamicBatch',
        'maxAllowVertexCount',
        '_dynamicVertexBatch',
        '_dynamicWorldNormals',
        '_dynamicVertexCount',
        '_dynamicMultiSubMesh',
        'staticBatch',
        '_probReflection',
        'getBatchOpaquaMark',
        'lightmapIndex',
        'receiveShadow',
        '_batchID',
        'setGeometry',
        'batchOwner',
        'staticBatchElementList',
        'getInstanceBatchOpaquaMark',
        '_id',
        '_updateCountMark',
        'getVertexBatchOpaquaMark',
        'vertexBatchElementList',
        '_getBatchRenderElementFromPool',
        'RENDERTYPE_VERTEXBATCH',
        'vertexBatchVertexDeclaration',
        '_isScene',
        'SubMeshRenderElement:\x20unknown\x20renderType',
        '_initBatchSprites',
        '_batchRenderElementPoolIndex',
        '_batchRenderElementPool',
        '_addToStaticBatchQueue',
        'numChildren',
        '_registerManager',
        '_managers',
        'combine',
        '_isPartOfStaticBatch',
        'StaticBatchManager:\x20Sprite\x20',
        '\x20has\x20a\x20part\x20of\x20Static\x20Batch,it\x20will\x20be\x20ignore.',
        '_initStaticBatchs',
        '_partition',
        '_compare',
        'StaticBatch:must\x20override\x20this\x20function.',
        '_garbageCollection',
        'StaticBatchManager:\x20must\x20override\x20it.',
        'dispose',
        '_staticBatches',
        '_batchIDCounter',
        '_currentBatchVertexCount',
        '_currentBatchIndexCount',
        '_getStaticBatchBakedVertexs',
        '_tempMatrix4x41',
        '_tempMatrix4x42',
        'vertexCount',
        'addTest',
        'meshFilter',
        'sharedMesh',
        'maxBatchVertexCount',
        '_batchElements',
        '_staticBatch',
        'finishInit',
        'subMeshCount',
        'staticBatchIndexEnd',
        'drawElements',
        'staticBatchIndexStart',
        'savedRenderBatches',
        '_addGPUMemory',
        '_opaqueBatchMarks',
        '_verDec',
        'sharedMaterial',
        '_getStaticBatch',
        '_removeRenderSprite',
        'simple',
        'ReflectionProbeMode',
        '_boxProjection',
        '_size',
        '_reflectionHDRParams',
        '_reflectionDecodeFormat',
        'Normal',
        'boxProjection',
        'importance',
        '_importance',
        'reflectionTexture',
        '_reflectionTexture',
        'probePosition',
        'reflectionHDRParams',
        'reflection',
        'boxSize',
        'boxOffset',
        'TEMPVECTOR3',
        '_setIndexInReflectionList',
        '_getIndexInReflectionList',
        '_indexInReflectProbList',
        '_reflectionProbeManager',
        'defaultTextureHDRDecodeValues',
        '_lightmapScaleOffset',
        '_indexInCastShadowList',
        '_boundsChange',
        '_supportOctree',
        '_sharedMaterials',
        '_indexInOctreeMotionList',
        '_materialsInstance',
        'sortingFudge',
        '_onWorldMatNeedChange',
        '_lightmapIndex',
        'lightmapScaleOffset',
        'BaseRender:\x20lightmapScaleOffset\x20can\x27t\x20be\x20null.',
        '_getInstanceMaterial',
        '_isSupportReflection',
        'sharedMaterials',
        '_changeMaterialReference',
        'slice',
        'BaseRender:\x20shadredMaterials\x20value\x20can\x27t\x20be\x20null.',
        '_calculateBoundingBox',
        '_receiveShadow',
        'castShadow',
        'isPartOfStaticBatch',
        'reflectionMode',
        '_reflectionMode',
        '_getOctreeNode',
        '_octreeNode',
        '_setOctreeNode',
        'removeMotionObject',
        '_getIndexInMotionList',
        '_setIndexInMotionList',
        '_surportReflectionProbe',
        'addMotionObject',
        '_applyLightMapParams',
        'lightmaps',
        'lightmapColor',
        'lightmapDirection',
        'LIGHTMAP_DIRECTION',
        '_addReflectionProbeUpdate',
        'BaseRender:\x20must\x20override\x20it.',
        '_OctreeNoRender',
        'offAll',
        '_tempBoundBoxCorners',
        '_defaultLightmapScaleOffset',
        '_geometryFilter',
        '_reCalculateBound',
        'WORLDMATRIX',
        '_isRenderActive',
        '_changeRenderObjects',
        'defaultMaterial',
        'PixelLineSprite3D:\x20lineCount\x20can\x27t\x20large\x20than\x20maxLineCount',
        'pixelLineRenderer',
        '_isInRenders',
        'PixelLineSprite3D:\x20lineCount\x20has\x20equal\x20with\x20maxLineCount.',
        'setLine',
        'PixelLineSprite3D:\x20index\x20must\x20less\x20than\x20lineCount.',
        'getLine',
        '_partitionRenderObject',
        '_isContaion',
        '_encapsulates',
        'boxContainsBox',
        '_setValues',
        '_looseness',
        '_getChildBound',
        'baseLength',
        '_tempBoundBox',
        '_getChildCenter',
        '_getChild',
        'BoundsOctreeNode:\x20unknown\x20index.',
        '_shouldMerge',
        '_objects',
        '_NUM_OBJECTS_ALLOWED',
        '_merge',
        '_mergeChildren',
        '_checkAddNode',
        '_minSize',
        '_bestFitChild',
        '_remove',
        '_addUp',
        'octreeNodeCulling',
        '_getCollidingWithFrustum',
        '_getCollidingWithCastShadowFrustum',
        'cullPlanes',
        '_getCollidingWithBoundBox',
        'getCollidingWithBoundBox',
        'getCollidingWithRay',
        'isCollidingWithBoundBox',
        'isCollidingWithRay',
        'getBound',
        'drawAllObjects',
        'OctreeMotionList:element\x20has\x20\x20in\x20\x20PhysicsUpdateList.',
        '_motionObjects',
        'Minimum\x20node\x20size\x20must\x20be\x20at\x20least\x20as\x20big\x20as\x20the\x20initial\x20world\x20size.\x20Was:\x20',
        '\x20Adjusted\x20to:\x20',
        '_initialSize',
        '_grow',
        'hasAnyObjects',
        'Aborted\x20Add\x20operation\x20as\x20it\x20seemed\x20to\x20be\x20going\x20on\x20forever\x20(',
        ')\x20attempts\x20at\x20growing\x20the\x20octree.',
        'getMaxBounds',
        '_getMaxDepth',
        'createFromSubPoints',
        'Must\x20be\x20in\x20the\x20range\x20[0,\x20',
        'Must\x20be\x20in\x20the\x20range\x20<=\x20',
        'intersectsRayDistance',
        'intersectsRayPoint',
        'cameraCullInfo',
        'PointLight',
        '_shadowBias',
        '_shadowParams',
        '_shadowMapSize',
        '_maxCascades',
        '_splitBoundSpheres',
        '_cascadeCount',
        '_shadowMapWidth',
        '_shadowMapHeight',
        '_shadowSliceDatas',
        '_shadowSpotData',
        '_lightUp',
        '_lightSide',
        '_lightForward',
        'SHADOW_LIGHT_DIRECTION',
        'SHADOW_PARAMS',
        '_setupShadowReceiverShaderValues',
        '_light',
        'shadowCascadesMode',
        'SHADERDEFINE_SHADOW_CASCADE',
        'SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW',
        'SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH',
        'SHADOW_MAP',
        'SHADOW_MATRICES',
        '_shadowMatrices',
        'SHADOW_MAP_SIZE',
        'SHADOW_SPLIT_SPHERES',
        '_setupSpotShadowReceiverShaderValues',
        'SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH',
        'SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW',
        'SHADOW_SPOTMAP',
        '_shadowSpotLightMap',
        'SHADOW_SPOTMATRICES',
        '_shadowSpotMatrices',
        'SHADOW_SPOTMAP_SIZE',
        '_shadowCascadesMode',
        'getMaxTileResolutionInAtlas',
        '_cascadesSplitDistance',
        '_frustumPlanes',
        '_shadowFourCascadeSplits',
        'getCameraFrustumPlanes',
        'sphereCenterZ',
        'getDirectionLightShadowCullPlanes',
        '_shadowSpotMapSize',
        'There\x20is\x20no\x20shadow\x20of\x20this\x20type',
        '_shadowDirectLightMap',
        'getShadowBias',
        '_setupShadowCasterShaderValues',
        'cullSphere',
        'cullingShadow',
        'u_ShadowLightDirection',
        'u_ShadowSplitSpheres',
        'u_ShadowMatrices',
        'u_ShadowMapSize',
        'u_ShadowMap',
        'u_SpotShadowMapSize',
        'u_SpotViewProjectMatrix',
        '_reflectionProbes',
        '_needUpdateAllRender',
        '_sceneReflectionProbe',
        'sceneReflectionCubeHDRParam',
        '_updateMotionObjects',
        'clearMotionObjects',
        'SphericalHarmonics',
        'AmbientMode',
        '_lightCount',
        '_lightmaps',
        '_input',
        '_timer',
        '_time',
        '_shCoefficients',
        '_ambientMode',
        '_ambientSphericalHarmonics',
        'TextureDecodeFormat',
        '_reflectionIntensity',
        '_scriptPool',
        '_tempScriptPool',
        '_reflectionCubeHDRParams',
        'currentCreationLayer',
        'enableLight',
        '_key',
        'physicsSettings',
        '_cannonPhysicsSimulation',
        'enableFog',
        'fogRange',
        'fogColor',
        'ambientColor',
        'canvas',
        '_lightTexture',
        '_lightPixles',
        'SHADERDEFINE_FOG',
        'FOG',
        'SHADERDEFINE_DIRECTIONLIGHT',
        'DIRECTIONLIGHT',
        'SHADERDEFINE_POINTLIGHT',
        'POINTLIGHT',
        'SHADERDEFINE_SPOTLIGHT',
        'SHADOW',
        'SHADOW_CASCADE',
        'SHADERDEFINE_GI_AMBIENT_SH',
        'GI_AMBIENT_SH',
        'SHADOW_SPOT',
        'SHADOW_SPOT_SOFT_SHADOW_LOW',
        '_configDefineValues',
        'SHADERDEFINE_LEGACYSINGALLIGHTING',
        'SHADERDEFINE_GRAPHICS_API_GLES3',
        'SHADERDEFINE_GRAPHICS_API_GLES2',
        'PhysicsSettings',
        'url',
        '_enableFog',
        'FOGCOLOR',
        'fogStart',
        'FOGSTART',
        'FOGRANGE',
        'ambientMode',
        'Scene3D:\x20unknown\x20ambientMode.',
        'AMBIENTCOLOR',
        'ambientSphericalHarmonics',
        'ambientSphericalHarmonicsIntensity',
        '_ambientSphericalHarmonicsIntensity',
        '_applySHCoefficients',
        'sceneReflectionProbe',
        '_reflection',
        'reflectionDecodingFormat',
        'RGBM',
        'reflectionIntensity',
        'physicsSimulation',
        'cannonPhysicsSimulation',
        'input',
        'AMBIENTSHAR',
        'AMBIENTSHAG',
        'AMBIENTSHBR',
        'AMBIENTSHBG',
        'AMBIENTSHBB',
        'AMBIENTSHC',
        'PERFORMANCE_LAYA_3D',
        'TIME',
        'PERFORMANCE_LAYA_3D_PHYSICS',
        '_updatePhysicsTransformFromRender',
        '_addUpdateList',
        'PERFORMANCE_LAYA_3D_PHYSICS_SIMULATE',
        '_simulate',
        '_updateCharacters',
        'PERFORMANCE_LAYA_3D_PHYSICS_CHARACTORCOLLISION',
        'PERFORMANCE_LAYA_3D_PHYSICS_EVENTSCRIPTS',
        '_eventScripts',
        'CannonPhysicsComponent',
        'PERFORMANCE_LAYA_3D_UPDATESCRIPT',
        '_updateScript',
        'updateAllRenderObjects',
        '_lateUpdateScript',
        '_binarySearchIndexInCameraPool',
        '_renderingOrder',
        'onEnable',
        '_onCanvasEvent',
        'onDisable',
        '_getGroup',
        '_group',
        '_clearScript',
        '_needClearScriptPool',
        '_indexInPool',
        'onUpdate',
        'onLateUpdate',
        '_scene3Ds',
        '_prepareSceneToRender',
        '_multiLighting',
        '_direction',
        'SUNLIGHTDIRCOLOR',
        '_mainPointLight',
        'CLUSTERBUFFER',
        'LIGHTDIRCOLOR',
        'LIGHTDIRECTION',
        'POINTLIGHTCOLOR',
        'POINTLIGHTPOS',
        'POINTLIGHTRANGE',
        'SPOTLIGHTPOS',
        'SPOTLIGHTDIRECTION',
        'SPOTLIGHTRANGE',
        'SPOTLIGHTSPOTANGLE',
        '_addScript',
        'onPreRender',
        'onPostRender',
        'STENCIL_BUFFER_BIT',
        'Scene3D:camera\x20clearFlag\x20invalid.',
        'SCENERENDERFLAG_SKYBOX',
        '_isAvailable',
        'sky',
        'SkyBox',
        'SubmitBase',
        'RENDERBASE',
        'addRenderObject',
        'renderSubmit',
        'PERFORMANCE_LAYA_3D_RENDER',
        'Context',
        'set2DRenderConfig',
        'getRenderType',
        'releaseRender',
        'setGlobalShaderValue',
        'customReflection',
        'Scene3D:\x20value\x20value\x20can\x27t\x20be\x20null.',
        'REFLECTIONMODE_SKYBOX',
        'REFLECTIONMODE_CUSTOM',
        'u_FogStart',
        'u_FogRange',
        'DIRECTIONLIGHTCOUNT',
        'u_DirationLightCount',
        'LIGHTBUFFER',
        'SUNLIGHTDIRECTION',
        'u_SunLight.direction',
        'u_SunLight.color',
        'u_AmbientSHAr',
        'u_AmbientSHAg',
        'u_AmbientSHBg',
        'u_AmbientSHC',
        'u_DirectionLight.direction',
        'u_DirectionLight.color',
        'u_PointLight.position',
        'u_PointLight.range',
        'POINTLIGHTATTENUATION',
        'u_PointLight.color',
        'u_SpotLight.position',
        'u_SpotLight.direction',
        'u_SpotLight.spot',
        'u_SpotLight.color',
        '_validDefine',
        '_tags',
        'defs',
        '_renderState',
        '_compileToTree',
        'ShaderNode',
        'text',
        'noCompile',
        'charAt',
        '#ifdef',
        'src',
        'match',
        'setCondition',
        'function():Boolean{return\x20',
        '#if',
        '#elif',
        'childs',
        'condition',
        'defined',
        '#else',
        'conditionType',
        'IFDEF_YES',
        '#endif',
        'parent',
        '#include',
        'splitToWords',
        'includes',
        'getWith',
        'with',
        '#import',
        '_resizeCacheShaderMap',
        '_addDebugShaderVariantCollection',
        '_debugShaderVariantInfo',
        '_debugDefineMask',
        '_cacheSharders',
        '_defineString',
        '#version\x20300\x20es\x0a\x0a\x09\x09\x09\x09#define\x20attribute\x20in\x0a\x09\x09\x09\x09#define\x20varying\x20out\x0a\x09\x09\x09\x09#define\x20texture2D\x20texture\x0a',
        '#version\x20300\x20es\x0a\x0a\x09\x09\x09\x09#define\x20varying\x20in\x0a\x09\x09\x09\x09out\x20highp\x20vec4\x20pc_fragColor;\x0a\x09\x09\x09\x09#define\x20gl_FragColor\x20pc_fragColor\x0a\x09\x09\x09\x09#define\x20gl_FragDepthEXT\x20gl_FragDepth\x0a\x09\x09\x09\x09#define\x20texture2D\x20texture\x0a\x09\x09\x09\x09#define\x20textureCube\x20texture\x0a\x09\x09\x09\x09#define\x20texture2DProj\x20textureProj\x0a\x09\x09\x09\x09#define\x20texture2DLodEXT\x20textureLod\x0a\x09\x09\x09\x09#define\x20texture2DProjLodEXT\x20textureProjLod\x0a\x09\x09\x09\x09#define\x20textureCubeLodEXT\x20textureLod\x0a\x09\x09\x09\x09#define\x20texture2DGradEXT\x20textureGrad\x0a\x09\x09\x09\x09#define\x20texture2DProjGradEXT\x20textureProjGrad\x0a\x09\x09\x09\x09#define\x20textureCubeGradEXT\x20textureGrad\x0a',
        '#ifdef\x20GL_EXT_shader_texture_lod\x0a\x09\x09\x09\x09\x09#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable\x0a\x09\x09\x09\x09#endif\x0a\x09\x09\x09\x09#if\x20!defined(GL_EXT_shader_texture_lod)\x0a\x09\x09\x09\x09\x09#define\x20texture1DLodEXT\x20texture1D\x0a\x09\x09\x09\x09\x09#define\x20texture2DLodEXT\x20texture2D\x0a\x09\x09\x09\x09\x09#define\x20texture2DProjLodEXT\x20texture2DProj\x0a\x09\x09\x09\x09\x09#define\x20texture3DLodEXT\x20texture3D\x0a\x09\x09\x09\x09\x09#define\x20textureCubeLodEXT\x20textureCube\x0a\x09\x09\x09\x09#endif\x0a',
        '#define\x20MAX_LIGHT_COUNT\x20',
        '#define\x20MAX_LIGHT_COUNT_PER_CLUSTER\x20',
        '#define\x20CLUSTER_X_COUNT\x20',
        '#define\x20CLUSTER_Y_COUNT\x20',
        '#define\x20CLUSTER_Z_COUNT\x20',
        '#define\x20SHADER_CAPAILITY_LEVEL\x20',
        '_shaderCapailityLevel',
        '#define\x20',
        'toscript',
        '#version',
        '%cLayaAir:\x20Shader\x20Compile\x20Information---ShaderName:',
        '\x20PassIndex:',
        '\x20DefineMask:[',
        '\x20DefineNames:[',
        'setTag',
        'getTag',
        '_debugDefineString',
        '_flags',
        'setFlag',
        'addShaderPass',
        'SpecularTextureAlpha',
        'AlbedoTextureAlpha',
        'PBRSpecularSmoothnessSource',
        'SPECULARCOLOR',
        'SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA',
        'DepthNormal',
        'u_SpecGlossTexture',
        'u_SpecularColor',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#include\x20\x22PBRFSInput.glsl\x22;\x0d\x0a#include\x20\x22LayaPBRBRDF.glsl\x22;\x0d\x0a#include\x20\x22GlobalIllumination.glsl\x22;\x0d\x0a#include\x20\x22PBRCore.glsl\x22;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09fragmentForward();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#include\x20\x22PBRVSInput.glsl\x22;\x0d\x0a#include\x20\x22PBRVertex.glsl\x22;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vertexForward();\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        'MetallicGlossTextureAlpha',
        'PBRMetallicSmoothnessSource',
        '_smoothnessSource',
        'METALLIC',
        'METALLICGLOSSTEXTURE',
        'PBR',
        'metallicGlossTexture',
        'SHADERDEFINE_METALLICGLOSSTEXTURE',
        'metallic',
        'smoothnessSource',
        'u_MetallicGlossTexture',
        'tintColor',
        'exposure',
        'ROTATION',
        'textureCube',
        'TEXTURECUBE',
        'u_TintColor',
        'u_Rotation',
        'u_CubeTexture',
        'SUN_HIGH_QUALITY',
        'sunSize',
        'sunSizeConvergence',
        'atmosphereThickness',
        'skyTint',
        'SHADERDEFINE_SUN_SIMPLE',
        'SUN_SIMPLE',
        'sunDisk',
        '_sunDisk',
        'SHADERDEFINE_SUN_HIGH_QUALITY',
        'SUN_NODE',
        'SUNSIZE',
        'SUNSIZECONVERGENCE',
        'ATMOSPHERETHICKNESS',
        'groundTint',
        'GROUNDTINT',
        'EXPOSURE',
        'u_SunSize',
        'u_AtmosphereThickness',
        'u_SkyTint',
        'u_GroundTint',
        'u_Exposure',
        'Unlit',
        '_albedoIntensity',
        '_AlbedoIntensity',
        'UnlitMaterial\x20:\x20renderMode\x20value\x20error.',
        'WaterPrimary',
        'HORIZONCOLOR',
        'WAVESCALE',
        'WAVESPEED',
        'horizonColor',
        'mainTexture',
        'waveScale',
        'u_HorizonColor',
        'u_WaveSpeed',
        '_revertStaticBatchDefineUV1',
        '_onMeshChange',
        '_createRenderElement',
        'getSubMesh',
        'SHADERDEFINE_SPECCUBE_BOX_PROJECTION',
        'boundsMax',
        'SHADERDEFINE_UV1',
        '_sharedMesh',
        '_getMeshDefine',
        '_meshVerticeDefine',
        'POSITION,NORMAL,COLOR,UV,UV1,TANGENT',
        'maxIndicesCount',
        '_addMemory',
        '_getBatchVertices',
        '_positionOffset',
        '_normalOffset',
        '_colorOffset',
        '_uv0Offset',
        '_sTangentOffset',
        '_getBatchIndices',
        '_getBufferState',
        '_uv1Offset',
        '_flush',
        'maxAllowAttribueCount',
        '_instanceBatchOpaqueMarks',
        '_vertexBatchOpaqueMarks',
        '_cacheBufferStates',
        '_meshFilter',
        'SHADERDEFINE_COLOR',
        'GPU_INSTANCE',
        'SPECCUBE_BOX_PROJECTION',
        'meshRenderer',
        'meshPath',
        'enableRender',
        'receiveShadows',
        'materials',
        '_addBatchSprite',
        'Fixed',
        '_mode',
        '_maxColorRGBKeysCount',
        '_maxColorAlphaKeysCount',
        '_colorRGBKeysCount',
        '_colorAlphaKeysCount',
        '_alphaElements',
        '_rgbElements',
        'mode',
        'colorRGBKeysCount',
        'maxColorRGBKeysCount',
        'addColorRGB',
        'Gradient:warning:data\x20count\x20must\x20lessEqual\x20than\x20',
        'updateColorRGB',
        'Gradient:warning:index\x20must\x20lessEqual\x20than\x20colorRGBKeysCount:',
        'updateColorAlpha',
        'Gradient:warning:index\x20must\x20lessEqual\x20than\x20colorAlphaKeysCount:',
        'evaluateColorRGB',
        'Blend',
        'Gradient:wrong\x20startSearchIndex.',
        'Gradient:unknown\x20mode.',
        'evaluateColorAlpha',
        '_minCount',
        'minCount',
        'maxCount',
        '_maxCount',
        '_constant',
        '_constantMax',
        '_gradientMax',
        'createByConstant',
        '_gradient',
        'createByRandomTwoConstant',
        'createByRandomTwoGradient',
        'constant',
        '_constantMin',
        'constantMax',
        'gradient',
        'gradientMin',
        '_gradientMin',
        '_color',
        'createByGradient',
        'constantMin',
        'gradientMax',
        '_overTime',
        '_overTimeMin',
        '_overTimeMax',
        'createByOverTime',
        'frameOverTimeDataMax',
        '_constantSeparate',
        '_gradientX',
        '_gradientY',
        '_constantMinSeparate',
        '_constantMaxSeparate',
        '_gradientXMin',
        '_gradientYMin',
        '_gradientYMax',
        '_gradientZMin',
        '_gradientWMin',
        '_separateAxes',
        'createByConstantSeparate',
        'createByGradientSeparate',
        '_gradientZ',
        'createByRandomTwoConstantSeparate',
        '_gradientXMax',
        '_gradientZMax',
        '_gradientWMax',
        'separateAxes',
        'constantSeparate',
        'gradientX',
        'gradientY',
        'gradientZ',
        '_gradientW',
        'constantMinSeparate',
        'constantMaxSeparate',
        'gradientXMax',
        'gradientZMin',
        'gradientWMin',
        'gradientWMax',
        '_currentLength',
        'gradientCount',
        'Warning:the\x20forth\x20key\x20is\x20\x20be\x20force\x20set\x20to\x201.',
        'GradientDataNumber\x20warning:the\x20forth\x20key\x20is\x20\x20be\x20force\x20set\x20to\x201.',
        'GradientDataNumber\x20warning:data\x20count\x20must\x20lessEqual\x20than\x204',
        'getKeyByIndex',
        'getValueByIndex',
        'getAverageValue',
        'createByRandomTwoGradientSeparate',
        'gradientYMin',
        'gradientZMax',
        'getMaxSizeInGradient',
        'gradientXMin',
        'gradientYMax',
        '_angularVelocity',
        'angularVelocity',
        'Box',
        'Circle',
        'Cone',
        'Hemisphere',
        'Sphere',
        'ParticleSystemShapeType',
        'BaseShape:\x20must\x20override\x20it.',
        '_getSpeedBoundBox',
        'generatePositionAndDirection',
        '_calculateProceduralBounds',
        'getFloat',
        'random',
        '_randomPointInsideUnitArcCircle',
        '_randomPointUnitArcCircle',
        '_randomPointUnitCircle',
        '_randomPointInsideUnitCircle',
        '_randomPointUnitSphere',
        '_randomPointInsideUnitSphere',
        'shapeType',
        '_getShapeBoundBox',
        'seed',
        '_randomPointInsideHalfUnitBox',
        'randomDirection',
        'arc',
        'emitFromEdge',
        '_tempPositionPoint',
        'angle',
        'emitType',
        '_tempDirectionPoint',
        'emitFromShell',
        'randomRow',
        'cycles',
        'enableUVChannels',
        'tiles',
        'rowIndex',
        '_startFrame',
        'frame',
        '_frame',
        'startFrame',
        'frameOverTimeData',
        'createByRandomTwoOverTime',
        'frameOverTimeDataMin',
        'space',
        '_velocity',
        'velocity',
        'WORLDPOSITION',
        'u_WorldPosition',
        'WORLDROTATION',
        'POSITIONSCALE',
        'u_PositionScale',
        'SIZESCALE',
        'u_SizeScale',
        'u_ScalingMode',
        'GRAVITY',
        'u_Gravity',
        'THREEDSTARTROTATION',
        'u_ThreeDStartRotation',
        'STRETCHEDBILLBOARDSPEEDSCALE',
        'u_StretchedBillboardSpeedScale',
        'SIMULATIONSPACE',
        'u_SimulationSpace',
        'CURRENTTIME',
        'VOLVELOCITYCONST',
        'u_VOLVelocityConst',
        'u_VOLVelocityGradientX',
        'VOLVELOCITYGRADIENTY',
        'u_VOLVelocityGradientY',
        'VOLVELOCITYGRADIENTZ',
        'u_VOLVelocityGradientZ',
        'VOLVELOCITYCONSTMAX',
        'VOLVELOCITYGRADIENTXMAX',
        'u_VOLVelocityGradientMaxX',
        'u_VOLVelocityGradientMaxY',
        'VOLVELOCITYGRADIENTZMAX',
        'u_VOLVelocityGradientMaxZ',
        'VOLSPACETYPE',
        'u_VOLSpaceType',
        'u_ColorOverLifeGradientAlphas',
        'COLOROVERLIFEGRADIENTCOLORS',
        'u_ColorOverLifeGradientColors',
        'MAXCOLOROVERLIFEGRADIENTALPHAS',
        'u_MaxColorOverLifeGradientAlphas',
        'MAXCOLOROVERLIFEGRADIENTCOLORS',
        'u_MaxColorOverLifeGradientColors',
        'SOLSIZEGRADIENT',
        'u_SOLSizeGradient',
        'SOLSIZEGRADIENTX',
        'u_SOLSizeGradientX',
        'u_SOLSizeGradientY',
        'SOLSizeGradientZ',
        'u_SOLSizeGradientZ',
        'SOLSizeGradientMax',
        'SOLSIZEGRADIENTXMAX',
        'u_SOLSizeGradientMaxX',
        'u_SOLSizeGradientMaxY',
        'SOLSizeGradientZMAX',
        'ROLANGULARVELOCITYCONST',
        'u_ROLAngularVelocityConst',
        'u_ROLAngularVelocityConstSeprarate',
        'ROLANGULARVELOCITYGRADIENT',
        'u_ROLAngularVelocityGradient',
        'ROLANGULARVELOCITYGRADIENTY',
        'u_ROLAngularVelocityGradientY',
        'u_ROLAngularVelocityGradientZ',
        'ROLANGULARVELOCITYCONSTMAX',
        'ROLANGULARVELOCITYCONSTMAXSEPRARATE',
        'u_ROLAngularVelocityConstMaxSeprarate',
        'ROLANGULARVELOCITYGRADIENTMAX',
        'u_ROLAngularVelocityGradientMax',
        'ROLANGULARVELOCITYGRADIENTXMAX',
        'u_ROLAngularVelocityGradientMaxX',
        'ROLANGULARVELOCITYGRADIENTYMAX',
        'u_ROLAngularVelocityGradientMaxY',
        'ROLANGULARVELOCITYGRADIENTZMAX',
        'u_ROLAngularVelocityGradientMaxZ',
        'ROLANGULARVELOCITYGRADIENTWMAX',
        'u_ROLAngularVelocityGradientMaxW',
        'TEXTURESHEETANIMATIONCYCLES',
        'u_TSACycles',
        'TEXTURESHEETANIMATIONSUBUVLENGTH',
        'u_TSASubUVLength',
        'TEXTURESHEETANIMATIONGRADIENTUVS',
        'TEXTURESHEETANIMATIONGRADIENTMAXUVS',
        'u_TSAMaxGradientUVs',
        'PARTICLESHURIKEN',
        'SHADERDEFINE_TINTCOLOR',
        'ShurikenParticleMaterial\x20:\x20renderMode\x20value\x20error.',
        'DIFFUSETEXTURE',
        'setColliderCollision',
        'getIColliderCollision',
        'COLLISIONFILTERGROUP_DEFAULTFILTER',
        'COLLISIONFILTERGROUP_KINEMATICFILTER',
        'COLLISIONFILTERGROUP_DEBRISFILTER',
        'COLLISIONFILTERGROUP_SENSORTRIGGER',
        'COLLISIONFILTERGROUP_CHARACTERFILTER',
        'COLLISIONFILTERGROUP_CUSTOMFILTER2',
        'COLLISIONFILTERGROUP_CUSTOMFILTER3',
        'COLLISIONFILTERGROUP_CUSTOMFILTER5',
        'COLLISIONFILTERGROUP_CUSTOMFILTER7',
        'COLLISIONFILTERGROUP_CUSTOMFILTER8',
        'COLLISIONFILTERGROUP_CUSTOMFILTER9',
        'COLLISIONFILTERGROUP_CUSTOMFILTER10',
        'gravity',
        'stretchedBillboardCameraSpeedScale',
        'stretchedBillboardSpeedScale',
        'stretchedBillboardLengthScale',
        '_renderMode',
        'SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD',
        'SHADERDEFINE_RENDERMODE_MESH',
        'SHADERDEFINE_RENDERMODE_BILLBOARD',
        'SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD',
        'SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD',
        'particleSystem',
        '_initBufferDatas',
        '_useCustomBounds',
        '_gravityOffset',
        'isAlive',
        'simulationSpace',
        'gravityModifier',
        '_finalGravity',
        'threeDStartRotation',
        'SCALINGMODE',
        'scaleMode',
        'STRETCHEDBILLBOARDLENGTHSCALE',
        '_currentTime',
        'PARTICLE_CORNERTEXTURECOORDINATE0',
        'PARTICLE_POSITION0',
        'PARTICLE_COLOR0',
        'PARTICLE_TEXTURECOORDINATE0',
        'PARTICLE_SHAPEPOSITIONSTARTLIFETIME',
        'PARTICLE_STARTCOLOR0',
        'PARTICLE_ENDCOLOR0',
        'PARTICLE_STARTSIZE',
        'PARTICLE_STARTROTATION',
        'PARTICLE_RANDOM0',
        'PARTICLE_RANDOM1',
        'PARTICLE_SIMULATIONWORLDPOSTION',
        'PARTICLE_SIMULATIONWORLDROTATION',
        '_cornerTextureCoordinate',
        '_positionStartLifeTime',
        '_startColor',
        '_startRotation0',
        '_startRotation2',
        '_startLifeTime',
        '_randoms1',
        '_simulationWorldPostion',
        'PARTICLE_DIRECTIONTIME',
        'Single',
        'PARTICLE_STARTSPEED',
        'cornerTextureCoordinate',
        'positionStartLifeTime',
        'startSize',
        '_startSize',
        'startRotation0',
        '_startRotation1',
        'startRotation2',
        'startLifeTime',
        'startSpeed',
        '_startSpeed',
        '_randoms0',
        'simulationWorldPostion',
        'random0',
        '_temp',
        'seeds',
        'getFloatFromInt',
        'getByteFromInt',
        'getUint',
        'getSignedFloat',
        '_emissionRate',
        '_bursts',
        'ParticleBaseShape:emissionRate\x20value\x20must\x20large\x20or\x20equal\x20than\x200.',
        'emissionRate',
        'getBurstsCount',
        'addBurst',
        'clearBurst',
        '_getStartLifetimeFromGradient',
        'MathUtil',
        'ShurikenParticleData:\x20can\x27t\x20get\x20value\x20foam\x20startLifeTimeGradient.',
        '_randomInvertRoationArray',
        '_randomInvertRoation',
        'autoRandomSeed',
        'startColorType',
        'startColorConstant',
        'startColorConstantMin',
        'startColorConstantMax',
        'colorOverLifetime',
        'threeDStartSize',
        'startSizeConstantSeparate',
        'startSizeConstantMinSeparate',
        'startSizeConstantMaxSeparate',
        'startSizeConstantMin',
        'startSizeConstantMax',
        'startRotationConstantSeparate',
        'randomizeRotationDirection',
        'startRotation',
        'startRotationConstant',
        'startRotationConstantMinSeparate',
        'startRotationConstantMaxSeparate',
        'startRotationConstantMin',
        'startRotationConstantMax',
        'startLifetimeType',
        'startLifeTimeGradient',
        'startLifetimeConstantMin',
        'startLifetimeConstantMax',
        'startLifeTimeGradientMin',
        'startLifeTimeGradientMax',
        'startUVInfo',
        '_boundingBox',
        '_boundingBoxCorners',
        '_floatCountPerVertex',
        '_timeIndex',
        '_simulateUpdate',
        '_firstNewElement',
        '_firstFreeElement',
        '_firstRetiredElement',
        '_drawCounter',
        '_bufferMaxParticles',
        '_emission',
        '_shape',
        '_isEmitting',
        '_isPlaying',
        '_isPaused',
        '_playStartDelay',
        '_burstsIndex',
        '_velocityOverLifetime',
        '_rotationOverLifetime',
        '_startLifetimeConstant',
        '_startLifeTimeGradient',
        '_startLifetimeConstantMin',
        '_startLifeTimeGradientMin',
        '_startLifeTimeGradientMax',
        '_maxStartLifetime',
        '_indexStride',
        '_updateMask',
        '_startUpdateLoopCount',
        '_rand',
        '_randomSeeds',
        'looping',
        'prewarm',
        'startDelayType',
        'startDelay',
        'startDelayMin',
        'startDelayMax',
        'startSpeedType',
        'startSizeType',
        'startSizeConstant',
        'simulationSpeed',
        'playOnAwake',
        'randomSeed',
        'isPerformanceMode',
        '_firstActiveElement',
        '_ownerRender',
        '_boundingSphere',
        '_frameRateTime',
        '_totalDelayTime',
        '_startLifetimeConstantMax',
        'startSpeedConstant',
        'startSpeedConstantMin',
        'startSpeedConstantMax',
        'startRotationType',
        'maxParticles',
        'emission',
        'aliveParticleCount',
        'emissionTime',
        'shape',
        'SHADERDEFINE_SHAPE',
        'isEmitting',
        'isPlaying',
        'isPaused',
        '_startLifetimeType',
        'startLifetimeConstant',
        'velocityOverLifetime',
        'SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT',
        'SHADERDEFINE_VELOCITYOVERLIFETIMECURVE',
        'SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT',
        'SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE',
        'VOLVELOCITYGRADIENTX',
        'VOLVELOCITYGRADIENTYMAX',
        '_colorOverLifetime',
        'SHADERDEFINE_RANDOMCOLOROVERLIFETIME',
        'SHADERDEFINE_COLOROVERLIFETIME',
        'COLOROVERLIFEGRADIENTALPHAS',
        'sizeOverLifetime',
        'SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE',
        'SHADERDEFINE_SIZEOVERLIFETIMECURVE',
        'SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE',
        'SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES',
        'SOLSIZEGRADIENTY',
        'SOLSIZEGRADIENTYMAX',
        '_sizeOverLifetime',
        'SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE',
        'SHADERDEFINE_ROTATIONOVERLIFETIME',
        'SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT',
        'SHADERDEFINE_ROTATIONOVERLIFETIMECURVE',
        'SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS',
        'SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES',
        'ROLANGULARVELOCITYGRADIENTX',
        'ROLANGULARVELOCITYCONSTSEPRARATE',
        'textureSheetAnimation',
        '_textureSheetAnimation',
        'SHADERDEFINE_TEXTURESHEETANIMATIONCURVE',
        'SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE',
        '_uvLength',
        '_getVertexBuffer',
        '_getIndexBuffer',
        '_generateBoundingSphere',
        '_generateBounds',
        'particleRenderer',
        'customBounds',
        '_customBounds',
        '_maxElapsedTime',
        '_updateParticles',
        '_freeRetiredParticles',
        '_advanceTime',
        '_startLifeTimeIndex',
        '_emissionTime',
        '_burst',
        'emit',
        'ShurikenParticleSystem:the\x20maxParticleCount\x20multiply\x20mesh\x20vertexCount\x20is\x20large\x20than\x2065535.',
        '_tempPosition',
        'addParticle',
        'ShurikenParticleMaterial:\x20SimulationSpace\x20value\x20is\x20invalid.',
        'addNewParticlesToVertexBuffer',
        '_RANDOMOFFSET',
        'pause',
        '_updateParticlesSimulationRestart',
        'stop',
        'rotationOverLifetime',
        'halfKSqrtOf2',
        '_tempDirection',
        'SPHERHBILLBOARD',
        'STRETCHEDBILLBOARD',
        'HORIZONTALBILLBOARD',
        'VERTICALBILLBOARD',
        'COLOROVERLIFETIME',
        'RANDOMCOLOROVERLIFETIME',
        'VELOCITYOVERLIFETIMECURVE',
        'VELOCITYOVERLIFETIMERANDOMCONSTANT',
        'VELOCITYOVERLIFETIMERANDOMCURVE',
        'TEXTURESHEETANIMATIONCURVE',
        'ROTATIONOVERLIFETIME',
        'ROTATIONOVERLIFETIMESEPERATE',
        'ROTATIONOVERLIFETIMECONSTANT',
        'ROTATIONOVERLIFETIMECURVE',
        'ROTATIONOVERLIFETIMERANDOMCONSTANTS',
        'ROTATIONOVERLIFETIMERANDOMCURVES',
        'SIZEOVERLIFETIMECURVE',
        'SIZEOVERLIFETIMECURVESEPERATE',
        'SIZEOVERLIFETIMERANDOMCURVESSEPERATE',
        'RENDERMODE_MESH',
        'SHAPE',
        '_particleSystem',
        'bases',
        'vector2s',
        'vector3s',
        'vector4s',
        'gradientDataNumbers',
        'key',
        'resources',
        'bursts',
        'ShurikenParticle3D:unknown\x20type.',
        'main',
        '_parseModule',
        'ShuriKenParticle3D:unknown\x20shape\x20type.',
        '_initParticleVelocity',
        '_initParticleColor',
        '_initParticleSize',
        '_initParticleRotation',
        'overTime',
        '_initParticleFrame',
        'overTimeMax',
        '_activeHierarchy',
        'simulate',
        '_parseOld',
        '_initStartLife',
        'startLifetimeGradient',
        'startLifetimeGradientMin',
        'startLifetimeGradientMax',
        'sphereEmitFromShell',
        'sphereRandomDirection',
        'hemiSphereEmitFromShell',
        'hemiSphereRandomDirection',
        'coneAngle',
        'coneLength',
        'coneEmitType',
        'coneRandomDirection',
        'boxX',
        'boxY',
        'boxRandomDirection',
        'circleRadius',
        'circleEmitFromEdge',
        'circleArc',
        'circleRandomDirection',
        'overTimeMin',
        'addColorAlpha',
        'GradientDataColor\x20warning:alpha\x20data\x20length\x20is\x20large\x20than\x204,\x20will\x20ignore\x20the\x20middle\x20data.',
        'rgbs',
        'GradientDataColor\x20warning:rgb\x20data\x20length\x20is\x20large\x20than\x204,\x20will\x20ignore\x20the\x20middle\x20data.',
        'frames',
        'startLifetimes',
        'velocitys',
        'sizes',
        '_bones',
        '_skinnedDataLoopMarks',
        '_localBounds',
        '_cacheAnimationNode',
        'localBounds',
        'rootBone',
        '_cacheRootBone',
        'bones',
        '_computeSkinnedData',
        '_cacheMesh',
        '_cacheAvatar',
        '_inverseBindPoses',
        '_skinnedMatrixCaches',
        '_computeSubSkinnedData',
        '_skinnedData',
        'batchIndex',
        '_boneIndicesList',
        '_getCacheAnimationNodes',
        '_setCacheAnimator',
        '_cacheAnimator',
        'SHADERDEFINE_BONE',
        '_rootBone',
        'REFLECTIONCUBE_PROBEPOSITION',
        'boundsMin',
        '_cacheRootAnimationNode',
        '_setRootBone',
        '_setRootNode',
        '_boneNames',
        '_setCacheAvatar',
        'BONE',
        'skinnedMeshRenderer',
        'boundBox',
        '_getNodeByHierarchyPath',
        '_tempArray0',
        'u_Bones',
        'SIMPLE_SIMPLEANIMATORTEXTURE',
        'u_SimpleAnimatorTexture',
        'SIMPLE_SIMPLEANIMATORPARAMS',
        'u_SimpleAnimatorParams',
        'SIMPLE_SIMPLEANIMATORTEXTURESIZE',
        'u_SimpleAnimatorTextureSize',
        'Trail',
        'TrailMaterial\x20:\x20renderMode\x20value\x20error.',
        'u_MainTexture',
        'u_MainColor',
        'Stretch',
        'Tile',
        'View',
        'TransformZ',
        'TrailAlignment',
        'vertexDeclaration1',
        '_vertexDeclaration2',
        '_vertexDeclaration1',
        'TRAIL_OFFSETVECTOR',
        'TRAIL_TIME0',
        'TRAIL_TEXTURECOORDINATE0Y',
        'TRAIL_TEXTURECOORDINATE0X',
        'TRAIL_COLOR',
        '_floatCountPerVertices1',
        '_floatCountPerVertices2',
        '_increaseSegementCount',
        '_activeIndex',
        '_endIndex',
        '_needAddFirstVertex',
        '_isTempEndVertex',
        '_vertices2',
        '_lastFixedVertexPosition',
        '_disappearBoundsMode',
        '_segementCount',
        '_resizeData',
        'trailRenderer',
        '_subBirthTime',
        '_subDistance',
        '_vertices1',
        '_vertexBuffer1',
        '_vertexBuffer2',
        '_resetData',
        '_updateTrail',
        '_addTrailByFirstPosition',
        '_addTrailByNextPosition',
        '_curtime',
        'alignment',
        'widthMultiplier',
        'minVertexDistance',
        '_updateVerticesByPosition',
        '_totalLength',
        '_updateVerticesByPositionData',
        '_updateVertexBufferUV',
        'colorAlphaKeysCount',
        'textureMode',
        'tmpColor',
        'fill',
        'ALIGNMENT_VIEW',
        'ALIGNMENT_TRANSFORM_Z',
        '_lastPosition',
        '_initDefaultData',
        'addRenderElement',
        'LIFETIME',
        '_minVertexDistance',
        '_widthMultiplier',
        '_widthCurve',
        'widthCurve',
        'WIDTHCURVE',
        'WIDTHCURVEKEYLENGTH',
        '_colorGradient',
        'colorGradient',
        '_textureMode',
        '_trialGeometry',
        'CURTIME',
        '_updateDisappear',
        'WHITE',
        'u_LifeTime',
        'u_WidthCurveKeyLength',
        'trailFilter',
        'alphaKeys',
        'maxColorAlphaKeysCount',
        '_textureCoord0',
        '_textureCoord1',
        'TERRAIN_POSITION0',
        'TERRAIN_NORMAL0',
        'TERRAIN_TEXTURECOORDINATE0',
        'TERRAIN_TEXTURECOORDINATE1',
        'textureCoord0',
        '_subIndexBufferCount',
        '_setIndexRange',
        '_uploadVerticesData',
        'indexFormat',
        'supportElementIndexUint32',
        'SubMesh:this\x20device\x20do\x20not\x20support\x20IndexFormat.UInt32.',
        '_indexInMesh',
        '_isReadable',
        'SubMesh:can\x27t\x20get\x20indices\x20on\x20subMesh,mesh\x27s\x20isReadable\x20must\x20be\x20true.',
        '_subIndexBufferStart',
        '_skinAnimationDatas',
        'subMeshIndex',
        'batchBoneIndex',
        '_minVerticesUpdate',
        '_needUpdateBounds',
        '_indexFormat',
        'btVector3_create',
        '_nativeTempVector31',
        '_nativeTempVector32',
        'MESH',
        'inverseAbsoluteBindPoses',
        '_getVerticeElementData',
        'Mesh:Unknown\x20elementUsage.',
        '_maxVerticesUpdate',
        'Mesh:\x20the\x20mesh\x20don\x27t\x20have\x20\x20this\x20VertexElement.',
        '_btTriangleMesh',
        'btStridingMeshInterface_destroy',
        '_setSubMeshes',
        'MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR',
        '_getPhysicMesh',
        'btTriangleMesh_create',
        '_nativeTempVector30',
        '_getPositionElement',
        'getPositions',
        'Mesh:can\x27t\x20get\x20positions\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setPositions',
        '_setVerticeElementData',
        'getColors',
        'Mesh:can\x27t\x20get\x20colors\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setColors',
        'getUVs',
        'Mesh:Invalid\x20channel.',
        'Mesh:can\x27t\x20get\x20uvs\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setUVs',
        'Mesh:setUVs()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'getNormals',
        'setNormals',
        'Mesh:setNormals()\x20need\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'getTangents',
        'setTangents',
        'Mesh:setTangents()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'getBoneWeights',
        'Mesh:can\x27t\x20get\x20boneWeights\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setBoneWeights',
        'Mesh:setBoneWeights()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'getBoneIndices',
        'Mesh:can\x27t\x20get\x20boneIndices\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setBoneIndices',
        'Mesh:setBoneIndices()\x20need\x20isReadable\x20must\x20be\x20true\x20or\x20use\x20setVertices().',
        'Mesh:can\x27t\x20get\x20vertices\x20on\x20mesh,isReadable\x20must\x20be\x20true.',
        'setVertices',
        'getIndices',
        'setIndices',
        'Mesh:can\x27t\x20calculate\x20bounds\x20on\x20subMesh,mesh\x27s\x20isReadable\x20must\x20be\x20true.',
        'bufferUsage',
        '_setBuffer',
        '_instanceBufferStateType',
        '_setCPUMemory',
        'gpuMemory',
        'calculateBounds',
        'POSITION,NORMAL,UV',
        'createCapsule',
        '_createMesh',
        'createCone',
        'createCylinder',
        'createPlane',
        'createSphere',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09gl_FragColor\x20=\x20texture2D(u_MainTex,\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOR\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20MAINTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_AlbedoTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_AlbedoColor;\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20color\x20=\x20\x202.0\x20*\x20u_AlbedoColor;\x0d\x0a\x09#ifdef\x20COLOR\x0d\x0a\x09\x09color\x20*=\x20v_Color;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20MAINTEXTURE\x0d\x0a\x09\x09color\x20*=\x20texture2D(u_AlbedoTexture,\x20v_Texcoord0);\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact\x20=\x20clamp((1.0\x20/\x20gl_FragCoord.w\x20-\x20u_FogStart)\x20/\x20u_FogRange,\x200.0,\x201.0);\x0d\x0a\x09\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20vec3(0.0),\x20lerpFact);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20u_FogColor,\x20lerpFact);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0aattribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOR\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=\x20u_ViewProjection\x20*\x20a_WorldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x09\x09\x0d\x0a\x09#ifdef\x20COLOR\x0d\x0a\x09\x09v_Color\x20=\x20a_Color;\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\x0d\x0a\x09uniform\x20vec3\x20u_CameraPos;\x0d\x0a\x09varying\x20vec3\x20v_Normal;\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09uniform\x20DirectionLight\x20u_DirectionLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09uniform\x20PointLight\x20u_PointLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09uniform\x20SpotLight\x20u_SpotLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20mat4\x20u_View;\x0d\x0a\x09\x09uniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x09\x09uniform\x20vec4\x20u_Viewport;\x0d\x0a\x09\x09uniform\x20int\x20u_DirationLightCount;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightBuffer;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightClusterBuffer;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0avarying\x20float\x20v_posViewZ;\x0d\x0a\x0d\x0auniform\x20vec3\x20u_AmbientColor;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_SplatAlphaTexture;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture1;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture2;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture3;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture4;\x0d\x0auniform\x20sampler2D\x20u_DiffuseTexture5;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset1;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset2;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset3;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset4;\x0d\x0auniform\x20vec4\x20u_DiffuseScaleOffset5;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09uniform\x20sampler2D\x20u_LightMap;\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20splatAlpha\x20=\x20vec4(1.0);\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM1\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM2\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20+\x20color2.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM3\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09vec4\x20color3\x20=\x20texture2D(u_DiffuseTexture3,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset3.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20\x20+\x20color2.xyz\x20*\x20splatAlpha.g\x20+\x20color3.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r\x20-\x20splatAlpha.g);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM4\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09vec4\x20color3\x20=\x20texture2D(u_DiffuseTexture3,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset3.xy);\x0d\x0a\x09\x09vec4\x20color4\x20=\x20texture2D(u_DiffuseTexture4,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset4.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20\x20+\x20color2.xyz\x20*\x20splatAlpha.g\x20+\x20color3.xyz\x20*\x20splatAlpha.b\x20+\x20color4.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r\x20-\x20splatAlpha.g\x20-\x20splatAlpha.b);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ExtendTerrain_DETAIL_NUM5\x0d\x0a\x09\x09splatAlpha\x20=\x20texture2D(u_SplatAlphaTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09vec4\x20color1\x20=\x20texture2D(u_DiffuseTexture1,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset1.xy);\x0d\x0a\x09\x09vec4\x20color2\x20=\x20texture2D(u_DiffuseTexture2,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset2.xy);\x0d\x0a\x09\x09vec4\x20color3\x20=\x20texture2D(u_DiffuseTexture3,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset3.xy);\x0d\x0a\x09\x09vec4\x20color4\x20=\x20texture2D(u_DiffuseTexture4,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset4.xy);\x0d\x0a\x09\x09vec4\x20color5\x20=\x20texture2D(u_DiffuseTexture5,\x20v_Texcoord0\x20*\x20u_DiffuseScaleOffset5.xy);\x0d\x0a\x09\x09gl_FragColor.xyz\x20=\x20color1.xyz\x20*\x20splatAlpha.r\x20\x20+\x20color2.xyz\x20*\x20splatAlpha.g\x20+\x20color3.xyz\x20*\x20splatAlpha.b\x20+\x20color4.xyz\x20*\x20splatAlpha.a\x20+\x20color5.xyz\x20*\x20(1.0\x20-\x20splatAlpha.r\x20-\x20splatAlpha.g\x20-\x20splatAlpha.b\x20-\x20splatAlpha.a);\x0d\x0a\x09#endif\x0d\x0a\x09\x09gl_FragColor.w\x20=\x20splatAlpha.a;\x0d\x0a\x09\x09\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09vec3\x20normal\x20=\x20v_Normal;\x0d\x0a\x09\x09vec3\x20dif,\x20spe;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec3\x20diffuse\x20=\x20vec3(0.0);\x0d\x0a\x09vec3\x20specular=\x20vec3(0.0);\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\x0d\x0a\x09\x09vec3\x20toEye;\x0d\x0a\x09\x09#ifdef\x20FOG\x0d\x0a\x09\x09\x09toEye=u_CameraPos-v_PositionWorld;\x0d\x0a\x09\x09\x09float\x20toEyeLength=length(toEye);\x0d\x0a\x09\x09\x09toEye/=toEyeLength;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09toEye=normalize(u_CameraPos-v_PositionWorld);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongDiectionLight(vec3(0.0),1.0,normal,vec3(1.0),toEye,u_DirectionLight,dif,spe);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye,u_PointLight,dif,spe);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09#endif\x0d\x0a\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye,u_SpotLight,dif,spe);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09if(i\x20>=\x20u_DirationLightCount)\x0d\x0a\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09DirectionLight\x20directionLight\x20=\x20getDirectionLight(u_LightBuffer,i);\x0d\x0a\x09\x09\x09\x09LayaAirBlinnPhongDiectionLight(vec3(0.0),1.0,normal,vec3(1.0),toEye,directionLight,dif,spe);\x0d\x0a\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09ivec4\x20clusterInfo\x20=getClusterInfo(u_LightClusterBuffer,u_View,u_Viewport,\x20v_PositionWorld,gl_FragCoord,u_ProjectionParams);\x0d\x0a\x09\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.x)//PointLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09PointLight\x20pointLight\x20=\x20getPointLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye,pointLight,dif,spe);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.y)//SpotLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09SpotLight\x20spotLight\x20=\x20getSpotLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,vec3(0.0),1.0,normal,vec3(1.0),toEye\x09,spotLight,dif,spe);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0avec3\x20globalDiffuse\x20=\x20u_AmbientColor;\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09globalDiffuse\x20+=\x20decodeHDR(texture2D(u_LightMap,\x20v_LightMapUV),5.0);\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09float\x20shadowValue\x20=\x20shadowValue\x20=\x20sampleShadowmap(v_ShadowCoord);\x0d\x0a\x09gl_FragColor\x20=\x20vec4(gl_FragColor.rgb\x20*\x20(globalDiffuse\x20+\x20diffuse)\x20*\x20shadowValue,\x20gl_FragColor.a);\x0d\x0a#else\x0d\x0a\x09gl_FragColor\x20=\x20vec4(gl_FragColor.rgb\x20*\x20(globalDiffuse\x20+\x20diffuse),\x20gl_FragColor.a);\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09gl_FragColor.rgb\x20+=\x20specular\x20*\x20shadowValue;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_FragColor.rgb\x20+=\x20specular;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09float\x20lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\x0d\x0a#endif\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a',
        '#ifdef\x20GRAPHICS_API_GLES3\x0d\x0a\x09#define\x20INVERSE_MAT(mat)\x20inverse(mat)\x0d\x0a#else\x0d\x0a\x09#define\x20INVERSE_MAT(mat)\x20inverseMat(mat)\x0d\x0a#endif\x0d\x0a\x0d\x0astruct\x20DirectionLight\x20{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20direction;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20PointLight\x20{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20position;\x0d\x0a\x09float\x20range;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20SpotLight\x20{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20position;\x0d\x0a\x09float\x20range;\x0d\x0a\x09vec3\x20direction;\x0d\x0a\x09float\x20spot;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20LayaGI{\x0d\x0a\x09vec3\x20diffuse;\x0d\x0a\x09vec3\x20specular;\x0d\x0a};\x0d\x0a\x0d\x0astruct\x20LayaLight{\x0d\x0a\x09vec3\x20color;\x0d\x0a\x09vec3\x20dir;\x0d\x0a};\x0d\x0a\x0d\x0aconst\x20int\x20c_ClusterBufferWidth\x20=\x20CLUSTER_X_COUNT*CLUSTER_Y_COUNT;\x0d\x0aconst\x20int\x20c_ClusterBufferHeight\x20=\x20CLUSTER_Z_COUNT*(1+int(ceil(float(MAX_LIGHT_COUNT_PER_CLUSTER)/4.0)));\x0d\x0aconst\x20int\x20c_ClusterBufferFloatWidth\x20=\x20c_ClusterBufferWidth*4;\x0d\x0a\x0d\x0a#ifndef\x20GRAPHICS_API_GLES3\x0d\x0a\x09mat3\x20inverseMat(mat3\x20m)\x20{\x0d\x0a\x09\x09float\x20a00\x20=\x20m[0][0],\x20a01\x20=\x20m[0][1],\x20a02\x20=\x20m[0][2];\x0d\x0a\x09\x09float\x20a10\x20=\x20m[1][0],\x20a11\x20=\x20m[1][1],\x20a12\x20=\x20m[1][2];\x0d\x0a\x09\x09float\x20a20\x20=\x20m[2][0],\x20a21\x20=\x20m[2][1],\x20a22\x20=\x20m[2][2];\x0d\x0a\x0d\x0a\x09\x09float\x20b01\x20=\x20a22\x20*\x20a11\x20-\x20a12\x20*\x20a21;\x0d\x0a\x09\x09float\x20b11\x20=\x20-a22\x20*\x20a10\x20+\x20a12\x20*\x20a20;\x0d\x0a\x09\x09float\x20b21\x20=\x20a21\x20*\x20a10\x20-\x20a11\x20*\x20a20;\x0d\x0a\x0d\x0a\x09\x09float\x20det\x20=\x20a00\x20*\x20b01\x20+\x20a01\x20*\x20b11\x20+\x20a02\x20*\x20b21;\x0d\x0a\x0d\x0a\x09\x09return\x20mat3(b01,\x20(-a22\x20*\x20a01\x20+\x20a02\x20*\x20a21),\x20(a12\x20*\x20a01\x20-\x20a02\x20*\x20a11),\x0d\x0a\x09\x09\x09\x09\x09b11,\x20(a22\x20*\x20a00\x20-\x20a02\x20*\x20a20),\x20(-a12\x20*\x20a00\x20+\x20a02\x20*\x20a10),\x0d\x0a\x09\x09\x09\x09\x09b21,\x20(-a21\x20*\x20a00\x20+\x20a01\x20*\x20a20),\x20(a11\x20*\x20a00\x20-\x20a01\x20*\x20a10))\x20/\x20det;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20THICKNESSMAP\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_ThinknessTexture;\x0d\x0a\x09#endif\x0d\x0a#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09uniform\x20float\x20u_TransmissionRate;\x0d\x0a\x09uniform\x20float\x20u_BackDiffuse;\x0d\x0a\x09uniform\x20float\x20u_BackScale;\x0d\x0a\x09uniform\x20vec4\x20u_TransmissionColor;\x0d\x0a\x0d\x0a\x0d\x0a\x09vec3\x20SubSurfaceIBack(vec3\x20lightDir,vec3\x20viewDir,float\x20thinknessFactor){\x0d\x0a\x09\x09vec3\x20H\x20=\x20normalize(lightDir);\x0d\x0a\x09\x09float\x20VdotH\x20=\x20pow(clamp(dot(viewDir,H),0.0,1.0),u_BackDiffuse)*u_BackScale;\x0d\x0a\x09\x09vec3\x20I;\x0d\x0a\x09\x09#ifdef\x20THICKNESSMAP\x0d\x0a\x09\x09\x09I\x20=\x20u_TransmissionColor.rgb*VdotH*thinknessFactor;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09I\x20=\x20u_TransmissionColor.rgb*VdotH;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09return\x20I;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0aivec4\x20getClusterInfo(sampler2D\x20clusterBuffer,mat4\x20viewMatrix,vec4\x20viewport,vec3\x20position,vec4\x20fragCoord,vec4\x20projectParams)\x0d\x0a{\x0d\x0a\x09vec3\x20viewPos\x20=\x20vec3(viewMatrix*vec4(position,\x201.0));\x20//position\x20in\x20viewspace\x0d\x0a\x0d\x0a\x09int\x20clusterXIndex\x20=\x20int(floor(fragCoord.x/\x20(float(viewport.z)/float(CLUSTER_X_COUNT))));\x0d\x0a\x20\x20\x20\x20int\x20clusterYIndex\x20=\x20int(floor((viewport.w\x20*\x20(projectParams.z\x20<0.0?\x200.0\x20:\x201.0)\x20-\x20fragCoord.y\x20*\x20projectParams.z)/\x20(float(viewport.w)/float(CLUSTER_Y_COUNT))));//Maybe\x20Flipped\x20ProjectMatrix\x0d\x0a\x09float\x20zSliceParam\x20=float(CLUSTER_Z_COUNT)/log2(projectParams.y\x20/\x20projectParams.x);\x0d\x0a\x20\x09int\x20clusterZIndex\x20=\x20int(floor(log2(-viewPos.z)\x20*\x20zSliceParam-\x20log2(projectParams.x)\x20*\x20zSliceParam));//projectParams\x20x:cameraNear\x20y:cameraFar\x0d\x0a\x0d\x0a\x09vec2\x20uv=\x20vec2((float(clusterXIndex\x20+\x20clusterYIndex\x20*\x20CLUSTER_X_COUNT)+0.5)/float(c_ClusterBufferWidth),\x0d\x0a\x09\x09\x09\x09(float(clusterZIndex)+0.5)/float(c_ClusterBufferHeight));\x0d\x0a\x09vec4\x20clusterPixel=texture2D(clusterBuffer,\x20uv);\x0d\x0a\x09return\x20ivec4(clusterPixel);//X:Point\x20Count\x20Y:Spot\x20Count\x20Z、W:Light\x20Offset\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0aint\x20getLightIndex(sampler2D\x20clusterBuffer,int\x20offset,int\x20index)\x20\x0d\x0a{\x0d\x0a\x09int\x20totalOffset=offset+index;\x0d\x0a\x09int\x20row=totalOffset/c_ClusterBufferFloatWidth;\x0d\x0a\x09int\x20lastRowFloat=totalOffset-row*c_ClusterBufferFloatWidth;\x0d\x0a\x09int\x20col=lastRowFloat/4;\x0d\x0a\x09vec2\x20uv=vec2((float(col)+0.5)/float(c_ClusterBufferWidth),\x0d\x0a\x09\x09\x09\x09(float(row)+0.5)/float(c_ClusterBufferHeight));\x0d\x0a\x09vec4\x20texel\x20=\x20texture2D(clusterBuffer,\x20uv);\x0d\x0a\x20\x20\x20\x20int\x20pixelComponent\x20=\x20lastRowFloat-col*4;\x0d\x0a\x20\x20\x20\x20if\x20(pixelComponent\x20==\x200)\x20\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.x);\x0d\x0a\x20\x20\x20\x20else\x20if\x20(pixelComponent\x20==\x201)\x20\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.y);\x0d\x0a\x20\x20\x20\x20else\x20if\x20(pixelComponent\x20==\x202)\x20\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.z);\x0d\x0a\x20\x20\x20\x20else\x20//pixelComponent==3\x0d\x0a\x20\x20\x20\x20\x20\x20return\x20int(texel.w);\x0d\x0a}\x0d\x0a\x0d\x0aDirectionLight\x20getDirectionLight(sampler2D\x20lightBuffer,int\x20index)\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20DirectionLight\x20light;\x0d\x0a\x20\x20\x20\x20float\x20v\x20=\x20(float(index)+0.5)/\x20float(MAX_LIGHT_COUNT);\x0d\x0a\x20\x20\x20\x20vec4\x20p1\x20=\x20texture2D(lightBuffer,\x20vec2(0.125,v));\x0d\x0a\x20\x20\x20\x20vec4\x20p2\x20=\x20texture2D(lightBuffer,\x20vec2(0.375,v));\x0d\x0a\x09light.color=p1.rgb;\x0d\x0a\x20\x20\x20\x20light.direction\x20=\x20p2.rgb;\x0d\x0a\x20\x20\x20\x20return\x20light;\x0d\x0a}\x0d\x0a\x0d\x0aPointLight\x20getPointLight(sampler2D\x20lightBuffer,sampler2D\x20clusterBuffer,ivec4\x20clusterInfo,int\x20index)\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20PointLight\x20light;\x0d\x0a\x09int\x20pointIndex=getLightIndex(clusterBuffer,clusterInfo.z*c_ClusterBufferFloatWidth+clusterInfo.w,index);\x0d\x0a\x20\x20\x20\x20float\x20v\x20=\x20(float(pointIndex)+0.5)/\x20float(MAX_LIGHT_COUNT);\x0d\x0a\x20\x20\x20\x20vec4\x20p1\x20=\x20texture2D(lightBuffer,\x20vec2(0.125,v));\x0d\x0a\x20\x20\x20\x20vec4\x20p2\x20=\x20texture2D(lightBuffer,\x20vec2(0.375,v));\x0d\x0a\x09light.color=p1.rgb;\x0d\x0a\x09light.range\x20=\x20p1.a;\x0d\x0a\x20\x20\x20\x20light.position\x20=\x20p2.rgb;\x0d\x0a\x20\x20\x20\x20return\x20light;\x0d\x0a}\x0d\x0a\x0d\x0aSpotLight\x20getSpotLight(sampler2D\x20lightBuffer,sampler2D\x20clusterBuffer,ivec4\x20clusterInfo,int\x20index)\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20SpotLight\x20light;\x0d\x0a\x09int\x20spoIndex=getLightIndex(clusterBuffer,clusterInfo.z*c_ClusterBufferFloatWidth+clusterInfo.w,clusterInfo.x+index);\x0d\x0a\x20\x20\x20\x20float\x20v\x20=\x20(float(spoIndex)+0.5)/\x20float(MAX_LIGHT_COUNT);\x0d\x0a\x20\x20\x20\x20vec4\x20p1\x20=\x20texture2D(lightBuffer,\x20vec2(0.125,v));\x0d\x0a\x20\x20\x20\x20vec4\x20p2\x20=\x20texture2D(lightBuffer,\x20vec2(0.375,v));\x0d\x0a\x09vec4\x20p3\x20=\x20texture2D(lightBuffer,\x20vec2(0.625,v));\x0d\x0a\x20\x20\x20\x20light.color\x20=\x20p1.rgb;\x0d\x0a\x09light.range=p1.a;\x0d\x0a\x20\x20\x20\x20light.position\x20=\x20p2.rgb;\x0d\x0a\x09light.spot\x20=\x20p2.a;\x0d\x0a\x09light.direction\x20=\x20p3.rgb;\x0d\x0a\x20\x20\x20\x20return\x20light;\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Laya中使用衰减纹理\x0d\x0afloat\x20LayaAttenuation(in\x20vec3\x20L,in\x20float\x20invLightRadius)\x20{\x0d\x0a\x09float\x20fRatio\x20=\x20clamp(length(L)\x20*\x20invLightRadius,0.0,1.0);\x0d\x0a\x09fRatio\x20*=\x20fRatio;\x0d\x0a\x09return\x201.0\x20/\x20(1.0\x20+\x2025.0\x20*\x20fRatio)*\x20clamp(4.0*(1.0\x20-\x20fRatio),0.0,1.0);\x20//fade\x20to\x20black\x20as\x20if\x204\x20pixel\x20texture\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Same\x20as\x20Just\x20Cause\x202\x20and\x20Crysis\x202\x20(you\x20can\x20read\x20GPU\x20Pro\x201\x20book\x20for\x20more\x20information)\x0d\x0afloat\x20BasicAttenuation(in\x20vec3\x20L,in\x20float\x20invLightRadius)\x20{\x0d\x0a\x09vec3\x20distance\x20=\x20L\x20*\x20invLightRadius;\x0d\x0a\x09float\x20attenuation\x20=\x20clamp(1.0\x20-\x20dot(distance,\x20distance),0.0,1.0);\x20//\x20Equals\x20float\x20attenuation\x20=\x20saturate(1.0f\x20-\x20dot(L,\x20L)\x20/\x20(lightRadius\x20*\x20\x20lightRadius));\x0d\x0a\x09return\x20attenuation\x20*\x20attenuation;\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Inspired\x20on\x20http://fools.slindev.com/viewtopic.php?f=11&t=21&view=unread#unread\x0d\x0afloat\x20NaturalAttenuation(in\x20vec3\x20L,in\x20float\x20invLightRadius)\x20{\x0d\x0a\x09float\x20attenuationFactor\x20=\x2030.0;\x0d\x0a\x09vec3\x20distance\x20=\x20L\x20*\x20invLightRadius;\x0d\x0a\x09float\x20attenuation\x20=\x20dot(distance,\x20distance);\x20//\x20Equals\x20float\x20attenuation\x20=\x20dot(L,\x20L)\x20/\x20(lightRadius\x20*\x20\x20lightRadius);\x0d\x0a\x09attenuation\x20=\x201.0\x20/\x20(attenuation\x20*\x20attenuationFactor\x20+\x201.0);\x0d\x0a\x09//\x20Second\x20we\x20move\x20down\x20the\x20function\x20therewith\x20it\x20reaches\x20zero\x20at\x20abscissa\x201:\x0d\x0a\x09attenuationFactor\x20=\x201.0\x20/\x20(attenuationFactor\x20+\x201.0);\x20//attenuationFactor\x20contains\x20now\x20the\x20value\x20we\x20have\x20to\x20subtract\x0d\x0a\x09attenuation\x20=\x20max(attenuation\x20-\x20attenuationFactor,\x200.0);\x20//\x20The\x20max\x20fixes\x20a\x20bug.\x0d\x0a\x09//\x20Finally\x20we\x20expand\x20the\x20equation\x20along\x20the\x20y-axis\x20so\x20that\x20it\x20starts\x20with\x20a\x20function\x20value\x20of\x201\x20again.\x0d\x0a\x09attenuation\x20/=\x201.0\x20-\x20attenuationFactor;\x0d\x0a\x09return\x20attenuation;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongLight\x20(in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,in\x20vec3\x20lightColor,\x20in\x20vec3\x20lightVec,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09mediump\x20vec3\x20h\x20=\x20normalize(viewDir-lightVec);\x0d\x0a\x09lowp\x20float\x20ln\x20=\x20max\x20(0.0,\x20dot\x20(-lightVec,normal));\x0d\x0a\x09float\x20nh\x20=\x20max\x20(0.0,\x20dot\x20(h,normal));\x0d\x0a\x09diffuseColor=lightColor\x20*\x20ln;\x0d\x0a\x09specularColor=lightColor\x20*specColor*pow\x20(nh,\x20specColorIntensity*128.0)\x20*\x20gloss;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongDiectionLight\x20(in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20DirectionLight\x20light,float\x20thinknessFactor,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor,out\x20vec3\x20transmisColor)\x20{\x0d\x0a\x09vec3\x20lightVec=normalize(light.direction);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec,diffuseColor,specularColor);\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09diffuseColor\x20*=\x20u_TransmissionRate;\x0d\x0a\x09\x09transmisColor\x20=\x20SubSurfaceIBack(lightVec,\x20viewDir,thinknessFactor)*light.color.rgb*(1.0-u_TransmissionRate);\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongDiectionLight\x20(in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20DirectionLight\x20light,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09vec3\x20lightVec=normalize(light.direction);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec,diffuseColor,specularColor);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongPointLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20PointLight\x20light,float\x20thinknessFactor,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor,out\x20vec3\x20transmisColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec/length(lightVec),diffuseColor,specularColor);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range);\x0d\x0a\x09diffuseColor\x20*=\x20attenuate;\x0d\x0a\x09specularColor*=\x20attenuate;\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09diffuseColor\x20*=\x20u_TransmissionRate;\x0d\x0a\x09\x09transmisColor\x20=\x20SubSurfaceIBack(lightVec,\x20viewDir,thinknessFactor)*light.color.rgb*(1.0-u_TransmissionRate)*attenuate;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongPointLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20PointLight\x20light,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,lightVec/length(lightVec),diffuseColor,specularColor);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range);\x0d\x0a\x09diffuseColor\x20*=\x20attenuate;\x0d\x0a\x09specularColor*=\x20attenuate;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongSpotLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20SpotLight\x20light,float\x20thinknessFactor,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor,out\x20vec3\x20transmisColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09vec3\x20normalLightVec=lightVec/length(lightVec);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,normalLightVec,diffuseColor,specularColor);\x0d\x0a\x09vec2\x20cosAngles=cos(vec2(light.spot,light.spot*0.5)*0.5);//ConeAttenuation\x0d\x0a\x09float\x20dl=dot(normalize(light.direction),normalLightVec);\x0d\x0a\x09dl*=smoothstep(cosAngles[0],cosAngles[1],dl);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range)*dl;\x0d\x0a\x09diffuseColor\x20*=attenuate;\x0d\x0a\x09specularColor\x20*=attenuate;\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09diffuseColor\x20*=\x20u_TransmissionRate;\x0d\x0a\x09\x09transmisColor\x20=\x20SubSurfaceIBack(lightVec,\x20viewDir,thinknessFactor)*light.color.rgb*(1.0-u_TransmissionRate)*attenuate;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20LayaAirBlinnPhongSpotLight\x20(in\x20vec3\x20pos,in\x20vec3\x20specColor,in\x20float\x20specColorIntensity,in\x20vec3\x20normal,in\x20vec3\x20gloss,\x20in\x20vec3\x20viewDir,\x20in\x20SpotLight\x20light,out\x20vec3\x20diffuseColor,out\x20vec3\x20specularColor)\x20{\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09vec3\x20normalLightVec=lightVec/length(lightVec);\x0d\x0a\x09LayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.color,normalLightVec,diffuseColor,specularColor);\x0d\x0a\x09vec2\x20cosAngles=cos(vec2(light.spot,light.spot*0.5)*0.5);//ConeAttenuation\x0d\x0a\x09float\x20dl=dot(normalize(light.direction),normalLightVec);\x0d\x0a\x09dl*=smoothstep(cosAngles[0],cosAngles[1],dl);\x0d\x0a\x09float\x20attenuate\x20=\x20LayaAttenuation(lightVec,\x201.0/light.range)*dl;\x0d\x0a\x09diffuseColor\x20*=attenuate;\x0d\x0a\x09specularColor\x20*=attenuate;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0avec3\x20NormalSampleToWorldSpace(vec3\x20normalMapSample,\x20vec3\x20unitNormal,\x20vec3\x20tangent,vec3\x20binormal)\x20{\x0d\x0a\x09vec3\x20normalT\x20=vec3(2.0*normalMapSample.x\x20-\x201.0,1.0-2.0*normalMapSample.y,2.0*normalMapSample.z\x20-\x201.0);\x0d\x0a\x09mediump\x20vec3\x20N\x20=\x20unitNormal;\x0d\x0a\x09mediump\x20vec3\x20T\x20=\x20tangent;\x0d\x0a\x09mediump\x20vec3\x20B\x20=\x20binormal;\x0d\x0a\x09mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);\x0d\x0a\x0d\x0a\x09//\x20Transform\x20from\x20tangent\x20space\x20to\x20world\x20space.\x0d\x0a\x09vec3\x20bumpedNormal\x20=normalize(TBN*normalT);\x0d\x0a\x09return\x20bumpedNormal;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20NormalSampleToWorldSpace1(vec4\x20normalMapSample,\x20vec3\x20tangent,\x20vec3\x20binormal,\x20vec3\x20unitNormal)\x20{\x0d\x0a\x09vec3\x20normalT;\x0d\x0a\x09normalT.x\x20=\x202.0\x20*\x20normalMapSample.x\x20-\x201.0;\x0d\x0a\x09normalT.y\x20=\x201.0\x20-\x202.0\x20*\x20normalMapSample.y;\x0d\x0a\x09normalT.z\x20=\x20sqrt(1.0\x20-\x20clamp(dot(normalT.xy,\x20normalT.xy),\x200.0,\x201.0));\x0d\x0a\x0d\x0a\x09vec3\x20T\x20=\x20normalize(tangent);\x0d\x0a\x09vec3\x20B\x20=\x20normalize(binormal);\x0d\x0a\x09vec3\x20N\x20=\x20normalize(unitNormal);\x0d\x0a\x09mat3\x20TBN\x20=\x20mat3(T,\x20B,\x20N);\x0d\x0a\x0d\x0a\x09//\x20Transform\x20from\x20tangent\x20space\x20to\x20world\x20space.\x0d\x0a\x09vec3\x20bumpedNormal\x20=\x20TBN\x20*\x20normalize(normalT);\x0d\x0a\x0d\x0a\x09return\x20bumpedNormal;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20DecodeLightmap(vec4\x20color)\x20{\x0d\x0a\x09return\x20color.rgb*color.a*5.0;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20decodeHDR(vec4\x20color,float\x20range)\x20{\x0d\x0a\x09return\x20color.rgb*color.a*range;\x0d\x0a}\x0d\x0a\x0d\x0avec2\x20TransformUV(vec2\x20texcoord,vec4\x20tilingOffset)\x20{\x0d\x0a\x09vec2\x20transTexcoord=vec2(texcoord.x,texcoord.y-1.0)*tilingOffset.xy+vec2(tilingOffset.z,-tilingOffset.w);\x0d\x0a\x09transTexcoord.y+=1.0;\x0d\x0a\x09return\x20transTexcoord;\x0d\x0a}\x0d\x0a\x0d\x0avec4\x20remapGLPositionZ(vec4\x20position)\x20{\x0d\x0a\x09position.z=position.z\x20*\x202.0\x20-\x20position.w;\x0d\x0a\x09return\x20position;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20vec3\x20layaLinearToGammaSpace\x20(mediump\x20vec3\x20linRGB)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20linRGB\x20=\x20max(linRGB,\x20vec3(0.0));\x0d\x0a\x20\x20\x20\x20//\x20An\x20almost-perfect\x20approximation\x20from\x20http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1\x0d\x0a\x20\x20\x20\x20return\x20max(1.055\x20*\x20pow(linRGB,vec3(0.416666667))\x20-\x200.055,\x200.0);\x20\x20\x20\x0d\x0a}\x0d\x0a\x0d\x0aLayaLight\x20layaDirectionLightToLight(in\x20DirectionLight\x20light,in\x20float\x20attenuate)\x0d\x0a{\x0d\x0a\x09LayaLight\x20relight;\x0d\x0a\x09relight.color\x20=\x20light.color*attenuate;\x0d\x0a\x09relight.dir\x20=\x20light.direction;\x0d\x0a\x09return\x20relight;\x0d\x0a}\x0d\x0a\x0d\x0aLayaLight\x20layaPointLightToLight(in\x20vec3\x20pos,in\x20vec3\x20normal,\x20in\x20PointLight\x20light,in\x20float\x20attenuate)\x0d\x0a{\x0d\x0a\x09LayaLight\x20relight;\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09attenuate\x20*=\x20LayaAttenuation(lightVec,\x201.0/light.range);\x0d\x0a\x09relight.color\x20=\x20light.color*attenuate;\x0d\x0a\x09relight.dir\x20=\x20normalize(lightVec);\x0d\x0a\x09return\x20relight;\x0d\x0a}\x0d\x0a\x0d\x0aLayaLight\x20layaSpotLightToLight(in\x20vec3\x20pos,in\x20vec3\x20normal,\x20in\x20SpotLight\x20light,in\x20float\x20attenuate)\x0d\x0a{\x0d\x0a\x09LayaLight\x20relight;\x0d\x0a\x09vec3\x20lightVec\x20=\x20\x20pos-light.position;\x0d\x0a\x09vec3\x20normalLightVec=lightVec/length(lightVec);\x0d\x0a\x09vec2\x20cosAngles=cos(vec2(light.spot,light.spot*0.5)*0.5);//ConeAttenuation\x0d\x0a\x09float\x20dl=dot(normalize(light.direction),normalLightVec);\x0d\x0a\x09dl*=smoothstep(cosAngles[0],cosAngles[1],dl);\x0d\x0a\x09attenuate\x20*=\x20LayaAttenuation(lightVec,\x201.0/light.range)*dl;\x0d\x0a\x09relight.dir\x20=\x20normalLightVec;\x0d\x0a\x09relight.color\x20=\x20light.color*attenuate;\x0d\x0a\x09return\x20relight;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a',
        '//\x20------------------------------------------------------------------\x0a//\x20\x20PCF\x20Filtering\x20Tent\x20Functions\x0a//\x20------------------------------------------------------------------\x0a\x0a//\x20Assuming\x20a\x20isoceles\x20right\x20angled\x20triangle\x20of\x20height\x20\x22triangleHeight\x22\x20(as\x20drawn\x20below).\x0a//\x20This\x20function\x20return\x20the\x20area\x20of\x20the\x20triangle\x20above\x20the\x20first\x20texel(in\x20Y\x20the\x20first\x20texel).\x0a//\x0a//\x20|\x5c\x20\x20\x20\x20\x20\x20<--\x2045\x20degree\x20slop\x20isosceles\x20right\x20angled\x20triangle\x0a//\x20|\x20\x5c\x0a//\x20----\x20\x20\x20\x20<--\x20length\x20of\x20this\x20side\x20is\x20\x22triangleHeight\x22\x0a//\x20_\x20_\x20_\x20_\x20<--\x20texels\x0afloat\x20sampleShadowGetIRTriangleTexelArea(float\x20triangleHeight)\x0a{\x0a\x20\x20\x20\x20return\x20triangleHeight\x20-\x200.5;\x0a}\x0a\x0a//\x20Assuming\x20a\x20isoceles\x20triangle\x20of\x201.5\x20texels\x20height\x20and\x203\x20texels\x20wide\x20lying\x20on\x204\x20texels.\x0a//\x20This\x20function\x20return\x20the\x20area\x20of\x20the\x20triangle\x20above\x20each\x20of\x20those\x20texels.\x0a//\x20\x20\x20\x20|\x20\x20\x20\x20<--\x20offset\x20from\x20-0.5\x20to\x200.5,\x200\x20meaning\x20triangle\x20is\x20exactly\x20in\x20the\x20center\x0a//\x20\x20\x20/\x20\x5c\x20\x20\x20<--\x2045\x20degree\x20slop\x20isosceles\x20triangle\x20(ie\x20tent\x20projected\x20in\x202D)\x0a//\x20\x20/\x20\x20\x20\x5c\x0a//\x20_\x20_\x20_\x20_\x20<--\x20texels\x0a//\x20X\x20Y\x20Z\x20W\x20<--\x20result\x20indices\x20(in\x20computedArea.xyzw\x20and\x20computedAreaUncut.xyzw)\x0a//\x20Top\x20point\x20at\x20(right,top)\x20in\x20a\x20texel,left\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel,right\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel.\x0avoid\x20sampleShadowGetTexelAreasTent3x3(float\x20offset,\x20out\x20vec4\x20computedArea,\x20out\x20vec4\x20computedAreaUncut)\x0a{\x0a\x20\x20\x20\x20//\x20Compute\x20the\x20exterior\x20areas,a\x20and\x20h\x20is\x20same.\x0a\x20\x20\x20\x20float\x20a\x20=\x20offset\x20+\x200.5;\x0a\x20\x20\x20\x20float\x20offsetSquaredHalved\x20=\x20a\x20*\x20a\x20*\x200.5;\x0a\x20\x20\x20\x20computedAreaUncut.x\x20=\x20computedArea.x\x20=\x20offsetSquaredHalved\x20-\x20offset;\x0a\x20\x20\x20\x20computedAreaUncut.w\x20=\x20computedArea.w\x20=\x20offsetSquaredHalved;\x0a\x0a\x20\x20\x20\x20//\x20Compute\x20the\x20middle\x20areas\x0a\x20\x20\x20\x20//\x20For\x20Y\x20:\x20We\x20find\x20the\x20area\x20in\x20Y\x20of\x20as\x20if\x20the\x20left\x20section\x20of\x20the\x20isoceles\x20triangle\x20would\x0a\x20\x20\x20\x20//\x20intersect\x20the\x20axis\x20between\x20Y\x20and\x20Z\x20(ie\x20where\x20offset\x20=\x200).\x0a\x20\x20\x20\x20computedAreaUncut.y\x20=\x20sampleShadowGetIRTriangleTexelArea(1.5\x20-\x20offset);\x0a\x20\x20\x20\x20//\x20This\x20area\x20is\x20superior\x20to\x20the\x20one\x20we\x20are\x20looking\x20for\x20if\x20(offset\x20<\x200)\x20thus\x20we\x20need\x20to\x0a\x20\x20\x20\x20//\x20subtract\x20the\x20area\x20of\x20the\x20triangle\x20defined\x20by\x20(0,1.5-offset),\x20(0,1.5+offset),\x20(-offset,1.5).\x0a\x20\x20\x20\x20float\x20clampedOffsetLeft\x20=\x20min(offset,0.0);\x0a\x20\x20\x20\x20float\x20areaOfSmallLeftTriangle\x20=\x20clampedOffsetLeft\x20*\x20clampedOffsetLeft;\x0a\x20\x20\x20\x20computedArea.y\x20=\x20computedAreaUncut.y\x20-\x20areaOfSmallLeftTriangle;\x0a\x0a\x20\x20\x20\x20//\x20We\x20do\x20the\x20same\x20for\x20the\x20Z\x20but\x20with\x20the\x20right\x20part\x20of\x20the\x20isoceles\x20triangle\x0a\x20\x20\x20\x20computedAreaUncut.z\x20=\x20sampleShadowGetIRTriangleTexelArea(1.5\x20+\x20offset);\x0a\x20\x20\x20\x20float\x20clampedOffsetRight\x20=\x20max(offset,0.0);\x0a\x20\x20\x20\x20float\x20areaOfSmallRightTriangle\x20=\x20clampedOffsetRight\x20*\x20clampedOffsetRight;\x0a\x20\x20\x20\x20computedArea.z\x20=\x20computedAreaUncut.z\x20-\x20areaOfSmallRightTriangle;\x0a}\x0a\x0a//\x20Assuming\x20a\x20isoceles\x20triangle\x20of\x202.5\x20texel\x20height\x20and\x205\x20texels\x20wide\x20lying\x20on\x206\x20texels.\x0a//\x20This\x20function\x20return\x20the\x20weight\x20of\x20each\x20texels\x20area\x20relative\x20to\x20the\x20full\x20triangle\x20area.\x0a//\x20\x20/\x20\x20\x20\x20\x20\x20\x20\x5c\x0a//\x20_\x20_\x20_\x20_\x20_\x20_\x20<--\x20texels\x0a//\x200\x201\x202\x203\x204\x205\x20<--\x20computed\x20area\x20indices\x20(in\x20texelsWeights[])\x0a//\x20Top\x20point\x20at\x20(right,top)\x20in\x20a\x20texel,left\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel,right\x20bottom\x20point\x20at\x20(middle,middle)\x20in\x20a\x20texel.\x0avoid\x20sampleShadowGetTexelWeightsTent5x5(float\x20offset,\x20out\x20vec3\x20texelsWeightsA,\x20out\x20vec3\x20texelsWeightsB)\x0a{\x0a\x20\x20\x20\x20vec4\x20areaFrom3texelTriangle;\x0a\x20\x20\x20\x20vec4\x20areaUncutFrom3texelTriangle;\x0a\x20\x20\x20\x20sampleShadowGetTexelAreasTent3x3(offset,\x20areaFrom3texelTriangle,\x20areaUncutFrom3texelTriangle);\x0a\x0a\x20\x20\x20\x20//\x20Triangle\x20slope\x20is\x2045\x20degree\x20thus\x20we\x20can\x20almost\x20reuse\x20the\x20result\x20of\x20the\x203\x20texel\x20wide\x20computation.\x0a\x20\x20\x20\x20//\x20the\x205\x20texel\x20wide\x20triangle\x20can\x20be\x20seen\x20as\x20the\x203\x20texel\x20wide\x20one\x20but\x20shifted\x20up\x20by\x20one\x20unit/texel.\x0a\x20\x20\x20\x20//\x200.16\x20is\x201/(the\x20triangle\x20area)\x0a\x20\x20\x20\x20texelsWeightsA.x\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.x);\x0a\x20\x20\x20\x20texelsWeightsA.y\x20=\x200.16\x20*\x20(areaUncutFrom3texelTriangle.y);\x0a\x20\x20\x20\x20texelsWeightsA.z\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.y\x20+\x201.0);\x0a\x20\x20\x20\x20texelsWeightsB.x\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.z\x20+\x201.0);\x0a\x20\x20\x20\x20texelsWeightsB.y\x20=\x200.16\x20*\x20(areaUncutFrom3texelTriangle.z);\x0a\x20\x20\x20\x20texelsWeightsB.z\x20=\x200.16\x20*\x20(areaFrom3texelTriangle.w);\x0a}\x0a\x0a//\x205x5\x20Tent\x20filter\x20(45\x20degree\x20sloped\x20triangles\x20in\x20U\x20and\x20V)\x0avoid\x20sampleShadowComputeSamplesTent5x5(vec4\x20shadowMapTextureTexelSize,\x20vec2\x20coord,\x20out\x20float\x20fetchesWeights[9],\x20out\x20vec2\x20fetchesUV[9])\x0a{\x0a\x20\x20\x20\x20//\x20tent\x20base\x20is\x205x5\x20base\x20thus\x20covering\x20from\x2025\x20to\x2036\x20texels,\x20thus\x20we\x20need\x209\x20bilinear\x20PCF\x20fetches\x0a\x20\x20\x20\x20vec2\x20tentCenterInTexelSpace\x20=\x20coord.xy\x20*\x20shadowMapTextureTexelSize.zw;\x0a\x20\x20\x20\x20vec2\x20centerOfFetchesInTexelSpace\x20=\x20floor(tentCenterInTexelSpace\x20+\x200.5);\x0a\x20\x20\x20\x20vec2\x20offsetFromTentCenterToCenterOfFetches\x20=\x20tentCenterInTexelSpace\x20-\x20centerOfFetchesInTexelSpace;\x0a\x0a\x20\x20\x20\x20//\x20find\x20the\x20weight\x20of\x20each\x20texel\x20based\x20on\x20the\x20area\x20of\x20a\x2045\x20degree\x20slop\x20tent\x20above\x20each\x20of\x20them.\x0a\x20\x20\x20\x20vec3\x20texelsWeightsUA,\x20texelsWeightsUB;\x0a\x20\x20\x20\x20vec3\x20texelsWeightsVA,\x20texelsWeightsVB;\x0a\x20\x20\x20\x20sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.x,\x20texelsWeightsUA,\x20texelsWeightsUB);\x0a\x20\x20\x20\x20sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.y,\x20texelsWeightsVA,\x20texelsWeightsVB);\x0a\x0a\x20\x20\x20\x20//\x20each\x20fetch\x20will\x20cover\x20a\x20group\x20of\x202x2\x20texels,\x20the\x20weight\x20of\x20each\x20group\x20is\x20the\x20sum\x20of\x20the\x20weights\x20of\x20the\x20texels\x0a\x20\x20\x20\x20vec3\x20fetchesWeightsU\x20=\x20vec3(texelsWeightsUA.xz,\x20texelsWeightsUB.y)\x20+\x20vec3(texelsWeightsUA.y,\x20texelsWeightsUB.xz);\x0a\x20\x20\x20\x20vec3\x20fetchesWeightsV\x20=\x20vec3(texelsWeightsVA.xz,\x20texelsWeightsVB.y)\x20+\x20vec3(texelsWeightsVA.y,\x20texelsWeightsVB.xz);\x0a\x0a\x20\x20\x20\x20//\x20move\x20the\x20PCF\x20bilinear\x20fetches\x20to\x20respect\x20texels\x20weights\x0a\x20\x20\x20\x20vec3\x20fetchesOffsetsU\x20=\x20vec3(texelsWeightsUA.y,\x20texelsWeightsUB.xz)\x20/\x20fetchesWeightsU.xyz\x20+\x20vec3(-2.5,-0.5,1.5);\x0a\x20\x20\x20\x20vec3\x20fetchesOffsetsV\x20=\x20vec3(texelsWeightsVA.y,\x20texelsWeightsVB.xz)\x20/\x20fetchesWeightsV.xyz\x20+\x20vec3(-2.5,-0.5,1.5);\x0a\x20\x20\x20\x20fetchesOffsetsU\x20*=\x20shadowMapTextureTexelSize.xxx;\x0a\x20\x20\x20\x20fetchesOffsetsV\x20*=\x20shadowMapTextureTexelSize.yyy;\x0a\x0a\x20\x20\x20\x20vec2\x20bilinearFetchOrigin\x20=\x20centerOfFetchesInTexelSpace\x20*\x20shadowMapTextureTexelSize.xy;\x0a\x20\x20\x20\x20fetchesUV[0]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.x,\x20fetchesOffsetsV.x);\x0a\x20\x20\x20\x20fetchesUV[1]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.y,\x20fetchesOffsetsV.x);\x0a\x20\x20\x20\x20fetchesUV[2]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.z,\x20fetchesOffsetsV.x);\x0a\x20\x20\x20\x20fetchesUV[3]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.x,\x20fetchesOffsetsV.y);\x0a\x20\x20\x20\x20fetchesUV[4]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.y,\x20fetchesOffsetsV.y);\x0a\x20\x20\x20\x20fetchesUV[5]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.z,\x20fetchesOffsetsV.y);\x0a\x20\x20\x20\x20fetchesUV[6]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.x,\x20fetchesOffsetsV.z);\x0a\x20\x20\x20\x20fetchesUV[7]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.y,\x20fetchesOffsetsV.z);\x0a\x20\x20\x20\x20fetchesUV[8]\x20=\x20bilinearFetchOrigin\x20+\x20vec2(fetchesOffsetsU.z,\x20fetchesOffsetsV.z);\x0a\x0a\x20\x20\x20\x20fetchesWeights[0]\x20=\x20fetchesWeightsU.x\x20*\x20fetchesWeightsV.x;\x0a\x20\x20\x20\x20fetchesWeights[1]\x20=\x20fetchesWeightsU.y\x20*\x20fetchesWeightsV.x;\x0a\x20\x20\x20\x20fetchesWeights[2]\x20=\x20fetchesWeightsU.z\x20*\x20fetchesWeightsV.x;\x0a\x20\x20\x20\x20fetchesWeights[3]\x20=\x20fetchesWeightsU.x\x20*\x20fetchesWeightsV.y;\x0a\x20\x20\x20\x20fetchesWeights[4]\x20=\x20fetchesWeightsU.y\x20*\x20fetchesWeightsV.y;\x0a\x20\x20\x20\x20fetchesWeights[5]\x20=\x20fetchesWeightsU.z\x20*\x20fetchesWeightsV.y;\x0a\x20\x20\x20\x20fetchesWeights[6]\x20=\x20fetchesWeightsU.x\x20*\x20fetchesWeightsV.z;\x0a\x20\x20\x20\x20fetchesWeights[7]\x20=\x20fetchesWeightsU.y\x20*\x20fetchesWeightsV.z;\x0a\x20\x20\x20\x20fetchesWeights[8]\x20=\x20fetchesWeightsU.z\x20*\x20fetchesWeightsV.z;\x0a}',
        '\x0d\x0a\x0d\x0a//SimpleSkinnedMesh\x0d\x0a#ifdef\x20SIMPLEBONE\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09attribute\x20vec4\x20a_SimpleTextureParams;\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec4\x20u_SimpleAnimatorParams;\x0d\x0a\x09#endif\x0d\x0a\x09uniform\x20sampler2D\x20u_SimpleAnimatorTexture;\x0d\x0a\x0d\x0a\x09uniform\x20float\x20u_SimpleAnimatorTextureSize;\x20\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20SIMPLEBONE\x0d\x0a\x09mat4\x20loadMatFromTexture(float\x20FramePos,int\x20boneIndices,float\x20offset)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20uv;\x0d\x0a\x09\x09float\x20PixelPos\x20=\x20FramePos+float(boneIndices)*4.0;\x0d\x0a\x09\x09float\x20halfOffset\x20=\x20offset\x20*\x200.5;\x0d\x0a\x09\x09float\x20uvoffset\x20=\x20PixelPos/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09uv.y\x20=\x20floor(uvoffset)*offset+halfOffset;\x0d\x0a\x09\x09uv.x\x20=\x20mod(float(PixelPos),u_SimpleAnimatorTextureSize)*offset+halfOffset;\x0d\x0a\x09\x09vec4\x20mat0row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09uv.x+=offset;\x0d\x0a\x09\x09vec4\x20mat1row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09uv.x+=offset;\x0d\x0a\x09\x09vec4\x20mat2row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09uv.x+=offset;\x0d\x0a\x09\x09vec4\x20mat3row\x20=\x20texture2D(u_SimpleAnimatorTexture,uv);\x0d\x0a\x09\x09mat4\x20m\x20=mat4(mat0row.x,mat0row.y,mat0row.z,mat0row.w,\x0d\x0a\x09\x09\x09\x09mat1row.x,mat1row.y,mat1row.z,mat1row.w,\x0d\x0a\x09\x09\x09\x09mat2row.x,mat2row.y,mat2row.z,mat2row.w,\x0d\x0a\x09\x09\x09\x09mat3row.x,mat3row.y,mat3row.z,mat3row.w);\x0d\x0a\x09\x09return\x20m;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a\x0d\x0auniform\x20vec4\x20u_DiffuseColor;\x0d\x0auniform\x20float\x20u_AlbedoIntensity;\x0d\x0a\x0d\x0a#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20ALPHATEST\x0d\x0a\x09uniform\x20float\x20u_AlphaTestValue;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20DIFFUSEMAP\x0d\x0a\x09uniform\x20sampler2D\x20u_DiffuseTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(DIFFUSEMAP)||defined(THICKNESSMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a\x09uniform\x20sampler2D\x20u_LightMap;\x0d\x0a\x09#ifdef\x20LIGHTMAP_DIRECTIONAL\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightMapDirection;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Normal;\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09varying\x20vec3\x20v_ViewDir;\x20\x0d\x0a\x0d\x0a\x09uniform\x20vec3\x20u_MaterialSpecular;\x0d\x0a\x09uniform\x20float\x20u_Shininess;\x0d\x0a\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09uniform\x20DirectionLight\x20u_DirectionLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09uniform\x20PointLight\x20u_PointLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09uniform\x20SpotLight\x20u_SpotLight;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20mat4\x20u_View;\x0d\x0a\x09\x09uniform\x20vec4\x20u_ProjectionParams;\x0d\x0a\x09\x09uniform\x20vec4\x20u_Viewport;\x0d\x0a\x09\x09uniform\x20int\x20u_DirationLightCount;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightBuffer;\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_LightClusterBuffer;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20SPECULARMAP\x20\x0d\x0a\x09\x09uniform\x20sampler2D\x20u_SpecularTexture;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20NORMALMAP\x20\x0d\x0a\x09uniform\x20sampler2D\x20u_NormalTexture;\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#include\x20\x22GlobalIllumination.glsl\x22;//\x22GlobalIllumination.glsl\x20use\x20uniform\x20should\x20at\x20front\x20of\x20this\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec3\x20normal;//light\x20and\x20SH\x20maybe\x20use\x20normal\x0d\x0a\x09#if\x20defined(NORMALMAP)\x0d\x0a\x09\x09vec3\x20normalMapSample\x20=\x20texture2D(u_NormalTexture,\x20v_Texcoord0).rgb;\x0d\x0a\x09\x09normal\x20=\x20normalize(NormalSampleToWorldSpace(normalMapSample,\x20v_Normal,\x20v_Tangent,v_Binormal));\x0d\x0a\x09#else\x0d\x0a\x09\x09normal\x20=\x20normalize(v_Normal);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09vec3\x20viewDir=\x20normalize(v_ViewDir);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09LayaGIInput\x20giInput;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x09\x0d\x0a\x09\x09giInput.lightmapUV=v_LightMapUV;\x0d\x0a\x09#endif\x0d\x0a\x09vec3\x20globalDiffuse=layaGIBase(giInput,1.0,normal);\x0d\x0a\x09\x0d\x0a\x09vec4\x20mainColor\x20=\x20u_DiffuseColor\x20*\x20u_AlbedoIntensity;\x0d\x0a\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09vec4\x20difTexColor=texture2D(u_DiffuseTexture,\x20v_Texcoord0);\x0d\x0a\x09\x09mainColor=mainColor*difTexColor;\x0d\x0a\x09#endif\x20\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09mainColor=mainColor*v_Color;\x0d\x0a\x09#endif\x20\x0d\x0a\x20\x20\x20\x20\x0d\x0a\x09#ifdef\x20ALPHATEST\x0d\x0a\x09\x09if(mainColor.a<u_AlphaTestValue)\x0d\x0a\x09\x09\x09discard;\x0d\x0a\x09#endif\x0d\x0a\x20\x20\x0d\x0a\x09\x0d\x0a\x09vec3\x20diffuse\x20=\x20vec3(0.0);\x0d\x0a\x09vec3\x20specular=\x20vec3(0.0);\x0d\x0a\x09vec3\x20transmissionDiffuse\x20=\x20vec3(0.0);\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09vec3\x20dif,spe,transmis;\x0d\x0a\x09\x09float\x20transmissionFactor;\x0d\x0a\x09\x09#ifdef\x20SPECULARMAP\x0d\x0a\x09\x09\x09vec3\x20gloss=texture2D(u_SpecularTexture,\x20v_Texcoord0).rgb;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09\x09\x09vec3\x20gloss=vec3(difTexColor.a);\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09vec3\x20gloss=vec3(1.0);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20THICKNESSMAP\x0d\x0a\x09\x09\x09transmissionFactor\x20=\x20texture2D(u_ThinknessTexture,\x20v_Texcoord0).r;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_DirectionLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09float\x20shadowAttenuation=sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09\x09dif\x20*=\x20shadowAttenuation;\x0d\x0a\x09\x09\x09\x09spe\x20*=\x20shadowAttenuation;\x0d\x0a\x09\x09\x09\x09transmis\x20*=shadowAttenuation;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_PointLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09#endif\x0d\x0a\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_SpotLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09float\x20spotShadowAttenuation\x20=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09\x09dif\x20*=\x20spotShadowAttenuation;\x0d\x0a\x09\x09\x09\x09spe\x20*=\x20spotShadowAttenuation;\x0d\x0a\x09\x09\x09\x09transmis\x20*=spotShadowAttenuation;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09if(i\x20>=\x20u_DirationLightCount)\x0d\x0a\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09DirectionLight\x20directionLight\x20=\x20getDirectionLight(u_LightBuffer,i);\x0d\x0a\x09\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09\x09directionLight.color\x20*=\x20sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09LayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,directionLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09ivec4\x20clusterInfo\x20=getClusterInfo(u_LightClusterBuffer,u_View,u_Viewport,\x20v_PositionWorld,gl_FragCoord,u_ProjectionParams);\x0d\x0a\x09\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.x)//PointLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09PointLight\x20pointLight\x20=\x20getPointLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,pointLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.y)//SpotLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09SpotLight\x20spotLight\x20=\x20getSpotLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09\x09spotLight.color\x20*=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09LayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,spotLight,transmissionFactor,dif,spe,transmis);\x0d\x0a\x09\x09\x09\x09\x09diffuse+=dif;\x0d\x0a\x09\x09\x09\x09\x09specular+=spe;\x0d\x0a\x09\x09\x09\x09\x09transmissionDiffuse+=transmis;\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09gl_FragColor\x20=vec4(mainColor.rgb*(globalDiffuse\x20+\x20diffuse),mainColor.a);\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09gl_FragColor.rgb+=specular;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20ENABLETRANSMISSION\x0d\x0a\x09\x09gl_FragColor.rgb+=\x20transmissionDiffuse;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09\x20\x20\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09//gl_FragColor.rgb\x20=transmissionDiffuse;\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a\x09precision\x20highp\x20int;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a\x09precision\x20mediump\x20int;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22\x0d\x0a#include\x20\x22Shadow.glsl\x22;\x0d\x0a\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(DIFFUSEMAP)||defined(THICKNESSMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(LIGHTMAP)&&defined(UV1)\x0d\x0a\x09attribute\x20vec2\x20a_Texcoord1;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20LIGHTMAP\x0d\x0a\x09uniform\x20vec4\x20u_LightmapScaleOffset;\x0d\x0a\x09varying\x20vec2\x20v_LightMapUV;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOR\x0d\x0a\x09attribute\x20vec4\x20a_Color;\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0avarying\x20vec3\x20v_Normal;\x20\x0d\x0a\x0d\x0a#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09uniform\x20vec3\x20u_CameraPos;\x0d\x0a\x09varying\x20vec3\x20v_ViewDir;\x20\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(NORMALMAP)\x0d\x0a\x09attribute\x20vec4\x20a_Tangent0;\x0d\x0a\x09varying\x20vec3\x20v_Tangent;\x0d\x0a\x09varying\x20vec3\x20v_Binormal;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09varying\x20vec3\x20v_PositionWorld;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09varying\x20vec4\x20v_ShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09varying\x20vec4\x20v_SpotShadowCoord;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=\x20u_ViewProjection\x20*\x20worldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x20\x20\x0d\x0a\x09v_Normal=normalize(a_Normal*worldInvMat);\x0d\x0a\x09#if\x20defined(NORMALMAP)\x0d\x0a\x09\x09v_Tangent=normalize(a_Tangent0.xyz*worldInvMat);\x0d\x0a\x09\x09v_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09\x09vec3\x20positionWS=(worldMat*position).xyz;\x0d\x0a\x09\x09#if\x20defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09v_ViewDir\x20=\x20u_CameraPos-positionWS;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(CALCULATE_SHADOWS)&&defined(SHADOW_CASCADE))||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09\x09\x09v_PositionWorld\x20=\x20positionWS;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(DIFFUSEMAP)||defined(THICKNESSMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\x0d\x0a\x09\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09#ifdef\x20UV1\x0d\x0a\x09\x09\x09v_LightMapUV=vec2(a_Texcoord1.x,1.0-a_Texcoord1.y)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09v_LightMapUV=vec2(a_Texcoord0.x,1.0-a_Texcoord0.y)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\x0d\x0a\x09\x09#endif\x20\x0d\x0a\x09\x09v_LightMapUV.y=1.0-v_LightMapUV.y;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09v_Color=a_Color;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09\x09v_ShadowCoord\x20=getShadowCoord(vec4(positionWS,1.0));\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09v_SpotShadowCoord\x20=\x20u_SpotViewProjectMatrix*vec4(positionWS,1.0);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x20\x20precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x20\x20precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0avarying\x20vec2\x20v_TextureCoordinate;\x0d\x0auniform\x20sampler2D\x20u_texture;\x0d\x0auniform\x20vec4\x20u_Tintcolor;\x0d\x0a\x0d\x0a#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09varying\x20vec4\x20v_MeshColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x09\x0d\x0a\x09#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09\x09gl_FragColor=v_MeshColor;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_FragColor=vec4(1.0);\x09\x0d\x0a\x09#endif\x0d\x0a\x09\x09\x0d\x0a\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09#ifdef\x20TINTCOLOR\x0d\x0a\x09\x09\x09gl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*u_Tintcolor*2.0*v_Color;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*v_Color;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x09#ifdef\x20TINTCOLOR\x0d\x0a\x09\x09\x09gl_FragColor*=u_Tintcolor*2.0*v_Color;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor*=v_Color;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09\x09\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a}',
        '//\x20#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0a//修改这里剔除没有用到的光照函数，增加粒子的编译速度\x0d\x0avec2\x20TransformUV(vec2\x20texcoord,vec4\x20tilingOffset)\x20{\x0d\x0a\x09vec2\x20transTexcoord=vec2(texcoord.x,texcoord.y-1.0)*tilingOffset.xy+vec2(tilingOffset.z,-tilingOffset.w);\x0d\x0a\x09transTexcoord.y+=1.0;\x0d\x0a\x09return\x20transTexcoord;\x0d\x0a}\x0d\x0a\x0d\x0avec4\x20remapGLPositionZ(vec4\x20position)\x20{\x0d\x0a\x09position.z=position.z\x20*\x202.0\x20-\x20position.w;\x0d\x0a\x09return\x20position;\x0d\x0a}\x0d\x0a\x0d\x0a#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)\x0d\x0a\x20\x20precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x20\x20precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\x0d\x0a\x09attribute\x20vec4\x20a_CornerTextureCoordinate;\x0d\x0a#endif\x0d\x0a#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09attribute\x20vec3\x20a_MeshPosition;\x0d\x0a\x09attribute\x20vec4\x20a_MeshColor;\x0d\x0a\x09attribute\x20vec2\x20a_MeshTextureCoordinate;\x0d\x0a\x09varying\x20vec4\x20v_MeshColor;\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_ShapePositionStartLifeTime;\x0d\x0aattribute\x20vec4\x20a_DirectionTime;\x0d\x0aattribute\x20vec4\x20a_StartColor;\x0d\x0aattribute\x20vec3\x20a_StartSize;\x0d\x0aattribute\x20vec3\x20a_StartRotation0;\x0d\x0aattribute\x20float\x20a_StartSpeed;\x0d\x0a#if\x20defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20attribute\x20vec4\x20a_Random0;\x0d\x0a#endif\x0d\x0a#if\x20defined(TEXTURESHEETANIMATIONRANDOMCURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x20\x20attribute\x20vec4\x20a_Random1;\x0d\x0a#endif\x0d\x0aattribute\x20vec3\x20a_SimulationWorldPostion;\x0d\x0aattribute\x20vec4\x20a_SimulationWorldRotation;\x0d\x0a\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a#ifdef\x20DIFFUSEMAP\x0d\x0a\x09varying\x20vec2\x20v_TextureCoordinate;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20float\x20u_CurrentTime;\x0d\x0auniform\x20vec3\x20u_Gravity;\x0d\x0a\x0d\x0auniform\x20vec3\x20u_WorldPosition;\x0d\x0auniform\x20vec4\x20u_WorldRotation;\x0d\x0auniform\x20bool\x20u_ThreeDStartRotation;\x0d\x0auniform\x20int\x20u_ScalingMode;\x0d\x0auniform\x20vec3\x20u_PositionScale;\x0d\x0auniform\x20vec3\x20u_SizeScale;\x0d\x0auniform\x20mat4\x20u_View;\x0d\x0auniform\x20mat4\x20u_Projection;\x0d\x0a\x0d\x0a#ifdef\x20STRETCHEDBILLBOARD\x0d\x0a\x09uniform\x20vec3\x20u_CameraPos;\x0d\x0a#endif\x0d\x0auniform\x20vec3\x20u_CameraDirection;//TODO:只有几种广告牌模式需要用\x0d\x0auniform\x20vec3\x20u_CameraUp;\x0d\x0a\x0d\x0auniform\x20\x20float\x20u_StretchedBillboardLengthScale;\x0d\x0auniform\x20\x20float\x20u_StretchedBillboardSpeedScale;\x0d\x0auniform\x20int\x20u_SimulationSpace;\x0d\x0a\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x20\x20uniform\x20\x20int\x20\x20u_VOLSpaceType;\x0d\x0a#endif\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\x0d\x0a\x20\x20uniform\x20\x20vec3\x20u_VOLVelocityConst;\x0d\x0a#endif\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientX[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientY[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientZ[4];//x为key,y为速度\x0d\x0a#endif\x0d\x0a#ifdef\x20VELOCITYOVERLIFETIMERANDOMCONSTANT\x0d\x0a\x20\x20uniform\x20\x20vec3\x20u_VOLVelocityConstMax;\x0d\x0a#endif\x0d\x0a#ifdef\x20VELOCITYOVERLIFETIMERANDOMCURVE\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientMaxX[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientMaxY[4];//x为key,y为速度\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_VOLVelocityGradientMaxZ[4];//x为key,y为速度\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20COLOROVERLIFETIME\x0d\x0a\x20\x20uniform\x20\x20vec4\x20u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\x0d\x0a#endif\x0d\x0a#ifdef\x20RANDOMCOLOROVERLIFETIME\x0d\x0a\x20\x20uniform\x20\x20vec4\x20u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\x0d\x0a\x20\x20uniform\x20\x20vec4\x20u_MaxColorOverLifeGradientColors[4];//x为key,yzw为Color\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_MaxColorOverLifeGradientAlphas[4];//x为key,y为Alpha\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradient[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a#ifdef\x20SIZEOVERLIFETIMERANDOMCURVES\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMax[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a#if\x20defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientX[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientY[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientZ[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a#ifdef\x20SIZEOVERLIFETIMERANDOMCURVESSEPERATE\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMaxX[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMaxY[4];//x为key,y为尺寸\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_SOLSizeGradientMaxZ[4];//x为key,y为尺寸\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20float\x20u_ROLAngularVelocityConst;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x20\x20\x20\x20uniform\x20\x20float\x20u_ROLAngularVelocityConstMax;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradient[4];//x为key,y为旋转\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMax[4];//x为key,y为旋转\x0d\x0a\x20\x20#endif\x0d\x0a#endif\x0d\x0a#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec3\x20u_ROLAngularVelocityConstSeprarate;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec3\x20u_ROLAngularVelocityConstMaxSeprarate;\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#if\x20defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientX[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientY[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientZ[4];\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxX[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxY[4];\x0d\x0a\x20\x20\x20\x20uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxZ[4];\x0d\x0a\x09uniform\x20\x20vec2\x20u_ROLAngularVelocityGradientMaxW[4];\x0d\x0a\x20\x20#endif\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\x0d\x0a\x20\x20uniform\x20\x20float\x20u_TSACycles;\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_TSASubUVLength;\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_TSAGradientUVs[4];//x为key,y为frame\x0d\x0a#endif\x0d\x0a#ifdef\x20TEXTURESHEETANIMATIONRANDOMCURVE\x0d\x0a\x20\x20uniform\x20\x20vec2\x20u_TSAMaxGradientUVs[4];//x为key,y为frame\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0avec3\x20rotationByEuler(in\x20vec3\x20vector,in\x20vec3\x20rot)\x0d\x0a{\x0d\x0a\x09float\x20halfRoll\x20=\x20rot.z\x20*\x200.5;\x0d\x0a\x20\x20\x20\x20float\x20halfPitch\x20=\x20rot.x\x20*\x200.5;\x0d\x0a\x09float\x20halfYaw\x20=\x20rot.y\x20*\x200.5;\x0d\x0a\x0d\x0a\x09float\x20sinRoll\x20=\x20sin(halfRoll);\x0d\x0a\x09float\x20cosRoll\x20=\x20cos(halfRoll);\x0d\x0a\x09float\x20sinPitch\x20=\x20sin(halfPitch);\x0d\x0a\x09float\x20cosPitch\x20=\x20cos(halfPitch);\x0d\x0a\x09float\x20sinYaw\x20=\x20sin(halfYaw);\x0d\x0a\x09float\x20cosYaw\x20=\x20cos(halfYaw);\x0d\x0a\x0d\x0a\x09float\x20quaX\x20=\x20(cosYaw\x20*\x20sinPitch\x20*\x20cosRoll)\x20+\x20(sinYaw\x20*\x20cosPitch\x20*\x20sinRoll);\x0d\x0a\x09float\x20quaY\x20=\x20(sinYaw\x20*\x20cosPitch\x20*\x20cosRoll)\x20-\x20(cosYaw\x20*\x20sinPitch\x20*\x20sinRoll);\x0d\x0a\x09float\x20quaZ\x20=\x20(cosYaw\x20*\x20cosPitch\x20*\x20sinRoll)\x20-\x20(sinYaw\x20*\x20sinPitch\x20*\x20cosRoll);\x0d\x0a\x09float\x20quaW\x20=\x20(cosYaw\x20*\x20cosPitch\x20*\x20cosRoll)\x20+\x20(sinYaw\x20*\x20sinPitch\x20*\x20sinRoll);\x0d\x0a\x09\x0d\x0a\x09//vec4\x20q=vec4(quaX,quaY,quaZ,quaW);\x0d\x0a\x09//vec3\x20temp\x20=\x20cross(q.xyz,\x20vector)\x20+\x20q.w\x20*\x20vector;\x0d\x0a\x09//return\x20(cross(temp,\x20-q.xyz)\x20+\x20dot(q.xyz,vector)\x20*\x20q.xyz\x20+\x20q.w\x20*\x20temp);\x0d\x0a\x09\x0d\x0a\x09float\x20x\x20=\x20quaX\x20+\x20quaX;\x0d\x0a\x20\x20\x20\x20float\x20y\x20=\x20quaY\x20+\x20quaY;\x0d\x0a\x20\x20\x20\x20float\x20z\x20=\x20quaZ\x20+\x20quaZ;\x0d\x0a\x20\x20\x20\x20float\x20wx\x20=\x20quaW\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20wy\x20=\x20quaW\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20wz\x20=\x20quaW\x20*\x20z;\x0d\x0a\x09float\x20xx\x20=\x20quaX\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20xy\x20=\x20quaX\x20*\x20y;\x0d\x0a\x09float\x20xz\x20=\x20quaX\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20yy\x20=\x20quaY\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20yz\x20=\x20quaY\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20zz\x20=\x20quaZ\x20*\x20z;\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20vec3(((vector.x\x20*\x20((1.0\x20-\x20yy)\x20-\x20zz))\x20+\x20(vector.y\x20*\x20(xy\x20-\x20wz)))\x20+\x20(vector.z\x20*\x20(xz\x20+\x20wy)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xy\x20+\x20wz))\x20+\x20(vector.y\x20*\x20((1.0\x20-\x20xx)\x20-\x20zz)))\x20+\x20(vector.z\x20*\x20(yz\x20-\x20wx)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xz\x20-\x20wy))\x20+\x20(vector.y\x20*\x20(yz\x20+\x20wx)))\x20+\x20(vector.z\x20*\x20((1.0\x20-\x20xx)\x20-\x20yy)));\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0a//假定axis已经归一化\x0d\x0avec3\x20rotationByAxis(in\x20vec3\x20vector,in\x20vec3\x20axis,\x20in\x20float\x20angle)\x0d\x0a{\x0d\x0a\x09float\x20halfAngle\x20=\x20angle\x20*\x200.5;\x0d\x0a\x09float\x20sin\x20=\x20sin(halfAngle);\x0d\x0a\x09\x0d\x0a\x09float\x20quaX\x20=\x20axis.x\x20*\x20sin;\x0d\x0a\x09float\x20quaY\x20=\x20axis.y\x20*\x20sin;\x0d\x0a\x09float\x20quaZ\x20=\x20axis.z\x20*\x20sin;\x0d\x0a\x09float\x20quaW\x20=\x20cos(halfAngle);\x0d\x0a\x09\x0d\x0a\x09//vec4\x20q=vec4(quaX,quaY,quaZ,quaW);\x0d\x0a\x09//vec3\x20temp\x20=\x20cross(q.xyz,\x20vector)\x20+\x20q.w\x20*\x20vector;\x0d\x0a\x09//return\x20(cross(temp,\x20-q.xyz)\x20+\x20dot(q.xyz,vector)\x20*\x20q.xyz\x20+\x20q.w\x20*\x20temp);\x0d\x0a\x09\x0d\x0a\x09float\x20x\x20=\x20quaX\x20+\x20quaX;\x0d\x0a\x20\x20\x20\x20float\x20y\x20=\x20quaY\x20+\x20quaY;\x0d\x0a\x20\x20\x20\x20float\x20z\x20=\x20quaZ\x20+\x20quaZ;\x0d\x0a\x20\x20\x20\x20float\x20wx\x20=\x20quaW\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20wy\x20=\x20quaW\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20wz\x20=\x20quaW\x20*\x20z;\x0d\x0a\x09float\x20xx\x20=\x20quaX\x20*\x20x;\x0d\x0a\x20\x20\x20\x20float\x20xy\x20=\x20quaX\x20*\x20y;\x0d\x0a\x09float\x20xz\x20=\x20quaX\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20yy\x20=\x20quaY\x20*\x20y;\x0d\x0a\x20\x20\x20\x20float\x20yz\x20=\x20quaY\x20*\x20z;\x0d\x0a\x20\x20\x20\x20float\x20zz\x20=\x20quaZ\x20*\x20z;\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20vec3(((vector.x\x20*\x20((1.0\x20-\x20yy)\x20-\x20zz))\x20+\x20(vector.y\x20*\x20(xy\x20-\x20wz)))\x20+\x20(vector.z\x20*\x20(xz\x20+\x20wy)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xy\x20+\x20wz))\x20+\x20(vector.y\x20*\x20((1.0\x20-\x20xx)\x20-\x20zz)))\x20+\x20(vector.z\x20*\x20(yz\x20-\x20wx)),\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20((vector.x\x20*\x20(xz\x20-\x20wy))\x20+\x20(vector.y\x20*\x20(yz\x20+\x20wx)))\x20+\x20(vector.z\x20*\x20((1.0\x20-\x20xx)\x20-\x20yy)));\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20rotationByQuaternions(in\x20vec3\x20v,in\x20vec4\x20q)\x20\x0d\x0a{\x0d\x0a\x09return\x20v\x20+\x202.0\x20*\x20cross(q.xyz,\x20cross(q.xyz,\x20v)\x20+\x20q.w\x20*\x20v);\x0d\x0a}\x0d\x0a\x0d\x0a\x20\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\x0d\x0afloat\x20getCurValueFromGradientFloat(in\x20vec2\x20gradientNumbers[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09float\x20curValue;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientNumber=gradientNumbers[i];\x0d\x0a\x09\x09float\x20key=gradientNumber.x;\x0d\x0a\x09\x09if(key>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec2\x20lastGradientNumber=gradientNumbers[i-1];\x0d\x0a\x09\x09\x09float\x20lastKey=lastGradientNumber.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastKey)/(key-lastKey);\x0d\x0a\x09\x09\x09curValue=mix(lastGradientNumber.y,gradientNumber.y,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20curValue;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\x0d\x0afloat\x20getTotalValueFromGradientFloat(in\x20vec2\x20gradientNumbers[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09float\x20totalValue=0.0;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientNumber=gradientNumbers[i];\x0d\x0a\x09\x09float\x20key=gradientNumber.x;\x0d\x0a\x09\x09vec2\x20lastGradientNumber=gradientNumbers[i-1];\x0d\x0a\x09\x09float\x20lastValue=lastGradientNumber.y;\x0d\x0a\x09\x09\x0d\x0a\x09\x09if(key>=normalizedAge){\x0d\x0a\x09\x09\x09float\x20lastKey=lastGradientNumber.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastKey)/(key-lastKey);\x0d\x0a\x09\x09\x09totalValue+=(lastValue+mix(lastValue,gradientNumber.y,age))/2.0*a_ShapePositionStartLifeTime.w*(normalizedAge-lastKey);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09\x09else{\x0d\x0a\x09\x09\x09totalValue+=(lastValue+gradientNumber.y)/2.0*a_ShapePositionStartLifeTime.w*(key-lastGradientNumber.x);\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20totalValue;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)\x0d\x0avec4\x20getColorFromGradient(in\x20vec2\x20gradientAlphas[4],in\x20vec4\x20gradientColors[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09vec4\x20overTimeColor;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientAlpha=gradientAlphas[i];\x0d\x0a\x09\x09float\x20alphaKey=gradientAlpha.x;\x0d\x0a\x09\x09if(alphaKey>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec2\x20lastGradientAlpha=gradientAlphas[i-1];\x0d\x0a\x09\x09\x09float\x20lastAlphaKey=lastGradientAlpha.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastAlphaKey)/(alphaKey-lastAlphaKey);\x0d\x0a\x09\x09\x09overTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec4\x20gradientColor=gradientColors[i];\x0d\x0a\x09\x09float\x20colorKey=gradientColor.x;\x0d\x0a\x09\x09if(colorKey>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec4\x20lastGradientColor=gradientColors[i-1];\x0d\x0a\x09\x09\x09float\x20lastColorKey=lastGradientColor.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastColorKey)/(colorKey-lastColorKey);\x0d\x0a\x09\x09\x09overTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20overTimeColor;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\x0d\x0afloat\x20getFrameFromGradient(in\x20vec2\x20gradientFrames[4],in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09float\x20overTimeFrame;\x0d\x0a\x09for(int\x20i=1;i<4;i++)\x0d\x0a\x09{\x0d\x0a\x09\x09vec2\x20gradientFrame=gradientFrames[i];\x0d\x0a\x09\x09float\x20key=gradientFrame.x;\x0d\x0a\x09\x09if(key>=normalizedAge)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09vec2\x20lastGradientFrame=gradientFrames[i-1];\x0d\x0a\x09\x09\x09float\x20lastKey=lastGradientFrame.x;\x0d\x0a\x09\x09\x09float\x20age=(normalizedAge-lastKey)/(key-lastKey);\x0d\x0a\x09\x09\x09overTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\x0d\x0a\x09\x09\x09break;\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20floor(overTimeFrame);\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0avec3\x20computeParticleLifeVelocity(in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x20\x20vec3\x20outLifeVelocity;\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMECONSTANT\x0d\x0a\x09\x20outLifeVelocity=u_VOLVelocityConst;\x20\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMECURVE\x0d\x0a\x20\x20\x20\x20\x20outLifeVelocity=\x20vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMERANDOMCONSTANT\x0d\x0a\x09\x20outLifeVelocity=mix(u_VOLVelocityConst,u_VOLVelocityConstMax,vec3(a_Random1.y,a_Random1.z,a_Random1.w));\x20\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20#ifdef\x20VELOCITYOVERLIFETIMERANDOMCURVE\x0d\x0a\x20\x20\x20\x20\x20outLifeVelocity=vec3(mix(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y),\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20mix(getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z),\x0d\x0a\x09\x09\x09\x09\x09\x20mix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\x0d\x0a\x20\x20#endif\x0d\x0a\x09\x09\x09\x09\x09\x0d\x0a\x20\x20return\x20outLifeVelocity;\x0d\x0a}\x20\x0d\x0a#endif\x0d\x0a\x0d\x0avec3\x20computeParticlePosition(in\x20vec3\x20startVelocity,\x20in\x20vec3\x20lifeVelocity,in\x20float\x20age,in\x20float\x20normalizedAge,vec3\x20gravityVelocity,vec4\x20worldRotation)\x0d\x0a{\x0d\x0a\x20\x20\x20vec3\x20startPosition;\x0d\x0a\x20\x20\x20vec3\x20lifePosition;\x0d\x0a\x20\x20\x20#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=lifeVelocity*age;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMECURVE\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMERANDOMCONSTANT\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=lifeVelocity*age;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20VELOCITYOVERLIFETIMERANDOMCURVE\x0d\x0a\x09\x09\x20\x20startPosition=startVelocity*age;\x0d\x0a\x09\x09\x20\x20lifePosition=vec3(mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09vec3\x20finalPosition;\x0d\x0a\x09if(u_VOLSpaceType==0){\x0d\x0a\x09\x20\x20if(u_ScalingMode!=2)\x0d\x0a\x09\x20\x20\x20finalPosition\x20=rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition),worldRotation);\x0d\x0a\x09\x20\x20else\x0d\x0a\x09\x20\x20\x20finalPosition\x20=rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition,worldRotation);\x0d\x0a\x09}\x0d\x0a\x09else{\x0d\x0a\x09\x20\x20if(u_ScalingMode!=2)\x0d\x0a\x09\x20\x20\x20\x20finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation)+lifePosition;\x0d\x0a\x09\x20\x20else\x0d\x0a\x09\x20\x20\x20\x20finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation)+lifePosition;\x0d\x0a\x09}\x0d\x0a\x20\x20#else\x0d\x0a\x09\x20startPosition=startVelocity*age;\x0d\x0a\x09\x20vec3\x20finalPosition;\x0d\x0a\x09\x20if(u_ScalingMode!=2)\x0d\x0a\x09\x09\x09finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation);\x0d\x0a\x09\x20else\x0d\x0a\x09\x20\x20\x20\x09finalPosition\x20=\x20rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation);\x0d\x0a\x20\x20#endif\x0d\x0a\x20\x20\x0d\x0a\x20\x20if(u_SimulationSpace==0)\x0d\x0a\x20\x20\x20\x20finalPosition=finalPosition+a_SimulationWorldPostion;\x0d\x0a\x20\x20else\x20if(u_SimulationSpace==1)\x20\x0d\x0a\x20\x20\x20\x20finalPosition=finalPosition+u_WorldPosition;\x0d\x0a\x20\x20\x0d\x0a\x20\x20finalPosition+=0.5*gravityVelocity*age;\x0d\x0a\x20\x0d\x0a\x20\x20return\x20\x20finalPosition;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avec4\x20computeParticleColor(in\x20vec4\x20color,in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09#ifdef\x20COLOROVERLIFETIME\x0d\x0a\x09\x20\x20color*=getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge);\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20RANDOMCOLOROVERLIFETIME\x0d\x0a\x09\x20\x20color*=mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge),getColorFromGradient(u_MaxColorOverLifeGradientAlphas,u_MaxColorOverLifeGradientColors,normalizedAge),a_Random0.y);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x20\x20\x20\x20return\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avec2\x20computeParticleSizeBillbard(in\x20vec2\x20size,in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVE\x0d\x0a\x09\x09size*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x20\x20\x20\x20size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z);\x20\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVESEPERATE\x0d\x0a\x09\x09size*=vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge));\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVESSEPERATE\x0d\x0a\x09\x20\x20\x20\x20size*=vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\x0d\x0a\x09\x20\x20\x20\x20,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z));\x0d\x0a\x09#endif\x0d\x0a\x09return\x20size;\x0d\x0a}\x0d\x0a\x0d\x0a#ifdef\x20RENDERMODE_MESH\x0d\x0avec3\x20computeParticleSizeMesh(in\x20vec3\x20size,in\x20float\x20normalizedAge)\x0d\x0a{\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVE\x0d\x0a\x09\x09size*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x20\x20\x20\x20size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z);\x20\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMECURVESEPERATE\x0d\x0a\x09\x09size*=vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge));\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20SIZEOVERLIFETIMERANDOMCURVESSEPERATE\x0d\x0a\x09\x20\x20\x20\x20size*=vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\x0d\x0a\x09\x20\x20\x20\x20,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z)\x0d\x0a\x09\x09,mix(getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ,normalizedAge),a_Random0.z));\x0d\x0a\x09#endif\x0d\x0a\x09return\x20size;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0afloat\x20computeParticleRotationFloat(in\x20float\x20rotation,in\x20float\x20age,in\x20float\x20normalizedAge)\x0d\x0a{\x20\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09float\x20ageRot=u_ROLAngularVelocityConst*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09float\x20ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09float\x20ageRot=u_ROLAngularVelocityConstSeprarate.z*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09float\x20ageRot=mix(u_ROLAngularVelocityConstSeprarate.z,u_ROLAngularVelocityConstMaxSeprarate.z,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09return\x20rotation;\x0d\x0a}\x0d\x0a\x0d\x0a#if\x20defined(RENDERMODE_MESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE))\x0d\x0avec3\x20computeParticleRotationVec3(in\x20vec3\x20rotation,in\x20float\x20age,in\x20float\x20normalizedAge)\x0d\x0a{\x20\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09float\x20ageRot=u_ROLAngularVelocityConst*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09float\x20ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECONSTANT\x0d\x0a\x09\x09\x09vec3\x20ageRot=u_ROLAngularVelocityConstSeprarate*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMECURVE\x0d\x0a\x09\x09\x09rotation+=vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge));\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCONSTANTS\x0d\x0a\x09\x09\x09vec3\x20ageRot=mix(u_ROLAngularVelocityConstSeprarate,u_ROLAngularVelocityConstMaxSeprarate,a_Random0.w)*age;\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20rotation+=ageRot;\x0d\x0a\x09\x20\x20\x20\x20#endif\x0d\x0a\x09\x09#ifdef\x20ROTATIONOVERLIFETIMERANDOMCURVES\x0d\x0a\x09\x09\x09rotation+=vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,normalizedAge),a_Random0.w)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,normalizedAge),a_Random0.w)\x0d\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09return\x20rotation;\x0d\x0a}\x0d\x0a#endif\x0d\x0a\x0d\x0avec2\x20computeParticleUV(in\x20vec2\x20uv,in\x20float\x20normalizedAge)\x0d\x0a{\x20\x0d\x0a\x09#ifdef\x20TEXTURESHEETANIMATIONCURVE\x0d\x0a\x09\x09float\x20cycleNormalizedAge=normalizedAge*u_TSACycles;\x0d\x0a\x09\x09float\x20frame=getFrameFromGradient(u_TSAGradientUVs,cycleNormalizedAge-floor(cycleNormalizedAge));\x0d\x0a\x09\x09float\x20totalULength=frame*u_TSASubUVLength.x;\x0d\x0a\x09\x09float\x20floorTotalULength=floor(totalULength);\x0d\x0a\x09\x20\x20\x20\x20uv.x+=totalULength-floorTotalULength;\x0d\x0a\x09\x09uv.y+=floorTotalULength*u_TSASubUVLength.y;\x0d\x0a\x20\x20\x20\x20#endif\x0d\x0a\x09#ifdef\x20TEXTURESHEETANIMATIONRANDOMCURVE\x0d\x0a\x09\x09float\x20cycleNormalizedAge=normalizedAge*u_TSACycles;\x0d\x0a\x09\x09float\x20uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\x0d\x0a\x09\x20\x20\x20\x20float\x20frame=floor(mix(getFrameFromGradient(u_TSAGradientUVs,uvNormalizedAge),getFrameFromGradient(u_TSAMaxGradientUVs,uvNormalizedAge),a_Random1.x));\x0d\x0a\x09\x09float\x20totalULength=frame*u_TSASubUVLength.x;\x0d\x0a\x09\x09float\x20floorTotalULength=floor(totalULength);\x0d\x0a\x09\x20\x20\x20\x20uv.x+=totalULength-floorTotalULength;\x0d\x0a\x09\x09uv.y+=floorTotalULength*u_TSASubUVLength.y;\x0d\x0a\x20\x20\x20\x20#endif\x0d\x0a\x09return\x20uv;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09float\x20age\x20=\x20u_CurrentTime\x20-\x20a_DirectionTime.w;\x0d\x0a\x09float\x20normalizedAge\x20=\x20age/a_ShapePositionStartLifeTime.w;\x0d\x0a\x09vec3\x20lifeVelocity;\x0d\x0a\x09if(normalizedAge<1.0)\x0d\x0a\x09{\x20\x0d\x0a\x09\x09vec3\x20startVelocity=a_DirectionTime.xyz*a_StartSpeed;\x0d\x0a\x09\x09#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x09\x09\x09lifeVelocity=\x20computeParticleLifeVelocity(normalizedAge);//计算粒子生命周期速度\x0d\x0a\x09\x09#endif\x20\x0d\x0a\x09\x09vec3\x20gravityVelocity=u_Gravity*age;\x0d\x0a\x09\x09\x0d\x0a\x09\x09vec4\x20worldRotation;\x0d\x0a\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09worldRotation=a_SimulationWorldRotation;\x0d\x0a\x09\x09else\x0d\x0a\x09\x09\x09worldRotation=u_WorldRotation;\x0d\x0a\x09\x09\x0d\x0a\x09\x09vec3\x20center=computeParticlePosition(startVelocity,\x20lifeVelocity,\x20age,\x20normalizedAge,gravityVelocity,worldRotation);//计算粒子位置\x0d\x0a\x09\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20SPHERHBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09vec3\x20cameraUpVector\x20=normalize(u_CameraUp);//TODO:是否外面归一化\x0d\x0a\x09\x09\x09vec3\x20sideVector\x20=\x20normalize(cross(u_CameraDirection,cameraUpVector));\x0d\x0a\x09\x09\x09vec3\x20upVector\x20=\x20normalize(cross(sideVector,u_CameraDirection));\x0d\x0a\x09\x09\x09corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09#if\x20defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09vec3\x20rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,age,normalizedAge));\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,rotation);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09float\x20rot\x20=\x20computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09\x09\x09float\x20c\x20=\x20cos(rot);\x0d\x0a\x09\x09\x09\x09\x09float\x20s\x20=\x20sin(rot);\x0d\x0a\x09\x09\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09\x09\x09corner=rotation*corner;\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,a_StartRotation0);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09float\x20c\x20=\x20cos(a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09float\x20s\x20=\x20sin(a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09\x09\x09corner=rotation*corner;\x0d\x0a\x09\x09\x09\x09\x09center\x20+=\x20u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20STRETCHEDBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09vec3\x20velocity;\x0d\x0a\x09\x09\x09#if\x20defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\x0d\x0a\x09\x09\x09\x09if(u_VOLSpaceType==0)\x0d\x0a\x09\x09\x09\x09velocity=rotationByQuaternions(u_SizeScale*(startVelocity+lifeVelocity),worldRotation)+gravityVelocity;\x0d\x0a\x09\x09\x09\x09else\x0d\x0a\x09\x09\x09\x09velocity=rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+lifeVelocity+gravityVelocity;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09velocity=\x20rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+gravityVelocity;\x0d\x0a\x09\x09\x09#endif\x09\x0d\x0a\x09\x09\x09vec3\x20cameraUpVector\x20=\x20normalize(velocity);\x0d\x0a\x09\x09\x09vec3\x20direction\x20=\x20normalize(center-u_CameraPos);\x0d\x0a\x09\x09\x09vec3\x20sideVector\x20=\x20normalize(cross(direction,normalize(velocity)));\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09sideVector=u_SizeScale.xzy*sideVector;\x0d\x0a\x09\x09\x09cameraUpVector=length(vec3(u_SizeScale.x,0.0,0.0))*cameraUpVector;\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09vec2\x20size=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09const\x20mat2\x20rotaionZHalfPI=mat2(0.0,\x20-1.0,\x201.0,\x200.0);\x0d\x0a\x09\x09\x09corner=rotaionZHalfPI*corner;\x0d\x0a\x09\x09\x09corner.y=corner.y-abs(corner.y);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09float\x20speed=length(velocity);//TODO:\x0d\x0a\x09\x09\x09center\x20+=sign(u_SizeScale.x)*(sign(u_StretchedBillboardLengthScale)*size.x*corner.x*sideVector+(speed*u_StretchedBillboardSpeedScale+size.y*u_StretchedBillboardLengthScale)*corner.y*cameraUpVector);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20HORIZONTALBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09const\x20vec3\x20cameraUpVector=vec3(0.0,0.0,1.0);\x0d\x0a\x09\x09\x09const\x20vec3\x20sideVector\x20=\x20vec3(-1.0,0.0,0.0);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09float\x20rot\x20=\x20computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09float\x20c\x20=\x20cos(rot);\x0d\x0a\x09\x09\x09float\x20s\x20=\x20sin(rot);\x0d\x0a\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\x0d\x0a\x09\x09\x09corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09center\x20+=u_SizeScale.xzy*(corner.x*sideVector+\x20corner.y*cameraUpVector);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20VERTICALBILLBOARD\x0d\x0a\x09\x09\x09vec2\x20corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\x0d\x0a\x09\x09\x09const\x20vec3\x20cameraUpVector\x20=vec3(0.0,1.0,0.0);\x0d\x0a\x09\x09\x09vec3\x20sideVector\x20=\x20normalize(cross(u_CameraDirection,cameraUpVector));\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09float\x20rot\x20=\x20computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09float\x20c\x20=\x20cos(rot);\x0d\x0a\x09\x09\x09float\x20s\x20=\x20sin(rot);\x0d\x0a\x09\x09\x09mat2\x20rotation=\x20mat2(c,\x20-s,\x20s,\x20c);\x0d\x0a\x09\x09\x09corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\x0d\x0a\x09\x09\x09corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\x0d\x0a\x09\x09\x09center\x20+=u_SizeScale.xzy*(corner.x*sideVector+\x20corner.y*cameraUpVector);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09\x09\x09vec3\x20size=computeParticleSizeMesh(a_StartSize,normalizedAge);\x0d\x0a\x09\x09\x09#if\x20defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09vec3\x20rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,\x20age,normalizedAge));\x0d\x0a\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,rotation),worldRotation);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09#ifdef\x20ROTATIONOVERLIFETIME\x0d\x0a\x09\x09\x09\x09\x09\x09float\x20angle=computeParticleRotationFloat(a_StartRotation0.x,\x20age,normalizedAge);\x0d\x0a\x09\x09\x09\x09\x09\x09if(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\x0d\x0a\x09\x09\x09\x09\x09\x09\x09center+=\x20(rotationByQuaternions(rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),angle),worldRotation));//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#ifdef\x20SHAPE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20u_SizeScale.xzy*(rotationByQuaternions(rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09center+=rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle);//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09center+=rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle),worldRotation);//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09#ifdef\x20ROTATIONOVERLIFETIMESEPERATE\x0d\x0a\x09\x09\x09\x09\x09\x09//TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\x0d\x0a\x09\x09\x09\x09\x09\x09vec3\x20angle=computeParticleRotationVec3(vec3(0.0,0.0,-a_StartRotation0.x),\x20age,normalizedAge);\x0d\x0a\x09\x09\x09\x09\x09\x09center+=\x20(rotationByQuaternions(rotationByEuler(u_SizeScale*a_MeshPosition*size,vec3(angle.x,angle.y,angle.z)),worldRotation));//已验证\x0d\x0a\x09\x09\x09\x09\x09#endif\x09\x09\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09if(u_ThreeDStartRotation){\x0d\x0a\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,a_StartRotation0),worldRotation);//已验证\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09if(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\x0d\x0a\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09center+=\x20(rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x),worldRotation));//已验证\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09else{\x0d\x0a\x09\x09\x09\x09\x09\x09#ifdef\x20SHAPE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x),worldRotation);\x09\x0d\x0a\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09if(u_SimulationSpace==0)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x);\x0d\x0a\x09\x09\x09\x09\x09\x09\x09else\x20if(u_SimulationSpace==1)\x0d\x0a\x09\x09\x09\x09\x09\x09\x09\x09center+=\x20rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x),worldRotation);//已验证\x0d\x0a\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09v_MeshColor=a_MeshColor;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09gl_Position=u_Projection*u_View*vec4(center,1.0);\x0d\x0a\x09\x09v_Color\x20=\x20computeParticleColor(a_StartColor,\x20normalizedAge);\x0d\x0a\x09\x09#ifdef\x20DIFFUSEMAP\x0d\x0a\x09\x09\x09#if\x20defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\x0d\x0a\x09\x09\x09\x09v_TextureCoordinate\x20=computeParticleUV(a_CornerTextureCoordinate.zw,\x20normalizedAge);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20RENDERMODE_MESH\x0d\x0a\x09\x09\x09\x09v_TextureCoordinate\x20=computeParticleUV(a_MeshTextureCoordinate,\x20normalizedAge);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09v_TextureCoordinate=TransformUV(v_TextureCoordinate,u_TilingOffset);\x0d\x0a\x09\x09#endif\x0d\x0a\x20\x20\x20\x09}\x0d\x0a\x20\x20\x20\x09else\x0d\x0a\x09{\x0d\x0a\x09\x09gl_Position=vec4(2.0,2.0,2.0,1.0);//Discard\x20use\x20out\x20of\x20X(-1,1),Y(-1,1),Z(0,1)\x0d\x0a\x09}\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '//\x20allow\x20to\x20explicitly\x20override\x20LAYA_BRDF_GI\x20and\x20LAYA_BRDF_LIGHT\x20in\x20custom\x20shader,default\x20is\x20layaBRDFHighGI\x20and\x20layaBRDFHighLight\x0a#if\x20!defined\x20(LAYA_BRDF_GI)\x20\x0a\x09#if\x20defined(LAYA_PBR_BRDF_LOW)\x0a\x09\x09#define\x20LAYA_BRDF_GI\x20layaBRDFLowGI\x0a\x09#elif\x20defined(LAYA_PBR_BRDF_HIGH)\x0a\x09\x09#define\x20LAYA_BRDF_GI\x20layaBRDFHighGI\x0a\x09#endif\x0a#endif\x0a#if\x20!defined\x20(LAYA_BRDF_LIGHT)\x0a\x09#if\x20defined(LAYA_PBR_BRDF_LOW)\x0a\x09\x09#define\x20LAYA_BRDF_LIGHT\x20layaBRDFLowLight\x0a\x09#elif\x20defined(LAYA_PBR_BRDF_HIGH)\x0a\x09\x09#define\x20LAYA_BRDF_LIGHT\x20layaBRDFHighLight\x0a\x09#endif\x0a#endif\x0a\x0a#define\x20PI\x203.14159265359\x0a#define\x20INV_PI\x200.31830988618\x0a\x0amediump\x20float\x20pow4(mediump\x20float\x20x)\x0a{\x0a\x09return\x20x\x20*\x20x\x20*\x20x\x20*\x20x;\x0a}\x0a\x0amediump\x20float\x20pow5(mediump\x20float\x20x)\x0a{\x0a\x09return\x20x\x20*\x20x\x20*\x20x\x20*\x20x\x20*\x20x;\x0a}\x0a\x0amediump\x20vec3\x20fresnelLerp(mediump\x20vec3\x20F0,mediump\x20vec3\x20F90,mediump\x20float\x20cosA)\x0a{\x0a\x09float\x20t\x20=\x20pow5(1.0\x20-\x20cosA);\x20\x20\x20//\x20ala\x20Schlick\x20interpoliation\x0a\x09return\x20mix(F0,\x20F90,\x20t);\x0a}\x0a\x0amediump\x20vec3\x20fresnelTerm(mediump\x20vec3\x20F0,mediump\x20float\x20cosA)\x0a{\x0a\x09float\x20t\x20=\x20pow5(1.0\x20-\x20cosA);\x20\x20\x20//\x20ala\x20Schlick\x20interpoliation\x0a\x09return\x20F0\x20+\x20(vec3(1.0)\x20-\x20F0)\x20*\x20t;\x0a}\x0a\x0a//\x20approximage\x20Schlick\x20with\x20^4\x20instead\x20of\x20^5\x0amediump\x20vec3\x20fresnelLerpFast\x20(mediump\x20vec3\x20F0,\x20mediump\x20vec3\x20F90,mediump\x20float\x20cosA)\x0a{\x0a\x20\x20\x20\x20mediump\x20float\x20t\x20=\x20pow4\x20(1.0\x20-\x20cosA);\x0a\x20\x20\x20\x20return\x20mix\x20(F0,\x20F90,\x20t);\x0a}\x0a\x0afloat\x20smoothnessToPerceptualRoughness(float\x20smoothness)\x0a{\x0a\x20\x20\x20\x20return\x201.0\x20-\x20smoothness;\x0a}\x0a\x0afloat\x20perceptualRoughnessToRoughness(float\x20perceptualRoughness)\x0a{\x0a\x20\x20\x20\x20return\x20perceptualRoughness\x20*\x20perceptualRoughness;\x0a}\x0a\x0avec3\x20safeNormalize(vec3\x20inVec)\x0a{\x0a\x09float\x20dp3\x20=\x20max(0.001,dot(inVec,inVec));\x0a\x09return\x20inVec\x20*\x20inversesqrt(dp3);\x0a}\x0a\x0a//\x20Note:\x20Disney\x20diffuse\x20must\x20be\x20multiply\x20by\x20diffuseAlbedo\x20/\x20PI.\x20This\x20is\x20done\x20outside\x20of\x20this\x20function.\x0amediump\x20float\x20disneyDiffuse(mediump\x20float\x20NdotV,mediump\x20float\x20NdotL,mediump\x20float\x20LdotH,mediump\x20float\x20perceptualRoughness)\x0a{\x0a\x09//https://www.cnblogs.com/herenzhiming/articles/5790389.html\x0a\x09mediump\x20float\x20fd90\x20=\x200.5\x20+\x202.0\x20*\x20LdotH\x20*\x20LdotH\x20*\x20perceptualRoughness;\x0a\x09//\x20Two\x20schlick\x20fresnel\x20term\x0a\x09mediump\x20float\x20lightScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow5(1.0\x20-\x20NdotL));\x0a\x09mediump\x20float\x20viewScatter\x20=\x20(1.0\x20+\x20(fd90\x20-\x201.0)\x20*\x20pow5(1.0\x20-\x20NdotV));\x0a\x0a\x09return\x20lightScatter\x20*\x20viewScatter;\x0a}\x0a\x0a//\x20Ref:\x20http://jcgt.org/published/0003/02/03/paper.pdf\x0afloat\x20smithJointGGXVisibilityTerm(float\x20NdotL,\x20float\x20NdotV,\x20float\x20roughness)\x0a{\x0a\x09//\x20Original\x20formulation:\x0a\x20\x20\x20\x20//\x20lambda_v\x20\x20\x20\x20=\x20(-1\x20+\x20sqrt(a2\x20*\x20(1\x20-\x20NdotL2)\x20/\x20NdotL2\x20+\x201))\x20*\x200.5f;\x0a\x20\x20\x20\x20//\x20lambda_l\x20\x20\x20\x20=\x20(-1\x20+\x20sqrt(a2\x20*\x20(1\x20-\x20NdotV2)\x20/\x20NdotV2\x20+\x201))\x20*\x200.5f;\x0a\x20\x20\x20\x20//\x20G\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x201\x20/\x20(1\x20+\x20lambda_v\x20+\x20lambda_l);\x0a\x0a\x09//\x20scientific\x20code\x20implement:\x0a\x09//\x20Reorder\x20code\x20to\x20be\x20more\x20optimal\x0a\x20\x20\x20\x20//\x20half\x20a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20roughness;\x0a\x20\x20\x20\x20//\x20half\x20a2\x20\x20\x20\x20\x20\x20\x20\x20\x20=\x20a\x20*\x20a;\x0a\x0a\x20\x20\x20\x20//\x20half\x20lambdaV\x20\x20\x20\x20=\x20NdotL\x20*\x20sqrt((-NdotV\x20*\x20a2\x20+\x20NdotV)\x20*\x20NdotV\x20+\x20a2);\x0a\x20\x20\x20\x20//\x20half\x20lambdaL\x20\x20\x20\x20=\x20NdotV\x20*\x20sqrt((-NdotL\x20*\x20a2\x20+\x20NdotL)\x20*\x20NdotL\x20+\x20a2);\x0a\x0a\x20\x20\x20\x20//\x20Simplify\x20visibility\x20term:\x20(2.0f\x20*\x20NdotL\x20*\x20NdotV)\x20/\x20\x20((4.0f\x20*\x20NdotL\x20*\x20NdotV)\x20*\x20(lambda_v\x20+\x20lambda_l\x20+\x201e-5f));\x0a\x20\x20\x20\x20//\x20return\x200.5f\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x201e-5f);\x20\x20\x0a\x09//\x20This\x20function\x20is\x20not\x20intended\x20to\x20be\x20running\x20on\x20Mobile,therefore\x20epsilon\x20is\x20smaller\x20than\x20can\x20be\x20represented\x20by\x20half\x0a\x0a\x09//\x20Approximation\x20of\x20the\x20above\x20formulation\x20(simplify\x20the\x20sqrt,\x20not\x20mathematically\x20correct\x20but\x20close\x20enough)\x0a\x09float\x20a\x20=\x20roughness;\x0a\x09float\x20lambdaV\x20=\x20NdotL\x20*\x20(NdotV\x20*\x20(1.0\x20-\x20a)\x20+\x20a);\x0a\x09float\x20lambdaL\x20=\x20NdotV\x20*\x20(NdotL\x20*\x20(1.0\x20-\x20a)\x20+\x20a);\x0a\x09return\x200.5\x20/\x20(lambdaV\x20+\x20lambdaL\x20+\x201e-5);\x0a}\x0a\x0afloat\x20ggxTerm(float\x20NdotH,\x20float\x20roughness)\x0a{\x0a\x09float\x20a2\x20=\x20roughness\x20*\x20roughness;\x0a\x09float\x20d\x20=\x20(NdotH\x20*\x20a2\x20-\x20NdotH)\x20*\x20NdotH\x20+\x201.0;\x20//\x202\x20mad\x0a\x09return\x20INV_PI\x20*\x20a2\x20/\x20(d\x20*\x20d\x20+\x201e-7);\x20//\x20This\x20function\x20is\x20not\x20intended\x20to\x20be\x20running\x20on\x20Mobile,therefore\x20epsilon\x20is\x20smaller\x20than\x20what\x20can\x20be\x20represented\x20by\x20half//返回值小用half来返回\x0a}\x0a\x0a//\x20BRDF1-------------------------------------------------------------------------------------\x0a\x0a//\x20Note:\x20BRDF\x20entry\x20points\x20use\x20smoothness\x20and\x20oneMinusReflectivity\x20for\x20optimization\x20purposes,\x0a//\x20mostly\x20for\x20DX9\x20SM2.0\x20level.\x20Most\x20of\x20the\x20math\x20is\x20being\x20done\x20on\x20these\x20(1-x)\x20values,\x20and\x20that\x20saves\x20a\x20few\x20precious\x20ALU\x20slots.\x0a\x0a//\x20Main\x20Physically\x20Based\x20BRDF\x0a//\x20Derived\x20from\x20Disney\x20work\x20and\x20based\x20on\x20Torrance-Sparrow\x20micro-facet\x20model\x0a//\x0a//\x20BRDF\x20=\x20kD\x20/\x20pi\x20+\x20kS\x20*\x20(D\x20*\x20V\x20*\x20F)\x20/\x204\x0a//\x20I\x20=\x20BRDF\x20*\x20NdotL\x0a//\x0a//\x20*NDF\x20GGX:\x0a//\x20*Smith\x20for\x20Visiblity\x20term\x0a//\x20*Schlick\x20approximation\x20for\x20Fresnel\x0amediump\x20vec4\x20layaBRDFHighLight(mediump\x20vec3\x20diffColor,\x20mediump\x20vec3\x20specColor,\x20mediump\x20float\x20oneMinusReflectivity,\x20float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,\x20vec3\x20viewDir,LayaLight\x20light)\x0a{\x0a\x09vec3\x20halfDir\x20=\x20safeNormalize(viewDir-light.dir);\x0a\x0a\x09float\x20nl\x20=\x20clamp(dot(normal,\x20-light.dir),0.0,1.0);\x0a\x09float\x20nh\x20=\x20clamp(dot(normal,\x20halfDir),0.0,1.0);\x0a\x09mediump\x20float\x20lv\x20=\x20clamp(dot(light.dir,\x20viewDir),0.0,1.0);\x0a\x09mediump\x20float\x20lh\x20=\x20clamp(dot(light.dir,\x20-halfDir),0.0,1.0);\x0a\x0a\x09//\x20Diffuse\x20term\x0a\x09mediump\x20float\x20diffuseTerm\x20=\x20disneyDiffuse(nv,\x20nl,\x20lh,\x20perceptualRoughness)\x20*\x20nl;\x0a\x0a\x09//\x20Specular\x20term\x0a\x20\x20\x20\x20//\x20HACK:\x20theoretically\x20we\x20should\x20divide\x20diffuseTerm\x20by\x20Pi\x20and\x20not\x20multiply\x20specularTerm!\x0a\x20\x20\x20\x20//\x20BUT\x20that\x20will\x20make\x20shader\x20look\x20significantly\x20darker\x20than\x20Legacy\x20ones\x0a\x0a\x09//\x20GGX\x20with\x20roughtness\x20to\x200\x20would\x20mean\x20no\x20specular\x20at\x20all,\x20using\x20max(roughness,\x200.002)\x20here\x20to\x20match\x20HDrenderloop\x20roughtness\x20remapping.\x0a\x09roughness\x20=\x20max(roughness,\x200.002);\x0a\x09float\x20V\x20=\x20smithJointGGXVisibilityTerm(nl,\x20nv,\x20roughness);\x0a\x09float\x20D\x20=\x20ggxTerm(nh,\x20roughness);\x0a\x0a\x09float\x20specularTerm\x20=\x20V\x20*\x20D\x20*\x20PI;\x20//\x20Torrance-Sparrow\x20model,\x20Fresnel\x20is\x20applied\x20later\x0a\x0a\x09//#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09specularTerm\x20=\x20sqrt(max(1e-4,\x20specularTerm));\x0a\x09//#endif\x0a\x09specularTerm\x20=\x20max(0.0,\x20specularTerm\x20*\x20nl);\x0a\x09\x09\x0a\x09mediump\x20vec3\x20color\x20=\x20diffColor\x20*\x20light.color\x20*\x20diffuseTerm\x20+\x20specularTerm\x20*\x20light.color\x20*\x20fresnelTerm(specColor,\x20lh);\x0a\x09return\x20vec4(color,\x201.0);\x0a}\x0a\x0avec4\x20layaBRDFHighGI(mediump\x20vec3\x20diffColor,mediump\x20vec3\x20specColor,mediump\x20float\x20oneMinusReflectivity,float\x20smoothness\x20,float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,\x20vec3\x20viewDir,LayaGI\x20gi)\x0a{\x0a\x09//\x20surfaceReduction\x20=\x20Int\x20D(NdotH)\x20*\x20NdotH\x20*\x20Id(NdotL>0)\x20dH\x20=\x201/(roughness^2+1)\x0a\x09float\x20surfaceReduction;\x0a\x09surfaceReduction\x20=\x201.0\x20-\x200.28*roughness*perceptualRoughness;//\x201-0.28*x^3\x20as\x20approximation\x20for\x20(1/(x^4+1))^(1/2.2)\x20on\x20the\x20domain\x20[0;1]\x0a\x09float\x20grazingTerm\x20=\x20clamp(smoothness\x20+\x20(1.0\x20-\x20oneMinusReflectivity),0.0,1.0);\x0a\x09mediump\x20vec3\x20color\x20=diffColor\x20*\x20gi.diffuse\x20+\x20surfaceReduction\x20*\x20gi.specular\x20*\x20fresnelLerp(specColor,vec3(grazingTerm),\x20nv);\x0a\x09return\x20vec4(color,1.0);\x0a}\x0a//\x20BRDF1-------------------------------------------------------------------------------------\x0a\x0a\x0a//\x20BRDF2-------------------------------------------------------------------------------------\x0a//\x20Based\x20on\x20Minimalist\x20CookTorrance\x20BRDF\x0a//\x20Implementation\x20is\x20slightly\x20different\x20from\x20original\x20derivation:\x20http://www.thetenthplanet.de/archives/255\x0a//\x0a//\x20*NDF\x20[Modified]\x20GGX:\x0a//\x20*Modified\x20Kelemen\x20and\x20Szirmay-​Kalos\x20for\x20Visibility\x20term\x0a//\x20*Fresnel\x20approximated\x20with\x201/LdotH\x0amediump\x20vec4\x20layaBRDFLowLight\x20(mediump\x20vec3\x20diffColor,\x20mediump\x20vec3\x20specColor,mediump\x20float\x20oneMinusReflectivity,float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,vec3\x20viewDir,LayaLight\x20light)\x0a{\x0a\x20\x20\x20\x20vec3\x20halfDir\x20=\x20safeNormalize\x20(viewDir-light.dir);\x0a\x20\x20\x20\x20mediump\x20float\x20nl\x20=\x20clamp(dot(normal,\x20-light.dir),0.0,1.0);\x0a\x20\x20\x20\x20float\x20nh\x20=\x20clamp(dot(normal,\x20halfDir),0.0,1.0);\x0a\x20\x20\x20\x20float\x20lh\x20=\x20clamp(dot(-light.dir,\x20halfDir),0.0,1.0);\x0a\x0a\x20\x20\x20\x20//\x20GGX\x20Distribution\x20multiplied\x20by\x20combined\x20approximation\x20of\x20Visibility\x20and\x20Fresnel\x0a\x20\x20\x20\x20//\x20See\x20\x22Optimizing\x20PBR\x20for\x20Mobile\x22\x20from\x20Siggraph\x202015\x20moving\x20mobile\x20graphics\x20course\x0a\x20\x20\x20\x20//\x20https://community.arm.com/events/1155\x0a\x20\x20\x20\x20mediump\x20float\x20a\x20=\x20roughness;\x0a\x20\x20\x20\x20float\x20a2\x20=\x20a*a;\x0a\x0a\x20\x20\x20\x20float\x20d\x20=\x20nh\x20*\x20nh\x20*\x20(a2\x20-\x201.0)\x20+\x201.00001;\x0a\x09//\x20#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09\x09//\x20Tighter\x20approximation\x20for\x20Gamma\x20only\x20rendering\x20mode!\x0a\x09\x09//\x20DVF\x20=\x20sqrt(DVF);\x0a\x09\x09//\x20DVF\x20=\x20(a\x20*\x20sqrt(.25))\x20/\x20(max(sqrt(0.1),\x20lh)*sqrt(roughness\x20+\x20.5)\x20*\x20d);\x0a\x09\x09float\x20specularTerm\x20=\x20a\x20/\x20(max(0.32,\x20lh)\x20*\x20(1.5\x20+\x20roughness)\x20*\x20d);\x0a\x09//\x20#else\x0a\x09//\x20\x09float\x20specularTerm\x20=\x20a2\x20/\x20(max(0.1f,\x20lh*lh)\x20*\x20(roughness\x20+\x200.5f)\x20*\x20(d\x20*\x20d)\x20*\x204);\x0a\x09//\x20#endif\x0a\x0a\x20\x20\x20\x20//\x20on\x20mobiles\x20(where\x20half\x20actually\x20means\x20something)\x20denominator\x20have\x20risk\x20of\x20overflow\x0a\x20\x20\x20\x20//\x20clamp\x20below\x20was\x20added\x20specifically\x20to\x20\x22fix\x22\x20that,\x20but\x20dx\x20compiler\x20(we\x20convert\x20bytecode\x20to\x20metal/gles)\x0a\x20\x20\x20\x20//\x20sees\x20that\x20specularTerm\x20have\x20only\x20non-negative\x20terms,\x20so\x20it\x20skips\x20max(0,..)\x20in\x20clamp\x20(leaving\x20only\x20min(100,...))\x0a\x0a\x09//#if\x20defined\x20(SHADER_API_MOBILE)\x0a\x20\x20\x20\x20specularTerm\x20=\x20specularTerm\x20-\x201e-4;\x0a\x09//#endif\x0a\x0a\x09//\x20#else\x0a\x09\x09//\x20//\x20Legacy\x0a\x09\x09//\x20half\x20specularPower\x20=\x20PerceptualRoughnessToSpecPower(perceptualRoughness);\x0a\x09\x09//\x20//\x20Modified\x20with\x20approximate\x20Visibility\x20function\x20that\x20takes\x20roughness\x20into\x20account\x0a\x09\x09//\x20//\x20Original\x20((n+1)*N.H^n)\x20/\x20(8*Pi\x20*\x20L.H^3)\x20didn\x27t\x20take\x20into\x20account\x20roughness\x0a\x09\x09//\x20//\x20and\x20produced\x20extremely\x20bright\x20specular\x20at\x20grazing\x20angles\x0a\x0a\x09\x09//\x20half\x20invV\x20=\x20lh\x20*\x20lh\x20*\x20smoothness\x20+\x20perceptualRoughness\x20*\x20perceptualRoughness;\x20//\x20approx\x20ModifiedKelemenVisibilityTerm(lh,\x20perceptualRoughness);\x0a\x09\x09//\x20half\x20invF\x20=\x20lh;\x0a\x0a\x09\x09//\x20half\x20specularTerm\x20=\x20((specularPower\x20+\x201)\x20*\x20pow\x20(nh,\x20specularPower))\x20/\x20(8\x20*\x20invV\x20*\x20invF\x20+\x201e-4h);\x0a\x0a\x09\x09//\x20#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09\x09//\x20\x09specularTerm\x20=\x20sqrt(max(1e-4f,\x20specularTerm));\x0a\x09\x09//\x20#endif\x0a\x09//\x20#endif\x0a\x0a\x09//\x20#if\x20defined\x20(SHADER_API_MOBILE)\x0a\x09\x09specularTerm\x20=\x20clamp(specularTerm,\x200.0,\x20100.0);\x20//\x20Prevent\x20FP16\x20overflow\x20on\x20mobiles\x0a\x09//\x20#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20mediump\x20vec3\x20color\x20=\x20(diffColor\x20+\x20specularTerm\x20*\x20specColor)\x20*\x20light.color\x20*\x20nl;\x0a\x0a\x20\x20\x20\x20return\x20vec4(color,\x201.0);\x0a}\x0a\x0amediump\x20vec4\x20layaBRDFLowGI\x20(mediump\x20vec3\x20diffColor,\x20mediump\x20vec3\x20specColor,mediump\x20float\x20oneMinusReflectivity,mediump\x20float\x20smoothness,float\x20perceptualRoughness,float\x20roughness,mediump\x20float\x20nv,vec3\x20normal,vec3\x20viewDir,LayaGI\x20gi)\x0a{\x0a\x09//\x20surfaceReduction\x20=\x20Int\x20D(NdotH)\x20*\x20NdotH\x20*\x20Id(NdotL>0)\x20dH\x20=\x201/(realRoughness^2+1)\x0a\x0a\x20\x20\x20\x20//\x201-0.28*x^3\x20as\x20approximation\x20for\x20(1/(x^4+1))^(1/2.2)\x20on\x20the\x20domain\x20[0;1]\x0a\x20\x20\x20\x20//\x201-x^3*(0.6-0.08*x)\x20\x20\x20approximation\x20for\x201/(x^4+1)\x0a\x09//\x20#ifdef\x20LAYA_COLORSPACE_GAMMA\x0a\x09\x09mediump\x20float\x20surfaceReduction\x20=\x200.28;\x0a\x09//\x20#else\x0a\x09\x09//\x20mediump\x20float\x20surfaceReduction\x20=\x20(0.6-0.08*perceptualRoughness);\x0a\x09//\x20#endif\x0a\x0a\x20\x20\x20\x20surfaceReduction\x20=\x201.0\x20-\x20roughness*perceptualRoughness*surfaceReduction;\x0a\x0a\x09mediump\x20float\x20grazingTerm\x20=\x20clamp(smoothness\x20+\x20(1.0-oneMinusReflectivity),0.0,1.0);\x0a\x09mediump\x20vec3\x20color\x20=gi.diffuse\x20*\x20diffColor+\x20surfaceReduction\x20*\x20gi.specular\x20*\x20fresnelLerpFast\x20(specColor,\x20vec3(grazingTerm),\x20nv);\x0a\x0a\x20\x20\x20\x20return\x20vec4(color,\x201.0);\x0a}\x0a//\x20BRDF2-------------------------------------------------------------------------------------',
        'struct\x20FragmentCommonData{\x0d\x0a\x09vec3\x20diffColor;\x0d\x0a\x09vec3\x20specColor;\x0d\x0a\x09float\x20oneMinusReflectivity;\x0d\x0a\x09float\x20smoothness;\x0d\x0a\x09//vec3\x20eyeVec;TODO:maybe\x20can\x20remove\x0d\x0a\x09//float\x20alpha;\x0d\x0a\x09//vec3\x20reflUVW;\x0d\x0a};\x0d\x0a\x0d\x0a#if\x20!defined(SETUP_BRDF_INPUT)//shader内部的宏需要将改成#ifdef改成#if类型\x20不然会被Laya的shader分析器优化掉\x0d\x0a\x20\x20\x20\x20#define\x20SETUP_BRDF_INPUT\x20metallicSetup//default\x20is\x20metallicSetup,also\x20can\x20be\x20other.\x20\x0d\x0a#endif\x0d\x0a\x0d\x0aconst\x20mediump\x20vec4\x20dielectricSpecularColor\x20=\x20vec4(0.220916301,\x200.220916301,\x200.220916301,\x201.0\x20-\x200.220916301);\x0d\x0a\x0d\x0amediump\x20vec3\x20diffuseAndSpecularFromMetallic(mediump\x20vec3\x20albedo,mediump\x20float\x20metallic,\x20out\x20mediump\x20vec3\x20specColor,\x20out\x20mediump\x20float\x20oneMinusReflectivity)\x0d\x0a{\x0d\x0a\x09specColor\x20=\x20mix(dielectricSpecularColor.rgb,\x20albedo,\x20metallic);\x0d\x0a\x09oneMinusReflectivity=\x20dielectricSpecularColor.a*(1.0-metallic);//diffuse\x20proportion\x0d\x0a\x09return\x20albedo\x20*\x20oneMinusReflectivity;\x0d\x0a}\x0d\x0a\x0d\x0amediump\x20float\x20specularStrength(mediump\x20vec3\x20specular)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x20max\x20(max\x20(specular.r,\x20specular.g),\x20specular.b);\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Diffuse/Spec\x20Energy\x20conservation\x0d\x0amediump\x20vec3\x20energyConservationBetweenDiffuseAndSpecular\x20(mediump\x20vec3\x20albedo,\x20mediump\x20vec3\x20specColor,\x20out\x20mediump\x20float\x20oneMinusReflectivity)\x0d\x0a{\x0d\x0a\x09oneMinusReflectivity\x20=\x201.0\x20-\x20specularStrength(specColor);\x0d\x0a\x20\x20\x20\x20return\x20albedo\x20*\x20(vec3(1.0)\x20-\x20specColor);\x0d\x0a}\x0d\x0a\x0d\x0a#ifdef\x20TRANSPARENTBLEND\x0d\x0a\x09mediump\x20vec3\x20preMultiplyAlpha\x20(mediump\x20vec3\x20diffColor,\x20mediump\x20float\x20alpha,\x20mediump\x20float\x20oneMinusReflectivity,out\x20mediump\x20float\x20modifiedAlpha)\x0d\x0a\x09{\x0d\x0a\x09\x09//\x20Transparency\x20\x27removes\x27\x20from\x20Diffuse\x20component\x0d\x0a\x09\x09diffColor\x20*=\x20alpha;\x0d\x0a\x09\x09//\x20Reflectivity\x20\x27removes\x27\x20from\x20the\x20rest\x20of\x20components,\x20including\x20Transparency\x0d\x0a\x09\x09//\x20modifiedAlpha\x20=\x201.0-(1.0-alpha)*(1.0-reflectivity)\x20=\x201.0-(oneMinusReflectivity\x20-\x20alpha*oneMinusReflectivity)\x20=\x201.0-oneMinusReflectivity\x20+\x20alpha*oneMinusReflectivity\x0d\x0a\x09\x09modifiedAlpha\x20=\x201.0\x20-\x20oneMinusReflectivity\x20+\x20alpha*oneMinusReflectivity;\x0d\x0a\x09\x09return\x20diffColor;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0aFragmentCommonData\x20metallicSetup(vec2\x20uv)\x0d\x0a{\x0d\x0a\x09mediump\x20vec2\x20metallicGloss\x20=\x20getMetallicGloss(uv);\x0d\x0a\x09mediump\x20float\x20metallic\x20=\x20metallicGloss.x;\x0d\x0a\x09mediump\x20float\x20smoothness\x20=\x20metallicGloss.y;\x20//\x20this\x20is\x201\x20minus\x20the\x20square\x20root\x20of\x20real\x20roughness\x20m.\x0d\x0a\x09mediump\x20float\x20oneMinusReflectivity;\x0d\x0a\x09mediump\x20vec3\x20specColor;\x0d\x0a\x09mediump\x20vec3\x20diffColor\x20=\x20diffuseAndSpecularFromMetallic(albedo(uv),\x20metallic,/*out*/specColor,/*out*/oneMinusReflectivity);\x0d\x0a\x0d\x0a\x09FragmentCommonData\x20o;\x0d\x0a\x09o.diffColor\x20=\x20diffColor;\x0d\x0a\x09o.specColor\x20=\x20specColor;\x0d\x0a\x09o.oneMinusReflectivity\x20=\x20oneMinusReflectivity;\x0d\x0a\x09o.smoothness\x20=\x20smoothness;\x0d\x0a\x09return\x20o;\x0d\x0a}\x0d\x0a\x0d\x0aFragmentCommonData\x20specularSetup(vec2\x20uv)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20mediump\x20vec4\x20specGloss\x20=\x20specularGloss(uv);\x0d\x0a\x20\x20\x20\x20mediump\x20vec3\x20specColor\x20=\x20specGloss.rgb;\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20smoothness\x20=\x20specGloss.a;\x0d\x0a\x0d\x0a\x20\x20\x20\x20mediump\x20float\x20oneMinusReflectivity;\x0d\x0a\x20\x20\x20\x20mediump\x20vec3\x20diffColor\x20=\x20energyConservationBetweenDiffuseAndSpecular\x20(albedo(uv),\x20specColor,\x20/*out*/\x20oneMinusReflectivity);\x0d\x0a\x0d\x0a\x20\x20\x20\x20FragmentCommonData\x20o;\x0d\x0a\x20\x20\x20\x20o.diffColor\x20=\x20diffColor;\x0d\x0a\x20\x20\x20\x20o.specColor\x20=\x20specColor;\x0d\x0a\x20\x20\x20\x20o.oneMinusReflectivity\x20=\x20oneMinusReflectivity;\x0d\x0a\x20\x20\x20\x20o.smoothness\x20=\x20smoothness;\x0d\x0a\x20\x20\x20\x20return\x20o;\x0d\x0a}\x0d\x0a\x0d\x0aLayaGI\x20fragmentGI(float\x20smoothness,vec3\x20eyeVec,mediump\x20float\x20occlusion,mediump\x20vec2\x20lightmapUV,vec3\x20worldnormal,vec3\x20worldPos)\x0d\x0a{\x0d\x0a\x09LayaGIInput\x20giInput;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09giInput.lightmapUV=lightmapUV;\x0d\x0a\x09#endif\x0d\x0a\x09giInput.worldPos\x20=\x20worldPos;\x0d\x0a\x0d\x0a\x09vec3\x20worldViewDir\x20=\x20-eyeVec;\x0d\x0a\x09mediump\x20vec4\x20uvwRoughness;\x0d\x0a\x09uvwRoughness.rgb\x20=\x20reflect(worldViewDir,\x20worldnormal);//reflectUVW\x0d\x0a\x09uvwRoughness.a=\x20smoothnessToPerceptualRoughness(smoothness);//perceptualRoughness\x0d\x0a\x0d\x0a\x09return\x20layaGlobalIllumination(giInput,occlusion,\x20worldnormal,\x20uvwRoughness);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avec3\x20perPixelWorldNormal(vec2\x20uv,vec3\x20normal,vec3\x20binormal,vec3\x20tangent)\x0d\x0a{\x0d\x0a\x09#ifdef\x20NORMALTEXTURE\x0d\x0a\x09\x09mediump\x20vec3\x20normalTangent=normalInTangentSpace(uv);\x0d\x0a\x09\x09vec3\x20normalWorld\x20=\x20normalize(tangent\x20*\x20normalTangent.x\x20+\x20binormal\x20*\x20normalTangent.y\x20+\x20normal\x20*\x20normalTangent.z);\x0d\x0a\x09#else\x0d\x0a\x09\x09vec3\x20normalWorld\x20=\x20normalize(normal);\x0d\x0a\x09#endif\x0d\x0a\x09\x09return\x20normalWorld;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragmentForward()\x0d\x0a{\x0d\x0a\x09vec2\x20uv;\x0d\x0a\x09#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09\x09#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09\x09\x09uv\x20=\x20parallax(v_Texcoord0,normalize(v_ViewDirForParallax));\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09uv\x20=\x20v_Texcoord0;\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mediump\x20float\x20alpha\x20=\x20getAlpha(uv);\x0d\x0a\x09#ifdef\x20ALPHATEST\x0d\x0a\x09\x09if(alpha<u_AlphaTestValue)\x0d\x0a\x09\x09\x09discard;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09FragmentCommonData\x20o\x20=\x20SETUP_BRDF_INPUT(uv);\x0d\x0a\x09\x0d\x0a\x09vec3\x20binormal;\x0d\x0a\x09vec3\x20tangent;\x0d\x0a\x09#ifdef\x20NORMALTEXTURE\x0d\x0a\x09\x09tangent\x20=\x20v_Tangent;\x0d\x0a\x09\x09binormal\x20=\x20v_Binormal;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec3\x20normal\x20=\x20v_Normal;\x0d\x0a\x09vec3\x20normalWorld\x20=\x20perPixelWorldNormal(uv,normal,binormal,tangent);//In\x20FS\x20if\x20the\x20normal\x20use\x20mediump\x20before\x20normalize\x20will\x20cause\x20precision\x20prolem\x20in\x20mobile\x20device.\x0d\x0a\x09vec3\x20eyeVec\x20=\x20normalize(v_EyeVec);\x0d\x0a\x09vec3\x20posworld\x20=\x20v_PositionWorld;\x0d\x0a\x0d\x0a\x09#ifdef\x20TRANSPARENTBLEND\x0d\x0a\x09\x09o.diffColor=preMultiplyAlpha(o.diffColor,alpha,o.oneMinusReflectivity,/*out*/alpha);//\x20shader\x20relies\x20on\x20pre-multiply\x20alpha-blend\x20(srcBlend\x20=\x20One,\x20dstBlend\x20=\x20OneMinusSrcAlpha)\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mediump\x20float\x20occlusion\x20=\x20getOcclusion(uv);\x0d\x0a\x09mediump\x20vec2\x20lightMapUV;\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09lightMapUV=v_LightMapUV;\x0d\x0a\x09#endif\x0d\x0a\x09float\x20perceptualRoughness\x20=\x20smoothnessToPerceptualRoughness(o.smoothness);\x0d\x0a\x09float\x20roughness\x20=\x20perceptualRoughnessToRoughness(perceptualRoughness);\x0d\x0a\x09float\x20nv\x20=\x20abs(dot(normalWorld,\x20eyeVec));\x0d\x0a\x09LayaGI\x20gi\x20=fragmentGI(o.smoothness,eyeVec,occlusion,lightMapUV,normalWorld,posworld);\x0d\x0a\x09vec4\x20color\x20=\x20LAYA_BRDF_GI(o.diffColor,o.specColor,o.oneMinusReflectivity,o.smoothness,perceptualRoughness,roughness,nv,normalWorld,eyeVec,gi);\x0d\x0a\x09\x0d\x0a\x09float\x20shadowAttenuation\x20=\x201.0;\x0d\x0a\x09#ifdef\x20LEGACYSINGLELIGHTING\x0d\x0a\x09\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09shadowAttenuation=sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09LayaLight\x20dirLight\x20=\x20layaDirectionLightToLight(u_DirectionLight,shadowAttenuation);\x0d\x0a\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,dirLight);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x0d\x0a\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09LayaLight\x20poiLight\x20=\x20layaPointLightToLight(posworld,normalWorld,u_PointLight,shadowAttenuation);\x0d\x0a\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,poiLight);\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09\x0d\x0a\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09shadowAttenuation\x20=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x20\x20\x20\x20LayaLight\x20spoLight\x20=\x20layaSpotLightToLight(posworld,normalWorld,u_SpotLight,shadowAttenuation);\x0d\x0a\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,spoLight);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#else\x0d\x0a\x09\x20\x09#ifdef\x20DIRECTIONLIGHT\x0d\x0a\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09\x09if(i\x20>=\x20u_DirationLightCount)\x0d\x0a\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09#if\x20defined(CALCULATE_SHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09\x09\x09\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20shadowCoord\x20=\x20v_ShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09\x09shadowAttenuation\x20*=\x20sampleShadowmap(shadowCoord);\x0d\x0a\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09DirectionLight\x20directionLight\x20=\x20getDirectionLight(u_LightBuffer,i);\x0d\x0a\x09\x09\x09\x09LayaLight\x20dirLight\x20=\x20layaDirectionLightToLight(directionLight,shadowAttenuation);\x0d\x0a\x09\x09\x09\x20\x09color+=LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,dirLight);\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x20\x09#endif\x0d\x0a\x09\x09#if\x20defined(POINTLIGHT)||defined(SPOTLIGHT)\x0d\x0a\x09\x09\x09ivec4\x20clusterInfo\x20=getClusterInfo(u_LightClusterBuffer,u_View,u_Viewport,\x20v_PositionWorld,gl_FragCoord,u_ProjectionParams);\x0d\x0a\x09\x09\x09#ifdef\x20POINTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.x)//PointLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09PointLight\x20pointLight\x20=\x20getPointLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaLight\x20poiLight\x20=\x20layaPointLightToLight(posworld,normalWorld,pointLight,shadowAttenuation);\x0d\x0a\x09\x09\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,poiLight);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09#ifdef\x20SPOTLIGHT\x0d\x0a\x09\x09\x09\x09for\x20(int\x20i\x20=\x200;\x20i\x20<\x20MAX_LIGHT_COUNT;\x20i++)\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09shadowAttenuation\x20=\x201.0;\x0d\x0a\x09\x09\x09\x09\x09if(i\x20>=\x20clusterInfo.y)//SpotLightCount\x0d\x0a\x09\x09\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09\x09\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09\x09\x09\x09\x09if(i\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09vec4\x20spotShadowcoord\x20=\x20v_SpotShadowCoord;\x0d\x0a\x09\x09\x09\x09\x09\x09\x09shadowAttenuation=\x20sampleSpotShadowmap(spotShadowcoord);\x0d\x0a\x09\x09\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09\x09#endif\x0d\x0a\x09\x09\x09\x09\x09SpotLight\x20spotLight\x20=\x20getSpotLight(u_LightBuffer,u_LightClusterBuffer,clusterInfo,i);\x0d\x0a\x09\x09\x09\x09\x09LayaLight\x20spoLight\x20=\x20layaSpotLightToLight(posworld,normalWorld,spotLight,shadowAttenuation);\x0d\x0a\x09\x09\x09\x09\x09color+=\x20LAYA_BRDF_LIGHT(o.diffColor,o.specColor,o.oneMinusReflectivity,perceptualRoughness,roughness,nv,normalWorld,eyeVec,spoLight);\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x20#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20EMISSION\x0d\x0a\x09\x09color.rgb\x20+=\x20emission(uv);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\x0d\x0a\x09\x09color.rgb=mix(color.rgb,u_FogColor,lerpFact);\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09gl_FragColor=vec4(color.rgb,alpha);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a',
        'vec2\x20transformLightMapUV(in\x20vec2\x20texcoord,in\x20vec4\x20lightmapScaleOffset)\x0d\x0a{\x0d\x0a\x09vec2\x20lightMapUV=vec2(texcoord.x,1.0-texcoord.y)*lightmapScaleOffset.xy+lightmapScaleOffset.zw;\x0d\x0a\x09lightMapUV.y=1.0-lightMapUV.y;\x0d\x0a\x09return\x20lightMapUV;\x20\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20vertexForward()\x0d\x0a{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=\x20u_ViewProjection\x20*\x20worldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09\x0d\x0a\x0d\x0a\x09v_PositionWorld=(worldMat*position).xyz;\x0d\x0a\x0d\x0a\x09#if\x20defined(ALBEDOTEXTURE)||defined(METALLICGLOSSTEXTURE)||defined(NORMALTEXTURE)||defined(EMISSIONTEXTURE)||defined(OCCLUSIONTEXTURE)||defined(PARALLAXTEXTURE)\x0d\x0a\x09\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09v_EyeVec\x20=u_CameraPos-v_PositionWorld;//will\x20normalize\x20per-pixel\x0d\x0a\x0d\x0a\x09#ifdef\x20LIGHTMAP\x0d\x0a\x09\x09vec2\x20texcoord;\x0d\x0a\x09\x09#ifdef\x20UV1\x0d\x0a\x09\x09\x09texcoord=a_Texcoord1;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09texcoord=a_Texcoord0;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09v_LightMapUV=transformLightMapUV(texcoord,u_LightmapScaleOffset);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09v_Normal=normalize(a_Normal*worldInvMat);//if\x20no\x20normalize\x20will\x20cause\x20precision\x20problem.\x0d\x0a\x0d\x0a\x09#ifdef\x20NORMALTEXTURE\x0d\x0a\x09\x09v_Tangent=normalize(a_Tangent0.xyz*worldInvMat);\x0d\x0a\x09\x09v_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#ifdef\x20PARALLAXTEXTURE\x0d\x0a\x09\x09vec3\x20binormal\x20=\x20cross(a_Normal,\x20a_Tangent0.xyz)*a_Tangent0.w;\x0d\x0a\x09\x09mat3\x20objectTBN\x20=\x20mat3(a_Tangent0.xyz,\x20binormal,\x20a_Normal);\x0d\x0a\x09\x09v_ViewDirForParallax\x20=(u_CameraPos*worldInvMat-position.xyz)*objectTBN;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SHADOWS)&&!defined(SHADOW_CASCADE)\x0d\x0a\x09\x09v_ShadowCoord\x20=\x20getShadowCoord(vec4(v_PositionWorld,1.0));\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09#if\x20defined(CALCULATE_SPOTSHADOWS)//shader中自定义的宏不可用ifdef\x20必须改成if\x20defined\x0d\x0a\x09\x09v_SpotShadowCoord\x20=\x20u_SpotViewProjectMatrix*vec4(v_PositionWorld,1.0);\x0d\x0a\x09#endif\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0a\x0d\x0avoid\x20fragDownsample13()\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20downsampleBox13Tap(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy);\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragDownsample13();\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Colors.glsl\x22;\x0d\x0a#include\x20\x22Sampling.glsl\x22;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_MainTex;\x0d\x0auniform\x20sampler2D\x20u_BloomTex;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_MainTex_TexelSize;\x0d\x0auniform\x20float\x20u_SampleScale;\x0d\x0a\x0d\x0amediump\x20vec4\x20combine(mediump\x20vec4\x20bloom,\x20vec2\x20uv)\x20{\x0d\x0a\x09mediump\x20vec4\x20color\x20=\x20texture2D(u_BloomTex,\x20uv);\x0d\x0a\x09return\x20bloom\x20+\x20color;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20fragUpsampleTent()\x20{\x0d\x0a\x09mediump\x20vec4\x20bloom\x20=\x20upsampleTent(u_MainTex,\x20v_Texcoord0,\x20u_MainTex_TexelSize.xy,\x20vec4(u_SampleScale));\x0d\x0a\x09gl_FragColor\x20=\x20combine(bloom,\x20v_Texcoord0);\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09fragUpsampleTent();\x0d\x0a}',
        '#include\x20\x22StdLib.glsl\x22;\x0a\x0a#define\x20EPSILON\x201.0e-4\x0a\x0a//\x20Quadratic\x20color\x20thresholding\x0a//\x20curve\x20=\x20(threshold\x20-\x20knee,\x20knee\x20*\x202,\x200.25\x20/\x20knee)\x0amediump\x20vec4\x20quadraticThreshold(mediump\x20vec4\x20color,\x20mediump\x20float\x20threshold,\x20mediump\x20vec3\x20curve)\x20{\x0a\x09//\x20Pixel\x20brightness\x0a\x09mediump\x20float\x20br\x20=\x20max3(color.r,\x20color.g,\x20color.b);\x0a\x0a\x09//\x20Under-threshold\x20part:\x20quadratic\x20curve\x0a\x09mediump\x20float\x20rq\x20=\x20clamp(br\x20-\x20curve.x,\x200.0,\x20curve.y);\x0a\x09rq\x20=\x20curve.z\x20*\x20rq\x20*\x20rq;\x0a\x0a\x09//\x20Combine\x20and\x20apply\x20the\x20brightness\x20response\x20curve.\x0a\x09color\x20*=\x20max(rq,\x20br\x20-\x20threshold)\x20/\x20max(br,\x20EPSILON);\x0a\x0a\x09return\x20color;\x0a}\x0a\x0a\x0a\x0a//\x0a//\x20sRGB\x20transfer\x20functions\x0a//\x20Fast\x20path\x20ref:\x20http://chilliant.blogspot.com.au/2012/08/srgb-approximations-for-hlsl.html?m=1\x0a//\x0amediump\x20vec3\x20sRGBToLinear(mediump\x20vec3\x20c)\x20{\x0a\x09#ifdef\x20USE_VERY_FAST_SRGB\x0a\x09\x09return\x20c\x20*\x20c;\x0a\x09#elif\x20defined(USE_FAST_SRGB)\x0a\x09\x09return\x20c\x20*\x20(c\x20*\x20(c\x20*\x200.305306011\x20+\x200.682171111)\x20+\x200.012522878);\x0a\x09#else\x0a\x09\x09mediump\x20vec3\x20linearRGBLo\x20=\x20c\x20/\x2012.92;\x0a\x09\x09mediump\x20vec3\x20power=vec3(2.4,\x202.4,\x202.4);\x0a\x09\x09mediump\x20vec3\x20linearRGBHi\x20=\x20positivePow((c\x20+\x200.055)\x20/\x201.055,\x20power);\x0a\x09\x09mediump\x20vec3\x20linearRGB\x20=vec3((c.r<=0.04045)\x20?\x20linearRGBLo.r\x20:\x20linearRGBHi.r,(c.g<=0.04045)\x20?\x20linearRGBLo.g\x20:\x20linearRGBHi.g,(c.b<=0.04045)\x20?\x20linearRGBLo.b\x20:\x20linearRGBHi.b);\x0a\x09\x09return\x20linearRGB;\x0a\x09#endif\x0a}\x0a\x0amediump\x20vec4\x20sRGBToLinear(mediump\x20vec4\x20c){\x0a\x20\x20\x20\x20return\x20vec4(sRGBToLinear(c.rgb),\x20c.a);\x0a}\x0a\x0a\x0a\x0amediump\x20vec3\x20linearToSRGB(mediump\x20vec3\x20c)\x20{\x0a\x09#ifdef\x20USE_VERY_FAST_SRGB\x0a\x09\x09return\x20sqrt(c);\x0a\x09#elif\x20defined(USE_FAST_SRGB)\x0a\x09\x09return\x20max(1.055\x20*\x20PositivePow(c,\x200.416666667)\x20-\x200.055,\x200.0);\x0a\x09#else\x0a\x09\x09mediump\x20vec3\x20sRGBLo\x20=\x20c\x20*\x2012.92;\x0a\x09\x09mediump\x20vec3\x20power=vec3(1.0\x20/\x202.4,\x201.0\x20/\x202.4,\x201.0\x20/\x202.4);\x0a\x09\x09mediump\x20vec3\x20sRGBHi\x20=\x20(positivePow(c,\x20power)\x20*\x201.055)\x20-\x200.055;\x0a\x09\x09mediump\x20vec3\x20sRGB\x20=vec3((c.r<=0.0031308)\x20?\x20sRGBLo.r\x20:\x20sRGBHi.r,(c.g<=0.0031308)\x20?\x20sRGBLo.g\x20:\x20sRGBHi.g,(c.b<=0.0031308)\x20?\x20sRGBLo.b\x20:\x20sRGBHi.b);\x0a\x09\x09return\x20sRGB;\x0a\x09#endif\x0a}\x0a\x0amediump\x20vec4\x20linearToSRGB(mediump\x20vec4\x20c){\x0a\x20\x20\x20\x20return\x20vec4(linearToSRGB(c.rgb),\x20c.a);\x0a}',
        '//\x20Better,\x20temporally\x20stable\x20box\x20filtering\x0a//\x20[Jimenez14]\x20http://goo.gl/eomGso\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x20A\x20.\x20B\x20.\x20C\x20.\x0a//\x20.\x20.\x20D\x20.\x20E\x20.\x20.\x0a//\x20.\x20F\x20.\x20G\x20.\x20H\x20.\x0a//\x20.\x20.\x20I\x20.\x20J\x20.\x20.\x0a//\x20.\x20K\x20.\x20L\x20.\x20M\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0amediump\x20vec4\x20downsampleBox13Tap(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize)\x0a{\x0a\x20\x20\x20\x20mediump\x20vec4\x20A\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-1.0,\x20-1.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20B\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.0,\x20-1.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20C\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x201.0,\x20-1.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20D\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-0.5,\x20-0.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20E\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.5,\x20-0.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20F\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-1.0,\x20\x200.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20G\x20=\x20texture2D(tex,\x20uv);\x0a\x20\x20\x20\x20mediump\x20vec4\x20H\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x201.0,\x20\x200.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20I\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-0.5,\x20\x200.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20J\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.5,\x20\x200.5));\x0a\x20\x20\x20\x20mediump\x20vec4\x20K\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(-1.0,\x20\x201.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20L\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x200.0,\x20\x201.0));\x0a\x20\x20\x20\x20mediump\x20vec4\x20M\x20=\x20texture2D(tex,\x20uv\x20+\x20texelSize\x20*\x20vec2(\x201.0,\x20\x201.0));\x0a\x0a\x09mediump\x20vec2\x20scale=\x20vec2(0.5,\x200.125);\x0a\x20\x20\x20\x20mediump\x20vec2\x20div\x20=\x20(1.0\x20/\x204.0)\x20*\x20scale;\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20o\x20=\x20(D\x20+\x20E\x20+\x20I\x20+\x20J)\x20*\x20div.x;\x0a\x20\x20\x20\x20o\x20+=\x20(A\x20+\x20B\x20+\x20G\x20+\x20F)\x20*\x20div.y;\x0a\x20\x20\x20\x20o\x20+=\x20(B\x20+\x20C\x20+\x20H\x20+\x20G)\x20*\x20div.y;\x0a\x20\x20\x20\x20o\x20+=\x20(F\x20+\x20G\x20+\x20L\x20+\x20K)\x20*\x20div.y;\x0a\x20\x20\x20\x20o\x20+=\x20(G\x20+\x20H\x20+\x20M\x20+\x20L)\x20*\x20div.y;\x0a\x0a\x20\x20\x20\x20return\x20o;\x0a}\x0a\x0a//\x20Standard\x20box\x20filtering\x0amediump\x20vec4\x20downsampleBox4Tap(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize)\x0a{\x0a\x20\x20\x20\x20vec4\x20d\x20=\x20texelSize.xyxy\x20*\x20vec4(-1.0,\x20-1.0,\x201.0,\x201.0);\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20s\x20=\x20\x20texture2D(tex,\x20uv\x20+\x20d.xy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.xw);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zw);\x0a\x0a\x20\x20\x20\x20return\x20s\x20*\x20(1.0\x20/\x204.0);\x0a}\x0a\x0a//\x209-tap\x20bilinear\x20upsampler\x20(tent\x20filter)\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x201\x20.\x202\x20.\x201\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x202\x20.\x204\x20.\x202\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0a//\x20.\x201\x20.\x202\x20.\x201\x20.\x0a//\x20.\x20.\x20.\x20.\x20.\x20.\x20.\x0amediump\x20vec4\x20upsampleTent(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize,\x20vec4\x20sampleScale)\x0a{\x0a\x20\x20\x20\x20vec4\x20d\x20=\x20texelSize.xyxy\x20*\x20vec4(1.0,\x201.0,\x20-1.0,\x200.0)\x20*\x20sampleScale;\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20s\x20=\x20\x20texture2D(tex,\x20uv\x20-\x20d.xy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20-\x20d.wy)\x20*\x202.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20-\x20d.zy);\x0a\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zw)\x20*\x202.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv)\x20*\x204.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x09uv\x20+\x20d.xw)\x20*\x202.0;\x0a\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.wy)\x20*\x202.0;\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.xy);\x0a\x0a\x20\x20\x20\x20return\x20s\x20*\x20(1.0\x20/\x2016.0);\x0a}\x0a\x0a//\x20Standard\x20box\x20filtering\x0amediump\x20vec4\x20upsampleBox(sampler2D\x20tex,\x20vec2\x20uv,\x20vec2\x20texelSize,\x20vec4\x20sampleScale)\x0a{\x0a\x20\x20\x20\x20vec4\x20d\x20=\x20texelSize.xyxy\x20*\x20vec4(-1.0,\x20-1.0,\x201.0,\x201.0)\x20*\x200.5\x20*\x20sampleScale;\x0a\x0a\x20\x20\x20\x20mediump\x20vec4\x20s\x20=\x20\x20texture2D(tex,\x20uv\x20+\x20d.xy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zy);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.xw);\x0a\x20\x20\x20\x20s\x20+=\x20texture2D(tex,\x20uv\x20+\x20d.zw);\x0a\x0a\x20\x20\x20\x20return\x20s\x20*\x20(1.0\x20/\x204.0);\x0a}',
        '#ifndef\x20GRAPHICS_API_GLES3\x0d\x0a\x09#define\x20NO_NATIVE_SHADOWMAP\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(NO_NATIVE_SHADOWMAP)\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW(textureName)\x20uniform\x20mediump\x20sampler2D\x20textureName\x0d\x0a\x09#define\x20SAMPLE_TEXTURE2D_SHADOW(textureName,\x20coord3)\x20(texture2D(textureName,coord3.xy).r<coord3.z?0.0:1.0)\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW_PARAM(shadowMap)\x20mediump\x20sampler2D\x20shadowMap\x0d\x0a#else\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW(textureName)\x20uniform\x20mediump\x20sampler2DShadow\x20textureName\x0d\x0a\x09#define\x20SAMPLE_TEXTURE2D_SHADOW(textureName,\x20coord3)\x20textureLod(textureName,coord3,0.0)\x0d\x0a\x09#define\x20TEXTURE2D_SHADOW_PARAM(shadowMap)\x20mediump\x20sampler2DShadow\x20shadowMap\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(RECEIVESHADOW)&&defined(SHADOW)\x0d\x0a\x20\x20\x20\x20#define\x20CALCULATE_SHADOWS\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(RECEIVESHADOW)&&defined(SHADOW_SPOT)\x0d\x0a\x09#define\x20CALCULATE_SPOTSHADOWS\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_ShadowBias;\x20//\x20x:\x20depth\x20bias,\x20y:\x20normal\x20bias\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)||defined(CALCULATE_SPOTSHADOWS)\x0d\x0a\x09#include\x20\x22ShadowSampleTent.glsl\x22\x0d\x0a\x09uniform\x20vec4\x20u_ShadowMapSize;\x0d\x0a\x09uniform\x20vec4\x20u_SpotShadowMapSize;\x0d\x0a\x09uniform\x20vec4\x20u_ShadowParams;\x20//\x20x:\x20shadowStrength\x20y:\x20ShadowSpotLightStrength\x0d\x0a\x09\x0d\x0a\x09float\x20sampleShdowMapFiltered4(TEXTURE2D_SHADOW_PARAM(shadowMap),vec3\x20shadowCoord,vec4\x20shadowMapSize)\x0d\x0a\x09{\x0d\x0a\x09\x09float\x20attenuation;\x0d\x0a\x09\x09vec4\x20attenuation4;\x0d\x0a\x09\x09vec2\x20offset=shadowMapSize.xy/2.0;\x0d\x0a\x09\x09vec3\x20shadowCoord0=shadowCoord\x20+\x20vec3(-offset,0.0);\x0d\x0a\x09\x09vec3\x20shadowCoord1=shadowCoord\x20+\x20vec3(offset.x,-offset.y,0.0);\x0d\x0a\x09\x09vec3\x20shadowCoord2=shadowCoord\x20+\x20vec3(-offset.x,offset.y,0.0);\x0d\x0a\x09\x09vec3\x20shadowCoord3=shadowCoord\x20+\x20vec3(offset,0.0);\x0d\x0a\x09\x09attenuation4.x\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord0);\x0d\x0a\x09\x09attenuation4.y\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord1);\x0d\x0a\x09\x09attenuation4.z\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord2);\x0d\x0a\x09\x09attenuation4.w\x20=\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20shadowCoord3);\x0d\x0a\x09\x09attenuation\x20=\x20dot(attenuation4,\x20vec4(0.25));\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09float\x20sampleShdowMapFiltered9(TEXTURE2D_SHADOW_PARAM(shadowMap),vec3\x20shadowCoord,vec4\x20shadowmapSize)\x0d\x0a\x09{\x0d\x0a\x09\x09float\x20attenuation;\x0d\x0a\x09\x09float\x20fetchesWeights[9];\x0d\x0a\x09\x09vec2\x20fetchesUV[9];\x0d\x0a\x09\x09sampleShadowComputeSamplesTent5x5(shadowmapSize,\x20shadowCoord.xy,\x20fetchesWeights,\x20fetchesUV);\x0d\x0a\x09\x09attenuation\x20=\x20fetchesWeights[0]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[0].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[1]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[1].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[2]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[2].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[3]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[3].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[4]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[4].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[5]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[5].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[6]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[6].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[7]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[7].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09attenuation\x20+=\x20fetchesWeights[8]\x20*\x20SAMPLE_TEXTURE2D_SHADOW(shadowMap,\x20vec3(fetchesUV[8].xy,\x20shadowCoord.z));\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SHADOWS)\x0d\x0a\x0d\x0a\x09TEXTURE2D_SHADOW(u_ShadowMap);\x0d\x0a\x0d\x0a\x09uniform\x20mat4\x20u_ShadowMatrices[4];\x0d\x0a\x09uniform\x20vec4\x20u_ShadowSplitSpheres[4];//\x20max\x20cascade\x20is\x204\x0d\x0a\x0d\x0a\x09mediump\x20int\x20computeCascadeIndex(vec3\x20positionWS)\x0d\x0a\x09{\x0d\x0a\x09\x09vec3\x20fromCenter0\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[0].xyz;\x0d\x0a\x09\x09vec3\x20fromCenter1\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[1].xyz;\x0d\x0a\x09\x09vec3\x20fromCenter2\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[2].xyz;\x0d\x0a\x09\x09vec3\x20fromCenter3\x20=\x20positionWS\x20-\x20u_ShadowSplitSpheres[3].xyz;\x0d\x0a\x0d\x0a\x09\x09mediump\x20vec4\x20comparison\x20=\x20vec4(\x0d\x0a\x09\x09\x09dot(fromCenter0,\x20fromCenter0)<u_ShadowSplitSpheres[0].w,\x0d\x0a\x09\x09\x09dot(fromCenter1,\x20fromCenter1)<u_ShadowSplitSpheres[1].w,\x0d\x0a\x09\x09\x09dot(fromCenter2,\x20fromCenter2)<u_ShadowSplitSpheres[2].w,\x0d\x0a\x09\x09\x09dot(fromCenter3,\x20fromCenter3)<u_ShadowSplitSpheres[3].w);\x0d\x0a\x09\x09comparison.yzw\x20=\x20clamp(comparison.yzw\x20-\x20comparison.xyz,0.0,1.0);//keep\x20the\x20nearest\x0d\x0a\x09\x09mediump\x20vec4\x20indexCoefficient\x20=\x20vec4(4.0,3.0,2.0,1.0);\x0d\x0a\x09\x09mediump\x20int\x20index\x20=\x204\x20-\x20int(dot(comparison,\x20indexCoefficient));\x0d\x0a\x09\x09return\x20index;\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09vec4\x20getShadowCoord(vec4\x20positionWS)\x0d\x0a\x09{\x0d\x0a\x09\x09#ifdef\x20SHADOW_CASCADE\x0d\x0a\x09\x09\x09mediump\x20int\x20cascadeIndex\x20=\x20computeCascadeIndex(positionWS.xyz);\x0d\x0a\x09\x09\x09if(cascadeIndex\x20>\x203)//\x20out\x20of\x20shadow\x20range\x20cascadeIndex\x20is\x204.\x0d\x0a\x09\x09\x09\x09return\x20vec4(0.0);\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09#ifdef\x20GRAPHICS_API_GLES3\x0d\x0a\x09\x09\x09\x09return\x20u_ShadowMatrices[cascadeIndex]\x20*\x20positionWS;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09mat4\x20shadowMat;\x0d\x0a\x09\x09\x09\x09if(cascadeIndex\x20==\x200)\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[0];\x0d\x0a\x09\x09\x09\x09else\x20if(cascadeIndex\x20==\x201)\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[1];\x0d\x0a\x09\x09\x09\x09else\x20if(cascadeIndex\x20==\x202)\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[2];\x0d\x0a\x09\x09\x09\x09else\x0d\x0a\x09\x09\x09\x09\x09shadowMat\x20=\x20u_ShadowMatrices[3];\x0d\x0a\x09\x09\x09\x09return\x20shadowMat\x20*\x20positionWS;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09return\x20u_ShadowMatrices[0]\x20*\x20positionWS;\x0d\x0a\x09\x09#endif\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09float\x20sampleShadowmap(vec4\x20shadowCoord)\x0d\x0a\x09{\x0d\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0d\x0a\x09\x09float\x20attenuation\x20=\x201.0;\x0d\x0a\x09\x09if(shadowCoord.z\x20>\x200.0\x20&&\x20shadowCoord.z\x20<\x201.0)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09#if\x20defined(SHADOW_SOFT_SHADOW_HIGH)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered9(u_ShadowMap,shadowCoord.xyz,u_ShadowMapSize);\x0d\x0a\x09\x09\x09#elif\x20defined(SHADOW_SOFT_SHADOW_LOW)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered4(u_ShadowMap,shadowCoord.xyz,u_ShadowMapSize);\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20SAMPLE_TEXTURE2D_SHADOW(u_ShadowMap,shadowCoord.xyz);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09attenuation\x20=\x20mix(1.0,attenuation,u_ShadowParams.x);//shadowParams.x:shadow\x20strength\x0d\x0a\x09\x09}\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(CALCULATE_SPOTSHADOWS)//shader���Զ���ĺ겻����ifdef\x20����ĳ�if\x20defined\x0d\x0a\x09TEXTURE2D_SHADOW(u_SpotShadowMap);\x0d\x0a\x09uniform\x20mat4\x20u_SpotViewProjectMatrix;\x0d\x0a\x09float\x20sampleSpotShadowmap(vec4\x20shadowCoord)\x0d\x0a\x09{\x0d\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0d\x0a\x09\x09float\x20attenuation\x20=\x201.0;\x0d\x0a\x09\x09shadowCoord.xy\x20+=1.0;\x0d\x0a\x09\x09shadowCoord.xy/=2.0;\x20\x0d\x0a\x09\x09if(shadowCoord.z\x20>\x200.0\x20&&\x20shadowCoord.z\x20<\x201.0)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09#if\x20defined(SHADOW_SPOT_SOFT_SHADOW_HIGH)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered9(u_SpotShadowMap,shadowCoord.xyz,u_SpotShadowMapSize);\x0d\x0a\x09\x09\x09#elif\x20defined(SHADOW_SPOT_SOFT_SHADOW_LOW)\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20sampleShdowMapFiltered4(u_SpotShadowMap,shadowCoord.xyz,u_SpotShadowMapSize);\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09attenuation\x20=\x20SAMPLE_TEXTURE2D_SHADOW(u_SpotShadowMap,shadowCoord.xyz);\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09attenuation\x20=\x20mix(1.0,attenuation,u_ShadowParams.y);//shadowParams.y:shadow\x20strength\x0d\x0a\x09\x09}\x0d\x0a\x09\x09return\x20attenuation;\x0d\x0a\x09}\x0d\x0a#endif\x0d\x0a\x0d\x0avec3\x20applyShadowBias(vec3\x20positionWS,\x20vec3\x20normalWS,\x20vec3\x20lightDirection)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20float\x20invNdotL\x20=\x201.0\x20-\x20clamp(dot(-lightDirection,\x20normalWS),0.0,1.0);\x0d\x0a\x20\x20\x20\x20float\x20scale\x20=\x20invNdotL\x20*\x20u_ShadowBias.y;\x0d\x0a\x0d\x0a\x20\x20\x20\x20//\x20normal\x20bias\x20is\x20negative\x20since\x20we\x20want\x20to\x20apply\x20an\x20inset\x20normal\x20offset\x0d\x0a\x20\x20\x20\x20positionWS\x20+=\x20-lightDirection\x20*\x20u_ShadowBias.xxx;\x0d\x0a\x20\x20\x20\x20positionWS\x20+=\x20normalWS\x20*\x20vec3(scale);\x0d\x0a\x20\x20\x20\x20return\x20positionWS;\x0d\x0a}\x0d\x0a',
        '#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22Shadow.glsl\x22\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0aattribute\x20vec3\x20a_Normal;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_WorldMat;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x0d\x0a#ifdef\x20SHADOW\x0d\x0a\x09uniform\x20vec3\x20u_ShadowLightDirection;\x0d\x0a#endif\x0d\x0a\x0d\x0a\x0d\x0avec4\x20shadowCasterVertex()\x0d\x0a{\x0d\x0a\x09mat4\x20worldMat;\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09worldMat\x20=\x20a_WorldMat;\x0d\x0a\x09#else\x0d\x0a\x09\x09worldMat\x20=\x20u_WorldMat;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09worldMat\x20=\x20worldMat\x20*\x20skinTransform;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec4\x20positionWS\x20=\x20worldMat\x20*\x20a_Position;\x0d\x0a\x09mat3\x20worldInvMat;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat*skinTransform));\x0d\x0a\x09#else\x0d\x0a\x09\x09worldInvMat=INVERSE_MAT(mat3(worldMat));\x0d\x0a\x09#endif\x20\x20\x0d\x0a\x0d\x0a\x09vec3\x20normalWS\x20=\x20normalize(a_Normal*worldInvMat);//if\x20no\x20normalize\x20will\x20cause\x20precision\x20problem\x0d\x0a\x09#ifdef\x20SHADOW\x0d\x0a\x09\x09positionWS.xyz\x20=\x20applyShadowBias(positionWS.xyz,normalWS,u_ShadowLightDirection);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09vec4\x20positionCS\x20=\x20u_ViewProjection\x20*\x20positionWS;\x0d\x0a\x09#ifdef\x20SHADOW_SPOT\x0d\x0a\x09\x09positionCS.z\x20=\x20positionCS.z-u_ShadowBias.x/positionCS.w;\x0d\x0a\x09#endif\x0d\x0a\x09positionCS.z\x20=\x20max(positionCS.z,\x200.0);//min\x20ndc\x20z\x20is\x200.0\x0d\x0a\x09\x0d\x0a\x09//\x20//TODO没考虑UV动画呢\x0d\x0a\x09//\x20#if\x20defined(DIFFUSEMAP)&&defined(ALPHATEST)\x0d\x0a\x09//\x20\x09v_Texcoord0=a_Texcoord0;\x0d\x0a\x09//\x20#endif\x0d\x0a\x20\x20\x20\x20return\x20positionCS;\x0d\x0a}\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Texcoord;\x0d\x0a\x0d\x0auniform\x20samplerCube\x20u_CubeTexture;\x0d\x0auniform\x20float\x20u_Exposure;\x0d\x0auniform\x20vec4\x20u_TintColor;\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x09\x0d\x0a\x09vec3\x20color=textureCube(u_CubeTexture,\x20v_Texcoord).rgb*u_TintColor.rgb*u_Exposure*2.0;\x0d\x0a\x09gl_FragColor=vec4(color,1.0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0aprecision\x20highp\x20float;\x0d\x0a#else\x0d\x0aprecision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0auniform\x20float\x20u_Rotation;\x0d\x0avarying\x20vec3\x20v_Texcoord;\x0d\x0a\x0d\x0a\x0d\x0avec4\x20rotateAroundYInDegrees\x20(vec4\x20vertex,\x20float\x20degrees)\x0d\x0a{\x0d\x0a\x09float\x20angle\x20=\x20degrees\x20*\x203.141593\x20/\x20180.0;\x0d\x0a\x09float\x20sina=sin(angle);\x0d\x0a\x09float\x20cosa=cos(angle);\x0d\x0a\x09mat2\x20m\x20=\x20mat2(cosa,\x20-sina,\x20sina,\x20cosa);\x0d\x0a\x09return\x20vec4(m*vertex.xz,\x20vertex.yw).xzyw;\x0d\x0a}\x0d\x0a\x09\x09\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20position=rotateAroundYInDegrees(a_Position,u_Rotation);\x0d\x0a\x09gl_Position\x20=\x20u_ViewProjection*position;\x0d\x0a\x09v_Texcoord=vec3(-a_Position.x,a_Position.yz);//转换坐标系\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aconst\x20float\x20MIE_G\x20=\x20-0.990;\x0d\x0aconst\x20float\x20MIE_G2\x20=\x200.9801;\x0d\x0aconst\x20float\x20SKY_GROUND_THRESHOLD\x20=\x200.02;\x0d\x0a\x0d\x0auniform\x20float\x20u_SunSize;\x0d\x0auniform\x20float\x20u_SunSizeConvergence;\x0d\x0auniform\x20DirectionLight\x20u_SunLight;\x0d\x0a\x0d\x0a\x0d\x0avarying\x20vec3\x20v_GroundColor;\x0d\x0avarying\x20vec3\x20v_SkyColor;\x0d\x0a\x0d\x0a\x0d\x0a#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09varying\x20vec3\x20v_Vertex;\x0d\x0a#elif\x20defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_RayDir;\x0d\x0a#else\x0d\x0a\x09varying\x20float\x20v_SkyGroundFactor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_SunColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a//\x20Calculates\x20the\x20Mie\x20phase\x20function\x0d\x0afloat\x20getMiePhase(float\x20eyeCos,\x20float\x20eyeCos2)\x20{\x0d\x0a\x09float\x20temp\x20=\x201.0\x20+\x20MIE_G2\x20-\x202.0\x20*\x20MIE_G\x20*\x20eyeCos;\x0d\x0a\x09temp\x20=\x20pow(temp,\x20pow(u_SunSize,0.65)\x20*\x2010.0);\x0d\x0a\x09temp\x20=\x20max(temp,1.0e-4);\x20//\x20prevent\x20division\x20by\x20zero,\x20esp.\x20in\x20half\x20precision\x0d\x0a\x09temp\x20=\x201.5\x20*\x20((1.0\x20-\x20MIE_G2)\x20/\x20(2.0\x20+\x20MIE_G2))\x20*\x20(1.0\x20+\x20eyeCos2)\x20/\x20temp;\x0d\x0a\x09return\x20temp;\x0d\x0a}\x0d\x0a\x0d\x0a//\x20Calculates\x20the\x20sun\x20shape\x0d\x0afloat\x20calcSunAttenuation(vec3\x20lightPos,\x20vec3\x20ray)\x20{\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09\x09float\x20focusedEyeCos\x20=\x20pow(clamp(dot(lightPos,\x20ray),0.0,1.0),\x20u_SunSizeConvergence);\x0d\x0a\x09\x09return\x20getMiePhase(-focusedEyeCos,\x20focusedEyeCos\x20*\x20focusedEyeCos);\x0d\x0a\x09#else\x20//SUN_SIMPLE\x0d\x0a\x09\x09vec3\x20delta\x20=\x20lightPos\x20-\x20ray;\x0d\x0a\x09\x09float\x20dist\x20=\x20length(delta);\x0d\x0a\x09\x09float\x20spot\x20=\x201.0\x20-\x20smoothstep(0.0,\x20u_SunSize,\x20dist);\x0d\x0a\x09\x09return\x20spot\x20*\x20spot;\x0d\x0a\x09#endif\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09//\x20if\x20y\x20>\x201\x20[eyeRay.y\x20<\x20-SKY_GROUND_THRESHOLD]\x20-\x20ground\x0d\x0a\x09//\x20if\x20y\x20>=\x200\x20and\x20<\x201\x20[eyeRay.y\x20<=\x200\x20and\x20>\x20-SKY_GROUND_THRESHOLD]\x20-\x20horizon\x0d\x0a\x09//\x20if\x20y\x20<\x200\x20[eyeRay.y\x20>\x200]\x20-\x20sky\x0d\x0a\x09vec3\x20col\x20=\x20vec3(0.0,\x200.0,\x200.0);\x0d\x0a\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09\x09vec3\x20ray\x20=\x20normalize(v_Vertex);\x0d\x0a\x09\x09float\x20y\x20=\x20ray.y\x20/\x20SKY_GROUND_THRESHOLD;\x0d\x0a\x09#elif\x20defined(SUN_SIMPLE)\x20\x0d\x0a\x09\x09vec3\x20ray\x20=\x20v_RayDir;\x0d\x0a\x09\x09float\x20y\x20=\x20ray.y\x20/\x20SKY_GROUND_THRESHOLD;\x09\x0d\x0a\x09#else\x0d\x0a\x09\x09float\x20y\x20=\x20v_SkyGroundFactor;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09//\x20if\x20we\x20did\x20precalculate\x20color\x20in\x20vprog:\x20just\x20do\x20lerp\x20between\x20them\x0d\x0a\x09col\x20=\x20mix(v_SkyColor,\x20v_GroundColor,\x20clamp(y,0.0,1.0));\x0d\x0a\x0d\x0a\x09#if\x20defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\x0d\x0a\x09\x09if\x20(y\x20<\x200.0)\x0d\x0a\x09\x09\x09col\x20+=\x20v_SunColor\x20*\x20calcSunAttenuation(-u_SunLight.direction,\x20-ray);\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09col\x20=\x20sqrt(col);//linear\x20space\x20convert\x20to\x20gamma\x20space\x0d\x0a\x09gl_FragColor=vec4(col,1.0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0a#define\x20OUTER_RADIUS\x201.025\x0d\x0a#define\x20RAYLEIGH\x20(mix(0.0,\x200.0025,\x20pow(u_AtmosphereThickness,2.5)))//\x20Rayleigh\x20constant\x20Rayleigh为夜空光和极光亮度单位\x0d\x0a#define\x20MIE\x200.0010\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20Mie\x20constant\x20米氏散射\x0d\x0a#define\x20SUN_BRIGHTNESS\x2020.0\x20\x20\x20\x20//\x20Sun\x20brightness\x0d\x0a#define\x20MAX_SCATTER\x2050.0\x20//\x20Maximum\x20scattering\x20value,\x20to\x20prevent\x20math\x20overflows\x20on\x20Adrenos\x0d\x0a\x0d\x0aconst\x20float\x20SKY_GROUND_THRESHOLD\x20=\x200.02;\x0d\x0aconst\x20float\x20outerRadius\x20=\x20OUTER_RADIUS;\x0d\x0aconst\x20float\x20outerRadius2\x20=\x20OUTER_RADIUS*OUTER_RADIUS;\x0d\x0aconst\x20float\x20innerRadius\x20=\x201.0;\x0d\x0aconst\x20float\x20innerRadius2\x20=\x201.0;\x0d\x0aconst\x20float\x20cameraHeight\x20=\x200.0001;\x0d\x0a\x0d\x0aconst\x20float\x20HDSundiskIntensityFactor\x20=\x2015.0;\x0d\x0aconst\x20float\x20simpleSundiskIntensityFactor\x20=\x2027.0;\x0d\x0a\x0d\x0aconst\x20float\x20sunScale\x20=\x20400.0\x20*\x20SUN_BRIGHTNESS;\x0d\x0aconst\x20float\x20kmESun\x20=\x20MIE\x20*\x20SUN_BRIGHTNESS;\x0d\x0aconst\x20float\x20km4PI\x20=\x20MIE\x20*\x204.0\x20*\x203.14159265;\x0d\x0aconst\x20float\x20scale\x20=\x201.0\x20/\x20(OUTER_RADIUS\x20-\x201.0);\x0d\x0aconst\x20float\x20scaleDepth\x20=\x200.25;\x0d\x0aconst\x20float\x20scaleOverScaleDepth\x20=\x20(1.0\x20/\x20(OUTER_RADIUS\x20-\x201.0))\x20/\x200.25;\x0d\x0aconst\x20float\x20samples\x20=\x202.0;\x20//\x20THIS\x20IS\x20UNROLLED\x20MANUALLY,\x20DON\x27T\x20TOUCH\x0d\x0a\x0d\x0a//\x20RGB\x20wavelengths\x20\x20\x20\x20\x20\x20\x20\x20.35\x20(.62=158),\x20.43\x20(.68=174),\x20.525\x20(.75=190)\x0d\x0aconst\x20vec3\x20c_DefaultScatteringWavelength\x20=\x20vec3(0.65,\x200.57,\x200.475);//默认散射波长\x0d\x0aconst\x20vec3\x20c_VariableRangeForScatteringWavelength\x20=\x20vec3(0.15,\x200.15,\x200.15);//散射播放的可变范围\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0auniform\x20mat4\x20u_ViewProjection;\x0d\x0auniform\x20vec3\x20u_SkyTint;\x0d\x0auniform\x20vec3\x20u_GroundTint;\x0d\x0auniform\x20float\x20u_Exposure;\x0d\x0auniform\x20float\x20u_AtmosphereThickness;\x0d\x0auniform\x20DirectionLight\x20u_SunLight;\x0d\x0a\x0d\x0avarying\x20vec3\x20v_GroundColor;\x0d\x0avarying\x20vec3\x20v_SkyColor;\x0d\x0a\x0d\x0a#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09varying\x20vec3\x20v_Vertex;\x0d\x0a#elif\x20defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_RayDir;\x0d\x0a#else\x0d\x0a\x09varying\x20float\x20v_SkyGroundFactor;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\x0d\x0a\x09varying\x20vec3\x20v_SunColor;\x0d\x0a#endif\x0d\x0a\x0d\x0a//\x20Calculates\x20the\x20Rayleigh\x20phase\x20function\x0d\x0afloat\x20getRayleighPhase(vec3\x20light,\x20vec3\x20ray)\x20\x0d\x0a{\x0d\x0a\x09float\x20eyeCos\x20=\x20dot(light,\x20ray);\x0d\x0a\x09return\x200.75\x20+\x200.75*eyeCos*eyeCos;\x0d\x0a}\x0d\x0a\x0d\x0afloat\x20scaleAngle(float\x20inCos)\x0d\x0a{\x0d\x0a\x09float\x20x\x20=\x201.0\x20-\x20inCos;\x0d\x0a\x09return\x200.25\x20*\x20exp(-0.00287\x20+\x20x*(0.459\x20+\x20x*(3.83\x20+\x20x*(-6.80\x20+\x20x*5.25))));\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main\x20()\x20{\x0d\x0a\x09gl_Position\x20=\x20u_ViewProjection*a_Position;\x0d\x0a\x0d\x0a\x09vec3\x20skyTintInGammaSpace\x20=\x20u_SkyTint;//支持非GAMMA空间后要调整\x0d\x0a\x09vec3\x20scatteringWavelength\x20=\x20mix(c_DefaultScatteringWavelength-c_VariableRangeForScatteringWavelength,c_DefaultScatteringWavelength+c_VariableRangeForScatteringWavelength,vec3(1.0)\x20-\x20skyTintInGammaSpace);\x20//\x20using\x20Tint\x20in\x20sRGB+\x20gamma\x20allows\x20for\x20more\x20visually\x20linear\x20interpolation\x20and\x20to\x20keep\x20(0.5)\x20at\x20(128,\x20gray\x20in\x20sRGB)\x20point\x0d\x0a\x09vec3\x20invWavelength\x20=\x201.0\x20/\x20pow(scatteringWavelength,\x20vec3(4.0));\x0d\x0a\x0d\x0a\x09float\x20krESun\x20=\x20RAYLEIGH\x20*\x20SUN_BRIGHTNESS;\x0d\x0a\x09float\x20kr4PI\x20=\x20RAYLEIGH\x20*\x204.0\x20*\x203.14159265;\x0d\x0a\x0d\x0a\x09vec3\x20cameraPos\x20=\x20vec3(0.0,innerRadius\x20+\x20cameraHeight,0.0);\x20//\x20The\x20camera\x27s\x20current\x20position\x0d\x0a\x0d\x0a\x09//\x20Get\x20the\x20ray\x20from\x20the\x20camera\x20to\x20the\x20vertex\x20and\x20its\x20length\x20(which\x20is\x20the\x20far\x20point\x20of\x20the\x20ray\x20passing\x20through\x20the\x20atmosphere)\x0d\x0a\x09vec3\x20eyeRay\x20=\x20normalize(a_Position.xyz);\x0d\x0a\x0d\x0a\x09float\x20far\x20=\x200.0;\x0d\x0a\x09vec3\x20cIn,\x20cOut;\x0d\x0a\x09if\x20(eyeRay.y\x20>=\x200.0)\x20{//\x20Sky\x0d\x0a\x09\x09//\x20Calculate\x20the\x20length\x20of\x20the\x20\x22atmosphere\x22\x0d\x0a\x09\x09far\x20=\x20sqrt(outerRadius2\x20+\x20innerRadius2\x20*\x20eyeRay.y\x20*\x20eyeRay.y\x20-\x20innerRadius2)\x20-\x20innerRadius\x20*\x20eyeRay.y;\x0d\x0a\x0d\x0a\x09\x09//\x20Calculate\x20the\x20ray\x27s\x20starting\x20position,\x20then\x20calculate\x20its\x20scattering\x20offset\x0d\x0a\x09\x09float\x20height\x20=\x20innerRadius\x20+\x20cameraHeight;\x0d\x0a\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20-cameraHeight);\x0d\x0a\x09\x09float\x20startAngle\x20=\x20dot(eyeRay,\x20cameraPos)\x20/\x20height;\x0d\x0a\x09\x09float\x20startOffset\x20=\x20depth*scaleAngle(startAngle);\x0d\x0a\x0d\x0a\x09\x09//\x20Initialize\x20the\x20scattering\x20loop\x20variables\x0d\x0a\x09\x09float\x20sampleLength\x20=\x20far\x20/\x20samples;\x0d\x0a\x09\x09float\x20scaledLength\x20=\x20sampleLength\x20*\x20scale;\x0d\x0a\x09\x09vec3\x20sampleRay\x20=\x20eyeRay\x20*\x20sampleLength;\x0d\x0a\x09\x09vec3\x20samplePoint\x20=\x20cameraPos\x20+\x20sampleRay\x20*\x200.5;\x0d\x0a\x0d\x0a\x09\x09vec3\x20frontColor\x20=\x20vec3(0.0);\x0d\x0a\x09\x09//unrolling\x20this\x20manually\x20to\x20avoid\x20some\x20platform\x20for\x20loop\x20slow\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09float\x20height\x20=\x20length(samplePoint);\x0d\x0a\x09\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20(innerRadius\x20-\x20height));\x0d\x0a\x09\x09\x09float\x20lightAngle\x20=\x20dot(-u_SunLight.direction,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20cameraAngle\x20=\x20dot(eyeRay,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20scatter\x20=\x20(startOffset\x20+\x20depth*(scaleAngle(lightAngle)\x20-\x20scaleAngle(cameraAngle)));\x0d\x0a\x09\x09\x09vec3\x20attenuate\x20=\x20exp(-clamp(scatter,\x200.0,\x20MAX_SCATTER)\x20*\x20(invWavelength\x20*\x20kr4PI\x20+\x20km4PI));\x0d\x0a\x0d\x0a\x09\x09\x09frontColor\x20+=\x20attenuate\x20*\x20(depth\x20*\x20scaledLength);\x0d\x0a\x09\x09\x09samplePoint\x20+=\x20sampleRay;\x0d\x0a\x09\x09}\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09float\x20height\x20=\x20length(samplePoint);\x0d\x0a\x09\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20(innerRadius\x20-\x20height));\x0d\x0a\x09\x09\x09float\x20lightAngle\x20=\x20dot(-u_SunLight.direction,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20cameraAngle\x20=\x20dot(eyeRay,\x20samplePoint)\x20/\x20height;\x0d\x0a\x09\x09\x09float\x20scatter\x20=\x20(startOffset\x20+\x20depth*(scaleAngle(lightAngle)\x20-\x20scaleAngle(cameraAngle)));\x0d\x0a\x09\x09\x09vec3\x20attenuate\x20=\x20exp(-clamp(scatter,\x200.0,\x20MAX_SCATTER)\x20*\x20(invWavelength\x20*\x20kr4PI\x20+\x20km4PI));\x0d\x0a\x0d\x0a\x09\x09\x09frontColor\x20+=\x20attenuate\x20*\x20(depth\x20*\x20scaledLength);\x0d\x0a\x09\x09\x09samplePoint\x20+=\x20sampleRay;\x0d\x0a\x09\x09}\x0d\x0a\x0d\x0a\x09\x09//\x20Finally,\x20scale\x20the\x20Mie\x20and\x20Rayleigh\x20colors\x20and\x20set\x20up\x20the\x20varying\x20variables\x20for\x20the\x20pixel\x20shader\x0d\x0a\x09\x09cIn\x20=\x20frontColor\x20*\x20(invWavelength\x20*\x20krESun);\x0d\x0a\x09\x09cOut\x20=\x20frontColor\x20*\x20kmESun;\x0d\x0a\x09}\x20else\x20{//\x20Ground\x0d\x0a\x09\x09far\x20=\x20(-cameraHeight)\x20/\x20(min(-0.001,\x20eyeRay.y));\x0d\x0a\x09\x09vec3\x20pos\x20=\x20cameraPos\x20+\x20far\x20*\x20eyeRay;\x0d\x0a\x0d\x0a\x09\x09//\x20Calculate\x20the\x20ray\x27s\x20starting\x20position,\x20then\x20calculate\x20its\x20scattering\x20offset\x0d\x0a\x09\x09float\x20depth\x20=\x20exp((-cameraHeight)\x20*\x20(1.0/scaleDepth));\x0d\x0a\x09\x09float\x20cameraAngle\x20=\x20dot(-eyeRay,\x20pos);\x0d\x0a\x09\x09float\x20lightAngle\x20=\x20dot(-u_SunLight.direction,\x20pos);\x0d\x0a\x09\x09float\x20cameraScale\x20=\x20scaleAngle(cameraAngle);\x0d\x0a\x09\x09float\x20lightScale\x20=\x20scaleAngle(lightAngle);\x0d\x0a\x09\x09float\x20cameraOffset\x20=\x20depth*cameraScale;\x0d\x0a\x09\x09float\x20temp\x20=\x20lightScale\x20+\x20cameraScale;\x0d\x0a\x0d\x0a\x09\x09//\x20Initialize\x20the\x20scattering\x20loop\x20variables\x0d\x0a\x09\x09float\x20sampleLength\x20=\x20far\x20/\x20samples;\x0d\x0a\x09\x09float\x20scaledLength\x20=\x20sampleLength\x20*\x20scale;\x0d\x0a\x09\x09vec3\x20sampleRay\x20=\x20eyeRay\x20*\x20sampleLength;\x0d\x0a\x09\x09vec3\x20samplePoint\x20=\x20cameraPos\x20+\x20sampleRay\x20*\x200.5;\x0d\x0a\x0d\x0a\x09\x09//\x20Now\x20loop\x20through\x20the\x20sample\x20rays\x0d\x0a\x09\x09vec3\x20frontColor\x20=\x20vec3(0.0,\x200.0,\x200.0);\x0d\x0a\x09\x09vec3\x20attenuate;\x0d\x0a\x0d\x0a\x09\x09//\x20Loop\x20removed\x20because\x20we\x20kept\x20hitting\x20SM2.0\x20temp\x20variable\x20limits.\x20Doesn\x27t\x20affect\x20the\x20image\x20too\x20much.\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09float\x20height\x20=\x20length(samplePoint);\x0d\x0a\x09\x09\x09float\x20depth\x20=\x20exp(scaleOverScaleDepth\x20*\x20(innerRadius\x20-\x20height));\x0d\x0a\x09\x09\x09float\x20scatter\x20=\x20depth*temp\x20-\x20cameraOffset;\x0d\x0a\x09\x09\x09attenuate\x20=\x20exp(-clamp(scatter,\x200.0,\x20MAX_SCATTER)\x20*\x20(invWavelength\x20*\x20kr4PI\x20+\x20km4PI));\x0d\x0a\x09\x09\x09frontColor\x20+=\x20attenuate\x20*\x20(depth\x20*\x20scaledLength);\x0d\x0a\x09\x09\x09samplePoint\x20+=\x20sampleRay;\x0d\x0a\x09\x09}\x0d\x0a\x0d\x0a\x09\x09cIn\x20=\x20frontColor\x20*\x20(invWavelength\x20*\x20krESun\x20+\x20kmESun);\x0d\x0a\x09\x09cOut\x20=\x20clamp(attenuate,\x200.0,\x201.0);\x0d\x0a\x09}\x0d\x0a\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x0d\x0a\x09\x09v_Vertex\x20=\x20-a_Position.xyz;\x0d\x0a\x09#elif\x20defined(SUN_SIMPLE)\x20\x0d\x0a\x09\x09v_RayDir\x20=\x20-eyeRay;\x0d\x0a\x09#else\x0d\x0a\x09\x09v_SkyGroundFactor\x20=\x20-eyeRay.y\x20/\x20SKY_GROUND_THRESHOLD;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09//\x20if\x20we\x20want\x20to\x20calculate\x20color\x20in\x20vprog:\x0d\x0a\x09//\x20in\x20case\x20of\x20linear:\x20multiply\x20by\x20_Exposure\x20in\x20here\x20(even\x20in\x20case\x20of\x20lerp\x20it\x20will\x20be\x20common\x20multiplier,\x20so\x20we\x20can\x20skip\x20mul\x20in\x20fshader)\x0d\x0a\x09v_GroundColor\x20=\x20u_Exposure\x20*\x20(cIn\x20+\x20u_GroundTint*u_GroundTint\x20*\x20cOut);//u_GroundColor*u_GroundColor\x20is\x20gamma\x20space\x20convert\x20to\x20linear\x20space\x0d\x0a\x09v_SkyColor\x20\x20\x20\x20=\x20u_Exposure\x20*\x20(cIn\x20*\x20getRayleighPhase(-u_SunLight.direction,\x20-eyeRay));\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09//\x20The\x20sun\x20should\x20have\x20a\x20stable\x20intensity\x20in\x20its\x20course\x20in\x20the\x20sky.\x20Moreover\x20it\x20should\x20match\x20the\x20highlight\x20of\x20a\x20purely\x20specular\x20material.\x0d\x0a\x09//\x20This\x20matching\x20was\x20done\x20using\x20the\x20Unity3D\x20standard\x20shader\x20BRDF1\x20on\x20the\x205/31/2017\x0d\x0a\x09//\x20Finally\x20we\x20want\x20the\x20sun\x20to\x20be\x20always\x20bright\x20even\x20in\x20LDR\x20thus\x20the\x20normalization\x20of\x20the\x20lightColor\x20for\x20low\x20intensity.\x0d\x0a\x09float\x20lightColorIntensity\x20=\x20clamp(length(u_SunLight.color),\x200.25,\x201.0);\x0d\x0a\x0d\x0a\x09#ifdef\x20SUN_HIGH_QUALITY\x20\x0d\x0a\x09\x09v_SunColor\x20=\x20HDSundiskIntensityFactor\x20*\x20clamp(cOut,0.0,1.0)\x20*\x20u_SunLight.color\x20/\x20lightColorIntensity;\x0d\x0a\x09#elif\x20defined(SUN_SIMPLE)\x20\x0d\x0a\x09\x09v_SunColor\x20=\x20simpleSundiskIntensityFactor\x20*\x20clamp(cOut\x20*\x20sunScale,0.0,1.0)\x20*\x20u_SunLight.color\x20/\x20lightColorIntensity;\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec3\x20a_Position;\x0d\x0aattribute\x20vec3\x20a_OffsetVector;\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0aattribute\x20float\x20a_Texcoord0X;\x0d\x0aattribute\x20float\x20a_Texcoord0Y;\x0d\x0aattribute\x20float\x20a_BirthTime;\x0d\x0a\x0d\x0auniform\x20mat4\x20u_View;\x0d\x0auniform\x20mat4\x20u_Projection;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0auniform\x20float\x20u_CurTime;\x0d\x0auniform\x20float\x20u_LifeTime;\x0d\x0auniform\x20vec4\x20u_WidthCurve[10];\x0d\x0auniform\x20int\x20u_WidthCurveKeyLength;\x0d\x0a\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0a\x0d\x0afloat\x20hermiteInterpolate(float\x20t,\x20float\x20outTangent,\x20float\x20inTangent,\x20float\x20duration,\x20float\x20value1,\x20float\x20value2)\x0d\x0a{\x0d\x0a\x09float\x20t2\x20=\x20t\x20*\x20t;\x0d\x0a\x09float\x20t3\x20=\x20t2\x20*\x20t;\x0d\x0a\x09float\x20a\x20=\x202.0\x20*\x20t3\x20-\x203.0\x20*\x20t2\x20+\x201.0;\x0d\x0a\x09float\x20b\x20=\x20t3\x20-\x202.0\x20*\x20t2\x20+\x20t;\x0d\x0a\x09float\x20c\x20=\x20t3\x20-\x20t2;\x0d\x0a\x09float\x20d\x20=\x20-2.0\x20*\x20t3\x20+\x203.0\x20*\x20t2;\x0d\x0a\x09return\x20a\x20*\x20value1\x20+\x20b\x20*\x20outTangent\x20*\x20duration\x20+\x20c\x20*\x20inTangent\x20*\x20duration\x20+\x20d\x20*\x20value2;\x0d\x0a}\x0d\x0a\x0d\x0afloat\x20getCurWidth(in\x20float\x20normalizeTime)\x0d\x0a{\x0d\x0a\x09float\x20width;\x0d\x0a\x09if(normalizeTime\x20==\x200.0){\x0d\x0a\x09\x09width=u_WidthCurve[0].w;\x0d\x0a\x09}\x0d\x0a\x09else\x20if(normalizeTime\x20>=\x201.0){\x0d\x0a\x09\x09width=u_WidthCurve[u_WidthCurveKeyLength\x20-\x201].w;\x0d\x0a\x09}\x0d\x0a\x09else{\x0d\x0a\x09\x09for(int\x20i\x20=\x200;\x20i\x20<\x2010;\x20i\x20++\x20)\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09if(normalizeTime\x20==\x20u_WidthCurve[i].x){\x0d\x0a\x09\x09\x09\x09width=u_WidthCurve[i].w;\x0d\x0a\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09vec4\x20lastFrame\x20=\x20u_WidthCurve[i];\x0d\x0a\x09\x09\x09vec4\x20nextFrame\x20=\x20u_WidthCurve[i\x20+\x201];\x0d\x0a\x09\x09\x09if(normalizeTime\x20>\x20lastFrame.x\x20&&\x20normalizeTime\x20<\x20nextFrame.x)\x0d\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09float\x20duration\x20=\x20nextFrame.x\x20-\x20lastFrame.x;\x0d\x0a\x09\x09\x09\x09float\x20t\x20=\x20(normalizeTime\x20-\x20lastFrame.x)\x20/\x20duration;\x0d\x0a\x09\x09\x09\x09float\x20outTangent\x20=\x20lastFrame.z;\x0d\x0a\x09\x09\x09\x09float\x20inTangent\x20=\x20nextFrame.y;\x0d\x0a\x09\x09\x09\x09float\x20value1\x20=\x20lastFrame.w;\x0d\x0a\x09\x09\x09\x09float\x20value2\x20=\x20nextFrame.w;\x0d\x0a\x09\x09\x09\x09width=hermiteInterpolate(t,\x20outTangent,\x20inTangent,\x20duration,\x20value1,\x20value2);\x0d\x0a\x09\x09\x09\x09break;\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09return\x20width;\x0d\x0a}\x09\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09float\x20normalizeTime\x20=\x20(u_CurTime\x20-\x20a_BirthTime)\x20/\x20u_LifeTime;\x0d\x0a\x09\x0d\x0a\x09v_Texcoord0\x20=\x20vec2(a_Texcoord0X,\x201.0\x20-\x20a_Texcoord0Y)\x20*\x20u_TilingOffset.xy\x20+\x20u_TilingOffset.zw;\x0d\x0a\x09\x0d\x0a\x09v_Color\x20=\x20a_Color;\x0d\x0a\x09\x0d\x0a\x09vec3\x20cameraPos\x20=\x20(u_View*vec4(a_Position,1.0)).rgb;\x0d\x0a\x09gl_Position\x20=\x20u_Projection\x20*\x20vec4(cameraPos+a_OffsetVector\x20*\x20getCurWidth(normalizeTime),1.0);\x0d\x0a\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09varying\x20vec4\x20v_Color;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_AlbedoTexture;\x0d\x0a\x09varying\x20vec2\x20v_Texcoord0;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_AlbedoColor;\x0d\x0a\x0d\x0a#ifdef\x20ALPHATEST\x0d\x0a\x09uniform\x20float\x20u_AlphaTestValue;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20FOG\x0d\x0a\x09uniform\x20float\x20u_FogStart;\x0d\x0a\x09uniform\x20float\x20u_FogRange;\x0d\x0a\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09#else\x0d\x0a\x09\x09uniform\x20vec3\x20u_FogColor;\x0d\x0a\x09#endif\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20color\x20=\x20\x20u_AlbedoColor;\x0d\x0a\x09#ifdef\x20ALBEDOTEXTURE\x0d\x0a\x09\x09color\x20*=\x20texture2D(u_AlbedoTexture,\x20v_Texcoord0);\x0d\x0a\x09#endif\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09color\x20*=\x20v_Color;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20ALPHATEST\x0d\x0a\x09\x09if(color.a\x20<\x20u_AlphaTestValue)\x0d\x0a\x09\x09\x09discard;\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a\x09\x0d\x0a\x09#ifdef\x20FOG\x0d\x0a\x09\x09float\x20lerpFact\x20=\x20clamp((1.0\x20/\x20gl_FragCoord.w\x20-\x20u_FogStart)\x20/\x20u_FogRange,\x200.0,\x201.0);\x0d\x0a\x09\x09#ifdef\x20ADDTIVEFOG\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20vec3(0.0),\x20lerpFact);\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09gl_FragColor.rgb\x20=\x20mix(gl_FragColor.rgb,\x20u_FogColor,\x20lerpFact);\x0d\x0a\x09\x09#endif\x0d\x0a\x09#endif\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a#include\x20\x22LayaUtile.glsl\x22;\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Position;\x0d\x0a\x0d\x0aattribute\x20vec2\x20a_Texcoord0;\x0d\x0a\x0d\x0a#ifdef\x20GPU_INSTANCE\x0d\x0a\x09uniform\x20mat4\x20u_ViewProjection;\x0d\x0a\x09attribute\x20mat4\x20a_WorldMat;\x0d\x0a#else\x0d\x0a\x09uniform\x20mat4\x20u_MvpMatrix;\x0d\x0a#endif\x0d\x0a\x0d\x0aattribute\x20vec4\x20a_Color;\x0d\x0avarying\x20vec4\x20v_Color;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0a\x0d\x0auniform\x20vec4\x20u_TilingOffset;\x0d\x0a\x0d\x0a#ifdef\x20BONE\x0d\x0a\x09const\x20int\x20c_MaxBoneCount\x20=\x2024;\x0d\x0a\x09attribute\x20vec4\x20a_BoneIndices;\x0d\x0a\x09attribute\x20vec4\x20a_BoneWeights;\x0d\x0a\x09uniform\x20mat4\x20u_Bones[c_MaxBoneCount];\x0d\x0a#endif\x0d\x0a\x0d\x0avoid\x20main()\x20{\x0d\x0a\x09vec4\x20position;\x0d\x0a\x09#ifdef\x20BONE\x0d\x0a\x09\x09mat4\x20skinTransform;\x0d\x0a\x09\x20\x09#ifdef\x20SIMPLEBONE\x0d\x0a\x09\x09\x09float\x20currentPixelPos;\x0d\x0a\x09\x09\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20a_SimpleTextureParams.x+a_SimpleTextureParams.y;\x0d\x0a\x09\x09\x09#else\x0d\x0a\x09\x09\x09\x09currentPixelPos\x20=\x20u_SimpleAnimatorParams.x+u_SimpleAnimatorParams.y;\x0d\x0a\x09\x09\x09#endif\x0d\x0a\x09\x09\x09float\x20offset\x20=\x201.0/u_SimpleAnimatorTextureSize;\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.x),offset)\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.y),offset)\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.z),offset)\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20loadMatFromTexture(currentPixelPos,int(a_BoneIndices.w),offset)\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#else\x0d\x0a\x09\x09\x09skinTransform\x20=\x20\x20u_Bones[int(a_BoneIndices.x)]\x20*\x20a_BoneWeights.x;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.y)]\x20*\x20a_BoneWeights.y;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.z)]\x20*\x20a_BoneWeights.z;\x0d\x0a\x09\x09\x09skinTransform\x20+=\x20u_Bones[int(a_BoneIndices.w)]\x20*\x20a_BoneWeights.w;\x0d\x0a\x09\x09#endif\x0d\x0a\x09\x09position=skinTransform*a_Position;\x0d\x0a\x09\x20#else\x0d\x0a\x09\x09position=a_Position;\x0d\x0a\x09#endif\x0d\x0a\x09#ifdef\x20GPU_INSTANCE\x0d\x0a\x09\x09gl_Position\x20=u_ViewProjection\x20*\x20a_WorldMat\x20*\x20position;\x0d\x0a\x09#else\x0d\x0a\x09\x09gl_Position\x20=\x20u_MvpMatrix\x20*\x20position;\x0d\x0a\x09#endif\x0d\x0a\x0d\x0a\x09v_Texcoord0=TransformUV(a_Texcoord0,u_TilingOffset);\x0d\x0a\x0d\x0a\x09#if\x20defined(COLOR)&&defined(ENABLEVERTEXCOLOR)\x0d\x0a\x09\x09v_Color\x20=\x20a_Color;\x0d\x0a\x09#endif\x0d\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0d\x0a}',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20MAINTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_MainTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0a#ifdef\x20NORMALTEXTURE\x0d\x0a\x09uniform\x20sampler2D\x20u_NormalTexture;\x0d\x0a#endif\x0d\x0a\x0d\x0auniform\x20vec4\x20u_HorizonColor;\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Normal;\x0d\x0avarying\x20vec3\x20v_Tangent;\x0d\x0avarying\x20vec3\x20v_Binormal;\x0d\x0avarying\x20vec3\x20v_ViewDir;\x0d\x0avarying\x20vec2\x20v_Texcoord0;\x0d\x0avarying\x20vec2\x20v_Texcoord1;\x0d\x0a\x0d\x0a\x0d\x0a#include\x20\x22Lighting.glsl\x22\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0avec3\x20NormalSampleToWorldSpace(vec4\x20normalMapSample)\x20{\x0d\x0a\x09vec3\x20normalT;\x0d\x0a\x09normalT.x\x20=\x202.0\x20*\x20normalMapSample.x\x20-\x201.0;\x0d\x0a\x09normalT.y\x20=\x201.0\x20-\x202.0\x20*\x20normalMapSample.y;\x0d\x0a\x09normalT.z\x20=\x20sqrt(1.0\x20-\x20clamp(dot(normalT.xy,\x20normalT.xy),\x200.0,\x201.0));\x0d\x0a\x0d\x0a\x09vec3\x20bumpedNormal\x20=\x20normalize(normalT);\x0d\x0a\x0d\x0a\x09return\x20bumpedNormal;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x0d\x0a\x09vec4\x20bumpColor1\x20=\x20texture2D(u_NormalTexture,\x20v_Texcoord0);\x0d\x0a\x09vec4\x20bumpColor2\x20=\x20texture2D(u_NormalTexture,\x20v_Texcoord1);\x0d\x0a\x0d\x0a\x09vec3\x20normal1\x20=\x20NormalSampleToWorldSpace(bumpColor1);\x0d\x0a\x09vec3\x20normal2\x20=\x20NormalSampleToWorldSpace(bumpColor2);\x0d\x0a\x09\x0d\x0a\x09vec3\x20normal\x20=\x20normalize((normal1\x20+\x20normal2)\x20*\x200.5);\x0d\x0a\x09vec3\x20viewDir\x20=\x20normalize(v_ViewDir);\x0d\x0a\x09float\x20fresnel\x20=\x20dot(viewDir,\x20normal);\x0d\x0a\x09\x0d\x0a\x09vec4\x20waterColor\x20=\x20texture2D(u_MainTexture,\x20vec2(fresnel,\x20fresnel));\x0d\x0a\x09\x0d\x0a\x09vec4\x20color;\x0d\x0a\x09color.rgb\x20=\x20mix(waterColor.rgb,\x20u_HorizonColor.rgb,\x20vec3(waterColor.a));\x0d\x0a\x09color.a\x20=\x20u_HorizonColor.a;\x0d\x0a\x09\x0d\x0a\x09gl_FragColor\x20=\x20color;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a',
        '#include\x20\x22Lighting.glsl\x22;\x0a\x0aattribute\x20vec4\x20a_Position;\x0aattribute\x20vec3\x20a_Normal;\x0aattribute\x20vec4\x20a_Tangent0;\x0a\x0auniform\x20mat4\x20u_MvpMatrix;\x0auniform\x20mat4\x20u_WorldMat;\x0auniform\x20vec3\x20u_CameraPos;\x0auniform\x20float\x20u_WaveScale;\x0auniform\x20vec4\x20u_WaveSpeed;\x0auniform\x20float\x20u_Time;\x0a\x0avarying\x20vec3\x20v_Normal;\x0avarying\x20vec3\x20v_Tangent;\x0avarying\x20vec3\x20v_Binormal;\x0avarying\x20vec3\x20v_ViewDir;\x0avarying\x20vec2\x20v_Texcoord0;\x0avarying\x20vec2\x20v_Texcoord1;\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20positionWorld\x20=\x20u_WorldMat\x20*\x20a_Position;\x0a\x09vec4\x20position\x20=\x20u_MvpMatrix\x20*\x20a_Position;\x0a\x09\x0a\x09vec4\x20temp\x20=\x20vec4(positionWorld.x,\x20positionWorld.z,\x20positionWorld.x,\x20positionWorld.z)\x20*\x20u_WaveScale\x20+\x20u_WaveSpeed\x20*\x20u_WaveScale\x20*\x20u_Time;\x0a\x09\x0a\x09v_Texcoord0\x20=\x20temp.xy\x20*\x20vec2(0.4,\x200.45);\x0a\x09v_Texcoord1\x20=\x20temp.wz;\x0a\x09\x0a\x09mat3\x20worldMat\x20=\x20mat3(u_WorldMat);\x0a\x09v_Normal\x20=\x20worldMat\x20*\x20a_Normal;\x0a\x09v_Tangent\x20=\x20worldMat\x20*\x20a_Tangent0.xyz;\x0a\x09v_Binormal\x20=\x20cross(v_Normal,\x20v_Tangent)\x20*\x20a_Tangent0.w;\x0a\x09\x0a\x09v_ViewDir\x20=\x20u_CameraPos\x20-\x20positionWorld.xyz;\x0a\x09gl_Position\x20=\x20position;\x0a\x09gl_Position=remapGLPositionZ(gl_Position);\x0a}',
        '#define\x20SAMPLE_DEPTH_TEXTURE(textureName,coord2)\x20(texture2D(textureName,coord2).r)\x0d\x0a//此方法库用来压缩解析深度贴图，法线深度贴图\x0d\x0a\x0d\x0a/*camera\x20传入的Texture以及*/\x0d\x0auniform\x20sampler2D\x20u_CameraDepthTexture;\x0d\x0auniform\x20vec4\x20u_ZBufferParams;\x0d\x0auniform\x20sampler2D\x20u_CameraDepthNormalsTexture;\x0d\x0a\x0d\x0a//\x20Encoding/decoding\x20view\x20space\x20normals\x20into\x202D\x200..1\x20vector\x0d\x0avec2\x20EncodeViewNormalStereo(\x20vec3\x20n\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20n.z\x20=\x20abs(n.z);\x0d\x0a\x20\x20\x20\x20float\x20kScale\x20=\x201.7777;\x0d\x0a\x20\x20\x20\x20vec2\x20enc;\x0d\x0a\x20\x20\x20\x20enc\x20=\x20n.xy\x20/\x20(n.z+1.0);\x0d\x0a\x20\x20\x20\x20enc\x20/=\x20kScale;\x0d\x0a\x20\x20\x20\x20enc\x20=\x20enc*0.5+0.5;\x0d\x0a\x20\x20\x20\x20return\x20enc;\x0d\x0a}\x0d\x0a\x0d\x0avec3\x20DecodeViewNormalStereo(\x20vec4\x20enc4\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20float\x20kScale\x20=\x201.7777;\x0d\x0a\x20\x20\x20\x20vec3\x20nn\x20=\x20enc4.xyz*vec3(2.0*kScale,2.0*kScale,0.0)\x20+\x20vec3(-kScale,-kScale,1.0);\x0d\x0a\x20\x20\x20\x20float\x20g\x20=\x202.0\x20/\x20dot(nn.xyz,nn.xyz);\x0d\x0a\x20\x20\x20\x20vec3\x20n;\x0d\x0a\x20\x20\x20\x20n.xy\x20=\x20g*nn.xy;\x0d\x0a\x20\x20\x20\x20n.z\x20=\x20g-1.0;\x0d\x0a\x20\x20\x20\x20return\x20n;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a//\x20Encoding/decoding\x20[0..1)\x20floats\x20into\x208\x20bit/channel\x20RG.\x20Note\x20that\x201.0\x20will\x20not\x20be\x20encoded\x20properly.\x0d\x0avec2\x20EncodeFloatRG(\x20float\x20v\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20vec2\x20kEncodeMul\x20=\x20vec2(1.0,\x20255.0);\x0d\x0a\x20\x20\x20\x20float\x20kEncodeBit\x20=\x201.0/255.0;\x0d\x0a\x20\x20\x20\x20vec2\x20enc\x20=\x20kEncodeMul\x20*\x20v;\x0d\x0a\x20\x20\x20\x20enc\x20=\x20fract(enc);\x0d\x0a\x20\x20\x20\x20enc.x\x20-=\x20enc.y\x20*\x20kEncodeBit;\x0d\x0a\x20\x20\x20\x20return\x20enc;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0afloat\x20DecodeFloatRG(\x20vec2\x20enc\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20vec2\x20kDecodeDot\x20=\x20vec2(1.0,\x201.0/255.0);\x0d\x0a\x20\x20\x20\x20return\x20dot(\x20enc,\x20kDecodeDot\x20);\x0d\x0a}\x0d\x0a\x0d\x0avec4\x20EncodeDepthNormal(float\x20depth,vec3\x20normals){\x0d\x0a\x09vec4\x20encode;\x0d\x0a\x09encode.xy\x20=\x20EncodeViewNormalStereo(normals);\x0d\x0a\x09encode.zw\x20=\x20EncodeFloatRG(depth);\x0d\x0a\x20\x20\x20\x20return\x20encode;\x0d\x0a}\x0d\x0a\x0d\x0avoid\x20DecodeDepthNormal(\x20vec4\x20enc,\x20out\x20float\x20depth,\x20out\x20vec3\x20normal\x20)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20depth\x20=\x20DecodeFloatRG\x20(enc.zw);\x0d\x0a\x20\x20\x20\x20normal\x20=\x20DecodeViewNormalStereo\x20(enc);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0avec4\x20depthNormalsFragment(vec4\x20depthNormal)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x20EncodeDepthNormal(depthNormal.w,depthNormal.xyz);\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a//\x20Z\x20buffer\x20to\x20linear\x200..1\x20depth\x0d\x0afloat\x20Linear01Depth(float\x20z,vec4\x20zbufferParams)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x201.0\x20/\x20(zbufferParams.x\x20*\x20z\x20+\x20zbufferParams.y);\x0d\x0a}\x0d\x0a//\x20Z\x20buffer\x20to\x20linear\x20depth\x0d\x0afloat\x20LinearEyeDepth(float\x20z,vec4\x20zbufferParams)\x0d\x0a{\x0d\x0a\x20\x20\x20\x20return\x201.0\x20/\x20(zbufferParams.z\x20*\x20z\x20+\x20zbufferParams.w);\x0d\x0a}\x0d\x0a',
        'GRAPHICS_API_GLES2',
        'GRAPHICS_API_GLES3',
        'addInclude',
        'Lighting.glsl',
        'ShadowSampleTent.glsl',
        'GlobalIllumination.glsl',
        'Shadow.glsl',
        'ShadowCasterVS.glsl',
        'ShadowCasterFS.glsl',
        'Colors.glsl',
        'Sampling.glsl',
        'StdLib.glsl',
        'PBRVSInput.glsl',
        'PBRFSInput.glsl',
        'LayaPBRBRDF.glsl',
        'PBRCore.glsl',
        'PBRVertex.glsl',
        'LayaUtile.glsl',
        'DepthNormalUtil.glsl',
        'Effect',
        'BlitScreen',
        'PostProcessBloom',
        'PostProcessComposite',
        '_shadowTwoCascadeSplits',
        'shadowTwoCascadeSplits',
        'shadowFourCascadeSplits',
        'DiretionLight:Invalid\x20value.',
        '_range',
        '_spotAngle',
        '_simpleAnimatorTexture',
        'simpleAnimatorTexture',
        '_simpleAnimatorTextureSize',
        'simpleAnimatorOffset',
        '_simpleAnimatorOffset',
        '_computeAnimatorParamsData',
        '_bonesNums',
        'SHADERDEFINE_SIMPLEBONE',
        '_simpleAnimatorParams',
        'simpleSkinnedMeshRenderer',
        'bonesNums',
        'Sprite3D',
        'MeshSprite3D',
        'SkinnedMeshSprite3D',
        'ShuriKenParticle3D',
        'TrailSprite3D',
        'ReflectionProbe',
        'Utils3D:unidentified\x20class\x20type\x20in\x20(.lh)\x20file.',
        'instanceID',
        '_createComponentInstance',
        'ClassUtils',
        'addComponent',
        '_createInteractInstance',
        'component',
        '_parseInteractive',
        'LAYAHIERARCHY:02',
        '_createNodeByJson',
        'LAYASCENE3D:02',
        '_createNodeByJson02',
        'components',
        'Unkown\x20component\x20type.',
        '_readData',
        'READ_',
        '_readString',
        'READ_MESH',
        '__getBuffer',
        'LAYAMODEL:0301',
        'LAYAMODEL:0400',
        'LAYAMODEL:0401',
        'LoadModelV03:\x20unknown\x20version.',
        'LoadModelV03:\x20unknown\x20vertexDeclaration.',
        'MESH_INSTANCEBUFFER_TYPE_NORMAL',
        'blockStarts',
        'LAYAMODEL:05',
        'LAYAMODEL:0501',
        'LAYAMODEL:COMPRESSION_05',
        'TANGENT',
        'byteLength',
        'LAYAMODEL:COMPRESSION_0501',
        '_inverseBindPosesBuffer',
        'READ_SUBMESH',
        'read',
        'MeshReader:\x20unknown\x20mesh\x20version.',
        '#if\x20defined(GL_FRAGMENT_PRECISION_HIGH)//\u00a0原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成\u00a0if\u00a0defined\u00a0了\x0d\x0a\x09precision\x20highp\x20float;\x0d\x0a#else\x0d\x0a\x09precision\x20mediump\x20float;\x0d\x0a#endif\x0d\x0a\x0d\x0a#define\x20PI\x203.14159265359\x0d\x0a#include\x20\x22Lighting.glsl\x22;\x0d\x0a\x0d\x0auniform\x20sampler2D\x20u_Texture;\x0d\x0auniform\x20vec4\x20u_TextureHDRParams;\x0d\x0auniform\x20vec4\x20u_TintColor;\x0d\x0a\x0d\x0avarying\x20vec3\x20v_Texcoord;\x0d\x0avarying\x20vec2\x20v_Image180ScaleAndCutoff;\x0d\x0avarying\x20vec4\x20v_Layout3DScaleAndOffset;\x0d\x0a\x0d\x0avec2\x20ToRadialCoords(vec3\x20coords)\x0d\x0a{\x0d\x0a\x09vec3\x20normalizedCoords\x20=\x20normalize(coords);\x0d\x0a\x09float\x20latitude\x20=\x20acos(normalizedCoords.y);\x0d\x0a\x09float\x20longitude\x20=\x20atan(normalizedCoords.z,normalizedCoords.x);\x0d\x0a\x09vec2\x20sphereCoords\x20=\x20vec2(longitude,\x20latitude)\x20*\x20vec2(0.5/PI,\x201.0/PI);\x0d\x0a\x09return\x20vec2(0.5,1.0)\x20-\x20sphereCoords;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0avoid\x20main()\x0d\x0a{\x09\x0d\x0a\x09vec2\x20tc\x20=\x20ToRadialCoords(v_Texcoord);\x0d\x0a\x09if\x20(tc.x\x20>\x20v_Image180ScaleAndCutoff.y)\x0d\x0a\x09\x09gl_FragColor=vec4(0,0,0,1);\x0d\x0a\x09tc.x\x20=\x20mod(tc.x*v_Image180ScaleAndCutoff.x,\x201.0);\x0d\x0a\x09tc\x20=\x20(tc\x20+\x20v_Layout3DScaleAndOffset.xy)\x20*\x20v_Layout3DScaleAndOffset.zw;\x0d\x0a\x0d\x0a\x09mediump\x20vec4\x20tex\x20=\x20texture2D\x20(u_Texture,\x20tc);\x0d\x0a\x09mediump\x20vec3\x20c\x20=\x20decodeHDR\x20(tex,\x20u_TextureHDRParams.x);\x0d\x0a\x09c\x20=\x20c\x20*\x20u_TintColor.rgb\x20*\x202.0;//Gamma\x20Space\x20is\x202.0,linear\x20space\x20is\x204.59479380\x0d\x0a\x09gl_FragColor=vec4(c,\x201.0);\x0d\x0a}\x0d\x0a\x0d\x0a',
        '#include\x20\x22Lighting.glsl\x22;\x0a\x0a#define\x20PI\x203.14159265359\x0a\x0aattribute\x20vec4\x20a_Position;\x0a\x0auniform\x20mat4\x20u_ViewProjection;\x0auniform\x20float\x20u_Rotation;\x0a\x0avarying\x20vec3\x20v_Texcoord;\x0avarying\x20vec2\x20v_Image180ScaleAndCutoff;\x0avarying\x20vec4\x20v_Layout3DScaleAndOffset;\x0a\x0avec4\x20rotateAroundYInDegrees\x20(vec4\x20vertex,\x20float\x20degrees)\x0a{\x0a\x09float\x20angle\x20=\x20degrees\x20*\x20PI\x20/\x20180.0;\x0a\x09float\x20sina=sin(angle);\x0a\x09float\x20cosa=cos(angle);\x0a\x09mat2\x20m\x20=\x20mat2(cosa,\x20-sina,\x20sina,\x20cosa);\x0a\x09return\x20vec4(m*vertex.xz,\x20vertex.yw).xzyw;\x0a}\x0a\x0a\x09\x09\x0avoid\x20main()\x0a{\x0a\x09vec4\x20position\x20=\x20rotateAroundYInDegrees(a_Position,\x20u_Rotation);\x0a\x09gl_Position\x20=\x20u_ViewProjection*position;\x0a\x0a\x09v_Texcoord=vec3(-a_Position.x,-a_Position.y,a_Position.z);//\x20NOTE:\x20-a_Position.x\x20convert\x20coords\x20system\x0a\x0a\x09//\x20Calculate\x20constant\x20horizontal\x20scale\x20and\x20cutoff\x20for\x20180\x20(vs\x20360)\x20image\x20type\x0a\x09v_Image180ScaleAndCutoff\x20=\x20vec2(1.0,\x201.0);//\x20360\x20degree\x20mode\x0a\x0a\x09//\x20Calculate\x20constant\x20scale\x20and\x20offset\x20for\x203D\x20layouts\x0a\x09v_Layout3DScaleAndOffset\x20=\x20vec4(0,0,1,1);\x0a}\x0a',
        '_exposure',
        '_textureDecodeFormat',
        '_textureHDRParams',
        'SkyPanoramic',
        'TEXTURE_HDR_PARAMS',
        '_rgbmRange',
        'TEXTURE',
        'panoramicTextureDecodeFormat',
        'u_TextureHDRParams',
        'enablePhysics',
        'cancelLoadByUrl',
        '_innerFirstLevelLoaderManager',
        '_innerSecondLevelLoaderManager',
        '_innerFourthLevelLoaderManager',
        '_changeWebGLSize',
        'onStageResize',
        'Config',
        'WebGL',
        'Laya3D\x20init\x20error,must\x20support\x20webGL!',
        'RunDriver',
        'changeWebGLSize',
        'is3DMode',
        'mainContext',
        'CommandEncoder',
        'R32G32B32A32',
        'enableNative3D',
        '__cannoninit__',
        'Laya.SkyPanoramicMaterial',
        'Laya.EffectMaterial',
        'regClass',
        'Laya.BlinnPhongMaterial',
        'Laya.SkyProceduralMaterial',
        'Laya.PBRStandardMaterial',
        'Laya.PBRSpecularMaterial',
        'Laya.WaterPrimaryMaterial',
        'Laya.ExtendTerrainMaterial',
        'Laya.ShurikenParticleMaterial',
        'Laya.TrailMaterial',
        'Laya.PhysicsCollider',
        'PhysicsCollider',
        'Laya.CharacterController',
        'Laya.Animator',
        'Animator',
        'FixedConstraint',
        'ConfigurableConstraint',
        '_parseScene',
        'lmat',
        'jpg',
        'TEXTURE2D',
        'jpeg',
        'png',
        'dds',
        'ktx',
        'lani',
        'ltc',
        'ltcb',
        '_parseBin',
        'lanit.ls',
        '_SimpleAnimatorTextureParse',
        '_loadHierarchy',
        '_loadMesh',
        '_loadMaterial',
        '_loadTextureCube',
        '_loadTextureCubeBin',
        '_loadTexture2D',
        '_loadAnimationClip',
        '_loadAvatar',
        'SIMPLEANIMATORBIN',
        '_eventLoadManagerError',
        'ERROR',
        'prototype',
        'setIntForNative',
        'getIntForNative',
        'setAttribute',
        'uploadShaderUniformsForNative',
        'formatRelativePath',
        '_endLoad',
        'endLoad',
        '_addHierarchyInnerUrls',
        'constructParams',
        'propertyParams',
        'skyboxMaterial',
        'SimpleSkinnedMeshSprite3D',
        'animatorTexture',
        'renderer',
        'Terrain',
        'TERRAINRES',
        'avatarPath',
        'shapes',
        'MeshColliderShape',
        '_originType',
        'LOADED',
        '_onHierarchylhLoaded',
        'getPath',
        '_onProcessChange',
        'Handler',
        '_onHierarchyInnerForthLevResouLoaded',
        '_innerThirdLevelLoaderManager',
        '_onHierarchyInnerThirdLevResouLoaded',
        '_onHierarchyInnerSecondLevResouLoaded',
        '_onHierarchyInnerFirstLevResouLoaded',
        '_cache',
        '_propertyParams',
        '_constructParams',
        '_onMeshLmLoaded',
        'BUFFER',
        '_createCache',
        '_onMaterilLmatLoaded',
        'JSON',
        'customProps',
        'LAYAMATERIAL:03',
        '_loadSimpleAnimator',
        'lastIndexOf',
        'bmp',
        'gif',
        'nativeimage',
        'KTXTEXTURE',
        'PVRTEXTURE',
        '_onTextureCubeLtcLoaded',
        'Laya3D:unknow\x20version.',
        'readUint8',
        'front',
        'down',
        '_onTextureCubeImagesLoaded',
        'PROGRESS',
        '_isInit',
        'BulletInteractive',
        '_interactive',
        'then',
        'TERRAINHEIGHTDATA',
        'TERRAIN',
        'CastShadowList:element\x20has\x20\x20in\x20\x20CastShadowList.',
        'isSingleton',
        'onTriggerEnter',
        'onTriggerStay',
        'onTriggerExit',
        '_checkProcessCollisions',
        'onCollisionEnter',
        'onCollisionStay',
        'onCollisionExit',
        '_onAwake',
        'onStart',
        '_onEnable',
        '_enableState',
        '_onDisable',
        '_checkProcessTriggers',
        'onDestroy',
        '_isScript',
        'onAwake',
        'onMouseDown',
        'onMouseOver',
        'onMouseOut',
        '_minHeight',
        '_tempRay',
        '_datas',
        'createFromImage',
        'getPixels',
        'maxHeight',
        'minHeight',
        '_inBounds',
        'getHeight',
        '_cellSize',
        'createFromMesh',
        '_initCreateFromMesh',
        'createFromMeshAndHeightMap',
        '_initCreateFromMeshHeightMap',
        'minX',
        '_minX',
        '_getScaleX',
        'minZ',
        '_minZ',
        '_heightMap',
        '_getScaleZ',
        '_disableRotation',
        'creatFromMesh',
        '_computeCellSize',
        'GradientDataVector2\x20warning:the\x20forth\x20key\x20is\x20\x20be\x20force\x20set\x20to\x201.',
        'GradientDataVector2\x20warning:data\x20count\x20must\x20lessEqual\x20than\x204',
        '_bloomTextureTexelSize',
        '_pyramid',
        '_shaderSetting',
        '_dirtTileOffset',
        'clamp',
        'fastMode',
        'dirtTexture',
        'MAXPYRAMIDSIZE'
    ];
    _0x3870 = function () {
        return _0x2d230c;
    };
    return _0x3870();
}