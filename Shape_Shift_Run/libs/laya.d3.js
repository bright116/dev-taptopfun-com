!function (_0x341b51, _0x33d6e0) {
    'use strict';
    class _0x183ae5 {
        constructor() {
        }
        static ['isZero'](_0x1c65d1) {
            return Math['abs'](_0x1c65d1) < _0x183ae5['zeroTolera' + 'nce'];
        }
        static ['nearEqual'](_0x445c27, _0x5a30d4) {
            return !!_0x183ae5['isZero'](_0x445c27 - _0x5a30d4);
        }
        static ['fastInvSqr' + 't'](_0x197241) {
            return _0x183ae5['isZero'](_0x197241) ? _0x197241 : 0x1 / Math['sqrt'](_0x197241);
        }
    }
    _0x183ae5['zeroTolera' + 'nce'] = 0.000001, _0x183ae5['MaxValue'] = 0xffffff048ff9e8000000000000000000, _0x183ae5['MinValue'] = -0xffffff048ff9e8000000000000000000;
    class _0x4c44b6 {
        constructor(_0x98d8f1 = 0x0, _0xf00e8e = 0x0) {
            this['x'] = _0x98d8f1, this['y'] = _0xf00e8e;
        }
        ['setValue'](_0x46216a, _0xcc863a) {
            this['x'] = _0x46216a, this['y'] = _0xcc863a;
        }
        static ['scale'](_0x5be9d4, _0x357da0, _0xbdb92c) {
            _0xbdb92c['x'] = _0x5be9d4['x'] * _0x357da0, _0xbdb92c['y'] = _0x5be9d4['y'] * _0x357da0;
        }
        ['fromArray'](_0x3c3a6c, _0x43d629 = 0x0) {
            this['x'] = _0x3c3a6c[_0x43d629 + 0x0], this['y'] = _0x3c3a6c[_0x43d629 + 0x1];
        }
        ['cloneTo'](_0x5a7299) {
            var _0x324c79 = _0x5a7299;
            _0x324c79['x'] = this['x'], _0x324c79['y'] = this['y'];
        }
        static ['dot'](_0xcb0e1c, _0x8df412) {
            return _0xcb0e1c['x'] * _0x8df412['x'] + _0xcb0e1c['y'] * _0x8df412['y'];
        }
        static ['normalize'](_0xd31838, _0x3da487) {
            var _0x337073 = _0xd31838['x'], _0xc824f8 = _0xd31838['y'], _0x423014 = _0x337073 * _0x337073 + _0xc824f8 * _0xc824f8;
            _0x423014 > 0x0 && (_0x423014 = 0x1 / Math['sqrt'](_0x423014), _0x3da487['x'] = _0x337073 * _0x423014, _0x3da487['y'] = _0xc824f8 * _0x423014);
        }
        static ['scalarLeng' + 'th'](_0x463269) {
            var _0x491fa1 = _0x463269['x'], _0x5cbe19 = _0x463269['y'];
            return Math['sqrt'](_0x491fa1 * _0x491fa1 + _0x5cbe19 * _0x5cbe19);
        }
        ['clone']() {
            var _0x513b21 = new _0x4c44b6();
            return this['cloneTo'](_0x513b21), _0x513b21;
        }
        ['forNativeE' + 'lement'](_0x7de4ec = null) {
            _0x7de4ec ? (this['elements'] = _0x7de4ec, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y']) : this['elements'] = new Float32Array([
                this['x'],
                this['y']
            ]), _0x4c44b6['rewriteNum' + 'Property'](this, 'x', 0x0), _0x4c44b6['rewriteNum' + 'Property'](this, 'y', 0x1);
        }
        static ['rewriteNum' + 'Property'](_0x304a38, _0x5232c0, _0x5f5d84) {
            Object['defineProp' + 'erty'](_0x304a38, _0x5232c0, {
                'get': function () {
                    return this['elements'][_0x5f5d84];
                },
                'set': function (_0x2bf5c0) {
                    this['elements'][_0x5f5d84] = _0x2bf5c0;
                }
            });
        }
    }
    _0x4c44b6['ZERO'] = new _0x4c44b6(0x0, 0x0), _0x4c44b6['ONE'] = new _0x4c44b6(0x1, 0x1);
    class _0x333f41 {
        constructor(_0x287239 = 0x0, _0x1982b7 = 0x0, _0x54fff0 = 0x0, _0x4295e3 = 0x0) {
            this['x'] = _0x287239, this['y'] = _0x1982b7, this['z'] = _0x54fff0, this['w'] = _0x4295e3;
        }
        ['setValue'](_0x10e272, _0x510431, _0x135d05, _0x46c3d1) {
            this['x'] = _0x10e272, this['y'] = _0x510431, this['z'] = _0x135d05, this['w'] = _0x46c3d1;
        }
        ['fromArray'](_0x4c782a, _0x3f92c1 = 0x0) {
            this['x'] = _0x4c782a[_0x3f92c1 + 0x0], this['y'] = _0x4c782a[_0x3f92c1 + 0x1], this['z'] = _0x4c782a[_0x3f92c1 + 0x2], this['w'] = _0x4c782a[_0x3f92c1 + 0x3];
        }
        ['cloneTo'](_0x572f00) {
            var _0x4e8406 = _0x572f00;
            _0x4e8406['x'] = this['x'], _0x4e8406['y'] = this['y'], _0x4e8406['z'] = this['z'], _0x4e8406['w'] = this['w'];
        }
        ['clone']() {
            var _0x1ca324 = new _0x333f41();
            return this['cloneTo'](_0x1ca324), _0x1ca324;
        }
        static ['lerp'](_0x28b29e, _0x440073, _0x4c0169, _0x50e6d6) {
            var _0x39e34f = _0x28b29e['x'], _0x1d9c44 = _0x28b29e['y'], _0x4fb015 = _0x28b29e['z'], _0x393388 = _0x28b29e['w'];
            _0x50e6d6['x'] = _0x39e34f + _0x4c0169 * (_0x440073['x'] - _0x39e34f), _0x50e6d6['y'] = _0x1d9c44 + _0x4c0169 * (_0x440073['y'] - _0x1d9c44), _0x50e6d6['z'] = _0x4fb015 + _0x4c0169 * (_0x440073['z'] - _0x4fb015), _0x50e6d6['w'] = _0x393388 + _0x4c0169 * (_0x440073['w'] - _0x393388);
        }
        static ['transformB' + 'yM4x4'](_0x432d8e, _0x4a9107, _0x12a87e) {
            var _0x41b547 = _0x432d8e['x'], _0x29fd6a = _0x432d8e['y'], _0x10da45 = _0x432d8e['z'], _0x5ab6a0 = _0x432d8e['w'], _0x58c802 = _0x4a9107['elements'];
            _0x12a87e['x'] = _0x41b547 * _0x58c802[0x0] + _0x29fd6a * _0x58c802[0x4] + _0x10da45 * _0x58c802[0x8] + _0x5ab6a0 * _0x58c802[0xc], _0x12a87e['y'] = _0x41b547 * _0x58c802[0x1] + _0x29fd6a * _0x58c802[0x5] + _0x10da45 * _0x58c802[0x9] + _0x5ab6a0 * _0x58c802[0xd], _0x12a87e['z'] = _0x41b547 * _0x58c802[0x2] + _0x29fd6a * _0x58c802[0x6] + _0x10da45 * _0x58c802[0xa] + _0x5ab6a0 * _0x58c802[0xe], _0x12a87e['w'] = _0x41b547 * _0x58c802[0x3] + _0x29fd6a * _0x58c802[0x7] + _0x10da45 * _0x58c802[0xb] + _0x5ab6a0 * _0x58c802[0xf];
        }
        static ['equals'](_0x26261d, _0x520bfd) {
            return _0x183ae5['nearEqual'](Math['abs'](_0x26261d['x']), Math['abs'](_0x520bfd['x'])) && _0x183ae5['nearEqual'](Math['abs'](_0x26261d['y']), Math['abs'](_0x520bfd['y'])) && _0x183ae5['nearEqual'](Math['abs'](_0x26261d['z']), Math['abs'](_0x520bfd['z'])) && _0x183ae5['nearEqual'](Math['abs'](_0x26261d['w']), Math['abs'](_0x520bfd['w']));
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x5ca869, _0x7d306) {
            var _0x438aa3 = _0x5ca869['length']();
            if (_0x438aa3 > 0x0) {
                var _0x598d33 = 0x1 / _0x438aa3;
                _0x7d306['x'] = _0x5ca869['x'] * _0x598d33, _0x7d306['y'] = _0x5ca869['y'] * _0x598d33, _0x7d306['z'] = _0x5ca869['z'] * _0x598d33, _0x7d306['w'] = _0x5ca869['w'] * _0x598d33;
            }
        }
        static ['add'](_0x31f793, _0x37d629, _0x4f628f) {
            _0x4f628f['x'] = _0x31f793['x'] + _0x37d629['x'], _0x4f628f['y'] = _0x31f793['y'] + _0x37d629['y'], _0x4f628f['z'] = _0x31f793['z'] + _0x37d629['z'], _0x4f628f['w'] = _0x31f793['w'] + _0x37d629['w'];
        }
        static ['subtract'](_0x30c501, _0xa189e1, _0x4b3f16) {
            _0x4b3f16['x'] = _0x30c501['x'] - _0xa189e1['x'], _0x4b3f16['y'] = _0x30c501['y'] - _0xa189e1['y'], _0x4b3f16['z'] = _0x30c501['z'] - _0xa189e1['z'], _0x4b3f16['w'] = _0x30c501['w'] - _0xa189e1['w'];
        }
        static ['multiply'](_0x4aeb62, _0x191911, _0x5e05f2) {
            _0x5e05f2['x'] = _0x4aeb62['x'] * _0x191911['x'], _0x5e05f2['y'] = _0x4aeb62['y'] * _0x191911['y'], _0x5e05f2['z'] = _0x4aeb62['z'] * _0x191911['z'], _0x5e05f2['w'] = _0x4aeb62['w'] * _0x191911['w'];
        }
        static ['scale'](_0x19b108, _0x30217d, _0x126857) {
            _0x126857['x'] = _0x19b108['x'] * _0x30217d, _0x126857['y'] = _0x19b108['y'] * _0x30217d, _0x126857['z'] = _0x19b108['z'] * _0x30217d, _0x126857['w'] = _0x19b108['w'] * _0x30217d;
        }
        static ['Clamp'](_0x55f49c, _0x28e4bf, _0x5ea3a4, _0x52db1b) {
            var _0x4b1a28 = _0x55f49c['x'], _0x3ec4e5 = _0x55f49c['y'], _0x39e91a = _0x55f49c['z'], _0x438042 = _0x55f49c['w'], _0x32ef03 = _0x28e4bf['x'], _0x2c6b41 = _0x28e4bf['y'], _0x3879cd = _0x28e4bf['z'], _0x2a2dbb = _0x28e4bf['w'], _0x1eb2c9 = _0x5ea3a4['x'], _0x2f5241 = _0x5ea3a4['y'], _0x251867 = _0x5ea3a4['z'], _0x16c5ae = _0x5ea3a4['w'];
            _0x4b1a28 = (_0x4b1a28 = _0x4b1a28 > _0x1eb2c9 ? _0x1eb2c9 : _0x4b1a28) < _0x32ef03 ? _0x32ef03 : _0x4b1a28, _0x3ec4e5 = (_0x3ec4e5 = _0x3ec4e5 > _0x2f5241 ? _0x2f5241 : _0x3ec4e5) < _0x2c6b41 ? _0x2c6b41 : _0x3ec4e5, _0x39e91a = (_0x39e91a = _0x39e91a > _0x251867 ? _0x251867 : _0x39e91a) < _0x3879cd ? _0x3879cd : _0x39e91a, _0x438042 = (_0x438042 = _0x438042 > _0x16c5ae ? _0x16c5ae : _0x438042) < _0x2a2dbb ? _0x2a2dbb : _0x438042, _0x52db1b['x'] = _0x4b1a28, _0x52db1b['y'] = _0x3ec4e5, _0x52db1b['z'] = _0x39e91a, _0x52db1b['w'] = _0x438042;
        }
        static ['distanceSq' + 'uared'](_0x40ccca, _0x15c930) {
            var _0x34d7f9 = _0x40ccca['x'] - _0x15c930['x'], _0x5a9f41 = _0x40ccca['y'] - _0x15c930['y'], _0x205e2e = _0x40ccca['z'] - _0x15c930['z'], _0x20dcac = _0x40ccca['w'] - _0x15c930['w'];
            return _0x34d7f9 * _0x34d7f9 + _0x5a9f41 * _0x5a9f41 + _0x205e2e * _0x205e2e + _0x20dcac * _0x20dcac;
        }
        static ['distance'](_0x38968c, _0x4d6e59) {
            var _0x31d102 = _0x38968c['x'] - _0x4d6e59['x'], _0x2077cf = _0x38968c['y'] - _0x4d6e59['y'], _0x3ed86c = _0x38968c['z'] - _0x4d6e59['z'], _0x417867 = _0x38968c['w'] - _0x4d6e59['w'];
            return Math['sqrt'](_0x31d102 * _0x31d102 + _0x2077cf * _0x2077cf + _0x3ed86c * _0x3ed86c + _0x417867 * _0x417867);
        }
        static ['dot'](_0x4fb1a8, _0x9cef97) {
            return _0x4fb1a8['x'] * _0x9cef97['x'] + _0x4fb1a8['y'] * _0x9cef97['y'] + _0x4fb1a8['z'] * _0x9cef97['z'] + _0x4fb1a8['w'] * _0x9cef97['w'];
        }
        static ['min'](_0x5cd7a2, _0x1bacbe, _0x3e8588) {
            _0x3e8588['x'] = Math['min'](_0x5cd7a2['x'], _0x1bacbe['x']), _0x3e8588['y'] = Math['min'](_0x5cd7a2['y'], _0x1bacbe['y']), _0x3e8588['z'] = Math['min'](_0x5cd7a2['z'], _0x1bacbe['z']), _0x3e8588['w'] = Math['min'](_0x5cd7a2['w'], _0x1bacbe['w']);
        }
        static ['max'](_0x35cb5e, _0x3fcd93, _0x451d8c) {
            _0x451d8c['x'] = Math['max'](_0x35cb5e['x'], _0x3fcd93['x']), _0x451d8c['y'] = Math['max'](_0x35cb5e['y'], _0x3fcd93['y']), _0x451d8c['z'] = Math['max'](_0x35cb5e['z'], _0x3fcd93['z']), _0x451d8c['w'] = Math['max'](_0x35cb5e['w'], _0x3fcd93['w']);
        }
        ['forNativeE' + 'lement'](_0x3b44f6 = null) {
            _0x3b44f6 ? (this['elements'] = _0x3b44f6, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z'], this['elements'][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x4c44b6['rewriteNum' + 'Property'](this, 'x', 0x0), _0x4c44b6['rewriteNum' + 'Property'](this, 'y', 0x1), _0x4c44b6['rewriteNum' + 'Property'](this, 'z', 0x2), _0x4c44b6['rewriteNum' + 'Property'](this, 'w', 0x3);
        }
    }
    _0x333f41['ZERO'] = new _0x333f41(), _0x333f41['ONE'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), _0x333f41['UnitX'] = new _0x333f41(0x1, 0x0, 0x0, 0x0), _0x333f41['UnitY'] = new _0x333f41(0x0, 0x1, 0x0, 0x0), _0x333f41['UnitZ'] = new _0x333f41(0x0, 0x0, 0x1, 0x0), _0x333f41['UnitW'] = new _0x333f41(0x0, 0x0, 0x0, 0x1);
    class _0x4795b3 {
        constructor(_0xc2d826 = 0x0, _0x28e97d = 0x0, _0x4ed7f1 = 0x0, _0x5ecfc2 = null) {
            this['x'] = _0xc2d826, this['y'] = _0x28e97d, this['z'] = _0x4ed7f1;
        }
        static ['distanceSq' + 'uared'](_0x431c8e, _0x51fbb7) {
            var _0x43498d = _0x431c8e['x'] - _0x51fbb7['x'], _0x3f0bf9 = _0x431c8e['y'] - _0x51fbb7['y'], _0x2a3151 = _0x431c8e['z'] - _0x51fbb7['z'];
            return _0x43498d * _0x43498d + _0x3f0bf9 * _0x3f0bf9 + _0x2a3151 * _0x2a3151;
        }
        static ['distance'](_0x4964f3, _0x14f076) {
            var _0x258084 = _0x4964f3['x'] - _0x14f076['x'], _0x2aa7cb = _0x4964f3['y'] - _0x14f076['y'], _0x18e76d = _0x4964f3['z'] - _0x14f076['z'];
            return Math['sqrt'](_0x258084 * _0x258084 + _0x2aa7cb * _0x2aa7cb + _0x18e76d * _0x18e76d);
        }
        static ['min'](_0x2d25a0, _0x39a26f, _0x5c086c) {
            _0x5c086c['x'] = Math['min'](_0x2d25a0['x'], _0x39a26f['x']), _0x5c086c['y'] = Math['min'](_0x2d25a0['y'], _0x39a26f['y']), _0x5c086c['z'] = Math['min'](_0x2d25a0['z'], _0x39a26f['z']);
        }
        static ['max'](_0x1a8ffe, _0x4746e1, _0x4b7c61) {
            _0x4b7c61['x'] = Math['max'](_0x1a8ffe['x'], _0x4746e1['x']), _0x4b7c61['y'] = Math['max'](_0x1a8ffe['y'], _0x4746e1['y']), _0x4b7c61['z'] = Math['max'](_0x1a8ffe['z'], _0x4746e1['z']);
        }
        static ['transformQ' + 'uat'](_0x596d4c, _0x3c17fe, _0x407b3e) {
            var _0x49bad0 = _0x596d4c['x'], _0x37e86e = _0x596d4c['y'], _0x2334e0 = _0x596d4c['z'], _0x1cb96c = _0x3c17fe['x'], _0x4bb03d = _0x3c17fe['y'], _0x5f2333 = _0x3c17fe['z'], _0x45b8f6 = _0x3c17fe['w'], _0x40a9b3 = _0x45b8f6 * _0x49bad0 + _0x4bb03d * _0x2334e0 - _0x5f2333 * _0x37e86e, _0x4c2d26 = _0x45b8f6 * _0x37e86e + _0x5f2333 * _0x49bad0 - _0x1cb96c * _0x2334e0, _0x44547a = _0x45b8f6 * _0x2334e0 + _0x1cb96c * _0x37e86e - _0x4bb03d * _0x49bad0, _0x3cf51d = -_0x1cb96c * _0x49bad0 - _0x4bb03d * _0x37e86e - _0x5f2333 * _0x2334e0;
            _0x407b3e['x'] = _0x40a9b3 * _0x45b8f6 + _0x3cf51d * -_0x1cb96c + _0x4c2d26 * -_0x5f2333 - _0x44547a * -_0x4bb03d, _0x407b3e['y'] = _0x4c2d26 * _0x45b8f6 + _0x3cf51d * -_0x4bb03d + _0x44547a * -_0x1cb96c - _0x40a9b3 * -_0x5f2333, _0x407b3e['z'] = _0x44547a * _0x45b8f6 + _0x3cf51d * -_0x5f2333 + _0x40a9b3 * -_0x4bb03d - _0x4c2d26 * -_0x1cb96c;
        }
        static ['scalarLeng' + 'th'](_0x8b3716) {
            var _0x10d5a1 = _0x8b3716['x'], _0x3336e8 = _0x8b3716['y'], _0x58f788 = _0x8b3716['z'];
            return Math['sqrt'](_0x10d5a1 * _0x10d5a1 + _0x3336e8 * _0x3336e8 + _0x58f788 * _0x58f788);
        }
        static ['scalarLeng' + 'thSquared'](_0x33edf6) {
            var _0x15411d = _0x33edf6['x'], _0x19269c = _0x33edf6['y'], _0x665b0f = _0x33edf6['z'];
            return _0x15411d * _0x15411d + _0x19269c * _0x19269c + _0x665b0f * _0x665b0f;
        }
        static ['normalize'](_0x35b012, _0x387c3f) {
            var _0x3432bc = _0x35b012['x'], _0x4305a9 = _0x35b012['y'], _0x107786 = _0x35b012['z'], _0x2181c3 = _0x3432bc * _0x3432bc + _0x4305a9 * _0x4305a9 + _0x107786 * _0x107786;
            _0x2181c3 > 0x0 && (_0x2181c3 = 0x1 / Math['sqrt'](_0x2181c3), _0x387c3f['x'] = _0x3432bc * _0x2181c3, _0x387c3f['y'] = _0x4305a9 * _0x2181c3, _0x387c3f['z'] = _0x107786 * _0x2181c3);
        }
        static ['multiply'](_0x53b4f7, _0x339094, _0x3b9624) {
            _0x3b9624['x'] = _0x53b4f7['x'] * _0x339094['x'], _0x3b9624['y'] = _0x53b4f7['y'] * _0x339094['y'], _0x3b9624['z'] = _0x53b4f7['z'] * _0x339094['z'];
        }
        static ['scale'](_0x3d34d1, _0x2fdc5d, _0x1b4ff1) {
            _0x1b4ff1['x'] = _0x3d34d1['x'] * _0x2fdc5d, _0x1b4ff1['y'] = _0x3d34d1['y'] * _0x2fdc5d, _0x1b4ff1['z'] = _0x3d34d1['z'] * _0x2fdc5d;
        }
        static ['lerp'](_0x45986b, _0x48089a, _0x2a4aff, _0x320736) {
            var _0x4eddcf = _0x45986b['x'], _0x37740b = _0x45986b['y'], _0x1442a1 = _0x45986b['z'];
            _0x320736['x'] = _0x4eddcf + _0x2a4aff * (_0x48089a['x'] - _0x4eddcf), _0x320736['y'] = _0x37740b + _0x2a4aff * (_0x48089a['y'] - _0x37740b), _0x320736['z'] = _0x1442a1 + _0x2a4aff * (_0x48089a['z'] - _0x1442a1);
        }
        static ['transformV' + '3ToV3'](_0x378862, _0x2cb0f8, _0x5e407a) {
            var _0x425dae = _0x4795b3['_tempVecto' + 'r4'];
            _0x4795b3['transformV' + '3ToV4'](_0x378862, _0x2cb0f8, _0x425dae), _0x5e407a['x'] = _0x425dae['x'], _0x5e407a['y'] = _0x425dae['y'], _0x5e407a['z'] = _0x425dae['z'];
        }
        static ['transformV' + '3ToV4'](_0x39888b, _0x43ada5, _0x42fd5c) {
            var _0x3bb6ed = _0x39888b['x'], _0x36daf8 = _0x39888b['y'], _0x35bc54 = _0x39888b['z'], _0x1cfc03 = _0x43ada5['elements'];
            _0x42fd5c['x'] = _0x3bb6ed * _0x1cfc03[0x0] + _0x36daf8 * _0x1cfc03[0x4] + _0x35bc54 * _0x1cfc03[0x8] + _0x1cfc03[0xc], _0x42fd5c['y'] = _0x3bb6ed * _0x1cfc03[0x1] + _0x36daf8 * _0x1cfc03[0x5] + _0x35bc54 * _0x1cfc03[0x9] + _0x1cfc03[0xd], _0x42fd5c['z'] = _0x3bb6ed * _0x1cfc03[0x2] + _0x36daf8 * _0x1cfc03[0x6] + _0x35bc54 * _0x1cfc03[0xa] + _0x1cfc03[0xe], _0x42fd5c['w'] = _0x3bb6ed * _0x1cfc03[0x3] + _0x36daf8 * _0x1cfc03[0x7] + _0x35bc54 * _0x1cfc03[0xb] + _0x1cfc03[0xf];
        }
        static ['TransformN' + 'ormal'](_0x2ce5c9, _0x1c99c0, _0x1f550) {
            var _0x4e2c58 = _0x2ce5c9['x'], _0x1ea7c6 = _0x2ce5c9['y'], _0x5a9ece = _0x2ce5c9['z'], _0x2538c9 = _0x1c99c0['elements'];
            _0x1f550['x'] = _0x4e2c58 * _0x2538c9[0x0] + _0x1ea7c6 * _0x2538c9[0x4] + _0x5a9ece * _0x2538c9[0x8], _0x1f550['y'] = _0x4e2c58 * _0x2538c9[0x1] + _0x1ea7c6 * _0x2538c9[0x5] + _0x5a9ece * _0x2538c9[0x9], _0x1f550['z'] = _0x4e2c58 * _0x2538c9[0x2] + _0x1ea7c6 * _0x2538c9[0x6] + _0x5a9ece * _0x2538c9[0xa];
        }
        static ['transformC' + 'oordinate'](_0x96ddde, _0x553e2c, _0x5e98a2) {
            var _0x46ab48 = _0x96ddde['x'], _0x3be9fa = _0x96ddde['y'], _0xac13b6 = _0x96ddde['z'], _0x5e466f = _0x553e2c['elements'], _0x198145 = _0x46ab48 * _0x5e466f[0x3] + _0x3be9fa * _0x5e466f[0x7] + _0xac13b6 * _0x5e466f[0xb] + _0x5e466f[0xf];
            _0x5e98a2['x'] = _0x46ab48 * _0x5e466f[0x0] + _0x3be9fa * _0x5e466f[0x4] + _0xac13b6 * _0x5e466f[0x8] + _0x5e466f[0xc] / _0x198145, _0x5e98a2['y'] = _0x46ab48 * _0x5e466f[0x1] + _0x3be9fa * _0x5e466f[0x5] + _0xac13b6 * _0x5e466f[0x9] + _0x5e466f[0xd] / _0x198145, _0x5e98a2['z'] = _0x46ab48 * _0x5e466f[0x2] + _0x3be9fa * _0x5e466f[0x6] + _0xac13b6 * _0x5e466f[0xa] + _0x5e466f[0xe] / _0x198145;
        }
        static ['Clamp'](_0x4cad8c, _0x48870d, _0x312fa1, _0x15b108) {
            var _0x508433 = _0x4cad8c['x'], _0x765d6 = _0x4cad8c['y'], _0x566ae9 = _0x4cad8c['z'], _0x53ccf6 = _0x48870d['x'], _0x1afbd7 = _0x48870d['y'], _0xf94035 = _0x48870d['z'], _0x4791ca = _0x312fa1['x'], _0x5419a7 = _0x312fa1['y'], _0x1aecd5 = _0x312fa1['z'];
            _0x508433 = (_0x508433 = _0x508433 > _0x4791ca ? _0x4791ca : _0x508433) < _0x53ccf6 ? _0x53ccf6 : _0x508433, _0x765d6 = (_0x765d6 = _0x765d6 > _0x5419a7 ? _0x5419a7 : _0x765d6) < _0x1afbd7 ? _0x1afbd7 : _0x765d6, _0x566ae9 = (_0x566ae9 = _0x566ae9 > _0x1aecd5 ? _0x1aecd5 : _0x566ae9) < _0xf94035 ? _0xf94035 : _0x566ae9, _0x15b108['x'] = _0x508433, _0x15b108['y'] = _0x765d6, _0x15b108['z'] = _0x566ae9;
        }
        static ['add'](_0x2b19ce, _0x2c5d4b, _0x4272f8) {
            _0x4272f8['x'] = _0x2b19ce['x'] + _0x2c5d4b['x'], _0x4272f8['y'] = _0x2b19ce['y'] + _0x2c5d4b['y'], _0x4272f8['z'] = _0x2b19ce['z'] + _0x2c5d4b['z'];
        }
        static ['subtract'](_0x2975fa, _0x3d37d7, _0x3fbf2d) {
            _0x3fbf2d['x'] = _0x2975fa['x'] - _0x3d37d7['x'], _0x3fbf2d['y'] = _0x2975fa['y'] - _0x3d37d7['y'], _0x3fbf2d['z'] = _0x2975fa['z'] - _0x3d37d7['z'];
        }
        static ['cross'](_0x32114f, _0x26a321, _0x753c7) {
            var _0x20e095 = _0x32114f['x'], _0x2d20ec = _0x32114f['y'], _0x2832be = _0x32114f['z'], _0x270f45 = _0x26a321['x'], _0x1c7f00 = _0x26a321['y'], _0x33bd75 = _0x26a321['z'];
            _0x753c7['x'] = _0x2d20ec * _0x33bd75 - _0x2832be * _0x1c7f00, _0x753c7['y'] = _0x2832be * _0x270f45 - _0x20e095 * _0x33bd75, _0x753c7['z'] = _0x20e095 * _0x1c7f00 - _0x2d20ec * _0x270f45;
        }
        static ['dot'](_0x3e8f98, _0x4e4187) {
            return _0x3e8f98['x'] * _0x4e4187['x'] + _0x3e8f98['y'] * _0x4e4187['y'] + _0x3e8f98['z'] * _0x4e4187['z'];
        }
        static ['equals'](_0x223c4b, _0x126fa5) {
            return _0x183ae5['nearEqual'](_0x223c4b['x'], _0x126fa5['x']) && _0x183ae5['nearEqual'](_0x223c4b['y'], _0x126fa5['y']) && _0x183ae5['nearEqual'](_0x223c4b['z'], _0x126fa5['z']);
        }
        ['setValue'](_0x566725, _0x4f7737, _0x5d8be4) {
            this['x'] = _0x566725, this['y'] = _0x4f7737, this['z'] = _0x5d8be4;
        }
        ['fromArray'](_0x2abc77, _0x265370 = 0x0) {
            this['x'] = _0x2abc77[_0x265370 + 0x0], this['y'] = _0x2abc77[_0x265370 + 0x1], this['z'] = _0x2abc77[_0x265370 + 0x2];
        }
        ['cloneTo'](_0xa7566d) {
            var _0x2bc215 = _0xa7566d;
            _0x2bc215['x'] = this['x'], _0x2bc215['y'] = this['y'], _0x2bc215['z'] = this['z'];
        }
        ['clone']() {
            var _0x43c385 = new _0x4795b3();
            return this['cloneTo'](_0x43c385), _0x43c385;
        }
        ['toDefault']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0;
        }
        ['forNativeE' + 'lement'](_0x249dec = null) {
            _0x249dec ? (this['elements'] = _0x249dec, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z']
            ]), _0x4c44b6['rewriteNum' + 'Property'](this, 'x', 0x0), _0x4c44b6['rewriteNum' + 'Property'](this, 'y', 0x1), _0x4c44b6['rewriteNum' + 'Property'](this, 'z', 0x2);
        }
    }
    _0x4795b3['_tempVecto' + 'r4'] = new _0x333f41(), _0x4795b3['_ZERO'] = new _0x4795b3(0x0, 0x0, 0x0), _0x4795b3['_ONE'] = new _0x4795b3(0x1, 0x1, 0x1), _0x4795b3['_NegativeU' + 'nitX'] = new _0x4795b3(-0x1, 0x0, 0x0), _0x4795b3['_UnitX'] = new _0x4795b3(0x1, 0x0, 0x0), _0x4795b3['_UnitY'] = new _0x4795b3(0x0, 0x1, 0x0), _0x4795b3['_UnitZ'] = new _0x4795b3(0x0, 0x0, 0x1), _0x4795b3['_ForwardRH'] = new _0x4795b3(0x0, 0x0, -0x1), _0x4795b3['_ForwardLH'] = new _0x4795b3(0x0, 0x0, 0x1), _0x4795b3['_Up'] = new _0x4795b3(0x0, 0x1, 0x0);
    class _0x237093 {
        constructor() {
            this['_defaultPh' + 'ysicsMemor' + 'y'] = 0x10, this['_maxLightC' + 'ount'] = 0x20, this['_lightClus' + 'terCount'] = new _0x4795b3(0xc, 0xc, 0xc), this['_editerEnv' + 'ironment'] = !0x1, this['isAntialia' + 's'] = !0x0, this['isAlpha'] = !0x1, this['premultipl' + 'iedAlpha'] = !0x0, this['isStencil'] = !0x0, this['enableMult' + 'iLight'] = !0x0, this['octreeCull' + 'ing'] = !0x1, this['octreeInit' + 'ialSize'] = 0x40, this['octreeInit' + 'ialCenter'] = new _0x4795b3(0x0, 0x0, 0x0), this['octreeMinN' + 'odeSize'] = 0x2, this['octreeLoos' + 'eness'] = 1.25, this['debugFrust' + 'umCulling'] = !0x1, this['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] = Math['min'](0x4 * Math['floor'](0x800 / this['_lightClus' + 'terCount']['z'] - 0x1), this['_maxLightC' + 'ount']);
        }
        get ['defaultPhy' + 'sicsMemory']() {
            return this['_defaultPh' + 'ysicsMemor' + 'y'];
        }
        set ['defaultPhy' + 'sicsMemory'](_0x5f2fe0) {
            if (_0x5f2fe0 < 0x10)
                throw 'defaultPhy' + 'sicsMemory' + '\x20must\x20larg' + 'e\x20than\x2016M';
            this['_defaultPh' + 'ysicsMemor' + 'y'] = _0x5f2fe0;
        }
        get ['maxLightCo' + 'unt']() {
            return this['_maxLightC' + 'ount'];
        }
        set ['maxLightCo' + 'unt'](_0x5cc190) {
            _0x5cc190 > 0x800 ? (this['_maxLightC' + 'ount'] = 0x800, console['warn']('Config3D:\x20' + 'maxLightCo' + 'unt\x20must\x20l' + 'ess\x20equal\x20' + '2048.')) : this['_maxLightC' + 'ount'] = _0x5cc190;
        }
        get ['lightClust' + 'erCount']() {
            return this['_lightClus' + 'terCount'];
        }
        set ['lightClust' + 'erCount'](_0x341f40) {
            _0x341f40['x'] > 0x80 || _0x341f40['y'] > 0x80 || _0x341f40['z'] > 0x80 ? (this['_lightClus' + 'terCount']['setValue'](Math['min'](_0x341f40['x'], 0x80), Math['min'](_0x341f40['y'], 0x80), Math['min'](_0x341f40['z'], 0x80)), console['warn']('Config3D:\x20' + 'lightClust' + 'erCount\x20X\x20' + 'and\x20Y、Z\x20mu' + 'st\x20less\x20eq' + 'ual\x20128.')) : _0x341f40['cloneTo'](this['_lightClus' + 'terCount']);
            var _0x229c9c = 0x4 * Math['floor'](0x800 / this['_lightClus' + 'terCount']['z'] - 0x1);
            _0x229c9c < this['_maxLightC' + 'ount'] && console['warn']('Config3D:\x20' + 'if\x20the\x20are' + 'a\x20light(Po' + 'intLight、S' + 'potLight)\x20' + 'count\x20is\x20l' + 'arge\x20than\x20' + _0x229c9c + (',maybe\x20the' + '\x20far\x20away\x20' + 'culster\x20wi' + 'll\x20ingonre' + '\x20some\x20ligh' + 't.')), this['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] = Math['min'](_0x229c9c, this['_maxLightC' + 'ount']);
        }
        ['cloneTo'](_0x45294f) {
            var _0x38812b = _0x45294f;
            _0x38812b['_defaultPh' + 'ysicsMemor' + 'y'] = this['_defaultPh' + 'ysicsMemor' + 'y'], _0x38812b['_editerEnv' + 'ironment'] = this['_editerEnv' + 'ironment'], _0x38812b['isAntialia' + 's'] = this['isAntialia' + 's'], _0x38812b['isAlpha'] = this['isAlpha'], _0x38812b['premultipl' + 'iedAlpha'] = this['premultipl' + 'iedAlpha'], _0x38812b['isStencil'] = this['isStencil'], _0x38812b['octreeCull' + 'ing'] = this['octreeCull' + 'ing'], this['octreeInit' + 'ialCenter']['cloneTo'](_0x38812b['octreeInit' + 'ialCenter']), _0x38812b['octreeInit' + 'ialSize'] = this['octreeInit' + 'ialSize'], _0x38812b['octreeMinN' + 'odeSize'] = this['octreeMinN' + 'odeSize'], _0x38812b['octreeLoos' + 'eness'] = this['octreeLoos' + 'eness'], _0x38812b['debugFrust' + 'umCulling'] = this['debugFrust' + 'umCulling'], _0x38812b['maxLightCo' + 'unt'] = this['maxLightCo' + 'unt'], _0x38812b['enableMult' + 'iLight'] = this['enableMult' + 'iLight'];
            var _0x5566a9 = _0x38812b['lightClust' + 'erCount'];
            this['lightClust' + 'erCount']['cloneTo'](_0x5566a9), _0x38812b['lightClust' + 'erCount'] = _0x5566a9;
        }
        ['clone']() {
            var _0x5d2633 = new _0x237093();
            return this['cloneTo'](_0x5d2633), _0x5d2633;
        }
    }
    _0x237093['_config'] = new _0x237093(), window['Config3D'] = _0x237093;
    class _0x334864 {
    }
    _0x334864['Shader3D'] = null, _0x334864['Scene3D'] = null, _0x334864['MeshRender' + 'StaticBatc' + 'hManager'] = null, _0x334864['MeshRender' + 'DynamicBat' + 'chManager'] = null, _0x334864['SubMeshDyn' + 'amicBatch'] = null, _0x334864['Laya3D'] = null, _0x334864['Matrix4x4'] = null;
    class _0x505044 {
        constructor() {
            this['_ownerPath'] = [], this['_propertys'] = [], this['_keyFrames'] = [];
        }
        get ['ownerPathC' + 'ount']() {
            return this['_ownerPath']['length'];
        }
        get ['propertyCo' + 'unt']() {
            return this['_propertys']['length'];
        }
        get ['keyFramesC' + 'ount']() {
            return this['_keyFrames']['length'];
        }
        ['_setOwnerP' + 'athCount'](_0x2b9196) {
            this['_ownerPath']['length'] = _0x2b9196;
        }
        ['_setOwnerP' + 'athByIndex'](_0x2cdfc8, _0x50cf62) {
            this['_ownerPath'][_0x2cdfc8] = _0x50cf62;
        }
        ['_joinOwner' + 'Path'](_0x25ee1a) {
            return this['_ownerPath']['join'](_0x25ee1a);
        }
        ['_setProper' + 'tyCount'](_0x276e6d) {
            this['_propertys']['length'] = _0x276e6d;
        }
        ['_setProper' + 'tyByIndex'](_0x56099c, _0x224fc7) {
            this['_propertys'][_0x56099c] = _0x224fc7;
        }
        ['_joinPrope' + 'rty'](_0x595888) {
            return this['_propertys']['join'](_0x595888);
        }
        ['_setKeyfra' + 'meCount'](_0xc97736) {
            this['_keyFrames']['length'] = _0xc97736;
        }
        ['_setKeyfra' + 'meByIndex'](_0x44da06, _0x1fa05b) {
            this['_keyFrames'][_0x44da06] = _0x1fa05b;
        }
        ['getOwnerPa' + 'thByIndex'](_0xfd6b93) {
            return this['_ownerPath'][_0xfd6b93];
        }
        ['getPropert' + 'yByIndex'](_0x44ef26) {
            return this['_propertys'][_0x44ef26];
        }
        ['getKeyfram' + 'eByIndex'](_0x23bf1c) {
            return this['_keyFrames'][_0x23bf1c];
        }
    }
    class _0x1104b7 {
        constructor() {
        }
    }
    class _0x57092c {
        constructor() {
        }
        ['cloneTo'](_0x428bd2) {
            _0x428bd2['time'] = this['time'];
        }
        ['clone']() {
            var _0x41105b = new _0x57092c();
            return this['cloneTo'](_0x41105b), _0x41105b;
        }
    }
    class _0x157523 extends _0x57092c {
        constructor() {
            super();
        }
        ['cloneTo'](_0x37ad0a) {
            super['cloneTo'](_0x37ad0a);
            var _0x1c26f4 = _0x37ad0a;
            _0x1c26f4['inTangent'] = this['inTangent'], _0x1c26f4['outTangent'] = this['outTangent'], _0x1c26f4['value'] = this['value'];
        }
    }
    class _0x25d419 {
        constructor() {
            var _0x4c74df = this['elements'] = new Float32Array(0x9);
            _0x4c74df[0x0] = 0x1, _0x4c74df[0x1] = 0x0, _0x4c74df[0x2] = 0x0, _0x4c74df[0x3] = 0x0, _0x4c74df[0x4] = 0x1, _0x4c74df[0x5] = 0x0, _0x4c74df[0x6] = 0x0, _0x4c74df[0x7] = 0x0, _0x4c74df[0x8] = 0x1;
        }
        static ['createRota' + 'tionQuater' + 'nion'](_0x60b72a, _0x419d74) {
            var _0x3d2be4 = _0x60b72a['x'], _0x4112e7 = _0x60b72a['y'], _0x31e150 = _0x60b72a['z'], _0x51b825 = _0x60b72a['w'], _0x1bb2aa = _0x3d2be4 * _0x3d2be4, _0x1cdad7 = _0x4112e7 * _0x4112e7, _0x25bb04 = _0x31e150 * _0x31e150, _0x222253 = _0x3d2be4 * _0x4112e7, _0x34e75b = _0x31e150 * _0x51b825, _0x563332 = _0x31e150 * _0x3d2be4, _0x1ab5c7 = _0x4112e7 * _0x51b825, _0x28c430 = _0x4112e7 * _0x31e150, _0x57ce56 = _0x3d2be4 * _0x51b825, _0x220962 = _0x419d74['elements'];
            _0x220962[0x0] = 0x1 - 0x2 * (_0x1cdad7 + _0x25bb04), _0x220962[0x1] = 0x2 * (_0x222253 + _0x34e75b), _0x220962[0x2] = 0x2 * (_0x563332 - _0x1ab5c7), _0x220962[0x3] = 0x2 * (_0x222253 - _0x34e75b), _0x220962[0x4] = 0x1 - 0x2 * (_0x25bb04 + _0x1bb2aa), _0x220962[0x5] = 0x2 * (_0x28c430 + _0x57ce56), _0x220962[0x6] = 0x2 * (_0x563332 + _0x1ab5c7), _0x220962[0x7] = 0x2 * (_0x28c430 - _0x57ce56), _0x220962[0x8] = 0x1 - 0x2 * (_0x1cdad7 + _0x1bb2aa);
        }
        static ['createFrom' + 'Translatio' + 'n'](_0x199516, _0x1cc00a) {
            var _0x2b713c = _0x1cc00a['elements'];
            _0x2b713c[0x0] = 0x1, _0x2b713c[0x1] = 0x0, _0x2b713c[0x2] = 0x0, _0x2b713c[0x3] = 0x0, _0x2b713c[0x4] = 0x1, _0x2b713c[0x5] = 0x0, _0x2b713c[0x6] = _0x199516['x'], _0x2b713c[0x7] = _0x199516['y'], _0x2b713c[0x8] = 0x1;
        }
        static ['createFrom' + 'Rotation'](_0x4441dc, _0x2b4f72) {
            var _0x1f335e = _0x2b4f72['elements'], _0x3001e1 = Math['sin'](_0x4441dc), _0x5efe9b = Math['cos'](_0x4441dc);
            _0x1f335e[0x0] = _0x5efe9b, _0x1f335e[0x1] = _0x3001e1, _0x1f335e[0x2] = 0x0, _0x1f335e[0x3] = -_0x3001e1, _0x1f335e[0x4] = _0x5efe9b, _0x1f335e[0x5] = 0x0, _0x1f335e[0x6] = 0x0, _0x1f335e[0x7] = 0x0, _0x1f335e[0x8] = 0x1;
        }
        static ['createFrom' + 'Scaling'](_0x1877fe, _0x45350c) {
            var _0xeaee18 = _0x45350c['elements'];
            _0xeaee18[0x0] = _0x1877fe['x'], _0xeaee18[0x1] = 0x0, _0xeaee18[0x2] = 0x0, _0xeaee18[0x3] = 0x0, _0xeaee18[0x4] = _0x1877fe['y'], _0xeaee18[0x5] = 0x0, _0xeaee18[0x6] = 0x0, _0xeaee18[0x7] = 0x0, _0xeaee18[0x8] = _0x1877fe['z'];
        }
        static ['createFrom' + 'Matrix4x4'](_0x17b0bb, _0x36634f) {
            var _0x3588ec = _0x17b0bb['elements'], _0x4853eb = _0x36634f['elements'];
            _0x4853eb[0x0] = _0x3588ec[0x0], _0x4853eb[0x1] = _0x3588ec[0x1], _0x4853eb[0x2] = _0x3588ec[0x2], _0x4853eb[0x3] = _0x3588ec[0x4], _0x4853eb[0x4] = _0x3588ec[0x5], _0x4853eb[0x5] = _0x3588ec[0x6], _0x4853eb[0x6] = _0x3588ec[0x8], _0x4853eb[0x7] = _0x3588ec[0x9], _0x4853eb[0x8] = _0x3588ec[0xa];
        }
        static ['multiply'](_0x57b507, _0x8ae0e0, _0x55cb49) {
            var _0x2eb62d = _0x57b507['elements'], _0x120cdd = _0x8ae0e0['elements'], _0xe09ab9 = _0x55cb49['elements'], _0x51532a = _0x2eb62d[0x0], _0x95ad24 = _0x2eb62d[0x1], _0x2a3cda = _0x2eb62d[0x2], _0x557d19 = _0x2eb62d[0x3], _0x4b4c27 = _0x2eb62d[0x4], _0x3e3701 = _0x2eb62d[0x5], _0x4fc903 = _0x2eb62d[0x6], _0x2c51b3 = _0x2eb62d[0x7], _0x1000db = _0x2eb62d[0x8], _0x59d0f8 = _0x120cdd[0x0], _0x1b95cd = _0x120cdd[0x1], _0x60e173 = _0x120cdd[0x2], _0x50dd97 = _0x120cdd[0x3], _0x313131 = _0x120cdd[0x4], _0x2a5d49 = _0x120cdd[0x5], _0x1ff3e7 = _0x120cdd[0x6], _0x7ae7a7 = _0x120cdd[0x7], _0x1aba4c = _0x120cdd[0x8];
            _0xe09ab9[0x0] = _0x59d0f8 * _0x51532a + _0x1b95cd * _0x557d19 + _0x60e173 * _0x4fc903, _0xe09ab9[0x1] = _0x59d0f8 * _0x95ad24 + _0x1b95cd * _0x4b4c27 + _0x60e173 * _0x7ae7a7, _0xe09ab9[0x2] = _0x59d0f8 * _0x2a3cda + _0x1b95cd * _0x3e3701 + _0x60e173 * _0x1000db, _0xe09ab9[0x3] = _0x50dd97 * _0x51532a + _0x313131 * _0x557d19 + _0x2a5d49 * _0x4fc903, _0xe09ab9[0x4] = _0x50dd97 * _0x95ad24 + _0x313131 * _0x4b4c27 + _0x2a5d49 * _0x2c51b3, _0xe09ab9[0x5] = _0x50dd97 * _0x2a3cda + _0x313131 * _0x3e3701 + _0x2a5d49 * _0x1000db, _0xe09ab9[0x6] = _0x1ff3e7 * _0x51532a + _0x7ae7a7 * _0x557d19 + _0x1aba4c * _0x4fc903, _0xe09ab9[0x7] = _0x1ff3e7 * _0x95ad24 + _0x7ae7a7 * _0x4b4c27 + _0x1aba4c * _0x2c51b3, _0xe09ab9[0x8] = _0x1ff3e7 * _0x2a3cda + _0x7ae7a7 * _0x3e3701 + _0x1aba4c * _0x1000db;
        }
        ['determinan' + 't']() {
            var _0x203e92 = this['elements'], _0x76afcb = _0x203e92[0x0], _0x4d1f72 = _0x203e92[0x1], _0x3fbd16 = _0x203e92[0x2], _0x52ebda = _0x203e92[0x3], _0x48f250 = _0x203e92[0x4], _0x18feed = _0x203e92[0x5], _0x5f344a = _0x203e92[0x6], _0x3cffc0 = _0x203e92[0x7], _0x22f755 = _0x203e92[0x8];
            return _0x76afcb * (_0x22f755 * _0x48f250 - _0x18feed * _0x3cffc0) + _0x4d1f72 * (-_0x22f755 * _0x52ebda + _0x18feed * _0x5f344a) + _0x3fbd16 * (_0x3cffc0 * _0x52ebda - _0x48f250 * _0x5f344a);
        }
        ['translate'](_0x10cf03, _0x4625c4) {
            var _0x10eb8c = _0x4625c4['elements'], _0x46c73a = this['elements'], _0x469cfd = _0x46c73a[0x0], _0x270f61 = _0x46c73a[0x1], _0x50a247 = _0x46c73a[0x2], _0xa5f839 = _0x46c73a[0x3], _0x261a1b = _0x46c73a[0x4], _0x5c721c = _0x46c73a[0x5], _0x4533f7 = _0x46c73a[0x6], _0x538d90 = _0x46c73a[0x7], _0x1aec2f = _0x46c73a[0x8], _0x1a3764 = _0x10cf03['x'], _0x1301e6 = _0x10cf03['y'];
            _0x10eb8c[0x0] = _0x469cfd, _0x10eb8c[0x1] = _0x270f61, _0x10eb8c[0x2] = _0x50a247, _0x10eb8c[0x3] = _0xa5f839, _0x10eb8c[0x4] = _0x261a1b, _0x10eb8c[0x5] = _0x5c721c, _0x10eb8c[0x6] = _0x1a3764 * _0x469cfd + _0x1301e6 * _0xa5f839 + _0x4533f7, _0x10eb8c[0x7] = _0x1a3764 * _0x270f61 + _0x1301e6 * _0x261a1b + _0x538d90, _0x10eb8c[0x8] = _0x1a3764 * _0x50a247 + _0x1301e6 * _0x5c721c + _0x1aec2f;
        }
        ['rotate'](_0x485d14, _0x2618bb) {
            var _0x30cb0d = _0x2618bb['elements'], _0x59d8c6 = this['elements'], _0x3c62bb = _0x59d8c6[0x0], _0x112780 = _0x59d8c6[0x1], _0x21f75d = _0x59d8c6[0x2], _0x1c07fd = _0x59d8c6[0x3], _0x5429be = _0x59d8c6[0x4], _0x2fcaaa = _0x59d8c6[0x5], _0x526b1c = _0x59d8c6[0x6], _0x3b619e = _0x59d8c6[0x7], _0x54de1a = _0x59d8c6[0x8], _0x14dfd2 = Math['sin'](_0x485d14), _0x42141b = Math['cos'](_0x485d14);
            _0x30cb0d[0x0] = _0x42141b * _0x3c62bb + _0x14dfd2 * _0x1c07fd, _0x30cb0d[0x1] = _0x42141b * _0x112780 + _0x14dfd2 * _0x5429be, _0x30cb0d[0x2] = _0x42141b * _0x21f75d + _0x14dfd2 * _0x2fcaaa, _0x30cb0d[0x3] = _0x42141b * _0x1c07fd - _0x14dfd2 * _0x3c62bb, _0x30cb0d[0x4] = _0x42141b * _0x5429be - _0x14dfd2 * _0x112780, _0x30cb0d[0x5] = _0x42141b * _0x2fcaaa - _0x14dfd2 * _0x21f75d, _0x30cb0d[0x6] = _0x526b1c, _0x30cb0d[0x7] = _0x3b619e, _0x30cb0d[0x8] = _0x54de1a;
        }
        ['scale'](_0x479e9c, _0x42e71d) {
            var _0x7e9a54 = _0x42e71d['elements'], _0x357a94 = this['elements'], _0x326cd0 = _0x479e9c['x'], _0xe31258 = _0x479e9c['y'];
            _0x7e9a54[0x0] = _0x326cd0 * _0x357a94[0x0], _0x7e9a54[0x1] = _0x326cd0 * _0x357a94[0x1], _0x7e9a54[0x2] = _0x326cd0 * _0x357a94[0x2], _0x7e9a54[0x3] = _0xe31258 * _0x357a94[0x3], _0x7e9a54[0x4] = _0xe31258 * _0x357a94[0x4], _0x7e9a54[0x5] = _0xe31258 * _0x357a94[0x5], _0x7e9a54[0x6] = _0x357a94[0x6], _0x7e9a54[0x7] = _0x357a94[0x7], _0x7e9a54[0x8] = _0x357a94[0x8];
        }
        ['invert'](_0x14769f) {
            var _0x47aacd = _0x14769f['elements'], _0x5189ad = this['elements'], _0x112b67 = _0x5189ad[0x0], _0x400210 = _0x5189ad[0x1], _0xa58093 = _0x5189ad[0x2], _0x5330a7 = _0x5189ad[0x3], _0x313dee = _0x5189ad[0x4], _0x55bfaa = _0x5189ad[0x5], _0x17ff99 = _0x5189ad[0x6], _0x2b19f8 = _0x5189ad[0x7], _0x4f4582 = _0x5189ad[0x8], _0x5a37b3 = _0x4f4582 * _0x313dee - _0x55bfaa * _0x2b19f8, _0x3951ee = -_0x4f4582 * _0x5330a7 + _0x55bfaa * _0x17ff99, _0xf39451 = _0x2b19f8 * _0x5330a7 - _0x313dee * _0x17ff99, _0x2f50fe = _0x112b67 * _0x5a37b3 + _0x400210 * _0x3951ee + _0xa58093 * _0xf39451;
            _0x2f50fe || (_0x14769f = null), _0x2f50fe = 0x1 / _0x2f50fe, _0x47aacd[0x0] = _0x5a37b3 * _0x2f50fe, _0x47aacd[0x1] = (-_0x4f4582 * _0x400210 + _0xa58093 * _0x2b19f8) * _0x2f50fe, _0x47aacd[0x2] = (_0x55bfaa * _0x400210 - _0xa58093 * _0x313dee) * _0x2f50fe, _0x47aacd[0x3] = _0x3951ee * _0x2f50fe, _0x47aacd[0x4] = (_0x4f4582 * _0x112b67 - _0xa58093 * _0x17ff99) * _0x2f50fe, _0x47aacd[0x5] = (-_0x55bfaa * _0x112b67 + _0xa58093 * _0x5330a7) * _0x2f50fe, _0x47aacd[0x6] = _0xf39451 * _0x2f50fe, _0x47aacd[0x7] = (-_0x2b19f8 * _0x112b67 + _0x400210 * _0x17ff99) * _0x2f50fe, _0x47aacd[0x8] = (_0x313dee * _0x112b67 - _0x400210 * _0x5330a7) * _0x2f50fe;
        }
        ['transpose'](_0x59035c) {
            var _0x32f06b = _0x59035c['elements'], _0x243da5 = this['elements'];
            if (_0x59035c === this) {
                var _0x3a4c32 = _0x243da5[0x1], _0x1be237 = _0x243da5[0x2], _0x16ccf2 = _0x243da5[0x5];
                _0x32f06b[0x1] = _0x243da5[0x3], _0x32f06b[0x2] = _0x243da5[0x6], _0x32f06b[0x3] = _0x3a4c32, _0x32f06b[0x5] = _0x243da5[0x7], _0x32f06b[0x6] = _0x1be237, _0x32f06b[0x7] = _0x16ccf2;
            } else
                _0x32f06b[0x0] = _0x243da5[0x0], _0x32f06b[0x1] = _0x243da5[0x3], _0x32f06b[0x2] = _0x243da5[0x6], _0x32f06b[0x3] = _0x243da5[0x1], _0x32f06b[0x4] = _0x243da5[0x4], _0x32f06b[0x5] = _0x243da5[0x7], _0x32f06b[0x6] = _0x243da5[0x2], _0x32f06b[0x7] = _0x243da5[0x5], _0x32f06b[0x8] = _0x243da5[0x8];
        }
        ['identity']() {
            var _0x501379 = this['elements'];
            _0x501379[0x0] = 0x1, _0x501379[0x1] = 0x0, _0x501379[0x2] = 0x0, _0x501379[0x3] = 0x0, _0x501379[0x4] = 0x1, _0x501379[0x5] = 0x0, _0x501379[0x6] = 0x0, _0x501379[0x7] = 0x0, _0x501379[0x8] = 0x1;
        }
        ['cloneTo'](_0x5c1550) {
            var _0x56efa8, _0x2a11ce, _0x494835;
            if ((_0x2a11ce = this['elements']) !== (_0x494835 = _0x5c1550['elements'])) {
                for (_0x56efa8 = 0x0; _0x56efa8 < 0x9; ++_0x56efa8)
                    _0x494835[_0x56efa8] = _0x2a11ce[_0x56efa8];
            }
        }
        ['clone']() {
            var _0x29a479 = new _0x25d419();
            return this['cloneTo'](_0x29a479), _0x29a479;
        }
        static ['lookAt'](_0x5769a3, _0x48f796, _0x371d06, _0x3c6c91) {
            _0x4795b3['subtract'](_0x5769a3, _0x48f796, _0x25d419['_tempV30']), _0x4795b3['normalize'](_0x25d419['_tempV30'], _0x25d419['_tempV30']), _0x4795b3['cross'](_0x371d06, _0x25d419['_tempV30'], _0x25d419['_tempV31']), _0x4795b3['normalize'](_0x25d419['_tempV31'], _0x25d419['_tempV31']), _0x4795b3['cross'](_0x25d419['_tempV30'], _0x25d419['_tempV31'], _0x25d419['_tempV32']);
            var _0x1425e6 = _0x25d419['_tempV30'], _0x3cbf7c = _0x25d419['_tempV31'], _0x3f1015 = _0x25d419['_tempV32'], _0x46eca5 = _0x3c6c91['elements'];
            _0x46eca5[0x0] = _0x3cbf7c['x'], _0x46eca5[0x3] = _0x3cbf7c['y'], _0x46eca5[0x6] = _0x3cbf7c['z'], _0x46eca5[0x1] = _0x3f1015['x'], _0x46eca5[0x4] = _0x3f1015['y'], _0x46eca5[0x7] = _0x3f1015['z'], _0x46eca5[0x2] = _0x1425e6['x'], _0x46eca5[0x5] = _0x1425e6['y'], _0x46eca5[0x8] = _0x1425e6['z'];
        }
    }
    _0x25d419['DEFAULT'] = new _0x25d419(), _0x25d419['_tempV30'] = new _0x4795b3(), _0x25d419['_tempV31'] = new _0x4795b3(), _0x25d419['_tempV32'] = new _0x4795b3();
    class _0x5958af {
        constructor(_0x204f7f = 0x0, _0x2acde9 = 0x0, _0x4cbabb = 0x0, _0x19fe65 = 0x1, _0x39d2e3 = null) {
            this['x'] = _0x204f7f, this['y'] = _0x2acde9, this['z'] = _0x4cbabb, this['w'] = _0x19fe65;
        }
        static ['createFrom' + 'YawPitchRo' + 'll'](_0x20c686, _0x8e1d20, _0x284ed9, _0x68a3c4) {
            var _0x5dfdc4 = 0.5 * _0x284ed9, _0x5496f0 = 0.5 * _0x8e1d20, _0x2f9b1f = 0.5 * _0x20c686, _0x305d27 = Math['sin'](_0x5dfdc4), _0xb799ea = Math['cos'](_0x5dfdc4), _0x31c604 = Math['sin'](_0x5496f0), _0x2ae546 = Math['cos'](_0x5496f0), _0x1c2caa = Math['sin'](_0x2f9b1f), _0x134bf0 = Math['cos'](_0x2f9b1f);
            _0x68a3c4['x'] = _0x134bf0 * _0x31c604 * _0xb799ea + _0x1c2caa * _0x2ae546 * _0x305d27, _0x68a3c4['y'] = _0x1c2caa * _0x2ae546 * _0xb799ea - _0x134bf0 * _0x31c604 * _0x305d27, _0x68a3c4['z'] = _0x134bf0 * _0x2ae546 * _0x305d27 - _0x1c2caa * _0x31c604 * _0xb799ea, _0x68a3c4['w'] = _0x134bf0 * _0x2ae546 * _0xb799ea + _0x1c2caa * _0x31c604 * _0x305d27;
        }
        static ['multiply'](_0xf0871d, _0x199623, _0x434b49) {
            var _0x22c021 = _0xf0871d['x'], _0x1a0b33 = _0xf0871d['y'], _0x46212d = _0xf0871d['z'], _0x4e96fe = _0xf0871d['w'], _0x43a94b = _0x199623['x'], _0x1a362f = _0x199623['y'], _0x89154b = _0x199623['z'], _0x289082 = _0x199623['w'], _0x1ea523 = _0x1a0b33 * _0x89154b - _0x46212d * _0x1a362f, _0x185d73 = _0x46212d * _0x43a94b - _0x22c021 * _0x89154b, _0x4466fe = _0x22c021 * _0x1a362f - _0x1a0b33 * _0x43a94b, _0x50fea1 = _0x22c021 * _0x43a94b + _0x1a0b33 * _0x1a362f + _0x46212d * _0x89154b;
            _0x434b49['x'] = _0x22c021 * _0x289082 + _0x43a94b * _0x4e96fe + _0x1ea523, _0x434b49['y'] = _0x1a0b33 * _0x289082 + _0x1a362f * _0x4e96fe + _0x185d73, _0x434b49['z'] = _0x46212d * _0x289082 + _0x89154b * _0x4e96fe + _0x4466fe, _0x434b49['w'] = _0x4e96fe * _0x289082 - _0x50fea1;
        }
        static ['arcTanAngl' + 'e'](_0x35b312, _0x16f392) {
            return 0x0 == _0x35b312 ? 0x1 == _0x16f392 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x35b312 > 0x0 ? Math['atan'](_0x16f392 / _0x35b312) : _0x35b312 < 0x0 ? _0x16f392 > 0x0 ? Math['atan'](_0x16f392 / _0x35b312) + Math['PI'] : Math['atan'](_0x16f392 / _0x35b312) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0x17ab9d, _0x456379, _0x5eac27) {
            _0x4795b3['subtract'](_0x456379, _0x17ab9d, _0x5958af['TEMPVector' + '30']), _0x4795b3['normalize'](_0x5958af['TEMPVector' + '30'], _0x5958af['TEMPVector' + '30']), _0x5eac27['x'] = Math['asin'](_0x5958af['TEMPVector' + '30']['y']), _0x5eac27['y'] = _0x5958af['arcTanAngl' + 'e'](-_0x5958af['TEMPVector' + '30']['z'], -_0x5958af['TEMPVector' + '30']['x']);
        }
        static ['createFrom' + 'AxisAngle'](_0x580662, _0x33401a, _0x513b6d) {
            _0x33401a *= 0.5;
            var _0x32cf06 = Math['sin'](_0x33401a);
            _0x513b6d['x'] = _0x32cf06 * _0x580662['x'], _0x513b6d['y'] = _0x32cf06 * _0x580662['y'], _0x513b6d['z'] = _0x32cf06 * _0x580662['z'], _0x513b6d['w'] = Math['cos'](_0x33401a);
        }
        static ['createFrom' + 'Matrix4x4'](_0x3cefb7, _0x321c11) {
            var _0x1f2701, _0x10ba09, _0x5d97a4 = _0x3cefb7['elements'], _0x389eea = _0x5d97a4[0x0] + _0x5d97a4[0x5] + _0x5d97a4[0xa];
            _0x389eea > 0x0 ? (_0x1f2701 = Math['sqrt'](_0x389eea + 0x1), _0x321c11['w'] = 0.5 * _0x1f2701, _0x1f2701 = 0.5 / _0x1f2701, _0x321c11['x'] = (_0x5d97a4[0x6] - _0x5d97a4[0x9]) * _0x1f2701, _0x321c11['y'] = (_0x5d97a4[0x8] - _0x5d97a4[0x2]) * _0x1f2701, _0x321c11['z'] = (_0x5d97a4[0x1] - _0x5d97a4[0x4]) * _0x1f2701) : _0x5d97a4[0x0] >= _0x5d97a4[0x5] && _0x5d97a4[0x0] >= _0x5d97a4[0xa] ? (_0x10ba09 = 0.5 / (_0x1f2701 = Math['sqrt'](0x1 + _0x5d97a4[0x0] - _0x5d97a4[0x5] - _0x5d97a4[0xa])), _0x321c11['x'] = 0.5 * _0x1f2701, _0x321c11['y'] = (_0x5d97a4[0x1] + _0x5d97a4[0x4]) * _0x10ba09, _0x321c11['z'] = (_0x5d97a4[0x2] + _0x5d97a4[0x8]) * _0x10ba09, _0x321c11['w'] = (_0x5d97a4[0x6] - _0x5d97a4[0x9]) * _0x10ba09) : _0x5d97a4[0x5] > _0x5d97a4[0xa] ? (_0x10ba09 = 0.5 / (_0x1f2701 = Math['sqrt'](0x1 + _0x5d97a4[0x5] - _0x5d97a4[0x0] - _0x5d97a4[0xa])), _0x321c11['x'] = (_0x5d97a4[0x4] + _0x5d97a4[0x1]) * _0x10ba09, _0x321c11['y'] = 0.5 * _0x1f2701, _0x321c11['z'] = (_0x5d97a4[0x9] + _0x5d97a4[0x6]) * _0x10ba09, _0x321c11['w'] = (_0x5d97a4[0x8] - _0x5d97a4[0x2]) * _0x10ba09) : (_0x10ba09 = 0.5 / (_0x1f2701 = Math['sqrt'](0x1 + _0x5d97a4[0xa] - _0x5d97a4[0x0] - _0x5d97a4[0x5])), _0x321c11['x'] = (_0x5d97a4[0x8] + _0x5d97a4[0x2]) * _0x10ba09, _0x321c11['y'] = (_0x5d97a4[0x9] + _0x5d97a4[0x6]) * _0x10ba09, _0x321c11['z'] = 0.5 * _0x1f2701, _0x321c11['w'] = (_0x5d97a4[0x1] - _0x5d97a4[0x4]) * _0x10ba09);
        }
        static ['slerp'](_0x21ba84, _0xed49f8, _0x23a4b6, _0x2a68c3) {
            var _0x2a33e2, _0x2a7ff6, _0x102c7a, _0x1107bf, _0x2a736b, _0x256aa2 = _0x21ba84['x'], _0x43b59f = _0x21ba84['y'], _0x5aa62c = _0x21ba84['z'], _0x3ee6dc = _0x21ba84['w'], _0x35dbd7 = _0xed49f8['x'], _0x425352 = _0xed49f8['y'], _0x55370c = _0xed49f8['z'], _0x3e21ed = _0xed49f8['w'];
            return (_0x2a7ff6 = _0x256aa2 * _0x35dbd7 + _0x43b59f * _0x425352 + _0x5aa62c * _0x55370c + _0x3ee6dc * _0x3e21ed) < 0x0 && (_0x2a7ff6 = -_0x2a7ff6, _0x35dbd7 = -_0x35dbd7, _0x425352 = -_0x425352, _0x55370c = -_0x55370c, _0x3e21ed = -_0x3e21ed), 0x1 - _0x2a7ff6 > 0.000001 ? (_0x2a33e2 = Math['acos'](_0x2a7ff6), _0x102c7a = Math['sin'](_0x2a33e2), _0x1107bf = Math['sin']((0x1 - _0x23a4b6) * _0x2a33e2) / _0x102c7a, _0x2a736b = Math['sin'](_0x23a4b6 * _0x2a33e2) / _0x102c7a) : (_0x1107bf = 0x1 - _0x23a4b6, _0x2a736b = _0x23a4b6), _0x2a68c3['x'] = _0x1107bf * _0x256aa2 + _0x2a736b * _0x35dbd7, _0x2a68c3['y'] = _0x1107bf * _0x43b59f + _0x2a736b * _0x425352, _0x2a68c3['z'] = _0x1107bf * _0x5aa62c + _0x2a736b * _0x55370c, _0x2a68c3['w'] = _0x1107bf * _0x3ee6dc + _0x2a736b * _0x3e21ed, _0x2a68c3;
        }
        static ['lerp'](_0x298425, _0x4bb5c6, _0x5d0774, _0x34f113) {
            var _0x450dde = 0x1 - _0x5d0774;
            _0x5958af['dot'](_0x298425, _0x4bb5c6) >= 0x0 ? (_0x34f113['x'] = _0x450dde * _0x298425['x'] + _0x5d0774 * _0x4bb5c6['x'], _0x34f113['y'] = _0x450dde * _0x298425['y'] + _0x5d0774 * _0x4bb5c6['y'], _0x34f113['z'] = _0x450dde * _0x298425['z'] + _0x5d0774 * _0x4bb5c6['z'], _0x34f113['w'] = _0x450dde * _0x298425['w'] + _0x5d0774 * _0x4bb5c6['w']) : (_0x34f113['x'] = _0x450dde * _0x298425['x'] - _0x5d0774 * _0x4bb5c6['x'], _0x34f113['y'] = _0x450dde * _0x298425['y'] - _0x5d0774 * _0x4bb5c6['y'], _0x34f113['z'] = _0x450dde * _0x298425['z'] - _0x5d0774 * _0x4bb5c6['z'], _0x34f113['w'] = _0x450dde * _0x298425['w'] - _0x5d0774 * _0x4bb5c6['w']), _0x34f113['normalize'](_0x34f113);
        }
        static ['add'](_0x418ab0, _0x330ecb, _0x22363e) {
            _0x22363e['x'] = _0x418ab0['x'] + _0x330ecb['x'], _0x22363e['y'] = _0x418ab0['y'] + _0x330ecb['y'], _0x22363e['z'] = _0x418ab0['z'] + _0x330ecb['z'], _0x22363e['w'] = _0x418ab0['w'] + _0x330ecb['w'];
        }
        static ['dot'](_0x30f01c, _0x393151) {
            return _0x30f01c['x'] * _0x393151['x'] + _0x30f01c['y'] * _0x393151['y'] + _0x30f01c['z'] * _0x393151['z'] + _0x30f01c['w'] * _0x393151['w'];
        }
        ['scaling'](_0x902868, _0x17b49d) {
            _0x17b49d['x'] = this['x'] * _0x902868, _0x17b49d['y'] = this['y'] * _0x902868, _0x17b49d['z'] = this['z'] * _0x902868, _0x17b49d['w'] = this['w'] * _0x902868;
        }
        ['normalize'](_0x41684d) {
            var _0x51b4c8 = this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
            _0x51b4c8 > 0x0 && (_0x51b4c8 = 0x1 / Math['sqrt'](_0x51b4c8), _0x41684d['x'] = this['x'] * _0x51b4c8, _0x41684d['y'] = this['y'] * _0x51b4c8, _0x41684d['z'] = this['z'] * _0x51b4c8, _0x41684d['w'] = this['w'] * _0x51b4c8);
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['rotateX'](_0x1830a0, _0x31b446) {
            _0x1830a0 *= 0.5;
            var _0x45ef5c = Math['sin'](_0x1830a0), _0x4d8989 = Math['cos'](_0x1830a0);
            _0x31b446['x'] = this['x'] * _0x4d8989 + this['w'] * _0x45ef5c, _0x31b446['y'] = this['y'] * _0x4d8989 + this['z'] * _0x45ef5c, _0x31b446['z'] = this['z'] * _0x4d8989 - this['y'] * _0x45ef5c, _0x31b446['w'] = this['w'] * _0x4d8989 - this['x'] * _0x45ef5c;
        }
        ['rotateY'](_0x48bb95, _0x506a8d) {
            _0x48bb95 *= 0.5;
            var _0x5dd0df = Math['sin'](_0x48bb95), _0x51a1dc = Math['cos'](_0x48bb95);
            _0x506a8d['x'] = this['x'] * _0x51a1dc - this['z'] * _0x5dd0df, _0x506a8d['y'] = this['y'] * _0x51a1dc + this['w'] * _0x5dd0df, _0x506a8d['z'] = this['z'] * _0x51a1dc + this['x'] * _0x5dd0df, _0x506a8d['w'] = this['w'] * _0x51a1dc - this['y'] * _0x5dd0df;
        }
        ['rotateZ'](_0x3df8bb, _0x192a66) {
            _0x3df8bb *= 0.5;
            var _0x29c531 = Math['sin'](_0x3df8bb), _0x206cea = Math['cos'](_0x3df8bb);
            _0x192a66['x'] = this['x'] * _0x206cea + this['y'] * _0x29c531, _0x192a66['y'] = this['y'] * _0x206cea - this['x'] * _0x29c531, _0x192a66['z'] = this['z'] * _0x206cea + this['w'] * _0x29c531, _0x192a66['w'] = this['w'] * _0x206cea - this['z'] * _0x29c531;
        }
        ['getYawPitc' + 'hRoll'](_0xf48bb5) {
            _0x4795b3['transformQ' + 'uat'](_0x4795b3['_ForwardRH'], this, _0x5958af['TEMPVector' + '31']), _0x4795b3['transformQ' + 'uat'](_0x4795b3['_Up'], this, _0x5958af['TEMPVector' + '32']);
            var _0x425a5b = _0x5958af['TEMPVector' + '32'];
            _0x5958af['angleTo'](_0x4795b3['_ZERO'], _0x5958af['TEMPVector' + '31'], _0x5958af['TEMPVector' + '33']);
            var _0x34fe72 = _0x5958af['TEMPVector' + '33'];
            _0x34fe72['x'] == Math['PI'] / 0x2 ? (_0x34fe72['y'] = _0x5958af['arcTanAngl' + 'e'](_0x425a5b['z'], _0x425a5b['x']), _0x34fe72['z'] = 0x0) : _0x34fe72['x'] == -Math['PI'] / 0x2 ? (_0x34fe72['y'] = _0x5958af['arcTanAngl' + 'e'](-_0x425a5b['z'], -_0x425a5b['x']), _0x34fe72['z'] = 0x0) : (_0x334864['Matrix4x4']['createRota' + 'tionY'](-_0x34fe72['y'], _0x334864['Matrix4x4']['TEMPMatrix' + '0']), _0x334864['Matrix4x4']['createRota' + 'tionX'](-_0x34fe72['x'], _0x334864['Matrix4x4']['TEMPMatrix' + '1']), _0x4795b3['transformC' + 'oordinate'](_0x5958af['TEMPVector' + '32'], _0x334864['Matrix4x4']['TEMPMatrix' + '0'], _0x5958af['TEMPVector' + '32']), _0x4795b3['transformC' + 'oordinate'](_0x5958af['TEMPVector' + '32'], _0x334864['Matrix4x4']['TEMPMatrix' + '1'], _0x5958af['TEMPVector' + '32']), _0x34fe72['z'] = _0x5958af['arcTanAngl' + 'e'](_0x425a5b['y'], -_0x425a5b['x'])), _0x34fe72['y'] <= -Math['PI'] && (_0x34fe72['y'] = Math['PI']), _0x34fe72['z'] <= -Math['PI'] && (_0x34fe72['z'] = Math['PI']), _0x34fe72['y'] >= Math['PI'] && _0x34fe72['z'] >= Math['PI'] && (_0x34fe72['y'] = 0x0, _0x34fe72['z'] = 0x0, _0x34fe72['x'] = Math['PI'] - _0x34fe72['x']);
            var _0x1f68ae = _0xf48bb5;
            _0x1f68ae['x'] = _0x34fe72['y'], _0x1f68ae['y'] = _0x34fe72['x'], _0x1f68ae['z'] = _0x34fe72['z'];
        }
        ['invert'](_0x46abd0) {
            var _0x1c2a1c = this['x'], _0x5a6647 = this['y'], _0x5ba09e = this['z'], _0x78c2c = this['w'], _0x152716 = _0x1c2a1c * _0x1c2a1c + _0x5a6647 * _0x5a6647 + _0x5ba09e * _0x5ba09e + _0x78c2c * _0x78c2c, _0x32164d = _0x152716 ? 0x1 / _0x152716 : 0x0;
            _0x46abd0['x'] = -_0x1c2a1c * _0x32164d, _0x46abd0['y'] = -_0x5a6647 * _0x32164d, _0x46abd0['z'] = -_0x5ba09e * _0x32164d, _0x46abd0['w'] = _0x78c2c * _0x32164d;
        }
        ['identity']() {
            this['x'] = 0x0, this['y'] = 0x0, this['z'] = 0x0, this['w'] = 0x1;
        }
        ['fromArray'](_0x20adf5, _0xff812b = 0x0) {
            this['x'] = _0x20adf5[_0xff812b + 0x0], this['y'] = _0x20adf5[_0xff812b + 0x1], this['z'] = _0x20adf5[_0xff812b + 0x2], this['w'] = _0x20adf5[_0xff812b + 0x3];
        }
        ['cloneTo'](_0xd72cef) {
            this !== _0xd72cef && (_0xd72cef['x'] = this['x'], _0xd72cef['y'] = this['y'], _0xd72cef['z'] = this['z'], _0xd72cef['w'] = this['w']);
        }
        ['clone']() {
            var _0x1eed34 = new _0x5958af();
            return this['cloneTo'](_0x1eed34), _0x1eed34;
        }
        ['equals'](_0x739a84) {
            return _0x183ae5['nearEqual'](this['x'], _0x739a84['x']) && _0x183ae5['nearEqual'](this['y'], _0x739a84['y']) && _0x183ae5['nearEqual'](this['z'], _0x739a84['z']) && _0x183ae5['nearEqual'](this['w'], _0x739a84['w']);
        }
        static ['rotationLo' + 'okAt'](_0x55390f, _0x50a095, _0x3191b2) {
            _0x5958af['lookAt'](_0x4795b3['_ZERO'], _0x55390f, _0x50a095, _0x3191b2);
        }
        static ['lookAt'](_0x265651, _0x2ca6d1, _0x35a393, _0x2c6f5c) {
            _0x25d419['lookAt'](_0x265651, _0x2ca6d1, _0x35a393, _0x5958af['_tempMatri' + 'x3x3']), _0x5958af['rotationMa' + 'trix'](_0x5958af['_tempMatri' + 'x3x3'], _0x2c6f5c);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['invert'](_0x1ac3e8, _0x1a5ba6) {
            var _0x10a6f6 = _0x1ac3e8['lengthSqua' + 'red']();
            _0x183ae5['isZero'](_0x10a6f6) || (_0x10a6f6 = 0x1 / _0x10a6f6, _0x1a5ba6['x'] = -_0x1ac3e8['x'] * _0x10a6f6, _0x1a5ba6['y'] = -_0x1ac3e8['y'] * _0x10a6f6, _0x1a5ba6['z'] = -_0x1ac3e8['z'] * _0x10a6f6, _0x1a5ba6['w'] = _0x1ac3e8['w'] * _0x10a6f6);
        }
        static ['rotationMa' + 'trix'](_0x5dfb8d, _0x4550fb) {
            var _0x103911, _0x5ba40c, _0x5473ec = _0x5dfb8d['elements'], _0x5b0728 = _0x5473ec[0x0], _0x4c9c5c = _0x5473ec[0x1], _0x3e6915 = _0x5473ec[0x2], _0x43a4d8 = _0x5473ec[0x3], _0x22b4b9 = _0x5473ec[0x4], _0x6227f = _0x5473ec[0x5], _0x4e875e = _0x5473ec[0x6], _0x241649 = _0x5473ec[0x7], _0x4b7639 = _0x5473ec[0x8], _0x1a7b09 = _0x5b0728 + _0x22b4b9 + _0x4b7639;
            _0x1a7b09 > 0x0 ? (_0x103911 = Math['sqrt'](_0x1a7b09 + 0x1), _0x4550fb['w'] = 0.5 * _0x103911, _0x103911 = 0.5 / _0x103911, _0x4550fb['x'] = (_0x6227f - _0x241649) * _0x103911, _0x4550fb['y'] = (_0x4e875e - _0x3e6915) * _0x103911, _0x4550fb['z'] = (_0x4c9c5c - _0x43a4d8) * _0x103911) : _0x5b0728 >= _0x22b4b9 && _0x5b0728 >= _0x4b7639 ? (_0x5ba40c = 0.5 / (_0x103911 = Math['sqrt'](0x1 + _0x5b0728 - _0x22b4b9 - _0x4b7639)), _0x4550fb['x'] = 0.5 * _0x103911, _0x4550fb['y'] = (_0x4c9c5c + _0x43a4d8) * _0x5ba40c, _0x4550fb['z'] = (_0x3e6915 + _0x4e875e) * _0x5ba40c, _0x4550fb['w'] = (_0x6227f - _0x241649) * _0x5ba40c) : _0x22b4b9 > _0x4b7639 ? (_0x5ba40c = 0.5 / (_0x103911 = Math['sqrt'](0x1 + _0x22b4b9 - _0x5b0728 - _0x4b7639)), _0x4550fb['x'] = (_0x43a4d8 + _0x4c9c5c) * _0x5ba40c, _0x4550fb['y'] = 0.5 * _0x103911, _0x4550fb['z'] = (_0x241649 + _0x6227f) * _0x5ba40c, _0x4550fb['w'] = (_0x4e875e - _0x3e6915) * _0x5ba40c) : (_0x5ba40c = 0.5 / (_0x103911 = Math['sqrt'](0x1 + _0x4b7639 - _0x5b0728 - _0x22b4b9)), _0x4550fb['x'] = (_0x4e875e + _0x3e6915) * _0x5ba40c, _0x4550fb['y'] = (_0x241649 + _0x6227f) * _0x5ba40c, _0x4550fb['z'] = 0.5 * _0x103911, _0x4550fb['w'] = (_0x4c9c5c - _0x43a4d8) * _0x5ba40c);
        }
        ['forNativeE' + 'lement'](_0x516e0a = null) {
            _0x516e0a ? (this['elements'] = _0x516e0a, this['elements'][0x0] = this['x'], this['elements'][0x1] = this['y'], this['elements'][0x2] = this['z'], this['elements'][0x3] = this['w']) : this['elements'] = new Float32Array([
                this['x'],
                this['y'],
                this['z'],
                this['w']
            ]), _0x4c44b6['rewriteNum' + 'Property'](this, 'x', 0x0), _0x4c44b6['rewriteNum' + 'Property'](this, 'y', 0x1), _0x4c44b6['rewriteNum' + 'Property'](this, 'z', 0x2), _0x4c44b6['rewriteNum' + 'Property'](this, 'w', 0x3);
        }
    }
    _0x5958af['TEMPVector' + '30'] = new _0x4795b3(), _0x5958af['TEMPVector' + '31'] = new _0x4795b3(), _0x5958af['TEMPVector' + '32'] = new _0x4795b3(), _0x5958af['TEMPVector' + '33'] = new _0x4795b3(), _0x5958af['_tempMatri' + 'x3x3'] = new _0x25d419(), _0x5958af['DEFAULT'] = new _0x5958af(), _0x5958af['NAN'] = new _0x5958af(NaN, NaN, NaN, NaN);
    class _0x4d1789 extends _0x57092c {
        constructor() {
            super(), this['inTangent'] = new _0x333f41(), this['outTangent'] = new _0x333f41(), this['value'] = new _0x5958af();
        }
        ['cloneTo'](_0x4c850d) {
            super['cloneTo'](_0x4c850d);
            var _0x3831e5 = _0x4c850d;
            this['inTangent']['cloneTo'](_0x3831e5['inTangent']), this['outTangent']['cloneTo'](_0x3831e5['outTangent']), this['value']['cloneTo'](_0x3831e5['value']);
        }
    }
    class _0x185756 extends _0x57092c {
        constructor() {
            super(), this['inTangent'] = new _0x4795b3(), this['outTangent'] = new _0x4795b3(), this['value'] = new _0x4795b3();
        }
        ['cloneTo'](_0x5180a0) {
            super['cloneTo'](_0x5180a0);
            var _0x513273 = _0x5180a0;
            this['inTangent']['cloneTo'](_0x513273['inTangent']), this['outTangent']['cloneTo'](_0x513273['outTangent']), this['value']['cloneTo'](_0x513273['value']);
        }
    }
    class _0x3d9ce4 {
        static ['READ_DATA']() {
            _0x3d9ce4['_DATA']['offset'] = _0x3d9ce4['_reader']['getUint32'](), _0x3d9ce4['_DATA']['size'] = _0x3d9ce4['_reader']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x59c7fb = _0x3d9ce4['_BLOCK']['count'] = _0x3d9ce4['_reader']['getUint16'](), _0x35f5db = _0x3d9ce4['_BLOCK']['blockStart' + 's'] = [], _0x2a32d4 = _0x3d9ce4['_BLOCK']['blockLengt' + 'hs'] = [], _0x5973fa = 0x0; _0x5973fa < _0x59c7fb; _0x5973fa++)
                _0x35f5db['push'](_0x3d9ce4['_reader']['getUint32']()), _0x2a32d4['push'](_0x3d9ce4['_reader']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x235bac = _0x3d9ce4['_reader']['getUint32'](), _0x1cb88c = _0x3d9ce4['_reader']['getUint16'](), _0x26bad6 = _0x3d9ce4['_reader']['pos'];
            _0x3d9ce4['_reader']['pos'] = _0x235bac + _0x3d9ce4['_DATA']['offset'];
            for (var _0x26e9c7 = 0x0; _0x26e9c7 < _0x1cb88c; _0x26e9c7++)
                _0x3d9ce4['_strings'][_0x26e9c7] = _0x3d9ce4['_reader']['readUTFStr' + 'ing']();
            _0x3d9ce4['_reader']['pos'] = _0x26bad6;
        }
        static ['parse'](_0x219a1b, _0xa02a4e) {
            _0x3d9ce4['_animation' + 'Clip'] = _0x219a1b, _0x3d9ce4['_reader'] = _0xa02a4e, _0xa02a4e['__getBuffe' + 'r'](), (_0x3d9ce4['READ_DATA'](), _0x3d9ce4['READ_BLOCK'](), _0x3d9ce4['READ_STRIN' + 'GS']());
            for (var _0x39d023 = 0x0, _0x4d4cb6 = _0x3d9ce4['_BLOCK']['count']; _0x39d023 < _0x4d4cb6; _0x39d023++) {
                var _0x51379c = _0xa02a4e['getUint16'](), _0x409d6b = _0x3d9ce4['_strings'][_0x51379c], _0x24dd19 = _0x3d9ce4['READ_' + _0x409d6b];
                if (null == _0x24dd19)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x51379c + '\x20' + _0x409d6b);
                _0x24dd19['call'](null);
            }
        }
        static ['READ_ANIMA' + 'TIONS']() {
            var _0xb2c823, _0x3c5f2a, _0x2a55a2, _0x257127 = _0x3d9ce4['_reader'], _0x4ed572 = (_0x257127['__getBuffe' + 'r'](), []), _0x7c2226 = _0x257127['getUint16']();
            for (_0x4ed572['length'] = _0x7c2226, _0xb2c823 = 0x0; _0xb2c823 < _0x7c2226; _0xb2c823++)
                _0x4ed572[_0xb2c823] = _0x257127['getFloat32']();
            var _0x25de67 = _0x3d9ce4['_animation' + 'Clip'];
            _0x25de67['name'] = _0x3d9ce4['_strings'][_0x257127['getUint16']()];
            var _0x53114f = _0x25de67['_duration'] = _0x257127['getFloat32']();
            _0x25de67['islooping'] = !!_0x257127['getByte'](), _0x25de67['_frameRate'] = _0x257127['getInt16']();
            var _0x83102d = _0x257127['getInt16'](), _0x1a79bf = _0x25de67['_nodes'];
            _0x1a79bf['count'] = _0x83102d;
            var _0xb3bfdb = _0x25de67['_nodesMap'] = {}, _0x440167 = _0x25de67['_nodesDic'] = {};
            for (_0xb2c823 = 0x0; _0xb2c823 < _0x83102d; _0xb2c823++) {
                _0x2a55a2 = new _0x505044(), _0x1a79bf['setNodeByI' + 'ndex'](_0xb2c823, _0x2a55a2), _0x2a55a2['_indexInLi' + 'st'] = _0xb2c823;
                var _0x3d1359 = _0x2a55a2['type'] = _0x257127['getUint8'](), _0x1ba975 = _0x257127['getUint16']();
                for (_0x2a55a2['_setOwnerP' + 'athCount'](_0x1ba975), _0x3c5f2a = 0x0; _0x3c5f2a < _0x1ba975; _0x3c5f2a++)
                    _0x2a55a2['_setOwnerP' + 'athByIndex'](_0x3c5f2a, _0x3d9ce4['_strings'][_0x257127['getUint16']()]);
                var _0x433c8c = _0x2a55a2['_joinOwner' + 'Path']('/'), _0x190cfa = _0xb3bfdb[_0x433c8c];
                _0x190cfa || (_0xb3bfdb[_0x433c8c] = _0x190cfa = []), _0x190cfa['push'](_0x2a55a2), _0x2a55a2['propertyOw' + 'ner'] = _0x3d9ce4['_strings'][_0x257127['getUint16']()];
                var _0x36da9f = _0x257127['getUint16']();
                for (_0x2a55a2['_setProper' + 'tyCount'](_0x36da9f), _0x3c5f2a = 0x0; _0x3c5f2a < _0x36da9f; _0x3c5f2a++)
                    _0x2a55a2['_setProper' + 'tyByIndex'](_0x3c5f2a, _0x3d9ce4['_strings'][_0x257127['getUint16']()]);
                var _0x271390 = _0x433c8c + '.' + _0x2a55a2['propertyOw' + 'ner'] + '.' + _0x2a55a2['_joinPrope' + 'rty']('.');
                _0x440167[_0x271390] = _0x2a55a2, _0x2a55a2['fullPath'] = _0x271390;
                var _0x502116 = _0x257127['getUint16']();
                for (_0x2a55a2['_setKeyfra' + 'meCount'](_0x502116), _0x3c5f2a = 0x0; _0x3c5f2a < _0x502116; _0x3c5f2a++)
                    switch (_0x3d1359) {
                    case 0x0:
                        var _0x55ceb4 = new _0x157523();
                        _0x2a55a2['_setKeyfra' + 'meByIndex'](_0x3c5f2a, _0x55ceb4), _0x55ceb4['time'] = _0x4ed572[_0x257127['getUint16']()], _0x55ceb4['inTangent'] = _0x257127['getFloat32'](), _0x55ceb4['outTangent'] = _0x257127['getFloat32'](), _0x55ceb4['value'] = _0x257127['getFloat32']();
                        break;
                    case 0x1:
                    case 0x3:
                    case 0x4:
                        var _0x9ae784 = new _0x185756();
                        if (_0x2a55a2['_setKeyfra' + 'meByIndex'](_0x3c5f2a, _0x9ae784), _0x9ae784['time'] = _0x4ed572[_0x257127['getUint16']()], _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                            for (var _0x3e85cc = _0x9ae784['data'] = new Float32Array(0x9), _0x12be84 = 0x0; _0x12be84 < 0x3; _0x12be84++)
                                _0x3e85cc[_0x12be84] = _0x257127['getFloat32']();
                            for (_0x12be84 = 0x0; _0x12be84 < 0x3; _0x12be84++)
                                _0x3e85cc[0x3 + _0x12be84] = _0x257127['getFloat32']();
                            for (_0x12be84 = 0x0; _0x12be84 < 0x3; _0x12be84++)
                                _0x3e85cc[0x6 + _0x12be84] = _0x257127['getFloat32']();
                        } else {
                            var _0x3d704a = _0x9ae784['inTangent'], _0x38d8ff = _0x9ae784['outTangent'], _0xb95a6c = _0x9ae784['value'];
                            _0x3d704a['x'] = _0x257127['getFloat32'](), _0x3d704a['y'] = _0x257127['getFloat32'](), _0x3d704a['z'] = _0x257127['getFloat32'](), _0x38d8ff['x'] = _0x257127['getFloat32'](), _0x38d8ff['y'] = _0x257127['getFloat32'](), _0x38d8ff['z'] = _0x257127['getFloat32'](), _0xb95a6c['x'] = _0x257127['getFloat32'](), _0xb95a6c['y'] = _0x257127['getFloat32'](), _0xb95a6c['z'] = _0x257127['getFloat32']();
                        }
                        break;
                    case 0x2:
                        var _0x3af45e = new _0x4d1789();
                        if (_0x2a55a2['_setKeyfra' + 'meByIndex'](_0x3c5f2a, _0x3af45e), _0x3af45e['time'] = _0x4ed572[_0x257127['getUint16']()], _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                            for (_0x3e85cc = _0x3af45e['data'] = new Float32Array(0xc), _0x12be84 = 0x0; _0x12be84 < 0x4; _0x12be84++)
                                _0x3e85cc[_0x12be84] = _0x257127['getFloat32']();
                            for (_0x12be84 = 0x0; _0x12be84 < 0x4; _0x12be84++)
                                _0x3e85cc[0x4 + _0x12be84] = _0x257127['getFloat32']();
                            for (_0x12be84 = 0x0; _0x12be84 < 0x4; _0x12be84++)
                                _0x3e85cc[0x8 + _0x12be84] = _0x257127['getFloat32']();
                        } else {
                            var _0x54c955 = _0x3af45e['inTangent'], _0x493a5c = _0x3af45e['outTangent'], _0x1ae212 = _0x3af45e['value'];
                            _0x54c955['x'] = _0x257127['getFloat32'](), _0x54c955['y'] = _0x257127['getFloat32'](), _0x54c955['z'] = _0x257127['getFloat32'](), _0x54c955['w'] = _0x257127['getFloat32'](), _0x493a5c['x'] = _0x257127['getFloat32'](), _0x493a5c['y'] = _0x257127['getFloat32'](), _0x493a5c['z'] = _0x257127['getFloat32'](), _0x493a5c['w'] = _0x257127['getFloat32'](), _0x1ae212['x'] = _0x257127['getFloat32'](), _0x1ae212['y'] = _0x257127['getFloat32'](), _0x1ae212['z'] = _0x257127['getFloat32'](), _0x1ae212['w'] = _0x257127['getFloat32']();
                        }
                        break;
                    default:
                        throw 'AnimationC' + 'lipParser0' + '3:unknown\x20' + 'type.';
                    }
            }
            var _0x352f7f = _0x257127['getUint16']();
            for (_0xb2c823 = 0x0; _0xb2c823 < _0x352f7f; _0xb2c823++) {
                var _0x183929, _0xd1ff2a = new _0x1104b7();
                _0xd1ff2a['time'] = Math['min'](_0x53114f, _0x257127['getFloat32']()), _0xd1ff2a['eventName'] = _0x3d9ce4['_strings'][_0x257127['getUint16']()];
                var _0x28b768 = _0x257127['getUint16']();
                for (_0x28b768 > 0x0 && (_0xd1ff2a['params'] = _0x183929 = []), _0x3c5f2a = 0x0; _0x3c5f2a < _0x28b768; _0x3c5f2a++) {
                    switch (_0x257127['getByte']()) {
                    case 0x0:
                        _0x183929['push'](!!_0x257127['getByte']());
                        break;
                    case 0x1:
                        _0x183929['push'](_0x257127['getInt32']());
                        break;
                    case 0x2:
                        _0x183929['push'](_0x257127['getFloat32']());
                        break;
                    case 0x3:
                        _0x183929['push'](_0x3d9ce4['_strings'][_0x257127['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20ty' + 'pe.');
                    }
                }
                _0x25de67['addEvent'](_0xd1ff2a);
            }
        }
    }
    _0x3d9ce4['_strings'] = [], _0x3d9ce4['_BLOCK'] = { 'count': 0x0 }, _0x3d9ce4['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x3d10d1 {
        static ['__init__']() {
            for (var _0x3ba8de = 0x0; _0x3ba8de < 0x100; ++_0x3ba8de) {
                var _0x14a749 = _0x3ba8de - 0x7f;
                _0x14a749 < -0x1b ? (_0x3d10d1['_baseTable'][0x0 | _0x3ba8de] = 0x0, _0x3d10d1['_baseTable'][0x100 | _0x3ba8de] = 0x8000, _0x3d10d1['_shiftTabl' + 'e'][0x0 | _0x3ba8de] = 0x18, _0x3d10d1['_shiftTabl' + 'e'][0x100 | _0x3ba8de] = 0x18) : _0x14a749 < -0xe ? (_0x3d10d1['_baseTable'][0x0 | _0x3ba8de] = 0x400 >> -_0x14a749 - 0xe, _0x3d10d1['_baseTable'][0x100 | _0x3ba8de] = 0x400 >> -_0x14a749 - 0xe | 0x8000, _0x3d10d1['_shiftTabl' + 'e'][0x0 | _0x3ba8de] = -_0x14a749 - 0x1, _0x3d10d1['_shiftTabl' + 'e'][0x100 | _0x3ba8de] = -_0x14a749 - 0x1) : _0x14a749 <= 0xf ? (_0x3d10d1['_baseTable'][0x0 | _0x3ba8de] = _0x14a749 + 0xf << 0xa, _0x3d10d1['_baseTable'][0x100 | _0x3ba8de] = _0x14a749 + 0xf << 0xa | 0x8000, _0x3d10d1['_shiftTabl' + 'e'][0x0 | _0x3ba8de] = 0xd, _0x3d10d1['_shiftTabl' + 'e'][0x100 | _0x3ba8de] = 0xd) : _0x14a749 < 0x80 ? (_0x3d10d1['_baseTable'][0x0 | _0x3ba8de] = 0x7c00, _0x3d10d1['_baseTable'][0x100 | _0x3ba8de] = 0xfc00, _0x3d10d1['_shiftTabl' + 'e'][0x0 | _0x3ba8de] = 0x18, _0x3d10d1['_shiftTabl' + 'e'][0x100 | _0x3ba8de] = 0x18) : (_0x3d10d1['_baseTable'][0x0 | _0x3ba8de] = 0x7c00, _0x3d10d1['_baseTable'][0x100 | _0x3ba8de] = 0xfc00, _0x3d10d1['_shiftTabl' + 'e'][0x0 | _0x3ba8de] = 0xd, _0x3d10d1['_shiftTabl' + 'e'][0x100 | _0x3ba8de] = 0xd);
            }
            for (_0x3d10d1['_mantissaT' + 'able'][0x0] = 0x0, _0x3ba8de = 0x1; _0x3ba8de < 0x400; ++_0x3ba8de) {
                var _0x544f2d = _0x3ba8de << 0xd;
                for (_0x14a749 = 0x0; 0x0 == (0x800000 & _0x544f2d);)
                    _0x14a749 -= 0x800000, _0x544f2d <<= 0x1;
                _0x544f2d &= -0x800001, _0x14a749 += 0x38800000, _0x3d10d1['_mantissaT' + 'able'][_0x3ba8de] = _0x544f2d | _0x14a749;
            }
            for (_0x3ba8de = 0x400; _0x3ba8de < 0x800; ++_0x3ba8de)
                _0x3d10d1['_mantissaT' + 'able'][_0x3ba8de] = 0x38000000 + (_0x3ba8de - 0x400 << 0xd);
            for (_0x3d10d1['_exponentT' + 'able'][0x0] = 0x0, _0x3ba8de = 0x1; _0x3ba8de < 0x1f; ++_0x3ba8de)
                _0x3d10d1['_exponentT' + 'able'][_0x3ba8de] = _0x3ba8de << 0x17;
            for (_0x3d10d1['_exponentT' + 'able'][0x1f] = 0x47800000, _0x3d10d1['_exponentT' + 'able'][0x20] = 0x80000000, _0x3ba8de = 0x21; _0x3ba8de < 0x3f; ++_0x3ba8de)
                _0x3d10d1['_exponentT' + 'able'][_0x3ba8de] = 0x80000000 + (_0x3ba8de - 0x20 << 0x17);
            for (_0x3d10d1['_exponentT' + 'able'][0x3f] = 0xc7800000, _0x3d10d1['_offsetTab' + 'le'][0x0] = 0x0, _0x3ba8de = 0x1; _0x3ba8de < 0x40; ++_0x3ba8de)
                _0x3d10d1['_offsetTab' + 'le'][_0x3ba8de] = 0x20 === _0x3ba8de ? 0x0 : 0x400;
        }
        static ['roundToFlo' + 'at16Bits'](_0x55dd90) {
            _0x3d10d1['_floatView'][0x0] = _0x55dd90;
            var _0x505f0b = _0x3d10d1['_uint32Vie' + 'w'][0x0], _0x498d86 = _0x505f0b >> 0x17 & 0x1ff;
            return _0x3d10d1['_baseTable'][_0x498d86] + ((0x7fffff & _0x505f0b) >> _0x3d10d1['_shiftTabl' + 'e'][_0x498d86]);
        }
        static ['convertToN' + 'umber'](_0x4a1770) {
            var _0x125dd3 = _0x4a1770 >> 0xa;
            return _0x3d10d1['_uint32Vie' + 'w'][0x0] = _0x3d10d1['_mantissaT' + 'able'][_0x3d10d1['_offsetTab' + 'le'][_0x125dd3] + (0x3ff & _0x4a1770)] + _0x3d10d1['_exponentT' + 'able'][_0x125dd3], _0x3d10d1['_floatView'][0x0];
        }
    }
    _0x3d10d1['_buffer'] = new ArrayBuffer(0x4), _0x3d10d1['_floatView'] = new Float32Array(_0x3d10d1['_buffer']), _0x3d10d1['_uint32Vie' + 'w'] = new Uint32Array(_0x3d10d1['_buffer']), _0x3d10d1['_baseTable'] = new Uint32Array(0x200), _0x3d10d1['_shiftTabl' + 'e'] = new Uint32Array(0x200), _0x3d10d1['_mantissaT' + 'able'] = new Uint32Array(0x800), _0x3d10d1['_exponentT' + 'able'] = new Uint32Array(0x40), _0x3d10d1['_offsetTab' + 'le'] = new Uint32Array(0x40);
    class _0x188b3f {
        static ['READ_DATA']() {
            _0x188b3f['_DATA']['offset'] = _0x188b3f['_reader']['getUint32'](), _0x188b3f['_DATA']['size'] = _0x188b3f['_reader']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x2f67c5 = _0x188b3f['_BLOCK']['count'] = _0x188b3f['_reader']['getUint16'](), _0x2b9c8a = _0x188b3f['_BLOCK']['blockStart' + 's'] = [], _0x5071a1 = _0x188b3f['_BLOCK']['blockLengt' + 'hs'] = [], _0x1a4e0f = 0x0; _0x1a4e0f < _0x2f67c5; _0x1a4e0f++)
                _0x2b9c8a['push'](_0x188b3f['_reader']['getUint32']()), _0x5071a1['push'](_0x188b3f['_reader']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x499f11 = _0x188b3f['_reader']['getUint32'](), _0x4dba10 = _0x188b3f['_reader']['getUint16'](), _0x559e7d = _0x188b3f['_reader']['pos'];
            _0x188b3f['_reader']['pos'] = _0x499f11 + _0x188b3f['_DATA']['offset'];
            for (var _0x9653e3 = 0x0; _0x9653e3 < _0x4dba10; _0x9653e3++)
                _0x188b3f['_strings'][_0x9653e3] = _0x188b3f['_reader']['readUTFStr' + 'ing']();
            _0x188b3f['_reader']['pos'] = _0x559e7d;
        }
        static ['parse'](_0x5d2f51, _0xa1935c, _0x694e9b) {
            _0x188b3f['_animation' + 'Clip'] = _0x5d2f51, _0x188b3f['_reader'] = _0xa1935c, _0x188b3f['_version'] = _0x694e9b, _0x188b3f['READ_DATA'](), _0x188b3f['READ_BLOCK'](), _0x188b3f['READ_STRIN' + 'GS']();
            for (var _0x387db5 = 0x0, _0x3aff3e = _0x188b3f['_BLOCK']['count']; _0x387db5 < _0x3aff3e; _0x387db5++) {
                var _0x35b29c = _0xa1935c['getUint16'](), _0x3cac7d = _0x188b3f['_strings'][_0x35b29c], _0x3ae20e = _0x188b3f['READ_' + _0x3cac7d];
                if (null == _0x3ae20e)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x35b29c + '\x20' + _0x3cac7d);
                _0x3ae20e['call'](null);
            }
            _0x188b3f['_version'] = null, _0x188b3f['_reader'] = null, _0x188b3f['_animation' + 'Clip'] = null;
        }
        static ['READ_ANIMA' + 'TIONS']() {
            var _0xed15d2, _0xed668b, _0x36d9fc, _0x59359d = _0x188b3f['_reader'], _0x38f662 = (_0x59359d['__getBuffe' + 'r'](), []), _0x24f27d = _0x59359d['getUint16']();
            for (_0x38f662['length'] = _0x24f27d, _0xed15d2 = 0x0; _0xed15d2 < _0x24f27d; _0xed15d2++)
                _0x38f662[_0xed15d2] = _0x59359d['getFloat32']();
            var _0x302d26 = _0x188b3f['_animation' + 'Clip'];
            _0x302d26['name'] = _0x188b3f['_strings'][_0x59359d['getUint16']()];
            var _0x113669 = _0x302d26['_duration'] = _0x59359d['getFloat32']();
            _0x302d26['islooping'] = !!_0x59359d['getByte'](), _0x302d26['_frameRate'] = _0x59359d['getInt16']();
            var _0x5cc74a = _0x59359d['getInt16'](), _0x30af7f = _0x302d26['_nodes'];
            _0x30af7f['count'] = _0x5cc74a;
            var _0x3c30bb = _0x302d26['_nodesMap'] = {}, _0x5e4cf5 = _0x302d26['_nodesDic'] = {};
            for (_0xed15d2 = 0x0; _0xed15d2 < _0x5cc74a; _0xed15d2++) {
                _0x36d9fc = new _0x505044(), _0x30af7f['setNodeByI' + 'ndex'](_0xed15d2, _0x36d9fc), _0x36d9fc['_indexInLi' + 'st'] = _0xed15d2;
                var _0x19354b = _0x36d9fc['type'] = _0x59359d['getUint8'](), _0xa00812 = _0x59359d['getUint16']();
                for (_0x36d9fc['_setOwnerP' + 'athCount'](_0xa00812), _0xed668b = 0x0; _0xed668b < _0xa00812; _0xed668b++)
                    _0x36d9fc['_setOwnerP' + 'athByIndex'](_0xed668b, _0x188b3f['_strings'][_0x59359d['getUint16']()]);
                var _0x3a43e9 = _0x36d9fc['_joinOwner' + 'Path']('/'), _0x81bbed = _0x3c30bb[_0x3a43e9];
                _0x81bbed || (_0x3c30bb[_0x3a43e9] = _0x81bbed = []), _0x81bbed['push'](_0x36d9fc), _0x36d9fc['propertyOw' + 'ner'] = _0x188b3f['_strings'][_0x59359d['getUint16']()];
                var _0x79e99e = _0x59359d['getUint16']();
                for (_0x36d9fc['_setProper' + 'tyCount'](_0x79e99e), _0xed668b = 0x0; _0xed668b < _0x79e99e; _0xed668b++)
                    _0x36d9fc['_setProper' + 'tyByIndex'](_0xed668b, _0x188b3f['_strings'][_0x59359d['getUint16']()]);
                var _0x533753 = _0x3a43e9 + '.' + _0x36d9fc['propertyOw' + 'ner'] + '.' + _0x36d9fc['_joinPrope' + 'rty']('.');
                _0x5e4cf5[_0x533753] = _0x36d9fc, _0x36d9fc['fullPath'] = _0x533753;
                var _0x27af51 = _0x59359d['getUint16']();
                switch (_0x36d9fc['_setKeyfra' + 'meCount'](_0x27af51), _0x188b3f['_version']) {
                case 'LAYAANIMAT' + 'ION:04':
                    for (_0xed668b = 0x0; _0xed668b < _0x27af51; _0xed668b++)
                        switch (_0x19354b) {
                        case 0x0:
                            var _0x316d23 = new _0x157523();
                            _0x36d9fc['_setKeyfra' + 'meByIndex'](_0xed668b, _0x316d23), _0x316d23['time'] = _0x38f662[_0x59359d['getUint16']()], _0x316d23['inTangent'] = _0x59359d['getFloat32'](), _0x316d23['outTangent'] = _0x59359d['getFloat32'](), _0x316d23['value'] = _0x59359d['getFloat32']();
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            var _0x2c2887 = new _0x185756();
                            if (_0x36d9fc['_setKeyfra' + 'meByIndex'](_0xed668b, _0x2c2887), _0x2c2887['time'] = _0x38f662[_0x59359d['getUint16']()], _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (var _0x1a5d69 = _0x2c2887['data'] = new Float32Array(0x9), _0x237e11 = 0x0; _0x237e11 < 0x3; _0x237e11++)
                                    _0x1a5d69[_0x237e11] = _0x59359d['getFloat32']();
                                for (_0x237e11 = 0x0; _0x237e11 < 0x3; _0x237e11++)
                                    _0x1a5d69[0x3 + _0x237e11] = _0x59359d['getFloat32']();
                                for (_0x237e11 = 0x0; _0x237e11 < 0x3; _0x237e11++)
                                    _0x1a5d69[0x6 + _0x237e11] = _0x59359d['getFloat32']();
                            } else {
                                var _0x97bf72 = _0x2c2887['inTangent'], _0xa97e1e = _0x2c2887['outTangent'], _0x1b325f = _0x2c2887['value'];
                                _0x97bf72['x'] = _0x59359d['getFloat32'](), _0x97bf72['y'] = _0x59359d['getFloat32'](), _0x97bf72['z'] = _0x59359d['getFloat32'](), _0xa97e1e['x'] = _0x59359d['getFloat32'](), _0xa97e1e['y'] = _0x59359d['getFloat32'](), _0xa97e1e['z'] = _0x59359d['getFloat32'](), _0x1b325f['x'] = _0x59359d['getFloat32'](), _0x1b325f['y'] = _0x59359d['getFloat32'](), _0x1b325f['z'] = _0x59359d['getFloat32']();
                            }
                            break;
                        case 0x2:
                            var _0x1dd1ca = new _0x4d1789();
                            if (_0x36d9fc['_setKeyfra' + 'meByIndex'](_0xed668b, _0x1dd1ca), _0x1dd1ca['time'] = _0x38f662[_0x59359d['getUint16']()], _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (_0x1a5d69 = _0x1dd1ca['data'] = new Float32Array(0xc), _0x237e11 = 0x0; _0x237e11 < 0x4; _0x237e11++)
                                    _0x1a5d69[_0x237e11] = _0x59359d['getFloat32']();
                                for (_0x237e11 = 0x0; _0x237e11 < 0x4; _0x237e11++)
                                    _0x1a5d69[0x4 + _0x237e11] = _0x59359d['getFloat32']();
                                for (_0x237e11 = 0x0; _0x237e11 < 0x4; _0x237e11++)
                                    _0x1a5d69[0x8 + _0x237e11] = _0x59359d['getFloat32']();
                            } else {
                                var _0x5c7663 = _0x1dd1ca['inTangent'], _0x14d765 = _0x1dd1ca['outTangent'], _0x578975 = _0x1dd1ca['value'];
                                _0x5c7663['x'] = _0x59359d['getFloat32'](), _0x5c7663['y'] = _0x59359d['getFloat32'](), _0x5c7663['z'] = _0x59359d['getFloat32'](), _0x5c7663['w'] = _0x59359d['getFloat32'](), _0x14d765['x'] = _0x59359d['getFloat32'](), _0x14d765['y'] = _0x59359d['getFloat32'](), _0x14d765['z'] = _0x59359d['getFloat32'](), _0x14d765['w'] = _0x59359d['getFloat32'](), _0x578975['x'] = _0x59359d['getFloat32'](), _0x578975['y'] = _0x59359d['getFloat32'](), _0x578975['z'] = _0x59359d['getFloat32'](), _0x578975['w'] = _0x59359d['getFloat32']();
                            }
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                    break;
                case 'LAYAANIMAT' + 'ION:COMPRE' + 'SSION_04':
                    for (_0xed668b = 0x0; _0xed668b < _0x27af51; _0xed668b++)
                        switch (_0x19354b) {
                        case 0x0:
                            _0x316d23 = new _0x157523(), _0x36d9fc['_setKeyfra' + 'meByIndex'](_0xed668b, _0x316d23), _0x316d23['time'] = _0x38f662[_0x59359d['getUint16']()], _0x316d23['inTangent'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x316d23['outTangent'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x316d23['value'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            if (_0x2c2887 = new _0x185756(), _0x36d9fc['_setKeyfra' + 'meByIndex'](_0xed668b, _0x2c2887), _0x2c2887['time'] = _0x38f662[_0x59359d['getUint16']()], _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (_0x1a5d69 = _0x2c2887['data'] = new Float32Array(0x9), _0x237e11 = 0x0; _0x237e11 < 0x3; _0x237e11++)
                                    _0x1a5d69[_0x237e11] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                                for (_0x237e11 = 0x0; _0x237e11 < 0x3; _0x237e11++)
                                    _0x1a5d69[0x3 + _0x237e11] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                                for (_0x237e11 = 0x0; _0x237e11 < 0x3; _0x237e11++)
                                    _0x1a5d69[0x6 + _0x237e11] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                            } else
                                _0x97bf72 = _0x2c2887['inTangent'], _0xa97e1e = _0x2c2887['outTangent'], _0x1b325f = _0x2c2887['value'], _0x97bf72['x'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x97bf72['y'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x97bf72['z'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0xa97e1e['x'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0xa97e1e['y'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0xa97e1e['z'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x1b325f['x'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x1b325f['y'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x1b325f['z'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                            break;
                        case 0x2:
                            if (_0x1dd1ca = new _0x4d1789(), _0x36d9fc['_setKeyfra' + 'meByIndex'](_0xed668b, _0x1dd1ca), _0x1dd1ca['time'] = _0x38f662[_0x59359d['getUint16']()], _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                                for (_0x1a5d69 = _0x1dd1ca['data'] = new Float32Array(0xc), _0x237e11 = 0x0; _0x237e11 < 0x4; _0x237e11++)
                                    _0x1a5d69[_0x237e11] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                                for (_0x237e11 = 0x0; _0x237e11 < 0x4; _0x237e11++)
                                    _0x1a5d69[0x4 + _0x237e11] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                                for (_0x237e11 = 0x0; _0x237e11 < 0x4; _0x237e11++)
                                    _0x1a5d69[0x8 + _0x237e11] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                            } else
                                _0x5c7663 = _0x1dd1ca['inTangent'], _0x14d765 = _0x1dd1ca['outTangent'], _0x578975 = _0x1dd1ca['value'], _0x5c7663['x'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x5c7663['y'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x5c7663['z'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x5c7663['w'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x14d765['x'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x14d765['y'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x14d765['z'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x14d765['w'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x578975['x'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x578975['y'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x578975['z'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']()), _0x578975['w'] = _0x3d10d1['convertToN' + 'umber'](_0x59359d['getUint16']());
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                }
            }
            var _0x4ffe8d = _0x59359d['getUint16']();
            for (_0xed15d2 = 0x0; _0xed15d2 < _0x4ffe8d; _0xed15d2++) {
                var _0x4c1d52, _0xfd6d0c = new _0x1104b7();
                _0xfd6d0c['time'] = Math['min'](_0x113669, _0x59359d['getFloat32']()), _0xfd6d0c['eventName'] = _0x188b3f['_strings'][_0x59359d['getUint16']()];
                var _0x52bebb = _0x59359d['getUint16']();
                for (_0x52bebb > 0x0 && (_0xfd6d0c['params'] = _0x4c1d52 = []), _0xed668b = 0x0; _0xed668b < _0x52bebb; _0xed668b++) {
                    switch (_0x59359d['getByte']()) {
                    case 0x0:
                        _0x4c1d52['push'](!!_0x59359d['getByte']());
                        break;
                    case 0x1:
                        _0x4c1d52['push'](_0x59359d['getInt32']());
                        break;
                    case 0x2:
                        _0x4c1d52['push'](_0x59359d['getFloat32']());
                        break;
                    case 0x3:
                        _0x4c1d52['push'](_0x188b3f['_strings'][_0x59359d['getUint16']()]);
                        break;
                    default:
                        throw new Error('unknown\x20ty' + 'pe.');
                    }
                }
                _0x302d26['addEvent'](_0xfd6d0c);
            }
        }
    }
    _0x188b3f['_strings'] = [], _0x188b3f['_BLOCK'] = { 'count': 0x0 }, _0x188b3f['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    };
    class _0x25229b {
        constructor() {
            this['_nodes'] = [];
        }
        get ['count']() {
            return this['_nodes']['length'];
        }
        set ['count'](_0x2d9253) {
            this['_nodes']['length'] = _0x2d9253;
        }
        ['getNodeByI' + 'ndex'](_0x13ecd1) {
            return this['_nodes'][_0x13ecd1];
        }
        ['setNodeByI' + 'ndex'](_0x1662eb, _0x3c7d7a) {
            this['_nodes'][_0x1662eb] = _0x3c7d7a;
        }
    }
    class _0x4b9677 {
        constructor() {
        }
        static ['lightAtten' + 'Texture'](_0x56a34a, _0x3047c3, _0x1c46e1, _0x348e13, _0x20cbd9, _0x18a1dd) {
            var _0x567b1d = _0x56a34a / _0x1c46e1, _0x5c8bb4 = 0x1 / (0x1 + 0x19 * _0x567b1d);
            _0x567b1d >= 0.64 && (_0x567b1d > 0x1 ? _0x5c8bb4 = 0x0 : _0x5c8bb4 *= 0x1 - (_0x567b1d - 0.64) / 0.36), _0x18a1dd[_0x20cbd9] = Math['floor'](0xff * _0x5c8bb4 + 0.5);
        }
        static ['haloTextur' + 'e'](_0x4b7a6f, _0x3ab22c, _0x426eac, _0x291bef, _0x319e29, _0x241bb5) {
            var _0x1d3efc = (_0x4b7a6f - (_0x426eac >>= 0x1)) / _0x426eac, _0xa0596d = (_0x3ab22c - (_0x291bef >>= 0x1)) / _0x291bef, _0x2483c6 = _0x1d3efc * _0x1d3efc + _0xa0596d * _0xa0596d;
            _0x2483c6 > 0x1 && (_0x2483c6 = 0x1), _0x241bb5[_0x319e29] = Math['floor'](0xff * (0x1 - _0x2483c6) + 0.5);
        }
        static ['_generateT' + 'exture2D'](_0x5dc567, _0x2fa885, _0x29e886, _0xd71d82) {
            var _0x1353f1 = 0x0, _0x47d3f8 = 0x0;
            switch (_0x5dc567['format']) {
            case _0x33d6e0['TextureFor' + 'mat']['R8G8B8']:
                _0x47d3f8 = 0x3;
                break;
            case _0x33d6e0['TextureFor' + 'mat']['R8G8B8A8']:
                _0x47d3f8 = 0x4;
                break;
            case _0x33d6e0['TextureFor' + 'mat']['Alpha8']:
                _0x47d3f8 = 0x1;
                break;
            default:
                throw 'GeneratedT' + 'exture._ge' + 'nerateText' + 'ure:\x20unkon' + 'w\x20texture\x20' + 'format.';
            }
            for (var _0x1bb44a = new Uint8Array(_0x2fa885 * _0x29e886 * _0x47d3f8), _0x32591d = 0x0; _0x32591d < _0x29e886; _0x32591d++)
                for (var _0x4db34f = 0x0; _0x4db34f < _0x2fa885; _0x4db34f++)
                    _0xd71d82(_0x4db34f, _0x32591d, _0x2fa885, _0x29e886, _0x1353f1, _0x1bb44a), _0x1353f1 += _0x47d3f8;
            _0x5dc567['setPixels'](_0x1bb44a);
        }
    }
    class _0x10fe89 {
    }
    _0x10fe89['_bullet'] = null, _0x10fe89['_enablePhy' + 'sics'] = !0x1;
    class _0x89f66e {
        static ['_createFlo' + 'atTextureB' + 'uffer'](_0x484564, _0x4bf5ef) {
            var _0x4caf28 = new _0x33d6e0['Texture2D'](_0x484564, _0x4bf5ef, _0x33d6e0['TextureFor' + 'mat']['R32G32B32A' + '32'], !0x1, !0x1);
            return _0x4caf28['filterMode'] = _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_POINT'], _0x4caf28['wrapModeU'] = _0x33d6e0['BaseTextur' + 'e']['WARPMODE_C' + 'LAMP'], _0x4caf28['wrapModeV'] = _0x33d6e0['BaseTextur' + 'e']['WARPMODE_C' + 'LAMP'], _0x4caf28['anisoLevel'] = 0x0, _0x4caf28;
        }
        static ['_convertTo' + 'LayaVec3'](_0x4ce469, _0x404d7a, _0x36c755) {
            var _0x14b520 = _0x10fe89['_bullet'];
            _0x404d7a['x'] = _0x36c755 ? -_0x14b520['btVector3_' + 'x'](_0x4ce469) : _0x14b520['btVector3_' + 'x'](_0x4ce469), _0x404d7a['y'] = _0x14b520['btVector3_' + 'y'](_0x4ce469), _0x404d7a['z'] = _0x14b520['btVector3_' + 'z'](_0x4ce469);
        }
        static ['_convertTo' + 'BulletVec3'](_0x423747, _0x2df53b, _0x5ccb90) {
            _0x10fe89['_bullet']['btVector3_' + 'setValue'](_0x2df53b, _0x5ccb90 ? -_0x423747['x'] : _0x423747['x'], _0x423747['y'], _0x423747['z']);
        }
        static ['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x5231f9, _0x4aa542, _0x1bff33, _0x13184e, _0xccde63, _0x4e2493, _0x15c0b6, _0xfce6ac, _0x4c5b99, _0x4c7c0d, _0x5d4ab3, _0x238645) {
            var _0x369474, _0x5159c3, _0x59d76a, _0x2ccc08, _0x12d7b2, _0x4307d3 = _0x89f66e['_tempArray' + '16_0'], _0x5544e6 = _0x89f66e['_tempArray' + '16_1'], _0x521ef1 = _0x89f66e['_tempArray' + '16_2'], _0x50169f = _0x13184e + _0x13184e, _0x41e225 = _0xccde63 + _0xccde63, _0x253dec = _0x4e2493 + _0x4e2493, _0x4a5b68 = _0x13184e * _0x50169f, _0x415705 = _0xccde63 * _0x50169f, _0x96e5b3 = _0xccde63 * _0x41e225, _0x2d36fe = _0x4e2493 * _0x50169f, _0x2f27b6 = _0x4e2493 * _0x41e225, _0x11e38c = _0x4e2493 * _0x253dec, _0x4392bb = _0x15c0b6 * _0x50169f, _0x4d76f5 = _0x15c0b6 * _0x41e225, _0x651a48 = _0x15c0b6 * _0x253dec;
            for (_0x4307d3[0xf] = 0x1, _0x4307d3[0x0] = 0x1 - _0x96e5b3 - _0x11e38c, _0x4307d3[0x1] = _0x415705 + _0x651a48, _0x4307d3[0x2] = _0x2d36fe - _0x4d76f5, _0x4307d3[0x4] = _0x415705 - _0x651a48, _0x4307d3[0x5] = 0x1 - _0x4a5b68 - _0x11e38c, _0x4307d3[0x6] = _0x2f27b6 + _0x4392bb, _0x4307d3[0x8] = _0x2d36fe + _0x4d76f5, _0x4307d3[0x9] = _0x2f27b6 - _0x4392bb, _0x4307d3[0xa] = 0x1 - _0x4a5b68 - _0x96e5b3, _0x5544e6[0xf] = 0x1, _0x5544e6[0x0] = _0xfce6ac, _0x5544e6[0x5] = _0x4c5b99, _0x5544e6[0xa] = _0x4c7c0d, _0x369474 = 0x0; _0x369474 < 0x4; _0x369474++)
                _0x5159c3 = _0x4307d3[_0x369474], _0x59d76a = _0x4307d3[_0x369474 + 0x4], _0x2ccc08 = _0x4307d3[_0x369474 + 0x8], _0x12d7b2 = _0x4307d3[_0x369474 + 0xc], _0x521ef1[_0x369474] = _0x5159c3, _0x521ef1[_0x369474 + 0x4] = _0x59d76a, _0x521ef1[_0x369474 + 0x8] = _0x2ccc08, _0x521ef1[_0x369474 + 0xc] = _0x5159c3 * _0x5231f9 + _0x59d76a * _0x4aa542 + _0x2ccc08 * _0x1bff33 + _0x12d7b2;
            for (_0x369474 = 0x0; _0x369474 < 0x4; _0x369474++)
                _0x5159c3 = _0x521ef1[_0x369474], _0x59d76a = _0x521ef1[_0x369474 + 0x4], _0x2ccc08 = _0x521ef1[_0x369474 + 0x8], _0x12d7b2 = _0x521ef1[_0x369474 + 0xc], _0x5d4ab3[_0x369474 + _0x238645] = _0x5159c3 * _0x5544e6[0x0] + _0x59d76a * _0x5544e6[0x1] + _0x2ccc08 * _0x5544e6[0x2] + _0x12d7b2 * _0x5544e6[0x3], _0x5d4ab3[_0x369474 + _0x238645 + 0x4] = _0x5159c3 * _0x5544e6[0x4] + _0x59d76a * _0x5544e6[0x5] + _0x2ccc08 * _0x5544e6[0x6] + _0x12d7b2 * _0x5544e6[0x7], _0x5d4ab3[_0x369474 + _0x238645 + 0x8] = _0x5159c3 * _0x5544e6[0x8] + _0x59d76a * _0x5544e6[0x9] + _0x2ccc08 * _0x5544e6[0xa] + _0x12d7b2 * _0x5544e6[0xb], _0x5d4ab3[_0x369474 + _0x238645 + 0xc] = _0x5159c3 * _0x5544e6[0xc] + _0x59d76a * _0x5544e6[0xd] + _0x2ccc08 * _0x5544e6[0xe] + _0x12d7b2 * _0x5544e6[0xf];
        }
        static ['_computeBo' + 'neAndAnima' + 'tionDatasB' + 'yBindPoseM' + 'atrxix'](_0x26afdb, _0x217752, _0xbcec0b, _0x1b2998, _0x45d4df, _0x2d79c5) {
            var _0x2d26c7, _0x49558e, _0xbf0675 = 0x0, _0x1eb708 = 0x0, _0x2a8273 = _0x26afdb['length'];
            for (_0x2d26c7 = 0x0; _0x2d26c7 < _0x2a8273; _0xbf0675 += _0x26afdb[_0x2d26c7]['keyframeWi' + 'dth'], _0x1eb708 += 0x10, _0x2d26c7++)
                _0x89f66e['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x217752[_0xbf0675 + 0x0], _0x217752[_0xbf0675 + 0x1], _0x217752[_0xbf0675 + 0x2], _0x217752[_0xbf0675 + 0x3], _0x217752[_0xbf0675 + 0x4], _0x217752[_0xbf0675 + 0x5], _0x217752[_0xbf0675 + 0x6], _0x217752[_0xbf0675 + 0x7], _0x217752[_0xbf0675 + 0x8], _0x217752[_0xbf0675 + 0x9], _0x1b2998, _0x1eb708), 0x0 != _0x2d26c7 && (_0x49558e = 0x10 * _0x26afdb[_0x2d26c7]['parentInde' + 'x'], _0x89f66e['mulMatrixB' + 'yArray'](_0x1b2998, _0x49558e, _0x1b2998, _0x1eb708, _0x1b2998, _0x1eb708));
            var _0x1d62ea = _0xbcec0b['length'];
            for (_0x2d26c7 = 0x0; _0x2d26c7 < _0x1d62ea; _0x2d26c7++)
                _0x89f66e['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x1b2998, 0x10 * _0x2d79c5[_0x2d26c7], _0xbcec0b[_0x2d26c7], _0x45d4df, 0x10 * _0x2d26c7);
        }
        static ['_computeAn' + 'imationDat' + 'asByArrayA' + 'ndMatrixFa' + 'st'](_0x344303, _0x4211ac, _0x3febb7, _0x271db1) {
            for (var _0x11e334 = 0x0, _0x3f1705 = _0x344303['length']; _0x11e334 < _0x3f1705; _0x11e334++)
                _0x89f66e['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x4211ac, 0x10 * _0x271db1[_0x11e334], _0x344303[_0x11e334], _0x3febb7, 0x10 * _0x11e334);
        }
        static ['_computeBo' + 'neAndAnima' + 'tionDatasB' + 'yBindPoseM' + 'atrxixOld'](_0x46980e, _0x4663e2, _0x1c6674, _0x666d3b, _0x3a7bd2) {
            var _0x4e7fa6, _0x4f2192, _0x532fd5 = 0x0, _0x22b511 = 0x0, _0x3b46db = _0x46980e['length'];
            for (_0x4e7fa6 = 0x0; _0x4e7fa6 < _0x3b46db; _0x532fd5 += _0x46980e[_0x4e7fa6]['keyframeWi' + 'dth'], _0x22b511 += 0x10, _0x4e7fa6++)
                _0x89f66e['_rotationT' + 'ransformSc' + 'aleSkinAni' + 'mation'](_0x4663e2[_0x532fd5 + 0x7], _0x4663e2[_0x532fd5 + 0x8], _0x4663e2[_0x532fd5 + 0x9], _0x4663e2[_0x532fd5 + 0x3], _0x4663e2[_0x532fd5 + 0x4], _0x4663e2[_0x532fd5 + 0x5], _0x4663e2[_0x532fd5 + 0x6], _0x4663e2[_0x532fd5 + 0x0], _0x4663e2[_0x532fd5 + 0x1], _0x4663e2[_0x532fd5 + 0x2], _0x666d3b, _0x22b511), 0x0 != _0x4e7fa6 && (_0x4f2192 = 0x10 * _0x46980e[_0x4e7fa6]['parentInde' + 'x'], _0x89f66e['mulMatrixB' + 'yArray'](_0x666d3b, _0x4f2192, _0x666d3b, _0x22b511, _0x666d3b, _0x22b511));
            var _0x58595b = _0x1c6674['length'];
            for (_0x4e7fa6 = 0x0; _0x4e7fa6 < _0x58595b; _0x4e7fa6++) {
                var _0x640e4 = 0x10 * _0x4e7fa6;
                _0x89f66e['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x666d3b, _0x640e4, _0x1c6674[_0x4e7fa6], _0x3a7bd2, _0x640e4);
            }
        }
        static ['_computeAn' + 'imationDat' + 'asByArrayA' + 'ndMatrixFa' + 'stOld'](_0x4c6b3a, _0x562692, _0x2dd720) {
            for (var _0x32f4db = _0x4c6b3a['length'], _0x52c9d2 = 0x0; _0x52c9d2 < _0x32f4db; _0x52c9d2++) {
                var _0x2bd644 = 0x10 * _0x52c9d2;
                _0x89f66e['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x562692, _0x2bd644, _0x4c6b3a[_0x52c9d2], _0x2dd720, _0x2bd644);
            }
        }
        static ['_computeRo' + 'otAnimatio' + 'nData'](_0x3c8e2c, _0xdabe9, _0x4156de) {
            for (var _0xe8c56f = 0x0, _0x1bf932 = 0x0, _0x2bfc69 = 0x0, _0x212efc = _0x3c8e2c['length']; _0xe8c56f < _0x212efc; _0x1bf932 += _0x3c8e2c[_0xe8c56f]['keyframeWi' + 'dth'], _0x2bfc69 += 0x10, _0xe8c56f++)
                _0x89f66e['createAffi' + 'neTransfor' + 'mationArra' + 'y'](_0xdabe9[_0x1bf932 + 0x0], _0xdabe9[_0x1bf932 + 0x1], _0xdabe9[_0x1bf932 + 0x2], _0xdabe9[_0x1bf932 + 0x3], _0xdabe9[_0x1bf932 + 0x4], _0xdabe9[_0x1bf932 + 0x5], _0xdabe9[_0x1bf932 + 0x6], _0xdabe9[_0x1bf932 + 0x7], _0xdabe9[_0x1bf932 + 0x8], _0xdabe9[_0x1bf932 + 0x9], _0x4156de, _0x2bfc69);
        }
        static ['transformV' + 'ector3Arra' + 'yByQuat'](_0x2428f1, _0x3ba533, _0x30ef6f, _0x19fd7d, _0x48ac93) {
            var _0x23f435 = _0x2428f1[_0x3ba533], _0x572d21 = _0x2428f1[_0x3ba533 + 0x1], _0x58b1ea = _0x2428f1[_0x3ba533 + 0x2], _0x4d63f4 = _0x30ef6f['x'], _0x1b26d5 = _0x30ef6f['y'], _0x55e03b = _0x30ef6f['z'], _0x1789d0 = _0x30ef6f['w'], _0x2cdc91 = _0x1789d0 * _0x23f435 + _0x1b26d5 * _0x58b1ea - _0x55e03b * _0x572d21, _0x114469 = _0x1789d0 * _0x572d21 + _0x55e03b * _0x23f435 - _0x4d63f4 * _0x58b1ea, _0xda6f61 = _0x1789d0 * _0x58b1ea + _0x4d63f4 * _0x572d21 - _0x1b26d5 * _0x23f435, _0xd44dd2 = -_0x4d63f4 * _0x23f435 - _0x1b26d5 * _0x572d21 - _0x55e03b * _0x58b1ea;
            _0x19fd7d[_0x48ac93] = _0x2cdc91 * _0x1789d0 + _0xd44dd2 * -_0x4d63f4 + _0x114469 * -_0x55e03b - _0xda6f61 * -_0x1b26d5, _0x19fd7d[_0x48ac93 + 0x1] = _0x114469 * _0x1789d0 + _0xd44dd2 * -_0x1b26d5 + _0xda6f61 * -_0x4d63f4 - _0x2cdc91 * -_0x55e03b, _0x19fd7d[_0x48ac93 + 0x2] = _0xda6f61 * _0x1789d0 + _0xd44dd2 * -_0x55e03b + _0x2cdc91 * -_0x1b26d5 - _0x114469 * -_0x4d63f4;
        }
        static ['mulMatrixB' + 'yArray'](_0x1984d9, _0x14e52d, _0x79ce53, _0x349335, _0x163e3b, _0x3997aa) {
            var _0x5d53d8, _0x4788ad, _0x3d2241, _0x52a95d, _0x56513d;
            if (_0x163e3b === _0x79ce53) {
                for (_0x79ce53 = _0x89f66e['_tempArray' + '16_3'], _0x5d53d8 = 0x0; _0x5d53d8 < 0x10; ++_0x5d53d8)
                    _0x79ce53[_0x5d53d8] = _0x163e3b[_0x3997aa + _0x5d53d8];
                _0x349335 = 0x0;
            }
            for (_0x5d53d8 = 0x0; _0x5d53d8 < 0x4; _0x5d53d8++)
                _0x4788ad = _0x1984d9[_0x14e52d + _0x5d53d8], _0x3d2241 = _0x1984d9[_0x14e52d + _0x5d53d8 + 0x4], _0x52a95d = _0x1984d9[_0x14e52d + _0x5d53d8 + 0x8], _0x56513d = _0x1984d9[_0x14e52d + _0x5d53d8 + 0xc], _0x163e3b[_0x3997aa + _0x5d53d8] = _0x4788ad * _0x79ce53[_0x349335 + 0x0] + _0x3d2241 * _0x79ce53[_0x349335 + 0x1] + _0x52a95d * _0x79ce53[_0x349335 + 0x2] + _0x56513d * _0x79ce53[_0x349335 + 0x3], _0x163e3b[_0x3997aa + _0x5d53d8 + 0x4] = _0x4788ad * _0x79ce53[_0x349335 + 0x4] + _0x3d2241 * _0x79ce53[_0x349335 + 0x5] + _0x52a95d * _0x79ce53[_0x349335 + 0x6] + _0x56513d * _0x79ce53[_0x349335 + 0x7], _0x163e3b[_0x3997aa + _0x5d53d8 + 0x8] = _0x4788ad * _0x79ce53[_0x349335 + 0x8] + _0x3d2241 * _0x79ce53[_0x349335 + 0x9] + _0x52a95d * _0x79ce53[_0x349335 + 0xa] + _0x56513d * _0x79ce53[_0x349335 + 0xb], _0x163e3b[_0x3997aa + _0x5d53d8 + 0xc] = _0x4788ad * _0x79ce53[_0x349335 + 0xc] + _0x3d2241 * _0x79ce53[_0x349335 + 0xd] + _0x52a95d * _0x79ce53[_0x349335 + 0xe] + _0x56513d * _0x79ce53[_0x349335 + 0xf];
        }
        static ['mulMatrixB' + 'yArrayFast'](_0xea35a9, _0x4e6f9e, _0x1488e6, _0x1151f9, _0x2ed5b0, _0x54493f) {
            var _0x550e67, _0x1dfaef, _0xc92a6e, _0x387259, _0x4fb42b;
            for (_0x550e67 = 0x0; _0x550e67 < 0x4; _0x550e67++)
                _0x1dfaef = _0xea35a9[_0x4e6f9e + _0x550e67], _0xc92a6e = _0xea35a9[_0x4e6f9e + _0x550e67 + 0x4], _0x387259 = _0xea35a9[_0x4e6f9e + _0x550e67 + 0x8], _0x4fb42b = _0xea35a9[_0x4e6f9e + _0x550e67 + 0xc], _0x2ed5b0[_0x54493f + _0x550e67] = _0x1dfaef * _0x1488e6[_0x1151f9 + 0x0] + _0xc92a6e * _0x1488e6[_0x1151f9 + 0x1] + _0x387259 * _0x1488e6[_0x1151f9 + 0x2] + _0x4fb42b * _0x1488e6[_0x1151f9 + 0x3], _0x2ed5b0[_0x54493f + _0x550e67 + 0x4] = _0x1dfaef * _0x1488e6[_0x1151f9 + 0x4] + _0xc92a6e * _0x1488e6[_0x1151f9 + 0x5] + _0x387259 * _0x1488e6[_0x1151f9 + 0x6] + _0x4fb42b * _0x1488e6[_0x1151f9 + 0x7], _0x2ed5b0[_0x54493f + _0x550e67 + 0x8] = _0x1dfaef * _0x1488e6[_0x1151f9 + 0x8] + _0xc92a6e * _0x1488e6[_0x1151f9 + 0x9] + _0x387259 * _0x1488e6[_0x1151f9 + 0xa] + _0x4fb42b * _0x1488e6[_0x1151f9 + 0xb], _0x2ed5b0[_0x54493f + _0x550e67 + 0xc] = _0x1dfaef * _0x1488e6[_0x1151f9 + 0xc] + _0xc92a6e * _0x1488e6[_0x1151f9 + 0xd] + _0x387259 * _0x1488e6[_0x1151f9 + 0xe] + _0x4fb42b * _0x1488e6[_0x1151f9 + 0xf];
        }
        static ['mulMatrixB' + 'yArrayAndM' + 'atrixFast'](_0x51ae2a, _0x344818, _0x4f8792, _0x467150, _0x1c7d34) {
            var _0x435c32, _0x57f704, _0x4791da, _0x1604ea, _0xff9c45, _0xc2964b = _0x4f8792['elements'], _0x13e7e7 = _0xc2964b[0x0], _0x51b954 = _0xc2964b[0x1], _0x5859fc = _0xc2964b[0x2], _0xc6ab09 = _0xc2964b[0x3], _0x4288b8 = _0xc2964b[0x4], _0x3e36a9 = _0xc2964b[0x5], _0x3a2f6c = _0xc2964b[0x6], _0x2bc601 = _0xc2964b[0x7], _0x3032f1 = _0xc2964b[0x8], _0x348fa6 = _0xc2964b[0x9], _0x2c7c19 = _0xc2964b[0xa], _0x4cb1a7 = _0xc2964b[0xb], _0x53868c = _0xc2964b[0xc], _0x5509a7 = _0xc2964b[0xd], _0x191220 = _0xc2964b[0xe], _0x1f0dc5 = _0xc2964b[0xf], _0x145f6c = _0x344818, _0x2a6a76 = _0x344818 + 0x4, _0x25d843 = _0x344818 + 0x8, _0x2d9b45 = _0x344818 + 0xc, _0x200f95 = _0x1c7d34, _0x24b966 = _0x1c7d34 + 0x4, _0x534ce0 = _0x1c7d34 + 0x8, _0x449ff2 = _0x1c7d34 + 0xc;
            for (_0x435c32 = 0x0; _0x435c32 < 0x4; _0x435c32++)
                _0x57f704 = _0x51ae2a[_0x145f6c + _0x435c32], _0x4791da = _0x51ae2a[_0x2a6a76 + _0x435c32], _0x1604ea = _0x51ae2a[_0x25d843 + _0x435c32], _0xff9c45 = _0x51ae2a[_0x2d9b45 + _0x435c32], _0x467150[_0x200f95 + _0x435c32] = _0x57f704 * _0x13e7e7 + _0x4791da * _0x51b954 + _0x1604ea * _0x5859fc + _0xff9c45 * _0xc6ab09, _0x467150[_0x24b966 + _0x435c32] = _0x57f704 * _0x4288b8 + _0x4791da * _0x3e36a9 + _0x1604ea * _0x3a2f6c + _0xff9c45 * _0x2bc601, _0x467150[_0x534ce0 + _0x435c32] = _0x57f704 * _0x3032f1 + _0x4791da * _0x348fa6 + _0x1604ea * _0x2c7c19 + _0xff9c45 * _0x4cb1a7, _0x467150[_0x449ff2 + _0x435c32] = _0x57f704 * _0x53868c + _0x4791da * _0x5509a7 + _0x1604ea * _0x191220 + _0xff9c45 * _0x1f0dc5;
        }
        static ['createAffi' + 'neTransfor' + 'mationArra' + 'y'](_0x52ef7e, _0x1bbd24, _0x596aa6, _0x8cebe7, _0x4c6178, _0x4615e3, _0x5ee053, _0x557e0c, _0x20cf63, _0x3c734c, _0x43539e, _0x35dcd6) {
            var _0x4df99c = _0x8cebe7 + _0x8cebe7, _0x17de10 = _0x4c6178 + _0x4c6178, _0x5a6a36 = _0x4615e3 + _0x4615e3, _0x5dd2e8 = _0x8cebe7 * _0x4df99c, _0x51b505 = _0x8cebe7 * _0x17de10, _0x436b81 = _0x8cebe7 * _0x5a6a36, _0x2e92ac = _0x4c6178 * _0x17de10, _0x4d8269 = _0x4c6178 * _0x5a6a36, _0x558d31 = _0x4615e3 * _0x5a6a36, _0x196ecb = _0x5ee053 * _0x4df99c, _0x2bd165 = _0x5ee053 * _0x17de10, _0x495e9d = _0x5ee053 * _0x5a6a36;
            _0x43539e[_0x35dcd6 + 0x0] = (0x1 - (_0x2e92ac + _0x558d31)) * _0x557e0c, _0x43539e[_0x35dcd6 + 0x1] = (_0x51b505 + _0x495e9d) * _0x557e0c, _0x43539e[_0x35dcd6 + 0x2] = (_0x436b81 - _0x2bd165) * _0x557e0c, _0x43539e[_0x35dcd6 + 0x3] = 0x0, _0x43539e[_0x35dcd6 + 0x4] = (_0x51b505 - _0x495e9d) * _0x20cf63, _0x43539e[_0x35dcd6 + 0x5] = (0x1 - (_0x5dd2e8 + _0x558d31)) * _0x20cf63, _0x43539e[_0x35dcd6 + 0x6] = (_0x4d8269 + _0x196ecb) * _0x20cf63, _0x43539e[_0x35dcd6 + 0x7] = 0x0, _0x43539e[_0x35dcd6 + 0x8] = (_0x436b81 + _0x2bd165) * _0x3c734c, _0x43539e[_0x35dcd6 + 0x9] = (_0x4d8269 - _0x196ecb) * _0x3c734c, _0x43539e[_0x35dcd6 + 0xa] = (0x1 - (_0x5dd2e8 + _0x2e92ac)) * _0x3c734c, _0x43539e[_0x35dcd6 + 0xb] = 0x0, _0x43539e[_0x35dcd6 + 0xc] = _0x52ef7e, _0x43539e[_0x35dcd6 + 0xd] = _0x1bbd24, _0x43539e[_0x35dcd6 + 0xe] = _0x596aa6, _0x43539e[_0x35dcd6 + 0xf] = 0x1;
        }
        static ['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x4c9081, _0x3c55e4, _0xb394f, _0xaf266f, _0x2195de) {
            var _0x2ab043 = _0x4c9081[_0x3c55e4 + 0x0], _0x1d325f = _0x4c9081[_0x3c55e4 + 0x1], _0xd2c285 = _0x4c9081[_0x3c55e4 + 0x2], _0x261d98 = _0xb394f['elements'], _0xde1d26 = _0x2ab043 * _0x261d98[0x3] + _0x1d325f * _0x261d98[0x7] + _0xd2c285 * _0x261d98[0xb] + _0x261d98[0xf];
            _0xaf266f[_0x2195de] = _0x2ab043 * _0x261d98[0x0] + _0x1d325f * _0x261d98[0x4] + _0xd2c285 * _0x261d98[0x8] + _0x261d98[0xc] / _0xde1d26, _0xaf266f[_0x2195de + 0x1] = _0x2ab043 * _0x261d98[0x1] + _0x1d325f * _0x261d98[0x5] + _0xd2c285 * _0x261d98[0x9] + _0x261d98[0xd] / _0xde1d26, _0xaf266f[_0x2195de + 0x2] = _0x2ab043 * _0x261d98[0x2] + _0x1d325f * _0x261d98[0x6] + _0xd2c285 * _0x261d98[0xa] + _0x261d98[0xe] / _0xde1d26;
        }
        static ['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x4b29b7, _0x2cf9e2, _0x5b3f2e, _0x24cf6a, _0x31950b) {
            var _0x1b7d85 = _0x4b29b7[_0x2cf9e2 + 0x0], _0x352aa3 = _0x4b29b7[_0x2cf9e2 + 0x1], _0x317ec2 = _0x4b29b7[_0x2cf9e2 + 0x2], _0x4c386f = _0x5b3f2e['elements'];
            _0x24cf6a[_0x31950b] = _0x1b7d85 * _0x4c386f[0x0] + _0x352aa3 * _0x4c386f[0x4] + _0x317ec2 * _0x4c386f[0x8], _0x24cf6a[_0x31950b + 0x1] = _0x1b7d85 * _0x4c386f[0x1] + _0x352aa3 * _0x4c386f[0x5] + _0x317ec2 * _0x4c386f[0x9], _0x24cf6a[_0x31950b + 0x2] = _0x1b7d85 * _0x4c386f[0x2] + _0x352aa3 * _0x4c386f[0x6] + _0x317ec2 * _0x4c386f[0xa];
        }
        static ['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x4ec9e6, _0x5811c5, _0x4e52d4, _0x2d49e2, _0x4e24b6) {
            _0x2d49e2[_0x4e24b6 + 0x0] = _0x4ec9e6[_0x5811c5 + 0x0] * _0x4e52d4['x'] + _0x4e52d4['z'], _0x2d49e2[_0x4e24b6 + 0x1] = 0x1 - ((0x1 - _0x4ec9e6[_0x5811c5 + 0x1]) * _0x4e52d4['y'] + _0x4e52d4['w']);
        }
        static ['getURLVeri' + 'on'](_0x45a70c) {
            var _0x1e01d5 = _0x45a70c['indexOf']('?');
            return _0x1e01d5 >= 0x0 ? _0x45a70c['substr'](_0x1e01d5) : null;
        }
        static ['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](_0x23ad46, _0xf7f120, _0x222248, _0x48acc1) {
            var _0xd5c5a9 = _0xf7f120['x'], _0x4c76e9 = _0xf7f120['y'], _0x456772 = _0xf7f120['z'], _0x30dd9c = _0xf7f120['w'], _0x14dc57 = _0xd5c5a9 + _0xd5c5a9, _0x37c6d6 = _0x4c76e9 + _0x4c76e9, _0x38c8be = _0x456772 + _0x456772, _0x5a0b11 = _0xd5c5a9 * _0x14dc57, _0x5968ec = _0xd5c5a9 * _0x37c6d6, _0x3f3216 = _0xd5c5a9 * _0x38c8be, _0x3e4703 = _0x4c76e9 * _0x37c6d6, _0xd7c013 = _0x4c76e9 * _0x38c8be, _0x97b30a = _0x456772 * _0x38c8be, _0x321db4 = _0x30dd9c * _0x14dc57, _0xffb2f6 = _0x30dd9c * _0x37c6d6, _0x2103f2 = _0x30dd9c * _0x38c8be, _0x503cb6 = _0x222248['x'], _0x1ce6c3 = _0x222248['y'], _0x32504e = _0x222248['z'];
            _0x48acc1[0x0] = (0x1 - (_0x3e4703 + _0x97b30a)) * _0x503cb6, _0x48acc1[0x1] = (_0x5968ec + _0x2103f2) * _0x503cb6, _0x48acc1[0x2] = (_0x3f3216 - _0xffb2f6) * _0x503cb6, _0x48acc1[0x3] = 0x0, _0x48acc1[0x4] = (_0x5968ec - _0x2103f2) * _0x1ce6c3, _0x48acc1[0x5] = (0x1 - (_0x5a0b11 + _0x97b30a)) * _0x1ce6c3, _0x48acc1[0x6] = (_0xd7c013 + _0x321db4) * _0x1ce6c3, _0x48acc1[0x7] = 0x0, _0x48acc1[0x8] = (_0x3f3216 + _0xffb2f6) * _0x32504e, _0x48acc1[0x9] = (_0xd7c013 - _0x321db4) * _0x32504e, _0x48acc1[0xa] = (0x1 - (_0x5a0b11 + _0x3e4703)) * _0x32504e, _0x48acc1[0xb] = 0x0, _0x48acc1[0xc] = _0x23ad46['x'], _0x48acc1[0xd] = _0x23ad46['y'], _0x48acc1[0xe] = _0x23ad46['z'], _0x48acc1[0xf] = 0x1;
        }
        static ['_mulMatrix' + 'Array'](_0x3bc52b, _0x29d674, _0x2337a3, _0xd1113d) {
            var _0x32a850, _0x439379, _0x2d9715, _0x3af43c, _0x34abf3, _0x2f980c = _0x29d674['elements'], _0x3e1660 = _0x2f980c[0x0], _0x31c46b = _0x2f980c[0x1], _0x464798 = _0x2f980c[0x2], _0x4311cd = _0x2f980c[0x3], _0x1fbe18 = _0x2f980c[0x4], _0x194585 = _0x2f980c[0x5], _0x2aba83 = _0x2f980c[0x6], _0x4e9c3e = _0x2f980c[0x7], _0x567019 = _0x2f980c[0x8], _0x5c7a3c = _0x2f980c[0x9], _0x529685 = _0x2f980c[0xa], _0x1a1d93 = _0x2f980c[0xb], _0x6d073 = _0x2f980c[0xc], _0x435028 = _0x2f980c[0xd], _0x5e3435 = _0x2f980c[0xe], _0x1d19d6 = _0x2f980c[0xf], _0x430dde = _0xd1113d, _0x1f9d7b = _0xd1113d + 0x4, _0x3d1290 = _0xd1113d + 0x8, _0x7bf24 = _0xd1113d + 0xc;
            for (_0x32a850 = 0x0; _0x32a850 < 0x4; _0x32a850++)
                _0x439379 = _0x3bc52b[_0x32a850], _0x2d9715 = _0x3bc52b[_0x32a850 + 0x4], _0x3af43c = _0x3bc52b[_0x32a850 + 0x8], _0x34abf3 = _0x3bc52b[_0x32a850 + 0xc], _0x2337a3[_0x430dde + _0x32a850] = _0x439379 * _0x3e1660 + _0x2d9715 * _0x31c46b + _0x3af43c * _0x464798 + _0x34abf3 * _0x4311cd, _0x2337a3[_0x1f9d7b + _0x32a850] = _0x439379 * _0x1fbe18 + _0x2d9715 * _0x194585 + _0x3af43c * _0x2aba83 + _0x34abf3 * _0x4e9c3e, _0x2337a3[_0x3d1290 + _0x32a850] = _0x439379 * _0x567019 + _0x2d9715 * _0x5c7a3c + _0x3af43c * _0x529685 + _0x34abf3 * _0x1a1d93, _0x2337a3[_0x7bf24 + _0x32a850] = _0x439379 * _0x6d073 + _0x2d9715 * _0x435028 + _0x3af43c * _0x5e3435 + _0x34abf3 * _0x1d19d6;
        }
        static ['arcTanAngl' + 'e'](_0x55bfff, _0x2e040b) {
            return 0x0 == _0x55bfff ? 0x1 == _0x2e040b ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x55bfff > 0x0 ? Math['atan'](_0x2e040b / _0x55bfff) : _0x55bfff < 0x0 ? _0x2e040b > 0x0 ? Math['atan'](_0x2e040b / _0x55bfff) + Math['PI'] : Math['atan'](_0x2e040b / _0x55bfff) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0x12bd44, _0x3af226, _0x29866c) {
            _0x4795b3['subtract'](_0x3af226, _0x12bd44, _0x5958af['TEMPVector' + '30']), _0x4795b3['normalize'](_0x5958af['TEMPVector' + '30'], _0x5958af['TEMPVector' + '30']), _0x29866c['x'] = Math['asin'](_0x5958af['TEMPVector' + '30']['y']), _0x29866c['y'] = _0x89f66e['arcTanAngl' + 'e'](-_0x5958af['TEMPVector' + '30']['z'], -_0x5958af['TEMPVector' + '30']['x']);
        }
        static ['transformQ' + 'uat'](_0x255081, _0xbbcc29, _0x1569dd) {
            var _0x583137 = _0xbbcc29, _0x3a5628 = _0x255081['x'], _0x4ed4e8 = _0x255081['y'], _0x3530ba = _0x255081['z'], _0x4e224b = _0x583137[0x0], _0x514ec4 = _0x583137[0x1], _0x3eaa33 = _0x583137[0x2], _0x507f9b = _0x583137[0x3], _0x377e16 = _0x507f9b * _0x3a5628 + _0x514ec4 * _0x3530ba - _0x3eaa33 * _0x4ed4e8, _0x4a58bb = _0x507f9b * _0x4ed4e8 + _0x3eaa33 * _0x3a5628 - _0x4e224b * _0x3530ba, _0x365df4 = _0x507f9b * _0x3530ba + _0x4e224b * _0x4ed4e8 - _0x514ec4 * _0x3a5628, _0x3e9d82 = -_0x4e224b * _0x3a5628 - _0x514ec4 * _0x4ed4e8 - _0x3eaa33 * _0x3530ba;
            _0x1569dd['x'] = _0x377e16 * _0x507f9b + _0x3e9d82 * -_0x4e224b + _0x4a58bb * -_0x3eaa33 - _0x365df4 * -_0x514ec4, _0x1569dd['y'] = _0x4a58bb * _0x507f9b + _0x3e9d82 * -_0x514ec4 + _0x365df4 * -_0x4e224b - _0x377e16 * -_0x3eaa33, _0x1569dd['z'] = _0x365df4 * _0x507f9b + _0x3e9d82 * -_0x3eaa33 + _0x377e16 * -_0x514ec4 - _0x4a58bb * -_0x4e224b;
        }
        static ['quaternion' + 'Weight'](_0x193de7, _0x444d37, _0x31826b) {
            _0x31826b['x'] = _0x193de7['x'] * _0x444d37, _0x31826b['y'] = _0x193de7['y'] * _0x444d37, _0x31826b['z'] = _0x193de7['z'] * _0x444d37, _0x31826b['w'] = _0x193de7['w'];
        }
        static ['quaternion' + 'Conjugate'](_0x14992b, _0xa74906) {
            _0xa74906['x'] = -_0x14992b['x'], _0xa74906['y'] = -_0x14992b['y'], _0xa74906['z'] = -_0x14992b['z'], _0xa74906['w'] = _0x14992b['w'];
        }
        static ['scaleWeigh' + 't'](_0x32e3d4, _0x89e499, _0x2ec419) {
            var _0x42749f = _0x32e3d4['x'], _0x27332c = _0x32e3d4['y'], _0x1d9fa3 = _0x32e3d4['z'];
            _0x2ec419['x'] = _0x42749f > 0x0 ? Math['pow'](Math['abs'](_0x42749f), _0x89e499) : -Math['pow'](Math['abs'](_0x42749f), _0x89e499), _0x2ec419['y'] = _0x27332c > 0x0 ? Math['pow'](Math['abs'](_0x27332c), _0x89e499) : -Math['pow'](Math['abs'](_0x27332c), _0x89e499), _0x2ec419['z'] = _0x1d9fa3 > 0x0 ? Math['pow'](Math['abs'](_0x1d9fa3), _0x89e499) : -Math['pow'](Math['abs'](_0x1d9fa3), _0x89e499);
        }
        static ['scaleBlend'](_0x5b4a99, _0x1a6e7c, _0x1b9382, _0xf9d921) {
            var _0x5dcb23 = _0x89f66e['_tempVecto' + 'r3_0'], _0x4dd7a9 = _0x89f66e['_tempVecto' + 'r3_1'];
            _0x89f66e['scaleWeigh' + 't'](_0x5b4a99, 0x1 - _0x1b9382, _0x5dcb23), _0x89f66e['scaleWeigh' + 't'](_0x1a6e7c, _0x1b9382, _0x4dd7a9);
            var _0x56592c = _0x1b9382 > 0.5 ? _0x1a6e7c : _0x5b4a99;
            _0xf9d921['x'] = _0x56592c['x'] > 0x0 ? Math['abs'](_0x5dcb23['x'] * _0x4dd7a9['x']) : -Math['abs'](_0x5dcb23['x'] * _0x4dd7a9['x']), _0xf9d921['y'] = _0x56592c['y'] > 0x0 ? Math['abs'](_0x5dcb23['y'] * _0x4dd7a9['y']) : -Math['abs'](_0x5dcb23['y'] * _0x4dd7a9['y']), _0xf9d921['z'] = _0x56592c['z'] > 0x0 ? Math['abs'](_0x5dcb23['z'] * _0x4dd7a9['z']) : -Math['abs'](_0x5dcb23['z'] * _0x4dd7a9['z']);
        }
        static ['matrix4x4M' + 'ultiplyFFF'](_0x566e06, _0x516592, _0x11a62b) {
            var _0x541a48, _0x975f15, _0x18f6a4, _0x352680, _0x5ba249;
            if (_0x11a62b === _0x516592) {
                for (_0x516592 = new Float32Array(0x10), _0x541a48 = 0x0; _0x541a48 < 0x10; ++_0x541a48)
                    _0x516592[_0x541a48] = _0x11a62b[_0x541a48];
            }
            var _0x2819a8 = _0x516592[0x0], _0x309b86 = _0x516592[0x1], _0xde23dc = _0x516592[0x2], _0x72ea8 = _0x516592[0x3], _0x34d3f8 = _0x516592[0x4], _0xd0bc0a = _0x516592[0x5], _0x19902d = _0x516592[0x6], _0x5b1ab4 = _0x516592[0x7], _0x12f548 = _0x516592[0x8], _0xd74bef = _0x516592[0x9], _0x170c88 = _0x516592[0xa], _0x5b4f62 = _0x516592[0xb], _0x1c45fd = _0x516592[0xc], _0x4aa3e9 = _0x516592[0xd], _0x40a50a = _0x516592[0xe], _0x344ecc = _0x516592[0xf];
            for (_0x541a48 = 0x0; _0x541a48 < 0x4; _0x541a48++)
                _0x975f15 = _0x566e06[_0x541a48], _0x18f6a4 = _0x566e06[_0x541a48 + 0x4], _0x352680 = _0x566e06[_0x541a48 + 0x8], _0x5ba249 = _0x566e06[_0x541a48 + 0xc], _0x11a62b[_0x541a48] = _0x975f15 * _0x2819a8 + _0x18f6a4 * _0x309b86 + _0x352680 * _0xde23dc + _0x5ba249 * _0x72ea8, _0x11a62b[_0x541a48 + 0x4] = _0x975f15 * _0x34d3f8 + _0x18f6a4 * _0xd0bc0a + _0x352680 * _0x19902d + _0x5ba249 * _0x5b1ab4, _0x11a62b[_0x541a48 + 0x8] = _0x975f15 * _0x12f548 + _0x18f6a4 * _0xd74bef + _0x352680 * _0x170c88 + _0x5ba249 * _0x5b4f62, _0x11a62b[_0x541a48 + 0xc] = _0x975f15 * _0x1c45fd + _0x18f6a4 * _0x4aa3e9 + _0x352680 * _0x40a50a + _0x5ba249 * _0x344ecc;
        }
        static ['matrix4x4M' + 'ultiplyFFF' + 'ForNative'](_0x3d59b6, _0x4be4c1, _0x191a09) {
            _0x33d6e0['LayaGL']['instance']['matrix4x4M' + 'ultiply'](_0x3d59b6, _0x4be4c1, _0x191a09);
        }
        static ['matrix4x4M' + 'ultiplyMFM'](_0x616110, _0x467c85, _0x36f08f) {
            _0x89f66e['matrix4x4M' + 'ultiplyFFF'](_0x616110['elements'], _0x467c85, _0x36f08f['elements']);
        }
        static ['_buildText' + 'ure2D'](_0x3c9747, _0x31767f, _0x245cf5, _0x21f3d5, _0xba28fd = !0x1) {
            var _0xcb3135 = new _0x33d6e0['Texture2D'](_0x3c9747, _0x31767f, _0x245cf5, _0xba28fd, !0x0);
            return _0xcb3135['anisoLevel'] = 0x1, _0xcb3135['filterMode'] = _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_POINT'], _0x4b9677['_generateT' + 'exture2D'](_0xcb3135, _0x3c9747, _0x31767f, _0x21f3d5), _0xcb3135;
        }
        static ['_drawBound'](_0x14be92, _0x55e15b, _0x37552a) {
            _0x14be92['lineCount'] + 0xc > _0x14be92['maxLineCou' + 'nt'] && (_0x14be92['maxLineCou' + 'nt'] += 0xc);
            var _0x55873d = _0x89f66e['_tempVecto' + 'r3_0'], _0x2bd5cb = _0x89f66e['_tempVecto' + 'r3_1'], _0x5dcd04 = _0x55e15b['min'], _0x3dbf7f = _0x55e15b['max'];
            _0x55873d['setValue'](_0x5dcd04['x'], _0x5dcd04['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x5dcd04['y'], _0x5dcd04['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x5dcd04['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x5dcd04['x'], _0x5dcd04['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x3dbf7f['x'], _0x5dcd04['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x5dcd04['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x5dcd04['y'], _0x3dbf7f['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x5dcd04['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x5dcd04['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x5dcd04['x'], _0x3dbf7f['y'], _0x5dcd04['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x5dcd04['y'], _0x3dbf7f['z']), _0x2bd5cb['setValue'](_0x5dcd04['x'], _0x3dbf7f['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x3dbf7f['x'], _0x5dcd04['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x3dbf7f['y'], _0x5dcd04['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x3dbf7f['x'], _0x5dcd04['y'], _0x3dbf7f['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x3dbf7f['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x3dbf7f['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x3dbf7f['y'], _0x5dcd04['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x3dbf7f['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x5dcd04['x'], _0x3dbf7f['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x3dbf7f['x'], _0x3dbf7f['y'], _0x5dcd04['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x3dbf7f['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a), _0x55873d['setValue'](_0x5dcd04['x'], _0x3dbf7f['y'], _0x3dbf7f['z']), _0x2bd5cb['setValue'](_0x3dbf7f['x'], _0x3dbf7f['y'], _0x3dbf7f['z']), _0x14be92['addLine'](_0x55873d, _0x2bd5cb, _0x37552a, _0x37552a);
        }
        static ['_getHierar' + 'chyPath'](_0xc315fc, _0x3301c9, _0x121871) {
            _0x121871['length'] = 0x0;
            for (var _0x7f4f80 = _0x3301c9; _0x7f4f80 !== _0xc315fc;) {
                var _0x2e0583 = _0x7f4f80['_parent'];
                if (!_0x2e0583)
                    return null;
                _0x121871['push'](_0x2e0583['getChildIn' + 'dex'](_0x7f4f80)), _0x7f4f80 = _0x2e0583;
            }
            return _0x121871;
        }
        static ['_getNodeBy' + 'HierarchyP' + 'ath'](_0x520fe2, _0x430e19) {
            for (var _0x3fdca6 = _0x520fe2, _0x185aa0 = _0x430e19['length'] - 0x1; _0x185aa0 >= 0x0; _0x185aa0--)
                _0x3fdca6 = _0x3fdca6['getChildAt'](_0x430e19[_0x185aa0]);
            return _0x3fdca6;
        }
    }
    _0x89f66e['_tempVecto' + 'r3_0'] = new _0x4795b3(), _0x89f66e['_tempVecto' + 'r3_1'] = new _0x4795b3(), _0x89f66e['_tempArray' + '16_0'] = new Float32Array(0x10), _0x89f66e['_tempArray' + '16_1'] = new Float32Array(0x10), _0x89f66e['_tempArray' + '16_2'] = new Float32Array(0x10), _0x89f66e['_tempArray' + '16_3'] = new Float32Array(0x10), _0x89f66e['_compIdToN' + 'ode'] = new Object();
    class _0x2ae340 extends _0x33d6e0['Resource'] {
        constructor() {
            super(), this['_nodes'] = new _0x25229b(), this['_animation' + 'Events'] = [];
        }
        static ['_parse'](_0x44d8c7, _0x6b00e4 = null, _0x22f277 = null) {
            var _0x44866c = new _0x2ae340(), _0x15bf9a = new _0x33d6e0['Byte'](_0x44d8c7), _0x3bdf7f = _0x15bf9a['readUTFStr' + 'ing']();
            switch (_0x3bdf7f) {
            case 'LAYAANIMAT' + 'ION:03':
                _0x3d9ce4['parse'](_0x44866c, _0x15bf9a);
                break;
            case 'LAYAANIMAT' + 'ION:04':
            case 'LAYAANIMAT' + 'ION:COMPRE' + 'SSION_04':
                _0x188b3f['parse'](_0x44866c, _0x15bf9a, _0x3bdf7f);
                break;
            default:
                throw 'unknown\x20an' + 'imationCli' + 'p\x20version.';
            }
            return _0x44866c;
        }
        static ['load'](_0x404a58, _0x1428e8) {
            _0x33d6e0['ILaya']['loader']['create'](_0x404a58, _0x1428e8, null, _0x2ae340['ANIMATIONC' + 'LIP']);
        }
        ['duration']() {
            return this['_duration'];
        }
        ['_hermiteIn' + 'terpolate'](_0x1b0695, _0x214253, _0x14467, _0x18fbf9) {
            var _0x1cabdc = _0x1b0695['outTangent'], _0x5407e6 = _0x214253['inTangent'];
            if (Number['isFinite'](_0x1cabdc) && Number['isFinite'](_0x5407e6)) {
                var _0x47ead5 = _0x14467 * _0x14467, _0x4cb7a1 = _0x47ead5 * _0x14467, _0x3838a0 = _0x4cb7a1 - 0x2 * _0x47ead5 + _0x14467, _0x4aad93 = _0x4cb7a1 - _0x47ead5, _0xdaef4b = -0x2 * _0x4cb7a1 + 0x3 * _0x47ead5;
                return (0x2 * _0x4cb7a1 - 0x3 * _0x47ead5 + 0x1) * _0x1b0695['value'] + _0x3838a0 * _0x1cabdc * _0x18fbf9 + _0x4aad93 * _0x5407e6 * _0x18fbf9 + _0xdaef4b * _0x214253['value'];
            }
            return _0x1b0695['value'];
        }
        ['_hermiteIn' + 'terpolateV' + 'ector3'](_0x1dbb27, _0xbbf5f2, _0xb31ce4, _0x27e846, _0x22cd0c) {
            var _0x598d92 = _0x1dbb27['value'], _0x31cf56 = _0x1dbb27['outTangent'], _0x20c8b9 = _0xbbf5f2['value'], _0x2c1165 = _0xbbf5f2['inTangent'], _0x29797a = _0xb31ce4 * _0xb31ce4, _0x47d861 = _0x29797a * _0xb31ce4, _0x4d849d = 0x2 * _0x47d861 - 0x3 * _0x29797a + 0x1, _0x1e7ca5 = _0x47d861 - 0x2 * _0x29797a + _0xb31ce4, _0x46e579 = _0x47d861 - _0x29797a, _0x885f29 = -0x2 * _0x47d861 + 0x3 * _0x29797a, _0x48f36a = _0x31cf56['x'], _0x26c35a = _0x2c1165['x'];
            Number['isFinite'](_0x48f36a) && Number['isFinite'](_0x26c35a) ? _0x22cd0c['x'] = _0x4d849d * _0x598d92['x'] + _0x1e7ca5 * _0x48f36a * _0x27e846 + _0x46e579 * _0x26c35a * _0x27e846 + _0x885f29 * _0x20c8b9['x'] : _0x22cd0c['x'] = _0x598d92['x'], _0x48f36a = _0x31cf56['y'], _0x26c35a = _0x2c1165['y'], Number['isFinite'](_0x48f36a) && Number['isFinite'](_0x26c35a) ? _0x22cd0c['y'] = _0x4d849d * _0x598d92['y'] + _0x1e7ca5 * _0x48f36a * _0x27e846 + _0x46e579 * _0x26c35a * _0x27e846 + _0x885f29 * _0x20c8b9['y'] : _0x22cd0c['y'] = _0x598d92['y'], _0x48f36a = _0x31cf56['z'], _0x26c35a = _0x2c1165['z'], Number['isFinite'](_0x48f36a) && Number['isFinite'](_0x26c35a) ? _0x22cd0c['z'] = _0x4d849d * _0x598d92['z'] + _0x1e7ca5 * _0x48f36a * _0x27e846 + _0x46e579 * _0x26c35a * _0x27e846 + _0x885f29 * _0x20c8b9['z'] : _0x22cd0c['z'] = _0x598d92['z'];
        }
        ['_hermiteIn' + 'terpolateQ' + 'uaternion'](_0x2dc552, _0x277da8, _0x1ff31c, _0x40fd0d, _0x3ee5c9) {
            var _0x239bb4 = _0x2dc552['value'], _0x1c1154 = _0x2dc552['outTangent'], _0x27cb15 = _0x277da8['value'], _0x449234 = _0x277da8['inTangent'], _0x56e6e5 = _0x1ff31c * _0x1ff31c, _0x343a29 = _0x56e6e5 * _0x1ff31c, _0x14b767 = 0x2 * _0x343a29 - 0x3 * _0x56e6e5 + 0x1, _0x58a2b3 = _0x343a29 - 0x2 * _0x56e6e5 + _0x1ff31c, _0x4996e5 = _0x343a29 - _0x56e6e5, _0xf9f29 = -0x2 * _0x343a29 + 0x3 * _0x56e6e5, _0x9f480f = _0x1c1154['x'], _0x1931ba = _0x449234['x'];
            Number['isFinite'](_0x9f480f) && Number['isFinite'](_0x1931ba) ? _0x3ee5c9['x'] = _0x14b767 * _0x239bb4['x'] + _0x58a2b3 * _0x9f480f * _0x40fd0d + _0x4996e5 * _0x1931ba * _0x40fd0d + _0xf9f29 * _0x27cb15['x'] : _0x3ee5c9['x'] = _0x239bb4['x'], _0x9f480f = _0x1c1154['y'], _0x1931ba = _0x449234['y'], Number['isFinite'](_0x9f480f) && Number['isFinite'](_0x1931ba) ? _0x3ee5c9['y'] = _0x14b767 * _0x239bb4['y'] + _0x58a2b3 * _0x9f480f * _0x40fd0d + _0x4996e5 * _0x1931ba * _0x40fd0d + _0xf9f29 * _0x27cb15['y'] : _0x3ee5c9['y'] = _0x239bb4['y'], _0x9f480f = _0x1c1154['z'], _0x1931ba = _0x449234['z'], Number['isFinite'](_0x9f480f) && Number['isFinite'](_0x1931ba) ? _0x3ee5c9['z'] = _0x14b767 * _0x239bb4['z'] + _0x58a2b3 * _0x9f480f * _0x40fd0d + _0x4996e5 * _0x1931ba * _0x40fd0d + _0xf9f29 * _0x27cb15['z'] : _0x3ee5c9['z'] = _0x239bb4['z'], _0x9f480f = _0x1c1154['w'], _0x1931ba = _0x449234['w'], Number['isFinite'](_0x9f480f) && Number['isFinite'](_0x1931ba) ? _0x3ee5c9['w'] = _0x14b767 * _0x239bb4['w'] + _0x58a2b3 * _0x9f480f * _0x40fd0d + _0x4996e5 * _0x1931ba * _0x40fd0d + _0xf9f29 * _0x27cb15['w'] : _0x3ee5c9['w'] = _0x239bb4['w'];
        }
        ['_evaluateC' + 'lipDatasRe' + 'alTime'](_0x447cc4, _0x397ceb, _0x21ff29, _0x4deed0, _0x2d54a3, _0x375c14) {
            for (var _0x207057 = 0x0, _0x1601c7 = _0x447cc4['count']; _0x207057 < _0x1601c7; _0x207057++) {
                var _0x25a855, _0x7e6af6 = _0x447cc4['getNodeByI' + 'ndex'](_0x207057), _0x12bebe = _0x7e6af6['type'], _0x240594 = _0x7e6af6['_keyFrames'], _0x463b5d = _0x240594['length'], _0x45db15 = _0x21ff29[_0x207057];
                if (_0x2d54a3) {
                    for (-0x1 !== _0x45db15 && _0x397ceb < _0x240594[_0x45db15]['time'] && (_0x45db15 = -0x1, _0x21ff29[_0x207057] = _0x45db15), _0x25a855 = _0x45db15 + 0x1; _0x25a855 < _0x463b5d && !(_0x240594[_0x25a855]['time'] > _0x397ceb);)
                        _0x45db15++, _0x25a855++, _0x21ff29[_0x207057] = _0x45db15;
                } else {
                    for ((_0x25a855 = _0x45db15 + 0x1) !== _0x463b5d && _0x397ceb > _0x240594[_0x25a855]['time'] && (_0x45db15 = _0x463b5d - 0x1, _0x21ff29[_0x207057] = _0x45db15), _0x25a855 = _0x45db15 + 0x1; _0x45db15 > -0x1 && !(_0x240594[_0x45db15]['time'] < _0x397ceb);)
                        _0x45db15--, _0x25a855--, _0x21ff29[_0x207057] = _0x45db15;
                }
                var _0x4da979 = _0x25a855 === _0x463b5d;
                switch (_0x12bebe) {
                case 0x0:
                    if (-0x1 !== _0x45db15) {
                        var _0x5035bd = _0x240594[_0x45db15];
                        if (_0x4da979)
                            _0x375c14[_0x207057] = _0x5035bd['value'];
                        else {
                            var _0x4c77ae, _0x3f8700 = _0x240594[_0x25a855], _0x5b7f10 = _0x3f8700['time'] - _0x5035bd['time'];
                            _0x4c77ae = 0x0 !== _0x5b7f10 ? (_0x397ceb - _0x5035bd['time']) / _0x5b7f10 : 0x0, _0x375c14[_0x207057] = this['_hermiteIn' + 'terpolate'](_0x5035bd, _0x3f8700, _0x4c77ae, _0x5b7f10);
                        }
                    } else
                        _0x375c14[_0x207057] = _0x240594[0x0]['value'];
                    _0x4deed0 && (_0x375c14[_0x207057] = _0x375c14[_0x207057] - _0x240594[0x0]['value']);
                    break;
                case 0x1:
                case 0x4:
                    var _0x3f748c = _0x375c14[_0x207057];
                    if (this['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x240594, _0x45db15, _0x4da979, _0x397ceb, _0x3f748c), _0x4deed0) {
                        var _0x3a068a = _0x240594[0x0]['value'];
                        _0x3f748c['x'] -= _0x3a068a['x'], _0x3f748c['y'] -= _0x3a068a['y'], _0x3f748c['z'] -= _0x3a068a['z'];
                    }
                    break;
                case 0x2:
                    var _0x4cd1b1 = _0x375c14[_0x207057];
                    if (this['_evaluateF' + 'rameNodeQu' + 'aternionDa' + 'tasRealTim' + 'e'](_0x240594, _0x45db15, _0x4da979, _0x397ceb, _0x4cd1b1), _0x4deed0) {
                        var _0x3b0692 = _0x2ae340['_tempQuate' + 'rnion0'], _0x1a08da = _0x240594[0x0]['value'];
                        _0x89f66e['quaternion' + 'Conjugate'](_0x1a08da, _0x3b0692), _0x5958af['multiply'](_0x3b0692, _0x4cd1b1, _0x4cd1b1);
                    }
                    break;
                case 0x3:
                    _0x3f748c = _0x375c14[_0x207057], this['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x240594, _0x45db15, _0x4da979, _0x397ceb, _0x3f748c), _0x4deed0 && (_0x3a068a = _0x240594[0x0]['value'], _0x3f748c['x'] /= _0x3a068a['x'], _0x3f748c['y'] /= _0x3a068a['y'], _0x3f748c['z'] /= _0x3a068a['z']);
                    break;
                default:
                    throw 'AnimationC' + 'lip:unknow' + 'n\x20node\x20typ' + 'e.';
                }
            }
        }
        ['_evaluateC' + 'lipDatasRe' + 'alTimeForN' + 'ative'](_0x324233, _0x56e419, _0x27c1a3, _0x8b947a) {
            _0x33d6e0['LayaGL']['instance']['evaluateCl' + 'ipDatasRea' + 'lTime'](_0x324233['_nativeObj'], _0x56e419, _0x27c1a3, _0x8b947a);
        }
        ['_evaluateF' + 'rameNodeVe' + 'ctor3Datas' + 'RealTime'](_0x40c4fd, _0x3834c9, _0x31c0eb, _0x45dfd1, _0x9ee0e2) {
            if (-0x1 !== _0x3834c9) {
                var _0x291004 = _0x40c4fd[_0x3834c9];
                if (_0x31c0eb) {
                    var _0x119dbf = _0x291004['value'];
                    _0x9ee0e2['x'] = _0x119dbf['x'], _0x9ee0e2['y'] = _0x119dbf['y'], _0x9ee0e2['z'] = _0x119dbf['z'];
                } else {
                    var _0x1a0b66, _0x53c433 = _0x40c4fd[_0x3834c9 + 0x1], _0x20809d = _0x291004['time'], _0x30c456 = _0x53c433['time'] - _0x20809d;
                    _0x1a0b66 = 0x0 !== _0x30c456 ? (_0x45dfd1 - _0x20809d) / _0x30c456 : 0x0, this['_hermiteIn' + 'terpolateV' + 'ector3'](_0x291004, _0x53c433, _0x1a0b66, _0x30c456, _0x9ee0e2);
                }
            } else {
                var _0xab088b = _0x40c4fd[0x0]['value'];
                _0x9ee0e2['x'] = _0xab088b['x'], _0x9ee0e2['y'] = _0xab088b['y'], _0x9ee0e2['z'] = _0xab088b['z'];
            }
        }
        ['_evaluateF' + 'rameNodeQu' + 'aternionDa' + 'tasRealTim' + 'e'](_0x4867a8, _0x288979, _0x13dad1, _0x19f295, _0x48a3fd) {
            if (-0x1 !== _0x288979) {
                var _0x5440cd = _0x4867a8[_0x288979];
                if (_0x13dad1) {
                    var _0x4129b0 = _0x5440cd['value'];
                    _0x48a3fd['x'] = _0x4129b0['x'], _0x48a3fd['y'] = _0x4129b0['y'], _0x48a3fd['z'] = _0x4129b0['z'], _0x48a3fd['w'] = _0x4129b0['w'];
                } else {
                    var _0x175c2b, _0x49f0a9 = _0x4867a8[_0x288979 + 0x1], _0x443524 = _0x5440cd['time'], _0x2865e5 = _0x49f0a9['time'] - _0x443524;
                    _0x175c2b = 0x0 !== _0x2865e5 ? (_0x19f295 - _0x443524) / _0x2865e5 : 0x0, this['_hermiteIn' + 'terpolateQ' + 'uaternion'](_0x5440cd, _0x49f0a9, _0x175c2b, _0x2865e5, _0x48a3fd);
                }
            } else {
                var _0x3ed9ef = _0x4867a8[0x0]['value'];
                _0x48a3fd['x'] = _0x3ed9ef['x'], _0x48a3fd['y'] = _0x3ed9ef['y'], _0x48a3fd['z'] = _0x3ed9ef['z'], _0x48a3fd['w'] = _0x3ed9ef['w'];
            }
        }
        ['_binarySea' + 'rchEventIn' + 'dex'](_0x49492f) {
            for (var _0x9a8d5b, _0x485208 = 0x0, _0x3b6bf7 = this['_animation' + 'Events']['length'] - 0x1; _0x485208 <= _0x3b6bf7;) {
                _0x9a8d5b = Math['floor']((_0x485208 + _0x3b6bf7) / 0x2);
                var _0x5a5e85 = this['_animation' + 'Events'][_0x9a8d5b]['time'];
                if (_0x5a5e85 == _0x49492f)
                    return _0x9a8d5b;
                _0x5a5e85 > _0x49492f ? _0x3b6bf7 = _0x9a8d5b - 0x1 : _0x485208 = _0x9a8d5b + 0x1;
            }
            return _0x485208;
        }
        ['addEvent'](_0x49e159) {
            var _0x59bb59 = this['_binarySea' + 'rchEventIn' + 'dex'](_0x49e159['time']);
            this['_animation' + 'Events']['splice'](_0x59bb59, 0x0, _0x49e159);
        }
        ['_disposeRe' + 'source']() {
            this['_nodes'] = null, this['_nodesMap'] = null;
        }
    }
    _0x2ae340['ANIMATIONC' + 'LIP'] = 'ANIMATIONC' + 'LIP', _0x2ae340['_tempQuate' + 'rnion0'] = new _0x5958af();
    class _0x1cf4e4 {
        constructor() {
            this['_currentSt' + 'ate'] = null;
        }
        get ['normalized' + 'Time']() {
            return this['_normalize' + 'dTime'];
        }
        get ['duration']() {
            return this['_duration'];
        }
        get ['animatorSt' + 'ate']() {
            return this['_currentSt' + 'ate'];
        }
        ['_resetPlay' + 'State'](_0x3296a3) {
            this['_finish'] = !0x1, this['_startPlay' + 'Time'] = _0x3296a3, this['_elapsedTi' + 'me'] = _0x3296a3, this['_playEvent' + 'Index'] = 0x0, this['_lastIsFro' + 'nt'] = !0x0;
        }
        ['_cloneTo'](_0xea9fe8) {
            _0xea9fe8['_finish'] = this['_finish'], _0xea9fe8['_startPlay' + 'Time'] = this['_startPlay' + 'Time'], _0xea9fe8['_elapsedTi' + 'me'] = this['_elapsedTi' + 'me'], _0xea9fe8['_playEvent' + 'Index'] = this['_playEvent' + 'Index'], _0xea9fe8['_lastIsFro' + 'nt'] = this['_lastIsFro' + 'nt'];
        }
    }
    class _0x550df5 {
        constructor(_0xbd78df) {
            this['_defaultSt' + 'ate'] = null, this['_reference' + 'Count'] = 0x0, this['_playType'] = -0x1, this['_crossDura' + 'tion'] = -0x1, this['_crossMark'] = 0x0, this['_crossNode' + 'sOwnersCou' + 'nt'] = 0x0, this['_crossNode' + 'sOwners'] = [], this['_crossNode' + 'sOwnersInd' + 'icesMap'] = {}, this['_srcCrossC' + 'lipNodeInd' + 'ices'] = [], this['_destCross' + 'ClipNodeIn' + 'dices'] = [], this['_statesMap'] = {}, this['_states'] = [], this['_playState' + 'Info'] = new _0x1cf4e4(), this['_crossPlay' + 'StateInfo'] = new _0x1cf4e4(), this['blendingMo' + 'de'] = _0x550df5['BLENDINGMO' + 'DE_OVERRID' + 'E'], this['defaultWei' + 'ght'] = 0x1, this['playOnWake'] = !0x0, this['name'] = _0xbd78df;
        }
        get ['defaultSta' + 'te']() {
            return this['_defaultSt' + 'ate'];
        }
        set ['defaultSta' + 'te'](_0x1ef46f) {
            this['_defaultSt' + 'ate'] = _0x1ef46f, this['_statesMap'][_0x1ef46f['name']] = _0x1ef46f;
        }
        ['_removeCli' + 'p'](_0x12203b, _0x539d77, _0x597f97, _0x5a4019) {
            var _0x1e82dc = _0x5a4019['_clip'], _0x15e3b8 = _0x12203b[_0x597f97];
            if (_0x12203b['splice'](_0x597f97, 0x1), delete _0x539d77[_0x5a4019['name']], this['_animator']) {
                var _0x4351cc = _0x1e82dc['_nodes'], _0x226988 = _0x15e3b8['_nodeOwner' + 's'];
                _0x1e82dc['_removeRef' + 'erence']();
                for (var _0x511dc4 = 0x0, _0x3da400 = _0x4351cc['count']; _0x511dc4 < _0x3da400; _0x511dc4++)
                    this['_animator']['_removeKey' + 'frameNodeO' + 'wner'](_0x226988, _0x4351cc['getNodeByI' + 'ndex'](_0x511dc4));
            }
        }
        ['_getRefere' + 'nceCount']() {
            return this['_reference' + 'Count'];
        }
        ['_addRefere' + 'nce'](_0x380b04 = 0x1) {
            for (var _0x257535 = 0x0, _0x4ac74f = this['_states']['length']; _0x257535 < _0x4ac74f; _0x257535++)
                this['_states'][_0x257535]['_addRefere' + 'nce'](_0x380b04);
            this['_reference' + 'Count'] += _0x380b04;
        }
        ['_removeRef' + 'erence'](_0x3382a5 = 0x1) {
            for (var _0x22db7b = 0x0, _0x3b89d4 = this['_states']['length']; _0x22db7b < _0x3b89d4; _0x22db7b++)
                this['_states'][_0x22db7b]['_removeRef' + 'erence'](_0x3382a5);
            this['_reference' + 'Count'] -= _0x3382a5;
        }
        ['_clearRefe' + 'rence']() {
            this['_removeRef' + 'erence'](-this['_reference' + 'Count']);
        }
        ['getCurrent' + 'PlayState']() {
            return this['_playState' + 'Info'];
        }
        ['getAnimato' + 'rState'](_0x410691) {
            var _0x3056e8 = this['_statesMap'][_0x410691];
            return _0x3056e8 || null;
        }
        ['addState'](_0x2bb27f) {
            var _0x138ca5 = _0x2bb27f['name'];
            if (this['_statesMap'][_0x138ca5])
                throw 'AnimatorCo' + 'ntrollerLa' + 'yer:this\x20s' + 'tat\x27s\x20name' + '\x20has\x20exist' + '.';
            this['_statesMap'][_0x138ca5] = _0x2bb27f, this['_states']['push'](_0x2bb27f), this['_animator'] && (_0x2bb27f['_clip']['_addRefere' + 'nce'](), this['_animator']['_getOwners' + 'ByClip'](_0x2bb27f));
        }
        ['removeStat' + 'e'](_0x5f0bb4) {
            for (var _0x2fcc32 = this['_states'], _0x1bdaee = -0x1, _0x4e4b83 = 0x0, _0x34a321 = _0x2fcc32['length']; _0x4e4b83 < _0x34a321; _0x4e4b83++)
                if (_0x2fcc32[_0x4e4b83] === _0x5f0bb4) {
                    _0x1bdaee = _0x4e4b83;
                    break;
                }
            -0x1 !== _0x1bdaee && this['_removeCli' + 'p'](_0x2fcc32, this['_statesMap'], _0x1bdaee, _0x5f0bb4);
        }
        ['destroy']() {
            this['_clearRefe' + 'rence'](), this['_statesMap'] = null, this['_states'] = null, this['_playState' + 'Info'] = null, this['_crossPlay' + 'StateInfo'] = null, this['_defaultSt' + 'ate'] = null;
        }
        ['cloneTo'](_0x3cc1f0) {
            var _0x33911c = _0x3cc1f0;
            _0x33911c['name'] = this['name'], _0x33911c['blendingMo' + 'de'] = this['blendingMo' + 'de'], _0x33911c['defaultWei' + 'ght'] = this['defaultWei' + 'ght'], _0x33911c['playOnWake'] = this['playOnWake'];
        }
        ['clone']() {
            var _0xeb2bcb = new _0x550df5(this['name']);
            return this['cloneTo'](_0xeb2bcb), _0xeb2bcb;
        }
    }
    _0x550df5['BLENDINGMO' + 'DE_OVERRID' + 'E'] = 0x0, _0x550df5['BLENDINGMO' + 'DE_ADDTIVE'] = 0x1;
    class _0x17c8fb {
        constructor(_0x9207 = 0x0, _0x15c8a3 = 0x0, _0xc732e1 = 0x0, _0x11eac6 = 0x0) {
            var _0x4f4c97 = this['elements'] = new Float32Array(0x4);
            _0x4f4c97[0x0] = _0x9207, _0x4f4c97[0x1] = _0x15c8a3, _0x4f4c97[0x2] = _0xc732e1, _0x4f4c97[0x3] = _0x11eac6;
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x55fbfb) {
            this['elements'][0x0] = _0x55fbfb;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x690405) {
            this['elements'][0x1] = _0x690405;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x1808e0) {
            this['elements'][0x2] = _0x1808e0;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x1387fd) {
            this['elements'][0x3] = _0x1387fd;
        }
        ['fromArray'](_0x31932f, _0x5a7788 = 0x0) {
            this['elements'][0x0] = _0x31932f[_0x5a7788 + 0x0], this['elements'][0x1] = _0x31932f[_0x5a7788 + 0x1], this['elements'][0x2] = _0x31932f[_0x5a7788 + 0x2], this['elements'][0x3] = _0x31932f[_0x5a7788 + 0x3];
        }
        ['cloneTo'](_0x340a87) {
            var _0x5da88c = _0x340a87['elements'], _0x288b4f = this['elements'];
            _0x5da88c[0x0] = _0x288b4f[0x0], _0x5da88c[0x1] = _0x288b4f[0x1], _0x5da88c[0x2] = _0x288b4f[0x2], _0x5da88c[0x3] = _0x288b4f[0x3];
        }
        ['clone']() {
            var _0x55dd54 = new _0x17c8fb();
            return this['cloneTo'](_0x55dd54), _0x55dd54;
        }
        static ['lerp'](_0x415629, _0x41031b, _0x14c460, _0x3368a2) {
            var _0x590300 = _0x3368a2['elements'], _0x7e2828 = _0x415629['elements'], _0x2e9cf2 = _0x41031b['elements'], _0xb6fa8d = _0x7e2828[0x0], _0x42b9d8 = _0x7e2828[0x1], _0x542730 = _0x7e2828[0x2], _0x392028 = _0x7e2828[0x3];
            _0x590300[0x0] = _0xb6fa8d + _0x14c460 * (_0x2e9cf2[0x0] - _0xb6fa8d), _0x590300[0x1] = _0x42b9d8 + _0x14c460 * (_0x2e9cf2[0x1] - _0x42b9d8), _0x590300[0x2] = _0x542730 + _0x14c460 * (_0x2e9cf2[0x2] - _0x542730), _0x590300[0x3] = _0x392028 + _0x14c460 * (_0x2e9cf2[0x3] - _0x392028);
        }
        static ['transformB' + 'yM4x4'](_0x576b1b, _0x1b1be6, _0xf7621e) {
            var _0x412bd1 = _0x576b1b['elements'], _0x53045f = _0x412bd1[0x0], _0x237cc9 = _0x412bd1[0x1], _0x5aa72f = _0x412bd1[0x2], _0x3bd8ea = _0x412bd1[0x3], _0x418901 = _0x1b1be6['elements'], _0x4d41d8 = _0xf7621e['elements'];
            _0x4d41d8[0x0] = _0x53045f * _0x418901[0x0] + _0x237cc9 * _0x418901[0x4] + _0x5aa72f * _0x418901[0x8] + _0x3bd8ea * _0x418901[0xc], _0x4d41d8[0x1] = _0x53045f * _0x418901[0x1] + _0x237cc9 * _0x418901[0x5] + _0x5aa72f * _0x418901[0x9] + _0x3bd8ea * _0x418901[0xd], _0x4d41d8[0x2] = _0x53045f * _0x418901[0x2] + _0x237cc9 * _0x418901[0x6] + _0x5aa72f * _0x418901[0xa] + _0x3bd8ea * _0x418901[0xe], _0x4d41d8[0x3] = _0x53045f * _0x418901[0x3] + _0x237cc9 * _0x418901[0x7] + _0x5aa72f * _0x418901[0xb] + _0x3bd8ea * _0x418901[0xf];
        }
        static ['equals'](_0x747149, _0xefff75) {
            var _0x5d11fd = _0x747149['elements'], _0x58940b = _0xefff75['elements'];
            return _0x183ae5['nearEqual'](Math['abs'](_0x5d11fd[0x0]), Math['abs'](_0x58940b[0x0])) && _0x183ae5['nearEqual'](Math['abs'](_0x5d11fd[0x1]), Math['abs'](_0x58940b[0x1])) && _0x183ae5['nearEqual'](Math['abs'](_0x5d11fd[0x2]), Math['abs'](_0x58940b[0x2])) && _0x183ae5['nearEqual'](Math['abs'](_0x5d11fd[0x3]), Math['abs'](_0x58940b[0x3]));
        }
        ['length']() {
            return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
        }
        ['lengthSqua' + 'red']() {
            return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
        }
        static ['normalize'](_0x5a3e0d, _0xa82ef7) {
            var _0x269ddd = _0x5a3e0d['elements'], _0x118567 = _0xa82ef7['elements'], _0x42ea1a = _0x5a3e0d['length']();
            _0x42ea1a > 0x0 && (_0x118567[0x0] = _0x269ddd[0x0] * _0x42ea1a, _0x118567[0x1] = _0x269ddd[0x1] * _0x42ea1a, _0x118567[0x2] = _0x269ddd[0x2] * _0x42ea1a, _0x118567[0x3] = _0x269ddd[0x3] * _0x42ea1a);
        }
        static ['add'](_0x53b3c8, _0x273c81, _0x15d3f5) {
            var _0x124dd2 = _0x15d3f5['elements'], _0x1c164a = _0x53b3c8['elements'], _0x5eb5bf = _0x273c81['elements'];
            _0x124dd2[0x0] = _0x1c164a[0x0] + _0x5eb5bf[0x0], _0x124dd2[0x1] = _0x1c164a[0x1] + _0x5eb5bf[0x1], _0x124dd2[0x2] = _0x1c164a[0x2] + _0x5eb5bf[0x2], _0x124dd2[0x3] = _0x1c164a[0x3] + _0x5eb5bf[0x3];
        }
        static ['subtract'](_0x379f1c, _0x27341b, _0x4c553b) {
            var _0x2a8e21 = _0x4c553b['elements'], _0x210663 = _0x379f1c['elements'], _0x5bb81d = _0x27341b['elements'];
            _0x2a8e21[0x0] = _0x210663[0x0] - _0x5bb81d[0x0], _0x2a8e21[0x1] = _0x210663[0x1] - _0x5bb81d[0x1], _0x2a8e21[0x2] = _0x210663[0x2] - _0x5bb81d[0x2], _0x2a8e21[0x3] = _0x210663[0x3] - _0x5bb81d[0x3];
        }
        static ['multiply'](_0x36a5f0, _0x287a4d, _0x47f168) {
            var _0x7f32eb = _0x47f168['elements'], _0x58c831 = _0x36a5f0['elements'], _0x59c27c = _0x287a4d['elements'];
            _0x7f32eb[0x0] = _0x58c831[0x0] * _0x59c27c[0x0], _0x7f32eb[0x1] = _0x58c831[0x1] * _0x59c27c[0x1], _0x7f32eb[0x2] = _0x58c831[0x2] * _0x59c27c[0x2], _0x7f32eb[0x3] = _0x58c831[0x3] * _0x59c27c[0x3];
        }
        static ['scale'](_0x5ee8fd, _0x2ed6e6, _0x61d50c) {
            var _0x145834 = _0x61d50c['elements'], _0x53b295 = _0x5ee8fd['elements'];
            _0x145834[0x0] = _0x53b295[0x0] * _0x2ed6e6, _0x145834[0x1] = _0x53b295[0x1] * _0x2ed6e6, _0x145834[0x2] = _0x53b295[0x2] * _0x2ed6e6, _0x145834[0x3] = _0x53b295[0x3] * _0x2ed6e6;
        }
        static ['Clamp'](_0x13f319, _0x535f15, _0xa39264, _0x3121a3) {
            var _0x3cd167 = _0x13f319['elements'], _0x2a45b6 = _0x3cd167[0x0], _0x14444b = _0x3cd167[0x1], _0xc83ee2 = _0x3cd167[0x2], _0x3ac874 = _0x3cd167[0x3], _0x5954a9 = _0x535f15['elements'], _0x3f7632 = _0x5954a9[0x0], _0x15b802 = _0x5954a9[0x1], _0x401f7b = _0x5954a9[0x2], _0x39517b = _0x5954a9[0x3], _0x3457fb = _0xa39264['elements'], _0xe4bba5 = _0x3457fb[0x0], _0x2c68a0 = _0x3457fb[0x1], _0x5e80d5 = _0x3457fb[0x2], _0x5e488c = _0x3457fb[0x3], _0x272239 = _0x3121a3['elements'];
            _0x2a45b6 = (_0x2a45b6 = _0x2a45b6 > _0xe4bba5 ? _0xe4bba5 : _0x2a45b6) < _0x3f7632 ? _0x3f7632 : _0x2a45b6, _0x14444b = (_0x14444b = _0x14444b > _0x2c68a0 ? _0x2c68a0 : _0x14444b) < _0x15b802 ? _0x15b802 : _0x14444b, _0xc83ee2 = (_0xc83ee2 = _0xc83ee2 > _0x5e80d5 ? _0x5e80d5 : _0xc83ee2) < _0x401f7b ? _0x401f7b : _0xc83ee2, _0x3ac874 = (_0x3ac874 = _0x3ac874 > _0x5e488c ? _0x5e488c : _0x3ac874) < _0x39517b ? _0x39517b : _0x3ac874, _0x272239[0x0] = _0x2a45b6, _0x272239[0x1] = _0x14444b, _0x272239[0x2] = _0xc83ee2, _0x272239[0x3] = _0x3ac874;
        }
        static ['distanceSq' + 'uared'](_0x2c43bc, _0x2bdc2f) {
            var _0x2bff31 = _0x2c43bc['elements'], _0x332472 = _0x2bdc2f['elements'], _0x22a657 = _0x2bff31[0x0] - _0x332472[0x0], _0x680ee2 = _0x2bff31[0x1] - _0x332472[0x1], _0x2b6f3a = _0x2bff31[0x2] - _0x332472[0x2], _0x5f0278 = _0x2bff31[0x3] - _0x332472[0x3];
            return _0x22a657 * _0x22a657 + _0x680ee2 * _0x680ee2 + _0x2b6f3a * _0x2b6f3a + _0x5f0278 * _0x5f0278;
        }
        static ['distance'](_0xf16513, _0xc56f9f) {
            var _0x21a328 = _0xf16513['elements'], _0x29e2e4 = _0xc56f9f['elements'], _0x43ab9f = _0x21a328[0x0] - _0x29e2e4[0x0], _0x1e1b8e = _0x21a328[0x1] - _0x29e2e4[0x1], _0x585f8c = _0x21a328[0x2] - _0x29e2e4[0x2], _0x4982d8 = _0x21a328[0x3] - _0x29e2e4[0x3];
            return Math['sqrt'](_0x43ab9f * _0x43ab9f + _0x1e1b8e * _0x1e1b8e + _0x585f8c * _0x585f8c + _0x4982d8 * _0x4982d8);
        }
        static ['dot'](_0x1a8b80, _0xa485ee) {
            var _0x7fda17 = _0x1a8b80['elements'], _0x500a8a = _0xa485ee['elements'];
            return _0x7fda17[0x0] * _0x500a8a[0x0] + _0x7fda17[0x1] * _0x500a8a[0x1] + _0x7fda17[0x2] * _0x500a8a[0x2] + _0x7fda17[0x3] * _0x500a8a[0x3];
        }
        static ['min'](_0x3f5162, _0xad7514, _0x17519b) {
            var _0x2ffaf1 = _0x17519b['elements'], _0x48205e = _0x3f5162['elements'], _0x204b1f = _0xad7514['elements'];
            _0x2ffaf1[0x0] = Math['min'](_0x48205e[0x0], _0x204b1f[0x0]), _0x2ffaf1[0x1] = Math['min'](_0x48205e[0x1], _0x204b1f[0x1]), _0x2ffaf1[0x2] = Math['min'](_0x48205e[0x2], _0x204b1f[0x2]), _0x2ffaf1[0x3] = Math['min'](_0x48205e[0x3], _0x204b1f[0x3]);
        }
        static ['max'](_0x5f058f, _0x21a2e0, _0x387234) {
            var _0x141a3b = _0x387234['elements'], _0x3f3977 = _0x5f058f['elements'], _0x1d4925 = _0x21a2e0['elements'];
            _0x141a3b[0x0] = Math['max'](_0x3f3977[0x0], _0x1d4925[0x0]), _0x141a3b[0x1] = Math['max'](_0x3f3977[0x1], _0x1d4925[0x1]), _0x141a3b[0x2] = Math['max'](_0x3f3977[0x2], _0x1d4925[0x2]), _0x141a3b[0x3] = Math['max'](_0x3f3977[0x3], _0x1d4925[0x3]);
        }
    }
    _0x17c8fb['ZERO'] = new _0x17c8fb(), _0x17c8fb['ONE'] = new _0x17c8fb(0x1, 0x1, 0x1, 0x1), _0x17c8fb['UnitX'] = new _0x17c8fb(0x1, 0x0, 0x0, 0x0), _0x17c8fb['UnitY'] = new _0x17c8fb(0x0, 0x1, 0x0, 0x0), _0x17c8fb['UnitZ'] = new _0x17c8fb(0x0, 0x0, 0x1, 0x0), _0x17c8fb['UnitW'] = new _0x17c8fb(0x0, 0x0, 0x0, 0x1);
    class _0x21e77b {
        constructor(_0x565fa2 = 0x0, _0x595c85 = 0x0, _0x246ef4 = 0x0, _0x497a33 = null) {
            var _0x2bd776;
            _0x2bd776 = _0x497a33 || new Float32Array(0x3), this['elements'] = _0x2bd776, _0x2bd776[0x0] = _0x565fa2, _0x2bd776[0x1] = _0x595c85, _0x2bd776[0x2] = _0x246ef4;
        }
        static ['distanceSq' + 'uared'](_0x42240d, _0x1383e5) {
            var _0x356fe5 = _0x42240d['elements'], _0x3e607f = _0x1383e5['elements'], _0x381aa3 = _0x356fe5[0x0] - _0x3e607f[0x0], _0x40e14d = _0x356fe5[0x1] - _0x3e607f[0x1], _0x1951d6 = _0x356fe5[0x2] - _0x3e607f[0x2];
            return _0x381aa3 * _0x381aa3 + _0x40e14d * _0x40e14d + _0x1951d6 * _0x1951d6;
        }
        static ['distance'](_0x5eaf35, _0x139ddc) {
            var _0x2e1131 = _0x5eaf35['elements'], _0x2b160a = _0x139ddc['elements'], _0x47a3ab = _0x2e1131[0x0] - _0x2b160a[0x0], _0x4ef0d2 = _0x2e1131[0x1] - _0x2b160a[0x1], _0xd92185 = _0x2e1131[0x2] - _0x2b160a[0x2];
            return Math['sqrt'](_0x47a3ab * _0x47a3ab + _0x4ef0d2 * _0x4ef0d2 + _0xd92185 * _0xd92185);
        }
        static ['min'](_0x53f571, _0x24d2b4, _0x2615dc) {
            var _0x44e2c8 = _0x2615dc['elements'], _0x49f934 = _0x53f571['elements'], _0x113430 = _0x24d2b4['elements'];
            _0x44e2c8[0x0] = Math['min'](_0x49f934[0x0], _0x113430[0x0]), _0x44e2c8[0x1] = Math['min'](_0x49f934[0x1], _0x113430[0x1]), _0x44e2c8[0x2] = Math['min'](_0x49f934[0x2], _0x113430[0x2]);
        }
        static ['max'](_0x5144ef, _0x194e03, _0x217b46) {
            var _0x231872 = _0x217b46['elements'], _0x310888 = _0x5144ef['elements'], _0x9a3479 = _0x194e03['elements'];
            _0x231872[0x0] = Math['max'](_0x310888[0x0], _0x9a3479[0x0]), _0x231872[0x1] = Math['max'](_0x310888[0x1], _0x9a3479[0x1]), _0x231872[0x2] = Math['max'](_0x310888[0x2], _0x9a3479[0x2]);
        }
        static ['transformQ' + 'uat'](_0x2ea354, _0x49975c, _0x35efc4) {
            var _0x3ad6ee = _0x35efc4['elements'], _0x5e6e2b = _0x2ea354['elements'], _0x187abe = _0x49975c['elements'], _0x75411 = _0x5e6e2b[0x0], _0x1fc0bd = _0x5e6e2b[0x1], _0x1c5de1 = _0x5e6e2b[0x2], _0x202975 = _0x187abe[0x0], _0x48cad2 = _0x187abe[0x1], _0x3116c3 = _0x187abe[0x2], _0x544f91 = _0x187abe[0x3], _0x5dcd74 = _0x544f91 * _0x75411 + _0x48cad2 * _0x1c5de1 - _0x3116c3 * _0x1fc0bd, _0x5246d3 = _0x544f91 * _0x1fc0bd + _0x3116c3 * _0x75411 - _0x202975 * _0x1c5de1, _0x4bfa0d = _0x544f91 * _0x1c5de1 + _0x202975 * _0x1fc0bd - _0x48cad2 * _0x75411, _0x5d8a25 = -_0x202975 * _0x75411 - _0x48cad2 * _0x1fc0bd - _0x3116c3 * _0x1c5de1;
            _0x3ad6ee[0x0] = _0x5dcd74 * _0x544f91 + _0x5d8a25 * -_0x202975 + _0x5246d3 * -_0x3116c3 - _0x4bfa0d * -_0x48cad2, _0x3ad6ee[0x1] = _0x5246d3 * _0x544f91 + _0x5d8a25 * -_0x48cad2 + _0x4bfa0d * -_0x202975 - _0x5dcd74 * -_0x3116c3, _0x3ad6ee[0x2] = _0x4bfa0d * _0x544f91 + _0x5d8a25 * -_0x3116c3 + _0x5dcd74 * -_0x48cad2 - _0x5246d3 * -_0x202975;
        }
        static ['scalarLeng' + 'th'](_0x49a1cd) {
            var _0x3943f0 = _0x49a1cd['elements'], _0xef5e49 = _0x3943f0[0x0], _0x13b0bc = _0x3943f0[0x1], _0x14a1c6 = _0x3943f0[0x2];
            return Math['sqrt'](_0xef5e49 * _0xef5e49 + _0x13b0bc * _0x13b0bc + _0x14a1c6 * _0x14a1c6);
        }
        static ['scalarLeng' + 'thSquared'](_0x4b7f7e) {
            var _0x1077fe = _0x4b7f7e['elements'], _0x1c643c = _0x1077fe[0x0], _0x1f13d3 = _0x1077fe[0x1], _0x1f7c2d = _0x1077fe[0x2];
            return _0x1c643c * _0x1c643c + _0x1f13d3 * _0x1f13d3 + _0x1f7c2d * _0x1f7c2d;
        }
        static ['normalize'](_0x13337d, _0x5844e2) {
            var _0x1ae2f8 = _0x13337d['elements'], _0x1af63a = _0x5844e2['elements'], _0x23a533 = _0x1ae2f8[0x0], _0x3dddbf = _0x1ae2f8[0x1], _0x54cece = _0x1ae2f8[0x2], _0x22c8a1 = _0x23a533 * _0x23a533 + _0x3dddbf * _0x3dddbf + _0x54cece * _0x54cece;
            _0x22c8a1 > 0x0 && (_0x22c8a1 = 0x1 / Math['sqrt'](_0x22c8a1), _0x1af63a[0x0] = _0x1ae2f8[0x0] * _0x22c8a1, _0x1af63a[0x1] = _0x1ae2f8[0x1] * _0x22c8a1, _0x1af63a[0x2] = _0x1ae2f8[0x2] * _0x22c8a1);
        }
        static ['multiply'](_0x34df85, _0x5903d3, _0x4e7e50) {
            var _0x4c8710 = _0x4e7e50['elements'], _0x437a80 = _0x34df85['elements'], _0x502ca7 = _0x5903d3['elements'];
            _0x4c8710[0x0] = _0x437a80[0x0] * _0x502ca7[0x0], _0x4c8710[0x1] = _0x437a80[0x1] * _0x502ca7[0x1], _0x4c8710[0x2] = _0x437a80[0x2] * _0x502ca7[0x2];
        }
        static ['scale'](_0x1c2a5c, _0x11c2ca, _0x45444f) {
            var _0x3f1d27 = _0x45444f['elements'], _0x5e990b = _0x1c2a5c['elements'];
            _0x3f1d27[0x0] = _0x5e990b[0x0] * _0x11c2ca, _0x3f1d27[0x1] = _0x5e990b[0x1] * _0x11c2ca, _0x3f1d27[0x2] = _0x5e990b[0x2] * _0x11c2ca;
        }
        static ['lerp'](_0x10981a, _0x2b2aea, _0xf838b1, _0x1cffd2) {
            var _0x4910ef = _0x1cffd2['elements'], _0x581c59 = _0x10981a['elements'], _0x264f2e = _0x2b2aea['elements'], _0x10bb74 = _0x581c59[0x0], _0x50f7e3 = _0x581c59[0x1], _0x40bed6 = _0x581c59[0x2];
            _0x4910ef[0x0] = _0x10bb74 + _0xf838b1 * (_0x264f2e[0x0] - _0x10bb74), _0x4910ef[0x1] = _0x50f7e3 + _0xf838b1 * (_0x264f2e[0x1] - _0x50f7e3), _0x4910ef[0x2] = _0x40bed6 + _0xf838b1 * (_0x264f2e[0x2] - _0x40bed6);
        }
        static ['transformV' + '3ToV3'](_0x1a1777, _0x4b593e, _0xf1c4c) {
            var _0x534bb1 = _0x21e77b['_tempVecto' + 'r4'];
            _0x21e77b['transformV' + '3ToV4'](_0x1a1777, _0x4b593e, _0x534bb1);
            var _0x3c709e = _0x534bb1['elements'], _0x954c83 = _0xf1c4c['elements'];
            _0x954c83[0x0] = _0x3c709e[0x0], _0x954c83[0x1] = _0x3c709e[0x1], _0x954c83[0x2] = _0x3c709e[0x2];
        }
        static ['transformV' + '3ToV4'](_0x584762, _0x4f8306, _0x4cdb46) {
            var _0x13215e = _0x584762['elements'], _0x3d7d6f = _0x13215e[0x0], _0x424c9e = _0x13215e[0x1], _0x570442 = _0x13215e[0x2], _0x4b2a1f = _0x4f8306['elements'], _0x20bc95 = _0x4cdb46['elements'];
            _0x20bc95[0x0] = _0x3d7d6f * _0x4b2a1f[0x0] + _0x424c9e * _0x4b2a1f[0x4] + _0x570442 * _0x4b2a1f[0x8] + _0x4b2a1f[0xc], _0x20bc95[0x1] = _0x3d7d6f * _0x4b2a1f[0x1] + _0x424c9e * _0x4b2a1f[0x5] + _0x570442 * _0x4b2a1f[0x9] + _0x4b2a1f[0xd], _0x20bc95[0x2] = _0x3d7d6f * _0x4b2a1f[0x2] + _0x424c9e * _0x4b2a1f[0x6] + _0x570442 * _0x4b2a1f[0xa] + _0x4b2a1f[0xe], _0x20bc95[0x3] = _0x3d7d6f * _0x4b2a1f[0x3] + _0x424c9e * _0x4b2a1f[0x7] + _0x570442 * _0x4b2a1f[0xb] + _0x4b2a1f[0xf];
        }
        static ['TransformN' + 'ormal'](_0x20d63c, _0xdb43e2, _0x1202ef) {
            var _0x726e7a = _0x20d63c['elements'], _0x2692f9 = _0x726e7a[0x0], _0x3e0b57 = _0x726e7a[0x1], _0x10549d = _0x726e7a[0x2], _0x2b2f8d = _0xdb43e2['elements'], _0x3b6ac4 = _0x1202ef['elements'];
            _0x3b6ac4[0x0] = _0x2692f9 * _0x2b2f8d[0x0] + _0x3e0b57 * _0x2b2f8d[0x4] + _0x10549d * _0x2b2f8d[0x8], _0x3b6ac4[0x1] = _0x2692f9 * _0x2b2f8d[0x1] + _0x3e0b57 * _0x2b2f8d[0x5] + _0x10549d * _0x2b2f8d[0x9], _0x3b6ac4[0x2] = _0x2692f9 * _0x2b2f8d[0x2] + _0x3e0b57 * _0x2b2f8d[0x6] + _0x10549d * _0x2b2f8d[0xa];
        }
        static ['transformC' + 'oordinate'](_0x514138, _0x2eb936, _0x18026c) {
            var _0x2e8213 = _0x514138['elements'], _0x5aac9d = _0x2e8213[0x0], _0x57366e = _0x2e8213[0x1], _0x58ee41 = _0x2e8213[0x2], _0x11bd76 = _0x2eb936['elements'], _0x3b2915 = _0x5aac9d * _0x11bd76[0x3] + _0x57366e * _0x11bd76[0x7] + _0x58ee41 * _0x11bd76[0xb] + _0x11bd76[0xf], _0x41345c = _0x18026c['elements'];
            _0x41345c[0x0] = _0x5aac9d * _0x11bd76[0x0] + _0x57366e * _0x11bd76[0x4] + _0x58ee41 * _0x11bd76[0x8] + _0x11bd76[0xc] / _0x3b2915, _0x41345c[0x1] = _0x5aac9d * _0x11bd76[0x1] + _0x57366e * _0x11bd76[0x5] + _0x58ee41 * _0x11bd76[0x9] + _0x11bd76[0xd] / _0x3b2915, _0x41345c[0x2] = _0x5aac9d * _0x11bd76[0x2] + _0x57366e * _0x11bd76[0x6] + _0x58ee41 * _0x11bd76[0xa] + _0x11bd76[0xe] / _0x3b2915;
        }
        static ['Clamp'](_0x234b52, _0xce91cb, _0x3fbd39, _0x22e5fb) {
            var _0x210a3c = _0x234b52['elements'], _0x10e9ed = _0x210a3c[0x0], _0x1fa525 = _0x210a3c[0x1], _0x34d2dc = _0x210a3c[0x2], _0x55dd79 = _0xce91cb['elements'], _0x22a999 = _0x55dd79[0x0], _0x4fe704 = _0x55dd79[0x1], _0xabb074 = _0x55dd79[0x2], _0x4c4546 = _0x3fbd39['elements'], _0x35d5b9 = _0x4c4546[0x0], _0x535491 = _0x4c4546[0x1], _0x3c3200 = _0x4c4546[0x2], _0x2c46e2 = _0x22e5fb['elements'];
            _0x10e9ed = (_0x10e9ed = _0x10e9ed > _0x35d5b9 ? _0x35d5b9 : _0x10e9ed) < _0x22a999 ? _0x22a999 : _0x10e9ed, _0x1fa525 = (_0x1fa525 = _0x1fa525 > _0x535491 ? _0x535491 : _0x1fa525) < _0x4fe704 ? _0x4fe704 : _0x1fa525, _0x34d2dc = (_0x34d2dc = _0x34d2dc > _0x3c3200 ? _0x3c3200 : _0x34d2dc) < _0xabb074 ? _0xabb074 : _0x34d2dc, _0x2c46e2[0x0] = _0x10e9ed, _0x2c46e2[0x1] = _0x1fa525, _0x2c46e2[0x2] = _0x34d2dc;
        }
        static ['add'](_0x49f036, _0x31b57f, _0x24947b) {
            var _0x2ab4e3 = _0x24947b['elements'], _0x2b6738 = _0x49f036['elements'], _0x3702f9 = _0x31b57f['elements'];
            _0x2ab4e3[0x0] = _0x2b6738[0x0] + _0x3702f9[0x0], _0x2ab4e3[0x1] = _0x2b6738[0x1] + _0x3702f9[0x1], _0x2ab4e3[0x2] = _0x2b6738[0x2] + _0x3702f9[0x2];
        }
        static ['subtract'](_0x2525bd, _0x46e728, _0x5a2c96) {
            var _0x49eb51 = _0x5a2c96['elements'], _0x53125b = _0x2525bd['elements'], _0x5ec001 = _0x46e728['elements'];
            _0x49eb51[0x0] = _0x53125b[0x0] - _0x5ec001[0x0], _0x49eb51[0x1] = _0x53125b[0x1] - _0x5ec001[0x1], _0x49eb51[0x2] = _0x53125b[0x2] - _0x5ec001[0x2];
        }
        static ['cross'](_0x5e90ca, _0x2ae317, _0x3db21e) {
            var _0x5d4217 = _0x5e90ca['elements'], _0x181bfb = _0x2ae317['elements'], _0x24198d = _0x3db21e['elements'], _0x57cd63 = _0x5d4217[0x0], _0x1c1724 = _0x5d4217[0x1], _0x524f6b = _0x5d4217[0x2], _0x3420f2 = _0x181bfb[0x0], _0x95374c = _0x181bfb[0x1], _0x42a6b0 = _0x181bfb[0x2];
            _0x24198d[0x0] = _0x1c1724 * _0x42a6b0 - _0x524f6b * _0x95374c, _0x24198d[0x1] = _0x524f6b * _0x3420f2 - _0x57cd63 * _0x42a6b0, _0x24198d[0x2] = _0x57cd63 * _0x95374c - _0x1c1724 * _0x3420f2;
        }
        static ['dot'](_0x4445c8, _0x559696) {
            var _0x56c652 = _0x4445c8['elements'], _0x514b58 = _0x559696['elements'];
            return _0x56c652[0x0] * _0x514b58[0x0] + _0x56c652[0x1] * _0x514b58[0x1] + _0x56c652[0x2] * _0x514b58[0x2];
        }
        static ['equals'](_0x4a232d, _0x4358aa) {
            var _0x4bffa3 = _0x4a232d['elements'], _0x1e591b = _0x4358aa['elements'];
            return _0x183ae5['nearEqual'](_0x4bffa3[0x0], _0x1e591b[0x0]) && _0x183ae5['nearEqual'](_0x4bffa3[0x1], _0x1e591b[0x1]) && _0x183ae5['nearEqual'](_0x4bffa3[0x2], _0x1e591b[0x2]);
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x55c861) {
            this['elements'][0x0] = _0x55c861;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x4a9479) {
            this['elements'][0x1] = _0x4a9479;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x5bc555) {
            this['elements'][0x2] = _0x5bc555;
        }
        ['setValue'](_0x19fba2, _0x1448b4, _0x10ca80) {
            this['elements'][0x0] = _0x19fba2, this['elements'][0x1] = _0x1448b4, this['elements'][0x2] = _0x10ca80;
        }
        ['fromArray'](_0x4b44f0, _0x411527 = 0x0) {
            this['elements'][0x0] = _0x4b44f0[_0x411527 + 0x0], this['elements'][0x1] = _0x4b44f0[_0x411527 + 0x1], this['elements'][0x2] = _0x4b44f0[_0x411527 + 0x2];
        }
        ['cloneTo'](_0x561baa) {
            var _0x23b19f = _0x561baa['elements'], _0x2d4c07 = this['elements'];
            _0x23b19f[0x0] = _0x2d4c07[0x0], _0x23b19f[0x1] = _0x2d4c07[0x1], _0x23b19f[0x2] = _0x2d4c07[0x2];
        }
        ['clone']() {
            var _0x2cb400 = new _0x21e77b();
            return this['cloneTo'](_0x2cb400), _0x2cb400;
        }
        ['toDefault']() {
            this['elements'][0x0] = 0x0, this['elements'][0x1] = 0x0, this['elements'][0x2] = 0x0;
        }
    }
    _0x21e77b['_tempVecto' + 'r4'] = new _0x17c8fb(), _0x21e77b['ZERO'] = new _0x21e77b(0x0, 0x0, 0x0), _0x21e77b['ONE'] = new _0x21e77b(0x1, 0x1, 0x1), _0x21e77b['NegativeUn' + 'itX'] = new _0x21e77b(-0x1, 0x0, 0x0), _0x21e77b['UnitX'] = new _0x21e77b(0x1, 0x0, 0x0), _0x21e77b['UnitY'] = new _0x21e77b(0x0, 0x1, 0x0), _0x21e77b['UnitZ'] = new _0x21e77b(0x0, 0x0, 0x1), _0x21e77b['ForwardRH'] = new _0x21e77b(0x0, 0x0, -0x1), _0x21e77b['ForwardLH'] = new _0x21e77b(0x0, 0x0, 0x1), _0x21e77b['Up'] = new _0x21e77b(0x0, 0x1, 0x0), _0x21e77b['NAN'] = new _0x21e77b(NaN, NaN, NaN);
    class _0x16c2be {
        constructor(_0x30c0a0 = 0x1, _0x371280 = 0x0, _0x5c3936 = 0x0, _0xf7bfe7 = 0x0, _0x40c393 = 0x0, _0x492d2b = 0x1, _0x3cc8dd = 0x0, _0xa59dde = 0x0, _0x38cc99 = 0x0, _0x4232ef = 0x0, _0x55a67d = 0x1, _0x49a75b = 0x0, _0x560c6d = 0x0, _0x2416bb = 0x0, _0x46e7be = 0x0, _0x291168 = 0x1, _0x4aee4a = null) {
            var _0xbb4ff4 = this['elements'] = _0x4aee4a || new Float32Array(0x10);
            _0xbb4ff4[0x0] = _0x30c0a0, _0xbb4ff4[0x1] = _0x371280, _0xbb4ff4[0x2] = _0x5c3936, _0xbb4ff4[0x3] = _0xf7bfe7, _0xbb4ff4[0x4] = _0x40c393, _0xbb4ff4[0x5] = _0x492d2b, _0xbb4ff4[0x6] = _0x3cc8dd, _0xbb4ff4[0x7] = _0xa59dde, _0xbb4ff4[0x8] = _0x38cc99, _0xbb4ff4[0x9] = _0x4232ef, _0xbb4ff4[0xa] = _0x55a67d, _0xbb4ff4[0xb] = _0x49a75b, _0xbb4ff4[0xc] = _0x560c6d, _0xbb4ff4[0xd] = _0x2416bb, _0xbb4ff4[0xe] = _0x46e7be, _0xbb4ff4[0xf] = _0x291168;
        }
        static ['createRota' + 'tionX'](_0x3c03b0, _0x4189c7) {
            var _0x1b4f22 = _0x4189c7['elements'], _0x51d49f = Math['sin'](_0x3c03b0), _0x7449d2 = Math['cos'](_0x3c03b0);
            _0x1b4f22[0x1] = _0x1b4f22[0x2] = _0x1b4f22[0x3] = _0x1b4f22[0x4] = _0x1b4f22[0x7] = _0x1b4f22[0x8] = _0x1b4f22[0xb] = _0x1b4f22[0xc] = _0x1b4f22[0xd] = _0x1b4f22[0xe] = 0x0, _0x1b4f22[0x0] = _0x1b4f22[0xf] = 0x1, _0x1b4f22[0x5] = _0x1b4f22[0xa] = _0x7449d2, _0x1b4f22[0x6] = _0x51d49f, _0x1b4f22[0x9] = -_0x51d49f;
        }
        static ['createRota' + 'tionY'](_0x25965a, _0xa1e510) {
            var _0x3db65b = _0xa1e510['elements'], _0x2f2551 = Math['sin'](_0x25965a), _0x517b43 = Math['cos'](_0x25965a);
            _0x3db65b[0x1] = _0x3db65b[0x3] = _0x3db65b[0x4] = _0x3db65b[0x6] = _0x3db65b[0x7] = _0x3db65b[0x9] = _0x3db65b[0xb] = _0x3db65b[0xc] = _0x3db65b[0xd] = _0x3db65b[0xe] = 0x0, _0x3db65b[0x5] = _0x3db65b[0xf] = 0x1, _0x3db65b[0x0] = _0x3db65b[0xa] = _0x517b43, _0x3db65b[0x2] = -_0x2f2551, _0x3db65b[0x8] = _0x2f2551;
        }
        static ['createRota' + 'tionZ'](_0x307fe2, _0x176ec3) {
            var _0x3585ac = _0x176ec3['elements'], _0x72f3f7 = Math['sin'](_0x307fe2), _0x680462 = Math['cos'](_0x307fe2);
            _0x3585ac[0x2] = _0x3585ac[0x3] = _0x3585ac[0x6] = _0x3585ac[0x7] = _0x3585ac[0x8] = _0x3585ac[0x9] = _0x3585ac[0xb] = _0x3585ac[0xc] = _0x3585ac[0xd] = _0x3585ac[0xe] = 0x0, _0x3585ac[0xa] = _0x3585ac[0xf] = 0x1, _0x3585ac[0x0] = _0x3585ac[0x5] = _0x680462, _0x3585ac[0x1] = _0x72f3f7, _0x3585ac[0x4] = -_0x72f3f7;
        }
        static ['createRota' + 'tionYawPit' + 'chRoll'](_0x35e6a8, _0x302afe, _0x33e736, _0x286b22) {
            _0x5958af['createFrom' + 'YawPitchRo' + 'll'](_0x35e6a8, _0x302afe, _0x33e736, _0x16c2be['_tempQuate' + 'rnion']), _0x16c2be['createRota' + 'tionQuater' + 'nion'](_0x16c2be['_tempQuate' + 'rnion'], _0x286b22);
        }
        static ['createRota' + 'tionAxis'](_0x3d2233, _0x591d5e, _0x323981) {
            var _0x26f528 = _0x3d2233['x'], _0x2caa7a = _0x3d2233['y'], _0x30c1d3 = _0x3d2233['z'], _0x4f1dfc = Math['cos'](_0x591d5e), _0x19379f = Math['sin'](_0x591d5e), _0x26a7ef = _0x26f528 * _0x26f528, _0x5eefca = _0x2caa7a * _0x2caa7a, _0x66757a = _0x30c1d3 * _0x30c1d3, _0x4acfec = _0x26f528 * _0x2caa7a, _0x4c4281 = _0x26f528 * _0x30c1d3, _0x2d4d46 = _0x2caa7a * _0x30c1d3, _0x475641 = _0x323981['elements'];
            _0x475641[0x3] = _0x475641[0x7] = _0x475641[0xb] = _0x475641[0xc] = _0x475641[0xd] = _0x475641[0xe] = 0x0, _0x475641[0xf] = 0x1, _0x475641[0x0] = _0x26a7ef + _0x4f1dfc * (0x1 - _0x26a7ef), _0x475641[0x1] = _0x4acfec - _0x4f1dfc * _0x4acfec + _0x19379f * _0x30c1d3, _0x475641[0x2] = _0x4c4281 - _0x4f1dfc * _0x4c4281 - _0x19379f * _0x2caa7a, _0x475641[0x4] = _0x4acfec - _0x4f1dfc * _0x4acfec - _0x19379f * _0x30c1d3, _0x475641[0x5] = _0x5eefca + _0x4f1dfc * (0x1 - _0x5eefca), _0x475641[0x6] = _0x2d4d46 - _0x4f1dfc * _0x2d4d46 + _0x19379f * _0x26f528, _0x475641[0x8] = _0x4c4281 - _0x4f1dfc * _0x4c4281 + _0x19379f * _0x2caa7a, _0x475641[0x9] = _0x2d4d46 - _0x4f1dfc * _0x2d4d46 - _0x19379f * _0x26f528, _0x475641[0xa] = _0x66757a + _0x4f1dfc * (0x1 - _0x66757a);
        }
        ['setRotatio' + 'n'](_0x211aac) {
            var _0x1f0dd3 = _0x211aac['x'], _0x49e65b = _0x211aac['y'], _0x5387ce = _0x211aac['z'], _0x50f6f6 = _0x211aac['w'], _0x51f6fc = _0x1f0dd3 * _0x1f0dd3, _0x2a8819 = _0x49e65b * _0x49e65b, _0x293368 = _0x5387ce * _0x5387ce, _0x484de0 = _0x1f0dd3 * _0x49e65b, _0x2be457 = _0x5387ce * _0x50f6f6, _0x1e1226 = _0x5387ce * _0x1f0dd3, _0xab829b = _0x49e65b * _0x50f6f6, _0x234c51 = _0x49e65b * _0x5387ce, _0x14cc61 = _0x1f0dd3 * _0x50f6f6, _0x42e9f7 = this['elements'];
            _0x42e9f7[0x0] = 0x1 - 0x2 * (_0x2a8819 + _0x293368), _0x42e9f7[0x1] = 0x2 * (_0x484de0 + _0x2be457), _0x42e9f7[0x2] = 0x2 * (_0x1e1226 - _0xab829b), _0x42e9f7[0x4] = 0x2 * (_0x484de0 - _0x2be457), _0x42e9f7[0x5] = 0x1 - 0x2 * (_0x293368 + _0x51f6fc), _0x42e9f7[0x6] = 0x2 * (_0x234c51 + _0x14cc61), _0x42e9f7[0x8] = 0x2 * (_0x1e1226 + _0xab829b), _0x42e9f7[0x9] = 0x2 * (_0x234c51 - _0x14cc61), _0x42e9f7[0xa] = 0x1 - 0x2 * (_0x2a8819 + _0x51f6fc);
        }
        ['setPositio' + 'n'](_0xdf1023) {
            var _0x4490fa = this['elements'];
            _0x4490fa[0xc] = _0xdf1023['x'], _0x4490fa[0xd] = _0xdf1023['y'], _0x4490fa[0xe] = _0xdf1023['z'];
        }
        static ['createRota' + 'tionQuater' + 'nion'](_0x582630, _0x3db4f2) {
            var _0x2c6dbb = _0x3db4f2['elements'], _0x4fc267 = _0x582630['x'], _0x4ed017 = _0x582630['y'], _0x5599ed = _0x582630['z'], _0x4ff229 = _0x582630['w'], _0x409ff0 = _0x4fc267 * _0x4fc267, _0x365474 = _0x4ed017 * _0x4ed017, _0x315f71 = _0x5599ed * _0x5599ed, _0x54844c = _0x4fc267 * _0x4ed017, _0x26d014 = _0x5599ed * _0x4ff229, _0x17c4fb = _0x5599ed * _0x4fc267, _0x16e412 = _0x4ed017 * _0x4ff229, _0x5e9e6c = _0x4ed017 * _0x5599ed, _0x5bed6c = _0x4fc267 * _0x4ff229;
            _0x2c6dbb[0x3] = _0x2c6dbb[0x7] = _0x2c6dbb[0xb] = _0x2c6dbb[0xc] = _0x2c6dbb[0xd] = _0x2c6dbb[0xe] = 0x0, _0x2c6dbb[0xf] = 0x1, _0x2c6dbb[0x0] = 0x1 - 0x2 * (_0x365474 + _0x315f71), _0x2c6dbb[0x1] = 0x2 * (_0x54844c + _0x26d014), _0x2c6dbb[0x2] = 0x2 * (_0x17c4fb - _0x16e412), _0x2c6dbb[0x4] = 0x2 * (_0x54844c - _0x26d014), _0x2c6dbb[0x5] = 0x1 - 0x2 * (_0x315f71 + _0x409ff0), _0x2c6dbb[0x6] = 0x2 * (_0x5e9e6c + _0x5bed6c), _0x2c6dbb[0x8] = 0x2 * (_0x17c4fb + _0x16e412), _0x2c6dbb[0x9] = 0x2 * (_0x5e9e6c - _0x5bed6c), _0x2c6dbb[0xa] = 0x1 - 0x2 * (_0x365474 + _0x409ff0);
        }
        static ['createTran' + 'slate'](_0x36bd3c, _0x28b2b1) {
            var _0x4824f4 = _0x28b2b1['elements'];
            _0x4824f4[0x4] = _0x4824f4[0x8] = _0x4824f4[0x1] = _0x4824f4[0x9] = _0x4824f4[0x2] = _0x4824f4[0x6] = _0x4824f4[0x3] = _0x4824f4[0x7] = _0x4824f4[0xb] = 0x0, _0x4824f4[0x0] = _0x4824f4[0x5] = _0x4824f4[0xa] = _0x4824f4[0xf] = 0x1, _0x4824f4[0xc] = _0x36bd3c['x'], _0x4824f4[0xd] = _0x36bd3c['y'], _0x4824f4[0xe] = _0x36bd3c['z'];
        }
        static ['createScal' + 'ing'](_0x72599d, _0x3a0b91) {
            var _0x19d5bc = _0x3a0b91['elements'];
            _0x19d5bc[0x0] = _0x72599d['x'], _0x19d5bc[0x5] = _0x72599d['y'], _0x19d5bc[0xa] = _0x72599d['z'], _0x19d5bc[0x1] = _0x19d5bc[0x4] = _0x19d5bc[0x8] = _0x19d5bc[0xc] = _0x19d5bc[0x9] = _0x19d5bc[0xd] = _0x19d5bc[0x2] = _0x19d5bc[0x6] = _0x19d5bc[0xe] = _0x19d5bc[0x3] = _0x19d5bc[0x7] = _0x19d5bc[0xb] = 0x0, _0x19d5bc[0xf] = 0x1;
        }
        static ['multiply'](_0xb9700, _0x568a3a, _0x21294e) {
            var _0xea263a = _0x568a3a['elements'], _0x64ac1f = _0xb9700['elements'], _0x4dd94f = _0x21294e['elements'], _0x2ab424 = _0xea263a[0x0], _0x31419a = _0xea263a[0x1], _0x57cdbb = _0xea263a[0x2], _0x315a08 = _0xea263a[0x3], _0x9b9a2b = _0xea263a[0x4], _0x8c51a8 = _0xea263a[0x5], _0x17f8c6 = _0xea263a[0x6], _0x5c7bee = _0xea263a[0x7], _0x3497cb = _0xea263a[0x8], _0x2a8a99 = _0xea263a[0x9], _0x40b613 = _0xea263a[0xa], _0x412a8a = _0xea263a[0xb], _0x556683 = _0xea263a[0xc], _0x180af1 = _0xea263a[0xd], _0x22e80f = _0xea263a[0xe], _0x2123ed = _0xea263a[0xf], _0x2acff2 = _0x64ac1f[0x0], _0x4145e6 = _0x64ac1f[0x1], _0x278597 = _0x64ac1f[0x2], _0x426b28 = _0x64ac1f[0x3], _0x48c373 = _0x64ac1f[0x4], _0x3cbafa = _0x64ac1f[0x5], _0x490647 = _0x64ac1f[0x6], _0x2e5cce = _0x64ac1f[0x7], _0x3c1f43 = _0x64ac1f[0x8], _0x4b9b1b = _0x64ac1f[0x9], _0x169586 = _0x64ac1f[0xa], _0x216aa6 = _0x64ac1f[0xb], _0x20487a = _0x64ac1f[0xc], _0x199f1b = _0x64ac1f[0xd], _0x4c58f0 = _0x64ac1f[0xe], _0x313e52 = _0x64ac1f[0xf];
            _0x4dd94f[0x0] = _0x2ab424 * _0x2acff2 + _0x31419a * _0x48c373 + _0x57cdbb * _0x3c1f43 + _0x315a08 * _0x20487a, _0x4dd94f[0x1] = _0x2ab424 * _0x4145e6 + _0x31419a * _0x3cbafa + _0x57cdbb * _0x4b9b1b + _0x315a08 * _0x199f1b, _0x4dd94f[0x2] = _0x2ab424 * _0x278597 + _0x31419a * _0x490647 + _0x57cdbb * _0x169586 + _0x315a08 * _0x4c58f0, _0x4dd94f[0x3] = _0x2ab424 * _0x426b28 + _0x31419a * _0x2e5cce + _0x57cdbb * _0x216aa6 + _0x315a08 * _0x313e52, _0x4dd94f[0x4] = _0x9b9a2b * _0x2acff2 + _0x8c51a8 * _0x48c373 + _0x17f8c6 * _0x3c1f43 + _0x5c7bee * _0x20487a, _0x4dd94f[0x5] = _0x9b9a2b * _0x4145e6 + _0x8c51a8 * _0x3cbafa + _0x17f8c6 * _0x4b9b1b + _0x5c7bee * _0x199f1b, _0x4dd94f[0x6] = _0x9b9a2b * _0x278597 + _0x8c51a8 * _0x490647 + _0x17f8c6 * _0x169586 + _0x5c7bee * _0x4c58f0, _0x4dd94f[0x7] = _0x9b9a2b * _0x426b28 + _0x8c51a8 * _0x2e5cce + _0x17f8c6 * _0x216aa6 + _0x5c7bee * _0x313e52, _0x4dd94f[0x8] = _0x3497cb * _0x2acff2 + _0x2a8a99 * _0x48c373 + _0x40b613 * _0x3c1f43 + _0x412a8a * _0x20487a, _0x4dd94f[0x9] = _0x3497cb * _0x4145e6 + _0x2a8a99 * _0x3cbafa + _0x40b613 * _0x4b9b1b + _0x412a8a * _0x199f1b, _0x4dd94f[0xa] = _0x3497cb * _0x278597 + _0x2a8a99 * _0x490647 + _0x40b613 * _0x169586 + _0x412a8a * _0x4c58f0, _0x4dd94f[0xb] = _0x3497cb * _0x426b28 + _0x2a8a99 * _0x2e5cce + _0x40b613 * _0x216aa6 + _0x412a8a * _0x313e52, _0x4dd94f[0xc] = _0x556683 * _0x2acff2 + _0x180af1 * _0x48c373 + _0x22e80f * _0x3c1f43 + _0x2123ed * _0x20487a, _0x4dd94f[0xd] = _0x556683 * _0x4145e6 + _0x180af1 * _0x3cbafa + _0x22e80f * _0x4b9b1b + _0x2123ed * _0x199f1b, _0x4dd94f[0xe] = _0x556683 * _0x278597 + _0x180af1 * _0x490647 + _0x22e80f * _0x169586 + _0x2123ed * _0x4c58f0, _0x4dd94f[0xf] = _0x556683 * _0x426b28 + _0x180af1 * _0x2e5cce + _0x22e80f * _0x216aa6 + _0x2123ed * _0x313e52;
        }
        static ['multiplyFo' + 'rNative'](_0xa10705, _0x224aee, _0x2d2cbc) {
            _0x33d6e0['LayaGL']['instance']['matrix4x4M' + 'ultiply'](_0xa10705['elements'], _0x224aee['elements'], _0x2d2cbc['elements']);
        }
        static ['createFrom' + 'Quaternion'](_0x21d1f0, _0x1ba4fc) {
            var _0x55e18c = _0x1ba4fc['elements'], _0x1b15cf = _0x21d1f0['x'], _0x13b1e9 = _0x21d1f0['y'], _0x539be8 = _0x21d1f0['z'], _0x2677a7 = _0x21d1f0['w'], _0x172964 = _0x1b15cf + _0x1b15cf, _0x2e5b5c = _0x13b1e9 + _0x13b1e9, _0x5a7741 = _0x539be8 + _0x539be8, _0xd2c674 = _0x1b15cf * _0x172964, _0x4317ca = _0x13b1e9 * _0x172964, _0x1b6d9b = _0x13b1e9 * _0x2e5b5c, _0x5dbd2d = _0x539be8 * _0x172964, _0x4b7226 = _0x539be8 * _0x2e5b5c, _0x3a6ecf = _0x539be8 * _0x5a7741, _0x335112 = _0x2677a7 * _0x172964, _0x5c7164 = _0x2677a7 * _0x2e5b5c, _0x265e45 = _0x2677a7 * _0x5a7741;
            _0x55e18c[0x0] = 0x1 - _0x1b6d9b - _0x3a6ecf, _0x55e18c[0x1] = _0x4317ca + _0x265e45, _0x55e18c[0x2] = _0x5dbd2d - _0x5c7164, _0x55e18c[0x3] = 0x0, _0x55e18c[0x4] = _0x4317ca - _0x265e45, _0x55e18c[0x5] = 0x1 - _0xd2c674 - _0x3a6ecf, _0x55e18c[0x6] = _0x4b7226 + _0x335112, _0x55e18c[0x7] = 0x0, _0x55e18c[0x8] = _0x5dbd2d + _0x5c7164, _0x55e18c[0x9] = _0x4b7226 - _0x335112, _0x55e18c[0xa] = 0x1 - _0xd2c674 - _0x1b6d9b, _0x55e18c[0xb] = 0x0, _0x55e18c[0xc] = 0x0, _0x55e18c[0xd] = 0x0, _0x55e18c[0xe] = 0x0, _0x55e18c[0xf] = 0x1;
        }
        static ['createAffi' + 'neTransfor' + 'mation'](_0x3aa1b6, _0x5152aa, _0x2e066a, _0x7166f9) {
            var _0x409a5b = _0x7166f9['elements'], _0x31c5f1 = _0x5152aa['x'], _0x882450 = _0x5152aa['y'], _0x2cb8fc = _0x5152aa['z'], _0x6e46d7 = _0x5152aa['w'], _0x34c4d6 = _0x31c5f1 + _0x31c5f1, _0x445270 = _0x882450 + _0x882450, _0x469316 = _0x2cb8fc + _0x2cb8fc, _0x514de8 = _0x31c5f1 * _0x34c4d6, _0x3b67ea = _0x31c5f1 * _0x445270, _0x93bdd = _0x31c5f1 * _0x469316, _0x118041 = _0x882450 * _0x445270, _0xab163c = _0x882450 * _0x469316, _0x127b29 = _0x2cb8fc * _0x469316, _0x4d9278 = _0x6e46d7 * _0x34c4d6, _0x148b59 = _0x6e46d7 * _0x445270, _0x3e4b16 = _0x6e46d7 * _0x469316, _0x194a28 = _0x2e066a['x'], _0x4c16b3 = _0x2e066a['y'], _0x1f6b1d = _0x2e066a['z'];
            _0x409a5b[0x0] = (0x1 - (_0x118041 + _0x127b29)) * _0x194a28, _0x409a5b[0x1] = (_0x3b67ea + _0x3e4b16) * _0x194a28, _0x409a5b[0x2] = (_0x93bdd - _0x148b59) * _0x194a28, _0x409a5b[0x3] = 0x0, _0x409a5b[0x4] = (_0x3b67ea - _0x3e4b16) * _0x4c16b3, _0x409a5b[0x5] = (0x1 - (_0x514de8 + _0x127b29)) * _0x4c16b3, _0x409a5b[0x6] = (_0xab163c + _0x4d9278) * _0x4c16b3, _0x409a5b[0x7] = 0x0, _0x409a5b[0x8] = (_0x93bdd + _0x148b59) * _0x1f6b1d, _0x409a5b[0x9] = (_0xab163c - _0x4d9278) * _0x1f6b1d, _0x409a5b[0xa] = (0x1 - (_0x514de8 + _0x118041)) * _0x1f6b1d, _0x409a5b[0xb] = 0x0, _0x409a5b[0xc] = _0x3aa1b6['x'], _0x409a5b[0xd] = _0x3aa1b6['y'], _0x409a5b[0xe] = _0x3aa1b6['z'], _0x409a5b[0xf] = 0x1;
        }
        static ['createLook' + 'At'](_0x28b85a, _0x590537, _0x2290ce, _0x1813dd) {
            var _0x3e743d = _0x1813dd['elements'], _0x245372 = _0x16c2be['_tempVecto' + 'r0'], _0x14cd47 = _0x16c2be['_tempVecto' + 'r1'], _0x17912c = _0x16c2be['_tempVecto' + 'r2'];
            _0x4795b3['subtract'](_0x28b85a, _0x590537, _0x17912c), _0x4795b3['normalize'](_0x17912c, _0x17912c), _0x4795b3['cross'](_0x2290ce, _0x17912c, _0x245372), _0x4795b3['normalize'](_0x245372, _0x245372), _0x4795b3['cross'](_0x17912c, _0x245372, _0x14cd47), _0x1813dd['identity'](), _0x3e743d[0x0] = _0x245372['x'], _0x3e743d[0x4] = _0x245372['y'], _0x3e743d[0x8] = _0x245372['z'], _0x3e743d[0x1] = _0x14cd47['x'], _0x3e743d[0x5] = _0x14cd47['y'], _0x3e743d[0x9] = _0x14cd47['z'], _0x3e743d[0x2] = _0x17912c['x'], _0x3e743d[0x6] = _0x17912c['y'], _0x3e743d[0xa] = _0x17912c['z'], _0x3e743d[0xc] = -_0x4795b3['dot'](_0x245372, _0x28b85a), _0x3e743d[0xd] = -_0x4795b3['dot'](_0x14cd47, _0x28b85a), _0x3e743d[0xe] = -_0x4795b3['dot'](_0x17912c, _0x28b85a);
        }
        static ['createPers' + 'pective'](_0x42a5de, _0x6ccb6a, _0x519189, _0x18c2df, _0x3eb80a) {
            var _0x32d743 = 0x1 / Math['tan'](0.5 * _0x42a5de), _0x5d7aad = _0x519189 / (_0x32d743 / _0x6ccb6a), _0x43833b = _0x519189 / _0x32d743;
            _0x16c2be['createPers' + 'pectiveOff' + 'Center'](-_0x5d7aad, _0x5d7aad, -_0x43833b, _0x43833b, _0x519189, _0x18c2df, _0x3eb80a);
        }
        static ['createPers' + 'pectiveOff' + 'Center'](_0x5ef2b8, _0x519642, _0x34d58d, _0x59b10c, _0x29b299, _0x2bf802, _0x48a5ab) {
            var _0x23ec36 = _0x48a5ab['elements'], _0x43e936 = _0x2bf802 / (_0x2bf802 - _0x29b299);
            _0x23ec36[0x1] = _0x23ec36[0x2] = _0x23ec36[0x3] = _0x23ec36[0x4] = _0x23ec36[0x6] = _0x23ec36[0x7] = _0x23ec36[0xc] = _0x23ec36[0xd] = _0x23ec36[0xf] = 0x0, _0x23ec36[0x0] = 0x2 * _0x29b299 / (_0x519642 - _0x5ef2b8), _0x23ec36[0x5] = 0x2 * _0x29b299 / (_0x59b10c - _0x34d58d), _0x23ec36[0x8] = (_0x5ef2b8 + _0x519642) / (_0x519642 - _0x5ef2b8), _0x23ec36[0x9] = (_0x59b10c + _0x34d58d) / (_0x59b10c - _0x34d58d), _0x23ec36[0xa] = -_0x43e936, _0x23ec36[0xb] = -0x1, _0x23ec36[0xe] = -_0x29b299 * _0x43e936;
        }
        static ['createOrth' + 'oOffCenter'](_0x47e0bf, _0xf8e49d, _0x33b20e, _0x3ecebe, _0x235158, _0x3c5b90, _0x2fe727) {
            var _0x1c7a8d = _0x2fe727['elements'], _0x265121 = 0x1 / (_0x3c5b90 - _0x235158);
            _0x1c7a8d[0x1] = _0x1c7a8d[0x2] = _0x1c7a8d[0x3] = _0x1c7a8d[0x4] = _0x1c7a8d[0x6] = _0x1c7a8d[0x8] = _0x1c7a8d[0x7] = _0x1c7a8d[0x9] = _0x1c7a8d[0xb] = 0x0, _0x1c7a8d[0xf] = 0x1, _0x1c7a8d[0x0] = 0x2 / (_0xf8e49d - _0x47e0bf), _0x1c7a8d[0x5] = 0x2 / (_0x3ecebe - _0x33b20e), _0x1c7a8d[0xa] = -_0x265121, _0x1c7a8d[0xc] = (_0x47e0bf + _0xf8e49d) / (_0x47e0bf - _0xf8e49d), _0x1c7a8d[0xd] = (_0x3ecebe + _0x33b20e) / (_0x33b20e - _0x3ecebe), _0x1c7a8d[0xe] = -_0x235158 * _0x265121;
        }
        ['getElement' + 'ByRowColum' + 'n'](_0x1395fd, _0x186057) {
            if (_0x1395fd < 0x0 || _0x1395fd > 0x3)
                throw new Error('row\x20Rows\x20a' + 'nd\x20columns' + '\x20for\x20matri' + 'ces\x20run\x20fr' + 'om\x200\x20to\x203,' + '\x20inclusive' + '.');
            if (_0x186057 < 0x0 || _0x186057 > 0x3)
                throw new Error('column\x20Row' + 's\x20and\x20colu' + 'mns\x20for\x20ma' + 'trices\x20run' + '\x20from\x200\x20to' + '\x203,\x20inclus' + 'ive.');
            return this['elements'][0x4 * _0x1395fd + _0x186057];
        }
        ['setElement' + 'ByRowColum' + 'n'](_0x4c526f, _0x5ad719, _0x5cc863) {
            if (_0x4c526f < 0x0 || _0x4c526f > 0x3)
                throw new Error('row\x20Rows\x20a' + 'nd\x20columns' + '\x20for\x20matri' + 'ces\x20run\x20fr' + 'om\x200\x20to\x203,' + '\x20inclusive' + '.');
            if (_0x5ad719 < 0x0 || _0x5ad719 > 0x3)
                throw new Error('column\x20Row' + 's\x20and\x20colu' + 'mns\x20for\x20ma' + 'trices\x20run' + '\x20from\x200\x20to' + '\x203,\x20inclus' + 'ive.');
            this['elements'][0x4 * _0x4c526f + _0x5ad719] = _0x5cc863;
        }
        ['equalsOthe' + 'rMatrix'](_0x45c484) {
            var _0x51f4a1 = this['elements'], _0x41031f = _0x45c484['elements'];
            return _0x183ae5['nearEqual'](_0x51f4a1[0x0], _0x41031f[0x0]) && _0x183ae5['nearEqual'](_0x51f4a1[0x1], _0x41031f[0x1]) && _0x183ae5['nearEqual'](_0x51f4a1[0x2], _0x41031f[0x2]) && _0x183ae5['nearEqual'](_0x51f4a1[0x3], _0x41031f[0x3]) && _0x183ae5['nearEqual'](_0x51f4a1[0x4], _0x41031f[0x4]) && _0x183ae5['nearEqual'](_0x51f4a1[0x5], _0x41031f[0x5]) && _0x183ae5['nearEqual'](_0x51f4a1[0x6], _0x41031f[0x6]) && _0x183ae5['nearEqual'](_0x51f4a1[0x7], _0x41031f[0x7]) && _0x183ae5['nearEqual'](_0x51f4a1[0x8], _0x41031f[0x8]) && _0x183ae5['nearEqual'](_0x51f4a1[0x9], _0x41031f[0x9]) && _0x183ae5['nearEqual'](_0x51f4a1[0xa], _0x41031f[0xa]) && _0x183ae5['nearEqual'](_0x51f4a1[0xb], _0x41031f[0xb]) && _0x183ae5['nearEqual'](_0x51f4a1[0xc], _0x41031f[0xc]) && _0x183ae5['nearEqual'](_0x51f4a1[0xd], _0x41031f[0xd]) && _0x183ae5['nearEqual'](_0x51f4a1[0xe], _0x41031f[0xe]) && _0x183ae5['nearEqual'](_0x51f4a1[0xf], _0x41031f[0xf]);
        }
        ['decomposeT' + 'ransRotSca' + 'le'](_0x59abb5, _0x1424aa, _0x237e9c) {
            var _0x221589 = _0x16c2be['_tempMatri' + 'x4x4'];
            return this['decomposeT' + 'ransRotMat' + 'Scale'](_0x59abb5, _0x221589, _0x237e9c) ? (_0x5958af['createFrom' + 'Matrix4x4'](_0x221589, _0x1424aa), !0x0) : (_0x1424aa['identity'](), !0x1);
        }
        ['decomposeT' + 'ransRotMat' + 'Scale'](_0x41a519, _0x765f8, _0x3f2ea5) {
            var _0x11cecb = this['elements'], _0x1dc83d = _0x41a519, _0x5b7608 = _0x765f8['elements'], _0x2addfd = _0x3f2ea5;
            _0x1dc83d['x'] = _0x11cecb[0xc], _0x1dc83d['y'] = _0x11cecb[0xd], _0x1dc83d['z'] = _0x11cecb[0xe];
            var _0x55cd95 = _0x11cecb[0x0], _0x4763f0 = _0x11cecb[0x1], _0x5c8fee = _0x11cecb[0x2], _0x20ac31 = _0x11cecb[0x4], _0x149303 = _0x11cecb[0x5], _0xaa0dcf = _0x11cecb[0x6], _0x2726e1 = _0x11cecb[0x8], _0x11f984 = _0x11cecb[0x9], _0x571c20 = _0x11cecb[0xa], _0x19697e = _0x2addfd['x'] = Math['sqrt'](_0x55cd95 * _0x55cd95 + _0x4763f0 * _0x4763f0 + _0x5c8fee * _0x5c8fee), _0x1a81a8 = _0x2addfd['y'] = Math['sqrt'](_0x20ac31 * _0x20ac31 + _0x149303 * _0x149303 + _0xaa0dcf * _0xaa0dcf), _0x4b09a2 = _0x2addfd['z'] = Math['sqrt'](_0x2726e1 * _0x2726e1 + _0x11f984 * _0x11f984 + _0x571c20 * _0x571c20);
            if (_0x183ae5['isZero'](_0x19697e) || _0x183ae5['isZero'](_0x1a81a8) || _0x183ae5['isZero'](_0x4b09a2))
                return _0x5b7608[0x1] = _0x5b7608[0x2] = _0x5b7608[0x3] = _0x5b7608[0x4] = _0x5b7608[0x6] = _0x5b7608[0x7] = _0x5b7608[0x8] = _0x5b7608[0x9] = _0x5b7608[0xb] = _0x5b7608[0xc] = _0x5b7608[0xd] = _0x5b7608[0xe] = 0x0, _0x5b7608[0x0] = _0x5b7608[0x5] = _0x5b7608[0xa] = _0x5b7608[0xf] = 0x1, !0x1;
            var _0x1ad33c = _0x16c2be['_tempVecto' + 'r0'];
            _0x1ad33c['x'] = _0x2726e1 / _0x4b09a2, _0x1ad33c['y'] = _0x11f984 / _0x4b09a2, _0x1ad33c['z'] = _0x571c20 / _0x4b09a2;
            var _0x3f2e26 = _0x16c2be['_tempVecto' + 'r1'];
            _0x3f2e26['x'] = _0x55cd95 / _0x19697e, _0x3f2e26['y'] = _0x4763f0 / _0x19697e, _0x3f2e26['z'] = _0x5c8fee / _0x19697e;
            var _0x4e8939 = _0x16c2be['_tempVecto' + 'r2'];
            _0x4795b3['cross'](_0x1ad33c, _0x3f2e26, _0x4e8939);
            var _0xaf94b9 = _0x16c2be['_tempVecto' + 'r1'];
            return _0x4795b3['cross'](_0x4e8939, _0x1ad33c, _0xaf94b9), _0x5b7608[0x3] = _0x5b7608[0x7] = _0x5b7608[0xb] = _0x5b7608[0xc] = _0x5b7608[0xd] = _0x5b7608[0xe] = 0x0, _0x5b7608[0xf] = 0x1, _0x5b7608[0x0] = _0xaf94b9['x'], _0x5b7608[0x1] = _0xaf94b9['y'], _0x5b7608[0x2] = _0xaf94b9['z'], _0x5b7608[0x4] = _0x4e8939['x'], _0x5b7608[0x5] = _0x4e8939['y'], _0x5b7608[0x6] = _0x4e8939['z'], _0x5b7608[0x8] = _0x1ad33c['x'], _0x5b7608[0x9] = _0x1ad33c['y'], _0x5b7608[0xa] = _0x1ad33c['z'], _0x5b7608[0x0] * _0x55cd95 + _0x5b7608[0x1] * _0x4763f0 + _0x5b7608[0x2] * _0x5c8fee < 0x0 && (_0x2addfd['x'] = -_0x19697e), _0x5b7608[0x4] * _0x20ac31 + _0x5b7608[0x5] * _0x149303 + _0x5b7608[0x6] * _0xaa0dcf < 0x0 && (_0x2addfd['y'] = -_0x1a81a8), _0x5b7608[0x8] * _0x2726e1 + _0x5b7608[0x9] * _0x11f984 + _0x5b7608[0xa] * _0x571c20 < 0x0 && (_0x2addfd['z'] = -_0x4b09a2), !0x0;
        }
        ['decomposeY' + 'awPitchRol' + 'l'](_0x1c8ded) {
            var _0x22782d = Math['asin'](-this['elements'][0x9]);
            _0x1c8ded['y'] = _0x22782d, Math['cos'](_0x22782d) > _0x183ae5['zeroTolera' + 'nce'] ? (_0x1c8ded['z'] = Math['atan2'](this['elements'][0x1], this['elements'][0x5]), _0x1c8ded['x'] = Math['atan2'](this['elements'][0x8], this['elements'][0xa])) : (_0x1c8ded['z'] = Math['atan2'](-this['elements'][0x4], this['elements'][0x0]), _0x1c8ded['x'] = 0x0);
        }
        ['normalize']() {
            var _0x1a1d94 = this['elements'], _0x13406f = _0x1a1d94[0x0], _0x15c5f1 = _0x1a1d94[0x1], _0x19b38a = _0x1a1d94[0x2], _0x146614 = Math['sqrt'](_0x13406f * _0x13406f + _0x15c5f1 * _0x15c5f1 + _0x19b38a * _0x19b38a);
            if (!_0x146614)
                return _0x1a1d94[0x0] = 0x0, _0x1a1d94[0x1] = 0x0, void (_0x1a1d94[0x2] = 0x0);
            0x1 != _0x146614 && (_0x146614 = 0x1 / _0x146614, _0x1a1d94[0x0] = _0x13406f * _0x146614, _0x1a1d94[0x1] = _0x15c5f1 * _0x146614, _0x1a1d94[0x2] = _0x19b38a * _0x146614);
        }
        ['transpose']() {
            var _0x146322, _0x4ba88b;
            return _0x4ba88b = (_0x146322 = this['elements'])[0x1], _0x146322[0x1] = _0x146322[0x4], _0x146322[0x4] = _0x4ba88b, _0x4ba88b = _0x146322[0x2], _0x146322[0x2] = _0x146322[0x8], _0x146322[0x8] = _0x4ba88b, _0x4ba88b = _0x146322[0x3], _0x146322[0x3] = _0x146322[0xc], _0x146322[0xc] = _0x4ba88b, _0x4ba88b = _0x146322[0x6], _0x146322[0x6] = _0x146322[0x9], _0x146322[0x9] = _0x4ba88b, _0x4ba88b = _0x146322[0x7], _0x146322[0x7] = _0x146322[0xd], _0x146322[0xd] = _0x4ba88b, _0x4ba88b = _0x146322[0xb], _0x146322[0xb] = _0x146322[0xe], _0x146322[0xe] = _0x4ba88b, this;
        }
        ['invert'](_0xce6aa) {
            var _0x579460 = this['elements'], _0x29d636 = _0xce6aa['elements'], _0x5b059f = _0x579460[0x0], _0x43f67b = _0x579460[0x1], _0x685a3 = _0x579460[0x2], _0x268283 = _0x579460[0x3], _0x3996e0 = _0x579460[0x4], _0x12b8b8 = _0x579460[0x5], _0x3645a9 = _0x579460[0x6], _0x166525 = _0x579460[0x7], _0x43295e = _0x579460[0x8], _0x269603 = _0x579460[0x9], _0x18c94d = _0x579460[0xa], _0x404c44 = _0x579460[0xb], _0x405bf6 = _0x579460[0xc], _0x1b595a = _0x579460[0xd], _0x378ebe = _0x579460[0xe], _0x21b369 = _0x579460[0xf], _0x351123 = _0x5b059f * _0x12b8b8 - _0x43f67b * _0x3996e0, _0x4747d8 = _0x5b059f * _0x3645a9 - _0x685a3 * _0x3996e0, _0x4eb3f4 = _0x5b059f * _0x166525 - _0x268283 * _0x3996e0, _0x54e8ea = _0x43f67b * _0x3645a9 - _0x685a3 * _0x12b8b8, _0x41b8fe = _0x43f67b * _0x166525 - _0x268283 * _0x12b8b8, _0x4d8dd1 = _0x685a3 * _0x166525 - _0x268283 * _0x3645a9, _0x2fdd5f = _0x43295e * _0x1b595a - _0x269603 * _0x405bf6, _0x2db89d = _0x43295e * _0x378ebe - _0x18c94d * _0x405bf6, _0x596e5e = _0x43295e * _0x21b369 - _0x404c44 * _0x405bf6, _0x5357f7 = _0x269603 * _0x378ebe - _0x18c94d * _0x1b595a, _0x260021 = _0x269603 * _0x21b369 - _0x404c44 * _0x1b595a, _0x3d7ead = _0x18c94d * _0x21b369 - _0x404c44 * _0x378ebe, _0x581aa8 = _0x351123 * _0x3d7ead - _0x4747d8 * _0x260021 + _0x4eb3f4 * _0x5357f7 + _0x54e8ea * _0x596e5e - _0x41b8fe * _0x2db89d + _0x4d8dd1 * _0x2fdd5f;
            0x0 !== Math['abs'](_0x581aa8) && (_0x581aa8 = 0x1 / _0x581aa8, _0x29d636[0x0] = (_0x12b8b8 * _0x3d7ead - _0x3645a9 * _0x260021 + _0x166525 * _0x5357f7) * _0x581aa8, _0x29d636[0x1] = (_0x685a3 * _0x260021 - _0x43f67b * _0x3d7ead - _0x268283 * _0x5357f7) * _0x581aa8, _0x29d636[0x2] = (_0x1b595a * _0x4d8dd1 - _0x378ebe * _0x41b8fe + _0x21b369 * _0x54e8ea) * _0x581aa8, _0x29d636[0x3] = (_0x18c94d * _0x41b8fe - _0x269603 * _0x4d8dd1 - _0x404c44 * _0x54e8ea) * _0x581aa8, _0x29d636[0x4] = (_0x3645a9 * _0x596e5e - _0x3996e0 * _0x3d7ead - _0x166525 * _0x2db89d) * _0x581aa8, _0x29d636[0x5] = (_0x5b059f * _0x3d7ead - _0x685a3 * _0x596e5e + _0x268283 * _0x2db89d) * _0x581aa8, _0x29d636[0x6] = (_0x378ebe * _0x4eb3f4 - _0x405bf6 * _0x4d8dd1 - _0x21b369 * _0x4747d8) * _0x581aa8, _0x29d636[0x7] = (_0x43295e * _0x4d8dd1 - _0x18c94d * _0x4eb3f4 + _0x404c44 * _0x4747d8) * _0x581aa8, _0x29d636[0x8] = (_0x3996e0 * _0x260021 - _0x12b8b8 * _0x596e5e + _0x166525 * _0x2fdd5f) * _0x581aa8, _0x29d636[0x9] = (_0x43f67b * _0x596e5e - _0x5b059f * _0x260021 - _0x268283 * _0x2fdd5f) * _0x581aa8, _0x29d636[0xa] = (_0x405bf6 * _0x41b8fe - _0x1b595a * _0x4eb3f4 + _0x21b369 * _0x351123) * _0x581aa8, _0x29d636[0xb] = (_0x269603 * _0x4eb3f4 - _0x43295e * _0x41b8fe - _0x404c44 * _0x351123) * _0x581aa8, _0x29d636[0xc] = (_0x12b8b8 * _0x2db89d - _0x3996e0 * _0x5357f7 - _0x3645a9 * _0x2fdd5f) * _0x581aa8, _0x29d636[0xd] = (_0x5b059f * _0x5357f7 - _0x43f67b * _0x2db89d + _0x685a3 * _0x2fdd5f) * _0x581aa8, _0x29d636[0xe] = (_0x1b595a * _0x4747d8 - _0x405bf6 * _0x54e8ea - _0x378ebe * _0x351123) * _0x581aa8, _0x29d636[0xf] = (_0x43295e * _0x54e8ea - _0x269603 * _0x4747d8 + _0x18c94d * _0x351123) * _0x581aa8);
        }
        static ['billboard'](_0x3cbd21, _0x218fd6, _0x23368f, _0xea48c3, _0x43f239, _0xe8adfc) {
            _0x4795b3['subtract'](_0x3cbd21, _0x218fd6, _0x16c2be['_tempVecto' + 'r0']);
            var _0x3ba7cb = _0x4795b3['scalarLeng' + 'thSquared'](_0x16c2be['_tempVecto' + 'r0']);
            _0x183ae5['isZero'](_0x3ba7cb) ? (_0x4795b3['scale'](_0x43f239, -0x1, _0x16c2be['_tempVecto' + 'r1']), _0x16c2be['_tempVecto' + 'r1']['cloneTo'](_0x16c2be['_tempVecto' + 'r0'])) : _0x4795b3['scale'](_0x16c2be['_tempVecto' + 'r0'], 0x1 / Math['sqrt'](_0x3ba7cb), _0x16c2be['_tempVecto' + 'r0']), _0x4795b3['cross'](_0xea48c3, _0x16c2be['_tempVecto' + 'r0'], _0x16c2be['_tempVecto' + 'r2']), _0x4795b3['normalize'](_0x16c2be['_tempVecto' + 'r2'], _0x16c2be['_tempVecto' + 'r2']), _0x4795b3['cross'](_0x16c2be['_tempVecto' + 'r0'], _0x16c2be['_tempVecto' + 'r2'], _0x16c2be['_tempVecto' + 'r3']);
            var _0x3b5e2d = _0x16c2be['_tempVecto' + 'r2'], _0x1faf90 = _0x16c2be['_tempVecto' + 'r3'], _0x2c1c73 = _0x16c2be['_tempVecto' + 'r0'], _0x3da1c9 = _0x3cbd21, _0x5da20b = _0xe8adfc['elements'];
            _0x5da20b[0x0] = _0x3b5e2d['x'], _0x5da20b[0x1] = _0x3b5e2d['y'], _0x5da20b[0x2] = _0x3b5e2d['z'], _0x5da20b[0x3] = 0x0, _0x5da20b[0x4] = _0x1faf90['x'], _0x5da20b[0x5] = _0x1faf90['y'], _0x5da20b[0x6] = _0x1faf90['z'], _0x5da20b[0x7] = 0x0, _0x5da20b[0x8] = _0x2c1c73['x'], _0x5da20b[0x9] = _0x2c1c73['y'], _0x5da20b[0xa] = _0x2c1c73['z'], _0x5da20b[0xb] = 0x0, _0x5da20b[0xc] = _0x3da1c9['x'], _0x5da20b[0xd] = _0x3da1c9['y'], _0x5da20b[0xe] = _0x3da1c9['z'], _0x5da20b[0xf] = 0x1;
        }
        ['identity']() {
            var _0x520668 = this['elements'];
            _0x520668[0x1] = _0x520668[0x2] = _0x520668[0x3] = _0x520668[0x4] = _0x520668[0x6] = _0x520668[0x7] = _0x520668[0x8] = _0x520668[0x9] = _0x520668[0xb] = _0x520668[0xc] = _0x520668[0xd] = _0x520668[0xe] = 0x0, _0x520668[0x0] = _0x520668[0x5] = _0x520668[0xa] = _0x520668[0xf] = 0x1;
        }
        ['cloneTo'](_0x34847d) {
            var _0x578406, _0x4a5bcc, _0x3cd583;
            if ((_0x4a5bcc = this['elements']) !== (_0x3cd583 = _0x34847d['elements'])) {
                for (_0x578406 = 0x0; _0x578406 < 0x10; ++_0x578406)
                    _0x3cd583[_0x578406] = _0x4a5bcc[_0x578406];
            }
        }
        ['clone']() {
            var _0x402193 = new _0x16c2be();
            return this['cloneTo'](_0x402193), _0x402193;
        }
        static ['translatio' + 'n'](_0x5750ed, _0x2883e8) {
            var _0x529b55 = _0x2883e8['elements'];
            _0x529b55[0x0] = _0x529b55[0x5] = _0x529b55[0xa] = _0x529b55[0xf] = 0x1, _0x529b55[0xc] = _0x5750ed['x'], _0x529b55[0xd] = _0x5750ed['y'], _0x529b55[0xe] = _0x5750ed['z'];
        }
        ['getTransla' + 'tionVector'](_0x3cebed) {
            var _0x3e032f = this['elements'];
            _0x3cebed['x'] = _0x3e032f[0xc], _0x3cebed['y'] = _0x3e032f[0xd], _0x3cebed['z'] = _0x3e032f[0xe];
        }
        ['setTransla' + 'tionVector'](_0x3e1a8e) {
            var _0x26a732 = this['elements'], _0x28792e = _0x3e1a8e;
            _0x26a732[0xc] = _0x28792e['x'], _0x26a732[0xd] = _0x28792e['y'], _0x26a732[0xe] = _0x28792e['z'];
        }
        ['getForward'](_0x53eab4) {
            var _0x2e5ddb = this['elements'];
            _0x53eab4['x'] = -_0x2e5ddb[0x8], _0x53eab4['y'] = -_0x2e5ddb[0x9], _0x53eab4['z'] = -_0x2e5ddb[0xa];
        }
        ['setForward'](_0x1df282) {
            var _0x20a708 = this['elements'];
            _0x20a708[0x8] = -_0x1df282['x'], _0x20a708[0x9] = -_0x1df282['y'], _0x20a708[0xa] = -_0x1df282['z'];
        }
    }
    _0x16c2be['_tempMatri' + 'x4x4'] = new _0x16c2be(), _0x16c2be['TEMPMatrix' + '0'] = new _0x16c2be(), _0x16c2be['TEMPMatrix' + '1'] = new _0x16c2be(), _0x16c2be['_tempVecto' + 'r0'] = new _0x4795b3(), _0x16c2be['_tempVecto' + 'r1'] = new _0x4795b3(), _0x16c2be['_tempVecto' + 'r2'] = new _0x4795b3(), _0x16c2be['_tempVecto' + 'r3'] = new _0x4795b3(), _0x16c2be['_tempQuate' + 'rnion'] = new _0x5958af(), _0x16c2be['DEFAULT'] = new _0x16c2be(), _0x16c2be['ZERO'] = new _0x16c2be(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0);
    class _0x416f10 {
        constructor(_0x22d98c = 0x0, _0x185f62 = 0x0, _0x308ed1 = 0x0, _0x2147c7 = 0x1, _0x5d3911 = null) {
            var _0x57aee0;
            (_0x57aee0 = _0x5d3911 || new Float32Array(0x4))[0x0] = _0x22d98c, _0x57aee0[0x1] = _0x185f62, _0x57aee0[0x2] = _0x308ed1, _0x57aee0[0x3] = _0x2147c7, this['elements'] = _0x57aee0;
        }
        static ['_dotArray'](_0x326e7f, _0x5542ca) {
            return _0x326e7f[0x0] * _0x5542ca[0x0] + _0x326e7f[0x1] * _0x5542ca[0x1] + _0x326e7f[0x2] * _0x5542ca[0x2] + _0x326e7f[0x3] * _0x5542ca[0x3];
        }
        static ['_normalize' + 'Array'](_0xbb29a0, _0x46c432) {
            var _0x6d39e8 = _0xbb29a0[0x0], _0x2311d5 = _0xbb29a0[0x1], _0x199eec = _0xbb29a0[0x2], _0x3d9116 = _0xbb29a0[0x3], _0x4a4249 = _0x6d39e8 * _0x6d39e8 + _0x2311d5 * _0x2311d5 + _0x199eec * _0x199eec + _0x3d9116 * _0x3d9116;
            _0x4a4249 > 0x0 && (_0x4a4249 = 0x1 / Math['sqrt'](_0x4a4249), _0x46c432[0x0] = _0x6d39e8 * _0x4a4249, _0x46c432[0x1] = _0x2311d5 * _0x4a4249, _0x46c432[0x2] = _0x199eec * _0x4a4249, _0x46c432[0x3] = _0x3d9116 * _0x4a4249);
        }
        static ['_lerpArray'](_0xe23fc6, _0x485c65, _0x45106d, _0x5ea1a1) {
            var _0x564237 = 0x1 - _0x45106d;
            _0x416f10['_dotArray'](_0xe23fc6, _0x485c65) >= 0x0 ? (_0x5ea1a1[0x0] = _0x564237 * _0xe23fc6[0x0] + _0x45106d * _0x485c65[0x0], _0x5ea1a1[0x1] = _0x564237 * _0xe23fc6[0x1] + _0x45106d * _0x485c65[0x1], _0x5ea1a1[0x2] = _0x564237 * _0xe23fc6[0x2] + _0x45106d * _0x485c65[0x2], _0x5ea1a1[0x3] = _0x564237 * _0xe23fc6[0x3] + _0x45106d * _0x485c65[0x3]) : (_0x5ea1a1[0x0] = _0x564237 * _0xe23fc6[0x0] - _0x45106d * _0x485c65[0x0], _0x5ea1a1[0x1] = _0x564237 * _0xe23fc6[0x1] - _0x45106d * _0x485c65[0x1], _0x5ea1a1[0x2] = _0x564237 * _0xe23fc6[0x2] - _0x45106d * _0x485c65[0x2], _0x5ea1a1[0x3] = _0x564237 * _0xe23fc6[0x3] - _0x45106d * _0x485c65[0x3]), _0x416f10['_normalize' + 'Array'](_0x5ea1a1, _0x5ea1a1);
        }
        static ['createFrom' + 'YawPitchRo' + 'll'](_0x445d66, _0xc67a35, _0x5c206c, _0x1cb51e) {
            var _0x3da432 = 0.5 * _0x5c206c, _0x442427 = 0.5 * _0xc67a35, _0x20abeb = 0.5 * _0x445d66, _0xcced73 = Math['sin'](_0x3da432), _0x5288f6 = Math['cos'](_0x3da432), _0x5909ee = Math['sin'](_0x442427), _0x4c1165 = Math['cos'](_0x442427), _0x57d8ca = Math['sin'](_0x20abeb), _0x3ad954 = Math['cos'](_0x20abeb), _0x1fa0b3 = _0x1cb51e['elements'];
            _0x1fa0b3[0x0] = _0x3ad954 * _0x5909ee * _0x5288f6 + _0x57d8ca * _0x4c1165 * _0xcced73, _0x1fa0b3[0x1] = _0x57d8ca * _0x4c1165 * _0x5288f6 - _0x3ad954 * _0x5909ee * _0xcced73, _0x1fa0b3[0x2] = _0x3ad954 * _0x4c1165 * _0xcced73 - _0x57d8ca * _0x5909ee * _0x5288f6, _0x1fa0b3[0x3] = _0x3ad954 * _0x4c1165 * _0x5288f6 + _0x57d8ca * _0x5909ee * _0xcced73;
        }
        static ['multiply'](_0x54851c, _0x3b8d05, _0x4fa6f6) {
            var _0x435a54 = _0x54851c['elements'], _0x52ed70 = _0x3b8d05['elements'], _0x4a58be = _0x4fa6f6['elements'], _0x52acd2 = _0x435a54[0x0], _0xe15df1 = _0x435a54[0x1], _0x2cdc44 = _0x435a54[0x2], _0x5c1974 = _0x435a54[0x3], _0x190783 = _0x52ed70[0x0], _0x4b4236 = _0x52ed70[0x1], _0x47a5d8 = _0x52ed70[0x2], _0x2c360d = _0x52ed70[0x3], _0x5e59c5 = _0xe15df1 * _0x47a5d8 - _0x2cdc44 * _0x4b4236, _0x53776c = _0x2cdc44 * _0x190783 - _0x52acd2 * _0x47a5d8, _0x77a91f = _0x52acd2 * _0x4b4236 - _0xe15df1 * _0x190783, _0x28aac9 = _0x52acd2 * _0x190783 + _0xe15df1 * _0x4b4236 + _0x2cdc44 * _0x47a5d8;
            _0x4a58be[0x0] = _0x52acd2 * _0x2c360d + _0x190783 * _0x5c1974 + _0x5e59c5, _0x4a58be[0x1] = _0xe15df1 * _0x2c360d + _0x4b4236 * _0x5c1974 + _0x53776c, _0x4a58be[0x2] = _0x2cdc44 * _0x2c360d + _0x47a5d8 * _0x5c1974 + _0x77a91f, _0x4a58be[0x3] = _0x5c1974 * _0x2c360d - _0x28aac9;
        }
        static ['arcTanAngl' + 'e'](_0x1027ea, _0x3dfacd) {
            return 0x0 == _0x1027ea ? 0x1 == _0x3dfacd ? Math['PI'] / 0x2 : -Math['PI'] / 0x2 : _0x1027ea > 0x0 ? Math['atan'](_0x3dfacd / _0x1027ea) : _0x1027ea < 0x0 ? _0x3dfacd > 0x0 ? Math['atan'](_0x3dfacd / _0x1027ea) + Math['PI'] : Math['atan'](_0x3dfacd / _0x1027ea) - Math['PI'] : 0x0;
        }
        static ['angleTo'](_0x4dee08, _0x287ea9, _0x57dfce) {
            _0x21e77b['subtract'](_0x287ea9, _0x4dee08, _0x416f10['TEMPVector' + '30']), _0x21e77b['normalize'](_0x416f10['TEMPVector' + '30'], _0x416f10['TEMPVector' + '30']), _0x57dfce['elements'][0x0] = Math['asin'](_0x416f10['TEMPVector' + '30']['y']), _0x57dfce['elements'][0x1] = _0x416f10['arcTanAngl' + 'e'](-_0x416f10['TEMPVector' + '30']['z'], -_0x416f10['TEMPVector' + '30']['x']);
        }
        static ['createFrom' + 'AxisAngle'](_0x19fbcb, _0x29476d, _0x9be9eb) {
            var _0x437ae5 = _0x9be9eb['elements'], _0x1b9427 = _0x19fbcb['elements'];
            _0x29476d *= 0.5;
            var _0x4c7661 = Math['sin'](_0x29476d);
            _0x437ae5[0x0] = _0x4c7661 * _0x1b9427[0x0], _0x437ae5[0x1] = _0x4c7661 * _0x1b9427[0x1], _0x437ae5[0x2] = _0x4c7661 * _0x1b9427[0x2], _0x437ae5[0x3] = Math['cos'](_0x29476d);
        }
        static ['createFrom' + 'Matrix3x3'](_0x28baf8, _0x4d1b68) {
            var _0x288d1c, _0x186c6c = _0x4d1b68['elements'], _0x329bbf = _0x28baf8['elements'], _0x278e08 = _0x329bbf[0x0] + _0x329bbf[0x4] + _0x329bbf[0x8];
            if (_0x278e08 > 0x0)
                _0x288d1c = Math['sqrt'](_0x278e08 + 0x1), _0x186c6c[0x3] = 0.5 * _0x288d1c, _0x288d1c = 0.5 / _0x288d1c, _0x186c6c[0x0] = (_0x329bbf[0x5] - _0x329bbf[0x7]) * _0x288d1c, _0x186c6c[0x1] = (_0x329bbf[0x6] - _0x329bbf[0x2]) * _0x288d1c, _0x186c6c[0x2] = (_0x329bbf[0x1] - _0x329bbf[0x3]) * _0x288d1c;
            else {
                var _0x1d32a2 = 0x0;
                _0x329bbf[0x4] > _0x329bbf[0x0] && (_0x1d32a2 = 0x1), _0x329bbf[0x8] > _0x329bbf[0x3 * _0x1d32a2 + _0x1d32a2] && (_0x1d32a2 = 0x2);
                var _0x511461 = (_0x1d32a2 + 0x1) % 0x3, _0x1314d0 = (_0x1d32a2 + 0x2) % 0x3;
                _0x288d1c = Math['sqrt'](_0x329bbf[0x3 * _0x1d32a2 + _0x1d32a2] - _0x329bbf[0x3 * _0x511461 + _0x511461] - _0x329bbf[0x3 * _0x1314d0 + _0x1314d0] + 0x1), _0x186c6c[_0x1d32a2] = 0.5 * _0x288d1c, _0x288d1c = 0.5 / _0x288d1c, _0x186c6c[0x3] = (_0x329bbf[0x3 * _0x511461 + _0x1314d0] - _0x329bbf[0x3 * _0x1314d0 + _0x511461]) * _0x288d1c, _0x186c6c[_0x511461] = (_0x329bbf[0x3 * _0x511461 + _0x1d32a2] + _0x329bbf[0x3 * _0x1d32a2 + _0x511461]) * _0x288d1c, _0x186c6c[_0x1314d0] = (_0x329bbf[0x3 * _0x1314d0 + _0x1d32a2] + _0x329bbf[0x3 * _0x1d32a2 + _0x1314d0]) * _0x288d1c;
            }
        }
        static ['createFrom' + 'Matrix4x4'](_0xdd5419, _0x482c19) {
            var _0x463ea7, _0x2bfdea, _0x278347 = _0xdd5419['elements'], _0x17364f = _0x482c19['elements'], _0x3adbfb = _0x278347[0x0] + _0x278347[0x5] + _0x278347[0xa];
            _0x3adbfb > 0x0 ? (_0x463ea7 = Math['sqrt'](_0x3adbfb + 0x1), _0x17364f[0x3] = 0.5 * _0x463ea7, _0x463ea7 = 0.5 / _0x463ea7, _0x17364f[0x0] = (_0x278347[0x6] - _0x278347[0x9]) * _0x463ea7, _0x17364f[0x1] = (_0x278347[0x8] - _0x278347[0x2]) * _0x463ea7, _0x17364f[0x2] = (_0x278347[0x1] - _0x278347[0x4]) * _0x463ea7) : _0x278347[0x0] >= _0x278347[0x5] && _0x278347[0x0] >= _0x278347[0xa] ? (_0x2bfdea = 0.5 / (_0x463ea7 = Math['sqrt'](0x1 + _0x278347[0x0] - _0x278347[0x5] - _0x278347[0xa])), _0x17364f[0x0] = 0.5 * _0x463ea7, _0x17364f[0x1] = (_0x278347[0x1] + _0x278347[0x4]) * _0x2bfdea, _0x17364f[0x2] = (_0x278347[0x2] + _0x278347[0x8]) * _0x2bfdea, _0x17364f[0x3] = (_0x278347[0x6] - _0x278347[0x9]) * _0x2bfdea) : _0x278347[0x5] > _0x278347[0xa] ? (_0x2bfdea = 0.5 / (_0x463ea7 = Math['sqrt'](0x1 + _0x278347[0x5] - _0x278347[0x0] - _0x278347[0xa])), _0x17364f[0x0] = (_0x278347[0x4] + _0x278347[0x1]) * _0x2bfdea, _0x17364f[0x1] = 0.5 * _0x463ea7, _0x17364f[0x2] = (_0x278347[0x9] + _0x278347[0x6]) * _0x2bfdea, _0x17364f[0x3] = (_0x278347[0x8] - _0x278347[0x2]) * _0x2bfdea) : (_0x2bfdea = 0.5 / (_0x463ea7 = Math['sqrt'](0x1 + _0x278347[0xa] - _0x278347[0x0] - _0x278347[0x5])), _0x17364f[0x0] = (_0x278347[0x8] + _0x278347[0x2]) * _0x2bfdea, _0x17364f[0x1] = (_0x278347[0x9] + _0x278347[0x6]) * _0x2bfdea, _0x17364f[0x2] = 0.5 * _0x463ea7, _0x17364f[0x3] = (_0x278347[0x1] - _0x278347[0x4]) * _0x2bfdea);
        }
        static ['slerp'](_0x4ccf69, _0x2c4b17, _0x952697, _0x4e59e6) {
            var _0x38c026, _0x3610da, _0x5b2a1e, _0x171ff8, _0x1e79b2, _0x4ee223 = _0x4ccf69['elements'], _0x56ad49 = _0x2c4b17['elements'], _0x54f9f8 = _0x4e59e6['elements'], _0x540107 = _0x4ee223[0x0], _0x484439 = _0x4ee223[0x1], _0x46ef77 = _0x4ee223[0x2], _0x5cd0fd = _0x4ee223[0x3], _0x64f4fb = _0x56ad49[0x0], _0x1434e5 = _0x56ad49[0x1], _0x279a51 = _0x56ad49[0x2], _0x395e00 = _0x56ad49[0x3];
            return (_0x3610da = _0x540107 * _0x64f4fb + _0x484439 * _0x1434e5 + _0x46ef77 * _0x279a51 + _0x5cd0fd * _0x395e00) < 0x0 && (_0x3610da = -_0x3610da, _0x64f4fb = -_0x64f4fb, _0x1434e5 = -_0x1434e5, _0x279a51 = -_0x279a51, _0x395e00 = -_0x395e00), 0x1 - _0x3610da > 0.000001 ? (_0x38c026 = Math['acos'](_0x3610da), _0x5b2a1e = Math['sin'](_0x38c026), _0x171ff8 = Math['sin']((0x1 - _0x952697) * _0x38c026) / _0x5b2a1e, _0x1e79b2 = Math['sin'](_0x952697 * _0x38c026) / _0x5b2a1e) : (_0x171ff8 = 0x1 - _0x952697, _0x1e79b2 = _0x952697), _0x54f9f8[0x0] = _0x171ff8 * _0x540107 + _0x1e79b2 * _0x64f4fb, _0x54f9f8[0x1] = _0x171ff8 * _0x484439 + _0x1e79b2 * _0x1434e5, _0x54f9f8[0x2] = _0x171ff8 * _0x46ef77 + _0x1e79b2 * _0x279a51, _0x54f9f8[0x3] = _0x171ff8 * _0x5cd0fd + _0x1e79b2 * _0x395e00, _0x54f9f8;
        }
        static ['lerp'](_0x4aeaa2, _0x1f031d, _0x54308f, _0x5e3f86) {
            _0x416f10['_lerpArray'](_0x4aeaa2['elements'], _0x1f031d['elements'], _0x54308f, _0x5e3f86['elements']);
        }
        static ['add'](_0x1465fc, _0x63e90b, _0x4815d5) {
            var _0x21df49 = _0x4815d5['elements'], _0x26b530 = _0x1465fc['elements'], _0x3b79f0 = _0x63e90b['elements'];
            _0x21df49[0x0] = _0x26b530[0x0] + _0x3b79f0[0x0], _0x21df49[0x1] = _0x26b530[0x1] + _0x3b79f0[0x1], _0x21df49[0x2] = _0x26b530[0x2] + _0x3b79f0[0x2], _0x21df49[0x3] = _0x26b530[0x3] + _0x3b79f0[0x3];
        }
        static ['dot'](_0x45a66a, _0x28e5bf) {
            return _0x416f10['_dotArray'](_0x45a66a['elements'], _0x28e5bf['elements']);
        }
        get ['x']() {
            return this['elements'][0x0];
        }
        set ['x'](_0x523898) {
            this['elements'][0x0] = _0x523898;
        }
        get ['y']() {
            return this['elements'][0x1];
        }
        set ['y'](_0x58d51d) {
            this['elements'][0x1] = _0x58d51d;
        }
        get ['z']() {
            return this['elements'][0x2];
        }
        set ['z'](_0x26ed56) {
            this['elements'][0x2] = _0x26ed56;
        }
        get ['w']() {
            return this['elements'][0x3];
        }
        set ['w'](_0x4090ab) {
            this['elements'][0x3] = _0x4090ab;
        }
        ['scaling'](_0x392601, _0x3d8aa0) {
            var _0x6af178 = _0x3d8aa0['elements'], _0x2b1b4c = this['elements'];
            _0x6af178[0x0] = _0x2b1b4c[0x0] * _0x392601, _0x6af178[0x1] = _0x2b1b4c[0x1] * _0x392601, _0x6af178[0x2] = _0x2b1b4c[0x2] * _0x392601, _0x6af178[0x3] = _0x2b1b4c[0x3] * _0x392601;
        }
        ['normalize'](_0x2593f2) {
            _0x416f10['_normalize' + 'Array'](this['elements'], _0x2593f2['elements']);
        }
        ['length']() {
            var _0x4973ba = this['elements'], _0x388a8a = _0x4973ba[0x0], _0x4af721 = _0x4973ba[0x1], _0x156447 = _0x4973ba[0x2], _0x5455fc = _0x4973ba[0x3];
            return Math['sqrt'](_0x388a8a * _0x388a8a + _0x4af721 * _0x4af721 + _0x156447 * _0x156447 + _0x5455fc * _0x5455fc);
        }
        ['rotateX'](_0x248951, _0x1ea465) {
            var _0x1562b7 = _0x1ea465['elements'], _0x12ec9b = this['elements'];
            _0x248951 *= 0.5;
            var _0x1707aa = _0x12ec9b[0x0], _0x2b81ad = _0x12ec9b[0x1], _0xc180bd = _0x12ec9b[0x2], _0x55aa1d = _0x12ec9b[0x3], _0x4c7401 = Math['sin'](_0x248951), _0x28cb66 = Math['cos'](_0x248951);
            _0x1562b7[0x0] = _0x1707aa * _0x28cb66 + _0x55aa1d * _0x4c7401, _0x1562b7[0x1] = _0x2b81ad * _0x28cb66 + _0xc180bd * _0x4c7401, _0x1562b7[0x2] = _0xc180bd * _0x28cb66 - _0x2b81ad * _0x4c7401, _0x1562b7[0x3] = _0x55aa1d * _0x28cb66 - _0x1707aa * _0x4c7401;
        }
        ['rotateY'](_0x3c8f0c, _0x158df4) {
            var _0x4b0d92 = _0x158df4['elements'], _0x396526 = this['elements'];
            _0x3c8f0c *= 0.5;
            var _0x1d7674 = _0x396526[0x0], _0x21b002 = _0x396526[0x1], _0xcc5e71 = _0x396526[0x2], _0x6fc219 = _0x396526[0x3], _0x4e5f9b = Math['sin'](_0x3c8f0c), _0x4ed70b = Math['cos'](_0x3c8f0c);
            _0x4b0d92[0x0] = _0x1d7674 * _0x4ed70b - _0xcc5e71 * _0x4e5f9b, _0x4b0d92[0x1] = _0x21b002 * _0x4ed70b + _0x6fc219 * _0x4e5f9b, _0x4b0d92[0x2] = _0xcc5e71 * _0x4ed70b + _0x1d7674 * _0x4e5f9b, _0x4b0d92[0x3] = _0x6fc219 * _0x4ed70b - _0x21b002 * _0x4e5f9b;
        }
        ['rotateZ'](_0xe6c912, _0x42bad0) {
            var _0x4ef0a3 = _0x42bad0['elements'], _0x4b48f2 = this['elements'];
            _0xe6c912 *= 0.5;
            var _0x3de80f = _0x4b48f2[0x0], _0x11cb1c = _0x4b48f2[0x1], _0x50c03b = _0x4b48f2[0x2], _0xce111d = _0x4b48f2[0x3], _0x4a8374 = Math['sin'](_0xe6c912), _0x347f50 = Math['cos'](_0xe6c912);
            _0x4ef0a3[0x0] = _0x3de80f * _0x347f50 + _0x11cb1c * _0x4a8374, _0x4ef0a3[0x1] = _0x11cb1c * _0x347f50 - _0x3de80f * _0x4a8374, _0x4ef0a3[0x2] = _0x50c03b * _0x347f50 + _0xce111d * _0x4a8374, _0x4ef0a3[0x3] = _0xce111d * _0x347f50 - _0x50c03b * _0x4a8374;
        }
        ['getYawPitc' + 'hRoll'](_0x3ee32b) {
            _0x21e77b['transformQ' + 'uat'](_0x21e77b['ForwardRH'], this, _0x416f10['TEMPVector' + '31']), _0x21e77b['transformQ' + 'uat'](_0x21e77b['Up'], this, _0x416f10['TEMPVector' + '32']);
            var _0x5af0b3 = _0x416f10['TEMPVector' + '32']['elements'];
            _0x416f10['angleTo'](_0x21e77b['ZERO'], _0x416f10['TEMPVector' + '31'], _0x416f10['TEMPVector' + '33']);
            var _0x2c2b9a = _0x416f10['TEMPVector' + '33']['elements'];
            _0x2c2b9a[0x0] == Math['PI'] / 0x2 ? (_0x2c2b9a[0x1] = _0x416f10['arcTanAngl' + 'e'](_0x5af0b3[0x2], _0x5af0b3[0x0]), _0x2c2b9a[0x2] = 0x0) : _0x2c2b9a[0x0] == -Math['PI'] / 0x2 ? (_0x2c2b9a[0x1] = _0x416f10['arcTanAngl' + 'e'](-_0x5af0b3[0x2], -_0x5af0b3[0x0]), _0x2c2b9a[0x2] = 0x0) : (_0x16c2be['createRota' + 'tionY'](-_0x2c2b9a[0x1], _0x416f10['TEMPMatrix' + '0']), _0x16c2be['createRota' + 'tionX'](-_0x2c2b9a[0x0], _0x416f10['TEMPMatrix' + '1']), _0x21e77b['transformC' + 'oordinate'](_0x416f10['TEMPVector' + '32'], _0x416f10['TEMPMatrix' + '0'], _0x416f10['TEMPVector' + '32']), _0x21e77b['transformC' + 'oordinate'](_0x416f10['TEMPVector' + '32'], _0x416f10['TEMPMatrix' + '1'], _0x416f10['TEMPVector' + '32']), _0x2c2b9a[0x2] = _0x416f10['arcTanAngl' + 'e'](_0x5af0b3[0x1], -_0x5af0b3[0x0])), _0x2c2b9a[0x1] <= -Math['PI'] && (_0x2c2b9a[0x1] = Math['PI']), _0x2c2b9a[0x2] <= -Math['PI'] && (_0x2c2b9a[0x2] = Math['PI']), _0x2c2b9a[0x1] >= Math['PI'] && _0x2c2b9a[0x2] >= Math['PI'] && (_0x2c2b9a[0x1] = 0x0, _0x2c2b9a[0x2] = 0x0, _0x2c2b9a[0x0] = Math['PI'] - _0x2c2b9a[0x0]);
            var _0x26f8a5 = _0x3ee32b['elements'];
            _0x26f8a5[0x0] = _0x2c2b9a[0x1], _0x26f8a5[0x1] = _0x2c2b9a[0x0], _0x26f8a5[0x2] = _0x2c2b9a[0x2];
        }
        ['invert'](_0x3df2b0) {
            var _0xeff760 = _0x3df2b0['elements'], _0x785ee6 = this['elements'], _0x537c3c = _0x785ee6[0x0], _0x272a72 = _0x785ee6[0x1], _0x18191e = _0x785ee6[0x2], _0x56dc28 = _0x785ee6[0x3], _0x47b0a0 = _0x537c3c * _0x537c3c + _0x272a72 * _0x272a72 + _0x18191e * _0x18191e + _0x56dc28 * _0x56dc28, _0x1b1891 = _0x47b0a0 ? 0x1 / _0x47b0a0 : 0x0;
            _0xeff760[0x0] = -_0x537c3c * _0x1b1891, _0xeff760[0x1] = -_0x272a72 * _0x1b1891, _0xeff760[0x2] = -_0x18191e * _0x1b1891, _0xeff760[0x3] = _0x56dc28 * _0x1b1891;
        }
        ['identity']() {
            var _0x1e43a5 = this['elements'];
            _0x1e43a5[0x0] = 0x0, _0x1e43a5[0x1] = 0x0, _0x1e43a5[0x2] = 0x0, _0x1e43a5[0x3] = 0x1;
        }
        ['fromArray'](_0x46834e, _0x3a7570 = 0x0) {
            this['elements'][0x0] = _0x46834e[_0x3a7570 + 0x0], this['elements'][0x1] = _0x46834e[_0x3a7570 + 0x1], this['elements'][0x2] = _0x46834e[_0x3a7570 + 0x2], this['elements'][0x3] = _0x46834e[_0x3a7570 + 0x3];
        }
        ['cloneTo'](_0x560ae4) {
            var _0x1a4d11, _0x43b19a, _0x5d3735;
            if ((_0x43b19a = this['elements']) !== (_0x5d3735 = _0x560ae4['elements'])) {
                for (_0x1a4d11 = 0x0; _0x1a4d11 < 0x4; ++_0x1a4d11)
                    _0x5d3735[_0x1a4d11] = _0x43b19a[_0x1a4d11];
            }
        }
        ['clone']() {
            var _0x199320 = new _0x416f10();
            return this['cloneTo'](_0x199320), _0x199320;
        }
        ['equals'](_0x427c11) {
            var _0x41489e = this['elements'], _0xb5e0c8 = _0x427c11['elements'];
            return _0x183ae5['nearEqual'](_0x41489e[0x0], _0xb5e0c8[0x0]) && _0x183ae5['nearEqual'](_0x41489e[0x1], _0xb5e0c8[0x1]) && _0x183ae5['nearEqual'](_0x41489e[0x2], _0xb5e0c8[0x2]) && _0x183ae5['nearEqual'](_0x41489e[0x3], _0xb5e0c8[0x3]);
        }
        static ['rotationLo' + 'okAt'](_0x19ecf9, _0x404c81, _0x458ed0) {
            _0x416f10['lookAt'](_0x21e77b['ZERO'], _0x19ecf9, _0x404c81, _0x458ed0);
        }
        static ['lookAt'](_0x44472d, _0x5c0dd0, _0x50e0bc, _0x525afd) {
            _0x25d419['lookAt'](_0x44472d, _0x5c0dd0, _0x50e0bc, _0x416f10['_tempMatri' + 'x3x3']), _0x416f10['rotationMa' + 'trix'](_0x416f10['_tempMatri' + 'x3x3'], _0x525afd);
        }
        ['lengthSqua' + 'red']() {
            var _0x55fa96 = this['elements'][0x0], _0x3790db = this['elements'][0x1], _0x4715e3 = this['elements'][0x2], _0x1d2e69 = this['elements'][0x3];
            return _0x55fa96 * _0x55fa96 + _0x3790db * _0x3790db + _0x4715e3 * _0x4715e3 + _0x1d2e69 * _0x1d2e69;
        }
        static ['invert'](_0x34f6d2, _0x3ed078) {
            var _0x2cbdde = _0x34f6d2['elements'], _0x582f98 = _0x3ed078['elements'], _0x18685a = _0x34f6d2['lengthSqua' + 'red']();
            _0x183ae5['isZero'](_0x18685a) || (_0x18685a = 0x1 / _0x18685a, _0x582f98[0x0] = -_0x2cbdde[0x0] * _0x18685a, _0x582f98[0x1] = -_0x2cbdde[0x1] * _0x18685a, _0x582f98[0x2] = -_0x2cbdde[0x2] * _0x18685a, _0x582f98[0x3] = _0x2cbdde[0x3] * _0x18685a);
        }
        static ['rotationMa' + 'trix'](_0x246900, _0x4c4e8d) {
            var _0x517c32, _0x2a4454, _0x21492c = _0x246900['elements'], _0x20668f = _0x21492c[0x0], _0x497b5e = _0x21492c[0x1], _0x5ea5c3 = _0x21492c[0x2], _0x1bde2c = _0x21492c[0x3], _0x3d52d4 = _0x21492c[0x4], _0x254789 = _0x21492c[0x5], _0x1b1b19 = _0x21492c[0x6], _0x2307d7 = _0x21492c[0x7], _0x8942c1 = _0x21492c[0x8], _0x3b5563 = _0x4c4e8d['elements'], _0x2010a3 = _0x20668f + _0x3d52d4 + _0x8942c1;
            _0x2010a3 > 0x0 ? (_0x517c32 = Math['sqrt'](_0x2010a3 + 0x1), _0x3b5563[0x3] = 0.5 * _0x517c32, _0x517c32 = 0.5 / _0x517c32, _0x3b5563[0x0] = (_0x254789 - _0x2307d7) * _0x517c32, _0x3b5563[0x1] = (_0x1b1b19 - _0x5ea5c3) * _0x517c32, _0x3b5563[0x2] = (_0x497b5e - _0x1bde2c) * _0x517c32) : _0x20668f >= _0x3d52d4 && _0x20668f >= _0x8942c1 ? (_0x2a4454 = 0.5 / (_0x517c32 = Math['sqrt'](0x1 + _0x20668f - _0x3d52d4 - _0x8942c1)), _0x3b5563[0x0] = 0.5 * _0x517c32, _0x3b5563[0x1] = (_0x497b5e + _0x1bde2c) * _0x2a4454, _0x3b5563[0x2] = (_0x5ea5c3 + _0x1b1b19) * _0x2a4454, _0x3b5563[0x3] = (_0x254789 - _0x2307d7) * _0x2a4454) : _0x3d52d4 > _0x8942c1 ? (_0x2a4454 = 0.5 / (_0x517c32 = Math['sqrt'](0x1 + _0x3d52d4 - _0x20668f - _0x8942c1)), _0x3b5563[0x0] = (_0x1bde2c + _0x497b5e) * _0x2a4454, _0x3b5563[0x1] = 0.5 * _0x517c32, _0x3b5563[0x2] = (_0x2307d7 + _0x254789) * _0x2a4454, _0x3b5563[0x3] = (_0x1b1b19 - _0x5ea5c3) * _0x2a4454) : (_0x2a4454 = 0.5 / (_0x517c32 = Math['sqrt'](0x1 + _0x8942c1 - _0x20668f - _0x3d52d4)), _0x3b5563[0x0] = (_0x1b1b19 + _0x5ea5c3) * _0x2a4454, _0x3b5563[0x1] = (_0x2307d7 + _0x254789) * _0x2a4454, _0x3b5563[0x2] = 0.5 * _0x517c32, _0x3b5563[0x3] = (_0x497b5e - _0x1bde2c) * _0x2a4454);
        }
    }
    _0x416f10['TEMPVector' + '30'] = new _0x21e77b(), _0x416f10['TEMPVector' + '31'] = new _0x21e77b(), _0x416f10['TEMPVector' + '32'] = new _0x21e77b(), _0x416f10['TEMPVector' + '33'] = new _0x21e77b(), _0x416f10['TEMPMatrix' + '0'] = new _0x16c2be(), _0x416f10['TEMPMatrix' + '1'] = new _0x16c2be(), _0x416f10['_tempMatri' + 'x3x3'] = new _0x25d419(), _0x416f10['DEFAULT'] = new _0x416f10(), _0x416f10['NAN'] = new _0x416f10(NaN, NaN, NaN, NaN);
    class _0x46070f {
        constructor() {
            this['_reference' + 'Count'] = 0x0, this['_clip'] = null, this['_nodeOwner' + 's'] = [], this['_currentFr' + 'ameIndices'] = null, this['_realtimeD' + 'atas'] = [], this['_scripts'] = null, this['speed'] = 0x1, this['clipStart'] = 0x0, this['clipEnd'] = 0x1;
        }
        get ['clip']() {
            return this['_clip'];
        }
        set ['clip'](_0x5e2bb3) {
            if (this['_clip'] !== _0x5e2bb3) {
                if (this['_clip'] && this['_reference' + 'Count'] > 0x0 && this['_clip']['_removeRef' + 'erence'](this['_reference' + 'Count']), _0x5e2bb3) {
                    var _0xbdf32a = this['_realtimeD' + 'atas'], _0x520c1f = _0x5e2bb3['_nodes'], _0xba8f82 = _0x520c1f['count'];
                    this['_currentFr' + 'ameIndices'] = new Int16Array(_0xba8f82), this['_resetFram' + 'eIndices'](), this['_reference' + 'Count'] > 0x0 && _0x5e2bb3['_addRefere' + 'nce'](this['_reference' + 'Count']), this['_realtimeD' + 'atas']['length'] = _0xba8f82;
                    for (var _0xabd859 = 0x0; _0xabd859 < _0xba8f82; _0xabd859++)
                        switch (_0x520c1f['getNodeByI' + 'ndex'](_0xabd859)['type']) {
                        case 0x0:
                            break;
                        case 0x1:
                        case 0x3:
                        case 0x4:
                            _0xbdf32a[_0xabd859] = _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? new _0x21e77b() : new _0x4795b3();
                            break;
                        case 0x2:
                            _0xbdf32a[_0xabd859] = _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? new _0x416f10() : new _0x5958af();
                            break;
                        default:
                            throw 'AnimationC' + 'lipParser0' + '4:unknown\x20' + 'type.';
                        }
                }
                this['_clip'] = _0x5e2bb3;
            }
        }
        ['_getRefere' + 'nceCount']() {
            return this['_reference' + 'Count'];
        }
        ['_addRefere' + 'nce'](_0x5248a9 = 0x1) {
            this['_clip'] && this['_clip']['_addRefere' + 'nce'](_0x5248a9), this['_reference' + 'Count'] += _0x5248a9;
        }
        ['_removeRef' + 'erence'](_0x254bd5 = 0x1) {
            this['_clip'] && this['_clip']['_removeRef' + 'erence'](_0x254bd5), this['_reference' + 'Count'] -= _0x254bd5;
        }
        ['_clearRefe' + 'rence']() {
            this['_removeRef' + 'erence'](-this['_reference' + 'Count']);
        }
        ['_resetFram' + 'eIndices']() {
            for (var _0x636fbb = 0x0, _0x36f987 = this['_currentFr' + 'ameIndices']['length']; _0x636fbb < _0x36f987; _0x636fbb++)
                this['_currentFr' + 'ameIndices'][_0x636fbb] = -0x1;
        }
        ['addScript'](_0x28e6f0) {
            var _0x5ab8d7 = new _0x28e6f0();
            return this['_scripts'] = this['_scripts'] || [], this['_scripts']['push'](_0x5ab8d7), _0x5ab8d7;
        }
        ['getScript'](_0x8af188) {
            if (this['_scripts'])
                for (var _0x17e08c = 0x0, _0x40182f = this['_scripts']['length']; _0x17e08c < _0x40182f; _0x17e08c++) {
                    var _0x283dae = this['_scripts'][_0x17e08c];
                    if (_0x283dae instanceof _0x8af188)
                        return _0x283dae;
                }
            return null;
        }
        ['getScripts'](_0x303ba4) {
            var _0x37f6b2;
            if (this['_scripts'])
                for (var _0x3b366b = 0x0, _0x44f01d = this['_scripts']['length']; _0x3b366b < _0x44f01d; _0x3b366b++) {
                    var _0x449689 = this['_scripts'][_0x3b366b];
                    _0x449689 instanceof _0x303ba4 && (_0x37f6b2 = _0x37f6b2 || [])['push'](_0x449689);
                }
            return _0x37f6b2;
        }
        ['cloneTo'](_0x354d2b) {
            var _0x54f806 = _0x354d2b;
            _0x54f806['name'] = this['name'], _0x54f806['speed'] = this['speed'], _0x54f806['clipStart'] = this['clipStart'], _0x54f806['clipEnd'] = this['clipEnd'], _0x54f806['clip'] = this['_clip'];
        }
        ['clone']() {
            var _0x316a14 = new _0x46070f();
            return this['cloneTo'](_0x316a14), _0x316a14;
        }
    }
    class _0xe9442c {
        constructor() {
            this['indexInLis' + 't'] = -0x1, this['referenceC' + 'ount'] = 0x0, this['updateMark'] = -0x1, this['type'] = -0x1, this['fullPath'] = null, this['propertyOw' + 'ner'] = null, this['property'] = null, this['defaultVal' + 'ue'] = null, this['crossFixed' + 'Value'] = null;
        }
        ['saveCrossF' + 'ixedValue']() {
            var _0x1dc338 = this['propertyOw' + 'ner'];
            if (_0x1dc338)
                switch (this['type']) {
                case 0x0:
                    for (var _0xa639f0 = this['property'], _0x1bc881 = _0xa639f0['length'] - 0x1, _0x107d95 = 0x0; _0x107d95 < _0x1bc881 && (_0x1dc338 = _0x1dc338[_0xa639f0[_0x107d95]]); _0x107d95++);
                    this['crossFixed' + 'Value'] = _0x1dc338[_0xa639f0[_0x1bc881]];
                    break;
                case 0x1:
                    var _0x4f5c65 = _0x1dc338['localPosit' + 'ion'];
                    this['crossFixed' + 'Value'] || (this['crossFixed' + 'Value'] = new _0x4795b3()), this['crossFixed' + 'Value']['x'] = _0x4f5c65['x'], this['crossFixed' + 'Value']['y'] = _0x4f5c65['y'], this['crossFixed' + 'Value']['z'] = _0x4f5c65['z'];
                    break;
                case 0x2:
                    var _0xb46b76 = _0x1dc338['localRotat' + 'ion'];
                    this['crossFixed' + 'Value'] || (this['crossFixed' + 'Value'] = new _0x5958af()), this['crossFixed' + 'Value']['x'] = _0xb46b76['x'], this['crossFixed' + 'Value']['y'] = _0xb46b76['y'], this['crossFixed' + 'Value']['z'] = _0xb46b76['z'], this['crossFixed' + 'Value']['w'] = _0xb46b76['w'];
                    break;
                case 0x3:
                    var _0x1628ee = _0x1dc338['localScale'];
                    this['crossFixed' + 'Value'] || (this['crossFixed' + 'Value'] = new _0x4795b3()), this['crossFixed' + 'Value']['x'] = _0x1628ee['x'], this['crossFixed' + 'Value']['y'] = _0x1628ee['y'], this['crossFixed' + 'Value']['z'] = _0x1628ee['z'];
                    break;
                case 0x4:
                    var _0x4b7075 = _0x1dc338['localRotat' + 'ionEuler'];
                    this['crossFixed' + 'Value'] || (this['crossFixed' + 'Value'] = new _0x4795b3()), this['crossFixed' + 'Value']['x'] = _0x4b7075['x'], this['crossFixed' + 'Value']['y'] = _0x4b7075['y'], this['crossFixed' + 'Value']['z'] = _0x4b7075['z'];
                    break;
                default:
                    throw 'Animator:u' + 'nknown\x20typ' + 'e.';
                }
        }
    }
    class _0x40f618 extends _0x33d6e0['Component'] {
        constructor() {
            super(), this['_keyframeN' + 'odeOwners'] = [], this['_linkAvata' + 'rSpritesDa' + 'ta'] = {}, this['_linkAvata' + 'rSprites'] = [], this['_renderabl' + 'eSprites'] = [], this['cullingMod' + 'e'] = _0x40f618['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY'], this['_controlle' + 'rLayers'] = [], this['_linkSprit' + 'es'] = {}, this['_speed'] = 0x1, this['_keyframeN' + 'odeOwnerMa' + 'p'] = {}, this['_updateMar' + 'k'] = 0x0;
        }
        static ['_update'](_0x2bd587) {
            for (var _0x56069c = _0x2bd587['_animatorP' + 'ool'], _0x593eb5 = _0x56069c['elements'], _0xe33c7b = 0x0, _0x127f74 = _0x56069c['length']; _0xe33c7b < _0x127f74; _0xe33c7b++) {
                var _0x434da9 = _0x593eb5[_0xe33c7b];
                _0x434da9 && _0x434da9['enabled'] && _0x434da9['_update']();
            }
        }
        get ['speed']() {
            return this['_speed'];
        }
        set ['speed'](_0xd7abb4) {
            this['_speed'] = _0xd7abb4;
        }
        ['_linkToSpr' + 'ites'](_0x170457) {
            for (var _0x1245c4 in _0x170457) {
                for (var _0x162a0f = this['owner'], _0x385efc = _0x170457[_0x1245c4], _0x104687 = 0x0, _0x25f8f6 = _0x385efc['length']; _0x104687 < _0x25f8f6; _0x104687++) {
                    var _0x14610d = _0x385efc[_0x104687];
                    if ('' === _0x14610d)
                        break;
                    if (!(_0x162a0f = _0x162a0f['getChildBy' + 'Name'](_0x14610d)))
                        break;
                }
                _0x162a0f && this['linkSprite' + '3DToAvatar' + 'Node'](_0x1245c4, _0x162a0f);
            }
        }
        ['_addKeyfra' + 'meNodeOwne' + 'r'](_0x624cab, _0x1c4068, _0x204877) {
            var _0x2398ad = _0x1c4068['_indexInLi' + 'st'], _0x2d4002 = _0x1c4068['fullPath'], _0x8c2d60 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x2d4002];
            if (_0x8c2d60)
                _0x8c2d60['referenceC' + 'ount']++, _0x624cab[_0x2398ad] = _0x8c2d60;
            else {
                for (var _0xb4a1d0 = _0x204877, _0x16c056 = 0x0, _0xe32f5b = _0x1c4068['propertyCo' + 'unt']; _0x16c056 < _0xe32f5b && (_0xb4a1d0 = _0xb4a1d0[_0x1c4068['getPropert' + 'yByIndex'](_0x16c056)]); _0x16c056++);
                (_0x8c2d60 = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x2d4002] = new _0xe9442c())['fullPath'] = _0x2d4002, _0x8c2d60['indexInLis' + 't'] = this['_keyframeN' + 'odeOwners']['length'], _0x8c2d60['referenceC' + 'ount'] = 0x1, _0x8c2d60['propertyOw' + 'ner'] = _0x204877;
                var _0x35828e = _0x1c4068['propertyCo' + 'unt'], _0x3c4237 = [];
                for (_0x16c056 = 0x0; _0x16c056 < _0x35828e; _0x16c056++)
                    _0x3c4237[_0x16c056] = _0x1c4068['getPropert' + 'yByIndex'](_0x16c056);
                if (_0x8c2d60['property'] = _0x3c4237, _0x8c2d60['type'] = _0x1c4068['type'], _0xb4a1d0) {
                    if (0x0 === _0x1c4068['type'])
                        _0x8c2d60['defaultVal' + 'ue'] = _0xb4a1d0;
                    else {
                        var _0x16c037 = new _0xb4a1d0['constructo' + 'r']();
                        _0xb4a1d0['cloneTo'](_0x16c037), _0x8c2d60['defaultVal' + 'ue'] = _0x16c037;
                    }
                }
                this['_keyframeN' + 'odeOwners']['push'](_0x8c2d60), _0x624cab[_0x2398ad] = _0x8c2d60;
            }
        }
        ['_removeKey' + 'frameNodeO' + 'wner'](_0x40d141, _0x2d9f5c) {
            var _0x25c956 = _0x2d9f5c['fullPath'], _0x91647e = this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x25c956];
            _0x91647e && (_0x91647e['referenceC' + 'ount']--, 0x0 === _0x91647e['referenceC' + 'ount'] && (delete this['_keyframeN' + 'odeOwnerMa' + 'p'][_0x25c956], this['_keyframeN' + 'odeOwners']['splice'](this['_keyframeN' + 'odeOwners']['indexOf'](_0x91647e), 0x1)), _0x40d141[_0x2d9f5c['_indexInLi' + 'st']] = null);
        }
        ['_getOwners' + 'ByClip'](_0x30d0d1) {
            var _0x3c2db9 = _0x30d0d1['_clip']['_nodes'], _0x41be5f = _0x3c2db9['count'], _0x2df0c1 = _0x30d0d1['_nodeOwner' + 's'];
            _0x2df0c1['length'] = _0x41be5f;
            for (var _0x32a224 = 0x0; _0x32a224 < _0x41be5f; _0x32a224++) {
                for (var _0x450aab = _0x3c2db9['getNodeByI' + 'ndex'](_0x32a224), _0x41a3de = this['_avatar'] ? this['_avatarNod' + 'eMap'][this['_avatar']['_rootNode']['name']] : this['owner'], _0x582135 = 0x0, _0x530f3e = _0x450aab['ownerPathC' + 'ount']; _0x582135 < _0x530f3e; _0x582135++) {
                    var _0x3dbd40 = _0x450aab['getOwnerPa' + 'thByIndex'](_0x582135);
                    if ('' === _0x3dbd40)
                        break;
                    if (!(_0x41a3de = _0x41a3de['getChildBy' + 'Name'](_0x3dbd40)))
                        break;
                }
                if (_0x41a3de) {
                    var _0x2f7a7b = _0x450aab['propertyOw' + 'ner'];
                    _0x2f7a7b && (_0x41a3de = _0x41a3de[_0x2f7a7b]), _0x41a3de && this['_addKeyfra' + 'meNodeOwne' + 'r'](_0x2df0c1, _0x450aab, _0x41a3de);
                }
            }
        }
        ['_updatePla' + 'yer'](_0x53b65a, _0x13635b, _0x598137, _0x2c3f6e) {
            var _0x13323f = _0x53b65a['_clip']['_duration'] * (_0x53b65a['clipEnd'] - _0x53b65a['clipStart']), _0x35119d = _0x13635b['_elapsedTi' + 'me'], _0x51e12a = _0x35119d + _0x598137;
            _0x13635b['_lastElaps' + 'edTime'] = _0x35119d, _0x13635b['_elapsedTi' + 'me'] = _0x51e12a;
            var _0x1010d6 = _0x51e12a / _0x13323f;
            _0x13635b['_normalize' + 'dTime'] = _0x1010d6;
            var _0x26da0c = _0x1010d6 % 0x1;
            _0x13635b['_normalize' + 'dPlayTime'] = _0x26da0c < 0x0 ? _0x26da0c + 0x1 : _0x26da0c, _0x13635b['_duration'] = _0x13323f;
            var _0x551ada = _0x53b65a['_scripts'];
            if (!_0x2c3f6e && _0x51e12a >= _0x13323f) {
                if (_0x13635b['_finish'] = !0x0, _0x13635b['_elapsedTi' + 'me'] = _0x13323f, _0x13635b['_normalize' + 'dPlayTime'] = 0x1, _0x551ada) {
                    for (var _0x51cb6e = 0x0, _0x4a658c = _0x551ada['length']; _0x51cb6e < _0x4a658c; _0x51cb6e++)
                        _0x551ada[_0x51cb6e]['onStateExi' + 't']();
                }
            } else {
                if (_0x551ada) {
                    for (_0x51cb6e = 0x0, _0x4a658c = _0x551ada['length']; _0x51cb6e < _0x4a658c; _0x51cb6e++)
                        _0x551ada[_0x51cb6e]['onStateUpd' + 'ate']();
                }
            }
        }
        ['_eventScri' + 'pt'](_0x12d92a, _0x256728, _0x43a353, _0x280080, _0x1ef840) {
            if (_0x1ef840)
                for (var _0x1699fc = _0x256728['length']; _0x43a353 < _0x1699fc; _0x43a353++) {
                    var _0x35923b = _0x256728[_0x43a353];
                    if (!(_0x35923b['time'] <= _0x280080))
                        break;
                    for (var _0x2e8182 = 0x0, _0x35cc41 = _0x12d92a['length']; _0x2e8182 < _0x35cc41; _0x2e8182++) {
                        var _0x1d625a = _0x12d92a[_0x2e8182], _0x339884 = _0x1d625a[_0x35923b['eventName']];
                        _0x339884 && _0x339884['apply'](_0x1d625a, _0x35923b['params']);
                    }
                }
            else {
                for (; _0x43a353 >= 0x0 && (_0x35923b = _0x256728[_0x43a353])['time'] >= _0x280080; _0x43a353--)
                    for (_0x2e8182 = 0x0, _0x35cc41 = _0x12d92a['length']; _0x2e8182 < _0x35cc41; _0x2e8182++)
                        (_0x339884 = (_0x1d625a = _0x12d92a[_0x2e8182])[_0x35923b['eventName']]) && _0x339884['apply'](_0x1d625a, _0x35923b['params']);
            }
            return _0x43a353;
        }
        ['_updateEve' + 'ntScript'](_0x5b2e8e, _0x4677ff) {
            var _0x2c26fe = this['owner']['_scripts'];
            if (_0x2c26fe) {
                var _0x332f98 = _0x5b2e8e['_clip'], _0x554281 = _0x332f98['_animation' + 'Events'], _0x2df61a = _0x332f98['_duration'], _0x2a5899 = _0x4677ff['_elapsedTi' + 'me'], _0xbee2d7 = _0x2a5899 % _0x2df61a, _0x3a17cf = Math['abs'](Math['floor'](_0x2a5899 / _0x2df61a) - Math['floor'](_0x4677ff['_lastElaps' + 'edTime'] / _0x2df61a)), _0x118430 = _0x4677ff['_elapsedTi' + 'me'] >= _0x4677ff['_lastElaps' + 'edTime'];
                if (_0x4677ff['_lastIsFro' + 'nt'] !== _0x118430 && (_0x118430 ? _0x4677ff['_playEvent' + 'Index']++ : _0x4677ff['_playEvent' + 'Index']--, _0x4677ff['_lastIsFro' + 'nt'] = _0x118430), _0x118430) {
                    _0x4677ff['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x2c26fe, _0x554281, _0x4677ff['_playEvent' + 'Index'], _0x3a17cf > 0x0 ? _0x2df61a : _0xbee2d7, !0x0);
                    for (var _0x1dcfc2 = 0x0, _0x58aa35 = _0x3a17cf - 0x1; _0x1dcfc2 < _0x58aa35; _0x1dcfc2++)
                        this['_eventScri' + 'pt'](_0x2c26fe, _0x554281, 0x0, _0x2df61a, !0x0);
                    _0x3a17cf > 0x0 && _0xbee2d7 > 0x0 && (_0x4677ff['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x2c26fe, _0x554281, 0x0, _0xbee2d7, !0x0));
                } else {
                    _0x4677ff['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x2c26fe, _0x554281, _0x4677ff['_playEvent' + 'Index'], _0x3a17cf > 0x0 ? 0x0 : _0xbee2d7, !0x1);
                    var _0xd247af = _0x554281['length'] - 0x1;
                    for (_0x1dcfc2 = 0x0, _0x58aa35 = _0x3a17cf - 0x1; _0x1dcfc2 < _0x58aa35; _0x1dcfc2++)
                        this['_eventScri' + 'pt'](_0x2c26fe, _0x554281, _0xd247af, 0x0, !0x1);
                    _0x3a17cf > 0x0 && _0xbee2d7 > 0x0 && (_0x4677ff['_playEvent' + 'Index'] = this['_eventScri' + 'pt'](_0x2c26fe, _0x554281, _0xd247af, _0xbee2d7, !0x1));
                }
            }
        }
        ['_updateCli' + 'pDatas'](_0x4f9e26, _0x15b0e8, _0x1078b6, _0x105a48) {
            var _0x595b56 = _0x4f9e26['_clip'], _0x2fdecd = _0x595b56['_duration'], _0x5a6013 = _0x4f9e26['clipStart'] * _0x2fdecd + _0x1078b6['_normalize' + 'dPlayTime'] * _0x1078b6['_duration'], _0x2a2ce6 = _0x4f9e26['_currentFr' + 'ameIndices'], _0x39499d = _0x1078b6['_elapsedTi' + 'me'] > _0x1078b6['_lastElaps' + 'edTime'];
            _0x595b56['_evaluateC' + 'lipDatasRe' + 'alTime'](_0x595b56['_nodes'], _0x5a6013, _0x2a2ce6, _0x15b0e8, _0x39499d, _0x4f9e26['_realtimeD' + 'atas']);
        }
        ['_applyFloa' + 't'](_0x1c502d, _0x245360, _0x44fdcd, _0x99c517, _0x2d62f6, _0x56f929, _0x2ad53d) {
            if (_0x44fdcd['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x99c517)
                    _0x1c502d[_0x245360] += _0x2d62f6 * _0x2ad53d;
                else {
                    var _0xadd736 = _0x1c502d[_0x245360];
                    _0x1c502d[_0x245360] = _0xadd736 + _0x2d62f6 * (_0x2ad53d - _0xadd736);
                }
            } else {
                if (_0x56f929)
                    _0x1c502d[_0x245360] = _0x99c517 ? _0x44fdcd['defaultVal' + 'ue'] + _0x2ad53d : _0x2ad53d;
                else {
                    if (_0x99c517)
                        _0x1c502d[_0x245360] = _0x44fdcd['defaultVal' + 'ue'] + _0x2d62f6 * _0x2ad53d;
                    else {
                        var _0x128e0d = _0x44fdcd['defaultVal' + 'ue'];
                        _0x1c502d[_0x245360] = _0x128e0d + _0x2d62f6 * (_0x2ad53d - _0x128e0d);
                    }
                }
            }
        }
        ['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x3f7e01, _0x1f50e8, _0x45a247, _0x5a5ac5, _0x4f4a6f, _0x346973) {
            if (_0x3f7e01['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x1f50e8)
                    _0x346973['x'] += _0x45a247 * _0x4f4a6f['x'], _0x346973['y'] += _0x45a247 * _0x4f4a6f['y'], _0x346973['z'] += _0x45a247 * _0x4f4a6f['z'];
                else {
                    var _0x2b03aa = _0x346973['x'], _0x4d7e35 = _0x346973['y'], _0x3cd3e3 = _0x346973['z'];
                    _0x346973['x'] = _0x2b03aa + _0x45a247 * (_0x4f4a6f['x'] - _0x2b03aa), _0x346973['y'] = _0x4d7e35 + _0x45a247 * (_0x4f4a6f['y'] - _0x4d7e35), _0x346973['z'] = _0x3cd3e3 + _0x45a247 * (_0x4f4a6f['z'] - _0x3cd3e3);
                }
            } else {
                if (_0x5a5ac5) {
                    if (_0x1f50e8) {
                        var _0x50a089 = _0x3f7e01['defaultVal' + 'ue'];
                        _0x346973['x'] = _0x50a089['x'] + _0x4f4a6f['x'], _0x346973['y'] = _0x50a089['y'] + _0x4f4a6f['y'], _0x346973['z'] = _0x50a089['z'] + _0x4f4a6f['z'];
                    } else
                        _0x346973['x'] = _0x4f4a6f['x'], _0x346973['y'] = _0x4f4a6f['y'], _0x346973['z'] = _0x4f4a6f['z'];
                } else {
                    if (_0x50a089 = _0x3f7e01['defaultVal' + 'ue'], _0x1f50e8)
                        _0x346973['x'] = _0x50a089['x'] + _0x45a247 * _0x4f4a6f['x'], _0x346973['y'] = _0x50a089['y'] + _0x45a247 * _0x4f4a6f['y'], _0x346973['z'] = _0x50a089['z'] + _0x45a247 * _0x4f4a6f['z'];
                    else {
                        var _0x2e8302 = _0x50a089['x'], _0x22f973 = _0x50a089['y'], _0x18c5de = _0x50a089['z'];
                        _0x346973['x'] = _0x2e8302 + _0x45a247 * (_0x4f4a6f['x'] - _0x2e8302), _0x346973['y'] = _0x22f973 + _0x45a247 * (_0x4f4a6f['y'] - _0x22f973), _0x346973['z'] = _0x18c5de + _0x45a247 * (_0x4f4a6f['z'] - _0x18c5de);
                    }
                }
            }
        }
        ['_applyRota' + 'tion'](_0x37858b, _0x5ae572, _0x1fc722, _0xe2e816, _0x25aa11, _0x4719ea) {
            if (_0x37858b['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x5ae572) {
                    var _0x57cf7b = _0x40f618['_tempQuate' + 'rnion1'];
                    _0x89f66e['quaternion' + 'Weight'](_0x25aa11, _0x1fc722, _0x57cf7b), _0x57cf7b['normalize'](_0x57cf7b), _0x5958af['multiply'](_0x4719ea, _0x57cf7b, _0x4719ea);
                } else
                    _0x5958af['lerp'](_0x4719ea, _0x25aa11, _0x1fc722, _0x4719ea);
            } else {
                if (_0xe2e816) {
                    if (_0x5ae572) {
                        var _0x49e872 = _0x37858b['defaultVal' + 'ue'];
                        _0x5958af['multiply'](_0x49e872, _0x25aa11, _0x4719ea);
                    } else
                        _0x4719ea['x'] = _0x25aa11['x'], _0x4719ea['y'] = _0x25aa11['y'], _0x4719ea['z'] = _0x25aa11['z'], _0x4719ea['w'] = _0x25aa11['w'];
                } else
                    _0x49e872 = _0x37858b['defaultVal' + 'ue'], _0x5ae572 ? (_0x57cf7b = _0x40f618['_tempQuate' + 'rnion1'], _0x89f66e['quaternion' + 'Weight'](_0x25aa11, _0x1fc722, _0x57cf7b), _0x57cf7b['normalize'](_0x57cf7b), _0x5958af['multiply'](_0x49e872, _0x57cf7b, _0x4719ea)) : _0x5958af['lerp'](_0x49e872, _0x25aa11, _0x1fc722, _0x4719ea);
            }
        }
        ['_applyScal' + 'e'](_0x1a5ca8, _0x4f78c3, _0x2a43ff, _0x24c7d0, _0x1b3d24, _0x523f1c) {
            if (_0x1a5ca8['updateMark'] === this['_updateMar' + 'k']) {
                if (_0x4f78c3) {
                    var _0x2f4c99 = _0x40f618['_tempVecto' + 'r31'];
                    _0x89f66e['scaleWeigh' + 't'](_0x1b3d24, _0x2a43ff, _0x2f4c99), _0x523f1c['x'] = _0x523f1c['x'] * _0x2f4c99['x'], _0x523f1c['y'] = _0x523f1c['y'] * _0x2f4c99['y'], _0x523f1c['z'] = _0x523f1c['z'] * _0x2f4c99['z'];
                } else
                    _0x89f66e['scaleBlend'](_0x523f1c, _0x1b3d24, _0x2a43ff, _0x523f1c);
            } else {
                if (_0x24c7d0) {
                    if (_0x4f78c3) {
                        var _0x380472 = _0x1a5ca8['defaultVal' + 'ue'];
                        _0x523f1c['x'] = _0x380472['x'] * _0x1b3d24['x'], _0x523f1c['y'] = _0x380472['y'] * _0x1b3d24['y'], _0x523f1c['z'] = _0x380472['z'] * _0x1b3d24['z'];
                    } else
                        _0x523f1c['x'] = _0x1b3d24['x'], _0x523f1c['y'] = _0x1b3d24['y'], _0x523f1c['z'] = _0x1b3d24['z'];
                } else
                    _0x380472 = _0x1a5ca8['defaultVal' + 'ue'], _0x4f78c3 ? (_0x2f4c99 = _0x40f618['_tempVecto' + 'r31'], _0x89f66e['scaleWeigh' + 't'](_0x1b3d24, _0x2a43ff, _0x2f4c99), _0x523f1c['x'] = _0x380472['x'] * _0x2f4c99['x'], _0x523f1c['y'] = _0x380472['y'] * _0x2f4c99['y'], _0x523f1c['z'] = _0x380472['z'] * _0x2f4c99['z']) : _0x89f66e['scaleBlend'](_0x380472, _0x1b3d24, _0x2a43ff, _0x523f1c);
            }
        }
        ['_applyCros' + 'sData'](_0x3ed9a1, _0x46856b, _0x3ad53b, _0x17b885, _0x3f8e16, _0x227c06, _0x407817) {
            var _0x11d46f = _0x3ed9a1['propertyOw' + 'ner'];
            if (_0x11d46f) {
                switch (_0x3ed9a1['type']) {
                case 0x0:
                    for (var _0x431b00 = _0x3ed9a1['property'], _0x2b0a02 = _0x431b00['length'] - 0x1, _0x32b63a = 0x0; _0x32b63a < _0x2b0a02 && (_0x11d46f = _0x11d46f[_0x431b00[_0x32b63a]]); _0x32b63a++);
                    var _0x193bb4 = _0x3f8e16 + _0x407817 * (_0x227c06 - _0x3f8e16);
                    this['_applyFloa' + 't'](_0x11d46f, _0x431b00[_0x2b0a02], _0x3ed9a1, _0x46856b, _0x3ad53b, _0x17b885, _0x193bb4);
                    break;
                case 0x1:
                    var _0x1d070d = _0x11d46f['localPosit' + 'ion'], _0x2a7f6c = _0x40f618['_tempVecto' + 'r30'], _0x512fe8 = _0x3f8e16['x'], _0x4739a6 = _0x3f8e16['y'], _0x22d45e = _0x3f8e16['z'];
                    _0x2a7f6c['x'] = _0x512fe8 + _0x407817 * (_0x227c06['x'] - _0x512fe8), _0x2a7f6c['y'] = _0x4739a6 + _0x407817 * (_0x227c06['y'] - _0x4739a6), _0x2a7f6c['z'] = _0x22d45e + _0x407817 * (_0x227c06['z'] - _0x22d45e), this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x3ed9a1, _0x46856b, _0x3ad53b, _0x17b885, _0x2a7f6c, _0x1d070d), _0x11d46f['localPosit' + 'ion'] = _0x1d070d;
                    break;
                case 0x2:
                    var _0x2184b5 = _0x11d46f['localRotat' + 'ion'], _0x20f0cd = _0x40f618['_tempQuate' + 'rnion0'];
                    _0x5958af['lerp'](_0x3f8e16, _0x227c06, _0x407817, _0x20f0cd), this['_applyRota' + 'tion'](_0x3ed9a1, _0x46856b, _0x3ad53b, _0x17b885, _0x20f0cd, _0x2184b5), _0x11d46f['localRotat' + 'ion'] = _0x2184b5;
                    break;
                case 0x3:
                    var _0xd2ed22 = _0x11d46f['localScale'], _0x51b862 = _0x40f618['_tempVecto' + 'r30'];
                    _0x89f66e['scaleBlend'](_0x3f8e16, _0x227c06, _0x407817, _0x51b862), this['_applyScal' + 'e'](_0x3ed9a1, _0x46856b, _0x3ad53b, _0x17b885, _0x51b862, _0xd2ed22), _0x11d46f['localScale'] = _0xd2ed22;
                    break;
                case 0x4:
                    var _0x4e094a = _0x11d46f['localRotat' + 'ionEuler'], _0x22c888 = _0x40f618['_tempVecto' + 'r30'];
                    _0x512fe8 = _0x3f8e16['x'], _0x4739a6 = _0x3f8e16['y'], _0x22d45e = _0x3f8e16['z'], _0x22c888['x'] = _0x512fe8 + _0x407817 * (_0x227c06['x'] - _0x512fe8), _0x22c888['y'] = _0x4739a6 + _0x407817 * (_0x227c06['y'] - _0x4739a6), _0x22c888['z'] = _0x22d45e + _0x407817 * (_0x227c06['z'] - _0x22d45e), this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x3ed9a1, _0x46856b, _0x3ad53b, _0x17b885, _0x22c888, _0x4e094a), _0x11d46f['localRotat' + 'ionEuler'] = _0x4e094a;
                }
                _0x3ed9a1['updateMark'] = this['_updateMar' + 'k'];
            }
        }
        ['_setClipDa' + 'tasToNode'](_0x18eb3a, _0x25e2e5, _0x59289f, _0x3a65db) {
            for (var _0xb8f3b0 = _0x18eb3a['_realtimeD' + 'atas'], _0x2e1104 = _0x18eb3a['_clip']['_nodes'], _0x444af3 = _0x18eb3a['_nodeOwner' + 's'], _0x80f058 = 0x0, _0x4a9dad = _0x2e1104['count']; _0x80f058 < _0x4a9dad; _0x80f058++) {
                var _0x4797a3 = _0x444af3[_0x80f058];
                if (_0x4797a3) {
                    var _0x4a648b = _0x4797a3['propertyOw' + 'ner'];
                    if (_0x4a648b) {
                        switch (_0x4797a3['type']) {
                        case 0x0:
                            for (var _0x5dd8e0 = _0x4797a3['property'], _0x35c53a = _0x5dd8e0['length'] - 0x1, _0x33d9b4 = 0x0; _0x33d9b4 < _0x35c53a && (_0x4a648b = _0x4a648b[_0x5dd8e0[_0x33d9b4]]); _0x33d9b4++);
                            this['_applyFloa' + 't'](_0x4a648b, _0x5dd8e0[_0x35c53a], _0x4797a3, _0x25e2e5, _0x59289f, _0x3a65db, _0xb8f3b0[_0x80f058]);
                            break;
                        case 0x1:
                            var _0x4b3d30 = _0x4a648b['localPosit' + 'ion'];
                            this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x4797a3, _0x25e2e5, _0x59289f, _0x3a65db, _0xb8f3b0[_0x80f058], _0x4b3d30), _0x4a648b['localPosit' + 'ion'] = _0x4b3d30;
                            break;
                        case 0x2:
                            var _0x210917 = _0x4a648b['localRotat' + 'ion'];
                            this['_applyRota' + 'tion'](_0x4797a3, _0x25e2e5, _0x59289f, _0x3a65db, _0xb8f3b0[_0x80f058], _0x210917), _0x4a648b['localRotat' + 'ion'] = _0x210917;
                            break;
                        case 0x3:
                            var _0x5a1c19 = _0x4a648b['localScale'];
                            this['_applyScal' + 'e'](_0x4797a3, _0x25e2e5, _0x59289f, _0x3a65db, _0xb8f3b0[_0x80f058], _0x5a1c19), _0x4a648b['localScale'] = _0x5a1c19;
                            break;
                        case 0x4:
                            var _0x23e299 = _0x4a648b['localRotat' + 'ionEuler'];
                            this['_applyPosi' + 'tionAndRot' + 'ationEuler'](_0x4797a3, _0x25e2e5, _0x59289f, _0x3a65db, _0xb8f3b0[_0x80f058], _0x23e299), _0x4a648b['localRotat' + 'ionEuler'] = _0x23e299;
                        }
                        _0x4797a3['updateMark'] = this['_updateMar' + 'k'];
                    }
                }
            }
        }
        ['_setCrossC' + 'lipDatasTo' + 'Node'](_0x5b93fb, _0x637c68, _0x135701, _0x2d4d04, _0x5b8e1e) {
            for (var _0x22b174 = _0x5b93fb['_crossNode' + 'sOwners'], _0x301a16 = _0x5b93fb['_crossNode' + 'sOwnersCou' + 'nt'], _0x478701 = _0x5b93fb['blendingMo' + 'de'] !== _0x550df5['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x538941 = _0x5b93fb['defaultWei' + 'ght'], _0x3e8c1c = _0x135701['_realtimeD' + 'atas'], _0xa9b8ac = _0x5b93fb['_destCross' + 'ClipNodeIn' + 'dices'], _0x531e88 = _0x135701['_nodeOwner' + 's'], _0x59bba6 = _0x637c68['_realtimeD' + 'atas'], _0x371bdc = _0x5b93fb['_srcCrossC' + 'lipNodeInd' + 'ices'], _0x1492b4 = _0x637c68['_nodeOwner' + 's'], _0x79a7c0 = 0x0; _0x79a7c0 < _0x301a16; _0x79a7c0++) {
                var _0x30e96c = _0x22b174[_0x79a7c0];
                if (_0x30e96c) {
                    var _0x4ee915 = _0x371bdc[_0x79a7c0], _0x52723f = _0xa9b8ac[_0x79a7c0], _0x7fa4c = -0x1 !== _0x4ee915 ? _0x59bba6[_0x4ee915] : _0x531e88[_0x52723f]['defaultVal' + 'ue'], _0x49433f = -0x1 !== _0x52723f ? _0x3e8c1c[_0x52723f] : _0x1492b4[_0x4ee915]['defaultVal' + 'ue'];
                    this['_applyCros' + 'sData'](_0x30e96c, _0x478701, _0x538941, _0x5b8e1e, _0x7fa4c, _0x49433f, _0x2d4d04);
                }
            }
        }
        ['_setFixedC' + 'rossClipDa' + 'tasToNode'](_0x14dd03, _0x51504b, _0x3ac203, _0x1df9d1) {
            for (var _0x286f2e = _0x14dd03['_crossNode' + 'sOwners'], _0x28763e = _0x14dd03['_crossNode' + 'sOwnersCou' + 'nt'], _0x1360f0 = _0x14dd03['blendingMo' + 'de'] !== _0x550df5['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x2439df = _0x14dd03['defaultWei' + 'ght'], _0x5e695b = _0x51504b['_realtimeD' + 'atas'], _0x3bb5ef = _0x14dd03['_destCross' + 'ClipNodeIn' + 'dices'], _0xb33905 = 0x0; _0xb33905 < _0x28763e; _0xb33905++) {
                var _0x56840e = _0x286f2e[_0xb33905];
                if (_0x56840e) {
                    var _0x47a7ca = _0x3bb5ef[_0xb33905], _0x15b6ec = _0x56840e['crossFixed' + 'Value'], _0x418e0b = -0x1 !== _0x47a7ca ? _0x5e695b[_0x47a7ca] : _0x56840e['defaultVal' + 'ue'];
                    this['_applyCros' + 'sData'](_0x56840e, _0x1360f0, _0x2439df, _0x1df9d1, _0x15b6ec, _0x418e0b, _0x3ac203);
                }
            }
        }
        ['_revertDef' + 'aultKeyfra' + 'meNodes'](_0x6e16d) {
            for (var _0x176162 = _0x6e16d['_nodeOwner' + 's'], _0x54caf9 = 0x0, _0x3ec9c9 = _0x176162['length']; _0x54caf9 < _0x3ec9c9; _0x54caf9++) {
                var _0x429ad6 = _0x176162[_0x54caf9];
                if (_0x429ad6) {
                    var _0x286eae = _0x429ad6['propertyOw' + 'ner'];
                    if (_0x286eae)
                        switch (_0x429ad6['type']) {
                        case 0x0:
                            for (var _0x4c0979 = _0x429ad6['property'], _0x557d7c = _0x4c0979['length'] - 0x1, _0x515d9a = 0x0; _0x515d9a < _0x557d7c && (_0x286eae = _0x286eae[_0x4c0979[_0x515d9a]]); _0x515d9a++);
                            _0x286eae[_0x4c0979[_0x557d7c]] = _0x429ad6['defaultVal' + 'ue'];
                            break;
                        case 0x1:
                            var _0x3f5972 = _0x286eae['localPosit' + 'ion'], _0x16048f = _0x429ad6['defaultVal' + 'ue'];
                            _0x3f5972['x'] = _0x16048f['x'], _0x3f5972['y'] = _0x16048f['y'], _0x3f5972['z'] = _0x16048f['z'], _0x286eae['localPosit' + 'ion'] = _0x3f5972;
                            break;
                        case 0x2:
                            var _0x13c1b0 = _0x286eae['localRotat' + 'ion'], _0xde7e49 = _0x429ad6['defaultVal' + 'ue'];
                            _0x13c1b0['x'] = _0xde7e49['x'], _0x13c1b0['y'] = _0xde7e49['y'], _0x13c1b0['z'] = _0xde7e49['z'], _0x13c1b0['w'] = _0xde7e49['w'], _0x286eae['localRotat' + 'ion'] = _0x13c1b0;
                            break;
                        case 0x3:
                            var _0x3d6343 = _0x286eae['localScale'];
                            _0x16048f = _0x429ad6['defaultVal' + 'ue'], _0x3d6343['x'] = _0x16048f['x'], _0x3d6343['y'] = _0x16048f['y'], _0x3d6343['z'] = _0x16048f['z'], _0x286eae['localScale'] = _0x3d6343;
                            break;
                        case 0x4:
                            var _0x6f771d = _0x286eae['localRotat' + 'ionEuler'];
                            _0x16048f = _0x429ad6['defaultVal' + 'ue'], _0x6f771d['x'] = _0x16048f['x'], _0x6f771d['y'] = _0x16048f['y'], _0x6f771d['z'] = _0x16048f['z'], _0x286eae['localRotat' + 'ionEuler'] = _0x6f771d;
                            break;
                        default:
                            throw 'Animator:u' + 'nknown\x20typ' + 'e.';
                        }
                }
            }
        }
        ['_onAdded']() {
            var _0x971620 = this['owner']['_parent'];
            this['owner']['_setHierar' + 'chyAnimato' + 'r'](this, _0x971620 ? _0x971620['_hierarchy' + 'Animator'] : null), this['owner']['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](this, !0x0, []);
        }
        ['_onDestroy']() {
            for (var _0x536ddf = 0x0, _0xb5e598 = this['_controlle' + 'rLayers']['length']; _0x536ddf < _0xb5e598; _0x536ddf++)
                this['_controlle' + 'rLayers'][_0x536ddf]['_removeRef' + 'erence']();
            var _0x1f77bb = this['owner']['_parent'];
            this['owner']['_clearHier' + 'archyAnima' + 'tor'](this, _0x1f77bb ? _0x1f77bb['_hierarchy' + 'Animator'] : null);
        }
        ['_onEnable']() {
            this['owner']['_scene']['_animatorP' + 'ool']['add'](this);
            for (var _0x17478b = 0x0, _0x3b8df0 = this['_controlle' + 'rLayers']['length']; _0x17478b < _0x3b8df0; _0x17478b++) {
                if (this['_controlle' + 'rLayers'][_0x17478b]['playOnWake'])
                    this['getDefault' + 'State'](_0x17478b) && this['play'](null, _0x17478b, 0x0);
            }
        }
        ['_onDisable']() {
            this['owner']['_scene']['_animatorP' + 'ool']['remove'](this);
        }
        ['_handleSpr' + 'iteOwnersB' + 'ySprite'](_0x5d57f4, _0x478cab, _0xd9ba9f) {
            for (var _0x176476 = 0x0, _0x4e3e43 = this['_controlle' + 'rLayers']['length']; _0x176476 < _0x4e3e43; _0x176476++)
                for (var _0x27bc7f = this['_controlle' + 'rLayers'][_0x176476]['_states'], _0x1d0855 = 0x0, _0xef4650 = _0x27bc7f['length']; _0x1d0855 < _0xef4650; _0x1d0855++) {
                    var _0x4a6d2b = _0x27bc7f[_0x1d0855], _0x27edbb = _0x4a6d2b['_clip'], _0x11649b = _0x478cab['join']('/'), _0x505e80 = _0x27edbb['_nodesMap'][_0x11649b];
                    if (_0x505e80) {
                        for (var _0x24587c = _0x4a6d2b['_nodeOwner' + 's'], _0x26ab5a = 0x0, _0x2b8b26 = _0x505e80['length']; _0x26ab5a < _0x2b8b26; _0x26ab5a++)
                            _0x5d57f4 ? this['_addKeyfra' + 'meNodeOwne' + 'r'](_0x24587c, _0x505e80[_0x26ab5a], _0xd9ba9f) : this['_removeKey' + 'frameNodeO' + 'wner'](_0x24587c, _0x505e80[_0x26ab5a]);
                    }
                }
        }
        ['_parse'](_0x4c00a8) {
            var _0xe06679 = _0x4c00a8['avatar'];
            if (_0xe06679) {
                this['avatar'] = _0x33d6e0['Loader']['getRes'](_0xe06679['path']);
                var _0x1628d4 = _0xe06679['linkSprite' + 's'];
                this['_linkSprit' + 'es'] = _0x1628d4, this['_linkToSpr' + 'ites'](_0x1628d4);
            }
            _0x4c00a8['clipPaths'];
            for (var _0x5a955d = _0x4c00a8['playOnWake'], _0x466be8 = _0x4c00a8['layers'], _0x1e1e6a = 0x0; _0x1e1e6a < _0x466be8['length']; _0x1e1e6a++) {
                var _0x51981a = _0x466be8[_0x1e1e6a], _0x18fbf2 = new _0x550df5(_0x51981a['name']);
                _0x18fbf2['defaultWei' + 'ght'] = 0x0 === _0x1e1e6a ? 0x1 : _0x51981a['weight'];
                var _0x3ece92 = _0x51981a['blendingMo' + 'de'];
                _0x3ece92 && (_0x18fbf2['blendingMo' + 'de'] = _0x3ece92), this['addControl' + 'lerLayer'](_0x18fbf2);
                for (var _0x5a6d3a = _0x51981a['states'], _0xfcf81f = 0x0, _0xbcde1 = _0x5a6d3a['length']; _0xfcf81f < _0xbcde1; _0xfcf81f++) {
                    var _0x521bfb = _0x5a6d3a[_0xfcf81f], _0x42f72b = _0x521bfb['clipPath'];
                    if (_0x42f72b) {
                        var _0x112c6b, _0xbb4582 = _0x521bfb['name'];
                        if (_0x112c6b = _0x33d6e0['Loader']['getRes'](_0x42f72b)) {
                            var _0x462a4e = new _0x46070f();
                            _0x462a4e['name'] = _0xbb4582, _0x462a4e['clip'] = _0x112c6b, _0x18fbf2['addState'](_0x462a4e), 0x0 === _0xfcf81f && (this['getControl' + 'lerLayer'](_0x1e1e6a)['defaultSta' + 'te'] = _0x462a4e);
                        }
                    }
                }
                void 0x0 !== _0x5a955d && (_0x18fbf2['playOnWake'] = _0x5a955d);
            }
            var _0x3a5028 = _0x4c00a8['cullingMod' + 'e'];
            void 0x0 !== _0x3a5028 && (this['cullingMod' + 'e'] = _0x3a5028);
        }
        ['_update']() {
            var _0x20f8e5 = this['owner']['_scene']['timer'], _0xfa767d = _0x20f8e5['_delta'] / 0x3e8;
            if (0x0 !== this['_speed'] && 0x0 !== _0xfa767d) {
                var _0x2a46e3;
                if (this['cullingMod' + 'e'] === _0x40f618['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY']) {
                    _0x2a46e3 = !0x1;
                    for (var _0x2c8245 = 0x0, _0x57e9aa = this['_renderabl' + 'eSprites']['length']; _0x2c8245 < _0x57e9aa; _0x2c8245++)
                        if (this['_renderabl' + 'eSprites'][_0x2c8245]['_render']['_visible']) {
                            _0x2a46e3 = !0x0;
                            break;
                        }
                } else
                    _0x2a46e3 = !0x0;
                this['_updateMar' + 'k']++;
                var _0x315dc6 = _0x20f8e5['scale'];
                for (_0x2c8245 = 0x0, _0x57e9aa = this['_controlle' + 'rLayers']['length']; _0x2c8245 < _0x57e9aa; _0x2c8245++) {
                    var _0x5ad1df = this['_controlle' + 'rLayers'][_0x2c8245], _0x445e73 = _0x5ad1df['_playState' + 'Info'], _0x4d4654 = _0x5ad1df['_crossPlay' + 'StateInfo'];
                    switch (_0x566c62 = _0x5ad1df['blendingMo' + 'de'] !== _0x550df5['BLENDINGMO' + 'DE_OVERRID' + 'E'], _0x5ad1df['_playType']) {
                    case 0x0:
                        var _0x5687e0 = _0x445e73['_currentSt' + 'ate'], _0x3d64bd = _0x5687e0['_clip'], _0x3048f8 = this['_speed'] * _0x5687e0['speed'], _0x1ca095 = _0x445e73['_finish'];
                        if (_0x1ca095 || this['_updatePla' + 'yer'](_0x5687e0, _0x445e73, _0xfa767d * _0x3048f8, _0x3d64bd['islooping']), _0x2a46e3) {
                            var _0x566c62 = _0x5ad1df['blendingMo' + 'de'] !== _0x550df5['BLENDINGMO' + 'DE_OVERRID' + 'E'];
                            this['_updateCli' + 'pDatas'](_0x5687e0, _0x566c62, _0x445e73, _0x315dc6 * _0x3048f8), this['_setClipDa' + 'tasToNode'](_0x5687e0, _0x566c62, _0x5ad1df['defaultWei' + 'ght'], 0x0 === _0x2c8245), _0x1ca095 || this['_updateEve' + 'ntScript'](_0x5687e0, _0x445e73);
                        }
                        break;
                    case 0x1:
                        _0x3d64bd = (_0x5687e0 = _0x445e73['_currentSt' + 'ate'])['_clip'];
                        var _0x5ce16c = _0x5ad1df['_crossPlay' + 'State'], _0x30d116 = _0x5ce16c['_clip'], _0x25fbdd = _0x5ad1df['_crossDura' + 'tion'], _0x5a00d3 = _0x4d4654['_startPlay' + 'Time'], _0x4b8d49 = _0x30d116['_duration'] - _0x5a00d3, _0x36e74e = _0x25fbdd > _0x4b8d49 ? _0x4b8d49 / _0x25fbdd : 0x1, _0xba2b3d = this['_speed'] * _0x5ce16c['speed'];
                        this['_updatePla' + 'yer'](_0x5ce16c, _0x4d4654, _0xfa767d * _0x36e74e * _0xba2b3d, _0x30d116['islooping']);
                        var _0x3e208f = (_0x4d4654['_elapsedTi' + 'me'] - _0x5a00d3) / _0x36e74e / _0x25fbdd;
                        _0x3e208f >= 0x1 ? _0x2a46e3 && (this['_updateCli' + 'pDatas'](_0x5ce16c, _0x566c62, _0x4d4654, _0x315dc6 * _0xba2b3d), this['_setClipDa' + 'tasToNode'](_0x5ce16c, _0x566c62, _0x5ad1df['defaultWei' + 'ght'], 0x0 === _0x2c8245), _0x5ad1df['_playType'] = 0x0, _0x445e73['_currentSt' + 'ate'] = _0x5ce16c, _0x4d4654['_cloneTo'](_0x445e73)) : (_0x445e73['_finish'] || (_0x3048f8 = this['_speed'] * _0x5687e0['speed'], this['_updatePla' + 'yer'](_0x5687e0, _0x445e73, _0xfa767d * _0x3048f8, _0x3d64bd['islooping']), _0x2a46e3 && this['_updateCli' + 'pDatas'](_0x5687e0, _0x566c62, _0x445e73, _0x315dc6 * _0x3048f8)), _0x2a46e3 && (this['_updateCli' + 'pDatas'](_0x5ce16c, _0x566c62, _0x4d4654, _0x315dc6 * _0x36e74e * _0xba2b3d), this['_setCrossC' + 'lipDatasTo' + 'Node'](_0x5ad1df, _0x5687e0, _0x5ce16c, _0x3e208f, 0x0 === _0x2c8245))), _0x2a46e3 && (this['_updateEve' + 'ntScript'](_0x5687e0, _0x445e73), this['_updateEve' + 'ntScript'](_0x5ce16c, _0x4d4654));
                        break;
                    case 0x2:
                        _0x30d116 = (_0x5ce16c = _0x5ad1df['_crossPlay' + 'State'])['_clip'], _0x25fbdd = _0x5ad1df['_crossDura' + 'tion'], _0x5a00d3 = _0x4d4654['_startPlay' + 'Time'], _0x36e74e = _0x25fbdd > (_0x4b8d49 = _0x30d116['_duration'] - _0x5a00d3) ? _0x4b8d49 / _0x25fbdd : 0x1, _0xba2b3d = this['_speed'] * _0x5ce16c['speed'], this['_updatePla' + 'yer'](_0x5ce16c, _0x4d4654, _0xfa767d * _0x36e74e * _0xba2b3d, _0x30d116['islooping']), _0x2a46e3 && ((_0x3e208f = (_0x4d4654['_elapsedTi' + 'me'] - _0x5a00d3) / _0x36e74e / _0x25fbdd) >= 0x1 ? (this['_updateCli' + 'pDatas'](_0x5ce16c, _0x566c62, _0x4d4654, _0x315dc6 * _0xba2b3d), this['_setClipDa' + 'tasToNode'](_0x5ce16c, _0x566c62, 0x1, 0x0 === _0x2c8245), _0x5ad1df['_playType'] = 0x0, _0x445e73['_currentSt' + 'ate'] = _0x5ce16c, _0x4d4654['_cloneTo'](_0x445e73)) : (this['_updateCli' + 'pDatas'](_0x5ce16c, _0x566c62, _0x4d4654, _0x315dc6 * _0x36e74e * _0xba2b3d), this['_setFixedC' + 'rossClipDa' + 'tasToNode'](_0x5ad1df, _0x5ce16c, _0x3e208f, 0x0 === _0x2c8245)), this['_updateEve' + 'ntScript'](_0x5ce16c, _0x4d4654));
                    }
                }
                _0x2a46e3 && this['_avatar'] && (_0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_updateAni' + 'mationNode' + 'WorldMatix'](this['_animation' + 'NodeLocalP' + 'ositions'], this['_animation' + 'NodeLocalR' + 'otations'], this['_animation' + 'NodeLocalS' + 'cales'], this['_animation' + 'NodeWorldM' + 'atrixs'], this['_animation' + 'NodeParent' + 'Indices']), this['_updateAva' + 'tarNodesTo' + 'Sprite']());
            }
        }
        ['_cloneTo'](_0x418b0c) {
            var _0x284db5 = _0x418b0c;
            _0x284db5['avatar'] = this['avatar'], _0x284db5['cullingMod' + 'e'] = this['cullingMod' + 'e'];
            for (var _0x1acd86 = 0x0, _0x123fac = this['_controlle' + 'rLayers']['length']; _0x1acd86 < _0x123fac; _0x1acd86++) {
                var _0x2353c0 = this['_controlle' + 'rLayers'][_0x1acd86];
                _0x284db5['addControl' + 'lerLayer'](_0x2353c0['clone']());
                for (var _0x36e162 = _0x2353c0['_states'], _0x2cde69 = 0x0, _0x34a4b7 = _0x36e162['length']; _0x2cde69 < _0x34a4b7; _0x2cde69++) {
                    var _0xf8eedf = _0x36e162[_0x2cde69]['clone'](), _0xb714f9 = _0x284db5['getControl' + 'lerLayer'](_0x1acd86);
                    _0xb714f9['addState'](_0xf8eedf), 0x0 == _0x2cde69 && (_0xb714f9['defaultSta' + 'te'] = _0xf8eedf);
                }
            }
            _0x284db5['_linkSprit' + 'es'] = this['_linkSprit' + 'es'], _0x284db5['_linkToSpr' + 'ites'](this['_linkSprit' + 'es']);
        }
        ['getDefault' + 'State'](_0x5336a2 = 0x0) {
            return this['_controlle' + 'rLayers'][_0x5336a2]['defaultSta' + 'te'];
        }
        ['addState'](_0x3b2652, _0x3f98b2 = 0x0) {
            this['_controlle' + 'rLayers'][_0x3f98b2]['addState'](_0x3b2652), console['warn']('Animator:t' + 'his\x20functi' + 'on\x20is\x20disc' + 'ard,please' + '\x20use\x20anima' + 'torControl' + 'lerLayer.a' + 'ddState()\x20' + 'instead.');
        }
        ['removeStat' + 'e'](_0x1ad70f, _0x2141d3 = 0x0) {
            this['_controlle' + 'rLayers'][_0x2141d3]['removeStat' + 'e'](_0x1ad70f), console['warn']('Animator:t' + 'his\x20functi' + 'on\x20is\x20disc' + 'ard,please' + '\x20use\x20anima' + 'torControl' + 'lerLayer.r' + 'emoveState' + '()\x20instead' + '.');
        }
        ['addControl' + 'lerLayer'](_0x57e927) {
            this['_controlle' + 'rLayers']['push'](_0x57e927), _0x57e927['_animator'] = this, _0x57e927['_addRefere' + 'nce']();
            for (var _0x55f461 = _0x57e927['_states'], _0x14920d = 0x0, _0x34052f = _0x55f461['length']; _0x14920d < _0x34052f; _0x14920d++)
                this['_getOwners' + 'ByClip'](_0x55f461[_0x14920d]);
        }
        ['getControl' + 'lerLayer'](_0x1707f9 = 0x0) {
            return this['_controlle' + 'rLayers'][_0x1707f9];
        }
        ['play'](_0x492701 = null, _0x36111c = 0x0, _0x57fc3f = Number['NEGATIVE_I' + 'NFINITY']) {
            var _0xd53636 = this['_controlle' + 'rLayers'][_0x36111c];
            if (_0xd53636) {
                var _0x151d65 = _0xd53636['defaultSta' + 'te'];
                if (!_0x492701 && !_0x151d65)
                    throw new Error('Animator:m' + 'ust\x20have\x20d' + 'efault\x20cli' + 'p\x20value,pl' + 'ease\x20set\x20c' + 'lip\x20proper' + 'ty.');
                var _0x1515ce = _0xd53636['_playState' + 'Info'], _0x3dac78 = _0x1515ce['_currentSt' + 'ate'], _0x32a922 = _0x492701 ? _0xd53636['_statesMap'][_0x492701] : _0x151d65, _0x46d048 = _0x32a922['_clip']['_duration'];
                _0x3dac78 !== _0x32a922 ? (_0x57fc3f !== Number['NEGATIVE_I' + 'NFINITY'] ? _0x1515ce['_resetPlay' + 'State'](_0x46d048 * _0x57fc3f) : _0x1515ce['_resetPlay' + 'State'](0x0), null !== _0x3dac78 && _0x3dac78 !== _0x32a922 && this['_revertDef' + 'aultKeyfra' + 'meNodes'](_0x3dac78), _0xd53636['_playType'] = 0x0, _0x1515ce['_currentSt' + 'ate'] = _0x32a922) : _0x57fc3f !== Number['NEGATIVE_I' + 'NFINITY'] && (_0x1515ce['_resetPlay' + 'State'](_0x46d048 * _0x57fc3f), _0xd53636['_playType'] = 0x0);
                var _0x2a1061 = _0x32a922['_scripts'];
                if (_0x2a1061) {
                    for (var _0x1ae29f = 0x0, _0x26e059 = _0x2a1061['length']; _0x1ae29f < _0x26e059; _0x1ae29f++)
                        _0x2a1061[_0x1ae29f]['onStateEnt' + 'er']();
                }
            } else
                console['warn']('Invalid\x20la' + 'yerIndex\x20' + _0x36111c + '.');
        }
        ['crossFade'](_0xc0ebbf, _0x4c42d6, _0x1f669b = 0x0, _0x5bfdd0 = Number['NEGATIVE_I' + 'NFINITY']) {
            var _0x408859 = this['_controlle' + 'rLayers'][_0x1f669b];
            if (_0x408859) {
                var _0x2abf96 = _0x408859['_statesMap'][_0xc0ebbf];
                if (_0x2abf96) {
                    var _0xb55967 = _0x408859['_playType'];
                    if (-0x1 === _0xb55967)
                        return void this['play'](_0xc0ebbf, _0x1f669b, _0x5bfdd0);
                    var _0x436df9 = _0x408859['_crossPlay' + 'StateInfo'], _0x48203f = _0x408859['_crossNode' + 'sOwners'], _0x1ccb30 = _0x408859['_crossNode' + 'sOwnersInd' + 'icesMap'], _0x33469d = _0x408859['_playState' + 'Info']['_currentSt' + 'ate'], _0x4223ef = _0x2abf96['_nodeOwner' + 's'], _0x3deca7 = _0x408859['_destCross' + 'ClipNodeIn' + 'dices'], _0x124a66 = _0x2abf96['_clip'], _0x13fd98 = _0x124a66['_nodes'], _0x14d415 = _0x124a66['_nodesDic'];
                    switch (_0xb55967) {
                    case 0x0:
                        var _0x45465f = _0x33469d['_nodeOwner' + 's'], _0x214825 = _0x408859['_srcCrossC' + 'lipNodeInd' + 'ices'], _0x41b04a = _0x33469d['_clip'], _0x3e8fd7 = _0x41b04a['_nodes'], _0x597e35 = _0x41b04a['_nodesDic'];
                        _0x408859['_playType'] = 0x1;
                        for (var _0x19489d = ++_0x408859['_crossMark'], _0x9ed488 = _0x408859['_crossNode' + 'sOwnersCou' + 'nt'] = 0x0, _0x2e6083 = 0x0, _0x35d917 = _0x3e8fd7['count']; _0x2e6083 < _0x35d917; _0x2e6083++) {
                            var _0x117f46 = _0x3e8fd7['getNodeByI' + 'ndex'](_0x2e6083), _0x49542a = _0x117f46['_indexInLi' + 'st'], _0x2b8434 = _0x45465f[_0x49542a];
                            if (_0x2b8434) {
                                var _0x51bd27 = _0x117f46['fullPath'];
                                _0x214825[_0x9ed488] = _0x49542a;
                                var _0x1d4437 = _0x14d415[_0x51bd27];
                                _0x3deca7[_0x9ed488] = _0x1d4437 ? _0x1d4437['_indexInLi' + 'st'] : -0x1, _0x1ccb30[_0x51bd27] = _0x19489d, _0x48203f[_0x9ed488] = _0x2b8434, _0x9ed488++;
                            }
                        }
                        for (_0x2e6083 = 0x0, _0x35d917 = _0x13fd98['count']; _0x2e6083 < _0x35d917; _0x2e6083++) {
                            var _0x4290f0 = (_0x1d4437 = _0x13fd98['getNodeByI' + 'ndex'](_0x2e6083))['_indexInLi' + 'st'], _0x447f0d = _0x4223ef[_0x4290f0];
                            if (_0x447f0d) {
                                var _0x2b0151 = _0x1d4437['fullPath'];
                                _0x597e35[_0x2b0151] || (_0x214825[_0x9ed488] = -0x1, _0x3deca7[_0x9ed488] = _0x4290f0, _0x1ccb30[_0x2b0151] = _0x19489d, _0x48203f[_0x9ed488] = _0x447f0d, _0x9ed488++);
                            }
                        }
                        break;
                    case 0x1:
                    case 0x2:
                        for (_0x408859['_playType'] = 0x2, _0x2e6083 = 0x0, _0x35d917 = _0x48203f['length']; _0x2e6083 < _0x35d917; _0x2e6083++) {
                            var _0x245d10 = _0x48203f[_0x2e6083];
                            _0x245d10['saveCrossF' + 'ixedValue'](), _0x1d4437 = _0x14d415[_0x245d10['fullPath']], _0x3deca7[_0x2e6083] = _0x1d4437 ? _0x1d4437['_indexInLi' + 'st'] : -0x1;
                        }
                        for (_0x9ed488 = _0x408859['_crossNode' + 'sOwnersCou' + 'nt'], _0x19489d = _0x408859['_crossMark'], _0x2e6083 = 0x0, _0x35d917 = _0x13fd98['count']; _0x2e6083 < _0x35d917; _0x2e6083++)
                            (_0x447f0d = _0x4223ef[_0x4290f0 = (_0x1d4437 = _0x13fd98['getNodeByI' + 'ndex'](_0x2e6083))['_indexInLi' + 'st']]) && _0x1ccb30[_0x2b0151 = _0x1d4437['fullPath']] !== _0x19489d && (_0x3deca7[_0x9ed488] = _0x4290f0, _0x1ccb30[_0x2b0151] = _0x19489d, _0x245d10 = _0x4223ef[_0x4290f0], _0x48203f[_0x9ed488] = _0x245d10, _0x245d10['saveCrossF' + 'ixedValue'](), _0x9ed488++);
                    }
                    _0x408859['_crossNode' + 'sOwnersCou' + 'nt'] = _0x9ed488, _0x408859['_crossPlay' + 'State'] = _0x2abf96, _0x408859['_crossDura' + 'tion'] = _0x33469d['_clip']['_duration'] * _0x4c42d6, _0x5bfdd0 !== Number['NEGATIVE_I' + 'NFINITY'] ? _0x436df9['_resetPlay' + 'State'](_0x124a66['_duration'] * _0x5bfdd0) : _0x436df9['_resetPlay' + 'State'](0x0);
                    var _0x419b2b = _0x2abf96['_scripts'];
                    if (_0x419b2b) {
                        for (_0x2e6083 = 0x0, _0x35d917 = _0x419b2b['length']; _0x2e6083 < _0x35d917; _0x2e6083++)
                            _0x419b2b[_0x2e6083]['onStateEnt' + 'er']();
                    }
                } else
                    console['warn']('Invalid\x20na' + 'me\x20' + _0x1f669b + '.');
            } else
                console['warn']('Invalid\x20la' + 'yerIndex\x20' + _0x1f669b + '.');
        }
        get ['avatar']() {
            return this['_avatar'];
        }
        set ['avatar'](_0x26ea60) {
            if (this['_avatar'] !== _0x26ea60) {
                if (this['_avatar'] = _0x26ea60, _0x26ea60)
                    this['_getAvatar' + 'OwnersAndI' + 'nitDatasAs' + 'ync'](), this['owner']['_changeHie' + 'rarchyAnim' + 'atorAvatar'](this, _0x26ea60);
                else {
                    var _0x74ff39 = this['owner']['_parent'];
                    this['owner']['_changeHie' + 'rarchyAnim' + 'atorAvatar'](this, _0x74ff39 ? _0x74ff39['_hierarchy' + 'Animator']['_avatar'] : null);
                }
            }
        }
        ['_getAvatar' + 'OwnersAndI' + 'nitDatasAs' + 'ync']() {
            for (var _0x16b3df = 0x0, _0x38d60c = this['_controlle' + 'rLayers']['length']; _0x16b3df < _0x38d60c; _0x16b3df++)
                for (var _0x480fe3 = this['_controlle' + 'rLayers'][_0x16b3df]['_states'], _0x3b0a28 = 0x0, _0x221859 = _0x480fe3['length']; _0x3b0a28 < _0x221859; _0x3b0a28++)
                    this['_getOwners' + 'ByClip'](_0x480fe3[_0x3b0a28]);
            for (var _0x1528f3 in (this['_avatar']['_cloneData' + 'sToAnimato' + 'r'](this), this['_linkAvata' + 'rSpritesDa' + 'ta'])) {
                var _0x2d8c6f = this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x1528f3];
                if (_0x2d8c6f) {
                    for (var _0x2f160b = 0x0, _0xe1a7a0 = _0x2d8c6f['length']; _0x2f160b < _0xe1a7a0; _0x2f160b++)
                        this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x2d8c6f[_0x2f160b], _0x1528f3, !0x0);
                }
            }
        }
        ['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x8a83c4, _0x3e463d, _0x54156a) {
            if (this['_avatar']) {
                var _0x8fc8c2 = this['_avatarNod' + 'eMap'][_0x3e463d];
                if (_0x8fc8c2) {
                    if (_0x54156a) {
                        _0x8a83c4['_transform']['_dummy'] = _0x8fc8c2['transform'], this['_linkAvata' + 'rSprites']['push'](_0x8a83c4);
                        var _0x43191e = _0x8fc8c2['transform'], _0x3e92f3 = _0x8a83c4['transform'];
                        if (!_0x3e92f3['owner']['isStatic'] && _0x43191e) {
                            var _0x3ed37e = _0x3e92f3['worldMatri' + 'x'], _0x234855 = this['owner']['_transform']['_parent'];
                            if (_0x234855)
                                _0x89f66e['matrix4x4M' + 'ultiplyMFM'](_0x234855['worldMatri' + 'x'], _0x43191e['getWorldMa' + 'trix'](), _0x3ed37e);
                            else {
                                for (var _0x2a25dc = _0x3ed37e['elements'], _0x5802d7 = _0x43191e['getWorldMa' + 'trix'](), _0x4a4efd = 0x0; _0x4a4efd < 0x10; _0x4a4efd++)
                                    _0x2a25dc[_0x4a4efd] = _0x5802d7[_0x4a4efd];
                            }
                            _0x3e92f3['worldMatri' + 'x'] = _0x3ed37e;
                        }
                    } else
                        _0x8a83c4['_transform']['_dummy'] = null, this['_linkAvata' + 'rSprites']['splice'](this['_linkAvata' + 'rSprites']['indexOf'](_0x8a83c4), 0x1);
                }
            }
        }
        ['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0xe29c2d, _0x4f827d, _0x108b49) {
            var _0x78e1e = this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x4f827d];
            if (_0x108b49)
                _0x78e1e || (this['_linkAvata' + 'rSpritesDa' + 'ta'][_0x4f827d] = _0x78e1e = []), _0x78e1e['push'](_0xe29c2d);
            else {
                var _0x1e5598 = _0x78e1e['indexOf'](_0xe29c2d);
                _0x78e1e['splice'](_0x1e5598, 0x1);
            }
        }
        ['_updateAva' + 'tarNodesTo' + 'Sprite']() {
            for (var _0x3f80d6 = 0x0, _0x122bff = this['_linkAvata' + 'rSprites']['length']; _0x3f80d6 < _0x122bff; _0x3f80d6++) {
                var _0x582573 = this['_linkAvata' + 'rSprites'][_0x3f80d6], _0x51a0f2 = _0x582573['transform']['_dummy'], _0x526890 = _0x582573['transform'];
                if (!_0x526890['owner']['isStatic'] && _0x51a0f2) {
                    var _0x4a9dc1 = _0x526890['worldMatri' + 'x'], _0x410e60 = this['owner']['_transform'];
                    _0x89f66e['matrix4x4M' + 'ultiplyMFM'](_0x410e60['worldMatri' + 'x'], _0x51a0f2['getWorldMa' + 'trix'](), _0x4a9dc1), _0x526890['worldMatri' + 'x'] = _0x4a9dc1;
                }
            }
        }
        ['linkSprite' + '3DToAvatar' + 'Node'](_0xf4a8e8, _0x45e1ec) {
            return this['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x45e1ec, _0xf4a8e8, !0x0), this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x45e1ec, _0xf4a8e8, !0x0), !0x0;
        }
        ['unLinkSpri' + 'te3DToAvat' + 'arNode'](_0x4c7af4) {
            if (_0x4c7af4['_hierarchy' + 'Animator'] === this) {
                var _0x4381e9 = _0x4c7af4['transform']['_dummy'];
                if (_0x4381e9) {
                    var _0x4cb3d8 = _0x4381e9['_owner']['name'];
                    return this['_isLinkSpr' + 'iteToAnima' + 'tionNodeDa' + 'ta'](_0x4c7af4, _0x4cb3d8, !0x1), this['_isLinkSpr' + 'iteToAnima' + 'tionNode'](_0x4c7af4, _0x4cb3d8, !0x1), !0x0;
                }
                return !0x1;
            }
            throw 'Animator:s' + 'prite3D\x20mu' + 'st\x20belong\x20' + 'to\x20this\x20An' + 'imator';
        }
        ['getCurrent' + 'AnimatorPl' + 'ayState'](_0x4524bb = 0x0) {
            return this['_controlle' + 'rLayers'][_0x4524bb]['_playState' + 'Info'];
        }
        ['_updateAni' + 'mationNode' + 'WorldMatix'](_0x1f55f5, _0x3201b6, _0x5dd27a, _0x3b1e1f, _0x1db308) {
            _0x33d6e0['LayaGL']['instance']['updateAnim' + 'ationNodeW' + 'orldMatix'](_0x1f55f5, _0x3201b6, _0x5dd27a, _0x1db308, _0x3b1e1f);
        }
    }
    _0x40f618['_tempVecto' + 'r30'] = new _0x4795b3(), _0x40f618['_tempVecto' + 'r31'] = new _0x4795b3(), _0x40f618['_tempQuate' + 'rnion0'] = new _0x5958af(), _0x40f618['_tempQuate' + 'rnion1'] = new _0x5958af(), _0x40f618['CULLINGMOD' + 'E_ALWAYSAN' + 'IMATE'] = 0x0, _0x40f618['CULLINGMOD' + 'E_CULLCOMP' + 'LETELY'] = 0x2;
    class _0x4d33e1 {
        constructor() {
            this['source'] = null, this['destinatio' + 'n'] = null, this['camera'] = null, this['compositeS' + 'haderData'] = null, this['command'] = null, this['deferredRe' + 'leaseTextu' + 'res'] = [];
        }
    }
    class _0x311bc2 {
        constructor() {
            this['invertY'] = !0x1;
        }
    }
    _0x311bc2['_instance'] = new _0x311bc2();
    class _0x3f7a1d extends _0x33d6e0['BaseTextur' + 'e'] {
        constructor(_0x323051, _0x4db229, _0x2dadd4 = _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8'], _0x31239b = _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']) {
            super(_0x2dadd4, !0x1), this['_inPool'] = !0x1, this['_isCameraT' + 'arget'] = !0x1, this['_glTexture' + 'Type'] = _0x33d6e0['LayaGL']['instance']['TEXTURE_2D'], this['_width'] = _0x323051, this['_height'] = _0x4db229, this['_depthSten' + 'cilFormat'] = _0x31239b, this['_create'](_0x323051, _0x4db229);
        }
        static get ['currentAct' + 'ive']() {
            return _0x3f7a1d['_currentAc' + 'tive'];
        }
        static ['createFrom' + 'Pool'](_0x552d38, _0x226fee, _0x300046 = _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8'], _0x535ae0 = _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16'], _0x1bfab7 = _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_BILINEAR']) {
            for (var _0x149117, _0x5de691 = 0x0, _0x1a2db9 = _0x3f7a1d['_pool']['length']; _0x5de691 < _0x1a2db9; _0x5de691++)
                if ((_0x149117 = _0x3f7a1d['_pool'][_0x5de691])['_width'] == _0x552d38 && _0x149117['_height'] == _0x226fee && _0x149117['_format'] == _0x300046 && _0x149117['_depthSten' + 'cilFormat'] == _0x535ae0 && _0x149117['_filterMod' + 'e'] == _0x1bfab7) {
                    _0x149117['_inPool'] = !0x1;
                    var _0x297af3 = _0x3f7a1d['_pool'][_0x1a2db9 - 0x1];
                    return _0x3f7a1d['_pool'][_0x5de691] = _0x297af3, _0x3f7a1d['_pool']['length'] -= 0x1, _0x149117;
                }
            return (_0x149117 = new _0x3f7a1d(_0x552d38, _0x226fee, _0x300046, _0x535ae0))['filterMode'] = _0x1bfab7, _0x149117['lock'] = !0x0, _0x149117;
        }
        static ['recoverToP' + 'ool'](_0x1845a8) {
            _0x1845a8['_inPool'] || (_0x3f7a1d['_pool']['push'](_0x1845a8), _0x1845a8['_inPool'] = !0x0);
        }
        get ['depthStenc' + 'ilFormat']() {
            return this['_depthSten' + 'cilFormat'];
        }
        get ['defaulteTe' + 'xture']() {
            return _0x33d6e0['Texture2D']['grayTextur' + 'e'];
        }
        ['_texImage2' + 'D'](_0x5d30ab, _0x11983d, _0x2f5dbd, _0x11632a) {
            switch (this['_format']) {
            case _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8']:
                _0x5d30ab['texImage2D'](_0x11983d, 0x0, _0x5d30ab['RGB'], _0x2f5dbd, _0x11632a, 0x0, _0x5d30ab['RGB'], _0x5d30ab['UNSIGNED_B' + 'YTE'], null);
                break;
            case _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8A8']:
                _0x5d30ab['texImage2D'](_0x11983d, 0x0, _0x5d30ab['RGBA'], _0x2f5dbd, _0x11632a, 0x0, _0x5d30ab['RGBA'], _0x5d30ab['UNSIGNED_B' + 'YTE'], null);
                break;
            case _0x33d6e0['RenderText' + 'ureFormat']['Alpha8']:
                _0x5d30ab['texImage2D'](_0x11983d, 0x0, _0x5d30ab['ALPHA'], _0x2f5dbd, _0x11632a, 0x0, _0x5d30ab['ALPHA'], _0x5d30ab['UNSIGNED_B' + 'YTE'], null);
                break;
            case _0x33d6e0['RenderText' + 'ureFormat']['R16G16B16A' + '16']:
                _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] ? _0x5d30ab['texImage2D'](this['_glTexture' + 'Type'], 0x0, _0x5d30ab['RGBA16F'], _0x2f5dbd, _0x11632a, 0x0, _0x5d30ab['RGBA'], _0x5d30ab['HALF_FLOAT'], null) : _0x5d30ab['texImage2D'](this['_glTexture' + 'Type'], 0x0, _0x5d30ab['RGBA'], _0x2f5dbd, _0x11632a, 0x0, _0x5d30ab['RGBA'], _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_oesTextur' + 'eHalfFloat']['HALF_FLOAT' + '_OES'], null);
            }
        }
        ['_create'](_0x2241f3, _0x2dc5c1) {
            var _0x26e67c = _0x33d6e0['LayaGL']['instance'];
            if (this['_frameBuff' + 'er'] = _0x26e67c['createFram' + 'ebuffer'](), _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x26e67c, this['_glTexture' + 'Type'], this['_glTexture']), this['_texImage2' + 'D'](_0x26e67c, this['_glTexture' + 'Type'], _0x2241f3, _0x2dc5c1), this['_setGPUMem' + 'ory'](_0x2241f3 * _0x2dc5c1 * 0x4), _0x26e67c['bindFrameb' + 'uffer'](_0x26e67c['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x26e67c['framebuffe' + 'rTexture2D'](_0x26e67c['FRAMEBUFFE' + 'R'], _0x26e67c['COLOR_ATTA' + 'CHMENT0'], _0x26e67c['TEXTURE_2D'], this['_glTexture'], 0x0), this['_depthSten' + 'cilFormat'] !== _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE'])
                switch (this['_depthSten' + 'cilBuffer'] = _0x26e67c['createRend' + 'erbuffer'](), _0x26e67c['bindRender' + 'buffer'](_0x26e67c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']), this['_depthSten' + 'cilFormat']) {
                case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                    _0x26e67c['renderbuff' + 'erStorage'](_0x26e67c['RENDERBUFF' + 'ER'], _0x26e67c['DEPTH_COMP' + 'ONENT16'], _0x2241f3, _0x2dc5c1), _0x26e67c['framebuffe' + 'rRenderbuf' + 'fer'](_0x26e67c['FRAMEBUFFE' + 'R'], _0x26e67c['DEPTH_ATTA' + 'CHMENT'], _0x26e67c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                    break;
                case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                    _0x26e67c['renderbuff' + 'erStorage'](_0x26e67c['RENDERBUFF' + 'ER'], _0x26e67c['STENCIL_IN' + 'DEX8'], _0x2241f3, _0x2dc5c1), _0x26e67c['framebuffe' + 'rRenderbuf' + 'fer'](_0x26e67c['FRAMEBUFFE' + 'R'], _0x26e67c['STENCIL_AT' + 'TACHMENT'], _0x26e67c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                    break;
                case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_16_8']:
                    _0x26e67c['renderbuff' + 'erStorage'](_0x26e67c['RENDERBUFF' + 'ER'], _0x26e67c['DEPTH_STEN' + 'CIL'], _0x2241f3, _0x2dc5c1), _0x26e67c['framebuffe' + 'rRenderbuf' + 'fer'](_0x26e67c['FRAMEBUFFE' + 'R'], _0x26e67c['DEPTH_STEN' + 'CIL_ATTACH' + 'MENT'], _0x26e67c['RENDERBUFF' + 'ER'], this['_depthSten' + 'cilBuffer']);
                    break;
                default:
                    throw 'RenderText' + 'ure:\x20unkon' + 'w\x20depth\x20fo' + 'rmat.';
                }
            _0x26e67c['bindFrameb' + 'uffer'](_0x26e67c['FRAMEBUFFE' + 'R'], null), _0x26e67c['bindRender' + 'buffer'](_0x26e67c['RENDERBUFF' + 'ER'], null), this['_setWarpMo' + 'de'](_0x26e67c['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x26e67c['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_setAnisot' + 'ropy'](this['_anisoLeve' + 'l']), this['_readyed'] = !0x0, this['_activeRes' + 'ource']();
        }
        ['_start']() {
            var _0x2f447d = _0x33d6e0['LayaGL']['instance'];
            _0x2f447d['bindFrameb' + 'uffer'](_0x2f447d['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x3f7a1d['_currentAc' + 'tive'] = this, this['_isCameraT' + 'arget'] && (_0x311bc2['_instance']['invertY'] = !0x0), this['_readyed'] = !0x1;
        }
        ['_end']() {
            var _0x37bb8d = _0x33d6e0['LayaGL']['instance'];
            _0x37bb8d['bindFrameb' + 'uffer'](_0x37bb8d['FRAMEBUFFE' + 'R'], null), _0x3f7a1d['_currentAc' + 'tive'] = null, this['_isCameraT' + 'arget'] && (_0x311bc2['_instance']['invertY'] = !0x1), this['_readyed'] = !0x0;
        }
        ['getData'](_0x4e0d07, _0x4ab3bc, _0x43a631, _0x79c5a3, _0x46d4ea) {
            if (_0x33d6e0['Render']['isConchApp'] && 0x2 == window['conchConfi' + 'g']['threadMode'])
                throw 'native\x202\x20t' + 'hread\x20mode' + '\x20use\x20getDa' + 'taAsync';
            var _0x4167c7 = _0x33d6e0['LayaGL']['instance'];
            return _0x4167c7['bindFrameb' + 'uffer'](_0x4167c7['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x4167c7['checkFrame' + 'bufferStat' + 'us'](_0x4167c7['FRAMEBUFFE' + 'R']) === _0x4167c7['FRAMEBUFFE' + 'R_COMPLETE'] ? (_0x4167c7['readPixels'](_0x4e0d07, _0x4ab3bc, _0x43a631, _0x79c5a3, _0x4167c7['RGBA'], _0x4167c7['UNSIGNED_B' + 'YTE'], _0x46d4ea), _0x4167c7['bindFrameb' + 'uffer'](_0x4167c7['FRAMEBUFFE' + 'R'], null), _0x46d4ea) : (_0x4167c7['bindFrameb' + 'uffer'](_0x4167c7['FRAMEBUFFE' + 'R'], null), null);
        }
        ['getDataAsy' + 'nc'](_0x99f73a, _0x4c8bb2, _0x590ba9, _0x21a2cc, _0x25e2fc) {
            var _0x46aac3 = _0x33d6e0['LayaGL']['instance'];
            _0x46aac3['bindFrameb' + 'uffer'](_0x46aac3['FRAMEBUFFE' + 'R'], this['_frameBuff' + 'er']), _0x46aac3['readPixels' + 'Async'](_0x99f73a, _0x4c8bb2, _0x590ba9, _0x21a2cc, _0x46aac3['RGBA'], _0x46aac3['UNSIGNED_B' + 'YTE'], function (_0x220d5d) {
                _0x25e2fc(new Uint8Array(_0x220d5d));
            }), _0x46aac3['bindFrameb' + 'uffer'](_0x46aac3['FRAMEBUFFE' + 'R'], null);
        }
        ['_disposeRe' + 'source']() {
            if (this['_frameBuff' + 'er']) {
                var _0x5eac62 = _0x33d6e0['LayaGL']['instance'];
                _0x5eac62['deleteText' + 'ure'](this['_glTexture']), _0x5eac62['deleteFram' + 'ebuffer'](this['_frameBuff' + 'er']), _0x5eac62['deleteRend' + 'erbuffer'](this['_depthSten' + 'cilBuffer']), this['_glTexture'] = null, this['_frameBuff' + 'er'] = null, this['_depthSten' + 'cilBuffer'] = null, this['_setGPUMem' + 'ory'](0x0);
            }
        }
    }
    _0x3f7a1d['_pool'] = [];
    class _0x5f373b {
        constructor() {
            this['_mask'] = [], this['_length'] = 0x0;
        }
        ['_intersect' + 'ionDefineD' + 'atas'](_0x560f99) {
            for (var _0x19d9d1 = _0x560f99['_mask'], _0x301b8a = this['_mask'], _0x39ba0a = this['_length'] - 0x1; _0x39ba0a >= 0x0; _0x39ba0a--) {
                var _0x3f4a9e = _0x301b8a[_0x39ba0a] & _0x19d9d1[_0x39ba0a];
                0x0 == _0x3f4a9e && _0x39ba0a == this['_length'] - 0x1 ? this['_length']-- : _0x301b8a[_0x39ba0a] = _0x3f4a9e;
            }
        }
        ['add'](_0x2dbd01) {
            var _0x1a31e4 = _0x2dbd01['_index'], _0x5bac05 = _0x1a31e4 + 0x1, _0x5e1cee = this['_mask'], _0x2c1961 = _0x5e1cee['length'];
            if (_0x2c1961 < _0x5bac05) {
                for (_0x5e1cee['length'] = _0x5bac05; _0x2c1961 < _0x1a31e4; _0x2c1961++)
                    _0x5e1cee[_0x2c1961] = 0x0;
                _0x5e1cee[_0x1a31e4] = _0x2dbd01['_value'], this['_length'] = _0x5bac05;
            } else
                _0x5bac05 > this['_length'] ? (_0x5e1cee[_0x1a31e4] = _0x2dbd01['_value'], this['_length'] = _0x5bac05) : _0x5e1cee[_0x1a31e4] |= _0x2dbd01['_value'];
        }
        ['remove'](_0x48ccdf) {
            var _0x53879b = _0x48ccdf['_index'], _0x18ff57 = this['_mask'], _0x5d3af2 = this['_length'] - 0x1;
            if (!(_0x53879b > _0x5d3af2)) {
                var _0x10678a = _0x18ff57[_0x53879b] & ~_0x48ccdf['_value'];
                _0x53879b == _0x5d3af2 && 0x0 === _0x10678a ? this['_length']-- : _0x18ff57[_0x53879b] = _0x10678a;
            }
        }
        ['addDefineD' + 'atas'](_0x18d2c1) {
            var _0x345407 = _0x18d2c1['_mask'], _0x4bfdb1 = _0x18d2c1['_length'], _0x51351f = this['_mask'], _0x6656ea = _0x51351f['length'];
            if (_0x6656ea < _0x4bfdb1) {
                _0x51351f['length'] = _0x4bfdb1;
                for (var _0x22d67c = 0x0; _0x22d67c < _0x6656ea; _0x22d67c++)
                    _0x51351f[_0x22d67c] |= _0x345407[_0x22d67c];
                for (; _0x6656ea < _0x4bfdb1; _0x6656ea++)
                    _0x51351f[_0x6656ea] = _0x345407[_0x6656ea];
                this['_length'] = _0x4bfdb1;
            } else {
                for (_0x22d67c = 0x0; _0x22d67c < _0x4bfdb1; _0x22d67c++)
                    _0x51351f[_0x22d67c] |= _0x345407[_0x22d67c];
                this['_length'] = Math['max'](this['_length'], _0x4bfdb1);
            }
        }
        ['removeDefi' + 'neDatas'](_0x4d0eb2) {
            for (var _0x56e0d9 = _0x4d0eb2['_mask'], _0x339d85 = this['_mask'], _0x5241f0 = this['_length'] - 0x1, _0xad9b4a = _0x4d0eb2['_length'] - 0x1; _0xad9b4a >= 0x0; _0xad9b4a--)
                if (!(_0xad9b4a > _0x5241f0)) {
                    var _0x759057 = _0x339d85[_0xad9b4a] & ~_0x56e0d9[_0xad9b4a];
                    _0xad9b4a == _0x5241f0 && 0x0 === _0x759057 ? (_0x5241f0--, this['_length']--) : _0x339d85[_0xad9b4a] = _0x759057;
                }
        }
        ['has'](_0x4062a9) {
            var _0x324788 = _0x4062a9['_index'];
            return !(_0x324788 >= this['_length']) && 0x0 != (this['_mask'][_0x324788] & _0x4062a9['_value']);
        }
        ['clear']() {
            this['_length'] = 0x0;
        }
        ['cloneTo'](_0x550066) {
            var _0x1ce747 = _0x550066, _0x7979df = _0x1ce747['_mask'], _0x238b15 = this['_mask'], _0x3a6953 = this['_length'];
            _0x7979df['length'] = _0x3a6953;
            for (var _0x1cbffe = 0x0; _0x1cbffe < _0x3a6953; _0x1cbffe++)
                _0x7979df[_0x1cbffe] = _0x238b15[_0x1cbffe];
            _0x1ce747['_length'] = _0x3a6953;
        }
        ['clone']() {
            var _0x270189 = new _0x5f373b();
            return this['cloneTo'](_0x270189), _0x270189;
        }
    }
    class _0x29a1b7 {
        constructor(_0x3a91cd, _0x3ad15b) {
            this['_index'] = _0x3a91cd, this['_value'] = _0x3ad15b;
        }
    }
    class _0x268bb3 {
        constructor(_0xa80256, _0x480267, _0x19ed69, _0x36bd20) {
            this['_subShader' + 'Index'] = 0x0, this['_passIndex'] = 0x0, this['setValue'](_0xa80256, _0x480267, _0x19ed69, _0x36bd20);
        }
        get ['shader']() {
            return this['_shader'];
        }
        get ['subShaderI' + 'ndex']() {
            return this['_subShader' + 'Index'];
        }
        get ['passIndex']() {
            return this['_passIndex'];
        }
        get ['defineName' + 's']() {
            return this['_defineNam' + 'es'];
        }
        ['setValue'](_0x1aea6d, _0x45d005, _0x2c44be, _0x9d0294) {
            if (!_0x1aea6d)
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20can\x27t' + '\x20be\x20null.';
            var _0xeda9ee = _0x1aea6d['getSubShad' + 'erAt'](_0x45d005);
            if (!_0xeda9ee)
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20don\x27t' + '\x20have\x20subS' + 'haderIndex' + '\x20of\x20' + _0x45d005 + '.';
            var _0x4d7904 = _0xeda9ee['_passes'][_0x2c44be];
            if (!_0x4d7904)
                throw 'ShaderVari' + 'antInfo:Sh' + 'ader\x20don\x27t' + '\x20have\x20pass' + 'Index\x20of\x20' + _0x2c44be + '.';
            for (var _0x2c2bcf = _0x4d7904['_validDefi' + 'ne'], _0x4e24ff = 0x0, _0x1d32f1 = _0x9d0294['length']; _0x4e24ff < _0x1d32f1; _0x4e24ff++) {
                var _0x11db7c = _0x9d0294[_0x4e24ff];
                if (!_0x2c2bcf['has'](_0x334864['Shader3D']['getDefineB' + 'yName'](_0x11db7c)))
                    throw 'ShaderVari' + 'antInfo:In' + 'valid\x20defi' + 'neName\x20' + _0x11db7c + '\x20in\x20' + _0x1aea6d['_name'] + ('\x20subShader' + 'Index\x20of\x20') + _0x45d005 + ('\x20passIndex' + '\x20of\x20') + _0x2c44be + '.';
            }
            this['_shader'] = _0x1aea6d, this['_subShader' + 'Index'] = _0x45d005, this['_passIndex'] = _0x2c44be, this['_defineNam' + 'es'] = _0x9d0294;
        }
        ['equal'](_0x433048) {
            if (this['_shader'] !== _0x433048['_shader'] || this['_subShader' + 'Index'] !== _0x433048['_subShader' + 'Index'] || this['_passIndex'] !== _0x433048['_passIndex'])
                return !0x1;
            var _0x3676ba = this['_defineNam' + 'es'], _0x3c6347 = _0x433048['_defineNam' + 'es'];
            if (_0x3676ba['length'] !== _0x3c6347['length'])
                return !0x1;
            for (var _0x1eddd0 = 0x0, _0x4888bd = this['_defineNam' + 'es']['length']; _0x1eddd0 < _0x4888bd; _0x1eddd0++)
                if (_0x3676ba[_0x1eddd0] !== _0x3c6347[_0x1eddd0])
                    return !0x1;
            return !0x0;
        }
        ['clone']() {
            return new _0x268bb3(this['_shader'], this['_subShader' + 'Index'], this['_passIndex'], this['_defineNam' + 'es']['slice']());
        }
    }
    class _0x1be7f9 {
        constructor() {
            this['_allCompil' + 'ed'] = !0x1, this['_variants'] = [];
        }
        get ['allCompile' + 'd']() {
            return this['_allCompil' + 'ed'];
        }
        get ['variantCou' + 'nt']() {
            return this['_variants']['length'];
        }
        ['add'](_0x260977) {
            for (var _0xb211e1 = 0x0, _0x595fca = this['_variants']['length']; _0xb211e1 < _0x595fca; _0xb211e1++)
                if (this['_variants'][_0xb211e1]['equal'](_0x260977))
                    return !0x1;
            return this['_variants']['push'](_0x260977['clone']()), this['_allCompil' + 'ed'] = !0x1, !0x0;
        }
        ['remove'](_0x16ad4c) {
            for (var _0x5671da = 0x0, _0x23bbf5 = this['_variants']['length']; _0x5671da < _0x23bbf5; _0x5671da++)
                if (this['_variants'][_0x5671da]['equal'](_0x16ad4c))
                    return this['_variants']['splice'](_0x5671da, 0x1), !0x0;
            return !0x1;
        }
        ['contatins'](_0x29649d) {
            for (var _0x332e4c = 0x0, _0x299dcf = this['_variants']['length']; _0x332e4c < _0x299dcf; _0x332e4c++)
                if (this['_variants'][_0x332e4c]['equal'](_0x29649d))
                    return !0x0;
            return !0x1;
        }
        ['getByIndex'](_0x32b56e) {
            return this['_variants'][_0x32b56e];
        }
        ['clear']() {
            this['_variants']['length'] = 0x0;
        }
        ['compile']() {
            if (!this['_allCompil' + 'ed']) {
                for (var _0x17e321 = this['_variants'], _0x2d86ef = 0x0, _0x121ae3 = _0x17e321['length']; _0x2d86ef < _0x121ae3; _0x2d86ef++) {
                    var _0x8ee349 = _0x17e321[_0x2d86ef];
                    _0x334864['Shader3D']['compileSha' + 'derByDefin' + 'eNames'](_0x8ee349['_shader']['_name'], _0x8ee349['_subShader' + 'Index'], _0x8ee349['_passIndex'], _0x8ee349['_defineNam' + 'es']);
                }
                this['_allCompil' + 'ed'] = !0x0;
            }
        }
    }
    class _0x1ede74 {
        constructor(_0x10570c, _0x407e4f, _0x1eefef, _0x1d51d7) {
            this['_attribute' + 'Map'] = null, this['_uniformMa' + 'p'] = null, this['_enableIns' + 'tancing'] = !0x1, this['_subShader' + 's'] = [], this['_name'] = _0x10570c, this['_attribute' + 'Map'] = _0x407e4f, this['_uniformMa' + 'p'] = _0x1eefef, this['_enableIns' + 'tancing'] = _0x1d51d7;
        }
        static ['_getNamesB' + 'yDefineDat' + 'a'](_0x3991fa, _0x6d42fc) {
            var _0x18fafa = _0x1ede74['_maskMap'], _0x15bcc9 = _0x3991fa['_mask'];
            _0x6d42fc['length'] = 0x0;
            for (var _0x5c3e48 = 0x0, _0x2245ea = _0x3991fa['_length']; _0x5c3e48 < _0x2245ea; _0x5c3e48++)
                for (var _0x3dd06d = _0x18fafa[_0x5c3e48], _0x1a2b08 = _0x15bcc9[_0x5c3e48], _0x27a0ee = 0x0; _0x27a0ee < 0x20; _0x27a0ee++) {
                    var _0x16f96e = 0x1 << _0x27a0ee;
                    if (_0x1a2b08 > 0x0 && _0x16f96e > _0x1a2b08)
                        break;
                    _0x1a2b08 & _0x16f96e && _0x6d42fc['push'](_0x3dd06d[_0x16f96e]);
                }
        }
        static ['getDefineB' + 'yName'](_0x1eaa0d) {
            var _0x284ef9 = _0x1ede74['_defineMap'][_0x1eaa0d];
            if (!_0x284ef9) {
                var _0x1aaaea = _0x1ede74['_maskMap'], _0x2526ea = _0x1ede74['_defineCou' + 'nter'], _0xc7fd32 = Math['floor'](_0x2526ea / 0x20), _0x1a9899 = 0x1 << _0x2526ea % 0x20;
                _0x284ef9 = new _0x29a1b7(_0xc7fd32, _0x1a9899), _0x1ede74['_defineMap'][_0x1eaa0d] = _0x284ef9, _0xc7fd32 == _0x1aaaea['length'] && (_0x1aaaea['length']++, _0x1aaaea[_0xc7fd32] = {}), _0x1aaaea[_0xc7fd32][_0x1a9899] = _0x1eaa0d, _0x1ede74['_defineCou' + 'nter']++;
            }
            return _0x284ef9;
        }
        static ['propertyNa' + 'meToID'](_0x393f65) {
            if (null != _0x1ede74['_propertyN' + 'ameMap'][_0x393f65])
                return _0x1ede74['_propertyN' + 'ameMap'][_0x393f65];
            var _0x3927fb = _0x1ede74['_propertyN' + 'ameCounter']++;
            return _0x1ede74['_propertyN' + 'ameMap'][_0x393f65] = _0x3927fb, _0x3927fb;
        }
        static ['addInclude'](_0x4e5cf2, _0x1023e6) {
            _0x1023e6 = _0x1023e6['replace'](_0x33d6e0['ShaderComp' + 'ile']['_clearCR'], ''), _0x33d6e0['ShaderComp' + 'ile']['addInclude'](_0x4e5cf2, _0x1023e6);
        }
        static ['compileSha' + 'derByDefin' + 'eNames'](_0x4f38c0, _0x3dd246, _0x5c2d68, _0x10d538) {
            var _0x655637 = _0x1ede74['find'](_0x4f38c0);
            if (_0x655637) {
                var _0x22201e = _0x655637['getSubShad' + 'erAt'](_0x3dd246);
                if (_0x22201e) {
                    var _0x46f8c1 = _0x22201e['_passes'][_0x5c2d68];
                    if (_0x46f8c1) {
                        var _0x1d446a = _0x1ede74['_compileDe' + 'fineDatas'];
                        _0x1d446a['clear']();
                        for (var _0x23a6a7 = 0x0, _0x495e3f = _0x10d538['length']; _0x23a6a7 < _0x495e3f; _0x23a6a7++)
                            _0x1d446a['add'](_0x1ede74['getDefineB' + 'yName'](_0x10d538[_0x23a6a7]));
                        _0x237093['_config']['_multiLigh' + 'ting'] || _0x1d446a['add'](_0x1ede74['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING']), _0x46f8c1['withCompil' + 'e'](_0x1d446a);
                    } else
                        console['warn']('Shader3D:\x20' + 'unknown\x20pa' + 'ssIndex.');
                } else
                    console['warn']('Shader3D:\x20' + 'unknown\x20su' + 'bShaderInd' + 'ex.');
            } else
                console['warn']('Shader3D:\x20' + 'unknown\x20sh' + 'ader\x20name.');
        }
        static ['add'](_0x3bb116, _0x1ef367 = null, _0x555484 = null, _0x4d2363 = !0x1) {
            return _0x1ede74['_preCompil' + 'eShader'][_0x3bb116] = new _0x1ede74(_0x3bb116, _0x1ef367, _0x555484, _0x4d2363);
        }
        static ['find'](_0x2d863b) {
            return _0x1ede74['_preCompil' + 'eShader'][_0x2d863b];
        }
        get ['name']() {
            return this['_name'];
        }
        ['addSubShad' + 'er'](_0x36fa81) {
            this['_subShader' + 's']['push'](_0x36fa81), _0x36fa81['_owner'] = this;
        }
        ['getSubShad' + 'erAt'](_0x1ff42d) {
            return this['_subShader' + 's'][_0x1ff42d];
        }
        static ['compileSha' + 'der'](_0x115790, _0x3ddded, _0x43440e, ..._0x13e674) {
            var _0x1058fb = _0x1ede74['find'](_0x115790);
            if (_0x1058fb) {
                var _0x5bf53d = _0x1058fb['getSubShad' + 'erAt'](_0x3ddded);
                if (_0x5bf53d) {
                    var _0x3f0d70 = _0x5bf53d['_passes'][_0x43440e];
                    if (_0x3f0d70) {
                        var _0x456d0f = _0x1ede74['_compileDe' + 'fineDatas'], _0x2322da = _0x456d0f['_mask'];
                        _0x2322da['length'] = 0x0;
                        for (var _0x1a21a1 = 0x0, _0x37fdf6 = _0x13e674['length']; _0x1a21a1 < _0x37fdf6; _0x1a21a1++)
                            _0x2322da['push'](_0x13e674[_0x1a21a1]);
                        _0x456d0f['_length'] = _0x13e674['length'], _0x237093['_config']['_multiLigh' + 'ting'] || _0x456d0f['add'](_0x1ede74['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING']), _0x3f0d70['withCompil' + 'e'](_0x456d0f);
                    } else
                        console['warn']('Shader3D:\x20' + 'unknown\x20pa' + 'ssIndex.');
                } else
                    console['warn']('Shader3D:\x20' + 'unknown\x20su' + 'bShaderInd' + 'ex.');
            } else
                console['warn']('Shader3D:\x20' + 'unknown\x20sh' + 'ader\x20name.');
        }
    }
    _0x1ede74['_compileDe' + 'fineDatas'] = new _0x5f373b(), _0x1ede74['RENDER_STA' + 'TE_CULL'] = 0x0, _0x1ede74['RENDER_STA' + 'TE_BLEND'] = 0x1, _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'] = 0x2, _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'] = 0x3, _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC_RGB'] = 0x4, _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST_RGB'] = 0x5, _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC_ALPHA'] = 0x6, _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST_ALPHA'] = 0x7, _0x1ede74['RENDER_STA' + 'TE_BLEND_C' + 'ONST_COLOR'] = 0x8, _0x1ede74['RENDER_STA' + 'TE_BLEND_E' + 'QUATION'] = 0x9, _0x1ede74['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_RG' + 'B'] = 0xa, _0x1ede74['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_AL' + 'PHA'] = 0xb, _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'] = 0xc, _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE'] = 0xd, _0x1ede74['PERIOD_CUS' + 'TOM'] = 0x0, _0x1ede74['PERIOD_MAT' + 'ERIAL'] = 0x1, _0x1ede74['PERIOD_SPR' + 'ITE'] = 0x2, _0x1ede74['PERIOD_CAM' + 'ERA'] = 0x3, _0x1ede74['PERIOD_SCE' + 'NE'] = 0x4, _0x1ede74['_propertyN' + 'ameCounter'] = 0x0, _0x1ede74['_propertyN' + 'ameMap'] = {}, _0x1ede74['_defineCou' + 'nter'] = 0x0, _0x1ede74['_defineMap'] = {}, _0x1ede74['_preCompil' + 'eShader'] = {}, _0x1ede74['_maskMap'] = [], _0x1ede74['debugMode'] = !0x0, _0x1ede74['debugShade' + 'rVariantCo' + 'llection'] = new _0x1be7f9();
    class _0x4ac605 {
        constructor(_0x21fa59 = null) {
            this['_ownerReso' + 'urce'] = null, this['_data'] = null, this['_defineDat' + 'as'] = new _0x5f373b(), this['_runtimeCo' + 'pyValues'] = [], this['_ownerReso' + 'urce'] = _0x21fa59, this['_initData']();
        }
        ['_initData']() {
            this['_data'] = new Object();
        }
        ['getData']() {
            return this['_data'];
        }
        ['addDefine'](_0x59d59b) {
            this['_defineDat' + 'as']['add'](_0x59d59b);
        }
        ['removeDefi' + 'ne'](_0x4f02fb) {
            this['_defineDat' + 'as']['remove'](_0x4f02fb);
        }
        ['hasDefine'](_0x2090e0) {
            return this['_defineDat' + 'as']['has'](_0x2090e0);
        }
        ['clearDefin' + 'e']() {
            this['_defineDat' + 'as']['clear']();
        }
        ['getBool'](_0x21a6da) {
            return this['_data'][_0x21a6da];
        }
        ['setBool'](_0x53d8a4, _0x4f1c88) {
            this['_data'][_0x53d8a4] = _0x4f1c88;
        }
        ['getInt'](_0x460cd3) {
            return this['_data'][_0x460cd3];
        }
        ['setInt'](_0x410f3b, _0x5f08af) {
            this['_data'][_0x410f3b] = _0x5f08af;
        }
        ['getNumber'](_0x14b339) {
            return this['_data'][_0x14b339];
        }
        ['setNumber'](_0x4f4c2f, _0xa09ddc) {
            this['_data'][_0x4f4c2f] = _0xa09ddc;
        }
        ['getVector2'](_0x1a255b) {
            return this['_data'][_0x1a255b];
        }
        ['setVector2'](_0x17f80c, _0x4528eb) {
            this['_data'][_0x17f80c] = _0x4528eb;
        }
        ['getVector3'](_0x11db8b) {
            return this['_data'][_0x11db8b];
        }
        ['setVector3'](_0x53a042, _0x4bccae) {
            this['_data'][_0x53a042] = _0x4bccae;
        }
        ['getVector'](_0x4a3217) {
            return this['_data'][_0x4a3217];
        }
        ['setVector'](_0x304a63, _0x3972c7) {
            this['_data'][_0x304a63] = _0x3972c7;
        }
        ['getQuatern' + 'ion'](_0x4379eb) {
            return this['_data'][_0x4379eb];
        }
        ['setQuatern' + 'ion'](_0x7bb2c0, _0x13a20e) {
            this['_data'][_0x7bb2c0] = _0x13a20e;
        }
        ['getMatrix4' + 'x4'](_0x2427af) {
            return this['_data'][_0x2427af];
        }
        ['setMatrix4' + 'x4'](_0x4db576, _0x467a17) {
            this['_data'][_0x4db576] = _0x467a17;
        }
        ['getBuffer'](_0x13c913) {
            return this['_data'][_0x13c913];
        }
        ['setBuffer'](_0x3461e8, _0x249288) {
            this['_data'][_0x3461e8] = _0x249288;
        }
        ['setTexture'](_0xf6827e, _0x40879b) {
            var _0x8003e = this['_data'][_0xf6827e];
            this['_data'][_0xf6827e] = _0x40879b, this['_ownerReso' + 'urce'] && this['_ownerReso' + 'urce']['referenceC' + 'ount'] > 0x0 && (_0x8003e && _0x8003e['_removeRef' + 'erence'](), _0x40879b && _0x40879b['_addRefere' + 'nce']());
        }
        ['getTexture'](_0x1e2e92) {
            return this['_data'][_0x1e2e92];
        }
        ['setAttribu' + 'te'](_0x147922, _0x59ac5e) {
            this['_data'][_0x147922] = _0x59ac5e;
        }
        ['getAttribu' + 'te'](_0x313516) {
            return this['_data'][_0x313516];
        }
        ['getLength']() {
            return this['_data']['length'];
        }
        ['setLength'](_0x4c5cda) {
            this['_data']['length'] = _0x4c5cda;
        }
        ['cloneTo'](_0xf866dd) {
            var _0xebb804 = _0xf866dd, _0x1a7775 = _0xebb804['_data'];
            for (var _0x3dd270 in this['_data']) {
                var _0x2adde1 = this['_data'][_0x3dd270];
                if (null != _0x2adde1) {
                    if ('number' == typeof _0x2adde1)
                        _0x1a7775[_0x3dd270] = _0x2adde1;
                    else {
                        if ('number' == typeof _0x2adde1)
                            _0x1a7775[_0x3dd270] = _0x2adde1;
                        else {
                            if ('boolean' == typeof _0x2adde1)
                                _0x1a7775[_0x3dd270] = _0x2adde1;
                            else {
                                if (_0x2adde1 instanceof _0x4c44b6) {
                                    var _0x601fb = _0x1a7775[_0x3dd270] || (_0x1a7775[_0x3dd270] = new _0x4c44b6());
                                    _0x2adde1['cloneTo'](_0x601fb), _0x1a7775[_0x3dd270] = _0x601fb;
                                } else {
                                    if (_0x2adde1 instanceof _0x4795b3) {
                                        var _0x25765a = _0x1a7775[_0x3dd270] || (_0x1a7775[_0x3dd270] = new _0x4795b3());
                                        _0x2adde1['cloneTo'](_0x25765a), _0x1a7775[_0x3dd270] = _0x25765a;
                                    } else {
                                        if (_0x2adde1 instanceof _0x333f41) {
                                            var _0x3271a2 = _0x1a7775[_0x3dd270] || (_0x1a7775[_0x3dd270] = new _0x333f41());
                                            _0x2adde1['cloneTo'](_0x3271a2), _0x1a7775[_0x3dd270] = _0x3271a2;
                                        } else {
                                            if (_0x2adde1 instanceof _0x16c2be) {
                                                var _0x547451 = _0x1a7775[_0x3dd270] || (_0x1a7775[_0x3dd270] = new _0x16c2be());
                                                _0x2adde1['cloneTo'](_0x547451), _0x1a7775[_0x3dd270] = _0x547451;
                                            } else
                                                _0x2adde1 instanceof _0x33d6e0['BaseTextur' + 'e'] && (_0x1a7775[_0x3dd270] = _0x2adde1);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDat' + 'as']['cloneTo'](_0xebb804['_defineDat' + 'as']);
        }
        ['clone']() {
            var _0x41551d = new _0x4ac605();
            return this['cloneTo'](_0x41551d), _0x41551d;
        }
        ['cloneToFor' + 'Native'](_0x5b09a0) {
            var _0x58fae7 = _0x5b09a0;
            this['_int32Data']['length'] - _0x58fae7['_int32Data']['length'] > 0x0 && _0x58fae7['needRenewA' + 'rrayBuffer' + 'ForNative'](this['_int32Data']['length']), _0x58fae7['_int32Data']['set'](this['_int32Data'], 0x0);
            var _0x1c64d7 = _0x58fae7['_nativeArr' + 'ay'], _0x3e9439 = this['_nativeArr' + 'ay']['length'];
            _0x1c64d7['length'] = _0x3e9439;
            for (var _0x20a187 = 0x0; _0x20a187 < _0x3e9439; _0x20a187++) {
                var _0x475b31 = this['_nativeArr' + 'ay'][_0x20a187];
                if (_0x475b31) {
                    if ('number' == typeof _0x475b31)
                        _0x1c64d7[_0x20a187] = _0x475b31, _0x58fae7['setNumber'](_0x20a187, _0x475b31);
                    else {
                        if ('number' == typeof _0x475b31)
                            _0x1c64d7[_0x20a187] = _0x475b31, _0x58fae7['setInt'](_0x20a187, _0x475b31);
                        else {
                            if ('boolean' == typeof _0x475b31)
                                _0x1c64d7[_0x20a187] = _0x475b31, _0x58fae7['setBool'](_0x20a187, _0x475b31);
                            else {
                                if (_0x475b31 instanceof _0x4c44b6) {
                                    var _0x58cb16 = _0x1c64d7[_0x20a187] || (_0x1c64d7[_0x20a187] = new _0x4c44b6());
                                    _0x475b31['cloneTo'](_0x58cb16), _0x1c64d7[_0x20a187] = _0x58cb16, _0x58fae7['setVector2'](_0x20a187, _0x58cb16);
                                } else {
                                    if (_0x475b31 instanceof _0x4795b3) {
                                        var _0x3cd1d6 = _0x1c64d7[_0x20a187] || (_0x1c64d7[_0x20a187] = new _0x4795b3());
                                        _0x475b31['cloneTo'](_0x3cd1d6), _0x1c64d7[_0x20a187] = _0x3cd1d6, _0x58fae7['setVector3'](_0x20a187, _0x3cd1d6);
                                    } else {
                                        if (_0x475b31 instanceof _0x333f41) {
                                            var _0x91a3e7 = _0x1c64d7[_0x20a187] || (_0x1c64d7[_0x20a187] = new _0x333f41());
                                            _0x475b31['cloneTo'](_0x91a3e7), _0x1c64d7[_0x20a187] = _0x91a3e7, _0x58fae7['setVector'](_0x20a187, _0x91a3e7);
                                        } else {
                                            if (_0x475b31 instanceof _0x16c2be) {
                                                var _0x1350a3 = _0x1c64d7[_0x20a187] || (_0x1c64d7[_0x20a187] = new _0x16c2be());
                                                _0x475b31['cloneTo'](_0x1350a3), _0x1c64d7[_0x20a187] = _0x1350a3, _0x58fae7['setMatrix4' + 'x4'](_0x20a187, _0x1350a3);
                                            } else
                                                _0x475b31 instanceof _0x33d6e0['BaseTextur' + 'e'] && (_0x1c64d7[_0x20a187] = _0x475b31, _0x58fae7['setTexture'](_0x20a187, _0x475b31));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            this['_defineDat' + 'as']['cloneTo'](_0x58fae7['_defineDat' + 'as']);
        }
        ['_initDataF' + 'orNative']() {
            this['_frameCoun' + 't'] = -0x1, this['_runtimeCo' + 'pyValues']['length'] = 0x0, this['_nativeArr' + 'ay'] = [], this['_data'] = new ArrayBuffer(0x20), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Da' + 'ta'] = new Float32Array(this['_data']), _0x33d6e0['LayaGL']['instance']['createArra' + 'yBufferRef'](this['_data'], _0x33d6e0['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0);
        }
        ['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x3743a5) {
            if (_0x3743a5 >= this['_int32Data']['length']) {
                var _0x6e6af1 = 0x4 * (_0x3743a5 + 0x1), _0x2a7bf6 = this['_int32Data'], _0x15e54e = this['_data']['conchRef'], _0x294982 = this['_data']['_ptrID'];
                this['_data'] = new ArrayBuffer(_0x6e6af1), this['_int32Data'] = new Int32Array(this['_data']), this['_float32Da' + 'ta'] = new Float32Array(this['_data']), this['_data']['conchRef'] = _0x15e54e, this['_data']['_ptrID'] = _0x294982, _0x2a7bf6 && this['_int32Data']['set'](_0x2a7bf6, 0x0);
                var _0x488695 = _0x33d6e0['LayaGL']['instance'];
                _0x488695['updateArra' + 'yBufferRef'] ? _0x488695['updateArra' + 'yBufferRef'](this['_data']['_ptrID'], _0x15e54e['isSyncToRe' + 'nder'](), this['_data']) : window['conch']['updateArra' + 'yBufferRef'](this['_data']['_ptrID'], _0x15e54e['isSyncToRe' + 'nder'](), this['_data']);
            }
        }
        ['getDataFor' + 'Native']() {
            return this['_nativeArr' + 'ay'];
        }
        ['getIntForN' + 'ative'](_0x50ade6) {
            return this['_int32Data'][_0x50ade6];
        }
        ['setIntForN' + 'ative'](_0x5d0312, _0x28dbf0) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x5d0312), this['_int32Data'][_0x5d0312] = _0x28dbf0, this['_nativeArr' + 'ay'][_0x5d0312] = _0x28dbf0;
        }
        ['getBoolFor' + 'Native'](_0x376094) {
            return 0x1 == this['_int32Data'][_0x376094];
        }
        ['setBoolFor' + 'Native'](_0x23e4a7, _0x3bc79f) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x23e4a7), this['_int32Data'][_0x23e4a7] = _0x3bc79f ? 0x1 : 0x0, this['_nativeArr' + 'ay'][_0x23e4a7] = _0x3bc79f;
        }
        ['getNumberF' + 'orNative'](_0x440f2a) {
            return this['_float32Da' + 'ta'][_0x440f2a];
        }
        ['setNumberF' + 'orNative'](_0x4d9b2a, _0x416391) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x4d9b2a), this['_float32Da' + 'ta'][_0x4d9b2a] = _0x416391, this['_nativeArr' + 'ay'][_0x4d9b2a] = _0x416391;
        }
        ['getMatrix4' + 'x4ForNativ' + 'e'](_0x4a0f8c) {
            return this['_nativeArr' + 'ay'][_0x4a0f8c];
        }
        ['setMatrix4' + 'x4ForNativ' + 'e'](_0x4ba852, _0x5b5b70) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x4ba852), this['_nativeArr' + 'ay'][_0x4ba852] = _0x5b5b70;
            var _0x2a5bc6 = this['setReferen' + 'ceForNativ' + 'e'](_0x5b5b70['elements']);
            this['_int32Data'][_0x4ba852] = _0x2a5bc6;
        }
        ['getVectorF' + 'orNative'](_0x5ee7ef) {
            return this['_nativeArr' + 'ay'][_0x5ee7ef];
        }
        ['setVectorF' + 'orNative'](_0x4dcc37, _0x3a99ad) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x4dcc37), this['_nativeArr' + 'ay'][_0x4dcc37] = _0x3a99ad, _0x3a99ad['elements'] || _0x3a99ad['forNativeE' + 'lement']();
            var _0x11dfbc = this['setReferen' + 'ceForNativ' + 'e'](_0x3a99ad['elements']);
            this['_int32Data'][_0x4dcc37] = _0x11dfbc;
        }
        ['getVector2' + 'ForNative'](_0x41bb43) {
            return this['_nativeArr' + 'ay'][_0x41bb43];
        }
        ['setVector2' + 'ForNative'](_0x3412cb, _0x3690bf) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x3412cb), this['_nativeArr' + 'ay'][_0x3412cb] = _0x3690bf, _0x3690bf['elements'] || _0x3690bf['forNativeE' + 'lement']();
            var _0x46a30f = this['setReferen' + 'ceForNativ' + 'e'](_0x3690bf['elements']);
            this['_int32Data'][_0x3412cb] = _0x46a30f;
        }
        ['getVector3' + 'ForNative'](_0x578f8c) {
            return this['_nativeArr' + 'ay'][_0x578f8c];
        }
        ['setVector3' + 'ForNative'](_0xfb30dc, _0x3961cc) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0xfb30dc), this['_nativeArr' + 'ay'][_0xfb30dc] = _0x3961cc, _0x3961cc['elements'] || _0x3961cc['forNativeE' + 'lement']();
            var _0x7e994d = this['setReferen' + 'ceForNativ' + 'e'](_0x3961cc['elements']);
            this['_int32Data'][_0xfb30dc] = _0x7e994d;
        }
        ['getQuatern' + 'ionForNati' + 've'](_0x212746) {
            return this['_nativeArr' + 'ay'][_0x212746];
        }
        ['setQuatern' + 'ionForNati' + 've'](_0xe3100c, _0x348a40) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0xe3100c), this['_nativeArr' + 'ay'][_0xe3100c] = _0x348a40, _0x348a40['elements'] || _0x348a40['forNativeE' + 'lement']();
            var _0x24d554 = this['setReferen' + 'ceForNativ' + 'e'](_0x348a40['elements']);
            this['_int32Data'][_0xe3100c] = _0x24d554;
        }
        ['getBufferF' + 'orNative'](_0x341b60) {
            return this['_nativeArr' + 'ay'][_0x341b60];
        }
        ['setBufferF' + 'orNative'](_0x4e4497, _0x2bcc1f) {
            this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x4e4497), this['_nativeArr' + 'ay'][_0x4e4497] = _0x2bcc1f;
            var _0x2b5bbe = this['setReferen' + 'ceForNativ' + 'e'](_0x2bcc1f);
            this['_int32Data'][_0x4e4497] = _0x2b5bbe;
        }
        ['getAttribu' + 'teForNativ' + 'e'](_0x23f4da) {
            return this['_nativeArr' + 'ay'][_0x23f4da];
        }
        ['setAttribu' + 'teForNativ' + 'e'](_0x503e17, _0x33c833) {
            this['_nativeArr' + 'ay'][_0x503e17] = _0x33c833, _0x33c833['_ptrID'] || _0x33d6e0['LayaGL']['instance']['createArra' + 'yBufferRef'](_0x33c833, _0x33d6e0['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0), _0x33d6e0['LayaGL']['instance']['syncBuffer' + 'ToRenderTh' + 'read'](_0x33c833), this['_int32Data'][_0x503e17] = _0x33c833['_ptrID'];
        }
        ['getTexture' + 'ForNative'](_0x38dafc) {
            return this['_nativeArr' + 'ay'][_0x38dafc];
        }
        ['setTexture' + 'ForNative'](_0x299981, _0x58311a) {
            if (_0x58311a) {
                this['needRenewA' + 'rrayBuffer' + 'ForNative'](_0x299981);
                var _0x56ba39 = this['_nativeArr' + 'ay'][_0x299981];
                this['_nativeArr' + 'ay'][_0x299981] = _0x58311a;
                var _0x25386c = _0x58311a['_getSource']() || _0x58311a['defaulteTe' + 'xture']['_getSource']();
                this['_int32Data'][_0x299981] = _0x25386c['id'], this['_ownerReso' + 'urce'] && this['_ownerReso' + 'urce']['referenceC' + 'ount'] > 0x0 && (_0x56ba39 && _0x56ba39['_removeRef' + 'erence'](), _0x58311a && _0x58311a['_addRefere' + 'nce']());
            }
        }
        ['setReferen' + 'ceForNativ' + 'e'](_0x2a011f) {
            this['clearRunti' + 'meCopyArra' + 'y']();
            var _0x7bb8a5 = 0x0, _0x5b1674 = 0x0;
            return _0x4ac605['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] ? (_0x33d6e0['LayaGL']['instance']['createArra' + 'yBufferRef' + 's'](_0x2a011f, _0x33d6e0['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0, _0x33d6e0['LayaGL']['ARRAY_BUFF' + 'ER_REF_REF' + 'ERENCE']), _0x7bb8a5 = 0x0, _0x5b1674 = _0x2a011f['getPtrID'](_0x7bb8a5)) : (_0x33d6e0['LayaGL']['instance']['createArra' + 'yBufferRef' + 's'](_0x2a011f, _0x33d6e0['LayaGL']['ARRAY_BUFF' + 'ER_TYPE_DA' + 'TA'], !0x0, _0x33d6e0['LayaGL']['ARRAY_BUFF' + 'ER_REF_COP' + 'Y']), _0x7bb8a5 = _0x2a011f['getRefNum']() - 0x1, _0x5b1674 = _0x2a011f['getPtrID'](_0x7bb8a5), this['_runtimeCo' + 'pyValues']['push']({
                'obj': _0x2a011f,
                'refID': _0x7bb8a5,
                'ptrID': _0x5b1674
            })), _0x33d6e0['LayaGL']['instance']['syncBuffer' + 'ToRenderTh' + 'read'](_0x2a011f, _0x7bb8a5), _0x5b1674;
        }
        static ['setRuntime' + 'ValueMode'](_0x158bba) {
            _0x4ac605['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] = _0x158bba;
        }
        ['clearRunti' + 'meCopyArra' + 'y']() {
            var _0x1daed6 = _0x33d6e0['Stat']['loopCount'];
            if (this['_frameCoun' + 't'] != _0x1daed6) {
                this['_frameCoun' + 't'] = _0x1daed6;
                for (var _0x5a578f = 0x0, _0x4f014e = this['_runtimeCo' + 'pyValues']['length']; _0x5a578f < _0x4f014e; _0x5a578f++) {
                    this['_runtimeCo' + 'pyValues'][_0x5a578f]['obj']['clearRefNu' + 'm']();
                }
                this['_runtimeCo' + 'pyValues']['length'] = 0x0;
            }
        }
    }
    _0x4ac605['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'] = !0x0;
    class _0x47aaf5 {
        constructor() {
            this['_composite' + 'Shader'] = _0x1ede74['find']('PostProces' + 'sComposite'), this['_composite' + 'ShaderData'] = new _0x4ac605(), this['_effects'] = [], this['_context'] = null, this['_context'] = new _0x4d33e1(), this['_context']['compositeS' + 'haderData'] = this['_composite' + 'ShaderData'];
        }
        static ['__init__']() {
            _0x47aaf5['SHADERDEFI' + 'NE_BLOOM_L' + 'OW'] = _0x1ede74['getDefineB' + 'yName']('BLOOM_LOW'), _0x47aaf5['SHADERDEFI' + 'NE_BLOOM'] = _0x1ede74['getDefineB' + 'yName']('BLOOM'), _0x47aaf5['SHADERDEFI' + 'NE_FINALPA' + 'SS'] = _0x1ede74['getDefineB' + 'yName']('FINALPASS');
        }
        ['_init'](_0x4cde0e, _0x7f546f) {
            this['_context']['camera'] = _0x4cde0e, this['_context']['command'] = _0x7f546f;
        }
        ['_render']() {
            var _0x1e2106 = _0x4ac605['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'];
            _0x33d6e0['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x4ac605['setRuntime' + 'ValueMode'](!0x1);
            var _0xc52ac4 = this['_context']['camera'], _0x2457fa = _0xc52ac4['viewport'], _0x11eda5 = _0x3f7a1d['createFrom' + 'Pool'](_0x311bc2['clientWidt' + 'h'], _0x311bc2['clientHeig' + 'ht'], _0xc52ac4['_getRender' + 'TextureFor' + 'mat'](), _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE']), _0x4bc924 = _0xc52ac4['_internalR' + 'enderTextu' + 're'];
            this['_context']['command']['clear'](), this['_context']['source'] = _0x11eda5, this['_context']['destinatio' + 'n'] = _0x4bc924, this['_context']['compositeS' + 'haderData']['clearDefin' + 'e'](), this['_context']['command']['blitScreen' + 'Triangle'](_0x4bc924, _0x11eda5), this['_context']['compositeS' + 'haderData']['setTexture'](_0x47aaf5['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'], _0x33d6e0['Texture2D']['whiteTextu' + 're']);
            for (var _0xb7b776 = 0x0, _0x2c611d = this['_effects']['length']; _0xb7b776 < _0x2c611d; _0xb7b776++)
                this['_effects'][_0xb7b776]['render'](this['_context']);
            this['_composite' + 'ShaderData']['addDefine'](_0x47aaf5['SHADERDEFI' + 'NE_FINALPA' + 'SS']);
            var _0x188e16 = _0xc52ac4['_offScreen' + 'RenderText' + 'ure'], _0xaa7bb9 = _0x188e16 || null;
            this['_context']['destinatio' + 'n'] = _0xaa7bb9;
            var _0x17f371 = _0xc52ac4['_getCanvas' + 'Width'](), _0x23c7d7 = _0xc52ac4['_getCanvas' + 'Height']();
            _0xc52ac4['_screenOff' + 'setScale']['setValue'](_0x2457fa['x'] / _0x17f371, _0x2457fa['y'] / _0x23c7d7, _0x2457fa['width'] / _0x17f371, _0x2457fa['height'] / _0x23c7d7), this['_context']['command']['blitScreen' + 'Triangle'](this['_context']['source'], _0xaa7bb9, _0xc52ac4['_screenOff' + 'setScale'], this['_composite' + 'Shader'], this['_composite' + 'ShaderData']), _0x3f7a1d['recoverToP' + 'ool'](_0x11eda5);
            var _0x380611 = this['_context']['deferredRe' + 'leaseTextu' + 'res'];
            for (_0xb7b776 = 0x0, _0x2c611d = _0x380611['length']; _0xb7b776 < _0x2c611d; _0xb7b776++)
                _0x3f7a1d['recoverToP' + 'ool'](_0x380611[_0xb7b776]);
            _0x380611['length'] = 0x0, _0x33d6e0['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x4ac605['setRuntime' + 'ValueMode'](_0x1e2106);
        }
        ['addEffect'](_0x2807d8) {
            this['_effects']['push'](_0x2807d8);
        }
        ['removeEffe' + 'ct'](_0x340ba7) {
            var _0xf1d4e2 = this['_effects']['indexOf'](_0x340ba7);
            -0x1 !== _0xf1d4e2 && this['_effects']['splice'](_0xf1d4e2, 0x1);
        }
    }
    _0x47aaf5['SHADERVALU' + 'E_MAINTEX'] = _0x1ede74['propertyNa' + 'meToID']('u_MainTex'), _0x47aaf5['SHADERVALU' + 'E_BLOOMTEX'] = _0x1ede74['propertyNa' + 'meToID']('u_BloomTex'), _0x47aaf5['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'] = _0x1ede74['propertyNa' + 'meToID']('u_AutoExpo' + 'sureTex'), _0x47aaf5['SHADERVALU' + 'E_BLOOM_DI' + 'RTTEX'] = _0x1ede74['propertyNa' + 'meToID']('u_Bloom_Di' + 'rtTex'), _0x47aaf5['SHADERVALU' + 'E_BLOOMTEX' + '_TEXELSIZE'] = _0x1ede74['propertyNa' + 'meToID']('u_BloomTex' + '_TexelSize'), _0x47aaf5['SHADERVALU' + 'E_BLOOM_DI' + 'RTTILEOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_Bloom_Di' + 'rtTileOffs' + 'et'), _0x47aaf5['SHADERVALU' + 'E_BLOOM_SE' + 'TTINGS'] = _0x1ede74['propertyNa' + 'meToID']('u_Bloom_Se' + 'ttings'), _0x47aaf5['SHADERVALU' + 'E_BLOOM_CO' + 'LOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Bloom_Co' + 'lor');
    class _0x58eaa8 extends _0x33d6e0['EventDispa' + 'tcher'] {
        constructor(_0x346736, _0x37131f = null, _0x3b987e = null, _0x539e66 = null, _0x358762 = null) {
            super(), this['_owner'] = _0x346736, this['_children'] = [], this['_localMatr' + 'ix'] = new Float32Array(0x10), _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? (this['_localPosi' + 'tion'] = new _0x21e77b(0x0, 0x0, 0x0, _0x37131f), this['_localRota' + 'tion'] = new _0x416f10(0x0, 0x0, 0x0, 0x1, _0x3b987e), this['_localScal' + 'e'] = new _0x21e77b(0x0, 0x0, 0x0, _0x539e66), this['_worldMatr' + 'ix'] = _0x358762) : (this['_localPosi' + 'tion'] = new _0x4795b3(), this['_localRota' + 'tion'] = new _0x5958af(), this['_localScal' + 'e'] = new _0x4795b3(), this['_worldMatr' + 'ix'] = new Float32Array(0x10)), this['_localQuat' + 'ernionUpda' + 'te'] = !0x1, this['_locaEuler' + 'lUpdate'] = !0x1, this['_localUpda' + 'te'] = !0x1, this['_worldUpda' + 'te'] = !0x0;
        }
        ['_getlocalM' + 'atrix']() {
            return this['_localUpda' + 'te'] && (_0x89f66e['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](this['_localPosi' + 'tion'], this['_localRota' + 'tion'], this['_localScal' + 'e'], this['_localMatr' + 'ix']), this['_localUpda' + 'te'] = !0x1), this['_localMatr' + 'ix'];
        }
        ['_onWorldTr' + 'ansform']() {
            if (!this['_worldUpda' + 'te']) {
                this['_worldUpda' + 'te'] = !0x0, this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED']);
                for (var _0x95f500 = 0x0, _0x4f4cff = this['_children']['length']; _0x95f500 < _0x4f4cff; _0x95f500++)
                    this['_children'][_0x95f500]['_onWorldTr' + 'ansform']();
            }
        }
        get ['localPosit' + 'ion']() {
            return this['_localPosi' + 'tion'];
        }
        set ['localPosit' + 'ion'](_0x2185e0) {
            this['_localPosi' + 'tion'] = _0x2185e0, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        get ['localRotat' + 'ion']() {
            if (this['_localQuat' + 'ernionUpda' + 'te']) {
                var _0x2b6b46 = this['_localRota' + 'tionEuler'];
                _0x5958af['createFrom' + 'YawPitchRo' + 'll'](_0x2b6b46['y'] / _0x58eaa8['_angleToRa' + 'ndin'], _0x2b6b46['x'] / _0x58eaa8['_angleToRa' + 'ndin'], _0x2b6b46['z'] / _0x58eaa8['_angleToRa' + 'ndin'], this['_localRota' + 'tion']), this['_localQuat' + 'ernionUpda' + 'te'] = !0x1;
            }
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x5a5a96) {
            this['_localRota' + 'tion'] = _0x5a5a96, this['_locaEuler' + 'lUpdate'] = !0x0, this['_localQuat' + 'ernionUpda' + 'te'] = !0x1, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        get ['localScale']() {
            return this['_localScal' + 'e'];
        }
        set ['localScale'](_0x34a9b1) {
            this['_localScal' + 'e'] = _0x34a9b1, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        get ['localRotat' + 'ionEuler']() {
            if (this['_locaEuler' + 'lUpdate']) {
                this['_localRota' + 'tion']['getYawPitc' + 'hRoll'](_0x58eaa8['_tempVecto' + 'r3']);
                var _0x52c787 = _0x58eaa8['_tempVecto' + 'r3'], _0x4b2375 = this['_localRota' + 'tionEuler'];
                _0x4b2375['x'] = _0x52c787['y'] * _0x58eaa8['_angleToRa' + 'ndin'], _0x4b2375['y'] = _0x52c787['x'] * _0x58eaa8['_angleToRa' + 'ndin'], _0x4b2375['z'] = _0x52c787['z'] * _0x58eaa8['_angleToRa' + 'ndin'], this['_locaEuler' + 'lUpdate'] = !0x1;
            }
            return this['_localRota' + 'tionEuler'];
        }
        set ['localRotat' + 'ionEuler'](_0x342d41) {
            this['_localRota' + 'tionEuler'] = _0x342d41, this['_locaEuler' + 'lUpdate'] = !0x1, this['_localQuat' + 'ernionUpda' + 'te'] = !0x0, this['_localUpda' + 'te'] = !0x0, this['_onWorldTr' + 'ansform']();
        }
        ['getWorldMa' + 'trix']() {
            if (!_0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_worldUpda' + 'te']) {
                if (null != this['_parent'])
                    _0x89f66e['matrix4x4M' + 'ultiplyFFF'](this['_parent']['getWorldMa' + 'trix'](), this['_getlocalM' + 'atrix'](), this['_worldMatr' + 'ix']);
                else {
                    var _0xaab951 = this['_worldMatr' + 'ix'];
                    _0xaab951[0x1] = _0xaab951[0x2] = _0xaab951[0x3] = _0xaab951[0x4] = _0xaab951[0x6] = _0xaab951[0x7] = _0xaab951[0x8] = _0xaab951[0x9] = _0xaab951[0xb] = _0xaab951[0xc] = _0xaab951[0xd] = _0xaab951[0xe] = 0x0, _0xaab951[0x0] = _0xaab951[0x5] = _0xaab951[0xa] = _0xaab951[0xf] = 0x1;
                }
                this['_worldUpda' + 'te'] = !0x1;
            }
            return _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_worldUpda' + 'te'] && (this['_worldUpda' + 'te'] = !0x1), this['_worldMatr' + 'ix'];
        }
        ['setParent'](_0x1c467a) {
            if (this['_parent'] !== _0x1c467a) {
                if (this['_parent']) {
                    var _0x4db48e = this['_parent']['_children'], _0x197795 = _0x4db48e['indexOf'](this);
                    _0x4db48e['splice'](_0x197795, 0x1);
                }
                _0x1c467a && (_0x1c467a['_children']['push'](this), _0x1c467a && this['_onWorldTr' + 'ansform']()), this['_parent'] = _0x1c467a;
            }
        }
    }
    _0x58eaa8['_tempVecto' + 'r3'] = new _0x4795b3(), _0x58eaa8['_angleToRa' + 'ndin'] = 0xb4 / Math['PI'];
    class _0x3e6973 {
        constructor(_0x3b69b6 = null, _0x272bd3 = null, _0x46d15d = null, _0x16f4c6 = null) {
            this['_children'] = [], this['transform'] = new _0x58eaa8(this, _0x3b69b6, _0x272bd3, _0x46d15d, _0x16f4c6);
        }
        ['addChild'](_0x323605) {
            _0x323605['_parent'] = this, _0x323605['transform']['setParent'](this['transform']), this['_children']['push'](_0x323605);
        }
        ['removeChil' + 'd'](_0x40ba72) {
            var _0x44c3a1 = this['_children']['indexOf'](_0x40ba72);
            -0x1 !== _0x44c3a1 && this['_children']['splice'](_0x44c3a1, 0x1);
        }
        ['getChildBy' + 'Name'](_0x11840b) {
            for (var _0x38be24 = 0x0, _0x5ac407 = this['_children']['length']; _0x38be24 < _0x5ac407; _0x38be24++) {
                var _0x2f482a = this['_children'][_0x38be24];
                if (_0x2f482a['name'] === _0x11840b)
                    return _0x2f482a;
            }
            return null;
        }
        ['getChildBy' + 'Index'](_0x55c2f0) {
            return this['_children'][_0x55c2f0];
        }
        ['getChildCo' + 'unt']() {
            return this['_children']['length'];
        }
        ['cloneTo'](_0x3afdee) {
            var _0x1d268c = _0x3afdee;
            _0x1d268c['name'] = this['name'];
            for (var _0x482e3f = 0x0, _0x1aaaf6 = this['_children']['length']; _0x482e3f < _0x1aaaf6; _0x482e3f++) {
                var _0x3c3ccd = this['_children'][_0x482e3f], _0x2a3b7b = _0x3c3ccd['clone']();
                _0x1d268c['addChild'](_0x2a3b7b);
                var _0x47300c = _0x3c3ccd['transform'], _0x3145cd = _0x2a3b7b['transform'], _0x22170d = _0x3145cd['localPosit' + 'ion'], _0x441ef1 = _0x3145cd['localRotat' + 'ion'], _0x10e9f6 = _0x3145cd['localScale'];
                _0x47300c['localPosit' + 'ion']['cloneTo'](_0x22170d), _0x47300c['localRotat' + 'ion']['cloneTo'](_0x441ef1), _0x47300c['localScale']['cloneTo'](_0x10e9f6), _0x3145cd['localPosit' + 'ion'] = _0x22170d, _0x3145cd['localRotat' + 'ion'] = _0x441ef1, _0x3145cd['localScale'] = _0x10e9f6;
            }
        }
        ['clone']() {
            var _0xa69e29 = new _0x3e6973();
            return this['cloneTo'](_0xa69e29), _0xa69e29;
        }
        ['_cloneNati' + 've'](_0x5d14c6, _0x6544c8, _0x5dd0f3, _0x194a59, _0x14a777, _0x24cdd, _0x52a87a) {
            var _0x193196 = _0x52a87a['_nativeCur' + 'CloneCount'];
            _0x14a777[_0x193196] = _0x24cdd;
            var _0x23f32d = new Float32Array(_0x5d14c6['buffer'], 0x3 * _0x193196 * 0x4, 0x3), _0x203054 = new Float32Array(_0x6544c8['buffer'], 0x4 * _0x193196 * 0x4, 0x4), _0x5d0c48 = new Float32Array(_0x5dd0f3['buffer'], 0x3 * _0x193196 * 0x4, 0x3), _0x5ca355 = new Float32Array(_0x194a59['buffer'], 0x10 * _0x193196 * 0x4, 0x10), _0x5f3408 = new _0x3e6973(_0x23f32d, _0x203054, _0x5d0c48, _0x5ca355);
            return _0x5f3408['_worldMatr' + 'ixIndex'] = _0x193196, this['_cloneToNa' + 'tive'](_0x5f3408, _0x5d14c6, _0x6544c8, _0x5dd0f3, _0x194a59, _0x14a777, _0x193196, _0x52a87a), _0x5f3408;
        }
        ['_cloneToNa' + 'tive'](_0x909f1c, _0x3b7457, _0xe36bc6, _0x515758, _0x3bcf33, _0x383443, _0x3b724d, _0x5f3f67) {
            var _0x2cc160 = _0x909f1c;
            _0x2cc160['name'] = this['name'];
            for (var _0x4e2def = 0x0, _0x63af17 = this['_children']['length']; _0x4e2def < _0x63af17; _0x4e2def++) {
                var _0x25ffcc = this['_children'][_0x4e2def];
                _0x5f3f67['_nativeCur' + 'CloneCount']++;
                var _0x296cf8 = _0x25ffcc['_cloneNati' + 've'](_0x3b7457, _0xe36bc6, _0x515758, _0x3bcf33, _0x383443, _0x3b724d, _0x5f3f67);
                _0x2cc160['addChild'](_0x296cf8);
                var _0x28507d = _0x25ffcc['transform'], _0x3ee137 = _0x296cf8['transform'], _0x3e4f80 = _0x3ee137['localPosit' + 'ion'], _0x2fde18 = _0x3ee137['localRotat' + 'ion'], _0xc9f67d = _0x3ee137['localScale'];
                _0x28507d['localPosit' + 'ion']['cloneTo'](_0x3e4f80), _0x28507d['localRotat' + 'ion']['cloneTo'](_0x2fde18), _0x28507d['localScale']['cloneTo'](_0xc9f67d), _0x3ee137['localPosit' + 'ion'] = _0x3e4f80, _0x3ee137['localRotat' + 'ion'] = _0x2fde18, _0x3ee137['localScale'] = _0xc9f67d;
            }
        }
    }
    class _0x2f0a3d extends _0x33d6e0['Resource'] {
        constructor() {
            super(), this['_nativeNod' + 'eCount'] = 0x0, this['_nativeCur' + 'CloneCount'] = 0x0;
        }
        static ['_parse'](_0x4db6de, _0x371a92 = null, _0x230cb2 = null) {
            var _0x2a924b = new _0x2f0a3d();
            if (_0x2a924b['_rootNode'] = new _0x3e6973(new Float32Array(0x3), new Float32Array(0x4), new Float32Array(0x3), new Float32Array(0x10)), _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && _0x2a924b['_nativeNod' + 'eCount']++, _0x4db6de['version']) {
                var _0x361cd2 = _0x4db6de['rootNode'];
                _0x361cd2 && _0x2a924b['_parseNode'](_0x361cd2, _0x2a924b['_rootNode']);
            }
            return _0x2a924b;
        }
        static ['load'](_0x3b2848, _0x412f2e) {
            _0x33d6e0['ILaya']['loader']['create'](_0x3b2848, _0x412f2e, null, _0x2f0a3d['AVATAR']);
        }
        ['_initClone' + 'ToAnimator'](_0x39c379, _0x1568ea) {
            _0x1568ea['_avatarNod' + 'eMap'][_0x39c379['name']] = _0x39c379;
            for (var _0xe40952 = 0x0, _0x481401 = _0x39c379['getChildCo' + 'unt'](); _0xe40952 < _0x481401; _0xe40952++)
                this['_initClone' + 'ToAnimator'](_0x39c379['getChildBy' + 'Index'](_0xe40952), _0x1568ea);
        }
        ['_parseNode'](_0x5f0499, _0x1dc3ae) {
            var _0x17b43b = _0x5f0499['props']['name'];
            _0x1dc3ae['name'] = _0x17b43b;
            var _0x3f6cd2 = _0x5f0499['props'], _0x437546 = _0x1dc3ae['transform'], _0x107ba0 = _0x437546['localPosit' + 'ion'], _0x5cbe55 = _0x437546['localRotat' + 'ion'], _0x3f3c33 = _0x437546['localScale'];
            _0x107ba0['fromArray'](_0x3f6cd2['translate']), _0x5cbe55['fromArray'](_0x3f6cd2['rotation']), _0x3f3c33['fromArray'](_0x3f6cd2['scale']), _0x437546['localPosit' + 'ion'] = _0x107ba0, _0x437546['localRotat' + 'ion'] = _0x5cbe55, _0x437546['localScale'] = _0x3f3c33;
            for (var _0x21ed76 = _0x5f0499['child'], _0x378530 = 0x0, _0x1cde7c = _0x21ed76['length']; _0x378530 < _0x1cde7c; _0x378530++) {
                var _0x43f151 = _0x21ed76[_0x378530], _0x242254 = new _0x3e6973(new Float32Array(0x3), new Float32Array(0x4), new Float32Array(0x3), new Float32Array(0x10));
                _0x1dc3ae['addChild'](_0x242254), _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] && this['_nativeNod' + 'eCount']++, this['_parseNode'](_0x43f151, _0x242254);
            }
        }
        ['_cloneData' + 'sToAnimato' + 'r'](_0x26523b) {
            var _0x54edd1;
            _0x54edd1 = this['_rootNode']['clone']();
            var _0x404ada = this['_rootNode']['transform'], _0x1bd5ad = _0x54edd1['transform'], _0x2f864c = _0x1bd5ad['localPosit' + 'ion'], _0x1e34ee = _0x1bd5ad['localRotat' + 'ion'], _0x84ae3d = _0x1bd5ad['localScale'];
            _0x404ada['localPosit' + 'ion']['cloneTo'](_0x2f864c), _0x404ada['localRotat' + 'ion']['cloneTo'](_0x1e34ee), _0x404ada['localScale']['cloneTo'](_0x84ae3d), _0x1bd5ad['localPosit' + 'ion'] = _0x2f864c, _0x1bd5ad['localRotat' + 'ion'] = _0x1e34ee, _0x1bd5ad['localScale'] = _0x84ae3d, _0x26523b['_avatarNod' + 'eMap'] = {}, this['_initClone' + 'ToAnimator'](_0x54edd1, _0x26523b);
        }
        ['cloneTo'](_0x4b4fd2) {
            var _0x57151b = _0x4b4fd2, _0x138b43 = this['_rootNode']['clone']();
            _0x57151b['_rootNode'] = _0x138b43;
        }
        ['clone']() {
            var _0x3af125 = new _0x2f0a3d();
            return this['cloneTo'](_0x3af125), _0x3af125;
        }
        ['_cloneData' + 'sToAnimato' + 'rNative'](_0x19d8ed) {
            var _0x1a611e = new Float32Array(0x3 * this['_nativeNod' + 'eCount']), _0x1d8c89 = new Float32Array(0x4 * this['_nativeNod' + 'eCount']), _0x1c4ef2 = new Float32Array(0x3 * this['_nativeNod' + 'eCount']), _0x4e765f = new Float32Array(0x10 * this['_nativeNod' + 'eCount']), _0x1bca53 = new Int16Array(this['_nativeNod' + 'eCount']);
            _0x19d8ed['_animation' + 'NodeLocalP' + 'ositions'] = _0x1a611e, _0x19d8ed['_animation' + 'NodeLocalR' + 'otations'] = _0x1d8c89, _0x19d8ed['_animation' + 'NodeLocalS' + 'cales'] = _0x1c4ef2, _0x19d8ed['_animation' + 'NodeWorldM' + 'atrixs'] = _0x4e765f, _0x19d8ed['_animation' + 'NodeParent' + 'Indices'] = _0x1bca53, this['_nativeCur' + 'CloneCount'] = 0x0;
            var _0x4fe767 = this['_rootNode']['_cloneNati' + 've'](_0x1a611e, _0x1d8c89, _0x1c4ef2, _0x4e765f, _0x1bca53, -0x1, this), _0x427c9c = this['_rootNode']['transform'], _0x42aedb = _0x4fe767['transform'], _0x5d5888 = _0x42aedb['localPosit' + 'ion'], _0x3d7bc5 = _0x42aedb['localRotat' + 'ion'], _0x263a8b = _0x42aedb['localScale'];
            _0x427c9c['localPosit' + 'ion']['cloneTo'](_0x5d5888), _0x427c9c['localRotat' + 'ion']['cloneTo'](_0x3d7bc5), _0x427c9c['localScale']['cloneTo'](_0x263a8b), _0x42aedb['localPosit' + 'ion'] = _0x5d5888, _0x42aedb['localRotat' + 'ion'] = _0x3d7bc5, _0x42aedb['localScale'] = _0x263a8b, _0x19d8ed['_avatarNod' + 'eMap'] = {}, this['_initClone' + 'ToAnimator'](_0x4fe767, _0x19d8ed);
        }
    }
    _0x2f0a3d['AVATAR'] = 'AVATAR';
    class _0x18b0d4 extends _0x33d6e0['Resource'] {
        constructor() {
            super(), this['_shaderVal' + 'ues'] = null, this['_disablePu' + 'blicDefine' + 'Datas'] = new _0x5f373b(), this['_shaderVal' + 'ues'] = new _0x4ac605(this), this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['_alphaTest'] = !0x1;
        }
        static ['load'](_0x26235c, _0x4926f8) {
            _0x33d6e0['Laya']['loader']['create'](_0x26235c, _0x4926f8, null, _0x18b0d4['MATERIAL']);
        }
        static ['__initDefi' + 'ne__']() {
            _0x18b0d4['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = _0x1ede74['getDefineB' + 'yName']('ALPHATEST');
        }
        static ['_parse'](_0xc3ec34, _0x2d6deb = null, _0x15915e = null) {
            var _0x345e5b, _0x507dc1 = _0xc3ec34, _0x1c0225 = _0x507dc1['props'], _0x40c55b = _0x1c0225['type'], _0xe9d29f = _0x33d6e0['ClassUtils']['getRegClas' + 's'](_0x40c55b);
            if (!_0xe9d29f)
                throw '_getSprite' + '3DHierarch' + 'yInnerUrls' + '\x20错误:\x20' + _0xc3ec34['type'] + '\x20不是类';
            switch (_0x345e5b = new _0xe9d29f(), _0x507dc1['version']) {
            case 'LAYAMATERI' + 'AL:01':
            case 'LAYAMATERI' + 'AL:02':
                var _0x5c78c6, _0x378240;
                for (var _0x4da7b1 in _0x1c0225)
                    switch (_0x4da7b1) {
                    case 'vectors':
                        var _0x15ce74 = _0x1c0225[_0x4da7b1];
                        for (_0x5c78c6 = 0x0, _0x378240 = _0x15ce74['length']; _0x5c78c6 < _0x378240; _0x5c78c6++) {
                            var _0x1b8785 = _0x15ce74[_0x5c78c6], _0x33cb46 = _0x1b8785['value'];
                            switch (_0x33cb46['length']) {
                            case 0x2:
                                _0x345e5b[_0x1b8785['name']] = new _0x4c44b6(_0x33cb46[0x0], _0x33cb46[0x1]);
                                break;
                            case 0x3:
                                _0x345e5b[_0x1b8785['name']] = new _0x4795b3(_0x33cb46[0x0], _0x33cb46[0x1], _0x33cb46[0x2]);
                                break;
                            case 0x4:
                                _0x345e5b[_0x1b8785['name']] = new _0x333f41(_0x33cb46[0x0], _0x33cb46[0x1], _0x33cb46[0x2], _0x33cb46[0x3]);
                                break;
                            default:
                                throw new Error('BaseMateri' + 'al:unkonwn' + '\x20color\x20len' + 'gth.');
                            }
                        }
                        break;
                    case 'textures':
                        var _0xc6cf9c = _0x1c0225[_0x4da7b1];
                        for (_0x5c78c6 = 0x0, _0x378240 = _0xc6cf9c['length']; _0x5c78c6 < _0x378240; _0x5c78c6++) {
                            var _0x2af26b = _0xc6cf9c[_0x5c78c6], _0x29bd9c = _0x2af26b['path'];
                            _0x29bd9c && (_0x345e5b[_0x2af26b['name']] = _0x33d6e0['Loader']['getRes'](_0x29bd9c));
                        }
                        break;
                    case 'defines':
                        var _0x1719e0 = _0x1c0225[_0x4da7b1];
                        for (_0x5c78c6 = 0x0, _0x378240 = _0x1719e0['length']; _0x5c78c6 < _0x378240; _0x5c78c6++) {
                            var _0x54b197 = _0x1ede74['getDefineB' + 'yName'](_0x1719e0[_0x5c78c6]);
                            _0x345e5b['_shaderVal' + 'ues']['addDefine'](_0x54b197);
                        }
                        break;
                    case 'renderStat' + 'es':
                        var _0x4bf2e0 = _0x1c0225[_0x4da7b1][0x0], _0x2b30cc = _0x345e5b;
                        _0x2b30cc['blend'] = _0x4bf2e0['blend'], _0x2b30cc['cull'] = _0x4bf2e0['cull'], _0x2b30cc['depthTest'] = _0x4bf2e0['depthTest'], _0x2b30cc['depthWrite'] = _0x4bf2e0['depthWrite'], _0x2b30cc['blendSrc'] = _0x4bf2e0['srcBlend'], _0x2b30cc['blendDst'] = _0x4bf2e0['dstBlend'];
                        break;
                    case 'cull':
                        _0x345e5b['cull'] = _0x1c0225[_0x4da7b1];
                        break;
                    case 'blend':
                        _0x345e5b['blend'] = _0x1c0225[_0x4da7b1];
                        break;
                    case 'depthWrite':
                        _0x345e5b['depthWrite'] = _0x1c0225[_0x4da7b1];
                        break;
                    case 'srcBlend':
                        _0x345e5b['blendSrc'] = _0x1c0225[_0x4da7b1];
                        break;
                    case 'dstBlend':
                        _0x345e5b['blendDst'] = _0x1c0225[_0x4da7b1];
                        break;
                    default:
                        _0x345e5b[_0x4da7b1] = _0x1c0225[_0x4da7b1];
                    }
                break;
            default:
                throw new Error('BaseMateri' + 'al:unkonwn' + '\x20version.');
            }
            return _0x345e5b;
        }
        get ['shaderData']() {
            return this['_shaderVal' + 'ues'];
        }
        get ['alphaTestV' + 'alue']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x18b0d4['ALPHATESTV' + 'ALUE']);
        }
        set ['alphaTestV' + 'alue'](_0x6d4f4c) {
            this['_shaderVal' + 'ues']['setNumber'](_0x18b0d4['ALPHATESTV' + 'ALUE'], _0x6d4f4c);
        }
        get ['alphaTest']() {
            return this['_alphaTest'];
        }
        set ['alphaTest'](_0x24547a) {
            this['_alphaTest'] = _0x24547a, _0x24547a ? this['_shaderVal' + 'ues']['addDefine'](_0x18b0d4['SHADERDEFI' + 'NE_ALPHATE' + 'ST']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x18b0d4['SHADERDEFI' + 'NE_ALPHATE' + 'ST']);
        }
        ['_removeTet' + 'xureRefere' + 'nce']() {
            var _0x5a1ba1 = this['_shaderVal' + 'ues']['getData']();
            for (var _0x448a1b in _0x5a1ba1) {
                var _0x4a99e2 = _0x5a1ba1[_0x448a1b];
                _0x4a99e2 && _0x4a99e2 instanceof _0x33d6e0['BaseTextur' + 'e'] && _0x4a99e2['_removeRef' + 'erence']();
            }
        }
        ['_disposeRe' + 'source']() {
            this['_reference' + 'Count'] > 0x0 && this['_removeTet' + 'xureRefere' + 'nce'](), this['_shaderVal' + 'ues'] = null;
        }
        ['_addRefere' + 'nce'](_0x50d0f6 = 0x1) {
            super['_addRefere' + 'nce'](_0x50d0f6);
            var _0x17e36f = this['_shaderVal' + 'ues']['getData']();
            for (var _0xc184e7 in _0x17e36f) {
                var _0x5e2613 = _0x17e36f[_0xc184e7];
                _0x5e2613 && _0x5e2613 instanceof _0x33d6e0['BaseTextur' + 'e'] && _0x5e2613['_addRefere' + 'nce']();
            }
        }
        ['_removeRef' + 'erence'](_0x2ce237 = 0x1) {
            super['_removeRef' + 'erence'](_0x2ce237), this['_removeTet' + 'xureRefere' + 'nce']();
        }
        ['setShaderN' + 'ame'](_0x381321) {
            if (this['_shader'] = _0x1ede74['find'](_0x381321), !this['_shader'])
                throw new Error('BaseMateri' + 'al:\x20unknow' + 'n\x20shader\x20n' + 'ame.');
        }
        ['cloneTo'](_0x2c1e93) {
            var _0x4a234c = _0x2c1e93;
            _0x4a234c['name'] = this['name'], _0x4a234c['renderQueu' + 'e'] = this['renderQueu' + 'e'], this['_disablePu' + 'blicDefine' + 'Datas']['cloneTo'](_0x4a234c['_disablePu' + 'blicDefine' + 'Datas']), this['_shaderVal' + 'ues']['cloneTo'](_0x4a234c['_shaderVal' + 'ues']);
        }
        ['clone']() {
            var _0x275306 = new _0x18b0d4();
            return this['cloneTo'](_0x275306), _0x275306;
        }
        get ['_defineDat' + 'as']() {
            return this['_shaderVal' + 'ues']['_defineDat' + 'as'];
        }
    }
    _0x18b0d4['MATERIAL'] = 'MATERIAL', _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'] = 0x7d0, _0x18b0d4['RENDERQUEU' + 'E_ALPHATES' + 'T'] = 0x992, _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'] = 0xbb8, _0x18b0d4['ALPHATESTV' + 'ALUE'] = _0x1ede74['propertyNa' + 'meToID']('u_AlphaTes' + 'tValue'), _0x18b0d4['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = null;
    class _0xf76038 {
        static ['load'](_0x32abc4, _0x4df714) {
            _0x33d6e0['Laya']['loader']['create'](_0x32abc4, _0x4df714, null, _0x18b0d4['MATERIAL']);
        }
        static ['__initDefi' + 'ne__']() {
            _0xf76038['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = _0x18b0d4['SHADERDEFI' + 'NE_ALPHATE' + 'ST'];
        }
    }
    _0xf76038['MATERIAL'] = 'MATERIAL', _0xf76038['RENDERQUEU' + 'E_OPAQUE'] = 0x7d0, _0xf76038['RENDERQUEU' + 'E_ALPHATES' + 'T'] = 0x992, _0xf76038['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'] = 0xbb8, _0xf76038['ALPHATESTV' + 'ALUE'] = _0x1ede74['propertyNa' + 'meToID']('u_AlphaTes' + 'tValue'), _0xf76038['SHADERDEFI' + 'NE_ALPHATE' + 'ST'] = null;
    class _0x311294 {
    }
    class _0x311b27 {
        constructor() {
            this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['srcBlend'] = _0x311b27['BLENDPARAM' + '_ONE'], this['dstBlend'] = _0x311b27['BLENDPARAM' + '_ZERO'], this['srcBlendRG' + 'B'] = _0x311b27['BLENDPARAM' + '_ONE'], this['dstBlendRG' + 'B'] = _0x311b27['BLENDPARAM' + '_ZERO'], this['srcBlendAl' + 'pha'] = _0x311b27['BLENDPARAM' + '_ONE'], this['dstBlendAl' + 'pha'] = _0x311b27['BLENDPARAM' + '_ZERO'], this['blendConst' + 'Color'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['blendEquat' + 'ion'] = _0x311b27['BLENDEQUAT' + 'ION_ADD'], this['blendEquat' + 'ionRGB'] = _0x311b27['BLENDEQUAT' + 'ION_ADD'], this['blendEquat' + 'ionAlpha'] = _0x311b27['BLENDEQUAT' + 'ION_ADD'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LEQUAL'], this['depthWrite'] = !0x0;
        }
        ['cloneTo'](_0x269127) {
            var _0x3760fb = _0x269127;
            _0x3760fb['cull'] = this['cull'], _0x3760fb['blend'] = this['blend'], _0x3760fb['srcBlend'] = this['srcBlend'], _0x3760fb['dstBlend'] = this['dstBlend'], _0x3760fb['srcBlendRG' + 'B'] = this['srcBlendRG' + 'B'], _0x3760fb['dstBlendRG' + 'B'] = this['dstBlendRG' + 'B'], _0x3760fb['srcBlendAl' + 'pha'] = this['srcBlendAl' + 'pha'], _0x3760fb['dstBlendAl' + 'pha'] = this['dstBlendAl' + 'pha'], this['blendConst' + 'Color']['cloneTo'](_0x3760fb['blendConst' + 'Color']), _0x3760fb['blendEquat' + 'ion'] = this['blendEquat' + 'ion'], _0x3760fb['blendEquat' + 'ionRGB'] = this['blendEquat' + 'ionRGB'], _0x3760fb['blendEquat' + 'ionAlpha'] = this['blendEquat' + 'ionAlpha'], _0x3760fb['depthTest'] = this['depthTest'], _0x3760fb['depthWrite'] = this['depthWrite'];
        }
        ['clone']() {
            var _0x24f377 = new _0x311b27();
            return this['cloneTo'](_0x24f377), _0x24f377;
        }
    }
    _0x311b27['CULL_NONE'] = 0x0, _0x311b27['CULL_FRONT'] = 0x1, _0x311b27['CULL_BACK'] = 0x2, _0x311b27['BLEND_DISA' + 'BLE'] = 0x0, _0x311b27['BLEND_ENAB' + 'LE_ALL'] = 0x1, _0x311b27['BLEND_ENAB' + 'LE_SEPERAT' + 'E'] = 0x2, _0x311b27['BLENDPARAM' + '_ZERO'] = 0x0, _0x311b27['BLENDPARAM' + '_ONE'] = 0x1, _0x311b27['BLENDPARAM' + '_SRC_COLOR'] = 0x300, _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_COLOR'] = 0x301, _0x311b27['BLENDPARAM' + '_DST_COLOR'] = 0x306, _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_DST_COLOR'] = 0x307, _0x311b27['BLENDPARAM' + '_SRC_ALPHA'] = 0x302, _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'] = 0x303, _0x311b27['BLENDPARAM' + '_DST_ALPHA'] = 0x304, _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_DST_ALPHA'] = 0x305, _0x311b27['BLENDPARAM' + '_SRC_ALPHA' + '_SATURATE'] = 0x308, _0x311b27['BLENDEQUAT' + 'ION_ADD'] = 0x8006, _0x311b27['BLENDEQUAT' + 'ION_SUBTRA' + 'CT'] = 0x800a, _0x311b27['BLENDEQUAT' + 'ION_REVERS' + 'E_SUBTRACT'] = 0x800b, _0x311b27['DEPTHTEST_' + 'OFF'] = 0x0, _0x311b27['DEPTHTEST_' + 'NEVER'] = 0x200, _0x311b27['DEPTHTEST_' + 'LESS'] = 0x201, _0x311b27['DEPTHTEST_' + 'EQUAL'] = 0x202, _0x311b27['DEPTHTEST_' + 'LEQUAL'] = 0x203, _0x311b27['DEPTHTEST_' + 'GREATER'] = 0x204, _0x311b27['DEPTHTEST_' + 'NOTEQUAL'] = 0x205, _0x311b27['DEPTHTEST_' + 'GEQUAL'] = 0x206, _0x311b27['DEPTHTEST_' + 'ALWAYS'] = 0x207;
    class _0x565ea0 extends _0x18b0d4 {
        constructor() {
            super(), this['_enableVer' + 'texColor'] = !0x1, this['setShaderN' + 'ame']('BLINNPHONG'), this['_albedoInt' + 'ensity'] = 0x1, this['_albedoCol' + 'or'] = new _0x333f41(0x1, 0x1, 0x1, 0x1);
            var _0x3be0f8 = this['_shaderVal' + 'ues'];
            _0x3be0f8['setVector'](_0x565ea0['ALBEDOCOLO' + 'R'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), _0x3be0f8['setVector'](_0x565ea0['MATERIALSP' + 'ECULAR'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), _0x3be0f8['setNumber'](_0x565ea0['SHININESS'], 0.078125), _0x3be0f8['setNumber'](_0x18b0d4['ALPHATESTV' + 'ALUE'], 0.5), _0x3be0f8['setVector'](_0x565ea0['TILINGOFFS' + 'ET'], new _0x333f41(0x1, 0x1, 0x0, 0x0)), this['_enableLig' + 'hting'] = !0x0, this['renderMode'] = _0x565ea0['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x565ea0['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP'] = _0x1ede74['getDefineB' + 'yName']('DIFFUSEMAP'), _0x565ea0['SHADERDEFI' + 'NE_NORMALM' + 'AP'] = _0x1ede74['getDefineB' + 'yName']('NORMALMAP'), _0x565ea0['SHADERDEFI' + 'NE_SPECULA' + 'RMAP'] = _0x1ede74['getDefineB' + 'yName']('SPECULARMA' + 'P'), _0x565ea0['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x565ea0['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR'] = _0x1ede74['getDefineB' + 'yName']('ENABLEVERT' + 'EXCOLOR');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x8eef4b) {
            this['_albedoCol' + 'or']['x'] = _0x8eef4b, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x24e9c8) {
            this['_albedoCol' + 'or']['y'] = _0x24e9c8, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x40bd7a) {
            this['_albedoCol' + 'or']['z'] = _0x40bd7a, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x7afd1) {
            this['_albedoCol' + 'or']['w'] = _0x7afd1, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_SpecColor' + 'R']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['x'];
        }
        set ['_SpecColor' + 'R'](_0xfe9b9c) {
            this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['x'] = _0xfe9b9c;
        }
        get ['_SpecColor' + 'G']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['y'];
        }
        set ['_SpecColor' + 'G'](_0x1c1317) {
            this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['y'] = _0x1c1317;
        }
        get ['_SpecColor' + 'B']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['z'];
        }
        set ['_SpecColor' + 'B'](_0x505e8a) {
            this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['z'] = _0x505e8a;
        }
        get ['_SpecColor' + 'A']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['w'];
        }
        set ['_SpecColor' + 'A'](_0x17af2f) {
            this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR'])['w'] = _0x17af2f;
        }
        get ['_AlbedoInt' + 'ensity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['_AlbedoInt' + 'ensity'](_0x52d252) {
            if (this['_albedoInt' + 'ensity'] !== _0x52d252) {
                var _0x3bae33 = this['_shaderVal' + 'ues']['getVector'](_0x565ea0['ALBEDOCOLO' + 'R']);
                _0x333f41['scale'](this['_albedoCol' + 'or'], _0x52d252, _0x3bae33), this['_albedoInt' + 'ensity'] = _0x52d252, this['_shaderVal' + 'ues']['setVector'](_0x565ea0['ALBEDOCOLO' + 'R'], _0x3bae33);
            }
        }
        get ['_Shininess']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x565ea0['SHININESS']);
        }
        set ['_Shininess'](_0x1e7c4a) {
            _0x1e7c4a = Math['max'](0x0, Math['min'](0x1, _0x1e7c4a)), this['_shaderVal' + 'ues']['setNumber'](_0x565ea0['SHININESS'], _0x1e7c4a);
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x11d87f) {
            var _0x38e308 = this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET']);
            _0x38e308['x'] = _0x11d87f, this['tilingOffs' + 'et'] = _0x38e308;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x2c2c8b) {
            var _0x3e3109 = this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET']);
            _0x3e3109['y'] = _0x2c2c8b, this['tilingOffs' + 'et'] = _0x3e3109;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x30b689) {
            var _0x1090af = this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET']);
            _0x1090af['z'] = _0x30b689, this['tilingOffs' + 'et'] = _0x1090af;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x44fdf7) {
            var _0x35c18f = this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET']);
            _0x35c18f['w'] = _0x44fdf7, this['tilingOffs' + 'et'] = _0x35c18f;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x4d7d36) {
            this['alphaTestV' + 'alue'] = _0x4d7d36;
        }
        set ['renderMode'](_0x17d924) {
            switch (_0x17d924) {
            case _0x565ea0['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            case _0x565ea0['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            case _0x565ea0['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            default:
                throw new Error('Material:r' + 'enderMode\x20' + 'value\x20erro' + 'r.');
            }
        }
        get ['enableVert' + 'exColor']() {
            return this['_enableVer' + 'texColor'];
        }
        set ['enableVert' + 'exColor'](_0x2b70b9) {
            this['_enableVer' + 'texColor'] = _0x2b70b9, _0x2b70b9 ? this['_shaderVal' + 'ues']['addDefine'](_0x565ea0['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x565ea0['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x1aed3d) {
            this['_MainTex_S' + 'TX'] = _0x1aed3d;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x4cb36b) {
            this['_MainTex_S' + 'TY'] = _0x4cb36b;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x2db5dc) {
            this['_MainTex_S' + 'TZ'] = _0x2db5dc;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x2543d1) {
            this['_MainTex_S' + 'TW'] = _0x2543d1;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x288c78) {
            _0x288c78 && (0x1 != _0x288c78['x'] || 0x1 != _0x288c78['y'] || 0x0 != _0x288c78['z'] || 0x0 != _0x288c78['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x565ea0['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x565ea0['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x565ea0['TILINGOFFS' + 'ET'], _0x288c78);
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x452d26) {
            this['_ColorR'] = _0x452d26;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x43a3cc) {
            this['_ColorG'] = _0x43a3cc;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x1dee30) {
            this['_ColorB'] = _0x1dee30;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0x3e9f8a) {
            this['_ColorA'] = _0x3e9f8a;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x3aff99) {
            var _0x5084c7 = this['_shaderVal' + 'ues']['getVector'](_0x565ea0['ALBEDOCOLO' + 'R']);
            _0x333f41['scale'](_0x3aff99, this['_albedoInt' + 'ensity'], _0x5084c7), this['_albedoCol' + 'or'] = _0x3aff99, this['_shaderVal' + 'ues']['setVector'](_0x565ea0['ALBEDOCOLO' + 'R'], _0x5084c7);
        }
        get ['albedoInte' + 'nsity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['albedoInte' + 'nsity'](_0x1c6c94) {
            this['_AlbedoInt' + 'ensity'] = _0x1c6c94;
        }
        get ['specularCo' + 'lorR']() {
            return this['_SpecColor' + 'R'];
        }
        set ['specularCo' + 'lorR'](_0x58350f) {
            this['_SpecColor' + 'R'] = _0x58350f;
        }
        get ['specularCo' + 'lorG']() {
            return this['_SpecColor' + 'G'];
        }
        set ['specularCo' + 'lorG'](_0x5df353) {
            this['_SpecColor' + 'G'] = _0x5df353;
        }
        get ['specularCo' + 'lorB']() {
            return this['_SpecColor' + 'B'];
        }
        set ['specularCo' + 'lorB'](_0x211720) {
            this['_SpecColor' + 'B'] = _0x211720;
        }
        get ['specularCo' + 'lorA']() {
            return this['_SpecColor' + 'A'];
        }
        set ['specularCo' + 'lorA'](_0x4c36e7) {
            this['_SpecColor' + 'A'] = _0x4c36e7;
        }
        get ['specularCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x565ea0['MATERIALSP' + 'ECULAR']);
        }
        set ['specularCo' + 'lor'](_0x4cef45) {
            this['_shaderVal' + 'ues']['setVector'](_0x565ea0['MATERIALSP' + 'ECULAR'], _0x4cef45);
        }
        get ['shininess']() {
            return this['_Shininess'];
        }
        set ['shininess'](_0x11564a) {
            this['_Shininess'] = _0x11564a;
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x565ea0['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x4d3ddf) {
            _0x4d3ddf ? this['_shaderVal' + 'ues']['addDefine'](_0x565ea0['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x565ea0['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']), this['_shaderVal' + 'ues']['setTexture'](_0x565ea0['ALBEDOTEXT' + 'URE'], _0x4d3ddf);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x565ea0['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x369a5a) {
            _0x369a5a ? this['_shaderVal' + 'ues']['addDefine'](_0x565ea0['SHADERDEFI' + 'NE_NORMALM' + 'AP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x565ea0['SHADERDEFI' + 'NE_NORMALM' + 'AP']), this['_shaderVal' + 'ues']['setTexture'](_0x565ea0['NORMALTEXT' + 'URE'], _0x369a5a);
        }
        get ['specularTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x565ea0['SPECULARTE' + 'XTURE']);
        }
        set ['specularTe' + 'xture'](_0x2c42da) {
            _0x2c42da ? this['_shaderVal' + 'ues']['addDefine'](_0x565ea0['SHADERDEFI' + 'NE_SPECULA' + 'RMAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x565ea0['SHADERDEFI' + 'NE_SPECULA' + 'RMAP']), this['_shaderVal' + 'ues']['setTexture'](_0x565ea0['SPECULARTE' + 'XTURE'], _0x2c42da);
        }
        get ['enableLigh' + 'ting']() {
            return this['_enableLig' + 'hting'];
        }
        set ['enableLigh' + 'ting'](_0x5998b7) {
            this['_enableLig' + 'hting'] !== _0x5998b7 && (_0x5998b7 ? (this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']), this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']), this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'])) : (this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']), this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']), this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'])), this['_enableLig' + 'hting'] = _0x5998b7);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x565ea0['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x391556) {
            this['_shaderVal' + 'ues']['setBool'](_0x565ea0['DEPTH_WRIT' + 'E'], _0x391556);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x565ea0['CULL']);
        }
        set ['cull'](_0x344739) {
            this['_shaderVal' + 'ues']['setInt'](_0x565ea0['CULL'], _0x344739);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x565ea0['BLEND']);
        }
        set ['blend'](_0x556643) {
            this['_shaderVal' + 'ues']['setInt'](_0x565ea0['BLEND'], _0x556643);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x565ea0['BLEND_SRC']);
        }
        set ['blendSrc'](_0x196c4f) {
            this['_shaderVal' + 'ues']['setInt'](_0x565ea0['BLEND_SRC'], _0x196c4f);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x565ea0['BLEND_DST']);
        }
        set ['blendDst'](_0x44f897) {
            this['_shaderVal' + 'ues']['setInt'](_0x565ea0['BLEND_DST'], _0x44f897);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x565ea0['DEPTH_TEST']);
        }
        set ['depthTest'](_0x27bdc6) {
            this['_shaderVal' + 'ues']['setInt'](_0x565ea0['DEPTH_TEST'], _0x27bdc6);
        }
        ['clone']() {
            var _0x4ff51a = new _0x565ea0();
            return this['cloneTo'](_0x4ff51a), _0x4ff51a;
        }
        ['cloneTo'](_0x1b732b) {
            super['cloneTo'](_0x1b732b);
            var _0x24ad1e = _0x1b732b;
            _0x24ad1e['_enableLig' + 'hting'] = this['_enableLig' + 'hting'], _0x24ad1e['_albedoInt' + 'ensity'] = this['_albedoInt' + 'ensity'], _0x24ad1e['_enableVer' + 'texColor'] = this['_enableVer' + 'texColor'], this['_albedoCol' + 'or']['cloneTo'](_0x24ad1e['_albedoCol' + 'or']);
        }
    }
    _0x565ea0['RENDERMODE' + '_OPAQUE'] = 0x0, _0x565ea0['RENDERMODE' + '_CUTOUT'] = 0x1, _0x565ea0['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x565ea0['ALBEDOTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseT' + 'exture'), _0x565ea0['NORMALTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x565ea0['SPECULARTE' + 'XTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Specular' + 'Texture'), _0x565ea0['ALBEDOCOLO' + 'R'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseC' + 'olor'), _0x565ea0['MATERIALSP' + 'ECULAR'] = _0x1ede74['propertyNa' + 'meToID']('u_Material' + 'Specular'), _0x565ea0['SHININESS'] = _0x1ede74['propertyNa' + 'meToID']('u_Shinines' + 's'), _0x565ea0['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x565ea0['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x565ea0['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x565ea0['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x565ea0['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x565ea0['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x565ea0['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x49239f extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('Effect'), this['_color'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0x49239f['TINTCOLOR'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x49239f['RENDERMODE' + '_ADDTIVE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x49239f['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x1ede74['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x49239f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x49239f['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x1ede74['getDefineB' + 'yName']('ADDTIVEFOG');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x459329) {
            this['_color']['x'] = _0x459329, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x676048) {
            this['_color']['y'] = _0x676048, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x57a4b6) {
            this['_color']['z'] = _0x57a4b6, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x427d33) {
            this['_color']['w'] = _0x427d33, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x239d10) {
            var _0x4319c0 = this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET']);
            _0x4319c0['x'] = _0x239d10, this['tilingOffs' + 'et'] = _0x4319c0;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x4f8cbf) {
            var _0x482a80 = this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET']);
            _0x482a80['y'] = _0x4f8cbf, this['tilingOffs' + 'et'] = _0x482a80;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x1f08db) {
            var _0x4b9441 = this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET']);
            _0x4b9441['z'] = _0x1f08db, this['tilingOffs' + 'et'] = _0x4b9441;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x2d82a1) {
            var _0x3c4153 = this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET']);
            _0x3c4153['w'] = _0x2d82a1, this['tilingOffs' + 'et'] = _0x3c4153;
        }
        set ['renderMode'](_0x2d99eb) {
            switch (_0x2d99eb) {
            case _0x49239f['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_NONE'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x49239f['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x49239f['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_NONE'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x49239f['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('MeshEffect' + 'Material\x20:' + '\x20renderMod' + 'e\x20value\x20er' + 'ror.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x44f9ff) {
            this['_TintColor' + 'R'] = _0x44f9ff;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x34908e) {
            this['_TintColor' + 'G'] = _0x34908e;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x53cf3c) {
            this['_TintColor' + 'B'] = _0x53cf3c;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x11fb4f) {
            this['_TintColor' + 'A'] = _0x11fb4f;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x49239f['TINTCOLOR']);
        }
        set ['color'](_0x40e7be) {
            this['_shaderVal' + 'ues']['setVector'](_0x49239f['TINTCOLOR'], _0x40e7be);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x49239f['MAINTEXTUR' + 'E']);
        }
        set ['texture'](_0x579fcf) {
            _0x579fcf ? this['_shaderVal' + 'ues']['addDefine'](_0x49239f['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x49239f['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']), this['_shaderVal' + 'ues']['setTexture'](_0x49239f['MAINTEXTUR' + 'E'], _0x579fcf);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x48b7e2) {
            this['_MainTex_S' + 'TX'] = _0x48b7e2;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x25ac6e) {
            this['_MainTex_S' + 'TY'] = _0x25ac6e;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x260b80) {
            this['_MainTex_S' + 'TZ'] = _0x260b80;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x52903f) {
            this['_MainTex_S' + 'TW'] = _0x52903f;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x49239f['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x35c11f) {
            _0x35c11f && (0x1 != _0x35c11f['x'] || 0x1 != _0x35c11f['y'] || 0x0 != _0x35c11f['z'] || 0x0 != _0x35c11f['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x49239f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x49239f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x49239f['TILINGOFFS' + 'ET'], _0x35c11f);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x49239f['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x463289) {
            this['_shaderVal' + 'ues']['setBool'](_0x49239f['DEPTH_WRIT' + 'E'], _0x463289);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x49239f['CULL']);
        }
        set ['cull'](_0x20077d) {
            this['_shaderVal' + 'ues']['setInt'](_0x49239f['CULL'], _0x20077d);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x49239f['BLEND']);
        }
        set ['blend'](_0x3e0381) {
            this['_shaderVal' + 'ues']['setInt'](_0x49239f['BLEND'], _0x3e0381);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x49239f['BLEND_SRC']);
        }
        set ['blendSrc'](_0x28275e) {
            this['_shaderVal' + 'ues']['setInt'](_0x49239f['BLEND_SRC'], _0x28275e);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x49239f['BLEND_DST']);
        }
        set ['blendDst'](_0x564e98) {
            this['_shaderVal' + 'ues']['setInt'](_0x49239f['BLEND_DST'], _0x564e98);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x49239f['DEPTH_TEST']);
        }
        set ['depthTest'](_0xd18f78) {
            this['_shaderVal' + 'ues']['setInt'](_0x49239f['DEPTH_TEST'], _0xd18f78);
        }
        ['clone']() {
            var _0x22cfd4 = new _0x49239f();
            return this['cloneTo'](_0x22cfd4), _0x22cfd4;
        }
    }
    _0x49239f['RENDERMODE' + '_ADDTIVE'] = 0x0, _0x49239f['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x1, _0x49239f['MAINTEXTUR' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x49239f['TINTCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x49239f['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x49239f['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x49239f['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x49239f['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x49239f['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x49239f['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x49239f['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x3c3770 extends _0x18b0d4 {
        constructor() {
            super(), this['_enableLig' + 'hting'] = !0x0, this['setShaderN' + 'ame']('ExtendTerr' + 'ain'), this['renderMode'] = _0x3c3770['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1'] = _0x1ede74['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM1'), _0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2'] = _0x1ede74['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM2'), _0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3'] = _0x1ede74['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM3'), _0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4'] = _0x1ede74['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM4'), _0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5'] = _0x1ede74['getDefineB' + 'yName']('ExtendTerr' + 'ain_DETAIL' + '_NUM5');
        }
        get ['splatAlpha' + 'Texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3c3770['SPLATALPHA' + 'TEXTURE']);
        }
        set ['splatAlpha' + 'Texture'](_0xc19dbe) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3c3770['SPLATALPHA' + 'TEXTURE'], _0xc19dbe);
        }
        get ['diffuseTex' + 'ture1']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3c3770['DIFFUSETEX' + 'TURE1']);
        }
        set ['diffuseTex' + 'ture1'](_0x5b62c6) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3c3770['DIFFUSETEX' + 'TURE1'], _0x5b62c6), this['_setDetail' + 'Num'](0x1);
        }
        get ['diffuseTex' + 'ture2']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3c3770['DIFFUSETEX' + 'TURE2']);
        }
        set ['diffuseTex' + 'ture2'](_0x5c100f) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3c3770['DIFFUSETEX' + 'TURE2'], _0x5c100f), this['_setDetail' + 'Num'](0x2);
        }
        get ['diffuseTex' + 'ture3']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3c3770['DIFFUSETEX' + 'TURE3']);
        }
        set ['diffuseTex' + 'ture3'](_0x24a900) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3c3770['DIFFUSETEX' + 'TURE3'], _0x24a900), this['_setDetail' + 'Num'](0x3);
        }
        get ['diffuseTex' + 'ture4']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3c3770['DIFFUSETEX' + 'TURE4']);
        }
        set ['diffuseTex' + 'ture4'](_0x4d2190) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3c3770['DIFFUSETEX' + 'TURE4'], _0x4d2190), this['_setDetail' + 'Num'](0x4);
        }
        get ['diffuseTex' + 'ture5']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3c3770['DIFFUSETEX' + 'TURE5']);
        }
        set ['diffuseTex' + 'ture5'](_0x1d0663) {
            this['_shaderVal' + 'ues']['setTexture'](_0x3c3770['DIFFUSETEX' + 'TURE5'], _0x1d0663), this['_setDetail' + 'Num'](0x5);
        }
        set ['diffuseSca' + 'leOffset1'](_0x363e07) {
            this['_shaderVal' + 'ues']['setVector'](_0x3c3770['DIFFUSESCA' + 'LEOFFSET1'], _0x363e07);
        }
        set ['diffuseSca' + 'leOffset2'](_0xb8845d) {
            this['_shaderVal' + 'ues']['setVector'](_0x3c3770['DIFFUSESCA' + 'LEOFFSET2'], _0xb8845d);
        }
        set ['diffuseSca' + 'leOffset3'](_0xcccf86) {
            this['_shaderVal' + 'ues']['setVector'](_0x3c3770['DIFFUSESCA' + 'LEOFFSET3'], _0xcccf86);
        }
        set ['diffuseSca' + 'leOffset4'](_0x424e1a) {
            this['_shaderVal' + 'ues']['setVector'](_0x3c3770['DIFFUSESCA' + 'LEOFFSET4'], _0x424e1a);
        }
        set ['diffuseSca' + 'leOffset5'](_0x4b9d6d) {
            this['_shaderVal' + 'ues']['setVector'](_0x3c3770['DIFFUSESCA' + 'LEOFFSET5'], _0x4b9d6d);
        }
        get ['enableLigh' + 'ting']() {
            return this['_enableLig' + 'hting'];
        }
        set ['enableLigh' + 'ting'](_0x22bc36) {
            this['_enableLig' + 'hting'] !== _0x22bc36 && (_0x22bc36 ? (this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']), this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']), this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'])) : (this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']), this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']), this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'])), this['_enableLig' + 'hting'] = _0x22bc36);
        }
        set ['renderMode'](_0x458518) {
            switch (_0x458518) {
            case _0x3c3770['RENDERMODE' + '_OPAQUE']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            case _0x3c3770['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LEQUAL'];
                break;
            default:
                throw new Error('ExtendTerr' + 'ainMateria' + 'l:renderMo' + 'de\x20value\x20e' + 'rror.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x3c3770['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x41fe12) {
            this['_shaderVal' + 'ues']['setBool'](_0x3c3770['DEPTH_WRIT' + 'E'], _0x41fe12);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3c3770['CULL']);
        }
        set ['cull'](_0x80b5de) {
            this['_shaderVal' + 'ues']['setInt'](_0x3c3770['CULL'], _0x80b5de);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3c3770['BLEND']);
        }
        set ['blend'](_0x3e9bf4) {
            this['_shaderVal' + 'ues']['setInt'](_0x3c3770['BLEND'], _0x3e9bf4);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3c3770['BLEND_SRC']);
        }
        set ['blendSrc'](_0x4110d5) {
            this['_shaderVal' + 'ues']['setInt'](_0x3c3770['BLEND_SRC'], _0x4110d5);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3c3770['BLEND_DST']);
        }
        set ['blendDst'](_0xb8d858) {
            this['_shaderVal' + 'ues']['setInt'](_0x3c3770['BLEND_DST'], _0xb8d858);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3c3770['DEPTH_TEST']);
        }
        set ['depthTest'](_0x4fa8be) {
            this['_shaderVal' + 'ues']['setInt'](_0x3c3770['DEPTH_TEST'], _0x4fa8be);
        }
        ['_setDetail' + 'Num'](_0x4892e8) {
            switch (_0x4892e8) {
            case 0x1:
                this['_shaderVal' + 'ues']['addDefine'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x2:
                this['_shaderVal' + 'ues']['addDefine'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x3:
                this['_shaderVal' + 'ues']['addDefine'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x4:
                this['_shaderVal' + 'ues']['addDefine'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']);
                break;
            case 0x5:
                this['_shaderVal' + 'ues']['addDefine'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM5']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM1']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM2']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM3']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3c3770['SHADERDEFI' + 'NE_DETAIL_' + 'NUM4']);
            }
        }
        ['clone']() {
            var _0x2d39cb = new _0x3c3770();
            return this['cloneTo'](_0x2d39cb), _0x2d39cb;
        }
    }
    _0x3c3770['RENDERMODE' + '_OPAQUE'] = 0x1, _0x3c3770['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x3c3770['SPLATALPHA' + 'TEXTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_SplatAlp' + 'haTexture'), _0x3c3770['DIFFUSETEX' + 'TURE1'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseT' + 'exture1'), _0x3c3770['DIFFUSETEX' + 'TURE2'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseT' + 'exture2'), _0x3c3770['DIFFUSETEX' + 'TURE3'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseT' + 'exture3'), _0x3c3770['DIFFUSETEX' + 'TURE4'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseT' + 'exture4'), _0x3c3770['DIFFUSETEX' + 'TURE5'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseT' + 'exture5'), _0x3c3770['DIFFUSESCA' + 'LEOFFSET1'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '1'), _0x3c3770['DIFFUSESCA' + 'LEOFFSET2'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '2'), _0x3c3770['DIFFUSESCA' + 'LEOFFSET3'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '3'), _0x3c3770['DIFFUSESCA' + 'LEOFFSET4'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '4'), _0x3c3770['DIFFUSESCA' + 'LEOFFSET5'] = _0x1ede74['propertyNa' + 'meToID']('u_DiffuseS' + 'caleOffset' + '5'), _0x3c3770['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x3c3770['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x3c3770['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x3c3770['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x3c3770['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x3c3770['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0xfd8cfb extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PBRSpecula' + 'r'), this['_albedoCol' + 'or'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['ALBEDOCOLO' + 'R'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), this['_emissionC' + 'olor'] = new _0x333f41(0x0, 0x0, 0x0, 0x0), this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['EMISSIONCO' + 'LOR'], new _0x333f41(0x0, 0x0, 0x0, 0x0)), this['_specularC' + 'olor'] = new _0x333f41(0.2, 0.2, 0.2, 0.2), this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['SPECULARCO' + 'LOR'], new _0x333f41(0.2, 0.2, 0.2, 0.2)), this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['SMOOTHNESS'], 0.5), this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['SMOOTHNESS' + 'SCALE'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['SMOOTHNESS' + 'SOURCE'], 0x0), this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['OCCLUSIONS' + 'TRENGTH'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['NORMALSCAL' + 'E'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['PARALLAXSC' + 'ALE'], 0.001), this['_shaderVal' + 'ues']['setBool'](_0xfd8cfb['ENABLEEMIS' + 'SION'], !0x1), this['_shaderVal' + 'ues']['setNumber'](_0x18b0d4['ALPHATESTV' + 'ALUE'], 0.5), this['renderMode'] = _0xfd8cfb['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0xfd8cfb['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x1ede74['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0xfd8cfb['SHADERDEFI' + 'NE_SPECULA' + 'RTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('SPECULARTE' + 'XTURE'), _0xfd8cfb['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA'] = _0x1ede74['getDefineB' + 'yName']('SMOOTHNESS' + 'SOURCE_ALB' + 'EDOTEXTURE' + '_ALPHA'), _0xfd8cfb['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x1ede74['getDefineB' + 'yName']('NORMALTEXT' + 'URE'), _0xfd8cfb['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('PARALLAXTE' + 'XTURE'), _0xfd8cfb['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('OCCLUSIONT' + 'EXTURE'), _0xfd8cfb['SHADERDEFI' + 'NE_EMISSIO' + 'N'] = _0x1ede74['getDefineB' + 'yName']('EMISSION'), _0xfd8cfb['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('EMISSIONTE' + 'XTURE'), _0xfd8cfb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0xfd8cfb['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY'] = _0x1ede74['getDefineB' + 'yName']('ALPHAPREMU' + 'LTIPLY');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x832136) {
            this['_albedoCol' + 'or']['x'] = _0x832136, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x3c9463) {
            this['_albedoCol' + 'or']['y'] = _0x3c9463, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x4488a0) {
            this['_albedoCol' + 'or']['z'] = _0x4488a0, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x3fd2b0) {
            this['_albedoCol' + 'or']['w'] = _0x3fd2b0, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_SpecColor' + 'R']() {
            return this['_specularC' + 'olor']['x'];
        }
        set ['_SpecColor' + 'R'](_0x46ac57) {
            this['_specularC' + 'olor']['x'] = _0x46ac57, this['specularCo' + 'lor'] = this['_specularC' + 'olor'];
        }
        get ['_SpecColor' + 'G']() {
            return this['_specularC' + 'olor']['y'];
        }
        set ['_SpecColor' + 'G'](_0x2453cc) {
            this['_specularC' + 'olor']['y'] = _0x2453cc, this['specularCo' + 'lor'] = this['_specularC' + 'olor'];
        }
        get ['_SpecColor' + 'B']() {
            return this['_specularC' + 'olor']['z'];
        }
        set ['_SpecColor' + 'B'](_0x1f5dd0) {
            this['_specularC' + 'olor']['z'] = _0x1f5dd0, this['specularCo' + 'lor'] = this['_specularC' + 'olor'];
        }
        get ['_SpecColor' + 'A']() {
            return this['_specularC' + 'olor']['w'];
        }
        set ['_SpecColor' + 'A'](_0x5cf1d4) {
            this['_specularC' + 'olor']['w'] = _0x5cf1d4, this['specularCo' + 'lor'] = this['_specularC' + 'olor'];
        }
        get ['_Glossines' + 's']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0xfd8cfb['SMOOTHNESS']);
        }
        set ['_Glossines' + 's'](_0x20baf0) {
            this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['SMOOTHNESS'], _0x20baf0);
        }
        get ['_GlossMapS' + 'cale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0xfd8cfb['SMOOTHNESS' + 'SCALE']);
        }
        set ['_GlossMapS' + 'cale'](_0x552881) {
            this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['SMOOTHNESS' + 'SCALE'], _0x552881);
        }
        get ['_BumpScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0xfd8cfb['NORMALSCAL' + 'E']);
        }
        set ['_BumpScale'](_0xa7ee79) {
            this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['NORMALSCAL' + 'E'], _0xa7ee79);
        }
        get ['_Parallax']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0xfd8cfb['PARALLAXSC' + 'ALE']);
        }
        set ['_Parallax'](_0x5c6b5a) {
            this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['PARALLAXSC' + 'ALE'], _0x5c6b5a);
        }
        get ['_Occlusion' + 'Strength']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0xfd8cfb['OCCLUSIONS' + 'TRENGTH']);
        }
        set ['_Occlusion' + 'Strength'](_0xfd8a8a) {
            this['_shaderVal' + 'ues']['setNumber'](_0xfd8cfb['OCCLUSIONS' + 'TRENGTH'], _0xfd8a8a);
        }
        get ['_EmissionC' + 'olorR']() {
            return this['_emissionC' + 'olor']['x'];
        }
        set ['_EmissionC' + 'olorR'](_0xa63f2a) {
            this['_emissionC' + 'olor']['x'] = _0xa63f2a, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_EmissionC' + 'olorG']() {
            return this['_emissionC' + 'olor']['y'];
        }
        set ['_EmissionC' + 'olorG'](_0x24101a) {
            this['_emissionC' + 'olor']['y'] = _0x24101a, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_EmissionC' + 'olorB']() {
            return this['_emissionC' + 'olor']['z'];
        }
        set ['_EmissionC' + 'olorB'](_0x4c7f48) {
            this['_emissionC' + 'olor']['z'] = _0x4c7f48, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_EmissionC' + 'olorA']() {
            return this['_emissionC' + 'olor']['w'];
        }
        set ['_EmissionC' + 'olorA'](_0x27e6e1) {
            this['_emissionC' + 'olor']['w'] = _0x27e6e1, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x2ccb89) {
            var _0x511420 = this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET']);
            _0x511420['x'] = _0x2ccb89, this['tilingOffs' + 'et'] = _0x511420;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x1e97c) {
            var _0x3e27f3 = this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET']);
            _0x3e27f3['y'] = _0x1e97c, this['tilingOffs' + 'et'] = _0x3e27f3;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x1629a3) {
            var _0x424b32 = this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET']);
            _0x424b32['z'] = _0x1629a3, this['tilingOffs' + 'et'] = _0x424b32;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x1c9a2a) {
            var _0x398031 = this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET']);
            _0x398031['w'] = _0x1c9a2a, this['tilingOffs' + 'et'] = _0x398031;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x305cf9) {
            this['alphaTestV' + 'alue'] = _0x305cf9;
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x38dc17) {
            this['_ColorR'] = _0x38dc17;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x20e9aa) {
            this['_ColorG'] = _0x20e9aa;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0xa6ef4a) {
            this['_ColorB'] = _0xa6ef4a;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0xcab52) {
            this['_ColorA'] = _0xcab52;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x49c094) {
            this['_albedoCol' + 'or'] = _0x49c094, this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['ALBEDOCOLO' + 'R'], _0x49c094);
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xfd8cfb['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x54dc59) {
            _0x54dc59 ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0xfd8cfb['ALBEDOTEXT' + 'URE'], _0x54dc59);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xfd8cfb['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x286b45) {
            _0x286b45 ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0xfd8cfb['NORMALTEXT' + 'URE'], _0x286b45);
        }
        get ['normalText' + 'ureScale']() {
            return this['_BumpScale'];
        }
        set ['normalText' + 'ureScale'](_0x1db9e6) {
            this['_BumpScale'] = _0x1db9e6;
        }
        get ['parallaxTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xfd8cfb['PARALLAXTE' + 'XTURE']);
        }
        set ['parallaxTe' + 'xture'](_0xaf7bd7) {
            _0xaf7bd7 ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0xfd8cfb['PARALLAXTE' + 'XTURE'], _0xaf7bd7);
        }
        get ['parallaxTe' + 'xtureScale']() {
            return this['_Parallax'];
        }
        set ['parallaxTe' + 'xtureScale'](_0x277e70) {
            this['_Parallax'] = Math['max'](0.005, Math['min'](0.08, _0x277e70));
        }
        get ['occlusionT' + 'exture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xfd8cfb['OCCLUSIONT' + 'EXTURE']);
        }
        set ['occlusionT' + 'exture'](_0x1996b3) {
            _0x1996b3 ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0xfd8cfb['OCCLUSIONT' + 'EXTURE'], _0x1996b3);
        }
        get ['occlusionT' + 'extureStre' + 'ngth']() {
            return this['_Occlusion' + 'Strength'];
        }
        set ['occlusionT' + 'extureStre' + 'ngth'](_0xc44bf0) {
            this['_Occlusion' + 'Strength'] = Math['max'](0x0, Math['min'](0x1, _0xc44bf0));
        }
        get ['specularTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xfd8cfb['SPECULARTE' + 'XTURE']);
        }
        set ['specularTe' + 'xture'](_0x2a3f8d) {
            _0x2a3f8d ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_SPECULA' + 'RTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_SPECULA' + 'RTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0xfd8cfb['SPECULARTE' + 'XTURE'], _0x2a3f8d);
        }
        get ['specularCo' + 'lorR']() {
            return this['_SpecColor' + 'R'];
        }
        set ['specularCo' + 'lorR'](_0x32d640) {
            this['_SpecColor' + 'R'] = _0x32d640;
        }
        get ['specularCo' + 'lorG']() {
            return this['_SpecColor' + 'G'];
        }
        set ['specularCo' + 'lorG'](_0x27cdf2) {
            this['_SpecColor' + 'G'] = _0x27cdf2;
        }
        get ['specularCo' + 'lorB']() {
            return this['_SpecColor' + 'B'];
        }
        set ['specularCo' + 'lorB'](_0x48ff32) {
            this['_SpecColor' + 'B'] = _0x48ff32;
        }
        get ['specularCo' + 'lorA']() {
            return this['_SpecColor' + 'A'];
        }
        set ['specularCo' + 'lorA'](_0x4aa1e4) {
            this['_SpecColor' + 'A'] = _0x4aa1e4;
        }
        get ['specularCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['SPECULARCO' + 'LOR']);
        }
        set ['specularCo' + 'lor'](_0x210698) {
            this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['SPECULARCO' + 'LOR'], _0x210698);
        }
        get ['smoothness']() {
            return this['_Glossines' + 's'];
        }
        set ['smoothness'](_0x303da2) {
            this['_Glossines' + 's'] = Math['max'](0x0, Math['min'](0x1, _0x303da2));
        }
        get ['smoothness' + 'TextureSca' + 'le']() {
            return this['_GlossMapS' + 'cale'];
        }
        set ['smoothness' + 'TextureSca' + 'le'](_0x20c367) {
            this['_GlossMapS' + 'cale'] = Math['max'](0x0, Math['min'](0x1, _0x20c367));
        }
        get ['smoothness' + 'Source']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xfd8cfb['SMOOTHNESS' + 'SOURCE']);
        }
        set ['smoothness' + 'Source'](_0x51ca48) {
            _0x51ca48 ? (this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']), this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['SMOOTHNESS' + 'SOURCE'], 0x1)) : (this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']), this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['SMOOTHNESS' + 'SOURCE'], 0x0));
        }
        get ['enableEmis' + 'sion']() {
            return this['_shaderVal' + 'ues']['getBool'](_0xfd8cfb['ENABLEEMIS' + 'SION']);
        }
        set ['enableEmis' + 'sion'](_0x32452f) {
            _0x32452f ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_EMISSIO' + 'N']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_EMISSIO' + 'N']), this['_shaderVal' + 'ues']['setBool'](_0xfd8cfb['ENABLEEMIS' + 'SION'], _0x32452f);
        }
        get ['emissionCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['EMISSIONCO' + 'LOR']);
        }
        set ['emissionCo' + 'lor'](_0x48e8a1) {
            this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['EMISSIONCO' + 'LOR'], _0x48e8a1);
        }
        get ['emissionTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0xfd8cfb['EMISSIONTE' + 'XTURE']);
        }
        set ['emissionTe' + 'xture'](_0x305552) {
            _0x305552 ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0xfd8cfb['EMISSIONTE' + 'XTURE'], _0x305552);
        }
        get ['enableRefl' + 'ection']() {
            return this['_shaderVal' + 'ues']['getBool'](_0xfd8cfb['ENABLEREFL' + 'ECT']);
        }
        set ['enableRefl' + 'ection'](_0x111704) {
            this['_shaderVal' + 'ues']['setBool'](_0xfd8cfb['ENABLEREFL' + 'ECT'], !0x0), _0x111704 ? this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']) : this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x1cc9da) {
            this['_MainTex_S' + 'TX'] = _0x1cc9da;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x39c26e) {
            this['_MainTex_S' + 'TY'] = _0x39c26e;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x43a2ae) {
            this['_MainTex_S' + 'TZ'] = _0x43a2ae;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x1138d6) {
            this['_MainTex_S' + 'TW'] = _0x1138d6;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0xfd8cfb['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x8db51e) {
            _0x8db51e && (0x1 != _0x8db51e['x'] || 0x1 != _0x8db51e['y'] || 0x0 != _0x8db51e['z'] || 0x0 != _0x8db51e['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0xfd8cfb['TILINGOFFS' + 'ET'], _0x8db51e);
        }
        set ['renderMode'](_0x5d57bf) {
            switch (_0x5d57bf) {
            case _0xfd8cfb['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            case _0xfd8cfb['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            case _0xfd8cfb['RENDERMODE' + '_FADE']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0xfd8cfb['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            case _0xfd8cfb['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_ONE'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0xfd8cfb['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            default:
                throw new Error('PBRSpecula' + 'rMaterial\x20' + ':\x20renderMo' + 'de\x20value\x20e' + 'rror.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0xfd8cfb['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x553720) {
            this['_shaderVal' + 'ues']['setBool'](_0xfd8cfb['DEPTH_WRIT' + 'E'], _0x553720);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xfd8cfb['CULL']);
        }
        set ['cull'](_0x5b6890) {
            this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['CULL'], _0x5b6890);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xfd8cfb['BLEND']);
        }
        set ['blend'](_0x258216) {
            this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['BLEND'], _0x258216);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xfd8cfb['BLEND_SRC']);
        }
        set ['blendSrc'](_0x27cfd3) {
            this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['BLEND_SRC'], _0x27cfd3);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xfd8cfb['BLEND_DST']);
        }
        set ['blendDst'](_0x3c8de2) {
            this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['BLEND_DST'], _0x3c8de2);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0xfd8cfb['DEPTH_TEST']);
        }
        set ['depthTest'](_0x5f2253) {
            this['_shaderVal' + 'ues']['setInt'](_0xfd8cfb['DEPTH_TEST'], _0x5f2253);
        }
        ['clone']() {
            var _0x300a54 = new _0xfd8cfb();
            return this['cloneTo'](_0x300a54), _0x300a54;
        }
        ['cloneTo'](_0x313c5a) {
            super['cloneTo'](_0x313c5a);
            var _0x424e55 = _0x313c5a;
            this['_albedoCol' + 'or']['cloneTo'](_0x424e55['_albedoCol' + 'or']), this['_specularC' + 'olor']['cloneTo'](_0x424e55['_specularC' + 'olor']), this['_emissionC' + 'olor']['cloneTo'](_0x424e55['_emissionC' + 'olor']);
        }
    }
    _0xfd8cfb['Smoothness' + 'Source_Spe' + 'cularTextu' + 're_Alpha'] = 0x0, _0xfd8cfb['Smoothness' + 'Source_Alb' + 'edoTexture' + '_Alpha'] = 0x1, _0xfd8cfb['RENDERMODE' + '_OPAQUE'] = 0x0, _0xfd8cfb['RENDERMODE' + '_CUTOUT'] = 0x1, _0xfd8cfb['RENDERMODE' + '_FADE'] = 0x2, _0xfd8cfb['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x3, _0xfd8cfb['ALBEDOTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0xfd8cfb['SPECULARTE' + 'XTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Specular' + 'Texture'), _0xfd8cfb['NORMALTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0xfd8cfb['PARALLAXTE' + 'XTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Parallax' + 'Texture'), _0xfd8cfb['OCCLUSIONT' + 'EXTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Occlusio' + 'nTexture'), _0xfd8cfb['EMISSIONTE' + 'XTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Emission' + 'Texture'), _0xfd8cfb['ALBEDOCOLO' + 'R'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0xfd8cfb['SPECULARCO' + 'LOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Specular' + 'Color'), _0xfd8cfb['EMISSIONCO' + 'LOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Emission' + 'Color'), _0xfd8cfb['SMOOTHNESS'] = _0x1ede74['propertyNa' + 'meToID']('u_smoothne' + 'ss'), _0xfd8cfb['SMOOTHNESS' + 'SCALE'] = _0x1ede74['propertyNa' + 'meToID']('u_smoothne' + 'ssScale'), _0xfd8cfb['SMOOTHNESS' + 'SOURCE'] = -0x1, _0xfd8cfb['OCCLUSIONS' + 'TRENGTH'] = _0x1ede74['propertyNa' + 'meToID']('u_occlusio' + 'nStrength'), _0xfd8cfb['NORMALSCAL' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_normalSc' + 'ale'), _0xfd8cfb['PARALLAXSC' + 'ALE'] = _0x1ede74['propertyNa' + 'meToID']('u_parallax' + 'Scale'), _0xfd8cfb['ENABLEEMIS' + 'SION'] = -0x1, _0xfd8cfb['ENABLEREFL' + 'ECT'] = -0x1, _0xfd8cfb['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0xfd8cfb['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0xfd8cfb['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0xfd8cfb['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0xfd8cfb['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0xfd8cfb['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0xfd8cfb['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x3d476f extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PBRStandar' + 'd'), this['_albedoCol' + 'or'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0x3d476f['ALBEDOCOLO' + 'R'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), this['_emissionC' + 'olor'] = new _0x333f41(0x0, 0x0, 0x0, 0x0), this['_shaderVal' + 'ues']['setVector'](_0x3d476f['EMISSIONCO' + 'LOR'], new _0x333f41(0x0, 0x0, 0x0, 0x0)), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['METALLIC'], 0x0), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['SMOOTHNESS'], 0.5), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['SMOOTHNESS' + 'SCALE'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['SMOOTHNESS' + 'SOURCE'], 0x0), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['OCCLUSIONS' + 'TRENGTH'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['NORMALSCAL' + 'E'], 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['PARALLAXSC' + 'ALE'], 0.001), this['_shaderVal' + 'ues']['setBool'](_0x3d476f['ENABLEEMIS' + 'SION'], !0x1), this['_shaderVal' + 'ues']['setBool'](_0x3d476f['ENABLEREFL' + 'ECT'], !0x0), this['_shaderVal' + 'ues']['setNumber'](_0x18b0d4['ALPHATESTV' + 'ALUE'], 0.5), this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']), this['renderMode'] = _0x3d476f['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x3d476f['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x1ede74['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0x3d476f['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE'] = _0x1ede74['getDefineB' + 'yName']('METALLICGL' + 'OSSTEXTURE'), _0x3d476f['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA'] = _0x1ede74['getDefineB' + 'yName']('SMOOTHNESS' + 'SOURCE_ALB' + 'EDOTEXTURE' + '_ALPHA'), _0x3d476f['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x1ede74['getDefineB' + 'yName']('NORMALTEXT' + 'URE'), _0x3d476f['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('PARALLAXTE' + 'XTURE'), _0x3d476f['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('OCCLUSIONT' + 'EXTURE'), _0x3d476f['SHADERDEFI' + 'NE_EMISSIO' + 'N'] = _0x1ede74['getDefineB' + 'yName']('EMISSION'), _0x3d476f['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE'] = _0x1ede74['getDefineB' + 'yName']('EMISSIONTE' + 'XTURE'), _0x3d476f['SHADERDEFI' + 'NE_REFLECT' + 'MAP'] = _0x1ede74['getDefineB' + 'yName']('REFLECTMAP'), _0x3d476f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x3d476f['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY'] = _0x1ede74['getDefineB' + 'yName']('ALPHAPREMU' + 'LTIPLY');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x39c25c) {
            this['_albedoCol' + 'or']['x'] = _0x39c25c, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x3aeb76) {
            this['_albedoCol' + 'or']['y'] = _0x3aeb76, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x5b7c11) {
            this['_albedoCol' + 'or']['z'] = _0x5b7c11, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0xb70fcd) {
            this['_albedoCol' + 'or']['w'] = _0xb70fcd, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_Metallic']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3d476f['METALLIC']);
        }
        set ['_Metallic'](_0x4ebf34) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['METALLIC'], _0x4ebf34);
        }
        get ['_Glossines' + 's']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3d476f['SMOOTHNESS']);
        }
        set ['_Glossines' + 's'](_0x256559) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['SMOOTHNESS'], _0x256559);
        }
        get ['_GlossMapS' + 'cale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3d476f['SMOOTHNESS' + 'SCALE']);
        }
        set ['_GlossMapS' + 'cale'](_0x541ce0) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['SMOOTHNESS' + 'SCALE'], _0x541ce0);
        }
        get ['_BumpScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3d476f['NORMALSCAL' + 'E']);
        }
        set ['_BumpScale'](_0x1945a1) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['NORMALSCAL' + 'E'], _0x1945a1);
        }
        get ['_Parallax']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3d476f['PARALLAXSC' + 'ALE']);
        }
        set ['_Parallax'](_0x15d0c8) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['PARALLAXSC' + 'ALE'], _0x15d0c8);
        }
        get ['_Occlusion' + 'Strength']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x3d476f['OCCLUSIONS' + 'TRENGTH']);
        }
        set ['_Occlusion' + 'Strength'](_0x47c1b4) {
            this['_shaderVal' + 'ues']['setNumber'](_0x3d476f['OCCLUSIONS' + 'TRENGTH'], _0x47c1b4);
        }
        get ['_EmissionC' + 'olorR']() {
            return this['_emissionC' + 'olor']['x'];
        }
        set ['_EmissionC' + 'olorR'](_0x5e1ae5) {
            this['_emissionC' + 'olor']['x'] = _0x5e1ae5, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_EmissionC' + 'olorG']() {
            return this['_emissionC' + 'olor']['y'];
        }
        set ['_EmissionC' + 'olorG'](_0x314216) {
            this['_emissionC' + 'olor']['y'] = _0x314216, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_EmissionC' + 'olorB']() {
            return this['_emissionC' + 'olor']['z'];
        }
        set ['_EmissionC' + 'olorB'](_0xa1c0c3) {
            this['_emissionC' + 'olor']['z'] = _0xa1c0c3, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_EmissionC' + 'olorA']() {
            return this['_emissionC' + 'olor']['w'];
        }
        set ['_EmissionC' + 'olorA'](_0x382323) {
            this['_emissionC' + 'olor']['w'] = _0x382323, this['emissionCo' + 'lor'] = this['_emissionC' + 'olor'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x574b00) {
            var _0x23fa9b = this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET']);
            _0x23fa9b['x'] = _0x574b00, this['tilingOffs' + 'et'] = _0x23fa9b;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x18c1a3) {
            var _0xedc9a5 = this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET']);
            _0xedc9a5['y'] = _0x18c1a3, this['tilingOffs' + 'et'] = _0xedc9a5;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x56be11) {
            var _0x528156 = this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET']);
            _0x528156['z'] = _0x56be11, this['tilingOffs' + 'et'] = _0x528156;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x461494) {
            var _0x56b3c2 = this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET']);
            _0x56b3c2['w'] = _0x461494, this['tilingOffs' + 'et'] = _0x56b3c2;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x553f92) {
            this['alphaTestV' + 'alue'] = _0x553f92;
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x583722) {
            this['_ColorR'] = _0x583722;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0xb89f4b) {
            this['_ColorG'] = _0xb89f4b;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x390e59) {
            this['_ColorB'] = _0x390e59;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0x5df04f) {
            this['_ColorA'] = _0x5df04f;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x244aa4) {
            this['_albedoCol' + 'or'] = _0x244aa4, this['_shaderVal' + 'ues']['setVector'](_0x3d476f['ALBEDOCOLO' + 'R'], _0x244aa4);
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3d476f['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x40b37d) {
            _0x40b37d ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3d476f['ALBEDOTEXT' + 'URE'], _0x40b37d);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3d476f['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x2c4908) {
            _0x2c4908 ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3d476f['NORMALTEXT' + 'URE'], _0x2c4908);
        }
        get ['normalText' + 'ureScale']() {
            return this['_BumpScale'];
        }
        set ['normalText' + 'ureScale'](_0x588ca2) {
            this['_BumpScale'] = _0x588ca2;
        }
        get ['parallaxTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3d476f['PARALLAXTE' + 'XTURE']);
        }
        set ['parallaxTe' + 'xture'](_0x216154) {
            _0x216154 ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_PARALLA' + 'XTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3d476f['PARALLAXTE' + 'XTURE'], _0x216154);
        }
        get ['parallaxTe' + 'xtureScale']() {
            return this['_Parallax'];
        }
        set ['parallaxTe' + 'xtureScale'](_0x3f2528) {
            this['_Parallax'] = Math['max'](0.005, Math['min'](0.08, _0x3f2528));
        }
        get ['occlusionT' + 'exture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3d476f['OCCLUSIONT' + 'EXTURE']);
        }
        set ['occlusionT' + 'exture'](_0x5774f2) {
            _0x5774f2 ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_OCCLUSI' + 'ONTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3d476f['OCCLUSIONT' + 'EXTURE'], _0x5774f2);
        }
        get ['occlusionT' + 'extureStre' + 'ngth']() {
            return this['_Occlusion' + 'Strength'];
        }
        set ['occlusionT' + 'extureStre' + 'ngth'](_0x1d84c4) {
            this['_Occlusion' + 'Strength'] = Math['max'](0x0, Math['min'](0x1, _0x1d84c4));
        }
        get ['metallicGl' + 'ossTexture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3d476f['METALLICGL' + 'OSSTEXTURE']);
        }
        set ['metallicGl' + 'ossTexture'](_0x545ab3) {
            _0x545ab3 ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_METALLI' + 'CGLOSSTEXT' + 'URE']), this['_shaderVal' + 'ues']['setTexture'](_0x3d476f['METALLICGL' + 'OSSTEXTURE'], _0x545ab3);
        }
        get ['metallic']() {
            return this['_Metallic'];
        }
        set ['metallic'](_0x6e7f08) {
            this['_Metallic'] = Math['max'](0x0, Math['min'](0x1, _0x6e7f08));
        }
        get ['smoothness']() {
            return this['_Glossines' + 's'];
        }
        set ['smoothness'](_0x49ee13) {
            this['_Glossines' + 's'] = Math['max'](0x0, Math['min'](0x1, _0x49ee13));
        }
        get ['smoothness' + 'TextureSca' + 'le']() {
            return this['_GlossMapS' + 'cale'];
        }
        set ['smoothness' + 'TextureSca' + 'le'](_0x3e5699) {
            this['_GlossMapS' + 'cale'] = Math['max'](0x0, Math['min'](0x1, _0x3e5699));
        }
        get ['smoothness' + 'Source']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3d476f['SMOOTHNESS' + 'SOURCE']);
        }
        set ['smoothness' + 'Source'](_0x3bbc9e) {
            _0x3bbc9e ? (this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']), this['_shaderVal' + 'ues']['setInt'](_0x3d476f['SMOOTHNESS' + 'SOURCE'], 0x1)) : (this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_SMOOTHN' + 'ESSSOURCE_' + 'ALBEDOTEXT' + 'URE_ALPHA']), this['_shaderVal' + 'ues']['setInt'](_0x3d476f['SMOOTHNESS' + 'SOURCE'], 0x0));
        }
        get ['enableEmis' + 'sion']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x3d476f['ENABLEEMIS' + 'SION']);
        }
        set ['enableEmis' + 'sion'](_0x2a8b74) {
            _0x2a8b74 ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_EMISSIO' + 'N']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_EMISSIO' + 'N']), this['_shaderVal' + 'ues']['setBool'](_0x3d476f['ENABLEEMIS' + 'SION'], _0x2a8b74);
        }
        get ['emissionCo' + 'lorR']() {
            return this['_EmissionC' + 'olorR'];
        }
        set ['emissionCo' + 'lorR'](_0x5604c2) {
            this['_EmissionC' + 'olorR'] = _0x5604c2;
        }
        get ['emissionCo' + 'lorG']() {
            return this['_EmissionC' + 'olorG'];
        }
        set ['emissionCo' + 'lorG'](_0x334d25) {
            this['_EmissionC' + 'olorG'] = _0x334d25;
        }
        get ['emissionCo' + 'lorB']() {
            return this['_EmissionC' + 'olorB'];
        }
        set ['emissionCo' + 'lorB'](_0x58a885) {
            this['_EmissionC' + 'olorB'] = _0x58a885;
        }
        get ['emissionCo' + 'lorA']() {
            return this['_EmissionC' + 'olorA'];
        }
        set ['emissionCo' + 'lorA'](_0x53ef81) {
            this['_EmissionC' + 'olorA'] = _0x53ef81;
        }
        get ['emissionCo' + 'lor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3d476f['EMISSIONCO' + 'LOR']);
        }
        set ['emissionCo' + 'lor'](_0x1989f1) {
            this['_shaderVal' + 'ues']['setVector'](_0x3d476f['EMISSIONCO' + 'LOR'], _0x1989f1);
        }
        get ['emissionTe' + 'xture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x3d476f['EMISSIONTE' + 'XTURE']);
        }
        set ['emissionTe' + 'xture'](_0x513aad) {
            _0x513aad ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_EMISSIO' + 'NTEXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x3d476f['EMISSIONTE' + 'XTURE'], _0x513aad);
        }
        get ['enableRefl' + 'ection']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x3d476f['ENABLEREFL' + 'ECT']);
        }
        set ['enableRefl' + 'ection'](_0x57882f) {
            this['_shaderVal' + 'ues']['setBool'](_0x3d476f['ENABLEREFL' + 'ECT'], !0x0), _0x57882f ? this['_disablePu' + 'blicDefine' + 'Datas']['remove'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']) : this['_disablePu' + 'blicDefine' + 'Datas']['add'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x1a5cd1) {
            this['_MainTex_S' + 'TX'] = _0x1a5cd1;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x5d7f9d) {
            this['_MainTex_S' + 'TY'] = _0x5d7f9d;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x391e91) {
            this['_MainTex_S' + 'TZ'] = _0x391e91;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x4a404a) {
            this['_MainTex_S' + 'TW'] = _0x4a404a;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x3d476f['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x3c49ef) {
            _0x3c49ef && (0x1 != _0x3c49ef['x'] || 0x1 != _0x3c49ef['y'] || 0x0 != _0x3c49ef['z'] || 0x0 != _0x3c49ef['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x3d476f['TILINGOFFS' + 'ET'], _0x3c49ef);
        }
        set ['renderMode'](_0x1adc6c) {
            switch (_0x1adc6c) {
            case _0x3d476f['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            case _0x3d476f['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            case _0x3d476f['RENDERMODE' + '_FADE']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x3d476f['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            case _0x3d476f['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_ONE'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x3d476f['SHADERDEFI' + 'NE_ALPHAPR' + 'EMULTIPLY']);
                break;
            default:
                throw new Error('PBRSpecula' + 'rMaterial\x20' + ':\x20renderMo' + 'de\x20value\x20e' + 'rror.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x3d476f['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x18aa07) {
            this['_shaderVal' + 'ues']['setBool'](_0x3d476f['DEPTH_WRIT' + 'E'], _0x18aa07);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3d476f['CULL']);
        }
        set ['cull'](_0x2d04a6) {
            this['_shaderVal' + 'ues']['setInt'](_0x3d476f['CULL'], _0x2d04a6);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3d476f['BLEND']);
        }
        set ['blend'](_0x13cea2) {
            this['_shaderVal' + 'ues']['setInt'](_0x3d476f['BLEND'], _0x13cea2);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3d476f['BLEND_SRC']);
        }
        set ['blendSrc'](_0x1ea5a8) {
            this['_shaderVal' + 'ues']['setInt'](_0x3d476f['BLEND_SRC'], _0x1ea5a8);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3d476f['BLEND_DST']);
        }
        set ['blendDst'](_0x3487c0) {
            this['_shaderVal' + 'ues']['setInt'](_0x3d476f['BLEND_DST'], _0x3487c0);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x3d476f['DEPTH_TEST']);
        }
        set ['depthTest'](_0x551e4b) {
            this['_shaderVal' + 'ues']['setInt'](_0x3d476f['DEPTH_TEST'], _0x551e4b);
        }
        ['clone']() {
            var _0x3f7bdb = new _0x3d476f();
            return this['cloneTo'](_0x3f7bdb), _0x3f7bdb;
        }
        ['cloneTo'](_0x287053) {
            super['cloneTo'](_0x287053);
            var _0x49e6c8 = _0x287053;
            this['_albedoCol' + 'or']['cloneTo'](_0x49e6c8['_albedoCol' + 'or']), this['_emissionC' + 'olor']['cloneTo'](_0x49e6c8['_emissionC' + 'olor']);
        }
    }
    _0x3d476f['Smoothness' + 'Source_Met' + 'allicGloss' + 'Texture_Al' + 'pha'] = 0x0, _0x3d476f['Smoothness' + 'Source_Alb' + 'edoTexture' + '_Alpha'] = 0x1, _0x3d476f['RENDERMODE' + '_OPAQUE'] = 0x0, _0x3d476f['RENDERMODE' + '_CUTOUT'] = 0x1, _0x3d476f['RENDERMODE' + '_FADE'] = 0x2, _0x3d476f['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x3, _0x3d476f['ALBEDOTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x3d476f['METALLICGL' + 'OSSTEXTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Metallic' + 'GlossTextu' + 're'), _0x3d476f['NORMALTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x3d476f['PARALLAXTE' + 'XTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Parallax' + 'Texture'), _0x3d476f['OCCLUSIONT' + 'EXTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Occlusio' + 'nTexture'), _0x3d476f['EMISSIONTE' + 'XTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Emission' + 'Texture'), _0x3d476f['ALBEDOCOLO' + 'R'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x3d476f['EMISSIONCO' + 'LOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Emission' + 'Color'), _0x3d476f['METALLIC'] = _0x1ede74['propertyNa' + 'meToID']('u_metallic'), _0x3d476f['SMOOTHNESS'] = _0x1ede74['propertyNa' + 'meToID']('u_smoothne' + 'ss'), _0x3d476f['SMOOTHNESS' + 'SCALE'] = _0x1ede74['propertyNa' + 'meToID']('u_smoothne' + 'ssScale'), _0x3d476f['SMOOTHNESS' + 'SOURCE'] = -0x1, _0x3d476f['OCCLUSIONS' + 'TRENGTH'] = _0x1ede74['propertyNa' + 'meToID']('u_occlusio' + 'nStrength'), _0x3d476f['NORMALSCAL' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_normalSc' + 'ale'), _0x3d476f['PARALLAXSC' + 'ALE'] = _0x1ede74['propertyNa' + 'meToID']('u_parallax' + 'Scale'), _0x3d476f['ENABLEEMIS' + 'SION'] = -0x1, _0x3d476f['ENABLEREFL' + 'ECT'] = -0x1, _0x3d476f['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x3d476f['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x3d476f['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x3d476f['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x3d476f['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x3d476f['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x3d476f['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x4a932e extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('SkyBox'), this['tintColor'] = new _0x333f41(0.5, 0.5, 0.5, 0.5), this['exposure'] = 0x1, this['rotation'] = 0x0;
        }
        static ['__initDefi' + 'ne__']() {
        }
        get ['tintColor']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4a932e['TINTCOLOR']);
        }
        set ['tintColor'](_0x4be4e5) {
            this['_shaderVal' + 'ues']['setVector'](_0x4a932e['TINTCOLOR'], _0x4be4e5);
        }
        get ['exposure']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x4a932e['EXPOSURE']);
        }
        set ['exposure'](_0x2dc536) {
            this['_shaderVal' + 'ues']['setNumber'](_0x4a932e['EXPOSURE'], _0x2dc536);
        }
        get ['rotation']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x4a932e['ROTATION']);
        }
        set ['rotation'](_0x249ad2) {
            this['_shaderVal' + 'ues']['setNumber'](_0x4a932e['ROTATION'], _0x249ad2);
        }
        get ['textureCub' + 'e']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4a932e['TEXTURECUB' + 'E']);
        }
        set ['textureCub' + 'e'](_0x3fbccd) {
            this['_shaderVal' + 'ues']['setTexture'](_0x4a932e['TEXTURECUB' + 'E'], _0x3fbccd);
        }
        ['clone']() {
            var _0x3b8409 = new _0x4a932e();
            return this['cloneTo'](_0x3b8409), _0x3b8409;
        }
    }
    _0x4a932e['TINTCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_TintColo' + 'r'), _0x4a932e['EXPOSURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Exposure'), _0x4a932e['ROTATION'] = _0x1ede74['propertyNa' + 'meToID']('u_Rotation'), _0x4a932e['TEXTURECUB' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_CubeText' + 'ure');
    class _0x1e9b59 extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('SkyBoxProc' + 'edural'), this['sunDisk'] = _0x1e9b59['SUN_HIGH_Q' + 'UALITY'], this['sunSize'] = 0.04, this['sunSizeCon' + 'vergence'] = 0x5, this['atmosphere' + 'Thickness'] = 0x1, this['skyTint'] = new _0x333f41(0.5, 0.5, 0.5, 0x1), this['groundTint'] = new _0x333f41(0.369, 0.349, 0.341, 0x1), this['exposure'] = 1.3;
        }
        static ['__initDefi' + 'ne__']() {
            _0x1e9b59['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY'] = _0x1ede74['getDefineB' + 'yName']('SUN_HIGH_Q' + 'UALITY'), _0x1e9b59['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE'] = _0x1ede74['getDefineB' + 'yName']('SUN_SIMPLE');
        }
        get ['sunDisk']() {
            return this['_sunDisk'];
        }
        set ['sunDisk'](_0x41fe48) {
            switch (_0x41fe48) {
            case _0x1e9b59['SUN_HIGH_Q' + 'UALITY']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1e9b59['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']), this['_shaderVal' + 'ues']['addDefine'](_0x1e9b59['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']);
                break;
            case _0x1e9b59['SUN_SIMPLE']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1e9b59['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']), this['_shaderVal' + 'ues']['addDefine'](_0x1e9b59['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']);
                break;
            case _0x1e9b59['SUN_NODE']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1e9b59['SHADERDEFI' + 'NE_SUN_HIG' + 'H_QUALITY']), this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x1e9b59['SHADERDEFI' + 'NE_SUN_SIM' + 'PLE']);
                break;
            default:
                throw 'SkyBoxProc' + 'eduralMate' + 'rial:\x20unkn' + 'own\x20sun\x20va' + 'lue.';
            }
            this['_sunDisk'] = _0x41fe48;
        }
        get ['sunSize']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x1e9b59['SUNSIZE']);
        }
        set ['sunSize'](_0x3436ac) {
            _0x3436ac = Math['min'](Math['max'](0x0, _0x3436ac), 0x1), this['_shaderVal' + 'ues']['setNumber'](_0x1e9b59['SUNSIZE'], _0x3436ac);
        }
        get ['sunSizeCon' + 'vergence']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x1e9b59['SUNSIZECON' + 'VERGENCE']);
        }
        set ['sunSizeCon' + 'vergence'](_0x2f1915) {
            _0x2f1915 = Math['min'](Math['max'](0x0, _0x2f1915), 0x14), this['_shaderVal' + 'ues']['setNumber'](_0x1e9b59['SUNSIZECON' + 'VERGENCE'], _0x2f1915);
        }
        get ['atmosphere' + 'Thickness']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x1e9b59['ATMOSPHERE' + 'THICKNESS']);
        }
        set ['atmosphere' + 'Thickness'](_0x2775f4) {
            _0x2775f4 = Math['min'](Math['max'](0x0, _0x2775f4), 0x5), this['_shaderVal' + 'ues']['setNumber'](_0x1e9b59['ATMOSPHERE' + 'THICKNESS'], _0x2775f4);
        }
        get ['skyTint']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x1e9b59['SKYTINT']);
        }
        set ['skyTint'](_0x1053cf) {
            this['_shaderVal' + 'ues']['setVector'](_0x1e9b59['SKYTINT'], _0x1053cf);
        }
        get ['groundTint']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x1e9b59['GROUNDTINT']);
        }
        set ['groundTint'](_0x1131f0) {
            this['_shaderVal' + 'ues']['setVector'](_0x1e9b59['GROUNDTINT'], _0x1131f0);
        }
        get ['exposure']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x1e9b59['EXPOSURE']);
        }
        set ['exposure'](_0x219597) {
            _0x219597 = Math['min'](Math['max'](0x0, _0x219597), 0x8), this['_shaderVal' + 'ues']['setNumber'](_0x1e9b59['EXPOSURE'], _0x219597);
        }
        ['clone']() {
            var _0x3eb482 = new _0x1e9b59();
            return this['cloneTo'](_0x3eb482), _0x3eb482;
        }
    }
    _0x1e9b59['SUN_NODE'] = 0x0, _0x1e9b59['SUN_SIMPLE'] = 0x1, _0x1e9b59['SUN_HIGH_Q' + 'UALITY'] = 0x2, _0x1e9b59['SUNSIZE'] = _0x1ede74['propertyNa' + 'meToID']('u_SunSize'), _0x1e9b59['SUNSIZECON' + 'VERGENCE'] = _0x1ede74['propertyNa' + 'meToID']('u_SunSizeC' + 'onvergence'), _0x1e9b59['ATMOSPHERE' + 'THICKNESS'] = _0x1ede74['propertyNa' + 'meToID']('u_Atmosphe' + 'reThicknes' + 's'), _0x1e9b59['SKYTINT'] = _0x1ede74['propertyNa' + 'meToID']('u_SkyTint'), _0x1e9b59['GROUNDTINT'] = _0x1ede74['propertyNa' + 'meToID']('u_GroundTi' + 'nt'), _0x1e9b59['EXPOSURE'] = _0x1ede74['propertyNa' + 'meToID']('u_Exposure');
    class _0x86cc6e extends _0x18b0d4 {
        constructor() {
            super(), this['_albedoCol' + 'or'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['_albedoInt' + 'ensity'] = 0x1, this['_enableVer' + 'texColor'] = !0x1, this['setShaderN' + 'ame']('Unlit'), this['_shaderVal' + 'ues']['setVector'](_0x86cc6e['ALBEDOCOLO' + 'R'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x86cc6e['RENDERMODE' + '_OPAQUE'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x86cc6e['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE'] = _0x1ede74['getDefineB' + 'yName']('ALBEDOTEXT' + 'URE'), _0x86cc6e['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x86cc6e['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR'] = _0x1ede74['getDefineB' + 'yName']('ENABLEVERT' + 'EXCOLOR');
        }
        get ['_ColorR']() {
            return this['_albedoCol' + 'or']['x'];
        }
        set ['_ColorR'](_0x5ba96a) {
            this['_albedoCol' + 'or']['x'] = _0x5ba96a, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorG']() {
            return this['_albedoCol' + 'or']['y'];
        }
        set ['_ColorG'](_0x4fb6b3) {
            this['_albedoCol' + 'or']['y'] = _0x4fb6b3, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorB']() {
            return this['_albedoCol' + 'or']['z'];
        }
        set ['_ColorB'](_0x3ec75e) {
            this['_albedoCol' + 'or']['z'] = _0x3ec75e, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_ColorA']() {
            return this['_albedoCol' + 'or']['w'];
        }
        set ['_ColorA'](_0x7a225b) {
            this['_albedoCol' + 'or']['w'] = _0x7a225b, this['albedoColo' + 'r'] = this['_albedoCol' + 'or'];
        }
        get ['_AlbedoInt' + 'ensity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['_AlbedoInt' + 'ensity'](_0x2ac064) {
            if (this['_albedoInt' + 'ensity'] !== _0x2ac064) {
                var _0x55a2ed = this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['ALBEDOCOLO' + 'R']);
                _0x333f41['scale'](this['_albedoCol' + 'or'], _0x2ac064, _0x55a2ed), this['_albedoInt' + 'ensity'] = _0x2ac064, this['_shaderVal' + 'ues']['setVector'](_0x86cc6e['ALBEDOCOLO' + 'R'], _0x55a2ed);
            }
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x1ac8cf) {
            var _0x48f357 = this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET']);
            _0x48f357['x'] = _0x1ac8cf, this['tilingOffs' + 'et'] = _0x48f357;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x46c923) {
            var _0x27654b = this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET']);
            _0x27654b['y'] = _0x46c923, this['tilingOffs' + 'et'] = _0x27654b;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x4f8ac5) {
            var _0x121096 = this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET']);
            _0x121096['z'] = _0x4f8ac5, this['tilingOffs' + 'et'] = _0x121096;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x3dbc3e) {
            var _0x17d822 = this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET']);
            _0x17d822['w'] = _0x3dbc3e, this['tilingOffs' + 'et'] = _0x17d822;
        }
        get ['_Cutoff']() {
            return this['alphaTestV' + 'alue'];
        }
        set ['_Cutoff'](_0x2d1fda) {
            this['alphaTestV' + 'alue'] = _0x2d1fda;
        }
        get ['albedoColo' + 'rR']() {
            return this['_ColorR'];
        }
        set ['albedoColo' + 'rR'](_0x2d5acb) {
            this['_ColorR'] = _0x2d5acb;
        }
        get ['albedoColo' + 'rG']() {
            return this['_ColorG'];
        }
        set ['albedoColo' + 'rG'](_0x10fece) {
            this['_ColorG'] = _0x10fece;
        }
        get ['albedoColo' + 'rB']() {
            return this['_ColorB'];
        }
        set ['albedoColo' + 'rB'](_0x315991) {
            this['_ColorB'] = _0x315991;
        }
        get ['albedoColo' + 'rA']() {
            return this['_ColorA'];
        }
        set ['albedoColo' + 'rA'](_0x49db54) {
            this['_ColorA'] = _0x49db54;
        }
        get ['albedoColo' + 'r']() {
            return this['_albedoCol' + 'or'];
        }
        set ['albedoColo' + 'r'](_0x3cec67) {
            var _0x551eb0 = this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['ALBEDOCOLO' + 'R']);
            _0x333f41['scale'](_0x3cec67, this['_albedoInt' + 'ensity'], _0x551eb0), this['_albedoCol' + 'or'] = _0x3cec67, this['_shaderVal' + 'ues']['setVector'](_0x86cc6e['ALBEDOCOLO' + 'R'], _0x551eb0);
        }
        get ['albedoInte' + 'nsity']() {
            return this['_albedoInt' + 'ensity'];
        }
        set ['albedoInte' + 'nsity'](_0x45ad30) {
            this['_AlbedoInt' + 'ensity'] = _0x45ad30;
        }
        get ['albedoText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x86cc6e['ALBEDOTEXT' + 'URE']);
        }
        set ['albedoText' + 'ure'](_0x2b287e) {
            _0x2b287e ? this['_shaderVal' + 'ues']['addDefine'](_0x86cc6e['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x86cc6e['SHADERDEFI' + 'NE_ALBEDOT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x86cc6e['ALBEDOTEXT' + 'URE'], _0x2b287e);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x57dd02) {
            this['_MainTex_S' + 'TX'] = _0x57dd02;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x12f847) {
            this['_MainTex_S' + 'TY'] = _0x12f847;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0xe79434) {
            this['_MainTex_S' + 'TZ'] = _0xe79434;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x4a15f5) {
            this['_MainTex_S' + 'TW'] = _0x4a15f5;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x86cc6e['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x3fc5ec) {
            _0x3fc5ec && (0x1 != _0x3fc5ec['x'] || 0x1 != _0x3fc5ec['y'] || 0x0 != _0x3fc5ec['z'] || 0x0 != _0x3fc5ec['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x86cc6e['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x86cc6e['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x86cc6e['TILINGOFFS' + 'ET'], _0x3fc5ec);
        }
        get ['enableVert' + 'exColor']() {
            return this['_enableVer' + 'texColor'];
        }
        set ['enableVert' + 'exColor'](_0x8f922e) {
            this['_enableVer' + 'texColor'] = _0x8f922e, _0x8f922e ? this['_shaderVal' + 'ues']['addDefine'](_0x86cc6e['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x86cc6e['SHADERDEFI' + 'NE_ENABLEV' + 'ERTEXCOLOR']);
        }
        set ['renderMode'](_0x5b310c) {
            switch (_0x5b310c) {
            case _0x86cc6e['RENDERMODE' + '_OPAQUE']:
                this['alphaTest'] = !0x1, this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_OPAQUE'], this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            case _0x86cc6e['RENDERMODE' + '_CUTOUT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_ALPHATES' + 'T'], this['alphaTest'] = !0x0, this['depthWrite'] = !0x0, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            case _0x86cc6e['RENDERMODE' + '_TRANSPARE' + 'NT']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_BACK'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'];
                break;
            default:
                throw new Error('UnlitMater' + 'ial\x20:\x20rend' + 'erMode\x20val' + 'ue\x20error.');
            }
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x86cc6e['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x2f585c) {
            this['_shaderVal' + 'ues']['setBool'](_0x86cc6e['DEPTH_WRIT' + 'E'], _0x2f585c);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x86cc6e['CULL']);
        }
        set ['cull'](_0x462e75) {
            this['_shaderVal' + 'ues']['setInt'](_0x86cc6e['CULL'], _0x462e75);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x86cc6e['BLEND']);
        }
        set ['blend'](_0x522793) {
            this['_shaderVal' + 'ues']['setInt'](_0x86cc6e['BLEND'], _0x522793);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x86cc6e['BLEND_SRC']);
        }
        set ['blendSrc'](_0x35e620) {
            this['_shaderVal' + 'ues']['setInt'](_0x86cc6e['BLEND_SRC'], _0x35e620);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x86cc6e['BLEND_DST']);
        }
        set ['blendDst'](_0x3e2cde) {
            this['_shaderVal' + 'ues']['setInt'](_0x86cc6e['BLEND_DST'], _0x3e2cde);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x86cc6e['DEPTH_TEST']);
        }
        set ['depthTest'](_0x44facb) {
            this['_shaderVal' + 'ues']['setInt'](_0x86cc6e['DEPTH_TEST'], _0x44facb);
        }
        ['clone']() {
            var _0x3ea1c6 = new _0x86cc6e();
            return this['cloneTo'](_0x3ea1c6), _0x3ea1c6;
        }
    }
    _0x86cc6e['RENDERMODE' + '_OPAQUE'] = 0x0, _0x86cc6e['RENDERMODE' + '_CUTOUT'] = 0x1, _0x86cc6e['RENDERMODE' + '_TRANSPARE' + 'NT'] = 0x2, _0x86cc6e['RENDERMODE' + '_ADDTIVE'] = 0x3, _0x86cc6e['ALBEDOTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoTe' + 'xture'), _0x86cc6e['ALBEDOCOLO' + 'R'] = _0x1ede74['propertyNa' + 'meToID']('u_AlbedoCo' + 'lor'), _0x86cc6e['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x86cc6e['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x86cc6e['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x86cc6e['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x86cc6e['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x86cc6e['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x86cc6e['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x4249a7 extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('WaterPrima' + 'ry'), this['_shaderVal' + 'ues']['setVector'](_0x4249a7['HORIZONCOL' + 'OR'], new _0x333f41(0.172, 0.463, 0.435, 0x0)), this['_shaderVal' + 'ues']['setNumber'](_0x4249a7['WAVESCALE'], 0.15), this['_shaderVal' + 'ues']['setVector'](_0x4249a7['WAVESPEED'], new _0x333f41(0x13, 0x9, -0x10, -0x7));
        }
        static ['__initDefi' + 'ne__']() {
            _0x4249a7['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x1ede74['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x4249a7['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE'] = _0x1ede74['getDefineB' + 'yName']('NORMALTEXT' + 'URE');
        }
        get ['horizonCol' + 'or']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4249a7['HORIZONCOL' + 'OR']);
        }
        set ['horizonCol' + 'or'](_0x2b7458) {
            this['_shaderVal' + 'ues']['setVector'](_0x4249a7['HORIZONCOL' + 'OR'], _0x2b7458);
        }
        get ['mainTextur' + 'e']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4249a7['MAINTEXTUR' + 'E']);
        }
        set ['mainTextur' + 'e'](_0x37f64e) {
            _0x37f64e ? this['_shaderVal' + 'ues']['addDefine'](_0x4249a7['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4249a7['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']), this['_shaderVal' + 'ues']['setTexture'](_0x4249a7['MAINTEXTUR' + 'E'], _0x37f64e);
        }
        get ['normalText' + 'ure']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x4249a7['NORMALTEXT' + 'URE']);
        }
        set ['normalText' + 'ure'](_0x3d5e71) {
            _0x3d5e71 ? this['_shaderVal' + 'ues']['addDefine'](_0x4249a7['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x4249a7['SHADERDEFI' + 'NE_NORMALT' + 'EXTURE']), this['_shaderVal' + 'ues']['setTexture'](_0x4249a7['NORMALTEXT' + 'URE'], _0x3d5e71);
        }
        get ['waveScale']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x4249a7['WAVESCALE']);
        }
        set ['waveScale'](_0x1b5a44) {
            this['_shaderVal' + 'ues']['setNumber'](_0x4249a7['WAVESCALE'], _0x1b5a44);
        }
        get ['waveSpeed']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x4249a7['WAVESPEED']);
        }
        set ['waveSpeed'](_0xfdde8d) {
            this['_shaderVal' + 'ues']['setVector'](_0x4249a7['WAVESPEED'], _0xfdde8d);
        }
        ['clone']() {
            var _0x31ed99 = new _0x4249a7();
            return this['cloneTo'](_0x31ed99), _0x31ed99;
        }
    }
    _0x4249a7['HORIZONCOL' + 'OR'] = _0x1ede74['propertyNa' + 'meToID']('u_HorizonC' + 'olor'), _0x4249a7['MAINTEXTUR' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_MainText' + 'ure'), _0x4249a7['NORMALTEXT' + 'URE'] = _0x1ede74['propertyNa' + 'meToID']('u_NormalTe' + 'xture'), _0x4249a7['WAVESCALE'] = _0x1ede74['propertyNa' + 'meToID']('u_WaveScal' + 'e'), _0x4249a7['WAVESPEED'] = _0x1ede74['propertyNa' + 'meToID']('u_WaveSpee' + 'd');
    class _0x210bda {
        constructor(_0x4cd46b = 0x1, _0x2f6f32 = 0x1, _0x2cae4f = 0x1, _0x52cef9 = 0x1) {
            this['r'] = _0x4cd46b, this['g'] = _0x2f6f32, this['b'] = _0x2cae4f, this['a'] = _0x52cef9;
        }
        static ['gammaToLin' + 'earSpace'](_0x45391a) {
            return _0x45391a <= 0.04045 ? _0x45391a / 12.92 : _0x45391a < 0x1 ? Math['pow']((_0x45391a + 0.055) / 1.055, 2.4) : Math['pow'](_0x45391a, 2.4);
        }
        static ['linearToGa' + 'mmaSpace'](_0x5eda91) {
            return _0x5eda91 <= 0x0 ? 0x0 : _0x5eda91 <= 0.0031308 ? 12.92 * _0x5eda91 : _0x5eda91 <= 0x1 ? 1.055 * Math['pow'](_0x5eda91, 0.41666) - 0.055 : Math['pow'](_0x5eda91, 0.41666);
        }
        ['toLinear'](_0xbd34ed) {
            _0xbd34ed['r'] = _0x210bda['gammaToLin' + 'earSpace'](this['r']), _0xbd34ed['g'] = _0x210bda['gammaToLin' + 'earSpace'](this['g']), _0xbd34ed['b'] = _0x210bda['gammaToLin' + 'earSpace'](this['b']);
        }
        ['toGamma'](_0x12e46c) {
            _0x12e46c['r'] = _0x210bda['linearToGa' + 'mmaSpace'](this['r']), _0x12e46c['g'] = _0x210bda['linearToGa' + 'mmaSpace'](this['g']), _0x12e46c['b'] = _0x210bda['linearToGa' + 'mmaSpace'](this['b']);
        }
        ['cloneTo'](_0x3c707b) {
            var _0x470f68 = _0x3c707b;
            _0x470f68['r'] = this['r'], _0x470f68['g'] = this['g'], _0x470f68['b'] = this['b'], _0x470f68['a'] = this['a'];
        }
        ['clone']() {
            var _0x4431fe = new _0x210bda();
            return this['cloneTo'](_0x4431fe), _0x4431fe;
        }
        ['forNativeE' + 'lement']() {
        }
    }
    _0x210bda['RED'] = new _0x210bda(0x1, 0x0, 0x0, 0x1), _0x210bda['GREEN'] = new _0x210bda(0x0, 0x1, 0x0, 0x1), _0x210bda['BLUE'] = new _0x210bda(0x0, 0x0, 0x1, 0x1), _0x210bda['CYAN'] = new _0x210bda(0x0, 0x1, 0x1, 0x1), _0x210bda['YELLOW'] = new _0x210bda(0x1, 0.92, 0.016, 0x1), _0x210bda['MAGENTA'] = new _0x210bda(0x1, 0x0, 0x1, 0x1), _0x210bda['GRAY'] = new _0x210bda(0.5, 0.5, 0.5, 0x1), _0x210bda['WHITE'] = new _0x210bda(0x1, 0x1, 0x1, 0x1), _0x210bda['BLACK'] = new _0x210bda(0x0, 0x0, 0x0, 0x1);
    class _0x328d6f {
        constructor() {
            this['_batchRend' + 'erElementP' + 'ool'] = [];
        }
        static ['_registerM' + 'anager'](_0x13ffa5) {
            _0x328d6f['_managers']['push'](_0x13ffa5);
        }
        ['_clear']() {
            this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['dispose']() {
        }
    }
    _0x328d6f['_managers'] = [];
    class _0x8f4324 extends _0x33d6e0['EventDispa' + 'tcher'] {
        constructor(_0x240d81) {
            super(), this['_localPosi' + 'tion'] = new _0x4795b3(0x0, 0x0, 0x0), this['_localRota' + 'tion'] = new _0x5958af(0x0, 0x0, 0x0, 0x1), this['_localScal' + 'e'] = new _0x4795b3(0x1, 0x1, 0x1), this['_localRota' + 'tionEuler'] = new _0x4795b3(0x0, 0x0, 0x0), this['_localMatr' + 'ix'] = new _0x16c2be(), this['_position'] = new _0x4795b3(0x0, 0x0, 0x0), this['_rotation'] = new _0x5958af(0x0, 0x0, 0x0, 0x1), this['_scale'] = new _0x4795b3(0x1, 0x1, 0x1), this['_rotationE' + 'uler'] = new _0x4795b3(0x0, 0x0, 0x0), this['_worldMatr' + 'ix'] = new _0x16c2be(), this['_children'] = null, this['_parent'] = null, this['_dummy'] = null, this['_transform' + 'Flag'] = 0x0, this['_owner'] = _0x240d81, this['_children'] = [], this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'LOCALEULER'] | _0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x1), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDEULER'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE'] | _0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'], !0x0);
        }
        get ['_isFrontFa' + 'ceInvert']() {
            var _0x26756f = this['getWorldLo' + 'ssyScale'](), _0xdd593e = _0x26756f['x'] < 0x0;
            return _0x26756f['y'] < 0x0 && (_0xdd593e = !_0xdd593e), _0x26756f['z'] < 0x0 && (_0xdd593e = !_0xdd593e), _0xdd593e;
        }
        get ['owner']() {
            return this['_owner'];
        }
        get ['worldNeedU' + 'pdate']() {
            return this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']);
        }
        get ['localPosit' + 'ionX']() {
            return this['_localPosi' + 'tion']['x'];
        }
        set ['localPosit' + 'ionX'](_0x2ecd3b) {
            this['_localPosi' + 'tion']['x'] = _0x2ecd3b, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ionY']() {
            return this['_localPosi' + 'tion']['y'];
        }
        set ['localPosit' + 'ionY'](_0x1c9c9d) {
            this['_localPosi' + 'tion']['y'] = _0x1c9c9d, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ionZ']() {
            return this['_localPosi' + 'tion']['z'];
        }
        set ['localPosit' + 'ionZ'](_0x37b67b) {
            this['_localPosi' + 'tion']['z'] = _0x37b67b, this['localPosit' + 'ion'] = this['_localPosi' + 'tion'];
        }
        get ['localPosit' + 'ion']() {
            return this['_localPosi' + 'tion'];
        }
        set ['localPosit' + 'ion'](_0x44c65d) {
            this['_localPosi' + 'tion'] !== _0x44c65d && _0x44c65d['cloneTo'](this['_localPosi' + 'tion']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_onWorldPo' + 'sitionTran' + 'sform']();
        }
        get ['localRotat' + 'ionX']() {
            return this['localRotat' + 'ion']['x'];
        }
        set ['localRotat' + 'ionX'](_0xf68259) {
            this['_localRota' + 'tion']['x'] = _0xf68259, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionY']() {
            return this['localRotat' + 'ion']['y'];
        }
        set ['localRotat' + 'ionY'](_0x2e27c6) {
            this['_localRota' + 'tion']['y'] = _0x2e27c6, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionZ']() {
            return this['localRotat' + 'ion']['z'];
        }
        set ['localRotat' + 'ionZ'](_0x162bef) {
            this['_localRota' + 'tion']['z'] = _0x162bef, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ionW']() {
            return this['localRotat' + 'ion']['w'];
        }
        set ['localRotat' + 'ionW'](_0x245ca1) {
            this['_localRota' + 'tion']['w'] = _0x245ca1, this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
        }
        get ['localRotat' + 'ion']() {
            if (this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALQUATE' + 'RNION'])) {
                var _0x304f6d = this['_localRota' + 'tionEuler'];
                _0x5958af['createFrom' + 'YawPitchRo' + 'll'](_0x304f6d['y'] / _0x8f4324['_angleToRa' + 'ndin'], _0x304f6d['x'] / _0x8f4324['_angleToRa' + 'ndin'], _0x304f6d['z'] / _0x8f4324['_angleToRa' + 'ndin'], this['_localRota' + 'tion']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALQUATE' + 'RNION'], !0x1);
            }
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x58c1b8) {
            this['_localRota' + 'tion'] !== _0x58c1b8 && _0x58c1b8['cloneTo'](this['_localRota' + 'tion']), this['_localRota' + 'tion']['normalize'](this['_localRota' + 'tion']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALEULER'] | _0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALQUATE' + 'RNION'], !0x1), this['_onWorldRo' + 'tationTran' + 'sform']();
        }
        get ['localScale' + 'X']() {
            return this['_localScal' + 'e']['x'];
        }
        set ['localScale' + 'X'](_0x456e16) {
            this['_localScal' + 'e']['x'] = _0x456e16, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale' + 'Y']() {
            return this['_localScal' + 'e']['y'];
        }
        set ['localScale' + 'Y'](_0x366ee8) {
            this['_localScal' + 'e']['y'] = _0x366ee8, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale' + 'Z']() {
            return this['_localScal' + 'e']['z'];
        }
        set ['localScale' + 'Z'](_0x55a711) {
            this['_localScal' + 'e']['z'] = _0x55a711, this['localScale'] = this['_localScal' + 'e'];
        }
        get ['localScale']() {
            return this['_localScal' + 'e'];
        }
        set ['localScale'](_0x7bc7c7) {
            this['_localScal' + 'e'] !== _0x7bc7c7 && _0x7bc7c7['cloneTo'](this['_localScal' + 'e']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_onWorldSc' + 'aleTransfo' + 'rm']();
        }
        get ['localRotat' + 'ionEulerX']() {
            return this['localRotat' + 'ionEuler']['x'];
        }
        set ['localRotat' + 'ionEulerX'](_0x2af418) {
            this['_localRota' + 'tionEuler']['x'] = _0x2af418, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEulerY']() {
            return this['localRotat' + 'ionEuler']['y'];
        }
        set ['localRotat' + 'ionEulerY'](_0x5513d7) {
            this['_localRota' + 'tionEuler']['y'] = _0x5513d7, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEulerZ']() {
            return this['localRotat' + 'ionEuler']['z'];
        }
        set ['localRotat' + 'ionEulerZ'](_0x50c0c2) {
            this['_localRota' + 'tionEuler']['z'] = _0x50c0c2, this['localRotat' + 'ionEuler'] = this['_localRota' + 'tionEuler'];
        }
        get ['localRotat' + 'ionEuler']() {
            if (this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALEULER'])) {
                this['_localRota' + 'tion']['getYawPitc' + 'hRoll'](_0x8f4324['_tempVecto' + 'r30']);
                var _0x414320 = _0x8f4324['_tempVecto' + 'r30'], _0x186b15 = this['_localRota' + 'tionEuler'];
                _0x186b15['x'] = _0x414320['y'] * _0x8f4324['_angleToRa' + 'ndin'], _0x186b15['y'] = _0x414320['x'] * _0x8f4324['_angleToRa' + 'ndin'], _0x186b15['z'] = _0x414320['z'] * _0x8f4324['_angleToRa' + 'ndin'], this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALEULER'], !0x1);
            }
            return this['_localRota' + 'tionEuler'];
        }
        set ['localRotat' + 'ionEuler'](_0x4a6bc8) {
            this['_localRota' + 'tionEuler'] !== _0x4a6bc8 && _0x4a6bc8['cloneTo'](this['_localRota' + 'tionEuler']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALEULER'], !0x1), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x0), this['_onWorldRo' + 'tationTran' + 'sform']();
        }
        get ['localMatri' + 'x']() {
            return this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X']) && (_0x16c2be['createAffi' + 'neTransfor' + 'mation'](this['_localPosi' + 'tion'], this['localRotat' + 'ion'], this['_localScal' + 'e'], this['_localMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x1)), this['_localMatr' + 'ix'];
        }
        set ['localMatri' + 'x'](_0x30dc83) {
            this['_localMatr' + 'ix'] !== _0x30dc83 && _0x30dc83['cloneTo'](this['_localMatr' + 'ix']), this['_localMatr' + 'ix']['decomposeT' + 'ransRotSca' + 'le'](this['_localPosi' + 'tion'], this['_localRota' + 'tion'], this['_localScal' + 'e']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALEULER'], !0x0), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'], !0x1), this['_onWorldTr' + 'ansform']();
        }
        get ['position']() {
            if (this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                if (null != this['_parent']) {
                    var _0x4709ac = this['worldMatri' + 'x']['elements'];
                    this['_position']['x'] = _0x4709ac[0xc], this['_position']['y'] = _0x4709ac[0xd], this['_position']['z'] = _0x4709ac[0xe];
                } else
                    this['_localPosi' + 'tion']['cloneTo'](this['_position']);
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x1);
            }
            return this['_position'];
        }
        set ['position'](_0x45af46) {
            if (null != this['_parent']) {
                var _0x47713b = _0x8f4324['_tempMatri' + 'x0'];
                this['_parent']['worldMatri' + 'x']['invert'](_0x47713b), _0x4795b3['transformC' + 'oordinate'](_0x45af46, _0x47713b, this['_localPosi' + 'tion']);
            } else
                _0x45af46['cloneTo'](this['_localPosi' + 'tion']);
            this['localPosit' + 'ion'] = this['_localPosi' + 'tion'], this['_position'] !== _0x45af46 && _0x45af46['cloneTo'](this['_position']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x1);
        }
        get ['rotation']() {
            return this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) && (null != this['_parent'] ? _0x5958af['multiply'](this['_parent']['rotation'], this['localRotat' + 'ion'], this['_rotation']) : this['localRotat' + 'ion']['cloneTo'](this['_rotation']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], !0x1)), this['_rotation'];
        }
        set ['rotation'](_0x15b072) {
            null != this['_parent'] ? (this['_parent']['rotation']['invert'](_0x8f4324['_tempQuate' + 'rnion0']), _0x5958af['multiply'](_0x8f4324['_tempQuate' + 'rnion0'], _0x15b072, this['_localRota' + 'tion'])) : _0x15b072['cloneTo'](this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion'], _0x15b072 !== this['_rotation'] && _0x15b072['cloneTo'](this['_rotation']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], !0x1);
        }
        get ['rotationEu' + 'ler']() {
            if (this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDEULER'])) {
                this['rotation']['getYawPitc' + 'hRoll'](_0x8f4324['_tempVecto' + 'r30']);
                var _0x475b85 = _0x8f4324['_tempVecto' + 'r30'], _0x55bf1b = this['_rotationE' + 'uler'];
                _0x55bf1b['x'] = _0x475b85['y'] * _0x8f4324['_angleToRa' + 'ndin'], _0x55bf1b['y'] = _0x475b85['x'] * _0x8f4324['_angleToRa' + 'ndin'], _0x55bf1b['z'] = _0x475b85['z'] * _0x8f4324['_angleToRa' + 'ndin'], this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDEULER'], !0x1);
            }
            return this['_rotationE' + 'uler'];
        }
        set ['rotationEu' + 'ler'](_0x3f7cef) {
            _0x5958af['createFrom' + 'YawPitchRo' + 'll'](_0x3f7cef['y'] / _0x8f4324['_angleToRa' + 'ndin'], _0x3f7cef['x'] / _0x8f4324['_angleToRa' + 'ndin'], _0x3f7cef['z'] / _0x8f4324['_angleToRa' + 'ndin'], this['_rotation']), this['rotation'] = this['_rotation'], this['_rotationE' + 'uler'] !== _0x3f7cef && _0x3f7cef['cloneTo'](this['_rotationE' + 'uler']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDEULER'], !0x1);
        }
        get ['worldMatri' + 'x']() {
            return this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) && (null != this['_parent'] ? _0x16c2be['multiply'](this['_parent']['worldMatri' + 'x'], this['localMatri' + 'x'], this['_worldMatr' + 'ix']) : this['localMatri' + 'x']['cloneTo'](this['_worldMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'], !0x1)), this['_worldMatr' + 'ix'];
        }
        set ['worldMatri' + 'x'](_0x3553d7) {
            null === this['_parent'] ? _0x3553d7['cloneTo'](this['_localMatr' + 'ix']) : (this['_parent']['worldMatri' + 'x']['invert'](this['_localMatr' + 'ix']), _0x16c2be['multiply'](this['_localMatr' + 'ix'], _0x3553d7, this['_localMatr' + 'ix'])), this['localMatri' + 'x'] = this['_localMatr' + 'ix'], this['_worldMatr' + 'ix'] !== _0x3553d7 && _0x3553d7['cloneTo'](this['_worldMatr' + 'ix']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'], !0x1);
        }
        ['_getScaleM' + 'atrix']() {
            var _0x153def = _0x8f4324['_tempQuate' + 'rnion0'], _0x2a3ef3 = _0x8f4324['_tempMatri' + 'x3x30'], _0x177a64 = _0x8f4324['_tempMatri' + 'x3x31'], _0x519582 = _0x8f4324['_tempMatri' + 'x3x32'];
            return _0x25d419['createFrom' + 'Matrix4x4'](this['worldMatri' + 'x'], _0x177a64), this['rotation']['invert'](_0x153def), _0x25d419['createRota' + 'tionQuater' + 'nion'](_0x153def, _0x2a3ef3), _0x25d419['multiply'](_0x2a3ef3, _0x177a64, _0x519582), _0x519582;
        }
        ['_setTransf' + 'ormFlag'](_0x588342, _0x3ca39b) {
            _0x3ca39b ? this['_transform' + 'Flag'] |= _0x588342 : this['_transform' + 'Flag'] &= ~_0x588342;
        }
        ['_getTransf' + 'ormFlag'](_0x217f19) {
            return 0x0 != (this['_transform' + 'Flag'] & _0x217f19);
        }
        ['_setParent'](_0x1cb2fc) {
            if (this['_parent'] !== _0x1cb2fc) {
                if (this['_parent']) {
                    var _0x2ded1f = this['_parent']['_children'], _0x428def = _0x2ded1f['indexOf'](this);
                    _0x2ded1f['splice'](_0x428def, 0x1);
                }
                _0x1cb2fc && (_0x1cb2fc['_children']['push'](this), _0x1cb2fc && this['_onWorldTr' + 'ansform']()), this['_parent'] = _0x1cb2fc;
            }
        }
        ['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']() {
            if (!(this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDEULER']))) {
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDEULER'], !0x0), this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x40d0d2 = 0x0, _0x56a470 = this['_children']['length']; _0x40d0d2 < _0x56a470; _0x40d0d2++)
                    this['_children'][_0x40d0d2]['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']();
            }
        }
        ['_onWorldPo' + 'sitionScal' + 'eTransform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) || !this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE'], !0x0), this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x5a875c = 0x0, _0x5de000 = this['_children']['length']; _0x5a875c < _0x5de000; _0x5a875c++)
                    this['_children'][_0x5a875c]['_onWorldPo' + 'sitionScal' + 'eTransform']();
            }
        }
        ['_onWorldPo' + 'sitionTran' + 'sform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x0), this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x180871 = 0x0, _0x543400 = this['_children']['length']; _0x180871 < _0x543400; _0x180871++)
                    this['_children'][_0x180871]['_onWorldPo' + 'sitionTran' + 'sform']();
            }
        }
        ['_onWorldRo' + 'tationTran' + 'sform']() {
            if (!this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) || !this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDEULER'])) {
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDEULER'], !0x0), this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x22cd2e = 0x0, _0x572eac = this['_children']['length']; _0x22cd2e < _0x572eac; _0x22cd2e++)
                    this['_children'][_0x22cd2e]['_onWorldPo' + 'sitionRota' + 'tionTransf' + 'orm']();
            }
        }
        ['_onWorldSc' + 'aleTransfo' + 'rm']() {
            if (!this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) || !this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'])) {
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE'], !0x0), this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x1ee1e2 = 0x0, _0x1e28ec = this['_children']['length']; _0x1ee1e2 < _0x1e28ec; _0x1ee1e2++)
                    this['_children'][_0x1ee1e2]['_onWorldPo' + 'sitionScal' + 'eTransform']();
            }
        }
        ['_onWorldTr' + 'ansform']() {
            if (!(this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDEULER']) && this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE']))) {
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] | _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDEULER'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE'], !0x0), this['event'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this['_transform' + 'Flag']);
                for (var _0x151915 = 0x0, _0x4c462c = this['_children']['length']; _0x151915 < _0x4c462c; _0x151915++)
                    this['_children'][_0x151915]['_onWorldTr' + 'ansform']();
            }
        }
        ['translate'](_0x9bea52, _0x46dedf = !0x0) {
            _0x46dedf ? (_0x16c2be['createFrom' + 'Quaternion'](this['localRotat' + 'ion'], _0x8f4324['_tempMatri' + 'x0']), _0x4795b3['transformC' + 'oordinate'](_0x9bea52, _0x8f4324['_tempMatri' + 'x0'], _0x8f4324['_tempVecto' + 'r30']), _0x4795b3['add'](this['localPosit' + 'ion'], _0x8f4324['_tempVecto' + 'r30'], this['_localPosi' + 'tion']), this['localPosit' + 'ion'] = this['_localPosi' + 'tion']) : (_0x4795b3['add'](this['position'], _0x9bea52, this['_position']), this['position'] = this['_position']);
        }
        ['rotate'](_0x53d9f8, _0x169f01 = !0x0, _0x3e2480 = !0x0) {
            var _0x8fdb9c;
            _0x3e2480 ? _0x8fdb9c = _0x53d9f8 : (_0x4795b3['scale'](_0x53d9f8, Math['PI'] / 0xb4, _0x8f4324['_tempVecto' + 'r30']), _0x8fdb9c = _0x8f4324['_tempVecto' + 'r30']), _0x5958af['createFrom' + 'YawPitchRo' + 'll'](_0x8fdb9c['y'], _0x8fdb9c['x'], _0x8fdb9c['z'], _0x8f4324['_tempQuate' + 'rnion0']), _0x169f01 ? (_0x5958af['multiply'](this['_localRota' + 'tion'], _0x8f4324['_tempQuate' + 'rnion0'], this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion']) : (_0x5958af['multiply'](_0x8f4324['_tempQuate' + 'rnion0'], this['rotation'], this['_rotation']), this['rotation'] = this['_rotation']);
        }
        ['getForward'](_0x12948b) {
            var _0x33d26e = this['worldMatri' + 'x']['elements'];
            _0x12948b['x'] = -_0x33d26e[0x8], _0x12948b['y'] = -_0x33d26e[0x9], _0x12948b['z'] = -_0x33d26e[0xa];
        }
        ['getUp'](_0x31e463) {
            var _0x58d688 = this['worldMatri' + 'x']['elements'];
            _0x31e463['x'] = _0x58d688[0x4], _0x31e463['y'] = _0x58d688[0x5], _0x31e463['z'] = _0x58d688[0x6];
        }
        ['getRight'](_0x17952d) {
            var _0x32f41d = this['worldMatri' + 'x']['elements'];
            _0x17952d['x'] = _0x32f41d[0x0], _0x17952d['y'] = _0x32f41d[0x1], _0x17952d['z'] = _0x32f41d[0x2];
        }
        ['lookAt'](_0x25dac1, _0x4113ce, _0x1688b5 = !0x1) {
            var _0x54215d;
            if (_0x1688b5) {
                if (_0x54215d = this['_localPosi' + 'tion'], Math['abs'](_0x54215d['x'] - _0x25dac1['x']) < _0x183ae5['zeroTolera' + 'nce'] && Math['abs'](_0x54215d['y'] - _0x25dac1['y']) < _0x183ae5['zeroTolera' + 'nce'] && Math['abs'](_0x54215d['z'] - _0x25dac1['z']) < _0x183ae5['zeroTolera' + 'nce'])
                    return;
                _0x5958af['lookAt'](this['_localPosi' + 'tion'], _0x25dac1, _0x4113ce, this['_localRota' + 'tion']), this['_localRota' + 'tion']['invert'](this['_localRota' + 'tion']), this['localRotat' + 'ion'] = this['_localRota' + 'tion'];
            } else {
                var _0x1ce70c = this['position'];
                if (_0x54215d = _0x1ce70c, Math['abs'](_0x54215d['x'] - _0x25dac1['x']) < _0x183ae5['zeroTolera' + 'nce'] && Math['abs'](_0x54215d['y'] - _0x25dac1['y']) < _0x183ae5['zeroTolera' + 'nce'] && Math['abs'](_0x54215d['z'] - _0x25dac1['z']) < _0x183ae5['zeroTolera' + 'nce'])
                    return;
                _0x5958af['lookAt'](_0x1ce70c, _0x25dac1, _0x4113ce, this['_rotation']), this['_rotation']['invert'](this['_rotation']), this['rotation'] = this['_rotation'];
            }
        }
        ['getWorldLo' + 'ssyScale']() {
            if (this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'])) {
                if (null !== this['_parent']) {
                    var _0x3a3411 = this['_getScaleM' + 'atrix']()['elements'];
                    this['_scale']['x'] = _0x3a3411[0x0], this['_scale']['y'] = _0x3a3411[0x4], this['_scale']['z'] = _0x3a3411[0x8];
                } else
                    this['_localScal' + 'e']['cloneTo'](this['_scale']);
                this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'], !0x1);
            }
            return this['_scale'];
        }
        ['setWorldLo' + 'ssyScale'](_0x12b9b1) {
            if (null !== this['_parent']) {
                var _0x5b2b39 = _0x8f4324['_tempMatri' + 'x3x33'], _0xc86440 = _0x8f4324['_tempMatri' + 'x3x33'], _0x1b48c8 = _0xc86440['elements'], _0x3afc53 = this['_parent']['_getScaleM' + 'atrix']();
                _0x3afc53['invert'](_0x3afc53), _0x25d419['createFrom' + 'Scaling'](_0x12b9b1, _0x5b2b39), _0x25d419['multiply'](_0x3afc53, _0x5b2b39, _0xc86440), this['_localScal' + 'e']['x'] = _0x1b48c8[0x0], this['_localScal' + 'e']['y'] = _0x1b48c8[0x4], this['_localScal' + 'e']['z'] = _0x1b48c8[0x8];
            } else
                _0x12b9b1['cloneTo'](this['_localScal' + 'e']);
            this['localScale'] = this['_localScal' + 'e'], this['_scale'] !== _0x12b9b1 && _0x12b9b1['cloneTo'](this['_scale']), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'], !0x1);
        }
        get ['scale']() {
            return console['warn']('Transfrm3D' + ':\x20discard\x20' + 'function,p' + 'lease\x20use\x20' + 'getWorldLo' + 'ssyScale\x20i' + 'nstead.'), this['getWorldLo' + 'ssyScale']();
        }
        set ['scale'](_0x23f947) {
            console['warn']('Transfrm3D' + ':\x20discard\x20' + 'function,p' + 'lease\x20use\x20' + 'setWorldLo' + 'ssyScale\x20i' + 'nstead.'), this['setWorldLo' + 'ssyScale'](_0x23f947);
        }
    }
    _0x8f4324['_tempVecto' + 'r30'] = new _0x4795b3(), _0x8f4324['_tempQuate' + 'rnion0'] = new _0x5958af(), _0x8f4324['_tempMatri' + 'x0'] = new _0x16c2be(), _0x8f4324['_tempMatri' + 'x3x30'] = new _0x25d419(), _0x8f4324['_tempMatri' + 'x3x31'] = new _0x25d419(), _0x8f4324['_tempMatri' + 'x3x32'] = new _0x25d419(), _0x8f4324['_tempMatri' + 'x3x33'] = new _0x25d419(), _0x8f4324['TRANSFORM_' + 'LOCALQUATE' + 'RNION'] = 0x1, _0x8f4324['TRANSFORM_' + 'LOCALEULER'] = 0x2, _0x8f4324['TRANSFORM_' + 'LOCALMATRI' + 'X'] = 0x4, _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] = 0x8, _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] = 0x10, _0x8f4324['TRANSFORM_' + 'WORLDSCALE'] = 0x20, _0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X'] = 0x40, _0x8f4324['TRANSFORM_' + 'WORLDEULER'] = 0x80, _0x8f4324['_angleToRa' + 'ndin'] = 0xb4 / Math['PI'];
    class _0x2fcf9a extends _0x33d6e0['Node'] {
        constructor(_0x51ccf7 = null, _0x56d66d = !0x1) {
            super(), this['_needProce' + 'ssCollisio' + 'ns'] = !0x1, this['_needProce' + 'ssTriggers'] = !0x1, this['_id'] = ++_0x2fcf9a['_uniqueIDC' + 'ounter'], this['_transform'] = new _0x8f4324(this), this['_isStatic'] = _0x56d66d, this['layer'] = 0x0, this['name'] = _0x51ccf7 || 'New\x20Sprite' + '3D';
        }
        static ['__init__']() {
        }
        static ['instantiat' + 'e'](_0x16df35, _0x197d3c = null, _0x16c512 = !0x0, _0xe9ad8c = null, _0x40d24f = null) {
            var _0x3afc0b = _0x16df35['clone']();
            _0x197d3c && _0x197d3c['addChild'](_0x3afc0b);
            var _0x323bc6 = _0x3afc0b['transform'];
            if (_0x16c512) {
                var _0x2c25d9 = _0x323bc6['worldMatri' + 'x'];
                _0x16df35['transform']['worldMatri' + 'x']['cloneTo'](_0x2c25d9), _0x323bc6['worldMatri' + 'x'] = _0x2c25d9;
            } else
                _0xe9ad8c && (_0x323bc6['position'] = _0xe9ad8c), _0x40d24f && (_0x323bc6['rotation'] = _0x40d24f);
            return _0x3afc0b;
        }
        static ['load'](_0x4d8a0a, _0x30bf26) {
            _0x33d6e0['Laya']['loader']['create'](_0x4d8a0a, _0x30bf26, null, _0x2fcf9a['HIERARCHY']);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['layer']() {
            return this['_layer'];
        }
        set ['layer'](_0x508034) {
            if (this['_layer'] !== _0x508034) {
                if (!(_0x508034 >= 0x0 && _0x508034 <= 0x1e))
                    throw new Error('Layer\x20valu' + 'e\x20must\x20be\x20' + '0-30.');
                this['_layer'] = _0x508034;
            }
        }
        get ['url']() {
            return this['_url'];
        }
        get ['isStatic']() {
            return this['_isStatic'];
        }
        get ['transform']() {
            return this['_transform'];
        }
        ['_setCreate' + 'URL'](_0x1bc316) {
            this['_url'] = _0x33d6e0['URL']['formatURL'](_0x1bc316);
        }
        ['_changeAni' + 'matorsToLi' + 'nkSprite3D'](_0x459d37, _0x520f74, _0x518adb) {
            var _0x3c63f4 = this['getCompone' + 'nt'](_0x40f618);
            if (_0x3c63f4 && (_0x3c63f4['avatar'] || _0x459d37['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0x3c63f4, _0x520f74, _0x518adb)), this['_parent'] && this['_parent'] instanceof _0x2fcf9a) {
                _0x518adb['unshift'](this['_parent']['name']);
                var _0x2c72bf = this['_parent'];
                _0x2c72bf['_hierarchy' + 'Animator'] && _0x2c72bf['_changeAni' + 'matorsToLi' + 'nkSprite3D'](_0x459d37, _0x520f74, _0x518adb);
            }
        }
        ['_setHierar' + 'chyAnimato' + 'r'](_0x599d20, _0x3273e0) {
            this['_changeHie' + 'rarchyAnim' + 'ator'](_0x599d20), this['_changeAni' + 'matorAvata' + 'r'](_0x599d20['avatar']);
            for (var _0x19b421 = 0x0, _0x61b63b = this['_children']['length']; _0x19b421 < _0x61b63b; _0x19b421++) {
                var _0x4f4041 = this['_children'][_0x19b421];
                _0x4f4041['_hierarchy' + 'Animator'] == _0x3273e0 && _0x4f4041['_setHierar' + 'chyAnimato' + 'r'](_0x599d20, _0x3273e0);
            }
        }
        ['_clearHier' + 'archyAnima' + 'tor'](_0x353e6c, _0xa4896a) {
            this['_changeHie' + 'rarchyAnim' + 'ator'](_0xa4896a), this['_changeAni' + 'matorAvata' + 'r'](_0xa4896a ? _0xa4896a['avatar'] : null);
            for (var _0x31b255 = 0x0, _0x127eea = this['_children']['length']; _0x31b255 < _0x127eea; _0x31b255++) {
                var _0x50aaa9 = this['_children'][_0x31b255];
                _0x50aaa9['_hierarchy' + 'Animator'] == _0x353e6c && _0x50aaa9['_clearHier' + 'archyAnima' + 'tor'](_0x353e6c, _0xa4896a);
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'atorAvatar'](_0x532f8a, _0x489deb) {
            this['_changeAni' + 'matorAvata' + 'r'](_0x489deb);
            for (var _0x5e55fb = 0x0, _0x5ad0ee = this['_children']['length']; _0x5e55fb < _0x5ad0ee; _0x5e55fb++) {
                var _0x5193ba = this['_children'][_0x5e55fb];
                _0x5193ba['_hierarchy' + 'Animator'] == _0x532f8a && _0x5193ba['_changeHie' + 'rarchyAnim' + 'atorAvatar'](_0x532f8a, _0x489deb);
            }
        }
        ['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0xeb409d, _0x3bcd14, _0xce5c50) {
            _0xeb409d['_handleSpr' + 'iteOwnersB' + 'ySprite'](_0x3bcd14, _0xce5c50, this);
            for (var _0x5d0bcd = 0x0, _0x3e59ae = this['_children']['length']; _0x5d0bcd < _0x3e59ae; _0x5d0bcd++) {
                var _0x2612b7 = this['_children'][_0x5d0bcd], _0x1938a4 = _0xce5c50['length'];
                _0xce5c50['push'](_0x2612b7['name']), _0x2612b7['_changeAni' + 'matorToLin' + 'kSprite3DN' + 'oAvatar'](_0xeb409d, _0x3bcd14, _0xce5c50), _0xce5c50['splice'](_0x1938a4, 0x1);
            }
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x11669a) {
            this['_hierarchy' + 'Animator'] = _0x11669a;
        }
        ['_changeAni' + 'matorAvata' + 'r'](_0x27054b) {
        }
        ['_onAdded']() {
            if (this['_parent'] instanceof _0x2fcf9a) {
                var _0x509339 = this['_parent'];
                this['transform']['_setParent'](_0x509339['transform']), _0x509339['_hierarchy' + 'Animator'] && (!this['_hierarchy' + 'Animator'] && this['_setHierar' + 'chyAnimato' + 'r'](_0x509339['_hierarchy' + 'Animator'], null), _0x509339['_changeAni' + 'matorsToLi' + 'nkSprite3D'](this, !0x0, [this['name']]));
            }
            super['_onAdded']();
        }
        ['_onRemoved']() {
            if (super['_onRemoved'](), this['_parent'] instanceof _0x2fcf9a) {
                var _0x6859d9 = this['_parent'];
                this['transform']['_setParent'](null), _0x6859d9['_hierarchy' + 'Animator'] && (this['_hierarchy' + 'Animator'] == _0x6859d9['_hierarchy' + 'Animator'] && this['_clearHier' + 'archyAnima' + 'tor'](_0x6859d9['_hierarchy' + 'Animator'], null), _0x6859d9['_changeAni' + 'matorsToLi' + 'nkSprite3D'](this, !0x1, [this['name']]));
            }
        }
        ['_parse'](_0x36c9ce, _0x308726) {
            if (void 0x0 !== _0x36c9ce['isStatic'] && (this['_isStatic'] = _0x36c9ce['isStatic']), void 0x0 !== _0x36c9ce['active'] && (this['active'] = _0x36c9ce['active']), null != _0x36c9ce['name'] && (this['name'] = _0x36c9ce['name']), void 0x0 !== _0x36c9ce['position']) {
                var _0x1d424f = this['transform']['localPosit' + 'ion'];
                _0x1d424f['fromArray'](_0x36c9ce['position']), this['transform']['localPosit' + 'ion'] = _0x1d424f;
            }
            if (void 0x0 !== _0x36c9ce['rotationEu' + 'ler']) {
                var _0x95508f = this['transform']['localRotat' + 'ionEuler'];
                _0x95508f['fromArray'](_0x36c9ce['rotationEu' + 'ler']), this['transform']['localRotat' + 'ionEuler'] = _0x95508f;
            }
            if (void 0x0 !== _0x36c9ce['rotation']) {
                var _0x4645d8 = this['transform']['localRotat' + 'ion'];
                _0x4645d8['fromArray'](_0x36c9ce['rotation']), this['transform']['localRotat' + 'ion'] = _0x4645d8;
            }
            if (void 0x0 !== _0x36c9ce['scale']) {
                var _0x51d086 = this['transform']['localScale'];
                _0x51d086['fromArray'](_0x36c9ce['scale']), this['transform']['localScale'] = _0x51d086;
            }
            null != _0x36c9ce['layer'] && (this['layer'] = _0x36c9ce['layer']);
        }
        ['_cloneTo'](_0x47fd16, _0x4ede5d, _0x3fca5f) {
            if (this['destroyed'])
                throw new Error('Sprite3D:\x20' + 'Can\x27t\x20be\x20c' + 'loned\x20if\x20t' + 'he\x20Sprite3' + 'D\x20has\x20dest' + 'royed.');
            var _0xdea337 = _0x47fd16, _0x3bbdca = this['_transform'], _0x2a7783 = _0xdea337['_transform'];
            _0xdea337['name'] = this['name'], _0xdea337['destroyed'] = this['destroyed'], _0xdea337['active'] = this['active'], _0x2a7783['localPosit' + 'ion'] = _0x3bbdca['localPosit' + 'ion'], _0x2a7783['localRotat' + 'ion'] = _0x3bbdca['localRotat' + 'ion'], _0x2a7783['localScale'] = _0x3bbdca['localScale'], _0xdea337['_isStatic'] = this['_isStatic'], _0xdea337['layer'] = this['layer'], super['_cloneTo'](_0xdea337, _0x4ede5d, _0x3fca5f);
        }
        static ['_createSpr' + 'ite3DInsta' + 'nce'](_0x2324c5) {
            for (var _0xf952ab = _0x2324c5['_create'](), _0x34f2d8 = _0x2324c5['_children'], _0x26c861 = 0x0, _0x40f3fa = _0x34f2d8['length']; _0x26c861 < _0x40f3fa; _0x26c861++) {
                var _0x3a1c7e = _0x2fcf9a['_createSpr' + 'ite3DInsta' + 'nce'](_0x34f2d8[_0x26c861]);
                _0xf952ab['addChild'](_0x3a1c7e);
            }
            return _0xf952ab;
        }
        static ['_parseSpri' + 'te3DInstan' + 'ce'](_0x397130, _0x1b7d8a, _0x214f64, _0x3752f3) {
            for (var _0x405969 = _0x214f64['_children'], _0x19db30 = _0x3752f3['_children'], _0x418645 = 0x0, _0xdeeeac = _0x405969['length']; _0x418645 < _0xdeeeac; _0x418645++)
                _0x2fcf9a['_parseSpri' + 'te3DInstan' + 'ce'](_0x397130, _0x1b7d8a, _0x405969[_0x418645], _0x19db30[_0x418645]);
            _0x214f64['_cloneTo'](_0x3752f3, _0x397130, _0x1b7d8a);
        }
        ['clone']() {
            var _0x3506f2 = _0x2fcf9a['_createSpr' + 'ite3DInsta' + 'nce'](this);
            return _0x2fcf9a['_parseSpri' + 'te3DInstan' + 'ce'](this, _0x3506f2, this, _0x3506f2), _0x3506f2;
        }
        ['destroy'](_0x2c0a81 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x2c0a81), this['_transform'] = null, this['_scripts'] = null, this['_url'] && _0x33d6e0['Loader']['clearRes'](this['_url']));
        }
        ['_create']() {
            return new _0x2fcf9a();
        }
    }
    _0x2fcf9a['HIERARCHY'] = 'HIERARCHY', _0x2fcf9a['WORLDMATRI' + 'X'] = _0x1ede74['propertyNa' + 'meToID']('u_WorldMat'), _0x2fcf9a['MVPMATRIX'] = _0x1ede74['propertyNa' + 'meToID']('u_MvpMatri' + 'x'), _0x2fcf9a['_uniqueIDC' + 'ounter'] = 0x0;
    class _0x33bc07 extends _0x2fcf9a {
        constructor(_0xdb8c9c) {
            super(_0xdb8c9c);
        }
        static ['__init__']() {
            _0x33bc07['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW'] = _0x1ede74['getDefineB' + 'yName']('RECEIVESHA' + 'DOW'), _0x33bc07['SHADERDEFI' + 'NE_SCALEOF' + 'FSETLIGHTI' + 'NGMAPUV'] = _0x1ede74['getDefineB' + 'yName']('SCALEOFFSE' + 'TLIGHTINGM' + 'APUV'), _0x33bc07['SAHDERDEFI' + 'NE_LIGHTMA' + 'P'] = _0x1ede74['getDefineB' + 'yName']('LIGHTMAP');
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e'](), this['_scene']['_removeRen' + 'derObject'](this['_render']);
        }
        ['_onActive']() {
            super['_onActive'](), this['_scene']['_addRender' + 'Object'](this['_render']);
        }
        ['_onActiveI' + 'nScene']() {
            if (super['_onActiveI' + 'nScene'](), _0x334864['Laya3D']['_editerEnv' + 'ironment']) {
                var _0x3dc559 = this['_scene'], _0x3db07c = new _0x333f41();
                _0x3dc559['_allotPick' + 'ColorByID'](this['id'], _0x3db07c), _0x3dc559['_pickIdToS' + 'prite'][this['id']] = this, this['_render']['_shaderVal' + 'ues']['setVector'](_0x33bc07['PICKCOLOR'], _0x3db07c);
            }
        }
        ['_addToInit' + 'StaticBatc' + 'hManager']() {
        }
        ['_setBelong' + 'Scene'](_0x386010) {
            super['_setBelong' + 'Scene'](_0x386010), this['_render']['_setBelong' + 'Scene'](_0x386010);
        }
        ['_setUnBelo' + 'ngScene']() {
            this['_render']['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x33bc07['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), super['_setUnBelo' + 'ngScene']();
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x48b846) {
            if (this['_hierarchy' + 'Animator']) {
                var _0x240a1a = this['_hierarchy' + 'Animator']['_renderabl' + 'eSprites'];
                _0x240a1a['splice'](_0x240a1a['indexOf'](this), 0x1);
            }
            _0x48b846 && _0x48b846['_renderabl' + 'eSprites']['push'](this), super['_changeHie' + 'rarchyAnim' + 'ator'](_0x48b846);
        }
        ['destroy'](_0x12318a = !0x0) {
            super['destroy'](_0x12318a), this['_render']['_destroy'](), this['_render'] = null;
        }
        ['_create']() {
            return new _0x33bc07(this['name']);
        }
    }
    _0x33bc07['LIGHTMAPSC' + 'ALEOFFSET'] = _0x1ede74['propertyNa' + 'meToID']('u_Lightmap' + 'ScaleOffse' + 't'), _0x33bc07['LIGHTMAP'] = _0x1ede74['propertyNa' + 'meToID']('u_LightMap'), _0x33bc07['PICKCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_PickColo' + 'r');
    class _0x11568b {
        constructor() {
            this['_initBatch' + 'Sprites'] = [], this['_staticBat' + 'ches'] = {}, this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0, this['_batchRend' + 'erElementP' + 'ool'] = [];
        }
        static ['_addToStat' + 'icBatchQue' + 'ue'](_0x577091, _0x3dba87) {
            _0x577091 instanceof _0x33bc07 && _0x3dba87['push'](_0x577091);
            for (var _0x446eb3 = 0x0, _0x67a516 = _0x577091['numChildre' + 'n']; _0x446eb3 < _0x67a516; _0x446eb3++)
                _0x11568b['_addToStat' + 'icBatchQue' + 'ue'](_0x577091['_children'][_0x446eb3], _0x3dba87);
        }
        static ['_registerM' + 'anager'](_0x2bec3f) {
            _0x11568b['_managers']['push'](_0x2bec3f);
        }
        static ['combine'](_0x4f9bac, _0x352e94 = null) {
            _0x352e94 || (_0x352e94 = [], _0x4f9bac && _0x11568b['_addToStat' + 'icBatchQue' + 'ue'](_0x4f9bac, _0x352e94));
            var _0x4f1a1b = _0x352e94['length'];
            if (_0x4f1a1b > 0x0) {
                for (var _0x3abd78 = 0x0; _0x3abd78 < _0x4f1a1b; _0x3abd78++) {
                    var _0x60318a = _0x352e94[_0x3abd78];
                    _0x60318a['destroyed'] || (_0x60318a['_render']['_isPartOfS' + 'taticBatch'] ? console['warn']('StaticBatc' + 'hManager:\x20' + 'Sprite\x20' + _0x60318a['name'] + ('\x20has\x20a\x20par' + 't\x20of\x20Stati' + 'c\x20Batch,it' + '\x20will\x20be\x20i' + 'gnore.')) : _0x60318a['_addToInit' + 'StaticBatc' + 'hManager']());
                }
                for (var _0x23e79a = 0x0, _0x580d7a = _0x11568b['_managers']['length']; _0x23e79a < _0x580d7a; _0x23e79a++) {
                    _0x11568b['_managers'][_0x23e79a]['_initStati' + 'cBatchs'](_0x4f9bac);
                }
            }
        }
        ['_partition'](_0x46d60d, _0x2c4976, _0x30df02) {
            for (var _0x179a0c = _0x46d60d[Math['floor']((_0x30df02 + _0x2c4976) / 0x2)]; _0x2c4976 <= _0x30df02;) {
                for (; this['_compare'](_0x46d60d[_0x2c4976], _0x179a0c) < 0x0;)
                    _0x2c4976++;
                for (; this['_compare'](_0x46d60d[_0x30df02], _0x179a0c) > 0x0;)
                    _0x30df02--;
                if (_0x2c4976 < _0x30df02) {
                    var _0xc9214c = _0x46d60d[_0x2c4976];
                    _0x46d60d[_0x2c4976] = _0x46d60d[_0x30df02], _0x46d60d[_0x30df02] = _0xc9214c, _0x2c4976++, _0x30df02--;
                } else {
                    if (_0x2c4976 === _0x30df02) {
                        _0x2c4976++;
                        break;
                    }
                }
            }
            return _0x2c4976;
        }
        ['_quickSort'](_0x53738c, _0x337478, _0x5acfec) {
            if (_0x53738c['length'] > 0x1) {
                var _0x468f02 = this['_partition'](_0x53738c, _0x337478, _0x5acfec), _0x579a3f = _0x468f02 - 0x1;
                _0x337478 < _0x579a3f && this['_quickSort'](_0x53738c, _0x337478, _0x579a3f), _0x468f02 < _0x5acfec && this['_quickSort'](_0x53738c, _0x468f02, _0x5acfec);
            }
        }
        ['_compare'](_0x1fd673, _0x46132c) {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_initStati' + 'cBatchs'](_0x2290a7) {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            throw 'StaticBatc' + 'h:must\x20ove' + 'rride\x20this' + '\x20function.';
        }
        ['_addBatchS' + 'prite'](_0x409a55) {
            this['_initBatch' + 'Sprites']['push'](_0x409a55);
        }
        ['_clear']() {
            this['_batchRend' + 'erElementP' + 'oolIndex'] = 0x0;
        }
        ['_garbageCo' + 'llection']() {
            throw 'StaticBatc' + 'hManager:\x20' + 'must\x20overr' + 'ide\x20it.';
        }
        ['dispose']() {
            this['_staticBat' + 'ches'] = null;
        }
    }
    _0x11568b['_managers'] = [];
    class _0x2585ad {
        constructor() {
        }
        static ['__init__']() {
            _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (_0x2585ad['_cullingBu' + 'fferLength'] = 0x0, _0x2585ad['_cullingBu' + 'ffer'] = new Float32Array(0x1000));
        }
        static ['_drawTrave' + 'rsalCullin' + 'gBound'](_0x50075c, _0x4a8bc9) {
            _0x50075c['length'];
            for (var _0xab3bb = _0x50075c['elements'], _0x6d3f1a = 0x0, _0x10e6ed = _0x50075c['length']; _0x6d3f1a < _0x10e6ed; _0x6d3f1a++) {
                var _0x460c90 = _0x2585ad['_tempColor' + '0'];
                _0x460c90['r'] = 0x0, _0x460c90['g'] = 0x1, _0x460c90['b'] = 0x0, _0x460c90['a'] = 0x1, _0x89f66e['_drawBound'](_0x4a8bc9, _0xab3bb[_0x6d3f1a]['bounds']['_getBoundB' + 'ox'](), _0x460c90);
            }
        }
        static ['_traversal' + 'Culling'](_0x1bb4c0, _0x53c4d3, _0x502b5d, _0xc8b984, _0x28c272, _0x1199a5, _0x4b37ad) {
            for (var _0x68376d = _0xc8b984['elements'], _0x2a2597 = _0x1bb4c0['boundFrust' + 'um'], _0x1c5c12 = _0x1bb4c0['_transform']['position'], _0x41fe64 = 0x0, _0x1271ce = _0xc8b984['length']; _0x41fe64 < _0x1271ce; _0x41fe64++) {
                var _0x2c923e = _0x68376d[_0x41fe64];
                if (_0x4b37ad ? _0x2c923e['_castShado' + 'w'] && _0x2c923e['_enable'] : _0x1bb4c0['_isLayerVi' + 'sible'](_0x2c923e['_owner']['_layer']) && _0x2c923e['_enable']) {
                    if (_0x33d6e0['Stat']['frustumCul' + 'ling']++, !_0x1bb4c0['useOcclusi' + 'onCulling'] || _0x2c923e['_needRende' + 'r'](_0x2a2597, _0x502b5d)) {
                        _0x2c923e['_visible'] = !0x0, _0x2c923e['_distanceF' + 'orSort'] = _0x4795b3['distance'](_0x2c923e['bounds']['getCenter'](), _0x1c5c12);
                        for (var _0x4bdb6a = _0x2c923e['_renderEle' + 'ments'], _0x2e78b1 = 0x0, _0x704053 = _0x4bdb6a['length']; _0x2e78b1 < _0x704053; _0x2e78b1++)
                            _0x4bdb6a[_0x2e78b1]['_update'](_0x53c4d3, _0x502b5d, _0x28c272, _0x1199a5);
                    } else
                        _0x2c923e['_visible'] = !0x1;
                } else
                    _0x2c923e['_visible'] = !0x1;
            }
        }
        static ['renderObje' + 'ctCulling'](_0x1022c4, _0x24c74f, _0x51667c, _0x2627c1, _0x221639, _0x52ef89) {
            var _0x330ad9, _0x10c847, _0x2f1157 = _0x24c74f['_opaqueQue' + 'ue'], _0x525eaf = _0x24c74f['_transpare' + 'ntQueue'], _0xfc84a1 = _0x24c74f['_renders'];
            _0x2f1157['clear'](), _0x525eaf['clear']();
            var _0x333b91 = _0x11568b['_managers'];
            for (_0x330ad9 = 0x0, _0x10c847 = _0x333b91['length']; _0x330ad9 < _0x10c847; _0x330ad9++)
                _0x333b91[_0x330ad9]['_clear']();
            var _0x6cd335 = _0x328d6f['_managers'];
            for (_0x330ad9 = 0x0, _0x10c847 = _0x6cd335['length']; _0x330ad9 < _0x10c847; _0x330ad9++)
                _0x6cd335[_0x330ad9]['_clear']();
            var _0x4b4757 = _0x24c74f['_octree'];
            if (_0x4b4757 && (_0x4b4757['updateMoti' + 'onObjects'](), _0x4b4757['shrinkRoot' + 'IfPossible'](), _0x4b4757['getCollidi' + 'ngWithFrus' + 'tum'](_0x51667c, _0x2627c1, _0x221639, _0x52ef89)), _0x2585ad['_traversal' + 'Culling'](_0x1022c4, _0x24c74f, _0x51667c, _0xfc84a1, _0x2627c1, _0x221639, _0x52ef89), _0x2585ad['debugFrust' + 'umCulling']) {
                var _0x35d67e = _0x24c74f['_debugTool'];
                _0x35d67e['clear'](), _0x4b4757 && (_0x4b4757['drawAllBou' + 'nds'](_0x35d67e), _0x4b4757['drawAllObj' + 'ects'](_0x35d67e)), _0x2585ad['_drawTrave' + 'rsalCullin' + 'gBound'](_0xfc84a1, _0x35d67e);
            }
            var _0x3e5337 = _0x2f1157['elements']['length'];
            _0x3e5337 > 0x0 && _0x2f1157['_quickSort'](0x0, _0x3e5337 - 0x1), (_0x3e5337 = _0x525eaf['elements']['length']) > 0x0 && _0x525eaf['_quickSort'](0x0, _0x3e5337 - 0x1);
        }
        static ['renderObje' + 'ctCullingN' + 'ative'](_0x584960, _0x1c651c, _0x3ef1ec, _0x2d85a6, _0x2a87cf, _0x3ae45c) {
            var _0x5d2b77, _0x1bcc3a, _0x1fc5d4, _0x18d248, _0x46fe87 = _0x1c651c['_opaqueQue' + 'ue'], _0x4712b3 = _0x1c651c['_transpare' + 'ntQueue'];
            _0x46fe87['clear'](), _0x4712b3['clear']();
            var _0x3ec70b = _0x11568b['_managers'];
            for (_0x5d2b77 = 0x0, _0x1bcc3a = _0x3ec70b['length']; _0x5d2b77 < _0x1bcc3a; _0x5d2b77++)
                _0x3ec70b[_0x5d2b77]['_clear']();
            var _0x481a85 = _0x328d6f['_managers'];
            for (_0x5d2b77 = 0x0, _0x1bcc3a = _0x481a85['length']; _0x5d2b77 < _0x1bcc3a; _0x5d2b77++)
                _0x481a85[_0x5d2b77]['_clear']();
            var _0x24d145 = _0x2d85a6['length'], _0x5728a6 = _0x2d85a6['elements'];
            for (_0x5d2b77 = 0x0; _0x5d2b77 < _0x24d145; _0x5d2b77++)
                _0x5728a6[_0x5d2b77]['bounds'], _0x5728a6[_0x5d2b77]['_updateFor' + 'Native'] && _0x5728a6[_0x5d2b77]['_updateFor' + 'Native'](_0x3ef1ec);
            _0x584960['boundFrust' + 'um'], _0x2585ad['cullingNat' + 'ive'](_0x584960['_boundFrus' + 'tumBuffer'], _0x2585ad['_cullingBu' + 'ffer'], _0x1c651c['_cullingBu' + 'fferIndice' + 's'], _0x24d145, _0x1c651c['_cullingBu' + 'fferResult']);
            var _0x3f43a2 = _0x3ef1ec['camera']['_transform']['position'];
            for (_0x5d2b77 = 0x0; _0x5d2b77 < _0x24d145; _0x5d2b77++) {
                var _0x13f14a = _0x5728a6[_0x5d2b77];
                if (!_0x584960['useOcclusi' + 'onCulling'] || _0x584960['_isLayerVi' + 'sible'](_0x13f14a['_owner']['_layer']) && _0x13f14a['_enable'] && _0x1c651c['_cullingBu' + 'fferResult'][_0x5d2b77]) {
                    _0x13f14a['_visible'] = !0x0, _0x13f14a['_distanceF' + 'orSort'] = _0x4795b3['distance'](_0x13f14a['bounds']['getCenter'](), _0x3f43a2);
                    var _0x3bb052 = _0x13f14a['_renderEle' + 'ments'];
                    for (_0x1fc5d4 = 0x0, _0x18d248 = _0x3bb052['length']; _0x1fc5d4 < _0x18d248; _0x1fc5d4++) {
                        _0x3bb052[_0x1fc5d4]['_update'](_0x1c651c, _0x3ef1ec, _0x2a87cf, _0x3ae45c);
                    }
                } else
                    _0x13f14a['_visible'] = !0x1;
            }
            var _0x1c374e = _0x46fe87['elements']['length'];
            _0x1c374e > 0x0 && _0x46fe87['_quickSort'](0x0, _0x1c374e - 0x1), (_0x1c374e = _0x4712b3['elements']['length']) > 0x0 && _0x4712b3['_quickSort'](0x0, _0x1c374e - 0x1);
        }
        static ['cullingNat' + 'ive'](_0x4c3079, _0x4272b3, _0x53cd68, _0x3dc39d, _0x14217a) {
            return _0x33d6e0['LayaGL']['instance']['culling'](_0x4c3079, _0x4272b3, _0x53cd68, _0x3dc39d, _0x14217a);
        }
    }
    _0x2585ad['_tempVecto' + 'r3'] = new _0x4795b3(), _0x2585ad['_tempColor' + '0'] = new _0x210bda(), _0x2585ad['debugFrust' + 'umCulling'] = !0x1;
    class _0x389da5 {
        constructor() {
            this['updateMark'] = -0x1, this['indexInLis' + 't'] = -0x1, this['batched'] = !0x1;
        }
    }
    class _0x42e697 {
        constructor() {
            this['_destroyed'] = !0x1;
        }
        get ['destroyed']() {
            return this['_destroyed'];
        }
        ['_getType']() {
            throw 'GeometryEl' + 'ement:must' + '\x20override\x20' + 'it.';
        }
        ['_prepareRe' + 'nder'](_0x588269) {
            return !0x0;
        }
        ['_render'](_0x3778d0) {
            throw 'GeometryEl' + 'ement:must' + '\x20override\x20' + 'it.';
        }
        ['destroy']() {
            this['_destroyed'] || (this['_destroyed'] = !0x0);
        }
    }
    _0x42e697['_typeCount' + 'er'] = 0x0;
    class _0x5dfaba extends _0x33d6e0['Buffer'] {
        constructor(_0x45e1d5, _0x3635fe, _0x328bdd = !0x1) {
            super(), this['_vertexDec' + 'laration'] = null, this['_float32Re' + 'ader'] = null;
            var _0x3a339 = _0x33d6e0['LayaGL']['instance'];
            this['_bufferUsa' + 'ge'] = _0x3635fe, this['_bufferTyp' + 'e'] = _0x3a339['ARRAY_BUFF' + 'ER'], this['_canRead'] = _0x328bdd, this['_byteLengt' + 'h'] = _0x45e1d5, this['bind'](), _0x3a339['bufferData'](this['_bufferTyp' + 'e'], this['_byteLengt' + 'h'], this['_bufferUsa' + 'ge']), _0x328bdd && (this['_buffer'] = new Uint8Array(_0x45e1d5), this['_float32Re' + 'ader'] = new Float32Array(this['_buffer']['buffer']));
        }
        get ['vertexDecl' + 'aration']() {
            return this['_vertexDec' + 'laration'];
        }
        set ['vertexDecl' + 'aration'](_0x552d88) {
            this['_vertexDec' + 'laration'] = _0x552d88;
        }
        get ['canRead']() {
            return this['_canRead'];
        }
        ['bind']() {
            if (_0x33d6e0['Buffer']['_bindedVer' + 'texBuffer'] !== this['_glBuffer']) {
                var _0x1e7d0b = _0x33d6e0['LayaGL']['instance'];
                return _0x1e7d0b['bindBuffer'](_0x1e7d0b['ARRAY_BUFF' + 'ER'], this['_glBuffer']), _0x33d6e0['Buffer']['_bindedVer' + 'texBuffer'] = this['_glBuffer'], !0x0;
            }
            return !0x1;
        }
        ['setData'](_0x50480b, _0x5d51ac = 0x0, _0x39263a = 0x0, _0x409812 = Number['MAX_SAFE_I' + 'NTEGER']) {
            if (this['bind'](), 0x0 !== _0x39263a || _0x409812 !== Number['MAX_SAFE_I' + 'NTEGER']) {
                var _0x130a82 = new Uint8Array(_0x50480b, _0x39263a, _0x409812);
                _0x33d6e0['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x5d51ac, _0x130a82), this['_canRead'] && this['_buffer']['set'](_0x130a82, _0x5d51ac);
            } else
                _0x33d6e0['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0x5d51ac, _0x50480b), this['_canRead'] && this['_buffer']['set'](new Uint8Array(_0x50480b), _0x5d51ac);
        }
        ['getUint8Da' + 'ta']() {
            if (this['_canRead'])
                return this['_buffer'];
            throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['getFloat32' + 'Data']() {
            if (this['_canRead'])
                return this['_float32Re' + 'ader'];
            throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['markAsUnre' + 'adbale']() {
            this['_canRead'] = !0x1, this['_buffer'] = null, this['_float32Re' + 'ader'] = null;
        }
        ['destroy']() {
            super['destroy'](), this['_buffer'] = null, this['_float32Re' + 'ader'] = null, this['_vertexDec' + 'laration'] = null;
        }
    }
    _0x5dfaba['DATATYPE_F' + 'LOAT32ARRA' + 'Y'] = 0x0, _0x5dfaba['DATATYPE_U' + 'INT8ARRAY'] = 0x1;
    class _0x43e6c5 {
        static ['__init__']() {
            var _0x3138b8 = _0x33d6e0['LayaGL']['instance'];
            _0x43e6c5['_elementIn' + 'fos'] = {
                'single': [
                    0x1,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'vector2': [
                    0x2,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'vector3': [
                    0x3,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'vector4': [
                    0x4,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'color': [
                    0x4,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'byte4': [
                    0x4,
                    _0x3138b8['UNSIGNED_B' + 'YTE'],
                    0x0
                ],
                'short2': [
                    0x2,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'short4': [
                    0x4,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'normalizedshort2': [
                    0x2,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'normalizedshort4': [
                    0x4,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'halfvector2': [
                    0x2,
                    _0x3138b8['FLOAT'],
                    0x0
                ],
                'halfvector4': [
                    0x4,
                    _0x3138b8['FLOAT'],
                    0x0
                ]
            };
        }
        static ['getElement' + 'Infos'](_0x3d6103) {
            var _0x3c122a = _0x43e6c5['_elementIn' + 'fos'][_0x3d6103];
            if (_0x3c122a)
                return _0x3c122a;
            throw 'VertexElem' + 'entFormat:' + '\x20this\x20vert' + 'exElementF' + 'ormat\x20is\x20n' + 'ot\x20impleme' + 'nt.';
        }
    }
    _0x43e6c5['Single'] = 'single', _0x43e6c5['Vector2'] = 'vector2', _0x43e6c5['Vector3'] = 'vector3', _0x43e6c5['Vector4'] = 'vector4', _0x43e6c5['Color'] = 'color', _0x43e6c5['Byte4'] = 'byte4', _0x43e6c5['Short2'] = 'short2', _0x43e6c5['Short4'] = 'short4', _0x43e6c5['Normalized' + 'Short2'] = 'normalized' + 'short2', _0x43e6c5['Normalized' + 'Short4'] = 'normalized' + 'short4', _0x43e6c5['HalfVector' + '2'] = 'halfvector' + '2', _0x43e6c5['HalfVector' + '4'] = 'halfvector' + '4';
    class _0x3c5011 {
        constructor(_0x2c2001, _0x23f715) {
            this['_id'] = ++_0x3c5011['_uniqueIDC' + 'ounter'], this['_vertexEle' + 'mentsDic'] = {}, this['_vertexStr' + 'ide'] = _0x2c2001, this['_vertexEle' + 'ments'] = _0x23f715;
            var _0x47ddf1 = _0x23f715['length'];
            this['_shaderVal' + 'ues'] = new _0x4ac605(null);
            for (var _0x1394c6 = 0x0; _0x1394c6 < _0x47ddf1; _0x1394c6++) {
                var _0x401b4d = _0x23f715[_0x1394c6], _0x3455bc = _0x401b4d['_elementUs' + 'age'];
                this['_vertexEle' + 'mentsDic'][_0x3455bc] = _0x401b4d;
                var _0x1984d6 = new Int32Array(0x5), _0xc9e8bb = _0x43e6c5['getElement' + 'Infos'](_0x401b4d['_elementFo' + 'rmat']);
                _0x1984d6[0x0] = _0xc9e8bb[0x0], _0x1984d6[0x1] = _0xc9e8bb[0x1], _0x1984d6[0x2] = _0xc9e8bb[0x2], _0x1984d6[0x3] = this['_vertexStr' + 'ide'], _0x1984d6[0x4] = _0x401b4d['_offset'], this['_shaderVal' + 'ues']['setAttribu' + 'te'](_0x3455bc, _0x1984d6);
            }
        }
        get ['id']() {
            return this['_id'];
        }
        get ['vertexStri' + 'de']() {
            return this['_vertexStr' + 'ide'];
        }
        get ['vertexElem' + 'entCount']() {
            return this['_vertexEle' + 'ments']['length'];
        }
        ['getVertexE' + 'lementByIn' + 'dex'](_0xcb26e) {
            return this['_vertexEle' + 'ments'][_0xcb26e];
        }
        ['getVertexE' + 'lementByUs' + 'age'](_0x40d941) {
            return this['_vertexEle' + 'mentsDic'][_0x40d941];
        }
    }
    _0x3c5011['_uniqueIDC' + 'ounter'] = 0x1;
    class _0x5c79c8 {
        get ['offset']() {
            return this['_offset'];
        }
        get ['elementFor' + 'mat']() {
            return this['_elementFo' + 'rmat'];
        }
        get ['elementUsa' + 'ge']() {
            return this['_elementUs' + 'age'];
        }
        constructor(_0x2a9f9d, _0x22ab7d, _0x51ef49) {
            this['_offset'] = _0x2a9f9d, this['_elementFo' + 'rmat'] = _0x22ab7d, this['_elementUs' + 'age'] = _0x51ef49;
        }
    }
    class _0xe3d46 {
        static ['__init__']() {
            _0xe3d46['instanceWo' + 'rldMatrixD' + 'eclaration'] = new _0x3c5011(0x40, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector4'], _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '0']),
                new _0x5c79c8(0x10, _0x43e6c5['Vector4'], _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '1']),
                new _0x5c79c8(0x20, _0x43e6c5['Vector4'], _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '2']),
                new _0x5c79c8(0x30, _0x43e6c5['Vector4'], _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '3'])
            ]), _0xe3d46['instanceMV' + 'PMatrixDec' + 'laration'] = new _0x3c5011(0x40, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector4'], _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0']),
                new _0x5c79c8(0x10, _0x43e6c5['Vector4'], _0xe3d46['MESH_MVPMA' + 'TRIX_ROW1']),
                new _0x5c79c8(0x20, _0x43e6c5['Vector4'], _0xe3d46['MESH_MVPMA' + 'TRIX_ROW2']),
                new _0x5c79c8(0x30, _0x43e6c5['Vector4'], _0xe3d46['MESH_MVPMA' + 'TRIX_ROW3'])
            ]);
        }
        static ['getVertexD' + 'eclaration'](_0x50eae4, _0x3be22e = !0x0) {
            var _0x6f5f17 = _0xe3d46['_vertexDec' + 'larationMa' + 'p'][_0x50eae4 + (_0x3be22e ? '_0' : '_1')];
            if (!_0x6f5f17) {
                for (var _0x4365a9 = _0x50eae4['split'](','), _0x5cb941 = 0x0, _0x3b498c = [], _0x5f1611 = 0x0, _0x1e107c = _0x4365a9['length']; _0x5f1611 < _0x1e107c; _0x5f1611++) {
                    var _0x1c44a4;
                    switch (_0x4365a9[_0x5f1611]) {
                    case 'POSITION':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector3'], _0xe3d46['MESH_POSIT' + 'ION0']), _0x5cb941 += 0xc;
                        break;
                    case 'NORMAL':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector3'], _0xe3d46['MESH_NORMA' + 'L0']), _0x5cb941 += 0xc;
                        break;
                    case 'COLOR':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector4'], _0xe3d46['MESH_COLOR' + '0']), _0x5cb941 += 0x10;
                        break;
                    case 'UV':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector2'], _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']), _0x5cb941 += 0x8;
                        break;
                    case 'UV1':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector2'], _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']), _0x5cb941 += 0x8;
                        break;
                    case 'BLENDWEIGH' + 'T':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector4'], _0xe3d46['MESH_BLEND' + 'WEIGHT0']), _0x5cb941 += 0x10;
                        break;
                    case 'BLENDINDIC' + 'ES':
                        _0x3be22e ? (_0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector4'], _0xe3d46['MESH_BLEND' + 'INDICES0']), _0x5cb941 += 0x10) : (_0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Byte4'], _0xe3d46['MESH_BLEND' + 'INDICES0']), _0x5cb941 += 0x4);
                        break;
                    case 'TANGENT':
                        _0x1c44a4 = new _0x5c79c8(_0x5cb941, _0x43e6c5['Vector4'], _0xe3d46['MESH_TANGE' + 'NT0']), _0x5cb941 += 0x10;
                        break;
                    default:
                        throw 'VertexMesh' + ':\x20unknown\x20' + 'vertex\x20fla' + 'g.';
                    }
                    _0x3b498c['push'](_0x1c44a4);
                }
                _0x6f5f17 = new _0x3c5011(_0x5cb941, _0x3b498c), _0xe3d46['_vertexDec' + 'larationMa' + 'p'][_0x50eae4 + (_0x3be22e ? '_0' : '_1')] = _0x6f5f17;
            }
            return _0x6f5f17;
        }
    }
    _0xe3d46['MESH_POSIT' + 'ION0'] = 0x0, _0xe3d46['MESH_COLOR' + '0'] = 0x1, _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'] = 0x2, _0xe3d46['MESH_NORMA' + 'L0'] = 0x3, _0xe3d46['MESH_TANGE' + 'NT0'] = 0x4, _0xe3d46['MESH_BLEND' + 'INDICES0'] = 0x5, _0xe3d46['MESH_BLEND' + 'WEIGHT0'] = 0x6, _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1'] = 0x7, _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '0'] = 0x8, _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '1'] = 0x9, _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '2'] = 0xa, _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '3'] = 0xb, _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0'] = 0xc, _0xe3d46['MESH_MVPMA' + 'TRIX_ROW1'] = 0xd, _0xe3d46['MESH_MVPMA' + 'TRIX_ROW2'] = 0xe, _0xe3d46['MESH_MVPMA' + 'TRIX_ROW3'] = 0xf, _0xe3d46['_vertexDec' + 'larationMa' + 'p'] = {};
    class _0x1b47c9 extends _0x42e697 {
        constructor() {
            super(), this['maxInstanc' + 'eCount'] = 0x400, this['instanceWo' + 'rldMatrixD' + 'ata'] = new Float32Array(0x10 * this['maxInstanc' + 'eCount']), this['instanceMV' + 'PMatrixDat' + 'a'] = new Float32Array(0x10 * this['maxInstanc' + 'eCount']);
            var _0x3fbd60 = _0x33d6e0['LayaGL']['instance'];
            this['instanceWo' + 'rldMatrixB' + 'uffer'] = new _0x5dfaba(0x4 * this['instanceWo' + 'rldMatrixD' + 'ata']['length'], _0x3fbd60['DYNAMIC_DR' + 'AW']), this['instanceMV' + 'PMatrixBuf' + 'fer'] = new _0x5dfaba(0x4 * this['instanceMV' + 'PMatrixDat' + 'a']['length'], _0x3fbd60['DYNAMIC_DR' + 'AW']), this['instanceWo' + 'rldMatrixB' + 'uffer']['vertexDecl' + 'aration'] = _0xe3d46['instanceWo' + 'rldMatrixD' + 'eclaration'], this['instanceMV' + 'PMatrixBuf' + 'fer']['vertexDecl' + 'aration'] = _0xe3d46['instanceMV' + 'PMatrixDec' + 'laration'];
        }
        static ['__init__']() {
            _0x1b47c9['instance'] = new _0x1b47c9();
        }
        ['_render'](_0x3becd5) {
            var _0x4bde91 = _0x33d6e0['LayaGL']['instance'], _0x103958 = _0x3becd5['renderElem' + 'ent'], _0x51c49a = _0x103958['instanceSu' + 'bMesh'], _0x48ffbe = _0x103958['instanceBa' + 'tchElement' + 'List']['length'], _0x23aff8 = _0x51c49a['_indexCoun' + 't'];
            _0x51c49a['_mesh']['_instanceB' + 'ufferState']['bind'](), _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['drawElemen' + 'tsInstance' + 'd'](_0x4bde91['TRIANGLES'], _0x23aff8, _0x4bde91['UNSIGNED_S' + 'HORT'], 0x2 * _0x51c49a['_indexStar' + 't'], _0x48ffbe), _0x33d6e0['Stat']['renderBatc' + 'hes']++, _0x33d6e0['Stat']['savedRende' + 'rBatches'] += _0x48ffbe - 0x1, _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x23aff8 * _0x48ffbe / 0x3;
        }
    }
    class _0x56b07a {
        constructor() {
            this['updateMark'] = -0x1, this['pointLight' + 'Count'] = 0x0, this['spotLightC' + 'ount'] = 0x0, this['indices'] = [];
        }
    }
    class _0x43893d {
        constructor(_0x29959d, _0x23808e, _0x305539, _0x1d5834) {
            this['_updateMar' + 'k'] = 0x0, this['_depthSlic' + 'eParam'] = new _0x4c44b6(), this['_xSlices'] = _0x29959d, this['_ySlices'] = _0x23808e, this['_zSlices'] = _0x305539;
            var _0x38cca4 = _0x29959d * _0x23808e, _0xe613f0 = _0x305539 * (0x1 + Math['ceil'](_0x1d5834 / 0x4));
            this['_clusterTe' + 'xture'] = _0x89f66e['_createFlo' + 'atTextureB' + 'uffer'](_0x38cca4, _0xe613f0), this['_clusterTe' + 'xture']['lock'] = !0x0, this['_clusterPi' + 'xels'] = new Float32Array(_0x38cca4 * _0xe613f0 * 0x4);
            for (var _0x39082d = new Array(this['_zSlices']), _0x48a18d = 0x0; _0x48a18d < this['_zSlices']; _0x48a18d++) {
                _0x39082d[_0x48a18d] = new Array(this['_ySlices']);
                for (var _0x488fd3 = 0x0; _0x488fd3 < this['_ySlices']; _0x488fd3++) {
                    _0x39082d[_0x48a18d][_0x488fd3] = new Array(this['_xSlices']);
                    for (var _0x556d7d = 0x0; _0x556d7d < this['_xSlices']; _0x556d7d++)
                        _0x39082d[_0x48a18d][_0x488fd3][_0x556d7d] = new _0x56b07a();
                }
            }
            this['_clusterDa' + 'tas'] = _0x39082d;
        }
        ['_insertSpo' + 'tLightSphe' + 're'](_0x52e5f4, _0x5c781e, _0x4429c0, _0x5a71a2, _0x44089b) {
            var _0x18ea21 = _0x43893d['_tempVecto' + 'r35'];
            _0x18ea21['x'] = _0x44089b['x'] - _0x52e5f4['x'], _0x18ea21['y'] = _0x44089b['y'] - _0x52e5f4['y'], _0x18ea21['z'] = _0x44089b['z'] - _0x52e5f4['z'];
            var _0x17f83e = _0x4795b3['dot'](_0x18ea21, _0x18ea21), _0x23c82e = _0x44089b['w'];
            if (!(_0x17f83e > _0x23c82e * _0x23c82e))
                return !0x1;
            var _0x1fb63c = _0x4795b3['dot'](_0x18ea21, _0x5c781e);
            return !(Math['cos'](_0x5a71a2) * Math['sqrt'](_0x17f83e - _0x1fb63c * _0x1fb63c) - _0x1fb63c * Math['sin'](_0x5a71a2) > _0x23c82e || _0x1fb63c > _0x23c82e + _0x4429c0 || _0x1fb63c < -_0x23c82e);
        }
        ['_placePoin' + 'tLightToCl' + 'usters'](_0x371002, _0x20e704) {
            for (var _0x446d76 = this['_clusterDa' + 'tas'], _0x38f122 = this['_updateMar' + 'k'], _0x1cd13b = _0x20e704['zMin'], _0xe0852 = _0x20e704['zMax']; _0x1cd13b < _0xe0852; _0x1cd13b++)
                for (var _0x19d178 = _0x20e704['yMin'], _0x5dbba3 = _0x20e704['yMax']; _0x19d178 < _0x5dbba3; _0x19d178++)
                    for (var _0x29d3b1 = _0x20e704['xMin'], _0x1f9b69 = _0x20e704['xMax']; _0x29d3b1 < _0x1f9b69; _0x29d3b1++) {
                        var _0xf89fd1 = _0x446d76[_0x1cd13b][_0x19d178][_0x29d3b1];
                        _0xf89fd1['updateMark'] != _0x38f122 && (_0xf89fd1['pointLight' + 'Count'] = 0x0, _0xf89fd1['spotLightC' + 'ount'] = 0x0, _0xf89fd1['updateMark'] = _0x38f122);
                        var _0x325265 = _0xf89fd1['indices'], _0x3b05e8 = _0xf89fd1['pointLight' + 'Count']++;
                        _0x3b05e8 < _0x325265['length'] ? _0x325265[_0x3b05e8] = _0x371002 : _0x325265['push'](_0x371002);
                    }
        }
        ['_placeSpot' + 'LightToClu' + 'sters'](_0x235d9f, _0x4b1f30) {
            for (var _0x1b6536 = this['_clusterDa' + 'tas'], _0x25dc53 = this['_updateMar' + 'k'], _0x5c8ac9 = _0x4b1f30['zMin'], _0xce3f88 = _0x4b1f30['zMax']; _0x5c8ac9 < _0xce3f88; _0x5c8ac9++)
                for (var _0x3ff536 = _0x4b1f30['yMin'], _0x579240 = _0x4b1f30['yMax']; _0x3ff536 < _0x579240; _0x3ff536++)
                    for (var _0x55115b = _0x4b1f30['xMin'], _0x5022c3 = _0x4b1f30['xMax']; _0x55115b < _0x5022c3; _0x55115b++) {
                        var _0x186d66 = _0x1b6536[_0x5c8ac9][_0x3ff536][_0x55115b];
                        _0x186d66['updateMark'] != _0x25dc53 && (_0x186d66['pointLight' + 'Count'] = 0x0, _0x186d66['spotLightC' + 'ount'] = 0x0, _0x186d66['updateMark'] = _0x25dc53);
                        var _0x351681 = _0x186d66['indices'], _0x1690b3 = _0x186d66['pointLight' + 'Count'] + _0x186d66['spotLightC' + 'ount']++;
                        _0x1690b3 < _0x351681['length'] ? _0x351681[_0x1690b3] = _0x235d9f : _0x351681['push'](_0x235d9f);
                    }
        }
        ['_insertCon' + 'ePlane'](_0xcf2d55, _0xd40303, _0x2ce49d, _0xff8222, _0x22ce99) {
            var _0x3fcf92 = _0x43893d['_tempVecto' + 'r36'], _0x638a11 = _0x43893d['_tempVecto' + 'r37'];
            _0x4795b3['cross'](_0x22ce99, _0xd40303, _0x3fcf92), _0x4795b3['cross'](_0x3fcf92, _0xd40303, _0x638a11), _0x4795b3['normalize'](_0x638a11, _0x638a11);
            var _0x1246d1 = _0x2ce49d * Math['tan'](_0xff8222), _0x43d779 = _0xcf2d55['x'] + _0x2ce49d * _0xd40303['x'] + _0x1246d1 * _0x638a11['x'], _0x187309 = _0xcf2d55['y'] + _0x2ce49d * _0xd40303['y'] + _0x1246d1 * _0x638a11['y'], _0x382901 = _0xcf2d55['z'] + _0x2ce49d * _0xd40303['z'] + _0x1246d1 * _0x638a11['z'];
            return _0x43d779 * _0x22ce99['x'] + _0x187309 * _0x22ce99['y'] + _0x382901 * _0x22ce99['z'] <= 0x0 || _0xcf2d55['x'] * _0x22ce99['x'] + _0xcf2d55['y'] * _0x22ce99['y'] + _0xcf2d55['z'] * _0x22ce99['z'] <= 0x0;
        }
        ['_shrinkSph' + 'ereLightZP' + 'erspective'](_0x358c85, _0x1cdd7a, _0x54d878, _0x53c501, _0x2d1c64) {
            var _0x3a6ec8 = _0x54d878['z'], _0x2462c1 = _0x3a6ec8 - _0x53c501, _0x380bf9 = _0x3a6ec8 + _0x53c501;
            if (_0x2462c1 > _0x1cdd7a || _0x380bf9 <= _0x358c85)
                return !0x1;
            var _0x5016dc = this['_depthSlic' + 'eParam'];
            return _0x2d1c64['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x2462c1, _0x358c85)) * _0x5016dc['x'] - _0x5016dc['y']), _0x2d1c64['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x380bf9) * _0x5016dc['x'] - _0x5016dc['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkSpo' + 'tLightZPer' + 'spective'](_0x153b2c, _0x18718c, _0x9b6256, _0x30e901, _0x5ecd25, _0x45addb, _0x383b6b) {
            var _0x2adf47 = _0x30e901['x'], _0x1cc33c = _0x30e901['y'], _0x59622f = _0x30e901['z'], _0x12b3ab = Math['tan'](_0x45addb) * _0x5ecd25, _0x285d01 = _0x9b6256['x'], _0x493bb5 = _0x9b6256['y'], _0x44f8af = _0x9b6256['z'], _0x222a44 = _0x2adf47 - _0x285d01, _0x150a6e = _0x1cc33c - _0x493bb5, _0x826816 = _0x59622f - _0x44f8af, _0x2f9d96 = _0x222a44 * _0x222a44 + _0x150a6e * _0x150a6e + _0x826816 * _0x826816, _0xc91b25 = Math['sqrt'](0x1 - _0x826816 * _0x826816 / _0x2f9d96), _0x429d5f = Math['max'](Math['min'](_0x44f8af, _0x59622f - _0xc91b25 * _0x12b3ab), _0x9b6256['z'] - _0x5ecd25), _0x3c93b9 = Math['min'](Math['max'](_0x44f8af, _0x59622f + _0xc91b25 * _0x12b3ab), _0x9b6256['z'] + _0x5ecd25);
            if (_0x429d5f > _0x18718c || _0x3c93b9 <= _0x153b2c)
                return !0x1;
            var _0x5b4e83 = this['_depthSlic' + 'eParam'];
            return _0x383b6b['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x429d5f, _0x153b2c)) * _0x5b4e83['x'] - _0x5b4e83['y']), _0x383b6b['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x3c93b9) * _0x5b4e83['x'] - _0x5b4e83['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkSph' + 'ereLightBy' + 'BoundOrth'](_0x5cd0dd, _0xe8bfe4, _0x5a92cc, _0x48607b, _0x18fd95, _0x20a38b, _0x59713f) {
            var _0x2a2706 = _0x18fd95['z'], _0x18818 = _0x2a2706 - _0x20a38b, _0x28d1c5 = _0x2a2706 + _0x20a38b;
            if (_0x18818 > _0x48607b || _0x28d1c5 <= _0x5a92cc)
                return !0x1;
            var _0x55ded1 = _0x18fd95['x'], _0xa42d47 = _0x55ded1 - _0x20a38b, _0x5c8ae0 = _0x55ded1 + _0x20a38b;
            if (_0xa42d47 > _0x5cd0dd || _0x5c8ae0 <= -_0x5cd0dd)
                return !0x1;
            var _0x955718 = _0x18fd95['y'], _0x1a6830 = _0x955718 - _0x20a38b, _0x5d9f91 = _0x955718 + _0x20a38b;
            if (_0x1a6830 > _0xe8bfe4 || _0x5d9f91 <= -_0xe8bfe4)
                return !0x1;
            var _0x1cb0f3 = this['_xSlices'], _0x427571 = this['_ySlices'], _0x46d68b = this['_depthSlic' + 'eParam'], _0x471572 = 0x2 * _0x5cd0dd / _0x1cb0f3, _0xe7f733 = 0x2 * _0xe8bfe4 / _0x427571;
            return _0x59713f['xMin'] = Math['max'](Math['floor']((_0xa42d47 + _0x5cd0dd) / _0x471572), 0x0), _0x59713f['xMax'] = Math['min'](Math['ceil']((_0x5c8ae0 + _0x5cd0dd) / _0x471572), _0x1cb0f3), _0x59713f['yMin'] = Math['max'](Math['floor']((_0xe8bfe4 - _0x5d9f91) / _0xe7f733), 0x0), _0x59713f['yMax'] = Math['min'](Math['ceil']((_0xe8bfe4 - _0x1a6830) / _0xe7f733), _0x427571), _0x59713f['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x18818, _0x5a92cc)) * _0x46d68b['x'] - _0x46d68b['y']), _0x59713f['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x28d1c5) * _0x46d68b['x'] - _0x46d68b['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkSpo' + 'tLightByBo' + 'undOrth'](_0x11db22, _0xd9b4ab, _0xb7cb95, _0x25c9b6, _0x4b059f, _0x421fde, _0x55dd41, _0x39b0dc, _0x579a8c) {
            var _0x2dae84 = _0x421fde['x'], _0x5ef057 = _0x421fde['y'], _0x5f43db = _0x421fde['z'], _0x4891c0 = Math['tan'](_0x39b0dc) * _0x55dd41, _0x431dbf = _0x4b059f['x'], _0x32237a = _0x4b059f['y'], _0x2471d6 = _0x4b059f['z'], _0x563343 = _0x2dae84 - _0x431dbf, _0x655c7 = _0x5ef057 - _0x32237a, _0xa4e369 = _0x5f43db - _0x2471d6, _0x5c3e58 = _0x563343 * _0x563343 + _0x655c7 * _0x655c7 + _0xa4e369 * _0xa4e369, _0x15919d = Math['sqrt'](0x1 - _0xa4e369 * _0xa4e369 / _0x5c3e58), _0x503775 = Math['max'](Math['min'](_0x2471d6, _0x5f43db - _0x15919d * _0x4891c0), _0x4b059f['z'] - _0x55dd41), _0x1648ae = Math['min'](Math['max'](_0x2471d6, _0x5f43db + _0x15919d * _0x4891c0), _0x4b059f['z'] + _0x55dd41);
            if (_0x503775 > _0x25c9b6 || _0x1648ae <= _0xb7cb95)
                return !0x1;
            var _0x52897c = Math['sqrt'](0x1 - _0x563343 * _0x563343 / _0x5c3e58), _0x5404de = Math['max'](Math['min'](_0x431dbf, _0x2dae84 - _0x52897c * _0x4891c0), _0x4b059f['x'] - _0x55dd41), _0x1f5623 = Math['min'](Math['max'](_0x431dbf, _0x2dae84 + _0x52897c * _0x4891c0), _0x4b059f['x'] + _0x55dd41);
            if (_0x5404de > _0x11db22 || _0x1f5623 <= -_0x11db22)
                return !0x1;
            var _0x5e4962 = Math['sqrt'](0x1 - _0x655c7 * _0x655c7 / _0x5c3e58), _0x54641b = Math['max'](Math['min'](_0x32237a, _0x5ef057 - _0x5e4962 * _0x4891c0), _0x4b059f['y'] - _0x55dd41), _0xcf4e3a = Math['min'](Math['max'](_0x32237a, _0x5ef057 + _0x5e4962 * _0x4891c0), _0x4b059f['y'] + _0x55dd41);
            if (_0x54641b > _0xd9b4ab || _0xcf4e3a <= -_0xd9b4ab)
                return !0x1;
            var _0x1edc73 = this['_xSlices'], _0x7a93aa = this['_ySlices'], _0x2f7ad8 = this['_depthSlic' + 'eParam'], _0x579724 = 0x2 * _0x11db22 / _0x1edc73, _0xb38baf = 0x2 * _0xd9b4ab / _0x7a93aa;
            return _0x579a8c['xMin'] = Math['max'](Math['floor']((_0x5404de + _0x11db22) / _0x579724), 0x0), _0x579a8c['xMax'] = Math['min'](Math['ceil']((_0x1f5623 + _0x11db22) / _0x579724), _0x1edc73), _0x579a8c['yMin'] = Math['max'](Math['floor']((_0xd9b4ab - _0xcf4e3a) / _0xb38baf), 0x0), _0x579a8c['yMax'] = Math['min'](Math['ceil']((_0xd9b4ab - _0x54641b) / _0xb38baf), _0x7a93aa), _0x579a8c['zMin'] = Math['floor'](Math['log2'](Math['max'](_0x503775, _0xb7cb95)) * _0x2f7ad8['x'] - _0x2f7ad8['y']), _0x579a8c['zMax'] = Math['min'](Math['ceil'](Math['log2'](_0x1648ae) * _0x2f7ad8['x'] - _0x2f7ad8['y']), this['_zSlices']), !0x0;
        }
        ['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x2b6094, _0x238362, _0x40c817, _0x148987, _0x37eeb2) {
            var _0x4c4a2f, _0x53660c, _0x20d334, _0x441f54, _0x530a35, _0x20e3f9 = _0x2b6094['x'], _0x5b165f = _0x2b6094['y'], _0x5eec33 = _0x2b6094['z'], _0x3c58a7 = this['_ySlices'] + 0x1;
            for (_0x530a35 = 0x0; _0x530a35 < _0x3c58a7; _0x530a35++) {
                if (_0x5b165f * (_0x2a5514 = _0x37eeb2[_0x530a35])['y'] + _0x5eec33 * _0x2a5514['z'] < _0x238362) {
                    _0x53660c = Math['max'](0x0, _0x530a35 - 0x1);
                    break;
                }
            }
            if (_0x530a35 == _0x3c58a7)
                return !0x1;
            for (_0x441f54 = this['_ySlices'], _0x530a35 = _0x53660c + 0x1; _0x530a35 < _0x3c58a7; _0x530a35++) {
                if (_0x5b165f * (_0x2a5514 = _0x37eeb2[_0x530a35])['y'] + _0x5eec33 * _0x2a5514['z'] <= -_0x238362) {
                    _0x441f54 = Math['max'](0x0, _0x530a35);
                    break;
                }
            }
            for (_0x3c58a7 = this['_xSlices'] + 0x1, _0x530a35 = 0x0; _0x530a35 < _0x3c58a7; _0x530a35++) {
                if (_0x20e3f9 * (_0x2a5514 = _0x148987[_0x530a35])['x'] + _0x5eec33 * _0x2a5514['z'] < _0x238362) {
                    _0x4c4a2f = Math['max'](0x0, _0x530a35 - 0x1);
                    break;
                }
            }
            for (_0x20d334 = this['_xSlices'], _0x530a35 = _0x4c4a2f + 0x1; _0x530a35 < _0x3c58a7; _0x530a35++) {
                var _0x2a5514;
                if (_0x20e3f9 * (_0x2a5514 = _0x148987[_0x530a35])['x'] + _0x5eec33 * _0x2a5514['z'] <= -_0x238362) {
                    _0x20d334 = Math['max'](0x0, _0x530a35);
                    break;
                }
            }
            return _0x40c817['xMin'] = _0x4c4a2f, _0x40c817['xMax'] = _0x20d334, _0x40c817['yMin'] = _0x53660c, _0x40c817['yMax'] = _0x441f54, !0x0;
        }
        ['_shrinkSpo' + 'tXYByConeP' + 'erspective'](_0x408ecc, _0x49d76f, _0x13c4f3, _0x45c83f, _0x5f4952, _0x343838, _0x270429) {
            for (var _0x1e0ad0, _0x21e1c2, _0x31fa87, _0x2a8c6b, _0x570eb1 = _0x43893d['_tempVecto' + 'r32'], _0x281a37 = _0x5f4952['yMax'] + 0x1, _0x657e65 = _0x5f4952['yMin'] + 0x1; _0x657e65 < _0x281a37; _0x657e65++)
                if (this['_insertCon' + 'ePlane'](_0x408ecc, _0x49d76f, _0x13c4f3, _0x45c83f, _0x270429[_0x657e65])) {
                    _0x21e1c2 = Math['max'](0x0, _0x657e65 - 0x1);
                    break;
                }
            _0x2a8c6b = _0x5f4952['yMax'];
            for (_0x657e65 = _0x21e1c2 + 0x1; _0x657e65 < _0x281a37; _0x657e65++) {
                var _0x3a3197 = _0x270429[_0x657e65];
                if (_0x570eb1['setValue'](0x0, -_0x3a3197['y'], -_0x3a3197['z']), !this['_insertCon' + 'ePlane'](_0x408ecc, _0x49d76f, _0x13c4f3, _0x45c83f, _0x570eb1)) {
                    _0x2a8c6b = Math['max'](0x0, _0x657e65);
                    break;
                }
            }
            _0x281a37 = _0x5f4952['xMax'] + 0x1;
            for (_0x657e65 = _0x5f4952['xMin'] + 0x1; _0x657e65 < _0x281a37; _0x657e65++)
                if (this['_insertCon' + 'ePlane'](_0x408ecc, _0x49d76f, _0x13c4f3, _0x45c83f, _0x343838[_0x657e65])) {
                    _0x1e0ad0 = Math['max'](0x0, _0x657e65 - 0x1);
                    break;
                }
            _0x31fa87 = _0x5f4952['xMax'];
            for (_0x657e65 = _0x1e0ad0 + 0x1; _0x657e65 < _0x281a37; _0x657e65++) {
                _0x3a3197 = _0x343838[_0x657e65];
                if (_0x570eb1['setValue'](-_0x3a3197['x'], 0x0, -_0x3a3197['z']), !this['_insertCon' + 'ePlane'](_0x408ecc, _0x49d76f, _0x13c4f3, _0x45c83f, _0x570eb1)) {
                    _0x31fa87 = Math['max'](0x0, _0x657e65);
                    break;
                }
            }
            _0x5f4952['xMin'] = _0x1e0ad0, _0x5f4952['xMax'] = _0x31fa87, _0x5f4952['yMin'] = _0x21e1c2, _0x5f4952['yMax'] = _0x2a8c6b;
        }
        ['_updatePoi' + 'ntLightPer' + 'spective'](_0x16e464, _0x434827, _0xdb61c1, _0x3f6768, _0x5e9f65, _0x409418, _0x2a0571) {
            var _0x493613 = _0x43893d['_tempLight' + 'Bound'], _0x4dc5bf = _0x43893d['_tempVecto' + 'r30'];
            _0x4795b3['transformV' + '3ToV3'](_0x3f6768['_transform']['position'], _0xdb61c1, _0x4dc5bf), _0x4dc5bf['z'] *= -0x1, this['_shrinkSph' + 'ereLightZP' + 'erspective'](_0x16e464, _0x434827, _0x4dc5bf, _0x3f6768['range'], _0x493613) && this['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x4dc5bf, _0x3f6768['range'], _0x493613, _0x409418, _0x2a0571) && this['_placePoin' + 'tLightToCl' + 'usters'](_0x5e9f65, _0x493613);
        }
        ['_updateSpo' + 'tLightPers' + 'pective'](_0x244c03, _0x50a3a2, _0x202a42, _0x452423, _0x365a7f, _0x2c46ec, _0x1cec55) {
            var _0x3409e5 = _0x43893d['_tempLight' + 'Bound'], _0x58a9b8 = _0x43893d['_tempVecto' + 'r30'], _0x164532 = _0x43893d['_tempVecto' + 'r31'], _0x554abf = _0x43893d['_tempVecto' + 'r34'], _0x2cf461 = _0x452423['_transform']['position'], _0x760009 = _0x452423['range'];
            _0x452423['_transform']['worldMatri' + 'x']['getForward'](_0x164532), _0x4795b3['normalize'](_0x164532, _0x164532), _0x4795b3['scale'](_0x164532, _0x760009, _0x554abf), _0x4795b3['add'](_0x2cf461, _0x554abf, _0x554abf), _0x4795b3['transformV' + '3ToV3'](_0x2cf461, _0x202a42, _0x58a9b8), _0x4795b3['transformV' + '3ToV3'](_0x554abf, _0x202a42, _0x554abf), _0x58a9b8['z'] *= -0x1, _0x554abf['z'] *= -0x1;
            var _0x4715d2 = _0x452423['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            if (this['_shrinkSpo' + 'tLightZPer' + 'spective'](_0x244c03, _0x50a3a2, _0x58a9b8, _0x554abf, _0x760009, _0x4715d2, _0x3409e5) && this['_shrinkXYB' + 'yRadiusPer' + 'spective'](_0x58a9b8, _0x760009, _0x3409e5, _0x2c46ec, _0x1cec55)) {
                var _0x28e327 = _0x43893d['_tempVecto' + 'r33'];
                _0x28e327['x'] = _0x554abf['x'] - _0x58a9b8['x'], _0x28e327['y'] = _0x554abf['y'] - _0x58a9b8['y'], _0x28e327['z'] = _0x554abf['z'] - _0x58a9b8['z'], _0x4795b3['normalize'](_0x28e327, _0x28e327), this['_shrinkSpo' + 'tXYByConeP' + 'erspective'](_0x58a9b8, _0x28e327, _0x760009, _0x4715d2, _0x3409e5, _0x2c46ec, _0x1cec55), this['_placeSpot' + 'LightToClu' + 'sters'](_0x365a7f, _0x3409e5);
            }
        }
        ['_updatePoi' + 'ntLightOrt' + 'h'](_0x509085, _0x290235, _0x269d86, _0x3aa06f, _0x4f9362, _0x1175d1, _0x56ce69) {
            var _0x144abc = _0x43893d['_tempLight' + 'Bound'], _0x1c0d87 = _0x43893d['_tempVecto' + 'r30'];
            _0x4795b3['transformV' + '3ToV3'](_0x1175d1['_transform']['position'], _0x4f9362, _0x1c0d87), _0x1c0d87['z'] *= -0x1, this['_shrinkSph' + 'ereLightBy' + 'BoundOrth'](_0x509085, _0x290235, _0x269d86, _0x3aa06f, _0x1c0d87, _0x1175d1['range'], _0x144abc) && this['_placePoin' + 'tLightToCl' + 'usters'](_0x56ce69, _0x144abc);
        }
        ['_updateSpo' + 'tLightOrth'](_0x3f6d14, _0x3c3967, _0x5155ba, _0x44e972, _0x18c23d, _0x15950d, _0x1bbd4f) {
            var _0x126937 = _0x43893d['_tempLight' + 'Bound'], _0x1823a9 = _0x43893d['_tempVecto' + 'r30'], _0x488234 = _0x43893d['_tempVecto' + 'r31'], _0x5cc33f = _0x43893d['_tempVecto' + 'r34'], _0x57965a = _0x15950d['_transform']['position'], _0x364955 = _0x15950d['range'];
            _0x15950d['_transform']['worldMatri' + 'x']['getForward'](_0x488234), _0x4795b3['normalize'](_0x488234, _0x488234), _0x4795b3['scale'](_0x488234, _0x364955, _0x5cc33f), _0x4795b3['add'](_0x57965a, _0x5cc33f, _0x5cc33f), _0x4795b3['transformV' + '3ToV3'](_0x57965a, _0x18c23d, _0x1823a9), _0x4795b3['transformV' + '3ToV3'](_0x5cc33f, _0x18c23d, _0x5cc33f), _0x1823a9['z'] *= -0x1, _0x5cc33f['z'] *= -0x1;
            var _0x18cd42 = _0x15950d['spotAngle'] / 0x2 * Math['PI'] / 0xb4;
            this['_shrinkSpo' + 'tLightByBo' + 'undOrth'](_0x3f6d14, _0x3c3967, _0x5155ba, _0x44e972, _0x1823a9, _0x5cc33f, _0x364955, _0x18cd42, _0x126937) && this['_placeSpot' + 'LightToClu' + 'sters'](_0x1bbd4f, _0x126937);
        }
        ['update'](_0x2f5147, _0x5bf86f) {
            this['_updateMar' + 'k']++;
            var _0x27abf8 = _0x2f5147['nearPlane'];
            this['_depthSlic' + 'eParam']['x'] = _0x237093['_config']['lightClust' + 'erCount']['z'] / Math['log2'](_0x2f5147['farPlane'] / _0x27abf8), this['_depthSlic' + 'eParam']['y'] = Math['log2'](_0x27abf8) * this['_depthSlic' + 'eParam']['x'];
            var _0x5db538 = _0x2f5147['nearPlane'], _0x50ef6d = _0x2f5147['farPlane'], _0x556f1f = _0x2f5147['viewMatrix'], _0x1fe932 = _0x5bf86f['_direction' + 'Lights']['_length'], _0x503d66 = _0x5bf86f['_pointLigh' + 'ts'], _0x1fcac4 = _0x503d66['_length'], _0x3e1176 = _0x503d66['_elements'], _0x3ee12b = _0x5bf86f['_spotLight' + 's'], _0x12118c = _0x3ee12b['_length'], _0x56894e = _0x3ee12b['_elements'];
            if (_0x2f5147['orthograph' + 'ic']) {
                for (var _0x2da80e = _0x2f5147['orthograph' + 'icVertical' + 'Size'] / 0x2, _0x23991d = _0x2da80e * _0x2f5147['aspectRati' + 'o'], _0x46f9e3 = 0x0; _0x46f9e3 < _0x1fcac4; _0x46f9e3++, _0x1fe932++)
                    this['_updatePoi' + 'ntLightOrt' + 'h'](_0x23991d, _0x2da80e, _0x5db538, _0x50ef6d, _0x556f1f, _0x3e1176[_0x46f9e3], _0x1fe932);
                for (_0x46f9e3 = 0x0; _0x46f9e3 < _0x12118c; _0x46f9e3++, _0x1fe932++)
                    this['_updateSpo' + 'tLightOrth'](_0x23991d, _0x2da80e, _0x5db538, _0x50ef6d, _0x556f1f, _0x56894e[_0x46f9e3], _0x1fe932);
            } else {
                _0x2f5147['_updateClu' + 'sterPlaneX' + 'Y']();
                var _0xbe8377 = _0x2f5147['_clusterXP' + 'lanes'], _0x470117 = _0x2f5147['_clusterYP' + 'lanes'];
                for (_0x46f9e3 = 0x0; _0x46f9e3 < _0x1fcac4; _0x46f9e3++, _0x1fe932++)
                    this['_updatePoi' + 'ntLightPer' + 'spective'](_0x5db538, _0x50ef6d, _0x556f1f, _0x3e1176[_0x46f9e3], _0x1fe932, _0xbe8377, _0x470117);
                for (_0x46f9e3 = 0x0; _0x46f9e3 < _0x12118c; _0x46f9e3++, _0x1fe932++)
                    this['_updateSpo' + 'tLightPers' + 'pective'](_0x5db538, _0x50ef6d, _0x556f1f, _0x56894e[_0x46f9e3], _0x1fe932, _0xbe8377, _0x470117);
            }
            if (_0x1fcac4 + _0x12118c > 0x0) {
                for (var _0x1c65d9 = this['_xSlices'], _0x44473e = this['_ySlices'], _0x523aea = this['_zSlices'], _0x3ce713 = _0x1c65d9 * _0x44473e * 0x4, _0x2be98b = _0x3ce713 * _0x523aea, _0x16c077 = this['_clusterPi' + 'xels'], _0x314e48 = _0x16c077['length'], _0x2fc10b = this['_clusterDa' + 'tas'], _0x3c1a7e = this['_updateMar' + 'k'], _0x241fa0 = !0x0, _0x3bb024 = 0x0; _0x3bb024 < _0x523aea; _0x3bb024++)
                    for (var _0x275223 = 0x0; _0x275223 < _0x44473e; _0x275223++)
                        for (var _0x2936a3 = 0x0; _0x2936a3 < _0x1c65d9; _0x2936a3++) {
                            var _0x750d71 = _0x2fc10b[_0x3bb024][_0x275223][_0x2936a3], _0x1ed372 = 0x4 * (_0x2936a3 + _0x275223 * _0x1c65d9 + _0x3bb024 * _0x1c65d9 * _0x44473e);
                            if (_0x750d71['updateMark'] !== _0x3c1a7e)
                                _0x16c077[_0x1ed372] = 0x0, _0x16c077[_0x1ed372 + 0x1] = 0x0;
                            else {
                                if (_0x241fa0) {
                                    var _0x290212 = _0x750d71['indices'], _0x2168a8 = _0x750d71['pointLight' + 'Count'], _0x7b6c99 = _0x750d71['spotLightC' + 'ount'], _0x498ee1 = _0x2168a8 + _0x7b6c99;
                                    if (_0x2be98b + _0x498ee1 < _0x314e48) {
                                        _0x16c077[_0x1ed372] = _0x2168a8, _0x16c077[_0x1ed372 + 0x1] = _0x7b6c99, _0x16c077[_0x1ed372 + 0x2] = Math['floor'](_0x2be98b / _0x3ce713), _0x16c077[_0x1ed372 + 0x3] = _0x2be98b % _0x3ce713;
                                        for (_0x46f9e3 = 0x0; _0x46f9e3 < _0x498ee1; _0x46f9e3++)
                                            _0x16c077[_0x2be98b++] = _0x290212[_0x46f9e3];
                                    } else {
                                        _0x498ee1 = _0x314e48 - (_0x2be98b + _0x498ee1), _0x2168a8 = Math['min'](_0x2168a8, _0x498ee1), _0x16c077[_0x1ed372] = _0x2168a8, _0x16c077[_0x1ed372 + 0x1] = Math['min'](_0x7b6c99, _0x498ee1 - _0x2168a8), _0x16c077[_0x1ed372 + 0x2] = Math['floor'](_0x2be98b / _0x3ce713), _0x16c077[_0x1ed372 + 0x3] = _0x2be98b % _0x3ce713;
                                        for (_0x46f9e3 = 0x0; _0x46f9e3 < _0x498ee1; _0x46f9e3++)
                                            _0x16c077[_0x2be98b++] = _0x290212[_0x46f9e3];
                                        _0x241fa0 = !0x1;
                                    }
                                }
                            }
                        }
                var _0xd5ea39 = this['_clusterTe' + 'xture']['width'];
                this['_clusterTe' + 'xture']['setSubPixe' + 'ls'](0x0, 0x0, _0xd5ea39, Math['ceil'](_0x2be98b / (0x4 * _0xd5ea39)), _0x16c077);
            }
        }
    }
    _0x43893d['_tempVecto' + 'r30'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r31'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r32'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r33'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r34'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r35'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r36'] = new _0x4795b3(), _0x43893d['_tempVecto' + 'r37'] = new _0x4795b3(), _0x43893d['_tempLight' + 'Bound'] = new class {
    }();
    class _0x34cda7 {
        constructor(_0x59c351, _0x2834c5 = 0x0) {
            this['normal'] = _0x59c351, this['distance'] = _0x2834c5;
        }
        static ['createPlan' + 'eBy3P'](_0x2ac255, _0x59bc79, _0x44a7e6) {
            var _0x19a76e = _0x59bc79['x'] - _0x2ac255['x'], _0x233e65 = _0x59bc79['y'] - _0x2ac255['y'], _0xc10648 = _0x59bc79['z'] - _0x2ac255['z'], _0x1732f6 = _0x44a7e6['x'] - _0x2ac255['x'], _0x5e5501 = _0x44a7e6['y'] - _0x2ac255['y'], _0x178d51 = _0x44a7e6['z'] - _0x2ac255['z'], _0x573d67 = _0x233e65 * _0x178d51 - _0xc10648 * _0x5e5501, _0xc03986 = _0xc10648 * _0x1732f6 - _0x19a76e * _0x178d51, _0xa33ce0 = _0x19a76e * _0x5e5501 - _0x233e65 * _0x1732f6, _0x220277 = 0x1 / Math['sqrt'](_0x573d67 * _0x573d67 + _0xc03986 * _0xc03986 + _0xa33ce0 * _0xa33ce0), _0x12759c = _0x573d67 * _0x220277, _0x25ed2e = _0xc03986 * _0x220277, _0x31296f = _0xa33ce0 * _0x220277;
            _0x34cda7['_TEMPVec3']['x'] = _0x12759c, _0x34cda7['_TEMPVec3']['y'] = _0x25ed2e, _0x34cda7['_TEMPVec3']['z'] = _0x31296f;
            var _0x4da49c = -(_0x12759c * _0x2ac255['x'] + _0x25ed2e * _0x2ac255['y'] + _0x31296f * _0x2ac255['z']);
            return new _0x34cda7(_0x34cda7['_TEMPVec3'], _0x4da49c);
        }
        ['normalize']() {
            var _0x2505c3 = this['normal']['x'], _0x3739d1 = this['normal']['y'], _0x253078 = this['normal']['z'], _0x5c24a2 = 0x1 / Math['sqrt'](_0x2505c3 * _0x2505c3 + _0x3739d1 * _0x3739d1 + _0x253078 * _0x253078);
            this['normal']['x'] = _0x2505c3 * _0x5c24a2, this['normal']['y'] = _0x3739d1 * _0x5c24a2, this['normal']['z'] = _0x253078 * _0x5c24a2, this['distance'] *= _0x5c24a2;
        }
    }
    _0x34cda7['_TEMPVec3'] = new _0x4795b3(), _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] = 0x0, _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] = 0x1, _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'] = 0x2;
    class _0x58eead {
        constructor(_0x167b90, _0x56810b) {
            this['origin'] = _0x167b90, this['direction'] = _0x56810b;
        }
    }
    class _0xa7a5eb {
    }
    _0xa7a5eb['Disjoint'] = 0x0, _0xa7a5eb['Contains'] = 0x1, _0xa7a5eb['Intersects'] = 0x2;
    class _0xb064b3 {
        constructor() {
        }
        static ['distancePl' + 'aneToPoint'](_0x356cd5, _0x2e6331) {
            return _0x4795b3['dot'](_0x356cd5['normal'], _0x2e6331) - _0x356cd5['distance'];
        }
        static ['distanceBo' + 'xToPoint'](_0x5b0c7b, _0x278a21) {
            var _0x53a6f7 = _0x5b0c7b['min'], _0x111440 = _0x53a6f7['x'], _0x41db38 = _0x53a6f7['y'], _0x38e6bf = _0x53a6f7['z'], _0x207ed2 = _0x5b0c7b['max'], _0x290c7b = _0x207ed2['x'], _0x48a529 = _0x207ed2['y'], _0x294594 = _0x207ed2['z'], _0x18933d = _0x278a21['x'], _0x3396ab = _0x278a21['y'], _0x589a3f = _0x278a21['z'], _0x550703 = 0x0;
            return _0x18933d < _0x111440 && (_0x550703 += (_0x111440 - _0x18933d) * (_0x111440 - _0x18933d)), _0x18933d > _0x290c7b && (_0x550703 += (_0x290c7b - _0x18933d) * (_0x290c7b - _0x18933d)), _0x3396ab < _0x41db38 && (_0x550703 += (_0x41db38 - _0x3396ab) * (_0x41db38 - _0x3396ab)), _0x3396ab > _0x48a529 && (_0x550703 += (_0x48a529 - _0x3396ab) * (_0x48a529 - _0x3396ab)), _0x589a3f < _0x38e6bf && (_0x550703 += (_0x38e6bf - _0x589a3f) * (_0x38e6bf - _0x589a3f)), _0x589a3f > _0x294594 && (_0x550703 += (_0x294594 - _0x589a3f) * (_0x294594 - _0x589a3f)), Math['sqrt'](_0x550703);
        }
        static ['distanceBo' + 'xToBox'](_0x2810f6, _0x12a968) {
            var _0xbb8576, _0x1f60e6 = _0x2810f6['min'], _0x300698 = _0x1f60e6['x'], _0x20f163 = _0x1f60e6['y'], _0x364e4b = _0x1f60e6['z'], _0x5b9b0f = _0x2810f6['max'], _0x374294 = _0x5b9b0f['x'], _0x29d982 = _0x5b9b0f['y'], _0x361cd8 = _0x5b9b0f['z'], _0x315f51 = _0x12a968['min'], _0x3eadac = _0x315f51['x'], _0x4935b3 = _0x315f51['y'], _0x4c0e9e = _0x315f51['z'], _0x3e080d = _0x12a968['max'], _0x56ddf1 = _0x3e080d['x'], _0x45d43b = _0x3e080d['y'], _0x18ba35 = _0x3e080d['z'], _0x4218e2 = 0x0;
            return _0x300698 > _0x56ddf1 ? _0x4218e2 += (_0xbb8576 = _0x300698 - _0x56ddf1) * _0xbb8576 : _0x3eadac > _0x374294 && (_0x4218e2 += (_0xbb8576 = _0x3eadac - _0x374294) * _0xbb8576), _0x20f163 > _0x45d43b ? _0x4218e2 += (_0xbb8576 = _0x20f163 - _0x45d43b) * _0xbb8576 : _0x4935b3 > _0x29d982 && (_0x4218e2 += (_0xbb8576 = _0x4935b3 - _0x29d982) * _0xbb8576), _0x364e4b > _0x18ba35 ? _0x4218e2 += (_0xbb8576 = _0x364e4b - _0x18ba35) * _0xbb8576 : _0x4c0e9e > _0x361cd8 && (_0x4218e2 += (_0xbb8576 = _0x4c0e9e - _0x361cd8) * _0xbb8576), Math['sqrt'](_0x4218e2);
        }
        static ['distanceSp' + 'hereToPoin' + 't'](_0x2e878c, _0x4b4af5) {
            var _0x7af0f9 = Math['sqrt'](_0x4795b3['distanceSq' + 'uared'](_0x2e878c['center'], _0x4b4af5));
            return _0x7af0f9 -= _0x2e878c['radius'], Math['max'](_0x7af0f9, 0x0);
        }
        static ['distanceSp' + 'hereToSphe' + 're'](_0x3e1ee0, _0x3e77f2) {
            var _0x38f9e8 = Math['sqrt'](_0x4795b3['distanceSq' + 'uared'](_0x3e1ee0['center'], _0x3e77f2['center']));
            return _0x38f9e8 -= _0x3e1ee0['radius'] + _0x3e77f2['radius'], Math['max'](_0x38f9e8, 0x0);
        }
        static ['intersects' + 'RayAndTria' + 'ngleRD'](_0x2eaf09, _0x5733c6, _0xda910d, _0x35c493, _0x2504dc) {
            var _0x590b38 = _0x2eaf09['origin'], _0x12ef66 = _0x590b38['x'], _0x1b3d43 = _0x590b38['y'], _0x589987 = _0x590b38['z'], _0x4f2fe4 = _0x2eaf09['direction'], _0x312fc3 = _0x4f2fe4['x'], _0x29ae84 = _0x4f2fe4['y'], _0xe646ca = _0x4f2fe4['z'], _0x41c8fa = _0x5733c6['x'], _0x3273dc = _0x5733c6['y'], _0x154573 = _0x5733c6['z'], _0xefa8b5 = _0xda910d['x'], _0x410d8d = _0xda910d['y'], _0x131f93 = _0xda910d['z'], _0x359047 = _0x35c493['x'], _0x1ceff8 = _0x35c493['y'], _0x5d40dc = _0x35c493['z'], _0x521151 = _0xb064b3['_tempV30']['x'], _0x15494d = _0xb064b3['_tempV30']['y'], _0x5d5eda = _0xb064b3['_tempV30']['z'];
            _0x521151 = _0xefa8b5 - _0x41c8fa, _0x15494d = _0x410d8d - _0x3273dc, _0x5d5eda = _0x131f93 - _0x154573;
            var _0x2b2a17 = _0xb064b3['_tempV31']['x'], _0x353d4f = _0xb064b3['_tempV31']['y'], _0x17fe71 = _0xb064b3['_tempV31']['z'];
            _0x2b2a17 = _0x359047 - _0x41c8fa, _0x353d4f = _0x1ceff8 - _0x3273dc, _0x17fe71 = _0x5d40dc - _0x154573;
            var _0x372d38 = _0xb064b3['_tempV32']['x'], _0x1d8341 = _0xb064b3['_tempV32']['y'], _0x3e512e = _0xb064b3['_tempV32']['z'], _0x5741e5 = _0x521151 * (_0x372d38 = _0x29ae84 * _0x17fe71 - _0xe646ca * _0x353d4f) + _0x15494d * (_0x1d8341 = _0xe646ca * _0x2b2a17 - _0x312fc3 * _0x17fe71) + _0x5d5eda * (_0x3e512e = _0x312fc3 * _0x353d4f - _0x29ae84 * _0x2b2a17);
            if (_0x183ae5['isZero'](_0x5741e5))
                return !0x1;
            var _0x3c4bc4 = 0x1 / _0x5741e5, _0x2236fb = _0xb064b3['_tempV33']['x'], _0x55ff9b = _0xb064b3['_tempV33']['y'], _0x5b1bba = _0xb064b3['_tempV33']['z'], _0x2eaaa5 = (_0x2236fb = _0x12ef66 - _0x41c8fa) * _0x372d38 + (_0x55ff9b = _0x1b3d43 - _0x3273dc) * _0x1d8341 + (_0x5b1bba = _0x589987 - _0x154573) * _0x3e512e;
            if ((_0x2eaaa5 *= _0x3c4bc4) < 0x0 || _0x2eaaa5 > 0x1)
                return !0x1;
            var _0x22126a = _0xb064b3['_tempV34']['x'], _0x5d4ec4 = _0xb064b3['_tempV34']['y'], _0x1b2a9c = _0xb064b3['_tempV34']['z'], _0x2138f0 = _0x312fc3 * (_0x22126a = _0x55ff9b * _0x5d5eda - _0x5b1bba * _0x15494d) + _0x29ae84 * (_0x5d4ec4 = _0x5b1bba * _0x521151 - _0x2236fb * _0x5d5eda) + _0xe646ca * (_0x1b2a9c = _0x2236fb * _0x15494d - _0x55ff9b * _0x521151);
            if ((_0x2138f0 *= _0x3c4bc4) < 0x0 || _0x2eaaa5 + _0x2138f0 > 0x1)
                return !0x1;
            var _0x2b8dd5 = _0x2b2a17 * _0x22126a + _0x353d4f * _0x5d4ec4 + _0x17fe71 * _0x1b2a9c;
            return !((_0x2b8dd5 *= _0x3c4bc4) < 0x0);
        }
        static ['intersects' + 'RayAndTria' + 'ngleRP'](_0x1c8155, _0x57318e, _0x22ecc7, _0x34f682, _0x46ca11) {
            return _0xb064b3['intersects' + 'RayAndTria' + 'ngleRD'](_0x1c8155, _0x57318e, _0x22ecc7, _0x34f682, void 0x0) ? (_0x4795b3['scale'](_0x1c8155['direction'], void 0x0, _0xb064b3['_tempV30']), _0x4795b3['add'](_0x1c8155['origin'], _0xb064b3['_tempV30'], _0x46ca11), !0x0) : (_0x46ca11 = _0x4795b3['_ZERO'], !0x1);
        }
        static ['intersects' + 'RayAndPoin' + 't'](_0x35a21f, _0x1bf80b) {
            _0x4795b3['subtract'](_0x35a21f['origin'], _0x1bf80b, _0xb064b3['_tempV30']);
            var _0x9a8072 = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0x35a21f['direction']), _0x42813a = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0xb064b3['_tempV30']) - _0x183ae5['zeroTolera' + 'nce'];
            return !(_0x42813a > 0x0 && _0x9a8072 > 0x0) && !(_0x9a8072 * _0x9a8072 - _0x42813a < 0x0);
        }
        static ['intersects' + 'RayAndRay'](_0x46936c, _0x3fe5f8, _0xd028cb) {
            var _0x717dca = _0x46936c['origin'], _0x194aad = _0x717dca['x'], _0x57afd2 = _0x717dca['y'], _0x2682b2 = _0x717dca['z'], _0x4dafd5 = _0x46936c['direction'], _0x317000 = _0x4dafd5['x'], _0x3cb528 = _0x4dafd5['y'], _0x305af7 = _0x4dafd5['z'], _0xd07b05 = _0x3fe5f8['origin'], _0x5b6de4 = _0xd07b05['x'], _0x34ef7f = _0xd07b05['y'], _0x434482 = _0xd07b05['z'], _0x7206d6 = _0x3fe5f8['direction'], _0x2f760e = _0x7206d6['x'], _0x3bfb10 = _0x7206d6['y'], _0x1b9466 = _0x7206d6['z'];
            _0x4795b3['cross'](_0x4dafd5, _0x7206d6, _0xb064b3['_tempV30']);
            var _0x1564c4 = _0xb064b3['_tempV30'], _0x411872 = _0x4795b3['scalarLeng' + 'th'](_0xb064b3['_tempV30']);
            if (_0x183ae5['isZero'](_0x411872) && _0x183ae5['nearEqual'](_0x5b6de4, _0x194aad) && _0x183ae5['nearEqual'](_0x34ef7f, _0x57afd2) && _0x183ae5['nearEqual'](_0x434482, _0x2682b2))
                return !0x0;
            _0x411872 *= _0x411872;
            var _0x48f57a = _0x5b6de4 - _0x194aad, _0x45be8e = _0x34ef7f - _0x57afd2, _0x3117e5 = _0x434482 - _0x2682b2, _0x332264 = _0x2f760e, _0xb06e28 = _0x3bfb10, _0x39f6c4 = _0x1b9466, _0x131eb5 = _0x1564c4['x'], _0x2054a7 = _0x1564c4['y'], _0x3dabc4 = _0x1564c4['z'], _0x330da2 = _0x48f57a * _0xb06e28 * _0x3dabc4 + _0x45be8e * _0x39f6c4 * _0x131eb5 + _0x3117e5 * _0x332264 * _0x2054a7 - _0x48f57a * _0x39f6c4 * _0x2054a7 - _0x45be8e * _0x332264 * _0x3dabc4 - _0x3117e5 * _0xb06e28 * _0x131eb5;
            _0x332264 = _0x317000, _0xb06e28 = _0x3cb528, _0x39f6c4 = _0x305af7;
            var _0x17ddc3 = _0x330da2 / _0x411872;
            _0x4795b3['scale'](_0x4dafd5, _0x17ddc3, _0xb064b3['_tempV30']), _0x4795b3['scale'](_0x7206d6, _0x17ddc3, _0xb064b3['_tempV31']), _0x4795b3['add'](_0x717dca, _0xb064b3['_tempV30'], _0xb064b3['_tempV32']), _0x4795b3['add'](_0xd07b05, _0xb064b3['_tempV31'], _0xb064b3['_tempV33']);
            var _0x1f8254 = _0xb064b3['_tempV32'], _0x485a98 = _0xb064b3['_tempV33'];
            return !!(_0x183ae5['nearEqual'](_0x485a98['x'], _0x1f8254['x']) && _0x183ae5['nearEqual'](_0x485a98['y'], _0x1f8254['y']) && _0x183ae5['nearEqual'](_0x485a98['z'], _0x1f8254['z']));
        }
        static ['intersects' + 'PlaneAndTr' + 'iangle'](_0x333d68, _0x417fd2, _0x4d699f, _0x334d75) {
            var _0x17af5e = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](_0x333d68, _0x417fd2), _0x381594 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](_0x333d68, _0x4d699f), _0x5b2bb3 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](_0x333d68, _0x334d75);
            return _0x17af5e == _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] && _0x381594 == _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] && _0x5b2bb3 == _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] : _0x17af5e == _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] && _0x381594 == _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] && _0x5b2bb3 == _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'RayAndPlan' + 'eRD'](_0x323251, _0x176a36) {
            var _0xb917e5 = _0x176a36['normal'], _0x4b668b = _0x4795b3['dot'](_0xb917e5, _0x323251['direction']);
            if (Math['abs'](_0x4b668b) < _0x183ae5['zeroTolera' + 'nce'])
                return -0x1;
            var _0x20556c = _0x4795b3['dot'](_0xb917e5, _0x323251['origin']), _0x4d8dfe = (-_0x176a36['distance'] - _0x20556c) / _0x4b668b;
            if (_0x4d8dfe < 0x0) {
                if (_0x4d8dfe < -_0x183ae5['zeroTolera' + 'nce'])
                    return -0x1;
                _0x4d8dfe = 0x0;
            }
            return _0x4d8dfe;
        }
        static ['intersects' + 'RayAndPlan' + 'eRP'](_0x298582, _0x3ccb23, _0x17b937) {
            var _0x285991 = _0xb064b3['intersects' + 'RayAndPlan' + 'eRD'](_0x298582, _0x3ccb23);
            if (-0x1 == _0x285991)
                return _0x17b937['setValue'](0x0, 0x0, 0x0), !0x1;
            var _0x41eea6 = _0xb064b3['_tempV30'];
            return _0x4795b3['scale'](_0x298582['direction'], _0x285991, _0x41eea6), _0x4795b3['add'](_0x298582['origin'], _0x41eea6, _0x17b937), !0x0;
        }
        static ['intersects' + 'RayAndBoxR' + 'D'](_0x554610, _0x655a71) {
            var _0x109891 = _0x554610['origin'], _0x409111 = _0x109891['x'], _0x4222ae = _0x109891['y'], _0x5269a2 = _0x109891['z'], _0x345216 = _0x554610['direction'], _0x8dec84 = _0x345216['x'], _0x330bb7 = _0x345216['y'], _0x402ba9 = _0x345216['z'], _0x394d0d = _0x655a71['min'], _0x5d7f42 = _0x394d0d['x'], _0x5d2657 = _0x394d0d['y'], _0x31f602 = _0x394d0d['z'], _0x41281c = _0x655a71['max'], _0x430978 = _0x41281c['x'], _0x44d4d4 = _0x41281c['y'], _0xc90aa8 = _0x41281c['z'], _0x22aca9 = 0x0, _0x2e1dfc = _0x183ae5['MaxValue'];
            if (_0x183ae5['isZero'](_0x8dec84)) {
                if (_0x409111 < _0x5d7f42 || _0x409111 > _0x430978)
                    return -0x1;
            } else {
                var _0x5124f3 = 0x1 / _0x8dec84, _0x7447fd = (_0x5d7f42 - _0x409111) * _0x5124f3, _0x3d3726 = (_0x430978 - _0x409111) * _0x5124f3;
                if (_0x7447fd > _0x3d3726) {
                    var _0x3da97d = _0x7447fd;
                    _0x7447fd = _0x3d3726, _0x3d3726 = _0x3da97d;
                }
                if ((_0x22aca9 = Math['max'](_0x7447fd, _0x22aca9)) > (_0x2e1dfc = Math['min'](_0x3d3726, _0x2e1dfc)))
                    return -0x1;
            }
            if (_0x183ae5['isZero'](_0x330bb7)) {
                if (_0x4222ae < _0x5d2657 || _0x4222ae > _0x44d4d4)
                    return -0x1;
            } else {
                var _0x175529 = 0x1 / _0x330bb7, _0xd53a29 = (_0x5d2657 - _0x4222ae) * _0x175529, _0x2a97bf = (_0x44d4d4 - _0x4222ae) * _0x175529;
                if (_0xd53a29 > _0x2a97bf) {
                    var _0x375487 = _0xd53a29;
                    _0xd53a29 = _0x2a97bf, _0x2a97bf = _0x375487;
                }
                if ((_0x22aca9 = Math['max'](_0xd53a29, _0x22aca9)) > (_0x2e1dfc = Math['min'](_0x2a97bf, _0x2e1dfc)))
                    return -0x1;
            }
            if (_0x183ae5['isZero'](_0x402ba9)) {
                if (_0x5269a2 < _0x31f602 || _0x5269a2 > _0xc90aa8)
                    return -0x1;
            } else {
                var _0x487a9e = 0x1 / _0x402ba9, _0x2e5c95 = (_0x31f602 - _0x5269a2) * _0x487a9e, _0x2426b8 = (_0xc90aa8 - _0x5269a2) * _0x487a9e;
                if (_0x2e5c95 > _0x2426b8) {
                    var _0x305237 = _0x2e5c95;
                    _0x2e5c95 = _0x2426b8, _0x2426b8 = _0x305237;
                }
                if ((_0x22aca9 = Math['max'](_0x2e5c95, _0x22aca9)) > (_0x2e1dfc = Math['min'](_0x2426b8, _0x2e1dfc)))
                    return -0x1;
            }
            return _0x22aca9;
        }
        static ['intersects' + 'RayAndBoxR' + 'P'](_0x247e19, _0x31aabd, _0x4e3e7a) {
            var _0x53153f = _0xb064b3['intersects' + 'RayAndBoxR' + 'D'](_0x247e19, _0x31aabd);
            return -0x1 === _0x53153f ? (_0x4795b3['_ZERO']['cloneTo'](_0x4e3e7a), _0x53153f) : (_0x4795b3['scale'](_0x247e19['direction'], _0x53153f, _0xb064b3['_tempV30']), _0x4795b3['add'](_0x247e19['origin'], _0xb064b3['_tempV30'], _0xb064b3['_tempV31']), _0xb064b3['_tempV31']['cloneTo'](_0x4e3e7a), _0x53153f);
        }
        static ['intersects' + 'RayAndSphe' + 'reRD'](_0x2bd345, _0x4c0b00) {
            var _0x27a6f3 = _0x4c0b00['radius'];
            _0x4795b3['subtract'](_0x2bd345['origin'], _0x4c0b00['center'], _0xb064b3['_tempV30']);
            var _0x56014c = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0x2bd345['direction']), _0x25629b = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0xb064b3['_tempV30']) - _0x27a6f3 * _0x27a6f3;
            if (_0x25629b > 0x0 && _0x56014c > 0x0)
                return -0x1;
            var _0x4e7ca9 = _0x56014c * _0x56014c - _0x25629b;
            if (_0x4e7ca9 < 0x0)
                return -0x1;
            var _0x4f47cc = -_0x56014c - Math['sqrt'](_0x4e7ca9);
            return _0x4f47cc < 0x0 && (_0x4f47cc = 0x0), _0x4f47cc;
        }
        static ['intersects' + 'RayAndSphe' + 'reRP'](_0x3fd52f, _0x5ceb85, _0x5a0333) {
            var _0x391f1f = _0xb064b3['intersects' + 'RayAndSphe' + 'reRD'](_0x3fd52f, _0x5ceb85);
            return -0x1 === _0x391f1f ? (_0x4795b3['_ZERO']['cloneTo'](_0x5a0333), _0x391f1f) : (_0x4795b3['scale'](_0x3fd52f['direction'], _0x391f1f, _0xb064b3['_tempV30']), _0x4795b3['add'](_0x3fd52f['origin'], _0xb064b3['_tempV30'], _0xb064b3['_tempV31']), _0xb064b3['_tempV31']['cloneTo'](_0x5a0333), _0x391f1f);
        }
        static ['intersects' + 'SphereAndT' + 'riangle'](_0x4f84de, _0x4cce6c, _0x2dfcc3, _0x26515b) {
            var _0x5a75bf = _0x4f84de['center'], _0x56f6e8 = _0x4f84de['radius'];
            return _0xb064b3['closestPoi' + 'ntPointTri' + 'angle'](_0x5a75bf, _0x4cce6c, _0x2dfcc3, _0x26515b, _0xb064b3['_tempV30']), _0x4795b3['subtract'](_0xb064b3['_tempV30'], _0x5a75bf, _0xb064b3['_tempV31']), _0x4795b3['dot'](_0xb064b3['_tempV31'], _0xb064b3['_tempV31']) <= _0x56f6e8 * _0x56f6e8;
        }
        static ['intersects' + 'PlaneAndPo' + 'int'](_0x2d14ed, _0x3b8a8b) {
            var _0x3b7d68 = _0x4795b3['dot'](_0x2d14ed['normal'], _0x3b8a8b) + _0x2d14ed['distance'];
            return _0x3b7d68 > 0x0 ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] : _0x3b7d68 < 0x0 ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'PlaneAndPl' + 'ane'](_0x3c2b1c, _0x4b8e3f) {
            _0x4795b3['cross'](_0x3c2b1c['normal'], _0x4b8e3f['normal'], _0xb064b3['_tempV30']);
            var _0x59458b = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0xb064b3['_tempV30']);
            return !_0x183ae5['isZero'](_0x59458b);
        }
        static ['intersects' + 'PlaneAndPl' + 'aneRL'](_0x4fd867, _0x366c82, _0x4a8c10) {
            var _0x69b6c = _0x4fd867['normal'], _0x1d345c = _0x366c82['normal'];
            _0x4795b3['cross'](_0x69b6c, _0x1d345c, _0xb064b3['_tempV34']);
            var _0x523104 = _0x4795b3['dot'](_0xb064b3['_tempV34'], _0xb064b3['_tempV34']);
            return !_0x183ae5['isZero'](_0x523104) && (_0x4795b3['scale'](_0x1d345c, _0x4fd867['distance'], _0xb064b3['_tempV30']), _0x4795b3['scale'](_0x69b6c, _0x366c82['distance'], _0xb064b3['_tempV31']), _0x4795b3['subtract'](_0xb064b3['_tempV30'], _0xb064b3['_tempV31'], _0xb064b3['_tempV32']), _0x4795b3['cross'](_0xb064b3['_tempV32'], _0xb064b3['_tempV34'], _0xb064b3['_tempV33']), _0x4795b3['normalize'](_0xb064b3['_tempV34'], _0xb064b3['_tempV34']), !0x0);
        }
        static ['intersects' + 'PlaneAndBo' + 'x'](_0x49adf4, _0x2b0b47) {
            var _0x853902 = _0x49adf4['distance'], _0x155b48 = _0x49adf4['normal'], _0x35f0a4 = _0x155b48['x'], _0x597c6f = _0x155b48['y'], _0x20dc74 = _0x155b48['z'], _0x27bd04 = _0x2b0b47['min'], _0x110b1e = _0x27bd04['x'], _0x4438e8 = _0x27bd04['y'], _0x22a3b7 = _0x27bd04['z'], _0x236971 = _0x2b0b47['max'], _0x3780c1 = _0x236971['x'], _0x1f6715 = _0x236971['y'], _0x435c0d = _0x236971['z'];
            _0xb064b3['_tempV30']['x'] = _0x35f0a4 > 0x0 ? _0x110b1e : _0x3780c1, _0xb064b3['_tempV30']['y'] = _0x597c6f > 0x0 ? _0x4438e8 : _0x1f6715, _0xb064b3['_tempV30']['z'] = _0x20dc74 > 0x0 ? _0x22a3b7 : _0x435c0d, _0xb064b3['_tempV31']['x'] = _0x35f0a4 > 0x0 ? _0x3780c1 : _0x110b1e, _0xb064b3['_tempV31']['y'] = _0x597c6f > 0x0 ? _0x1f6715 : _0x4438e8, _0xb064b3['_tempV31']['z'] = _0x20dc74 > 0x0 ? _0x435c0d : _0x22a3b7;
            var _0x2c2e36 = _0x4795b3['dot'](_0x155b48, _0xb064b3['_tempV30']);
            return _0x2c2e36 + _0x853902 > 0x0 ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] : (_0x2c2e36 = _0x4795b3['dot'](_0x155b48, _0xb064b3['_tempV31'])) + _0x853902 < 0x0 ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'PlaneAndSp' + 'here'](_0x5df33c, _0x429169) {
            var _0x15c5a0 = _0x429169['radius'], _0x5c6efc = _0x4795b3['dot'](_0x5df33c['normal'], _0x429169['center']) + _0x5df33c['distance'];
            return _0x5c6efc > _0x15c5a0 ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'] : _0x5c6efc < -_0x15c5a0 ? _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] : _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
        }
        static ['intersects' + 'BoxAndBox'](_0x3b0613, _0x499fdb) {
            var _0x3fb92b = _0x3b0613['min'], _0x3529cb = _0x3b0613['max'], _0x52db56 = _0x499fdb['min'], _0x41ad0d = _0x499fdb['max'];
            return !(_0x3fb92b['x'] > _0x41ad0d['x'] || _0x52db56['x'] > _0x3529cb['x']) && (!(_0x3fb92b['y'] > _0x41ad0d['y'] || _0x52db56['y'] > _0x3529cb['y']) && !(_0x3fb92b['z'] > _0x41ad0d['z'] || _0x52db56['z'] > _0x3529cb['z']));
        }
        static ['intersects' + 'BoxAndSphe' + 're'](_0x534007, _0x48b674) {
            var _0x379a14 = _0x48b674['center'], _0x167445 = _0x48b674['radius'];
            return _0x4795b3['Clamp'](_0x379a14, _0x534007['min'], _0x534007['max'], _0xb064b3['_tempV30']), _0x4795b3['distanceSq' + 'uared'](_0x379a14, _0xb064b3['_tempV30']) <= _0x167445 * _0x167445;
        }
        static ['intersects' + 'SphereAndS' + 'phere'](_0x3d422a, _0x53fec1) {
            var _0x5816e5 = _0x3d422a['radius'] + _0x53fec1['radius'];
            return _0x4795b3['distanceSq' + 'uared'](_0x3d422a['center'], _0x53fec1['center']) <= _0x5816e5 * _0x5816e5;
        }
        static ['boxContain' + 'sPoint'](_0x32783c, _0x5a79e7) {
            var _0xcf2ef = _0x32783c['min'], _0x2c94be = _0x32783c['max'];
            return _0xcf2ef['x'] <= _0x5a79e7['x'] && _0x2c94be['x'] >= _0x5a79e7['x'] && _0xcf2ef['y'] <= _0x5a79e7['y'] && _0x2c94be['y'] >= _0x5a79e7['y'] && _0xcf2ef['z'] <= _0x5a79e7['z'] && _0x2c94be['z'] >= _0x5a79e7['z'] ? _0xa7a5eb['Contains'] : _0xa7a5eb['Disjoint'];
        }
        static ['boxContain' + 'sBox'](_0x3631e4, _0x24e8d4) {
            var _0x887cd2 = _0x3631e4['min'], _0x229c7e = _0x887cd2['x'], _0x440355 = _0x887cd2['y'], _0x3bb448 = _0x887cd2['z'], _0x3f6b66 = _0x3631e4['max'], _0x1dd63d = _0x3f6b66['x'], _0x19d995 = _0x3f6b66['y'], _0x55187b = _0x3f6b66['z'], _0x2b3c00 = _0x24e8d4['min'], _0x5c74f4 = _0x2b3c00['x'], _0x3162b3 = _0x2b3c00['y'], _0x4fd0a0 = _0x2b3c00['z'], _0x19a68d = _0x24e8d4['max'], _0x53c7c0 = _0x19a68d['x'], _0xedcab2 = _0x19a68d['y'], _0x55b0f0 = _0x19a68d['z'];
            return _0x1dd63d < _0x5c74f4 || _0x229c7e > _0x53c7c0 ? _0xa7a5eb['Disjoint'] : _0x19d995 < _0x3162b3 || _0x440355 > _0xedcab2 ? _0xa7a5eb['Disjoint'] : _0x55187b < _0x4fd0a0 || _0x3bb448 > _0x55b0f0 ? _0xa7a5eb['Disjoint'] : _0x229c7e <= _0x5c74f4 && _0x53c7c0 <= _0x1dd63d && _0x440355 <= _0x3162b3 && _0xedcab2 <= _0x19d995 && _0x3bb448 <= _0x4fd0a0 && _0x55b0f0 <= _0x55187b ? _0xa7a5eb['Contains'] : _0xa7a5eb['Intersects'];
        }
        static ['boxContain' + 'sSphere'](_0x33f04a, _0x187a4b) {
            var _0xe793d6 = _0x33f04a['min'], _0xe0fe3e = _0xe793d6['x'], _0x28e235 = _0xe793d6['y'], _0x19419b = _0xe793d6['z'], _0x1126a4 = _0x33f04a['max'], _0x6220c3 = _0x1126a4['x'], _0x30b221 = _0x1126a4['y'], _0x242e51 = _0x1126a4['z'], _0x4f4aba = _0x187a4b['center'], _0x135fca = _0x4f4aba['x'], _0x1faf77 = _0x4f4aba['y'], _0x709ae7 = _0x4f4aba['z'], _0x4f83fb = _0x187a4b['radius'];
            return _0x4795b3['Clamp'](_0x4f4aba, _0xe793d6, _0x1126a4, _0xb064b3['_tempV30']), _0x4795b3['distanceSq' + 'uared'](_0x4f4aba, _0xb064b3['_tempV30']) > _0x4f83fb * _0x4f83fb ? _0xa7a5eb['Disjoint'] : _0xe0fe3e + _0x4f83fb <= _0x135fca && _0x135fca <= _0x6220c3 - _0x4f83fb && _0x6220c3 - _0xe0fe3e > _0x4f83fb && _0x28e235 + _0x4f83fb <= _0x1faf77 && _0x1faf77 <= _0x30b221 - _0x4f83fb && _0x30b221 - _0x28e235 > _0x4f83fb && _0x19419b + _0x4f83fb <= _0x709ae7 && _0x709ae7 <= _0x242e51 - _0x4f83fb && _0x242e51 - _0x19419b > _0x4f83fb ? _0xa7a5eb['Contains'] : _0xa7a5eb['Intersects'];
        }
        static ['sphereCont' + 'ainsPoint'](_0x4e1774, _0x4221a2) {
            return _0x4795b3['distanceSq' + 'uared'](_0x4221a2, _0x4e1774['center']) <= _0x4e1774['radius'] * _0x4e1774['radius'] ? _0xa7a5eb['Contains'] : _0xa7a5eb['Disjoint'];
        }
        static ['sphereCont' + 'ainsTriang' + 'le'](_0x150033, _0x5bead5, _0x5842f1, _0x51d1c) {
            var _0x5a2cc4 = _0xb064b3['sphereCont' + 'ainsPoint'](_0x150033, _0x5bead5), _0x5b6ce4 = _0xb064b3['sphereCont' + 'ainsPoint'](_0x150033, _0x5842f1), _0x1e874d = _0xb064b3['sphereCont' + 'ainsPoint'](_0x150033, _0x51d1c);
            return _0x5a2cc4 == _0xa7a5eb['Contains'] && _0x5b6ce4 == _0xa7a5eb['Contains'] && _0x1e874d == _0xa7a5eb['Contains'] ? _0xa7a5eb['Contains'] : _0xb064b3['intersects' + 'SphereAndT' + 'riangle'](_0x150033, _0x5bead5, _0x5842f1, _0x51d1c) ? _0xa7a5eb['Intersects'] : _0xa7a5eb['Disjoint'];
        }
        static ['sphereCont' + 'ainsBox'](_0x52ce2c, _0x25ae5b) {
            var _0x362472 = _0x52ce2c['center'], _0x42df9b = _0x362472['x'], _0x17964c = _0x362472['y'], _0x4a4aa0 = _0x362472['z'], _0x362a8d = _0x52ce2c['radius'], _0x280fcb = _0x25ae5b['min'], _0x4ae623 = _0x280fcb['x'], _0x15fb9f = _0x280fcb['y'], _0x592e91 = _0x280fcb['z'], _0x436215 = _0x25ae5b['max'], _0x20a5d4 = _0x436215['x'], _0x3930a6 = _0x436215['y'], _0x9bb16a = _0x436215['z'], _0x5c8bcb = _0xb064b3['_tempV30'];
            _0x5c8bcb['x'], _0x5c8bcb['y'], _0x5c8bcb['z'];
            if (!_0xb064b3['intersects' + 'BoxAndSphe' + 're'](_0x25ae5b, _0x52ce2c))
                return _0xa7a5eb['Disjoint'];
            var _0x28a4f3 = _0x362a8d * _0x362a8d;
            return _0x42df9b - _0x4ae623, _0x17964c - _0x3930a6, _0x4a4aa0 - _0x9bb16a, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x20a5d4, _0x17964c - _0x3930a6, _0x4a4aa0 - _0x9bb16a, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x20a5d4, _0x17964c - _0x15fb9f, _0x4a4aa0 - _0x9bb16a, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x4ae623, _0x17964c - _0x15fb9f, _0x4a4aa0 - _0x9bb16a, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x4ae623, _0x17964c - _0x3930a6, _0x4a4aa0 - _0x592e91, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x20a5d4, _0x17964c - _0x3930a6, _0x4a4aa0 - _0x592e91, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x20a5d4, _0x17964c - _0x15fb9f, _0x4a4aa0 - _0x592e91, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : (_0x42df9b - _0x4ae623, _0x17964c - _0x15fb9f, _0x4a4aa0 - _0x592e91, _0x4795b3['scalarLeng' + 'thSquared'](_0xb064b3['_tempV30']) > _0x28a4f3 ? _0xa7a5eb['Intersects'] : _0xa7a5eb['Contains'])))))));
        }
        static ['sphereCont' + 'ainsSphere'](_0x22143e, _0x5664be) {
            var _0x2eb8d7 = _0x22143e['radius'], _0x5113ee = _0x5664be['radius'], _0x271e42 = _0x4795b3['distance'](_0x22143e['center'], _0x5664be['center']);
            return _0x2eb8d7 + _0x5113ee < _0x271e42 ? _0xa7a5eb['Disjoint'] : _0x2eb8d7 - _0x5113ee < _0x271e42 ? _0xa7a5eb['Intersects'] : _0xa7a5eb['Contains'];
        }
        static ['closestPoi' + 'ntPointTri' + 'angle'](_0x5cb558, _0x566e34, _0x33d8d6, _0x444916, _0x4c2d96) {
            _0x4795b3['subtract'](_0x33d8d6, _0x566e34, _0xb064b3['_tempV30']), _0x4795b3['subtract'](_0x444916, _0x566e34, _0xb064b3['_tempV31']), _0x4795b3['subtract'](_0x5cb558, _0x566e34, _0xb064b3['_tempV32']), _0x4795b3['subtract'](_0x5cb558, _0x33d8d6, _0xb064b3['_tempV33']), _0x4795b3['subtract'](_0x5cb558, _0x444916, _0xb064b3['_tempV34']);
            var _0x12aa2f = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0xb064b3['_tempV32']), _0x539d46 = _0x4795b3['dot'](_0xb064b3['_tempV31'], _0xb064b3['_tempV32']), _0x17a940 = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0xb064b3['_tempV33']), _0x3260a3 = _0x4795b3['dot'](_0xb064b3['_tempV31'], _0xb064b3['_tempV33']), _0x250a74 = _0x4795b3['dot'](_0xb064b3['_tempV30'], _0xb064b3['_tempV34']), _0xeafd7e = _0x4795b3['dot'](_0xb064b3['_tempV31'], _0xb064b3['_tempV34']);
            if (_0x12aa2f <= 0x0 && _0x539d46 <= 0x0)
                _0x566e34['cloneTo'](_0x4c2d96);
            else {
                if (_0x17a940 >= 0x0 && _0x3260a3 <= _0x17a940)
                    _0x33d8d6['cloneTo'](_0x4c2d96);
                else {
                    var _0x92dbaf = _0x12aa2f * _0x3260a3 - _0x17a940 * _0x539d46;
                    if (_0x92dbaf <= 0x0 && _0x12aa2f >= 0x0 && _0x17a940 <= 0x0) {
                        var _0x540f23 = _0x12aa2f / (_0x12aa2f - _0x17a940);
                        return _0x4795b3['scale'](_0xb064b3['_tempV30'], _0x540f23, _0x4c2d96), void _0x4795b3['add'](_0x566e34, _0x4c2d96, _0x4c2d96);
                    }
                    if (_0xeafd7e >= 0x0 && _0x250a74 <= _0xeafd7e)
                        _0x444916['cloneTo'](_0x4c2d96);
                    else {
                        var _0x3250ed = _0x250a74 * _0x539d46 - _0x12aa2f * _0xeafd7e;
                        if (_0x3250ed <= 0x0 && _0x539d46 >= 0x0 && _0xeafd7e <= 0x0) {
                            var _0x2c0a7a = _0x539d46 / (_0x539d46 - _0xeafd7e);
                            return _0x4795b3['scale'](_0xb064b3['_tempV31'], _0x2c0a7a, _0x4c2d96), void _0x4795b3['add'](_0x566e34, _0x4c2d96, _0x4c2d96);
                        }
                        var _0x46c365 = _0x17a940 * _0xeafd7e - _0x250a74 * _0x3260a3;
                        if (_0x46c365 <= 0x0 && _0x3260a3 - _0x17a940 >= 0x0 && _0x250a74 - _0xeafd7e >= 0x0) {
                            var _0x4bee6b = (_0x3260a3 - _0x17a940) / (_0x3260a3 - _0x17a940 + (_0x250a74 - _0xeafd7e));
                            return _0x4795b3['subtract'](_0x444916, _0x33d8d6, _0x4c2d96), _0x4795b3['scale'](_0x4c2d96, _0x4bee6b, _0x4c2d96), void _0x4795b3['add'](_0x33d8d6, _0x4c2d96, _0x4c2d96);
                        }
                        var _0x52f2b4 = 0x1 / (_0x46c365 + _0x3250ed + _0x92dbaf), _0x534e46 = _0x3250ed * _0x52f2b4, _0x48a9cc = _0x92dbaf * _0x52f2b4;
                        _0x4795b3['scale'](_0xb064b3['_tempV30'], _0x534e46, _0xb064b3['_tempV35']), _0x4795b3['scale'](_0xb064b3['_tempV31'], _0x48a9cc, _0xb064b3['_tempV36']), _0x4795b3['add'](_0xb064b3['_tempV35'], _0xb064b3['_tempV36'], _0x4c2d96), _0x4795b3['add'](_0x566e34, _0x4c2d96, _0x4c2d96);
                    }
                }
            }
        }
        static ['closestPoi' + 'ntPlanePoi' + 'nt'](_0x179dcd, _0x49e069, _0x4a2b8c) {
            var _0x3e57aa = _0x179dcd['normal'], _0x49aa5e = _0x4795b3['dot'](_0x3e57aa, _0x49e069) - _0x179dcd['distance'];
            _0x4795b3['scale'](_0x3e57aa, _0x49aa5e, _0xb064b3['_tempV30']), _0x4795b3['subtract'](_0x49e069, _0xb064b3['_tempV30'], _0x4a2b8c);
        }
        static ['closestPoi' + 'ntBoxPoint'](_0x4c10f8, _0x28a0e0, _0x2e8433) {
            _0x4795b3['max'](_0x28a0e0, _0x4c10f8['min'], _0xb064b3['_tempV30']), _0x4795b3['min'](_0xb064b3['_tempV30'], _0x4c10f8['max'], _0x2e8433);
        }
        static ['closestPoi' + 'ntSpherePo' + 'int'](_0x14eb46, _0x10d2b9, _0x3dec6d) {
            var _0x19ead1 = _0x14eb46['center'];
            _0x4795b3['subtract'](_0x10d2b9, _0x19ead1, _0x3dec6d), _0x4795b3['normalize'](_0x3dec6d, _0x3dec6d), _0x4795b3['scale'](_0x3dec6d, _0x14eb46['radius'], _0x3dec6d), _0x4795b3['add'](_0x3dec6d, _0x19ead1, _0x3dec6d);
        }
        static ['closestPoi' + 'ntSphereSp' + 'here'](_0x1cd727, _0x746ebd, _0x3ecfc9) {
            var _0x13b7b4 = _0x1cd727['center'];
            _0x4795b3['subtract'](_0x746ebd['center'], _0x13b7b4, _0x3ecfc9), _0x4795b3['normalize'](_0x3ecfc9, _0x3ecfc9), _0x4795b3['scale'](_0x3ecfc9, _0x1cd727['radius'], _0x3ecfc9), _0x4795b3['add'](_0x3ecfc9, _0x13b7b4, _0x3ecfc9);
        }
    }
    _0xb064b3['_tempV30'] = new _0x4795b3(), _0xb064b3['_tempV31'] = new _0x4795b3(), _0xb064b3['_tempV32'] = new _0x4795b3(), _0xb064b3['_tempV33'] = new _0x4795b3(), _0xb064b3['_tempV34'] = new _0x4795b3(), _0xb064b3['_tempV35'] = new _0x4795b3(), _0xb064b3['_tempV36'] = new _0x4795b3();
    class _0x5387d2 {
        constructor(_0x44c9dc) {
            this['_matrix'] = _0x44c9dc, this['_near'] = new _0x34cda7(new _0x4795b3()), this['_far'] = new _0x34cda7(new _0x4795b3()), this['_left'] = new _0x34cda7(new _0x4795b3()), this['_right'] = new _0x34cda7(new _0x4795b3()), this['_top'] = new _0x34cda7(new _0x4795b3()), this['_bottom'] = new _0x34cda7(new _0x4795b3()), _0x5387d2['_getPlanes' + 'FromMatrix'](this['_matrix'], this['_near'], this['_far'], this['_left'], this['_right'], this['_top'], this['_bottom']);
        }
        get ['matrix']() {
            return this['_matrix'];
        }
        set ['matrix'](_0x511361) {
            this['_matrix'] = _0x511361, _0x5387d2['_getPlanes' + 'FromMatrix'](this['_matrix'], this['_near'], this['_far'], this['_left'], this['_right'], this['_top'], this['_bottom']);
        }
        get ['near']() {
            return this['_near'];
        }
        get ['far']() {
            return this['_far'];
        }
        get ['left']() {
            return this['_left'];
        }
        get ['right']() {
            return this['_right'];
        }
        get ['top']() {
            return this['_top'];
        }
        get ['bottom']() {
            return this['_bottom'];
        }
        ['equalsBoun' + 'dFrustum'](_0x5352ad) {
            return this['_matrix']['equalsOthe' + 'rMatrix'](_0x5352ad['matrix']);
        }
        ['equalsObj'](_0x20b594) {
            if (_0x20b594 instanceof _0x5387d2) {
                var _0x5afd62 = _0x20b594;
                return this['equalsBoun' + 'dFrustum'](_0x5afd62);
            }
            return !0x1;
        }
        ['getPlane'](_0x2dd4a2) {
            switch (_0x2dd4a2) {
            case 0x0:
                return this['_near'];
            case 0x1:
                return this['_far'];
            case 0x2:
                return this['_left'];
            case 0x3:
                return this['_right'];
            case 0x4:
                return this['_top'];
            case 0x5:
                return this['_bottom'];
            default:
                return null;
            }
        }
        static ['_getPlanes' + 'FromMatrix'](_0x5a547e, _0x4012b4, _0x488ba2, _0x49bd00, _0x4d8444, _0x4e93e6, _0x45355e) {
            var _0x2828c5 = _0x5a547e['elements'], _0x4eb49b = _0x2828c5[0x0], _0x1141ec = _0x2828c5[0x1], _0x272d1b = _0x2828c5[0x2], _0x11a0ed = _0x2828c5[0x3], _0x3483e4 = _0x2828c5[0x4], _0x5489c1 = _0x2828c5[0x5], _0x2b222c = _0x2828c5[0x6], _0x2c1fde = _0x2828c5[0x7], _0x48991f = _0x2828c5[0x8], _0x435851 = _0x2828c5[0x9], _0x51c776 = _0x2828c5[0xa], _0xbc9edc = _0x2828c5[0xb], _0x579445 = _0x2828c5[0xc], _0x242384 = _0x2828c5[0xd], _0x2b8a49 = _0x2828c5[0xe], _0x30a1d8 = _0x2828c5[0xf], _0x36abc6 = _0x4012b4['normal'];
            _0x36abc6['x'] = _0x11a0ed + _0x272d1b, _0x36abc6['y'] = _0x2c1fde + _0x2b222c, _0x36abc6['z'] = _0xbc9edc + _0x51c776, _0x4012b4['distance'] = _0x30a1d8 + _0x2b8a49, _0x4012b4['normalize']();
            var _0x186db3 = _0x488ba2['normal'];
            _0x186db3['x'] = _0x11a0ed - _0x272d1b, _0x186db3['y'] = _0x2c1fde - _0x2b222c, _0x186db3['z'] = _0xbc9edc - _0x51c776, _0x488ba2['distance'] = _0x30a1d8 - _0x2b8a49, _0x488ba2['normalize']();
            var _0x1d4340 = _0x49bd00['normal'];
            _0x1d4340['x'] = _0x11a0ed + _0x4eb49b, _0x1d4340['y'] = _0x2c1fde + _0x3483e4, _0x1d4340['z'] = _0xbc9edc + _0x48991f, _0x49bd00['distance'] = _0x30a1d8 + _0x579445, _0x49bd00['normalize']();
            var _0x511c95 = _0x4d8444['normal'];
            _0x511c95['x'] = _0x11a0ed - _0x4eb49b, _0x511c95['y'] = _0x2c1fde - _0x3483e4, _0x511c95['z'] = _0xbc9edc - _0x48991f, _0x4d8444['distance'] = _0x30a1d8 - _0x579445, _0x4d8444['normalize']();
            var _0x188137 = _0x4e93e6['normal'];
            _0x188137['x'] = _0x11a0ed - _0x1141ec, _0x188137['y'] = _0x2c1fde - _0x5489c1, _0x188137['z'] = _0xbc9edc - _0x435851, _0x4e93e6['distance'] = _0x30a1d8 - _0x242384, _0x4e93e6['normalize']();
            var _0x237711 = _0x45355e['normal'];
            _0x237711['x'] = _0x11a0ed + _0x1141ec, _0x237711['y'] = _0x2c1fde + _0x5489c1, _0x237711['z'] = _0xbc9edc + _0x435851, _0x45355e['distance'] = _0x30a1d8 + _0x242384, _0x45355e['normalize']();
        }
        static ['_get3Plane' + 'InterPoint'](_0x49f0c2, _0x36f01c, _0x386731) {
            var _0x26fb4a = _0x49f0c2['normal'], _0x55f70c = _0x36f01c['normal'], _0x475e90 = _0x386731['normal'];
            _0x4795b3['cross'](_0x55f70c, _0x475e90, _0x5387d2['_tempV30']), _0x4795b3['cross'](_0x475e90, _0x26fb4a, _0x5387d2['_tempV31']), _0x4795b3['cross'](_0x26fb4a, _0x55f70c, _0x5387d2['_tempV32']);
            var _0x1de0b9 = _0x4795b3['dot'](_0x26fb4a, _0x5387d2['_tempV30']), _0x3f639c = _0x4795b3['dot'](_0x55f70c, _0x5387d2['_tempV31']), _0x4efbf5 = _0x4795b3['dot'](_0x475e90, _0x5387d2['_tempV32']);
            return _0x4795b3['scale'](_0x5387d2['_tempV30'], -_0x49f0c2['distance'] / _0x1de0b9, _0x5387d2['_tempV33']), _0x4795b3['scale'](_0x5387d2['_tempV31'], -_0x36f01c['distance'] / _0x3f639c, _0x5387d2['_tempV34']), _0x4795b3['scale'](_0x5387d2['_tempV32'], -_0x386731['distance'] / _0x4efbf5, _0x5387d2['_tempV35']), _0x4795b3['add'](_0x5387d2['_tempV33'], _0x5387d2['_tempV34'], _0x5387d2['_tempV36']), _0x4795b3['add'](_0x5387d2['_tempV35'], _0x5387d2['_tempV36'], _0x5387d2['_tempV37']), _0x5387d2['_tempV37'];
        }
        ['getCorners'](_0x57f655) {
            _0x5387d2['_get3Plane' + 'InterPoint'](this['_near'], this['_bottom'], this['_right'])['cloneTo'](_0x57f655[0x0]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_near'], this['_top'], this['_right'])['cloneTo'](_0x57f655[0x1]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_near'], this['_top'], this['_left'])['cloneTo'](_0x57f655[0x2]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_near'], this['_bottom'], this['_left'])['cloneTo'](_0x57f655[0x3]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_far'], this['_bottom'], this['_right'])['cloneTo'](_0x57f655[0x4]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_far'], this['_top'], this['_right'])['cloneTo'](_0x57f655[0x5]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_far'], this['_top'], this['_left'])['cloneTo'](_0x57f655[0x6]), _0x5387d2['_get3Plane' + 'InterPoint'](this['_far'], this['_bottom'], this['_left'])['cloneTo'](_0x57f655[0x7]);
        }
        ['containsPo' + 'int'](_0x35eed8) {
            for (var _0x55bacd = _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x2ad731 = _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x5c50d8 = 0x0; _0x5c50d8 < 0x6; _0x5c50d8++) {
                switch (_0x5c50d8) {
                case 0x0:
                    _0x2ad731 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](this['_near'], _0x35eed8);
                    break;
                case 0x1:
                    _0x2ad731 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](this['_far'], _0x35eed8);
                    break;
                case 0x2:
                    _0x2ad731 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](this['_left'], _0x35eed8);
                    break;
                case 0x3:
                    _0x2ad731 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](this['_right'], _0x35eed8);
                    break;
                case 0x4:
                    _0x2ad731 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](this['_top'], _0x35eed8);
                    break;
                case 0x5:
                    _0x2ad731 = _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](this['_bottom'], _0x35eed8);
                }
                switch (_0x2ad731) {
                case _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back']:
                    return _0xa7a5eb['Disjoint'];
                case _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                    _0x55bacd = _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
                }
            }
            switch (_0x55bacd) {
            case _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                return _0xa7a5eb['Intersects'];
            default:
                return _0xa7a5eb['Contains'];
            }
        }
        ['intersects'](_0x4d1729) {
            var _0x12b79b = _0x4d1729['min'], _0x15db0b = _0x4d1729['max'], _0x374cb7 = _0x12b79b['x'], _0x55fc0f = _0x12b79b['y'], _0x2bd1f8 = _0x12b79b['z'], _0x33a8db = _0x15db0b['x'], _0x404279 = _0x15db0b['y'], _0x4c88ba = _0x15db0b['z'], _0x2cfdae = this['_near']['normal'];
            if (this['_near']['distance'] + _0x2cfdae['x'] * (_0x2cfdae['x'] < 0x0 ? _0x374cb7 : _0x33a8db) + _0x2cfdae['y'] * (_0x2cfdae['y'] < 0x0 ? _0x55fc0f : _0x404279) + _0x2cfdae['z'] * (_0x2cfdae['z'] < 0x0 ? _0x2bd1f8 : _0x4c88ba) < 0x0)
                return !0x1;
            var _0x456961 = this['_left']['normal'];
            if (this['_left']['distance'] + _0x456961['x'] * (_0x456961['x'] < 0x0 ? _0x374cb7 : _0x33a8db) + _0x456961['y'] * (_0x456961['y'] < 0x0 ? _0x55fc0f : _0x404279) + _0x456961['z'] * (_0x456961['z'] < 0x0 ? _0x2bd1f8 : _0x4c88ba) < 0x0)
                return !0x1;
            var _0x13a928 = this['_right']['normal'];
            if (this['_right']['distance'] + _0x13a928['x'] * (_0x13a928['x'] < 0x0 ? _0x374cb7 : _0x33a8db) + _0x13a928['y'] * (_0x13a928['y'] < 0x0 ? _0x55fc0f : _0x404279) + _0x13a928['z'] * (_0x13a928['z'] < 0x0 ? _0x2bd1f8 : _0x4c88ba) < 0x0)
                return !0x1;
            var _0x458a5e = this['_bottom']['normal'];
            if (this['_bottom']['distance'] + _0x458a5e['x'] * (_0x458a5e['x'] < 0x0 ? _0x374cb7 : _0x33a8db) + _0x458a5e['y'] * (_0x458a5e['y'] < 0x0 ? _0x55fc0f : _0x404279) + _0x458a5e['z'] * (_0x458a5e['z'] < 0x0 ? _0x2bd1f8 : _0x4c88ba) < 0x0)
                return !0x1;
            var _0x4e5370 = this['_top']['normal'];
            if (this['_top']['distance'] + _0x4e5370['x'] * (_0x4e5370['x'] < 0x0 ? _0x374cb7 : _0x33a8db) + _0x4e5370['y'] * (_0x4e5370['y'] < 0x0 ? _0x55fc0f : _0x404279) + _0x4e5370['z'] * (_0x4e5370['z'] < 0x0 ? _0x2bd1f8 : _0x4c88ba) < 0x0)
                return !0x1;
            var _0x43fe37 = this['_far']['normal'];
            return !(this['_far']['distance'] + _0x43fe37['x'] * (_0x43fe37['x'] < 0x0 ? _0x374cb7 : _0x33a8db) + _0x43fe37['y'] * (_0x43fe37['y'] < 0x0 ? _0x55fc0f : _0x404279) + _0x43fe37['z'] * (_0x43fe37['z'] < 0x0 ? _0x2bd1f8 : _0x4c88ba) < 0x0);
        }
        ['containsBo' + 'undBox'](_0x2f8b63) {
            for (var _0xb52465 = _0x5387d2['_tempV30'], _0x28a8c0 = _0x5387d2['_tempV31'], _0x1c6cce = _0x2f8b63['min'], _0x30b846 = _0x2f8b63['max'], _0x527c9f = _0xa7a5eb['Contains'], _0x2a4fd9 = 0x0; _0x2a4fd9 < 0x6; _0x2a4fd9++) {
                var _0x1724a8 = this['getPlane'](_0x2a4fd9), _0x2aeeec = _0x1724a8['normal'];
                if (_0x2aeeec['x'] >= 0x0 ? (_0xb52465['x'] = _0x30b846['x'], _0x28a8c0['x'] = _0x1c6cce['x']) : (_0xb52465['x'] = _0x1c6cce['x'], _0x28a8c0['x'] = _0x30b846['x']), _0x2aeeec['y'] >= 0x0 ? (_0xb52465['y'] = _0x30b846['y'], _0x28a8c0['y'] = _0x1c6cce['y']) : (_0xb52465['y'] = _0x1c6cce['y'], _0x28a8c0['y'] = _0x30b846['y']), _0x2aeeec['z'] >= 0x0 ? (_0xb52465['z'] = _0x30b846['z'], _0x28a8c0['z'] = _0x1c6cce['z']) : (_0xb52465['z'] = _0x1c6cce['z'], _0x28a8c0['z'] = _0x30b846['z']), _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](_0x1724a8, _0xb52465) === _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'])
                    return _0xa7a5eb['Disjoint'];
                _0xb064b3['intersects' + 'PlaneAndPo' + 'int'](_0x1724a8, _0x28a8c0) === _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back'] && (_0x527c9f = _0xa7a5eb['Intersects']);
            }
            return _0x527c9f;
        }
        ['containsBo' + 'undSphere'](_0x116053) {
            for (var _0x1f6a1d = _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x2539d8 = _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Front'], _0x2a6d8e = 0x0; _0x2a6d8e < 0x6; _0x2a6d8e++) {
                switch (_0x2a6d8e) {
                case 0x0:
                    _0x2539d8 = _0xb064b3['intersects' + 'PlaneAndSp' + 'here'](this['_near'], _0x116053);
                    break;
                case 0x1:
                    _0x2539d8 = _0xb064b3['intersects' + 'PlaneAndSp' + 'here'](this['_far'], _0x116053);
                    break;
                case 0x2:
                    _0x2539d8 = _0xb064b3['intersects' + 'PlaneAndSp' + 'here'](this['_left'], _0x116053);
                    break;
                case 0x3:
                    _0x2539d8 = _0xb064b3['intersects' + 'PlaneAndSp' + 'here'](this['_right'], _0x116053);
                    break;
                case 0x4:
                    _0x2539d8 = _0xb064b3['intersects' + 'PlaneAndSp' + 'here'](this['_top'], _0x116053);
                    break;
                case 0x5:
                    _0x2539d8 = _0xb064b3['intersects' + 'PlaneAndSp' + 'here'](this['_bottom'], _0x116053);
                }
                switch (_0x2539d8) {
                case _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Back']:
                    return _0xa7a5eb['Disjoint'];
                case _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                    _0x1f6a1d = _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting'];
                }
            }
            switch (_0x1f6a1d) {
            case _0x34cda7['PlaneInter' + 'sectionTyp' + 'e_Intersec' + 'ting']:
                return _0xa7a5eb['Intersects'];
            default:
                return _0xa7a5eb['Contains'];
            }
        }
    }
    _0x5387d2['_tempV30'] = new _0x4795b3(), _0x5387d2['_tempV31'] = new _0x4795b3(), _0x5387d2['_tempV32'] = new _0x4795b3(), _0x5387d2['_tempV33'] = new _0x4795b3(), _0x5387d2['_tempV34'] = new _0x4795b3(), _0x5387d2['_tempV35'] = new _0x4795b3(), _0x5387d2['_tempV36'] = new _0x4795b3(), _0x5387d2['_tempV37'] = new _0x4795b3();
    class _0x3db26c {
        constructor(_0x297cd5, _0x1911d, _0x7de6af, _0x82c734) {
            this['minDepth'] = 0x0, this['maxDepth'] = 0x1, this['x'] = _0x297cd5, this['y'] = _0x1911d, this['width'] = _0x7de6af, this['height'] = _0x82c734;
        }
        ['project'](_0xc93bbc, _0x3e88c1, _0x19aaad) {
            var _0x792678 = _0xc93bbc['x'], _0x35209d = _0xc93bbc['y'], _0x1fbb37 = _0xc93bbc['z'];
            _0x4795b3['transformV' + '3ToV3'](_0xc93bbc, _0x3e88c1, _0x19aaad);
            var _0xe645fe = _0x3e88c1['elements'], _0x85d572 = _0x792678 * _0xe645fe[0x3] + _0x35209d * _0xe645fe[0x7] + _0x1fbb37 * _0xe645fe[0xb] + _0xe645fe[0xf];
            0x1 !== _0x85d572 && (_0x19aaad['x'] = _0x19aaad['x'] / _0x85d572, _0x19aaad['y'] = _0x19aaad['y'] / _0x85d572, _0x19aaad['z'] = _0x19aaad['z'] / _0x85d572), _0x19aaad['x'] = 0.5 * (_0x19aaad['x'] + 0x1) * this['width'] + this['x'], _0x19aaad['y'] = 0.5 * (0x1 - _0x19aaad['y']) * this['height'] + this['y'], _0x19aaad['z'] = _0x19aaad['z'] * (this['maxDepth'] - this['minDepth']) + this['minDepth'];
        }
        ['unprojectF' + 'romMat'](_0x319833, _0x5ae5b1, _0x124da2) {
            var _0x9a35bc = _0x5ae5b1['elements'];
            _0x124da2['x'] = (_0x319833['x'] - this['x']) / this['width'] * 0x2 - 0x1, _0x124da2['y'] = -((_0x319833['y'] - this['y']) / this['height'] * 0x2 - 0x1);
            var _0x5a89d7 = (this['maxDepth'] - this['minDepth']) / 0x2;
            _0x124da2['z'] = (_0x319833['z'] - this['minDepth'] - _0x5a89d7) / _0x5a89d7;
            var _0x2b8e45 = _0x124da2['x'] * _0x9a35bc[0x3] + _0x124da2['y'] * _0x9a35bc[0x7] + _0x124da2['z'] * _0x9a35bc[0xb] + _0x9a35bc[0xf];
            _0x4795b3['transformV' + '3ToV3'](_0x124da2, _0x5ae5b1, _0x124da2), 0x1 !== _0x2b8e45 && (_0x124da2['x'] = _0x124da2['x'] / _0x2b8e45, _0x124da2['y'] = _0x124da2['y'] / _0x2b8e45, _0x124da2['z'] = _0x124da2['z'] / _0x2b8e45);
        }
        ['unprojectF' + 'romWVP'](_0x59a69e, _0x3f2ad9, _0x1f510b, _0x15dd5e, _0x16a632) {
            _0x16c2be['multiply'](_0x3f2ad9, _0x1f510b, _0x3db26c['_tempMatri' + 'x4x4']), _0x15dd5e && _0x16c2be['multiply'](_0x3db26c['_tempMatri' + 'x4x4'], _0x15dd5e, _0x3db26c['_tempMatri' + 'x4x4']), _0x3db26c['_tempMatri' + 'x4x4']['invert'](_0x3db26c['_tempMatri' + 'x4x4']), this['unprojectF' + 'romMat'](_0x59a69e, _0x3db26c['_tempMatri' + 'x4x4'], _0x16a632);
        }
        ['cloneTo'](_0x4a1344) {
            _0x4a1344['x'] = this['x'], _0x4a1344['y'] = this['y'], _0x4a1344['width'] = this['width'], _0x4a1344['height'] = this['height'], _0x4a1344['minDepth'] = this['minDepth'], _0x4a1344['maxDepth'] = this['maxDepth'];
        }
    }
    _0x3db26c['_tempMatri' + 'x4x4'] = new _0x16c2be();
    class _0x238ee3 {
        constructor() {
        }
        static ['calculateC' + 'ursorRay'](_0x55f8d9, _0x26a178, _0x53d765, _0x4e0b58, _0x5d4be8, _0x5b84d9) {
            var _0x43d2a1 = _0x55f8d9['x'], _0x36cd21 = _0x55f8d9['y'], _0x88fa9d = _0x238ee3['_tempVecto' + 'r30'], _0x41ae90 = _0x88fa9d;
            _0x41ae90['x'] = _0x43d2a1, _0x41ae90['y'] = _0x36cd21, _0x41ae90['z'] = _0x26a178['minDepth'];
            var _0x4d904c = _0x238ee3['_tempVecto' + 'r31'], _0x29ab3b = _0x4d904c;
            _0x29ab3b['x'] = _0x43d2a1, _0x29ab3b['y'] = _0x36cd21, _0x29ab3b['z'] = _0x26a178['maxDepth'];
            var _0x53f125 = _0x5b84d9['origin'], _0x33365f = _0x238ee3['_tempVecto' + 'r32'];
            _0x26a178['unprojectF' + 'romWVP'](_0x88fa9d, _0x53d765, _0x4e0b58, _0x5d4be8, _0x53f125), _0x26a178['unprojectF' + 'romWVP'](_0x4d904c, _0x53d765, _0x4e0b58, _0x5d4be8, _0x33365f);
            var _0x1663cb = _0x5b84d9['direction'];
            _0x1663cb['x'] = _0x33365f['x'] - _0x53f125['x'], _0x1663cb['y'] = _0x33365f['y'] - _0x53f125['y'], _0x1663cb['z'] = _0x33365f['z'] - _0x53f125['z'], _0x4795b3['normalize'](_0x5b84d9['direction'], _0x5b84d9['direction']);
        }
        static ['rayInterse' + 'ctsTriangl' + 'e'](_0xd76b26, _0x422a18, _0x59a89a, _0x166c80) {
            var _0x1cff72 = _0x238ee3['_tempVecto' + 'r30'], _0x5d7cf2 = _0x238ee3['_tempVecto' + 'r31'];
            _0x4795b3['subtract'](_0x59a89a, _0x422a18, _0x1cff72), _0x4795b3['subtract'](_0x166c80, _0x422a18, _0x5d7cf2);
            var _0x3014ae, _0x559fcb = _0x238ee3['_tempVecto' + 'r32'];
            if (_0x4795b3['cross'](_0xd76b26['direction'], _0x5d7cf2, _0x559fcb), (_0x3014ae = _0x4795b3['dot'](_0x1cff72, _0x559fcb)) > -Number['MIN_VALUE'] && _0x3014ae < Number['MIN_VALUE'])
                return Number['NaN'];
            var _0x368212, _0x216bd = 0x1 / _0x3014ae, _0x496ec5 = _0x238ee3['_tempVecto' + 'r33'];
            if (_0x4795b3['subtract'](_0xd76b26['origin'], _0x422a18, _0x496ec5), _0x368212 = _0x4795b3['dot'](_0x496ec5, _0x559fcb), (_0x368212 *= _0x216bd) < 0x0 || _0x368212 > 0x1)
                return Number['NaN'];
            var _0x1cc92a, _0x2deeda, _0x389d2e = _0x238ee3['_tempVecto' + 'r34'];
            return _0x4795b3['cross'](_0x496ec5, _0x1cff72, _0x389d2e), _0x1cc92a = _0x4795b3['dot'](_0xd76b26['direction'], _0x389d2e), (_0x1cc92a *= _0x216bd) < 0x0 || _0x368212 + _0x1cc92a > 0x1 ? Number['NaN'] : (_0x2deeda = _0x4795b3['dot'](_0x5d7cf2, _0x389d2e), (_0x2deeda *= _0x216bd) < 0x0 ? Number['NaN'] : _0x2deeda);
        }
    }
    _0x238ee3['_tempVecto' + 'r30'] = new _0x4795b3(), _0x238ee3['_tempVecto' + 'r31'] = new _0x4795b3(), _0x238ee3['_tempVecto' + 'r32'] = new _0x4795b3(), _0x238ee3['_tempVecto' + 'r33'] = new _0x4795b3(), _0x238ee3['_tempVecto' + 'r34'] = new _0x4795b3();
    class _0x5773d8 {
        static ['supportTex' + 'tureFormat'](_0x26d584) {
            switch (_0x26d584) {
            case _0x33d6e0['TextureFor' + 'mat']['R32G32B32A' + '32']:
                return !(!_0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] && !_0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_oesTextur' + 'eFloat']);
            default:
                return !0x0;
            }
        }
        static ['supportRen' + 'derTexture' + 'Format'](_0x398970) {
            switch (_0x398970) {
            case _0x33d6e0['RenderText' + 'ureFormat']['R16G16B16A' + '16']:
                return !!(_0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_isWebGL2'] || _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_oesTextur' + 'eHalfFloat'] && _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['_oesTextur' + 'eHalfFloat' + 'Linear']);
            default:
                return !0x0;
            }
        }
    }
    class _0x59c541 extends _0x33d6e0['BufferStat' + 'eBase'] {
        constructor() {
            super();
        }
        ['applyVerte' + 'xBuffer'](_0x4c464f) {
            if (_0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            var _0x523ea7 = _0x33d6e0['LayaGL']['instance'], _0x759663 = _0x4c464f['vertexDecl' + 'aration'], _0x31f8bd = _0x759663['_shaderVal' + 'ues']['getData']();
            for (var _0x13c377 in (this['vertexDecl' + 'aration'] = _0x759663, _0x4c464f['bind'](), _0x31f8bd)) {
                var _0x5d14b1 = parseInt(_0x13c377), _0x3fbf93 = _0x31f8bd[_0x13c377];
                _0x523ea7['enableVert' + 'exAttribAr' + 'ray'](_0x5d14b1), _0x523ea7['vertexAttr' + 'ibPointer'](_0x5d14b1, _0x3fbf93[0x0], _0x3fbf93[0x1], !!_0x3fbf93[0x2], _0x3fbf93[0x3], _0x3fbf93[0x4]);
            }
        }
        ['applyVerte' + 'xBuffers'](_0x437785) {
            if (_0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            for (var _0x392489 = _0x33d6e0['LayaGL']['instance'], _0x38a2c0 = 0x0, _0x3472f8 = _0x437785['length']; _0x38a2c0 < _0x3472f8; _0x38a2c0++) {
                var _0x4beafe = _0x437785[_0x38a2c0], _0x15f878 = _0x4beafe['vertexDecl' + 'aration']['_shaderVal' + 'ues']['getData']();
                for (var _0x48c4e5 in (_0x4beafe['bind'](), _0x15f878)) {
                    var _0x3caf21 = parseInt(_0x48c4e5), _0x5ba7ab = _0x15f878[_0x48c4e5];
                    _0x392489['enableVert' + 'exAttribAr' + 'ray'](_0x3caf21), _0x392489['vertexAttr' + 'ibPointer'](_0x3caf21, _0x5ba7ab[0x0], _0x5ba7ab[0x1], !!_0x5ba7ab[0x2], _0x5ba7ab[0x3], _0x5ba7ab[0x4]);
                }
            }
        }
        ['applyInsta' + 'nceVertexB' + 'uffer'](_0x38ee8b) {
            if (_0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']()) {
                if (_0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                    throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
                var _0x2e104a = _0x33d6e0['LayaGL']['instance'], _0x38e5d1 = _0x38ee8b['vertexDecl' + 'aration']['_shaderVal' + 'ues']['getData']();
                for (var _0x262da3 in (_0x38ee8b['bind'](), _0x38e5d1)) {
                    var _0x316bf6 = parseInt(_0x262da3), _0x191ab6 = _0x38e5d1[_0x262da3];
                    _0x2e104a['enableVert' + 'exAttribAr' + 'ray'](_0x316bf6), _0x2e104a['vertexAttr' + 'ibPointer'](_0x316bf6, _0x191ab6[0x0], _0x191ab6[0x1], !!_0x191ab6[0x2], _0x191ab6[0x3], _0x191ab6[0x4]), _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['vertexAttr' + 'ibDivisor'](_0x316bf6, 0x1);
                }
            }
        }
        ['applyIndex' + 'Buffer'](_0x59c9dd) {
            if (_0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'] !== this)
                throw 'BufferStat' + 'e:\x20must\x20ca' + 'll\x20bind()\x20' + 'function\x20f' + 'irst.';
            this['_bindedInd' + 'exBuffer'] !== _0x59c9dd && (_0x59c9dd['_bindForVA' + 'O'](), this['_bindedInd' + 'exBuffer'] = _0x59c9dd);
        }
    }
    var _0x578f36, _0x6f0b1, _0x5eb6cd;
    (_0x578f36 = _0x341b51['IndexForma' + 't'] || (_0x341b51['IndexForma' + 't'] = {}))[_0x578f36['UInt8'] = 0x0] = 'UInt8', _0x578f36[_0x578f36['UInt16'] = 0x1] = 'UInt16', _0x578f36[_0x578f36['UInt32'] = 0x2] = 'UInt32';
    class _0x95846f extends _0x33d6e0['Buffer'] {
        get ['indexType']() {
            return this['_indexType'];
        }
        get ['indexTypeB' + 'yteCount']() {
            return this['_indexType' + 'ByteCount'];
        }
        get ['indexCount']() {
            return this['_indexCoun' + 't'];
        }
        get ['canRead']() {
            return this['_canRead'];
        }
        constructor(_0x6ea751, _0x1c1cf6, _0x166583 = 0x88e4, _0x5ee058 = !0x1) {
            switch (super(), this['_indexType'] = _0x6ea751, this['_indexCoun' + 't'] = _0x1c1cf6, this['_bufferUsa' + 'ge'] = _0x166583, this['_bufferTyp' + 'e'] = _0x33d6e0['LayaGL']['instance']['ELEMENT_AR' + 'RAY_BUFFER'], this['_canRead'] = _0x5ee058, _0x6ea751) {
            case _0x341b51['IndexForma' + 't']['UInt32']:
                this['_indexType' + 'ByteCount'] = 0x4;
                break;
            case _0x341b51['IndexForma' + 't']['UInt16']:
                this['_indexType' + 'ByteCount'] = 0x2;
                break;
            case _0x341b51['IndexForma' + 't']['UInt8']:
                this['_indexType' + 'ByteCount'] = 0x1;
                break;
            default:
                throw new Error('unidentifi' + 'cation\x20ind' + 'ex\x20type.');
            }
            var _0x5c3e75 = this['_indexType' + 'ByteCount'] * _0x1c1cf6, _0x3333a2 = _0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'];
            if (this['_byteLengt' + 'h'] = _0x5c3e75, _0x3333a2 ? _0x3333a2['_bindedInd' + 'exBuffer'] === this ? _0x33d6e0['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x5c3e75, this['_bufferUsa' + 'ge']) : (_0x3333a2['unBind'](), this['bind'](), _0x33d6e0['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x5c3e75, this['_bufferUsa' + 'ge']), _0x3333a2['bind']()) : (this['bind'](), _0x33d6e0['LayaGL']['instance']['bufferData'](this['_bufferTyp' + 'e'], _0x5c3e75, this['_bufferUsa' + 'ge'])), _0x5ee058)
                switch (_0x6ea751) {
                case _0x341b51['IndexForma' + 't']['UInt32']:
                    this['_buffer'] = new Uint32Array(_0x1c1cf6);
                    break;
                case _0x341b51['IndexForma' + 't']['UInt16']:
                    this['_buffer'] = new Uint16Array(_0x1c1cf6);
                    break;
                case _0x341b51['IndexForma' + 't']['UInt8']:
                    this['_buffer'] = new Uint8Array(_0x1c1cf6);
                }
        }
        ['_bindForVA' + 'O']() {
            if (!_0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'])
                throw 'IndexBuffe' + 'r3D:\x20must\x20' + 'bind\x20curre' + 'nt\x20BufferS' + 'tate.';
            var _0xbca6a3 = _0x33d6e0['LayaGL']['instance'];
            _0xbca6a3['bindBuffer'](_0xbca6a3['ELEMENT_AR' + 'RAY_BUFFER'], this['_glBuffer']);
        }
        ['bind']() {
            if (_0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'])
                throw 'IndexBuffe' + 'r3D:\x20must\x20' + 'unbind\x20cur' + 'rent\x20Buffe' + 'rState.';
            if (_0x33d6e0['Buffer']['_bindedInd' + 'exBuffer'] !== this['_glBuffer']) {
                var _0xc9e4ac = _0x33d6e0['LayaGL']['instance'];
                return _0xc9e4ac['bindBuffer'](_0xc9e4ac['ELEMENT_AR' + 'RAY_BUFFER'], this['_glBuffer']), _0x33d6e0['Buffer']['_bindedInd' + 'exBuffer'] = this['_glBuffer'], !0x0;
            }
            return !0x1;
        }
        ['setData'](_0x1283e8, _0xd269be = 0x0, _0x462571 = 0x0, _0xc633ec = 0xffffffff) {
            var _0x35d096 = this['_indexType' + 'ByteCount'];
            if (0x0 !== _0x462571 || 0xffffffff !== _0xc633ec)
                switch (this['_indexType']) {
                case _0x341b51['IndexForma' + 't']['UInt32']:
                    _0x1283e8 = new Uint32Array(_0x1283e8['buffer'], _0x462571 * _0x35d096, _0xc633ec);
                    break;
                case _0x341b51['IndexForma' + 't']['UInt16']:
                    _0x1283e8 = new Uint16Array(_0x1283e8['buffer'], _0x462571 * _0x35d096, _0xc633ec);
                    break;
                case _0x341b51['IndexForma' + 't']['UInt8']:
                    _0x1283e8 = new Uint8Array(_0x1283e8['buffer'], _0x462571 * _0x35d096, _0xc633ec);
                }
            var _0x1ac51e = _0x33d6e0['BufferStat' + 'eBase']['_curBinded' + 'BufferStat' + 'e'];
            if (_0x1ac51e ? _0x1ac51e['_bindedInd' + 'exBuffer'] === this ? _0x33d6e0['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0xd269be * _0x35d096, _0x1283e8) : (_0x1ac51e['unBind'](), this['bind'](), _0x33d6e0['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0xd269be * _0x35d096, _0x1283e8), _0x1ac51e['bind']()) : (this['bind'](), _0x33d6e0['LayaGL']['instance']['bufferSubD' + 'ata'](this['_bufferTyp' + 'e'], _0xd269be * _0x35d096, _0x1283e8)), this['_canRead']) {
                if (0x0 !== _0xd269be || 0x0 !== _0x462571 || 0xffffffff !== _0xc633ec) {
                    var _0x577391 = this['_buffer']['length'] - _0xd269be;
                    _0xc633ec > _0x577391 && (_0xc633ec = _0x577391);
                    for (var _0x150e6c = 0x0; _0x150e6c < _0xc633ec; _0x150e6c++)
                        this['_buffer'][_0xd269be + _0x150e6c] = _0x1283e8[_0x150e6c];
                } else
                    this['_buffer'] = _0x1283e8;
            }
        }
        ['getData']() {
            if (this['_canRead'])
                return this['_buffer'];
            throw new Error('Can\x27t\x20read' + '\x20data\x20from' + '\x20VertexBuf' + 'fer\x20with\x20o' + 'nly\x20write\x20' + 'flag!');
        }
        ['destroy']() {
            super['destroy'](), this['_buffer'] = null;
        }
    }
    class _0x30b028 {
        constructor() {
        }
        ['_render'](_0x43e6bd) {
        }
    }
    class _0x2958cd extends _0x30b028 {
        static ['__init__']() {
            _0x2958cd['instance'] = new _0x2958cd();
        }
        constructor() {
            super();
            var _0x587fbd = _0x33d6e0['LayaGL']['instance'], _0x1d40c1 = new Float32Array([
                    -0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    0x1,
                    -0x1,
                    0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    0x1,
                    -0x1,
                    -0x1,
                    0x1
                ]), _0x19310c = new Uint8Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x0,
                    0x3,
                    0x7,
                    0x7,
                    0x4,
                    0x0,
                    0x1,
                    0x5,
                    0x6,
                    0x6,
                    0x2,
                    0x1,
                    0x3,
                    0x2,
                    0x6,
                    0x6,
                    0x7,
                    0x3,
                    0x0,
                    0x4,
                    0x5,
                    0x5,
                    0x1,
                    0x0
                ]), _0x32fa45 = _0xe3d46['getVertexD' + 'eclaration']('POSITION');
            this['_vertexBuf' + 'fer'] = new _0x5dfaba(0x8 * _0x32fa45['vertexStri' + 'de'], _0x587fbd['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x32fa45, this['_indexBuff' + 'er'] = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt8'], 0x24, _0x587fbd['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['setData'](_0x1d40c1['buffer']), this['_indexBuff' + 'er']['setData'](_0x19310c);
            var _0x3b24e6 = new _0x59c541();
            _0x3b24e6['bind'](), _0x3b24e6['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0x3b24e6['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0x3b24e6['unBind'](), this['_bufferSta' + 'te'] = _0x3b24e6;
        }
        ['_render'](_0x4d508c) {
            var _0x3643dd = _0x33d6e0['LayaGL']['instance'];
            _0x3643dd['drawElemen' + 'ts'](_0x3643dd['TRIANGLES'], 0x24, _0x3643dd['UNSIGNED_B' + 'YTE'], 0x0), _0x33d6e0['Stat']['trianglesF' + 'aces'] += 0xc, _0x33d6e0['Stat']['renderBatc' + 'hes']++;
        }
    }
    class _0x4ad4ff {
        constructor() {
            this['_mesh'] = _0x2958cd['instance'];
        }
        get ['material']() {
            return this['_material'];
        }
        set ['material'](_0x319d5d) {
            this['_material'] !== _0x319d5d && (this['_material'] && this['_material']['_removeRef' + 'erence'](), _0x319d5d && _0x319d5d['_addRefere' + 'nce'](), this['_material'] = _0x319d5d);
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x42dcc6) {
            this['_mesh'] !== _0x42dcc6 && (this['_mesh'] = _0x42dcc6);
        }
        ['_isAvailab' + 'le']() {
            return !(!this['_material'] || !this['_mesh']);
        }
        ['_render'](_0x53c303) {
            if (this['_material'] && this['_mesh']) {
                var _0x3120ee = _0x33d6e0['LayaGL']['instance'], _0x12d8d7 = _0x53c303['scene'], _0x269016 = _0x53c303['camera'], _0x585a33 = _0x4ac605['_SET_RUNTI' + 'ME_VALUE_M' + 'ODE_REFERE' + 'NCE_'];
                _0x33d6e0['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x4ac605['setRuntime' + 'ValueMode'](!0x1), _0x33d6e0['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x3120ee, !0x1), _0x33d6e0['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x3120ee, _0x3120ee['LEQUAL']), _0x33d6e0['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x3120ee, !0x1);
                var _0x49c346 = _0x4ad4ff['_compileDe' + 'fine'];
                this['_material']['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x49c346);
                var _0x4c8b80 = _0x53c303['shader'] = this['_material']['_shader']['getSubShad' + 'erAt'](0x0)['_passes'][0x0]['withCompil' + 'e'](_0x49c346), _0xe3b008 = _0x4c8b80['bind'](), _0x3b0dd4 = _0x33d6e0['Stat']['loopCount'] !== _0x4c8b80['_uploadMar' + 'k'], _0x388488 = _0x4c8b80['_uploadSce' + 'ne'] !== _0x12d8d7 || _0x3b0dd4;
                (_0x388488 || _0xe3b008) && (_0x4c8b80['uploadUnif' + 'orms'](_0x4c8b80['_sceneUnif' + 'ormParamsM' + 'ap'], _0x12d8d7['_shaderVal' + 'ues'], _0x388488), _0x4c8b80['_uploadSce' + 'ne'] = _0x12d8d7), _0x269016['_getRender' + 'Texture']();
                var _0x1c002f = _0x4c8b80['_uploadCam' + 'era'] !== _0x269016 || _0x3b0dd4;
                if (_0x1c002f || _0xe3b008) {
                    var _0x139ff8 = _0x4ad4ff['_tempMatri' + 'x0'], _0x1c3f1f = _0x4ad4ff['_tempMatri' + 'x1'];
                    _0x269016['viewMatrix']['cloneTo'](_0x139ff8), _0x269016['projection' + 'Matrix']['cloneTo'](_0x1c3f1f), _0x139ff8['setTransla' + 'tionVector'](_0x4795b3['_ZERO']), _0x269016['orthograph' + 'ic'] && _0x16c2be['createPers' + 'pective'](_0x269016['fieldOfVie' + 'w'], _0x269016['aspectRati' + 'o'], _0x269016['nearPlane'], _0x269016['farPlane'], _0x1c3f1f);
                    var _0x2975a7 = 0x1 / Math['tan'](3.1416 * _0x269016['fieldOfVie' + 'w'] / 0xb4 * 0.5);
                    _0x1c3f1f['elements'][0x0] = _0x2975a7 / _0x269016['aspectRati' + 'o'], _0x1c3f1f['elements'][0x5] = _0x2975a7, _0x1c3f1f['elements'][0xa] = 0.000001 - 0x1, _0x1c3f1f['elements'][0xb] = -0x1, _0x1c3f1f['elements'][0xe] = -0x0, _0x269016['_applyView' + 'Project'](_0x53c303, _0x139ff8, _0x1c3f1f), _0x4c8b80['uploadUnif' + 'orms'](_0x4c8b80['_cameraUni' + 'formParams' + 'Map'], _0x269016['_shaderVal' + 'ues'], _0x1c002f), _0x4c8b80['_uploadCam' + 'era'] = _0x269016;
                }
                var _0x503b3a = _0x4c8b80['_uploadMat' + 'erial'] !== this['_material'] || _0x3b0dd4;
                (_0x503b3a || _0xe3b008) && (_0x4c8b80['uploadUnif' + 'orms'](_0x4c8b80['_materialU' + 'niformPara' + 'msMap'], this['_material']['_shaderVal' + 'ues'], _0x503b3a), _0x4c8b80['_uploadMat' + 'erial'] = this['_material']), this['_mesh']['_bufferSta' + 'te']['bind'](), this['_mesh']['_render'](_0x53c303), _0x33d6e0['ILaya']['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x4ac605['setRuntime' + 'ValueMode'](_0x585a33), _0x33d6e0['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x3120ee, _0x3120ee['LESS']), _0x33d6e0['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x3120ee, !0x0), _0x269016['_applyView' + 'Project'](_0x53c303, _0x269016['viewMatrix'], _0x269016['projection' + 'Matrix']);
            }
        }
        ['destroy']() {
            this['_material'] && (this['_material']['_removeRef' + 'erence'](), this['_material'] = null);
        }
    }
    _0x4ad4ff['_tempMatri' + 'x0'] = new _0x16c2be(), _0x4ad4ff['_tempMatri' + 'x1'] = new _0x16c2be(), _0x4ad4ff['_compileDe' + 'fine'] = new _0x5f373b();
    class _0x293adb extends _0x2fcf9a {
        constructor(_0x47ce91 = 0.3, _0x117e46 = 0x3e8) {
            super(), this['_skyRender' + 'er'] = new _0x4ad4ff(), this['_forward'] = new _0x4795b3(), this['_up'] = new _0x4795b3(), this['clearColor'] = new _0x333f41(0x64 / 0xff, 0x95 / 0xff, 0xed / 0xff, 0x1), this['_shaderVal' + 'ues'] = new _0x4ac605(null), this['_fieldOfVi' + 'ew'] = 0x3c, this['_useUserPr' + 'ojectionMa' + 'trix'] = !0x1, this['_orthograp' + 'hic'] = !0x1, this['_orthograp' + 'hicVertica' + 'lSize'] = 0xa, this['renderingO' + 'rder'] = 0x0, this['_nearPlane'] = _0x47ce91, this['_farPlane'] = _0x117e46, this['cullingMas' + 'k'] = 0x7fffffff, this['useOcclusi' + 'onCulling'] = !0x0;
        }
        get ['skyRendere' + 'r']() {
            return this['_skyRender' + 'er'];
        }
        get ['fieldOfVie' + 'w']() {
            return this['_fieldOfVi' + 'ew'];
        }
        set ['fieldOfVie' + 'w'](_0x498bf9) {
            this['_fieldOfVi' + 'ew'] = _0x498bf9, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['nearPlane']() {
            return this['_nearPlane'];
        }
        set ['nearPlane'](_0x5d1865) {
            this['_nearPlane'] = _0x5d1865, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['farPlane']() {
            return this['_farPlane'];
        }
        set ['farPlane'](_0x2e1c59) {
            this['_farPlane'] = _0x2e1c59, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['orthograph' + 'ic']() {
            return this['_orthograp' + 'hic'];
        }
        set ['orthograph' + 'ic'](_0xaa5098) {
            this['_orthograp' + 'hic'] = _0xaa5098, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['orthograph' + 'icVertical' + 'Size']() {
            return this['_orthograp' + 'hicVertica' + 'lSize'];
        }
        set ['orthograph' + 'icVertical' + 'Size'](_0x57292a) {
            this['_orthograp' + 'hicVertica' + 'lSize'] = _0x57292a, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['renderingO' + 'rder']() {
            return this['_rendering' + 'Order'];
        }
        set ['renderingO' + 'rder'](_0x298ab2) {
            this['_rendering' + 'Order'] = _0x298ab2, this['_sortCamer' + 'asByRender' + 'ingOrder']();
        }
        ['_sortCamer' + 'asByRender' + 'ingOrder']() {
            if (this['displayedI' + 'nStage']) {
                for (var _0x55ada4 = this['scene']['_cameraPoo' + 'l'], _0xac69bc = _0x55ada4['length'] - 0x1, _0x47f2ce = 0x0; _0x47f2ce < _0xac69bc; _0x47f2ce++)
                    if (_0x55ada4[_0x47f2ce]['renderingO' + 'rder'] > _0x55ada4[_0xac69bc]['renderingO' + 'rder']) {
                        var _0x4dbb85 = _0x55ada4[_0x47f2ce];
                        _0x55ada4[_0x47f2ce] = _0x55ada4[_0xac69bc], _0x55ada4[_0xac69bc] = _0x4dbb85;
                    }
            }
        }
        ['_calculate' + 'Projection' + 'Matrix']() {
        }
        ['_onScreenS' + 'izeChanged']() {
            this['_calculate' + 'Projection' + 'Matrix']();
        }
        ['_prepareCa' + 'meraToRend' + 'er']() {
            var _0x55b493 = this['_shaderVal' + 'ues'];
            this['transform']['getForward'](this['_forward']), this['transform']['getUp'](this['_up']), _0x55b493['setVector3'](_0x293adb['CAMERAPOS'], this['transform']['position']), _0x55b493['setVector3'](_0x293adb['CAMERADIRE' + 'CTION'], this['_forward']), _0x55b493['setVector3'](_0x293adb['CAMERAUP'], this['_up']);
        }
        ['render'](_0x401338 = null, _0x21da2e = null) {
        }
        ['addLayer'](_0x2fc67d) {
            this['cullingMas' + 'k'] |= Math['pow'](0x2, _0x2fc67d);
        }
        ['removeLaye' + 'r'](_0x4a2517) {
            this['cullingMas' + 'k'] &= ~Math['pow'](0x2, _0x4a2517);
        }
        ['addAllLaye' + 'rs']() {
            this['cullingMas' + 'k'] = 0x7fffffff;
        }
        ['removeAllL' + 'ayers']() {
            this['cullingMas' + 'k'] = 0x0;
        }
        ['resetProje' + 'ctionMatri' + 'x']() {
            this['_useUserPr' + 'ojectionMa' + 'trix'] = !0x1, this['_calculate' + 'Projection' + 'Matrix']();
        }
        ['_onActive']() {
            this['_scene']['_addCamera'](this), super['_onActive']();
        }
        ['_onInActiv' + 'e']() {
            this['_scene']['_removeCam' + 'era'](this), super['_onInActiv' + 'e']();
        }
        ['_parse'](_0x532735, _0x58bbc8) {
            super['_parse'](_0x532735, _0x58bbc8), this['orthograph' + 'ic'] = _0x532735['orthograph' + 'ic'], void 0x0 !== _0x532735['orthograph' + 'icVertical' + 'Size'] && (this['orthograph' + 'icVertical' + 'Size'] = _0x532735['orthograph' + 'icVertical' + 'Size']), void 0x0 !== _0x532735['fieldOfVie' + 'w'] && (this['fieldOfVie' + 'w'] = _0x532735['fieldOfVie' + 'w']), this['nearPlane'] = _0x532735['nearPlane'], this['farPlane'] = _0x532735['farPlane'];
            var _0xdf2126 = _0x532735['clearColor'];
            this['clearColor'] = new _0x333f41(_0xdf2126[0x0], _0xdf2126[0x1], _0xdf2126[0x2], _0xdf2126[0x3]);
            var _0x103375 = _0x532735['skyboxMate' + 'rial'];
            _0x103375 && (this['_skyRender' + 'er']['material'] = _0x33d6e0['Loader']['getRes'](_0x103375['path']));
        }
        ['destroy'](_0x17283c = !0x0) {
            this['_skyRender' + 'er']['destroy'](), this['_skyRender' + 'er'] = null, _0x33d6e0['Laya']['stage']['off'](_0x33d6e0['Event']['RESIZE'], this, this['_onScreenS' + 'izeChanged']), super['destroy'](_0x17283c);
        }
        ['_create']() {
            return new _0x293adb();
        }
    }
    _0x293adb['_tempMatri' + 'x4x40'] = new _0x16c2be(), _0x293adb['CAMERAPOS'] = _0x1ede74['propertyNa' + 'meToID']('u_CameraPo' + 's'), _0x293adb['VIEWMATRIX'] = _0x1ede74['propertyNa' + 'meToID']('u_View'), _0x293adb['PROJECTMAT' + 'RIX'] = _0x1ede74['propertyNa' + 'meToID']('u_Projecti' + 'on'), _0x293adb['VIEWPROJEC' + 'TMATRIX'] = _0x1ede74['propertyNa' + 'meToID']('u_ViewProj' + 'ection'), _0x293adb['CAMERADIRE' + 'CTION'] = _0x1ede74['propertyNa' + 'meToID']('u_CameraDi' + 'rection'), _0x293adb['CAMERAUP'] = _0x1ede74['propertyNa' + 'meToID']('u_CameraUp'), _0x293adb['VIEWPORT'] = _0x1ede74['propertyNa' + 'meToID']('u_Viewport'), _0x293adb['PROJECTION' + '_PARAMS'] = _0x1ede74['propertyNa' + 'meToID']('u_Projecti' + 'onParams'), _0x293adb['RENDERINGT' + 'YPE_DEFERR' + 'EDLIGHTING'] = 'DEFERREDLI' + 'GHTING', _0x293adb['RENDERINGT' + 'YPE_FORWAR' + 'DRENDERING'] = 'FORWARDREN' + 'DERING', _0x293adb['_invertYSc' + 'aleMatrix'] = new _0x16c2be(0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), _0x293adb['_invertYPr' + 'ojectionMa' + 'trix'] = new _0x16c2be(), _0x293adb['_invertYPr' + 'ojectionVi' + 'ewMatrix'] = new _0x16c2be(), _0x293adb['CLEARFLAG_' + 'SOLIDCOLOR'] = 0x0, _0x293adb['CLEARFLAG_' + 'SKY'] = 0x1, _0x293adb['CLEARFLAG_' + 'DEPTHONLY'] = 0x2, _0x293adb['CLEARFLAG_' + 'NONE'] = 0x3;
    class _0x2e0ca7 extends _0x33d6e0['Resource'] {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x59c541(), this['_bufferSta' + 'teInvertUV'] = new _0x59c541();
            var _0x4a824a = _0x33d6e0['LayaGL']['instance'];
            this['_vertexBuf' + 'fer'] = new _0x5dfaba(0x40, _0x4a824a['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x2e0ca7['_vertexDec' + 'laration'], this['_vertexBuf' + 'fer']['setData'](_0x2e0ca7['_vertices']['buffer']), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind'](), this['_vertexBuf' + 'ferInvertU' + 'V'] = new _0x5dfaba(0x40, _0x4a824a['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'ferInvertU' + 'V']['vertexDecl' + 'aration'] = _0x2e0ca7['_vertexDec' + 'laration'], this['_vertexBuf' + 'ferInvertU' + 'V']['setData'](_0x2e0ca7['_verticesI' + 'nvertUV']['buffer']), this['_bufferSta' + 'teInvertUV']['bind'](), this['_bufferSta' + 'teInvertUV']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'ferInvertU' + 'V']), this['_bufferSta' + 'teInvertUV']['unBind'](), this['_setGPUMem' + 'ory'](this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_vertexBuf' + 'ferInvertU' + 'V']['_byteLengt' + 'h']);
        }
        static ['__init__']() {
            _0x2e0ca7['_vertexDec' + 'laration'] = new _0x3c5011(0x10, [new _0x5c79c8(0x0, _0x43e6c5['Vector4'], _0x2e0ca7['SCREENQUAD' + '_POSITION_' + 'UV'])]), _0x2e0ca7['instance'] = new _0x2e0ca7(), _0x2e0ca7['instance']['lock'] = !0x0;
        }
        ['render']() {
            var _0x3eb209 = _0x33d6e0['LayaGL']['instance'];
            this['_bufferSta' + 'te']['bind'](), _0x3eb209['drawArrays'](_0x3eb209['TRIANGLE_S' + 'TRIP'], 0x0, 0x4), _0x33d6e0['Stat']['renderBatc' + 'hes']++;
        }
        ['renderInve' + 'rtUV']() {
            var _0x7b7135 = _0x33d6e0['LayaGL']['instance'];
            this['_bufferSta' + 'teInvertUV']['bind'](), _0x7b7135['drawArrays'](_0x7b7135['TRIANGLE_S' + 'TRIP'], 0x0, 0x4), _0x33d6e0['Stat']['renderBatc' + 'hes']++;
        }
        ['destroy']() {
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'teInvertUV']['destroy'](), this['_vertexBuf' + 'ferInvertU' + 'V']['destroy'](), this['_setGPUMem' + 'ory'](0x0);
        }
    }
    _0x2e0ca7['SCREENQUAD' + '_POSITION_' + 'UV'] = 0x0, _0x2e0ca7['_vertices'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        -0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        -0x1,
        0x0,
        0x0
    ]), _0x2e0ca7['_verticesI' + 'nvertUV'] = new Float32Array([
        0x1,
        0x1,
        0x1,
        0x0,
        0x1,
        -0x1,
        0x1,
        0x1,
        -0x1,
        0x1,
        0x0,
        0x0,
        -0x1,
        -0x1,
        0x0,
        0x1
    ]);
    class _0x57264c extends _0x33d6e0['Resource'] {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x59c541(), this['_bufferSta' + 'teInvertUV'] = new _0x59c541();
            var _0x4713fc = _0x33d6e0['LayaGL']['instance'];
            this['_vertexBuf' + 'fer'] = new _0x5dfaba(0x30, _0x4713fc['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x57264c['_vertexDec' + 'laration'], this['_vertexBuf' + 'fer']['setData'](_0x57264c['_vertices']['buffer']), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind'](), this['_vertexBuf' + 'ferInvertU' + 'V'] = new _0x5dfaba(0x30, _0x4713fc['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'ferInvertU' + 'V']['vertexDecl' + 'aration'] = _0x57264c['_vertexDec' + 'laration'], this['_vertexBuf' + 'ferInvertU' + 'V']['setData'](_0x57264c['_verticesI' + 'nvertUV']['buffer']), this['_bufferSta' + 'teInvertUV']['bind'](), this['_bufferSta' + 'teInvertUV']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'ferInvertU' + 'V']), this['_bufferSta' + 'teInvertUV']['unBind'](), this['_setGPUMem' + 'ory'](this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_vertexBuf' + 'ferInvertU' + 'V']['_byteLengt' + 'h']);
        }
        static ['__init__']() {
            _0x57264c['_vertexDec' + 'laration'] = new _0x3c5011(0x10, [new _0x5c79c8(0x0, _0x43e6c5['Vector4'], _0x57264c['SCREENTRIA' + 'NGLE_POSIT' + 'ION_UV'])]), _0x57264c['instance'] = new _0x57264c(), _0x57264c['instance']['lock'] = !0x0;
        }
        ['render']() {
            var _0xe1986f = _0x33d6e0['LayaGL']['instance'];
            this['_bufferSta' + 'te']['bind'](), _0xe1986f['drawArrays'](_0xe1986f['TRIANGLES'], 0x0, 0x3), _0x33d6e0['Stat']['renderBatc' + 'hes']++;
        }
        ['renderInve' + 'rtUV']() {
            var _0x5cc050 = _0x33d6e0['LayaGL']['instance'];
            this['_bufferSta' + 'teInvertUV']['bind'](), _0x5cc050['drawArrays'](_0x5cc050['TRIANGLES'], 0x0, 0x3), _0x33d6e0['Stat']['renderBatc' + 'hes']++;
        }
        ['destroy']() {
            super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'teInvertUV']['destroy'](), this['_vertexBuf' + 'ferInvertU' + 'V']['destroy'](), this['_setGPUMem' + 'ory'](0x0);
        }
    }
    _0x57264c['SCREENTRIA' + 'NGLE_POSIT' + 'ION_UV'] = 0x0, _0x57264c['_vertices'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x0,
        -0x1,
        0x3,
        0x0,
        0x2,
        0x3,
        -0x1,
        0x2,
        0x0
    ]), _0x57264c['_verticesI' + 'nvertUV'] = new Float32Array([
        -0x1,
        -0x1,
        0x0,
        0x1,
        -0x1,
        0x3,
        0x0,
        -0x1,
        0x3,
        -0x1,
        0x2,
        0x1
    ]);
    class _0x5a65f6 {
        constructor() {
            this['_commandBu' + 'ffer'] = null;
        }
        static ['__init__']() {
            _0x5a65f6['_screenSha' + 'derData'] = new _0x4ac605(), _0x5a65f6['_screenSha' + 'der'] = _0x1ede74['find']('BlitScreen');
        }
        ['run']() {
        }
        ['recover']() {
            this['_commandBu' + 'ffer'] = null;
        }
    }
    _0x5a65f6['SCREENTEXT' + 'URE_NAME'] = 'u_MainTex', _0x5a65f6['SCREENTEXT' + 'UREOFFSETS' + 'CALE_NAME'] = 'u_OffsetSc' + 'ale', _0x5a65f6['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_NAME'] = 'u_MainTex_' + 'TexelSize', _0x5a65f6['SCREENTEXT' + 'URE_ID'] = _0x1ede74['propertyNa' + 'meToID'](_0x5a65f6['SCREENTEXT' + 'URE_NAME']), _0x5a65f6['SCREENTEXT' + 'UREOFFSETS' + 'CALE_ID'] = _0x1ede74['propertyNa' + 'meToID'](_0x5a65f6['SCREENTEXT' + 'UREOFFSETS' + 'CALE_NAME']), _0x5a65f6['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_ID'] = _0x1ede74['propertyNa' + 'meToID'](_0x5a65f6['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_NAME']);
    class _0x7e15dc extends _0x5a65f6 {
        constructor() {
            super(...arguments), this['_source'] = null, this['_dest'] = null, this['_offsetSca' + 'le'] = null, this['_shader'] = null, this['_shaderDat' + 'a'] = null, this['_subShader'] = 0x0, this['_sourceTex' + 'elSize'] = new _0x333f41(), this['_screenTyp' + 'e'] = 0x0;
        }
        static ['create'](_0x207b46, _0x2bce07, _0x367b9a = null, _0x49c8fb = null, _0x4f9408 = null, _0x25d986 = 0x0, _0x3f395c = _0x7e15dc['_SCREENTYP' + 'E_QUAD']) {
            var _0x24cbb3;
            return (_0x24cbb3 = _0x7e15dc['_pool']['length'] > 0x0 ? _0x7e15dc['_pool']['pop']() : new _0x7e15dc())['_source'] = _0x207b46, _0x24cbb3['_dest'] = _0x2bce07, _0x24cbb3['_offsetSca' + 'le'] = _0x367b9a, _0x24cbb3['_shader'] = _0x49c8fb, _0x24cbb3['_shaderDat' + 'a'] = _0x4f9408, _0x24cbb3['_subShader'] = _0x25d986, _0x24cbb3['_screenTyp' + 'e'] = _0x3f395c, _0x24cbb3;
        }
        ['run']() {
            var _0x8fe211 = this['_shader'] || _0x5a65f6['_screenSha' + 'der'], _0x1715be = this['_shaderDat' + 'a'] || _0x5a65f6['_screenSha' + 'derData'], _0x2dbdb8 = this['_dest'];
            _0x33d6e0['LayaGL']['instance']['viewport'](0x0, 0x0, _0x2dbdb8 ? _0x2dbdb8['width'] : _0x311bc2['clientWidt' + 'h'], _0x2dbdb8 ? _0x2dbdb8['height'] : _0x311bc2['clientHeig' + 'ht']), _0x1715be['setTexture'](_0x5a65f6['SCREENTEXT' + 'URE_ID'], this['_source']), _0x1715be['setVector'](_0x5a65f6['SCREENTEXT' + 'UREOFFSETS' + 'CALE_ID'], this['_offsetSca' + 'le'] || _0x7e15dc['_defaultOf' + 'fsetScale']), this['_sourceTex' + 'elSize']['setValue'](0x1 / this['_source']['width'], 0x1 / this['_source']['height'], this['_source']['width'], this['_source']['height']), _0x1715be['setVector'](_0x5a65f6['MAINTEXTUR' + 'E_TEXELSIZ' + 'E_ID'], this['_sourceTex' + 'elSize']), _0x2dbdb8 && _0x2dbdb8['_start']();
            for (var _0x170629 = _0x8fe211['getSubShad' + 'erAt'](this['_subShader'])['_passes'], _0x5ea0c1 = 0x0, _0x3acabe = _0x170629['length']; _0x5ea0c1 < _0x3acabe; _0x5ea0c1++) {
                var _0x335c19 = _0x7e15dc['_compileDe' + 'fine'];
                _0x1715be['_defineDat' + 'as']['cloneTo'](_0x335c19);
                var _0x505fc8 = _0x170629[_0x5ea0c1]['withCompil' + 'e'](_0x335c19);
                switch (_0x505fc8['bind'](), _0x505fc8['uploadUnif' + 'orms'](_0x505fc8['_materialU' + 'niformPara' + 'msMap'], _0x1715be, !0x0), _0x505fc8['uploadRend' + 'erStateBle' + 'ndDepth'](_0x1715be), _0x505fc8['uploadRend' + 'erStateFro' + 'ntFace'](_0x1715be, !0x1, null), this['_screenTyp' + 'e']) {
                case _0x7e15dc['_SCREENTYP' + 'E_QUAD']:
                    _0x311bc2['_instance']['invertY'] ? _0x2e0ca7['instance']['renderInve' + 'rtUV']() : _0x2e0ca7['instance']['render']();
                    break;
                case _0x7e15dc['_SCREENTYP' + 'E_TRIANGLE']:
                    _0x311bc2['_instance']['invertY'] ? _0x57264c['instance']['renderInve' + 'rtUV']() : _0x57264c['instance']['render']();
                    break;
                default:
                    throw 'BlitScreen' + 'QuadCMD:un' + 'known\x20scre' + 'en\x20Type.';
                }
            }
            _0x2dbdb8 && _0x2dbdb8['_end']();
        }
        ['recover']() {
            _0x7e15dc['_pool']['push'](this), this['_source'] = null, this['_dest'] = null, this['_offsetSca' + 'le'] = null, this['_shader'] = null, this['_shaderDat' + 'a'] = null, super['recover']();
        }
    }
    _0x7e15dc['_SCREENTYP' + 'E_QUAD'] = 0x0, _0x7e15dc['_SCREENTYP' + 'E_TRIANGLE'] = 0x1, _0x7e15dc['_compileDe' + 'fine'] = new _0x5f373b(), _0x7e15dc['_pool'] = [], _0x7e15dc['_defaultOf' + 'fsetScale'] = new _0x333f41(0x0, 0x0, 0x1, 0x1);
    class _0xf8a474 extends _0x5a65f6 {
        constructor() {
            super(...arguments), this['_renderTex' + 'ture'] = null;
        }
        static ['create'](_0x29bab2) {
            var _0x439f6e;
            return (_0x439f6e = _0xf8a474['_pool']['length'] > 0x0 ? _0xf8a474['_pool']['pop']() : new _0xf8a474())['_renderTex' + 'ture'] = _0x29bab2, _0x439f6e;
        }
        ['run']() {
            this['_renderTex' + 'ture']['_start']();
        }
        ['recover']() {
            _0xf8a474['_pool']['push'](this), this['_renderTex' + 'ture'] = null;
        }
    }
    _0xf8a474['_pool'] = [];
    class _0x22d674 extends _0x5a65f6 {
        constructor() {
            super(...arguments), this['_shaderDat' + 'a'] = null, this['_nameID'] = 0x0, this['_texture'] = null;
        }
        static ['create'](_0x1753ec, _0x5bf7b1, _0x42c97a) {
            var _0x8f5253;
            return (_0x8f5253 = _0x22d674['_pool']['length'] > 0x0 ? _0x22d674['_pool']['pop']() : new _0x22d674())['_shaderDat' + 'a'] = _0x1753ec, _0x8f5253['_nameID'] = _0x5bf7b1, _0x8f5253['_texture'] = _0x42c97a, _0x8f5253;
        }
        ['run']() {
            this['_shaderDat' + 'a']['setTexture'](this['_nameID'], this['_texture']);
        }
        ['recover']() {
            _0x22d674['_pool']['push'](this), this['_shaderDat' + 'a'] = null, this['_nameID'] = 0x0, this['_texture'] = null;
        }
    }
    _0x22d674['_pool'] = [];
    class _0x51e399 {
        constructor() {
            this['_camera'] = null, this['_commands'] = [];
        }
        ['_apply']() {
            for (var _0x2656f9 = 0x0, _0x4a996b = this['_commands']['length']; _0x2656f9 < _0x4a996b; _0x2656f9++)
                this['_commands'][_0x2656f9]['run']();
        }
        ['setShaderD' + 'ataTexture'](_0x31e652, _0x568e93, _0x34dfe1) {
            this['_commands']['push'](_0x22d674['create'](_0x31e652, _0x568e93, _0x34dfe1));
        }
        ['blitScreen' + 'Quad'](_0x5ba7af, _0xe985ed, _0x55843b = null, _0x2b689b = null, _0x4c5df8 = null, _0x14b220 = 0x0) {
            this['_commands']['push'](_0x7e15dc['create'](_0x5ba7af, _0xe985ed, _0x55843b, _0x2b689b, _0x4c5df8, _0x14b220, _0x7e15dc['_SCREENTYP' + 'E_QUAD']));
        }
        ['blitScreen' + 'Triangle'](_0x5c4581, _0x8f250f, _0x2f7d10 = null, _0x158bc6 = null, _0x92237a = null, _0x12b428 = 0x0) {
            this['_commands']['push'](_0x7e15dc['create'](_0x5c4581, _0x8f250f, _0x2f7d10, _0x158bc6, _0x92237a, _0x12b428, _0x7e15dc['_SCREENTYP' + 'E_TRIANGLE']));
        }
        ['setRenderT' + 'arget'](_0x5817ac) {
            this['_commands']['push'](_0xf8a474['create'](_0x5817ac));
        }
        ['clear']() {
            for (var _0x586d7b = 0x0, _0xbac5c2 = this['_commands']['length']; _0x586d7b < _0xbac5c2; _0x586d7b++)
                this['_commands'][_0x586d7b]['recover']();
            this['_commands']['length'] = 0x0;
        }
    }
    (_0x6f0b1 = _0x341b51['CameraClea' + 'rFlags'] || (_0x341b51['CameraClea' + 'rFlags'] = {}))[_0x6f0b1['SolidColor'] = 0x0] = 'SolidColor', _0x6f0b1[_0x6f0b1['Sky'] = 0x1] = 'Sky', _0x6f0b1[_0x6f0b1['DepthOnly'] = 0x2] = 'DepthOnly', _0x6f0b1[_0x6f0b1['Nothing'] = 0x3] = 'Nothing';
    class _0x4e1b1b extends _0x293adb {
        constructor(_0x439591 = 0x0, _0xf03580 = 0.3, _0x313814 = 0x3e8) {
            super(_0xf03580, _0x313814), this['_updateVie' + 'wMatrix'] = !0x0, this['_postProce' + 'ss'] = null, this['_enableHDR'] = !0x1, this['_viewportP' + 'arams'] = new _0x333f41(), this['_projectio' + 'nParams'] = new _0x333f41(), this['_offScreen' + 'RenderText' + 'ure'] = null, this['_internalR' + 'enderTextu' + 're'] = null, this['_postProce' + 'ssCommandB' + 'uffers'] = [], this['_clusterPl' + 'aneCacheFl' + 'ag'] = new _0x4c44b6(-0x1, -0x1), this['_screenOff' + 'setScale'] = new _0x333f41(), this['enableRend' + 'er'] = !0x0, this['clearFlag'] = _0x341b51['CameraClea' + 'rFlags']['SolidColor'], this['_viewMatri' + 'x'] = new _0x16c2be(), this['_projectio' + 'nMatrix'] = new _0x16c2be(), this['_projectio' + 'nViewMatri' + 'x'] = new _0x16c2be(), this['_viewport'] = new _0x3db26c(0x0, 0x0, 0x0, 0x0), this['_normalize' + 'dViewport'] = new _0x3db26c(0x0, 0x0, 0x1, 0x1), this['_aspectRat' + 'io'] = _0x439591, this['_boundFrus' + 'tum'] = new _0x5387d2(_0x16c2be['DEFAULT']), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (this['_boundFrus' + 'tumBuffer'] = new Float32Array(0x18)), this['_calculate' + 'Projection' + 'Matrix'](), _0x33d6e0['Laya']['stage']['on'](_0x33d6e0['Event']['RESIZE'], this, this['_onScreenS' + 'izeChanged']), this['transform']['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        get ['aspectRati' + 'o']() {
            if (0x0 === this['_aspectRat' + 'io']) {
                var _0x295888 = this['viewport'];
                return _0x295888['width'] / _0x295888['height'];
            }
            return this['_aspectRat' + 'io'];
        }
        set ['aspectRati' + 'o'](_0x8f7ab4) {
            if (_0x8f7ab4 < 0x0)
                throw new Error('Camera:\x20th' + 'e\x20aspect\x20r' + 'atio\x20has\x20t' + 'o\x20be\x20a\x20pos' + 'itive\x20real' + '\x20number.');
            this['_aspectRat' + 'io'] = _0x8f7ab4, this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['viewport']() {
            return this['_offScreen' + 'RenderText' + 'ure'] ? this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], this['_offScreen' + 'RenderText' + 'ure']['width'], this['_offScreen' + 'RenderText' + 'ure']['height']) : this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], _0x311bc2['clientWidt' + 'h'], _0x311bc2['clientHeig' + 'ht']), this['_viewport'];
        }
        set ['viewport'](_0x1ba413) {
            var _0xe4d414, _0x4d189d;
            this['_offScreen' + 'RenderText' + 'ure'] ? (_0xe4d414 = this['_offScreen' + 'RenderText' + 'ure']['width'], _0x4d189d = this['_offScreen' + 'RenderText' + 'ure']['height']) : (_0xe4d414 = _0x311bc2['clientWidt' + 'h'], _0x4d189d = _0x311bc2['clientHeig' + 'ht']), this['_normalize' + 'dViewport']['x'] = _0x1ba413['x'] / _0xe4d414, this['_normalize' + 'dViewport']['y'] = _0x1ba413['y'] / _0x4d189d, this['_normalize' + 'dViewport']['width'] = _0x1ba413['width'] / _0xe4d414, this['_normalize' + 'dViewport']['height'] = _0x1ba413['height'] / _0x4d189d, this['_calculati' + 'onViewport'](this['_normalize' + 'dViewport'], _0xe4d414, _0x4d189d), this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['normalized' + 'Viewport']() {
            return this['_normalize' + 'dViewport'];
        }
        set ['normalized' + 'Viewport'](_0x471e86) {
            var _0x5b9a5e, _0x531b0e;
            this['_offScreen' + 'RenderText' + 'ure'] ? (_0x5b9a5e = this['_offScreen' + 'RenderText' + 'ure']['width'], _0x531b0e = this['_offScreen' + 'RenderText' + 'ure']['height']) : (_0x5b9a5e = _0x311bc2['clientWidt' + 'h'], _0x531b0e = _0x311bc2['clientHeig' + 'ht']), this['_normalize' + 'dViewport'] !== _0x471e86 && _0x471e86['cloneTo'](this['_normalize' + 'dViewport']), this['_calculati' + 'onViewport'](_0x471e86, _0x5b9a5e, _0x531b0e), this['_calculate' + 'Projection' + 'Matrix']();
        }
        get ['viewMatrix']() {
            if (this['_updateVie' + 'wMatrix']) {
                var _0x140c3a = this['transform']['getWorldLo' + 'ssyScale'](), _0x40d650 = _0x140c3a['x'], _0x2ba7ee = _0x140c3a['y'], _0x47079e = _0x140c3a['z'], _0x214f50 = this['_viewMatri' + 'x']['elements'];
                this['transform']['worldMatri' + 'x']['cloneTo'](this['_viewMatri' + 'x']), _0x214f50[0x0] /= _0x40d650, _0x214f50[0x1] /= _0x40d650, _0x214f50[0x2] /= _0x40d650, _0x214f50[0x4] /= _0x2ba7ee, _0x214f50[0x5] /= _0x2ba7ee, _0x214f50[0x6] /= _0x2ba7ee, _0x214f50[0x8] /= _0x47079e, _0x214f50[0x9] /= _0x47079e, _0x214f50[0xa] /= _0x47079e, this['_viewMatri' + 'x']['invert'](this['_viewMatri' + 'x']), this['_updateVie' + 'wMatrix'] = !0x1;
            }
            return this['_viewMatri' + 'x'];
        }
        get ['projection' + 'Matrix']() {
            return this['_projectio' + 'nMatrix'];
        }
        set ['projection' + 'Matrix'](_0x2a87fb) {
            this['_projectio' + 'nMatrix'] = _0x2a87fb, this['_useUserPr' + 'ojectionMa' + 'trix'] = !0x0;
        }
        get ['projection' + 'ViewMatrix']() {
            return _0x16c2be['multiply'](this['projection' + 'Matrix'], this['viewMatrix'], this['_projectio' + 'nViewMatri' + 'x']), this['_projectio' + 'nViewMatri' + 'x'];
        }
        get ['boundFrust' + 'um']() {
            if (this['_boundFrus' + 'tum']['matrix'] = this['projection' + 'ViewMatrix'], _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x237b55 = this['_boundFrus' + 'tum']['near'], _0x34e104 = this['_boundFrus' + 'tum']['far'], _0x4470c3 = this['_boundFrus' + 'tum']['left'], _0x57be32 = this['_boundFrus' + 'tum']['right'], _0x57f30a = this['_boundFrus' + 'tum']['top'], _0x475790 = this['_boundFrus' + 'tum']['bottom'], _0x513239 = _0x237b55['normal'], _0x155107 = _0x34e104['normal'], _0x561afd = _0x4470c3['normal'], _0x28abfb = _0x57be32['normal'], _0x3aac1d = _0x57f30a['normal'], _0x32deda = _0x475790['normal'], _0xf84d16 = this['_boundFrus' + 'tumBuffer'];
                _0xf84d16[0x0] = _0x513239['x'], _0xf84d16[0x1] = _0x513239['y'], _0xf84d16[0x2] = _0x513239['z'], _0xf84d16[0x3] = _0x237b55['distance'], _0xf84d16[0x4] = _0x155107['x'], _0xf84d16[0x5] = _0x155107['y'], _0xf84d16[0x6] = _0x155107['z'], _0xf84d16[0x7] = _0x34e104['distance'], _0xf84d16[0x8] = _0x561afd['x'], _0xf84d16[0x9] = _0x561afd['y'], _0xf84d16[0xa] = _0x561afd['z'], _0xf84d16[0xb] = _0x4470c3['distance'], _0xf84d16[0xc] = _0x28abfb['x'], _0xf84d16[0xd] = _0x28abfb['y'], _0xf84d16[0xe] = _0x28abfb['z'], _0xf84d16[0xf] = _0x57be32['distance'], _0xf84d16[0x10] = _0x3aac1d['x'], _0xf84d16[0x11] = _0x3aac1d['y'], _0xf84d16[0x12] = _0x3aac1d['z'], _0xf84d16[0x13] = _0x57f30a['distance'], _0xf84d16[0x14] = _0x32deda['x'], _0xf84d16[0x15] = _0x32deda['y'], _0xf84d16[0x16] = _0x32deda['z'], _0xf84d16[0x17] = _0x475790['distance'];
            }
            return this['_boundFrus' + 'tum'];
        }
        get ['renderTarg' + 'et']() {
            return this['_offScreen' + 'RenderText' + 'ure'];
        }
        set ['renderTarg' + 'et'](_0x3e9026) {
            var _0x562809 = this['_offScreen' + 'RenderText' + 'ure'];
            _0x562809 !== _0x3e9026 && (_0x562809 && (_0x562809['_isCameraT' + 'arget'] = !0x1), _0x3e9026 && (_0x3e9026['_isCameraT' + 'arget'] = !0x0), this['_offScreen' + 'RenderText' + 'ure'] = _0x3e9026, this['_calculate' + 'Projection' + 'Matrix']());
        }
        get ['postProces' + 's']() {
            return this['_postProce' + 'ss'];
        }
        set ['postProces' + 's'](_0x45c8af) {
            this['_postProce' + 'ss'] = _0x45c8af;
            var _0x5b9853 = new _0x51e399();
            this['addCommand' + 'Buffer'](_0x4e1b1b['CAMERAEVEN' + 'T_POSTPROC' + 'ESS'], _0x5b9853), _0x45c8af['_init'](this, _0x5b9853);
        }
        get ['enableHDR']() {
            return this['_enableHDR'];
        }
        set ['enableHDR'](_0x1e8277) {
            !_0x1e8277 || _0x5773d8['supportRen' + 'derTexture' + 'Format'](_0x33d6e0['RenderText' + 'ureFormat']['R16G16B16A' + '16']) ? this['_enableHDR'] = _0x1e8277 : console['warn']('Camera:can' + '\x27t\x20enable\x20' + 'HDR\x20in\x20thi' + 's\x20device.');
        }
        ['_calculati' + 'onViewport'](_0x21090e, _0x20cf33, _0x395fe3) {
            var _0x33f599 = _0x21090e['x'] * _0x20cf33, _0x579289 = _0x21090e['y'] * _0x395fe3, _0x6da9e5 = _0x33f599 + Math['max'](_0x21090e['width'] * _0x20cf33, 0x0), _0x4c4f21 = _0x579289 + Math['max'](_0x21090e['height'] * _0x395fe3, 0x0), _0x5c5ef5 = Math['ceil'](_0x33f599), _0x4eba56 = Math['ceil'](_0x579289), _0x249855 = Math['floor'](_0x6da9e5), _0x356186 = Math['floor'](_0x4c4f21), _0x41aadd = _0x5c5ef5 - _0x33f599 >= 0.5 ? Math['floor'](_0x33f599) : _0x5c5ef5, _0x2ea527 = _0x4eba56 - _0x579289 >= 0.5 ? Math['floor'](_0x579289) : _0x4eba56, _0x7624fb = _0x6da9e5 - _0x249855 >= 0.5 ? Math['ceil'](_0x6da9e5) : _0x249855, _0xadcaa0 = _0x4c4f21 - _0x356186 >= 0.5 ? Math['ceil'](_0x4c4f21) : _0x356186;
            this['_viewport']['x'] = _0x41aadd, this['_viewport']['y'] = _0x2ea527, this['_viewport']['width'] = _0x7624fb - _0x41aadd, this['_viewport']['height'] = _0xadcaa0 - _0x2ea527;
        }
        ['_calculate' + 'Projection' + 'Matrix']() {
            if (!this['_useUserPr' + 'ojectionMa' + 'trix']) {
                if (this['_orthograp' + 'hic']) {
                    var _0x1246f1 = 0.5 * this['orthograph' + 'icVertical' + 'Size'], _0x1b51e4 = _0x1246f1 * this['aspectRati' + 'o'];
                    _0x16c2be['createOrth' + 'oOffCenter'](-_0x1b51e4, _0x1b51e4, -_0x1246f1, _0x1246f1, this['nearPlane'], this['farPlane'], this['_projectio' + 'nMatrix']);
                } else
                    _0x16c2be['createPers' + 'pective'](3.1416 * this['fieldOfVie' + 'w'] / 0xb4, this['aspectRati' + 'o'], this['nearPlane'], this['farPlane'], this['_projectio' + 'nMatrix']);
            }
        }
        ['_isLayerVi' + 'sible'](_0x3f9ed0) {
            return 0x0 != (Math['pow'](0x2, _0x3f9ed0) & this['cullingMas' + 'k']);
        }
        ['_onTransfo' + 'rmChanged'](_0x4e6e25) {
            (_0x4e6e25 &= _0x8f4324['TRANSFORM_' + 'WORLDMATRI' + 'X']) && (this['_updateVie' + 'wMatrix'] = !0x0);
        }
        ['_parse'](_0x127220, _0x39e8d8) {
            super['_parse'](_0x127220, _0x39e8d8);
            var _0x1a7b06 = _0x127220['clearFlag'];
            void 0x0 !== _0x1a7b06 && (this['clearFlag'] = _0x1a7b06);
            var _0x46150b = _0x127220['viewport'];
            this['normalized' + 'Viewport'] = new _0x3db26c(_0x46150b[0x0], _0x46150b[0x1], _0x46150b[0x2], _0x46150b[0x3]);
            var _0x3c6ef6 = _0x127220['enableHDR'];
            void 0x0 !== _0x3c6ef6 && (this['enableHDR'] = _0x3c6ef6);
        }
        ['_getCanvas' + 'Width']() {
            return this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure']['width'] : _0x311bc2['clientWidt' + 'h'];
        }
        ['_getCanvas' + 'Height']() {
            return this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure']['height'] : _0x311bc2['clientHeig' + 'ht'];
        }
        ['_getRender' + 'Texture']() {
            return this['_internalR' + 'enderTextu' + 're'] || this['_offScreen' + 'RenderText' + 'ure'];
        }
        ['_needInter' + 'nalRenderT' + 'exture']() {
            return !(!this['_postProce' + 'ss'] && !this['_enableHDR']);
        }
        ['_applyPost' + 'ProcessCom' + 'mandBuffer' + 's']() {
            for (var _0x34b7c7 = 0x0, _0x42aa62 = this['_postProce' + 'ssCommandB' + 'uffers']['length']; _0x34b7c7 < _0x42aa62; _0x34b7c7++)
                this['_postProce' + 'ssCommandB' + 'uffers'][_0x34b7c7]['_apply']();
        }
        ['_getRender' + 'TextureFor' + 'mat']() {
            return this['_enableHDR'] ? _0x33d6e0['RenderText' + 'ureFormat']['R16G16B16A' + '16'] : _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8'];
        }
        ['_prepareCa' + 'meraToRend' + 'er']() {
            super['_prepareCa' + 'meraToRend' + 'er']();
            var _0x1b8d15 = this['viewport'];
            this['_viewportP' + 'arams']['setValue'](_0x1b8d15['x'], _0x1b8d15['y'], _0x1b8d15['width'], _0x1b8d15['height']), this['_projectio' + 'nParams']['setValue'](this['_nearPlane'], this['_farPlane'], _0x311bc2['_instance']['invertY'] ? -0x1 : 0x1, 0x0), this['_shaderVal' + 'ues']['setVector'](_0x293adb['VIEWPORT'], this['_viewportP' + 'arams']), this['_shaderVal' + 'ues']['setVector'](_0x293adb['PROJECTION' + '_PARAMS'], this['_projectio' + 'nParams']);
        }
        ['_applyView' + 'Project'](_0x43bcef, _0x15df07, _0x1e1570) {
            var _0x28b5ee, _0x5f003e = this['_shaderVal' + 'ues'];
            _0x43bcef['invertY'] ? (_0x16c2be['multiply'](_0x293adb['_invertYSc' + 'aleMatrix'], _0x1e1570, _0x293adb['_invertYPr' + 'ojectionMa' + 'trix']), _0x16c2be['multiply'](_0x293adb['_invertYPr' + 'ojectionMa' + 'trix'], _0x15df07, _0x293adb['_invertYPr' + 'ojectionVi' + 'ewMatrix']), _0x1e1570 = _0x293adb['_invertYPr' + 'ojectionMa' + 'trix'], _0x28b5ee = _0x293adb['_invertYPr' + 'ojectionVi' + 'ewMatrix']) : (_0x16c2be['multiply'](_0x1e1570, _0x15df07, this['_projectio' + 'nViewMatri' + 'x']), _0x28b5ee = this['_projectio' + 'nViewMatri' + 'x']), _0x43bcef['viewMatrix'] = _0x15df07, _0x43bcef['projection' + 'Matrix'] = _0x1e1570, _0x43bcef['projection' + 'ViewMatrix'] = _0x28b5ee, _0x5f003e['setMatrix4' + 'x4'](_0x293adb['VIEWMATRIX'], _0x15df07), _0x5f003e['setMatrix4' + 'x4'](_0x293adb['PROJECTMAT' + 'RIX'], _0x1e1570), _0x5f003e['setMatrix4' + 'x4'](_0x293adb['VIEWPROJEC' + 'TMATRIX'], _0x28b5ee);
        }
        ['_updateClu' + 'sterPlaneX' + 'Y']() {
            var _0x2165d8 = this['fieldOfVie' + 'w'], _0x47a3dc = this['aspectRati' + 'o'];
            if (this['_clusterPl' + 'aneCacheFl' + 'ag']['x'] !== _0x2165d8 || this['_clusterPl' + 'aneCacheFl' + 'ag']['y'] !== _0x47a3dc) {
                var _0x5c5a56 = _0x237093['_config']['lightClust' + 'erCount'], _0x2f35bd = _0x5c5a56['x'], _0xa5d581 = _0x5c5a56['y'], _0x560a08 = _0x2f35bd + 0x1, _0xc199e1 = _0xa5d581 + 0x1, _0x3cd01e = this['_clusterXP' + 'lanes'], _0x33c235 = this['_clusterYP' + 'lanes'];
                if (!_0x3cd01e) {
                    _0x3cd01e = this['_clusterXP' + 'lanes'] = new Array(_0x560a08), _0x33c235 = this['_clusterYP' + 'lanes'] = new Array(_0xc199e1);
                    for (var _0xcef79b = 0x0; _0xcef79b < _0x560a08; _0xcef79b++)
                        _0x3cd01e[_0xcef79b] = new _0x4795b3();
                    for (_0xcef79b = 0x0; _0xcef79b < _0xc199e1; _0xcef79b++)
                        _0x33c235[_0xcef79b] = new _0x4795b3();
                }
                var _0x38acb7 = Math['tan'](this['fieldOfVie' + 'w'] / 0x2 * Math['PI'] / 0xb4), _0x392cf2 = this['aspectRati' + 'o'] * _0x38acb7, _0x2068e4 = 0x2 * _0x38acb7 / _0x2f35bd, _0x36162d = 0x2 * _0x392cf2 / _0xa5d581;
                for (_0xcef79b = 0x0; _0xcef79b < _0x560a08; _0xcef79b++) {
                    var _0x10453e = _0x36162d * _0xcef79b - _0x392cf2, _0x1ca5ca = 0x1 / Math['sqrt'](0x1 + _0x10453e * _0x10453e);
                    _0x3cd01e[_0xcef79b]['setValue'](_0x1ca5ca, 0x0, -_0x10453e * _0x1ca5ca);
                }
                for (_0xcef79b = 0x0; _0xcef79b < _0xc199e1; _0xcef79b++) {
                    _0x10453e = _0x38acb7 - _0x2068e4 * _0xcef79b;
                    var _0x2d107e = -0x1 / Math['sqrt'](0x1 + _0x10453e * _0x10453e);
                    _0x33c235[_0xcef79b]['setValue'](0x0, _0x2d107e, -_0x10453e * _0x2d107e);
                }
                this['_clusterPl' + 'aneCacheFl' + 'ag']['x'] = _0x2165d8, this['_clusterPl' + 'aneCacheFl' + 'ag']['y'] = _0x47a3dc;
            }
        }
        ['render'](_0xeea709 = null, _0x5ab57f = null) {
            if (this['activeInHi' + 'erarchy']) {
                var _0x29a368 = this['viewport'], _0xc98121 = this['_needInter' + 'nalRenderT' + 'exture'](), _0x2db4f7 = _0x33d6e0['LayaGL']['instance'], _0x570355 = _0x311bc2['_instance'], _0x302aae = _0x570355['scene'] = this['_scene'];
                if (this['_internalR' + 'enderTextu' + 're'] = _0xc98121 ? _0x3f7a1d['createFrom' + 'Pool'](_0x29a368['width'], _0x29a368['height'], this['_getRender' + 'TextureFor' + 'mat'](), _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16'], _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_BILINEAR']) : null, _0x302aae['parallelSp' + 'litShadowM' + 'aps'][0x0]) {
                    _0x4ac605['setRuntime' + 'ValueMode'](!0x1);
                    var _0x23f4f7 = _0x302aae['parallelSp' + 'litShadowM' + 'aps'][0x0];
                    _0x23f4f7['_calcAllLi' + 'ghtCameraI' + 'nfo'](this), _0x302aae['_shaderVal' + 'ues']['addDefine'](_0x311294['SHADERDEFI' + 'NE_CAST_SH' + 'ADOW']);
                    for (var _0x470c40 = 0x0, _0x193682 = _0x23f4f7['shadowMapC' + 'ount']; _0x470c40 < _0x193682; _0x470c40++) {
                        var _0xab2aaa = _0x23f4f7['cameras'][_0x470c40];
                        _0x570355['camera'] = _0xab2aaa, _0x2585ad['renderObje' + 'ctCulling'](_0xab2aaa, _0x302aae, _0x570355, _0xeea709, _0x5ab57f, !0x0);
                        var _0x53ae81 = _0x23f4f7['cameras'][_0x470c40 + 0x1]['renderTarg' + 'et'];
                        _0x53ae81['_start'](), _0x311bc2['_instance']['invertY'] = !0x1, _0x570355['camera'] = _0xab2aaa, _0x4e1b1b['_updateMar' + 'k']++, _0x570355['viewport'] = _0xab2aaa['viewport'], _0xab2aaa['_prepareCa' + 'meraToRend' + 'er'](), _0xab2aaa['_applyView' + 'Project'](_0x570355, _0xab2aaa['viewMatrix'], _0xab2aaa['projection' + 'Matrix']), _0x302aae['_clear'](_0x2db4f7, _0x570355), _0x302aae['_opaqueQue' + 'ue']['_render'](_0x570355), _0x53ae81['_end']();
                    }
                    _0x302aae['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_CAST_SH' + 'ADOW']), _0x4ac605['setRuntime' + 'ValueMode'](!0x0);
                }
                if (_0x570355['camera'] = this, _0x4e1b1b['_updateMar' + 'k']++, _0x302aae['_preRender' + 'Script'](), _0xc98121 && !this['_offScreen' + 'RenderText' + 'ure'] && (this['clearFlag'] == _0x341b51['CameraClea' + 'rFlags']['DepthOnly'] || this['clearFlag'] == _0x341b51['CameraClea' + 'rFlags']['Nothing'])) {
                    if (this['_enableHDR']) {
                        var _0x3b2239 = _0x3f7a1d['createFrom' + 'Pool'](_0x29a368['width'], _0x29a368['height'], _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8'], _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16'], _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_BILINEAR']);
                        _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2db4f7, _0x2db4f7['TEXTURE_2D'], _0x3b2239['_getSource']()), _0x2db4f7['copyTexSub' + 'Image2D'](_0x2db4f7['TEXTURE_2D'], 0x0, 0x0, 0x0, _0x29a368['x'], _0x311bc2['clientHeig' + 'ht'] - (_0x29a368['y'] + _0x29a368['height']), _0x29a368['width'], _0x29a368['height']), (_0x11de65 = _0x7e15dc['create'](_0x3b2239, this['_internalR' + 'enderTextu' + 're']))['run'](), _0x11de65['recover'](), _0x3f7a1d['recoverToP' + 'ool'](_0x3b2239);
                    } else
                        _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2db4f7, _0x2db4f7['TEXTURE_2D'], this['_internalR' + 'enderTextu' + 're']['_getSource']()), _0x2db4f7['copyTexSub' + 'Image2D'](_0x2db4f7['TEXTURE_2D'], 0x0, 0x0, 0x0, _0x29a368['x'], _0x311bc2['clientHeig' + 'ht'] - (_0x29a368['y'] + _0x29a368['height']), _0x29a368['width'], _0x29a368['height']);
                }
                var _0xf18185 = this['_getRender' + 'Texture']();
                if (_0xf18185 && _0xf18185['_start'](), _0x570355['viewport'] = _0x29a368, this['_prepareCa' + 'meraToRend' + 'er'](), _0x237093['_config']['_multiLigh' + 'ting'] && _0x43893d['instance']['update'](this, this['_scene']), this['_applyView' + 'Project'](_0x570355, this['viewMatrix'], this['_projectio' + 'nMatrix']), _0x302aae['_preCullin' + 'g'](_0x570355, this, _0xeea709, _0x5ab57f), _0x302aae['_clear'](_0x2db4f7, _0x570355), _0x302aae['_renderSce' + 'ne'](_0x570355), _0x302aae['_postRende' + 'rScript'](), _0xf18185 && _0xf18185['_end'](), _0xc98121) {
                    if (this['_postProce' + 'ss'])
                        this['_postProce' + 'ss']['_render'](), this['_applyPost' + 'ProcessCom' + 'mandBuffer' + 's']();
                    else {
                        if (this['_enableHDR']) {
                            var _0x11de65, _0x2bdd01 = this['_getCanvas' + 'Width'](), _0x35bc4a = this['_getCanvas' + 'Height']();
                            this['_screenOff' + 'setScale']['setValue'](_0x29a368['x'] / _0x2bdd01, _0x29a368['y'] / _0x35bc4a, _0x29a368['width'] / _0x2bdd01, _0x29a368['height'] / _0x35bc4a), (_0x11de65 = _0x7e15dc['create'](this['_internalR' + 'enderTextu' + 're'], this['_offScreen' + 'RenderText' + 'ure'] ? this['_offScreen' + 'RenderText' + 'ure'] : null, this['_screenOff' + 'setScale']))['run'](), _0x11de65['recover']();
                        }
                    }
                    _0x3f7a1d['recoverToP' + 'ool'](this['_internalR' + 'enderTextu' + 're']);
                }
            }
        }
        ['viewportPo' + 'intToRay'](_0x2545cd, _0x527daa) {
            _0x238ee3['calculateC' + 'ursorRay'](_0x2545cd, this['viewport'], this['_projectio' + 'nMatrix'], this['viewMatrix'], null, _0x527daa);
        }
        ['normalized' + 'ViewportPo' + 'intToRay'](_0x2dea09, _0x2e5e1d) {
            var _0x355a2b = _0x4e1b1b['_tempVecto' + 'r20'], _0x403c32 = this['viewport'];
            _0x355a2b['x'] = _0x2dea09['x'] * _0x403c32['width'], _0x355a2b['y'] = _0x2dea09['y'] * _0x403c32['height'], _0x238ee3['calculateC' + 'ursorRay'](_0x355a2b, this['viewport'], this['_projectio' + 'nMatrix'], this['viewMatrix'], null, _0x2e5e1d);
        }
        ['worldToVie' + 'wportPoint'](_0x1a251f, _0x1a7bfd) {
            _0x16c2be['multiply'](this['_projectio' + 'nMatrix'], this['_viewMatri' + 'x'], this['_projectio' + 'nViewMatri' + 'x']), this['viewport']['project'](_0x1a251f, this['_projectio' + 'nViewMatri' + 'x'], _0x1a7bfd), _0x1a7bfd['x'] = _0x1a7bfd['x'] / _0x33d6e0['Laya']['stage']['clientScal' + 'eX'], _0x1a7bfd['y'] = _0x1a7bfd['y'] / _0x33d6e0['Laya']['stage']['clientScal' + 'eY'];
        }
        ['worldToNor' + 'malizedVie' + 'wportPoint'](_0x3aac3f, _0x1a9f68) {
            _0x16c2be['multiply'](this['_projectio' + 'nMatrix'], this['_viewMatri' + 'x'], this['_projectio' + 'nViewMatri' + 'x']), this['normalized' + 'Viewport']['project'](_0x3aac3f, this['_projectio' + 'nViewMatri' + 'x'], _0x1a9f68), _0x1a9f68['x'] = _0x1a9f68['x'] / _0x33d6e0['Laya']['stage']['clientScal' + 'eX'], _0x1a9f68['y'] = _0x1a9f68['y'] / _0x33d6e0['Laya']['stage']['clientScal' + 'eY'];
        }
        ['convertScr' + 'eenCoordTo' + 'Orthograph' + 'icCoord'](_0x199e06, _0x392497) {
            if (this['_orthograp' + 'hic']) {
                var _0x4ac786 = _0x311bc2['clientWidt' + 'h'], _0x334282 = _0x311bc2['clientHeig' + 'ht'], _0x122922 = this['orthograph' + 'icVertical' + 'Size'] * this['aspectRati' + 'o'] / _0x4ac786, _0xbb1e8a = this['orthograph' + 'icVertical' + 'Size'] / _0x334282;
                return _0x392497['x'] = (-_0x4ac786 / 0x2 + _0x199e06['x'] * _0x33d6e0['Laya']['stage']['clientScal' + 'eX']) * _0x122922, _0x392497['y'] = (_0x334282 / 0x2 - _0x199e06['y'] * _0x33d6e0['Laya']['stage']['clientScal' + 'eY']) * _0xbb1e8a, _0x392497['z'] = (this['nearPlane'] - this['farPlane']) * (_0x199e06['z'] + 0x1) / 0x2 - this['nearPlane'], _0x4795b3['transformC' + 'oordinate'](_0x392497, this['transform']['worldMatri' + 'x'], _0x392497), !0x0;
            }
            return !0x1;
        }
        ['destroy'](_0x2378d5 = !0x0) {
            this['_offScreen' + 'RenderText' + 'ure'] = null, this['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']), super['destroy'](_0x2378d5);
        }
        ['addCommand' + 'Buffer'](_0x57aa90, _0x47d585) {
            switch (_0x57aa90) {
            case _0x4e1b1b['CAMERAEVEN' + 'T_POSTPROC' + 'ESS']:
                this['_postProce' + 'ssCommandB' + 'uffers']['push'](_0x47d585), _0x47d585['_camera'] = this;
                break;
            default:
                throw 'Camera:unk' + 'nown\x20event' + '.';
            }
        }
        ['removeComm' + 'andBuffer'](_0x26e3b9, _0x2600f1) {
            switch (_0x26e3b9) {
            case _0x4e1b1b['CAMERAEVEN' + 'T_POSTPROC' + 'ESS']:
                var _0x515287 = this['_postProce' + 'ssCommandB' + 'uffers']['indexOf'](_0x2600f1);
                -0x1 !== _0x515287 && this['_postProce' + 'ssCommandB' + 'uffers']['splice'](_0x515287, 0x1);
                break;
            default:
                throw 'Camera:unk' + 'nown\x20event' + '.';
            }
        }
        ['removeComm' + 'andBuffers'](_0x355f7a) {
            switch (_0x355f7a) {
            case _0x4e1b1b['CAMERAEVEN' + 'T_POSTPROC' + 'ESS']:
                this['_postProce' + 'ssCommandB' + 'uffers']['length'] = 0x0;
                break;
            default:
                throw 'Camera:unk' + 'nown\x20event' + '.';
            }
        }
        ['_create']() {
            return new _0x4e1b1b();
        }
    }
    _0x4e1b1b['CAMERAEVEN' + 'T_POSTPROC' + 'ESS'] = 0x0, _0x4e1b1b['_tempVecto' + 'r20'] = new _0x4c44b6(), _0x4e1b1b['_updateMar' + 'k'] = 0x0;
    class _0x14112a {
        constructor() {
            this['renderSubS' + 'hader'] = null, this['renderType'] = _0x14112a['RENDERTYPE' + '_NORMAL'];
        }
        ['getInvertF' + 'ront']() {
            return this['_transform']['_isFrontFa' + 'ceInvert'];
        }
        ['setTransfo' + 'rm'](_0xca31b0) {
            this['_transform'] = _0xca31b0;
        }
        ['setGeometr' + 'y'](_0x4d78ce) {
            this['_geometry'] = _0x4d78ce;
        }
        ['addToOpaqu' + 'eRenderQue' + 'ue'](_0x390e8e, _0x296b2d) {
            _0x296b2d['elements']['add'](this);
        }
        ['addToTrans' + 'parentRend' + 'erQueue'](_0x557588, _0x1074a5) {
            _0x1074a5['elements']['add'](this), _0x1074a5['lastTransp' + 'arentBatch' + 'ed'] = !0x1, _0x1074a5['lastTransp' + 'arentRende' + 'rElement'] = this;
        }
        ['_update'](_0x5d0eab, _0x58c077, _0x391a70, _0x174b9e) {
            if (this['material']) {
                var _0x1a52eb = this['material']['_shader']['getSubShad' + 'erAt'](0x0);
                if (this['renderSubS' + 'hader'] = null, _0x391a70) {
                    if (_0x174b9e) {
                        var _0x1f06ef = _0x1a52eb['getFlag'](_0x174b9e);
                        if (!_0x1f06ef)
                            return;
                        for (var _0x3ecb1b = _0x391a70['_subShader' + 's'], _0x49013a = 0x0, _0x1e4df4 = _0x3ecb1b['length']; _0x49013a < _0x1e4df4; _0x49013a++) {
                            var _0x2f8f3c = _0x3ecb1b[_0x49013a];
                            if (_0x1f06ef === _0x2f8f3c['getFlag'](_0x174b9e)) {
                                this['renderSubS' + 'hader'] = _0x2f8f3c;
                                break;
                            }
                        }
                        if (!this['renderSubS' + 'hader'])
                            return;
                    } else
                        this['renderSubS' + 'hader'] = _0x391a70['getSubShad' + 'erAt'](0x0);
                } else
                    this['renderSubS' + 'hader'] = _0x1a52eb;
                var _0x5de825 = _0x5d0eab['_getRender' + 'Queue'](this['material']['renderQueu' + 'e']);
                _0x5de825['isTranspar' + 'ent'] ? this['addToTrans' + 'parentRend' + 'erQueue'](_0x58c077, _0x5de825) : this['addToOpaqu' + 'eRenderQue' + 'ue'](_0x58c077, _0x5de825);
            }
        }
        ['_render'](_0x5c98df) {
            var _0x93f379, _0x252fea, _0x1d382a, _0x1a50b5 = _0x5c98df['invertY'], _0x572f86 = _0x4e1b1b['_updateMar' + 'k'], _0xc5caa6 = _0x5c98df['scene'], _0x3ad4bb = _0x5c98df['camera'], _0x2da437 = this['_transform'], _0x624cb1 = this['_geometry'];
            _0x5c98df['renderElem' + 'ent'] = this;
            var _0x55248c = _0x572f86 !== this['render']['_updateMar' + 'k'] || this['renderType'] !== this['render']['_updateRen' + 'derType'];
            if (_0x55248c ? (this['render']['_renderUpd' + 'ate'](_0x5c98df, _0x2da437), this['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x5c98df, _0x2da437), this['render']['_updateMar' + 'k'] = _0x572f86, this['render']['_updateRen' + 'derType'] = this['renderType']) : this['renderType'] == _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] && (this['render']['_renderUpd' + 'ate'](_0x5c98df, _0x2da437), this['render']['_renderUpd' + 'ateWithCam' + 'era'](_0x5c98df, _0x2da437)), _0x624cb1['_prepareRe' + 'nder'](_0x5c98df))
                for (var _0x372dde = this['renderSubS' + 'hader']['_passes'], _0x2bbf77 = 0x0, _0x32b845 = _0x372dde['length']; _0x2bbf77 < _0x32b845; _0x2bbf77++) {
                    var _0x428454 = _0x14112a['_compileDe' + 'fine'];
                    _0xc5caa6['_shaderVal' + 'ues']['_defineDat' + 'as']['cloneTo'](_0x428454), _0x428454['removeDefi' + 'neDatas'](this['material']['_disablePu' + 'blicDefine' + 'Datas']), _0x428454['addDefineD' + 'atas'](this['render']['_shaderVal' + 'ues']['_defineDat' + 'as']), _0x428454['addDefineD' + 'atas'](this['material']['_shaderVal' + 'ues']['_defineDat' + 'as']);
                    var _0x3d5e2e = _0x5c98df['shader'] = _0x372dde[_0x2bbf77]['withCompil' + 'e'](_0x428454), _0x389be0 = _0x3d5e2e['bind'](), _0x5a58de = _0x572f86 !== _0x3d5e2e['_uploadMar' + 'k'], _0x5c0385 = _0x3d5e2e['_uploadSce' + 'ne'] !== _0xc5caa6 || _0x5a58de;
                    (_0x5c0385 || _0x389be0) && (_0x3d5e2e['uploadUnif' + 'orms'](_0x3d5e2e['_sceneUnif' + 'ormParamsM' + 'ap'], _0xc5caa6['_shaderVal' + 'ues'], _0x5c0385), _0x3d5e2e['_uploadSce' + 'ne'] = _0xc5caa6);
                    var _0x123acf = _0x3d5e2e['_uploadRen' + 'der'] !== this['render'] || _0x3d5e2e['_uploadRen' + 'derType'] !== this['renderType'] || _0x5a58de;
                    (_0x123acf || _0x389be0) && (_0x3d5e2e['uploadUnif' + 'orms'](_0x3d5e2e['_spriteUni' + 'formParams' + 'Map'], this['render']['_shaderVal' + 'ues'], _0x123acf), _0x3d5e2e['_uploadRen' + 'der'] = this['render'], _0x3d5e2e['_uploadRen' + 'derType'] = this['renderType']);
                    var _0x27e96a = _0x3d5e2e['_uploadCam' + 'era'] !== _0x3ad4bb || _0x5a58de;
                    (_0x27e96a || _0x389be0) && (_0x3d5e2e['uploadUnif' + 'orms'](_0x3d5e2e['_cameraUni' + 'formParams' + 'Map'], _0x3ad4bb['_shaderVal' + 'ues'], _0x27e96a), _0x3d5e2e['_uploadCam' + 'era'] = _0x3ad4bb);
                    var _0x45ee1f = _0x3d5e2e['_uploadMat' + 'erial'] !== this['material'] || _0x5a58de;
                    (_0x45ee1f || _0x389be0) && (_0x3d5e2e['uploadUnif' + 'orms'](_0x3d5e2e['_materialU' + 'niformPara' + 'msMap'], this['material']['_shaderVal' + 'ues'], _0x45ee1f), _0x3d5e2e['_uploadMat' + 'erial'] = this['material']);
                    var _0x180758 = this['material']['_shaderVal' + 'ues'];
                    _0x93f379 !== this['material'] || _0x252fea !== _0x3d5e2e ? (_0x3d5e2e['uploadRend' + 'erStateBle' + 'ndDepth'](_0x180758), _0x3d5e2e['uploadRend' + 'erStateFro' + 'ntFace'](_0x180758, _0x1a50b5, this['getInvertF' + 'ront']()), _0x93f379 = this['material'], _0x252fea = _0x3d5e2e, _0x1d382a = this['render']) : _0x1d382a !== this['render'] && (_0x3d5e2e['uploadRend' + 'erStateFro' + 'ntFace'](_0x180758, _0x1a50b5, this['getInvertF' + 'ront']()), _0x1d382a = this['render']), _0x624cb1['_render'](_0x5c98df), _0x3d5e2e['_uploadMar' + 'k'] = _0x572f86;
                }
            _0x55248c && this['renderType'] !== _0x14112a['RENDERTYPE' + '_NORMAL'] && this['render']['_revertBat' + 'chRenderUp' + 'date'](_0x5c98df);
        }
        ['destroy']() {
            this['_transform'] = null, this['_geometry'] = null, this['material'] = null, this['render'] = null;
        }
    }
    _0x14112a['RENDERTYPE' + '_NORMAL'] = 0x0, _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH'] = 0x1, _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH'] = 0x2, _0x14112a['RENDERTYPE' + '_VERTEXBAT' + 'CH'] = 0x3, _0x14112a['_compileDe' + 'fine'] = new _0x5f373b();
    class _0x1cdd46 extends _0x14112a {
        constructor() {
            super(), this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x0;
        }
        ['_onWorldMa' + 'trixChange' + 'd']() {
            this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x0;
        }
        ['_computeWo' + 'rldPositio' + 'nsAndNorma' + 'ls'](_0x45f581, _0x201150, _0x319ac7, _0x109937) {
            if (this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate']) {
                for (var _0xcf5f91 = this['_geometry'], _0x5081b0 = _0xcf5f91['_vertexBuf' + 'fer'], _0x16bbea = _0x5081b0['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x1b7a62 = _0x5081b0['getFloat32' + 'Data'](), _0x130881 = this['_transform']['worldMatri' + 'x'], _0x25a734 = this['_transform']['rotation'], _0x326fe8 = _0xcf5f91['_indices'], _0x375874 = 0x0; _0x375874 < _0x109937; _0x375874++) {
                    var _0x17134a = (_0x319ac7 ? _0x326fe8[_0x375874] : _0x375874) * _0x16bbea, _0x58b4ec = 0x3 * _0x375874;
                    _0x89f66e['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x1b7a62, _0x17134a + _0x45f581, _0x130881, this['_dynamicWo' + 'rldPositio' + 'ns'], _0x58b4ec), -0x1 !== _0x201150 && _0x89f66e['transformV' + 'ector3Arra' + 'yByQuat'](_0x1b7a62, _0x17134a + _0x201150, _0x25a734, this['_dynamicWo' + 'rldNormals'], _0x58b4ec);
                }
                this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x1;
            }
        }
        ['setTransfo' + 'rm'](_0x1948f2) {
            this['_transform'] !== _0x1948f2 && (this['_transform'] && this['_transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'trixChange' + 'd']), _0x1948f2 && _0x1948f2['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'trixChange' + 'd']), this['_dynamicWo' + 'rldPositio' + 'nNormalNee' + 'dUpdate'] = !0x0, this['_transform'] = _0x1948f2);
        }
        ['setGeometr' + 'y'](_0x198dc9) {
            if (this['_geometry'] !== _0x198dc9) {
                var _0x1e2c1c = _0x198dc9, _0x10c782 = _0x1e2c1c['_mesh'];
                if (_0x10c782) {
                    var _0x56978c = _0x10c782['_subMeshes']['length'] > 0x1, _0x2036dd = _0x56978c ? _0x1e2c1c['_indexCoun' + 't'] : _0x10c782['_vertexCou' + 'nt'];
                    if (_0x2036dd <= _0x334864['SubMeshDyn' + 'amicBatch']['maxAllowVe' + 'rtexCount']) {
                        var _0x5df53c = 0x3 * _0x2036dd;
                        this['_dynamicVe' + 'rtexBatch'] = !0x0, this['_dynamicWo' + 'rldPositio' + 'ns'] = new Float32Array(_0x5df53c), this['_dynamicWo' + 'rldNormals'] = new Float32Array(_0x5df53c), this['_dynamicVe' + 'rtexCount'] = _0x2036dd, this['_dynamicMu' + 'ltiSubMesh'] = _0x56978c;
                    } else
                        this['_dynamicVe' + 'rtexBatch'] = !0x1;
                }
                this['_geometry'] = _0x198dc9;
            }
        }
        ['addToOpaqu' + 'eRenderQue' + 'ue'](_0x482999, _0x472f4d) {
            var _0x3c92e8 = this['staticBatc' + 'h'], _0xe92798 = _0x472f4d['elements'], _0x104969 = _0xe92798['elements'];
            if (_0x3c92e8) {
                var _0x448cb5 = _0x334864['MeshRender' + 'StaticBatc' + 'hManager']['instance'], _0x238443 = _0x448cb5['getBatchOp' + 'aquaMark'](this['render']['lightmapIn' + 'dex'] + 0x1, this['render']['receiveSha' + 'dow'], this['material']['id'], _0x3c92e8['_batchID']);
                if (_0x448cb5['_updateCou' + 'ntMark'] === _0x238443['updateMark']) {
                    var _0x54ee84 = _0x238443['indexInLis' + 't'];
                    if (_0x238443['batched'])
                        _0x104969[_0x54ee84]['staticBatc' + 'hElementLi' + 'st']['add'](this);
                    else {
                        var _0x3b3121 = _0x104969[_0x54ee84], _0x31dd36 = _0x3b3121['render'], _0x4cff1e = _0x448cb5['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                        _0x4cff1e['renderType'] = _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH'], _0x4cff1e['setGeometr' + 'y'](_0x3c92e8), _0x4cff1e['material'] = _0x3b3121['material'];
                        var _0x1337e2 = _0x3c92e8['batchOwner'], _0x200fc7 = _0x1337e2 ? _0x1337e2['_transform'] : null;
                        _0x4cff1e['setTransfo' + 'rm'](_0x200fc7), _0x4cff1e['render'] = _0x31dd36, _0x4cff1e['renderSubS' + 'hader'] = _0x3b3121['renderSubS' + 'hader'];
                        var _0x2e8688 = _0x4cff1e['staticBatc' + 'hElementLi' + 'st'];
                        _0x2e8688['length'] = 0x0, _0x2e8688['add'](_0x3b3121), _0x2e8688['add'](this), _0x104969[_0x54ee84] = _0x4cff1e, _0x238443['batched'] = !0x0;
                    }
                } else
                    _0x238443['updateMark'] = _0x448cb5['_updateCou' + 'ntMark'], _0x238443['indexInLis' + 't'] = _0xe92798['length'], _0x238443['batched'] = !0x1, _0xe92798['add'](this);
            } else {
                if (this['renderSubS' + 'hader']['_owner']['_enableIns' + 'tancing'] && _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']() && this['render']['lightmapIn' + 'dex'] < 0x0) {
                    var _0x181c3c = this['_geometry'], _0x472cfe = _0x334864['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x1cc517 = _0x472cfe['getInstanc' + 'eBatchOpaq' + 'uaMark'](this['render']['receiveSha' + 'dow'], this['material']['id'], _0x181c3c['_id'], this['_transform']['_isFrontFa' + 'ceInvert']);
                    if (_0x472cfe['_updateCou' + 'ntMark'] === _0x1cc517['updateMark']) {
                        var _0x2c4547 = _0x1cc517['indexInLis' + 't'];
                        if (_0x1cc517['batched']) {
                            var _0x468c45 = _0x104969[_0x2c4547]['instanceBa' + 'tchElement' + 'List'];
                            _0x468c45['length'] === _0x1b47c9['instance']['maxInstanc' + 'eCount'] ? (_0x1cc517['updateMark'] = _0x472cfe['_updateCou' + 'ntMark'], _0x1cc517['indexInLis' + 't'] = _0xe92798['length'], _0x1cc517['batched'] = !0x1, _0xe92798['add'](this)) : _0x468c45['add'](this);
                        } else {
                            var _0x15ac11 = _0x104969[_0x2c4547], _0x4f6f29 = _0x15ac11['render'], _0x10f644 = _0x472cfe['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                            _0x10f644['renderType'] = _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH'], _0x10f644['setGeometr' + 'y'](_0x1b47c9['instance']), _0x10f644['material'] = _0x15ac11['material'], _0x10f644['setTransfo' + 'rm'](null), _0x10f644['render'] = _0x4f6f29, _0x10f644['instanceSu' + 'bMesh'] = _0x181c3c, _0x10f644['renderSubS' + 'hader'] = _0x15ac11['renderSubS' + 'hader'];
                            var _0x456ea2 = _0x10f644['instanceBa' + 'tchElement' + 'List'];
                            _0x456ea2['length'] = 0x0, _0x456ea2['add'](_0x15ac11), _0x456ea2['add'](this), _0x104969[_0x2c4547] = _0x10f644, _0x1cc517['batched'] = !0x0;
                        }
                    } else
                        _0x1cc517['updateMark'] = _0x472cfe['_updateCou' + 'ntMark'], _0x1cc517['indexInLis' + 't'] = _0xe92798['length'], _0x1cc517['batched'] = !0x1, _0xe92798['add'](this);
                } else {
                    if (this['_dynamicVe' + 'rtexBatch']) {
                        var _0x59008d = this['_geometry']['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x3e6b35 = _0x334864['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x4b358b = _0x3e6b35['getVertexB' + 'atchOpaqua' + 'Mark'](this['render']['lightmapIn' + 'dex'] + 0x1, this['render']['receiveSha' + 'dow'], this['material']['id'], _0x59008d['id']);
                        if (_0x3e6b35['_updateCou' + 'ntMark'] === _0x4b358b['updateMark']) {
                            var _0x2ee197 = _0x4b358b['indexInLis' + 't'];
                            if (_0x4b358b['batched'])
                                _0x104969[_0x2ee197]['vertexBatc' + 'hElementLi' + 'st']['add'](this);
                            else {
                                var _0x2250a7 = _0x104969[_0x2ee197], _0x2c9738 = _0x2250a7['render'], _0x2f4836 = _0x3e6b35['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                _0x2f4836['renderType'] = _0x14112a['RENDERTYPE' + '_VERTEXBAT' + 'CH'], _0x2f4836['setGeometr' + 'y'](_0x334864['SubMeshDyn' + 'amicBatch']['instance']), _0x2f4836['material'] = _0x2250a7['material'], _0x2f4836['setTransfo' + 'rm'](null), _0x2f4836['render'] = _0x2c9738, _0x2f4836['vertexBatc' + 'hVertexDec' + 'laration'] = _0x59008d, _0x2f4836['renderSubS' + 'hader'] = _0x2250a7['renderSubS' + 'hader'];
                                var _0x2f4fcb = _0x2f4836['vertexBatc' + 'hElementLi' + 'st'];
                                _0x2f4fcb['length'] = 0x0, _0x2f4fcb['add'](_0x2250a7), _0x2f4fcb['add'](this), _0x104969[_0x2ee197] = _0x2f4836, _0x4b358b['batched'] = !0x0;
                            }
                        } else
                            _0x4b358b['updateMark'] = _0x3e6b35['_updateCou' + 'ntMark'], _0x4b358b['indexInLis' + 't'] = _0xe92798['length'], _0x4b358b['batched'] = !0x1, _0xe92798['add'](this);
                    } else
                        _0xe92798['add'](this);
                }
            }
        }
        ['addToTrans' + 'parentRend' + 'erQueue'](_0x9a8a36, _0x15e03b) {
            var _0x2e1b7f = this['staticBatc' + 'h'], _0x485082 = _0x15e03b['elements'], _0x6e107f = _0x485082['elements'];
            if (_0x2e1b7f) {
                var _0x5ea899 = _0x334864['MeshRender' + 'StaticBatc' + 'hManager']['instance'], _0x502bd7 = _0x15e03b['lastTransp' + 'arentRende' + 'rElement'];
                if (_0x502bd7) {
                    var _0x3f3f71 = _0x502bd7['render'];
                    if (_0x502bd7['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x502bd7['staticBatc' + 'h'] !== _0x2e1b7f || _0x502bd7['material'] !== this['material'] || _0x3f3f71['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'] || _0x3f3f71['lightmapIn' + 'dex'] !== this['render']['lightmapIn' + 'dex'])
                        _0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                    else {
                        if (_0x15e03b['lastTransp' + 'arentBatch' + 'ed'])
                            _0x6e107f[_0x485082['length'] - 0x1]['staticBatc' + 'hElementLi' + 'st']['add'](this);
                        else {
                            var _0x215a3e = _0x5ea899['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                            _0x215a3e['renderType'] = _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH'], _0x215a3e['setGeometr' + 'y'](_0x2e1b7f), _0x215a3e['material'] = _0x502bd7['material'];
                            var _0x1abe88 = _0x2e1b7f['batchOwner'], _0x598dac = _0x1abe88 ? _0x1abe88['_transform'] : null;
                            _0x215a3e['setTransfo' + 'rm'](_0x598dac), _0x215a3e['render'] = this['render'], _0x215a3e['renderSubS' + 'hader'] = _0x502bd7['renderSubS' + 'hader'];
                            var _0xd9676b = _0x215a3e['staticBatc' + 'hElementLi' + 'st'];
                            _0xd9676b['length'] = 0x0, _0xd9676b['add'](_0x502bd7), _0xd9676b['add'](this), _0x6e107f[_0x485082['length'] - 0x1] = _0x215a3e;
                        }
                        _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x0;
                    }
                } else
                    _0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
            } else {
                if (this['renderSubS' + 'hader']['_owner']['_enableIns' + 'tancing'] && _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['supportIns' + 'tance']() && this['render']['lightmapIn' + 'dex'] < 0x0) {
                    var _0x11049e = this['_geometry'], _0x37dd66 = _0x334864['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x15ba0a = _0x15e03b['lastTransp' + 'arentRende' + 'rElement'];
                    if (_0x15ba0a) {
                        var _0x854311 = _0x15ba0a['render'];
                        if (_0x15ba0a['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x15ba0a['_geometry'] !== _0x11049e || _0x15ba0a['material'] !== this['material'] || _0x854311['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'])
                            _0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                        else {
                            if (_0x15e03b['lastTransp' + 'arentBatch' + 'ed']) {
                                var _0x31675a = _0x6e107f[_0x485082['length'] - 0x1]['instanceBa' + 'tchElement' + 'List'];
                                _0x31675a['length'] === _0x1b47c9['instance']['maxInstanc' + 'eCount'] ? (_0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1) : (_0x31675a['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x0);
                            } else {
                                var _0xa1e6d9 = _0x37dd66['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                _0xa1e6d9['renderType'] = _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH'], _0xa1e6d9['setGeometr' + 'y'](_0x1b47c9['instance']), _0xa1e6d9['material'] = _0x15ba0a['material'], _0xa1e6d9['setTransfo' + 'rm'](null), _0xa1e6d9['render'] = this['render'], _0xa1e6d9['instanceSu' + 'bMesh'] = _0x11049e, _0xa1e6d9['renderSubS' + 'hader'] = _0x15ba0a['renderSubS' + 'hader'];
                                var _0x33f3ec = _0xa1e6d9['instanceBa' + 'tchElement' + 'List'];
                                _0x33f3ec['length'] = 0x0, _0x33f3ec['add'](_0x15ba0a), _0x33f3ec['add'](this), _0x6e107f[_0x485082['length'] - 0x1] = _0xa1e6d9, _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x0;
                            }
                        }
                    } else
                        _0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                } else {
                    if (this['_dynamicVe' + 'rtexBatch']) {
                        var _0x536108 = this['_geometry']['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x58670c = _0x334864['MeshRender' + 'DynamicBat' + 'chManager']['instance'], _0x3ad71c = _0x15e03b['lastTransp' + 'arentRende' + 'rElement'];
                        if (_0x3ad71c) {
                            var _0x329e0f = _0x3ad71c['render'];
                            if (_0x3ad71c['_geometry']['_getType']() !== this['_geometry']['_getType']() || _0x3ad71c['_geometry']['_vertexBuf' + 'fer']['_vertexDec' + 'laration'] !== _0x536108 || _0x3ad71c['material'] !== this['material'] || _0x329e0f['receiveSha' + 'dow'] !== this['render']['receiveSha' + 'dow'] || _0x329e0f['lightmapIn' + 'dex'] !== this['render']['lightmapIn' + 'dex'])
                                _0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                            else {
                                if (_0x15e03b['lastTransp' + 'arentBatch' + 'ed'])
                                    _0x6e107f[_0x485082['length'] - 0x1]['vertexBatc' + 'hElementLi' + 'st']['add'](this);
                                else {
                                    var _0x1385f3 = _0x58670c['_getBatchR' + 'enderEleme' + 'ntFromPool']();
                                    _0x1385f3['renderType'] = _0x14112a['RENDERTYPE' + '_VERTEXBAT' + 'CH'], _0x1385f3['setGeometr' + 'y'](_0x334864['SubMeshDyn' + 'amicBatch']['instance']), _0x1385f3['material'] = _0x3ad71c['material'], _0x1385f3['setTransfo' + 'rm'](null), _0x1385f3['render'] = this['render'], _0x1385f3['vertexBatc' + 'hVertexDec' + 'laration'] = _0x536108, _0x1385f3['renderSubS' + 'hader'] = _0x3ad71c['renderSubS' + 'hader'];
                                    var _0x289cc1 = _0x1385f3['vertexBatc' + 'hElementLi' + 'st'];
                                    _0x289cc1['length'] = 0x0, _0x289cc1['add'](_0x3ad71c), _0x289cc1['add'](this), _0x6e107f[_0x485082['length'] - 0x1] = _0x1385f3;
                                }
                                _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x0;
                            }
                        } else
                            _0x485082['add'](this), _0x15e03b['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
                    } else
                        _0x485082['add'](this);
                }
            }
            _0x15e03b['lastTransp' + 'arentRende' + 'rElement'] = this;
        }
        ['getInvertF' + 'ront']() {
            switch (this['renderType']) {
            case _0x14112a['RENDERTYPE' + '_NORMAL']:
                return this['_transform']['_isFrontFa' + 'ceInvert'];
            case _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH']:
            case _0x14112a['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                return !0x1;
            case _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                return this['instanceBa' + 'tchElement' + 'List']['elements'][0x0]['_transform']['_isFrontFa' + 'ceInvert'];
            default:
                throw 'SubMeshRen' + 'derElement' + ':\x20unknown\x20' + 'renderType';
            }
        }
        ['destroy']() {
            super['destroy'](), this['_dynamicWo' + 'rldPositio' + 'ns'] = null, this['_dynamicWo' + 'rldNormals'] = null, this['staticBatc' + 'h'] = null, this['staticBatc' + 'hElementLi' + 'st'] = null, this['vertexBatc' + 'hElementLi' + 'st'] = null, this['vertexBatc' + 'hVertexDec' + 'laration'] = null;
        }
    }
    class _0x2388d0 extends _0x42e697 {
        constructor(_0x2ef0db, _0x594975) {
            super(), this['_bufferSta' + 'te'] = new _0x59c541(), this['_batchID'] = _0x2388d0['_batchIDCo' + 'unter']++, this['_batchElem' + 'ents'] = [], this['_currentBa' + 'tchVertexC' + 'ount'] = 0x0, this['_currentBa' + 'tchIndexCo' + 'unt'] = 0x0, this['_vertexDec' + 'laration'] = _0x594975, this['batchOwner'] = _0x2ef0db;
        }
        ['_getStatic' + 'BatchBaked' + 'Vertexs'](_0x49cba3, _0x36390e, _0x4eb69e, _0x286a86, _0x824351, _0x140a1e) {
            var _0xef1bd7, _0x337f66 = _0x140a1e['_vertexBuf' + 'fer'], _0x2b6fca = _0x337f66['vertexDecl' + 'aration'], _0x11d973 = _0x2b6fca['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_POSIT' + 'ION0'])['_offset'] / 0x4, _0x28da9f = _0x2b6fca['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_NORMA' + 'L0']), _0x2cbb24 = _0x28da9f ? _0x28da9f['_offset'] / 0x4 : -0x1, _0x156f24 = _0x2b6fca['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_COLOR' + '0']), _0x56465e = _0x156f24 ? _0x156f24['_offset'] / 0x4 : -0x1, _0x3bc674 = _0x2b6fca['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']), _0x5611b3 = _0x3bc674 ? _0x3bc674['_offset'] / 0x4 : -0x1, _0x53cfb7 = _0x2b6fca['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']), _0x2259f1 = _0x53cfb7 ? _0x53cfb7['_offset'] / 0x4 : -0x1, _0x55a7c5 = _0x2b6fca['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TANGE' + 'NT0']), _0x414ba7 = _0x55a7c5 ? _0x55a7c5['_offset'] / 0x4 : -0x1, _0x166e96 = _0x2b6fca['vertexStri' + 'de'] / 0x4, _0x5152da = _0x337f66['getFloat32' + 'Data']();
            _0x4eb69e ? (_0x4eb69e['worldMatri' + 'x']['invert'](_0x2388d0['_tempMatri' + 'x4x40']), _0xef1bd7 = _0x2388d0['_tempMatri' + 'x4x41'], _0x16c2be['multiply'](_0x2388d0['_tempMatri' + 'x4x40'], _0x286a86['worldMatri' + 'x'], _0xef1bd7)) : _0xef1bd7 = _0x286a86['worldMatri' + 'x'];
            var _0xd3bfac = _0x2388d0['_tempMatri' + 'x4x42'];
            _0xef1bd7['invert'](_0xd3bfac), _0xd3bfac['transpose']();
            var _0x2aaf90 = _0x2388d0['_tempQuate' + 'rnion0'];
            _0xef1bd7['decomposeT' + 'ransRotSca' + 'le'](_0x2388d0['_tempVecto' + 'r30'], _0x2aaf90, _0x2388d0['_tempVecto' + 'r31']);
            for (var _0x2fedd6 = _0x824351['lightmapSc' + 'aleOffset'], _0x10c1f2 = _0x140a1e['vertexCoun' + 't'], _0x468286 = 0x0; _0x468286 < _0x10c1f2; _0x468286++) {
                var _0x53d08e, _0x176385, _0x59b642 = _0x468286 * _0x166e96, _0x162c2e = 0x12 * (_0x468286 + _0x36390e);
                _0x89f66e['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayCoord' + 'inate'](_0x5152da, _0x59b642 + _0x11d973, _0xef1bd7, _0x49cba3, _0x162c2e + 0x0), -0x1 !== _0x2cbb24 && _0x89f66e['transformV' + 'ector3Arra' + 'yToVector3' + 'ArrayNorma' + 'l'](_0x5152da, _0x59b642 + _0x2cbb24, _0xd3bfac, _0x49cba3, _0x162c2e + 0x3);
                var _0x5505a7 = _0x162c2e + 0x6;
                if (-0x1 !== _0x56465e) {
                    var _0x3ce505 = _0x59b642 + _0x56465e;
                    for (_0x53d08e = 0x0, _0x176385 = 0x4; _0x53d08e < _0x176385; _0x53d08e++)
                        _0x49cba3[_0x5505a7 + _0x53d08e] = _0x5152da[_0x3ce505 + _0x53d08e];
                } else {
                    for (_0x53d08e = 0x0, _0x176385 = 0x4; _0x53d08e < _0x176385; _0x53d08e++)
                        _0x49cba3[_0x5505a7 + _0x53d08e] = 0x1;
                }
                if (-0x1 !== _0x5611b3) {
                    var _0x100e69 = _0x59b642 + _0x5611b3;
                    _0x49cba3[_0x162c2e + 0xa] = _0x5152da[_0x100e69], _0x49cba3[_0x162c2e + 0xb] = _0x5152da[_0x100e69 + 0x1];
                }
                if (_0x2fedd6 && (-0x1 !== _0x2259f1 ? _0x89f66e['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x5152da, _0x59b642 + _0x2259f1, _0x2fedd6, _0x49cba3, _0x162c2e + 0xc) : _0x89f66e['transformL' + 'ightingMap' + 'TexcoordAr' + 'ray'](_0x5152da, _0x59b642 + _0x5611b3, _0x2fedd6, _0x49cba3, _0x162c2e + 0xc)), -0x1 !== _0x414ba7) {
                    var _0x4a8e82 = _0x59b642 + _0x414ba7;
                    _0x49cba3[_0x162c2e + 0xe] = _0x5152da[_0x4a8e82], _0x49cba3[_0x162c2e + 0xf] = _0x5152da[_0x4a8e82 + 0x1], _0x49cba3[_0x162c2e + 0x10] = _0x5152da[_0x4a8e82 + 0x2], _0x49cba3[_0x162c2e + 0x11] = _0x5152da[_0x4a8e82 + 0x3];
                }
            }
            return _0x10c1f2;
        }
        ['addTest'](_0x58c759) {
            var _0x3e6b9d = _0x58c759['meshFilter']['sharedMesh']['vertexCoun' + 't'];
            return !(this['_currentBa' + 'tchVertexC' + 'ount'] + _0x3e6b9d > _0x2388d0['maxBatchVe' + 'rtexCount']);
        }
        ['add'](_0x23771a) {
            var _0x3b22d2 = _0x23771a['meshFilter']['sharedMesh'], _0x53166d = _0x3b22d2['vertexCoun' + 't'];
            this['_batchElem' + 'ents']['push'](_0x23771a);
            var _0x374f80 = _0x23771a['_render'];
            _0x374f80['_isPartOfS' + 'taticBatch'] = !0x0, _0x374f80['_staticBat' + 'ch'] = this;
            for (var _0x534113 = _0x374f80['_renderEle' + 'ments'], _0x58b22b = 0x0, _0x4d0ed2 = _0x534113['length']; _0x58b22b < _0x4d0ed2; _0x58b22b++)
                _0x534113[_0x58b22b]['staticBatc' + 'h'] = this;
            this['_currentBa' + 'tchIndexCo' + 'unt'] += _0x3b22d2['_indexBuff' + 'er']['indexCount'], this['_currentBa' + 'tchVertexC' + 'ount'] += _0x53166d;
        }
        ['remove'](_0x296ccd) {
            var _0x1a1d50 = _0x296ccd['meshFilter']['sharedMesh'], _0x482708 = this['_batchElem' + 'ents']['indexOf'](_0x296ccd);
            if (-0x1 !== _0x482708) {
                this['_batchElem' + 'ents']['splice'](_0x482708, 0x1);
                for (var _0x25d062 = _0x296ccd['_render']['_renderEle' + 'ments'], _0x19d7ea = 0x0, _0x553045 = _0x25d062['length']; _0x19d7ea < _0x553045; _0x19d7ea++)
                    _0x25d062[_0x19d7ea]['staticBatc' + 'h'] = null;
                this['_currentBa' + 'tchIndexCo' + 'unt'] = this['_currentBa' + 'tchIndexCo' + 'unt'] - _0x1a1d50['_indexBuff' + 'er']['indexCount'], this['_currentBa' + 'tchVertexC' + 'ount'] = this['_currentBa' + 'tchVertexC' + 'ount'] - _0x1a1d50['vertexCoun' + 't'], _0x296ccd['_render']['_isPartOfS' + 'taticBatch'] = !0x1;
            }
        }
        ['finishInit']() {
            this['_vertexBuf' + 'fer'] && (this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), _0x33d6e0['Resource']['_addGPUMem' + 'ory'](-(this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'])));
            var _0x4d54d7 = _0x33d6e0['LayaGL']['instance'], _0x245a1a = 0x0, _0x14fbef = 0x0, _0x7f90ac = this['batchOwner'], _0x265dc6 = this['_vertexDec' + 'laration']['vertexStri' + 'de'] / 0x4, _0x3f3271 = new Float32Array(_0x265dc6 * this['_currentBa' + 'tchVertexC' + 'ount']), _0x45f85e = new Uint16Array(this['_currentBa' + 'tchIndexCo' + 'unt']);
            this['_vertexBuf' + 'fer'] = new _0x5dfaba(this['_vertexDec' + 'laration']['vertexStri' + 'de'] * this['_currentBa' + 'tchVertexC' + 'ount'], _0x4d54d7['STATIC_DRA' + 'W']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = this['_vertexDec' + 'laration'], this['_indexBuff' + 'er'] = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], this['_currentBa' + 'tchIndexCo' + 'unt'], _0x4d54d7['STATIC_DRA' + 'W']);
            for (var _0x43375a = 0x0, _0x5642c0 = this['_batchElem' + 'ents']['length']; _0x43375a < _0x5642c0; _0x43375a++) {
                for (var _0x5227cd, _0x550364 = this['_batchElem' + 'ents'][_0x43375a], _0x230f18 = _0x550364['meshFilter']['sharedMesh'], _0x467cdf = this['_getStatic' + 'BatchBaked' + 'Vertexs'](_0x3f3271, _0x245a1a, _0x7f90ac ? _0x7f90ac['_transform'] : null, _0x550364['_transform'], _0x550364['_render'], _0x230f18), _0x3d5a84 = _0x230f18['_indexBuff' + 'er']['getData'](), _0x56b21b = _0x245a1a, _0xfa24f3 = _0x14fbef + _0x3d5a84['length'], _0x2ea9d9 = _0x550364['_render']['_renderEle' + 'ments'], _0x531171 = 0x0, _0x4a333d = _0x230f18['subMeshCou' + 'nt']; _0x531171 < _0x4a333d; _0x531171++) {
                    var _0x21c2d0 = _0x230f18['_subMeshes'][_0x531171], _0x24ead3 = _0x14fbef + _0x21c2d0['_indexStar' + 't'], _0x2fcaba = _0x2ea9d9[_0x531171];
                    _0x2fcaba['staticBatc' + 'hIndexStar' + 't'] = _0x24ead3, _0x2fcaba['staticBatc' + 'hIndexEnd'] = _0x24ead3 + _0x21c2d0['_indexCoun' + 't'];
                }
                if (_0x45f85e['set'](_0x3d5a84, _0x14fbef), _0x7f90ac ? _0x550364['_transform']['_isFrontFa' + 'ceInvert'] !== _0x7f90ac['transform']['_isFrontFa' + 'ceInvert'] : _0x550364['_transform']['_isFrontFa' + 'ceInvert'])
                    for (_0x5227cd = _0x14fbef; _0x5227cd < _0xfa24f3; _0x5227cd += 0x3) {
                        _0x45f85e[_0x5227cd] = _0x56b21b + _0x45f85e[_0x5227cd];
                        var _0x2369d6 = _0x45f85e[_0x5227cd + 0x1], _0x1a1a04 = _0x45f85e[_0x5227cd + 0x2];
                        _0x45f85e[_0x5227cd + 0x1] = _0x56b21b + _0x1a1a04, _0x45f85e[_0x5227cd + 0x2] = _0x56b21b + _0x2369d6;
                    }
                else {
                    for (_0x5227cd = _0x14fbef; _0x5227cd < _0xfa24f3; _0x5227cd += 0x3)
                        _0x45f85e[_0x5227cd] = _0x56b21b + _0x45f85e[_0x5227cd], _0x45f85e[_0x5227cd + 0x1] = _0x56b21b + _0x45f85e[_0x5227cd + 0x1], _0x45f85e[_0x5227cd + 0x2] = _0x56b21b + _0x45f85e[_0x5227cd + 0x2];
                }
                _0x14fbef += _0x3d5a84['length'], _0x245a1a += _0x467cdf;
            }
            this['_vertexBuf' + 'fer']['setData'](_0x3f3271['buffer']), this['_indexBuff' + 'er']['setData'](_0x45f85e);
            var _0x476c9e = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x33d6e0['Resource']['_addGPUMem' + 'ory'](_0x476c9e), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
        }
        ['_render'](_0x44dc43) {
            this['_bufferSta' + 'te']['bind']();
            for (var _0x53db4c = _0x33d6e0['LayaGL']['instance'], _0x16728a = _0x44dc43['renderElem' + 'ent']['staticBatc' + 'hElementLi' + 'st'], _0x46802b = _0x16728a['elements'], _0x405935 = 0x0, _0x335d8b = 0x0, _0x320e11 = _0x16728a['length'], _0x4d05c3 = 0x1; _0x4d05c3 < _0x320e11; _0x4d05c3++) {
                if (_0x46802b[_0x4d05c3 - 0x1]['staticBatc' + 'hIndexEnd'] !== _0x46802b[_0x4d05c3]['staticBatc' + 'hIndexStar' + 't']) {
                    var _0x31de44 = _0x46802b[_0x405935]['staticBatc' + 'hIndexStar' + 't'], _0x12c5b3 = _0x46802b[_0x335d8b]['staticBatc' + 'hIndexEnd'] - _0x31de44;
                    _0x53db4c['drawElemen' + 'ts'](_0x53db4c['TRIANGLES'], _0x12c5b3, _0x53db4c['UNSIGNED_S' + 'HORT'], 0x2 * _0x31de44), _0x405935 = ++_0x335d8b, _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x12c5b3 / 0x3;
                } else
                    _0x335d8b++;
            }
            _0x31de44 = _0x46802b[_0x405935]['staticBatc' + 'hIndexStar' + 't'], _0x12c5b3 = _0x46802b[_0x335d8b]['staticBatc' + 'hIndexEnd'] - _0x31de44, _0x53db4c['drawElemen' + 'ts'](_0x53db4c['TRIANGLES'], _0x12c5b3, _0x53db4c['UNSIGNED_S' + 'HORT'], 0x2 * _0x31de44), _0x33d6e0['Stat']['renderBatc' + 'hes']++, _0x33d6e0['Stat']['savedRende' + 'rBatches'] += _0x320e11 - 0x1, _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x12c5b3 / 0x3;
        }
        ['dispose']() {
            var _0x4f534a = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x33d6e0['Resource']['_addGPUMem' + 'ory'](-_0x4f534a), this['_batchElem' + 'ents'] = null, this['batchOwner'] = null, this['_vertexDec' + 'laration'] = null, this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_bufferSta' + 'te'] = null;
        }
    }
    _0x2388d0['_tempVecto' + 'r30'] = new _0x4795b3(), _0x2388d0['_tempVecto' + 'r31'] = new _0x4795b3(), _0x2388d0['_tempQuate' + 'rnion0'] = new _0x5958af(), _0x2388d0['_tempMatri' + 'x4x40'] = new _0x16c2be(), _0x2388d0['_tempMatri' + 'x4x41'] = new _0x16c2be(), _0x2388d0['_tempMatri' + 'x4x42'] = new _0x16c2be(), _0x2388d0['maxBatchVe' + 'rtexCount'] = 0xffff, _0x2388d0['_batchIDCo' + 'unter'] = 0x0;
    class _0x16b19d {
        constructor() {
            this['elements'] = [], this['length'] = 0x0;
        }
        ['_add'](_0x3d87d7) {
            this['length'] === this['elements']['length'] ? this['elements']['push'](_0x3d87d7) : this['elements'][this['length']] = _0x3d87d7;
        }
        ['add'](_0x4bb7c3) {
            this['length'] === this['elements']['length'] ? this['elements']['push'](_0x4bb7c3) : this['elements'][this['length']] = _0x4bb7c3, this['length']++;
        }
    }
    class _0x542a94 extends _0x11568b {
        constructor() {
            super(), this['_opaqueBat' + 'chMarks'] = [], this['_updateCou' + 'ntMark'] = 0x0;
        }
        static ['__init__']() {
            _0x542a94['_verDec'] = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,COLO' + 'R,UV,UV1,T' + 'ANGENT');
        }
        ['_compare'](_0x50bcac, _0x5c3c79) {
            var _0x571336 = _0x50bcac['_render'], _0x632275 = _0x5c3c79['_render'], _0x276d81 = _0x50bcac['meshFilter']['sharedMesh'], _0x473ccf = _0x5c3c79['meshFilter']['sharedMesh'], _0x48b6a0 = _0x571336['lightmapIn' + 'dex'] - _0x632275['lightmapIn' + 'dex'];
            if (0x0 === _0x48b6a0) {
                var _0x7ae2f0 = (_0x571336['receiveSha' + 'dow'] ? 0x1 : 0x0) - (_0x632275['receiveSha' + 'dow'] ? 0x1 : 0x0);
                if (0x0 === _0x7ae2f0) {
                    var _0x148b63 = _0x571336['sharedMate' + 'rial'] && _0x632275['sharedMate' + 'rial'] ? _0x571336['sharedMate' + 'rial']['id'] - _0x632275['sharedMate' + 'rial']['id'] : 0x0;
                    if (0x0 === _0x148b63) {
                        var _0xaa5ebe = _0x276d81['_vertexBuf' + 'fer']['vertexDecl' + 'aration']['id'] - _0x473ccf['_vertexBuf' + 'fer']['vertexDecl' + 'aration']['id'];
                        return 0x0 === _0xaa5ebe ? _0x473ccf['_indexBuff' + 'er']['indexCount'] - _0x276d81['_indexBuff' + 'er']['indexCount'] : _0xaa5ebe;
                    }
                    return _0x148b63;
                }
                return _0x7ae2f0;
            }
            return _0x48b6a0;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            var _0x31e4c8 = this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex']++];
            return _0x31e4c8 || (_0x31e4c8 = new _0x1cdd46(), this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex'] - 0x1] = _0x31e4c8, _0x31e4c8['staticBatc' + 'hElementLi' + 'st'] = new _0x16b19d()), _0x31e4c8;
        }
        ['_getStatic' + 'Batch'](_0x4383d4, _0x129ffa, _0xaf0c6c) {
            var _0xa88109 = _0x4383d4[_0xaf0c6c];
            return _0xa88109 || (_0xa88109 = _0x4383d4[_0xaf0c6c] = new _0x2388d0(_0x129ffa, _0x542a94['_verDec']), this['_staticBat' + 'ches'][_0xa88109['_batchID']] = _0xa88109), _0xa88109;
        }
        ['_initStati' + 'cBatchs'](_0xfe5208) {
            var _0xd1ee81 = this['_initBatch' + 'Sprites'];
            this['_quickSort'](_0xd1ee81, 0x0, _0xd1ee81['length'] - 0x1);
            for (var _0x5c5e6c, _0xae612d = [], _0x2c67c9 = !0x1, _0x5691c2 = 0x0, _0x1ac4ba = 0x0, _0x40bc9c = _0xd1ee81['length']; _0x1ac4ba < _0x40bc9c; _0x1ac4ba++) {
                var _0x4c14d7 = _0xd1ee81[_0x1ac4ba];
                if (_0x2c67c9)
                    _0x5c5e6c['addTest'](_0x4c14d7) ? _0x5c5e6c['add'](_0x4c14d7) : (_0x2c67c9 = !0x1, _0x5691c2++);
                else
                    _0x1ac4ba !== _0x40bc9c - 0x1 && ((_0x5c5e6c = this['_getStatic' + 'Batch'](_0xae612d, _0xfe5208, _0x5691c2))['add'](_0x4c14d7), _0x2c67c9 = !0x0);
            }
            for (_0x1ac4ba = 0x0, _0x40bc9c = _0xae612d['length']; _0x1ac4ba < _0x40bc9c; _0x1ac4ba++) {
                var _0x4bad85 = _0xae612d[_0x1ac4ba];
                _0x4bad85 && _0x4bad85['finishInit']();
            }
            this['_initBatch' + 'Sprites']['length'] = 0x0;
        }
        ['_removeRen' + 'derSprite'](_0x1844d7) {
            var _0x560d3d = _0x1844d7['_render'], _0xdfa1cf = _0x560d3d['_staticBat' + 'ch'], _0x2b1ddf = _0xdfa1cf['_batchElem' + 'ents'], _0x450b42 = _0x2b1ddf['indexOf'](_0x1844d7);
            if (-0x1 !== _0x450b42) {
                _0x2b1ddf['splice'](_0x450b42, 0x1), _0x560d3d['_staticBat' + 'ch'] = null;
                for (var _0x967807 = _0x560d3d['_renderEle' + 'ments'], _0x861169 = 0x0, _0x43ce16 = _0x967807['length']; _0x861169 < _0x43ce16; _0x861169++)
                    _0x967807[_0x861169]['staticBatc' + 'h'] = null;
            }
            0x0 === _0x2b1ddf['length'] && (delete this['_staticBat' + 'ches'][_0xdfa1cf['_batchID']], _0xdfa1cf['dispose']());
        }
        ['_clear']() {
            super['_clear'](), this['_updateCou' + 'ntMark']++;
        }
        ['_garbageCo' + 'llection']() {
            for (var _0x29daf1 in this['_staticBat' + 'ches']) {
                var _0x510d2a = this['_staticBat' + 'ches'][_0x29daf1];
                0x0 === _0x510d2a['_batchElem' + 'ents']['length'] && (_0x510d2a['dispose'](), delete this['_staticBat' + 'ches'][_0x29daf1]);
            }
        }
        ['getBatchOp' + 'aquaMark'](_0x5b99c7, _0x4904d9, _0x19ec6e, _0x42c5cc) {
            var _0xbbd893 = _0x4904d9 ? 0x1 : 0x0, _0x561cae = this['_opaqueBat' + 'chMarks'][_0x5b99c7] || (this['_opaqueBat' + 'chMarks'][_0x5b99c7] = []), _0x5b944c = _0x561cae[_0xbbd893] || (_0x561cae[_0xbbd893] = []), _0x141e02 = _0x5b944c[_0x19ec6e] || (_0x5b944c[_0x19ec6e] = []);
            return _0x141e02[_0x42c5cc] || (_0x141e02[_0x42c5cc] = new _0x389da5());
        }
    }
    _0x542a94['instance'] = new _0x542a94();
    class _0x22d0bb {
    }
    class _0x3555e9 {
        constructor(_0xebaae6, _0x3e3167) {
            this['min'] = _0xebaae6, this['max'] = _0x3e3167;
        }
        ['_rotateExt' + 'ents'](_0x15a44b, _0x3d6c11, _0x296356) {
            var _0x1671bf = _0x15a44b['x'], _0x3894af = _0x15a44b['y'], _0x552712 = _0x15a44b['z'], _0x581bf7 = _0x3d6c11['elements'];
            _0x296356['x'] = Math['abs'](_0x581bf7[0x0] * _0x1671bf) + Math['abs'](_0x581bf7[0x4] * _0x3894af) + Math['abs'](_0x581bf7[0x8] * _0x552712), _0x296356['y'] = Math['abs'](_0x581bf7[0x1] * _0x1671bf) + Math['abs'](_0x581bf7[0x5] * _0x3894af) + Math['abs'](_0x581bf7[0x9] * _0x552712), _0x296356['z'] = Math['abs'](_0x581bf7[0x2] * _0x1671bf) + Math['abs'](_0x581bf7[0x6] * _0x3894af) + Math['abs'](_0x581bf7[0xa] * _0x552712);
        }
        ['getCorners'](_0x183573) {
            _0x183573['length'] = 0x8;
            var _0x8ebc58 = this['min']['x'], _0x4fab84 = this['min']['y'], _0x5e773f = this['min']['z'], _0x4120dc = this['max']['x'], _0x2a8616 = this['max']['y'], _0x41cc87 = this['max']['z'];
            _0x183573[0x0] = new _0x4795b3(_0x8ebc58, _0x2a8616, _0x41cc87), _0x183573[0x1] = new _0x4795b3(_0x4120dc, _0x2a8616, _0x41cc87), _0x183573[0x2] = new _0x4795b3(_0x4120dc, _0x4fab84, _0x41cc87), _0x183573[0x3] = new _0x4795b3(_0x8ebc58, _0x4fab84, _0x41cc87), _0x183573[0x4] = new _0x4795b3(_0x8ebc58, _0x2a8616, _0x5e773f), _0x183573[0x5] = new _0x4795b3(_0x4120dc, _0x2a8616, _0x5e773f), _0x183573[0x6] = new _0x4795b3(_0x4120dc, _0x4fab84, _0x5e773f), _0x183573[0x7] = new _0x4795b3(_0x8ebc58, _0x4fab84, _0x5e773f);
        }
        ['getCenter'](_0x4b0dba) {
            _0x4795b3['add'](this['min'], this['max'], _0x4b0dba), _0x4795b3['scale'](_0x4b0dba, 0.5, _0x4b0dba);
        }
        ['getExtent'](_0x3d5caa) {
            _0x4795b3['subtract'](this['max'], this['min'], _0x3d5caa), _0x4795b3['scale'](_0x3d5caa, 0.5, _0x3d5caa);
        }
        ['setCenterA' + 'ndExtent'](_0x56d187, _0x29d106) {
            _0x4795b3['subtract'](_0x56d187, _0x29d106, this['min']), _0x4795b3['add'](_0x56d187, _0x29d106, this['max']);
        }
        ['tranform'](_0x4c18e8, _0xd21a89) {
            var _0x1f8578 = _0x3555e9['_tempVecto' + 'r30'], _0x3c013a = _0x3555e9['_tempVecto' + 'r31'];
            this['getCenter'](_0x1f8578), this['getExtent'](_0x3c013a), _0x4795b3['transformC' + 'oordinate'](_0x1f8578, _0x4c18e8, _0x1f8578), this['_rotateExt' + 'ents'](_0x3c013a, _0x4c18e8, _0x3c013a), _0xd21a89['setCenterA' + 'ndExtent'](_0x1f8578, _0x3c013a);
        }
        ['toDefault']() {
            this['min']['toDefault'](), this['max']['toDefault']();
        }
        static ['createfrom' + 'Points'](_0x213577, _0xb267bc) {
            if (null == _0x213577)
                throw new Error('points');
            var _0x37b631 = _0xb267bc['min'], _0x4710cd = _0xb267bc['max'];
            _0x37b631['x'] = Number['MAX_VALUE'], _0x37b631['y'] = Number['MAX_VALUE'], _0x37b631['z'] = Number['MAX_VALUE'], _0x4710cd['x'] = -Number['MAX_VALUE'], _0x4710cd['y'] = -Number['MAX_VALUE'], _0x4710cd['z'] = -Number['MAX_VALUE'];
            for (var _0x82f389 = 0x0, _0x13a86e = _0x213577['length']; _0x82f389 < _0x13a86e; ++_0x82f389)
                _0x4795b3['min'](_0x37b631, _0x213577[_0x82f389], _0x37b631), _0x4795b3['max'](_0x4710cd, _0x213577[_0x82f389], _0x4710cd);
        }
        static ['merge'](_0x44a54f, _0x48ff06, _0x5db100) {
            _0x4795b3['min'](_0x44a54f['min'], _0x48ff06['min'], _0x5db100['min']), _0x4795b3['max'](_0x44a54f['max'], _0x48ff06['max'], _0x5db100['max']);
        }
        ['cloneTo'](_0x528913) {
            var _0x5a5c37 = _0x528913;
            this['min']['cloneTo'](_0x5a5c37['min']), this['max']['cloneTo'](_0x5a5c37['max']);
        }
        ['clone']() {
            var _0x2b3c9d = new _0x3555e9(new _0x4795b3(), new _0x4795b3());
            return this['cloneTo'](_0x2b3c9d), _0x2b3c9d;
        }
    }
    _0x3555e9['_tempVecto' + 'r30'] = new _0x4795b3(), _0x3555e9['_tempVecto' + 'r31'] = new _0x4795b3();
    class _0x5a0bdd {
        constructor(_0xe5bc51, _0x219851) {
            this['_updateFla' + 'g'] = 0x0, this['_center'] = new _0x4795b3(), this['_extent'] = new _0x4795b3(), this['_boundBox'] = new _0x3555e9(new _0x4795b3(), new _0x4795b3()), _0xe5bc51['cloneTo'](this['_boundBox']['min']), _0x219851['cloneTo'](this['_boundBox']['max']), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_CE' + 'NTER'] | _0x5a0bdd['_UPDATE_EX' + 'TENT'], !0x0);
        }
        ['setMin'](_0x54aef4) {
            var _0x2f6be7 = this['_boundBox']['min'];
            _0x54aef4 !== _0x2f6be7 && _0x54aef4['cloneTo'](_0x2f6be7), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_CE' + 'NTER'] | _0x5a0bdd['_UPDATE_EX' + 'TENT'], !0x0), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MI' + 'N'], !0x1);
        }
        ['getMin']() {
            var _0x2621fe = this['_boundBox']['min'];
            return this['_getUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MI' + 'N']) && (this['_getMin'](this['getCenter'](), this['getExtent'](), _0x2621fe), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MI' + 'N'], !0x1)), _0x2621fe;
        }
        ['setMax'](_0xa35199) {
            var _0x1534ff = this['_boundBox']['max'];
            _0xa35199 !== _0x1534ff && _0xa35199['cloneTo'](_0x1534ff), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_CE' + 'NTER'] | _0x5a0bdd['_UPDATE_EX' + 'TENT'], !0x0), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MA' + 'X'], !0x1);
        }
        ['getMax']() {
            var _0x24928a = this['_boundBox']['max'];
            return this['_getUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MA' + 'X']) && (this['_getMax'](this['getCenter'](), this['getExtent'](), _0x24928a), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MA' + 'X'], !0x1)), _0x24928a;
        }
        ['setCenter'](_0x45f4b4) {
            _0x45f4b4 !== this['_center'] && _0x45f4b4['cloneTo'](this['_center']), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MI' + 'N'] | _0x5a0bdd['_UPDATE_MA' + 'X'], !0x0), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_CE' + 'NTER'], !0x1);
        }
        ['getCenter']() {
            return this['_getUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_CE' + 'NTER']) && (this['_getCenter'](this['getMin'](), this['getMax'](), this['_center']), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_CE' + 'NTER'], !0x1)), this['_center'];
        }
        ['setExtent'](_0x280888) {
            _0x280888 !== this['_extent'] && _0x280888['cloneTo'](this['_extent']), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MI' + 'N'] | _0x5a0bdd['_UPDATE_MA' + 'X'], !0x0), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_EX' + 'TENT'], !0x1);
        }
        ['getExtent']() {
            return this['_getUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_EX' + 'TENT']) && (this['_getExtent'](this['getMin'](), this['getMax'](), this['_extent']), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_EX' + 'TENT'], !0x1)), this['_extent'];
        }
        ['_getUpdate' + 'Flag'](_0x579f87) {
            return 0x0 != (this['_updateFla' + 'g'] & _0x579f87);
        }
        ['_setUpdate' + 'Flag'](_0x47b730, _0x447c4f) {
            _0x447c4f ? this['_updateFla' + 'g'] |= _0x47b730 : this['_updateFla' + 'g'] &= ~_0x47b730;
        }
        ['_getCenter'](_0x357df5, _0x491af9, _0x2805f4) {
            _0x4795b3['add'](_0x357df5, _0x491af9, _0x2805f4), _0x4795b3['scale'](_0x2805f4, 0.5, _0x2805f4);
        }
        ['_getExtent'](_0x26e3f7, _0x479c31, _0x450e5e) {
            _0x4795b3['subtract'](_0x479c31, _0x26e3f7, _0x450e5e), _0x4795b3['scale'](_0x450e5e, 0.5, _0x450e5e);
        }
        ['_getMin'](_0x4c56e6, _0x260908, _0x1cc0f8) {
            _0x4795b3['subtract'](_0x4c56e6, _0x260908, _0x1cc0f8);
        }
        ['_getMax'](_0x4b5ec9, _0x3fdbaa, _0x4038c6) {
            _0x4795b3['add'](_0x4b5ec9, _0x3fdbaa, _0x4038c6);
        }
        ['_rotateExt' + 'ents'](_0x3e02bd, _0xb106, _0x477ae1) {
            var _0x261f1a = _0x3e02bd['x'], _0x4b53c7 = _0x3e02bd['y'], _0x2a2a7f = _0x3e02bd['z'], _0x3d4c13 = _0xb106['elements'];
            _0x477ae1['x'] = Math['abs'](_0x3d4c13[0x0] * _0x261f1a) + Math['abs'](_0x3d4c13[0x4] * _0x4b53c7) + Math['abs'](_0x3d4c13[0x8] * _0x2a2a7f), _0x477ae1['y'] = Math['abs'](_0x3d4c13[0x1] * _0x261f1a) + Math['abs'](_0x3d4c13[0x5] * _0x4b53c7) + Math['abs'](_0x3d4c13[0x9] * _0x2a2a7f), _0x477ae1['z'] = Math['abs'](_0x3d4c13[0x2] * _0x261f1a) + Math['abs'](_0x3d4c13[0x6] * _0x4b53c7) + Math['abs'](_0x3d4c13[0xa] * _0x2a2a7f);
        }
        ['_tranform'](_0x4901ea, _0x501798) {
            var _0x1c2419 = _0x501798['_center'], _0xed62b3 = _0x501798['_extent'];
            _0x4795b3['transformC' + 'oordinate'](this['getCenter'](), _0x4901ea, _0x1c2419), this['_rotateExt' + 'ents'](this['getExtent'](), _0x4901ea, _0xed62b3), _0x501798['_boundBox']['setCenterA' + 'ndExtent'](_0x1c2419, _0xed62b3), _0x501798['_updateFla' + 'g'] = 0x0;
        }
        ['_getBoundB' + 'ox']() {
            if (this['_updateFla' + 'g'] & _0x5a0bdd['_UPDATE_MI' + 'N']) {
                var _0x593c30 = this['_boundBox']['min'];
                this['_getMin'](this['getCenter'](), this['getExtent'](), _0x593c30), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MI' + 'N'], !0x1);
            }
            if (this['_updateFla' + 'g'] & _0x5a0bdd['_UPDATE_MA' + 'X']) {
                var _0x1bed65 = this['_boundBox']['max'];
                this['_getMax'](this['getCenter'](), this['getExtent'](), _0x1bed65), this['_setUpdate' + 'Flag'](_0x5a0bdd['_UPDATE_MA' + 'X'], !0x1);
            }
            return this['_boundBox'];
        }
        ['cloneTo'](_0x2f89f) {
            var _0xb98e23 = _0x2f89f;
            this['getMin']()['cloneTo'](_0xb98e23['_boundBox']['min']), this['getMax']()['cloneTo'](_0xb98e23['_boundBox']['max']), this['getCenter']()['cloneTo'](_0xb98e23['_center']), this['getExtent']()['cloneTo'](_0xb98e23['_extent']), _0xb98e23['_updateFla' + 'g'] = 0x0;
        }
        ['clone']() {
            var _0x2afcd = new _0x5a0bdd(new _0x4795b3(), new _0x4795b3());
            return this['cloneTo'](_0x2afcd), _0x2afcd;
        }
    }
    _0x5a0bdd['_UPDATE_MI' + 'N'] = 0x1, _0x5a0bdd['_UPDATE_MA' + 'X'] = 0x2, _0x5a0bdd['_UPDATE_CE' + 'NTER'] = 0x4, _0x5a0bdd['_UPDATE_EX' + 'TENT'] = 0x8;
    class _0x26d0eb extends _0x33d6e0['EventDispa' + 'tcher'] {
        constructor(_0x337a42) {
            if (super(), this['_indexInLi' + 'st'] = -0x1, this['_indexInCa' + 'stShadowLi' + 'st'] = -0x1, this['_boundsCha' + 'nge'] = !0x0, this['_castShado' + 'w'] = !0x1, this['_supportOc' + 'tree'] = !0x0, this['_sharedMat' + 'erials'] = [], this['_visible'] = !0x0, this['_indexInOc' + 'treeMotion' + 'List'] = -0x1, this['_updateMar' + 'k'] = -0x1, this['_updateRen' + 'derType'] = -0x1, this['_isPartOfS' + 'taticBatch'] = !0x1, this['_staticBat' + 'ch'] = null, this['_id'] = ++_0x26d0eb['_uniqueIDC' + 'ounter'], this['_indexInCa' + 'stShadowLi' + 'st'] = -0x1, this['_bounds'] = new _0x5a0bdd(_0x4795b3['_ZERO'], _0x4795b3['_ZERO']), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x567d31 = _0x2585ad['_cullingBu' + 'fferLength'];
                this['_cullingBu' + 'fferIndex'] = _0x567d31;
                var _0x1f6f0d = _0x2585ad['_cullingBu' + 'ffer'], _0x1d6b4a = _0x567d31 + 0x7;
                if (_0x1d6b4a >= _0x1f6f0d['length']) {
                    var _0x1d1706 = _0x1f6f0d;
                    (_0x1f6f0d = _0x2585ad['_cullingBu' + 'ffer'] = new Float32Array(_0x1f6f0d['length'] + 0x1000))['set'](_0x1d1706, 0x0);
                }
                _0x1f6f0d[_0x567d31] = 0x2, _0x2585ad['_cullingBu' + 'fferLength'] = _0x1d6b4a;
            }
            this['_renderEle' + 'ments'] = [], this['_owner'] = _0x337a42, this['_enable'] = !0x0, this['_materials' + 'Instance'] = [], this['_shaderVal' + 'ues'] = new _0x4ac605(null), this['lightmapIn' + 'dex'] = -0x1, this['receiveSha' + 'dow'] = !0x1, this['sortingFud' + 'ge'] = 0x0, _0x337a42 && this['_owner']['transform']['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
        }
        get ['id']() {
            return this['_id'];
        }
        get ['lightmapIn' + 'dex']() {
            return this['_lightmapI' + 'ndex'];
        }
        set ['lightmapIn' + 'dex'](_0x5e372c) {
            this['_lightmapI' + 'ndex'] !== _0x5e372c && (this['_lightmapI' + 'ndex'] = _0x5e372c, this['_applyLigh' + 'tMapParams']());
        }
        get ['lightmapSc' + 'aleOffset']() {
            return this['_lightmapS' + 'caleOffset'];
        }
        set ['lightmapSc' + 'aleOffset'](_0x280a9c) {
            this['_lightmapS' + 'caleOffset'] = _0x280a9c, this['_shaderVal' + 'ues']['setVector'](_0x33bc07['LIGHTMAPSC' + 'ALEOFFSET'], _0x280a9c), this['_shaderVal' + 'ues']['addDefine'](_0x33bc07['SHADERDEFI' + 'NE_SCALEOF' + 'FSETLIGHTI' + 'NGMAPUV']);
        }
        get ['enable']() {
            return this['_enable'];
        }
        set ['enable'](_0x26b4bc) {
            this['_enable'] = !!_0x26b4bc;
        }
        get ['material']() {
            var _0xd4defc = this['_sharedMat' + 'erials'][0x0];
            if (_0xd4defc && !this['_materials' + 'Instance'][0x0]) {
                var _0xf012d2 = this['_getInstan' + 'ceMaterial'](_0xd4defc, 0x0), _0x5a51ed = this['_renderEle' + 'ments'][0x0];
                _0x5a51ed && (_0x5a51ed['material'] = _0xf012d2);
            }
            return this['_sharedMat' + 'erials'][0x0];
        }
        set ['material'](_0x1788c8) {
            this['sharedMate' + 'rial'] = _0x1788c8;
        }
        get ['materials']() {
            for (var _0x536b79 = 0x0, _0x39cad1 = this['_sharedMat' + 'erials']['length']; _0x536b79 < _0x39cad1; _0x536b79++)
                if (!this['_materials' + 'Instance'][_0x536b79]) {
                    var _0x51ada7 = this['_getInstan' + 'ceMaterial'](this['_sharedMat' + 'erials'][_0x536b79], _0x536b79), _0x2d19d9 = this['_renderEle' + 'ments'][_0x536b79];
                    _0x2d19d9 && (_0x2d19d9['material'] = _0x51ada7);
                }
            return this['_sharedMat' + 'erials']['slice']();
        }
        set ['materials'](_0x1e257c) {
            this['sharedMate' + 'rials'] = _0x1e257c;
        }
        get ['sharedMate' + 'rial']() {
            return this['_sharedMat' + 'erials'][0x0];
        }
        set ['sharedMate' + 'rial'](_0x4cd29b) {
            var _0x2764c2 = this['_sharedMat' + 'erials'][0x0];
            if (_0x2764c2 !== _0x4cd29b) {
                this['_sharedMat' + 'erials'][0x0] = _0x4cd29b, this['_materials' + 'Instance'][0x0] = !0x1, this['_changeMat' + 'erialRefer' + 'ence'](_0x2764c2, _0x4cd29b);
                var _0x2ade47 = this['_renderEle' + 'ments'][0x0];
                _0x2ade47 && (_0x2ade47['material'] = _0x4cd29b);
            }
        }
        get ['sharedMate' + 'rials']() {
            return this['_sharedMat' + 'erials']['slice']();
        }
        set ['sharedMate' + 'rials'](_0x1e661c) {
            for (var _0x15d00b = this['_materials' + 'Instance'], _0x20786d = this['_sharedMat' + 'erials'], _0x5c789b = 0x0, _0x566d6e = _0x20786d['length']; _0x5c789b < _0x566d6e; _0x5c789b++) {
                var _0x187ee0 = _0x20786d[_0x5c789b];
                _0x187ee0 && _0x187ee0['_removeRef' + 'erence']();
            }
            if (!_0x1e661c)
                throw new Error('BaseRender' + ':\x20shadredM' + 'aterials\x20v' + 'alue\x20can\x27t' + '\x20be\x20null.');
            var _0x498597 = _0x1e661c['length'];
            for (_0x15d00b['length'] = _0x498597, _0x20786d['length'] = _0x498597, _0x5c789b = 0x0; _0x5c789b < _0x498597; _0x5c789b++) {
                _0x187ee0 = _0x20786d[_0x5c789b];
                var _0x1b2efa = _0x1e661c[_0x5c789b];
                if (_0x187ee0 !== _0x1b2efa) {
                    _0x15d00b[_0x5c789b] = !0x1;
                    var _0x2250ec = this['_renderEle' + 'ments'][_0x5c789b];
                    _0x2250ec && (_0x2250ec['material'] = _0x1b2efa);
                }
                _0x1b2efa && _0x1b2efa['_addRefere' + 'nce'](), _0x20786d[_0x5c789b] = _0x1b2efa;
            }
        }
        get ['bounds']() {
            return this['_boundsCha' + 'nge'] && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = !0x1), this['_bounds'];
        }
        set ['receiveSha' + 'dow'](_0x5cee53) {
            this['_receiveSh' + 'adow'] !== _0x5cee53 && (this['_receiveSh' + 'adow'] = _0x5cee53, _0x5cee53 ? this['_shaderVal' + 'ues']['addDefine'](_0x33bc07['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x33bc07['SHADERDEFI' + 'NE_RECEIVE' + '_SHADOW']));
        }
        get ['receiveSha' + 'dow']() {
            return this['_receiveSh' + 'adow'];
        }
        get ['castShadow']() {
            return this['_castShado' + 'w'];
        }
        set ['castShadow'](_0x5a0845) {
            this['_castShado' + 'w'] = _0x5a0845;
        }
        get ['isPartOfSt' + 'aticBatch']() {
            return this['_isPartOfS' + 'taticBatch'];
        }
        ['_getOctree' + 'Node']() {
            return this['_octreeNod' + 'e'];
        }
        ['_setOctree' + 'Node'](_0x482abd) {
            this['_octreeNod' + 'e'] = _0x482abd;
        }
        ['_getIndexI' + 'nMotionLis' + 't']() {
            return this['_indexInOc' + 'treeMotion' + 'List'];
        }
        ['_setIndexI' + 'nMotionLis' + 't'](_0x5749b9) {
            this['_indexInOc' + 'treeMotion' + 'List'] = _0x5749b9;
        }
        ['_changeMat' + 'erialRefer' + 'ence'](_0x204fef, _0xf9f33f) {
            _0x204fef && _0x204fef['_removeRef' + 'erence'](), _0xf9f33f['_addRefere' + 'nce']();
        }
        ['_getInstan' + 'ceMaterial'](_0x4e32ff, _0x4bb366) {
            var _0xe3a30b = _0x4e32ff['clone']();
            return _0xe3a30b['name'] = _0xe3a30b['name'] + '(Instance)', this['_materials' + 'Instance'][_0x4bb366] = !0x0, this['_changeMat' + 'erialRefer' + 'ence'](this['_sharedMat' + 'erials'][_0x4bb366], _0xe3a30b), this['_sharedMat' + 'erials'][_0x4bb366] = _0xe3a30b, _0xe3a30b;
        }
        ['_applyLigh' + 'tMapParams']() {
            if (this['_scene'] && this['_lightmapI' + 'ndex'] >= 0x0) {
                var _0x173c22 = this['_scene']['getlightma' + 'ps']();
                this['_lightmapI' + 'ndex'] < _0x173c22['length'] ? (this['_shaderVal' + 'ues']['addDefine'](_0x33bc07['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']), this['_shaderVal' + 'ues']['setTexture'](_0x33bc07['LIGHTMAP'], _0x173c22[this['_lightmapI' + 'ndex']])) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x33bc07['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']);
            } else
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x33bc07['SAHDERDEFI' + 'NE_LIGHTMA' + 'P']);
        }
        ['_onWorldMa' + 'tNeedChang' + 'e'](_0x18076c) {
            this['_boundsCha' + 'nge'] = !0x0, this['_octreeNod' + 'e'] && (_0x18076c &= _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE']) && -0x1 === this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this);
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            throw 'BaseRender' + ':\x20must\x20ove' + 'rride\x20it.';
        }
        ['_getIndexI' + 'nList']() {
            return this['_indexInLi' + 'st'];
        }
        ['_setIndexI' + 'nList'](_0x4caf49) {
            this['_indexInLi' + 'st'] = _0x4caf49;
        }
        ['_setBelong' + 'Scene'](_0x5dc8fa) {
            this['_scene'] !== _0x5dc8fa && (this['_scene'] = _0x5dc8fa, this['_applyLigh' + 'tMapParams']());
        }
        ['_needRende' + 'r'](_0x13dd27, _0x3d3b3a) {
            return !0x0;
        }
        ['_renderUpd' + 'ate'](_0x20adbe, _0x2337b4) {
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x4559cb, _0x3a3654) {
        }
        ['_revertBat' + 'chRenderUp' + 'date'](_0x477d84) {
        }
        ['_destroy']() {
            -0x1 !== this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['removeMoti' + 'onObject'](this), this['offAll']();
            var _0x17888f = 0x0, _0x599c72 = 0x0;
            for (_0x17888f = 0x0, _0x599c72 = this['_renderEle' + 'ments']['length']; _0x17888f < _0x599c72; _0x17888f++)
                this['_renderEle' + 'ments'][_0x17888f]['destroy']();
            for (_0x17888f = 0x0, _0x599c72 = this['_sharedMat' + 'erials']['length']; _0x17888f < _0x599c72; _0x17888f++)
                this['_sharedMat' + 'erials'][_0x17888f]['destroyed'] || this['_sharedMat' + 'erials'][_0x17888f]['_removeRef' + 'erence']();
            this['_renderEle' + 'ments'] = null, this['_owner'] = null, this['_sharedMat' + 'erials'] = null, this['_bounds'] = null, this['_lightmapS' + 'caleOffset'] = null;
        }
        ['markAsUnSt' + 'atic']() {
            this['_isPartOfS' + 'taticBatch'] && (_0x542a94['instance']['_removeRen' + 'derSprite'](this['_owner']), this['_isPartOfS' + 'taticBatch'] = !0x1);
        }
    }
    _0x26d0eb['_tempBound' + 'BoxCorners'] = [
        new _0x4795b3(),
        new _0x4795b3(),
        new _0x4795b3(),
        new _0x4795b3(),
        new _0x4795b3(),
        new _0x4795b3(),
        new _0x4795b3(),
        new _0x4795b3()
    ], _0x26d0eb['_uniqueIDC' + 'ounter'] = 0x0;
    class _0x1f30fc extends _0x26d0eb {
        constructor(_0x54b9ca) {
            super(_0x54b9ca), this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !0x1, this['_revertSta' + 'ticBatchDe' + 'fineLightM' + 'apUV'] = !0x1, this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x16c2be();
        }
        ['_createRen' + 'derElement']() {
            return new _0x1cdd46();
        }
        ['_onMeshCha' + 'nge'](_0x2d2ed0) {
            if (_0x2d2ed0) {
                var _0x350fc5 = _0x2d2ed0['subMeshCou' + 'nt'];
                this['_renderEle' + 'ments']['length'] = _0x350fc5;
                for (var _0x243c9e = 0x0; _0x243c9e < _0x350fc5; _0x243c9e++) {
                    var _0x15702f = this['_renderEle' + 'ments'][_0x243c9e];
                    if (!_0x15702f) {
                        var _0x369466 = this['sharedMate' + 'rials'][_0x243c9e];
                        (_0x15702f = this['_renderEle' + 'ments'][_0x243c9e] = this['_createRen' + 'derElement']())['setTransfo' + 'rm'](this['_owner']['_transform']), _0x15702f['render'] = this, _0x15702f['material'] = _0x369466 || _0x565ea0['defaultMat' + 'erial'];
                    }
                    _0x15702f['setGeometr' + 'y'](_0x2d2ed0['getSubMesh'](_0x243c9e));
                }
            } else
                this['_renderEle' + 'ments']['length'] = 0x0;
            this['_boundsCha' + 'nge'] = !0x0;
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x3c40d2 = this['_owner']['meshFilter']['sharedMesh'];
            if (_0x3c40d2) {
                var _0x3f6979 = this['_owner']['transform']['worldMatri' + 'x'];
                _0x3c40d2['bounds']['_tranform'](_0x3f6979, this['_bounds']);
            }
            if (_0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x4e655e = this['_bounds']['getMin'](), _0x348b57 = this['_bounds']['getMax'](), _0x57e549 = _0x2585ad['_cullingBu' + 'ffer'];
                _0x57e549[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x4e655e['x'], _0x57e549[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x4e655e['y'], _0x57e549[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x4e655e['z'], _0x57e549[this['_cullingBu' + 'fferIndex'] + 0x4] = _0x348b57['x'], _0x57e549[this['_cullingBu' + 'fferIndex'] + 0x5] = _0x348b57['y'], _0x57e549[this['_cullingBu' + 'fferIndex'] + 0x6] = _0x348b57['z'];
            }
        }
        ['_needRende' + 'r'](_0x5cf2fb, _0xfd37f1) {
            return !_0x5cf2fb || _0x5cf2fb['intersects'](this['bounds']['_getBoundB' + 'ox']());
        }
        ['_renderUpd' + 'ate'](_0xce5a15, _0x1e2174) {
            var _0x583b43 = _0xce5a15['renderElem' + 'ent'];
            switch (_0x583b43['renderType']) {
            case _0x14112a['RENDERTYPE' + '_NORMAL']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x1e2174['worldMatri' + 'x']);
                break;
            case _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH']:
                _0x1e2174 ? this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x1e2174['worldMatri' + 'x']) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x16c2be['DEFAULT']), this['_shaderVal' + 'ues']['hasDefine'](_0x22d0bb['SHADERDEFI' + 'NE_UV1']) ? this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !0x1 : (this['_shaderVal' + 'ues']['addDefine'](_0x22d0bb['SHADERDEFI' + 'NE_UV1']), this['_revertSta' + 'ticBatchDe' + 'fineUV1'] = !0x0), this['_shaderVal' + 'ues']['hasDefine'](_0x33bc07['SHADERDEFI' + 'NE_SCALEOF' + 'FSETLIGHTI' + 'NGMAPUV']) ? (this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x33bc07['SHADERDEFI' + 'NE_SCALEOF' + 'FSETLIGHTI' + 'NGMAPUV']), this['_revertSta' + 'ticBatchDe' + 'fineLightM' + 'apUV'] = !0x0) : this['_revertSta' + 'ticBatchDe' + 'fineLightM' + 'apUV'] = !0x1;
                break;
            case _0x14112a['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x16c2be['DEFAULT']);
                break;
            case _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                for (var _0x1fcb7c = _0x1b47c9['instance']['instanceWo' + 'rldMatrixD' + 'ata'], _0x141b3f = _0x583b43['instanceBa' + 'tchElement' + 'List'], _0x142833 = _0x141b3f['elements'], _0x3fcd0f = _0x141b3f['length'], _0x81c175 = 0x0; _0x81c175 < _0x3fcd0f; _0x81c175++)
                    _0x1fcb7c['set'](_0x142833[_0x81c175]['_transform']['worldMatri' + 'x']['elements'], 0x10 * _0x81c175);
                _0x1b47c9['instance']['instanceWo' + 'rldMatrixB' + 'uffer']['setData'](_0x1fcb7c['buffer'], 0x0, 0x0, 0x10 * _0x3fcd0f * 0x4), this['_shaderVal' + 'ues']['addDefine'](_0x22d0bb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
            }
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x4d1e09, _0xd5015) {
            var _0x5de9df = _0x4d1e09['projection' + 'ViewMatrix'], _0x1c5028 = _0x4d1e09['renderElem' + 'ent'];
            switch (_0x1c5028['renderType']) {
            case _0x14112a['RENDERTYPE' + '_NORMAL']:
            case _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH']:
            case _0x14112a['RENDERTYPE' + '_VERTEXBAT' + 'CH']:
                _0xd5015 ? (_0x16c2be['multiply'](_0x5de9df, _0xd5015['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix'])) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], _0x5de9df);
                break;
            case _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                for (var _0x4e6724 = _0x1b47c9['instance']['instanceMV' + 'PMatrixDat' + 'a'], _0x729e5e = _0x1c5028['instanceBa' + 'tchElement' + 'List'], _0x263c29 = _0x729e5e['elements'], _0x32472c = _0x729e5e['length'], _0x5b62a6 = 0x0; _0x5b62a6 < _0x32472c; _0x5b62a6++) {
                    var _0x4cfe5d = _0x263c29[_0x5b62a6]['_transform']['worldMatri' + 'x'];
                    _0x89f66e['mulMatrixB' + 'yArray'](_0x5de9df['elements'], 0x0, _0x4cfe5d['elements'], 0x0, _0x4e6724, 0x10 * _0x5b62a6);
                }
                _0x1b47c9['instance']['instanceMV' + 'PMatrixBuf' + 'fer']['setData'](_0x4e6724['buffer'], 0x0, 0x0, 0x10 * _0x32472c * 0x4);
            }
        }
        ['_revertBat' + 'chRenderUp' + 'date'](_0x425bcd) {
            switch (_0x425bcd['renderElem' + 'ent']['renderType']) {
            case _0x14112a['RENDERTYPE' + '_STATICBAT' + 'CH']:
                this['_revertSta' + 'ticBatchDe' + 'fineUV1'] && this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x22d0bb['SHADERDEFI' + 'NE_UV1']), this['_revertSta' + 'ticBatchDe' + 'fineLightM' + 'apUV'] && this['_shaderVal' + 'ues']['addDefine'](_0x33bc07['SHADERDEFI' + 'NE_SCALEOF' + 'FSETLIGHTI' + 'NGMAPUV']);
                break;
            case _0x14112a['RENDERTYPE' + '_INSTANCEB' + 'ATCH']:
                this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x22d0bb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE']);
            }
        }
        ['_destroy']() {
            this['_isPartOfS' + 'taticBatch'] && _0x542a94['instance']['_removeRen' + 'derSprite'](this['_owner']), super['_destroy']();
        }
    }
    class _0xa4f90b {
        constructor(_0x39dbc5) {
            this['_owner'] = _0x39dbc5;
        }
        get ['sharedMesh']() {
            return this['_sharedMes' + 'h'];
        }
        set ['sharedMesh'](_0x35faef) {
            if (this['_sharedMes' + 'h'] !== _0x35faef) {
                var _0x357c55 = this['_owner']['_render']['_shaderVal' + 'ues'], _0x38f507 = this['_sharedMes' + 'h'];
                if (_0x38f507) {
                    _0x38f507['_removeRef' + 'erence'](), this['_getMeshDe' + 'fine'](_0x38f507, _0xa4f90b['_meshVerti' + 'ceDefine']);
                    for (var _0xf96012 = 0x0, _0x495da7 = _0xa4f90b['_meshVerti' + 'ceDefine']['length']; _0xf96012 < _0x495da7; _0xf96012++)
                        _0x357c55['removeDefi' + 'ne'](_0xa4f90b['_meshVerti' + 'ceDefine'][_0xf96012]);
                }
                if (_0x35faef) {
                    _0x35faef['_addRefere' + 'nce'](), this['_getMeshDe' + 'fine'](_0x35faef, _0xa4f90b['_meshVerti' + 'ceDefine']);
                    for (_0xf96012 = 0x0, _0x495da7 = _0xa4f90b['_meshVerti' + 'ceDefine']['length']; _0xf96012 < _0x495da7; _0xf96012++)
                        _0x357c55['addDefine'](_0xa4f90b['_meshVerti' + 'ceDefine'][_0xf96012]);
                }
                this['_owner']['_render']['_onMeshCha' + 'nge'](_0x35faef), this['_sharedMes' + 'h'] = _0x35faef;
            }
        }
        ['_getMeshDe' + 'fine'](_0x3e6123, _0x4992e9) {
            _0x4992e9['length'] = 0x0;
            for (var _0x4e6d86 = 0x0, _0x2cba67 = _0x3e6123['_subMeshes']['length']; _0x4e6d86 < _0x2cba67; _0x4e6d86++)
                for (var _0x57a4cc = _0x3e6123['getSubMesh'](_0x4e6d86)['_vertexBuf' + 'fer']['_vertexDec' + 'laration']['_vertexEle' + 'ments'], _0x4ed7a8 = 0x0, _0x1c83eb = _0x57a4cc['length']; _0x4ed7a8 < _0x1c83eb; _0x4ed7a8++) {
                    switch (_0x57a4cc[_0x4ed7a8]['_elementUs' + 'age']) {
                    case _0xe3d46['MESH_COLOR' + '0']:
                        _0x4992e9['push'](_0x22d0bb['SHADERDEFI' + 'NE_COLOR']);
                        break;
                    case _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                        _0x4992e9['push'](_0x22d0bb['SHADERDEFI' + 'NE_UV0']);
                        break;
                    case _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                        _0x4992e9['push'](_0x22d0bb['SHADERDEFI' + 'NE_UV1']);
                    }
                }
        }
        ['destroy']() {
            this['_owner'] = null, this['_sharedMes' + 'h'] && (this['_sharedMes' + 'h']['_removeRef' + 'erence'](), this['_sharedMes' + 'h'] = null);
        }
    }
    _0xa4f90b['_meshVerti' + 'ceDefine'] = [];
    class _0x5d1ab6 extends _0x42e697 {
        constructor() {
            super(), this['_bufferSta' + 'te'] = new _0x59c541();
            var _0x1edf89 = _0x33d6e0['LayaGL']['instance'], _0x58d715 = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,COLO' + 'R,UV,UV1,T' + 'ANGENT')['vertexStri' + 'de'] * _0x5d1ab6['maxIndices' + 'Count'];
            this['_vertices'] = new Float32Array(_0x58d715 / 0x4), this['_vertexBuf' + 'fer'] = new _0x5dfaba(_0x58d715, _0x1edf89['DYNAMIC_DR' + 'AW']), this['_indices'] = new Int16Array(_0x5d1ab6['maxIndices' + 'Count']), this['_indexBuff' + 'er'] = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], this['_indices']['length'], _0x1edf89['DYNAMIC_DR' + 'AW']);
            var _0x4e1147 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + this['_indexBuff' + 'er']['_byteLengt' + 'h'];
            _0x33d6e0['Resource']['_addMemory'](_0x4e1147, _0x4e1147);
        }
        static ['__init__']() {
            _0x5d1ab6['instance'] = new _0x5d1ab6();
        }
        ['_getBatchV' + 'ertices'](_0x4b2a10, _0x5dbdb7, _0x5c2ccd, _0x5ebb8a, _0x31e90e, _0x1371d9) {
            var _0x3cea21 = _0x4b2a10['vertexStri' + 'de'] / 0x4, _0x5b6663 = _0x1371d9['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x34e36e = (_0x31e90e['render']['lightmapSc' + 'aleOffset'], _0x31e90e['_dynamicMu' + 'ltiSubMesh']), _0x3589a3 = _0x31e90e['_dynamicVe' + 'rtexCount'];
            _0x31e90e['_computeWo' + 'rldPositio' + 'nsAndNorma' + 'ls'](this['_positionO' + 'ffset'], this['_normalOff' + 'set'], _0x34e36e, _0x3589a3);
            for (var _0x11efef = _0x31e90e['_dynamicWo' + 'rldPositio' + 'ns'], _0x546f80 = _0x31e90e['_dynamicWo' + 'rldNormals'], _0x48c054 = _0x1371d9['_indices'], _0x2977db = 0x0; _0x2977db < _0x3589a3; _0x2977db++) {
                var _0x3ddd5a = (_0x34e36e ? _0x48c054[_0x2977db] : _0x2977db) * _0x3cea21, _0x42991c = (_0x2977db + _0x5c2ccd) * _0x3cea21, _0x3513f7 = 0x3 * _0x2977db, _0x5cb145 = _0x42991c + this['_positionO' + 'ffset'];
                _0x5dbdb7[_0x5cb145] = _0x11efef[_0x3513f7], _0x5dbdb7[_0x5cb145 + 0x1] = _0x11efef[_0x3513f7 + 0x1], _0x5dbdb7[_0x5cb145 + 0x2] = _0x11efef[_0x3513f7 + 0x2], -0x1 !== this['_normalOff' + 'set'] && (_0x5dbdb7[_0x5cb145 = _0x42991c + this['_normalOff' + 'set']] = _0x546f80[_0x3513f7], _0x5dbdb7[_0x5cb145 + 0x1] = _0x546f80[_0x3513f7 + 0x1], _0x5dbdb7[_0x5cb145 + 0x2] = _0x546f80[_0x3513f7 + 0x2]), -0x1 !== this['_colorOffs' + 'et'] && (_0x5cb145 = _0x42991c + this['_colorOffs' + 'et'], _0x3513f7 = _0x3ddd5a + this['_colorOffs' + 'et'], _0x5dbdb7[_0x5cb145] = _0x5b6663[_0x3513f7], _0x5dbdb7[_0x5cb145 + 0x1] = _0x5b6663[_0x3513f7 + 0x1], _0x5dbdb7[_0x5cb145 + 0x2] = _0x5b6663[_0x3513f7 + 0x2], _0x5dbdb7[_0x5cb145 + 0x3] = _0x5b6663[_0x3513f7 + 0x3]), -0x1 !== this['_uv0Offset'] && (_0x5cb145 = _0x42991c + this['_uv0Offset'], _0x3513f7 = _0x3ddd5a + this['_uv0Offset'], _0x5dbdb7[_0x5cb145] = _0x5b6663[_0x3513f7], _0x5dbdb7[_0x5cb145 + 0x1] = _0x5b6663[_0x3513f7 + 0x1]), -0x1 !== this['_sTangentO' + 'ffset'] && (_0x5cb145 = _0x42991c + this['_sTangentO' + 'ffset'], _0x3513f7 = _0x3ddd5a + this['_sTangentO' + 'ffset'], _0x5dbdb7[_0x5cb145] = _0x5b6663[_0x3513f7], _0x5dbdb7[_0x5cb145 + 0x1] = _0x5b6663[_0x3513f7 + 0x1], _0x5dbdb7[_0x5cb145 + 0x2] = _0x5b6663[_0x3513f7 + 0x2], _0x5dbdb7[_0x5cb145 + 0x3] = _0x5b6663[_0x3513f7 + 0x3], _0x5cb145 = _0x42991c + this['_sTangentO' + 'ffset'], _0x3513f7 = _0x3ddd5a + this['_sTangentO' + 'ffset'], _0x5dbdb7[_0x5cb145] = _0x5b6663[_0x3513f7], _0x5dbdb7[_0x5cb145 + 0x1] = _0x5b6663[_0x3513f7 + 0x1], _0x5dbdb7[_0x5cb145 + 0x2] = _0x5b6663[_0x3513f7 + 0x2], _0x5dbdb7[_0x5cb145 + 0x3] = _0x5b6663[_0x3513f7 + 0x3]);
            }
        }
        ['_getBatchI' + 'ndices'](_0x44920d, _0x2f3e2a, _0x4f1b2f, _0x6d696, _0x3d2bf7, _0x37307f) {
            var _0x399067, _0x4b167b, _0x1369e2, _0x48210e = _0x3d2bf7['_indices'], _0x529350 = _0x6d696['_isFrontFa' + 'ceInvert'];
            if (_0x37307f) {
                if (_0x529350)
                    for (_0x399067 = 0x0, _0x4b167b = _0x48210e['length']; _0x399067 < _0x4b167b; _0x399067 += 0x3) {
                        var _0x19abaa = _0x4f1b2f + _0x399067;
                        _0x44920d[_0x1369e2 = _0x2f3e2a + _0x399067] = _0x19abaa, _0x44920d[_0x1369e2 + 0x1] = _0x19abaa + 0x2, _0x44920d[_0x1369e2 + 0x2] = _0x19abaa + 0x1;
                    }
                else {
                    for (_0x399067 = 0x0, _0x4b167b = _0x48210e['length']; _0x399067 < _0x4b167b; _0x399067 += 0x3)
                        _0x19abaa = _0x4f1b2f + _0x399067, _0x44920d[_0x1369e2 = _0x2f3e2a + _0x399067] = _0x19abaa, _0x44920d[_0x1369e2 + 0x1] = _0x19abaa + 0x1, _0x44920d[_0x1369e2 + 0x2] = _0x19abaa + 0x2;
                }
            } else {
                if (_0x529350) {
                    for (_0x399067 = 0x0, _0x4b167b = _0x48210e['length']; _0x399067 < _0x4b167b; _0x399067 += 0x3)
                        _0x44920d[_0x1369e2 = _0x2f3e2a + _0x399067] = _0x4f1b2f + _0x48210e[_0x399067], _0x44920d[_0x1369e2 + 0x1] = _0x4f1b2f + _0x48210e[_0x399067 + 0x2], _0x44920d[_0x1369e2 + 0x2] = _0x4f1b2f + _0x48210e[_0x399067 + 0x1];
                } else {
                    for (_0x399067 = 0x0, _0x4b167b = _0x48210e['length']; _0x399067 < _0x4b167b; _0x399067 += 0x3)
                        _0x44920d[_0x1369e2 = _0x2f3e2a + _0x399067] = _0x4f1b2f + _0x48210e[_0x399067], _0x44920d[_0x1369e2 + 0x1] = _0x4f1b2f + _0x48210e[_0x399067 + 0x1], _0x44920d[_0x1369e2 + 0x2] = _0x4f1b2f + _0x48210e[_0x399067 + 0x2];
                }
            }
        }
        ['_flush'](_0x247800, _0x49e260) {
            var _0x54530e = _0x33d6e0['LayaGL']['instance'];
            this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, _0x247800 * this['_bufferSta' + 'te']['vertexDecl' + 'aration']['vertexStri' + 'de']), this['_indexBuff' + 'er']['setData'](this['_indices'], 0x0, 0x0, _0x49e260), _0x54530e['drawElemen' + 'ts'](_0x54530e['TRIANGLES'], _0x49e260, _0x54530e['UNSIGNED_S' + 'HORT'], 0x0);
        }
        ['_prepareRe' + 'nder'](_0x2d3f65) {
            var _0x3bdc92 = _0x2d3f65['renderElem' + 'ent']['vertexBatc' + 'hVertexDec' + 'laration'];
            this['_bufferSta' + 'te'] = _0x334864['MeshRender' + 'DynamicBat' + 'chManager']['instance']['_getBuffer' + 'State'](_0x3bdc92), this['_positionO' + 'ffset'] = _0x3bdc92['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_POSIT' + 'ION0'])['_offset'] / 0x4;
            var _0x5736b2 = _0x3bdc92['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_NORMA' + 'L0']);
            this['_normalOff' + 'set'] = _0x5736b2 ? _0x5736b2['_offset'] / 0x4 : -0x1;
            var _0x3b7cb1 = _0x3bdc92['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_COLOR' + '0']);
            this['_colorOffs' + 'et'] = _0x3b7cb1 ? _0x3b7cb1['_offset'] / 0x4 : -0x1;
            var _0x253db4 = _0x3bdc92['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
            this['_uv0Offset'] = _0x253db4 ? _0x253db4['_offset'] / 0x4 : -0x1;
            var _0x3f731e = _0x3bdc92['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
            this['_uv1Offset'] = _0x3f731e ? _0x3f731e['_offset'] / 0x4 : -0x1;
            var _0x1bc255 = _0x3bdc92['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TANGE' + 'NT0']);
            return this['_sTangentO' + 'ffset'] = _0x1bc255 ? _0x1bc255['_offset'] / 0x4 : -0x1, !0x0;
        }
        ['_render'](_0x391a1e) {
            this['_bufferSta' + 'te']['bind']();
            for (var _0x596ce4 = _0x391a1e['renderElem' + 'ent'], _0x5145f2 = _0x596ce4['vertexBatc' + 'hVertexDec' + 'laration'], _0x58bc18 = _0x596ce4['vertexBatc' + 'hElementLi' + 'st'], _0x14ac57 = 0x0, _0x19d55e = 0x0, _0x2b61f1 = (_0x5145f2['vertexStri' + 'de'], 0x0), _0x43b9f4 = _0x58bc18['length'], _0x2de9c2 = _0x58bc18['elements'], _0x2d1654 = 0x0; _0x2d1654 < _0x43b9f4; _0x2d1654++) {
                var _0x4d8a98 = _0x2de9c2[_0x2d1654], _0x2da193 = _0x4d8a98['_geometry'], _0xb914ab = _0x2da193['_indexCoun' + 't'];
                _0x19d55e + _0xb914ab > _0x5d1ab6['maxIndices' + 'Count'] && (this['_flush'](_0x14ac57, _0x19d55e), _0x2b61f1++, _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x19d55e / 0x3, _0x14ac57 = _0x19d55e = 0x0);
                var _0x3d3c6b = _0x4d8a98['_transform'];
                this['_getBatchV' + 'ertices'](_0x5145f2, this['_vertices'], _0x14ac57, _0x3d3c6b, _0x4d8a98, _0x2da193), this['_getBatchI' + 'ndices'](this['_indices'], _0x19d55e, _0x14ac57, _0x3d3c6b, _0x2da193, _0x4d8a98['_dynamicMu' + 'ltiSubMesh']), _0x14ac57 += _0x4d8a98['_dynamicVe' + 'rtexCount'], _0x19d55e += _0xb914ab;
            }
            this['_flush'](_0x14ac57, _0x19d55e), _0x2b61f1++, _0x33d6e0['Stat']['renderBatc' + 'hes'] += _0x2b61f1, _0x33d6e0['Stat']['savedRende' + 'rBatches'] += _0x43b9f4 - _0x2b61f1, _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x19d55e / 0x3;
        }
    }
    _0x5d1ab6['maxAllowVe' + 'rtexCount'] = 0xa, _0x5d1ab6['maxAllowAt' + 'tribueCoun' + 't'] = 0x384, _0x5d1ab6['maxIndices' + 'Count'] = 0x7d00;
    class _0x4972f1 extends _0x328d6f {
        constructor() {
            super(), this['_instanceB' + 'atchOpaque' + 'Marks'] = [], this['_vertexBat' + 'chOpaqueMa' + 'rks'] = [], this['_cacheBuff' + 'erStates'] = [], this['_updateCou' + 'ntMark'] = 0x0;
        }
        ['getInstanc' + 'eBatchOpaq' + 'uaMark'](_0x2a66bf, _0x10a128, _0x5113c9, _0x3bdbd1) {
            var _0x21e344 = this['_instanceB' + 'atchOpaque' + 'Marks'][_0x2a66bf ? 0x0 : 0x1] || (this['_instanceB' + 'atchOpaque' + 'Marks'][_0x2a66bf ? 0x0 : 0x1] = []), _0x7074a = _0x21e344[_0x10a128] || (_0x21e344[_0x10a128] = []), _0x374446 = _0x7074a[_0x5113c9] || (_0x7074a[_0x5113c9] = []);
            return _0x374446[_0x3bdbd1 ? 0x1 : 0x0] || (_0x374446[_0x3bdbd1 ? 0x1 : 0x0] = new _0x389da5());
        }
        ['getVertexB' + 'atchOpaqua' + 'Mark'](_0x3fd67c, _0x1d66e7, _0x52dff, _0x370b10) {
            var _0xe871a0 = this['_vertexBat' + 'chOpaqueMa' + 'rks'][_0x3fd67c] || (this['_vertexBat' + 'chOpaqueMa' + 'rks'][_0x3fd67c] = []), _0xb70a1 = _0xe871a0[_0x1d66e7 ? 0x0 : 0x1] || (_0xe871a0[_0x1d66e7 ? 0x0 : 0x1] = []), _0x1171b5 = _0xb70a1[_0x52dff] || (_0xb70a1[_0x52dff] = []);
            return _0x1171b5[_0x370b10] || (_0x1171b5[_0x370b10] = new _0x389da5());
        }
        ['_getBuffer' + 'State'](_0x3e2c20) {
            var _0x4785d2 = this['_cacheBuff' + 'erStates'][_0x3e2c20['id']];
            if (!_0x4785d2) {
                var _0x56a964 = _0x5d1ab6['instance'];
                (_0x4785d2 = new _0x59c541())['bind']();
                var _0x2b7b68 = _0x56a964['_vertexBuf' + 'fer'];
                _0x2b7b68['vertexDecl' + 'aration'] = _0x3e2c20, _0x4785d2['applyVerte' + 'xBuffer'](_0x2b7b68), _0x4785d2['applyIndex' + 'Buffer'](_0x56a964['_indexBuff' + 'er']), _0x4785d2['unBind'](), this['_cacheBuff' + 'erStates'][_0x3e2c20['id']] = _0x4785d2;
            }
            return _0x4785d2;
        }
        ['_getBatchR' + 'enderEleme' + 'ntFromPool']() {
            var _0x174c89 = this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex']++];
            return _0x174c89 || (_0x174c89 = new _0x1cdd46(), this['_batchRend' + 'erElementP' + 'ool'][this['_batchRend' + 'erElementP' + 'oolIndex'] - 0x1] = _0x174c89, _0x174c89['vertexBatc' + 'hElementLi' + 'st'] = new _0x16b19d(), _0x174c89['instanceBa' + 'tchElement' + 'List'] = new _0x16b19d()), _0x174c89;
        }
        ['_clear']() {
            super['_clear'](), this['_updateCou' + 'ntMark']++;
        }
    }
    _0x4972f1['instance'] = new _0x4972f1();
    class _0x6ac009 extends _0x33bc07 {
        static ['__init__']() {
            _0x22d0bb['SHADERDEFI' + 'NE_UV0'] = _0x1ede74['getDefineB' + 'yName']('UV'), _0x22d0bb['SHADERDEFI' + 'NE_COLOR'] = _0x1ede74['getDefineB' + 'yName']('COLOR'), _0x22d0bb['SHADERDEFI' + 'NE_UV1'] = _0x1ede74['getDefineB' + 'yName']('UV1'), _0x22d0bb['SHADERDEFI' + 'NE_GPU_INS' + 'TANCE'] = _0x1ede74['getDefineB' + 'yName']('GPU_INSTAN' + 'CE'), _0x11568b['_registerM' + 'anager'](_0x542a94['instance']), _0x328d6f['_registerM' + 'anager'](_0x4972f1['instance']);
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['meshRender' + 'er']() {
            return this['_render'];
        }
        constructor(_0x3212d8 = null, _0x1ce94b = null) {
            super(_0x1ce94b), this['_meshFilte' + 'r'] = new _0xa4f90b(this), this['_render'] = new _0x1f30fc(this), _0x3212d8 && (this['_meshFilte' + 'r']['sharedMesh'] = _0x3212d8);
        }
        ['_parse'](_0xbaf965, _0x469fd3) {
            super['_parse'](_0xbaf965, _0x469fd3);
            var _0x280da9 = this['meshRender' + 'er'], _0x1fb368 = _0xbaf965['lightmapIn' + 'dex'];
            null != _0x1fb368 && (_0x280da9['lightmapIn' + 'dex'] = _0x1fb368);
            var _0x4e8662 = _0xbaf965['lightmapSc' + 'aleOffset'];
            _0x4e8662 && (_0x280da9['lightmapSc' + 'aleOffset'] = new _0x333f41(_0x4e8662[0x0], _0x4e8662[0x1], _0x4e8662[0x2], _0x4e8662[0x3])), null != _0xbaf965['meshPath'] && (this['meshFilter']['sharedMesh'] = _0x33d6e0['Loader']['getRes'](_0xbaf965['meshPath'])), null != _0xbaf965['enableRend' + 'er'] && (this['meshRender' + 'er']['enable'] = _0xbaf965['enableRend' + 'er']);
            var _0x2fa58 = _0xbaf965['materials'];
            if (_0x2fa58) {
                var _0x2b3f4f = _0x280da9['sharedMate' + 'rials'], _0x319b3f = _0x2fa58['length'];
                _0x2b3f4f['length'] = _0x319b3f;
                for (var _0x3bac53 = 0x0; _0x3bac53 < _0x319b3f; _0x3bac53++)
                    _0x2b3f4f[_0x3bac53] = _0x33d6e0['Loader']['getRes'](_0x2fa58[_0x3bac53]['path']);
                _0x280da9['sharedMate' + 'rials'] = _0x2b3f4f;
            }
        }
        ['_addToInit' + 'StaticBatc' + 'hManager']() {
            this['meshFilter']['sharedMesh'] && _0x542a94['instance']['_addBatchS' + 'prite'](this);
        }
        ['_cloneTo'](_0x4fa183, _0x16ee8d, _0x587f0e) {
            var _0x5cbc8b = _0x4fa183;
            _0x5cbc8b['_meshFilte' + 'r']['sharedMesh'] = this['_meshFilte' + 'r']['sharedMesh'];
            var _0x21a086 = this['_render'], _0x332b56 = _0x5cbc8b['_render'];
            _0x332b56['enable'] = _0x21a086['enable'], _0x332b56['sharedMate' + 'rials'] = _0x21a086['sharedMate' + 'rials'], _0x332b56['castShadow'] = _0x21a086['castShadow'];
            var _0x478524 = _0x21a086['lightmapSc' + 'aleOffset'];
            _0x478524 && (_0x332b56['lightmapSc' + 'aleOffset'] = _0x478524['clone']()), _0x332b56['lightmapIn' + 'dex'] = _0x21a086['lightmapIn' + 'dex'], _0x332b56['receiveSha' + 'dow'] = _0x21a086['receiveSha' + 'dow'], _0x332b56['sortingFud' + 'ge'] = _0x21a086['sortingFud' + 'ge'], super['_cloneTo'](_0x4fa183, _0x16ee8d, _0x587f0e);
        }
        ['destroy'](_0x2bdd07 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x2bdd07), this['_meshFilte' + 'r']['destroy']());
        }
        ['_create']() {
            return new _0x6ac009();
        }
    }
    class _0x49bf14 {
    }
    _0x49bf14['Blend'] = 0x0, _0x49bf14['Fixed'] = 0x1;
    class _0x20a4d3 {
        constructor(_0x4f9fe5, _0x55aeab) {
            this['_mode'] = 0x0, this['_maxColorR' + 'GBKeysCoun' + 't'] = 0x0, this['_maxColorA' + 'lphaKeysCo' + 'unt'] = 0x0, this['_colorRGBK' + 'eysCount'] = 0x0, this['_colorAlph' + 'aKeysCount'] = 0x0, this['_alphaElem' + 'ents'] = null, this['_rgbElemen' + 'ts'] = null, this['_maxColorR' + 'GBKeysCoun' + 't'] = _0x4f9fe5, this['_maxColorA' + 'lphaKeysCo' + 'unt'] = _0x55aeab, this['_rgbElemen' + 'ts'] = new Float32Array(0x4 * _0x4f9fe5), this['_alphaElem' + 'ents'] = new Float32Array(0x2 * _0x55aeab);
        }
        get ['mode']() {
            return this['_mode'];
        }
        set ['mode'](_0x84d27e) {
            this['_mode'] = _0x84d27e;
        }
        get ['colorRGBKe' + 'ysCount']() {
            return this['_colorRGBK' + 'eysCount'];
        }
        get ['colorAlpha' + 'KeysCount']() {
            return this['_colorAlph' + 'aKeysCount'];
        }
        get ['maxColorRG' + 'BKeysCount']() {
            return this['_maxColorR' + 'GBKeysCoun' + 't'];
        }
        get ['maxColorAl' + 'phaKeysCou' + 'nt']() {
            return this['_maxColorA' + 'lphaKeysCo' + 'unt'];
        }
        ['addColorRG' + 'B'](_0x5d98f4, _0x293e60) {
            if (this['_colorRGBK' + 'eysCount'] < this['_maxColorR' + 'GBKeysCoun' + 't']) {
                var _0x33f6f4 = 0x4 * this['_colorRGBK' + 'eysCount'];
                this['_rgbElemen' + 'ts'][_0x33f6f4] = _0x5d98f4, this['_rgbElemen' + 'ts'][_0x33f6f4 + 0x1] = _0x293e60['r'], this['_rgbElemen' + 'ts'][_0x33f6f4 + 0x2] = _0x293e60['g'], this['_rgbElemen' + 'ts'][_0x33f6f4 + 0x3] = _0x293e60['b'], this['_colorRGBK' + 'eysCount']++;
            } else
                console['warn']('Gradient:w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x20' + this['_maxColorR' + 'GBKeysCoun' + 't']);
        }
        ['addColorAl' + 'pha'](_0x140b79, _0x14c225) {
            if (this['_colorAlph' + 'aKeysCount'] < this['_maxColorA' + 'lphaKeysCo' + 'unt']) {
                var _0x5a95f1 = 0x2 * this['_colorAlph' + 'aKeysCount'];
                this['_alphaElem' + 'ents'][_0x5a95f1] = _0x140b79, this['_alphaElem' + 'ents'][_0x5a95f1 + 0x1] = _0x14c225, this['_colorAlph' + 'aKeysCount']++;
            } else
                console['warn']('Gradient:w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x20' + this['_maxColorA' + 'lphaKeysCo' + 'unt']);
        }
        ['updateColo' + 'rRGB'](_0x3cb2f4, _0x5ee865, _0x22792d) {
            if (_0x3cb2f4 < this['_colorRGBK' + 'eysCount']) {
                var _0x122da5 = 0x4 * _0x3cb2f4;
                this['_rgbElemen' + 'ts'][_0x122da5] = _0x5ee865, this['_rgbElemen' + 'ts'][_0x122da5 + 0x1] = _0x22792d['r'], this['_rgbElemen' + 'ts'][_0x122da5 + 0x2] = _0x22792d['g'], this['_rgbElemen' + 'ts'][_0x122da5 + 0x3] = _0x22792d['b'];
            } else
                console['warn']('Gradient:w' + 'arning:ind' + 'ex\x20must\x20le' + 'ssEqual\x20th' + 'an\x20colorRG' + 'BKeysCount' + ':' + this['_colorRGBK' + 'eysCount']);
        }
        ['updateColo' + 'rAlpha'](_0x3d6b31, _0x1dab2b, _0x19a6ba) {
            if (_0x3d6b31 < this['_colorAlph' + 'aKeysCount']) {
                var _0x4cd6d8 = 0x2 * _0x3d6b31;
                this['_alphaElem' + 'ents'][_0x4cd6d8] = _0x1dab2b, this['_alphaElem' + 'ents'][_0x4cd6d8 + 0x1] = _0x19a6ba;
            } else
                console['warn']('Gradient:w' + 'arning:ind' + 'ex\x20must\x20le' + 'ssEqual\x20th' + 'an\x20colorAl' + 'phaKeysCou' + 'nt:' + this['_colorAlph' + 'aKeysCount']);
        }
        ['evaluateCo' + 'lorRGB'](_0x4a02c9, _0x2efaa5, _0x47f140 = 0x0, _0x221a90 = !0x1) {
            _0x4a02c9 = Math['min'](Math['max'](_0x4a02c9, 0x0), 0x1);
            var _0xd62e7a = this['_rgbElemen' + 'ts'], _0x25f1f2 = _0x47f140;
            if (_0x221a90)
                for (var _0x56802e = _0x25f1f2; _0x56802e >= 0x0; _0x56802e--) {
                    var _0x1ffe57 = 0x4 * _0x56802e;
                    if (_0x4a02c9 === (_0x5b4421 = _0xd62e7a[_0x1ffe57]))
                        return _0x2efaa5['r'] = _0xd62e7a[_0x1ffe57 + 0x1], _0x2efaa5['g'] = _0xd62e7a[_0x1ffe57 + 0x2], _0x2efaa5['b'] = _0xd62e7a[_0x1ffe57 + 0x3], _0x25f1f2;
                    switch (this['_mode']) {
                    case _0x49bf14['Blend']:
                        if (_0x4a02c9 > _0x5b4421) {
                            if (_0x4a02c9 > (_0xfad8f0 = _0xd62e7a[_0x1ffe57 + 0x4]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x596cd5 = _0xfad8f0 - _0x5b4421, _0x372558 = _0xfad8f0 - _0x4a02c9, _0x29689d = _0x4a02c9 - _0x5b4421;
                            return _0x2efaa5['r'] = (_0x372558 * _0xd62e7a[_0x1ffe57 + 0x1] + _0x29689d * _0xd62e7a[_0x1ffe57 + 0x5]) / _0x596cd5, _0x2efaa5['g'] = (_0x372558 * _0xd62e7a[_0x1ffe57 + 0x2] + _0x29689d * _0xd62e7a[_0x1ffe57 + 0x6]) / _0x596cd5, _0x2efaa5['b'] = (_0x372558 * _0xd62e7a[_0x1ffe57 + 0x3] + _0x29689d * _0xd62e7a[_0x1ffe57 + 0x7]) / _0x596cd5, _0x25f1f2;
                        }
                        _0x25f1f2--;
                        continue;
                    case _0x49bf14['Fixed']:
                        if (_0x4a02c9 > _0x5b4421) {
                            if (_0x4a02c9 > _0xd62e7a[_0x1ffe57 + 0x4])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x2efaa5['r'] = _0xd62e7a[_0x1ffe57 + 0x5], _0x2efaa5['g'] = _0xd62e7a[_0x1ffe57 + 0x6], _0x2efaa5['b'] = _0xd62e7a[_0x1ffe57 + 0x7], _0x25f1f2;
                        }
                        _0x25f1f2--;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            else {
                _0x56802e = 0x0;
                for (var _0x3c9d2f = this['_rgbElemen' + 'ts']['length']; _0x56802e < _0x3c9d2f; _0x56802e++) {
                    var _0xfad8f0;
                    if (_0x4a02c9 === (_0xfad8f0 = _0xd62e7a[_0x1ffe57 = 0x4 * _0x56802e]))
                        return _0x2efaa5['r'] = _0xd62e7a[_0x1ffe57 + 0x1], _0x2efaa5['g'] = _0xd62e7a[_0x1ffe57 + 0x2], _0x2efaa5['b'] = _0xd62e7a[_0x1ffe57 + 0x3], _0x25f1f2;
                    switch (this['_mode']) {
                    case _0x49bf14['Blend']:
                        if (_0x4a02c9 < _0xfad8f0) {
                            var _0x5b4421;
                            if (_0x4a02c9 < (_0x5b4421 = _0xd62e7a[_0x1ffe57 - 0x4]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x596cd5 = _0xfad8f0 - _0x5b4421, _0x372558 = _0xfad8f0 - _0x4a02c9, _0x29689d = _0x4a02c9 - _0x5b4421, (_0x2efaa5['r'] = (_0x372558 * _0xd62e7a[_0x1ffe57 - 0x3] + _0x29689d * _0xd62e7a[_0x1ffe57 + 0x1]) / _0x596cd5, _0x2efaa5['g'] = (_0x372558 * _0xd62e7a[_0x1ffe57 - 0x2] + _0x29689d * _0xd62e7a[_0x1ffe57 + 0x2]) / _0x596cd5, _0x2efaa5['b'] = (_0x372558 * _0xd62e7a[_0x1ffe57 - 0x1] + _0x29689d * _0xd62e7a[_0x1ffe57 + 0x3]) / _0x596cd5, _0x25f1f2);
                        }
                        _0x25f1f2++;
                        continue;
                    case _0x49bf14['Fixed']:
                        if (_0x4a02c9 < _0xfad8f0) {
                            if (_0x4a02c9 < _0xd62e7a[_0x1ffe57 - 0x4])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x2efaa5['r'] = _0xd62e7a[_0x1ffe57 + 0x1], _0x2efaa5['g'] = _0xd62e7a[_0x1ffe57 + 0x2], _0x2efaa5['b'] = _0xd62e7a[_0x1ffe57 + 0x3], _0x25f1f2;
                        }
                        _0x25f1f2++;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            }
            return _0x25f1f2;
        }
        ['evaluateCo' + 'lorAlpha'](_0xa1c9e5, _0x4c8b82, _0x3ec6bc = 0x0, _0x1f2bff = !0x1) {
            _0xa1c9e5 = Math['min'](Math['max'](_0xa1c9e5, 0x0), 0x1);
            var _0x45c6a8 = this['_alphaElem' + 'ents'], _0x43c032 = _0x3ec6bc;
            if (_0x1f2bff)
                for (var _0x14b4a8 = _0x43c032; _0x14b4a8 >= 0x0; _0x14b4a8--) {
                    if (_0xa1c9e5 === (_0x593ff5 = _0x45c6a8[_0x425556 = 0x2 * _0x14b4a8]))
                        return _0x4c8b82['a'] = _0x45c6a8[_0x425556 + 0x1], _0x43c032;
                    switch (this['_mode']) {
                    case _0x49bf14['Blend']:
                        if (_0xa1c9e5 > _0x593ff5) {
                            if (_0xa1c9e5 > (_0x2b09cb = _0x45c6a8[_0x425556 + 0x2]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            var _0x5f501f = _0x2b09cb - _0x593ff5, _0x3bd6d5 = _0x2b09cb - _0xa1c9e5, _0x7d0706 = _0xa1c9e5 - _0x593ff5;
                            return _0x4c8b82['a'] = (_0x3bd6d5 * _0x45c6a8[_0x425556 + 0x1] + _0x7d0706 * _0x45c6a8[_0x425556 + 0x3]) / _0x5f501f, _0x43c032;
                        }
                        _0x43c032--;
                        continue;
                    case _0x49bf14['Fixed']:
                        if (_0xa1c9e5 > _0x593ff5) {
                            if (_0xa1c9e5 > _0x45c6a8[_0x425556 + 0x2])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x4c8b82['a'] = _0x45c6a8[_0x425556 + 0x3], _0x43c032;
                        }
                        _0x43c032--;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            else {
                _0x14b4a8 = _0x43c032;
                for (var _0x2cab83 = this['_alphaElem' + 'ents']['length']; _0x14b4a8 < _0x2cab83; _0x14b4a8++) {
                    var _0x425556, _0x2b09cb;
                    if (_0xa1c9e5 === (_0x2b09cb = _0x45c6a8[_0x425556 = 0x2 * _0x14b4a8]))
                        return _0x4c8b82['a'] = _0x45c6a8[_0x425556 + 0x1], _0x43c032;
                    switch (this['_mode']) {
                    case _0x49bf14['Blend']:
                        if (_0xa1c9e5 < _0x2b09cb) {
                            var _0x593ff5;
                            if (_0xa1c9e5 < (_0x593ff5 = _0x45c6a8[_0x425556 - 0x2]))
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x5f501f = _0x2b09cb - _0x593ff5, _0x3bd6d5 = _0x2b09cb - _0xa1c9e5, _0x7d0706 = _0xa1c9e5 - _0x593ff5, (_0x4c8b82['a'] = (_0x3bd6d5 * _0x45c6a8[_0x425556 - 0x1] + _0x7d0706 * _0x45c6a8[_0x425556 + 0x1]) / _0x5f501f, _0x43c032);
                        }
                        _0x43c032++;
                        continue;
                    case _0x49bf14['Fixed']:
                        if (_0xa1c9e5 < _0x2b09cb) {
                            if (_0xa1c9e5 < _0x45c6a8[_0x425556 - 0x2])
                                throw 'Gradient:w' + 'rong\x20start' + 'SearchInde' + 'x.';
                            return _0x4c8b82['a'] = _0x45c6a8[_0x425556 + 0x1], _0x43c032;
                        }
                        _0x43c032++;
                        continue;
                    default:
                        throw 'Gradient:u' + 'nknown\x20mod' + 'e.';
                    }
                }
            }
            return _0x43c032;
        }
        ['cloneTo'](_0xfac4a2) {
            var _0x5fdda2, _0x4b2dc5, _0x13ffab = _0xfac4a2;
            _0x13ffab['_colorAlph' + 'aKeysCount'] = this['_colorAlph' + 'aKeysCount'];
            var _0x183b35 = _0x13ffab['_alphaElem' + 'ents'];
            for (_0x5fdda2 = 0x0, _0x4b2dc5 = this['_alphaElem' + 'ents']['length']; _0x5fdda2 < _0x4b2dc5; _0x5fdda2++)
                _0x183b35[_0x5fdda2] = this['_alphaElem' + 'ents'][_0x5fdda2];
            _0x13ffab['_colorRGBK' + 'eysCount'] = this['_colorRGBK' + 'eysCount'];
            var _0x23f94d = _0x13ffab['_rgbElemen' + 'ts'];
            for (_0x5fdda2 = 0x0, _0x4b2dc5 = this['_rgbElemen' + 'ts']['length']; _0x5fdda2 < _0x4b2dc5; _0x5fdda2++)
                _0x23f94d[_0x5fdda2] = this['_rgbElemen' + 'ts'][_0x5fdda2];
        }
        ['clone']() {
            var _0x3fd0e6 = new _0x20a4d3(this['_maxColorR' + 'GBKeysCoun' + 't'], this['_maxColorA' + 'lphaKeysCo' + 'unt']);
            return this['cloneTo'](_0x3fd0e6), _0x3fd0e6;
        }
    }
    class _0x32b46a {
        get ['time']() {
            return this['_time'];
        }
        get ['minCount']() {
            return this['_minCount'];
        }
        get ['maxCount']() {
            return this['_maxCount'];
        }
        constructor(_0xeb5c02, _0x220761, _0x72854f) {
            this['_time'] = _0xeb5c02, this['_minCount'] = _0x220761, this['_maxCount'] = _0x72854f;
        }
        ['cloneTo'](_0x36ce5b) {
            var _0x203eaf = _0x36ce5b;
            _0x203eaf['_time'] = this['_time'], _0x203eaf['_minCount'] = this['_minCount'], _0x203eaf['_maxCount'] = this['_maxCount'];
        }
        ['clone']() {
            var _0x4d2ac1 = new _0x32b46a(this['_time'], this['_minCount'], this['_maxCount']);
            return this['cloneTo'](_0x4d2ac1), _0x4d2ac1;
        }
    }
    class _0x45c823 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = null, this['_constantM' + 'in'] = null, this['_constantM' + 'ax'] = null, this['_gradient'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null;
        }
        static ['createByCo' + 'nstant'](_0x32ee1d) {
            var _0x2c5926 = new _0x45c823();
            return _0x2c5926['_type'] = 0x0, _0x2c5926['_constant'] = _0x32ee1d, _0x2c5926;
        }
        static ['createByGr' + 'adient'](_0x26fddc) {
            var _0x2e8176 = new _0x45c823();
            return _0x2e8176['_type'] = 0x1, _0x2e8176['_gradient'] = _0x26fddc, _0x2e8176;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x120adb, _0x157a44) {
            var _0xbf1fce = new _0x45c823();
            return _0xbf1fce['_type'] = 0x2, _0xbf1fce['_constantM' + 'in'] = _0x120adb, _0xbf1fce['_constantM' + 'ax'] = _0x157a44, _0xbf1fce;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x39a2a1, _0x3b5394) {
            var _0x5db521 = new _0x45c823();
            return _0x5db521['_type'] = 0x3, _0x5db521['_gradientM' + 'in'] = _0x39a2a1, _0x5db521['_gradientM' + 'ax'] = _0x3b5394, _0x5db521;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        ['cloneTo'](_0x256c44) {
            var _0x2edcc3 = _0x256c44;
            _0x2edcc3['_type'] = this['_type'], this['_constant']['cloneTo'](_0x2edcc3['_constant']), this['_constantM' + 'in']['cloneTo'](_0x2edcc3['_constantM' + 'in']), this['_constantM' + 'ax']['cloneTo'](_0x2edcc3['_constantM' + 'ax']), this['_gradient']['cloneTo'](_0x2edcc3['_gradient']), this['_gradientM' + 'in']['cloneTo'](_0x2edcc3['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x2edcc3['_gradientM' + 'ax']);
        }
        ['clone']() {
            var _0x526058 = new _0x45c823();
            return this['cloneTo'](_0x526058), _0x526058;
        }
    }
    class _0x809633 {
        get ['color']() {
            return this['_color'];
        }
        constructor(_0x57d7bd) {
            this['_color'] = _0x57d7bd;
        }
        ['cloneTo'](_0x5e41f0) {
            var _0x4db4aa = _0x5e41f0;
            this['_color']['cloneTo'](_0x4db4aa['_color']), _0x4db4aa['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x5b5cf1;
            switch (this['_color']['type']) {
            case 0x0:
                _0x5b5cf1 = _0x45c823['createByCo' + 'nstant'](this['_color']['constant']['clone']());
                break;
            case 0x1:
                _0x5b5cf1 = _0x45c823['createByGr' + 'adient'](this['_color']['gradient']['clone']());
                break;
            case 0x2:
                _0x5b5cf1 = _0x45c823['createByRa' + 'ndomTwoCon' + 'stant'](this['_color']['constantMi' + 'n']['clone'](), this['_color']['constantMa' + 'x']['clone']());
                break;
            case 0x3:
                _0x5b5cf1 = _0x45c823['createByRa' + 'ndomTwoGra' + 'dient'](this['_color']['gradientMi' + 'n']['clone'](), this['_color']['gradientMa' + 'x']['clone']());
            }
            var _0x36c615 = new _0x809633(_0x5b5cf1);
            return _0x36c615['enable'] = this['enable'], _0x36c615;
        }
    }
    class _0x5c4f1e {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = 0x0, this['_overTime'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_overTimeM' + 'in'] = null, this['_overTimeM' + 'ax'] = null;
        }
        static ['createByCo' + 'nstant'](_0x3dcfce = 0x0) {
            var _0x113aa0 = new _0x5c4f1e();
            return _0x113aa0['_type'] = 0x0, _0x113aa0['_constant'] = _0x3dcfce, _0x113aa0;
        }
        static ['createByOv' + 'erTime'](_0x321dd5) {
            var _0x49be84 = new _0x5c4f1e();
            return _0x49be84['_type'] = 0x1, _0x49be84['_overTime'] = _0x321dd5, _0x49be84;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x403245 = 0x0, _0x14d30f = 0x0) {
            var _0x3eb8fb = new _0x5c4f1e();
            return _0x3eb8fb['_type'] = 0x2, _0x3eb8fb['_constantM' + 'in'] = _0x403245, _0x3eb8fb['_constantM' + 'ax'] = _0x14d30f, _0x3eb8fb;
        }
        static ['createByRa' + 'ndomTwoOve' + 'rTime'](_0x14eb7a, _0x6335e9) {
            var _0x125720 = new _0x5c4f1e();
            return _0x125720['_type'] = 0x3, _0x125720['_overTimeM' + 'in'] = _0x14eb7a, _0x125720['_overTimeM' + 'ax'] = _0x6335e9, _0x125720;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['frameOverT' + 'imeData']() {
            return this['_overTime'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['frameOverT' + 'imeDataMin']() {
            return this['_overTimeM' + 'in'];
        }
        get ['frameOverT' + 'imeDataMax']() {
            return this['_overTimeM' + 'ax'];
        }
        ['cloneTo'](_0x5930ce) {
            var _0x5238ec = _0x5930ce;
            _0x5238ec['_type'] = this['_type'], _0x5238ec['_constant'] = this['_constant'], this['_overTime'] && this['_overTime']['cloneTo'](_0x5238ec['_overTime']), _0x5238ec['_constantM' + 'in'] = this['_constantM' + 'in'], _0x5238ec['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_overTimeM' + 'in'] && this['_overTimeM' + 'in']['cloneTo'](_0x5238ec['_overTimeM' + 'in']), this['_overTimeM' + 'ax'] && this['_overTimeM' + 'ax']['cloneTo'](_0x5238ec['_overTimeM' + 'ax']);
        }
        ['clone']() {
            var _0x21b98c = new _0x5c4f1e();
            return this['cloneTo'](_0x21b98c), _0x21b98c;
        }
    }
    class _0x8e6cf8 {
        constructor() {
            this['_type'] = 0x0, this['_separateA' + 'xes'] = !0x1, this['_constant'] = 0x0, this['_constantS' + 'eparate'] = null, this['_gradient'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_gradientW'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_constantM' + 'inSeparate'] = null, this['_constantM' + 'axSeparate'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null, this['_gradientW' + 'Min'] = null, this['_gradientW' + 'Max'] = null;
        }
        static ['createByCo' + 'nstant'](_0x4604cf) {
            var _0x142bfd = new _0x8e6cf8();
            return _0x142bfd['_type'] = 0x0, _0x142bfd['_separateA' + 'xes'] = !0x1, _0x142bfd['_constant'] = _0x4604cf, _0x142bfd;
        }
        static ['createByCo' + 'nstantSepa' + 'rate'](_0x3bc26e) {
            var _0x494075 = new _0x8e6cf8();
            return _0x494075['_type'] = 0x0, _0x494075['_separateA' + 'xes'] = !0x0, _0x494075['_constantS' + 'eparate'] = _0x3bc26e, _0x494075;
        }
        static ['createByGr' + 'adient'](_0x48c928) {
            var _0x574d02 = new _0x8e6cf8();
            return _0x574d02['_type'] = 0x1, _0x574d02['_separateA' + 'xes'] = !0x1, _0x574d02['_gradient'] = _0x48c928, _0x574d02;
        }
        static ['createByGr' + 'adientSepa' + 'rate'](_0x2f0194, _0x402673, _0x20f64f) {
            var _0x191c8d = new _0x8e6cf8();
            return _0x191c8d['_type'] = 0x1, _0x191c8d['_separateA' + 'xes'] = !0x0, _0x191c8d['_gradientX'] = _0x2f0194, _0x191c8d['_gradientY'] = _0x402673, _0x191c8d['_gradientZ'] = _0x20f64f, _0x191c8d;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x5a4c1e, _0x182356) {
            var _0x7d67e8 = new _0x8e6cf8();
            return _0x7d67e8['_type'] = 0x2, _0x7d67e8['_separateA' + 'xes'] = !0x1, _0x7d67e8['_constantM' + 'in'] = _0x5a4c1e, _0x7d67e8['_constantM' + 'ax'] = _0x182356, _0x7d67e8;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x270630, _0x2141f5) {
            var _0x105caf = new _0x8e6cf8();
            return _0x105caf['_type'] = 0x2, _0x105caf['_separateA' + 'xes'] = !0x0, _0x105caf['_constantM' + 'inSeparate'] = _0x270630, _0x105caf['_constantM' + 'axSeparate'] = _0x2141f5, _0x105caf;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x585aff, _0x4637ea) {
            var _0x1bf54a = new _0x8e6cf8();
            return _0x1bf54a['_type'] = 0x3, _0x1bf54a['_separateA' + 'xes'] = !0x1, _0x1bf54a['_gradientM' + 'in'] = _0x585aff, _0x1bf54a['_gradientM' + 'ax'] = _0x4637ea, _0x1bf54a;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](_0x517c21, _0x18d5d7, _0x40001c, _0xbd1c0f, _0x2930df, _0x44e3c5, _0x5d9fe0, _0x2018df) {
            var _0x8b1fa3 = new _0x8e6cf8();
            return _0x8b1fa3['_type'] = 0x3, _0x8b1fa3['_separateA' + 'xes'] = !0x0, _0x8b1fa3['_gradientX' + 'Min'] = _0x517c21, _0x8b1fa3['_gradientX' + 'Max'] = _0x18d5d7, _0x8b1fa3['_gradientY' + 'Min'] = _0x40001c, _0x8b1fa3['_gradientY' + 'Max'] = _0xbd1c0f, _0x8b1fa3['_gradientZ' + 'Min'] = _0x2930df, _0x8b1fa3['_gradientZ' + 'Max'] = _0x44e3c5, _0x8b1fa3['_gradientW' + 'Min'] = _0x5d9fe0, _0x8b1fa3['_gradientW' + 'Max'] = _0x2018df, _0x8b1fa3;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['separateAx' + 'es']() {
            return this['_separateA' + 'xes'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantSe' + 'parate']() {
            return this['_constantS' + 'eparate'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['gradientW']() {
            return this['_gradientW'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['constantMi' + 'nSeparate']() {
            return this['_constantM' + 'inSeparate'];
        }
        get ['constantMa' + 'xSeparate']() {
            return this['_constantM' + 'axSeparate'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        get ['gradientWM' + 'in']() {
            return this['_gradientW' + 'Min'];
        }
        get ['gradientWM' + 'ax']() {
            return this['_gradientW' + 'Max'];
        }
        ['cloneTo'](_0x30374e) {
            var _0x37b597 = _0x30374e;
            _0x37b597['_type'] = this['_type'], _0x37b597['_separateA' + 'xes'] = this['_separateA' + 'xes'], _0x37b597['_constant'] = this['_constant'], this['_constantS' + 'eparate']['cloneTo'](_0x37b597['_constantS' + 'eparate']), this['_gradient']['cloneTo'](_0x37b597['_gradient']), this['_gradientX']['cloneTo'](_0x37b597['_gradientX']), this['_gradientY']['cloneTo'](_0x37b597['_gradientY']), this['_gradientZ']['cloneTo'](_0x37b597['_gradientZ']), _0x37b597['_constantM' + 'in'] = this['_constantM' + 'in'], _0x37b597['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_constantM' + 'inSeparate']['cloneTo'](_0x37b597['_constantM' + 'inSeparate']), this['_constantM' + 'axSeparate']['cloneTo'](_0x37b597['_constantM' + 'axSeparate']), this['_gradientM' + 'in']['cloneTo'](_0x37b597['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x37b597['_gradientM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x37b597['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x37b597['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x37b597['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x37b597['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x37b597['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x37b597['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x3b0591 = new _0x8e6cf8();
            return this['cloneTo'](_0x3b0591), _0x3b0591;
        }
    }
    class _0x3e98e2 {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x2;
        }
        ['add'](_0x288329, _0x2f74d7) {
            this['_currentLe' + 'ngth'] < 0x8 ? (0x6 === this['_currentLe' + 'ngth'] && 0x1 !== _0x288329 && (_0x288329 = 0x1, console['log']('Warning:th' + 'e\x20forth\x20ke' + 'y\x20is\x20\x20be\x20f' + 'orce\x20set\x20t' + 'o\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0x288329, this['_elements'][this['_currentLe' + 'ngth']++] = _0x2f74d7) : console['log']('Warning:da' + 'ta\x20count\x20m' + 'ust\x20lessEq' + 'ual\x20than\x204');
        }
        ['cloneTo'](_0x5b0f00) {
            var _0x4a10a2 = _0x5b0f00;
            _0x4a10a2['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            for (var _0x5b166d = _0x4a10a2['_elements'], _0x479a62 = 0x0, _0x5de6e7 = this['_elements']['length']; _0x479a62 < _0x5de6e7; _0x479a62++)
                _0x5b166d[_0x479a62] = this['_elements'][_0x479a62];
        }
        ['clone']() {
            var _0x42bd8a = new _0x3e98e2();
            return this['cloneTo'](_0x42bd8a), _0x42bd8a;
        }
    }
    class _0x2e288d {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0x8);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x2;
        }
        ['add'](_0xb30115, _0x370bd3) {
            this['_currentLe' + 'ngth'] < 0x8 ? (0x6 === this['_currentLe' + 'ngth'] && 0x1 !== _0xb30115 && (_0xb30115 = 0x1, console['log']('GradientDa' + 'taNumber\x20w' + 'arning:the' + '\x20forth\x20key' + '\x20is\x20\x20be\x20fo' + 'rce\x20set\x20to' + '\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0xb30115, this['_elements'][this['_currentLe' + 'ngth']++] = _0x370bd3) : console['log']('GradientDa' + 'taNumber\x20w' + 'arning:dat' + 'a\x20count\x20mu' + 'st\x20lessEqu' + 'al\x20than\x204');
        }
        ['getKeyByIn' + 'dex'](_0x2658bc) {
            return this['_elements'][0x2 * _0x2658bc];
        }
        ['getValueBy' + 'Index'](_0x185967) {
            return this['_elements'][0x2 * _0x185967 + 0x1];
        }
        ['getAverage' + 'Value']() {
            for (var _0x332538 = 0x0, _0xbbeb01 = this['_currentLe' + 'ngth'] - 0x2; _0x332538 < _0xbbeb01; _0x332538 += 0x2) {
                this['_elements'][_0x332538 + 0x1], (this['_elements'][_0x332538 + 0x3], this['_elements'][_0x332538 + 0x2] - this['_elements'][_0x332538]);
            }
            return 0x0;
        }
        ['cloneTo'](_0x9e3166) {
            var _0x20629a = _0x9e3166;
            _0x20629a['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            for (var _0x1a9ffc = _0x20629a['_elements'], _0x430eec = 0x0, _0x19361b = this['_elements']['length']; _0x430eec < _0x19361b; _0x430eec++)
                _0x1a9ffc[_0x430eec] = this['_elements'][_0x430eec];
        }
        ['clone']() {
            var _0x1a6fc5 = new _0x2e288d();
            return this['cloneTo'](_0x1a6fc5), _0x1a6fc5;
        }
    }
    class _0x3566ff {
        constructor() {
            this['_type'] = 0x0, this['_separateA' + 'xes'] = !0x1, this['_gradient'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0, this['_constantM' + 'inSeparate'] = null, this['_constantM' + 'axSeparate'] = null, this['_gradientM' + 'in'] = null, this['_gradientM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null;
        }
        static ['createByGr' + 'adient'](_0x4421b0) {
            var _0x5b9bc4 = new _0x3566ff();
            return _0x5b9bc4['_type'] = 0x0, _0x5b9bc4['_separateA' + 'xes'] = !0x1, _0x5b9bc4['_gradient'] = _0x4421b0, _0x5b9bc4;
        }
        static ['createByGr' + 'adientSepa' + 'rate'](_0x162baa, _0x3166fb, _0x400153) {
            var _0x1ac210 = new _0x3566ff();
            return _0x1ac210['_type'] = 0x0, _0x1ac210['_separateA' + 'xes'] = !0x0, _0x1ac210['_gradientX'] = _0x162baa, _0x1ac210['_gradientY'] = _0x3166fb, _0x1ac210['_gradientZ'] = _0x400153, _0x1ac210;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x5f1d3a, _0xd471b3) {
            var _0x5ed075 = new _0x3566ff();
            return _0x5ed075['_type'] = 0x1, _0x5ed075['_separateA' + 'xes'] = !0x1, _0x5ed075['_constantM' + 'in'] = _0x5f1d3a, _0x5ed075['_constantM' + 'ax'] = _0xd471b3, _0x5ed075;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x301f70, _0x5bc5b4) {
            var _0x9c013d = new _0x3566ff();
            return _0x9c013d['_type'] = 0x1, _0x9c013d['_separateA' + 'xes'] = !0x0, _0x9c013d['_constantM' + 'inSeparate'] = _0x301f70, _0x9c013d['_constantM' + 'axSeparate'] = _0x5bc5b4, _0x9c013d;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x3d3c59, _0x42a9d0) {
            var _0x49daf8 = new _0x3566ff();
            return _0x49daf8['_type'] = 0x2, _0x49daf8['_separateA' + 'xes'] = !0x1, _0x49daf8['_gradientM' + 'in'] = _0x3d3c59, _0x49daf8['_gradientM' + 'ax'] = _0x42a9d0, _0x49daf8;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](_0x472abd, _0x4b435d, _0x239f01, _0x163665, _0x28ecb2, _0x1adbf8) {
            var _0x5d97fc = new _0x3566ff();
            return _0x5d97fc['_type'] = 0x2, _0x5d97fc['_separateA' + 'xes'] = !0x0, _0x5d97fc['_gradientX' + 'Min'] = _0x472abd, _0x5d97fc['_gradientX' + 'Max'] = _0x4b435d, _0x5d97fc['_gradientY' + 'Min'] = _0x239f01, _0x5d97fc['_gradientY' + 'Max'] = _0x163665, _0x5d97fc['_gradientZ' + 'Min'] = _0x28ecb2, _0x5d97fc['_gradientZ' + 'Max'] = _0x1adbf8, _0x5d97fc;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['separateAx' + 'es']() {
            return this['_separateA' + 'xes'];
        }
        get ['gradient']() {
            return this['_gradient'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['constantMi' + 'nSeparate']() {
            return this['_constantM' + 'inSeparate'];
        }
        get ['constantMa' + 'xSeparate']() {
            return this['_constantM' + 'axSeparate'];
        }
        get ['gradientMi' + 'n']() {
            return this['_gradientM' + 'in'];
        }
        get ['gradientMa' + 'x']() {
            return this['_gradientM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        ['getMaxSize' + 'InGradient']() {
            var _0x3603f9, _0x2cfbb8, _0x33166d = -Number['MAX_VALUE'];
            switch (this['_type']) {
            case 0x0:
                if (this['_separateA' + 'xes']) {
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientX']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientX']['getValueBy' + 'Index'](_0x3603f9));
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientY']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientY']['getValueBy' + 'Index'](_0x3603f9));
                } else {
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradient']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradient']['getValueBy' + 'Index'](_0x3603f9));
                }
                break;
            case 0x1:
                this['_separateA' + 'xes'] ? (_0x33166d = Math['max'](this['_constantM' + 'inSeparate']['x'], this['_constantM' + 'axSeparate']['x']), _0x33166d = Math['max'](_0x33166d, this['_constantM' + 'inSeparate']['y']), _0x33166d = Math['max'](_0x33166d, this['_constantM' + 'axSeparate']['y'])) : _0x33166d = Math['max'](this['_constantM' + 'in'], this['_constantM' + 'ax']);
                break;
            case 0x2:
                if (this['_separateA' + 'xes']) {
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientX' + 'Min']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientX' + 'Min']['getValueBy' + 'Index'](_0x3603f9));
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientX' + 'Max']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientX' + 'Max']['getValueBy' + 'Index'](_0x3603f9));
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientY' + 'Min']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientY' + 'Min']['getValueBy' + 'Index'](_0x3603f9));
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientZ' + 'Max']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientZ' + 'Max']['getValueBy' + 'Index'](_0x3603f9));
                } else {
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientM' + 'in']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientM' + 'in']['getValueBy' + 'Index'](_0x3603f9));
                    for (_0x3603f9 = 0x0, _0x2cfbb8 = this['_gradientM' + 'ax']['gradientCo' + 'unt']; _0x3603f9 < _0x2cfbb8; _0x3603f9++)
                        _0x33166d = Math['max'](_0x33166d, this['_gradientM' + 'ax']['getValueBy' + 'Index'](_0x3603f9));
                }
            }
            return _0x33166d;
        }
        ['cloneTo'](_0x4afe03) {
            var _0x223c98 = _0x4afe03;
            _0x223c98['_type'] = this['_type'], _0x223c98['_separateA' + 'xes'] = this['_separateA' + 'xes'], this['_gradient']['cloneTo'](_0x223c98['_gradient']), this['_gradientX']['cloneTo'](_0x223c98['_gradientX']), this['_gradientY']['cloneTo'](_0x223c98['_gradientY']), this['_gradientZ']['cloneTo'](_0x223c98['_gradientZ']), _0x223c98['_constantM' + 'in'] = this['_constantM' + 'in'], _0x223c98['_constantM' + 'ax'] = this['_constantM' + 'ax'], this['_constantM' + 'inSeparate']['cloneTo'](_0x223c98['_constantM' + 'inSeparate']), this['_constantM' + 'axSeparate']['cloneTo'](_0x223c98['_constantM' + 'axSeparate']), this['_gradientM' + 'in']['cloneTo'](_0x223c98['_gradientM' + 'in']), this['_gradientM' + 'ax']['cloneTo'](_0x223c98['_gradientM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x223c98['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x223c98['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x223c98['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x223c98['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x223c98['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x223c98['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0xe75851 = new _0x3566ff();
            return this['cloneTo'](_0xe75851), _0xe75851;
        }
    }
    class _0x3f3530 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = null, this['_gradientX'] = null, this['_gradientY'] = null, this['_gradientZ'] = null, this['_constantM' + 'in'] = null, this['_constantM' + 'ax'] = null, this['_gradientX' + 'Min'] = null, this['_gradientX' + 'Max'] = null, this['_gradientY' + 'Min'] = null, this['_gradientY' + 'Max'] = null, this['_gradientZ' + 'Min'] = null, this['_gradientZ' + 'Max'] = null;
        }
        static ['createByCo' + 'nstant'](_0x4fef81) {
            var _0x23c316 = new _0x3f3530();
            return _0x23c316['_type'] = 0x0, _0x23c316['_constant'] = _0x4fef81, _0x23c316;
        }
        static ['createByGr' + 'adient'](_0x40ee00, _0x50cf57, _0x2ceac6) {
            var _0x107ae6 = new _0x3f3530();
            return _0x107ae6['_type'] = 0x1, _0x107ae6['_gradientX'] = _0x40ee00, _0x107ae6['_gradientY'] = _0x50cf57, _0x107ae6['_gradientZ'] = _0x2ceac6, _0x107ae6;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x274afa, _0x5a0081) {
            var _0x313579 = new _0x3f3530();
            return _0x313579['_type'] = 0x2, _0x313579['_constantM' + 'in'] = _0x274afa, _0x313579['_constantM' + 'ax'] = _0x5a0081, _0x313579;
        }
        static ['createByRa' + 'ndomTwoGra' + 'dient'](_0x130084, _0x472714, _0x7665b1, _0x5c3dd7, _0x58ee3e, _0x183ee1) {
            var _0x1801af = new _0x3f3530();
            return _0x1801af['_type'] = 0x3, _0x1801af['_gradientX' + 'Min'] = _0x130084, _0x1801af['_gradientX' + 'Max'] = _0x472714, _0x1801af['_gradientY' + 'Min'] = _0x7665b1, _0x1801af['_gradientY' + 'Max'] = _0x5c3dd7, _0x1801af['_gradientZ' + 'Min'] = _0x58ee3e, _0x1801af['_gradientZ' + 'Max'] = _0x183ee1, _0x1801af;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['gradientX']() {
            return this['_gradientX'];
        }
        get ['gradientY']() {
            return this['_gradientY'];
        }
        get ['gradientZ']() {
            return this['_gradientZ'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        get ['gradientXM' + 'in']() {
            return this['_gradientX' + 'Min'];
        }
        get ['gradientXM' + 'ax']() {
            return this['_gradientX' + 'Max'];
        }
        get ['gradientYM' + 'in']() {
            return this['_gradientY' + 'Min'];
        }
        get ['gradientYM' + 'ax']() {
            return this['_gradientY' + 'Max'];
        }
        get ['gradientZM' + 'in']() {
            return this['_gradientZ' + 'Min'];
        }
        get ['gradientZM' + 'ax']() {
            return this['_gradientZ' + 'Max'];
        }
        ['cloneTo'](_0x2ce486) {
            var _0x2e353d = _0x2ce486;
            _0x2e353d['_type'] = this['_type'], this['_constant']['cloneTo'](_0x2e353d['_constant']), this['_gradientX']['cloneTo'](_0x2e353d['_gradientX']), this['_gradientY']['cloneTo'](_0x2e353d['_gradientY']), this['_gradientZ']['cloneTo'](_0x2e353d['_gradientZ']), this['_constantM' + 'in']['cloneTo'](_0x2e353d['_constantM' + 'in']), this['_constantM' + 'ax']['cloneTo'](_0x2e353d['_constantM' + 'ax']), this['_gradientX' + 'Min']['cloneTo'](_0x2e353d['_gradientX' + 'Min']), this['_gradientX' + 'Max']['cloneTo'](_0x2e353d['_gradientX' + 'Max']), this['_gradientY' + 'Min']['cloneTo'](_0x2e353d['_gradientY' + 'Min']), this['_gradientY' + 'Max']['cloneTo'](_0x2e353d['_gradientY' + 'Max']), this['_gradientZ' + 'Min']['cloneTo'](_0x2e353d['_gradientZ' + 'Min']), this['_gradientZ' + 'Max']['cloneTo'](_0x2e353d['_gradientZ' + 'Max']);
        }
        ['clone']() {
            var _0x382df1 = new _0x3f3530();
            return this['cloneTo'](_0x382df1), _0x382df1;
        }
    }
    class _0x42963c {
        get ['angularVel' + 'ocity']() {
            return this['_angularVe' + 'locity'];
        }
        constructor(_0x449ea7) {
            this['_angularVe' + 'locity'] = _0x449ea7;
        }
        ['cloneTo'](_0x584bc0) {
            var _0x272070 = _0x584bc0;
            this['_angularVe' + 'locity']['cloneTo'](_0x272070['_angularVe' + 'locity']), _0x272070['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x5985e7;
            switch (this['_angularVe' + 'locity']['type']) {
            case 0x0:
                _0x5985e7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x8e6cf8['createByCo' + 'nstantSepa' + 'rate'](this['_angularVe' + 'locity']['constantSe' + 'parate']['clone']()) : _0x8e6cf8['createByCo' + 'nstant'](this['_angularVe' + 'locity']['constant']);
                break;
            case 0x1:
                _0x5985e7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x8e6cf8['createByGr' + 'adientSepa' + 'rate'](this['_angularVe' + 'locity']['gradientX']['clone'](), this['_angularVe' + 'locity']['gradientY']['clone'](), this['_angularVe' + 'locity']['gradientZ']['clone']()) : _0x8e6cf8['createByGr' + 'adient'](this['_angularVe' + 'locity']['gradient']['clone']());
                break;
            case 0x2:
                _0x5985e7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x8e6cf8['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](this['_angularVe' + 'locity']['constantMi' + 'nSeparate']['clone'](), this['_angularVe' + 'locity']['constantMa' + 'xSeparate']['clone']()) : _0x8e6cf8['createByRa' + 'ndomTwoCon' + 'stant'](this['_angularVe' + 'locity']['constantMi' + 'n'], this['_angularVe' + 'locity']['constantMa' + 'x']);
                break;
            case 0x3:
                _0x5985e7 = this['_angularVe' + 'locity']['separateAx' + 'es'] ? _0x8e6cf8['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_angularVe' + 'locity']['gradientXM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientYM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientZM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientWM' + 'in']['clone'](), this['_angularVe' + 'locity']['gradientXM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientYM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientZM' + 'ax']['clone'](), this['_angularVe' + 'locity']['gradientWM' + 'ax']['clone']()) : _0x8e6cf8['createByRa' + 'ndomTwoGra' + 'dient'](this['_angularVe' + 'locity']['gradientMi' + 'n']['clone'](), this['_angularVe' + 'locity']['gradientMa' + 'x']['clone']());
            }
            var _0x2fee40 = new _0x42963c(_0x5985e7);
            return _0x2fee40['enable'] = this['enable'], _0x2fee40;
        }
    }
    class _0x2512e6 {
        constructor() {
            this['enable'] = !0x0, this['randomDire' + 'ction'] = 0x0;
        }
        ['_getShapeB' + 'oundBox'](_0x37963a) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['_getSpeedB' + 'oundBox'](_0x30611d) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x8ad0, _0x499571, _0x1a5bf7 = null, _0x255d89 = null) {
            throw new Error('BaseShape:' + '\x20must\x20over' + 'ride\x20it.');
        }
        ['_calculate' + 'Procedural' + 'Bounds'](_0x53d3a0, _0x139b4e, _0x4e37d2) {
            this['_getShapeB' + 'oundBox'](_0x53d3a0);
            var _0x320cb7 = _0x53d3a0['min'], _0x3f26bb = _0x53d3a0['max'];
            _0x4795b3['multiply'](_0x320cb7, _0x139b4e, _0x320cb7), _0x4795b3['multiply'](_0x3f26bb, _0x139b4e, _0x3f26bb);
            var _0x40d29a = new _0x3555e9(new _0x4795b3(), new _0x4795b3());
            this['randomDire' + 'ction'] ? (_0x40d29a['min'] = new _0x4795b3(-0x1, -0x1, -0x1), _0x40d29a['max'] = new _0x4795b3(0x1, 0x1, 0x1)) : this['_getSpeedB' + 'oundBox'](_0x40d29a);
            var _0x42711b = new _0x3555e9(new _0x4795b3(), new _0x4795b3()), _0x117f31 = _0x42711b['min'], _0x22f6b7 = _0x42711b['max'];
            _0x4795b3['scale'](_0x40d29a['min'], _0x4e37d2['y'], _0x117f31), _0x4795b3['scale'](_0x40d29a['max'], _0x4e37d2['y'], _0x22f6b7), _0x4795b3['add'](_0x53d3a0['min'], _0x117f31, _0x117f31), _0x4795b3['add'](_0x53d3a0['max'], _0x22f6b7, _0x22f6b7), _0x4795b3['min'](_0x53d3a0['min'], _0x117f31, _0x53d3a0['min']), _0x4795b3['max'](_0x53d3a0['max'], _0x117f31, _0x53d3a0['max']);
            var _0x35058c = new _0x3555e9(new _0x4795b3(), new _0x4795b3()), _0x231506 = _0x35058c['min'], _0x198e7c = _0x35058c['max'];
            _0x4795b3['scale'](_0x40d29a['min'], _0x4e37d2['x'], _0x231506), _0x4795b3['scale'](_0x40d29a['max'], _0x4e37d2['x'], _0x198e7c), _0x4795b3['min'](_0x35058c['min'], _0x198e7c, _0x117f31), _0x4795b3['max'](_0x35058c['min'], _0x198e7c, _0x22f6b7), _0x4795b3['min'](_0x53d3a0['min'], _0x117f31, _0x53d3a0['min']), _0x4795b3['max'](_0x53d3a0['max'], _0x117f31, _0x53d3a0['max']);
        }
        ['cloneTo'](_0x525a1d) {
            _0x525a1d['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x2eca33 = new _0x2512e6();
            return this['cloneTo'](_0x2eca33), _0x2eca33;
        }
    }
    class _0x3a5f6c {
        static ['_randomPoi' + 'ntUnitArcC' + 'ircle'](_0x4bb229, _0x5ec227, _0x465bbf = null) {
            var _0x34b62c;
            _0x34b62c = _0x465bbf ? _0x465bbf['getFloat']() * _0x4bb229 : Math['random']() * _0x4bb229, _0x5ec227['x'] = Math['cos'](_0x34b62c), _0x5ec227['y'] = Math['sin'](_0x34b62c);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](_0x5c296f, _0x1c21f0, _0x5e7517 = null) {
            var _0x18a824;
            _0x3a5f6c['_randomPoi' + 'ntUnitArcC' + 'ircle'](_0x5c296f, _0x1c21f0, _0x5e7517), _0x18a824 = _0x5e7517 ? Math['pow'](_0x5e7517['getFloat'](), 0.5) : Math['pow'](Math['random'](), 0.5), _0x1c21f0['x'] = _0x1c21f0['x'] * _0x18a824, _0x1c21f0['y'] = _0x1c21f0['y'] * _0x18a824;
        }
        static ['_randomPoi' + 'ntUnitCirc' + 'le'](_0x1e07fa, _0x3b5bbb = null) {
            var _0x4895b2;
            _0x4895b2 = _0x3b5bbb ? _0x3b5bbb['getFloat']() * Math['PI'] * 0x2 : Math['random']() * Math['PI'] * 0x2, _0x1e07fa['x'] = Math['cos'](_0x4895b2), _0x1e07fa['y'] = Math['sin'](_0x4895b2);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x940dae, _0x6e2800 = null) {
            var _0x43f9ef;
            _0x3a5f6c['_randomPoi' + 'ntUnitCirc' + 'le'](_0x940dae), _0x43f9ef = _0x6e2800 ? Math['pow'](_0x6e2800['getFloat'](), 0.5) : Math['pow'](Math['random'](), 0.5), _0x940dae['x'] = _0x940dae['x'] * _0x43f9ef, _0x940dae['y'] = _0x940dae['y'] * _0x43f9ef;
        }
        static ['_randomPoi' + 'ntUnitSphe' + 're'](_0x140f63, _0x30eb89 = null) {
            var _0x579e94, _0x59ee87;
            _0x30eb89 ? (_0x579e94 = _0x140f63['z'] = 0x2 * _0x30eb89['getFloat']() - 0x1, _0x59ee87 = _0x30eb89['getFloat']() * Math['PI'] * 0x2) : (_0x579e94 = _0x140f63['z'] = 0x2 * Math['random']() - 0x1, _0x59ee87 = Math['random']() * Math['PI'] * 0x2);
            var _0x5debad = Math['sqrt'](0x1 - _0x579e94 * _0x579e94);
            _0x140f63['x'] = _0x5debad * Math['cos'](_0x59ee87), _0x140f63['y'] = _0x5debad * Math['sin'](_0x59ee87);
        }
        static ['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x2b8c4b, _0x21a56d = null) {
            var _0x4ed5c7;
            _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x2b8c4b), _0x4ed5c7 = _0x21a56d ? Math['pow'](_0x21a56d['getFloat'](), 0x1 / 0x3) : Math['pow'](Math['random'](), 0x1 / 0x3), _0x2b8c4b['x'] = _0x2b8c4b['x'] * _0x4ed5c7, _0x2b8c4b['y'] = _0x2b8c4b['y'] * _0x4ed5c7, _0x2b8c4b['z'] = _0x2b8c4b['z'] * _0x4ed5c7;
        }
        static ['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x714bff, _0x2ae299 = null) {
            _0x2ae299 ? (_0x714bff['x'] = _0x2ae299['getFloat']() - 0.5, _0x714bff['y'] = _0x2ae299['getFloat']() - 0.5, _0x714bff['z'] = _0x2ae299['getFloat']() - 0.5) : (_0x714bff['x'] = Math['random']() - 0.5, _0x714bff['y'] = Math['random']() - 0.5, _0x714bff['z'] = Math['random']() - 0.5);
        }
        constructor() {
        }
    }
    class _0x322897 extends _0x2512e6 {
        constructor() {
            super(), this['x'] = 0x1, this['y'] = 0x1, this['z'] = 0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x36156d) {
            var _0x4893e9 = _0x36156d['min'];
            _0x4893e9['x'] = 0.5 * -this['x'], _0x4893e9['y'] = 0.5 * -this['y'], _0x4893e9['z'] = 0.5 * -this['z'];
            var _0x331948 = _0x36156d['max'];
            _0x331948['x'] = 0.5 * this['x'], _0x331948['y'] = 0.5 * this['y'], _0x331948['z'] = 0.5 * this['z'];
        }
        ['_getSpeedB' + 'oundBox'](_0x1d955e) {
            var _0x1d0fd3 = _0x1d955e['min'];
            _0x1d0fd3['x'] = 0x0, _0x1d0fd3['y'] = 0x0, _0x1d0fd3['z'] = 0x0;
            var _0x36b1ec = _0x1d955e['max'];
            _0x36b1ec['x'] = 0x0, _0x36b1ec['y'] = 0x1, _0x36b1ec['z'] = 0x0;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x1512cf, _0xf521e9, _0x310f87 = null, _0x3eb1cd = null) {
            _0x310f87 ? (_0x310f87['seed'] = _0x3eb1cd[0x10], _0x3a5f6c['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x1512cf, _0x310f87), _0x3eb1cd[0x10] = _0x310f87['seed']) : _0x3a5f6c['_randomPoi' + 'ntInsideHa' + 'lfUnitBox'](_0x1512cf), _0x1512cf['x'] = this['x'] * _0x1512cf['x'], _0x1512cf['y'] = this['y'] * _0x1512cf['y'], _0x1512cf['z'] = this['z'] * _0x1512cf['z'], this['randomDire' + 'ction'] ? _0x310f87 ? (_0x310f87['seed'] = _0x3eb1cd[0x11], _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0xf521e9, _0x310f87), _0x3eb1cd[0x11] = _0x310f87['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0xf521e9) : (_0xf521e9['x'] = 0x0, _0xf521e9['y'] = 0x0, _0xf521e9['z'] = 0x1);
        }
        ['cloneTo'](_0xd30d4a) {
            super['cloneTo'](_0xd30d4a);
            var _0x5dbf07 = _0xd30d4a;
            _0x5dbf07['x'] = this['x'], _0x5dbf07['y'] = this['y'], _0x5dbf07['z'] = this['z'], _0x5dbf07['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x5ba4e1 = new _0x322897();
            return this['cloneTo'](_0x5ba4e1), _0x5ba4e1;
        }
    }
    class _0x453392 extends _0x2512e6 {
        constructor() {
            super(), this['radius'] = 0x1, this['arc'] = 0x2 * Math['PI'], this['emitFromEd' + 'ge'] = !0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x5720f4) {
            var _0x298e95 = _0x5720f4['min'];
            _0x298e95['x'] = _0x298e95['z'] = -this['radius'], _0x298e95['y'] = 0x0;
            var _0x35f256 = _0x5720f4['max'];
            _0x35f256['x'] = _0x35f256['z'] = this['radius'], _0x35f256['y'] = 0x0;
        }
        ['_getSpeedB' + 'oundBox'](_0x54afe0) {
            var _0x26cc43 = _0x54afe0['min'];
            _0x26cc43['x'] = _0x26cc43['y'] = -0x1, _0x26cc43['z'] = 0x0;
            var _0x44bf85 = _0x54afe0['max'];
            _0x44bf85['x'] = _0x44bf85['y'] = 0x1, _0x44bf85['z'] = 0x0;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x59c98a, _0x4cb3f0, _0x52176d = null, _0x3afb91 = null) {
            var _0x2a42bb = _0x453392['_tempPosit' + 'ionPoint'];
            _0x52176d ? (_0x52176d['seed'] = _0x3afb91[0x10], this['emitFromEd' + 'ge'] ? _0x3a5f6c['_randomPoi' + 'ntUnitArcC' + 'ircle'](this['arc'], _0x453392['_tempPosit' + 'ionPoint'], _0x52176d) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](this['arc'], _0x453392['_tempPosit' + 'ionPoint'], _0x52176d), _0x3afb91[0x10] = _0x52176d['seed']) : this['emitFromEd' + 'ge'] ? _0x3a5f6c['_randomPoi' + 'ntUnitArcC' + 'ircle'](this['arc'], _0x453392['_tempPosit' + 'ionPoint']) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itArcCircl' + 'e'](this['arc'], _0x453392['_tempPosit' + 'ionPoint']), _0x59c98a['x'] = -_0x2a42bb['x'], _0x59c98a['y'] = _0x2a42bb['y'], _0x59c98a['z'] = 0x0, _0x4795b3['scale'](_0x59c98a, this['radius'], _0x59c98a), this['randomDire' + 'ction'] ? _0x52176d ? (_0x52176d['seed'] = _0x3afb91[0x11], _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x4cb3f0, _0x52176d), _0x3afb91[0x11] = _0x52176d['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x4cb3f0) : _0x59c98a['cloneTo'](_0x4cb3f0);
        }
        ['cloneTo'](_0x38fda5) {
            super['cloneTo'](_0x38fda5);
            var _0x3d660d = _0x38fda5;
            _0x3d660d['radius'] = this['radius'], _0x3d660d['arc'] = this['arc'], _0x3d660d['emitFromEd' + 'ge'] = this['emitFromEd' + 'ge'], _0x3d660d['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0xf16b92 = new _0x453392();
            return this['cloneTo'](_0xf16b92), _0xf16b92;
        }
    }
    _0x453392['_tempPosit' + 'ionPoint'] = new _0x4c44b6();
    class _0x46e1ac extends _0x2512e6 {
        constructor() {
            super(), this['angle'] = 0x19 / 0xb4 * Math['PI'], this['radius'] = 0x1, this['length'] = 0x5, this['emitType'] = 0x0;
        }
        ['_getShapeB' + 'oundBox'](_0x2705fb) {
            const _0x4d4a5a = this['radius'] + this['length'] * Math['sin'](this['angle']), _0x3c6ad5 = this['length'] * Math['cos'](this['angle']);
            var _0x5e3d83 = _0x2705fb['min'];
            _0x5e3d83['x'] = _0x5e3d83['y'] = -_0x4d4a5a, _0x5e3d83['z'] = 0x0;
            var _0x35e8a2 = _0x2705fb['max'];
            _0x35e8a2['x'] = _0x35e8a2['y'] = _0x4d4a5a, _0x35e8a2['z'] = _0x3c6ad5;
        }
        ['_getSpeedB' + 'oundBox'](_0x22df71) {
            const _0x19d66b = Math['sin'](this['angle']);
            var _0x2e198f = _0x22df71['min'];
            _0x2e198f['x'] = _0x2e198f['y'] = -_0x19d66b, _0x2e198f['z'] = 0x0;
            var _0x286c90 = _0x22df71['max'];
            _0x286c90['x'] = _0x286c90['y'] = _0x19d66b, _0x286c90['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x702c30, _0x20cfdb, _0x5bc119 = null, _0x59263c = null) {
            var _0x1cdddb, _0x57bee8, _0x575e97, _0x372433 = _0x46e1ac['_tempPosit' + 'ionPoint'], _0x11e438 = Math['cos'](this['angle']), _0xa2da28 = Math['sin'](this['angle']);
            switch (this['emitType']) {
            case 0x0:
                _0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x10], _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempPosit' + 'ionPoint'], _0x5bc119), _0x59263c[0x10] = _0x5bc119['seed']) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempPosit' + 'ionPoint']), _0x1cdddb = _0x372433['x'], _0x57bee8 = _0x372433['y'], _0x702c30['x'] = _0x1cdddb * this['radius'], _0x702c30['y'] = _0x57bee8 * this['radius'], _0x702c30['z'] = 0x0, this['randomDire' + 'ction'] ? (_0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x11], _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempDirec' + 'tionPoint'], _0x5bc119), _0x59263c[0x11] = _0x5bc119['seed']) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempDirec' + 'tionPoint']), _0x575e97 = _0x46e1ac['_tempDirec' + 'tionPoint'], _0x20cfdb['x'] = _0x575e97['x'] * _0xa2da28, _0x20cfdb['y'] = _0x575e97['y'] * _0xa2da28) : (_0x20cfdb['x'] = _0x1cdddb * _0xa2da28, _0x20cfdb['y'] = _0x57bee8 * _0xa2da28), _0x20cfdb['z'] = _0x11e438;
                break;
            case 0x1:
                _0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x10], _0x3a5f6c['_randomPoi' + 'ntUnitCirc' + 'le'](_0x46e1ac['_tempPosit' + 'ionPoint'], _0x5bc119), _0x59263c[0x10] = _0x5bc119['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitCirc' + 'le'](_0x46e1ac['_tempPosit' + 'ionPoint']), _0x1cdddb = _0x372433['x'], _0x57bee8 = _0x372433['y'], _0x702c30['x'] = _0x1cdddb * this['radius'], _0x702c30['y'] = _0x57bee8 * this['radius'], _0x702c30['z'] = 0x0, this['randomDire' + 'ction'] ? (_0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x11], _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempDirec' + 'tionPoint'], _0x5bc119), _0x59263c[0x11] = _0x5bc119['seed']) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempDirec' + 'tionPoint']), _0x575e97 = _0x46e1ac['_tempDirec' + 'tionPoint'], _0x20cfdb['x'] = _0x575e97['x'] * _0xa2da28, _0x20cfdb['y'] = _0x575e97['y'] * _0xa2da28) : (_0x20cfdb['x'] = _0x1cdddb * _0xa2da28, _0x20cfdb['y'] = _0x57bee8 * _0xa2da28), _0x20cfdb['z'] = _0x11e438;
                break;
            case 0x2:
                _0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x10], _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempPosit' + 'ionPoint'], _0x5bc119)) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itCircle'](_0x46e1ac['_tempPosit' + 'ionPoint']), _0x1cdddb = _0x372433['x'], _0x57bee8 = _0x372433['y'], _0x702c30['x'] = _0x1cdddb * this['radius'], _0x702c30['y'] = _0x57bee8 * this['radius'], _0x702c30['z'] = 0x0, _0x20cfdb['x'] = _0x1cdddb * _0xa2da28, _0x20cfdb['y'] = _0x57bee8 * _0xa2da28, _0x20cfdb['z'] = _0x11e438, _0x4795b3['normalize'](_0x20cfdb, _0x20cfdb), _0x5bc119 ? (_0x4795b3['scale'](_0x20cfdb, this['length'] * _0x5bc119['getFloat'](), _0x20cfdb), _0x59263c[0x10] = _0x5bc119['seed']) : _0x4795b3['scale'](_0x20cfdb, this['length'] * Math['random'](), _0x20cfdb), _0x4795b3['add'](_0x702c30, _0x20cfdb, _0x702c30), this['randomDire' + 'ction'] && (_0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x11], _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x20cfdb, _0x5bc119), _0x59263c[0x11] = _0x5bc119['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x20cfdb));
                break;
            case 0x3:
                _0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x10], _0x3a5f6c['_randomPoi' + 'ntUnitCirc' + 'le'](_0x46e1ac['_tempPosit' + 'ionPoint'], _0x5bc119)) : _0x3a5f6c['_randomPoi' + 'ntUnitCirc' + 'le'](_0x46e1ac['_tempPosit' + 'ionPoint']), _0x1cdddb = _0x372433['x'], _0x57bee8 = _0x372433['y'], _0x702c30['x'] = _0x1cdddb * this['radius'], _0x702c30['y'] = _0x57bee8 * this['radius'], _0x702c30['z'] = 0x0, _0x20cfdb['x'] = _0x1cdddb * _0xa2da28, _0x20cfdb['y'] = _0x57bee8 * _0xa2da28, _0x20cfdb['z'] = _0x11e438, _0x4795b3['normalize'](_0x20cfdb, _0x20cfdb), _0x5bc119 ? (_0x4795b3['scale'](_0x20cfdb, this['length'] * _0x5bc119['getFloat'](), _0x20cfdb), _0x59263c[0x10] = _0x5bc119['seed']) : _0x4795b3['scale'](_0x20cfdb, this['length'] * Math['random'](), _0x20cfdb), _0x4795b3['add'](_0x702c30, _0x20cfdb, _0x702c30), this['randomDire' + 'ction'] && (_0x5bc119 ? (_0x5bc119['seed'] = _0x59263c[0x11], _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x20cfdb, _0x5bc119), _0x59263c[0x11] = _0x5bc119['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x20cfdb));
                break;
            default:
                throw new Error('ConeShape:' + 'emitType\x20i' + 's\x20invalid.');
            }
        }
        ['cloneTo'](_0x2f6b4b) {
            super['cloneTo'](_0x2f6b4b);
            var _0x33ab27 = _0x2f6b4b;
            _0x33ab27['angle'] = this['angle'], _0x33ab27['radius'] = this['radius'], _0x33ab27['length'] = this['length'], _0x33ab27['emitType'] = this['emitType'], _0x33ab27['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x38a107 = new _0x46e1ac();
            return this['cloneTo'](_0x38a107), _0x38a107;
        }
    }
    _0x46e1ac['_tempPosit' + 'ionPoint'] = new _0x4c44b6(), _0x46e1ac['_tempDirec' + 'tionPoint'] = new _0x4c44b6();
    class _0x393f0e extends _0x2512e6 {
        constructor() {
            super(), this['radius'] = 0x1, this['emitFromSh' + 'ell'] = !0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x153b98) {
            var _0x2ddea3 = _0x153b98['min'];
            _0x2ddea3['x'] = _0x2ddea3['y'] = _0x2ddea3['z'] = -this['radius'];
            var _0x44f5db = _0x153b98['max'];
            _0x44f5db['x'] = _0x44f5db['y'] = this['radius'], _0x44f5db['z'] = 0x0;
        }
        ['_getSpeedB' + 'oundBox'](_0x5c8324) {
            var _0x43c6b2 = _0x5c8324['min'];
            _0x43c6b2['x'] = _0x43c6b2['y'] = -0x1, _0x43c6b2['z'] = 0x0;
            var _0x212933 = _0x5c8324['max'];
            _0x212933['x'] = _0x212933['y'] = _0x212933['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x35cd01, _0x585018, _0x4f98e9 = null, _0x9d9c6f = null) {
            _0x4f98e9 ? (_0x4f98e9['seed'] = _0x9d9c6f[0x10], this['emitFromSh' + 'ell'] ? _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x35cd01, _0x4f98e9) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x35cd01, _0x4f98e9), _0x9d9c6f[0x10] = _0x4f98e9['seed']) : this['emitFromSh' + 'ell'] ? _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x35cd01) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x35cd01), _0x4795b3['scale'](_0x35cd01, this['radius'], _0x35cd01);
            var _0x4689c4 = _0x35cd01['z'];
            _0x4689c4 < 0x0 && (_0x35cd01['z'] = -0x1 * _0x4689c4), this['randomDire' + 'ction'] ? _0x4f98e9 ? (_0x4f98e9['seed'] = _0x9d9c6f[0x11], _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x585018, _0x4f98e9), _0x9d9c6f[0x11] = _0x4f98e9['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x585018) : _0x35cd01['cloneTo'](_0x585018);
        }
        ['cloneTo'](_0x4a891d) {
            super['cloneTo'](_0x4a891d);
            var _0x1531c6 = _0x4a891d;
            _0x1531c6['radius'] = this['radius'], _0x1531c6['emitFromSh' + 'ell'] = this['emitFromSh' + 'ell'], _0x1531c6['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x1b7f00 = new _0x393f0e();
            return this['cloneTo'](_0x1b7f00), _0x1b7f00;
        }
    }
    class _0x54551d extends _0x2512e6 {
        constructor() {
            super(), this['radius'] = 0x1, this['emitFromSh' + 'ell'] = !0x1;
        }
        ['_getShapeB' + 'oundBox'](_0x30be81) {
            var _0x386d7e = _0x30be81['min'];
            _0x386d7e['x'] = _0x386d7e['y'] = _0x386d7e['z'] = -this['radius'];
            var _0x2511e0 = _0x30be81['max'];
            _0x2511e0['x'] = _0x2511e0['y'] = _0x2511e0['z'] = this['radius'];
        }
        ['_getSpeedB' + 'oundBox'](_0x4f3f00) {
            var _0x4d927e = _0x4f3f00['min'];
            _0x4d927e['x'] = _0x4d927e['y'] = _0x4d927e['z'] = -0x1;
            var _0x2d170b = _0x4f3f00['max'];
            _0x2d170b['x'] = _0x2d170b['y'] = _0x2d170b['z'] = 0x1;
        }
        ['generatePo' + 'sitionAndD' + 'irection'](_0x341922, _0x23ca16, _0x79241 = null, _0x4980ca = null) {
            _0x79241 ? (_0x79241['seed'] = _0x4980ca[0x10], this['emitFromSh' + 'ell'] ? _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x341922, _0x79241) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x341922, _0x79241), _0x4980ca[0x10] = _0x79241['seed']) : this['emitFromSh' + 'ell'] ? _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x341922) : _0x3a5f6c['_randomPoi' + 'ntInsideUn' + 'itSphere'](_0x341922), _0x4795b3['scale'](_0x341922, this['radius'], _0x341922), this['randomDire' + 'ction'] ? _0x79241 ? (_0x79241['seed'] = _0x4980ca[0x11], _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x23ca16, _0x79241), _0x4980ca[0x11] = _0x79241['seed']) : _0x3a5f6c['_randomPoi' + 'ntUnitSphe' + 're'](_0x23ca16) : _0x341922['cloneTo'](_0x23ca16);
        }
        ['cloneTo'](_0x5984f5) {
            super['cloneTo'](_0x5984f5);
            var _0x3a2090 = _0x5984f5;
            _0x3a2090['radius'] = this['radius'], _0x3a2090['emitFromSh' + 'ell'] = this['emitFromSh' + 'ell'], _0x3a2090['randomDire' + 'ction'] = this['randomDire' + 'ction'];
        }
        ['clone']() {
            var _0x3188a7 = new _0x54551d();
            return this['cloneTo'](_0x3188a7), _0x3188a7;
        }
    }
    class _0x25d126 {
        get ['size']() {
            return this['_size'];
        }
        constructor(_0x231cae) {
            this['_size'] = _0x231cae;
        }
        ['cloneTo'](_0x501e61) {
            var _0x635e1d = _0x501e61;
            this['_size']['cloneTo'](_0x635e1d['_size']), _0x635e1d['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x56e77a;
            switch (this['_size']['type']) {
            case 0x0:
                _0x56e77a = this['_size']['separateAx' + 'es'] ? _0x3566ff['createByGr' + 'adientSepa' + 'rate'](this['_size']['gradientX']['clone'](), this['_size']['gradientY']['clone'](), this['_size']['gradientZ']['clone']()) : _0x3566ff['createByGr' + 'adient'](this['_size']['gradient']['clone']());
                break;
            case 0x1:
                _0x56e77a = this['_size']['separateAx' + 'es'] ? _0x3566ff['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](this['_size']['constantMi' + 'nSeparate']['clone'](), this['_size']['constantMa' + 'xSeparate']['clone']()) : _0x3566ff['createByRa' + 'ndomTwoCon' + 'stant'](this['_size']['constantMi' + 'n'], this['_size']['constantMa' + 'x']);
                break;
            case 0x2:
                _0x56e77a = this['_size']['separateAx' + 'es'] ? _0x3566ff['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_size']['gradientXM' + 'in']['clone'](), this['_size']['gradientYM' + 'in']['clone'](), this['_size']['gradientZM' + 'in']['clone'](), this['_size']['gradientXM' + 'ax']['clone'](), this['_size']['gradientYM' + 'ax']['clone'](), this['_size']['gradientZM' + 'ax']['clone']()) : _0x3566ff['createByRa' + 'ndomTwoGra' + 'dient'](this['_size']['gradientMi' + 'n']['clone'](), this['_size']['gradientMa' + 'x']['clone']());
            }
            var _0x3b96c3 = new _0x25d126(_0x56e77a);
            return _0x3b96c3['enable'] = this['enable'], _0x3b96c3;
        }
    }
    class _0x2c01a3 {
        constructor() {
            this['_type'] = 0x0, this['_constant'] = 0x0, this['_constantM' + 'in'] = 0x0, this['_constantM' + 'ax'] = 0x0;
        }
        static ['createByCo' + 'nstant'](_0x1569c4 = 0x0) {
            var _0x3b893e = new _0x2c01a3();
            return _0x3b893e['_type'] = 0x0, _0x3b893e['_constant'] = _0x1569c4, _0x3b893e;
        }
        static ['createByRa' + 'ndomTwoCon' + 'stant'](_0x255a51 = 0x0, _0x25d2af = 0x0) {
            var _0x58bb72 = new _0x2c01a3();
            return _0x58bb72['_type'] = 0x1, _0x58bb72['_constantM' + 'in'] = _0x255a51, _0x58bb72['_constantM' + 'ax'] = _0x25d2af, _0x58bb72;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['constant']() {
            return this['_constant'];
        }
        get ['constantMi' + 'n']() {
            return this['_constantM' + 'in'];
        }
        get ['constantMa' + 'x']() {
            return this['_constantM' + 'ax'];
        }
        ['cloneTo'](_0xe1383a) {
            var _0x34867f = _0xe1383a;
            _0x34867f['_type'] = this['_type'], _0x34867f['_constant'] = this['_constant'], _0x34867f['_constantM' + 'in'] = this['_constantM' + 'in'], _0x34867f['_constantM' + 'ax'] = this['_constantM' + 'ax'];
        }
        ['clone']() {
            var _0x474ff1 = new _0x2c01a3();
            return this['cloneTo'](_0x474ff1), _0x474ff1;
        }
    }
    class _0x4da8a7 {
        constructor(_0xc7c1b7, _0x243cd9) {
            this['type'] = 0x0, this['randomRow'] = !0x1, this['rowIndex'] = 0x0, this['cycles'] = 0x0, this['enableUVCh' + 'annels'] = 0x0, this['enable'] = !0x1, this['tiles'] = new _0x4c44b6(0x1, 0x1), this['type'] = 0x0, this['randomRow'] = !0x0, this['rowIndex'] = 0x0, this['cycles'] = 0x1, this['enableUVCh' + 'annels'] = 0x1, this['_frame'] = _0xc7c1b7, this['_startFram' + 'e'] = _0x243cd9;
        }
        get ['frame']() {
            return this['_frame'];
        }
        get ['startFrame']() {
            return this['_startFram' + 'e'];
        }
        ['cloneTo'](_0x53d1fa) {
            var _0x27e2cf = _0x53d1fa;
            this['tiles']['cloneTo'](_0x27e2cf['tiles']), _0x27e2cf['type'] = this['type'], _0x27e2cf['randomRow'] = this['randomRow'], _0x27e2cf['rowIndex'] = this['rowIndex'], _0x27e2cf['cycles'] = this['cycles'], _0x27e2cf['enableUVCh' + 'annels'] = this['enableUVCh' + 'annels'], _0x27e2cf['enable'] = this['enable'], this['_frame']['cloneTo'](_0x27e2cf['_frame']), this['_startFram' + 'e']['cloneTo'](_0x27e2cf['_startFram' + 'e']);
        }
        ['clone']() {
            var _0x169eda, _0x31deaf;
            switch (this['_frame']['type']) {
            case 0x0:
                _0x169eda = _0x5c4f1e['createByCo' + 'nstant'](this['_frame']['constant']);
                break;
            case 0x1:
                _0x169eda = _0x5c4f1e['createByOv' + 'erTime'](this['_frame']['frameOverT' + 'imeData']['clone']());
                break;
            case 0x2:
                _0x169eda = _0x5c4f1e['createByRa' + 'ndomTwoCon' + 'stant'](this['_frame']['constantMi' + 'n'], this['_frame']['constantMa' + 'x']);
                break;
            case 0x3:
                _0x169eda = _0x5c4f1e['createByRa' + 'ndomTwoOve' + 'rTime'](this['_frame']['frameOverT' + 'imeDataMin']['clone'](), this['_frame']['frameOverT' + 'imeDataMax']['clone']());
            }
            switch (this['_startFram' + 'e']['type']) {
            case 0x0:
                _0x31deaf = _0x2c01a3['createByCo' + 'nstant'](this['_startFram' + 'e']['constant']);
                break;
            case 0x1:
                _0x31deaf = _0x2c01a3['createByRa' + 'ndomTwoCon' + 'stant'](this['_startFram' + 'e']['constantMi' + 'n'], this['_startFram' + 'e']['constantMa' + 'x']);
            }
            var _0x3c27f5 = new _0x4da8a7(_0x169eda, _0x31deaf);
            return this['cloneTo'](_0x3c27f5), _0x3c27f5;
        }
    }
    class _0x212687 {
        constructor(_0x532516) {
            this['enable'] = !0x1, this['space'] = 0x0, this['_velocity'] = _0x532516;
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        ['cloneTo'](_0x42ec08) {
            var _0x5156d8 = _0x42ec08;
            this['_velocity']['cloneTo'](_0x5156d8['_velocity']), _0x5156d8['enable'] = this['enable'], _0x5156d8['space'] = this['space'];
        }
        ['clone']() {
            var _0x3071c6;
            switch (this['_velocity']['type']) {
            case 0x0:
                _0x3071c6 = _0x3f3530['createByCo' + 'nstant'](this['_velocity']['constant']['clone']());
                break;
            case 0x1:
                _0x3071c6 = _0x3f3530['createByGr' + 'adient'](this['_velocity']['gradientX']['clone'](), this['_velocity']['gradientY']['clone'](), this['_velocity']['gradientZ']['clone']());
                break;
            case 0x2:
                _0x3071c6 = _0x3f3530['createByRa' + 'ndomTwoCon' + 'stant'](this['_velocity']['constantMi' + 'n']['clone'](), this['_velocity']['constantMa' + 'x']['clone']());
                break;
            case 0x3:
                _0x3071c6 = _0x3f3530['createByRa' + 'ndomTwoGra' + 'dient'](this['_velocity']['gradientXM' + 'in']['clone'](), this['_velocity']['gradientYM' + 'in']['clone'](), this['_velocity']['gradientZM' + 'in']['clone'](), this['_velocity']['gradientXM' + 'ax']['clone'](), this['_velocity']['gradientYM' + 'ax']['clone'](), this['_velocity']['gradientZM' + 'ax']['clone']());
            }
            var _0x29792d = new _0x212687(_0x3071c6);
            return _0x29792d['enable'] = this['enable'], _0x29792d['space'] = this['space'], _0x29792d;
        }
    }
    class _0x5728cf {
    }
    _0x5728cf['WORLDPOSIT' + 'ION'] = _0x1ede74['propertyNa' + 'meToID']('u_WorldPos' + 'ition'), _0x5728cf['WORLDROTAT' + 'ION'] = _0x1ede74['propertyNa' + 'meToID']('u_WorldRot' + 'ation'), _0x5728cf['POSITIONSC' + 'ALE'] = _0x1ede74['propertyNa' + 'meToID']('u_Position' + 'Scale'), _0x5728cf['SIZESCALE'] = _0x1ede74['propertyNa' + 'meToID']('u_SizeScal' + 'e'), _0x5728cf['SCALINGMOD' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_ScalingM' + 'ode'), _0x5728cf['GRAVITY'] = _0x1ede74['propertyNa' + 'meToID']('u_Gravity'), _0x5728cf['THREEDSTAR' + 'TROTATION'] = _0x1ede74['propertyNa' + 'meToID']('u_ThreeDSt' + 'artRotatio' + 'n'), _0x5728cf['STRETCHEDB' + 'ILLBOARDLE' + 'NGTHSCALE'] = _0x1ede74['propertyNa' + 'meToID']('u_Stretche' + 'dBillboard' + 'LengthScal' + 'e'), _0x5728cf['STRETCHEDB' + 'ILLBOARDSP' + 'EEDSCALE'] = _0x1ede74['propertyNa' + 'meToID']('u_Stretche' + 'dBillboard' + 'SpeedScale'), _0x5728cf['SIMULATION' + 'SPACE'] = _0x1ede74['propertyNa' + 'meToID']('u_Simulati' + 'onSpace'), _0x5728cf['CURRENTTIM' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_CurrentT' + 'ime'), _0x5728cf['VOLVELOCIT' + 'YCONST'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityConst'), _0x5728cf['VOLVELOCIT' + 'YGRADIENTX'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tX'), _0x5728cf['VOLVELOCIT' + 'YGRADIENTY'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tY'), _0x5728cf['VOLVELOCIT' + 'YGRADIENTZ'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tZ'), _0x5728cf['VOLVELOCIT' + 'YCONSTMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityConstMa' + 'x'), _0x5728cf['VOLVELOCIT' + 'YGRADIENTX' + 'MAX'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxX'), _0x5728cf['VOLVELOCIT' + 'YGRADIENTY' + 'MAX'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxY'), _0x5728cf['VOLVELOCIT' + 'YGRADIENTZ' + 'MAX'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLVeloc' + 'ityGradien' + 'tMaxZ'), _0x5728cf['VOLSPACETY' + 'PE'] = _0x1ede74['propertyNa' + 'meToID']('u_VOLSpace' + 'Type'), _0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'] = _0x1ede74['propertyNa' + 'meToID']('u_ColorOve' + 'rLifeGradi' + 'entAlphas'), _0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'] = _0x1ede74['propertyNa' + 'meToID']('u_ColorOve' + 'rLifeGradi' + 'entColors'), _0x5728cf['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'] = _0x1ede74['propertyNa' + 'meToID']('u_MaxColor' + 'OverLifeGr' + 'adientAlph' + 'as'), _0x5728cf['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'] = _0x1ede74['propertyNa' + 'meToID']('u_MaxColor' + 'OverLifeGr' + 'adientColo' + 'rs'), _0x5728cf['SOLSIZEGRA' + 'DIENT'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radient'), _0x5728cf['SOLSIZEGRA' + 'DIENTX'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientX'), _0x5728cf['SOLSIZEGRA' + 'DIENTY'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientY'), _0x5728cf['SOLSizeGra' + 'dientZ'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientZ'), _0x5728cf['SOLSizeGra' + 'dientMax'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax'), _0x5728cf['SOLSIZEGRA' + 'DIENTXMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'X'), _0x5728cf['SOLSIZEGRA' + 'DIENTYMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'Y'), _0x5728cf['SOLSizeGra' + 'dientZMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_SOLSizeG' + 'radientMax' + 'Z'), _0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NST'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'Const'), _0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstSepra' + 'rate'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'Gradient'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientX'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientY'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientZ'), _0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstMax'), _0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAXSEPR' + 'ARATE'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'ConstMaxSe' + 'prarate'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'x'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTXMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xX'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTYMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xY'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xZ'), _0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTWMAX'] = _0x1ede74['propertyNa' + 'meToID']('u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xW'), _0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NCYCLES'] = _0x1ede74['propertyNa' + 'meToID']('u_TSACycle' + 's'), _0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NSUBUVLENG' + 'TH'] = _0x1ede74['propertyNa' + 'meToID']('u_TSASubUV' + 'Length'), _0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'] = _0x1ede74['propertyNa' + 'meToID']('u_TSAGradi' + 'entUVs'), _0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTM' + 'AXUVS'] = _0x1ede74['propertyNa' + 'meToID']('u_TSAMaxGr' + 'adientUVs');
    class _0x268ae0 extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('PARTICLESH' + 'URIKEN'), this['_color'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['renderMode'] = _0x268ae0['RENDERMODE' + '_ALPHABLEN' + 'DED'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x268ae0['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP'] = _0x1ede74['getDefineB' + 'yName']('DIFFUSEMAP'), _0x268ae0['SHADERDEFI' + 'NE_TINTCOL' + 'OR'] = _0x1ede74['getDefineB' + 'yName']('TINTCOLOR'), _0x268ae0['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x1ede74['getDefineB' + 'yName']('ADDTIVEFOG'), _0x268ae0['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0x472e04) {
            this['_color']['x'] = _0x472e04, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x2a1482) {
            this['_color']['y'] = _0x2a1482, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0x184598) {
            this['_color']['z'] = _0x184598, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x2fd62f) {
            this['_color']['w'] = _0x2fd62f, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x464ce2) {
            var _0xf61c49 = this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET']);
            _0xf61c49['x'] = _0x464ce2, this['tilingOffs' + 'et'] = _0xf61c49;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x3554b8) {
            var _0x1c8710 = this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET']);
            _0x1c8710['y'] = _0x3554b8, this['tilingOffs' + 'et'] = _0x1c8710;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x3964a9) {
            var _0x24846b = this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET']);
            _0x24846b['z'] = _0x3964a9, this['tilingOffs' + 'et'] = _0x24846b;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x3ce950) {
            var _0x34c700 = this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET']);
            _0x34c700['w'] = _0x3ce950, this['tilingOffs' + 'et'] = _0x34c700;
        }
        set ['renderMode'](_0x24ab85) {
            switch (_0x24ab85) {
            case _0x268ae0['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_NONE'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE'], this['alphaTest'] = !0x1, this['_shaderVal' + 'ues']['addDefine'](_0x268ae0['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x268ae0['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_NONE'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['alphaTest'] = !0x1, this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x268ae0['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('ShurikenPa' + 'rticleMate' + 'rial\x20:\x20ren' + 'derMode\x20va' + 'lue\x20error.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x2afb5a) {
            this['_TintColor' + 'R'] = _0x2afb5a;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x589cbf) {
            this['_TintColor' + 'G'] = _0x589cbf;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x162e66) {
            this['_TintColor' + 'B'] = _0x162e66;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x4e9fd5) {
            this['_TintColor' + 'A'] = _0x4e9fd5;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TINTCOLOR']);
        }
        set ['color'](_0x2ed934) {
            _0x2ed934 ? this['_shaderVal' + 'ues']['addDefine'](_0x268ae0['SHADERDEFI' + 'NE_TINTCOL' + 'OR']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x268ae0['SHADERDEFI' + 'NE_TINTCOL' + 'OR']), this['_shaderVal' + 'ues']['setVector'](_0x268ae0['TINTCOLOR'], _0x2ed934);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x1b8320) {
            this['_MainTex_S' + 'TX'] = _0x1b8320;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x293cf4) {
            this['_MainTex_S' + 'TY'] = _0x293cf4;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x10184e) {
            this['_MainTex_S' + 'TZ'] = _0x10184e;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0xe083a8) {
            this['_MainTex_S' + 'TW'] = _0xe083a8;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x268ae0['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x4ce0ed) {
            _0x4ce0ed && (0x1 != _0x4ce0ed['x'] || 0x1 != _0x4ce0ed['y'] || 0x0 != _0x4ce0ed['z'] || 0x0 != _0x4ce0ed['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x268ae0['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x268ae0['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x268ae0['TILINGOFFS' + 'ET'], _0x4ce0ed);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x268ae0['DIFFUSETEX' + 'TURE']);
        }
        set ['texture'](_0x4628bb) {
            _0x4628bb ? this['_shaderVal' + 'ues']['addDefine'](_0x268ae0['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x268ae0['SHADERDEFI' + 'NE_DIFFUSE' + 'MAP']), this['_shaderVal' + 'ues']['setTexture'](_0x268ae0['DIFFUSETEX' + 'TURE'], _0x4628bb);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x268ae0['DEPTH_WRIT' + 'E']);
        }
        set ['depthWrite'](_0x135aba) {
            this['_shaderVal' + 'ues']['setBool'](_0x268ae0['DEPTH_WRIT' + 'E'], _0x135aba);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x268ae0['CULL']);
        }
        set ['cull'](_0x4f934b) {
            this['_shaderVal' + 'ues']['setInt'](_0x268ae0['CULL'], _0x4f934b);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x268ae0['BLEND']);
        }
        set ['blend'](_0x331798) {
            this['_shaderVal' + 'ues']['setInt'](_0x268ae0['BLEND'], _0x331798);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x268ae0['BLEND_SRC']);
        }
        set ['blendSrc'](_0x44f34f) {
            this['_shaderVal' + 'ues']['setInt'](_0x268ae0['BLEND_SRC'], _0x44f34f);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x268ae0['BLEND_DST']);
        }
        set ['blendDst'](_0x2d6df8) {
            this['_shaderVal' + 'ues']['setInt'](_0x268ae0['BLEND_DST'], _0x2d6df8);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x268ae0['DEPTH_TEST']);
        }
        set ['depthTest'](_0x147620) {
            this['_shaderVal' + 'ues']['setInt'](_0x268ae0['DEPTH_TEST'], _0x147620);
        }
        ['clone']() {
            var _0x378fc3 = new _0x268ae0();
            return this['cloneTo'](_0x378fc3), _0x378fc3;
        }
    }
    _0x268ae0['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x0, _0x268ae0['RENDERMODE' + '_ADDTIVE'] = 0x1, _0x268ae0['DIFFUSETEX' + 'TURE'] = _0x1ede74['propertyNa' + 'meToID']('u_texture'), _0x268ae0['TINTCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Tintcolo' + 'r'), _0x268ae0['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x268ae0['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x268ae0['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x268ae0['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x268ae0['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x268ae0['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x268ae0['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x17f555 {
        constructor() {
        }
        static ['setCollide' + 'rCollision'](_0x4afcd5, _0x10b84b, _0x3ac05c) {
        }
        static ['getICollid' + 'erCollisio' + 'n'](_0x4fafca, _0x25b088) {
            return !0x1;
        }
    }
    _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'] = 0x1, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_STATICFIL' + 'TER'] = 0x2, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_KINEMATIC' + 'FILTER'] = 0x4, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_DEBRISFIL' + 'TER'] = 0x8, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_SENSORTRI' + 'GGER'] = 0x10, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CHARACTER' + 'FILTER'] = 0x20, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER1'] = 0x40, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER2'] = 0x80, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER3'] = 0x100, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER4'] = 0x200, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER5'] = 0x400, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER6'] = 0x800, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER7'] = 0x1000, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER8'] = 0x2000, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER9'] = 0x4000, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_CUSTOMFIL' + 'TER10'] = 0x8000, _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'] = -0x1, _0x17f555['gravity'] = new _0x4795b3(0x0, -9.81, 0x0);
    class _0x58c4a4 extends _0x26d0eb {
        constructor(_0x1d8489) {
            super(_0x1d8489), this['_finalGrav' + 'ity'] = new _0x4795b3(), this['_tempRotat' + 'ionMatrix'] = new _0x16c2be(), this['_mesh'] = null, this['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = 0x0, this['stretchedB' + 'illboardSp' + 'eedScale'] = 0x0, this['stretchedB' + 'illboardLe' + 'ngthScale'] = 0x2, this['_defaultBo' + 'undBox'] = new _0x3555e9(new _0x4795b3(), new _0x4795b3()), this['renderMode'] = 0x0, this['_supportOc' + 'tree'] = !0x1;
        }
        get ['renderMode']() {
            return this['_renderMod' + 'e'];
        }
        set ['renderMode'](_0x476f1c) {
            if (this['_renderMod' + 'e'] !== _0x476f1c) {
                var _0x20aefe = this['_shaderVal' + 'ues'];
                switch (this['_renderMod' + 'e']) {
                case 0x0:
                    _0x20aefe['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD']);
                    break;
                case 0x1:
                    _0x20aefe['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD']);
                    break;
                case 0x2:
                    _0x20aefe['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD']);
                    break;
                case 0x3:
                    _0x20aefe['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D']);
                    break;
                case 0x4:
                    _0x20aefe['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH']);
                }
                switch (this['_renderMod' + 'e'] = _0x476f1c, _0x476f1c) {
                case 0x0:
                    _0x20aefe['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD']);
                    break;
                case 0x1:
                    _0x20aefe['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD']);
                    break;
                case 0x2:
                    _0x20aefe['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD']);
                    break;
                case 0x3:
                    _0x20aefe['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D']);
                    break;
                case 0x4:
                    _0x20aefe['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH']);
                    break;
                default:
                    throw new Error('ShurikenPa' + 'rticleRend' + 'er:\x20unknow' + 'n\x20renderMo' + 'de\x20Value.');
                }
                var _0x4158e3 = this['_owner']['particleSy' + 'stem'];
                _0x4158e3 && _0x4158e3['_initBuffe' + 'rDatas']();
            }
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x49ce17) {
            this['_mesh'] !== _0x49ce17 && (this['_mesh'] && this['_mesh']['_removeRef' + 'erence'](), this['_mesh'] = _0x49ce17, _0x49ce17 && _0x49ce17['_addRefere' + 'nce'](), this['_owner']['particleSy' + 'stem']['_initBuffe' + 'rDatas']());
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            if ((_0x5d49fe = this['_bounds']['getMin']())['x'] = -Number['MAX_VALUE'], _0x5d49fe['y'] = -Number['MAX_VALUE'], _0x5d49fe['z'] = -Number['MAX_VALUE'], this['_bounds']['setMin'](_0x5d49fe), (_0x58c43e = this['_bounds']['getMax']())['x'] = Number['MAX_VALUE'], _0x58c43e['y'] = Number['MAX_VALUE'], _0x58c43e['z'] = Number['MAX_VALUE'], this['_bounds']['setMax'](_0x58c43e), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x5d49fe = this['_bounds']['getMin'](), _0x58c43e = this['_bounds']['getMax'](), _0x249155 = _0x2585ad['_cullingBu' + 'ffer'];
                _0x249155[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x5d49fe['x'], _0x249155[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x5d49fe['y'], _0x249155[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x5d49fe['z'], _0x249155[this['_cullingBu' + 'fferIndex'] + 0x4] = _0x58c43e['x'], _0x249155[this['_cullingBu' + 'fferIndex'] + 0x5] = _0x58c43e['y'], _0x249155[this['_cullingBu' + 'fferIndex'] + 0x6] = _0x58c43e['z'];
            }
        }
        ['_needRende' + 'r'](_0x527c68, _0x5cfb49) {
            return !_0x527c68 || !!_0x527c68['intersects'](this['bounds']['_getBoundB' + 'ox']()) && !!this['_owner']['particleSy' + 'stem']['isAlive'];
        }
        ['_renderUpd' + 'ate'](_0x56365d, _0x7b0b8f) {
            var _0x4c317f = this['_owner']['particleSy' + 'stem'], _0xdb8b38 = this['_shaderVal' + 'ues'], _0x493927 = this['_owner']['transform'];
            switch (_0x4c317f['simulation' + 'Space']) {
            case 0x0:
                break;
            case 0x1:
                _0xdb8b38['setVector3'](_0x5728cf['WORLDPOSIT' + 'ION'], _0x493927['position']), _0xdb8b38['setQuatern' + 'ion'](_0x5728cf['WORLDROTAT' + 'ION'], _0x493927['rotation']);
                break;
            default:
                throw new Error('ShurikenPa' + 'rticleMate' + 'rial:\x20Simu' + 'lationSpac' + 'e\x20value\x20is' + '\x20invalid.');
            }
            switch (_0x4c317f['scaleMode']) {
            case 0x0:
                var _0x2b3ff3 = _0x493927['getWorldLo' + 'ssyScale']();
                _0xdb8b38['setVector3'](_0x5728cf['POSITIONSC' + 'ALE'], _0x2b3ff3), _0xdb8b38['setVector3'](_0x5728cf['SIZESCALE'], _0x2b3ff3);
                break;
            case 0x1:
                var _0x581166 = _0x493927['localScale'];
                _0xdb8b38['setVector3'](_0x5728cf['POSITIONSC' + 'ALE'], _0x581166), _0xdb8b38['setVector3'](_0x5728cf['SIZESCALE'], _0x581166);
                break;
            case 0x2:
                _0xdb8b38['setVector3'](_0x5728cf['POSITIONSC' + 'ALE'], _0x493927['getWorldLo' + 'ssyScale']()), _0xdb8b38['setVector3'](_0x5728cf['SIZESCALE'], _0x4795b3['_ONE']);
            }
            _0x4795b3['scale'](_0x17f555['gravity'], _0x4c317f['gravityMod' + 'ifier'], this['_finalGrav' + 'ity']), _0xdb8b38['setVector3'](_0x5728cf['GRAVITY'], this['_finalGrav' + 'ity']), _0xdb8b38['setInt'](_0x5728cf['SIMULATION' + 'SPACE'], _0x4c317f['simulation' + 'Space']), _0xdb8b38['setBool'](_0x5728cf['THREEDSTAR' + 'TROTATION'], _0x4c317f['threeDStar' + 'tRotation']), _0xdb8b38['setInt'](_0x5728cf['SCALINGMOD' + 'E'], _0x4c317f['scaleMode']), _0xdb8b38['setNumber'](_0x5728cf['STRETCHEDB' + 'ILLBOARDLE' + 'NGTHSCALE'], this['stretchedB' + 'illboardLe' + 'ngthScale']), _0xdb8b38['setNumber'](_0x5728cf['STRETCHEDB' + 'ILLBOARDSP' + 'EEDSCALE'], this['stretchedB' + 'illboardSp' + 'eedScale']), _0xdb8b38['setNumber'](_0x5728cf['CURRENTTIM' + 'E'], _0x4c317f['_currentTi' + 'me']);
        }
        get ['bounds']() {
            return this['_boundsCha' + 'nge'] && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = !0x1), this['_bounds'];
        }
        ['_destroy']() {
            super['_destroy'](), this['_mesh'] && (this['_mesh']['_removeRef' + 'erence'](), this['_mesh'] = null);
        }
    }
    class _0x391bdc {
        constructor() {
        }
    }
    _0x391bdc['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0'] = 0x0, _0x391bdc['PARTICLE_P' + 'OSITION0'] = 0x1, _0x391bdc['PARTICLE_C' + 'OLOR0'] = 0x2, _0x391bdc['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0'] = 0x3, _0x391bdc['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME'] = 0x4, _0x391bdc['PARTICLE_D' + 'IRECTIONTI' + 'ME'] = 0x5, _0x391bdc['PARTICLE_S' + 'TARTCOLOR0'] = 0x6, _0x391bdc['PARTICLE_E' + 'NDCOLOR0'] = 0x7, _0x391bdc['PARTICLE_S' + 'TARTSIZE'] = 0x8, _0x391bdc['PARTICLE_S' + 'TARTROTATI' + 'ON'] = 0x9, _0x391bdc['PARTICLE_S' + 'TARTSPEED'] = 0xa, _0x391bdc['PARTICLE_R' + 'ANDOM0'] = 0xb, _0x391bdc['PARTICLE_R' + 'ANDOM1'] = 0xc, _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N'] = 0xd, _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'] = 0xe;
    class _0x25e31b extends _0x391bdc {
        static get ['vertexDecl' + 'aration']() {
            return _0x25e31b['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x25e31b['_vertexDec' + 'laration'] = new _0x3c5011(0x98, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0']),
                new _0x5c79c8(0x10, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME']),
                new _0x5c79c8(0x20, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_D' + 'IRECTIONTI' + 'ME']),
                new _0x5c79c8(0x30, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_S' + 'TARTCOLOR0']),
                new _0x5c79c8(0x40, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_S' + 'TARTSIZE']),
                new _0x5c79c8(0x4c, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_S' + 'TARTROTATI' + 'ON']),
                new _0x5c79c8(0x58, _0x43e6c5['Single'], _0x391bdc['PARTICLE_S' + 'TARTSPEED']),
                new _0x5c79c8(0x5c, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_R' + 'ANDOM0']),
                new _0x5c79c8(0x6c, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_R' + 'ANDOM1']),
                new _0x5c79c8(0x7c, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N']),
                new _0x5c79c8(0x88, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'])
            ]);
        }
        get ['cornerText' + 'ureCoordin' + 'ate']() {
            return this['_cornerTex' + 'tureCoordi' + 'nate'];
        }
        get ['positionSt' + 'artLifeTim' + 'e']() {
            return this['_positionS' + 'tartLifeTi' + 'me'];
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        get ['startColor']() {
            return this['_startColo' + 'r'];
        }
        get ['startSize']() {
            return this['_startSize'];
        }
        get ['startRotat' + 'ion0']() {
            return this['_startRota' + 'tion0'];
        }
        get ['startRotat' + 'ion1']() {
            return this['_startRota' + 'tion1'];
        }
        get ['startRotat' + 'ion2']() {
            return this['_startRota' + 'tion2'];
        }
        get ['startLifeT' + 'ime']() {
            return this['_startLife' + 'Time'];
        }
        get ['time']() {
            return this['_time'];
        }
        get ['startSpeed']() {
            return this['_startSpee' + 'd'];
        }
        get ['random0']() {
            return this['_randoms0'];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulation' + 'WorldPosti' + 'on']() {
            return this['_simulatio' + 'nWorldPost' + 'ion'];
        }
        constructor(_0x4c33b7, _0x253a0a, _0x334261, _0xb535ac, _0x5072e2, _0x4f0e89, _0x4eba29, _0x4ac8c9, _0x5867ca, _0xa359c9, _0x2b4bec, _0x2f0bad, _0x555846, _0x35de77) {
            super(), this['_cornerTex' + 'tureCoordi' + 'nate'] = _0x4c33b7, this['_positionS' + 'tartLifeTi' + 'me'] = _0x253a0a, this['_velocity'] = _0x334261, this['_startColo' + 'r'] = _0xb535ac, this['_startSize'] = _0x5072e2, this['_startRota' + 'tion0'] = _0x4f0e89, this['_startRota' + 'tion1'] = _0x4eba29, this['_startRota' + 'tion2'] = _0x4ac8c9, this['_startLife' + 'Time'] = _0x5867ca, this['_time'] = _0xa359c9, this['_startSpee' + 'd'] = _0x2b4bec, this['_randoms0'] = this['random0'], this['_randoms1'] = this['random1'], this['_simulatio' + 'nWorldPost' + 'ion'] = _0x35de77;
        }
    }
    class _0x52cf21 extends _0x391bdc {
        static ['__init__']() {
            _0x52cf21['_vertexDec' + 'laration'] = new _0x3c5011(0xac, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_P' + 'OSITION0']),
                new _0x5c79c8(0xc, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_C' + 'OLOR0']),
                new _0x5c79c8(0x1c, _0x43e6c5['Vector2'], _0x391bdc['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0']),
                new _0x5c79c8(0x24, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME']),
                new _0x5c79c8(0x34, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_D' + 'IRECTIONTI' + 'ME']),
                new _0x5c79c8(0x44, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_S' + 'TARTCOLOR0']),
                new _0x5c79c8(0x54, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_S' + 'TARTSIZE']),
                new _0x5c79c8(0x60, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_S' + 'TARTROTATI' + 'ON']),
                new _0x5c79c8(0x6c, _0x43e6c5['Single'], _0x391bdc['PARTICLE_S' + 'TARTSPEED']),
                new _0x5c79c8(0x70, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_R' + 'ANDOM0']),
                new _0x5c79c8(0x80, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_R' + 'ANDOM1']),
                new _0x5c79c8(0x90, _0x43e6c5['Vector3'], _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N']),
                new _0x5c79c8(0x9c, _0x43e6c5['Vector4'], _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON'])
            ]);
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x52cf21['_vertexDec' + 'laration'];
        }
        get ['cornerText' + 'ureCoordin' + 'ate']() {
            return this['_cornerTex' + 'tureCoordi' + 'nate'];
        }
        get ['position']() {
            return this['_positionS' + 'tartLifeTi' + 'me'];
        }
        get ['velocity']() {
            return this['_velocity'];
        }
        get ['startColor']() {
            return this['_startColo' + 'r'];
        }
        get ['startSize']() {
            return this['_startSize'];
        }
        get ['startRotat' + 'ion0']() {
            return this['_startRota' + 'tion0'];
        }
        get ['startRotat' + 'ion1']() {
            return this['_startRota' + 'tion1'];
        }
        get ['startRotat' + 'ion2']() {
            return this['_startRota' + 'tion2'];
        }
        get ['startLifeT' + 'ime']() {
            return this['_startLife' + 'Time'];
        }
        get ['time']() {
            return this['_time'];
        }
        get ['startSpeed']() {
            return this['_startSpee' + 'd'];
        }
        get ['random0']() {
            return this['_randoms0'];
        }
        get ['random1']() {
            return this['_randoms1'];
        }
        get ['simulation' + 'WorldPosti' + 'on']() {
            return this['_simulatio' + 'nWorldPost' + 'ion'];
        }
        constructor(_0x2327bc, _0x148919, _0x3998d8, _0x14bf7d, _0x5051e0, _0x20cc39, _0x5408c8, _0x3e3e7b, _0x40d62c, _0xda9351, _0x13c8e1, _0x178dc1, _0x54b5df, _0x289756) {
            super(), this['_cornerTex' + 'tureCoordi' + 'nate'] = _0x2327bc, this['_positionS' + 'tartLifeTi' + 'me'] = _0x148919, this['_velocity'] = _0x3998d8, this['_startColo' + 'r'] = _0x14bf7d, this['_startSize'] = _0x5051e0, this['_startRota' + 'tion0'] = _0x20cc39, this['_startRota' + 'tion1'] = _0x5408c8, this['_startRota' + 'tion2'] = _0x3e3e7b, this['_startLife' + 'Time'] = _0x40d62c, this['_time'] = _0xda9351, this['_startSpee' + 'd'] = _0x13c8e1, this['_randoms0'] = this['random0'], this['_randoms1'] = this['random1'], this['_simulatio' + 'nWorldPost' + 'ion'] = _0x289756;
        }
    }
    class _0x43c0d5 {
        constructor(_0x206527, _0x1d3f0b) {
            this['center'] = _0x206527, this['radius'] = _0x1d3f0b;
        }
        ['toDefault']() {
            this['center']['toDefault'](), this['radius'] = 0x0;
        }
        static ['createFrom' + 'SubPoints'](_0x4db24a, _0x4a7088, _0x51852f, _0x392b0c) {
            if (null == _0x4db24a)
                throw new Error('points');
            if (_0x4a7088 < 0x0 || _0x4a7088 >= _0x4db24a['length'])
                throw new Error('start' + _0x4a7088 + ('Must\x20be\x20in' + '\x20the\x20range' + '\x20[0,\x20') + (_0x4db24a['length'] - 0x1) + ']');
            if (_0x51852f < 0x0 || _0x4a7088 + _0x51852f > _0x4db24a['length'])
                throw new Error('count' + _0x51852f + ('Must\x20be\x20in' + '\x20the\x20range' + '\x20<=\x20') + _0x4db24a['length'] + '}');
            var _0xc0519 = _0x4a7088 + _0x51852f, _0x14b075 = _0x43c0d5['_tempVecto' + 'r3'];
            _0x14b075['x'] = 0x0, _0x14b075['y'] = 0x0, _0x14b075['z'] = 0x0;
            for (var _0x4ed94b = _0x4a7088; _0x4ed94b < _0xc0519; ++_0x4ed94b)
                _0x4795b3['add'](_0x4db24a[_0x4ed94b], _0x14b075, _0x14b075);
            var _0x5730dc = _0x392b0c['center'];
            _0x4795b3['scale'](_0x14b075, 0x1 / _0x51852f, _0x5730dc);
            var _0x1f85d9 = 0x0;
            for (_0x4ed94b = _0x4a7088; _0x4ed94b < _0xc0519; ++_0x4ed94b) {
                var _0x3bd568 = _0x4795b3['distanceSq' + 'uared'](_0x5730dc, _0x4db24a[_0x4ed94b]);
                _0x3bd568 > _0x1f85d9 && (_0x1f85d9 = _0x3bd568);
            }
            _0x392b0c['radius'] = Math['sqrt'](_0x1f85d9);
        }
        static ['createfrom' + 'Points'](_0x504f5e, _0x3a40eb) {
            if (null == _0x504f5e)
                throw new Error('points');
            _0x43c0d5['createFrom' + 'SubPoints'](_0x504f5e, 0x0, _0x504f5e['length'], _0x3a40eb);
        }
        ['intersects' + 'RayDistanc' + 'e'](_0x51f069) {
            return _0xb064b3['intersects' + 'RayAndSphe' + 'reRD'](_0x51f069, this);
        }
        ['intersects' + 'RayPoint'](_0x267f46, _0x26420c) {
            return _0xb064b3['intersects' + 'RayAndSphe' + 'reRP'](_0x267f46, this, _0x26420c);
        }
        ['cloneTo'](_0x3ba259) {
            var _0x2e9b7f = _0x3ba259;
            this['center']['cloneTo'](_0x2e9b7f['center']), _0x2e9b7f['radius'] = this['radius'];
        }
        ['clone']() {
            var _0x4f83c5 = new _0x43c0d5(new _0x4795b3(), 0x0);
            return this['cloneTo'](_0x4f83c5), _0x4f83c5;
        }
    }
    _0x43c0d5['_tempVecto' + 'r3'] = new _0x4795b3();
    class _0x3d0159 {
        constructor(_0x1d0b88) {
            this['_temp'] = new Uint32Array(0x1), this['seeds'] = new Uint32Array(0x4), this['seeds'][0x0] = _0x1d0b88, this['seeds'][0x1] = 0x6c078965 * this['seeds'][0x0] + 0x1, this['seeds'][0x2] = 0x6c078965 * this['seeds'][0x1] + 0x1, this['seeds'][0x3] = 0x6c078965 * this['seeds'][0x2] + 0x1;
        }
        static ['getFloatFr' + 'omInt'](_0x47d091) {
            return 0x1 / 0x7fffff * (0x7fffff & _0x47d091);
        }
        static ['getByteFro' + 'mInt'](_0x4447fc) {
            return (0x7fffff & _0x4447fc) >>> 0xf;
        }
        get ['seed']() {
            return this['seeds'][0x0];
        }
        set ['seed'](_0x520746) {
            this['seeds'][0x0] = _0x520746, this['seeds'][0x1] = 0x6c078965 * this['seeds'][0x0] + 0x1, this['seeds'][0x2] = 0x6c078965 * this['seeds'][0x1] + 0x1, this['seeds'][0x3] = 0x6c078965 * this['seeds'][0x2] + 0x1;
        }
        ['getUint']() {
            return this['_temp'][0x0] = this['seeds'][0x0] ^ this['seeds'][0x0] << 0xb, this['seeds'][0x0] = this['seeds'][0x1], this['seeds'][0x1] = this['seeds'][0x2], this['seeds'][0x2] = this['seeds'][0x3], this['seeds'][0x3] = this['seeds'][0x3] ^ this['seeds'][0x3] >>> 0x13 ^ this['_temp'][0x0] ^ this['_temp'][0x0] >>> 0x8, this['seeds'][0x3];
        }
        ['getFloat']() {
            return this['getUint'](), (0x7fffff & this['seeds'][0x3]) * (0x1 / 0x7fffff);
        }
        ['getSignedF' + 'loat']() {
            return 0x2 * this['getFloat']() - 0x1;
        }
    }
    class _0x580b02 {
        constructor() {
            this['_emissionR' + 'ate'] = 0xa, this['_destroyed'] = !0x1, this['_bursts'] = [];
        }
        set ['emissionRa' + 'te'](_0x18098a) {
            if (_0x18098a < 0x0)
                throw new Error('ParticleBa' + 'seShape:em' + 'issionRate' + '\x20value\x20mus' + 't\x20large\x20or' + '\x20equal\x20tha' + 'n\x200.');
            this['_emissionR' + 'ate'] = _0x18098a;
        }
        get ['emissionRa' + 'te']() {
            return this['_emissionR' + 'ate'];
        }
        get ['destroyed']() {
            return this['_destroyed'];
        }
        ['destroy']() {
            this['_bursts'] = null, this['_destroyed'] = !0x0;
        }
        ['getBurstsC' + 'ount']() {
            return this['_bursts']['length'];
        }
        ['getBurstBy' + 'Index'](_0x351ba3) {
            return this['_bursts'][_0x351ba3];
        }
        ['addBurst'](_0x13ba08) {
            var _0x336815 = this['_bursts']['length'];
            if (_0x336815 > 0x0) {
                for (var _0x3b67f5 = 0x0; _0x3b67f5 < _0x336815; _0x3b67f5++)
                    this['_bursts'][_0x3b67f5]['time'] > _0x13ba08['time'] && this['_bursts']['splice'](_0x3b67f5, 0x0, _0x13ba08);
            }
            this['_bursts']['push'](_0x13ba08);
        }
        ['removeBurs' + 't'](_0x4cd4fc) {
            var _0x24ff03 = this['_bursts']['indexOf'](_0x4cd4fc);
            -0x1 !== _0x24ff03 && this['_bursts']['splice'](_0x24ff03, 0x1);
        }
        ['removeBurs' + 'tByIndex'](_0x55a85a) {
            this['_bursts']['splice'](_0x55a85a, 0x1);
        }
        ['clearBurst']() {
            this['_bursts']['length'] = 0x0;
        }
        ['cloneTo'](_0x5ef04a) {
            var _0x4a2cd8 = _0x5ef04a, _0x7fa369 = _0x4a2cd8['_bursts'];
            _0x7fa369['length'] = this['_bursts']['length'];
            for (var _0x3b23d2 = 0x0, _0xd61048 = this['_bursts']['length']; _0x3b23d2 < _0xd61048; _0x3b23d2++) {
                var _0xad2119 = _0x7fa369[_0x3b23d2];
                _0xad2119 ? this['_bursts'][_0x3b23d2]['cloneTo'](_0xad2119) : _0x7fa369[_0x3b23d2] = this['_bursts'][_0x3b23d2]['clone']();
            }
            _0x4a2cd8['_emissionR' + 'ate'] = this['_emissionR' + 'ate'], _0x4a2cd8['enable'] = this['enable'];
        }
        ['clone']() {
            var _0x1ab1aa = new _0x580b02();
            return this['cloneTo'](_0x1ab1aa), _0x1ab1aa;
        }
    }
    class _0x7412d7 {
        constructor() {
        }
        static ['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x506881, _0x1d0bb7) {
            for (var _0x17c42a = 0x1, _0x48b9df = _0x506881['gradientCo' + 'unt']; _0x17c42a < _0x48b9df; _0x17c42a++) {
                var _0x56ec43 = _0x506881['getKeyByIn' + 'dex'](_0x17c42a);
                if (_0x56ec43 >= _0x1d0bb7) {
                    var _0x26f6ff = _0x506881['getKeyByIn' + 'dex'](_0x17c42a - 0x1), _0x5cbbbd = (_0x1d0bb7 - _0x26f6ff) / (_0x56ec43 - _0x26f6ff);
                    return _0x33d6e0['MathUtil']['lerp'](_0x506881['getValueBy' + 'Index'](_0x17c42a - 0x1), _0x506881['getValueBy' + 'Index'](_0x17c42a), _0x5cbbbd);
                }
            }
            throw new Error('ShurikenPa' + 'rticleData' + ':\x20can\x27t\x20ge' + 't\x20value\x20fo' + 'am\x20startLi' + 'feTimeGrad' + 'ient.');
        }
        static ['_randomInv' + 'ertRoation' + 'Array'](_0x5c1330, _0x217083, _0x59d5d3, _0xc6eb64, _0x4b1130) {
            var _0x2a5f5f;
            _0xc6eb64 ? (_0xc6eb64['seed'] = _0x4b1130[0x6], _0x2a5f5f = _0xc6eb64['getFloat'](), _0x4b1130[0x6] = _0xc6eb64['seed']) : _0x2a5f5f = Math['random'](), _0x2a5f5f < _0x59d5d3 ? (_0x217083['x'] = -_0x5c1330['x'], _0x217083['y'] = -_0x5c1330['y'], _0x217083['z'] = -_0x5c1330['z']) : (_0x217083['x'] = _0x5c1330['x'], _0x217083['y'] = _0x5c1330['y'], _0x217083['z'] = _0x5c1330['z']);
        }
        static ['_randomInv' + 'ertRoation'](_0x362d7b, _0x1011c5, _0x393b13, _0x2126b5) {
            var _0x46d821;
            return _0x393b13 ? (_0x393b13['seed'] = _0x2126b5[0x6], _0x46d821 = _0x393b13['getFloat'](), _0x2126b5[0x6] = _0x393b13['seed']) : _0x46d821 = Math['random'](), _0x46d821 < _0x1011c5 && (_0x362d7b = -_0x362d7b), _0x362d7b;
        }
        static ['create'](_0x1c3525, _0x494587, _0x2f1960) {
            var _0x1c1d09 = _0x1c3525['autoRandom' + 'Seed'], _0x16ff73 = _0x1c3525['_rand'], _0x1e9365 = _0x1c3525['_randomSee' + 'ds'];
            switch (_0x1c3525['startColor' + 'Type']) {
            case 0x0:
                var _0x3349c9 = _0x1c3525['startColor' + 'Constant'];
                _0x7412d7['startColor']['x'] = _0x3349c9['x'], _0x7412d7['startColor']['y'] = _0x3349c9['y'], _0x7412d7['startColor']['z'] = _0x3349c9['z'], _0x7412d7['startColor']['w'] = _0x3349c9['w'];
                break;
            case 0x2:
                _0x1c1d09 ? _0x333f41['lerp'](_0x1c3525['startColor' + 'ConstantMi' + 'n'], _0x1c3525['startColor' + 'ConstantMa' + 'x'], Math['random'](), _0x7412d7['startColor']) : (_0x16ff73['seed'] = _0x1e9365[0x3], _0x333f41['lerp'](_0x1c3525['startColor' + 'ConstantMi' + 'n'], _0x1c3525['startColor' + 'ConstantMa' + 'x'], _0x16ff73['getFloat'](), _0x7412d7['startColor']), _0x1e9365[0x3] = _0x16ff73['seed']);
            }
            var _0x5af019 = _0x1c3525['colorOverL' + 'ifetime'];
            if (_0x5af019 && _0x5af019['enable']) {
                var _0x1ac9f8 = _0x5af019['color'];
                switch (_0x1ac9f8['type']) {
                case 0x0:
                    _0x7412d7['startColor']['x'] = _0x7412d7['startColor']['x'] * _0x1ac9f8['constant']['x'], _0x7412d7['startColor']['y'] = _0x7412d7['startColor']['y'] * _0x1ac9f8['constant']['y'], _0x7412d7['startColor']['z'] = _0x7412d7['startColor']['z'] * _0x1ac9f8['constant']['z'], _0x7412d7['startColor']['w'] = _0x7412d7['startColor']['w'] * _0x1ac9f8['constant']['w'];
                    break;
                case 0x2:
                    var _0x7f1d9b;
                    _0x1c1d09 ? _0x7f1d9b = Math['random']() : (_0x16ff73['seed'] = _0x1e9365[0xa], _0x7f1d9b = _0x16ff73['getFloat'](), _0x1e9365[0xa] = _0x16ff73['seed']);
                    var _0x113ec8 = _0x1ac9f8['constantMi' + 'n'], _0x598153 = _0x1ac9f8['constantMa' + 'x'];
                    _0x7412d7['startColor']['x'] = _0x7412d7['startColor']['x'] * _0x33d6e0['MathUtil']['lerp'](_0x113ec8['x'], _0x598153['x'], _0x7f1d9b), _0x7412d7['startColor']['y'] = _0x7412d7['startColor']['y'] * _0x33d6e0['MathUtil']['lerp'](_0x113ec8['y'], _0x598153['y'], _0x7f1d9b), _0x7412d7['startColor']['z'] = _0x7412d7['startColor']['z'] * _0x33d6e0['MathUtil']['lerp'](_0x113ec8['z'], _0x598153['z'], _0x7f1d9b), _0x7412d7['startColor']['w'] = _0x7412d7['startColor']['w'] * _0x33d6e0['MathUtil']['lerp'](_0x113ec8['w'], _0x598153['w'], _0x7f1d9b);
                }
            }
            var _0x318e25 = _0x7412d7['startSize'];
            switch (_0x1c3525['startSizeT' + 'ype']) {
            case 0x0:
                if (_0x1c3525['threeDStar' + 'tSize']) {
                    var _0x392397 = _0x1c3525['startSizeC' + 'onstantSep' + 'arate'];
                    _0x318e25[0x0] = _0x392397['x'], _0x318e25[0x1] = _0x392397['y'], _0x318e25[0x2] = _0x392397['z'];
                } else
                    _0x318e25[0x0] = _0x318e25[0x1] = _0x318e25[0x2] = _0x1c3525['startSizeC' + 'onstant'];
                break;
            case 0x2:
                if (_0x1c3525['threeDStar' + 'tSize']) {
                    var _0x597015 = _0x1c3525['startSizeC' + 'onstantMin' + 'Separate'], _0x33ecbb = _0x1c3525['startSizeC' + 'onstantMax' + 'Separate'];
                    _0x1c1d09 ? (_0x318e25[0x0] = _0x33d6e0['MathUtil']['lerp'](_0x597015['x'], _0x33ecbb['x'], Math['random']()), _0x318e25[0x1] = _0x33d6e0['MathUtil']['lerp'](_0x597015['y'], _0x33ecbb['y'], Math['random']()), _0x318e25[0x2] = _0x33d6e0['MathUtil']['lerp'](_0x597015['z'], _0x33ecbb['z'], Math['random']())) : (_0x16ff73['seed'] = _0x1e9365[0x4], _0x318e25[0x0] = _0x33d6e0['MathUtil']['lerp'](_0x597015['x'], _0x33ecbb['x'], _0x16ff73['getFloat']()), _0x318e25[0x1] = _0x33d6e0['MathUtil']['lerp'](_0x597015['y'], _0x33ecbb['y'], _0x16ff73['getFloat']()), _0x318e25[0x2] = _0x33d6e0['MathUtil']['lerp'](_0x597015['z'], _0x33ecbb['z'], _0x16ff73['getFloat']()), _0x1e9365[0x4] = _0x16ff73['seed']);
                } else
                    _0x1c1d09 ? _0x318e25[0x0] = _0x318e25[0x1] = _0x318e25[0x2] = _0x33d6e0['MathUtil']['lerp'](_0x1c3525['startSizeC' + 'onstantMin'], _0x1c3525['startSizeC' + 'onstantMax'], Math['random']()) : (_0x16ff73['seed'] = _0x1e9365[0x4], _0x318e25[0x0] = _0x318e25[0x1] = _0x318e25[0x2] = _0x33d6e0['MathUtil']['lerp'](_0x1c3525['startSizeC' + 'onstantMin'], _0x1c3525['startSizeC' + 'onstantMax'], _0x16ff73['getFloat']()), _0x1e9365[0x4] = _0x16ff73['seed']);
            }
            var _0x4b228c = _0x1c3525['sizeOverLi' + 'fetime'];
            if (_0x4b228c && _0x4b228c['enable'] && 0x1 === _0x4b228c['size']['type']) {
                var _0x45b5c8, _0x36eb17 = _0x4b228c['size'];
                if (_0x36eb17['separateAx' + 'es'])
                    _0x1c1d09 ? (_0x318e25[0x0] = _0x318e25[0x0] * _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'nSeparate']['x'], _0x36eb17['constantMa' + 'xSeparate']['x'], Math['random']()), _0x318e25[0x1] = _0x318e25[0x1] * _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'nSeparate']['y'], _0x36eb17['constantMa' + 'xSeparate']['y'], Math['random']()), _0x318e25[0x2] = _0x318e25[0x2] * _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'nSeparate']['z'], _0x36eb17['constantMa' + 'xSeparate']['z'], Math['random']())) : (_0x16ff73['seed'] = _0x1e9365[0xb], _0x318e25[0x0] = _0x318e25[0x0] * _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'nSeparate']['x'], _0x36eb17['constantMa' + 'xSeparate']['x'], _0x16ff73['getFloat']()), _0x318e25[0x1] = _0x318e25[0x1] * _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'nSeparate']['y'], _0x36eb17['constantMa' + 'xSeparate']['y'], _0x16ff73['getFloat']()), _0x318e25[0x2] = _0x318e25[0x2] * _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'nSeparate']['z'], _0x36eb17['constantMa' + 'xSeparate']['z'], _0x16ff73['getFloat']()), _0x1e9365[0xb] = _0x16ff73['seed']);
                else
                    _0x1c1d09 ? _0x45b5c8 = _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'n'], _0x36eb17['constantMa' + 'x'], Math['random']()) : (_0x16ff73['seed'] = _0x1e9365[0xb], _0x45b5c8 = _0x33d6e0['MathUtil']['lerp'](_0x36eb17['constantMi' + 'n'], _0x36eb17['constantMa' + 'x'], _0x16ff73['getFloat']()), _0x1e9365[0xb] = _0x16ff73['seed']), _0x318e25[0x0] = _0x318e25[0x0] * _0x45b5c8, _0x318e25[0x1] = _0x318e25[0x1] * _0x45b5c8, _0x318e25[0x2] = _0x318e25[0x2] * _0x45b5c8;
            }
            var _0x2d9288 = _0x494587['renderMode'];
            if (0x1 !== _0x2d9288)
                switch (_0x1c3525['startRotat' + 'ionType']) {
                case 0x0:
                    if (_0x1c3525['threeDStar' + 'tRotation']) {
                        var _0x52f55d = _0x1c3525['startRotat' + 'ionConstan' + 'tSeparate'], _0x3b69ec = _0x7412d7['_tempVecto' + 'r30'];
                        _0x7412d7['_randomInv' + 'ertRoation' + 'Array'](_0x52f55d, _0x3b69ec, _0x1c3525['randomizeR' + 'otationDir' + 'ection'], _0x1c1d09 ? null : _0x16ff73, _0x1e9365), _0x7412d7['startRotat' + 'ion'][0x0] = _0x3b69ec['x'], _0x7412d7['startRotat' + 'ion'][0x1] = _0x3b69ec['y'], _0x7412d7['startRotat' + 'ion'][0x2] = 0x4 !== _0x2d9288 ? -_0x3b69ec['z'] : _0x3b69ec['z'];
                    } else
                        _0x7412d7['startRotat' + 'ion'][0x0] = _0x7412d7['_randomInv' + 'ertRoation'](_0x1c3525['startRotat' + 'ionConstan' + 't'], _0x1c3525['randomizeR' + 'otationDir' + 'ection'], _0x1c1d09 ? null : _0x16ff73, _0x1e9365), _0x7412d7['startRotat' + 'ion'][0x1] = 0x0, _0x7412d7['startRotat' + 'ion'][0x2] = 0x0;
                    break;
                case 0x2:
                    if (_0x1c3525['threeDStar' + 'tRotation']) {
                        var _0x8c5602 = _0x1c3525['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'], _0x4f2689 = _0x1c3525['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'], _0x58e183 = _0x7412d7['_tempVecto' + 'r30'];
                        _0x1c1d09 ? (_0x58e183['x'] = _0x33d6e0['MathUtil']['lerp'](_0x8c5602['x'], _0x4f2689['x'], Math['random']()), _0x58e183['y'] = _0x33d6e0['MathUtil']['lerp'](_0x8c5602['y'], _0x4f2689['y'], Math['random']()), _0x58e183['z'] = _0x33d6e0['MathUtil']['lerp'](_0x8c5602['z'], _0x4f2689['z'], Math['random']())) : (_0x16ff73['seed'] = _0x1e9365[0x5], _0x58e183['x'] = _0x33d6e0['MathUtil']['lerp'](_0x8c5602['x'], _0x4f2689['x'], _0x16ff73['getFloat']()), _0x58e183['y'] = _0x33d6e0['MathUtil']['lerp'](_0x8c5602['y'], _0x4f2689['y'], _0x16ff73['getFloat']()), _0x58e183['z'] = _0x33d6e0['MathUtil']['lerp'](_0x8c5602['z'], _0x4f2689['z'], _0x16ff73['getFloat']()), _0x1e9365[0x5] = _0x16ff73['seed']), _0x7412d7['_randomInv' + 'ertRoation' + 'Array'](_0x58e183, _0x58e183, _0x1c3525['randomizeR' + 'otationDir' + 'ection'], _0x1c1d09 ? null : _0x16ff73, _0x1e9365), _0x7412d7['startRotat' + 'ion'][0x0] = _0x58e183['x'], _0x7412d7['startRotat' + 'ion'][0x1] = _0x58e183['y'], _0x7412d7['startRotat' + 'ion'][0x2] = 0x4 !== _0x2d9288 ? -_0x58e183['z'] : _0x58e183['z'];
                    } else
                        _0x1c1d09 ? _0x7412d7['startRotat' + 'ion'][0x0] = _0x7412d7['_randomInv' + 'ertRoation'](_0x33d6e0['MathUtil']['lerp'](_0x1c3525['startRotat' + 'ionConstan' + 'tMin'], _0x1c3525['startRotat' + 'ionConstan' + 'tMax'], Math['random']()), _0x1c3525['randomizeR' + 'otationDir' + 'ection'], _0x1c1d09 ? null : _0x16ff73, _0x1e9365) : (_0x16ff73['seed'] = _0x1e9365[0x5], _0x7412d7['startRotat' + 'ion'][0x0] = _0x7412d7['_randomInv' + 'ertRoation'](_0x33d6e0['MathUtil']['lerp'](_0x1c3525['startRotat' + 'ionConstan' + 'tMin'], _0x1c3525['startRotat' + 'ionConstan' + 'tMax'], _0x16ff73['getFloat']()), _0x1c3525['randomizeR' + 'otationDir' + 'ection'], _0x1c1d09 ? null : _0x16ff73, _0x1e9365), _0x1e9365[0x5] = _0x16ff73['seed']);
                }
            switch (_0x1c3525['startLifet' + 'imeType']) {
            case 0x0:
                _0x7412d7['startLifeT' + 'ime'] = _0x1c3525['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                _0x7412d7['startLifeT' + 'ime'] = _0x7412d7['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x1c3525['startLifeT' + 'imeGradien' + 't'], _0x1c3525['emissionTi' + 'me']);
                break;
            case 0x2:
                _0x1c1d09 ? _0x7412d7['startLifeT' + 'ime'] = _0x33d6e0['MathUtil']['lerp'](_0x1c3525['startLifet' + 'imeConstan' + 'tMin'], _0x1c3525['startLifet' + 'imeConstan' + 'tMax'], Math['random']()) : (_0x16ff73['seed'] = _0x1e9365[0x7], _0x7412d7['startLifeT' + 'ime'] = _0x33d6e0['MathUtil']['lerp'](_0x1c3525['startLifet' + 'imeConstan' + 'tMin'], _0x1c3525['startLifet' + 'imeConstan' + 'tMax'], _0x16ff73['getFloat']()), _0x1e9365[0x7] = _0x16ff73['seed']);
                break;
            case 0x3:
                var _0x685cd1 = _0x1c3525['emissionTi' + 'me'];
                _0x1c1d09 ? _0x7412d7['startLifeT' + 'ime'] = _0x33d6e0['MathUtil']['lerp'](_0x7412d7['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x1c3525['startLifeT' + 'imeGradien' + 'tMin'], _0x685cd1), _0x7412d7['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x1c3525['startLifeT' + 'imeGradien' + 'tMax'], _0x685cd1), Math['random']()) : (_0x16ff73['seed'] = _0x1e9365[0x7], _0x7412d7['startLifeT' + 'ime'] = _0x33d6e0['MathUtil']['lerp'](_0x7412d7['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x1c3525['startLifeT' + 'imeGradien' + 'tMin'], _0x685cd1), _0x7412d7['_getStartL' + 'ifetimeFro' + 'mGradient'](_0x1c3525['startLifeT' + 'imeGradien' + 'tMax'], _0x685cd1), _0x16ff73['getFloat']()), _0x1e9365[0x7] = _0x16ff73['seed']);
            }
            var _0x4c1e4a = _0x1c3525['textureShe' + 'etAnimatio' + 'n'];
            if (_0x4c1e4a && _0x4c1e4a['enable']) {
                var _0x57a6bb, _0x3a01d2 = _0x4c1e4a['tiles'], _0x4a8d65 = _0x3a01d2['x'], _0x4d8cc9 = _0x3a01d2['y'], _0x234b12 = 0x1 / _0x4a8d65, _0x3e99ff = 0x1 / _0x4d8cc9, _0x133441 = _0x4c1e4a['startFrame'];
                switch (_0x133441['type']) {
                case 0x0:
                    _0x57a6bb = _0x133441['constant'];
                    break;
                case 0x1:
                    _0x1c1d09 ? _0x57a6bb = _0x33d6e0['MathUtil']['lerp'](_0x133441['constantMi' + 'n'], _0x133441['constantMa' + 'x'], Math['random']()) : (_0x16ff73['seed'] = _0x1e9365[0xe], _0x57a6bb = _0x33d6e0['MathUtil']['lerp'](_0x133441['constantMi' + 'n'], _0x133441['constantMa' + 'x'], _0x16ff73['getFloat']()), _0x1e9365[0xe] = _0x16ff73['seed']);
                }
                var _0x8e304 = _0x4c1e4a['frame'], _0x5551fd = _0x4c1e4a['cycles'];
                switch (_0x8e304['type']) {
                case 0x0:
                    _0x57a6bb += _0x8e304['constant'] * _0x5551fd;
                    break;
                case 0x2:
                    _0x1c1d09 ? _0x57a6bb += _0x33d6e0['MathUtil']['lerp'](_0x8e304['constantMi' + 'n'], _0x8e304['constantMa' + 'x'], Math['random']()) * _0x5551fd : (_0x16ff73['seed'] = _0x1e9365[0xf], _0x57a6bb += _0x33d6e0['MathUtil']['lerp'](_0x8e304['constantMi' + 'n'], _0x8e304['constantMa' + 'x'], _0x16ff73['getFloat']()) * _0x5551fd, _0x1e9365[0xf] = _0x16ff73['seed']);
                }
                var _0x2a22d9 = 0x0;
                switch (_0x4c1e4a['type']) {
                case 0x0:
                    _0x2a22d9 = Math['floor'](_0x57a6bb / _0x4a8d65);
                    break;
                case 0x1:
                    _0x4c1e4a['randomRow'] ? _0x1c1d09 ? _0x2a22d9 = Math['floor'](Math['random']() * _0x4d8cc9) : (_0x16ff73['seed'] = _0x1e9365[0xd], _0x2a22d9 = Math['floor'](_0x16ff73['getFloat']() * _0x4d8cc9), _0x1e9365[0xd] = _0x16ff73['seed']) : _0x2a22d9 = _0x4c1e4a['rowIndex'];
                }
                var _0x43b7ce = Math['floor'](_0x57a6bb % _0x4a8d65);
                _0x7412d7['startUVInf' + 'o'] = _0x7412d7['startUVInf' + 'o'], _0x7412d7['startUVInf' + 'o'][0x0] = _0x234b12, _0x7412d7['startUVInf' + 'o'][0x1] = _0x3e99ff, _0x7412d7['startUVInf' + 'o'][0x2] = _0x43b7ce * _0x234b12, _0x7412d7['startUVInf' + 'o'][0x3] = _0x2a22d9 * _0x3e99ff;
            } else
                _0x7412d7['startUVInf' + 'o'] = _0x7412d7['startUVInf' + 'o'], _0x7412d7['startUVInf' + 'o'][0x0] = 0x1, _0x7412d7['startUVInf' + 'o'][0x1] = 0x1, _0x7412d7['startUVInf' + 'o'][0x2] = 0x0, _0x7412d7['startUVInf' + 'o'][0x3] = 0x0;
        }
    }
    _0x7412d7['_tempVecto' + 'r30'] = new _0x4795b3(), _0x7412d7['startColor'] = new _0x333f41(), _0x7412d7['startSize'] = new Float32Array(0x3), _0x7412d7['startRotat' + 'ion'] = new Float32Array(0x3), _0x7412d7['startUVInf' + 'o'] = new Float32Array(0x4);
    class _0x1fc961 extends _0x42e697 {
        constructor(_0x43439c) {
            super(), this['_boundingS' + 'phere'] = null, this['_boundingB' + 'ox'] = null, this['_boundingB' + 'oxCorners'] = null, this['_owner'] = null, this['_ownerRend' + 'er'] = null, this['_vertices'] = null, this['_floatCoun' + 'tPerVertex'] = 0x0, this['_startLife' + 'TimeIndex'] = 0x0, this['_timeIndex'] = 0x0, this['_simulateU' + 'pdate'] = !0x1, this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_drawCount' + 'er'] = 0x0, this['_bufferMax' + 'Particles'] = 0x0, this['_emission'] = null, this['_shape'] = null, this['_isEmittin' + 'g'] = !0x1, this['_isPlaying'] = !0x1, this['_isPaused'] = !0x1, this['_playStart' + 'Delay'] = 0x0, this['_frameRate' + 'Time'] = 0x0, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_burstsInd' + 'ex'] = 0x0, this['_velocityO' + 'verLifetim' + 'e'] = null, this['_colorOver' + 'Lifetime'] = null, this['_sizeOverL' + 'ifetime'] = null, this['_rotationO' + 'verLifetim' + 'e'] = null, this['_textureSh' + 'eetAnimati' + 'on'] = null, this['_startLife' + 'timeType'] = 0x0, this['_startLife' + 'timeConsta' + 'nt'] = 0x0, this['_startLife' + 'TimeGradie' + 'nt'] = null, this['_startLife' + 'timeConsta' + 'ntMin'] = 0x0, this['_startLife' + 'timeConsta' + 'ntMax'] = 0x0, this['_startLife' + 'TimeGradie' + 'ntMin'] = null, this['_startLife' + 'TimeGradie' + 'ntMax'] = null, this['_maxStartL' + 'ifetime'] = 0x0, this['_uvLength'] = new _0x4c44b6(), this['_vertexStr' + 'ide'] = 0x0, this['_indexStri' + 'de'] = 0x0, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_bufferSta' + 'te'] = new _0x59c541(), this['_currentTi' + 'me'] = 0x0, this['_startUpda' + 'teLoopCoun' + 't'] = 0x0, this['_rand'] = null, this['_randomSee' + 'ds'] = null, this['duration'] = 0x0, this['looping'] = !0x1, this['prewarm'] = !0x1, this['startDelay' + 'Type'] = 0x0, this['startDelay'] = 0x0, this['startDelay' + 'Min'] = 0x0, this['startDelay' + 'Max'] = 0x0, this['startSpeed' + 'Type'] = 0x0, this['startSpeed' + 'Constant'] = 0x0, this['startSpeed' + 'ConstantMi' + 'n'] = 0x0, this['startSpeed' + 'ConstantMa' + 'x'] = 0x0, this['threeDStar' + 'tSize'] = !0x1, this['startSizeT' + 'ype'] = 0x0, this['startSizeC' + 'onstant'] = 0x0, this['startSizeC' + 'onstantSep' + 'arate'] = null, this['startSizeC' + 'onstantMin'] = 0x0, this['startSizeC' + 'onstantMax'] = 0x0, this['startSizeC' + 'onstantMin' + 'Separate'] = null, this['startSizeC' + 'onstantMax' + 'Separate'] = null, this['threeDStar' + 'tRotation'] = !0x1, this['startRotat' + 'ionType'] = 0x0, this['startRotat' + 'ionConstan' + 't'] = 0x0, this['startRotat' + 'ionConstan' + 'tSeparate'] = null, this['startRotat' + 'ionConstan' + 'tMin'] = 0x0, this['startRotat' + 'ionConstan' + 'tMax'] = 0x0, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = null, this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = null, this['randomizeR' + 'otationDir' + 'ection'] = 0x0, this['startColor' + 'Type'] = 0x0, this['startColor' + 'Constant'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['startColor' + 'ConstantMi' + 'n'] = new _0x333f41(0x0, 0x0, 0x0, 0x0), this['startColor' + 'ConstantMa' + 'x'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['gravityMod' + 'ifier'] = 0x0, this['simulation' + 'Space'] = 0x0, this['simulation' + 'Speed'] = 0x1, this['scaleMode'] = 0x0, this['playOnAwak' + 'e'] = !0x1, this['randomSeed'] = null, this['autoRandom' + 'Seed'] = !0x1, this['isPerforma' + 'nceMode'] = !0x1, this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_owner'] = _0x43439c, this['_ownerRend' + 'er'] = _0x43439c['particleRe' + 'nderer'], this['_boundingB' + 'oxCorners'] = [], this['_boundingS' + 'phere'] = new _0x43c0d5(new _0x4795b3(), Number['MAX_VALUE']), this['_boundingB' + 'ox'] = new _0x3555e9(new _0x4795b3(-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), new _0x4795b3(Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE'])), this['_currentTi' + 'me'] = 0x0, this['_isEmittin' + 'g'] = !0x1, this['_isPlaying'] = !0x1, this['_isPaused'] = !0x1, this['_burstsInd' + 'ex'] = 0x0, this['_frameRate' + 'Time'] = 0x0, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_simulateU' + 'pdate'] = !0x1, this['_bufferMax' + 'Particles'] = 0x1, this['duration'] = 0x5, this['looping'] = !0x0, this['prewarm'] = !0x1, this['startDelay' + 'Type'] = 0x0, this['startDelay'] = 0x0, this['startDelay' + 'Min'] = 0x0, this['startDelay' + 'Max'] = 0x0, this['_startLife' + 'timeType'] = 0x0, this['_startLife' + 'timeConsta' + 'nt'] = 0x5, this['_startLife' + 'TimeGradie' + 'nt'] = new _0x2e288d(), this['_startLife' + 'timeConsta' + 'ntMin'] = 0x0, this['_startLife' + 'timeConsta' + 'ntMax'] = 0x5, this['_startLife' + 'TimeGradie' + 'ntMin'] = new _0x2e288d(), this['_startLife' + 'TimeGradie' + 'ntMax'] = new _0x2e288d(), this['_maxStartL' + 'ifetime'] = 0x5, this['startSpeed' + 'Type'] = 0x0, this['startSpeed' + 'Constant'] = 0x5, this['startSpeed' + 'ConstantMi' + 'n'] = 0x0, this['startSpeed' + 'ConstantMa' + 'x'] = 0x5, this['threeDStar' + 'tSize'] = !0x1, this['startSizeT' + 'ype'] = 0x0, this['startSizeC' + 'onstant'] = 0x1, this['startSizeC' + 'onstantSep' + 'arate'] = new _0x4795b3(0x1, 0x1, 0x1), this['startSizeC' + 'onstantMin'] = 0x0, this['startSizeC' + 'onstantMax'] = 0x1, this['startSizeC' + 'onstantMin' + 'Separate'] = new _0x4795b3(0x0, 0x0, 0x0), this['startSizeC' + 'onstantMax' + 'Separate'] = new _0x4795b3(0x1, 0x1, 0x1), this['threeDStar' + 'tRotation'] = !0x1, this['startRotat' + 'ionType'] = 0x0, this['startRotat' + 'ionConstan' + 't'] = 0x0, this['startRotat' + 'ionConstan' + 'tSeparate'] = new _0x4795b3(0x0, 0x0, 0x0), this['startRotat' + 'ionConstan' + 'tMin'] = 0x0, this['startRotat' + 'ionConstan' + 'tMax'] = 0x0, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = new _0x4795b3(0x0, 0x0, 0x0), this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = new _0x4795b3(0x0, 0x0, 0x0), this['gravityMod' + 'ifier'] = 0x0, this['simulation' + 'Space'] = 0x1, this['scaleMode'] = 0x0, this['playOnAwak' + 'e'] = !0x0, this['_rand'] = new _0x3d0159(0x0), this['autoRandom' + 'Seed'] = !0x0, this['randomSeed'] = new Uint32Array(0x1), this['_randomSee' + 'ds'] = new Uint32Array(_0x1fc961['_RANDOMOFF' + 'SET']['length']), this['isPerforma' + 'nceMode'] = !0x0, this['_emission'] = new _0x580b02(), this['_emission']['enable'] = !0x0;
        }
        get ['maxParticl' + 'es']() {
            return this['_bufferMax' + 'Particles'] - 0x1;
        }
        set ['maxParticl' + 'es'](_0x414ece) {
            var _0x32d8cb = _0x414ece + 0x1;
            _0x32d8cb !== this['_bufferMax' + 'Particles'] && (this['_bufferMax' + 'Particles'] = _0x32d8cb, this['_initBuffe' + 'rDatas']());
        }
        get ['emission']() {
            return this['_emission'];
        }
        get ['aliveParti' + 'cleCount']() {
            return this['_firstNewE' + 'lement'] >= this['_firstReti' + 'redElement'] ? this['_firstNewE' + 'lement'] - this['_firstReti' + 'redElement'] : this['_bufferMax' + 'Particles'] - this['_firstReti' + 'redElement'] + this['_firstNewE' + 'lement'];
        }
        get ['emissionTi' + 'me']() {
            return this['_emissionT' + 'ime'] > this['duration'] ? this['duration'] : this['_emissionT' + 'ime'];
        }
        get ['shape']() {
            return this['_shape'];
        }
        set ['shape'](_0x701202) {
            this['_shape'] !== _0x701202 && (_0x701202 && _0x701202['enable'] ? this['_owner']['_render']['_shaderVal' + 'ues']['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_SHAPE']) : this['_owner']['_render']['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SHAPE']), this['_shape'] = _0x701202);
        }
        get ['isAlive']() {
            return !!(this['_isPlaying'] || this['aliveParti' + 'cleCount'] > 0x0);
        }
        get ['isEmitting']() {
            return this['_isEmittin' + 'g'];
        }
        get ['isPlaying']() {
            return this['_isPlaying'];
        }
        get ['isPaused']() {
            return this['_isPaused'];
        }
        get ['startLifet' + 'imeType']() {
            return this['_startLife' + 'timeType'];
        }
        set ['startLifet' + 'imeType'](_0x51711f) {
            var _0x1d56dc, _0x3274bd;
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                this['_maxStartL' + 'ifetime'] = this['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                var _0x4f8f5f = _0x4f8f5f;
                for (_0x1d56dc = 0x0, _0x3274bd = _0x4f8f5f['gradientCo' + 'unt']; _0x1d56dc < _0x3274bd; _0x1d56dc++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x4f8f5f['getValueBy' + 'Index'](_0x1d56dc));
                break;
            case 0x2:
                this['_maxStartL' + 'ifetime'] = Math['max'](this['startLifet' + 'imeConstan' + 'tMin'], this['startLifet' + 'imeConstan' + 'tMax']);
                break;
            case 0x3:
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                var _0x27e9fd = _0x27e9fd;
                for (_0x1d56dc = 0x0, _0x3274bd = _0x27e9fd['gradientCo' + 'unt']; _0x1d56dc < _0x3274bd; _0x1d56dc++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x27e9fd['getValueBy' + 'Index'](_0x1d56dc));
                var _0x52e962 = _0x52e962;
                for (_0x1d56dc = 0x0, _0x3274bd = _0x52e962['gradientCo' + 'unt']; _0x1d56dc < _0x3274bd; _0x1d56dc++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x52e962['getValueBy' + 'Index'](_0x1d56dc));
            }
            this['_startLife' + 'timeType'] = _0x51711f;
        }
        get ['startLifet' + 'imeConstan' + 't']() {
            return this['_startLife' + 'timeConsta' + 'nt'];
        }
        set ['startLifet' + 'imeConstan' + 't'](_0xc055ee) {
            0x0 === this['_startLife' + 'timeType'] && (this['_maxStartL' + 'ifetime'] = _0xc055ee), this['_startLife' + 'timeConsta' + 'nt'] = _0xc055ee;
        }
        get ['startLifeT' + 'imeGradien' + 't']() {
            return this['_startLife' + 'TimeGradie' + 'nt'];
        }
        set ['startLifeT' + 'imeGradien' + 't'](_0xe58d82) {
            if (0x1 === this['_startLife' + 'timeType']) {
                this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'];
                for (var _0x399c19 = 0x0, _0x205df5 = _0xe58d82['gradientCo' + 'unt']; _0x399c19 < _0x205df5; _0x399c19++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0xe58d82['getValueBy' + 'Index'](_0x399c19));
            }
            this['_startLife' + 'TimeGradie' + 'nt'] = _0xe58d82;
        }
        get ['startLifet' + 'imeConstan' + 'tMin']() {
            return this['_startLife' + 'timeConsta' + 'ntMin'];
        }
        set ['startLifet' + 'imeConstan' + 'tMin'](_0x801d48) {
            0x2 === this['_startLife' + 'timeType'] && (this['_maxStartL' + 'ifetime'] = Math['max'](_0x801d48, this['_startLife' + 'timeConsta' + 'ntMax'])), this['_startLife' + 'timeConsta' + 'ntMin'] = _0x801d48;
        }
        get ['startLifet' + 'imeConstan' + 'tMax']() {
            return this['_startLife' + 'timeConsta' + 'ntMax'];
        }
        set ['startLifet' + 'imeConstan' + 'tMax'](_0x5d9fbb) {
            0x2 === this['_startLife' + 'timeType'] && (this['_maxStartL' + 'ifetime'] = Math['max'](this['_startLife' + 'timeConsta' + 'ntMin'], _0x5d9fbb)), this['_startLife' + 'timeConsta' + 'ntMax'] = _0x5d9fbb;
        }
        get ['startLifeT' + 'imeGradien' + 'tMin']() {
            return this['_startLife' + 'TimeGradie' + 'ntMin'];
        }
        set ['startLifeT' + 'imeGradien' + 'tMin'](_0x1830b9) {
            if (0x3 === this['_startLife' + 'timeType']) {
                var _0x356287, _0x5c817d;
                for (this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'], _0x356287 = 0x0, _0x5c817d = _0x1830b9['gradientCo' + 'unt']; _0x356287 < _0x5c817d; _0x356287++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0x1830b9['getValueBy' + 'Index'](_0x356287));
                for (_0x356287 = 0x0, _0x5c817d = this['_startLife' + 'TimeGradie' + 'ntMax']['gradientCo' + 'unt']; _0x356287 < _0x5c817d; _0x356287++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], this['_startLife' + 'TimeGradie' + 'ntMax']['getValueBy' + 'Index'](_0x356287));
            }
            this['_startLife' + 'TimeGradie' + 'ntMin'] = _0x1830b9;
        }
        get ['startLifeT' + 'imeGradien' + 'tMax']() {
            return this['_startLife' + 'TimeGradie' + 'ntMax'];
        }
        set ['startLifeT' + 'imeGradien' + 'tMax'](_0xb984ad) {
            if (0x3 === this['_startLife' + 'timeType']) {
                var _0x36a3f3, _0x3ee51a;
                for (this['_maxStartL' + 'ifetime'] = -Number['MAX_VALUE'], _0x36a3f3 = 0x0, _0x3ee51a = this['_startLife' + 'TimeGradie' + 'ntMin']['gradientCo' + 'unt']; _0x36a3f3 < _0x3ee51a; _0x36a3f3++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], this['_startLife' + 'TimeGradie' + 'ntMin']['getValueBy' + 'Index'](_0x36a3f3));
                for (_0x36a3f3 = 0x0, _0x3ee51a = _0xb984ad['gradientCo' + 'unt']; _0x36a3f3 < _0x3ee51a; _0x36a3f3++)
                    this['_maxStartL' + 'ifetime'] = Math['max'](this['_maxStartL' + 'ifetime'], _0xb984ad['getValueBy' + 'Index'](_0x36a3f3));
            }
            this['_startLife' + 'TimeGradie' + 'ntMax'] = _0xb984ad;
        }
        get ['velocityOv' + 'erLifetime']() {
            return this['_velocityO' + 'verLifetim' + 'e'];
        }
        set ['velocityOv' + 'erLifetime'](_0x417f41) {
            var _0x490fac = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x417f41) {
                var _0x289ce2 = _0x417f41['velocity'], _0x1dcabb = _0x289ce2['type'];
                if (_0x417f41['enable'])
                    switch (_0x1dcabb) {
                    case 0x0:
                        _0x490fac['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']);
                        break;
                    case 0x1:
                        _0x490fac['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']);
                        break;
                    case 0x2:
                        _0x490fac['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']);
                        break;
                    case 0x3:
                        _0x490fac['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
                    }
                else
                    _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']), _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']), _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']), _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
                switch (_0x1dcabb) {
                case 0x0:
                    _0x490fac['setVector3'](_0x5728cf['VOLVELOCIT' + 'YCONST'], _0x289ce2['constant']);
                    break;
                case 0x1:
                    _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTX'], _0x289ce2['gradientX']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTY'], _0x289ce2['gradientY']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTZ'], _0x289ce2['gradientZ']['_elements']);
                    break;
                case 0x2:
                    _0x490fac['setVector3'](_0x5728cf['VOLVELOCIT' + 'YCONST'], _0x289ce2['constantMi' + 'n']), _0x490fac['setVector3'](_0x5728cf['VOLVELOCIT' + 'YCONSTMAX'], _0x289ce2['constantMa' + 'x']);
                    break;
                case 0x3:
                    _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTX'], _0x289ce2['gradientXM' + 'in']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTX' + 'MAX'], _0x289ce2['gradientXM' + 'ax']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTY'], _0x289ce2['gradientYM' + 'in']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTY' + 'MAX'], _0x289ce2['gradientYM' + 'ax']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTZ'], _0x289ce2['gradientZM' + 'in']['_elements']), _0x490fac['setBuffer'](_0x5728cf['VOLVELOCIT' + 'YGRADIENTZ' + 'MAX'], _0x289ce2['gradientZM' + 'ax']['_elements']);
                }
                _0x490fac['setInt'](_0x5728cf['VOLSPACETY' + 'PE'], _0x417f41['space']);
            } else
                _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T']), _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE']), _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT']), _0x490fac['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE']);
            this['_velocityO' + 'verLifetim' + 'e'] = _0x417f41;
        }
        get ['colorOverL' + 'ifetime']() {
            return this['_colorOver' + 'Lifetime'];
        }
        set ['colorOverL' + 'ifetime'](_0x324f98) {
            var _0x291c26 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x324f98) {
                var _0x10d328 = _0x324f98['color'];
                if (_0x324f98['enable'])
                    switch (_0x10d328['type']) {
                    case 0x1:
                        _0x291c26['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']);
                        break;
                    case 0x3:
                        _0x291c26['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']);
                    }
                else
                    _0x291c26['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']), _0x291c26['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']);
                switch (_0x10d328['type']) {
                case 0x1:
                    var _0x4acc0f = _0x10d328['gradient'];
                    _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x4acc0f['_alphaElem' + 'ents']), _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x4acc0f['_rgbElemen' + 'ts']);
                    break;
                case 0x3:
                    var _0x333699 = _0x10d328['gradientMi' + 'n'], _0x5aebbc = _0x10d328['gradientMa' + 'x'];
                    _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x333699['_alphaElem' + 'ents']), _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x333699['_rgbElemen' + 'ts']), _0x291c26['setBuffer'](_0x5728cf['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'], _0x5aebbc['_alphaElem' + 'ents']), _0x291c26['setBuffer'](_0x5728cf['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'], _0x5aebbc['_rgbElemen' + 'ts']);
                }
            } else
                _0x291c26['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME']), _0x291c26['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME']), _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x4acc0f['_alphaElem' + 'ents']), _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x4acc0f['_rgbElemen' + 'ts']), _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TALPHAS'], _0x333699['_alphaElem' + 'ents']), _0x291c26['setBuffer'](_0x5728cf['COLOROVERL' + 'IFEGRADIEN' + 'TCOLORS'], _0x333699['_rgbElemen' + 'ts']), _0x291c26['setBuffer'](_0x5728cf['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTALPHAS'], _0x5aebbc['_alphaElem' + 'ents']), _0x291c26['setBuffer'](_0x5728cf['MAXCOLOROV' + 'ERLIFEGRAD' + 'IENTCOLORS'], _0x5aebbc['_rgbElemen' + 'ts']);
            this['_colorOver' + 'Lifetime'] = _0x324f98;
        }
        get ['sizeOverLi' + 'fetime']() {
            return this['_sizeOverL' + 'ifetime'];
        }
        set ['sizeOverLi' + 'fetime'](_0x195ed9) {
            var _0x4ece74 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x195ed9) {
                var _0x54b57e = _0x195ed9['size'], _0x1956fe = _0x54b57e['separateAx' + 'es'], _0x376813 = _0x54b57e['type'];
                if (_0x195ed9['enable'])
                    switch (_0x376813) {
                    case 0x0:
                        _0x1956fe ? _0x4ece74['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']) : _0x4ece74['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']);
                        break;
                    case 0x2:
                        _0x1956fe ? _0x4ece74['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']) : _0x4ece74['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']);
                    }
                else
                    _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']), _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']), _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']), _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
                switch (_0x376813) {
                case 0x0:
                    _0x1956fe ? (_0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENTX'], _0x54b57e['gradientX']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENTY'], _0x54b57e['gradientY']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSizeGra' + 'dientZ'], _0x54b57e['gradientZ']['_elements'])) : _0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENT'], _0x54b57e['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x1956fe ? (_0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENTX'], _0x54b57e['gradientXM' + 'in']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENTXMAX'], _0x54b57e['gradientXM' + 'ax']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENTY'], _0x54b57e['gradientYM' + 'in']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENTYMAX'], _0x54b57e['gradientYM' + 'ax']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSizeGra' + 'dientZ'], _0x54b57e['gradientZM' + 'in']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSizeGra' + 'dientZMAX'], _0x54b57e['gradientZM' + 'ax']['_elements'])) : (_0x4ece74['setBuffer'](_0x5728cf['SOLSIZEGRA' + 'DIENT'], _0x54b57e['gradientMi' + 'n']['_elements']), _0x4ece74['setBuffer'](_0x5728cf['SOLSizeGra' + 'dientMax'], _0x54b57e['gradientMa' + 'x']['_elements']));
                }
            } else
                _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE']), _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE']), _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S']), _0x4ece74['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE']);
            this['_sizeOverL' + 'ifetime'] = _0x195ed9;
        }
        get ['rotationOv' + 'erLifetime']() {
            return this['_rotationO' + 'verLifetim' + 'e'];
        }
        set ['rotationOv' + 'erLifetime'](_0x56c931) {
            var _0xea9f14 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x56c931) {
                var _0x195930 = _0x56c931['angularVel' + 'ocity'];
                if (!_0x195930)
                    return;
                var _0x25959e = _0x195930['separateAx' + 'es'], _0x5ba9c6 = _0x195930['type'];
                if (_0x56c931['enable'])
                    switch (_0x25959e ? _0xea9f14['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']) : _0xea9f14['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0x5ba9c6) {
                    case 0x0:
                        _0xea9f14['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']);
                        break;
                    case 0x1:
                        _0xea9f14['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']);
                        break;
                    case 0x2:
                        _0xea9f14['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']);
                        break;
                    case 0x3:
                        _0xea9f14['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
                    }
                else
                    _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
                switch (_0x5ba9c6) {
                case 0x0:
                    _0x25959e ? _0xea9f14['setVector3'](_0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'], _0x195930['constantSe' + 'parate']) : _0xea9f14['setNumber'](_0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NST'], _0x195930['constant']);
                    break;
                case 0x1:
                    _0x25959e ? (_0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'], _0x195930['gradientX']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'], _0x195930['gradientY']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'], _0x195930['gradientZ']['_elements'])) : _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'], _0x195930['gradient']['_elements']);
                    break;
                case 0x2:
                    _0x25959e ? (_0xea9f14['setVector3'](_0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTSEPRARA' + 'TE'], _0x195930['constantMi' + 'nSeparate']), _0xea9f14['setVector3'](_0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAXSEPR' + 'ARATE'], _0x195930['constantMa' + 'xSeparate'])) : (_0xea9f14['setNumber'](_0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NST'], _0x195930['constantMi' + 'n']), _0xea9f14['setNumber'](_0x5728cf['ROLANGULAR' + 'VELOCITYCO' + 'NSTMAX'], _0x195930['constantMa' + 'x']));
                    break;
                case 0x3:
                    _0x25959e ? (_0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTX'], _0x195930['gradientXM' + 'in']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTXMAX'], _0x195930['gradientXM' + 'ax']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTY'], _0x195930['gradientYM' + 'in']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTYMAX'], _0x195930['gradientYM' + 'ax']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZ'], _0x195930['gradientZM' + 'in']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTZMAX'], _0x195930['gradientZM' + 'ax']['_elements'])) : (_0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENT'], _0x195930['gradientMi' + 'n']['_elements']), _0xea9f14['setBuffer'](_0x5728cf['ROLANGULAR' + 'VELOCITYGR' + 'ADIENTMAX'], _0x195930['gradientMa' + 'x']['_elements']));
                }
            } else
                _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS']), _0xea9f14['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES']);
            this['_rotationO' + 'verLifetim' + 'e'] = _0x56c931;
        }
        get ['textureShe' + 'etAnimatio' + 'n']() {
            return this['_textureSh' + 'eetAnimati' + 'on'];
        }
        set ['textureShe' + 'etAnimatio' + 'n'](_0x39dc4d) {
            var _0x36f570 = this['_owner']['_render']['_shaderVal' + 'ues'];
            if (_0x39dc4d) {
                var _0xbbfd75 = _0x39dc4d['frame'], _0x159b2a = _0xbbfd75['type'];
                if (_0x39dc4d['enable'])
                    switch (_0x159b2a) {
                    case 0x1:
                        _0x36f570['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']);
                        break;
                    case 0x3:
                        _0x36f570['addDefine'](_0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
                    }
                else
                    _0x36f570['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']), _0x36f570['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
                if (0x1 === _0x159b2a || 0x3 === _0x159b2a) {
                    _0x36f570['setNumber'](_0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NCYCLES'], _0x39dc4d['cycles']);
                    var _0xa323dd = _0x39dc4d['tiles'], _0xed1542 = this['_uvLength'];
                    _0xed1542['x'] = 0x1 / _0xa323dd['x'], _0xed1542['y'] = 0x1 / _0xa323dd['y'], _0x36f570['setVector2'](_0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NSUBUVLENG' + 'TH'], this['_uvLength']);
                }
                switch (_0x159b2a) {
                case 0x1:
                    _0x36f570['setBuffer'](_0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'], _0xbbfd75['frameOverT' + 'imeData']['_elements']);
                    break;
                case 0x3:
                    _0x36f570['setBuffer'](_0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTU' + 'VS'], _0xbbfd75['frameOverT' + 'imeDataMin']['_elements']), _0x36f570['setBuffer'](_0x5728cf['TEXTURESHE' + 'ETANIMATIO' + 'NGRADIENTM' + 'AXUVS'], _0xbbfd75['frameOverT' + 'imeDataMax']['_elements']);
                }
            } else
                _0x36f570['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE']), _0x36f570['removeDefi' + 'ne'](_0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE']);
            this['_textureSh' + 'eetAnimati' + 'on'] = _0x39dc4d;
        }
        ['_getVertex' + 'Buffer'](_0xdb3049 = 0x0) {
            return 0x0 === _0xdb3049 ? this['_vertexBuf' + 'fer'] : null;
        }
        ['_getIndexB' + 'uffer']() {
            return this['_indexBuff' + 'er'];
        }
        ['_generateB' + 'oundingSph' + 'ere']() {
            var _0xe37a79 = this['_boundingS' + 'phere']['center'];
            _0xe37a79['x'] = 0x0, _0xe37a79['y'] = 0x0, _0xe37a79['z'] = 0x0, this['_boundingS' + 'phere']['radius'] = Number['MAX_VALUE'];
        }
        ['_generateB' + 'oundingBox']() {
            var _0x189976, _0x3625e7, _0x4b9f61, _0x133eab, _0x221f13, _0x197411, _0x86f486, _0x21a6b5, _0x4d745a, _0x434769 = this['_owner']['particleRe' + 'nderer'], _0x3de1d8 = this['_boundingB' + 'ox']['min'], _0x17afac = this['_boundingB' + 'ox']['max'];
            switch (this['startLifet' + 'imeType']) {
            case 0x0:
                _0x4b9f61 = this['startLifet' + 'imeConstan' + 't'];
                break;
            case 0x1:
                _0x4b9f61 = -Number['MAX_VALUE'];
                var _0x3b414e = _0x3b414e;
                for (_0x189976 = 0x0, _0x3625e7 = _0x3b414e['gradientCo' + 'unt']; _0x189976 < _0x3625e7; _0x189976++)
                    _0x4b9f61 = Math['max'](_0x4b9f61, _0x3b414e['getValueBy' + 'Index'](_0x189976));
                break;
            case 0x2:
                _0x4b9f61 = Math['max'](this['startLifet' + 'imeConstan' + 'tMin'], this['startLifet' + 'imeConstan' + 'tMax']);
                break;
            case 0x3:
                _0x4b9f61 = -Number['MAX_VALUE'];
                var _0x322304 = _0x322304;
                for (_0x189976 = 0x0, _0x3625e7 = _0x322304['gradientCo' + 'unt']; _0x189976 < _0x3625e7; _0x189976++)
                    _0x4b9f61 = Math['max'](_0x4b9f61, _0x322304['getValueBy' + 'Index'](_0x189976));
                var _0x44fd2b = _0x44fd2b;
                for (_0x189976 = 0x0, _0x3625e7 = _0x44fd2b['gradientCo' + 'unt']; _0x189976 < _0x3625e7; _0x189976++)
                    _0x4b9f61 = Math['max'](_0x4b9f61, _0x44fd2b['getValueBy' + 'Index'](_0x189976));
            }
            switch (this['startSpeed' + 'Type']) {
            case 0x0:
                _0x133eab = _0x221f13 = this['startSpeed' + 'Constant'];
                break;
            case 0x1:
                break;
            case 0x2:
                _0x133eab = this['startLifet' + 'imeConstan' + 'tMin'], _0x221f13 = this['startLifet' + 'imeConstan' + 'tMax'];
            }
            this['_shape'] && this['_shape']['enable'] || (_0x197411 = _0x86f486 = _0x4795b3['_ZERO'], _0x21a6b5 = _0x4795b3['_ZERO'], _0x4d745a = _0x4795b3['_UnitZ']);
            var _0x13fb38, _0x2fe2a7, _0x564533 = new _0x4795b3(_0x21a6b5['x'] * _0x133eab, _0x21a6b5['y'] * _0x133eab, _0x21a6b5['z'] * _0x133eab), _0x41939e = new _0x4795b3(_0x4d745a['x'] * _0x221f13, _0x4d745a['y'] * _0x221f13, _0x4d745a['z'] * _0x221f13);
            if (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable']) {
                var _0x3df1e6 = this['_velocityO' + 'verLifetim' + 'e']['velocity'];
                switch (_0x3df1e6['type']) {
                case 0x0:
                    _0x3df1e6['constant'];
                    break;
                case 0x1:
                    new _0x4795b3(_0x3df1e6['gradientX']['getAverage' + 'Value'](), _0x3df1e6['gradientY']['getAverage' + 'Value'](), _0x3df1e6['gradientZ']['getAverage' + 'Value']());
                    break;
                case 0x2:
                    _0x3df1e6['constantMi' + 'n'], _0x3df1e6['constantMa' + 'x'];
                    break;
                case 0x3:
                    new _0x4795b3(_0x3df1e6['gradientXM' + 'in']['getAverage' + 'Value'](), _0x3df1e6['gradientYM' + 'in']['getAverage' + 'Value'](), _0x3df1e6['gradientZM' + 'in']['getAverage' + 'Value']()), new _0x4795b3(_0x3df1e6['gradientXM' + 'ax']['getAverage' + 'Value'](), _0x3df1e6['gradientYM' + 'ax']['getAverage' + 'Value'](), _0x3df1e6['gradientZM' + 'ax']['getAverage' + 'Value']());
                }
            }
            var _0x45ee93, _0x2b77b2, _0x18dd50, _0x298cb2, _0xf683a3 = this['_owner']['transform'], _0x3b395f = _0xf683a3['position'], _0x1190e8 = _0x1fc961['_tempVecto' + 'r39'], _0x168862 = _0x434769['renderMode'];
            switch (this['scaleMode']) {
            case 0x0:
                var _0x43a205 = _0xf683a3['getWorldLo' + 'ssyScale']();
                _0x13fb38 = _0x43a205, _0x1190e8['x'] = _0x43a205['x'], _0x1190e8['y'] = _0x43a205['z'], _0x1190e8['z'] = _0x43a205['y'], 0x1 === _0x168862 && (_0x2fe2a7 = _0x43a205);
                break;
            case 0x1:
                var _0x534382 = _0xf683a3['localScale'];
                _0x13fb38 = _0x534382, _0x1190e8['x'] = _0x534382['x'], _0x1190e8['y'] = _0x534382['z'], _0x1190e8['z'] = _0x534382['y'], 0x1 === _0x168862 && (_0x2fe2a7 = _0x534382);
                break;
            case 0x2:
                _0x13fb38 = _0xf683a3['getWorldLo' + 'ssyScale'](), _0x1190e8['x'] = _0x1190e8['y'] = _0x1190e8['z'] = 0x1, 0x1 === _0x168862 && (_0x2fe2a7 = _0x4795b3['_ONE']);
            }
            switch (this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'] || (_0x45ee93 = new _0x4795b3(_0x564533['x'] * _0x4b9f61, _0x564533['y'] * _0x4b9f61, _0x564533['z'] * _0x4b9f61), _0x2b77b2 = new _0x4795b3(_0x41939e['x'] * _0x4b9f61, _0x41939e['y'] * _0x4b9f61, _0x41939e['z'] * _0x4b9f61), 0x2 != this['scaleMode'] ? (_0x4795b3['add'](_0x197411, _0x45ee93, _0x3de1d8), _0x4795b3['multiply'](_0x13fb38, _0x3de1d8, _0x3de1d8), _0x4795b3['add'](_0x86f486, _0x2b77b2, _0x17afac), _0x4795b3['multiply'](_0x13fb38, _0x17afac, _0x17afac)) : (_0x4795b3['multiply'](_0x13fb38, _0x197411, _0x3de1d8), _0x4795b3['add'](_0x3de1d8, _0x45ee93, _0x3de1d8), _0x4795b3['multiply'](_0x13fb38, _0x86f486, _0x17afac), _0x4795b3['add'](_0x17afac, _0x2b77b2, _0x17afac))), this['simulation' + 'Space']) {
            case 0x0:
                break;
            case 0x1:
                _0x4795b3['add'](_0x3de1d8, _0x3b395f, _0x3de1d8), _0x4795b3['add'](_0x17afac, _0x3b395f, _0x17afac);
            }
            switch (this['startSizeT' + 'ype']) {
            case 0x0:
                if (this['threeDStar' + 'tSize']) {
                    var _0x512553 = _0x512553;
                    _0x18dd50 = Math['max'](_0x512553['x'], _0x512553['y']), 0x1 === _0x168862 && (_0x298cb2 = _0x512553['y']);
                } else
                    _0x18dd50 = this['startSizeC' + 'onstant'], 0x1 === _0x168862 && (_0x298cb2 = this['startSizeC' + 'onstant']);
                break;
            case 0x1:
                break;
            case 0x2:
                if (this['threeDStar' + 'tSize']) {
                    var _0x46c3b5 = _0x46c3b5;
                    _0x18dd50 = Math['max'](_0x46c3b5['x'], _0x46c3b5['y']), 0x1 === _0x168862 && (_0x298cb2 = _0x46c3b5['y']);
                } else
                    _0x18dd50 = this['startSizeC' + 'onstantMax'], 0x1 === _0x168862 && (_0x298cb2 = this['startSizeC' + 'onstantMax']);
            }
            this['_sizeOverL' + 'ifetime'] && this['_sizeOverL' + 'ifetime']['enable'] && (this['_sizeOverL' + 'ifetime']['size'], _0x18dd50 *= this['_sizeOverL' + 'ifetime']['size']['getMaxSize' + 'InGradient']());
            var _0x4d07e9, _0x20b5bb, _0x303d23 = _0x1fc961['_tempVecto' + 'r30'];
            switch (_0x168862) {
            case 0x0:
                _0x4d07e9 = _0x18dd50 * _0x1fc961['halfKSqrtO' + 'f2'], _0x4795b3['scale'](_0x1190e8, _0x18dd50, _0x303d23), _0x4795b3['subtract'](_0x3de1d8, _0x303d23, _0x3de1d8), _0x4795b3['add'](_0x17afac, _0x303d23, _0x17afac);
                break;
            case 0x1:
                var _0x12805a = _0x1fc961['_tempVecto' + 'r31'], _0x774f4e = _0x1fc961['_tempVecto' + 'r32'], _0x47cdb2 = _0x1fc961['_tempVecto' + 'r33'], _0x19699b = _0x1fc961['_tempVecto' + 'r34'];
                this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'] || (_0x4795b3['multiply'](_0x2fe2a7, _0x41939e, _0x774f4e), _0x4795b3['multiply'](_0x2fe2a7, _0x564533, _0x47cdb2));
                var _0x310e8a = _0x298cb2 * _0x434769['stretchedB' + 'illboardLe' + 'ngthScale'], _0x510a78 = _0x4795b3['scalarLeng' + 'th'](_0x774f4e) * _0x434769['stretchedB' + 'illboardSp' + 'eedScale'] + _0x310e8a, _0x549b21 = _0x4795b3['scalarLeng' + 'th'](_0x47cdb2) * _0x434769['stretchedB' + 'illboardSp' + 'eedScale'] + _0x310e8a, _0x43df3e = _0x1fc961['_tempVecto' + 'r35'], _0x17d2e6 = _0x1fc961['_tempVecto' + 'r36'];
                _0x4795b3['normalize'](_0x774f4e, _0x43df3e), _0x4795b3['scale'](_0x43df3e, _0x510a78, _0x19699b), _0x4795b3['subtract'](_0x2b77b2, _0x19699b, _0x19699b), _0x4795b3['normalize'](_0x47cdb2, _0x17d2e6), _0x4795b3['scale'](_0x17d2e6, _0x549b21, _0x12805a), _0x4795b3['add'](_0x45ee93, _0x12805a, _0x12805a), _0x4d07e9 = _0x18dd50 * _0x1fc961['halfKSqrtO' + 'f2'], _0x4795b3['scale'](_0x1190e8, _0x4d07e9, _0x303d23);
                var _0x4d7479 = _0x1fc961['_tempVecto' + 'r37'], _0x5f35ec = _0x1fc961['_tempVecto' + 'r38'];
                _0x4795b3['scale'](_0x43df3e, 0.5, _0x4d7479), _0x4795b3['scale'](_0x17d2e6, 0.5, _0x5f35ec), _0x4795b3['multiply'](_0x4d7479, _0x1190e8, _0x4d7479), _0x4795b3['multiply'](_0x5f35ec, _0x1190e8, _0x5f35ec), _0x4795b3['add'](_0x3de1d8, _0x5f35ec, _0x3de1d8), _0x4795b3['min'](_0x3de1d8, _0x19699b, _0x3de1d8), _0x4795b3['subtract'](_0x3de1d8, _0x303d23, _0x3de1d8), _0x4795b3['subtract'](_0x17afac, _0x4d7479, _0x17afac), _0x4795b3['max'](_0x17afac, _0x12805a, _0x17afac), _0x4795b3['add'](_0x17afac, _0x303d23, _0x17afac);
                break;
            case 0x2:
                _0x20b5bb = 0.5 * (_0x18dd50 *= Math['cos'](0.7853981633974483)), _0x303d23['x'] = _0x1190e8['x'] * _0x20b5bb, _0x303d23['y'] = _0x1190e8['z'] * _0x20b5bb, _0x4795b3['subtract'](_0x3de1d8, _0x303d23, _0x3de1d8), _0x4795b3['add'](_0x17afac, _0x303d23, _0x17afac);
                break;
            case 0x3:
                _0x20b5bb = 0.5 * (_0x18dd50 *= Math['cos'](0.7853981633974483)), _0x4795b3['scale'](_0x1190e8, _0x20b5bb, _0x303d23), _0x4795b3['subtract'](_0x3de1d8, _0x303d23, _0x3de1d8), _0x4795b3['add'](_0x17afac, _0x303d23, _0x17afac);
            }
            this['_boundingB' + 'ox']['getCorners'](this['_boundingB' + 'oxCorners']);
        }
        ['_updateEmi' + 'ssion']() {
            if (this['isAlive']) {
                if (this['_simulateU' + 'pdate'])
                    this['_simulateU' + 'pdate'] = !0x1;
                else {
                    var _0x2b7294 = this['_startUpda' + 'teLoopCoun' + 't'] === _0x33d6e0['Stat']['loopCount'] || this['_isPaused'] ? 0x0 : this['_owner']['_scene']['timer']['_delta'] / 0x3e8;
                    _0x2b7294 = Math['min'](_0x1fc961['_maxElapse' + 'dTime'], _0x2b7294 * this['simulation' + 'Speed']), this['_updatePar' + 'ticles'](_0x2b7294);
                }
            }
        }
        ['_updatePar' + 'ticles'](_0x3d54c6) {
            (0x4 !== this['_ownerRend' + 'er']['renderMode'] || this['_ownerRend' + 'er']['mesh']) && (this['_currentTi' + 'me'] += _0x3d54c6, this['_retireAct' + 'iveParticl' + 'es'](), this['_freeRetir' + 'edParticle' + 's'](), this['_totalDela' + 'yTime'] += _0x3d54c6, this['_totalDela' + 'yTime'] < this['_playStart' + 'Delay'] || this['_emission']['enable'] && this['_isEmittin' + 'g'] && !this['_isPaused'] && this['_advanceTi' + 'me'](_0x3d54c6, this['_currentTi' + 'me']));
        }
        ['_updatePar' + 'ticlesSimu' + 'lationRest' + 'art'](_0x616c6d) {
            this['_firstActi' + 'veElement'] = 0x0, this['_firstNewE' + 'lement'] = 0x0, this['_firstFree' + 'Element'] = 0x0, this['_firstReti' + 'redElement'] = 0x0, this['_burstsInd' + 'ex'] = 0x0, this['_frameRate' + 'Time'] = _0x616c6d, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, this['_currentTi' + 'me'] = _0x616c6d;
            var _0x2ed42f = _0x616c6d;
            _0x2ed42f < this['_playStart' + 'Delay'] ? this['_totalDela' + 'yTime'] = _0x2ed42f : this['_emission']['enable'] && this['_advanceTi' + 'me'](_0x616c6d, _0x616c6d);
        }
        ['_retireAct' + 'iveParticl' + 'es']() {
            for (; this['_firstActi' + 'veElement'] != this['_firstNewE' + 'lement'];) {
                var _0x11311e = this['_firstActi' + 'veElement'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], _0x25fcd1 = _0x11311e + this['_timeIndex'];
                if (this['_currentTi' + 'me'] - this['_vertices'][_0x25fcd1] + 0.0001 < this['_vertices'][_0x11311e + this['_startLife' + 'TimeIndex']])
                    break;
                this['_vertices'][_0x25fcd1] = this['_drawCount' + 'er'], this['_firstActi' + 'veElement']++, this['_firstActi' + 'veElement'] >= this['_bufferMax' + 'Particles'] && (this['_firstActi' + 'veElement'] = 0x0);
            }
        }
        ['_freeRetir' + 'edParticle' + 's']() {
            for (; this['_firstReti' + 'redElement'] != this['_firstActi' + 'veElement'];) {
                var _0x623d08 = this['_drawCount' + 'er'] - this['_vertices'][this['_firstReti' + 'redElement'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'] + this['_timeIndex']];
                if (this['isPerforma' + 'nceMode'] && _0x623d08 < 0x3)
                    break;
                this['_firstReti' + 'redElement']++, this['_firstReti' + 'redElement'] >= this['_bufferMax' + 'Particles'] && (this['_firstReti' + 'redElement'] = 0x0);
            }
        }
        ['_burst'](_0x335dd1, _0x288df8) {
            for (var _0x21f51e = 0x0, _0x185b6c = this['_emission']['_bursts'], _0x5da498 = _0x185b6c['length']; this['_burstsInd' + 'ex'] < _0x5da498; this['_burstsInd' + 'ex']++) {
                var _0x2f77fd, _0x30679c = _0x185b6c[this['_burstsInd' + 'ex']], _0x361a00 = _0x30679c['time'];
                if (!(_0x335dd1 <= _0x361a00 && _0x361a00 < _0x288df8))
                    break;
                this['autoRandom' + 'Seed'] ? _0x2f77fd = _0x33d6e0['MathUtil']['lerp'](_0x30679c['minCount'], _0x30679c['maxCount'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x0], _0x2f77fd = _0x33d6e0['MathUtil']['lerp'](_0x30679c['minCount'], _0x30679c['maxCount'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x0] = this['_rand']['seed']), _0x21f51e += _0x2f77fd;
            }
            return _0x21f51e;
        }
        ['_advanceTi' + 'me'](_0x2663a5, _0x169d2f) {
            var _0x24b356, _0x14378f = this['_emissionT' + 'ime'];
            this['_emissionT' + 'ime'] += _0x2663a5;
            var _0xbdac72 = 0x0;
            if (this['_emissionT' + 'ime'] > this['duration']) {
                if (!this['looping']) {
                    for (_0xbdac72 = Math['min'](this['maxParticl' + 'es'] - this['aliveParti' + 'cleCount'], _0xbdac72), _0x24b356 = 0x0; _0x24b356 < _0xbdac72; _0x24b356++)
                        this['emit'](_0x169d2f);
                    return this['_isPlaying'] = !0x1, void this['stop']();
                }
                _0xbdac72 += this['_burst'](_0x14378f, this['_emissionT' + 'ime']), this['_emissionT' + 'ime'] -= this['duration'], this['_burstsInd' + 'ex'] = 0x0, _0xbdac72 += this['_burst'](0x0, this['_emissionT' + 'ime']);
            } else
                _0xbdac72 += this['_burst'](_0x14378f, this['_emissionT' + 'ime']);
            for (_0xbdac72 = Math['min'](this['maxParticl' + 'es'] - this['aliveParti' + 'cleCount'], _0xbdac72), _0x24b356 = 0x0; _0x24b356 < _0xbdac72; _0x24b356++)
                this['emit'](_0x169d2f);
            var _0x1bdef4 = this['emission']['emissionRa' + 'te'];
            if (_0x1bdef4 > 0x0) {
                var _0x42728b = 0x1 / _0x1bdef4;
                for (this['_frameRate' + 'Time'] += _0x42728b, this['_frameRate' + 'Time'] = this['_currentTi' + 'me'] - (this['_currentTi' + 'me'] - this['_frameRate' + 'Time']) % this['_maxStartL' + 'ifetime']; this['_frameRate' + 'Time'] <= _0x169d2f && this['emit'](this['_frameRate' + 'Time']);)
                    this['_frameRate' + 'Time'] += _0x42728b;
                this['_frameRate' + 'Time'] = Math['floor'](_0x169d2f / _0x42728b) * _0x42728b;
            }
        }
        ['_initBuffe' + 'rDatas']() {
            this['_vertexBuf' + 'fer'] && (this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy']());
            var _0xfd1898 = _0x33d6e0['LayaGL']['instance'], _0x12ef18 = this['_ownerRend' + 'er'], _0x1ef974 = _0x12ef18['renderMode'];
            if (-0x1 !== _0x1ef974 && this['maxParticl' + 'es'] > 0x0) {
                var _0x3a70bf, _0x5cfcac, _0x3e79b4, _0x5c43c6, _0x5ce31d, _0x47924e, _0x3d57d6, _0xd11433 = 0x0, _0x5b50eb = 0x0, _0x4ae42f = _0x12ef18['mesh'];
                if (0x4 === _0x1ef974) {
                    if (_0x4ae42f) {
                        _0x3d57d6 = _0x52cf21['vertexDecl' + 'aration'], this['_floatCoun' + 'tPerVertex'] = _0x3d57d6['vertexStri' + 'de'] / 0x4, this['_startLife' + 'TimeIndex'] = 0xc, this['_timeIndex'] = 0x10, this['_vertexStr' + 'ide'] = _0x4ae42f['_vertexCou' + 'nt'];
                        var _0x5cf6fe = this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide'], _0x1cd358 = _0x5cf6fe % 0xffff;
                        if (Math['floor'](_0x5cf6fe / 0xffff) + 0x1 > 0x1)
                            throw new Error('ShurikenPa' + 'rticleSyst' + 'em:the\x20max' + 'ParticleCo' + 'unt\x20multip' + 'ly\x20mesh\x20ve' + 'rtexCount\x20' + 'is\x20large\x20t' + 'han\x2065535.');
                        _0xd11433 = _0x3d57d6['vertexStri' + 'de'] * _0x1cd358, this['_vertexBuf' + 'fer'] = new _0x5dfaba(_0xd11433, _0xfd1898['DYNAMIC_DR' + 'AW']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x3d57d6, this['_vertices'] = new Float32Array(this['_floatCoun' + 'tPerVertex'] * _0x1cd358), this['_indexStri' + 'de'] = _0x4ae42f['_indexBuff' + 'er']['indexCount'];
                        var _0x5d563a = _0x4ae42f['_indexBuff' + 'er']['getData'](), _0x558a64 = this['_bufferMax' + 'Particles'] * this['_indexStri' + 'de'];
                        for (this['_indexBuff' + 'er'] = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], _0x558a64, _0xfd1898['STATIC_DRA' + 'W']), _0x3a70bf = new Uint16Array(_0x558a64), _0x5b50eb = _0xd11433 + 0x2 * _0x558a64, _0x5ce31d = 0x0, _0x5cfcac = 0x0; _0x5cfcac < this['_bufferMax' + 'Particles']; _0x5cfcac++) {
                            var _0x10f2b2 = _0x5cfcac * this['_vertexStr' + 'ide'];
                            for (_0x3e79b4 = 0x0, _0x5c43c6 = _0x5d563a['length']; _0x3e79b4 < _0x5c43c6; _0x3e79b4++)
                                _0x3a70bf[_0x5ce31d++] = _0x10f2b2 + _0x5d563a[_0x3e79b4];
                        }
                        this['_indexBuff' + 'er']['setData'](_0x3a70bf), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
                    }
                } else {
                    for (_0x3d57d6 = _0x25e31b['vertexDecl' + 'aration'], this['_floatCoun' + 'tPerVertex'] = _0x3d57d6['vertexStri' + 'de'] / 0x4, this['_startLife' + 'TimeIndex'] = 0x7, this['_timeIndex'] = 0xb, this['_vertexStr' + 'ide'] = 0x4, _0xd11433 = _0x3d57d6['vertexStri' + 'de'] * this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide'], this['_vertexBuf' + 'fer'] = new _0x5dfaba(_0xd11433, _0xfd1898['DYNAMIC_DR' + 'AW']), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x3d57d6, this['_vertices'] = new Float32Array(this['_floatCoun' + 'tPerVertex'] * this['_bufferMax' + 'Particles'] * this['_vertexStr' + 'ide']), _0x5cfcac = 0x0; _0x5cfcac < this['_bufferMax' + 'Particles']; _0x5cfcac++)
                        _0x47924e = _0x5cfcac * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], this['_vertices'][_0x47924e] = -0.5, this['_vertices'][_0x47924e + 0x1] = -0.5, this['_vertices'][_0x47924e + 0x2] = 0x0, this['_vertices'][_0x47924e + 0x3] = 0x1, _0x47924e += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x47924e] = 0.5, this['_vertices'][_0x47924e + 0x1] = -0.5, this['_vertices'][_0x47924e + 0x2] = 0x1, this['_vertices'][_0x47924e + 0x3] = 0x1, _0x47924e += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x47924e] = 0.5, this['_vertices'][_0x47924e + 0x1] = 0.5, this['_vertices'][_0x47924e + 0x2] = 0x1, this['_vertices'][_0x47924e + 0x3] = 0x0, _0x47924e += this['_floatCoun' + 'tPerVertex'], this['_vertices'][_0x47924e] = -0.5, this['_vertices'][_0x47924e + 0x1] = 0.5, this['_vertices'][_0x47924e + 0x2] = 0x0, this['_vertices'][_0x47924e + 0x3] = 0x0;
                    for (this['_indexStri' + 'de'] = 0x6, this['_indexBuff' + 'er'] = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], 0x6 * this['_bufferMax' + 'Particles'], _0xfd1898['STATIC_DRA' + 'W']), _0x3a70bf = new Uint16Array(0x6 * this['_bufferMax' + 'Particles']), _0x5cfcac = 0x0; _0x5cfcac < this['_bufferMax' + 'Particles']; _0x5cfcac++) {
                        _0x5ce31d = 0x6 * _0x5cfcac;
                        var _0x4d36e3 = _0x5cfcac * this['_vertexStr' + 'ide'], _0x1ca793 = _0x4d36e3 + 0x2;
                        _0x3a70bf[_0x5ce31d++] = _0x4d36e3, _0x3a70bf[_0x5ce31d++] = _0x1ca793, _0x3a70bf[_0x5ce31d++] = _0x4d36e3 + 0x1, _0x3a70bf[_0x5ce31d++] = _0x4d36e3, _0x3a70bf[_0x5ce31d++] = _0x4d36e3 + 0x3, _0x3a70bf[_0x5ce31d++] = _0x1ca793;
                    }
                    this['_indexBuff' + 'er']['setData'](_0x3a70bf), _0x5b50eb = _0xd11433 + 0x6 * this['_bufferMax' + 'Particles'] * 0x2, this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), this['_bufferSta' + 'te']['unBind']();
                }
                _0x33d6e0['Resource']['_addMemory'](_0x5b50eb, _0x5b50eb);
            }
        }
        ['destroy']() {
            super['destroy']();
            var _0x463694 = this['_vertexBuf' + 'fer']['_byteLengt' + 'h'] + 0x2 * this['_indexBuff' + 'er']['indexCount'];
            _0x33d6e0['Resource']['_addMemory'](-_0x463694, -_0x463694), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_emission']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_owner'] = null, this['_vertices'] = null, this['_indexBuff' + 'er'] = null, this['_emission'] = null, this['_shape'] = null, this['startLifeT' + 'imeGradien' + 't'] = null, this['startLifeT' + 'imeGradien' + 'tMin'] = null, this['startLifeT' + 'imeGradien' + 'tMax'] = null, this['startSizeC' + 'onstantSep' + 'arate'] = null, this['startSizeC' + 'onstantMin' + 'Separate'] = null, this['startSizeC' + 'onstantMax' + 'Separate'] = null, this['startRotat' + 'ionConstan' + 'tSeparate'] = null, this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'] = null, this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'] = null, this['startColor' + 'Constant'] = null, this['startColor' + 'ConstantMi' + 'n'] = null, this['startColor' + 'ConstantMa' + 'x'] = null, this['_velocityO' + 'verLifetim' + 'e'] = null, this['_colorOver' + 'Lifetime'] = null, this['_sizeOverL' + 'ifetime'] = null, this['_rotationO' + 'verLifetim' + 'e'] = null, this['_textureSh' + 'eetAnimati' + 'on'] = null;
        }
        ['emit'](_0xce6cf5) {
            var _0x47679c = _0x1fc961['_tempPosit' + 'ion'], _0x21b3d8 = _0x1fc961['_tempDirec' + 'tion'];
            return this['_shape'] && this['_shape']['enable'] ? this['autoRandom' + 'Seed'] ? this['_shape']['generatePo' + 'sitionAndD' + 'irection'](_0x47679c, _0x21b3d8) : this['_shape']['generatePo' + 'sitionAndD' + 'irection'](_0x47679c, _0x21b3d8, this['_rand'], this['_randomSee' + 'ds']) : (_0x47679c['x'] = _0x47679c['y'] = _0x47679c['z'] = 0x0, _0x21b3d8['x'] = _0x21b3d8['y'] = 0x0, _0x21b3d8['z'] = 0x1), this['addParticl' + 'e'](_0x47679c, _0x21b3d8, _0xce6cf5);
        }
        ['addParticl' + 'e'](_0x5387d3, _0x2dcf7b, _0x58045c) {
            _0x4795b3['normalize'](_0x2dcf7b, _0x2dcf7b);
            var _0xb7b57f = this['_firstFree' + 'Element'] + 0x1;
            if (_0xb7b57f >= this['_bufferMax' + 'Particles'] && (_0xb7b57f = 0x0), _0xb7b57f === this['_firstReti' + 'redElement'])
                return !0x1;
            var _0x3bedf0, _0x1d6760, _0x428323, _0x357376, _0x4323e6, _0x1eef25, _0x523954, _0x389799, _0x7cd122, _0x4b6a10, _0x343d66 = this['_owner']['transform'];
            if (_0x7412d7['create'](this, this['_ownerRend' + 'er'], _0x343d66), this['_currentTi' + 'me'] - _0x58045c >= _0x7412d7['startLifeT' + 'ime'])
                return !0x0;
            switch (0x0 == this['simulation' + 'Space'] && (_0x3bedf0 = _0x343d66['position'], _0x1d6760 = _0x343d66['rotation']), this['startSpeed' + 'Type']) {
            case 0x0:
                _0x428323 = this['startSpeed' + 'Constant'];
                break;
            case 0x2:
                this['autoRandom' + 'Seed'] ? _0x428323 = _0x33d6e0['MathUtil']['lerp'](this['startSpeed' + 'ConstantMi' + 'n'], this['startSpeed' + 'ConstantMa' + 'x'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x8], _0x428323 = _0x33d6e0['MathUtil']['lerp'](this['startSpeed' + 'ConstantMi' + 'n'], this['startSpeed' + 'ConstantMa' + 'x'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x8] = this['_rand']['seed']);
            }
            var _0x2f08a2 = this['_velocityO' + 'verLifetim' + 'e'] && this['_velocityO' + 'verLifetim' + 'e']['enable'];
            if (_0x2f08a2) {
                var _0x11eb86 = this['_velocityO' + 'verLifetim' + 'e']['velocity']['type'];
                0x2 === _0x11eb86 || 0x3 === _0x11eb86 ? this['autoRandom' + 'Seed'] ? (_0x357376 = Math['random'](), _0x4323e6 = Math['random'](), _0x1eef25 = Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x9], _0x357376 = this['_rand']['getFloat'](), _0x4323e6 = this['_rand']['getFloat'](), _0x1eef25 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0x9] = this['_rand']['seed']) : _0x2f08a2 = !0x1;
            } else
                _0x2f08a2 = !0x1;
            var _0x55d49a = this['_colorOver' + 'Lifetime'] && this['_colorOver' + 'Lifetime']['enable'];
            _0x55d49a ? 0x3 === this['_colorOver' + 'Lifetime']['color']['type'] ? this['autoRandom' + 'Seed'] ? _0x523954 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xa], _0x523954 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xa] = this['_rand']['seed']) : _0x55d49a = !0x1 : _0x55d49a = !0x1;
            var _0x1ce7f3 = this['_sizeOverL' + 'ifetime'] && this['_sizeOverL' + 'ifetime']['enable'];
            _0x1ce7f3 ? 0x3 === this['_sizeOverL' + 'ifetime']['size']['type'] ? this['autoRandom' + 'Seed'] ? _0x389799 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xb], _0x389799 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xb] = this['_rand']['seed']) : _0x1ce7f3 = !0x1 : _0x1ce7f3 = !0x1;
            var _0x151500 = this['_rotationO' + 'verLifetim' + 'e'] && this['_rotationO' + 'verLifetim' + 'e']['enable'];
            if (_0x151500) {
                var _0x31c4dd = this['_rotationO' + 'verLifetim' + 'e']['angularVel' + 'ocity']['type'];
                0x2 === _0x31c4dd || 0x3 === _0x31c4dd ? this['autoRandom' + 'Seed'] ? _0x7cd122 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xc], _0x7cd122 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xc] = this['_rand']['seed']) : _0x151500 = !0x1;
            } else
                _0x151500 = !0x1;
            var _0x1500f9 = this['_textureSh' + 'eetAnimati' + 'on'] && this['_textureSh' + 'eetAnimati' + 'on']['enable'];
            _0x1500f9 ? 0x3 === this['_textureSh' + 'eetAnimati' + 'on']['frame']['type'] ? this['autoRandom' + 'Seed'] ? _0x4b6a10 = Math['random']() : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0xf], _0x4b6a10 = this['_rand']['getFloat'](), this['_randomSee' + 'ds'][0xf] = this['_rand']['seed']) : _0x1500f9 = !0x1 : _0x1500f9 = !0x1;
            var _0x425c7c, _0x129a4e, _0x243ab2, _0x2f861a, _0x45cc25, _0x18a033, _0x16ec43 = this['_firstFree' + 'Element'] * this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide'], _0x4c7e69 = _0x7412d7['startUVInf' + 'o'][0x0], _0x1ad327 = _0x7412d7['startUVInf' + 'o'][0x1], _0x9f5b98 = _0x7412d7['startUVInf' + 'o'][0x2], _0x5b0230 = _0x7412d7['startUVInf' + 'o'][0x3], _0x5b6e3e = this['_ownerRend' + 'er'];
            if (0x4 === _0x5b6e3e['renderMode']) {
                var _0x32ee14 = _0x5b6e3e['mesh']['_vertexBuf' + 'fer'];
                _0x425c7c = _0x32ee14['getFloat32' + 'Data']();
                var _0x5b58d8 = _0x32ee14['vertexDecl' + 'aration'];
                _0x243ab2 = _0x5b58d8['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_POSIT' + 'ION0'])['_offset'] / 0x4;
                var _0x2348b8 = _0x5b58d8['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_COLOR' + '0']);
                _0x2f861a = _0x2348b8 ? _0x2348b8['_offset'] / 0x4 : -0x1;
                var _0x48c010 = _0x5b58d8['getVertexE' + 'lementByUs' + 'age'](_0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                _0x45cc25 = _0x48c010 ? _0x48c010['_offset'] / 0x4 : -0x1, _0x129a4e = _0x5b58d8['vertexStri' + 'de'] / 0x4, _0x18a033 = 0x0;
            } else {
                this['_vertices'][_0x16ec43 + 0x2] = _0x9f5b98, this['_vertices'][_0x16ec43 + 0x3] = _0x5b0230 + _0x1ad327;
                var _0x43131f = _0x16ec43 + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x43131f + 0x2] = _0x9f5b98 + _0x4c7e69, this['_vertices'][_0x43131f + 0x3] = _0x5b0230 + _0x1ad327;
                var _0x272e6b = _0x43131f + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x272e6b + 0x2] = _0x9f5b98 + _0x4c7e69, this['_vertices'][_0x272e6b + 0x3] = _0x5b0230;
                var _0x17e6a4 = _0x272e6b + this['_floatCoun' + 'tPerVertex'];
                this['_vertices'][_0x17e6a4 + 0x2] = _0x9f5b98, this['_vertices'][_0x17e6a4 + 0x3] = _0x5b0230;
            }
            for (var _0x3f66b1 = _0x16ec43, _0x2cf56f = _0x16ec43 + this['_floatCoun' + 'tPerVertex'] * this['_vertexStr' + 'ide']; _0x3f66b1 < _0x2cf56f; _0x3f66b1 += this['_floatCoun' + 'tPerVertex']) {
                var _0x1e5541;
                if (0x4 === _0x5b6e3e['renderMode']) {
                    _0x1e5541 = _0x3f66b1;
                    var _0x383c54 = _0x129a4e * _0x18a033++, _0x533b2d = _0x383c54 + _0x243ab2;
                    this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d++], this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d++], this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d], -0x1 === _0x2f861a ? (this['_vertices'][_0x1e5541++] = 0x1, this['_vertices'][_0x1e5541++] = 0x1, this['_vertices'][_0x1e5541++] = 0x1, this['_vertices'][_0x1e5541++] = 0x1) : (_0x533b2d = _0x383c54 + _0x2f861a, this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d++], this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d++], this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d++], this['_vertices'][_0x1e5541++] = _0x425c7c[_0x533b2d]), -0x1 === _0x45cc25 ? (this['_vertices'][_0x1e5541++] = 0x0, this['_vertices'][_0x1e5541++] = 0x0) : (_0x533b2d = _0x383c54 + _0x45cc25, this['_vertices'][_0x1e5541++] = _0x9f5b98 + _0x425c7c[_0x533b2d++] * _0x4c7e69, this['_vertices'][_0x1e5541++] = _0x5b0230 + _0x425c7c[_0x533b2d] * _0x1ad327);
                } else
                    _0x1e5541 = _0x3f66b1 + 0x4;
                switch (this['_vertices'][_0x1e5541++] = _0x5387d3['x'], this['_vertices'][_0x1e5541++] = _0x5387d3['y'], this['_vertices'][_0x1e5541++] = _0x5387d3['z'], this['_vertices'][_0x1e5541++] = _0x7412d7['startLifeT' + 'ime'], this['_vertices'][_0x1e5541++] = _0x2dcf7b['x'], this['_vertices'][_0x1e5541++] = _0x2dcf7b['y'], this['_vertices'][_0x1e5541++] = _0x2dcf7b['z'], this['_vertices'][_0x1e5541++] = _0x58045c, this['_vertices'][_0x1e5541++] = _0x7412d7['startColor']['x'], this['_vertices'][_0x1e5541++] = _0x7412d7['startColor']['y'], this['_vertices'][_0x1e5541++] = _0x7412d7['startColor']['z'], this['_vertices'][_0x1e5541++] = _0x7412d7['startColor']['w'], this['_vertices'][_0x1e5541++] = _0x7412d7['startSize'][0x0], this['_vertices'][_0x1e5541++] = _0x7412d7['startSize'][0x1], this['_vertices'][_0x1e5541++] = _0x7412d7['startSize'][0x2], this['_vertices'][_0x1e5541++] = _0x7412d7['startRotat' + 'ion'][0x0], this['_vertices'][_0x1e5541++] = _0x7412d7['startRotat' + 'ion'][0x1], this['_vertices'][_0x1e5541++] = _0x7412d7['startRotat' + 'ion'][0x2], this['_vertices'][_0x1e5541++] = _0x428323, _0x55d49a && (this['_vertices'][_0x1e5541 + 0x1] = _0x523954), _0x1ce7f3 && (this['_vertices'][_0x1e5541 + 0x2] = _0x389799), _0x151500 && (this['_vertices'][_0x1e5541 + 0x3] = _0x7cd122), _0x1500f9 && (this['_vertices'][_0x1e5541 + 0x4] = _0x4b6a10), _0x2f08a2 && (this['_vertices'][_0x1e5541 + 0x5] = _0x357376, this['_vertices'][_0x1e5541 + 0x6] = _0x4323e6, this['_vertices'][_0x1e5541 + 0x7] = _0x1eef25), this['simulation' + 'Space']) {
                case 0x0:
                    _0x1e5541 += 0x8, this['_vertices'][_0x1e5541++] = _0x3bedf0['x'], this['_vertices'][_0x1e5541++] = _0x3bedf0['y'], this['_vertices'][_0x1e5541++] = _0x3bedf0['z'], this['_vertices'][_0x1e5541++] = _0x1d6760['x'], this['_vertices'][_0x1e5541++] = _0x1d6760['y'], this['_vertices'][_0x1e5541++] = _0x1d6760['z'], this['_vertices'][_0x1e5541++] = _0x1d6760['w'];
                    break;
                case 0x1:
                    break;
                default:
                    throw new Error('ShurikenPa' + 'rticleMate' + 'rial:\x20Simu' + 'lationSpac' + 'e\x20value\x20is' + '\x20invalid.');
                }
            }
            return this['_firstFree' + 'Element'] = _0xb7b57f, !0x0;
        }
        ['addNewPart' + 'iclesToVer' + 'texBuffer']() {
            var _0x538024, _0x51acdf = this['_vertexStr' + 'ide'] * this['_floatCoun' + 'tPerVertex'] * 0x4;
            this['_firstNewE' + 'lement'] < this['_firstFree' + 'Element'] ? (_0x538024 = this['_firstNewE' + 'lement'] * _0x51acdf, this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], _0x538024, _0x538024, (this['_firstFree' + 'Element'] - this['_firstNewE' + 'lement']) * _0x51acdf)) : (_0x538024 = this['_firstNewE' + 'lement'] * _0x51acdf, this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], _0x538024, _0x538024, (this['_bufferMax' + 'Particles'] - this['_firstNewE' + 'lement']) * _0x51acdf), this['_firstFree' + 'Element'] > 0x0 && this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, this['_firstFree' + 'Element'] * _0x51acdf)), this['_firstNewE' + 'lement'] = this['_firstFree' + 'Element'];
        }
        ['_getType']() {
            return _0x1fc961['_type'];
        }
        ['_prepareRe' + 'nder'](_0x16ae15) {
            return this['_updateEmi' + 'ssion'](), this['_firstNewE' + 'lement'] != this['_firstFree' + 'Element'] && this['addNewPart' + 'iclesToVer' + 'texBuffer'](), this['_drawCount' + 'er']++, this['_firstActi' + 'veElement'] != this['_firstFree' + 'Element'];
        }
        ['_render'](_0x3a7642) {
            var _0x3293cb;
            this['_bufferSta' + 'te']['bind']();
            var _0x185c7e = _0x33d6e0['LayaGL']['instance'];
            this['_firstActi' + 'veElement'] < this['_firstFree' + 'Element'] ? (_0x3293cb = (this['_firstFree' + 'Element'] - this['_firstActi' + 'veElement']) * this['_indexStri' + 'de'], _0x185c7e['drawElemen' + 'ts'](_0x185c7e['TRIANGLES'], _0x3293cb, _0x185c7e['UNSIGNED_S' + 'HORT'], 0x2 * this['_firstActi' + 'veElement'] * this['_indexStri' + 'de']), _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x3293cb / 0x3, _0x33d6e0['Stat']['renderBatc' + 'hes']++) : (_0x3293cb = (this['_bufferMax' + 'Particles'] - this['_firstActi' + 'veElement']) * this['_indexStri' + 'de'], _0x185c7e['drawElemen' + 'ts'](_0x185c7e['TRIANGLES'], _0x3293cb, _0x185c7e['UNSIGNED_S' + 'HORT'], 0x2 * this['_firstActi' + 'veElement'] * this['_indexStri' + 'de']), _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x3293cb / 0x3, _0x33d6e0['Stat']['renderBatc' + 'hes']++, this['_firstFree' + 'Element'] > 0x0 && (_0x3293cb = this['_firstFree' + 'Element'] * this['_indexStri' + 'de'], _0x185c7e['drawElemen' + 'ts'](_0x185c7e['TRIANGLES'], _0x3293cb, _0x185c7e['UNSIGNED_S' + 'HORT'], 0x0), _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x3293cb / 0x3, _0x33d6e0['Stat']['renderBatc' + 'hes']++));
        }
        ['play']() {
            if (this['_burstsInd' + 'ex'] = 0x0, this['_isEmittin' + 'g'] = !0x0, this['_isPlaying'] = !0x0, this['_isPaused'] = !0x1, this['_emissionT' + 'ime'] = 0x0, this['_totalDela' + 'yTime'] = 0x0, !this['autoRandom' + 'Seed']) {
                for (var _0x283250 = 0x0, _0x2c70db = this['_randomSee' + 'ds']['length']; _0x283250 < _0x2c70db; _0x283250++)
                    this['_randomSee' + 'ds'][_0x283250] = this['randomSeed'][0x0] + _0x1fc961['_RANDOMOFF' + 'SET'][_0x283250];
            }
            switch (this['startDelay' + 'Type']) {
            case 0x0:
                this['_playStart' + 'Delay'] = this['startDelay'];
                break;
            case 0x1:
                this['autoRandom' + 'Seed'] ? this['_playStart' + 'Delay'] = _0x33d6e0['MathUtil']['lerp'](this['startDelay' + 'Min'], this['startDelay' + 'Max'], Math['random']()) : (this['_rand']['seed'] = this['_randomSee' + 'ds'][0x2], this['_playStart' + 'Delay'] = _0x33d6e0['MathUtil']['lerp'](this['startDelay' + 'Min'], this['startDelay' + 'Max'], this['_rand']['getFloat']()), this['_randomSee' + 'ds'][0x2] = this['_rand']['seed']);
                break;
            default:
                throw new Error('Utils3D:\x20s' + 'tartDelayT' + 'ype\x20is\x20inv' + 'alid.');
            }
            this['_frameRate' + 'Time'] = this['_currentTi' + 'me'] + this['_playStart' + 'Delay'], this['_startUpda' + 'teLoopCoun' + 't'] = _0x33d6e0['Stat']['loopCount'];
        }
        ['pause']() {
            this['_isPaused'] = !0x0;
        }
        ['simulate'](_0x4282d1, _0x484eab = !0x0) {
            this['_simulateU' + 'pdate'] = !0x0, _0x484eab ? this['_updatePar' + 'ticlesSimu' + 'lationRest' + 'art'](_0x4282d1) : (this['_isPaused'] = !0x1, this['_updatePar' + 'ticles'](_0x4282d1)), this['pause']();
        }
        ['stop']() {
            this['_burstsInd' + 'ex'] = 0x0, this['_isEmittin' + 'g'] = !0x1, this['_emissionT' + 'ime'] = 0x0;
        }
        ['cloneTo'](_0x103480) {
            var _0x1da8f4 = _0x103480;
            _0x1da8f4['duration'] = this['duration'], _0x1da8f4['looping'] = this['looping'], _0x1da8f4['prewarm'] = this['prewarm'], _0x1da8f4['startDelay' + 'Type'] = this['startDelay' + 'Type'], _0x1da8f4['startDelay'] = this['startDelay'], _0x1da8f4['startDelay' + 'Min'] = this['startDelay' + 'Min'], _0x1da8f4['startDelay' + 'Max'] = this['startDelay' + 'Max'], _0x1da8f4['_maxStartL' + 'ifetime'] = this['_maxStartL' + 'ifetime'], _0x1da8f4['startLifet' + 'imeType'] = this['startLifet' + 'imeType'], _0x1da8f4['startLifet' + 'imeConstan' + 't'] = this['startLifet' + 'imeConstan' + 't'], this['startLifeT' + 'imeGradien' + 't']['cloneTo'](_0x1da8f4['startLifeT' + 'imeGradien' + 't']), _0x1da8f4['startLifet' + 'imeConstan' + 'tMin'] = this['startLifet' + 'imeConstan' + 'tMin'], _0x1da8f4['startLifet' + 'imeConstan' + 'tMax'] = this['startLifet' + 'imeConstan' + 'tMax'], this['startLifeT' + 'imeGradien' + 'tMin']['cloneTo'](_0x1da8f4['startLifeT' + 'imeGradien' + 'tMin']), this['startLifeT' + 'imeGradien' + 'tMax']['cloneTo'](_0x1da8f4['startLifeT' + 'imeGradien' + 'tMax']), _0x1da8f4['startSpeed' + 'Type'] = this['startSpeed' + 'Type'], _0x1da8f4['startSpeed' + 'Constant'] = this['startSpeed' + 'Constant'], _0x1da8f4['startSpeed' + 'ConstantMi' + 'n'] = this['startSpeed' + 'ConstantMi' + 'n'], _0x1da8f4['startSpeed' + 'ConstantMa' + 'x'] = this['startSpeed' + 'ConstantMa' + 'x'], _0x1da8f4['threeDStar' + 'tSize'] = this['threeDStar' + 'tSize'], _0x1da8f4['startSizeT' + 'ype'] = this['startSizeT' + 'ype'], _0x1da8f4['startSizeC' + 'onstant'] = this['startSizeC' + 'onstant'], this['startSizeC' + 'onstantSep' + 'arate']['cloneTo'](_0x1da8f4['startSizeC' + 'onstantSep' + 'arate']), _0x1da8f4['startSizeC' + 'onstantMin'] = this['startSizeC' + 'onstantMin'], _0x1da8f4['startSizeC' + 'onstantMax'] = this['startSizeC' + 'onstantMax'], this['startSizeC' + 'onstantMin' + 'Separate']['cloneTo'](_0x1da8f4['startSizeC' + 'onstantMin' + 'Separate']), this['startSizeC' + 'onstantMax' + 'Separate']['cloneTo'](_0x1da8f4['startSizeC' + 'onstantMax' + 'Separate']), _0x1da8f4['threeDStar' + 'tRotation'] = this['threeDStar' + 'tRotation'], _0x1da8f4['startRotat' + 'ionType'] = this['startRotat' + 'ionType'], _0x1da8f4['startRotat' + 'ionConstan' + 't'] = this['startRotat' + 'ionConstan' + 't'], this['startRotat' + 'ionConstan' + 'tSeparate']['cloneTo'](_0x1da8f4['startRotat' + 'ionConstan' + 'tSeparate']), _0x1da8f4['startRotat' + 'ionConstan' + 'tMin'] = this['startRotat' + 'ionConstan' + 'tMin'], _0x1da8f4['startRotat' + 'ionConstan' + 'tMax'] = this['startRotat' + 'ionConstan' + 'tMax'], this['startRotat' + 'ionConstan' + 'tMinSepara' + 'te']['cloneTo'](_0x1da8f4['startRotat' + 'ionConstan' + 'tMinSepara' + 'te']), this['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te']['cloneTo'](_0x1da8f4['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te']), _0x1da8f4['randomizeR' + 'otationDir' + 'ection'] = this['randomizeR' + 'otationDir' + 'ection'], _0x1da8f4['startColor' + 'Type'] = this['startColor' + 'Type'], this['startColor' + 'Constant']['cloneTo'](_0x1da8f4['startColor' + 'Constant']), this['startColor' + 'ConstantMi' + 'n']['cloneTo'](_0x1da8f4['startColor' + 'ConstantMi' + 'n']), this['startColor' + 'ConstantMa' + 'x']['cloneTo'](_0x1da8f4['startColor' + 'ConstantMa' + 'x']), _0x1da8f4['gravityMod' + 'ifier'] = this['gravityMod' + 'ifier'], _0x1da8f4['simulation' + 'Space'] = this['simulation' + 'Space'], _0x1da8f4['scaleMode'] = this['scaleMode'], _0x1da8f4['playOnAwak' + 'e'] = this['playOnAwak' + 'e'], _0x1da8f4['autoRandom' + 'Seed'] = this['autoRandom' + 'Seed'], _0x1da8f4['randomSeed'][0x0] = this['randomSeed'][0x0], _0x1da8f4['maxParticl' + 'es'] = this['maxParticl' + 'es'], this['_emission'] && (_0x1da8f4['_emission'] = this['_emission']['clone']()), this['shape'] && (_0x1da8f4['shape'] = this['shape']['clone']()), this['velocityOv' + 'erLifetime'] && (_0x1da8f4['velocityOv' + 'erLifetime'] = this['velocityOv' + 'erLifetime']['clone']()), this['colorOverL' + 'ifetime'] && (_0x1da8f4['colorOverL' + 'ifetime'] = this['colorOverL' + 'ifetime']['clone']()), this['sizeOverLi' + 'fetime'] && (_0x1da8f4['sizeOverLi' + 'fetime'] = this['sizeOverLi' + 'fetime']['clone']()), this['rotationOv' + 'erLifetime'] && (_0x1da8f4['rotationOv' + 'erLifetime'] = this['rotationOv' + 'erLifetime']['clone']()), this['textureShe' + 'etAnimatio' + 'n'] && (_0x1da8f4['textureShe' + 'etAnimatio' + 'n'] = this['textureShe' + 'etAnimatio' + 'n']['clone']()), _0x1da8f4['isPerforma' + 'nceMode'] = this['isPerforma' + 'nceMode'], _0x1da8f4['_isEmittin' + 'g'] = this['_isEmittin' + 'g'], _0x1da8f4['_isPlaying'] = this['_isPlaying'], _0x1da8f4['_isPaused'] = this['_isPaused'], _0x1da8f4['_playStart' + 'Delay'] = this['_playStart' + 'Delay'], _0x1da8f4['_frameRate' + 'Time'] = this['_frameRate' + 'Time'], _0x1da8f4['_emissionT' + 'ime'] = this['_emissionT' + 'ime'], _0x1da8f4['_totalDela' + 'yTime'] = this['_totalDela' + 'yTime'], _0x1da8f4['_burstsInd' + 'ex'] = this['_burstsInd' + 'ex'];
        }
        ['clone']() {
            var _0x29066b = new _0x1fc961(null);
            return this['cloneTo'](_0x29066b), _0x29066b;
        }
    }
    _0x1fc961['_RANDOMOFF' + 'SET'] = new Uint32Array([
        0x23571a3e,
        0xc34f56fe,
        0x13371337,
        0x12460f3b,
        0x6aed452e,
        0xdec4aea1,
        0x96aa4de3,
        0x8d2c8431,
        0xf3857f6f,
        0xe0fbd834,
        0x13740583,
        0x591bc05c,
        0x40eb95e4,
        0xbc524e5f,
        0xaf502044,
        0xa614b381,
        0x1034e524,
        0xfc524e5f
    ]), _0x1fc961['halfKSqrtO' + 'f2'] = 0.71, _0x1fc961['_maxElapse' + 'dTime'] = 0x1 / 0x3, _0x1fc961['_tempVecto' + 'r30'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r31'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r32'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r33'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r34'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r35'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r36'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r37'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r38'] = new _0x4795b3(), _0x1fc961['_tempVecto' + 'r39'] = new _0x4795b3(), _0x1fc961['_tempPosit' + 'ion'] = new _0x4795b3(), _0x1fc961['_tempDirec' + 'tion'] = new _0x4795b3(), _0x1fc961['_type'] = _0x42e697['_typeCount' + 'er']++;
    class _0x5ae730 extends _0x33bc07 {
        static ['__init__']() {
            _0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_BILLBO' + 'ARD'] = _0x1ede74['getDefineB' + 'yName']('SPHERHBILL' + 'BOARD'), _0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_STRETC' + 'HEDBILLBOA' + 'RD'] = _0x1ede74['getDefineB' + 'yName']('STRETCHEDB' + 'ILLBOARD'), _0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_HORIZO' + 'NTALBILLBO' + 'ARD'] = _0x1ede74['getDefineB' + 'yName']('HORIZONTAL' + 'BILLBOARD'), _0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_VERTIC' + 'ALBILLBOAR' + 'D'] = _0x1ede74['getDefineB' + 'yName']('VERTICALBI' + 'LLBOARD'), _0x5728cf['SHADERDEFI' + 'NE_COLOROV' + 'ERLIFETIME'] = _0x1ede74['getDefineB' + 'yName']('COLOROVERL' + 'IFETIME'), _0x5728cf['SHADERDEFI' + 'NE_RANDOMC' + 'OLOROVERLI' + 'FETIME'] = _0x1ede74['getDefineB' + 'yName']('RANDOMCOLO' + 'ROVERLIFET' + 'IME'), _0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECONSTAN' + 'T'] = _0x1ede74['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'CONSTANT'), _0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMECURVE'] = _0x1ede74['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'CURVE'), _0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT'] = _0x1ede74['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANT'), _0x5728cf['SHADERDEFI' + 'NE_VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'URVE'] = _0x1ede74['getDefineB' + 'yName']('VELOCITYOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'E'), _0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONCURVE'] = _0x1ede74['getDefineB' + 'yName']('TEXTURESHE' + 'ETANIMATIO' + 'NCURVE'), _0x5728cf['SHADERDEFI' + 'NE_TEXTURE' + 'SHEETANIMA' + 'TIONRANDOM' + 'CURVE'] = _0x1ede74['getDefineB' + 'yName']('TEXTURESHE' + 'ETANIMATIO' + 'NRANDOMCUR' + 'VE'), _0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IME'] = _0x1ede74['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME'), _0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMESEPERAT' + 'E'] = _0x1ede74['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'SEPERATE'), _0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECONSTAN' + 'T'] = _0x1ede74['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'CONSTANT'), _0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMECURVE'] = _0x1ede74['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'CURVE'), _0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS'] = _0x1ede74['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS'), _0x5728cf['SHADERDEFI' + 'NE_ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'URVES'] = _0x1ede74['getDefineB' + 'yName']('ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES'), _0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVE'] = _0x1ede74['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMECURV' + 'E'), _0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE'] = _0x1ede74['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMECURV' + 'ESEPERATE'), _0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S'] = _0x1ede74['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMERAND' + 'OMCURVES'), _0x5728cf['SHADERDEFI' + 'NE_SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE'] = _0x1ede74['getDefineB' + 'yName']('SIZEOVERLI' + 'FETIMERAND' + 'OMCURVESSE' + 'PERATE'), _0x5728cf['SHADERDEFI' + 'NE_RENDERM' + 'ODE_MESH'] = _0x1ede74['getDefineB' + 'yName']('RENDERMODE' + '_MESH'), _0x5728cf['SHADERDEFI' + 'NE_SHAPE'] = _0x1ede74['getDefineB' + 'yName']('SHAPE');
        }
        get ['particleSy' + 'stem']() {
            return this['_particleS' + 'ystem'];
        }
        get ['particleRe' + 'nderer']() {
            return this['_render'];
        }
        constructor() {
            super(null), this['_render'] = new _0x58c4a4(this), this['_particleS' + 'ystem'] = new _0x1fc961(this);
            var _0x5cd6fb = this['_render']['_renderEle' + 'ments'][0x0] = new _0x14112a();
            _0x5cd6fb['setTransfo' + 'rm'](this['_transform']), _0x5cd6fb['render'] = this['_render'], _0x5cd6fb['setGeometr' + 'y'](this['_particleS' + 'ystem']), _0x5cd6fb['material'] = _0x268ae0['defaultMat' + 'erial'];
        }
        ['_parseModu' + 'le'](_0x51f9f3, _0x16862f) {
            for (var _0x486c42 in _0x16862f)
                switch (_0x486c42) {
                case 'bases':
                    var _0x2bc86e = _0x16862f['bases'];
                    for (var _0x563e15 in _0x2bc86e)
                        _0x51f9f3[_0x563e15] = _0x2bc86e[_0x563e15];
                    break;
                case 'vector2s':
                    var _0x96d73a = _0x16862f['vector2s'];
                    for (var _0x563e15 in _0x96d73a) {
                        var _0x2edd47 = _0x51f9f3[_0x563e15], _0x42c4c3 = _0x96d73a[_0x563e15];
                        _0x2edd47['setValue'](_0x42c4c3[0x0], _0x42c4c3[0x1]), _0x51f9f3[_0x563e15] = _0x2edd47;
                    }
                    break;
                case 'vector3s':
                    var _0x566322 = _0x16862f['vector3s'];
                    for (var _0x563e15 in _0x566322) {
                        var _0x5bc06b = _0x51f9f3[_0x563e15], _0x48041b = _0x566322[_0x563e15];
                        _0x5bc06b['setValue'](_0x48041b[0x0], _0x48041b[0x1], _0x48041b[0x2]), _0x51f9f3[_0x563e15] = _0x5bc06b;
                    }
                    break;
                case 'vector4s':
                    var _0x2262d3 = _0x16862f['vector4s'];
                    for (var _0x563e15 in _0x2262d3) {
                        var _0x2f788d = _0x51f9f3[_0x563e15], _0x5dd0dd = _0x2262d3[_0x563e15];
                        _0x2f788d['setValue'](_0x5dd0dd[0x0], _0x5dd0dd[0x1], _0x5dd0dd[0x2], _0x5dd0dd[0x3]), _0x51f9f3[_0x563e15] = _0x2f788d;
                    }
                    break;
                case 'gradientDa' + 'taNumbers':
                    var _0x50ddac = _0x16862f['gradientDa' + 'taNumbers'];
                    for (var _0x563e15 in _0x50ddac) {
                        for (var _0x47aa7c = _0x51f9f3[_0x563e15], _0x2d1d94 = _0x16862f[_0x563e15], _0x3ed8d1 = 0x0, _0x5f119d = _0x2d1d94['length']; _0x3ed8d1 < _0x5f119d; _0x3ed8d1++) {
                            var _0x4b8032 = _0x2d1d94[_0x3ed8d1];
                            _0x47aa7c['add'](_0x4b8032['key'], _0x4b8032['value']);
                        }
                        _0x51f9f3[_0x563e15] = _0x47aa7c;
                    }
                    break;
                case 'resources':
                    var _0x47ad57 = _0x16862f['resources'];
                    for (var _0x563e15 in _0x47ad57)
                        _0x51f9f3[_0x563e15] = _0x33d6e0['Loader']['getRes'](_0x47ad57[_0x563e15]);
                    break;
                case 'bursts':
                    var _0x3dc90a = _0x16862f['bursts'];
                    for (_0x3ed8d1 = 0x0, _0x5f119d = _0x3dc90a['length']; _0x3ed8d1 < _0x5f119d; _0x3ed8d1++) {
                        var _0x1e99aa = _0x3dc90a[_0x3ed8d1];
                        _0x51f9f3['addBurst'](new _0x32b46a(_0x1e99aa['time'], _0x1e99aa['min'], _0x1e99aa['max']));
                    }
                    break;
                case 'randomSeed':
                    _0x51f9f3['randomSeed'][0x0] = _0x16862f['randomSeed'];
                    break;
                case 'shapeType':
                case 'type':
                case 'color':
                case 'size':
                case 'frame':
                case 'startFrame':
                case 'angularVel' + 'ocity':
                case 'velocity':
                    break;
                default:
                    throw 'ShurikenPa' + 'rticle3D:u' + 'nknown\x20typ' + 'e.';
                }
        }
        ['_parse'](_0x3064da, _0xbc4858) {
            if (super['_parse'](_0x3064da, _0xbc4858), _0x3064da['main']) {
                var _0x4252df = this['particleSy' + 'stem'], _0x8048f5 = this['particleRe' + 'nderer'];
                this['_parseModu' + 'le'](_0x8048f5, _0x3064da['renderer']), this['_parseModu' + 'le'](_0x4252df, _0x3064da['main']), this['_parseModu' + 'le'](_0x4252df['emission'], _0x3064da['emission']);
                var _0x165132 = _0x3064da['shape'];
                if (_0x165132) {
                    var _0x29d970;
                    switch (_0x165132['shapeType']) {
                    case 0x0:
                        _0x29d970 = new _0x54551d();
                        break;
                    case 0x1:
                        _0x29d970 = new _0x393f0e();
                        break;
                    case 0x2:
                        _0x29d970 = new _0x46e1ac();
                        break;
                    case 0x3:
                        _0x29d970 = new _0x322897();
                        break;
                    case 0x7:
                        _0x29d970 = new _0x453392();
                        break;
                    default:
                        throw 'ShuriKenPa' + 'rticle3D:u' + 'nknown\x20sha' + 'pe\x20type.';
                    }
                    this['_parseModu' + 'le'](_0x29d970, _0x165132), _0x4252df['shape'] = _0x29d970;
                }
                var _0x506f7f = _0x3064da['velocityOv' + 'erLifetime'];
                if (_0x506f7f) {
                    var _0x40382d, _0x5b89cc = _0x506f7f['velocity'];
                    switch (_0x5b89cc['type']) {
                    case 0x0:
                        var _0x44693e = _0x5b89cc['constant'];
                        _0x40382d = _0x3f3530['createByCo' + 'nstant'](_0x44693e ? new _0x4795b3(_0x44693e[0x0], _0x44693e[0x1], _0x44693e[0x2]) : new _0x4795b3(0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x40382d = _0x3f3530['createByGr' + 'adient'](this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientX']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientY']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientZ']));
                        break;
                    case 0x2:
                        var _0x3c4675 = _0x5b89cc['constantMi' + 'n'], _0x23692d = _0x5b89cc['constantMa' + 'x'];
                        _0x40382d = _0x3f3530['createByRa' + 'ndomTwoCon' + 'stant'](_0x3c4675 ? new _0x4795b3(_0x3c4675[0x0], _0x3c4675[0x1], _0x3c4675[0x2]) : new _0x4795b3(0x0, 0x0, 0x0), _0x23692d ? new _0x4795b3(_0x23692d[0x0], _0x23692d[0x1], _0x23692d[0x2]) : new _0x4795b3(0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x40382d = _0x3f3530['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientXM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientXM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientYM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientYM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientZM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x5b89cc['gradientZM' + 'ax']));
                    }
                    var _0x15f51b = new _0x212687(_0x40382d);
                    this['_parseModu' + 'le'](_0x15f51b, _0x506f7f), _0x4252df['velocityOv' + 'erLifetime'] = _0x15f51b;
                }
                var _0x569ee8 = _0x3064da['colorOverL' + 'ifetime'];
                if (_0x569ee8) {
                    var _0x424baf, _0x3b82d2 = _0x569ee8['color'];
                    switch (_0x3b82d2['type']) {
                    case 0x0:
                        var _0x5d47cf = _0x3b82d2['constant'];
                        _0x424baf = _0x45c823['createByCo' + 'nstant'](_0x5d47cf ? new _0x333f41(_0x5d47cf[0x0], _0x5d47cf[0x1], _0x5d47cf[0x2], _0x5d47cf[0x3]) : new _0x333f41(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x1:
                        _0x424baf = _0x45c823['createByGr' + 'adient'](this['_initParti' + 'cleColor'](_0x3b82d2['gradient']));
                        break;
                    case 0x2:
                        var _0x432b39 = _0x3b82d2['constantMi' + 'n'], _0x13fa63 = _0x3b82d2['constantMa' + 'x'];
                        _0x424baf = _0x45c823['createByRa' + 'ndomTwoCon' + 'stant'](_0x432b39 ? new _0x333f41(_0x432b39[0x0], _0x432b39[0x1], _0x432b39[0x2], _0x432b39[0x3]) : new _0x333f41(0x0, 0x0, 0x0, 0x0), _0x432b39 ? new _0x333f41(_0x13fa63[0x0], _0x13fa63[0x1], _0x13fa63[0x2], _0x13fa63[0x3]) : new _0x333f41(0x0, 0x0, 0x0, 0x0));
                        break;
                    case 0x3:
                        _0x424baf = _0x45c823['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleColor'](_0x3b82d2['gradientMi' + 'n']), this['_initParti' + 'cleColor'](_0x3b82d2['gradientMa' + 'x']));
                    }
                    var _0x423681 = new _0x809633(_0x424baf);
                    this['_parseModu' + 'le'](_0x423681, _0x569ee8), _0x4252df['colorOverL' + 'ifetime'] = _0x423681;
                }
                var _0x3321cb = _0x3064da['sizeOverLi' + 'fetime'];
                if (_0x3321cb) {
                    var _0x4bdaf4, _0x515e19 = _0x3321cb['size'];
                    switch (_0x515e19['type']) {
                    case 0x0:
                        _0x4bdaf4 = _0x515e19['separateAx' + 'es'] ? _0x3566ff['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleSize'](_0x515e19['gradientX']), this['_initParti' + 'cleSize'](_0x515e19['gradientY']), this['_initParti' + 'cleSize'](_0x515e19['gradientZ'])) : _0x3566ff['createByGr' + 'adient'](this['_initParti' + 'cleSize'](_0x515e19['gradient']));
                        break;
                    case 0x1:
                        if (_0x515e19['separateAx' + 'es']) {
                            var _0x41ab57 = _0x515e19['constantMi' + 'nSeparate'], _0x4c9452 = _0x515e19['constantMa' + 'xSeparate'];
                            _0x4bdaf4 = _0x3566ff['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x41ab57 ? new _0x4795b3(_0x41ab57[0x0], _0x41ab57[0x1], _0x41ab57[0x2]) : new _0x4795b3(0x0, 0x0, 0x0), _0x4c9452 ? new _0x4795b3(_0x4c9452[0x0], _0x4c9452[0x1], _0x4c9452[0x2]) : new _0x4795b3(0x0, 0x0, 0x0));
                        } else
                            _0x4bdaf4 = _0x3566ff['createByRa' + 'ndomTwoCon' + 'stant'](_0x515e19['constantMi' + 'n'] || 0x0, _0x515e19['constantMa' + 'x'] || 0x0);
                        break;
                    case 0x2:
                        _0x4bdaf4 = _0x515e19['separateAx' + 'es'] ? _0x3566ff['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_initParti' + 'cleSize'](_0x515e19['gradientXM' + 'in']), this['_initParti' + 'cleSize'](_0x515e19['gradientYM' + 'in']), this['_initParti' + 'cleSize'](_0x515e19['gradientZM' + 'in']), this['_initParti' + 'cleSize'](_0x515e19['gradientXM' + 'ax']), this['_initParti' + 'cleSize'](_0x515e19['gradientYM' + 'ax']), this['_initParti' + 'cleSize'](_0x515e19['gradientZM' + 'ax'])) : _0x3566ff['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleSize'](_0x515e19['gradientMi' + 'n']), this['_initParti' + 'cleSize'](_0x515e19['gradientMa' + 'x']));
                    }
                    var _0x212cb2 = new _0x25d126(_0x4bdaf4);
                    this['_parseModu' + 'le'](_0x212cb2, _0x3321cb), _0x4252df['sizeOverLi' + 'fetime'] = _0x212cb2;
                }
                var _0x4311b2 = _0x3064da['rotationOv' + 'erLifetime'];
                if (_0x4311b2) {
                    var _0x130173, _0x211c4e = _0x4311b2['angularVel' + 'ocity'];
                    switch (_0x211c4e['type']) {
                    case 0x0:
                        if (_0x211c4e['separateAx' + 'es']) {
                            var _0x14937f = _0x211c4e['constantSe' + 'parate'];
                            _0x130173 = _0x8e6cf8['createByCo' + 'nstantSepa' + 'rate'](_0x14937f ? new _0x4795b3(_0x14937f[0x0], _0x14937f[0x1], _0x14937f[0x2]) : new _0x4795b3(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x130173 = _0x8e6cf8['createByCo' + 'nstant'](_0x211c4e['constant'] || Math['PI'] / 0x4);
                        break;
                    case 0x1:
                        _0x130173 = _0x211c4e['separateAx' + 'es'] ? _0x8e6cf8['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleRotatio' + 'n'](_0x211c4e['gradientX']), this['_initParti' + 'cleRotatio' + 'n'](_0x211c4e['gradientY']), this['_initParti' + 'cleRotatio' + 'n'](_0x211c4e['gradientZ'])) : _0x8e6cf8['createByGr' + 'adient'](this['_initParti' + 'cleRotatio' + 'n'](_0x211c4e['gradient']));
                        break;
                    case 0x2:
                        if (_0x211c4e['separateAx' + 'es']) {
                            var _0x51cbc9 = _0x211c4e['constantMi' + 'nSeparate'], _0x2ddccc = _0x211c4e['constantMa' + 'xSeparate'];
                            _0x130173 = _0x8e6cf8['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](_0x51cbc9 ? new _0x4795b3(_0x51cbc9[0x0], _0x51cbc9[0x1], _0x51cbc9[0x2]) : new _0x4795b3(0x0, 0x0, 0x0), _0x2ddccc ? new _0x4795b3(_0x2ddccc[0x0], _0x2ddccc[0x1], _0x2ddccc[0x2]) : new _0x4795b3(0x0, 0x0, Math['PI'] / 0x4));
                        } else
                            _0x130173 = _0x8e6cf8['createByRa' + 'ndomTwoCon' + 'stant'](_0x211c4e['constantMi' + 'n'] || 0x0, _0x211c4e['constantMa' + 'x'] || Math['PI'] / 0x4);
                        break;
                    case 0x3:
                        _0x211c4e['separateAx' + 'es'] || (_0x130173 = _0x8e6cf8['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleRotatio' + 'n'](_0x211c4e['gradientMi' + 'n']), this['_initParti' + 'cleRotatio' + 'n'](_0x211c4e['gradientMa' + 'x'])));
                    }
                    var _0x37b8fb = new _0x42963c(_0x130173);
                    this['_parseModu' + 'le'](_0x37b8fb, _0x4311b2), _0x4252df['rotationOv' + 'erLifetime'] = _0x37b8fb;
                }
                var _0xa6837d = _0x3064da['textureShe' + 'etAnimatio' + 'n'];
                if (_0xa6837d) {
                    var _0x5b037c, _0x506ddb = _0xa6837d['frame'];
                    switch (_0x506ddb['type']) {
                    case 0x0:
                        _0x5b037c = _0x5c4f1e['createByCo' + 'nstant'](_0x506ddb['constant']);
                        break;
                    case 0x1:
                        _0x5b037c = _0x5c4f1e['createByOv' + 'erTime'](this['_initParti' + 'cleFrame'](_0x506ddb['overTime']));
                        break;
                    case 0x2:
                        _0x5b037c = _0x5c4f1e['createByRa' + 'ndomTwoCon' + 'stant'](_0x506ddb['constantMi' + 'n'], _0x506ddb['constantMa' + 'x']);
                        break;
                    case 0x3:
                        _0x5b037c = _0x5c4f1e['createByRa' + 'ndomTwoOve' + 'rTime'](this['_initParti' + 'cleFrame'](_0x506ddb['overTimeMi' + 'n']), this['_initParti' + 'cleFrame'](_0x506ddb['overTimeMa' + 'x']));
                    }
                    var _0xd373c, _0xab49bb = _0xa6837d['startFrame'];
                    switch (_0xab49bb['type']) {
                    case 0x0:
                        _0xd373c = _0x2c01a3['createByCo' + 'nstant'](_0xab49bb['constant']);
                        break;
                    case 0x1:
                        _0xd373c = _0x2c01a3['createByRa' + 'ndomTwoCon' + 'stant'](_0xab49bb['constantMi' + 'n'], _0xab49bb['constantMa' + 'x']);
                    }
                    var _0x2d7315 = new _0x4da8a7(_0x5b037c, _0xd373c);
                    this['_parseModu' + 'le'](_0x2d7315, _0xa6837d), _0x4252df['textureShe' + 'etAnimatio' + 'n'] = _0x2d7315;
                }
            } else
                this['_parseOld'](_0x3064da);
        }
        ['_activeHie' + 'rarchy'](_0x1dfe96) {
            super['_activeHie' + 'rarchy'](_0x1dfe96), this['particleSy' + 'stem']['playOnAwak' + 'e'] && this['particleSy' + 'stem']['play']();
        }
        ['_inActiveH' + 'ierarchy'](_0x3a03f2) {
            super['_inActiveH' + 'ierarchy'](_0x3a03f2), this['particleSy' + 'stem']['isAlive'] && this['particleSy' + 'stem']['simulate'](0x0, !0x0);
        }
        ['_cloneTo'](_0x234a10, _0x2c41e0, _0x4efe01) {
            var _0x584efa = _0x234a10, _0x207e00 = _0x584efa['_particleS' + 'ystem'];
            this['_particleS' + 'ystem']['cloneTo'](_0x207e00);
            var _0x561239 = _0x584efa['_render'], _0x566cf4 = this['_render'];
            _0x561239['sharedMate' + 'rials'] = _0x566cf4['sharedMate' + 'rials'], _0x561239['enable'] = _0x566cf4['enable'], _0x561239['renderMode'] = _0x566cf4['renderMode'], _0x561239['mesh'] = _0x566cf4['mesh'], _0x561239['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = _0x566cf4['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'], _0x561239['stretchedB' + 'illboardSp' + 'eedScale'] = _0x566cf4['stretchedB' + 'illboardSp' + 'eedScale'], _0x561239['stretchedB' + 'illboardLe' + 'ngthScale'] = _0x566cf4['stretchedB' + 'illboardLe' + 'ngthScale'], _0x561239['sortingFud' + 'ge'] = _0x566cf4['sortingFud' + 'ge'], super['_cloneTo'](_0x234a10, _0x2c41e0, _0x4efe01);
        }
        ['destroy'](_0x4b0222 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x4b0222), this['_particleS' + 'ystem']['destroy'](), this['_particleS' + 'ystem'] = null);
        }
        ['_create']() {
            return new _0x5ae730();
        }
        ['_parseOld'](_0x4d2588) {
            const _0x2cfd37 = Math['PI'] / 0xb4;
            var _0x26e3fa, _0x1ce0e3, _0x5e2cc0, _0x1cc56f = this['particleRe' + 'nderer'], _0x101e29 = _0x4d2588['material'];
            _0x101e29 && (_0x5e2cc0 = _0x33d6e0['Loader']['getRes'](_0x101e29['path'])), _0x1cc56f['sharedMate' + 'rial'] = _0x5e2cc0;
            var _0x36a1b2 = _0x4d2588['meshPath'];
            _0x36a1b2 && (_0x1cc56f['mesh'] = _0x33d6e0['Loader']['getRes'](_0x36a1b2)), _0x1cc56f['renderMode'] = _0x4d2588['renderMode'], _0x1cc56f['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'] = _0x4d2588['stretchedB' + 'illboardCa' + 'meraSpeedS' + 'cale'], _0x1cc56f['stretchedB' + 'illboardSp' + 'eedScale'] = _0x4d2588['stretchedB' + 'illboardSp' + 'eedScale'], _0x1cc56f['stretchedB' + 'illboardLe' + 'ngthScale'] = _0x4d2588['stretchedB' + 'illboardLe' + 'ngthScale'], _0x1cc56f['sortingFud' + 'ge'] = _0x4d2588['sortingFud' + 'ge'] ? _0x4d2588['sortingFud' + 'ge'] : 0x0;
            var _0x5459cf = this['particleSy' + 'stem'];
            _0x5459cf['isPerforma' + 'nceMode'] = _0x4d2588['isPerforma' + 'nceMode'], _0x5459cf['duration'] = _0x4d2588['duration'], _0x5459cf['looping'] = _0x4d2588['looping'], _0x5459cf['prewarm'] = _0x4d2588['prewarm'], _0x5459cf['startDelay' + 'Type'] = _0x4d2588['startDelay' + 'Type'], _0x5459cf['startDelay'] = _0x4d2588['startDelay'], _0x5459cf['startDelay' + 'Min'] = _0x4d2588['startDelay' + 'Min'], _0x5459cf['startDelay' + 'Max'] = _0x4d2588['startDelay' + 'Max'], _0x5459cf['startLifet' + 'imeType'] = _0x4d2588['startLifet' + 'imeType'], _0x5459cf['startLifet' + 'imeConstan' + 't'] = _0x4d2588['startLifet' + 'imeConstan' + 't'], _0x5459cf['startLifeT' + 'imeGradien' + 't'] = _0x5ae730['_initStart' + 'Life'](_0x4d2588['startLifet' + 'imeGradien' + 't']), _0x5459cf['startLifet' + 'imeConstan' + 'tMin'] = _0x4d2588['startLifet' + 'imeConstan' + 'tMin'], _0x5459cf['startLifet' + 'imeConstan' + 'tMax'] = _0x4d2588['startLifet' + 'imeConstan' + 'tMax'], _0x5459cf['startLifeT' + 'imeGradien' + 'tMin'] = _0x5ae730['_initStart' + 'Life'](_0x4d2588['startLifet' + 'imeGradien' + 'tMin']), _0x5459cf['startLifeT' + 'imeGradien' + 'tMax'] = _0x5ae730['_initStart' + 'Life'](_0x4d2588['startLifet' + 'imeGradien' + 'tMax']), _0x5459cf['startSpeed' + 'Type'] = _0x4d2588['startSpeed' + 'Type'], _0x5459cf['startSpeed' + 'Constant'] = _0x4d2588['startSpeed' + 'Constant'], _0x5459cf['startSpeed' + 'ConstantMi' + 'n'] = _0x4d2588['startSpeed' + 'ConstantMi' + 'n'], _0x5459cf['startSpeed' + 'ConstantMa' + 'x'] = _0x4d2588['startSpeed' + 'ConstantMa' + 'x'], _0x5459cf['threeDStar' + 'tSize'] = _0x4d2588['threeDStar' + 'tSize'], _0x5459cf['startSizeT' + 'ype'] = _0x4d2588['startSizeT' + 'ype'], _0x5459cf['startSizeC' + 'onstant'] = _0x4d2588['startSizeC' + 'onstant'];
            var _0x1d20ef = _0x4d2588['startSizeC' + 'onstantSep' + 'arate'], _0x5b5768 = _0x5459cf['startSizeC' + 'onstantSep' + 'arate'];
            _0x5b5768['x'] = _0x1d20ef[0x0], _0x5b5768['y'] = _0x1d20ef[0x1], _0x5b5768['z'] = _0x1d20ef[0x2], _0x5459cf['startSizeC' + 'onstantMin'] = _0x4d2588['startSizeC' + 'onstantMin'], _0x5459cf['startSizeC' + 'onstantMax'] = _0x4d2588['startSizeC' + 'onstantMax'];
            var _0x1cfeb6 = _0x4d2588['startSizeC' + 'onstantMin' + 'Separate'], _0x1f1b72 = _0x5459cf['startSizeC' + 'onstantMin' + 'Separate'];
            _0x1f1b72['x'] = _0x1cfeb6[0x0], _0x1f1b72['y'] = _0x1cfeb6[0x1], _0x1f1b72['z'] = _0x1cfeb6[0x2];
            var _0x180a43 = _0x4d2588['startSizeC' + 'onstantMax' + 'Separate'], _0x5e69ac = _0x5459cf['startSizeC' + 'onstantMax' + 'Separate'];
            _0x5e69ac['x'] = _0x180a43[0x0], _0x5e69ac['y'] = _0x180a43[0x1], _0x5e69ac['z'] = _0x180a43[0x2], _0x5459cf['threeDStar' + 'tRotation'] = _0x4d2588['threeDStar' + 'tRotation'], _0x5459cf['startRotat' + 'ionType'] = _0x4d2588['startRotat' + 'ionType'], _0x5459cf['startRotat' + 'ionConstan' + 't'] = _0x4d2588['startRotat' + 'ionConstan' + 't'] * _0x2cfd37;
            var _0x2436fb = _0x4d2588['startRotat' + 'ionConstan' + 'tSeparate'], _0x1e0f33 = _0x5459cf['startRotat' + 'ionConstan' + 'tSeparate'];
            _0x1e0f33['x'] = _0x2436fb[0x0] * _0x2cfd37, _0x1e0f33['y'] = _0x2436fb[0x1] * _0x2cfd37, _0x1e0f33['z'] = _0x2436fb[0x2] * _0x2cfd37, _0x5459cf['startRotat' + 'ionConstan' + 'tMin'] = _0x4d2588['startRotat' + 'ionConstan' + 'tMin'] * _0x2cfd37, _0x5459cf['startRotat' + 'ionConstan' + 'tMax'] = _0x4d2588['startRotat' + 'ionConstan' + 'tMax'] * _0x2cfd37;
            var _0x5956d2 = _0x4d2588['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'], _0x26bd8b = _0x5459cf['startRotat' + 'ionConstan' + 'tMinSepara' + 'te'];
            _0x26bd8b['x'] = _0x5956d2[0x0] * _0x2cfd37, _0x26bd8b['y'] = _0x5956d2[0x1] * _0x2cfd37, _0x26bd8b['z'] = _0x5956d2[0x2] * _0x2cfd37;
            var _0x3012c6 = _0x4d2588['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'], _0x33692c = _0x5459cf['startRotat' + 'ionConstan' + 'tMaxSepara' + 'te'];
            _0x33692c['x'] = _0x3012c6[0x0] * _0x2cfd37, _0x33692c['y'] = _0x3012c6[0x1] * _0x2cfd37, _0x33692c['z'] = _0x3012c6[0x2] * _0x2cfd37, _0x5459cf['randomizeR' + 'otationDir' + 'ection'] = _0x4d2588['randomizeR' + 'otationDir' + 'ection'], _0x5459cf['startColor' + 'Type'] = _0x4d2588['startColor' + 'Type'];
            var _0x7663e5 = _0x4d2588['startColor' + 'Constant'], _0x527a76 = _0x5459cf['startColor' + 'Constant'];
            _0x527a76['x'] = _0x7663e5[0x0], _0x527a76['y'] = _0x7663e5[0x1], _0x527a76['z'] = _0x7663e5[0x2], _0x527a76['w'] = _0x7663e5[0x3];
            var _0x16dafb = _0x4d2588['startColor' + 'ConstantMi' + 'n'], _0x3b98fb = _0x5459cf['startColor' + 'ConstantMi' + 'n'];
            _0x3b98fb['x'] = _0x16dafb[0x0], _0x3b98fb['y'] = _0x16dafb[0x1], _0x3b98fb['z'] = _0x16dafb[0x2], _0x3b98fb['w'] = _0x16dafb[0x3];
            var _0x3c3c02 = _0x4d2588['startColor' + 'ConstantMa' + 'x'], _0x12f5a3 = _0x5459cf['startColor' + 'ConstantMa' + 'x'];
            _0x12f5a3['x'] = _0x3c3c02[0x0], _0x12f5a3['y'] = _0x3c3c02[0x1], _0x12f5a3['z'] = _0x3c3c02[0x2], _0x12f5a3['w'] = _0x3c3c02[0x3], _0x5459cf['gravityMod' + 'ifier'] = _0x4d2588['gravityMod' + 'ifier'], _0x5459cf['simulation' + 'Space'] = _0x4d2588['simulation' + 'Space'], void 0x0 !== _0x4d2588['simulation' + 'Speed'] && (_0x5459cf['simulation' + 'Speed'] = _0x4d2588['simulation' + 'Speed']), _0x5459cf['scaleMode'] = _0x4d2588['scaleMode'], _0x5459cf['playOnAwak' + 'e'] = _0x4d2588['playOnAwak' + 'e'], _0x5459cf['maxParticl' + 'es'] = _0x4d2588['maxParticl' + 'es'];
            var _0x279d27 = _0x4d2588['autoRandom' + 'Seed'];
            null != _0x279d27 && (_0x5459cf['autoRandom' + 'Seed'] = _0x279d27);
            var _0x209d0 = _0x4d2588['randomSeed'];
            null != _0x209d0 && (_0x5459cf['randomSeed'][0x0] = _0x209d0);
            var _0x1be504 = _0x4d2588['emission'], _0x563548 = _0x5459cf['emission'];
            if (_0x1be504) {
                _0x563548['emissionRa' + 'te'] = _0x1be504['emissionRa' + 'te'];
                var _0xd968f0 = _0x1be504['bursts'];
                if (_0xd968f0)
                    for (_0x26e3fa = 0x0, _0x1ce0e3 = _0xd968f0['length']; _0x26e3fa < _0x1ce0e3; _0x26e3fa++) {
                        var _0x1c98ed = _0xd968f0[_0x26e3fa];
                        _0x563548['addBurst'](new _0x32b46a(_0x1c98ed['time'], _0x1c98ed['min'], _0x1c98ed['max']));
                    }
                _0x563548['enable'] = _0x1be504['enable'];
            } else
                _0x563548['enable'] = !0x1;
            var _0xecfeee = _0x4d2588['shape'];
            if (_0xecfeee) {
                var _0x5df3ac;
                switch (_0xecfeee['shapeType']) {
                case 0x0:
                    var _0x44ccff;
                    _0x5df3ac = _0x44ccff = new _0x54551d(), _0x44ccff['radius'] = _0xecfeee['sphereRadi' + 'us'], _0x44ccff['emitFromSh' + 'ell'] = _0xecfeee['sphereEmit' + 'FromShell'], _0x44ccff['randomDire' + 'ction'] = _0xecfeee['sphereRand' + 'omDirectio' + 'n'];
                    break;
                case 0x1:
                    var _0x22875c;
                    _0x5df3ac = _0x22875c = new _0x393f0e(), _0x22875c['radius'] = _0xecfeee['hemiSphere' + 'Radius'], _0x22875c['emitFromSh' + 'ell'] = _0xecfeee['hemiSphere' + 'EmitFromSh' + 'ell'], _0x22875c['randomDire' + 'ction'] = _0xecfeee['hemiSphere' + 'RandomDire' + 'ction'];
                    break;
                case 0x2:
                    var _0x35a502;
                    _0x5df3ac = _0x35a502 = new _0x46e1ac(), _0x35a502['angle'] = _0xecfeee['coneAngle'] * _0x2cfd37, _0x35a502['radius'] = _0xecfeee['coneRadius'], _0x35a502['length'] = _0xecfeee['coneLength'], _0x35a502['emitType'] = _0xecfeee['coneEmitTy' + 'pe'], _0x35a502['randomDire' + 'ction'] = _0xecfeee['coneRandom' + 'Direction'];
                    break;
                case 0x3:
                    var _0x132d93;
                    _0x5df3ac = _0x132d93 = new _0x322897(), _0x132d93['x'] = _0xecfeee['boxX'], _0x132d93['y'] = _0xecfeee['boxY'], _0x132d93['z'] = _0xecfeee['boxZ'], _0x132d93['randomDire' + 'ction'] = _0xecfeee['boxRandomD' + 'irection'];
                    break;
                case 0x7:
                    var _0x123998;
                    _0x5df3ac = _0x123998 = new _0x453392(), _0x123998['radius'] = _0xecfeee['circleRadi' + 'us'], _0x123998['arc'] = _0xecfeee['circleArc'] * _0x2cfd37, _0x123998['emitFromEd' + 'ge'] = _0xecfeee['circleEmit' + 'FromEdge'], _0x123998['randomDire' + 'ction'] = _0xecfeee['circleRand' + 'omDirectio' + 'n'];
                    break;
                default:
                    var _0x4cde8d;
                    _0x5df3ac = _0x4cde8d = new _0x453392(), _0x4cde8d['radius'] = _0xecfeee['circleRadi' + 'us'], _0x4cde8d['arc'] = _0xecfeee['circleArc'] * _0x2cfd37, _0x4cde8d['emitFromEd' + 'ge'] = _0xecfeee['circleEmit' + 'FromEdge'], _0x4cde8d['randomDire' + 'ction'] = _0xecfeee['circleRand' + 'omDirectio' + 'n'];
                }
                _0x5df3ac['enable'] = _0xecfeee['enable'], _0x5459cf['shape'] = _0x5df3ac;
            }
            var _0x260c9a = _0x4d2588['velocityOv' + 'erLifetime'];
            if (_0x260c9a) {
                var _0x3186e2, _0x333962 = _0x260c9a['velocity'];
                switch (_0x333962['type']) {
                case 0x0:
                    var _0x5e3160 = _0x333962['constant'];
                    _0x3186e2 = _0x3f3530['createByCo' + 'nstant'](new _0x4795b3(_0x5e3160[0x0], _0x5e3160[0x1], _0x5e3160[0x2]));
                    break;
                case 0x1:
                    _0x3186e2 = _0x3f3530['createByGr' + 'adient'](this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientX']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientY']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientZ']));
                    break;
                case 0x2:
                    var _0x9b9162 = _0x333962['constantMi' + 'n'], _0x4b8c4b = _0x333962['constantMa' + 'x'];
                    _0x3186e2 = _0x3f3530['createByRa' + 'ndomTwoCon' + 'stant'](new _0x4795b3(_0x9b9162[0x0], _0x9b9162[0x1], _0x9b9162[0x2]), new _0x4795b3(_0x4b8c4b[0x0], _0x4b8c4b[0x1], _0x4b8c4b[0x2]));
                    break;
                case 0x3:
                    _0x3186e2 = _0x3f3530['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientXM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientXM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientYM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientYM' + 'ax']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientZM' + 'in']), this['_initParti' + 'cleVelocit' + 'y'](_0x333962['gradientZM' + 'ax']));
                }
                var _0x4a26f2 = new _0x212687(_0x3186e2);
                _0x4a26f2['space'] = _0x260c9a['space'], _0x4a26f2['enable'] = _0x260c9a['enable'], _0x5459cf['velocityOv' + 'erLifetime'] = _0x4a26f2;
            }
            var _0x53c8b7 = _0x4d2588['colorOverL' + 'ifetime'];
            if (_0x53c8b7) {
                var _0x3bd789, _0x5aa11d = _0x53c8b7['color'];
                switch (_0x5aa11d['type']) {
                case 0x0:
                    var _0x2b298d = _0x5aa11d['constant'];
                    _0x3bd789 = _0x45c823['createByCo' + 'nstant'](new _0x333f41(_0x2b298d[0x0], _0x2b298d[0x1], _0x2b298d[0x2], _0x2b298d[0x3]));
                    break;
                case 0x1:
                    _0x3bd789 = _0x45c823['createByGr' + 'adient'](this['_initParti' + 'cleColor'](_0x5aa11d['gradient']));
                    break;
                case 0x2:
                    var _0x468214 = _0x5aa11d['constantMi' + 'n'], _0x339459 = _0x5aa11d['constantMa' + 'x'];
                    _0x3bd789 = _0x45c823['createByRa' + 'ndomTwoCon' + 'stant'](new _0x333f41(_0x468214[0x0], _0x468214[0x1], _0x468214[0x2], _0x468214[0x3]), new _0x333f41(_0x339459[0x0], _0x339459[0x1], _0x339459[0x2], _0x339459[0x3]));
                    break;
                case 0x3:
                    _0x3bd789 = _0x45c823['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleColor'](_0x5aa11d['gradientMi' + 'n']), this['_initParti' + 'cleColor'](_0x5aa11d['gradientMa' + 'x']));
                }
                var _0x4a82c5 = new _0x809633(_0x3bd789);
                _0x4a82c5['enable'] = _0x53c8b7['enable'], _0x5459cf['colorOverL' + 'ifetime'] = _0x4a82c5;
            }
            var _0x5542fe = _0x4d2588['sizeOverLi' + 'fetime'];
            if (_0x5542fe) {
                var _0x2a7955, _0x339fc7 = _0x5542fe['size'];
                switch (_0x339fc7['type']) {
                case 0x0:
                    _0x2a7955 = _0x339fc7['separateAx' + 'es'] ? _0x3566ff['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleSize'](_0x339fc7['gradientX']), this['_initParti' + 'cleSize'](_0x339fc7['gradientY']), this['_initParti' + 'cleSize'](_0x339fc7['gradientZ'])) : _0x3566ff['createByGr' + 'adient'](this['_initParti' + 'cleSize'](_0x339fc7['gradient']));
                    break;
                case 0x1:
                    if (_0x339fc7['separateAx' + 'es']) {
                        var _0x477942 = _0x339fc7['constantMi' + 'nSeparate'], _0x41b783 = _0x339fc7['constantMa' + 'xSeparate'];
                        _0x2a7955 = _0x3566ff['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](new _0x4795b3(_0x477942[0x0], _0x477942[0x1], _0x477942[0x2]), new _0x4795b3(_0x41b783[0x0], _0x41b783[0x1], _0x41b783[0x2]));
                    } else
                        _0x2a7955 = _0x3566ff['createByRa' + 'ndomTwoCon' + 'stant'](_0x339fc7['constantMi' + 'n'], _0x339fc7['constantMa' + 'x']);
                    break;
                case 0x2:
                    _0x2a7955 = _0x339fc7['separateAx' + 'es'] ? _0x3566ff['createByRa' + 'ndomTwoGra' + 'dientSepar' + 'ate'](this['_initParti' + 'cleSize'](_0x339fc7['gradientXM' + 'in']), this['_initParti' + 'cleSize'](_0x339fc7['gradientYM' + 'in']), this['_initParti' + 'cleSize'](_0x339fc7['gradientZM' + 'in']), this['_initParti' + 'cleSize'](_0x339fc7['gradientXM' + 'ax']), this['_initParti' + 'cleSize'](_0x339fc7['gradientYM' + 'ax']), this['_initParti' + 'cleSize'](_0x339fc7['gradientZM' + 'ax'])) : _0x3566ff['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleSize'](_0x339fc7['gradientMi' + 'n']), this['_initParti' + 'cleSize'](_0x339fc7['gradientMa' + 'x']));
                }
                var _0x19b466 = new _0x25d126(_0x2a7955);
                _0x19b466['enable'] = _0x5542fe['enable'], _0x5459cf['sizeOverLi' + 'fetime'] = _0x19b466;
            }
            var _0x1b2f84 = _0x4d2588['rotationOv' + 'erLifetime'];
            if (_0x1b2f84) {
                var _0x4b38e5, _0x123bbd = _0x1b2f84['angularVel' + 'ocity'];
                switch (_0x123bbd['type']) {
                case 0x0:
                    if (_0x123bbd['separateAx' + 'es']) {
                        var _0x919cd3 = _0x123bbd['constantSe' + 'parate'];
                        _0x4b38e5 = _0x8e6cf8['createByCo' + 'nstantSepa' + 'rate'](new _0x4795b3(_0x919cd3[0x0] * _0x2cfd37, _0x919cd3[0x1] * _0x2cfd37, _0x919cd3[0x2] * _0x2cfd37));
                    } else
                        _0x4b38e5 = _0x8e6cf8['createByCo' + 'nstant'](_0x123bbd['constant'] * _0x2cfd37);
                    break;
                case 0x1:
                    _0x4b38e5 = _0x123bbd['separateAx' + 'es'] ? _0x8e6cf8['createByGr' + 'adientSepa' + 'rate'](this['_initParti' + 'cleRotatio' + 'n'](_0x123bbd['gradientX']), this['_initParti' + 'cleRotatio' + 'n'](_0x123bbd['gradientY']), this['_initParti' + 'cleRotatio' + 'n'](_0x123bbd['gradientZ'])) : _0x8e6cf8['createByGr' + 'adient'](this['_initParti' + 'cleRotatio' + 'n'](_0x123bbd['gradient']));
                    break;
                case 0x2:
                    if (_0x123bbd['separateAx' + 'es']) {
                        var _0x287cc4 = _0x123bbd['constantMi' + 'nSeparate'], _0x2456ce = _0x123bbd['constantMa' + 'xSeparate'];
                        _0x4b38e5 = _0x8e6cf8['createByRa' + 'ndomTwoCon' + 'stantSepar' + 'ate'](new _0x4795b3(_0x287cc4[0x0] * _0x2cfd37, _0x287cc4[0x1] * _0x2cfd37, _0x287cc4[0x2] * _0x2cfd37), new _0x4795b3(_0x2456ce[0x0] * _0x2cfd37, _0x2456ce[0x1] * _0x2cfd37, _0x2456ce[0x2] * _0x2cfd37));
                    } else
                        _0x4b38e5 = _0x8e6cf8['createByRa' + 'ndomTwoCon' + 'stant'](_0x123bbd['constantMi' + 'n'] * _0x2cfd37, _0x123bbd['constantMa' + 'x'] * _0x2cfd37);
                    break;
                case 0x3:
                    _0x123bbd['separateAx' + 'es'] || (_0x4b38e5 = _0x8e6cf8['createByRa' + 'ndomTwoGra' + 'dient'](this['_initParti' + 'cleRotatio' + 'n'](_0x123bbd['gradientMi' + 'n']), this['_initParti' + 'cleRotatio' + 'n'](_0x123bbd['gradientMa' + 'x'])));
                }
                var _0x1e4657 = new _0x42963c(_0x4b38e5);
                _0x1e4657['enable'] = _0x1b2f84['enable'], _0x5459cf['rotationOv' + 'erLifetime'] = _0x1e4657;
            }
            var _0x543de3 = _0x4d2588['textureShe' + 'etAnimatio' + 'n'];
            if (_0x543de3) {
                var _0x3807fe, _0x2dc581 = _0x543de3['frame'];
                switch (_0x2dc581['type']) {
                case 0x0:
                    _0x3807fe = _0x5c4f1e['createByCo' + 'nstant'](_0x2dc581['constant']);
                    break;
                case 0x1:
                    _0x3807fe = _0x5c4f1e['createByOv' + 'erTime'](this['_initParti' + 'cleFrame'](_0x2dc581['overTime']));
                    break;
                case 0x2:
                    _0x3807fe = _0x5c4f1e['createByRa' + 'ndomTwoCon' + 'stant'](_0x2dc581['constantMi' + 'n'], _0x2dc581['constantMa' + 'x']);
                    break;
                case 0x3:
                    _0x3807fe = _0x5c4f1e['createByRa' + 'ndomTwoOve' + 'rTime'](this['_initParti' + 'cleFrame'](_0x2dc581['overTimeMi' + 'n']), this['_initParti' + 'cleFrame'](_0x2dc581['overTimeMa' + 'x']));
                }
                var _0x44b542, _0xa9f320 = _0x543de3['startFrame'];
                switch (_0xa9f320['type']) {
                case 0x0:
                    _0x44b542 = _0x2c01a3['createByCo' + 'nstant'](_0xa9f320['constant']);
                    break;
                case 0x1:
                    _0x44b542 = _0x2c01a3['createByRa' + 'ndomTwoCon' + 'stant'](_0xa9f320['constantMi' + 'n'], _0xa9f320['constantMa' + 'x']);
                }
                var _0x25c4a6 = new _0x4da8a7(_0x3807fe, _0x44b542);
                _0x25c4a6['enable'] = _0x543de3['enable'];
                var _0x4a2100 = _0x543de3['tiles'];
                _0x25c4a6['tiles'] = new _0x4c44b6(_0x4a2100[0x0], _0x4a2100[0x1]), _0x25c4a6['type'] = _0x543de3['type'], _0x25c4a6['randomRow'] = _0x543de3['randomRow'];
                var _0x49f281 = _0x543de3['rowIndex'];
                void 0x0 !== _0x49f281 && (_0x25c4a6['rowIndex'] = _0x49f281), _0x25c4a6['cycles'] = _0x543de3['cycles'], _0x5459cf['textureShe' + 'etAnimatio' + 'n'] = _0x25c4a6;
            }
        }
        ['_initParti' + 'cleColor'](_0x33ddcf) {
            var _0x1a4b1e = new _0x20a4d3(0x4, 0x4);
            if (_0x33ddcf) {
                var _0x319a79, _0x5f025d, _0x133135 = _0x33ddcf['alphas'];
                if (_0x133135)
                    for (_0x319a79 = 0x0, _0x5f025d = _0x133135['length']; _0x319a79 < _0x5f025d; _0x319a79++) {
                        0x3 == _0x319a79 && _0x5f025d > 0x4 && (_0x319a79 = _0x5f025d - 0x1, console['warn']('GradientDa' + 'taColor\x20wa' + 'rning:alph' + 'a\x20data\x20len' + 'gth\x20is\x20lar' + 'ge\x20than\x204,' + '\x20will\x20igno' + 're\x20the\x20mid' + 'dle\x20data.'));
                        var _0x3c3c56 = _0x133135[_0x319a79];
                        _0x1a4b1e['addColorAl' + 'pha'](_0x3c3c56['key'], _0x3c3c56['value']);
                    }
                else
                    _0x1a4b1e['addColorAl' + 'pha'](0x0, 0x1), _0x1a4b1e['addColorAl' + 'pha'](0x1, 0x1);
                var _0x3a6fe8 = _0x33ddcf['rgbs'];
                if (_0x3a6fe8)
                    for (_0x319a79 = 0x0, _0x5f025d = _0x3a6fe8['length']; _0x319a79 < _0x5f025d; _0x319a79++) {
                        0x3 == _0x319a79 && _0x5f025d > 0x4 && (_0x319a79 = _0x5f025d - 0x1, console['warn']('GradientDa' + 'taColor\x20wa' + 'rning:rgb\x20' + 'data\x20lengt' + 'h\x20is\x20large' + '\x20than\x204,\x20w' + 'ill\x20ignore' + '\x20the\x20middl' + 'e\x20data.'));
                        var _0x8bb6db = _0x3a6fe8[_0x319a79], _0x2bfd69 = _0x8bb6db['value'];
                        _0x1a4b1e['addColorRG' + 'B'](_0x8bb6db['key'], new _0x210bda(_0x2bfd69[0x0], _0x2bfd69[0x1], _0x2bfd69[0x2], 0x1));
                    }
                else
                    _0x1a4b1e['addColorRG' + 'B'](0x0, new _0x210bda(0x1, 0x1, 0x1, 0x1)), _0x1a4b1e['addColorRG' + 'B'](0x1, new _0x210bda(0x1, 0x1, 0x1, 0x1));
            } else
                _0x1a4b1e['addColorAl' + 'pha'](0x0, 0x1), _0x1a4b1e['addColorAl' + 'pha'](0x1, 0x1), _0x1a4b1e['addColorRG' + 'B'](0x0, new _0x210bda(0x1, 0x1, 0x1, 0x1)), _0x1a4b1e['addColorRG' + 'B'](0x1, new _0x210bda(0x1, 0x1, 0x1, 0x1));
            return _0x1a4b1e;
        }
        ['_initParti' + 'cleFrame'](_0xb14f8d) {
            var _0x275866 = new _0x3e98e2();
            if (_0xb14f8d)
                for (var _0x5ed2cf = _0xb14f8d['frames'], _0x3ea5bb = 0x0, _0x31a33d = _0x5ed2cf['length']; _0x3ea5bb < _0x31a33d; _0x3ea5bb++) {
                    var _0x7e7ebb = _0x5ed2cf[_0x3ea5bb];
                    _0x275866['add'](_0x7e7ebb['key'], _0x7e7ebb['value']);
                }
            else
                _0x275866['add'](0x0, 0x0), _0x275866['add'](0x1, 0x1);
            return _0x275866;
        }
        static ['_initStart' + 'Life'](_0x520800) {
            for (var _0x3f26f6 = new _0x2e288d(), _0x1be6c1 = _0x520800['startLifet' + 'imes'], _0x274b58 = 0x0, _0x2529cb = _0x1be6c1['length']; _0x274b58 < _0x2529cb; _0x274b58++) {
                var _0x18ab12 = _0x1be6c1[_0x274b58];
                _0x3f26f6['add'](_0x18ab12['key'], _0x18ab12['value']);
            }
            return _0x3f26f6;
        }
        ['_initParti' + 'cleVelocit' + 'y'](_0x3bed42) {
            for (var _0x26acbe = new _0x2e288d(), _0x4b256b = _0x3bed42['velocitys'], _0x5602a2 = 0x0, _0x387da9 = _0x4b256b['length']; _0x5602a2 < _0x387da9; _0x5602a2++) {
                var _0xeb9f93 = _0x4b256b[_0x5602a2];
                _0x26acbe['add'](_0xeb9f93['key'], _0xeb9f93['value']);
            }
            return _0x26acbe;
        }
        ['_initParti' + 'cleSize'](_0x525206) {
            var _0x1f49f7 = new _0x2e288d();
            if (_0x525206)
                for (var _0xc6c9f3 = _0x525206['sizes'], _0x12e39e = 0x0, _0x4a9b04 = _0xc6c9f3['length']; _0x12e39e < _0x4a9b04; _0x12e39e++) {
                    var _0x15a673 = _0xc6c9f3[_0x12e39e];
                    _0x1f49f7['add'](_0x15a673['key'], _0x15a673['value']);
                }
            else
                _0x1f49f7['add'](0x0, 0x0), _0x1f49f7['add'](0x1, 0x1);
            return _0x1f49f7;
        }
        ['_initParti' + 'cleRotatio' + 'n'](_0x402eb0) {
            for (var _0x4388b1 = new _0x2e288d(), _0x47ad4e = _0x402eb0['angularVel' + 'ocitys'], _0x46e1e5 = 0x0, _0x2593cd = _0x47ad4e['length']; _0x46e1e5 < _0x2593cd; _0x46e1e5++) {
                var _0x1f4b8f = _0x47ad4e[_0x46e1e5];
                _0x4388b1['add'](_0x1f4b8f['key'], _0x1f4b8f['value'] / 0xb4 * Math['PI']);
            }
            return _0x4388b1;
        }
    }
    class _0x47a01b extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('LineShader'), this['_shaderVal' + 'ues']['setVector'](_0x47a01b['COLOR'], new _0x333f41(0x1, 0x1, 0x1, 0x1));
        }
        static ['__initDefi' + 'ne__']() {
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x47a01b['COLOR']);
        }
        set ['color'](_0x29ce89) {
            this['_shaderVal' + 'ues']['setVector'](_0x47a01b['COLOR'], _0x29ce89);
        }
        set ['depthWrite'](_0x4d0b79) {
            this['_shaderVal' + 'ues']['setBool'](_0x47a01b['DEPTH_WRIT' + 'E'], _0x4d0b79);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x47a01b['DEPTH_WRIT' + 'E']);
        }
        set ['cull'](_0x4adf35) {
            this['_shaderVal' + 'ues']['setInt'](_0x47a01b['CULL'], _0x4adf35);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x47a01b['CULL']);
        }
        set ['blend'](_0x418fbb) {
            this['_shaderVal' + 'ues']['setInt'](_0x47a01b['BLEND'], _0x418fbb);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x47a01b['BLEND']);
        }
        set ['blendSrc'](_0x26339d) {
            this['_shaderVal' + 'ues']['setInt'](_0x47a01b['BLEND_SRC'], _0x26339d);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x47a01b['BLEND_SRC']);
        }
        set ['blendDst'](_0x57bdb6) {
            this['_shaderVal' + 'ues']['setInt'](_0x47a01b['BLEND_DST'], _0x57bdb6);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x47a01b['BLEND_DST']);
        }
        set ['depthTest'](_0xb179b4) {
            this['_shaderVal' + 'ues']['setInt'](_0x47a01b['DEPTH_TEST'], _0xb179b4);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x47a01b['DEPTH_TEST']);
        }
        ['clone']() {
            var _0x558177 = new _0x47a01b();
            return this['cloneTo'](_0x558177), _0x558177;
        }
    }
    _0x47a01b['COLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Color'), _0x47a01b['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x47a01b['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x47a01b['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x47a01b['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x47a01b['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x47a01b['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x3243fd {
        static get ['vertexDecl' + 'aration']() {
            return _0x3243fd['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x3243fd['_vertexDec' + 'laration'] = new _0x3c5011(0x1c, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector3'], _0xe3d46['MESH_POSIT' + 'ION0']),
                new _0x5c79c8(0xc, _0x43e6c5['Vector4'], _0xe3d46['MESH_COLOR' + '0'])
            ]);
        }
        get ['vertexDecl' + 'aration']() {
            return _0x3243fd['_vertexDec' + 'laration'];
        }
        constructor() {
        }
    }
    class _0x4617c4 extends _0x16b19d {
        constructor() {
            super();
        }
        ['add'](_0x522977) {
            if (-0x1 !== _0x522977['_getIndexI' + 'nList']())
                throw 'SimpleSing' + 'letonList:' + _0x522977 + ('\x20has\x20\x20in\x20\x20' + 'SingletonL' + 'ist.');
            this['_add'](_0x522977), _0x522977['_setIndexI' + 'nList'](this['length']++);
        }
        ['remove'](_0x15a037) {
            var _0x3237ce = _0x15a037['_getIndexI' + 'nList']();
            if (this['length']--, _0x3237ce !== this['length']) {
                var _0xabc305 = this['elements'][this['length']];
                this['elements'][_0x3237ce] = _0xabc305, _0xabc305['_setIndexI' + 'nList'](_0x3237ce);
            }
            _0x15a037['_setIndexI' + 'nList'](-0x1);
        }
        ['clear']() {
            for (var _0x472aa6, _0x55a951 = this['elements'], _0x504b02 = this['length']; _0x472aa6 < _0x504b02; _0x472aa6++)
                _0x55a951[_0x472aa6]['_setIndexI' + 'nList'](-0x1);
            this['length'] = 0x0;
        }
    }
    class _0xba35fc {
        constructor() {
            this['_pressedSp' + 'rite'] = null, this['_pressedLo' + 'opCount'] = -0x1, this['sprite'] = null, this['mousePosit' + 'ionX'] = 0x0, this['mousePosit' + 'ionY'] = 0x0;
        }
    }
    class _0x46c15e {
        constructor() {
            this['_indexInLi' + 'st'] = -0x1, this['_identifie' + 'r'] = -0x1, this['_position'] = new _0x4c44b6();
        }
        get ['identifier']() {
            return this['_identifie' + 'r'];
        }
        get ['position']() {
            return this['_position'];
        }
        ['_getIndexI' + 'nList']() {
            return this['_indexInLi' + 'st'];
        }
        ['_setIndexI' + 'nList'](_0x290163) {
            this['_indexInLi' + 'st'] = _0x290163;
        }
    }
    class _0x1431fa {
        constructor() {
            this['succeeded'] = !0x1, this['collider'] = null, this['point'] = new _0x4795b3(), this['normal'] = new _0x4795b3(), this['hitFractio' + 'n'] = 0x0;
        }
    }
    class _0x3c2883 extends _0x16b19d {
        constructor() {
            super();
        }
        ['add'](_0xc358a9) {
            if (-0x1 !== _0xc358a9['_inPhysicU' + 'pdateListI' + 'ndex'])
                throw 'PhysicsUpd' + 'ateList:el' + 'ement\x20has\x20' + '\x20in\x20\x20Physi' + 'csUpdateLi' + 'st.';
            this['_add'](_0xc358a9), _0xc358a9['_inPhysicU' + 'pdateListI' + 'ndex'] = this['length']++;
        }
        ['remove'](_0x502b1a) {
            var _0x49a5d3 = _0x502b1a['_inPhysicU' + 'pdateListI' + 'ndex'];
            if (this['length']--, _0x49a5d3 !== this['length']) {
                var _0x11cb52 = this['elements'][this['length']];
                this['elements'][_0x49a5d3] = _0x11cb52, _0x11cb52['_inPhysicU' + 'pdateListI' + 'ndex'] = _0x49a5d3;
            }
            _0x502b1a['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1;
        }
    }
    class _0x3d86de {
        constructor() {
            this['_idCounter'] = 0x0, this['colliderA'] = null, this['colliderB'] = null, this['distance'] = 0x0, this['normal'] = new _0x4795b3(), this['positionOn' + 'A'] = new _0x4795b3(), this['positionOn' + 'B'] = new _0x4795b3(), this['_id'] = ++this['_idCounter'];
        }
    }
    class _0x5e39b2 {
        constructor() {
            this['_lastUpdat' + 'eFrame'] = -0x80000000, this['_updateFra' + 'me'] = -0x80000000, this['_isTrigger'] = !0x1, this['contacts'] = [];
        }
        ['_setUpdate' + 'Frame'](_0x3a912c) {
            this['_lastUpdat' + 'eFrame'] = this['_updateFra' + 'me'], this['_updateFra' + 'me'] = _0x3a912c;
        }
    }
    class _0x1d890b {
        constructor() {
            this['_hitResult' + 'sPoolIndex'] = 0x0, this['_hitResult' + 'sPool'] = [], this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0, this['_contactPo' + 'intsPool'] = [], this['_collision' + 'sPool'] = [], this['_collision' + 's'] = {};
        }
        ['getHitResu' + 'lt']() {
            var _0x148262 = this['_hitResult' + 'sPool'][this['_hitResult' + 'sPoolIndex']++];
            return _0x148262 || (_0x148262 = new _0x1431fa(), this['_hitResult' + 'sPool']['push'](_0x148262)), _0x148262;
        }
        ['recoverAll' + 'HitResults' + 'Pool']() {
            this['_hitResult' + 'sPoolIndex'] = 0x0;
        }
        ['getContact' + 'Points']() {
            var _0x371771 = this['_contactPo' + 'intsPool'][this['_contactPo' + 'nintsPoolI' + 'ndex']++];
            return _0x371771 || (_0x371771 = new _0x3d86de(), this['_contactPo' + 'intsPool']['push'](_0x371771)), _0x371771;
        }
        ['recoverAll' + 'ContactPoi' + 'ntsPool']() {
            this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0;
        }
        ['getCollisi' + 'on'](_0x564214, _0x988a76) {
            var _0x262da4, _0x5b1efd = _0x564214['id'], _0x16476a = _0x988a76['id'], _0x5da1d7 = this['_collision' + 's'][_0x5b1efd];
            return _0x5da1d7 && (_0x262da4 = _0x5da1d7[_0x16476a]), _0x262da4 || (_0x5da1d7 || (_0x5da1d7 = {}, this['_collision' + 's'][_0x5b1efd] = _0x5da1d7), (_0x262da4 = 0x0 === this['_collision' + 'sPool']['length'] ? new _0x5e39b2() : this['_collision' + 'sPool']['pop']())['_colliderA'] = _0x564214, _0x262da4['_colliderB'] = _0x988a76, _0x5da1d7[_0x16476a] = _0x262da4), _0x262da4;
        }
        ['recoverCol' + 'lision'](_0x19215c) {
            var _0xde0072 = _0x19215c['_colliderA']['id'], _0x56299a = _0x19215c['_colliderB']['id'];
            this['_collision' + 's'][_0xde0072][_0x56299a] = null, this['_collision' + 'sPool']['push'](_0x19215c);
        }
        ['garbageCol' + 'lection']() {
            for (var _0x1c368d in (this['_hitResult' + 'sPoolIndex'] = 0x0, this['_hitResult' + 'sPool']['length'] = 0x0, this['_contactPo' + 'nintsPoolI' + 'ndex'] = 0x0, this['_contactPo' + 'intsPool']['length'] = 0x0, this['_collision' + 'sPool']['length'] = 0x0, this['_collision' + 'sPool'])) {
                var _0x134c61 = this['_collision' + 'sPool'][_0x1c368d], _0x4a49ca = !0x0;
                for (var _0x44eabd in _0x134c61)
                    _0x134c61[_0x44eabd] ? _0x4a49ca = !0x1 : delete _0x134c61[_0x44eabd];
                _0x4a49ca && delete this['_collision' + 'sPool'][_0x1c368d];
            }
        }
    }
    class _0x5cfc15 {
        constructor() {
            this['_scale'] = new _0x4795b3(0x1, 0x1, 0x1), this['_centerMat' + 'rix'] = new _0x16c2be(), this['_attatched'] = !0x1, this['_indexInCo' + 'mpound'] = -0x1, this['_compoundP' + 'arent'] = null, this['_attatched' + 'CollisionO' + 'bject'] = null, this['_reference' + 'Count'] = 0x0, this['_localOffs' + 'et'] = new _0x4795b3(0x0, 0x0, 0x0), this['_localRota' + 'tion'] = new _0x5958af(0x0, 0x0, 0x0, 0x1), this['needsCusto' + 'mCollision' + 'Callback'] = !0x1;
        }
        static ['__init__']() {
            var _0xfb37a6 = _0x10fe89['_bullet'];
            _0x5cfc15['_btScale'] = _0xfb37a6['btVector3_' + 'create'](0x1, 0x1, 0x1), _0x5cfc15['_btVector3' + '0'] = _0xfb37a6['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x5cfc15['_btQuatern' + 'ion0'] = _0xfb37a6['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0x5cfc15['_btTransfo' + 'rm0'] = _0xfb37a6['btTransfor' + 'm_create']();
        }
        static ['_createAff' + 'ineTransfo' + 'rmation'](_0x4417ec, _0x49ac72, _0x5817e2) {
            var _0x58e82d = _0x49ac72['x'], _0x324775 = _0x49ac72['y'], _0x41aa25 = _0x49ac72['z'], _0x3dcddb = _0x49ac72['w'], _0x1f324b = _0x58e82d + _0x58e82d, _0x369922 = _0x324775 + _0x324775, _0x3a0e14 = _0x41aa25 + _0x41aa25, _0x1183cf = _0x58e82d * _0x1f324b, _0x1ec522 = _0x58e82d * _0x369922, _0x168d51 = _0x58e82d * _0x3a0e14, _0x28d0f5 = _0x324775 * _0x369922, _0x1157db = _0x324775 * _0x3a0e14, _0x43f0dd = _0x41aa25 * _0x3a0e14, _0x3423cd = _0x3dcddb * _0x1f324b, _0x1b4910 = _0x3dcddb * _0x369922, _0x458fbc = _0x3dcddb * _0x3a0e14;
            _0x5817e2[0x0] = 0x1 - (_0x28d0f5 + _0x43f0dd), _0x5817e2[0x1] = _0x1ec522 + _0x458fbc, _0x5817e2[0x2] = _0x168d51 - _0x1b4910, _0x5817e2[0x3] = 0x0, _0x5817e2[0x4] = _0x1ec522 - _0x458fbc, _0x5817e2[0x5] = 0x1 - (_0x1183cf + _0x43f0dd), _0x5817e2[0x6] = _0x1157db + _0x3423cd, _0x5817e2[0x7] = 0x0, _0x5817e2[0x8] = _0x168d51 + _0x1b4910, _0x5817e2[0x9] = _0x1157db - _0x3423cd, _0x5817e2[0xa] = 0x1 - (_0x1183cf + _0x28d0f5), _0x5817e2[0xb] = 0x0, _0x5817e2[0xc] = _0x4417ec['x'], _0x5817e2[0xd] = _0x4417ec['y'], _0x5817e2[0xe] = _0x4417ec['z'], _0x5817e2[0xf] = 0x1;
        }
        get ['type']() {
            return this['_type'];
        }
        get ['localOffse' + 't']() {
            return this['_localOffs' + 'et'];
        }
        set ['localOffse' + 't'](_0xe37ea9) {
            this['_localOffs' + 'et'] = _0xe37ea9, this['_compoundP' + 'arent'] && this['_compoundP' + 'arent']['_updateChi' + 'ldTransfor' + 'm'](this);
        }
        get ['localRotat' + 'ion']() {
            return this['_localRota' + 'tion'];
        }
        set ['localRotat' + 'ion'](_0x422f1a) {
            this['_localRota' + 'tion'] = _0x422f1a, this['_compoundP' + 'arent'] && this['_compoundP' + 'arent']['_updateChi' + 'ldTransfor' + 'm'](this);
        }
        ['_setScale'](_0x4b2db8) {
            if (this['_compoundP' + 'arent'])
                this['updateLoca' + 'lTransform' + 'ations']();
            else {
                var _0x56d86e = _0x10fe89['_bullet'];
                _0x56d86e['btVector3_' + 'setValue'](_0x5cfc15['_btScale'], _0x4b2db8['x'], _0x4b2db8['y'], _0x4b2db8['z']), _0x56d86e['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x5cfc15['_btScale']);
            }
        }
        ['_addRefere' + 'nce']() {
            this['_reference' + 'Count']++;
        }
        ['_removeRef' + 'erence']() {
            this['_reference' + 'Count']--;
        }
        ['updateLoca' + 'lTransform' + 'ations']() {
            if (this['_compoundP' + 'arent']) {
                var _0x3f1172 = _0x5cfc15['_tempVecto' + 'r30'];
                _0x4795b3['multiply'](this['localOffse' + 't'], this['_scale'], _0x3f1172), _0x5cfc15['_createAff' + 'ineTransfo' + 'rmation'](_0x3f1172, this['localRotat' + 'ion'], this['_centerMat' + 'rix']['elements']);
            } else
                _0x5cfc15['_createAff' + 'ineTransfo' + 'rmation'](this['localOffse' + 't'], this['localRotat' + 'ion'], this['_centerMat' + 'rix']['elements']);
        }
        ['cloneTo'](_0x53bb97) {
            var _0x4005e1 = _0x53bb97;
            this['_localOffs' + 'et']['cloneTo'](_0x4005e1['localOffse' + 't']), this['_localRota' + 'tion']['cloneTo'](_0x4005e1['localRotat' + 'ion']), _0x4005e1['localOffse' + 't'] = _0x4005e1['localOffse' + 't'], _0x4005e1['localRotat' + 'ion'] = _0x4005e1['localRotat' + 'ion'];
        }
        ['clone']() {
            return null;
        }
        ['destroy']() {
            this['_btShape'] && (_0x10fe89['_bullet']['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), this['_btShape'] = null);
        }
    }
    _0x5cfc15['SHAPEORIEN' + 'TATION_UPX'] = 0x0, _0x5cfc15['SHAPEORIEN' + 'TATION_UPY'] = 0x1, _0x5cfc15['SHAPEORIEN' + 'TATION_UPZ'] = 0x2, _0x5cfc15['SHAPETYPES' + '_BOX'] = 0x0, _0x5cfc15['SHAPETYPES' + '_SPHERE'] = 0x1, _0x5cfc15['SHAPETYPES' + '_CYLINDER'] = 0x2, _0x5cfc15['SHAPETYPES' + '_CAPSULE'] = 0x3, _0x5cfc15['SHAPETYPES' + '_CONVEXHUL' + 'L'] = 0x4, _0x5cfc15['SHAPETYPES' + '_COMPOUND'] = 0x5, _0x5cfc15['SHAPETYPES' + '_STATICPLA' + 'NE'] = 0x6, _0x5cfc15['SHAPETYPES' + '_CONE'] = 0x7, _0x5cfc15['_tempVecto' + 'r30'] = new _0x4795b3();
    class _0x4b248c extends _0x5cfc15 {
        static ['__init__']() {
            _0x4b248c['_btSize'] = _0x10fe89['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['sizeX']() {
            return this['_sizeX'];
        }
        get ['sizeY']() {
            return this['_sizeY'];
        }
        get ['sizeZ']() {
            return this['_sizeZ'];
        }
        constructor(_0x281af4 = 0x1, _0x1c17fd = 0x1, _0x34d3ce = 0x1) {
            super(), this['_sizeX'] = _0x281af4, this['_sizeY'] = _0x1c17fd, this['_sizeZ'] = _0x34d3ce, this['_type'] = _0x5cfc15['SHAPETYPES' + '_BOX'];
            var _0x3d47dd = _0x10fe89['_bullet'];
            _0x3d47dd['btVector3_' + 'setValue'](_0x4b248c['_btSize'], _0x281af4 / 0x2, _0x1c17fd / 0x2, _0x34d3ce / 0x2), this['_btShape'] = _0x3d47dd['btBoxShape' + '_create'](_0x4b248c['_btSize']);
        }
        ['clone']() {
            var _0x201fbf = new _0x4b248c(this['_sizeX'], this['_sizeY'], this['_sizeZ']);
            return this['cloneTo'](_0x201fbf), _0x201fbf;
        }
    }
    class _0x9d0b1 extends _0x5cfc15 {
        constructor(_0x5dc5a4 = 0.5, _0x5a6fe6 = 1.25, _0x168cac = _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = _0x5dc5a4, this['_length'] = _0x5a6fe6, this['_orientati' + 'on'] = _0x168cac, this['_type'] = _0x5cfc15['SHAPETYPES' + '_CAPSULE'];
            var _0x32b6f5 = _0x10fe89['_bullet'];
            switch (_0x168cac) {
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPX']:
                this['_btShape'] = _0x32b6f5['btCapsuleS' + 'hapeX_crea' + 'te'](_0x5dc5a4, _0x5a6fe6 - 0x2 * _0x5dc5a4);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']:
                this['_btShape'] = _0x32b6f5['btCapsuleS' + 'hape_creat' + 'e'](_0x5dc5a4, _0x5a6fe6 - 0x2 * _0x5dc5a4);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPZ']:
                this['_btShape'] = _0x32b6f5['btCapsuleS' + 'hapeZ_crea' + 'te'](_0x5dc5a4, _0x5a6fe6 - 0x2 * _0x5dc5a4);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['length']() {
            return this['_length'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['_setScale'](_0x2eca40) {
            var _0x5e8a00 = _0x9d0b1['_tempVecto' + 'r30'];
            switch (this['orientatio' + 'n']) {
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPX']:
                _0x5e8a00['x'] = _0x2eca40['x'], _0x5e8a00['y'] = _0x5e8a00['z'] = Math['max'](_0x2eca40['y'], _0x2eca40['z']);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']:
                _0x5e8a00['y'] = _0x2eca40['y'], _0x5e8a00['x'] = _0x5e8a00['z'] = Math['max'](_0x2eca40['x'], _0x2eca40['z']);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPZ']:
                _0x5e8a00['z'] = _0x2eca40['z'], _0x5e8a00['x'] = _0x5e8a00['y'] = Math['max'](_0x2eca40['x'], _0x2eca40['y']);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
            super['_setScale'](_0x5e8a00);
        }
        ['clone']() {
            var _0x36139f = new _0x9d0b1(this['_radius'], this['_length'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x36139f), _0x36139f;
        }
    }
    _0x9d0b1['_tempVecto' + 'r30'] = new _0x4795b3();
    class _0x4180f5 extends _0x5cfc15 {
        constructor() {
            super(), this['_childColl' + 'iderShapes'] = [], this['_type'] = _0x5cfc15['SHAPETYPES' + '_COMPOUND'], this['_btShape'] = _0x10fe89['_bullet']['btCompound' + 'Shape_crea' + 'te']();
        }
        static ['__init__']() {
            var _0x2d4e64 = _0x10fe89['_bullet'];
            _0x4180f5['_btVector3' + 'One'] = _0x2d4e64['btVector3_' + 'create'](0x1, 0x1, 0x1), _0x4180f5['_btTransfo' + 'rm'] = _0x2d4e64['btTransfor' + 'm_create'](), _0x4180f5['_btOffset'] = _0x2d4e64['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x4180f5['_btRotatio' + 'n'] = _0x2d4e64['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1);
        }
        ['_clearChil' + 'dShape'](_0x440fc6) {
            _0x440fc6['_attatched'] = !0x1, _0x440fc6['_compoundP' + 'arent'] = null, _0x440fc6['_indexInCo' + 'mpound'] = -0x1;
        }
        ['_addRefere' + 'nce']() {
        }
        ['_removeRef' + 'erence']() {
        }
        ['_updateChi' + 'ldTransfor' + 'm'](_0x1efc33) {
            var _0x35890f = _0x10fe89['_bullet'], _0x44c614 = _0x1efc33['localOffse' + 't'], _0x12643a = _0x1efc33['localRotat' + 'ion'], _0x1448aa = _0x5cfc15['_btVector3' + '0'], _0x2fb061 = _0x5cfc15['_btQuatern' + 'ion0'], _0x3e9424 = _0x5cfc15['_btTransfo' + 'rm0'];
            _0x35890f['btVector3_' + 'setValue'](_0x1448aa, -_0x44c614['x'], _0x44c614['y'], _0x44c614['z']), _0x35890f['btQuaterni' + 'on_setValu' + 'e'](_0x2fb061, -_0x12643a['x'], _0x12643a['y'], _0x12643a['z'], -_0x12643a['w']), _0x35890f['btTransfor' + 'm_setOrigi' + 'n'](_0x3e9424, _0x1448aa), _0x35890f['btTransfor' + 'm_setRotat' + 'ion'](_0x3e9424, _0x2fb061), _0x35890f['btCompound' + 'Shape_upda' + 'teChildTra' + 'nsform'](this['_btShape'], _0x1efc33['_indexInCo' + 'mpound'], _0x3e9424, !0x0);
        }
        ['addChildSh' + 'ape'](_0x3bc31c) {
            if (_0x3bc31c['_attatched'])
                throw 'CompoundCo' + 'lliderShap' + 'e:\x20this\x20sh' + 'ape\x20has\x20at' + 'tatched\x20to' + '\x20other\x20ent' + 'ity.';
            _0x3bc31c['_attatched'] = !0x0, _0x3bc31c['_compoundP' + 'arent'] = this, _0x3bc31c['_indexInCo' + 'mpound'] = this['_childColl' + 'iderShapes']['length'], this['_childColl' + 'iderShapes']['push'](_0x3bc31c);
            var _0x11f07e = _0x3bc31c['localOffse' + 't'], _0x5c1df6 = _0x3bc31c['localRotat' + 'ion'], _0x5c5bfc = _0x10fe89['_bullet'];
            _0x5c5bfc['btVector3_' + 'setValue'](_0x4180f5['_btOffset'], -_0x11f07e['x'], _0x11f07e['y'], _0x11f07e['z']), _0x5c5bfc['btQuaterni' + 'on_setValu' + 'e'](_0x4180f5['_btRotatio' + 'n'], -_0x5c1df6['x'], _0x5c1df6['y'], _0x5c1df6['z'], -_0x5c1df6['w']), _0x5c5bfc['btTransfor' + 'm_setOrigi' + 'n'](_0x4180f5['_btTransfo' + 'rm'], _0x4180f5['_btOffset']), _0x5c5bfc['btTransfor' + 'm_setRotat' + 'ion'](_0x4180f5['_btTransfo' + 'rm'], _0x4180f5['_btRotatio' + 'n']);
            var _0x5574b5 = _0x5c5bfc['btCollisio' + 'nShape_get' + 'LocalScali' + 'ng'](this['_btShape']);
            _0x5c5bfc['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x4180f5['_btVector3' + 'One']), _0x5c5bfc['btCompound' + 'Shape_addC' + 'hildShape'](this['_btShape'], _0x4180f5['_btTransfo' + 'rm'], _0x3bc31c['_btShape']), _0x5c5bfc['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x5574b5), this['_attatched' + 'CollisionO' + 'bject'] && (this['_attatched' + 'CollisionO' + 'bject']['colliderSh' + 'ape'] = this);
        }
        ['removeChil' + 'dShape'](_0x5ce092) {
            if (_0x5ce092['_compoundP' + 'arent'] === this) {
                var _0x302272 = _0x5ce092['_indexInCo' + 'mpound'];
                this['_clearChil' + 'dShape'](_0x5ce092);
                var _0x423b9b = this['_childColl' + 'iderShapes'][this['_childColl' + 'iderShapes']['length'] - 0x1];
                _0x423b9b['_indexInCo' + 'mpound'] = _0x302272, this['_childColl' + 'iderShapes'][_0x302272] = _0x423b9b, this['_childColl' + 'iderShapes']['pop'](), _0x10fe89['_bullet']['btCompound' + 'Shape_remo' + 'veChildSha' + 'peByIndex'](this['_btShape'], _0x302272);
            }
        }
        ['clearChild' + 'Shape']() {
            for (var _0x8c23d6 = 0x0, _0x33f0db = this['_childColl' + 'iderShapes']['length']; _0x8c23d6 < _0x33f0db; _0x8c23d6++)
                this['_clearChil' + 'dShape'](this['_childColl' + 'iderShapes'][_0x8c23d6]), _0x10fe89['_bullet']['btCompound' + 'Shape_remo' + 'veChildSha' + 'peByIndex'](this['_btShape'], 0x0);
            this['_childColl' + 'iderShapes']['length'] = 0x0;
        }
        ['getChildSh' + 'apeCount']() {
            return this['_childColl' + 'iderShapes']['length'];
        }
        ['cloneTo'](_0x5159cc) {
            var _0x5be1d4 = _0x5159cc;
            _0x5be1d4['clearChild' + 'Shape']();
            for (var _0x5487c4 = 0x0, _0xc02232 = this['_childColl' + 'iderShapes']['length']; _0x5487c4 < _0xc02232; _0x5487c4++)
                _0x5be1d4['addChildSh' + 'ape'](this['_childColl' + 'iderShapes'][_0x5487c4]['clone']());
        }
        ['clone']() {
            var _0x4992ad = new _0x4180f5();
            return this['cloneTo'](_0x4992ad), _0x4992ad;
        }
        ['destroy']() {
            super['destroy']();
            for (var _0x2273b4 = 0x0, _0x2d8800 = this['_childColl' + 'iderShapes']['length']; _0x2273b4 < _0x2d8800; _0x2273b4++) {
                var _0x295cba = this['_childColl' + 'iderShapes'][_0x2273b4];
                0x0 === _0x295cba['_reference' + 'Count'] && _0x295cba['destroy']();
            }
        }
    }
    class _0x15fc9f extends _0x5cfc15 {
        constructor(_0x320e57 = 0.5, _0x220daa = 0x1, _0x43696c = _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = 0x1, this['_height'] = 0.5, this['_radius'] = _0x320e57, this['_height'] = _0x220daa, this['_orientati' + 'on'] = _0x43696c, this['_type'] = _0x5cfc15['SHAPETYPES' + '_CYLINDER'];
            var _0x4753a3 = _0x10fe89['_bullet'];
            switch (_0x43696c) {
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPX']:
                this['_btShape'] = _0x4753a3['btConeShap' + 'eX_create'](_0x320e57, _0x220daa);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']:
                this['_btShape'] = _0x4753a3['btConeShap' + 'e_create'](_0x320e57, _0x220daa);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPZ']:
                this['_btShape'] = _0x4753a3['btConeShap' + 'eZ_create'](_0x320e57, _0x220daa);
                break;
            default:
                throw 'ConeCollid' + 'erShape:un' + 'known\x20orie' + 'ntation.';
            }
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['height']() {
            return this['_height'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['clone']() {
            var _0x4998b8 = new _0x15fc9f(this['_radius'], this['_height'], this['_orientati' + 'on']);
            return this['cloneTo'](_0x4998b8), _0x4998b8;
        }
    }
    class _0xa0c106 extends _0x5cfc15 {
        constructor(_0x59ee01 = 0.5, _0x31cc80 = 0x1, _0x544c16 = _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']) {
            super(), this['_radius'] = 0x1, this['_height'] = 0.5, this['_radius'] = _0x59ee01, this['_height'] = _0x31cc80, this['_orientati' + 'on'] = _0x544c16, this['_type'] = _0x5cfc15['SHAPETYPES' + '_CYLINDER'];
            var _0x182969 = _0x10fe89['_bullet'];
            switch (_0x544c16) {
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPX']:
                _0x182969['btVector3_' + 'setValue'](_0xa0c106['_btSize'], _0x31cc80 / 0x2, _0x59ee01, _0x59ee01), this['_btShape'] = _0x182969['btCylinder' + 'ShapeX_cre' + 'ate'](_0xa0c106['_btSize']);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPY']:
                _0x182969['btVector3_' + 'setValue'](_0xa0c106['_btSize'], _0x59ee01, _0x31cc80 / 0x2, _0x59ee01), this['_btShape'] = _0x182969['btCylinder' + 'Shape_crea' + 'te'](_0xa0c106['_btSize']);
                break;
            case _0x5cfc15['SHAPEORIEN' + 'TATION_UPZ']:
                _0x182969['btVector3_' + 'setValue'](_0xa0c106['_btSize'], _0x59ee01, _0x59ee01, _0x31cc80 / 0x2), this['_btShape'] = _0x182969['btCylinder' + 'ShapeZ_cre' + 'ate'](_0xa0c106['_btSize']);
                break;
            default:
                throw 'CapsuleCol' + 'liderShape' + ':unknown\x20o' + 'rientation' + '.';
            }
        }
        static ['__init__']() {
            _0xa0c106['_btSize'] = _0x10fe89['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['radius']() {
            return this['_radius'];
        }
        get ['height']() {
            return this['_height'];
        }
        get ['orientatio' + 'n']() {
            return this['_orientati' + 'on'];
        }
        ['clone']() {
            var _0xf0aca = new _0xa0c106(this['_radius'], this['_height'], this['_orientati' + 'on']);
            return this['cloneTo'](_0xf0aca), _0xf0aca;
        }
    }
    class _0x235fd5 extends _0x5cfc15 {
        constructor() {
            super(), this['_mesh'] = null, this['_convex'] = !0x1;
        }
        get ['mesh']() {
            return this['_mesh'];
        }
        set ['mesh'](_0x1200ce) {
            if (this['_mesh'] !== _0x1200ce) {
                var _0x3bc71c = _0x10fe89['_bullet'];
                this['_mesh'] && _0x3bc71c['destroy'](this['_btShape']), _0x1200ce && (this['_btShape'] = _0x3bc71c['btGImpactM' + 'eshShape_c' + 'reate'](_0x1200ce['_getPhysic' + 'Mesh']()), _0x3bc71c['btGImpactS' + 'hapeInterf' + 'ace_update' + 'Bound'](this['_btShape'])), this['_mesh'] = _0x1200ce;
            }
        }
        get ['convex']() {
            return this['_convex'];
        }
        set ['convex'](_0x618702) {
            this['_convex'] = _0x618702;
        }
        ['_setScale'](_0x6bf230) {
            if (this['_compoundP' + 'arent'])
                this['updateLoca' + 'lTransform' + 'ations']();
            else {
                var _0xcbbaa = _0x10fe89['_bullet'];
                _0xcbbaa['btVector3_' + 'setValue'](_0x5cfc15['_btScale'], _0x6bf230['x'], _0x6bf230['y'], _0x6bf230['z']), _0xcbbaa['btCollisio' + 'nShape_set' + 'LocalScali' + 'ng'](this['_btShape'], _0x5cfc15['_btScale']), _0xcbbaa['btGImpactS' + 'hapeInterf' + 'ace_update' + 'Bound'](this['_btShape']);
            }
        }
        ['cloneTo'](_0x3febff) {
            var _0x3318b8 = _0x3febff;
            _0x3318b8['convex'] = this['_convex'], _0x3318b8['mesh'] = this['_mesh'], super['cloneTo'](_0x3febff);
        }
        ['clone']() {
            var _0x1f86cb = new _0x235fd5();
            return this['cloneTo'](_0x1f86cb), _0x1f86cb;
        }
        ['destroy']() {
            this['_btShape'] && (_0x10fe89['_bullet']['btCollisio' + 'nShape_des' + 'troy'](this['_btShape']), this['_btShape'] = null);
        }
    }
    class _0x1a13ea extends _0x5cfc15 {
        get ['radius']() {
            return this['_radius'];
        }
        constructor(_0x537eb9 = 0.5) {
            super(), this['_radius'] = _0x537eb9, this['_type'] = _0x5cfc15['SHAPETYPES' + '_SPHERE'], this['_btShape'] = _0x10fe89['_bullet']['btSphereSh' + 'ape_create'](_0x537eb9);
        }
        ['clone']() {
            var _0x4cd4b6 = new _0x1a13ea(this['_radius']);
            return this['cloneTo'](_0x4cd4b6), _0x4cd4b6;
        }
    }
    class _0x4aabff extends _0x33d6e0['Component'] {
        constructor(_0x176e02, _0x1cc79d) {
            super(), this['_restituti' + 'on'] = 0x0, this['_friction'] = 0.5, this['_rollingFr' + 'iction'] = 0x0, this['_ccdMotion' + 'Threshold'] = 0x0, this['_ccdSweptS' + 'phereRadiu' + 's'] = 0x0, this['_collision' + 'Group'] = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], this['_canCollid' + 'eWith'] = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], this['_colliderS' + 'hape'] = null, this['_transform' + 'Flag'] = 0x7fffffff, this['_enablePro' + 'cessCollis' + 'ions'] = !0x0, this['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1, this['canScaleSh' + 'ape'] = !0x0, this['_collision' + 'Group'] = _0x176e02, this['_canCollid' + 'eWith'] = _0x1cc79d, _0x4aabff['_physicObj' + 'ectsMap'][this['id']] = this;
        }
        static ['__init__']() {
            var _0x328eac = _0x10fe89['_bullet'];
            _0x4aabff['_btVector3' + '0'] = _0x328eac['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x4aabff['_btQuatern' + 'ion0'] = _0x328eac['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1);
        }
        static ['_createAff' + 'ineTransfo' + 'rmationArr' + 'ay'](_0x333aba, _0x2db264, _0x3f8f53, _0x1c7ab5, _0x24dbb0, _0x419bef, _0x493412, _0x3f857b, _0x14a377) {
            var _0x5c8b17 = _0x1c7ab5 + _0x1c7ab5, _0x141a78 = _0x24dbb0 + _0x24dbb0, _0x194931 = _0x419bef + _0x419bef, _0x2efb4d = _0x1c7ab5 * _0x5c8b17, _0x27b7e4 = _0x1c7ab5 * _0x141a78, _0x497a58 = _0x1c7ab5 * _0x194931, _0x37609a = _0x24dbb0 * _0x141a78, _0x59c8c7 = _0x24dbb0 * _0x194931, _0x437220 = _0x419bef * _0x194931, _0x57c185 = _0x493412 * _0x5c8b17, _0x5eadf2 = _0x493412 * _0x141a78, _0x2b6b6b = _0x493412 * _0x194931, _0x18dbd0 = _0x3f857b[0x0], _0x16a981 = _0x3f857b[0x1], _0x4a344d = _0x3f857b[0x2];
            _0x14a377[0x0] = (0x1 - (_0x37609a + _0x437220)) * _0x18dbd0, _0x14a377[0x1] = (_0x27b7e4 + _0x2b6b6b) * _0x18dbd0, _0x14a377[0x2] = (_0x497a58 - _0x5eadf2) * _0x18dbd0, _0x14a377[0x3] = 0x0, _0x14a377[0x4] = (_0x27b7e4 - _0x2b6b6b) * _0x16a981, _0x14a377[0x5] = (0x1 - (_0x2efb4d + _0x437220)) * _0x16a981, _0x14a377[0x6] = (_0x59c8c7 + _0x57c185) * _0x16a981, _0x14a377[0x7] = 0x0, _0x14a377[0x8] = (_0x497a58 + _0x5eadf2) * _0x4a344d, _0x14a377[0x9] = (_0x59c8c7 - _0x57c185) * _0x4a344d, _0x14a377[0xa] = (0x1 - (_0x2efb4d + _0x37609a)) * _0x4a344d, _0x14a377[0xb] = 0x0, _0x14a377[0xc] = _0x333aba, _0x14a377[0xd] = _0x2db264, _0x14a377[0xe] = _0x3f8f53, _0x14a377[0xf] = 0x1;
        }
        static ['_creatShap' + 'e'](_0x10c7d1) {
            var _0x209dfa;
            switch (_0x10c7d1['type']) {
            case 'BoxCollide' + 'rShape':
                var _0x1350d6 = _0x10c7d1['size'];
                _0x209dfa = _0x1350d6 ? new _0x4b248c(_0x1350d6[0x0], _0x1350d6[0x1], _0x1350d6[0x2]) : new _0x4b248c();
                break;
            case 'SphereColl' + 'iderShape':
                _0x209dfa = new _0x1a13ea(_0x10c7d1['radius']);
                break;
            case 'CapsuleCol' + 'liderShape':
                _0x209dfa = new _0x9d0b1(_0x10c7d1['radius'], _0x10c7d1['height'], _0x10c7d1['orientatio' + 'n']);
                break;
            case 'MeshCollid' + 'erShape':
                var _0x568732 = new _0x235fd5();
                _0x10c7d1['mesh'] && (_0x568732['mesh'] = _0x33d6e0['Loader']['getRes'](_0x10c7d1['mesh'])), _0x209dfa = _0x568732;
                break;
            case 'ConeCollid' + 'erShape':
                _0x209dfa = new _0x15fc9f(_0x10c7d1['radius'], _0x10c7d1['height'], _0x10c7d1['orientatio' + 'n']);
                break;
            case 'CylinderCo' + 'lliderShap' + 'e':
                _0x209dfa = new _0xa0c106(_0x10c7d1['radius'], _0x10c7d1['height'], _0x10c7d1['orientatio' + 'n']);
                break;
            default:
                throw 'unknown\x20sh' + 'ape\x20type.';
            }
            if (_0x10c7d1['center']) {
                var _0x648b98 = _0x209dfa['localOffse' + 't'];
                _0x648b98['fromArray'](_0x10c7d1['center']), _0x209dfa['localOffse' + 't'] = _0x648b98;
            }
            return _0x209dfa;
        }
        static ['physicVect' + 'or3Transfo' + 'rmQuat'](_0xe8ba9, _0x165330, _0x4871d0, _0x50a3d9, _0x4e2757, _0x37df63) {
            var _0x1ec847 = _0xe8ba9['x'], _0x51362e = _0xe8ba9['y'], _0x387a9c = _0xe8ba9['z'], _0x3d4228 = _0x4e2757 * _0x1ec847 + _0x4871d0 * _0x387a9c - _0x50a3d9 * _0x51362e, _0x1025e3 = _0x4e2757 * _0x51362e + _0x50a3d9 * _0x1ec847 - _0x165330 * _0x387a9c, _0x5ac91c = _0x4e2757 * _0x387a9c + _0x165330 * _0x51362e - _0x4871d0 * _0x1ec847, _0x25ef92 = -_0x165330 * _0x1ec847 - _0x4871d0 * _0x51362e - _0x50a3d9 * _0x387a9c;
            _0x37df63['x'] = _0x3d4228 * _0x4e2757 + _0x25ef92 * -_0x165330 + _0x1025e3 * -_0x50a3d9 - _0x5ac91c * -_0x4871d0, _0x37df63['y'] = _0x1025e3 * _0x4e2757 + _0x25ef92 * -_0x4871d0 + _0x5ac91c * -_0x165330 - _0x3d4228 * -_0x50a3d9, _0x37df63['z'] = _0x5ac91c * _0x4e2757 + _0x25ef92 * -_0x50a3d9 + _0x3d4228 * -_0x4871d0 - _0x1025e3 * -_0x165330;
        }
        static ['physicQuat' + 'ernionMult' + 'iply'](_0x1c9444, _0x5a36e6, _0x5fb1a3, _0xa087a7, _0x489e2e, _0x5d3cdf) {
            var _0x57ff2e = _0x489e2e['x'], _0x4fba16 = _0x489e2e['y'], _0x5998d1 = _0x489e2e['z'], _0x3e7e55 = _0x489e2e['w'], _0x177d94 = _0x5a36e6 * _0x5998d1 - _0x5fb1a3 * _0x4fba16, _0x397ec4 = _0x5fb1a3 * _0x57ff2e - _0x1c9444 * _0x5998d1, _0x1470b6 = _0x1c9444 * _0x4fba16 - _0x5a36e6 * _0x57ff2e, _0x215208 = _0x1c9444 * _0x57ff2e + _0x5a36e6 * _0x4fba16 + _0x5fb1a3 * _0x5998d1;
            _0x5d3cdf['x'] = _0x1c9444 * _0x3e7e55 + _0x57ff2e * _0xa087a7 + _0x177d94, _0x5d3cdf['y'] = _0x5a36e6 * _0x3e7e55 + _0x4fba16 * _0xa087a7 + _0x397ec4, _0x5d3cdf['z'] = _0x5fb1a3 * _0x3e7e55 + _0x5998d1 * _0xa087a7 + _0x1470b6, _0x5d3cdf['w'] = _0xa087a7 * _0x3e7e55 - _0x215208;
        }
        get ['restitutio' + 'n']() {
            return this['_restituti' + 'on'];
        }
        set ['restitutio' + 'n'](_0x37e7b8) {
            this['_restituti' + 'on'] = _0x37e7b8, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tRestituti' + 'on'](this['_btCollide' + 'rObject'], _0x37e7b8);
        }
        get ['friction']() {
            return this['_friction'];
        }
        set ['friction'](_0x5a4055) {
            this['_friction'] = _0x5a4055, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tFriction'](this['_btCollide' + 'rObject'], _0x5a4055);
        }
        get ['rollingFri' + 'ction']() {
            return this['_rollingFr' + 'iction'];
        }
        set ['rollingFri' + 'ction'](_0x2c8ab8) {
            this['_rollingFr' + 'iction'] = _0x2c8ab8, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tRollingFr' + 'iction'](this['_btCollide' + 'rObject'], _0x2c8ab8);
        }
        get ['ccdMotionT' + 'hreshold']() {
            return this['_ccdMotion' + 'Threshold'];
        }
        set ['ccdMotionT' + 'hreshold'](_0x1b2a01) {
            this['_ccdMotion' + 'Threshold'] = _0x1b2a01, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tCcdMotion' + 'Threshold'](this['_btCollide' + 'rObject'], _0x1b2a01);
        }
        get ['ccdSweptSp' + 'hereRadius']() {
            return this['_ccdSweptS' + 'phereRadiu' + 's'];
        }
        set ['ccdSweptSp' + 'hereRadius'](_0x475db9) {
            this['_ccdSweptS' + 'phereRadiu' + 's'] = _0x475db9, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tCcdSweptS' + 'phereRadiu' + 's'](this['_btCollide' + 'rObject'], _0x475db9);
        }
        get ['isActive']() {
            return !!this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_is' + 'Active'](this['_btCollide' + 'rObject']);
        }
        get ['enabled']() {
            return super['enabled'];
        }
        set ['enabled'](_0x221b32) {
            this['_enabled'] != _0x221b32 && (this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && (_0x221b32 ? (this['_derivePhy' + 'sicsTransf' + 'ormation'](!0x0), this['_addToSimu' + 'lation']()) : this['_removeFro' + 'mSimulatio' + 'n']()), super['enabled'] = _0x221b32);
        }
        get ['colliderSh' + 'ape']() {
            return this['_colliderS' + 'hape'];
        }
        set ['colliderSh' + 'ape'](_0x5b3bf8) {
            var _0x569ddc = this['_colliderS' + 'hape'];
            if (_0x569ddc && (_0x569ddc['_attatched'] = !0x1, _0x569ddc['_attatched' + 'CollisionO' + 'bject'] = null), this['_colliderS' + 'hape'] = _0x5b3bf8, _0x5b3bf8) {
                if (_0x5b3bf8['_attatched'])
                    throw 'PhysicsCom' + 'ponent:\x20th' + 'is\x20shape\x20h' + 'as\x20attatch' + 'ed\x20to\x20othe' + 'r\x20entity.';
                if (_0x5b3bf8['_attatched'] = !0x0, _0x5b3bf8['_attatched' + 'CollisionO' + 'bject'] = this, this['_btCollide' + 'rObject']) {
                    _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tCollision' + 'Shape'](this['_btCollide' + 'rObject'], _0x5b3bf8['_btShape']);
                    var _0x577913 = this['_simulatio' + 'n'] && this['_enabled'];
                    _0x577913 && _0x569ddc && this['_removeFro' + 'mSimulatio' + 'n'](), this['_onShapeCh' + 'ange'](_0x5b3bf8), _0x577913 && (this['_derivePhy' + 'sicsTransf' + 'ormation'](!0x0), this['_addToSimu' + 'lation']());
                }
            } else
                this['_simulatio' + 'n'] && this['_enabled'] && _0x569ddc && this['_removeFro' + 'mSimulatio' + 'n']();
        }
        get ['simulation']() {
            return this['_simulatio' + 'n'];
        }
        get ['collisionG' + 'roup']() {
            return this['_collision' + 'Group'];
        }
        set ['collisionG' + 'roup'](_0xd9889c) {
            this['_collision' + 'Group'] !== _0xd9889c && (this['_collision' + 'Group'] = _0xd9889c, this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_addToSimu' + 'lation']()));
        }
        get ['canCollide' + 'With']() {
            return this['_canCollid' + 'eWith'];
        }
        set ['canCollide' + 'With'](_0x534f2a) {
            this['_canCollid' + 'eWith'] !== _0x534f2a && (this['_canCollid' + 'eWith'] = _0x534f2a, this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), this['_addToSimu' + 'lation']()));
        }
        ['_parseShap' + 'e'](_0xa76c53) {
            var _0x5b39e6 = _0xa76c53['length'];
            if (0x1 === _0x5b39e6) {
                var _0x5abb32 = _0x4aabff['_creatShap' + 'e'](_0xa76c53[0x0]);
                this['colliderSh' + 'ape'] = _0x5abb32;
            } else {
                for (var _0x46f257 = new _0x4180f5(), _0x44d3d7 = 0x0; _0x44d3d7 < _0x5b39e6; _0x44d3d7++)
                    _0x5abb32 = _0x4aabff['_creatShap' + 'e'](_0xa76c53[_0x44d3d7]), _0x46f257['addChildSh' + 'ape'](_0x5abb32);
                this['colliderSh' + 'ape'] = _0x46f257;
            }
        }
        ['_onScaleCh' + 'ange'](_0x14e9de) {
            this['_colliderS' + 'hape']['_setScale'](_0x14e9de);
        }
        ['_onEnable']() {
            this['_simulatio' + 'n'] = this['owner']['_scene']['physicsSim' + 'ulation'], _0x10fe89['_bullet']['btCollisio' + 'nObject_se' + 'tContactPr' + 'ocessingTh' + 'reshold'](this['_btCollide' + 'rObject'], 0xc9f2c9cd04675000000000000), this['_colliderS' + 'hape'] && this['_enabled'] && (this['_derivePhy' + 'sicsTransf' + 'ormation'](!0x0), this['_addToSimu' + 'lation']());
        }
        ['_onDisable']() {
            this['_colliderS' + 'hape'] && this['_enabled'] && (this['_removeFro' + 'mSimulatio' + 'n'](), -0x1 !== this['_inPhysicU' + 'pdateListI' + 'ndex'] && this['_simulatio' + 'n']['_physicsUp' + 'dateList']['remove'](this)), this['_simulatio' + 'n'] = null;
        }
        ['_onDestroy']() {
            delete _0x4aabff['_physicObj' + 'ectsMap'][this['id']], _0x10fe89['_bullet']['btCollisio' + 'nObject_de' + 'stroy'](this['_btCollide' + 'rObject']), this['_colliderS' + 'hape']['destroy'](), super['_onDestroy'](), this['_btCollide' + 'rObject'] = null, this['_colliderS' + 'hape'] = null, this['_simulatio' + 'n'] = null, this['owner']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        ['_isValid']() {
            return this['_simulatio' + 'n'] && this['_colliderS' + 'hape'] && this['_enabled'];
        }
        ['_parse'](_0x39a409) {
            null != _0x39a409['collisionG' + 'roup'] && (this['collisionG' + 'roup'] = _0x39a409['collisionG' + 'roup']), null != _0x39a409['canCollide' + 'With'] && (this['canCollide' + 'With'] = _0x39a409['canCollide' + 'With']), null != _0x39a409['ccdMotionT' + 'hreshold'] && (this['ccdMotionT' + 'hreshold'] = _0x39a409['ccdMotionT' + 'hreshold']), null != _0x39a409['ccdSweptSp' + 'hereRadius'] && (this['ccdSweptSp' + 'hereRadius'] = _0x39a409['ccdSweptSp' + 'hereRadius']);
        }
        ['_setTransf' + 'ormFlag'](_0x5c3ec5, _0x1184af) {
            _0x1184af ? this['_transform' + 'Flag'] |= _0x5c3ec5 : this['_transform' + 'Flag'] &= ~_0x5c3ec5;
        }
        ['_getTransf' + 'ormFlag'](_0x289e8c) {
            return 0x0 != (this['_transform' + 'Flag'] & _0x289e8c);
        }
        ['_addToSimu' + 'lation']() {
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
        }
        ['_derivePhy' + 'sicsTransf' + 'ormation'](_0x206eb9) {
            this['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x10fe89['_bullet']['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](this['_btCollide' + 'rObject']), _0x206eb9);
        }
        ['_innerDeri' + 'vePhysicsT' + 'ransformat' + 'ion'](_0x374474, _0xc398df) {
            var _0x553500 = _0x10fe89['_bullet'], _0x59e7a2 = this['owner']['_transform'];
            if (_0xc398df || this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'])) {
                var _0x1b8f4b = this['_colliderS' + 'hape']['localOffse' + 't'], _0x4fd511 = _0x59e7a2['position'], _0x3576b3 = _0x4aabff['_btVector3' + '0'];
                if (0x0 !== _0x1b8f4b['x'] || 0x0 !== _0x1b8f4b['y'] || 0x0 !== _0x1b8f4b['z']) {
                    var _0x424a53 = _0x4aabff['_tempVecto' + 'r30'], _0x3f8aae = _0x59e7a2['worldMatri' + 'x'];
                    _0x4795b3['transformC' + 'oordinate'](_0x1b8f4b, _0x3f8aae, _0x424a53), _0x553500['btVector3_' + 'setValue'](_0x3576b3, -_0x424a53['x'], _0x424a53['y'], _0x424a53['z']);
                } else
                    _0x553500['btVector3_' + 'setValue'](_0x3576b3, -_0x4fd511['x'], _0x4fd511['y'], _0x4fd511['z']);
                _0x553500['btTransfor' + 'm_setOrigi' + 'n'](_0x374474, _0x3576b3), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'], !0x1);
            }
            if (_0xc398df || this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'])) {
                var _0x35d54d = this['_colliderS' + 'hape']['localRotat' + 'ion'], _0x5b0455 = _0x4aabff['_btQuatern' + 'ion0'], _0x2974e8 = _0x59e7a2['rotation'];
                if (0x0 !== _0x35d54d['x'] || 0x0 !== _0x35d54d['y'] || 0x0 !== _0x35d54d['z'] || 0x1 !== _0x35d54d['w']) {
                    var _0x2d94ea = _0x4aabff['_tempQuate' + 'rnion0'];
                    _0x4aabff['physicQuat' + 'ernionMult' + 'iply'](_0x2974e8['x'], _0x2974e8['y'], _0x2974e8['z'], _0x2974e8['w'], _0x35d54d, _0x2d94ea), _0x553500['btQuaterni' + 'on_setValu' + 'e'](_0x5b0455, -_0x2d94ea['x'], _0x2d94ea['y'], _0x2d94ea['z'], -_0x2d94ea['w']);
                } else
                    _0x553500['btQuaterni' + 'on_setValu' + 'e'](_0x5b0455, -_0x2974e8['x'], _0x2974e8['y'], _0x2974e8['z'], -_0x2974e8['w']);
                _0x553500['btTransfor' + 'm_setRotat' + 'ion'](_0x374474, _0x5b0455), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'], !0x1);
            }
            (_0xc398df || this['_getTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'])) && (this['_onScaleCh' + 'ange'](_0x59e7a2['getWorldLo' + 'ssyScale']()), this['_setTransf' + 'ormFlag'](_0x8f4324['TRANSFORM_' + 'WORLDSCALE'], !0x1));
        }
        ['_updateTra' + 'nsformComp' + 'onent'](_0xc6c747) {
            var _0x8fa3e0 = _0x10fe89['_bullet'], _0x175adb = this['_colliderS' + 'hape']['localOffse' + 't'], _0x2bbc2f = this['_colliderS' + 'hape']['localRotat' + 'ion'], _0x20ec58 = this['owner']['_transform'], _0x5637dc = _0x20ec58['position'], _0x4ec795 = _0x20ec58['rotation'], _0x2fa57b = _0x8fa3e0['btTransfor' + 'm_getOrigi' + 'n'](_0xc6c747), _0xca0c28 = _0x8fa3e0['btTransfor' + 'm_getRotat' + 'ion'](_0xc6c747), _0x4d9a96 = -_0x8fa3e0['btQuaterni' + 'on_x'](_0xca0c28), _0x22047c = _0x8fa3e0['btQuaterni' + 'on_y'](_0xca0c28), _0x266746 = _0x8fa3e0['btQuaterni' + 'on_z'](_0xca0c28), _0x40f30d = -_0x8fa3e0['btQuaterni' + 'on_w'](_0xca0c28);
            if (0x0 !== _0x175adb['x'] || 0x0 !== _0x175adb['y'] || 0x0 !== _0x175adb['z']) {
                var _0x92a724 = _0x4aabff['_tempVecto' + 'r30'];
                _0x4aabff['physicVect' + 'or3Transfo' + 'rmQuat'](_0x175adb, _0x4d9a96, _0x22047c, _0x266746, _0x40f30d, _0x92a724), _0x5637dc['x'] = -_0x8fa3e0['btVector3_' + 'x'](_0x2fa57b) - _0x92a724['x'], _0x5637dc['y'] = _0x8fa3e0['btVector3_' + 'y'](_0x2fa57b) - _0x92a724['y'], _0x5637dc['z'] = _0x8fa3e0['btVector3_' + 'z'](_0x2fa57b) - _0x92a724['z'];
            } else
                _0x5637dc['x'] = -_0x8fa3e0['btVector3_' + 'x'](_0x2fa57b), _0x5637dc['y'] = _0x8fa3e0['btVector3_' + 'y'](_0x2fa57b), _0x5637dc['z'] = _0x8fa3e0['btVector3_' + 'z'](_0x2fa57b);
            if (_0x20ec58['position'] = _0x5637dc, 0x0 !== _0x2bbc2f['x'] || 0x0 !== _0x2bbc2f['y'] || 0x0 !== _0x2bbc2f['z'] || 0x1 !== _0x2bbc2f['w']) {
                var _0x23990b = _0x4aabff['_tempQuate' + 'rnion0'];
                _0x2bbc2f['invert'](_0x23990b), _0x4aabff['physicQuat' + 'ernionMult' + 'iply'](_0x4d9a96, _0x22047c, _0x266746, _0x40f30d, _0x23990b, _0x4ec795);
            } else
                _0x4ec795['x'] = _0x4d9a96, _0x4ec795['y'] = _0x22047c, _0x4ec795['z'] = _0x266746, _0x4ec795['w'] = _0x40f30d;
            _0x20ec58['rotation'] = _0x4ec795;
        }
        ['_onShapeCh' + 'ange'](_0x319947) {
            var _0x159c8c = this['_btCollide' + 'rObject'], _0x5d40e7 = _0x10fe89['_bullet'], _0x5c5909 = _0x5d40e7['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x159c8c);
            _0x319947['needsCusto' + 'mCollision' + 'Callback'] ? 0x0 == (_0x5c5909 & _0x4aabff['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) && _0x5d40e7['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x159c8c, _0x5c5909 | _0x4aabff['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) : (_0x5c5909 & _0x4aabff['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']) > 0x0 && _0x5d40e7['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x159c8c, _0x5c5909 ^ _0x4aabff['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK']);
        }
        ['_onAdded']() {
            this['enabled'] = this['_enabled'], this['restitutio' + 'n'] = this['_restituti' + 'on'], this['friction'] = this['_friction'], this['rollingFri' + 'ction'] = this['_rollingFr' + 'iction'], this['ccdMotionT' + 'hreshold'] = this['_ccdMotion' + 'Threshold'], this['ccdSweptSp' + 'hereRadius'] = this['_ccdSweptS' + 'phereRadiu' + 's'], this['owner']['transform']['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onTransfo' + 'rmChanged']);
        }
        ['_onTransfo' + 'rmChanged'](_0x28f3ac) {
            _0x4aabff['_addUpdate' + 'List'] && (_0x28f3ac &= _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE']) && (this['_transform' + 'Flag'] |= _0x28f3ac, this['_isValid']() && -0x1 === this['_inPhysicU' + 'pdateListI' + 'ndex'] && this['_simulatio' + 'n']['_physicsUp' + 'dateList']['add'](this));
        }
        ['_cloneTo'](_0xd9e210) {
            var _0x3bb1e8 = _0xd9e210;
            _0x3bb1e8['restitutio' + 'n'] = this['_restituti' + 'on'], _0x3bb1e8['friction'] = this['_friction'], _0x3bb1e8['rollingFri' + 'ction'] = this['_rollingFr' + 'iction'], _0x3bb1e8['ccdMotionT' + 'hreshold'] = this['_ccdMotion' + 'Threshold'], _0x3bb1e8['ccdSweptSp' + 'hereRadius'] = this['_ccdSweptS' + 'phereRadiu' + 's'], _0x3bb1e8['collisionG' + 'roup'] = this['_collision' + 'Group'], _0x3bb1e8['canCollide' + 'With'] = this['_canCollid' + 'eWith'], _0x3bb1e8['canScaleSh' + 'ape'] = this['canScaleSh' + 'ape'], this['_colliderS' + 'hape'] && (_0x3bb1e8['colliderSh' + 'ape'] = this['_colliderS' + 'hape']['clone']());
        }
    }
    _0x4aabff['ACTIVATION' + 'STATE_ACTI' + 'VE_TAG'] = 0x1, _0x4aabff['ACTIVATION' + 'STATE_ISLA' + 'ND_SLEEPIN' + 'G'] = 0x2, _0x4aabff['ACTIVATION' + 'STATE_WANT' + 'S_DEACTIVA' + 'TION'] = 0x3, _0x4aabff['ACTIVATION' + 'STATE_DISA' + 'BLE_DEACTI' + 'VATION'] = 0x4, _0x4aabff['ACTIVATION' + 'STATE_DISA' + 'BLE_SIMULA' + 'TION'] = 0x5, _0x4aabff['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT'] = 0x1, _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'] = 0x2, _0x4aabff['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE'] = 0x4, _0x4aabff['COLLISIONF' + 'LAGS_CUSTO' + 'M_MATERIAL' + '_CALLBACK'] = 0x8, _0x4aabff['COLLISIONF' + 'LAGS_CHARA' + 'CTER_OBJEC' + 'T'] = 0x10, _0x4aabff['COLLISIONF' + 'LAGS_DISAB' + 'LE_VISUALI' + 'ZE_OBJECT'] = 0x20, _0x4aabff['COLLISIONF' + 'LAGS_DISAB' + 'LE_SPU_COL' + 'LISION_PRO' + 'CESSING'] = 0x40, _0x4aabff['_tempVecto' + 'r30'] = new _0x4795b3(), _0x4aabff['_tempQuate' + 'rnion0'] = new _0x5958af(), _0x4aabff['_tempQuate' + 'rnion1'] = new _0x5958af(), _0x4aabff['_tempMatri' + 'x4x40'] = new _0x16c2be(), _0x4aabff['_physicObj' + 'ectsMap'] = {}, _0x4aabff['_addUpdate' + 'List'] = !0x0;
    class _0xa3f18a {
        constructor(_0x2b387f, _0x582977 = 0x0) {
            this['_gravity'] = new _0x4795b3(0x0, -0xa, 0x0), this['_btVector3' + 'Zero'] = _0x10fe89['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0), this['_btDefault' + 'Quaternion'] = _0x10fe89['_bullet']['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, -0x1), this['_collision' + 'sUtils'] = new _0x1d890b(), this['_previousF' + 'rameCollis' + 'ions'] = [], this['_currentFr' + 'ameCollisi' + 'ons'] = [], this['_physicsUp' + 'dateList'] = new _0x3c2883(), this['_character' + 's'] = [], this['_updatedRi' + 'gidbodies'] = 0x0, this['maxSubStep' + 's'] = 0x1, this['fixedTimeS' + 'tep'] = 0x1 / 0x3c, this['maxSubStep' + 's'] = _0x2b387f['maxSubStep' + 's'], this['fixedTimeS' + 'tep'] = _0x2b387f['fixedTimeS' + 'tep'];
            var _0x4ff764 = _0x10fe89['_bullet'];
            this['_btCollisi' + 'onConfigur' + 'ation'] = _0x4ff764['btDefaultC' + 'ollisionCo' + 'nfiguratio' + 'n_create'](), this['_btDispatc' + 'her'] = _0x4ff764['btCollisio' + 'nDispatche' + 'r_create'](this['_btCollisi' + 'onConfigur' + 'ation']), this['_btBroadph' + 'ase'] = _0x4ff764['btDbvtBroa' + 'dphase_cre' + 'ate'](), _0x4ff764['btOverlapp' + 'ingPairCac' + 'he_setInte' + 'rnalGhostP' + 'airCallbac' + 'k'](_0x4ff764['btDbvtBroa' + 'dphase_get' + 'Overlappin' + 'gPairCache'](this['_btBroadph' + 'ase']), _0x4ff764['btGhostPai' + 'rCallback_' + 'create']());
            var _0x526176 = _0x2b387f['flags'];
            if (_0x526176 & _0xa3f18a['PHYSICSENG' + 'INEFLAGS_C' + 'OLLISIONSO' + 'NLY'])
                this['_btCollisi' + 'onWorld'] = new _0x4ff764['btCollisio' + 'nWorld'](this['_btDispatc' + 'her'], this['_btBroadph' + 'ase'], this['_btCollisi' + 'onConfigur' + 'ation']);
            else {
                if (_0x526176 & _0xa3f18a['PHYSICSENG' + 'INEFLAGS_S' + 'OFTBODYSUP' + 'PORT'])
                    throw 'PhysicsSim' + 'ulation:So' + 'ftBody\x20pro' + 'cessing\x20is' + '\x20not\x20yet\x20a' + 'vailable';
                var _0xd0ad90 = _0x4ff764['btSequenti' + 'alImpulseC' + 'onstraintS' + 'olver_crea' + 'te']();
                this['_btDiscret' + 'eDynamicsW' + 'orld'] = _0x4ff764['btDiscrete' + 'DynamicsWo' + 'rld_create'](this['_btDispatc' + 'her'], this['_btBroadph' + 'ase'], _0xd0ad90, this['_btCollisi' + 'onConfigur' + 'ation']), this['_btCollisi' + 'onWorld'] = this['_btDiscret' + 'eDynamicsW' + 'orld'];
            }
            this['_btDiscret' + 'eDynamicsW' + 'orld'] && (this['_btSolverI' + 'nfo'] = _0x4ff764['btDynamics' + 'World_getS' + 'olverInfo'](this['_btDiscret' + 'eDynamicsW' + 'orld']), this['_btDispatc' + 'hInfo'] = _0x4ff764['btCollisio' + 'nWorld_get' + 'DispatchIn' + 'fo'](this['_btDiscret' + 'eDynamicsW' + 'orld'])), this['_btClosest' + 'RayResultC' + 'allback'] = _0x4ff764['ClosestRay' + 'ResultCall' + 'back_creat' + 'e'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btAllHits' + 'RayResultC' + 'allback'] = _0x4ff764['AllHitsRay' + 'ResultCall' + 'back_creat' + 'e'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btClosest' + 'ConvexResu' + 'ltCallback'] = _0x4ff764['ClosestCon' + 'vexResultC' + 'allback_cr' + 'eate'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), this['_btAllConv' + 'exResultCa' + 'llback'] = _0x4ff764['AllConvexR' + 'esultCallb' + 'ack_create'](this['_btVector3' + 'Zero'], this['_btVector3' + 'Zero']), _0x4ff764['btGImpactC' + 'ollisionAl' + 'gorithm_Re' + 'gisterAlgo' + 'rithm'](this['_btDispatc' + 'her']);
        }
        static ['__init__']() {
            var _0x230dc7 = _0x10fe89['_bullet'];
            _0xa3f18a['_btTempVec' + 'tor30'] = _0x230dc7['btVector3_' + 'create'](0x0, 0x0, 0x0), _0xa3f18a['_btTempVec' + 'tor31'] = _0x230dc7['btVector3_' + 'create'](0x0, 0x0, 0x0), _0xa3f18a['_btTempQua' + 'ternion0'] = _0x230dc7['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0xa3f18a['_btTempQua' + 'ternion1'] = _0x230dc7['btQuaterni' + 'on_create'](0x0, 0x0, 0x0, 0x1), _0xa3f18a['_btTempTra' + 'nsform0'] = _0x230dc7['btTransfor' + 'm_create'](), _0xa3f18a['_btTempTra' + 'nsform1'] = _0x230dc7['btTransfor' + 'm_create']();
        }
        static ['createCons' + 'traint']() {
        }
        get ['continuous' + 'CollisionD' + 'etection']() {
            return _0x10fe89['_bullet']['btCollisio' + 'nWorld_get' + '_m_useCont' + 'inuous'](this['_btDispatc' + 'hInfo']);
        }
        set ['continuous' + 'CollisionD' + 'etection'](_0x1ffa59) {
            _0x10fe89['_bullet']['btCollisio' + 'nWorld_set' + '_m_useCont' + 'inuous'](this['_btDispatc' + 'hInfo'], _0x1ffa59);
        }
        get ['gravity']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            return this['_gravity'];
        }
        set ['gravity'](_0x15e83e) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            this['_gravity'] = _0x15e83e;
            var _0x209922 = _0x10fe89['_bullet'], _0x17d37f = _0xa3f18a['_btTempVec' + 'tor30'];
            _0x209922['btVector3_' + 'setValue'](_0x17d37f, -_0x15e83e['x'], _0x15e83e['y'], _0x15e83e['z']), _0x209922['btDiscrete' + 'DynamicsWo' + 'rld_setGra' + 'vity'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x17d37f);
        }
        get ['speculativ' + 'eContactRe' + 'stitution']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20Ca' + 'nnot\x20perfo' + 'rm\x20this\x20ac' + 'tion\x20when\x20' + 'the\x20physic' + 's\x20engine\x20i' + 's\x20set\x20to\x20C' + 'ollisionsO' + 'nly';
            return _0x10fe89['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_getApp' + 'lySpeculat' + 'iveContact' + 'Restitutio' + 'n'](this['_btDiscret' + 'eDynamicsW' + 'orld']);
        }
        set ['speculativ' + 'eContactRe' + 'stitution'](_0x366d69) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20Ca' + 'nnot\x20perfo' + 'rm\x20this\x20ac' + 'tion\x20when\x20' + 'the\x20physic' + 's\x20engine\x20i' + 's\x20set\x20to\x20C' + 'ollisionsO' + 'nly';
            _0x10fe89['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_setApp' + 'lySpeculat' + 'iveContact' + 'Restitutio' + 'n'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x366d69);
        }
        ['_simulate'](_0x4479dc) {
            this['_updatedRi' + 'gidbodies'] = 0x0;
            var _0x49ffd7 = _0x10fe89['_bullet'];
            this['_btDiscret' + 'eDynamicsW' + 'orld'] ? _0x49ffd7['btDiscrete' + 'DynamicsWo' + 'rld_stepSi' + 'mulation'](this['_btDiscret' + 'eDynamicsW' + 'orld'], _0x4479dc, this['maxSubStep' + 's'], this['fixedTimeS' + 'tep']) : _0x49ffd7['PerformDis' + 'creteColli' + 'sionDetect' + 'ion'](this['_btCollisi' + 'onWorld']);
        }
        ['_destroy']() {
            var _0x330c13 = _0x10fe89['_bullet'];
            this['_btDiscret' + 'eDynamicsW' + 'orld'] ? (_0x330c13['btCollisio' + 'nWorld_des' + 'troy'](this['_btDiscret' + 'eDynamicsW' + 'orld']), this['_btDiscret' + 'eDynamicsW' + 'orld'] = null) : (_0x330c13['btCollisio' + 'nWorld_des' + 'troy'](this['_btCollisi' + 'onWorld']), this['_btCollisi' + 'onWorld'] = null), _0x330c13['btDbvtBroa' + 'dphase_des' + 'troy'](this['_btBroadph' + 'ase']), this['_btBroadph' + 'ase'] = null, _0x330c13['btCollisio' + 'nDispatche' + 'r_destroy'](this['_btDispatc' + 'her']), this['_btDispatc' + 'her'] = null, _0x330c13['btDefaultC' + 'ollisionCo' + 'nfiguratio' + 'n_destroy'](this['_btCollisi' + 'onConfigur' + 'ation']), this['_btCollisi' + 'onConfigur' + 'ation'] = null;
        }
        ['_addPhysic' + 'sCollider'](_0x2dcf1b, _0x4f87a5, _0x5749d6) {
            _0x10fe89['_bullet']['btCollisio' + 'nWorld_add' + 'CollisionO' + 'bject'](this['_btCollisi' + 'onWorld'], _0x2dcf1b['_btCollide' + 'rObject'], _0x4f87a5, _0x5749d6);
        }
        ['_removePhy' + 'sicsCollid' + 'er'](_0x3c6752) {
            _0x10fe89['_bullet']['btCollisio' + 'nWorld_rem' + 'oveCollisi' + 'onObject'](this['_btCollisi' + 'onWorld'], _0x3c6752['_btCollide' + 'rObject']);
        }
        ['_addRigidB' + 'ody'](_0x10064c, _0x2ab380, _0x1d2db8) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            _0x10fe89['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_addRig' + 'idBody'](this['_btCollisi' + 'onWorld'], _0x10064c['_btCollide' + 'rObject'], _0x2ab380, _0x1d2db8);
        }
        ['_removeRig' + 'idBody'](_0x37f6a1) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            _0x10fe89['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_remove' + 'RigidBody'](this['_btCollisi' + 'onWorld'], _0x37f6a1['_btCollide' + 'rObject']);
        }
        ['_addCharac' + 'ter'](_0x1907fd, _0x4de49f, _0x4951a7) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            var _0x30c4c1 = _0x10fe89['_bullet'];
            _0x30c4c1['btCollisio' + 'nWorld_add' + 'CollisionO' + 'bject'](this['_btCollisi' + 'onWorld'], _0x1907fd['_btCollide' + 'rObject'], _0x4de49f, _0x4951a7), _0x30c4c1['btDynamics' + 'World_addA' + 'ction'](this['_btCollisi' + 'onWorld'], _0x1907fd['_btKinemat' + 'icCharacte' + 'r']);
        }
        ['_removeCha' + 'racter'](_0x5540b2) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Simulation' + ':Cannot\x20pe' + 'rform\x20this' + '\x20action\x20wh' + 'en\x20the\x20phy' + 'sics\x20engin' + 'e\x20is\x20set\x20t' + 'o\x20Collisio' + 'nsOnly';
            var _0x2b65cc = _0x10fe89['_bullet'];
            _0x2b65cc['btCollisio' + 'nWorld_rem' + 'oveCollisi' + 'onObject'](this['_btCollisi' + 'onWorld'], _0x5540b2['_btCollide' + 'rObject']), _0x2b65cc['btDynamics' + 'World_remo' + 'veAction'](this['_btCollisi' + 'onWorld'], _0x5540b2['_btKinemat' + 'icCharacte' + 'r']);
        }
        ['raycastFro' + 'mTo'](_0x3aa2f8, _0x334307, _0x184dd9 = null, _0x3aed02 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x57d671 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x11bbcf = _0x10fe89['_bullet'], _0x1b74e9 = this['_btClosest' + 'RayResultC' + 'allback'], _0x5df43a = _0xa3f18a['_btTempVec' + 'tor30'], _0x3716f7 = _0xa3f18a['_btTempVec' + 'tor31'];
            if (_0x11bbcf['btVector3_' + 'setValue'](_0x5df43a, -_0x3aa2f8['x'], _0x3aa2f8['y'], _0x3aa2f8['z']), _0x11bbcf['btVector3_' + 'setValue'](_0x3716f7, -_0x334307['x'], _0x334307['y'], _0x334307['z']), _0x11bbcf['ClosestRay' + 'ResultCall' + 'back_set_m' + '_rayFromWo' + 'rld'](_0x1b74e9, _0x5df43a), _0x11bbcf['ClosestRay' + 'ResultCall' + 'back_set_m' + '_rayToWorl' + 'd'](_0x1b74e9, _0x3716f7), _0x11bbcf['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterG' + 'roup'](_0x1b74e9, _0x3aed02), _0x11bbcf['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterM' + 'ask'](_0x1b74e9, _0x57d671), _0x11bbcf['RayResultC' + 'allback_se' + 't_m_collis' + 'ionObject'](_0x1b74e9, null), _0x11bbcf['RayResultC' + 'allback_se' + 't_m_closes' + 'tHitFracti' + 'on'](_0x1b74e9, 0x1), _0x11bbcf['btCollisio' + 'nWorld_ray' + 'Test'](this['_btCollisi' + 'onWorld'], _0x5df43a, _0x3716f7, _0x1b74e9), _0x11bbcf['RayResultC' + 'allback_ha' + 'sHit'](_0x1b74e9)) {
                if (_0x184dd9) {
                    _0x184dd9['succeeded'] = !0x0, _0x184dd9['collider'] = _0x4aabff['_physicObj' + 'ectsMap'][_0x11bbcf['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x11bbcf['RayResultC' + 'allback_ge' + 't_m_collis' + 'ionObject'](_0x1b74e9))], _0x184dd9['hitFractio' + 'n'] = _0x11bbcf['RayResultC' + 'allback_ge' + 't_m_closes' + 'tHitFracti' + 'on'](_0x1b74e9);
                    var _0x182e03 = _0x11bbcf['ClosestRay' + 'ResultCall' + 'back_get_m' + '_hitPointW' + 'orld'](_0x1b74e9), _0x36e95b = _0x184dd9['point'];
                    _0x36e95b['x'] = -_0x11bbcf['btVector3_' + 'x'](_0x182e03), _0x36e95b['y'] = _0x11bbcf['btVector3_' + 'y'](_0x182e03), _0x36e95b['z'] = _0x11bbcf['btVector3_' + 'z'](_0x182e03);
                    var _0x16026a = _0x11bbcf['ClosestRay' + 'ResultCall' + 'back_get_m' + '_hitNormal' + 'World'](_0x1b74e9), _0x518aa8 = _0x184dd9['normal'];
                    _0x518aa8['x'] = -_0x11bbcf['btVector3_' + 'x'](_0x16026a), _0x518aa8['y'] = _0x11bbcf['btVector3_' + 'y'](_0x16026a), _0x518aa8['z'] = _0x11bbcf['btVector3_' + 'z'](_0x16026a);
                }
                return !0x0;
            }
            return _0x184dd9 && (_0x184dd9['succeeded'] = !0x1), !0x1;
        }
        ['raycastAll' + 'FromTo'](_0x69c112, _0x4147d0, _0x2ecde6, _0x1af826 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x4a5a6b = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x2c09fe = _0x10fe89['_bullet'], _0xee6379 = this['_btAllHits' + 'RayResultC' + 'allback'], _0x4af375 = _0xa3f18a['_btTempVec' + 'tor30'], _0x241cee = _0xa3f18a['_btTempVec' + 'tor31'];
            _0x2ecde6['length'] = 0x0, _0x2c09fe['btVector3_' + 'setValue'](_0x4af375, -_0x69c112['x'], _0x69c112['y'], _0x69c112['z']), _0x2c09fe['btVector3_' + 'setValue'](_0x241cee, -_0x4147d0['x'], _0x4147d0['y'], _0x4147d0['z']), _0x2c09fe['AllHitsRay' + 'ResultCall' + 'back_set_m' + '_rayFromWo' + 'rld'](_0xee6379, _0x4af375), _0x2c09fe['AllHitsRay' + 'ResultCall' + 'back_set_m' + '_rayToWorl' + 'd'](_0xee6379, _0x241cee), _0x2c09fe['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterG' + 'roup'](_0xee6379, _0x1af826), _0x2c09fe['RayResultC' + 'allback_se' + 't_m_collis' + 'ionFilterM' + 'ask'](_0xee6379, _0x4a5a6b);
            var _0xb71f08 = _0x2c09fe['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_collision' + 'Objects'](_0xee6379), _0x6f56d0 = _0x2c09fe['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitPointW' + 'orld'](_0xee6379), _0x5b2e56 = _0x2c09fe['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitNormal' + 'World'](_0xee6379), _0x5df2a6 = _0x2c09fe['AllHitsRay' + 'ResultCall' + 'back_get_m' + '_hitFracti' + 'ons'](_0xee6379);
            _0x2c09fe['tBtCollisi' + 'onObjectAr' + 'ray_clear'](_0xb71f08), _0x2c09fe['tVector3Ar' + 'ray_clear'](_0x6f56d0), _0x2c09fe['tVector3Ar' + 'ray_clear'](_0x5b2e56), _0x2c09fe['tScalarArr' + 'ay_clear'](_0x5df2a6), _0x2c09fe['btCollisio' + 'nWorld_ray' + 'Test'](this['_btCollisi' + 'onWorld'], _0x4af375, _0x241cee, _0xee6379);
            var _0x4e51f6 = _0x2c09fe['tBtCollisi' + 'onObjectAr' + 'ray_size'](_0xb71f08);
            if (_0x4e51f6 > 0x0) {
                this['_collision' + 'sUtils']['recoverAll' + 'HitResults' + 'Pool']();
                for (var _0x4d9b90 = 0x0; _0x4d9b90 < _0x4e51f6; _0x4d9b90++) {
                    var _0x5785a4 = this['_collision' + 'sUtils']['getHitResu' + 'lt']();
                    _0x2ecde6['push'](_0x5785a4), _0x5785a4['succeeded'] = !0x0, _0x5785a4['collider'] = _0x4aabff['_physicObj' + 'ectsMap'][_0x2c09fe['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x2c09fe['tBtCollisi' + 'onObjectAr' + 'ray_at'](_0xb71f08, _0x4d9b90))], _0x5785a4['hitFractio' + 'n'] = _0x2c09fe['tScalarArr' + 'ay_at'](_0x5df2a6, _0x4d9b90);
                    var _0x4c8c93 = _0x2c09fe['tVector3Ar' + 'ray_at'](_0x6f56d0, _0x4d9b90), _0x3a4cfa = _0x5785a4['point'];
                    _0x3a4cfa['x'] = -_0x2c09fe['btVector3_' + 'x'](_0x4c8c93), _0x3a4cfa['y'] = _0x2c09fe['btVector3_' + 'y'](_0x4c8c93), _0x3a4cfa['z'] = _0x2c09fe['btVector3_' + 'z'](_0x4c8c93);
                    var _0x36d109 = _0x2c09fe['tVector3Ar' + 'ray_at'](_0x5b2e56, _0x4d9b90), _0x303a97 = _0x5785a4['normal'];
                    _0x303a97['x'] = -_0x2c09fe['btVector3_' + 'x'](_0x36d109), _0x303a97['y'] = _0x2c09fe['btVector3_' + 'y'](_0x36d109), _0x303a97['z'] = _0x2c09fe['btVector3_' + 'z'](_0x36d109);
                }
                return !0x0;
            }
            return !0x1;
        }
        ['rayCast'](_0x30cb91, _0x2a25a0 = null, _0x224ab6 = 0x7fffffff, _0x521179 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x140ec1 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x4b27f1 = _0x30cb91['origin'], _0x570899 = _0xa3f18a['_tempVecto' + 'r30'];
            return _0x4795b3['normalize'](_0x30cb91['direction'], _0x570899), _0x4795b3['scale'](_0x570899, _0x224ab6, _0x570899), _0x4795b3['add'](_0x4b27f1, _0x570899, _0x570899), this['raycastFro' + 'mTo'](_0x4b27f1, _0x570899, _0x2a25a0, _0x521179, _0x140ec1);
        }
        ['rayCastAll'](_0x1478a5, _0x27a98c, _0x319c8c = 0x7fffffff, _0x9d77fe = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0xe09b80 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            var _0x1a1b54 = _0x1478a5['origin'], _0x1602f4 = _0xa3f18a['_tempVecto' + 'r30'];
            return _0x4795b3['normalize'](_0x1478a5['direction'], _0x1602f4), _0x4795b3['scale'](_0x1602f4, _0x319c8c, _0x1602f4), _0x4795b3['add'](_0x1a1b54, _0x1602f4, _0x1602f4), this['raycastAll' + 'FromTo'](_0x1a1b54, _0x1602f4, _0x27a98c, _0x9d77fe, _0xe09b80);
        }
        ['shapeCast'](_0xa6f54e, _0x37391e, _0x4e4546, _0x3a7fa6 = null, _0x5430b5 = null, _0x5473e9 = null, _0x35ce23 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x4f83e9 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x4c5ff8 = 0x0) {
            var _0x480b53 = _0x10fe89['_bullet'], _0x24bfbb = this['_btClosest' + 'ConvexResu' + 'ltCallback'], _0x47c594 = _0xa3f18a['_btTempVec' + 'tor30'], _0x34b239 = _0xa3f18a['_btTempVec' + 'tor31'], _0x200582 = _0xa3f18a['_btTempQua' + 'ternion0'], _0x221d97 = _0xa3f18a['_btTempQua' + 'ternion1'], _0x336a3a = _0xa3f18a['_btTempTra' + 'nsform0'], _0x2e0b00 = _0xa3f18a['_btTempTra' + 'nsform1'], _0x4ec270 = _0xa6f54e['_btShape'];
            if (_0x480b53['btVector3_' + 'setValue'](_0x47c594, -_0x37391e['x'], _0x37391e['y'], _0x37391e['z']), _0x480b53['btVector3_' + 'setValue'](_0x34b239, -_0x4e4546['x'], _0x4e4546['y'], _0x4e4546['z']), _0x480b53['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erGroup'](_0x24bfbb, _0x35ce23), _0x480b53['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erMask'](_0x24bfbb, _0x4f83e9), _0x480b53['btTransfor' + 'm_setOrigi' + 'n'](_0x336a3a, _0x47c594), _0x480b53['btTransfor' + 'm_setOrigi' + 'n'](_0x2e0b00, _0x34b239), _0x5430b5 ? (_0x480b53['btQuaterni' + 'on_setValu' + 'e'](_0x200582, -_0x5430b5['x'], _0x5430b5['y'], _0x5430b5['z'], -_0x5430b5['w']), _0x480b53['btTransfor' + 'm_setRotat' + 'ion'](_0x336a3a, _0x200582)) : _0x480b53['btTransfor' + 'm_setRotat' + 'ion'](_0x336a3a, this['_btDefault' + 'Quaternion']), _0x5473e9 ? (_0x480b53['btQuaterni' + 'on_setValu' + 'e'](_0x221d97, -_0x5473e9['x'], _0x5473e9['y'], _0x5473e9['z'], -_0x5473e9['w']), _0x480b53['btTransfor' + 'm_setRotat' + 'ion'](_0x2e0b00, _0x221d97)) : _0x480b53['btTransfor' + 'm_setRotat' + 'ion'](_0x2e0b00, this['_btDefault' + 'Quaternion']), _0x480b53['ClosestCon' + 'vexResultC' + 'allback_se' + 't_m_hitCol' + 'lisionObje' + 'ct'](_0x24bfbb, null), _0x480b53['ConvexResu' + 'ltCallback' + '_set_m_clo' + 'sestHitFra' + 'ction'](_0x24bfbb, 0x1), _0x480b53['btCollisio' + 'nWorld_con' + 'vexSweepTe' + 'st'](this['_btCollisi' + 'onWorld'], _0x4ec270, _0x336a3a, _0x2e0b00, _0x24bfbb, _0x4c5ff8), _0x480b53['ConvexResu' + 'ltCallback' + '_hasHit'](_0x24bfbb)) {
                if (_0x3a7fa6) {
                    _0x3a7fa6['succeeded'] = !0x0, _0x3a7fa6['collider'] = _0x4aabff['_physicObj' + 'ectsMap'][_0x480b53['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x480b53['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitCol' + 'lisionObje' + 'ct'](_0x24bfbb))], _0x3a7fa6['hitFractio' + 'n'] = _0x480b53['ConvexResu' + 'ltCallback' + '_get_m_clo' + 'sestHitFra' + 'ction'](_0x24bfbb);
                    var _0x4283f8 = _0x480b53['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitPoi' + 'ntWorld'](_0x24bfbb), _0x3bec0f = _0x480b53['ClosestCon' + 'vexResultC' + 'allback_ge' + 't_m_hitNor' + 'malWorld'](_0x24bfbb), _0x1ecb93 = _0x3a7fa6['point'], _0x13bbe1 = _0x3a7fa6['normal'];
                    _0x1ecb93['x'] = -_0x480b53['btVector3_' + 'x'](_0x4283f8), _0x1ecb93['y'] = _0x480b53['btVector3_' + 'y'](_0x4283f8), _0x1ecb93['z'] = _0x480b53['btVector3_' + 'z'](_0x4283f8), _0x13bbe1['x'] = -_0x480b53['btVector3_' + 'x'](_0x3bec0f), _0x13bbe1['y'] = _0x480b53['btVector3_' + 'y'](_0x3bec0f), _0x13bbe1['z'] = _0x480b53['btVector3_' + 'z'](_0x3bec0f);
                }
                return !0x0;
            }
            return _0x3a7fa6 && (_0x3a7fa6['succeeded'] = !0x1), !0x1;
        }
        ['shapeCastA' + 'll'](_0x381a5b, _0x10e5ba, _0x496ea2, _0x295bfe, _0x248726 = null, _0x4a7316 = null, _0x2d2c19 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x4cac5c = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER'], _0x2841c2 = 0x0) {
            var _0x3a693d = _0x10fe89['_bullet'], _0x283078 = this['_btAllConv' + 'exResultCa' + 'llback'], _0x23c922 = _0xa3f18a['_btTempVec' + 'tor30'], _0x237e4a = _0xa3f18a['_btTempVec' + 'tor31'], _0x4098a1 = _0xa3f18a['_btTempQua' + 'ternion0'], _0x39d6b8 = _0xa3f18a['_btTempQua' + 'ternion1'], _0x3b5815 = _0xa3f18a['_btTempTra' + 'nsform0'], _0x2ac6ad = _0xa3f18a['_btTempTra' + 'nsform1'], _0x3e7c59 = _0x381a5b['_btShape'];
            _0x295bfe['length'] = 0x0, _0x3a693d['btVector3_' + 'setValue'](_0x23c922, -_0x10e5ba['x'], _0x10e5ba['y'], _0x10e5ba['z']), _0x3a693d['btVector3_' + 'setValue'](_0x237e4a, -_0x496ea2['x'], _0x496ea2['y'], _0x496ea2['z']), _0x3a693d['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erGroup'](_0x283078, _0x2d2c19), _0x3a693d['ConvexResu' + 'ltCallback' + '_set_m_col' + 'lisionFilt' + 'erMask'](_0x283078, _0x4cac5c), _0x3a693d['btTransfor' + 'm_setOrigi' + 'n'](_0x3b5815, _0x23c922), _0x3a693d['btTransfor' + 'm_setOrigi' + 'n'](_0x2ac6ad, _0x237e4a), _0x248726 ? (_0x3a693d['btQuaterni' + 'on_setValu' + 'e'](_0x4098a1, -_0x248726['x'], _0x248726['y'], _0x248726['z'], -_0x248726['w']), _0x3a693d['btTransfor' + 'm_setRotat' + 'ion'](_0x3b5815, _0x4098a1)) : _0x3a693d['btTransfor' + 'm_setRotat' + 'ion'](_0x3b5815, this['_btDefault' + 'Quaternion']), _0x4a7316 ? (_0x3a693d['btQuaterni' + 'on_setValu' + 'e'](_0x39d6b8, -_0x4a7316['x'], _0x4a7316['y'], _0x4a7316['z'], -_0x4a7316['w']), _0x3a693d['btTransfor' + 'm_setRotat' + 'ion'](_0x2ac6ad, _0x39d6b8)) : _0x3a693d['btTransfor' + 'm_setRotat' + 'ion'](_0x2ac6ad, this['_btDefault' + 'Quaternion']);
            var _0x5c5c04 = _0x3a693d['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'collisionO' + 'bjects'](_0x283078);
            _0x3a693d['tBtCollisi' + 'onObjectAr' + 'ray_clear'](_0x5c5c04), _0x3a693d['btCollisio' + 'nWorld_con' + 'vexSweepTe' + 'st'](this['_btCollisi' + 'onWorld'], _0x3e7c59, _0x3b5815, _0x2ac6ad, _0x283078, _0x2841c2);
            var _0x56a203 = _0x3a693d['tBtCollisi' + 'onObjectAr' + 'ray_size'](_0x5c5c04);
            if (_0x56a203 > 0x0) {
                for (var _0xd0668d = _0x3a693d['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitPointWo' + 'rld'](_0x283078), _0x1a25d1 = _0x3a693d['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitNormalW' + 'orld'](_0x283078), _0x5b6423 = _0x3a693d['AllConvexR' + 'esultCallb' + 'ack_get_m_' + 'hitFractio' + 'ns'](_0x283078), _0x26fa8d = 0x0; _0x26fa8d < _0x56a203; _0x26fa8d++) {
                    var _0x3c1522 = this['_collision' + 'sUtils']['getHitResu' + 'lt']();
                    _0x295bfe['push'](_0x3c1522), _0x3c1522['succeeded'] = !0x0, _0x3c1522['collider'] = _0x4aabff['_physicObj' + 'ectsMap'][_0x3a693d['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x3a693d['tBtCollisi' + 'onObjectAr' + 'ray_at'](_0x5c5c04, _0x26fa8d))], _0x3c1522['hitFractio' + 'n'] = _0x3a693d['tScalarArr' + 'ay_at'](_0x5b6423, _0x26fa8d);
                    var _0x44b081 = _0x3a693d['tVector3Ar' + 'ray_at'](_0xd0668d, _0x26fa8d), _0x1d332d = _0x3c1522['point'];
                    _0x1d332d['x'] = -_0x3a693d['btVector3_' + 'x'](_0x44b081), _0x1d332d['y'] = _0x3a693d['btVector3_' + 'y'](_0x44b081), _0x1d332d['z'] = _0x3a693d['btVector3_' + 'z'](_0x44b081);
                    var _0x3672e8 = _0x3a693d['tVector3Ar' + 'ray_at'](_0x1a25d1, _0x26fa8d), _0x50de61 = _0x3c1522['normal'];
                    _0x50de61['x'] = -_0x3a693d['btVector3_' + 'x'](_0x3672e8), _0x50de61['y'] = _0x3a693d['btVector3_' + 'y'](_0x3672e8), _0x50de61['z'] = _0x3a693d['btVector3_' + 'z'](_0x3672e8);
                }
                return !0x0;
            }
            return !0x1;
        }
        ['addConstra' + 'int'](_0xb5870e, _0x210bb5 = !0x1) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0xb5870e['_simulatio' + 'n'] = this;
        }
        ['removeCons' + 'traint'](_0x20cd7f) {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
        }
        ['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der']() {
            for (var _0x28e8fe = this['_physicsUp' + 'dateList']['elements'], _0x502081 = 0x0, _0x1cf771 = this['_physicsUp' + 'dateList']['length']; _0x502081 < _0x1cf771; _0x502081++) {
                var _0x122e7e = _0x28e8fe[_0x502081];
                _0x122e7e['_derivePhy' + 'sicsTransf' + 'ormation'](!0x1), _0x122e7e['_inPhysicU' + 'pdateListI' + 'ndex'] = -0x1;
            }
            this['_physicsUp' + 'dateList']['length'] = 0x0;
        }
        ['_updateCha' + 'racters']() {
            for (var _0x1b872c = 0x0, _0x4ce0c8 = this['_character' + 's']['length']; _0x1b872c < _0x4ce0c8; _0x1b872c++) {
                var _0x4f9c42 = this['_character' + 's'][_0x1b872c];
                _0x4f9c42['_updateTra' + 'nsformComp' + 'onent'](_0x10fe89['_bullet']['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](_0x4f9c42['_btCollide' + 'rObject']));
            }
        }
        ['_updateCol' + 'lisions']() {
            this['_collision' + 'sUtils']['recoverAll' + 'ContactPoi' + 'ntsPool']();
            var _0x4f4980 = this['_currentFr' + 'ameCollisi' + 'ons'];
            this['_currentFr' + 'ameCollisi' + 'ons'] = this['_previousF' + 'rameCollis' + 'ions'], this['_currentFr' + 'ameCollisi' + 'ons']['length'] = 0x0, this['_previousF' + 'rameCollis' + 'ions'] = _0x4f4980;
            for (var _0x542dcd = _0x33d6e0['Stat']['loopCount'], _0x409d27 = _0x10fe89['_bullet'], _0x15af5e = _0x409d27['btDispatch' + 'er_getNumM' + 'anifolds'](this['_btDispatc' + 'her']), _0x1802be = 0x0; _0x1802be < _0x15af5e; _0x1802be++) {
                var _0x3721df, _0x1e2fc2 = _0x409d27['btDispatch' + 'er_getMani' + 'foldByInde' + 'xInternal'](this['_btDispatc' + 'her'], _0x1802be), _0x401d99 = _0x4aabff['_physicObj' + 'ectsMap'][_0x409d27['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x409d27['btPersiste' + 'ntManifold' + '_getBody0'](_0x1e2fc2))], _0x9be1a5 = _0x4aabff['_physicObj' + 'ectsMap'][_0x409d27['btCollisio' + 'nObject_ge' + 'tUserIndex'](_0x409d27['btPersiste' + 'ntManifold' + '_getBody1'](_0x1e2fc2))], _0x1b66e1 = null, _0x2c7052 = null;
                if ((_0x401d99['isTrigger'] || _0x9be1a5['isTrigger']) && (_0x401d99['owner']['_needProce' + 'ssTriggers'] || _0x9be1a5['owner']['_needProce' + 'ssTriggers']))
                    for (var _0x29c9d9 = _0x409d27['btPersiste' + 'ntManifold' + '_getNumCon' + 'tacts'](_0x1e2fc2), _0x2cb096 = 0x0; _0x2cb096 < _0x29c9d9; _0x2cb096++) {
                        var _0x2220da = _0x409d27['btPersiste' + 'ntManifold' + '_getContac' + 'tPoint'](_0x1e2fc2, _0x2cb096), _0x34dc08 = _0x409d27['btManifold' + 'Point_getD' + 'istance'](_0x2220da);
                        if (_0x34dc08 <= 0x0) {
                            _0x2c7052 = (_0x1b66e1 = this['_collision' + 'sUtils']['getCollisi' + 'on'](_0x401d99, _0x9be1a5))['contacts'], (_0x3721df = _0x1b66e1['_updateFra' + 'me'] !== _0x542dcd) && (_0x1b66e1['_isTrigger'] = !0x0, _0x2c7052['length'] = 0x0);
                            break;
                        }
                    }
                else {
                    if ((_0x401d99['owner']['_needProce' + 'ssCollisio' + 'ns'] || _0x9be1a5['owner']['_needProce' + 'ssCollisio' + 'ns']) && (_0x401d99['_enablePro' + 'cessCollis' + 'ions'] || _0x9be1a5['_enablePro' + 'cessCollis' + 'ions'])) {
                        for (_0x29c9d9 = _0x409d27['btPersiste' + 'ntManifold' + '_getNumCon' + 'tacts'](_0x1e2fc2), _0x2cb096 = 0x0; _0x2cb096 < _0x29c9d9; _0x2cb096++)
                            if (_0x2220da = _0x409d27['btPersiste' + 'ntManifold' + '_getContac' + 'tPoint'](_0x1e2fc2, _0x2cb096), (_0x34dc08 = _0x409d27['btManifold' + 'Point_getD' + 'istance'](_0x2220da)) <= 0x0) {
                                var _0x23830a = this['_collision' + 'sUtils']['getContact' + 'Points']();
                                _0x23830a['colliderA'] = _0x401d99, _0x23830a['colliderB'] = _0x9be1a5, _0x23830a['distance'] = _0x34dc08;
                                var _0x3c5883 = _0x409d27['btManifold' + 'Point_get_' + 'm_normalWo' + 'rldOnB'](_0x2220da), _0x6edd1a = _0x23830a['normal'];
                                _0x6edd1a['x'] = -_0x409d27['btVector3_' + 'x'](_0x3c5883), _0x6edd1a['y'] = _0x409d27['btVector3_' + 'y'](_0x3c5883), _0x6edd1a['z'] = _0x409d27['btVector3_' + 'z'](_0x3c5883);
                                var _0x4a2175 = _0x409d27['btManifold' + 'Point_get_' + 'm_position' + 'WorldOnA'](_0x2220da), _0x1fcb2d = _0x23830a['positionOn' + 'A'];
                                _0x1fcb2d['x'] = -_0x409d27['btVector3_' + 'x'](_0x4a2175), _0x1fcb2d['y'] = _0x409d27['btVector3_' + 'y'](_0x4a2175), _0x1fcb2d['z'] = _0x409d27['btVector3_' + 'z'](_0x4a2175);
                                var _0xa90789 = _0x409d27['btManifold' + 'Point_get_' + 'm_position' + 'WorldOnB'](_0x2220da), _0x142a9e = _0x23830a['positionOn' + 'B'];
                                _0x142a9e['x'] = -_0x409d27['btVector3_' + 'x'](_0xa90789), _0x142a9e['y'] = _0x409d27['btVector3_' + 'y'](_0xa90789), _0x142a9e['z'] = _0x409d27['btVector3_' + 'z'](_0xa90789), _0x1b66e1 || (_0x2c7052 = (_0x1b66e1 = this['_collision' + 'sUtils']['getCollisi' + 'on'](_0x401d99, _0x9be1a5))['contacts'], (_0x3721df = _0x1b66e1['_updateFra' + 'me'] !== _0x542dcd) && (_0x1b66e1['_isTrigger'] = !0x1, _0x2c7052['length'] = 0x0)), _0x2c7052['push'](_0x23830a);
                            }
                    }
                }
                _0x1b66e1 && _0x3721df && (this['_currentFr' + 'ameCollisi' + 'ons']['push'](_0x1b66e1), _0x1b66e1['_setUpdate' + 'Frame'](_0x542dcd));
            }
        }
        ['_eventScri' + 'pts']() {
            for (var _0x4593c3 = _0x33d6e0['Stat']['loopCount'], _0x10d965 = 0x0, _0x5ca80f = this['_currentFr' + 'ameCollisi' + 'ons']['length']; _0x10d965 < _0x5ca80f; _0x10d965++) {
                var _0x28c41e = this['_currentFr' + 'ameCollisi' + 'ons'][_0x10d965], _0x16ada4 = _0x28c41e['_colliderA'], _0x2b733d = _0x28c41e['_colliderB'];
                if (!_0x16ada4['destroyed'] && !_0x2b733d['destroyed']) {
                    if (_0x4593c3 - _0x28c41e['_lastUpdat' + 'eFrame'] == 0x1) {
                        var _0x57e7aa = _0x16ada4['owner'], _0xa04745 = _0x57e7aa['_scripts'];
                        if (_0xa04745) {
                            if (_0x28c41e['_isTrigger']) {
                                if (_0x57e7aa['_needProce' + 'ssTriggers']) {
                                    for (var _0x50817e = 0x0, _0x3cb880 = _0xa04745['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0xa04745[_0x50817e]['onTriggerS' + 'tay'](_0x2b733d);
                                }
                            } else {
                                if (_0x57e7aa['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0xa04745['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0x28c41e['other'] = _0x2b733d, _0xa04745[_0x50817e]['onCollisio' + 'nStay'](_0x28c41e);
                                }
                            }
                        }
                        var _0x2ee967 = _0x2b733d['owner'], _0x4895c = _0x2ee967['_scripts'];
                        if (_0x4895c) {
                            if (_0x28c41e['_isTrigger']) {
                                if (_0x2ee967['_needProce' + 'ssTriggers']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0x4895c['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0x4895c[_0x50817e]['onTriggerS' + 'tay'](_0x16ada4);
                                }
                            } else {
                                if (_0x2ee967['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0x4895c['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0x28c41e['other'] = _0x16ada4, _0x4895c[_0x50817e]['onCollisio' + 'nStay'](_0x28c41e);
                                }
                            }
                        }
                    } else {
                        if (_0xa04745 = (_0x57e7aa = _0x16ada4['owner'])['_scripts']) {
                            if (_0x28c41e['_isTrigger']) {
                                if (_0x57e7aa['_needProce' + 'ssTriggers']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0xa04745['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0xa04745[_0x50817e]['onTriggerE' + 'nter'](_0x2b733d);
                                }
                            } else {
                                if (_0x57e7aa['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0xa04745['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0x28c41e['other'] = _0x2b733d, _0xa04745[_0x50817e]['onCollisio' + 'nEnter'](_0x28c41e);
                                }
                            }
                        }
                        if (_0x4895c = (_0x2ee967 = _0x2b733d['owner'])['_scripts']) {
                            if (_0x28c41e['_isTrigger']) {
                                if (_0x2ee967['_needProce' + 'ssTriggers']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0x4895c['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0x4895c[_0x50817e]['onTriggerE' + 'nter'](_0x16ada4);
                                }
                            } else {
                                if (_0x2ee967['_needProce' + 'ssCollisio' + 'ns']) {
                                    for (_0x50817e = 0x0, _0x3cb880 = _0x4895c['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                        _0x28c41e['other'] = _0x16ada4, _0x4895c[_0x50817e]['onCollisio' + 'nEnter'](_0x28c41e);
                                }
                            }
                        }
                    }
                }
            }
            for (_0x10d965 = 0x0, _0x5ca80f = this['_previousF' + 'rameCollis' + 'ions']['length']; _0x10d965 < _0x5ca80f; _0x10d965++) {
                var _0x110168 = this['_previousF' + 'rameCollis' + 'ions'][_0x10d965], _0x3dfff8 = _0x110168['_colliderA'], _0x39d77c = _0x110168['_colliderB'];
                if (!_0x3dfff8['destroyed'] && !_0x39d77c['destroyed'] && _0x4593c3 - _0x110168['_updateFra' + 'me'] == 0x1) {
                    if (this['_collision' + 'sUtils']['recoverCol' + 'lision'](_0x110168), _0xa04745 = (_0x57e7aa = _0x3dfff8['owner'])['_scripts']) {
                        if (_0x110168['_isTrigger']) {
                            if (_0x57e7aa['_needProce' + 'ssTriggers']) {
                                for (_0x50817e = 0x0, _0x3cb880 = _0xa04745['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                    _0xa04745[_0x50817e]['onTriggerE' + 'xit'](_0x39d77c);
                            }
                        } else {
                            if (_0x57e7aa['_needProce' + 'ssCollisio' + 'ns']) {
                                for (_0x50817e = 0x0, _0x3cb880 = _0xa04745['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                    _0x110168['other'] = _0x39d77c, _0xa04745[_0x50817e]['onCollisio' + 'nExit'](_0x110168);
                            }
                        }
                    }
                    if (_0x4895c = (_0x2ee967 = _0x39d77c['owner'])['_scripts']) {
                        if (_0x110168['_isTrigger']) {
                            if (_0x2ee967['_needProce' + 'ssTriggers']) {
                                for (_0x50817e = 0x0, _0x3cb880 = _0x4895c['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                    _0x4895c[_0x50817e]['onTriggerE' + 'xit'](_0x3dfff8);
                            }
                        } else {
                            if (_0x2ee967['_needProce' + 'ssCollisio' + 'ns']) {
                                for (_0x50817e = 0x0, _0x3cb880 = _0x4895c['length']; _0x50817e < _0x3cb880; _0x50817e++)
                                    _0x110168['other'] = _0x3dfff8, _0x4895c[_0x50817e]['onCollisio' + 'nExit'](_0x110168);
                            }
                        }
                    }
                }
            }
        }
        ['clearForce' + 's']() {
            if (!this['_btDiscret' + 'eDynamicsW' + 'orld'])
                throw 'Cannot\x20per' + 'form\x20this\x20' + 'action\x20whe' + 'n\x20the\x20phys' + 'ics\x20engine' + '\x20is\x20set\x20to' + '\x20Collision' + 'sOnly';
            _0x10fe89['_bullet']['btDiscrete' + 'DynamicsWo' + 'rld_clearF' + 'orces'](this['_btDiscret' + 'eDynamicsW' + 'orld']);
        }
    }
    _0xa3f18a['PHYSICSENG' + 'INEFLAGS_N' + 'ONE'] = 0x0, _0xa3f18a['PHYSICSENG' + 'INEFLAGS_C' + 'OLLISIONSO' + 'NLY'] = 0x1, _0xa3f18a['PHYSICSENG' + 'INEFLAGS_S' + 'OFTBODYSUP' + 'PORT'] = 0x2, _0xa3f18a['PHYSICSENG' + 'INEFLAGS_M' + 'ULTITHREAD' + 'ED'] = 0x4, _0xa3f18a['PHYSICSENG' + 'INEFLAGS_U' + 'SEHARDWARE' + 'WHENPOSSIB' + 'LE'] = 0x8, _0xa3f18a['SOLVERMODE' + '_RANDMIZE_' + 'ORDER'] = 0x1, _0xa3f18a['SOLVERMODE' + '_FRICTION_' + 'SEPARATE'] = 0x2, _0xa3f18a['SOLVERMODE' + '_USE_WARMS' + 'TARTING'] = 0x4, _0xa3f18a['SOLVERMODE' + '_USE_2_FRI' + 'CTION_DIRE' + 'CTIONS'] = 0x10, _0xa3f18a['SOLVERMODE' + '_ENABLE_FR' + 'ICTION_DIR' + 'ECTION_CAC' + 'HING'] = 0x20, _0xa3f18a['SOLVERMODE' + '_DISABLE_V' + 'ELOCITY_DE' + 'PENDENT_FR' + 'ICTION_DIR' + 'ECTION'] = 0x40, _0xa3f18a['SOLVERMODE' + '_CACHE_FRI' + 'ENDLY'] = 0x80, _0xa3f18a['SOLVERMODE' + '_SIMD'] = 0x100, _0xa3f18a['SOLVERMODE' + '_INTERLEAV' + 'E_CONTACT_' + 'AND_FRICTI' + 'ON_CONSTRA' + 'INTS'] = 0x200, _0xa3f18a['SOLVERMODE' + '_ALLOW_ZER' + 'O_LENGTH_F' + 'RICTION_DI' + 'RECTIONS'] = 0x400, _0xa3f18a['_tempVecto' + 'r30'] = new _0x4795b3(), _0xa3f18a['disableSim' + 'ulation'] = !0x1;
    class _0x3e5163 {
        constructor() {
            this['_eventList'] = [], this['_mouseTouc' + 'h'] = new _0xba35fc(), this['_touchPool'] = [], this['_touches'] = new _0x4617c4(), this['_multiTouc' + 'hEnabled'] = !0x0, this['_pushEvent' + 'List'] = (_0x4eebbd => {
                _0x4eebbd['cancelable'] && _0x4eebbd['preventDef' + 'ault'](), this['_eventList']['push'](_0x4eebbd);
            })['bind'](this);
        }
        ['__init__'](_0x346252, _0x50a30f) {
            this['_scene'] = _0x50a30f, _0x346252['oncontextm' + 'enu'] = function (_0x34c8c3) {
                return !0x1;
            };
        }
        ['_onCanvasE' + 'vent'](_0x138be4) {
            _0x138be4['addEventLi' + 'stener']('mousedown', this['_pushEvent' + 'List']), _0x138be4['addEventLi' + 'stener']('mouseup', this['_pushEvent' + 'List'], !0x0), _0x138be4['addEventLi' + 'stener']('mousemove', this['_pushEvent' + 'List'], !0x0), _0x138be4['addEventLi' + 'stener']('touchstart', this['_pushEvent' + 'List']), _0x138be4['addEventLi' + 'stener']('touchend', this['_pushEvent' + 'List'], !0x0), _0x138be4['addEventLi' + 'stener']('touchmove', this['_pushEvent' + 'List'], !0x0), _0x138be4['addEventLi' + 'stener']('touchcance' + 'l', this['_pushEvent' + 'List'], !0x0);
        }
        ['_offCanvas' + 'Event'](_0x49999e) {
            _0x49999e['removeEven' + 'tListener']('mousedown', this['_pushEvent' + 'List']), _0x49999e['removeEven' + 'tListener']('mouseup', this['_pushEvent' + 'List'], !0x0), _0x49999e['removeEven' + 'tListener']('mousemove', this['_pushEvent' + 'List'], !0x0), _0x49999e['removeEven' + 'tListener']('touchstart', this['_pushEvent' + 'List']), _0x49999e['removeEven' + 'tListener']('touchend', this['_pushEvent' + 'List'], !0x0), _0x49999e['removeEven' + 'tListener']('touchmove', this['_pushEvent' + 'List'], !0x0), _0x49999e['removeEven' + 'tListener']('touchcance' + 'l', this['_pushEvent' + 'List'], !0x0), this['_eventList']['length'] = 0x0, this['_touches']['clear']();
        }
        ['touchCount']() {
            return this['_touches']['length'];
        }
        get ['multiTouch' + 'Enabled']() {
            return this['_multiTouc' + 'hEnabled'];
        }
        set ['multiTouch' + 'Enabled'](_0x17db84) {
            this['_multiTouc' + 'hEnabled'] = _0x17db84;
        }
        ['_getTouch'](_0x1642d1) {
            var _0x15c177 = this['_touchPool'][_0x1642d1];
            return _0x15c177 || (_0x15c177 = new _0x46c15e(), this['_touchPool'][_0x1642d1] = _0x15c177, _0x15c177['_identifie' + 'r'] = _0x1642d1), _0x15c177;
        }
        ['_mouseTouc' + 'hDown']() {
            var _0x497106 = this['_mouseTouc' + 'h'], _0x1e2229 = _0x497106['sprite'];
            if (_0x497106['_pressedSp' + 'rite'] = _0x1e2229, _0x497106['_pressedLo' + 'opCount'] = _0x33d6e0['Stat']['loopCount'], _0x1e2229) {
                var _0x243f02 = _0x1e2229['_scripts'];
                if (_0x243f02) {
                    for (var _0x3f7e7f = 0x0, _0x6f880a = _0x243f02['length']; _0x3f7e7f < _0x6f880a; _0x3f7e7f++)
                        _0x243f02[_0x3f7e7f]['onMouseDow' + 'n']();
                }
            }
        }
        ['_mouseTouc' + 'hUp']() {
            var _0xfd4f86, _0x11a660, _0x1e4a9b = this['_mouseTouc' + 'h'], _0x272fe1 = _0x1e4a9b['_pressedSp' + 'rite'];
            _0x1e4a9b['_pressedSp' + 'rite'] = null, _0x1e4a9b['_pressedLo' + 'opCount'] = -0x1;
            var _0x37333e = _0x1e4a9b['sprite'];
            if (_0x37333e && _0x37333e === _0x272fe1) {
                var _0x186685 = _0x37333e['_scripts'];
                if (_0x186685) {
                    for (_0xfd4f86 = 0x0, _0x11a660 = _0x186685['length']; _0xfd4f86 < _0x11a660; _0xfd4f86++)
                        _0x186685[_0xfd4f86]['onMouseCli' + 'ck']();
                }
            }
            if (_0x272fe1) {
                var _0x545bfa = _0x272fe1['_scripts'];
                if (_0x545bfa) {
                    for (_0xfd4f86 = 0x0, _0x11a660 = _0x545bfa['length']; _0xfd4f86 < _0x11a660; _0xfd4f86++)
                        _0x545bfa[_0xfd4f86]['onMouseUp']();
                }
            }
        }
        ['_mouseTouc' + 'hRayCast'](_0x2a31a6) {
            var _0x5a86ab = _0x3e5163['_tempHitRe' + 'sult0'], _0x8b8c1f = _0x3e5163['_tempVecto' + 'r20'], _0x21fdc1 = _0x3e5163['_tempRay0'];
            _0x5a86ab['succeeded'] = !0x1;
            var _0x7aebce = this['_mouseTouc' + 'h']['mousePosit' + 'ionX'], _0x4c384b = this['_mouseTouc' + 'h']['mousePosit' + 'ionY'];
            _0x8b8c1f['x'] = _0x7aebce, _0x8b8c1f['y'] = _0x4c384b;
            for (var _0x4287b5 = _0x2a31a6['length'] - 0x1; _0x4287b5 >= 0x0; _0x4287b5--) {
                var _0xc88abd = _0x2a31a6[_0x4287b5], _0x5020ed = _0xc88abd['viewport'];
                if (_0x8b8c1f['x'] >= _0x5020ed['x'] && _0x8b8c1f['y'] >= _0x5020ed['y'] && _0x8b8c1f['x'] <= _0x5020ed['width'] && _0x8b8c1f['y'] <= _0x5020ed['height']) {
                    if (_0xc88abd['viewportPo' + 'intToRay'](_0x8b8c1f, _0x21fdc1), this['_scene']['_physicsSi' + 'mulation']['rayCast'](_0x21fdc1, _0x5a86ab) || _0xc88abd['clearFlag'] === _0x293adb['CLEARFLAG_' + 'SOLIDCOLOR'] || _0xc88abd['clearFlag'] === _0x293adb['CLEARFLAG_' + 'SKY'])
                        break;
                }
            }
            var _0x221e16 = this['_mouseTouc' + 'h'], _0x786d5c = _0x221e16['sprite'];
            if (_0x5a86ab['succeeded']) {
                var _0x4aa54a = _0x5a86ab['collider']['owner'];
                _0x221e16['sprite'] = _0x4aa54a;
                var _0x24b029 = _0x4aa54a['_scripts'];
                if (_0x786d5c !== _0x4aa54a && _0x24b029) {
                    for (var _0x10bc1a = 0x0, _0x561d6a = _0x24b029['length']; _0x10bc1a < _0x561d6a; _0x10bc1a++)
                        _0x24b029[_0x10bc1a]['onMouseEnt' + 'er']();
                }
            } else
                _0x221e16['sprite'] = null;
            if (_0x786d5c && _0x786d5c !== _0x4aa54a) {
                var _0x2a13ff = _0x786d5c['_scripts'];
                if (_0x2a13ff) {
                    for (_0x10bc1a = 0x0, _0x561d6a = _0x2a13ff['length']; _0x10bc1a < _0x561d6a; _0x10bc1a++)
                        _0x2a13ff[_0x10bc1a]['onMouseOut']();
                }
            }
        }
        ['_changeTou' + 'ches'](_0x44f45f, _0x348503) {
            for (var _0x8f710e = 0x0, _0x2b9256 = 0x0, _0x3789e0 = this['_touches']['length'], _0x5f0e55 = 0x0, _0x5a66d0 = _0x44f45f['length']; _0x5f0e55 < _0x5a66d0; _0x5f0e55++) {
                var _0xb1c8a6 = _0x44f45f[_0x5f0e55], _0x59a2e2 = _0xb1c8a6['identifier'];
                if (this['_multiTouc' + 'hEnabled'] || 0x0 === _0x59a2e2) {
                    var _0x2bac2a = this['_getTouch'](_0x59a2e2), _0x257b40 = _0x2bac2a['_position'], _0x319739 = _0x3e5163['_tempPoint'];
                    _0x319739['setTo'](_0xb1c8a6['pageX'], _0xb1c8a6['pageY']), _0x33d6e0['ILaya']['stage']['_canvasTra' + 'nsform']['invertTran' + 'sformPoint'](_0x319739);
                    var _0x2447ea = _0x319739['x'], _0x5a7103 = _0x319739['y'];
                    switch (_0x348503) {
                    case 0x0:
                        this['_touches']['add'](_0x2bac2a), _0x8f710e += _0x2447ea, _0x2b9256 += _0x5a7103;
                        break;
                    case 0x1:
                        this['_touches']['remove'](_0x2bac2a), _0x8f710e -= _0x2447ea, _0x2b9256 -= _0x5a7103;
                        break;
                    case 0x2:
                        _0x8f710e = _0x2447ea - _0x257b40['x'], _0x2b9256 = _0x5a7103 - _0x257b40['y'];
                    }
                    _0x257b40['x'] = _0x2447ea, _0x257b40['y'] = _0x5a7103;
                }
            }
            var _0x5d6c05 = this['_touches']['length'];
            0x0 === _0x5d6c05 ? (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = 0x0, this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = 0x0) : (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = (this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] * _0x3789e0 + _0x8f710e) / _0x5d6c05, this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = (this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] * _0x3789e0 + _0x2b9256) / _0x5d6c05);
        }
        ['_update']() {
            var _0x232f25, _0x19cb1d, _0x5bb4fb, _0x52bcb0, _0x5ce78a = _0x10fe89['_enablePhy' + 'sics'] && !_0xa3f18a['disableSim' + 'ulation'];
            _0x19cb1d = this['_eventList']['length'];
            var _0x479008 = this['_scene']['_cameraPoo' + 'l'];
            if (_0x19cb1d > 0x0) {
                var _0x543b88 = !0x1;
                for (_0x232f25 = 0x0; _0x232f25 < _0x19cb1d; _0x232f25++) {
                    var _0x4705eb = this['_eventList'][_0x232f25];
                    switch (_0x4705eb['type']) {
                    case 'mousedown':
                        _0x5ce78a && this['_mouseTouc' + 'hDown']();
                        break;
                    case 'mouseup':
                        _0x5ce78a && this['_mouseTouc' + 'hUp']();
                        break;
                    case 'mousemove':
                        var _0xf2d008 = _0x3e5163['_tempPoint'];
                        _0xf2d008['setTo'](_0x4705eb['pageX'], _0x4705eb['pageY']), _0x33d6e0['ILaya']['stage']['_canvasTra' + 'nsform']['invertTran' + 'sformPoint'](_0xf2d008), this['_mouseTouc' + 'h']['mousePosit' + 'ionX'] = _0xf2d008['x'], this['_mouseTouc' + 'h']['mousePosit' + 'ionY'] = _0xf2d008['y'], _0x5ce78a && (_0x543b88 = !0x0);
                        break;
                    case 'touchstart':
                        var _0x1df9cc = this['_touches']['length'];
                        this['_changeTou' + 'ches'](_0x4705eb['changedTou' + 'ches'], 0x0), _0x5ce78a && (_0x543b88 = !0x0, 0x0 === _0x1df9cc && this['_mouseTouc' + 'hDown']());
                        break;
                    case 'touchend':
                    case 'touchcance' + 'l':
                        this['_changeTou' + 'ches'](_0x4705eb['changedTou' + 'ches'], 0x1), _0x5ce78a && 0x0 === this['_touches']['length'] && this['_mouseTouc' + 'hUp']();
                        break;
                    case 'touchmove':
                        this['_changeTou' + 'ches'](_0x4705eb['changedTou' + 'ches'], 0x2), _0x5ce78a && (_0x543b88 = !0x0);
                        break;
                    default:
                        throw 'Input3D:un' + 'konwn\x20even' + 't\x20type.';
                    }
                }
                _0x543b88 && this['_mouseTouc' + 'hRayCast'](_0x479008), this['_eventList']['length'] = 0x0;
            }
            if (_0x5ce78a) {
                var _0x3cb16f = this['_mouseTouc' + 'h'], _0x2e1b20 = _0x3cb16f['_pressedSp' + 'rite'];
                if (_0x2e1b20 && _0x33d6e0['Stat']['loopCount'] > _0x3cb16f['_pressedLo' + 'opCount']) {
                    var _0x15212c = _0x2e1b20['_scripts'];
                    if (_0x15212c) {
                        for (_0x5bb4fb = 0x0, _0x52bcb0 = _0x15212c['length']; _0x5bb4fb < _0x52bcb0; _0x5bb4fb++)
                            _0x15212c[_0x5bb4fb]['onMouseDra' + 'g']();
                    }
                }
                var _0x5811ba = _0x3cb16f['sprite'];
                if (_0x5811ba) {
                    var _0x230fbf = _0x5811ba['_scripts'];
                    if (_0x230fbf) {
                        for (_0x5bb4fb = 0x0, _0x52bcb0 = _0x230fbf['length']; _0x5bb4fb < _0x52bcb0; _0x5bb4fb++)
                            _0x230fbf[_0x5bb4fb]['onMouseOve' + 'r']();
                    }
                }
            }
        }
        ['getTouch'](_0x214be9) {
            return _0x214be9 < this['_touches']['length'] ? this['_touches']['elements'][_0x214be9] : null;
        }
    }
    _0x3e5163['_tempPoint'] = new _0x33d6e0['Point'](), _0x3e5163['_tempVecto' + 'r20'] = new _0x4c44b6(), _0x3e5163['_tempRay0'] = new _0x58eead(new _0x4795b3(), new _0x4795b3()), _0x3e5163['_tempHitRe' + 'sult0'] = new _0x1431fa();
    class _0x93820f {
        constructor() {
            this['flags'] = 0x0, this['maxSubStep' + 's'] = 0x1, this['fixedTimeS' + 'tep'] = 0x1 / 0x3c;
        }
    }
    class _0x8522a4 {
        static get ['vertexDecl' + 'aration']() {
            return _0x8522a4['_vertexDec' + 'laration'];
        }
        static ['__init__']() {
            _0x8522a4['_vertexDec' + 'laration'] = new _0x3c5011(0x14, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector3'], _0xe3d46['MESH_POSIT' + 'ION0']),
                new _0x5c79c8(0xc, _0x43e6c5['Vector2'], _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'])
            ]);
        }
        get ['position']() {
            return this['_position'];
        }
        get ['textureCoo' + 'rdinate0']() {
            return this['_textureCo' + 'ordinate0'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x8522a4['_vertexDec' + 'laration'];
        }
        constructor(_0x2d4ad1, _0x25631a) {
            this['_position'] = _0x2d4ad1, this['_textureCo' + 'ordinate0'] = _0x25631a;
        }
    }
    class _0x3fc537 extends _0x30b028 {
        constructor(_0x307193 = 0x30, _0x4d6d80 = 0x30) {
            super();
            var _0x570219 = _0x33d6e0['LayaGL']['instance'];
            this['_stacks'] = _0x307193, this['_slices'] = _0x4d6d80;
            for (var _0x5411ac = _0x8522a4['vertexDecl' + 'aration'], _0xf1a0fd = _0x5411ac['vertexStri' + 'de'] / 0x4, _0xa18fe9 = (this['_stacks'] + 0x1) * (this['_slices'] + 0x1), _0x32e0c5 = 0x3 * this['_stacks'] * (this['_slices'] + 0x1) * 0x2, _0x18ab62 = new Float32Array(_0xa18fe9 * _0xf1a0fd), _0x1cb9e6 = new Uint16Array(_0x32e0c5), _0x58aff2 = Math['PI'] / this['_stacks'], _0x1c7684 = 0x2 * Math['PI'] / this['_slices'], _0x3d5270 = 0x0, _0x5e75ef = 0x0, _0x5c7671 = 0x0, _0x2fe69d = 0x0; _0x2fe69d < this['_stacks'] + 0x1; _0x2fe69d++)
                for (var _0x57d619 = Math['sin'](_0x2fe69d * _0x58aff2), _0x3467e6 = Math['cos'](_0x2fe69d * _0x58aff2), _0x574462 = 0x0; _0x574462 < this['_slices'] + 0x1; _0x574462++) {
                    var _0x344472 = _0x57d619 * Math['sin'](_0x574462 * _0x1c7684), _0x2a6740 = _0x57d619 * Math['cos'](_0x574462 * _0x1c7684);
                    _0x18ab62[_0x5e75ef + 0x0] = _0x344472 * _0x3fc537['_radius'], _0x18ab62[_0x5e75ef + 0x1] = _0x3467e6 * _0x3fc537['_radius'], _0x18ab62[_0x5e75ef + 0x2] = _0x2a6740 * _0x3fc537['_radius'], _0x18ab62[_0x5e75ef + 0x3] = -_0x574462 / this['_slices'] + 0.75, _0x18ab62[_0x5e75ef + 0x4] = _0x2fe69d / this['_stacks'], _0x5e75ef += _0xf1a0fd, _0x2fe69d != this['_stacks'] - 0x1 && (_0x1cb9e6[_0x5c7671++] = _0x3d5270 + 0x1, _0x1cb9e6[_0x5c7671++] = _0x3d5270, _0x1cb9e6[_0x5c7671++] = _0x3d5270 + (this['_slices'] + 0x1), _0x1cb9e6[_0x5c7671++] = _0x3d5270 + (this['_slices'] + 0x1), _0x1cb9e6[_0x5c7671++] = _0x3d5270, _0x1cb9e6[_0x5c7671++] = _0x3d5270 + this['_slices'], _0x3d5270++);
                }
            this['_vertexBuf' + 'fer'] = new _0x5dfaba(0x4 * _0x18ab62['length'], _0x570219['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x5411ac, this['_indexBuff' + 'er'] = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], _0x1cb9e6['length'], _0x570219['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['setData'](_0x18ab62['buffer']), this['_indexBuff' + 'er']['setData'](_0x1cb9e6);
            var _0x30e006 = new _0x59c541();
            _0x30e006['bind'](), _0x30e006['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), _0x30e006['applyIndex' + 'Buffer'](this['_indexBuff' + 'er']), _0x30e006['unBind'](), this['_bufferSta' + 'te'] = _0x30e006;
        }
        static ['__init__']() {
            _0x3fc537['instance'] = new _0x3fc537();
        }
        get ['stacks']() {
            return this['_stacks'];
        }
        get ['slices']() {
            return this['_slices'];
        }
        ['_render'](_0x181542) {
            var _0x1d6bc7 = _0x33d6e0['LayaGL']['instance'], _0x2c68c4 = this['_indexBuff' + 'er']['indexCount'];
            _0x1d6bc7['drawElemen' + 'ts'](_0x1d6bc7['TRIANGLES'], _0x2c68c4, _0x1d6bc7['UNSIGNED_S' + 'HORT'], 0x0), _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x2c68c4 / 0x3, _0x33d6e0['Stat']['renderBatc' + 'hes']++;
        }
    }
    _0x3fc537['_radius'] = 0x1;
    class _0x11515c {
        constructor() {
            this['_length'] = 0x0, this['_elements'] = [];
        }
        ['add'](_0x1e0451) {
            this['_length'] === this['_elements']['length'] ? this['_elements']['push'](_0x1e0451) : this['_elements'][this['_length']] = _0x1e0451, this['_length']++;
        }
        ['remove'](_0x3157a5) {
            var _0x4237b8 = this['_elements']['indexOf'](_0x3157a5);
            if (this['_length']--, _0x4237b8 !== this['_length']) {
                var _0x4c611 = this['_elements'][this['_length']];
                this['_elements'][_0x4237b8] = _0x4c611;
            }
        }
        ['shift']() {
            return this['_length']--, this['_elements']['shift']();
        }
    }
    class _0x41a548 extends _0x11515c {
        ['getSunLigh' + 't']() {
            for (var _0x1d9157, _0x4370ad = -0x1, _0x2be7b5 = this['_elements'], _0x597de9 = 0x0; _0x597de9 < this['_length']; _0x597de9++) {
                var _0x5be15e = _0x2be7b5[_0x597de9]['_intensity'];
                _0x4370ad < _0x5be15e && (_0x4370ad = _0x5be15e, _0x1d9157 = _0x597de9);
            }
            return _0x1d9157;
        }
    }
    class _0x4f18be extends _0x11515c {
        ['remove'](_0x6c56ec) {
            var _0x1bc69f = this['_elements']['indexOf'](_0x6c56ec);
            this['_elements']['splice'](_0x1bc69f, 0x1), this['_length']--;
        }
    }
    class _0x3cb747 extends _0x42e697 {
        constructor(_0x24d4fb, _0x4ab838) {
            super(), this['_floatCoun' + 'tPerVertic' + 'es'] = 0x7, this['_minUpdate'] = Number['MAX_VALUE'], this['_maxUpdate'] = Number['MIN_VALUE'], this['_bufferSta' + 'te'] = new _0x59c541(), this['_floatBoun' + 'd'] = new Float32Array(0x6), this['_calculate' + 'Bound'] = !0x1, this['_maxLineCo' + 'unt'] = 0x0, this['_lineCount'] = 0x0;
            var _0x4878aa = 0x2 * _0x4ab838;
            this['_owner'] = _0x24d4fb, this['_maxLineCo' + 'unt'] = _0x4ab838, this['_vertices'] = new Float32Array(_0x4878aa * this['_floatCoun' + 'tPerVertic' + 'es']), this['_vertexBuf' + 'fer'] = new _0x5dfaba(_0x3243fd['vertexDecl' + 'aration']['vertexStri' + 'de'] * _0x4878aa, _0x33d6e0['LayaGL']['instance']['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x3243fd['vertexDecl' + 'aration'], this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind']();
            var _0x5bf09f = _0x3cb747['_tempVecto' + 'r0'], _0x36ca99 = _0x3cb747['_tempVecto' + 'r1'];
            _0x5bf09f['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0x36ca99['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), this['_bounds'] = new _0x5a0bdd(_0x5bf09f, _0x36ca99);
        }
        ['_getType']() {
            return _0x3cb747['_type'];
        }
        ['_resizeLin' + 'eData'](_0x1fd041) {
            var _0x3e7429 = 0x2 * _0x1fd041, _0x48fb93 = this['_vertices'];
            this['_vertexBuf' + 'fer']['destroy'](), this['_maxLineCo' + 'unt'] = _0x1fd041;
            var _0x36e92e = _0x3e7429 * this['_floatCoun' + 'tPerVertic' + 'es'];
            this['_vertices'] = new Float32Array(_0x36e92e), this['_vertexBuf' + 'fer'] = new _0x5dfaba(_0x3243fd['vertexDecl' + 'aration']['vertexStri' + 'de'] * _0x3e7429, _0x33d6e0['LayaGL']['instance']['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'] = _0x3243fd['vertexDecl' + 'aration'], _0x36e92e < _0x48fb93['length'] ? (this['_vertices']['set'](new Float32Array(_0x48fb93['buffer'], 0x0, _0x36e92e)), this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, 0x4 * _0x36e92e)) : (this['_vertices']['set'](_0x48fb93), this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x0, 0x0, 0x4 * _0x48fb93['length'])), this['_bufferSta' + 'te']['bind'](), this['_bufferSta' + 'te']['applyVerte' + 'xBuffer'](this['_vertexBuf' + 'fer']), this['_bufferSta' + 'te']['unBind']();
        }
        ['_updateLin' + 'eVertices'](_0x385f90, _0x5d38a9, _0x45ed01, _0x20c4d1, _0x38ba6f) {
            _0x5d38a9 && (this['_vertices'][_0x385f90 + 0x0] = _0x5d38a9['x'], this['_vertices'][_0x385f90 + 0x1] = _0x5d38a9['y'], this['_vertices'][_0x385f90 + 0x2] = _0x5d38a9['z']), _0x20c4d1 && (this['_vertices'][_0x385f90 + 0x3] = _0x20c4d1['r'], this['_vertices'][_0x385f90 + 0x4] = _0x20c4d1['g'], this['_vertices'][_0x385f90 + 0x5] = _0x20c4d1['b'], this['_vertices'][_0x385f90 + 0x6] = _0x20c4d1['a']), _0x45ed01 && (this['_vertices'][_0x385f90 + 0x7] = _0x45ed01['x'], this['_vertices'][_0x385f90 + 0x8] = _0x45ed01['y'], this['_vertices'][_0x385f90 + 0x9] = _0x45ed01['z']), _0x38ba6f && (this['_vertices'][_0x385f90 + 0xa] = _0x38ba6f['r'], this['_vertices'][_0x385f90 + 0xb] = _0x38ba6f['g'], this['_vertices'][_0x385f90 + 0xc] = _0x38ba6f['b'], this['_vertices'][_0x385f90 + 0xd] = _0x38ba6f['a']), this['_minUpdate'] = Math['min'](this['_minUpdate'], _0x385f90), this['_maxUpdate'] = Math['max'](this['_maxUpdate'], _0x385f90 + 0x2 * this['_floatCoun' + 'tPerVertic' + 'es']);
            var _0x26f218 = this['_bounds'], _0x2a53b5 = this['_floatBoun' + 'd'], _0x219813 = _0x26f218['getMin'](), _0xe60680 = _0x26f218['getMax']();
            _0x4795b3['min'](_0x219813, _0x5d38a9, _0x219813), _0x4795b3['min'](_0x219813, _0x45ed01, _0x219813), _0x4795b3['max'](_0xe60680, _0x5d38a9, _0xe60680), _0x4795b3['max'](_0xe60680, _0x45ed01, _0xe60680), _0x26f218['setMin'](_0x219813), _0x26f218['setMax'](_0xe60680), _0x2a53b5[0x0] = _0x219813['x'], _0x2a53b5[0x1] = _0x219813['y'], _0x2a53b5[0x2] = _0x219813['z'], _0x2a53b5[0x3] = _0xe60680['x'], _0x2a53b5[0x4] = _0xe60680['y'], _0x2a53b5[0x5] = _0xe60680['z'];
        }
        ['_reCalcula' + 'teBound']() {
            if (this['_calculate' + 'Bound']) {
                var _0x1c5b44 = this['_vertices'], _0x2b2485 = _0x3cb747['_tempVecto' + 'r0'], _0x33cf74 = _0x3cb747['_tempVecto' + 'r1'];
                _0x2b2485['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0x33cf74['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']);
                for (var _0x3b9501 = 0x0; _0x3b9501 < 0x2 * this['_lineCount']; ++_0x3b9501) {
                    var _0x51c0a6 = this['_floatCoun' + 'tPerVertic' + 'es'] * _0x3b9501, _0x1ddb81 = _0x1c5b44[_0x51c0a6 + 0x0], _0x1b0327 = _0x1c5b44[_0x51c0a6 + 0x1], _0x1a6644 = _0x1c5b44[_0x51c0a6 + 0x2];
                    _0x2b2485['x'] = Math['min'](_0x1ddb81, _0x2b2485['x']), _0x2b2485['y'] = Math['min'](_0x1b0327, _0x2b2485['y']), _0x2b2485['z'] = Math['min'](_0x1a6644, _0x2b2485['z']), _0x33cf74['x'] = Math['max'](_0x1ddb81, _0x33cf74['x']), _0x33cf74['y'] = Math['max'](_0x1b0327, _0x33cf74['y']), _0x33cf74['z'] = Math['max'](_0x1a6644, _0x33cf74['z']);
                }
                this['_bounds']['setMin'](_0x2b2485), this['_bounds']['setMax'](_0x33cf74);
                var _0x587bfa = this['_floatBoun' + 'd'];
                _0x587bfa[0x0] = _0x2b2485['x'], _0x587bfa[0x1] = _0x2b2485['y'], _0x587bfa[0x2] = _0x2b2485['z'], _0x587bfa[0x3] = _0x33cf74['x'], _0x587bfa[0x4] = _0x33cf74['y'], _0x587bfa[0x5] = _0x33cf74['z'], this['_calculate' + 'Bound'] = !0x1;
            }
        }
        ['_removeLin' + 'eData'](_0x220194) {
            var _0x28e835 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es'], _0x4f8a58 = _0x220194 + 0x1, _0x5104c8 = _0x220194 * _0x28e835, _0x6685a = this['_vertices'], _0x40a620 = new Float32Array(_0x6685a['buffer'], _0x4f8a58 * _0x28e835 * 0x4, (this['_lineCount'] - _0x4f8a58) * _0x28e835);
            _0x6685a['set'](_0x40a620, _0x5104c8), this['_minUpdate'] = Math['min'](this['_minUpdate'], _0x5104c8), this['_maxUpdate'] = Math['max'](this['_maxUpdate'], _0x5104c8 + _0x40a620['length']), this['_lineCount']--;
            var _0x265bf5 = this['_floatBoun' + 'd'], _0x4bfbb4 = _0x6685a[_0x5104c8], _0x54685b = _0x6685a[_0x5104c8 + 0x1], _0x568b3f = _0x6685a[_0x5104c8 + 0x2], _0x3eac1e = _0x6685a[_0x5104c8 + 0x7], _0x23027a = _0x6685a[_0x5104c8 + 0x8], _0x35be02 = _0x6685a[_0x5104c8 + 0x9], _0x360e99 = _0x265bf5[0x0], _0x47c4b3 = _0x265bf5[0x1], _0x59f8be = _0x265bf5[0x2], _0x4fa293 = _0x265bf5[0x3], _0x3e31a7 = _0x265bf5[0x4], _0x5e0fe2 = _0x265bf5[0x5];
            _0x4bfbb4 !== _0x360e99 && _0x4bfbb4 !== _0x4fa293 && _0x54685b !== _0x47c4b3 && _0x54685b !== _0x3e31a7 && _0x568b3f !== _0x59f8be && _0x568b3f !== _0x5e0fe2 && _0x3eac1e !== _0x360e99 && _0x3eac1e !== _0x4fa293 && _0x23027a !== _0x47c4b3 && _0x23027a !== _0x3e31a7 && _0x35be02 !== _0x59f8be && _0x35be02 !== _0x5e0fe2 || (this['_calculate' + 'Bound'] = !0x0);
        }
        ['_updateLin' + 'eData'](_0x598c0e, _0x222be3, _0x29cdb8, _0x3e564d, _0x7fb9b6) {
            var _0x47d8ea = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es'];
            this['_updateLin' + 'eVertices'](_0x598c0e * _0x47d8ea, _0x222be3, _0x29cdb8, _0x3e564d, _0x7fb9b6);
        }
        ['_updateLin' + 'eDatas'](_0x1b5cf7, _0x56bee6) {
            for (var _0x3487a9 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es'], _0x1169fc = _0x56bee6['length'], _0x1aace4 = 0x0; _0x1aace4 < _0x1169fc; _0x1aace4++) {
                var _0x10a9d9 = _0x56bee6[_0x1aace4];
                this['_updateLin' + 'eVertices']((_0x1b5cf7 + _0x1aace4) * _0x3487a9, _0x10a9d9['startPosit' + 'ion'], _0x10a9d9['endPositio' + 'n'], _0x10a9d9['startColor'], _0x10a9d9['endColor']);
            }
        }
        ['_getLineDa' + 'ta'](_0x59f4ea, _0x45d877) {
            var _0x373042 = _0x45d877['startPosit' + 'ion'], _0x2d3fe5 = _0x45d877['startColor'], _0x1f33a1 = _0x45d877['endPositio' + 'n'], _0xc59d3a = _0x45d877['endColor'], _0x385827 = this['_vertices'], _0x394e7e = _0x59f4ea * this['_floatCoun' + 'tPerVertic' + 'es'] * 0x2;
            _0x373042['x'] = _0x385827[_0x394e7e + 0x0], _0x373042['y'] = _0x385827[_0x394e7e + 0x1], _0x373042['z'] = _0x385827[_0x394e7e + 0x2], _0x2d3fe5['r'] = _0x385827[_0x394e7e + 0x3], _0x2d3fe5['g'] = _0x385827[_0x394e7e + 0x4], _0x2d3fe5['b'] = _0x385827[_0x394e7e + 0x5], _0x2d3fe5['a'] = _0x385827[_0x394e7e + 0x6], _0x1f33a1['x'] = _0x385827[_0x394e7e + 0x7], _0x1f33a1['y'] = _0x385827[_0x394e7e + 0x8], _0x1f33a1['z'] = _0x385827[_0x394e7e + 0x9], _0xc59d3a['r'] = _0x385827[_0x394e7e + 0xa], _0xc59d3a['g'] = _0x385827[_0x394e7e + 0xb], _0xc59d3a['b'] = _0x385827[_0x394e7e + 0xc], _0xc59d3a['a'] = _0x385827[_0x394e7e + 0xd];
        }
        ['_prepareRe' + 'nder'](_0x22195d) {
            return !0x0;
        }
        ['_render'](_0xe8ab2c) {
            if (this['_minUpdate'] !== Number['MAX_VALUE'] && this['_maxUpdate'] !== Number['MIN_VALUE'] && (this['_vertexBuf' + 'fer']['setData'](this['_vertices']['buffer'], 0x4 * this['_minUpdate'], 0x4 * this['_minUpdate'], 0x4 * (this['_maxUpdate'] - this['_minUpdate'])), this['_minUpdate'] = Number['MAX_VALUE'], this['_maxUpdate'] = Number['MIN_VALUE']), this['_lineCount'] > 0x0) {
                this['_bufferSta' + 'te']['bind']();
                var _0x213814 = _0x33d6e0['LayaGL']['instance'];
                _0x213814['drawArrays'](_0x213814['LINES'], 0x0, 0x2 * this['_lineCount']), _0x33d6e0['Stat']['renderBatc' + 'hes']++;
            }
        }
        ['destroy']() {
            this['_destroyed'] || (super['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertexBuf' + 'fer'] = null, this['_vertices'] = null);
        }
    }
    _0x3cb747['_tempVecto' + 'r0'] = new _0x4795b3(), _0x3cb747['_tempVecto' + 'r1'] = new _0x4795b3(), _0x3cb747['_type'] = _0x42e697['_typeCount' + 'er']++;
    class _0x32541e extends _0x26d0eb {
        constructor(_0x15283c) {
            super(_0x15283c), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x16c2be();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            var _0x40a205 = this['_owner']['transform']['worldMatri' + 'x'], _0x56cd3d = this['_owner']['_geometryF' + 'ilter'];
            if (_0x56cd3d['_reCalcula' + 'teBound'](), _0x56cd3d['_bounds']['_tranform'](_0x40a205, this['_bounds']), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x5946f3 = this['_bounds']['getMin'](), _0x5443f3 = this['_bounds']['getMax'](), _0x340c9f = _0x2585ad['_cullingBu' + 'ffer'];
                _0x340c9f[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x5946f3['x'], _0x340c9f[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x5946f3['y'], _0x340c9f[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x5946f3['z'], _0x340c9f[this['_cullingBu' + 'fferIndex'] + 0x4] = _0x5443f3['x'], _0x340c9f[this['_cullingBu' + 'fferIndex'] + 0x5] = _0x5443f3['y'], _0x340c9f[this['_cullingBu' + 'fferIndex'] + 0x6] = _0x5443f3['z'];
            }
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x243954, _0x4c8ab7) {
            var _0x317800 = _0x243954['projection' + 'ViewMatrix'], _0x45b03f = this['_shaderVal' + 'ues'];
            if (_0x4c8ab7) {
                var _0x4d0c3a = _0x4c8ab7['worldMatri' + 'x'];
                _0x45b03f['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x4d0c3a), _0x16c2be['multiply'](_0x317800, _0x4d0c3a, this['_projectio' + 'nViewWorld' + 'Matrix']), _0x45b03f['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
            } else
                _0x45b03f['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x16c2be['DEFAULT']), _0x45b03f['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], _0x317800);
        }
    }
    class _0x595ba2 extends _0x33bc07 {
        get ['maxLineCou' + 'nt']() {
            return this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'];
        }
        set ['maxLineCou' + 'nt'](_0x217aab) {
            this['_geometryF' + 'ilter']['_resizeLin' + 'eData'](_0x217aab), this['_geometryF' + 'ilter']['_lineCount'] = Math['min'](this['_geometryF' + 'ilter']['_lineCount'], _0x217aab);
        }
        get ['lineCount']() {
            return this['_geometryF' + 'ilter']['_lineCount'];
        }
        set ['lineCount'](_0x61b3d9) {
            if (_0x61b3d9 > this['maxLineCou' + 'nt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20c' + 'an\x27t\x20large' + '\x20than\x20maxL' + 'ineCount';
            this['_geometryF' + 'ilter']['_lineCount'] = _0x61b3d9;
        }
        get ['pixelLineR' + 'enderer']() {
            return this['_render'];
        }
        constructor(_0x287fea = 0x2, _0x5d69b2 = null) {
            super(_0x5d69b2), this['_geometryF' + 'ilter'] = new _0x3cb747(this, _0x287fea), this['_render'] = new _0x32541e(this), this['_changeRen' + 'derObjects'](this['_render'], 0x0, _0x47a01b['defaultMat' + 'erial']);
        }
        ['_changeRen' + 'derObjects'](_0x50b3cc, _0x55473b, _0x310048) {
            var _0x3295b6 = this['_render']['_renderEle' + 'ments'];
            _0x310048 || (_0x310048 = _0x47a01b['defaultMat' + 'erial']);
            var _0x16fe02 = _0x3295b6[_0x55473b];
            _0x16fe02 || (_0x16fe02 = _0x3295b6[_0x55473b] = new _0x14112a()), _0x16fe02['setTransfo' + 'rm'](this['_transform']), _0x16fe02['setGeometr' + 'y'](this['_geometryF' + 'ilter']), _0x16fe02['render'] = this['_render'], _0x16fe02['material'] = _0x310048;
        }
        ['addLine'](_0x38c2a9, _0x1780da, _0x42d8c5, _0x50bc3d) {
            if (this['_geometryF' + 'ilter']['_lineCount'] === this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20h' + 'as\x20equal\x20w' + 'ith\x20maxLin' + 'eCount.';
            this['_geometryF' + 'ilter']['_updateLin' + 'eData'](this['_geometryF' + 'ilter']['_lineCount']++, _0x38c2a9, _0x1780da, _0x42d8c5, _0x50bc3d);
        }
        ['addLines'](_0x5b1b4d) {
            var _0x4e949f = this['_geometryF' + 'ilter']['_lineCount'], _0x14ced4 = _0x5b1b4d['length'];
            if (_0x4e949f + _0x14ced4 > this['_geometryF' + 'ilter']['_maxLineCo' + 'unt'])
                throw 'PixelLineS' + 'prite3D:\x20l' + 'ineCount\x20p' + 'lus\x20lines\x20' + 'count\x20must' + '\x20less\x20than' + '\x20maxLineCo' + 'unt.';
            this['_geometryF' + 'ilter']['_updateLin' + 'eDatas'](_0x4e949f, _0x5b1b4d), this['_geometryF' + 'ilter']['_lineCount'] += _0x14ced4;
        }
        ['removeLine'](_0x5824ed) {
            if (!(_0x5824ed < this['_geometryF' + 'ilter']['_lineCount']))
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_geometryF' + 'ilter']['_removeLin' + 'eData'](_0x5824ed);
        }
        ['setLine'](_0x3ae737, _0x12d85, _0x3abb5b, _0x27601d, _0x5296d1) {
            if (!(_0x3ae737 < this['_geometryF' + 'ilter']['_lineCount']))
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_geometryF' + 'ilter']['_updateLin' + 'eData'](_0x3ae737, _0x12d85, _0x3abb5b, _0x27601d, _0x5296d1);
        }
        ['getLine'](_0x3888ec, _0x467b4f) {
            if (!(_0x3888ec < this['lineCount']))
                throw 'PixelLineS' + 'prite3D:\x20i' + 'ndex\x20must\x20' + 'less\x20than\x20' + 'lineCount.';
            this['_geometryF' + 'ilter']['_getLineDa' + 'ta'](_0x3888ec, _0x467b4f);
        }
        ['clear']() {
            this['_geometryF' + 'ilter']['_lineCount'] = 0x0;
        }
        ['_create']() {
            return new _0x595ba2();
        }
    }
    class _0x2326e7 {
        constructor(_0x395798 = !0x1) {
            this['isTranspar' + 'ent'] = !0x1, this['elements'] = new _0x16b19d(), this['lastTransp' + 'arentRende' + 'rElement'] = null, this['lastTransp' + 'arentBatch' + 'ed'] = !0x1, this['isTranspar' + 'ent'] = _0x395798;
        }
        ['_compare'](_0x81b56c, _0xbe2f4d) {
            var _0x4b2622 = _0x81b56c['material']['renderQueu' + 'e'] - _0xbe2f4d['material']['renderQueu' + 'e'];
            return 0x0 === _0x4b2622 ? (this['isTranspar' + 'ent'] ? _0xbe2f4d['render']['_distanceF' + 'orSort'] - _0x81b56c['render']['_distanceF' + 'orSort'] : _0x81b56c['render']['_distanceF' + 'orSort'] - _0xbe2f4d['render']['_distanceF' + 'orSort']) + _0xbe2f4d['render']['sortingFud' + 'ge'] - _0x81b56c['render']['sortingFud' + 'ge'] : _0x4b2622;
        }
        ['_partition' + 'RenderObje' + 'ct'](_0x1fb29e, _0x447666) {
            for (var _0x5c5b1c = this['elements']['elements'], _0x4e7a51 = _0x5c5b1c[Math['floor']((_0x447666 + _0x1fb29e) / 0x2)]; _0x1fb29e <= _0x447666;) {
                for (; this['_compare'](_0x5c5b1c[_0x1fb29e], _0x4e7a51) < 0x0;)
                    _0x1fb29e++;
                for (; this['_compare'](_0x5c5b1c[_0x447666], _0x4e7a51) > 0x0;)
                    _0x447666--;
                if (_0x1fb29e < _0x447666) {
                    var _0x57f35b = _0x5c5b1c[_0x1fb29e];
                    _0x5c5b1c[_0x1fb29e] = _0x5c5b1c[_0x447666], _0x5c5b1c[_0x447666] = _0x57f35b, _0x1fb29e++, _0x447666--;
                } else {
                    if (_0x1fb29e === _0x447666) {
                        _0x1fb29e++;
                        break;
                    }
                }
            }
            return _0x1fb29e;
        }
        ['_quickSort'](_0x1e454d, _0x29c765) {
            if (this['elements']['length'] > 0x1) {
                var _0x29e1f6 = this['_partition' + 'RenderObje' + 'ct'](_0x1e454d, _0x29c765), _0x25cdf4 = _0x29e1f6 - 0x1;
                _0x1e454d < _0x25cdf4 && this['_quickSort'](_0x1e454d, _0x25cdf4), _0x29e1f6 < _0x29c765 && this['_quickSort'](_0x29e1f6, _0x29c765);
            }
        }
        ['_render'](_0x4d6c67) {
            for (var _0x272482 = this['elements']['elements'], _0x4cbcc3 = 0x0, _0x1d8a63 = this['elements']['length']; _0x4cbcc3 < _0x1d8a63; _0x4cbcc3++)
                _0x272482[_0x4cbcc3]['_render'](_0x4d6c67);
        }
        ['clear']() {
            this['elements']['length'] = 0x0, this['lastTransp' + 'arentRende' + 'rElement'] = null, this['lastTransp' + 'arentBatch' + 'ed'] = !0x1;
        }
    }
    class _0x308d64 {
        constructor(_0x3db782, _0x4f7743, _0x2c193f, _0x6328bc) {
            this['_bounds'] = new _0x3555e9(new _0x4795b3(), new _0x4795b3()), this['_objects'] = [], this['_isContaio' + 'n'] = !0x1, this['center'] = new _0x4795b3(), this['baseLength'] = 0x0, this['_setValues'](_0x3db782, _0x4f7743, _0x2c193f, _0x6328bc);
        }
        static ['_encapsula' + 'tes'](_0x130b28, _0x1c81ef) {
            return _0xb064b3['boxContain' + 'sBox'](_0x130b28, _0x1c81ef) == _0xa7a5eb['Contains'];
        }
        ['_setValues'](_0x4729c2, _0x3f626a, _0x14d796, _0x1689b9) {
            this['_octree'] = _0x4729c2, this['_parent'] = _0x3f626a, this['baseLength'] = _0x14d796, _0x1689b9['cloneTo'](this['center']);
            var _0x3bb03b = this['_bounds']['min'], _0x3279a6 = this['_bounds']['max'], _0x423af0 = _0x4729c2['_looseness'] * _0x14d796 / 0x2;
            _0x3bb03b['setValue'](_0x1689b9['x'] - _0x423af0, _0x1689b9['y'] - _0x423af0, _0x1689b9['z'] - _0x423af0), _0x3279a6['setValue'](_0x1689b9['x'] + _0x423af0, _0x1689b9['y'] + _0x423af0, _0x1689b9['z'] + _0x423af0);
        }
        ['_getChildB' + 'ound'](_0xf233c3) {
            if (null != this['_children'] && this['_children'][_0xf233c3])
                return this['_children'][_0xf233c3]['_bounds'];
            var _0xf7f205 = this['baseLength'] / 0x4, _0x2faf7e = this['baseLength'] / 0x2 * this['_octree']['_looseness'] / 0x2, _0x54c77a = _0x308d64['_tempBound' + 'Box'], _0x471d1b = _0x54c77a['min'], _0x100836 = _0x54c77a['max'];
            switch (_0xf233c3) {
            case 0x0:
                _0x471d1b['x'] = this['center']['x'] - _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] + _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] - _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] - _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] + _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] - _0xf7f205 + _0x2faf7e;
                break;
            case 0x1:
                _0x471d1b['x'] = this['center']['x'] + _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] + _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] - _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] + _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] + _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] - _0xf7f205 + _0x2faf7e;
                break;
            case 0x2:
                _0x471d1b['x'] = this['center']['x'] - _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] + _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] + _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] - _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] + _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] + _0xf7f205 + _0x2faf7e;
                break;
            case 0x3:
                _0x471d1b['x'] = this['center']['x'] + _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] + _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] + _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] + _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] + _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] + _0xf7f205 + _0x2faf7e;
                break;
            case 0x4:
                _0x471d1b['x'] = this['center']['x'] - _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] - _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] - _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] - _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] - _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] - _0xf7f205 + _0x2faf7e;
                break;
            case 0x5:
                _0x471d1b['x'] = this['center']['x'] + _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] - _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] - _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] + _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] - _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] - _0xf7f205 + _0x2faf7e;
                break;
            case 0x6:
                _0x471d1b['x'] = this['center']['x'] - _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] - _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] + _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] - _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] - _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] + _0xf7f205 + _0x2faf7e;
                break;
            case 0x7:
                _0x471d1b['x'] = this['center']['x'] + _0xf7f205 - _0x2faf7e, _0x471d1b['y'] = this['center']['y'] - _0xf7f205 - _0x2faf7e, _0x471d1b['z'] = this['center']['z'] + _0xf7f205 - _0x2faf7e, _0x100836['x'] = this['center']['x'] + _0xf7f205 + _0x2faf7e, _0x100836['y'] = this['center']['y'] - _0xf7f205 + _0x2faf7e, _0x100836['z'] = this['center']['z'] + _0xf7f205 + _0x2faf7e;
            }
            return _0x54c77a;
        }
        ['_getChildC' + 'enter'](_0x3778a9) {
            if (null != this['_children'])
                return this['_children'][_0x3778a9]['center'];
            var _0x34131d = this['baseLength'] / 0x4, _0x236254 = _0x308d64['_tempVecto' + 'r30'];
            switch (_0x3778a9) {
            case 0x0:
                _0x236254['x'] = this['center']['x'] - _0x34131d, _0x236254['y'] = this['center']['y'] + _0x34131d, _0x236254['z'] = this['center']['z'] - _0x34131d;
                break;
            case 0x1:
                _0x236254['x'] = this['center']['x'] + _0x34131d, _0x236254['y'] = this['center']['y'] + _0x34131d, _0x236254['z'] = this['center']['z'] - _0x34131d;
                break;
            case 0x2:
                _0x236254['x'] = this['center']['x'] - _0x34131d, _0x236254['y'] = this['center']['y'] + _0x34131d, _0x236254['z'] = this['center']['z'] + _0x34131d;
                break;
            case 0x3:
                _0x236254['x'] = this['center']['x'] + _0x34131d, _0x236254['y'] = this['center']['y'] + _0x34131d, _0x236254['z'] = this['center']['z'] + _0x34131d;
                break;
            case 0x4:
                _0x236254['x'] = this['center']['x'] - _0x34131d, _0x236254['y'] = this['center']['y'] - _0x34131d, _0x236254['z'] = this['center']['z'] - _0x34131d;
                break;
            case 0x5:
                _0x236254['x'] = this['center']['x'] + _0x34131d, _0x236254['y'] = this['center']['y'] - _0x34131d, _0x236254['z'] = this['center']['z'] - _0x34131d;
                break;
            case 0x6:
                _0x236254['x'] = this['center']['x'] - _0x34131d, _0x236254['y'] = this['center']['y'] - _0x34131d, _0x236254['z'] = this['center']['z'] + _0x34131d;
                break;
            case 0x7:
                _0x236254['x'] = this['center']['x'] + _0x34131d, _0x236254['y'] = this['center']['y'] - _0x34131d, _0x236254['z'] = this['center']['z'] + _0x34131d;
            }
            return _0x236254;
        }
        ['_getChild'](_0x887d32) {
            var _0x4c649d = this['baseLength'] / 0x4;
            switch (this['_children'] || (this['_children'] = []), _0x887d32) {
            case 0x0:
                return this['_children'][0x0] || (this['_children'][0x0] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] + -_0x4c649d, this['center']['y'] + _0x4c649d, this['center']['z'] - _0x4c649d)));
            case 0x1:
                return this['_children'][0x1] || (this['_children'][0x1] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] + _0x4c649d, this['center']['y'] + _0x4c649d, this['center']['z'] - _0x4c649d)));
            case 0x2:
                return this['_children'][0x2] || (this['_children'][0x2] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] - _0x4c649d, this['center']['y'] + _0x4c649d, this['center']['z'] + _0x4c649d)));
            case 0x3:
                return this['_children'][0x3] || (this['_children'][0x3] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] + _0x4c649d, this['center']['y'] + _0x4c649d, this['center']['z'] + _0x4c649d)));
            case 0x4:
                return this['_children'][0x4] || (this['_children'][0x4] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] - _0x4c649d, this['center']['y'] - _0x4c649d, this['center']['z'] - _0x4c649d)));
            case 0x5:
                return this['_children'][0x5] || (this['_children'][0x5] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] + _0x4c649d, this['center']['y'] - _0x4c649d, this['center']['z'] - _0x4c649d)));
            case 0x6:
                return this['_children'][0x6] || (this['_children'][0x6] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] - _0x4c649d, this['center']['y'] - _0x4c649d, this['center']['z'] + _0x4c649d)));
            case 0x7:
                return this['_children'][0x7] || (this['_children'][0x7] = new _0x308d64(this['_octree'], this, this['baseLength'] / 0x2, new _0x4795b3(this['center']['x'] + _0x4c649d, this['center']['y'] - _0x4c649d, this['center']['z'] + _0x4c649d)));
            default:
                throw 'BoundsOctr' + 'eeNode:\x20un' + 'known\x20inde' + 'x.';
            }
        }
        ['_shouldMer' + 'ge']() {
            for (var _0x4cf55c = this['_objects']['length'], _0x17c109 = 0x0; _0x17c109 < 0x8; _0x17c109++) {
                var _0x43b6e7 = this['_children'][_0x17c109];
                if (_0x43b6e7) {
                    if (null != _0x43b6e7['_children'])
                        return !0x1;
                    _0x4cf55c += _0x43b6e7['_objects']['length'];
                }
            }
            return _0x4cf55c <= _0x308d64['_NUM_OBJEC' + 'TS_ALLOWED'];
        }
        ['_mergeChil' + 'dren']() {
            for (var _0x5e66e9 = 0x0; _0x5e66e9 < 0x8; _0x5e66e9++) {
                var _0x3fdfeb = this['_children'][_0x5e66e9];
                if (_0x3fdfeb) {
                    _0x3fdfeb['_parent'] = null;
                    for (var _0x45cca9 = _0x3fdfeb['_objects'], _0x3a230c = _0x45cca9['length'] - 0x1; _0x3a230c >= 0x0; _0x3a230c--) {
                        var _0x582f7b = _0x45cca9[_0x3a230c];
                        this['_objects']['push'](_0x582f7b), _0x582f7b['_setOctree' + 'Node'](this);
                    }
                }
            }
            this['_children'] = null;
        }
        ['_merge']() {
            if (null === this['_children']) {
                var _0x42a0bc = this['_parent'];
                _0x42a0bc && _0x42a0bc['_shouldMer' + 'ge']() && (_0x42a0bc['_mergeChil' + 'dren'](), _0x42a0bc['_merge']());
            }
        }
        ['_checkAddN' + 'ode'](_0x18f042) {
            if (null == this['_children']) {
                if (this['_objects']['length'] < _0x308d64['_NUM_OBJEC' + 'TS_ALLOWED'] || this['baseLength'] / 0x2 < this['_octree']['_minSize'])
                    return this;
                for (var _0x25f978 = this['_objects']['length'] - 0x1; _0x25f978 >= 0x0; _0x25f978--) {
                    var _0xefc0c2 = this['_objects'][_0x25f978], _0x2d79e2 = this['_bestFitCh' + 'ild'](_0xefc0c2['bounds']['getCenter']());
                    _0x308d64['_encapsula' + 'tes'](this['_getChildB' + 'ound'](_0x2d79e2), _0xefc0c2['bounds']['_getBoundB' + 'ox']()) && (this['_objects']['splice'](this['_objects']['indexOf'](_0xefc0c2), 0x1), this['_getChild'](_0x2d79e2)['_add'](_0xefc0c2));
                }
            }
            var _0x3ead57 = this['_bestFitCh' + 'ild'](_0x18f042['bounds']['getCenter']());
            return _0x308d64['_encapsula' + 'tes'](this['_getChildB' + 'ound'](_0x3ead57), _0x18f042['bounds']['_getBoundB' + 'ox']()) ? this['_getChild'](_0x3ead57)['_checkAddN' + 'ode'](_0x18f042) : this;
        }
        ['_add'](_0x4ea85b) {
            var _0x121972 = this['_checkAddN' + 'ode'](_0x4ea85b);
            _0x121972['_objects']['push'](_0x4ea85b), _0x4ea85b['_setOctree' + 'Node'](_0x121972);
        }
        ['_remove'](_0x57c4f7) {
            var _0x2dcf45 = this['_objects']['indexOf'](_0x57c4f7);
            this['_objects']['splice'](_0x2dcf45, 0x1), _0x57c4f7['_setOctree' + 'Node'](null), this['_merge']();
        }
        ['_addUp'](_0x14ca81) {
            return _0xb064b3['boxContain' + 'sBox'](this['_bounds'], _0x14ca81['bounds']['_getBoundB' + 'ox']()) === _0xa7a5eb['Contains'] ? (this['_add'](_0x14ca81), !0x0) : !!this['_parent'] && this['_parent']['_addUp'](_0x14ca81);
        }
        ['_getCollid' + 'ingWithFru' + 'stum'](_0x540f6a, _0x4e0321, _0x1872d7, _0x18f868, _0x3d1467, _0x59986a, _0x41f7d0) {
            if (_0x1872d7) {
                var _0x442226 = _0x4e0321['containsBo' + 'undBox'](this['_bounds']);
                if (_0x33d6e0['Stat']['octreeNode' + 'Culling']++, _0x442226 === _0xa7a5eb['Disjoint'])
                    return;
                _0x1872d7 = _0x442226 === _0xa7a5eb['Intersects'];
            }
            this['_isContaio' + 'n'] = !_0x1872d7;
            for (var _0x1df369 = _0x540f6a['camera'], _0x168353 = _0x540f6a['scene'], _0x44eeab = 0x0, _0x11e4f7 = this['_objects']['length']; _0x44eeab < _0x11e4f7; _0x44eeab++) {
                var _0x24b924 = this['_objects'][_0x44eeab];
                if (_0x41f7d0 ? _0x24b924['_castShado' + 'w'] && _0x24b924['_enable'] : _0x1df369['_isLayerVi' + 'sible'](_0x24b924['_owner']['_layer']) && _0x24b924['_enable']) {
                    if (_0x1872d7 && (_0x33d6e0['Stat']['frustumCul' + 'ling']++, !_0x24b924['_needRende' + 'r'](_0x4e0321, _0x540f6a)))
                        continue;
                    _0x24b924['_distanceF' + 'orSort'] = _0x4795b3['distance'](_0x24b924['bounds']['getCenter'](), _0x18f868);
                    for (var _0xf75983 = _0x24b924['_renderEle' + 'ments'], _0x2ef189 = 0x0, _0x169429 = _0xf75983['length']; _0x2ef189 < _0x169429; _0x2ef189++) {
                        _0xf75983[_0x2ef189]['_update'](_0x168353, _0x540f6a, _0x3d1467, _0x59986a);
                    }
                }
            }
            if (null != this['_children'])
                for (_0x44eeab = 0x0; _0x44eeab < 0x8; _0x44eeab++) {
                    var _0x3b443c = this['_children'][_0x44eeab];
                    _0x3b443c && _0x3b443c['_getCollid' + 'ingWithFru' + 'stum'](_0x540f6a, _0x4e0321, _0x1872d7, _0x18f868, _0x3d1467, _0x59986a, _0x41f7d0);
                }
        }
        ['_getCollid' + 'ingWithBou' + 'ndBox'](_0x2e8531, _0x371137, _0x803a39) {
            if (_0x371137) {
                var _0x3d94b4 = _0xb064b3['boxContain' + 'sBox'](this['_bounds'], _0x2e8531);
                if (_0x3d94b4 === _0xa7a5eb['Disjoint'])
                    return;
                _0x371137 = _0x3d94b4 === _0xa7a5eb['Intersects'];
            }
            if (_0x371137)
                for (var _0x8f2596 = 0x0, _0x3e2385 = this['_objects']['length']; _0x8f2596 < _0x3e2385; _0x8f2596++) {
                    var _0x4b49d3 = this['_objects'][_0x8f2596];
                    _0xb064b3['intersects' + 'BoxAndBox'](_0x4b49d3['bounds']['_getBoundB' + 'ox'](), _0x2e8531) && _0x803a39['push'](_0x4b49d3);
                }
            if (null != this['_children'])
                for (_0x8f2596 = 0x0; _0x8f2596 < 0x8; _0x8f2596++) {
                    this['_children'][_0x8f2596]['_getCollid' + 'ingWithBou' + 'ndBox'](_0x2e8531, _0x371137, _0x803a39);
                }
        }
        ['_bestFitCh' + 'ild'](_0x5c74cc) {
            return (_0x5c74cc['x'] <= this['center']['x'] ? 0x0 : 0x1) + (_0x5c74cc['y'] >= this['center']['y'] ? 0x0 : 0x4) + (_0x5c74cc['z'] <= this['center']['z'] ? 0x0 : 0x2);
        }
        ['_update'](_0x4a0142) {
            if (_0xb064b3['boxContain' + 'sBox'](this['_bounds'], _0x4a0142['bounds']['_getBoundB' + 'ox']()) === _0xa7a5eb['Contains']) {
                var _0x2a3556 = this['_checkAddN' + 'ode'](_0x4a0142);
                if (_0x2a3556 !== _0x4a0142['_getOctree' + 'Node']()) {
                    _0x2a3556['_objects']['push'](_0x4a0142), _0x4a0142['_setOctree' + 'Node'](_0x2a3556);
                    var _0x4bacbe = this['_objects']['indexOf'](_0x4a0142);
                    this['_objects']['splice'](_0x4bacbe, 0x1), this['_merge']();
                }
                return !0x0;
            }
            if (this['_parent']) {
                var _0x505b2b = this['_parent']['_addUp'](_0x4a0142);
                return _0x505b2b && (_0x4bacbe = this['_objects']['indexOf'](_0x4a0142), this['_objects']['splice'](_0x4bacbe, 0x1), this['_merge']()), _0x505b2b;
            }
            return !0x1;
        }
        ['add'](_0x25aafa) {
            return !!_0x308d64['_encapsula' + 'tes'](this['_bounds'], _0x25aafa['bounds']['_getBoundB' + 'ox']()) && (this['_add'](_0x25aafa), !0x0);
        }
        ['remove'](_0x1a7bb4) {
            return _0x1a7bb4['_getOctree' + 'Node']() === this && (this['_remove'](_0x1a7bb4), !0x0);
        }
        ['update'](_0x324db1) {
            return _0x324db1['_getOctree' + 'Node']() === this && this['_update'](_0x324db1);
        }
        ['shrinkIfPo' + 'ssible'](_0x5d6e96) {
            if (this['baseLength'] < 0x2 * _0x5d6e96)
                return this;
            for (var _0x4e0316 = -0x1, _0x46720c = 0x0, _0x375da2 = this['_objects']['length']; _0x46720c < _0x375da2; _0x46720c++) {
                var _0x5e01a7 = this['_objects'][_0x46720c], _0x5b0064 = this['_bestFitCh' + 'ild'](_0x5e01a7['bounds']['getCenter']());
                if (0x0 != _0x46720c && _0x5b0064 != _0x4e0316)
                    return this;
                var _0x51e984 = this['_getChildB' + 'ound'](_0x5b0064);
                if (!_0x308d64['_encapsula' + 'tes'](_0x51e984, _0x5e01a7['bounds']['_getBoundB' + 'ox']()))
                    return this;
                0x0 == _0x46720c && (_0x4e0316 = _0x5b0064);
            }
            if (null == this['_children']) {
                if (-0x1 != _0x4e0316) {
                    var _0x8040f5 = this['_getChildC' + 'enter'](_0x4e0316);
                    this['_setValues'](this['_octree'], null, this['baseLength'] / 0x2, _0x8040f5);
                }
                return this;
            }
            var _0x5936cb = !0x1;
            for (_0x46720c = 0x0, _0x375da2 = this['_children']['length']; _0x46720c < _0x375da2; _0x46720c++) {
                var _0x3bf3c5 = this['_children'][_0x46720c];
                if (_0x3bf3c5 && _0x3bf3c5['hasAnyObje' + 'cts']()) {
                    if (_0x5936cb)
                        return this;
                    if (_0x4e0316 >= 0x0 && _0x4e0316 != _0x46720c)
                        return this;
                    _0x5936cb = !0x0, _0x4e0316 = _0x46720c;
                }
            }
            if (-0x1 != _0x4e0316) {
                var _0x3e76d5 = this['_children'][_0x4e0316];
                return _0x3e76d5['_parent'] = null, _0x3e76d5;
            }
            return this;
        }
        ['hasAnyObje' + 'cts']() {
            if (this['_objects']['length'] > 0x0)
                return !0x0;
            if (null != this['_children'])
                for (var _0x305817 = 0x0; _0x305817 < 0x8; _0x305817++) {
                    var _0x5550ef = this['_children'][_0x305817];
                    if (_0x5550ef && _0x5550ef['hasAnyObje' + 'cts']())
                        return !0x0;
                }
            return !0x1;
        }
        ['getCollidi' + 'ngWithBoun' + 'dBox'](_0x1b829c, _0x357506) {
            this['_getCollid' + 'ingWithBou' + 'ndBox'](_0x1b829c, !0x0, _0x357506);
        }
        ['getCollidi' + 'ngWithRay'](_0x66e0ba, _0x4f263b, _0x3599dd = Number['MAX_VALUE']) {
            var _0x4457c5 = _0xb064b3['intersects' + 'RayAndBoxR' + 'D'](_0x66e0ba, this['_bounds']);
            if (!(-0x1 == _0x4457c5 || _0x4457c5 > _0x3599dd)) {
                for (var _0x3b1dfd = 0x0, _0x1389b7 = this['_objects']['length']; _0x3b1dfd < _0x1389b7; _0x3b1dfd++) {
                    var _0x199e24 = this['_objects'][_0x3b1dfd];
                    -0x1 !== (_0x4457c5 = _0xb064b3['intersects' + 'RayAndBoxR' + 'D'](_0x66e0ba, _0x199e24['bounds']['_getBoundB' + 'ox']())) && _0x4457c5 <= _0x3599dd && _0x4f263b['push'](_0x199e24);
                }
                if (null != this['_children'])
                    for (_0x3b1dfd = 0x0; _0x3b1dfd < 0x8; _0x3b1dfd++) {
                        this['_children'][_0x3b1dfd]['getCollidi' + 'ngWithRay'](_0x66e0ba, _0x4f263b, _0x3599dd);
                    }
            }
        }
        ['getCollidi' + 'ngWithFrus' + 'tum'](_0x2971c2, _0x3758a6, _0x48a0e3, _0x3d0974) {
            var _0x5696c0 = _0x2971c2['camera']['transform']['position'], _0x350ef4 = _0x2971c2['camera']['boundFrust' + 'um'];
            this['_getCollid' + 'ingWithFru' + 'stum'](_0x2971c2, _0x350ef4, !0x0, _0x5696c0, _0x3758a6, _0x48a0e3, _0x3d0974);
        }
        ['isCollidin' + 'gWithBound' + 'Box'](_0x31a6e5) {
            if (!_0xb064b3['intersects' + 'BoxAndBox'](this['_bounds'], _0x31a6e5))
                return !0x1;
            for (var _0x250a2b = 0x0, _0x546379 = this['_objects']['length']; _0x250a2b < _0x546379; _0x250a2b++) {
                var _0x1c21bd = this['_objects'][_0x250a2b];
                if (_0xb064b3['intersects' + 'BoxAndBox'](_0x1c21bd['bounds']['_getBoundB' + 'ox'](), _0x31a6e5))
                    return !0x0;
            }
            if (null != this['_children'])
                for (_0x250a2b = 0x0; _0x250a2b < 0x8; _0x250a2b++) {
                    if (this['_children'][_0x250a2b]['isCollidin' + 'gWithBound' + 'Box'](_0x31a6e5))
                        return !0x0;
                }
            return !0x1;
        }
        ['isCollidin' + 'gWithRay'](_0x39f2db, _0xb281a0 = Number['MAX_VALUE']) {
            var _0x3062fb = _0xb064b3['intersects' + 'RayAndBoxR' + 'D'](_0x39f2db, this['_bounds']);
            if (-0x1 == _0x3062fb || _0x3062fb > _0xb281a0)
                return !0x1;
            for (var _0x221bbc = 0x0, _0x5eef7e = this['_objects']['length']; _0x221bbc < _0x5eef7e; _0x221bbc++) {
                var _0x2a2be1 = this['_objects'][_0x221bbc];
                if (-0x1 !== (_0x3062fb = _0xb064b3['intersects' + 'RayAndBoxR' + 'D'](_0x39f2db, _0x2a2be1['bounds']['_getBoundB' + 'ox']())) && _0x3062fb <= _0xb281a0)
                    return !0x0;
            }
            if (null != this['_children'])
                for (_0x221bbc = 0x0; _0x221bbc < 0x8; _0x221bbc++) {
                    if (this['_children'][_0x221bbc]['isCollidin' + 'gWithRay'](_0x39f2db, _0xb281a0))
                        return !0x0;
                }
            return !0x1;
        }
        ['getBound']() {
            return this['_bounds'];
        }
        ['drawAllBou' + 'nds'](_0x2c627a, _0x5ad604, _0x255510) {
            if (null !== this['_children'] || 0x0 != this['_objects']['length']) {
                _0x5ad604++;
                var _0x3aa203 = _0x308d64['_tempColor' + '0'];
                if (this['_isContaio' + 'n'])
                    _0x3aa203['r'] = 0x0, _0x3aa203['g'] = 0x0, _0x3aa203['b'] = 0x1;
                else {
                    var _0x228c99 = _0x255510 ? _0x5ad604 / _0x255510 : 0x0;
                    _0x3aa203['r'] = 0x1 - _0x228c99, _0x3aa203['g'] = _0x228c99, _0x3aa203['b'] = 0x0;
                }
                if (_0x3aa203['a'] = 0.3, _0x89f66e['_drawBound'](_0x2c627a, this['_bounds'], _0x3aa203), null != this['_children'])
                    for (var _0x337ebe = 0x0; _0x337ebe < 0x8; _0x337ebe++) {
                        var _0x25a6fe = this['_children'][_0x337ebe];
                        _0x25a6fe && _0x25a6fe['drawAllBou' + 'nds'](_0x2c627a, _0x5ad604, _0x255510);
                    }
            }
        }
        ['drawAllObj' + 'ects'](_0x42c8b8, _0x32a5ed, _0x321e16) {
            _0x32a5ed++;
            var _0xf7ad83 = _0x308d64['_tempColor' + '0'];
            if (this['_isContaio' + 'n'])
                _0xf7ad83['r'] = 0x0, _0xf7ad83['g'] = 0x0, _0xf7ad83['b'] = 0x1;
            else {
                var _0x3c70e6 = _0x321e16 ? _0x32a5ed / _0x321e16 : 0x0;
                _0xf7ad83['r'] = 0x1 - _0x3c70e6, _0xf7ad83['g'] = _0x3c70e6, _0xf7ad83['b'] = 0x0;
            }
            _0xf7ad83['a'] = 0x1;
            for (var _0x27f4a6 = 0x0, _0x24fa8b = this['_objects']['length']; _0x27f4a6 < _0x24fa8b; _0x27f4a6++)
                _0x89f66e['_drawBound'](_0x42c8b8, this['_objects'][_0x27f4a6]['bounds']['_getBoundB' + 'ox'](), _0xf7ad83);
            if (null != this['_children'])
                for (_0x27f4a6 = 0x0; _0x27f4a6 < 0x8; _0x27f4a6++) {
                    var _0x45be6e = this['_children'][_0x27f4a6];
                    _0x45be6e && _0x45be6e['drawAllObj' + 'ects'](_0x42c8b8, _0x32a5ed, _0x321e16);
                }
        }
    }
    _0x308d64['_tempVecto' + 'r3'] = new _0x4795b3(), _0x308d64['_tempVecto' + 'r30'] = new _0x4795b3(), _0x308d64['_tempVecto' + 'r31'] = new _0x4795b3(), _0x308d64['_tempColor' + '0'] = new _0x210bda(), _0x308d64['_tempBound' + 'Box'] = new _0x3555e9(new _0x4795b3(), new _0x4795b3()), _0x308d64['_NUM_OBJEC' + 'TS_ALLOWED'] = 0x8;
    class _0x2dd112 extends _0x16b19d {
        constructor() {
            super();
        }
        ['add'](_0x135541) {
            if (-0x1 !== _0x135541['_getIndexI' + 'nMotionLis' + 't']())
                throw 'OctreeMoti' + 'onList:ele' + 'ment\x20has\x20\x20' + 'in\x20\x20Physic' + 'sUpdateLis' + 't.';
            this['_add'](_0x135541), _0x135541['_setIndexI' + 'nMotionLis' + 't'](this['length']++);
        }
        ['remove'](_0x2640b1) {
            var _0x3a035d = _0x2640b1['_getIndexI' + 'nMotionLis' + 't']();
            if (this['length']--, _0x3a035d !== this['length']) {
                var _0x3dee8e = this['elements'][this['length']];
                this['elements'][_0x3a035d] = _0x3dee8e, _0x3dee8e['_setIndexI' + 'nMotionLis' + 't'](_0x3a035d);
            }
            _0x2640b1['_setIndexI' + 'nMotionLis' + 't'](-0x1);
        }
    }
    class _0x327096 {
        constructor(_0x298384, _0x52f0ae, _0x9a55f5, _0x45a1c1) {
            this['_motionObj' + 'ects'] = new _0x2dd112(), this['count'] = 0x0, _0x9a55f5 > _0x298384 && (console['warn']('Minimum\x20no' + 'de\x20size\x20mu' + 'st\x20be\x20at\x20l' + 'east\x20as\x20bi' + 'g\x20as\x20the\x20i' + 'nitial\x20wor' + 'ld\x20size.\x20W' + 'as:\x20' + _0x9a55f5 + ('\x20Adjusted\x20' + 'to:\x20') + _0x298384), _0x9a55f5 = _0x298384), this['_initialSi' + 'ze'] = _0x298384, this['_minSize'] = _0x9a55f5, this['_looseness'] = Math['min'](Math['max'](_0x45a1c1, 0x1), 0x2), this['_rootNode'] = new _0x308d64(this, null, _0x298384, _0x52f0ae);
        }
        ['_getMaxDep' + 'th'](_0x123ea4, _0x32f787) {
            _0x32f787++;
            var _0x1916d9 = _0x123ea4['_children'];
            if (null != _0x1916d9)
                for (var _0x27ae08 = _0x32f787, _0x5ca230 = 0x0, _0x33e1a3 = _0x1916d9['length']; _0x5ca230 < _0x33e1a3; _0x5ca230++) {
                    var _0x10a3f0 = _0x1916d9[_0x5ca230];
                    _0x10a3f0 && (_0x32f787 = Math['max'](this['_getMaxDep' + 'th'](_0x10a3f0, _0x27ae08), _0x32f787));
                }
            return _0x32f787;
        }
        ['_grow'](_0x54a05c) {
            var _0x2bfe55 = _0x54a05c['x'] >= 0x0 ? 0x1 : -0x1, _0x5f541d = _0x54a05c['y'] >= 0x0 ? 0x1 : -0x1, _0x177458 = _0x54a05c['z'] >= 0x0 ? 0x1 : -0x1, _0x1a3432 = this['_rootNode'], _0x62c4ac = this['_rootNode']['baseLength'] / 0x2, _0x2c6d72 = 0x2 * this['_rootNode']['baseLength'], _0x92bfa3 = this['_rootNode']['center'], _0x9f7c0c = new _0x4795b3(_0x92bfa3['x'] + _0x2bfe55 * _0x62c4ac, _0x92bfa3['y'] + _0x5f541d * _0x62c4ac, _0x92bfa3['z'] + _0x177458 * _0x62c4ac);
            if (this['_rootNode'] = new _0x308d64(this, null, _0x2c6d72, _0x9f7c0c), _0x1a3432['hasAnyObje' + 'cts']()) {
                for (var _0x25282c = this['_rootNode']['_bestFitCh' + 'ild'](_0x1a3432['center']), _0x47e805 = [], _0x34bc0c = 0x0; _0x34bc0c < 0x8; _0x34bc0c++)
                    _0x34bc0c == _0x25282c && (_0x1a3432['_parent'] = this['_rootNode'], _0x47e805[_0x34bc0c] = _0x1a3432);
                this['_rootNode']['_children'] = _0x47e805;
            }
        }
        ['add'](_0x1e2faf) {
            for (var _0x4962d5 = 0x0; !this['_rootNode']['add'](_0x1e2faf);) {
                var _0x3b4500 = _0x327096['_tempVecto' + 'r30'];
                if (_0x4795b3['subtract'](_0x1e2faf['bounds']['getCenter'](), this['_rootNode']['center'], _0x3b4500), this['_grow'](_0x3b4500), ++_0x4962d5 > 0x14)
                    throw 'Aborted\x20Ad' + 'd\x20operatio' + 'n\x20as\x20it\x20se' + 'emed\x20to\x20be' + '\x20going\x20on\x20' + 'forever\x20(' + (_0x4962d5 - 0x1) + (')\x20attempts' + '\x20at\x20growin' + 'g\x20the\x20octr' + 'ee.');
            }
            this['count']++;
        }
        ['remove'](_0x10d94f) {
            var _0x114ffc = _0x10d94f['_getOctree' + 'Node']()['remove'](_0x10d94f);
            return _0x114ffc && this['count']--, _0x114ffc;
        }
        ['update'](_0x548167) {
            var _0x3a917c = 0x0, _0x207897 = _0x548167['_getOctree' + 'Node']();
            if (_0x207897) {
                for (; !_0x207897['_update'](_0x548167);) {
                    var _0x370330 = _0x327096['_tempVecto' + 'r30'];
                    if (_0x4795b3['subtract'](_0x548167['bounds']['getCenter'](), this['_rootNode']['center'], _0x370330), this['_grow'](_0x370330), ++_0x3a917c > 0x14)
                        throw 'Aborted\x20Ad' + 'd\x20operatio' + 'n\x20as\x20it\x20se' + 'emed\x20to\x20be' + '\x20going\x20on\x20' + 'forever\x20(' + (_0x3a917c - 0x1) + (')\x20attempts' + '\x20at\x20growin' + 'g\x20the\x20octr' + 'ee.');
                }
                return !0x0;
            }
            return !0x1;
        }
        ['shrinkRoot' + 'IfPossible']() {
            this['_rootNode'] = this['_rootNode']['shrinkIfPo' + 'ssible'](this['_initialSi' + 'ze']);
        }
        ['addMotionO' + 'bject'](_0x3f2b6a) {
            this['_motionObj' + 'ects']['add'](_0x3f2b6a);
        }
        ['removeMoti' + 'onObject'](_0x3bf6f0) {
            this['_motionObj' + 'ects']['remove'](_0x3bf6f0);
        }
        ['updateMoti' + 'onObjects']() {
            for (var _0x3fcca7 = this['_motionObj' + 'ects']['elements'], _0x141b68 = 0x0, _0x1983b9 = this['_motionObj' + 'ects']['length']; _0x141b68 < _0x1983b9; _0x141b68++) {
                var _0x541216 = _0x3fcca7[_0x141b68];
                this['update'](_0x541216), _0x541216['_setIndexI' + 'nMotionLis' + 't'](-0x1);
            }
            this['_motionObj' + 'ects']['length'] = 0x0;
        }
        ['isCollidin' + 'gWithBound' + 'Box'](_0x3994a9) {
            return this['_rootNode']['isCollidin' + 'gWithBound' + 'Box'](_0x3994a9);
        }
        ['isCollidin' + 'gWithRay'](_0x5f5083, _0x162f58 = Number['MAX_VALUE']) {
            return this['_rootNode']['isCollidin' + 'gWithRay'](_0x5f5083, _0x162f58);
        }
        ['getCollidi' + 'ngWithBoun' + 'dBox'](_0x3b3713, _0x3040ae) {
            this['_rootNode']['getCollidi' + 'ngWithBoun' + 'dBox'](_0x3b3713, _0x3040ae);
        }
        ['getCollidi' + 'ngWithRay'](_0x5381ab, _0x135b45, _0xe79cd8 = Number['MAX_VALUE']) {
            this['_rootNode']['getCollidi' + 'ngWithRay'](_0x5381ab, _0x135b45, _0xe79cd8);
        }
        ['getCollidi' + 'ngWithFrus' + 'tum'](_0x3385b0, _0x4249ad, _0x4a5380, _0x78e065) {
            this['_rootNode']['getCollidi' + 'ngWithFrus' + 'tum'](_0x3385b0, _0x4249ad, _0x4a5380, _0x78e065);
        }
        ['getMaxBoun' + 'ds']() {
            return this['_rootNode']['getBound']();
        }
        ['drawAllBou' + 'nds'](_0x21d82b) {
            var _0x40178c = this['_getMaxDep' + 'th'](this['_rootNode'], -0x1);
            this['_rootNode']['drawAllBou' + 'nds'](_0x21d82b, -0x1, _0x40178c);
        }
        ['drawAllObj' + 'ects'](_0x91d0e0) {
            var _0xffcf72 = this['_getMaxDep' + 'th'](this['_rootNode'], -0x1);
            this['_rootNode']['drawAllObj' + 'ects'](_0x91d0e0, -0x1, _0xffcf72);
        }
    }
    _0x327096['_tempVecto' + 'r30'] = new _0x4795b3();
    class _0x169b81 extends _0x33d6e0['Sprite'] {
        constructor() {
            if (super(), this['_lightCoun' + 't'] = 0x0, this['_pointLigh' + 'ts'] = new _0x11515c(), this['_spotLight' + 's'] = new _0x11515c(), this['_direction' + 'Lights'] = new _0x41a548(), this['_alternate' + 'Lights'] = new _0x4f18be(), this['_lightmaps'] = [], this['_skyRender' + 'er'] = new _0x4ad4ff(), this['_reflectio' + 'nMode'] = 0x1, this['_input'] = new _0x3e5163(), this['_timer'] = _0x33d6e0['ILaya']['timer'], this['_collsionT' + 'estList'] = [], this['_renders'] = new _0x4617c4(), this['_opaqueQue' + 'ue'] = new _0x2326e7(!0x1), this['_transpare' + 'ntQueue'] = new _0x2326e7(!0x0), this['_cameraPoo' + 'l'] = [], this['_animatorP' + 'ool'] = new _0x4617c4(), this['_scriptPoo' + 'l'] = new Array(), this['_tempScrip' + 'tPool'] = new Array(), this['_needClear' + 'ScriptPool'] = !0x1, this['currentCre' + 'ationLayer'] = Math['pow'](0x2, 0x0), this['enableLigh' + 't'] = !0x0, this['_key'] = new _0x33d6e0['SubmitKey'](), this['_time'] = 0x0, this['_pickIdToS' + 'prite'] = new Object(), _0x10fe89['_enablePhy' + 'sics'] && (this['_physicsSi' + 'mulation'] = new _0xa3f18a(_0x169b81['physicsSet' + 'tings'])), this['_shaderVal' + 'ues'] = new _0x4ac605(null), this['parallelSp' + 'litShadowM' + 'aps'] = [], this['enableFog'] = !0x1, this['fogStart'] = 0x12c, this['fogRange'] = 0x3e8, this['fogColor'] = new _0x4795b3(0.7, 0.7, 0.7), this['ambientCol' + 'or'] = new _0x4795b3(0.212, 0.227, 0.259), this['reflection' + 'Intensity'] = 0x1, _0x237093['_config']['_multiLigh' + 'ting'] || this['_shaderVal' + 'ues']['addDefine'](_0x1ede74['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING']), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (this['_cullingBu' + 'fferIndice' + 's'] = new Int32Array(0x400), this['_cullingBu' + 'fferResult'] = new Int32Array(0x400)), this['_scene'] = this, this['_input']['__init__'](_0x33d6e0['Render']['canvas'], this), _0x169b81['octreeCull' + 'ing'] && (this['_octree'] = new _0x327096(_0x169b81['octreeInit' + 'ialSize'], _0x169b81['octreeInit' + 'ialCenter'], _0x169b81['octreeMinN' + 'odeSize'], _0x169b81['octreeLoos' + 'eness'])), _0x2585ad['debugFrust' + 'umCulling']) {
                this['_debugTool'] = new _0x595ba2();
                var _0x38ad1a = new _0x47a01b();
                _0x38ad1a['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], _0x38ad1a['alphaTest'] = !0x1, _0x38ad1a['depthWrite'] = !0x1, _0x38ad1a['cull'] = _0x311b27['CULL_BACK'], _0x38ad1a['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], _0x38ad1a['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], _0x38ad1a['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], _0x38ad1a['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_debugTool']['pixelLineR' + 'enderer']['sharedMate' + 'rial'] = _0x38ad1a;
            }
        }
        static ['__init__']() {
            var _0x18ef71 = _0x237093['_config'];
            if (_0x18ef71['_multiLigh' + 'ting']) {
                const _0x5bfec5 = 0x4;
                var _0x1ae2a9 = _0x18ef71['maxLightCo' + 'unt'], _0x2d8c1b = _0x18ef71['lightClust' + 'erCount'];
                _0x43893d['instance'] = new _0x43893d(_0x2d8c1b['x'], _0x2d8c1b['y'], _0x2d8c1b['z'], Math['min'](_0x18ef71['maxLightCo' + 'unt'], _0x18ef71['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'])), _0x169b81['_lightText' + 'ure'] = _0x89f66e['_createFlo' + 'atTextureB' + 'uffer'](_0x5bfec5, _0x1ae2a9), _0x169b81['_lightText' + 'ure']['lock'] = !0x0, _0x169b81['_lightPixl' + 'es'] = new Float32Array(_0x1ae2a9 * _0x5bfec5 * 0x4);
            }
            _0x311294['SHADERDEFI' + 'NE_FOG'] = _0x1ede74['getDefineB' + 'yName']('FOG'), _0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT'] = _0x1ede74['getDefineB' + 'yName']('DIRECTIONL' + 'IGHT'), _0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT'] = _0x1ede74['getDefineB' + 'yName']('POINTLIGHT'), _0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT'] = _0x1ede74['getDefineB' + 'yName']('SPOTLIGHT'), _0x311294['SHADERDEFI' + 'NE_CAST_SH' + 'ADOW'] = _0x1ede74['getDefineB' + 'yName']('CASTSHADOW'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM1'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PSSM1'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM2'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PSSM2'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM3'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PSSM3'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF_NO'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PCF_NO'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF1'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PCF1'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF2'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PCF2'), _0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF3'] = _0x1ede74['getDefineB' + 'yName']('SHADOWMAP_' + 'PCF3'), _0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP'] = _0x1ede74['getDefineB' + 'yName']('REFLECTMAP');
        }
        static ['load'](_0x4af7cc, _0x5e31ee) {
            _0x33d6e0['ILaya']['loader']['create'](_0x4af7cc, _0x5e31ee, null, _0x169b81['HIERARCHY']);
        }
        ['_allotPick' + 'ColorByID'](_0xde99ca, _0x298a70) {
            var _0x29b8bd = Math['floor'](_0xde99ca / 0xfe01);
            _0xde99ca -= 0xff * _0x29b8bd * 0xff;
            var _0x53b1fc = Math['floor'](_0xde99ca / 0xff), _0x58240e = _0xde99ca -= 0xff * _0x53b1fc;
            _0x298a70['x'] = _0x29b8bd / 0xff, _0x298a70['y'] = _0x53b1fc / 0xff, _0x298a70['z'] = _0x58240e / 0xff, _0x298a70['w'] = 0x1;
        }
        ['_searchIDB' + 'yPickColor'](_0x35a2de) {
            return 0xff * _0x35a2de['x'] * 0xff + 0xff * _0x35a2de['y'] + _0x35a2de['z'];
        }
        get ['url']() {
            return this['_url'];
        }
        get ['enableFog']() {
            return this['_enableFog'];
        }
        set ['enableFog'](_0x5e792a) {
            this['_enableFog'] !== _0x5e792a && (this['_enableFog'] = _0x5e792a, _0x5e792a ? this['_shaderVal' + 'ues']['addDefine'](_0x311294['SHADERDEFI' + 'NE_FOG']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_FOG']));
        }
        get ['fogColor']() {
            return this['_shaderVal' + 'ues']['getVector3'](_0x169b81['FOGCOLOR']);
        }
        set ['fogColor'](_0x2ba1eb) {
            this['_shaderVal' + 'ues']['setVector3'](_0x169b81['FOGCOLOR'], _0x2ba1eb);
        }
        get ['fogStart']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x169b81['FOGSTART']);
        }
        set ['fogStart'](_0x4e20ba) {
            this['_shaderVal' + 'ues']['setNumber'](_0x169b81['FOGSTART'], _0x4e20ba);
        }
        get ['fogRange']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x169b81['FOGRANGE']);
        }
        set ['fogRange'](_0x3e167d) {
            this['_shaderVal' + 'ues']['setNumber'](_0x169b81['FOGRANGE'], _0x3e167d);
        }
        get ['ambientCol' + 'or']() {
            return this['_shaderVal' + 'ues']['getVector3'](_0x169b81['AMBIENTCOL' + 'OR']);
        }
        set ['ambientCol' + 'or'](_0x323f15) {
            this['_shaderVal' + 'ues']['setVector3'](_0x169b81['AMBIENTCOL' + 'OR'], _0x323f15);
        }
        get ['skyRendere' + 'r']() {
            return this['_skyRender' + 'er'];
        }
        get ['customRefl' + 'ection']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x169b81['REFLECTION' + 'TEXTURE']);
        }
        set ['customRefl' + 'ection'](_0x25758a) {
            this['_shaderVal' + 'ues']['setTexture'](_0x169b81['REFLECTION' + 'TEXTURE'], _0x25758a), _0x25758a ? this['_shaderVal' + 'ues']['addDefine'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_REFLECT' + 'MAP']);
        }
        get ['reflection' + 'Intensity']() {
            return this['_shaderVal' + 'ues']['getNumber'](_0x169b81['REFLETIONI' + 'NTENSITY']);
        }
        set ['reflection' + 'Intensity'](_0x181b18) {
            _0x181b18 = Math['max'](Math['min'](_0x181b18, 0x1), 0x0), this['_shaderVal' + 'ues']['setNumber'](_0x169b81['REFLETIONI' + 'NTENSITY'], _0x181b18);
        }
        get ['physicsSim' + 'ulation']() {
            return this['_physicsSi' + 'mulation'];
        }
        get ['reflection' + 'Mode']() {
            return this['_reflectio' + 'nMode'];
        }
        set ['reflection' + 'Mode'](_0x2c47ca) {
            this['_reflectio' + 'nMode'] = _0x2c47ca;
        }
        get ['timer']() {
            return this['_timer'];
        }
        set ['timer'](_0x3b9457) {
            this['_timer'] = _0x3b9457;
        }
        get ['input']() {
            return this['_input'];
        }
        ['_setLightm' + 'apToChildN' + 'ode'](_0x48e03c) {
            _0x48e03c instanceof _0x33bc07 && _0x48e03c['_render']['_applyLigh' + 'tMapParams']();
            for (var _0x17ff76 = _0x48e03c['_children'], _0x257c1f = 0x0, _0x27b7f0 = _0x17ff76['length']; _0x257c1f < _0x27b7f0; _0x257c1f++)
                this['_setLightm' + 'apToChildN' + 'ode'](_0x17ff76[_0x257c1f]);
        }
        ['_update']() {
            var _0xb24232 = this['timer']['_delta'] / 0x3e8;
            this['_time'] += _0xb24232, this['_shaderVal' + 'ues']['setNumber'](_0x169b81['TIME'], this['_time']);
            var _0x32c5f2 = this['_physicsSi' + 'mulation'];
            _0x10fe89['_enablePhy' + 'sics'] && !_0xa3f18a['disableSim' + 'ulation'] && (_0x32c5f2['_updatePhy' + 'sicsTransf' + 'ormFromRen' + 'der'](), _0x4aabff['_addUpdate' + 'List'] = !0x1, _0x32c5f2['_simulate'](_0xb24232), _0x32c5f2['_updateCha' + 'racters'](), _0x4aabff['_addUpdate' + 'List'] = !0x0, _0x32c5f2['_updateCol' + 'lisions'](), _0x32c5f2['_eventScri' + 'pts']()), this['_input']['_update'](), this['_clearScri' + 'pt'](), this['_updateScr' + 'ipt'](), _0x40f618['_update'](this), this['_lateUpdat' + 'eScript']();
        }
        ['_binarySea' + 'rchIndexIn' + 'CameraPool'](_0x229f0a) {
            for (var _0x439a22, _0x42da40 = 0x0, _0x135423 = this['_cameraPoo' + 'l']['length'] - 0x1; _0x42da40 <= _0x135423;) {
                _0x439a22 = Math['floor']((_0x42da40 + _0x135423) / 0x2);
                var _0x5ced98 = this['_cameraPoo' + 'l'][_0x439a22]['_rendering' + 'Order'];
                if (_0x5ced98 == _0x229f0a['_rendering' + 'Order'])
                    return _0x439a22;
                _0x5ced98 > _0x229f0a['_rendering' + 'Order'] ? _0x135423 = _0x439a22 - 0x1 : _0x42da40 = _0x439a22 + 0x1;
            }
            return _0x42da40;
        }
        ['onEnable']() {
            this['_input']['_onCanvasE' + 'vent'](_0x33d6e0['Render']['canvas']);
        }
        ['onDisable']() {
            this['_input']['_offCanvas' + 'Event'](_0x33d6e0['Render']['canvas']);
        }
        ['_setCreate' + 'URL'](_0xc0f23f) {
            this['_url'] = _0x33d6e0['URL']['formatURL'](_0xc0f23f);
        }
        ['_getGroup']() {
            return this['_group'];
        }
        ['_setGroup'](_0x583778) {
            this['_group'] = _0x583778;
        }
        ['_clearScri' + 'pt']() {
            if (this['_needClear' + 'ScriptPool']) {
                for (var _0x51b116 = this['_scriptPoo' + 'l'], _0xc7bd1e = 0x0, _0x295f0d = _0x51b116['length']; _0xc7bd1e < _0x295f0d; _0xc7bd1e++) {
                    var _0x4be183 = _0x51b116[_0xc7bd1e];
                    _0x4be183 && (_0x4be183['_indexInPo' + 'ol'] = this['_tempScrip' + 'tPool']['length'], this['_tempScrip' + 'tPool']['push'](_0x4be183));
                }
                this['_scriptPoo' + 'l'] = this['_tempScrip' + 'tPool'], _0x51b116['length'] = 0x0, this['_tempScrip' + 'tPool'] = _0x51b116, this['_needClear' + 'ScriptPool'] = !0x1;
            }
        }
        ['_updateScr' + 'ipt']() {
            for (var _0x17aa91 = this['_scriptPoo' + 'l'], _0x592b73 = 0x0, _0x18cfac = _0x17aa91['length']; _0x592b73 < _0x18cfac; _0x592b73++) {
                var _0x332175 = _0x17aa91[_0x592b73];
                _0x332175 && _0x332175['enabled'] && _0x332175['onUpdate']();
            }
        }
        ['_lateUpdat' + 'eScript']() {
            for (var _0x14b427 = this['_scriptPoo' + 'l'], _0x2203a1 = 0x0, _0x2507ad = _0x14b427['length']; _0x2203a1 < _0x2507ad; _0x2203a1++) {
                var _0x590aba = _0x14b427[_0x2203a1];
                _0x590aba && _0x590aba['enabled'] && _0x590aba['onLateUpda' + 'te']();
            }
        }
        ['_addScript'](_0x18db8f) {
            var _0x5e84de = this['_scriptPoo' + 'l'];
            _0x18db8f['_indexInPo' + 'ol'] = _0x5e84de['length'], _0x5e84de['push'](_0x18db8f);
        }
        ['_removeScr' + 'ipt'](_0x4161cb) {
            this['_scriptPoo' + 'l'][_0x4161cb['_indexInPo' + 'ol']] = null, _0x4161cb['_indexInPo' + 'ol'] = -0x1, this['_needClear' + 'ScriptPool'] = !0x0;
        }
        ['_preRender' + 'Script']() {
            for (var _0xb62d96 = this['_scriptPoo' + 'l'], _0x11375c = 0x0, _0x12e694 = _0xb62d96['length']; _0x11375c < _0x12e694; _0x11375c++) {
                var _0x4ed851 = _0xb62d96[_0x11375c];
                _0x4ed851 && _0x4ed851['enabled'] && _0x4ed851['onPreRende' + 'r']();
            }
        }
        ['_postRende' + 'rScript']() {
            for (var _0x4ac0cd = this['_scriptPoo' + 'l'], _0x43c5c0 = 0x0, _0x33c9da = _0x4ac0cd['length']; _0x43c5c0 < _0x33c9da; _0x43c5c0++) {
                var _0x25f682 = _0x4ac0cd[_0x43c5c0];
                _0x25f682 && _0x25f682['enabled'] && _0x25f682['onPostRend' + 'er']();
            }
        }
        ['_prepareSc' + 'eneToRende' + 'r']() {
            var _0x3b64f3 = this['_shaderVal' + 'ues'];
            if (_0x237093['_config']['_multiLigh' + 'ting']) {
                var _0x466150 = _0x169b81['_lightText' + 'ure'], _0x973672 = _0x169b81['_lightPixl' + 'es'];
                const _0x261c2e = _0x466150['width'], _0x1e4e3f = 0x4 * _0x261c2e;
                var _0x203486 = 0x0, _0x13d719 = this['_direction' + 'Lights']['_length'], _0x4cf3a9 = this['_direction' + 'Lights']['_elements'];
                if (_0x13d719 > 0x0) {
                    for (var _0x36982f = this['_direction' + 'Lights']['getSunLigh' + 't'](), _0xfb4541 = 0x0; _0xfb4541 < _0x13d719; _0xfb4541++, _0x203486++) {
                        var _0x4220eb = (_0x3492ac = _0x4cf3a9[_0xfb4541])['_direction'], _0x54eedb = _0x3492ac['_intensity' + 'Color'], _0x56f38c = _0x1e4e3f * _0x203486;
                        _0x4795b3['scale'](_0x3492ac['color'], _0x3492ac['_intensity'], _0x54eedb), _0x3492ac['transform']['worldMatri' + 'x']['getForward'](_0x4220eb), _0x4795b3['normalize'](_0x4220eb, _0x4220eb), _0x973672[_0x56f38c] = _0x54eedb['x'], _0x973672[_0x56f38c + 0x1] = _0x54eedb['y'], _0x973672[_0x56f38c + 0x2] = _0x54eedb['z'], _0x973672[_0x56f38c + 0x4] = _0x4220eb['x'], _0x973672[_0x56f38c + 0x5] = _0x4220eb['y'], _0x973672[_0x56f38c + 0x6] = _0x4220eb['z'], _0xfb4541 == _0x36982f && (_0x3b64f3['setVector3'](_0x169b81['SUNLIGHTDI' + 'RCOLOR'], _0x54eedb), _0x3b64f3['setVector3'](_0x169b81['SUNLIGHTDI' + 'RECTION'], _0x4220eb));
                    }
                    _0x3b64f3['addDefine'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                } else
                    _0x3b64f3['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                var _0x56e9e5 = this['_pointLigh' + 'ts']['_length'];
                if (_0x56e9e5 > 0x0) {
                    var _0x196a2d = this['_pointLigh' + 'ts']['_elements'];
                    for (_0xfb4541 = 0x0; _0xfb4541 < _0x56e9e5; _0xfb4541++, _0x203486++) {
                        var _0x15230f = (_0x5daa31 = _0x196a2d[_0xfb4541])['transform']['position'];
                        _0x54eedb = _0x5daa31['_intensity' + 'Color'], _0x56f38c = _0x1e4e3f * _0x203486, (_0x4795b3['scale'](_0x5daa31['color'], _0x5daa31['_intensity'], _0x54eedb), _0x973672[_0x56f38c] = _0x54eedb['x'], _0x973672[_0x56f38c + 0x1] = _0x54eedb['y'], _0x973672[_0x56f38c + 0x2] = _0x54eedb['z'], _0x973672[_0x56f38c + 0x3] = _0x5daa31['range'], _0x973672[_0x56f38c + 0x4] = _0x15230f['x'], _0x973672[_0x56f38c + 0x5] = _0x15230f['y'], _0x973672[_0x56f38c + 0x6] = _0x15230f['z']);
                    }
                    _0x3b64f3['addDefine'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                } else
                    _0x3b64f3['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                var _0x5e2160 = this['_spotLight' + 's']['_length'];
                if (_0x5e2160 > 0x0) {
                    var _0x2c653c = this['_spotLight' + 's']['_elements'];
                    for (_0xfb4541 = 0x0; _0xfb4541 < _0x5e2160; _0xfb4541++, _0x203486++) {
                        var _0x462746 = _0x2c653c[_0xfb4541];
                        _0x4220eb = _0x462746['_direction'], _0x15230f = _0x462746['transform']['position'], _0x54eedb = _0x462746['_intensity' + 'Color'], _0x56f38c = _0x1e4e3f * _0x203486, (_0x4795b3['scale'](_0x462746['color'], _0x462746['_intensity'], _0x54eedb), _0x462746['transform']['worldMatri' + 'x']['getForward'](_0x4220eb), _0x4795b3['normalize'](_0x4220eb, _0x4220eb), _0x973672[_0x56f38c] = _0x54eedb['x'], _0x973672[_0x56f38c + 0x1] = _0x54eedb['y'], _0x973672[_0x56f38c + 0x2] = _0x54eedb['z'], _0x973672[_0x56f38c + 0x3] = _0x462746['range'], _0x973672[_0x56f38c + 0x4] = _0x15230f['x'], _0x973672[_0x56f38c + 0x5] = _0x15230f['y'], _0x973672[_0x56f38c + 0x6] = _0x15230f['z'], _0x973672[_0x56f38c + 0x7] = _0x462746['spotAngle'] * Math['PI'] / 0xb4, _0x973672[_0x56f38c + 0x8] = _0x4220eb['x'], _0x973672[_0x56f38c + 0x9] = _0x4220eb['y'], _0x973672[_0x56f38c + 0xa] = _0x4220eb['z']);
                    }
                    _0x3b64f3['addDefine'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                } else
                    _0x3b64f3['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                _0x203486 > 0x0 && _0x466150['setSubPixe' + 'ls'](0x0, 0x0, _0x261c2e, _0x203486, _0x973672, 0x0), _0x3b64f3['setTexture'](_0x169b81['LIGHTBUFFE' + 'R'], _0x466150), _0x3b64f3['setInt'](_0x169b81['DIRECTIONL' + 'IGHTCOUNT'], this['_direction' + 'Lights']['_length']), _0x3b64f3['setTexture'](_0x169b81['CLUSTERBUF' + 'FER'], _0x43893d['instance']['_clusterTe' + 'xture']);
            } else {
                if (this['_direction' + 'Lights']['_length'] > 0x0) {
                    var _0x3492ac = this['_direction' + 'Lights']['_elements'][0x0];
                    _0x4795b3['scale'](_0x3492ac['color'], _0x3492ac['_intensity'], _0x3492ac['_intensity' + 'Color']), _0x3492ac['transform']['worldMatri' + 'x']['getForward'](_0x3492ac['_direction']), _0x4795b3['normalize'](_0x3492ac['_direction'], _0x3492ac['_direction']), _0x3b64f3['setVector3'](_0x169b81['LIGHTDIRCO' + 'LOR'], _0x3492ac['_intensity' + 'Color']), _0x3b64f3['setVector3'](_0x169b81['LIGHTDIREC' + 'TION'], _0x3492ac['_direction']), _0x3b64f3['setVector3'](_0x169b81['SUNLIGHTDI' + 'RCOLOR'], _0x3492ac['_intensity' + 'Color']), _0x3b64f3['setVector3'](_0x169b81['SUNLIGHTDI' + 'RECTION'], _0x3492ac['_direction']), _0x3b64f3['addDefine'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                } else
                    _0x3b64f3['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_DIRECTI' + 'ONLIGHT']);
                if (this['_pointLigh' + 'ts']['_length'] > 0x0) {
                    var _0x5daa31 = this['_pointLigh' + 'ts']['_elements'][0x0];
                    _0x4795b3['scale'](_0x5daa31['color'], _0x5daa31['_intensity'], _0x5daa31['_intensity' + 'Color']), _0x3b64f3['setVector3'](_0x169b81['POINTLIGHT' + 'COLOR'], _0x5daa31['_intensity' + 'Color']), _0x3b64f3['setVector3'](_0x169b81['POINTLIGHT' + 'POS'], _0x5daa31['transform']['position']), _0x3b64f3['setNumber'](_0x169b81['POINTLIGHT' + 'RANGE'], _0x5daa31['range']), _0x3b64f3['addDefine'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                } else
                    _0x3b64f3['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_POINTLI' + 'GHT']);
                if (this['_spotLight' + 's']['_length'] > 0x0) {
                    var _0x13c267 = this['_spotLight' + 's']['_elements'][0x0];
                    _0x4795b3['scale'](_0x13c267['color'], _0x13c267['_intensity'], _0x13c267['_intensity' + 'Color']), _0x3b64f3['setVector3'](_0x169b81['SPOTLIGHTC' + 'OLOR'], _0x13c267['_intensity' + 'Color']), _0x3b64f3['setVector3'](_0x169b81['SPOTLIGHTP' + 'OS'], _0x13c267['transform']['position']), _0x13c267['transform']['worldMatri' + 'x']['getForward'](_0x13c267['_direction']), _0x4795b3['normalize'](_0x13c267['_direction'], _0x13c267['_direction']), _0x3b64f3['setVector3'](_0x169b81['SPOTLIGHTD' + 'IRECTION'], _0x13c267['_direction']), _0x3b64f3['setNumber'](_0x169b81['SPOTLIGHTR' + 'ANGE'], _0x13c267['range']), _0x3b64f3['setNumber'](_0x169b81['SPOTLIGHTS' + 'POTANGLE'], _0x13c267['spotAngle'] * Math['PI'] / 0xb4), _0x3b64f3['addDefine'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
                } else
                    _0x3b64f3['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SPOTLIG' + 'HT']);
            }
        }
        ['_addCamera'](_0x238f55) {
            for (var _0x4ded0d = this['_binarySea' + 'rchIndexIn' + 'CameraPool'](_0x238f55), _0x57278a = _0x238f55['_rendering' + 'Order'], _0x1b174c = this['_cameraPoo' + 'l']['length']; _0x4ded0d < _0x1b174c && this['_cameraPoo' + 'l'][_0x4ded0d]['_rendering' + 'Order'] <= _0x57278a;)
                _0x4ded0d++;
            this['_cameraPoo' + 'l']['splice'](_0x4ded0d, 0x0, _0x238f55);
        }
        ['_removeCam' + 'era'](_0x2e3ee9) {
            this['_cameraPoo' + 'l']['splice'](this['_cameraPoo' + 'l']['indexOf'](_0x2e3ee9), 0x1);
        }
        ['_preCullin' + 'g'](_0x4eac3c, _0x13a2e6, _0x5c34c0, _0x20c254) {
            _0x2585ad['renderObje' + 'ctCulling'](_0x13a2e6, this, _0x4eac3c, _0x5c34c0, _0x20c254, !0x1);
        }
        ['_clear'](_0x595517, _0x1d1e94) {
            var _0x366bac, _0x2b0175, _0x58ec1e, _0x22dced = _0x1d1e94['viewport'], _0x20aa00 = _0x1d1e94['camera'], _0x58a721 = _0x20aa00['_getRender' + 'Texture'](), _0x36c423 = _0x22dced['width'], _0x51cf4b = _0x22dced['height'];
            _0x20aa00['_needInter' + 'nalRenderT' + 'exture']() ? (_0x366bac = 0x0, _0x2b0175 = 0x0) : (_0x366bac = _0x22dced['x'], _0x2b0175 = _0x20aa00['_getCanvas' + 'Height']() - _0x22dced['y'] - _0x51cf4b), _0x595517['viewport'](_0x366bac, _0x2b0175, _0x36c423, _0x51cf4b);
            var _0x1413fc = _0x20aa00['clearFlag'];
            switch (_0x1413fc !== _0x293adb['CLEARFLAG_' + 'SKY'] || _0x20aa00['skyRendere' + 'r']['_isAvailab' + 'le']() || this['_skyRender' + 'er']['_isAvailab' + 'le']() || (_0x1413fc = _0x293adb['CLEARFLAG_' + 'SOLIDCOLOR']), _0x1413fc) {
            case _0x293adb['CLEARFLAG_' + 'SOLIDCOLOR']:
                var _0xac62b8 = _0x20aa00['clearColor'];
                if (_0x595517['enable'](_0x595517['SCISSOR_TE' + 'ST']), _0x595517['scissor'](_0x366bac, _0x2b0175, _0x36c423, _0x51cf4b), _0xac62b8 ? _0x595517['clearColor'](_0xac62b8['x'], _0xac62b8['y'], _0xac62b8['z'], _0xac62b8['w']) : _0x595517['clearColor'](0x0, 0x0, 0x0, 0x0), _0x58a721)
                    switch (_0x58ec1e = _0x595517['COLOR_BUFF' + 'ER_BIT'], _0x58a721['depthStenc' + 'ilFormat']) {
                    case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x58ec1e |= _0x595517['DEPTH_BUFF' + 'ER_BIT'];
                        break;
                    case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x58ec1e |= _0x595517['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_16_8']:
                        _0x58ec1e |= _0x595517['DEPTH_BUFF' + 'ER_BIT'], _0x58ec1e |= _0x595517['STENCIL_BU' + 'FFER_BIT'];
                    }
                else
                    _0x58ec1e = _0x595517['COLOR_BUFF' + 'ER_BIT'] | _0x595517['DEPTH_BUFF' + 'ER_BIT'];
                _0x33d6e0['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x595517, !0x0), _0x595517['clear'](_0x58ec1e), _0x595517['disable'](_0x595517['SCISSOR_TE' + 'ST']);
                break;
            case _0x293adb['CLEARFLAG_' + 'SKY']:
            case _0x293adb['CLEARFLAG_' + 'DEPTHONLY']:
                if (_0x595517['enable'](_0x595517['SCISSOR_TE' + 'ST']), _0x595517['scissor'](_0x366bac, _0x2b0175, _0x36c423, _0x51cf4b), _0x58a721)
                    switch (_0x58a721['depthStenc' + 'ilFormat']) {
                    case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']:
                        _0x58ec1e = _0x595517['DEPTH_BUFF' + 'ER_BIT'];
                        break;
                    case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['STENCIL_8']:
                        _0x58ec1e = _0x595517['STENCIL_BU' + 'FFER_BIT'];
                        break;
                    case _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_16_8']:
                        _0x58ec1e = _0x595517['DEPTH_BUFF' + 'ER_BIT'] | _0x595517['STENCIL_BU' + 'FFER_BIT'];
                    }
                else
                    _0x58ec1e = _0x595517['DEPTH_BUFF' + 'ER_BIT'];
                _0x33d6e0['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x595517, !0x0), _0x595517['clear'](_0x58ec1e), _0x595517['disable'](_0x595517['SCISSOR_TE' + 'ST']);
                break;
            case _0x293adb['CLEARFLAG_' + 'NONE']:
                break;
            default:
                throw new Error('BaseScene:' + 'camera\x20cle' + 'arFlag\x20inv' + 'alid.');
            }
        }
        ['_renderSce' + 'ne'](_0x279c68) {
            var _0x2cda75 = _0x279c68['camera'];
            if (this['_opaqueQue' + 'ue']['_render'](_0x279c68), _0x2cda75['clearFlag'] === _0x293adb['CLEARFLAG_' + 'SKY'] && (_0x2cda75['skyRendere' + 'r']['_isAvailab' + 'le']() ? _0x2cda75['skyRendere' + 'r']['_render'](_0x279c68) : this['_skyRender' + 'er']['_isAvailab' + 'le']() && this['_skyRender' + 'er']['_render'](_0x279c68)), this['_transpare' + 'ntQueue']['_render'](_0x279c68), _0x2585ad['debugFrust' + 'umCulling']) {
                for (var _0x74b0d5 = this['_debugTool']['_render']['_renderEle' + 'ments'], _0x4b9611 = 0x0, _0x30e6a4 = _0x74b0d5['length']; _0x4b9611 < _0x30e6a4; _0x4b9611++)
                    _0x74b0d5[_0x4b9611]['_update'](this, _0x279c68, null, null), _0x74b0d5[_0x4b9611]['_render'](_0x279c68);
            }
        }
        ['_parse'](_0x35eee4, _0x40b8df) {
            var _0x2f9ec2 = _0x35eee4['lightmaps'];
            if (_0x2f9ec2) {
                for (var _0xbfa450 = _0x2f9ec2['length'], _0x2fde07 = [], _0x5ec121 = 0x0; _0x5ec121 < _0xbfa450; _0x5ec121++)
                    _0x2fde07[_0x5ec121] = _0x33d6e0['Loader']['getRes'](_0x2f9ec2[_0x5ec121]['path']);
                this['setlightma' + 'ps'](_0x2fde07);
            }
            var _0x37ec1a = _0x35eee4['ambientCol' + 'or'];
            if (_0x37ec1a) {
                var _0xcdeb1b = this['ambientCol' + 'or'];
                _0xcdeb1b['fromArray'](_0x37ec1a), this['ambientCol' + 'or'] = _0xcdeb1b;
            }
            var _0xfc3a04 = _0x35eee4['sky'];
            if (_0xfc3a04)
                switch (this['_skyRender' + 'er']['material'] = _0x33d6e0['Loader']['getRes'](_0xfc3a04['material']['path']), _0xfc3a04['mesh']) {
                case 'SkyBox':
                    this['_skyRender' + 'er']['mesh'] = _0x2958cd['instance'];
                    break;
                case 'SkyDome':
                    this['_skyRender' + 'er']['mesh'] = _0x3fc537['instance'];
                    break;
                default:
                    this['skyRendere' + 'r']['mesh'] = _0x2958cd['instance'];
                }
            var _0x5344cd = _0x35eee4['reflection' + 'Texture'];
            _0x5344cd && (this['customRefl' + 'ection'] = _0x33d6e0['Loader']['getRes'](_0x5344cd)), this['enableFog'] = _0x35eee4['enableFog'], this['fogStart'] = _0x35eee4['fogStart'], this['fogRange'] = _0x35eee4['fogRange'];
            var _0x107e34 = _0x35eee4['fogColor'];
            if (_0x107e34) {
                var _0x2d038d = this['fogColor'];
                _0x2d038d['fromArray'](_0x107e34), this['fogColor'] = _0x2d038d;
            }
        }
        ['_onActive']() {
            super['_onActive'](), _0x33d6e0['ILaya']['stage']['_scene3Ds']['push'](this);
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e']();
            var _0x3d06e4 = _0x33d6e0['ILaya']['stage']['_scene3Ds'];
            _0x3d06e4['splice'](_0x3d06e4['indexOf'](this), 0x1);
        }
        ['_addRender' + 'Object'](_0x5c1f5a) {
            if (this['_octree'] && _0x5c1f5a['_supportOc' + 'tree'])
                this['_octree']['add'](_0x5c1f5a);
            else {
                if (this['_renders']['add'](_0x5c1f5a), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                    var _0xbfb4b2 = _0x5c1f5a['_getIndexI' + 'nList'](), _0x153d7f = this['_cullingBu' + 'fferIndice' + 's']['length'];
                    if (_0xbfb4b2 >= _0x153d7f) {
                        var _0x1a42fe = this['_cullingBu' + 'fferIndice' + 's'], _0x45b73c = this['_cullingBu' + 'fferResult'];
                        this['_cullingBu' + 'fferIndice' + 's'] = new Int32Array(_0x153d7f + 0x400), this['_cullingBu' + 'fferResult'] = new Int32Array(_0x153d7f + 0x400), this['_cullingBu' + 'fferIndice' + 's']['set'](_0x1a42fe, 0x0), this['_cullingBu' + 'fferResult']['set'](_0x45b73c, 0x0);
                    }
                    this['_cullingBu' + 'fferIndice' + 's'][_0xbfb4b2] = _0x5c1f5a['_cullingBu' + 'fferIndex'];
                }
            }
        }
        ['_removeRen' + 'derObject'](_0x263531) {
            var _0x49e410;
            this['_octree'] && _0x263531['_supportOc' + 'tree'] ? this['_octree']['remove'](_0x263531) : (_0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (_0x49e410 = this['_renders']['elements'][this['_renders']['length'] - 0x1]), this['_renders']['remove'](_0x263531), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (this['_cullingBu' + 'fferIndice' + 's'][_0x49e410['_getIndexI' + 'nList']()] = _0x49e410['_cullingBu' + 'fferIndex']));
        }
        ['_getRender' + 'Queue'](_0x336509) {
            return _0x336509 <= 0x9c4 ? this['_opaqueQue' + 'ue'] : this['_transpare' + 'ntQueue'];
        }
        ['setlightma' + 'ps'](_0x24569c) {
            for (var _0x39cffe = this['_lightmaps'], _0x523a40 = 0x0, _0x4b4073 = _0x39cffe['length']; _0x523a40 < _0x4b4073; _0x523a40++)
                _0x39cffe[_0x523a40]['_removeRef' + 'erence']();
            if (!_0x24569c)
                throw new Error('Scene3D:\x20v' + 'alue\x20value' + '\x20can\x27t\x20be\x20' + 'null.');
            var _0x15c10a = _0x24569c['length'];
            for (_0x39cffe['length'] = _0x15c10a, _0x523a40 = 0x0; _0x523a40 < _0x15c10a; _0x523a40++) {
                var _0x505998 = _0x24569c[_0x523a40];
                _0x505998['_addRefere' + 'nce'](), _0x39cffe[_0x523a40] = _0x505998;
            }
            for (_0x523a40 = 0x0, _0x4b4073 = this['_children']['length']; _0x523a40 < _0x4b4073; _0x523a40++)
                this['_setLightm' + 'apToChildN' + 'ode'](this['_children'][_0x523a40]);
        }
        ['getlightma' + 'ps']() {
            return this['_lightmaps']['slice']();
        }
        ['destroy'](_0x47737b = !0x0) {
            this['destroyed'] || (super['destroy'](_0x47737b), this['_skyRender' + 'er']['destroy'](), this['_skyRender' + 'er'] = null, this['_direction' + 'Lights'] = null, this['_pointLigh' + 'ts'] = null, this['_spotLight' + 's'] = null, this['_alternate' + 'Lights'] = null, this['_lightmaps'] = null, this['_shaderVal' + 'ues'] = null, this['_renders'] = null, this['_cameraPoo' + 'l'] = null, this['_octree'] = null, this['parallelSp' + 'litShadowM' + 'aps'] = null, this['_physicsSi' + 'mulation'] && this['_physicsSi' + 'mulation']['_destroy'](), _0x33d6e0['Loader']['clearRes'](this['url']));
        }
        ['render'](_0x1e65be, _0x112144, _0xf47a13) {
            _0x1e65be['_curSubmit'] = _0x33d6e0['SubmitBase']['RENDERBASE'], this['_children']['length'] > 0x0 && _0x1e65be['addRenderO' + 'bject'](this);
        }
        ['renderSubm' + 'it']() {
            var _0x193ba8, _0x4b9c6c, _0x53fa0d;
            _0x33d6e0['LayaGL']['instance'];
            for (this['_prepareSc' + 'eneToRende' + 'r'](), _0x193ba8 = 0x0, _0x53fa0d = (_0x4b9c6c = this['_cameraPoo' + 'l']['length']) - 0x1; _0x193ba8 < _0x4b9c6c; _0x193ba8++) {
                _0x33d6e0['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && _0x4ac605['setRuntime' + 'ValueMode'](_0x193ba8 == _0x53fa0d);
                var _0x1f1d25 = this['_cameraPoo' + 'l'][_0x193ba8];
                _0x1f1d25['enableRend' + 'er'] && _0x1f1d25['render']();
            }
            return _0x33d6e0['Context']['set2DRende' + 'rConfig'](), 0x1;
        }
        ['getRenderT' + 'ype']() {
            return 0x0;
        }
        ['releaseRen' + 'der']() {
        }
        ['reUse'](_0x127752, _0x5208ac) {
            return 0x0;
        }
    }
    _0x169b81['HIERARCHY'] = 'HIERARCHY', _0x169b81['physicsSet' + 'tings'] = new _0x93820f(), _0x169b81['octreeCull' + 'ing'] = !0x1, _0x169b81['octreeInit' + 'ialSize'] = 0x40, _0x169b81['octreeInit' + 'ialCenter'] = new _0x4795b3(0x0, 0x0, 0x0), _0x169b81['octreeMinN' + 'odeSize'] = 0x2, _0x169b81['octreeLoos' + 'eness'] = 1.25, _0x169b81['REFLECTION' + 'MODE_SKYBO' + 'X'] = 0x0, _0x169b81['REFLECTION' + 'MODE_CUSTO' + 'M'] = 0x1, _0x169b81['FOGCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_FogColor'), _0x169b81['FOGSTART'] = _0x1ede74['propertyNa' + 'meToID']('u_FogStart'), _0x169b81['FOGRANGE'] = _0x1ede74['propertyNa' + 'meToID']('u_FogRange'), _0x169b81['DIRECTIONL' + 'IGHTCOUNT'] = _0x1ede74['propertyNa' + 'meToID']('u_Diration' + 'LightCount'), _0x169b81['LIGHTBUFFE' + 'R'] = _0x1ede74['propertyNa' + 'meToID']('u_LightBuf' + 'fer'), _0x169b81['CLUSTERBUF' + 'FER'] = _0x1ede74['propertyNa' + 'meToID']('u_LightClu' + 'sterBuffer'), _0x169b81['SUNLIGHTDI' + 'RECTION'] = _0x1ede74['propertyNa' + 'meToID']('u_SunLight' + '.direction'), _0x169b81['SUNLIGHTDI' + 'RCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_SunLight' + '.color'), _0x169b81['LIGHTDIREC' + 'TION'] = _0x1ede74['propertyNa' + 'meToID']('u_Directio' + 'nLight.dir' + 'ection'), _0x169b81['LIGHTDIRCO' + 'LOR'] = _0x1ede74['propertyNa' + 'meToID']('u_Directio' + 'nLight.col' + 'or'), _0x169b81['POINTLIGHT' + 'POS'] = _0x1ede74['propertyNa' + 'meToID']('u_PointLig' + 'ht.positio' + 'n'), _0x169b81['POINTLIGHT' + 'RANGE'] = _0x1ede74['propertyNa' + 'meToID']('u_PointLig' + 'ht.range'), _0x169b81['POINTLIGHT' + 'ATTENUATIO' + 'N'] = _0x1ede74['propertyNa' + 'meToID']('u_PointLig' + 'ht.attenua' + 'tion'), _0x169b81['POINTLIGHT' + 'COLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_PointLig' + 'ht.color'), _0x169b81['SPOTLIGHTP' + 'OS'] = _0x1ede74['propertyNa' + 'meToID']('u_SpotLigh' + 't.position'), _0x169b81['SPOTLIGHTD' + 'IRECTION'] = _0x1ede74['propertyNa' + 'meToID']('u_SpotLigh' + 't.directio' + 'n'), _0x169b81['SPOTLIGHTS' + 'POTANGLE'] = _0x1ede74['propertyNa' + 'meToID']('u_SpotLigh' + 't.spot'), _0x169b81['SPOTLIGHTR' + 'ANGE'] = _0x1ede74['propertyNa' + 'meToID']('u_SpotLigh' + 't.range'), _0x169b81['SPOTLIGHTC' + 'OLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_SpotLigh' + 't.color'), _0x169b81['SHADOWDIST' + 'ANCE'] = _0x1ede74['propertyNa' + 'meToID']('u_shadowPS' + 'SMDistance'), _0x169b81['SHADOWLIGH' + 'TVIEWPROJE' + 'CT'] = _0x1ede74['propertyNa' + 'meToID']('u_lightSha' + 'dowVP'), _0x169b81['SHADOWMAPP' + 'CFOFFSET'] = _0x1ede74['propertyNa' + 'meToID']('u_shadowPC' + 'Foffset'), _0x169b81['SHADOWMAPT' + 'EXTURE1'] = _0x1ede74['propertyNa' + 'meToID']('u_shadowMa' + 'p1'), _0x169b81['SHADOWMAPT' + 'EXTURE2'] = _0x1ede74['propertyNa' + 'meToID']('u_shadowMa' + 'p2'), _0x169b81['SHADOWMAPT' + 'EXTURE3'] = _0x1ede74['propertyNa' + 'meToID']('u_shadowMa' + 'p3'), _0x169b81['AMBIENTCOL' + 'OR'] = _0x1ede74['propertyNa' + 'meToID']('u_AmbientC' + 'olor'), _0x169b81['REFLECTION' + 'TEXTURE'] = _0x1ede74['propertyNa' + 'meToID']('u_ReflectT' + 'exture'), _0x169b81['REFLETIONI' + 'NTENSITY'] = _0x1ede74['propertyNa' + 'meToID']('u_ReflectI' + 'ntensity'), _0x169b81['TIME'] = _0x1ede74['propertyNa' + 'meToID']('u_Time');
    class _0x19c8e9 {
    }
    class _0x334d4e extends _0x1f30fc {
        constructor(_0x19e247) {
            super(_0x19e247), this['_bones'] = [], this['_skinnedDa' + 'taLoopMark' + 's'] = [], this['_localBoun' + 'ds'] = new _0x5a0bdd(_0x4795b3['_ZERO'], _0x4795b3['_ZERO']), this['_cacheAnim' + 'ationNode'] = [];
        }
        get ['localBound' + 's']() {
            return this['_localBoun' + 'ds'];
        }
        set ['localBound' + 's'](_0x497035) {
            this['_localBoun' + 'ds'] = _0x497035;
        }
        get ['rootBone']() {
            return this['_cacheRoot' + 'Bone'];
        }
        set ['rootBone'](_0x1834f7) {
            this['_cacheRoot' + 'Bone'] != _0x1834f7 && (this['_cacheRoot' + 'Bone'] ? this['_cacheRoot' + 'Bone']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_owner']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), _0x1834f7 ? _0x1834f7['transform']['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_owner']['transform']['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'Bone'] = _0x1834f7, this['_onWorldMa' + 'tNeedChang' + 'e'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE']));
        }
        get ['bones']() {
            return this['_bones'];
        }
        ['_computeSk' + 'innedData']() {
            if (this['_cacheMesh'] && this['_cacheAvat' + 'ar'] || this['_cacheMesh'] && !this['_cacheAvat' + 'ar']) {
                for (var _0x4242a0 = this['_cacheMesh']['_inverseBi' + 'ndPoses'], _0x1a6c3c = this['_cacheMesh']['_bindPoseI' + 'ndices'], _0x309105 = this['_cacheMesh']['_skinDataP' + 'athMarks'], _0x1175f5 = 0x0, _0x4b49d4 = this['_cacheMesh']['subMeshCou' + 'nt']; _0x1175f5 < _0x4b49d4; _0x1175f5++)
                    for (var _0x45c000 = this['_cacheMesh']['getSubMesh'](_0x1175f5)['_boneIndic' + 'esList'], _0x2d3097 = this['_skinnedDa' + 'ta'][_0x1175f5], _0x37434f = 0x0, _0x19880b = _0x45c000['length']; _0x37434f < _0x19880b; _0x37434f++) {
                        var _0x263167 = _0x45c000[_0x37434f];
                        this['_computeSu' + 'bSkinnedDa' + 'ta'](_0x4242a0, _0x263167, _0x1a6c3c, _0x2d3097[_0x37434f], _0x309105);
                    }
            }
        }
        ['_computeSu' + 'bSkinnedDa' + 'ta'](_0x405a87, _0x18cf31, _0x505cee, _0x56a779, _0x4a760a) {
            for (var _0x28a82d = 0x0, _0x3ac3df = _0x18cf31['length']; _0x28a82d < _0x3ac3df; _0x28a82d++) {
                var _0x44b614 = _0x18cf31[_0x28a82d];
                if (this['_skinnedDa' + 'taLoopMark' + 's'][_0x44b614] === _0x33d6e0['Stat']['loopCount']) {
                    for (var _0x25fea4 = _0x4a760a[_0x44b614], _0x4512e5 = this['_skinnedDa' + 'ta'][_0x25fea4[0x0]][_0x25fea4[0x1]], _0x59b102 = 0x10 * _0x25fea4[0x2], _0x2c24d3 = 0x10 * _0x28a82d, _0x35399a = 0x0; _0x35399a < 0x10; _0x35399a++)
                        _0x56a779[_0x2c24d3 + _0x35399a] = _0x4512e5[_0x59b102 + _0x35399a];
                } else {
                    if (this['_cacheAvat' + 'ar'])
                        _0x89f66e['_mulMatrix' + 'Array'](this['_cacheAnim' + 'ationNode'][_0x44b614]['transform']['getWorldMa' + 'trix'](), _0x405a87[_0x505cee[_0x44b614]], _0x56a779, 0x10 * _0x28a82d);
                    else {
                        var _0x4713c0 = _0x505cee[_0x44b614];
                        _0x89f66e['_mulMatrix' + 'Array'](this['_bones'][_0x4713c0]['transform']['worldMatri' + 'x']['elements'], _0x405a87[_0x4713c0], _0x56a779, 0x10 * _0x28a82d);
                    }
                    this['_skinnedDa' + 'taLoopMark' + 's'][_0x44b614] = _0x33d6e0['Stat']['loopCount'];
                }
            }
        }
        ['_onWorldMa' + 'tNeedChang' + 'e'](_0x2cf72f) {
            this['_boundsCha' + 'nge'] = !0x0, this['_octreeNod' + 'e'] && (this['_cacheAvat' + 'ar'] ? -0x1 === this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this) : (_0x2cf72f &= _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE']) && -0x1 === this['_indexInOc' + 'treeMotion' + 'List'] && this['_octreeNod' + 'e']['_octree']['addMotionO' + 'bject'](this));
        }
        ['_createRen' + 'derElement']() {
            return new _0x14112a();
        }
        ['_onMeshCha' + 'nge'](_0x4e3fe6) {
            super['_onMeshCha' + 'nge'](_0x4e3fe6), this['_cacheMesh'] = _0x4e3fe6;
            var _0x43c294 = _0x4e3fe6['subMeshCou' + 'nt'];
            this['_skinnedDa' + 'ta'] = [], this['_skinnedDa' + 'taLoopMark' + 's']['length'] = _0x4e3fe6['_bindPoseI' + 'ndices']['length'];
            for (var _0x2caddf = 0x0; _0x2caddf < _0x43c294; _0x2caddf++)
                for (var _0x11699d = _0x4e3fe6['getSubMesh'](_0x2caddf)['_boneIndic' + 'esList'], _0xe0c816 = _0x11699d['length'], _0x4235d2 = this['_skinnedDa' + 'ta'][_0x2caddf] = [], _0x516f0f = 0x0; _0x516f0f < _0xe0c816; _0x516f0f++)
                    _0x4235d2[_0x516f0f] = new Float32Array(0x10 * _0x11699d[_0x516f0f]['length']);
            this['_cacheAvat' + 'ar'] && _0x4e3fe6 && this['_getCacheA' + 'nimationNo' + 'des']();
        }
        ['_setCacheA' + 'nimator'](_0x5c5127) {
            this['_cacheAnim' + 'ator'] = _0x5c5127, this['_shaderVal' + 'ues']['addDefine'](_0x19c8e9['SHADERDEFI' + 'NE_BONE']), this['_setRootNo' + 'de']();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
            if (this['_cacheAvat' + 'ar']) {
                if (this['_cacheAnim' + 'ator'] && this['_rootBone']) {
                    var _0x145a68 = _0x334d4e['_tempMatri' + 'x4x4'];
                    _0x89f66e['matrix4x4M' + 'ultiplyMFM'](this['_cacheAnim' + 'ator']['owner']['transform']['worldMatri' + 'x'], this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['getWorldMa' + 'trix'](), _0x145a68), this['_localBoun' + 'ds']['_tranform'](_0x145a68, this['_bounds']);
                } else
                    super['_calculate' + 'BoundingBo' + 'x']();
            } else
                this['_cacheRoot' + 'Bone'] ? this['_localBoun' + 'ds']['_tranform'](this['_cacheRoot' + 'Bone']['transform']['worldMatri' + 'x'], this['_bounds']) : this['_localBoun' + 'ds']['_tranform'](this['_owner']['transform']['worldMatri' + 'x'], this['_bounds']);
            if (_0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing']) {
                var _0x33d4c6 = this['_bounds']['getMin'](), _0xd490e0 = this['_bounds']['getMax'](), _0xea39ee = _0x2585ad['_cullingBu' + 'ffer'];
                _0xea39ee[this['_cullingBu' + 'fferIndex'] + 0x1] = _0x33d4c6['x'], _0xea39ee[this['_cullingBu' + 'fferIndex'] + 0x2] = _0x33d4c6['y'], _0xea39ee[this['_cullingBu' + 'fferIndex'] + 0x3] = _0x33d4c6['z'], _0xea39ee[this['_cullingBu' + 'fferIndex'] + 0x4] = _0xd490e0['x'], _0xea39ee[this['_cullingBu' + 'fferIndex'] + 0x5] = _0xd490e0['y'], _0xea39ee[this['_cullingBu' + 'fferIndex'] + 0x6] = _0xd490e0['z'];
            }
        }
        ['_renderUpd' + 'ate'](_0xe06378, _0x45ab80) {
            if (this['_cacheAnim' + 'ator']) {
                if (this['_computeSk' + 'innedData'](), this['_cacheAvat' + 'ar']) {
                    var _0x222138 = this['_cacheAnim' + 'ator']['owner']['_transform'];
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x222138['worldMatri' + 'x']);
                } else
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x16c2be['DEFAULT']);
            } else
                this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['WORLDMATRI' + 'X'], _0x45ab80['worldMatri' + 'x']);
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x23773f, _0x472936) {
            var _0x95aa29 = _0x23773f['projection' + 'ViewMatrix'];
            if (this['_cacheAnim' + 'ator']) {
                if (this['_cacheAvat' + 'ar']) {
                    var _0x4e1837 = this['_cacheAnim' + 'ator']['owner']['_transform'];
                    _0x16c2be['multiply'](_0x95aa29, _0x4e1837['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
                } else
                    this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], _0x95aa29);
            } else
                _0x16c2be['multiply'](_0x95aa29, _0x472936['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix']);
        }
        ['_destroy']() {
            super['_destroy'](), this['_cacheAvat' + 'ar'] ? this['_cacheRoot' + 'AnimationN' + 'ode'] && this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_cacheRoot' + 'Bone'] ? !this['_cacheRoot' + 'Bone']['destroyed'] && this['_cacheRoot' + 'Bone']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']) : this['_owner'] && !this['_owner']['destroyed'] && this['_owner']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']);
        }
        get ['bounds']() {
            return (this['_boundsCha' + 'nge'] || this['_cacheAvat' + 'ar']) && (this['_calculate' + 'BoundingBo' + 'x'](), this['_boundsCha' + 'nge'] = !0x1), this['_bounds'];
        }
        ['_setRootBo' + 'ne'](_0x28cae0) {
            this['_rootBone'] = _0x28cae0, this['_setRootNo' + 'de']();
        }
        ['_setRootNo' + 'de']() {
            var _0x4578db;
            _0x4578db = this['_cacheAnim' + 'ator'] && this['_rootBone'] && this['_cacheAvat' + 'ar'] ? this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'][this['_rootBone']] : null, this['_cacheRoot' + 'AnimationN' + 'ode'] != _0x4578db && (this['_onWorldMa' + 'tNeedChang' + 'e'](_0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE']), this['_owner']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'AnimationN' + 'ode'] && this['_cacheRoot' + 'AnimationN' + 'ode']['transform']['off'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), _0x4578db && _0x4578db['transform']['on'](_0x33d6e0['Event']['TRANSFORM_' + 'CHANGED'], this, this['_onWorldMa' + 'tNeedChang' + 'e']), this['_cacheRoot' + 'AnimationN' + 'ode'] = _0x4578db);
        }
        ['_getCacheA' + 'nimationNo' + 'des']() {
            var _0x2d550c = this['_cacheMesh']['_boneNames'], _0xd79402 = this['_cacheMesh']['_bindPoseI' + 'ndices'], _0x2964ae = _0xd79402['length'];
            if (_0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                this['_cacheAnim' + 'ationNodeI' + 'ndices'] = new Uint16Array(_0x2964ae);
                var _0x356997 = this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'];
                for (_0x22e10d = 0x0; _0x22e10d < _0x2964ae; _0x22e10d++) {
                    var _0x3114ab = _0x356997[_0x2d550c[_0xd79402[_0x22e10d]]];
                    this['_cacheAnim' + 'ationNodeI' + 'ndices'][_0x22e10d] = _0x3114ab ? _0x3114ab['_worldMatr' + 'ixIndex'] : 0x0;
                }
            } else {
                this['_cacheAnim' + 'ationNode']['length'] = _0x2964ae;
                for (var _0x481e08 = this['_cacheAnim' + 'ator']['_avatarNod' + 'eMap'], _0x22e10d = 0x0; _0x22e10d < _0x2964ae; _0x22e10d++) {
                    var _0x321d6d = _0x481e08[_0x2d550c[_0xd79402[_0x22e10d]]];
                    this['_cacheAnim' + 'ationNode'][_0x22e10d] = _0x321d6d;
                }
            }
        }
        ['_setCacheA' + 'vatar'](_0x580f5f) {
            this['_cacheAvat' + 'ar'] !== _0x580f5f && (this['_cacheMesh'] ? (this['_cacheAvat' + 'ar'] = _0x580f5f, _0x580f5f && (this['_shaderVal' + 'ues']['addDefine'](_0x19c8e9['SHADERDEFI' + 'NE_BONE']), this['_getCacheA' + 'nimationNo' + 'des']())) : this['_cacheAvat' + 'ar'] = _0x580f5f, this['_setRootNo' + 'de']());
        }
        ['_computeSu' + 'bSkinnedDa' + 'taNative'](_0x37a398, _0x1b1156, _0xa4d446, _0x1e6a19, _0x8342f0, _0x1054ec) {
            _0x33d6e0['LayaGL']['instance']['computeSub' + 'SkinnedDat' + 'a'](_0x37a398, _0x1b1156, _0xa4d446, _0x1e6a19, _0x8342f0, _0x1054ec);
        }
        ['_computeSk' + 'innedDataF' + 'orNative']() {
            if (this['_cacheMesh'] && this['_cacheAvat' + 'ar'] || this['_cacheMesh'] && !this['_cacheAvat' + 'ar']) {
                for (var _0x52d21f = this['_cacheMesh']['_inverseBi' + 'ndPoses'], _0x3eb99c = this['_cacheMesh']['_bindPoseI' + 'ndices'], _0x7620aa = this['_cacheMesh']['_skinDataP' + 'athMarks'], _0x24b896 = 0x0, _0x971e5c = this['_cacheMesh']['subMeshCou' + 'nt']; _0x24b896 < _0x971e5c; _0x24b896++)
                    for (var _0x37606f = this['_cacheMesh']['getSubMesh'](_0x24b896)['_boneIndic' + 'esList'], _0x4f18c8 = this['_skinnedDa' + 'ta'][_0x24b896], _0x438cc4 = 0x0, _0x1776ff = _0x37606f['length']; _0x438cc4 < _0x1776ff; _0x438cc4++) {
                        var _0x5daad6 = _0x37606f[_0x438cc4];
                        this['_cacheAvat' + 'ar'] && _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation'] ? this['_computeSu' + 'bSkinnedDa' + 'taNative'](this['_cacheAnim' + 'ator']['_animation' + 'NodeWorldM' + 'atrixs'], this['_cacheAnim' + 'ationNodeI' + 'ndices'], this['_cacheMesh']['_inverseBi' + 'ndPosesBuf' + 'fer'], _0x5daad6, _0x3eb99c, _0x4f18c8[_0x438cc4]) : this['_computeSu' + 'bSkinnedDa' + 'ta'](_0x52d21f, _0x5daad6, _0x3eb99c, _0x4f18c8[_0x438cc4], _0x7620aa);
                    }
            }
        }
    }
    _0x334d4e['_tempMatri' + 'x4x4'] = new _0x16c2be();
    class _0x333a16 extends _0x33bc07 {
        constructor(_0x111294 = null, _0x2a4c76 = null) {
            super(_0x2a4c76), this['_meshFilte' + 'r'] = new _0xa4f90b(this), this['_render'] = new _0x334d4e(this), _0x111294 && (this['_meshFilte' + 'r']['sharedMesh'] = _0x111294);
        }
        static ['__init__']() {
            _0x19c8e9['SHADERDEFI' + 'NE_BONE'] = _0x1ede74['getDefineB' + 'yName']('BONE');
        }
        get ['meshFilter']() {
            return this['_meshFilte' + 'r'];
        }
        get ['skinnedMes' + 'hRenderer']() {
            return this['_render'];
        }
        ['_parse'](_0x547384, _0x5307b5) {
            super['_parse'](_0x547384, _0x5307b5);
            var _0x19a4f3 = this['skinnedMes' + 'hRenderer'], _0x499513 = _0x547384['lightmapIn' + 'dex'];
            null != _0x499513 && (_0x19a4f3['lightmapIn' + 'dex'] = _0x499513);
            var _0xe98d98, _0x375902 = _0x547384['lightmapSc' + 'aleOffset'];
            if (_0x375902 && (_0x19a4f3['lightmapSc' + 'aleOffset'] = new _0x333f41(_0x375902[0x0], _0x375902[0x1], _0x375902[0x2], _0x375902[0x3])), _0xe98d98 = _0x547384['meshPath']) {
                var _0xf05244 = _0x33d6e0['Loader']['getRes'](_0xe98d98);
                _0xf05244 && (this['meshFilter']['sharedMesh'] = _0xf05244);
            }
            var _0xd885c6 = _0x547384['materials'];
            if (_0xd885c6) {
                var _0x212fc9 = _0x19a4f3['sharedMate' + 'rials'], _0x937ef6 = _0xd885c6['length'];
                _0x212fc9['length'] = _0x937ef6;
                for (var _0x286a54 = 0x0; _0x286a54 < _0x937ef6; _0x286a54++)
                    _0x212fc9[_0x286a54] = _0x33d6e0['Loader']['getRes'](_0xd885c6[_0x286a54]['path']);
                _0x19a4f3['sharedMate' + 'rials'] = _0x212fc9;
            }
            var _0x2ea501 = _0x547384['boundBox'], _0x11796a = _0x2ea501['min'], _0x4558c3 = _0x2ea501['max'];
            if (_0x19a4f3['localBound' + 's']['setMin'](new _0x4795b3(_0x11796a[0x0], _0x11796a[0x1], _0x11796a[0x2])), _0x19a4f3['localBound' + 's']['setMax'](new _0x4795b3(_0x4558c3[0x0], _0x4558c3[0x1], _0x4558c3[0x2])), _0x5307b5) {
                var _0x196611 = _0x547384['rootBone'];
                _0x19a4f3['rootBone'] = _0x5307b5[_0x196611];
                var _0xb6e912, _0x68d40 = _0x547384['bones'];
                for (_0x286a54 = 0x0, _0xb6e912 = _0x68d40['length']; _0x286a54 < _0xb6e912; _0x286a54++)
                    _0x19a4f3['bones']['push'](_0x5307b5[_0x68d40[_0x286a54]]);
            } else
                _0x547384['rootBone'] && _0x19a4f3['_setRootBo' + 'ne'](_0x547384['rootBone']);
        }
        ['_changeHie' + 'rarchyAnim' + 'ator'](_0x139f75) {
            super['_changeHie' + 'rarchyAnim' + 'ator'](_0x139f75), this['skinnedMes' + 'hRenderer']['_setCacheA' + 'nimator'](_0x139f75);
        }
        ['_changeAni' + 'matorAvata' + 'r'](_0x1cdda5) {
            this['skinnedMes' + 'hRenderer']['_setCacheA' + 'vatar'](_0x1cdda5);
        }
        ['_cloneTo'](_0x510138, _0x44b349, _0x374f8e) {
            var _0x248572 = _0x510138;
            _0x248572['meshFilter']['sharedMesh'] = this['meshFilter']['sharedMesh'];
            var _0x8f948d = this['_render'], _0x48512d = _0x248572['_render'];
            _0x48512d['enable'] = _0x8f948d['enable'], _0x48512d['sharedMate' + 'rials'] = _0x8f948d['sharedMate' + 'rials'], _0x48512d['castShadow'] = _0x8f948d['castShadow'];
            var _0x4b6a41 = _0x8f948d['lightmapSc' + 'aleOffset'];
            _0x4b6a41 && (_0x48512d['lightmapSc' + 'aleOffset'] = _0x4b6a41['clone']()), _0x48512d['receiveSha' + 'dow'] = _0x8f948d['receiveSha' + 'dow'], _0x48512d['sortingFud' + 'ge'] = _0x8f948d['sortingFud' + 'ge'], _0x48512d['_rootBone'] = _0x8f948d['_rootBone'];
            var _0xa42da2 = _0x8f948d['bones'], _0x2645b1 = _0x48512d['bones'], _0x40542f = _0xa42da2['length'];
            _0x2645b1['length'] = _0x40542f;
            var _0x6570a4 = _0x8f948d['rootBone'];
            if (_0x6570a4) {
                var _0x255dce = _0x89f66e['_getHierar' + 'chyPath'](_0x44b349, _0x6570a4, _0x333a16['_tempArray' + '0']);
                _0x48512d['rootBone'] = _0x255dce ? _0x89f66e['_getNodeBy' + 'HierarchyP' + 'ath'](_0x374f8e, _0x255dce) : _0x6570a4;
            }
            for (var _0x5cfaee = 0x0; _0x5cfaee < _0xa42da2['length']; _0x5cfaee++)
                _0x255dce = _0x89f66e['_getHierar' + 'chyPath'](_0x44b349, _0xa42da2[_0x5cfaee], _0x333a16['_tempArray' + '0']), _0x2645b1[_0x5cfaee] = _0x255dce ? _0x89f66e['_getNodeBy' + 'HierarchyP' + 'ath'](_0x374f8e, _0x255dce) : _0xa42da2[_0x5cfaee];
            var _0x26dc7f = _0x8f948d['localBound' + 's'];
            _0x26dc7f && _0x26dc7f['cloneTo'](_0x48512d['localBound' + 's']), super['_cloneTo'](_0x510138, _0x44b349, _0x374f8e);
        }
        ['destroy'](_0xb896ec = !0x0) {
            this['destroyed'] || (super['destroy'](_0xb896ec), this['_meshFilte' + 'r']['destroy']());
        }
        ['_create']() {
            return new _0x333a16();
        }
    }
    _0x333a16['_tempArray' + '0'] = [], _0x333a16['BONES'] = _0x1ede74['propertyNa' + 'meToID']('u_Bones');
    class _0x595179 extends _0x18b0d4 {
        constructor() {
            super(), this['setShaderN' + 'ame']('Trail'), this['_color'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['_shaderVal' + 'ues']['setVector'](_0x595179['TINTCOLOR'], new _0x333f41(0x1, 0x1, 0x1, 0x1)), this['renderMode'] = _0x595179['RENDERMODE' + '_ALPHABLEN' + 'DED'];
        }
        static ['__initDefi' + 'ne__']() {
            _0x595179['SHADERDEFI' + 'NE_MAINTEX' + 'TURE'] = _0x1ede74['getDefineB' + 'yName']('MAINTEXTUR' + 'E'), _0x595179['SHADERDEFI' + 'NE_TILINGO' + 'FFSET'] = _0x1ede74['getDefineB' + 'yName']('TILINGOFFS' + 'ET'), _0x595179['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG'] = _0x1ede74['getDefineB' + 'yName']('ADDTIVEFOG');
        }
        get ['_TintColor' + 'R']() {
            return this['_color']['x'];
        }
        set ['_TintColor' + 'R'](_0xa7b8ea) {
            this['_color']['x'] = _0xa7b8ea, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'G']() {
            return this['_color']['y'];
        }
        set ['_TintColor' + 'G'](_0x2fb8f6) {
            this['_color']['y'] = _0x2fb8f6, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'B']() {
            return this['_color']['z'];
        }
        set ['_TintColor' + 'B'](_0xf3ef77) {
            this['_color']['z'] = _0xf3ef77, this['color'] = this['_color'];
        }
        get ['_TintColor' + 'A']() {
            return this['_color']['w'];
        }
        set ['_TintColor' + 'A'](_0x28181c) {
            this['_color']['w'] = _0x28181c, this['color'] = this['_color'];
        }
        get ['_MainTex_S' + 'TX']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET'])['x'];
        }
        set ['_MainTex_S' + 'TX'](_0x2a1680) {
            var _0x2d1b8f = this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET']);
            _0x2d1b8f['x'] = _0x2a1680, this['tilingOffs' + 'et'] = _0x2d1b8f;
        }
        get ['_MainTex_S' + 'TY']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET'])['y'];
        }
        set ['_MainTex_S' + 'TY'](_0x26939b) {
            var _0x444f2c = this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET']);
            _0x444f2c['y'] = _0x26939b, this['tilingOffs' + 'et'] = _0x444f2c;
        }
        get ['_MainTex_S' + 'TZ']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET'])['z'];
        }
        set ['_MainTex_S' + 'TZ'](_0x18bbbe) {
            var _0xfd3bcd = this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET']);
            _0xfd3bcd['z'] = _0x18bbbe, this['tilingOffs' + 'et'] = _0xfd3bcd;
        }
        get ['_MainTex_S' + 'TW']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET'])['w'];
        }
        set ['_MainTex_S' + 'TW'](_0x203e43) {
            var _0x5cf666 = this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET']);
            _0x5cf666['w'] = _0x203e43, this['tilingOffs' + 'et'] = _0x5cf666;
        }
        set ['renderMode'](_0x2e43fe) {
            switch (_0x2e43fe) {
            case _0x595179['RENDERMODE' + '_ADDTIVE']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_NONE'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['addDefine'](_0x595179['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            case _0x595179['RENDERMODE' + '_ALPHABLEN' + 'DED']:
                this['renderQueu' + 'e'] = _0x18b0d4['RENDERQUEU' + 'E_TRANSPAR' + 'ENT'], this['alphaTest'] = !0x1, this['depthWrite'] = !0x1, this['cull'] = _0x311b27['CULL_NONE'], this['blend'] = _0x311b27['BLEND_ENAB' + 'LE_ALL'], this['blendSrc'] = _0x311b27['BLENDPARAM' + '_SRC_ALPHA'], this['blendDst'] = _0x311b27['BLENDPARAM' + '_ONE_MINUS' + '_SRC_ALPHA'], this['depthTest'] = _0x311b27['DEPTHTEST_' + 'LESS'], this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x595179['SHADERDEFI' + 'NE_ADDTIVE' + 'FOG']);
                break;
            default:
                throw new Error('TrailMater' + 'ial\x20:\x20rend' + 'erMode\x20val' + 'ue\x20error.');
            }
        }
        get ['colorR']() {
            return this['_TintColor' + 'R'];
        }
        set ['colorR'](_0x4f2805) {
            this['_TintColor' + 'R'] = _0x4f2805;
        }
        get ['colorG']() {
            return this['_TintColor' + 'G'];
        }
        set ['colorG'](_0x3efed) {
            this['_TintColor' + 'G'] = _0x3efed;
        }
        get ['colorB']() {
            return this['_TintColor' + 'B'];
        }
        set ['colorB'](_0x2d21ab) {
            this['_TintColor' + 'B'] = _0x2d21ab;
        }
        get ['colorA']() {
            return this['_TintColor' + 'A'];
        }
        set ['colorA'](_0x3f5082) {
            this['_TintColor' + 'A'] = _0x3f5082;
        }
        get ['color']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x595179['TINTCOLOR']);
        }
        set ['color'](_0x30bd0f) {
            this['_shaderVal' + 'ues']['setVector'](_0x595179['TINTCOLOR'], _0x30bd0f);
        }
        get ['texture']() {
            return this['_shaderVal' + 'ues']['getTexture'](_0x595179['MAINTEXTUR' + 'E']);
        }
        set ['texture'](_0x4b7461) {
            _0x4b7461 ? this['_shaderVal' + 'ues']['addDefine'](_0x595179['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x595179['SHADERDEFI' + 'NE_MAINTEX' + 'TURE']), this['_shaderVal' + 'ues']['setTexture'](_0x595179['MAINTEXTUR' + 'E'], _0x4b7461);
        }
        get ['tilingOffs' + 'etX']() {
            return this['_MainTex_S' + 'TX'];
        }
        set ['tilingOffs' + 'etX'](_0x191d14) {
            this['_MainTex_S' + 'TX'] = _0x191d14;
        }
        get ['tilingOffs' + 'etY']() {
            return this['_MainTex_S' + 'TY'];
        }
        set ['tilingOffs' + 'etY'](_0x48a6d5) {
            this['_MainTex_S' + 'TY'] = _0x48a6d5;
        }
        get ['tilingOffs' + 'etZ']() {
            return this['_MainTex_S' + 'TZ'];
        }
        set ['tilingOffs' + 'etZ'](_0x5894fd) {
            this['_MainTex_S' + 'TZ'] = _0x5894fd;
        }
        get ['tilingOffs' + 'etW']() {
            return this['_MainTex_S' + 'TW'];
        }
        set ['tilingOffs' + 'etW'](_0x4ddcaa) {
            this['_MainTex_S' + 'TW'] = _0x4ddcaa;
        }
        get ['tilingOffs' + 'et']() {
            return this['_shaderVal' + 'ues']['getVector'](_0x595179['TILINGOFFS' + 'ET']);
        }
        set ['tilingOffs' + 'et'](_0x44b297) {
            _0x44b297 && (0x1 != _0x44b297['x'] || 0x1 != _0x44b297['y'] || 0x0 != _0x44b297['z'] || 0x0 != _0x44b297['w']) ? this['_shaderVal' + 'ues']['addDefine'](_0x595179['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']) : this['_shaderVal' + 'ues']['removeDefi' + 'ne'](_0x595179['SHADERDEFI' + 'NE_TILINGO' + 'FFSET']), this['_shaderVal' + 'ues']['setVector'](_0x595179['TILINGOFFS' + 'ET'], _0x44b297);
        }
        set ['depthWrite'](_0x15eb84) {
            this['_shaderVal' + 'ues']['setBool'](_0x595179['DEPTH_WRIT' + 'E'], _0x15eb84);
        }
        get ['depthWrite']() {
            return this['_shaderVal' + 'ues']['getBool'](_0x595179['DEPTH_WRIT' + 'E']);
        }
        set ['cull'](_0x3dcda0) {
            this['_shaderVal' + 'ues']['setInt'](_0x595179['CULL'], _0x3dcda0);
        }
        get ['cull']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x595179['CULL']);
        }
        set ['blend'](_0x34accc) {
            this['_shaderVal' + 'ues']['setInt'](_0x595179['BLEND'], _0x34accc);
        }
        get ['blend']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x595179['BLEND']);
        }
        set ['blendSrc'](_0x22a237) {
            this['_shaderVal' + 'ues']['setInt'](_0x595179['BLEND_SRC'], _0x22a237);
        }
        get ['blendSrc']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x595179['BLEND_SRC']);
        }
        set ['blendDst'](_0x59c8ef) {
            this['_shaderVal' + 'ues']['setInt'](_0x595179['BLEND_DST'], _0x59c8ef);
        }
        get ['blendDst']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x595179['BLEND_DST']);
        }
        set ['depthTest'](_0x3eeae2) {
            this['_shaderVal' + 'ues']['setInt'](_0x595179['DEPTH_TEST'], _0x3eeae2);
        }
        get ['depthTest']() {
            return this['_shaderVal' + 'ues']['getInt'](_0x595179['DEPTH_TEST']);
        }
        ['clone']() {
            var _0x214721 = new _0x595179();
            return this['cloneTo'](_0x214721), _0x214721;
        }
    }
    _0x595179['RENDERMODE' + '_ALPHABLEN' + 'DED'] = 0x0, _0x595179['RENDERMODE' + '_ADDTIVE'] = 0x1, _0x595179['MAINTEXTUR' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('u_MainText' + 'ure'), _0x595179['TINTCOLOR'] = _0x1ede74['propertyNa' + 'meToID']('u_MainColo' + 'r'), _0x595179['TILINGOFFS' + 'ET'] = _0x1ede74['propertyNa' + 'meToID']('u_TilingOf' + 'fset'), _0x595179['CULL'] = _0x1ede74['propertyNa' + 'meToID']('s_Cull'), _0x595179['BLEND'] = _0x1ede74['propertyNa' + 'meToID']('s_Blend'), _0x595179['BLEND_SRC'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendSrc'), _0x595179['BLEND_DST'] = _0x1ede74['propertyNa' + 'meToID']('s_BlendDst'), _0x595179['DEPTH_TEST'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthTes' + 't'), _0x595179['DEPTH_WRIT' + 'E'] = _0x1ede74['propertyNa' + 'meToID']('s_DepthWri' + 'te');
    class _0x3e5472 {
    }
    _0x3e5472['Stretch'] = 0x0, _0x3e5472['Tile'] = 0x1, (_0x5eb6cd = _0x341b51['TrailAlign' + 'ment'] || (_0x341b51['TrailAlign' + 'ment'] = {}))[_0x5eb6cd['View'] = 0x0] = 'View', _0x5eb6cd[_0x5eb6cd['TransformZ'] = 0x1] = 'TransformZ';
    class _0x16bb26 {
        static get ['vertexDecl' + 'aration1']() {
            return _0x16bb26['_vertexDec' + 'laration1'];
        }
        static get ['vertexDecl' + 'aration2']() {
            return _0x16bb26['_vertexDec' + 'laration2'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x16bb26['_vertexDec' + 'laration1'];
        }
        static ['__init__']() {
            _0x16bb26['_vertexDec' + 'laration1'] = new _0x3c5011(0x20, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector3'], _0x16bb26['TRAIL_POSI' + 'TION0']),
                new _0x5c79c8(0xc, _0x43e6c5['Vector3'], _0x16bb26['TRAIL_OFFS' + 'ETVECTOR']),
                new _0x5c79c8(0x18, _0x43e6c5['Single'], _0x16bb26['TRAIL_TIME' + '0']),
                new _0x5c79c8(0x1c, _0x43e6c5['Single'], _0x16bb26['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'])
            ]), _0x16bb26['_vertexDec' + 'laration2'] = new _0x3c5011(0x14, [
                new _0x5c79c8(0x0, _0x43e6c5['Single'], _0x16bb26['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X']),
                new _0x5c79c8(0x4, _0x43e6c5['Color'], _0x16bb26['TRAIL_COLO' + 'R'])
            ]);
        }
    }
    _0x16bb26['TRAIL_POSI' + 'TION0'] = 0x0, _0x16bb26['TRAIL_OFFS' + 'ETVECTOR'] = 0x1, _0x16bb26['TRAIL_TIME' + '0'] = 0x2, _0x16bb26['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'] = 0x3, _0x16bb26['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X'] = 0x4, _0x16bb26['TRAIL_COLO' + 'R'] = 0x5;
    class _0x43bf3a extends _0x42e697 {
        constructor(_0x1149aa) {
            super(), this['_floatCoun' + 'tPerVertic' + 'es1'] = 0x8, this['_floatCoun' + 'tPerVertic' + 'es2'] = 0x5, this['_increaseS' + 'egementCou' + 'nt'] = 0x10, this['_activeInd' + 'ex'] = 0x0, this['_endIndex'] = 0x0, this['_needAddFi' + 'rstVertex'] = !0x1, this['_isTempEnd' + 'Vertex'] = !0x1, this['_vertices1'] = null, this['_vertices2'] = null, this['_lastFixed' + 'VertexPosi' + 'tion'] = new _0x4795b3(), this['_bufferSta' + 'te'] = new _0x59c541(), this['tmpColor'] = new _0x210bda(), this['_disappear' + 'BoundsMode'] = !0x1, this['_owner'] = _0x1149aa, this['_segementC' + 'ount'] = this['_increaseS' + 'egementCou' + 'nt'], this['_resizeDat' + 'a'](this['_segementC' + 'ount'], this['_bufferSta' + 'te']);
            var _0x17a4ed = this['_owner']['_owner']['trailRende' + 'rer']['bounds'], _0x401f65 = this['_owner']['_owner']['transform']['position'];
            _0x17a4ed['setMin'](_0x401f65), _0x17a4ed['setMax'](_0x401f65), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']();
        }
        ['_resizeDat' + 'a'](_0x32374f, _0x57d96e) {
            this['_subBirthT' + 'ime'] = new Float32Array(_0x32374f), this['_subDistan' + 'ce'] = new Float64Array(_0x32374f);
            var _0x6dd406 = _0x33d6e0['LayaGL']['instance'], _0xc90f8 = 0x2 * _0x32374f, _0x175b13 = _0x16bb26['vertexDecl' + 'aration1'], _0x388e70 = _0x16bb26['vertexDecl' + 'aration2'], _0x26c541 = [], _0x5be484 = _0xc90f8 * _0x175b13['vertexStri' + 'de'], _0x3e6d7c = _0xc90f8 * _0x388e70['vertexStri' + 'de'], _0x53ae55 = _0x5be484 + _0x3e6d7c;
            this['_vertices1'] = new Float32Array(_0xc90f8 * this['_floatCoun' + 'tPerVertic' + 'es1']), this['_vertices2'] = new Float32Array(_0xc90f8 * this['_floatCoun' + 'tPerVertic' + 'es2']), this['_vertexBuf' + 'fer1'] = new _0x5dfaba(_0x5be484, _0x6dd406['STATIC_DRA' + 'W'], !0x1), this['_vertexBuf' + 'fer1']['vertexDecl' + 'aration'] = _0x175b13, this['_vertexBuf' + 'fer2'] = new _0x5dfaba(_0x3e6d7c, _0x6dd406['DYNAMIC_DR' + 'AW'], !0x1), this['_vertexBuf' + 'fer2']['vertexDecl' + 'aration'] = _0x388e70, _0x26c541['push'](this['_vertexBuf' + 'fer1']), _0x26c541['push'](this['_vertexBuf' + 'fer2']), _0x57d96e['bind'](), _0x57d96e['applyVerte' + 'xBuffers'](_0x26c541), _0x57d96e['unBind'](), _0x33d6e0['Resource']['_addMemory'](_0x53ae55, _0x53ae55);
        }
        ['_resetData']() {
            var _0x29163a = this['_endIndex'] - this['_activeInd' + 'ex'], _0x2313c7 = new Float32Array(this['_vertices1']['buffer'], 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x29163a), _0x431afe = new Float32Array(this['_vertices2']['buffer'], 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * _0x29163a), _0xf489a7 = new Float64Array(this['_subDistan' + 'ce']['buffer'], 0x8 * this['_activeInd' + 'ex'], _0x29163a), _0x490e36 = new Float32Array(this['_subBirthT' + 'ime']['buffer'], 0x4 * this['_activeInd' + 'ex'], _0x29163a);
            _0x29163a === this['_segementC' + 'ount'] && (this['_vertexBuf' + 'fer1']['destroy'](), this['_vertexBuf' + 'fer2']['destroy'](), this['_segementC' + 'ount'] += this['_increaseS' + 'egementCou' + 'nt'], this['_resizeDat' + 'a'](this['_segementC' + 'ount'], this['_bufferSta' + 'te'])), this['_vertices1']['set'](_0x2313c7, 0x0), this['_vertices2']['set'](_0x431afe, 0x0), this['_subDistan' + 'ce']['set'](_0xf489a7, 0x0), this['_subBirthT' + 'ime']['set'](_0x490e36, 0x0), this['_endIndex'] = _0x29163a, this['_activeInd' + 'ex'] = 0x0, this['_vertexBuf' + 'fer1']['setData'](this['_vertices1']['buffer'], 0x0, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x29163a * 0x4), this['_vertexBuf' + 'fer2']['setData'](this['_vertices2']['buffer'], 0x0, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * this['_activeInd' + 'ex'] * 0x4, 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'] * _0x29163a * 0x4);
        }
        ['_updateTra' + 'il'](_0x478f45, _0x911f0e, _0x2342ba) {
            _0x4795b3['equals'](_0x911f0e, _0x2342ba) || (this['_endIndex'] - this['_activeInd' + 'ex'] == 0x0 ? this['_addTrailB' + 'yFirstPosi' + 'tion'](_0x478f45, _0x2342ba) : this['_addTrailB' + 'yNextPosit' + 'ion'](_0x478f45, _0x2342ba));
        }
        ['_addTrailB' + 'yFirstPosi' + 'tion'](_0x37c70d, _0x16260c) {
            this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_subDistan' + 'ce'][this['_endIndex']] = 0x0, this['_subBirthT' + 'ime'][this['_endIndex']] = this['_owner']['_curtime'], this['_endIndex']++, _0x16260c['cloneTo'](this['_lastFixed' + 'VertexPosi' + 'tion']), this['_needAddFi' + 'rstVertex'] = !0x0;
        }
        ['_addTrailB' + 'yNextPosit' + 'ion'](_0x142f38, _0x5ceee2) {
            var _0x360529 = _0x43bf3a['_tempVecto' + 'r30'], _0x3e7994 = _0x43bf3a['_tempVecto' + 'r31'];
            switch (this['_owner']['alignment']) {
            case _0x341b51['TrailAlign' + 'ment']['View']:
                var _0x5d2145 = _0x142f38['viewMatrix'];
                _0x4795b3['transformC' + 'oordinate'](_0x5ceee2, _0x5d2145, _0x43bf3a['_tempVecto' + 'r33']), _0x4795b3['transformC' + 'oordinate'](this['_lastFixed' + 'VertexPosi' + 'tion'], _0x5d2145, _0x43bf3a['_tempVecto' + 'r34']), _0x4795b3['subtract'](_0x43bf3a['_tempVecto' + 'r33'], _0x43bf3a['_tempVecto' + 'r34'], _0x360529), _0x4795b3['cross'](_0x43bf3a['_tempVecto' + 'r33'], _0x360529, _0x3e7994);
                break;
            case _0x341b51['TrailAlign' + 'ment']['TransformZ']:
                _0x4795b3['subtract'](_0x5ceee2, this['_lastFixed' + 'VertexPosi' + 'tion'], _0x360529);
                var _0x51ec64 = _0x43bf3a['_tempVecto' + 'r32'];
                this['_owner']['_owner']['transform']['localMatri' + 'x']['getForward'](_0x51ec64), _0x4795b3['cross'](_0x360529, _0x51ec64, _0x3e7994);
            }
            _0x4795b3['normalize'](_0x3e7994, _0x3e7994), _0x4795b3['scale'](_0x3e7994, this['_owner']['widthMulti' + 'plier'] / 0x2, _0x3e7994);
            var _0x2e673b, _0x489796, _0x28042c = _0x4795b3['scalarLeng' + 'th'](_0x360529);
            this['_needAddFi' + 'rstVertex'] && (this['_updateVer' + 'ticesByPos' + 'itionData'](_0x5ceee2, _0x3e7994, this['_endIndex'] - 0x1), this['_needAddFi' + 'rstVertex'] = !0x1), _0x28042c - this['_owner']['minVertexD' + 'istance'] >= _0x183ae5['zeroTolera' + 'nce'] ? (this['_isTempEnd' + 'Vertex'] ? (_0x2e673b = this['_endIndex'] - 0x1, _0x489796 = _0x28042c - this['_subDistan' + 'ce'][_0x2e673b], this['_updateVer' + 'ticesByPos' + 'ition'](_0x5ceee2, _0x3e7994, _0x28042c, _0x2e673b), this['_owner']['_totalLeng' + 'th'] += _0x489796) : (this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_updateVer' + 'ticesByPos' + 'ition'](_0x5ceee2, _0x3e7994, _0x28042c, this['_endIndex']), this['_owner']['_totalLeng' + 'th'] += _0x28042c, this['_endIndex']++), _0x5ceee2['cloneTo'](this['_lastFixed' + 'VertexPosi' + 'tion']), this['_isTempEnd' + 'Vertex'] = !0x1) : (this['_isTempEnd' + 'Vertex'] ? (_0x2e673b = this['_endIndex'] - 0x1, _0x489796 = _0x28042c - this['_subDistan' + 'ce'][_0x2e673b], this['_updateVer' + 'ticesByPos' + 'ition'](_0x5ceee2, _0x3e7994, _0x28042c, _0x2e673b), this['_owner']['_totalLeng' + 'th'] += _0x489796) : (this['_endIndex'] === this['_segementC' + 'ount'] && this['_resetData'](), this['_updateVer' + 'ticesByPos' + 'ition'](_0x5ceee2, _0x3e7994, _0x28042c, this['_endIndex']), this['_owner']['_totalLeng' + 'th'] += _0x28042c, this['_endIndex']++), this['_isTempEnd' + 'Vertex'] = !0x0);
        }
        ['_updateVer' + 'ticesByPos' + 'itionData'](_0x5e2881, _0x5dcc4e, _0x29025a) {
            var _0x25a30d = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x29025a, _0x37d262 = this['_owner']['_curtime'];
            this['_vertices1'][_0x25a30d] = _0x5e2881['x'], this['_vertices1'][_0x25a30d + 0x1] = _0x5e2881['y'], this['_vertices1'][_0x25a30d + 0x2] = _0x5e2881['z'], this['_vertices1'][_0x25a30d + 0x3] = -_0x5dcc4e['x'], this['_vertices1'][_0x25a30d + 0x4] = -_0x5dcc4e['y'], this['_vertices1'][_0x25a30d + 0x5] = -_0x5dcc4e['z'], this['_vertices1'][_0x25a30d + 0x6] = _0x37d262, this['_vertices1'][_0x25a30d + 0x7] = 0x1, this['_vertices1'][_0x25a30d + 0x8] = _0x5e2881['x'], this['_vertices1'][_0x25a30d + 0x9] = _0x5e2881['y'], this['_vertices1'][_0x25a30d + 0xa] = _0x5e2881['z'], this['_vertices1'][_0x25a30d + 0xb] = _0x5dcc4e['x'], this['_vertices1'][_0x25a30d + 0xc] = _0x5dcc4e['y'], this['_vertices1'][_0x25a30d + 0xd] = _0x5dcc4e['z'], this['_vertices1'][_0x25a30d + 0xe] = _0x37d262, this['_vertices1'][_0x25a30d + 0xf] = 0x0;
            var _0x2500d3 = this['_owner']['_owner']['trailRende' + 'rer']['bounds'], _0x933ba5 = _0x2500d3['getMin'](), _0x3d763e = _0x2500d3['getMax'](), _0xa87df2 = _0x43bf3a['_tempVecto' + 'r35'], _0x2d1d7f = _0x43bf3a['_tempVecto' + 'r36'], _0x2e9edd = _0x43bf3a['_tempVecto' + 'r32'];
            _0x4795b3['add'](_0x5e2881, _0x5dcc4e, _0xa87df2), _0x4795b3['subtract'](_0x5e2881, _0x5dcc4e, _0x2d1d7f), _0x4795b3['min'](_0x2d1d7f, _0xa87df2, _0x2e9edd), _0x4795b3['min'](_0x933ba5, _0x2e9edd, _0x933ba5), _0x2500d3['setMin'](_0x933ba5), _0x4795b3['max'](_0xa87df2, _0x2d1d7f, _0x2e9edd), _0x4795b3['max'](_0x3d763e, _0x2e9edd, _0x3d763e), _0x2500d3['setMax'](_0x3d763e), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']();
            var _0x5a3326 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'];
            this['_vertexBuf' + 'fer1']['setData'](this['_vertices1']['buffer'], 0x4 * _0x25a30d, 0x4 * _0x25a30d, 0x4 * _0x5a3326);
        }
        ['_updateVer' + 'ticesByPos' + 'ition'](_0x4f966a, _0x5de9e2, _0x5f550b, _0x472a7f) {
            this['_updateVer' + 'ticesByPos' + 'itionData'](_0x4f966a, _0x5de9e2, _0x472a7f), this['_subDistan' + 'ce'][_0x472a7f] = _0x5f550b, this['_subBirthT' + 'ime'][_0x472a7f] = this['_owner']['_curtime'];
        }
        ['_updateVer' + 'texBufferU' + 'V']() {
            var _0x5a2495, _0x5c07c1, _0x4738c5;
            this['_disappear' + 'BoundsMode'] && (_0x5c07c1 = (_0x5a2495 = this['_owner']['_owner']['trailRende' + 'rer']['bounds'])['getMin'](), _0x4738c5 = _0x5a2495['getMax'](), _0x5c07c1['setValue'](Number['MAX_VALUE'], Number['MAX_VALUE'], Number['MAX_VALUE']), _0x4738c5['setValue'](-Number['MAX_VALUE'], -Number['MAX_VALUE'], -Number['MAX_VALUE']), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']());
            for (var _0x635614 = this['_endIndex'], _0x409291 = 0x0, _0x4bb5a1 = this['_owner']['colorGradi' + 'ent'], _0x45905e = _0x4bb5a1['colorAlpha' + 'KeysCount'] - 0x1, _0x52ea20 = _0x4bb5a1['colorRGBKe' + 'ysCount'] - 0x1, _0x11c13a = this['_owner']['_totalLeng' + 'th'], _0x1027e2 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es2'], _0x47fcdb = this['_activeInd' + 'ex']; _0x47fcdb < _0x635614; _0x47fcdb++) {
                var _0xb08143, _0x20ffb1;
                _0x47fcdb !== this['_activeInd' + 'ex'] && (_0x409291 += this['_subDistan' + 'ce'][_0x47fcdb]), this['_owner']['textureMod' + 'e'] == _0x3e5472['Stretch'] ? _0x20ffb1 = _0xb08143 = 0x1 - _0x409291 / _0x11c13a : (_0x20ffb1 = 0x1 - _0x409291 / _0x11c13a, _0xb08143 = 0x1 - (_0x11c13a - _0x409291)), _0x52ea20 = _0x4bb5a1['evaluateCo' + 'lorRGB'](_0x20ffb1, this['tmpColor'], _0x52ea20, !0x0), _0x45905e = _0x4bb5a1['evaluateCo' + 'lorAlpha'](_0x20ffb1, this['tmpColor'], _0x45905e, !0x0);
                var _0x4756f0 = _0x47fcdb * _0x1027e2;
                if (this['_vertices2'][_0x4756f0 + 0x0] = _0xb08143, this['_vertices2'][_0x4756f0 + 0x1] = this['tmpColor']['r'], this['_vertices2'][_0x4756f0 + 0x2] = this['tmpColor']['g'], this['_vertices2'][_0x4756f0 + 0x3] = this['tmpColor']['b'], this['_vertices2'][_0x4756f0 + 0x4] = this['tmpColor']['a'], this['_vertices2'][_0x4756f0 + 0x5] = _0xb08143, this['_vertices2'][_0x4756f0 + 0x6] = this['tmpColor']['r'], this['_vertices2'][_0x4756f0 + 0x7] = this['tmpColor']['g'], this['_vertices2'][_0x4756f0 + 0x8] = this['tmpColor']['b'], this['_vertices2'][_0x4756f0 + 0x9] = this['tmpColor']['a'], this['_disappear' + 'BoundsMode']) {
                    var _0x8454c7 = 0x2 * this['_floatCoun' + 'tPerVertic' + 'es1'] * _0x47fcdb, _0x5564a5 = _0x43bf3a['_tempVecto' + 'r32'], _0x324ff2 = _0x43bf3a['_tempVecto' + 'r33'], _0x46e8e9 = _0x43bf3a['_tempVecto' + 'r34'];
                    _0x5564a5['setValue'](this['_vertices1'][_0x8454c7 + 0x0], this['_vertices1'][_0x8454c7 + 0x1], this['_vertices1'][_0x8454c7 + 0x2]), _0x324ff2['setValue'](this['_vertices1'][_0x8454c7 + 0x3], this['_vertices1'][_0x8454c7 + 0x4], this['_vertices1'][_0x8454c7 + 0x5]), _0x4795b3['add'](_0x5564a5, _0x324ff2, _0x46e8e9), _0x4795b3['min'](_0x46e8e9, _0x5c07c1, _0x5c07c1), _0x4795b3['max'](_0x46e8e9, _0x4738c5, _0x4738c5), _0x4795b3['subtract'](_0x5564a5, _0x324ff2, _0x46e8e9), _0x4795b3['min'](_0x46e8e9, _0x5c07c1, _0x5c07c1), _0x4795b3['max'](_0x46e8e9, _0x4738c5, _0x4738c5);
                }
            }
            this['_disappear' + 'BoundsMode'] && (_0x5a2495['setMin'](_0x5c07c1), _0x5a2495['setMax'](_0x4738c5), this['_disappear' + 'BoundsMode'] = !0x1, _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && this['_calculate' + 'BoundingBo' + 'xForNative']());
            var _0x1cd87b = this['_activeInd' + 'ex'] * _0x1027e2;
            this['_vertexBuf' + 'fer2']['setData'](this['_vertices2']['buffer'], 0x4 * _0x1cd87b, 0x4 * _0x1cd87b, 0x4 * (_0x635614 * _0x1027e2 - _0x1cd87b));
        }
        ['_updateDis' + 'appear']() {
            for (var _0x25e10f = this['_endIndex'], _0x5e8a1e = this['_activeInd' + 'ex']; _0x5e8a1e < _0x25e10f && this['_owner']['_curtime'] - this['_subBirthT' + 'ime'][_0x5e8a1e] >= this['_owner']['time'] + _0x183ae5['zeroTolera' + 'nce']; _0x5e8a1e++) {
                var _0x5ec04c = _0x5e8a1e + 0x1;
                if (_0x5ec04c !== _0x25e10f && (this['_owner']['_totalLeng' + 'th'] -= this['_subDistan' + 'ce'][_0x5ec04c]), this['_isTempEnd' + 'Vertex'] && _0x5ec04c === _0x25e10f - 0x1) {
                    this['_floatCoun' + 'tPerVertic' + 'es1'];
                    var _0x3e9f62 = this['_lastFixed' + 'VertexPosi' + 'tion'];
                    _0x3e9f62['x'] = this['_vertices1'][0x0], _0x3e9f62['y'] = this['_vertices1'][0x1], _0x3e9f62['z'] = this['_vertices1'][0x2], this['_isTempEnd' + 'Vertex'] = !0x1;
                }
                this['_activeInd' + 'ex']++, this['_disappear' + 'BoundsMode'] = !0x0;
            }
        }
        ['_getType']() {
            return _0x43bf3a['_type'];
        }
        ['_prepareRe' + 'nder'](_0x2e9bcd) {
            return this['_endIndex'] - this['_activeInd' + 'ex'] > 0x1;
        }
        ['_render'](_0xfeadba) {
            this['_bufferSta' + 'te']['bind']();
            var _0x3d3bda = _0x33d6e0['LayaGL']['instance'], _0x188e79 = 0x2 * this['_activeInd' + 'ex'], _0x136fac = 0x2 * this['_endIndex'] - _0x188e79;
            _0x3d3bda['drawArrays'](_0x3d3bda['TRIANGLE_S' + 'TRIP'], _0x188e79, _0x136fac), _0x33d6e0['Stat']['renderBatc' + 'hes']++, _0x33d6e0['Stat']['trianglesF' + 'aces'] += _0x136fac - 0x2;
        }
        ['destroy']() {
            super['destroy']();
            var _0x4ffe48 = this['_vertexBuf' + 'fer1']['_byteLengt' + 'h'] + this['_vertexBuf' + 'fer2']['_byteLengt' + 'h'];
            _0x33d6e0['Resource']['_addMemory'](-_0x4ffe48, -_0x4ffe48), this['_bufferSta' + 'te']['destroy'](), this['_vertexBuf' + 'fer1']['destroy'](), this['_vertexBuf' + 'fer2']['destroy'](), this['_bufferSta' + 'te'] = null, this['_vertices1'] = null, this['_vertexBuf' + 'fer1'] = null, this['_vertices2'] = null, this['_vertexBuf' + 'fer2'] = null, this['_subBirthT' + 'ime'] = null, this['_subDistan' + 'ce'] = null, this['_lastFixed' + 'VertexPosi' + 'tion'] = null, this['_disappear' + 'BoundsMode'] = !0x1;
        }
        ['_calculate' + 'BoundingBo' + 'xForNative']() {
            var _0x33dd3c = this['_owner']['_owner']['trailRende' + 'rer'], _0x1b2acd = _0x33dd3c['bounds'], _0x2a0c07 = _0x1b2acd['getMin'](), _0x4d4bfa = _0x1b2acd['getMax'](), _0x2ee52a = _0x2585ad['_cullingBu' + 'ffer'];
            _0x2ee52a[_0x33dd3c['_cullingBu' + 'fferIndex'] + 0x1] = _0x2a0c07['x'], _0x2ee52a[_0x33dd3c['_cullingBu' + 'fferIndex'] + 0x2] = _0x2a0c07['y'], _0x2ee52a[_0x33dd3c['_cullingBu' + 'fferIndex'] + 0x3] = _0x2a0c07['z'], _0x2ee52a[_0x33dd3c['_cullingBu' + 'fferIndex'] + 0x4] = _0x4d4bfa['x'], _0x2ee52a[_0x33dd3c['_cullingBu' + 'fferIndex'] + 0x5] = _0x4d4bfa['y'], _0x2ee52a[_0x33dd3c['_cullingBu' + 'fferIndex'] + 0x6] = _0x4d4bfa['z'];
        }
    }
    _0x43bf3a['ALIGNMENT_' + 'VIEW'] = 0x0, _0x43bf3a['ALIGNMENT_' + 'TRANSFORM_' + 'Z'] = 0x1, _0x43bf3a['_tempVecto' + 'r30'] = new _0x4795b3(), _0x43bf3a['_tempVecto' + 'r31'] = new _0x4795b3(), _0x43bf3a['_tempVecto' + 'r32'] = new _0x4795b3(), _0x43bf3a['_tempVecto' + 'r33'] = new _0x4795b3(), _0x43bf3a['_tempVecto' + 'r34'] = new _0x4795b3(), _0x43bf3a['_tempVecto' + 'r35'] = new _0x4795b3(), _0x43bf3a['_tempVecto' + 'r36'] = new _0x4795b3(), _0x43bf3a['_type'] = _0x42e697['_typeCount' + 'er']++;
    class _0x1f0248 {
        constructor(_0x208d49) {
            this['_totalLeng' + 'th'] = 0x0, this['_lastPosit' + 'ion'] = new _0x4795b3(), this['_curtime'] = 0x0, this['alignment'] = _0x1f0248['ALIGNMENT_' + 'VIEW'], this['_owner'] = _0x208d49, this['_initDefau' + 'ltData'](), this['addRenderE' + 'lement']();
        }
        get ['time']() {
            return this['_time'];
        }
        set ['time'](_0x5f2dbe) {
            this['_time'] = _0x5f2dbe, this['_owner']['_render']['_shaderVal' + 'ues']['setNumber'](_0x1f0248['LIFETIME'], _0x5f2dbe);
        }
        get ['minVertexD' + 'istance']() {
            return this['_minVertex' + 'Distance'];
        }
        set ['minVertexD' + 'istance'](_0x2eb814) {
            this['_minVertex' + 'Distance'] = _0x2eb814;
        }
        get ['widthMulti' + 'plier']() {
            return this['_widthMult' + 'iplier'];
        }
        set ['widthMulti' + 'plier'](_0x1c785e) {
            this['_widthMult' + 'iplier'] = _0x1c785e;
        }
        get ['widthCurve']() {
            return this['_widthCurv' + 'e'];
        }
        set ['widthCurve'](_0x735c01) {
            this['_widthCurv' + 'e'] = _0x735c01;
            var _0x3ca81c, _0x4f128e, _0x42eadd = new Float32Array(0x4 * _0x735c01['length']), _0x27469a = 0x0;
            for (_0x3ca81c = 0x0, _0x4f128e = _0x735c01['length']; _0x3ca81c < _0x4f128e; _0x3ca81c++)
                _0x42eadd[_0x27469a++] = _0x735c01[_0x3ca81c]['time'], _0x42eadd[_0x27469a++] = _0x735c01[_0x3ca81c]['inTangent'], _0x42eadd[_0x27469a++] = _0x735c01[_0x3ca81c]['outTangent'], _0x42eadd[_0x27469a++] = _0x735c01[_0x3ca81c]['value'];
            this['_owner']['_render']['_shaderVal' + 'ues']['setBuffer'](_0x1f0248['WIDTHCURVE'], _0x42eadd), this['_owner']['_render']['_shaderVal' + 'ues']['setInt'](_0x1f0248['WIDTHCURVE' + 'KEYLENGTH'], _0x735c01['length']);
        }
        get ['colorGradi' + 'ent']() {
            return this['_colorGrad' + 'ient'];
        }
        set ['colorGradi' + 'ent'](_0x376924) {
            this['_colorGrad' + 'ient'] = _0x376924;
        }
        get ['textureMod' + 'e']() {
            return this['_textureMo' + 'de'];
        }
        set ['textureMod' + 'e'](_0x5be492) {
            this['_textureMo' + 'de'] = _0x5be492;
        }
        ['addRenderE' + 'lement']() {
            var _0x454d1e = this['_owner']['_render'], _0x3eab89 = _0x454d1e['_renderEle' + 'ments'], _0x48d1e1 = _0x454d1e['sharedMate' + 'rials'][0x0];
            _0x48d1e1 || (_0x48d1e1 = _0x595179['defaultMat' + 'erial']);
            var _0x4bdd89 = new _0x14112a();
            _0x4bdd89['setTransfo' + 'rm'](this['_owner']['_transform']), _0x4bdd89['render'] = _0x454d1e, _0x4bdd89['material'] = _0x48d1e1, this['_trialGeom' + 'etry'] = new _0x43bf3a(this), _0x4bdd89['setGeometr' + 'y'](this['_trialGeom' + 'etry']), _0x3eab89['push'](_0x4bdd89);
        }
        ['_update'](_0x8795dd) {
            var _0x1bc7b7 = this['_owner']['_render'];
            this['_curtime'] += _0x8795dd['scene']['timer']['_delta'] / 0x3e8, _0x1bc7b7['_shaderVal' + 'ues']['setNumber'](_0x1f0248['CURTIME'], this['_curtime']);
            var _0x5da643 = this['_owner']['transform']['position'], _0x53ce46 = _0x1bc7b7['_renderEle' + 'ments'][0x0]['_geometry'];
            _0x53ce46['_updateDis' + 'appear'](), _0x53ce46['_updateTra' + 'il'](_0x8795dd['camera'], this['_lastPosit' + 'ion'], _0x5da643), _0x53ce46['_updateVer' + 'texBufferU' + 'V'](), _0x5da643['cloneTo'](this['_lastPosit' + 'ion']);
        }
        ['_initDefau' + 'ltData']() {
            this['time'] = 0x5, this['minVertexD' + 'istance'] = 0.1, this['widthMulti' + 'plier'] = 0x1, this['textureMod' + 'e'] = _0x3e5472['Stretch'];
            var _0xb39b1a = [], _0x40cffc = new _0x157523();
            _0x40cffc['time'] = 0x0, _0x40cffc['inTangent'] = 0x0, _0x40cffc['outTangent'] = 0x0, _0x40cffc['value'] = 0x1, _0xb39b1a['push'](_0x40cffc);
            var _0x2bb784 = new _0x157523();
            _0x2bb784['time'] = 0x1, _0x2bb784['inTangent'] = 0x0, _0x2bb784['outTangent'] = 0x0, _0x2bb784['value'] = 0x1, _0xb39b1a['push'](_0x2bb784), this['widthCurve'] = _0xb39b1a;
            var _0xf01673 = new _0x20a4d3(0x2, 0x2);
            _0xf01673['mode'] = _0x49bf14['Blend'], _0xf01673['addColorRG' + 'B'](0x0, _0x210bda['WHITE']), _0xf01673['addColorRG' + 'B'](0x1, _0x210bda['WHITE']), _0xf01673['addColorAl' + 'pha'](0x0, 0x1), _0xf01673['addColorAl' + 'pha'](0x1, 0x1), this['colorGradi' + 'ent'] = _0xf01673;
        }
        ['destroy']() {
            this['_trialGeom' + 'etry']['destroy'](), this['_trialGeom' + 'etry'] = null, this['_widthCurv' + 'e'] = null, this['_colorGrad' + 'ient'] = null;
        }
    }
    _0x1f0248['CURTIME'] = _0x1ede74['propertyNa' + 'meToID']('u_CurTime'), _0x1f0248['LIFETIME'] = _0x1ede74['propertyNa' + 'meToID']('u_LifeTime'), _0x1f0248['WIDTHCURVE'] = _0x1ede74['propertyNa' + 'meToID']('u_WidthCur' + 've'), _0x1f0248['WIDTHCURVE' + 'KEYLENGTH'] = _0x1ede74['propertyNa' + 'meToID']('u_WidthCur' + 'veKeyLengt' + 'h'), _0x1f0248['ALIGNMENT_' + 'VIEW'] = 0x0, _0x1f0248['ALIGNMENT_' + 'TRANSFORM_' + 'Z'] = 0x1;
    class _0x25b775 extends _0x26d0eb {
        constructor(_0x3fd381) {
            super(_0x3fd381), this['_projectio' + 'nViewWorld' + 'Matrix'] = new _0x16c2be();
        }
        ['_calculate' + 'BoundingBo' + 'x']() {
        }
        ['_needRende' + 'r'](_0x45e24f, _0x5ec615) {
            return this['_owner']['trailFilte' + 'r']['_update'](_0x5ec615), !_0x45e24f || _0x45e24f['intersects'](this['bounds']['_getBoundB' + 'ox']());
        }
        ['_updateFor' + 'Native'](_0x289021) {
            this['_owner']['trailFilte' + 'r']['_update'](_0x289021);
        }
        ['_renderUpd' + 'ate'](_0x3f97b9, _0xfb843b) {
            super['_renderUpd' + 'ate'](_0x3f97b9, _0xfb843b);
        }
        ['_renderUpd' + 'ateWithCam' + 'era'](_0x3d5c21, _0x4af07b) {
            var _0x269d06 = _0x3d5c21['projection' + 'ViewMatrix'];
            _0x4af07b ? (_0x16c2be['multiply'](_0x269d06, _0x4af07b['worldMatri' + 'x'], this['_projectio' + 'nViewWorld' + 'Matrix']), this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], this['_projectio' + 'nViewWorld' + 'Matrix'])) : this['_shaderVal' + 'ues']['setMatrix4' + 'x4'](_0x2fcf9a['MVPMATRIX'], _0x269d06);
        }
    }
    class _0xc92457 extends _0x33bc07 {
        static ['__init__']() {
        }
        get ['trailFilte' + 'r']() {
            return this['_geometryF' + 'ilter'];
        }
        get ['trailRende' + 'rer']() {
            return this['_render'];
        }
        constructor(_0x27872a = null) {
            super(_0x27872a), this['_render'] = new _0x25b775(this), this['_geometryF' + 'ilter'] = new _0x1f0248(this);
        }
        ['_parse'](_0x547dfb, _0x508fe4) {
            super['_parse'](_0x547dfb, _0x508fe4);
            var _0x34087f, _0xf8568c, _0x401c6e = this['_render'], _0x1463c9 = this['_geometryF' + 'ilter'], _0x345288 = _0x547dfb['materials'];
            if (_0x345288) {
                var _0x54ae64 = _0x401c6e['sharedMate' + 'rials'], _0x25ea0a = _0x345288['length'];
                for (_0x54ae64['length'] = _0x25ea0a, _0x34087f = 0x0; _0x34087f < _0x25ea0a; _0x34087f++)
                    _0x54ae64[_0x34087f] = _0x33d6e0['Loader']['getRes'](_0x345288[_0x34087f]['path']);
                _0x401c6e['sharedMate' + 'rials'] = _0x54ae64;
            }
            _0x1463c9['time'] = _0x547dfb['time'], _0x1463c9['minVertexD' + 'istance'] = _0x547dfb['minVertexD' + 'istance'], _0x1463c9['widthMulti' + 'plier'] = _0x547dfb['widthMulti' + 'plier'], _0x1463c9['textureMod' + 'e'] = _0x547dfb['textureMod' + 'e'], null != _0x547dfb['alignment'] && (_0x1463c9['alignment'] = _0x547dfb['alignment']);
            var _0x26d2cd = [], _0x534f13 = _0x547dfb['widthCurve'];
            for (_0x34087f = 0x0, _0xf8568c = _0x534f13['length']; _0x34087f < _0xf8568c; _0x34087f++) {
                var _0x50adce = new _0x157523();
                _0x50adce['time'] = _0x534f13[_0x34087f]['time'], _0x50adce['inTangent'] = _0x534f13[_0x34087f]['inTangent'], _0x50adce['outTangent'] = _0x534f13[_0x34087f]['outTangent'], _0x50adce['value'] = _0x534f13[_0x34087f]['value'], _0x26d2cd['push'](_0x50adce);
            }
            _0x1463c9['widthCurve'] = _0x26d2cd;
            var _0x31166a = _0x547dfb['colorGradi' + 'ent'], _0x2c8218 = _0x31166a['colorKeys'], _0x56d448 = _0x31166a['alphaKeys'], _0x3e3b39 = new _0x20a4d3(_0x2c8218['length'], _0x56d448['length']);
            for (_0x3e3b39['mode'] = _0x31166a['mode'], _0x34087f = 0x0, _0xf8568c = _0x2c8218['length']; _0x34087f < _0xf8568c; _0x34087f++) {
                var _0x5e0b17 = _0x2c8218[_0x34087f];
                _0x3e3b39['addColorRG' + 'B'](_0x5e0b17['time'], new _0x210bda(_0x5e0b17['value'][0x0], _0x5e0b17['value'][0x1], _0x5e0b17['value'][0x2], 0x1));
            }
            for (_0x34087f = 0x0, _0xf8568c = _0x56d448['length']; _0x34087f < _0xf8568c; _0x34087f++) {
                var _0x2096ba = _0x56d448[_0x34087f];
                _0x3e3b39['addColorAl' + 'pha'](_0x2096ba['time'], _0x2096ba['value']);
            }
            _0x1463c9['colorGradi' + 'ent'] = _0x3e3b39;
        }
        ['_onActive']() {
            super['_onActive'](), this['_transform']['position']['cloneTo'](this['_geometryF' + 'ilter']['_lastPosit' + 'ion']);
        }
        ['_cloneTo'](_0x2c6459, _0x5e05d1, _0x4f97e2) {
            var _0x1e3d6d, _0x13e151;
            super['_cloneTo'](_0x2c6459, _0x5e05d1, _0x4f97e2);
            var _0x4a597f = _0x2c6459, _0x16238c = _0x4a597f['trailFilte' + 'r'];
            _0x16238c['time'] = this['trailFilte' + 'r']['time'], _0x16238c['minVertexD' + 'istance'] = this['trailFilte' + 'r']['minVertexD' + 'istance'], _0x16238c['widthMulti' + 'plier'] = this['trailFilte' + 'r']['widthMulti' + 'plier'], _0x16238c['textureMod' + 'e'] = this['trailFilte' + 'r']['textureMod' + 'e'], _0x16238c['alignment'] = this['trailFilte' + 'r']['alignment'];
            var _0xd22265 = this['trailFilte' + 'r']['widthCurve'], _0x370dad = [];
            for (_0x1e3d6d = 0x0, _0x13e151 = _0xd22265['length']; _0x1e3d6d < _0x13e151; _0x1e3d6d++) {
                var _0x53fc21 = new _0x157523();
                _0xd22265[_0x1e3d6d]['cloneTo'](_0x53fc21), _0x370dad['push'](_0x53fc21);
            }
            _0x16238c['widthCurve'] = _0x370dad;
            var _0x5c970f = new _0x20a4d3(this['trailFilte' + 'r']['colorGradi' + 'ent']['maxColorRG' + 'BKeysCount'], this['trailFilte' + 'r']['colorGradi' + 'ent']['maxColorAl' + 'phaKeysCou' + 'nt']);
            this['trailFilte' + 'r']['colorGradi' + 'ent']['cloneTo'](_0x5c970f), _0x16238c['colorGradi' + 'ent'] = _0x5c970f, _0x4a597f['trailRende' + 'rer']['sharedMate' + 'rial'] = this['trailRende' + 'rer']['sharedMate' + 'rial'];
        }
        ['destroy'](_0x3c9620 = !0x0) {
            this['destroyed'] || (super['destroy'](_0x3c9620), this['_geometryF' + 'ilter']['destroy'](), this['_geometryF' + 'ilter'] = null);
        }
        ['_create']() {
            return new _0xc92457();
        }
    }
    class _0x487fd8 {
        constructor(_0x5489b2, _0x4a40b9, _0x473c4c, _0x3eba2a) {
            this['_position'] = _0x5489b2, this['_normal'] = _0x4a40b9, this['_textureCo' + 'ord0'] = _0x473c4c, this['_textureCo' + 'ord1'] = _0x3eba2a;
        }
        static ['__init__']() {
            _0x487fd8['_vertexDec' + 'laration'] = new _0x3c5011(0x28, [
                new _0x5c79c8(0x0, _0x43e6c5['Vector3'], _0x487fd8['TERRAIN_PO' + 'SITION0']),
                new _0x5c79c8(0xc, _0x43e6c5['Vector3'], _0x487fd8['TERRAIN_NO' + 'RMAL0']),
                new _0x5c79c8(0x18, _0x43e6c5['Vector2'], _0x487fd8['TERRAIN_TE' + 'XTURECOORD' + 'INATE0']),
                new _0x5c79c8(0x20, _0x43e6c5['Vector2'], _0x487fd8['TERRAIN_TE' + 'XTURECOORD' + 'INATE1'])
            ]);
        }
        static get ['vertexDecl' + 'aration']() {
            return _0x487fd8['_vertexDec' + 'laration'];
        }
        get ['position']() {
            return this['_position'];
        }
        get ['normal']() {
            return this['_normal'];
        }
        get ['textureCoo' + 'rd0']() {
            return this['_textureCo' + 'ord0'];
        }
        get ['textureCoo' + 'rd1']() {
            return this['_textureCo' + 'ord1'];
        }
        get ['vertexDecl' + 'aration']() {
            return _0x487fd8['_vertexDec' + 'laration'];
        }
    }
    _0x487fd8['TERRAIN_PO' + 'SITION0'] = 0x0, _0x487fd8['TERRAIN_NO' + 'RMAL0'] = 0x1, _0x487fd8['TERRAIN_TE' + 'XTURECOORD' + 'INATE0'] = 0x2, _0x487fd8['TERRAIN_TE' + 'XTURECOORD' + 'INATE1'] = 0x3;
    class _0x3d9c98 {
    }
    _0x3d9c98['_interacti' + 've'] = {
        'getWorldTransform': (_0x544906, _0x186809) => {
        },
        'setWorldTransform': (_0x42ec54, _0x2047e5) => {
            var _0x10b8a3 = _0x4aabff['_physicObj' + 'ectsMap'][_0x42ec54];
            _0x10b8a3['_simulatio' + 'n']['_updatedRi' + 'gidbodies']++, _0x10b8a3['_updateTra' + 'nsformComp' + 'onent'](_0x2047e5);
        }
    };
    class _0x4f04eb extends _0x4aabff {
        constructor(_0x4af4b4 = 0.1, _0xe34878 = null, _0x17438b = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x5a6f91 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x17438b, _0x5a6f91), this['_upAxis'] = new _0x4795b3(0x0, 0x1, 0x0), this['_maxSlope'] = 0x2d, this['_jumpSpeed'] = 0xa, this['_fallSpeed'] = 0x37, this['_gravity'] = new _0x4795b3(0x0, 0x3 * -9.8, 0x0), this['_btKinemat' + 'icCharacte' + 'r'] = null, this['_stepHeigh' + 't'] = _0x4af4b4, _0xe34878 && (this['_upAxis'] = _0xe34878);
        }
        static ['__init__']() {
            _0x4f04eb['_btTempVec' + 'tor30'] = _0x10fe89['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['fallSpeed']() {
            return this['_fallSpeed'];
        }
        set ['fallSpeed'](_0x20bbdb) {
            this['_fallSpeed'] = _0x20bbdb, _0x10fe89['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setFallSp' + 'eed'](this['_btKinemat' + 'icCharacte' + 'r'], _0x20bbdb);
        }
        get ['jumpSpeed']() {
            return this['_jumpSpeed'];
        }
        set ['jumpSpeed'](_0x1dd25d) {
            this['_jumpSpeed'] = _0x1dd25d, _0x10fe89['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setJumpSp' + 'eed'](this['_btKinemat' + 'icCharacte' + 'r'], _0x1dd25d);
        }
        get ['gravity']() {
            return this['_gravity'];
        }
        set ['gravity'](_0x3f5b67) {
            this['_gravity'] = _0x3f5b67;
            var _0x2c786f = _0x10fe89['_bullet'], _0x6209da = _0x4f04eb['_btTempVec' + 'tor30'];
            _0x2c786f['btVector3_' + 'setValue'](_0x6209da, -_0x3f5b67['x'], _0x3f5b67['y'], _0x3f5b67['z']), _0x2c786f['btKinemati' + 'cCharacter' + 'Controller' + '_setGravit' + 'y'](this['_btKinemat' + 'icCharacte' + 'r'], _0x6209da);
        }
        get ['maxSlope']() {
            return this['_maxSlope'];
        }
        set ['maxSlope'](_0x38aabf) {
            this['_maxSlope'] = _0x38aabf, _0x10fe89['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_setMaxSlo' + 'pe'](this['_btKinemat' + 'icCharacte' + 'r'], _0x38aabf / 0xb4 * Math['PI']);
        }
        get ['isGrounded']() {
            return _0x10fe89['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_onGround'](this['_btKinemat' + 'icCharacte' + 'r']);
        }
        get ['stepHeight']() {
            return this['_stepHeigh' + 't'];
        }
        set ['stepHeight'](_0x25df4d) {
            this['_stepHeigh' + 't'] = _0x25df4d, this['_construct' + 'Character']();
        }
        get ['upAxis']() {
            return this['_upAxis'];
        }
        set ['upAxis'](_0x2ea1b3) {
            this['_upAxis'] = _0x2ea1b3, this['_construct' + 'Character']();
        }
        ['_construct' + 'Character']() {
            var _0x7ec2cd = _0x10fe89['_bullet'];
            this['_btKinemat' + 'icCharacte' + 'r'] && _0x7ec2cd['btKinemati' + 'cCharacter' + 'Controller' + '_destroy'](this['_btKinemat' + 'icCharacte' + 'r']);
            var _0x322cac = _0x4f04eb['_btTempVec' + 'tor30'];
            _0x7ec2cd['btVector3_' + 'setValue'](_0x322cac, this['_upAxis']['x'], this['_upAxis']['y'], this['_upAxis']['z']), this['_btKinemat' + 'icCharacte' + 'r'] = _0x7ec2cd['btKinemati' + 'cCharacter' + 'Controller' + '_create'](this['_btCollide' + 'rObject'], this['_colliderS' + 'hape']['_btShape'], this['_stepHeigh' + 't'], _0x322cac), this['fallSpeed'] = this['_fallSpeed'], this['maxSlope'] = this['_maxSlope'], this['jumpSpeed'] = this['_jumpSpeed'], this['gravity'] = this['_gravity'];
        }
        ['_onShapeCh' + 'ange'](_0x4fc8c4) {
            super['_onShapeCh' + 'ange'](_0x4fc8c4), this['_construct' + 'Character']();
        }
        ['_onAdded']() {
            var _0x493737 = _0x10fe89['_bullet'], _0x376b3d = _0x493737['btPairCach' + 'ingGhostOb' + 'ject_creat' + 'e']();
            _0x493737['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x376b3d, this['id']), _0x493737['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x376b3d, _0x4aabff['COLLISIONF' + 'LAGS_CHARA' + 'CTER_OBJEC' + 'T']), this['_btCollide' + 'rObject'] = _0x376b3d, this['_colliderS' + 'hape'] && this['_construct' + 'Character'](), super['_onAdded']();
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_character' + 's']['push'](this), this['_simulatio' + 'n']['_addCharac' + 'ter'](this, this['_collision' + 'Group'], this['_canCollid' + 'eWith']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removeCha' + 'racter'](this);
            var _0xdfcb65 = this['_simulatio' + 'n']['_character' + 's'];
            _0xdfcb65['splice'](_0xdfcb65['indexOf'](this), 0x1);
        }
        ['_cloneTo'](_0x1ca211) {
            super['_cloneTo'](_0x1ca211);
            var _0x54250f = _0x1ca211;
            _0x54250f['stepHeight'] = this['_stepHeigh' + 't'], _0x54250f['upAxis'] = this['_upAxis'], _0x54250f['maxSlope'] = this['_maxSlope'], _0x54250f['jumpSpeed'] = this['_jumpSpeed'], _0x54250f['fallSpeed'] = this['_fallSpeed'], _0x54250f['gravity'] = this['_gravity'];
        }
        ['_onDestroy']() {
            _0x10fe89['_bullet']['btKinemati' + 'cCharacter' + 'Controller' + '_destroy'](this['_btKinemat' + 'icCharacte' + 'r']), super['_onDestroy'](), this['_btKinemat' + 'icCharacte' + 'r'] = null;
        }
        ['move'](_0x869d44) {
            var _0x32a478 = _0x4f04eb['_btVector3' + '0'], _0x2cc3d8 = _0x10fe89['_bullet'];
            _0x2cc3d8['btVector3_' + 'setValue'](_0x32a478, -_0x869d44['x'], _0x869d44['y'], _0x869d44['z']), _0x2cc3d8['btKinemati' + 'cCharacter' + 'Controller' + '_setWalkDi' + 'rection'](this['_btKinemat' + 'icCharacte' + 'r'], _0x32a478);
        }
        ['jump'](_0x362849 = null) {
            var _0xb56846 = _0x10fe89['_bullet'], _0x353d39 = _0x4f04eb['_btVector3' + '0'];
            _0x362849 ? (_0x89f66e['_convertTo' + 'BulletVec3'](_0x362849, _0x353d39, !0x0), _0xb56846['btKinemati' + 'cCharacter' + 'Controller' + '_jump'](this['_btKinemat' + 'icCharacte' + 'r'], _0x353d39)) : (_0xb56846['btVector3_' + 'setValue'](_0x353d39, 0x0, 0x0, 0x0), _0xb56846['btKinemati' + 'cCharacter' + 'Controller' + '_jump'](this['_btKinemat' + 'icCharacte' + 'r'], _0x353d39));
        }
    }
    _0x4f04eb['UPAXIS_X'] = 0x0, _0x4f04eb['UPAXIS_Y'] = 0x1, _0x4f04eb['UPAXIS_Z'] = 0x2;
    class _0x21712f extends _0x4aabff {
        constructor(_0x482797, _0x441c56) {
            super(_0x482797, _0x441c56), this['_isTrigger'] = !0x1;
        }
        get ['isTrigger']() {
            return this['_isTrigger'];
        }
        set ['isTrigger'](_0x3eed42) {
            this['_isTrigger'] = _0x3eed42;
            var _0x2656b0 = _0x10fe89['_bullet'];
            if (this['_btCollide' + 'rObject']) {
                var _0x47d71b = _0x2656b0['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject']);
                _0x3eed42 ? 0x0 == (_0x47d71b & _0x4aabff['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) && _0x2656b0['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject'], _0x47d71b | _0x4aabff['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) : 0x0 != (_0x47d71b & _0x4aabff['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']) && _0x2656b0['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](this['_btCollide' + 'rObject'], _0x47d71b ^ _0x4aabff['COLLISIONF' + 'LAGS_NO_CO' + 'NTACT_RESP' + 'ONSE']);
            }
        }
        ['_onAdded']() {
            super['_onAdded'](), this['isTrigger'] = this['_isTrigger'];
        }
        ['_cloneTo'](_0x1804dd) {
            super['_cloneTo'](_0x1804dd), _0x1804dd['isTrigger'] = this['_isTrigger'];
        }
    }
    class _0x46d3a6 extends _0x21712f {
        constructor(_0x11255c = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x11c44b = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x11255c, _0x11c44b), this['_enablePro' + 'cessCollis' + 'ions'] = !0x1;
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_addPhysic' + 'sCollider'](this, this['_collision' + 'Group'], this['_canCollid' + 'eWith']);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removePhy' + 'sicsCollid' + 'er'](this);
        }
        ['_onTransfo' + 'rmChanged'](_0x414e62) {
            (_0x414e62 &= _0x8f4324['TRANSFORM_' + 'WORLDPOSIT' + 'ION'] | _0x8f4324['TRANSFORM_' + 'WORLDQUATE' + 'RNION'] | _0x8f4324['TRANSFORM_' + 'WORLDSCALE']) && (this['_transform' + 'Flag'] |= _0x414e62, this['_isValid']() && -0x1 === this['_inPhysicU' + 'pdateListI' + 'ndex'] && this['_simulatio' + 'n']['_physicsUp' + 'dateList']['add'](this));
        }
        ['_parse'](_0x25ca46) {
            null != _0x25ca46['friction'] && (this['friction'] = _0x25ca46['friction']), null != _0x25ca46['rollingFri' + 'ction'] && (this['rollingFri' + 'ction'] = _0x25ca46['rollingFri' + 'ction']), null != _0x25ca46['restitutio' + 'n'] && (this['restitutio' + 'n'] = _0x25ca46['restitutio' + 'n']), null != _0x25ca46['isTrigger'] && (this['isTrigger'] = _0x25ca46['isTrigger']), super['_parse'](_0x25ca46), this['_parseShap' + 'e'](_0x25ca46['shapes']);
        }
        ['_onAdded']() {
            var _0x5bae3c = _0x10fe89['_bullet'], _0xc3a091 = _0x5bae3c['btCollisio' + 'nObject_cr' + 'eate']();
            _0x5bae3c['btCollisio' + 'nObject_se' + 'tUserIndex'](_0xc3a091, this['id']), _0x5bae3c['btCollisio' + 'nObject_fo' + 'rceActivat' + 'ionState'](_0xc3a091, _0x4aabff['ACTIVATION' + 'STATE_DISA' + 'BLE_SIMULA' + 'TION']);
            var _0x193d49 = _0x5bae3c['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0xc3a091);
            this['owner']['isStatic'] ? ((_0x193d49 & _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']) > 0x0 && (_0x193d49 ^= _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']), _0x193d49 |= _0x4aabff['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']) : ((_0x193d49 & _0x4aabff['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']) > 0x0 && (_0x193d49 ^= _0x4aabff['COLLISIONF' + 'LAGS_STATI' + 'C_OBJECT']), _0x193d49 |= _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']), _0x5bae3c['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0xc3a091, _0x193d49), this['_btCollide' + 'rObject'] = _0xc3a091, super['_onAdded']();
        }
    }
    class _0x551d49 extends _0x21712f {
        constructor(_0x71bd15 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_DEFAULTFI' + 'LTER'], _0x491091 = _0x17f555['COLLISIONF' + 'ILTERGROUP' + '_ALLFILTER']) {
            super(_0x71bd15, _0x491091), this['_isKinemat' + 'ic'] = !0x1, this['_mass'] = 0x1, this['_gravity'] = new _0x4795b3(0x0, -0xa, 0x0), this['_angularDa' + 'mping'] = 0x0, this['_linearDam' + 'ping'] = 0x0, this['_overrideG' + 'ravity'] = !0x1, this['_totalTorq' + 'ue'] = new _0x4795b3(0x0, 0x0, 0x0), this['_totalForc' + 'e'] = new _0x4795b3(0x0, 0x0, 0x0), this['_linearVel' + 'ocity'] = new _0x4795b3(), this['_angularVe' + 'locity'] = new _0x4795b3(), this['_linearFac' + 'tor'] = new _0x4795b3(0x1, 0x1, 0x1), this['_angularFa' + 'ctor'] = new _0x4795b3(0x1, 0x1, 0x1), this['_detectCol' + 'lisions'] = !0x0;
        }
        static ['__init__']() {
            var _0x3e8580 = _0x10fe89['_bullet'];
            _0x551d49['_btTempVec' + 'tor30'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x551d49['_btTempVec' + 'tor31'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x551d49['_btVector3' + 'Zero'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x551d49['_btInertia'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x551d49['_btImpulse'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x551d49['_btImpulse' + 'Offset'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x551d49['_btGravity'] = _0x3e8580['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        get ['mass']() {
            return this['_mass'];
        }
        set ['mass'](_0x41e6fe) {
            _0x41e6fe = Math['max'](_0x41e6fe, 1e-7), this['_mass'] = _0x41e6fe, this['_isKinemat' + 'ic'] || this['_updateMas' + 's'](_0x41e6fe);
        }
        get ['isKinemati' + 'c']() {
            return this['_isKinemat' + 'ic'];
        }
        set ['isKinemati' + 'c'](_0x8c03a5) {
            this['_isKinemat' + 'ic'] = _0x8c03a5;
            var _0x82e471 = _0x10fe89['_bullet'], _0x3f5160 = !!(this['_simulatio' + 'n'] && this['_enabled'] && this['_colliderS' + 'hape']);
            _0x3f5160 && this['_removeFro' + 'mSimulatio' + 'n']();
            var _0x4269d4 = this['_btCollide' + 'rObject'], _0x116b11 = _0x82e471['btCollisio' + 'nObject_ge' + 'tCollision' + 'Flags'](_0x4269d4);
            _0x8c03a5 ? (_0x116b11 |= _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T'], _0x82e471['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x4269d4, _0x116b11), _0x82e471['btCollisio' + 'nObject_fo' + 'rceActivat' + 'ionState'](this['_btCollide' + 'rObject'], _0x4aabff['ACTIVATION' + 'STATE_DISA' + 'BLE_DEACTI' + 'VATION']), this['_enablePro' + 'cessCollis' + 'ions'] = !0x1, this['_updateMas' + 's'](0x0)) : ((_0x116b11 & _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']) > 0x0 && (_0x116b11 ^= _0x4aabff['COLLISIONF' + 'LAGS_KINEM' + 'ATIC_OBJEC' + 'T']), _0x82e471['btCollisio' + 'nObject_se' + 'tCollision' + 'Flags'](_0x4269d4, _0x116b11), _0x82e471['btCollisio' + 'nObject_se' + 'tActivatio' + 'nState'](this['_btCollide' + 'rObject'], _0x4aabff['ACTIVATION' + 'STATE_ACTI' + 'VE_TAG']), this['_enablePro' + 'cessCollis' + 'ions'] = !0x0, this['_updateMas' + 's'](this['_mass']));
            var _0x3cdd4a = _0x551d49['_btVector3' + 'Zero'];
            _0x82e471['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionLinear' + 'Velocity'](_0x4269d4, _0x3cdd4a), _0x82e471['btRigidBod' + 'y_setLinea' + 'rVelocity'](_0x4269d4, _0x3cdd4a), _0x82e471['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionAngula' + 'rVelocity'](_0x4269d4, _0x3cdd4a), _0x82e471['btRigidBod' + 'y_setAngul' + 'arVelocity'](_0x4269d4, _0x3cdd4a), _0x3f5160 && this['_addToSimu' + 'lation']();
        }
        get ['linearDamp' + 'ing']() {
            return this['_linearDam' + 'ping'];
        }
        set ['linearDamp' + 'ing'](_0x13c9aa) {
            this['_linearDam' + 'ping'] = _0x13c9aa, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btRigidBod' + 'y_setDampi' + 'ng'](this['_btCollide' + 'rObject'], _0x13c9aa, this['_angularDa' + 'mping']);
        }
        get ['angularDam' + 'ping']() {
            return this['_angularDa' + 'mping'];
        }
        set ['angularDam' + 'ping'](_0x3fdb78) {
            this['_angularDa' + 'mping'] = _0x3fdb78, this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btRigidBod' + 'y_setDampi' + 'ng'](this['_btCollide' + 'rObject'], this['_linearDam' + 'ping'], _0x3fdb78);
        }
        get ['overrideGr' + 'avity']() {
            return this['_overrideG' + 'ravity'];
        }
        set ['overrideGr' + 'avity'](_0x3674e3) {
            this['_overrideG' + 'ravity'] = _0x3674e3;
            var _0x27f8ab = _0x10fe89['_bullet'];
            if (this['_btCollide' + 'rObject']) {
                var _0x2adc9c = _0x27f8ab['btRigidBod' + 'y_getFlags'](this['_btCollide' + 'rObject']);
                _0x3674e3 ? 0x0 == (_0x2adc9c & _0x551d49['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) && _0x27f8ab['btRigidBod' + 'y_setFlags'](this['_btCollide' + 'rObject'], _0x2adc9c | _0x551d49['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) : (_0x2adc9c & _0x551d49['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']) > 0x0 && _0x27f8ab['btRigidBod' + 'y_setFlags'](this['_btCollide' + 'rObject'], _0x2adc9c ^ _0x551d49['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY']);
            }
        }
        get ['gravity']() {
            return this['_gravity'];
        }
        set ['gravity'](_0x22f7eb) {
            this['_gravity'] = _0x22f7eb;
            var _0x10564d = _0x10fe89['_bullet'];
            _0x10564d['btVector3_' + 'setValue'](_0x551d49['_btGravity'], -_0x22f7eb['x'], _0x22f7eb['y'], _0x22f7eb['z']), _0x10564d['btRigidBod' + 'y_setGravi' + 'ty'](this['_btCollide' + 'rObject'], _0x551d49['_btGravity']);
        }
        get ['totalForce']() {
            if (this['_btCollide' + 'rObject']) {
                var _0x290e73 = _0x10fe89['_bullet']['btRigidBod' + 'y_getTotal' + 'Force'](this['_btCollide' + 'rObject']);
                return _0x89f66e['_convertTo' + 'LayaVec3'](_0x290e73, this['_totalForc' + 'e'], !0x0), this['_totalForc' + 'e'];
            }
            return null;
        }
        get ['linearFact' + 'or']() {
            return this['_btCollide' + 'rObject'] ? this['_linearFac' + 'tor'] : null;
        }
        set ['linearFact' + 'or'](_0x22d421) {
            if (this['_linearFac' + 'tor'] = _0x22d421, this['_btCollide' + 'rObject']) {
                var _0x430486 = _0x551d49['_btTempVec' + 'tor30'];
                _0x89f66e['_convertTo' + 'BulletVec3'](_0x22d421, _0x430486, !0x1), _0x10fe89['_bullet']['btRigidBod' + 'y_setLinea' + 'rFactor'](this['_btCollide' + 'rObject'], _0x430486);
            }
        }
        get ['linearVelo' + 'city']() {
            return this['_btCollide' + 'rObject'] && _0x89f66e['_convertTo' + 'LayaVec3'](_0x10fe89['_bullet']['btRigidBod' + 'y_getLinea' + 'rVelocity'](this['_btCollide' + 'rObject']), this['_linearVel' + 'ocity'], !0x0), this['_linearVel' + 'ocity'];
        }
        set ['linearVelo' + 'city'](_0xbdc1e8) {
            if (this['_linearVel' + 'ocity'] = _0xbdc1e8, this['_btCollide' + 'rObject']) {
                var _0x177975 = _0x551d49['_btTempVec' + 'tor30'];
                _0x89f66e['_convertTo' + 'BulletVec3'](_0xbdc1e8, _0x177975, !0x0), this['isSleeping'] && this['wakeUp'](), _0x10fe89['_bullet']['btRigidBod' + 'y_setLinea' + 'rVelocity'](this['_btCollide' + 'rObject'], _0x177975);
            }
        }
        get ['angularFac' + 'tor']() {
            return this['_btCollide' + 'rObject'] ? this['_angularFa' + 'ctor'] : null;
        }
        set ['angularFac' + 'tor'](_0x184aa1) {
            if (this['_angularFa' + 'ctor'] = _0x184aa1, this['_btCollide' + 'rObject']) {
                var _0x30b1b0 = _0x551d49['_btTempVec' + 'tor30'];
                _0x89f66e['_convertTo' + 'BulletVec3'](_0x184aa1, _0x30b1b0, !0x1), _0x10fe89['_bullet']['btRigidBod' + 'y_setAngul' + 'arFactor'](this['_btCollide' + 'rObject'], _0x30b1b0);
            }
        }
        get ['angularVel' + 'ocity']() {
            return this['_btCollide' + 'rObject'] && _0x89f66e['_convertTo' + 'LayaVec3'](_0x10fe89['_bullet']['btRigidBod' + 'y_getAngul' + 'arVelocity'](this['_btCollide' + 'rObject']), this['_angularVe' + 'locity'], !0x0), this['_angularVe' + 'locity'];
        }
        set ['angularVel' + 'ocity'](_0x12409b) {
            if (this['_angularVe' + 'locity'] = _0x12409b, this['_btCollide' + 'rObject']) {
                var _0x5ca340 = _0x551d49['_btTempVec' + 'tor30'];
                _0x89f66e['_convertTo' + 'BulletVec3'](_0x12409b, _0x5ca340, !0x0), this['isSleeping'] && this['wakeUp'](), _0x10fe89['_bullet']['btRigidBod' + 'y_setAngul' + 'arVelocity'](this['_btCollide' + 'rObject'], _0x5ca340);
            }
        }
        get ['totalTorqu' + 'e']() {
            if (this['_btCollide' + 'rObject']) {
                var _0x6d20d2 = _0x10fe89['_bullet']['btRigidBod' + 'y_getTotal' + 'Torque'](this['_btCollide' + 'rObject']);
                return _0x89f66e['_convertTo' + 'LayaVec3'](_0x6d20d2, this['_totalTorq' + 'ue'], !0x0), this['_totalTorq' + 'ue'];
            }
            return null;
        }
        get ['detectColl' + 'isions']() {
            return this['_detectCol' + 'lisions'];
        }
        set ['detectColl' + 'isions'](_0x207079) {
            this['_detectCol' + 'lisions'] !== _0x207079 && (this['_detectCol' + 'lisions'] = _0x207079, this['_colliderS' + 'hape'] && this['_enabled'] && this['_simulatio' + 'n'] && (this['_simulatio' + 'n']['_removeRig' + 'idBody'](this), this['_simulatio' + 'n']['_addRigidB' + 'ody'](this, this['_collision' + 'Group'], _0x207079 ? this['_canCollid' + 'eWith'] : 0x0)));
        }
        get ['isSleeping']() {
            return !!this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_ge' + 'tActivatio' + 'nState'](this['_btCollide' + 'rObject']) === _0x4aabff['ACTIVATION' + 'STATE_ISLA' + 'ND_SLEEPIN' + 'G'];
        }
        get ['sleepLinea' + 'rVelocity']() {
            return _0x10fe89['_bullet']['btRigidBod' + 'y_getLinea' + 'rSleepingT' + 'hreshold'](this['_btCollide' + 'rObject']);
        }
        set ['sleepLinea' + 'rVelocity'](_0x367377) {
            var _0x22cb40 = _0x10fe89['_bullet'];
            _0x22cb40['btRigidBod' + 'y_setSleep' + 'ingThresho' + 'lds'](this['_btCollide' + 'rObject'], _0x367377, _0x22cb40['btRigidBod' + 'y_getAngul' + 'arSleeping' + 'Threshold'](this['_btCollide' + 'rObject']));
        }
        get ['sleepAngul' + 'arVelocity']() {
            return _0x10fe89['_bullet']['btRigidBod' + 'y_getAngul' + 'arSleeping' + 'Threshold'](this['_btCollide' + 'rObject']);
        }
        set ['sleepAngul' + 'arVelocity'](_0x47e3d7) {
            var _0x45dca7 = _0x10fe89['_bullet'];
            _0x45dca7['btRigidBod' + 'y_setSleep' + 'ingThresho' + 'lds'](this['_btCollide' + 'rObject'], _0x45dca7['btRigidBod' + 'y_getLinea' + 'rSleepingT' + 'hreshold'](this['_btCollide' + 'rObject']), _0x47e3d7);
        }
        ['_updateMas' + 's'](_0x4a74c2) {
            if (this['_btCollide' + 'rObject'] && this['_colliderS' + 'hape']) {
                var _0x4941a4 = _0x10fe89['_bullet'];
                _0x4941a4['btCollisio' + 'nShape_cal' + 'culateLoca' + 'lInertia'](this['_colliderS' + 'hape']['_btShape'], _0x4a74c2, _0x551d49['_btInertia']), _0x4941a4['btRigidBod' + 'y_setMassP' + 'rops'](this['_btCollide' + 'rObject'], _0x4a74c2, _0x551d49['_btInertia']), _0x4941a4['btRigidBod' + 'y_updateIn' + 'ertiaTenso' + 'r'](this['_btCollide' + 'rObject']);
            }
        }
        ['_onScaleCh' + 'ange'](_0x3ff341) {
            super['_onScaleCh' + 'ange'](_0x3ff341), this['_updateMas' + 's'](this['_isKinemat' + 'ic'] ? 0x0 : this['_mass']);
        }
        ['_onAdded']() {
            var _0x305a87 = _0x10fe89['_bullet'], _0x1e5d6b = _0x305a87['layaMotion' + 'State_crea' + 'te']();
            _0x305a87['layaMotion' + 'State_set_' + 'rigidBodyI' + 'D'](_0x1e5d6b, this['_id']), this['_btLayaMot' + 'ionState'] = _0x1e5d6b;
            var _0x5bafd2 = _0x305a87['btRigidBod' + 'yConstruct' + 'ionInfo_cr' + 'eate'](0x0, _0x1e5d6b, null, _0x551d49['_btVector3' + 'Zero']), _0x4a3acf = _0x305a87['btRigidBod' + 'y_create'](_0x5bafd2);
            _0x305a87['btCollisio' + 'nObject_se' + 'tUserIndex'](_0x4a3acf, this['id']), this['_btCollide' + 'rObject'] = _0x4a3acf, super['_onAdded'](), this['mass'] = this['_mass'], this['linearFact' + 'or'] = this['_linearFac' + 'tor'], this['angularFac' + 'tor'] = this['_angularFa' + 'ctor'], this['linearDamp' + 'ing'] = this['_linearDam' + 'ping'], this['angularDam' + 'ping'] = this['_angularDa' + 'mping'], this['overrideGr' + 'avity'] = this['_overrideG' + 'ravity'], this['gravity'] = this['_gravity'], this['isKinemati' + 'c'] = this['_isKinemat' + 'ic'], _0x305a87['btRigidBod' + 'yConstruct' + 'ionInfo_de' + 'stroy'](_0x5bafd2);
        }
        ['_onShapeCh' + 'ange'](_0x984e97) {
            if (super['_onShapeCh' + 'ange'](_0x984e97), this['_isKinemat' + 'ic'])
                this['_updateMas' + 's'](0x0);
            else {
                var _0x321b1e = _0x10fe89['_bullet'];
                _0x321b1e['btRigidBod' + 'y_setCente' + 'rOfMassTra' + 'nsform'](this['_btCollide' + 'rObject'], _0x321b1e['btCollisio' + 'nObject_ge' + 'tWorldTran' + 'sform'](this['_btCollide' + 'rObject'])), this['_updateMas' + 's'](this['_mass']);
            }
        }
        ['_parse'](_0x5270f0) {
            null != _0x5270f0['friction'] && (this['friction'] = _0x5270f0['friction']), null != _0x5270f0['rollingFri' + 'ction'] && (this['rollingFri' + 'ction'] = _0x5270f0['rollingFri' + 'ction']), null != _0x5270f0['restitutio' + 'n'] && (this['restitutio' + 'n'] = _0x5270f0['restitutio' + 'n']), null != _0x5270f0['isTrigger'] && (this['isTrigger'] = _0x5270f0['isTrigger']), null != _0x5270f0['mass'] && (this['mass'] = _0x5270f0['mass']), null != _0x5270f0['isKinemati' + 'c'] && (this['isKinemati' + 'c'] = _0x5270f0['isKinemati' + 'c']), null != _0x5270f0['linearDamp' + 'ing'] && (this['linearDamp' + 'ing'] = _0x5270f0['linearDamp' + 'ing']), null != _0x5270f0['angularDam' + 'ping'] && (this['angularDam' + 'ping'] = _0x5270f0['angularDam' + 'ping']), null != _0x5270f0['overrideGr' + 'avity'] && (this['overrideGr' + 'avity'] = _0x5270f0['overrideGr' + 'avity']), _0x5270f0['gravity'] && (this['gravity']['fromArray'](_0x5270f0['gravity']), this['gravity'] = this['gravity']), super['_parse'](_0x5270f0), this['_parseShap' + 'e'](_0x5270f0['shapes']);
        }
        ['_onDestroy']() {
            _0x10fe89['_bullet']['btMotionSt' + 'ate_destro' + 'y'](this['_btLayaMot' + 'ionState']), super['_onDestroy'](), this['_btLayaMot' + 'ionState'] = null, this['_gravity'] = null, this['_totalTorq' + 'ue'] = null, this['_linearVel' + 'ocity'] = null, this['_angularVe' + 'locity'] = null, this['_linearFac' + 'tor'] = null, this['_angularFa' + 'ctor'] = null;
        }
        ['_addToSimu' + 'lation']() {
            this['_simulatio' + 'n']['_addRigidB' + 'ody'](this, this['_collision' + 'Group'], this['_detectCol' + 'lisions'] ? this['_canCollid' + 'eWith'] : 0x0);
        }
        ['_removeFro' + 'mSimulatio' + 'n']() {
            this['_simulatio' + 'n']['_removeRig' + 'idBody'](this);
        }
        ['_cloneTo'](_0x456a17) {
            super['_cloneTo'](_0x456a17);
            var _0x207347 = _0x456a17;
            _0x207347['isKinemati' + 'c'] = this['_isKinemat' + 'ic'], _0x207347['mass'] = this['_mass'], _0x207347['gravity'] = this['_gravity'], _0x207347['angularDam' + 'ping'] = this['_angularDa' + 'mping'], _0x207347['linearDamp' + 'ing'] = this['_linearDam' + 'ping'], _0x207347['overrideGr' + 'avity'] = this['_overrideG' + 'ravity'], _0x207347['linearVelo' + 'city'] = this['_linearVel' + 'ocity'], _0x207347['angularVel' + 'ocity'] = this['_angularVe' + 'locity'], _0x207347['linearFact' + 'or'] = this['_linearFac' + 'tor'], _0x207347['angularFac' + 'tor'] = this['_angularFa' + 'ctor'], _0x207347['detectColl' + 'isions'] = this['_detectCol' + 'lisions'];
        }
        ['applyForce'](_0x3bc649, _0x31394f = null) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x280ce7 = _0x10fe89['_bullet'], _0x5a4d20 = _0x551d49['_btTempVec' + 'tor30'];
            if (_0x280ce7['btVector3_' + 'setValue'](_0x5a4d20, -_0x3bc649['x'], _0x3bc649['y'], _0x3bc649['z']), _0x31394f) {
                var _0x33df9d = _0x551d49['_btTempVec' + 'tor31'];
                _0x280ce7['btVector3_' + 'setValue'](_0x33df9d, -_0x31394f['x'], _0x31394f['y'], _0x31394f['z']), _0x280ce7['btRigidBod' + 'y_applyFor' + 'ce'](this['_btCollide' + 'rObject'], _0x5a4d20, _0x33df9d);
            } else
                _0x280ce7['btRigidBod' + 'y_applyCen' + 'tralForce'](this['_btCollide' + 'rObject'], _0x5a4d20);
        }
        ['applyTorqu' + 'e'](_0x16df90) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0xfc2f8f = _0x10fe89['_bullet'], _0x4a5ef8 = _0x551d49['_btTempVec' + 'tor30'];
            _0xfc2f8f['btVector3_' + 'setValue'](_0x4a5ef8, -_0x16df90['x'], _0x16df90['y'], _0x16df90['z']), _0xfc2f8f['btRigidBod' + 'y_applyTor' + 'que'](this['_btCollide' + 'rObject'], _0x4a5ef8);
        }
        ['applyImpul' + 'se'](_0x35e2b7, _0x3d9535 = null) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x2f12a1 = _0x10fe89['_bullet'];
            _0x2f12a1['btVector3_' + 'setValue'](_0x551d49['_btImpulse'], -_0x35e2b7['x'], _0x35e2b7['y'], _0x35e2b7['z']), _0x3d9535 ? (_0x2f12a1['btVector3_' + 'setValue'](_0x551d49['_btImpulse' + 'Offset'], -_0x3d9535['x'], _0x3d9535['y'], _0x3d9535['z']), _0x2f12a1['btRigidBod' + 'y_applyImp' + 'ulse'](this['_btCollide' + 'rObject'], _0x551d49['_btImpulse'], _0x551d49['_btImpulse' + 'Offset'])) : _0x2f12a1['btRigidBod' + 'y_applyCen' + 'tralImpuls' + 'e'](this['_btCollide' + 'rObject'], _0x551d49['_btImpulse']);
        }
        ['applyTorqu' + 'eImpulse'](_0x11f829) {
            if (null == this['_btCollide' + 'rObject'])
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x23cb9c = _0x10fe89['_bullet'], _0x2416c2 = _0x551d49['_btTempVec' + 'tor30'];
            _0x23cb9c['btVector3_' + 'setValue'](_0x2416c2, -_0x11f829['x'], _0x11f829['y'], _0x11f829['z']), _0x23cb9c['btRigidBod' + 'y_applyTor' + 'queImpulse'](this['_btCollide' + 'rObject'], _0x2416c2);
        }
        ['wakeUp']() {
            this['_btCollide' + 'rObject'] && _0x10fe89['_bullet']['btCollisio' + 'nObject_ac' + 'tivate'](this['_btCollide' + 'rObject'], !0x1);
        }
        ['clearForce' + 's']() {
            var _0x12e82e = this['_btCollide' + 'rObject'];
            if (null == _0x12e82e)
                throw 'Attempted\x20' + 'to\x20call\x20a\x20' + 'Physics\x20fu' + 'nction\x20tha' + 't\x20is\x20avali' + 'able\x20only\x20' + 'when\x20the\x20E' + 'ntity\x20has\x20' + 'been\x20alrea' + 'dy\x20added\x20t' + 'o\x20the\x20Scen' + 'e.';
            var _0x1c7470 = _0x10fe89['_bullet'];
            _0x1c7470['btRigidBod' + 'y_clearFor' + 'ces'](_0x12e82e);
            var _0x5bcc4a = _0x551d49['_btVector3' + 'Zero'];
            _0x1c7470['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionLinear' + 'Velocity'](_0x12e82e, _0x5bcc4a), _0x1c7470['btRigidBod' + 'y_setLinea' + 'rVelocity'](_0x12e82e, _0x5bcc4a), _0x1c7470['btCollisio' + 'nObject_se' + 'tInterpola' + 'tionAngula' + 'rVelocity'](_0x12e82e, _0x5bcc4a), _0x1c7470['btRigidBod' + 'y_setAngul' + 'arVelocity'](_0x12e82e, _0x5bcc4a);
        }
    }
    _0x551d49['TYPE_STATI' + 'C'] = 0x0, _0x551d49['TYPE_DYNAM' + 'IC'] = 0x1, _0x551d49['TYPE_KINEM' + 'ATIC'] = 0x2, _0x551d49['_BT_DISABL' + 'E_WORLD_GR' + 'AVITY'] = 0x1, _0x551d49['_BT_ENABLE' + '_GYROPSCOP' + 'IC_FORCE'] = 0x2;
    class _0x57f780 extends _0x5cfc15 {
        static ['__init__']() {
            _0x57f780['_btNormal'] = _0x10fe89['_bullet']['btVector3_' + 'create'](0x0, 0x0, 0x0);
        }
        constructor(_0x4428c3, _0x5d4514) {
            super(), this['_normal'] = _0x4428c3, this['_offset'] = _0x5d4514, this['_type'] = _0x5cfc15['SHAPETYPES' + '_STATICPLA' + 'NE'];
            var _0xfa400d = _0x10fe89['_bullet'];
            _0xfa400d['btVector3_' + 'setValue'](_0x57f780['_btNormal'], -_0x4428c3['x'], _0x4428c3['y'], _0x4428c3['z']), this['_btShape'] = _0xfa400d['btStaticPl' + 'aneShape_c' + 'reate'](_0x57f780['_btNormal'], _0x5d4514);
        }
        ['clone']() {
            var _0x174973 = new _0x57f780(this['_normal'], this['_offset']);
            return this['cloneTo'](_0x174973), _0x174973;
        }
    }
    class _0x8e84ef extends _0x42e697 {
        constructor(_0x59b9f8) {
            super(), this['_id'] = ++_0x8e84ef['_uniqueIDC' + 'ounter'], this['_mesh'] = _0x59b9f8, this['_boneIndic' + 'esList'] = [], this['_subIndexB' + 'ufferStart'] = [], this['_subIndexB' + 'ufferCount'] = [];
        }
        get ['indexCount']() {
            return this['_indexCoun' + 't'];
        }
        ['_setIndexR' + 'ange'](_0x1c8888, _0x3dee03) {
            this['_indexStar' + 't'] = _0x1c8888, this['_indexCoun' + 't'] = _0x3dee03, this['_indices'] = new Uint16Array(this['_indexBuff' + 'er']['getData']()['buffer'], 0x2 * _0x1c8888, _0x3dee03);
        }
        ['_getType']() {
            return _0x8e84ef['_type'];
        }
        ['_prepareRe' + 'nder'](_0x4d6c39) {
            return this['_mesh']['_uploadVer' + 'ticesData'](), !0x0;
        }
        ['_render'](_0x13f170) {
            var _0x28252d = this['_mesh'];
            if (_0x28252d['indexForma' + 't'] !== _0x341b51['IndexForma' + 't']['UInt32'] || _0x33d6e0['LayaGL']['layaGPUIns' + 'tance']['supportEle' + 'mentIndexU' + 'int32']()) {
                var _0x4da59e, _0x4f41d8 = _0x33d6e0['LayaGL']['instance'], _0x2f14b0 = _0x13f170['renderElem' + 'ent']['render']['_skinnedDa' + 'ta'];
                switch (_0x28252d['indexForma' + 't']) {
                case _0x341b51['IndexForma' + 't']['UInt32']:
                    _0x4da59e = _0x4f41d8['UNSIGNED_I' + 'NT'];
                    break;
                case _0x341b51['IndexForma' + 't']['UInt16']:
                    _0x4da59e = _0x4f41d8['UNSIGNED_S' + 'HORT'];
                    break;
                case _0x341b51['IndexForma' + 't']['UInt8']:
                    _0x4da59e = _0x4f41d8['UNSIGNED_B' + 'YTE'];
                }
                if (_0x28252d['_bufferSta' + 'te']['bind'](), _0x2f14b0) {
                    for (var _0x3ed178 = _0x2f14b0[this['_indexInMe' + 'sh']], _0x55f1f7 = 0x0, _0x1c6b8a = this['_boneIndic' + 'esList']['length']; _0x55f1f7 < _0x1c6b8a; _0x55f1f7++)
                        _0x13f170['shader']['uploadCust' + 'omUniform'](_0x333a16['BONES'], _0x3ed178[_0x55f1f7]), _0x4f41d8['drawElemen' + 'ts'](_0x4f41d8['TRIANGLES'], this['_subIndexB' + 'ufferCount'][_0x55f1f7], _0x4da59e, 0x2 * this['_subIndexB' + 'ufferStart'][_0x55f1f7]);
                } else
                    _0x4f41d8['drawElemen' + 'ts'](_0x4f41d8['TRIANGLES'], this['_indexCoun' + 't'], _0x4da59e, 0x2 * this['_indexStar' + 't']);
                _0x33d6e0['Stat']['trianglesF' + 'aces'] += this['_indexCoun' + 't'] / 0x3, _0x33d6e0['Stat']['renderBatc' + 'hes']++;
            } else
                console['warn']('SubMesh:th' + 'is\x20device\x20' + 'do\x20not\x20sup' + 'port\x20Index' + 'Format.UIn' + 't32.');
        }
        ['getIndices']() {
            if (this['_mesh']['_isReadabl' + 'e'])
                return this['_indices']['slice']();
            throw 'SubMesh:ca' + 'n\x27t\x20get\x20in' + 'dices\x20on\x20s' + 'ubMesh,mes' + 'h\x27s\x20isRead' + 'able\x20must\x20' + 'be\x20true.';
        }
        ['setIndices'](_0x39905a) {
            this['_indexBuff' + 'er']['setData'](_0x39905a, this['_indexStar' + 't'], 0x0, this['_indexCoun' + 't']);
        }
        ['destroy']() {
            this['_destroyed'] || (super['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_indexBuff' + 'er'] = null, this['_mesh'] = null, this['_boneIndic' + 'esList'] = null, this['_subIndexB' + 'ufferStart'] = null, this['_subIndexB' + 'ufferCount'] = null, this['_skinAnima' + 'tionDatas'] = null);
        }
    }
    _0x8e84ef['_uniqueIDC' + 'ounter'] = 0x0, _0x8e84ef['_type'] = _0x42e697['_typeCount' + 'er']++;
    class _0x37c756 {
        static ['parse'](_0x1d6020, _0x20a8d5, _0x2e979c, _0xe1560a) {
            _0x37c756['_mesh'] = _0x2e979c, _0x37c756['_subMeshes'] = _0xe1560a, _0x37c756['_version'] = _0x20a8d5, _0x37c756['_readData'] = _0x1d6020, _0x37c756['READ_DATA'](), _0x37c756['READ_BLOCK'](), _0x37c756['READ_STRIN' + 'GS']();
            for (var _0x1fbca4 = 0x0, _0x2abe58 = _0x37c756['_BLOCK']['count']; _0x1fbca4 < _0x2abe58; _0x1fbca4++) {
                _0x37c756['_readData']['pos'] = _0x37c756['_BLOCK']['blockStart' + 's'][_0x1fbca4];
                var _0x3ac6c2 = _0x37c756['_readData']['getUint16'](), _0x26bfed = _0x37c756['_strings'][_0x3ac6c2], _0x1446ac = _0x37c756['READ_' + _0x26bfed];
                if (null == _0x1446ac)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x3ac6c2 + '\x20' + _0x26bfed);
                _0x1446ac['call'](null);
            }
            _0x37c756['_mesh']['_bindPoseI' + 'ndices'] = new Uint16Array(_0x37c756['_bindPoseI' + 'ndices']), _0x37c756['_bindPoseI' + 'ndices']['length'] = 0x0, _0x37c756['_strings']['length'] = 0x0, _0x37c756['_readData'] = null, _0x37c756['_version'] = null, _0x37c756['_mesh'] = null, _0x37c756['_subMeshes'] = null;
        }
        static ['_readStrin' + 'g']() {
            return _0x37c756['_strings'][_0x37c756['_readData']['getUint16']()];
        }
        static ['READ_DATA']() {
            _0x37c756['_DATA']['offset'] = _0x37c756['_readData']['getUint32'](), _0x37c756['_DATA']['size'] = _0x37c756['_readData']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x3f83c9 = _0x37c756['_BLOCK']['count'] = _0x37c756['_readData']['getUint16'](), _0x53271e = _0x37c756['_BLOCK']['blockStart' + 's'] = [], _0x46343d = _0x37c756['_BLOCK']['blockLengt' + 'hs'] = [], _0x1cccd0 = 0x0; _0x1cccd0 < _0x3f83c9; _0x1cccd0++)
                _0x53271e['push'](_0x37c756['_readData']['getUint32']()), _0x46343d['push'](_0x37c756['_readData']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x4fb0e9 = _0x37c756['_readData']['getUint32'](), _0x5046a7 = _0x37c756['_readData']['getUint16'](), _0x2ab9c1 = _0x37c756['_readData']['pos'];
            _0x37c756['_readData']['pos'] = _0x4fb0e9 + _0x37c756['_DATA']['offset'];
            for (var _0x277944 = 0x0; _0x277944 < _0x5046a7; _0x277944++)
                _0x37c756['_strings'][_0x277944] = _0x37c756['_readData']['readUTFStr' + 'ing']();
            _0x37c756['_readData']['pos'] = _0x2ab9c1;
        }
        static ['READ_MESH']() {
            var _0x35ecc5, _0x1d1c1c = _0x33d6e0['LayaGL']['instance'], _0x15b67c = (_0x37c756['_readStrin' + 'g'](), _0x37c756['_readData']['__getBuffe' + 'r']()), _0x273b3e = 0x0, _0x19eeba = _0x37c756['_readData']['getInt16'](), _0x22184c = _0x37c756['_DATA']['offset'];
            for (_0x35ecc5 = 0x0; _0x35ecc5 < _0x19eeba; _0x35ecc5++) {
                var _0x825982, _0x259428 = _0x22184c + _0x37c756['_readData']['getUint32'](), _0x17cb03 = _0x37c756['_readData']['getUint32'](), _0x7c033b = _0x15b67c['slice'](_0x259428, _0x259428 + _0x17cb03), _0x96204a = new Float32Array(_0x7c033b), _0x1908ae = _0x37c756['_readStrin' + 'g']();
                switch (_0x37c756['_version']) {
                case 'LAYAMODEL:' + '0301':
                case 'LAYAMODEL:' + '0400':
                    _0x825982 = _0xe3d46['getVertexD' + 'eclaration'](_0x1908ae);
                    break;
                case 'LAYAMODEL:' + '0401':
                    _0x825982 = _0xe3d46['getVertexD' + 'eclaration'](_0x1908ae, !0x1);
                    break;
                default:
                    throw new Error('LoadModelV' + '03:\x20unknow' + 'n\x20version.');
                }
                if (!_0x825982)
                    throw new Error('LoadModelV' + '03:\x20unknow' + 'n\x20vertexDe' + 'claration.');
                var _0x185534 = new _0x5dfaba(0x4 * _0x96204a['length'], _0x1d1c1c['STATIC_DRA' + 'W'], !0x0);
                _0x185534['vertexDecl' + 'aration'] = _0x825982, _0x185534['setData'](_0x96204a['buffer']), _0x37c756['_mesh']['_vertexBuf' + 'fer'] = _0x185534, _0x37c756['_mesh']['_vertexCou' + 'nt'] += _0x185534['_byteLengt' + 'h'] / _0x825982['vertexStri' + 'de'], _0x273b3e += 0x4 * _0x96204a['length'];
            }
            var _0x4c34b8 = _0x22184c + _0x37c756['_readData']['getUint32'](), _0xa8b57f = _0x37c756['_readData']['getUint32'](), _0x67377e = new Uint16Array(_0x15b67c['slice'](_0x4c34b8, _0x4c34b8 + _0xa8b57f)), _0x1f5024 = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], _0xa8b57f / 0x2, _0x1d1c1c['STATIC_DRA' + 'W'], !0x0);
            _0x1f5024['setData'](_0x67377e), _0x37c756['_mesh']['_indexBuff' + 'er'] = _0x1f5024, _0x273b3e += 0x2 * _0x1f5024['indexCount'], _0x37c756['_mesh']['_setBuffer'](_0x37c756['_mesh']['_vertexBuf' + 'fer'], _0x1f5024), _0x37c756['_mesh']['_setCPUMem' + 'ory'](_0x273b3e), _0x37c756['_mesh']['_setGPUMem' + 'ory'](_0x273b3e);
            var _0x1a0821 = _0x37c756['_mesh']['_boneNames'] = [], _0x506c5a = _0x37c756['_readData']['getUint16']();
            for (_0x1a0821['length'] = _0x506c5a, _0x35ecc5 = 0x0; _0x35ecc5 < _0x506c5a; _0x35ecc5++)
                _0x1a0821[_0x35ecc5] = _0x37c756['_strings'][_0x37c756['_readData']['getUint16']()];
            _0x37c756['_readData']['pos'] += 0x8;
            var _0x4b5862 = _0x37c756['_readData']['getUint32'](), _0x109264 = _0x37c756['_readData']['getUint32'](), _0x39816d = new Float32Array(_0x15b67c['slice'](_0x22184c + _0x4b5862, _0x22184c + _0x4b5862 + _0x109264)), _0x131087 = _0x39816d['length'], _0x7ac00a = _0x37c756['_mesh']['_inverseBi' + 'ndPosesBuf' + 'fer'] = new ArrayBuffer(0x4 * _0x131087);
            for (_0x37c756['_mesh']['_inverseBi' + 'ndPoses'] = [], _0x35ecc5 = 0x0; _0x35ecc5 < _0x131087; _0x35ecc5 += 0x10) {
                var _0xb26f4f = new _0x16c2be(_0x39816d[_0x35ecc5 + 0x0], _0x39816d[_0x35ecc5 + 0x1], _0x39816d[_0x35ecc5 + 0x2], _0x39816d[_0x35ecc5 + 0x3], _0x39816d[_0x35ecc5 + 0x4], _0x39816d[_0x35ecc5 + 0x5], _0x39816d[_0x35ecc5 + 0x6], _0x39816d[_0x35ecc5 + 0x7], _0x39816d[_0x35ecc5 + 0x8], _0x39816d[_0x35ecc5 + 0x9], _0x39816d[_0x35ecc5 + 0xa], _0x39816d[_0x35ecc5 + 0xb], _0x39816d[_0x35ecc5 + 0xc], _0x39816d[_0x35ecc5 + 0xd], _0x39816d[_0x35ecc5 + 0xe], _0x39816d[_0x35ecc5 + 0xf], new Float32Array(_0x7ac00a, 0x4 * _0x35ecc5, 0x10));
                _0x37c756['_mesh']['_inverseBi' + 'ndPoses'][_0x35ecc5 / 0x10] = _0xb26f4f;
            }
            return !0x0;
        }
        static ['READ_SUBME' + 'SH']() {
            var _0x90f382 = _0x37c756['_readData']['__getBuffe' + 'r'](), _0x26f0a7 = new _0x8e84ef(_0x37c756['_mesh']);
            _0x37c756['_readData']['getInt16'](), _0x37c756['_readData']['getUint32'](), _0x37c756['_readData']['getUint32']();
            var _0x553adf = _0x37c756['_readData']['getUint32'](), _0x1a169b = _0x37c756['_readData']['getUint32'](), _0x36de19 = _0x37c756['_mesh']['_indexBuff' + 'er'];
            _0x26f0a7['_indexBuff' + 'er'] = _0x36de19, _0x26f0a7['_setIndexR' + 'ange'](_0x553adf, _0x1a169b);
            var _0x133641 = _0x37c756['_mesh']['_vertexBuf' + 'fer'];
            _0x26f0a7['_vertexBuf' + 'fer'] = _0x133641;
            var _0x49a578 = _0x37c756['_DATA']['offset'], _0x29b5e1 = _0x26f0a7['_subIndexB' + 'ufferStart'], _0x4b976a = _0x26f0a7['_subIndexB' + 'ufferCount'], _0x5efcd1 = _0x26f0a7['_boneIndic' + 'esList'], _0x4dce87 = _0x37c756['_readData']['getUint16']();
            _0x29b5e1['length'] = _0x4dce87, _0x4b976a['length'] = _0x4dce87, _0x5efcd1['length'] = _0x4dce87;
            for (var _0x51988c = _0x37c756['_mesh']['_skinDataP' + 'athMarks'], _0x291d40 = _0x37c756['_bindPoseI' + 'ndices'], _0x28dd56 = _0x37c756['_subMeshes']['length'], _0x5d05fb = 0x0; _0x5d05fb < _0x4dce87; _0x5d05fb++) {
                _0x29b5e1[_0x5d05fb] = _0x37c756['_readData']['getUint32'](), _0x4b976a[_0x5d05fb] = _0x37c756['_readData']['getUint32']();
                for (var _0x5355d5 = _0x37c756['_readData']['getUint32'](), _0x56f2b0 = _0x37c756['_readData']['getUint32'](), _0x386401 = _0x5efcd1[_0x5d05fb] = new Uint16Array(_0x90f382['slice'](_0x49a578 + _0x5355d5, _0x49a578 + _0x5355d5 + _0x56f2b0)), _0x22ebab = 0x0, _0x3871b5 = _0x386401['length']; _0x22ebab < _0x3871b5; _0x22ebab++) {
                    var _0x3b1156 = _0x386401[_0x22ebab], _0x3f8e2d = _0x291d40['indexOf'](_0x3b1156);
                    -0x1 === _0x3f8e2d ? (_0x386401[_0x22ebab] = _0x291d40['length'], _0x291d40['push'](_0x3b1156), _0x51988c['push']([
                        _0x28dd56,
                        _0x5d05fb,
                        _0x22ebab
                    ])) : _0x386401[_0x22ebab] = _0x3f8e2d;
                }
            }
            return _0x37c756['_subMeshes']['push'](_0x26f0a7), !0x0;
        }
    }
    _0x37c756['_BLOCK'] = { 'count': 0x0 }, _0x37c756['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x37c756['_strings'] = [], _0x37c756['_bindPoseI' + 'ndices'] = [];
    class _0x3c11cf {
        static ['parse'](_0x19d2c7, _0x2953eb, _0x899aa1, _0x4c9cc8) {
            _0x3c11cf['_mesh'] = _0x899aa1, _0x3c11cf['_subMeshes'] = _0x4c9cc8, _0x3c11cf['_version'] = _0x2953eb, _0x3c11cf['_readData'] = _0x19d2c7, _0x3c11cf['READ_DATA'](), _0x3c11cf['READ_BLOCK'](), _0x3c11cf['READ_STRIN' + 'GS']();
            for (var _0x9970ae = 0x0, _0x39498d = _0x3c11cf['_BLOCK']['count']; _0x9970ae < _0x39498d; _0x9970ae++) {
                _0x3c11cf['_readData']['pos'] = _0x3c11cf['_BLOCK']['blockStart' + 's'][_0x9970ae];
                var _0x2bd5b9 = _0x3c11cf['_readData']['getUint16'](), _0x3038e7 = _0x3c11cf['_strings'][_0x2bd5b9], _0x139996 = _0x3c11cf['READ_' + _0x3038e7];
                if (null == _0x139996)
                    throw new Error('model\x20file' + '\x20err,no\x20th' + 'is\x20functio' + 'n:' + _0x2bd5b9 + '\x20' + _0x3038e7);
                _0x139996['call'](null);
            }
            _0x3c11cf['_mesh']['_bindPoseI' + 'ndices'] = new Uint16Array(_0x3c11cf['_bindPoseI' + 'ndices']), _0x3c11cf['_bindPoseI' + 'ndices']['length'] = 0x0, _0x3c11cf['_strings']['length'] = 0x0, _0x3c11cf['_readData'] = null, _0x3c11cf['_version'] = null, _0x3c11cf['_mesh'] = null, _0x3c11cf['_subMeshes'] = null;
        }
        static ['_readStrin' + 'g']() {
            return _0x3c11cf['_strings'][_0x3c11cf['_readData']['getUint16']()];
        }
        static ['READ_DATA']() {
            _0x3c11cf['_DATA']['offset'] = _0x3c11cf['_readData']['getUint32'](), _0x3c11cf['_DATA']['size'] = _0x3c11cf['_readData']['getUint32']();
        }
        static ['READ_BLOCK']() {
            for (var _0x20c769 = _0x3c11cf['_BLOCK']['count'] = _0x3c11cf['_readData']['getUint16'](), _0x4c4d5a = _0x3c11cf['_BLOCK']['blockStart' + 's'] = [], _0x1bb162 = _0x3c11cf['_BLOCK']['blockLengt' + 'hs'] = [], _0x5bd19e = 0x0; _0x5bd19e < _0x20c769; _0x5bd19e++)
                _0x4c4d5a['push'](_0x3c11cf['_readData']['getUint32']()), _0x1bb162['push'](_0x3c11cf['_readData']['getUint32']());
        }
        static ['READ_STRIN' + 'GS']() {
            var _0x5606e0 = _0x3c11cf['_readData']['getUint32'](), _0x529f65 = _0x3c11cf['_readData']['getUint16'](), _0x31210b = _0x3c11cf['_readData']['pos'];
            _0x3c11cf['_readData']['pos'] = _0x5606e0 + _0x3c11cf['_DATA']['offset'];
            for (var _0x37ca60 = 0x0; _0x37ca60 < _0x529f65; _0x37ca60++)
                _0x3c11cf['_strings'][_0x37ca60] = _0x3c11cf['_readData']['readUTFStr' + 'ing']();
            _0x3c11cf['_readData']['pos'] = _0x31210b;
        }
        static ['READ_MESH']() {
            var _0x2fd47a, _0x108fea = _0x33d6e0['LayaGL']['instance'], _0x351e64 = 0x0, _0x53520a = (_0x3c11cf['_readStrin' + 'g'](), _0x3c11cf['_readData']), _0x1ef10 = _0x53520a['__getBuffe' + 'r'](), _0x12ef70 = _0x53520a['getInt16'](), _0x4eadc4 = _0x3c11cf['_DATA']['offset'];
            for (_0x2fd47a = 0x0; _0x2fd47a < _0x12ef70; _0x2fd47a++) {
                var _0x1239a9, _0x53adf0, _0x2ad00d, _0x3334ab = _0x4eadc4 + _0x53520a['getUint32'](), _0x59ad87 = _0x53520a['getUint32'](), _0x178d52 = _0x3c11cf['_readStrin' + 'g'](), _0x508b01 = _0xe3d46['getVertexD' + 'eclaration'](_0x178d52, !0x1), _0x1468cd = _0x508b01['vertexStri' + 'de'], _0x2cd79a = _0x178d52['split'](','), _0x385200 = _0x2cd79a['length'], _0x5e3351 = _0x3c11cf['_mesh'];
                switch (_0x3c11cf['_version']) {
                case 'LAYAMODEL:' + '05':
                    _0x1239a9 = _0x1ef10['slice'](_0x3334ab, _0x3334ab + _0x59ad87 * _0x1468cd), _0x53adf0 = new Float32Array(_0x1239a9), _0x2ad00d = new Uint8Array(_0x1239a9);
                    break;
                case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_05':
                    _0x1239a9 = new ArrayBuffer(_0x1468cd * _0x59ad87), _0x53adf0 = new Float32Array(_0x1239a9), _0x2ad00d = new Uint8Array(_0x1239a9);
                    var _0x2fc624 = _0x53520a['pos'];
                    _0x53520a['pos'] = _0x3334ab;
                    for (var _0x3dd125 = 0x0; _0x3dd125 < _0x59ad87; _0x3dd125++)
                        for (var _0x5850a7, _0x131001 = _0x3dd125 * _0x1468cd, _0xdfe62e = 0x0; _0xdfe62e < _0x385200; _0xdfe62e++)
                            switch (_0x2cd79a[_0xdfe62e]) {
                            case 'POSITION':
                                _0x53adf0[_0x5850a7 = _0x131001 / 0x4] = _0x3d10d1['convertToN' + 'umber'](_0x53520a['getUint16']()), _0x53adf0[_0x5850a7 + 0x1] = _0x3d10d1['convertToN' + 'umber'](_0x53520a['getUint16']()), _0x53adf0[_0x5850a7 + 0x2] = _0x3d10d1['convertToN' + 'umber'](_0x53520a['getUint16']()), _0x131001 += 0xc;
                                break;
                            case 'NORMAL':
                                _0x53adf0[_0x5850a7 = _0x131001 / 0x4] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x53adf0[_0x5850a7 + 0x1] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x53adf0[_0x5850a7 + 0x2] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x131001 += 0xc;
                                break;
                            case 'COLOR':
                                _0x53adf0[_0x5850a7 = _0x131001 / 0x4] = _0x53520a['getUint8']() / 0xff, _0x53adf0[_0x5850a7 + 0x1] = _0x53520a['getUint8']() / 0xff, _0x53adf0[_0x5850a7 + 0x2] = _0x53520a['getUint8']() / 0xff, _0x53adf0[_0x5850a7 + 0x3] = _0x53520a['getUint8']() / 0xff, _0x131001 += 0x10;
                                break;
                            case 'UV':
                            case 'UV1':
                                _0x53adf0[_0x5850a7 = _0x131001 / 0x4] = _0x3d10d1['convertToN' + 'umber'](_0x53520a['getUint16']()), _0x53adf0[_0x5850a7 + 0x1] = _0x3d10d1['convertToN' + 'umber'](_0x53520a['getUint16']()), _0x131001 += 0x8;
                                break;
                            case 'BLENDWEIGH' + 'T':
                                _0x53adf0[_0x5850a7 = _0x131001 / 0x4] = _0x53520a['getUint8']() / 0xff, _0x53adf0[_0x5850a7 + 0x1] = _0x53520a['getUint8']() / 0xff, _0x53adf0[_0x5850a7 + 0x2] = _0x53520a['getUint8']() / 0xff, _0x53adf0[_0x5850a7 + 0x3] = _0x53520a['getUint8']() / 0xff, _0x131001 += 0x10;
                                break;
                            case 'BLENDINDIC' + 'ES':
                                _0x2ad00d[_0x131001] = _0x53520a['getUint8'](), _0x2ad00d[_0x131001 + 0x1] = _0x53520a['getUint8'](), _0x2ad00d[_0x131001 + 0x2] = _0x53520a['getUint8'](), _0x2ad00d[_0x131001 + 0x3] = _0x53520a['getUint8'](), _0x131001 += 0x4;
                                break;
                            case 'TANGENT':
                                _0x53adf0[_0x5850a7 = _0x131001 / 0x4] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x53adf0[_0x5850a7 + 0x1] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x53adf0[_0x5850a7 + 0x2] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x53adf0[_0x5850a7 + 0x3] = _0x53520a['getUint8']() / 127.5 - 0x1, _0x131001 += 0x10;
                            }
                    _0x53520a['pos'] = _0x2fc624;
                }
                var _0x5c4f1c = new _0x5dfaba(_0x1239a9['byteLength'], _0x108fea['STATIC_DRA' + 'W'], !0x0);
                _0x5c4f1c['vertexDecl' + 'aration'] = _0x508b01, _0x5c4f1c['setData'](_0x1239a9), _0x59ad87 = _0x5c4f1c['_byteLengt' + 'h'] / _0x508b01['vertexStri' + 'de'], (_0x5e3351['_indexForm' + 'at'] = _0x59ad87 > 0xffff ? _0x341b51['IndexForma' + 't']['UInt32'] : _0x341b51['IndexForma' + 't']['UInt16'], _0x5e3351['_vertexBuf' + 'fer'] = _0x5c4f1c, _0x5e3351['_vertexCou' + 'nt'] += _0x59ad87, _0x351e64 += 0x4 * _0x53adf0['length']);
            }
            var _0x4c328d, _0x17863a = _0x4eadc4 + _0x53520a['getUint32'](), _0x4a166b = _0x53520a['getUint32']();
            _0x4c328d = _0x5e3351['indexForma' + 't'] == _0x341b51['IndexForma' + 't']['UInt32'] ? new Uint32Array(_0x1ef10['slice'](_0x17863a, _0x17863a + _0x4a166b)) : new Uint16Array(_0x1ef10['slice'](_0x17863a, _0x17863a + _0x4a166b));
            var _0x2280e7 = new _0x95846f(_0x5e3351['indexForma' + 't'], _0x4c328d['length'], _0x108fea['STATIC_DRA' + 'W'], !0x0);
            _0x2280e7['setData'](_0x4c328d), _0x5e3351['_indexBuff' + 'er'] = _0x2280e7, _0x5e3351['_setBuffer'](_0x5e3351['_vertexBuf' + 'fer'], _0x2280e7), _0x351e64 += 0x2 * _0x2280e7['indexCount'], _0x5e3351['_setCPUMem' + 'ory'](_0x351e64), _0x5e3351['_setGPUMem' + 'ory'](_0x351e64);
            var _0x2356d3 = _0x5e3351['_boneNames'] = [], _0x3ea801 = _0x53520a['getUint16']();
            for (_0x2356d3['length'] = _0x3ea801, _0x2fd47a = 0x0; _0x2fd47a < _0x3ea801; _0x2fd47a++)
                _0x2356d3[_0x2fd47a] = _0x3c11cf['_strings'][_0x53520a['getUint16']()];
            var _0x24e57e = _0x53520a['getUint32'](), _0x2b7154 = _0x53520a['getUint32'](), _0x51ffba = new Float32Array(_0x1ef10['slice'](_0x4eadc4 + _0x24e57e, _0x4eadc4 + _0x24e57e + _0x2b7154)), _0x5e02ad = _0x51ffba['length'], _0x45903b = _0x5e3351['_inverseBi' + 'ndPosesBuf' + 'fer'] = new ArrayBuffer(0x4 * _0x5e02ad);
            for (_0x5e3351['_inverseBi' + 'ndPoses'] = [], _0x2fd47a = 0x0; _0x2fd47a < _0x5e02ad; _0x2fd47a += 0x10) {
                var _0x7eb209 = new _0x16c2be(_0x51ffba[_0x2fd47a + 0x0], _0x51ffba[_0x2fd47a + 0x1], _0x51ffba[_0x2fd47a + 0x2], _0x51ffba[_0x2fd47a + 0x3], _0x51ffba[_0x2fd47a + 0x4], _0x51ffba[_0x2fd47a + 0x5], _0x51ffba[_0x2fd47a + 0x6], _0x51ffba[_0x2fd47a + 0x7], _0x51ffba[_0x2fd47a + 0x8], _0x51ffba[_0x2fd47a + 0x9], _0x51ffba[_0x2fd47a + 0xa], _0x51ffba[_0x2fd47a + 0xb], _0x51ffba[_0x2fd47a + 0xc], _0x51ffba[_0x2fd47a + 0xd], _0x51ffba[_0x2fd47a + 0xe], _0x51ffba[_0x2fd47a + 0xf], new Float32Array(_0x45903b, 0x4 * _0x2fd47a, 0x10));
                _0x5e3351['_inverseBi' + 'ndPoses'][_0x2fd47a / 0x10] = _0x7eb209;
            }
            return !0x0;
        }
        static ['READ_SUBME' + 'SH']() {
            var _0x55c38d = _0x3c11cf['_readData'], _0xf4c4b5 = _0x55c38d['__getBuffe' + 'r'](), _0x56d984 = new _0x8e84ef(_0x3c11cf['_mesh']);
            _0x55c38d['getInt16']();
            var _0x3cd918 = _0x55c38d['getUint32'](), _0x558e3a = _0x55c38d['getUint32'](), _0x5647bb = _0x3c11cf['_mesh']['_indexBuff' + 'er'];
            _0x56d984['_indexBuff' + 'er'] = _0x5647bb, _0x56d984['_setIndexR' + 'ange'](_0x3cd918, _0x558e3a);
            var _0x1efba9 = _0x3c11cf['_mesh']['_vertexBuf' + 'fer'];
            _0x56d984['_vertexBuf' + 'fer'] = _0x1efba9;
            var _0x58f9af = _0x3c11cf['_DATA']['offset'], _0x594bbd = _0x56d984['_subIndexB' + 'ufferStart'], _0x1e9088 = _0x56d984['_subIndexB' + 'ufferCount'], _0x4c9597 = _0x56d984['_boneIndic' + 'esList'], _0x47b735 = _0x55c38d['getUint16']();
            _0x594bbd['length'] = _0x47b735, _0x1e9088['length'] = _0x47b735, _0x4c9597['length'] = _0x47b735;
            for (var _0x30296f = _0x3c11cf['_mesh']['_skinDataP' + 'athMarks'], _0x2841c6 = _0x3c11cf['_bindPoseI' + 'ndices'], _0x5c55f9 = _0x3c11cf['_subMeshes']['length'], _0x2cb029 = 0x0; _0x2cb029 < _0x47b735; _0x2cb029++) {
                _0x594bbd[_0x2cb029] = _0x55c38d['getUint32'](), _0x1e9088[_0x2cb029] = _0x55c38d['getUint32']();
                for (var _0x4c67c9 = _0x55c38d['getUint32'](), _0x3018d0 = _0x55c38d['getUint32'](), _0x13d13f = _0x4c9597[_0x2cb029] = new Uint16Array(_0xf4c4b5['slice'](_0x58f9af + _0x4c67c9, _0x58f9af + _0x4c67c9 + _0x3018d0)), _0x3e8290 = 0x0, _0x329542 = _0x13d13f['length']; _0x3e8290 < _0x329542; _0x3e8290++) {
                    var _0x57ce8f = _0x13d13f[_0x3e8290], _0x33a354 = _0x2841c6['indexOf'](_0x57ce8f);
                    -0x1 === _0x33a354 ? (_0x13d13f[_0x3e8290] = _0x2841c6['length'], _0x2841c6['push'](_0x57ce8f), _0x30296f['push']([
                        _0x5c55f9,
                        _0x2cb029,
                        _0x3e8290
                    ])) : _0x13d13f[_0x3e8290] = _0x33a354;
                }
            }
            return _0x3c11cf['_subMeshes']['push'](_0x56d984), !0x0;
        }
    }
    _0x3c11cf['_BLOCK'] = { 'count': 0x0 }, _0x3c11cf['_DATA'] = {
        'offset': 0x0,
        'size': 0x0
    }, _0x3c11cf['_strings'] = [], _0x3c11cf['_bindPoseI' + 'ndices'] = [];
    class _0x3af98b {
        constructor() {
        }
        static ['read'](_0x373460, _0x4d2ced, _0x25d8e9) {
            var _0x11cf26 = new _0x33d6e0['Byte'](_0x373460);
            _0x11cf26['pos'] = 0x0;
            var _0x3405f6 = _0x11cf26['readUTFStr' + 'ing']();
            switch (_0x3405f6) {
            case 'LAYAMODEL:' + '0301':
            case 'LAYAMODEL:' + '0400':
            case 'LAYAMODEL:' + '0401':
                _0x37c756['parse'](_0x11cf26, _0x3405f6, _0x4d2ced, _0x25d8e9);
                break;
            case 'LAYAMODEL:' + '05':
            case 'LAYAMODEL:' + 'COMPRESSIO' + 'N_05':
                _0x3c11cf['parse'](_0x11cf26, _0x3405f6, _0x4d2ced, _0x25d8e9);
                break;
            default:
                throw new Error('MeshReader' + ':\x20unknown\x20' + 'mesh\x20versi' + 'on.');
            }
            _0x4d2ced['_setSubMes' + 'hes'](_0x25d8e9);
        }
    }
    class _0x33f5ae extends _0x33d6e0['Resource'] {
        constructor(_0x33ea74 = !0x0) {
            super(), this['_tempVecto' + 'r30'] = new _0x4795b3(), this['_tempVecto' + 'r31'] = new _0x4795b3(), this['_tempVecto' + 'r32'] = new _0x4795b3(), this['_minVertic' + 'esUpdate'] = -0x1, this['_maxVertic' + 'esUpdate'] = -0x1, this['_needUpdat' + 'eBounds'] = !0x0, this['_bounds'] = new _0x5a0bdd(new _0x4795b3(), new _0x4795b3()), this['_bufferSta' + 'te'] = new _0x59c541(), this['_instanceB' + 'ufferState'] = new _0x59c541(), this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_vertexCou' + 'nt'] = 0x0, this['_indexForm' + 'at'] = _0x341b51['IndexForma' + 't']['UInt16'], this['_isReadabl' + 'e'] = _0x33ea74, this['_subMeshes'] = [], this['_skinDataP' + 'athMarks'] = [];
        }
        static ['__init__']() {
            var _0x272082 = _0x10fe89['_bullet'];
            _0x272082 && (_0x33f5ae['_nativeTem' + 'pVector30'] = _0x272082['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x33f5ae['_nativeTem' + 'pVector31'] = _0x272082['btVector3_' + 'create'](0x0, 0x0, 0x0), _0x33f5ae['_nativeTem' + 'pVector32'] = _0x272082['btVector3_' + 'create'](0x0, 0x0, 0x0));
        }
        static ['_parse'](_0x3d5287, _0x279017 = null, _0x541821 = null) {
            var _0x5a09b8 = new _0x33f5ae();
            return _0x3af98b['read'](_0x3d5287, _0x5a09b8, _0x5a09b8['_subMeshes']), _0x5a09b8;
        }
        static ['load'](_0xab4b32, _0x11ecb5) {
            _0x33d6e0['ILaya']['loader']['create'](_0xab4b32, _0x11ecb5, null, _0x33f5ae['MESH']);
        }
        get ['inverseAbs' + 'oluteBindP' + 'oses']() {
            return this['_inverseBi' + 'ndPoses'];
        }
        get ['vertexCoun' + 't']() {
            return this['_vertexCou' + 'nt'];
        }
        get ['indexCount']() {
            return this['_indexBuff' + 'er']['indexCount'];
        }
        get ['subMeshCou' + 'nt']() {
            return this['_subMeshes']['length'];
        }
        get ['bounds']() {
            return this['_bounds'];
        }
        set ['bounds'](_0x11d5e0) {
            this['_bounds'] !== _0x11d5e0 && _0x11d5e0['cloneTo'](this['_bounds']);
        }
        get ['indexForma' + 't']() {
            return this['_indexForm' + 'at'];
        }
        ['_getPositi' + 'onElement'](_0x3e7a9c) {
            for (var _0x29542f = _0x3e7a9c['vertexDecl' + 'aration']['_vertexEle' + 'ments'], _0x44b652 = 0x0, _0x4afef = _0x29542f['length']; _0x44b652 < _0x4afef; _0x44b652++) {
                var _0x2bd9a2 = _0x29542f[_0x44b652];
                if (_0x2bd9a2['_elementFo' + 'rmat'] === _0x43e6c5['Vector3'] && _0x2bd9a2['_elementUs' + 'age'] === _0xe3d46['MESH_POSIT' + 'ION0'])
                    return _0x2bd9a2;
            }
            return null;
        }
        ['_getVertic' + 'eElementDa' + 'ta'](_0x43d09c, _0x1ec891) {
            _0x43d09c['length'] = this['_vertexCou' + 'nt'];
            var _0x43cef8 = this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x4126dd = _0x43cef8['getVertexE' + 'lementByUs' + 'age'](_0x1ec891);
            if (_0x4126dd) {
                var _0x2724da = this['_vertexBuf' + 'fer']['getUint8Da' + 'ta'](), _0x13ca98 = this['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x336a96 = _0x43cef8['vertexStri' + 'de'], _0x522255 = _0x336a96 / 0x4, _0x51ae93 = _0x4126dd['_offset'], _0x44b254 = _0x51ae93 / 0x4;
                switch (_0x1ec891) {
                case _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                case _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                    for (var _0x518d27 = 0x0; _0x518d27 < this['_vertexCou' + 'nt']; _0x518d27++) {
                        var _0x41884f = _0x522255 * _0x518d27 + _0x44b254;
                        _0x43d09c[_0x518d27] = new _0x4c44b6(_0x13ca98[_0x41884f], _0x13ca98[_0x41884f + 0x1]);
                    }
                    break;
                case _0xe3d46['MESH_POSIT' + 'ION0']:
                case _0xe3d46['MESH_NORMA' + 'L0']:
                    for (_0x518d27 = 0x0; _0x518d27 < this['_vertexCou' + 'nt']; _0x518d27++) {
                        _0x41884f = _0x522255 * _0x518d27 + _0x44b254, _0x43d09c[_0x518d27] = new _0x4795b3(_0x13ca98[_0x41884f], _0x13ca98[_0x41884f + 0x1], _0x13ca98[_0x41884f + 0x2]);
                    }
                    break;
                case _0xe3d46['MESH_TANGE' + 'NT0']:
                case _0xe3d46['MESH_BLEND' + 'WEIGHT0']:
                    for (_0x518d27 = 0x0; _0x518d27 < this['_vertexCou' + 'nt']; _0x518d27++) {
                        _0x41884f = _0x522255 * _0x518d27 + _0x44b254, _0x43d09c[_0x518d27] = new _0x333f41(_0x13ca98[_0x41884f], _0x13ca98[_0x41884f + 0x1], _0x13ca98[_0x41884f + 0x2], _0x13ca98[_0x41884f + 0x3]);
                    }
                    break;
                case _0xe3d46['MESH_COLOR' + '0']:
                    for (_0x518d27 = 0x0; _0x518d27 < this['_vertexCou' + 'nt']; _0x518d27++) {
                        _0x41884f = _0x522255 * _0x518d27 + _0x44b254, _0x43d09c[_0x518d27] = new _0x210bda(_0x13ca98[_0x41884f], _0x13ca98[_0x41884f + 0x1], _0x13ca98[_0x41884f + 0x2], _0x13ca98[_0x41884f + 0x3]);
                    }
                    break;
                case _0xe3d46['MESH_BLEND' + 'INDICES0']:
                    for (_0x518d27 = 0x0; _0x518d27 < this['_vertexCou' + 'nt']; _0x518d27++) {
                        _0x41884f = _0x336a96 * _0x518d27 + _0x51ae93, _0x43d09c[_0x518d27] = new _0x333f41(_0x2724da[_0x41884f], _0x2724da[_0x41884f + 0x1], _0x2724da[_0x41884f + 0x2], _0x2724da[_0x41884f + 0x3]);
                    }
                    break;
                default:
                    throw 'Mesh:Unkno' + 'wn\x20element' + 'Usage.';
                }
            }
        }
        ['_setVertic' + 'eElementDa' + 'ta'](_0x233ba3, _0x3565a6) {
            var _0x3afae7 = this['_vertexBuf' + 'fer']['vertexDecl' + 'aration'], _0x103bfb = _0x3afae7['getVertexE' + 'lementByUs' + 'age'](_0x3565a6);
            if (_0x103bfb) {
                var _0x1173a3 = this['_vertexBuf' + 'fer']['getUint8Da' + 'ta'](), _0x4e593f = this['_vertexBuf' + 'fer']['getFloat32' + 'Data'](), _0x3a64e6 = _0x3afae7['vertexStri' + 'de'], _0xaee5ac = _0x3a64e6 / 0x4, _0x58251a = _0x103bfb['_offset'], _0x5b8c97 = _0x58251a / 0x4;
                switch (_0x3565a6) {
                case _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']:
                case _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']:
                    for (var _0x48887a = 0x0, _0x4974c4 = _0x233ba3['length']; _0x48887a < _0x4974c4; _0x48887a++) {
                        var _0x3a173e = _0xaee5ac * _0x48887a + _0x5b8c97, _0x252efc = _0x233ba3[_0x48887a];
                        _0x4e593f[_0x3a173e] = _0x252efc['x'], _0x4e593f[_0x3a173e + 0x1] = _0x252efc['y'];
                    }
                    break;
                case _0xe3d46['MESH_POSIT' + 'ION0']:
                case _0xe3d46['MESH_NORMA' + 'L0']:
                    for (_0x48887a = 0x0, _0x4974c4 = _0x233ba3['length']; _0x48887a < _0x4974c4; _0x48887a++) {
                        _0x3a173e = _0xaee5ac * _0x48887a + _0x5b8c97;
                        var _0x2e0ff7 = _0x233ba3[_0x48887a];
                        _0x4e593f[_0x3a173e] = _0x2e0ff7['x'], _0x4e593f[_0x3a173e + 0x1] = _0x2e0ff7['y'], _0x4e593f[_0x3a173e + 0x2] = _0x2e0ff7['z'];
                    }
                    break;
                case _0xe3d46['MESH_TANGE' + 'NT0']:
                case _0xe3d46['MESH_BLEND' + 'WEIGHT0']:
                    for (_0x48887a = 0x0, _0x4974c4 = _0x233ba3['length']; _0x48887a < _0x4974c4; _0x48887a++) {
                        _0x3a173e = _0xaee5ac * _0x48887a + _0x5b8c97;
                        var _0x319875 = _0x233ba3[_0x48887a];
                        _0x4e593f[_0x3a173e] = _0x319875['x'], _0x4e593f[_0x3a173e + 0x1] = _0x319875['y'], _0x4e593f[_0x3a173e + 0x2] = _0x319875['z'], _0x4e593f[_0x3a173e + 0x3] = _0x319875['w'];
                    }
                    break;
                case _0xe3d46['MESH_COLOR' + '0']:
                    for (_0x48887a = 0x0, _0x4974c4 = _0x233ba3['length']; _0x48887a < _0x4974c4; _0x48887a++) {
                        _0x3a173e = _0xaee5ac * _0x48887a + _0x5b8c97;
                        var _0x30d3e4 = _0x233ba3[_0x48887a];
                        _0x4e593f[_0x3a173e] = _0x30d3e4['r'], _0x4e593f[_0x3a173e + 0x1] = _0x30d3e4['g'], _0x4e593f[_0x3a173e + 0x2] = _0x30d3e4['b'], _0x4e593f[_0x3a173e + 0x2] = _0x30d3e4['a'];
                    }
                    break;
                case _0xe3d46['MESH_BLEND' + 'INDICES0']:
                    for (_0x48887a = 0x0, _0x4974c4 = _0x233ba3['length']; _0x48887a < _0x4974c4; _0x48887a++) {
                        _0x3a173e = _0x3a64e6 * _0x48887a + _0x58251a, _0x319875 = _0x233ba3[_0x48887a], (_0x1173a3[_0x3a173e] = _0x319875['x'], _0x1173a3[_0x3a173e + 0x1] = _0x319875['y'], _0x1173a3[_0x3a173e + 0x2] = _0x319875['z'], _0x1173a3[_0x3a173e + 0x3] = _0x319875['w']);
                    }
                    break;
                default:
                    throw 'Mesh:Unkno' + 'wn\x20element' + 'Usage.';
                }
                this['_minVertic' + 'esUpdate'] = 0x0, this['_maxVertic' + 'esUpdate'] = Number['MAX_SAFE_I' + 'NTEGER'];
            } else
                console['warn']('Mesh:\x20the\x20' + 'mesh\x20don\x27t' + '\x20have\x20\x20thi' + 's\x20VertexEl' + 'ement.');
        }
        ['_disposeRe' + 'source']() {
            for (var _0x132b10 = 0x0, _0x2d31e3 = this['_subMeshes']['length']; _0x132b10 < _0x2d31e3; _0x132b10++)
                this['_subMeshes'][_0x132b10]['destroy']();
            this['_btTriangl' + 'eMesh'] && _0x10fe89['_bullet']['btStriding' + 'MeshInterf' + 'ace_destro' + 'y'](this['_btTriangl' + 'eMesh']), this['_vertexBuf' + 'fer']['destroy'](), this['_indexBuff' + 'er']['destroy'](), this['_bufferSta' + 'te']['destroy'](), this['_instanceB' + 'ufferState']['destroy'](), this['_setCPUMem' + 'ory'](0x0), this['_setGPUMem' + 'ory'](0x0), this['_bufferSta' + 'te'] = null, this['_instanceB' + 'ufferState'] = null, this['_vertexBuf' + 'fer'] = null, this['_indexBuff' + 'er'] = null, this['_subMeshes'] = null, this['_btTriangl' + 'eMesh'] = null, this['_indexBuff' + 'er'] = null, this['_boneNames'] = null, this['_inverseBi' + 'ndPoses'] = null;
        }
        ['_setSubMes' + 'hes'](_0x3eb3ed) {
            this['_subMeshes'] = _0x3eb3ed;
            for (var _0x44a7eb = 0x0, _0x42f338 = _0x3eb3ed['length']; _0x44a7eb < _0x42f338; _0x44a7eb++)
                _0x3eb3ed[_0x44a7eb]['_indexInMe' + 'sh'] = _0x44a7eb;
            this['calculateB' + 'ounds']();
        }
        ['_setBuffer'](_0x28dfdb, _0x367c62) {
            var _0x5d68a4 = this['_bufferSta' + 'te'];
            _0x5d68a4['bind'](), _0x5d68a4['applyVerte' + 'xBuffer'](_0x28dfdb), _0x5d68a4['applyIndex' + 'Buffer'](_0x367c62), _0x5d68a4['unBind']();
            var _0x5fe959 = this['_instanceB' + 'ufferState'];
            _0x5fe959['bind'](), _0x5fe959['applyVerte' + 'xBuffer'](_0x28dfdb), _0x5fe959['applyInsta' + 'nceVertexB' + 'uffer'](_0x1b47c9['instance']['instanceWo' + 'rldMatrixB' + 'uffer']), _0x5fe959['applyInsta' + 'nceVertexB' + 'uffer'](_0x1b47c9['instance']['instanceMV' + 'PMatrixBuf' + 'fer']), _0x5fe959['applyIndex' + 'Buffer'](_0x367c62), _0x5fe959['unBind']();
        }
        ['_getPhysic' + 'Mesh']() {
            if (!this['_btTriangl' + 'eMesh']) {
                for (var _0x496508 = _0x10fe89['_bullet'], _0x40b794 = _0x496508['btTriangle' + 'Mesh_creat' + 'e'](), _0x37c0af = _0x33f5ae['_nativeTem' + 'pVector30'], _0x307170 = _0x33f5ae['_nativeTem' + 'pVector31'], _0x2bd15c = _0x33f5ae['_nativeTem' + 'pVector32'], _0x14ef75 = this['_tempVecto' + 'r30'], _0x1e41a9 = this['_tempVecto' + 'r31'], _0x2aba9c = this['_tempVecto' + 'r32'], _0x33cb03 = this['_vertexBuf' + 'fer'], _0x4a8a9c = this['_getPositi' + 'onElement'](_0x33cb03), _0x558aa8 = _0x33cb03['getFloat32' + 'Data'](), _0x4fbfb5 = _0x33cb03['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x743a6 = _0x4a8a9c['_offset'] / 0x4, _0x106e13 = this['_indexBuff' + 'er']['getData'](), _0x108604 = 0x0, _0x50f29a = _0x106e13['length']; _0x108604 < _0x50f29a; _0x108604 += 0x3) {
                    var _0x7bd6b3 = _0x106e13[_0x108604] * _0x4fbfb5 + _0x743a6, _0x1c38e4 = _0x106e13[_0x108604 + 0x1] * _0x4fbfb5 + _0x743a6, _0x108ea9 = _0x106e13[_0x108604 + 0x2] * _0x4fbfb5 + _0x743a6;
                    _0x14ef75['setValue'](_0x558aa8[_0x7bd6b3], _0x558aa8[_0x7bd6b3 + 0x1], _0x558aa8[_0x7bd6b3 + 0x2]), _0x1e41a9['setValue'](_0x558aa8[_0x1c38e4], _0x558aa8[_0x1c38e4 + 0x1], _0x558aa8[_0x1c38e4 + 0x2]), _0x2aba9c['setValue'](_0x558aa8[_0x108ea9], _0x558aa8[_0x108ea9 + 0x1], _0x558aa8[_0x108ea9 + 0x2]), _0x89f66e['_convertTo' + 'BulletVec3'](_0x14ef75, _0x37c0af, !0x0), _0x89f66e['_convertTo' + 'BulletVec3'](_0x1e41a9, _0x307170, !0x0), _0x89f66e['_convertTo' + 'BulletVec3'](_0x2aba9c, _0x2bd15c, !0x0), _0x496508['btTriangle' + 'Mesh_addTr' + 'iangle'](_0x40b794, _0x37c0af, _0x307170, _0x2bd15c, !0x0);
                }
                this['_btTriangl' + 'eMesh'] = _0x40b794;
            }
            return this['_btTriangl' + 'eMesh'];
        }
        ['_uploadVer' + 'ticesData']() {
            var _0x35a9c9 = this['_minVertic' + 'esUpdate'], _0x373fbb = this['_maxVertic' + 'esUpdate'];
            if (-0x1 !== _0x35a9c9 && -0x1 !== _0x373fbb) {
                var _0x6b7b81 = _0x35a9c9;
                this['_vertexBuf' + 'fer']['setData'](this['_vertexBuf' + 'fer']['getUint8Da' + 'ta']()['buffer'], _0x6b7b81, _0x6b7b81, _0x373fbb - _0x35a9c9), this['_minVertic' + 'esUpdate'] = -0x1, this['_maxVertic' + 'esUpdate'] = -0x1;
            }
        }
        ['getSubMesh'](_0x1b24ef) {
            return this['_subMeshes'][_0x1b24ef];
        }
        ['getPositio' + 'ns'](_0x2d9609) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20posit' + 'ions\x20on\x20me' + 'sh,isReada' + 'ble\x20must\x20b' + 'e\x20true.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x2d9609, _0xe3d46['MESH_POSIT' + 'ION0']);
        }
        ['setPositio' + 'ns'](_0x103d24) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setPo' + 'sition()\x20n' + 'eed\x20isRead' + 'able\x20must\x20' + 'be\x20true\x20or' + '\x20use\x20setVe' + 'rtices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x103d24, _0xe3d46['MESH_POSIT' + 'ION0']), this['_needUpdat' + 'eBounds'] = !0x0;
        }
        ['getColors'](_0x142e65) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x142e65, _0xe3d46['MESH_COLOR' + '0']);
        }
        ['setColors'](_0xd3b05f) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setCo' + 'lors()\x20nee' + 'd\x20isReadab' + 'le\x20must\x20be' + '\x20true\x20or\x20u' + 'se\x20setVert' + 'ices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0xd3b05f, _0xe3d46['MESH_COLOR' + '0']);
        }
        ['getUVs'](_0x12eba6, _0x5a3754 = 0x0) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20uvs\x20o' + 'n\x20mesh,isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '.';
            switch (_0x5a3754) {
            case 0x0:
                this['_getVertic' + 'eElementDa' + 'ta'](_0x12eba6, _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                break;
            case 0x1:
                this['_getVertic' + 'eElementDa' + 'ta'](_0x12eba6, _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
                break;
            default:
                throw 'Mesh:Inval' + 'id\x20channel' + '.';
            }
        }
        ['setUVs'](_0x1a67e0, _0x2138c2 = 0x0) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setUV' + 's()\x20need\x20i' + 'sReadable\x20' + 'must\x20be\x20tr' + 'ue\x20or\x20use\x20' + 'setVertice' + 's().';
            switch (_0x2138c2) {
            case 0x0:
                this['_setVertic' + 'eElementDa' + 'ta'](_0x1a67e0, _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']);
                break;
            case 0x1:
                this['_setVertic' + 'eElementDa' + 'ta'](_0x1a67e0, _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1']);
                break;
            default:
                throw 'Mesh:Inval' + 'id\x20channel' + '.';
            }
        }
        ['getNormals'](_0x58343a) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x58343a, _0xe3d46['MESH_NORMA' + 'L0']);
        }
        ['setNormals'](_0x539fc7) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setNo' + 'rmals()\x20ne' + 'ed\x20must\x20be' + '\x20true\x20or\x20u' + 'se\x20setVert' + 'ices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x539fc7, _0xe3d46['MESH_NORMA' + 'L0']);
        }
        ['getTangent' + 's'](_0x5af145) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20color' + 's\x20on\x20mesh,' + 'isReadable' + '\x20must\x20be\x20t' + 'rue.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x5af145, _0xe3d46['MESH_TANGE' + 'NT0']);
        }
        ['setTangent' + 's'](_0x15b594) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setTa' + 'ngents()\x20n' + 'eed\x20isRead' + 'able\x20must\x20' + 'be\x20true\x20or' + '\x20use\x20setVe' + 'rtices().';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x15b594, _0xe3d46['MESH_TANGE' + 'NT0']);
        }
        ['getBoneWei' + 'ghts'](_0x1fc843) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20boneW' + 'eights\x20on\x20' + 'mesh,isRea' + 'dable\x20must' + '\x20be\x20true.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x1fc843, _0xe3d46['MESH_BLEND' + 'WEIGHT0']);
        }
        ['setBoneWei' + 'ghts'](_0x8930e5) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setBo' + 'neWeights(' + ')\x20need\x20isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '\x20or\x20use\x20se' + 'tVertices(' + ').';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x8930e5, _0xe3d46['MESH_BLEND' + 'WEIGHT0']);
        }
        ['getBoneInd' + 'ices'](_0x418ea2) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20get\x20boneI' + 'ndices\x20on\x20' + 'mesh,isRea' + 'dable\x20must' + '\x20be\x20true.';
            this['_getVertic' + 'eElementDa' + 'ta'](_0x418ea2, _0xe3d46['MESH_BLEND' + 'INDICES0']);
        }
        ['setBoneInd' + 'ices'](_0x55f3fb) {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:setBo' + 'neIndices(' + ')\x20need\x20isR' + 'eadable\x20mu' + 'st\x20be\x20true' + '\x20or\x20use\x20se' + 'tVertices(' + ').';
            this['_setVertic' + 'eElementDa' + 'ta'](_0x55f3fb, _0xe3d46['MESH_BLEND' + 'INDICES0']);
        }
        ['markAsUnre' + 'adbale']() {
            this['_uploadVer' + 'ticesData'](), this['_vertexBuf' + 'fer']['markAsUnre' + 'adbale'](), this['_isReadabl' + 'e'] = !0x1;
        }
        ['getVertexD' + 'eclaration']() {
            return this['_vertexBuf' + 'fer']['_vertexDec' + 'laration'];
        }
        ['getVertice' + 's']() {
            if (this['_isReadabl' + 'e'])
                return this['_vertexBuf' + 'fer']['getUint8Da' + 'ta']()['buffer']['slice'](0x0);
            throw 'Mesh:can\x27t' + '\x20get\x20verti' + 'ces\x20on\x20mes' + 'h,isReadab' + 'le\x20must\x20be' + '\x20true.';
        }
        ['setVertice' + 's'](_0x10b695) {
            this['_vertexBuf' + 'fer']['setData'](_0x10b695), this['_needUpdat' + 'eBounds'] = !0x0;
        }
        ['getIndices']() {
            if (this['_isReadabl' + 'e'])
                return this['_indexBuff' + 'er']['getData']()['slice']();
            throw 'Mesh:can\x27t' + '\x20get\x20indic' + 'es\x20on\x20subM' + 'esh,mesh\x27s' + '\x20isReadabl' + 'e\x20must\x20be\x20' + 'true.';
        }
        ['setIndices'](_0x36ac5c) {
            var _0x5ef5e2;
            _0x36ac5c instanceof Uint32Array ? _0x5ef5e2 = _0x341b51['IndexForma' + 't']['UInt32'] : _0x36ac5c instanceof Uint16Array ? _0x5ef5e2 = _0x341b51['IndexForma' + 't']['UInt16'] : _0x36ac5c instanceof Uint8Array && (_0x5ef5e2 = _0x341b51['IndexForma' + 't']['UInt8']);
            var _0x625e16 = this['_indexBuff' + 'er'];
            this['_indexForm' + 'at'] === _0x5ef5e2 && _0x625e16['indexCount'] === _0x36ac5c['length'] || (_0x625e16['destroy'](), this['_indexBuff' + 'er'] = _0x625e16 = new _0x95846f(_0x5ef5e2, _0x36ac5c['length'], _0x33d6e0['LayaGL']['instance']['STATIC_DRA' + 'W'], this['_isReadabl' + 'e'])), _0x625e16['setData'](_0x36ac5c), this['_indexForm' + 'at'] = _0x5ef5e2;
        }
        ['calculateB' + 'ounds']() {
            if (!this['_isReadabl' + 'e'])
                throw 'Mesh:can\x27t' + '\x20calculate' + '\x20bounds\x20on' + '\x20subMesh,m' + 'esh\x27s\x20isRe' + 'adable\x20mus' + 't\x20be\x20true.';
            if (this['_needUpdat' + 'eBounds']) {
                var _0x2e9010 = this['_tempVecto' + 'r30'], _0x780d8 = this['_tempVecto' + 'r31'];
                _0x2e9010['x'] = _0x2e9010['y'] = _0x2e9010['z'] = Number['MAX_VALUE'], _0x780d8['x'] = _0x780d8['y'] = _0x780d8['z'] = -Number['MAX_VALUE'];
                for (var _0x5e3dc5 = this['_vertexBuf' + 'fer'], _0x4a50fb = this['_getPositi' + 'onElement'](_0x5e3dc5), _0x150470 = _0x5e3dc5['getFloat32' + 'Data'](), _0x4b2e50 = _0x5e3dc5['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4, _0x300088 = _0x4a50fb['_offset'] / 0x4, _0x342c8b = 0x0, _0x2fbfd4 = _0x150470['length']; _0x342c8b < _0x2fbfd4; _0x342c8b += _0x4b2e50) {
                    var _0x64d921 = _0x342c8b + _0x300088, _0x3808cb = _0x150470[_0x64d921], _0x35b831 = _0x150470[_0x64d921 + 0x1], _0x4a4dd0 = _0x150470[_0x64d921 + 0x2];
                    _0x2e9010['x'] = Math['min'](_0x2e9010['x'], _0x3808cb), _0x2e9010['y'] = Math['min'](_0x2e9010['y'], _0x35b831), _0x2e9010['z'] = Math['min'](_0x2e9010['z'], _0x4a4dd0), _0x780d8['x'] = Math['max'](_0x780d8['x'], _0x3808cb), _0x780d8['y'] = Math['max'](_0x780d8['y'], _0x35b831), _0x780d8['z'] = Math['max'](_0x780d8['z'], _0x4a4dd0);
                }
                this['_bounds']['setMin'](_0x2e9010), this['_bounds']['setMax'](_0x780d8), this['_needUpdat' + 'eBounds'] = !0x1;
            }
        }
        ['cloneTo'](_0x3b058d) {
            var _0x2c0139 = _0x3b058d, _0x299e57 = this['_vertexBuf' + 'fer'], _0x9e35ec = new _0x5dfaba(_0x299e57['_byteLengt' + 'h'], _0x299e57['bufferUsag' + 'e'], _0x299e57['canRead']);
            _0x9e35ec['vertexDecl' + 'aration'] = _0x299e57['vertexDecl' + 'aration'], _0x9e35ec['setData'](_0x299e57['getUint8Da' + 'ta']()['slice']()['buffer']), _0x2c0139['_vertexBuf' + 'fer'] = _0x9e35ec, _0x2c0139['_vertexCou' + 'nt'] = this['_vertexCou' + 'nt'];
            var _0x358ccd, _0x447de2 = this['_indexBuff' + 'er'], _0x48986f = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], _0x447de2['indexCount'], _0x447de2['bufferUsag' + 'e'], _0x447de2['canRead']);
            _0x48986f['setData'](_0x447de2['getData']()['slice']()), _0x2c0139['_indexBuff' + 'er'] = _0x48986f, _0x2c0139['_setBuffer'](_0x2c0139['_vertexBuf' + 'fer'], _0x48986f), _0x2c0139['_setCPUMem' + 'ory'](this['cpuMemory']), _0x2c0139['_setGPUMem' + 'ory'](this['gpuMemory']);
            var _0x3755d3 = this['_boneNames'], _0x411dde = _0x2c0139['_boneNames'] = [];
            for (_0x358ccd = 0x0; _0x358ccd < _0x3755d3['length']; _0x358ccd++)
                _0x411dde[_0x358ccd] = _0x3755d3[_0x358ccd];
            var _0x38d45b = this['_inverseBi' + 'ndPoses'], _0x4f4b02 = _0x2c0139['_inverseBi' + 'ndPoses'] = [];
            for (_0x358ccd = 0x0; _0x358ccd < _0x38d45b['length']; _0x358ccd++)
                _0x4f4b02[_0x358ccd] = _0x38d45b[_0x358ccd];
            for (_0x2c0139['_bindPoseI' + 'ndices'] = new Uint16Array(this['_bindPoseI' + 'ndices']), _0x358ccd = 0x0; _0x358ccd < this['_skinDataP' + 'athMarks']['length']; _0x358ccd++)
                _0x2c0139['_skinDataP' + 'athMarks'][_0x358ccd] = this['_skinDataP' + 'athMarks'][_0x358ccd]['slice']();
            for (_0x358ccd = 0x0; _0x358ccd < this['subMeshCou' + 'nt']; _0x358ccd++) {
                var _0x27805c = this['_subMeshes'][_0x358ccd], _0x263f4e = _0x27805c['_subIndexB' + 'ufferStart'], _0x27bf1e = _0x27805c['_subIndexB' + 'ufferCount'], _0x2402a8 = _0x27805c['_boneIndic' + 'esList'], _0x53047d = new _0x8e84ef(_0x2c0139);
                _0x53047d['_subIndexB' + 'ufferStart']['length'] = _0x263f4e['length'], _0x53047d['_subIndexB' + 'ufferCount']['length'] = _0x27bf1e['length'], _0x53047d['_boneIndic' + 'esList']['length'] = _0x2402a8['length'];
                for (var _0x41173f = 0x0; _0x41173f < _0x263f4e['length']; _0x41173f++)
                    _0x53047d['_subIndexB' + 'ufferStart'][_0x41173f] = _0x263f4e[_0x41173f];
                for (_0x41173f = 0x0; _0x41173f < _0x27bf1e['length']; _0x41173f++)
                    _0x53047d['_subIndexB' + 'ufferCount'][_0x41173f] = _0x27bf1e[_0x41173f];
                for (_0x41173f = 0x0; _0x41173f < _0x2402a8['length']; _0x41173f++)
                    _0x53047d['_boneIndic' + 'esList'][_0x41173f] = new Uint16Array(_0x2402a8[_0x41173f]);
                _0x53047d['_indexBuff' + 'er'] = _0x48986f, _0x53047d['_indexStar' + 't'] = _0x27805c['_indexStar' + 't'], _0x53047d['_indexCoun' + 't'] = _0x27805c['_indexCoun' + 't'], _0x53047d['_indices'] = new Uint16Array(_0x48986f['getData']()['buffer'], 0x2 * _0x27805c['_indexStar' + 't'], _0x27805c['_indexCoun' + 't']);
                var _0x5b3a43 = _0x2c0139['_vertexBuf' + 'fer'];
                _0x53047d['_vertexBuf' + 'fer'] = _0x5b3a43, _0x2c0139['_subMeshes']['push'](_0x53047d);
            }
            _0x2c0139['_setSubMes' + 'hes'](_0x2c0139['_subMeshes']);
        }
        ['clone']() {
            var _0x2dd1d8 = new _0x33f5ae();
            return this['cloneTo'](_0x2dd1d8), _0x2dd1d8;
        }
    }
    _0x33f5ae['MESH'] = 'MESH';
    class _0x36b75a {
        static ['__init__']() {
        }
        static ['_createMes' + 'h'](_0x172a15, _0x4fdf66, _0x561b1d) {
            var _0x57e5ce = _0x33d6e0['LayaGL']['instance'], _0x283c07 = new _0x33f5ae(), _0x29da21 = new _0x8e84ef(_0x283c07), _0x162d64 = new _0x5dfaba(0x4 * _0x4fdf66['length'], _0x57e5ce['STATIC_DRA' + 'W'], !0x0);
            _0x162d64['vertexDecl' + 'aration'] = _0x172a15, _0x162d64['setData'](_0x4fdf66['buffer']), _0x283c07['_vertexBuf' + 'fer'] = _0x162d64, _0x283c07['_vertexCou' + 'nt'] = _0x162d64['_byteLengt' + 'h'] / _0x172a15['vertexStri' + 'de'];
            var _0x515db5 = new _0x95846f(_0x341b51['IndexForma' + 't']['UInt16'], _0x561b1d['length'], _0x57e5ce['STATIC_DRA' + 'W'], !0x0);
            _0x515db5['setData'](_0x561b1d), _0x283c07['_indexBuff' + 'er'] = _0x515db5, _0x283c07['_setBuffer'](_0x162d64, _0x515db5), _0x29da21['_vertexBuf' + 'fer'] = _0x162d64, _0x29da21['_indexBuff' + 'er'] = _0x515db5, _0x29da21['_setIndexR' + 'ange'](0x0, _0x515db5['indexCount']);
            var _0x3f58c5 = _0x29da21['_subIndexB' + 'ufferStart'], _0x4cda26 = _0x29da21['_subIndexB' + 'ufferCount'], _0x3b8fe8 = _0x29da21['_boneIndic' + 'esList'];
            _0x3f58c5['length'] = 0x1, _0x4cda26['length'] = 0x1, _0x3b8fe8['length'] = 0x1, _0x3f58c5[0x0] = 0x0, _0x4cda26[0x0] = _0x515db5['indexCount'];
            var _0x12a66e = [];
            _0x12a66e['push'](_0x29da21), _0x283c07['_setSubMes' + 'hes'](_0x12a66e);
            var _0x54639d = _0x162d64['_byteLengt' + 'h'] + _0x515db5['_byteLengt' + 'h'];
            return _0x283c07['_setCPUMem' + 'ory'](_0x54639d), _0x283c07['_setGPUMem' + 'ory'](_0x54639d), _0x283c07;
        }
        static ['createBox'](_0xe7e015 = 0x1, _0x3bf458 = 0x1, _0x3f2a8d = 0x1) {
            var _0x25f6df = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x28c6c5 = _0xe7e015 / 0x2, _0x206d1f = _0x3bf458 / 0x2, _0x15324e = _0x3f2a8d / 0x2, _0x1b3314 = new Float32Array([
                    -_0x28c6c5,
                    _0x206d1f,
                    -_0x15324e,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    _0x28c6c5,
                    _0x206d1f,
                    -_0x15324e,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x0,
                    _0x28c6c5,
                    _0x206d1f,
                    _0x15324e,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    0x1,
                    -_0x28c6c5,
                    _0x206d1f,
                    _0x15324e,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    -_0x28c6c5,
                    -_0x206d1f,
                    -_0x15324e,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    _0x28c6c5,
                    -_0x206d1f,
                    -_0x15324e,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x1,
                    _0x28c6c5,
                    -_0x206d1f,
                    _0x15324e,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    0x0,
                    -_0x28c6c5,
                    -_0x206d1f,
                    _0x15324e,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    -_0x28c6c5,
                    _0x206d1f,
                    -_0x15324e,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    -_0x28c6c5,
                    _0x206d1f,
                    _0x15324e,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    -_0x28c6c5,
                    -_0x206d1f,
                    _0x15324e,
                    -0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x28c6c5,
                    -_0x206d1f,
                    -_0x15324e,
                    -0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x28c6c5,
                    _0x206d1f,
                    -_0x15324e,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    _0x28c6c5,
                    _0x206d1f,
                    _0x15324e,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x0,
                    _0x28c6c5,
                    -_0x206d1f,
                    _0x15324e,
                    0x1,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    _0x28c6c5,
                    -_0x206d1f,
                    -_0x15324e,
                    0x1,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    -_0x28c6c5,
                    _0x206d1f,
                    _0x15324e,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x28c6c5,
                    _0x206d1f,
                    _0x15324e,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    _0x28c6c5,
                    -_0x206d1f,
                    _0x15324e,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1,
                    -_0x28c6c5,
                    -_0x206d1f,
                    _0x15324e,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    -_0x28c6c5,
                    _0x206d1f,
                    -_0x15324e,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x0,
                    _0x28c6c5,
                    _0x206d1f,
                    -_0x15324e,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x0,
                    _0x28c6c5,
                    -_0x206d1f,
                    -_0x15324e,
                    0x0,
                    0x0,
                    -0x1,
                    0x0,
                    0x1,
                    -_0x28c6c5,
                    -_0x206d1f,
                    -_0x15324e,
                    0x0,
                    0x0,
                    -0x1,
                    0x1,
                    0x1
                ]), _0x40daaf = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x2,
                    0x3,
                    0x0,
                    0x4,
                    0x7,
                    0x6,
                    0x6,
                    0x5,
                    0x4,
                    0x8,
                    0x9,
                    0xa,
                    0xa,
                    0xb,
                    0x8,
                    0xc,
                    0xf,
                    0xe,
                    0xe,
                    0xd,
                    0xc,
                    0x10,
                    0x11,
                    0x12,
                    0x12,
                    0x13,
                    0x10,
                    0x14,
                    0x17,
                    0x16,
                    0x16,
                    0x15,
                    0x14
                ]);
            return _0x36b75a['_createMes' + 'h'](_0x25f6df, _0x1b3314, _0x40daaf);
        }
        static ['createCaps' + 'ule'](_0x27118b = 0.5, _0xd3f9c = 0x2, _0x3cb9bf = 0x10, _0x5c575f = 0x20) {
            var _0x2d6a96, _0x2be70f, _0x58b326 = (_0x3cb9bf + 0x1) * (_0x5c575f + 0x1) * 0x2 + 0x2 * (_0x5c575f + 0x1), _0x5358d2 = 0x3 * _0x3cb9bf * (_0x5c575f + 0x1) * 0x2 * 0x2 + 0x2 * _0x5c575f * 0x3, _0x21632d = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x43397e = _0x21632d['vertexStri' + 'de'] / 0x4, _0x4781e6 = new Float32Array(_0x58b326 * _0x43397e), _0x4d8e5c = new Uint16Array(_0x5358d2), _0x387120 = Math['PI'] / 0x2 / _0x3cb9bf, _0x35df69 = 0x2 * Math['PI'] / _0x5c575f, _0x36daa9 = _0xd3f9c / 0x2 - _0x27118b, _0x225eae = 0x0, _0xfddeea = 0x0, _0x3f1bbf = 0x0, _0x348bff = 0x0, _0x1f7a71 = 0x0, _0x310eaf = 0x0;
            for (_0x2d6a96 = 0x0; _0x2d6a96 <= _0x3cb9bf; _0x2d6a96++)
                for (_0x2be70f = 0x0; _0x2be70f <= _0x5c575f; _0x2be70f++)
                    _0x225eae = _0x27118b * Math['cos'](_0x2d6a96 * _0x387120) * Math['cos'](_0x2be70f * _0x35df69 + Math['PI']), _0xfddeea = _0x27118b * Math['sin'](_0x2d6a96 * _0x387120), _0x3f1bbf = _0x27118b * Math['cos'](_0x2d6a96 * _0x387120) * Math['sin'](_0x2be70f * _0x35df69 + Math['PI']), _0x4781e6[_0x348bff++] = _0x225eae, _0x4781e6[_0x348bff++] = _0xfddeea + _0x36daa9, _0x4781e6[_0x348bff++] = _0x3f1bbf, _0x4781e6[_0x348bff++] = _0x225eae, _0x4781e6[_0x348bff++] = _0xfddeea, _0x4781e6[_0x348bff++] = _0x3f1bbf, _0x4781e6[_0x348bff++] = 0x1 - _0x2be70f / _0x5c575f, _0x4781e6[_0x348bff++] = (0x1 - _0x2d6a96 / _0x3cb9bf) * (Math['PI'] * _0x27118b / 0x2 / (_0xd3f9c + Math['PI'] * _0x27118b)), _0x2d6a96 < _0x3cb9bf && (_0x4d8e5c[_0x1f7a71++] = _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + (_0x5c575f + 0x1), _0x4d8e5c[_0x1f7a71++] = _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f, _0x4d8e5c[_0x1f7a71++] = _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + 0x1, _0x4d8e5c[_0x1f7a71++] = _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + _0x5c575f, _0x4d8e5c[_0x1f7a71++] = _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f, _0x4d8e5c[_0x1f7a71++] = _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + (_0x5c575f + 0x1));
            for (_0x310eaf += (_0x3cb9bf + 0x1) * (_0x5c575f + 0x1), _0x2d6a96 = 0x0; _0x2d6a96 <= _0x3cb9bf; _0x2d6a96++)
                for (_0x2be70f = 0x0; _0x2be70f <= _0x5c575f; _0x2be70f++)
                    _0x225eae = _0x27118b * Math['cos'](_0x2d6a96 * _0x387120) * Math['cos'](_0x2be70f * _0x35df69 + Math['PI']), _0xfddeea = _0x27118b * Math['sin'](-_0x2d6a96 * _0x387120), _0x3f1bbf = _0x27118b * Math['cos'](_0x2d6a96 * _0x387120) * Math['sin'](_0x2be70f * _0x35df69 + Math['PI']), _0x4781e6[_0x348bff++] = _0x225eae, _0x4781e6[_0x348bff++] = _0xfddeea - _0x36daa9, _0x4781e6[_0x348bff++] = _0x3f1bbf, _0x4781e6[_0x348bff++] = _0x225eae, _0x4781e6[_0x348bff++] = _0xfddeea, _0x4781e6[_0x348bff++] = _0x3f1bbf, _0x4781e6[_0x348bff++] = 0x1 - _0x2be70f / _0x5c575f, _0x4781e6[_0x348bff++] = (_0x2d6a96 / _0x3cb9bf * (Math['PI'] * _0x27118b / 0x2) + (_0xd3f9c + Math['PI'] * _0x27118b / 0x2)) / (_0xd3f9c + Math['PI'] * _0x27118b), _0x2d6a96 < _0x3cb9bf && (_0x4d8e5c[_0x1f7a71++] = _0x310eaf + _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f, _0x4d8e5c[_0x1f7a71++] = _0x310eaf + _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + (_0x5c575f + 0x1), _0x4d8e5c[_0x1f7a71++] = _0x310eaf + _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + 0x1, _0x4d8e5c[_0x1f7a71++] = _0x310eaf + _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f, _0x4d8e5c[_0x1f7a71++] = _0x310eaf + _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + _0x5c575f, _0x4d8e5c[_0x1f7a71++] = _0x310eaf + _0x2d6a96 * (_0x5c575f + 0x1) + _0x2be70f + (_0x5c575f + 0x1));
            for (_0x310eaf += (_0x3cb9bf + 0x1) * (_0x5c575f + 0x1), _0x2be70f = 0x0; _0x2be70f <= _0x5c575f; _0x2be70f++)
                _0x225eae = _0x27118b * Math['cos'](_0x2be70f * _0x35df69 + Math['PI']), _0xfddeea = _0x36daa9, _0x3f1bbf = _0x27118b * Math['sin'](_0x2be70f * _0x35df69 + Math['PI']), _0x4781e6[_0x348bff++] = _0x225eae, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = _0x225eae, _0x4781e6[_0x348bff++] = _0xfddeea, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = -_0xfddeea, _0x4781e6[_0x348bff++] = _0x3f1bbf, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = _0x3f1bbf, _0x4781e6[_0x348bff++] = _0x225eae, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = _0x225eae, _0x4781e6[_0x348bff++] = 0x0, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = 0x0, _0x4781e6[_0x348bff++] = _0x3f1bbf, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = _0x3f1bbf, _0x4781e6[_0x348bff++] = 0x1 - 0x1 * _0x2be70f / _0x5c575f, _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = 0x1 - 0x1 * _0x2be70f / _0x5c575f, _0x4781e6[_0x348bff++] = Math['PI'] * _0x27118b / 0x2 / (_0xd3f9c + Math['PI'] * _0x27118b), _0x4781e6[_0x348bff + 0x8 * (_0x5c575f + 0x1) - 0x1] = (Math['PI'] * _0x27118b / 0x2 + _0xd3f9c) / (_0xd3f9c + Math['PI'] * _0x27118b);
            for (_0x2be70f = 0x0; _0x2be70f < _0x5c575f; _0x2be70f++)
                _0x4d8e5c[_0x1f7a71++] = _0x2be70f + _0x310eaf + (_0x5c575f + 0x1), _0x4d8e5c[_0x1f7a71++] = _0x2be70f + _0x310eaf + 0x1, _0x4d8e5c[_0x1f7a71++] = _0x2be70f + _0x310eaf, _0x4d8e5c[_0x1f7a71++] = _0x2be70f + _0x310eaf + (_0x5c575f + 0x1), _0x4d8e5c[_0x1f7a71++] = _0x2be70f + _0x310eaf + (_0x5c575f + 0x1) + 0x1, _0x4d8e5c[_0x1f7a71++] = _0x2be70f + _0x310eaf + 0x1;
            return _0x310eaf += 0x2 * (_0x5c575f + 0x1), _0x36b75a['_createMes' + 'h'](_0x21632d, _0x4781e6, _0x4d8e5c);
        }
        static ['createCone'](_0x51b2e6 = 0.5, _0x31dd0c = 0x1, _0x58f353 = 0x20) {
            for (var _0x5bc06a, _0x2b1c71 = _0x58f353 + 0x1 + 0x1 + 0x2 * (_0x58f353 + 0x1), _0x4db625 = 0x6 * _0x58f353 + 0x3 * _0x58f353, _0x15193c = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x3efd30 = _0x15193c['vertexStri' + 'de'] / 0x4, _0x12f298 = new Float32Array(_0x2b1c71 * _0x3efd30), _0x4ccf4b = new Uint16Array(_0x4db625), _0x3e74c5 = 0x2 * Math['PI'] / _0x58f353, _0x3f45d0 = _0x31dd0c / 0x2, _0x488fd1 = 0x0, _0x128571 = 0x0, _0x333513 = 0x0, _0x411aad = 0x0, _0x5c4fc1 = 0x0, _0x23360e = new _0x4795b3(), _0x334d1c = new _0x4795b3(0x0, -0x1, 0x0), _0xf21aed = new _0x4795b3(0x0, _0x3f45d0, 0x0), _0x33e6a0 = new _0x4795b3(), _0x41760e = new _0x4795b3(), _0x4ed317 = new _0x5958af(), _0x4c2a22 = new _0x4795b3(), _0x5e0d0b = 0x0, _0x2c8907 = 0x0, _0x41853a = 0x0; _0x41853a <= _0x58f353; _0x41853a++)
                _0x488fd1 = _0x41853a * _0x3e74c5, _0x333513 = Math['cos'](_0x488fd1 + Math['PI']) * _0x51b2e6, _0x411aad = _0x3f45d0, _0x5c4fc1 = Math['sin'](_0x488fd1 + Math['PI']) * _0x51b2e6, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = _0x333513, _0x12f298[_0x5e0d0b++] = _0x411aad, _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = -_0x411aad, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = _0x5c4fc1, _0x23360e['x'] = _0x333513, _0x23360e['y'] = 0x0, _0x23360e['z'] = _0x5c4fc1, _0x33e6a0['x'] = _0x333513, _0x33e6a0['y'] = -_0x411aad, _0x33e6a0['z'] = _0x5c4fc1, _0x4795b3['subtract'](_0x33e6a0, _0xf21aed, _0x41760e), _0x4795b3['normalize'](_0x41760e, _0x41760e), _0x5bc06a = Math['acos'](_0x4795b3['dot'](_0x334d1c, _0x41760e)), _0x4795b3['cross'](_0x334d1c, _0x41760e, _0x4c2a22), _0x4795b3['normalize'](_0x4c2a22, _0x4c2a22), _0x5958af['createFrom' + 'AxisAngle'](_0x4c2a22, _0x5bc06a, _0x4ed317), _0x4795b3['normalize'](_0x23360e, _0x23360e), _0x4795b3['transformQ' + 'uat'](_0x23360e, _0x4ed317, _0x23360e), _0x4795b3['normalize'](_0x23360e, _0x23360e), _0x12f298[_0x5e0d0b++] = _0x23360e['x'], _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = _0x23360e['x'], _0x12f298[_0x5e0d0b++] = _0x23360e['y'], _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = _0x23360e['y'], _0x12f298[_0x5e0d0b++] = _0x23360e['z'], _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = _0x23360e['z'], _0x12f298[_0x5e0d0b++] = 0x1 - 0x1 * _0x41853a / _0x58f353, _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = 0x1 - 0x1 * _0x41853a / _0x58f353, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b + 0x8 * (_0x58f353 + 0x1) - 0x1] = 0x1;
            _0x5e0d0b += 0x8 * (_0x58f353 + 0x1);
            for (var _0x390ddf = 0x0; _0x390ddf < _0x58f353; _0x390ddf++)
                _0x4ccf4b[_0x2c8907++] = _0x390ddf + _0x128571 + (_0x58f353 + 0x1), _0x4ccf4b[_0x2c8907++] = _0x390ddf + _0x128571 + 0x1, _0x4ccf4b[_0x2c8907++] = _0x390ddf + _0x128571, _0x4ccf4b[_0x2c8907++] = _0x390ddf + _0x128571 + (_0x58f353 + 0x1), _0x4ccf4b[_0x2c8907++] = _0x390ddf + _0x128571 + (_0x58f353 + 0x1) + 0x1, _0x4ccf4b[_0x2c8907++] = _0x390ddf + _0x128571 + 0x1;
            _0x128571 += 0x2 * (_0x58f353 + 0x1);
            for (var _0x2b927d = 0x0; _0x2b927d <= _0x58f353; _0x2b927d++)
                0x0 === _0x2b927d && (_0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b++] = -_0x3f45d0, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b++] = -0x1, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b++] = 0.5, _0x12f298[_0x5e0d0b++] = 0.5), _0x488fd1 = _0x2b927d * _0x3e74c5, _0x333513 = Math['cos'](_0x488fd1 + Math['PI']) * _0x51b2e6, _0x411aad = -_0x3f45d0, _0x5c4fc1 = Math['sin'](_0x488fd1 + Math['PI']) * _0x51b2e6, _0x12f298[_0x5e0d0b++] = _0x333513, _0x12f298[_0x5e0d0b++] = _0x411aad, _0x12f298[_0x5e0d0b++] = _0x5c4fc1, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b++] = -0x1, _0x12f298[_0x5e0d0b++] = 0x0, _0x12f298[_0x5e0d0b++] = 0.5 + 0.5 * Math['cos'](_0x488fd1), _0x12f298[_0x5e0d0b++] = 0.5 + 0.5 * Math['sin'](_0x488fd1);
            for (var _0x15f965 = 0x0; _0x15f965 < _0x58f353; _0x15f965++)
                _0x4ccf4b[_0x2c8907++] = 0x0 + _0x128571, _0x4ccf4b[_0x2c8907++] = _0x15f965 + 0x2 + _0x128571, _0x4ccf4b[_0x2c8907++] = _0x15f965 + 0x1 + _0x128571;
            return _0x128571 += _0x58f353 + 0x1 + 0x1, _0x36b75a['_createMes' + 'h'](_0x15193c, _0x12f298, _0x4ccf4b);
        }
        static ['createCyli' + 'nder'](_0x2e537e = 0.5, _0x24055e = 0x2, _0x4c1856 = 0x20) {
            for (var _0x10b68b = _0x4c1856 + 0x1 + 0x1 + 0x2 * (_0x4c1856 + 0x1) + (_0x4c1856 + 0x1 + 0x1), _0x448b51 = 0x3 * _0x4c1856 + 0x6 * _0x4c1856 + 0x3 * _0x4c1856, _0x5429f5 = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x42e7c0 = _0x5429f5['vertexStri' + 'de'] / 0x4, _0x36d71a = new Float32Array(_0x10b68b * _0x42e7c0), _0x2df00b = new Uint16Array(_0x448b51), _0x4c427f = 0x2 * Math['PI'] / _0x4c1856, _0x4ff710 = _0x24055e / 0x2, _0x14ed7a = 0x0, _0x319ca6 = 0x0, _0x3dfa39 = 0x0, _0x205914 = 0x0, _0x21e4ef = 0x0, _0x1bc044 = 0x0, _0x724ec7 = 0x0, _0x56b145 = 0x0; _0x56b145 <= _0x4c1856; _0x56b145++)
                0x0 === _0x56b145 && (_0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = _0x4ff710, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0x1, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0.5, _0x36d71a[_0x1bc044++] = 0.5), _0x14ed7a = _0x56b145 * _0x4c427f, _0x3dfa39 = Math['cos'](_0x14ed7a) * _0x2e537e, _0x205914 = _0x4ff710, _0x21e4ef = Math['sin'](_0x14ed7a) * _0x2e537e, _0x36d71a[_0x1bc044++] = _0x3dfa39, _0x36d71a[_0x1bc044++] = _0x205914, _0x36d71a[_0x1bc044++] = _0x21e4ef, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0x1, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0.5 + 0.5 * Math['cos'](_0x14ed7a), _0x36d71a[_0x1bc044++] = 0.5 + 0.5 * Math['sin'](_0x14ed7a);
            for (var _0x46d1b5 = 0x0; _0x46d1b5 < _0x4c1856; _0x46d1b5++)
                _0x2df00b[_0x724ec7++] = 0x0, _0x2df00b[_0x724ec7++] = _0x46d1b5 + 0x1, _0x2df00b[_0x724ec7++] = _0x46d1b5 + 0x2;
            _0x319ca6 += _0x4c1856 + 0x1 + 0x1;
            for (var _0x860160 = 0x0; _0x860160 <= _0x4c1856; _0x860160++)
                _0x14ed7a = _0x860160 * _0x4c427f, _0x3dfa39 = Math['cos'](_0x14ed7a + Math['PI']) * _0x2e537e, _0x205914 = _0x4ff710, _0x21e4ef = Math['sin'](_0x14ed7a + Math['PI']) * _0x2e537e, _0x36d71a[_0x1bc044++] = _0x3dfa39, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = _0x3dfa39, _0x36d71a[_0x1bc044++] = _0x205914, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = -_0x205914, _0x36d71a[_0x1bc044++] = _0x21e4ef, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = _0x21e4ef, _0x36d71a[_0x1bc044++] = _0x3dfa39, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = _0x3dfa39, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = 0x0, _0x36d71a[_0x1bc044++] = _0x21e4ef, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = _0x21e4ef, _0x36d71a[_0x1bc044++] = 0x1 - 0x1 * _0x860160 / _0x4c1856, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = 0x1 - 0x1 * _0x860160 / _0x4c1856, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044 + 0x8 * (_0x4c1856 + 0x1) - 0x1] = 0x1;
            _0x1bc044 += 0x8 * (_0x4c1856 + 0x1);
            for (var _0x424d3d = 0x0; _0x424d3d < _0x4c1856; _0x424d3d++)
                _0x2df00b[_0x724ec7++] = _0x424d3d + _0x319ca6 + (_0x4c1856 + 0x1), _0x2df00b[_0x724ec7++] = _0x424d3d + _0x319ca6 + 0x1, _0x2df00b[_0x724ec7++] = _0x424d3d + _0x319ca6, _0x2df00b[_0x724ec7++] = _0x424d3d + _0x319ca6 + (_0x4c1856 + 0x1), _0x2df00b[_0x724ec7++] = _0x424d3d + _0x319ca6 + (_0x4c1856 + 0x1) + 0x1, _0x2df00b[_0x724ec7++] = _0x424d3d + _0x319ca6 + 0x1;
            _0x319ca6 += 0x2 * (_0x4c1856 + 0x1);
            for (var _0x5f3167 = 0x0; _0x5f3167 <= _0x4c1856; _0x5f3167++)
                0x0 === _0x5f3167 && (_0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = -_0x4ff710, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = -0x1, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0.5, _0x36d71a[_0x1bc044++] = 0.5), _0x14ed7a = _0x5f3167 * _0x4c427f, _0x3dfa39 = Math['cos'](_0x14ed7a + Math['PI']) * _0x2e537e, _0x205914 = -_0x4ff710, _0x21e4ef = Math['sin'](_0x14ed7a + Math['PI']) * _0x2e537e, _0x36d71a[_0x1bc044++] = _0x3dfa39, _0x36d71a[_0x1bc044++] = _0x205914, _0x36d71a[_0x1bc044++] = _0x21e4ef, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = -0x1, _0x36d71a[_0x1bc044++] = 0x0, _0x36d71a[_0x1bc044++] = 0.5 + 0.5 * Math['cos'](_0x14ed7a), _0x36d71a[_0x1bc044++] = 0.5 + 0.5 * Math['sin'](_0x14ed7a);
            for (var _0x332a9e = 0x0; _0x332a9e < _0x4c1856; _0x332a9e++)
                _0x2df00b[_0x724ec7++] = 0x0 + _0x319ca6, _0x2df00b[_0x724ec7++] = _0x332a9e + 0x2 + _0x319ca6, _0x2df00b[_0x724ec7++] = _0x332a9e + 0x1 + _0x319ca6;
            return _0x319ca6 += _0x4c1856 + 0x1 + 0x1, _0x36b75a['_createMes' + 'h'](_0x5429f5, _0x36d71a, _0x2df00b);
        }
        static ['createPlan' + 'e'](_0x22639f = 0xa, _0x1591d8 = 0xa, _0xcd6c15 = 0xa, _0x159574 = 0xa) {
            for (var _0x2e6f7d = (_0xcd6c15 + 0x1) * (_0x159574 + 0x1), _0x5e9c3d = new Uint16Array(_0xcd6c15 * _0x159574 * 0x2 * 0x3), _0x25eacf = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0xd5642c = _0x25eacf['vertexStri' + 'de'] / 0x4, _0x365ca6 = new Float32Array(_0x2e6f7d * _0xd5642c), _0xec6420 = _0x22639f / 0x2, _0x3e0ed4 = _0x1591d8 / 0x2, _0x103114 = _0x22639f / _0xcd6c15, _0x33e650 = _0x1591d8 / _0x159574, _0x412c25 = 0x0, _0x2daec4 = 0x0; _0x2daec4 <= _0x159574; _0x2daec4++)
                for (var _0x1048e7 = 0x0; _0x1048e7 <= _0xcd6c15; _0x1048e7++)
                    _0x365ca6[_0x412c25++] = _0x1048e7 * _0x103114 - _0xec6420, _0x365ca6[_0x412c25++] = 0x0, _0x365ca6[_0x412c25++] = _0x2daec4 * _0x33e650 - _0x3e0ed4, _0x365ca6[_0x412c25++] = 0x0, _0x365ca6[_0x412c25++] = 0x1, _0x365ca6[_0x412c25++] = 0x0, _0x365ca6[_0x412c25++] = 0x1 * _0x1048e7 / _0xcd6c15, _0x365ca6[_0x412c25++] = 0x1 * _0x2daec4 / _0x159574;
            var _0xcb3f86 = 0x0;
            for (_0x2daec4 = 0x0; _0x2daec4 < _0x159574; _0x2daec4++)
                for (_0x1048e7 = 0x0; _0x1048e7 < _0xcd6c15; _0x1048e7++)
                    _0x5e9c3d[_0xcb3f86++] = (_0x2daec4 + 0x1) * (_0xcd6c15 + 0x1) + _0x1048e7, _0x5e9c3d[_0xcb3f86++] = _0x2daec4 * (_0xcd6c15 + 0x1) + _0x1048e7, _0x5e9c3d[_0xcb3f86++] = (_0x2daec4 + 0x1) * (_0xcd6c15 + 0x1) + _0x1048e7 + 0x1, _0x5e9c3d[_0xcb3f86++] = _0x2daec4 * (_0xcd6c15 + 0x1) + _0x1048e7, _0x5e9c3d[_0xcb3f86++] = _0x2daec4 * (_0xcd6c15 + 0x1) + _0x1048e7 + 0x1, _0x5e9c3d[_0xcb3f86++] = (_0x2daec4 + 0x1) * (_0xcd6c15 + 0x1) + _0x1048e7 + 0x1;
            return _0x36b75a['_createMes' + 'h'](_0x25eacf, _0x365ca6, _0x5e9c3d);
        }
        static ['createQuad'](_0x4368ad = 0x1, _0x18011e = 0x1) {
            var _0x18495c = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x94c37a = _0x4368ad / 0x2, _0x28ccdc = _0x18011e / 0x2, _0x11c695 = new Float32Array([
                    -_0x94c37a,
                    _0x28ccdc,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x0,
                    _0x94c37a,
                    _0x28ccdc,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x0,
                    -_0x94c37a,
                    -_0x28ccdc,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x0,
                    0x1,
                    _0x94c37a,
                    -_0x28ccdc,
                    0x0,
                    0x0,
                    0x0,
                    0x1,
                    0x1,
                    0x1
                ]), _0x470e24 = new Uint16Array([
                    0x0,
                    0x1,
                    0x2,
                    0x3,
                    0x2,
                    0x1
                ]);
            return _0x36b75a['_createMes' + 'h'](_0x18495c, _0x11c695, _0x470e24);
        }
        static ['createSphe' + 're'](_0x312f19 = 0.5, _0x259c5d = 0x20, _0x2b8717 = 0x20) {
            var _0x5160f9 = (_0x259c5d + 0x1) * (_0x2b8717 + 0x1), _0x4e77e2 = 0x3 * _0x259c5d * (_0x2b8717 + 0x1) * 0x2, _0x331ede = new Uint16Array(_0x4e77e2), _0x3fe30b = _0xe3d46['getVertexD' + 'eclaration']('POSITION,N' + 'ORMAL,UV'), _0x82ab3 = _0x3fe30b['vertexStri' + 'de'] / 0x4, _0x2206bb = new Float32Array(_0x5160f9 * _0x82ab3), _0x17b182 = Math['PI'] / _0x259c5d, _0x271585 = 0x2 * Math['PI'] / _0x2b8717, _0x56c8bf = 0x0;
            _0x5160f9 = 0x0, _0x4e77e2 = 0x0;
            for (var _0x43bd9f = 0x0; _0x43bd9f < _0x259c5d + 0x1; _0x43bd9f++)
                for (var _0x198cbc = Math['sin'](_0x43bd9f * _0x17b182), _0x24792e = Math['cos'](_0x43bd9f * _0x17b182), _0x51a67d = 0x0; _0x51a67d < _0x2b8717 + 0x1; _0x51a67d++) {
                    var _0x578a78 = _0x198cbc * Math['sin'](_0x51a67d * _0x271585 + 0x1 * Math['PI'] / 0x2), _0x3920fd = _0x198cbc * Math['cos'](_0x51a67d * _0x271585 + 0x1 * Math['PI'] / 0x2);
                    _0x2206bb[_0x5160f9 + 0x0] = _0x578a78 * _0x312f19, _0x2206bb[_0x5160f9 + 0x1] = _0x24792e * _0x312f19, _0x2206bb[_0x5160f9 + 0x2] = _0x3920fd * _0x312f19, _0x2206bb[_0x5160f9 + 0x3] = _0x578a78, _0x2206bb[_0x5160f9 + 0x4] = _0x24792e, _0x2206bb[_0x5160f9 + 0x5] = _0x3920fd, _0x2206bb[_0x5160f9 + 0x6] = _0x51a67d / _0x2b8717, _0x2206bb[_0x5160f9 + 0x7] = _0x43bd9f / _0x259c5d, _0x5160f9 += _0x82ab3, _0x43bd9f != _0x259c5d - 0x1 && (_0x331ede[_0x4e77e2++] = _0x56c8bf + (_0x2b8717 + 0x1), _0x331ede[_0x4e77e2++] = _0x56c8bf, _0x331ede[_0x4e77e2++] = _0x56c8bf + 0x1, _0x331ede[_0x4e77e2++] = _0x56c8bf + _0x2b8717, _0x331ede[_0x4e77e2++] = _0x56c8bf, _0x331ede[_0x4e77e2++] = _0x56c8bf + (_0x2b8717 + 0x1), _0x56c8bf++);
                }
            return _0x36b75a['_createMes' + 'h'](_0x3fe30b, _0x2206bb, _0x331ede);
        }
    }
    class _0x4b77f2 extends _0x33d6e0['BaseTextur' + 'e'] {
        constructor(_0x1be408, _0x39ebe6 = _0x33d6e0['TextureFor' + 'mat']['R8G8B8'], _0x30d96f = !0x1) {
            super(_0x39ebe6, _0x30d96f), this['_glTexture' + 'Type'] = _0x33d6e0['LayaGL']['instance']['TEXTURE_CU' + 'BE_MAP'], this['_width'] = _0x1be408, this['_height'] = _0x1be408;
            var _0x2ce31e = _0x33d6e0['LayaGL']['instance'];
            if (this['_setWarpMo' + 'de'](_0x2ce31e['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x2ce31e['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_setAnisot' + 'ropy'](this['_anisoLeve' + 'l']), this['_mipmap']) {
                this['_mipmapCou' + 'nt'] = Math['ceil'](Math['log2'](_0x1be408));
                for (var _0x13aff6 = 0x0; _0x13aff6 < this['_mipmapCou' + 'nt']; _0x13aff6++)
                    this['_setPixels']([], _0x13aff6, Math['max'](_0x1be408 >> _0x13aff6, 0x1), Math['max'](_0x1be408 >> _0x13aff6, 0x1));
                this['_setGPUMem' + 'ory'](_0x1be408 * _0x1be408 * 0x4 * (0x1 + 0x1 / 0x3) * 0x6);
            } else
                this['_mipmapCou' + 'nt'] = 0x1, this['_setGPUMem' + 'ory'](_0x1be408 * _0x1be408 * 0x4 * 0x6);
        }
        static ['__init__']() {
            var _0xa25e1d = new Uint8Array(0x3);
            _0xa25e1d[0x0] = 0x80, _0xa25e1d[0x1] = 0x80, _0xa25e1d[0x2] = 0x80, _0x4b77f2['grayTextur' + 'e'] = new _0x4b77f2(0x1, _0x33d6e0['TextureFor' + 'mat']['R8G8B8'], !0x1), _0x4b77f2['grayTextur' + 'e']['setSixSide' + 'Pixels']([
                _0xa25e1d,
                _0xa25e1d,
                _0xa25e1d,
                _0xa25e1d,
                _0xa25e1d,
                _0xa25e1d
            ]), _0x4b77f2['grayTextur' + 'e']['lock'] = !0x0;
        }
        static ['_parse'](_0xba1c49, _0x3c6fc3 = null, _0x6f3eec = null) {
            var _0x9743a8 = _0x6f3eec ? new _0x4b77f2(0x0, _0x6f3eec[0x0], _0x6f3eec[0x1]) : new _0x4b77f2(0x0);
            return _0x9743a8['setSixSide' + 'ImageSourc' + 'es'](_0xba1c49), _0x9743a8;
        }
        static ['load'](_0x56e4eb, _0x400e8f) {
            _0x33d6e0['ILaya']['loader']['create'](_0x56e4eb, _0x400e8f, null, _0x4b77f2['TEXTURECUB' + 'E']);
        }
        get ['defaulteTe' + 'xture']() {
            return _0x4b77f2['grayTextur' + 'e'];
        }
        ['_setPixels'](_0x1b8563, _0x357f3f, _0x4810b6, _0x1bfb34) {
            var _0x351608 = _0x33d6e0['LayaGL']['instance'], _0x348a58 = this['_getGLForm' + 'at']();
            _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x351608, this['_glTexture' + 'Type'], this['_glTexture']), this['format'] === _0x33d6e0['TextureFor' + 'mat']['R8G8B8'] ? (_0x351608['pixelStore' + 'i'](_0x351608['UNPACK_ALI' + 'GNMENT'], 0x1), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x0]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x1]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x2]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x3]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x4]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x5]), _0x351608['pixelStore' + 'i'](_0x351608['UNPACK_ALI' + 'GNMENT'], 0x4)) : (_0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x0]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x1]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x2]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x3]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x4]), _0x351608['texImage2D'](_0x351608['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], _0x357f3f, _0x348a58, _0x4810b6, _0x1bfb34, 0x0, _0x348a58, _0x351608['UNSIGNED_B' + 'YTE'], _0x1b8563[0x5]));
        }
        ['setSixSide' + 'ImageSourc' + 'es'](_0x1cef81, _0x1ee874 = !0x1) {
            for (var _0x586ee6, _0x382dac, _0x10ff99 = 0x0; _0x10ff99 < 0x6; _0x10ff99++) {
                var _0x144c72 = _0x1cef81[_0x10ff99];
                if (!_0x144c72)
                    return void console['log']('TextureCub' + 'e:\x20image\x20S' + 'ource\x20can\x27' + 't\x20be\x20null.');
                var _0x4a0fb4 = _0x144c72['width'], _0x3f20cd = _0x144c72['height'];
                if (_0x10ff99 > 0x0 && _0x586ee6 !== _0x4a0fb4)
                    return void console['log']('TextureCub' + 'e:\x20each\x20si' + 'de\x20image\x27s' + '\x20width\x20and' + '\x20height\x20mu' + 'st\x20same.');
                if ((_0x586ee6 = _0x4a0fb4) !== (_0x382dac = _0x3f20cd))
                    return void console['log']('TextureCub' + 'e:\x20each\x20si' + 'de\x20image\x27s' + '\x20width\x20and' + '\x20height\x20mu' + 'st\x20same.');
            }
            this['_width'] = _0x586ee6, this['_height'] = _0x382dac;
            var _0x3e480e = _0x33d6e0['LayaGL']['instance'];
            _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x3e480e, this['_glTexture' + 'Type'], this['_glTexture']);
            var _0x429bd5 = this['_getGLForm' + 'at']();
            if (_0x33d6e0['Render']['isConchApp']) {
                if (0x1 == _0x1ee874) {
                    for (var _0x2d2e13 = 0x0; _0x2d2e13 < 0x6; _0x2d2e13++)
                        _0x1cef81[_0x2d2e13]['setPremult' + 'iplyAlpha'](_0x1ee874);
                }
                _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], 0x0, _0x3e480e['RGBA'], _0x3e480e['RGBA'], _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x0]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], 0x0, _0x3e480e['RGBA'], _0x3e480e['RGBA'], _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x1]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], 0x0, _0x3e480e['RGBA'], _0x3e480e['RGBA'], _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x2]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], 0x0, _0x3e480e['RGBA'], _0x3e480e['RGBA'], _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x3]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], 0x0, _0x3e480e['RGBA'], _0x3e480e['RGBA'], _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x4]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], 0x0, _0x3e480e['RGBA'], _0x3e480e['RGBA'], _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x5]);
            } else
                _0x1ee874 && _0x3e480e['pixelStore' + 'i'](_0x3e480e['UNPACK_PRE' + 'MULTIPLY_A' + 'LPHA_WEBGL'], !0x0), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Z'], 0x0, _0x429bd5, _0x429bd5, _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x0]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Z'], 0x0, _0x429bd5, _0x429bd5, _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x1]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_X'], 0x0, _0x429bd5, _0x429bd5, _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x2]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_X'], 0x0, _0x429bd5, _0x429bd5, _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x3]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_POS' + 'ITIVE_Y'], 0x0, _0x429bd5, _0x429bd5, _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x4]), _0x3e480e['texImage2D'](_0x3e480e['TEXTURE_CU' + 'BE_MAP_NEG' + 'ATIVE_Y'], 0x0, _0x429bd5, _0x429bd5, _0x3e480e['UNSIGNED_B' + 'YTE'], _0x1cef81[0x5]), _0x1ee874 && _0x3e480e['pixelStore' + 'i'](_0x3e480e['UNPACK_PRE' + 'MULTIPLY_A' + 'LPHA_WEBGL'], !0x1);
            this['_mipmap'] && this['_isPot'](_0x586ee6) && this['_isPot'](_0x382dac) ? (_0x3e480e['generateMi' + 'pmap'](this['_glTexture' + 'Type']), this['_setGPUMem' + 'ory'](_0x586ee6 * _0x382dac * 0x4 * (0x1 + 0x1 / 0x3) * 0x6)) : this['_setGPUMem' + 'ory'](_0x586ee6 * _0x382dac * 0x4 * 0x6), this['_setWarpMo' + 'de'](_0x3e480e['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x3e480e['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']), this['_setFilter' + 'Mode'](this['_filterMod' + 'e']), this['_readyed'] = !0x0, this['_activeRes' + 'ource']();
        }
        ['setSixSide' + 'Pixels'](_0x3fda38, _0x1230e9 = 0x0) {
            if (!_0x3fda38)
                throw new Error('TextureCub' + 'e:pixels\x20c' + 'an\x27t\x20be\x20nu' + 'll.');
            var _0x34b181 = Math['max'](this['_width'] >> _0x1230e9, 0x1), _0x5b88cb = Math['max'](this['_height'] >> _0x1230e9, 0x1), _0x3efd03 = _0x34b181 * _0x5b88cb * this['_getFormat' + 'ByteCount']();
            if (_0x3fda38[0x0]['length'] < _0x3efd03)
                throw 'TextureCub' + 'e:pixels\x20l' + 'ength\x20shou' + 'ld\x20at\x20leas' + 't\x20' + _0x3efd03 + '.';
            if (this['_setPixels'](_0x3fda38, _0x1230e9, _0x34b181, _0x5b88cb), 0x0 === _0x1230e9) {
                var _0x1ba0ab = _0x33d6e0['LayaGL']['instance'];
                this['_setWarpMo' + 'de'](_0x1ba0ab['TEXTURE_WR' + 'AP_S'], this['_wrapModeU']), this['_setWarpMo' + 'de'](_0x1ba0ab['TEXTURE_WR' + 'AP_T'], this['_wrapModeV']);
            }
            this['_readyed'] = !0x0, this['_activeRes' + 'ource']();
        }
        ['_recoverRe' + 'source']() {
        }
    }
    _0x4b77f2['TEXTURECUB' + 'E'] = 'TEXTURECUB' + 'E';
    var _0x1afde5 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_MainTe' + 'x;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x0d\x0a\x09g' + 'l_FragColo' + 'r\x20=\x20textur' + 'e2D(u_Main' + 'Tex,\x20v_Tex' + 'coord0);\x0d\x0a' + '}\x0d\x0a\x0d\x0a', _0x108812 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'OffsetScal' + 'e;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x09\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(u' + '_OffsetSca' + 'le.x*2.0-1' + '.0+(a_Posi' + 'tionTexcoo' + 'rd.x+1.0)*' + 'u_OffsetSc' + 'ale.z,(1.0' + '-((u_Offse' + 'tScale.y*2' + '.0-1.0+(-a' + '_PositionT' + 'excoord.y+' + '1.0)*u_Off' + 'setScale.w' + ')+1.0)/2.0' + ')*2.0-1.0,' + '\x200.0,\x201.0)' + ';\x09\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x440793 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20COLOR\x0d\x0a\x09v' + 'arying\x20vec' + '4\x20v_Color;' + '\x0d\x0a#endif\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0a\x0d\x0a#' + 'ifdef\x20MAIN' + 'TEXTURE\x0d\x0a\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'AlbedoText' + 'ure;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aunif' + 'orm\x20vec4\x20u' + '_AlbedoCol' + 'or;\x0d\x0a\x0d\x0a#if' + 'def\x20FOG\x0d\x0a\x09' + 'uniform\x20fl' + 'oat\x20u_FogS' + 'tart;\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogRan' + 'ge;\x0d\x0a\x09#ifd' + 'ef\x20ADDTIVE' + 'FOG\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09unifo' + 'rm\x20vec3\x20u_' + 'FogColor;\x0d' + '\x0a\x09#endif\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x09vec' + '4\x20color\x20=\x20' + '\x202.0\x20*\x20u_A' + 'lbedoColor' + ';\x0d\x0a\x09#ifdef' + '\x20COLOR\x0d\x0a\x09\x09' + 'color\x20*=\x20v' + '_Color;\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20MAIN' + 'TEXTURE\x0d\x0a\x09' + '\x09color\x20*=\x20' + 'texture2D(' + 'u_AlbedoTe' + 'xture,\x20v_T' + 'excoord0);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09gl_Fr' + 'agColor\x20=\x20' + 'color;\x0d\x0a\x09\x0d' + '\x0a\x09#ifdef\x20F' + 'OG\x0d\x0a\x09\x09floa' + 't\x20lerpFact' + '\x20=\x20clamp((' + '1.0\x20/\x20gl_F' + 'ragCoord.w' + '\x20-\x20u_FogSt' + 'art)\x20/\x20u_F' + 'ogRange,\x200' + '.0,\x201.0);\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ADDTIVEFOG' + '\x0d\x0a\x09\x09\x09gl_Fr' + 'agColor.rg' + 'b\x20=\x20mix(gl' + '_FragColor' + '.rgb,\x20vec3' + '(0.0),\x20ler' + 'pFact);\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09gl_FragCo' + 'lor.rgb\x20=\x20' + 'mix(gl_Fra' + 'gColor.rgb' + ',\x20u_FogCol' + 'or,\x20lerpFa' + 'ct);\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09#en' + 'dif\x0d\x0a}\x0d\x0a\x0d\x0a', _0x2ad512 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Color;' + '\x0d\x0aattribut' + 'e\x20vec2\x20a_T' + 'excoord0;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09attri' + 'bute\x20mat4\x20' + 'a_MvpMatri' + 'x;\x0d\x0a#else\x0d' + '\x0a\x09uniform\x20' + 'mat4\x20u_Mvp' + 'Matrix;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20COLO' + 'R\x0d\x0a\x09varyin' + 'g\x20vec4\x20v_C' + 'olor;\x0d\x0a#en' + 'dif\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20TILINGOFF' + 'SET\x0d\x0a\x09unif' + 'orm\x20vec4\x20u' + '_TilingOff' + 'set;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20BONE\x0d\x0a\x09' + 'const\x20int\x20' + 'c_MaxBoneC' + 'ount\x20=\x2024;' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'BoneIndice' + 's;\x0d\x0a\x09attri' + 'bute\x20vec4\x20' + 'a_BoneWeig' + 'hts;\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_Bones[c_' + 'MaxBoneCou' + 'nt];\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vec4\x20po' + 'sition;\x0d\x0a\x09' + '#ifdef\x20BON' + 'E\x0d\x0a\x09\x09mat4\x20' + 'skinTransf' + 'orm\x20=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.x)]\x20*\x20a_' + 'BoneWeight' + 's.x;\x0d\x0a\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20u_Bon' + 'es[int(a_B' + 'oneIndices' + '.y)]\x20*\x20a_B' + 'oneWeights' + '.y;\x0d\x0a\x09\x09ski' + 'nTransform' + '\x20+=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'z)]\x20*\x20a_Bo' + 'neWeights.' + 'z;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.w' + ')]\x20*\x20a_Bon' + 'eWeights.w' + ';\x0d\x0a\x09\x09posit' + 'ion=skinTr' + 'ansform*a_' + 'Position;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09position=' + 'a_Position' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09\x09gl_P' + 'osition\x20=\x20' + 'a_MvpMatri' + 'x\x20*\x20positi' + 'on;\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09gl_Po' + 'sition\x20=\x20u' + ('_MvpMatrix' + '\x20*\x20positio' + 'n;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09#if' + 'def\x20TILING' + 'OFFSET\x0d\x0a\x09\x09' + 'v_Texcoord' + '0=Transfor' + 'mUV(a_Texc' + 'oord0,u_Ti' + 'lingOffset' + ');\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09v_Texc' + 'oord0=a_Te' + 'xcoord0;\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + '\x09\x0d\x0a\x09#ifdef' + '\x20COLOR\x0d\x0a\x09\x09' + 'v_Color\x20=\x20' + 'a_Color;\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'gl_Positio' + 'n=remapGLP' + 'ositionZ(g' + 'l_Position' + ');\x0d\x0a}'), _0xd7e112 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')||defined' + '(FOG)\x0d\x0a\x09un' + 'iform\x20vec3' + '\x20u_CameraP' + 'os;\x0d\x0a\x09vary' + 'ing\x20vec3\x20v' + '_Normal;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Posi' + 'tionWorld;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20F' + 'OG\x0d\x0a\x09unifo' + 'rm\x20float\x20u' + '_FogStart;' + '\x0d\x0a\x09uniform' + '\x20float\x20u_F' + 'ogRange;\x0d\x0a' + '\x09uniform\x20v' + 'ec3\x20u_FogC' + 'olor;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)\x0d\x0a\x09#i' + 'fdef\x20LEGAC' + 'YSINGLELIG' + 'HTING\x0d\x0a\x09\x09#' + 'ifdef\x20DIRE' + 'CTIONLIGHT' + '\x0d\x0a\x09\x09\x09unifo' + 'rm\x20Directi' + 'onLight\x20u_' + 'DirectionL' + 'ight;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x09#' + 'ifdef\x20POIN' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09uniform\x20P' + 'ointLight\x20' + 'u_PointLig' + 'ht;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09\x09#if' + 'def\x20SPOTLI' + 'GHT\x0d\x0a\x09\x09\x09un' + 'iform\x20Spot' + 'Light\x20u_Sp' + 'otLight;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'uniform\x20ma' + 't4\x20u_View;' + '\x0d\x0a\x09\x09unifor' + 'm\x20vec4\x20u_P' + 'rojectionP' + 'arams;\x0d\x0a\x09\x09' + 'uniform\x20ve' + 'c4\x20u_Viewp' + 'ort;\x0d\x0a\x09\x09un' + 'iform\x20int\x20' + 'u_Diration' + 'LightCount' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20sampler' + '2D\x20u_Light' + 'Buffer;\x0d\x0a\x09' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_LightClus' + 'terBuffer;' + '\x0d\x0a\x09#endif\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#include\x20' + '\x22ShadowHel' + 'per.glsl\x22\x0d' + '\x0a#ifdef\x20RE' + ('CEIVESHADO' + 'W\x0d\x0a\x09#if\x20de' + 'fined(SHAD' + 'OWMAP_PSSM' + '2)||define' + 'd(SHADOWMA' + 'P_PSSM3)\x0d\x0a' + '\x09uniform\x20m' + 'at4\x20u_ligh' + 'tShadowVP[' + '4];\x0d\x0a\x09#end' + 'if\x0d\x0a\x09#ifde' + 'f\x20SHADOWMA' + 'P_PSSM1\x20\x0d\x0a' + '\x09varying\x20v' + 'ec4\x20v_ligh' + 'tMVPPos;\x0d\x0a' + '\x09#endif\x0d\x0a#' + 'endif\x0d\x0avar' + 'ying\x20float' + '\x20v_posView' + 'Z;\x0d\x0a\x0d\x0aunif' + 'orm\x20vec3\x20u' + '_AmbientCo' + 'lor;\x0d\x0a\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Sp' + 'latAlphaTe' + 'xture;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'DiffuseTex' + 'ture1;\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Di' + 'ffuseTextu' + 're2;\x0d\x0aunif' + 'orm\x20sample' + 'r2D\x20u_Diff' + 'useTexture' + '3;\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_Diffus' + 'eTexture4;' + '\x0d\x0auniform\x20' + 'sampler2D\x20' + 'u_DiffuseT' + 'exture5;\x0d\x0a' + '\x0d\x0auniform\x20' + 'vec4\x20u_Dif' + 'fuseScaleO' + 'ffset1;\x0d\x0au' + 'niform\x20vec' + '4\x20u_Diffus' + 'eScaleOffs' + 'et2;\x0d\x0aunif' + 'orm\x20vec4\x20u' + '_DiffuseSc' + 'aleOffset3' + ';\x0d\x0auniform' + '\x20vec4\x20u_Di' + 'ffuseScale' + 'Offset4;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Diffu' + 'seScaleOff' + 'set5;\x0d\x0a\x0d\x0av' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0a\x0d\x0a#i' + 'fdef\x20LIGHT' + 'MAP\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Ligh' + 'tMap;\x0d\x0a\x09va' + 'rying\x20vec2' + '\x20v_LightMa' + 'pUV;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09vec4\x20sp' + 'latAlpha\x20=' + '\x20vec4(1.0)' + ';\x0d\x0a\x09#ifdef' + '\x20ExtendTer' + 'rain_DETAI' + 'L_NUM1\x0d\x0a\x09\x09' + 'splatAlpha' + '\x20=\x20texture' + '2D(u_Splat' + 'AlphaTextu' + 're,\x20v_Texc' + 'oord0);\x0d\x0a\x09' + '\x09vec4\x20colo' + 'r1\x20=\x20textu' + 're2D(u_Dif' + 'fuseTextur' + 'e1,\x20v_Texc' + 'oord0\x20*\x20u_' + 'DiffuseSca') + ('leOffset1.' + 'xy);\x0d\x0a\x09\x09gl' + '_FragColor' + '.xyz\x20=\x20col' + 'or1.xyz\x20*\x20' + 'splatAlpha' + '.r;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09#ifde' + 'f\x20ExtendTe' + 'rrain_DETA' + 'IL_NUM2\x0d\x0a\x09' + '\x09splatAlph' + 'a\x20=\x20textur' + 'e2D(u_Spla' + 'tAlphaText' + 'ure,\x20v_Tex' + 'coord0);\x0d\x0a' + '\x09\x09vec4\x20col' + 'or1\x20=\x20text' + 'ure2D(u_Di' + 'ffuseTextu' + 're1,\x20v_Tex' + 'coord0\x20*\x20u' + '_DiffuseSc' + 'aleOffset1' + '.xy);\x0d\x0a\x09\x09v' + 'ec4\x20color2' + '\x20=\x20texture' + '2D(u_Diffu' + 'seTexture2' + ',\x20v_Texcoo' + 'rd0\x20*\x20u_Di' + 'ffuseScale' + 'Offset2.xy' + ');\x0d\x0a\x09\x09gl_F' + 'ragColor.x' + 'yz\x20=\x20color' + '1.xyz\x20*\x20sp' + 'latAlpha.r' + '\x20+\x20color2.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r);\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20Exte' + 'ndTerrain_' + 'DETAIL_NUM' + '3\x0d\x0a\x09\x09splat' + 'Alpha\x20=\x20te' + 'xture2D(u_' + 'SplatAlpha' + 'Texture,\x20v' + '_Texcoord0' + ');\x0d\x0a\x09\x09vec4' + '\x20color1\x20=\x20' + 'texture2D(' + 'u_DiffuseT' + 'exture1,\x20v' + '_Texcoord0' + '\x20*\x20u_Diffu' + 'seScaleOff' + 'set1.xy);\x0d' + '\x0a\x09\x09vec4\x20co' + 'lor2\x20=\x20tex' + 'ture2D(u_D' + 'iffuseText' + 'ure2,\x20v_Te' + 'xcoord0\x20*\x20' + 'u_DiffuseS' + 'caleOffset' + '2.xy);\x0d\x0a\x09\x09' + 'vec4\x20color' + '3\x20=\x20textur' + 'e2D(u_Diff' + 'useTexture' + '3,\x20v_Texco' + 'ord0\x20*\x20u_D' + 'iffuseScal' + 'eOffset3.x' + 'y);\x0d\x0a\x09\x09gl_' + 'FragColor.' + 'xyz\x20=\x20colo' + 'r1.xyz\x20*\x20s' + 'platAlpha.' + 'r\x20\x20+\x20color' + '2.xyz\x20*\x20sp' + 'latAlpha.g' + '\x20+\x20color3.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r\x20-\x20sp' + 'latAlpha.g' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20ExtendTer' + 'rain_DETAI' + 'L_NUM4\x0d\x0a\x09\x09' + 'splatAlpha' + '\x20=\x20texture' + '2D(u_Splat') + ('AlphaTextu' + 're,\x20v_Texc' + 'oord0);\x0d\x0a\x09' + '\x09vec4\x20colo' + 'r1\x20=\x20textu' + 're2D(u_Dif' + 'fuseTextur' + 'e1,\x20v_Texc' + 'oord0\x20*\x20u_' + 'DiffuseSca' + 'leOffset1.' + 'xy);\x0d\x0a\x09\x09ve' + 'c4\x20color2\x20' + '=\x20texture2' + 'D(u_Diffus' + 'eTexture2,' + '\x20v_Texcoor' + 'd0\x20*\x20u_Dif' + 'fuseScaleO' + 'ffset2.xy)' + ';\x0d\x0a\x09\x09vec4\x20' + 'color3\x20=\x20t' + 'exture2D(u' + '_DiffuseTe' + 'xture3,\x20v_' + 'Texcoord0\x20' + '*\x20u_Diffus' + 'eScaleOffs' + 'et3.xy);\x0d\x0a' + '\x09\x09vec4\x20col' + 'or4\x20=\x20text' + 'ure2D(u_Di' + 'ffuseTextu' + 're4,\x20v_Tex' + 'coord0\x20*\x20u' + '_DiffuseSc' + 'aleOffset4' + '.xy);\x0d\x0a\x09\x09g' + 'l_FragColo' + 'r.xyz\x20=\x20co' + 'lor1.xyz\x20*' + '\x20splatAlph' + 'a.r\x20\x20+\x20col' + 'or2.xyz\x20*\x20' + 'splatAlpha' + '.g\x20+\x20color' + '3.xyz\x20*\x20sp' + 'latAlpha.b' + '\x20+\x20color4.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r\x20-\x20sp' + 'latAlpha.g' + '\x20-\x20splatAl' + 'pha.b);\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20Exte' + 'ndTerrain_' + 'DETAIL_NUM' + '5\x0d\x0a\x09\x09splat' + 'Alpha\x20=\x20te' + 'xture2D(u_' + 'SplatAlpha' + 'Texture,\x20v' + '_Texcoord0' + ');\x0d\x0a\x09\x09vec4' + '\x20color1\x20=\x20' + 'texture2D(' + 'u_DiffuseT' + 'exture1,\x20v' + '_Texcoord0' + '\x20*\x20u_Diffu' + 'seScaleOff' + 'set1.xy);\x0d' + '\x0a\x09\x09vec4\x20co' + 'lor2\x20=\x20tex' + 'ture2D(u_D' + 'iffuseText' + 'ure2,\x20v_Te' + 'xcoord0\x20*\x20' + 'u_DiffuseS' + 'caleOffset' + '2.xy);\x0d\x0a\x09\x09' + 'vec4\x20color' + '3\x20=\x20textur' + 'e2D(u_Diff' + 'useTexture' + '3,\x20v_Texco' + 'ord0\x20*\x20u_D' + 'iffuseScal' + 'eOffset3.x' + 'y);\x0d\x0a\x09\x09vec' + '4\x20color4\x20=' + '\x20texture2D' + '(u_Diffuse' + 'Texture4,\x20' + 'v_Texcoord' + '0\x20*\x20u_Diff' + 'useScaleOf' + 'fset4.xy);') + ('\x0d\x0a\x09\x09vec4\x20c' + 'olor5\x20=\x20te' + 'xture2D(u_' + 'DiffuseTex' + 'ture5,\x20v_T' + 'excoord0\x20*' + '\x20u_Diffuse' + 'ScaleOffse' + 't5.xy);\x0d\x0a\x09' + '\x09gl_FragCo' + 'lor.xyz\x20=\x20' + 'color1.xyz' + '\x20*\x20splatAl' + 'pha.r\x20\x20+\x20c' + 'olor2.xyz\x20' + '*\x20splatAlp' + 'ha.g\x20+\x20col' + 'or3.xyz\x20*\x20' + 'splatAlpha' + '.b\x20+\x20color' + '4.xyz\x20*\x20sp' + 'latAlpha.a' + '\x20+\x20color5.' + 'xyz\x20*\x20(1.0' + '\x20-\x20splatAl' + 'pha.r\x20-\x20sp' + 'latAlpha.g' + '\x20-\x20splatAl' + 'pha.b\x20-\x20sp' + 'latAlpha.a' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x09gl_Fr' + 'agColor.w\x20' + '=\x20splatAlp' + 'ha.a;\x0d\x0a\x09\x09\x0d' + '\x0a\x09#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '\x0d\x0a\x09\x09vec3\x20n' + 'ormal\x20=\x20v_' + 'Normal;\x0d\x0a\x09' + '\x09vec3\x20dif,' + '\x20spe;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09v' + 'ec3\x20diffus' + 'e\x20=\x20vec3(0' + '.0);\x0d\x0a\x09vec' + '3\x20specular' + '=\x20vec3(0.0' + ');\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||defin' + 'ed(FOG)\x0d\x0a\x09' + '\x09vec3\x20toEy' + 'e;\x0d\x0a\x09\x09#ifd' + 'ef\x20FOG\x0d\x0a\x09\x09' + '\x09toEye=u_C' + 'ameraPos-v' + '_PositionW' + 'orld;\x0d\x0a\x09\x09\x09' + 'float\x20toEy' + 'eLength=le' + 'ngth(toEye' + ');\x0d\x0a\x09\x09\x09toE' + 'ye/=toEyeL' + 'ength;\x0d\x0a\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + 'toEye=norm' + 'alize(u_Ca' + 'meraPos-v_' + 'PositionWo' + 'rld);\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20LEGA' + 'CYSINGLELI' + 'GHTING\x0d\x0a\x09\x09' + '#ifdef\x20DIR' + 'ECTIONLIGH' + 'T\x0d\x0a\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongDiectio' + 'nLight(vec' + '3(0.0),1.0' + ',normal,ve' + 'c3(1.0),to' + 'Eye,u_Dire' + 'ctionLight' + ',dif,spe);' + '\x0d\x0a\x09\x09\x09diffu' + 'se+=dif;\x0d\x0a') + ('\x09\x09\x09specula' + 'r+=spe;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x0d\x0a\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongPointLi' + 'ght(v_Posi' + 'tionWorld,' + 'vec3(0.0),' + '1.0,normal' + ',vec3(1.0)' + ',toEye,u_P' + 'ointLight,' + 'dif,spe);\x0d' + '\x0a\x09\x09\x09diffus' + 'e+=dif;\x0d\x0a\x09' + '\x09\x09specular' + '+=spe;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'POTLIGHT\x0d\x0a' + '\x09\x09\x09LayaAir' + 'BlinnPhong' + 'SpotLight(' + 'v_Position' + 'World,vec3' + '(0.0),1.0,' + 'normal,vec' + '3(1.0),toE' + 'ye,u_SpotL' + 'ight,dif,s' + 'pe);\x0d\x0a\x09\x09\x09d' + 'iffuse+=di' + 'f;\x0d\x0a\x09\x09\x09spe' + 'cular+=spe' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09#ifdef\x20' + 'DIRECTIONL' + 'IGHT\x0d\x0a\x09\x09\x09f' + 'or\x20(int\x20i\x20' + '=\x200;\x20i\x20<\x20M' + 'AX_LIGHT_C' + 'OUNT;\x20i++)' + '\x20\x0d\x0a\x09\x09\x09{\x0d\x0a\x09' + '\x09\x09\x09if(i\x20>=' + '\x20u_Diratio' + 'nLightCoun' + 't)\x0d\x0a\x09\x09\x09\x09\x09b' + 'reak;\x0d\x0a\x09\x09\x09' + '\x09Direction' + 'Light\x20dire' + 'ctionLight' + '\x20=\x20getDire' + 'ctionLight' + '(u_LightBu' + 'ffer,i);\x0d\x0a' + '\x09\x09\x09\x09LayaAi' + 'rBlinnPhon' + 'gDiectionL' + 'ight(vec3(' + '0.0),1.0,n' + 'ormal,vec3' + '(1.0),toEy' + 'e,directio' + 'nLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09\x09diffuse+' + '=dif;\x0d\x0a\x09\x09\x09' + '\x09specular+' + '=spe;\x0d\x0a\x09\x09\x09' + '}\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09#if\x20d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT)\x0d\x0a' + '\x09\x09\x09ivec4\x20c' + 'lusterInfo' + '\x20=getClust' + 'erInfo(u_L' + 'ightCluste' + 'rBuffer,u_' + 'View,u_Vie' + 'wport,\x20v_P' + 'ositionWor' + 'ld,gl_Frag' + 'Coord,u_Pr' + 'ojectionPa' + 'rams);\x0d\x0a\x09\x09' + '\x09#ifdef\x20PO' + 'INTLIGHT\x0d\x0a' + '\x09\x09\x09\x09for\x20(i' + 'nt\x20i\x20=\x200;\x20' + 'i\x20<\x20MAX_LI' + 'GHT_COUNT;' + '\x20i++)\x20\x0d\x0a\x09\x09' + '\x09\x09{\x0d\x0a\x09\x09\x09\x09\x09') + ('if(i\x20>=\x20cl' + 'usterInfo.' + 'x)//PointL' + 'ightCount\x0d' + '\x0a\x09\x09\x09\x09\x09\x09bre' + 'ak;\x0d\x0a\x09\x09\x09\x09\x09' + 'PointLight' + '\x20pointLigh' + 't\x20=\x20getPoi' + 'ntLight(u_' + 'LightBuffe' + 'r,u_LightC' + 'lusterBuff' + 'er,cluster' + 'Info,i);\x0d\x0a' + '\x09\x09\x09\x09\x09LayaA' + 'irBlinnPho' + 'ngPointLig' + 'ht(v_Posit' + 'ionWorld,v' + 'ec3(0.0),1' + '.0,normal,' + 'vec3(1.0),' + 'toEye,poin' + 'tLight,dif' + ',spe);\x0d\x0a\x09\x09' + '\x09\x09\x09diffuse' + '+=dif;\x0d\x0a\x09\x09' + '\x09\x09\x09specula' + 'r+=spe;\x0d\x0a\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09\x09' + '#ifdef\x20SPO' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09\x09for\x20(int' + '\x20i\x20=\x200;\x20i\x20' + '<\x20MAX_LIGH' + 'T_COUNT;\x20i' + '++)\x20\x0d\x0a\x09\x09\x09\x09' + '{\x0d\x0a\x09\x09\x09\x09\x09if' + '(i\x20>=\x20clus' + 'terInfo.y)' + '//SpotLigh' + 'tCount\x0d\x0a\x09\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09\x09Spo' + 'tLight\x20spo' + 'tLight\x20=\x20g' + 'etSpotLigh' + 't(u_LightB' + 'uffer,u_Li' + 'ghtCluster' + 'Buffer,clu' + 'sterInfo,i' + ');\x0d\x0a\x09\x09\x09\x09\x09L' + 'ayaAirBlin' + 'nPhongSpot' + 'Light(v_Po' + 'sitionWorl' + 'd,vec3(0.0' + '),1.0,norm' + 'al,vec3(1.' + '0),toEye\x09,' + 'spotLight,' + 'dif,spe);\x0d' + '\x0a\x09\x09\x09\x09\x09diff' + 'use+=dif;\x0d' + '\x0a\x09\x09\x09\x09\x09spec' + 'ular+=spe;' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0avec3\x20glob' + 'alDiffuse\x20' + '=\x20u_Ambien' + 'tColor;\x0d\x0a#' + 'ifdef\x20LIGH' + 'TMAP\x0d\x0a\x09glo' + 'balDiffuse' + '\x20+=\x20Decode' + 'Lightmap(t' + 'exture2D(u' + '_LightMap,' + '\x20v_LightMa' + 'pUV));\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20RECEI' + 'VESHADOW\x0d\x0a' + '\x09float\x20sha' + 'dowValue\x20=' + '\x201.0;\x0d\x0a\x09#i' + 'fdef\x20SHADO' + 'WMAP_PSSM3' + '\x0d\x0a\x09\x09shadow' + 'Value\x20=\x20ge' + 'tShadowPSS' + 'M3(\x20u_shad' + 'owMap1,u_s' + 'hadowMap2,') + ('u_shadowMa' + 'p3,u_light' + 'ShadowVP,u' + '_shadowPSS' + 'MDistance,' + 'u_shadowPC' + 'Foffset,v_' + 'PositionWo' + 'rld,v_posV' + 'iewZ,0.001' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20SHADOWMAP' + '_PSSM2\x0d\x0a\x09\x09' + 'shadowValu' + 'e\x20=\x20getSha' + 'dowPSSM2(\x20' + 'u_shadowMa' + 'p1,u_shado' + 'wMap2,u_li' + 'ghtShadowV' + 'P,u_shadow' + 'PSSMDistan' + 'ce,u_shado' + 'wPCFoffset' + ',v_Positio' + 'nWorld,v_p' + 'osViewZ,0.' + '001);\x0d\x0a\x09#e' + 'ndif\x20\x0d\x0a\x09#i' + 'fdef\x20SHADO' + 'WMAP_PSSM1' + '\x0d\x0a\x09\x09shadow' + 'Value\x20=\x20ge' + 'tShadowPSS' + 'M1(\x20u_shad' + 'owMap1,v_l' + 'ightMVPPos' + ',u_shadowP' + 'SSMDistanc' + 'e,u_shadow' + 'PCFoffset,' + 'v_posViewZ' + ',0.001);\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=\x20vec4(' + 'gl_FragCol' + 'or.rgb\x20*\x20(' + 'globalDiff' + 'use\x20+\x20diff' + 'use)\x20*\x20sha' + 'dowValue,\x20' + 'gl_FragCol' + 'or.a);\x0d\x0a#e' + 'lse\x0d\x0a\x09gl_F' + 'ragColor\x20=' + '\x20vec4(gl_F' + 'ragColor.r' + 'gb\x20*\x20(glob' + 'alDiffuse\x20' + '+\x20diffuse)' + ',\x20gl_FragC' + 'olor.a);\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(DIRECTIO' + 'NLIGHT)||d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT)\x0d\x0a' + '\x09#ifdef\x20RE' + 'CEIVESHADO' + 'W\x0d\x0a\x09\x09gl_Fr' + 'agColor.rg' + 'b\x20+=\x20specu' + 'lar\x20*\x20shad' + 'owValue;\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'gl_FragCol' + 'or.rgb\x20+=\x20' + 'specular;\x0d' + '\x0a\x09#endif\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20FOG' + '\x0d\x0a\x09float\x20l' + 'erpFact=cl' + 'amp((toEye' + 'Length-u_F' + 'ogStart)/u' + '_FogRange,' + '0.0,1.0);\x0d' + '\x0a\x09gl_FragC' + 'olor.rgb=m' + 'ix(gl_Frag' + 'Color.rgb,' + 'u_FogColor' + ',lerpFact)' + ';\x0d\x0a#endif\x0d') + ('\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a' + '\x0d\x0a\x0d\x0a'), _0x4a2cfa = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '2\x20a_Texcoo' + 'rd0;\x0d\x0a\x0d\x0aun' + 'iform\x20mat4' + '\x20u_MvpMatr' + 'ix;\x0d\x0a\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '0;\x0d\x0a\x0d\x0a#if\x20' + 'defined(DI' + 'RECTIONLIG' + 'HT)||defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)||defi' + 'ned(LIGHTM' + 'AP)\x0d\x0a\x09attr' + 'ibute\x20vec3' + '\x20a_Normal;' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_No' + 'rmal;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)||def' + 'ined(FOG)|' + '|(defined(' + 'RECEIVESHA' + 'DOW)&&defi' + 'ned(SHADOW' + 'MAP_PSSM1)' + ')\x0d\x0a\x09unifor' + 'm\x20mat4\x20u_W' + 'orldMat;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Posi' + 'tionWorld;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20L' + 'IGHTMAP\x0d\x0a\x09' + 'varying\x20ve' + 'c2\x20v_Light' + 'MapUV;\x0d\x0a\x09u' + 'niform\x20vec' + '4\x20u_Lightm' + 'apScaleOff' + 'set;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20RECEIVE' + 'SHADOW\x0d\x0a\x09v' + 'arying\x20flo' + 'at\x20v_posVi' + 'ewZ;\x0d\x0a\x09#if' + 'def\x20SHADOW' + 'MAP_PSSM1\x20' + '\x0d\x0a\x09\x09varyin' + 'g\x20vec4\x20v_l' + 'ightMVPPos' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20mat4\x20u_' + 'lightShado' + 'wVP[4];\x0d\x0a\x09' + '#endif\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0avo' + 'id\x20main()\x0d' + '\x0a{\x0d\x0a\x09gl_Po' + 'sition\x20=\x20u' + '_MvpMatrix' + '\x20*\x20a_Posit' + 'ion;\x0d\x0a\x20\x20\x0d\x0a' + '\x09v_Texcoor' + 'd0\x20=\x20a_Tex' + 'coord0;\x0d\x0a\x20' + '\x20\x0d\x0a\x09#ifdef' + '\x20LIGHTMAP\x0d' + '\x0a\x09\x09v_Light' + 'MapUV\x20=\x20ve' + 'c2(a_Texco' + 'ord0.x,\x201.' + '0\x20-\x20a_Texc' + 'oord0.y)\x20*' + '\x20u_Lightma' + 'pScaleOffs' + 'et.xy\x20+\x20u_' + 'LightmapSc' + 'aleOffset.' + 'zw;\x0d\x0a\x09\x09v_L' + 'ightMapUV.' + ('y\x20=\x201.0\x20-\x20' + 'v_LightMap' + 'UV.y;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x20\x20\x0d\x0a' + '\x09#if\x20defin' + 'ed(DIRECTI' + 'ONLIGHT)||' + 'defined(PO' + 'INTLIGHT)|' + '|defined(S' + 'POTLIGHT)\x0d' + '\x0a\x09\x09v_Norma' + 'l\x20=\x20a_Norm' + 'al;\x0d\x0a\x09#end' + 'if\x0d\x0a\x0d\x0a\x09#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)||def' + 'ined(FOG)|' + '|(defined(' + 'RECEIVESHA' + 'DOW)&&defi' + 'ned(SHADOW' + 'MAP_PSSM1)' + ')\x0d\x0a\x09\x09v_Pos' + 'itionWorld' + '=(u_WorldM' + 'at*a_Posit' + 'ion).xyz;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x0d\x0a\x09#ifdef\x20' + 'RECEIVESHA' + 'DOW\x0d\x0a\x09\x09v_p' + 'osViewZ\x20=\x20' + 'gl_Positio' + 'n.w;\x0d\x0a\x09\x09#i' + 'fdef\x20SHADO' + 'WMAP_PSSM1' + '\x0d\x0a\x09\x09\x09v_lig' + 'htMVPPos\x20=' + '\x20u_lightSh' + 'adowVP[0]\x20' + '*\x20vec4(v_P' + 'ositionWor' + 'ld,1.0);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'gl_Positio' + 'n=remapGLP' + 'ositionZ(g' + 'l_Position' + ');\x0d\x0a}'), _0x421779 = 'struct\x20Dir' + 'ectionLigh' + 't\x20{\x0d\x0a\x09vec3' + '\x20color;\x0d\x0a\x09' + 'vec3\x20direc' + 'tion;\x0d\x0a};\x0d' + '\x0a\x0d\x0astruct\x20' + 'PointLight' + '\x20{\x0d\x0a\x09vec3\x20' + 'color;\x0d\x0a\x09v' + 'ec3\x20positi' + 'on;\x0d\x0a\x09floa' + 't\x20range;\x0d\x0a' + '};\x0d\x0a\x0d\x0astru' + 'ct\x20SpotLig' + 'ht\x20{\x0d\x0a\x09vec' + '3\x20color;\x0d\x0a' + '\x09vec3\x20posi' + 'tion;\x0d\x0a\x09fl' + 'oat\x20range;' + '\x0d\x0a\x09vec3\x20di' + 'rection;\x0d\x0a' + '\x09float\x20spo' + 't;\x0d\x0a};\x0d\x0a\x0d\x0a' + '\x0d\x0a\x0d\x0aconst\x20' + 'int\x20c_Clus' + 'terBufferW' + 'idth\x20=\x20CLU' + 'STER_X_COU' + 'NT*CLUSTER' + '_Y_COUNT;\x0d' + '\x0aconst\x20int' + '\x20c_Cluster' + 'BufferHeig' + 'ht\x20=\x20CLUST' + 'ER_Z_COUNT' + '*(1+int(ce' + 'il(float(M' + 'AX_LIGHT_C' + 'OUNT_PER_C' + 'LUSTER)/4.' + '0)));\x0d\x0acon' + 'st\x20int\x20c_C' + 'lusterBuff' + 'erFloatWid' + 'th\x20=\x20c_Clu' + 'sterBuffer' + 'Width*4;\x0d\x0a' + '\x0d\x0aivec4\x20ge' + 'tClusterIn' + 'fo(sampler' + '2D\x20cluster' + 'Buffer,mat' + '4\x20viewMatr' + 'ix,vec4\x20vi' + 'ewport,vec' + '3\x20position' + ',vec4\x20frag' + 'Coord,vec4' + '\x20projectPa' + 'rams)\x0d\x0a{\x0d\x0a' + '\x09vec3\x20view' + 'Pos\x20=\x20vec3' + '(viewMatri' + 'x*vec4(pos' + 'ition,\x201.0' + '));\x20//posi' + 'tion\x20in\x20vi' + 'ewspace\x0d\x0a\x0d' + '\x0a\x09int\x20clus' + 'terXIndex\x20' + '=\x20int(floo' + 'r(fragCoor' + 'd.x/\x20(floa' + 't(viewport' + '.z)/float(' + 'CLUSTER_X_' + 'COUNT))));' + '\x0d\x0a\x20\x20\x20\x20int\x20' + 'clusterYIn' + 'dex\x20=\x20int(' + 'floor((vie' + 'wport.w\x20*\x20' + '(projectPa' + 'rams.z\x20<0.' + '0?\x200.0\x20:\x201' + '.0)\x20-\x20frag' + 'Coord.y\x20*\x20' + 'projectPar' + 'ams.z)/\x20(f' + 'loat(viewp' + 'ort.w)/flo' + 'at(CLUSTER' + '_Y_COUNT))' + '));//Maybe' + '\x20Flipped\x20P' + 'rojectMatr' + 'ix\x0d\x0a\x09float' + '\x20zSlicePar' + 'am\x20=float(' + ('CLUSTER_Z_' + 'COUNT)/log' + '2(projectP' + 'arams.y\x20/\x20' + 'projectPar' + 'ams.x);\x0d\x0a\x20' + '\x09int\x20clust' + 'erZIndex\x20=' + '\x20int(floor' + '(log2(-vie' + 'wPos.z)\x20*\x20' + 'zSlicePara' + 'm-\x20log2(pr' + 'ojectParam' + 's.x)\x20*\x20zSl' + 'iceParam))' + ';//project' + 'Params\x20x:c' + 'ameraNear\x20' + 'y:cameraFa' + 'r\x0d\x0a\x0d\x0a\x09vec2' + '\x20uv=\x20vec2(' + '(float(clu' + 'sterXIndex' + '\x20+\x20cluster' + 'YIndex\x20*\x20C' + 'LUSTER_X_C' + 'OUNT)+0.5)' + '/float(c_C' + 'lusterBuff' + 'erWidth),\x0d' + '\x0a\x09\x09\x09\x09(floa' + 't(clusterZ' + 'Index)+0.5' + ')/float(c_' + 'ClusterBuf' + 'ferHeight)' + ');\x0d\x0a\x09vec4\x20' + 'clusterPix' + 'el=texture' + '2D(cluster' + 'Buffer,\x20uv' + ');\x0d\x0a\x09retur' + 'n\x20ivec4(cl' + 'usterPixel' + ');//X:Poin' + 't\x20Count\x20Y:' + 'Spot\x20Count' + '\x20Z、W:Light' + '\x20Offset\x0d\x0a}' + '\x0d\x0a\x0d\x0a\x0d\x0aint\x20' + 'getLightIn' + 'dex(sample' + 'r2D\x20cluste' + 'rBuffer,in' + 't\x20offset,i' + 'nt\x20index)\x20' + '\x0d\x0a{\x0d\x0a\x09int\x20' + 'totalOffse' + 't=offset+i' + 'ndex;\x0d\x0a\x09in' + 't\x20row=tota' + 'lOffset/c_' + 'ClusterBuf' + 'ferFloatWi' + 'dth;\x0d\x0a\x09int' + '\x20lastRowFl' + 'oat=totalO' + 'ffset-row*' + 'c_ClusterB' + 'ufferFloat' + 'Width;\x0d\x0a\x09i' + 'nt\x20col=las' + 'tRowFloat/' + '4;\x0d\x0a\x09vec2\x20' + 'uv=vec2((f' + 'loat(col)+' + '0.5)/float' + '(c_Cluster' + 'BufferWidt' + 'h),\x0d\x0a\x09\x09\x09\x09(' + 'float(row)' + '+0.5)/floa' + 't(c_Cluste' + 'rBufferHei' + 'ght));\x0d\x0a\x09v' + 'ec4\x20texel\x20' + '=\x20texture2' + 'D(clusterB' + 'uffer,\x20uv)' + ';\x0d\x0a\x20\x20\x20\x20int' + '\x20pixelComp' + 'onent\x20=\x20la' + 'stRowFloat' + '-col*4;\x0d\x0a\x20' + '\x20\x20\x20if\x20(pix' + 'elComponen' + 't\x20==\x200)\x20\x0d\x0a' + '\x20\x20\x20\x20\x20\x20retu' + 'rn\x20int(tex') + ('el.x);\x0d\x0a\x20\x20' + '\x20\x20else\x20if\x20' + '(pixelComp' + 'onent\x20==\x201' + ')\x20\x0d\x0a\x20\x20\x20\x20\x20\x20' + 'return\x20int' + '(texel.y);' + '\x0d\x0a\x20\x20\x20\x20else' + '\x20if\x20(pixel' + 'Component\x20' + '==\x202)\x20\x0d\x0a\x20\x20' + '\x20\x20\x20\x20return' + '\x20int(texel' + '.z);\x0d\x0a\x20\x20\x20\x20' + 'else\x20if\x20(p' + 'ixelCompon' + 'ent\x20==\x203)\x20' + '\x0d\x0a\x20\x20\x20\x20\x20\x20re' + 'turn\x20int(t' + 'exel.w);\x0d\x0a' + '}\x0d\x0a\x0d\x0aDirec' + 'tionLight\x20' + 'getDirecti' + 'onLight(sa' + 'mpler2D\x20li' + 'ghtBuffer,' + 'int\x20index)' + '\x20\x0d\x0a{\x0d\x0a\x20\x20\x20\x20' + 'DirectionL' + 'ight\x20light' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20v\x20=\x20(fl' + 'oat(index)' + '+0.5)/\x20flo' + 'at(MAX_LIG' + 'HT_COUNT);' + '\x0d\x0a\x20\x20\x20\x20vec4' + '\x20p1\x20=\x20text' + 'ure2D(ligh' + 'tBuffer,\x20v' + 'ec2(0.125,' + 'v));\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20p2\x20=\x20' + 'texture2D(' + 'lightBuffe' + 'r,\x20vec2(0.' + '375,v));\x0d\x0a' + '\x09light.col' + 'or=p1.rgb;' + '\x0d\x0a\x20\x20\x20\x20ligh' + 't.directio' + 'n\x20=\x20p2.rgb' + ';\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20light;' + '\x0d\x0a}\x0d\x0a\x0d\x0aPoi' + 'ntLight\x20ge' + 'tPointLigh' + 't(sampler2' + 'D\x20lightBuf' + 'fer,sample' + 'r2D\x20cluste' + 'rBuffer,iv' + 'ec4\x20cluste' + 'rInfo,int\x20' + 'index)\x20\x0d\x0a{' + '\x0d\x0a\x20\x20\x20\x20Poin' + 'tLight\x20lig' + 'ht;\x0d\x0a\x09int\x20' + 'pointIndex' + '=getLightI' + 'ndex(clust' + 'erBuffer,c' + 'lusterInfo' + '.z*c_Clust' + 'erBufferFl' + 'oatWidth+c' + 'lusterInfo' + '.w,index);' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20v\x20=\x20(flo' + 'at(pointIn' + 'dex)+0.5)/' + '\x20float(MAX' + '_LIGHT_COU' + 'NT);\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20p1\x20=\x20' + 'texture2D(' + 'lightBuffe' + 'r,\x20vec2(0.' + '125,v));\x0d\x0a' + '\x20\x20\x20\x20vec4\x20p' + '2\x20=\x20textur' + 'e2D(lightB' + 'uffer,\x20vec' + '2(0.375,v)' + ');\x0d\x0a\x09light' + '.color=p1.' + 'rgb;\x0d\x0a\x09lig' + 'ht.range\x20=' + '\x20p1.a;\x0d\x0a\x20\x20') + ('\x20\x20light.po' + 'sition\x20=\x20p' + '2.rgb;\x0d\x0a\x20\x20' + '\x20\x20return\x20l' + 'ight;\x0d\x0a}\x0d\x0a' + '\x0d\x0aSpotLigh' + 't\x20getSpotL' + 'ight(sampl' + 'er2D\x20light' + 'Buffer,sam' + 'pler2D\x20clu' + 'sterBuffer' + ',ivec4\x20clu' + 'sterInfo,i' + 'nt\x20index)\x20' + '\x0d\x0a{\x0d\x0a\x20\x20\x20\x20S' + 'potLight\x20l' + 'ight;\x0d\x0a\x09in' + 't\x20spoIndex' + '=getLightI' + 'ndex(clust' + 'erBuffer,c' + 'lusterInfo' + '.z*c_Clust' + 'erBufferFl' + 'oatWidth+c' + 'lusterInfo' + '.w,cluster' + 'Info.x+ind' + 'ex);\x0d\x0a\x20\x20\x20\x20' + 'float\x20v\x20=\x20' + '(float(spo' + 'Index)+0.5' + ')/\x20float(M' + 'AX_LIGHT_C' + 'OUNT);\x0d\x0a\x20\x20' + '\x20\x20vec4\x20p1\x20' + '=\x20texture2' + 'D(lightBuf' + 'fer,\x20vec2(' + '0.125,v));' + '\x0d\x0a\x20\x20\x20\x20vec4' + '\x20p2\x20=\x20text' + 'ure2D(ligh' + 'tBuffer,\x20v' + 'ec2(0.375,' + 'v));\x0d\x0a\x09vec' + '4\x20p3\x20=\x20tex' + 'ture2D(lig' + 'htBuffer,\x20' + 'vec2(0.625' + ',v));\x0d\x0a\x20\x20\x20' + '\x20light.col' + 'or\x20=\x20p1.rg' + 'b;\x0d\x0a\x09light' + '.range=p1.' + 'a;\x0d\x0a\x20\x20\x20\x20li' + 'ght.positi' + 'on\x20=\x20p2.rg' + 'b;\x0d\x0a\x09light' + '.spot\x20=\x20p2' + '.a;\x0d\x0a\x09ligh' + 't.directio' + 'n\x20=\x20p3.rgb' + ';\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20light;' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d' + '\x0a//\x20Laya中使' + '用衰减纹理\x0d\x0aflo' + 'at\x20LayaAtt' + 'enuation(i' + 'n\x20vec3\x20L,i' + 'n\x20float\x20in' + 'vLightRadi' + 'us)\x20{\x0d\x0a\x09fl' + 'oat\x20fRatio' + '\x20=\x20clamp(l' + 'ength(L)\x20*' + '\x20invLightR' + 'adius,0.0,' + '1.0);\x0d\x0a\x09fR' + 'atio\x20*=\x20fR' + 'atio;\x0d\x0a\x09re' + 'turn\x201.0\x20/' + '\x20(1.0\x20+\x2025' + '.0\x20*\x20fRati' + 'o)*\x20clamp(' + '4.0*(1.0\x20-' + '\x20fRatio),0' + '.0,1.0);\x20/' + '/fade\x20to\x20b' + 'lack\x20as\x20if' + '\x204\x20pixel\x20t' + 'exture\x0d\x0a}\x0d' + '\x0a\x0d\x0a//\x20Same' + '\x20as\x20Just\x20C' + 'ause\x202\x20and' + '\x20Crysis\x202\x20' + '(you\x20can\x20r' + 'ead\x20GPU\x20Pr') + ('o\x201\x20book\x20f' + 'or\x20more\x20in' + 'formation)' + '\x0d\x0afloat\x20Ba' + 'sicAttenua' + 'tion(in\x20ve' + 'c3\x20L,in\x20fl' + 'oat\x20invLig' + 'htRadius)\x20' + '{\x0d\x0a\x09vec3\x20d' + 'istance\x20=\x20' + 'L\x20*\x20invLig' + 'htRadius;\x0d' + '\x0a\x09float\x20at' + 'tenuation\x20' + '=\x20clamp(1.' + '0\x20-\x20dot(di' + 'stance,\x20di' + 'stance),0.' + '0,1.0);\x20//' + '\x20Equals\x20fl' + 'oat\x20attenu' + 'ation\x20=\x20sa' + 'turate(1.0' + 'f\x20-\x20dot(L,' + '\x20L)\x20/\x20(lig' + 'htRadius\x20*' + '\x20\x20lightRad' + 'ius));\x0d\x0a\x09r' + 'eturn\x20atte' + 'nuation\x20*\x20' + 'attenuatio' + 'n;\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x20Inspired' + '\x20on\x20http:/' + '/fools.sli' + 'ndev.com/v' + 'iewtopic.p' + 'hp?f=11&t=' + '21&view=un' + 'read#unrea' + 'd\x0d\x0afloat\x20N' + 'aturalAtte' + 'nuation(in' + '\x20vec3\x20L,in' + '\x20float\x20inv' + 'LightRadiu' + 's)\x20{\x0d\x0a\x09flo' + 'at\x20attenua' + 'tionFactor' + '\x20=\x2030.0;\x0d\x0a' + '\x09vec3\x20dist' + 'ance\x20=\x20L\x20*' + '\x20invLightR' + 'adius;\x0d\x0a\x09f' + 'loat\x20atten' + 'uation\x20=\x20d' + 'ot(distanc' + 'e,\x20distanc' + 'e);\x20//\x20Equ' + 'als\x20float\x20' + 'attenuatio' + 'n\x20=\x20dot(L,' + '\x20L)\x20/\x20(lig' + 'htRadius\x20*' + '\x20\x20lightRad' + 'ius);\x0d\x0a\x09at' + 'tenuation\x20' + '=\x201.0\x20/\x20(a' + 'ttenuation' + '\x20*\x20attenua' + 'tionFactor' + '\x20+\x201.0);\x0d\x0a' + '\x09//\x20Second' + '\x20we\x20move\x20d' + 'own\x20the\x20fu' + 'nction\x20the' + 'rewith\x20it\x20' + 'reaches\x20ze' + 'ro\x20at\x20absc' + 'issa\x201:\x0d\x0a\x09' + 'attenuatio' + 'nFactor\x20=\x20' + '1.0\x20/\x20(att' + 'enuationFa' + 'ctor\x20+\x201.0' + ');\x20//atten' + 'uationFact' + 'or\x20contain' + 's\x20now\x20the\x20' + 'value\x20we\x20h' + 'ave\x20to\x20sub' + 'tract\x0d\x0a\x09at' + 'tenuation\x20' + '=\x20max(atte' + 'nuation\x20-\x20' + 'attenuatio' + 'nFactor,\x200' + '.0);\x20//\x20Th' + 'e\x20max\x20fixe') + ('s\x20a\x20bug.\x0d\x0a' + '\x09//\x20Finall' + 'y\x20we\x20expan' + 'd\x20the\x20equa' + 'tion\x20along' + '\x20the\x20y-axi' + 's\x20so\x20that\x20' + 'it\x20starts\x20' + 'with\x20a\x20fun' + 'ction\x20valu' + 'e\x20of\x201\x20aga' + 'in.\x0d\x0a\x09atte' + 'nuation\x20/=' + '\x201.0\x20-\x20att' + 'enuationFa' + 'ctor;\x0d\x0a\x09re' + 'turn\x20atten' + 'uation;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20L' + 'ayaAirBlin' + 'nPhongLigh' + 't\x20(in\x20vec3' + '\x20specColor' + ',in\x20float\x20' + 'specColorI' + 'ntensity,i' + 'n\x20vec3\x20nor' + 'mal,in\x20vec' + '3\x20gloss,\x20i' + 'n\x20vec3\x20vie' + 'wDir,in\x20ve' + 'c3\x20lightCo' + 'lor,\x20in\x20ve' + 'c3\x20lightVe' + 'c,out\x20vec3' + '\x20diffuseCo' + 'lor,out\x20ve' + 'c3\x20specula' + 'rColor)\x20{\x0d' + '\x0a\x09mediump\x20' + 'vec3\x20h\x20=\x20n' + 'ormalize(v' + 'iewDir-lig' + 'htVec);\x0d\x0a\x09' + 'lowp\x20float' + '\x20ln\x20=\x20max\x20' + '(0.0,\x20dot\x20' + '(-lightVec' + ',normal));' + '\x0d\x0a\x09float\x20n' + 'h\x20=\x20max\x20(0' + '.0,\x20dot\x20(h' + ',normal));' + '\x0d\x0a\x09diffuse' + 'Color=ligh' + 'tColor\x20*\x20l' + 'n;\x0d\x0a\x09specu' + 'larColor=l' + 'ightColor\x20' + '*specColor' + '*pow\x20(nh,\x20' + 'specColorI' + 'ntensity*1' + '28.0)\x20*\x20gl' + 'oss;\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20Laya' + 'AirBlinnPh' + 'ongDiectio' + 'nLight\x20(in' + '\x20vec3\x20spec' + 'Color,in\x20f' + 'loat\x20specC' + 'olorIntens' + 'ity,in\x20vec' + '3\x20normal,i' + 'n\x20vec3\x20glo' + 'ss,\x20in\x20vec' + '3\x20viewDir,' + '\x20in\x20Direct' + 'ionLight\x20l' + 'ight,out\x20v' + 'ec3\x20diffus' + 'eColor,out' + '\x20vec3\x20spec' + 'ularColor)' + '\x20{\x0d\x0a\x09vec3\x20' + 'lightVec=n' + 'ormalize(l' + 'ight.direc' + 'tion);\x0d\x0a\x09L' + 'ayaAirBlin' + 'nPhongLigh' + 't(specColo' + 'r,specColo' + 'rIntensity' + ',normal,gl' + 'oss,viewDi' + 'r,light.co' + 'lor,lightV' + 'ec,diffuse') + ('Color,spec' + 'ularColor)' + ';\x0d\x0a}\x0d\x0a\x0d\x0avo' + 'id\x20LayaAir' + 'BlinnPhong' + 'PointLight' + '\x20(in\x20vec3\x20' + 'pos,in\x20vec' + '3\x20specColo' + 'r,in\x20float' + '\x20specColor' + 'Intensity,' + 'in\x20vec3\x20no' + 'rmal,in\x20ve' + 'c3\x20gloss,\x20' + 'in\x20vec3\x20vi' + 'ewDir,\x20in\x20' + 'PointLight' + '\x20light,out' + '\x20vec3\x20diff' + 'useColor,o' + 'ut\x20vec3\x20sp' + 'ecularColo' + 'r)\x20{\x0d\x0a\x09vec' + '3\x20lightVec' + '\x20=\x20\x20pos-li' + 'ght.positi' + 'on;\x0d\x0a\x09Laya' + 'AirBlinnPh' + 'ongLight(s' + 'pecColor,s' + 'pecColorIn' + 'tensity,no' + 'rmal,gloss' + ',viewDir,l' + 'ight.color' + ',lightVec/' + 'length(lig' + 'htVec),dif' + 'fuseColor,' + 'specularCo' + 'lor);\x0d\x0a\x09fl' + 'oat\x20attenu' + 'ate\x20=\x20Laya' + 'Attenuatio' + 'n(lightVec' + ',\x201.0/ligh' + 't.range);\x0d' + '\x0a\x09diffuseC' + 'olor\x20*=\x20at' + 'tenuate;\x0d\x0a' + '\x09specularC' + 'olor*=\x20att' + 'enuate;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20L' + 'ayaAirBlin' + 'nPhongSpot' + 'Light\x20(in\x20' + 'vec3\x20pos,i' + 'n\x20vec3\x20spe' + 'cColor,in\x20' + 'float\x20spec' + 'ColorInten' + 'sity,in\x20ve' + 'c3\x20normal,' + 'in\x20vec3\x20gl' + 'oss,\x20in\x20ve' + 'c3\x20viewDir' + ',\x20in\x20SpotL' + 'ight\x20light' + ',out\x20vec3\x20' + 'diffuseCol' + 'or,out\x20vec' + '3\x20specular' + 'Color)\x20{\x0d\x0a' + '\x09vec3\x20ligh' + 'tVec\x20=\x20\x20po' + 's-light.po' + 'sition;\x0d\x0a\x09' + 'vec3\x20norma' + 'lLightVec=' + 'lightVec/l' + 'ength(ligh' + 'tVec);\x0d\x0a\x09L' + 'ayaAirBlin' + 'nPhongLigh' + 't(specColo' + 'r,specColo' + 'rIntensity' + ',normal,gl' + 'oss,viewDi' + 'r,light.co' + 'lor,normal' + 'LightVec,d' + 'iffuseColo' + 'r,specular' + 'Color);\x0d\x0a\x09' + 'vec2\x20cosAn' + 'gles=cos(v' + 'ec2(light.') + ('spot,light' + '.spot*0.5)' + '*0.5);//Co' + 'neAttenuat' + 'ion\x0d\x0a\x09floa' + 't\x20dl=dot(n' + 'ormalize(l' + 'ight.direc' + 'tion),norm' + 'alLightVec' + ');\x0d\x0a\x09dl*=s' + 'moothstep(' + 'cosAngles[' + '0],cosAngl' + 'es[1],dl);' + '\x0d\x0a\x09float\x20a' + 'ttenuate\x20=' + '\x20LayaAtten' + 'uation(lig' + 'htVec,\x201.0' + '/light.ran' + 'ge)*dl;\x0d\x0a\x09' + 'diffuseCol' + 'or\x20*=atten' + 'uate;\x0d\x0a\x09sp' + 'ecularColo' + 'r\x20*=attenu' + 'ate;\x0d\x0a}\x0d\x0a\x0d' + '\x0avec3\x20Norm' + 'alSampleTo' + 'WorldSpace' + '(vec3\x20norm' + 'alMapSampl' + 'e,\x20vec3\x20un' + 'itNormal,\x20' + 'vec3\x20tange' + 'nt,vec3\x20bi' + 'normal)\x20{\x0d' + '\x0a\x09vec3\x20nor' + 'malT\x20=vec3' + '(2.0*norma' + 'lMapSample' + '.x\x20-\x201.0,1' + '.0-2.0*nor' + 'malMapSamp' + 'le.y,2.0*n' + 'ormalMapSa' + 'mple.z\x20-\x201' + '.0);\x0d\x0a\x0d\x0a\x09/' + '/\x20Build\x20or' + 'thonormal\x20' + 'basis.\x0d\x0a\x09v' + 'ec3\x20N\x20=\x20no' + 'rmalize(un' + 'itNormal);' + '\x0d\x0a\x09vec3\x20T\x20' + '=\x20normaliz' + 'e(tangent)' + ';\x0d\x0a\x09vec3\x20B' + '\x20=\x20normali' + 'ze(binorma' + 'l);\x0d\x0a\x09mat3' + '\x20TBN\x20=\x20mat' + '3(T,\x20B,\x20N)' + ';\x0d\x0a\x0d\x0a\x09//\x20T' + 'ransform\x20f' + 'rom\x20tangen' + 't\x20space\x20to' + '\x20world\x20spa' + 'ce.\x0d\x0a\x09vec3' + '\x20bumpedNor' + 'mal\x20=\x20TBN*' + 'normalT;\x0d\x0a' + '\x0d\x0a\x09return\x20' + 'bumpedNorm' + 'al;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec3\x20Norma' + 'lSampleToW' + 'orldSpace1' + '(vec4\x20norm' + 'alMapSampl' + 'e,\x20vec3\x20ta' + 'ngent,\x20vec' + '3\x20binormal' + ',\x20vec3\x20uni' + 'tNormal)\x20{' + '\x0d\x0a\x09vec3\x20no' + 'rmalT;\x0d\x0a\x09n' + 'ormalT.x\x20=' + '\x202.0\x20*\x20nor' + 'malMapSamp' + 'le.x\x20-\x201.0' + ';\x0d\x0a\x09normal' + 'T.y\x20=\x201.0\x20' + '-\x202.0\x20*\x20no' + 'rmalMapSam' + 'ple.y;\x0d\x0a\x09n' + 'ormalT.z\x20=' + '\x20sqrt(1.0\x20' + '-\x20clamp(do') + ('t(normalT.' + 'xy,\x20normal' + 'T.xy),\x200.0' + ',\x201.0));\x0d\x0a' + '\x0d\x0a\x09vec3\x20T\x20' + '=\x20normaliz' + 'e(tangent)' + ';\x0d\x0a\x09vec3\x20B' + '\x20=\x20normali' + 'ze(binorma' + 'l);\x0d\x0a\x09vec3' + '\x20N\x20=\x20norma' + 'lize(unitN' + 'ormal);\x0d\x0a\x09' + 'mat3\x20TBN\x20=' + '\x20mat3(T,\x20B' + ',\x20N);\x0d\x0a\x0d\x0a\x09' + '//\x20Transfo' + 'rm\x20from\x20ta' + 'ngent\x20spac' + 'e\x20to\x20world' + '\x20space.\x0d\x0a\x09' + 'vec3\x20bumpe' + 'dNormal\x20=\x20' + 'TBN\x20*\x20norm' + 'alize(norm' + 'alT);\x0d\x0a\x0d\x0a\x09' + 'return\x20bum' + 'pedNormal;' + '\x0d\x0a}\x0d\x0a\x0d\x0avec' + '3\x20DecodeLi' + 'ghtmap(vec' + '4\x20color)\x20{' + '\x0d\x0a\x09return\x20' + 'color.rgb*' + 'color.a*5.' + '0;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'ec2\x20Transf' + 'ormUV(vec2' + '\x20texcoord,' + 'vec4\x20tilin' + 'gOffset)\x20{' + '\x0d\x0a\x09vec2\x20tr' + 'ansTexcoor' + 'd=vec2(tex' + 'coord.x,te' + 'xcoord.y-1' + '.0)*tiling' + 'Offset.xy+' + 'vec2(tilin' + 'gOffset.z,' + '-tilingOff' + 'set.w);\x0d\x0a\x09' + 'transTexco' + 'ord.y+=1.0' + ';\x0d\x0a\x09return' + '\x20transTexc' + 'oord;\x0d\x0a}\x0d\x0a' + '\x0d\x0avec4\x20rem' + 'apGLPositi' + 'onZ(vec4\x20p' + 'osition)\x20{' + '\x0d\x0a\x09positio' + 'n.z=positi' + 'on.z\x20*\x202.0' + '\x20-\x20positio' + 'n.w;\x0d\x0a\x09ret' + 'urn\x20positi' + 'on;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'mat3\x20inver' + 'se(mat3\x20m)' + '\x20{\x0d\x0a\x20\x20floa' + 't\x20a00\x20=\x20m[' + '0][0],\x20a01' + '\x20=\x20m[0][1]' + ',\x20a02\x20=\x20m[' + '0][2];\x0d\x0a\x20\x20' + 'float\x20a10\x20' + '=\x20m[1][0],' + '\x20a11\x20=\x20m[1' + '][1],\x20a12\x20' + '=\x20m[1][2];' + '\x0d\x0a\x20\x20float\x20' + 'a20\x20=\x20m[2]' + '[0],\x20a21\x20=' + '\x20m[2][1],\x20' + 'a22\x20=\x20m[2]' + '[2];\x0d\x0a\x0d\x0a\x20\x20' + 'float\x20b01\x20' + '=\x20a22\x20*\x20a1' + '1\x20-\x20a12\x20*\x20' + 'a21;\x0d\x0a\x20\x20fl' + 'oat\x20b11\x20=\x20' + '-a22\x20*\x20a10' + '\x20+\x20a12\x20*\x20a' + '20;\x0d\x0a\x20\x20flo' + 'at\x20b21\x20=\x20a' + '21\x20*\x20a10\x20-' + '\x20a11\x20*\x20a20' + ';\x0d\x0a\x0d\x0a\x20\x20flo') + ('at\x20det\x20=\x20a' + '00\x20*\x20b01\x20+' + '\x20a01\x20*\x20b11' + '\x20+\x20a02\x20*\x20b' + '21;\x0d\x0a\x0d\x0a\x20\x20r' + 'eturn\x20mat3' + '(b01,\x20(-a2' + '2\x20*\x20a01\x20+\x20' + 'a02\x20*\x20a21)' + ',\x20(a12\x20*\x20a' + '01\x20-\x20a02\x20*' + '\x20a11),\x0d\x0a\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20b11,\x20(a2' + '2\x20*\x20a00\x20-\x20' + 'a02\x20*\x20a20)' + ',\x20(-a12\x20*\x20' + 'a00\x20+\x20a02\x20' + '*\x20a10),\x0d\x0a\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20b21,\x20(-' + 'a21\x20*\x20a00\x20' + '+\x20a01\x20*\x20a2' + '0),\x20(a11\x20*' + '\x20a00\x20-\x20a01' + '\x20*\x20a10))\x20/' + '\x20det;\x0d\x0a}\x0d\x0a' + '\x0d\x0a'), _0x56d476 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0apreci' + 'sion\x20highp' + '\x20float;\x0d\x0a#' + 'else\x0d\x0aprec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'Color;\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x20\x20gl' + '_FragColor' + '\x20=\x20v_Color' + '\x20*\x20u_Color' + ';\x20\x0d\x0a}\x0d\x0a\x0d\x0a', _0x1ab2be = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0auni' + 'form\x20mat4\x20' + 'u_MvpMatri' + 'x;\x0d\x0aunifor' + 'm\x20vec4\x20u_C' + 'olor;\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Color;' + '\x0d\x0avarying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0a\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09gl_P' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20a_Posi' + 'tion;\x0d\x0a\x09v_' + 'Color=a_Co' + 'lor*u_Colo' + 'r;\x0d\x0a\x09gl_Po' + 'sition=rem' + 'apGLPositi' + 'onZ(gl_Pos' + 'ition);\x0d\x0a}', _0x5e9f89 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '\x09precision' + '\x20highp\x20int' + ';\x0d\x0a#else\x0d\x0a' + '\x09precision' + '\x20mediump\x20f' + 'loat;\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20int;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22Lighting' + '.glsl\x22;\x0d\x0a\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Diff' + 'useColor;\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(COLOR' + ')&&defined' + '(ENABLEVER' + 'TEXCOLOR)\x0d' + '\x0a\x09varying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20ALPHATES' + 'T\x0d\x0a\x09unifor' + 'm\x20float\x20u_' + 'AlphaTestV' + 'alue;\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0a#if' + 'def\x20DIFFUS' + 'EMAP\x0d\x0a\x09uni' + 'form\x20sampl' + 'er2D\x20u_Dif' + 'fuseTextur' + 'e;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a\x0d\x0a#if\x20' + 'defined(DI' + 'FFUSEMAP)|' + '|((defined' + '(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT))&&' + '(defined(S' + 'PECULARMAP' + ')||defined' + '(NORMALMAP' + ')))\x0d\x0a\x09vary' + 'ing\x20vec2\x20v' + '_Texcoord0' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'LIGHTMAP\x0d\x0a' + '\x09varying\x20v' + 'ec2\x20v_Ligh' + 'tMapUV;\x0d\x0a\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'LightMap;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#if\x20defin' + 'ed(DIRECTI' + 'ONLIGHT)||' + 'defined(PO' + 'INTLIGHT)|' + '|defined(S' + 'POTLIGHT)\x0d' + '\x0a\x09varying\x20' + 'vec3\x20v_Nor' + 'mal;\x0d\x0a\x09var' + 'ying\x20vec3\x20' + 'v_ViewDir;' + '\x20\x0d\x0a\x0d\x0a\x09unif' + 'orm\x20vec3\x20u' + '_MaterialS' + 'pecular;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Shi' + 'niness;\x0d\x0a\x0d' + '\x0a\x09#ifdef\x20L' + 'EGACYSINGL' + 'ELIGHTING\x0d' + '\x0a\x09\x09#ifdef\x20' + 'DIRECTIONL' + 'IGHT\x0d\x0a\x09\x09\x09u' + 'niform\x20Dir' + 'ectionLigh' + 't\x20u_Direct' + 'ionLight;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + ('POINTLIGHT' + '\x0d\x0a\x09\x09\x09unifo' + 'rm\x20PointLi' + 'ght\x20u_Poin' + 'tLight;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20SP' + 'OTLIGHT\x0d\x0a\x09' + '\x09\x09uniform\x20' + 'SpotLight\x20' + 'u_SpotLigh' + 't;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09unifor' + 'm\x20mat4\x20u_V' + 'iew;\x0d\x0a\x09\x09un' + 'iform\x20vec4' + '\x20u_Project' + 'ionParams;' + '\x0d\x0a\x09\x09unifor' + 'm\x20vec4\x20u_V' + 'iewport;\x0d\x0a' + '\x09\x09uniform\x20' + 'int\x20u_Dira' + 'tionLightC' + 'ount;\x0d\x0a\x09\x09u' + 'niform\x20sam' + 'pler2D\x20u_L' + 'ightBuffer' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20sampler' + '2D\x20u_Light' + 'ClusterBuf' + 'fer;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09#i' + 'fdef\x20SPECU' + 'LARMAP\x20\x0d\x0a\x09' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_SpecularT' + 'exture;\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20NORM' + 'ALMAP\x20\x0d\x0a\x09\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'NormalText' + 'ure;\x0d\x0a\x09\x09va' + 'rying\x20vec3' + '\x20v_Tangent' + ';\x0d\x0a\x09\x09varyi' + 'ng\x20vec3\x20v_' + 'Binormal;\x0d' + '\x0a\x09#endif\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#ifdef\x20FOG' + '\x0d\x0a\x09uniform' + '\x20float\x20u_F' + 'ogStart;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Fog' + 'Range;\x0d\x0a\x09u' + 'niform\x20vec' + '3\x20u_FogCol' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a\x0d\x0auni' + 'form\x20vec3\x20' + 'u_AmbientC' + 'olor;\x0d\x0a\x0d\x0a#' + 'if\x20defined' + '(POINTLIGH' + 'T)||define' + 'd(SPOTLIGH' + 'T)||define' + 'd(RECEIVES' + 'HADOW)\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_Positi' + 'onWorld;\x0d\x0a' + '#endif\x0d\x0a\x0d\x0a' + '#include\x20\x22' + 'ShadowHelp' + 'er.glsl\x22\x0d\x0a' + 'varying\x20fl' + 'oat\x20v_posV' + 'iewZ;\x0d\x0a#if' + 'def\x20RECEIV' + 'ESHADOW\x0d\x0a\x09' + '#if\x20define' + 'd(SHADOWMA' + 'P_PSSM2)||' + 'defined(SH' + 'ADOWMAP_PS' + 'SM3)\x0d\x0a\x09\x09un' + 'iform\x20mat4' + '\x20u_lightSh' + 'adowVP[4];' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#ifdef\x20S' + 'HADOWMAP_P') + ('SSM1\x20\x0d\x0a\x09\x09v' + 'arying\x20vec' + '4\x20v_lightM' + 'VPPos;\x0d\x0a\x09#' + 'endif\x0d\x0a#en' + 'dif\x0d\x0a\x0d\x0avoi' + 'd\x20main_cas' + 'tShadow()\x0d' + '\x0a{\x0d\x0a\x09//gl_' + 'FragColor=' + 'vec4(v_pos' + 'ViewZ,0.0,' + '0.0,1.0);\x0d' + '\x0a\x09gl_FragC' + 'olor=packD' + 'epth(v_pos' + 'ViewZ);\x0d\x0a\x09' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)&&defin' + 'ed(ALPHATE' + 'ST)\x0d\x0a\x09\x09flo' + 'at\x20alpha\x20=' + '\x20texture2D' + '(u_Diffuse' + 'Texture,v_' + 'Texcoord0)' + '.w;\x0d\x0a\x09\x09if(' + '\x20alpha\x20<\x20u' + '_AlphaTest' + 'Value\x20)\x0d\x0a\x09' + '\x09{\x0d\x0a\x09\x09\x09dis' + 'card;\x0d\x0a\x09\x09}' + '\x0d\x0a\x09#endif\x0d' + '\x0a}\x0d\x0avoid\x20m' + 'ain_normal' + '()\x0d\x0a{\x0d\x0a\x09ve' + 'c3\x20globalD' + 'iffuse=u_A' + 'mbientColo' + 'r;\x0d\x0a\x09#ifde' + 'f\x20LIGHTMAP' + '\x09\x0d\x0a\x09\x09globa' + 'lDiffuse\x20+' + '=\x20DecodeLi' + 'ghtmap(tex' + 'ture2D(u_L' + 'ightMap,\x20v' + '_LightMapU' + 'V));\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09\x0d\x0a\x09#' + 'if\x20defined' + '(DIRECTION' + 'LIGHT)||de' + 'fined(POIN' + 'TLIGHT)||d' + 'efined(SPO' + 'TLIGHT)\x0d\x0a\x09' + '\x09vec3\x20norm' + 'al;\x0d\x0a\x09\x09#if' + '\x20(defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT))&&d' + 'efined(NOR' + 'MALMAP)\x0d\x0a\x09' + '\x09\x09vec3\x20nor' + 'malMapSamp' + 'le\x20=\x20textu' + 're2D(u_Nor' + 'malTexture' + ',\x20v_Texcoo' + 'rd0).rgb;\x0d' + '\x0a\x09\x09\x09normal' + '\x20=\x20normali' + 'ze(NormalS' + 'ampleToWor' + 'ldSpace(no' + 'rmalMapSam' + 'ple,\x20v_Nor' + 'mal,\x20v_Tan' + 'gent,v_Bin' + 'ormal));\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09normal\x20=' + '\x20normalize' + '(v_Normal)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09vec3\x20' + 'viewDir=\x20n' + 'ormalize(v' + '_ViewDir);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09vec4\x20' + 'mainColor=' + 'u_DiffuseC' + 'olor;\x0d\x0a\x09#i') + ('fdef\x20DIFFU' + 'SEMAP\x0d\x0a\x09\x09v' + 'ec4\x20difTex' + 'Color=text' + 'ure2D(u_Di' + 'ffuseTextu' + 're,\x20v_Texc' + 'oord0);\x0d\x0a\x09' + '\x09mainColor' + '=mainColor' + '*difTexCol' + 'or;\x0d\x0a\x09#end' + 'if\x20\x0d\x0a\x09#if\x20' + 'defined(CO' + 'LOR)&&defi' + 'ned(ENABLE' + 'VERTEXCOLO' + 'R)\x0d\x0a\x09\x09main' + 'Color=main' + 'Color*v_Co' + 'lor;\x0d\x0a\x09#en' + 'dif\x20\x0d\x0a\x20\x20\x20\x20' + '\x0d\x0a\x09#ifdef\x20' + 'ALPHATEST\x0d' + '\x0a\x09\x09if(main' + 'Color.a<u_' + 'AlphaTestV' + 'alue)\x0d\x0a\x09\x09\x09' + 'discard;\x0d\x0a' + '\x09#endif\x0d\x0a\x20' + '\x20\x0d\x0a\x09\x0d\x0a\x09vec' + '3\x20diffuse\x20' + '=\x20vec3(0.0' + ');\x0d\x0a\x09vec3\x20' + 'specular=\x20' + 'vec3(0.0);' + '\x0d\x0a\x09#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09\x09vec3\x20' + 'dif,spe;\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'PECULARMAP' + '\x0d\x0a\x09\x09\x09vec3\x20' + 'gloss=text' + 'ure2D(u_Sp' + 'ecularText' + 'ure,\x20v_Tex' + 'coord0).rg' + 'b;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09#ifd' + 'ef\x20DIFFUSE' + 'MAP\x0d\x0a\x09\x09\x09\x09v' + 'ec3\x20gloss=' + 'vec3(difTe' + 'xColor.a);' + '\x0d\x0a\x09\x09\x09#else' + '\x0d\x0a\x09\x09\x09\x09vec3' + '\x20gloss=vec' + '3(1.0);\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x09#ifdef\x20L' + 'EGACYSINGL' + 'ELIGHTING\x0d' + '\x0a\x09\x09#ifdef\x20' + 'DIRECTIONL' + 'IGHT\x0d\x0a\x09\x09\x09L' + 'ayaAirBlin' + 'nPhongDiec' + 'tionLight(' + 'u_Material' + 'Specular,u' + '_Shininess' + ',normal,gl' + 'oss,viewDi' + 'r,u_Direct' + 'ionLight,d' + 'if,spe);\x0d\x0a' + '\x09\x09\x09diffuse' + '+=dif;\x0d\x0a\x09\x09' + '\x09specular+' + '=spe;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09\x09#ifdef\x20P' + 'OINTLIGHT\x0d' + '\x0a\x09\x09\x09LayaAi' + 'rBlinnPhon' + 'gPointLigh' + 't(v_Positi' + 'onWorld,u_' + 'MaterialSp' + 'ecular,u_S' + 'hininess,n' + 'ormal,glos') + ('s,viewDir,' + 'u_PointLig' + 'ht,dif,spe' + ');\x0d\x0a\x09\x09\x09dif' + 'fuse+=dif;' + '\x0d\x0a\x09\x09\x09specu' + 'lar+=spe;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x0d\x0a\x09\x09#ifde' + 'f\x20SPOTLIGH' + 'T\x0d\x0a\x09\x09\x09Laya' + 'AirBlinnPh' + 'ongSpotLig' + 'ht(v_Posit' + 'ionWorld,u' + '_MaterialS' + 'pecular,u_' + 'Shininess,' + 'normal,glo' + 'ss,viewDir' + ',u_SpotLig' + 'ht,dif,spe' + ');\x0d\x0a\x09\x09\x09dif' + 'fuse+=dif;' + '\x0d\x0a\x09\x09\x09specu' + 'lar+=spe;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09#ifdef\x20DI' + 'RECTIONLIG' + 'HT\x0d\x0a\x09\x09\x09for' + '\x20(int\x20i\x20=\x20' + '0;\x20i\x20<\x20MAX' + '_LIGHT_COU' + 'NT;\x20i++)\x20\x0d' + '\x0a\x09\x09\x09{\x0d\x0a\x09\x09\x09' + '\x09if(i\x20>=\x20u' + '_DirationL' + 'ightCount)' + '\x0d\x0a\x09\x09\x09\x09\x09bre' + 'ak;\x0d\x0a\x09\x09\x09\x09D' + 'irectionLi' + 'ght\x20direct' + 'ionLight\x20=' + '\x20getDirect' + 'ionLight(u' + '_LightBuff' + 'er,i);\x0d\x0a\x09\x09' + '\x09\x09LayaAirB' + 'linnPhongD' + 'iectionLig' + 'ht(u_Mater' + 'ialSpecula' + 'r,u_Shinin' + 'ess,normal' + ',gloss,vie' + 'wDir,direc' + 'tionLight,' + 'dif,spe);\x0d' + '\x0a\x09\x09\x09\x09diffu' + 'se+=dif;\x0d\x0a' + '\x09\x09\x09\x09specul' + 'ar+=spe;\x0d\x0a' + '\x09\x09\x09}\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09\x09#i' + 'f\x20defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09\x09\x09ivec' + '4\x20clusterI' + 'nfo\x20=getCl' + 'usterInfo(' + 'u_LightClu' + 'sterBuffer' + ',u_View,u_' + 'Viewport,\x20' + 'v_Position' + 'World,gl_F' + 'ragCoord,u' + '_Projectio' + 'nParams);\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09\x09for' + '\x20(int\x20i\x20=\x20' + '0;\x20i\x20<\x20MAX' + '_LIGHT_COU' + 'NT;\x20i++)\x20\x0d' + '\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09' + '\x09\x09\x09if(i\x20>=' + '\x20clusterIn' + 'fo.x)//Poi' + 'ntLightCou' + 'nt\x0d\x0a\x09\x09\x09\x09\x09\x09' + 'break;\x0d\x0a\x09\x09' + '\x09\x09\x09PointLi' + 'ght\x20pointL' + 'ight\x20=\x20get' + 'PointLight') + ('(u_LightBu' + 'ffer,u_Lig' + 'htClusterB' + 'uffer,clus' + 'terInfo,i)' + ';\x0d\x0a\x09\x09\x09\x09\x09La' + 'yaAirBlinn' + 'PhongPoint' + 'Light(v_Po' + 'sitionWorl' + 'd,u_Materi' + 'alSpecular' + ',u_Shinine' + 'ss,normal,' + 'gloss,view' + 'Dir,pointL' + 'ight,dif,s' + 'pe);\x0d\x0a\x09\x09\x09\x09' + '\x09diffuse+=' + 'dif;\x0d\x0a\x09\x09\x09\x09' + '\x09specular+' + '=spe;\x0d\x0a\x09\x09\x09' + '\x09}\x0d\x0a\x09\x09\x09#en' + 'dif\x0d\x0a\x09\x09\x09#i' + 'fdef\x20SPOTL' + 'IGHT\x0d\x0a\x09\x09\x09\x09' + 'for\x20(int\x20i' + '\x20=\x200;\x20i\x20<\x20' + 'MAX_LIGHT_' + 'COUNT;\x20i++' + ')\x20\x0d\x0a\x09\x09\x09\x09{\x0d' + '\x0a\x09\x09\x09\x09\x09if(i' + '\x20>=\x20cluste' + 'rInfo.y)//' + 'SpotLightC' + 'ount\x0d\x0a\x09\x09\x09\x09' + '\x09\x09break;\x0d\x0a' + '\x09\x09\x09\x09\x09SpotL' + 'ight\x20spotL' + 'ight\x20=\x20get' + 'SpotLight(' + 'u_LightBuf' + 'fer,u_Ligh' + 'tClusterBu' + 'ffer,clust' + 'erInfo,i);' + '\x0d\x0a\x09\x09\x09\x09\x09Lay' + 'aAirBlinnP' + 'hongSpotLi' + 'ght(v_Posi' + 'tionWorld,' + 'u_Material' + 'Specular,u' + '_Shininess' + ',normal,gl' + 'oss,viewDi' + 'r,spotLigh' + 't,dif,spe)' + ';\x0d\x0a\x09\x09\x09\x09\x09di' + 'ffuse+=dif' + ';\x0d\x0a\x09\x09\x09\x09\x09sp' + 'ecular+=sp' + 'e;\x0d\x0a\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09#endif' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09#ifdef' + '\x20RECEIVESH' + 'ADOW\x0d\x0a\x09\x09fl' + 'oat\x20shadow' + 'Value\x20=\x201.' + '0;\x0d\x0a\x09\x09#ifd' + 'ef\x20SHADOWM' + 'AP_PSSM3\x0d\x0a' + '\x09\x09\x09shadowV' + 'alue\x20=\x20get' + 'ShadowPSSM' + '3(u_shadow' + 'Map1,u_sha' + 'dowMap2,u_' + 'shadowMap3' + ',u_lightSh' + 'adowVP,u_s' + 'hadowPSSMD' + 'istance,u_' + 'shadowPCFo' + 'ffset,v_Po' + 'sitionWorl' + 'd,v_posVie' + 'wZ,0.001);' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20SHADOWMAP' + '_PSSM2\x0d\x0a\x09\x09' + '\x09shadowVal' + 'ue\x20=\x20getSh' + 'adowPSSM2(' + 'u_shadowMa' + 'p1,u_shado' + 'wMap2,u_li') + ('ghtShadowV' + 'P,u_shadow' + 'PSSMDistan' + 'ce,u_shado' + 'wPCFoffset' + ',v_Positio' + 'nWorld,v_p' + 'osViewZ,0.' + '001);\x0d\x0a\x09\x09#' + 'endif\x20\x0d\x0a\x09\x09' + '#ifdef\x20SHA' + 'DOWMAP_PSS' + 'M1\x0d\x0a\x09\x09\x09sha' + 'dowValue\x20=' + '\x20getShadow' + 'PSSM1(u_sh' + 'adowMap1,v' + '_lightMVPP' + 'os,u_shado' + 'wPSSMDista' + 'nce,u_shad' + 'owPCFoffse' + 't,v_posVie' + 'wZ,0.001);' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09gl_Fra' + 'gColor\x20=ve' + 'c4(mainCol' + 'or.rgb*(gl' + 'obalDiffus' + 'e\x20+\x20diffus' + 'e*shadowVa' + 'lue),mainC' + 'olor.a);\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'gl_FragCol' + 'or\x20=vec4(m' + 'ainColor.r' + 'gb*(global' + 'Diffuse\x20+\x20' + 'diffuse),m' + 'ainColor.a' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09#if\x20' + 'defined(DI' + 'RECTIONLIG' + 'HT)||defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)\x0d\x0a\x09\x09#i' + 'fdef\x20RECEI' + 'VESHADOW\x0d\x0a' + '\x09\x09\x09gl_Frag' + 'Color.rgb+' + '=specular*' + 'shadowValu' + 'e;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09gl_F' + 'ragColor.r' + 'gb+=specul' + 'ar;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#end' + 'if\x0d\x0a\x09\x20\x20\x0d\x0a\x09' + '#ifdef\x20FOG' + '\x0d\x0a\x09\x09float\x20' + 'lerpFact=c' + 'lamp((1.0/' + 'gl_FragCoo' + 'rd.w-u_Fog' + 'Start)/u_F' + 'ogRange,0.' + '0,1.0);\x0d\x0a\x09' + '\x09gl_FragCo' + 'lor.rgb=mi' + 'x(gl_FragC' + 'olor.rgb,u' + '_FogColor,' + 'lerpFact);' + '\x0d\x0a\x09#endif\x0d' + '\x0a}\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09#ifdef\x20' + 'CASTSHADOW' + '\x09\x09\x0d\x0a\x09\x09main' + '_castShado' + 'w();\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09main' + '_normal();' + '\x0d\x0a\x09#endif\x20' + '\x20\x0d\x0a}\x0d\x0a\x0d\x0a'), _0x2f6792 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0a\x0d\x0a#' + 'ifdef\x20GPU_' + 'INSTANCE\x0d\x0a' + '\x09attribute' + '\x20mat4\x20a_Mv' + 'pMatrix;\x0d\x0a' + '#else\x0d\x0a\x09un' + 'iform\x20mat4' + '\x20u_MvpMatr' + 'ix;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a\x0d\x0a#if' + '\x20defined(D' + 'IFFUSEMAP)' + '||((define' + 'd(DIRECTIO' + 'NLIGHT)||d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT))&' + '&(defined(' + 'SPECULARMA' + 'P)||define' + 'd(NORMALMA' + 'P)))||(def' + 'ined(LIGHT' + 'MAP)&&defi' + 'ned(UV))\x0d\x0a' + '\x09attribute' + '\x20vec2\x20a_Te' + 'xcoord0;\x0d\x0a' + '\x09varying\x20v' + 'ec2\x20v_Texc' + 'oord0;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'LIGHTMAP)&' + '&defined(U' + 'V1)\x0d\x0a\x09attr' + 'ibute\x20vec2' + '\x20a_Texcoor' + 'd1;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20LIGHTMAP' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Li' + 'ghtmapScal' + 'eOffset;\x0d\x0a' + '\x09varying\x20v' + 'ec2\x20v_Ligh' + 'tMapUV;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20COLO' + 'R\x0d\x0a\x09attrib' + 'ute\x20vec4\x20a' + '_Color;\x0d\x0a\x09' + 'varying\x20ve' + 'c4\x20v_Color' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'BONE\x0d\x0a\x09con' + 'st\x20int\x20c_M' + 'axBoneCoun' + 't\x20=\x2024;\x0d\x0a\x09' + 'attribute\x20' + 'vec4\x20a_Bon' + 'eIndices;\x0d' + '\x0a\x09attribut' + 'e\x20vec4\x20a_B' + 'oneWeights' + ';\x0d\x0a\x09unifor' + 'm\x20mat4\x20u_B' + 'ones[c_Max' + 'BoneCount]' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09attrib' + 'ute\x20vec3\x20a' + '_Normal;\x0d\x0a' + '\x09varying\x20v' + 'ec3\x20v_Norm' + 'al;\x20\x0d\x0a\x09uni' + 'form\x20vec3\x20' + 'u_CameraPo' + 's;\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'ViewDir;\x20\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#if\x20(defi' + ('ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + ')&&defined' + '(NORMALMAP' + ')\x0d\x0a\x09attrib' + 'ute\x20vec4\x20a' + '_Tangent0;' + '\x0d\x0a\x09varying' + '\x20vec3\x20v_Ta' + 'ngent;\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_Binorm' + 'al;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||defin' + 'ed(RECEIVE' + 'SHADOW)\x0d\x0a\x09' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09\x09attribu' + 'te\x20mat4\x20a_' + 'WorldMat;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09uniform\x20m' + 'at4\x20u_Worl' + 'dMat;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09var' + 'ying\x20vec3\x20' + 'v_Position' + 'World;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0ava' + 'rying\x20floa' + 't\x20v_posVie' + 'wZ;\x0d\x0a#ifde' + 'f\x20RECEIVES' + 'HADOW\x0d\x0a\x20\x20#' + 'ifdef\x20SHAD' + 'OWMAP_PSSM' + '1\x20\x0d\x0a\x20\x20vary' + 'ing\x20vec4\x20v' + '_lightMVPP' + 'os;\x0d\x0a\x20\x20uni' + 'form\x20mat4\x20' + 'u_lightSha' + 'dowVP[4];\x0d' + '\x0a\x20\x20#endif\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Ti' + 'lingOffset' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in_castSha' + 'dow()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tion;\x0d\x0a\x09#i' + 'fdef\x20BONE\x0d' + '\x0a\x09\x09mat4\x20sk' + 'inTransfor' + 'm\x20=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'x)]\x20*\x20a_Bo' + 'neWeights.' + 'x;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.y' + ')]\x20*\x20a_Bon' + 'eWeights.y' + ';\x0d\x0a\x09\x09skinT' + 'ransform\x20+' + '=\x20u_Bones[' + 'int(a_Bone' + 'Indices.z)' + ']\x20*\x20a_Bone' + 'Weights.z;' + '\x0d\x0a\x09\x09skinTr' + 'ansform\x20+=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.w)]' + '\x20*\x20a_BoneW' + 'eights.w;\x0d' + '\x0a\x09\x09positio' + 'n=skinTran' + 'sform*a_Po') + ('sition;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09p' + 'osition=a_' + 'Position;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09gl_Pos' + 'ition\x20=\x20a_' + 'MvpMatrix\x20' + '*\x20position' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20position;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09//TOD' + 'O没考虑UV动画呢\x0d' + '\x0a\x09#if\x20defi' + 'ned(DIFFUS' + 'EMAP)&&def' + 'ined(ALPHA' + 'TEST)\x0d\x0a\x09\x09v' + '_Texcoord0' + '=a_Texcoor' + 'd0;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09gl_Po' + 'sition=rem' + 'apGLPositi' + 'onZ(gl_Pos' + 'ition);\x0d\x0a\x09' + 'v_posViewZ' + '\x20=\x20gl_Posi' + 'tion.z;\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain_normal' + '()\x0d\x0a{\x0d\x0a\x09ve' + 'c4\x20positio' + 'n;\x0d\x0a\x09#ifde' + 'f\x20BONE\x0d\x0a\x09\x09' + 'mat4\x20skinT' + 'ransform\x20=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.x)]' + '\x20*\x20a_BoneW' + 'eights.x;\x0d' + '\x0a\x09\x09skinTra' + 'nsform\x20+=\x20' + 'u_Bones[in' + 't(a_BoneIn' + 'dices.y)]\x20' + '*\x20a_BoneWe' + 'ights.y;\x0d\x0a' + '\x09\x09skinTran' + 'sform\x20+=\x20u' + '_Bones[int' + '(a_BoneInd' + 'ices.z)]\x20*' + '\x20a_BoneWei' + 'ghts.z;\x0d\x0a\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.w)]\x20*\x20' + 'a_BoneWeig' + 'hts.w;\x0d\x0a\x09\x09' + 'position=s' + 'kinTransfo' + 'rm*a_Posit' + 'ion;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09posi' + 'tion=a_Pos' + 'ition;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20GPU_I' + 'NSTANCE\x0d\x0a\x09' + '\x09gl_Positi' + 'on\x20=\x20a_Mvp' + 'Matrix\x20*\x20p' + 'osition;\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'gl_Positio' + 'n\x20=\x20u_MvpM' + 'atrix\x20*\x20po' + 'sition;\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '||defined(' + 'RECEIVESHA' + 'DOW)\x0d\x0a\x09\x09ma' + 't4\x20worldMa') + ('t;\x0d\x0a\x09\x09#ifd' + 'ef\x20GPU_INS' + 'TANCE\x0d\x0a\x09\x09\x09' + 'worldMat\x20=' + '\x20a_WorldMa' + 't;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09worl' + 'dMat\x20=\x20u_W' + 'orldMat;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + '\x0d\x0a\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)\x0d\x0a\x09\x09mat' + '3\x20worldInv' + 'Mat;\x0d\x0a\x09\x09#i' + 'fdef\x20BONE\x0d' + '\x0a\x09\x09\x09worldI' + 'nvMat=inve' + 'rse(mat3(w' + 'orldMat*sk' + 'inTransfor' + 'm));\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09wo' + 'rldInvMat=' + 'inverse(ma' + 't3(worldMa' + 't));\x0d\x0a\x09\x09#e' + 'ndif\x20\x20\x0d\x0a\x09\x09' + 'v_Normal=a' + '_Normal*wo' + 'rldInvMat;' + '\x0d\x0a\x09\x09#if\x20(d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT))&&defi' + 'ned(NORMAL' + 'MAP)\x0d\x0a\x09\x09\x09v' + '_Tangent=a' + '_Tangent0.' + 'xyz*worldI' + 'nvMat;\x0d\x0a\x09\x09' + '\x09v_Binorma' + 'l=cross(v_' + 'Normal,v_T' + 'angent)*a_' + 'Tangent0.w' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||defin' + 'ed(RECEIVE' + 'SHADOW)\x0d\x0a\x09' + '\x09v_Positio' + 'nWorld=(wo' + 'rldMat*pos' + 'ition).xyz' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09#if\x20' + 'defined(DI' + 'RECTIONLIG' + 'HT)||defin' + 'ed(POINTLI' + 'GHT)||defi' + 'ned(SPOTLI' + 'GHT)\x0d\x0a\x09\x09v_' + 'ViewDir=u_' + 'CameraPos-' + 'v_Position' + 'World;\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)||((def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + '))&&(defin' + 'ed(SPECULA' + 'RMAP)||def' + 'ined(NORMA' + 'LMAP)))\x0d\x0a\x09') + ('\x09#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09\x09\x09v_Tex' + 'coord0=Tra' + 'nsformUV(a' + '_Texcoord0' + ',u_TilingO' + 'ffset);\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09v_Texcoor' + 'd0=a_Texco' + 'ord0;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20LIGH' + 'TMAP\x0d\x0a\x09\x09#i' + 'fdef\x20SCALE' + 'OFFSETLIGH' + 'TINGMAPUV\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20UV1\x0d\x0a\x09\x09\x09\x09' + 'v_LightMap' + 'UV=vec2(a_' + 'Texcoord1.' + 'x,1.0-a_Te' + 'xcoord1.y)' + '*u_Lightma' + 'pScaleOffs' + 'et.xy+u_Li' + 'ghtmapScal' + 'eOffset.zw' + ';\x0d\x0a\x09\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09\x09v_L' + 'ightMapUV=' + 'vec2(a_Tex' + 'coord0.x,1' + '.0-a_Texco' + 'ord0.y)*u_' + 'LightmapSc' + 'aleOffset.' + 'xy+u_Light' + 'mapScaleOf' + 'fset.zw;\x0d\x0a' + '\x09\x09\x09#endif\x20' + '\x0d\x0a\x09\x09\x09v_Lig' + 'htMapUV.y=' + '1.0-v_Ligh' + 'tMapUV.y;\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'UV1\x0d\x0a\x09\x09\x09\x09v' + '_LightMapU' + 'V=a_Texcoo' + 'rd1;\x0d\x0a\x09\x09\x09#' + 'else\x0d\x0a\x09\x09\x09\x09' + 'v_LightMap' + 'UV=a_Texco' + 'ord0;\x0d\x0a\x09\x09\x09' + '#endif\x20\x0d\x0a\x09' + '\x09#endif\x20\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x09#if\x20defi' + 'ned(COLOR)' + '&&defined(' + 'ENABLEVERT' + 'EXCOLOR)\x0d\x0a' + '\x09\x09v_Color=' + 'a_Color;\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x09#ifdef\x20R' + 'ECEIVESHAD' + 'OW\x0d\x0a\x09\x09v_po' + 'sViewZ\x20=\x20g' + 'l_Position' + '.w;\x0d\x0a\x09\x09#if' + 'def\x20SHADOW' + 'MAP_PSSM1\x20' + '\x0d\x0a\x09\x09\x09v_lig' + 'htMVPPos\x20=' + '\x20u_lightSh' + 'adowVP[0]\x20' + '*\x20vec4(v_P' + 'ositionWor' + 'ld,1.0);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'gl_Positio' + 'n=remapGLP' + 'ositionZ(g' + 'l_Position' + ');\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09#ifd' + 'ef\x20CASTSHA' + 'DOW\x0d\x0a\x09\x09mai' + 'n_castShad' + 'ow();\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09mai' + 'n_normal()' + ';\x0d\x0a\x09#endif') + '\x0d\x0a}', _0x17b311 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x20\x20pre' + 'cision\x20hig' + 'hp\x20float;\x0d' + '\x0a#else\x0d\x0a\x20\x20' + 'precision\x20' + 'mediump\x20fl' + 'oat;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avary' + 'ing\x20vec4\x20v' + '_Color;\x0d\x0av' + 'arying\x20vec' + '2\x20v_Textur' + 'eCoordinat' + 'e;\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_textur' + 'e;\x0d\x0aunifor' + 'm\x20vec4\x20u_T' + 'intcolor;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09va' + 'rying\x20vec4' + '\x20v_MeshCol' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20FOG\x0d\x0a\x09un' + 'iform\x20floa' + 't\x20u_FogSta' + 'rt;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_FogRange' + ';\x0d\x0a\x09#ifdef' + '\x20ADDTIVEFO' + 'G\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09uniform' + '\x20vec3\x20u_Fo' + 'gColor;\x0d\x0a\x09' + '#endif\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x09\x0d\x0a\x09#i' + 'fdef\x20RENDE' + 'RMODE_MESH' + '\x0d\x0a\x09\x09gl_Fra' + 'gColor=v_M' + 'eshColor;\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09gl_FragCo' + 'lor=vec4(1' + '.0);\x09\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x09\x0d\x0a' + '\x09#ifdef\x20DI' + 'FFUSEMAP\x0d\x0a' + '\x09\x09#ifdef\x20T' + 'INTCOLOR\x0d\x0a' + '\x09\x09\x09gl_Frag' + 'Color*=tex' + 'ture2D(u_t' + 'exture,v_T' + 'extureCoor' + 'dinate)*u_' + 'Tintcolor*' + '2.0*v_Colo' + 'r;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09gl_F' + 'ragColor*=' + 'texture2D(' + 'u_texture,' + 'v_TextureC' + 'oordinate)' + '*v_Color;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09#ifdef\x20TI' + 'NTCOLOR\x0d\x0a\x09' + '\x09\x09gl_FragC' + 'olor*=u_Ti' + 'ntcolor*2.' + '0*v_Color;' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09gl_Fra' + 'gColor*=v_' + 'Color;\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20FO' + 'G\x0d\x0a\x09\x09float' + '\x20lerpFact=' + 'clamp((1.0' + '/gl_FragCo' + 'ord.w-u_Fo' + 'gStart)/u_' + 'FogRange,0' + '.0,1.0);\x0d\x0a' + '\x09\x09#ifdef\x20A' + 'DDTIVEFOG\x0d' + ('\x0a\x09\x09\x09gl_Fra' + 'gColor.rgb' + '=mix(gl_Fr' + 'agColor.rg' + 'b,vec3(0.0' + ',0.0,0.0),' + 'lerpFact);' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09gl_Fra' + 'gColor.rgb' + '=mix(gl_Fr' + 'agColor.rg' + 'b,u_FogCol' + 'or,lerpFac' + 't);\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#end' + 'if\x0d\x0a}'), _0x200f1c = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0a#' + 'ifdef\x20GL_F' + 'RAGMENT_PR' + 'ECISION_HI' + 'GH\x0d\x0a\x20\x20prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x20\x20p' + 'recision\x20m' + 'ediump\x20flo' + 'at;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(SPH' + 'ERHBILLBOA' + 'RD)||defin' + 'ed(STRETCH' + 'EDBILLBOAR' + 'D)||define' + 'd(HORIZONT' + 'ALBILLBOAR' + 'D)||define' + 'd(VERTICAL' + 'BILLBOARD)' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'CornerText' + 'ureCoordin' + 'ate;\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20RENDERMOD' + 'E_MESH\x0d\x0a\x09a' + 'ttribute\x20v' + 'ec3\x20a_Mesh' + 'Position;\x0d' + '\x0a\x09attribut' + 'e\x20vec4\x20a_M' + 'eshColor;\x0d' + '\x0a\x09attribut' + 'e\x20vec2\x20a_M' + 'eshTexture' + 'Coordinate' + ';\x0d\x0a\x09varyin' + 'g\x20vec4\x20v_M' + 'eshColor;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0aattribute' + '\x20vec4\x20a_Sh' + 'apePositio' + 'nStartLife' + 'Time;\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Direct' + 'ionTime;\x0d\x0a' + 'attribute\x20' + 'vec4\x20a_Sta' + 'rtColor;\x0d\x0a' + 'attribute\x20' + 'vec3\x20a_Sta' + 'rtSize;\x0d\x0aa' + 'ttribute\x20v' + 'ec3\x20a_Star' + 'tRotation0' + ';\x0d\x0aattribu' + 'te\x20float\x20a' + '_StartSpee' + 'd;\x0d\x0a#if\x20de' + 'fined(COLO' + 'ROVERLIFET' + 'IME)||defi' + 'ned(RANDOM' + 'COLOROVERL' + 'IFETIME)||' + 'defined(SI' + 'ZEOVERLIFE' + 'TIMERANDOM' + 'CURVES)||d' + 'efined(SIZ' + 'EOVERLIFET' + 'IMERANDOMC' + 'URVESSEPER' + 'ATE)||defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIMERANDOM' + 'CONSTANTS)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES)\x0d\x0a\x20\x20att' + 'ribute\x20vec' + '4\x20a_Random' + '0;\x0d\x0a#endif' + '\x0d\x0a#if\x20defi' + 'ned(TEXTUR' + 'ESHEETANIM' + 'ATIONRANDO' + 'MCURVE)||d' + ('efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCONSTAN' + 'T)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE)\x0d\x0a\x20\x20at' + 'tribute\x20ve' + 'c4\x20a_Rando' + 'm1;\x0d\x0a#endi' + 'f\x0d\x0aattribu' + 'te\x20vec3\x20a_' + 'Simulation' + 'WorldPosti' + 'on;\x0d\x0aattri' + 'bute\x20vec4\x20' + 'a_Simulati' + 'onWorldRot' + 'ation;\x0d\x0a\x0d\x0a' + 'varying\x20ve' + 'c4\x20v_Color' + ';\x0d\x0a#ifdef\x20' + 'DIFFUSEMAP' + '\x0d\x0a\x09varying' + '\x20vec2\x20v_Te' + 'xtureCoord' + 'inate;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0aun' + 'iform\x20floa' + 't\x20u_Curren' + 'tTime;\x0d\x0aun' + 'iform\x20vec3' + '\x20u_Gravity' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20vec3\x20u_' + 'WorldPosit' + 'ion;\x0d\x0aunif' + 'orm\x20vec4\x20u' + '_WorldRota' + 'tion;\x0d\x0auni' + 'form\x20bool\x20' + 'u_ThreeDSt' + 'artRotatio' + 'n;\x0d\x0aunifor' + 'm\x20int\x20u_Sc' + 'alingMode;' + '\x0d\x0auniform\x20' + 'vec3\x20u_Pos' + 'itionScale' + ';\x0d\x0auniform' + '\x20vec3\x20u_Si' + 'zeScale;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_View;' + '\x0d\x0auniform\x20' + 'mat4\x20u_Pro' + 'jection;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'TRETCHEDBI' + 'LLBOARD\x0d\x0a\x09' + 'uniform\x20ve' + 'c3\x20u_Camer' + 'aPos;\x0d\x0a#en' + 'dif\x0d\x0aunifo' + 'rm\x20vec3\x20u_' + 'CameraDire' + 'ction;//TO' + 'DO:只有几种广告牌' + '模式需要用\x0d\x0auni' + 'form\x20vec3\x20' + 'u_CameraUp' + ';\x0d\x0a\x0d\x0aunifo' + 'rm\x20\x20float\x20' + 'u_Stretche' + 'dBillboard' + 'LengthScal' + 'e;\x0d\x0aunifor' + 'm\x20\x20float\x20u' + '_Stretched' + 'BillboardS' + 'peedScale;' + '\x0d\x0auniform\x20' + 'int\x20u_Simu' + 'lationSpac' + 'e;\x0d\x0a\x0d\x0a#if\x20' + 'defined(VE' + 'LOCITYOVER' + 'LIFETIMECO' + 'NSTANT)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECUR' + 'VE)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMERANDOMC' + 'ONSTANT)||' + 'defined(VE') + ('LOCITYOVER' + 'LIFETIMERA' + 'NDOMCURVE)' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20int\x20\x20u_' + 'VOLSpaceTy' + 'pe;\x0d\x0a#endi' + 'f\x0d\x0a#if\x20def' + 'ined(VELOC' + 'ITYOVERLIF' + 'ETIMECONST' + 'ANT)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CONSTANT)\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec3\x20u_V' + 'OLVelocity' + 'Const;\x0d\x0a#e' + 'ndif\x0d\x0a#if\x20' + 'defined(VE' + 'LOCITYOVER' + 'LIFETIMECU' + 'RVE)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CURVE)\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_VOLV' + 'elocityGra' + 'dientX[4];' + '//x为key,y为' + '速度\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_VOLVeloc' + 'ityGradien' + 'tY[4];//x为' + 'key,y为速度\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec2\x20u_VO' + 'LVelocityG' + 'radientZ[4' + '];//x为key,' + 'y为速度\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20VELOCITYO' + 'VERLIFETIM' + 'ERANDOMCON' + 'STANT\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c3\x20u_VOLVe' + 'locityCons' + 'tMax;\x0d\x0a#en' + 'dif\x0d\x0a#ifde' + 'f\x20VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_VOLVelo' + 'cityGradie' + 'ntMaxX[4];' + '//x为key,y为' + '速度\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_VOLVeloc' + 'ityGradien' + 'tMaxY[4];/' + '/x为key,y为速' + '度\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_VOLVeloci' + 'tyGradient' + 'MaxZ[4];//' + 'x为key,y为速度' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#ifdef\x20C' + 'OLOROVERLI' + 'FETIME\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec4\x20u_Colo' + 'rOverLifeG' + 'radientCol' + 'ors[4];//x' + '为key,yzw为C' + 'olor\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_ColorO' + 'verLifeGra' + 'dientAlpha' + 's[4];//x为k' + 'ey,y为Alpha' + '\x0d\x0a#endif\x0d\x0a' + '#ifdef\x20RAN' + 'DOMCOLOROV' + 'ERLIFETIME' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec4\x20u_') + ('ColorOverL' + 'ifeGradien' + 'tColors[4]' + ';//x为key,y' + 'zw为Color\x0d\x0a' + '\x20\x20uniform\x20' + '\x20vec2\x20u_Co' + 'lorOverLif' + 'eGradientA' + 'lphas[4];/' + '/x为key,y为A' + 'lpha\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '4\x20u_MaxCol' + 'orOverLife' + 'GradientCo' + 'lors[4];//' + 'x为key,yzw为' + 'Color\x0d\x0a\x20\x20u' + 'niform\x20\x20ve' + 'c2\x20u_MaxCo' + 'lorOverLif' + 'eGradientA' + 'lphas[4];/' + '/x为key,y为A' + 'lpha\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'f\x20defined(' + 'SIZEOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(SIZEOVER' + 'LIFETIMERA' + 'NDOMCURVES' + ')\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_SOLSizeGr' + 'adient[4];' + '//x为key,y为' + '尺寸\x0d\x0a#endif' + '\x0d\x0a#ifdef\x20S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVES\x0d\x0a\x20' + '\x20uniform\x20\x20' + 'vec2\x20u_SOL' + 'SizeGradie' + 'ntMax[4];/' + '/x为key,y为尺' + '寸\x0d\x0a#endif\x0d' + '\x0a#if\x20defin' + 'ed(SIZEOVE' + 'RLIFETIMEC' + 'URVESEPERA' + 'TE)||defin' + 'ed(SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE)' + '\x0d\x0a\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'SOLSizeGra' + 'dientX[4];' + '//x为key,y为' + '尺寸\x0d\x0a\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_SOLSizeG' + 'radientY[4' + '];//x为key,' + 'y为尺寸\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_SOLSiz' + 'eGradientZ' + '[4];//x为ke' + 'y,y为尺寸\x0d\x0a#e' + 'ndif\x0d\x0a#ifd' + 'ef\x20SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'SSEPERATE\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec2\x20u_S' + 'OLSizeGrad' + 'ientMaxX[4' + '];//x为key,' + 'y为尺寸\x0d\x0a\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_SOLSiz' + 'eGradientM' + 'axY[4];//x' + '为key,y为尺寸\x0d' + '\x0a\x20\x20uniform' + '\x20\x20vec2\x20u_S' + 'OLSizeGrad' + 'ientMaxZ[4' + '];//x为key,' + 'y为尺寸\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'fdef\x20ROTAT' + 'IONOVERLIF') + ('ETIME\x0d\x0a\x20\x20#' + 'if\x20defined' + '(ROTATIONO' + 'VERLIFETIM' + 'ECONSTANT)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS)\x0d\x0a\x20\x20' + '\x20\x20uniform\x20' + '\x20float\x20u_R' + 'OLAngularV' + 'elocityCon' + 'st;\x0d\x0a\x20\x20#en' + 'dif\x0d\x0a\x20\x20#if' + 'def\x20ROTATI' + 'ONOVERLIFE' + 'TIMERANDOM' + 'CONSTANTS\x0d' + '\x0a\x20\x20\x20\x20unifo' + 'rm\x20\x20float\x20' + 'u_ROLAngul' + 'arVelocity' + 'ConstMax;\x0d' + '\x0a\x20\x20#endif\x0d' + '\x0a\x20\x20#if\x20def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIMECURVE' + ')||defined' + '(ROTATIONO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VES)\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_ROLA' + 'ngularVelo' + 'cityGradie' + 'nt[4];//x为' + 'key,y为旋转\x0d\x0a' + '\x20\x20#endif\x0d\x0a' + '\x20\x20#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S\x0d\x0a\x20\x20\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_ROLAngu' + 'larVelocit' + 'yGradientM' + 'ax[4];//x为' + 'key,y为旋转\x0d\x0a' + '\x20\x20#endif\x0d\x0a' + '#endif\x0d\x0a#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMESEPER' + 'ATE\x0d\x0a\x20\x20#if' + '\x20defined(R' + 'OTATIONOVE' + 'RLIFETIMEC' + 'ONSTANT)||' + 'defined(RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NTS)\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec3\x20u_ROLA' + 'ngularVelo' + 'cityConstS' + 'eprarate;\x0d' + '\x0a\x20\x20#endif\x0d' + '\x0a\x20\x20#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCONS' + 'TANTS\x0d\x0a\x20\x20\x20' + '\x20uniform\x20\x20' + 'vec3\x20u_ROL' + 'AngularVel' + 'ocityConst' + 'MaxSeprara' + 'te;\x0d\x0a\x20\x20#en' + 'dif\x0d\x0a\x20\x20#if' + '\x20defined(R' + 'OTATIONOVE' + 'RLIFETIMEC' + 'URVE)||def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIMERANDO' + 'MCURVES)\x0d\x0a' + '\x20\x20\x20\x20unifor' + 'm\x20\x20vec2\x20u_' + 'ROLAngular' + 'VelocityGr' + 'adientX[4]' + ';\x0d\x0a\x20\x20\x20\x20uni') + ('form\x20\x20vec2' + '\x20u_ROLAngu' + 'larVelocit' + 'yGradientY' + '[4];\x0d\x0a\x20\x20\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntZ[4];\x0d\x0a\x20' + '\x20#endif\x0d\x0a\x20' + '\x20#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCURVES' + '\x0d\x0a\x20\x20\x20\x20unif' + 'orm\x20\x20vec2\x20' + 'u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xX[4];\x0d\x0a\x20\x20' + '\x20\x20uniform\x20' + '\x20vec2\x20u_RO' + 'LAngularVe' + 'locityGrad' + 'ientMaxY[4' + '];\x0d\x0a\x20\x20\x20\x20un' + 'iform\x20\x20vec' + '2\x20u_ROLAng' + 'ularVeloci' + 'tyGradient' + 'MaxZ[4];\x0d\x0a' + '\x09uniform\x20\x20' + 'vec2\x20u_ROL' + 'AngularVel' + 'ocityGradi' + 'entMaxW[4]' + ';\x0d\x0a\x20\x20#endi' + 'f\x0d\x0a#endif\x0d' + '\x0a\x0d\x0a#if\x20def' + 'ined(TEXTU' + 'RESHEETANI' + 'MATIONCURV' + 'E)||define' + 'd(TEXTURES' + 'HEETANIMAT' + 'IONRANDOMC' + 'URVE)\x0d\x0a\x20\x20u' + 'niform\x20\x20fl' + 'oat\x20u_TSAC' + 'ycles;\x0d\x0a\x20\x20' + 'uniform\x20\x20v' + 'ec2\x20u_TSAS' + 'ubUVLength' + ';\x0d\x0a\x20\x20unifo' + 'rm\x20\x20vec2\x20u' + '_TSAGradie' + 'ntUVs[4];/' + '/x为key,y为f' + 'rame\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20TEXTURESH' + 'EETANIMATI' + 'ONRANDOMCU' + 'RVE\x0d\x0a\x20\x20uni' + 'form\x20\x20vec2' + '\x20u_TSAMaxG' + 'radientUVs' + '[4];//x为ke' + 'y,y为frame\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Ti' + 'lingOffset' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0avec3\x20ro' + 'tationByEu' + 'ler(in\x20vec' + '3\x20vector,i' + 'n\x20vec3\x20rot' + ')\x0d\x0a{\x0d\x0a\x09flo' + 'at\x20halfRol' + 'l\x20=\x20rot.z\x20' + '*\x200.5;\x0d\x0a\x20\x20' + '\x20\x20float\x20ha' + 'lfPitch\x20=\x20' + 'rot.x\x20*\x200.' + '5;\x0d\x0a\x09float' + '\x20halfYaw\x20=' + '\x20rot.y\x20*\x200' + '.5;\x0d\x0a\x0d\x0a\x09fl' + 'oat\x20sinRol' + 'l\x20=\x20sin(ha' + 'lfRoll);\x0d\x0a' + '\x09float\x20cos' + 'Roll\x20=\x20cos' + '(halfRoll)' + ';\x0d\x0a\x09float\x20') + ('sinPitch\x20=' + '\x20sin(halfP' + 'itch);\x0d\x0a\x09f' + 'loat\x20cosPi' + 'tch\x20=\x20cos(' + 'halfPitch)' + ';\x0d\x0a\x09float\x20' + 'sinYaw\x20=\x20s' + 'in(halfYaw' + ');\x0d\x0a\x09float' + '\x20cosYaw\x20=\x20' + 'cos(halfYa' + 'w);\x0d\x0a\x0d\x0a\x09fl' + 'oat\x20quaX\x20=' + '\x20(cosYaw\x20*' + '\x20sinPitch\x20' + '*\x20cosRoll)' + '\x20+\x20(sinYaw' + '\x20*\x20cosPitc' + 'h\x20*\x20sinRol' + 'l);\x0d\x0a\x09floa' + 't\x20quaY\x20=\x20(' + 'sinYaw\x20*\x20c' + 'osPitch\x20*\x20' + 'cosRoll)\x20-' + '\x20(cosYaw\x20*' + '\x20sinPitch\x20' + '*\x20sinRoll)' + ';\x0d\x0a\x09float\x20' + 'quaZ\x20=\x20(co' + 'sYaw\x20*\x20cos' + 'Pitch\x20*\x20si' + 'nRoll)\x20-\x20(' + 'sinYaw\x20*\x20s' + 'inPitch\x20*\x20' + 'cosRoll);\x0d' + '\x0a\x09float\x20qu' + 'aW\x20=\x20(cosY' + 'aw\x20*\x20cosPi' + 'tch\x20*\x20cosR' + 'oll)\x20+\x20(si' + 'nYaw\x20*\x20sin' + 'Pitch\x20*\x20si' + 'nRoll);\x0d\x0a\x09' + '\x0d\x0a\x09//vec4\x20' + 'q=vec4(qua' + 'X,quaY,qua' + 'Z,quaW);\x0d\x0a' + '\x09//vec3\x20te' + 'mp\x20=\x20cross' + '(q.xyz,\x20ve' + 'ctor)\x20+\x20q.' + 'w\x20*\x20vector' + ';\x0d\x0a\x09//retu' + 'rn\x20(cross(' + 'temp,\x20-q.x' + 'yz)\x20+\x20dot(' + 'q.xyz,vect' + 'or)\x20*\x20q.xy' + 'z\x20+\x20q.w\x20*\x20' + 'temp);\x0d\x0a\x09\x0d' + '\x0a\x09float\x20x\x20' + '=\x20quaX\x20+\x20q' + 'uaX;\x0d\x0a\x20\x20\x20\x20' + 'float\x20y\x20=\x20' + 'quaY\x20+\x20qua' + 'Y;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20z\x20=\x20qu' + 'aZ\x20+\x20quaZ;' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20wx\x20=\x20qua' + 'W\x20*\x20x;\x0d\x0a\x20\x20' + '\x20\x20float\x20wy' + '\x20=\x20quaW\x20*\x20' + 'y;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20wz\x20=\x20q' + 'uaW\x20*\x20z;\x0d\x0a' + '\x09float\x20xx\x20' + '=\x20quaX\x20*\x20x' + ';\x0d\x0a\x20\x20\x20\x20flo' + 'at\x20xy\x20=\x20qu' + 'aX\x20*\x20y;\x0d\x0a\x09' + 'float\x20xz\x20=' + '\x20quaX\x20*\x20z;' + '\x0d\x0a\x20\x20\x20\x20floa' + 't\x20yy\x20=\x20qua' + 'Y\x20*\x20y;\x0d\x0a\x20\x20' + '\x20\x20float\x20yz' + '\x20=\x20quaY\x20*\x20' + 'z;\x0d\x0a\x20\x20\x20\x20fl' + 'oat\x20zz\x20=\x20q' + 'uaZ\x20*\x20z;\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20vec3(((' + 'vector.x\x20*' + '\x20((1.0\x20-\x20y' + 'y)\x20-\x20zz))\x20' + '+\x20(vector.' + 'y\x20*\x20(xy\x20-\x20' + 'wz)))\x20+\x20(v') + ('ector.z\x20*\x20' + '(xz\x20+\x20wy))' + ',\x0d\x0a\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20(' + '(vector.x\x20' + '*\x20(xy\x20+\x20wz' + '))\x20+\x20(vect' + 'or.y\x20*\x20((1' + '.0\x20-\x20xx)\x20-' + '\x20zz)))\x20+\x20(' + 'vector.z\x20*' + '\x20(yz\x20-\x20wx)' + '),\x0d\x0a\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '((vector.x' + '\x20*\x20(xz\x20-\x20w' + 'y))\x20+\x20(vec' + 'tor.y\x20*\x20(y' + 'z\x20+\x20wx)))\x20' + '+\x20(vector.' + 'z\x20*\x20((1.0\x20' + '-\x20xx)\x20-\x20yy' + ')));\x0d\x0a\x09\x0d\x0a}' + '\x0d\x0a\x0d\x0a//假定ax' + 'is已经归一化\x0d\x0av' + 'ec3\x20rotati' + 'onByAxis(i' + 'n\x20vec3\x20vec' + 'tor,in\x20vec' + '3\x20axis,\x20in' + '\x20float\x20ang' + 'le)\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20halfA' + 'ngle\x20=\x20ang' + 'le\x20*\x200.5;\x0d' + '\x0a\x09float\x20si' + 'n\x20=\x20sin(ha' + 'lfAngle);\x0d' + '\x0a\x09\x0d\x0a\x09float' + '\x20quaX\x20=\x20ax' + 'is.x\x20*\x20sin' + ';\x0d\x0a\x09float\x20' + 'quaY\x20=\x20axi' + 's.y\x20*\x20sin;' + '\x0d\x0a\x09float\x20q' + 'uaZ\x20=\x20axis' + '.z\x20*\x20sin;\x0d' + '\x0a\x09float\x20qu' + 'aW\x20=\x20cos(h' + 'alfAngle);' + '\x0d\x0a\x09\x0d\x0a\x09//ve' + 'c4\x20q=vec4(' + 'quaX,quaY,' + 'quaZ,quaW)' + ';\x0d\x0a\x09//vec3' + '\x20temp\x20=\x20cr' + 'oss(q.xyz,' + '\x20vector)\x20+' + '\x20q.w\x20*\x20vec' + 'tor;\x0d\x0a\x09//r' + 'eturn\x20(cro' + 'ss(temp,\x20-' + 'q.xyz)\x20+\x20d' + 'ot(q.xyz,v' + 'ector)\x20*\x20q' + '.xyz\x20+\x20q.w' + '\x20*\x20temp);\x0d' + '\x0a\x09\x0d\x0a\x09float' + '\x20x\x20=\x20quaX\x20' + '+\x20quaX;\x0d\x0a\x20' + '\x20\x20\x20float\x20y' + '\x20=\x20quaY\x20+\x20' + 'quaY;\x0d\x0a\x20\x20\x20' + '\x20float\x20z\x20=' + '\x20quaZ\x20+\x20qu' + 'aZ;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20wx\x20=\x20' + 'quaW\x20*\x20x;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20wy\x20=\x20quaW' + '\x20*\x20y;\x0d\x0a\x20\x20\x20' + '\x20float\x20wz\x20' + '=\x20quaW\x20*\x20z' + ';\x0d\x0a\x09float\x20' + 'xx\x20=\x20quaX\x20' + '*\x20x;\x0d\x0a\x20\x20\x20\x20' + 'float\x20xy\x20=' + '\x20quaX\x20*\x20y;' + '\x0d\x0a\x09float\x20x' + 'z\x20=\x20quaX\x20*' + '\x20z;\x0d\x0a\x20\x20\x20\x20f' + 'loat\x20yy\x20=\x20' + 'quaY\x20*\x20y;\x0d' + '\x0a\x20\x20\x20\x20float' + '\x20yz\x20=\x20quaY' + '\x20*\x20z;\x0d\x0a\x20\x20\x20' + '\x20float\x20zz\x20' + '=\x20quaZ\x20*\x20z' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20vec3') + ('(((vector.' + 'x\x20*\x20((1.0\x20' + '-\x20yy)\x20-\x20zz' + '))\x20+\x20(vect' + 'or.y\x20*\x20(xy' + '\x20-\x20wz)))\x20+' + '\x20(vector.z' + '\x20*\x20(xz\x20+\x20w' + 'y)),\x0d\x0a\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20((vector' + '.x\x20*\x20(xy\x20+' + '\x20wz))\x20+\x20(v' + 'ector.y\x20*\x20' + '((1.0\x20-\x20xx' + ')\x20-\x20zz)))\x20' + '+\x20(vector.' + 'z\x20*\x20(yz\x20-\x20' + 'wx)),\x0d\x0a\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20((vecto' + 'r.x\x20*\x20(xz\x20' + '-\x20wy))\x20+\x20(' + 'vector.y\x20*' + '\x20(yz\x20+\x20wx)' + '))\x20+\x20(vect' + 'or.z\x20*\x20((1' + '.0\x20-\x20xx)\x20-' + '\x20yy)));\x0d\x0a\x09' + '\x0d\x0a}\x0d\x0a\x0d\x0avec' + '3\x20rotation' + 'ByQuaterni' + 'ons(in\x20vec' + '3\x20v,in\x20vec' + '4\x20q)\x20\x0d\x0a{\x0d\x0a' + '\x09return\x20v\x20' + '+\x202.0\x20*\x20cr' + 'oss(q.xyz,' + '\x20cross(q.x' + 'yz,\x20v)\x20+\x20q' + '.w\x20*\x20v);\x0d\x0a' + '}\x0d\x0a\x0d\x0a\x20\x0d\x0a#i' + 'f\x20defined(' + 'VELOCITYOV' + 'ERLIFETIME' + 'CURVE)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCURVE)||' + 'defined(SI' + 'ZEOVERLIFE' + 'TIMECURVE)' + '||defined(' + 'SIZEOVERLI' + 'FETIMECURV' + 'ESEPERATE)' + '||defined(' + 'SIZEOVERLI' + 'FETIMERAND' + 'OMCURVES)|' + '|defined(S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVESSEP' + 'ERATE)\x0d\x0afl' + 'oat\x20getCur' + 'ValueFromG' + 'radientFlo' + 'at(in\x20vec2' + '\x20gradientN' + 'umbers[4],' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20curVa' + 'lue;\x0d\x0a\x09for' + '(int\x20i=1;i' + '<4;i++)\x0d\x0a\x09' + '{\x0d\x0a\x09\x09vec2\x20' + 'gradientNu' + 'mber=gradi' + 'entNumbers' + '[i];\x0d\x0a\x09\x09fl' + 'oat\x20key=gr' + 'adientNumb' + 'er.x;\x0d\x0a\x09\x09i' + 'f(key>=nor' + 'malizedAge' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09vec2\x20last' + 'GradientNu' + 'mber=gradi' + 'entNumbers' + '[i-1];\x0d\x0a\x09\x09' + '\x09float\x20las' + 'tKey=lastG' + 'radientNum' + 'ber.x;\x0d\x0a\x09\x09' + '\x09float\x20age') + ('=(normaliz' + 'edAge-last' + 'Key)/(key-' + 'lastKey);\x0d' + '\x0a\x09\x09\x09curVal' + 'ue=mix(las' + 'tGradientN' + 'umber.y,gr' + 'adientNumb' + 'er.y,age);' + '\x0d\x0a\x09\x09\x09break' + ';\x0d\x0a\x09\x09}\x0d\x0a\x09}' + '\x0d\x0a\x09return\x20' + 'curValue;\x0d' + '\x0a}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE)||defi' + 'ned(ROTATI' + 'ONOVERLIFE' + 'TIMECURVE)' + '||defined(' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES)\x0d\x0afloat' + '\x20getTotalV' + 'alueFromGr' + 'adientFloa' + 't(in\x20vec2\x20' + 'gradientNu' + 'mbers[4],i' + 'n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20totalV' + 'alue=0.0;\x0d' + '\x0a\x09for(int\x20' + 'i=1;i<4;i+' + '+)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'vec2\x20gradi' + 'entNumber=' + 'gradientNu' + 'mbers[i];\x0d' + '\x0a\x09\x09float\x20k' + 'ey=gradien' + 'tNumber.x;' + '\x0d\x0a\x09\x09vec2\x20l' + 'astGradien' + 'tNumber=gr' + 'adientNumb' + 'ers[i-1];\x0d' + '\x0a\x09\x09float\x20l' + 'astValue=l' + 'astGradien' + 'tNumber.y;' + '\x0d\x0a\x09\x09\x0d\x0a\x09\x09if' + '(key>=norm' + 'alizedAge)' + '{\x0d\x0a\x09\x09\x09floa' + 't\x20lastKey=' + 'lastGradie' + 'ntNumber.x' + ';\x0d\x0a\x09\x09\x09floa' + 't\x20age=(nor' + 'malizedAge' + '-lastKey)/' + '(key-lastK' + 'ey);\x0d\x0a\x09\x09\x09t' + 'otalValue+' + '=(lastValu' + 'e+mix(last' + 'Value,grad' + 'ientNumber' + '.y,age))/2' + '.0*a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.w*(norma' + 'lizedAge-l' + 'astKey);\x0d\x0a' + '\x09\x09\x09break;\x0d' + '\x0a\x09\x09}\x0d\x0a\x09\x09el' + 'se{\x0d\x0a\x09\x09\x09to' + 'talValue+=' + '(lastValue' + '+gradientN' + 'umber.y)/2' + '.0*a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.w*(key-l' + 'astGradien' + 'tNumber.x)') + (';\x0d\x0a\x09\x09}\x0d\x0a\x09}' + '\x0d\x0a\x09return\x20' + 'totalValue' + ';\x0d\x0a}\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(CO' + 'LOROVERLIF' + 'ETIME)||de' + 'fined(RAND' + 'OMCOLOROVE' + 'RLIFETIME)' + '\x0d\x0avec4\x20get' + 'ColorFromG' + 'radient(in' + '\x20vec2\x20grad' + 'ientAlphas' + '[4],in\x20vec' + '4\x20gradient' + 'Colors[4],' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x0d\x0a\x09v' + 'ec4\x20overTi' + 'meColor;\x0d\x0a' + '\x09for(int\x20i' + '=1;i<4;i++' + ')\x0d\x0a\x09{\x0d\x0a\x09\x09v' + 'ec2\x20gradie' + 'ntAlpha=gr' + 'adientAlph' + 'as[i];\x0d\x0a\x09\x09' + 'float\x20alph' + 'aKey=gradi' + 'entAlpha.x' + ';\x0d\x0a\x09\x09if(al' + 'phaKey>=no' + 'rmalizedAg' + 'e)\x0d\x0a\x09\x09{\x0d\x0a\x09' + '\x09\x09vec2\x20las' + 'tGradientA' + 'lpha=gradi' + 'entAlphas[' + 'i-1];\x0d\x0a\x09\x09\x09' + 'float\x20last' + 'AlphaKey=l' + 'astGradien' + 'tAlpha.x;\x0d' + '\x0a\x09\x09\x09float\x20' + 'age=(norma' + 'lizedAge-l' + 'astAlphaKe' + 'y)/(alphaK' + 'ey-lastAlp' + 'haKey);\x0d\x0a\x09' + '\x09\x09overTime' + 'Color.a=mi' + 'x(lastGrad' + 'ientAlpha.' + 'y,gradient' + 'Alpha.y,ag' + 'e);\x0d\x0a\x09\x09\x09br' + 'eak;\x0d\x0a\x09\x09}\x0d' + '\x0a\x09}\x0d\x0a\x09\x0d\x0a\x09f' + 'or(int\x20i=1' + ';i<4;i++)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09vec' + '4\x20gradient' + 'Color=grad' + 'ientColors' + '[i];\x0d\x0a\x09\x09fl' + 'oat\x20colorK' + 'ey=gradien' + 'tColor.x;\x0d' + '\x0a\x09\x09if(colo' + 'rKey>=norm' + 'alizedAge)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'vec4\x20lastG' + 'radientCol' + 'or=gradien' + 'tColors[i-' + '1];\x0d\x0a\x09\x09\x09fl' + 'oat\x20lastCo' + 'lorKey=las' + 'tGradientC' + 'olor.x;\x0d\x0a\x09' + '\x09\x09float\x20ag' + 'e=(normali' + 'zedAge-las' + 'tColorKey)' + '/(colorKey' + '-lastColor' + 'Key);\x0d\x0a\x09\x09\x09' + 'overTimeCo' + 'lor.rgb=mi' + 'x(gradient' + 'Colors[i-1' + '].yzw,grad' + 'ientColor.' + 'yzw,age);\x0d') + ('\x0a\x09\x09\x09break;' + '\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d' + '\x0a\x09return\x20o' + 'verTimeCol' + 'or;\x0d\x0a}\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a\x0d\x0a' + '#if\x20define' + 'd(TEXTURES' + 'HEETANIMAT' + 'IONCURVE)|' + '|defined(T' + 'EXTURESHEE' + 'TANIMATION' + 'RANDOMCURV' + 'E)\x0d\x0afloat\x20' + 'getFrameFr' + 'omGradient' + '(in\x20vec2\x20g' + 'radientFra' + 'mes[4],in\x20' + 'float\x20norm' + 'alizedAge)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20overTime' + 'Frame;\x0d\x0a\x09f' + 'or(int\x20i=1' + ';i<4;i++)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09vec' + '2\x20gradient' + 'Frame=grad' + 'ientFrames' + '[i];\x0d\x0a\x09\x09fl' + 'oat\x20key=gr' + 'adientFram' + 'e.x;\x0d\x0a\x09\x09if' + '(key>=norm' + 'alizedAge)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'vec2\x20lastG' + 'radientFra' + 'me=gradien' + 'tFrames[i-' + '1];\x0d\x0a\x09\x09\x09fl' + 'oat\x20lastKe' + 'y=lastGrad' + 'ientFrame.' + 'x;\x0d\x0a\x09\x09\x09flo' + 'at\x20age=(no' + 'rmalizedAg' + 'e-lastKey)' + '/(key-last' + 'Key);\x0d\x0a\x09\x09\x09' + 'overTimeFr' + 'ame=mix(la' + 'stGradient' + 'Frame.y,gr' + 'adientFram' + 'e.y,age);\x0d' + '\x0a\x09\x09\x09break;' + '\x0d\x0a\x09\x09}\x0d\x0a\x09}\x0d' + '\x0a\x09return\x20f' + 'loor(overT' + 'imeFrame);' + '\x0d\x0a}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#if\x20d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECON' + 'STANT)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANT)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCURVE)\x0d' + '\x0avec3\x20comp' + 'uteParticl' + 'eLifeVeloc' + 'ity(in\x20flo' + 'at\x20normali' + 'zedAge)\x0d\x0a{' + '\x0d\x0a\x20\x20vec3\x20o' + 'utLifeVelo' + 'city;\x0d\x0a\x20\x20#' + 'ifdef\x20VELO' + 'CITYOVERLI' + 'FETIMECONS' + 'TANT\x0d\x0a\x09\x20ou' + 'tLifeVeloc' + 'ity=u_VOLV' + 'elocityCon' + 'st;\x20\x0d\x0a\x20\x20#e' + 'ndif\x0d\x0a\x20\x20#i' + 'fdef\x20VELOC') + ('ITYOVERLIF' + 'ETIMECURVE' + '\x0d\x0a\x20\x20\x20\x20\x20out' + 'LifeVeloci' + 'ty=\x20vec3(g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientX' + ',normalize' + 'dAge),getC' + 'urValueFro' + 'mGradientF' + 'loat(u_VOL' + 'VelocityGr' + 'adientY,no' + 'rmalizedAg' + 'e),getCurV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entZ,norma' + 'lizedAge))' + ';\x0d\x0a\x20\x20#endi' + 'f\x0d\x0a\x20\x20#ifde' + 'f\x20VELOCITY' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANT\x0d\x0a\x09\x20' + 'outLifeVel' + 'ocity=mix(' + 'u_VOLVeloc' + 'ityConst,u' + '_VOLVeloci' + 'tyConstMax' + ',vec3(a_Ra' + 'ndom1.y,a_' + 'Random1.z,' + 'a_Random1.' + 'w));\x20\x0d\x0a\x20\x20#' + 'endif\x0d\x0a\x20\x20#' + 'ifdef\x20VELO' + 'CITYOVERLI' + 'FETIMERAND' + 'OMCURVE\x0d\x0a\x20' + '\x20\x20\x20\x20outLif' + 'eVelocity=' + 'vec3(mix(g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientX' + ',normalize' + 'dAge),getC' + 'urValueFro' + 'mGradientF' + 'loat(u_VOL' + 'VelocityGr' + 'adientMaxX' + ',normalize' + 'dAge),a_Ra' + 'ndom1.y),\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20m' + 'ix(getCurV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entY,norma' + 'lizedAge),' + 'getCurValu' + 'eFromGradi' + 'entFloat(u' + '_VOLVeloci' + 'tyGradient' + 'MaxY,norma' + 'lizedAge),' + 'a_Random1.' + 'z),\x0d\x0a\x09\x09\x09\x09\x09' + '\x20mix(getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_VOLV' + 'elocityGra' + 'dientZ,nor' + 'malizedAge' + '),getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntMaxZ,nor' + 'malizedAge' + '),a_Random' + '1.w));\x0d\x0a\x20\x20' + '#endif\x0d\x0a\x09\x09') + ('\x09\x09\x09\x0d\x0a\x20\x20ret' + 'urn\x20outLif' + 'eVelocity;' + '\x0d\x0a}\x20\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avec3' + '\x20computePa' + 'rticlePosi' + 'tion(in\x20ve' + 'c3\x20startVe' + 'locity,\x20in' + '\x20vec3\x20life' + 'Velocity,i' + 'n\x20float\x20ag' + 'e,in\x20float' + '\x20normalize' + 'dAge,vec3\x20' + 'gravityVel' + 'ocity,vec4' + '\x20worldRota' + 'tion)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20vec3\x20st' + 'artPositio' + 'n;\x0d\x0a\x20\x20\x20vec' + '3\x20lifePosi' + 'tion;\x0d\x0a\x20\x20\x20' + '#if\x20define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MECONSTANT' + ')||defined' + '(VELOCITYO' + 'VERLIFETIM' + 'ECURVE)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCONSTAN' + 'T)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCU' + 'RVE)\x0d\x0a\x09#if' + 'def\x20VELOCI' + 'TYOVERLIFE' + 'TIMECONSTA' + 'NT\x0d\x0a\x09\x09\x20\x20st' + 'artPositio' + 'n=startVel' + 'ocity*age;' + '\x0d\x0a\x09\x09\x20\x20life' + 'Position=l' + 'ifeVelocit' + 'y*age;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09#i' + 'fdef\x20VELOC' + 'ITYOVERLIF' + 'ETIMECURVE' + '\x0d\x0a\x09\x09\x20\x20star' + 'tPosition=' + 'startVeloc' + 'ity*age;\x0d\x0a' + '\x09\x09\x20\x20lifePo' + 'sition=vec' + '3(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_VOLVe' + 'locityGrad' + 'ientX,norm' + 'alizedAge)' + ',getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_VOLVel' + 'ocityGradi' + 'entY,norma' + 'lizedAge),' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntZ,normal' + 'izedAge));' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#ifdef\x20V' + 'ELOCITYOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANT\x0d\x0a\x09\x09\x20\x20s' + 'tartPositi' + 'on=startVe' + 'locity*age' + ';\x0d\x0a\x09\x09\x20\x20lif' + 'ePosition=' + 'lifeVeloci' + 'ty*age;\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20VELO' + 'CITYOVERLI') + ('FETIMERAND' + 'OMCURVE\x0d\x0a\x09' + '\x09\x20\x20startPo' + 'sition=sta' + 'rtVelocity' + '*age;\x0d\x0a\x09\x09\x20' + '\x20lifePosit' + 'ion=vec3(m' + 'ix(getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_VOLV' + 'elocityGra' + 'dientX,nor' + 'malizedAge' + '),getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_VOLVe' + 'locityGrad' + 'ientMaxX,n' + 'ormalizedA' + 'ge),a_Rand' + 'om1.y)\x0d\x0a\x09\x20' + '\x20\x20\x20\x20\x20,mix(' + 'getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_VOLVelo' + 'cityGradie' + 'ntY,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_VOLVeloc' + 'ityGradien' + 'tMaxY,norm' + 'alizedAge)' + ',a_Random1' + '.z)\x0d\x0a\x09\x20\x20\x20\x20' + '\x20\x20,mix(get' + 'TotalValue' + 'FromGradie' + 'ntFloat(u_' + 'VOLVelocit' + 'yGradientZ' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_V' + 'OLVelocity' + 'GradientMa' + 'xZ,normali' + 'zedAge),a_' + 'Random1.w)' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09vec' + '3\x20finalPos' + 'ition;\x0d\x0a\x09i' + 'f(u_VOLSpa' + 'ceType==0)' + '{\x0d\x0a\x09\x20\x20if(u' + '_ScalingMo' + 'de!=2)\x0d\x0a\x09\x20' + '\x20\x20finalPos' + 'ition\x20=rot' + 'ationByQua' + 'ternions(u' + '_PositionS' + 'cale*(a_Sh' + 'apePositio' + 'nStartLife' + 'Time.xyz+s' + 'tartPositi' + 'on+lifePos' + 'ition),wor' + 'ldRotation' + ');\x0d\x0a\x09\x20\x20els' + 'e\x0d\x0a\x09\x20\x20\x20fin' + 'alPosition' + '\x20=rotation' + 'ByQuaterni' + 'ons(u_Posi' + 'tionScale*' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'yz+startPo' + 'sition+lif' + 'ePosition,' + 'worldRotat' + 'ion);\x0d\x0a\x09}\x0d' + '\x0a\x09else{\x0d\x0a\x09' + '\x20\x20if(u_Sca' + 'lingMode!=' + '2)\x0d\x0a\x09\x20\x20\x20\x20f' + 'inalPositi' + 'on\x20=\x20rotat') + ('ionByQuate' + 'rnions(u_P' + 'ositionSca' + 'le*(a_Shap' + 'ePositionS' + 'tartLifeTi' + 'me.xyz+sta' + 'rtPosition' + '),worldRot' + 'ation)+lif' + 'ePosition;' + '\x0d\x0a\x09\x20\x20else\x0d' + '\x0a\x09\x20\x20\x20\x20fina' + 'lPosition\x20' + '=\x20rotation' + 'ByQuaterni' + 'ons(u_Posi' + 'tionScale*' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'yz+startPo' + 'sition,wor' + 'ldRotation' + ')+lifePosi' + 'tion;\x0d\x0a\x09}\x0d' + '\x0a\x20\x20#else\x0d\x0a' + '\x09\x20startPos' + 'ition=star' + 'tVelocity*' + 'age;\x0d\x0a\x09\x20ve' + 'c3\x20finalPo' + 'sition;\x0d\x0a\x09' + '\x20if(u_Scal' + 'ingMode!=2' + ')\x0d\x0a\x09\x09\x09fina' + 'lPosition\x20' + '=\x20rotation' + 'ByQuaterni' + 'ons(u_Posi' + 'tionScale*' + '(a_ShapePo' + 'sitionStar' + 'tLifeTime.' + 'xyz+startP' + 'osition),w' + 'orldRotati' + 'on);\x0d\x0a\x09\x20el' + 'se\x0d\x0a\x09\x20\x20\x20\x09f' + 'inalPositi' + 'on\x20=\x20rotat' + 'ionByQuate' + 'rnions(u_P' + 'ositionSca' + 'le*a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.xyz+star' + 'tPosition,' + 'worldRotat' + 'ion);\x0d\x0a\x20\x20#' + 'endif\x0d\x0a\x20\x20\x0d' + '\x0a\x20\x20if(u_Si' + 'mulationSp' + 'ace==0)\x0d\x0a\x20' + '\x20\x20\x20finalPo' + 'sition=fin' + 'alPosition' + '+a_Simulat' + 'ionWorldPo' + 'stion;\x0d\x0a\x20\x20' + 'else\x20if(u_' + 'Simulation' + 'Space==1)\x20' + '\x0d\x0a\x20\x20\x20\x20fina' + 'lPosition=' + 'finalPosit' + 'ion+u_Worl' + 'dPosition;' + '\x0d\x0a\x20\x20\x0d\x0a\x20\x20fi' + 'nalPositio' + 'n+=0.5*gra' + 'vityVeloci' + 'ty*age;\x0d\x0a\x20' + '\x0d\x0a\x20\x20return' + '\x20\x20finalPos' + 'ition;\x0d\x0a}\x0d' + '\x0a\x0d\x0a\x0d\x0avec4\x20' + 'computePar' + 'ticleColor' + '(in\x20vec4\x20c' + 'olor,in\x20fl' + 'oat\x20normal' + 'izedAge)\x0d\x0a' + '{\x0d\x0a\x09#ifdef' + '\x20COLOROVER' + 'LIFETIME\x0d\x0a' + '\x09\x20\x20color*=' + 'getColorFr' + 'omGradient') + ('(u_ColorOv' + 'erLifeGrad' + 'ientAlphas' + ',u_ColorOv' + 'erLifeGrad' + 'ientColors' + ',normalize' + 'dAge);\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20RA' + 'NDOMCOLORO' + 'VERLIFETIM' + 'E\x0d\x0a\x09\x20\x20colo' + 'r*=mix(get' + 'ColorFromG' + 'radient(u_' + 'ColorOverL' + 'ifeGradien' + 'tAlphas,u_' + 'ColorOverL' + 'ifeGradien' + 'tColors,no' + 'rmalizedAg' + 'e),getColo' + 'rFromGradi' + 'ent(u_MaxC' + 'olorOverLi' + 'feGradient' + 'Alphas,u_M' + 'axColorOve' + 'rLifeGradi' + 'entColors,' + 'normalized' + 'Age),a_Ran' + 'dom0.y);\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x20\x20\x20\x20retur' + 'n\x20color;\x0d\x0a' + '}\x0d\x0a\x0d\x0avec2\x20' + 'computePar' + 'ticleSizeB' + 'illbard(in' + '\x20vec2\x20size' + ',in\x20float\x20' + 'normalized' + 'Age)\x0d\x0a{\x0d\x0a\x09' + '#ifdef\x20SIZ' + 'EOVERLIFET' + 'IMECURVE\x0d\x0a' + '\x09\x09size*=ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ient,norma' + 'lizedAge);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#ifdef\x20S' + 'IZEOVERLIF' + 'ETIMERANDO' + 'MCURVES\x0d\x0a\x09' + '\x20\x20\x20\x20size*=' + 'mix(getCur' + 'ValueFromG' + 'radientFlo' + 'at(u_SOLSi' + 'zeGradient' + ',normalize' + 'dAge),getC' + 'urValueFro' + 'mGradientF' + 'loat(u_SOL' + 'SizeGradie' + 'ntMax,norm' + 'alizedAge)' + ',a_Random0' + '.z);\x20\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20SIZEOV' + 'ERLIFETIME' + 'CURVESEPER' + 'ATE\x0d\x0a\x09\x09siz' + 'e*=vec2(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientX,norm' + 'alizedAge)' + ',getCurVal' + 'ueFromGrad' + 'ientFloat(' + 'u_SOLSizeG' + 'radientY,n' + 'ormalizedA' + 'ge));\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20SIZEOV' + 'ERLIFETIME' + 'RANDOMCURV') + ('ESSEPERATE' + '\x0d\x0a\x09\x20\x20\x20\x20siz' + 'e*=vec2(mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientX,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMaxX,norm' + 'alizedAge)' + ',a_Random0' + '.z)\x0d\x0a\x09\x20\x20\x20\x20' + ',mix(getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tY,normali' + 'zedAge),ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientMaxY,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.z));\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + 'return\x20siz' + 'e;\x0d\x0a}\x0d\x0a\x0d\x0a#' + 'ifdef\x20REND' + 'ERMODE_MES' + 'H\x0d\x0avec3\x20co' + 'mputeParti' + 'cleSizeMes' + 'h(in\x20vec3\x20' + 'size,in\x20fl' + 'oat\x20normal' + 'izedAge)\x0d\x0a' + '{\x0d\x0a\x09#ifdef' + '\x20SIZEOVERL' + 'IFETIMECUR' + 'VE\x0d\x0a\x09\x09size' + '*=getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'Gradient,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20SIZEOVE' + 'RLIFETIMER' + 'ANDOMCURVE' + 'S\x0d\x0a\x09\x20\x20\x20\x20si' + 'ze*=mix(ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ient,norma' + 'lizedAge),' + 'getCurValu' + 'eFromGradi' + 'entFloat(u' + '_SOLSizeGr' + 'adientMax,' + 'normalized' + 'Age),a_Ran' + 'dom0.z);\x20\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20SI' + 'ZEOVERLIFE' + 'TIMECURVES' + 'EPERATE\x0d\x0a\x09' + '\x09size*=vec' + '3(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientX,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tY,normali' + 'zedAge),ge' + 'tCurValueF' + 'romGradien' + 'tFloat(u_S' + 'OLSizeGrad' + 'ientZ,norm') + ('alizedAge)' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20SIZEOVERL' + 'IFETIMERAN' + 'DOMCURVESS' + 'EPERATE\x0d\x0a\x09' + '\x20\x20\x20\x20size*=' + 'vec3(mix(g' + 'etCurValue' + 'FromGradie' + 'ntFloat(u_' + 'SOLSizeGra' + 'dientX,nor' + 'malizedAge' + '),getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientMa' + 'xX,normali' + 'zedAge),a_' + 'Random0.z)' + '\x0d\x0a\x09\x20\x20\x20\x20,mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientY,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMaxY,norm' + 'alizedAge)' + ',a_Random0' + '.z)\x0d\x0a\x09\x09,mi' + 'x(getCurVa' + 'lueFromGra' + 'dientFloat' + '(u_SOLSize' + 'GradientZ,' + 'normalized' + 'Age),getCu' + 'rValueFrom' + 'GradientFl' + 'oat(u_SOLS' + 'izeGradien' + 'tMaxZ,norm' + 'alizedAge)' + ',a_Random0' + '.z));\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09ret' + 'urn\x20size;\x0d' + '\x0a}\x0d\x0a#endif' + '\x0d\x0a\x0d\x0afloat\x20' + 'computePar' + 'ticleRotat' + 'ionFloat(i' + 'n\x20float\x20ro' + 'tation,in\x20' + 'float\x20age,' + 'in\x20float\x20n' + 'ormalizedA' + 'ge)\x0d\x0a{\x20\x0d\x0a\x09' + '#ifdef\x20ROT' + 'ATIONOVERL' + 'IFETIME\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMECO' + 'NSTANT\x0d\x0a\x09\x09' + '\x09float\x20age' + 'Rot=u_ROLA' + 'ngularVelo' + 'cityConst*' + 'age;\x0d\x0a\x09\x20\x20\x20' + '\x20\x20\x20\x20\x20rotat' + 'ion+=ageRo' + 't;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMECURVE\x0d\x0a' + '\x09\x09\x09rotatio' + 'n+=getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'nt,normali' + 'zedAge);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCONST') + ('ANTS\x0d\x0a\x09\x09\x09f' + 'loat\x20ageRo' + 't=mix(u_RO' + 'LAngularVe' + 'locityCons' + 't,u_ROLAng' + 'ularVeloci' + 'tyConstMax' + ',a_Random0' + '.w)*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES\x0d\x0a\x09\x09\x09rot' + 'ation+=mix' + '(getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientMax,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.w);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20ROTA' + 'TIONOVERLI' + 'FETIMESEPE' + 'RATE\x0d\x0a\x09\x09#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMECONST' + 'ANT\x0d\x0a\x09\x09\x09fl' + 'oat\x20ageRot' + '=u_ROLAngu' + 'larVelocit' + 'yConstSepr' + 'arate.z*ag' + 'e;\x0d\x0a\x09\x20\x20\x20\x20\x20' + '\x20\x20\x20rotatio' + 'n+=ageRot;' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ECURVE\x0d\x0a\x09\x09' + '\x09rotation+' + '=getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + 'Z,normaliz' + 'edAge);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMERA' + 'NDOMCONSTA' + 'NTS\x0d\x0a\x09\x09\x09fl' + 'oat\x20ageRot' + '=mix(u_ROL' + 'AngularVel' + 'ocityConst' + 'Seprarate.' + 'z,u_ROLAng' + 'ularVeloci' + 'tyConstMax' + 'Seprarate.' + 'z,a_Random' + '0.w)*age;\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + 'rotation+=' + 'ageRot;\x0d\x0a\x09' + '\x20\x20\x20\x20#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VES\x0d\x0a\x09\x09\x09ro' + 'tation+=mi' + 'x(getTotal' + 'ValueFromG' + 'radientFlo' + 'at(u_ROLAn') + ('gularVeloc' + 'ityGradien' + 'tZ,normali' + 'zedAge),ge' + 'tTotalValu' + 'eFromGradi' + 'entFloat(u' + '_ROLAngula' + 'rVelocityG' + 'radientMax' + 'Z,normaliz' + 'edAge),a_R' + 'andom0.w))' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x09return\x20' + 'rotation;\x0d' + '\x0a}\x0d\x0a\x0d\x0a#if\x20' + 'defined(RE' + 'NDERMODE_M' + 'ESH)&&(def' + 'ined(ROTAT' + 'IONOVERLIF' + 'ETIME)||de' + 'fined(ROTA' + 'TIONOVERLI' + 'FETIMESEPE' + 'RATE))\x0d\x0ave' + 'c3\x20compute' + 'ParticleRo' + 'tationVec3' + '(in\x20vec3\x20r' + 'otation,in' + '\x20float\x20age' + ',in\x20float\x20' + 'normalized' + 'Age)\x0d\x0a{\x20\x0d\x0a' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIME\x0d\x0a' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMECO' + 'NSTANT\x0d\x0a\x09\x09' + '\x09float\x20age' + 'Rot=u_ROLA' + 'ngularVelo' + 'cityConst*' + 'age;\x0d\x0a\x09\x20\x20\x20' + '\x20\x20\x20\x20\x20rotat' + 'ion+=ageRo' + 't;\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMECURVE\x0d\x0a' + '\x09\x09\x09rotatio' + 'n+=getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'nt,normali' + 'zedAge);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09\x09#ifdef\x20R' + 'OTATIONOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANTS\x0d\x0a\x09\x09\x09f' + 'loat\x20ageRo' + 't=mix(u_RO' + 'LAngularVe' + 'locityCons' + 't,u_ROLAng' + 'ularVeloci' + 'tyConstMax' + ',a_Random0' + '.w)*age;\x0d\x0a' + '\x09\x20\x20\x20\x20\x20\x20\x20\x20r' + 'otation+=a' + 'geRot;\x0d\x0a\x09\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09\x09#ifdef\x20' + 'ROTATIONOV' + 'ERLIFETIME' + 'RANDOMCURV' + 'ES\x0d\x0a\x09\x09\x09rot' + 'ation+=mix' + '(getTotalV' + 'alueFromGr' + 'adientFloa' + 't(u_ROLAng' + 'ularVeloci' + 'tyGradient' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien') + ('tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientMax,n' + 'ormalizedA' + 'ge),a_Rand' + 'om0.w);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20ROTA' + 'TIONOVERLI' + 'FETIMESEPE' + 'RATE\x0d\x0a\x09\x09#i' + 'fdef\x20ROTAT' + 'IONOVERLIF' + 'ETIMECONST' + 'ANT\x0d\x0a\x09\x09\x09ve' + 'c3\x20ageRot=' + 'u_ROLAngul' + 'arVelocity' + 'ConstSepra' + 'rate*age;\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + 'rotation+=' + 'ageRot;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIMECU' + 'RVE\x0d\x0a\x09\x09\x09ro' + 'tation+=ve' + 'c3(getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntX,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_ROLAngul' + 'arVelocity' + 'GradientY,' + 'normalized' + 'Age),getTo' + 'talValueFr' + 'omGradient' + 'Float(u_RO' + 'LAngularVe' + 'locityGrad' + 'ientZ,norm' + 'alizedAge)' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09\x09#ifd' + 'ef\x20ROTATIO' + 'NOVERLIFET' + 'IMERANDOMC' + 'ONSTANTS\x0d\x0a' + '\x09\x09\x09vec3\x20ag' + 'eRot=mix(u' + '_ROLAngula' + 'rVelocityC' + 'onstSeprar' + 'ate,u_ROLA' + 'ngularVelo' + 'cityConstM' + 'axSeprarat' + 'e,a_Random' + '0.w)*age;\x0d' + '\x0a\x09\x20\x20\x20\x20\x20\x20\x20\x20' + 'rotation+=' + 'ageRot;\x0d\x0a\x09' + '\x20\x20\x20\x20#endif' + '\x0d\x0a\x09\x09#ifdef' + '\x20ROTATIONO' + 'VERLIFETIM' + 'ERANDOMCUR' + 'VES\x0d\x0a\x09\x09\x09ro' + 'tation+=ve' + 'c3(mix(get' + 'TotalValue' + 'FromGradie' + 'ntFloat(u_' + 'ROLAngular' + 'VelocityGr' + 'adientX,no' + 'rmalizedAg' + 'e),getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntMaxX,nor' + 'malizedAge' + '),a_Random' + '0.w)\x0d\x0a\x09\x20\x20\x20' + '\x20\x20\x20\x20\x20,mix(') + ('getTotalVa' + 'lueFromGra' + 'dientFloat' + '(u_ROLAngu' + 'larVelocit' + 'yGradientY' + ',normalize' + 'dAge),getT' + 'otalValueF' + 'romGradien' + 'tFloat(u_R' + 'OLAngularV' + 'elocityGra' + 'dientMaxY,' + 'normalized' + 'Age),a_Ran' + 'dom0.w)\x0d\x0a\x09' + '\x20\x20\x20\x20\x20\x20\x20\x20,m' + 'ix(getTota' + 'lValueFrom' + 'GradientFl' + 'oat(u_ROLA' + 'ngularVelo' + 'cityGradie' + 'ntZ,normal' + 'izedAge),g' + 'etTotalVal' + 'ueFromGrad' + 'ientFloat(' + 'u_ROLAngul' + 'arVelocity' + 'GradientMa' + 'xZ,normali' + 'zedAge),a_' + 'Random0.w)' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09return' + '\x20rotation;' + '\x0d\x0a}\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avec2\x20' + 'computePar' + 'ticleUV(in' + '\x20vec2\x20uv,i' + 'n\x20float\x20no' + 'rmalizedAg' + 'e)\x0d\x0a{\x20\x0d\x0a\x09#' + 'ifdef\x20TEXT' + 'URESHEETAN' + 'IMATIONCUR' + 'VE\x0d\x0a\x09\x09floa' + 't\x20cycleNor' + 'malizedAge' + '=normalize' + 'dAge*u_TSA' + 'Cycles;\x0d\x0a\x09' + '\x09float\x20fra' + 'me=getFram' + 'eFromGradi' + 'ent(u_TSAG' + 'radientUVs' + ',cycleNorm' + 'alizedAge-' + 'floor(cycl' + 'eNormalize' + 'dAge));\x0d\x0a\x09' + '\x09float\x20tot' + 'alULength=' + 'frame*u_TS' + 'ASubUVLeng' + 'th.x;\x0d\x0a\x09\x09f' + 'loat\x20floor' + 'TotalULeng' + 'th=floor(t' + 'otalULengt' + 'h);\x0d\x0a\x09\x20\x20\x20\x20' + 'uv.x+=tota' + 'lULength-f' + 'loorTotalU' + 'Length;\x0d\x0a\x09' + '\x09uv.y+=flo' + 'orTotalULe' + 'ngth*u_TSA' + 'SubUVLengt' + 'h.y;\x0d\x0a\x20\x20\x20\x20' + '#endif\x0d\x0a\x09#' + 'ifdef\x20TEXT' + 'URESHEETAN' + 'IMATIONRAN' + 'DOMCURVE\x0d\x0a' + '\x09\x09float\x20cy' + 'cleNormali' + 'zedAge=nor' + 'malizedAge' + '*u_TSACycl' + 'es;\x0d\x0a\x09\x09flo' + 'at\x20uvNorma' + 'lizedAge=c' + 'ycleNormal' + 'izedAge-fl') + ('oor(cycleN' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x20\x20\x20' + '\x20float\x20fra' + 'me=floor(m' + 'ix(getFram' + 'eFromGradi' + 'ent(u_TSAG' + 'radientUVs' + ',uvNormali' + 'zedAge),ge' + 'tFrameFrom' + 'Gradient(u' + '_TSAMaxGra' + 'dientUVs,u' + 'vNormalize' + 'dAge),a_Ra' + 'ndom1.x));' + '\x0d\x0a\x09\x09float\x20' + 'totalULeng' + 'th=frame*u' + '_TSASubUVL' + 'ength.x;\x0d\x0a' + '\x09\x09float\x20fl' + 'oorTotalUL' + 'ength=floo' + 'r(totalULe' + 'ngth);\x0d\x0a\x09\x20' + '\x20\x20\x20uv.x+=t' + 'otalULengt' + 'h-floorTot' + 'alULength;' + '\x0d\x0a\x09\x09uv.y+=' + 'floorTotal' + 'ULength*u_' + 'TSASubUVLe' + 'ngth.y;\x0d\x0a\x20' + '\x20\x20\x20#endif\x0d' + '\x0a\x09return\x20u' + 'v;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20age\x20=\x20u_' + 'CurrentTim' + 'e\x20-\x20a_Dire' + 'ctionTime.' + 'w;\x0d\x0a\x09float' + '\x20normalize' + 'dAge\x20=\x20age' + '/a_ShapePo' + 'sitionStar' + 'tLifeTime.' + 'w;\x0d\x0a\x09vec3\x20' + 'lifeVeloci' + 'ty;\x0d\x0a\x09if(n' + 'ormalizedA' + 'ge<1.0)\x0d\x0a\x09' + '{\x20\x0d\x0a\x09\x09vec3' + '\x20startVelo' + 'city=a_Dir' + 'ectionTime' + '.xyz*a_Sta' + 'rtSpeed;\x0d\x0a' + '\x09\x09#if\x20defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMECONSTA' + 'NT)||defin' + 'ed(VELOCIT' + 'YOVERLIFET' + 'IMECURVE)|' + '|defined(V' + 'ELOCITYOVE' + 'RLIFETIMER' + 'ANDOMCONST' + 'ANT)||defi' + 'ned(VELOCI' + 'TYOVERLIFE' + 'TIMERANDOM' + 'CURVE)\x0d\x0a\x09\x09' + '\x09lifeVeloc' + 'ity=\x20compu' + 'teParticle' + 'LifeVeloci' + 'ty(normali' + 'zedAge);//' + '计算粒子生命周期速度' + '\x0d\x0a\x09\x09#endif' + '\x20\x0d\x0a\x09\x09vec3\x20' + 'gravityVel' + 'ocity=u_Gr' + 'avity*age;' + '\x0d\x0a\x09\x09\x0d\x0a\x09\x09ve' + 'c4\x20worldRo' + 'tation;\x0d\x0a\x09' + '\x09if(u_Simu' + 'lationSpac' + 'e==0)\x0d\x0a\x09\x09\x09' + 'worldRotat' + 'ion=a_Simu') + ('lationWorl' + 'dRotation;' + '\x0d\x0a\x09\x09else\x0d\x0a' + '\x09\x09\x09worldRo' + 'tation=u_W' + 'orldRotati' + 'on;\x0d\x0a\x09\x09\x0d\x0a\x09' + '\x09vec3\x20cent' + 'er=compute' + 'ParticlePo' + 'sition(sta' + 'rtVelocity' + ',\x20lifeVelo' + 'city,\x20age,' + '\x20normalize' + 'dAge,gravi' + 'tyVelocity' + ',worldRota' + 'tion);//计算' + '粒子位置\x0d\x0a\x09\x0d\x0a\x09' + '\x0d\x0a\x09\x09#ifdef' + '\x20SPHERHBIL' + 'LBOARD\x0d\x0a\x09\x09' + '\x09vec2\x20corn' + 'er=a_Corne' + 'rTextureCo' + 'ordinate.x' + 'y;//Billbo' + 'ard模式z轴无效\x0d' + '\x0a\x09\x09\x09vec3\x20c' + 'ameraUpVec' + 'tor\x20=norma' + 'lize(u_Cam' + 'eraUp);//T' + 'ODO:是否外面归一' + '化\x0d\x0a\x09\x09\x09vec3' + '\x20sideVecto' + 'r\x20=\x20normal' + 'ize(cross(' + 'u_CameraDi' + 'rection,ca' + 'meraUpVect' + 'or));\x0d\x0a\x09\x09\x09' + 'vec3\x20upVec' + 'tor\x20=\x20norm' + 'alize(cros' + 's(sideVect' + 'or,u_Camer' + 'aDirection' + '));\x0d\x0a\x09\x09\x09co' + 'rner*=comp' + 'uteParticl' + 'eSizeBillb' + 'ard(a_Star' + 'tSize.xy,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09#' + 'if\x20defined' + '(ROTATIONO' + 'VERLIFETIM' + 'E)||define' + 'd(ROTATION' + 'OVERLIFETI' + 'MESEPERATE' + ')\x0d\x0a\x09\x09\x09\x09if(' + 'u_ThreeDSt' + 'artRotatio' + 'n){\x0d\x0a\x09\x09\x09\x09\x09' + 'vec3\x20rotat' + 'ion=vec3(a' + '_StartRota' + 'tion0.xy,c' + 'omputePart' + 'icleRotati' + 'onFloat(a_' + 'StartRotat' + 'ion0.z,age' + ',normalize' + 'dAge));\x0d\x0a\x09' + '\x09\x09\x09\x09center' + '\x20+=\x20u_Size' + 'Scale.xzy*' + 'rotationBy' + 'Euler(corn' + 'er.x*sideV' + 'ector+corn' + 'er.y*upVec' + 'tor,rotati' + 'on);\x0d\x0a\x09\x09\x09\x09' + '}\x0d\x0a\x09\x09\x09\x09els' + 'e{\x0d\x0a\x09\x09\x09\x09\x09f' + 'loat\x20rot\x20=' + '\x20computePa' + 'rticleRota' + 'tionFloat(' + 'a_StartRot' + 'ation0.x,\x20' + 'age,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09\x09\x09floa') + ('t\x20c\x20=\x20cos(' + 'rot);\x0d\x0a\x09\x09\x09' + '\x09\x09float\x20s\x20' + '=\x20sin(rot)' + ';\x0d\x0a\x09\x09\x09\x09\x09ma' + 't2\x20rotatio' + 'n=\x20mat2(c,' + '\x20-s,\x20s,\x20c)' + ';\x0d\x0a\x09\x09\x09\x09\x09co' + 'rner=rotat' + 'ion*corner' + ';\x0d\x0a\x09\x09\x09\x09\x09ce' + 'nter\x20+=\x20u_' + 'SizeScale.' + 'xzy*(corne' + 'r.x*sideVe' + 'ctor+corne' + 'r.y*upVect' + 'or);\x0d\x0a\x09\x09\x09\x09' + '}\x0d\x0a\x09\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09\x09if(' + 'u_ThreeDSt' + 'artRotatio' + 'n){\x0d\x0a\x09\x09\x09\x09\x09' + 'center\x20+=\x20' + 'u_SizeScal' + 'e.xzy*rota' + 'tionByEule' + 'r(corner.x' + '*sideVecto' + 'r+corner.y' + '*upVector,' + 'a_StartRot' + 'ation0);\x0d\x0a' + '\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09' + '\x09else{\x0d\x0a\x09\x09' + '\x09\x09\x09float\x20c' + '\x20=\x20cos(a_S' + 'tartRotati' + 'on0.x);\x0d\x0a\x09' + '\x09\x09\x09\x09float\x20' + 's\x20=\x20sin(a_' + 'StartRotat' + 'ion0.x);\x0d\x0a' + '\x09\x09\x09\x09\x09mat2\x20' + 'rotation=\x20' + 'mat2(c,\x20-s' + ',\x20s,\x20c);\x0d\x0a' + '\x09\x09\x09\x09\x09corne' + 'r=rotation' + '*corner;\x0d\x0a' + '\x09\x09\x09\x09\x09cente' + 'r\x20+=\x20u_Siz' + 'eScale.xzy' + '*(corner.x' + '*sideVecto' + 'r+corner.y' + '*upVector)' + ';\x0d\x0a\x09\x09\x09\x09}\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x0d\x0a\x09\x09#ifd' + 'ef\x20STRETCH' + 'EDBILLBOAR' + 'D\x0d\x0a\x09\x09vec2\x20' + 'corner=a_C' + 'ornerTextu' + 'reCoordina' + 'te.xy;//Bi' + 'llboard模式z' + '轴无效\x0d\x0a\x09\x09vec' + '3\x20velocity' + ';\x0d\x0a\x09\x09#if\x20d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMECON' + 'STANT)||de' + 'fined(VELO' + 'CITYOVERLI' + 'FETIMECURV' + 'E)||define' + 'd(VELOCITY' + 'OVERLIFETI' + 'MERANDOMCO' + 'NSTANT)||d' + 'efined(VEL' + 'OCITYOVERL' + 'IFETIMERAN' + 'DOMCURVE)\x0d' + '\x0a\x09\x09\x09if(u_V' + 'OLSpaceTyp' + 'e==0)\x0d\x0a\x09\x09\x09' + 'velocity=r' + 'otationByQ' + 'uaternions' + '(u_SizeSca' + 'le*(startV' + 'elocity+li' + 'feVelocity' + '),worldRot') + ('ation)+gra' + 'vityVeloci' + 'ty;\x0d\x0a\x09\x09\x09el' + 'se\x0d\x0a\x09\x09\x09vel' + 'ocity=rota' + 'tionByQuat' + 'ernions(u_' + 'SizeScale*' + 'startVeloc' + 'ity,worldR' + 'otation)+l' + 'ifeVelocit' + 'y+gravityV' + 'elocity;\x0d\x0a' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09velocity' + '=\x20rotation' + 'ByQuaterni' + 'ons(u_Size' + 'Scale*star' + 'tVelocity,' + 'worldRotat' + 'ion)+gravi' + 'tyVelocity' + ';\x0d\x0a\x09\x09#endi' + 'f\x09\x0d\x0a\x09\x09\x09vec' + '3\x20cameraUp' + 'Vector\x20=\x20n' + 'ormalize(v' + 'elocity);\x0d' + '\x0a\x09\x09\x09vec3\x20d' + 'irection\x20=' + '\x20normalize' + '(center-u_' + 'CameraPos)' + ';\x0d\x0a\x09\x09\x09vec3' + '\x20sideVecto' + 'r\x20=\x20normal' + 'ize(cross(' + 'direction,' + 'normalize(' + 'velocity))' + ');\x0d\x0a\x09\x09\x09\x0d\x0a\x09' + '\x09\x09sideVect' + 'or=u_SizeS' + 'cale.xzy*s' + 'ideVector;' + '\x0d\x0a\x09\x09\x09camer' + 'aUpVector=' + 'length(vec' + '3(u_SizeSc' + 'ale.x,0.0,' + '0.0))*came' + 'raUpVector' + ';\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09' + '\x09vec2\x20size' + '=computePa' + 'rticleSize' + 'Billbard(a' + '_StartSize' + '.xy,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09c' + 'onst\x20mat2\x20' + 'rotaionZHa' + 'lfPI=mat2(' + '0.0,\x20-1.0,' + '\x201.0,\x200.0)' + ';\x0d\x0a\x09\x09\x09corn' + 'er=rotaion' + 'ZHalfPI*co' + 'rner;\x0d\x0a\x09\x09\x09' + 'corner.y=c' + 'orner.y-ab' + 's(corner.y' + ');\x0d\x0a\x09\x09\x09\x0d\x0a\x09' + '\x09\x09float\x20sp' + 'eed=length' + '(velocity)' + ';//TODO:\x0d\x0a' + '\x09\x09\x09center\x20' + '+=sign(u_S' + 'izeScale.x' + ')*(sign(u_' + 'StretchedB' + 'illboardLe' + 'ngthScale)' + '*size.x*co' + 'rner.x*sid' + 'eVector+(s' + 'peed*u_Str' + 'etchedBill' + 'boardSpeed' + 'Scale+size' + '.y*u_Stret' + 'chedBillbo' + 'ardLengthS' + 'cale)*corn' + 'er.y*camer' + 'aUpVector)') + (';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09\x09#i' + 'fdef\x20HORIZ' + 'ONTALBILLB' + 'OARD\x0d\x0a\x09\x09\x09v' + 'ec2\x20corner' + '=a_CornerT' + 'extureCoor' + 'dinate.xy;' + '//Billboar' + 'd模式z轴无效\x0d\x0a\x09' + '\x09\x09const\x20ve' + 'c3\x20cameraU' + 'pVector=ve' + 'c3(0.0,0.0' + ',1.0);\x0d\x0a\x09\x09' + '\x09const\x20vec' + '3\x20sideVect' + 'or\x20=\x20vec3(' + '-1.0,0.0,0' + '.0);\x0d\x0a\x09\x09\x09\x0d' + '\x0a\x09\x09\x09float\x20' + 'rot\x20=\x20comp' + 'uteParticl' + 'eRotationF' + 'loat(a_Sta' + 'rtRotation' + '0.x,\x20age,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09f' + 'loat\x20c\x20=\x20c' + 'os(rot);\x0d\x0a' + '\x09\x09\x09float\x20s' + '\x20=\x20sin(rot' + ');\x0d\x0a\x09\x09\x09mat' + '2\x20rotation' + '=\x20mat2(c,\x20' + '-s,\x20s,\x20c);' + '\x0d\x0a\x09\x09\x09corne' + 'r=rotation' + '*corner*co' + 's(0.785398' + '1633974483' + '0961566084' + '581988);//' + 'TODO:临时缩小c' + 'os45,不确定U3' + 'D原因\x0d\x0a\x09\x09\x09co' + 'rner*=comp' + 'uteParticl' + 'eSizeBillb' + 'ard(a_Star' + 'tSize.xy,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09c' + 'enter\x20+=u_' + 'SizeScale.' + 'xzy*(corne' + 'r.x*sideVe' + 'ctor+\x20corn' + 'er.y*camer' + 'aUpVector)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09\x09#i' + 'fdef\x20VERTI' + 'CALBILLBOA' + 'RD\x0d\x0a\x09\x09\x09vec' + '2\x20corner=a' + '_CornerTex' + 'tureCoordi' + 'nate.xy;//' + 'Billboard模' + '式z轴无效\x0d\x0a\x09\x09\x09' + 'const\x20vec3' + '\x20cameraUpV' + 'ector\x20=vec' + '3(0.0,1.0,' + '0.0);\x0d\x0a\x09\x09\x09' + 'vec3\x20sideV' + 'ector\x20=\x20no' + 'rmalize(cr' + 'oss(u_Came' + 'raDirectio' + 'n,cameraUp' + 'Vector));\x0d' + '\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09f' + 'loat\x20rot\x20=' + '\x20computePa' + 'rticleRota' + 'tionFloat(' + 'a_StartRot' + 'ation0.x,\x20' + 'age,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09float\x20' + 'c\x20=\x20cos(ro' + 't);\x0d\x0a\x09\x09\x09fl' + 'oat\x20s\x20=\x20si' + 'n(rot);\x0d\x0a\x09' + '\x09\x09mat2\x20rot') + ('ation=\x20mat' + '2(c,\x20-s,\x20s' + ',\x20c);\x0d\x0a\x09\x09\x09' + 'corner=rot' + 'ation*corn' + 'er*cos(0.7' + '8539816339' + '7448309615' + '6608458198' + '8);//TODO:' + '临时缩小cos45,' + '不确定U3D原因\x0d\x0a' + '\x09\x09\x09corner*' + '=computePa' + 'rticleSize' + 'Billbard(a' + '_StartSize' + '.xy,normal' + 'izedAge);\x0d' + '\x0a\x09\x09\x09center' + '\x20+=u_SizeS' + 'cale.xzy*(' + 'corner.x*s' + 'ideVector+' + '\x20corner.y*' + 'cameraUpVe' + 'ctor);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09\x09#ifdef\x20' + 'RENDERMODE' + '_MESH\x0d\x0a\x09\x09\x09' + 'vec3\x20size=' + 'computePar' + 'ticleSizeM' + 'esh(a_Star' + 'tSize,norm' + 'alizedAge)' + ';\x0d\x0a\x09\x09\x09#if\x20' + 'defined(RO' + 'TATIONOVER' + 'LIFETIME)|' + '|defined(R' + 'OTATIONOVE' + 'RLIFETIMES' + 'EPERATE)\x0d\x0a' + '\x09\x09\x09\x09if(u_T' + 'hreeDStart' + 'Rotation){' + '\x0d\x0a\x09\x09\x09\x09\x09vec' + '3\x20rotation' + '=vec3(a_St' + 'artRotatio' + 'n0.xy,comp' + 'uteParticl' + 'eRotationF' + 'loat(a_Sta' + 'rtRotation' + '0.z,\x20age,n' + 'ormalizedA' + 'ge));\x0d\x0a\x09\x09\x09' + '\x09\x09center+=' + '\x20rotationB' + 'yQuaternio' + 'ns(u_SizeS' + 'cale*rotat' + 'ionByEuler' + '(a_MeshPos' + 'ition*size' + ',rotation)' + ',worldRota' + 'tion);\x0d\x0a\x09\x09' + '\x09\x09}\x0d\x0a\x09\x09\x09\x09e' + 'lse{\x0d\x0a\x09\x09\x09\x09' + '\x09#ifdef\x20RO' + 'TATIONOVER' + 'LIFETIME\x0d\x0a' + '\x09\x09\x09\x09\x09\x09floa' + 't\x20angle=co' + 'mputeParti' + 'cleRotatio' + 'nFloat(a_S' + 'tartRotati' + 'on0.x,\x20age' + ',normalize' + 'dAge);\x0d\x0a\x09\x09' + '\x09\x09\x09\x09if(a_S' + 'hapePositi' + 'onStartLif' + 'eTime.x!=0' + '.0||a_Shap' + 'ePositionS' + 'tartLifeTi' + 'me.y!=0.0)' + '{\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + 'center+=\x20(' + 'rotationBy' + 'Quaternion' + 's(rotation' + 'ByAxis(u_S' + 'izeScale*a') + ('_MeshPosit' + 'ion*size,n' + 'ormalize(c' + 'ross(vec3(' + '0.0,0.0,1.' + '0),vec3(a_' + 'ShapePosit' + 'ionStartLi' + 'feTime.xy,' + '0.0))),ang' + 'le),worldR' + 'otation));' + '//已验证\x0d\x0a\x09\x09\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09\x09' + '\x09\x09else{\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09#ifd' + 'ef\x20SHAPE\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=\x20u_S' + 'izeScale.x' + 'zy*(rotati' + 'onByQuater' + 'nions(rota' + 'tionByAxis' + '(a_MeshPos' + 'ition*size' + ',vec3(0.0,' + '-1.0,0.0),' + 'angle),wor' + 'ldRotation' + '));\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09#else\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09if(' + 'u_Simulati' + 'onSpace==0' + ')\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + '\x09\x09center+=' + 'rotationBy' + 'Axis(u_Siz' + 'eScale*a_M' + 'eshPositio' + 'n*size,vec' + '3(0.0,0.0,' + '-1.0),angl' + 'e);//已验证\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09el' + 'se\x20if(u_Si' + 'mulationSp' + 'ace==1)\x0d\x0a\x09' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=rota' + 'tionByQuat' + 'ernions(u_' + 'SizeScale*' + 'rotationBy' + 'Axis(a_Mes' + 'hPosition*' + 'size,vec3(' + '0.0,0.0,-1' + '.0),angle)' + ',worldRota' + 'tion);//已验' + '证\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '\x09\x09\x09\x09}\x0d\x0a\x09\x09\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09\x09\x09#ifde' + 'f\x20ROTATION' + 'OVERLIFETI' + 'MESEPERATE' + '\x0d\x0a\x09\x09\x09\x09\x09\x09//' + 'TODO:是否应合并' + 'if(u_Three' + 'DStartRota' + 'tion)分支代码,' + '待测试\x0d\x0a\x09\x09\x09\x09\x09' + '\x09vec3\x20angl' + 'e=computeP' + 'articleRot' + 'ationVec3(' + 'vec3(0.0,0' + '.0,-a_Star' + 'tRotation0' + '.x),\x20age,n' + 'ormalizedA' + 'ge);\x0d\x0a\x09\x09\x09\x09' + '\x09\x09center+=' + '\x20(rotation' + 'ByQuaterni' + 'ons(rotati' + 'onByEuler(' + 'u_SizeScal' + 'e*a_MeshPo' + 'sition*siz' + 'e,vec3(ang' + 'le.x,angle' + '.y,angle.z' + ')),worldRo' + 'tation));/' + '/已验证\x0d\x0a\x09\x09\x09\x09') + ('\x09#endif\x09\x09\x0d' + '\x0a\x09\x09\x09\x09}\x0d\x0a\x09\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09\x09if(u_Thr' + 'eeDStartRo' + 'tation){\x0d\x0a' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20rotati' + 'onByQuater' + 'nions(u_Si' + 'zeScale*ro' + 'tationByEu' + 'ler(a_Mesh' + 'Position*s' + 'ize,a_Star' + 'tRotation0' + '),worldRot' + 'ation);//已' + '验证\x0d\x0a\x09\x09\x09\x09}\x0d' + '\x0a\x09\x09\x09\x09else{' + '\x0d\x0a\x09\x09\x09\x09\x09if(' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + '!=0.0||a_S' + 'hapePositi' + 'onStartLif' + 'eTime.y!=0' + '.0){\x0d\x0a\x09\x09\x09\x09' + '\x09\x09if(u_Sim' + 'ulationSpa' + 'ce==0)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20rotati' + 'onByAxis(u' + '_SizeScale' + '*a_MeshPos' + 'ition*size' + ',normalize' + '(cross(vec' + '3(0.0,0.0,' + '1.0),vec3(' + 'a_ShapePos' + 'itionStart' + 'LifeTime.x' + 'y,0.0))),a' + '_StartRota' + 'tion0.x);\x0d' + '\x0a\x09\x09\x09\x09\x09\x09els' + 'e\x20if(u_Sim' + 'ulationSpa' + 'ce==1)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09cente' + 'r+=\x20(rotat' + 'ionByQuate' + 'rnions(u_S' + 'izeScale*r' + 'otationByA' + 'xis(a_Mesh' + 'Position*s' + 'ize,normal' + 'ize(cross(' + 'vec3(0.0,0' + '.0,1.0),ve' + 'c3(a_Shape' + 'PositionSt' + 'artLifeTim' + 'e.xy,0.0))' + '),a_StartR' + 'otation0.x' + '),worldRot' + 'ation));//' + '已验证\x0d\x0a\x09\x09\x09\x09\x09' + '}\x0d\x0a\x09\x09\x09\x09\x09el' + 'se{\x0d\x0a\x09\x09\x09\x09\x09' + '\x09#ifdef\x20SH' + 'APE\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09if(u_Sim' + 'ulationSpa' + 'ce==0)\x0d\x0a\x09\x09' + '\x09\x09\x09\x09\x09\x09cent' + 'er+=\x20u_Siz' + 'eScale*rot' + 'ationByAxi' + 's(a_MeshPo' + 'sition*siz' + 'e,vec3(0.0' + ',-1.0,0.0)' + ',a_StartRo' + 'tation0.x)' + ';\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + 'else\x20if(u_' + 'Simulation' + 'Space==1)\x0d' + '\x0a\x09\x09\x09\x09\x09\x09\x09\x09c' + 'enter+=\x20ro' + 'tationByQu' + 'aternions(' + 'u_SizeScal' + 'e*rotation') + ('ByAxis(a_M' + 'eshPositio' + 'n*size,vec' + '3(0.0,-1.0' + ',0.0),a_St' + 'artRotatio' + 'n0.x),worl' + 'dRotation)' + ';\x09\x0d\x0a\x09\x09\x09\x09\x09\x09' + '#else\x0d\x0a\x09\x09\x09' + '\x09\x09\x09\x09if(u_S' + 'imulationS' + 'pace==0)\x0d\x0a' + '\x09\x09\x09\x09\x09\x09\x09\x09ce' + 'nter+=\x20rot' + 'ationByAxi' + 's(u_SizeSc' + 'ale*a_Mesh' + 'Position*s' + 'ize,vec3(0' + '.0,0.0,-1.' + '0),a_Start' + 'Rotation0.' + 'x);\x0d\x0a\x09\x09\x09\x09\x09' + '\x09\x09else\x20if(' + 'u_Simulati' + 'onSpace==1' + ')\x0d\x0a\x09\x09\x09\x09\x09\x09\x09' + '\x09center+=\x20' + 'rotationBy' + 'Quaternion' + 's(u_SizeSc' + 'ale*rotati' + 'onByAxis(a' + '_MeshPosit' + 'ion*size,v' + 'ec3(0.0,0.' + '0,-1.0),a_' + 'StartRotat' + 'ion0.x),wo' + 'rldRotatio' + 'n);//已验证\x0d\x0a' + '\x09\x09\x09\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09v_MeshC' + 'olor=a_Mes' + 'hColor;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '\x0d\x0a\x09\x09gl_Pos' + 'ition=u_Pr' + 'ojection*u' + '_View*vec4' + '(center,1.' + '0);\x0d\x0a\x09\x09v_C' + 'olor\x20=\x20com' + 'putePartic' + 'leColor(a_' + 'StartColor' + ',\x20normaliz' + 'edAge);\x0d\x0a\x09' + '\x09#ifdef\x20DI' + 'FFUSEMAP\x0d\x0a' + '\x09\x09\x09#if\x20def' + 'ined(SPHER' + 'HBILLBOARD' + ')||defined' + '(STRETCHED' + 'BILLBOARD)' + '||defined(' + 'HORIZONTAL' + 'BILLBOARD)' + '||defined(' + 'VERTICALBI' + 'LLBOARD)\x0d\x0a' + '\x09\x09\x09\x09v_Text' + 'ureCoordin' + 'ate\x20=compu' + 'teParticle' + 'UV(a_Corne' + 'rTextureCo' + 'ordinate.z' + 'w,\x20normali' + 'zedAge);\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20RENDERMOD' + 'E_MESH\x0d\x0a\x09\x09' + '\x09\x09v_Textur' + 'eCoordinat' + 'e\x20=compute' + 'ParticleUV' + '(a_MeshTex' + 'tureCoordi' + 'nate,\x20norm' + 'alizedAge)' + ';\x0d\x0a\x09\x09\x09#end' + 'if\x0d\x0a\x09\x09\x09\x0d\x0a\x09' + '\x09\x09#ifdef\x20T') + ('ILINGOFFSE' + 'T\x0d\x0a\x09\x09\x09\x09v_T' + 'extureCoor' + 'dinate=Tra' + 'nsformUV(v' + '_TextureCo' + 'ordinate,u' + '_TilingOff' + 'set);\x0d\x0a\x09\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x20\x20' + '\x20\x09}\x0d\x0a\x20\x20\x20\x09e' + 'lse\x0d\x0a\x09{\x0d\x0a\x09' + '\x09gl_Positi' + 'on=vec4(2.' + '0,2.0,2.0,' + '1.0);//Dis' + 'card\x20use\x20o' + 'ut\x20of\x20X(-1' + ',1),Y(-1,1' + '),Z(0,1)\x0d\x0a' + '\x09}\x0d\x0a\x09gl_Po' + 'sition=rem' + 'apGLPositi' + 'onZ(gl_Pos' + 'ition);\x0d\x0a}' + '\x0d\x0a\x0d\x0a'), _0x57331a = 'struct\x20Lay' + 'aGI\x0d\x0a{\x0d\x0a\x09v' + 'ec3\x20diffus' + 'e;\x0d\x0a\x09vec3\x20' + 'specular;\x0d' + '\x0a};\x0d\x0a\x0d\x0avec' + '4\x20LayaAirB' + 'RDF(in\x20vec' + '3\x20diffuseC' + 'olor,\x20in\x20v' + 'ec3\x20specul' + 'arColor,\x20i' + 'n\x20float\x20on' + 'eMinusRefl' + 'ectivity,\x20' + 'in\x20float\x20s' + 'moothness,' + '\x20in\x20vec3\x20n' + 'ormal,\x20in\x20' + 'vec3\x20viewD' + 'ir,\x20in\x20vec' + '3\x20lightDir' + ',\x20in\x20vec3\x20' + 'lightColor' + ',\x20in\x20LayaG' + 'I\x20gi)\x0d\x0a{\x0d\x0a' + '\x09float\x20per' + 'ceptualRou' + 'ghness\x20=\x20S' + 'moothnessT' + 'oPerceptua' + 'lRoughness' + '(smoothnes' + 's);\x0d\x0a\x09vec3' + '\x20halfDir\x20=' + '\x20SafeNorma' + 'lize(viewD' + 'ir\x20-\x20light' + 'Dir);\x0d\x0a\x09\x0d\x0a' + '\x09float\x20nv\x20' + '=\x20abs(dot(' + 'normal,\x20vi' + 'ewDir));\x0d\x0a' + '\x09\x0d\x0a\x09float\x20' + 'nl\x20=\x20clamp' + '(dot(norma' + 'l,\x20\x20\x20-ligh' + 'tDir),\x20\x200.' + '0,\x201.0);\x0d\x0a' + '\x09float\x20nh\x20' + '=\x20clamp(do' + 't(normal,\x20' + '\x20\x20\x20\x20halfDi' + 'r),\x20\x200.0,\x20' + '1.0);\x0d\x0a\x09fl' + 'oat\x20lv\x20=\x20c' + 'lamp(dot(l' + 'ightDir,\x20\x20' + '\x20viewDir),' + '\x20\x200.0,\x201.0' + ');\x0d\x0a\x09float' + '\x20lh\x20=\x20clam' + 'p(dot(ligh' + 'tDir,\x20\x20-ha' + 'lfDir),\x20\x200' + '.0,\x201.0);\x0d' + '\x0a\x09\x0d\x0a\x09float' + '\x20diffuseTe' + 'rm\x20=\x20Disne' + 'yDiffuse(n' + 'v,\x20nl,\x20lh,' + '\x20perceptua' + 'lRoughness' + ')\x20*\x20nl;\x0d\x0a\x09' + '\x0d\x0a\x09float\x20r' + 'oughness\x20=' + '\x20Perceptua' + 'lRoughness' + 'ToRoughnes' + 's(perceptu' + 'alRoughnes' + 's);\x0d\x0a\x09\x0d\x0a\x09/' + '/#if\x20UNITY' + '_BRDF_GGX\x0d' + '\x0a\x09\x20//\x20GGX\x20' + 'with\x20rough' + 'tness\x20to\x200' + '\x20would\x20mea' + 'n\x20no\x20specu' + 'lar\x20at\x20all' + ',\x20using\x20ma' + 'x(roughnes' + 's,\x200.002)\x20' + 'here\x20to\x20ma' + 'tch\x20HDrend' + 'erloop\x20rou' + 'ghtness\x20re' + 'mapping.\x0d\x0a' + '\x09roughness' + '\x20=\x20max(rou' + ('ghness,0.0' + '14);\x0d\x0a\x09flo' + 'at\x20V\x20=\x20Smi' + 'thJointGGX' + 'Visibility' + 'Term(nl,\x20n' + 'v,\x20roughne' + 'ss);\x0d\x0a\x09flo' + 'at\x20D\x20=\x20GGX' + 'Term(nh,\x20r' + 'oughness);' + '\x0d\x0a\x09\x0d\x0a\x09floa' + 't\x20specular' + 'Term\x20=\x20V\x20*' + '\x20D\x20*\x20PI;\x0d\x0a' + '\x09\x0d\x0a\x09specul' + 'arTerm\x20=\x20s' + 'qrt(max(0.' + '0001,\x20spec' + 'ularTerm))' + ';\x0d\x0a\x09specul' + 'arTerm\x20=\x20m' + 'ax(0.0,\x20sp' + 'ecularTerm' + '\x20*\x20nl);\x0d\x0a\x09' + '\x0d\x0a\x09float\x20s' + 'urfaceRedu' + 'ction\x20=\x201.' + '0\x20-\x200.28\x20*' + '\x20roughness' + '\x20*\x20percept' + 'ualRoughne' + 'ss;\x0d\x0a\x09floa' + 't\x20grazingT' + 'erm\x20=\x20clam' + 'p(smoothne' + 'ss\x20+\x20(1.0\x20' + '-\x20oneMinus' + 'Reflectivi' + 'ty),\x200.0,\x20' + '1.0);\x0d\x0a\x09\x0d\x0a' + '\x09vec4\x20colo' + 'r;\x0d\x0a\x09color' + '.rgb\x20=\x20dif' + 'fuseColor\x20' + '*\x20(gi.diff' + 'use+lightC' + 'olor\x20*\x20dif' + 'fuseTerm)\x20' + '\x0d\x0a\x09\x09\x09\x20\x20+\x20s' + 'pecularTer' + 'm\x20*\x20lightC' + 'olor\x20*\x20Fre' + 'snelTerm\x20(' + 'specularCo' + 'lor,\x20lh);\x0d' + '\x0a\x09\x09\x09\x20\x20//+\x20' + 'surfaceRed' + 'uction\x20*\x20g' + 'i.specular' + '\x20*\x20Fresnel' + 'Lerp(specu' + 'larColor,\x20' + 'vec3(grazi' + 'ngTerm),\x20n' + 'v);\x0d\x0a\x09\x0d\x0a\x09r' + 'eturn\x20colo' + 'r;\x0d\x0a}\x0d\x0avec' + '4\x20LayaAirS' + 'tandardRef' + 'lect(in\x20ve' + 'c4\x20albedoC' + 'olor,in\x20fl' + 'oat\x20metall' + 'ic,in\x20floa' + 't\x20smoothne' + 'ss,in\x20Laya' + 'GI\x20gi)\x0d\x0a{\x0d' + '\x0a\x09vec3\x20dif' + 'fuseColor;' + '\x0d\x0a\x09vec3\x20sp' + 'ecularColo' + 'r;\x0d\x0a\x09float' + '\x20alpha;\x0d\x0a\x09' + 'float\x20oneM' + 'inusReflec' + 'tivity;\x0d\x0a\x09' + 'diffuseCol' + 'or\x20=\x20Diffu' + 'seAndSpecu' + 'larFromMet' + 'allic\x20(alb' + 'edoColor.r' + 'gb,\x20metall' + 'ic,\x20specul' + 'arColor,\x20o' + 'neMinusRef' + 'lectivity)' + ';\x0d\x0a\x09diffus' + 'eColor\x20=\x20L') + ('ayaPreMult' + 'iplyAlpha(' + 'diffuseCol' + 'or,\x20albedo' + 'Color.a,\x20o' + 'neMinusRef' + 'lectivity,' + '\x20alpha);\x0d\x0a' + '\x09float\x20per' + 'ceptualRou' + 'ghness\x20=\x20S' + 'moothnessT' + 'oPerceptua' + 'lRoughness' + '(smoothnes' + 's);\x0d\x0a\x09floa' + 't\x20roughnes' + 's\x20=\x20Percep' + 'tualRoughn' + 'essToRough' + 'ness(perce' + 'ptualRough' + 'ness);\x0d\x0a\x09f' + 'loat\x20surfa' + 'ceReductio' + 'n\x20=\x201.0\x20-\x20' + '0.28\x20*\x20rou' + 'ghness\x20*\x20p' + 'erceptualR' + 'oughness;\x0d' + '\x0a\x09vec4\x20col' + 'or;\x0d\x0a\x09colo' + 'r.rgb\x20=\x20su' + 'rfaceReduc' + 'tion\x20*\x20gi.' + 'specular;\x0d' + '\x0a\x09color.a\x20' + '=\x20alpha;\x0d\x0a' + '\x09return\x20co' + 'lor;\x0d\x0a\x0d\x0a}\x0d' + '\x0a\x0d\x0avec4\x20La' + 'yaAirSpecu' + 'larReflect' + '(in\x20vec4\x20a' + 'lbedoColor' + ',in\x20vec3\x20s' + 'pecularCol' + 'or,in\x20floa' + 't\x20smoothne' + 'ss,in\x20Laya' + 'GI\x20gi)\x0d\x0a{\x0d' + '\x0a\x09float\x20on' + 'eMinusRefl' + 'ectivity;\x0d' + '\x0a\x09vec3\x20dif' + 'fuseColor;' + '\x0d\x0a\x09float\x20a' + 'lpha;\x0d\x0a\x09\x0d\x0a' + '\x09diffuseCo' + 'lor\x20=\x20Ener' + 'gyConserva' + 'tionBetwee' + 'nDiffuseAn' + 'dSpecular\x20' + '(albedoCol' + 'or.rgb,\x20sp' + 'ecularColo' + 'r,\x20oneMinu' + 'sReflectiv' + 'ity);\x0d\x0a\x09\x0d\x0a' + '\x09diffuseCo' + 'lor\x20=\x20Laya' + 'PreMultipl' + 'yAlpha(dif' + 'fuseColor,' + '\x20albedoCol' + 'or.a,\x20oneM' + 'inusReflec' + 'tivity,\x20al' + 'pha);\x0d\x0a\x0d\x0a\x09' + 'float\x20perc' + 'eptualRoug' + 'hness\x20=\x20Sm' + 'oothnessTo' + 'Perceptual' + 'Roughness(' + 'smoothness' + ');\x0d\x0a\x09float' + '\x20roughness' + '\x20=\x20Percept' + 'ualRoughne' + 'ssToRoughn' + 'ess(percep' + 'tualRoughn' + 'ess);\x0d\x0a\x09fl' + 'oat\x20surfac' + 'eReduction' + '\x20=\x201.0\x20-\x200' + '.28\x20*\x20roug' + 'hness\x20*\x20pe') + ('rceptualRo' + 'ughness;\x0d\x0a' + '\x09vec4\x20colo' + 'r;\x0d\x0a\x09color' + '.rgb\x20=\x20sur' + 'faceReduct' + 'ion\x20*\x20gi.s' + 'pecular;\x0d\x0a' + '\x09color.a\x20=' + '\x20alpha;\x0d\x0a\x09' + 'return\x20col' + 'or;\x0d\x0a}'), _0x1cb81c = '#include\x20\x22' + 'PBRUtils.g' + 'lsl\x22\x0d\x0a#inc' + 'lude\x20\x22BRDF' + '.glsl\x22\x0d\x0a\x0d\x0a' + 'vec4\x20PBRSp' + 'ecularLigh' + 't(in\x20vec4\x20' + 'albedoColo' + 'r,\x20in\x20vec3' + '\x20specularC' + 'olor,\x20in\x20f' + 'loat\x20smoot' + 'hness,\x20in\x20' + 'vec3\x20norma' + 'l,\x20in\x20vec3' + '\x20viewDir,\x20' + 'in\x20vec3\x20li' + 'ghtDir,\x20in' + '\x20vec3\x20ligh' + 'tColor,\x20in' + '\x20LayaGI\x20gi' + ')\x0d\x0a{\x0d\x0a\x09flo' + 'at\x20oneMinu' + 'sReflectiv' + 'ity;\x0d\x0a\x09vec' + '3\x20diffuseC' + 'olor;\x0d\x0a\x09fl' + 'oat\x20alpha;' + '\x0d\x0a\x09\x0d\x0a\x09diff' + 'useColor\x20=' + '\x20EnergyCon' + 'servationB' + 'etweenDiff' + 'useAndSpec' + 'ular\x20(albe' + 'doColor.rg' + 'b,\x20specula' + 'rColor,\x20on' + 'eMinusRefl' + 'ectivity);' + '\x0d\x0a\x09\x0d\x0a\x09diff' + 'useColor\x20=' + '\x20LayaPreMu' + 'ltiplyAlph' + 'a(diffuseC' + 'olor,\x20albe' + 'doColor.a,' + '\x20oneMinusR' + 'eflectivit' + 'y,\x20alpha);' + '\x0d\x0a\x09\x0d\x0a\x09vec4' + '\x20color\x20=\x20L' + 'ayaAirBRDF' + '(diffuseCo' + 'lor,\x20specu' + 'larColor,\x20' + 'oneMinusRe' + 'flectivity' + ',\x20smoothne' + 'ss,\x20normal' + ',\x20viewDir,' + '\x20lightDir,' + '\x20lightColo' + 'r,\x20gi);\x0d\x0a\x09' + 'color.a\x20=\x20' + 'alpha;\x0d\x0a\x09r' + 'eturn\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'ec4\x20PBRSpe' + 'cularDiect' + 'ionLight\x20(' + 'in\x20vec4\x20al' + 'bedoColor,' + '\x20in\x20vec3\x20s' + 'pecularCol' + 'or,\x20in\x20flo' + 'at\x20smoothn' + 'ess,\x20in\x20ve' + 'c3\x20normal,' + '\x20in\x20vec3\x20v' + 'iewDir,\x20in' + '\x20Direction' + 'Light\x20ligh' + 't,\x20in\x20Laya' + 'GI\x20gi,in\x20f' + 'loat\x20shado' + 'wValue)\x0d\x0a{' + '\x0d\x0a\x09vec3\x20li' + 'ghtVec\x20=\x20n' + 'ormalize(l' + 'ight.direc' + 'tion);\x0d\x0a\x09r' + 'eturn\x20PBRS' + 'pecularLig' + 'ht(albedoC' + 'olor,\x20spec' + 'ularColor,' + '\x20smoothnes' + 's,\x20normal,' + ('\x20viewDir,\x20' + 'lightVec,\x20' + 'light.colo' + 'r*shadowVa' + 'lue,\x20gi);\x0d' + '\x0a}\x0d\x0a#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0avec4\x20PB' + 'RSpecularP' + 'ointLight\x20' + '(in\x20vec4\x20a' + 'lbedoColor' + ',\x20in\x20vec3\x20' + 'specularCo' + 'lor,\x20in\x20fl' + 'oat\x20smooth' + 'ness,\x20in\x20v' + 'ec3\x20normal' + ',\x20in\x20vec3\x20' + 'viewDir,\x20i' + 'n\x20PointLig' + 'ht\x20light,\x20' + 'in\x20vec3\x20po' + 's,\x20in\x20Laya' + 'GI\x20gi,in\x20f' + 'loat\x20shado' + 'wValue)\x0d\x0a{' + '\x0d\x0a\x09vec3\x20li' + 'ghtVec\x20=\x20p' + 'os-light.p' + 'osition;\x0d\x0a' + '\x09float\x20att' + 'enuate\x20=\x20L' + 'ayaAttenua' + 'tion(light' + 'Vec,\x201.0/l' + 'ight.range' + ');\x0d\x0a\x09retur' + 'n\x20PBRSpecu' + 'larLight(a' + 'lbedoColor' + ',\x20specular' + 'Color,\x20smo' + 'othness,\x20n' + 'ormal,\x20vie' + 'wDir,\x20ligh' + 'tVec,\x20ligh' + 't.color*sh' + 'adowValue,' + '\x20gi)\x20*\x20att' + 'enuate;\x0d\x0a}' + '\x0d\x0a#endif\x0d\x0a' + 'vec4\x20PBRSp' + 'ecularSpot' + 'Light\x20(in\x20' + 'vec4\x20albed' + 'oColor,\x20in' + '\x20vec3\x20spec' + 'ularColor,' + '\x20in\x20float\x20' + 'smoothness' + ',\x20in\x20vec3\x20' + 'normal,\x20in' + '\x20vec3\x20view' + 'Dir,\x20in\x20Sp' + 'otLight\x20li' + 'ght,\x20in\x20ve' + 'c3\x20pos,\x20in' + '\x20LayaGI\x20gi' + ',in\x20float\x20' + 'shadowValu' + 'e)\x0d\x0a{\x0d\x0a\x09ve' + 'c3\x20lightVe' + 'c\x20=\x20\x20pos\x20-' + '\x20light.pos' + 'ition;\x0d\x0a\x09v' + 'ec3\x20normal' + 'LightVec\x20=' + '\x20normalize' + '(lightVec)' + ';\x0d\x0a\x09vec2\x20c' + 'osAngles\x20=' + '\x20cos(vec2(' + 'light.spot' + ',\x20light.sp' + 'ot*0.5)\x20*\x20' + '0.5);//Con' + 'eAttenuati' + 'on\x0d\x0a\x09float' + '\x20dl\x20=\x20dot(' + 'normalize(' + 'light.dire' + 'ction),\x20no' + 'rmalLightV' + 'ec);\x0d\x0a\x09dl\x20' + '*=\x20smooths' + 'tep(cosAng' + 'les[0],\x20co' + 'sAngles[1]' + ',\x20dl);\x0d\x0a\x09f') + ('loat\x20atten' + 'uate\x20=\x20Lay' + 'aAttenuati' + 'on(lightVe' + 'c,\x201.0/lig' + 'ht.range)\x20' + '*\x20dl;\x0d\x0a\x09re' + 'turn\x20PBRSp' + 'ecularLigh' + 't(albedoCo' + 'lor,\x20specu' + 'larColor,\x20' + 'smoothness' + ',\x20normal,\x20' + 'viewDir,\x20l' + 'ightVec,\x20l' + 'ight.color' + '*shadowVal' + 'ue,\x20gi)\x20*\x20' + 'attenuate;' + '\x0d\x0a}\x0d\x0a\x0d\x0a//v' + 'ec4\x20PBRSta' + 'ndardSpotL' + 'ight1\x20(in\x20' + 'vec4\x20albed' + 'oColor,\x20in' + '\x20float\x20met' + 'allic,\x20in\x20' + 'float\x20smoo' + 'thness,\x20in' + '\x20vec3\x20norm' + 'al,\x20in\x20vec' + '3\x20viewDir,' + '\x20in\x20SpotLi' + 'ght\x20light,' + '\x20in\x20vec3\x20p' + 'os,\x20in\x20Lay' + 'aGI\x20gi)\x0d\x0a/' + '/{\x0d\x0a//\x09vec' + '4\x20lightCoo' + 'rd\x20=\x20u_Spo' + 'tLightMatr' + 'ix\x20*\x20vec4(' + 'pos,\x201.0);' + '\x0d\x0a//\x09\x0d\x0a//\x09' + 'float\x20dist' + 'ance\x20=\x20dot' + '(lightCoor' + 'd,\x20lightCo' + 'ord);\x0d\x0a//\x09' + 'float\x20atte' + 'nuate\x20=\x20(l' + 'ightCoord.' + 'z\x20<\x200.0)\x20?' + '\x20texture2D' + '(u_RangeTe' + 'xture,\x20vec' + '2(distance' + ')).w\x20:\x200.0' + ';\x0d\x0a//\x09//fl' + 'oat\x20attenu' + 'ate\x20=\x20(lig' + 'htCoord.z\x20' + '<\x200.0)\x20?\x20t' + 'exture2D(u' + '_AngleText' + 'ure,\x20vec2(' + 'lightCoord' + '.x\x20/\x20light' + 'Coord.w\x20+\x20' + '0.5,\x20light' + 'Coord.y\x20/\x20' + 'lightCoord' + '.w\x20+\x200.5))' + '.r\x20*\x20textu' + 're2D(u_Ran' + 'geTexture,' + '\x20vec2(dist' + 'ance)).w\x20:' + '\x200.0;\x0d\x0a//\x09' + '//vec2\x20_uv' + '\x20=\x20vec2(po' + 's.x\x20*\x20180.' + '0/(2.0\x20*\x20p' + 'os.z)\x20+\x200.' + '5,\x20pos.y\x20*' + '\x20180.0/(2.' + '0\x20*\x20pos.z)' + '\x20+\x200.5);\x0d\x0a' + '//\x09vec3\x20li' + 'ghtVec\x20=\x20n' + 'ormalize(p' + 'os\x20-\x20light' + '.cosition)' + ';\x0d\x0a//\x09retu' + 'rn\x20PBRStan' + 'dardLight(' + 'albedoColo' + 'r,\x20metalli' + 'c,\x20smoothn') + ('ess,\x20norma' + 'l,\x20viewDir' + ',\x20lightVec' + ',\x20light.co' + 'lor,\x20gi)\x20*' + '\x20attenuate' + ';\x0d\x0a//}\x0d\x0a\x0d\x0a' + 'vec4\x20Specu' + 'larGloss(f' + 'loat\x20albed' + 'oTextureAl' + 'pha,\x20in\x20ve' + 'c2\x20uv0)\x0d\x0a{' + '\x0d\x0a\x20\x20\x20\x20vec4' + '\x20sg;\x0d\x0a\x09\x0d\x0a\x09' + '#ifdef\x20SPE' + 'CULARTEXTU' + 'RE\x0d\x0a\x09\x09vec4' + '\x20specularT' + 'extureColo' + 'r\x20=\x20textur' + 'e2D(u_Spec' + 'ularTextur' + 'e,\x20uv0);\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'MOOTHNESSS' + 'OURCE_ALBE' + 'DOTEXTURE_' + 'ALPHA\x0d\x0a\x09\x09\x09' + 'sg.rgb\x20=\x20s' + 'pecularTex' + 'tureColor.' + 'rgb;\x0d\x0a\x09\x09\x09s' + 'g.a\x20=\x20albe' + 'doTextureA' + 'lpha;\x0d\x0a\x09\x09#' + 'else\x0d\x0a\x09\x09\x09s' + 'g\x20=\x20specul' + 'arTextureC' + 'olor;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09\x09s' + 'g.a\x20*=\x20u_s' + 'moothnessS' + 'cale;\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09sg.' + 'rgb\x20=\x20u_Sp' + 'ecularColo' + 'r.rgb;\x0d\x0a\x09\x09' + '#ifdef\x20SMO' + 'OTHNESSSOU' + 'RCE_ALBEDO' + 'TEXTURE_AL' + 'PHA\x0d\x0a\x09\x09\x09sg' + '.a\x20=\x20albed' + 'oTextureAl' + 'pha\x20*\x20u_sm' + 'oothnessSc' + 'ale;\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09sg' + '.a\x20=\x20u_smo' + 'othness;\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20sg;\x0d\x0a}\x0d' + '\x0a\x0d\x0a'), _0x3b615f = '#include\x20\x22' + 'PBRUtils.g' + 'lsl\x22\x0d\x0a#inc' + 'lude\x20\x22BRDF' + '.glsl\x22\x0d\x0a\x0d\x0a' + 'vec4\x20PBRSt' + 'andardLigh' + 't(in\x20vec4\x20' + 'albedoColo' + 'r,\x20in\x20floa' + 't\x20metallic' + ',\x20in\x20float' + '\x20smoothnes' + 's,\x20in\x20vec3' + '\x20normal,\x20i' + 'n\x20vec3\x20vie' + 'wDir,\x20in\x20v' + 'ec3\x20lightD' + 'ir,\x20in\x20vec' + '3\x20lightCol' + 'or,\x20in\x20Lay' + 'aGI\x20gi)\x0d\x0a{' + '\x0d\x0a\x09float\x20o' + 'neMinusRef' + 'lectivity;' + '\x0d\x0a\x09vec3\x20di' + 'ffuseColor' + ';\x0d\x0a\x09vec3\x20s' + 'pecularCol' + 'or;\x0d\x0a\x09floa' + 't\x20alpha;\x0d\x0a' + '\x09\x0d\x0a\x09diffus' + 'eColor\x20=\x20D' + 'iffuseAndS' + 'pecularFro' + 'mMetallic\x20' + '(albedoCol' + 'or.rgb,\x20me' + 'tallic,\x20sp' + 'ecularColo' + 'r,\x20oneMinu' + 'sReflectiv' + 'ity);\x0d\x0a\x09\x0d\x0a' + '\x09diffuseCo' + 'lor\x20=\x20Laya' + 'PreMultipl' + 'yAlpha(dif' + 'fuseColor,' + '\x20albedoCol' + 'or.a,\x20oneM' + 'inusReflec' + 'tivity,\x20al' + 'pha);\x0d\x0a\x09\x0d\x0a' + '\x09vec4\x20colo' + 'r\x20=\x20LayaAi' + 'rBRDF(diff' + 'useColor,\x20' + 'specularCo' + 'lor,\x20oneMi' + 'nusReflect' + 'ivity,\x20smo' + 'othness,\x20n' + 'ormal,\x20vie' + 'wDir,\x20ligh' + 'tDir,\x20ligh' + 'tColor,\x20gi' + ');\x0d\x0a\x09color' + '.a\x20=\x20alpha' + ';\x0d\x0a\x09return' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0avec4\x20P' + 'BRStandard' + 'DiectionLi' + 'ght\x20(in\x20ve' + 'c4\x20albedoC' + 'olor,\x20in\x20f' + 'loat\x20metal' + 'lic,\x20in\x20fl' + 'oat\x20smooth' + 'ness,\x20in\x20v' + 'ec3\x20normal' + ',\x20in\x20vec3\x20' + 'viewDir,\x20i' + 'n\x20Directio' + 'nLight\x20lig' + 'ht,\x20in\x20Lay' + 'aGI\x20gi,in\x20' + 'float\x20shad' + 'owValue)\x0d\x0a' + '{\x0d\x0a\x09vec3\x20l' + 'ightVec\x20=\x20' + 'normalize(' + 'light.dire' + 'ction);\x0d\x0a\x09' + 'return\x20PBR' + 'StandardLi' + 'ght(albedo' + 'Color,\x20met' + 'allic,\x20smo' + 'othness,\x20n' + ('ormal,\x20vie' + 'wDir,\x20ligh' + 'tVec,\x20ligh' + 't.color*sh' + 'adowValue,' + '\x20gi);\x0d\x0a}\x0d\x0a' + '#ifdef\x20POI' + 'NTLIGHT\x0d\x0av' + 'ec4\x20PBRSta' + 'ndardPoint' + 'Light\x20(in\x20' + 'vec4\x20albed' + 'oColor,\x20in' + '\x20float\x20met' + 'allic,\x20in\x20' + 'float\x20smoo' + 'thness,\x20in' + '\x20vec3\x20norm' + 'al,\x20in\x20vec' + '3\x20viewDir,' + '\x20in\x20PointL' + 'ight\x20light' + ',\x20in\x20vec3\x20' + 'pos,\x20in\x20La' + 'yaGI\x20gi,in' + '\x20float\x20sha' + 'dowValue)\x0d' + '\x0a{\x0d\x0a\x09vec3\x20' + 'lightVec\x20=' + '\x20pos-light' + '.position;' + '\x0d\x0a\x09float\x20a' + 'ttenuate\x20=' + '\x20LayaAtten' + 'uation(lig' + 'htVec,\x201.0' + '/light.ran' + 'ge);\x0d\x0a\x09ret' + 'urn\x20PBRSta' + 'ndardLight' + '(albedoCol' + 'or,\x20metall' + 'ic,\x20smooth' + 'ness,\x20norm' + 'al,\x20viewDi' + 'r,\x20lightVe' + 'c,\x20light.c' + 'olor*shado' + 'wValue,\x20gi' + ')\x20*\x20attenu' + 'ate;\x0d\x0a}\x0d\x0a#' + 'endif\x0d\x0avec' + '4\x20PBRStand' + 'ardSpotLig' + 'ht\x20(in\x20vec' + '4\x20albedoCo' + 'lor,\x20in\x20fl' + 'oat\x20metall' + 'ic,\x20in\x20flo' + 'at\x20smoothn' + 'ess,\x20in\x20ve' + 'c3\x20normal,' + '\x20in\x20vec3\x20v' + 'iewDir,\x20in' + '\x20SpotLight' + '\x20light,\x20in' + '\x20vec3\x20pos,' + '\x20in\x20LayaGI' + '\x20gi,in\x20flo' + 'at\x20shadowV' + 'alue)\x0d\x0a{\x0d\x0a' + '\x09vec3\x20ligh' + 'tVec\x20=\x20\x20po' + 's\x20-\x20light.' + 'position;\x0d' + '\x0a\x09vec3\x20nor' + 'malLightVe' + 'c\x20=\x20normal' + 'ize(lightV' + 'ec);\x0d\x0a\x09vec' + '2\x20cosAngle' + 's\x20=\x20cos(ve' + 'c2(light.s' + 'pot,\x20light' + '.spot*0.5)' + '\x20*\x200.5);//' + 'ConeAttenu' + 'ation\x0d\x0a\x09fl' + 'oat\x20dl\x20=\x20d' + 'ot(normali' + 'ze(light.d' + 'irection),' + '\x20normalLig' + 'htVec);\x0d\x0a\x09' + 'dl\x20*=\x20smoo' + 'thstep(cos' + 'Angles[0],' + '\x20cosAngles' + '[1],\x20dl);\x0d' + '\x0a\x09float\x20at') + ('tenuate\x20=\x20' + 'LayaAttenu' + 'ation(ligh' + 'tVec,\x201.0/' + 'light.rang' + 'e)\x20*\x20dl;\x0d\x0a' + '\x09return\x20PB' + 'RStandardL' + 'ight(albed' + 'oColor,\x20me' + 'tallic,\x20sm' + 'oothness,\x20' + 'normal,\x20vi' + 'ewDir,\x20lig' + 'htVec,\x20lig' + 'ht.color*s' + 'hadowValue' + ',\x20gi)\x20*\x20at' + 'tenuate;\x0d\x0a' + '\x09\x0d\x0a}\x0d\x0a\x0d\x0a//' + 'vec4\x20PBRSt' + 'andardSpot' + 'Light1\x20(in' + '\x20vec4\x20albe' + 'doColor,\x20i' + 'n\x20float\x20me' + 'tallic,\x20in' + '\x20float\x20smo' + 'othness,\x20i' + 'n\x20vec3\x20nor' + 'mal,\x20in\x20ve' + 'c3\x20viewDir' + ',\x20in\x20SpotL' + 'ight\x20light' + ',\x20in\x20vec3\x20' + 'pos,\x20in\x20La' + 'yaGI\x20gi)\x0d\x0a' + '//{\x0d\x0a//\x09ve' + 'c4\x20lightCo' + 'ord\x20=\x20u_Sp' + 'otLightMat' + 'rix\x20*\x20vec4' + '(pos,\x201.0)' + ';\x0d\x0a//\x09\x0d\x0a//' + '\x09float\x20dis' + 'tance\x20=\x20do' + 't(lightCoo' + 'rd,\x20lightC' + 'oord);\x0d\x0a//' + '\x09float\x20att' + 'enuate\x20=\x20(' + 'lightCoord' + '.z\x20<\x200.0)\x20' + '?\x20texture2' + 'D(u_RangeT' + 'exture,\x20ve' + 'c2(distanc' + 'e)).w\x20:\x200.' + '0;\x0d\x0a//\x09//f' + 'loat\x20atten' + 'uate\x20=\x20(li' + 'ghtCoord.z' + '\x20<\x200.0)\x20?\x20' + 'texture2D(' + 'u_AngleTex' + 'ture,\x20vec2' + '(lightCoor' + 'd.x\x20/\x20ligh' + 'tCoord.w\x20+' + '\x200.5,\x20ligh' + 'tCoord.y\x20/' + '\x20lightCoor' + 'd.w\x20+\x200.5)' + ').r\x20*\x20text' + 'ure2D(u_Ra' + 'ngeTexture' + ',\x20vec2(dis' + 'tance)).w\x20' + ':\x200.0;\x0d\x0a//' + '\x09//vec2\x20_u' + 'v\x20=\x20vec2(p' + 'os.x\x20*\x20180' + '.0/(2.0\x20*\x20' + 'pos.z)\x20+\x200' + '.5,\x20pos.y\x20' + '*\x20180.0/(2' + '.0\x20*\x20pos.z' + ')\x20+\x200.5);\x0d' + '\x0a//\x09vec3\x20l' + 'ightVec\x20=\x20' + 'normalize(' + 'pos\x20-\x20ligh' + 't.position' + ');\x0d\x0a//\x09ret' + 'urn\x20PBRSta' + 'ndardLight' + '(albedoCol' + 'or,\x20metall' + 'ic,\x20smooth' + 'ness,\x20norm') + ('al,\x20viewDi' + 'r,\x20lightVe' + 'c,\x20light.c' + 'olor,\x20gi)\x20' + '*\x20attenuat' + 'e;\x0d\x0a//}\x0d\x0a\x0d' + '\x0avec2\x20Meta' + 'llicGloss(' + 'in\x20float\x20a' + 'lbedoTextu' + 'reAlpha,\x20i' + 'n\x20vec2\x20uv0' + ')\x0d\x0a{\x0d\x0a\x09vec' + '2\x20mg;\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20ME' + 'TALLICGLOS' + 'STEXTURE\x0d\x0a' + '\x09\x09vec4\x20met' + 'allicGloss' + 'TextureCol' + 'or\x20=\x20textu' + 're2D(u_Met' + 'allicGloss' + 'Texture,\x20u' + 'v0);\x0d\x0a\x09\x09#i' + 'fdef\x20SMOOT' + 'HNESSSOURC' + 'E_ALBEDOTE' + 'XTURE_ALPH' + 'A\x0d\x0a\x09\x09\x09mg.r' + '\x20=\x20metalli' + 'cGlossText' + 'ureColor.r' + ';\x0d\x0a\x09\x09\x09mg.g' + '\x20=\x20albedoT' + 'extureAlph' + 'a;\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x20\x20\x20\x20m' + 'g\x20=\x20metall' + 'icGlossTex' + 'tureColor.' + 'ra;\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09\x09mg.' + 'g\x20*=\x20u_smo' + 'othnessSca' + 'le;\x0d\x0a\x09#els' + 'e\x0d\x0a\x09\x09mg.r\x20' + '=\x20u_metall' + 'ic;\x0d\x0a\x09\x09#if' + 'def\x20SMOOTH' + 'NESSSOURCE' + '_ALBEDOTEX' + 'TURE_ALPHA' + '\x0d\x0a\x09\x09\x09mg.g\x20' + '=\x20albedoTe' + 'xtureAlpha' + '\x20*\x20u_smoot' + 'hnessScale' + ';\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09mg.g\x20' + '=\x20u_smooth' + 'ness;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x0d\x0a\x09' + 'return\x20mg;' + '\x0d\x0a}\x0d\x0a\x0d\x0a'), _0xe8c665 = '\x0d\x0avec3\x20Unp' + 'ackScaleNo' + 'rmal(in\x20ve' + 'c2\x20uv0)\x0d\x0a{' + '\x0d\x0a\x09#ifdef\x20' + 'NORMALTEXT' + 'URE\x0d\x0a\x09\x09vec' + '3\x20normalT;' + '\x0d\x0a\x09\x09vec4\x20n' + 'ormalMapSa' + 'mple\x20=\x20tex' + 'ture2D(u_N' + 'ormalTextu' + 're,\x20uv0);\x0d' + '\x0a\x09\x09normalT' + '.x\x20=\x202.0\x20*' + '\x20normalMap' + 'Sample.x\x20-' + '\x201.0;\x0d\x0a\x09\x09n' + 'ormalT.y\x20=' + '\x201.0\x20-\x202.0' + '\x20*\x20normalM' + 'apSample.y' + ';\x0d\x0a\x09\x09norma' + 'lT.xy\x20*=\x20u' + '_normalSca' + 'le;\x0d\x0a\x09\x09nor' + 'malT.z\x20=\x20s' + 'qrt(1.0\x20-\x20' + 'clamp(dot(' + 'normalT.xy' + ',\x20normalT.' + 'xy),\x200.0,\x20' + '1.0));\x0d\x0a\x09\x09' + '\x0d\x0a\x09\x09vec3\x20T' + '\x20=\x20normali' + 'ze(v_Tange' + 'nt);\x0d\x0a\x09\x09ve' + 'c3\x20B\x20=\x20nor' + 'malize(v_B' + 'inormal);\x0d' + '\x0a\x09\x09vec3\x20N\x20' + '=\x20normaliz' + 'e(v_Normal' + ');\x0d\x0a\x09\x09mat3' + '\x20TBN\x20=\x20mat' + '3(T,\x20B,\x20N)' + ';\x0d\x0a\x09\x09\x0d\x0a\x09\x09v' + 'ec3\x20bumped' + 'Normal\x20=\x20T' + 'BN\x20*\x20norma' + 'lize(norma' + 'lT);\x0d\x0a\x09\x09re' + 'turn\x20bumpe' + 'dNormal;\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'return\x20nor' + 'malize(v_N' + 'ormal);\x0d\x0a\x09' + '#endif\x0d\x0a}\x0d' + '\x0a\x0d\x0avec4\x20Di' + 'electricSp' + 'ecularColo' + 'r\x20=\x20vec4(0' + '.220916301' + ',\x200.220916' + '301,\x200.220' + '916301,\x201.' + '0\x20-\x200.2209' + '16301);\x0d\x0a\x0d' + '\x0afloat\x20PI\x20' + '=\x203.141592' + '65359;\x0d\x0a\x0d\x0a' + 'vec3\x20Fresn' + 'elTerm\x20(in' + '\x20vec3\x20F0,\x20' + 'in\x20float\x20c' + 'osA)\x0d\x0a{\x0d\x0a\x09' + 'return\x20F0\x20' + '+\x20(vec3(1.' + '0)\x20-\x20F0)\x20*' + '\x20pow(1.0\x20-' + '\x20cosA,\x205.0' + ');\x0d\x0a}\x0d\x0a\x0d\x0av' + 'ec3\x20Fresne' + 'lLerp\x20(in\x20' + 'vec3\x20F0,\x20i' + 'n\x20vec3\x20F90' + ',\x20float\x20co' + 'sA)\x0d\x0a{\x0d\x0a\x20\x20' + '\x20\x20float\x20t\x20' + '=\x20pow(1.0\x20' + '-\x20cosA,\x205.' + '0);\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20mix(' + 'F0,\x20F90,\x20t' + ');\x0d\x0a}\x0d\x0a\x0d\x0af' + 'loat\x20Perce' + 'ptualRough' + 'nessToRoug' + ('hness(in\x20f' + 'loat\x20perce' + 'ptualRough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x09return\x20pe' + 'rceptualRo' + 'ughness\x20*\x20' + 'perceptual' + 'Roughness;' + '\x0d\x0a}\x0d\x0a\x0d\x0aflo' + 'at\x20Percept' + 'ualRoughne' + 'ssToSpecul' + 'arPower(in' + '\x20float\x20per' + 'ceptualRou' + 'ghness)\x0d\x0a{' + '\x0d\x0a\x09float\x20m' + '\x20=\x20Percept' + 'ualRoughne' + 'ssToRoughn' + 'ess(percep' + 'tualRoughn' + 'ess);\x0d\x0a\x09fl' + 'oat\x20sq\x20=\x20m' + 'ax(0.0001,' + '\x20m\x20*\x20m);\x0d\x0a' + '\x09float\x20n\x20=' + '\x20(2.0\x20/\x20sq' + ')\x20-\x202.0;\x0d\x0a' + '\x09n\x20=\x20max(n' + ',\x200.0001);' + '\x0d\x0a\x09return\x20' + 'n;\x0d\x0a}\x0d\x0a\x0d\x0af' + 'loat\x20Rough' + 'nessToPerc' + 'eptualRoug' + 'hness(in\x20f' + 'loat\x20rough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x09return\x20sq' + 'rt(roughne' + 'ss);\x0d\x0a}\x0d\x0a\x0d' + '\x0afloat\x20Smo' + 'othnessToR' + 'oughness(i' + 'n\x20float\x20sm' + 'oothness)\x0d' + '\x0a{\x0d\x0a\x09retur' + 'n\x20(1.0\x20-\x20s' + 'moothness)' + '\x20*\x20(1.0\x20-\x20' + 'smoothness' + ');\x0d\x0a}\x0d\x0a\x0d\x0af' + 'loat\x20Smoot' + 'hnessToPer' + 'ceptualRou' + 'ghness(in\x20' + 'float\x20smoo' + 'thness)\x0d\x0a{' + '\x0d\x0a\x09return\x20' + '(1.0\x20-\x20smo' + 'othness);\x0d' + '\x0a}\x0d\x0a\x0d\x0avec3' + '\x20SafeNorma' + 'lize(in\x20ve' + 'c3\x20inVec)\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20dp3\x20=\x20max' + '(0.001,dot' + '(inVec,inV' + 'ec));\x0d\x0a\x09re' + 'turn\x20inVec' + '\x20*\x20(1.0\x20/\x20' + 'sqrt(dp3))' + ';\x0d\x0a}\x0d\x0a\x0d\x0afl' + 'oat\x20Disney' + 'Diffuse(in' + '\x20float\x20Ndo' + 'tV,\x20in\x20flo' + 'at\x20NdotL,\x20' + 'in\x20float\x20L' + 'dotH,\x20in\x20f' + 'loat\x20perce' + 'ptualRough' + 'ness)\x0d\x0a{\x0d\x0a' + '\x09float\x20fd9' + '0\x20=\x200.5\x20+\x20' + '2.0\x20*\x20Ldot' + 'H\x20*\x20LdotH\x20' + '*\x20perceptu' + 'alRoughnes' + 's;\x0d\x0a\x09float' + '\x20lightScat' + 'ter\x09=\x20(1.0' + '\x20+\x20(fd90\x20-' + '\x201.0)\x20*\x20po' + 'w(1.0\x20-\x20Nd' + 'otL,5.0));' + '\x0d\x0a\x09float\x20v') + ('iewScatter' + '\x09=\x20(1.0\x20+\x20' + '(fd90\x20-\x201.' + '0)\x20*\x20pow(1' + '.0\x20-\x20NdotV' + ',5.0));\x0d\x0a\x0d' + '\x0a\x09return\x20l' + 'ightScatte' + 'r\x20*\x20viewSc' + 'atter;\x0d\x0a}\x0d' + '\x0a\x0d\x0afloat\x20S' + 'mithJointG' + 'GXVisibili' + 'tyTerm\x20(fl' + 'oat\x20NdotL,' + '\x20float\x20Ndo' + 'tV,\x20float\x20' + 'roughness)' + '\x0d\x0a{\x0d\x0a\x09floa' + 't\x20a\x20=\x20roug' + 'hness;\x0d\x0a\x09f' + 'loat\x20lambd' + 'aV\x20=\x20NdotL' + '\x20*\x20(NdotV\x20' + '*\x20(1.0\x20-\x20a' + ')\x20+\x20a);\x0d\x0a\x09' + 'float\x20lamb' + 'daL\x20=\x20Ndot' + 'V\x20*\x20(NdotL' + '\x20*\x20(1.0\x20-\x20' + 'a)\x20+\x20a);\x0d\x0a' + '\x0d\x0a\x09return\x20' + '0.5\x20/\x20(lam' + 'bdaV\x20+\x20lam' + 'bdaL\x20+\x200.0' + '0001);\x0d\x0a}\x0d' + '\x0a\x0d\x0afloat\x20G' + 'GXTerm\x20(fl' + 'oat\x20NdotH,' + '\x20float\x20rou' + 'ghness)\x0d\x0a{' + '\x0d\x0a\x09float\x20a' + '2\x20=\x20roughn' + 'ess\x20*\x20roug' + 'hness;\x0d\x0a\x09f' + 'loat\x20d\x20=\x20(' + 'NdotH\x20*\x20a2' + '\x20-\x20NdotH)\x20' + '*\x20NdotH\x20+\x20' + '1.0;\x0d\x0a\x09ret' + 'urn\x200.3183' + '0988618\x20*\x20' + 'a2\x20/\x20(d\x20*\x20' + 'd\x20+\x200.0000' + '001);\x0d\x0a}\x0d\x0a' + '\x0d\x0afloat\x20On' + 'eMinusRefl' + 'ectivityFr' + 'omMetallic' + '(in\x20float\x20' + 'metallic)\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20oneMinusD' + 'ielectricS' + 'pec\x20=\x20Diel' + 'ectricSpec' + 'ularColor.' + 'a;\x0d\x0a\x09retur' + 'n\x20oneMinus' + 'Dielectric' + 'Spec\x20-\x20met' + 'allic\x20*\x20on' + 'eMinusDiel' + 'ectricSpec' + ';\x0d\x0a}\x0d\x0a\x0d\x0afl' + 'oat\x20Specul' + 'arStrength' + '(vec3\x20spec' + 'ular)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20//(SHA' + 'DER_TARGET' + '\x20<\x2030)retu' + 'rn\x20specula' + 'r.r;\x20\x0d\x0a\x20\x20\x20' + '\x20return\x20ma' + 'x\x20(max\x20(sp' + 'ecular.r,\x20' + 'specular.g' + '),\x20specula' + 'r.b);\x0d\x0a}\x0d\x0a' + '\x0d\x0avec3\x20Dif' + 'fuseAndSpe' + 'cularFromM' + 'etallic(in' + '\x20vec3\x20diff' + 'useColor,\x20' + 'in\x20float\x20m' + 'etallic,\x20o' + 'ut\x20vec3\x20sp' + 'ecularColo') + ('r,\x20out\x20flo' + 'at\x20oneMinu' + 'sReflectiv' + 'ity)\x0d\x0a{\x0d\x0a\x09' + 'specularCo' + 'lor\x20=\x20mix(' + 'Dielectric' + 'SpecularCo' + 'lor.rgb,\x20d' + 'iffuseColo' + 'r,\x20metalli' + 'c);\x0d\x0a\x09oneM' + 'inusReflec' + 'tivity\x20=\x20O' + 'neMinusRef' + 'lectivityF' + 'romMetalli' + 'c(metallic' + ');\x0d\x0a\x09retur' + 'n\x20diffuseC' + 'olor\x20*\x20one' + 'MinusRefle' + 'ctivity;\x0d\x0a' + '}\x0d\x0a\x0d\x0avec3\x20' + 'EnergyCons' + 'ervationBe' + 'tweenDiffu' + 'seAndSpecu' + 'lar(in\x20vec' + '3\x20diffuseC' + 'olor,\x20in\x20v' + 'ec3\x20specul' + 'arColor,\x20o' + 'ut\x20float\x20o' + 'neMinusRef' + 'lectivity)' + '\x0d\x0a{\x0d\x0a\x09oneM' + 'inusReflec' + 'tivity\x20=\x201' + '.0\x20-\x20Specu' + 'larStrengt' + 'h(specular' + 'Color);\x0d\x0a\x09' + 'return\x20dif' + 'fuseColor\x20' + '*\x20oneMinus' + 'Reflectivi' + 'ty;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec4\x20Occlu' + 'sion(in\x20ve' + 'c2\x20uv0){\x0d\x0a' + '\x09#ifdef\x20OC' + 'CLUSIONTEX' + 'TURE\x0d\x0a\x09\x09ve' + 'c4\x20occlusi' + 'onTextureC' + 'olor\x20=\x20tex' + 'ture2D(u_O' + 'cclusionTe' + 'xture,\x20uv0' + ');\x0d\x0a\x09\x09floa' + 't\x20occ\x20=\x20oc' + 'clusionTex' + 'tureColor.' + 'g;\x0d\x0a\x09\x09floa' + 't\x20oneMinus' + 'T\x20=\x201.0\x20-\x20' + 'u_occlusio' + 'nStrength;' + '\x0d\x0a\x09\x09float\x20' + 'lerpOneTo\x20' + '=\x20oneMinus' + 'T\x20+\x20occ\x20*\x20' + 'u_occlusio' + 'nStrength;' + '\x0d\x0a\x09\x09return' + '\x20occlusion' + 'TextureCol' + 'or\x20*\x20lerpO' + 'neTo;\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09ret' + 'urn\x20vec4(1' + '.0);\x0d\x0a\x09#en' + 'dif\x0d\x0a}\x0d\x0a\x0d\x0a' + 'vec2\x20Paral' + 'laxOffset(' + 'in\x20vec3\x20vi' + 'ewDir){\x0d\x0a\x09' + '#ifdef\x20PAR' + 'ALLAXTEXTU' + 'RE\x0d\x0a\x09\x09floa' + 't\x20h\x20=\x20text' + 'ure2D(u_Pa' + 'rallaxText' + 'ure,\x20v_Tex' + 'coord0).g;' + '\x0d\x0a\x09\x09h\x20=\x20h\x20' + '*\x20u_parall' + 'axScale\x20-\x20' + 'u_parallax') + ('Scale\x20/\x202.' + '0;\x0d\x0a\x09\x09vec3' + '\x20v\x20=\x20viewD' + 'ir;\x0d\x0a\x09\x09v.z' + '\x20+=\x200.42;\x0d' + '\x0a\x09\x09vec2\x20of' + 'fset\x20=\x20h\x20*' + '\x20(v.xy\x20/\x20v' + '.z);\x0d\x0a\x09\x09re' + 'turn\x20v_Tex' + 'coord0\x20+\x20o' + 'ffset;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09re' + 'turn\x20v_Tex' + 'coord0;\x0d\x0a\x09' + '#endif\x0d\x0a}\x0d' + '\x0a\x0d\x0avec3\x20Re' + 'flectCubeM' + 'ap(in\x20vec3' + '\x20viewDir,\x20' + 'in\x20vec3\x20no' + 'rmal){\x0d\x0a\x09#' + 'ifdef\x20REFL' + 'ECTMAP\x0d\x0a\x09\x09' + 'vec3\x20incid' + 'ent\x20=\x20-vie' + 'wDir;\x0d\x0a\x09\x09v' + 'ec3\x20reflec' + 'tionVector' + '\x20=\x20reflect' + '(incident,' + '\x20normal);\x0d' + '\x0a\x09\x09vec3\x20re' + 'flectionCo' + 'lor\x20=\x20text' + 'ureCube(u_' + 'ReflectTex' + 'ture,\x20vec3' + '(-reflecti' + 'onVector.x' + ',\x20reflecti' + 'onVector.y' + 'z)).rgb;\x0d\x0a' + '\x09\x09return\x20r' + 'eflectionC' + 'olor\x20*\x20u_R' + 'eflectInte' + 'nsity;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09re' + 'turn\x20vec3(' + '0.0);\x0d\x0a\x09#e' + 'ndif\x0d\x0a}\x0d\x0a\x0d' + '\x0a\x0d\x0a\x0d\x0avec3\x20' + 'LayaPreMul' + 'tiplyAlpha' + '(vec3\x20diff' + 'Color,\x20flo' + 'at\x20alpha,\x20' + 'float\x20oneM' + 'inusReflec' + 'tivity,\x20ou' + 't\x20float\x20ou' + 'tModifiedA' + 'lpha)\x0d\x0a{\x0d\x0a' + '\x09#ifdef\x20AL' + 'PHAPREMULT' + 'IPLY\x0d\x0a\x09\x09di' + 'ffColor\x20*=' + '\x20alpha;\x0d\x0a\x09' + '\x09outModifi' + 'edAlpha\x20=\x20' + '1.0\x20-\x20oneM' + 'inusReflec' + 'tivity\x20+\x20a' + 'lpha\x20*\x20one' + 'MinusRefle' + 'ctivity;\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'outModifie' + 'dAlpha\x20=\x20a' + 'lpha;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09ret' + 'urn\x20diffCo' + 'lor;\x0d\x0a}\x0d\x0a\x0d' + '\x0a'), _0x2c3b1a = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0avarying\x20v' + 'ec3\x20v_Norm' + 'al;\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Tangent;\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Binor' + 'mal;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_ViewDir;\x0d' + '\x0avarying\x20v' + 'ec3\x20v_Posi' + 'tionWorld;' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20vec3\x20u_A' + 'mbientColo' + 'r;\x0d\x0aunifor' + 'm\x20vec4\x20u_A' + 'lbedoColor' + ';\x0d\x0auniform' + '\x20vec4\x20u_Sp' + 'ecularColo' + 'r;\x0d\x0a\x0d\x0a#ifd' + 'ef\x20ALBEDOT' + 'EXTURE\x0d\x0a\x09u' + 'niform\x20sam' + 'pler2D\x20u_A' + 'lbedoTextu' + 're;\x0d\x0a#endi' + 'f\x0d\x0a#ifdef\x20' + 'SPECULARTE' + 'XTURE\x0d\x0a\x09un' + 'iform\x20samp' + 'ler2D\x20u_Sp' + 'ecularText' + 'ure;\x0d\x0a#end' + 'if\x0d\x0a#ifdef' + '\x20NORMALTEX' + 'TURE\x0d\x0a\x09uni' + 'form\x20sampl' + 'er2D\x20u_Nor' + 'malTexture' + ';\x0d\x0a\x09unifor' + 'm\x20float\x20u_' + 'normalScal' + 'e;\x0d\x0a#endif' + '\x0d\x0a#ifdef\x20P' + 'ARALLAXTEX' + 'TURE\x0d\x0a\x09uni' + 'form\x20sampl' + 'er2D\x20u_Par' + 'allaxTextu' + 're;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_parallax' + 'Scale;\x0d\x0a#e' + 'ndif\x0d\x0a#ifd' + 'ef\x20OCCLUSI' + 'ONTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_Occlusio' + 'nTexture;\x0d' + '\x0a\x09uniform\x20' + 'float\x20u_oc' + 'clusionStr' + 'ength;\x0d\x0a#e' + 'ndif\x0d\x0a#ifd' + 'ef\x20EMISSIO' + 'N\x0d\x0a\x09#ifdef' + '\x20EMISSIONT' + 'EXTURE\x0d\x0a\x09\x09' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'EmissionTe' + 'xture;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09un' + 'iform\x20vec4' + '\x20u_Emissio' + 'nColor;\x0d\x0a#' + 'endif\x0d\x0a#if' + 'def\x20REFLEC' + 'TMAP\x0d\x0a\x09uni' + 'form\x20sampl' + 'erCube\x20u_R' + 'eflectText' + 'ure;\x0d\x0a\x09uni' + ('form\x20float' + '\x20u_Reflect' + 'Intensity;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0auniform\x20' + 'float\x20u_Al' + 'phaTestVal' + 'ue;\x0d\x0aunifo' + 'rm\x20float\x20u' + '_metallic;' + '\x0d\x0auniform\x20' + 'float\x20u_sm' + 'oothness;\x0d' + '\x0auniform\x20f' + 'loat\x20u_smo' + 'othnessSca' + 'le;\x0d\x0a\x0d\x0a\x0d\x0a\x0d' + '\x0a#include\x20' + '\x22Lighting.' + 'glsl\x22;\x0d\x0a#i' + 'nclude\x20\x22PB' + 'RSpecularL' + 'ighting.gl' + 'sl\x22\x0d\x0a#incl' + 'ude\x20\x22Shado' + 'wHelper.gl' + 'sl\x22\x0d\x0a\x0d\x0avar' + 'ying\x20float' + '\x20v_posView' + 'Z;\x0d\x0a#ifdef' + '\x20RECEIVESH' + 'ADOW\x0d\x0a\x09#if' + '\x20defined(S' + 'HADOWMAP_P' + 'SSM2)||def' + 'ined(SHADO' + 'WMAP_PSSM3' + ')\x0d\x0a\x09\x09unifo' + 'rm\x20mat4\x20u_' + 'lightShado' + 'wVP[4];\x0d\x0a\x09' + '#endif\x0d\x0a\x09#' + 'ifdef\x20SHAD' + 'OWMAP_PSSM' + '1\x20\x0d\x0a\x09\x09vary' + 'ing\x20vec4\x20v' + '_lightMVPP' + 'os;\x0d\x0a\x09#end' + 'if\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20LEGACYSIN' + 'GLELIGHTIN' + 'G\x0d\x0a\x09#ifdef' + '\x20DIRECTION' + 'LIGHT\x0d\x0a\x09\x09u' + 'niform\x20Dir' + 'ectionLigh' + 't\x20u_Direct' + 'ionLight;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20PO' + 'INTLIGHT\x0d\x0a' + '\x09\x09uniform\x20' + 'PointLight' + '\x20u_PointLi' + 'ght;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20SPOTLIG' + 'HT\x0d\x0a\x09\x09unif' + 'orm\x20SpotLi' + 'ght\x20u_Spot' + 'Light;\x0d\x0a\x09#' + 'endif\x0d\x0a#el' + 'se\x0d\x0a\x09\x09unif' + 'orm\x20mat4\x20u' + '_View;\x0d\x0a\x09\x09' + 'uniform\x20ve' + 'c4\x20u_Proje' + 'ctionParam' + 's;\x0d\x0a\x09\x09unif' + 'orm\x20vec4\x20u' + '_Viewport;' + '\x0d\x0a\x09\x09unifor' + 'm\x20int\x20u_Di' + 'rationLigh' + 'tCount;\x0d\x0a\x09' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_LightBuff' + 'er;\x0d\x0a\x09\x09uni' + 'form\x20sampl' + 'er2D\x20u_Lig' + 'htClusterB' + 'uffer;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20FOG\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_Fog' + 'Start;\x0d\x0a\x09u' + 'niform\x20flo') + ('at\x20u_FogRa' + 'nge;\x0d\x0a\x09uni' + 'form\x20vec3\x20' + 'u_FogColor' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in_castSha' + 'dow()\x0d\x0a{\x0d\x0a' + '\x09gl_FragCo' + 'lor=packDe' + 'pth(v_posV' + 'iewZ);\x0d\x0a\x09#' + 'if\x20defined' + '(DIFFUSEMA' + 'P)&&define' + 'd(ALPHATES' + 'T)\x0d\x0a\x09\x09floa' + 't\x20alpha\x20=\x20' + 'texture2D(' + 'u_AlbedoTe' + 'xture,v_Te' + 'xcoord0).w' + ';\x0d\x0a\x09\x09if(\x20a' + 'lpha\x20<\x20u_A' + 'lphaTestVa' + 'lue\x20)\x0d\x0a\x09\x09{' + '\x0d\x0a\x09\x09\x09disca' + 'rd;\x0d\x0a\x09\x09}\x0d\x0a' + '\x09#endif\x0d\x0a}' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain_normal' + '()\x0d\x0a{\x09\x0d\x0a\x09v' + 'ec3\x20viewDi' + 'r\x20=\x20normal' + 'ize(v_View' + 'Dir);\x0d\x0a\x09\x0d\x0a' + '\x09vec2\x20uv0\x20' + '=\x20Parallax' + 'Offset(vie' + 'wDir);\x0d\x0a\x09\x0d' + '\x0a\x09vec4\x20sg;' + '\x0d\x0a\x09vec4\x20al' + 'bedoColor;' + '\x0d\x0a\x09#ifdef\x20' + 'ALBEDOTEXT' + 'URE\x0d\x0a\x09\x09vec' + '4\x20albedoTe' + 'xtureColor' + '\x20=\x20texture' + '2D(u_Albed' + 'oTexture,\x20' + 'uv0);\x0d\x0a\x09\x09a' + 'lbedoColor' + '\x20=\x20albedoT' + 'extureColo' + 'r\x20*\x20u_Albe' + 'doColor;\x0d\x0a' + '\x09\x09sg\x20=\x20Spe' + 'cularGloss' + '(albedoTex' + 'tureColor.' + 'a,\x20uv0);\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + 'albedoColo' + 'r\x20=\x20u_Albe' + 'doColor;\x0d\x0a' + '\x09\x09sg\x20=\x20Spe' + 'cularGloss' + '(1.0,\x20uv0)' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09#ifd' + 'ef\x20ALPHATE' + 'ST\x0d\x0a\x09\x09if(a' + 'lbedoColor' + '.a\x20<\x20u_Alp' + 'haTestValu' + 'e)\x0d\x0a\x09\x09\x09dis' + 'card;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x20\x20\x0d\x0a' + '\x09vec3\x20norm' + 'al\x20=\x20Unpac' + 'kScaleNorm' + 'al(uv0);\x0d\x0a' + '\x09\x0d\x0a\x09LayaGI' + '\x20gi;\x0d\x0a\x09gi.' + 'diffuse\x20=\x20' + 'u_AmbientC' + 'olor\x20*\x20Occ' + 'lusion(uv0' + ').rgb;\x0d\x0a\x09g' + 'i.specular' + '\x20=\x20Reflect' + 'CubeMap(vi' + 'ewDir,\x20nor' + 'mal);\x0d\x0a\x09\x0d\x0a' + '\x09//float\x20a' + '\x20=\x20(sg.r+s' + 'g.g+sg.b)\x20' + '/\x203.0;\x0d\x0a\x20\x20' + '\x09float\x20sha') + ('dowValue\x20=' + '\x201.0;\x0d\x0a\x09#i' + 'fdef\x20RECEI' + 'VESHADOW\x0d\x0a' + '\x09\x09\x0d\x0a\x09\x09#ifd' + 'ef\x20SHADOWM' + 'AP_PSSM3\x0d\x0a' + '\x09\x09\x09shadowV' + 'alue\x20=\x20get' + 'ShadowPSSM' + '3(\x20u_shado' + 'wMap1,u_sh' + 'adowMap2,u' + '_shadowMap' + '3,u_lightS' + 'hadowVP,u_' + 'shadowPSSM' + 'Distance,u' + '_shadowPCF' + 'offset,v_P' + 'ositionWor' + 'ld,v_posVi' + 'ewZ,0.001)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09#ifde' + 'f\x20SHADOWMA' + 'P_PSSM2\x0d\x0a\x09' + '\x09\x09shadowVa' + 'lue\x20=\x20getS' + 'hadowPSSM2' + '(\x20u_shadow' + 'Map1,u_sha' + 'dowMap2,u_' + 'lightShado' + 'wVP,u_shad' + 'owPSSMDist' + 'ance,u_sha' + 'dowPCFoffs' + 'et,v_Posit' + 'ionWorld,v' + '_posViewZ,' + '0.001);\x0d\x0a\x09' + '\x09#endif\x20\x0d\x0a' + '\x09\x09#ifdef\x20S' + 'HADOWMAP_P' + 'SSM1\x0d\x0a\x09\x09\x09s' + 'hadowValue' + '\x20=\x20getShad' + 'owPSSM1(\x20u' + '_shadowMap' + '1,v_lightM' + 'VPPos,u_sh' + 'adowPSSMDi' + 'stance,u_s' + 'hadowPCFof' + 'fset,v_pos' + 'ViewZ,0.00' + '1);\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09#end' + 'if\x0d\x0a\x09vec4\x20' + 'color\x20=\x20ve' + 'c4(0.0);\x0d\x0a' + '\x09#ifdef\x20LE' + 'GACYSINGLE' + 'LIGHTING\x0d\x0a' + '\x09\x09#ifdef\x20D' + 'IRECTIONLI' + 'GHT\x0d\x0a\x09\x09\x09co' + 'lor\x20+=\x20PBR' + 'SpecularDi' + 'ectionLigh' + 't(albedoCo' + 'lor,\x20sg.rg' + 'b,\x20sg.a,\x20n' + 'ormal,\x20vie' + 'wDir,\x20u_Di' + 'rectionLig' + 'ht,\x20gi,sha' + 'dowValue);' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x0d\x0a\x09\x09#if' + 'def\x20POINTL' + 'IGHT\x0d\x0a\x09\x09\x09c' + 'olor.a\x20=\x200' + '.0;\x0d\x0a\x09\x09\x09co' + 'lor\x20+=\x20PBR' + 'SpecularPo' + 'intLight(a' + 'lbedoColor' + ',\x20sg.rgb,\x20' + 'sg.a,\x20norm' + 'al,\x20viewDi' + 'r,\x20u_Point' + 'Light,\x20v_P' + 'ositionWor' + 'ld,\x20gi,sha' + 'dowValue);' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x09\x09\x0d\x0a\x09\x09#i' + 'fdef\x20SPOTL') + ('IGHT\x0d\x0a\x09\x09\x09c' + 'olor.a\x20=\x200' + '.0;\x0d\x0a\x09\x09\x09co' + 'lor\x20+=\x20PBR' + 'SpecularSp' + 'otLight(al' + 'bedoColor,' + '\x20sg.rgb,\x20s' + 'g.a,\x20norma' + 'l,\x20viewDir' + ',\x20u_SpotLi' + 'ght,\x20v_Pos' + 'itionWorld' + ',\x20gi,shado' + 'wValue);\x0d\x0a' + '\x09\x09#endif\x0d\x0a' + '\x09#else\x0d\x0a\x09\x09' + '#ifdef\x20DIR' + 'ECTIONLIGH' + 'T\x0d\x0a\x09\x09\x09for\x20' + '(int\x20i\x20=\x200' + ';\x20i\x20<\x20MAX_' + 'LIGHT_COUN' + 'T;\x20i++)\x20\x0d\x0a' + '\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09' + 'if(i\x20>=\x20u_' + 'DirationLi' + 'ghtCount)\x0d' + '\x0a\x09\x09\x09\x09\x09brea' + 'k;\x0d\x0a\x09\x09\x09\x09Di' + 'rectionLig' + 'ht\x20directi' + 'onLight\x20=\x20' + 'getDirecti' + 'onLight(u_' + 'LightBuffe' + 'r,i);\x0d\x0a\x09\x09\x09' + '\x09color.a\x20=' + '\x200.0;\x0d\x0a\x09\x09\x09' + '\x09color\x20+=P' + 'BRSpecular' + 'DiectionLi' + 'ght(albedo' + 'Color,\x20sg.' + 'rgb,\x20sg.a,' + '\x20normal,\x20v' + 'iewDir,\x20di' + 'rectionLig' + 'ht,\x20gi,sha' + 'dowValue);' + '\x0d\x0a\x09\x09\x09}\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09\x09' + '#if\x20define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)\x0d\x0a\x09\x09\x09iv' + 'ec4\x20cluste' + 'rInfo\x20=get' + 'ClusterInf' + 'o(u_LightC' + 'lusterBuff' + 'er,u_View,' + 'u_Viewport' + ',\x20v_Positi' + 'onWorld,gl' + '_FragCoord' + ',u_Project' + 'ionParams)' + ';\x0d\x0a\x09\x09\x09#ifd' + 'ef\x20POINTLI' + 'GHT\x0d\x0a\x09\x09\x09\x09f' + 'or\x20(int\x20i\x20' + '=\x200;\x20i\x20<\x20M' + 'AX_LIGHT_C' + 'OUNT;\x20i++)' + '\x20\x0d\x0a\x09\x09\x09\x09{\x0d\x0a' + '\x09\x09\x09\x09\x09if(i\x20' + '>=\x20cluster' + 'Info.x)//P' + 'ointLightC' + 'ount\x0d\x0a\x09\x09\x09\x09' + '\x09\x09break;\x0d\x0a' + '\x09\x09\x09\x09\x09Point' + 'Light\x20poin' + 'tLight\x20=\x20g' + 'etPointLig' + 'ht(u_Light' + 'Buffer,u_L' + 'ightCluste' + 'rBuffer,cl' + 'usterInfo,' + 'i);\x0d\x0a\x09\x09\x09\x09\x09' + 'color.a\x20=\x20' + '0.0;\x0d\x0a\x09\x09\x09\x09' + '\x09color\x20+=P' + 'BRSpecular' + 'PointLight' + '(albedoCol' + 'or,\x20sg.rgb') + (',\x20sg.a,\x20no' + 'rmal,\x20view' + 'Dir,\x20point' + 'Light,\x20v_P' + 'ositionWor' + 'ld,\x20gi,sha' + 'dowValue);' + '\x0d\x0a\x09\x09\x09\x09}\x0d\x0a\x09' + '\x09\x09#endif\x0d\x0a' + '\x09\x09\x09#ifdef\x20' + 'SPOTLIGHT\x0d' + '\x0a\x09\x09\x09\x09for\x20(' + 'int\x20i\x20=\x200;' + '\x20i\x20<\x20MAX_L' + 'IGHT_COUNT' + ';\x20i++)\x20\x0d\x0a\x09' + '\x09\x09\x09{\x0d\x0a\x09\x09\x09\x09' + '\x09if(i\x20>=\x20c' + 'lusterInfo' + '.y)//SpotL' + 'ightCount\x0d' + '\x0a\x09\x09\x09\x09\x09\x09bre' + 'ak;\x0d\x0a\x09\x09\x09\x09\x09' + 'SpotLight\x20' + 'spotLight\x20' + '=\x20getSpotL' + 'ight(u_Lig' + 'htBuffer,u' + '_LightClus' + 'terBuffer,' + 'clusterInf' + 'o,i);\x0d\x0a\x09\x09\x09' + '\x09\x09color.a\x20' + '=\x200.0;\x0d\x0a\x09\x09' + '\x09\x09\x09color\x20+' + '=\x20PBRSpecu' + 'larSpotLig' + 'ht(albedoC' + 'olor,\x20sg.r' + 'gb,\x20sg.a,\x20' + 'normal,\x20vi' + 'ewDir,\x20spo' + 'tLight,\x20v_' + 'PositionWo' + 'rld,\x20gi,sh' + 'adowValue)' + ';\x0d\x0a\x09\x09\x09\x09}\x0d\x0a' + '\x09\x09\x09#endif\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09\x0d\x0a\x09#ifdef' + '\x20REFLECTMA' + 'P\x0d\x0a\x09\x20\x09colo' + 'r\x20+=\x20LayaA' + 'irSpecular' + 'Reflect(al' + 'bedoColor,' + 'sg.rgb,sg.' + 'a,gi);\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '#ifdef\x20EMI' + 'SSION\x0d\x0a\x09\x09v' + 'ec4\x20emissi' + 'onColor\x20=\x20' + 'u_Emission' + 'Color;\x0d\x0a\x09\x09' + '#ifdef\x20EMI' + 'SSIONTEXTU' + 'RE\x0d\x0a\x09\x09\x09emi' + 'ssionColor' + '\x20*=\x20\x20textu' + 're2D(u_Emi' + 'ssionTextu' + 're,\x20uv0);\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09\x09color.r' + 'gb\x20+=\x20emis' + 'sionColor.' + 'rgb;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x0d\x0a\x09gl' + '_FragColor' + '\x20=\x20color;\x0d' + '\x0a\x09#ifdef\x20F' + 'OG\x0d\x0a\x09\x09floa' + 't\x20lerpFact' + '\x20=\x20clamp((' + '1.0\x20/\x20gl_F' + 'ragCoord.w' + '\x20-\x20u_FogSt' + 'art)\x20/\x20u_F' + 'ogRange,\x200' + '.0,\x201.0);\x0d' + '\x0a\x09\x09gl_Frag' + 'Color.rgb\x20' + '=\x20mix(gl_F' + 'ragColor.r' + 'gb,\x20u_FogC' + 'olor,\x20lerp' + 'Fact);\x0d\x0a\x09#' + 'endif\x0d\x0a}\x0d\x0a') + ('\x0d\x0avoid\x20mai' + 'n()\x0d\x0a{\x0d\x0a\x09#' + 'ifdef\x20CAST' + 'SHADOW\x09\x09\x0d\x0a' + '\x09\x09main_cas' + 'tShadow();' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09main_nor' + 'mal();\x0d\x0a\x09#' + 'endif\x20\x20\x0d\x0a}' + '\x0d\x0a\x0d\x0a'), _0x2d078c = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Normal' + ';\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Tangent0;\x0d' + '\x0aattribute' + '\x20vec2\x20a_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0a#ifdef\x20G' + 'PU_INSTANC' + 'E\x0d\x0a\x09attrib' + 'ute\x20mat4\x20a' + '_MvpMatrix' + ';\x0d\x0a#else\x0d\x0a' + '\x09uniform\x20m' + 'at4\x20u_MvpM' + 'atrix;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20GPU_I' + 'NSTANCE\x0d\x0a\x09' + 'attribute\x20' + 'mat4\x20a_Wor' + 'ldMat;\x0d\x0a#e' + 'lse\x0d\x0a\x09unif' + 'orm\x20mat4\x20u' + '_WorldMat;' + '\x0d\x0a#endif\x0d\x0a' + 'uniform\x20ve' + 'c3\x20u_Camer' + 'aPos;\x0d\x0a\x0d\x0av' + 'arying\x20vec' + '2\x20v_Texcoo' + 'rd0;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_Normal;\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Tange' + 'nt;\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Binormal;\x0d' + '\x0avarying\x20v' + 'ec3\x20v_View' + 'Dir;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_PositionW' + 'orld;\x0d\x0a\x0d\x0a#' + 'ifdef\x20TILI' + 'NGOFFSET\x0d\x0a' + '\x09uniform\x20v' + 'ec4\x20u_Tili' + 'ngOffset;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0avarying\x20f' + 'loat\x20v_pos' + 'ViewZ;\x0d\x0a#i' + 'fdef\x20RECEI' + 'VESHADOW\x0d\x0a' + '\x20\x20#ifdef\x20S' + 'HADOWMAP_P' + 'SSM1\x20\x0d\x0a\x09\x20\x20' + 'varying\x20ve' + 'c4\x20v_light' + 'MVPPos;\x0d\x0a\x09' + '\x20\x20uniform\x20' + 'mat4\x20u_lig' + 'htShadowVP' + '[4];\x0d\x0a\x20\x20#e' + 'ndif\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20BONE\x0d\x0a\x09' + 'const\x20int\x20' + 'c_MaxBoneC' + 'ount\x20=\x2024;' + '\x0d\x0a\x09attribu' + 'te\x20vec4\x20a_' + 'BoneIndice' + 's;\x0d\x0a\x09attri' + 'bute\x20vec4\x20' + 'a_BoneWeig' + 'hts;\x0d\x0a\x09uni' + 'form\x20mat4\x20' + 'u_Bones[c_' + 'MaxBoneCou' + 'nt];\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0avoid' + '\x20main_cast' + 'Shadow()\x0d\x0a' + '{\x0d\x0a\x09vec4\x20p' + 'osition;\x0d\x0a' + '\x09#ifdef\x20BO' + 'NE\x0d\x0a\x09\x09mat4' + '\x20skinTrans' + 'form\x20=\x20u_B' + 'ones[int(a' + ('_BoneIndic' + 'es.x)]\x20*\x20a' + '_BoneWeigh' + 'ts.x;\x0d\x0a\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.y)]\x20*\x20a_' + 'BoneWeight' + 's.y;\x0d\x0a\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20u_Bon' + 'es[int(a_B' + 'oneIndices' + '.z)]\x20*\x20a_B' + 'oneWeights' + '.z;\x0d\x0a\x09\x09ski' + 'nTransform' + '\x20+=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'w)]\x20*\x20a_Bo' + 'neWeights.' + 'w;\x0d\x0a\x09\x09posi' + 'tion=skinT' + 'ransform*a' + '_Position;' + '\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09position' + '=a_Positio' + 'n;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09\x09gl_' + 'Position\x20=' + '\x20a_MvpMatr' + 'ix\x20*\x20posit' + 'ion;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09gl_P' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20positi' + 'on;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09\x20\x0d\x0a\x09/' + '/TODO没考虑UV' + '动画呢\x0d\x0a\x09#if\x20' + 'defined(DI' + 'FFUSEMAP)&' + '&defined(A' + 'LPHATEST)\x0d' + '\x0a\x09\x09v_Texco' + 'ord0\x20=\x20a_T' + 'excoord0;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09gl_Positi' + 'on=remapGL' + 'PositionZ(' + 'gl_Positio' + 'n);\x0d\x0a\x09v_po' + 'sViewZ\x20=\x20g' + 'l_Position' + '.z;\x0d\x0a}\x0d\x0a\x0d\x0a' + 'void\x20main_' + 'normal()\x0d\x0a' + '{\x0d\x0a\x09vec4\x20p' + 'osition;\x0d\x0a' + '\x09#ifdef\x20BO' + 'NE\x0d\x0a\x09\x09mat4' + '\x20skinTrans' + 'form\x20=\x20u_B' + 'ones[int(a' + '_BoneIndic' + 'es.x)]\x20*\x20a' + '_BoneWeigh' + 'ts.x;\x0d\x0a\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.y)]\x20*\x20a_' + 'BoneWeight' + 's.y;\x0d\x0a\x09\x09sk' + 'inTransfor' + 'm\x20+=\x20u_Bon' + 'es[int(a_B' + 'oneIndices' + '.z)]\x20*\x20a_B' + 'oneWeights' + '.z;\x0d\x0a\x09\x09ski' + 'nTransform' + '\x20+=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'w)]\x20*\x20a_Bo' + 'neWeights.' + 'w;\x0d\x0a\x09\x09posi' + 'tion=skinT' + 'ransform*a' + '_Position;') + ('\x0d\x0a\x09#else\x0d\x0a' + '\x09\x09position' + '=a_Positio' + 'n;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09#ifdef' + '\x20GPU_INSTA' + 'NCE\x0d\x0a\x09\x09gl_' + 'Position\x20=' + '\x20a_MvpMatr' + 'ix\x20*\x20posit' + 'ion;\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09gl_P' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20positi' + 'on;\x0d\x0a\x09#end' + 'if\x0d\x0a\x09\x0d\x0a\x09#i' + 'f\x20defined(' + 'DIRECTIONL' + 'IGHT)||def' + 'ined(POINT' + 'LIGHT)||de' + 'fined(SPOT' + 'LIGHT)||de' + 'fined(RECE' + 'IVESHADOW)' + '||defined(' + 'REFLECTMAP' + ')\x0d\x0a\x09\x09mat4\x20' + 'worldMat;\x0d' + '\x0a\x09\x09#ifdef\x20' + 'GPU_INSTAN' + 'CE\x0d\x0a\x09\x09\x09wor' + 'ldMat\x20=\x20a_' + 'WorldMat;\x0d' + '\x0a\x09\x09#else\x0d\x0a' + '\x09\x09\x09worldMa' + 't\x20=\x20u_Worl' + 'dMat;\x0d\x0a\x09\x09#' + 'endif\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x0d\x0a\x09' + '#if\x20define' + 'd(DIRECTIO' + 'NLIGHT)||d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT)||' + 'defined(RE' + 'FLECTMAP)\x0d' + '\x0a\x09\x09mat3\x20wo' + 'rldInvMat;' + '\x0d\x0a\x09\x09#ifdef' + '\x20BONE\x0d\x0a\x09\x09\x09' + 'worldInvMa' + 't=inverse(' + 'mat3(world' + 'Mat*skinTr' + 'ansform));' + '\x0d\x0a\x09\x09#else\x0d' + '\x0a\x09\x09\x09worldI' + 'nvMat=inve' + 'rse(mat3(w' + 'orldMat));' + '\x0d\x0a\x09\x09#endif' + '\x20\x20\x0d\x0a\x09\x09v_No' + 'rmal=a_Nor' + 'mal*worldI' + 'nvMat;\x0d\x0a\x09\x09' + '#if\x20(defin' + 'ed(DIRECTI' + 'ONLIGHT)||' + 'defined(PO' + 'INTLIGHT)|' + '|defined(S' + 'POTLIGHT))' + '\x0d\x0a\x09\x09\x09v_Tan' + 'gent=a_Tan' + 'gent0.xyz*' + 'worldInvMa' + 't;\x0d\x0a\x09\x09\x09v_B' + 'inormal=cr' + 'oss(v_Norm' + 'al,v_Tange' + 'nt)*a_Tang' + 'ent0.w;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09\x0d\x0a\x09#if\x20d' + 'efined(DIR' + 'ECTIONLIGH' + 'T)||define' + 'd(POINTLIG' + 'HT)||defin' + 'ed(SPOTLIG' + 'HT)||defin' + 'ed(RECEIVE' + 'SHADOW)||d' + 'efined(REF' + 'LECTMAP)\x0d\x0a') + ('\x09\x09v_Positi' + 'onWorld=(w' + 'orldMat*po' + 'sition).xy' + 'z;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x20\x20\x0d\x0a' + '\x09#if\x20defin' + 'ed(DIRECTI' + 'ONLIGHT)||' + 'defined(PO' + 'INTLIGHT)|' + '|defined(S' + 'POTLIGHT)|' + '|defined(R' + 'EFLECTMAP)' + '\x0d\x0a\x09\x09v_View' + 'Dir=u_Came' + 'raPos-v_Po' + 'sitionWorl' + 'd;\x0d\x0a\x09#endi' + 'f\x0d\x0a\x0d\x0a\x09#ifd' + 'ef\x20TILINGO' + 'FFSET\x0d\x0a\x09\x09v' + '_Texcoord0' + '=Transform' + 'UV(a_Texco' + 'ord0,u_Til' + 'ingOffset)' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09v_Texco' + 'ord0=a_Tex' + 'coord0;\x0d\x0a\x09' + '#endif\x0d\x0a\x20\x20' + '\x0d\x0a\x09#ifdef\x20' + 'RECEIVESHA' + 'DOW\x0d\x0a\x09\x09v_p' + 'osViewZ\x20=\x20' + 'gl_Positio' + 'n.w;\x0d\x0a\x09\x09#i' + 'fdef\x20SHADO' + 'WMAP_PSSM1' + '\x20\x0d\x0a\x09\x09\x09v_li' + 'ghtMVPPos\x20' + '=\x20u_lightS' + 'hadowVP[0]' + '\x20*\x20vec4(v_' + 'PositionWo' + 'rld,1.0);\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09gl_Positi' + 'on=remapGL' + 'PositionZ(' + 'gl_Positio' + 'n);\x0d\x0a}\x0d\x0a\x0d\x0a' + 'void\x20main(' + ')\x0d\x0a{\x0d\x0a\x09#if' + 'def\x20CASTSH' + 'ADOW\x0d\x0a\x09\x09ma' + 'in_castSha' + 'dow();\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09ma' + 'in_normal(' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a}'), _0x52d95b = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0avarying\x20v' + 'ec3\x20v_Norm' + 'al;\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'Tangent;\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Binor' + 'mal;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_ViewDir;\x0d' + '\x0avarying\x20v' + 'ec3\x20v_Posi' + 'tionWorld;' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20vec3\x20u_A' + 'mbientColo' + 'r;\x0d\x0aunifor' + 'm\x20vec4\x20u_A' + 'lbedoColor' + ';\x0d\x0a\x0d\x0a#ifde' + 'f\x20ALBEDOTE' + 'XTURE\x0d\x0a\x09un' + 'iform\x20samp' + 'ler2D\x20u_Al' + 'bedoTextur' + 'e;\x0d\x0a#endif' + '\x0d\x0a#ifdef\x20M' + 'ETALLICGLO' + 'SSTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_Metallic' + 'GlossTextu' + 're;\x0d\x0a#endi' + 'f\x0d\x0a#ifdef\x20' + 'NORMALTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Norm' + 'alTexture;' + '\x0d\x0a\x09uniform' + '\x20float\x20u_n' + 'ormalScale' + ';\x0d\x0a#endif\x0d' + '\x0a#ifdef\x20PA' + 'RALLAXTEXT' + 'URE\x0d\x0a\x09unif' + 'orm\x20sample' + 'r2D\x20u_Para' + 'llaxTextur' + 'e;\x0d\x0a\x09unifo' + 'rm\x20float\x20u' + '_parallaxS' + 'cale;\x0d\x0a#en' + 'dif\x0d\x0a#ifde' + 'f\x20OCCLUSIO' + 'NTEXTURE\x0d\x0a' + '\x09uniform\x20s' + 'ampler2D\x20u' + '_Occlusion' + 'Texture;\x0d\x0a' + '\x09uniform\x20f' + 'loat\x20u_occ' + 'lusionStre' + 'ngth;\x0d\x0a#en' + 'dif\x0d\x0a#ifde' + 'f\x20EMISSION' + '\x0d\x0a\x09#ifdef\x20' + 'EMISSIONTE' + 'XTURE\x0d\x0a\x09\x09u' + 'niform\x20sam' + 'pler2D\x20u_E' + 'missionTex' + 'ture;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09uni' + 'form\x20vec4\x20' + 'u_Emission' + 'Color;\x0d\x0a#e' + 'ndif\x0d\x0a#ifd' + 'ef\x20REFLECT' + 'MAP\x0d\x0a\x09unif' + 'orm\x20sample' + 'rCube\x20u_Re' + 'flectTextu' + 're;\x0d\x0a\x09unif' + 'orm\x20float\x20' + 'u_ReflectI' + ('ntensity;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0auniform\x20f' + 'loat\x20u_Alp' + 'haTestValu' + 'e;\x0d\x0aunifor' + 'm\x20float\x20u_' + 'metallic;\x0d' + '\x0auniform\x20f' + 'loat\x20u_smo' + 'othness;\x0d\x0a' + 'uniform\x20fl' + 'oat\x20u_smoo' + 'thnessScal' + 'e;\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a' + '\x0d\x0a#include' + '\x20\x22Lighting' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22P' + 'BRStandard' + 'Lighting.g' + 'lsl\x22\x0d\x0a#inc' + 'lude\x20\x22Shad' + 'owHelper.g' + 'lsl\x22\x0d\x0a\x0d\x0ava' + 'rying\x20floa' + 't\x20v_posVie' + 'wZ;\x0d\x0a#ifde' + 'f\x20RECEIVES' + 'HADOW\x0d\x0a\x09#i' + 'f\x20defined(' + 'SHADOWMAP_' + 'PSSM2)||de' + 'fined(SHAD' + 'OWMAP_PSSM' + '3)\x0d\x0a\x09\x09unif' + 'orm\x20mat4\x20u' + '_lightShad' + 'owVP[4];\x0d\x0a' + '\x09#endif\x0d\x0a\x09' + '#ifdef\x20SHA' + 'DOWMAP_PSS' + 'M1\x20\x0d\x0a\x09\x09var' + 'ying\x20vec4\x20' + 'v_lightMVP' + 'Pos;\x0d\x0a\x09#en' + 'dif\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20LEGACYSI' + 'NGLELIGHTI' + 'NG\x0d\x0a\x09#ifde' + 'f\x20DIRECTIO' + 'NLIGHT\x0d\x0a\x09\x09' + 'uniform\x20Di' + 'rectionLig' + 'ht\x20u_Direc' + 'tionLight;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#ifdef\x20P' + 'OINTLIGHT\x0d' + '\x0a\x09\x09uniform' + '\x20PointLigh' + 't\x20u_PointL' + 'ight;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09#if' + 'def\x20SPOTLI' + 'GHT\x0d\x0a\x09\x09uni' + 'form\x20SpotL' + 'ight\x20u_Spo' + 'tLight;\x0d\x0a\x09' + '#endif\x0d\x0a#e' + 'lse\x0d\x0a\x09\x09uni' + 'form\x20mat4\x20' + 'u_View;\x0d\x0a\x09' + '\x09uniform\x20v' + 'ec4\x20u_Proj' + 'ectionPara' + 'ms;\x0d\x0a\x09\x09uni' + 'form\x20vec4\x20' + 'u_Viewport' + ';\x0d\x0a\x09\x09unifo' + 'rm\x20int\x20u_D' + 'irationLig' + 'htCount;\x0d\x0a' + '\x09\x09uniform\x20' + 'sampler2D\x20' + 'u_LightBuf' + 'fer;\x0d\x0a\x09\x09un' + 'iform\x20samp' + 'ler2D\x20u_Li' + 'ghtCluster' + 'Buffer;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20FOG\x0d' + '\x0a\x09uniform\x20' + 'float\x20u_Fo' + 'gStart;\x0d\x0a\x09' + 'uniform\x20fl' + 'oat\x20u_FogR' + 'ange;\x0d\x0a\x09un') + ('iform\x20vec3' + '\x20u_FogColo' + 'r;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain_castSh' + 'adow()\x0d\x0a{\x0d' + '\x0a\x09gl_FragC' + 'olor=packD' + 'epth(v_pos' + 'ViewZ);\x0d\x0a\x09' + '#if\x20define' + 'd(DIFFUSEM' + 'AP)&&defin' + 'ed(ALPHATE' + 'ST)\x0d\x0a\x09\x09flo' + 'at\x20alpha\x20=' + '\x20texture2D' + '(u_AlbedoT' + 'exture,v_T' + 'excoord0).' + 'w;\x0d\x0a\x09\x09if(\x20' + 'alpha\x20<\x20u_' + 'AlphaTestV' + 'alue\x20)\x0d\x0a\x09\x09' + '{\x0d\x0a\x09\x09\x09disc' + 'ard;\x0d\x0a\x09\x09}\x0d' + '\x0a\x09#endif\x0d\x0a' + '}\x0d\x0a\x0d\x0avoid\x20' + 'main_norma' + 'l()\x0d\x0a{\x09\x0d\x0a\x09' + 'vec3\x20viewD' + 'ir\x20=\x20norma' + 'lize(v_Vie' + 'wDir);\x0d\x0a\x09\x0d' + '\x0a\x09vec2\x20uv0' + '\x20=\x20Paralla' + 'xOffset(vi' + 'ewDir);\x0d\x0a\x09' + '\x0d\x0a\x09vec2\x20mg' + ';\x0d\x0a\x09vec4\x20a' + 'lbedoColor' + ';\x0d\x0a\x09#ifdef' + '\x20ALBEDOTEX' + 'TURE\x0d\x0a\x09\x09ve' + 'c4\x20abledoT' + 'extureColo' + 'r\x20=\x20textur' + 'e2D(u_Albe' + 'doTexture,' + '\x20uv0);\x0d\x0a\x09\x09' + 'albedoColo' + 'r\x20=\x20abledo' + 'TextureCol' + 'or\x20*\x20u_Alb' + 'edoColor;\x0d' + '\x0a\x09\x09mg\x20=\x20Me' + 'tallicGlos' + 's(abledoTe' + 'xtureColor' + '.a,\x20uv0);\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09albedoCol' + 'or\x20=\x20u_Alb' + 'edoColor;\x0d' + '\x0a\x09\x09mg\x20=\x20Me' + 'tallicGlos' + 's(1.0,\x20uv0' + ');\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09\x0d\x0a\x09#if' + 'def\x20ALPHAT' + 'EST\x0d\x0a\x09\x09if(' + 'albedoColo' + 'r.a\x20<\x20u_Al' + 'phaTestVal' + 'ue)\x0d\x0a\x09\x09\x09di' + 'scard;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09vec3\x20norm' + 'al\x20=\x20Unpac' + 'kScaleNorm' + 'al(uv0);\x0d\x0a' + '\x20\x20\x0d\x0a\x09LayaG' + 'I\x20gi;\x0d\x0a\x09gi' + '.diffuse\x20=' + '\x20u_Ambient' + 'Color\x20*\x20Oc' + 'clusion(uv' + '0).rgb;\x0d\x0a\x09' + 'gi.specula' + 'r\x20=\x20Reflec' + 'tCubeMap(v' + 'iewDir,\x20no' + 'rmal);\x0d\x0a\x20\x20' + '\x0d\x0a\x20\x20\x09float' + '\x20shadowVal' + 'ue\x20=\x201.0;\x0d' + '\x0a\x09#ifdef\x20R' + 'ECEIVESHAD' + 'OW\x0d\x0a\x09\x0d\x0a\x09\x09#' + 'ifdef\x20SHAD') + ('OWMAP_PSSM' + '3\x0d\x0a\x09\x09\x09shad' + 'owValue\x20=\x20' + 'getShadowP' + 'SSM3(\x20u_sh' + 'adowMap1,u' + '_shadowMap' + '2,u_shadow' + 'Map3,u_lig' + 'htShadowVP' + ',u_shadowP' + 'SSMDistanc' + 'e,u_shadow' + 'PCFoffset,' + 'v_Position' + 'World,v_po' + 'sViewZ,0.0' + '01);\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09\x09#i' + 'fdef\x20SHADO' + 'WMAP_PSSM2' + '\x0d\x0a\x09\x09\x09shado' + 'wValue\x20=\x20g' + 'etShadowPS' + 'SM2(\x20u_sha' + 'dowMap1,u_' + 'shadowMap2' + ',u_lightSh' + 'adowVP,u_s' + 'hadowPSSMD' + 'istance,u_' + 'shadowPCFo' + 'ffset,v_Po' + 'sitionWorl' + 'd,v_posVie' + 'wZ,0.001);' + '\x0d\x0a\x09\x09#endif' + '\x20\x0d\x0a\x09\x09#ifde' + 'f\x20SHADOWMA' + 'P_PSSM1\x0d\x0a\x09' + '\x09\x09shadowVa' + 'lue\x20=\x20getS' + 'hadowPSSM1' + '(\x20u_shadow' + 'Map1,v_lig' + 'htMVPPos,u' + '_shadowPSS' + 'MDistance,' + 'u_shadowPC' + 'Foffset,v_' + 'posViewZ,0' + '.001);\x0d\x0a\x09\x09' + '#endif\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + 'vec4\x20color' + '\x20=\x20vec4(0.' + '0);\x0d\x0a\x09#ifd' + 'ef\x20LEGACYS' + 'INGLELIGHT' + 'ING\x0d\x0a\x09\x09#if' + 'def\x20DIRECT' + 'IONLIGHT\x0d\x0a' + '\x09\x09\x09color\x20+' + '=\x20PBRStand' + 'ardDiectio' + 'nLight(alb' + 'edoColor,\x20' + 'mg.r,\x20mg.g' + ',\x20normal,\x20' + 'viewDir,\x20u' + '_Direction' + 'Light,\x20gi,' + 'shadowValu' + 'e);\x0d\x0a\x09\x09#en' + 'dif\x0d\x0a\x09\x0d\x0a\x09\x09' + '#ifdef\x20POI' + 'NTLIGHT\x0d\x0a\x09' + '\x09\x09color.a\x20' + '=\x200.0;\x0d\x0a\x09\x09' + '\x09color\x20+=\x20' + 'PBRStandar' + 'dPointLigh' + 't(albedoCo' + 'lor,\x20mg.r,' + '\x20mg.g,\x20nor' + 'mal,\x20viewD' + 'ir,\x20u_Poin' + 'tLight,\x20v_' + 'PositionWo' + 'rld,\x20gi,sh' + 'adowValue)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09\x0d\x0a\x09\x09#' + 'ifdef\x20SPOT' + 'LIGHT\x0d\x0a\x09\x09\x09' + 'color.a\x20=\x20' + '0.0;\x0d\x0a\x09\x09\x09c' + 'olor\x20+=\x20PB' + 'RStandardS' + 'potLight(a') + ('lbedoColor' + ',\x20mg.r,\x20mg' + '.g,\x20normal' + ',\x20viewDir,' + '\x20u_SpotLig' + 'ht,\x20v_Posi' + 'tionWorld,' + '\x20gi,shadow' + 'Value);\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09#' + 'ifdef\x20DIRE' + 'CTIONLIGHT' + '\x0d\x0a\x09\x09\x09for\x20(' + 'int\x20i\x20=\x200;' + '\x20i\x20<\x20MAX_L' + 'IGHT_COUNT' + ';\x20i++)\x20\x0d\x0a\x09' + '\x09\x09{\x0d\x0a\x09\x09\x09\x09i' + 'f(i\x20>=\x20u_D' + 'irationLig' + 'htCount)\x0d\x0a' + '\x09\x09\x09\x09\x09break' + ';\x0d\x0a\x09\x09\x09\x09Dir' + 'ectionLigh' + 't\x20directio' + 'nLight\x20=\x20g' + 'etDirectio' + 'nLight(u_L' + 'ightBuffer' + ',i);\x0d\x0a\x09\x09\x09\x09' + 'color.a\x20=\x20' + '0.0;\x0d\x0a\x09\x09\x09\x09' + 'color\x20+=\x20P' + 'BRStandard' + 'DiectionLi' + 'ght(albedo' + 'Color,\x20mg.' + 'r,\x20mg.g,\x20n' + 'ormal,\x20vie' + 'wDir,\x20dire' + 'ctionLight' + ',\x20gi,shado' + 'wValue);\x0d\x0a' + '\x09\x09\x09}\x0d\x0a\x09\x09#e' + 'ndif\x0d\x0a\x09\x09#i' + 'f\x20defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')\x0d\x0a\x09\x09\x09ivec' + '4\x20clusterI' + 'nfo\x20=getCl' + 'usterInfo(' + 'u_LightClu' + 'sterBuffer' + ',u_View,u_' + 'Viewport,\x20' + 'v_Position' + 'World,gl_F' + 'ragCoord,u' + '_Projectio' + 'nParams);\x0d' + '\x0a\x09\x09\x09#ifdef' + '\x20POINTLIGH' + 'T\x0d\x0a\x09\x09\x09\x09for' + '\x20(int\x20i\x20=\x20' + '0;\x20i\x20<\x20MAX' + '_LIGHT_COU' + 'NT;\x20i++)\x20\x0d' + '\x0a\x09\x09\x09\x09{\x0d\x0a\x09\x09' + '\x09\x09\x09if(i\x20>=' + '\x20clusterIn' + 'fo.x)//Poi' + 'ntLightCou' + 'nt\x0d\x0a\x09\x09\x09\x09\x09\x09' + 'break;\x0d\x0a\x09\x09' + '\x09\x09\x09PointLi' + 'ght\x20pointL' + 'ight\x20=\x20get' + 'PointLight' + '(u_LightBu' + 'ffer,u_Lig' + 'htClusterB' + 'uffer,clus' + 'terInfo,i)' + ';\x0d\x0a\x09\x09\x09\x09\x09co' + 'lor.a\x20=\x200.' + '0;\x0d\x0a\x09\x09\x09\x09\x09c' + 'olor\x20+=\x20PB' + 'RStandardP' + 'ointLight(' + 'albedoColo' + 'r,\x20mg.r,\x20m' + 'g.g,\x20norma' + 'l,\x20viewDir' + ',\x20pointLig' + 'ht,\x20v_Posi' + 'tionWorld,' + '\x20gi,shadow') + ('Value);\x0d\x0a\x09' + '\x09\x09\x09}\x0d\x0a\x09\x09\x09#' + 'endif\x0d\x0a\x09\x09\x09' + '#ifdef\x20SPO' + 'TLIGHT\x0d\x0a\x09\x09' + '\x09\x09for\x20(int' + '\x20i\x20=\x200;\x20i\x20' + '<\x20MAX_LIGH' + 'T_COUNT;\x20i' + '++)\x20\x0d\x0a\x09\x09\x09\x09' + '{\x0d\x0a\x09\x09\x09\x09\x09if' + '(i\x20>=\x20clus' + 'terInfo.y)' + '//SpotLigh' + 'tCount\x0d\x0a\x09\x09' + '\x09\x09\x09\x09break;' + '\x0d\x0a\x09\x09\x09\x09\x09Spo' + 'tLight\x20spo' + 'tLight\x20=\x20g' + 'etSpotLigh' + 't(u_LightB' + 'uffer,u_Li' + 'ghtCluster' + 'Buffer,clu' + 'sterInfo,i' + ');\x0d\x0a\x09\x09\x09\x09\x09c' + 'olor.a\x20=\x200' + '.0;\x0d\x0a\x09\x09\x09\x09\x09' + 'color\x20+=\x20P' + 'BRStandard' + 'SpotLight(' + 'albedoColo' + 'r,\x20mg.r,\x20m' + 'g.g,\x20norma' + 'l,\x20viewDir' + ',\x20spotLigh' + 't,\x20v_Posit' + 'ionWorld,\x20' + 'gi,shadowV' + 'alue);\x0d\x0a\x09\x09' + '\x09\x09\x09\x0d\x0a\x09\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09#endi' + 'f\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x0d\x0a\x09\x0d\x0a\x09#i' + 'fdef\x20REFLE' + 'CTMAP\x0d\x0a\x09\x20\x09' + 'color\x20+=\x20L' + 'ayaAirStan' + 'dardReflec' + 't(albedoCo' + 'lor,mg.r,m' + 'g.g,gi);\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x09#ifdef\x20E' + 'MISSION\x0d\x0a\x09' + '\x09vec4\x20emis' + 'sionColor\x20' + '=\x20u_Emissi' + 'onColor;\x0d\x0a' + '\x09\x09#ifdef\x20E' + 'MISSIONTEX' + 'TURE\x0d\x0a\x09\x09\x09e' + 'missionCol' + 'or\x20*=\x20\x20tex' + 'ture2D(u_E' + 'missionTex' + 'ture,\x20uv0)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09\x09color' + '.rgb\x20+=\x20em' + 'issionColo' + 'r.rgb;\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a' + '\x09\x09gl_FragC' + 'olor\x20=\x20col' + 'or;\x0d\x0a\x09#ifd' + 'ef\x20FOG\x0d\x0a\x09\x09' + 'float\x20lerp' + 'Fact\x20=\x20cla' + 'mp((1.0\x20/\x20' + 'gl_FragCoo' + 'rd.w\x20-\x20u_F' + 'ogStart)\x20/' + '\x20u_FogRang' + 'e,\x200.0,\x201.' + '0);\x0d\x0a\x09\x09gl_' + 'FragColor.' + 'rgb\x20=\x20mix(' + 'gl_FragCol' + 'or.rgb,\x20u_' + 'FogColor,\x20' + 'lerpFact);' + '\x0d\x0a\x09#endif\x0d' + '\x0a}\x0d\x0a\x0d\x0avoid' + '\x20main()\x0d\x0a{' + '\x0d\x0a\x09#ifdef\x20' + 'CASTSHADOW' + '\x09\x09\x0d\x0a\x09\x09main' + '_castShado') + ('w();\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09main' + '_normal();' + '\x0d\x0a\x09#endif\x20' + '\x20\x0d\x0a}'), _0x3a9be2 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Normal' + ';\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Tangent0;\x0d' + '\x0aattribute' + '\x20vec2\x20a_Te' + 'xcoord0;\x0d\x0a' + '\x0d\x0a#ifdef\x20G' + 'PU_INSTANC' + 'E\x0d\x0a\x09attrib' + 'ute\x20mat4\x20a' + '_MvpMatrix' + ';\x0d\x0a#else\x0d\x0a' + '\x09uniform\x20m' + 'at4\x20u_MvpM' + 'atrix;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20GPU_I' + 'NSTANCE\x0d\x0a\x09' + 'attribute\x20' + 'mat4\x20a_Wor' + 'ldMat;\x0d\x0a#e' + 'lse\x0d\x0a\x09unif' + 'orm\x20mat4\x20u' + '_WorldMat;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0auniform\x20' + 'vec3\x20u_Cam' + 'eraPos;\x0d\x0a\x0d' + '\x0avarying\x20v' + 'ec2\x20v_Texc' + 'oord0;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Normal;' + '\x0d\x0avarying\x20' + 'vec3\x20v_Tan' + 'gent;\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Binormal' + ';\x0d\x0avarying' + '\x20vec3\x20v_Vi' + 'ewDir;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_Positio' + 'nWorld;\x0d\x0a\x0d' + '\x0a#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09uniform' + '\x20vec4\x20u_Ti' + 'lingOffset' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0avarying' + '\x20float\x20v_p' + 'osViewZ;\x0d\x0a' + '#ifdef\x20REC' + 'EIVESHADOW' + '\x0d\x0a\x20\x20#ifdef' + '\x20SHADOWMAP' + '_PSSM1\x20\x0d\x0a\x09' + '\x20\x20varying\x20' + 'vec4\x20v_lig' + 'htMVPPos;\x0d' + '\x0a\x09\x20\x20unifor' + 'm\x20mat4\x20u_l' + 'ightShadow' + 'VP[4];\x0d\x0a\x20\x20' + '#endif\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0a#i' + 'fdef\x20BONE\x0d' + '\x0a\x09const\x20in' + 't\x20c_MaxBon' + 'eCount\x20=\x202' + '4;\x0d\x0a\x09attri' + 'bute\x20vec4\x20' + 'a_BoneIndi' + 'ces;\x0d\x0a\x09att' + 'ribute\x20vec' + '4\x20a_BoneWe' + 'ights;\x0d\x0a\x09u' + 'niform\x20mat' + '4\x20u_Bones[' + 'c_MaxBoneC' + 'ount];\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0avo' + 'id\x20main_ca' + 'stShadow()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20position;' + '\x0d\x0a\x09#ifdef\x20' + 'BONE\x0d\x0a\x09\x09ma' + 't4\x20skinTra' + 'nsform\x20=\x20u' + '_Bones[int' + ('(a_BoneInd' + 'ices.x)]\x20*' + '\x20a_BoneWei' + 'ghts.x;\x0d\x0a\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.y)]\x20*\x20' + 'a_BoneWeig' + 'hts.y;\x0d\x0a\x09\x09' + 'skinTransf' + 'orm\x20+=\x20u_B' + 'ones[int(a' + '_BoneIndic' + 'es.z)]\x20*\x20a' + '_BoneWeigh' + 'ts.z;\x0d\x0a\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.w)]\x20*\x20a_' + 'BoneWeight' + 's.w;\x0d\x0a\x09\x09po' + 'sition=ski' + 'nTransform' + '*a_Positio' + 'n;\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09positi' + 'on=a_Posit' + 'ion;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20GPU_INS' + 'TANCE\x0d\x0a\x09\x09g' + 'l_Position' + '\x20=\x20a_MvpMa' + 'trix\x20*\x20pos' + 'ition;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09gl' + '_Position\x20' + '=\x20u_MvpMat' + 'rix\x20*\x20posi' + 'tion;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x20\x0d\x0a' + '\x09//TODO没考虑' + 'UV动画呢\x0d\x0a\x09#i' + 'f\x20defined(' + 'DIFFUSEMAP' + ')&&defined' + '(ALPHATEST' + ')\x0d\x0a\x09\x09v_Tex' + 'coord0\x20=\x20a' + '_Texcoord0' + ';\x0d\x0a\x09#endif' + '\x0d\x0a\x09gl_Posi' + 'tion=remap' + 'GLPosition' + 'Z(gl_Posit' + 'ion);\x0d\x0a\x09v_' + 'posViewZ\x20=' + '\x20gl_Positi' + 'on.z;\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20mai' + 'n_normal()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20position;' + '\x0d\x0a\x09#ifdef\x20' + 'BONE\x0d\x0a\x09\x09ma' + 't4\x20skinTra' + 'nsform\x20=\x20u' + '_Bones[int' + '(a_BoneInd' + 'ices.x)]\x20*' + '\x20a_BoneWei' + 'ghts.x;\x0d\x0a\x09' + '\x09skinTrans' + 'form\x20+=\x20u_' + 'Bones[int(' + 'a_BoneIndi' + 'ces.y)]\x20*\x20' + 'a_BoneWeig' + 'hts.y;\x0d\x0a\x09\x09' + 'skinTransf' + 'orm\x20+=\x20u_B' + 'ones[int(a' + '_BoneIndic' + 'es.z)]\x20*\x20a' + '_BoneWeigh' + 'ts.z;\x0d\x0a\x09\x09s' + 'kinTransfo' + 'rm\x20+=\x20u_Bo' + 'nes[int(a_' + 'BoneIndice' + 's.w)]\x20*\x20a_' + 'BoneWeight' + 's.w;\x0d\x0a\x09\x09po' + 'sition=ski' + 'nTransform' + '*a_Positio') + ('n;\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09positi' + 'on=a_Posit' + 'ion;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09#ifd' + 'ef\x20GPU_INS' + 'TANCE\x0d\x0a\x09\x09g' + 'l_Position' + '\x20=\x20a_MvpMa' + 'trix\x20*\x20pos' + 'ition;\x0d\x0a\x09#' + 'else\x0d\x0a\x09\x09gl' + '_Position\x20' + '=\x20u_MvpMat' + 'rix\x20*\x20posi' + 'tion;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x09\x0d\x0a\x09' + '#if\x20define' + 'd(DIRECTIO' + 'NLIGHT)||d' + 'efined(POI' + 'NTLIGHT)||' + 'defined(SP' + 'OTLIGHT)||' + 'defined(RE' + 'CEIVESHADO' + 'W)||define' + 'd(REFLECTM' + 'AP)\x0d\x0a\x09\x09mat' + '4\x20worldMat' + ';\x0d\x0a\x09\x09#ifde' + 'f\x20GPU_INST' + 'ANCE\x0d\x0a\x09\x09\x09w' + 'orldMat\x20=\x20' + 'a_WorldMat' + ';\x0d\x0a\x09\x09#else' + '\x0d\x0a\x09\x09\x09world' + 'Mat\x20=\x20u_Wo' + 'rldMat;\x0d\x0a\x09' + '\x09#endif\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09#if\x20defi' + 'ned(DIRECT' + 'IONLIGHT)|' + '|defined(P' + 'OINTLIGHT)' + '||defined(' + 'SPOTLIGHT)' + '||defined(' + 'REFLECTMAP' + ')\x0d\x0a\x09\x09mat3\x20' + 'worldInvMa' + 't;\x0d\x0a\x09\x09#ifd' + 'ef\x20BONE\x0d\x0a\x09' + '\x09\x09worldInv' + 'Mat=invers' + 'e(mat3(wor' + 'ldMat*skin' + 'Transform)' + ');\x0d\x0a\x09\x09#els' + 'e\x0d\x0a\x09\x09\x09worl' + 'dInvMat=in' + 'verse(mat3' + '(worldMat)' + ');\x0d\x0a\x09\x09#end' + 'if\x20\x20\x0d\x0a\x09\x09v_' + 'Normal=a_N' + 'ormal*worl' + 'dInvMat;\x0d\x0a' + '\x09\x09#if\x20(def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + '))\x0d\x0a\x09\x09\x09v_T' + 'angent=a_T' + 'angent0.xy' + 'z*worldInv' + 'Mat;\x0d\x0a\x09\x09\x09v' + '_Binormal=' + 'cross(v_No' + 'rmal,v_Tan' + 'gent)*a_Ta' + 'ngent0.w;\x0d' + '\x0a\x09\x09#endif\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09\x0d\x0a\x09\x0d\x0a\x09#if' + '\x20defined(D' + 'IRECTIONLI' + 'GHT)||defi' + 'ned(POINTL' + 'IGHT)||def' + 'ined(SPOTL' + 'IGHT)||def' + 'ined(RECEI' + 'VESHADOW)|' + '|defined(R' + 'EFLECTMAP)') + ('\x0d\x0a\x09\x09v_Posi' + 'tionWorld=' + '(worldMat*' + 'position).' + 'xyz;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09\x0d\x0a\x20\x20' + '\x0d\x0a\x09#if\x20def' + 'ined(DIREC' + 'TIONLIGHT)' + '||defined(' + 'POINTLIGHT' + ')||defined' + '(SPOTLIGHT' + ')||defined' + '(REFLECTMA' + 'P)||define' + 'd(REFLECTM' + 'AP)\x0d\x0a\x09\x09v_V' + 'iewDir=u_C' + 'ameraPos-v' + '_PositionW' + 'orld;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20TILI' + 'NGOFFSET\x0d\x0a' + '\x09\x09v_Texcoo' + 'rd0=Transf' + 'ormUV(a_Te' + 'xcoord0,u_' + 'TilingOffs' + 'et);\x0d\x0a\x09#el' + 'se\x0d\x0a\x09\x09v_Te' + 'xcoord0=a_' + 'Texcoord0;' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x20\x20\x0d\x0a\x09#ifd' + 'ef\x20RECEIVE' + 'SHADOW\x0d\x0a\x09\x09' + 'v_posViewZ' + '\x20=\x20gl_Posi' + 'tion.w;\x0d\x0a\x09' + '\x09#ifdef\x20SH' + 'ADOWMAP_PS' + 'SM1\x20\x0d\x0a\x09\x09\x09v' + '_lightMVPP' + 'os\x20=\x20u_lig' + 'htShadowVP' + '[0]\x20*\x20vec4' + '(v_Positio' + 'nWorld,1.0' + ');\x0d\x0a\x09\x09#end' + 'if\x0d\x0a\x09#endi' + 'f\x0d\x0a\x09gl_Pos' + 'ition=rema' + 'pGLPositio' + 'nZ(gl_Posi' + 'tion);\x0d\x0a}\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x0d\x0a{\x0d\x0a\x09' + '#ifdef\x20CAS' + 'TSHADOW\x0d\x0a\x09' + '\x09main_cast' + 'Shadow();\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09main_norm' + 'al();\x0d\x0a\x09#e' + 'ndif\x0d\x0a}'), _0x1eca05 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(a' + '_PositionT' + 'excoord.xy' + ',\x200.0,\x201.0' + ');\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x1d4df4 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20vec4\x20' + 'u_MainTex_' + 'TexelSize;' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragDownsam' + 'ple13()\x20{\x0d' + '\x0a\x09mediump\x20' + 'vec4\x20color' + '\x20=\x20downsam' + 'pleBox13Ta' + 'p(u_MainTe' + 'x,\x20v_Texco' + 'ord0,\x20u_Ma' + 'inTex_Texe' + 'lSize.xy);' + '\x0d\x0a\x09gl_Frag' + 'Color\x20=\x20co' + 'lor;\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x20{\x0d\x0a\x09fra' + 'gDownsampl' + 'e13();\x0d\x0a}', _0x20cc2a = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20vec4\x20' + 'u_MainTex_' + 'TexelSize;' + '\x0d\x0a\x0d\x0avoid\x20f' + 'ragDownsam' + 'ple4()\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20color\x20' + '=\x20downsamp' + 'leBox4Tap(' + 'u_MainTex,' + '\x20v_Texcoor' + 'd0,\x20u_Main' + 'Tex_TexelS' + 'ize.xy);\x0d\x0a' + '\x09gl_FragCo' + 'lor\x20=\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x20{\x0d\x0a\x09fragD' + 'ownsample4' + '();\x0d\x0a}', _0x542b97 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Aut' + 'oExposureT' + 'ex;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'MainTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Thres' + 'hold;\x20//\x20x' + ':\x20threshol' + 'd\x20value\x20(l' + 'inear),\x20y:' + '\x20threshold' + '\x20-\x20knee,\x20z' + ':\x20knee\x20*\x202' + ',\x20w:\x200.25\x20' + '/\x20knee\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Params;' + '\x20//\x20x:\x20cla' + 'mp,\x20yzw:\x20u' + 'nused\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '4\x20prefilte' + 'r(mediump\x20' + 'vec4\x20color' + ',\x20vec2\x20uv)' + '\x20{\x0d\x0a\x09mediu' + 'mp\x20float\x20a' + 'utoExposur' + 'e\x20=\x20textur' + 'e2D(u_Auto' + 'ExposureTe' + 'x,\x20uv).r;\x0d' + '\x0a\x09color\x20*=' + '\x20autoExpos' + 'ure;\x0d\x0a\x09col' + 'or\x20=\x20min(v' + 'ec4(u_Para' + 'ms.x),\x20col' + 'or);\x20//\x20cl' + 'amp\x20to\x20max' + '\x0d\x0a\x09color\x20=' + '\x20quadratic' + 'Threshold(' + 'color,\x20u_T' + 'hreshold.x' + ',\x20u_Thresh' + 'old.yzw);\x0d' + '\x0a\x09return\x20c' + 'olor;\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20fra' + 'gPrefilter' + '13()\x20{\x0d\x0a\x09m' + 'ediump\x20vec' + '4\x20color\x20=\x20' + 'downsample' + 'Box13Tap(u' + '_MainTex,\x20' + 'v_Texcoord' + '0,\x20u_MainT' + 'ex_TexelSi' + 'ze.xy);\x0d\x0a\x09' + 'gl_FragCol' + 'or\x20=\x20prefi' + 'lter(safeH' + 'DR(color),' + '\x20v_Texcoor' + 'd0);\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x20{\x0d\x0a\x09fra' + 'gPrefilter' + '13();\x0d\x0a}', _0x299033 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Aut' + 'oExposureT' + 'ex;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'MainTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Thres' + 'hold;\x20//\x20x' + ':\x20threshol' + 'd\x20value\x20(l' + 'inear),\x20y:' + '\x20threshold' + '\x20-\x20knee,\x20z' + ':\x20knee\x20*\x202' + ',\x20w:\x200.25\x20' + '/\x20knee\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Params;' + '\x20//\x20x:\x20cla' + 'mp,\x20yzw:\x20u' + 'nused\x0d\x0a\x0d\x0am' + 'ediump\x20vec' + '4\x20prefilte' + 'r(mediump\x20' + 'vec4\x20color' + ',\x20vec2\x20uv)' + '\x20{\x0d\x0a\x09mediu' + 'mp\x20float\x20a' + 'utoExposur' + 'e\x20=\x20textur' + 'e2D(u_Auto' + 'ExposureTe' + 'x,\x20uv).r;\x0d' + '\x0a\x09color\x20*=' + '\x20autoExpos' + 'ure;\x0d\x0a\x09col' + 'or\x20=\x20min(v' + 'ec4(u_Para' + 'ms.x),\x20col' + 'or);\x20//\x20cl' + 'amp\x20to\x20max' + '\x0d\x0a\x09color\x20=' + '\x20quadratic' + 'Threshold(' + 'color,\x20u_T' + 'hreshold.x' + ',\x20u_Thresh' + 'old.yzw);\x0d' + '\x0a\x09return\x20c' + 'olor;\x0d\x0a}\x0d\x0a' + '\x0d\x0avoid\x20fra' + 'gPrefilter' + '4()\x20{\x0d\x0a\x09me' + 'diump\x20vec4' + '\x20color\x20=\x20d' + 'ownsampleB' + 'ox4Tap(u_M' + 'ainTex,\x20v_' + 'Texcoord0,' + '\x20u_MainTex' + '_TexelSize' + '.xy);\x0d\x0a\x09gl' + '_FragColor' + '\x20=\x20prefilt' + 'er(safeHDR' + '(color),\x20v' + '_Texcoord0' + ');\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x20{\x0d\x0a\x09fragP' + 'refilter4(' + ');\x0d\x0a}', _0x3dc610 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Blo' + 'omTex;\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_MainT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20float\x20u' + '_SampleSca' + 'le;\x0d\x0a\x0d\x0amed' + 'iump\x20vec4\x20' + 'combine(me' + 'diump\x20vec4' + '\x20bloom,\x20ve' + 'c2\x20uv)\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20color\x20' + '=\x20texture2' + 'D(u_BloomT' + 'ex,\x20uv);\x0d\x0a' + '\x09return\x20bl' + 'oom\x20+\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20fragUp' + 'sampleBox(' + ')\x20{\x0d\x0a\x09medi' + 'ump\x20vec4\x20b' + 'loom\x20=\x20ups' + 'ampleBox(u' + '_MainTex,\x20' + 'v_Texcoord' + '0,\x20u_MainT' + 'ex_TexelSi' + 'ze.xy,\x20vec' + '4(u_Sample' + 'Scale));\x0d\x0a' + '\x09gl_FragCo' + 'lor\x20=\x20comb' + 'ine(bloom,' + '\x20v_Texcoor' + 'd0);\x0d\x0a}\x0d\x0a\x0d' + '\x0avoid\x20main' + '()\x20{\x0d\x0a\x09fra' + 'gUpsampleB' + 'ox();\x0d\x0a}', _0x271967 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Blo' + 'omTex;\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_MainT' + 'ex_TexelSi' + 'ze;\x0d\x0aunifo' + 'rm\x20float\x20u' + '_SampleSca' + 'le;\x0d\x0a\x0d\x0amed' + 'iump\x20vec4\x20' + 'combine(me' + 'diump\x20vec4' + '\x20bloom,\x20ve' + 'c2\x20uv)\x20{\x0d\x0a' + '\x09mediump\x20v' + 'ec4\x20color\x20' + '=\x20texture2' + 'D(u_BloomT' + 'ex,\x20uv);\x0d\x0a' + '\x09return\x20bl' + 'oom\x20+\x20colo' + 'r;\x0d\x0a}\x0d\x0a\x0d\x0av' + 'oid\x20fragUp' + 'sampleTent' + '()\x20{\x0d\x0a\x09med' + 'iump\x20vec4\x20' + 'bloom\x20=\x20up' + 'sampleTent' + '(u_MainTex' + ',\x20v_Texcoo' + 'rd0,\x20u_Mai' + 'nTex_Texel' + 'Size.xy,\x20v' + 'ec4(u_Samp' + 'leScale));' + '\x0d\x0a\x09gl_Frag' + 'Color\x20=\x20co' + 'mbine(bloo' + 'm,\x20v_Texco' + 'ord0);\x0d\x0a}\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x0d\x0a\x09f' + 'ragUpsampl' + 'eTent();\x0d\x0a' + '}', _0x522ef7 = '#include\x20\x22' + 'StdLib.gls' + 'l\x22;\x0d\x0a\x0d\x0a#de' + 'fine\x20EPSIL' + 'ON\x201.0e-4\x0d' + '\x0a\x0d\x0a//\x20Quad' + 'ratic\x20colo' + 'r\x20threshol' + 'ding\x0d\x0a//\x20c' + 'urve\x20=\x20(th' + 'reshold\x20-\x20' + 'knee,\x20knee' + '\x20*\x202,\x200.25' + '\x20/\x20knee)\x0d\x0a' + 'mediump\x20ve' + 'c4\x20quadrat' + 'icThreshol' + 'd(mediump\x20' + 'vec4\x20color' + ',\x20mediump\x20' + 'float\x20thre' + 'shold,\x20med' + 'iump\x20vec3\x20' + 'curve)\x20{\x0d\x0a' + '\x09//\x20Pixel\x20' + 'brightness' + '\x0d\x0a\x09mediump' + '\x20float\x20br\x20' + '=\x20max3(col' + 'or.r,\x20colo' + 'r.g,\x20color' + '.b);\x0d\x0a\x0d\x0a\x09/' + '/\x20Under-th' + 'reshold\x20pa' + 'rt:\x20quadra' + 'tic\x20curve\x0d' + '\x0a\x09mediump\x20' + 'float\x20rq\x20=' + '\x20clamp(br\x20' + '-\x20curve.x,' + '\x200.0,\x20curv' + 'e.y);\x0d\x0a\x09rq' + '\x20=\x20curve.z' + '\x20*\x20rq\x20*\x20rq' + ';\x0d\x0a\x0d\x0a\x09//\x20C' + 'ombine\x20and' + '\x20apply\x20the' + '\x20brightnes' + 's\x20response' + '\x20curve.\x0d\x0a\x09' + 'color\x20*=\x20m' + 'ax(rq,\x20br\x20' + '-\x20threshol' + 'd)\x20/\x20max(b' + 'r,\x20EPSILON' + ');\x0d\x0a\x0d\x0a\x09ret' + 'urn\x20color;' + '\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0a\x0d' + '\x0a//\x0d\x0a//\x20sR' + 'GB\x20transfe' + 'r\x20function' + 's\x0d\x0a//\x20Fast' + '\x20path\x20ref:' + '\x20http://ch' + 'illiant.bl' + 'ogspot.com' + '.au/2012/0' + '8/srgb-app' + 'roximation' + 's-for-hlsl' + '.html?m=1\x0d' + '\x0a//\x0d\x0amediu' + 'mp\x20vec3\x20sR' + 'GBToLinear' + '(mediump\x20v' + 'ec3\x20c)\x20{\x0d\x0a' + '\x09#ifdef\x20US' + 'E_VERY_FAS' + 'T_SRGB\x0d\x0a\x09\x09' + 'return\x20c\x20*' + '\x20c;\x0d\x0a\x09#eli' + 'f\x20defined(' + 'USE_FAST_S' + 'RGB)\x0d\x0a\x09\x09re' + 'turn\x20c\x20*\x20(' + 'c\x20*\x20(c\x20*\x200' + '.305306011' + '\x20+\x200.68217' + '1111)\x20+\x200.' + '012522878)' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09mediump' + '\x20vec3\x20line' + 'arRGBLo\x20=\x20' + 'c\x20/\x2012.92;' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20pow' + 'er=vec3(2.' + '4,\x202.4,\x202.' + '4);\x0d\x0a\x09\x09med' + ('iump\x20vec3\x20' + 'linearRGBH' + 'i\x20=\x20positi' + 'vePow((c\x20+' + '\x200.055)\x20/\x20' + '1.055,\x20pow' + 'er);\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20linearRGB' + '\x20=vec3((c.' + 'r<=0.04045' + ')\x20?\x20linear' + 'RGBLo.r\x20:\x20' + 'linearRGBH' + 'i.r,(c.g<=' + '0.04045)\x20?' + '\x20linearRGB' + 'Lo.g\x20:\x20lin' + 'earRGBHi.g' + ',(c.b<=0.0' + '4045)\x20?\x20li' + 'nearRGBLo.' + 'b\x20:\x20linear' + 'RGBHi.b);\x0d' + '\x0a\x09\x09return\x20' + 'linearRGB;' + '\x0d\x0a\x09#endif\x0d' + '\x0a}\x0d\x0a\x0d\x0amedi' + 'ump\x20vec4\x20s' + 'RGBToLinea' + 'r(mediump\x20' + 'vec4\x20c){\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20vec4(sRGB' + 'ToLinear(c' + '.rgb),\x20c.a' + ');\x0d\x0a}\x0d\x0a\x0d\x0a\x0d' + '\x0a\x0d\x0amediump' + '\x20vec3\x20line' + 'arToSRGB(m' + 'ediump\x20vec' + '3\x20c)\x20{\x0d\x0a\x09#' + 'ifdef\x20USE_' + 'VERY_FAST_' + 'SRGB\x0d\x0a\x09\x09re' + 'turn\x20sqrt(' + 'c);\x0d\x0a\x09#eli' + 'f\x20defined(' + 'USE_FAST_S' + 'RGB)\x0d\x0a\x09\x09re' + 'turn\x20max(1' + '.055\x20*\x20Pos' + 'itivePow(c' + ',\x200.416666' + '667)\x20-\x200.0' + '55,\x200.0);\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09mediump\x20v' + 'ec3\x20sRGBLo' + '\x20=\x20c\x20*\x2012.' + '92;\x0d\x0a\x09\x09med' + 'iump\x20vec3\x20' + 'power=vec3' + '(1.0\x20/\x202.4' + ',\x201.0\x20/\x202.' + '4,\x201.0\x20/\x202' + '.4);\x0d\x0a\x09\x09me' + 'diump\x20vec3' + '\x20sRGBHi\x20=\x20' + '(positiveP' + 'ow(c,\x20powe' + 'r)\x20*\x201.055' + ')\x20-\x200.055;' + '\x0d\x0a\x09\x09medium' + 'p\x20vec3\x20sRG' + 'B\x20=vec3((c' + '.r<=0.0031' + '308)\x20?\x20sRG' + 'BLo.r\x20:\x20sR' + 'GBHi.r,(c.' + 'g<=0.00313' + '08)\x20?\x20sRGB' + 'Lo.g\x20:\x20sRG' + 'BHi.g,(c.b' + '<=0.003130' + '8)\x20?\x20sRGBL' + 'o.b\x20:\x20sRGB' + 'Hi.b);\x0d\x0a\x09\x09' + 'return\x20sRG' + 'B;\x0d\x0a\x09#endi' + 'f\x0d\x0a}\x0d\x0a\x0d\x0ame' + 'diump\x20vec4' + '\x20linearToS' + 'RGB(medium' + 'p\x20vec4\x20c){' + '\x0d\x0a\x20\x20\x20\x20retu' + 'rn\x20vec4(li' + 'nearToSRGB' + '(c.rgb),\x20c' + '.a);\x0d\x0a}'), _0x169a42 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Colors' + '.glsl\x22;\x0d\x0a#' + 'include\x20\x22S' + 'ampling.gl' + 'sl\x22;\x0d\x0a\x0d\x0ava' + 'rying\x20vec2' + '\x20v_Texcoor' + 'd0;\x0d\x0a\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Mai' + 'nTex;\x0d\x0auni' + 'form\x20sampl' + 'er2D\x20u_Blo' + 'omTex;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mpler2D\x20u_' + 'AutoExposu' + 'reTex;\x0d\x0aun' + 'iform\x20samp' + 'ler2D\x20u_Bl' + 'oom_DirtTe' + 'x;\x0d\x0aunifor' + 'm\x20vec4\x20u_B' + 'loomTex_Te' + 'xelSize;\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Bloom' + '_DirtTileO' + 'ffset;\x20//\x20' + 'xy:\x20tiling' + ',\x20zw:\x20offs' + 'et\x0d\x0aunifor' + 'm\x20mediump\x20' + 'vec3\x20u_Blo' + 'om_Setting' + 's;//\x20x:\x20sa' + 'mpleScale,' + '\x20y:\x20intens' + 'ity,\x20z:\x20di' + 'rt\x20intensi' + 'ty\x0d\x0aunifor' + 'm\x20mediump\x20' + 'vec3\x20u_Blo' + 'om_Color;\x0d' + '\x0a\x0d\x0avoid\x20ma' + 'in()\x20{\x0d\x0a\x09m' + 'ediump\x20flo' + 'at\x20autoExp' + 'osure\x20=\x20te' + 'xture2D(u_' + 'AutoExposu' + 'reTex,\x20v_T' + 'excoord0).' + 'r;\x0d\x0a\x09mediu' + 'mp\x20vec4\x20co' + 'lor=vec4(0' + '.0);\x0d\x0a\x09col' + 'or\x20=\x20textu' + 're2D(u_Mai' + 'nTex,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09\x0d\x0a\x09color' + '\x20=\x20sRGBToL' + 'inear(colo' + 'r);\x0d\x0a\x09colo' + 'r.rgb\x20*=\x20a' + 'utoExposur' + 'e;\x0d\x0a\x09\x0d\x0a\x09#i' + 'f\x20defined(' + 'BLOOM)||de' + 'fined(BLOO' + 'M_LOW)\x0d\x0a\x09\x09' + '#ifdef\x20BLO' + 'OM\x0d\x0a\x09\x09\x09med' + 'iump\x20vec4\x20' + 'bloom\x20=\x20up' + 'sampleTent' + '(u_BloomTe' + 'x,\x20v_Texco' + 'ord0,\x20u_Bl' + 'oomTex_Tex' + 'elSize.xy,' + '\x20vec4(u_Bl' + 'oom_Settin' + 'gs.x));\x0d\x0a\x09' + '\x09#else\x0d\x0a\x09\x09' + '\x09mediump\x20v' + 'ec4\x20bloom\x20' + '=\x20upsample' + ('Box(u_Bloo' + 'mTex,\x20v_Te' + 'xcoord0,\x20u' + '_BloomTex_' + 'TexelSize.' + 'xy,\x20vec4(u' + '_Bloom_Set' + 'tings.x));' + '\x0d\x0a\x09\x09#endif' + '\x0d\x0a\x0d\x0a\x09\x09//\x20U' + 'Vs\x20should\x20' + 'be\x20Distort' + '(uv\x20*\x20u_Bl' + 'oom_DirtTi' + 'leOffset.x' + 'y\x20+\x20u_Bloo' + 'm_DirtTile' + 'Offset.zw)' + '\x0d\x0a\x09\x09//\x20but' + '\x20consideri' + 'ng\x20we\x20use\x20' + 'a\x20cover-st' + 'yle\x20scale\x20' + 'on\x20the\x20dir' + 't\x20texture\x20' + 'the\x20differ' + 'ence\x0d\x0a\x09\x09//' + '\x20isn\x27t\x20mas' + 'sive\x20so\x20we' + '\x20chose\x20to\x20' + 'save\x20a\x20few' + '\x20ALUs\x20here' + '\x20instead\x20i' + 'n\x20case\x20len' + 's\x20distorti' + 'on\x0d\x0a\x09\x09//\x20i' + 's\x20active\x0d\x0a' + '\x09\x09mediump\x20' + 'vec4\x20dirt\x20' + '=vec4(text' + 'ure2D(u_Bl' + 'oom_DirtTe' + 'x,\x20v_Texco' + 'ord0\x20*\x20u_B' + 'loom_DirtT' + 'ileOffset.' + 'xy\x20+\x20u_Blo' + 'om_DirtTil' + 'eOffset.zw' + ').rgb,\x200.0' + ');\x0d\x0a\x0d\x0a\x09\x09//' + '\x20Additive\x20' + 'bloom\x20(art' + 'ist\x20friend' + 'ly)\x0d\x0a\x09\x09blo' + 'om\x20*=\x20u_Bl' + 'oom_Settin' + 'gs.y;\x0d\x0a\x09\x09d' + 'irt\x20*=\x20u_B' + 'loom_Setti' + 'ngs.z;\x0d\x0a\x09\x09' + 'mediump\x20ve' + 'c4\x20bloomCo' + 'lor=vec4(u' + '_Bloom_Col' + 'or,\x201.0);\x0d' + '\x0a\x09\x09color\x20+' + '=\x20bloom\x20*\x20' + 'bloomColor' + ';\x0d\x0a\x09\x09color' + '\x20+=\x20dirt\x20*' + '\x20bloom;\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09mediump\x20' + 'vec4\x20final' + 'Color\x20=\x20co' + 'lor;\x0d\x0a\x09fin' + 'alColor\x20=\x20' + 'linearToSR' + 'GB(finalCo' + 'lor);\x0d\x0a\x09//' + 'finalColor' + '.rgb\x20=\x20Dit' + 'her(finalC' + 'olor.rgb,\x20' + 'v_Texcoord' + '0);//TODO:' + '抖动\x0d\x0a\x09gl_Fr' + 'agColor\x20=\x20' + 'finalColor' + ';\x0d\x0a}'), _0x4f02ff = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tionTexcoo' + 'rd;\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x20{\x0d\x0a\x09' + 'gl_Positio' + 'n\x20=\x20vec4(a' + '_PositionT' + 'excoord.xy' + ',\x200.0,\x201.0' + ');\x0d\x0a\x09v_Tex' + 'coord0\x20=\x20a' + '_PositionT' + 'excoord.zw' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20re' + 'mapGLPosit' + 'ionZ(gl_Po' + 'sition);\x0d\x0a' + '}', _0x49157e = '//\x20Better,' + '\x20temporall' + 'y\x20stable\x20b' + 'ox\x20filteri' + 'ng\x0d\x0a//\x20[Ji' + 'menez14]\x20h' + 'ttp://goo.' + 'gl/eomGso\x0d' + '\x0a//\x20.\x20.\x20.\x20' + '.\x20.\x20.\x20.\x0d\x0a/' + '/\x20.\x20A\x20.\x20B\x20' + '.\x20C\x20.\x0d\x0a//\x20' + '.\x20.\x20D\x20.\x20E\x20' + '.\x20.\x0d\x0a//\x20.\x20' + 'F\x20.\x20G\x20.\x20H\x20' + '.\x0d\x0a//\x20.\x20.\x20' + 'I\x20.\x20J\x20.\x20.\x0d' + '\x0a//\x20.\x20K\x20.\x20' + 'L\x20.\x20M\x20.\x0d\x0a/' + '/\x20.\x20.\x20.\x20.\x20' + '.\x20.\x20.\x0d\x0amed' + 'iump\x20vec4\x20' + 'downsample' + 'Box13Tap(s' + 'ampler2D\x20t' + 'ex,\x20vec2\x20u' + 'v,\x20vec2\x20te' + 'xelSize)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'A\x20=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20texelS' + 'ize\x20*\x20vec2' + '(-1.0,\x20-1.' + '0));\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20ve' + 'c4\x20B\x20=\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20tex' + 'elSize\x20*\x20v' + 'ec2(\x200.0,\x20' + '-1.0));\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec4\x20C\x20=\x20' + 'texture2D(' + 'tex,\x20uv\x20+\x20' + 'texelSize\x20' + '*\x20vec2(\x201.' + '0,\x20-1.0));' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20D' + '\x20=\x20texture' + '2D(tex,\x20uv' + '\x20+\x20texelSi' + 'ze\x20*\x20vec2(' + '-0.5,\x20-0.5' + '));\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20E\x20=\x20text' + 'ure2D(tex,' + '\x20uv\x20+\x20texe' + 'lSize\x20*\x20ve' + 'c2(\x200.5,\x20-' + '0.5));\x0d\x0a\x20\x20' + '\x20\x20mediump\x20' + 'vec4\x20F\x20=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20+\x20t' + 'exelSize\x20*' + '\x20vec2(-1.0' + ',\x20\x200.0));\x0d' + '\x0a\x20\x20\x20\x20mediu' + 'mp\x20vec4\x20G\x20' + '=\x20texture2' + 'D(tex,\x20uv)' + ';\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec4\x20' + 'H\x20=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20texelS' + 'ize\x20*\x20vec2' + '(\x201.0,\x20\x200.' + '0));\x0d\x0a\x20\x20\x20\x20' + 'mediump\x20ve' + 'c4\x20I\x20=\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20tex' + 'elSize\x20*\x20v' + 'ec2(-0.5,\x20' + '\x200.5));\x0d\x0a\x20' + '\x20\x20\x20mediump' + '\x20vec4\x20J\x20=\x20' + 'texture2D(' + 'tex,\x20uv\x20+\x20' + 'texelSize\x20' + '*\x20vec2(\x200.' + '5,\x20\x200.5));' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20K' + ('\x20=\x20texture' + '2D(tex,\x20uv' + '\x20+\x20texelSi' + 'ze\x20*\x20vec2(' + '-1.0,\x20\x201.0' + '));\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20L\x20=\x20text' + 'ure2D(tex,' + '\x20uv\x20+\x20texe' + 'lSize\x20*\x20ve' + 'c2(\x200.0,\x20\x20' + '1.0));\x0d\x0a\x20\x20' + '\x20\x20mediump\x20' + 'vec4\x20M\x20=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20+\x20t' + 'exelSize\x20*' + '\x20vec2(\x201.0' + ',\x20\x201.0));\x0d' + '\x0a\x0d\x0a\x09medium' + 'p\x20vec2\x20sca' + 'le=\x20vec2(0' + '.5,\x200.125)' + ';\x0d\x0a\x20\x20\x20\x20med' + 'iump\x20vec2\x20' + 'div\x20=\x20(1.0' + '\x20/\x204.0)\x20*\x20' + 'scale;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20vec4\x20o\x20=' + '\x20(D\x20+\x20E\x20+\x20' + 'I\x20+\x20J)\x20*\x20d' + 'iv.x;\x0d\x0a\x20\x20\x20' + '\x20o\x20+=\x20(A\x20+' + '\x20B\x20+\x20G\x20+\x20F' + ')\x20*\x20div.y;' + '\x0d\x0a\x20\x20\x20\x20o\x20+=' + '\x20(B\x20+\x20C\x20+\x20' + 'H\x20+\x20G)\x20*\x20d' + 'iv.y;\x0d\x0a\x20\x20\x20' + '\x20o\x20+=\x20(F\x20+' + '\x20G\x20+\x20L\x20+\x20K' + ')\x20*\x20div.y;' + '\x0d\x0a\x20\x20\x20\x20o\x20+=' + '\x20(G\x20+\x20H\x20+\x20' + 'M\x20+\x20L)\x20*\x20d' + 'iv.y;\x0d\x0a\x0d\x0a\x20' + '\x20\x20\x20return\x20' + 'o;\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x20Standard' + '\x20box\x20filte' + 'ring\x0d\x0amedi' + 'ump\x20vec4\x20d' + 'ownsampleB' + 'ox4Tap(sam' + 'pler2D\x20tex' + ',\x20vec2\x20uv,' + '\x20vec2\x20texe' + 'lSize)\x0d\x0a{\x0d' + '\x0a\x20\x20\x20\x20vec4\x20' + 'd\x20=\x20texelS' + 'ize.xyxy\x20*' + '\x20vec4(-1.0' + ',\x20-1.0,\x201.' + '0,\x201.0);\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20medi' + 'ump\x20vec4\x20s' + '\x20=\x20\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20d.xy);' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.zy);\x0d\x0a\x20' + '\x20\x20\x20s\x20+=\x20te' + 'xture2D(te' + 'x,\x20uv\x20+\x20d.' + 'xw);\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.zw)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20s\x20*\x20' + '(1.0\x20/\x204.0' + ');\x0d\x0a}\x0d\x0a\x0d\x0a/' + '/\x209-tap\x20bi' + 'linear\x20ups' + 'ampler\x20(te' + 'nt\x20filter)' + '\x0d\x0a//\x20.\x20.\x20.' + '\x20.\x20.\x20.\x20.\x0d\x0a' + '//\x20.\x201\x20.\x202' + '\x20.\x201\x20.\x0d\x0a//' + '\x20.\x20.\x20.\x20.\x20.' + '\x20.\x20.\x0d\x0a//\x20.' + '\x202\x20.\x204\x20.\x202' + '\x20.\x0d\x0a//\x20.\x20.' + '\x20.\x20.\x20.\x20.\x20.' + '\x0d\x0a//\x20.\x201\x20.') + ('\x202\x20.\x201\x20.\x0d\x0a' + '//\x20.\x20.\x20.\x20.' + '\x20.\x20.\x20.\x0d\x0ame' + 'diump\x20vec4' + '\x20upsampleT' + 'ent(sample' + 'r2D\x20tex,\x20v' + 'ec2\x20uv,\x20ve' + 'c2\x20texelSi' + 'ze,\x20vec4\x20s' + 'ampleScale' + ')\x0d\x0a{\x0d\x0a\x20\x20\x20\x20' + 'vec4\x20d\x20=\x20t' + 'exelSize.x' + 'yxy\x20*\x20vec4' + '(1.0,\x201.0,' + '\x20-1.0,\x200.0' + ')\x20*\x20sample' + 'Scale;\x0d\x0a\x0d\x0a' + '\x20\x20\x20\x20medium' + 'p\x20vec4\x20s\x20=' + '\x20\x20texture2' + 'D(tex,\x20uv\x20' + '-\x20d.xy);\x0d\x0a' + '\x20\x20\x20\x20s\x20+=\x20t' + 'exture2D(t' + 'ex,\x20uv\x20-\x20d' + '.wy)\x20*\x202.0' + ';\x0d\x0a\x20\x20\x20\x20s\x20+' + '=\x20texture2' + 'D(tex,\x20uv\x20' + '-\x20d.zy);\x0d\x0a' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.zw)\x20*\x202' + '.0;\x0d\x0a\x20\x20\x20\x20s' + '\x20+=\x20textur' + 'e2D(tex,\x20u' + 'v)\x20*\x204.0;\x0d' + '\x0a\x20\x20\x20\x20s\x20+=\x20' + 'texture2D(' + 'tex,\x09uv\x20+\x20' + 'd.xw)\x20*\x202.' + '0;\x0d\x0a\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.zy)' + ';\x0d\x0a\x20\x20\x20\x20s\x20+' + '=\x20texture2' + 'D(tex,\x20uv\x20' + '+\x20d.wy)\x20*\x20' + '2.0;\x0d\x0a\x20\x20\x20\x20' + 's\x20+=\x20textu' + 're2D(tex,\x20' + 'uv\x20+\x20d.xy)' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20r' + 'eturn\x20s\x20*\x20' + '(1.0\x20/\x2016.' + '0);\x0d\x0a}\x0d\x0a\x0d\x0a' + '//\x20Standar' + 'd\x20box\x20filt' + 'ering\x0d\x0amed' + 'iump\x20vec4\x20' + 'upsampleBo' + 'x(sampler2' + 'D\x20tex,\x20vec' + '2\x20uv,\x20vec2' + '\x20texelSize' + ',\x20vec4\x20sam' + 'pleScale)\x0d' + '\x0a{\x0d\x0a\x20\x20\x20\x20ve' + 'c4\x20d\x20=\x20tex' + 'elSize.xyx' + 'y\x20*\x20vec4(-' + '1.0,\x20-1.0,' + '\x201.0,\x201.0)' + '\x20*\x200.5\x20*\x20s' + 'ampleScale' + ';\x0d\x0a\x0d\x0a\x20\x20\x20\x20m' + 'ediump\x20vec' + '4\x20s\x20=\x20\x20tex' + 'ture2D(tex' + ',\x20uv\x20+\x20d.x' + 'y);\x0d\x0a\x20\x20\x20\x20s' + '\x20+=\x20textur' + 'e2D(tex,\x20u' + 'v\x20+\x20d.zy);' + '\x0d\x0a\x20\x20\x20\x20s\x20+=' + '\x20texture2D' + '(tex,\x20uv\x20+' + '\x20d.xw);\x0d\x0a\x20' + '\x20\x20\x20s\x20+=\x20te' + 'xture2D(te' + 'x,\x20uv\x20+\x20d.' + 'zw);\x0d\x0a\x0d\x0a\x20\x20' + '\x20\x20return\x20s' + '\x20*\x20(1.0\x20/\x20' + '4.0);\x0d\x0a}'), _0x20b8dd = '#define\x20HA' + 'LF_MAX\x20\x20\x20\x20' + '\x20\x20\x2065504.0' + '\x20//\x20(2\x20-\x202' + '^-10)\x20*\x202^' + '15\x0d\x0a\x0d\x0a#def' + 'ine\x20FLT_EP' + 'SILON\x20\x20\x20\x201' + '.192092896' + 'e-07\x20//\x20Sm' + 'allest\x20pos' + 'itive\x20numb' + 'er,\x20such\x20t' + 'hat\x201.0\x20+\x20' + 'FLT_EPSILO' + 'N\x20!=\x201.0\x0d\x0a' + '\x0d\x0amediump\x20' + 'vec4\x20safeH' + 'DR(mediump' + '\x20vec4\x20c)\x0d\x0a' + '{\x0d\x0a\x20\x20\x20\x20ret' + 'urn\x20min(c,' + '\x20HALF_MAX)' + ';\x0d\x0a}\x0d\x0a\x0d\x0afl' + 'oat\x20max3(f' + 'loat\x20a,\x20fl' + 'oat\x20b,\x20flo' + 'at\x20c)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20max(max(a' + ',\x20b),\x20c);\x0d' + '\x0a}\x0d\x0a\x0d\x0avec3' + '\x20positiveP' + 'ow(vec3\x20ba' + 'se,\x20vec3\x20p' + 'ower)\x0d\x0a{\x0d\x0a' + '\x20\x20\x20\x20return' + '\x20pow(max(a' + 'bs(base),\x20' + 'vec3(FLT_E' + 'PSILON,\x20FL' + 'T_EPSILON,' + '\x20FLT_EPSIL' + 'ON)),\x20powe' + 'r);\x0d\x0a}', _0x52ebdb = 'uniform\x20sa' + 'mpler2D\x20u_' + 'shadowMap1' + ';\x0d\x0auniform' + '\x20sampler2D' + '\x20u_shadowM' + 'ap2;\x0d\x0aunif' + 'orm\x20sample' + 'r2D\x20u_shad' + 'owMap3;\x0d\x0au' + 'niform\x20vec' + '2\x09\x20\x20u_shad' + 'owPCFoffse' + 't;\x0d\x0aunifor' + 'm\x20vec4\x20\x20\x20\x20' + '\x20u_shadowP' + 'SSMDistanc' + 'e;\x0d\x0avec4\x20p' + 'ackDepth(c' + 'onst\x20in\x20fl' + 'oat\x20depth)' + '\x0d\x0a{\x0d\x0a\x09cons' + 't\x20vec4\x20bit' + 'Shift\x20=\x20ve' + 'c4(256.0*2' + '56.0*256.0' + ',\x20256.0*25' + '6.0,\x20256.0' + ',\x201.0);\x0d\x0a\x09' + 'const\x20vec4' + '\x20bitMask\x09=' + '\x20vec4(0.0,' + '\x201.0/256.0' + ',\x201.0/256.' + '0,\x201.0/256' + '.0);\x0d\x0a\x09vec' + '4\x20res\x20=\x20mo' + 'd(depth*bi' + 'tShift*vec' + '4(255),\x20ve' + 'c4(256))/v' + 'ec4(255);\x0d' + '\x0a\x09res\x20-=\x20r' + 'es.xxyz\x20*\x20' + 'bitMask;\x0d\x0a' + '\x09return\x20re' + 's;\x0d\x0a}\x0d\x0aflo' + 'at\x20unpackD' + 'epth(const' + '\x20in\x20vec4\x20r' + 'gbaDepth)\x0d' + '\x0a{\x0d\x0a\x09const' + '\x20vec4\x20bitS' + 'hift\x20=\x20vec' + '4(1.0/(256' + '.0*256.0*2' + '56.0),\x201.0' + '/(256.0*25' + '6.0),\x201.0/' + '256.0,\x201.0' + ');\x0d\x0a\x09float' + '\x20depth\x20=\x20d' + 'ot(rgbaDep' + 'th,\x20bitShi' + 'ft);\x0d\x0a\x09ret' + 'urn\x20depth;' + '\x0d\x0a}\x0d\x0afloat' + '\x20tex2DPCF(' + '\x20sampler2D' + '\x20shadowMap' + ',vec2\x20texc' + 'oord,vec2\x20' + 'invsize,fl' + 'oat\x20zRef\x20)' + '\x0d\x0a{\x0d\x0a\x09vec2' + '\x20texelpos\x20' + '=texcoord\x20' + '/\x20invsize;' + '\x0d\x0a\x09vec2\x20le' + 'rps\x20=\x20frac' + 't(\x20texelpo' + 's\x20);\x0d\x0a\x09flo' + 'at\x20sourcev' + 'als[4];\x0d\x0a\x09' + 'sourcevals' + '[0]\x20=\x20floa' + 't(\x20unpackD' + 'epth(textu' + 're2D(shado' + 'wMap,texco' + 'ord))\x20>\x20zR' + 'ef\x20);\x0d\x0a\x09so' + 'urcevals[1' + ']\x20=\x20float(' + '\x20unpackDep' + 'th(texture' + '2D(shadowM' + 'ap,texcoor' + 'd\x20+\x20vec2(i' + 'nvsize.x,0' + (')))\x20>\x20zRef' + '\x20);\x0d\x0a\x09sour' + 'cevals[2]\x20' + '=\x20float(\x20u' + 'npackDepth' + '(texture2D' + '(shadowMap' + ',texcoord\x20' + '+\x20vec2(0,i' + 'nvsize.y))' + ')\x20>\x20zRef\x20)' + ';\x0d\x0a\x09source' + 'vals[3]\x20=\x20' + 'float(\x20unp' + 'ackDepth(t' + 'exture2D(s' + 'hadowMap,t' + 'excoord\x20+\x20' + 'vec2(invsi' + 'ze.x,\x20invs' + 'ize.y)\x20))\x20' + '>\x20zRef\x20);\x0d' + '\x0a\x09return\x20m' + 'ix(\x20mix(so' + 'urcevals[0' + '],sourceva' + 'ls[2],lerp' + 's.y),mix(s' + 'ourcevals[' + '1],sourcev' + 'als[3],ler' + 'ps.y),lerp' + 's.x\x20);\x0d\x0a}\x0d' + '\x0afloat\x20get' + 'ShadowPSSM' + '3(\x20sampler' + '2D\x20shadowM' + 'ap1,sample' + 'r2D\x20shadow' + 'Map2,sampl' + 'er2D\x20shado' + 'wMap3,mat4' + '\x20lightShad' + 'owVP[4],ve' + 'c4\x20pssmDis' + 'tance,vec2' + '\x20shadowPCF' + 'Offset,vec' + '3\x20worldPos' + ',float\x20pos' + 'ViewZ,floa' + 't\x20zBias\x20)\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20value\x20=\x201' + '.0;\x0d\x0a\x09int\x20' + 'nPSNum\x20=\x20i' + 'nt(posView' + 'Z>pssmDist' + 'ance.x);\x0d\x0a' + '\x09nPSNum\x20+=' + '\x20int(posVi' + 'ewZ>pssmDi' + 'stance.y);' + '\x0d\x0a\x09nPSNum\x20' + '+=\x20int(pos' + 'ViewZ>pssm' + 'Distance.z' + ');\x0d\x0a\x09//真SB' + ',webgl不支持在' + 'PS中直接访问数组\x0d' + '\x0a\x09mat4\x20lig' + 'htVP;\x0d\x0a\x09if' + '(\x20nPSNum\x20=' + '=\x200\x20)\x0d\x0a\x09{\x0d' + '\x0a\x09\x09lightVP' + '\x20=\x20lightSh' + 'adowVP[1];' + '\x0d\x0a\x09}\x0d\x0a\x09els' + 'e\x20if(\x20nPSN' + 'um\x20==\x201\x20)\x0d' + '\x0a\x09{\x0d\x0a\x09\x09lig' + 'htVP\x20=\x20lig' + 'htShadowVP' + '[2];\x0d\x0a\x09}\x0d\x0a' + '\x09else\x20if(\x20' + 'nPSNum\x20==\x20' + '2\x20)\x0d\x0a\x09{\x0d\x0a\x09' + '\x09lightVP\x20=' + '\x20lightShad' + 'owVP[3];\x0d\x0a' + '\x09}\x0d\x0a\x09vec4\x20' + 'vLightMVPP' + 'os\x20=\x20light' + 'VP\x20*\x20vec4(' + 'worldPos,1' + '.0);\x0d\x0a\x09//为' + '了效率，在CPU计算' + '/2.0\x20+\x200.5' + '\x0d\x0a\x09//vec3\x20' + 'vText\x20=\x20(v') + ('LightMVPPo' + 's.xyz\x20/\x20vL' + 'ightMVPPos' + '.w)/2.0\x20+\x20' + '0.5;\x0d\x0a\x09vec' + '3\x20vText\x20=\x20' + 'vLightMVPP' + 'os.xyz\x20/\x20v' + 'LightMVPPo' + 's.w;\x0d\x0a\x09flo' + 'at\x20fMyZ\x20=\x20' + 'vText.z\x20-\x20' + 'zBias;\x0d\x0a\x09/' + '*\x0d\x0a\x09bvec4\x20' + 'bInFrustum' + 'Vec\x20=\x20bvec' + '4\x20(\x20vText.' + 'x\x20>=\x200.0,\x20' + 'vText.x\x20<=' + '\x201.0,\x20vTex' + 't.y\x20>=\x200.0' + ',\x20vText.y\x20' + '<=\x201.0\x20);\x0d' + '\x0a\x09bool\x20bIn' + 'Frustum\x20=\x20' + 'all(\x20bInFr' + 'ustumVec\x20)' + ';\x0d\x0a\x09bvec2\x20' + 'bFrustumTe' + 'stVec\x20=\x20bv' + 'ec2(\x20bInFr' + 'ustum,\x20fMy' + 'Z\x20<=\x201.0\x20)' + ';\x0d\x0a\x09bool\x20b' + 'FrustumTes' + 't\x20=\x20all(\x20b' + 'FrustumTes' + 'tVec\x20);\x0d\x0a\x09' + 'if\x20(\x20bFrus' + 'tumTest\x20)\x20' + '\x0d\x0a\x09*/\x0d\x0a\x09if' + '(\x20fMyZ\x20<=\x20' + '1.0\x20)\x0d\x0a\x09{\x0d' + '\x0a\x09\x09float\x20z' + 'depth=0.0;' + '\x0d\x0a#ifdef\x20S' + 'HADOWMAP_P' + 'CF3\x0d\x0a\x09\x09if\x20' + '(\x20nPSNum\x20=' + '=\x200\x20)\x0d\x0a\x09\x09{' + '\x0d\x0a\x09\x09\x09value' + '\x20=\x20\x20tex2DP' + 'CF(\x20shadow' + 'Map1,\x20vTex' + 't.xy,shado' + 'wPCFOffset' + ',fMyZ\x20);\x0d\x0a' + '\x09\x09\x09value\x20+' + '=\x20tex2DPCF' + '(\x20shadowMa' + 'p1,\x20vText.' + 'xy+vec2(sh' + 'adowPCFOff' + 'set.xy),sh' + 'adowPCFOff' + 'set,\x09fMyZ\x20' + ');\x0d\x0a\x09\x09\x09val' + 'ue\x20+=\x20tex2' + 'DPCF(\x20shad' + 'owMap1,\x20vT' + 'ext.xy+vec' + '2(shadowPC' + 'FOffset.x,' + '0),shadowP' + 'CFOffset,\x09' + 'fMyZ\x20);\x0d\x0a\x09' + '\x09\x09value\x20+=' + '\x20tex2DPCF(' + '\x20shadowMap' + '1,\x20vText.x' + 'y+vec2(0,s' + 'hadowPCFOf' + 'fset.y),sh' + 'adowPCFOff' + 'set,\x09fMyZ\x20' + ');\x0d\x0a\x09\x09\x09val' + 'ue\x20=\x20value' + '/4.0;\x0d\x0a\x09\x09}' + '\x20\x0d\x0a\x09\x09else\x20' + 'if(\x20nPSNum' + '\x20==\x201\x20)\x0d\x0a\x09' + '\x09{\x0d\x0a\x09\x09\x09val' + 'ue\x20=\x20tex2D' + 'PCF(\x20shado' + 'wMap2,vTex' + 't.xy,shado' + 'wPCFOffset' + ',fMyZ);\x0d\x0a\x09' + '\x09}\x0d\x0a\x09\x09else' + '\x20if(\x20nPSNu') + ('m\x20==\x202\x20)\x0d\x0a' + '\x09\x09{\x0d\x0a\x09\x09\x09ve' + 'c4\x20color\x20=' + '\x20texture2D' + '(\x20shadowMa' + 'p3,vText.x' + 'y\x20);\x0d\x0a\x09\x09\x09z' + 'depth\x20=\x20un' + 'packDepth(' + 'color);\x0d\x0a\x09' + '\x09\x09value\x20=\x20' + 'float(fMyZ' + '\x20<\x20zdepth)' + ';\x0d\x0a\x09\x09}\x0d\x0a#e' + 'ndif\x0d\x0a#ifd' + 'ef\x20SHADOWM' + 'AP_PCF2\x0d\x0a\x09' + '\x09if\x20(\x20nPSN' + 'um\x20==\x200\x20)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09v' + 'alue\x20=\x20tex' + '2DPCF(\x20sha' + 'dowMap1,vT' + 'ext.xy,sha' + 'dowPCFOffs' + 'et,fMyZ);\x0d' + '\x0a\x09\x09}\x0d\x0a\x09\x09el' + 'se\x20if(\x20nPS' + 'Num\x20==\x201\x20)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'value\x20=\x20te' + 'x2DPCF(\x20sh' + 'adowMap2,v' + 'Text.xy,sh' + 'adowPCFOff' + 'set,fMyZ);' + '\x0d\x0a\x09\x09}\x0d\x0a\x09\x09e' + 'lse\x20if(\x20nP' + 'SNum\x20==\x202\x20' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09vec4\x20colo' + 'r\x20=\x20textur' + 'e2D(\x20shado' + 'wMap3,vTex' + 't.xy\x20);\x0d\x0a\x09' + '\x09\x09zdepth\x20=' + '\x20unpackDep' + 'th(color);' + '\x0d\x0a\x09\x09\x09value' + '\x20=\x20float(f' + 'MyZ\x20<\x20zdep' + 'th);\x0d\x0a\x09\x09}\x0d' + '\x0a\x0d\x0a#endif\x0d' + '\x0a#ifdef\x20SH' + 'ADOWMAP_PC' + 'F1\x0d\x0a\x09\x09if\x20(' + '\x20nPSNum\x20==' + '\x200\x20)\x0d\x0a\x09\x09{\x0d' + '\x0a\x09\x09\x09value\x20' + '=\x20tex2DPCF' + '(\x20shadowMa' + 'p1,vText.x' + 'y,shadowPC' + 'FOffset,fM' + 'yZ);\x0d\x0a\x09\x09}\x0d' + '\x0a\x09\x09else\x20if' + '(\x20nPSNum\x20=' + '=\x201\x20)\x0d\x0a\x09\x09{' + '\x0d\x0a\x09\x09\x09vec4\x20' + 'color\x20=\x20te' + 'xture2D(\x20s' + 'hadowMap2,' + 'vText.xy\x20)' + ';\x0d\x0a\x09\x09\x09zdep' + 'th\x20=\x20unpac' + 'kDepth(col' + 'or);\x0d\x0a\x09\x09\x09v' + 'alue\x20=\x20flo' + 'at(fMyZ\x20<\x20' + 'zdepth);\x0d\x0a' + '\x09\x09}\x0d\x0a\x09\x09els' + 'e\x20if(\x20nPSN' + 'um\x20==\x202\x20)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09v' + 'ec4\x20color\x20' + '=\x20texture2' + 'D(\x20shadowM' + 'ap3,vText.' + 'xy\x20);\x0d\x0a\x09\x09\x09' + 'zdepth\x20=\x20u' + 'npackDepth' + '(color);\x0d\x0a' + '\x09\x09\x09value\x20=' + '\x20float(fMy' + 'Z\x20<\x20zdepth' + ');\x0d\x0a\x09\x09}\x0d\x0a#' + 'endif\x0d\x0a#if' + 'def\x20SHADOW' + 'MAP_PCF_NO' + '\x0d\x0a\x09\x09vec4\x20c') + ('olor;\x0d\x0a\x09\x09i' + 'f\x20(\x20nPSNum' + '\x20==\x200\x20)\x0d\x0a\x09' + '\x09{\x0d\x0a\x09\x09\x09col' + 'or\x20=\x20textu' + 're2D(\x20shad' + 'owMap1,vTe' + 'xt.xy\x20);\x0d\x0a' + '\x09\x09}\x0d\x0a\x09\x09els' + 'e\x20if(\x20nPSN' + 'um\x20==\x201\x20)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09c' + 'olor\x20=\x20tex' + 'ture2D(\x20sh' + 'adowMap2,v' + 'Text.xy\x20);' + '\x0d\x0a\x09\x09}\x0d\x0a\x09\x09e' + 'lse\x20if(\x20nP' + 'SNum\x20==\x202\x20' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09color\x20=\x20t' + 'exture2D(\x20' + 'shadowMap3' + ',vText.xy\x20' + ');\x0d\x0a\x09\x09}\x0d\x0a\x09' + '\x09zdepth\x20=\x20' + 'unpackDept' + 'h(color);\x0d' + '\x0a\x09\x09value\x20=' + '\x20float(fMy' + 'Z\x20<\x20zdepth' + ');\x0d\x0a#endif' + '\x0d\x0a\x09}\x0d\x0a\x09ret' + 'urn\x20value;' + '\x0d\x0a}\x0d\x0afloat' + '\x20getShadow' + 'PSSM2(\x20sam' + 'pler2D\x20sha' + 'dowMap1,sa' + 'mpler2D\x20sh' + 'adowMap2,m' + 'at4\x20lightS' + 'hadowVP[4]' + ',vec4\x20pssm' + 'Distance,v' + 'ec2\x20shadow' + 'PCFOffset,' + 'vec3\x20world' + 'Pos,float\x20' + 'posViewZ,f' + 'loat\x20zBias' + '\x20)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20value\x20' + '=\x201.0;\x0d\x0a\x09i' + 'nt\x20nPSNum\x20' + '=\x20int(posV' + 'iewZ>pssmD' + 'istance.x)' + ';\x0d\x0a\x09nPSNum' + '\x20+=\x20int(po' + 'sViewZ>pss' + 'mDistance.' + 'y);\x0d\x0a\x09//真S' + 'B,webgl不支持' + '在PS中直接访问数组' + '\x0d\x0a\x09mat4\x20li' + 'ghtVP;\x0d\x0a\x09i' + 'f(\x20nPSNum\x20' + '==\x200\x20)\x0d\x0a\x09{' + '\x0d\x0a\x09\x09lightV' + 'P\x20=\x20lightS' + 'hadowVP[1]' + ';\x0d\x0a\x09}\x0d\x0a\x09el' + 'se\x20if(\x20nPS' + 'Num\x20==\x201\x20)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09li' + 'ghtVP\x20=\x20li' + 'ghtShadowV' + 'P[2];\x0d\x0a\x09}\x0d' + '\x0a\x09vec4\x20vLi' + 'ghtMVPPos\x20' + '=\x20lightVP\x20' + '*\x20vec4(wor' + 'ldPos,1.0)' + ';\x0d\x0a\x09//为了效率' + '，在CPU计算/2.' + '0\x20+\x200.5\x0d\x0a\x09' + '//vec3\x20vTe' + 'xt\x20=\x20(vLig' + 'htMVPPos.x' + 'yz\x20/\x20vLigh' + 'tMVPPos.w)' + '/2.0\x20+\x200.5' + ';\x0d\x0a\x09vec3\x20v' + 'Text\x20=\x20vLi' + 'ghtMVPPos.' + 'xyz\x20/\x20vLig' + 'htMVPPos.w' + ';\x0d\x0a\x09float\x20' + 'fMyZ\x20=\x20vTe') + ('xt.z\x20-\x20zBi' + 'as;\x0d\x0a\x09/*\x0d\x0a' + '\x09bvec4\x20bIn' + 'FrustumVec' + '\x20=\x20bvec4\x20(' + '\x20vText.x\x20>' + '=\x200.0,\x20vTe' + 'xt.x\x20<=\x201.' + '0,\x20vText.y' + '\x20>=\x200.0,\x20v' + 'Text.y\x20<=\x20' + '1.0\x20);\x0d\x0a\x09b' + 'ool\x20bInFru' + 'stum\x20=\x20all' + '(\x20bInFrust' + 'umVec\x20);\x0d\x0a' + '\x09bvec2\x20bFr' + 'ustumTestV' + 'ec\x20=\x20bvec2' + '(\x20bInFrust' + 'um,\x20fMyZ\x20<' + '=\x201.0\x20);\x0d\x0a' + '\x09bool\x20bFru' + 'stumTest\x20=' + '\x20all(\x20bFru' + 'stumTestVe' + 'c\x20);\x0d\x0a\x09if\x20' + '(\x20bFrustum' + 'Test\x20)\x20\x0d\x0a\x09' + '*/\x0d\x0a\x09if(\x20f' + 'MyZ\x20<=\x201.0' + '\x20)\x0d\x0a\x09{\x0d\x0a\x09\x09' + 'float\x20zdep' + 'th=0.0;\x0d\x0a#' + 'ifdef\x20SHAD' + 'OWMAP_PCF3' + '\x0d\x0a\x09\x09if\x20(\x20n' + 'PSNum\x20==\x200' + '\x20)\x0d\x0a\x09\x09{\x0d\x0a\x09' + '\x09\x09value\x20=\x20' + '\x20tex2DPCF(' + '\x20shadowMap' + '1,\x20vText.x' + 'y,shadowPC' + 'FOffset,fM' + 'yZ\x20);\x0d\x0a\x09\x09\x09' + 'value\x20+=\x20t' + 'ex2DPCF(\x20s' + 'hadowMap1,' + '\x20vText.xy+' + 'vec2(shado' + 'wPCFOffset' + '.xy),shado' + 'wPCFOffset' + ',\x09fMyZ\x20);\x0d' + '\x0a\x09\x09\x09value\x20' + '+=\x20tex2DPC' + 'F(\x20shadowM' + 'ap1,\x20vText' + '.xy+vec2(s' + 'hadowPCFOf' + 'fset.x,0),' + 'shadowPCFO' + 'ffset,\x09fMy' + 'Z\x20);\x0d\x0a\x09\x09\x09v' + 'alue\x20+=\x20te' + 'x2DPCF(\x20sh' + 'adowMap1,\x20' + 'vText.xy+v' + 'ec2(0,shad' + 'owPCFOffse' + 't.y),shado' + 'wPCFOffset' + ',\x09fMyZ\x20);\x0d' + '\x0a\x09\x09\x09value\x20' + '=\x20value/4.' + '0;\x0d\x0a\x09\x09}\x0d\x0a\x09' + '\x09else\x20if(\x20' + 'nPSNum\x20==\x20' + '1\x20)\x0d\x0a\x09\x09{\x0d\x0a' + '\x09\x09\x09value\x20=' + '\x20tex2DPCF(' + '\x20shadowMap' + '2,vText.xy' + ',shadowPCF' + 'Offset,fMy' + 'Z);\x0d\x0a\x09\x09}\x0d\x0a' + '#endif\x0d\x0a#i' + 'fdef\x20SHADO' + 'WMAP_PCF2\x0d' + '\x0a\x09\x09if\x20(\x20nP' + 'SNum\x20==\x200\x20' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09value\x20=\x20t' + 'ex2DPCF(\x20s' + 'hadowMap1,' + 'vText.xy,s' + 'hadowPCFOf' + 'fset,fMyZ)' + ';\x0d\x0a\x09\x09}\x0d\x0a\x09\x09') + ('else\x20if(\x20n' + 'PSNum\x20==\x201' + '\x20)\x0d\x0a\x09\x09{\x0d\x0a\x09' + '\x09\x09value\x20=\x20' + 'tex2DPCF(\x20' + 'shadowMap2' + ',vText.xy,' + 'shadowPCFO' + 'ffset,fMyZ' + ');\x0d\x0a\x09\x09}\x0d\x0a#' + 'endif\x0d\x0a#if' + 'def\x20SHADOW' + 'MAP_PCF1\x0d\x0a' + '\x09\x09if\x20(\x20nPS' + 'Num\x20==\x200\x20)' + '\x0d\x0a\x09\x09{\x0d\x0a\x09\x09\x09' + 'value\x20=\x20te' + 'x2DPCF(\x20sh' + 'adowMap1,v' + 'Text.xy,sh' + 'adowPCFOff' + 'set,fMyZ);' + '\x0d\x0a\x09\x09}\x0d\x0a\x09\x09e' + 'lse\x20if(\x20nP' + 'SNum\x20==\x201\x20' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09vec4\x20colo' + 'r\x20=\x20textur' + 'e2D(\x20shado' + 'wMap2,vTex' + 't.xy\x20);\x0d\x0a\x09' + '\x09\x09zdepth\x20=' + '\x20unpackDep' + 'th(color);' + '\x0d\x0a\x09\x09\x09value' + '\x20=\x20float(f' + 'MyZ\x20<\x20zdep' + 'th);\x0d\x0a\x09\x09}\x0d' + '\x0a#endif\x0d\x0a#' + 'ifdef\x20SHAD' + 'OWMAP_PCF_' + 'NO\x0d\x0a\x09\x09vec4' + '\x20color;\x0d\x0a\x09' + '\x09if\x20(\x20nPSN' + 'um\x20==\x200\x20)\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09c' + 'olor\x20=\x20tex' + 'ture2D(\x20sh' + 'adowMap1,v' + 'Text.xy\x20);' + '\x0d\x0a\x09\x09}\x0d\x0a\x09\x09e' + 'lse\x20if(\x20nP' + 'SNum\x20==\x201\x20' + ')\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09color\x20=\x20t' + 'exture2D(\x20' + 'shadowMap2' + ',vText.xy\x20' + ');\x0d\x0a\x09\x09}\x0d\x0a\x09' + '\x09zdepth\x20=\x20' + 'unpackDept' + 'h(color);\x0d' + '\x0a\x09\x09value\x20=' + '\x20float(fMy' + 'Z\x20<\x20zdepth' + ');\x0d\x0a#endif' + '\x0d\x0a\x09}\x0d\x0a\x09ret' + 'urn\x20value;' + '\x0d\x0a}\x0d\x0afloat' + '\x20getShadow' + 'PSSM1(\x20sam' + 'pler2D\x20sha' + 'dowMap1,ve' + 'c4\x20lightMV' + 'PPos,vec4\x20' + 'pssmDistan' + 'ce,vec2\x20sh' + 'adowPCFOff' + 'set,float\x20' + 'posViewZ,f' + 'loat\x20zBias' + '\x20)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20value\x20' + '=\x201.0;\x0d\x0a\x09i' + 'f(\x20posView' + 'Z\x20<\x20pssmDi' + 'stance.x\x20)' + '\x0d\x0a\x09{\x0d\x0a\x09\x09ve' + 'c3\x20vText\x20=' + '\x20lightMVPP' + 'os.xyz\x20/\x20l' + 'ightMVPPos' + '.w;\x0d\x0a\x09\x09flo' + 'at\x20fMyZ\x20=\x20' + 'vText.z\x20-\x20' + 'zBias;\x0d\x0a\x09\x09' + '/*\x0d\x0a\x09\x09bvec' + '4\x20bInFrust' + 'umVec\x20=\x20bv' + 'ec4\x20(\x20vTex') + ('t.x\x20>=\x200.0' + ',\x20vText.x\x20' + '<=\x201.0,\x20vT' + 'ext.y\x20>=\x200' + '.0,\x20vText.' + 'y\x20<=\x201.0\x20)' + ';\x0d\x0a\x09\x09bool\x20' + 'bInFrustum' + '\x20=\x20all(\x20bI' + 'nFrustumVe' + 'c\x20);\x0d\x0a\x09\x09bv' + 'ec2\x20bFrust' + 'umTestVec\x20' + '=\x20bvec2(\x20b' + 'InFrustum,' + '\x20fMyZ\x20<=\x201' + '.0\x20);\x0d\x0a\x09\x09b' + 'ool\x20bFrust' + 'umTest\x20=\x20a' + 'll(\x20bFrust' + 'umTestVec\x20' + ');\x0d\x0a\x09\x09*/\x0d\x0a' + '\x09\x09if\x20(\x20fMy' + 'Z\x20<=\x201.0\x20)' + '\x20\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09float\x20zde' + 'pth=0.0;\x0d\x0a' + '#ifdef\x20SHA' + 'DOWMAP_PCF' + '3\x0d\x0a\x09\x09\x09valu' + 'e\x20=\x20\x20tex2D' + 'PCF(\x20shado' + 'wMap1,\x20vTe' + 'xt.xy,shad' + 'owPCFOffse' + 't,fMyZ\x20);\x0d' + '\x0a\x09\x09\x09value\x20' + '+=\x20tex2DPC' + 'F(\x20shadowM' + 'ap1,\x20vText' + '.xy+vec2(s' + 'hadowPCFOf' + 'fset.xy),s' + 'hadowPCFOf' + 'fset,fMyZ\x20' + ');\x0d\x0a\x09\x09\x09val' + 'ue\x20+=\x20tex2' + 'DPCF(\x20shad' + 'owMap1,\x20vT' + 'ext.xy+vec' + '2(shadowPC' + 'FOffset.x,' + '0),shadowP' + 'CFOffset,f' + 'MyZ\x20);\x0d\x0a\x09\x09' + '\x09value\x20+=\x20' + 'tex2DPCF(\x20' + 'shadowMap1' + ',\x20vText.xy' + '+vec2(0,sh' + 'adowPCFOff' + 'set.y),sha' + 'dowPCFOffs' + 'et,fMyZ\x20);' + '\x0d\x0a\x09\x09\x09value' + '\x20=\x20value/4' + '.0;\x0d\x0a#endi' + 'f\x0d\x0a#ifdef\x20' + 'SHADOWMAP_' + 'PCF2\x09\x09\x0d\x0a\x09\x09' + '\x09value\x20=\x20t' + 'ex2DPCF(\x20s' + 'hadowMap1,' + 'vText.xy,s' + 'hadowPCFOf' + 'fset,fMyZ)' + ';\x0d\x0a#endif\x0d' + '\x0a#ifdef\x20SH' + 'ADOWMAP_PC' + 'F1\x0d\x0a\x09\x09\x09val' + 'ue\x20=\x20tex2D' + 'PCF(\x20shado' + 'wMap1,vTex' + 't.xy,shado' + 'wPCFOffset' + ',fMyZ);\x0d\x0a#' + 'endif\x0d\x0a#if' + 'def\x20SHADOW' + 'MAP_PCF_NO' + '\x09\x09\x0d\x0a\x09\x09\x09vec' + '4\x20color\x20=\x20' + 'texture2D(' + '\x20shadowMap' + '1,vText.xy' + '\x20);\x0d\x0a\x09\x09\x09zd' + 'epth\x20=\x20unp' + 'ackDepth(c' + 'olor);\x0d\x0a\x09\x09' + '\x09value\x20=\x20f' + 'loat(fMyZ\x20') + ('<\x20zdepth);' + '\x0d\x0a#endif\x0d\x0a' + '\x09\x09}\x0d\x0a\x09}\x0d\x0a\x09' + 'return\x20val' + 'ue;\x0d\x0a}'), _0x14e65d = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0apreci' + 'sion\x20highp' + '\x20float;\x0d\x0a#' + 'else\x0d\x0aprec' + 'ision\x20medi' + 'ump\x20float;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0avarying\x20' + 'vec3\x20v_Tex' + 'coord;\x0d\x0a\x0d\x0a' + 'uniform\x20sa' + 'mplerCube\x20' + 'u_CubeText' + 'ure;\x0d\x0aunif' + 'orm\x20float\x20' + 'u_Exposure' + ';\x0d\x0auniform' + '\x20vec4\x20u_Ti' + 'ntColor;\x0d\x0a' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x09\x0d' + '\x0a\x09vec3\x20col' + 'or=texture' + 'Cube(u_Cub' + 'eTexture,\x20' + 'v_Texcoord' + ').rgb*u_Ti' + 'ntColor.rg' + 'b*u_Exposu' + 're*2.0;\x0d\x0a\x09' + 'gl_FragCol' + 'or=vec4(co' + 'lor,1.0);\x0d' + '\x0a}\x0d\x0a\x0d\x0a', _0x9d714f = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0auni' + 'form\x20mat4\x20' + 'u_ViewProj' + 'ection;\x0d\x0au' + 'niform\x20flo' + 'at\x20u_Rotat' + 'ion;\x0d\x0avary' + 'ing\x20vec3\x20v' + '_Texcoord;' + '\x0d\x0a\x0d\x0a\x0d\x0avec4' + '\x20rotateAro' + 'undYInDegr' + 'ees\x20(vec4\x20' + 'vertex,\x20fl' + 'oat\x20degree' + 's)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20angle\x20' + '=\x20degrees\x20' + '*\x203.141593' + '\x20/\x20180.0;\x0d' + '\x0a\x09float\x20si' + 'na=sin(ang' + 'le);\x0d\x0a\x09flo' + 'at\x20cosa=co' + 's(angle);\x0d' + '\x0a\x09mat2\x20m\x20=' + '\x20mat2(cosa' + ',\x20-sina,\x20s' + 'ina,\x20cosa)' + ';\x0d\x0a\x09return' + '\x20vec4(m*ve' + 'rtex.xz,\x20v' + 'ertex.yw).' + 'xzyw;\x0d\x0a}\x0d\x0a' + '\x09\x09\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20posi' + 'tion=rotat' + 'eAroundYIn' + 'Degrees(a_' + 'Position,u' + '_Rotation)' + ';\x0d\x0a\x09gl_Pos' + 'ition\x20=\x20u_' + 'ViewProjec' + 'tion*posit' + 'ion;\x0d\x0a\x09v_T' + 'excoord=ve' + 'c3(-a_Posi' + 'tion.x,a_P' + 'osition.yz' + ');//转换坐标系\x0d' + '\x0a\x09gl_Posit' + 'ion=remapG' + 'LPositionZ' + '(gl_Positi' + 'on);\x0d\x0a}\x0d\x0a', _0x9c6f64 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0aconst\x20f' + 'loat\x20MIE_G' + '\x20=\x20-0.990;' + '\x0d\x0aconst\x20fl' + 'oat\x20MIE_G2' + '\x20=\x200.9801;' + '\x0d\x0aconst\x20fl' + 'oat\x20SKY_GR' + 'OUND_THRES' + 'HOLD\x20=\x200.0' + '2;\x0d\x0a\x0d\x0aunif' + 'orm\x20float\x20' + 'u_SunSize;' + '\x0d\x0auniform\x20' + 'float\x20u_Su' + 'nSizeConve' + 'rgence;\x0d\x0au' + 'niform\x20Dir' + 'ectionLigh' + 't\x20u_SunLig' + 'ht;\x0d\x0a\x0d\x0a\x0d\x0av' + 'arying\x20vec' + '3\x20v_Ground' + 'Color;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_SkyColo' + 'r;\x0d\x0a\x0d\x0a\x0d\x0a#i' + 'fdef\x20SUN_H' + 'IGH_QUALIT' + 'Y\x0d\x0a\x09varyin' + 'g\x20vec3\x20v_V' + 'ertex;\x0d\x0a#e' + 'lif\x20define' + 'd(SUN_SIMP' + 'LE)\x0d\x0a\x09vary' + 'ing\x20vec3\x20v' + '_RayDir;\x0d\x0a' + '#else\x0d\x0a\x09va' + 'rying\x20floa' + 't\x20v_SkyGro' + 'undFactor;' + '\x0d\x0a#endif\x0d\x0a' + '\x0d\x0a#if\x20defi' + 'ned(SUN_HI' + 'GH_QUALITY' + ')||defined' + '(SUN_SIMPL' + 'E)\x0d\x0a\x09varyi' + 'ng\x20vec3\x20v_' + 'SunColor;\x0d' + '\x0a#endif\x0d\x0a\x0d' + '\x0a//\x20Calcul' + 'ates\x20the\x20M' + 'ie\x20phase\x20f' + 'unction\x0d\x0af' + 'loat\x20getMi' + 'ePhase(flo' + 'at\x20eyeCos,' + '\x20float\x20eye' + 'Cos2)\x20{\x0d\x0a\x09' + 'float\x20temp' + '\x20=\x201.0\x20+\x20M' + 'IE_G2\x20-\x202.' + '0\x20*\x20MIE_G\x20' + '*\x20eyeCos;\x0d' + '\x0a\x09temp\x20=\x20p' + 'ow(temp,\x20p' + 'ow(u_SunSi' + 'ze,0.65)\x20*' + '\x2010.0);\x0d\x0a\x09' + 'temp\x20=\x20max' + '(temp,1.0e' + '-4);\x20//\x20pr' + 'event\x20divi' + 'sion\x20by\x20ze' + 'ro,\x20esp.\x20i' + 'n\x20half\x20pre' + 'cision\x0d\x0a\x09t' + 'emp\x20=\x201.5\x20' + '*\x20((1.0\x20-\x20' + 'MIE_G2)\x20/\x20' + '(2.0\x20+\x20MIE' + '_G2))\x20*\x20(1' + '.0\x20+\x20eyeCo' + 's2)\x20/\x20temp' + ';\x0d\x0a\x09return' + '\x20temp;\x0d\x0a}\x0d' + ('\x0a\x0d\x0a//\x20Calc' + 'ulates\x20the' + '\x20sun\x20shape' + '\x0d\x0afloat\x20ca' + 'lcSunAtten' + 'uation(vec' + '3\x20lightPos' + ',\x20vec3\x20ray' + ')\x20{\x0d\x0a\x09#ifd' + 'ef\x20SUN_HIG' + 'H_QUALITY\x0d' + '\x0a\x09\x09float\x20f' + 'ocusedEyeC' + 'os\x20=\x20pow(c' + 'lamp(dot(l' + 'ightPos,\x20r' + 'ay),0.0,1.' + '0),\x20u_SunS' + 'izeConverg' + 'ence);\x0d\x0a\x09\x09' + 'return\x20get' + 'MiePhase(-' + 'focusedEye' + 'Cos,\x20focus' + 'edEyeCos\x20*' + '\x20focusedEy' + 'eCos);\x0d\x0a\x09#' + 'else\x20//SUN' + '_SIMPLE\x0d\x0a\x09' + '\x09vec3\x20delt' + 'a\x20=\x20lightP' + 'os\x20-\x20ray;\x0d' + '\x0a\x09\x09float\x20d' + 'ist\x20=\x20leng' + 'th(delta);' + '\x0d\x0a\x09\x09float\x20' + 'spot\x20=\x201.0' + '\x20-\x20smooths' + 'tep(0.0,\x20u' + '_SunSize,\x20' + 'dist);\x0d\x0a\x09\x09' + 'return\x20spo' + 't\x20*\x20spot;\x0d' + '\x0a\x09#endif\x0d\x0a' + '}\x0d\x0a\x0d\x0avoid\x20' + 'main()\x20{\x0d\x0a' + '\x09//\x20if\x20y\x20>' + '\x201\x20[eyeRay' + '.y\x20<\x20-SKY_' + 'GROUND_THR' + 'ESHOLD]\x20-\x20' + 'ground\x0d\x0a\x09/' + '/\x20if\x20y\x20>=\x20' + '0\x20and\x20<\x201\x20' + '[eyeRay.y\x20' + '<=\x200\x20and\x20>' + '\x20-SKY_GROU' + 'ND_THRESHO' + 'LD]\x20-\x20hori' + 'zon\x0d\x0a\x09//\x20i' + 'f\x20y\x20<\x200\x20[e' + 'yeRay.y\x20>\x20' + '0]\x20-\x20sky\x0d\x0a' + '\x09vec3\x20col\x20' + '=\x20vec3(0.0' + ',\x200.0,\x200.0' + ');\x0d\x0a\x0d\x0a\x09#if' + 'def\x20SUN_HI' + 'GH_QUALITY' + '\x0d\x0a\x09\x09vec3\x20r' + 'ay\x20=\x20norma' + 'lize(v_Ver' + 'tex);\x0d\x0a\x09\x09f' + 'loat\x20y\x20=\x20r' + 'ay.y\x20/\x20SKY' + '_GROUND_TH' + 'RESHOLD;\x0d\x0a' + '\x09#elif\x20def' + 'ined(SUN_S' + 'IMPLE)\x20\x0d\x0a\x09' + '\x09vec3\x20ray\x20' + '=\x20v_RayDir' + ';\x0d\x0a\x09\x09float' + '\x20y\x20=\x20ray.y' + '\x20/\x20SKY_GRO' + 'UND_THRESH' + 'OLD;\x09\x0d\x0a\x09#e' + 'lse\x0d\x0a\x09\x09flo' + 'at\x20y\x20=\x20v_S' + 'kyGroundFa' + 'ctor;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09/' + '/\x20if\x20we\x20di' + 'd\x20precalcu' + 'late\x20color' + '\x20in\x20vprog:' + '\x20just\x20do\x20l' + 'erp\x20betwee' + 'n\x20them\x0d\x0a\x09c' + 'ol\x20=\x20mix(v') + ('_SkyColor,' + '\x20v_GroundC' + 'olor,\x20clam' + 'p(y,0.0,1.' + '0));\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(SUN_HIGH_' + 'QUALITY)||' + 'defined(SU' + 'N_SIMPLE)\x0d' + '\x0a\x09\x09if\x20(y\x20<' + '\x200.0)\x0d\x0a\x09\x09\x09' + 'col\x20+=\x20v_S' + 'unColor\x20*\x20' + 'calcSunAtt' + 'enuation(-' + 'u_SunLight' + '.direction' + ',\x20-ray);\x0d\x0a' + '\x09#endif\x0d\x0a\x0d' + '\x0a\x09col\x20=\x20sq' + 'rt(col);//' + 'linear\x20spa' + 'ce\x20convert' + '\x20to\x20gamma\x20' + 'space\x0d\x0a\x09gl' + '_FragColor' + '=vec4(col,' + '1.0);\x0d\x0a}\x0d\x0a' + '\x0d\x0a'), _0xaf2f33 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#inclu' + 'de\x20\x22Lighti' + 'ng.glsl\x22;\x0d' + '\x0a\x0d\x0a#define' + '\x20OUTER_RAD' + 'IUS\x201.025\x0d' + '\x0a#define\x20R' + 'AYLEIGH\x20(m' + 'ix(0.0,\x200.' + '0025,\x20pow(' + 'u_Atmosphe' + 'reThicknes' + 's,2.5)))//' + '\x20Rayleigh\x20' + 'constant\x20R' + 'ayleigh为夜空' + '光和极光亮度单位\x0d\x0a' + '#define\x20MI' + 'E\x200.0010\x20\x20' + '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + '\x20//\x20Mie\x20co' + 'nstant\x20米氏散' + '射\x0d\x0a#define' + '\x20SUN_BRIGH' + 'TNESS\x2020.0' + '\x20\x20\x20\x20//\x20Sun' + '\x20brightnes' + 's\x0d\x0a#define' + '\x20MAX_SCATT' + 'ER\x2050.0\x20//' + '\x20Maximum\x20s' + 'cattering\x20' + 'value,\x20to\x20' + 'prevent\x20ma' + 'th\x20overflo' + 'ws\x20on\x20Adre' + 'nos\x0d\x0a\x0d\x0acon' + 'st\x20float\x20S' + 'KY_GROUND_' + 'THRESHOLD\x20' + '=\x200.02;\x0d\x0ac' + 'onst\x20float' + '\x20outerRadi' + 'us\x20=\x20OUTER' + '_RADIUS;\x0d\x0a' + 'const\x20floa' + 't\x20outerRad' + 'ius2\x20=\x20OUT' + 'ER_RADIUS*' + 'OUTER_RADI' + 'US;\x0d\x0aconst' + '\x20float\x20inn' + 'erRadius\x20=' + '\x201.0;\x0d\x0acon' + 'st\x20float\x20i' + 'nnerRadius' + '2\x20=\x201.0;\x0d\x0a' + 'const\x20floa' + 't\x20cameraHe' + 'ight\x20=\x200.0' + '001;\x0d\x0a\x0d\x0aco' + 'nst\x20float\x20' + 'HDSundiskI' + 'ntensityFa' + 'ctor\x20=\x2015.' + '0;\x0d\x0aconst\x20' + 'float\x20simp' + 'leSundiskI' + 'ntensityFa' + 'ctor\x20=\x2027.' + '0;\x0d\x0a\x0d\x0acons' + 't\x20float\x20su' + 'nScale\x20=\x204' + '00.0\x20*\x20SUN' + '_BRIGHTNES' + 'S;\x0d\x0aconst\x20' + 'float\x20kmES' + 'un\x20=\x20MIE\x20*' + '\x20SUN_BRIGH' + 'TNESS;\x0d\x0aco' + 'nst\x20float\x20' + 'km4PI\x20=\x20MI' + 'E\x20*\x204.0\x20*\x20' + '3.14159265' + ';\x0d\x0aconst\x20f' + 'loat\x20scale' + '\x20=\x201.0\x20/\x20(' + 'OUTER_RADI' + 'US\x20-\x201.0);' + '\x0d\x0aconst\x20fl' + ('oat\x20scaleD' + 'epth\x20=\x200.2' + '5;\x0d\x0aconst\x20' + 'float\x20scal' + 'eOverScale' + 'Depth\x20=\x20(1' + '.0\x20/\x20(OUTE' + 'R_RADIUS\x20-' + '\x201.0))\x20/\x200' + '.25;\x0d\x0acons' + 't\x20float\x20sa' + 'mples\x20=\x202.' + '0;\x20//\x20THIS' + '\x20IS\x20UNROLL' + 'ED\x20MANUALL' + 'Y,\x20DON\x27T\x20T' + 'OUCH\x0d\x0a\x0d\x0a//' + '\x20RGB\x20wavel' + 'engths\x20\x20\x20\x20' + '\x20\x20\x20\x20.35\x20(.' + '62=158),\x20.' + '43\x20(.68=17' + '4),\x20.525\x20(' + '.75=190)\x0d\x0a' + 'const\x20vec3' + '\x20c_Default' + 'Scattering' + 'Wavelength' + '\x20=\x20vec3(0.' + '65,\x200.57,\x20' + '0.475);//默' + '认散射波长\x0d\x0acon' + 'st\x20vec3\x20c_' + 'VariableRa' + 'ngeForScat' + 'teringWave' + 'length\x20=\x20v' + 'ec3(0.15,\x20' + '0.15,\x200.15' + ');//散射播放的可' + '变范围\x0d\x0a\x0d\x0aatt' + 'ribute\x20vec' + '4\x20a_Positi' + 'on;\x0d\x0a\x0d\x0auni' + 'form\x20mat4\x20' + 'u_ViewProj' + 'ection;\x0d\x0au' + 'niform\x20vec' + '3\x20u_SkyTin' + 't;\x0d\x0aunifor' + 'm\x20vec3\x20u_G' + 'roundTint;' + '\x0d\x0auniform\x20' + 'float\x20u_Ex' + 'posure;\x0d\x0au' + 'niform\x20flo' + 'at\x20u_Atmos' + 'phereThick' + 'ness;\x0d\x0auni' + 'form\x20Direc' + 'tionLight\x20' + 'u_SunLight' + ';\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'GroundColo' + 'r;\x0d\x0avaryin' + 'g\x20vec3\x20v_S' + 'kyColor;\x0d\x0a' + '\x0d\x0a#ifdef\x20S' + 'UN_HIGH_QU' + 'ALITY\x0d\x0a\x09va' + 'rying\x20vec3' + '\x20v_Vertex;' + '\x0d\x0a#elif\x20de' + 'fined(SUN_' + 'SIMPLE)\x0d\x0a\x09' + 'varying\x20ve' + 'c3\x20v_RayDi' + 'r;\x0d\x0a#else\x0d' + '\x0a\x09varying\x20' + 'float\x20v_Sk' + 'yGroundFac' + 'tor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#if\x20' + 'defined(SU' + 'N_HIGH_QUA' + 'LITY)||def' + 'ined(SUN_S' + 'IMPLE)\x0d\x0a\x09v' + 'arying\x20vec' + '3\x20v_SunCol' + 'or;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a//\x20Ca' + 'lculates\x20t' + 'he\x20Rayleig' + 'h\x20phase\x20fu' + 'nction\x0d\x0afl' + 'oat\x20getRay' + 'leighPhase' + '(vec3\x20ligh') + ('t,\x20vec3\x20ra' + 'y)\x20\x0d\x0a{\x0d\x0a\x09f' + 'loat\x20eyeCo' + 's\x20=\x20dot(li' + 'ght,\x20ray);' + '\x0d\x0a\x09return\x20' + '0.75\x20+\x200.7' + '5*eyeCos*e' + 'yeCos;\x0d\x0a}\x0d' + '\x0a\x0d\x0afloat\x20s' + 'caleAngle(' + 'float\x20inCo' + 's)\x0d\x0a{\x0d\x0a\x09fl' + 'oat\x20x\x20=\x201.' + '0\x20-\x20inCos;' + '\x0d\x0a\x09return\x20' + '0.25\x20*\x20exp' + '(-0.00287\x20' + '+\x20x*(0.459' + '\x20+\x20x*(3.83' + '\x20+\x20x*(-6.8' + '0\x20+\x20x*5.25' + '))));\x0d\x0a}\x0d\x0a' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain\x20()\x20{\x0d\x0a' + '\x09gl_Positi' + 'on\x20=\x20u_Vie' + 'wProjectio' + 'n*a_Positi' + 'on;\x0d\x0a\x0d\x0a\x09ve' + 'c3\x20skyTint' + 'InGammaSpa' + 'ce\x20=\x20u_Sky' + 'Tint;//支持非' + 'GAMMA空间后要调' + '整\x0d\x0a\x09vec3\x20s' + 'catteringW' + 'avelength\x20' + '=\x20mix(c_De' + 'faultScatt' + 'eringWavel' + 'ength-c_Va' + 'riableRang' + 'eForScatte' + 'ringWavele' + 'ngth,c_Def' + 'aultScatte' + 'ringWavele' + 'ngth+c_Var' + 'iableRange' + 'ForScatter' + 'ingWavelen' + 'gth,vec3(1' + '.0)\x20-\x20skyT' + 'intInGamma' + 'Space);\x20//' + '\x20using\x20Tin' + 't\x20in\x20sRGB+' + '\x20gamma\x20all' + 'ows\x20for\x20mo' + 're\x20visuall' + 'y\x20linear\x20i' + 'nterpolati' + 'on\x20and\x20to\x20' + 'keep\x20(0.5)' + '\x20at\x20(128,\x20' + 'gray\x20in\x20sR' + 'GB)\x20point\x0d' + '\x0a\x09vec3\x20inv' + 'Wavelength' + '\x20=\x201.0\x20/\x20p' + 'ow(scatter' + 'ingWavelen' + 'gth,\x20vec3(' + '4.0));\x0d\x0a\x0d\x0a' + '\x09float\x20krE' + 'Sun\x20=\x20RAYL' + 'EIGH\x20*\x20SUN' + '_BRIGHTNES' + 'S;\x0d\x0a\x09float' + '\x20kr4PI\x20=\x20R' + 'AYLEIGH\x20*\x20' + '4.0\x20*\x203.14' + '159265;\x0d\x0a\x0d' + '\x0a\x09vec3\x20cam' + 'eraPos\x20=\x20v' + 'ec3(0.0,in' + 'nerRadius\x20' + '+\x20cameraHe' + 'ight,0.0);' + '\x20//\x20The\x20ca' + 'mera\x27s\x20cur' + 'rent\x20posit' + 'ion\x0d\x0a\x0d\x0a\x09//' + '\x20Get\x20the\x20r' + 'ay\x20from\x20th' + 'e\x20camera\x20t' + 'o\x20the\x20vert' + 'ex\x20and\x20its' + '\x20length\x20(w') + ('hich\x20is\x20th' + 'e\x20far\x20poin' + 't\x20of\x20the\x20r' + 'ay\x20passing' + '\x20through\x20t' + 'he\x20atmosph' + 'ere)\x0d\x0a\x09vec' + '3\x20eyeRay\x20=' + '\x20normalize' + '(a_Positio' + 'n.xyz);\x0d\x0a\x0d' + '\x0a\x09float\x20fa' + 'r\x20=\x200.0;\x0d\x0a' + '\x09vec3\x20cIn,' + '\x20cOut;\x0d\x0a\x09i' + 'f\x20(eyeRay.' + 'y\x20>=\x200.0)\x20' + '{//\x20Sky\x0d\x0a\x09' + '\x09//\x20Calcul' + 'ate\x20the\x20le' + 'ngth\x20of\x20th' + 'e\x20\x22atmosph' + 'ere\x22\x0d\x0a\x09\x09fa' + 'r\x20=\x20sqrt(o' + 'uterRadius' + '2\x20+\x20innerR' + 'adius2\x20*\x20e' + 'yeRay.y\x20*\x20' + 'eyeRay.y\x20-' + '\x20innerRadi' + 'us2)\x20-\x20inn' + 'erRadius\x20*' + '\x20eyeRay.y;' + '\x0d\x0a\x0d\x0a\x09\x09//\x20C' + 'alculate\x20t' + 'he\x20ray\x27s\x20s' + 'tarting\x20po' + 'sition,\x20th' + 'en\x20calcula' + 'te\x20its\x20sca' + 'ttering\x20of' + 'fset\x0d\x0a\x09\x09fl' + 'oat\x20height' + '\x20=\x20innerRa' + 'dius\x20+\x20cam' + 'eraHeight;' + '\x0d\x0a\x09\x09float\x20' + 'depth\x20=\x20ex' + 'p(scaleOve' + 'rScaleDept' + 'h\x20*\x20-camer' + 'aHeight);\x0d' + '\x0a\x09\x09float\x20s' + 'tartAngle\x20' + '=\x20dot(eyeR' + 'ay,\x20camera' + 'Pos)\x20/\x20hei' + 'ght;\x0d\x0a\x09\x09fl' + 'oat\x20startO' + 'ffset\x20=\x20de' + 'pth*scaleA' + 'ngle(start' + 'Angle);\x0d\x0a\x0d' + '\x0a\x09\x09//\x20Init' + 'ialize\x20the' + '\x20scatterin' + 'g\x20loop\x20var' + 'iables\x0d\x0a\x09\x09' + 'float\x20samp' + 'leLength\x20=' + '\x20far\x20/\x20sam' + 'ples;\x0d\x0a\x09\x09f' + 'loat\x20scale' + 'dLength\x20=\x20' + 'sampleLeng' + 'th\x20*\x20scale' + ';\x0d\x0a\x09\x09vec3\x20' + 'sampleRay\x20' + '=\x20eyeRay\x20*' + '\x20sampleLen' + 'gth;\x0d\x0a\x09\x09ve' + 'c3\x20sampleP' + 'oint\x20=\x20cam' + 'eraPos\x20+\x20s' + 'ampleRay\x20*' + '\x200.5;\x0d\x0a\x0d\x0a\x09' + '\x09vec3\x20fron' + 'tColor\x20=\x20v' + 'ec3(0.0);\x0d' + '\x0a\x09\x09//unrol' + 'ling\x20this\x20' + 'manually\x20t' + 'o\x20avoid\x20so' + 'me\x20platfor' + 'm\x20for\x20loop' + '\x20slow\x0d\x0a\x09\x09{' + '\x0d\x0a\x09\x09\x09float' + '\x20height\x20=\x20' + 'length(sam' + 'plePoint);') + ('\x0d\x0a\x09\x09\x09float' + '\x20depth\x20=\x20e' + 'xp(scaleOv' + 'erScaleDep' + 'th\x20*\x20(inne' + 'rRadius\x20-\x20' + 'height));\x0d' + '\x0a\x09\x09\x09float\x20' + 'lightAngle' + '\x20=\x20dot(-u_' + 'SunLight.d' + 'irection,\x20' + 'samplePoin' + 't)\x20/\x20heigh' + 't;\x0d\x0a\x09\x09\x09flo' + 'at\x20cameraA' + 'ngle\x20=\x20dot' + '(eyeRay,\x20s' + 'amplePoint' + ')\x20/\x20height' + ';\x0d\x0a\x09\x09\x09floa' + 't\x20scatter\x20' + '=\x20(startOf' + 'fset\x20+\x20dep' + 'th*(scaleA' + 'ngle(light' + 'Angle)\x20-\x20s' + 'caleAngle(' + 'cameraAngl' + 'e)));\x0d\x0a\x09\x09\x09' + 'vec3\x20atten' + 'uate\x20=\x20exp' + '(-clamp(sc' + 'atter,\x200.0' + ',\x20MAX_SCAT' + 'TER)\x20*\x20(in' + 'vWavelengt' + 'h\x20*\x20kr4PI\x20' + '+\x20km4PI));' + '\x0d\x0a\x0d\x0a\x09\x09\x09fro' + 'ntColor\x20+=' + '\x20attenuate' + '\x20*\x20(depth\x20' + '*\x20scaledLe' + 'ngth);\x0d\x0a\x09\x09' + '\x09samplePoi' + 'nt\x20+=\x20samp' + 'leRay;\x0d\x0a\x09\x09' + '}\x0d\x0a\x09\x09{\x0d\x0a\x09\x09' + '\x09float\x20hei' + 'ght\x20=\x20leng' + 'th(sampleP' + 'oint);\x0d\x0a\x09\x09' + '\x09float\x20dep' + 'th\x20=\x20exp(s' + 'caleOverSc' + 'aleDepth\x20*' + '\x20(innerRad' + 'ius\x20-\x20heig' + 'ht));\x0d\x0a\x09\x09\x09' + 'float\x20ligh' + 'tAngle\x20=\x20d' + 'ot(-u_SunL' + 'ight.direc' + 'tion,\x20samp' + 'lePoint)\x20/' + '\x20height;\x0d\x0a' + '\x09\x09\x09float\x20c' + 'ameraAngle' + '\x20=\x20dot(eye' + 'Ray,\x20sampl' + 'ePoint)\x20/\x20' + 'height;\x0d\x0a\x09' + '\x09\x09float\x20sc' + 'atter\x20=\x20(s' + 'tartOffset' + '\x20+\x20depth*(' + 'scaleAngle' + '(lightAngl' + 'e)\x20-\x20scale' + 'Angle(came' + 'raAngle)))' + ';\x0d\x0a\x09\x09\x09vec3' + '\x20attenuate' + '\x20=\x20exp(-cl' + 'amp(scatte' + 'r,\x200.0,\x20MA' + 'X_SCATTER)' + '\x20*\x20(invWav' + 'elength\x20*\x20' + 'kr4PI\x20+\x20km' + '4PI));\x0d\x0a\x0d\x0a' + '\x09\x09\x09frontCo' + 'lor\x20+=\x20att' + 'enuate\x20*\x20(' + 'depth\x20*\x20sc' + 'aledLength' + ');\x0d\x0a\x09\x09\x09sam' + 'plePoint\x20+' + '=\x20sampleRa') + ('y;\x0d\x0a\x09\x09}\x0d\x0a\x0d' + '\x0a\x09\x09//\x20Fina' + 'lly,\x20scale' + '\x20the\x20Mie\x20a' + 'nd\x20Rayleig' + 'h\x20colors\x20a' + 'nd\x20set\x20up\x20' + 'the\x20varyin' + 'g\x20variable' + 's\x20for\x20the\x20' + 'pixel\x20shad' + 'er\x0d\x0a\x09\x09cIn\x20' + '=\x20frontCol' + 'or\x20*\x20(invW' + 'avelength\x20' + '*\x20krESun);' + '\x0d\x0a\x09\x09cOut\x20=' + '\x20frontColo' + 'r\x20*\x20kmESun' + ';\x0d\x0a\x09}\x20else' + '\x20{//\x20Groun' + 'd\x0d\x0a\x09\x09far\x20=' + '\x20(-cameraH' + 'eight)\x20/\x20(' + 'min(-0.001' + ',\x20eyeRay.y' + '));\x0d\x0a\x09\x09vec' + '3\x20pos\x20=\x20ca' + 'meraPos\x20+\x20' + 'far\x20*\x20eyeR' + 'ay;\x0d\x0a\x0d\x0a\x09\x09/' + '/\x20Calculat' + 'e\x20the\x20ray\x27' + 's\x20starting' + '\x20position,' + '\x20then\x20calc' + 'ulate\x20its\x20' + 'scattering' + '\x20offset\x0d\x0a\x09' + '\x09float\x20dep' + 'th\x20=\x20exp((' + '-cameraHei' + 'ght)\x20*\x20(1.' + '0/scaleDep' + 'th));\x0d\x0a\x09\x09f' + 'loat\x20camer' + 'aAngle\x20=\x20d' + 'ot(-eyeRay' + ',\x20pos);\x0d\x0a\x09' + '\x09float\x20lig' + 'htAngle\x20=\x20' + 'dot(-u_Sun' + 'Light.dire' + 'ction,\x20pos' + ');\x0d\x0a\x09\x09floa' + 't\x20cameraSc' + 'ale\x20=\x20scal' + 'eAngle(cam' + 'eraAngle);' + '\x0d\x0a\x09\x09float\x20' + 'lightScale' + '\x20=\x20scaleAn' + 'gle(lightA' + 'ngle);\x0d\x0a\x09\x09' + 'float\x20came' + 'raOffset\x20=' + '\x20depth*cam' + 'eraScale;\x0d' + '\x0a\x09\x09float\x20t' + 'emp\x20=\x20ligh' + 'tScale\x20+\x20c' + 'ameraScale' + ';\x0d\x0a\x0d\x0a\x09\x09//\x20' + 'Initialize' + '\x20the\x20scatt' + 'ering\x20loop' + '\x20variables' + '\x0d\x0a\x09\x09float\x20' + 'sampleLeng' + 'th\x20=\x20far\x20/' + '\x20samples;\x0d' + '\x0a\x09\x09float\x20s' + 'caledLengt' + 'h\x20=\x20sample' + 'Length\x20*\x20s' + 'cale;\x0d\x0a\x09\x09v' + 'ec3\x20sample' + 'Ray\x20=\x20eyeR' + 'ay\x20*\x20sampl' + 'eLength;\x0d\x0a' + '\x09\x09vec3\x20sam' + 'plePoint\x20=' + '\x20cameraPos' + '\x20+\x20sampleR' + 'ay\x20*\x200.5;\x0d' + '\x0a\x0d\x0a\x09\x09//\x20No' + 'w\x20loop\x20thr' + 'ough\x20the\x20s' + 'ample\x20rays' + '\x0d\x0a\x09\x09vec3\x20f') + ('rontColor\x20' + '=\x20vec3(0.0' + ',\x200.0,\x200.0' + ');\x0d\x0a\x09\x09vec3' + '\x20attenuate' + ';\x0d\x0a\x0d\x0a\x09\x09//\x20' + 'Loop\x20remov' + 'ed\x20because' + '\x20we\x20kept\x20h' + 'itting\x20SM2' + '.0\x20temp\x20va' + 'riable\x20lim' + 'its.\x20Doesn' + '\x27t\x20affect\x20' + 'the\x20image\x20' + 'too\x20much.\x0d' + '\x0a\x09\x09{\x0d\x0a\x09\x09\x09f' + 'loat\x20heigh' + 't\x20=\x20length' + '(samplePoi' + 'nt);\x0d\x0a\x09\x09\x09f' + 'loat\x20depth' + '\x20=\x20exp(sca' + 'leOverScal' + 'eDepth\x20*\x20(' + 'innerRadiu' + 's\x20-\x20height' + '));\x0d\x0a\x09\x09\x09fl' + 'oat\x20scatte' + 'r\x20=\x20depth*' + 'temp\x20-\x20cam' + 'eraOffset;' + '\x0d\x0a\x09\x09\x09atten' + 'uate\x20=\x20exp' + '(-clamp(sc' + 'atter,\x200.0' + ',\x20MAX_SCAT' + 'TER)\x20*\x20(in' + 'vWavelengt' + 'h\x20*\x20kr4PI\x20' + '+\x20km4PI));' + '\x0d\x0a\x09\x09\x09front' + 'Color\x20+=\x20a' + 'ttenuate\x20*' + '\x20(depth\x20*\x20' + 'scaledLeng' + 'th);\x0d\x0a\x09\x09\x09s' + 'amplePoint' + '\x20+=\x20sample' + 'Ray;\x0d\x0a\x09\x09}\x0d' + '\x0a\x0d\x0a\x09\x09cIn\x20=' + '\x20frontColo' + 'r\x20*\x20(invWa' + 'velength\x20*' + '\x20krESun\x20+\x20' + 'kmESun);\x0d\x0a' + '\x09\x09cOut\x20=\x20c' + 'lamp(atten' + 'uate,\x200.0,' + '\x201.0);\x0d\x0a\x09}' + '\x0d\x0a\x0d\x0a\x09#ifde' + 'f\x20SUN_HIGH' + '_QUALITY\x0d\x0a' + '\x09\x09v_Vertex' + '\x20=\x20-a_Posi' + 'tion.xyz;\x0d' + '\x0a\x09#elif\x20de' + 'fined(SUN_' + 'SIMPLE)\x20\x0d\x0a' + '\x09\x09v_RayDir' + '\x20=\x20-eyeRay' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09v_SkyGr' + 'oundFactor' + '\x20=\x20-eyeRay' + '.y\x20/\x20SKY_G' + 'ROUND_THRE' + 'SHOLD;\x0d\x0a\x09#' + 'endif\x0d\x0a\x0d\x0a\x09' + '//\x20if\x20we\x20w' + 'ant\x20to\x20cal' + 'culate\x20col' + 'or\x20in\x20vpro' + 'g:\x0d\x0a\x09//\x20in' + '\x20case\x20of\x20l' + 'inear:\x20mul' + 'tiply\x20by\x20_' + 'Exposure\x20i' + 'n\x20here\x20(ev' + 'en\x20in\x20case' + '\x20of\x20lerp\x20i' + 't\x20will\x20be\x20' + 'common\x20mul' + 'tiplier,\x20s' + 'o\x20we\x20can\x20s' + 'kip\x20mul\x20in' + '\x20fshader)\x0d' + '\x0a\x09v_Ground' + 'Color\x20=\x20u_' + 'Exposure\x20*') + ('\x20(cIn\x20+\x20u_' + 'GroundTint' + '*u_GroundT' + 'int\x20*\x20cOut' + ');//u_Grou' + 'ndColor*u_' + 'GroundColo' + 'r\x20is\x20gamma' + '\x20space\x20con' + 'vert\x20to\x20li' + 'near\x20space' + '\x0d\x0a\x09v_SkyCo' + 'lor\x20\x20\x20\x20=\x20u' + '_Exposure\x20' + '*\x20(cIn\x20*\x20g' + 'etRayleigh' + 'Phase(-u_S' + 'unLight.di' + 'rection,\x20-' + 'eyeRay));\x0d' + '\x0a\x0d\x0a\x09\x0d\x0a\x09//\x20' + 'The\x20sun\x20sh' + 'ould\x20have\x20' + 'a\x20stable\x20i' + 'ntensity\x20i' + 'n\x20its\x20cour' + 'se\x20in\x20the\x20' + 'sky.\x20Moreo' + 'ver\x20it\x20sho' + 'uld\x20match\x20' + 'the\x20highli' + 'ght\x20of\x20a\x20p' + 'urely\x20spec' + 'ular\x20mater' + 'ial.\x0d\x0a\x09//\x20' + 'This\x20match' + 'ing\x20was\x20do' + 'ne\x20using\x20t' + 'he\x20Unity3D' + '\x20standard\x20' + 'shader\x20BRD' + 'F1\x20on\x20the\x20' + '5/31/2017\x0d' + '\x0a\x09//\x20Final' + 'ly\x20we\x20want' + '\x20the\x20sun\x20t' + 'o\x20be\x20alway' + 's\x20bright\x20e' + 'ven\x20in\x20LDR' + '\x20thus\x20the\x20' + 'normalizat' + 'ion\x20of\x20the' + '\x20lightColo' + 'r\x20for\x20low\x20' + 'intensity.' + '\x0d\x0a\x09float\x20l' + 'ightColorI' + 'ntensity\x20=' + '\x20clamp(len' + 'gth(u_SunL' + 'ight.color' + '),\x200.25,\x201' + '.0);\x0d\x0a\x0d\x0a\x09#' + 'ifdef\x20SUN_' + 'HIGH_QUALI' + 'TY\x20\x0d\x0a\x09\x09v_S' + 'unColor\x20=\x20' + 'HDSundiskI' + 'ntensityFa' + 'ctor\x20*\x20cla' + 'mp(cOut,0.' + '0,1.0)\x20*\x20u' + '_SunLight.' + 'color\x20/\x20li' + 'ghtColorIn' + 'tensity;\x0d\x0a' + '\x09#elif\x20def' + 'ined(SUN_S' + 'IMPLE)\x20\x0d\x0a\x09' + '\x09v_SunColo' + 'r\x20=\x20simple' + 'SundiskInt' + 'ensityFact' + 'or\x20*\x20clamp' + '(cOut\x20*\x20su' + 'nScale,0.0' + ',1.0)\x20*\x20u_' + 'SunLight.c' + 'olor\x20/\x20lig' + 'htColorInt' + 'ensity;\x0d\x0a\x09' + '#endif\x0d\x0a\x09g' + 'l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}\x0d\x0a'), _0xe433c0 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0aunifor' + 'm\x20sampler2' + 'D\x20u_MainTe' + 'xture;\x0d\x0aun' + 'iform\x20vec4' + '\x20u_MainCol' + 'or;\x0d\x0a\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '0;\x0d\x0avaryin' + 'g\x20vec4\x20v_C' + 'olor;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20color\x20=\x202' + '.0\x20*\x20u_Mai' + 'nColor\x20*\x20v' + '_Color;\x0d\x0a\x09' + '#ifdef\x20MAI' + 'NTEXTURE\x0d\x0a' + '\x09\x09vec4\x20mai' + 'nTextureCo' + 'lor\x20=\x20text' + 'ure2D(u_Ma' + 'inTexture,' + '\x20v_Texcoor' + 'd0);\x0d\x0a\x09\x09co' + 'lor\x20*=\x20mai' + 'nTextureCo' + 'lor;\x0d\x0a\x09#en' + 'dif\x0d\x0a\x09gl_F' + 'ragColor\x20=' + '\x20color;\x0d\x0a}' + '\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20', _0x261fea = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec3\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Offset' + 'Vector;\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Colo' + 'r;\x0d\x0aattrib' + 'ute\x20float\x20' + 'a_Texcoord' + '0X;\x0d\x0aattri' + 'bute\x20float' + '\x20a_Texcoor' + 'd0Y;\x0d\x0aattr' + 'ibute\x20floa' + 't\x20a_BirthT' + 'ime;\x0d\x0a\x0d\x0aun' + 'iform\x20mat4' + '\x20u_View;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_Proje' + 'ction;\x0d\x0a\x0d\x0a' + 'uniform\x20ve' + 'c4\x20u_Tilin' + 'gOffset;\x0d\x0a' + '\x0d\x0auniform\x20' + 'float\x20u_Cu' + 'rTime;\x0d\x0aun' + 'iform\x20floa' + 't\x20u_LifeTi' + 'me;\x0d\x0aunifo' + 'rm\x20vec4\x20u_' + 'WidthCurve' + '[10];\x0d\x0auni' + 'form\x20int\x20u' + '_WidthCurv' + 'eKeyLength' + ';\x0d\x0a\x0d\x0avaryi' + 'ng\x20vec2\x20v_' + 'Texcoord0;' + '\x0d\x0avarying\x20' + 'vec4\x20v_Col' + 'or;\x0d\x0a\x0d\x0aflo' + 'at\x20hermite' + 'Interpolat' + 'e(float\x20t,' + '\x20float\x20out' + 'Tangent,\x20f' + 'loat\x20inTan' + 'gent,\x20floa' + 't\x20duration' + ',\x20float\x20va' + 'lue1,\x20floa' + 't\x20value2)\x0d' + '\x0a{\x0d\x0a\x09float' + '\x20t2\x20=\x20t\x20*\x20' + 't;\x0d\x0a\x09float' + '\x20t3\x20=\x20t2\x20*' + '\x20t;\x0d\x0a\x09floa' + 't\x20a\x20=\x202.0\x20' + '*\x20t3\x20-\x203.0' + '\x20*\x20t2\x20+\x201.' + '0;\x0d\x0a\x09float' + '\x20b\x20=\x20t3\x20-\x20' + '2.0\x20*\x20t2\x20+' + '\x20t;\x0d\x0a\x09floa' + 't\x20c\x20=\x20t3\x20-' + '\x20t2;\x0d\x0a\x09flo' + 'at\x20d\x20=\x20-2.' + '0\x20*\x20t3\x20+\x203' + '.0\x20*\x20t2;\x0d\x0a' + '\x09return\x20a\x20' + '*\x20value1\x20+' + '\x20b\x20*\x20outTa' + 'ngent\x20*\x20du' + 'ration\x20+\x20c' + '\x20*\x20inTange' + 'nt\x20*\x20durat' + 'ion\x20+\x20d\x20*\x20' + 'value2;\x0d\x0a}' + '\x0d\x0a\x0d\x0afloat\x20' + 'getCurWidt' + 'h(in\x20float' + '\x20normalize' + 'Time)\x0d\x0a{\x0d\x0a' + '\x09float\x20wid' + 'th;\x0d\x0a\x09if(n' + 'ormalizeTi' + 'me\x20==\x200.0)' + '{\x0d\x0a\x09\x09width' + '=u_WidthCu' + 'rve[0].w;\x0d' + '\x0a\x09}\x0d\x0a\x09else' + '\x20if(normal' + 'izeTime\x20>=' + '\x201.0){\x0d\x0a\x09\x09' + ('width=u_Wi' + 'dthCurve[u' + '_WidthCurv' + 'eKeyLength' + '\x20-\x201].w;\x0d\x0a' + '\x09}\x0d\x0a\x09else{' + '\x0d\x0a\x09\x09for(in' + 't\x20i\x20=\x200;\x20i' + '\x20<\x2010;\x20i\x20+' + '+\x20)\x0d\x0a\x09\x09{\x0d\x0a' + '\x09\x09\x09if(norm' + 'alizeTime\x20' + '==\x20u_Width' + 'Curve[i].x' + '){\x0d\x0a\x09\x09\x09\x09wi' + 'dth=u_Widt' + 'hCurve[i].' + 'w;\x0d\x0a\x09\x09\x09\x09br' + 'eak;\x0d\x0a\x09\x09\x09}' + '\x0d\x0a\x09\x09\x09\x0d\x0a\x09\x09\x09' + 'vec4\x20lastF' + 'rame\x20=\x20u_W' + 'idthCurve[' + 'i];\x0d\x0a\x09\x09\x09ve' + 'c4\x20nextFra' + 'me\x20=\x20u_Wid' + 'thCurve[i\x20' + '+\x201];\x0d\x0a\x09\x09\x09' + 'if(normali' + 'zeTime\x20>\x20l' + 'astFrame.x' + '\x20&&\x20normal' + 'izeTime\x20<\x20' + 'nextFrame.' + 'x)\x0d\x0a\x09\x09\x09{\x0d\x0a' + '\x09\x09\x09\x09float\x20' + 'duration\x20=' + '\x20nextFrame' + '.x\x20-\x20lastF' + 'rame.x;\x0d\x0a\x09' + '\x09\x09\x09float\x20t' + '\x20=\x20(normal' + 'izeTime\x20-\x20' + 'lastFrame.' + 'x)\x20/\x20durat' + 'ion;\x0d\x0a\x09\x09\x09\x09' + 'float\x20outT' + 'angent\x20=\x20l' + 'astFrame.z' + ';\x0d\x0a\x09\x09\x09\x09flo' + 'at\x20inTange' + 'nt\x20=\x20nextF' + 'rame.y;\x0d\x0a\x09' + '\x09\x09\x09float\x20v' + 'alue1\x20=\x20la' + 'stFrame.w;' + '\x0d\x0a\x09\x09\x09\x09floa' + 't\x20value2\x20=' + '\x20nextFrame' + '.w;\x0d\x0a\x09\x09\x09\x09w' + 'idth=hermi' + 'teInterpol' + 'ate(t,\x20out' + 'Tangent,\x20i' + 'nTangent,\x20' + 'duration,\x20' + 'value1,\x20va' + 'lue2);\x0d\x0a\x09\x09' + '\x09\x09break;\x0d\x0a' + '\x09\x09\x09}\x0d\x0a\x09\x09}\x0d' + '\x0a\x09}\x0d\x0a\x09retu' + 'rn\x20width;\x0d' + '\x0a}\x09\x0d\x0a\x0d\x0avoi' + 'd\x20main()\x0d\x0a' + '{\x0d\x0a\x09float\x20' + 'normalizeT' + 'ime\x20=\x20(u_C' + 'urTime\x20-\x20a' + '_BirthTime' + ')\x20/\x20u_Life' + 'Time;\x0d\x0a\x09\x0d\x0a' + '\x09#ifdef\x20TI' + 'LINGOFFSET' + '\x0d\x0a\x09\x09v_Texc' + 'oord0\x20=\x20ve' + 'c2(a_Texco' + 'ord0X,\x201.0' + '\x20-\x20a_Texco' + 'ord0Y)\x20*\x20u' + '_TilingOff' + 'set.xy\x20+\x20u' + '_TilingOff' + 'set.zw;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09v' + '_Texcoord0' + '\x20=\x20vec2(a_' + 'Texcoord0X' + ',\x20a_Texcoo' + 'rd0Y);\x0d\x0a\x09#' + 'endif\x0d\x0a\x09\x0d\x0a') + ('\x09v_Color\x20=' + '\x20a_Color;\x0d' + '\x0a\x09\x0d\x0a\x09gl_Po' + 'sition\x20=\x20u' + '_Projectio' + 'n\x20*\x20u_View' + '\x20*\x20vec4(a_' + 'Position\x20+' + '\x20a_OffsetV' + 'ector\x20*\x20ge' + 'tCurWidth(' + 'normalizeT' + 'ime),1.0);' + '\x0d\x0a\x09gl_Posi' + 'tion=remap' + 'GLPosition' + 'Z(gl_Posit' + 'ion);\x0d\x0a}\x0d\x0a'), _0x49b018 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#if\x20de' + 'fined(COLO' + 'R)&&define' + 'd(ENABLEVE' + 'RTEXCOLOR)' + '\x0d\x0a\x09varying' + '\x20vec4\x20v_Co' + 'lor;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20ALBEDOT' + 'EXTURE\x0d\x0a\x09u' + 'niform\x20sam' + 'pler2D\x20u_A' + 'lbedoTextu' + 're;\x0d\x0a\x09vary' + 'ing\x20vec2\x20v' + '_Texcoord0' + ';\x0d\x0a#endif\x0d' + '\x0a\x0d\x0auniform' + '\x20vec4\x20u_Al' + 'bedoColor;' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20ALPHATEST' + '\x0d\x0a\x09uniform' + '\x20float\x20u_A' + 'lphaTestVa' + 'lue;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0a#ifd' + 'ef\x20FOG\x0d\x0a\x09u' + 'niform\x20flo' + 'at\x20u_FogSt' + 'art;\x0d\x0a\x09uni' + 'form\x20float' + '\x20u_FogRang' + 'e;\x0d\x0a\x09#ifde' + 'f\x20ADDTIVEF' + 'OG\x0d\x0a\x09#else' + '\x0d\x0a\x09\x09unifor' + 'm\x20vec3\x20u_F' + 'ogColor;\x0d\x0a' + '\x09#endif\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20color\x20=\x20\x20' + 'u_AlbedoCo' + 'lor;\x0d\x0a\x09#if' + 'def\x20ALBEDO' + 'TEXTURE\x0d\x0a\x09' + '\x09color\x20*=\x20' + 'texture2D(' + 'u_AlbedoTe' + 'xture,\x20v_T' + 'excoord0);' + '\x0d\x0a\x09#endif\x0d' + '\x0a\x09#if\x20defi' + 'ned(COLOR)' + '&&defined(' + 'ENABLEVERT' + 'EXCOLOR)\x0d\x0a' + '\x09\x09color\x20*=' + '\x20v_Color;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09\x0d\x0a\x09#ifdef' + '\x20ALPHATEST' + '\x0d\x0a\x09\x09if(col' + 'or.a\x20<\x20u_A' + 'lphaTestVa' + 'lue)\x0d\x0a\x09\x09\x09d' + 'iscard;\x0d\x0a\x09' + '#endif\x0d\x0a\x09\x0d' + '\x0a\x09gl_FragC' + 'olor\x20=\x20col' + 'or;\x0d\x0a\x09\x0d\x0a\x09#' + 'ifdef\x20FOG\x0d' + '\x0a\x09\x09float\x20l' + 'erpFact\x20=\x20' + 'clamp((1.0' + '\x20/\x20gl_Frag' + 'Coord.w\x20-\x20' + 'u_FogStart' + ')\x20/\x20u_FogR' + 'ange,\x200.0,' + '\x201.0);\x0d\x0a\x09\x09' + '#ifdef\x20ADD' + 'TIVEFOG\x0d\x0a\x09' + '\x09\x09gl_FragC' + 'olor.rgb\x20=' + '\x20mix(gl_Fr' + 'agColor.rg' + ('b,\x20vec3(0.' + '0),\x20lerpFa' + 'ct);\x0d\x0a\x09\x09#e' + 'lse\x0d\x0a\x09\x09\x09gl' + '_FragColor' + '.rgb\x20=\x20mix' + '(gl_FragCo' + 'lor.rgb,\x20u' + '_FogColor,' + '\x20lerpFact)' + ';\x0d\x0a\x09\x09#endi' + 'f\x0d\x0a\x09#endif' + '\x0d\x0a\x09\x0d\x0a}\x0d\x0a\x0d\x0a'), _0x1788fb = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec2\x20a_Texc' + 'oord0;\x0d\x0a\x0d\x0a' + '#ifdef\x20GPU' + '_INSTANCE\x0d' + '\x0a\x09attribut' + 'e\x20mat4\x20a_M' + 'vpMatrix;\x0d' + '\x0a#else\x0d\x0a\x09u' + 'niform\x20mat' + '4\x20u_MvpMat' + 'rix;\x0d\x0a#end' + 'if\x0d\x0a\x0d\x0aattr' + 'ibute\x20vec4' + '\x20a_Color;\x0d' + '\x0avarying\x20v' + 'ec4\x20v_Colo' + 'r;\x0d\x0avaryin' + 'g\x20vec2\x20v_T' + 'excoord0;\x0d' + '\x0a\x0d\x0a#ifdef\x20' + 'TILINGOFFS' + 'ET\x0d\x0a\x09unifo' + 'rm\x20vec4\x20u_' + 'TilingOffs' + 'et;\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0a#ifde' + 'f\x20BONE\x0d\x0a\x09c' + 'onst\x20int\x20c' + '_MaxBoneCo' + 'unt\x20=\x2024;\x0d' + '\x0a\x09attribut' + 'e\x20vec4\x20a_B' + 'oneIndices' + ';\x0d\x0a\x09attrib' + 'ute\x20vec4\x20a' + '_BoneWeigh' + 'ts;\x0d\x0a\x09unif' + 'orm\x20mat4\x20u' + '_Bones[c_M' + 'axBoneCoun' + 't];\x0d\x0a#endi' + 'f\x0d\x0a\x0d\x0avoid\x20' + 'main()\x20{\x0d\x0a' + '\x09vec4\x20posi' + 'tion;\x0d\x0a\x09#i' + 'fdef\x20BONE\x0d' + '\x0a\x09\x09mat4\x20sk' + 'inTransfor' + 'm\x20=\x20u_Bone' + 's[int(a_Bo' + 'neIndices.' + 'x)]\x20*\x20a_Bo' + 'neWeights.' + 'x;\x0d\x0a\x09\x09skin' + 'Transform\x20' + '+=\x20u_Bones' + '[int(a_Bon' + 'eIndices.y' + ')]\x20*\x20a_Bon' + 'eWeights.y' + ';\x0d\x0a\x09\x09skinT' + 'ransform\x20+' + '=\x20u_Bones[' + 'int(a_Bone' + 'Indices.z)' + ']\x20*\x20a_Bone' + 'Weights.z;' + '\x0d\x0a\x09\x09skinTr' + 'ansform\x20+=' + '\x20u_Bones[i' + 'nt(a_BoneI' + 'ndices.w)]' + '\x20*\x20a_BoneW' + 'eights.w;\x0d' + '\x0a\x09\x09positio' + 'n=skinTran' + 'sform*a_Po' + 'sition;\x0d\x0a\x09' + '#else\x0d\x0a\x09\x09p' + 'osition=a_' + 'Position;\x0d' + '\x0a\x09#endif\x0d\x0a' + '\x09#ifdef\x20GP' + 'U_INSTANCE' + '\x0d\x0a\x09\x09gl_Pos' + 'ition\x20=\x20a_' + 'MvpMatrix\x20' + '*\x20position' + ';\x0d\x0a\x09#else\x0d' + '\x0a\x09\x09gl_Posi' + 'tion\x20=\x20u_M' + 'vpMatrix\x20*' + '\x20position;' + ('\x0d\x0a\x09#endif\x0d' + '\x0a\x0d\x0a\x09#ifdef' + '\x20TILINGOFF' + 'SET\x0d\x0a\x09\x09v_T' + 'excoord0=T' + 'ransformUV' + '(a_Texcoor' + 'd0,u_Tilin' + 'gOffset);\x0d' + '\x0a\x09#else\x0d\x0a\x09' + '\x09v_Texcoor' + 'd0=a_Texco' + 'ord0;\x0d\x0a\x09#e' + 'ndif\x0d\x0a\x0d\x0a\x09#' + 'if\x20defined' + '(COLOR)&&d' + 'efined(ENA' + 'BLEVERTEXC' + 'OLOR)\x0d\x0a\x09\x09v' + '_Color\x20=\x20a' + '_Color;\x0d\x0a\x09' + '#endif\x0d\x0a\x09g' + 'l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}'), _0x419ad9 = '#ifdef\x20GL_' + 'FRAGMENT_P' + 'RECISION_H' + 'IGH\x0d\x0a\x09prec' + 'ision\x20high' + 'p\x20float;\x0d\x0a' + '#else\x0d\x0a\x09pr' + 'ecision\x20me' + 'diump\x20floa' + 't;\x0d\x0a#endif' + '\x0d\x0a\x0d\x0a#ifdef' + '\x20MAINTEXTU' + 'RE\x0d\x0a\x09unifo' + 'rm\x20sampler' + '2D\x20u_MainT' + 'exture;\x0d\x0a#' + 'endif\x0d\x0a\x0d\x0a#' + 'ifdef\x20NORM' + 'ALTEXTURE\x0d' + '\x0a\x09uniform\x20' + 'sampler2D\x20' + 'u_NormalTe' + 'xture;\x0d\x0a#e' + 'ndif\x0d\x0a\x0d\x0aun' + 'iform\x20vec4' + '\x20u_Horizon' + 'Color;\x0d\x0a\x0d\x0a' + 'varying\x20ve' + 'c3\x20v_Norma' + 'l;\x0d\x0avaryin' + 'g\x20vec3\x20v_T' + 'angent;\x0d\x0av' + 'arying\x20vec' + '3\x20v_Binorm' + 'al;\x0d\x0avaryi' + 'ng\x20vec3\x20v_' + 'ViewDir;\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord0;\x0d\x0avar' + 'ying\x20vec2\x20' + 'v_Texcoord' + '1;\x0d\x0a\x0d\x0a#inc' + 'lude\x20\x22Ligh' + 'ting.glsl\x22' + '\x0d\x0a\x0d\x0avoid\x20m' + 'ain()\x0d\x0a{\x0d\x0a' + '\x09vec4\x20bump' + 'Color1\x20=\x20t' + 'exture2D(u' + '_NormalTex' + 'ture,\x20v_Te' + 'xcoord0);\x0d' + '\x0a\x09vec4\x20bum' + 'pColor2\x20=\x20' + 'texture2D(' + 'u_NormalTe' + 'xture,\x20v_T' + 'excoord1);' + '\x0d\x0a\x09\x0d\x0a\x09vec3' + '\x20normal1\x20=' + '\x20NormalSam' + 'pleToWorld' + 'Space1(bum' + 'pColor1,\x20v' + '_Tangent,\x20' + 'v_Binormal' + ',\x20v_Normal' + ');\x0d\x0a\x09vec3\x20' + 'normal2\x20=\x20' + 'NormalSamp' + 'leToWorldS' + 'pace1(bump' + 'Color2,\x20v_' + 'Tangent,\x20v' + '_Binormal,' + '\x20v_Normal)' + ';\x0d\x0a\x09\x0d\x0a\x09vec' + '3\x20normal\x20=' + '\x20normalize' + '((normal1\x20' + '+\x20normal2)' + '\x20*\x200.5);\x0d\x0a' + '\x09vec3\x20view' + 'Dir\x20=\x20norm' + 'alize(v_Vi' + 'ewDir);\x0d\x0a\x09' + 'float\x20fres' + 'nel\x20=\x20dot(' + 'viewDir,\x20n' + 'ormal);\x0d\x0a\x09' + '\x0d\x0a\x09vec4\x20wa' + 'terColor\x20=' + '\x20texture2D' + '(u_MainTex' + 'ture,\x20vec2' + '(fresnel,\x20' + 'fresnel));' + '\x0d\x0a\x09\x0d\x0a\x09vec4' + '\x20color;\x0d\x0a\x09' + ('color.rgb\x20' + '=\x20mix(wate' + 'rColor.rgb' + ',\x20u_Horizo' + 'nColor.rgb' + ',\x20vec3(wat' + 'erColor.a)' + ');\x0d\x0a\x09color' + '.a\x20=\x20u_Hor' + 'izonColor.' + 'a;\x0d\x0a\x09\x0d\x0a\x09gl' + '_FragColor' + '\x20=\x20color;\x0d' + '\x0a}\x0d\x0a\x0d\x0a'), _0x390445 = '#include\x20\x22' + 'Lighting.g' + 'lsl\x22;\x0d\x0a\x0d\x0aa' + 'ttribute\x20v' + 'ec4\x20a_Posi' + 'tion;\x0d\x0aatt' + 'ribute\x20vec' + '3\x20a_Normal' + ';\x0d\x0aattribu' + 'te\x20vec4\x20a_' + 'Tangent0;\x0d' + '\x0a\x0d\x0auniform' + '\x20mat4\x20u_Mv' + 'pMatrix;\x0d\x0a' + 'uniform\x20ma' + 't4\x20u_World' + 'Mat;\x0d\x0aunif' + 'orm\x20vec3\x20u' + '_CameraPos' + ';\x0d\x0auniform' + '\x20float\x20u_W' + 'aveScale;\x0d' + '\x0auniform\x20v' + 'ec4\x20u_Wave' + 'Speed;\x0d\x0aun' + 'iform\x20floa' + 't\x20u_Time;\x0d' + '\x0a\x0d\x0avarying' + '\x20vec3\x20v_No' + 'rmal;\x0d\x0avar' + 'ying\x20vec3\x20' + 'v_Tangent;' + '\x0d\x0avarying\x20' + 'vec3\x20v_Bin' + 'ormal;\x0d\x0ava' + 'rying\x20vec3' + '\x20v_ViewDir' + ';\x0d\x0avarying' + '\x20vec2\x20v_Te' + 'xcoord0;\x0d\x0a' + 'varying\x20ve' + 'c2\x20v_Texco' + 'ord1;\x0d\x0a\x0d\x0av' + 'oid\x20main()' + '\x0d\x0a{\x0d\x0a\x09vec4' + '\x20positionW' + 'orld\x20=\x20u_W' + 'orldMat\x20*\x20' + 'a_Position' + ';\x0d\x0a\x09vec4\x20p' + 'osition\x20=\x20' + 'u_MvpMatri' + 'x\x20*\x20a_Posi' + 'tion;\x0d\x0a\x09\x0d\x0a' + '\x09vec4\x20temp' + '\x20=\x20vec4(po' + 'sitionWorl' + 'd.x,\x20posit' + 'ionWorld.z' + ',\x20position' + 'World.x,\x20p' + 'ositionWor' + 'ld.z)\x20*\x20u_' + 'WaveScale\x20' + '+\x20u_WaveSp' + 'eed\x20*\x20u_Wa' + 'veScale\x20*\x20' + 'u_Time;\x0d\x0a\x09' + '\x0d\x0a\x09v_Texco' + 'ord0\x20=\x20tem' + 'p.xy\x20*\x20vec' + '2(0.4,\x200.4' + '5);\x0d\x0a\x09v_Te' + 'xcoord1\x20=\x20' + 'temp.wz;\x0d\x0a' + '\x09\x0d\x0a\x09mat3\x20w' + 'orldMat\x20=\x20' + 'mat3(u_Wor' + 'ldMat);\x0d\x0a\x09' + 'v_Normal\x20=' + '\x20worldMat\x20' + '*\x20a_Normal' + ';\x0d\x0a\x09v_Tang' + 'ent\x20=\x20worl' + 'dMat\x20*\x20a_T' + 'angent0.xy' + 'z;\x0d\x0a\x09v_Bin' + 'ormal\x20=\x20cr' + 'oss(v_Norm' + 'al,\x20v_Tang' + 'ent)\x20*\x20a_T' + 'angent0.w;' + '\x0d\x0a\x09\x0d\x0a\x09v_Vi' + 'ewDir\x20=\x20u_' + 'CameraPos\x20' + '-\x20position' + 'World.xyz;' + '\x0d\x0a\x09gl_Posi' + 'tion\x20=\x20pos' + 'ition;\x0d\x0a\x09g' + ('l_Position' + '=remapGLPo' + 'sitionZ(gl' + '_Position)' + ';\x0d\x0a}');
    class _0x47788a {
        constructor() {
            this['textureID'] = -0x1;
        }
    }
    class _0x30a211 extends _0x33d6e0['Resource'] {
        constructor(_0x1b21e7, _0x135ffa, _0x25c1f6, _0x2dcc83, _0xe09c30) {
            super(), this['_statePara' + 'msMap'] = [], this['_uploadMar' + 'k'] = -0x1, this['_uploadRen' + 'derType'] = -0x1, this['_vs'] = _0x1b21e7, this['_ps'] = _0x135ffa, this['_attribute' + 'Map'] = _0x25c1f6, this['_uniformMa' + 'p'] = _0x2dcc83, this['_shaderPas' + 's'] = _0xe09c30, this['_create'](), this['lock'] = !0x0;
        }
        ['_create']() {
            var _0x176b81 = _0x33d6e0['LayaGL']['instance'];
            for (var _0x1916e2 in (this['_program'] = _0x176b81['createProg' + 'ram'](), this['_vshader'] = this['_createSha' + 'der'](_0x176b81, this['_vs'], _0x176b81['VERTEX_SHA' + 'DER']), this['_pshader'] = this['_createSha' + 'der'](_0x176b81, this['_ps'], _0x176b81['FRAGMENT_S' + 'HADER']), _0x176b81['attachShad' + 'er'](this['_program'], this['_vshader']), _0x176b81['attachShad' + 'er'](this['_program'], this['_pshader']), this['_attribute' + 'Map']))
                _0x176b81['bindAttrib' + 'Location'](this['_program'], this['_attribute' + 'Map'][_0x1916e2], _0x1916e2);
            if (_0x176b81['linkProgra' + 'm'](this['_program']), !_0x33d6e0['Render']['isConchApp'] && _0x1ede74['debugMode'] && !_0x176b81['getProgram' + 'Parameter'](this['_program'], _0x176b81['LINK_STATU' + 'S']))
                throw _0x176b81['getProgram' + 'InfoLog'](this['_program']);
            var _0x38801f = [], _0xa08849 = [], _0x130b6e = [], _0xebab23 = [], _0x53cc64 = [];
            this['_customUni' + 'formParams' + 'Map'] = [];
            var _0x24c261, _0x2d9550, _0x738a20, _0x54e0bf = _0x176b81['getProgram' + 'Parameter'](this['_program'], _0x176b81['ACTIVE_UNI' + 'FORMS']);
            for (_0x33d6e0['WebGLConte' + 'xt']['useProgram'](_0x176b81, this['_program']), this['_curActTex' + 'Index'] = 0x0, _0x2d9550 = 0x0; _0x2d9550 < _0x54e0bf; _0x2d9550++) {
                var _0x53aa4b = _0x176b81['getActiveU' + 'niform'](this['_program'], _0x2d9550), _0x472578 = _0x53aa4b['name'];
                (_0x24c261 = new _0x47788a())['location'] = _0x176b81['getUniform' + 'Location'](this['_program'], _0x472578), _0x472578['indexOf']('[0]') > 0x0 ? (_0x24c261['name'] = _0x472578 = _0x472578['substr'](0x0, _0x472578['length'] - 0x3), _0x24c261['isArray'] = !0x0) : (_0x24c261['name'] = _0x472578, _0x24c261['isArray'] = !0x1), _0x24c261['type'] = _0x53aa4b['type'], this['_addShader' + 'UnifiormFu' + 'n'](_0x24c261);
                var _0x49dc61 = this['_uniformMa' + 'p'][_0x472578];
                if (null != _0x49dc61)
                    switch (_0x24c261['dataOffset'] = _0x1ede74['propertyNa' + 'meToID'](_0x472578), _0x49dc61) {
                    case _0x1ede74['PERIOD_CUS' + 'TOM']:
                        _0x53cc64['push'](_0x24c261);
                        break;
                    case _0x1ede74['PERIOD_MAT' + 'ERIAL']:
                        _0xebab23['push'](_0x24c261);
                        break;
                    case _0x1ede74['PERIOD_SPR' + 'ITE']:
                        _0x130b6e['push'](_0x24c261);
                        break;
                    case _0x1ede74['PERIOD_CAM' + 'ERA']:
                        _0xa08849['push'](_0x24c261);
                        break;
                    case _0x1ede74['PERIOD_SCE' + 'NE']:
                        _0x38801f['push'](_0x24c261);
                        break;
                    default:
                        throw new Error('Shader3D:\x20' + 'period\x20is\x20' + 'unkonw.');
                    }
            }
            for (this['_sceneUnif' + 'ormParamsM' + 'ap'] = _0x33d6e0['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0x38801f['length'] * 0x5 + 0x4, 0x40, !0x0), _0x2d9550 = 0x0, _0x738a20 = _0x38801f['length']; _0x2d9550 < _0x738a20; _0x2d9550++)
                this['_sceneUnif' + 'ormParamsM' + 'ap']['addShaderU' + 'niform'](_0x38801f[_0x2d9550]);
            for (this['_cameraUni' + 'formParams' + 'Map'] = _0x33d6e0['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0xa08849['length'] * 0x5 + 0x4, 0x40, !0x0), _0x2d9550 = 0x0, _0x738a20 = _0xa08849['length']; _0x2d9550 < _0x738a20; _0x2d9550++)
                this['_cameraUni' + 'formParams' + 'Map']['addShaderU' + 'niform'](_0xa08849[_0x2d9550]);
            for (this['_spriteUni' + 'formParams' + 'Map'] = _0x33d6e0['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0x130b6e['length'] * 0x5 + 0x4, 0x40, !0x0), _0x2d9550 = 0x0, _0x738a20 = _0x130b6e['length']; _0x2d9550 < _0x738a20; _0x2d9550++)
                this['_spriteUni' + 'formParams' + 'Map']['addShaderU' + 'niform'](_0x130b6e[_0x2d9550]);
            for (this['_materialU' + 'niformPara' + 'msMap'] = _0x33d6e0['LayaGL']['instance']['createComm' + 'andEncoder'](0x4 * _0xebab23['length'] * 0x5 + 0x4, 0x40, !0x0), _0x2d9550 = 0x0, _0x738a20 = _0xebab23['length']; _0x2d9550 < _0x738a20; _0x2d9550++)
                this['_materialU' + 'niformPara' + 'msMap']['addShaderU' + 'niform'](_0xebab23[_0x2d9550]);
            for (this['_customUni' + 'formParams' + 'Map']['length'] = _0x53cc64['length'], _0x2d9550 = 0x0, _0x738a20 = _0x53cc64['length']; _0x2d9550 < _0x738a20; _0x2d9550++) {
                var _0x369a52 = _0x53cc64[_0x2d9550];
                this['_customUni' + 'formParams' + 'Map'][_0x369a52['dataOffset']] = _0x369a52;
            }
            var _0x379e31 = this['_shaderPas' + 's']['_stateMap'];
            for (var _0x1b1e53 in _0x379e31)
                this['_statePara' + 'msMap'][_0x379e31[_0x1b1e53]] = _0x1ede74['propertyNa' + 'meToID'](_0x1b1e53);
        }
        ['_getRender' + 'State'](_0xdca566, _0x4360e9) {
            var _0x1a1a30 = this['_statePara' + 'msMap'][_0x4360e9];
            return null == _0x1a1a30 ? null : _0xdca566[_0x1a1a30];
        }
        ['_disposeRe' + 'source']() {
            _0x33d6e0['LayaGL']['instance']['deleteShad' + 'er'](this['_vshader']), _0x33d6e0['LayaGL']['instance']['deleteShad' + 'er'](this['_pshader']), _0x33d6e0['LayaGL']['instance']['deleteProg' + 'ram'](this['_program']), this['_vshader'] = this['_pshader'] = this['_program'] = null, this['_setGPUMem' + 'ory'](0x0), this['_curActTex' + 'Index'] = 0x0;
        }
        ['_addShader' + 'UnifiormFu' + 'n'](_0x257b68) {
            var _0x488b4e = _0x33d6e0['LayaGL']['instance'];
            _0x257b68['caller'] = this;
            var _0xdae33d = _0x257b68['isArray'];
            switch (_0x257b68['type']) {
            case _0x488b4e['BOOL']:
                _0x257b68['fun'] = this['_uniform1i'], _0x257b68['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x488b4e['INT']:
                _0x257b68['fun'] = _0xdae33d ? this['_uniform1i' + 'v'] : this['_uniform1i'], _0x257b68['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x488b4e['FLOAT']:
                _0x257b68['fun'] = _0xdae33d ? this['_uniform1f' + 'v'] : this['_uniform1f'], _0x257b68['uploadedVa' + 'lue'] = new Array(0x1);
                break;
            case _0x488b4e['FLOAT_VEC2']:
                _0x257b68['fun'] = _0xdae33d ? this['_uniform_v' + 'ec2v'] : this['_uniform_v' + 'ec2'], _0x257b68['uploadedVa' + 'lue'] = new Array(0x2);
                break;
            case _0x488b4e['FLOAT_VEC3']:
                _0x257b68['fun'] = _0xdae33d ? this['_uniform_v' + 'ec3v'] : this['_uniform_v' + 'ec3'], _0x257b68['uploadedVa' + 'lue'] = new Array(0x3);
                break;
            case _0x488b4e['FLOAT_VEC4']:
                _0x257b68['fun'] = _0xdae33d ? this['_uniform_v' + 'ec4v'] : this['_uniform_v' + 'ec4'], _0x257b68['uploadedVa' + 'lue'] = new Array(0x4);
                break;
            case _0x488b4e['FLOAT_MAT2']:
                _0x257b68['fun'] = this['_uniformMa' + 'trix2fv'];
                break;
            case _0x488b4e['FLOAT_MAT3']:
                _0x257b68['fun'] = this['_uniformMa' + 'trix3fv'];
                break;
            case _0x488b4e['FLOAT_MAT4']:
                _0x257b68['fun'] = _0xdae33d ? this['_uniformMa' + 'trix4fv'] : this['_uniformMa' + 'trix4f'];
                break;
            case _0x488b4e['SAMPLER_2D']:
                _0x488b4e['uniform1i'](_0x257b68['location'], this['_curActTex' + 'Index']), _0x257b68['textureID'] = _0x33d6e0['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x257b68['fun'] = this['_uniform_s' + 'ampler2D'];
                break;
            case 0x8b5f:
                _0x488b4e['uniform1i'](_0x257b68['location'], this['_curActTex' + 'Index']), _0x257b68['textureID'] = _0x33d6e0['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x257b68['fun'] = this['_uniform_s' + 'ampler3D'];
                break;
            case _0x488b4e['SAMPLER_CU' + 'BE']:
                _0x488b4e['uniform1i'](_0x257b68['location'], this['_curActTex' + 'Index']), _0x257b68['textureID'] = _0x33d6e0['WebGLConte' + 'xt']['_glTexture' + 'IDs'][this['_curActTex' + 'Index']++], _0x257b68['fun'] = this['_uniform_s' + 'amplerCube'];
                break;
            default:
                throw new Error('compile\x20sh' + 'ader\x20err!');
            }
        }
        ['_createSha' + 'der'](_0x596d23, _0x5a03b6, _0x3855d8) {
            var _0x5bf11c = _0x596d23['createShad' + 'er'](_0x3855d8);
            if (_0x596d23['shaderSour' + 'ce'](_0x5bf11c, _0x5a03b6), _0x596d23['compileSha' + 'der'](_0x5bf11c), _0x1ede74['debugMode'] && !_0x596d23['getShaderP' + 'arameter'](_0x5bf11c, _0x596d23['COMPILE_ST' + 'ATUS']))
                throw _0x596d23['getShaderI' + 'nfoLog'](_0x5bf11c);
            return _0x5bf11c;
        }
        ['_uniform1f'](_0x43f956, _0x146358) {
            var _0x8ce380 = _0x43f956['uploadedVa' + 'lue'];
            return _0x8ce380[0x0] !== _0x146358 ? (_0x33d6e0['LayaGL']['instance']['uniform1f'](_0x43f956['location'], _0x8ce380[0x0] = _0x146358), 0x1) : 0x0;
        }
        ['_uniform1f' + 'v'](_0x5dc03f, _0x4599da) {
            if (_0x4599da['length'] < 0x4) {
                var _0x1da72b = _0x5dc03f['uploadedVa' + 'lue'];
                return _0x1da72b[0x0] !== _0x4599da[0x0] || _0x1da72b[0x1] !== _0x4599da[0x1] || _0x1da72b[0x2] !== _0x4599da[0x2] || _0x1da72b[0x3] !== _0x4599da[0x3] ? (_0x33d6e0['LayaGL']['instance']['uniform1fv'](_0x5dc03f['location'], _0x4599da), _0x1da72b[0x0] = _0x4599da[0x0], _0x1da72b[0x1] = _0x4599da[0x1], _0x1da72b[0x2] = _0x4599da[0x2], _0x1da72b[0x3] = _0x4599da[0x3], 0x1) : 0x0;
            }
            return _0x33d6e0['LayaGL']['instance']['uniform1fv'](_0x5dc03f['location'], _0x4599da), 0x1;
        }
        ['_uniform_v' + 'ec2'](_0xb3574c, _0x160aec) {
            var _0x2370af = _0xb3574c['uploadedVa' + 'lue'];
            return _0x2370af[0x0] !== _0x160aec['x'] || _0x2370af[0x1] !== _0x160aec['y'] ? (_0x33d6e0['LayaGL']['instance']['uniform2f'](_0xb3574c['location'], _0x2370af[0x0] = _0x160aec['x'], _0x2370af[0x1] = _0x160aec['y']), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec2v'](_0x3051f3, _0x533044) {
            if (_0x533044['length'] < 0x2) {
                var _0x4eb705 = _0x3051f3['uploadedVa' + 'lue'];
                return _0x4eb705[0x0] !== _0x533044[0x0] || _0x4eb705[0x1] !== _0x533044[0x1] || _0x4eb705[0x2] !== _0x533044[0x2] || _0x4eb705[0x3] !== _0x533044[0x3] ? (_0x33d6e0['LayaGL']['instance']['uniform2fv'](_0x3051f3['location'], _0x533044), _0x4eb705[0x0] = _0x533044[0x0], _0x4eb705[0x1] = _0x533044[0x1], _0x4eb705[0x2] = _0x533044[0x2], _0x4eb705[0x3] = _0x533044[0x3], 0x1) : 0x0;
            }
            return _0x33d6e0['LayaGL']['instance']['uniform2fv'](_0x3051f3['location'], _0x533044), 0x1;
        }
        ['_uniform_v' + 'ec3'](_0x574f6a, _0x2b38eb) {
            var _0x4cc749 = _0x574f6a['uploadedVa' + 'lue'];
            return _0x4cc749[0x0] !== _0x2b38eb['x'] || _0x4cc749[0x1] !== _0x2b38eb['y'] || _0x4cc749[0x2] !== _0x2b38eb['z'] ? (_0x33d6e0['LayaGL']['instance']['uniform3f'](_0x574f6a['location'], _0x4cc749[0x0] = _0x2b38eb['x'], _0x4cc749[0x1] = _0x2b38eb['y'], _0x4cc749[0x2] = _0x2b38eb['z']), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec3v'](_0x2586f8, _0x1744a8) {
            return _0x33d6e0['LayaGL']['instance']['uniform3fv'](_0x2586f8['location'], _0x1744a8), 0x1;
        }
        ['_uniform_v' + 'ec4'](_0x4f2799, _0x102521) {
            var _0x3ff4c8 = _0x4f2799['uploadedVa' + 'lue'];
            return _0x3ff4c8[0x0] !== _0x102521['x'] || _0x3ff4c8[0x1] !== _0x102521['y'] || _0x3ff4c8[0x2] !== _0x102521['z'] || _0x3ff4c8[0x3] !== _0x102521['w'] ? (_0x33d6e0['LayaGL']['instance']['uniform4f'](_0x4f2799['location'], _0x3ff4c8[0x0] = _0x102521['x'], _0x3ff4c8[0x1] = _0x102521['y'], _0x3ff4c8[0x2] = _0x102521['z'], _0x3ff4c8[0x3] = _0x102521['w']), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec4v'](_0x52355c, _0x4b6b6c) {
            return _0x33d6e0['LayaGL']['instance']['uniform4fv'](_0x52355c['location'], _0x4b6b6c), 0x1;
        }
        ['_uniformMa' + 'trix2fv'](_0x3c9887, _0x2538b2) {
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix2fv'](_0x3c9887['location'], !0x1, _0x2538b2), 0x1;
        }
        ['_uniformMa' + 'trix3fv'](_0x2444a7, _0x1b32c3) {
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix3fv'](_0x2444a7['location'], !0x1, _0x1b32c3), 0x1;
        }
        ['_uniformMa' + 'trix4f'](_0x4a8119, _0x4ad74b) {
            var _0x15862b = _0x4ad74b['elements'];
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix4fv'](_0x4a8119['location'], !0x1, _0x15862b), 0x1;
        }
        ['_uniformMa' + 'trix4fv'](_0x2d9201, _0x55f7ca) {
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix4fv'](_0x2d9201['location'], !0x1, _0x55f7ca), 0x1;
        }
        ['_uniform1i'](_0x44df8f, _0x415e4c) {
            var _0x1909a7 = _0x44df8f['uploadedVa' + 'lue'];
            return _0x1909a7[0x0] !== _0x415e4c ? (_0x33d6e0['LayaGL']['instance']['uniform1i'](_0x44df8f['location'], _0x1909a7[0x0] = _0x415e4c), 0x1) : 0x0;
        }
        ['_uniform1i' + 'v'](_0x524431, _0x361e40) {
            return _0x33d6e0['LayaGL']['instance']['uniform1iv'](_0x524431['location'], _0x361e40), 0x1;
        }
        ['_uniform_i' + 'vec2'](_0x24a221, _0x2a4961) {
            var _0xfa7ba8 = _0x24a221['uploadedVa' + 'lue'];
            return _0xfa7ba8[0x0] !== _0x2a4961[0x0] || _0xfa7ba8[0x1] !== _0x2a4961[0x1] ? (_0x33d6e0['LayaGL']['instance']['uniform2i'](_0x24a221['location'], _0xfa7ba8[0x0] = _0x2a4961[0x0], _0xfa7ba8[0x1] = _0x2a4961[0x1]), 0x1) : 0x0;
        }
        ['_uniform_i' + 'vec2v'](_0xc4991e, _0x1008e8) {
            return _0x33d6e0['LayaGL']['instance']['uniform2iv'](_0xc4991e['location'], _0x1008e8), 0x1;
        }
        ['_uniform_v' + 'ec3i'](_0x408a1f, _0x2dc323) {
            var _0x277d9d = _0x408a1f['uploadedVa' + 'lue'];
            return _0x277d9d[0x0] !== _0x2dc323[0x0] || _0x277d9d[0x1] !== _0x2dc323[0x1] || _0x277d9d[0x2] !== _0x2dc323[0x2] ? (_0x33d6e0['LayaGL']['instance']['uniform3i'](_0x408a1f['location'], _0x277d9d[0x0] = _0x2dc323[0x0], _0x277d9d[0x1] = _0x2dc323[0x1], _0x277d9d[0x2] = _0x2dc323[0x2]), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec3vi'](_0xe5932e, _0x3811fe) {
            return _0x33d6e0['LayaGL']['instance']['uniform3iv'](_0xe5932e['location'], _0x3811fe), 0x1;
        }
        ['_uniform_v' + 'ec4i'](_0x104ca4, _0x558111) {
            var _0x1d2934 = _0x104ca4['uploadedVa' + 'lue'];
            return _0x1d2934[0x0] !== _0x558111[0x0] || _0x1d2934[0x1] !== _0x558111[0x1] || _0x1d2934[0x2] !== _0x558111[0x2] || _0x1d2934[0x3] !== _0x558111[0x3] ? (_0x33d6e0['LayaGL']['instance']['uniform4i'](_0x104ca4['location'], _0x1d2934[0x0] = _0x558111[0x0], _0x1d2934[0x1] = _0x558111[0x1], _0x1d2934[0x2] = _0x558111[0x2], _0x1d2934[0x3] = _0x558111[0x3]), 0x1) : 0x0;
        }
        ['_uniform_v' + 'ec4vi'](_0x2e5a31, _0x5637a7) {
            return _0x33d6e0['LayaGL']['instance']['uniform4iv'](_0x2e5a31['location'], _0x5637a7), 0x1;
        }
        ['_uniform_s' + 'ampler2D'](_0x42713b, _0xdb81bd) {
            var _0x3f70f1 = _0xdb81bd['_getSource']() || _0xdb81bd['defaulteTe' + 'xture']['_getSource'](), _0x4c8ac1 = _0x33d6e0['LayaGL']['instance'];
            return _0x33d6e0['WebGLConte' + 'xt']['activeText' + 'ure'](_0x4c8ac1, _0x42713b['textureID']), _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x4c8ac1, _0x4c8ac1['TEXTURE_2D'], _0x3f70f1), 0x0;
        }
        ['_uniform_s' + 'ampler3D'](_0x133d61, _0x2fb68f) {
            var _0x250585 = _0x2fb68f['_getSource']() || _0x2fb68f['defaulteTe' + 'xture']['_getSource'](), _0x2780bc = _0x33d6e0['LayaGL']['instance'];
            return _0x33d6e0['WebGLConte' + 'xt']['activeText' + 'ure'](_0x2780bc, _0x133d61['textureID']), _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x2780bc, WebGL2RenderingContext['TEXTURE_3D'], _0x250585), 0x0;
        }
        ['_uniform_s' + 'amplerCube'](_0x2cf5e0, _0x511fb7) {
            var _0x165a67 = _0x511fb7['_getSource']() || _0x511fb7['defaulteTe' + 'xture']['_getSource'](), _0x86dc76 = _0x33d6e0['LayaGL']['instance'];
            return _0x33d6e0['WebGLConte' + 'xt']['activeText' + 'ure'](_0x86dc76, _0x2cf5e0['textureID']), _0x33d6e0['WebGLConte' + 'xt']['bindTextur' + 'e'](_0x86dc76, _0x86dc76['TEXTURE_CU' + 'BE_MAP'], _0x165a67), 0x0;
        }
        ['bind']() {
            return _0x33d6e0['WebGLConte' + 'xt']['useProgram'](_0x33d6e0['LayaGL']['instance'], this['_program']);
        }
        ['uploadUnif' + 'orms'](_0x3dcdb5, _0x137d92, _0x2fdf57) {
            _0x33d6e0['Stat']['shaderCall'] += _0x33d6e0['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms'](_0x33d6e0['LayaGL']['instance'], _0x3dcdb5, _0x137d92, _0x2fdf57);
        }
        ['uploadRend' + 'erStateBle' + 'ndDepth'](_0x5475f6) {
            var _0x4b8b5a = _0x33d6e0['LayaGL']['instance'], _0x277116 = this['_shaderPas' + 's']['renderStat' + 'e'], _0x45fe7b = _0x5475f6['getData'](), _0x3b277d = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']), _0x1feb07 = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST']), _0x358b27 = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND']);
            switch (null == _0x3b277d && (_0x3b277d = _0x277116['depthWrite']), null == _0x1feb07 && (_0x1feb07 = _0x277116['depthTest']), null == _0x358b27 && (_0x358b27 = _0x277116['blend']), _0x33d6e0['WebGLConte' + 'xt']['setDepthMa' + 'sk'](_0x4b8b5a, _0x3b277d), _0x1feb07 === _0x311b27['DEPTHTEST_' + 'OFF'] ? _0x33d6e0['WebGLConte' + 'xt']['setDepthTe' + 'st'](_0x4b8b5a, !0x1) : (_0x33d6e0['WebGLConte' + 'xt']['setDepthTe' + 'st'](_0x4b8b5a, !0x0), _0x33d6e0['WebGLConte' + 'xt']['setDepthFu' + 'nc'](_0x4b8b5a, _0x1feb07)), _0x358b27) {
            case _0x311b27['BLEND_DISA' + 'BLE']:
                _0x33d6e0['WebGLConte' + 'xt']['setBlend'](_0x4b8b5a, !0x1);
                break;
            case _0x311b27['BLEND_ENAB' + 'LE_ALL']:
                var _0x2d4c01 = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_E' + 'QUATION']), _0x3d505a = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC']), _0x45ec0d = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST']);
                null == _0x2d4c01 && (_0x2d4c01 = _0x277116['blendEquat' + 'ion']), null == _0x3d505a && (_0x3d505a = _0x277116['srcBlend']), null == _0x45ec0d && (_0x45ec0d = _0x277116['dstBlend']), _0x33d6e0['WebGLConte' + 'xt']['setBlend'](_0x4b8b5a, !0x0), _0x33d6e0['WebGLConte' + 'xt']['setBlendEq' + 'uation'](_0x4b8b5a, _0x2d4c01), _0x33d6e0['WebGLConte' + 'xt']['setBlendFu' + 'nc'](_0x4b8b5a, _0x3d505a, _0x45ec0d);
                break;
            case _0x311b27['BLEND_ENAB' + 'LE_SEPERAT' + 'E']:
                var _0x3202f5 = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_RG' + 'B']), _0x46e299 = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_E' + 'QUATION_AL' + 'PHA']), _0x4c4f4f = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC_RGB']), _0x18e72d = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST_RGB']), _0x34522c = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC_ALPHA']), _0x49eba1 = this['_getRender' + 'State'](_0x45fe7b, _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST_ALPHA']);
                null == _0x3202f5 && (_0x3202f5 = _0x277116['blendEquat' + 'ionRGB']), null == _0x46e299 && (_0x46e299 = _0x277116['blendEquat' + 'ionAlpha']), null == _0x4c4f4f && (_0x4c4f4f = _0x277116['srcBlendRG' + 'B']), null == _0x18e72d && (_0x18e72d = _0x277116['dstBlendRG' + 'B']), null == _0x34522c && (_0x34522c = _0x277116['srcBlendAl' + 'pha']), null == _0x49eba1 && (_0x49eba1 = _0x277116['dstBlendAl' + 'pha']), _0x33d6e0['WebGLConte' + 'xt']['setBlend'](_0x4b8b5a, !0x0), _0x33d6e0['WebGLConte' + 'xt']['setBlendEq' + 'uationSepa' + 'rate'](_0x4b8b5a, _0x3202f5, _0x46e299), _0x33d6e0['WebGLConte' + 'xt']['setBlendFu' + 'ncSeperate'](_0x4b8b5a, _0x4c4f4f, _0x18e72d, _0x34522c, _0x49eba1);
            }
        }
        ['uploadRend' + 'erStateFro' + 'ntFace'](_0x250832, _0x5c8dd0, _0x8cbb9f) {
            var _0x393da7, _0x55b6e1 = _0x33d6e0['LayaGL']['instance'], _0x5f56f0 = this['_shaderPas' + 's']['renderStat' + 'e'], _0x3fd915 = _0x250832['getData'](), _0x33dd39 = this['_getRender' + 'State'](_0x3fd915, _0x1ede74['RENDER_STA' + 'TE_CULL']);
            switch (null == _0x33dd39 && (_0x33dd39 = _0x5f56f0['cull']), _0x33dd39) {
            case _0x311b27['CULL_NONE']:
                _0x33d6e0['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x55b6e1, !0x1);
                break;
            case _0x311b27['CULL_FRONT']:
                _0x33d6e0['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x55b6e1, !0x0), _0x393da7 = _0x5c8dd0 ? _0x8cbb9f ? _0x55b6e1['CCW'] : _0x55b6e1['CW'] : _0x8cbb9f ? _0x55b6e1['CW'] : _0x55b6e1['CCW'], _0x33d6e0['WebGLConte' + 'xt']['setFrontFa' + 'ce'](_0x55b6e1, _0x393da7);
                break;
            case _0x311b27['CULL_BACK']:
                _0x33d6e0['WebGLConte' + 'xt']['setCullFac' + 'e'](_0x55b6e1, !0x0), _0x393da7 = _0x5c8dd0 ? _0x8cbb9f ? _0x55b6e1['CW'] : _0x55b6e1['CCW'] : _0x8cbb9f ? _0x55b6e1['CCW'] : _0x55b6e1['CW'], _0x33d6e0['WebGLConte' + 'xt']['setFrontFa' + 'ce'](_0x55b6e1, _0x393da7);
            }
        }
        ['uploadCust' + 'omUniform'](_0x4e0826, _0x21c19f) {
            _0x33d6e0['Stat']['shaderCall'] += _0x33d6e0['LayaGLRunn' + 'er']['uploadCust' + 'omUniform'](_0x33d6e0['LayaGL']['instance'], this['_customUni' + 'formParams' + 'Map'], _0x4e0826, _0x21c19f);
        }
        ['_uniformMa' + 'trix2fvFor' + 'Native'](_0x13c3f7, _0x23436c) {
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix2fvEx'](_0x13c3f7['location'], !0x1, _0x23436c), 0x1;
        }
        ['_uniformMa' + 'trix3fvFor' + 'Native'](_0x2b2e87, _0x5a7961) {
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix3fvEx'](_0x2b2e87['location'], !0x1, _0x5a7961), 0x1;
        }
        ['_uniformMa' + 'trix4fvFor' + 'Native'](_0x3a6c94, _0x140058) {
            return _0x33d6e0['LayaGL']['instance']['uniformMat' + 'rix4fvEx'](_0x3a6c94['location'], !0x1, _0x140058), 0x1;
        }
    }
    class _0x2211b6 extends _0x33d6e0['ShaderComp' + 'ile'] {
        constructor(_0x50acb2, _0x3eeec9, _0x33f6fe, _0x33bc32) {
            for (var _0x2a504c in (super(_0x3eeec9, _0x33f6fe, null), this['_cacheShar' + 'ders'] = {}, this['_cacheShad' + 'erHierarch' + 'y'] = 0x1, this['_renderSta' + 'te'] = new _0x311b27(), this['_validDefi' + 'ne'] = new _0x5f373b(), this['_owner'] = _0x50acb2, this['_stateMap'] = _0x33bc32, this['defs']))
                this['_validDefi' + 'ne']['add'](_0x1ede74['getDefineB' + 'yName'](_0x2a504c));
        }
        get ['renderStat' + 'e']() {
            return this['_renderSta' + 'te'];
        }
        ['_compileTo' + 'Tree'](_0x2353cd, _0x22b892, _0x5a88f1, _0x3d550e, _0x5c8153) {
            var _0x556fe1, _0x1ddd03, _0x559bb5, _0x5dfae9, _0x49fd36, _0x118f5, _0x9fe055, _0x13a934, _0x3a6538, _0x38f9e2, _0x2ce645;
            for (_0x3a6538 = _0x5a88f1; _0x3a6538 < _0x22b892['length']; _0x3a6538++)
                if (!((_0x559bb5 = _0x22b892[_0x3a6538])['length'] < 0x1) && 0x0 !== (_0x118f5 = _0x559bb5['indexOf']('//'))) {
                    if (_0x118f5 >= 0x0 && (_0x559bb5 = _0x559bb5['substr'](0x0, _0x118f5)), _0x556fe1 = _0x13a934 || new _0x33d6e0['ShaderNode'](_0x3d550e), _0x13a934 = null, _0x556fe1['text'] = _0x559bb5, (_0x118f5 = _0x559bb5['indexOf']('#')) >= 0x0) {
                        for (_0x5dfae9 = '#', _0x2ce645 = _0x118f5 + 0x1, _0x38f9e2 = _0x559bb5['length']; _0x2ce645 < _0x38f9e2; _0x2ce645++) {
                            var _0x7c89e5 = _0x559bb5['charAt'](_0x2ce645);
                            if ('\x20' === _0x7c89e5 || '\x09' === _0x7c89e5 || '?' === _0x7c89e5)
                                break;
                            _0x5dfae9 += _0x7c89e5;
                        }
                        switch (_0x556fe1['name'] = _0x5dfae9, _0x5dfae9) {
                        case '#ifdef':
                        case '#ifndef':
                            if (_0x556fe1['setParent'](_0x2353cd), _0x2353cd = _0x556fe1, _0x5c8153) {
                                for (_0x9fe055 = _0x559bb5['substr'](_0x2ce645)['split'](_0x33d6e0['ShaderComp' + 'ile']['_splitToWo' + 'rdExps3']), _0x2ce645 = 0x0; _0x2ce645 < _0x9fe055['length']; _0x2ce645++)
                                    (_0x559bb5 = _0x9fe055[_0x2ce645])['length'] && (_0x5c8153[_0x559bb5] = !0x0);
                            }
                            continue;
                        case '#if':
                        case '#elif':
                            if (_0x556fe1['setParent'](_0x2353cd), _0x2353cd = _0x556fe1, _0x5c8153) {
                                for (_0x9fe055 = _0x559bb5['substr'](_0x2ce645)['split'](_0x33d6e0['ShaderComp' + 'ile']['_splitToWo' + 'rdExps3']), _0x2ce645 = 0x0; _0x2ce645 < _0x9fe055['length']; _0x2ce645++)
                                    (_0x559bb5 = _0x9fe055[_0x2ce645])['length'] && 'defined' != _0x559bb5 && (_0x5c8153[_0x559bb5] = !0x0);
                            }
                            continue;
                        case '#else':
                            _0x1ddd03 = (_0x2353cd = _0x2353cd['parent'])['childs'][_0x2353cd['childs']['length'] - 0x1], _0x556fe1['setParent'](_0x2353cd), _0x2353cd = _0x556fe1;
                            continue;
                        case '#endif':
                            _0x1ddd03 = (_0x2353cd = _0x2353cd['parent'])['childs'][_0x2353cd['childs']['length'] - 0x1], _0x556fe1['setParent'](_0x2353cd);
                            continue;
                        case '#include':
                            _0x9fe055 = _0x33d6e0['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x559bb5, null);
                            var _0x1199e8 = _0x33d6e0['ShaderComp' + 'ile']['includes'][_0x9fe055[0x1]];
                            if (!_0x1199e8)
                                throw 'ShaderComp' + 'ile\x20error\x20' + 'no\x20this\x20in' + 'clude\x20file' + ':' + _0x9fe055[0x1];
                            if ((_0x118f5 = _0x9fe055[0x0]['indexOf']('?')) < 0x0) {
                                _0x556fe1['setParent'](_0x2353cd), _0x559bb5 = _0x1199e8['getWith']('with' == _0x9fe055[0x2] ? _0x9fe055[0x3] : null), this['_compileTo' + 'Tree'](_0x556fe1, _0x559bb5['split']('\x0a'), 0x0, _0x3d550e, _0x5c8153), _0x556fe1['text'] = '';
                                continue;
                            }
                            _0x556fe1['setConditi' + 'on'](_0x9fe055[0x0]['substr'](_0x118f5 + 0x1), _0x33d6e0['ShaderComp' + 'ile']['IFDEF_YES']), _0x556fe1['text'] = _0x1199e8['getWith']('with' == _0x9fe055[0x2] ? _0x9fe055[0x3] : null);
                            break;
                        case '#import':
                            _0x49fd36 = (_0x9fe055 = _0x33d6e0['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x559bb5, null))[0x1], _0x3d550e['push']({
                                'node': _0x556fe1,
                                'file': _0x33d6e0['ShaderComp' + 'ile']['includes'][_0x49fd36],
                                'ofs': _0x556fe1['text']['length']
                            });
                            continue;
                        }
                    } else {
                        if ((_0x1ddd03 = _0x2353cd['childs'][_0x2353cd['childs']['length'] - 0x1]) && !_0x1ddd03['name']) {
                            _0x3d550e['length'] > 0x0 && _0x33d6e0['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x559bb5, _0x1ddd03), _0x13a934 = _0x556fe1, _0x1ddd03['text'] += '\x0a' + _0x559bb5;
                            continue;
                        }
                        _0x3d550e['length'] > 0x0 && _0x33d6e0['ShaderComp' + 'ile']['splitToWor' + 'ds'](_0x559bb5, _0x556fe1);
                    }
                    _0x556fe1['setParent'](_0x2353cd);
                }
        }
        ['_resizeCac' + 'heShaderMa' + 'p'](_0x267a35, _0x481b3b, _0x33c78d) {
            var _0x497b9e = this['_cacheShad' + 'erHierarch' + 'y'] - 0x1;
            if (_0x481b3b == _0x497b9e) {
                for (var _0x3c421d in _0x267a35)
                    for (var _0xdc982b = _0x267a35[_0x3c421d], _0x4439bf = 0x0, _0x12cb8b = _0x33c78d - _0x497b9e; _0x4439bf < _0x12cb8b; _0x4439bf++)
                        _0x4439bf == _0x12cb8b - 0x1 ? _0x267a35[0x0] = _0xdc982b : _0x267a35 = _0x267a35[0x0 == _0x4439bf ? _0x3c421d : 0x0] = {};
                this['_cacheShad' + 'erHierarch' + 'y'] = _0x33c78d;
            } else {
                for (var _0x3c421d in _0x267a35)
                    this['_resizeCac' + 'heShaderMa' + 'p'](_0x267a35[_0x3c421d], ++_0x481b3b, _0x33c78d);
            }
        }
        ['_addDebugS' + 'haderVaria' + 'ntCollecti' + 'on'](_0xb793eb) {
            var _0x2a3926 = _0x1ede74['_debugShad' + 'erVariantI' + 'nfo'], _0x92da5f = this['_owner'], _0x40115b = _0x92da5f['_owner'], _0x3d432f = _0x2211b6['_debugDefi' + 'neString'];
            if (_0x1ede74['_getNamesB' + 'yDefineDat' + 'a'](_0xb793eb, _0x3d432f), !_0x237093['_config']['_multiLigh' + 'ting']) {
                var _0x100429 = _0x3d432f['indexOf']('LEGACYSING' + 'LELIGHTING');
                -0x1 !== _0x100429 && _0x3d432f['splice'](_0x100429, 0x1);
            }
            _0x2a3926 ? _0x2a3926['setValue'](_0x40115b, _0x40115b['_subShader' + 's']['indexOf'](_0x92da5f), _0x92da5f['_passes']['indexOf'](this), _0x3d432f) : _0x1ede74['_debugShad' + 'erVariantI' + 'nfo'] = _0x2a3926 = new _0x268bb3(_0x40115b, _0x40115b['_subShader' + 's']['indexOf'](_0x92da5f), _0x92da5f['_passes']['indexOf'](this), _0x3d432f), _0x1ede74['debugShade' + 'rVariantCo' + 'llection']['add'](_0x2a3926);
        }
        ['withCompil' + 'e'](_0x28e748) {
            _0x28e748['_intersect' + 'ionDefineD' + 'atas'](this['_validDefi' + 'ne']), _0x1ede74['debugMode'] && this['_addDebugS' + 'haderVaria' + 'ntCollecti' + 'on'](_0x28e748);
            var _0x49ba93 = this['_cacheShar' + 'ders'], _0x316aa4 = _0x28e748['_length'];
            _0x316aa4 > this['_cacheShad' + 'erHierarch' + 'y'] && (this['_resizeCac' + 'heShaderMa' + 'p'](_0x49ba93, 0x0, _0x316aa4), this['_cacheShad' + 'erHierarch' + 'y'] = _0x316aa4);
            for (var _0x342817 = _0x28e748['_mask'], _0x1c4dc2 = _0x28e748['_length'] - 0x1, _0x598459 = this['_cacheShad' + 'erHierarch' + 'y'] - 0x1, _0x5cf4f1 = 0x0; _0x5cf4f1 < _0x598459; _0x5cf4f1++) {
                var _0x4ef5e4 = _0x1c4dc2 < _0x5cf4f1 ? 0x0 : _0x342817[_0x5cf4f1], _0x552a63 = _0x49ba93[_0x4ef5e4];
                _0x552a63 || (_0x49ba93[_0x4ef5e4] = _0x552a63 = {}), _0x49ba93 = _0x552a63;
            }
            var _0x2fa93e = _0x1c4dc2 < _0x598459 ? 0x0 : _0x342817[_0x598459], _0xf14426 = _0x49ba93[_0x2fa93e];
            if (_0xf14426)
                return _0xf14426;
            var _0x20475e = _0x2211b6['_defineStr' + 'ing'];
            _0x1ede74['_getNamesB' + 'yDefineDat' + 'a'](_0x28e748, _0x20475e);
            var _0x34e421 = _0x237093['_config'], _0x27abe1 = _0x34e421['lightClust' + 'erCount'], _0x44cf01 = {}, _0x38573b = '#define\x20MA' + 'X_LIGHT_CO' + 'UNT\x20' + _0x34e421['maxLightCo' + 'unt'] + '\x0a';
            _0x38573b += '#define\x20MA' + 'X_LIGHT_CO' + 'UNT_PER_CL' + 'USTER\x20' + _0x34e421['_maxAreaLi' + 'ghtCountPe' + 'rClusterAv' + 'erage'] + '\x0a', _0x38573b += '#define\x20CL' + 'USTER_X_CO' + 'UNT\x20' + _0x27abe1['x'] + '\x0a', _0x38573b += '#define\x20CL' + 'USTER_Y_CO' + 'UNT\x20' + _0x27abe1['y'] + '\x0a', _0x38573b += '#define\x20CL' + 'USTER_Z_CO' + 'UNT\x20' + _0x27abe1['z'] + '\x0a', _0x5cf4f1 = 0x0;
            for (var _0x2409d0 = _0x20475e['length']; _0x5cf4f1 < _0x2409d0; _0x5cf4f1++) {
                var _0x4a657e = _0x20475e[_0x5cf4f1];
                _0x38573b += '#define\x20' + _0x4a657e + '\x0a', _0x44cf01[_0x4a657e] = !0x0;
            }
            var _0x4273dc = this['_VS']['toscript'](_0x44cf01, []), _0x55885c = '';
            0x0 == _0x4273dc[0x0]['indexOf']('#version') && (_0x55885c = _0x4273dc[0x0] + '\x0a', _0x4273dc['shift']());
            var _0x1dcb3a = this['_PS']['toscript'](_0x44cf01, []), _0x5de693 = '';
            if (0x0 == _0x1dcb3a[0x0]['indexOf']('#version') && (_0x5de693 = _0x1dcb3a[0x0] + '\x0a', _0x1dcb3a['shift']()), _0xf14426 = new _0x30a211(_0x55885c + _0x38573b + _0x4273dc['join']('\x0a'), _0x5de693 + _0x38573b + _0x1dcb3a['join']('\x0a'), this['_owner']['_attribute' + 'Map'] || this['_owner']['_owner']['_attribute' + 'Map'], this['_owner']['_uniformMa' + 'p'] || this['_owner']['_owner']['_uniformMa' + 'p'], this), _0x49ba93[_0x2fa93e] = _0xf14426, _0x1ede74['debugMode']) {
                var _0x555ae3 = '', _0x21db75 = '';
                if (!_0x34e421['_multiLigh' + 'ting']) {
                    _0x28e748['remove'](_0x1ede74['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING']);
                    var _0x943fba = _0x20475e['indexOf']('LEGACYSING' + 'LELIGHTING');
                    -0x1 !== _0x943fba && _0x20475e['splice'](_0x943fba, 0x1);
                }
                for (_0x5cf4f1 = 0x0, _0x2409d0 = _0x28e748['_length']; _0x5cf4f1 < _0x2409d0; _0x5cf4f1++)
                    _0x21db75 += _0x5cf4f1 == _0x2409d0 - 0x1 ? _0x342817[_0x5cf4f1] : _0x342817[_0x5cf4f1] + ',';
                for (_0x5cf4f1 = 0x0, _0x2409d0 = _0x20475e['length']; _0x5cf4f1 < _0x2409d0; _0x5cf4f1++)
                    _0x555ae3 += _0x5cf4f1 == _0x2409d0 - 0x1 ? _0x20475e[_0x5cf4f1] : _0x20475e[_0x5cf4f1] + ',';
                console['log']('%cLayaAir:' + '\x20Shader\x20Co' + 'mpile\x20Info' + 'rmation---' + 'ShaderName' + ':' + this['_owner']['_owner']['_name'] + ('\x20SubShader' + 'Index:') + this['_owner']['_owner']['_subShader' + 's']['indexOf'](this['_owner']) + ('\x20PassIndex' + ':') + this['_owner']['_passes']['indexOf'](this) + ('\x20DefineMas' + 'k:[') + _0x21db75 + (']\x20DefineNa' + 'mes:[') + _0x555ae3 + ']', 'color:gree' + 'n');
            }
            return _0xf14426;
        }
    }
    _0x2211b6['_defineStr' + 'ing'] = [], _0x2211b6['_debugDefi' + 'neString'] = [];
    class _0x3c43ef {
        constructor(_0x4138ed, _0x224fb8) {
            this['_flags'] = {}, this['_passes'] = [], this['_attribute' + 'Map'] = _0x4138ed, this['_uniformMa' + 'p'] = _0x224fb8;
        }
        ['setFlag'](_0x5a0d56, _0x1fc12e) {
            _0x1fc12e ? this['_flags'][_0x5a0d56] = _0x1fc12e : delete this['_flags'][_0x5a0d56];
        }
        ['getFlag'](_0x39c082) {
            return this['_flags'][_0x39c082];
        }
        ['addShaderP' + 'ass'](_0x1b9028, _0x3a9070, _0x3c26e9 = null) {
            var _0x33d697 = new _0x2211b6(this, _0x1b9028, _0x3a9070, _0x3c26e9);
            return this['_passes']['push'](_0x33d697), _0x33d697;
        }
    }
    class _0x55ff6a {
        constructor() {
        }
        static ['__init__']() {
            _0x1ede74['SHADERDEFI' + 'NE_LEGACYS' + 'INGALLIGHT' + 'ING'] = _0x1ede74['getDefineB' + 'yName']('LEGACYSING' + 'LELIGHTING'), _0x1ede74['addInclude']('Lighting.g' + 'lsl', _0x421779), _0x1ede74['addInclude']('ShadowHelp' + 'er.glsl', _0x52ebdb), _0x1ede74['addInclude']('BRDF.glsl', _0x57331a), _0x1ede74['addInclude']('PBRUtils.g' + 'lsl', _0xe8c665), _0x1ede74['addInclude']('PBRStandar' + 'dLighting.' + 'glsl', _0x3b615f), _0x1ede74['addInclude']('PBRSpecula' + 'rLighting.' + 'glsl', _0x1cb81c), _0x1ede74['addInclude']('Colors.gls' + 'l', _0x522ef7), _0x1ede74['addInclude']('Sampling.g' + 'lsl', _0x49157e), _0x1ede74['addInclude']('StdLib.gls' + 'l', _0x20b8dd);
            var _0x41f178 = {
                    'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                    'a_Color': _0xe3d46['MESH_COLOR' + '0'],
                    'a_Normal': _0xe3d46['MESH_NORMA' + 'L0'],
                    'a_Texcoord0': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                    'a_Texcoord1': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE1'],
                    'a_BoneWeights': _0xe3d46['MESH_BLEND' + 'WEIGHT0'],
                    'a_BoneIndices': _0xe3d46['MESH_BLEND' + 'INDICES0'],
                    'a_Tangent0': _0xe3d46['MESH_TANGE' + 'NT0'],
                    'a_MvpMatrix': _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0'],
                    'a_WorldMat': _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '0']
                }, _0x88f900 = {
                    'u_Bones': _0x1ede74['PERIOD_CUS' + 'TOM'],
                    'u_DiffuseTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_SpecularTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_NormalTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_AlphaTestValue': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_DiffuseColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_MaterialSpecular': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_Shininess': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                    'u_WorldMat': _0x1ede74['PERIOD_SPR' + 'ITE'],
                    'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                    'u_LightmapScaleOffset': _0x1ede74['PERIOD_SPR' + 'ITE'],
                    'u_LightMap': _0x1ede74['PERIOD_SPR' + 'ITE'],
                    'u_CameraPos': _0x1ede74['PERIOD_CAM' + 'ERA'],
                    'u_Viewport': _0x1ede74['PERIOD_CAM' + 'ERA'],
                    'u_ProjectionParams': _0x1ede74['PERIOD_CAM' + 'ERA'],
                    'u_View': _0x1ede74['PERIOD_CAM' + 'ERA'],
                    'u_ReflectTexture': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_ReflectIntensity': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_DirationLightCount': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_LightBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_LightClusterBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_AmbientColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_shadowMap1': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_shadowMap2': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_shadowMap3': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_shadowPSSMDistance': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_lightShadowVP': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_shadowPCFoffset': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_DirectionLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_PointLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_PointLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_PointLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.spot': _0x1ede74['PERIOD_SCE' + 'NE'],
                    'u_SpotLight.color': _0x1ede74['PERIOD_SCE' + 'NE']
                }, _0x394f76 = {
                    's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                    's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                    's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                    's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                    's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                    's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
                }, _0x1880e5 = _0x1ede74['add']('BLINNPHONG', null, null, !0x0), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900);
            _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x2f6792, _0x5e9f89, _0x394f76), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Color': _0xe3d46['MESH_COLOR' + '0']
            }, _0x88f900 = {
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_Color': _0x1ede74['PERIOD_MAT' + 'ERIAL']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('LineShader'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x1ab2be, _0x56d476, _0x394f76), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Normal': _0xe3d46['MESH_NORMA' + 'L0'],
                'a_Tangent0': _0xe3d46['MESH_TANGE' + 'NT0'],
                'a_Texcoord0': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0xe3d46['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0xe3d46['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0'],
                'a_WorldMat': _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '0']
            }, _0x88f900 = {
                'u_Bones': _0x1ede74['PERIOD_CUS' + 'TOM'],
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_View': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_ProjectionParams': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_Viewport': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_AlphaTestValue': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_EmissionColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_NormalTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_ParallaxTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_MetallicGlossTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_OcclusionTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_EmissionTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_metallic': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_smoothness': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_smoothnessScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_occlusionStrength': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_normalScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_parallaxScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_ReflectTexture': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_ReflectIntensity': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_AmbientColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap1': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap2': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap3': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowPSSMDistance': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_lightShadowVP': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowPCFoffset': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirationLightCount': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_LightBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_LightClusterBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.spot': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.color': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('PBRStandar' + 'd', null, null, !0x0), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x3a9be2, _0x52d95b, _0x394f76), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Normal': _0xe3d46['MESH_NORMA' + 'L0'],
                'a_Tangent0': _0xe3d46['MESH_TANGE' + 'NT0'],
                'a_Texcoord0': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0xe3d46['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0xe3d46['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0'],
                'a_WorldMat': _0xe3d46['MESH_WORLD' + 'MATRIX_ROW' + '0']
            }, _0x88f900 = {
                'u_Bones': _0x1ede74['PERIOD_CUS' + 'TOM'],
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_View': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_ProjectionParams': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_Viewport': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_AlphaTestValue': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_SpecularColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_EmissionColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_NormalTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_ParallaxTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_SpecularTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_OcclusionTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_EmissionTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_smoothness': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_smoothnessScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_occlusionStrength': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_normalScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_parallaxScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_ReflectTexture': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_ReflectIntensity': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_AmbientColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap1': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap2': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap3': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowPSSMDistance': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_lightShadowVP': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowPCFoffset': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirationLightCount': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_LightBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_LightClusterBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.spot': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.color': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('PBRSpecula' + 'r', null, null, !0x0), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x2d078c, _0x2c3b1a, _0x394f76), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Color': _0xe3d46['MESH_COLOR' + '0'],
                'a_Texcoord0': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0xe3d46['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0xe3d46['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0']
            }, _0x88f900 = {
                'u_Bones': _0x1ede74['PERIOD_CUS' + 'TOM'],
                'u_AlbedoTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlphaTestValue': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('Unlit', null, null, !0x0), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x1788fb, _0x49b018, _0x394f76), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Texcoord0': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0'],
                'a_BoneWeights': _0xe3d46['MESH_BLEND' + 'WEIGHT0'],
                'a_BoneIndices': _0xe3d46['MESH_BLEND' + 'INDICES0'],
                'a_MvpMatrix': _0xe3d46['MESH_MVPMA' + 'TRIX_ROW0']
            }, _0x88f900 = {
                'u_Bones': _0x1ede74['PERIOD_CUS' + 'TOM'],
                'u_AlbedoTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlbedoColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AlphaTestValue': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('Effect', null, null, !0x0), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x2ad512, _0x440793, _0x394f76), _0x41f178 = {
                'a_CornerTextureCoordinate': _0x391bdc['PARTICLE_C' + 'ORNERTEXTU' + 'RECOORDINA' + 'TE0'],
                'a_MeshPosition': _0x391bdc['PARTICLE_P' + 'OSITION0'],
                'a_MeshColor': _0x391bdc['PARTICLE_C' + 'OLOR0'],
                'a_MeshTextureCoordinate': _0x391bdc['PARTICLE_T' + 'EXTURECOOR' + 'DINATE0'],
                'a_ShapePositionStartLifeTime': _0x391bdc['PARTICLE_S' + 'HAPEPOSITI' + 'ONSTARTLIF' + 'ETIME'],
                'a_DirectionTime': _0x391bdc['PARTICLE_D' + 'IRECTIONTI' + 'ME'],
                'a_StartColor': _0x391bdc['PARTICLE_S' + 'TARTCOLOR0'],
                'a_EndColor': _0x391bdc['PARTICLE_E' + 'NDCOLOR0'],
                'a_StartSize': _0x391bdc['PARTICLE_S' + 'TARTSIZE'],
                'a_StartRotation0': _0x391bdc['PARTICLE_S' + 'TARTROTATI' + 'ON'],
                'a_StartSpeed': _0x391bdc['PARTICLE_S' + 'TARTSPEED'],
                'a_Random0': _0x391bdc['PARTICLE_R' + 'ANDOM0'],
                'a_Random1': _0x391bdc['PARTICLE_R' + 'ANDOM1'],
                'a_SimulationWorldPostion': _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDPOSTIO' + 'N'],
                'a_SimulationWorldRotation': _0x391bdc['PARTICLE_S' + 'IMULATIONW' + 'ORLDROTATI' + 'ON']
            }, _0x88f900 = {
                'u_Tintcolor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_texture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_WorldPosition': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WorldRotation': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_PositionScale': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SizeScale': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ScalingMode': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_Gravity': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ThreeDStartRotation': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_StretchedBillboardLengthScale': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_StretchedBillboardSpeedScale': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SimulationSpace': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_CurrentTime': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ColorOverLifeGradientAlphas': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ColorOverLifeGradientColors': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_MaxColorOverLifeGradientAlphas': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_MaxColorOverLifeGradientColors': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityConst': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientX': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientY': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientZ': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityConstMax': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxX': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxY': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLVelocityGradientMaxZ': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_VOLSpaceType': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradient': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientX': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientY': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientZ': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMax': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxX': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxY': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SOLSizeGradientMaxZ': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConst': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstSeprarate': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradient': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientX': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientY': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientZ': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstMax': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityConstMaxSeprarate': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMax': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxX': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxY': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxZ': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_ROLAngularVelocityGradientMaxW': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_TSACycles': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_TSASubUVLength': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_TSAGradientUVs': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_TSAMaxGradientUVs': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_CameraDirection': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_CameraUp': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_View': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_Projection': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('PARTICLESH' + 'URIKEN'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x200f1c, _0x17b311, _0x394f76), _0x41f178 = { 'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'] }, _0x88f900 = {
                'u_TintColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Exposure': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Rotation': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_CubeTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_ViewProjection': _0x1ede74['PERIOD_CAM' + 'ERA']
            }, _0x1880e5 = _0x1ede74['add']('SkyBox'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x9d714f, _0x14e65d), _0x41f178 = { 'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'] }, _0x88f900 = {
                'u_SunSize': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_SunSizeConvergence': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AtmosphereThickness': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_SkyTint': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_GroundTint': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Exposure': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_ViewProjection': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_SunLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SunLight.color': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x1880e5 = _0x1ede74['add']('SkyBoxProc' + 'edural'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0xaf2f33, _0x9c6f64), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Normal': _0xe3d46['MESH_NORMA' + 'L0'],
                'a_Texcoord0': _0xe3d46['MESH_TEXTU' + 'RECOORDINA' + 'TE0']
            }, _0x88f900 = {
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_Viewport': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_ProjectionParams': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_View': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_LightmapScaleOffset': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_LightMap': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_SplatAlphaTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture1': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture2': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture3': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture4': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseTexture5': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset1': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset2': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset3': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset4': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_DiffuseScaleOffset5': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_FogStart': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogRange': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_FogColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirationLightCount': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_LightBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_LightClusterBuffer': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_AmbientColor': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap1': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap2': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowMap3': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowPSSMDistance': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_lightShadowVP': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_shadowPCFoffset': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_DirectionLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_PointLight.color': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.position': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.direction': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.range': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.spot': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_SpotLight.color': _0x1ede74['PERIOD_SCE' + 'NE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('ExtendTerr' + 'ain'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x4a2cfa, _0xd7e112, _0x394f76), _0x41f178 = {
                'a_Position': _0x16bb26['TRAIL_POSI' + 'TION0'],
                'a_OffsetVector': _0x16bb26['TRAIL_OFFS' + 'ETVECTOR'],
                'a_Texcoord0X': _0x16bb26['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0X'],
                'a_Texcoord0Y': _0x16bb26['TRAIL_TEXT' + 'URECOORDIN' + 'ATE0Y'],
                'a_BirthTime': _0x16bb26['TRAIL_TIME' + '0'],
                'a_Color': _0x16bb26['TRAIL_COLO' + 'R']
            }, _0x88f900 = {
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_View': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_Projection': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_TilingOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_MainTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_MainColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_CurTime': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_LifeTime': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WidthCurve': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WidthCurveKeyLength': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_GradientColorkey': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_GradientAlphakey': _0x1ede74['PERIOD_SPR' + 'ITE']
            }, _0x394f76 = {
                's_Cull': _0x1ede74['RENDER_STA' + 'TE_CULL'],
                's_Blend': _0x1ede74['RENDER_STA' + 'TE_BLEND'],
                's_BlendSrc': _0x1ede74['RENDER_STA' + 'TE_BLEND_S' + 'RC'],
                's_BlendDst': _0x1ede74['RENDER_STA' + 'TE_BLEND_D' + 'ST'],
                's_DepthTest': _0x1ede74['RENDER_STA' + 'TE_DEPTH_T' + 'EST'],
                's_DepthWrite': _0x1ede74['RENDER_STA' + 'TE_DEPTH_W' + 'RITE']
            }, _0x1880e5 = _0x1ede74['add']('Trail'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x261fea, _0xe433c0, _0x394f76), _0x41f178 = {
                'a_Position': _0xe3d46['MESH_POSIT' + 'ION0'],
                'a_Normal': _0xe3d46['MESH_NORMA' + 'L0'],
                'a_Tangent0': _0xe3d46['MESH_TANGE' + 'NT0']
            }, _0x88f900 = {
                'u_MvpMatrix': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_WorldMat': _0x1ede74['PERIOD_SPR' + 'ITE'],
                'u_CameraPos': _0x1ede74['PERIOD_CAM' + 'ERA'],
                'u_Time': _0x1ede74['PERIOD_SCE' + 'NE'],
                'u_MainTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_NormalTexture': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_HorizonColor': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_WaveScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_WaveSpeed': _0x1ede74['PERIOD_MAT' + 'ERIAL']
            }, _0x1880e5 = _0x1ede74['add']('WaterPrima' + 'ry'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), _0x2a1211['addShaderP' + 'ass'](_0x390445, _0x419ad9), _0x41f178 = { 'a_PositionTexcoord': _0xe3d46['MESH_POSIT' + 'ION0'] }, _0x88f900 = {
                'u_MainTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_OffsetScale': _0x1ede74['PERIOD_MAT' + 'ERIAL']
            }, _0x1880e5 = _0x1ede74['add']('BlitScreen'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211);
            var _0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x108812, _0x1afde5), _0x5c0c5b = _0x236469['renderStat' + 'e'];
            _0x5c0c5b['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x41f178 = { 'a_PositionTexcoord': _0xe3d46['MESH_POSIT' + 'ION0'] }, _0x88f900 = {
                'u_MainTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AutoExposureTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_MainTex_TexelSize': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_SampleScale': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Threshold': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Params': _0x1ede74['PERIOD_MAT' + 'ERIAL']
            }, _0x1880e5 = _0x1ede74['add']('PostProces' + 'sBloom'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x1eca05, _0x542b97))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x1eca05, _0x299033))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x1eca05, _0x1d4df4))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x1eca05, _0x20cc2a))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x1eca05, _0x271967))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x1eca05, _0x3dc610))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'], _0x41f178 = { 'a_PositionTexcoord': _0xe3d46['MESH_POSIT' + 'ION0'] }, _0x88f900 = {
                'u_MainTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_AutoExposureTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_DirtTileOffset': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_DirtTex': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_BloomTex_TexelSize': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_Settings': _0x1ede74['PERIOD_MAT' + 'ERIAL'],
                'u_Bloom_Color': _0x1ede74['PERIOD_MAT' + 'ERIAL']
            }, _0x1880e5 = _0x1ede74['add']('PostProces' + 'sComposite'), _0x2a1211 = new _0x3c43ef(_0x41f178, _0x88f900), _0x1880e5['addSubShad' + 'er'](_0x2a1211), (_0x5c0c5b = (_0x236469 = _0x2a1211['addShaderP' + 'ass'](_0x4f02ff, _0x169a42))['renderStat' + 'e'])['depthTest'] = _0x311b27['DEPTHTEST_' + 'ALWAYS'], _0x5c0c5b['depthWrite'] = !0x1, _0x5c0c5b['cull'] = _0x311b27['CULL_NONE'], _0x5c0c5b['blend'] = _0x311b27['BLEND_DISA' + 'BLE'];
        }
    }
    class _0x362004 {
        constructor() {
            var _0x2588fc;
            for (this['_spiltDist' + 'ance'] = [], this['_currentPS' + 'SM'] = -0x1, this['_shadowMap' + 'Count'] = 0x3, this['_maxDistan' + 'ce'] = 0xc8, this['_ratioOfDi' + 'stance'] = 0x1 / this['_shadowMap' + 'Count'], this['_globalPar' + 'allelLight' + 'Dir'] = new _0x4795b3(0x0, -0x1, 0x0), this['_statesDir' + 'ty'] = !0x0, this['_shadowMap' + 'TextureSiz' + 'e'] = 0x400, this['_scene'] = null, this['_boundingS' + 'phere'] = new Array(_0x362004['MAX_PSSM_C' + 'OUNT'] + 0x1), this['_boundingB' + 'ox'] = new Array(_0x362004['MAX_PSSM_C' + 'OUNT'] + 0x1), this['_frustumPo' + 's'] = new Array(0x4 * (_0x362004['MAX_PSSM_C' + 'OUNT'] + 0x1)), this['_uniformDi' + 'stance'] = new Array(_0x362004['MAX_PSSM_C' + 'OUNT'] + 0x1), this['_logDistan' + 'ce'] = new Array(_0x362004['MAX_PSSM_C' + 'OUNT'] + 0x1), this['_dimension'] = new Array(_0x362004['MAX_PSSM_C' + 'OUNT'] + 0x1), this['_PCFType'] = 0x0, this['_tempLookA' + 't3'] = new _0x4795b3(), this['_tempLookA' + 't4'] = new _0x333f41(), this['_tempValue'] = new _0x333f41(), this['_tempPos'] = new _0x4795b3(), this['_tempLight' + 'Up'] = new _0x4795b3(), this['_tempMin'] = new _0x333f41(), this['_tempMax'] = new _0x333f41(), this['_tempMatri' + 'x44'] = new _0x16c2be(), this['_splitFrus' + 'tumCulling'] = new _0x5387d2(_0x16c2be['DEFAULT']), this['_tempScale' + 'Matrix44'] = new _0x16c2be(), this['_shadowPCF' + 'Offset'] = new _0x4c44b6(0x1 / 0x400, 0x1 / 0x400), this['_shaderVal' + 'ueDistance'] = new _0x333f41(), this['_shaderVal' + 'ueLightVP'] = null, this['cameras'] = [], this['_shaderVal' + 'ueVPs'] = [], _0x2588fc = 0x0; _0x2588fc < this['_spiltDist' + 'ance']['length']; _0x2588fc++)
                this['_spiltDist' + 'ance'][_0x2588fc] = 0x0;
            for (_0x2588fc = 0x0; _0x2588fc < this['_dimension']['length']; _0x2588fc++)
                this['_dimension'][_0x2588fc] = new _0x4c44b6();
            for (_0x2588fc = 0x0; _0x2588fc < this['_frustumPo' + 's']['length']; _0x2588fc++)
                this['_frustumPo' + 's'][_0x2588fc] = new _0x4795b3();
            for (_0x2588fc = 0x0; _0x2588fc < this['_boundingB' + 'ox']['length']; _0x2588fc++)
                this['_boundingB' + 'ox'][_0x2588fc] = new _0x3555e9(new _0x4795b3(), new _0x4795b3());
            for (_0x2588fc = 0x0; _0x2588fc < this['_boundingS' + 'phere']['length']; _0x2588fc++)
                this['_boundingS' + 'phere'][_0x2588fc] = new _0x43c0d5(new _0x4795b3(), 0x0);
            _0x16c2be['createScal' + 'ing'](new _0x4795b3(0.5, 0.5, 0x1), this['_tempScale' + 'Matrix44']), this['_tempScale' + 'Matrix44']['elements'][0xc] = 0.5, this['_tempScale' + 'Matrix44']['elements'][0xd] = 0.5;
        }
        ['setInfo'](_0xcf25a9, _0x253abf, _0x479869, _0xdd6683, _0x338972, _0x3ebff5) {
            _0x338972 > _0x362004['MAX_PSSM_C' + 'OUNT'] && (this['_shadowMap' + 'Count'] = _0x362004['MAX_PSSM_C' + 'OUNT']), this['_scene'] = _0xcf25a9, this['_maxDistan' + 'ce'] = _0x253abf, this['shadowMapC' + 'ount'] = _0x338972, this['_globalPar' + 'allelLight' + 'Dir'] = _0x479869, this['_ratioOfDi' + 'stance'] = 0x1 / this['_shadowMap' + 'Count'];
            for (var _0x42c3b1 = 0x0; _0x42c3b1 < this['_spiltDist' + 'ance']['length']; _0x42c3b1++)
                this['_spiltDist' + 'ance'][_0x42c3b1] = 0x0;
            this['_shadowMap' + 'TextureSiz' + 'e'] = _0xdd6683, this['_shadowPCF' + 'Offset']['x'] = 0x1 / this['_shadowMap' + 'TextureSiz' + 'e'], this['_shadowPCF' + 'Offset']['y'] = 0x1 / this['_shadowMap' + 'TextureSiz' + 'e'], this['setPCFType'](_0x3ebff5), this['_statesDir' + 'ty'] = !0x0;
        }
        ['setPCFType'](_0x1e3e6c) {
            this['_PCFType'] = _0x1e3e6c;
            var _0x5abbfc = this['_scene']['_shaderVal' + 'ues'];
            switch (this['_PCFType']) {
            case 0x0:
                _0x5abbfc['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF_NO']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF1']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF2']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF3']);
                break;
            case 0x1:
                _0x5abbfc['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF1']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF_NO']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF2']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF3']);
                break;
            case 0x2:
                _0x5abbfc['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF2']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF_NO']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF1']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF3']);
                break;
            case 0x3:
                _0x5abbfc['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF3']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF_NO']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF1']), _0x5abbfc['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PCF2']);
            }
        }
        ['getPCFType']() {
            return this['_PCFType'];
        }
        ['setFarDist' + 'ance'](_0x494156) {
            this['_maxDistan' + 'ce'] != _0x494156 && (this['_maxDistan' + 'ce'] = _0x494156, this['_statesDir' + 'ty'] = !0x0);
        }
        ['getFarDist' + 'ance']() {
            return this['_maxDistan' + 'ce'];
        }
        set ['shadowMapC' + 'ount'](_0x427fc6) {
            if (_0x427fc6 = (_0x427fc6 = _0x427fc6 > 0x0 ? _0x427fc6 : 0x1) <= _0x362004['MAX_PSSM_C' + 'OUNT'] ? _0x427fc6 : _0x362004['MAX_PSSM_C' + 'OUNT'], this['_shadowMap' + 'Count'] != _0x427fc6) {
                this['_shadowMap' + 'Count'] = _0x427fc6, this['_ratioOfDi' + 'stance'] = 0x1 / this['_shadowMap' + 'Count'], this['_statesDir' + 'ty'] = !0x0, this['_shaderVal' + 'ueLightVP'] = new Float32Array(0x10 * _0x427fc6), this['_shaderVal' + 'ueVPs']['length'] = _0x427fc6;
                for (var _0x54b638 = 0x0; _0x54b638 < _0x427fc6; _0x54b638++)
                    this['_shaderVal' + 'ueVPs'][_0x54b638] = new Float32Array(this['_shaderVal' + 'ueLightVP']['buffer'], 0x40 * _0x54b638);
            }
        }
        get ['shadowMapC' + 'ount']() {
            return this['_shadowMap' + 'Count'];
        }
        ['_beginSamp' + 'ler'](_0x7182ca, _0x108792) {
            if (_0x7182ca < 0x0 || _0x7182ca > this['_shadowMap' + 'Count'])
                throw new Error('ParallelSp' + 'litShadowM' + 'ap:\x20beginS' + 'ample\x20inva' + 'lid\x20index');
            this['_currentPS' + 'SM'] = _0x7182ca, this['_update'](_0x108792);
        }
        ['endSampler'](_0x5b7d49) {
            this['_currentPS' + 'SM'] = -0x1;
        }
        ['_calcAllLi' + 'ghtCameraI' + 'nfo'](_0x52dd8d) {
            if (0x1 === this['_shadowMap' + 'Count'])
                this['_beginSamp' + 'ler'](0x0, _0x52dd8d), this['endSampler'](_0x52dd8d);
            else {
                for (var _0x471e54 = 0x0, _0x3eb546 = this['_shadowMap' + 'Count'] + 0x1; _0x471e54 < _0x3eb546; _0x471e54++)
                    this['_beginSamp' + 'ler'](_0x471e54, _0x52dd8d), this['endSampler'](_0x52dd8d);
            }
        }
        ['_recalcula' + 'te'](_0x3ebdc0, _0x2c2684, _0x8285c7) {
            this['_calcSplit' + 'Distance'](_0x3ebdc0), this['_calcBound' + 'ingBox'](_0x2c2684, _0x8285c7), this['_rebuildRe' + 'nderInfo']();
        }
        ['_update'](_0x14bb09) {
            var _0x5764e7 = _0x14bb09['nearPlane'], _0x4b0171 = _0x14bb09['fieldOfVie' + 'w'], _0x70dbfa = _0x14bb09['aspectRati' + 'o'];
            (this['_statesDir' + 'ty'] || this['lastNearPl' + 'ane'] !== _0x5764e7 || this['lastFieldO' + 'fView'] !== _0x4b0171 || this['lastAspect' + 'Ratio'] !== _0x70dbfa) && (this['_recalcula' + 'te'](_0x5764e7, _0x4b0171, _0x70dbfa), this['_uploadSha' + 'derValue'](), this['_statesDir' + 'ty'] = !0x1, this['lastNearPl' + 'ane'] = _0x5764e7, this['lastFieldO' + 'fView'] = _0x4b0171, this['lastAspect' + 'Ratio'] = _0x70dbfa), this['_calcLight' + 'ViewProjec' + 't'](_0x14bb09);
        }
        ['_uploadSha' + 'derValue']() {
            var _0x44c64b = this['_scene']['_shaderVal' + 'ues'];
            switch (this['_shadowMap' + 'Count']) {
            case 0x1:
                _0x44c64b['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM1']), _0x44c64b['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM2']), _0x44c64b['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM3']);
                break;
            case 0x2:
                _0x44c64b['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM2']), _0x44c64b['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM1']), _0x44c64b['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM3']);
                break;
            case 0x3:
                _0x44c64b['addDefine'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM3']), _0x44c64b['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM1']), _0x44c64b['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM2']);
            }
            switch (_0x44c64b['setVector'](_0x334864['Scene3D']['SHADOWDIST' + 'ANCE'], this['_shaderVal' + 'ueDistance']), _0x44c64b['setBuffer'](_0x334864['Scene3D']['SHADOWLIGH' + 'TVIEWPROJE' + 'CT'], this['_shaderVal' + 'ueLightVP']), _0x44c64b['setVector2'](_0x334864['Scene3D']['SHADOWMAPP' + 'CFOFFSET'], this['_shadowPCF' + 'Offset']), this['_shadowMap' + 'Count']) {
            case 0x3:
                _0x44c64b['setTexture'](_0x334864['Scene3D']['SHADOWMAPT' + 'EXTURE1'], this['cameras'][0x1]['renderTarg' + 'et']), _0x44c64b['setTexture'](_0x334864['Scene3D']['SHADOWMAPT' + 'EXTURE2'], this['cameras'][0x2]['renderTarg' + 'et']), _0x44c64b['setTexture'](_0x334864['Scene3D']['SHADOWMAPT' + 'EXTURE3'], this['cameras'][0x3]['renderTarg' + 'et']);
                break;
            case 0x2:
                _0x44c64b['setTexture'](_0x334864['Scene3D']['SHADOWMAPT' + 'EXTURE1'], this['cameras'][0x1]['renderTarg' + 'et']), _0x44c64b['setTexture'](_0x334864['Scene3D']['SHADOWMAPT' + 'EXTURE2'], this['cameras'][0x2]['renderTarg' + 'et']);
                break;
            case 0x1:
                _0x44c64b['setTexture'](_0x334864['Scene3D']['SHADOWMAPT' + 'EXTURE1'], this['cameras'][0x1]['renderTarg' + 'et']);
            }
        }
        ['_calcSplit' + 'Distance'](_0x52a3cd) {
            var _0x5498c7, _0x689f41 = this['_maxDistan' + 'ce'], _0xe050ac = 0x1 / this['_shadowMap' + 'Count'];
            for (_0x5498c7 = 0x0; _0x5498c7 <= this['_shadowMap' + 'Count']; _0x5498c7++)
                this['_uniformDi' + 'stance'][_0x5498c7] = _0x52a3cd + (_0x689f41 - _0x52a3cd) * _0x5498c7 * _0xe050ac;
            var _0x4d3267 = _0x689f41 / _0x52a3cd;
            for (_0x5498c7 = 0x0; _0x5498c7 <= this['_shadowMap' + 'Count']; _0x5498c7++) {
                var _0x18f42e = Math['pow'](_0x4d3267, _0x5498c7 * _0xe050ac);
                this['_logDistan' + 'ce'][_0x5498c7] = _0x52a3cd * _0x18f42e;
            }
            for (_0x5498c7 = 0x0; _0x5498c7 <= this['_shadowMap' + 'Count']; _0x5498c7++)
                this['_spiltDist' + 'ance'][_0x5498c7] = this['_uniformDi' + 'stance'][_0x5498c7] * this['_ratioOfDi' + 'stance'] + this['_logDistan' + 'ce'][_0x5498c7] * (0x1 - this['_ratioOfDi' + 'stance']);
            this['_shaderVal' + 'ueDistance']['x'] = null != this['_spiltDist' + 'ance'][0x1] && this['_spiltDist' + 'ance'][0x1], this['_shaderVal' + 'ueDistance']['y'] = null != this['_spiltDist' + 'ance'][0x2] && this['_spiltDist' + 'ance'][0x2], this['_shaderVal' + 'ueDistance']['z'] = null != this['_spiltDist' + 'ance'][0x3] && this['_spiltDist' + 'ance'][0x3], this['_shaderVal' + 'ueDistance']['w'] = null != this['_spiltDist' + 'ance'][0x4] && this['_spiltDist' + 'ance'][0x4];
        }
        ['_calcBound' + 'ingBox'](_0x3ca88e, _0x3cd940) {
            var _0x2f610d, _0x465a91, _0x3d53c5, _0x55fff0, _0x3491d8, _0x31ee76, _0x5bfaf7, _0x567847, _0x2c6783 = 3.1415926 * _0x3ca88e / 0xb4, _0x26edf3 = Math['tan'](_0x2c6783 / 0x2);
            for (_0x55fff0 = 0x0; _0x55fff0 <= this['_shadowMap' + 'Count']; _0x55fff0++) {
                _0x465a91 = (_0x2f610d = (_0x3d53c5 = this['_spiltDist' + 'ance'][_0x55fff0]) * _0x26edf3) * _0x3cd940;
                var _0x29e173 = this['_frustumPo' + 's'][0x4 * _0x55fff0 + 0x0];
                _0x29e173['x'] = -_0x465a91, _0x29e173['y'] = -_0x2f610d, _0x29e173['z'] = -_0x3d53c5, (_0x29e173 = this['_frustumPo' + 's'][0x4 * _0x55fff0 + 0x1])['x'] = _0x465a91, _0x29e173['y'] = -_0x2f610d, _0x29e173['z'] = -_0x3d53c5, (_0x29e173 = this['_frustumPo' + 's'][0x4 * _0x55fff0 + 0x2])['x'] = -_0x465a91, _0x29e173['y'] = _0x2f610d, _0x29e173['z'] = -_0x3d53c5, (_0x29e173 = this['_frustumPo' + 's'][0x4 * _0x55fff0 + 0x3])['x'] = _0x465a91, _0x29e173['y'] = _0x2f610d, _0x29e173['z'] = -_0x3d53c5, (_0x29e173 = this['_dimension'][_0x55fff0])['x'] = _0x465a91, _0x29e173['y'] = _0x2f610d;
            }
            for (_0x55fff0 = 0x1; _0x55fff0 <= this['_shadowMap' + 'Count']; _0x55fff0++)
                _0x3491d8 = this['_dimension'][_0x55fff0], (_0x31ee76 = this['_boundingB' + 'ox'][_0x55fff0]['min'])['x'] = -_0x3491d8['x'], _0x31ee76['y'] = -_0x3491d8['y'], _0x31ee76['z'] = -this['_spiltDist' + 'ance'][_0x55fff0], (_0x5bfaf7 = this['_boundingB' + 'ox'][_0x55fff0]['max'])['x'] = _0x3491d8['x'], _0x5bfaf7['y'] = _0x3491d8['y'], _0x5bfaf7['z'] = -this['_spiltDist' + 'ance'][_0x55fff0 - 0x1], (_0x567847 = this['_boundingS' + 'phere'][_0x55fff0]['center'])['x'] = 0.5 * (_0x31ee76['x'] + _0x5bfaf7['x']), _0x567847['y'] = 0.5 * (_0x31ee76['y'] + _0x5bfaf7['y']), _0x567847['z'] = 0.5 * (_0x31ee76['z'] + _0x5bfaf7['z']), this['_boundingS' + 'phere'][_0x55fff0]['radius'] = 0.5 * Math['sqrt'](Math['pow'](_0x5bfaf7['x'] - _0x31ee76['x'], 0x2) + Math['pow'](_0x5bfaf7['y'] - _0x31ee76['y'], 0x2) + Math['pow'](_0x5bfaf7['z'] - _0x31ee76['z'], 0x2));
            _0x31ee76 = this['_boundingB' + 'ox'][0x0]['min'], _0x3491d8 = this['_dimension'][this['_shadowMap' + 'Count']], _0x31ee76['x'] = -_0x3491d8['x'], _0x31ee76['y'] = -_0x3491d8['y'], _0x31ee76['z'] = -this['_spiltDist' + 'ance'][this['_shadowMap' + 'Count']], (_0x5bfaf7 = this['_boundingB' + 'ox'][0x0]['max'])['x'] = _0x3491d8['x'], _0x5bfaf7['y'] = _0x3491d8['y'], _0x5bfaf7['z'] = -this['_spiltDist' + 'ance'][0x0], (_0x567847 = this['_boundingS' + 'phere'][0x0]['center'])['x'] = 0.5 * (_0x31ee76['x'] + _0x5bfaf7['x']), _0x567847['y'] = 0.5 * (_0x31ee76['y'] + _0x5bfaf7['y']), _0x567847['z'] = 0.5 * (_0x31ee76['z'] + _0x5bfaf7['z']), this['_boundingS' + 'phere'][0x0]['radius'] = 0.5 * Math['sqrt'](Math['pow'](_0x5bfaf7['x'] - _0x31ee76['x'], 0x2) + Math['pow'](_0x5bfaf7['y'] - _0x31ee76['y'], 0x2) + Math['pow'](_0x5bfaf7['z'] - _0x31ee76['z'], 0x2));
        }
        ['calcSplitF' + 'rustum'](_0x1a225c) {
            this['_currentPS' + 'SM'] > 0x0 ? _0x16c2be['createPers' + 'pective'](3.1416 * _0x1a225c['fieldOfVie' + 'w'] / 0xb4, _0x1a225c['aspectRati' + 'o'], this['_spiltDist' + 'ance'][this['_currentPS' + 'SM'] - 0x1], this['_spiltDist' + 'ance'][this['_currentPS' + 'SM']], this['_tempMatri' + 'x44']) : _0x16c2be['createPers' + 'pective'](3.1416 * _0x1a225c['fieldOfVie' + 'w'] / 0xb4, _0x1a225c['aspectRati' + 'o'], this['_spiltDist' + 'ance'][0x0], this['_spiltDist' + 'ance'][this['_shadowMap' + 'Count']], this['_tempMatri' + 'x44']), _0x16c2be['multiply'](this['_tempMatri' + 'x44'], _0x1a225c['viewMatrix'], this['_tempMatri' + 'x44']), this['_splitFrus' + 'tumCulling']['matrix'] = this['_tempMatri' + 'x44'];
        }
        ['_rebuildRe' + 'nderInfo']() {
            var _0x505dc5, _0x2fe59c = this['_shadowMap' + 'Count'] + 0x1;
            for (this['cameras']['length'] = _0x2fe59c, _0x505dc5 = 0x0; _0x505dc5 < _0x2fe59c; _0x505dc5++) {
                if (!this['cameras'][_0x505dc5]) {
                    var _0x222f97 = new _0x4e1b1b();
                    _0x222f97['name'] = 'lightCamer' + 'a' + _0x505dc5, _0x222f97['clearColor'] = new _0x333f41(0x1, 0x1, 0x1, 0x1), this['cameras'][_0x505dc5] = _0x222f97;
                }
                var _0x3de926 = this['cameras'][_0x505dc5]['renderTarg' + 'et'];
                null != _0x3de926 && _0x3de926['width'] == this['_shadowMap' + 'TextureSiz' + 'e'] && _0x3de926['height'] == this['_shadowMap' + 'TextureSiz' + 'e'] || (_0x3de926 && _0x3de926['destroy'](), (_0x3de926 = new _0x3f7a1d(this['_shadowMap' + 'TextureSiz' + 'e'], this['_shadowMap' + 'TextureSiz' + 'e'], _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8A8'], _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTH_16']))['filterMode'] = _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_POINT'], this['cameras'][_0x505dc5]['renderTarg' + 'et'] = _0x3de926);
            }
        }
        ['_calcLight' + 'ViewProjec' + 't'](_0x4e5d01) {
            var _0x32a036 = this['_boundingS' + 'phere'][this['_currentPS' + 'SM']], _0x5bb889 = _0x4e5d01['transform']['worldMatri' + 'x'];
            _0x32a036['radius'], (_0x32a036['center']['cloneTo'](this['_tempLookA' + 't3']), _0x4795b3['transformV' + '3ToV4'](this['_tempLookA' + 't3'], _0x5bb889, this['_tempLookA' + 't4']));
            var _0x2643cd = this['_tempLookA' + 't3'], _0x57eb14 = this['_tempLookA' + 't4'];
            _0x2643cd['x'] = _0x57eb14['x'], _0x2643cd['y'] = _0x57eb14['y'], _0x2643cd['z'] = _0x57eb14['z'];
            var _0x6510c6 = this['_tempLight' + 'Up'];
            _0x4e5d01['transform']['worldMatri' + 'x']['getForward'](_0x362004['_tempVecto' + 'r30']);
            var _0x5017a0 = _0x362004['_tempVecto' + 'r30'];
            _0x6510c6['x'] = _0x5017a0['x'], _0x6510c6['y'] = 0x1, _0x6510c6['z'] = _0x5017a0['z'], _0x4795b3['normalize'](this['_tempLight' + 'Up'], this['_tempLight' + 'Up']), _0x4795b3['scale'](this['_globalPar' + 'allelLight' + 'Dir'], 0x4 * _0x32a036['radius'], this['_tempPos']), _0x4795b3['subtract'](this['_tempLookA' + 't3'], this['_tempPos'], this['_tempPos']);
            var _0x242e66 = this['cameras'][this['_currentPS' + 'SM']];
            _0x242e66['transform']['position'] = this['_tempPos'], _0x242e66['transform']['lookAt'](this['_tempLookA' + 't3'], this['_tempLight' + 'Up'], !0x1);
            var _0x6e12fa = this['_tempMax'], _0x17555c = this['_tempMin'];
            _0x6e12fa['x'] = _0x6e12fa['y'] = _0x6e12fa['z'] = -0x186a0, _0x6e12fa['w'] = 0x1, _0x17555c['x'] = _0x17555c['y'] = _0x17555c['z'] = 0x186a0, _0x17555c['w'] = 0x1, _0x16c2be['multiply'](_0x242e66['viewMatrix'], _0x5bb889, this['_tempMatri' + 'x44']);
            var _0xbe01f1 = this['_tempValue'], _0x3b4d1b = [];
            _0x3b4d1b['length'] = 0x8, this['_boundingB' + 'ox'][this['_currentPS' + 'SM']]['getCorners'](_0x3b4d1b);
            for (var _0x28ffc0 = 0x0; _0x28ffc0 < 0x8; _0x28ffc0++) {
                var _0x34313e = _0x3b4d1b[_0x28ffc0];
                _0xbe01f1['x'] = _0x34313e['x'], _0xbe01f1['y'] = _0x34313e['y'], _0xbe01f1['z'] = _0x34313e['z'], _0xbe01f1['w'] = 0x1, _0x333f41['transformB' + 'yM4x4'](this['_tempValue'], this['_tempMatri' + 'x44'], this['_tempValue']), _0x17555c['x'] = _0xbe01f1['x'] < _0x17555c['x'] ? _0xbe01f1['x'] : _0x17555c['x'], _0x17555c['y'] = _0xbe01f1['y'] < _0x17555c['y'] ? _0xbe01f1['y'] : _0x17555c['y'], _0x17555c['z'] = _0xbe01f1['z'] < _0x17555c['z'] ? _0xbe01f1['z'] : _0x17555c['z'], _0x6e12fa['x'] = _0xbe01f1['x'] > _0x6e12fa['x'] ? _0xbe01f1['x'] : _0x6e12fa['x'], _0x6e12fa['y'] = _0xbe01f1['y'] > _0x6e12fa['y'] ? _0xbe01f1['y'] : _0x6e12fa['y'], _0x6e12fa['z'] = _0xbe01f1['z'] > _0x6e12fa['z'] ? _0xbe01f1['z'] : _0x6e12fa['z'];
            }
            _0x333f41['add'](this['_tempMax'], this['_tempMin'], this['_tempValue']), _0xbe01f1['x'] *= 0.5, _0xbe01f1['y'] *= 0.5, _0xbe01f1['z'] *= 0.5, _0xbe01f1['w'] = 0x1, _0x333f41['transformB' + 'yM4x4'](this['_tempValue'], _0x242e66['transform']['worldMatri' + 'x'], this['_tempValue']);
            var _0x59fd00 = Math['abs'](-this['_tempMax']['z']), _0x8319b5 = _0x59fd00 > this['_maxDistan' + 'ce'] ? _0x59fd00 : this['_maxDistan' + 'ce'];
            _0x4795b3['scale'](this['_globalPar' + 'allelLight' + 'Dir'], _0x8319b5, this['_tempPos']);
            var _0x3ce43f = this['_tempPos'];
            _0x3ce43f['x'] = _0xbe01f1['x'] - _0x3ce43f['x'], _0x3ce43f['y'] = _0xbe01f1['y'] - _0x3ce43f['y'], _0x3ce43f['z'] = _0xbe01f1['z'] - _0x3ce43f['z'], _0x242e66['transform']['position'] = this['_tempPos'], _0x242e66['transform']['lookAt'](this['_tempLookA' + 't3'], this['_tempLight' + 'Up'], !0x1), _0x16c2be['createOrth' + 'oOffCenter'](_0x17555c['x'], _0x6e12fa['x'], _0x17555c['y'], _0x6e12fa['y'], 0x1, _0x8319b5 + 0.5 * (_0x6e12fa['z'] - _0x17555c['z']), _0x242e66['projection' + 'Matrix']);
            var _0x2f6155 = _0x242e66['projection' + 'ViewMatrix'];
            _0x362004['multiplyMa' + 'trixOutFlo' + 'at32Array'](this['_tempScale' + 'Matrix44'], _0x2f6155, this['_shaderVal' + 'ueVPs'][this['_currentPS' + 'SM']]), this['_scene']['_shaderVal' + 'ues']['setBuffer'](_0x334864['Scene3D']['SHADOWLIGH' + 'TVIEWPROJE' + 'CT'], this['_shaderVal' + 'ueLightVP']);
        }
        static ['multiplyMa' + 'trixOutFlo' + 'at32Array'](_0x93bbd0, _0x53679c, _0x4111af) {
            var _0xabcb51, _0x46ee1d, _0x477057, _0x56dcfc, _0x3c9728, _0xabcbcf, _0x30ca7c;
            for (_0x46ee1d = _0x93bbd0['elements'], _0x477057 = _0x53679c['elements'], _0xabcb51 = 0x0; _0xabcb51 < 0x4; _0xabcb51++)
                _0x56dcfc = _0x46ee1d[_0xabcb51], _0x3c9728 = _0x46ee1d[_0xabcb51 + 0x4], _0xabcbcf = _0x46ee1d[_0xabcb51 + 0x8], _0x30ca7c = _0x46ee1d[_0xabcb51 + 0xc], _0x4111af[_0xabcb51] = _0x56dcfc * _0x477057[0x0] + _0x3c9728 * _0x477057[0x1] + _0xabcbcf * _0x477057[0x2] + _0x30ca7c * _0x477057[0x3], _0x4111af[_0xabcb51 + 0x4] = _0x56dcfc * _0x477057[0x4] + _0x3c9728 * _0x477057[0x5] + _0xabcbcf * _0x477057[0x6] + _0x30ca7c * _0x477057[0x7], _0x4111af[_0xabcb51 + 0x8] = _0x56dcfc * _0x477057[0x8] + _0x3c9728 * _0x477057[0x9] + _0xabcbcf * _0x477057[0xa] + _0x30ca7c * _0x477057[0xb], _0x4111af[_0xabcb51 + 0xc] = _0x56dcfc * _0x477057[0xc] + _0x3c9728 * _0x477057[0xd] + _0xabcbcf * _0x477057[0xe] + _0x30ca7c * _0x477057[0xf];
        }
        ['setShadowM' + 'apTextureS' + 'ize'](_0x582c79) {
            _0x582c79 !== this['_shadowMap' + 'TextureSiz' + 'e'] && (this['_shadowMap' + 'TextureSiz' + 'e'] = _0x582c79, this['_shadowPCF' + 'Offset']['x'] = 0x1 / this['_shadowMap' + 'TextureSiz' + 'e'], this['_shadowPCF' + 'Offset']['y'] = 0x1 / this['_shadowMap' + 'TextureSiz' + 'e'], this['_statesDir' + 'ty'] = !0x0);
        }
        ['disposeAll' + 'RenderTarg' + 'et']() {
            for (var _0x13bfa6 = 0x0, _0x7b343d = this['_shadowMap' + 'Count'] + 0x1; _0x13bfa6 < _0x7b343d; _0x13bfa6++)
                this['cameras'][_0x13bfa6]['renderTarg' + 'et'] && (this['cameras'][_0x13bfa6]['renderTarg' + 'et']['destroy'](), this['cameras'][_0x13bfa6]['renderTarg' + 'et'] = null);
        }
    }
    _0x362004['MAX_PSSM_C' + 'OUNT'] = 0x3, _0x362004['_tempVecto' + 'r30'] = new _0x4795b3();
    class _0x719241 extends _0x2fcf9a {
        constructor() {
            super(), this['_isAlterna' + 'te'] = !0x1, this['_intensity'] = 0x1, this['_intensity' + 'Color'] = new _0x4795b3(), this['color'] = new _0x4795b3(0x1, 0x1, 0x1), this['_shadow'] = !0x1, this['_shadowFar' + 'Plane'] = 0x8, this['_shadowMap' + 'Size'] = 0x200, this['_shadowMap' + 'Count'] = 0x1, this['_shadowMap' + 'PCFType'] = 0x0, this['_lightmapB' + 'akedType'] = _0x719241['LIGHTMAPBA' + 'KEDTYPE_RE' + 'ALTIME'];
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0x4ce10a) {
            this['_intensity'] = _0x4ce10a;
        }
        get ['shadow']() {
            return this['_shadow'];
        }
        set ['shadow'](_0x4862f3) {
            throw new Error('LightSprit' + 'e:\x20must\x20ov' + 'erride\x20it.');
        }
        get ['shadowDist' + 'ance']() {
            return this['_shadowFar' + 'Plane'];
        }
        set ['shadowDist' + 'ance'](_0x116cfc) {
            this['_shadowFar' + 'Plane'] = _0x116cfc, this['_parallelS' + 'plitShadow' + 'Map'] && this['_parallelS' + 'plitShadow' + 'Map']['setFarDist' + 'ance'](_0x116cfc);
        }
        get ['shadowReso' + 'lution']() {
            return this['_shadowMap' + 'Size'];
        }
        set ['shadowReso' + 'lution'](_0xd5a35a) {
            this['_shadowMap' + 'Size'] = _0xd5a35a, this['_parallelS' + 'plitShadow' + 'Map'] && this['_parallelS' + 'plitShadow' + 'Map']['setShadowM' + 'apTextureS' + 'ize'](_0xd5a35a);
        }
        get ['shadowPSSM' + 'Count']() {
            return this['_shadowMap' + 'Count'];
        }
        set ['shadowPSSM' + 'Count'](_0x34da67) {
            this['_shadowMap' + 'Count'] = _0x34da67, this['_parallelS' + 'plitShadow' + 'Map'] && (this['_parallelS' + 'plitShadow' + 'Map']['shadowMapC' + 'ount'] = _0x34da67);
        }
        get ['shadowPCFT' + 'ype']() {
            return this['_shadowMap' + 'PCFType'];
        }
        set ['shadowPCFT' + 'ype'](_0xf0f0a3) {
            this['_shadowMap' + 'PCFType'] = _0xf0f0a3, this['_parallelS' + 'plitShadow' + 'Map'] && this['_parallelS' + 'plitShadow' + 'Map']['setPCFType'](_0xf0f0a3);
        }
        get ['lightmapBa' + 'kedType']() {
            return this['_lightmapB' + 'akedType'];
        }
        set ['lightmapBa' + 'kedType'](_0x31aa44) {
            this['_lightmapB' + 'akedType'] !== _0x31aa44 && (this['_lightmapB' + 'akedType'] = _0x31aa44, this['activeInHi' + 'erarchy'] && (_0x31aa44 !== _0x719241['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] ? this['_addToScen' + 'e']() : this['_removeFro' + 'mScene']()));
        }
        ['_parse'](_0x558244, _0x471538) {
            super['_parse'](_0x558244, _0x471538);
            var _0x13fcf7 = _0x558244['color'];
            this['color']['fromArray'](_0x13fcf7), this['intensity'] = _0x558244['intensity'], this['lightmapBa' + 'kedType'] = _0x558244['lightmapBa' + 'kedType'];
        }
        ['_addToScen' + 'e']() {
            var _0x20b392 = this['_scene'], _0xfd796e = _0x237093['_config']['maxLightCo' + 'unt'];
            _0x20b392['_lightCoun' + 't'] < _0xfd796e ? (_0x20b392['_lightCoun' + 't']++, this['_addToLigh' + 'tQueue'](), this['_isAlterna' + 'te'] = !0x1) : (_0x20b392['_alternate' + 'Lights']['add'](this), this['_isAlterna' + 'te'] = !0x0, console['warn']('LightSprit' + 'e:light\x20co' + 'unt\x20has\x20la' + 'rge\x20than\x20m' + 'axLightCou' + 'nt,the\x20lat' + 'est\x20added\x20' + 'light\x20will' + '\x20be\x20ignore' + '.'));
        }
        ['_removeFro' + 'mScene']() {
            var _0x245f81 = this['_scene'];
            if (this['_isAlterna' + 'te'])
                _0x245f81['_alternate' + 'Lights']['remove'](this);
            else {
                if (_0x245f81['_lightCoun' + 't']--, this['_removeFro' + 'mLightQueu' + 'e'](), _0x245f81['_alternate' + 'Lights']['_length'] > 0x0) {
                    var _0x121ee7 = _0x245f81['_alternate' + 'Lights']['shift']();
                    _0x121ee7['_addToLigh' + 'tQueue'](), _0x121ee7['_isAlterna' + 'te'] = !0x1, _0x245f81['_lightCoun' + 't']++;
                }
            }
        }
        ['_addToLigh' + 'tQueue']() {
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
        }
        ['_onActive']() {
            super['_onActive'](), this['lightmapBa' + 'kedType'] !== _0x719241['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] && this['_addToScen' + 'e']();
        }
        ['_onInActiv' + 'e']() {
            super['_onInActiv' + 'e'](), this['lightmapBa' + 'kedType'] !== _0x719241['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] && this['_removeFro' + 'mScene']();
        }
        ['_create']() {
            return new _0x719241();
        }
        get ['diffuseCol' + 'or']() {
            return console['log']('LightSprit' + 'e:\x20discard' + '\x20property,' + 'please\x20use' + '\x20color\x20pro' + 'perty\x20inst' + 'ead.'), this['color'];
        }
        set ['diffuseCol' + 'or'](_0xa27ef4) {
            console['log']('LightSprit' + 'e:\x20discard' + '\x20property,' + 'please\x20use' + '\x20color\x20pro' + 'perty\x20inst' + 'ead.'), this['color'] = _0xa27ef4;
        }
    }
    _0x719241['LIGHTMAPBA' + 'KEDTYPE_RE' + 'ALTIME'] = 0x0, _0x719241['LIGHTMAPBA' + 'KEDTYPE_MI' + 'XED'] = 0x1, _0x719241['LIGHTMAPBA' + 'KEDTYPE_BA' + 'KED'] = 0x2;
    class _0x86826b extends _0x719241 {
        set ['shadow'](_0x37bb97) {
            this['_shadow'] !== _0x37bb97 && (this['_shadow'] = _0x37bb97, this['scene'] && this['_initShado' + 'w']());
        }
        constructor() {
            super(), this['_direction'] = new _0x4795b3();
        }
        ['_initShado' + 'w']() {
            if (this['_shadow'])
                this['_parallelS' + 'plitShadow' + 'Map'] = new _0x362004(), this['scene']['parallelSp' + 'litShadowM' + 'aps']['push'](this['_parallelS' + 'plitShadow' + 'Map']), this['transform']['worldMatri' + 'x']['getForward'](this['_direction']), _0x4795b3['normalize'](this['_direction'], this['_direction']), this['_parallelS' + 'plitShadow' + 'Map']['setInfo'](this['scene'], this['_shadowFar' + 'Plane'], this['_direction'], this['_shadowMap' + 'Size'], this['_shadowMap' + 'Count'], this['_shadowMap' + 'PCFType']);
            else {
                var _0x5729b7 = this['_scene']['_shaderVal' + 'ues'], _0x1422d9 = this['scene']['parallelSp' + 'litShadowM' + 'aps'];
                _0x1422d9['splice'](_0x1422d9['indexOf'](this['_parallelS' + 'plitShadow' + 'Map']), 0x1), this['_parallelS' + 'plitShadow' + 'Map']['disposeAll' + 'RenderTarg' + 'et'](), this['_parallelS' + 'plitShadow' + 'Map'] = null, _0x5729b7['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM1']), _0x5729b7['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM2']), _0x5729b7['removeDefi' + 'ne'](_0x311294['SHADERDEFI' + 'NE_SHADOW_' + 'PSSM3']);
            }
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_direction' + 'Lights']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_direction' + 'Lights']['remove'](this);
        }
    }
    class _0x477c61 extends _0x719241 {
        get ['range']() {
            return this['_range'];
        }
        set ['range'](_0x125c30) {
            this['_range'] = _0x125c30;
        }
        constructor() {
            super(), this['_range'] = 0x6;
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_pointLigh' + 'ts']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_pointLigh' + 'ts']['remove'](this);
        }
        ['_parse'](_0x15e784, _0x4365a0) {
            super['_parse'](_0x15e784, _0x4365a0), this['range'] = _0x15e784['range'];
        }
    }
    class _0x7df596 extends _0x719241 {
        get ['spotAngle']() {
            return this['_spotAngle'];
        }
        set ['spotAngle'](_0x10df6e) {
            this['_spotAngle'] = Math['max'](Math['min'](_0x10df6e, 0xb3), 0x0);
        }
        get ['range']() {
            return this['_range'];
        }
        set ['range'](_0x31dbc4) {
            this['_range'] = _0x31dbc4;
        }
        constructor() {
            super(), this['_spotAngle'] = 0x1e, this['_range'] = 0xa, this['_direction'] = new _0x4795b3();
        }
        ['_addToLigh' + 'tQueue']() {
            this['_scene']['_spotLight' + 's']['add'](this);
        }
        ['_removeFro' + 'mLightQueu' + 'e']() {
            this['_scene']['_spotLight' + 's']['remove'](this);
        }
        ['_parse'](_0x5c42d9, _0x4ef74a) {
            super['_parse'](_0x5c42d9, _0x4ef74a), this['range'] = _0x5c42d9['range'], this['spotAngle'] = _0x5c42d9['spotAngle'];
        }
    }
    class _0x4a3145 {
        static ['_createSpr' + 'ite3DInsta' + 'nce'](_0x27633a, _0x20e2d9, _0x1feef0) {
            var _0x5c6d7a;
            switch (_0x27633a['type']) {
            case 'Scene3D':
                _0x5c6d7a = new _0x169b81();
                break;
            case 'Sprite3D':
                _0x5c6d7a = new _0x2fcf9a();
                break;
            case 'MeshSprite' + '3D':
                _0x5c6d7a = new _0x6ac009(), _0x1feef0 && _0x27633a['props']['isStatic'] && _0x1feef0['push'](_0x5c6d7a);
                break;
            case 'SkinnedMes' + 'hSprite3D':
                _0x5c6d7a = new _0x333a16();
                break;
            case 'ShuriKenPa' + 'rticle3D':
                _0x5c6d7a = new _0x5ae730();
                break;
            case 'Camera':
                _0x5c6d7a = new _0x4e1b1b();
                break;
            case 'DirectionL' + 'ight':
                _0x5c6d7a = new _0x86826b();
                break;
            case 'PointLight':
                _0x5c6d7a = new _0x477c61();
                break;
            case 'SpotLight':
                _0x5c6d7a = new _0x7df596();
                break;
            case 'TrailSprit' + 'e3D':
                _0x5c6d7a = new _0xc92457();
                break;
            default:
                throw new Error('Utils3D:un' + 'identified' + '\x20class\x20typ' + 'e\x20in\x20(.lh)' + '\x20file.');
            }
            var _0x111246 = _0x27633a['child'];
            if (_0x111246)
                for (var _0x496149 = 0x0, _0xee7fd0 = _0x111246['length']; _0x496149 < _0xee7fd0; _0x496149++) {
                    var _0x364a6a = _0x4a3145['_createSpr' + 'ite3DInsta' + 'nce'](_0x111246[_0x496149], _0x20e2d9, _0x1feef0);
                    _0x5c6d7a['addChild'](_0x364a6a);
                }
            return _0x20e2d9[_0x27633a['instanceID']] = _0x5c6d7a, _0x5c6d7a;
        }
        static ['_createCom' + 'ponentInst' + 'ance'](_0x4ab1ce, _0x27ae8c) {
            var _0x7e384d = _0x27ae8c[_0x4ab1ce['instanceID']];
            _0x7e384d['_parse'](_0x4ab1ce['props'], _0x27ae8c);
            var _0x38517a = _0x4ab1ce['child'];
            if (_0x38517a) {
                for (var _0x17efa7 = 0x0, _0x57807c = _0x38517a['length']; _0x17efa7 < _0x57807c; _0x17efa7++)
                    _0x4a3145['_createCom' + 'ponentInst' + 'ance'](_0x38517a[_0x17efa7], _0x27ae8c);
            }
            var _0xbdc175 = _0x4ab1ce['components'];
            if (_0xbdc175)
                for (var _0xc4eabc = 0x0, _0x332c24 = _0xbdc175['length']; _0xc4eabc < _0x332c24; _0xc4eabc++) {
                    var _0x1087d0 = _0xbdc175[_0xc4eabc], _0x46d6b0 = _0x33d6e0['ClassUtils']['getRegClas' + 's'](_0x1087d0['type']);
                    if (_0x46d6b0)
                        _0x7e384d['addCompone' + 'nt'](_0x46d6b0)['_parse'](_0x1087d0);
                    else
                        console['warn']('Unkown\x20com' + 'ponent\x20typ' + 'e.');
                }
        }
        static ['_createNod' + 'eByJson02'](_0x84212a, _0x246828) {
            var _0x22f41c = {}, _0x5e6cf9 = _0x4a3145['_createSpr' + 'ite3DInsta' + 'nce'](_0x84212a, _0x22f41c, _0x246828);
            return _0x4a3145['_createCom' + 'ponentInst' + 'ance'](_0x84212a, _0x22f41c), _0x5e6cf9;
        }
        static ['_parse'](_0x203078, _0x44e844 = null, _0x31bb99 = null) {
            var _0x30e014, _0x4b975b = _0x203078['data'], _0x5731e9 = [];
            switch (_0x203078['version']) {
            case 'LAYAHIERAR' + 'CHY:02':
                _0x30e014 = _0x4a3145['_createNod' + 'eByJson02'](_0x4b975b, _0x5731e9);
                break;
            default:
                _0x30e014 = _0x4a3145['_createNod' + 'eByJson'](_0x4b975b, _0x5731e9);
            }
            return _0x11568b['combine'](_0x30e014, _0x5731e9), _0x30e014;
        }
        static ['_parseScen' + 'e'](_0x3bdeb8, _0xff15c1 = null, _0x491994 = null) {
            var _0x5c35d6, _0xc7343f = _0x3bdeb8['data'], _0x30273b = [];
            switch (_0x3bdeb8['version']) {
            case 'LAYASCENE3' + 'D:02':
                _0x5c35d6 = _0x4a3145['_createNod' + 'eByJson02'](_0xc7343f, _0x30273b);
                break;
            default:
                _0x5c35d6 = _0x4a3145['_createNod' + 'eByJson'](_0xc7343f, _0x30273b);
            }
            return _0x11568b['combine'](null, _0x30273b), _0x5c35d6;
        }
        static ['_createNod' + 'eByJson'](_0x3c0f17, _0x15c121) {
            var _0x44692f;
            switch (_0x3c0f17['type']) {
            case 'Scene3D':
                _0x44692f = new _0x169b81();
                break;
            case 'Sprite3D':
                _0x44692f = new _0x2fcf9a();
                break;
            case 'MeshSprite' + '3D':
                _0x44692f = new _0x6ac009(), _0x15c121 && _0x3c0f17['props']['isStatic'] && _0x15c121['push'](_0x44692f);
                break;
            case 'SkinnedMes' + 'hSprite3D':
                _0x44692f = new _0x333a16();
                break;
            case 'ShuriKenPa' + 'rticle3D':
                _0x44692f = new _0x5ae730();
                break;
            case 'Camera':
                _0x44692f = new _0x4e1b1b();
                break;
            case 'DirectionL' + 'ight':
                _0x44692f = new _0x86826b();
                break;
            case 'PointLight':
                _0x44692f = new _0x477c61();
                break;
            case 'SpotLight':
                _0x44692f = new _0x7df596();
                break;
            case 'TrailSprit' + 'e3D':
                _0x44692f = new _0xc92457();
                break;
            default:
                throw new Error('Utils3D:un' + 'identified' + '\x20class\x20typ' + 'e\x20in\x20(.lh)' + '\x20file.');
            }
            var _0x30a6b3 = _0x3c0f17['child'];
            if (_0x30a6b3)
                for (var _0x57bc6a = 0x0, _0x102284 = _0x30a6b3['length']; _0x57bc6a < _0x102284; _0x57bc6a++) {
                    var _0x32dcdc = _0x4a3145['_createNod' + 'eByJson'](_0x30a6b3[_0x57bc6a], _0x15c121);
                    _0x44692f['addChild'](_0x32dcdc);
                }
            var _0x504c4 = _0x3c0f17['components'];
            if (_0x504c4)
                for (var _0x39d588 = 0x0, _0x225477 = _0x504c4['length']; _0x39d588 < _0x225477; _0x39d588++) {
                    var _0x18462d = _0x504c4[_0x39d588], _0x149237 = _0x33d6e0['ClassUtils']['getRegClas' + 's'](_0x18462d['type']);
                    if (_0x149237)
                        _0x44692f['addCompone' + 'nt'](_0x149237)['_parse'](_0x18462d);
                    else
                        console['warn']('Unkown\x20com' + 'ponent\x20typ' + 'e.');
                }
            return _0x44692f['_parse'](_0x3c0f17['props'], null), _0x44692f;
        }
    }
    class _0x4ab218 {
        constructor() {
        }
        static get ['enablePhys' + 'ics']() {
            return _0x10fe89['_enablePhy' + 'sics'];
        }
        static ['_cancelLoa' + 'dByUrl'](_0xba99dc) {
            _0x33d6e0['Laya']['loader']['cancelLoad' + 'ByUrl'](_0xba99dc), _0x4ab218['_innerFirs' + 'tLevelLoad' + 'erManager']['cancelLoad' + 'ByUrl'](_0xba99dc), _0x4ab218['_innerSeco' + 'ndLevelLoa' + 'derManager']['cancelLoad' + 'ByUrl'](_0xba99dc), _0x4ab218['_innerThir' + 'dLevelLoad' + 'erManager']['cancelLoad' + 'ByUrl'](_0xba99dc), _0x4ab218['_innerFour' + 'thLevelLoa' + 'derManager']['cancelLoad' + 'ByUrl'](_0xba99dc);
        }
        static ['_changeWeb' + 'GLSize'](_0x159c80, _0x37089b) {
            _0x33d6e0['WebGL']['onStageRes' + 'ize'](_0x159c80, _0x37089b), _0x311bc2['clientWidt' + 'h'] = _0x159c80, _0x311bc2['clientHeig' + 'ht'] = _0x37089b;
        }
        static ['__init__'](_0x2ae6fc, _0x4b5aab, _0x368fd4) {
            if (_0x33d6e0['Config']['isAntialia' + 's'] = _0x368fd4['isAntialia' + 's'], _0x33d6e0['Config']['isAlpha'] = _0x368fd4['isAlpha'], _0x33d6e0['Config']['premultipl' + 'iedAlpha'] = _0x368fd4['premultipl' + 'iedAlpha'], _0x33d6e0['Config']['isStencil'] = _0x368fd4['isStencil'], _0x33d6e0['WebGL']['enable']()) {
                _0x33d6e0['RunDriver']['changeWebG' + 'LSize'] = _0x4ab218['_changeWeb' + 'GLSize'], _0x33d6e0['Render']['is3DMode'] = !0x0, _0x33d6e0['Laya']['init'](_0x2ae6fc, _0x4b5aab), _0x33d6e0['Render']['supportWeb' + 'GLPlusRend' + 'ering'] || (_0x33d6e0['LayaGL']['instance'] = _0x33d6e0['WebGLConte' + 'xt']['mainContex' + 't'], _0x33d6e0['LayaGL']['instance']['createComm' + 'andEncoder'] = function (_0x3516c4 = 0x80, _0x1ea2af = 0x40, _0xc48787 = !0x1) {
                    return new _0x33d6e0['CommandEnc' + 'oder'](this, _0x3516c4, _0x1ea2af, _0xc48787);
                }), _0x368fd4['_multiLigh' + 'ting'] = _0x368fd4['enableMult' + 'iLight'] && _0x5773d8['supportTex' + 'tureFormat'](_0x33d6e0['TextureFor' + 'mat']['R32G32B32A' + '32']), _0x334864['Shader3D'] = _0x1ede74, _0x334864['Scene3D'] = _0x169b81, _0x334864['MeshRender' + 'StaticBatc' + 'hManager'] = _0x542a94, _0x334864['MeshRender' + 'DynamicBat' + 'chManager'] = _0x4972f1, _0x334864['SubMeshDyn' + 'amicBatch'] = _0x5d1ab6, _0x334864['Laya3D'] = _0x4ab218, _0x334864['Matrix4x4'] = _0x16c2be, _0x4ab218['enableNati' + 've3D'](), _0x43e6c5['__init__'](), _0xe3d46['__init__'](), _0x25e31b['__init__'](), _0x52cf21['__init__'](), _0x8522a4['__init__'](), _0x16bb26['__init__'](), _0x487fd8['__init__'](), _0x3243fd['__init__'](), _0x1b47c9['__init__'](), _0x5d1ab6['__init__'](), _0x10fe89['_bullet'] = window['Physics3D'], _0x10fe89['_bullet'] && (_0x57f780['__init__'](), _0x5cfc15['__init__'](), _0x4180f5['__init__'](), _0x4aabff['__init__'](), _0xa3f18a['__init__'](), _0x4b248c['__init__'](), _0xa0c106['__init__'](), _0x4f04eb['__init__'](), _0x551d49['__init__']()), _0x55ff6a['__init__'](), _0x33f5ae['__init__'](), _0x36b75a['__init__'](), _0x2fcf9a['__init__'](), _0x33bc07['__init__'](), _0x6ac009['__init__'](), _0x333a16['__init__'](), _0x5ae730['__init__'](), _0xc92457['__init__'](), _0x47aaf5['__init__'](), _0x169b81['__init__'](), _0x542a94['__init__'](), _0x18b0d4['__initDefi' + 'ne__'](), _0xf76038['__initDefi' + 'ne__'](), _0x565ea0['__initDefi' + 'ne__'](), _0x3d476f['__initDefi' + 'ne__'](), _0xfd8cfb['__initDefi' + 'ne__'](), _0x1e9b59['__initDefi' + 'ne__'](), _0x86cc6e['__initDefi' + 'ne__'](), _0x595179['__initDefi' + 'ne__'](), _0x49239f['__initDefi' + 'ne__'](), _0x4249a7['__initDefi' + 'ne__'](), _0x268ae0['__initDefi' + 'ne__'](), _0x3c3770['__initDefi' + 'ne__'](), _0x47a01b['__initDefi' + 'ne__'](), _0x4a932e['__initDefi' + 'ne__'](), _0x5a65f6['__init__'](), _0x33d6e0['ClassUtils']['regClass']('Laya.Effec' + 'tMaterial', _0x49239f), _0x33d6e0['ClassUtils']['regClass']('Laya.Unlit' + 'Material', _0x86cc6e), _0x33d6e0['ClassUtils']['regClass']('Laya.Blinn' + 'PhongMater' + 'ial', _0x565ea0), _0x33d6e0['ClassUtils']['regClass']('Laya.SkyPr' + 'oceduralMa' + 'terial', _0x1e9b59), _0x33d6e0['ClassUtils']['regClass']('Laya.PBRSt' + 'andardMate' + 'rial', _0x3d476f), _0x33d6e0['ClassUtils']['regClass']('Laya.PBRSp' + 'ecularMate' + 'rial', _0xfd8cfb), _0x33d6e0['ClassUtils']['regClass']('Laya.SkyBo' + 'xMaterial', _0x4a932e), _0x33d6e0['ClassUtils']['regClass']('Laya.Water' + 'PrimaryMat' + 'erial', _0x4249a7), _0x33d6e0['ClassUtils']['regClass']('Laya.Exten' + 'dTerrainMa' + 'terial', _0x3c3770), _0x33d6e0['ClassUtils']['regClass']('Laya.Shuri' + 'kenParticl' + 'eMaterial', _0x268ae0), _0x33d6e0['ClassUtils']['regClass']('Laya.Trail' + 'Material', _0x595179), _0x33d6e0['ClassUtils']['regClass']('Laya.Physi' + 'csCollider', _0x46d3a6), _0x33d6e0['ClassUtils']['regClass']('Laya.Rigid' + 'body3D', _0x551d49), _0x33d6e0['ClassUtils']['regClass']('Laya.Chara' + 'cterContro' + 'ller', _0x4f04eb), _0x33d6e0['ClassUtils']['regClass']('Laya.Anima' + 'tor', _0x40f618), _0x33d6e0['ClassUtils']['regClass']('PhysicsCol' + 'lider', _0x46d3a6), _0x33d6e0['ClassUtils']['regClass']('CharacterC' + 'ontroller', _0x4f04eb), _0x33d6e0['ClassUtils']['regClass']('Animator', _0x40f618), _0x33d6e0['ClassUtils']['regClass']('Rigidbody3' + 'D', _0x551d49), _0x47a01b['defaultMat' + 'erial'] = new _0x47a01b(), _0x565ea0['defaultMat' + 'erial'] = new _0x565ea0(), _0x49239f['defaultMat' + 'erial'] = new _0x49239f(), _0x3d476f['defaultMat' + 'erial'] = new _0x3d476f(), _0xfd8cfb['defaultMat' + 'erial'] = new _0xfd8cfb(), _0x86cc6e['defaultMat' + 'erial'] = new _0x86cc6e(), _0x268ae0['defaultMat' + 'erial'] = new _0x268ae0(), _0x595179['defaultMat' + 'erial'] = new _0x595179(), _0x1e9b59['defaultMat' + 'erial'] = new _0x1e9b59(), _0x4a932e['defaultMat' + 'erial'] = new _0x4a932e(), _0x4249a7['defaultMat' + 'erial'] = new _0x4249a7(), _0x47a01b['defaultMat' + 'erial']['lock'] = !0x0, _0x565ea0['defaultMat' + 'erial']['lock'] = !0x0, _0x49239f['defaultMat' + 'erial']['lock'] = !0x0, _0x3d476f['defaultMat' + 'erial']['lock'] = !0x0, _0xfd8cfb['defaultMat' + 'erial']['lock'] = !0x0, _0x86cc6e['defaultMat' + 'erial']['lock'] = !0x0, _0x268ae0['defaultMat' + 'erial']['lock'] = !0x0, _0x595179['defaultMat' + 'erial']['lock'] = !0x0, _0x1e9b59['defaultMat' + 'erial']['lock'] = !0x0, _0x4a932e['defaultMat' + 'erial']['lock'] = !0x0, _0x4249a7['defaultMat' + 'erial']['lock'] = !0x0, _0x33d6e0['Texture2D']['__init__'](), _0x4b77f2['__init__'](), _0x2958cd['__init__'](), _0x3fc537['__init__'](), _0x2e0ca7['__init__'](), _0x57264c['__init__'](), _0x2585ad['__init__'](), _0x3d10d1['__init__']();
                var _0x575d93 = _0x33d6e0['LoaderMana' + 'ger']['createMap'];
                _0x575d93['lh'] = [
                    _0x4ab218['HIERARCHY'],
                    _0x4a3145['_parse']
                ], _0x575d93['ls'] = [
                    _0x4ab218['HIERARCHY'],
                    _0x4a3145['_parseScen' + 'e']
                ], _0x575d93['lm'] = [
                    _0x4ab218['MESH'],
                    _0x33f5ae['_parse']
                ], _0x575d93['lmat'] = [
                    _0x4ab218['MATERIAL'],
                    _0x18b0d4['_parse']
                ], _0x575d93['ltc'] = [
                    _0x4ab218['TEXTURECUB' + 'E'],
                    _0x4b77f2['_parse']
                ], _0x575d93['jpg'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['jpeg'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['bmp'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['gif'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['png'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['dds'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['ktx'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['pvr'] = [
                    _0x4ab218['TEXTURE2D'],
                    _0x33d6e0['Texture2D']['_parse']
                ], _0x575d93['lani'] = [
                    _0x4ab218['ANIMATIONC' + 'LIP'],
                    _0x2ae340['_parse']
                ], _0x575d93['lav'] = [
                    _0x4ab218['AVATAR'],
                    _0x2f0a3d['_parse']
                ];
                var _0x58610a = _0x33d6e0['Loader']['parserMap'];
                _0x58610a[_0x4ab218['HIERARCHY']] = _0x4ab218['_loadHiera' + 'rchy'], _0x58610a[_0x4ab218['MESH']] = _0x4ab218['_loadMesh'], _0x58610a[_0x4ab218['MATERIAL']] = _0x4ab218['_loadMater' + 'ial'], _0x58610a[_0x4ab218['TEXTURECUB' + 'E']] = _0x4ab218['_loadTextu' + 'reCube'], _0x58610a[_0x4ab218['TEXTURE2D']] = _0x4ab218['_loadTextu' + 're2D'], _0x58610a[_0x4ab218['ANIMATIONC' + 'LIP']] = _0x4ab218['_loadAnima' + 'tionClip'], _0x58610a[_0x4ab218['AVATAR']] = _0x4ab218['_loadAvata' + 'r'], _0x4ab218['_innerFirs' + 'tLevelLoad' + 'erManager']['on'](_0x33d6e0['Event']['ERROR'], null, _0x4ab218['_eventLoad' + 'ManagerErr' + 'or']), _0x4ab218['_innerSeco' + 'ndLevelLoa' + 'derManager']['on'](_0x33d6e0['Event']['ERROR'], null, _0x4ab218['_eventLoad' + 'ManagerErr' + 'or']), _0x4ab218['_innerThir' + 'dLevelLoad' + 'erManager']['on'](_0x33d6e0['Event']['ERROR'], null, _0x4ab218['_eventLoad' + 'ManagerErr' + 'or']), _0x4ab218['_innerFour' + 'thLevelLoa' + 'derManager']['on'](_0x33d6e0['Event']['ERROR'], null, _0x4ab218['_eventLoad' + 'ManagerErr' + 'or']);
            } else
                alert('Laya3D\x20ini' + 't\x20error,mu' + 'st\x20support' + '\x20webGL!');
        }
        static ['enableNati' + 've3D']() {
            var _0x4a9e82 = _0x4ac605, _0xbc495 = _0x30a211, _0x54780b = _0x334d4e, _0x4189f1 = _0x2f0a3d, _0x5d8b98 = _0x2585ad;
            if (_0x33d6e0['Render']['supportWeb' + 'GLPlusRend' + 'ering'] && (_0x4a9e82['prototype']['_initData'] = _0x4a9e82['prototype']['_initDataF' + 'orNative'], _0x4a9e82['prototype']['setBool'] = _0x4a9e82['prototype']['setBoolFor' + 'Native'], _0x4a9e82['prototype']['getBool'] = _0x4a9e82['prototype']['getBoolFor' + 'Native'], _0x4a9e82['prototype']['setInt'] = _0x4a9e82['prototype']['setIntForN' + 'ative'], _0x4a9e82['prototype']['getInt'] = _0x4a9e82['prototype']['getIntForN' + 'ative'], _0x4a9e82['prototype']['setNumber'] = _0x4a9e82['prototype']['setNumberF' + 'orNative'], _0x4a9e82['prototype']['getNumber'] = _0x4a9e82['prototype']['getNumberF' + 'orNative'], _0x4a9e82['prototype']['setVector'] = _0x4a9e82['prototype']['setVectorF' + 'orNative'], _0x4a9e82['prototype']['getVector'] = _0x4a9e82['prototype']['getVectorF' + 'orNative'], _0x4a9e82['prototype']['setVector2'] = _0x4a9e82['prototype']['setVector2' + 'ForNative'], _0x4a9e82['prototype']['getVector2'] = _0x4a9e82['prototype']['getVector2' + 'ForNative'], _0x4a9e82['prototype']['setVector3'] = _0x4a9e82['prototype']['setVector3' + 'ForNative'], _0x4a9e82['prototype']['getVector3'] = _0x4a9e82['prototype']['getVector3' + 'ForNative'], _0x4a9e82['prototype']['setQuatern' + 'ion'] = _0x4a9e82['prototype']['setQuatern' + 'ionForNati' + 've'], _0x4a9e82['prototype']['getQuatern' + 'ion'] = _0x4a9e82['prototype']['getQuatern' + 'ionForNati' + 've'], _0x4a9e82['prototype']['setMatrix4' + 'x4'] = _0x4a9e82['prototype']['setMatrix4' + 'x4ForNativ' + 'e'], _0x4a9e82['prototype']['getMatrix4' + 'x4'] = _0x4a9e82['prototype']['getMatrix4' + 'x4ForNativ' + 'e'], _0x4a9e82['prototype']['setBuffer'] = _0x4a9e82['prototype']['setBufferF' + 'orNative'], _0x4a9e82['prototype']['getBuffer'] = _0x4a9e82['prototype']['getBufferF' + 'orNative'], _0x4a9e82['prototype']['setTexture'] = _0x4a9e82['prototype']['setTexture' + 'ForNative'], _0x4a9e82['prototype']['getTexture'] = _0x4a9e82['prototype']['getTexture' + 'ForNative'], _0x4a9e82['prototype']['setAttribu' + 'te'] = _0x4a9e82['prototype']['setAttribu' + 'teForNativ' + 'e'], _0x4a9e82['prototype']['getAttribu' + 'te'] = _0x4a9e82['prototype']['getAttribu' + 'teForNativ' + 'e'], _0x4a9e82['prototype']['cloneTo'] = _0x4a9e82['prototype']['cloneToFor' + 'Native'], _0x4a9e82['prototype']['getData'] = _0x4a9e82['prototype']['getDataFor' + 'Native'], _0xbc495['prototype']['_uniformMa' + 'trix2fv'] = _0xbc495['prototype']['_uniformMa' + 'trix2fvFor' + 'Native'], _0xbc495['prototype']['_uniformMa' + 'trix3fv'] = _0xbc495['prototype']['_uniformMa' + 'trix3fvFor' + 'Native'], _0xbc495['prototype']['_uniformMa' + 'trix4fv'] = _0xbc495['prototype']['_uniformMa' + 'trix4fvFor' + 'Native'], _0x33d6e0['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms'] = _0x33d6e0['LayaGLRunn' + 'er']['uploadShad' + 'erUniforms' + 'ForNative']), _0x33d6e0['Render']['supportWeb' + 'GLPlusCull' + 'ing'] && (_0x5d8b98['renderObje' + 'ctCulling'] = _0x2585ad['renderObje' + 'ctCullingN' + 'ative']), _0x33d6e0['Render']['supportWeb' + 'GLPlusAnim' + 'ation']) {
                _0x4189f1['prototype']['_cloneData' + 'sToAnimato' + 'r'] = _0x4189f1['prototype']['_cloneData' + 'sToAnimato' + 'rNative'];
                var _0x13a49b = _0x2ae340;
                _0x13a49b['prototype']['_evaluateC' + 'lipDatasRe' + 'alTime'] = _0x13a49b['prototype']['_evaluateC' + 'lipDatasRe' + 'alTimeForN' + 'ative'], _0x54780b['prototype']['_computeSk' + 'innedData'] = _0x54780b['prototype']['_computeSk' + 'innedDataF' + 'orNative'];
            }
        }
        static ['formatRela' + 'tivePath'](_0x950821, _0x2a225c) {
            var _0x5d688d;
            if (_0x5d688d = _0x950821 + _0x2a225c, '.' === _0x2a225c['charAt'](0x0)) {
                for (var _0x222d97 = _0x5d688d['split']('/'), _0x482084 = 0x0, _0x4c0d24 = _0x222d97['length']; _0x482084 < _0x4c0d24; _0x482084++)
                    if ('..' == _0x222d97[_0x482084]) {
                        var _0x20db19 = _0x482084 - 0x1;
                        _0x20db19 > 0x0 && '..' !== _0x222d97[_0x20db19] && (_0x222d97['splice'](_0x20db19, 0x2), _0x482084 -= 0x2);
                    }
                _0x5d688d = _0x222d97['join']('/');
            }
            return _0x5d688d;
        }
        static ['_endLoad'](_0x3a1321, _0x1bb30e = null, _0x57d4c8 = null) {
            if (_0x57d4c8)
                for (var _0x1b7b02 = 0x0, _0x3bf5e9 = _0x57d4c8['length']; _0x1b7b02 < _0x3bf5e9; _0x1b7b02++) {
                    var _0x4536c7 = _0x33d6e0['Loader']['getRes'](_0x57d4c8[_0x1b7b02]);
                    _0x4536c7 && _0x4536c7['_removeRef' + 'erence']();
                }
            _0x3a1321['endLoad'](_0x1bb30e);
        }
        static ['_eventLoad' + 'ManagerErr' + 'or'](_0x34a4a2) {
            _0x33d6e0['Laya']['loader']['event'](_0x33d6e0['Event']['ERROR'], _0x34a4a2);
        }
        static ['_addHierar' + 'chyInnerUr' + 'ls'](_0x237b7e, _0x45becf, _0x2ba12d, _0x843b87, _0x4db36c, _0x1e924d, _0x1bff77 = null, _0x419af8 = null) {
            var _0x6a6f16 = _0x4ab218['formatRela' + 'tivePath'](_0x843b87, _0x4db36c);
            return _0x2ba12d && (_0x6a6f16 += _0x2ba12d), _0x237b7e['push']({
                'url': _0x6a6f16,
                'type': _0x1e924d,
                'constructParams': _0x1bff77,
                'propertyParams': _0x419af8
            }), _0x45becf['push'](_0x6a6f16), _0x6a6f16;
        }
        static ['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x8b6f6b, _0x201659, _0x219cfb, _0x1c5f7b, _0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f) {
            var _0x489150, _0x255776, _0x2d1551 = _0x8b6f6b['props'];
            switch (_0x8b6f6b['type']) {
            case 'Scene3D':
                var _0x3f5486 = _0x2d1551['lightmaps'];
                for (_0x489150 = 0x0, _0x255776 = _0x3f5486['length']; _0x489150 < _0x255776; _0x489150++) {
                    var _0x1c5824 = _0x3f5486[_0x489150];
                    _0x1c5824['path'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f, _0x1c5824['path'], _0x4ab218['TEXTURE2D'], _0x1c5824['constructP' + 'arams'], _0x1c5824['propertyPa' + 'rams']);
                }
                var _0x3144e2 = _0x2d1551['reflection' + 'Texture'];
                if (_0x3144e2 && (_0x2d1551['reflection' + 'Texture'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x1c5f7b, _0x4364ef, _0x543d3, _0x4e6a1f, _0x3144e2, _0x4ab218['TEXTURECUB' + 'E'])), _0x2d1551['sky']) {
                    var _0x137c71 = _0x2d1551['sky']['material'];
                    _0x137c71 && (_0x137c71['path'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x219cfb, _0x4364ef, _0x543d3, _0x4e6a1f, _0x137c71['path'], _0x4ab218['MATERIAL']));
                }
                break;
            case 'Camera':
                var _0x3c850b = _0x2d1551['skyboxMate' + 'rial'];
                _0x3c850b && (_0x3c850b['path'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x219cfb, _0x4364ef, _0x543d3, _0x4e6a1f, _0x3c850b['path'], _0x4ab218['MATERIAL']));
                break;
            case 'TrailSprit' + 'e3D':
            case 'MeshSprite' + '3D':
            case 'SkinnedMes' + 'hSprite3D':
                var _0x385364 = _0x2d1551['meshPath'];
                _0x385364 && (_0x2d1551['meshPath'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x201659, _0x4364ef, _0x543d3, _0x4e6a1f, _0x385364, _0x4ab218['MESH']));
                var _0x5177b3 = _0x2d1551['materials'];
                if (_0x5177b3) {
                    for (_0x489150 = 0x0, _0x255776 = _0x5177b3['length']; _0x489150 < _0x255776; _0x489150++)
                        _0x5177b3[_0x489150]['path'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x219cfb, _0x4364ef, _0x543d3, _0x4e6a1f, _0x5177b3[_0x489150]['path'], _0x4ab218['MATERIAL']);
                }
                break;
            case 'ShuriKenPa' + 'rticle3D':
                if (_0x2d1551['main']) {
                    var _0x56b104 = _0x2d1551['renderer']['resources'], _0x4584ba = _0x56b104['mesh'], _0x5a351c = _0x56b104['material'];
                    _0x4584ba && (_0x56b104['mesh'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x201659, _0x4364ef, _0x543d3, _0x4e6a1f, _0x4584ba, _0x4ab218['MESH'])), _0x5a351c && (_0x56b104['material'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x219cfb, _0x4364ef, _0x543d3, _0x4e6a1f, _0x5a351c, _0x4ab218['MATERIAL']));
                } else {
                    var _0x5aaa23 = _0x2d1551['meshPath'];
                    _0x5aaa23 && (_0x2d1551['meshPath'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x201659, _0x4364ef, _0x543d3, _0x4e6a1f, _0x5aaa23, _0x4ab218['MESH'])), _0x2d1551['material']['path'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x219cfb, _0x4364ef, _0x543d3, _0x4e6a1f, _0x2d1551['material']['path'], _0x4ab218['MATERIAL']);
                }
                break;
            case 'Terrain':
                _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f, _0x2d1551['dataPath'], _0x4ab218['TERRAINRES']);
            }
            var _0x453c7f = _0x8b6f6b['components'];
            if (_0x453c7f)
                for (var _0x3a9a44 = 0x0, _0x449a64 = _0x453c7f['length']; _0x3a9a44 < _0x449a64; _0x3a9a44++) {
                    var _0x2743e4 = _0x453c7f[_0x3a9a44];
                    switch (_0x2743e4['type']) {
                    case 'Animator':
                        _0x2743e4['avatarPath'];
                        var _0x2a1e16 = _0x2743e4['avatar'];
                        _0x2a1e16 && (_0x2a1e16['path'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f, _0x2a1e16['path'], _0x4ab218['AVATAR']));
                        var _0x432858 = _0x2743e4['clipPaths'];
                        if (_0x432858) {
                            for (_0x489150 = 0x0, _0x255776 = _0x432858['length']; _0x489150 < _0x255776; _0x489150++)
                                _0x432858[_0x489150] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f, _0x432858[_0x489150], _0x4ab218['ANIMATIONC' + 'LIP']);
                        } else {
                            var _0x3eb5a6 = _0x2743e4['layers'];
                            for (_0x489150 = 0x0; _0x489150 < _0x3eb5a6['length']; _0x489150++)
                                for (var _0x5c7bf6 = _0x3eb5a6[_0x489150]['states'], _0x2bf513 = 0x0, _0x561c01 = _0x5c7bf6['length']; _0x2bf513 < _0x561c01; _0x2bf513++) {
                                    var _0x41294a = _0x5c7bf6[_0x2bf513]['clipPath'];
                                    _0x41294a && (_0x5c7bf6[_0x2bf513]['clipPath'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f, _0x41294a, _0x4ab218['ANIMATIONC' + 'LIP']));
                                }
                        }
                        break;
                    case 'PhysicsCol' + 'lider':
                    case 'Rigidbody3' + 'D':
                    case 'CharacterC' + 'ontroller':
                        var _0x319c21 = _0x2743e4['shapes'];
                        for (_0x489150 = 0x0; _0x489150 < _0x319c21['length']; _0x489150++) {
                            var _0x1761d5 = _0x319c21[_0x489150];
                            if ('MeshCollid' + 'erShape' === _0x1761d5['type'])
                                (_0x4584ba = _0x1761d5['mesh']) && (_0x1761d5['mesh'] = _0x4ab218['_addHierar' + 'chyInnerUr' + 'ls'](_0x201659, _0x4364ef, _0x543d3, _0x4e6a1f, _0x4584ba, _0x4ab218['MESH']));
                        }
                    }
                }
            var _0x2792c5 = _0x8b6f6b['child'];
            for (_0x489150 = 0x0, _0x255776 = _0x2792c5['length']; _0x489150 < _0x255776; _0x489150++)
                _0x4ab218['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x2792c5[_0x489150], _0x201659, _0x219cfb, _0x1c5f7b, _0x522c62, _0x4364ef, _0x543d3, _0x4e6a1f);
        }
        static ['_loadHiera' + 'rchy'](_0x2046ee) {
            _0x2046ee['on'](_0x33d6e0['Event']['LOADED'], null, _0x4ab218['_onHierarc' + 'hylhLoaded'], [_0x2046ee]), _0x2046ee['load'](_0x2046ee['url'], _0x33d6e0['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_onHierarc' + 'hylhLoaded'](_0x3ce04e, _0x5d3446) {
            var _0xaf7c0f = _0x3ce04e['url'], _0x57671d = _0x89f66e['getURLVeri' + 'on'](_0xaf7c0f), _0x2b2128 = _0x33d6e0['URL']['getPath'](_0xaf7c0f), _0x263050 = [], _0x4eabb6 = [], _0x3cc3f1 = [], _0x1001e3 = [], _0x44457c = [];
            _0x4ab218['_getSprite' + '3DHierarch' + 'yInnerUrls'](_0x5d3446['data'], _0x263050, _0x4eabb6, _0x3cc3f1, _0x1001e3, _0x44457c, _0x57671d, _0x2b2128);
            var _0x2a5e36 = _0x263050['length'] + _0x4eabb6['length'] + _0x1001e3['length'], _0x1674f9 = _0x2a5e36 + 0x1, _0x22d2f4 = 0x1 / _0x1674f9;
            if (_0x4ab218['_onProcess' + 'Change'](_0x3ce04e, 0x0, _0x22d2f4, 0x1), _0x1001e3['length'] > 0x0) {
                var _0x32bf42 = _0x2a5e36 / _0x1674f9, _0x57430f = _0x33d6e0['Handler']['create'](null, _0x4ab218['_onProcess' + 'Change'], [
                        _0x3ce04e,
                        _0x22d2f4,
                        _0x32bf42
                    ], !0x1);
                _0x4ab218['_innerFour' + 'thLevelLoa' + 'derManager']['_create'](_0x1001e3, !0x1, _0x33d6e0['Handler']['create'](null, _0x4ab218['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'], [
                    _0x3ce04e,
                    _0x57430f,
                    _0x5d3446,
                    _0x44457c,
                    _0x263050,
                    _0x4eabb6,
                    _0x3cc3f1,
                    _0x22d2f4 + _0x32bf42 * _0x1001e3['length'],
                    _0x32bf42
                ]), _0x57430f, null, null, null, 0x1, !0x0);
            } else
                _0x4ab218['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'](_0x3ce04e, null, _0x5d3446, _0x44457c, _0x263050, _0x4eabb6, _0x3cc3f1, _0x22d2f4, _0x32bf42);
        }
        static ['_onHierarc' + 'hyInnerFor' + 'thLevResou' + 'Loaded'](_0x6c31d2, _0x1bf668, _0x492efa, _0x13927d, _0x21c9b0, _0x5b7a7b, _0x3cf093, _0x2c89d6, _0x19b8d6) {
            if (_0x1bf668 && _0x1bf668['recover'](), _0x3cf093['length'] > 0x0) {
                var _0x3b29d3 = _0x33d6e0['Handler']['create'](null, _0x4ab218['_onProcess' + 'Change'], [
                    _0x6c31d2,
                    _0x2c89d6,
                    _0x19b8d6
                ], !0x1);
                _0x4ab218['_innerThir' + 'dLevelLoad' + 'erManager']['_create'](_0x3cf093, !0x1, _0x33d6e0['Handler']['create'](null, _0x4ab218['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'], [
                    _0x6c31d2,
                    _0x3b29d3,
                    _0x492efa,
                    _0x13927d,
                    _0x21c9b0,
                    _0x5b7a7b,
                    _0x2c89d6 + _0x19b8d6 * _0x5b7a7b['length'],
                    _0x19b8d6
                ]), _0x1bf668, null, null, null, 0x1, !0x0);
            } else
                _0x4ab218['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'](_0x6c31d2, null, _0x492efa, _0x13927d, _0x21c9b0, _0x5b7a7b, _0x2c89d6, _0x19b8d6);
        }
        static ['_onHierarc' + 'hyInnerThi' + 'rdLevResou' + 'Loaded'](_0xfe6508, _0x5cb49a, _0x5a2b4e, _0x52167d, _0x56da88, _0x3b0873, _0x5a9c22, _0x1a170d) {
            if (_0x5cb49a && _0x5cb49a['recover'](), _0x3b0873['length'] > 0x0) {
                var _0x54d83c = _0x33d6e0['Handler']['create'](null, _0x4ab218['_onProcess' + 'Change'], [
                    _0xfe6508,
                    _0x5a9c22,
                    _0x1a170d
                ], !0x1);
                _0x4ab218['_innerSeco' + 'ndLevelLoa' + 'derManager']['_create'](_0x3b0873, !0x1, _0x33d6e0['Handler']['create'](null, _0x4ab218['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'], [
                    _0xfe6508,
                    _0x54d83c,
                    _0x5a2b4e,
                    _0x52167d,
                    _0x56da88,
                    _0x5a9c22 + _0x1a170d * _0x3b0873['length'],
                    _0x1a170d
                ]), _0x5cb49a, null, null, null, 0x1, !0x0);
            } else
                _0x4ab218['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'](_0xfe6508, null, _0x5a2b4e, _0x52167d, _0x56da88, _0x5a9c22, _0x1a170d);
        }
        static ['_onHierarc' + 'hyInnerSec' + 'ondLevReso' + 'uLoaded'](_0xe3105c, _0x9f64b4, _0x14825e, _0x1d3f09, _0x27a10c, _0xeb3de6, _0xcef778) {
            if (_0x9f64b4 && _0x9f64b4['recover'](), _0x27a10c['length'] > 0x0) {
                var _0x599109 = _0x33d6e0['Handler']['create'](null, _0x4ab218['_onProcess' + 'Change'], [
                    _0xe3105c,
                    _0xeb3de6,
                    _0xcef778
                ], !0x1);
                _0x4ab218['_innerFirs' + 'tLevelLoad' + 'erManager']['_create'](_0x27a10c, !0x1, _0x33d6e0['Handler']['create'](null, _0x4ab218['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'], [
                    _0xe3105c,
                    _0x599109,
                    _0x14825e,
                    _0x1d3f09
                ]), _0x9f64b4, null, null, null, 0x1, !0x0);
            } else
                _0x4ab218['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'](_0xe3105c, null, _0x14825e, _0x1d3f09);
        }
        static ['_onHierarc' + 'hyInnerFir' + 'stLevResou' + 'Loaded'](_0x3740ae, _0x12eabe, _0x4e054f, _0x56d6ec) {
            _0x12eabe && _0x12eabe['recover'](), _0x3740ae['_cache'] = _0x3740ae['_createCac' + 'he'];
            var _0x400249 = 'Scene3D' === _0x4e054f['data']['type'] ? _0x4a3145['_parseScen' + 'e'](_0x4e054f, _0x3740ae['_propertyP' + 'arams'], _0x3740ae['_construct' + 'Params']) : _0x4a3145['_parse'](_0x4e054f, _0x3740ae['_propertyP' + 'arams'], _0x3740ae['_construct' + 'Params']);
            _0x4ab218['_endLoad'](_0x3740ae, _0x400249, _0x56d6ec);
        }
        static ['_loadMesh'](_0xa11830) {
            _0xa11830['on'](_0x33d6e0['Event']['LOADED'], null, _0x4ab218['_onMeshLmL' + 'oaded'], [_0xa11830]), _0xa11830['load'](_0xa11830['url'], _0x33d6e0['Loader']['BUFFER'], !0x1, null, !0x0);
        }
        static ['_onMeshLmL' + 'oaded'](_0xbab5bd, _0x8a7031) {
            _0xbab5bd['_cache'] = _0xbab5bd['_createCac' + 'he'];
            var _0x2c7fa1 = _0x33f5ae['_parse'](_0x8a7031, _0xbab5bd['_propertyP' + 'arams'], _0xbab5bd['_construct' + 'Params']);
            _0x4ab218['_endLoad'](_0xbab5bd, _0x2c7fa1);
        }
        static ['_loadMater' + 'ial'](_0x3c937c) {
            _0x3c937c['on'](_0x33d6e0['Event']['LOADED'], null, _0x4ab218['_onMateril' + 'LmatLoaded'], [_0x3c937c]), _0x3c937c['load'](_0x3c937c['url'], _0x33d6e0['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_onMateril' + 'LmatLoaded'](_0x366bee, _0x436a80) {
            var _0x5b2847, _0x2deab6 = _0x366bee['url'], _0x299471 = _0x89f66e['getURLVeri' + 'on'](_0x2deab6), _0x4a351 = _0x33d6e0['URL']['getPath'](_0x2deab6), _0x7ee35 = [], _0x112472 = [];
            _0x436a80['customProp' + 's'];
            switch (_0x436a80['version']) {
            case 'LAYAMATERI' + 'AL:01':
            case 'LAYAMATERI' + 'AL:02':
                var _0x2a209a, _0x594ff5, _0xb53600 = _0x436a80['props']['textures'];
                if (_0xb53600)
                    for (_0x2a209a = 0x0, _0x594ff5 = _0xb53600['length']; _0x2a209a < _0x594ff5; _0x2a209a++) {
                        var _0x37c568 = _0xb53600[_0x2a209a], _0x30f0e5 = _0x37c568['path'];
                        _0x30f0e5 && (_0x5b2847 = _0x4ab218['formatRela' + 'tivePath'](_0x4a351, _0x30f0e5), _0x299471 && (_0x5b2847 += _0x299471), _0x7ee35['push']({
                            'url': _0x5b2847,
                            'constructParams': _0x37c568['constructP' + 'arams'],
                            'propertyParams': _0x37c568['propertyPa' + 'rams']
                        }), _0x112472['push'](_0x5b2847), _0x37c568['path'] = _0x5b2847);
                    }
                break;
            default:
                throw new Error('Laya3D:unk' + 'onwn\x20versi' + 'on.');
            }
            var _0x534ac8 = _0x7ee35['length'], _0x2e9f13 = _0x534ac8 + 0x1, _0x2909a2 = 0x1 / _0x2e9f13;
            if (_0x4ab218['_onProcess' + 'Change'](_0x366bee, 0x0, _0x2909a2, 0x1), _0x534ac8 > 0x0) {
                var _0x9cf5df = _0x33d6e0['Handler']['create'](null, _0x4ab218['_onProcess' + 'Change'], [
                    _0x366bee,
                    _0x2909a2,
                    _0x534ac8 / _0x2e9f13
                ], !0x1);
                _0x4ab218['_innerFour' + 'thLevelLoa' + 'derManager']['_create'](_0x7ee35, !0x1, _0x33d6e0['Handler']['create'](null, _0x4ab218['_onMateial' + 'TexturesLo' + 'aded'], [
                    _0x366bee,
                    _0x9cf5df,
                    _0x436a80,
                    _0x112472
                ]), _0x9cf5df, null, null, null, 0x1, !0x0);
            } else
                _0x4ab218['_onMateial' + 'TexturesLo' + 'aded'](_0x366bee, null, _0x436a80, null);
        }
        static ['_onMateial' + 'TexturesLo' + 'aded'](_0x16a3b3, _0x23b8ac, _0x148b1e, _0x375e37) {
            _0x16a3b3['_cache'] = _0x16a3b3['_createCac' + 'he'];
            var _0x19381a = _0x18b0d4['_parse'](_0x148b1e, _0x16a3b3['_propertyP' + 'arams'], _0x16a3b3['_construct' + 'Params']);
            _0x4ab218['_endLoad'](_0x16a3b3, _0x19381a, _0x375e37), _0x23b8ac && _0x23b8ac['recover']();
        }
        static ['_loadAvata' + 'r'](_0x37318a) {
            _0x37318a['on'](_0x33d6e0['Event']['LOADED'], null, function (_0x28e1f9) {
                _0x37318a['_cache'] = _0x37318a['_createCac' + 'he'];
                var _0x5d2a2a = _0x2f0a3d['_parse'](_0x28e1f9, _0x37318a['_propertyP' + 'arams'], _0x37318a['_construct' + 'Params']);
                _0x4ab218['_endLoad'](_0x37318a, _0x5d2a2a);
            }), _0x37318a['load'](_0x37318a['url'], _0x33d6e0['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_loadAnima' + 'tionClip'](_0x370a55) {
            _0x370a55['on'](_0x33d6e0['Event']['LOADED'], null, function (_0x5ae886) {
                _0x370a55['_cache'] = _0x370a55['_createCac' + 'he'];
                var _0x57349f = _0x2ae340['_parse'](_0x5ae886, _0x370a55['_propertyP' + 'arams'], _0x370a55['_construct' + 'Params']);
                _0x4ab218['_endLoad'](_0x370a55, _0x57349f);
            }), _0x370a55['load'](_0x370a55['url'], _0x33d6e0['Loader']['BUFFER'], !0x1, null, !0x0);
        }
        static ['_loadTextu' + 're2D'](_0x381eb4) {
            var _0x529f73, _0x4d7829 = _0x381eb4['url'], _0x2a34c2 = _0x4d7829['lastIndexO' + 'f']('.') + 0x1, _0x1678d5 = _0x4d7829['indexOf']('?'), _0x59a2be = -0x1 == _0x1678d5 ? _0x4d7829['length'] : _0x1678d5;
            switch (_0x4d7829['substr'](_0x2a34c2, _0x59a2be - _0x2a34c2)) {
            case 'jpg':
            case 'jpeg':
            case 'bmp':
            case 'gif':
            case 'png':
                _0x529f73 = 'nativeimag' + 'e';
                break;
            case 'dds':
            case 'ktx':
            case 'pvr':
                _0x529f73 = _0x33d6e0['Loader']['BUFFER'];
            }
            _0x381eb4['on'](_0x33d6e0['Event']['LOADED'], null, function (_0x4d826f) {
                _0x381eb4['_cache'] = _0x381eb4['_createCac' + 'he'];
                var _0x23d406 = _0x33d6e0['Texture2D']['_parse'](_0x4d826f, _0x381eb4['_propertyP' + 'arams'], _0x381eb4['_construct' + 'Params']);
                _0x4ab218['_endLoad'](_0x381eb4, _0x23d406);
            }), _0x381eb4['load'](_0x381eb4['url'], _0x529f73, !0x1, null, !0x0);
        }
        static ['_loadTextu' + 'reCube'](_0x575a97) {
            _0x575a97['on'](_0x33d6e0['Event']['LOADED'], null, _0x4ab218['_onTexture' + 'CubeLtcLoa' + 'ded'], [_0x575a97]), _0x575a97['load'](_0x575a97['url'], _0x33d6e0['Loader']['JSON'], !0x1, null, !0x0);
        }
        static ['_onTexture' + 'CubeLtcLoa' + 'ded'](_0x4367cb, _0x23401c) {
            var _0x5527a2 = _0x33d6e0['URL']['getPath'](_0x4367cb['url']), _0x1cad0d = [
                    _0x4ab218['formatRela' + 'tivePath'](_0x5527a2, _0x23401c['front']),
                    _0x4ab218['formatRela' + 'tivePath'](_0x5527a2, _0x23401c['back']),
                    _0x4ab218['formatRela' + 'tivePath'](_0x5527a2, _0x23401c['left']),
                    _0x4ab218['formatRela' + 'tivePath'](_0x5527a2, _0x23401c['right']),
                    _0x4ab218['formatRela' + 'tivePath'](_0x5527a2, _0x23401c['up']),
                    _0x4ab218['formatRela' + 'tivePath'](_0x5527a2, _0x23401c['down'])
                ];
            _0x4ab218['_onProcess' + 'Change'](_0x4367cb, 0x0, 0x1 / 0x7, 0x1);
            var _0x5dca3b = _0x33d6e0['Handler']['create'](null, _0x4ab218['_onProcess' + 'Change'], [
                _0x4367cb,
                0x1 / 0x7,
                0x6 / 0x7
            ], !0x1);
            _0x4ab218['_innerFour' + 'thLevelLoa' + 'derManager']['load'](_0x1cad0d, _0x33d6e0['Handler']['create'](null, _0x4ab218['_onTexture' + 'CubeImages' + 'Loaded'], [
                _0x4367cb,
                _0x1cad0d,
                _0x5dca3b
            ]), _0x5dca3b, 'nativeimag' + 'e');
        }
        static ['_onTexture' + 'CubeImages' + 'Loaded'](_0x26989b, _0x411c07, _0x3dc9a1) {
            for (var _0x19261c = new Array(0x6), _0x22d678 = 0x0; _0x22d678 < 0x6; _0x22d678++)
                _0x19261c[_0x22d678] = _0x33d6e0['Loader']['getRes'](_0x411c07[_0x22d678]);
            _0x26989b['_cache'] = _0x26989b['_createCac' + 'he'];
            var _0x35358a = _0x4b77f2['_parse'](_0x19261c, _0x26989b['_propertyP' + 'arams'], _0x26989b['_construct' + 'Params']);
            for (_0x3dc9a1['recover'](), _0x22d678 = 0x0; _0x22d678 < 0x6; _0x22d678++)
                _0x33d6e0['Loader']['clearRes'](_0x411c07[_0x22d678]);
            _0x4ab218['_endLoad'](_0x26989b, _0x35358a);
        }
        static ['_onProcess' + 'Change'](_0x3708cd, _0x3d41e9, _0x4642d7, _0x9fbddd) {
            (_0x9fbddd = _0x3d41e9 + _0x9fbddd * _0x4642d7) < 0x1 && _0x3708cd['event'](_0x33d6e0['Event']['PROGRESS'], _0x9fbddd);
        }
        static ['init'](_0x42a91a, _0x6891e9, _0x166c35 = null, _0x277a80 = null) {
            if (_0x4ab218['_isInit'])
                _0x277a80 && _0x277a80['run']();
            else {
                _0x4ab218['_isInit'] = !0x0, _0x166c35 && _0x166c35['cloneTo'](_0x237093['_config']), _0x166c35 = _0x237093['_config'], _0x2585ad['debugFrust' + 'umCulling'] = _0x166c35['debugFrust' + 'umCulling'], _0x4ab218['_editerEnv' + 'ironment'] = _0x166c35['_editerEnv' + 'ironment'], _0x169b81['octreeCull' + 'ing'] = _0x166c35['octreeCull' + 'ing'], _0x169b81['octreeInit' + 'ialSize'] = _0x166c35['octreeInit' + 'ialSize'], _0x169b81['octreeInit' + 'ialCenter'] = _0x166c35['octreeInit' + 'ialCenter'], _0x169b81['octreeMinN' + 'odeSize'] = _0x166c35['octreeMinN' + 'odeSize'], _0x169b81['octreeLoos' + 'eness'] = _0x166c35['octreeLoos' + 'eness'];
                var _0x175be3 = window['Physics3D'];
                null == _0x175be3 ? (_0x10fe89['_enablePhy' + 'sics'] = !0x1, _0x4ab218['__init__'](_0x42a91a, _0x6891e9, _0x166c35), _0x277a80 && _0x277a80['run']()) : (_0x10fe89['_enablePhy' + 'sics'] = !0x0, _0x175be3(0x10 * _0x166c35['defaultPhy' + 'sicsMemory'], _0x3d9c98['_interacti' + 've'])['then'](function () {
                    _0x4ab218['__init__'](_0x42a91a, _0x6891e9, _0x166c35), _0x277a80 && _0x277a80['run']();
                }));
            }
        }
    }
    _0x4ab218['HIERARCHY'] = 'HIERARCHY', _0x4ab218['MESH'] = 'MESH', _0x4ab218['MATERIAL'] = 'MATERIAL', _0x4ab218['TEXTURE2D'] = 'TEXTURE2D', _0x4ab218['TEXTURECUB' + 'E'] = 'TEXTURECUB' + 'E', _0x4ab218['ANIMATIONC' + 'LIP'] = 'ANIMATIONC' + 'LIP', _0x4ab218['AVATAR'] = 'AVATAR', _0x4ab218['TERRAINHEI' + 'GHTDATA'] = 'TERRAINHEI' + 'GHTDATA', _0x4ab218['TERRAINRES'] = 'TERRAIN', _0x4ab218['_innerFirs' + 'tLevelLoad' + 'erManager'] = new _0x33d6e0['LoaderMana' + 'ger'](), _0x4ab218['_innerSeco' + 'ndLevelLoa' + 'derManager'] = new _0x33d6e0['LoaderMana' + 'ger'](), _0x4ab218['_innerThir' + 'dLevelLoad' + 'erManager'] = new _0x33d6e0['LoaderMana' + 'ger'](), _0x4ab218['_innerFour' + 'thLevelLoa' + 'derManager'] = new _0x33d6e0['LoaderMana' + 'ger'](), _0x4ab218['_isInit'] = !0x1, _0x4ab218['_editerEnv' + 'ironment'] = !0x1, _0x4ab218['physicsSet' + 'tings'] = new _0x93820f(), window['Laya3D'] = _0x4ab218;
    class _0x3ca4fa extends _0x33d6e0['Component'] {
        constructor() {
            super(...arguments), this['_indexInPo' + 'ol'] = -0x1;
        }
        get ['isSingleto' + 'n']() {
            return !0x1;
        }
        ['_checkProc' + 'essTrigger' + 's']() {
            var _0x6d24ea = _0x3ca4fa['prototype'];
            return this['onTriggerE' + 'nter'] !== _0x6d24ea['onTriggerE' + 'nter'] || (this['onTriggerS' + 'tay'] !== _0x6d24ea['onTriggerS' + 'tay'] || this['onTriggerE' + 'xit'] !== _0x6d24ea['onTriggerE' + 'xit']);
        }
        ['_checkProc' + 'essCollisi' + 'ons']() {
            var _0x3c138b = _0x3ca4fa['prototype'];
            return this['onCollisio' + 'nEnter'] !== _0x3c138b['onCollisio' + 'nEnter'] || (this['onCollisio' + 'nStay'] !== _0x3c138b['onCollisio' + 'nStay'] || this['onCollisio' + 'nExit'] !== _0x3c138b['onCollisio' + 'nExit']);
        }
        ['_onAwake']() {
            this['onAwake'](), this['onStart'] !== _0x3ca4fa['prototype']['onStart'] && _0x33d6e0['Laya']['startTimer']['callLater'](this, this['onStart']);
        }
        ['_onEnable']() {
            this['owner']['_scene']['_addScript'](this);
            var _0x28ba29 = _0x3ca4fa['prototype'];
            this['onKeyDown'] !== _0x28ba29['onKeyDown'] && _0x33d6e0['Laya']['stage']['on'](_0x33d6e0['Event']['KEY_DOWN'], this, this['onKeyDown']), this['onKeyPress'] !== _0x28ba29['onKeyPress'] && _0x33d6e0['Laya']['stage']['on'](_0x33d6e0['Event']['KEY_PRESS'], this, this['onKeyUp']), this['onKeyUp'] !== _0x28ba29['onKeyUp'] && _0x33d6e0['Laya']['stage']['on'](_0x33d6e0['Event']['KEY_UP'], this, this['onKeyUp']), this['onEnable']();
        }
        ['_onDisable']() {
            this['owner']['_scene']['_removeScr' + 'ipt'](this), this['owner']['offAllCall' + 'er'](this), _0x33d6e0['Laya']['stage']['offAllCall' + 'er'](this), this['onDisable']();
        }
        ['_isScript']() {
            return !0x0;
        }
        ['_onAdded']() {
            var _0x40b476 = this['owner'], _0x4add5b = _0x40b476['_scripts'];
            _0x4add5b || (_0x40b476['_scripts'] = _0x4add5b = []), _0x4add5b['push'](this), _0x40b476['_needProce' + 'ssCollisio' + 'ns'] || (_0x40b476['_needProce' + 'ssCollisio' + 'ns'] = this['_checkProc' + 'essCollisi' + 'ons']()), _0x40b476['_needProce' + 'ssTriggers'] || (_0x40b476['_needProce' + 'ssTriggers'] = this['_checkProc' + 'essTrigger' + 's']());
        }
        ['_onDestroy']() {
            var _0x307b93 = this['owner']['_scripts'];
            _0x307b93['splice'](_0x307b93['indexOf'](this), 0x1);
            var _0x5b5330 = this['owner'];
            _0x5b5330['_needProce' + 'ssTriggers'] = !0x1;
            for (var _0x503325 = 0x0, _0x1e2820 = _0x307b93['length']; _0x503325 < _0x1e2820; _0x503325++)
                if (_0x307b93[_0x503325]['_checkProc' + 'essTrigger' + 's']()) {
                    _0x5b5330['_needProce' + 'ssTriggers'] = !0x0;
                    break;
                }
            for (_0x5b5330['_needProce' + 'ssCollisio' + 'ns'] = !0x1, _0x503325 = 0x0, _0x1e2820 = _0x307b93['length']; _0x503325 < _0x1e2820; _0x503325++)
                if (_0x307b93[_0x503325]['_checkProc' + 'essCollisi' + 'ons']()) {
                    _0x5b5330['_needProce' + 'ssCollisio' + 'ns'] = !0x0;
                    break;
                }
            this['onDestroy']();
        }
        ['onAwake']() {
        }
        ['onEnable']() {
        }
        ['onStart']() {
        }
        ['onTriggerE' + 'nter'](_0x1e6efc) {
        }
        ['onTriggerS' + 'tay'](_0x2cac51) {
        }
        ['onTriggerE' + 'xit'](_0x18758d) {
        }
        ['onCollisio' + 'nEnter'](_0x57c899) {
        }
        ['onCollisio' + 'nStay'](_0x4e1129) {
        }
        ['onCollisio' + 'nExit'](_0x5c04cc) {
        }
        ['onMouseDow' + 'n']() {
        }
        ['onMouseDra' + 'g']() {
        }
        ['onMouseCli' + 'ck']() {
        }
        ['onMouseUp']() {
        }
        ['onMouseEnt' + 'er']() {
        }
        ['onMouseOve' + 'r']() {
        }
        ['onMouseOut']() {
        }
        ['onKeyDown'](_0x39aa27) {
        }
        ['onKeyPress'](_0x47e3ce) {
        }
        ['onKeyUp'](_0x4a6056) {
        }
        ['onUpdate']() {
        }
        ['onLateUpda' + 'te']() {
        }
        ['onPreRende' + 'r']() {
        }
        ['onPostRend' + 'er']() {
        }
        ['onDisable']() {
        }
        ['onDestroy']() {
        }
    }
    class _0x2d8402 {
        constructor(_0x2628a3, _0x22b4d0, _0x507f6c, _0x1497c5) {
            this['_datas'] = [], this['_w'] = _0x2628a3, this['_h'] = _0x22b4d0, this['_minHeight'] = _0x507f6c, this['_maxHeight'] = _0x1497c5;
        }
        static ['creatFromM' + 'esh'](_0x234aa8, _0x50a025, _0x9e4b30, _0x123bf2) {
            for (var _0x53dc65 = [], _0x16e8b4 = [], _0x4f85f2 = _0x234aa8['subMeshCou' + 'nt'], _0x1763b4 = 0x0; _0x1763b4 < _0x4f85f2; _0x1763b4++) {
                for (var _0x4a3c0f = _0x234aa8['getSubMesh'](_0x1763b4), _0x1c344a = _0x4a3c0f['_vertexBuf' + 'fer'], _0x1cb73f = _0x1c344a['getFloat32' + 'Data'](), _0x58beae = [], _0x3f3474 = 0x0; _0x3f3474 < _0x1cb73f['length']; _0x3f3474 += _0x1c344a['vertexDecl' + 'aration']['vertexStri' + 'de'] / 0x4) {
                    var _0x105b11 = new _0x4795b3(_0x1cb73f[_0x3f3474 + 0x0], _0x1cb73f[_0x3f3474 + 0x1], _0x1cb73f[_0x3f3474 + 0x2]);
                    _0x58beae['push'](_0x105b11);
                }
                _0x53dc65['push'](_0x58beae);
                var _0x470b72 = _0x4a3c0f['_indexBuff' + 'er'];
                _0x16e8b4['push'](_0x470b72['getData']());
            }
            var _0x77e4ff = _0x234aa8['bounds'], _0x43e5e8 = _0x77e4ff['getMin']()['x'], _0x213ab4 = _0x77e4ff['getMin']()['z'], _0x13b561 = _0x77e4ff['getMax']()['x'], _0x5713ac = _0x77e4ff['getMax']()['z'], _0xb8d100 = _0x77e4ff['getMin']()['y'], _0x4a4e89 = _0x77e4ff['getMax']()['y'], _0x199954 = _0x13b561 - _0x43e5e8, _0x5319c0 = _0x5713ac - _0x213ab4, _0x1093b7 = _0x123bf2['x'] = _0x199954 / (_0x50a025 - 0x1), _0x4abeef = _0x123bf2['y'] = _0x5319c0 / (_0x9e4b30 - 0x1), _0x419250 = new _0x2d8402(_0x50a025, _0x9e4b30, _0xb8d100, _0x4a4e89), _0x5c4cd1 = _0x2d8402['_tempRay'], _0x2a4884 = _0x5c4cd1['direction'];
            _0x2a4884['x'] = 0x0, _0x2a4884['y'] = -0x1, _0x2a4884['z'] = 0x0;
            var _0x775bdf = _0x4a4e89 + 0.1;
            _0x5c4cd1['origin']['y'] = _0x775bdf;
            for (var _0x5ef753 = 0x0; _0x5ef753 < _0x9e4b30; _0x5ef753++) {
                var _0x4ead49 = _0x213ab4 + _0x5ef753 * _0x4abeef;
                _0x419250['_datas'][_0x5ef753] = [];
                for (var _0x378178 = 0x0; _0x378178 < _0x50a025; _0x378178++) {
                    var _0x274900 = _0x43e5e8 + _0x378178 * _0x1093b7, _0x475c18 = _0x5c4cd1['origin'];
                    _0x475c18['x'] = _0x274900, _0x475c18['z'] = _0x4ead49;
                    var _0x30a3c1 = _0x2d8402['_getPositi' + 'on'](_0x5c4cd1, _0x53dc65, _0x16e8b4);
                    _0x419250['_datas'][_0x5ef753][_0x378178] = _0x30a3c1 === Number['MAX_VALUE'] ? NaN : _0x775bdf - _0x30a3c1;
                }
            }
            return _0x419250;
        }
        static ['createFrom' + 'Image'](_0x2d9385, _0x54b0e5, _0x5b1ca2) {
            for (var _0x354a3d = _0x2d9385['width'], _0x487db8 = _0x2d9385['height'], _0x44db74 = new _0x2d8402(_0x354a3d, _0x487db8, _0x54b0e5, _0x5b1ca2), _0x207069 = (_0x5b1ca2 - _0x54b0e5) / 0xfe, _0x3f67d9 = _0x2d9385['getPixels'](), _0x4b2529 = 0x0, _0x5bec08 = 0x0; _0x5bec08 < _0x487db8; _0x5bec08++)
                for (var _0x34f2f9 = _0x44db74['_datas'][_0x5bec08] = [], _0x4990f9 = 0x0; _0x4990f9 < _0x354a3d; _0x4990f9++) {
                    var _0x2a15e4 = _0x3f67d9[_0x4b2529++], _0x24f953 = _0x3f67d9[_0x4b2529++], _0x5cc7c3 = _0x3f67d9[_0x4b2529++], _0x407144 = _0x3f67d9[_0x4b2529++];
                    _0x34f2f9[_0x4990f9] = 0xff == _0x2a15e4 && 0xff == _0x24f953 && 0xff == _0x5cc7c3 && 0xff == _0x407144 ? NaN : (_0x2a15e4 + _0x24f953 + _0x5cc7c3) / 0x3 * _0x207069 + _0x54b0e5;
                }
            return _0x44db74;
        }
        static ['_getPositi' + 'on'](_0x1b2962, _0xd64dfc, _0x1a881f) {
            for (var _0x56fc6a = Number['MAX_VALUE'], _0x4b82f5 = 0x0; _0x4b82f5 < _0xd64dfc['length']; _0x4b82f5++)
                for (var _0x4fe9c2 = _0xd64dfc[_0x4b82f5], _0x4b8e7a = _0x1a881f[_0x4b82f5], _0x4eed8a = 0x0; _0x4eed8a < _0x4b8e7a['length']; _0x4eed8a += 0x3) {
                    var _0x246cee = _0x4fe9c2[_0x4b8e7a[_0x4eed8a + 0x0]], _0x286e00 = _0x4fe9c2[_0x4b8e7a[_0x4eed8a + 0x1]], _0x4723e4 = _0x4fe9c2[_0x4b8e7a[_0x4eed8a + 0x2]], _0x18044b = _0x238ee3['rayInterse' + 'ctsTriangl' + 'e'](_0x1b2962, _0x246cee, _0x286e00, _0x4723e4);
                    !isNaN(_0x18044b) && _0x18044b < _0x56fc6a && (_0x56fc6a = _0x18044b);
                }
            return _0x56fc6a;
        }
        get ['width']() {
            return this['_w'];
        }
        get ['height']() {
            return this['_h'];
        }
        get ['maxHeight']() {
            return this['_maxHeight'];
        }
        get ['minHeight']() {
            return this['_minHeight'];
        }
        ['_inBounds'](_0x435cc1, _0x4f4859) {
            return _0x435cc1 >= 0x0 && _0x435cc1 < this['_h'] && _0x4f4859 >= 0x0 && _0x4f4859 < this['_w'];
        }
        ['getHeight'](_0x5f10f7, _0x163339) {
            return this['_inBounds'](_0x5f10f7, _0x163339) ? this['_datas'][_0x5f10f7][_0x163339] : NaN;
        }
    }
    _0x2d8402['_tempRay'] = new _0x58eead(new _0x4795b3(), new _0x4795b3());
    class _0x4c4a90 extends _0x6ac009 {
        constructor(_0xc7d0d3, _0x5a40d9, _0xc33c93 = null) {
            super(_0xc7d0d3, _0xc33c93), this['_heightMap'] = _0x5a40d9, this['_cellSize'] = new _0x4c44b6();
        }
        static ['createFrom' + 'Mesh'](_0x2a787a, _0x1be405, _0x570c9c, _0x1306b2 = null) {
            var _0x5b17fc = new _0x4c4a90(_0x2a787a, null, _0x1306b2);
            return _0x5b17fc['_initCreat' + 'eFromMesh'](_0x1be405, _0x570c9c), _0x5b17fc;
        }
        static ['createFrom' + 'MeshAndHei' + 'ghtMap'](_0x33a43c, _0x5ed4f7, _0x29627b, _0x480e8c, _0x5cedbd = null) {
            var _0x1ec3e4 = new _0x4c4a90(_0x33a43c, null, _0x5cedbd);
            return _0x1ec3e4['_initCreat' + 'eFromMeshH' + 'eightMap'](_0x5ed4f7, _0x29627b, _0x480e8c), _0x1ec3e4;
        }
        get ['minX']() {
            var _0x4bf5d1 = this['transform']['worldMatri' + 'x']['elements'];
            return this['_minX'] * this['_getScaleX']() + _0x4bf5d1[0xc];
        }
        get ['minZ']() {
            var _0x1c5511 = this['transform']['worldMatri' + 'x']['elements'];
            return this['_minZ'] * this['_getScaleZ']() + _0x1c5511[0xe];
        }
        get ['width']() {
            return (this['_heightMap']['width'] - 0x1) * this['_cellSize']['x'] * this['_getScaleX']();
        }
        get ['depth']() {
            return (this['_heightMap']['height'] - 0x1) * this['_cellSize']['y'] * this['_getScaleZ']();
        }
        ['_disableRo' + 'tation']() {
            var _0x123e0b = this['transform']['rotation'];
            _0x123e0b['x'] = 0x0, _0x123e0b['y'] = 0x0, _0x123e0b['z'] = 0x0, _0x123e0b['w'] = 0x1, this['transform']['rotation'] = _0x123e0b;
        }
        ['_getScaleX']() {
            var _0x2acd8e = this['transform']['worldMatri' + 'x']['elements'], _0xbdf3ec = _0x2acd8e[0x0], _0x91bc84 = _0x2acd8e[0x1], _0x55cf9d = _0x2acd8e[0x2];
            return Math['sqrt'](_0xbdf3ec * _0xbdf3ec + _0x91bc84 * _0x91bc84 + _0x55cf9d * _0x55cf9d);
        }
        ['_getScaleZ']() {
            var _0x37ccff = this['transform']['worldMatri' + 'x']['elements'], _0x5464a0 = _0x37ccff[0x8], _0x54cc53 = _0x37ccff[0x9], _0x40a22c = _0x37ccff[0xa];
            return Math['sqrt'](_0x5464a0 * _0x5464a0 + _0x54cc53 * _0x54cc53 + _0x40a22c * _0x40a22c);
        }
        ['_initCreat' + 'eFromMesh'](_0x1fcc98, _0x28e2ea) {
            this['_heightMap'] = _0x2d8402['creatFromM' + 'esh'](this['meshFilter']['sharedMesh'], _0x1fcc98, _0x28e2ea, this['_cellSize']);
            var _0x597ed1 = this['meshFilter']['sharedMesh']['bounds'], _0x4afde4 = _0x597ed1['getMin']();
            _0x597ed1['getMax'](), (this['_minX'] = _0x4afde4['x'], this['_minZ'] = _0x4afde4['z']);
        }
        ['_initCreat' + 'eFromMeshH' + 'eightMap'](_0x4c482f, _0x4426d7, _0x3f65e1) {
            var _0x471f13 = this['meshFilter']['sharedMesh']['bounds'];
            this['_heightMap'] = _0x2d8402['createFrom' + 'Image'](_0x4c482f, _0x4426d7, _0x3f65e1), this['_computeCe' + 'llSize'](_0x471f13);
            var _0x3d75e3 = _0x471f13['getMin']();
            _0x471f13['getMax'](), (this['_minX'] = _0x3d75e3['x'], this['_minZ'] = _0x3d75e3['z']);
        }
        ['_computeCe' + 'llSize'](_0x48217e) {
            var _0x291d4d = _0x48217e['getMin'](), _0x3959bd = _0x48217e['getMax'](), _0x29c107 = _0x291d4d['x'], _0x8a9e81 = _0x291d4d['z'], _0x2e982b = _0x3959bd['x'] - _0x29c107, _0x21dd92 = _0x3959bd['z'] - _0x8a9e81;
            this['_cellSize']['x'] = _0x2e982b / (this['_heightMap']['width'] - 0x1), this['_cellSize']['y'] = _0x21dd92 / (this['_heightMap']['height'] - 0x1);
        }
        ['_update'](_0x2a799a) {
            this['_disableRo' + 'tation']();
        }
        ['getHeight'](_0x216ed4, _0x14b46c) {
            _0x4c4a90['_tempVecto' + 'r3']['x'] = _0x216ed4, _0x4c4a90['_tempVecto' + 'r3']['y'] = 0x0, _0x4c4a90['_tempVecto' + 'r3']['z'] = _0x14b46c, this['_disableRo' + 'tation']();
            var _0x3ad580 = this['transform']['worldMatri' + 'x'];
            _0x3ad580['invert'](_0x4c4a90['_tempMatri' + 'x4x4']), _0x4795b3['transformC' + 'oordinate'](_0x4c4a90['_tempVecto' + 'r3'], _0x4c4a90['_tempMatri' + 'x4x4'], _0x4c4a90['_tempVecto' + 'r3']), _0x216ed4 = _0x4c4a90['_tempVecto' + 'r3']['x'], _0x14b46c = _0x4c4a90['_tempVecto' + 'r3']['z'];
            var _0x475f09 = (_0x216ed4 - this['_minX']) / this['_cellSize']['x'], _0x177342 = (_0x14b46c - this['_minZ']) / this['_cellSize']['y'], _0x19523f = Math['floor'](_0x177342), _0x440055 = Math['floor'](_0x475f09), _0x44a1f4 = _0x475f09 - _0x440055, _0x4ec788 = _0x177342 - _0x19523f, _0x2dbc56 = _0x3ad580['elements'], _0x5eae70 = _0x2dbc56[0x4], _0x1089c4 = _0x2dbc56[0x5], _0x5c753b = _0x2dbc56[0x6], _0x5f1aa2 = Math['sqrt'](_0x5eae70 * _0x5eae70 + _0x1089c4 * _0x1089c4 + _0x5c753b * _0x5c753b), _0x5e51a7 = _0x2dbc56[0xd], _0x4f00eb = this['_heightMap']['getHeight'](_0x19523f, _0x440055 + 0x1), _0x2d5059 = this['_heightMap']['getHeight'](_0x19523f + 0x1, _0x440055);
            if (isNaN(_0x4f00eb) || isNaN(_0x2d5059))
                return NaN;
            if (_0x44a1f4 + _0x4ec788 <= 0x1) {
                var _0x363eef = this['_heightMap']['getHeight'](_0x19523f, _0x440055);
                return isNaN(_0x363eef) ? NaN : (_0x363eef + _0x44a1f4 * (_0x4f00eb - _0x363eef) + _0x4ec788 * (_0x2d5059 - _0x363eef)) * _0x5f1aa2 + _0x5e51a7;
            }
            var _0x182215 = this['_heightMap']['getHeight'](_0x19523f + 0x1, _0x440055 + 0x1);
            return isNaN(_0x182215) ? NaN : (_0x182215 + (0x1 - _0x44a1f4) * (_0x2d5059 - _0x182215) + (0x1 - _0x4ec788) * (_0x4f00eb - _0x182215)) * _0x5f1aa2 + _0x5e51a7;
        }
    }
    _0x4c4a90['_tempVecto' + 'r3'] = new _0x4795b3(), _0x4c4a90['_tempMatri' + 'x4x4'] = new _0x16c2be();
    class _0x26ba5f {
        constructor() {
            this['_currentLe' + 'ngth'] = 0x0, this['_elements'] = new Float32Array(0xc);
        }
        get ['gradientCo' + 'unt']() {
            return this['_currentLe' + 'ngth'] / 0x3;
        }
        ['add'](_0x195b10, _0x19fb63) {
            this['_currentLe' + 'ngth'] < 0x8 ? (0x6 === this['_currentLe' + 'ngth'] && 0x1 !== _0x195b10 && (_0x195b10 = 0x1, console['log']('GradientDa' + 'taVector2\x20' + 'warning:th' + 'e\x20forth\x20ke' + 'y\x20is\x20\x20be\x20f' + 'orce\x20set\x20t' + 'o\x201.')), this['_elements'][this['_currentLe' + 'ngth']++] = _0x195b10, this['_elements'][this['_currentLe' + 'ngth']++] = _0x19fb63['x'], this['_elements'][this['_currentLe' + 'ngth']++] = _0x19fb63['y']) : console['log']('GradientDa' + 'taVector2\x20' + 'warning:da' + 'ta\x20count\x20m' + 'ust\x20lessEq' + 'ual\x20than\x204');
        }
        ['cloneTo'](_0x1935d2) {
            var _0x51db16 = _0x1935d2;
            _0x51db16['_currentLe' + 'ngth'] = this['_currentLe' + 'ngth'];
            for (var _0x11e610 = _0x51db16['_elements'], _0x355f2c = 0x0, _0x18d795 = this['_elements']['length']; _0x355f2c < _0x18d795; _0x355f2c++)
                _0x11e610[_0x355f2c] = this['_elements'][_0x355f2c];
        }
        ['clone']() {
            var _0x4d3d96 = new _0x26ba5f();
            return this['cloneTo'](_0x4d3d96), _0x4d3d96;
        }
    }
    class _0x319d9e {
        constructor() {
        }
        ['render'](_0x3ec20f) {
        }
    }
    class _0x49ab91 extends _0x319d9e {
        constructor() {
            super(), this['_shader'] = null, this['_shaderDat' + 'a'] = new _0x4ac605(), this['_linearCol' + 'or'] = new _0x210bda(), this['_bloomText' + 'ureTexelSi' + 'ze'] = new _0x333f41(), this['_shaderThr' + 'eshold'] = new _0x333f41(), this['_shaderPar' + 'ams'] = new _0x333f41(), this['_pyramid'] = null, this['_intensity'] = 0x0, this['_threshold'] = 0x1, this['_softKnee'] = 0.5, this['_diffusion'] = 0x7, this['_anamorphi' + 'cRatio'] = 0x0, this['_dirtInten' + 'sity'] = 0x0, this['_shaderSet' + 'ting'] = new _0x333f41(), this['_dirtTileO' + 'ffset'] = new _0x333f41(), this['clamp'] = 0xffc0, this['color'] = new _0x210bda(0x1, 0x1, 0x1, 0x1), this['fastMode'] = !0x1, this['dirtTextur' + 'e'] = null, this['_shader'] = _0x1ede74['find']('PostProces' + 'sBloom'), this['_pyramid'] = new Array(0x2 * _0x49ab91['MAXPYRAMID' + 'SIZE']);
        }
        get ['intensity']() {
            return this['_intensity'];
        }
        set ['intensity'](_0x37817b) {
            this['_intensity'] = Math['max'](_0x37817b, 0x0);
        }
        get ['threshold']() {
            return this['_threshold'];
        }
        set ['threshold'](_0x973c6c) {
            this['_threshold'] = Math['max'](_0x973c6c, 0x0);
        }
        get ['softKnee']() {
            return this['_softKnee'];
        }
        set ['softKnee'](_0x36d840) {
            this['_softKnee'] = Math['min'](Math['max'](_0x36d840, 0x0), 0x1);
        }
        get ['diffusion']() {
            return this['_diffusion'];
        }
        set ['diffusion'](_0x1bd580) {
            this['_diffusion'] = Math['min'](Math['max'](_0x1bd580, 0x1), 0xa);
        }
        get ['anamorphic' + 'Ratio']() {
            return this['_anamorphi' + 'cRatio'];
        }
        set ['anamorphic' + 'Ratio'](_0xb67692) {
            this['_anamorphi' + 'cRatio'] = Math['min'](Math['max'](_0xb67692, -0x1), 0x1);
        }
        get ['dirtIntens' + 'ity']() {
            return this['_dirtInten' + 'sity'];
        }
        set ['dirtIntens' + 'ity'](_0x160bb5) {
            this['_dirtInten' + 'sity'] = Math['max'](_0x160bb5, 0x0);
        }
        ['render'](_0x3b796e) {
            var _0x224f3b = _0x3b796e['command'], _0x4561c1 = _0x3b796e['camera']['viewport'];
            this['_shaderDat' + 'a']['setTexture'](_0x49ab91['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'], _0x33d6e0['Texture2D']['whiteTextu' + 're']);
            var _0x4725e7, _0x5d76d5 = this['_anamorphi' + 'cRatio'], _0x4c4f15 = _0x5d76d5 < 0x0 ? -_0x5d76d5 : 0x0, _0x993140 = _0x5d76d5 > 0x0 ? _0x5d76d5 : 0x0, _0x4f607e = Math['floor'](_0x4561c1['width'] / (0x2 - _0x4c4f15)), _0x2ae9a1 = Math['floor'](_0x4561c1['height'] / (0x2 - _0x993140)), _0x460f61 = Math['max'](_0x4f607e, _0x2ae9a1);
            _0x4725e7 = Math['log2'](_0x460f61) + this['_diffusion'] - 0xa;
            var _0x279d12 = Math['floor'](_0x4725e7), _0x5d0bdd = Math['min'](Math['max'](_0x279d12, 0x1), _0x49ab91['MAXPYRAMID' + 'SIZE']), _0x3c8125 = 0.5 + _0x4725e7 - _0x279d12;
            this['_shaderDat' + 'a']['setNumber'](_0x49ab91['SHADERVALU' + 'E_SAMPLESC' + 'ALE'], _0x3c8125);
            var _0x4e7b67 = _0x210bda['gammaToLin' + 'earSpace'](this['threshold']), _0x388231 = _0x4e7b67 * this['_softKnee'] + 0.00001;
            this['_shaderThr' + 'eshold']['setValue'](_0x4e7b67, _0x4e7b67 - _0x388231, 0x2 * _0x388231, 0.25 / _0x388231), this['_shaderDat' + 'a']['setVector'](_0x49ab91['SHADERVALU' + 'E_THRESHOL' + 'D'], this['_shaderThr' + 'eshold']);
            var _0x36b071 = _0x210bda['gammaToLin' + 'earSpace'](this['clamp']);
            this['_shaderPar' + 'ams']['setValue'](_0x36b071, 0x0, 0x0, 0x0), this['_shaderDat' + 'a']['setVector'](_0x49ab91['SHADERVALU' + 'E_PARAMS'], this['_shaderPar' + 'ams']);
            for (var _0x37fe43 = this['fastMode'] ? 0x1 : 0x0, _0x18fb2c = _0x3b796e['source'], _0xd4cb91 = 0x0; _0xd4cb91 < _0x5d0bdd; _0xd4cb91++) {
                var _0x27d28b = 0x2 * _0xd4cb91, _0x57331d = _0x27d28b + 0x1, _0x582313 = 0x0 == _0xd4cb91 ? _0x49ab91['SUBSHADER_' + 'PREFILTER1' + '3'] + _0x37fe43 : _0x49ab91['SUBSHADER_' + 'DOWNSAMPLE' + '13'] + _0x37fe43, _0x2c0676 = _0x3f7a1d['createFrom' + 'Pool'](_0x4f607e, _0x2ae9a1, _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8'], _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE'], _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_BILINEAR']);
                if (this['_pyramid'][_0x27d28b] = _0x2c0676, _0xd4cb91 !== _0x5d0bdd - 0x1) {
                    var _0x3e601c = _0x3f7a1d['createFrom' + 'Pool'](_0x4f607e, _0x2ae9a1, _0x33d6e0['RenderText' + 'ureFormat']['R8G8B8'], _0x33d6e0['RenderText' + 'ureDepthFo' + 'rmat']['DEPTHSTENC' + 'IL_NONE'], _0x33d6e0['BaseTextur' + 'e']['FILTERMODE' + '_BILINEAR']);
                    this['_pyramid'][_0x57331d] = _0x3e601c;
                }
                _0x224f3b['blitScreen' + 'Triangle'](_0x18fb2c, _0x2c0676, null, this['_shader'], this['_shaderDat' + 'a'], _0x582313), _0x18fb2c = _0x2c0676, _0x4f607e = Math['max'](Math['floor'](_0x4f607e / 0x2), 0x1), _0x2ae9a1 = Math['max'](Math['floor'](_0x2ae9a1 / 0x2), 0x1);
            }
            var _0x439028 = this['_pyramid'][0x2 * (_0x5d0bdd - 0x1)];
            for (_0xd4cb91 = _0x5d0bdd - 0x2; _0xd4cb91 >= 0x0; _0xd4cb91--)
                _0x57331d = (_0x27d28b = 0x2 * _0xd4cb91) + 0x1, _0x2c0676 = this['_pyramid'][_0x27d28b], _0x3e601c = this['_pyramid'][_0x57331d], _0x224f3b['setShaderD' + 'ataTexture'](this['_shaderDat' + 'a'], _0x49ab91['SHADERVALU' + 'E_BLOOMTEX'], _0x2c0676), _0x224f3b['blitScreen' + 'Triangle'](_0x439028, _0x3e601c, null, this['_shader'], this['_shaderDat' + 'a'], _0x49ab91['SUBSHADER_' + 'UPSAMPLETE' + 'NT'] + _0x37fe43), _0x439028 = _0x3e601c;
            var _0x3d2b98 = this['_linearCol' + 'or'];
            this['color']['toLinear'](_0x3d2b98);
            var _0x2b5e45 = Math['pow'](0x2, this['_intensity'] / 0xa) - 0x1, _0x1b2dc6 = this['_shaderSet' + 'ting'];
            this['_shaderSet' + 'ting']['setValue'](_0x3c8125, _0x2b5e45, this['_dirtInten' + 'sity'], _0x5d0bdd);
            var _0x23845d = this['dirtTextur' + 'e'] ? this['dirtTextur' + 'e'] : _0x33d6e0['Texture2D']['blackTextu' + 're'], _0x2a283e = _0x23845d['width'] / _0x23845d['height'], _0x241958 = _0x4561c1['width'] / _0x4561c1['height'], _0x5caaca = this['_dirtTileO' + 'ffset'];
            _0x2a283e > _0x241958 ? _0x5caaca['setValue'](_0x241958 / _0x2a283e, 0x1, 0.5 * (0x1 - _0x5caaca['x']), 0x0) : _0x2a283e < _0x241958 && _0x5caaca['setValue'](0x1, _0x2a283e / _0x241958, 0x0, 0.5 * (0x1 - _0x5caaca['y']));
            var _0x49b92c = _0x3b796e['compositeS' + 'haderData'];
            for (this['fastMode'] ? _0x49b92c['addDefine'](_0x47aaf5['SHADERDEFI' + 'NE_BLOOM_L' + 'OW']) : _0x49b92c['addDefine'](_0x47aaf5['SHADERDEFI' + 'NE_BLOOM']), this['_bloomText' + 'ureTexelSi' + 'ze']['setValue'](0x1 / _0x439028['width'], 0x1 / _0x439028['height'], _0x439028['width'], _0x439028['height']), _0x49b92c['setVector'](_0x47aaf5['SHADERVALU' + 'E_BLOOM_DI' + 'RTTILEOFFS' + 'ET'], _0x5caaca), _0x49b92c['setVector'](_0x47aaf5['SHADERVALU' + 'E_BLOOM_SE' + 'TTINGS'], _0x1b2dc6), _0x49b92c['setVector'](_0x47aaf5['SHADERVALU' + 'E_BLOOM_CO' + 'LOR'], new _0x333f41(_0x3d2b98['r'], _0x3d2b98['g'], _0x3d2b98['b'], _0x3d2b98['a'])), _0x49b92c['setTexture'](_0x47aaf5['SHADERVALU' + 'E_BLOOM_DI' + 'RTTEX'], _0x23845d), _0x49b92c['setTexture'](_0x47aaf5['SHADERVALU' + 'E_BLOOMTEX'], _0x439028), _0x49b92c['setVector'](_0x47aaf5['SHADERVALU' + 'E_BLOOMTEX' + '_TEXELSIZE'], this['_bloomText' + 'ureTexelSi' + 'ze']), _0xd4cb91 = 0x0; _0xd4cb91 < _0x5d0bdd; _0xd4cb91++)
                _0x57331d = (_0x27d28b = 0x2 * _0xd4cb91) + 0x1, _0x3f7a1d['recoverToP' + 'ool'](this['_pyramid'][_0x27d28b]), 0x0 !== _0xd4cb91 && _0xd4cb91 !== _0x5d0bdd - 0x1 && _0x3f7a1d['recoverToP' + 'ool'](this['_pyramid'][_0x57331d]);
            _0x3b796e['deferredRe' + 'leaseTextu' + 'res']['push'](_0x439028);
        }
    }
    _0x49ab91['SHADERVALU' + 'E_MAINTEX'] = _0x1ede74['propertyNa' + 'meToID']('u_MainTex'), _0x49ab91['SHADERVALU' + 'E_AUTOEXPO' + 'SURETEX'] = _0x1ede74['propertyNa' + 'meToID']('u_AutoExpo' + 'sureTex'), _0x49ab91['SHADERVALU' + 'E_SAMPLESC' + 'ALE'] = _0x1ede74['propertyNa' + 'meToID']('u_SampleSc' + 'ale'), _0x49ab91['SHADERVALU' + 'E_THRESHOL' + 'D'] = _0x1ede74['propertyNa' + 'meToID']('u_Threshol' + 'd'), _0x49ab91['SHADERVALU' + 'E_PARAMS'] = _0x1ede74['propertyNa' + 'meToID']('u_Params'), _0x49ab91['SHADERVALU' + 'E_BLOOMTEX'] = _0x1ede74['propertyNa' + 'meToID']('u_BloomTex'), _0x49ab91['SUBSHADER_' + 'PREFILTER1' + '3'] = 0x0, _0x49ab91['SUBSHADER_' + 'PREFILTER4'] = 0x1, _0x49ab91['SUBSHADER_' + 'DOWNSAMPLE' + '13'] = 0x2, _0x49ab91['SUBSHADER_' + 'DOWNSAMPLE' + '4'] = 0x3, _0x49ab91['SUBSHADER_' + 'UPSAMPLETE' + 'NT'] = 0x4, _0x49ab91['SUBSHADER_' + 'UPSAMPLEBO' + 'X'] = 0x5, _0x49ab91['MAXPYRAMID' + 'SIZE'] = 0x10;
    class _0x3c33ce {
        constructor(_0x4b4dfb) {
            if (!(_0x4b4dfb instanceof Array) || 0x4 !== _0x4b4dfb['length'])
                throw new Error('Rand:Seed\x20' + 'must\x20be\x20an' + '\x20array\x20wit' + 'h\x204\x20number' + 's');
            this['_state0U'] = 0x0 | _0x4b4dfb[0x0], this['_state0L'] = 0x0 | _0x4b4dfb[0x1], this['_state1U'] = 0x0 | _0x4b4dfb[0x2], this['_state1L'] = 0x0 | _0x4b4dfb[0x3];
        }
        ['randomint']() {
            var _0x447891 = this['_state0U'], _0x56859c = this['_state0L'], _0x4fc9fa = this['_state1U'], _0x51121e = this['_state1L'], _0xf0362e = (_0x51121e >>> 0x0) + (_0x56859c >>> 0x0), _0x8b81e4 = _0x4fc9fa + _0x447891 + (_0xf0362e / 0x2 >>> 0x1f) >>> 0x0, _0xad8365 = _0xf0362e >>> 0x0;
            this['_state0U'] = _0x4fc9fa, this['_state0L'] = _0x51121e;
            var _0xafdcc9 = 0x0, _0x11db41 = 0x0;
            return _0xafdcc9 = (_0x447891 ^= _0xafdcc9 = _0x447891 << 0x17 | (-0x200 & _0x56859c) >>> 0x9) ^ _0x4fc9fa, _0x11db41 = (_0x56859c ^= _0x11db41 = _0x56859c << 0x17) ^ _0x51121e, (_0xafdcc9 ^= _0x447891 >>> 0x12, _0x11db41 ^= _0x56859c >>> 0x12 | (0x3ffff & _0x447891) << 0xe), (_0xafdcc9 ^= _0x4fc9fa >>> 0x5, _0x11db41 ^= _0x51121e >>> 0x5 | (0x1f & _0x4fc9fa) << 0x1b, this['_state1U'] = _0xafdcc9, this['_state1L'] = _0x11db41, [
                _0x8b81e4,
                _0xad8365
            ]);
        }
        ['random']() {
            var _0x5a3574 = this['randomint'](), _0x1023e3 = _0x5a3574[0x0], _0x6b47bf = 0x3ff << 0x14 | _0x1023e3 >>> 0xc, _0x9a09ec = 0x0 | (_0x5a3574[0x1] >>> 0xc | (0xfff & _0x1023e3) << 0x14);
            return _0x3c33ce['_CONVERTIO' + 'N_BUFFER']['setUint32'](0x0, _0x6b47bf, !0x1), _0x3c33ce['_CONVERTIO' + 'N_BUFFER']['setUint32'](0x4, _0x9a09ec, !0x1), _0x3c33ce['_CONVERTIO' + 'N_BUFFER']['getFloat64'](0x0, !0x1) - 0x1;
        }
    }
    _0x3c33ce['_CONVERTIO' + 'N_BUFFER'] = new DataView(new ArrayBuffer(0x8)), _0x3c33ce['defaultRan' + 'd'] = new _0x3c33ce([
        0x0,
        Date['now']() / 0x10000,
        0x0,
        Date['now']() % 0x10000
    ]);
    class _0x3a5a16 {
        constructor(_0x5e1829, _0x3807a4) {
            this['_width'] = 0x0, this['_height'] = 0x0, this['_width'] = _0x5e1829, this['_height'] = _0x3807a4;
        }
        static get ['fullScreen']() {
            return new _0x3a5a16(-0x1, -0x1);
        }
        get ['width']() {
            return -0x1 === this['_width'] ? _0x311bc2['clientWidt' + 'h'] : this['_width'];
        }
        get ['height']() {
            return -0x1 === this['_height'] ? _0x311bc2['clientHeig' + 'ht'] : this['_height'];
        }
    }
    _0x341b51['AlternateL' + 'ightQueue'] = _0x4f18be, _0x341b51['AnimationC' + 'lip'] = _0x2ae340, _0x341b51['AnimationC' + 'lipParser0' + '3'] = _0x3d9ce4, _0x341b51['AnimationC' + 'lipParser0' + '4'] = _0x188b3f, _0x341b51['AnimationE' + 'vent'] = _0x1104b7, _0x341b51['AnimationN' + 'ode'] = _0x3e6973, _0x341b51['AnimationT' + 'ransform3D'] = _0x58eaa8, _0x341b51['Animator'] = _0x40f618, _0x341b51['AnimatorCo' + 'ntrollerLa' + 'yer'] = _0x550df5, _0x341b51['AnimatorPl' + 'ayState'] = _0x1cf4e4, _0x341b51['AnimatorSt' + 'ate'] = _0x46070f, _0x341b51['AnimatorSt' + 'ateScript'] = class {
        constructor() {
        }
        ['onStateEnt' + 'er']() {
        }
        ['onStateUpd' + 'ate']() {
        }
        ['onStateExi' + 't']() {
        }
    }, _0x341b51['Avatar'] = _0x2f0a3d, _0x341b51['BaseCamera'] = _0x293adb, _0x341b51['BaseMateri' + 'al'] = _0xf76038, _0x341b51['BaseRender'] = _0x26d0eb, _0x341b51['BaseShape'] = _0x2512e6, _0x341b51['BatchMark'] = _0x389da5, _0x341b51['BlinnPhong' + 'Material'] = _0x565ea0, _0x341b51['BlitScreen' + 'QuadCMD'] = _0x7e15dc, _0x341b51['BloomEffec' + 't'] = _0x49ab91, _0x341b51['BoundBox'] = _0x3555e9, _0x341b51['BoundFrust' + 'um'] = _0x5387d2, _0x341b51['BoundSpher' + 'e'] = _0x43c0d5, _0x341b51['Bounds'] = _0x5a0bdd, _0x341b51['BoundsOctr' + 'ee'] = _0x327096, _0x341b51['BoundsOctr' + 'eeNode'] = _0x308d64, _0x341b51['BoxCollide' + 'rShape'] = _0x4b248c, _0x341b51['BoxShape'] = _0x322897, _0x341b51['BufferStat' + 'e'] = _0x59c541, _0x341b51['BulletInte' + 'ractive'] = _0x3d9c98, _0x341b51['Burst'] = _0x32b46a, _0x341b51['Camera'] = _0x4e1b1b, _0x341b51['CapsuleCol' + 'liderShape'] = _0x9d0b1, _0x341b51['CastShadow' + 'List'] = class extends _0x16b19d {
        constructor() {
            super();
        }
        ['add'](_0x7c0a88) {
            if (-0x1 !== _0x7c0a88['_indexInCa' + 'stShadowLi' + 'st'])
                throw 'CastShadow' + 'List:eleme' + 'nt\x20has\x20\x20in' + '\x20\x20CastShad' + 'owList.';
            this['_add'](_0x7c0a88), _0x7c0a88['_indexInCa' + 'stShadowLi' + 'st'] = this['length']++;
        }
        ['remove'](_0x3791ab) {
            var _0x339f02 = _0x3791ab['_indexInCa' + 'stShadowLi' + 'st'];
            if (this['length']--, _0x339f02 !== this['length']) {
                var _0x180842 = this['elements'][this['length']];
                this['elements'][_0x339f02] = _0x180842, _0x180842['_indexInCa' + 'stShadowLi' + 'st'] = _0x339f02;
            }
            _0x3791ab['_indexInCa' + 'stShadowLi' + 'st'] = -0x1;
        }
    }, _0x341b51['CharacterC' + 'ontroller'] = _0x4f04eb, _0x341b51['CircleShap' + 'e'] = _0x453392, _0x341b51['Cluster'] = _0x43893d, _0x341b51['ColliderSh' + 'ape'] = _0x5cfc15, _0x341b51['Collision'] = _0x5e39b2, _0x341b51['CollisionT' + 'ool'] = _0x1d890b, _0x341b51['CollisionU' + 'tils'] = _0xb064b3, _0x341b51['Color'] = _0x210bda, _0x341b51['ColorOverL' + 'ifetime'] = _0x809633, _0x341b51['Command'] = _0x5a65f6, _0x341b51['CommandBuf' + 'fer'] = _0x51e399, _0x341b51['CompoundCo' + 'lliderShap' + 'e'] = _0x4180f5, _0x341b51['ConchQuate' + 'rnion'] = _0x416f10, _0x341b51['ConchVecto' + 'r3'] = _0x21e77b, _0x341b51['ConchVecto' + 'r4'] = _0x17c8fb, _0x341b51['ConeCollid' + 'erShape'] = _0x15fc9f, _0x341b51['ConeShape'] = _0x46e1ac, _0x341b51['Config3D'] = _0x237093, _0x341b51['Constraint' + '3D'] = class {
        constructor() {
        }
    }, _0x341b51['Constraint' + 'Component'] = class extends _0x33d6e0['Component'] {
        constructor() {
            super(), this['_feedbackE' + 'nabled'] = !0x1;
        }
        get ['enabled']() {
            return super['enabled'];
        }
        set ['enabled'](_0x1b3eac) {
            this['_btConstra' + 'int']['IsEnabled'] = _0x1b3eac, super['enabled'] = _0x1b3eac;
        }
        get ['breakingIm' + 'pulseThres' + 'hold']() {
            return this['_breakingI' + 'mpulseThre' + 'shold'];
        }
        set ['breakingIm' + 'pulseThres' + 'hold'](_0x11f510) {
            this['_btConstra' + 'int']['BreakingIm' + 'pulseThres' + 'hold'] = _0x11f510, this['_breakingI' + 'mpulseThre' + 'shold'] = _0x11f510;
        }
        get ['appliedImp' + 'ulse']() {
            return this['_feedbackE' + 'nabled'] || (this['_btConstra' + 'int']['EnableFeed' + 'back'](!0x0), this['_feedbackE' + 'nabled'] = !0x0), this['_btConstra' + 'int']['AppliedImp' + 'ulse'];
        }
        get ['connectedB' + 'ody']() {
            return this['_connected' + 'Body'];
        }
        set ['connectedB' + 'ody'](_0xb37a1b) {
            this['_connected' + 'Body'] = _0xb37a1b;
        }
        ['_onDestroy']() {
            _0x10fe89['_bullet']['destroy'](this['_btConstra' + 'int']), this['_btConstra' + 'int'] = null;
        }
    }, _0x341b51['ContactPoi' + 'nt'] = _0x3d86de, _0x341b51['Containmen' + 'tType'] = _0xa7a5eb, _0x341b51['CylinderCo' + 'lliderShap' + 'e'] = _0xa0c106, _0x341b51['DefineData' + 's'] = _0x5f373b, _0x341b51['DirectionL' + 'ight'] = _0x86826b, _0x341b51['DirectionL' + 'ightQueue'] = _0x41a548, _0x341b51['DynamicBat' + 'chManager'] = _0x328d6f, _0x341b51['EffectMate' + 'rial'] = _0x49239f, _0x341b51['Emission'] = _0x580b02, _0x341b51['ExtendTerr' + 'ainMateria' + 'l'] = _0x3c3770, _0x341b51['FloatKeyfr' + 'ame'] = _0x157523, _0x341b51['FrameOverT' + 'ime'] = _0x5c4f1e, _0x341b51['FrustumCul' + 'ling'] = _0x2585ad, _0x341b51['GeometryEl' + 'ement'] = _0x42e697, _0x341b51['Gradient'] = _0x20a4d3, _0x341b51['GradientAn' + 'gularVeloc' + 'ity'] = _0x8e6cf8, _0x341b51['GradientCo' + 'lor'] = _0x45c823, _0x341b51['GradientDa' + 'taInt'] = _0x3e98e2, _0x341b51['GradientDa' + 'taNumber'] = _0x2e288d, _0x341b51['GradientDa' + 'taVector2'] = _0x26ba5f, _0x341b51['GradientMo' + 'de'] = _0x49bf14, _0x341b51['GradientSi' + 'ze'] = _0x3566ff, _0x341b51['GradientVe' + 'locity'] = _0x3f3530, _0x341b51['HalfFloatU' + 'tils'] = _0x3d10d1, _0x341b51['HeightMap'] = _0x2d8402, _0x341b51['Heightfiel' + 'dColliderS' + 'hape'] = class {
        constructor() {
        }
    }, _0x341b51['Hemisphere' + 'Shape'] = _0x393f0e, _0x341b51['HitResult'] = _0x1431fa, _0x341b51['ILaya3D'] = _0x334864, _0x341b51['IndexBuffe' + 'r3D'] = _0x95846f, _0x341b51['Input3D'] = _0x3e5163, _0x341b51['Keyframe'] = _0x57092c, _0x341b51['KeyframeNo' + 'de'] = _0x505044, _0x341b51['KeyframeNo' + 'deList'] = _0x25229b, _0x341b51['KeyframeNo' + 'deOwner'] = _0xe9442c, _0x341b51['Laya3D'] = _0x4ab218, _0x341b51['LightQueue'] = _0x11515c, _0x341b51['LightSprit' + 'e'] = _0x719241, _0x341b51['LoadModelV' + '04'] = _0x37c756, _0x341b51['LoadModelV' + '05'] = _0x3c11cf, _0x341b51['Material'] = _0x18b0d4, _0x341b51['MathUtils3' + 'D'] = _0x183ae5, _0x341b51['Matrix3x3'] = _0x25d419, _0x341b51['Matrix4x4'] = _0x16c2be, _0x341b51['Mesh'] = _0x33f5ae, _0x341b51['MeshCollid' + 'erShape'] = _0x235fd5, _0x341b51['MeshFilter'] = _0xa4f90b, _0x341b51['MeshReader'] = _0x3af98b, _0x341b51['MeshRender' + 'DynamicBat' + 'chManager'] = _0x4972f1, _0x341b51['MeshRender' + 'StaticBatc' + 'hManager'] = _0x542a94, _0x341b51['MeshRender' + 'er'] = _0x1f30fc, _0x341b51['MeshSprite' + '3D'] = _0x6ac009, _0x341b51['MeshSprite' + '3DShaderDe' + 'claration'] = _0x22d0bb, _0x341b51['MeshTerrai' + 'nSprite3D'] = _0x4c4a90, _0x341b51['MouseTouch'] = _0xba35fc, _0x341b51['OctreeMoti' + 'onList'] = _0x2dd112, _0x341b51['PBRSpecula' + 'rMaterial'] = _0xfd8cfb, _0x341b51['PBRStandar' + 'dMaterial'] = _0x3d476f, _0x341b51['ParallelSp' + 'litShadowM' + 'ap'] = _0x362004, _0x341b51['Physics3D'] = _0x10fe89, _0x341b51['Physics3DU' + 'tils'] = _0x17f555, _0x341b51['PhysicsCol' + 'lider'] = _0x46d3a6, _0x341b51['PhysicsCom' + 'ponent'] = _0x4aabff, _0x341b51['PhysicsSet' + 'tings'] = _0x93820f, _0x341b51['PhysicsSim' + 'ulation'] = _0xa3f18a, _0x341b51['PhysicsTri' + 'ggerCompon' + 'ent'] = _0x21712f, _0x341b51['PhysicsUpd' + 'ateList'] = _0x3c2883, _0x341b51['Picker'] = _0x238ee3, _0x341b51['PixelLineD' + 'ata'] = class {
        constructor() {
            this['startPosit' + 'ion'] = new _0x4795b3(), this['endPositio' + 'n'] = new _0x4795b3(), this['startColor'] = new _0x210bda(), this['endColor'] = new _0x210bda();
        }
        ['cloneTo'](_0x5d44dd) {
            this['startPosit' + 'ion']['cloneTo'](_0x5d44dd['startPosit' + 'ion']), this['endPositio' + 'n']['cloneTo'](_0x5d44dd['endPositio' + 'n']), this['startColor']['cloneTo'](_0x5d44dd['startColor']), this['endColor']['cloneTo'](_0x5d44dd['endColor']);
        }
    }, _0x341b51['PixelLineF' + 'ilter'] = _0x3cb747, _0x341b51['PixelLineM' + 'aterial'] = _0x47a01b, _0x341b51['PixelLineR' + 'enderer'] = _0x32541e, _0x341b51['PixelLineS' + 'prite3D'] = _0x595ba2, _0x341b51['PixelLineV' + 'ertex'] = _0x3243fd, _0x341b51['Plane'] = _0x34cda7, _0x341b51['Point2Poin' + 'tConstrain' + 't'] = class {
        constructor() {
            this['_pivotInA'] = new _0x4795b3(), this['_pivotInB'] = new _0x4795b3();
        }
        get ['pivotInA']() {
            return this['_pivotInA'];
        }
        set ['pivotInA'](_0x1fbc47) {
            this['_pivotInA'] = _0x1fbc47;
        }
        get ['pivotInB']() {
            return this['_pivotInB'];
        }
        set ['pivotInB'](_0x5b27d5) {
            this['_pivotInB'] = _0x5b27d5;
        }
        get ['damping']() {
            return this['_damping'];
        }
        set ['damping'](_0x524501) {
            this['_damping'] = _0x524501;
        }
        get ['impulseCla' + 'mp']() {
            return this['_impulseCl' + 'amp'];
        }
        set ['impulseCla' + 'mp'](_0x58c9a3) {
            this['_impulseCl' + 'amp'] = _0x58c9a3;
        }
        get ['tau']() {
            return this['_tau'];
        }
        set ['tau'](_0x5537b9) {
            this['_tau'] = _0x5537b9;
        }
    }, _0x341b51['PointLight'] = _0x477c61, _0x341b51['PostProces' + 's'] = _0x47aaf5, _0x341b51['PostProces' + 'sEffect'] = _0x319d9e, _0x341b51['PostProces' + 'sRenderCon' + 'text'] = _0x4d33e1, _0x341b51['PrimitiveM' + 'esh'] = _0x36b75a, _0x341b51['Quaternion'] = _0x5958af, _0x341b51['Quaternion' + 'Keyframe'] = _0x4d1789, _0x341b51['Rand'] = _0x3d0159, _0x341b51['RandX'] = _0x3c33ce, _0x341b51['Ray'] = _0x58eead, _0x341b51['RenderCont' + 'ext3D'] = _0x311bc2, _0x341b51['RenderElem' + 'ent'] = _0x14112a, _0x341b51['RenderQueu' + 'e'] = _0x2326e7, _0x341b51['RenderStat' + 'e'] = _0x311b27, _0x341b51['RenderText' + 'ure'] = _0x3f7a1d, _0x341b51['Renderable' + 'Sprite3D'] = _0x33bc07, _0x341b51['Rigidbody3' + 'D'] = _0x551d49, _0x341b51['RotationOv' + 'erLifetime'] = _0x42963c, _0x341b51['Scene3D'] = _0x169b81, _0x341b51['Scene3DSha' + 'derDeclara' + 'tion'] = _0x311294, _0x341b51['Scene3DUti' + 'ls'] = _0x4a3145, _0x341b51['SceneManag' + 'er'] = class {
        constructor() {
        }
    }, _0x341b51['ScreenQuad'] = _0x2e0ca7, _0x341b51['ScreenTria' + 'ngle'] = _0x57264c, _0x341b51['Script3D'] = _0x3ca4fa, _0x341b51['SetRenderT' + 'argetCMD'] = _0xf8a474, _0x341b51['SetShaderD' + 'ataTexture' + 'CMD'] = _0x22d674, _0x341b51['Shader3D'] = _0x1ede74, _0x341b51['ShaderData'] = _0x4ac605, _0x341b51['ShaderDefi' + 'ne'] = _0x29a1b7, _0x341b51['ShaderInit' + '3D'] = _0x55ff6a, _0x341b51['ShaderInst' + 'ance'] = _0x30a211, _0x341b51['ShaderPass'] = _0x2211b6, _0x341b51['ShaderVari' + 'able'] = _0x47788a, _0x341b51['ShaderVari' + 'ant'] = _0x268bb3, _0x341b51['ShaderVari' + 'antCollect' + 'ion'] = _0x1be7f9, _0x341b51['ShapeUtils'] = _0x3a5f6c, _0x341b51['ShuriKenPa' + 'rticle3D'] = _0x5ae730, _0x341b51['ShuriKenPa' + 'rticle3DSh' + 'aderDeclar' + 'ation'] = _0x5728cf, _0x341b51['ShurikenPa' + 'rticleData'] = _0x7412d7, _0x341b51['ShurikenPa' + 'rticleMate' + 'rial'] = _0x268ae0, _0x341b51['ShurikenPa' + 'rticleRend' + 'erer'] = _0x58c4a4, _0x341b51['ShurikenPa' + 'rticleSyst' + 'em'] = _0x1fc961, _0x341b51['SimpleSing' + 'letonList'] = _0x4617c4, _0x341b51['SingletonL' + 'ist'] = _0x16b19d, _0x341b51['Size'] = _0x3a5a16, _0x341b51['SizeOverLi' + 'fetime'] = _0x25d126, _0x341b51['SkinnedMes' + 'hRenderer'] = _0x334d4e, _0x341b51['SkinnedMes' + 'hSprite3D'] = _0x333a16, _0x341b51['SkinnedMes' + 'hSprite3DS' + 'haderDecla' + 'ration'] = _0x19c8e9, _0x341b51['SkyBox'] = _0x2958cd, _0x341b51['SkyBoxMate' + 'rial'] = _0x4a932e, _0x341b51['SkyDome'] = _0x3fc537, _0x341b51['SkyMesh'] = _0x30b028, _0x341b51['SkyProcedu' + 'ralMateria' + 'l'] = _0x1e9b59, _0x341b51['SkyRendere' + 'r'] = _0x4ad4ff, _0x341b51['SphereColl' + 'iderShape'] = _0x1a13ea, _0x341b51['SphereShap' + 'e'] = _0x54551d, _0x341b51['SpotLight'] = _0x7df596, _0x341b51['Sprite3D'] = _0x2fcf9a, _0x341b51['StartFrame'] = _0x2c01a3, _0x341b51['StaticBatc' + 'hManager'] = _0x11568b, _0x341b51['StaticPlan' + 'eColliderS' + 'hape'] = _0x57f780, _0x341b51['SubMesh'] = _0x8e84ef, _0x341b51['SubMeshDyn' + 'amicBatch'] = _0x5d1ab6, _0x341b51['SubMeshIns' + 'tanceBatch'] = _0x1b47c9, _0x341b51['SubMeshRen' + 'derElement'] = _0x1cdd46, _0x341b51['SubMeshSta' + 'ticBatch'] = _0x2388d0, _0x341b51['SubShader'] = _0x3c43ef, _0x341b51['SystemUtil' + 's'] = _0x5773d8, _0x341b51['TextMesh'] = class {
        get ['text']() {
            return this['_text'];
        }
        set ['text'](_0x4ac902) {
            this['_text'] = _0x4ac902;
        }
        get ['fontSize']() {
            return this['_fontSize'];
        }
        set ['fontSize'](_0x289a6f) {
            this['_fontSize'] = _0x289a6f;
        }
        get ['color']() {
            return this['_color'];
        }
        set ['color'](_0x3c6542) {
            this['_color'] = _0x3c6542;
        }
        constructor() {
        }
        ['_createVer' + 'texBuffer'](_0x5e1a8d) {
        }
        ['_resizeVer' + 'texBuffer'](_0x4610fe) {
        }
        ['_addChar']() {
        }
    }, _0x341b51['TextureCub' + 'e'] = _0x4b77f2, _0x341b51['TextureGen' + 'erator'] = _0x4b9677, _0x341b51['TextureMod' + 'e'] = _0x3e5472, _0x341b51['TextureShe' + 'etAnimatio' + 'n'] = _0x4da8a7, _0x341b51['Touch'] = _0x46c15e, _0x341b51['TrailFilte' + 'r'] = _0x1f0248, _0x341b51['TrailGeome' + 'try'] = _0x43bf3a, _0x341b51['TrailMater' + 'ial'] = _0x595179, _0x341b51['TrailRende' + 'rer'] = _0x25b775, _0x341b51['TrailSprit' + 'e3D'] = _0xc92457, _0x341b51['Transform3' + 'D'] = _0x8f4324, _0x341b51['UnlitMater' + 'ial'] = _0x86cc6e, _0x341b51['Utils3D'] = _0x89f66e, _0x341b51['Vector2'] = _0x4c44b6, _0x341b51['Vector3'] = _0x4795b3, _0x341b51['Vector3Key' + 'frame'] = _0x185756, _0x341b51['Vector4'] = _0x333f41, _0x341b51['VelocityOv' + 'erLifetime'] = _0x212687, _0x341b51['VertexBuff' + 'er3D'] = _0x5dfaba, _0x341b51['VertexDecl' + 'aration'] = _0x3c5011, _0x341b51['VertexElem' + 'ent'] = _0x5c79c8, _0x341b51['VertexElem' + 'entFormat'] = _0x43e6c5, _0x341b51['VertexMesh'] = _0xe3d46, _0x341b51['VertexPosi' + 'tionTerrai' + 'n'] = _0x487fd8, _0x341b51['VertexPosi' + 'tionTextur' + 'e0'] = _0x8522a4, _0x341b51['VertexShur' + 'iKenPartic' + 'le'] = _0x391bdc, _0x341b51['VertexShur' + 'ikenPartic' + 'leBillboar' + 'd'] = _0x25e31b, _0x341b51['VertexShur' + 'ikenPartic' + 'leMesh'] = _0x52cf21, _0x341b51['VertexTrai' + 'l'] = _0x16bb26, _0x341b51['Viewport'] = _0x3db26c, _0x341b51['WaterPrima' + 'ryMaterial'] = _0x4249a7;
}(window['Laya'] = window['Laya'] || {}, Laya);