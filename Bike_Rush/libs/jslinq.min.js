! function(t, e) {
    var n = {
            Identity: function(t) {
                return t;
            },
            True: function() {
                return !0;
            },
            Blank: function() {}
        },
        r = {
            Boolean: typeof !0,
            Number: "number",
            String: "string",
            Object: typeof {},
            Undefined: typeof e,
            Function: "function"
        },
        o = {
            "": n.Identity
        },
        u = {
            createLambda: function(t) {
                if (null == t) return n.Identity;
                if (typeof t === r.String) {
                    var e = o[t];
                    if (null != e) return e;
                    if (-1 === t.indexOf("=>")) {
                        for (var u, i = new RegExp("[$]+", "g"), a = 0; null != (u = i.exec(t));) {
                            var c = u[0].length;
                            c > a && (a = c);
                        }
                        for (var f = [], s = 1; a >= s; s++) {
                            for (var l = "", p = 0; s > p; p++) l += "$";
                            f.push(l);
                        }
                        var h = Array.prototype.join.call(f, ",");
                        return e = new Function(h, "return " + t), o[t] = e, e;
                    }
                    var y = t.match(/^[(\s]*([^()]*?)[)\s]*=>(.*)/);
                    return e = new Function(y[1], "return " + y[2]), o[t] = e, e;
                }
                return t;
            },
            isIEnumerable: function(t) {
                if (typeof Enumerator !== r.Undefined) try {
                    return new Enumerator(t), !0;
                } catch (e) {}
                return !1;
            },
            defineProperty: null != Object.defineProperties ? function(t, e, n) {
                Object.defineProperty(t, e, {
                    enumerable: !1,
                    configurable: !0,
                    writable: !0,
                    value: n
                });
            } : function(t, e, n) {
                t[e] = n;
            },
            compare: function(t, e) {
                return t === e ? 0 : t > e ? 1 : -1;
            },
            dispose: function(t) {
                null != t && t.dispose();
            }
        },
        i = {
            Before: 0,
            Running: 1,
            After: 2
        },
        a = function(t, e, n) {
            var r = new c(),
                o = i.Before;
            this.current = r.current, this.moveNext = function() {
                try {
                    switch (o) {
                        case i.Before:
                            o = i.Running, t();

                        case i.Running:
                            return e.apply(r) ? !0 : (this.dispose(), !1);

                        case i.After:
                            return !1;
                    }
                } catch (n) {
                    throw this.dispose(), n;
                }
            }, this.dispose = function() {
                if (o == i.Running) try {
                    n();
                } finally {
                    o = i.After;
                }
            };
        },
        c = function() {
            var t = null;
            this.current = function() {
                return t;
            }, this.yieldReturn = function(e) {
                return t = e, !0;
            }, this.yieldBreak = function() {
                return !1;
            };
        },
        f = function(t) {
            this.getEnumerator = t;
        };
    f.Utils = {}, f.Utils.createLambda = function(t) {
        return u.createLambda(t);
    }, f.Utils.createEnumerable = function(t) {
        return new f(t);
    }, f.Utils.createEnumerator = function(t, e, n) {
        return new a(t, e, n);
    }, f.Utils.extendTo = function(t) {
        var e, n = t.prototype;
        t === Array ? (e = h.prototype, u.defineProperty(n, "getSource", function() {
            return this;
        })) : (e = f.prototype, u.defineProperty(n, "getEnumerator", function() {
            return f.from(this).getEnumerator();
        }));
        for (var r in e) {
            var o = e[r];
            n[r] != o && (null == n[r] || (r += "ByLinq", n[r] != o)) && o instanceof Function && u.defineProperty(n, r, o);
        }
    }, f.choice = function() {
        var t = arguments;
        return new f(function() {
            return new a(function() {
                t = t[0] instanceof Array ? t[0] : null != t[0].getEnumerator ? t[0].toArray() : t;
            }, function() {
                return this.yieldReturn(t[Math.floor(Math.random() * t.length)]);
            }, n.Blank);
        });
    }, f.cycle = function() {
        var t = arguments;
        return new f(function() {
            var e = 0;
            return new a(function() {
                t = t[0] instanceof Array ? t[0] : null != t[0].getEnumerator ? t[0].toArray() : t;
            }, function() {
                return e >= t.length && (e = 0), this.yieldReturn(t[e++]);
            }, n.Blank);
        });
    }, f.empty = function() {
        return new f(function() {
            return new a(n.Blank, function() {
                return !1;
            }, n.Blank);
        });
    }, f.from = function(t) {
        if (null == t) return f.empty();
        if (t instanceof f) return t;
        if (typeof t == r.Number || typeof t == r.Boolean) return f.repeat(t, 1);
        if (typeof t == r.String) return new f(function() {
            var e = 0;
            return new a(n.Blank, function() {
                return e < t.length ? this.yieldReturn(t.charAt(e++)) : !1;
            }, n.Blank);
        });
        if (typeof t != r.Function) {
            if (typeof t.length == r.Number) return new h(t);
            if (!(t instanceof Object) && u.isIEnumerable(t)) return new f(function() {
                var e, r = !0;
                return new a(function() {
                    e = new Enumerator(t);
                }, function() {
                    return r ? r = !1 : e.moveNext(), e.atEnd() ? !1 : this.yieldReturn(e.item());
                }, n.Blank);
            });
            if (typeof Windows === r.Object && typeof t.first === r.Function) return new f(function() {
                var e, r = !0;
                return new a(function() {
                    e = t.first();
                }, function() {
                    return r ? r = !1 : e.moveNext(), e.hasCurrent ? this.yieldReturn(e.current) : this.yieldBreak();
                }, n.Blank);
            });
        }
        return new f(function() {
            var e = [],
                r = 0;
            return new a(function() {
                for (var n in t) {
                    var r = t[n];
                    r instanceof Function || !Object.prototype.hasOwnProperty.call(t, n) || e.push({
                        key: n,
                        value: r
                    });
                }
            }, function() {
                return r < e.length ? this.yieldReturn(e[r++]) : !1;
            }, n.Blank);
        });
    }, f.make = function(t) {
        return f.repeat(t, 1);
    }, f.matches = function(t, e, r) {
        return null == r && (r = ""), e instanceof RegExp && (r += e.ignoreCase ? "i" : "",
                r += e.multiline ? "m" : "", e = e.source), -1 === r.indexOf("g") && (r += "g"),
            new f(function() {
                var o;
                return new a(function() {
                    o = new RegExp(e, r);
                }, function() {
                    var e = o.exec(t);
                    return e ? this.yieldReturn(e) : !1;
                }, n.Blank);
            });
    }, f.range = function(t, e, r) {
        return null == r && (r = 1), new f(function() {
            var o, u = 0;
            return new a(function() {
                o = t - r;
            }, function() {
                return u++ < e ? this.yieldReturn(o += r) : this.yieldBreak();
            }, n.Blank);
        });
    }, f.rangeDown = function(t, e, r) {
        return null == r && (r = 1), new f(function() {
            var o, u = 0;
            return new a(function() {
                o = t + r;
            }, function() {
                return u++ < e ? this.yieldReturn(o -= r) : this.yieldBreak();
            }, n.Blank);
        });
    }, f.rangeTo = function(t, e, r) {
        return null == r && (r = 1), new f(e > t ? function() {
            var o;
            return new a(function() {
                o = t - r;
            }, function() {
                var t = o += r;
                return e >= t ? this.yieldReturn(t) : this.yieldBreak();
            }, n.Blank);
        } : function() {
            var o;
            return new a(function() {
                o = t + r;
            }, function() {
                var t = o -= r;
                return t >= e ? this.yieldReturn(t) : this.yieldBreak();
            }, n.Blank);
        });
    }, f.repeat = function(t, e) {
        return null != e ? f.repeat(t).take(e) : new f(function() {
            return new a(n.Blank, function() {
                return this.yieldReturn(t);
            }, n.Blank);
        });
    }, f.repeatWithFinalize = function(t, e) {
        return t = u.createLambda(t), e = u.createLambda(e), new f(function() {
            var n;
            return new a(function() {
                n = t();
            }, function() {
                return this.yieldReturn(n);
            }, function() {
                null != n && (e(n), n = null);
            });
        });
    }, f.generate = function(t, e) {
        return null != e ? f.generate(t).take(e) : (t = u.createLambda(t), new f(function() {
            return new a(n.Blank, function() {
                return this.yieldReturn(t());
            }, n.Blank);
        }));
    }, f.toInfinity = function(t, e) {
        return null == t && (t = 0), null == e && (e = 1), new f(function() {
            var r;
            return new a(function() {
                r = t - e;
            }, function() {
                return this.yieldReturn(r += e);
            }, n.Blank);
        });
    }, f.toNegativeInfinity = function(t, e) {
        return null == t && (t = 0), null == e && (e = 1), new f(function() {
            var r;
            return new a(function() {
                r = t + e;
            }, function() {
                return this.yieldReturn(r -= e);
            }, n.Blank);
        });
    }, f.unfold = function(t, e) {
        return e = u.createLambda(e), new f(function() {
            var r, o = !0;
            return new a(n.Blank, function() {
                return o ? (o = !1, r = t, this.yieldReturn(r)) : (r = e(r), this.yieldReturn(r));
            }, n.Blank);
        });
    }, f.defer = function(t) {
        return new f(function() {
            var e;
            return new a(function() {
                e = f.from(t()).getEnumerator();
            }, function() {
                return e.moveNext() ? this.yieldReturn(e.current()) : this.yieldBreak();
            }, function() {
                u.dispose(e);
            });
        });
    }, f.prototype.traverseBreadthFirst = function(t, e) {
        var n = this;
        return t = u.createLambda(t), e = u.createLambda(e), new f(function() {
            var r, o = 0,
                i = [];
            return new a(function() {
                r = n.getEnumerator();
            }, function() {
                for (;;) {
                    if (r.moveNext()) return i.push(r.current()), this.yieldReturn(e(r.current(), o));
                    var n = f.from(i).selectMany(function(e) {
                        return t(e);
                    });
                    if (!n.any()) return !1;
                    o++, i = [], u.dispose(r), r = n.getEnumerator();
                }
            }, function() {
                u.dispose(r);
            });
        });
    }, f.prototype.traverseDepthFirst = function(t, e) {
        var n = this;
        return t = u.createLambda(t), e = u.createLambda(e), new f(function() {
            var r, o = [];
            return new a(function() {
                r = n.getEnumerator();
            }, function() {
                for (;;) {
                    if (r.moveNext()) {
                        var n = e(r.current(), o.length);
                        return o.push(r), r = f.from(t(r.current())).getEnumerator(), this.yieldReturn(n);
                    }
                    if (o.length <= 0) return !1;
                    u.dispose(r), r = o.pop();
                }
            }, function() {
                try {
                    u.dispose(r);
                } finally {
                    f.from(o).forEach(function(t) {
                        t.dispose();
                    });
                }
            });
        });
    }, f.prototype.flatten = function() {
        var t = this;
        return new f(function() {
            var e, r = null;
            return new a(function() {
                e = t.getEnumerator();
            }, function() {
                for (;;) {
                    if (null != r) {
                        if (r.moveNext()) return this.yieldReturn(r.current());
                        r = null;
                    }
                    if (e.moveNext()) {
                        if (e.current() instanceof Array) {
                            u.dispose(r), r = f.from(e.current()).selectMany(n.Identity).flatten().getEnumerator();
                            continue;
                        }
                        return this.yieldReturn(e.current());
                    }
                    return !1;
                }
            }, function() {
                try {
                    u.dispose(e);
                } finally {
                    u.dispose(r);
                }
            });
        });
    }, f.prototype.pairwise = function(t) {
        var e = this;
        return t = u.createLambda(t), new f(function() {
            var n;
            return new a(function() {
                n = e.getEnumerator(), n.moveNext();
            }, function() {
                var e = n.current();
                return n.moveNext() ? this.yieldReturn(t(e, n.current())) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.scan = function(t, e) {
        var n;
        null == e ? (e = u.createLambda(t), n = !1) : (e = u.createLambda(e), n = !0);
        var r = this;
        return new f(function() {
            var o, i, c = !0;
            return new a(function() {
                o = r.getEnumerator();
            }, function() {
                if (c) {
                    if (c = !1, n) return this.yieldReturn(i = t);
                    if (o.moveNext()) return this.yieldReturn(i = o.current());
                }
                return o.moveNext() ? this.yieldReturn(i = e(i, o.current())) : !1;
            }, function() {
                u.dispose(o);
            });
        });
    }, f.prototype.select = function(t) {
        if (t = u.createLambda(t), t.length <= 1) return new d(this, null, t);
        var e = this;
        return new f(function() {
            var n, r = 0;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                return n.moveNext() ? this.yieldReturn(t(n.current(), r++)) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.selectMany = function(t, n) {
        var r = this;
        return t = u.createLambda(t), null == n && (n = function(t, e) {
            return e;
        }), n = u.createLambda(n), new f(function() {
            var o, i = e,
                c = 0;
            return new a(function() {
                o = r.getEnumerator();
            }, function() {
                if (i === e && !o.moveNext()) return !1;
                do {
                    if (null == i) {
                        var r = t(o.current(), c++);
                        i = f.from(r).getEnumerator();
                    }
                    if (i.moveNext()) return this.yieldReturn(n(o.current(), i.current()));
                    u.dispose(i), i = null;
                } while (o.moveNext());
                return !1;
            }, function() {
                try {
                    u.dispose(o);
                } finally {
                    u.dispose(i);
                }
            });
        });
    }, f.prototype.where = function(t) {
        if (t = u.createLambda(t), t.length <= 1) return new y(this, t);
        var e = this;
        return new f(function() {
            var n, r = 0;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (; n.moveNext();)
                    if (t(n.current(), r++)) return this.yieldReturn(n.current());
                return !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.choose = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n, r = 0;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (; n.moveNext();) {
                    var e = t(n.current(), r++);
                    if (null != e) return this.yieldReturn(e);
                }
                return this.yieldBreak();
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.ofType = function(t) {
        var e;
        switch (t) {
            case Number:
                e = r.Number;
                break;

            case String:
                e = r.String;
                break;

            case Boolean:
                e = r.Boolean;
                break;

            case Function:
                e = r.Function;
                break;

            default:
                e = null;
        }
        return null === e ? this.where(function(e) {
            return e instanceof t;
        }) : this.where(function(t) {
            return typeof t === e;
        });
    }, f.prototype.zip = function() {
        var t = arguments,
            e = u.createLambda(arguments[arguments.length - 1]),
            n = this;
        if (2 == arguments.length) {
            var r = arguments[0];
            return new f(function() {
                var t, o, i = 0;
                return new a(function() {
                    t = n.getEnumerator(), o = f.from(r).getEnumerator();
                }, function() {
                    return t.moveNext() && o.moveNext() ? this.yieldReturn(e(t.current(), o.current(), i++)) : !1;
                }, function() {
                    try {
                        u.dispose(t);
                    } finally {
                        u.dispose(o);
                    }
                });
            });
        }
        return new f(function() {
            var r, o = 0;
            return new a(function() {
                var e = f.make(n).concat(f.from(t).takeExceptLast().select(f.from)).select(function(t) {
                    return t.getEnumerator();
                }).toArray();
                r = f.from(e);
            }, function() {
                if (r.all(function(t) {
                        return t.moveNext();
                    })) {
                    var t = r.select(function(t) {
                        return t.current();
                    }).toArray();
                    return t.push(o++), this.yieldReturn(e.apply(null, t));
                }
                return this.yieldBreak();
            }, function() {
                f.from(r).forEach(u.dispose);
            });
        });
    }, f.prototype.merge = function() {
        var t = arguments,
            e = this;
        return new f(function() {
            var n, r = -1;
            return new a(function() {
                n = f.make(e).concat(f.from(t).select(f.from)).select(function(t) {
                    return t.getEnumerator();
                }).toArray();
            }, function() {
                for (; n.length > 0;) {
                    r = r >= n.length - 1 ? 0 : r + 1;
                    var t = n[r];
                    if (t.moveNext()) return this.yieldReturn(t.current());
                    t.dispose(), n.splice(r--, 1);
                }
                return this.yieldBreak();
            }, function() {
                f.from(n).forEach(u.dispose);
            });
        });
    }, f.prototype.join = function(t, r, o, i, c) {
        r = u.createLambda(r), o = u.createLambda(o), i = u.createLambda(i), c = u.createLambda(c);
        var s = this;
        return new f(function() {
            var l, p, h = null,
                y = 0;
            return new a(function() {
                l = s.getEnumerator(), p = f.from(t).toLookup(o, n.Identity, c);
            }, function() {
                for (;;) {
                    if (null != h) {
                        var t = h[y++];
                        if (t !== e) return this.yieldReturn(i(l.current(), t));
                        t = null, y = 0;
                    }
                    if (!l.moveNext()) return !1;
                    var n = r(l.current());
                    h = p.get(n).toArray();
                }
            }, function() {
                u.dispose(l);
            });
        });
    }, f.prototype.groupJoin = function(t, e, r, o, i) {
        e = u.createLambda(e), r = u.createLambda(r), o = u.createLambda(o), i = u.createLambda(i);
        var c = this;
        return new f(function() {
            var s = c.getEnumerator(),
                l = null;
            return new a(function() {
                s = c.getEnumerator(), l = f.from(t).toLookup(r, n.Identity, i);
            }, function() {
                if (s.moveNext()) {
                    var t = l.get(e(s.current()));
                    return this.yieldReturn(o(s.current(), t));
                }
                return !1;
            }, function() {
                u.dispose(s);
            });
        });
    }, f.prototype.all = function(t) {
        t = u.createLambda(t);
        var e = !0;
        return this.forEach(function(n) {
            return t(n) ? void 0 : (e = !1, !1);
        }), e;
    }, f.prototype.any = function(t) {
        t = u.createLambda(t);
        var e = this.getEnumerator();
        try {
            if (0 == arguments.length) return e.moveNext();
            for (; e.moveNext();)
                if (t(e.current())) return !0;
            return !1;
        } finally {
            u.dispose(e);
        }
    }, f.prototype.isEmpty = function() {
        return !this.any();
    }, f.prototype.concat = function() {
        var t = this;
        if (1 == arguments.length) {
            var e = arguments[0];
            return new f(function() {
                var n, r;
                return new a(function() {
                    n = t.getEnumerator();
                }, function() {
                    if (null == r) {
                        if (n.moveNext()) return this.yieldReturn(n.current());
                        r = f.from(e).getEnumerator();
                    }
                    return r.moveNext() ? this.yieldReturn(r.current()) : !1;
                }, function() {
                    try {
                        u.dispose(n);
                    } finally {
                        u.dispose(r);
                    }
                });
            });
        }
        var n = arguments;
        return new f(function() {
            var e;
            return new a(function() {
                e = f.make(t).concat(f.from(n).select(f.from)).select(function(t) {
                    return t.getEnumerator();
                }).toArray();
            }, function() {
                for (; e.length > 0;) {
                    var t = e[0];
                    if (t.moveNext()) return this.yieldReturn(t.current());
                    t.dispose(), e.splice(0, 1);
                }
                return this.yieldBreak();
            }, function() {
                f.from(e).forEach(u.dispose);
            });
        });
    }, f.prototype.insert = function(t, e) {
        var n = this;
        return new f(function() {
            var r, o, i = 0,
                c = !1;
            return new a(function() {
                r = n.getEnumerator(), o = f.from(e).getEnumerator();
            }, function() {
                return i == t && o.moveNext() ? (c = !0, this.yieldReturn(o.current())) : r.moveNext() ? (i++,
                    this.yieldReturn(r.current())) : !c && o.moveNext() ? this.yieldReturn(o.current()) : !1;
            }, function() {
                try {
                    u.dispose(r);
                } finally {
                    u.dispose(o);
                }
            });
        });
    }, f.prototype.alternate = function(t) {
        var e = this;
        return new f(function() {
            var n, r, o, i;
            return new a(function() {
                o = t instanceof Array || null != t.getEnumerator ? f.from(f.from(t).toArray()) : f.make(t),
                    r = e.getEnumerator(), r.moveNext() && (n = r.current());
            }, function() {
                for (;;) {
                    if (null != i) {
                        if (i.moveNext()) return this.yieldReturn(i.current());
                        i = null;
                    }
                    if (null != n || !r.moveNext()) {
                        if (null != n) {
                            var t = n;
                            return n = null, this.yieldReturn(t);
                        }
                        return this.yieldBreak();
                    }
                    n = r.current(), i = o.getEnumerator();
                }
            }, function() {
                try {
                    u.dispose(r);
                } finally {
                    u.dispose(i);
                }
            });
        });
    }, f.prototype.contains = function(t, e) {
        e = u.createLambda(e);
        var n = this.getEnumerator();
        try {
            for (; n.moveNext();)
                if (e(n.current()) === t) return !0;
            return !1;
        } finally {
            u.dispose(n);
        }
    }, f.prototype.defaultIfEmpty = function(t) {
        var n = this;
        return t === e && (t = null), new f(function() {
            var e, r = !0;
            return new a(function() {
                e = n.getEnumerator();
            }, function() {
                return e.moveNext() ? (r = !1, this.yieldReturn(e.current())) : r ? (r = !1, this.yieldReturn(t)) : !1;
            }, function() {
                u.dispose(e);
            });
        });
    }, f.prototype.distinct = function(t) {
        return this.except(f.empty(), t);
    }, f.prototype.distinctUntilChanged = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n, r, o;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (; n.moveNext();) {
                    var e = t(n.current());
                    if (o) return o = !1, r = e, this.yieldReturn(n.current());
                    if (r !== e) return r = e, this.yieldReturn(n.current());
                }
                return this.yieldBreak();
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.except = function(t, e) {
        e = u.createLambda(e);
        var n = this;
        return new f(function() {
            var r, o;
            return new a(function() {
                r = n.getEnumerator(), o = new m(e), f.from(t).forEach(function(t) {
                    o.add(t);
                });
            }, function() {
                for (; r.moveNext();) {
                    var t = r.current();
                    if (!o.contains(t)) return o.add(t), this.yieldReturn(t);
                }
                return !1;
            }, function() {
                u.dispose(r);
            });
        });
    }, f.prototype.intersect = function(t, e) {
        e = u.createLambda(e);
        var n = this;
        return new f(function() {
            var r, o, i;
            return new a(function() {
                r = n.getEnumerator(), o = new m(e), f.from(t).forEach(function(t) {
                    o.add(t);
                }), i = new m(e);
            }, function() {
                for (; r.moveNext();) {
                    var t = r.current();
                    if (!i.contains(t) && o.contains(t)) return i.add(t), this.yieldReturn(t);
                }
                return !1;
            }, function() {
                u.dispose(r);
            });
        });
    }, f.prototype.sequenceEqual = function(t, e) {
        e = u.createLambda(e);
        var n = this.getEnumerator();
        try {
            var r = f.from(t).getEnumerator();
            try {
                for (; n.moveNext();)
                    if (!r.moveNext() || e(n.current()) !== e(r.current())) return !1;
                return r.moveNext() ? !1 : !0;
            } finally {
                u.dispose(r);
            }
        } finally {
            u.dispose(n);
        }
    }, f.prototype.union = function(t, n) {
        n = u.createLambda(n);
        var r = this;
        return new f(function() {
            var o, i, c;
            return new a(function() {
                o = r.getEnumerator(), c = new m(n);
            }, function() {
                var n;
                if (i === e) {
                    for (; o.moveNext();)
                        if (n = o.current(), !c.contains(n)) return c.add(n), this.yieldReturn(n);
                    i = f.from(t).getEnumerator();
                }
                for (; i.moveNext();)
                    if (n = i.current(), !c.contains(n)) return c.add(n), this.yieldReturn(n);
                return !1;
            }, function() {
                try {
                    u.dispose(o);
                } finally {
                    u.dispose(i);
                }
            });
        });
    }, f.prototype.orderBy = function(t) {
        return new s(this, t, !1);
    }, f.prototype.orderByDescending = function(t) {
        return new s(this, t, !0);
    }, f.prototype.reverse = function() {
        var t = this;
        return new f(function() {
            var e, r;
            return new a(function() {
                e = t.toArray(), r = e.length;
            }, function() {
                return r > 0 ? this.yieldReturn(e[--r]) : !1;
            }, n.Blank);
        });
    }, f.prototype.shuffle = function() {
        var t = this;
        return new f(function() {
            var e;
            return new a(function() {
                e = t.toArray();
            }, function() {
                if (e.length > 0) {
                    var t = Math.floor(Math.random() * e.length);
                    return this.yieldReturn(e.splice(t, 1)[0]);
                }
                return !1;
            }, n.Blank);
        });
    }, f.prototype.weightedSample = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var r, o = 0;
            return new a(function() {
                r = e.choose(function(e) {
                    var n = t(e);
                    return 0 >= n ? null : (o += n, {
                        value: e,
                        bound: o
                    });
                }).toArray();
            }, function() {
                if (r.length > 0) {
                    for (var t = Math.floor(Math.random() * o) + 1, e = -1, n = r.length; n - e > 1;) {
                        var u = Math.floor((e + n) / 2);
                        r[u].bound >= t ? n = u : e = u;
                    }
                    return this.yieldReturn(r[n].value);
                }
                return this.yieldBreak();
            }, n.Blank);
        });
    }, f.prototype.groupBy = function(t, e, n, r) {
        var o = this;
        return t = u.createLambda(t), e = u.createLambda(e), null != n && (n = u.createLambda(n)),
            r = u.createLambda(r), new f(function() {
                var i;
                return new a(function() {
                    i = o.toLookup(t, e, r).toEnumerable().getEnumerator();
                }, function() {
                    for (; i.moveNext();) return null == n ? this.yieldReturn(i.current()) : this.yieldReturn(n(i.current().key(), i.current()));
                    return !1;
                }, function() {
                    u.dispose(i);
                });
            });
    }, f.prototype.partitionBy = function(t, e, n, r) {
        var o = this;
        t = u.createLambda(t), e = u.createLambda(e), r = u.createLambda(r);
        var i;
        return null == n ? (i = !1, n = function(t, e) {
            return new g(t, e);
        }) : (i = !0, n = u.createLambda(n)), new f(function() {
            var c, s, l, p = [];
            return new a(function() {
                c = o.getEnumerator(), c.moveNext() && (s = t(c.current()), l = r(s), p.push(e(c.current())));
            }, function() {
                for (var o; 1 == (o = c.moveNext()) && l === r(t(c.current()));) p.push(e(c.current()));
                if (p.length > 0) {
                    var u = i ? n(s, f.from(p)) : n(s, p);
                    return o ? (s = t(c.current()), l = r(s), p = [e(c.current())]) : p = [], this.yieldReturn(u);
                }
                return !1;
            }, function() {
                u.dispose(c);
            });
        });
    }, f.prototype.buffer = function(t) {
        var e = this;
        return new f(function() {
            var n;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (var e = [], r = 0; n.moveNext();)
                    if (e.push(n.current()), ++r >= t) return this.yieldReturn(e);
                return e.length > 0 ? this.yieldReturn(e) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.aggregate = function(t, e, n) {
        return (n = u.createLambda(n))(this.scan(t, e, n).last());
    }, f.prototype.average = function(t) {
        t = u.createLambda(t);
        var e = 0,
            n = 0;
        return this.forEach(function(r) {
            e += t(r), ++n;
        }), e / n;
    }, f.prototype.count = function(t) {
        t = null == t ? n.True : u.createLambda(t);
        var e = 0;
        return this.forEach(function(n, r) {
            t(n, r) && ++e;
        }), e;
    }, f.prototype.max = function(t) {
        return null == t && (t = n.Identity), this.select(t).aggregate(function(t, e) {
            return t > e ? t : e;
        });
    }, f.prototype.min = function(t) {
        return null == t && (t = n.Identity), this.select(t).aggregate(function(t, e) {
            return e > t ? t : e;
        });
    }, f.prototype.maxBy = function(t) {
        return t = u.createLambda(t), this.aggregate(function(e, n) {
            return t(e) > t(n) ? e : n;
        });
    }, f.prototype.minBy = function(t) {
        return t = u.createLambda(t), this.aggregate(function(e, n) {
            return t(e) < t(n) ? e : n;
        });
    }, f.prototype.sum = function(t) {
        return null == t && (t = n.Identity), this.select(t).aggregate(0, function(t, e) {
            return t + e;
        });
    }, f.prototype.elementAt = function(t) {
        var e, n = !1;
        if (this.forEach(function(r, o) {
                return o == t ? (e = r, n = !0, !1) : void 0;
            }), !n) throw new Error("index is less than 0 or greater than or equal to the number of elements in source.");
        return e;
    }, f.prototype.elementAtOrDefault = function(t, n) {
        n === e && (n = null);
        var r, o = !1;
        return this.forEach(function(e, n) {
            return n == t ? (r = e, o = !0, !1) : void 0;
        }), o ? r : n;
    }, f.prototype.first = function(t) {
        if (null != t) return this.where(t).first();
        var e, n = !1;
        if (this.forEach(function(t) {
                return e = t, n = !0, !1;
            }), !n) throw new Error("first:No element satisfies the condition.");
        return e;
    }, f.prototype.firstOrDefault = function(t, n) {
        if (t !== e) {
            if (typeof t === r.Function || typeof u.createLambda(t) === r.Function) return this.where(t).firstOrDefault(e, n);
            n = t;
        }
        var o, i = !1;
        return this.forEach(function(t) {
            return o = t, i = !0, !1;
        }), i ? o : n;
    }, f.prototype.last = function(t) {
        if (null != t) return this.where(t).last();
        var e, n = !1;
        if (this.forEach(function(t) {
                n = !0, e = t;
            }), !n) throw new Error("last:No element satisfies the condition.");
        return e;
    }, f.prototype.lastOrDefault = function(t, n) {
        if (t !== e) {
            if (typeof t === r.Function || typeof u.createLambda(t) === r.Function) return this.where(t).lastOrDefault(e, n);
            n = t;
        }
        var o, i = !1;
        return this.forEach(function(t) {
            i = !0, o = t;
        }), i ? o : n;
    }, f.prototype.single = function(t) {
        if (null != t) return this.where(t).single();
        var e, n = !1;
        if (this.forEach(function(t) {
                if (n) throw new Error("single:sequence contains more than one element.");
                n = !0, e = t;
            }), !n) throw new Error("single:No element satisfies the condition.");
        return e;
    }, f.prototype.singleOrDefault = function(t, n) {
        if (n === e && (n = null), null != t) return this.where(t).singleOrDefault(null, n);
        var r, o = !1;
        return this.forEach(function(t) {
            if (o) throw new Error("single:sequence contains more than one element.");
            o = !0, r = t;
        }), o ? r : n;
    }, f.prototype.skip = function(t) {
        var e = this;
        return new f(function() {
            var n, r = 0;
            return new a(function() {
                for (n = e.getEnumerator(); r++ < t && n.moveNext(););
            }, function() {
                return n.moveNext() ? this.yieldReturn(n.current()) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.skipWhile = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n, r = 0,
                o = !1;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (; !o;) {
                    if (!n.moveNext()) return !1;
                    if (!t(n.current(), r++)) return o = !0, this.yieldReturn(n.current());
                }
                return n.moveNext() ? this.yieldReturn(n.current()) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.take = function(t) {
        var e = this;
        return new f(function() {
            var n, r = 0;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                return r++ < t && n.moveNext() ? this.yieldReturn(n.current()) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.takeWhile = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n, r = 0;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                return n.moveNext() && t(n.current(), r++) ? this.yieldReturn(n.current()) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.takeExceptLast = function(t) {
        null == t && (t = 1);
        var e = this;
        return new f(function() {
            if (0 >= t) return e.getEnumerator();
            var n, r = [];
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (; n.moveNext();) {
                    if (r.length == t) return r.push(n.current()), this.yieldReturn(r.shift());
                    r.push(n.current());
                }
                return !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.takeFromLast = function(t) {
        if (0 >= t || null == t) return f.empty();
        var e = this;
        return new f(function() {
            var n, r, o = [];
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                for (; n.moveNext();) o.length == t && o.shift(), o.push(n.current());
                return null == r && (r = f.from(o).getEnumerator()), r.moveNext() ? this.yieldReturn(r.current()) : !1;
            }, function() {
                u.dispose(r);
            });
        });
    }, f.prototype.indexOf = function(t) {
        var e = null;
        return typeof t === r.Function ? this.forEach(function(n, r) {
            return t(n, r) ? (e = r, !1) : void 0;
        }) : this.forEach(function(n, r) {
            return n === t ? (e = r, !1) : void 0;
        }), null !== e ? e : -1;
    }, f.prototype.lastIndexOf = function(t) {
        var e = -1;
        return typeof t === r.Function ? this.forEach(function(n, r) {
            t(n, r) && (e = r);
        }) : this.forEach(function(n, r) {
            n === t && (e = r);
        }), e;
    }, f.prototype.cast = function() {
        return this;
    }, f.prototype.asEnumerable = function() {
        return f.from(this);
    }, f.prototype.toArray = function() {
        var t = [];
        return this.forEach(function(e) {
            t.push(e);
        }), t;
    }, f.prototype.toLookup = function(t, n, r) {
        t = u.createLambda(t), n = u.createLambda(n), r = u.createLambda(r);
        var o = new m(r);
        return this.forEach(function(r) {
            var u = t(r),
                i = n(r),
                a = o.get(u);
            a !== e ? a.push(i) : o.add(u, [i]);
        }), new v(o);
    }, f.prototype.toObject = function(t, e) {
        t = u.createLambda(t), e = u.createLambda(e);
        var n = {};
        return this.forEach(function(r) {
            n[t(r)] = e(r);
        }), n;
    }, f.prototype.toDictionary = function(t, e, n) {
        t = u.createLambda(t), e = u.createLambda(e), n = u.createLambda(n);
        var r = new m(n);
        return this.forEach(function(n) {
            r.add(t(n), e(n));
        }), r;
    }, f.prototype.toJSONString = function(t, e) {
        if (typeof JSON === r.Undefined || null == JSON.stringify) throw new Error("toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js");
        return JSON.stringify(this.toArray(), t, e);
    }, f.prototype.toJoinedString = function(t, e) {
        return null == t && (t = ""), null == e && (e = n.Identity), this.select(e).toArray().join(t);
    }, f.prototype.doAction = function(t) {
        var e = this;
        return t = u.createLambda(t), new f(function() {
            var n, r = 0;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                return n.moveNext() ? (t(n.current(), r++), this.yieldReturn(n.current())) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.forEach = function(t) {
        t = u.createLambda(t);
        var e = 0,
            n = this.getEnumerator();
        try {
            for (; n.moveNext() && t(n.current(), e++) !== !1;);
        } finally {
            u.dispose(n);
        }
    }, f.prototype.write = function(t, e) {
        null == t && (t = ""), e = u.createLambda(e);
        var n = !0;
        this.forEach(function(r) {
            n ? n = !1 : document.write(t), document.write(e(r));
        });
    }, f.prototype.writeLine = function(t) {
        t = u.createLambda(t), this.forEach(function(e) {
            document.writeln(t(e) + "<br />");
        });
    }, f.prototype.force = function() {
        var t = this.getEnumerator();
        try {
            for (; t.moveNext(););
        } finally {
            u.dispose(t);
        }
    }, f.prototype.letBind = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n;
            return new a(function() {
                n = f.from(t(e)).getEnumerator();
            }, function() {
                return n.moveNext() ? this.yieldReturn(n.current()) : !1;
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.share = function() {
        var t, e = this,
            r = !1;
        return new p(function() {
            return new a(function() {
                null == t && (t = e.getEnumerator());
            }, function() {
                if (r) throw new Error("enumerator is disposed");
                return t.moveNext() ? this.yieldReturn(t.current()) : !1;
            }, n.Blank);
        }, function() {
            r = !0, u.dispose(t);
        });
    }, f.prototype.memoize = function() {
        var t, e, r = this,
            o = !1;
        return new p(function() {
            var u = -1;
            return new a(function() {
                null == e && (e = r.getEnumerator(), t = []);
            }, function() {
                if (o) throw new Error("enumerator is disposed");
                return u++, t.length <= u ? e.moveNext() ? this.yieldReturn(t[u] = e.current()) : !1 : this.yieldReturn(t[u]);
            }, n.Blank);
        }, function() {
            o = !0, u.dispose(e), t = null;
        });
    }, f.prototype.catchError = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                try {
                    return n.moveNext() ? this.yieldReturn(n.current()) : !1;
                } catch (e) {
                    return t(e), !1;
                }
            }, function() {
                u.dispose(n);
            });
        });
    }, f.prototype.finallyAction = function(t) {
        t = u.createLambda(t);
        var e = this;
        return new f(function() {
            var n;
            return new a(function() {
                n = e.getEnumerator();
            }, function() {
                return n.moveNext() ? this.yieldReturn(n.current()) : !1;
            }, function() {
                try {
                    u.dispose(n);
                } finally {
                    t();
                }
            });
        });
    }, f.prototype.log = function(t) {
        return t = u.createLambda(t), this.doAction(function(e) {
            typeof console !== r.Undefined && console.log(t(e));
        });
    }, f.prototype.trace = function(t, e) {
        return null == t && (t = "Trace"), e = u.createLambda(e), this.doAction(function(n) {
            typeof console !== r.Undefined && console.log(t, e(n));
        });
    };
    var s = function(t, e, n, r) {
        this.source = t, this.keySelector = u.createLambda(e), this.descending = n, this.parent = r;
    };
    s.prototype = new f(), s.prototype.createOrderedEnumerable = function(t, e) {
        return new s(this.source, t, e, this);
    }, s.prototype.thenBy = function(t) {
        return this.createOrderedEnumerable(t, !1);
    }, s.prototype.thenByDescending = function(t) {
        return this.createOrderedEnumerable(t, !0);
    }, s.prototype.getEnumerator = function() {
        var t, e, r = this,
            o = 0;
        return new a(function() {
            t = [], e = [], r.source.forEach(function(n, r) {
                t.push(n), e.push(r);
            });
            var n = l.create(r, null);
            n.GenerateKeys(t), e.sort(function(t, e) {
                return n.compare(t, e);
            });
        }, function() {
            return o < e.length ? this.yieldReturn(t[e[o++]]) : !1;
        }, n.Blank);
    };
    var l = function(t, e, n) {
        this.keySelector = t, this.descending = e, this.child = n, this.keys = null;
    };
    l.create = function(t, e) {
        var n = new l(t.keySelector, t.descending, e);
        return null != t.parent ? l.create(t.parent, n) : n;
    }, l.prototype.GenerateKeys = function(t) {
        for (var e = t.length, n = this.keySelector, r = new Array(e), o = 0; e > o; o++) r[o] = n(t[o]);
        this.keys = r, null != this.child && this.child.GenerateKeys(t);
    }, l.prototype.compare = function(t, e) {
        var n = u.compare(this.keys[t], this.keys[e]);
        return 0 == n ? null != this.child ? this.child.compare(t, e) : u.compare(t, e) : this.descending ? -n : n;
    };
    var p = function(t, e) {
        this.dispose = e, f.call(this, t);
    };
    p.prototype = new f();
    var h = function(t) {
        this.getSource = function() {
            return t;
        };
    };
    h.prototype = new f(), h.prototype.any = function(t) {
        return null == t ? this.getSource().length > 0 : f.prototype.any.apply(this, arguments);
    }, h.prototype.count = function(t) {
        return null == t ? this.getSource().length : f.prototype.count.apply(this, arguments);
    }, h.prototype.elementAt = function(t) {
        var e = this.getSource();
        return t >= 0 && t < e.length ? e[t] : f.prototype.elementAt.apply(this, arguments);
    }, h.prototype.elementAtOrDefault = function(t, n) {
        n === e && (n = null);
        var r = this.getSource();
        return t >= 0 && t < r.length ? r[t] : n;
    }, h.prototype.first = function(t) {
        var e = this.getSource();
        return null == t && e.length > 0 ? e[0] : f.prototype.first.apply(this, arguments);
    }, h.prototype.firstOrDefault = function(t, n) {
        if (t !== e) return f.prototype.firstOrDefault.apply(this, arguments);
        n = t;
        var r = this.getSource();
        return r.length > 0 ? r[0] : n;
    }, h.prototype.last = function(t) {
        var e = this.getSource();
        return null == t && e.length > 0 ? e[e.length - 1] : f.prototype.last.apply(this, arguments);
    }, h.prototype.lastOrDefault = function(t, n) {
        if (t !== e) return f.prototype.lastOrDefault.apply(this, arguments);
        n = t;
        var r = this.getSource();
        return r.length > 0 ? r[r.length - 1] : n;
    }, h.prototype.skip = function(t) {
        var e = this.getSource();
        return new f(function() {
            var r;
            return new a(function() {
                r = 0 > t ? 0 : t;
            }, function() {
                return r < e.length ? this.yieldReturn(e[r++]) : !1;
            }, n.Blank);
        });
    }, h.prototype.takeExceptLast = function(t) {
        return null == t && (t = 1), this.take(this.getSource().length - t);
    }, h.prototype.takeFromLast = function(t) {
        return this.skip(this.getSource().length - t);
    }, h.prototype.reverse = function() {
        var t = this.getSource();
        return new f(function() {
            var e;
            return new a(function() {
                e = t.length;
            }, function() {
                return e > 0 ? this.yieldReturn(t[--e]) : !1;
            }, n.Blank);
        });
    }, h.prototype.sequenceEqual = function(t, e) {
        return (t instanceof h || t instanceof Array) && null == e && f.from(t).count() != this.count() ? !1 : f.prototype.sequenceEqual.apply(this, arguments);
    }, h.prototype.toJoinedString = function(t, e) {
        var n = this.getSource();
        return null == e && n instanceof Array ? (null == t && (t = ""), n.join(t)) : f.prototype.toJoinedString.apply(this, arguments);
    }, h.prototype.getEnumerator = function() {
        var t = this.getSource(),
            e = -1;
        return {
            current: function() {
                return t[e];
            },
            moveNext: function() {
                return ++e < t.length;
            },
            dispose: n.Blank
        };
    };
    var y = function(t, e) {
        this.prevSource = t, this.prevPredicate = e;
    };
    y.prototype = new f(), y.prototype.where = function(t) {
        if (t = u.createLambda(t), t.length <= 1) {
            var e = this.prevPredicate,
                n = function(n) {
                    return e(n) && t(n);
                };
            return new y(this.prevSource, n);
        }
        return f.prototype.where.call(this, t);
    }, y.prototype.select = function(t) {
        return t = u.createLambda(t), t.length <= 1 ? new d(this.prevSource, this.prevPredicate, t) : f.prototype.select.call(this, t);
    }, y.prototype.getEnumerator = function() {
        var t, e = this.prevPredicate,
            n = this.prevSource;
        return new a(function() {
            t = n.getEnumerator();
        }, function() {
            for (; t.moveNext();)
                if (e(t.current())) return this.yieldReturn(t.current());
            return !1;
        }, function() {
            u.dispose(t);
        });
    };
    var d = function(t, e, n) {
        this.prevSource = t, this.prevPredicate = e, this.prevSelector = n;
    };
    d.prototype = new f(), d.prototype.where = function(t) {
        return t = u.createLambda(t), t.length <= 1 ? new y(this, t) : f.prototype.where.call(this, t);
    }, d.prototype.select = function(t) {
        if (t = u.createLambda(t), t.length <= 1) {
            var e = this.prevSelector,
                n = function(n) {
                    return t(e(n));
                };
            return new d(this.prevSource, this.prevPredicate, n);
        }
        return f.prototype.select.call(this, t);
    }, d.prototype.getEnumerator = function() {
        var t, e = this.prevPredicate,
            n = this.prevSelector,
            r = this.prevSource;
        return new a(function() {
            t = r.getEnumerator();
        }, function() {
            for (; t.moveNext();)
                if (null == e || e(t.current())) return this.yieldReturn(n(t.current()));
            return !1;
        }, function() {
            u.dispose(t);
        });
    };
    var m = function() {
            var t = function(t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e);
                },
                o = function(t) {
                    return null === t ? "null" : t === e ? "undefined" : typeof t.toString === r.Function ? t.toString() : Object.prototype.toString.call(t);
                },
                u = function(t, e) {
                    this.key = t, this.value = e, this.prev = null, this.next = null;
                },
                i = function() {
                    this.first = null, this.last = null;
                };
            i.prototype = {
                addLast: function(t) {
                    null != this.last ? (this.last.next = t, t.prev = this.last, this.last = t) : this.first = this.last = t;
                },
                replace: function(t, e) {
                    null != t.prev ? (t.prev.next = e, e.prev = t.prev) : this.first = e, null != t.next ? (t.next.prev = e,
                        e.next = t.next) : this.last = e;
                },
                remove: function(t) {
                    null != t.prev ? t.prev.next = t.next : this.first = t.next, null != t.next ? t.next.prev = t.prev : this.last = t.prev;
                }
            };
            var c = function(t) {
                this.countField = 0, this.entryList = new i(), this.buckets = {}, this.compareSelector = null == t ? n.Identity : t;
            };
            return c.prototype = {
                add: function(e, n) {
                    var r = this.compareSelector(e),
                        i = o(r),
                        a = new u(e, n);
                    if (t(this.buckets, i)) {
                        for (var c = this.buckets[i], f = 0; f < c.length; f++)
                            if (this.compareSelector(c[f].key) === r) return this.entryList.replace(c[f], a),
                                void(c[f] = a);
                        c.push(a);
                    } else this.buckets[i] = [a];
                    this.countField++, this.entryList.addLast(a);
                },
                get: function(n) {
                    var r = this.compareSelector(n),
                        u = o(r);
                    if (!t(this.buckets, u)) return e;
                    for (var i = this.buckets[u], a = 0; a < i.length; a++) {
                        var c = i[a];
                        if (this.compareSelector(c.key) === r) return c.value;
                    }
                    return e;
                },
                set: function(e, n) {
                    var r = this.compareSelector(e),
                        i = o(r);
                    if (t(this.buckets, i))
                        for (var a = this.buckets[i], c = 0; c < a.length; c++)
                            if (this.compareSelector(a[c].key) === r) {
                                var f = new u(e, n);
                                return this.entryList.replace(a[c], f), a[c] = f, !0;
                            }
                    return !1;
                },
                contains: function(e) {
                    var n = this.compareSelector(e),
                        r = o(n);
                    if (!t(this.buckets, r)) return !1;
                    for (var u = this.buckets[r], i = 0; i < u.length; i++)
                        if (this.compareSelector(u[i].key) === n) return !0;
                    return !1;
                },
                clear: function() {
                    this.countField = 0, this.buckets = {}, this.entryList = new i();
                },
                remove: function(e) {
                    var n = this.compareSelector(e),
                        r = o(n);
                    if (t(this.buckets, r))
                        for (var u = this.buckets[r], i = 0; i < u.length; i++)
                            if (this.compareSelector(u[i].key) === n) return this.entryList.remove(u[i]),
                                u.splice(i, 1), 0 == u.length && delete this.buckets[r], void this.countField--;
                },
                count: function() {
                    return this.countField;
                },
                toEnumerable: function() {
                    var t = this;
                    return new f(function() {
                        var e;
                        return new a(function() {
                            e = t.entryList.first;
                        }, function() {
                            if (null != e) {
                                var t = {
                                    key: e.key,
                                    value: e.value
                                };
                                return e = e.next, this.yieldReturn(t);
                            }
                            return !1;
                        }, n.Blank);
                    });
                }
            }, c;
        }(),
        v = function(t) {
            this.count = function() {
                return t.count();
            }, this.get = function(e) {
                return f.from(t.get(e));
            }, this.contains = function(e) {
                return t.contains(e);
            }, this.toEnumerable = function() {
                return t.toEnumerable().select(function(t) {
                    return new g(t.key, t.value);
                });
            };
        },
        g = function(t, e) {
            this.key = function() {
                return t;
            }, h.call(this, e);
        };
    g.prototype = new h(), typeof define === r.Function && define.amd ? define("linqjs", [], function() {
        return f;
    }) : typeof module !== r.Undefined && module.exports ? module.exports = f : t.Enumerable = f;
}(this);